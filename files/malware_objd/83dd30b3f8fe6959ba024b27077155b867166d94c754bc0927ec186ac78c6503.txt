
83dd30b3f8fe6959ba024b27077155b867166d94c754bc0927ec186ac78c6503.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	mov    DWORD PTR [ecx],0x64025304
64001006:	jmp    0x6401244b
6400100b:	int3   
6400100c:	int3   
6400100d:	int3   
6400100e:	int3   
6400100f:	int3   
64001010:	push   esi
64001011:	mov    esi,ecx
64001013:	mov    DWORD PTR [esi],0x64025304
64001019:	call   0x6401244b
6400101e:	test   BYTE PTR [esp+0x8],0x1
64001023:	je     0x6400102e
64001025:	push   esi
64001026:	call   0x64012332
6400102b:	add    esp,0x4
6400102e:	mov    eax,esi
64001030:	pop    esi
64001031:	ret    0x4
64001034:	int3   
64001035:	int3   
64001036:	int3   
64001037:	int3   
64001038:	int3   
64001039:	int3   
6400103a:	int3   
6400103b:	int3   
6400103c:	int3   
6400103d:	int3   
6400103e:	int3   
6400103f:	int3   
64001040:	mov    eax,DWORD PTR [esp+0x4]
64001044:	push   0x6402ab6c
64001049:	lea    ecx,[esp+0x8]
6400104d:	push   ecx
6400104e:	mov    DWORD PTR [esp+0xc],eax
64001052:	call   0x6401277b
64001057:	int3   
64001058:	int3   
64001059:	int3   
6400105a:	int3   
6400105b:	int3   
6400105c:	int3   
6400105d:	int3   
6400105e:	int3   
6400105f:	int3   
64001060:	push   ecx
64001061:	push   ebx
64001062:	push   esi
64001063:	push   edi
64001064:	push   0x2710
64001069:	call   DWORD PTR ds:0x64025050
6400106f:	mov    esi,DWORD PTR [esp+0x14]
64001073:	mov    ebx,DWORD PTR ds:0x64025088
64001079:	mov    DWORD PTR [esp+0xc],0x0
64001081:	xor    edi,edi
64001083:	push   0x0
64001085:	lea    eax,[esp+0x18]
64001089:	push   eax
6400108a:	push   0x4
6400108c:	lea    ecx,[esp+0x18]
64001090:	push   ecx
64001091:	push   esi
64001092:	call   ebx
64001094:	test   eax,eax
64001096:	je     0x640010a0
64001098:	add    edi,0x1
6400109b:	cmp    edi,0xa
6400109e:	jne    0x64001083
640010a0:	test   esi,esi
640010a2:	je     0x640010ba
640010a4:	call   DWORD PTR ds:0x64025044
640010aa:	push   esi
640010ab:	mov    edi,eax
640010ad:	call   DWORD PTR ds:0x64025040
640010b3:	push   edi
640010b4:	call   DWORD PTR ds:0x64025060
640010ba:	pop    edi
640010bb:	pop    esi
640010bc:	xor    eax,eax
640010be:	pop    ebx
640010bf:	pop    ecx
640010c0:	ret    0x4
640010c3:	int3   
640010c4:	int3   
640010c5:	int3   
640010c6:	int3   
640010c7:	int3   
640010c8:	int3   
640010c9:	int3   
640010ca:	int3   
640010cb:	int3   
640010cc:	int3   
640010cd:	int3   
640010ce:	int3   
640010cf:	int3   
640010d0:	sub    esp,0x14
640010d3:	push   ebx
640010d4:	mov    ebx,DWORD PTR ds:0x64025048
640010da:	push   esi
640010db:	mov    esi,DWORD PTR [esp+0x20]
640010df:	push   edi
640010e0:	mov    edi,DWORD PTR [esi+0xc]
640010e3:	push   0x2
640010e5:	push   0x0
640010e7:	push   0x0
640010e9:	lea    eax,[esp+0x18]
640010ed:	push   eax
640010ee:	mov    DWORD PTR [esp+0x1c],0x0
640010f6:	call   ebx
640010f8:	push   eax
640010f9:	push   edi
640010fa:	call   ebx
640010fc:	push   eax
640010fd:	call   DWORD PTR ds:0x6402507c
64001103:	test   eax,eax
64001105:	je     0x64001199
6400110b:	mov    ecx,DWORD PTR [esp+0xc]
6400110f:	push   0x0
64001111:	push   0x0
64001113:	push   ecx
64001114:	push   0x64001060
64001119:	push   0x0
6400111b:	push   0x0
6400111d:	call   DWORD PTR ds:0x64025070
64001123:	push   0x0
64001125:	lea    edx,[esp+0x18]
64001129:	push   edx
6400112a:	push   0x4
6400112c:	mov    edi,eax
6400112e:	mov    eax,DWORD PTR [esi+0x8]
64001131:	lea    ecx,[esp+0x30]
64001135:	push   ecx
64001136:	push   eax
64001137:	mov    DWORD PTR [esp+0x24],edi
6400113b:	mov    DWORD PTR [esp+0x38],0x0
64001143:	call   DWORD PTR ds:0x6402508c
64001149:	test   eax,eax
6400114b:	je     0x6400117f
6400114d:	cmp    DWORD PTR [esp+0x14],0x4
64001152:	jne    0x6400117f
64001154:	mov    edx,DWORD PTR [esp+0x24]
64001158:	mov    eax,DWORD PTR [esi+0x4]
6400115b:	push   0x0
6400115d:	lea    ecx,[esp+0x20]
64001161:	push   ecx
64001162:	mov    DWORD PTR [esp+0x20],edx
64001166:	push   0x4
64001168:	lea    edx,[esp+0x24]
6400116c:	push   edx
6400116d:	push   eax
6400116e:	call   DWORD PTR ds:0x64025088
64001174:	lea    ecx,[esp+0x10]
64001178:	call   0x64001680
6400117d:	jmp    0x64001199
6400117f:	test   edi,edi
64001181:	je     0x64001199
64001183:	call   DWORD PTR ds:0x64025044
64001189:	push   edi
6400118a:	mov    ebx,eax
6400118c:	call   DWORD PTR ds:0x64025040
64001192:	push   ebx
64001193:	call   DWORD PTR ds:0x64025060
64001199:	call   0x640016d0
6400119e:	push   esi
6400119f:	call   0x64012332
640011a4:	add    esp,0x4
640011a7:	pop    edi
640011a8:	pop    esi
640011a9:	xor    eax,eax
640011ab:	pop    ebx
640011ac:	add    esp,0x14
640011af:	ret    0x4
640011b2:	int3   
640011b3:	int3   
640011b4:	int3   
640011b5:	int3   
640011b6:	int3   
640011b7:	int3   
640011b8:	int3   
640011b9:	int3   
640011ba:	int3   
640011bb:	int3   
640011bc:	int3   
640011bd:	int3   
640011be:	int3   
640011bf:	int3   
640011c0:	push   0xffffffff
640011c2:	push   0x640229c9
640011c7:	mov    eax,fs:0x0
640011cd:	push   eax
640011ce:	sub    esp,0x30
640011d1:	mov    eax,ds:0x6402d09c
640011d6:	xor    eax,esp
640011d8:	mov    DWORD PTR [esp+0x2c],eax
640011dc:	push   ebx
640011dd:	push   ebp
640011de:	push   esi
640011df:	push   edi
640011e0:	mov    eax,ds:0x6402d09c
640011e5:	xor    eax,esp
640011e7:	push   eax
640011e8:	lea    eax,[esp+0x44]
640011ec:	mov    fs:0x0,eax
640011f2:	mov    esi,ecx
640011f4:	xor    ebx,ebx
640011f6:	mov    DWORD PTR [esp+0x1c],ebx
640011fa:	mov    edi,edx
640011fc:	mov    DWORD PTR [esi+0x18],0xf
64001203:	mov    DWORD PTR [esi+0x14],ebx
64001206:	mov    DWORD PTR [esp+0x20],esi
6400120a:	mov    DWORD PTR [esp+0x18],edi
6400120e:	mov    BYTE PTR [esi+0x4],bl
64001211:	mov    DWORD PTR [esp+0x4c],ebx
64001215:	mov    ebp,0x1
6400121a:	mov    DWORD PTR [esp+0x1c],ebp
6400121e:	call   DWORD PTR ds:0x64025084
64001224:	xor    ecx,ecx
64001226:	cmp    ecx,ebx
64001228:	jle    0x64001237
6400122a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6400122f:	jne    0x64001237
64001231:	cmp    WORD PTR [eax+ecx*2],bx
64001235:	je     0x6400123b
64001237:	add    ecx,ebp
64001239:	jmp    0x64001226
6400123b:	add    ecx,ecx
6400123d:	push   ecx
6400123e:	push   eax
6400123f:	lea    ecx,[esp+0x2c]
64001243:	mov    DWORD PTR [esp+0x44],0xf
6400124b:	mov    DWORD PTR [esp+0x40],ebx
6400124f:	mov    BYTE PTR [esp+0x30],bl
64001253:	call   0x64001860
64001258:	push   ebx
64001259:	lea    edx,[esp+0x28]
6400125d:	push   edx
6400125e:	or     eax,0xffffffff
64001261:	mov    DWORD PTR [esp+0x54],ebp
64001265:	call   0x640019d0
6400126a:	mov    BYTE PTR [esp+0x4c],bl
6400126e:	cmp    DWORD PTR [esp+0x3c],0x10
64001273:	jb     0x64001282
64001275:	mov    eax,DWORD PTR [esp+0x28]
64001279:	push   eax
6400127a:	call   0x64012332
6400127f:	add    esp,0x4
64001282:	mov    edx,DWORD PTR ds:0x6402e540
64001288:	mov    eax,DWORD PTR [edx+0xc]
6400128b:	mov    ecx,0x6402e540
64001290:	call   eax
64001292:	add    eax,0x10
64001295:	mov    DWORD PTR [esp+0x14],eax
64001299:	mov    DWORD PTR [esp+0x4c],0x2
640012a1:	mov    eax,DWORD PTR [edi]
640012a3:	push   eax
640012a4:	lea    ecx,[esp+0x18]
640012a8:	push   0x640276fc
640012ad:	push   ecx
640012ae:	call   0x64001d40
640012b3:	mov    edi,DWORD PTR [esp+0x20]
640012b7:	mov    ebp,DWORD PTR [edi-0xc]
640012ba:	add    esp,0xc
640012bd:	cmp    DWORD PTR [edi-0x4],0x1
640012c1:	jle    0x640012d3
640012c3:	mov    edx,ebp
640012c5:	push   edx
640012c6:	lea    ecx,[esp+0x18]
640012ca:	call   0x64001950
640012cf:	mov    edi,DWORD PTR [esp+0x14]
640012d3:	lea    eax,[ebp+ebp*1+0x2]
640012d7:	push   eax
640012d8:	push   edi
640012d9:	lea    ecx,[esp+0x2c]
640012dd:	mov    DWORD PTR [esp+0x44],0xf
640012e5:	mov    DWORD PTR [esp+0x40],ebx
640012e9:	mov    BYTE PTR [esp+0x30],bl
640012ed:	call   0x64001860
640012f2:	push   ebx
640012f3:	lea    ecx,[esp+0x28]
640012f7:	push   ecx
640012f8:	or     eax,0xffffffff
640012fb:	mov    BYTE PTR [esp+0x54],0x3
64001300:	call   0x640019d0
64001305:	cmp    DWORD PTR [esp+0x3c],0x10
6400130a:	jb     0x64001319
6400130c:	mov    edx,DWORD PTR [esp+0x28]
64001310:	push   edx
64001311:	call   0x64012332
64001316:	add    esp,0x4
64001319:	add    edi,0xfffffff0
6400131c:	mov    DWORD PTR [esp+0x3c],0xf
64001324:	mov    DWORD PTR [esp+0x38],ebx
64001328:	mov    BYTE PTR [esp+0x28],bl
6400132c:	mov    BYTE PTR [esp+0x4c],bl
64001330:	lea    eax,[edi+0xc]
64001333:	or     ecx,0xffffffff
64001336:	lock xadd DWORD PTR [eax],ecx
6400133a:	dec    ecx
6400133b:	test   ecx,ecx
6400133d:	jg     0x64001349
6400133f:	mov    ecx,DWORD PTR [edi]
64001341:	mov    edx,DWORD PTR [ecx]
64001343:	mov    eax,DWORD PTR [edx+0x4]
64001346:	push   edi
64001347:	call   eax
64001349:	mov    edx,DWORD PTR ds:0x6402e540
6400134f:	mov    eax,DWORD PTR [edx+0xc]
64001352:	mov    ecx,0x6402e540
64001357:	call   eax
64001359:	add    eax,0x10
6400135c:	mov    DWORD PTR [esp+0x14],eax
64001360:	mov    ecx,DWORD PTR [esp+0x18]
64001364:	mov    DWORD PTR [esp+0x4c],0x4
6400136c:	mov    eax,DWORD PTR [ecx+0xc]
6400136f:	push   eax
64001370:	lea    edx,[esp+0x18]
64001374:	push   0x64027708
64001379:	push   edx
6400137a:	call   0x64001d40
6400137f:	mov    edi,DWORD PTR [esp+0x20]
64001383:	mov    ebp,DWORD PTR [edi-0xc]
64001386:	add    esp,0xc
64001389:	cmp    DWORD PTR [edi-0x4],0x1
6400138d:	jle    0x6400139f
6400138f:	mov    eax,ebp
64001391:	push   eax
64001392:	lea    ecx,[esp+0x18]
64001396:	call   0x64001950
6400139b:	mov    edi,DWORD PTR [esp+0x14]
6400139f:	lea    ecx,[ebp+ebp*1+0x2]
640013a3:	push   ecx
640013a4:	push   edi
640013a5:	lea    ecx,[esp+0x2c]
640013a9:	mov    DWORD PTR [esp+0x44],0xf
640013b1:	mov    DWORD PTR [esp+0x40],ebx
640013b5:	mov    BYTE PTR [esp+0x30],bl
640013b9:	call   0x64001860
640013be:	push   ebx
640013bf:	lea    edx,[esp+0x28]
640013c3:	push   edx
640013c4:	or     eax,0xffffffff
640013c7:	mov    BYTE PTR [esp+0x54],0x5
640013cc:	call   0x640019d0
640013d1:	cmp    DWORD PTR [esp+0x3c],0x10
640013d6:	jb     0x640013e5
640013d8:	mov    eax,DWORD PTR [esp+0x28]
640013dc:	push   eax
640013dd:	call   0x64012332
640013e2:	add    esp,0x4
640013e5:	mov    ebp,0xf
640013ea:	add    edi,0xfffffff0
640013ed:	mov    DWORD PTR [esp+0x3c],ebp
640013f1:	mov    DWORD PTR [esp+0x38],ebx
640013f5:	mov    BYTE PTR [esp+0x28],bl
640013f9:	mov    BYTE PTR [esp+0x4c],bl
640013fd:	lea    ecx,[edi+0xc]
64001400:	or     edx,0xffffffff
64001403:	lock xadd DWORD PTR [ecx],edx
64001407:	dec    edx
64001408:	test   edx,edx
6400140a:	jg     0x64001416
6400140c:	mov    ecx,DWORD PTR [edi]
6400140e:	mov    eax,DWORD PTR [ecx]
64001410:	mov    edx,DWORD PTR [eax+0x4]
64001413:	push   edi
64001414:	call   edx
64001416:	push   0x2
64001418:	push   0x64027714
6400141d:	lea    eax,[esp+0x30]
64001421:	push   ebp
64001422:	push   eax
64001423:	mov    DWORD PTR [esp+0x4c],ebp
64001427:	mov    DWORD PTR [esp+0x48],ebx
6400142b:	mov    BYTE PTR [esp+0x38],bl
6400142f:	call   0x640124e8
64001434:	mov    eax,DWORD PTR [esp+0x38]
64001438:	mov    edi,0x10
6400143d:	add    esp,0x10
64001440:	cmp    DWORD PTR [esp+0x3c],edi
64001444:	mov    DWORD PTR [esp+0x38],0x2
6400144c:	jae    0x64001452
6400144e:	lea    eax,[esp+0x28]
64001452:	mov    BYTE PTR [eax+0x2],bl
64001455:	push   ebx
64001456:	lea    ecx,[esp+0x28]
6400145a:	push   ecx
6400145b:	or     eax,0xffffffff
6400145e:	mov    DWORD PTR [esp+0x54],0x6
64001466:	call   0x640019d0
6400146b:	cmp    DWORD PTR [esp+0x3c],edi
6400146f:	jb     0x6400147e
64001471:	mov    edx,DWORD PTR [esp+0x28]
64001475:	push   edx
64001476:	call   0x64012332
6400147b:	add    esp,0x4
6400147e:	mov    eax,esi
64001480:	mov    ecx,DWORD PTR [esp+0x44]
64001484:	mov    DWORD PTR fs:0x0,ecx
6400148b:	pop    ecx
6400148c:	pop    edi
6400148d:	pop    esi
6400148e:	pop    ebp
6400148f:	pop    ebx
64001490:	mov    ecx,DWORD PTR [esp+0x2c]
64001494:	xor    ecx,esp
64001496:	call   0x64012b8c
6400149b:	add    esp,0x3c
6400149e:	ret    
6400149f:	int3   
640014a0:	push   0xffffffff
640014a2:	push   0x64022b38
640014a7:	mov    eax,fs:0x0
640014ad:	push   eax
640014ae:	sub    esp,0x24
640014b1:	push   ebx
640014b2:	push   ebp
640014b3:	push   esi
640014b4:	push   edi
640014b5:	mov    eax,ds:0x6402d09c
640014ba:	xor    eax,esp
640014bc:	push   eax
640014bd:	lea    eax,[esp+0x38]
640014c1:	mov    fs:0x0,eax
640014c7:	mov    eax,DWORD PTR [esp+0x48]
640014cb:	xor    edi,edi
640014cd:	push   0x10
640014cf:	mov    DWORD PTR [esp+0x28],eax
640014d3:	mov    DWORD PTR [esp+0x18],edi
640014d7:	call   0x64012711
640014dc:	add    esp,0x4
640014df:	cmp    eax,edi
640014e1:	je     0x640014f2
640014e3:	mov    DWORD PTR [eax],edi
640014e5:	mov    DWORD PTR [eax+0x4],edi
640014e8:	mov    DWORD PTR [eax+0x8],edi
640014eb:	mov    DWORD PTR [eax+0xc],edi
640014ee:	mov    esi,eax
640014f0:	jmp    0x640014f4
640014f2:	xor    esi,esi
640014f4:	mov    DWORD PTR [esp+0x34],esi
640014f8:	push   edi
640014f9:	lea    ecx,[esp+0x2c]
640014fd:	push   ecx
640014fe:	mov    DWORD PTR [esp+0x48],edi
64001502:	lea    edx,[esp+0x24]
64001506:	push   edx
64001507:	lea    eax,[esp+0x2c]
6400150b:	push   eax
6400150c:	mov    DWORD PTR [esp+0x38],0xc
64001514:	mov    DWORD PTR [esp+0x40],0x1
6400151c:	mov    DWORD PTR [esp+0x3c],edi
64001520:	mov    DWORD PTR [esp+0x30],edi
64001524:	mov    DWORD PTR [esp+0x2c],edi
64001528:	call   DWORD PTR ds:0x64025080
6400152e:	test   eax,eax
64001530:	mov    ebx,DWORD PTR ds:0x64025044
64001536:	mov    ebp,DWORD PTR ds:0x64025040
6400153c:	je     0x64001594
6400153e:	mov    edi,DWORD PTR [esi+0x8]
64001541:	test   edi,edi
64001543:	mov    ecx,DWORD PTR [esp+0x20]
64001547:	mov    DWORD PTR [esp+0x14],ecx
6400154b:	je     0x64001561
6400154d:	call   ebx
6400154f:	push   edi
64001550:	mov    DWORD PTR [esp+0x1c],eax
64001554:	call   ebp
64001556:	mov    edx,DWORD PTR [esp+0x18]
6400155a:	push   edx
6400155b:	call   DWORD PTR ds:0x64025060
64001561:	mov    eax,DWORD PTR [esp+0x14]
64001565:	mov    DWORD PTR [esi+0x8],eax
64001568:	mov    edi,DWORD PTR [esi+0xc]
6400156b:	test   edi,edi
6400156d:	mov    ecx,DWORD PTR [esp+0x1c]
64001571:	mov    DWORD PTR [esp+0x18],ecx
64001575:	je     0x6400158b
64001577:	call   ebx
64001579:	push   edi
6400157a:	mov    DWORD PTR [esp+0x18],eax
6400157e:	call   ebp
64001580:	mov    edx,DWORD PTR [esp+0x14]
64001584:	push   edx
64001585:	call   DWORD PTR ds:0x64025060
6400158b:	mov    eax,DWORD PTR [esp+0x18]
6400158f:	mov    DWORD PTR [esi+0xc],eax
64001592:	xor    edi,edi
64001594:	push   edi
64001595:	lea    ecx,[esp+0x2c]
64001599:	push   ecx
6400159a:	lea    edx,[esp+0x24]
6400159e:	push   edx
6400159f:	lea    eax,[esp+0x2c]
640015a3:	push   eax
640015a4:	call   DWORD PTR ds:0x64025080
640015aa:	test   eax,eax
640015ac:	je     0x64001602
640015ae:	mov    edi,DWORD PTR [esi]
640015b0:	test   edi,edi
640015b2:	mov    ecx,DWORD PTR [esp+0x20]
640015b6:	mov    DWORD PTR [esp+0x18],ecx
640015ba:	je     0x640015d0
640015bc:	call   ebx
640015be:	push   edi
640015bf:	mov    DWORD PTR [esp+0x18],eax
640015c3:	call   ebp
640015c5:	mov    edx,DWORD PTR [esp+0x14]
640015c9:	push   edx
640015ca:	call   DWORD PTR ds:0x64025060
640015d0:	mov    eax,DWORD PTR [esp+0x18]
640015d4:	mov    DWORD PTR [esi],eax
640015d6:	mov    edi,DWORD PTR [esi+0x4]
640015d9:	test   edi,edi
640015db:	mov    ecx,DWORD PTR [esp+0x1c]
640015df:	mov    DWORD PTR [esp+0x18],ecx
640015e3:	je     0x640015f9
640015e5:	call   ebx
640015e7:	push   edi
640015e8:	mov    DWORD PTR [esp+0x18],eax
640015ec:	call   ebp
640015ee:	mov    edx,DWORD PTR [esp+0x14]
640015f2:	push   edx
640015f3:	call   DWORD PTR ds:0x64025060
640015f9:	mov    eax,DWORD PTR [esp+0x18]
640015fd:	mov    DWORD PTR [esi+0x4],eax
64001600:	xor    edi,edi
64001602:	mov    ecx,DWORD PTR [esp+0x24]
64001606:	mov    edx,esi
64001608:	call   0x640011c0
6400160d:	push   edi
6400160e:	push   edi
6400160f:	push   esi
64001610:	push   0x640010d0
64001615:	push   edi
64001616:	push   edi
64001617:	call   DWORD PTR ds:0x64025070
6400161d:	mov    esi,eax
6400161f:	cmp    esi,edi
64001621:	je     0x64001631
64001623:	call   ebx
64001625:	push   esi
64001626:	mov    edi,eax
64001628:	call   ebp
6400162a:	push   edi
6400162b:	call   DWORD PTR ds:0x64025060
64001631:	mov    eax,DWORD PTR [esp+0x24]
64001635:	mov    ecx,DWORD PTR [esp+0x38]
64001639:	mov    DWORD PTR fs:0x0,ecx
64001640:	pop    ecx
64001641:	pop    edi
64001642:	pop    esi
64001643:	pop    ebp
64001644:	pop    ebx
64001645:	add    esp,0x30
64001648:	ret    
64001649:	int3   
6400164a:	int3   
6400164b:	int3   
6400164c:	int3   
6400164d:	int3   
6400164e:	int3   
6400164f:	int3   
64001650:	push   esi
64001651:	mov    esi,ecx
64001653:	cmp    DWORD PTR [esi+0x18],0x10
64001657:	jb     0x64001665
64001659:	mov    eax,DWORD PTR [esi+0x4]
6400165c:	push   eax
6400165d:	call   0x64012332
64001662:	add    esp,0x4
64001665:	xor    eax,eax
64001667:	mov    DWORD PTR [esi+0x18],0xf
6400166e:	mov    DWORD PTR [esi+0x14],eax
64001671:	mov    BYTE PTR [esi+0x4],al
64001674:	pop    esi
64001675:	ret    
64001676:	int3   
64001677:	int3   
64001678:	int3   
64001679:	int3   
6400167a:	int3   
6400167b:	int3   
6400167c:	int3   
6400167d:	int3   
6400167e:	int3   
6400167f:	int3   
64001680:	push   esi
64001681:	mov    esi,ecx
64001683:	push   edi
64001684:	mov    edi,DWORD PTR [esi]
64001686:	test   edi,edi
64001688:	je     0x640016a2
6400168a:	push   ebx
6400168b:	call   DWORD PTR ds:0x64025044
64001691:	push   edi
64001692:	mov    ebx,eax
64001694:	call   DWORD PTR ds:0x64025040
6400169a:	push   ebx
6400169b:	call   DWORD PTR ds:0x64025060
640016a1:	pop    ebx
640016a2:	pop    edi
640016a3:	mov    DWORD PTR [esi],0x0
640016a9:	pop    esi
640016aa:	ret    
640016ab:	int3   
640016ac:	int3   
640016ad:	int3   
640016ae:	int3   
640016af:	int3   
640016b0:	push   esi
640016b1:	mov    esi,DWORD PTR [eax]
640016b3:	test   esi,esi
640016b5:	je     0x640016c5
640016b7:	call   0x640016d0
640016bc:	push   esi
640016bd:	call   0x64012332
640016c2:	add    esp,0x4
640016c5:	pop    esi
640016c6:	ret    
640016c7:	int3   
640016c8:	int3   
640016c9:	int3   
640016ca:	int3   
640016cb:	int3   
640016cc:	int3   
640016cd:	int3   
640016ce:	int3   
640016cf:	int3   
640016d0:	sub    esp,0x8
640016d3:	mov    eax,DWORD PTR [esi+0xc]
640016d6:	test   eax,eax
640016d8:	push   ebx
640016d9:	mov    ebx,DWORD PTR ds:0x64025040
640016df:	push   ebp
640016e0:	mov    ebp,DWORD PTR ds:0x64025060
640016e6:	push   edi
640016e7:	mov    edi,DWORD PTR ds:0x64025044
640016ed:	mov    DWORD PTR [esp+0xc],eax
640016f1:	je     0x64001707
640016f3:	call   edi
640016f5:	mov    DWORD PTR [esp+0x10],eax
640016f9:	mov    eax,DWORD PTR [esp+0xc]
640016fd:	push   eax
640016fe:	call   ebx
64001700:	mov    ecx,DWORD PTR [esp+0x10]
64001704:	push   ecx
64001705:	call   ebp
64001707:	mov    DWORD PTR [esi+0xc],0x0
6400170e:	mov    eax,DWORD PTR [esi+0x8]
64001711:	test   eax,eax
64001713:	mov    DWORD PTR [esp+0x10],eax
64001717:	je     0x6400172d
64001719:	call   edi
6400171b:	mov    edx,DWORD PTR [esp+0x10]
6400171f:	push   edx
64001720:	mov    DWORD PTR [esp+0x10],eax
64001724:	call   ebx
64001726:	mov    eax,DWORD PTR [esp+0xc]
6400172a:	push   eax
6400172b:	call   ebp
6400172d:	mov    DWORD PTR [esi+0x8],0x0
64001734:	mov    eax,DWORD PTR [esi+0x4]
64001737:	test   eax,eax
64001739:	mov    DWORD PTR [esp+0x10],eax
6400173d:	je     0x64001753
6400173f:	call   edi
64001741:	mov    ecx,DWORD PTR [esp+0x10]
64001745:	push   ecx
64001746:	mov    DWORD PTR [esp+0x10],eax
6400174a:	call   ebx
6400174c:	mov    edx,DWORD PTR [esp+0xc]
64001750:	push   edx
64001751:	call   ebp
64001753:	mov    DWORD PTR [esi+0x4],0x0
6400175a:	mov    eax,DWORD PTR [esi]
6400175c:	test   eax,eax
6400175e:	mov    DWORD PTR [esp+0x10],eax
64001762:	je     0x64001772
64001764:	call   edi
64001766:	mov    edi,eax
64001768:	mov    eax,DWORD PTR [esp+0x10]
6400176c:	push   eax
6400176d:	call   ebx
6400176f:	push   edi
64001770:	call   ebp
64001772:	pop    edi
64001773:	pop    ebp
64001774:	mov    DWORD PTR [esi],0x0
6400177a:	pop    ebx
6400177b:	add    esp,0x8
6400177e:	ret    
6400177f:	int3   
64001780:	push   ebx
64001781:	mov    ebx,DWORD PTR [esp+0x8]
64001785:	push   ebp
64001786:	mov    ebp,DWORD PTR [esp+0x10]
6400178a:	cmp    DWORD PTR [ebx+0x14],ebp
6400178d:	push   esi
6400178e:	push   edi
6400178f:	mov    esi,ecx
64001791:	jae    0x64001798
64001793:	call   0x640122ee
64001798:	mov    edi,DWORD PTR [ebx+0x14]
6400179b:	mov    eax,DWORD PTR [esp+0x1c]
6400179f:	sub    edi,ebp
640017a1:	cmp    eax,edi
640017a3:	jae    0x640017a7
640017a5:	mov    edi,eax
640017a7:	cmp    esi,ebx
640017a9:	jne    0x640017ca
640017ab:	push   0xffffffff
640017ad:	add    edi,ebp
640017af:	push   edi
640017b0:	mov    ecx,esi
640017b2:	call   0x64001ac0
640017b7:	push   ebp
640017b8:	push   0x0
640017ba:	mov    ecx,esi
640017bc:	call   0x64001ac0
640017c1:	pop    edi
640017c2:	mov    eax,esi
640017c4:	pop    esi
640017c5:	pop    ebp
640017c6:	pop    ebx
640017c7:	ret    0xc
640017ca:	cmp    edi,0xfffffffe
640017cd:	jbe    0x640017d4
640017cf:	call   0x640122af
640017d4:	mov    eax,DWORD PTR [esi+0x18]
640017d7:	cmp    eax,edi
640017d9:	jae    0x640017f6
640017db:	mov    eax,DWORD PTR [esi+0x14]
640017de:	push   eax
640017df:	push   edi
640017e0:	mov    ecx,esi
640017e2:	call   0x64001b60
640017e7:	test   edi,edi
640017e9:	jbe    0x64001851
640017eb:	cmp    DWORD PTR [ebx+0x18],0x10
640017ef:	jb     0x64001820
640017f1:	mov    edx,DWORD PTR [ebx+0x4]
640017f4:	jmp    0x64001823
640017f6:	test   edi,edi
640017f8:	jne    0x640017e9
640017fa:	cmp    eax,0x10
640017fd:	mov    DWORD PTR [esi+0x14],edi
64001800:	jb     0x64001811
64001802:	mov    eax,DWORD PTR [esi+0x4]
64001805:	pop    edi
64001806:	mov    BYTE PTR [eax],0x0
64001809:	mov    eax,esi
6400180b:	pop    esi
6400180c:	pop    ebp
6400180d:	pop    ebx
6400180e:	ret    0xc
64001811:	lea    eax,[esi+0x4]
64001814:	pop    edi
64001815:	mov    BYTE PTR [eax],0x0
64001818:	mov    eax,esi
6400181a:	pop    esi
6400181b:	pop    ebp
6400181c:	pop    ebx
6400181d:	ret    0xc
64001820:	lea    edx,[ebx+0x4]
64001823:	mov    ecx,DWORD PTR [esi+0x18]
64001826:	cmp    ecx,0x10
64001829:	lea    ebx,[esi+0x4]
6400182c:	jb     0x64001832
6400182e:	mov    eax,DWORD PTR [ebx]
64001830:	jmp    0x64001834
64001832:	mov    eax,ebx
64001834:	push   edi
64001835:	add    edx,ebp
64001837:	push   edx
64001838:	push   ecx
64001839:	push   eax
6400183a:	call   0x640124e8
6400183f:	add    esp,0x10
64001842:	cmp    DWORD PTR [esi+0x18],0x10
64001846:	mov    DWORD PTR [esi+0x14],edi
64001849:	jb     0x6400184d
6400184b:	mov    ebx,DWORD PTR [ebx]
6400184d:	mov    BYTE PTR [ebx+edi*1],0x0
64001851:	pop    edi
64001852:	mov    eax,esi
64001854:	pop    esi
64001855:	pop    ebp
64001856:	pop    ebx
64001857:	ret    0xc
6400185a:	int3   
6400185b:	int3   
6400185c:	int3   
6400185d:	int3   
6400185e:	int3   
6400185f:	int3   
64001860:	push   ebx
64001861:	push   ebp
64001862:	push   esi
64001863:	mov    esi,ecx
64001865:	mov    ecx,DWORD PTR [esi+0x18]
64001868:	cmp    ecx,0x10
6400186b:	lea    ebx,[esi+0x4]
6400186e:	jb     0x64001874
64001870:	mov    eax,DWORD PTR [ebx]
64001872:	jmp    0x64001876
64001874:	mov    eax,ebx
64001876:	mov    ebp,DWORD PTR [esp+0x10]
6400187a:	cmp    ebp,eax
6400187c:	jb     0x640018af
6400187e:	cmp    ecx,0x10
64001881:	jb     0x64001887
64001883:	mov    eax,DWORD PTR [ebx]
64001885:	jmp    0x64001889
64001887:	mov    eax,ebx
64001889:	mov    edx,DWORD PTR [esi+0x14]
6400188c:	add    edx,eax
6400188e:	cmp    edx,ebp
64001890:	jbe    0x640018af
64001892:	cmp    ecx,0x10
64001895:	jb     0x64001899
64001897:	mov    ebx,DWORD PTR [ebx]
64001899:	mov    eax,DWORD PTR [esp+0x14]
6400189d:	push   eax
6400189e:	sub    ebp,ebx
640018a0:	push   ebp
640018a1:	push   esi
640018a2:	mov    ecx,esi
640018a4:	call   0x64001780
640018a9:	pop    esi
640018aa:	pop    ebp
640018ab:	pop    ebx
640018ac:	ret    0x8
640018af:	push   edi
640018b0:	mov    edi,DWORD PTR [esp+0x18]
640018b4:	cmp    edi,0xfffffffe
640018b7:	jbe    0x640018be
640018b9:	call   0x640122af
640018be:	mov    eax,DWORD PTR [esi+0x18]
640018c1:	cmp    eax,edi
640018c3:	jae    0x640018e1
640018c5:	mov    ecx,DWORD PTR [esi+0x14]
640018c8:	push   ecx
640018c9:	push   edi
640018ca:	mov    ecx,esi
640018cc:	call   0x64001b60
640018d1:	test   edi,edi
640018d3:	jbe    0x64001918
640018d5:	mov    ecx,DWORD PTR [esi+0x18]
640018d8:	cmp    ecx,0x10
640018db:	jb     0x640018fb
640018dd:	mov    eax,DWORD PTR [ebx]
640018df:	jmp    0x640018fd
640018e1:	test   edi,edi
640018e3:	jne    0x640018d3
640018e5:	cmp    eax,0x10
640018e8:	mov    DWORD PTR [esi+0x14],edi
640018eb:	jb     0x640018ef
640018ed:	mov    ebx,DWORD PTR [ebx]
640018ef:	pop    edi
640018f0:	mov    eax,esi
640018f2:	pop    esi
640018f3:	pop    ebp
640018f4:	mov    BYTE PTR [ebx],0x0
640018f7:	pop    ebx
640018f8:	ret    0x8
640018fb:	mov    eax,ebx
640018fd:	push   edi
640018fe:	push   ebp
640018ff:	push   ecx
64001900:	push   eax
64001901:	call   0x640124e8
64001906:	add    esp,0x10
64001909:	cmp    DWORD PTR [esi+0x18],0x10
6400190d:	mov    DWORD PTR [esi+0x14],edi
64001910:	jb     0x64001914
64001912:	mov    ebx,DWORD PTR [ebx]
64001914:	mov    BYTE PTR [ebx+edi*1],0x0
64001918:	pop    edi
64001919:	mov    eax,esi
6400191b:	pop    esi
6400191c:	pop    ebp
6400191d:	pop    ebx
6400191e:	ret    0x8
64001921:	int3   
64001922:	int3   
64001923:	int3   
64001924:	int3   
64001925:	int3   
64001926:	int3   
64001927:	int3   
64001928:	int3   
64001929:	int3   
6400192a:	int3   
6400192b:	int3   
6400192c:	int3   
6400192d:	int3   
6400192e:	int3   
6400192f:	int3   
64001930:	mov    eax,DWORD PTR [ecx]
64001932:	sub    eax,0x10
64001935:	lea    ecx,[eax+0xc]
64001938:	or     edx,0xffffffff
6400193b:	lock xadd DWORD PTR [ecx],edx
6400193f:	dec    edx
64001940:	test   edx,edx
64001942:	jg     0x6400194e
64001944:	mov    ecx,DWORD PTR [eax]
64001946:	mov    edx,DWORD PTR [ecx]
64001948:	push   eax
64001949:	mov    eax,DWORD PTR [edx+0x4]
6400194c:	call   eax
6400194e:	ret    
6400194f:	int3   
64001950:	push   ecx
64001951:	push   ebx
64001952:	push   ebp
64001953:	push   esi
64001954:	mov    esi,DWORD PTR [ecx]
64001956:	mov    ebx,DWORD PTR [esi-0xc]
64001959:	sub    esi,0x10
6400195c:	mov    DWORD PTR [esp+0xc],ecx
64001960:	mov    ecx,DWORD PTR [esi]
64001962:	mov    eax,DWORD PTR [ecx]
64001964:	mov    edx,DWORD PTR [eax+0x10]
64001967:	push   edi
64001968:	call   edx
6400196a:	mov    edx,DWORD PTR [eax]
6400196c:	mov    ebp,DWORD PTR [esp+0x18]
64001970:	push   0x2
64001972:	mov    ecx,eax
64001974:	mov    eax,DWORD PTR [edx]
64001976:	push   ebp
64001977:	call   eax
64001979:	mov    edi,eax
6400197b:	test   edi,edi
6400197d:	jne    0x64001984
6400197f:	call   0x64001b50
64001984:	cmp    ebx,ebp
64001986:	jge    0x6400198a
64001988:	mov    ebp,ebx
6400198a:	lea    eax,[ebp+ebp*1+0x2]
6400198e:	push   eax
6400198f:	lea    ecx,[esi+0x10]
64001992:	push   ecx
64001993:	push   eax
64001994:	lea    ebp,[edi+0x10]
64001997:	push   ebp
64001998:	call   0x640124e8
6400199d:	add    esp,0x10
640019a0:	mov    DWORD PTR [edi+0x4],ebx
640019a3:	lea    edx,[esi+0xc]
640019a6:	or     eax,0xffffffff
640019a9:	lock xadd DWORD PTR [edx],eax
640019ad:	dec    eax
640019ae:	test   eax,eax
640019b0:	jg     0x640019bc
640019b2:	mov    ecx,DWORD PTR [esi]
640019b4:	mov    edx,DWORD PTR [ecx]
640019b6:	mov    eax,DWORD PTR [edx+0x4]
640019b9:	push   esi
640019ba:	call   eax
640019bc:	mov    ecx,DWORD PTR [esp+0x10]
640019c0:	pop    edi
640019c1:	pop    esi
640019c2:	mov    DWORD PTR [ecx],ebp
640019c4:	pop    ebp
640019c5:	pop    ebx
640019c6:	pop    ecx
640019c7:	ret    0x4
640019ca:	int3   
640019cb:	int3   
640019cc:	int3   
640019cd:	int3   
640019ce:	int3   
640019cf:	int3   
640019d0:	push   ebx
640019d1:	push   ebp
640019d2:	mov    ebp,DWORD PTR [esp+0xc]
640019d6:	push   edi
640019d7:	mov    edi,DWORD PTR [esp+0x14]
640019db:	cmp    DWORD PTR [ebp+0x14],edi
640019de:	mov    ebx,eax
640019e0:	jae    0x640019e7
640019e2:	call   0x640122ee
640019e7:	mov    eax,DWORD PTR [ebp+0x14]
640019ea:	sub    eax,edi
640019ec:	cmp    eax,ebx
640019ee:	jae    0x640019f2
640019f0:	mov    ebx,eax
640019f2:	mov    eax,DWORD PTR [esi+0x14]
640019f5:	or     ecx,0xffffffff
640019f8:	sub    ecx,eax
640019fa:	cmp    ecx,ebx
640019fc:	jbe    0x64001a05
640019fe:	lea    edx,[eax+ebx*1]
64001a01:	cmp    edx,eax
64001a03:	jae    0x64001a0a
64001a05:	call   0x640122af
64001a0a:	test   ebx,ebx
64001a0c:	jbe    0x64001ab6
64001a12:	mov    edi,DWORD PTR [esi+0x14]
64001a15:	add    edi,ebx
64001a17:	cmp    edi,0xfffffffe
64001a1a:	jbe    0x64001a21
64001a1c:	call   0x640122af
64001a21:	mov    eax,DWORD PTR [esi+0x18]
64001a24:	cmp    eax,edi
64001a26:	jae    0x64001a43
64001a28:	mov    eax,DWORD PTR [esi+0x14]
64001a2b:	push   eax
64001a2c:	push   edi
64001a2d:	mov    ecx,esi
64001a2f:	call   0x64001b60
64001a34:	test   edi,edi
64001a36:	jbe    0x64001ab6
64001a38:	cmp    DWORD PTR [ebp+0x18],0x10
64001a3c:	jb     0x64001a6b
64001a3e:	mov    ebp,DWORD PTR [ebp+0x4]
64001a41:	jmp    0x64001a6e
64001a43:	test   edi,edi
64001a45:	jne    0x64001a36
64001a47:	cmp    eax,0x10
64001a4a:	mov    DWORD PTR [esi+0x14],edi
64001a4d:	jb     0x64001a5d
64001a4f:	mov    eax,DWORD PTR [esi+0x4]
64001a52:	pop    edi
64001a53:	pop    ebp
64001a54:	mov    BYTE PTR [eax],0x0
64001a57:	mov    eax,esi
64001a59:	pop    ebx
64001a5a:	ret    0x8
64001a5d:	pop    edi
64001a5e:	lea    eax,[esi+0x4]
64001a61:	pop    ebp
64001a62:	mov    BYTE PTR [eax],0x0
64001a65:	mov    eax,esi
64001a67:	pop    ebx
64001a68:	ret    0x8
64001a6b:	add    ebp,0x4
64001a6e:	mov    eax,DWORD PTR [esi+0x18]
64001a71:	cmp    eax,0x10
64001a74:	jb     0x64001a7b
64001a76:	mov    edx,DWORD PTR [esi+0x4]
64001a79:	jmp    0x64001a7e
64001a7b:	lea    edx,[esi+0x4]
64001a7e:	mov    ecx,DWORD PTR [esi+0x14]
64001a81:	push   ebx
64001a82:	mov    ebx,DWORD PTR [esp+0x18]
64001a86:	add    ebp,ebx
64001a88:	sub    eax,ecx
64001a8a:	push   ebp
64001a8b:	push   eax
64001a8c:	add    ecx,edx
64001a8e:	push   ecx
64001a8f:	call   0x640124e8
64001a94:	add    esp,0x10
64001a97:	cmp    DWORD PTR [esi+0x18],0x10
64001a9b:	mov    DWORD PTR [esi+0x14],edi
64001a9e:	jb     0x64001aaf
64001aa0:	mov    eax,DWORD PTR [esi+0x4]
64001aa3:	mov    BYTE PTR [eax+edi*1],0x0
64001aa7:	pop    edi
64001aa8:	pop    ebp
64001aa9:	mov    eax,esi
64001aab:	pop    ebx
64001aac:	ret    0x8
64001aaf:	lea    eax,[esi+0x4]
64001ab2:	mov    BYTE PTR [eax+edi*1],0x0
64001ab6:	pop    edi
64001ab7:	pop    ebp
64001ab8:	mov    eax,esi
64001aba:	pop    ebx
64001abb:	ret    0x8
64001abe:	int3   
64001abf:	int3   
64001ac0:	push   ebx
64001ac1:	mov    ebx,DWORD PTR [esp+0x8]
64001ac5:	push   esi
64001ac6:	mov    esi,ecx
64001ac8:	cmp    DWORD PTR [esi+0x14],ebx
64001acb:	push   edi
64001acc:	jae    0x64001ad3
64001ace:	call   0x640122ee
64001ad3:	mov    eax,DWORD PTR [esi+0x14]
64001ad6:	mov    edi,DWORD PTR [esp+0x14]
64001ada:	sub    eax,ebx
64001adc:	cmp    eax,edi
64001ade:	jae    0x64001ae2
64001ae0:	mov    edi,eax
64001ae2:	test   edi,edi
64001ae4:	jbe    0x64001b3b
64001ae6:	mov    ecx,DWORD PTR [esi+0x18]
64001ae9:	cmp    ecx,0x10
64001aec:	push   ebp
64001aed:	lea    ebp,[esi+0x4]
64001af0:	jb     0x64001afb
64001af2:	mov    edx,DWORD PTR [ebp+0x0]
64001af5:	mov    DWORD PTR [esp+0x14],edx
64001af9:	jmp    0x64001aff
64001afb:	mov    DWORD PTR [esp+0x14],ebp
64001aff:	cmp    ecx,0x10
64001b02:	jb     0x64001b09
64001b04:	mov    edx,DWORD PTR [ebp+0x0]
64001b07:	jmp    0x64001b0b
64001b09:	mov    edx,ebp
64001b0b:	sub    eax,edi
64001b0d:	push   eax
64001b0e:	mov    eax,DWORD PTR [esp+0x18]
64001b12:	add    eax,ebx
64001b14:	add    eax,edi
64001b16:	push   eax
64001b17:	sub    ecx,ebx
64001b19:	push   ecx
64001b1a:	add    edx,ebx
64001b1c:	push   edx
64001b1d:	call   0x64012563
64001b22:	mov    eax,DWORD PTR [esi+0x14]
64001b25:	sub    eax,edi
64001b27:	add    esp,0x10
64001b2a:	cmp    DWORD PTR [esi+0x18],0x10
64001b2e:	mov    DWORD PTR [esi+0x14],eax
64001b31:	jb     0x64001b36
64001b33:	mov    ebp,DWORD PTR [ebp+0x0]
64001b36:	mov    BYTE PTR [eax+ebp*1],0x0
64001b3a:	pop    ebp
64001b3b:	pop    edi
64001b3c:	mov    eax,esi
64001b3e:	pop    esi
64001b3f:	pop    ebx
64001b40:	ret    0x8
64001b43:	int3   
64001b44:	int3   
64001b45:	int3   
64001b46:	int3   
64001b47:	int3   
64001b48:	int3   
64001b49:	int3   
64001b4a:	int3   
64001b4b:	int3   
64001b4c:	int3   
64001b4d:	int3   
64001b4e:	int3   
64001b4f:	int3   
64001b50:	push   0x8007000e
64001b55:	call   0x64001040
64001b5a:	int3   
64001b5b:	int3   
64001b5c:	int3   
64001b5d:	int3   
64001b5e:	int3   
64001b5f:	int3   
64001b60:	push   ebp
64001b61:	mov    ebp,esp
64001b63:	push   0xffffffff
64001b65:	push   0x640226a0
64001b6a:	mov    eax,fs:0x0
64001b70:	push   eax
64001b71:	sub    esp,0x1c
64001b74:	push   ebx
64001b75:	push   esi
64001b76:	push   edi
64001b77:	mov    eax,ds:0x6402d09c
64001b7c:	xor    eax,ebp
64001b7e:	push   eax
64001b7f:	lea    eax,[ebp-0xc]
64001b82:	mov    fs:0x0,eax
64001b88:	mov    DWORD PTR [ebp-0x10],esp
64001b8b:	mov    edi,ecx
64001b8d:	mov    DWORD PTR [ebp-0x14],edi
64001b90:	mov    eax,DWORD PTR [ebp+0x8]
64001b93:	mov    esi,eax
64001b95:	or     esi,0xf
64001b98:	cmp    esi,0xfffffffe
64001b9b:	jbe    0x64001ba1
64001b9d:	mov    esi,eax
64001b9f:	jmp    0x64001bc3
64001ba1:	mov    ebx,DWORD PTR [edi+0x18]
64001ba4:	mov    eax,0xaaaaaaab
64001ba9:	mul    esi
64001bab:	mov    ecx,ebx
64001bad:	shr    ecx,1
64001baf:	shr    edx,1
64001bb1:	cmp    edx,ecx
64001bb3:	jae    0x64001bc3
64001bb5:	mov    eax,0xfffffffe
64001bba:	sub    eax,ecx
64001bbc:	cmp    ebx,eax
64001bbe:	ja     0x64001bc3
64001bc0:	lea    esi,[ecx+ebx*1]
64001bc3:	xor    ebx,ebx
64001bc5:	lea    ecx,[esi+0x1]
64001bc8:	cmp    ecx,ebx
64001bca:	mov    DWORD PTR [ebp-0x4],ebx
64001bcd:	ja     0x64001bdf
64001bcf:	xor    ecx,ecx
64001bd1:	push   ecx
64001bd2:	call   0x64012711
64001bd7:	add    esp,0x4
64001bda:	mov    DWORD PTR [ebp+0x8],eax
64001bdd:	jmp    0x64001c37
64001bdf:	or     eax,0xffffffff
64001be2:	xor    edx,edx
64001be4:	div    ecx
64001be6:	cmp    eax,0x1
64001be9:	jae    0x64001bd1
64001beb:	lea    ecx,[ebp-0x18]
64001bee:	push   ecx
64001bef:	lea    ecx,[ebp-0x28]
64001bf2:	mov    DWORD PTR [ebp-0x18],ebx
64001bf5:	call   0x6401238d
64001bfa:	push   0x6402aba4
64001bff:	lea    edx,[ebp-0x28]
64001c02:	push   edx
64001c03:	mov    DWORD PTR [ebp-0x28],0x64025304
64001c0a:	call   0x6401277b
64001c0f:	mov    eax,DWORD PTR [ebp+0x8]
64001c12:	mov    ecx,DWORD PTR [ebp-0x14]
64001c15:	mov    DWORD PTR [ebp-0x1c],eax
64001c18:	add    eax,0x1
64001c1b:	mov    DWORD PTR [ebp-0x10],esp
64001c1e:	push   eax
64001c1f:	mov    BYTE PTR [ebp-0x4],0x2
64001c23:	call   0x64001ce0
64001c28:	mov    DWORD PTR [ebp+0x8],eax
64001c2b:	mov    eax,0x64001c31
64001c30:	ret    
64001c31:	mov    edi,DWORD PTR [ebp-0x14]
64001c34:	mov    esi,DWORD PTR [ebp-0x1c]
64001c37:	mov    ebx,DWORD PTR [ebp+0xc]
64001c3a:	test   ebx,ebx
64001c3c:	jbe    0x64001c5e
64001c3e:	cmp    DWORD PTR [edi+0x18],0x10
64001c42:	jb     0x64001c49
64001c44:	mov    eax,DWORD PTR [edi+0x4]
64001c47:	jmp    0x64001c4c
64001c49:	lea    eax,[edi+0x4]
64001c4c:	mov    ecx,DWORD PTR [ebp+0x8]
64001c4f:	push   ebx
64001c50:	push   eax
64001c51:	lea    eax,[esi+0x1]
64001c54:	push   eax
64001c55:	push   ecx
64001c56:	call   0x640124e8
64001c5b:	add    esp,0x10
64001c5e:	cmp    DWORD PTR [edi+0x18],0x10
64001c62:	jb     0x64001c70
64001c64:	mov    edx,DWORD PTR [edi+0x4]
64001c67:	push   edx
64001c68:	call   0x64012332
64001c6d:	add    esp,0x4
64001c70:	cmp    esi,0x10
64001c73:	mov    ecx,DWORD PTR [ebp+0x8]
64001c76:	lea    eax,[edi+0x4]
64001c79:	mov    BYTE PTR [eax],0x0
64001c7c:	mov    DWORD PTR [eax],ecx
64001c7e:	mov    DWORD PTR [edi+0x18],esi
64001c81:	mov    DWORD PTR [edi+0x14],ebx
64001c84:	jb     0x64001c88
64001c86:	mov    eax,ecx
64001c88:	mov    BYTE PTR [eax+ebx*1],0x0
64001c8c:	mov    ecx,DWORD PTR [ebp-0xc]
64001c8f:	mov    DWORD PTR fs:0x0,ecx
64001c96:	pop    ecx
64001c97:	pop    edi
64001c98:	pop    esi
64001c99:	pop    ebx
64001c9a:	mov    esp,ebp
64001c9c:	pop    ebp
64001c9d:	ret    0x8
64001ca0:	mov    esi,DWORD PTR [ebp-0x14]
64001ca3:	cmp    DWORD PTR [esi+0x18],0x10
64001ca7:	jb     0x64001cb5
64001ca9:	mov    eax,DWORD PTR [esi+0x4]
64001cac:	push   eax
64001cad:	call   0x64012332
64001cb2:	add    esp,0x4
64001cb5:	push   0x0
64001cb7:	mov    DWORD PTR [esi+0x18],0xf
64001cbe:	mov    DWORD PTR [esi+0x14],0x0
64001cc5:	push   0x0
64001cc7:	mov    BYTE PTR [esi+0x4],0x0
64001ccb:	call   0x6401277b
64001cd0:	int3   
64001cd1:	int3   
64001cd2:	int3   
64001cd3:	int3   
64001cd4:	int3   
64001cd5:	int3   
64001cd6:	int3   
64001cd7:	int3   
64001cd8:	int3   
64001cd9:	int3   
64001cda:	int3   
64001cdb:	int3   
64001cdc:	int3   
64001cdd:	int3   
64001cde:	int3   
64001cdf:	int3   
64001ce0:	mov    ecx,DWORD PTR [esp+0x4]
64001ce4:	sub    esp,0xc
64001ce7:	test   ecx,ecx
64001ce9:	ja     0x64001cfc
64001ceb:	xor    ecx,ecx
64001ced:	push   ecx
64001cee:	call   0x64012711
64001cf3:	add    esp,0x4
64001cf6:	add    esp,0xc
64001cf9:	ret    0x4
64001cfc:	or     eax,0xffffffff
64001cff:	xor    edx,edx
64001d01:	div    ecx
64001d03:	cmp    eax,0x1
64001d06:	jae    0x64001ced
64001d08:	lea    eax,[esp+0x10]
64001d0c:	push   eax
64001d0d:	lea    ecx,[esp+0x4]
64001d11:	mov    DWORD PTR [esp+0x14],0x0
64001d19:	call   0x6401238d
64001d1e:	push   0x6402aba4
64001d23:	lea    ecx,[esp+0x4]
64001d27:	push   ecx
64001d28:	mov    DWORD PTR [esp+0x8],0x64025304
64001d30:	call   0x6401277b
64001d35:	int3   
64001d36:	int3   
64001d37:	int3   
64001d38:	int3   
64001d39:	int3   
64001d3a:	int3   
64001d3b:	int3   
64001d3c:	int3   
64001d3d:	int3   
64001d3e:	int3   
64001d3f:	int3   
64001d40:	mov    ecx,DWORD PTR [esp+0x8]
64001d44:	lea    eax,[esp+0xc]
64001d48:	push   eax
64001d49:	push   ecx
64001d4a:	mov    ecx,DWORD PTR [esp+0xc]
64001d4e:	call   0x64001d80
64001d53:	ret    
64001d54:	int3   
64001d55:	int3   
64001d56:	int3   
64001d57:	int3   
64001d58:	int3   
64001d59:	int3   
64001d5a:	int3   
64001d5b:	int3   
64001d5c:	int3   
64001d5d:	int3   
64001d5e:	int3   
64001d5f:	int3   
64001d60:	mov    eax,DWORD PTR [esp+0x4]
64001d64:	push   esi
64001d65:	push   eax
64001d66:	mov    esi,ecx
64001d68:	call   0x640123f3
64001d6d:	mov    DWORD PTR [esi],0x64025304
64001d73:	mov    eax,esi
64001d75:	pop    esi
64001d76:	ret    0x4
64001d79:	int3   
64001d7a:	int3   
64001d7b:	int3   
64001d7c:	int3   
64001d7d:	int3   
64001d7e:	int3   
64001d7f:	int3   
64001d80:	push   ebx
64001d81:	mov    ebx,DWORD PTR [esp+0x8]
64001d85:	test   ebx,ebx
64001d87:	push   edi
64001d88:	mov    edi,ecx
64001d8a:	jne    0x64001d96
64001d8c:	push   0x80070057
64001d91:	call   0x64001040
64001d96:	push   ebp
64001d97:	mov    ebp,DWORD PTR [esp+0x14]
64001d9b:	push   esi
64001d9c:	push   ebp
64001d9d:	push   ebx
64001d9e:	call   0x64012e06
64001da3:	mov    esi,eax
64001da5:	mov    eax,DWORD PTR [edi]
64001da7:	mov    edx,DWORD PTR [eax-0x8]
64001daa:	sub    eax,0x10
64001dad:	mov    ecx,0x1
64001db2:	sub    ecx,DWORD PTR [eax+0xc]
64001db5:	sub    edx,esi
64001db7:	add    esp,0x8
64001dba:	or     ecx,edx
64001dbc:	jge    0x64001dc6
64001dbe:	push   esi
64001dbf:	mov    ecx,edi
64001dc1:	call   0x64001e00
64001dc6:	mov    ecx,DWORD PTR [edi]
64001dc8:	push   ebp
64001dc9:	push   ebx
64001dca:	lea    eax,[esi+0x1]
64001dcd:	push   eax
64001dce:	push   ecx
64001dcf:	call   0x64012f9b
64001dd4:	add    esp,0x10
64001dd7:	test   esi,esi
64001dd9:	jl     0x64001df4
64001ddb:	mov    eax,DWORD PTR [edi]
64001ddd:	cmp    esi,DWORD PTR [eax-0x8]
64001de0:	jg     0x64001df4
64001de2:	mov    DWORD PTR [eax-0xc],esi
64001de5:	mov    edx,DWORD PTR [edi]
64001de7:	mov    WORD PTR [edx+esi*2],0x0
64001ded:	pop    esi
64001dee:	pop    ebp
64001def:	pop    edi
64001df0:	pop    ebx
64001df1:	ret    0x8
64001df4:	push   0x80070057
64001df9:	call   0x64001040
64001dfe:	int3   
64001dff:	int3   
64001e00:	mov    eax,DWORD PTR [ecx]
64001e02:	mov    edx,DWORD PTR [esp+0x4]
64001e06:	sub    eax,0x10
64001e09:	push   esi
64001e0a:	mov    esi,DWORD PTR [eax+0x4]
64001e0d:	cmp    esi,edx
64001e0f:	jle    0x64001e13
64001e11:	mov    edx,esi
64001e13:	cmp    DWORD PTR [eax+0xc],0x1
64001e17:	pop    esi
64001e18:	jle    0x64001e23
64001e1a:	mov    DWORD PTR [esp+0x4],edx
64001e1e:	jmp    0x64001950
64001e23:	mov    eax,DWORD PTR [eax+0x8]
64001e26:	cmp    eax,edx
64001e28:	jge    0x64001e49
64001e2a:	cmp    eax,0x400
64001e2f:	jle    0x64001e38
64001e31:	add    eax,0x400
64001e36:	jmp    0x64001e3a
64001e38:	add    eax,eax
64001e3a:	cmp    eax,edx
64001e3c:	jge    0x64001e40
64001e3e:	mov    eax,edx
64001e40:	mov    DWORD PTR [esp+0x4],eax
64001e44:	jmp    0x64001e50
64001e49:	ret    0x4
64001e4c:	int3   
64001e4d:	int3   
64001e4e:	int3   
64001e4f:	int3   
64001e50:	mov    edx,DWORD PTR [esp+0x4]
64001e54:	push   esi
64001e55:	mov    esi,ecx
64001e57:	mov    eax,DWORD PTR [esi]
64001e59:	mov    ecx,DWORD PTR [eax-0x10]
64001e5c:	sub    eax,0x10
64001e5f:	cmp    DWORD PTR [eax+0x8],edx
64001e62:	jge    0x64001e79
64001e64:	test   edx,edx
64001e66:	jle    0x64001e79
64001e68:	push   edi
64001e69:	mov    edi,DWORD PTR [ecx]
64001e6b:	push   0x2
64001e6d:	push   edx
64001e6e:	push   eax
64001e6f:	mov    eax,DWORD PTR [edi+0x8]
64001e72:	call   eax
64001e74:	test   eax,eax
64001e76:	pop    edi
64001e77:	jne    0x64001e7e
64001e79:	call   0x64001b50
64001e7e:	add    eax,0x10
64001e81:	mov    DWORD PTR [esi],eax
64001e83:	pop    esi
64001e84:	ret    0x4
64001e87:	int3   
64001e88:	int3   
64001e89:	int3   
64001e8a:	int3   
64001e8b:	int3   
64001e8c:	int3   
64001e8d:	int3   
64001e8e:	int3   
64001e8f:	int3   
64001e90:	mov    eax,DWORD PTR [esp+0x4]
64001e94:	cmp    eax,0x50
64001e97:	ja     0x64001ebb
64001e99:	movzx  ecx,BYTE PTR [eax+0x64001ed8]
64001ea0:	jmp    DWORD PTR [ecx*4+0x64001ec8]
64001ea7:	push   0x8007000e
64001eac:	call   0x64001040
64001eb1:	push   0x80070057
64001eb6:	call   0x64001040
64001ebb:	push   0x80004005
64001ec0:	call   0x64001040
64001ec5:	ret    
64001ec6:	mov    edi,edi
64001ec8:	lds    ebx,FWORD PTR [esi]
64001eca:	add    BYTE PTR [edi+eiz*4+0x1e],ah
64001ece:	add    BYTE PTR [ecx+esi*4+0x1e],ah
64001ed2:	add    BYTE PTR [ebx+edi*4+0x1e],ah
64001ed6:	add    BYTE PTR [eax+eax*1+0x3],ah
64001eda:	add    eax,DWORD PTR [ebx]
64001edc:	add    eax,DWORD PTR [ebx]
64001ede:	add    eax,DWORD PTR [ebx]
64001ee0:	add    eax,DWORD PTR [ebx]
64001ee2:	add    eax,DWORD PTR [ebx]
64001ee4:	add    DWORD PTR [ebx],eax
64001ee6:	add    eax,DWORD PTR [ebx]
64001ee8:	add    eax,DWORD PTR [ebx]
64001eea:	add    eax,DWORD PTR [ebx]
64001eec:	add    eax,DWORD PTR [ebx]
64001eee:	add    al,BYTE PTR [ebx]
64001ef0:	add    eax,DWORD PTR [ebx]
64001ef2:	add    eax,DWORD PTR [ebx]
64001ef4:	add    eax,DWORD PTR [ebx]
64001ef6:	add    eax,DWORD PTR [ebx]
64001ef8:	add    eax,DWORD PTR [ebx]
64001efa:	add    al,BYTE PTR [ebx]
64001efc:	add    eax,DWORD PTR [ebx]
64001efe:	add    eax,DWORD PTR [ebx]
64001f00:	add    eax,DWORD PTR [ebx]
64001f02:	add    eax,DWORD PTR [ebx]
64001f04:	add    eax,DWORD PTR [ebx]
64001f06:	add    eax,DWORD PTR [ebx]
64001f08:	add    eax,DWORD PTR [ebx]
64001f0a:	add    eax,DWORD PTR [ebx]
64001f0c:	add    eax,DWORD PTR [ebx]
64001f0e:	add    eax,DWORD PTR [ebx]
64001f10:	add    eax,DWORD PTR [ebx]
64001f12:	add    eax,DWORD PTR [ebx]
64001f14:	add    eax,DWORD PTR [ebx]
64001f16:	add    eax,DWORD PTR [ebx]
64001f18:	add    eax,DWORD PTR [ebx]
64001f1a:	add    eax,DWORD PTR [ebx]
64001f1c:	add    eax,DWORD PTR [ebx]
64001f1e:	add    eax,DWORD PTR [ebx]
64001f20:	add    eax,DWORD PTR [ebx]
64001f22:	add    eax,DWORD PTR [ebx]
64001f24:	add    eax,DWORD PTR [ebx]
64001f26:	add    eax,DWORD PTR [ebx]
64001f28:	add    ah,cl
64001f2a:	int3   
64001f2b:	int3   
64001f2c:	int3   
64001f2d:	int3   
64001f2e:	int3   
64001f2f:	int3   
64001f30:	push   ebx
64001f31:	mov    ebx,DWORD PTR [esp+0x8]
64001f35:	push   edi
64001f36:	mov    edi,DWORD PTR [esp+0x10]
64001f3a:	push   edi
64001f3b:	push   ebx
64001f3c:	call   DWORD PTR ds:0x64025034
64001f42:	test   eax,eax
64001f44:	jne    0x64001f49
64001f46:	pop    edi
64001f47:	pop    ebx
64001f48:	ret    
64001f49:	push   esi
64001f4a:	push   eax
64001f4b:	call   DWORD PTR ds:0x64025030
64001f51:	mov    esi,eax
64001f53:	test   esi,esi
64001f55:	je     0x64001f84
64001f57:	push   edi
64001f58:	push   ebx
64001f59:	call   DWORD PTR ds:0x6402502c
64001f5f:	mov    ecx,DWORD PTR [esp+0x18]
64001f63:	add    eax,esi
64001f65:	and    ecx,0xf
64001f68:	jbe    0x64001f80
64001f6a:	lea    ebx,[ebx+0x0]
64001f70:	cmp    esi,eax
64001f72:	jae    0x64001f84
64001f74:	sub    ecx,0x1
64001f77:	movzx  edx,WORD PTR [esi]
64001f7a:	lea    esi,[esi+edx*2+0x2]
64001f7e:	jne    0x64001f70
64001f80:	cmp    esi,eax
64001f82:	jb     0x64001f8a
64001f84:	pop    esi
64001f85:	pop    edi
64001f86:	xor    eax,eax
64001f88:	pop    ebx
64001f89:	ret    
64001f8a:	mov    ax,WORD PTR [esi]
64001f8d:	neg    ax
64001f90:	sbb    eax,eax
64001f92:	and    eax,esi
64001f94:	pop    esi
64001f95:	pop    edi
64001f96:	pop    ebx
64001f97:	ret    
64001f98:	int3   
64001f99:	int3   
64001f9a:	int3   
64001f9b:	int3   
64001f9c:	int3   
64001f9d:	int3   
64001f9e:	int3   
64001f9f:	int3   
64001fa0:	push   ebx
64001fa1:	push   ebp
64001fa2:	push   esi
64001fa3:	push   edi
64001fa4:	xor    edi,edi
64001fa6:	push   edi
64001fa7:	mov    ecx,0x6402e4cc
64001fac:	call   0x64011f61
64001fb1:	mov    esi,eax
64001fb3:	test   esi,esi
64001fb5:	lea    ebp,[edi+0x1]
64001fb8:	je     0x64002007
64001fba:	mov    ebx,DWORD PTR [esp+0x14]
64001fbe:	mov    edi,edi
64001fc0:	test   edi,edi
64001fc2:	jne    0x64002007
64001fc4:	mov    eax,DWORD PTR [esp+0x18]
64001fc8:	mov    ecx,ebx
64001fca:	shr    ecx,0x4
64001fcd:	add    ecx,0x1
64001fd0:	push   eax
64001fd1:	movzx  edx,cx
64001fd4:	push   edx
64001fd5:	push   0x6
64001fd7:	push   esi
64001fd8:	call   DWORD PTR ds:0x6402503c
64001fde:	test   eax,eax
64001fe0:	je     0x64001ff3
64001fe2:	push   ebx
64001fe3:	push   eax
64001fe4:	push   esi
64001fe5:	call   0x64001f30
64001fea:	mov    edi,eax
64001fec:	add    esp,0xc
64001fef:	test   edi,edi
64001ff1:	jne    0x6400200e
64001ff3:	push   ebp
64001ff4:	mov    ecx,0x6402e4cc
64001ff9:	call   0x64011f61
64001ffe:	mov    esi,eax
64002000:	add    ebp,0x1
64002003:	test   esi,esi
64002005:	jne    0x64001fc0
64002007:	pop    edi
64002008:	pop    esi
64002009:	pop    ebp
6400200a:	xor    eax,eax
6400200c:	pop    ebx
6400200d:	ret    
6400200e:	pop    edi
6400200f:	mov    eax,esi
64002011:	pop    esi
64002012:	pop    ebp
64002013:	pop    ebx
64002014:	ret    
64002015:	int3   
64002016:	int3   
64002017:	int3   
64002018:	int3   
64002019:	int3   
6400201a:	int3   
6400201b:	int3   
6400201c:	int3   
6400201d:	int3   
6400201e:	int3   
6400201f:	int3   
64002020:	push   0xffffffff
64002022:	push   0x64022958
64002027:	mov    eax,fs:0x0
6400202d:	push   eax
6400202e:	push   ecx
6400202f:	push   esi
64002030:	mov    eax,ds:0x6402d09c
64002035:	xor    eax,esp
64002037:	push   eax
64002038:	lea    eax,[esp+0xc]
6400203c:	mov    fs:0x0,eax
64002042:	mov    esi,ecx
64002044:	mov    DWORD PTR [esp+0x8],esi
64002048:	call   0x6401237c
6400204d:	xor    eax,eax
6400204f:	mov    DWORD PTR [esp+0x14],eax
64002053:	lea    ecx,[esi+0xc]
64002056:	mov    DWORD PTR [esi],0x64025448
6400205c:	push   0xffffffff
6400205e:	mov    DWORD PTR [ecx+0x14],eax
64002061:	mov    DWORD PTR [ecx+0x18],0xf
64002068:	push   eax
64002069:	mov    BYTE PTR [ecx+0x4],al
6400206c:	mov    eax,DWORD PTR [esp+0x24]
64002070:	push   eax
64002071:	call   0x64001780
64002076:	mov    eax,esi
64002078:	mov    ecx,DWORD PTR [esp+0xc]
6400207c:	mov    DWORD PTR fs:0x0,ecx
64002083:	pop    ecx
64002084:	pop    esi
64002085:	add    esp,0x10
64002088:	ret    0x4
6400208b:	int3   
6400208c:	int3   
6400208d:	int3   
6400208e:	int3   
6400208f:	int3   
64002090:	push   esi
64002091:	mov    esi,ecx
64002093:	mov    DWORD PTR [esi],0x64025448
64002099:	cmp    DWORD PTR [esi+0x24],0x10
6400209d:	jb     0x640020ab
6400209f:	mov    eax,DWORD PTR [esi+0x10]
640020a2:	push   eax
640020a3:	call   0x64012332
640020a8:	add    esp,0x4
640020ab:	xor    eax,eax
640020ad:	mov    DWORD PTR [esi+0x24],0xf
640020b4:	mov    DWORD PTR [esi+0x20],eax
640020b7:	mov    BYTE PTR [esi+0x10],al
640020ba:	mov    ecx,esi
640020bc:	pop    esi
640020bd:	jmp    0x6401244b
640020c2:	int3   
640020c3:	int3   
640020c4:	int3   
640020c5:	int3   
640020c6:	int3   
640020c7:	int3   
640020c8:	int3   
640020c9:	int3   
640020ca:	int3   
640020cb:	int3   
640020cc:	int3   
640020cd:	int3   
640020ce:	int3   
640020cf:	int3   
640020d0:	push   0xffffffff
640020d2:	push   0x64022928
640020d7:	mov    eax,fs:0x0
640020dd:	push   eax
640020de:	push   ecx
640020df:	push   esi
640020e0:	push   edi
640020e1:	mov    eax,ds:0x6402d09c
640020e6:	xor    eax,esp
640020e8:	push   eax
640020e9:	lea    eax,[esp+0x10]
640020ed:	mov    fs:0x0,eax
640020f3:	mov    esi,ecx
640020f5:	mov    DWORD PTR [esp+0xc],esi
640020f9:	mov    edi,DWORD PTR [esp+0x20]
640020fd:	push   edi
640020fe:	call   0x640123f3
64002103:	xor    edx,edx
64002105:	mov    DWORD PTR [esp+0x18],edx
64002109:	push   0xffffffff
6400210b:	lea    ecx,[esi+0xc]
6400210e:	mov    DWORD PTR [esi],0x64025448
64002114:	lea    eax,[edi+0xc]
64002117:	push   edx
64002118:	mov    DWORD PTR [ecx+0x18],0xf
6400211f:	mov    DWORD PTR [ecx+0x14],edx
64002122:	push   eax
64002123:	mov    BYTE PTR [ecx+0x4],dl
64002126:	call   0x64001780
6400212b:	mov    eax,esi
6400212d:	mov    ecx,DWORD PTR [esp+0x10]
64002131:	mov    DWORD PTR fs:0x0,ecx
64002138:	pop    ecx
64002139:	pop    edi
6400213a:	pop    esi
6400213b:	add    esp,0x10
6400213e:	ret    0x4
64002141:	int3   
64002142:	int3   
64002143:	int3   
64002144:	int3   
64002145:	int3   
64002146:	int3   
64002147:	int3   
64002148:	int3   
64002149:	int3   
6400214a:	int3   
6400214b:	int3   
6400214c:	int3   
6400214d:	int3   
6400214e:	int3   
6400214f:	int3   
64002150:	push   0xffffffff
64002152:	push   0x64023b6b
64002157:	mov    eax,fs:0x0
6400215d:	push   eax
6400215e:	sub    esp,0x41c
64002164:	mov    eax,ds:0x6402d09c
64002169:	xor    eax,esp
6400216b:	mov    DWORD PTR [esp+0x418],eax
64002172:	push   ebx
64002173:	push   ebp
64002174:	push   esi
64002175:	push   edi
64002176:	mov    eax,ds:0x6402d09c
6400217b:	xor    eax,esp
6400217d:	push   eax
6400217e:	lea    eax,[esp+0x430]
64002185:	mov    fs:0x0,eax
6400218b:	mov    esi,DWORD PTR [esp+0x440]
64002192:	mov    ebx,DWORD PTR [esp+0x444]
64002199:	mov    ebp,DWORD PTR [esp+0x448]
640021a0:	lea    eax,[esp+0x224]
640021a7:	push   eax
640021a8:	push   0x100
640021ad:	mov    DWORD PTR [esp+0x20],esi
640021b1:	mov    DWORD PTR [esp+0x1c],0x0
640021b9:	call   0x6400cfe0
640021be:	call   eax
640021c0:	cmp    eax,0x100
640021c5:	jbe    0x640021d8
640021c7:	push   0x64027718
640021cc:	mov    ecx,esi
640021ce:	call   0x64002540
640021d3:	jmp    0x64002365
640021d8:	lea    ecx,[esp+0x1c]
640021dc:	push   ecx
640021dd:	push   0x0
640021df:	lea    edx,[esp+0x22c]
640021e6:	push   0x6402771c
640021eb:	push   edx
640021ec:	call   0x6400d0c0
640021f1:	call   eax
640021f3:	test   eax,eax
640021f5:	je     0x640021c7
640021f7:	mov    edi,DWORD PTR ds:0x64025050
640021fd:	xor    esi,esi
640021ff:	nop
64002200:	cmp    esi,0x708
64002206:	je     0x640022e3
6400220c:	lea    eax,[esp+0x1c]
64002210:	push   eax
64002211:	call   0x6400ce20
64002216:	call   eax
64002218:	test   eax,eax
6400221a:	jne    0x6400222d
6400221c:	push   esi
6400221d:	call   edi
6400221f:	add    esi,0xc8
64002225:	cmp    esi,0x7d0
6400222b:	jne    0x64002200
6400222d:	xor    esi,esi
6400222f:	cmp    esi,0x708
64002235:	je     0x640022e3
6400223b:	lea    ecx,[esp+0x1c]
6400223f:	push   0x0
64002241:	push   ecx
64002242:	call   0x6400d1a0
64002247:	call   eax
64002249:	test   eax,eax
6400224b:	jne    0x6400225e
6400224d:	push   esi
6400224e:	call   edi
64002250:	add    esi,0xc8
64002256:	cmp    esi,0x7d0
6400225c:	jne    0x6400222f
6400225e:	lea    eax,[esp+0x1c]
64002262:	lea    edx,[eax+0x2]
64002265:	mov    cx,WORD PTR [eax]
64002268:	add    eax,0x2
6400226b:	test   cx,cx
6400226e:	jne    0x64002265
64002270:	sub    eax,edx
64002272:	sar    eax,1
64002274:	push   eax
64002275:	lea    edx,[esp+0x20]
64002279:	push   edx
6400227a:	mov    ecx,ebp
6400227c:	call   0x64002a90
64002281:	lea    eax,[esp+0x1c]
64002285:	push   eax
64002286:	lea    ecx,[esp+0x18]
6400228a:	call   0x64002540
6400228f:	push   0x64027724
64002294:	lea    ecx,[esp+0x18]
64002298:	mov    DWORD PTR [esp+0x43c],0x0
640022a3:	call   0x64002610
640022a8:	mov    eax,DWORD PTR [ebx]
640022aa:	mov    ecx,DWORD PTR [eax-0xc]
640022ad:	push   ecx
640022ae:	push   eax
640022af:	lea    ecx,[esp+0x1c]
640022b3:	call   0x64002990
640022b8:	mov    esi,DWORD PTR [esp+0x14]
640022bc:	mov    ecx,DWORD PTR [esi-0x10]
640022bf:	mov    edx,DWORD PTR [ecx]
640022c1:	mov    eax,DWORD PTR [edx+0x10]
640022c4:	add    esi,0xfffffff0
640022c7:	call   eax
640022c9:	cmp    DWORD PTR [esi+0xc],0x0
640022cd:	lea    edx,[esi+0xc]
640022d0:	jl     0x640022f5
640022d2:	cmp    eax,DWORD PTR [esi]
640022d4:	jne    0x640022f5
640022d6:	mov    edi,esi
640022d8:	mov    ecx,0x1
640022dd:	lock xadd DWORD PTR [edx],ecx
640022e1:	jmp    0x64002331
640022e3:	mov    esi,DWORD PTR [esp+0x18]
640022e7:	push   0x64027718
640022ec:	mov    ecx,esi
640022ee:	call   0x64002540
640022f3:	jmp    0x64002365
640022f5:	mov    ecx,DWORD PTR [esi+0x4]
640022f8:	mov    edx,DWORD PTR [eax]
640022fa:	mov    edx,DWORD PTR [edx]
640022fc:	push   0x2
640022fe:	push   ecx
640022ff:	mov    ecx,eax
64002301:	call   edx
64002303:	mov    edi,eax
64002305:	test   edi,edi
64002307:	jne    0x6400230e
64002309:	jmp    0x64001b50
6400230e:	mov    eax,DWORD PTR [esi+0x4]
64002311:	mov    DWORD PTR [edi+0x4],eax
64002314:	mov    eax,DWORD PTR [esi+0x4]
64002317:	lea    ecx,[eax+eax*1+0x2]
6400231b:	push   ecx
6400231c:	add    esi,0x10
6400231f:	lea    edx,[eax+eax*1+0x2]
64002323:	push   esi
64002324:	push   edx
64002325:	lea    eax,[edi+0x10]
64002328:	push   eax
64002329:	call   0x640124e8
6400232e:	add    esp,0x10
64002331:	mov    esi,DWORD PTR [esp+0x18]
64002335:	mov    DWORD PTR [esp+0x438],0xffffffff
64002340:	mov    eax,DWORD PTR [esp+0x14]
64002344:	add    edi,0x10
64002347:	add    eax,0xfffffff0
6400234a:	mov    DWORD PTR [esi],edi
6400234c:	lea    ecx,[eax+0xc]
6400234f:	or     edx,0xffffffff
64002352:	lock xadd DWORD PTR [ecx],edx
64002356:	dec    edx
64002357:	test   edx,edx
64002359:	jg     0x64002365
6400235b:	mov    ecx,DWORD PTR [eax]
6400235d:	mov    edx,DWORD PTR [ecx]
6400235f:	push   eax
64002360:	mov    eax,DWORD PTR [edx+0x4]
64002363:	call   eax
64002365:	mov    eax,esi
64002367:	mov    ecx,DWORD PTR [esp+0x430]
6400236e:	mov    DWORD PTR fs:0x0,ecx
64002375:	pop    ecx
64002376:	pop    edi
64002377:	pop    esi
64002378:	pop    ebp
64002379:	pop    ebx
6400237a:	mov    ecx,DWORD PTR [esp+0x418]
64002381:	xor    ecx,esp
64002383:	call   0x64012b8c
64002388:	add    esp,0x428
6400238e:	ret    
6400238f:	int3   
64002390:	push   0xffffffff
64002392:	push   0x64023b40
64002397:	mov    eax,fs:0x0
6400239d:	push   eax
6400239e:	sub    esp,0x4c
640023a1:	push   ebx
640023a2:	push   esi
640023a3:	push   edi
640023a4:	mov    eax,ds:0x6402d09c
640023a9:	xor    eax,esp
640023ab:	push   eax
640023ac:	lea    eax,[esp+0x5c]
640023b0:	mov    fs:0x0,eax
640023b6:	xor    ebx,ebx
640023b8:	push   ebx
640023b9:	push   0x80
640023be:	push   0x2
640023c0:	push   ebx
640023c1:	push   ebx
640023c2:	mov    DWORD PTR [esp+0x78],ebx
640023c6:	mov    edi,DWORD PTR [esp+0x80]
640023cd:	push   0x40000000
640023d2:	push   edi
640023d3:	call   0x6400cf00
640023d8:	call   eax
640023da:	mov    esi,eax
640023dc:	mov    DWORD PTR [esp+0x10],esi
640023e0:	cmp    esi,0xffffffff
640023e3:	mov    BYTE PTR [esp+0x64],0x1
640023e8:	push   ebx
640023e9:	jne    0x6400242b
640023eb:	push   0x6402771a
640023f0:	lea    ecx,[esp+0x20]
640023f4:	mov    DWORD PTR [esp+0x38],0xf
640023fc:	mov    DWORD PTR [esp+0x34],ebx
64002400:	mov    BYTE PTR [esp+0x24],bl
64002404:	call   0x64001860
64002409:	lea    eax,[esp+0x18]
6400240d:	push   eax
6400240e:	lea    ecx,[esp+0x38]
64002412:	mov    BYTE PTR [esp+0x68],0x2
64002417:	call   0x64002020
6400241c:	push   0x6402abdc
64002421:	lea    ecx,[esp+0x38]
64002425:	push   ecx
64002426:	call   0x6401277b
6400242b:	mov    eax,DWORD PTR [esp+0x78]
6400242f:	mov    ecx,DWORD PTR [esp+0x74]
64002433:	lea    edx,[esp+0x18]
64002437:	push   edx
64002438:	push   eax
64002439:	push   ecx
6400243a:	push   esi
6400243b:	call   DWORD PTR ds:0x64025088
64002441:	test   eax,eax
64002443:	jne    0x64002486
64002445:	push   ebx
64002446:	push   0x6402771a
6400244b:	lea    ecx,[esp+0x20]
6400244f:	mov    DWORD PTR [esp+0x38],0xf
64002457:	mov    DWORD PTR [esp+0x34],ebx
6400245b:	mov    BYTE PTR [esp+0x24],bl
6400245f:	call   0x64001860
64002464:	lea    edx,[esp+0x18]
64002468:	push   edx
64002469:	lea    ecx,[esp+0x38]
6400246d:	mov    BYTE PTR [esp+0x68],0x3
64002472:	call   0x64002020
64002477:	push   0x6402abdc
6400247c:	lea    eax,[esp+0x38]
64002480:	push   eax
64002481:	call   0x6401277b
64002486:	cmp    esi,ebx
64002488:	je     0x640024a0
6400248a:	call   DWORD PTR ds:0x64025044
64002490:	push   esi
64002491:	mov    ebx,eax
64002493:	call   DWORD PTR ds:0x64025040
64002499:	push   ebx
6400249a:	call   DWORD PTR ds:0x64025060
640024a0:	lea    eax,[edi-0x10]
640024a3:	mov    DWORD PTR [esp+0x64],0xffffffff
640024ab:	lea    ecx,[eax+0xc]
640024ae:	or     edx,0xffffffff
640024b1:	lock xadd DWORD PTR [ecx],edx
640024b5:	dec    edx
640024b6:	test   edx,edx
640024b8:	jg     0x640024c4
640024ba:	mov    ecx,DWORD PTR [eax]
640024bc:	mov    edx,DWORD PTR [ecx]
640024be:	push   eax
640024bf:	mov    eax,DWORD PTR [edx+0x4]
640024c2:	call   eax
640024c4:	mov    ecx,DWORD PTR [esp+0x5c]
640024c8:	mov    DWORD PTR fs:0x0,ecx
640024cf:	pop    ecx
640024d0:	pop    edi
640024d1:	pop    esi
640024d2:	pop    ebx
640024d3:	add    esp,0x58
640024d6:	ret    
640024d7:	int3   
640024d8:	int3   
640024d9:	int3   
640024da:	int3   
640024db:	int3   
640024dc:	int3   
640024dd:	int3   
640024de:	int3   
640024df:	int3   
640024e0:	sub    esp,0x8
640024e3:	mov    DWORD PTR [esp],0x0
640024ea:	mov    DWORD PTR [esp+0x4],0x0
640024f2:	call   DWORD PTR ds:0x6402d06c
640024f8:	mov    eax,DWORD PTR [esp+0x10]
640024fc:	mov    eax,DWORD PTR [eax]
640024fe:	lea    ecx,[esp+0x4]
64002502:	push   ecx
64002503:	push   0x0
64002505:	lea    edx,[esp+0x8]
64002509:	push   edx
6400250a:	push   0x0
6400250c:	push   0x0
6400250e:	push   0x5
64002510:	push   0x1
64002512:	push   eax
64002513:	call   0x6400dc20
64002518:	call   eax
6400251a:	test   eax,eax
6400251c:	jne    0x6400253a
6400251e:	mov    ecx,DWORD PTR [esp]
64002521:	mov    eax,DWORD PTR [esp+0xc]
64002525:	mov    eax,DWORD PTR [eax]
64002527:	push   0x0
64002529:	push   ecx
6400252a:	push   0x0
6400252c:	push   0x0
6400252e:	push   0x4
64002530:	push   0x1
64002532:	push   eax
64002533:	call   0x6400dd00
64002538:	call   eax
6400253a:	add    esp,0x8
6400253d:	ret    
6400253e:	int3   
6400253f:	int3   
64002540:	push   0xffffffff
64002542:	push   0x64022e98
64002547:	mov    eax,fs:0x0
6400254d:	push   eax
6400254e:	push   ecx
6400254f:	push   esi
64002550:	push   edi
64002551:	mov    eax,ds:0x6402d09c
64002556:	xor    eax,esp
64002558:	push   eax
64002559:	lea    eax,[esp+0x10]
6400255d:	mov    fs:0x0,eax
64002563:	mov    edi,ecx
64002565:	mov    DWORD PTR [esp+0xc],edi
64002569:	mov    eax,ds:0x6402e540
6400256e:	mov    edx,DWORD PTR [eax+0xc]
64002571:	mov    ecx,0x6402e540
64002576:	call   edx
64002578:	add    eax,0x10
6400257b:	mov    DWORD PTR [edi],eax
6400257d:	mov    edx,DWORD PTR [esp+0x20]
64002581:	test   edx,edx
64002583:	mov    DWORD PTR [esp+0x18],0x0
6400258b:	je     0x640025b2
6400258d:	test   edx,0xffff0000
64002593:	jne    0x640025b6
64002595:	movzx  esi,dx
64002598:	push   0x0
6400259a:	push   esi
6400259b:	call   0x64001fa0
640025a0:	add    esp,0x8
640025a3:	test   eax,eax
640025a5:	je     0x640025d8
640025a7:	push   esi
640025a8:	push   eax
640025a9:	mov    ecx,edi
640025ab:	call   0x640028c0
640025b0:	jmp    0x640025d8
640025b2:	xor    eax,eax
640025b4:	jmp    0x640025cf
640025b6:	mov    eax,edx
640025b8:	lea    esi,[eax+0x2]
640025bb:	jmp    0x640025c0
640025bd:	lea    ecx,[ecx+0x0]
640025c0:	mov    cx,WORD PTR [eax]
640025c3:	add    eax,0x2
640025c6:	test   cx,cx
640025c9:	jne    0x640025c0
640025cb:	sub    eax,esi
640025cd:	sar    eax,1
640025cf:	push   eax
640025d0:	push   edx
640025d1:	mov    ecx,edi
640025d3:	call   0x64002a90
640025d8:	mov    eax,edi
640025da:	mov    ecx,DWORD PTR [esp+0x10]
640025de:	mov    DWORD PTR fs:0x0,ecx
640025e5:	pop    ecx
640025e6:	pop    edi
640025e7:	pop    esi
640025e8:	add    esp,0x10
640025eb:	ret    0x4
640025ee:	int3   
640025ef:	int3   
640025f0:	mov    eax,DWORD PTR [esp+0x4]
640025f4:	mov    eax,DWORD PTR [eax]
640025f6:	push   esi
640025f7:	mov    esi,ecx
640025f9:	mov    ecx,DWORD PTR [eax-0xc]
640025fc:	push   ecx
640025fd:	push   eax
640025fe:	mov    ecx,esi
64002600:	call   0x64002990
64002605:	mov    eax,esi
64002607:	pop    esi
64002608:	ret    0x4
6400260b:	int3   
6400260c:	int3   
6400260d:	int3   
6400260e:	int3   
6400260f:	int3   
64002610:	push   0xffffffff
64002612:	push   0x64022e68
64002617:	mov    eax,fs:0x0
6400261d:	push   eax
6400261e:	push   ecx
6400261f:	push   esi
64002620:	mov    eax,ds:0x6402d09c
64002625:	xor    eax,esp
64002627:	push   eax
64002628:	lea    eax,[esp+0xc]
6400262c:	mov    fs:0x0,eax
64002632:	mov    esi,ecx
64002634:	mov    eax,DWORD PTR [esi]
64002636:	mov    ecx,DWORD PTR [eax-0x10]
64002639:	test   ecx,ecx
6400263b:	je     0x64002648
6400263d:	mov    edx,DWORD PTR [ecx]
6400263f:	mov    eax,DWORD PTR [edx+0x10]
64002642:	call   eax
64002644:	test   eax,eax
64002646:	jne    0x64002658
64002648:	mov    edx,DWORD PTR ds:0x6402e540
6400264e:	mov    eax,DWORD PTR [edx+0x10]
64002651:	mov    ecx,0x6402e540
64002656:	call   eax
64002658:	mov    ecx,DWORD PTR [esp+0x1c]
6400265c:	push   eax
6400265d:	push   ecx
6400265e:	lea    ecx,[esp+0x10]
64002662:	call   0x64002710
64002667:	mov    DWORD PTR [esp+0x14],0x0
6400266f:	mov    eax,DWORD PTR [esp+0x8]
64002673:	mov    ecx,DWORD PTR [eax-0xc]
64002676:	push   ecx
64002677:	push   eax
64002678:	mov    ecx,esi
6400267a:	call   0x64002990
6400267f:	mov    DWORD PTR [esp+0x14],0xffffffff
64002687:	mov    eax,DWORD PTR [esp+0x8]
6400268b:	add    eax,0xfffffff0
6400268e:	lea    edx,[eax+0xc]
64002691:	or     ecx,0xffffffff
64002694:	lock xadd DWORD PTR [edx],ecx
64002698:	dec    ecx
64002699:	test   ecx,ecx
6400269b:	jg     0x640026a7
6400269d:	mov    ecx,DWORD PTR [eax]
6400269f:	mov    edx,DWORD PTR [ecx]
640026a1:	push   eax
640026a2:	mov    eax,DWORD PTR [edx+0x4]
640026a5:	call   eax
640026a7:	mov    eax,esi
640026a9:	mov    ecx,DWORD PTR [esp+0xc]
640026ad:	mov    DWORD PTR fs:0x0,ecx
640026b4:	pop    ecx
640026b5:	pop    esi
640026b6:	add    esp,0x10
640026b9:	ret    0x4
640026bc:	int3   
640026bd:	int3   
640026be:	int3   
640026bf:	int3   
640026c0:	mov    edx,DWORD PTR [esp+0x4]
640026c4:	push   esi
640026c5:	mov    esi,ecx
640026c7:	mov    eax,edx
640026c9:	push   edi
640026ca:	mov    DWORD PTR [esi+0x18],0xf
640026d1:	mov    DWORD PTR [esi+0x14],0x0
640026d8:	mov    BYTE PTR [esi+0x4],0x0
640026dc:	lea    edi,[eax+0x1]
640026df:	nop
640026e0:	mov    cl,BYTE PTR [eax]
640026e2:	add    eax,0x1
640026e5:	test   cl,cl
640026e7:	jne    0x640026e0
640026e9:	sub    eax,edi
640026eb:	push   eax
640026ec:	push   edx
640026ed:	mov    ecx,esi
640026ef:	call   0x64001860
640026f4:	pop    edi
640026f5:	mov    eax,esi
640026f7:	pop    esi
640026f8:	ret    0x4
640026fb:	int3   
640026fc:	int3   
640026fd:	int3   
640026fe:	int3   
640026ff:	int3   
64002700:	mov    eax,DWORD PTR [ecx]
64002702:	push   eax
64002703:	call   0x64012332
64002708:	pop    ecx
64002709:	ret    
6400270a:	int3   
6400270b:	int3   
6400270c:	int3   
6400270d:	int3   
6400270e:	int3   
6400270f:	int3   
64002710:	push   0xffffffff
64002712:	push   0x64022e38
64002717:	mov    eax,fs:0x0
6400271d:	push   eax
6400271e:	push   ecx
6400271f:	push   esi
64002720:	push   edi
64002721:	mov    eax,ds:0x6402d09c
64002726:	xor    eax,esp
64002728:	push   eax
64002729:	lea    eax,[esp+0x10]
6400272d:	mov    fs:0x0,eax
64002733:	mov    esi,ecx
64002735:	mov    DWORD PTR [esp+0xc],esi
64002739:	mov    ecx,DWORD PTR [esp+0x24]
6400273d:	xor    eax,eax
6400273f:	test   ecx,ecx
64002741:	setne  al
64002744:	test   eax,eax
64002746:	jne    0x64002752
64002748:	push   0x80004005
6400274d:	call   0x64001040
64002752:	mov    eax,DWORD PTR [ecx]
64002754:	mov    edx,DWORD PTR [eax+0xc]
64002757:	call   edx
64002759:	add    eax,0x10
6400275c:	mov    DWORD PTR [esi],eax
6400275e:	mov    eax,DWORD PTR [esp+0x20]
64002762:	test   eax,eax
64002764:	mov    DWORD PTR [esp+0x18],0x0
6400276c:	je     0x64002792
6400276e:	test   eax,0xffff0000
64002773:	jne    0x64002792
64002775:	movzx  edi,ax
64002778:	push   0x0
6400277a:	push   edi
6400277b:	call   0x64001fa0
64002780:	add    esp,0x8
64002783:	test   eax,eax
64002785:	je     0x6400279a
64002787:	push   edi
64002788:	push   eax
64002789:	mov    ecx,esi
6400278b:	call   0x640028c0
64002790:	jmp    0x6400279a
64002792:	push   eax
64002793:	mov    ecx,esi
64002795:	call   0x640027b0
6400279a:	mov    eax,esi
6400279c:	mov    ecx,DWORD PTR [esp+0x10]
640027a0:	mov    DWORD PTR fs:0x0,ecx
640027a7:	pop    ecx
640027a8:	pop    edi
640027a9:	pop    esi
640027aa:	add    esp,0x10
640027ad:	ret    0x8
640027b0:	push   ebx
640027b1:	mov    ebx,DWORD PTR [esp+0x8]
640027b5:	test   ebx,ebx
640027b7:	push   ebp
640027b8:	push   esi
640027b9:	push   edi
640027ba:	mov    edi,ecx
640027bc:	je     0x64002834
640027be:	call   DWORD PTR ds:0x6402d06c
640027c4:	mov    ebp,DWORD PTR ds:0x64025024
640027ca:	push   0x0
640027cc:	push   0x0
640027ce:	push   0xffffffff
640027d0:	push   ebx
640027d1:	push   0x0
640027d3:	push   eax
640027d4:	call   ebp
640027d6:	mov    esi,eax
640027d8:	sub    esi,0x1
640027db:	test   esi,esi
640027dd:	jle    0x64002834
640027df:	mov    eax,DWORD PTR [edi]
640027e1:	mov    edx,DWORD PTR [eax-0x8]
640027e4:	sub    eax,0x10
640027e7:	mov    ecx,0x1
640027ec:	sub    ecx,DWORD PTR [eax+0xc]
640027ef:	sub    edx,esi
640027f1:	or     ecx,edx
640027f3:	jge    0x640027fd
640027f5:	push   esi
640027f6:	mov    ecx,edi
640027f8:	call   0x64001e00
640027fd:	mov    eax,DWORD PTR [edi]
640027ff:	push   esi
64002800:	push   eax
64002801:	push   0xffffffff
64002803:	push   ebx
64002804:	push   0x0
64002806:	call   DWORD PTR ds:0x6402d06c
6400280c:	push   eax
6400280d:	call   ebp
6400280f:	mov    eax,DWORD PTR [edi]
64002811:	cmp    esi,DWORD PTR [eax-0x8]
64002814:	jg     0x6400282a
64002816:	mov    DWORD PTR [eax-0xc],esi
64002819:	mov    eax,DWORD PTR [edi]
6400281b:	mov    WORD PTR [eax+esi*2],0x0
64002821:	mov    eax,edi
64002823:	pop    edi
64002824:	pop    esi
64002825:	pop    ebp
64002826:	pop    ebx
64002827:	ret    0x4
6400282a:	push   0x80070057
6400282f:	call   0x64001040
64002834:	mov    ecx,edi
64002836:	call   0x64002a20
6400283b:	mov    eax,edi
6400283d:	pop    edi
6400283e:	pop    esi
6400283f:	pop    ebp
64002840:	pop    ebx
64002841:	ret    0x4
64002844:	int3   
64002845:	int3   
64002846:	int3   
64002847:	int3   
64002848:	int3   
64002849:	int3   
6400284a:	int3   
6400284b:	int3   
6400284c:	int3   
6400284d:	int3   
6400284e:	int3   
6400284f:	int3   
64002850:	push   esi
64002851:	mov    esi,DWORD PTR [esp+0x8]
64002855:	mov    ecx,DWORD PTR [esi]
64002857:	mov    eax,DWORD PTR [ecx]
64002859:	mov    edx,DWORD PTR [eax+0x10]
6400285c:	push   edi
6400285d:	call   edx
6400285f:	cmp    DWORD PTR [esi+0xc],0x0
64002863:	lea    ecx,[esi+0xc]
64002866:	jl     0x6400287c
64002868:	cmp    eax,DWORD PTR [esi]
6400286a:	jne    0x6400287c
6400286c:	mov    edi,esi
6400286e:	mov    eax,0x1
64002873:	lock xadd DWORD PTR [ecx],eax
64002877:	mov    eax,edi
64002879:	pop    edi
6400287a:	pop    esi
6400287b:	ret    
6400287c:	mov    ecx,DWORD PTR [esi+0x4]
6400287f:	mov    edx,DWORD PTR [eax]
64002881:	mov    edx,DWORD PTR [edx]
64002883:	push   0x2
64002885:	push   ecx
64002886:	mov    ecx,eax
64002888:	call   edx
6400288a:	mov    edi,eax
6400288c:	test   edi,edi
6400288e:	jne    0x64002895
64002890:	jmp    0x64001b50
64002895:	mov    eax,DWORD PTR [esi+0x4]
64002898:	mov    DWORD PTR [edi+0x4],eax
6400289b:	mov    eax,DWORD PTR [esi+0x4]
6400289e:	lea    eax,[eax+eax*1+0x2]
640028a2:	push   eax
640028a3:	add    esi,0x10
640028a6:	push   esi
640028a7:	push   eax
640028a8:	lea    ecx,[edi+0x10]
640028ab:	push   ecx
640028ac:	call   0x640124e8
640028b1:	add    esp,0x10
640028b4:	mov    eax,edi
640028b6:	pop    edi
640028b7:	pop    esi
640028b8:	ret    
640028b9:	int3   
640028ba:	int3   
640028bb:	int3   
640028bc:	int3   
640028bd:	int3   
640028be:	int3   
640028bf:	int3   
640028c0:	push   ebx
640028c1:	push   esi
640028c2:	mov    esi,DWORD PTR [esp+0x10]
640028c6:	mov    eax,esi
640028c8:	shr    eax,0x4
640028cb:	push   edi
640028cc:	mov    edi,DWORD PTR [esp+0x10]
640028d0:	add    eax,0x1
640028d3:	mov    ebx,ecx
640028d5:	movzx  ecx,ax
640028d8:	push   0x6
640028da:	push   ecx
640028db:	push   edi
640028dc:	call   DWORD PTR ds:0x64025038
640028e2:	test   eax,eax
640028e4:	je     0x640028f7
640028e6:	push   esi
640028e7:	push   eax
640028e8:	push   edi
640028e9:	call   0x64001f30
640028ee:	mov    esi,eax
640028f0:	add    esp,0xc
640028f3:	test   esi,esi
640028f5:	jne    0x640028ff
640028f7:	pop    edi
640028f8:	pop    esi
640028f9:	xor    eax,eax
640028fb:	pop    ebx
640028fc:	ret    0x8
640028ff:	mov    eax,DWORD PTR [ebx]
64002901:	movzx  edi,WORD PTR [esi]
64002904:	sub    eax,0x10
64002907:	mov    edx,0x1
6400290c:	sub    edx,DWORD PTR [eax+0xc]
6400290f:	mov    eax,DWORD PTR [eax+0x8]
64002912:	sub    eax,edi
64002914:	or     edx,eax
64002916:	jge    0x64002920
64002918:	push   edi
64002919:	mov    ecx,ebx
6400291b:	call   0x64001e00
64002920:	movzx  eax,WORD PTR [esi]
64002923:	cmp    eax,0xffffffff
64002926:	push   ebp
64002927:	mov    ebp,DWORD PTR [ebx]
64002929:	lea    edx,[esi+0x2]
6400292c:	jne    0x64002945
6400292e:	mov    eax,edx
64002930:	lea    esi,[eax+0x2]
64002933:	mov    cx,WORD PTR [eax]
64002936:	add    eax,0x2
64002939:	test   cx,cx
6400293c:	jne    0x64002933
6400293e:	sub    eax,esi
64002940:	sar    eax,1
64002942:	add    eax,0x1
64002945:	lea    ecx,[eax+eax*1]
64002948:	push   ecx
64002949:	push   edx
6400294a:	lea    esi,[edi+edi*1]
6400294d:	push   esi
6400294e:	push   ebp
6400294f:	call   0x640124e8
64002954:	push   eax
64002955:	call   0x64001e90
6400295a:	add    esp,0x14
6400295d:	test   edi,edi
6400295f:	pop    ebp
64002960:	jl     0x6400297f
64002962:	mov    eax,DWORD PTR [ebx]
64002964:	cmp    edi,DWORD PTR [eax-0x8]
64002967:	jg     0x6400297f
64002969:	mov    DWORD PTR [eax-0xc],edi
6400296c:	mov    edx,DWORD PTR [ebx]
6400296e:	pop    edi
6400296f:	mov    WORD PTR [esi+edx*1],0x0
64002975:	pop    esi
64002976:	mov    eax,0x1
6400297b:	pop    ebx
6400297c:	ret    0x8
6400297f:	push   0x80070057
64002984:	call   0x64001040
64002989:	int3   
6400298a:	int3   
6400298b:	int3   
6400298c:	int3   
6400298d:	int3   
6400298e:	int3   
6400298f:	int3   
64002990:	push   ebx
64002991:	push   ebp
64002992:	push   esi
64002993:	mov    esi,DWORD PTR [esp+0x10]
64002997:	mov    ebp,ecx
64002999:	mov    eax,DWORD PTR [ebp+0x0]
6400299c:	mov    ebx,DWORD PTR [eax-0xc]
6400299f:	mov    ecx,DWORD PTR [esp+0x14]
640029a3:	sub    esi,eax
640029a5:	mov    edx,0x1
640029aa:	sub    edx,DWORD PTR [eax-0x4]
640029ad:	mov    eax,DWORD PTR [eax-0x8]
640029b0:	push   edi
640029b1:	lea    edi,[ebx+ecx*1]
640029b4:	sub    eax,edi
640029b6:	sar    esi,1
640029b8:	or     edx,eax
640029ba:	jge    0x640029c4
640029bc:	push   edi
640029bd:	mov    ecx,ebp
640029bf:	call   0x64001e00
640029c4:	cmp    esi,ebx
640029c6:	mov    ecx,DWORD PTR [ebp+0x0]
640029c9:	ja     0x640029d2
640029cb:	lea    edx,[ecx+esi*2]
640029ce:	mov    DWORD PTR [esp+0x14],edx
640029d2:	mov    eax,DWORD PTR [esp+0x18]
640029d6:	mov    edx,DWORD PTR [esp+0x14]
640029da:	add    eax,eax
640029dc:	push   eax
640029dd:	push   edx
640029de:	push   eax
640029df:	lea    eax,[ecx+ebx*2]
640029e2:	push   eax
640029e3:	call   0x640124e8
640029e8:	add    esp,0x10
640029eb:	test   edi,edi
640029ed:	jl     0x64002a0a
640029ef:	mov    eax,DWORD PTR [ebp+0x0]
640029f2:	cmp    edi,DWORD PTR [eax-0x8]
640029f5:	jg     0x64002a0a
640029f7:	mov    DWORD PTR [eax-0xc],edi
640029fa:	mov    ecx,DWORD PTR [ebp+0x0]
640029fd:	mov    WORD PTR [ecx+edi*2],0x0
64002a03:	pop    edi
64002a04:	pop    esi
64002a05:	pop    ebp
64002a06:	pop    ebx
64002a07:	ret    0x8
64002a0a:	push   0x80070057
64002a0f:	call   0x64001040
64002a14:	int3   
64002a15:	int3   
64002a16:	int3   
64002a17:	int3   
64002a18:	int3   
64002a19:	int3   
64002a1a:	int3   
64002a1b:	int3   
64002a1c:	int3   
64002a1d:	int3   
64002a1e:	int3   
64002a1f:	int3   
64002a20:	push   esi
64002a21:	mov    esi,ecx
64002a23:	mov    ecx,DWORD PTR [esi]
64002a25:	cmp    DWORD PTR [ecx-0xc],0x0
64002a29:	lea    eax,[ecx-0x10]
64002a2c:	push   edi
64002a2d:	mov    edi,DWORD PTR [eax]
64002a2f:	je     0x64002a7f
64002a31:	cmp    DWORD PTR [eax+0xc],0x0
64002a35:	lea    edx,[eax+0xc]
64002a38:	jge    0x64002a5b
64002a3a:	cmp    DWORD PTR [ecx-0x8],0x0
64002a3e:	jge    0x64002a4a
64002a40:	push   0x80070057
64002a45:	call   0x64001040
64002a4a:	mov    DWORD PTR [ecx-0xc],0x0
64002a51:	mov    eax,DWORD PTR [esi]
64002a53:	pop    edi
64002a54:	mov    WORD PTR [eax],0x0
64002a59:	pop    esi
64002a5a:	ret    
64002a5b:	or     ecx,0xffffffff
64002a5e:	lock xadd DWORD PTR [edx],ecx
64002a62:	dec    ecx
64002a63:	test   ecx,ecx
64002a65:	jg     0x64002a71
64002a67:	mov    ecx,DWORD PTR [eax]
64002a69:	mov    edx,DWORD PTR [ecx]
64002a6b:	push   eax
64002a6c:	mov    eax,DWORD PTR [edx+0x4]
64002a6f:	call   eax
64002a71:	mov    edx,DWORD PTR [edi]
64002a73:	mov    eax,DWORD PTR [edx+0xc]
64002a76:	mov    ecx,edi
64002a78:	call   eax
64002a7a:	add    eax,0x10
64002a7d:	mov    DWORD PTR [esi],eax
64002a7f:	pop    edi
64002a80:	pop    esi
64002a81:	ret    
64002a82:	int3   
64002a83:	int3   
64002a84:	int3   
64002a85:	int3   
64002a86:	int3   
64002a87:	int3   
64002a88:	int3   
64002a89:	int3   
64002a8a:	int3   
64002a8b:	int3   
64002a8c:	int3   
64002a8d:	int3   
64002a8e:	int3   
64002a8f:	int3   
64002a90:	push   ebx
64002a91:	mov    ebx,DWORD PTR [esp+0xc]
64002a95:	test   ebx,ebx
64002a97:	push   ebp
64002a98:	mov    ebp,ecx
64002a9a:	jne    0x64002aa6
64002a9c:	call   0x64002a20
64002aa1:	pop    ebp
64002aa2:	pop    ebx
64002aa3:	ret    0x8
64002aa6:	push   esi
64002aa7:	mov    esi,DWORD PTR [esp+0x10]
64002aab:	test   esi,esi
64002aad:	jne    0x64002ab9
64002aaf:	push   0x80070057
64002ab4:	call   0x64001040
64002ab9:	mov    eax,DWORD PTR [ebp+0x0]
64002abc:	mov    edx,DWORD PTR [eax-0x8]
64002abf:	mov    ecx,0x1
64002ac4:	sub    ecx,DWORD PTR [eax-0x4]
64002ac7:	sub    esi,eax
64002ac9:	sub    edx,ebx
64002acb:	sar    esi,1
64002acd:	or     ecx,edx
64002acf:	push   edi
64002ad0:	mov    edi,DWORD PTR [eax-0xc]
64002ad3:	jge    0x64002add
64002ad5:	push   ebx
64002ad6:	mov    ecx,ebp
64002ad8:	call   0x64001e00
64002add:	mov    eax,DWORD PTR [ebp+0x0]
64002ae0:	cmp    esi,edi
64002ae2:	lea    edi,[ebx+ebx*1]
64002ae5:	push   edi
64002ae6:	ja     0x64002af5
64002ae8:	lea    ecx,[eax+esi*2]
64002aeb:	push   ecx
64002aec:	push   edi
64002aed:	push   eax
64002aee:	call   0x64012563
64002af3:	jmp    0x64002b01
64002af5:	mov    edx,DWORD PTR [esp+0x18]
64002af9:	push   edx
64002afa:	push   edi
64002afb:	push   eax
64002afc:	call   0x640124e8
64002b01:	add    esp,0x10
64002b04:	test   ebx,ebx
64002b06:	jl     0x64002b23
64002b08:	mov    eax,DWORD PTR [ebp+0x0]
64002b0b:	cmp    ebx,DWORD PTR [eax-0x8]
64002b0e:	jg     0x64002b23
64002b10:	mov    DWORD PTR [eax-0xc],ebx
64002b13:	mov    eax,DWORD PTR [ebp+0x0]
64002b16:	mov    WORD PTR [edi+eax*1],0x0
64002b1c:	pop    edi
64002b1d:	pop    esi
64002b1e:	pop    ebp
64002b1f:	pop    ebx
64002b20:	ret    0x8
64002b23:	push   0x80070057
64002b28:	call   0x64001040
64002b2d:	int3   
64002b2e:	int3   
64002b2f:	int3   
64002b30:	push   esi
64002b31:	mov    esi,DWORD PTR [esp+0x8]
64002b35:	test   esi,esi
64002b37:	je     0x64002b68
64002b39:	mov    eax,DWORD PTR [esp+0xc]
64002b3d:	test   eax,eax
64002b3f:	je     0x64002b68
64002b41:	mov    ecx,DWORD PTR [esp+0x10]
64002b45:	mov    edx,DWORD PTR [esp+0x14]
64002b49:	push   0x0
64002b4b:	push   0x0
64002b4d:	push   ecx
64002b4e:	push   esi
64002b4f:	push   0xffffffff
64002b51:	push   eax
64002b52:	push   0x0
64002b54:	push   edx
64002b55:	mov    BYTE PTR [esi],0x0
64002b58:	call   DWORD PTR ds:0x64025028
64002b5e:	neg    eax
64002b60:	sbb    eax,eax
64002b62:	and    eax,esi
64002b64:	pop    esi
64002b65:	ret    0x10
64002b68:	xor    eax,eax
64002b6a:	pop    esi
64002b6b:	ret    0x10
64002b6e:	int3   
64002b6f:	int3   
64002b70:	mov    eax,DWORD PTR [esi]
64002b72:	test   eax,eax
64002b74:	je     0x64002b83
64002b76:	push   eax
64002b77:	call   DWORD PTR ds:0x6402500c
64002b7d:	mov    DWORD PTR [esi],0x0
64002b83:	ret    
64002b84:	int3   
64002b85:	int3   
64002b86:	int3   
64002b87:	int3   
64002b88:	int3   
64002b89:	int3   
64002b8a:	int3   
64002b8b:	int3   
64002b8c:	int3   
64002b8d:	int3   
64002b8e:	int3   
64002b8f:	int3   
64002b90:	push   ecx
64002b91:	mov    eax,DWORD PTR [edi]
64002b93:	lea    ecx,[esp]
64002b96:	push   ecx
64002b97:	mov    ecx,DWORD PTR [esp+0xc]
64002b9b:	push   esi
64002b9c:	add    eax,eax
64002b9e:	lea    edx,[esp+0x14]
64002ba2:	push   edx
64002ba3:	mov    DWORD PTR [esp+0xc],eax
64002ba7:	mov    eax,DWORD PTR [esp+0x18]
64002bab:	push   0x0
64002bad:	mov    DWORD PTR [edi],0x0
64002bb3:	mov    edx,DWORD PTR [ecx]
64002bb5:	push   eax
64002bb6:	push   edx
64002bb7:	call   DWORD PTR ds:0x64025008
64002bbd:	test   eax,eax
64002bbf:	jne    0x64002bfe
64002bc1:	mov    eax,DWORD PTR [esp+0xc]
64002bc5:	cmp    eax,0x1
64002bc8:	je     0x64002bcf
64002bca:	cmp    eax,0x2
64002bcd:	jne    0x64002bea
64002bcf:	test   esi,esi
64002bd1:	mov    eax,DWORD PTR [esp]
64002bd4:	je     0x64002bf8
64002bd6:	test   eax,eax
64002bd8:	je     0x64002bf3
64002bda:	test   al,0x1
64002bdc:	jne    0x64002bea
64002bde:	mov    ecx,eax
64002be0:	shr    ecx,1
64002be2:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
64002be8:	je     0x64002bf8
64002bea:	mov    eax,0xd
64002bef:	pop    ecx
64002bf0:	ret    0x8
64002bf3:	mov    WORD PTR [esi],0x0
64002bf8:	shr    eax,1
64002bfa:	mov    DWORD PTR [edi],eax
64002bfc:	xor    eax,eax
64002bfe:	pop    ecx
64002bff:	ret    0x8
64002c02:	int3   
64002c03:	int3   
64002c04:	int3   
64002c05:	int3   
64002c06:	int3   
64002c07:	int3   
64002c08:	int3   
64002c09:	int3   
64002c0a:	int3   
64002c0b:	int3   
64002c0c:	int3   
64002c0d:	int3   
64002c0e:	int3   
64002c0f:	int3   
64002c10:	ret    
64002c11:	int3   
64002c12:	int3   
64002c13:	int3   
64002c14:	int3   
64002c15:	int3   
64002c16:	int3   
64002c17:	int3   
64002c18:	int3   
64002c19:	int3   
64002c1a:	int3   
64002c1b:	int3   
64002c1c:	int3   
64002c1d:	int3   
64002c1e:	int3   
64002c1f:	int3   
64002c20:	mov    eax,DWORD PTR [esp+0xc]
64002c24:	cmp    eax,0x4
64002c27:	mov    ecx,DWORD PTR [esp+0x8]
64002c2b:	mov    edx,DWORD PTR [esp+0x4]
64002c2f:	push   esi
64002c30:	push   edi
64002c31:	jb     0x64002c47
64002c33:	mov    esi,DWORD PTR [edx]
64002c35:	cmp    esi,DWORD PTR [ecx]
64002c37:	jne    0x64002c4b
64002c39:	sub    eax,0x4
64002c3c:	add    ecx,0x4
64002c3f:	add    edx,0x4
64002c42:	cmp    eax,0x4
64002c45:	jae    0x64002c33
64002c47:	test   eax,eax
64002c49:	je     0x64002ca9
64002c4b:	movzx  esi,BYTE PTR [edx]
64002c4e:	movzx  edi,BYTE PTR [ecx]
64002c51:	sub    esi,edi
64002c53:	jne    0x64002c9a
64002c55:	sub    eax,0x1
64002c58:	add    ecx,0x1
64002c5b:	add    edx,0x1
64002c5e:	test   eax,eax
64002c60:	je     0x64002ca9
64002c62:	movzx  esi,BYTE PTR [edx]
64002c65:	movzx  edi,BYTE PTR [ecx]
64002c68:	sub    esi,edi
64002c6a:	jne    0x64002c9a
64002c6c:	sub    eax,0x1
64002c6f:	add    ecx,0x1
64002c72:	add    edx,0x1
64002c75:	test   eax,eax
64002c77:	je     0x64002ca9
64002c79:	movzx  esi,BYTE PTR [edx]
64002c7c:	movzx  edi,BYTE PTR [ecx]
64002c7f:	sub    esi,edi
64002c81:	jne    0x64002c9a
64002c83:	sub    eax,0x1
64002c86:	add    ecx,0x1
64002c89:	add    edx,0x1
64002c8c:	test   eax,eax
64002c8e:	je     0x64002ca9
64002c90:	movzx  esi,BYTE PTR [edx]
64002c93:	movzx  eax,BYTE PTR [ecx]
64002c96:	sub    esi,eax
64002c98:	je     0x64002ca9
64002c9a:	test   esi,esi
64002c9c:	mov    eax,0x1
64002ca1:	jg     0x64002cab
64002ca3:	pop    edi
64002ca4:	or     eax,0xffffffff
64002ca7:	pop    esi
64002ca8:	ret    
64002ca9:	xor    eax,eax
64002cab:	pop    edi
64002cac:	pop    esi
64002cad:	ret    
64002cae:	int3   
64002caf:	int3   
64002cb0:	push   0xffffffff
64002cb2:	push   0x640228f8
64002cb7:	mov    eax,fs:0x0
64002cbd:	push   eax
64002cbe:	push   ecx
64002cbf:	push   esi
64002cc0:	mov    eax,ds:0x6402d09c
64002cc5:	xor    eax,esp
64002cc7:	push   eax
64002cc8:	lea    eax,[esp+0xc]
64002ccc:	mov    fs:0x0,eax
64002cd2:	mov    esi,ecx
64002cd4:	mov    DWORD PTR [esp+0x8],esi
64002cd8:	call   0x6401237c
64002cdd:	xor    eax,eax
64002cdf:	mov    DWORD PTR [esp+0x14],eax
64002ce3:	lea    ecx,[esi+0xc]
64002ce6:	mov    DWORD PTR [esi],0x64025310
64002cec:	push   0xffffffff
64002cee:	mov    DWORD PTR [ecx+0x14],eax
64002cf1:	mov    DWORD PTR [ecx+0x18],0xf
64002cf8:	push   eax
64002cf9:	mov    BYTE PTR [ecx+0x4],al
64002cfc:	mov    eax,DWORD PTR [esp+0x24]
64002d00:	push   eax
64002d01:	call   0x64001780
64002d06:	mov    eax,esi
64002d08:	mov    ecx,DWORD PTR [esp+0xc]
64002d0c:	mov    DWORD PTR fs:0x0,ecx
64002d13:	pop    ecx
64002d14:	pop    esi
64002d15:	add    esp,0x10
64002d18:	ret    0x4
64002d1b:	int3   
64002d1c:	int3   
64002d1d:	int3   
64002d1e:	int3   
64002d1f:	int3   
64002d20:	cmp    DWORD PTR [ecx+0x24],0x10
64002d24:	jb     0x64002d2a
64002d26:	mov    eax,DWORD PTR [ecx+0x10]
64002d29:	ret    
64002d2a:	lea    eax,[ecx+0x10]
64002d2d:	ret    
64002d2e:	int3   
64002d2f:	int3   
64002d30:	push   esi
64002d31:	mov    esi,ecx
64002d33:	mov    DWORD PTR [esi],0x64025310
64002d39:	cmp    DWORD PTR [esi+0x24],0x10
64002d3d:	jb     0x64002d4b
64002d3f:	mov    eax,DWORD PTR [esi+0x10]
64002d42:	push   eax
64002d43:	call   0x64012332
64002d48:	add    esp,0x4
64002d4b:	xor    eax,eax
64002d4d:	mov    DWORD PTR [esi+0x24],0xf
64002d54:	mov    DWORD PTR [esi+0x20],eax
64002d57:	mov    BYTE PTR [esi+0x10],al
64002d5a:	mov    ecx,esi
64002d5c:	pop    esi
64002d5d:	jmp    0x6401244b
64002d62:	int3   
64002d63:	int3   
64002d64:	int3   
64002d65:	int3   
64002d66:	int3   
64002d67:	int3   
64002d68:	int3   
64002d69:	int3   
64002d6a:	int3   
64002d6b:	int3   
64002d6c:	int3   
64002d6d:	int3   
64002d6e:	int3   
64002d6f:	int3   
64002d70:	push   esi
64002d71:	mov    esi,ecx
64002d73:	mov    DWORD PTR [esi],0x64025310
64002d79:	cmp    DWORD PTR [esi+0x24],0x10
64002d7d:	jb     0x64002d8b
64002d7f:	mov    eax,DWORD PTR [esi+0x10]
64002d82:	push   eax
64002d83:	call   0x64012332
64002d88:	add    esp,0x4
64002d8b:	xor    eax,eax
64002d8d:	mov    DWORD PTR [esi+0x24],0xf
64002d94:	mov    DWORD PTR [esi+0x20],eax
64002d97:	mov    ecx,esi
64002d99:	mov    BYTE PTR [esi+0x10],al
64002d9c:	call   0x6401244b
64002da1:	test   BYTE PTR [esp+0x8],0x1
64002da6:	je     0x64002db1
64002da8:	push   esi
64002da9:	call   0x64012332
64002dae:	add    esp,0x4
64002db1:	mov    eax,esi
64002db3:	pop    esi
64002db4:	ret    0x4
64002db7:	int3   
64002db8:	int3   
64002db9:	int3   
64002dba:	int3   
64002dbb:	int3   
64002dbc:	int3   
64002dbd:	int3   
64002dbe:	int3   
64002dbf:	int3   
64002dc0:	mov    eax,DWORD PTR [esp+0x4]
64002dc4:	push   esi
64002dc5:	push   eax
64002dc6:	mov    esi,ecx
64002dc8:	call   0x64002de0
64002dcd:	mov    DWORD PTR [esi],0x64025328
64002dd3:	mov    eax,esi
64002dd5:	pop    esi
64002dd6:	ret    0x4
64002dd9:	int3   
64002dda:	int3   
64002ddb:	int3   
64002ddc:	int3   
64002ddd:	int3   
64002dde:	int3   
64002ddf:	int3   
64002de0:	push   0xffffffff
64002de2:	push   0x640228c8
64002de7:	mov    eax,fs:0x0
64002ded:	push   eax
64002dee:	push   ecx
64002def:	push   esi
64002df0:	push   edi
64002df1:	mov    eax,ds:0x6402d09c
64002df6:	xor    eax,esp
64002df8:	push   eax
64002df9:	lea    eax,[esp+0x10]
64002dfd:	mov    fs:0x0,eax
64002e03:	mov    esi,ecx
64002e05:	mov    DWORD PTR [esp+0xc],esi
64002e09:	mov    edi,DWORD PTR [esp+0x20]
64002e0d:	push   edi
64002e0e:	call   0x640123f3
64002e13:	xor    edx,edx
64002e15:	mov    DWORD PTR [esp+0x18],edx
64002e19:	push   0xffffffff
64002e1b:	lea    ecx,[esi+0xc]
64002e1e:	mov    DWORD PTR [esi],0x64025310
64002e24:	lea    eax,[edi+0xc]
64002e27:	push   edx
64002e28:	mov    DWORD PTR [ecx+0x18],0xf
64002e2f:	mov    DWORD PTR [ecx+0x14],edx
64002e32:	push   eax
64002e33:	mov    BYTE PTR [ecx+0x4],dl
64002e36:	call   0x64001780
64002e3b:	mov    eax,esi
64002e3d:	mov    ecx,DWORD PTR [esp+0x10]
64002e41:	mov    DWORD PTR fs:0x0,ecx
64002e48:	pop    ecx
64002e49:	pop    edi
64002e4a:	pop    esi
64002e4b:	add    esp,0x10
64002e4e:	ret    0x4
64002e51:	int3   
64002e52:	int3   
64002e53:	int3   
64002e54:	int3   
64002e55:	int3   
64002e56:	int3   
64002e57:	int3   
64002e58:	int3   
64002e59:	int3   
64002e5a:	int3   
64002e5b:	int3   
64002e5c:	int3   
64002e5d:	int3   
64002e5e:	int3   
64002e5f:	int3   
64002e60:	sub    esp,0x6c
64002e63:	mov    eax,ds:0x6402d09c
64002e68:	xor    eax,esp
64002e6a:	mov    DWORD PTR [esp+0x68],eax
64002e6e:	mov    eax,DWORD PTR [esp+0x74]
64002e72:	movzx  ecx,BYTE PTR [eax+0xf]
64002e76:	movzx  edx,BYTE PTR [eax+0xe]
64002e7a:	push   esi
64002e7b:	push   ecx
64002e7c:	movzx  ecx,BYTE PTR [eax+0xd]
64002e80:	push   edx
64002e81:	movzx  edx,BYTE PTR [eax+0xc]
64002e85:	push   ecx
64002e86:	movzx  ecx,BYTE PTR [eax+0xb]
64002e8a:	push   edx
64002e8b:	movzx  edx,BYTE PTR [eax+0xa]
64002e8f:	mov    esi,DWORD PTR [esp+0x84]
64002e96:	push   ecx
64002e97:	movzx  ecx,BYTE PTR [eax+0x9]
64002e9b:	push   edx
64002e9c:	movzx  edx,BYTE PTR [eax+0x8]
64002ea0:	push   ecx
64002ea1:	movzx  ecx,WORD PTR [eax+0x6]
64002ea5:	push   edx
64002ea6:	movzx  edx,WORD PTR [eax+0x4]
64002eaa:	mov    eax,DWORD PTR [eax]
64002eac:	push   ecx
64002ead:	push   edx
64002eae:	push   eax
64002eaf:	push   0x64027728
64002eb4:	push   0x32
64002eb6:	push   0x64027754
64002ebb:	mov    DWORD PTR [esp+0x3c],0x0
64002ec3:	call   0x64005750
64002ec8:	add    esp,0xc
64002ecb:	push   eax
64002ecc:	lea    ecx,[esp+0x38]
64002ed0:	push   0x64
64002ed2:	push   ecx
64002ed3:	call   0x640136d6
64002ed8:	add    esp,0x38
64002edb:	lea    edx,[esp+0x8]
64002edf:	push   edx
64002ee0:	mov    ecx,esi
64002ee2:	call   0x640054b0
64002ee7:	mov    ecx,DWORD PTR [esp+0x6c]
64002eeb:	mov    eax,esi
64002eed:	pop    esi
64002eee:	xor    ecx,esp
64002ef0:	call   0x64012b8c
64002ef5:	add    esp,0x6c
64002ef8:	ret    
64002ef9:	int3   
64002efa:	int3   
64002efb:	int3   
64002efc:	int3   
64002efd:	int3   
64002efe:	int3   
64002eff:	int3   
64002f00:	push   0xffffffff
64002f02:	push   0x64022e08
64002f07:	mov    eax,fs:0x0
64002f0d:	push   eax
64002f0e:	sub    esp,0x24
64002f11:	mov    eax,ds:0x6402d09c
64002f16:	xor    eax,esp
64002f18:	mov    DWORD PTR [esp+0x20],eax
64002f1c:	push   ebx
64002f1d:	push   ebp
64002f1e:	push   edi
64002f1f:	mov    eax,ds:0x6402d09c
64002f24:	xor    eax,esp
64002f26:	push   eax
64002f27:	lea    eax,[esp+0x34]
64002f2b:	mov    fs:0x0,eax
64002f31:	mov    DWORD PTR [esp+0x3c],0x0
64002f39:	call   DWORD PTR ds:0x6402d06c
64002f3f:	mov    eax,ds:0x64025c40
64002f44:	mov    ecx,DWORD PTR ds:0x64025c44
64002f4a:	mov    edx,DWORD PTR ds:0x64025c48
64002f50:	mov    DWORD PTR [esp+0x20],eax
64002f54:	mov    eax,ds:0x64025c4c
64002f59:	mov    DWORD PTR [esp+0x2c],eax
64002f5d:	mov    eax,DWORD PTR [esp+0x44]
64002f61:	mov    DWORD PTR [esp+0x24],ecx
64002f65:	mov    DWORD PTR [esp+0x28],edx
64002f69:	cmp    DWORD PTR [eax-0xc],0x0
64002f6d:	jle    0x64002f8d
64002f6f:	lea    ebx,[esp+0x44]
64002f73:	call   0x64005680
64002f78:	mov    edi,ebx
64002f7a:	call   0x64005fa0
64002f7f:	call   0x64005600
64002f84:	call   0x64005fa0
64002f89:	mov    eax,DWORD PTR [esp+0x44]
64002f8d:	cmp    DWORD PTR [eax-0x4],0x1
64002f91:	jle    0x64002fa4
64002f93:	mov    ecx,DWORD PTR [eax-0xc]
64002f96:	push   ecx
64002f97:	lea    ecx,[esp+0x48]
64002f9b:	call   0x64001950
64002fa0:	mov    eax,DWORD PTR [esp+0x44]
64002fa4:	lea    edx,[esp+0x20]
64002fa8:	push   edx
64002fa9:	push   eax
64002faa:	call   DWORD PTR ds:0x640251ac
64002fb0:	test   eax,eax
64002fb2:	je     0x64002fd1
64002fb4:	mov    eax,ds:0x64025c4c
64002fb9:	mov    edi,DWORD PTR ds:0x64025c40
64002fbf:	mov    ebx,DWORD PTR ds:0x64025c44
64002fc5:	mov    ebp,DWORD PTR ds:0x64025c48
64002fcb:	mov    DWORD PTR [esp+0x1c],eax
64002fcf:	jmp    0x64002fe5
64002fd1:	mov    edx,DWORD PTR [esp+0x2c]
64002fd5:	mov    edi,DWORD PTR [esp+0x20]
64002fd9:	mov    ebx,DWORD PTR [esp+0x24]
64002fdd:	mov    ebp,DWORD PTR [esp+0x28]
64002fe1:	mov    DWORD PTR [esp+0x1c],edx
64002fe5:	mov    DWORD PTR [esp+0x3c],0xffffffff
64002fed:	mov    eax,DWORD PTR [esp+0x44]
64002ff1:	add    eax,0xfffffff0
64002ff4:	or     edx,0xffffffff
64002ff7:	lea    ecx,[eax+0xc]
64002ffa:	lock xadd DWORD PTR [ecx],edx
64002ffe:	dec    edx
64002fff:	test   edx,edx
64003001:	jg     0x6400300d
64003003:	mov    ecx,DWORD PTR [eax]
64003005:	mov    edx,DWORD PTR [ecx]
64003007:	push   eax
64003008:	mov    eax,DWORD PTR [edx+0x4]
6400300b:	call   eax
6400300d:	mov    ecx,DWORD PTR [esp+0x1c]
64003011:	mov    DWORD PTR [esi],edi
64003013:	mov    DWORD PTR [esi+0x4],ebx
64003016:	mov    DWORD PTR [esi+0x8],ebp
64003019:	mov    eax,esi
6400301b:	mov    DWORD PTR [esi+0xc],ecx
6400301e:	mov    ecx,DWORD PTR [esp+0x34]
64003022:	mov    DWORD PTR fs:0x0,ecx
64003029:	pop    ecx
6400302a:	pop    edi
6400302b:	pop    ebp
6400302c:	pop    ebx
6400302d:	mov    ecx,DWORD PTR [esp+0x20]
64003031:	xor    ecx,esp
64003033:	call   0x64012b8c
64003038:	add    esp,0x30
6400303b:	ret    
6400303c:	int3   
6400303d:	int3   
6400303e:	int3   
6400303f:	int3   
64003040:	push   ebp
64003041:	mov    ebp,esp
64003043:	sub    esp,0x18
64003046:	mov    eax,ds:0x6402d09c
6400304b:	xor    eax,ebp
6400304d:	mov    DWORD PTR [ebp-0x4],eax
64003050:	mov    eax,DWORD PTR [ebp+0x8]
64003053:	push   ebx
64003054:	push   esi
64003055:	push   edi
64003056:	mov    DWORD PTR [ebp-0x14],eax
64003059:	mov    DWORD PTR [ebp-0x18],0x0
64003060:	call   DWORD PTR ds:0x6402d06c
64003066:	movzx  ecx,BYTE PTR [ebp+0xc]
6400306a:	push   ecx
6400306b:	push   0x64027788
64003070:	push   0x6
64003072:	push   0x640277c4
64003077:	mov    ebx,eax
64003079:	call   0x64005750
6400307e:	add    esp,0xc
64003081:	push   eax
64003082:	lea    edx,[ebp-0x10]
64003085:	push   edx
64003086:	call   0x6401365b
6400308b:	add    esp,0xc
6400308e:	lea    eax,[ebp-0x10]
64003091:	push   eax
64003092:	call   DWORD PTR ds:0x64025058
64003098:	mov    esi,eax
6400309a:	add    esi,0x1
6400309d:	cmp    esi,0x3fffffff
640030a3:	jg     0x640030d1
640030a5:	lea    eax,[esi+esi*1]
640030a8:	call   0x64013310
640030ad:	mov    edi,esp
640030af:	test   edi,edi
640030b1:	je     0x640030d1
640030b3:	push   esi
640030b4:	push   edi
640030b5:	push   0xffffffff
640030b7:	lea    ecx,[ebp-0x10]
640030ba:	push   ecx
640030bb:	push   0x0
640030bd:	push   ebx
640030be:	mov    WORD PTR [edi],0x0
640030c3:	call   DWORD PTR ds:0x64025024
640030c9:	neg    eax
640030cb:	sbb    eax,eax
640030cd:	and    eax,edi
640030cf:	jmp    0x640030d3
640030d1:	xor    eax,eax
640030d3:	mov    esi,DWORD PTR [ebp-0x14]
640030d6:	push   eax
640030d7:	mov    ecx,esi
640030d9:	call   0x64002540
640030de:	mov    eax,esi
640030e0:	lea    esp,[ebp-0x24]
640030e3:	pop    edi
640030e4:	pop    esi
640030e5:	pop    ebx
640030e6:	mov    ecx,DWORD PTR [ebp-0x4]
640030e9:	xor    ecx,ebp
640030eb:	call   0x64012b8c
640030f0:	mov    esp,ebp
640030f2:	pop    ebp
640030f3:	ret    
640030f4:	int3   
640030f5:	int3   
640030f6:	int3   
640030f7:	int3   
640030f8:	int3   
640030f9:	int3   
640030fa:	int3   
640030fb:	int3   
640030fc:	int3   
640030fd:	int3   
640030fe:	int3   
640030ff:	int3   
64003100:	push   0xffffffff
64003102:	push   0x64023c69
64003107:	mov    eax,fs:0x0
6400310d:	push   eax
6400310e:	sub    esp,0x20
64003111:	push   ebx
64003112:	push   ebp
64003113:	push   esi
64003114:	push   edi
64003115:	mov    eax,ds:0x6402d09c
6400311a:	xor    eax,esp
6400311c:	push   eax
6400311d:	lea    eax,[esp+0x34]
64003121:	mov    fs:0x0,eax
64003127:	xor    ebx,ebx
64003129:	mov    DWORD PTR [esp+0x3c],ebx
6400312d:	mov    DWORD PTR [esp+0x18],ebx
64003131:	mov    eax,ds:0x6402e540
64003136:	mov    edx,DWORD PTR [eax+0xc]
64003139:	mov    ecx,0x6402e540
6400313e:	call   edx
64003140:	mov    edi,DWORD PTR [esp+0x44]
64003144:	add    eax,0x10
64003147:	mov    DWORD PTR [edi],eax
64003149:	mov    esi,DWORD PTR [esp+0x48]
6400314d:	mov    DWORD PTR [esp+0x3c],ebx
64003151:	mov    eax,DWORD PTR [esi]
64003153:	mov    ecx,0x1
64003158:	sub    eax,0x10
6400315b:	cmp    DWORD PTR [eax+0xc],ecx
6400315e:	mov    DWORD PTR [esp+0x18],ecx
64003162:	jle    0x6400316f
64003164:	mov    eax,DWORD PTR [eax+0x4]
64003167:	push   eax
64003168:	mov    ecx,esi
6400316a:	call   0x64001950
6400316f:	mov    ebp,DWORD PTR [esi]
64003171:	movzx  eax,WORD PTR [ebp+0x0]
64003175:	cmp    ax,bx
64003178:	je     0x64003419
6400317e:	cmp    ax,0x41
64003182:	jb     0x6400318e
64003184:	cmp    ax,0x5a
64003188:	jbe    0x640033bf
6400318e:	cmp    ax,0x61
64003192:	jb     0x6400319e
64003194:	cmp    ax,0x7a
64003198:	jbe    0x640033bf
6400319e:	cmp    ax,0x30
640031a2:	jb     0x640031b9
640031a4:	cmp    ax,0x39
640031a8:	ja     0x640031b9
640031aa:	movzx  ecx,BYTE PTR [ebp+0x0]
640031ae:	push   ecx
640031af:	call   0x64005540
640031b4:	jmp    0x64003409
640031b9:	cmp    ax,0x20
640031bd:	jne    0x6400320b
640031bf:	mov    eax,DWORD PTR [edi]
640031c1:	mov    ebx,DWORD PTR [eax-0xc]
640031c4:	mov    ecx,0x1
640031c9:	sub    ecx,DWORD PTR [eax-0x4]
640031cc:	mov    eax,DWORD PTR [eax-0x8]
640031cf:	lea    esi,[ebx+0x1]
640031d2:	sub    eax,esi
640031d4:	or     eax,ecx
640031d6:	jge    0x640031e0
640031d8:	push   esi
640031d9:	mov    ecx,edi
640031db:	call   0x64001e00
640031e0:	test   esi,esi
640031e2:	mov    eax,DWORD PTR [edi]
640031e4:	mov    WORD PTR [eax+ebx*2],0x2b
640031ea:	jl     0x6400342f
640031f0:	mov    eax,DWORD PTR [edi]
640031f2:	cmp    esi,DWORD PTR [eax-0x8]
640031f5:	jg     0x6400342f
640031fb:	mov    DWORD PTR [eax-0xc],esi
640031fe:	mov    edx,DWORD PTR [edi]
64003200:	mov    WORD PTR [edx+esi*2],0x0
64003206:	jmp    0x64003409
6400320b:	cmp    ax,0x2d
6400320f:	je     0x640033bf
64003215:	cmp    ax,0x5f
64003219:	je     0x640033bf
6400321f:	cmp    ax,0x2e
64003223:	je     0x640033bf
64003229:	cmp    ax,0x21
6400322d:	je     0x640033bf
64003233:	cmp    ax,0x7e
64003237:	je     0x640033bf
6400323d:	cmp    ax,0x2a
64003241:	je     0x640033bf
64003247:	cmp    ax,0x27
6400324b:	je     0x640033bf
64003251:	cmp    ax,0x28
64003255:	je     0x640033bf
6400325b:	cmp    ax,0x29
6400325f:	je     0x640033bf
64003265:	cmp    ax,0x7f
64003269:	ja     0x640032a0
6400326b:	movzx  eax,BYTE PTR [ebp+0x0]
6400326f:	push   eax
64003270:	lea    ecx,[esp+0x20]
64003274:	push   ecx
64003275:	call   0x64003040
6400327a:	add    esp,0x8
6400327d:	push   eax
6400327e:	mov    ecx,edi
64003280:	mov    DWORD PTR [esp+0x40],0x1
64003288:	call   0x640025f0
6400328d:	lea    ecx,[esp+0x1c]
64003291:	mov    BYTE PTR [esp+0x3c],0x0
64003296:	call   0x64001930
6400329b:	jmp    0x64003409
640032a0:	cmp    ax,0x7ff
640032a4:	ja     0x64003315
640032a6:	shr    eax,0x6
640032a9:	or     eax,0xffffffc0
640032ac:	push   eax
640032ad:	lea    edx,[esp+0x24]
640032b1:	push   edx
640032b2:	call   0x64003040
640032b7:	add    esp,0x8
640032ba:	push   eax
640032bb:	mov    ecx,edi
640032bd:	mov    DWORD PTR [esp+0x40],0x2
640032c5:	call   0x640025f0
640032ca:	lea    ecx,[esp+0x20]
640032ce:	mov    BYTE PTR [esp+0x3c],0x0
640032d3:	call   0x64001930
640032d8:	movzx  eax,BYTE PTR [ebp+0x0]
640032dc:	and    eax,0xffffff3f
640032e1:	or     eax,0xffffff80
640032e4:	push   eax
640032e5:	lea    ecx,[esp+0x28]
640032e9:	push   ecx
640032ea:	call   0x64003040
640032ef:	add    esp,0x8
640032f2:	push   eax
640032f3:	mov    ecx,edi
640032f5:	mov    DWORD PTR [esp+0x40],0x3
640032fd:	call   0x640025f0
64003302:	lea    ecx,[esp+0x24]
64003306:	mov    BYTE PTR [esp+0x3c],0x0
6400330b:	call   0x64001930
64003310:	jmp    0x64003409
64003315:	shr    ax,0xc
64003319:	lea    edx,[esp+0x28]
6400331d:	or     eax,0xffffffe0
64003320:	push   eax
64003321:	push   edx
64003322:	call   0x64003040
64003327:	add    esp,0x8
6400332a:	push   eax
6400332b:	mov    ecx,edi
6400332d:	mov    DWORD PTR [esp+0x40],0x4
64003335:	call   0x640025f0
6400333a:	lea    ecx,[esp+0x28]
6400333e:	mov    BYTE PTR [esp+0x3c],0x0
64003343:	call   0x64001930
64003348:	movzx  eax,WORD PTR [ebp+0x0]
6400334c:	shr    ax,0x6
64003350:	lea    ecx,[esp+0x2c]
64003354:	and    eax,0xffffff3f
64003359:	or     eax,0xffffff80
6400335c:	push   eax
6400335d:	push   ecx
6400335e:	call   0x64003040
64003363:	add    esp,0x8
64003366:	push   eax
64003367:	mov    ecx,edi
64003369:	mov    DWORD PTR [esp+0x40],0x5
64003371:	call   0x640025f0
64003376:	lea    ecx,[esp+0x2c]
6400337a:	mov    BYTE PTR [esp+0x3c],0x0
6400337f:	call   0x64001930
64003384:	movzx  edx,BYTE PTR [ebp+0x0]
64003388:	and    edx,0xffffff3f
6400338e:	or     edx,0xffffff80
64003391:	push   edx
64003392:	lea    eax,[esp+0x34]
64003396:	push   eax
64003397:	call   0x64003040
6400339c:	add    esp,0x8
6400339f:	push   eax
640033a0:	mov    ecx,edi
640033a2:	mov    DWORD PTR [esp+0x40],0x6
640033aa:	call   0x640025f0
640033af:	lea    ecx,[esp+0x30]
640033b3:	mov    BYTE PTR [esp+0x3c],0x0
640033b8:	call   0x64001930
640033bd:	jmp    0x64003409
640033bf:	mov    cl,BYTE PTR [ebp+0x0]
640033c2:	mov    eax,DWORD PTR [edi]
640033c4:	mov    ebx,DWORD PTR [eax-0xc]
640033c7:	mov    BYTE PTR [esp+0x14],cl
640033cb:	mov    ecx,0x1
640033d0:	sub    ecx,DWORD PTR [eax-0x4]
640033d3:	mov    eax,DWORD PTR [eax-0x8]
640033d6:	lea    esi,[ebx+0x1]
640033d9:	sub    eax,esi
640033db:	or     eax,ecx
640033dd:	jge    0x640033e7
640033df:	push   esi
640033e0:	mov    ecx,edi
640033e2:	call   0x64001e00
640033e7:	test   esi,esi
640033e9:	movsx  dx,BYTE PTR [esp+0x14]
640033ef:	mov    eax,DWORD PTR [edi]
640033f1:	mov    WORD PTR [eax+ebx*2],dx
640033f5:	jl     0x6400342f
640033f7:	mov    eax,DWORD PTR [edi]
640033f9:	cmp    esi,DWORD PTR [eax-0x8]
640033fc:	jg     0x6400342f
640033fe:	mov    DWORD PTR [eax-0xc],esi
64003401:	mov    eax,DWORD PTR [edi]
64003403:	mov    WORD PTR [eax+esi*2],0x0
64003409:	movzx  eax,WORD PTR [ebp+0x2]
6400340d:	add    ebp,0x2
64003410:	test   ax,ax
64003413:	jne    0x6400317e
64003419:	mov    eax,edi
6400341b:	mov    ecx,DWORD PTR [esp+0x34]
6400341f:	mov    DWORD PTR fs:0x0,ecx
64003426:	pop    ecx
64003427:	pop    edi
64003428:	pop    esi
64003429:	pop    ebp
6400342a:	pop    ebx
6400342b:	add    esp,0x2c
6400342e:	ret    
6400342f:	push   0x80070057
64003434:	call   0x64001040
64003439:	int3   
6400343a:	int3   
6400343b:	int3   
6400343c:	int3   
6400343d:	int3   
6400343e:	int3   
6400343f:	int3   
64003440:	push   0xffffffff
64003442:	push   0x64023af9
64003447:	mov    eax,fs:0x0
6400344d:	push   eax
6400344e:	sub    esp,0x48
64003451:	push   ebx
64003452:	push   esi
64003453:	push   edi
64003454:	mov    eax,ds:0x6402d09c
64003459:	xor    eax,esp
6400345b:	push   eax
6400345c:	lea    eax,[esp+0x58]
64003460:	mov    fs:0x0,eax
64003466:	xor    ebx,ebx
64003468:	mov    DWORD PTR [esp+0x60],ebx
6400346c:	mov    DWORD PTR [esp+0x10],ebx
64003470:	mov    eax,ds:0x6402e540
64003475:	mov    edx,DWORD PTR [eax+0xc]
64003478:	mov    ecx,0x6402e540
6400347d:	call   edx
6400347f:	mov    edi,DWORD PTR [esp+0x68]
64003483:	add    eax,0x10
64003486:	mov    DWORD PTR [edi],eax
64003488:	mov    DWORD PTR [esp+0x60],ebx
6400348c:	mov    ecx,0x1
64003491:	sub    ecx,DWORD PTR [eax-0x4]
64003494:	mov    eax,DWORD PTR [eax-0x8]
64003497:	sub    eax,0x800
6400349c:	cmp    BYTE PTR [esp+0x6c],bl
640034a0:	mov    DWORD PTR [esp+0x10],0x1
640034a8:	je     0x6400353b
640034ae:	or     eax,ecx
640034b0:	jge    0x640034be
640034b2:	push   0x800
640034b7:	mov    ecx,edi
640034b9:	call   0x64001e00
640034be:	mov    eax,DWORD PTR [edi]
640034c0:	push   0x800
640034c5:	push   eax
640034c6:	call   0x6400d360
640034cb:	call   eax
640034cd:	test   eax,eax
640034cf:	jne    0x640035c2
640034d5:	push   0x640277cc
640034da:	push   0x22
640034dc:	push   0x64027808
640034e1:	call   0x64005750
640034e6:	mov    ecx,eax
640034e8:	add    esp,0xc
640034eb:	mov    DWORD PTR [esp+0x2c],0xf
640034f3:	mov    DWORD PTR [esp+0x28],ebx
640034f7:	mov    BYTE PTR [esp+0x18],bl
640034fb:	lea    esi,[ecx+0x1]
640034fe:	mov    edi,edi
64003500:	mov    dl,BYTE PTR [ecx]
64003502:	add    ecx,0x1
64003505:	cmp    dl,bl
64003507:	jne    0x64003500
64003509:	sub    ecx,esi
6400350b:	push   ecx
6400350c:	push   eax
6400350d:	lea    ecx,[esp+0x1c]
64003511:	call   0x64001860
64003516:	lea    eax,[esp+0x14]
6400351a:	push   eax
6400351b:	lea    ecx,[esp+0x34]
6400351f:	mov    DWORD PTR [esp+0x64],0x1
64003527:	call   0x64002020
6400352c:	push   0x6402abdc
64003531:	lea    ecx,[esp+0x34]
64003535:	push   ecx
64003536:	call   0x6401277b
6400353b:	or     eax,ecx
6400353d:	jge    0x6400354b
6400353f:	push   0x800
64003544:	mov    ecx,edi
64003546:	call   0x64001e00
6400354b:	mov    eax,DWORD PTR [edi]
6400354d:	push   0x800
64003552:	push   eax
64003553:	call   0x6400cb80
64003558:	call   eax
6400355a:	test   eax,eax
6400355c:	jne    0x640035c2
6400355e:	push   0x6402782c
64003563:	push   0x1c
64003565:	push   0x64027868
6400356a:	call   0x64005750
6400356f:	mov    ecx,eax
64003571:	add    esp,0xc
64003574:	mov    DWORD PTR [esp+0x2c],0xf
6400357c:	mov    DWORD PTR [esp+0x28],ebx
64003580:	mov    BYTE PTR [esp+0x18],bl
64003584:	lea    esi,[ecx+0x1]
64003587:	mov    dl,BYTE PTR [ecx]
64003589:	add    ecx,0x1
6400358c:	cmp    dl,bl
6400358e:	jne    0x64003587
64003590:	sub    ecx,esi
64003592:	push   ecx
64003593:	push   eax
64003594:	lea    ecx,[esp+0x1c]
64003598:	call   0x64001860
6400359d:	lea    edx,[esp+0x14]
640035a1:	push   edx
640035a2:	lea    ecx,[esp+0x34]
640035a6:	mov    DWORD PTR [esp+0x64],0x2
640035ae:	call   0x64002020
640035b3:	push   0x6402abdc
640035b8:	lea    eax,[esp+0x34]
640035bc:	push   eax
640035bd:	call   0x6401277b
640035c2:	mov    edx,DWORD PTR [edi]
640035c4:	cmp    edx,ebx
640035c6:	jne    0x640035cc
640035c8:	xor    eax,eax
640035ca:	jmp    0x640035e2
640035cc:	mov    eax,edx
640035ce:	lea    esi,[eax+0x2]
640035d1:	mov    cx,WORD PTR [eax]
640035d4:	add    eax,0x2
640035d7:	cmp    cx,bx
640035da:	jne    0x640035d1
640035dc:	sub    eax,esi
640035de:	sar    eax,1
640035e0:	js     0x64003624
640035e2:	cmp    eax,DWORD PTR [edx-0x8]
640035e5:	jg     0x64003624
640035e7:	mov    DWORD PTR [edx-0xc],eax
640035ea:	mov    ecx,DWORD PTR [edi]
640035ec:	mov    WORD PTR [ecx+eax*2],bx
640035f0:	mov    ecx,DWORD PTR [edi]
640035f2:	mov    edx,DWORD PTR [ecx-0xc]
640035f5:	lea    eax,[edx-0x1]
640035f8:	cmp    eax,ebx
640035fa:	jl     0x64003624
640035fc:	cmp    eax,edx
640035fe:	jg     0x64003624
64003600:	movzx  eax,WORD PTR [ecx+eax*2]
64003604:	cmp    ax,0x5c
64003608:	je     0x6400360f
6400360a:	call   0x640055a0
6400360f:	mov    eax,edi
64003611:	mov    ecx,DWORD PTR [esp+0x58]
64003615:	mov    DWORD PTR fs:0x0,ecx
6400361c:	pop    ecx
6400361d:	pop    edi
6400361e:	pop    esi
6400361f:	pop    ebx
64003620:	add    esp,0x54
64003623:	ret    
64003624:	push   0x80070057
64003629:	call   0x64001040
6400362e:	int3   
6400362f:	int3   
64003630:	push   0xffffffff
64003632:	push   0x64023c01
64003637:	mov    eax,fs:0x0
6400363d:	push   eax
6400363e:	sub    esp,0x48
64003641:	push   ebx
64003642:	push   ebp
64003643:	push   esi
64003644:	push   edi
64003645:	mov    eax,ds:0x6402d09c
6400364a:	xor    eax,esp
6400364c:	push   eax
6400364d:	lea    eax,[esp+0x5c]
64003651:	mov    fs:0x0,eax
64003657:	mov    esi,DWORD PTR [esp+0x6c]
6400365b:	xor    ebx,ebx
6400365d:	push   ebx
6400365e:	mov    DWORD PTR [esp+0x68],ebx
64003662:	push   esi
64003663:	mov    DWORD PTR [esp+0x1c],ebx
64003667:	call   0x64003440
6400366c:	add    esp,0x8
6400366f:	mov    DWORD PTR [esp+0x64],ebx
64003673:	mov    eax,DWORD PTR [esi]
64003675:	mov    ebp,0x1
6400367a:	sub    eax,0x10
6400367d:	cmp    DWORD PTR [eax+0xc],ebp
64003680:	mov    DWORD PTR [esp+0x14],ebp
64003684:	jle    0x64003691
64003686:	mov    eax,DWORD PTR [eax+0x4]
64003689:	push   eax
6400368a:	mov    ecx,esi
6400368c:	call   0x64001950
64003691:	mov    eax,DWORD PTR [esi]
64003693:	push   0x5c
64003695:	push   eax
64003696:	call   0x64013757
6400369b:	mov    edi,eax
6400369d:	add    esp,0x8
640036a0:	cmp    edi,ebx
640036a2:	jne    0x64003706
640036a4:	push   0x64027888
640036a9:	push   0x18
640036ab:	push   0x640278c8
640036b0:	call   0x64005750
640036b5:	mov    ecx,eax
640036b7:	add    esp,0xc
640036ba:	mov    DWORD PTR [esp+0x30],0xf
640036c2:	mov    DWORD PTR [esp+0x2c],ebx
640036c6:	mov    BYTE PTR [esp+0x1c],bl
640036ca:	lea    esi,[ecx+0x1]
640036cd:	lea    ecx,[ecx+0x0]
640036d0:	mov    dl,BYTE PTR [ecx]
640036d2:	add    ecx,ebp
640036d4:	cmp    dl,bl
640036d6:	jne    0x640036d0
640036d8:	sub    ecx,esi
640036da:	push   ecx
640036db:	push   eax
640036dc:	lea    ecx,[esp+0x20]
640036e0:	call   0x64001860
640036e5:	lea    ecx,[esp+0x18]
640036e9:	push   ecx
640036ea:	lea    ecx,[esp+0x38]
640036ee:	mov    DWORD PTR [esp+0x68],ebp
640036f2:	call   0x64002020
640036f7:	push   0x6402abdc
640036fc:	lea    edx,[esp+0x38]
64003700:	push   edx
64003701:	call   0x6401277b
64003706:	mov    eax,DWORD PTR [esi]
64003708:	sub    eax,0x10
6400370b:	cmp    DWORD PTR [eax+0xc],ebp
6400370e:	jle    0x6400371b
64003710:	mov    eax,DWORD PTR [eax+0x4]
64003713:	push   eax
64003714:	mov    ecx,esi
64003716:	call   0x64001950
6400371b:	mov    ecx,DWORD PTR [esi]
6400371d:	sub    edi,ecx
6400371f:	sar    edi,1
64003721:	add    edi,ebp
64003723:	cmp    ecx,ebx
64003725:	jne    0x6400372b
64003727:	xor    eax,eax
64003729:	jmp    0x64003746
6400372b:	mov    eax,ecx
6400372d:	lea    ebp,[eax+0x2]
64003730:	mov    dx,WORD PTR [eax]
64003733:	add    eax,0x2
64003736:	cmp    dx,bx
64003739:	jne    0x64003730
6400373b:	sub    eax,ebp
6400373d:	sar    eax,1
6400373f:	js     0x64003799
64003741:	mov    ebp,0x1
64003746:	cmp    eax,DWORD PTR [ecx-0x8]
64003749:	jg     0x64003799
6400374b:	mov    DWORD PTR [ecx-0xc],eax
6400374e:	mov    ecx,DWORD PTR [esi]
64003750:	mov    WORD PTR [ecx+eax*2],bx
64003754:	mov    eax,DWORD PTR [esi]
64003756:	sub    eax,0x10
64003759:	mov    ecx,ebp
6400375b:	sub    ecx,DWORD PTR [eax+0xc]
6400375e:	mov    eax,DWORD PTR [eax+0x8]
64003761:	sub    eax,edi
64003763:	or     eax,ecx
64003765:	jge    0x6400376f
64003767:	push   edi
64003768:	mov    ecx,esi
6400376a:	call   0x64001e00
6400376f:	cmp    edi,ebx
64003771:	jl     0x64003799
64003773:	mov    eax,DWORD PTR [esi]
64003775:	cmp    edi,DWORD PTR [eax-0x8]
64003778:	jg     0x64003799
6400377a:	mov    DWORD PTR [eax-0xc],edi
6400377d:	mov    edx,DWORD PTR [esi]
6400377f:	mov    WORD PTR [edx+edi*2],bx
64003783:	mov    eax,esi
64003785:	mov    ecx,DWORD PTR [esp+0x5c]
64003789:	mov    DWORD PTR fs:0x0,ecx
64003790:	pop    ecx
64003791:	pop    edi
64003792:	pop    esi
64003793:	pop    ebp
64003794:	pop    ebx
64003795:	add    esp,0x54
64003798:	ret    
64003799:	push   0x80070057
6400379e:	call   0x64001040
640037a3:	int3   
640037a4:	int3   
640037a5:	int3   
640037a6:	int3   
640037a7:	int3   
640037a8:	int3   
640037a9:	int3   
640037aa:	int3   
640037ab:	int3   
640037ac:	int3   
640037ad:	int3   
640037ae:	int3   
640037af:	int3   
640037b0:	push   ebp
640037b1:	lea    ebp,[esp-0x78]
640037b5:	sub    esp,0x78
640037b8:	push   0xffffffff
640037ba:	push   0x64023d19
640037bf:	mov    eax,fs:0x0
640037c5:	push   eax
640037c6:	sub    esp,0xb4
640037cc:	mov    eax,ds:0x6402d09c
640037d1:	xor    eax,ebp
640037d3:	mov    DWORD PTR [ebp+0x74],eax
640037d6:	push   ebx
640037d7:	push   esi
640037d8:	push   edi
640037d9:	push   eax
640037da:	lea    eax,[ebp-0xc]
640037dd:	mov    fs:0x0,eax
640037e3:	call   DWORD PTR ds:0x6402d06c
640037e9:	mov    ebx,eax
640037eb:	lea    eax,[ebp+0xc]
640037ee:	push   eax
640037ef:	call   0x64003630
640037f4:	add    esp,0x4
640037f7:	push   0x0
640037f9:	push   0x0
640037fb:	lea    ecx,[ebp+0x0]
640037fe:	push   ecx
640037ff:	lea    edx,[ebp+0x4]
64003802:	push   edx
64003803:	lea    eax,[ebp+0x8]
64003806:	push   eax
64003807:	push   0x0
64003809:	mov    DWORD PTR [ebp-0x4],0x0
64003810:	mov    ecx,DWORD PTR [ebp+0xc]
64003813:	push   0x0
64003815:	push   ecx
64003816:	call   0x6400d280
6400381b:	call   eax
6400381d:	test   eax,eax
6400381f:	jne    0x64003930
64003825:	call   DWORD PTR ds:0x64025044
6400382b:	push   0xa
6400382d:	lea    edx,[ebp+0x10]
64003830:	push   edx
64003831:	push   eax
64003832:	call   0x64013732
64003837:	mov    eax,DWORD PTR [ebp+0xc]
6400383a:	add    esp,0xc
6400383d:	test   eax,eax
6400383f:	mov    edi,eax
64003841:	je     0x6400386f
64003843:	push   eax
64003844:	call   DWORD PTR ds:0x64025054
6400384a:	add    eax,0x1
6400384d:	cmp    eax,0x3fffffff
64003852:	jle    0x64003858
64003854:	xor    edi,edi
64003856:	jmp    0x6400386f
64003858:	lea    esi,[eax+eax*1]
6400385b:	mov    eax,esi
6400385d:	call   0x64013310
64003862:	mov    eax,esp
64003864:	push   ebx
64003865:	push   esi
64003866:	push   edi
64003867:	push   eax
64003868:	call   0x64002b30
6400386d:	mov    edi,eax
6400386f:	push   0x64027930
64003874:	push   0x21
64003876:	push   0x64027970
6400387b:	call   0x64005750
64003880:	mov    ecx,eax
64003882:	add    esp,0xc
64003885:	mov    DWORD PTR [ebp-0x10],0xf
6400388c:	mov    DWORD PTR [ebp-0x14],0x0
64003893:	mov    BYTE PTR [ebp-0x24],0x0
64003897:	lea    esi,[ecx+0x1]
6400389a:	lea    ebx,[ebx+0x0]
640038a0:	mov    dl,BYTE PTR [ecx]
640038a2:	add    ecx,0x1
640038a5:	test   dl,dl
640038a7:	jne    0x640038a0
640038a9:	sub    ecx,esi
640038ab:	push   ecx
640038ac:	push   eax
640038ad:	lea    ecx,[ebp-0x28]
640038b0:	call   0x64001860
640038b5:	lea    eax,[ebp-0x28]
640038b8:	push   eax
640038b9:	lea    esi,[ebp-0x6c]
640038bc:	mov    BYTE PTR [ebp-0x4],0x1
640038c0:	call   0x640089c0
640038c5:	mov    esi,eax
640038c7:	push   0x640278e8
640038cc:	push   0x7
640038ce:	push   0x64027928
640038d3:	mov    BYTE PTR [ebp-0x4],0x2
640038d7:	call   0x64005750
640038dc:	push   esi
640038dd:	mov    edi,eax
640038df:	lea    esi,[ebp-0x88]
640038e5:	call   0x640089c0
640038ea:	push   eax
640038eb:	lea    edi,[ebp+0x10]
640038ee:	lea    esi,[ebp-0xc0]
640038f4:	mov    BYTE PTR [ebp-0x4],0x3
640038f8:	call   0x640089c0
640038fd:	push   eax
640038fe:	mov    edi,0x640278e4
64003903:	lea    esi,[ebp-0xa4]
64003909:	mov    BYTE PTR [ebp-0x4],0x4
6400390d:	call   0x640089c0
64003912:	add    esp,0x1c
64003915:	push   eax
64003916:	lea    ecx,[ebp-0x50]
64003919:	mov    BYTE PTR [ebp-0x4],0x5
6400391d:	call   0x64002020
64003922:	push   0x6402abdc
64003927:	lea    ecx,[ebp-0x50]
6400392a:	push   ecx
6400392b:	call   0x6401277b
64003930:	mov    esi,DWORD PTR [ebp+0x8]
64003933:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400393a:	mov    eax,DWORD PTR [ebp+0xc]
6400393d:	add    eax,0xfffffff0
64003940:	lea    edx,[eax+0xc]
64003943:	or     ecx,0xffffffff
64003946:	lock xadd DWORD PTR [edx],ecx
6400394a:	dec    ecx
6400394b:	test   ecx,ecx
6400394d:	jg     0x64003959
6400394f:	mov    ecx,DWORD PTR [eax]
64003951:	mov    edx,DWORD PTR [ecx]
64003953:	push   eax
64003954:	mov    eax,DWORD PTR [edx+0x4]
64003957:	call   eax
64003959:	mov    eax,esi
6400395b:	lea    esp,[ebp-0xd0]
64003961:	mov    ecx,DWORD PTR [ebp-0xc]
64003964:	mov    DWORD PTR fs:0x0,ecx
6400396b:	pop    ecx
6400396c:	pop    edi
6400396d:	pop    esi
6400396e:	pop    ebx
6400396f:	mov    ecx,DWORD PTR [ebp+0x74]
64003972:	xor    ecx,ebp
64003974:	call   0x64012b8c
64003979:	add    ebp,0x78
6400397c:	mov    esp,ebp
6400397e:	pop    ebp
6400397f:	ret    
64003980:	push   ebp
64003981:	mov    ebp,esp
64003983:	and    esp,0xfffffff8
64003986:	push   0xffffffff
64003988:	push   0x64023a96
6400398d:	mov    eax,fs:0x0
64003993:	push   eax
64003994:	sub    esp,0x840
6400399a:	mov    eax,ds:0x6402d09c
6400399f:	xor    eax,esp
640039a1:	mov    DWORD PTR [esp+0x838],eax
640039a8:	push   ebx
640039a9:	push   esi
640039aa:	push   edi
640039ab:	mov    eax,ds:0x6402d09c
640039b0:	xor    eax,esp
640039b2:	push   eax
640039b3:	lea    eax,[esp+0x850]
640039ba:	mov    fs:0x0,eax
640039c0:	xor    eax,eax
640039c2:	xor    ebx,ebx
640039c4:	mov    DWORD PTR [esp+0x34],ebx
640039c8:	mov    DWORD PTR [esp+0x38],eax
640039cc:	mov    DWORD PTR [esp+0x3c],eax
640039d0:	mov    DWORD PTR [esp+0x40],eax
640039d4:	mov    DWORD PTR [esp+0x1c],ebx
640039d8:	push   0x64027994
640039dd:	push   0x1f
640039df:	push   0x640279d8
640039e4:	mov    DWORD PTR [esp+0x864],ebx
640039eb:	call   0x64005a10
640039f0:	add    esp,0xc
640039f3:	lea    ecx,[esp+0x18]
640039f7:	push   ecx
640039f8:	push   0x20019
640039fd:	push   ebx
640039fe:	push   eax
640039ff:	push   0x80000002
64003a04:	mov    DWORD PTR [esp+0x2c],ebx
64003a08:	call   DWORD PTR ds:0x64025000
64003a0e:	cmp    eax,ebx
64003a10:	jne    0x64003a87
64003a12:	mov    edx,DWORD PTR [esp+0x18]
64003a16:	push   0x64027a18
64003a1b:	push   0xb
64003a1d:	push   0x64027a44
64003a22:	mov    DWORD PTR [esp+0x28],edx
64003a26:	mov    DWORD PTR [esp+0x2c],0x400
64003a2e:	call   0x64005a10
64003a33:	add    esp,0xc
64003a36:	push   eax
64003a37:	lea    eax,[esp+0x20]
64003a3b:	push   eax
64003a3c:	lea    edi,[esp+0x28]
64003a40:	lea    esi,[esp+0x4c]
64003a44:	call   0x64002b90
64003a49:	test   eax,eax
64003a4b:	je     0x64003aaa
64003a4d:	mov    eax,DWORD PTR [esp+0x18]
64003a51:	test   eax,eax
64003a53:	mov    ecx,DWORD PTR [esp+0x40]
64003a57:	mov    esi,DWORD PTR [esp+0x34]
64003a5b:	mov    edi,DWORD PTR [esp+0x38]
64003a5f:	mov    ebx,DWORD PTR [esp+0x3c]
64003a63:	mov    DWORD PTR [esp+0x30],ecx
64003a67:	je     0x64003a70
64003a69:	push   eax
64003a6a:	call   DWORD PTR ds:0x6402500c
64003a70:	mov    eax,DWORD PTR [ebp+0x8]
64003a73:	mov    edx,DWORD PTR [esp+0x30]
64003a77:	mov    DWORD PTR [eax],esi
64003a79:	mov    DWORD PTR [eax+0x4],edi
64003a7c:	mov    DWORD PTR [eax+0x8],ebx
64003a7f:	mov    DWORD PTR [eax+0xc],edx
64003a82:	jmp    0x64003b79
64003a87:	mov    eax,DWORD PTR [ebp+0x8]
64003a8a:	mov    ecx,DWORD PTR [esp+0x34]
64003a8e:	mov    edx,DWORD PTR [esp+0x38]
64003a92:	mov    DWORD PTR [eax],ecx
64003a94:	mov    ecx,DWORD PTR [esp+0x3c]
64003a98:	mov    DWORD PTR [eax+0x4],edx
64003a9b:	mov    edx,DWORD PTR [esp+0x40]
64003a9f:	mov    DWORD PTR [eax+0x8],ecx
64003aa2:	mov    DWORD PTR [eax+0xc],edx
64003aa5:	jmp    0x64003b79
64003aaa:	push   0x64027a5c
64003aaf:	lea    ecx,[esp+0x18]
64003ab3:	call   0x64002540
64003ab8:	lea    eax,[esp+0x44]
64003abc:	mov    BYTE PTR [esp+0x858],0x1
64003ac4:	lea    edx,[eax+0x2]
64003ac7:	mov    cx,WORD PTR [eax]
64003aca:	add    eax,0x2
64003acd:	cmp    cx,bx
64003ad0:	jne    0x64003ac7
64003ad2:	sub    eax,edx
64003ad4:	sar    eax,1
64003ad6:	push   eax
64003ad7:	lea    eax,[esp+0x48]
64003adb:	push   eax
64003adc:	lea    ecx,[esp+0x1c]
64003ae0:	call   0x64002990
64003ae5:	push   0x1
64003ae7:	push   0x64027a60
64003aec:	lea    ecx,[esp+0x1c]
64003af0:	call   0x64002990
64003af5:	mov    eax,DWORD PTR [esp+0x14]
64003af9:	cmp    DWORD PTR [eax-0x4],0x1
64003afd:	jle    0x64003b10
64003aff:	mov    ecx,DWORD PTR [eax-0xc]
64003b02:	push   ecx
64003b03:	lea    ecx,[esp+0x18]
64003b07:	call   0x64001950
64003b0c:	mov    eax,DWORD PTR [esp+0x14]
64003b10:	lea    edx,[esp+0x34]
64003b14:	push   edx
64003b15:	push   eax
64003b16:	call   DWORD PTR ds:0x640251dc
64003b1c:	mov    eax,DWORD PTR [esp+0x40]
64003b20:	mov    esi,DWORD PTR [esp+0x34]
64003b24:	mov    edi,DWORD PTR [esp+0x38]
64003b28:	mov    ebx,DWORD PTR [esp+0x3c]
64003b2c:	mov    DWORD PTR [esp+0x30],eax
64003b30:	mov    BYTE PTR [esp+0x858],0x0
64003b38:	mov    eax,DWORD PTR [esp+0x14]
64003b3c:	add    eax,0xfffffff0
64003b3f:	lea    ecx,[eax+0xc]
64003b42:	or     edx,0xffffffff
64003b45:	lock xadd DWORD PTR [ecx],edx
64003b49:	dec    edx
64003b4a:	test   edx,edx
64003b4c:	jg     0x64003b58
64003b4e:	mov    ecx,DWORD PTR [eax]
64003b50:	mov    edx,DWORD PTR [ecx]
64003b52:	push   eax
64003b53:	mov    eax,DWORD PTR [edx+0x4]
64003b56:	call   eax
64003b58:	mov    eax,DWORD PTR [esp+0x18]
64003b5c:	test   eax,eax
64003b5e:	je     0x64003b67
64003b60:	push   eax
64003b61:	call   DWORD PTR ds:0x6402500c
64003b67:	mov    eax,DWORD PTR [ebp+0x8]
64003b6a:	mov    ecx,DWORD PTR [esp+0x30]
64003b6e:	mov    DWORD PTR [eax],esi
64003b70:	mov    DWORD PTR [eax+0x4],edi
64003b73:	mov    DWORD PTR [eax+0x8],ebx
64003b76:	mov    DWORD PTR [eax+0xc],ecx
64003b79:	mov    ecx,DWORD PTR [esp+0x850]
64003b80:	mov    DWORD PTR fs:0x0,ecx
64003b87:	pop    ecx
64003b88:	pop    edi
64003b89:	pop    esi
64003b8a:	pop    ebx
64003b8b:	mov    ecx,DWORD PTR [esp+0x838]
64003b92:	xor    ecx,esp
64003b94:	call   0x64012b8c
64003b99:	mov    esp,ebp
64003b9b:	pop    ebp
64003b9c:	ret    
64003b9d:	int3   
64003b9e:	int3   
64003b9f:	int3   
64003ba0:	push   ebp
64003ba1:	lea    ebp,[esp-0x820]
64003ba8:	sub    esp,0x820
64003bae:	push   0xffffffff
64003bb0:	push   0x64023a49
64003bb5:	mov    eax,fs:0x0
64003bbb:	push   eax
64003bbc:	sub    esp,0x44
64003bbf:	mov    eax,ds:0x6402d09c
64003bc4:	xor    eax,ebp
64003bc6:	mov    DWORD PTR [ebp+0x81c],eax
64003bcc:	push   ebx
64003bcd:	push   esi
64003bce:	push   edi
64003bcf:	push   eax
64003bd0:	lea    eax,[ebp-0xc]
64003bd3:	mov    fs:0x0,eax
64003bd9:	xor    ebx,ebx
64003bdb:	mov    DWORD PTR [ebp-0x4],ebx
64003bde:	test   BYTE PTR ds:0x640314bc,0x1
64003be5:	jne    0x64003c2d
64003be7:	or     DWORD PTR ds:0x640314bc,0x1
64003bee:	mov    BYTE PTR [ebp-0x4],0x1
64003bf2:	call   0x64007790
64003bf7:	mov    ds:0x64031354,eax
64003bfc:	mov    BYTE PTR [eax+0x29],0x1
64003c00:	mov    eax,ds:0x64031354
64003c05:	mov    DWORD PTR [eax+0x4],eax
64003c08:	mov    eax,ds:0x64031354
64003c0d:	mov    DWORD PTR [eax],eax
64003c0f:	mov    eax,ds:0x64031354
64003c14:	mov    DWORD PTR [eax+0x8],eax
64003c17:	push   0x64024070
64003c1c:	mov    DWORD PTR ds:0x64031358,ebx
64003c22:	call   0x64012cbf
64003c27:	add    esp,0x4
64003c2a:	mov    BYTE PTR [ebp-0x4],bl
64003c2d:	cmp    DWORD PTR ds:0x64031358,ebx
64003c33:	jne    0x64004aff
64003c39:	call   0x64007790
64003c3e:	mov    DWORD PTR [ebp-0x30],eax
64003c41:	mov    BYTE PTR [eax+0x29],0x1
64003c45:	mov    eax,DWORD PTR [ebp-0x30]
64003c48:	mov    DWORD PTR [eax+0x4],eax
64003c4b:	mov    eax,DWORD PTR [ebp-0x30]
64003c4e:	mov    DWORD PTR [eax],eax
64003c50:	mov    eax,DWORD PTR [ebp-0x30]
64003c53:	mov    DWORD PTR [eax+0x8],eax
64003c56:	mov    DWORD PTR [ebp-0x2c],ebx
64003c59:	push   0x64027a64
64003c5e:	push   0x3
64003c60:	push   0x64027a8c
64003c65:	mov    BYTE PTR [ebp-0x4],0x2
64003c69:	call   0x64005750
64003c6e:	mov    esi,eax
64003c70:	mov    ecx,esi
64003c72:	add    esp,0xc
64003c75:	mov    DWORD PTR [ebp-0x10],0xf
64003c7c:	mov    DWORD PTR [ebp-0x14],ebx
64003c7f:	mov    BYTE PTR [ebp-0x24],bl
64003c82:	lea    edi,[ecx+0x1]
64003c85:	mov    al,BYTE PTR [ecx]
64003c87:	add    ecx,0x1
64003c8a:	cmp    al,bl
64003c8c:	jne    0x64003c85
64003c8e:	sub    ecx,edi
64003c90:	push   ecx
64003c91:	push   esi
64003c92:	lea    ecx,[ebp-0x28]
64003c95:	call   0x64001860
64003c9a:	lea    eax,[ebp-0x28]
64003c9d:	push   eax
64003c9e:	lea    ecx,[ebp-0x40]
64003ca1:	push   ecx
64003ca2:	lea    edx,[ebp-0x34]
64003ca5:	push   edx
64003ca6:	mov    BYTE PTR [ebp-0x4],0x3
64003caa:	call   0x64005ce0
64003caf:	mov    BYTE PTR [ebp-0x4],0x2
64003cb3:	cmp    DWORD PTR [ebp-0x10],0x10
64003cb7:	jb     0x64003cc5
64003cb9:	mov    eax,DWORD PTR [ebp-0x24]
64003cbc:	push   eax
64003cbd:	call   0x64012332
64003cc2:	add    esp,0x4
64003cc5:	push   0x64027a90
64003cca:	push   0x8
64003ccc:	push   0x64027ac0
64003cd1:	call   0x64005750
64003cd6:	mov    esi,eax
64003cd8:	mov    ecx,esi
64003cda:	add    esp,0xc
64003cdd:	mov    DWORD PTR [ebp-0x10],0xf
64003ce4:	mov    DWORD PTR [ebp-0x14],ebx
64003ce7:	mov    BYTE PTR [ebp-0x24],bl
64003cea:	lea    edx,[ecx+0x1]
64003ced:	lea    ecx,[ecx+0x0]
64003cf0:	mov    al,BYTE PTR [ecx]
64003cf2:	add    ecx,0x1
64003cf5:	cmp    al,bl
64003cf7:	jne    0x64003cf0
64003cf9:	sub    ecx,edx
64003cfb:	push   ecx
64003cfc:	push   esi
64003cfd:	lea    ecx,[ebp-0x28]
64003d00:	call   0x64001860
64003d05:	lea    ecx,[ebp-0x28]
64003d08:	push   ecx
64003d09:	lea    edx,[ebp-0x40]
64003d0c:	push   edx
64003d0d:	lea    eax,[ebp-0x34]
64003d10:	push   eax
64003d11:	mov    BYTE PTR [ebp-0x4],0x4
64003d15:	call   0x64005ce0
64003d1a:	mov    edi,0x10
64003d1f:	mov    BYTE PTR [ebp-0x4],0x2
64003d23:	cmp    DWORD PTR [ebp-0x10],edi
64003d26:	jb     0x64003d34
64003d28:	mov    ecx,DWORD PTR [ebp-0x24]
64003d2b:	push   ecx
64003d2c:	call   0x64012332
64003d31:	add    esp,0x4
64003d34:	push   0x64027acc
64003d39:	push   0x8
64003d3b:	push   0x64027af4
64003d40:	call   0x64005750
64003d45:	mov    esi,eax
64003d47:	mov    ecx,esi
64003d49:	add    esp,0xc
64003d4c:	mov    DWORD PTR [ebp-0x10],0xf
64003d53:	mov    DWORD PTR [ebp-0x14],ebx
64003d56:	mov    BYTE PTR [ebp-0x24],bl
64003d59:	lea    edx,[ecx+0x1]
64003d5c:	lea    esp,[esp+0x0]
64003d60:	mov    al,BYTE PTR [ecx]
64003d62:	add    ecx,0x1
64003d65:	cmp    al,bl
64003d67:	jne    0x64003d60
64003d69:	sub    ecx,edx
64003d6b:	push   ecx
64003d6c:	push   esi
64003d6d:	lea    ecx,[ebp-0x28]
64003d70:	call   0x64001860
64003d75:	lea    edx,[ebp-0x28]
64003d78:	push   edx
64003d79:	lea    eax,[ebp-0x40]
64003d7c:	push   eax
64003d7d:	lea    ecx,[ebp-0x34]
64003d80:	push   ecx
64003d81:	mov    BYTE PTR [ebp-0x4],0x5
64003d85:	call   0x64005ce0
64003d8a:	mov    BYTE PTR [ebp-0x4],0x2
64003d8e:	cmp    DWORD PTR [ebp-0x10],edi
64003d91:	jb     0x64003d9f
64003d93:	mov    edx,DWORD PTR [ebp-0x24]
64003d96:	push   edx
64003d97:	call   0x64012332
64003d9c:	add    esp,0x4
64003d9f:	push   0x64027b00
64003da4:	push   0xa
64003da6:	push   0x64027b3c
64003dab:	call   0x64005750
64003db0:	mov    esi,eax
64003db2:	mov    ecx,esi
64003db4:	add    esp,0xc
64003db7:	mov    DWORD PTR [ebp-0x10],0xf
64003dbe:	mov    DWORD PTR [ebp-0x14],ebx
64003dc1:	mov    BYTE PTR [ebp-0x24],bl
64003dc4:	lea    edx,[ecx+0x1]
64003dc7:	mov    al,BYTE PTR [ecx]
64003dc9:	add    ecx,0x1
64003dcc:	cmp    al,bl
64003dce:	jne    0x64003dc7
64003dd0:	sub    ecx,edx
64003dd2:	push   ecx
64003dd3:	push   esi
64003dd4:	lea    ecx,[ebp-0x28]
64003dd7:	call   0x64001860
64003ddc:	lea    eax,[ebp-0x28]
64003ddf:	push   eax
64003de0:	lea    ecx,[ebp-0x40]
64003de3:	push   ecx
64003de4:	lea    edx,[ebp-0x34]
64003de7:	push   edx
64003de8:	mov    BYTE PTR [ebp-0x4],0x6
64003dec:	call   0x64005ce0
64003df1:	mov    BYTE PTR [ebp-0x4],0x2
64003df5:	cmp    DWORD PTR [ebp-0x10],edi
64003df8:	jb     0x64003e06
64003dfa:	mov    eax,DWORD PTR [ebp-0x24]
64003dfd:	push   eax
64003dfe:	call   0x64012332
64003e03:	add    esp,0x4
64003e06:	push   0x64027b48
64003e0b:	push   0x4
64003e0d:	push   0x64027b88
64003e12:	call   0x64005750
64003e17:	mov    esi,eax
64003e19:	mov    ecx,esi
64003e1b:	add    esp,0xc
64003e1e:	mov    DWORD PTR [ebp-0x10],0xf
64003e25:	mov    DWORD PTR [ebp-0x14],ebx
64003e28:	mov    BYTE PTR [ebp-0x24],bl
64003e2b:	lea    edx,[ecx+0x1]
64003e2e:	mov    edi,edi
64003e30:	mov    al,BYTE PTR [ecx]
64003e32:	add    ecx,0x1
64003e35:	cmp    al,bl
64003e37:	jne    0x64003e30
64003e39:	sub    ecx,edx
64003e3b:	push   ecx
64003e3c:	push   esi
64003e3d:	lea    ecx,[ebp-0x28]
64003e40:	call   0x64001860
64003e45:	lea    ecx,[ebp-0x28]
64003e48:	push   ecx
64003e49:	lea    edx,[ebp-0x40]
64003e4c:	push   edx
64003e4d:	lea    eax,[ebp-0x34]
64003e50:	push   eax
64003e51:	mov    BYTE PTR [ebp-0x4],0x7
64003e55:	call   0x64005ce0
64003e5a:	mov    BYTE PTR [ebp-0x4],0x2
64003e5e:	cmp    DWORD PTR [ebp-0x10],edi
64003e61:	jb     0x64003e6f
64003e63:	mov    ecx,DWORD PTR [ebp-0x24]
64003e66:	push   ecx
64003e67:	call   0x64012332
64003e6c:	add    esp,0x4
64003e6f:	push   0x64027b90
64003e74:	push   0x8
64003e76:	push   0x64027bc8
64003e7b:	call   0x64005750
64003e80:	mov    esi,eax
64003e82:	mov    ecx,esi
64003e84:	add    esp,0xc
64003e87:	mov    DWORD PTR [ebp-0x10],0xf
64003e8e:	mov    DWORD PTR [ebp-0x14],ebx
64003e91:	mov    BYTE PTR [ebp-0x24],bl
64003e94:	lea    edx,[ecx+0x1]
64003e97:	mov    al,BYTE PTR [ecx]
64003e99:	add    ecx,0x1
64003e9c:	cmp    al,bl
64003e9e:	jne    0x64003e97
64003ea0:	sub    ecx,edx
64003ea2:	push   ecx
64003ea3:	push   esi
64003ea4:	lea    ecx,[ebp-0x28]
64003ea7:	call   0x64001860
64003eac:	lea    edx,[ebp-0x28]
64003eaf:	push   edx
64003eb0:	lea    eax,[ebp-0x40]
64003eb3:	push   eax
64003eb4:	lea    ecx,[ebp-0x34]
64003eb7:	push   ecx
64003eb8:	mov    BYTE PTR [ebp-0x4],0x8
64003ebc:	call   0x64005ce0
64003ec1:	mov    BYTE PTR [ebp-0x4],0x2
64003ec5:	cmp    DWORD PTR [ebp-0x10],edi
64003ec8:	jb     0x64003ed6
64003eca:	mov    edx,DWORD PTR [ebp-0x24]
64003ecd:	push   edx
64003ece:	call   0x64012332
64003ed3:	add    esp,0x4
64003ed6:	push   0x64027bd4
64003edb:	push   0x5
64003edd:	push   0x64027bfc
64003ee2:	call   0x64005750
64003ee7:	mov    esi,eax
64003ee9:	mov    ecx,esi
64003eeb:	add    esp,0xc
64003eee:	mov    DWORD PTR [ebp-0x10],0xf
64003ef5:	mov    DWORD PTR [ebp-0x14],ebx
64003ef8:	mov    BYTE PTR [ebp-0x24],bl
64003efb:	lea    edx,[ecx+0x1]
64003efe:	mov    edi,edi
64003f00:	mov    al,BYTE PTR [ecx]
64003f02:	add    ecx,0x1
64003f05:	cmp    al,bl
64003f07:	jne    0x64003f00
64003f09:	sub    ecx,edx
64003f0b:	push   ecx
64003f0c:	push   esi
64003f0d:	lea    ecx,[ebp-0x28]
64003f10:	call   0x64001860
64003f15:	lea    eax,[ebp-0x28]
64003f18:	push   eax
64003f19:	lea    ecx,[ebp-0x40]
64003f1c:	push   ecx
64003f1d:	lea    edx,[ebp-0x34]
64003f20:	push   edx
64003f21:	mov    BYTE PTR [ebp-0x4],0x9
64003f25:	call   0x64005ce0
64003f2a:	mov    BYTE PTR [ebp-0x4],0x2
64003f2e:	cmp    DWORD PTR [ebp-0x10],edi
64003f31:	jb     0x64003f3f
64003f33:	mov    eax,DWORD PTR [ebp-0x24]
64003f36:	push   eax
64003f37:	call   0x64012332
64003f3c:	add    esp,0x4
64003f3f:	push   0x64027c04
64003f44:	push   0x8
64003f46:	push   0x64027c3c
64003f4b:	call   0x64005750
64003f50:	mov    esi,eax
64003f52:	mov    ecx,esi
64003f54:	add    esp,0xc
64003f57:	mov    DWORD PTR [ebp-0x10],0xf
64003f5e:	mov    DWORD PTR [ebp-0x14],ebx
64003f61:	mov    BYTE PTR [ebp-0x24],bl
64003f64:	lea    edx,[ecx+0x1]
64003f67:	mov    al,BYTE PTR [ecx]
64003f69:	add    ecx,0x1
64003f6c:	cmp    al,bl
64003f6e:	jne    0x64003f67
64003f70:	sub    ecx,edx
64003f72:	push   ecx
64003f73:	push   esi
64003f74:	lea    ecx,[ebp-0x28]
64003f77:	call   0x64001860
64003f7c:	lea    ecx,[ebp-0x28]
64003f7f:	push   ecx
64003f80:	lea    edx,[ebp-0x40]
64003f83:	push   edx
64003f84:	lea    eax,[ebp-0x34]
64003f87:	push   eax
64003f88:	mov    BYTE PTR [ebp-0x4],0xa
64003f8c:	call   0x64005ce0
64003f91:	mov    BYTE PTR [ebp-0x4],0x2
64003f95:	cmp    DWORD PTR [ebp-0x10],edi
64003f98:	jb     0x64003fa6
64003f9a:	mov    ecx,DWORD PTR [ebp-0x24]
64003f9d:	push   ecx
64003f9e:	call   0x64012332
64003fa3:	add    esp,0x4
64003fa6:	push   0x64027c48
64003fab:	push   0xb
64003fad:	push   0x64027c6c
64003fb2:	call   0x64005750
64003fb7:	mov    esi,eax
64003fb9:	mov    ecx,esi
64003fbb:	add    esp,0xc
64003fbe:	mov    DWORD PTR [ebp-0x10],0xf
64003fc5:	mov    DWORD PTR [ebp-0x14],ebx
64003fc8:	mov    BYTE PTR [ebp-0x24],bl
64003fcb:	lea    edx,[ecx+0x1]
64003fce:	mov    edi,edi
64003fd0:	mov    al,BYTE PTR [ecx]
64003fd2:	add    ecx,0x1
64003fd5:	cmp    al,bl
64003fd7:	jne    0x64003fd0
64003fd9:	sub    ecx,edx
64003fdb:	push   ecx
64003fdc:	push   esi
64003fdd:	lea    ecx,[ebp-0x28]
64003fe0:	call   0x64001860
64003fe5:	lea    edx,[ebp-0x28]
64003fe8:	push   edx
64003fe9:	lea    eax,[ebp-0x40]
64003fec:	push   eax
64003fed:	lea    ecx,[ebp-0x34]
64003ff0:	push   ecx
64003ff1:	mov    BYTE PTR [ebp-0x4],0xb
64003ff5:	call   0x64005ce0
64003ffa:	mov    BYTE PTR [ebp-0x4],0x2
64003ffe:	cmp    DWORD PTR [ebp-0x10],edi
64004001:	jb     0x6400400f
64004003:	mov    edx,DWORD PTR [ebp-0x24]
64004006:	push   edx
64004007:	call   0x64012332
6400400c:	add    esp,0x4
6400400f:	push   0x64027c78
64004014:	push   0x1e
64004016:	push   0x64027cb8
6400401b:	call   0x64005750
64004020:	mov    esi,eax
64004022:	mov    ecx,esi
64004024:	add    esp,0xc
64004027:	mov    DWORD PTR [ebp-0x10],0xf
6400402e:	mov    DWORD PTR [ebp-0x14],ebx
64004031:	mov    BYTE PTR [ebp-0x24],bl
64004034:	lea    edx,[ecx+0x1]
64004037:	mov    al,BYTE PTR [ecx]
64004039:	add    ecx,0x1
6400403c:	cmp    al,bl
6400403e:	jne    0x64004037
64004040:	sub    ecx,edx
64004042:	push   ecx
64004043:	push   esi
64004044:	lea    ecx,[ebp-0x28]
64004047:	call   0x64001860
6400404c:	lea    eax,[ebp-0x28]
6400404f:	push   eax
64004050:	lea    ecx,[ebp-0x40]
64004053:	push   ecx
64004054:	lea    edx,[ebp-0x34]
64004057:	push   edx
64004058:	mov    BYTE PTR [ebp-0x4],0xc
6400405c:	call   0x64005ce0
64004061:	mov    BYTE PTR [ebp-0x4],0x2
64004065:	cmp    DWORD PTR [ebp-0x10],edi
64004068:	jb     0x64004076
6400406a:	mov    eax,DWORD PTR [ebp-0x24]
6400406d:	push   eax
6400406e:	call   0x64012332
64004073:	add    esp,0x4
64004076:	push   0x64027cd8
6400407b:	push   0x7
6400407d:	push   0x64027d00
64004082:	call   0x64005750
64004087:	mov    esi,eax
64004089:	mov    ecx,esi
6400408b:	add    esp,0xc
6400408e:	mov    DWORD PTR [ebp-0x10],0xf
64004095:	mov    DWORD PTR [ebp-0x14],ebx
64004098:	mov    BYTE PTR [ebp-0x24],bl
6400409b:	lea    edx,[ecx+0x1]
6400409e:	mov    edi,edi
640040a0:	mov    al,BYTE PTR [ecx]
640040a2:	add    ecx,0x1
640040a5:	cmp    al,bl
640040a7:	jne    0x640040a0
640040a9:	sub    ecx,edx
640040ab:	push   ecx
640040ac:	push   esi
640040ad:	lea    ecx,[ebp-0x28]
640040b0:	call   0x64001860
640040b5:	lea    ecx,[ebp-0x28]
640040b8:	push   ecx
640040b9:	lea    edx,[ebp-0x40]
640040bc:	push   edx
640040bd:	lea    eax,[ebp-0x34]
640040c0:	push   eax
640040c1:	mov    BYTE PTR [ebp-0x4],0xd
640040c5:	call   0x64005ce0
640040ca:	mov    BYTE PTR [ebp-0x4],0x2
640040ce:	cmp    DWORD PTR [ebp-0x10],edi
640040d1:	jb     0x640040df
640040d3:	mov    ecx,DWORD PTR [ebp-0x24]
640040d6:	push   ecx
640040d7:	call   0x64012332
640040dc:	add    esp,0x4
640040df:	push   0x64027d08
640040e4:	push   0xc
640040e6:	push   0x64027d2c
640040eb:	call   0x64005750
640040f0:	mov    esi,eax
640040f2:	mov    ecx,esi
640040f4:	add    esp,0xc
640040f7:	mov    DWORD PTR [ebp-0x10],0xf
640040fe:	mov    DWORD PTR [ebp-0x14],ebx
64004101:	mov    BYTE PTR [ebp-0x24],bl
64004104:	lea    edx,[ecx+0x1]
64004107:	mov    al,BYTE PTR [ecx]
64004109:	add    ecx,0x1
6400410c:	cmp    al,bl
6400410e:	jne    0x64004107
64004110:	sub    ecx,edx
64004112:	push   ecx
64004113:	push   esi
64004114:	lea    ecx,[ebp-0x28]
64004117:	call   0x64001860
6400411c:	lea    edx,[ebp-0x28]
6400411f:	push   edx
64004120:	lea    eax,[ebp-0x40]
64004123:	push   eax
64004124:	lea    ecx,[ebp-0x34]
64004127:	push   ecx
64004128:	mov    BYTE PTR [ebp-0x4],0xe
6400412c:	call   0x64005ce0
64004131:	mov    BYTE PTR [ebp-0x4],0x2
64004135:	cmp    DWORD PTR [ebp-0x10],edi
64004138:	jb     0x64004146
6400413a:	mov    edx,DWORD PTR [ebp-0x24]
6400413d:	push   edx
6400413e:	call   0x64012332
64004143:	add    esp,0x4
64004146:	push   0x64027d3c
6400414b:	push   0x11
6400414d:	push   0x64027d60
64004152:	call   0x64005750
64004157:	mov    esi,eax
64004159:	mov    ecx,esi
6400415b:	add    esp,0xc
6400415e:	mov    DWORD PTR [ebp-0x10],0xf
64004165:	mov    DWORD PTR [ebp-0x14],ebx
64004168:	mov    BYTE PTR [ebp-0x24],bl
6400416b:	lea    edx,[ecx+0x1]
6400416e:	mov    edi,edi
64004170:	mov    al,BYTE PTR [ecx]
64004172:	add    ecx,0x1
64004175:	cmp    al,bl
64004177:	jne    0x64004170
64004179:	sub    ecx,edx
6400417b:	push   ecx
6400417c:	push   esi
6400417d:	lea    ecx,[ebp-0x28]
64004180:	call   0x64001860
64004185:	lea    eax,[ebp-0x28]
64004188:	push   eax
64004189:	lea    ecx,[ebp-0x40]
6400418c:	push   ecx
6400418d:	lea    edx,[ebp-0x34]
64004190:	push   edx
64004191:	mov    BYTE PTR [ebp-0x4],0xf
64004195:	call   0x64005ce0
6400419a:	mov    BYTE PTR [ebp-0x4],0x2
6400419e:	cmp    DWORD PTR [ebp-0x10],edi
640041a1:	jb     0x640041af
640041a3:	mov    eax,DWORD PTR [ebp-0x24]
640041a6:	push   eax
640041a7:	call   0x64012332
640041ac:	add    esp,0x4
640041af:	push   0x64027d74
640041b4:	push   0x7
640041b6:	push   0x64027da0
640041bb:	call   0x64005750
640041c0:	mov    esi,eax
640041c2:	mov    ecx,esi
640041c4:	add    esp,0xc
640041c7:	mov    DWORD PTR [ebp-0x10],0xf
640041ce:	mov    DWORD PTR [ebp-0x14],ebx
640041d1:	mov    BYTE PTR [ebp-0x24],bl
640041d4:	lea    edx,[ecx+0x1]
640041d7:	mov    al,BYTE PTR [ecx]
640041d9:	add    ecx,0x1
640041dc:	cmp    al,bl
640041de:	jne    0x640041d7
640041e0:	sub    ecx,edx
640041e2:	push   ecx
640041e3:	push   esi
640041e4:	lea    ecx,[ebp-0x28]
640041e7:	call   0x64001860
640041ec:	lea    ecx,[ebp-0x28]
640041ef:	push   ecx
640041f0:	lea    edx,[ebp-0x40]
640041f3:	push   edx
640041f4:	lea    eax,[ebp-0x34]
640041f7:	push   eax
640041f8:	mov    BYTE PTR [ebp-0x4],0x10
640041fc:	call   0x64005ce0
64004201:	mov    BYTE PTR [ebp-0x4],0x2
64004205:	cmp    DWORD PTR [ebp-0x10],edi
64004208:	jb     0x64004216
6400420a:	mov    ecx,DWORD PTR [ebp-0x24]
6400420d:	push   ecx
6400420e:	call   0x64012332
64004213:	add    esp,0x4
64004216:	push   0x64027da8
6400421b:	push   0x6
6400421d:	push   0x64027dd0
64004222:	call   0x64005750
64004227:	mov    esi,eax
64004229:	mov    ecx,esi
6400422b:	add    esp,0xc
6400422e:	mov    DWORD PTR [ebp-0x10],0xf
64004235:	mov    DWORD PTR [ebp-0x14],ebx
64004238:	mov    BYTE PTR [ebp-0x24],bl
6400423b:	lea    edx,[ecx+0x1]
6400423e:	mov    edi,edi
64004240:	mov    al,BYTE PTR [ecx]
64004242:	add    ecx,0x1
64004245:	cmp    al,bl
64004247:	jne    0x64004240
64004249:	sub    ecx,edx
6400424b:	push   ecx
6400424c:	push   esi
6400424d:	lea    ecx,[ebp-0x28]
64004250:	call   0x64001860
64004255:	lea    edx,[ebp-0x28]
64004258:	push   edx
64004259:	lea    eax,[ebp-0x40]
6400425c:	push   eax
6400425d:	lea    ecx,[ebp-0x34]
64004260:	push   ecx
64004261:	mov    BYTE PTR [ebp-0x4],0x11
64004265:	call   0x64005ce0
6400426a:	mov    BYTE PTR [ebp-0x4],0x2
6400426e:	cmp    DWORD PTR [ebp-0x10],edi
64004271:	jb     0x6400427f
64004273:	mov    edx,DWORD PTR [ebp-0x24]
64004276:	push   edx
64004277:	call   0x64012332
6400427c:	add    esp,0x4
6400427f:	push   0x64027dd8
64004284:	push   0x3
64004286:	push   0x64027e10
6400428b:	call   0x64005750
64004290:	mov    esi,eax
64004292:	mov    ecx,esi
64004294:	add    esp,0xc
64004297:	mov    DWORD PTR [ebp-0x10],0xf
6400429e:	mov    DWORD PTR [ebp-0x14],ebx
640042a1:	mov    BYTE PTR [ebp-0x24],bl
640042a4:	lea    edx,[ecx+0x1]
640042a7:	mov    al,BYTE PTR [ecx]
640042a9:	add    ecx,0x1
640042ac:	cmp    al,bl
640042ae:	jne    0x640042a7
640042b0:	sub    ecx,edx
640042b2:	push   ecx
640042b3:	push   esi
640042b4:	lea    ecx,[ebp-0x28]
640042b7:	call   0x64001860
640042bc:	lea    eax,[ebp-0x28]
640042bf:	push   eax
640042c0:	lea    ecx,[ebp-0x40]
640042c3:	push   ecx
640042c4:	lea    edx,[ebp-0x34]
640042c7:	push   edx
640042c8:	mov    BYTE PTR [ebp-0x4],0x12
640042cc:	call   0x64005ce0
640042d1:	mov    BYTE PTR [ebp-0x4],0x2
640042d5:	cmp    DWORD PTR [ebp-0x10],edi
640042d8:	jb     0x640042e6
640042da:	mov    eax,DWORD PTR [ebp-0x24]
640042dd:	push   eax
640042de:	call   0x64012332
640042e3:	add    esp,0x4
640042e6:	push   0x64027e14
640042eb:	push   0x8
640042ed:	push   0x64027e50
640042f2:	call   0x64005750
640042f7:	mov    esi,eax
640042f9:	mov    ecx,esi
640042fb:	add    esp,0xc
640042fe:	mov    DWORD PTR [ebp-0x10],0xf
64004305:	mov    DWORD PTR [ebp-0x14],ebx
64004308:	mov    BYTE PTR [ebp-0x24],bl
6400430b:	lea    edx,[ecx+0x1]
6400430e:	mov    edi,edi
64004310:	mov    al,BYTE PTR [ecx]
64004312:	add    ecx,0x1
64004315:	cmp    al,bl
64004317:	jne    0x64004310
64004319:	sub    ecx,edx
6400431b:	push   ecx
6400431c:	push   esi
6400431d:	lea    ecx,[ebp-0x28]
64004320:	call   0x64001860
64004325:	lea    ecx,[ebp-0x28]
64004328:	push   ecx
64004329:	lea    edx,[ebp-0x40]
6400432c:	push   edx
6400432d:	lea    eax,[ebp-0x34]
64004330:	push   eax
64004331:	mov    BYTE PTR [ebp-0x4],0x13
64004335:	call   0x64005ce0
6400433a:	mov    BYTE PTR [ebp-0x4],0x2
6400433e:	cmp    DWORD PTR [ebp-0x10],edi
64004341:	jb     0x6400434f
64004343:	mov    ecx,DWORD PTR [ebp-0x24]
64004346:	push   ecx
64004347:	call   0x64012332
6400434c:	add    esp,0x4
6400434f:	push   0x64027e5c
64004354:	push   0xb
64004356:	push   0x64027e90
6400435b:	call   0x64005750
64004360:	mov    esi,eax
64004362:	mov    ecx,esi
64004364:	add    esp,0xc
64004367:	mov    DWORD PTR [ebp-0x10],0xf
6400436e:	mov    DWORD PTR [ebp-0x14],ebx
64004371:	mov    BYTE PTR [ebp-0x24],bl
64004374:	lea    edx,[ecx+0x1]
64004377:	mov    al,BYTE PTR [ecx]
64004379:	add    ecx,0x1
6400437c:	cmp    al,bl
6400437e:	jne    0x64004377
64004380:	sub    ecx,edx
64004382:	push   ecx
64004383:	push   esi
64004384:	lea    ecx,[ebp-0x28]
64004387:	call   0x64001860
6400438c:	lea    edx,[ebp-0x28]
6400438f:	push   edx
64004390:	lea    eax,[ebp-0x40]
64004393:	push   eax
64004394:	lea    ecx,[ebp-0x34]
64004397:	push   ecx
64004398:	mov    BYTE PTR [ebp-0x4],0x14
6400439c:	call   0x64005ce0
640043a1:	mov    BYTE PTR [ebp-0x4],0x2
640043a5:	cmp    DWORD PTR [ebp-0x10],edi
640043a8:	jb     0x640043b6
640043aa:	mov    edx,DWORD PTR [ebp-0x24]
640043ad:	push   edx
640043ae:	call   0x64012332
640043b3:	add    esp,0x4
640043b6:	push   0x64027e9c
640043bb:	push   edi
640043bc:	push   0x64027ecc
640043c1:	call   0x64005750
640043c6:	mov    esi,eax
640043c8:	mov    ecx,esi
640043ca:	add    esp,0xc
640043cd:	mov    DWORD PTR [ebp-0x10],0xf
640043d4:	mov    DWORD PTR [ebp-0x14],ebx
640043d7:	mov    BYTE PTR [ebp-0x24],bl
640043da:	lea    edx,[ecx+0x1]
640043dd:	lea    ecx,[ecx+0x0]
640043e0:	mov    al,BYTE PTR [ecx]
640043e2:	add    ecx,0x1
640043e5:	cmp    al,bl
640043e7:	jne    0x640043e0
640043e9:	sub    ecx,edx
640043eb:	push   ecx
640043ec:	push   esi
640043ed:	lea    ecx,[ebp-0x28]
640043f0:	call   0x64001860
640043f5:	lea    eax,[ebp-0x28]
640043f8:	push   eax
640043f9:	lea    ecx,[ebp-0x40]
640043fc:	push   ecx
640043fd:	lea    edx,[ebp-0x34]
64004400:	push   edx
64004401:	mov    BYTE PTR [ebp-0x4],0x15
64004405:	call   0x64005ce0
6400440a:	mov    BYTE PTR [ebp-0x4],0x2
6400440e:	cmp    DWORD PTR [ebp-0x10],edi
64004411:	jb     0x6400441f
64004413:	mov    eax,DWORD PTR [ebp-0x24]
64004416:	push   eax
64004417:	call   0x64012332
6400441c:	add    esp,0x4
6400441f:	push   0x64027ee0
64004424:	push   0x5
64004426:	push   0x64027f18
6400442b:	call   0x64005750
64004430:	mov    esi,eax
64004432:	mov    ecx,esi
64004434:	add    esp,0xc
64004437:	mov    DWORD PTR [ebp-0x10],0xf
6400443e:	mov    DWORD PTR [ebp-0x14],ebx
64004441:	mov    BYTE PTR [ebp-0x24],bl
64004444:	lea    edx,[ecx+0x1]
64004447:	mov    al,BYTE PTR [ecx]
64004449:	add    ecx,0x1
6400444c:	cmp    al,bl
6400444e:	jne    0x64004447
64004450:	sub    ecx,edx
64004452:	push   ecx
64004453:	push   esi
64004454:	lea    ecx,[ebp-0x28]
64004457:	call   0x64001860
6400445c:	lea    ecx,[ebp-0x28]
6400445f:	push   ecx
64004460:	lea    edx,[ebp-0x40]
64004463:	push   edx
64004464:	lea    eax,[ebp-0x34]
64004467:	push   eax
64004468:	mov    BYTE PTR [ebp-0x4],0x16
6400446c:	call   0x64005ce0
64004471:	mov    BYTE PTR [ebp-0x4],0x2
64004475:	cmp    DWORD PTR [ebp-0x10],edi
64004478:	jb     0x64004486
6400447a:	mov    ecx,DWORD PTR [ebp-0x24]
6400447d:	push   ecx
6400447e:	call   0x64012332
64004483:	add    esp,0x4
64004486:	push   0x64027f20
6400448b:	push   0x5
6400448d:	push   0x64027f4c
64004492:	call   0x64005750
64004497:	mov    esi,eax
64004499:	mov    ecx,esi
6400449b:	add    esp,0xc
6400449e:	mov    DWORD PTR [ebp-0x10],0xf
640044a5:	mov    DWORD PTR [ebp-0x14],ebx
640044a8:	mov    BYTE PTR [ebp-0x24],bl
640044ab:	lea    edx,[ecx+0x1]
640044ae:	mov    edi,edi
640044b0:	mov    al,BYTE PTR [ecx]
640044b2:	add    ecx,0x1
640044b5:	cmp    al,bl
640044b7:	jne    0x640044b0
640044b9:	sub    ecx,edx
640044bb:	push   ecx
640044bc:	push   esi
640044bd:	lea    ecx,[ebp-0x28]
640044c0:	call   0x64001860
640044c5:	lea    edx,[ebp-0x28]
640044c8:	push   edx
640044c9:	lea    eax,[ebp-0x40]
640044cc:	push   eax
640044cd:	lea    ecx,[ebp-0x34]
640044d0:	push   ecx
640044d1:	mov    BYTE PTR [ebp-0x4],0x17
640044d5:	call   0x64005ce0
640044da:	mov    BYTE PTR [ebp-0x4],0x2
640044de:	cmp    DWORD PTR [ebp-0x10],edi
640044e1:	jb     0x640044ef
640044e3:	mov    edx,DWORD PTR [ebp-0x24]
640044e6:	push   edx
640044e7:	call   0x64012332
640044ec:	add    esp,0x4
640044ef:	push   0x64027f54
640044f4:	push   0x8
640044f6:	push   0x64027f90
640044fb:	call   0x64005750
64004500:	mov    esi,eax
64004502:	mov    ecx,esi
64004504:	add    esp,0xc
64004507:	mov    DWORD PTR [ebp-0x10],0xf
6400450e:	mov    DWORD PTR [ebp-0x14],ebx
64004511:	mov    BYTE PTR [ebp-0x24],bl
64004514:	lea    edx,[ecx+0x1]
64004517:	mov    al,BYTE PTR [ecx]
64004519:	add    ecx,0x1
6400451c:	cmp    al,bl
6400451e:	jne    0x64004517
64004520:	sub    ecx,edx
64004522:	push   ecx
64004523:	push   esi
64004524:	lea    ecx,[ebp-0x28]
64004527:	call   0x64001860
6400452c:	lea    eax,[ebp-0x28]
6400452f:	push   eax
64004530:	lea    ecx,[ebp-0x40]
64004533:	push   ecx
64004534:	lea    edx,[ebp-0x34]
64004537:	push   edx
64004538:	mov    BYTE PTR [ebp-0x4],0x18
6400453c:	call   0x64005ce0
64004541:	mov    BYTE PTR [ebp-0x4],0x2
64004545:	cmp    DWORD PTR [ebp-0x10],edi
64004548:	jb     0x64004556
6400454a:	mov    eax,DWORD PTR [ebp-0x24]
6400454d:	push   eax
6400454e:	call   0x64012332
64004553:	add    esp,0x4
64004556:	push   0x64027f9c
6400455b:	push   0x8
6400455d:	push   0x64027fc4
64004562:	call   0x64005750
64004567:	add    esp,0xc
6400456a:	push   eax
6400456b:	lea    ecx,[ebp+0x0]
6400456e:	call   0x640026c0
64004573:	lea    ecx,[ebp+0x0]
64004576:	push   ecx
64004577:	lea    edx,[ebp-0x40]
6400457a:	push   edx
6400457b:	lea    eax,[ebp-0x34]
6400457e:	push   eax
6400457f:	mov    BYTE PTR [ebp-0x4],0x19
64004583:	call   0x64005ce0
64004588:	mov    BYTE PTR [ebp-0x4],0x2
6400458c:	cmp    DWORD PTR [ebp+0x18],edi
6400458f:	jb     0x6400459d
64004591:	mov    ecx,DWORD PTR [ebp+0x4]
64004594:	push   ecx
64004595:	call   0x64012332
6400459a:	add    esp,0x4
6400459d:	push   0x64027fd0
640045a2:	push   0x4
640045a4:	push   0x6402800c
640045a9:	call   0x64005750
640045ae:	add    esp,0xc
640045b1:	push   eax
640045b2:	lea    ecx,[ebp+0x0]
640045b5:	call   0x640026c0
640045ba:	lea    edx,[ebp+0x0]
640045bd:	push   edx
640045be:	lea    eax,[ebp-0x40]
640045c1:	push   eax
640045c2:	lea    ecx,[ebp-0x34]
640045c5:	push   ecx
640045c6:	mov    BYTE PTR [ebp-0x4],0x1a
640045ca:	call   0x64005ce0
640045cf:	mov    BYTE PTR [ebp-0x4],0x2
640045d3:	cmp    DWORD PTR [ebp+0x18],edi
640045d6:	jb     0x640045e4
640045d8:	mov    edx,DWORD PTR [ebp+0x4]
640045db:	push   edx
640045dc:	call   0x64012332
640045e1:	add    esp,0x4
640045e4:	push   0x64028014
640045e9:	push   0xc
640045eb:	push   0x64028048
640045f0:	call   0x64005750
640045f5:	add    esp,0xc
640045f8:	push   eax
640045f9:	lea    ecx,[ebp+0x0]
640045fc:	call   0x640026c0
64004601:	lea    eax,[ebp+0x0]
64004604:	push   eax
64004605:	lea    ecx,[ebp-0x40]
64004608:	push   ecx
64004609:	lea    edx,[ebp-0x34]
6400460c:	push   edx
6400460d:	mov    BYTE PTR [ebp-0x4],0x1b
64004611:	call   0x64005ce0
64004616:	mov    BYTE PTR [ebp-0x4],0x2
6400461a:	cmp    DWORD PTR [ebp+0x18],edi
6400461d:	jb     0x6400462b
6400461f:	mov    eax,DWORD PTR [ebp+0x4]
64004622:	push   eax
64004623:	call   0x64012332
64004628:	add    esp,0x4
6400462b:	push   0x64028058
64004630:	push   edi
64004631:	push   0x6402808c
64004636:	call   0x64005750
6400463b:	add    esp,0xc
6400463e:	push   eax
6400463f:	lea    ecx,[ebp+0x0]
64004642:	call   0x640026c0
64004647:	lea    ecx,[ebp+0x0]
6400464a:	push   ecx
6400464b:	lea    edx,[ebp-0x40]
6400464e:	push   edx
6400464f:	lea    eax,[ebp-0x34]
64004652:	push   eax
64004653:	mov    BYTE PTR [ebp-0x4],0x1c
64004657:	call   0x64005ce0
6400465c:	mov    BYTE PTR [ebp-0x4],0x2
64004660:	cmp    DWORD PTR [ebp+0x18],edi
64004663:	jb     0x64004671
64004665:	mov    ecx,DWORD PTR [ebp+0x4]
64004668:	push   ecx
64004669:	call   0x64012332
6400466e:	add    esp,0x4
64004671:	push   0x640280a0
64004676:	push   0x7
64004678:	push   0x640280e0
6400467d:	call   0x64005750
64004682:	add    esp,0xc
64004685:	push   eax
64004686:	lea    ecx,[ebp+0x0]
64004689:	call   0x640026c0
6400468e:	lea    edx,[ebp+0x0]
64004691:	push   edx
64004692:	lea    eax,[ebp-0x40]
64004695:	push   eax
64004696:	lea    ecx,[ebp-0x34]
64004699:	push   ecx
6400469a:	mov    BYTE PTR [ebp-0x4],0x1d
6400469e:	call   0x64005ce0
640046a3:	mov    BYTE PTR [ebp-0x4],0x2
640046a7:	cmp    DWORD PTR [ebp+0x18],edi
640046aa:	jb     0x640046b8
640046ac:	mov    edx,DWORD PTR [ebp+0x4]
640046af:	push   edx
640046b0:	call   0x64012332
640046b5:	add    esp,0x4
640046b8:	push   0x640280e8
640046bd:	push   0x9
640046bf:	push   0x6402810c
640046c4:	call   0x64005750
640046c9:	add    esp,0xc
640046cc:	push   eax
640046cd:	lea    ecx,[ebp+0x0]
640046d0:	call   0x640026c0
640046d5:	lea    eax,[ebp+0x0]
640046d8:	push   eax
640046d9:	lea    ecx,[ebp-0x40]
640046dc:	push   ecx
640046dd:	lea    edx,[ebp-0x34]
640046e0:	push   edx
640046e1:	mov    BYTE PTR [ebp-0x4],0x1e
640046e5:	call   0x64005ce0
640046ea:	mov    BYTE PTR [ebp-0x4],0x2
640046ee:	cmp    DWORD PTR [ebp+0x18],edi
640046f1:	jb     0x640046ff
640046f3:	mov    eax,DWORD PTR [ebp+0x4]
640046f6:	push   eax
640046f7:	call   0x64012332
640046fc:	add    esp,0x4
640046ff:	push   0x64028118
64004704:	push   0x7
64004706:	push   0x64028158
6400470b:	call   0x64005750
64004710:	add    esp,0xc
64004713:	push   eax
64004714:	lea    ecx,[ebp+0x0]
64004717:	call   0x640026c0
6400471c:	lea    ecx,[ebp+0x0]
6400471f:	push   ecx
64004720:	lea    edx,[ebp-0x40]
64004723:	push   edx
64004724:	lea    eax,[ebp-0x34]
64004727:	push   eax
64004728:	mov    BYTE PTR [ebp-0x4],0x1f
6400472c:	call   0x64005ce0
64004731:	mov    BYTE PTR [ebp-0x4],0x2
64004735:	cmp    DWORD PTR [ebp+0x18],edi
64004738:	jb     0x64004746
6400473a:	mov    ecx,DWORD PTR [ebp+0x4]
6400473d:	push   ecx
6400473e:	call   0x64012332
64004743:	add    esp,0x4
64004746:	push   0x64028160
6400474b:	push   0xb
6400474d:	push   0x64028188
64004752:	call   0x64005750
64004757:	add    esp,0xc
6400475a:	push   eax
6400475b:	lea    ecx,[ebp+0x0]
6400475e:	call   0x640026c0
64004763:	lea    edx,[ebp+0x0]
64004766:	push   edx
64004767:	lea    eax,[ebp-0x40]
6400476a:	push   eax
6400476b:	lea    ecx,[ebp-0x34]
6400476e:	push   ecx
6400476f:	mov    BYTE PTR [ebp-0x4],0x20
64004773:	call   0x64005ce0
64004778:	mov    BYTE PTR [ebp-0x4],0x2
6400477c:	cmp    DWORD PTR [ebp+0x18],edi
6400477f:	jb     0x6400478d
64004781:	mov    edx,DWORD PTR [ebp+0x4]
64004784:	push   edx
64004785:	call   0x64012332
6400478a:	add    esp,0x4
6400478d:	push   0x64028194
64004792:	push   0x6
64004794:	push   0x640281c8
64004799:	call   0x64005750
6400479e:	add    esp,0xc
640047a1:	push   eax
640047a2:	lea    ecx,[ebp+0x0]
640047a5:	call   0x640026c0
640047aa:	lea    eax,[ebp+0x0]
640047ad:	push   eax
640047ae:	lea    ecx,[ebp-0x40]
640047b1:	push   ecx
640047b2:	lea    edx,[ebp-0x34]
640047b5:	push   edx
640047b6:	mov    BYTE PTR [ebp-0x4],0x21
640047ba:	call   0x64005ce0
640047bf:	mov    BYTE PTR [ebp-0x4],0x2
640047c3:	cmp    DWORD PTR [ebp+0x18],edi
640047c6:	jb     0x640047d4
640047c8:	mov    eax,DWORD PTR [ebp+0x4]
640047cb:	push   eax
640047cc:	call   0x64012332
640047d1:	add    esp,0x4
640047d4:	push   0x640281d0
640047d9:	push   0x6
640047db:	push   0x64028200
640047e0:	call   0x64005750
640047e5:	add    esp,0xc
640047e8:	push   eax
640047e9:	lea    ecx,[ebp+0x0]
640047ec:	call   0x640026c0
640047f1:	lea    ecx,[ebp+0x0]
640047f4:	push   ecx
640047f5:	lea    edx,[ebp-0x40]
640047f8:	push   edx
640047f9:	lea    eax,[ebp-0x34]
640047fc:	push   eax
640047fd:	mov    BYTE PTR [ebp-0x4],0x22
64004801:	call   0x64005ce0
64004806:	mov    BYTE PTR [ebp-0x4],0x2
6400480a:	cmp    DWORD PTR [ebp+0x18],edi
6400480d:	jb     0x6400481b
6400480f:	mov    ecx,DWORD PTR [ebp+0x4]
64004812:	push   ecx
64004813:	call   0x64012332
64004818:	add    esp,0x4
6400481b:	push   0x64028208
64004820:	push   0x7
64004822:	push   0x64028240
64004827:	call   0x64005750
6400482c:	add    esp,0xc
6400482f:	push   eax
64004830:	lea    ecx,[ebp+0x0]
64004833:	call   0x640026c0
64004838:	lea    edx,[ebp+0x0]
6400483b:	push   edx
6400483c:	lea    eax,[ebp-0x40]
6400483f:	push   eax
64004840:	lea    ecx,[ebp-0x34]
64004843:	push   ecx
64004844:	mov    BYTE PTR [ebp-0x4],0x23
64004848:	call   0x64005ce0
6400484d:	mov    BYTE PTR [ebp-0x4],0x2
64004851:	cmp    DWORD PTR [ebp+0x18],edi
64004854:	jb     0x64004862
64004856:	mov    edx,DWORD PTR [ebp+0x4]
64004859:	push   edx
6400485a:	call   0x64012332
6400485f:	add    esp,0x4
64004862:	push   0x64028248
64004867:	push   0x9
64004869:	push   0x64028288
6400486e:	call   0x64005750
64004873:	add    esp,0xc
64004876:	push   eax
64004877:	lea    ecx,[ebp+0x0]
6400487a:	call   0x640026c0
6400487f:	lea    eax,[ebp+0x0]
64004882:	push   eax
64004883:	lea    ecx,[ebp-0x40]
64004886:	push   ecx
64004887:	lea    edx,[ebp-0x34]
6400488a:	push   edx
6400488b:	mov    BYTE PTR [ebp-0x4],0x24
6400488f:	call   0x64005ce0
64004894:	mov    BYTE PTR [ebp-0x4],0x2
64004898:	cmp    DWORD PTR [ebp+0x18],edi
6400489b:	jb     0x640048a9
6400489d:	mov    eax,DWORD PTR [ebp+0x4]
640048a0:	push   eax
640048a1:	call   0x64012332
640048a6:	add    esp,0x4
640048a9:	push   0x64028294
640048ae:	push   0x7
640048b0:	push   0x640282d4
640048b5:	call   0x64005750
640048ba:	add    esp,0xc
640048bd:	push   eax
640048be:	lea    ecx,[ebp+0x0]
640048c1:	call   0x640026c0
640048c6:	lea    ecx,[ebp+0x0]
640048c9:	push   ecx
640048ca:	lea    edx,[ebp-0x40]
640048cd:	push   edx
640048ce:	lea    eax,[ebp-0x34]
640048d1:	push   eax
640048d2:	mov    BYTE PTR [ebp-0x4],0x25
640048d6:	call   0x64005ce0
640048db:	mov    BYTE PTR [ebp-0x4],0x2
640048df:	cmp    DWORD PTR [ebp+0x18],edi
640048e2:	jb     0x640048f0
640048e4:	mov    ecx,DWORD PTR [ebp+0x4]
640048e7:	push   ecx
640048e8:	call   0x64012332
640048ed:	add    esp,0x4
640048f0:	push   0x640282dc
640048f5:	push   0x6
640048f7:	push   0x64028310
640048fc:	call   0x64005750
64004901:	add    esp,0xc
64004904:	push   eax
64004905:	lea    ecx,[ebp+0x0]
64004908:	call   0x640026c0
6400490d:	lea    edx,[ebp+0x0]
64004910:	push   edx
64004911:	lea    eax,[ebp-0x40]
64004914:	push   eax
64004915:	lea    ecx,[ebp-0x34]
64004918:	push   ecx
64004919:	mov    BYTE PTR [ebp-0x4],0x26
6400491d:	call   0x64005ce0
64004922:	mov    BYTE PTR [ebp-0x4],0x2
64004926:	cmp    DWORD PTR [ebp+0x18],edi
64004929:	jb     0x64004937
6400492b:	mov    edx,DWORD PTR [ebp+0x4]
6400492e:	push   edx
6400492f:	call   0x64012332
64004934:	add    esp,0x4
64004937:	push   0x64028318
6400493c:	push   0x8
6400493e:	push   0x64028340
64004943:	call   0x64005750
64004948:	add    esp,0xc
6400494b:	push   eax
6400494c:	lea    ecx,[ebp+0x0]
6400494f:	call   0x640026c0
64004954:	lea    eax,[ebp+0x0]
64004957:	push   eax
64004958:	lea    ecx,[ebp-0x40]
6400495b:	push   ecx
6400495c:	lea    edx,[ebp-0x34]
6400495f:	push   edx
64004960:	mov    BYTE PTR [ebp-0x4],0x27
64004964:	call   0x64005ce0
64004969:	mov    BYTE PTR [ebp-0x4],0x2
6400496d:	cmp    DWORD PTR [ebp+0x18],edi
64004970:	jb     0x6400497e
64004972:	mov    eax,DWORD PTR [ebp+0x4]
64004975:	push   eax
64004976:	call   0x64012332
6400497b:	add    esp,0x4
6400497e:	push   0x6402834c
64004983:	push   0x6
64004985:	push   0x64028378
6400498a:	call   0x64005750
6400498f:	add    esp,0xc
64004992:	push   eax
64004993:	lea    ecx,[ebp+0x0]
64004996:	call   0x640026c0
6400499b:	lea    ecx,[ebp+0x0]
6400499e:	push   ecx
6400499f:	lea    edx,[ebp-0x40]
640049a2:	push   edx
640049a3:	lea    eax,[ebp-0x34]
640049a6:	push   eax
640049a7:	mov    BYTE PTR [ebp-0x4],0x28
640049ab:	call   0x64005ce0
640049b0:	mov    BYTE PTR [ebp-0x4],0x2
640049b4:	cmp    DWORD PTR [ebp+0x18],edi
640049b7:	jb     0x640049c5
640049b9:	mov    ecx,DWORD PTR [ebp+0x4]
640049bc:	push   ecx
640049bd:	call   0x64012332
640049c2:	add    esp,0x4
640049c5:	mov    edx,DWORD PTR [ebp-0x30]
640049c8:	mov    eax,DWORD PTR [edx]
640049ca:	lea    ecx,[ebp-0x34]
640049cd:	mov    edi,ecx
640049cf:	mov    DWORD PTR [ebp-0x3c],edi
640049d2:	mov    DWORD PTR [ebp-0x38],eax
640049d5:	cmp    edi,ebx
640049d7:	mov    esi,DWORD PTR [ebp-0x30]
640049da:	je     0x640049e3
640049dc:	lea    eax,[ebp-0x34]
640049df:	cmp    edi,eax
640049e1:	je     0x640049e8
640049e3:	call   0x640126e8
640049e8:	cmp    DWORD PTR [ebp-0x38],esi
640049eb:	je     0x64004aec
640049f1:	cmp    edi,ebx
640049f3:	jne    0x640049fa
640049f5:	call   0x640126e8
640049fa:	mov    ecx,DWORD PTR [ebp-0x38]
640049fd:	cmp    ecx,DWORD PTR [edi+0x4]
64004a00:	jne    0x64004a07
64004a02:	call   0x640126e8
64004a07:	mov    esi,DWORD PTR [ebp-0x38]
64004a0a:	add    esi,0xc
64004a0d:	cmp    DWORD PTR [esi+0x18],0x10
64004a11:	jb     0x64004a18
64004a13:	mov    ecx,DWORD PTR [esi+0x4]
64004a16:	jmp    0x64004a1b
64004a18:	lea    ecx,[esi+0x4]
64004a1b:	lea    edx,[ebp+0x41c]
64004a21:	mov    al,BYTE PTR [ecx]
64004a23:	mov    BYTE PTR [edx],al
64004a25:	add    ecx,0x1
64004a28:	add    edx,0x1
64004a2b:	cmp    al,bl
64004a2d:	jne    0x64004a21
64004a2f:	mov    edx,DWORD PTR [ebp-0x38]
64004a32:	cmp    edx,DWORD PTR [edi+0x4]
64004a35:	jne    0x64004a3c
64004a37:	call   0x640126e8
64004a3c:	push   0xffffffff
64004a3e:	push   ebx
64004a3f:	mov    edi,0xf
64004a44:	push   esi
64004a45:	lea    ecx,[ebp+0x0]
64004a48:	mov    DWORD PTR [ebp+0x18],edi
64004a4b:	mov    DWORD PTR [ebp+0x14],ebx
64004a4e:	mov    BYTE PTR [ebp+0x4],bl
64004a51:	call   0x64001780
64004a56:	lea    eax,[ebp+0x41c]
64004a5c:	push   eax
64004a5d:	mov    BYTE PTR [ebp-0x4],0x29
64004a61:	call   0x6401efa5
64004a66:	lea    eax,[ebp+0x41c]
64004a6c:	add    esp,0x4
64004a6f:	mov    DWORD PTR [ebp-0x10],edi
64004a72:	mov    DWORD PTR [ebp-0x14],ebx
64004a75:	mov    BYTE PTR [ebp-0x24],bl
64004a78:	lea    edx,[eax+0x1]
64004a7b:	jmp    0x64004a80
64004a7d:	lea    ecx,[ecx+0x0]
64004a80:	mov    cl,BYTE PTR [eax]
64004a82:	add    eax,0x1
64004a85:	cmp    cl,bl
64004a87:	jne    0x64004a80
64004a89:	sub    eax,edx
64004a8b:	push   eax
64004a8c:	lea    ecx,[ebp+0x41c]
64004a92:	push   ecx
64004a93:	lea    ecx,[ebp-0x28]
64004a96:	call   0x64001860
64004a9b:	lea    edx,[ebp-0x28]
64004a9e:	push   edx
64004a9f:	lea    eax,[ebp-0x50]
64004aa2:	push   eax
64004aa3:	push   0x64031350
64004aa8:	mov    BYTE PTR [ebp-0x4],0x2a
64004aac:	call   0x64005ce0
64004ab1:	mov    esi,0x10
64004ab6:	cmp    DWORD PTR [ebp-0x10],esi
64004ab9:	jb     0x64004ac7
64004abb:	mov    ecx,DWORD PTR [ebp-0x24]
64004abe:	push   ecx
64004abf:	call   0x64012332
64004ac4:	add    esp,0x4
64004ac7:	mov    BYTE PTR [ebp-0x4],0x2
64004acb:	cmp    DWORD PTR [ebp+0x18],esi
64004ace:	jb     0x64004adc
64004ad0:	mov    edx,DWORD PTR [ebp+0x4]
64004ad3:	push   edx
64004ad4:	call   0x64012332
64004ad9:	add    esp,0x4
64004adc:	lea    esi,[ebp-0x3c]
64004adf:	call   0x64006600
64004ae4:	mov    edi,DWORD PTR [ebp-0x3c]
64004ae7:	jmp    0x640049d5
64004aec:	lea    eax,[ebp-0x34]
64004aef:	call   0x64005ed0
64004af4:	lea    eax,[ebp-0x34]
64004af7:	mov    BYTE PTR [ebp-0x4],bl
64004afa:	call   0x640065c0
64004aff:	call   DWORD PTR ds:0x6402d06c
64004b05:	mov    edi,eax
64004b07:	mov    eax,DWORD PTR [ebp+0x828]
64004b0d:	cmp    DWORD PTR [eax-0x4],0x1
64004b11:	jle    0x64004b28
64004b13:	mov    eax,DWORD PTR [eax-0xc]
64004b16:	push   eax
64004b17:	lea    ecx,[ebp+0x828]
64004b1d:	call   0x64001950
64004b22:	mov    eax,DWORD PTR [ebp+0x828]
64004b28:	cmp    eax,ebx
64004b2a:	jne    0x64004b30
64004b2c:	xor    eax,eax
64004b2e:	jmp    0x64004b60
64004b30:	push   eax
64004b31:	call   DWORD PTR ds:0x64025054
64004b37:	add    eax,0x1
64004b3a:	cmp    eax,0x3fffffff
64004b3f:	jle    0x64004b45
64004b41:	xor    eax,eax
64004b43:	jmp    0x64004b60
64004b45:	lea    esi,[eax+eax*1]
64004b48:	mov    eax,esi
64004b4a:	call   0x64013310
64004b4f:	mov    ecx,DWORD PTR [ebp+0x828]
64004b55:	mov    eax,esp
64004b57:	push   edi
64004b58:	push   esi
64004b59:	push   ecx
64004b5a:	push   eax
64004b5b:	call   0x64002b30
64004b60:	lea    edx,[ebp+0x1c]
64004b63:	mov    cl,BYTE PTR [eax]
64004b65:	mov    BYTE PTR [edx],cl
64004b67:	add    eax,0x1
64004b6a:	add    edx,0x1
64004b6d:	cmp    cl,bl
64004b6f:	jne    0x64004b63
64004b71:	lea    eax,[ebp+0x1c]
64004b74:	mov    DWORD PTR [ebp-0x10],0xf
64004b7b:	mov    DWORD PTR [ebp-0x14],ebx
64004b7e:	mov    BYTE PTR [ebp-0x24],bl
64004b81:	lea    edx,[eax+0x1]
64004b84:	mov    cl,BYTE PTR [eax]
64004b86:	add    eax,0x1
64004b89:	cmp    cl,bl
64004b8b:	jne    0x64004b84
64004b8d:	sub    eax,edx
64004b8f:	push   eax
64004b90:	lea    edx,[ebp+0x1c]
64004b93:	push   edx
64004b94:	lea    ecx,[ebp-0x28]
64004b97:	call   0x64001860
64004b9c:	lea    eax,[ebp-0x28]
64004b9f:	mov    esi,0x64031350
64004ba4:	mov    BYTE PTR [ebp-0x4],0x2b
64004ba8:	call   0x64005e70
64004bad:	test   eax,eax
64004baf:	setne  BYTE PTR [ebp-0x41]
64004bb3:	cmp    DWORD PTR [ebp-0x10],0x10
64004bb7:	jb     0x64004bc5
64004bb9:	mov    eax,DWORD PTR [ebp-0x24]
64004bbc:	push   eax
64004bbd:	call   0x64012332
64004bc2:	add    esp,0x4
64004bc5:	mov    DWORD PTR [ebp-0x4],0xffffffff
64004bcc:	mov    eax,DWORD PTR [ebp+0x828]
64004bd2:	add    eax,0xfffffff0
64004bd5:	mov    DWORD PTR [ebp-0x10],0xf
64004bdc:	mov    DWORD PTR [ebp-0x14],ebx
64004bdf:	mov    BYTE PTR [ebp-0x24],bl
64004be2:	lea    ecx,[eax+0xc]
64004be5:	or     edx,0xffffffff
64004be8:	lock xadd DWORD PTR [ecx],edx
64004bec:	dec    edx
64004bed:	test   edx,edx
64004bef:	jg     0x64004bfb
64004bf1:	mov    ecx,DWORD PTR [eax]
64004bf3:	mov    edx,DWORD PTR [ecx]
64004bf5:	push   eax
64004bf6:	mov    eax,DWORD PTR [edx+0x4]
64004bf9:	call   eax
64004bfb:	mov    al,BYTE PTR [ebp-0x41]
64004bfe:	lea    esp,[ebp-0x60]
64004c01:	mov    ecx,DWORD PTR [ebp-0xc]
64004c04:	mov    DWORD PTR fs:0x0,ecx
64004c0b:	pop    ecx
64004c0c:	pop    edi
64004c0d:	pop    esi
64004c0e:	pop    ebx
64004c0f:	mov    ecx,DWORD PTR [ebp+0x81c]
64004c15:	xor    ecx,ebp
64004c17:	call   0x64012b8c
64004c1c:	add    ebp,0x820
64004c22:	mov    esp,ebp
64004c24:	pop    ebp
64004c25:	ret    
64004c26:	int3   
64004c27:	int3   
64004c28:	int3   
64004c29:	int3   
64004c2a:	int3   
64004c2b:	int3   
64004c2c:	int3   
64004c2d:	int3   
64004c2e:	int3   
64004c2f:	int3   
64004c30:	jmp    0x640065c0
64004c35:	int3   
64004c36:	int3   
64004c37:	int3   
64004c38:	int3   
64004c39:	int3   
64004c3a:	int3   
64004c3b:	int3   
64004c3c:	int3   
64004c3d:	int3   
64004c3e:	int3   
64004c3f:	int3   
64004c40:	push   ebp
64004c41:	lea    ebp,[esp-0x820]
64004c48:	sub    esp,0x820
64004c4e:	push   0xffffffff
64004c50:	push   0x640238b1
64004c55:	mov    eax,fs:0x0
64004c5b:	push   eax
64004c5c:	sub    esp,0x44
64004c5f:	mov    eax,ds:0x6402d09c
64004c64:	xor    eax,ebp
64004c66:	mov    DWORD PTR [ebp+0x81c],eax
64004c6c:	push   ebx
64004c6d:	push   esi
64004c6e:	push   edi
64004c6f:	push   eax
64004c70:	lea    eax,[ebp-0xc]
64004c73:	mov    fs:0x0,eax
64004c79:	xor    ebx,ebx
64004c7b:	mov    DWORD PTR [ebp-0x4],ebx
64004c7e:	test   BYTE PTR ds:0x640314b8,0x1
64004c85:	jne    0x64004ccd
64004c87:	or     DWORD PTR ds:0x640314b8,0x1
64004c8e:	mov    BYTE PTR [ebp-0x4],0x1
64004c92:	call   0x64007790
64004c97:	mov    ds:0x640314b0,eax
64004c9c:	mov    BYTE PTR [eax+0x29],0x1
64004ca0:	mov    eax,ds:0x640314b0
64004ca5:	mov    DWORD PTR [eax+0x4],eax
64004ca8:	mov    eax,ds:0x640314b0
64004cad:	mov    DWORD PTR [eax],eax
64004caf:	mov    eax,ds:0x640314b0
64004cb4:	mov    DWORD PTR [eax+0x8],eax
64004cb7:	push   0x64024080
64004cbc:	mov    DWORD PTR ds:0x640314b4,ebx
64004cc2:	call   0x64012cbf
64004cc7:	add    esp,0x4
64004cca:	mov    BYTE PTR [ebp-0x4],bl
64004ccd:	cmp    DWORD PTR ds:0x640314b4,ebx
64004cd3:	jne    0x64004e97
64004cd9:	call   0x64007790
64004cde:	mov    DWORD PTR [ebp-0x18],eax
64004ce1:	mov    BYTE PTR [eax+0x29],0x1
64004ce5:	mov    eax,DWORD PTR [ebp-0x18]
64004ce8:	mov    DWORD PTR [eax+0x4],eax
64004ceb:	mov    eax,DWORD PTR [ebp-0x18]
64004cee:	mov    DWORD PTR [eax],eax
64004cf0:	mov    eax,DWORD PTR [ebp-0x18]
64004cf3:	mov    DWORD PTR [eax+0x8],eax
64004cf6:	mov    DWORD PTR [ebp-0x14],ebx
64004cf9:	push   0x64028380
64004cfe:	push   0xd
64004d00:	push   0x640283a8
64004d05:	mov    BYTE PTR [ebp-0x4],0x2
64004d09:	call   0x64005750
64004d0e:	mov    ecx,eax
64004d10:	add    esp,0xc
64004d13:	mov    DWORD PTR [ebp-0x2c],0xf
64004d1a:	mov    DWORD PTR [ebp-0x30],ebx
64004d1d:	mov    BYTE PTR [ebp-0x40],bl
64004d20:	lea    esi,[ecx+0x1]
64004d23:	mov    dl,BYTE PTR [ecx]
64004d25:	add    ecx,0x1
64004d28:	cmp    dl,bl
64004d2a:	jne    0x64004d23
64004d2c:	sub    ecx,esi
64004d2e:	push   ecx
64004d2f:	push   eax
64004d30:	lea    ecx,[ebp-0x44]
64004d33:	call   0x64001860
64004d38:	lea    eax,[ebp-0x44]
64004d3b:	push   eax
64004d3c:	lea    ecx,[ebp-0x28]
64004d3f:	push   ecx
64004d40:	lea    edx,[ebp-0x1c]
64004d43:	push   edx
64004d44:	mov    BYTE PTR [ebp-0x4],0x3
64004d48:	call   0x64005ce0
64004d4d:	mov    BYTE PTR [ebp-0x4],0x2
64004d51:	cmp    DWORD PTR [ebp-0x2c],0x10
64004d55:	jb     0x64004d63
64004d57:	mov    eax,DWORD PTR [ebp-0x40]
64004d5a:	push   eax
64004d5b:	call   0x64012332
64004d60:	add    esp,0x4
64004d63:	mov    ecx,DWORD PTR [ebp-0x18]
64004d66:	mov    eax,DWORD PTR [ecx]
64004d68:	lea    ecx,[ebp-0x1c]
64004d6b:	mov    edi,ecx
64004d6d:	mov    DWORD PTR [ebp-0x24],edi
64004d70:	mov    DWORD PTR [ebp-0x20],eax
64004d73:	cmp    edi,ebx
64004d75:	mov    esi,DWORD PTR [ebp-0x18]
64004d78:	je     0x64004d81
64004d7a:	lea    edx,[ebp-0x1c]
64004d7d:	cmp    edi,edx
64004d7f:	je     0x64004d86
64004d81:	call   0x640126e8
64004d86:	cmp    DWORD PTR [ebp-0x20],esi
64004d89:	je     0x64004e8c
64004d8f:	cmp    edi,ebx
64004d91:	jne    0x64004d98
64004d93:	call   0x640126e8
64004d98:	mov    eax,DWORD PTR [ebp-0x20]
64004d9b:	cmp    eax,DWORD PTR [edi+0x4]
64004d9e:	jne    0x64004da5
64004da0:	call   0x640126e8
64004da5:	mov    esi,DWORD PTR [ebp-0x20]
64004da8:	add    esi,0xc
64004dab:	cmp    DWORD PTR [esi+0x18],0x10
64004daf:	jb     0x64004db6
64004db1:	mov    ecx,DWORD PTR [esi+0x4]
64004db4:	jmp    0x64004db9
64004db6:	lea    ecx,[esi+0x4]
64004db9:	lea    edx,[ebp+0x41c]
64004dbf:	nop
64004dc0:	mov    al,BYTE PTR [ecx]
64004dc2:	mov    BYTE PTR [edx],al
64004dc4:	add    ecx,0x1
64004dc7:	add    edx,0x1
64004dca:	cmp    al,bl
64004dcc:	jne    0x64004dc0
64004dce:	mov    ecx,DWORD PTR [ebp-0x20]
64004dd1:	cmp    ecx,DWORD PTR [edi+0x4]
64004dd4:	jne    0x64004ddb
64004dd6:	call   0x640126e8
64004ddb:	push   0xffffffff
64004ddd:	push   ebx
64004dde:	mov    edi,0xf
64004de3:	push   esi
64004de4:	lea    ecx,[ebp+0x0]
64004de7:	mov    DWORD PTR [ebp+0x18],edi
64004dea:	mov    DWORD PTR [ebp+0x14],ebx
64004ded:	mov    BYTE PTR [ebp+0x4],bl
64004df0:	call   0x64001780
64004df5:	lea    edx,[ebp+0x41c]
64004dfb:	push   edx
64004dfc:	mov    BYTE PTR [ebp-0x4],0x4
64004e00:	call   0x6401efa5
64004e05:	lea    eax,[ebp+0x41c]
64004e0b:	add    esp,0x4
64004e0e:	mov    DWORD PTR [ebp-0x2c],edi
64004e11:	mov    DWORD PTR [ebp-0x30],ebx
64004e14:	mov    BYTE PTR [ebp-0x40],bl
64004e17:	lea    edx,[eax+0x1]
64004e1a:	lea    ebx,[ebx+0x0]
64004e20:	mov    cl,BYTE PTR [eax]
64004e22:	add    eax,0x1
64004e25:	cmp    cl,bl
64004e27:	jne    0x64004e20
64004e29:	sub    eax,edx
64004e2b:	push   eax
64004e2c:	lea    eax,[ebp+0x41c]
64004e32:	push   eax
64004e33:	lea    ecx,[ebp-0x44]
64004e36:	call   0x64001860
64004e3b:	lea    ecx,[ebp-0x44]
64004e3e:	push   ecx
64004e3f:	lea    edx,[ebp-0x50]
64004e42:	push   edx
64004e43:	push   0x640314ac
64004e48:	mov    BYTE PTR [ebp-0x4],0x5
64004e4c:	call   0x64005ce0
64004e51:	mov    esi,0x10
64004e56:	cmp    DWORD PTR [ebp-0x2c],esi
64004e59:	jb     0x64004e67
64004e5b:	mov    eax,DWORD PTR [ebp-0x40]
64004e5e:	push   eax
64004e5f:	call   0x64012332
64004e64:	add    esp,0x4
64004e67:	mov    BYTE PTR [ebp-0x4],0x2
64004e6b:	cmp    DWORD PTR [ebp+0x18],esi
64004e6e:	jb     0x64004e7c
64004e70:	mov    ecx,DWORD PTR [ebp+0x4]
64004e73:	push   ecx
64004e74:	call   0x64012332
64004e79:	add    esp,0x4
64004e7c:	lea    esi,[ebp-0x24]
64004e7f:	call   0x64006600
64004e84:	mov    edi,DWORD PTR [ebp-0x24]
64004e87:	jmp    0x64004d73
64004e8c:	lea    eax,[ebp-0x1c]
64004e8f:	mov    BYTE PTR [ebp-0x4],bl
64004e92:	call   0x640065c0
64004e97:	call   DWORD PTR ds:0x6402d06c
64004e9d:	mov    DWORD PTR [ebp-0x20],eax
64004ea0:	mov    eax,DWORD PTR [ebp+0x828]
64004ea6:	cmp    DWORD PTR [eax-0x4],0x1
64004eaa:	jle    0x64004ec1
64004eac:	mov    edx,DWORD PTR [eax-0xc]
64004eaf:	push   edx
64004eb0:	lea    ecx,[ebp+0x828]
64004eb6:	call   0x64001950
64004ebb:	mov    eax,DWORD PTR [ebp+0x828]
64004ec1:	cmp    eax,ebx
64004ec3:	jne    0x64004ec9
64004ec5:	xor    ecx,ecx
64004ec7:	jmp    0x64004f10
64004ec9:	push   eax
64004eca:	call   DWORD PTR ds:0x64025054
64004ed0:	add    eax,0x1
64004ed3:	cmp    eax,0x3fffffff
64004ed8:	jg     0x64004f0c
64004eda:	lea    edi,[eax+eax*1]
64004edd:	mov    eax,edi
64004edf:	call   0x64013310
64004ee4:	mov    esi,esp
64004ee6:	cmp    esi,ebx
64004ee8:	je     0x64004f0c
64004eea:	mov    eax,DWORD PTR [ebp+0x828]
64004ef0:	mov    ecx,DWORD PTR [ebp-0x20]
64004ef3:	push   ebx
64004ef4:	push   ebx
64004ef5:	push   edi
64004ef6:	push   esi
64004ef7:	push   0xffffffff
64004ef9:	push   eax
64004efa:	push   ebx
64004efb:	push   ecx
64004efc:	mov    BYTE PTR [esi],bl
64004efe:	call   DWORD PTR ds:0x64025028
64004f04:	neg    eax
64004f06:	sbb    eax,eax
64004f08:	and    eax,esi
64004f0a:	jmp    0x64004f0e
64004f0c:	xor    eax,eax
64004f0e:	mov    ecx,eax
64004f10:	lea    edx,[ebp+0x1c]
64004f13:	mov    al,BYTE PTR [ecx]
64004f15:	mov    BYTE PTR [edx],al
64004f17:	add    ecx,0x1
64004f1a:	add    edx,0x1
64004f1d:	cmp    al,bl
64004f1f:	jne    0x64004f13
64004f21:	mov    edi,0xf
64004f26:	lea    eax,[ebp+0x1c]
64004f29:	mov    DWORD PTR [ebp-0x2c],edi
64004f2c:	mov    DWORD PTR [ebp-0x30],ebx
64004f2f:	mov    BYTE PTR [ebp-0x40],bl
64004f32:	lea    edx,[eax+0x1]
64004f35:	mov    cl,BYTE PTR [eax]
64004f37:	add    eax,0x1
64004f3a:	cmp    cl,bl
64004f3c:	jne    0x64004f35
64004f3e:	sub    eax,edx
64004f40:	push   eax
64004f41:	lea    edx,[ebp+0x1c]
64004f44:	push   edx
64004f45:	lea    ecx,[ebp-0x44]
64004f48:	call   0x64001860
64004f4d:	lea    eax,[ebp-0x44]
64004f50:	mov    esi,0x640314ac
64004f55:	mov    BYTE PTR [ebp-0x4],0x6
64004f59:	call   0x64005e70
64004f5e:	test   eax,eax
64004f60:	setne  BYTE PTR [ebp-0xd]
64004f64:	cmp    DWORD PTR [ebp-0x2c],0x10
64004f68:	jb     0x64004f76
64004f6a:	mov    eax,DWORD PTR [ebp-0x40]
64004f6d:	push   eax
64004f6e:	call   0x64012332
64004f73:	add    esp,0x4
64004f76:	mov    DWORD PTR [ebp-0x4],0xffffffff
64004f7d:	mov    eax,DWORD PTR [ebp+0x828]
64004f83:	add    eax,0xfffffff0
64004f86:	mov    DWORD PTR [ebp-0x2c],edi
64004f89:	mov    DWORD PTR [ebp-0x30],ebx
64004f8c:	mov    BYTE PTR [ebp-0x40],bl
64004f8f:	lea    ecx,[eax+0xc]
64004f92:	or     edx,0xffffffff
64004f95:	lock xadd DWORD PTR [ecx],edx
64004f99:	dec    edx
64004f9a:	test   edx,edx
64004f9c:	jg     0x64004fa8
64004f9e:	mov    ecx,DWORD PTR [eax]
64004fa0:	mov    edx,DWORD PTR [ecx]
64004fa2:	push   eax
64004fa3:	mov    eax,DWORD PTR [edx+0x4]
64004fa6:	call   eax
64004fa8:	mov    al,BYTE PTR [ebp-0xd]
64004fab:	lea    esp,[ebp-0x60]
64004fae:	mov    ecx,DWORD PTR [ebp-0xc]
64004fb1:	mov    DWORD PTR fs:0x0,ecx
64004fb8:	pop    ecx
64004fb9:	pop    edi
64004fba:	pop    esi
64004fbb:	pop    ebx
64004fbc:	mov    ecx,DWORD PTR [ebp+0x81c]
64004fc2:	xor    ecx,ebp
64004fc4:	call   0x64012b8c
64004fc9:	add    ebp,0x820
64004fcf:	mov    esp,ebp
64004fd1:	pop    ebp
64004fd2:	ret    
64004fd3:	int3   
64004fd4:	int3   
64004fd5:	int3   
64004fd6:	int3   
64004fd7:	int3   
64004fd8:	int3   
64004fd9:	int3   
64004fda:	int3   
64004fdb:	int3   
64004fdc:	int3   
64004fdd:	int3   
64004fde:	int3   
64004fdf:	int3   
64004fe0:	push   0xffffffff
64004fe2:	push   0x64023cb9
64004fe7:	mov    eax,fs:0x0
64004fed:	push   eax
64004fee:	sub    esp,0x44
64004ff1:	push   ebx
64004ff2:	push   ebp
64004ff3:	push   esi
64004ff4:	push   edi
64004ff5:	mov    eax,ds:0x6402d09c
64004ffa:	xor    eax,esp
64004ffc:	push   eax
64004ffd:	lea    eax,[esp+0x58]
64005001:	mov    fs:0x0,eax
64005007:	xor    edi,edi
64005009:	mov    DWORD PTR [esp+0x60],edi
6400500d:	mov    DWORD PTR [esp+0x28],edi
64005011:	call   DWORD PTR ds:0x6402d06c
64005017:	mov    eax,ds:0x6402e540
6400501c:	mov    edx,DWORD PTR [eax+0xc]
6400501f:	mov    ecx,0x6402e540
64005024:	call   edx
64005026:	mov    ebx,DWORD PTR [esp+0x68]
6400502a:	add    eax,0x10
6400502d:	mov    DWORD PTR [ebx],eax
6400502f:	push   0x4
64005031:	push   edi
64005032:	mov    DWORD PTR [esp+0x68],edi
64005036:	push   edi
64005037:	mov    DWORD PTR [esp+0x34],0x1
6400503f:	call   0x6400e080
64005044:	call   eax
64005046:	cmp    eax,edi
64005048:	mov    DWORD PTR [esp+0x1c],eax
6400504c:	je     0x640051e2
64005052:	mov    ebp,DWORD PTR ds:0x64025004
64005058:	lea    ecx,[esp+0x20]
6400505c:	push   ecx
6400505d:	lea    edx,[esp+0x1c]
64005061:	push   edx
64005062:	lea    ecx,[esp+0x2c]
64005066:	push   ecx
64005067:	push   0x24
64005069:	lea    edx,[esp+0x44]
6400506d:	push   edx
6400506e:	push   0x3
64005070:	push   0x30
64005072:	push   eax
64005073:	mov    DWORD PTR [esp+0x40],edi
64005077:	call   ebp
64005079:	mov    esi,eax
6400507b:	call   DWORD PTR ds:0x64025044
64005081:	cmp    esi,edi
64005083:	je     0x6400508c
64005085:	cmp    eax,0xea
6400508a:	jne    0x640050ce
6400508c:	mov    esi,DWORD PTR [esp+0x24]
64005090:	add    esi,0x24
64005093:	xor    ecx,ecx
64005095:	mov    eax,esi
64005097:	mov    edx,0x24
6400509c:	mul    edx
6400509e:	seto   cl
640050a1:	neg    ecx
640050a3:	or     ecx,eax
640050a5:	push   ecx
640050a6:	call   0x6401232d
640050ab:	add    esp,0x4
640050ae:	mov    edi,eax
640050b0:	lea    eax,[esp+0x20]
640050b4:	push   eax
640050b5:	mov    eax,DWORD PTR [esp+0x20]
640050b9:	lea    ecx,[esp+0x1c]
640050bd:	push   ecx
640050be:	lea    edx,[esp+0x2c]
640050c2:	push   edx
640050c3:	push   esi
640050c4:	push   edi
640050c5:	push   0x3
640050c7:	push   0x30
640050c9:	push   eax
640050ca:	call   ebp
640050cc:	jmp    0x640050d2
640050ce:	mov    edi,DWORD PTR [esp+0x2c]
640050d2:	xor    ebp,ebp
640050d4:	cmp    DWORD PTR [esp+0x18],ebp
640050d8:	jbe    0x640051de
640050de:	add    edi,0x8
640050e1:	mov    ecx,DWORD PTR [edi-0x8]
640050e4:	push   ecx
640050e5:	lea    ecx,[esp+0x18]
640050e9:	call   0x64002540
640050ee:	mov    DWORD PTR [esp+0x60],0x1
640050f6:	mov    eax,DWORD PTR [edi]
640050f8:	cmp    eax,0x10
640050fb:	je     0x64005106
640050fd:	cmp    eax,0x20
64005100:	jne    0x640051a9
64005106:	mov    eax,DWORD PTR [esp+0x14]
6400510a:	push   ecx
6400510b:	add    eax,0xfffffff0
6400510e:	mov    DWORD PTR [esp+0x34],esp
64005112:	mov    esi,esp
64005114:	push   eax
64005115:	call   0x64002850
6400511a:	add    eax,0x10
6400511d:	add    esp,0x4
64005120:	cmp    BYTE PTR [esp+0x70],0x0
64005125:	mov    DWORD PTR [esi],eax
64005127:	je     0x64005137
64005129:	call   0x64004c40
6400512e:	add    esp,0x4
64005131:	test   al,al
64005133:	jne    0x64005143
64005135:	jmp    0x640051a9
64005137:	call   0x64003ba0
6400513c:	add    esp,0x4
6400513f:	test   al,al
64005141:	jne    0x640051a9
64005143:	push   0x640283b8
64005148:	push   0x4
6400514a:	push   0x640283e8
6400514f:	call   0x64005750
64005154:	add    esp,0xc
64005157:	push   eax
64005158:	mov    ecx,ebx
6400515a:	call   0x64002610
6400515f:	lea    edx,[esp+0x14]
64005163:	push   edx
64005164:	lea    eax,[esp+0x30]
64005168:	push   eax
64005169:	call   0x64003100
6400516e:	add    esp,0x8
64005171:	mov    BYTE PTR [esp+0x60],0x2
64005176:	mov    eax,DWORD PTR [eax]
64005178:	mov    ecx,DWORD PTR [eax-0xc]
6400517b:	push   ecx
6400517c:	push   eax
6400517d:	mov    ecx,ebx
6400517f:	call   0x64002990
64005184:	mov    BYTE PTR [esp+0x60],0x1
64005189:	mov    eax,DWORD PTR [esp+0x2c]
6400518d:	add    eax,0xfffffff0
64005190:	lea    ecx,[eax+0xc]
64005193:	or     edx,0xffffffff
64005196:	lock xadd DWORD PTR [ecx],edx
6400519a:	dec    edx
6400519b:	test   edx,edx
6400519d:	jg     0x640051a9
6400519f:	mov    ecx,DWORD PTR [eax]
640051a1:	mov    edx,DWORD PTR [ecx]
640051a3:	push   eax
640051a4:	mov    eax,DWORD PTR [edx+0x4]
640051a7:	call   eax
640051a9:	mov    BYTE PTR [esp+0x60],0x0
640051ae:	mov    eax,DWORD PTR [esp+0x14]
640051b2:	add    eax,0xfffffff0
640051b5:	lea    ecx,[eax+0xc]
640051b8:	or     edx,0xffffffff
640051bb:	lock xadd DWORD PTR [ecx],edx
640051bf:	dec    edx
640051c0:	test   edx,edx
640051c2:	jg     0x640051ce
640051c4:	mov    ecx,DWORD PTR [eax]
640051c6:	mov    edx,DWORD PTR [ecx]
640051c8:	push   eax
640051c9:	mov    eax,DWORD PTR [edx+0x4]
640051cc:	call   eax
640051ce:	add    ebp,0x1
640051d1:	add    edi,0x24
640051d4:	cmp    ebp,DWORD PTR [esp+0x18]
640051d8:	jb     0x640050e1
640051de:	mov    eax,DWORD PTR [esp+0x1c]
640051e2:	push   eax
640051e3:	call   0x6400e4e0
640051e8:	call   eax
640051ea:	mov    eax,ebx
640051ec:	mov    ecx,DWORD PTR [esp+0x58]
640051f0:	mov    DWORD PTR fs:0x0,ecx
640051f7:	pop    ecx
640051f8:	pop    edi
640051f9:	pop    esi
640051fa:	pop    ebp
640051fb:	pop    ebx
640051fc:	add    esp,0x50
640051ff:	ret    
64005200:	push   ebp
64005201:	mov    ebp,esp
64005203:	push   0xffffffff
64005205:	push   0x64023840
6400520a:	mov    eax,fs:0x0
64005210:	push   eax
64005211:	sub    esp,0x15c
64005217:	mov    eax,ds:0x6402d09c
6400521c:	xor    eax,ebp
6400521e:	mov    DWORD PTR [ebp-0x14],eax
64005221:	push   ebx
64005222:	push   esi
64005223:	push   edi
64005224:	push   eax
64005225:	lea    eax,[ebp-0xc]
64005228:	mov    fs:0x0,eax
6400522e:	mov    DWORD PTR [ebp-0x10],esp
64005231:	mov    edi,DWORD PTR [ebp+0x8]
64005234:	push   0xa0
64005239:	lea    eax,[ebp-0x154]
6400523f:	push   eax
64005240:	push   0x7d0
64005245:	push   0x64000000
6400524a:	mov    DWORD PTR [ebp-0x4],0x0
64005251:	call   DWORD PTR ds:0x640251b4
64005257:	test   eax,eax
64005259:	je     0x640052a0
6400525b:	push   ecx
6400525c:	lea    edx,[ebp-0x154]
64005262:	mov    ecx,esp
64005264:	mov    DWORD PTR [ebp-0x158],esp
6400526a:	push   edx
6400526b:	call   0x64002540
64005270:	lea    esi,[ebp-0x168]
64005276:	call   0x64002f00
6400527b:	mov    ecx,DWORD PTR [eax]
6400527d:	mov    DWORD PTR [edi],ecx
6400527f:	mov    edx,DWORD PTR [eax+0x4]
64005282:	mov    DWORD PTR [edi+0x4],edx
64005285:	mov    ecx,DWORD PTR [eax+0x8]
64005288:	mov    DWORD PTR [edi+0x8],ecx
6400528b:	mov    edx,DWORD PTR [eax+0xc]
6400528e:	add    esp,0x4
64005291:	mov    DWORD PTR [edi+0xc],edx
64005294:	mov    al,0x1
64005296:	jmp    0x640052c3
64005298:	mov    eax,0x6400529e
6400529d:	ret    
6400529e:	jmp    0x640052c1
640052a0:	mov    eax,ds:0x64025c40
640052a5:	mov    DWORD PTR [edi],eax
640052a7:	mov    ecx,DWORD PTR ds:0x64025c44
640052ad:	mov    DWORD PTR [edi+0x4],ecx
640052b0:	mov    edx,DWORD PTR ds:0x64025c48
640052b6:	mov    DWORD PTR [edi+0x8],edx
640052b9:	mov    eax,ds:0x64025c4c
640052be:	mov    DWORD PTR [edi+0xc],eax
640052c1:	xor    al,al
640052c3:	mov    ecx,DWORD PTR [ebp-0xc]
640052c6:	mov    DWORD PTR fs:0x0,ecx
640052cd:	pop    ecx
640052ce:	pop    edi
640052cf:	pop    esi
640052d0:	pop    ebx
640052d1:	mov    ecx,DWORD PTR [ebp-0x14]
640052d4:	xor    ecx,ebp
640052d6:	call   0x64012b8c
640052db:	mov    esp,ebp
640052dd:	pop    ebp
640052de:	ret    
640052df:	int3   
640052e0:	sub    esp,0x118
640052e6:	mov    eax,ds:0x6402d09c
640052eb:	xor    eax,esp
640052ed:	mov    DWORD PTR [esp+0x114],eax
640052f4:	push   esi
640052f5:	push   0x110
640052fa:	lea    eax,[esp+0xc]
640052fe:	push   0x0
64005300:	push   eax
64005301:	call   0x64013290
64005306:	mov    edx,DWORD PTR ds:0x6402e540
6400530c:	mov    eax,DWORD PTR [edx+0xc]
6400530f:	add    esp,0xc
64005312:	mov    ecx,0x6402e540
64005317:	mov    DWORD PTR [esp+0x4],0x114
6400531f:	call   eax
64005321:	lea    ecx,[esp+0x4]
64005325:	mov    esi,eax
64005327:	push   ecx
64005328:	add    esi,0x10
6400532b:	call   DWORD PTR ds:0x6402506c
64005331:	test   eax,eax
64005333:	je     0x64005375
64005335:	mov    edx,DWORD PTR [esp+0x8]
64005339:	mov    eax,DWORD PTR [esp+0xc]
6400533d:	mov    DWORD PTR [edi],edx
6400533f:	mov    DWORD PTR [ebx],eax
64005341:	lea    eax,[esi-0x10]
64005344:	lea    ecx,[eax+0xc]
64005347:	or     edx,0xffffffff
6400534a:	lock xadd DWORD PTR [ecx],edx
6400534e:	dec    edx
6400534f:	test   edx,edx
64005351:	jg     0x6400535d
64005353:	mov    ecx,DWORD PTR [eax]
64005355:	mov    edx,DWORD PTR [ecx]
64005357:	push   eax
64005358:	mov    eax,DWORD PTR [edx+0x4]
6400535b:	call   eax
6400535d:	mov    al,0x1
6400535f:	pop    esi
64005360:	mov    ecx,DWORD PTR [esp+0x114]
64005367:	xor    ecx,esp
64005369:	call   0x64012b8c
6400536e:	add    esp,0x118
64005374:	ret    
64005375:	lea    eax,[esi-0x10]
64005378:	lea    ecx,[eax+0xc]
6400537b:	or     edx,0xffffffff
6400537e:	lock xadd DWORD PTR [ecx],edx
64005382:	dec    edx
64005383:	test   edx,edx
64005385:	jg     0x64005391
64005387:	mov    ecx,DWORD PTR [eax]
64005389:	mov    edx,DWORD PTR [ecx]
6400538b:	push   eax
6400538c:	mov    eax,DWORD PTR [edx+0x4]
6400538f:	call   eax
64005391:	mov    ecx,DWORD PTR [esp+0x118]
64005398:	pop    esi
64005399:	xor    ecx,esp
6400539b:	xor    al,al
6400539d:	call   0x64012b8c
640053a2:	add    esp,0x118
640053a8:	ret    
640053a9:	int3   
640053aa:	int3   
640053ab:	int3   
640053ac:	int3   
640053ad:	int3   
640053ae:	int3   
640053af:	int3   
640053b0:	push   ebp
640053b1:	mov    ebp,esp
640053b3:	and    esp,0xfffffff8
640053b6:	push   0xffffffff
640053b8:	push   0x64023818
640053bd:	mov    eax,fs:0x0
640053c3:	push   eax
640053c4:	sub    esp,0x14
640053c7:	push   ebx
640053c8:	push   edi
640053c9:	mov    eax,ds:0x6402d09c
640053ce:	xor    eax,esp
640053d0:	push   eax
640053d1:	lea    eax,[esp+0x20]
640053d5:	mov    fs:0x0,eax
640053db:	cmp    DWORD PTR ds:0x64031344,0x0
640053e2:	jne    0x64005495
640053e8:	push   0x640283f0
640053ed:	push   0x12
640053ef:	push   0x64028428
640053f4:	mov    DWORD PTR ds:0x64031344,0xc
640053fe:	mov    DWORD PTR ds:0x6403134c,0x0
64005408:	call   0x64005a10
6400540d:	add    esp,0xc
64005410:	push   eax
64005411:	lea    ecx,[esp+0x14]
64005415:	call   0x64002540
6400541a:	lea    ebx,[esp+0x18]
6400541e:	lea    edi,[esp+0x14]
64005422:	mov    DWORD PTR [esp+0x28],0x0
6400542a:	call   0x640052e0
6400542f:	test   al,al
64005431:	je     0x64005458
64005433:	cmp    DWORD PTR [esp+0x14],0x6
64005438:	jb     0x64005458
6400543a:	push   0x64028450
6400543f:	push   0xf
64005441:	push   0x64028478
64005446:	call   0x64005a10
6400544b:	add    esp,0xc
6400544e:	push   eax
6400544f:	lea    ecx,[esp+0x14]
64005453:	call   0x64005710
64005458:	mov    eax,DWORD PTR [esp+0x10]
6400545c:	push   0x0
6400545e:	push   0x64031348
64005463:	push   0x1
64005465:	push   eax
64005466:	call   0x6400dde0
6400546b:	call   eax
6400546d:	mov    DWORD PTR [esp+0x28],0xffffffff
64005475:	mov    eax,DWORD PTR [esp+0x10]
64005479:	add    eax,0xfffffff0
6400547c:	lea    ecx,[eax+0xc]
6400547f:	or     edx,0xffffffff
64005482:	lock xadd DWORD PTR [ecx],edx
64005486:	dec    edx
64005487:	test   edx,edx
64005489:	jg     0x64005495
6400548b:	mov    ecx,DWORD PTR [eax]
6400548d:	mov    edx,DWORD PTR [ecx]
6400548f:	push   eax
64005490:	mov    eax,DWORD PTR [edx+0x4]
64005493:	call   eax
64005495:	mov    eax,0x64031344
6400549a:	mov    ecx,DWORD PTR [esp+0x20]
6400549e:	mov    DWORD PTR fs:0x0,ecx
640054a5:	pop    ecx
640054a6:	pop    edi
640054a7:	pop    ebx
640054a8:	mov    esp,ebp
640054aa:	pop    ebp
640054ab:	ret    
640054ac:	int3   
640054ad:	int3   
640054ae:	int3   
640054af:	int3   
640054b0:	push   0xffffffff
640054b2:	push   0x640237e8
640054b7:	mov    eax,fs:0x0
640054bd:	push   eax
640054be:	push   ecx
640054bf:	push   esi
640054c0:	push   edi
640054c1:	mov    eax,ds:0x6402d09c
640054c6:	xor    eax,esp
640054c8:	push   eax
640054c9:	lea    eax,[esp+0x10]
640054cd:	mov    fs:0x0,eax
640054d3:	mov    esi,ecx
640054d5:	mov    DWORD PTR [esp+0xc],esi
640054d9:	mov    eax,ds:0x6402e540
640054de:	mov    edx,DWORD PTR [eax+0xc]
640054e1:	mov    ecx,0x6402e540
640054e6:	call   edx
640054e8:	add    eax,0x10
640054eb:	mov    DWORD PTR [esi],eax
640054ed:	mov    eax,DWORD PTR [esp+0x20]
640054f1:	test   eax,eax
640054f3:	mov    DWORD PTR [esp+0x18],0x0
640054fb:	je     0x64005521
640054fd:	test   eax,0xffff0000
64005502:	jne    0x64005521
64005504:	movzx  edi,ax
64005507:	push   0x0
64005509:	push   edi
6400550a:	call   0x64001fa0
6400550f:	add    esp,0x8
64005512:	test   eax,eax
64005514:	je     0x64005529
64005516:	push   edi
64005517:	push   eax
64005518:	mov    ecx,esi
6400551a:	call   0x640028c0
6400551f:	jmp    0x64005529
64005521:	push   eax
64005522:	mov    ecx,esi
64005524:	call   0x640027b0
64005529:	mov    eax,esi
6400552b:	mov    ecx,DWORD PTR [esp+0x10]
6400552f:	mov    DWORD PTR fs:0x0,ecx
64005536:	pop    ecx
64005537:	pop    edi
64005538:	pop    esi
64005539:	add    esp,0x10
6400553c:	ret    0x4
6400553f:	int3   
64005540:	mov    eax,DWORD PTR [edi]
64005542:	mov    edx,DWORD PTR [eax-0x8]
64005545:	push   ebx
64005546:	mov    ebx,DWORD PTR [eax-0xc]
64005549:	push   esi
6400554a:	mov    ecx,0x1
6400554f:	sub    ecx,DWORD PTR [eax-0x4]
64005552:	lea    esi,[ebx+0x1]
64005555:	sub    edx,esi
64005557:	or     ecx,edx
64005559:	jge    0x64005563
6400555b:	push   esi
6400555c:	mov    ecx,edi
6400555e:	call   0x64001e00
64005563:	test   esi,esi
64005565:	movsx  ax,BYTE PTR [esp+0xc]
6400556b:	mov    ecx,DWORD PTR [edi]
6400556d:	mov    WORD PTR [ecx+ebx*2],ax
64005571:	jl     0x6400558c
64005573:	mov    eax,DWORD PTR [edi]
64005575:	cmp    esi,DWORD PTR [eax-0x8]
64005578:	jg     0x6400558c
6400557a:	mov    DWORD PTR [eax-0xc],esi
6400557d:	mov    edx,DWORD PTR [edi]
6400557f:	mov    WORD PTR [edx+esi*2],0x0
64005585:	pop    esi
64005586:	mov    eax,edi
64005588:	pop    ebx
64005589:	ret    0x4
6400558c:	push   0x80070057
64005591:	call   0x64001040
64005596:	int3   
64005597:	int3   
64005598:	int3   
64005599:	int3   
6400559a:	int3   
6400559b:	int3   
6400559c:	int3   
6400559d:	int3   
6400559e:	int3   
6400559f:	int3   
640055a0:	mov    eax,DWORD PTR [edi]
640055a2:	mov    edx,DWORD PTR [eax-0x8]
640055a5:	push   ebx
640055a6:	mov    ebx,DWORD PTR [eax-0xc]
640055a9:	push   esi
640055aa:	mov    ecx,0x1
640055af:	sub    ecx,DWORD PTR [eax-0x4]
640055b2:	lea    esi,[ebx+0x1]
640055b5:	sub    edx,esi
640055b7:	or     ecx,edx
640055b9:	jge    0x640055c3
640055bb:	push   esi
640055bc:	mov    ecx,edi
640055be:	call   0x64001e00
640055c3:	test   esi,esi
640055c5:	mov    eax,DWORD PTR [edi]
640055c7:	mov    WORD PTR [eax+ebx*2],0x5c
640055cd:	jl     0x640055e6
640055cf:	mov    eax,DWORD PTR [edi]
640055d1:	cmp    esi,DWORD PTR [eax-0x8]
640055d4:	jg     0x640055e6
640055d6:	mov    DWORD PTR [eax-0xc],esi
640055d9:	mov    ecx,DWORD PTR [edi]
640055db:	mov    WORD PTR [ecx+esi*2],0x0
640055e1:	pop    esi
640055e2:	mov    eax,edi
640055e4:	pop    ebx
640055e5:	ret    
640055e6:	push   0x80070057
640055eb:	call   0x64001040
640055f0:	int3   
640055f1:	int3   
640055f2:	int3   
640055f3:	int3   
640055f4:	int3   
640055f5:	int3   
640055f6:	int3   
640055f7:	int3   
640055f8:	int3   
640055f9:	int3   
640055fa:	int3   
640055fb:	int3   
640055fc:	int3   
640055fd:	int3   
640055fe:	int3   
640055ff:	int3   
64005600:	push   esi
64005601:	push   edi
64005602:	mov    edi,DWORD PTR [ebx]
64005604:	mov    ecx,edi
64005606:	movzx  eax,WORD PTR [ecx]
64005609:	xor    edx,edx
6400560b:	test   ax,ax
6400560e:	je     0x64005665
64005610:	cmp    ax,0x7d
64005614:	jne    0x6400561e
64005616:	test   edx,edx
64005618:	jne    0x64005620
6400561a:	mov    edx,ecx
6400561c:	jmp    0x64005620
6400561e:	xor    edx,edx
64005620:	movzx  eax,WORD PTR [ecx+0x2]
64005624:	add    ecx,0x2
64005627:	test   ax,ax
6400562a:	jne    0x64005610
6400562c:	test   edx,edx
6400562e:	je     0x64005665
64005630:	mov    ecx,DWORD PTR [edi-0x8]
64005633:	sub    edx,edi
64005635:	sar    edx,1
64005637:	mov    eax,0x1
6400563c:	sub    eax,DWORD PTR [edi-0x4]
6400563f:	mov    esi,edx
64005641:	sub    ecx,esi
64005643:	or     eax,ecx
64005645:	jge    0x6400564f
64005647:	push   esi
64005648:	mov    ecx,ebx
6400564a:	call   0x64001e00
6400564f:	test   esi,esi
64005651:	jl     0x6400566a
64005653:	mov    eax,DWORD PTR [ebx]
64005655:	cmp    esi,DWORD PTR [eax-0x8]
64005658:	jg     0x6400566a
6400565a:	mov    DWORD PTR [eax-0xc],esi
6400565d:	mov    edx,DWORD PTR [ebx]
6400565f:	mov    WORD PTR [edx+esi*2],0x0
64005665:	pop    edi
64005666:	mov    eax,ebx
64005668:	pop    esi
64005669:	ret    
6400566a:	push   0x80070057
6400566f:	call   0x64001040
64005674:	int3   
64005675:	int3   
64005676:	int3   
64005677:	int3   
64005678:	int3   
64005679:	int3   
6400567a:	int3   
6400567b:	int3   
6400567c:	int3   
6400567d:	int3   
6400567e:	int3   
6400567f:	int3   
64005680:	mov    ecx,DWORD PTR [ebx]
64005682:	mov    eax,ecx
64005684:	cmp    WORD PTR [eax],0x7b
64005688:	jne    0x64005699
6400568a:	lea    ebx,[ebx+0x0]
64005690:	add    eax,0x2
64005693:	cmp    WORD PTR [eax],0x7b
64005697:	je     0x64005690
64005699:	cmp    eax,ecx
6400569b:	push   esi
6400569c:	je     0x640056f8
6400569e:	sub    eax,ecx
640056a0:	sar    eax,1
640056a2:	push   edi
640056a3:	mov    edx,0x1
640056a8:	sub    edx,DWORD PTR [ecx-0x4]
640056ab:	mov    edi,eax
640056ad:	mov    eax,DWORD PTR [ecx-0xc]
640056b0:	mov    ecx,DWORD PTR [ecx-0x8]
640056b3:	sub    ecx,eax
640056b5:	or     edx,ecx
640056b7:	jge    0x640056c1
640056b9:	push   eax
640056ba:	mov    ecx,ebx
640056bc:	call   0x64001e00
640056c1:	mov    eax,DWORD PTR [ebx]
640056c3:	mov    esi,DWORD PTR [eax-0xc]
640056c6:	sub    esi,edi
640056c8:	lea    ecx,[esi+esi*1+0x2]
640056cc:	push   ecx
640056cd:	lea    edx,[eax+edi*2]
640056d0:	push   edx
640056d1:	push   ecx
640056d2:	push   eax
640056d3:	call   0x64012563
640056d8:	push   eax
640056d9:	call   0x64001e90
640056de:	add    esp,0x14
640056e1:	test   esi,esi
640056e3:	pop    edi
640056e4:	jl     0x640056fc
640056e6:	mov    eax,DWORD PTR [ebx]
640056e8:	cmp    esi,DWORD PTR [eax-0x8]
640056eb:	jg     0x640056fc
640056ed:	mov    DWORD PTR [eax-0xc],esi
640056f0:	mov    eax,DWORD PTR [ebx]
640056f2:	mov    WORD PTR [eax+esi*2],0x0
640056f8:	mov    eax,ebx
640056fa:	pop    esi
640056fb:	ret    
640056fc:	push   0x80070057
64005701:	call   0x64001040
64005706:	int3   
64005707:	int3   
64005708:	int3   
64005709:	int3   
6400570a:	int3   
6400570b:	int3   
6400570c:	int3   
6400570d:	int3   
6400570e:	int3   
6400570f:	int3   
64005710:	push   esi
64005711:	mov    esi,DWORD PTR [esp+0x8]
64005715:	test   esi,esi
64005717:	jne    0x64005726
64005719:	xor    eax,eax
6400571b:	push   eax
6400571c:	push   esi
6400571d:	call   0x64002990
64005722:	pop    esi
64005723:	ret    0x4
64005726:	mov    eax,esi
64005728:	push   edi
64005729:	lea    edi,[eax+0x2]
6400572c:	lea    esp,[esp+0x0]
64005730:	mov    dx,WORD PTR [eax]
64005733:	add    eax,0x2
64005736:	test   dx,dx
64005739:	jne    0x64005730
6400573b:	sub    eax,edi
6400573d:	pop    edi
6400573e:	sar    eax,1
64005740:	push   eax
64005741:	push   esi
64005742:	call   0x64002990
64005747:	pop    esi
64005748:	ret    0x4
6400574b:	int3   
6400574c:	int3   
6400574d:	int3   
6400574e:	int3   
6400574f:	int3   
64005750:	push   ebp
64005751:	mov    ebp,esp
64005753:	and    esp,0xfffffff8
64005756:	push   0xffffffff
64005758:	push   0x64022dd1
6400575d:	mov    eax,fs:0x0
64005763:	push   eax
64005764:	sub    esp,0xd0
6400576a:	mov    eax,ds:0x6402d09c
6400576f:	xor    eax,esp
64005771:	mov    DWORD PTR [esp+0xc8],eax
64005778:	push   ebx
64005779:	push   esi
6400577a:	push   edi
6400577b:	mov    eax,ds:0x6402d09c
64005780:	xor    eax,esp
64005782:	push   eax
64005783:	lea    eax,[esp+0xe0]
6400578a:	mov    fs:0x0,eax
64005790:	mov    eax,ds:0x64031268
64005795:	mov    esi,DWORD PTR [ebp+0x8]
64005798:	xor    ebx,ebx
6400579a:	cmp    eax,ebx
6400579c:	mov    DWORD PTR [esp+0x28],esi
640057a0:	jne    0x640057b0
640057a2:	push   ebx
640057a3:	push   ebx
640057a4:	push   ebx
640057a5:	call   DWORD PTR ds:0x64025064
640057ab:	mov    ds:0x64031268,eax
640057b0:	push   0xffffffff
640057b2:	push   eax
640057b3:	call   DWORD PTR ds:0x640250b4
640057b9:	test   eax,eax
640057bb:	je     0x640057c4
640057bd:	mov    eax,esi
640057bf:	jmp    0x640059eb
640057c4:	mov    eax,DWORD PTR [ebp+0xc]
640057c7:	push   eax
640057c8:	mov    edi,0xf
640057cd:	push   esi
640057ce:	lea    ecx,[esp+0xa8]
640057d5:	mov    DWORD PTR [esp+0xc0],edi
640057dc:	mov    DWORD PTR [esp+0xbc],ebx
640057e3:	mov    BYTE PTR [esp+0xac],bl
640057ea:	call   0x64001860
640057ef:	lea    ecx,[esp+0xa0]
640057f6:	push   ecx
640057f7:	lea    edx,[esp+0x18]
640057fb:	push   edx
640057fc:	mov    DWORD PTR [esp+0xf0],ebx
64005803:	call   0x64006080
64005808:	mov    ecx,eax
6400580a:	call   0x64006800
6400580f:	call   0x64006080
64005814:	mov    esi,DWORD PTR [esp+0x14]
64005818:	cmp    esi,ebx
6400581a:	mov    ecx,DWORD PTR [eax+0x4]
6400581d:	mov    DWORD PTR [esp+0x20],ecx
64005821:	je     0x64005827
64005823:	cmp    esi,eax
64005825:	je     0x6400582c
64005827:	call   0x640126e8
6400582c:	mov    edx,DWORD PTR [esp+0x20]
64005830:	cmp    DWORD PTR [esp+0x18],edx
64005834:	jne    0x64005938
6400583a:	sub    esp,0x1c
6400583d:	mov    ecx,esp
6400583f:	mov    DWORD PTR [esp+0x48],esp
64005843:	push   0xffffffff
64005845:	push   ebx
64005846:	lea    eax,[esp+0xc4]
6400584d:	mov    DWORD PTR [ecx+0x18],edi
64005850:	mov    DWORD PTR [ecx+0x14],ebx
64005853:	push   eax
64005854:	mov    BYTE PTR [ecx+0x4],bl
64005857:	call   0x64001780
6400585c:	lea    ecx,[esp+0xd8]
64005863:	push   ecx
64005864:	call   0x64006110
64005869:	add    esp,0x4
6400586c:	mov    ecx,esp
6400586e:	mov    BYTE PTR [esp+0x104],0x1
64005876:	mov    DWORD PTR [esp+0x48],esp
6400587a:	push   0xffffffff
6400587c:	push   ebx
6400587d:	lea    edx,[esp+0xe0]
64005884:	mov    DWORD PTR [ecx+0x18],edi
64005887:	mov    DWORD PTR [ecx+0x14],ebx
6400588a:	push   edx
6400588b:	mov    BYTE PTR [ecx+0x4],bl
6400588e:	call   0x64001780
64005893:	sub    esp,0x1c
64005896:	mov    ecx,esp
64005898:	mov    BYTE PTR [esp+0x120],0x2
640058a0:	mov    DWORD PTR [esp+0x54],esp
640058a4:	push   0xffffffff
640058a6:	push   ebx
640058a7:	lea    eax,[esp+0xe0]
640058ae:	mov    DWORD PTR [ecx+0x18],edi
640058b1:	mov    DWORD PTR [ecx+0x14],ebx
640058b4:	push   eax
640058b5:	mov    BYTE PTR [ecx+0x4],bl
640058b8:	call   0x64001780
640058bd:	lea    ecx,[esp+0xa0]
640058c4:	push   ecx
640058c5:	mov    BYTE PTR [esp+0x124],0x1
640058cd:	call   0x64008a70
640058d2:	add    esp,0x3c
640058d5:	push   eax
640058d6:	lea    ecx,[esp+0x34]
640058da:	mov    BYTE PTR [esp+0xec],0x3
640058e2:	call   0x64008b10
640058e7:	lea    edx,[esp+0x30]
640058eb:	push   edx
640058ec:	lea    eax,[esp+0x20]
640058f0:	push   eax
640058f1:	mov    BYTE PTR [esp+0xf0],0x4
640058f9:	call   0x64006080
640058fe:	mov    ecx,eax
64005900:	call   0x64006670
64005905:	lea    ecx,[esp+0x30]
64005909:	call   0x64005f00
6400590e:	lea    ecx,[esp+0x68]
64005912:	call   0x64005f00
64005917:	mov    BYTE PTR [esp+0xe8],bl
6400591e:	cmp    DWORD PTR [esp+0xd4],0x10
64005926:	jb     0x64005938
64005928:	mov    ecx,DWORD PTR [esp+0xc0]
6400592f:	push   ecx
64005930:	call   0x64012332
64005935:	add    esp,0x4
64005938:	mov    edx,DWORD PTR [ebp+0x10]
6400593b:	movzx  eax,BYTE PTR [edx]
6400593e:	cmp    eax,0x100
64005943:	jge    0x64005967
64005945:	lea    ecx,[esp+0xa0]
6400594c:	push   ecx
6400594d:	lea    edx,[esp+0x20]
64005951:	push   edx
64005952:	call   0x64006080
64005957:	mov    ecx,eax
64005959:	call   0x64006800
6400595e:	mov    esi,DWORD PTR [eax]
64005960:	mov    eax,DWORD PTR [eax+0x4]
64005963:	mov    DWORD PTR [esp+0x18],eax
64005967:	call   0x64006080
6400596c:	cmp    esi,ebx
6400596e:	mov    ecx,DWORD PTR [eax+0x4]
64005971:	mov    DWORD PTR [esp+0x20],ecx
64005975:	je     0x6400597b
64005977:	cmp    esi,eax
64005979:	je     0x64005980
6400597b:	call   0x640126e8
64005980:	mov    edi,DWORD PTR [esp+0x18]
64005984:	cmp    edi,DWORD PTR [esp+0x20]
64005988:	je     0x640059ad
6400598a:	cmp    esi,ebx
6400598c:	jne    0x64005993
6400598e:	call   0x640126e8
64005993:	cmp    edi,DWORD PTR [esi+0x4]
64005996:	jne    0x6400599d
64005998:	call   0x640126e8
6400599d:	cmp    DWORD PTR [edi+0x40],0x10
640059a1:	jb     0x640059a8
640059a3:	mov    edi,DWORD PTR [edi+0x2c]
640059a6:	jmp    0x640059b1
640059a8:	add    edi,0x2c
640059ab:	jmp    0x640059b1
640059ad:	mov    edi,DWORD PTR [esp+0x28]
640059b1:	mov    eax,ds:0x64031268
640059b6:	cmp    eax,ebx
640059b8:	jne    0x640059c8
640059ba:	push   ebx
640059bb:	push   ebx
640059bc:	push   ebx
640059bd:	call   DWORD PTR ds:0x64025064
640059c3:	mov    ds:0x64031268,eax
640059c8:	push   eax
640059c9:	call   DWORD PTR ds:0x64025078
640059cf:	cmp    DWORD PTR [esp+0xb8],0x10
640059d7:	jb     0x640059e9
640059d9:	mov    edx,DWORD PTR [esp+0xa4]
640059e0:	push   edx
640059e1:	call   0x64012332
640059e6:	add    esp,0x4
640059e9:	mov    eax,edi
640059eb:	mov    ecx,DWORD PTR [esp+0xe0]
640059f2:	mov    DWORD PTR fs:0x0,ecx
640059f9:	pop    ecx
640059fa:	pop    edi
640059fb:	pop    esi
640059fc:	pop    ebx
640059fd:	mov    ecx,DWORD PTR [esp+0xc8]
64005a04:	xor    ecx,esp
64005a06:	call   0x64012b8c
64005a0b:	mov    esp,ebp
64005a0d:	pop    ebp
64005a0e:	ret    
64005a0f:	int3   
64005a10:	push   ebp
64005a11:	mov    ebp,esp
64005a13:	and    esp,0xfffffff8
64005a16:	push   0xffffffff
64005a18:	push   0x64022d71
64005a1d:	mov    eax,fs:0x0
64005a23:	push   eax
64005a24:	sub    esp,0xd0
64005a2a:	mov    eax,ds:0x6402d09c
64005a2f:	xor    eax,esp
64005a31:	mov    DWORD PTR [esp+0xc8],eax
64005a38:	push   ebx
64005a39:	push   esi
64005a3a:	push   edi
64005a3b:	mov    eax,ds:0x6402d09c
64005a40:	xor    eax,esp
64005a42:	push   eax
64005a43:	lea    eax,[esp+0xe0]
64005a4a:	mov    fs:0x0,eax
64005a50:	mov    eax,ds:0x64031268
64005a55:	mov    esi,DWORD PTR [ebp+0x8]
64005a58:	xor    ebx,ebx
64005a5a:	cmp    eax,ebx
64005a5c:	mov    DWORD PTR [esp+0x28],esi
64005a60:	jne    0x64005a70
64005a62:	push   ebx
64005a63:	push   ebx
64005a64:	push   ebx
64005a65:	call   DWORD PTR ds:0x64025064
64005a6b:	mov    ds:0x64031268,eax
64005a70:	push   0xffffffff
64005a72:	push   eax
64005a73:	call   DWORD PTR ds:0x640250b4
64005a79:	test   eax,eax
64005a7b:	je     0x64005a84
64005a7d:	mov    eax,esi
64005a7f:	jmp    0x64005caf
64005a84:	mov    eax,DWORD PTR [ebp+0xc]
64005a87:	push   eax
64005a88:	mov    edi,0x7
64005a8d:	push   esi
64005a8e:	lea    ecx,[esp+0xa8]
64005a95:	mov    DWORD PTR [esp+0xc0],edi
64005a9c:	mov    DWORD PTR [esp+0xbc],ebx
64005aa3:	mov    WORD PTR [esp+0xac],bx
64005aab:	call   0x64007000
64005ab0:	lea    ecx,[esp+0xa0]
64005ab7:	push   ecx
64005ab8:	lea    edx,[esp+0x18]
64005abc:	push   edx
64005abd:	mov    DWORD PTR [esp+0xf0],ebx
64005ac4:	call   0x640061e0
64005ac9:	mov    ecx,eax
64005acb:	call   0x640069c0
64005ad0:	call   0x640061e0
64005ad5:	mov    esi,DWORD PTR [esp+0x14]
64005ad9:	cmp    esi,ebx
64005adb:	mov    ecx,DWORD PTR [eax+0x4]
64005ade:	mov    DWORD PTR [esp+0x20],ecx
64005ae2:	je     0x64005ae8
64005ae4:	cmp    esi,eax
64005ae6:	je     0x64005aed
64005ae8:	call   0x640126e8
64005aed:	mov    edx,DWORD PTR [esp+0x20]
64005af1:	cmp    DWORD PTR [esp+0x18],edx
64005af5:	jne    0x64005bfc
64005afb:	sub    esp,0x1c
64005afe:	mov    ecx,esp
64005b00:	mov    DWORD PTR [esp+0x48],esp
64005b04:	push   0xffffffff
64005b06:	push   ebx
64005b07:	lea    eax,[esp+0xc4]
64005b0e:	mov    DWORD PTR [ecx+0x18],edi
64005b11:	mov    DWORD PTR [ecx+0x14],ebx
64005b14:	push   eax
64005b15:	mov    WORD PTR [ecx+0x4],bx
64005b19:	call   0x64006f10
64005b1e:	lea    ecx,[esp+0xd8]
64005b25:	push   ecx
64005b26:	call   0x64006270
64005b2b:	add    esp,0x4
64005b2e:	mov    ecx,esp
64005b30:	mov    BYTE PTR [esp+0x104],0x1
64005b38:	mov    DWORD PTR [esp+0x48],esp
64005b3c:	push   0xffffffff
64005b3e:	push   ebx
64005b3f:	lea    edx,[esp+0xe0]
64005b46:	mov    DWORD PTR [ecx+0x18],edi
64005b49:	mov    DWORD PTR [ecx+0x14],ebx
64005b4c:	push   edx
64005b4d:	mov    WORD PTR [ecx+0x4],bx
64005b51:	call   0x64006f10
64005b56:	sub    esp,0x1c
64005b59:	mov    ecx,esp
64005b5b:	mov    BYTE PTR [esp+0x120],0x2
64005b63:	mov    DWORD PTR [esp+0x54],esp
64005b67:	push   0xffffffff
64005b69:	push   ebx
64005b6a:	lea    eax,[esp+0xe0]
64005b71:	mov    DWORD PTR [ecx+0x18],edi
64005b74:	mov    DWORD PTR [ecx+0x14],ebx
64005b77:	push   eax
64005b78:	mov    WORD PTR [ecx+0x4],bx
64005b7c:	call   0x64006f10
64005b81:	lea    ecx,[esp+0xa0]
64005b88:	push   ecx
64005b89:	mov    BYTE PTR [esp+0x124],0x1
64005b91:	call   0x64008b90
64005b96:	add    esp,0x3c
64005b99:	push   eax
64005b9a:	lea    ecx,[esp+0x34]
64005b9e:	mov    BYTE PTR [esp+0xec],0x3
64005ba6:	call   0x64008c30
64005bab:	lea    edx,[esp+0x30]
64005baf:	push   edx
64005bb0:	lea    eax,[esp+0x20]
64005bb4:	push   eax
64005bb5:	mov    BYTE PTR [esp+0xf0],0x4
64005bbd:	call   0x640061e0
64005bc2:	mov    ecx,eax
64005bc4:	call   0x640068b0
64005bc9:	lea    ecx,[esp+0x30]
64005bcd:	call   0x64005f50
64005bd2:	lea    ecx,[esp+0x68]
64005bd6:	call   0x64005f50
64005bdb:	mov    BYTE PTR [esp+0xe8],bl
64005be2:	cmp    DWORD PTR [esp+0xd4],0x8
64005bea:	jb     0x64005bfc
64005bec:	mov    ecx,DWORD PTR [esp+0xc0]
64005bf3:	push   ecx
64005bf4:	call   0x64012332
64005bf9:	add    esp,0x4
64005bfc:	mov    edx,DWORD PTR [ebp+0x10]
64005bff:	movzx  eax,BYTE PTR [edx]
64005c02:	cmp    eax,0x100
64005c07:	jge    0x64005c2b
64005c09:	lea    ecx,[esp+0xa0]
64005c10:	push   ecx
64005c11:	lea    edx,[esp+0x20]
64005c15:	push   edx
64005c16:	call   0x640061e0
64005c1b:	mov    ecx,eax
64005c1d:	call   0x640069c0
64005c22:	mov    esi,DWORD PTR [eax]
64005c24:	mov    eax,DWORD PTR [eax+0x4]
64005c27:	mov    DWORD PTR [esp+0x18],eax
64005c2b:	call   0x640061e0
64005c30:	cmp    esi,ebx
64005c32:	mov    ecx,DWORD PTR [eax+0x4]
64005c35:	mov    DWORD PTR [esp+0x20],ecx
64005c39:	je     0x64005c3f
64005c3b:	cmp    esi,eax
64005c3d:	je     0x64005c44
64005c3f:	call   0x640126e8
64005c44:	mov    edi,DWORD PTR [esp+0x18]
64005c48:	cmp    edi,DWORD PTR [esp+0x20]
64005c4c:	je     0x64005c71
64005c4e:	cmp    esi,ebx
64005c50:	jne    0x64005c57
64005c52:	call   0x640126e8
64005c57:	cmp    edi,DWORD PTR [esi+0x4]
64005c5a:	jne    0x64005c61
64005c5c:	call   0x640126e8
64005c61:	cmp    DWORD PTR [edi+0x40],0x8
64005c65:	jb     0x64005c6c
64005c67:	mov    edi,DWORD PTR [edi+0x2c]
64005c6a:	jmp    0x64005c75
64005c6c:	add    edi,0x2c
64005c6f:	jmp    0x64005c75
64005c71:	mov    edi,DWORD PTR [esp+0x28]
64005c75:	mov    eax,ds:0x64031268
64005c7a:	cmp    eax,ebx
64005c7c:	jne    0x64005c8c
64005c7e:	push   ebx
64005c7f:	push   ebx
64005c80:	push   ebx
64005c81:	call   DWORD PTR ds:0x64025064
64005c87:	mov    ds:0x64031268,eax
64005c8c:	push   eax
64005c8d:	call   DWORD PTR ds:0x64025078
64005c93:	cmp    DWORD PTR [esp+0xb8],0x8
64005c9b:	jb     0x64005cad
64005c9d:	mov    edx,DWORD PTR [esp+0xa4]
64005ca4:	push   edx
64005ca5:	call   0x64012332
64005caa:	add    esp,0x4
64005cad:	mov    eax,edi
64005caf:	mov    ecx,DWORD PTR [esp+0xe0]
64005cb6:	mov    DWORD PTR fs:0x0,ecx
64005cbd:	pop    ecx
64005cbe:	pop    edi
64005cbf:	pop    esi
64005cc0:	pop    ebx
64005cc1:	mov    ecx,DWORD PTR [esp+0xc8]
64005cc8:	xor    ecx,esp
64005cca:	call   0x64012b8c
64005ccf:	mov    esp,ebp
64005cd1:	pop    ebp
64005cd2:	ret    
64005cd3:	int3   
64005cd4:	int3   
64005cd5:	int3   
64005cd6:	int3   
64005cd7:	int3   
64005cd8:	int3   
64005cd9:	int3   
64005cda:	int3   
64005cdb:	int3   
64005cdc:	int3   
64005cdd:	int3   
64005cde:	int3   
64005cdf:	int3   
64005ce0:	push   ebp
64005ce1:	mov    ebp,esp
64005ce3:	and    esp,0xfffffff8
64005ce6:	sub    esp,0x1c
64005ce9:	mov    ecx,DWORD PTR [ebp+0x8]
64005cec:	mov    eax,DWORD PTR [ecx+0x4]
64005cef:	push   ebx
64005cf0:	push   esi
64005cf1:	mov    esi,DWORD PTR [eax+0x4]
64005cf4:	cmp    BYTE PTR [esi+0x29],0x0
64005cf8:	mov    ebx,eax
64005cfa:	mov    al,0x1
64005cfc:	push   edi
64005cfd:	mov    BYTE PTR [esp+0x10],al
64005d01:	jne    0x64005da2
64005d07:	mov    edx,DWORD PTR [ebp+0x10]
64005d0a:	mov    eax,DWORD PTR [edx+0x14]
64005d0d:	mov    ecx,DWORD PTR [edx+0x18]
64005d10:	mov    DWORD PTR [esp+0x18],eax
64005d14:	mov    DWORD PTR [esp+0x14],eax
64005d18:	mov    DWORD PTR [esp+0x1c],ecx
64005d1c:	jmp    0x64005d27
64005d1e:	mov    edi,edi
64005d20:	mov    edx,DWORD PTR [ebp+0x10]
64005d23:	mov    eax,DWORD PTR [esp+0x14]
64005d27:	cmp    DWORD PTR [esi+0x24],0x10
64005d2b:	mov    ebx,DWORD PTR [esi+0x20]
64005d2e:	mov    DWORD PTR [esp+0x20],esi
64005d32:	jb     0x64005d39
64005d34:	mov    ecx,DWORD PTR [esi+0x10]
64005d37:	jmp    0x64005d3c
64005d39:	lea    ecx,[esi+0x10]
64005d3c:	mov    edi,DWORD PTR [esp+0x18]
64005d40:	cmp    eax,edi
64005d42:	mov    DWORD PTR [esp+0xc],ecx
64005d46:	jae    0x64005d4a
64005d48:	mov    edi,eax
64005d4a:	cmp    edi,ebx
64005d4c:	mov    ecx,edi
64005d4e:	jb     0x64005d52
64005d50:	mov    ecx,ebx
64005d52:	cmp    DWORD PTR [esp+0x1c],0x10
64005d57:	lea    eax,[edx+0x4]
64005d5a:	jb     0x64005d5e
64005d5c:	mov    eax,DWORD PTR [eax]
64005d5e:	mov    edx,DWORD PTR [esp+0xc]
64005d62:	push   ecx
64005d63:	push   edx
64005d64:	push   eax
64005d65:	call   0x64002c20
64005d6a:	add    esp,0xc
64005d6d:	test   eax,eax
64005d6f:	jne    0x64005d83
64005d71:	cmp    edi,ebx
64005d73:	jae    0x64005d7a
64005d75:	or     eax,0xffffffff
64005d78:	jmp    0x64005d81
64005d7a:	xor    eax,eax
64005d7c:	cmp    edi,ebx
64005d7e:	setne  al
64005d81:	test   eax,eax
64005d83:	setl   al
64005d86:	test   al,al
64005d88:	mov    BYTE PTR [esp+0x10],al
64005d8c:	je     0x64005d92
64005d8e:	mov    esi,DWORD PTR [esi]
64005d90:	jmp    0x64005d95
64005d92:	mov    esi,DWORD PTR [esi+0x8]
64005d95:	cmp    BYTE PTR [esi+0x29],0x0
64005d99:	je     0x64005d20
64005d9b:	mov    ebx,DWORD PTR [esp+0x20]
64005d9f:	mov    ecx,DWORD PTR [ebp+0x8]
64005da2:	test   al,al
64005da4:	mov    esi,ebx
64005da6:	mov    DWORD PTR [esp+0x24],esi
64005daa:	mov    DWORD PTR [esp+0x20],ecx
64005dae:	je     0x64005df3
64005db0:	mov    eax,DWORD PTR [ecx+0x4]
64005db3:	cmp    ebx,DWORD PTR [eax]
64005db5:	jne    0x64005de6
64005db7:	mov    edx,DWORD PTR [ebp+0x10]
64005dba:	push   edx
64005dbb:	push   0x1
64005dbd:	lea    eax,[esp+0x28]
64005dc1:	push   eax
64005dc2:	push   ecx
64005dc3:	mov    ecx,ebx
64005dc5:	call   0x64006340
64005dca:	mov    edx,DWORD PTR [eax]
64005dcc:	mov    ecx,DWORD PTR [ebp+0xc]
64005dcf:	mov    eax,DWORD PTR [eax+0x4]
64005dd2:	mov    DWORD PTR [ecx+0x4],eax
64005dd5:	mov    DWORD PTR [ecx],edx
64005dd7:	mov    BYTE PTR [ecx+0x8],0x1
64005ddb:	mov    eax,ecx
64005ddd:	pop    edi
64005dde:	pop    esi
64005ddf:	pop    ebx
64005de0:	mov    esp,ebp
64005de2:	pop    ebp
64005de3:	ret    0xc
64005de6:	lea    esi,[esp+0x20]
64005dea:	call   0x640077d0
64005def:	mov    esi,DWORD PTR [esp+0x24]
64005df3:	mov    edi,DWORD PTR [ebp+0x10]
64005df6:	cmp    DWORD PTR [edi+0x18],0x10
64005dfa:	mov    edx,DWORD PTR [edi+0x14]
64005dfd:	lea    ecx,[esi+0xc]
64005e00:	jb     0x64005e07
64005e02:	mov    eax,DWORD PTR [edi+0x4]
64005e05:	jmp    0x64005e0a
64005e07:	lea    eax,[edi+0x4]
64005e0a:	push   edx
64005e0b:	mov    edx,DWORD PTR [ecx+0x14]
64005e0e:	push   eax
64005e0f:	push   edx
64005e10:	push   0x0
64005e12:	call   0x64006010
64005e17:	test   eax,eax
64005e19:	jge    0x64005e4d
64005e1b:	mov    eax,DWORD PTR [esp+0x10]
64005e1f:	mov    edx,DWORD PTR [ebp+0x8]
64005e22:	push   edi
64005e23:	push   eax
64005e24:	lea    ecx,[esp+0x28]
64005e28:	push   ecx
64005e29:	push   edx
64005e2a:	mov    ecx,ebx
64005e2c:	call   0x64006340
64005e31:	mov    edx,DWORD PTR [eax]
64005e33:	mov    ecx,DWORD PTR [ebp+0xc]
64005e36:	mov    eax,DWORD PTR [eax+0x4]
64005e39:	mov    DWORD PTR [ecx+0x4],eax
64005e3c:	mov    DWORD PTR [ecx],edx
64005e3e:	mov    BYTE PTR [ecx+0x8],0x1
64005e42:	mov    eax,ecx
64005e44:	pop    edi
64005e45:	pop    esi
64005e46:	pop    ebx
64005e47:	mov    esp,ebp
64005e49:	pop    ebp
64005e4a:	ret    0xc
64005e4d:	mov    eax,DWORD PTR [ebp+0xc]
64005e50:	mov    ecx,DWORD PTR [esp+0x20]
64005e54:	pop    edi
64005e55:	mov    DWORD PTR [eax+0x4],esi
64005e58:	pop    esi
64005e59:	mov    DWORD PTR [eax],ecx
64005e5b:	mov    BYTE PTR [eax+0x8],0x0
64005e5f:	pop    ebx
64005e60:	mov    esp,ebp
64005e62:	pop    ebp
64005e63:	ret    0xc
64005e66:	int3   
64005e67:	int3   
64005e68:	int3   
64005e69:	int3   
64005e6a:	int3   
64005e6b:	int3   
64005e6c:	int3   
64005e6d:	int3   
64005e6e:	int3   
64005e6f:	int3   
64005e70:	push   ebp
64005e71:	mov    ebp,esp
64005e73:	and    esp,0xfffffff8
64005e76:	sub    esp,0x8
64005e79:	push   ebx
64005e7a:	push   edi
64005e7b:	mov    ecx,esi
64005e7d:	mov    edi,eax
64005e7f:	call   0x640076f0
64005e84:	test   esi,esi
64005e86:	mov    ebx,eax
64005e88:	jne    0x64005e8f
64005e8a:	call   0x640126e8
64005e8f:	mov    ecx,edi
64005e91:	mov    eax,esi
64005e93:	call   0x64007640
64005e98:	test   esi,esi
64005e9a:	mov    edi,eax
64005e9c:	jne    0x64005ea3
64005e9e:	call   0x640126e8
64005ea3:	mov    DWORD PTR [esp+0xc],0x0
64005eab:	mov    eax,DWORD PTR [esp+0xc]
64005eaf:	push   eax
64005eb0:	push   ebx
64005eb1:	push   esi
64005eb2:	push   edi
64005eb3:	push   esi
64005eb4:	lea    ebx,[esp+0x20]
64005eb8:	call   0x64008f30
64005ebd:	mov    eax,DWORD PTR [esp+0x20]
64005ec1:	add    esp,0x14
64005ec4:	pop    edi
64005ec5:	pop    ebx
64005ec6:	mov    esp,ebp
64005ec8:	pop    ebp
64005ec9:	ret    
64005eca:	int3   
64005ecb:	int3   
64005ecc:	int3   
64005ecd:	int3   
64005ece:	int3   
64005ecf:	int3   
64005ed0:	push   ebp
64005ed1:	mov    ebp,esp
64005ed3:	and    esp,0xfffffff8
64005ed6:	mov    edx,DWORD PTR [eax+0x4]
64005ed9:	mov    ecx,DWORD PTR ds:0x64031354
64005edf:	mov    DWORD PTR ds:0x64031354,edx
64005ee5:	mov    DWORD PTR [eax+0x4],ecx
64005ee8:	mov    edx,DWORD PTR [eax+0x8]
64005eeb:	mov    ecx,DWORD PTR ds:0x64031358
64005ef1:	mov    DWORD PTR ds:0x64031358,edx
64005ef7:	mov    DWORD PTR [eax+0x8],ecx
64005efa:	mov    esp,ebp
64005efc:	pop    ebp
64005efd:	ret    
64005efe:	int3   
64005eff:	int3   
64005f00:	push   ebx
64005f01:	push   esi
64005f02:	mov    esi,ecx
64005f04:	cmp    DWORD PTR [esi+0x34],0x10
64005f08:	jb     0x64005f16
64005f0a:	mov    eax,DWORD PTR [esi+0x20]
64005f0d:	push   eax
64005f0e:	call   0x64012332
64005f13:	add    esp,0x4
64005f16:	xor    ebx,ebx
64005f18:	mov    DWORD PTR [esi+0x34],0xf
64005f1f:	mov    DWORD PTR [esi+0x30],ebx
64005f22:	mov    BYTE PTR [esi+0x20],bl
64005f25:	cmp    DWORD PTR [esi+0x18],0x10
64005f29:	jb     0x64005f37
64005f2b:	mov    ecx,DWORD PTR [esi+0x4]
64005f2e:	push   ecx
64005f2f:	call   0x64012332
64005f34:	add    esp,0x4
64005f37:	mov    DWORD PTR [esi+0x14],ebx
64005f3a:	mov    DWORD PTR [esi+0x18],0xf
64005f41:	mov    BYTE PTR [esi+0x4],bl
64005f44:	pop    esi
64005f45:	pop    ebx
64005f46:	ret    
64005f47:	int3   
64005f48:	int3   
64005f49:	int3   
64005f4a:	int3   
64005f4b:	int3   
64005f4c:	int3   
64005f4d:	int3   
64005f4e:	int3   
64005f4f:	int3   
64005f50:	push   esi
64005f51:	mov    esi,ecx
64005f53:	cmp    DWORD PTR [esi+0x34],0x8
64005f57:	push   edi
64005f58:	jb     0x64005f66
64005f5a:	mov    eax,DWORD PTR [esi+0x20]
64005f5d:	push   eax
64005f5e:	call   0x64012332
64005f63:	add    esp,0x4
64005f66:	xor    edi,edi
64005f68:	mov    DWORD PTR [esi+0x34],0x7
64005f6f:	mov    DWORD PTR [esi+0x30],edi
64005f72:	mov    WORD PTR [esi+0x20],di
64005f76:	cmp    DWORD PTR [esi+0x18],0x8
64005f7a:	jb     0x64005f88
64005f7c:	mov    ecx,DWORD PTR [esi+0x4]
64005f7f:	push   ecx
64005f80:	call   0x64012332
64005f85:	add    esp,0x4
64005f88:	mov    DWORD PTR [esi+0x14],edi
64005f8b:	mov    DWORD PTR [esi+0x18],0x7
64005f92:	mov    WORD PTR [esi+0x4],di
64005f96:	pop    edi
64005f97:	pop    esi
64005f98:	ret    
64005f99:	int3   
64005f9a:	int3   
64005f9b:	int3   
64005f9c:	int3   
64005f9d:	int3   
64005f9e:	int3   
64005f9f:	int3   
64005fa0:	mov    ecx,DWORD PTR [eax]
64005fa2:	push   esi
64005fa3:	mov    esi,DWORD PTR [edi]
64005fa5:	lea    eax,[ecx-0x10]
64005fa8:	sub    esi,0x10
64005fab:	cmp    eax,esi
64005fad:	je     0x64005ffd
64005faf:	cmp    DWORD PTR [esi+0xc],0x0
64005fb3:	push   ebx
64005fb4:	lea    ebx,[esi+0xc]
64005fb7:	jl     0x64005fec
64005fb9:	mov    edx,DWORD PTR [eax]
64005fbb:	cmp    edx,DWORD PTR [esi]
64005fbd:	jne    0x64005fec
64005fbf:	push   ebp
64005fc0:	push   eax
64005fc1:	call   0x64002850
64005fc6:	mov    ebp,eax
64005fc8:	add    esp,0x4
64005fcb:	or     eax,0xffffffff
64005fce:	lock xadd DWORD PTR [ebx],eax
64005fd2:	dec    eax
64005fd3:	test   eax,eax
64005fd5:	jg     0x64005fe1
64005fd7:	mov    ecx,DWORD PTR [esi]
64005fd9:	mov    edx,DWORD PTR [ecx]
64005fdb:	mov    eax,DWORD PTR [edx+0x4]
64005fde:	push   esi
64005fdf:	call   eax
64005fe1:	add    ebp,0x10
64005fe4:	mov    DWORD PTR [edi],ebp
64005fe6:	pop    ebp
64005fe7:	pop    ebx
64005fe8:	mov    eax,edi
64005fea:	pop    esi
64005feb:	ret    
64005fec:	mov    edx,DWORD PTR [ecx-0xc]
64005fef:	push   edx
64005ff0:	push   ecx
64005ff1:	mov    ecx,edi
64005ff3:	call   0x64002a90
64005ff8:	pop    ebx
64005ff9:	mov    eax,edi
64005ffb:	pop    esi
64005ffc:	ret    
64005ffd:	mov    eax,edi
64005fff:	pop    esi
64006000:	ret    
64006001:	int3   
64006002:	int3   
64006003:	int3   
64006004:	int3   
64006005:	int3   
64006006:	int3   
64006007:	int3   
64006008:	int3   
64006009:	int3   
6400600a:	int3   
6400600b:	int3   
6400600c:	int3   
6400600d:	int3   
6400600e:	int3   
6400600f:	int3   
64006010:	push   ebx
64006011:	push   ebp
64006012:	mov    ebp,DWORD PTR [esp+0xc]
64006016:	push   esi
64006017:	push   edi
64006018:	mov    edi,ecx
6400601a:	cmp    DWORD PTR [edi+0x14],ebp
6400601d:	jae    0x64006024
6400601f:	call   0x640122ee
64006024:	mov    eax,DWORD PTR [edi+0x14]
64006027:	mov    esi,DWORD PTR [esp+0x18]
6400602b:	sub    eax,ebp
6400602d:	cmp    eax,esi
6400602f:	jae    0x64006033
64006031:	mov    esi,eax
64006033:	mov    ebx,DWORD PTR [esp+0x20]
64006037:	cmp    esi,ebx
64006039:	mov    eax,esi
6400603b:	jb     0x6400603f
6400603d:	mov    eax,ebx
6400603f:	cmp    DWORD PTR [edi+0x18],0x10
64006043:	jb     0x6400604a
64006045:	mov    edi,DWORD PTR [edi+0x4]
64006048:	jmp    0x6400604d
6400604a:	add    edi,0x4
6400604d:	push   eax
6400604e:	mov    eax,DWORD PTR [esp+0x20]
64006052:	push   eax
64006053:	add    edi,ebp
64006055:	push   edi
64006056:	call   0x64002c20
6400605b:	add    esp,0xc
6400605e:	test   eax,eax
64006060:	jne    0x64006077
64006062:	cmp    esi,ebx
64006064:	jae    0x64006070
64006066:	pop    edi
64006067:	pop    esi
64006068:	pop    ebp
64006069:	or     eax,0xffffffff
6400606c:	pop    ebx
6400606d:	ret    0x10
64006070:	xor    eax,eax
64006072:	cmp    esi,ebx
64006074:	setne  al
64006077:	pop    edi
64006078:	pop    esi
64006079:	pop    ebp
6400607a:	pop    ebx
6400607b:	ret    0x10
6400607e:	int3   
6400607f:	int3   
64006080:	push   0xffffffff
64006082:	push   0x64022d1e
64006087:	mov    eax,fs:0x0
6400608d:	push   eax
6400608e:	mov    eax,ds:0x6402d09c
64006093:	xor    eax,esp
64006095:	push   eax
64006096:	lea    eax,[esp+0x4]
6400609a:	mov    fs:0x0,eax
640060a0:	test   BYTE PTR ds:0x64031340,0x1
640060a7:	jne    0x640060f9
640060a9:	or     DWORD PTR ds:0x64031340,0x1
640060b0:	mov    ecx,0x64031324
640060b5:	mov    DWORD PTR [esp+0xc],0x0
640060bd:	call   0x640087f0
640060c2:	mov    ds:0x64031328,eax
640060c7:	mov    BYTE PTR [eax+0x45],0x1
640060cb:	mov    eax,ds:0x64031328
640060d0:	mov    DWORD PTR [eax+0x4],eax
640060d3:	mov    eax,ds:0x64031328
640060d8:	mov    DWORD PTR [eax],eax
640060da:	mov    eax,ds:0x64031328
640060df:	mov    DWORD PTR [eax+0x8],eax
640060e2:	push   0x640240e0
640060e7:	mov    DWORD PTR ds:0x6403132c,0x0
640060f1:	call   0x64012cbf
640060f6:	add    esp,0x4
640060f9:	mov    eax,0x64031324
640060fe:	mov    ecx,DWORD PTR [esp+0x4]
64006102:	mov    DWORD PTR fs:0x0,ecx
64006109:	pop    ecx
6400610a:	add    esp,0xc
6400610d:	ret    
6400610e:	int3   
6400610f:	int3   
64006110:	push   0xffffffff
64006112:	push   0x64022898
64006117:	mov    eax,fs:0x0
6400611d:	push   eax
6400611e:	push   ecx
6400611f:	push   ebx
64006120:	push   ebp
64006121:	push   esi
64006122:	push   edi
64006123:	mov    eax,ds:0x6402d09c
64006128:	xor    eax,esp
6400612a:	push   eax
6400612b:	lea    eax,[esp+0x18]
6400612f:	mov    fs:0x0,eax
64006135:	mov    esi,DWORD PTR [esp+0x28]
64006139:	xor    eax,eax
6400613b:	mov    DWORD PTR [esp+0x14],eax
6400613f:	mov    DWORD PTR [esp+0x20],eax
64006143:	push   0xffffffff
64006145:	mov    DWORD PTR [esi+0x14],eax
64006148:	mov    DWORD PTR [esi+0x18],0xf
6400614f:	lea    ebp,[esi+0x4]
64006152:	push   eax
64006153:	mov    BYTE PTR [ebp+0x0],al
64006156:	lea    eax,[esp+0x34]
6400615a:	push   eax
6400615b:	mov    ecx,esi
6400615d:	call   0x64001780
64006162:	mov    eax,DWORD PTR [esi+0x14]
64006165:	mov    edi,0x1
6400616a:	cmp    eax,edi
6400616c:	jbe    0x640061ad
6400616e:	cmp    edi,eax
64006170:	jbe    0x64006177
64006172:	call   0x640126e8
64006177:	cmp    DWORD PTR [esi+0x18],0x10
6400617b:	jb     0x64006182
6400617d:	mov    ebx,DWORD PTR [ebp+0x0]
64006180:	jmp    0x64006184
64006182:	mov    ebx,ebp
64006184:	lea    ecx,[edi-0x1]
64006187:	cmp    ecx,DWORD PTR [esi+0x14]
6400618a:	jbe    0x64006191
6400618c:	call   0x640126e8
64006191:	cmp    DWORD PTR [esi+0x18],0x10
64006195:	jb     0x6400619c
64006197:	mov    eax,DWORD PTR [ebp+0x0]
6400619a:	jmp    0x6400619e
6400619c:	mov    eax,ebp
6400619e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
640061a2:	xor    BYTE PTR [ebx+edi*1],dl
640061a5:	add    edi,0x1
640061a8:	cmp    edi,DWORD PTR [esi+0x14]
640061ab:	jb     0x64006177
640061ad:	cmp    DWORD PTR [esp+0x44],0x10
640061b2:	jb     0x640061c1
640061b4:	mov    eax,DWORD PTR [esp+0x30]
640061b8:	push   eax
640061b9:	call   0x64012332
640061be:	add    esp,0x4
640061c1:	mov    eax,esi
640061c3:	mov    ecx,DWORD PTR [esp+0x18]
640061c7:	mov    DWORD PTR fs:0x0,ecx
640061ce:	pop    ecx
640061cf:	pop    edi
640061d0:	pop    esi
640061d1:	pop    ebp
640061d2:	pop    ebx
640061d3:	add    esp,0x10
640061d6:	ret    
640061d7:	int3   
640061d8:	int3   
640061d9:	int3   
640061da:	int3   
640061db:	int3   
640061dc:	int3   
640061dd:	int3   
640061de:	int3   
640061df:	int3   
640061e0:	push   0xffffffff
640061e2:	push   0x64022cee
640061e7:	mov    eax,fs:0x0
640061ed:	push   eax
640061ee:	mov    eax,ds:0x6402d09c
640061f3:	xor    eax,esp
640061f5:	push   eax
640061f6:	lea    eax,[esp+0x4]
640061fa:	mov    fs:0x0,eax
64006200:	test   BYTE PTR ds:0x6403133c,0x1
64006207:	jne    0x64006259
64006209:	or     DWORD PTR ds:0x6403133c,0x1
64006210:	mov    ecx,0x64031330
64006215:	mov    DWORD PTR [esp+0xc],0x0
6400621d:	call   0x640087f0
64006222:	mov    ds:0x64031334,eax
64006227:	mov    BYTE PTR [eax+0x45],0x1
6400622b:	mov    eax,ds:0x64031334
64006230:	mov    DWORD PTR [eax+0x4],eax
64006233:	mov    eax,ds:0x64031334
64006238:	mov    DWORD PTR [eax],eax
6400623a:	mov    eax,ds:0x64031334
6400623f:	mov    DWORD PTR [eax+0x8],eax
64006242:	push   0x64024090
64006247:	mov    DWORD PTR ds:0x64031338,0x0
64006251:	call   0x64012cbf
64006256:	add    esp,0x4
64006259:	mov    eax,0x64031330
6400625e:	mov    ecx,DWORD PTR [esp+0x4]
64006262:	mov    DWORD PTR fs:0x0,ecx
64006269:	pop    ecx
6400626a:	add    esp,0xc
6400626d:	ret    
6400626e:	int3   
6400626f:	int3   
64006270:	push   0xffffffff
64006272:	push   0x64022868
64006277:	mov    eax,fs:0x0
6400627d:	push   eax
6400627e:	push   ecx
6400627f:	push   ebx
64006280:	push   ebp
64006281:	push   esi
64006282:	push   edi
64006283:	mov    eax,ds:0x6402d09c
64006288:	xor    eax,esp
6400628a:	push   eax
6400628b:	lea    eax,[esp+0x18]
6400628f:	mov    fs:0x0,eax
64006295:	mov    esi,DWORD PTR [esp+0x28]
64006299:	xor    eax,eax
6400629b:	mov    DWORD PTR [esp+0x14],eax
6400629f:	mov    DWORD PTR [esp+0x20],eax
640062a3:	push   0xffffffff
640062a5:	mov    DWORD PTR [esi+0x14],eax
640062a8:	mov    DWORD PTR [esi+0x18],0x7
640062af:	lea    ebp,[esi+0x4]
640062b2:	push   eax
640062b3:	mov    WORD PTR [ebp+0x0],ax
640062b7:	lea    eax,[esp+0x34]
640062bb:	push   eax
640062bc:	mov    ecx,esi
640062be:	call   0x64006f10
640062c3:	mov    eax,DWORD PTR [esi+0x14]
640062c6:	mov    edi,0x1
640062cb:	cmp    eax,edi
640062cd:	jbe    0x64006310
640062cf:	cmp    edi,eax
640062d1:	jbe    0x640062d8
640062d3:	call   0x640126e8
640062d8:	cmp    DWORD PTR [esi+0x18],0x8
640062dc:	jb     0x640062e3
640062de:	mov    ebx,DWORD PTR [ebp+0x0]
640062e1:	jmp    0x640062e5
640062e3:	mov    ebx,ebp
640062e5:	lea    ecx,[edi-0x1]
640062e8:	cmp    ecx,DWORD PTR [esi+0x14]
640062eb:	jbe    0x640062f2
640062ed:	call   0x640126e8
640062f2:	cmp    DWORD PTR [esi+0x18],0x8
640062f6:	jb     0x640062fd
640062f8:	mov    eax,DWORD PTR [ebp+0x0]
640062fb:	jmp    0x640062ff
640062fd:	mov    eax,ebp
640062ff:	mov    dx,WORD PTR [eax+edi*2-0x2]
64006304:	xor    WORD PTR [ebx+edi*2],dx
64006308:	add    edi,0x1
6400630b:	cmp    edi,DWORD PTR [esi+0x14]
6400630e:	jb     0x640062d8
64006310:	cmp    DWORD PTR [esp+0x44],0x8
64006315:	jb     0x64006324
64006317:	mov    eax,DWORD PTR [esp+0x30]
6400631b:	push   eax
6400631c:	call   0x64012332
64006321:	add    esp,0x4
64006324:	mov    eax,esi
64006326:	mov    ecx,DWORD PTR [esp+0x18]
6400632a:	mov    DWORD PTR fs:0x0,ecx
64006331:	pop    ecx
64006332:	pop    edi
64006333:	pop    esi
64006334:	pop    ebp
64006335:	pop    ebx
64006336:	add    esp,0x10
64006339:	ret    
6400633a:	int3   
6400633b:	int3   
6400633c:	int3   
6400633d:	int3   
6400633e:	int3   
6400633f:	int3   
64006340:	push   0xffffffff
64006342:	push   0x64022cb8
64006347:	mov    eax,fs:0x0
6400634d:	push   eax
6400634e:	sub    esp,0x44
64006351:	push   ebx
64006352:	push   ebp
64006353:	push   esi
64006354:	push   edi
64006355:	mov    eax,ds:0x6402d09c
6400635a:	xor    eax,esp
6400635c:	push   eax
6400635d:	lea    eax,[esp+0x58]
64006361:	mov    fs:0x0,eax
64006367:	mov    esi,ecx
64006369:	mov    ebp,DWORD PTR [esp+0x68]
6400636d:	xor    ebx,ebx
6400636f:	cmp    DWORD PTR [ebp+0x8],0x9249248
64006376:	jb     0x640063c1
64006378:	push   0x13
6400637a:	push   0x64028498
6400637f:	lea    ecx,[esp+0x1c]
64006383:	mov    DWORD PTR [esp+0x34],0xf
6400638b:	mov    DWORD PTR [esp+0x30],ebx
6400638f:	mov    BYTE PTR [esp+0x20],bl
64006393:	call   0x64001860
64006398:	lea    eax,[esp+0x14]
6400639c:	push   eax
6400639d:	lea    ecx,[esp+0x34]
640063a1:	mov    DWORD PTR [esp+0x64],ebx
640063a5:	call   0x64002cb0
640063aa:	push   0x6402ac70
640063af:	lea    ecx,[esp+0x34]
640063b3:	push   ecx
640063b4:	mov    DWORD PTR [esp+0x38],0x6402531c
640063bc:	call   0x6401277b
640063c1:	mov    edx,DWORD PTR [esp+0x74]
640063c5:	mov    eax,DWORD PTR [ebp+0x4]
640063c8:	push   ebx
640063c9:	push   edx
640063ca:	push   eax
640063cb:	push   esi
640063cc:	push   eax
640063cd:	call   0x64006c10
640063d2:	mov    ecx,DWORD PTR [ebp+0x4]
640063d5:	mov    edx,eax
640063d7:	mov    eax,0x1
640063dc:	add    DWORD PTR [ebp+0x8],eax
640063df:	cmp    esi,ecx
640063e1:	mov    DWORD PTR [esp+0x68],edx
640063e5:	jne    0x640063f4
640063e7:	mov    DWORD PTR [ecx+0x4],edx
640063ea:	mov    ecx,DWORD PTR [ebp+0x4]
640063ed:	mov    DWORD PTR [ecx],edx
640063ef:	mov    ecx,DWORD PTR [ebp+0x4]
640063f2:	jmp    0x64006412
640063f4:	cmp    BYTE PTR [esp+0x70],bl
640063f8:	je     0x64006407
640063fa:	mov    DWORD PTR [esi],edx
640063fc:	mov    ecx,DWORD PTR [ebp+0x4]
640063ff:	cmp    esi,DWORD PTR [ecx]
64006401:	jne    0x64006415
64006403:	mov    DWORD PTR [ecx],edx
64006405:	jmp    0x64006415
64006407:	mov    DWORD PTR [esi+0x8],edx
6400640a:	mov    ecx,DWORD PTR [ebp+0x4]
6400640d:	cmp    esi,DWORD PTR [ecx+0x8]
64006410:	jne    0x64006415
64006412:	mov    DWORD PTR [ecx+0x8],edx
64006415:	mov    esi,DWORD PTR [edx+0x4]
64006418:	cmp    BYTE PTR [esi+0x28],bl
6400641b:	lea    ecx,[edx+0x4]
6400641e:	jne    0x64006596
64006424:	mov    esi,DWORD PTR [ecx]
64006426:	mov    edi,DWORD PTR [esi+0x4]
64006429:	cmp    esi,DWORD PTR [edi]
6400642b:	jne    0x640064d7
64006431:	mov    edi,DWORD PTR [edi+0x8]
64006434:	cmp    BYTE PTR [edi+0x28],bl
64006437:	je     0x640064de
6400643d:	cmp    edx,DWORD PTR [esi+0x8]
64006440:	jne    0x6400647d
64006442:	mov    edx,esi
64006444:	mov    esi,DWORD PTR [edx+0x8]
64006447:	mov    ecx,DWORD PTR [esi]
64006449:	mov    DWORD PTR [edx+0x8],ecx
6400644c:	mov    ecx,DWORD PTR [esi]
6400644e:	cmp    BYTE PTR [ecx+0x29],bl
64006451:	jne    0x64006456
64006453:	mov    DWORD PTR [ecx+0x4],edx
64006456:	mov    edi,DWORD PTR [edx+0x4]
64006459:	lea    ecx,[edx+0x4]
6400645c:	mov    DWORD PTR [esi+0x4],edi
6400645f:	mov    edi,DWORD PTR [ebp+0x4]
64006462:	cmp    edx,DWORD PTR [edi+0x4]
64006465:	jne    0x6400646c
64006467:	mov    DWORD PTR [edi+0x4],esi
6400646a:	jmp    0x64006479
6400646c:	mov    edi,DWORD PTR [ecx]
6400646e:	cmp    edx,DWORD PTR [edi]
64006470:	jne    0x64006476
64006472:	mov    DWORD PTR [edi],esi
64006474:	jmp    0x64006479
64006476:	mov    DWORD PTR [edi+0x8],esi
64006479:	mov    DWORD PTR [esi],edx
6400647b:	mov    DWORD PTR [ecx],esi
6400647d:	mov    esi,DWORD PTR [ecx]
6400647f:	mov    BYTE PTR [esi+0x28],al
64006482:	mov    esi,DWORD PTR [ecx]
64006484:	mov    esi,DWORD PTR [esi+0x4]
64006487:	mov    BYTE PTR [esi+0x28],bl
6400648a:	mov    ecx,DWORD PTR [ecx]
6400648c:	mov    ecx,DWORD PTR [ecx+0x4]
6400648f:	mov    esi,DWORD PTR [ecx]
64006491:	mov    edi,DWORD PTR [esi+0x8]
64006494:	mov    DWORD PTR [ecx],edi
64006496:	mov    edi,DWORD PTR [esi+0x8]
64006499:	cmp    BYTE PTR [edi+0x29],bl
6400649c:	jne    0x640064a1
6400649e:	mov    DWORD PTR [edi+0x4],ecx
640064a1:	mov    edi,DWORD PTR [ecx+0x4]
640064a4:	mov    DWORD PTR [esi+0x4],edi
640064a7:	mov    edi,DWORD PTR [ebp+0x4]
640064aa:	cmp    ecx,DWORD PTR [edi+0x4]
640064ad:	jne    0x640064ba
640064af:	mov    DWORD PTR [edi+0x4],esi
640064b2:	mov    DWORD PTR [esi+0x8],ecx
640064b5:	jmp    0x64006580
640064ba:	mov    edi,DWORD PTR [ecx+0x4]
640064bd:	cmp    ecx,DWORD PTR [edi+0x8]
640064c0:	jne    0x640064cd
640064c2:	mov    DWORD PTR [edi+0x8],esi
640064c5:	mov    DWORD PTR [esi+0x8],ecx
640064c8:	jmp    0x64006580
640064cd:	mov    DWORD PTR [edi],esi
640064cf:	mov    DWORD PTR [esi+0x8],ecx
640064d2:	jmp    0x64006580
640064d7:	mov    edi,DWORD PTR [edi]
640064d9:	cmp    BYTE PTR [edi+0x28],bl
640064dc:	jne    0x640064f8
640064de:	mov    edx,esi
640064e0:	mov    BYTE PTR [edx+0x28],al
640064e3:	mov    BYTE PTR [edi+0x28],al
640064e6:	mov    edx,DWORD PTR [ecx]
640064e8:	mov    edx,DWORD PTR [edx+0x4]
640064eb:	mov    BYTE PTR [edx+0x28],bl
640064ee:	mov    ecx,DWORD PTR [ecx]
640064f0:	mov    edx,DWORD PTR [ecx+0x4]
640064f3:	jmp    0x64006583
640064f8:	cmp    edx,DWORD PTR [esi]
640064fa:	jne    0x64006539
640064fc:	mov    edx,esi
640064fe:	mov    esi,DWORD PTR [edx]
64006500:	mov    ecx,DWORD PTR [esi+0x8]
64006503:	mov    DWORD PTR [edx],ecx
64006505:	mov    ecx,DWORD PTR [esi+0x8]
64006508:	cmp    BYTE PTR [ecx+0x29],bl
6400650b:	jne    0x64006510
6400650d:	mov    DWORD PTR [ecx+0x4],edx
64006510:	mov    edi,DWORD PTR [edx+0x4]
64006513:	lea    ecx,[edx+0x4]
64006516:	mov    DWORD PTR [esi+0x4],edi
64006519:	mov    edi,DWORD PTR [ebp+0x4]
6400651c:	cmp    edx,DWORD PTR [edi+0x4]
6400651f:	jne    0x64006526
64006521:	mov    DWORD PTR [edi+0x4],esi
64006524:	jmp    0x64006534
64006526:	mov    edi,DWORD PTR [ecx]
64006528:	cmp    edx,DWORD PTR [edi+0x8]
6400652b:	jne    0x64006532
6400652d:	mov    DWORD PTR [edi+0x8],esi
64006530:	jmp    0x64006534
64006532:	mov    DWORD PTR [edi],esi
64006534:	mov    DWORD PTR [esi+0x8],edx
64006537:	mov    DWORD PTR [ecx],esi
64006539:	mov    esi,DWORD PTR [ecx]
6400653b:	mov    BYTE PTR [esi+0x28],al
6400653e:	mov    esi,DWORD PTR [ecx]
64006540:	mov    esi,DWORD PTR [esi+0x4]
64006543:	mov    BYTE PTR [esi+0x28],bl
64006546:	mov    ecx,DWORD PTR [ecx]
64006548:	mov    ecx,DWORD PTR [ecx+0x4]
6400654b:	mov    esi,DWORD PTR [ecx+0x8]
6400654e:	mov    edi,DWORD PTR [esi]
64006550:	mov    DWORD PTR [ecx+0x8],edi
64006553:	mov    edi,DWORD PTR [esi]
64006555:	cmp    BYTE PTR [edi+0x29],bl
64006558:	jne    0x6400655d
6400655a:	mov    DWORD PTR [edi+0x4],ecx
6400655d:	mov    edi,DWORD PTR [ecx+0x4]
64006560:	mov    DWORD PTR [esi+0x4],edi
64006563:	mov    edi,DWORD PTR [ebp+0x4]
64006566:	cmp    ecx,DWORD PTR [edi+0x4]
64006569:	jne    0x64006570
6400656b:	mov    DWORD PTR [edi+0x4],esi
6400656e:	jmp    0x6400657e
64006570:	mov    edi,DWORD PTR [ecx+0x4]
64006573:	cmp    ecx,DWORD PTR [edi]
64006575:	jne    0x6400657b
64006577:	mov    DWORD PTR [edi],esi
64006579:	jmp    0x6400657e
6400657b:	mov    DWORD PTR [edi+0x8],esi
6400657e:	mov    DWORD PTR [esi],ecx
64006580:	mov    DWORD PTR [ecx+0x4],esi
64006583:	mov    esi,DWORD PTR [edx+0x4]
64006586:	cmp    BYTE PTR [esi+0x28],bl
64006589:	lea    ecx,[edx+0x4]
6400658c:	je     0x64006424
64006592:	mov    edx,DWORD PTR [esp+0x68]
64006596:	mov    ecx,DWORD PTR [ebp+0x4]
64006599:	mov    ecx,DWORD PTR [ecx+0x4]
6400659c:	mov    BYTE PTR [ecx+0x28],al
6400659f:	mov    ecx,DWORD PTR [esp+0x6c]
640065a3:	mov    DWORD PTR [ecx+0x4],edx
640065a6:	mov    DWORD PTR [ecx],ebp
640065a8:	mov    eax,ecx
640065aa:	mov    ecx,DWORD PTR [esp+0x58]
640065ae:	mov    DWORD PTR fs:0x0,ecx
640065b5:	pop    ecx
640065b6:	pop    edi
640065b7:	pop    esi
640065b8:	pop    ebp
640065b9:	pop    ebx
640065ba:	add    esp,0x50
640065bd:	ret    0x10
640065c0:	push   ebp
640065c1:	mov    ebp,esp
640065c3:	and    esp,0xfffffff8
640065c6:	sub    esp,0xc
640065c9:	push   edi
640065ca:	mov    edi,eax
640065cc:	mov    eax,DWORD PTR [edi+0x4]
640065cf:	mov    ecx,DWORD PTR [eax]
640065d1:	push   eax
640065d2:	push   edi
640065d3:	push   ecx
640065d4:	push   edi
640065d5:	lea    eax,[esp+0x18]
640065d9:	push   eax
640065da:	call   0x64006a60
640065df:	mov    ecx,DWORD PTR [edi+0x4]
640065e2:	push   ecx
640065e3:	call   0x64012332
640065e8:	add    esp,0x4
640065eb:	xor    eax,eax
640065ed:	mov    DWORD PTR [edi+0x4],eax
640065f0:	mov    DWORD PTR [edi+0x8],eax
640065f3:	pop    edi
640065f4:	mov    esp,ebp
640065f6:	pop    ebp
640065f7:	ret    
640065f8:	int3   
640065f9:	int3   
640065fa:	int3   
640065fb:	int3   
640065fc:	int3   
640065fd:	int3   
640065fe:	int3   
640065ff:	int3   
64006600:	cmp    DWORD PTR [esi],0x0
64006603:	jne    0x6400660a
64006605:	call   0x640126e8
6400660a:	mov    eax,DWORD PTR [esi+0x4]
6400660d:	cmp    BYTE PTR [eax+0x29],0x0
64006611:	je     0x64006618
64006613:	jmp    0x640126e8
64006618:	mov    ecx,DWORD PTR [eax+0x8]
6400661b:	cmp    BYTE PTR [ecx+0x29],0x0
6400661f:	jne    0x6400663e
64006621:	mov    eax,DWORD PTR [ecx]
64006623:	cmp    BYTE PTR [eax+0x29],0x0
64006627:	jne    0x6400663a
64006629:	lea    esp,[esp+0x0]
64006630:	mov    ecx,eax
64006632:	mov    eax,DWORD PTR [ecx]
64006634:	cmp    BYTE PTR [eax+0x29],0x0
64006638:	je     0x64006630
6400663a:	mov    DWORD PTR [esi+0x4],ecx
6400663d:	ret    
6400663e:	mov    eax,DWORD PTR [eax+0x4]
64006641:	cmp    BYTE PTR [eax+0x29],0x0
64006645:	jne    0x6400665d
64006647:	mov    ecx,DWORD PTR [esi+0x4]
6400664a:	cmp    ecx,DWORD PTR [eax+0x8]
6400664d:	jne    0x6400665d
6400664f:	mov    DWORD PTR [esi+0x4],eax
64006652:	mov    edx,eax
64006654:	mov    eax,DWORD PTR [edx+0x4]
64006657:	cmp    BYTE PTR [eax+0x29],0x0
6400665b:	je     0x64006647
6400665d:	mov    DWORD PTR [esi+0x4],eax
64006660:	ret    
64006661:	int3   
64006662:	int3   
64006663:	int3   
64006664:	int3   
64006665:	int3   
64006666:	int3   
64006667:	int3   
64006668:	int3   
64006669:	int3   
6400666a:	int3   
6400666b:	int3   
6400666c:	int3   
6400666d:	int3   
6400666e:	int3   
6400666f:	int3   
64006670:	push   ebp
64006671:	mov    ebp,esp
64006673:	and    esp,0xfffffff8
64006676:	sub    esp,0x24
64006679:	push   ebx
6400667a:	push   esi
6400667b:	push   edi
6400667c:	mov    edi,ecx
6400667e:	mov    eax,DWORD PTR [edi+0x4]
64006681:	mov    esi,DWORD PTR [eax+0x4]
64006684:	cmp    BYTE PTR [esi+0x45],0x0
64006688:	mov    ecx,eax
6400668a:	mov    al,0x1
6400668c:	mov    DWORD PTR [esp+0x28],edi
64006690:	mov    DWORD PTR [esp+0x10],ecx
64006694:	mov    BYTE PTR [esp+0x18],al
64006698:	jne    0x64006738
6400669e:	mov    edx,DWORD PTR [ebp+0xc]
640066a1:	mov    eax,DWORD PTR [edx+0x14]
640066a4:	mov    ecx,DWORD PTR [edx+0x18]
640066a7:	mov    DWORD PTR [esp+0x20],eax
640066ab:	mov    DWORD PTR [esp+0x1c],eax
640066af:	mov    DWORD PTR [esp+0x24],ecx
640066b3:	jmp    0x640066bc
640066b5:	mov    edx,DWORD PTR [ebp+0xc]
640066b8:	mov    eax,DWORD PTR [esp+0x1c]
640066bc:	cmp    DWORD PTR [esi+0x24],0x10
640066c0:	mov    ebx,DWORD PTR [esi+0x20]
640066c3:	mov    DWORD PTR [esp+0x10],esi
640066c7:	jb     0x640066ce
640066c9:	mov    ecx,DWORD PTR [esi+0x10]
640066cc:	jmp    0x640066d1
640066ce:	lea    ecx,[esi+0x10]
640066d1:	mov    edi,DWORD PTR [esp+0x20]
640066d5:	cmp    eax,edi
640066d7:	mov    DWORD PTR [esp+0x14],ecx
640066db:	jae    0x640066df
640066dd:	mov    edi,eax
640066df:	cmp    edi,ebx
640066e1:	mov    ecx,edi
640066e3:	jb     0x640066e7
640066e5:	mov    ecx,ebx
640066e7:	cmp    DWORD PTR [esp+0x24],0x10
640066ec:	lea    eax,[edx+0x4]
640066ef:	jb     0x640066f3
640066f1:	mov    eax,DWORD PTR [eax]
640066f3:	mov    edx,DWORD PTR [esp+0x14]
640066f7:	push   ecx
640066f8:	push   edx
640066f9:	push   eax
640066fa:	call   0x64002c20
640066ff:	add    esp,0xc
64006702:	test   eax,eax
64006704:	jne    0x64006718
64006706:	cmp    edi,ebx
64006708:	jae    0x6400670f
6400670a:	or     eax,0xffffffff
6400670d:	jmp    0x64006716
6400670f:	xor    eax,eax
64006711:	cmp    edi,ebx
64006713:	setne  al
64006716:	test   eax,eax
64006718:	setl   al
6400671b:	test   al,al
6400671d:	mov    BYTE PTR [esp+0x18],al
64006721:	je     0x64006727
64006723:	mov    esi,DWORD PTR [esi]
64006725:	jmp    0x6400672a
64006727:	mov    esi,DWORD PTR [esi+0x8]
6400672a:	cmp    BYTE PTR [esi+0x45],0x0
6400672e:	je     0x640066b5
64006730:	mov    edi,DWORD PTR [esp+0x28]
64006734:	mov    ecx,DWORD PTR [esp+0x10]
64006738:	test   al,al
6400673a:	mov    esi,ecx
6400673c:	mov    DWORD PTR [esp+0x2c],esi
64006740:	mov    DWORD PTR [esp+0x28],edi
64006744:	je     0x64006789
64006746:	mov    eax,DWORD PTR [edi+0x4]
64006749:	cmp    ecx,DWORD PTR [eax]
6400674b:	jne    0x6400677c
6400674d:	mov    edx,DWORD PTR [ebp+0xc]
64006750:	push   edx
64006751:	push   ecx
64006752:	push   0x1
64006754:	lea    eax,[esp+0x34]
64006758:	push   eax
64006759:	mov    ecx,edi
6400675b:	call   0x64006cc0
64006760:	mov    ecx,eax
64006762:	mov    edx,DWORD PTR [ecx]
64006764:	mov    eax,DWORD PTR [ebp+0x8]
64006767:	mov    ecx,DWORD PTR [ecx+0x4]
6400676a:	mov    DWORD PTR [eax+0x4],ecx
6400676d:	mov    BYTE PTR [eax+0x8],0x1
64006771:	mov    DWORD PTR [eax],edx
64006773:	pop    edi
64006774:	pop    esi
64006775:	pop    ebx
64006776:	mov    esp,ebp
64006778:	pop    ebp
64006779:	ret    0x8
6400677c:	lea    ecx,[esp+0x28]
64006780:	call   0x64007fa0
64006785:	mov    esi,DWORD PTR [esp+0x2c]
64006789:	mov    ebx,DWORD PTR [ebp+0xc]
6400678c:	cmp    DWORD PTR [ebx+0x18],0x10
64006790:	mov    edx,DWORD PTR [ebx+0x14]
64006793:	lea    ecx,[esi+0xc]
64006796:	jb     0x6400679d
64006798:	mov    eax,DWORD PTR [ebx+0x4]
6400679b:	jmp    0x640067a0
6400679d:	lea    eax,[ebx+0x4]
640067a0:	push   edx
640067a1:	mov    edx,DWORD PTR [ecx+0x14]
640067a4:	push   eax
640067a5:	push   edx
640067a6:	push   0x0
640067a8:	call   0x64006010
640067ad:	test   eax,eax
640067af:	jge    0x640067e4
640067b1:	mov    eax,DWORD PTR [esp+0x10]
640067b5:	mov    ecx,DWORD PTR [esp+0x18]
640067b9:	push   ebx
640067ba:	push   eax
640067bb:	push   ecx
640067bc:	lea    edx,[esp+0x34]
640067c0:	push   edx
640067c1:	mov    ecx,edi
640067c3:	call   0x64006cc0
640067c8:	mov    ecx,eax
640067ca:	mov    edx,DWORD PTR [ecx]
640067cc:	mov    eax,DWORD PTR [ebp+0x8]
640067cf:	mov    ecx,DWORD PTR [ecx+0x4]
640067d2:	mov    DWORD PTR [eax+0x4],ecx
640067d5:	mov    BYTE PTR [eax+0x8],0x1
640067d9:	mov    DWORD PTR [eax],edx
640067db:	pop    edi
640067dc:	pop    esi
640067dd:	pop    ebx
640067de:	mov    esp,ebp
640067e0:	pop    ebp
640067e1:	ret    0x8
640067e4:	mov    eax,DWORD PTR [ebp+0x8]
640067e7:	mov    edx,DWORD PTR [esp+0x28]
640067eb:	pop    edi
640067ec:	mov    DWORD PTR [eax+0x4],esi
640067ef:	pop    esi
640067f0:	mov    BYTE PTR [eax+0x8],0x0
640067f4:	mov    DWORD PTR [eax],edx
640067f6:	pop    ebx
640067f7:	mov    esp,ebp
640067f9:	pop    ebp
640067fa:	ret    0x8
640067fd:	int3   
640067fe:	int3   
640067ff:	int3   
64006800:	sub    esp,0x18
64006803:	push   ebx
64006804:	mov    ebx,DWORD PTR [esp+0x24]
64006808:	push   esi
64006809:	push   edi
6400680a:	push   ebx
6400680b:	mov    esi,ecx
6400680d:	call   0x64007850
64006812:	test   esi,esi
64006814:	mov    edi,eax
64006816:	mov    DWORD PTR [esp+0x14],edi
6400681a:	jne    0x64006821
6400681c:	call   0x640126e8
64006821:	cmp    edi,DWORD PTR [esi+0x4]
64006824:	mov    DWORD PTR [esp+0x10],esi
64006828:	je     0x64006854
6400682a:	cmp    DWORD PTR [edi+0x24],0x10
6400682e:	mov    eax,DWORD PTR [edi+0x20]
64006831:	jb     0x64006838
64006833:	mov    edi,DWORD PTR [edi+0x10]
64006836:	jmp    0x6400683b
64006838:	add    edi,0x10
6400683b:	push   eax
6400683c:	mov    eax,DWORD PTR [ebx+0x14]
6400683f:	push   edi
64006840:	push   eax
64006841:	push   0x0
64006843:	mov    ecx,ebx
64006845:	call   0x64006010
6400684a:	test   eax,eax
6400684c:	jl     0x64006854
6400684e:	lea    ecx,[esp+0x10]
64006852:	jmp    0x64006863
64006854:	mov    ecx,DWORD PTR [esi+0x4]
64006857:	mov    DWORD PTR [esp+0x1c],ecx
6400685b:	mov    DWORD PTR [esp+0x18],esi
6400685f:	lea    ecx,[esp+0x18]
64006863:	mov    edx,DWORD PTR [ecx]
64006865:	mov    eax,DWORD PTR [esp+0x28]
64006869:	mov    ecx,DWORD PTR [ecx+0x4]
6400686c:	pop    edi
6400686d:	pop    esi
6400686e:	mov    DWORD PTR [eax],edx
64006870:	mov    DWORD PTR [eax+0x4],ecx
64006873:	pop    ebx
64006874:	add    esp,0x18
64006877:	ret    0x8
6400687a:	int3   
6400687b:	int3   
6400687c:	int3   
6400687d:	int3   
6400687e:	int3   
6400687f:	int3   
64006880:	push   esi
64006881:	mov    esi,ecx
64006883:	cmp    DWORD PTR [esi+0x18],0x8
64006887:	jb     0x64006895
64006889:	mov    eax,DWORD PTR [esi+0x4]
6400688c:	push   eax
6400688d:	call   0x64012332
64006892:	add    esp,0x4
64006895:	xor    eax,eax
64006897:	mov    DWORD PTR [esi+0x18],0x7
6400689e:	mov    DWORD PTR [esi+0x14],eax
640068a1:	mov    WORD PTR [esi+0x4],ax
640068a5:	pop    esi
640068a6:	ret    
640068a7:	int3   
640068a8:	int3   
640068a9:	int3   
640068aa:	int3   
640068ab:	int3   
640068ac:	int3   
640068ad:	int3   
640068ae:	int3   
640068af:	int3   
640068b0:	push   ebp
640068b1:	mov    ebp,esp
640068b3:	and    esp,0xfffffff8
640068b6:	sub    esp,0x14
640068b9:	mov    eax,DWORD PTR [ecx+0x4]
640068bc:	push   ebx
640068bd:	push   esi
640068be:	mov    esi,DWORD PTR [eax+0x4]
640068c1:	cmp    BYTE PTR [esi+0x45],0x0
640068c5:	mov    ebx,eax
640068c7:	mov    al,0x1
640068c9:	push   edi
640068ca:	mov    edi,DWORD PTR [ebp+0xc]
640068cd:	mov    DWORD PTR [esp+0x14],ecx
640068d1:	mov    BYTE PTR [esp+0x10],al
640068d5:	jne    0x64006917
640068d7:	cmp    DWORD PTR [esi+0x24],0x8
640068db:	mov    ecx,DWORD PTR [esi+0x20]
640068de:	mov    ebx,esi
640068e0:	jb     0x640068e7
640068e2:	mov    eax,DWORD PTR [esi+0x10]
640068e5:	jmp    0x640068ea
640068e7:	lea    eax,[esi+0x10]
640068ea:	push   ecx
640068eb:	push   eax
640068ec:	mov    eax,DWORD PTR [edi+0x14]
640068ef:	push   eax
640068f0:	push   0x0
640068f2:	mov    ecx,edi
640068f4:	call   0x64008db0
640068f9:	test   eax,eax
640068fb:	setl   al
640068fe:	test   al,al
64006900:	mov    BYTE PTR [esp+0x10],al
64006904:	je     0x6400690a
64006906:	mov    esi,DWORD PTR [esi]
64006908:	jmp    0x6400690d
6400690a:	mov    esi,DWORD PTR [esi+0x8]
6400690d:	cmp    BYTE PTR [esi+0x45],0x0
64006911:	je     0x640068d7
64006913:	mov    ecx,DWORD PTR [esp+0x14]
64006917:	test   al,al
64006919:	mov    esi,ebx
6400691b:	mov    DWORD PTR [esp+0x1c],esi
6400691f:	mov    DWORD PTR [esp+0x18],ecx
64006923:	je     0x64006963
64006925:	mov    edx,DWORD PTR [ecx+0x4]
64006928:	cmp    ebx,DWORD PTR [edx]
6400692a:	jne    0x64006956
6400692c:	push   edi
6400692d:	push   ebx
6400692e:	push   0x1
64006930:	lea    eax,[esp+0x24]
64006934:	push   eax
64006935:	call   0x640070e0
6400693a:	mov    ecx,eax
6400693c:	mov    edx,DWORD PTR [ecx]
6400693e:	mov    eax,DWORD PTR [ebp+0x8]
64006941:	mov    ecx,DWORD PTR [ecx+0x4]
64006944:	mov    DWORD PTR [eax+0x4],ecx
64006947:	mov    BYTE PTR [eax+0x8],0x1
6400694b:	mov    DWORD PTR [eax],edx
6400694d:	pop    edi
6400694e:	pop    esi
6400694f:	pop    ebx
64006950:	mov    esp,ebp
64006952:	pop    ebp
64006953:	ret    0x8
64006956:	lea    ecx,[esp+0x18]
6400695a:	call   0x64007fa0
6400695f:	mov    esi,DWORD PTR [esp+0x1c]
64006963:	cmp    DWORD PTR [edi+0x18],0x8
64006967:	mov    edx,DWORD PTR [edi+0x14]
6400696a:	lea    ecx,[esi+0xc]
6400696d:	jb     0x64006974
6400696f:	mov    eax,DWORD PTR [edi+0x4]
64006972:	jmp    0x64006977
64006974:	lea    eax,[edi+0x4]
64006977:	push   edx
64006978:	mov    edx,DWORD PTR [ecx+0x14]
6400697b:	push   eax
6400697c:	push   edx
6400697d:	push   0x0
6400697f:	call   0x64008db0
64006984:	test   eax,eax
64006986:	jge    0x6400699a
64006988:	mov    eax,DWORD PTR [esp+0x10]
6400698c:	push   edi
6400698d:	push   ebx
6400698e:	lea    ecx,[esp+0x20]
64006992:	push   eax
64006993:	push   ecx
64006994:	mov    ecx,DWORD PTR [esp+0x24]
64006998:	jmp    0x64006935
6400699a:	mov    eax,DWORD PTR [ebp+0x8]
6400699d:	mov    edx,DWORD PTR [esp+0x18]
640069a1:	pop    edi
640069a2:	mov    DWORD PTR [eax+0x4],esi
640069a5:	pop    esi
640069a6:	mov    BYTE PTR [eax+0x8],0x0
640069aa:	mov    DWORD PTR [eax],edx
640069ac:	pop    ebx
640069ad:	mov    esp,ebp
640069af:	pop    ebp
640069b0:	ret    0x8
640069b3:	int3   
640069b4:	int3   
640069b5:	int3   
640069b6:	int3   
640069b7:	int3   
640069b8:	int3   
640069b9:	int3   
640069ba:	int3   
640069bb:	int3   
640069bc:	int3   
640069bd:	int3   
640069be:	int3   
640069bf:	int3   
640069c0:	sub    esp,0x18
640069c3:	push   ebx
640069c4:	mov    ebx,DWORD PTR [esp+0x24]
640069c8:	push   esi
640069c9:	push   edi
640069ca:	push   ebx
640069cb:	mov    esi,ecx
640069cd:	call   0x64007a80
640069d2:	test   esi,esi
640069d4:	mov    edi,eax
640069d6:	mov    DWORD PTR [esp+0x14],edi
640069da:	jne    0x640069e1
640069dc:	call   0x640126e8
640069e1:	cmp    edi,DWORD PTR [esi+0x4]
640069e4:	mov    DWORD PTR [esp+0x10],esi
640069e8:	je     0x64006a14
640069ea:	cmp    DWORD PTR [edi+0x24],0x8
640069ee:	mov    eax,DWORD PTR [edi+0x20]
640069f1:	jb     0x640069f8
640069f3:	mov    edi,DWORD PTR [edi+0x10]
640069f6:	jmp    0x640069fb
640069f8:	add    edi,0x10
640069fb:	push   eax
640069fc:	mov    eax,DWORD PTR [ebx+0x14]
640069ff:	push   edi
64006a00:	push   eax
64006a01:	push   0x0
64006a03:	mov    ecx,ebx
64006a05:	call   0x64008db0
64006a0a:	test   eax,eax
64006a0c:	jl     0x64006a14
64006a0e:	lea    ecx,[esp+0x10]
64006a12:	jmp    0x64006a23
64006a14:	mov    ecx,DWORD PTR [esi+0x4]
64006a17:	mov    DWORD PTR [esp+0x1c],ecx
64006a1b:	mov    DWORD PTR [esp+0x18],esi
64006a1f:	lea    ecx,[esp+0x18]
64006a23:	mov    edx,DWORD PTR [ecx]
64006a25:	mov    eax,DWORD PTR [esp+0x28]
64006a29:	mov    ecx,DWORD PTR [ecx+0x4]
64006a2c:	pop    edi
64006a2d:	pop    esi
64006a2e:	mov    DWORD PTR [eax],edx
64006a30:	mov    DWORD PTR [eax+0x4],ecx
64006a33:	pop    ebx
64006a34:	add    esp,0x18
64006a37:	ret    0x8
64006a3a:	int3   
64006a3b:	int3   
64006a3c:	int3   
64006a3d:	int3   
64006a3e:	int3   
64006a3f:	int3   
64006a40:	mov    eax,DWORD PTR [esp+0x4]
64006a44:	push   esi
64006a45:	push   eax
64006a46:	mov    esi,ecx
64006a48:	call   0x64002de0
64006a4d:	mov    DWORD PTR [esi],0x6402531c
64006a53:	mov    eax,esi
64006a55:	pop    esi
64006a56:	ret    0x4
64006a59:	int3   
64006a5a:	int3   
64006a5b:	int3   
64006a5c:	int3   
64006a5d:	int3   
64006a5e:	int3   
64006a5f:	int3   
64006a60:	mov    eax,DWORD PTR [edi+0x4]
64006a63:	sub    esp,0xc
64006a66:	push   ebx
64006a67:	mov    ebx,DWORD PTR [eax]
64006a69:	push   ebp
64006a6a:	mov    ebp,DWORD PTR [esp+0x1c]
64006a6e:	test   ebp,ebp
64006a70:	push   esi
64006a71:	je     0x64006a77
64006a73:	cmp    ebp,edi
64006a75:	je     0x64006a7c
64006a77:	call   0x640126e8
64006a7c:	mov    esi,DWORD PTR [esp+0x24]
64006a80:	cmp    esi,ebx
64006a82:	jne    0x64006ae0
64006a84:	mov    eax,DWORD PTR [esp+0x28]
64006a88:	test   eax,eax
64006a8a:	mov    ebx,DWORD PTR [edi+0x4]
64006a8d:	je     0x64006a93
64006a8f:	cmp    eax,edi
64006a91:	je     0x64006a98
64006a93:	call   0x640126e8
64006a98:	cmp    DWORD PTR [esp+0x2c],ebx
64006a9c:	jne    0x64006ae0
64006a9e:	mov    ecx,DWORD PTR [edi+0x4]
64006aa1:	mov    edx,DWORD PTR [ecx+0x4]
64006aa4:	push   edx
64006aa5:	mov    ecx,edi
64006aa7:	call   0x64007bd0
64006aac:	mov    eax,DWORD PTR [edi+0x4]
64006aaf:	mov    DWORD PTR [eax+0x4],eax
64006ab2:	mov    eax,DWORD PTR [edi+0x4]
64006ab5:	mov    DWORD PTR [edi+0x8],0x0
64006abc:	mov    DWORD PTR [eax],eax
64006abe:	mov    eax,DWORD PTR [edi+0x4]
64006ac1:	mov    DWORD PTR [eax+0x8],eax
64006ac4:	mov    eax,DWORD PTR [edi+0x4]
64006ac7:	mov    ecx,DWORD PTR [eax]
64006ac9:	mov    eax,DWORD PTR [esp+0x1c]
64006acd:	mov    DWORD PTR [eax+0x4],ecx
64006ad0:	mov    DWORD PTR [eax],edi
64006ad2:	pop    esi
64006ad3:	pop    ebp
64006ad4:	pop    ebx
64006ad5:	add    esp,0xc
64006ad8:	ret    0x14
64006adb:	jmp    0x64006ae0
64006add:	lea    ecx,[ecx+0x0]
64006ae0:	test   ebp,ebp
64006ae2:	je     0x64006aea
64006ae4:	cmp    ebp,DWORD PTR [esp+0x28]
64006ae8:	je     0x64006aef
64006aea:	call   0x640126e8
64006aef:	cmp    esi,DWORD PTR [esp+0x2c]
64006af3:	je     0x64006b5c
64006af5:	test   ebp,ebp
64006af7:	mov    DWORD PTR [esp+0x24],esi
64006afb:	jne    0x64006b02
64006afd:	call   0x640126e8
64006b02:	cmp    BYTE PTR [esi+0x29],0x0
64006b06:	je     0x64006b0f
64006b08:	call   0x640126e8
64006b0d:	jmp    0x64006b49
64006b0f:	mov    eax,DWORD PTR [esi+0x8]
64006b12:	cmp    BYTE PTR [eax+0x29],0x0
64006b16:	jne    0x64006b2e
64006b18:	mov    esi,eax
64006b1a:	mov    eax,DWORD PTR [esi]
64006b1c:	cmp    BYTE PTR [eax+0x29],0x0
64006b20:	jne    0x64006b49
64006b22:	mov    esi,eax
64006b24:	mov    eax,DWORD PTR [esi]
64006b26:	cmp    BYTE PTR [eax+0x29],0x0
64006b2a:	je     0x64006b22
64006b2c:	jmp    0x64006b49
64006b2e:	mov    eax,DWORD PTR [esi+0x4]
64006b31:	cmp    BYTE PTR [eax+0x29],0x0
64006b35:	jne    0x64006b47
64006b37:	cmp    esi,DWORD PTR [eax+0x8]
64006b3a:	jne    0x64006b47
64006b3c:	mov    esi,eax
64006b3e:	mov    eax,DWORD PTR [eax+0x4]
64006b41:	cmp    BYTE PTR [eax+0x29],0x0
64006b45:	je     0x64006b37
64006b47:	mov    esi,eax
64006b49:	mov    edx,DWORD PTR [esp+0x24]
64006b4d:	push   edx
64006b4e:	push   ebp
64006b4f:	lea    eax,[esp+0x18]
64006b53:	push   eax
64006b54:	push   edi
64006b55:	call   0x64007330
64006b5a:	jmp    0x64006ae0
64006b5c:	mov    eax,DWORD PTR [esp+0x1c]
64006b60:	mov    DWORD PTR [eax+0x4],esi
64006b63:	pop    esi
64006b64:	mov    DWORD PTR [eax],ebp
64006b66:	pop    ebp
64006b67:	pop    ebx
64006b68:	add    esp,0xc
64006b6b:	ret    0x14
64006b6e:	int3   
64006b6f:	int3   
64006b70:	mov    eax,DWORD PTR [ecx+0x8]
64006b73:	mov    edx,DWORD PTR [eax]
64006b75:	mov    DWORD PTR [ecx+0x8],edx
64006b78:	mov    edx,DWORD PTR [eax]
64006b7a:	cmp    BYTE PTR [edx+0x29],0x0
64006b7e:	jne    0x64006b83
64006b80:	mov    DWORD PTR [edx+0x4],ecx
64006b83:	mov    edx,DWORD PTR [ecx+0x4]
64006b86:	mov    DWORD PTR [eax+0x4],edx
64006b89:	mov    edx,DWORD PTR [esp+0x4]
64006b8d:	mov    edx,DWORD PTR [edx+0x4]
64006b90:	cmp    ecx,DWORD PTR [edx+0x4]
64006b93:	jne    0x64006ba0
64006b95:	mov    DWORD PTR [edx+0x4],eax
64006b98:	mov    DWORD PTR [eax],ecx
64006b9a:	mov    DWORD PTR [ecx+0x4],eax
64006b9d:	ret    0x4
64006ba0:	mov    edx,DWORD PTR [ecx+0x4]
64006ba3:	cmp    ecx,DWORD PTR [edx]
64006ba5:	jne    0x64006bb1
64006ba7:	mov    DWORD PTR [edx],eax
64006ba9:	mov    DWORD PTR [eax],ecx
64006bab:	mov    DWORD PTR [ecx+0x4],eax
64006bae:	ret    0x4
64006bb1:	mov    DWORD PTR [edx+0x8],eax
64006bb4:	mov    DWORD PTR [eax],ecx
64006bb6:	mov    DWORD PTR [ecx+0x4],eax
64006bb9:	ret    0x4
64006bbc:	int3   
64006bbd:	int3   
64006bbe:	int3   
64006bbf:	int3   
64006bc0:	mov    eax,DWORD PTR [ecx]
64006bc2:	mov    edx,DWORD PTR [eax+0x8]
64006bc5:	mov    DWORD PTR [ecx],edx
64006bc7:	mov    edx,DWORD PTR [eax+0x8]
64006bca:	cmp    BYTE PTR [edx+0x29],0x0
64006bce:	jne    0x64006bd3
64006bd0:	mov    DWORD PTR [edx+0x4],ecx
64006bd3:	mov    edx,DWORD PTR [ecx+0x4]
64006bd6:	mov    DWORD PTR [eax+0x4],edx
64006bd9:	mov    edx,DWORD PTR [esp+0x4]
64006bdd:	mov    edx,DWORD PTR [edx+0x4]
64006be0:	cmp    ecx,DWORD PTR [edx+0x4]
64006be3:	jne    0x64006bf1
64006be5:	mov    DWORD PTR [edx+0x4],eax
64006be8:	mov    DWORD PTR [eax+0x8],ecx
64006beb:	mov    DWORD PTR [ecx+0x4],eax
64006bee:	ret    0x4
64006bf1:	mov    edx,DWORD PTR [ecx+0x4]
64006bf4:	cmp    ecx,DWORD PTR [edx+0x8]
64006bf7:	jne    0x64006c05
64006bf9:	mov    DWORD PTR [edx+0x8],eax
64006bfc:	mov    DWORD PTR [eax+0x8],ecx
64006bff:	mov    DWORD PTR [ecx+0x4],eax
64006c02:	ret    0x4
64006c05:	mov    DWORD PTR [edx],eax
64006c07:	mov    DWORD PTR [eax+0x8],ecx
64006c0a:	mov    DWORD PTR [ecx+0x4],eax
64006c0d:	ret    0x4
64006c10:	push   ebp
64006c11:	mov    ebp,esp
64006c13:	push   0xffffffff
64006c15:	push   0x64022841
64006c1a:	mov    eax,fs:0x0
64006c20:	push   eax
64006c21:	sub    esp,0xc
64006c24:	push   ebx
64006c25:	push   esi
64006c26:	push   edi
64006c27:	mov    eax,ds:0x6402d09c
64006c2c:	xor    eax,ebp
64006c2e:	push   eax
64006c2f:	lea    eax,[ebp-0xc]
64006c32:	mov    fs:0x0,eax
64006c38:	mov    DWORD PTR [ebp-0x10],esp
64006c3b:	push   0x2c
64006c3d:	call   0x64012711
64006c42:	mov    esi,eax
64006c44:	xor    ebx,ebx
64006c46:	mov    DWORD PTR [ebp-0x4],ebx
64006c49:	add    esp,0x4
64006c4c:	mov    DWORD PTR [ebp-0x14],esi
64006c4f:	mov    DWORD PTR [ebp-0x18],esi
64006c52:	cmp    esi,ebx
64006c54:	mov    BYTE PTR [ebp-0x4],0x1
64006c58:	je     0x64006c90
64006c5a:	mov    eax,DWORD PTR [ebp+0x8]
64006c5d:	mov    ecx,DWORD PTR [ebp+0xc]
64006c60:	mov    edx,DWORD PTR [ebp+0x10]
64006c63:	mov    DWORD PTR [esi],eax
64006c65:	mov    eax,DWORD PTR [ebp+0x14]
64006c68:	mov    DWORD PTR [esi+0x4],ecx
64006c6b:	push   0xffffffff
64006c6d:	lea    ecx,[esi+0xc]
64006c70:	mov    DWORD PTR [esi+0x8],edx
64006c73:	push   ebx
64006c74:	mov    DWORD PTR [ecx+0x18],0xf
64006c7b:	mov    DWORD PTR [ecx+0x14],ebx
64006c7e:	push   eax
64006c7f:	mov    BYTE PTR [ecx+0x4],bl
64006c82:	call   0x64001780
64006c87:	mov    cl,BYTE PTR [ebp+0x18]
64006c8a:	mov    BYTE PTR [esi+0x28],cl
64006c8d:	mov    BYTE PTR [esi+0x29],bl
64006c90:	mov    eax,esi
64006c92:	mov    ecx,DWORD PTR [ebp-0xc]
64006c95:	mov    DWORD PTR fs:0x0,ecx
64006c9c:	pop    ecx
64006c9d:	pop    edi
64006c9e:	pop    esi
64006c9f:	pop    ebx
64006ca0:	mov    esp,ebp
64006ca2:	pop    ebp
64006ca3:	ret    0x14
64006ca6:	mov    edx,DWORD PTR [ebp-0x14]
64006ca9:	push   edx
64006caa:	call   0x64012332
64006caf:	add    esp,0x4
64006cb2:	xor    ebx,ebx
64006cb4:	push   ebx
64006cb5:	push   ebx
64006cb6:	call   0x6401277b
64006cbb:	int3   
64006cbc:	int3   
64006cbd:	int3   
64006cbe:	int3   
64006cbf:	int3   
64006cc0:	push   ebp
64006cc1:	mov    ebp,esp
64006cc3:	and    esp,0xfffffff8
64006cc6:	push   0xffffffff
64006cc8:	push   0x64022c88
64006ccd:	mov    eax,fs:0x0
64006cd3:	push   eax
64006cd4:	sub    esp,0x50
64006cd7:	push   ebx
64006cd8:	push   esi
64006cd9:	push   edi
64006cda:	mov    eax,ds:0x6402d09c
64006cdf:	xor    eax,esp
64006ce1:	push   eax
64006ce2:	lea    eax,[esp+0x60]
64006ce6:	mov    fs:0x0,eax
64006cec:	mov    edi,ecx
64006cee:	xor    ebx,ebx
64006cf0:	cmp    DWORD PTR [edi+0x8],0x4924923
64006cf7:	jb     0x64006d42
64006cf9:	push   0x13
64006cfb:	push   0x64028498
64006d00:	lea    ecx,[esp+0x20]
64006d04:	mov    DWORD PTR [esp+0x38],0xf
64006d0c:	mov    DWORD PTR [esp+0x34],ebx
64006d10:	mov    BYTE PTR [esp+0x24],bl
64006d14:	call   0x64001860
64006d19:	lea    eax,[esp+0x18]
64006d1d:	push   eax
64006d1e:	lea    ecx,[esp+0x38]
64006d22:	mov    DWORD PTR [esp+0x6c],ebx
64006d26:	call   0x64002cb0
64006d2b:	push   0x6402ac70
64006d30:	lea    ecx,[esp+0x38]
64006d34:	push   ecx
64006d35:	mov    DWORD PTR [esp+0x3c],0x6402531c
64006d3d:	call   0x6401277b
64006d42:	mov    edx,DWORD PTR [ebp+0x14]
64006d45:	mov    eax,DWORD PTR [edi+0x4]
64006d48:	mov    esi,DWORD PTR [ebp+0x10]
64006d4b:	push   ebx
64006d4c:	push   edx
64006d4d:	push   eax
64006d4e:	push   esi
64006d4f:	push   eax
64006d50:	call   0x64007940
64006d55:	add    DWORD PTR [edi+0x8],0x1
64006d59:	mov    ecx,eax
64006d5b:	mov    eax,DWORD PTR [edi+0x4]
64006d5e:	cmp    esi,eax
64006d60:	mov    DWORD PTR [esp+0x14],ecx
64006d64:	jne    0x64006d76
64006d66:	mov    DWORD PTR [eax+0x4],ecx
64006d69:	mov    eax,DWORD PTR [edi+0x4]
64006d6c:	mov    DWORD PTR [eax],ecx
64006d6e:	mov    edx,DWORD PTR [edi+0x4]
64006d71:	mov    DWORD PTR [edx+0x8],ecx
64006d74:	jmp    0x64006d96
64006d76:	cmp    BYTE PTR [ebp+0xc],bl
64006d79:	je     0x64006d88
64006d7b:	mov    DWORD PTR [esi],ecx
64006d7d:	mov    eax,DWORD PTR [edi+0x4]
64006d80:	cmp    esi,DWORD PTR [eax]
64006d82:	jne    0x64006d96
64006d84:	mov    DWORD PTR [eax],ecx
64006d86:	jmp    0x64006d96
64006d88:	mov    DWORD PTR [esi+0x8],ecx
64006d8b:	mov    eax,DWORD PTR [edi+0x4]
64006d8e:	cmp    esi,DWORD PTR [eax+0x8]
64006d91:	jne    0x64006d96
64006d93:	mov    DWORD PTR [eax+0x8],ecx
64006d96:	mov    edx,DWORD PTR [ecx+0x4]
64006d99:	cmp    BYTE PTR [edx+0x44],bl
64006d9c:	lea    eax,[ecx+0x4]
64006d9f:	mov    esi,ecx
64006da1:	jne    0x64006ee2
64006da7:	mov    ecx,DWORD PTR [eax]
64006da9:	mov    edx,DWORD PTR [ecx+0x4]
64006dac:	cmp    ecx,DWORD PTR [edx]
64006dae:	jne    0x64006e55
64006db4:	mov    edx,DWORD PTR [edx+0x8]
64006db7:	cmp    BYTE PTR [edx+0x44],bl
64006dba:	je     0x64006e5c
64006dc0:	cmp    esi,DWORD PTR [ecx+0x8]
64006dc3:	jne    0x64006e00
64006dc5:	mov    esi,ecx
64006dc7:	mov    ecx,DWORD PTR [esi+0x8]
64006dca:	mov    eax,DWORD PTR [ecx]
64006dcc:	mov    DWORD PTR [esi+0x8],eax
64006dcf:	mov    eax,DWORD PTR [ecx]
64006dd1:	cmp    BYTE PTR [eax+0x45],bl
64006dd4:	jne    0x64006dd9
64006dd6:	mov    DWORD PTR [eax+0x4],esi
64006dd9:	mov    edx,DWORD PTR [esi+0x4]
64006ddc:	lea    eax,[esi+0x4]
64006ddf:	mov    DWORD PTR [ecx+0x4],edx
64006de2:	mov    edx,DWORD PTR [edi+0x4]
64006de5:	cmp    esi,DWORD PTR [edx+0x4]
64006de8:	jne    0x64006def
64006dea:	mov    DWORD PTR [edx+0x4],ecx
64006ded:	jmp    0x64006dfc
64006def:	mov    edx,DWORD PTR [eax]
64006df1:	cmp    esi,DWORD PTR [edx]
64006df3:	jne    0x64006df9
64006df5:	mov    DWORD PTR [edx],ecx
64006df7:	jmp    0x64006dfc
64006df9:	mov    DWORD PTR [edx+0x8],ecx
64006dfc:	mov    DWORD PTR [ecx],esi
64006dfe:	mov    DWORD PTR [eax],ecx
64006e00:	mov    ecx,DWORD PTR [eax]
64006e02:	mov    BYTE PTR [ecx+0x44],0x1
64006e06:	mov    edx,DWORD PTR [eax]
64006e08:	mov    ecx,DWORD PTR [edx+0x4]
64006e0b:	mov    BYTE PTR [ecx+0x44],bl
64006e0e:	mov    edx,DWORD PTR [eax]
64006e10:	mov    eax,DWORD PTR [edx+0x4]
64006e13:	mov    ecx,DWORD PTR [eax]
64006e15:	mov    edx,DWORD PTR [ecx+0x8]
64006e18:	mov    DWORD PTR [eax],edx
64006e1a:	mov    edx,DWORD PTR [ecx+0x8]
64006e1d:	cmp    BYTE PTR [edx+0x45],bl
64006e20:	jne    0x64006e25
64006e22:	mov    DWORD PTR [edx+0x4],eax
64006e25:	mov    edx,DWORD PTR [eax+0x4]
64006e28:	mov    DWORD PTR [ecx+0x4],edx
64006e2b:	mov    edx,DWORD PTR [edi+0x4]
64006e2e:	cmp    eax,DWORD PTR [edx+0x4]
64006e31:	jne    0x64006e3e
64006e33:	mov    DWORD PTR [edx+0x4],ecx
64006e36:	mov    DWORD PTR [ecx+0x8],eax
64006e39:	jmp    0x64006ecc
64006e3e:	mov    edx,DWORD PTR [eax+0x4]
64006e41:	cmp    eax,DWORD PTR [edx+0x8]
64006e44:	jne    0x64006e4e
64006e46:	mov    DWORD PTR [edx+0x8],ecx
64006e49:	mov    DWORD PTR [ecx+0x8],eax
64006e4c:	jmp    0x64006ecc
64006e4e:	mov    DWORD PTR [edx],ecx
64006e50:	mov    DWORD PTR [ecx+0x8],eax
64006e53:	jmp    0x64006ecc
64006e55:	mov    edx,DWORD PTR [edx]
64006e57:	cmp    BYTE PTR [edx+0x44],bl
64006e5a:	jne    0x64006e73
64006e5c:	mov    BYTE PTR [ecx+0x44],0x1
64006e60:	mov    BYTE PTR [edx+0x44],0x1
64006e64:	mov    edx,DWORD PTR [eax]
64006e66:	mov    ecx,DWORD PTR [edx+0x4]
64006e69:	mov    BYTE PTR [ecx+0x44],bl
64006e6c:	mov    edx,DWORD PTR [eax]
64006e6e:	mov    esi,DWORD PTR [edx+0x4]
64006e71:	jmp    0x64006ecf
64006e73:	cmp    esi,DWORD PTR [ecx]
64006e75:	jne    0x64006e81
64006e77:	mov    esi,ecx
64006e79:	push   esi
64006e7a:	mov    ecx,edi
64006e7c:	call   0x640078e0
64006e81:	mov    eax,DWORD PTR [esi+0x4]
64006e84:	mov    BYTE PTR [eax+0x44],0x1
64006e88:	mov    ecx,DWORD PTR [esi+0x4]
64006e8b:	mov    edx,DWORD PTR [ecx+0x4]
64006e8e:	mov    BYTE PTR [edx+0x44],bl
64006e91:	mov    eax,DWORD PTR [esi+0x4]
64006e94:	mov    eax,DWORD PTR [eax+0x4]
64006e97:	mov    ecx,DWORD PTR [eax+0x8]
64006e9a:	mov    edx,DWORD PTR [ecx]
64006e9c:	mov    DWORD PTR [eax+0x8],edx
64006e9f:	mov    edx,DWORD PTR [ecx]
64006ea1:	cmp    BYTE PTR [edx+0x45],bl
64006ea4:	jne    0x64006ea9
64006ea6:	mov    DWORD PTR [edx+0x4],eax
64006ea9:	mov    edx,DWORD PTR [eax+0x4]
64006eac:	mov    DWORD PTR [ecx+0x4],edx
64006eaf:	mov    edx,DWORD PTR [edi+0x4]
64006eb2:	cmp    eax,DWORD PTR [edx+0x4]
64006eb5:	jne    0x64006ebc
64006eb7:	mov    DWORD PTR [edx+0x4],ecx
64006eba:	jmp    0x64006eca
64006ebc:	mov    edx,DWORD PTR [eax+0x4]
64006ebf:	cmp    eax,DWORD PTR [edx]
64006ec1:	jne    0x64006ec7
64006ec3:	mov    DWORD PTR [edx],ecx
64006ec5:	jmp    0x64006eca
64006ec7:	mov    DWORD PTR [edx+0x8],ecx
64006eca:	mov    DWORD PTR [ecx],eax
64006ecc:	mov    DWORD PTR [eax+0x4],ecx
64006ecf:	mov    ecx,DWORD PTR [esi+0x4]
64006ed2:	cmp    BYTE PTR [ecx+0x44],bl
64006ed5:	lea    eax,[esi+0x4]
64006ed8:	je     0x64006da7
64006ede:	mov    ecx,DWORD PTR [esp+0x14]
64006ee2:	mov    edx,DWORD PTR [edi+0x4]
64006ee5:	mov    eax,DWORD PTR [edx+0x4]
64006ee8:	mov    BYTE PTR [eax+0x44],0x1
64006eec:	mov    eax,DWORD PTR [ebp+0x8]
64006eef:	mov    DWORD PTR [eax+0x4],ecx
64006ef2:	mov    DWORD PTR [eax],edi
64006ef4:	mov    ecx,DWORD PTR [esp+0x60]
64006ef8:	mov    DWORD PTR fs:0x0,ecx
64006eff:	pop    ecx
64006f00:	pop    edi
64006f01:	pop    esi
64006f02:	pop    ebx
64006f03:	mov    esp,ebp
64006f05:	pop    ebp
64006f06:	ret    0x10
64006f09:	int3   
64006f0a:	int3   
64006f0b:	int3   
64006f0c:	int3   
64006f0d:	int3   
64006f0e:	int3   
64006f0f:	int3   
64006f10:	push   ebx
64006f11:	mov    ebx,DWORD PTR [esp+0xc]
64006f15:	push   ebp
64006f16:	mov    ebp,DWORD PTR [esp+0xc]
64006f1a:	cmp    DWORD PTR [ebp+0x14],ebx
64006f1d:	push   esi
64006f1e:	push   edi
64006f1f:	mov    esi,ecx
64006f21:	jae    0x64006f28
64006f23:	call   0x640122ee
64006f28:	mov    edi,DWORD PTR [ebp+0x14]
64006f2b:	mov    eax,DWORD PTR [esp+0x1c]
64006f2f:	sub    edi,ebx
64006f31:	cmp    eax,edi
64006f33:	jae    0x64006f37
64006f35:	mov    edi,eax
64006f37:	cmp    esi,ebp
64006f39:	jne    0x64006f5a
64006f3b:	push   0xffffffff
64006f3d:	add    edi,ebx
64006f3f:	push   edi
64006f40:	mov    ecx,esi
64006f42:	call   0x640079e0
64006f47:	push   ebx
64006f48:	push   0x0
64006f4a:	mov    ecx,esi
64006f4c:	call   0x640079e0
64006f51:	pop    edi
64006f52:	mov    eax,esi
64006f54:	pop    esi
64006f55:	pop    ebp
64006f56:	pop    ebx
64006f57:	ret    0xc
64006f5a:	cmp    edi,0x7ffffffe
64006f60:	jbe    0x64006f67
64006f62:	call   0x640122af
64006f67:	mov    eax,DWORD PTR [esi+0x18]
64006f6a:	cmp    eax,edi
64006f6c:	jae    0x64006f89
64006f6e:	mov    eax,DWORD PTR [esi+0x14]
64006f71:	push   eax
64006f72:	push   edi
64006f73:	mov    ecx,esi
64006f75:	call   0x64007d40
64006f7a:	test   edi,edi
64006f7c:	jbe    0x64006ff6
64006f7e:	cmp    DWORD PTR [ebp+0x18],0x8
64006f82:	jb     0x64006fb5
64006f84:	mov    ecx,DWORD PTR [ebp+0x4]
64006f87:	jmp    0x64006fb8
64006f89:	test   edi,edi
64006f8b:	jne    0x64006f7c
64006f8d:	cmp    eax,0x8
64006f90:	mov    DWORD PTR [esi+0x14],edi
64006f93:	jb     0x64006fa4
64006f95:	mov    eax,DWORD PTR [esi+0x4]
64006f98:	mov    WORD PTR [eax],di
64006f9b:	pop    edi
64006f9c:	mov    eax,esi
64006f9e:	pop    esi
64006f9f:	pop    ebp
64006fa0:	pop    ebx
64006fa1:	ret    0xc
64006fa4:	lea    eax,[esi+0x4]
64006fa7:	pop    edi
64006fa8:	mov    WORD PTR [eax],0x0
64006fad:	mov    eax,esi
64006faf:	pop    esi
64006fb0:	pop    ebp
64006fb1:	pop    ebx
64006fb2:	ret    0xc
64006fb5:	lea    ecx,[ebp+0x4]
64006fb8:	cmp    DWORD PTR [esi+0x18],0x8
64006fbc:	lea    ebp,[esi+0x4]
64006fbf:	jb     0x64006fc6
64006fc1:	mov    eax,DWORD PTR [ebp+0x0]
64006fc4:	jmp    0x64006fc8
64006fc6:	mov    eax,ebp
64006fc8:	mov    edx,DWORD PTR [esp+0x18]
64006fcc:	lea    ecx,[ecx+edx*2]
64006fcf:	lea    ebx,[edi+edi*1]
64006fd2:	push   ebx
64006fd3:	push   ecx
64006fd4:	mov    ecx,DWORD PTR [esi+0x18]
64006fd7:	lea    edx,[ecx+ecx*1]
64006fda:	push   edx
64006fdb:	push   eax
64006fdc:	call   0x640124e8
64006fe1:	add    esp,0x10
64006fe4:	cmp    DWORD PTR [esi+0x18],0x8
64006fe8:	mov    DWORD PTR [esi+0x14],edi
64006feb:	jb     0x64006ff0
64006fed:	mov    ebp,DWORD PTR [ebp+0x0]
64006ff0:	mov    WORD PTR [ebx+ebp*1],0x0
64006ff6:	pop    edi
64006ff7:	mov    eax,esi
64006ff9:	pop    esi
64006ffa:	pop    ebp
64006ffb:	pop    ebx
64006ffc:	ret    0xc
64006fff:	int3   
64007000:	push   ebp
64007001:	push   esi
64007002:	mov    esi,ecx
64007004:	mov    edx,DWORD PTR [esi+0x18]
64007007:	cmp    edx,0x8
6400700a:	push   edi
6400700b:	lea    ebp,[esi+0x4]
6400700e:	jb     0x64007015
64007010:	mov    ecx,DWORD PTR [ebp+0x0]
64007013:	jmp    0x64007017
64007015:	mov    ecx,ebp
64007017:	mov    eax,DWORD PTR [esp+0x10]
6400701b:	cmp    eax,ecx
6400701d:	jb     0x64007055
6400701f:	cmp    edx,0x8
64007022:	jb     0x64007029
64007024:	mov    ecx,DWORD PTR [ebp+0x0]
64007027:	jmp    0x6400702b
64007029:	mov    ecx,ebp
6400702b:	mov    edi,DWORD PTR [esi+0x14]
6400702e:	lea    ecx,[ecx+edi*2]
64007031:	cmp    ecx,eax
64007033:	jbe    0x64007055
64007035:	cmp    edx,0x8
64007038:	jb     0x6400703d
6400703a:	mov    ebp,DWORD PTR [ebp+0x0]
6400703d:	mov    edx,DWORD PTR [esp+0x14]
64007041:	sub    eax,ebp
64007043:	push   edx
64007044:	sar    eax,1
64007046:	push   eax
64007047:	push   esi
64007048:	mov    ecx,esi
6400704a:	call   0x64006f10
6400704f:	pop    edi
64007050:	pop    esi
64007051:	pop    ebp
64007052:	ret    0x8
64007055:	mov    edi,DWORD PTR [esp+0x14]
64007059:	cmp    edi,0x7ffffffe
6400705f:	jbe    0x64007066
64007061:	call   0x640122af
64007066:	mov    eax,DWORD PTR [esi+0x18]
64007069:	cmp    eax,edi
6400706b:	jae    0x6400708a
6400706d:	mov    eax,DWORD PTR [esi+0x14]
64007070:	push   eax
64007071:	push   edi
64007072:	mov    ecx,esi
64007074:	call   0x64007d40
64007079:	test   edi,edi
6400707b:	jbe    0x640070d2
6400707d:	mov    ecx,DWORD PTR [esi+0x18]
64007080:	cmp    ecx,0x8
64007083:	jb     0x640070a7
64007085:	mov    eax,DWORD PTR [ebp+0x0]
64007088:	jmp    0x640070a9
6400708a:	test   edi,edi
6400708c:	jne    0x6400707b
6400708e:	cmp    eax,0x8
64007091:	mov    DWORD PTR [esi+0x14],edi
64007094:	jb     0x64007099
64007096:	mov    ebp,DWORD PTR [ebp+0x0]
64007099:	pop    edi
6400709a:	mov    eax,esi
6400709c:	pop    esi
6400709d:	mov    WORD PTR [ebp+0x0],0x0
640070a3:	pop    ebp
640070a4:	ret    0x8
640070a7:	mov    eax,ebp
640070a9:	mov    edx,DWORD PTR [esp+0x10]
640070ad:	push   ebx
640070ae:	lea    ebx,[edi+edi*1]
640070b1:	push   ebx
640070b2:	push   edx
640070b3:	add    ecx,ecx
640070b5:	push   ecx
640070b6:	push   eax
640070b7:	call   0x640124e8
640070bc:	add    esp,0x10
640070bf:	cmp    DWORD PTR [esi+0x18],0x8
640070c3:	mov    DWORD PTR [esi+0x14],edi
640070c6:	jb     0x640070cb
640070c8:	mov    ebp,DWORD PTR [ebp+0x0]
640070cb:	mov    WORD PTR [ebx+ebp*1],0x0
640070d1:	pop    ebx
640070d2:	pop    edi
640070d3:	mov    eax,esi
640070d5:	pop    esi
640070d6:	pop    ebp
640070d7:	ret    0x8
640070da:	int3   
640070db:	int3   
640070dc:	int3   
640070dd:	int3   
640070de:	int3   
640070df:	int3   
640070e0:	push   ebp
640070e1:	mov    ebp,esp
640070e3:	and    esp,0xfffffff8
640070e6:	push   0xffffffff
640070e8:	push   0x64022c58
640070ed:	mov    eax,fs:0x0
640070f3:	push   eax
640070f4:	sub    esp,0x50
640070f7:	push   ebx
640070f8:	push   esi
640070f9:	push   edi
640070fa:	mov    eax,ds:0x6402d09c
640070ff:	xor    eax,esp
64007101:	push   eax
64007102:	lea    eax,[esp+0x60]
64007106:	mov    fs:0x0,eax
6400710c:	mov    edi,ecx
6400710e:	xor    ebx,ebx
64007110:	cmp    DWORD PTR [edi+0x8],0x4924923
64007117:	jb     0x64007162
64007119:	push   0x13
6400711b:	push   0x64028498
64007120:	lea    ecx,[esp+0x20]
64007124:	mov    DWORD PTR [esp+0x38],0xf
6400712c:	mov    DWORD PTR [esp+0x34],ebx
64007130:	mov    BYTE PTR [esp+0x24],bl
64007134:	call   0x64001860
64007139:	lea    eax,[esp+0x18]
6400713d:	push   eax
6400713e:	lea    ecx,[esp+0x38]
64007142:	mov    DWORD PTR [esp+0x6c],ebx
64007146:	call   0x64002cb0
6400714b:	push   0x6402ac70
64007150:	lea    ecx,[esp+0x38]
64007154:	push   ecx
64007155:	mov    DWORD PTR [esp+0x3c],0x6402531c
6400715d:	call   0x6401277b
64007162:	mov    edx,DWORD PTR [ebp+0x14]
64007165:	mov    eax,DWORD PTR [edi+0x4]
64007168:	mov    esi,DWORD PTR [ebp+0x10]
6400716b:	push   ebx
6400716c:	push   edx
6400716d:	push   eax
6400716e:	push   esi
6400716f:	push   eax
64007170:	call   0x64007b30
64007175:	add    DWORD PTR [edi+0x8],0x1
64007179:	mov    ecx,eax
6400717b:	mov    eax,DWORD PTR [edi+0x4]
6400717e:	cmp    esi,eax
64007180:	mov    DWORD PTR [esp+0x14],ecx
64007184:	jne    0x64007196
64007186:	mov    DWORD PTR [eax+0x4],ecx
64007189:	mov    eax,DWORD PTR [edi+0x4]
6400718c:	mov    DWORD PTR [eax],ecx
6400718e:	mov    edx,DWORD PTR [edi+0x4]
64007191:	mov    DWORD PTR [edx+0x8],ecx
64007194:	jmp    0x640071b6
64007196:	cmp    BYTE PTR [ebp+0xc],bl
64007199:	je     0x640071a8
6400719b:	mov    DWORD PTR [esi],ecx
6400719d:	mov    eax,DWORD PTR [edi+0x4]
640071a0:	cmp    esi,DWORD PTR [eax]
640071a2:	jne    0x640071b6
640071a4:	mov    DWORD PTR [eax],ecx
640071a6:	jmp    0x640071b6
640071a8:	mov    DWORD PTR [esi+0x8],ecx
640071ab:	mov    eax,DWORD PTR [edi+0x4]
640071ae:	cmp    esi,DWORD PTR [eax+0x8]
640071b1:	jne    0x640071b6
640071b3:	mov    DWORD PTR [eax+0x8],ecx
640071b6:	mov    edx,DWORD PTR [ecx+0x4]
640071b9:	cmp    BYTE PTR [edx+0x44],bl
640071bc:	lea    eax,[ecx+0x4]
640071bf:	mov    esi,ecx
640071c1:	jne    0x64007302
640071c7:	mov    ecx,DWORD PTR [eax]
640071c9:	mov    edx,DWORD PTR [ecx+0x4]
640071cc:	cmp    ecx,DWORD PTR [edx]
640071ce:	jne    0x64007275
640071d4:	mov    edx,DWORD PTR [edx+0x8]
640071d7:	cmp    BYTE PTR [edx+0x44],bl
640071da:	je     0x6400727c
640071e0:	cmp    esi,DWORD PTR [ecx+0x8]
640071e3:	jne    0x64007220
640071e5:	mov    esi,ecx
640071e7:	mov    ecx,DWORD PTR [esi+0x8]
640071ea:	mov    eax,DWORD PTR [ecx]
640071ec:	mov    DWORD PTR [esi+0x8],eax
640071ef:	mov    eax,DWORD PTR [ecx]
640071f1:	cmp    BYTE PTR [eax+0x45],bl
640071f4:	jne    0x640071f9
640071f6:	mov    DWORD PTR [eax+0x4],esi
640071f9:	mov    edx,DWORD PTR [esi+0x4]
640071fc:	lea    eax,[esi+0x4]
640071ff:	mov    DWORD PTR [ecx+0x4],edx
64007202:	mov    edx,DWORD PTR [edi+0x4]
64007205:	cmp    esi,DWORD PTR [edx+0x4]
64007208:	jne    0x6400720f
6400720a:	mov    DWORD PTR [edx+0x4],ecx
6400720d:	jmp    0x6400721c
6400720f:	mov    edx,DWORD PTR [eax]
64007211:	cmp    esi,DWORD PTR [edx]
64007213:	jne    0x64007219
64007215:	mov    DWORD PTR [edx],ecx
64007217:	jmp    0x6400721c
64007219:	mov    DWORD PTR [edx+0x8],ecx
6400721c:	mov    DWORD PTR [ecx],esi
6400721e:	mov    DWORD PTR [eax],ecx
64007220:	mov    ecx,DWORD PTR [eax]
64007222:	mov    BYTE PTR [ecx+0x44],0x1
64007226:	mov    edx,DWORD PTR [eax]
64007228:	mov    ecx,DWORD PTR [edx+0x4]
6400722b:	mov    BYTE PTR [ecx+0x44],bl
6400722e:	mov    edx,DWORD PTR [eax]
64007230:	mov    eax,DWORD PTR [edx+0x4]
64007233:	mov    ecx,DWORD PTR [eax]
64007235:	mov    edx,DWORD PTR [ecx+0x8]
64007238:	mov    DWORD PTR [eax],edx
6400723a:	mov    edx,DWORD PTR [ecx+0x8]
6400723d:	cmp    BYTE PTR [edx+0x45],bl
64007240:	jne    0x64007245
64007242:	mov    DWORD PTR [edx+0x4],eax
64007245:	mov    edx,DWORD PTR [eax+0x4]
64007248:	mov    DWORD PTR [ecx+0x4],edx
6400724b:	mov    edx,DWORD PTR [edi+0x4]
6400724e:	cmp    eax,DWORD PTR [edx+0x4]
64007251:	jne    0x6400725e
64007253:	mov    DWORD PTR [edx+0x4],ecx
64007256:	mov    DWORD PTR [ecx+0x8],eax
64007259:	jmp    0x640072ec
6400725e:	mov    edx,DWORD PTR [eax+0x4]
64007261:	cmp    eax,DWORD PTR [edx+0x8]
64007264:	jne    0x6400726e
64007266:	mov    DWORD PTR [edx+0x8],ecx
64007269:	mov    DWORD PTR [ecx+0x8],eax
6400726c:	jmp    0x640072ec
6400726e:	mov    DWORD PTR [edx],ecx
64007270:	mov    DWORD PTR [ecx+0x8],eax
64007273:	jmp    0x640072ec
64007275:	mov    edx,DWORD PTR [edx]
64007277:	cmp    BYTE PTR [edx+0x44],bl
6400727a:	jne    0x64007293
6400727c:	mov    BYTE PTR [ecx+0x44],0x1
64007280:	mov    BYTE PTR [edx+0x44],0x1
64007284:	mov    edx,DWORD PTR [eax]
64007286:	mov    ecx,DWORD PTR [edx+0x4]
64007289:	mov    BYTE PTR [ecx+0x44],bl
6400728c:	mov    edx,DWORD PTR [eax]
6400728e:	mov    esi,DWORD PTR [edx+0x4]
64007291:	jmp    0x640072ef
64007293:	cmp    esi,DWORD PTR [ecx]
64007295:	jne    0x640072a1
64007297:	mov    esi,ecx
64007299:	push   esi
6400729a:	mov    ecx,edi
6400729c:	call   0x640078e0
640072a1:	mov    eax,DWORD PTR [esi+0x4]
640072a4:	mov    BYTE PTR [eax+0x44],0x1
640072a8:	mov    ecx,DWORD PTR [esi+0x4]
640072ab:	mov    edx,DWORD PTR [ecx+0x4]
640072ae:	mov    BYTE PTR [edx+0x44],bl
640072b1:	mov    eax,DWORD PTR [esi+0x4]
640072b4:	mov    eax,DWORD PTR [eax+0x4]
640072b7:	mov    ecx,DWORD PTR [eax+0x8]
640072ba:	mov    edx,DWORD PTR [ecx]
640072bc:	mov    DWORD PTR [eax+0x8],edx
640072bf:	mov    edx,DWORD PTR [ecx]
640072c1:	cmp    BYTE PTR [edx+0x45],bl
640072c4:	jne    0x640072c9
640072c6:	mov    DWORD PTR [edx+0x4],eax
640072c9:	mov    edx,DWORD PTR [eax+0x4]
640072cc:	mov    DWORD PTR [ecx+0x4],edx
640072cf:	mov    edx,DWORD PTR [edi+0x4]
640072d2:	cmp    eax,DWORD PTR [edx+0x4]
640072d5:	jne    0x640072dc
640072d7:	mov    DWORD PTR [edx+0x4],ecx
640072da:	jmp    0x640072ea
640072dc:	mov    edx,DWORD PTR [eax+0x4]
640072df:	cmp    eax,DWORD PTR [edx]
640072e1:	jne    0x640072e7
640072e3:	mov    DWORD PTR [edx],ecx
640072e5:	jmp    0x640072ea
640072e7:	mov    DWORD PTR [edx+0x8],ecx
640072ea:	mov    DWORD PTR [ecx],eax
640072ec:	mov    DWORD PTR [eax+0x4],ecx
640072ef:	mov    ecx,DWORD PTR [esi+0x4]
640072f2:	cmp    BYTE PTR [ecx+0x44],bl
640072f5:	lea    eax,[esi+0x4]
640072f8:	je     0x640071c7
640072fe:	mov    ecx,DWORD PTR [esp+0x14]
64007302:	mov    edx,DWORD PTR [edi+0x4]
64007305:	mov    eax,DWORD PTR [edx+0x4]
64007308:	mov    BYTE PTR [eax+0x44],0x1
6400730c:	mov    eax,DWORD PTR [ebp+0x8]
6400730f:	mov    DWORD PTR [eax+0x4],ecx
64007312:	mov    DWORD PTR [eax],edi
64007314:	mov    ecx,DWORD PTR [esp+0x60]
64007318:	mov    DWORD PTR fs:0x0,ecx
6400731f:	pop    ecx
64007320:	pop    edi
64007321:	pop    esi
64007322:	pop    ebx
64007323:	mov    esp,ebp
64007325:	pop    ebp
64007326:	ret    0x10
64007329:	int3   
6400732a:	int3   
6400732b:	int3   
6400732c:	int3   
6400732d:	int3   
6400732e:	int3   
6400732f:	int3   
64007330:	push   0xffffffff
64007332:	push   0x64022c28
64007337:	mov    eax,fs:0x0
6400733d:	push   eax
6400733e:	sub    esp,0x44
64007341:	push   ebx
64007342:	push   ebp
64007343:	push   esi
64007344:	push   edi
64007345:	mov    eax,ds:0x6402d09c
6400734a:	xor    eax,esp
6400734c:	push   eax
6400734d:	lea    eax,[esp+0x58]
64007351:	mov    fs:0x0,eax
64007357:	mov    eax,DWORD PTR [esp+0x74]
6400735b:	cmp    BYTE PTR [eax+0x29],0x0
6400735f:	je     0x640073ad
64007361:	push   0x1b
64007363:	xor    esi,esi
64007365:	push   0x640284ac
6400736a:	lea    ecx,[esp+0x1c]
6400736e:	mov    DWORD PTR [esp+0x34],0xf
64007376:	mov    DWORD PTR [esp+0x30],esi
6400737a:	mov    BYTE PTR [esp+0x20],0x0
6400737f:	call   0x64001860
64007384:	lea    eax,[esp+0x14]
64007388:	push   eax
64007389:	lea    ecx,[esp+0x34]
6400738d:	mov    DWORD PTR [esp+0x64],esi
64007391:	call   0x64002cb0
64007396:	push   0x6402ac34
6400739b:	lea    ecx,[esp+0x34]
6400739f:	push   ecx
640073a0:	mov    DWORD PTR [esp+0x38],0x64025328
640073a8:	call   0x6401277b
640073ad:	lea    esi,[esp+0x70]
640073b1:	mov    ebp,eax
640073b3:	call   0x64006600
640073b8:	mov    eax,DWORD PTR [ebp+0x0]
640073bb:	cmp    BYTE PTR [eax+0x29],0x0
640073bf:	je     0x640073c6
640073c1:	mov    edi,DWORD PTR [ebp+0x8]
640073c4:	jmp    0x640073de
640073c6:	mov    edx,DWORD PTR [ebp+0x8]
640073c9:	cmp    BYTE PTR [edx+0x29],0x0
640073cd:	je     0x640073d3
640073cf:	mov    edi,eax
640073d1:	jmp    0x640073de
640073d3:	mov    ecx,DWORD PTR [esp+0x74]
640073d7:	cmp    ecx,ebp
640073d9:	mov    edi,DWORD PTR [ecx+0x8]
640073dc:	jne    0x64007452
640073de:	cmp    BYTE PTR [edi+0x29],0x0
640073e2:	mov    esi,DWORD PTR [ebp+0x4]
640073e5:	jne    0x640073ea
640073e7:	mov    DWORD PTR [edi+0x4],esi
640073ea:	mov    ecx,DWORD PTR [esp+0x68]
640073ee:	mov    eax,DWORD PTR [ecx+0x4]
640073f1:	cmp    DWORD PTR [eax+0x4],ebp
640073f4:	jne    0x640073fb
640073f6:	mov    DWORD PTR [eax+0x4],edi
640073f9:	jmp    0x64007406
640073fb:	cmp    DWORD PTR [esi],ebp
640073fd:	jne    0x64007403
640073ff:	mov    DWORD PTR [esi],edi
64007401:	jmp    0x64007406
64007403:	mov    DWORD PTR [esi+0x8],edi
64007406:	mov    edx,DWORD PTR [ecx+0x4]
64007409:	cmp    DWORD PTR [edx],ebp
6400740b:	jne    0x6400742d
6400740d:	cmp    BYTE PTR [edi+0x29],0x0
64007411:	je     0x64007417
64007413:	mov    ecx,esi
64007415:	jmp    0x6400742b
64007417:	mov    eax,DWORD PTR [edi]
64007419:	cmp    BYTE PTR [eax+0x29],0x0
6400741d:	mov    ecx,edi
6400741f:	jne    0x6400742b
64007421:	mov    ecx,eax
64007423:	mov    eax,DWORD PTR [ecx]
64007425:	cmp    BYTE PTR [eax+0x29],0x0
64007429:	je     0x64007421
6400742b:	mov    DWORD PTR [edx],ecx
6400742d:	mov    eax,DWORD PTR [esp+0x68]
64007431:	mov    ebx,DWORD PTR [eax+0x4]
64007434:	cmp    DWORD PTR [ebx+0x8],ebp
64007437:	jne    0x640074ae
64007439:	cmp    BYTE PTR [edi+0x29],0x0
6400743d:	je     0x64007446
6400743f:	mov    eax,esi
64007441:	mov    DWORD PTR [ebx+0x8],eax
64007444:	jmp    0x640074ae
64007446:	mov    eax,edi
64007448:	call   0x640076d0
6400744d:	mov    DWORD PTR [ebx+0x8],eax
64007450:	jmp    0x640074ae
64007452:	mov    DWORD PTR [eax+0x4],ecx
64007455:	mov    edx,DWORD PTR [ebp+0x0]
64007458:	mov    DWORD PTR [ecx],edx
6400745a:	cmp    ecx,DWORD PTR [ebp+0x8]
6400745d:	jne    0x64007463
6400745f:	mov    esi,ecx
64007461:	jmp    0x6400747d
64007463:	cmp    BYTE PTR [edi+0x29],0x0
64007467:	mov    esi,DWORD PTR [ecx+0x4]
6400746a:	jne    0x6400746f
6400746c:	mov    DWORD PTR [edi+0x4],esi
6400746f:	mov    DWORD PTR [esi],edi
64007471:	mov    eax,DWORD PTR [ebp+0x8]
64007474:	mov    DWORD PTR [ecx+0x8],eax
64007477:	mov    edx,DWORD PTR [ebp+0x8]
6400747a:	mov    DWORD PTR [edx+0x4],ecx
6400747d:	mov    eax,DWORD PTR [esp+0x68]
64007481:	mov    eax,DWORD PTR [eax+0x4]
64007484:	cmp    DWORD PTR [eax+0x4],ebp
64007487:	jne    0x6400748e
64007489:	mov    DWORD PTR [eax+0x4],ecx
6400748c:	jmp    0x6400749c
6400748e:	mov    eax,DWORD PTR [ebp+0x4]
64007491:	cmp    DWORD PTR [eax],ebp
64007493:	jne    0x64007499
64007495:	mov    DWORD PTR [eax],ecx
64007497:	jmp    0x6400749c
64007499:	mov    DWORD PTR [eax+0x8],ecx
6400749c:	mov    edx,DWORD PTR [ebp+0x4]
6400749f:	mov    DWORD PTR [ecx+0x4],edx
640074a2:	mov    dl,BYTE PTR [ebp+0x28]
640074a5:	mov    al,BYTE PTR [ecx+0x28]
640074a8:	mov    BYTE PTR [ecx+0x28],dl
640074ab:	mov    BYTE PTR [ebp+0x28],al
640074ae:	mov    bl,0x1
640074b0:	cmp    BYTE PTR [ebp+0x28],bl
640074b3:	jne    0x640075da
640074b9:	mov    eax,DWORD PTR [esp+0x68]
640074bd:	mov    ecx,DWORD PTR [eax+0x4]
640074c0:	cmp    edi,DWORD PTR [ecx+0x4]
640074c3:	je     0x640075d7
640074c9:	lea    esp,[esp+0x0]
640074d0:	cmp    BYTE PTR [edi+0x28],bl
640074d3:	jne    0x640075d7
640074d9:	mov    ecx,DWORD PTR [esi]
640074db:	cmp    edi,ecx
640074dd:	jne    0x64007555
640074df:	mov    ecx,DWORD PTR [esi+0x8]
640074e2:	cmp    BYTE PTR [ecx+0x28],0x0
640074e6:	jne    0x640074fe
640074e8:	mov    edx,DWORD PTR [esp+0x68]
640074ec:	mov    BYTE PTR [ecx+0x28],bl
640074ef:	push   edx
640074f0:	mov    ecx,esi
640074f2:	mov    BYTE PTR [esi+0x28],0x0
640074f6:	call   0x64006b70
640074fb:	mov    ecx,DWORD PTR [esi+0x8]
640074fe:	cmp    BYTE PTR [ecx+0x29],0x0
64007502:	jne    0x64007589
64007508:	mov    eax,DWORD PTR [ecx]
6400750a:	cmp    BYTE PTR [eax+0x28],bl
6400750d:	jne    0x64007517
6400750f:	mov    edx,DWORD PTR [ecx+0x8]
64007512:	cmp    BYTE PTR [edx+0x28],bl
64007515:	je     0x64007585
64007517:	mov    eax,DWORD PTR [ecx+0x8]
6400751a:	cmp    BYTE PTR [eax+0x28],bl
6400751d:	jne    0x64007535
6400751f:	mov    edx,DWORD PTR [ecx]
64007521:	mov    eax,DWORD PTR [esp+0x68]
64007525:	mov    BYTE PTR [edx+0x28],bl
64007528:	push   eax
64007529:	mov    BYTE PTR [ecx+0x28],0x0
6400752d:	call   0x64006bc0
64007532:	mov    ecx,DWORD PTR [esi+0x8]
64007535:	mov    dl,BYTE PTR [esi+0x28]
64007538:	mov    BYTE PTR [ecx+0x28],dl
6400753b:	mov    BYTE PTR [esi+0x28],bl
6400753e:	mov    eax,DWORD PTR [ecx+0x8]
64007541:	mov    ecx,DWORD PTR [esp+0x68]
64007545:	push   ecx
64007546:	mov    ecx,esi
64007548:	mov    BYTE PTR [eax+0x28],bl
6400754b:	call   0x64006b70
64007550:	jmp    0x640075d7
64007555:	cmp    BYTE PTR [ecx+0x28],0x0
64007559:	jne    0x64007570
6400755b:	mov    eax,DWORD PTR [esp+0x68]
6400755f:	mov    BYTE PTR [ecx+0x28],bl
64007562:	push   eax
64007563:	mov    ecx,esi
64007565:	mov    BYTE PTR [esi+0x28],0x0
64007569:	call   0x64006bc0
6400756e:	mov    ecx,DWORD PTR [esi]
64007570:	cmp    BYTE PTR [ecx+0x29],0x0
64007574:	jne    0x64007589
64007576:	mov    edx,DWORD PTR [ecx+0x8]
64007579:	cmp    BYTE PTR [edx+0x28],bl
6400757c:	jne    0x640075a0
6400757e:	mov    eax,DWORD PTR [ecx]
64007580:	cmp    BYTE PTR [eax+0x28],bl
64007583:	jne    0x640075a0
64007585:	mov    BYTE PTR [ecx+0x28],0x0
64007589:	mov    ecx,DWORD PTR [esp+0x68]
6400758d:	mov    edx,DWORD PTR [ecx+0x4]
64007590:	mov    edi,esi
64007592:	cmp    edi,DWORD PTR [edx+0x4]
64007595:	mov    esi,DWORD PTR [esi+0x4]
64007598:	jne    0x640074d0
6400759e:	jmp    0x640075d7
640075a0:	mov    edx,DWORD PTR [ecx]
640075a2:	cmp    BYTE PTR [edx+0x28],bl
640075a5:	jne    0x640075bd
640075a7:	mov    eax,DWORD PTR [ecx+0x8]
640075aa:	mov    edx,DWORD PTR [esp+0x68]
640075ae:	mov    BYTE PTR [eax+0x28],bl
640075b1:	push   edx
640075b2:	mov    BYTE PTR [ecx+0x28],0x0
640075b6:	call   0x64006b70
640075bb:	mov    ecx,DWORD PTR [esi]
640075bd:	mov    al,BYTE PTR [esi+0x28]
640075c0:	mov    edx,DWORD PTR [esp+0x68]
640075c4:	mov    BYTE PTR [ecx+0x28],al
640075c7:	mov    BYTE PTR [esi+0x28],bl
640075ca:	mov    ecx,DWORD PTR [ecx]
640075cc:	mov    BYTE PTR [ecx+0x28],bl
640075cf:	push   edx
640075d0:	mov    ecx,esi
640075d2:	call   0x64006bc0
640075d7:	mov    BYTE PTR [edi+0x28],bl
640075da:	cmp    DWORD PTR [ebp+0x24],0x10
640075de:	jb     0x640075ec
640075e0:	mov    eax,DWORD PTR [ebp+0x10]
640075e3:	push   eax
640075e4:	call   0x64012332
640075e9:	add    esp,0x4
640075ec:	mov    DWORD PTR [ebp+0x24],0xf
640075f3:	mov    DWORD PTR [ebp+0x20],0x0
640075fa:	push   ebp
640075fb:	mov    BYTE PTR [ebp+0x10],0x0
640075ff:	call   0x64012332
64007604:	mov    ecx,DWORD PTR [esp+0x6c]
64007608:	mov    eax,DWORD PTR [ecx+0x8]
6400760b:	add    esp,0x4
6400760e:	test   eax,eax
64007610:	jbe    0x64007618
64007612:	add    eax,0xffffffff
64007615:	mov    DWORD PTR [ecx+0x8],eax
64007618:	mov    eax,DWORD PTR [esp+0x6c]
6400761c:	mov    ecx,DWORD PTR [esp+0x70]
64007620:	mov    edx,DWORD PTR [esp+0x74]
64007624:	mov    DWORD PTR [eax],ecx
64007626:	mov    DWORD PTR [eax+0x4],edx
64007629:	mov    ecx,DWORD PTR [esp+0x58]
6400762d:	mov    DWORD PTR fs:0x0,ecx
64007634:	pop    ecx
64007635:	pop    edi
64007636:	pop    esi
64007637:	pop    ebp
64007638:	pop    ebx
64007639:	add    esp,0x50
6400763c:	ret    0x10
6400763f:	int3   
64007640:	sub    esp,0x8
64007643:	mov    eax,DWORD PTR [eax+0x4]
64007646:	push   esi
64007647:	mov    esi,DWORD PTR [eax+0x4]
6400764a:	cmp    BYTE PTR [esi+0x29],0x0
6400764e:	mov    DWORD PTR [esp+0x4],eax
64007652:	jne    0x640076c5
64007654:	mov    edx,DWORD PTR [ecx+0x18]
64007657:	push   ebx
64007658:	mov    ebx,DWORD PTR [ecx+0x14]
6400765b:	push   ebp
6400765c:	push   edi
6400765d:	mov    DWORD PTR [esp+0x14],edx
64007661:	lea    ebp,[ecx+0x4]
64007664:	cmp    DWORD PTR [esp+0x14],0x10
64007669:	jb     0x64007670
6400766b:	mov    edx,DWORD PTR [ebp+0x0]
6400766e:	jmp    0x64007672
64007670:	mov    edx,ebp
64007672:	mov    edi,DWORD PTR [esi+0x20]
64007675:	mov    eax,edi
64007677:	cmp    eax,edi
64007679:	jae    0x6400767b
6400767b:	cmp    edi,ebx
6400767d:	mov    ecx,edi
6400767f:	jb     0x64007683
64007681:	mov    ecx,ebx
64007683:	cmp    DWORD PTR [esi+0x24],0x10
64007687:	jb     0x6400768e
64007689:	mov    eax,DWORD PTR [esi+0x10]
6400768c:	jmp    0x64007691
6400768e:	lea    eax,[esi+0x10]
64007691:	push   ecx
64007692:	push   edx
64007693:	push   eax
64007694:	call   0x64002c20
64007699:	add    esp,0xc
6400769c:	test   eax,eax
6400769e:	jne    0x640076ab
640076a0:	cmp    edi,ebx
640076a2:	jb     0x640076ad
640076a4:	cmp    edi,ebx
640076a6:	setne  al
640076a9:	test   eax,eax
640076ab:	jge    0x640076b2
640076ad:	mov    esi,DWORD PTR [esi+0x8]
640076b0:	jmp    0x640076b8
640076b2:	mov    DWORD PTR [esp+0x10],esi
640076b6:	mov    esi,DWORD PTR [esi]
640076b8:	cmp    BYTE PTR [esi+0x29],0x0
640076bc:	je     0x64007664
640076be:	mov    eax,DWORD PTR [esp+0x10]
640076c2:	pop    edi
640076c3:	pop    ebp
640076c4:	pop    ebx
640076c5:	pop    esi
640076c6:	add    esp,0x8
640076c9:	ret    
640076ca:	int3   
640076cb:	int3   
640076cc:	int3   
640076cd:	int3   
640076ce:	int3   
640076cf:	int3   
640076d0:	mov    ecx,DWORD PTR [eax+0x8]
640076d3:	cmp    BYTE PTR [ecx+0x29],0x0
640076d7:	jne    0x640076eb
640076d9:	lea    esp,[esp+0x0]
640076e0:	mov    eax,ecx
640076e2:	mov    ecx,DWORD PTR [eax+0x8]
640076e5:	cmp    BYTE PTR [ecx+0x29],0x0
640076e9:	je     0x640076e0
640076eb:	ret    
640076ec:	int3   
640076ed:	int3   
640076ee:	int3   
640076ef:	int3   
640076f0:	sub    esp,0x10
640076f3:	mov    ecx,DWORD PTR [ecx+0x4]
640076f6:	push   edi
640076f7:	mov    edi,DWORD PTR [ecx+0x4]
640076fa:	cmp    BYTE PTR [edi+0x29],0x0
640076fe:	mov    DWORD PTR [esp+0x8],ecx
64007702:	jne    0x64007781
64007704:	mov    edx,DWORD PTR [eax+0x14]
64007707:	mov    ecx,DWORD PTR [eax+0x18]
6400770a:	push   ebx
6400770b:	push   ebp
6400770c:	add    eax,0x4
6400770f:	push   esi
64007710:	mov    ebp,edx
64007712:	mov    DWORD PTR [esp+0x1c],ecx
64007716:	mov    DWORD PTR [esp+0x10],eax
6400771a:	lea    ebx,[ebx+0x0]
64007720:	cmp    DWORD PTR [edi+0x24],0x10
64007724:	mov    ebx,DWORD PTR [edi+0x20]
64007727:	jb     0x6400772e
64007729:	mov    edx,DWORD PTR [edi+0x10]
6400772c:	jmp    0x64007731
6400772e:	lea    edx,[edi+0x10]
64007731:	mov    esi,ebp
64007733:	cmp    esi,ebx
64007735:	mov    ecx,esi
64007737:	jb     0x6400773b
64007739:	mov    ecx,ebx
6400773b:	cmp    DWORD PTR [esp+0x1c],0x10
64007740:	mov    eax,DWORD PTR [esp+0x10]
64007744:	jb     0x64007748
64007746:	mov    eax,DWORD PTR [eax]
64007748:	push   ecx
64007749:	push   edx
6400774a:	push   eax
6400774b:	call   0x64002c20
64007750:	add    esp,0xc
64007753:	test   eax,eax
64007755:	jne    0x64007762
64007757:	cmp    esi,ebx
64007759:	jb     0x64007764
6400775b:	cmp    esi,ebx
6400775d:	setne  al
64007760:	test   eax,eax
64007762:	jge    0x6400776c
64007764:	mov    DWORD PTR [esp+0x14],edi
64007768:	mov    edi,DWORD PTR [edi]
6400776a:	jmp    0x6400776f
6400776c:	mov    edi,DWORD PTR [edi+0x8]
6400776f:	cmp    BYTE PTR [edi+0x29],0x0
64007773:	je     0x64007720
64007775:	mov    eax,DWORD PTR [esp+0x14]
64007779:	pop    esi
6400777a:	pop    ebp
6400777b:	pop    ebx
6400777c:	pop    edi
6400777d:	add    esp,0x10
64007780:	ret    
64007781:	mov    eax,ecx
64007783:	pop    edi
64007784:	add    esp,0x10
64007787:	ret    
64007788:	int3   
64007789:	int3   
6400778a:	int3   
6400778b:	int3   
6400778c:	int3   
6400778d:	int3   
6400778e:	int3   
6400778f:	int3   
64007790:	push   0x2c
64007792:	call   0x64012711
64007797:	add    esp,0x4
6400779a:	test   eax,eax
6400779c:	je     0x640077a4
6400779e:	mov    DWORD PTR [eax],0x0
640077a4:	lea    ecx,[eax+0x4]
640077a7:	test   ecx,ecx
640077a9:	je     0x640077b1
640077ab:	mov    DWORD PTR [ecx],0x0
640077b1:	lea    ecx,[eax+0x8]
640077b4:	test   ecx,ecx
640077b6:	je     0x640077be
640077b8:	mov    DWORD PTR [ecx],0x0
640077be:	mov    BYTE PTR [eax+0x28],0x1
640077c2:	mov    BYTE PTR [eax+0x29],0x0
640077c6:	ret    
640077c7:	int3   
640077c8:	int3   
640077c9:	int3   
640077ca:	int3   
640077cb:	int3   
640077cc:	int3   
640077cd:	int3   
640077ce:	int3   
640077cf:	int3   
640077d0:	cmp    DWORD PTR [esi],0x0
640077d3:	jne    0x640077da
640077d5:	call   0x640126e8
640077da:	mov    eax,DWORD PTR [esi+0x4]
640077dd:	cmp    BYTE PTR [eax+0x29],0x0
640077e1:	je     0x640077f4
640077e3:	mov    eax,DWORD PTR [eax+0x8]
640077e6:	mov    DWORD PTR [esi+0x4],eax
640077e9:	cmp    BYTE PTR [eax+0x29],0x0
640077ed:	je     0x64007846
640077ef:	jmp    0x640126e8
640077f4:	mov    ecx,DWORD PTR [eax]
640077f6:	cmp    BYTE PTR [ecx+0x29],0x0
640077fa:	jne    0x64007814
640077fc:	mov    eax,DWORD PTR [ecx+0x8]
640077ff:	cmp    BYTE PTR [eax+0x29],0x0
64007803:	jne    0x64007810
64007805:	mov    ecx,eax
64007807:	mov    eax,DWORD PTR [ecx+0x8]
6400780a:	cmp    BYTE PTR [eax+0x29],0x0
6400780e:	je     0x64007805
64007810:	mov    DWORD PTR [esi+0x4],ecx
64007813:	ret    
64007814:	mov    eax,DWORD PTR [eax+0x4]
64007817:	cmp    BYTE PTR [eax+0x29],0x0
6400781b:	jne    0x64007835
6400781d:	lea    ecx,[ecx+0x0]
64007820:	mov    ecx,DWORD PTR [esi+0x4]
64007823:	cmp    ecx,DWORD PTR [eax]
64007825:	jne    0x64007835
64007827:	mov    DWORD PTR [esi+0x4],eax
6400782a:	mov    edx,eax
6400782c:	mov    eax,DWORD PTR [edx+0x4]
6400782f:	cmp    BYTE PTR [eax+0x29],0x0
64007833:	je     0x64007820
64007835:	mov    ecx,DWORD PTR [esi+0x4]
64007838:	cmp    BYTE PTR [ecx+0x29],0x0
6400783c:	je     0x64007843
6400783e:	jmp    0x640126e8
64007843:	mov    DWORD PTR [esi+0x4],eax
64007846:	ret    
64007847:	int3   
64007848:	int3   
64007849:	int3   
6400784a:	int3   
6400784b:	int3   
6400784c:	int3   
6400784d:	int3   
6400784e:	int3   
6400784f:	int3   
64007850:	push   ecx
64007851:	mov    eax,DWORD PTR [ecx+0x4]
64007854:	push   esi
64007855:	mov    esi,DWORD PTR [eax+0x4]
64007858:	cmp    BYTE PTR [esi+0x45],0x0
6400785c:	mov    DWORD PTR [esp+0x4],eax
64007860:	jne    0x640078d7
64007862:	mov    eax,DWORD PTR [esp+0xc]
64007866:	mov    ecx,DWORD PTR [eax+0x18]
64007869:	push   ebx
6400786a:	mov    ebx,DWORD PTR [eax+0x14]
6400786d:	push   ebp
6400786e:	push   edi
6400786f:	mov    DWORD PTR [esp+0x18],ecx
64007873:	lea    ebp,[eax+0x4]
64007876:	cmp    DWORD PTR [esp+0x18],0x10
6400787b:	jb     0x64007882
6400787d:	mov    edx,DWORD PTR [ebp+0x0]
64007880:	jmp    0x64007884
64007882:	mov    edx,ebp
64007884:	mov    edi,DWORD PTR [esi+0x20]
64007887:	mov    eax,edi
64007889:	cmp    eax,edi
6400788b:	jae    0x6400788d
6400788d:	cmp    edi,ebx
6400788f:	mov    ecx,edi
64007891:	jb     0x64007895
64007893:	mov    ecx,ebx
64007895:	cmp    DWORD PTR [esi+0x24],0x10
64007899:	jb     0x640078a0
6400789b:	mov    eax,DWORD PTR [esi+0x10]
6400789e:	jmp    0x640078a3
640078a0:	lea    eax,[esi+0x10]
640078a3:	push   ecx
640078a4:	push   edx
640078a5:	push   eax
640078a6:	call   0x64002c20
640078ab:	add    esp,0xc
640078ae:	test   eax,eax
640078b0:	jne    0x640078bd
640078b2:	cmp    edi,ebx
640078b4:	jb     0x640078bf
640078b6:	cmp    edi,ebx
640078b8:	setne  al
640078bb:	test   eax,eax
640078bd:	jge    0x640078c4
640078bf:	mov    esi,DWORD PTR [esi+0x8]
640078c2:	jmp    0x640078ca
640078c4:	mov    DWORD PTR [esp+0x10],esi
640078c8:	mov    esi,DWORD PTR [esi]
640078ca:	cmp    BYTE PTR [esi+0x45],0x0
640078ce:	je     0x64007876
640078d0:	mov    eax,DWORD PTR [esp+0x10]
640078d4:	pop    edi
640078d5:	pop    ebp
640078d6:	pop    ebx
640078d7:	pop    esi
640078d8:	pop    ecx
640078d9:	ret    0x4
640078dc:	int3   
640078dd:	int3   
640078de:	int3   
640078df:	int3   
640078e0:	mov    edx,DWORD PTR [esp+0x4]
640078e4:	mov    eax,DWORD PTR [edx]
640078e6:	push   esi
640078e7:	mov    esi,DWORD PTR [eax+0x8]
640078ea:	mov    DWORD PTR [edx],esi
640078ec:	mov    esi,DWORD PTR [eax+0x8]
640078ef:	cmp    BYTE PTR [esi+0x45],0x0
640078f3:	jne    0x640078f8
640078f5:	mov    DWORD PTR [esi+0x4],edx
640078f8:	mov    esi,DWORD PTR [edx+0x4]
640078fb:	mov    DWORD PTR [eax+0x4],esi
640078fe:	mov    ecx,DWORD PTR [ecx+0x4]
64007901:	cmp    edx,DWORD PTR [ecx+0x4]
64007904:	pop    esi
64007905:	jne    0x64007913
64007907:	mov    DWORD PTR [ecx+0x4],eax
6400790a:	mov    DWORD PTR [eax+0x8],edx
6400790d:	mov    DWORD PTR [edx+0x4],eax
64007910:	ret    0x4
64007913:	mov    ecx,DWORD PTR [edx+0x4]
64007916:	cmp    edx,DWORD PTR [ecx+0x8]
64007919:	jne    0x64007927
6400791b:	mov    DWORD PTR [ecx+0x8],eax
6400791e:	mov    DWORD PTR [eax+0x8],edx
64007921:	mov    DWORD PTR [edx+0x4],eax
64007924:	ret    0x4
64007927:	mov    DWORD PTR [ecx],eax
64007929:	mov    DWORD PTR [eax+0x8],edx
6400792c:	mov    DWORD PTR [edx+0x4],eax
6400792f:	ret    0x4
64007932:	int3   
64007933:	int3   
64007934:	int3   
64007935:	int3   
64007936:	int3   
64007937:	int3   
64007938:	int3   
64007939:	int3   
6400793a:	int3   
6400793b:	int3   
6400793c:	int3   
6400793d:	int3   
6400793e:	int3   
6400793f:	int3   
64007940:	push   ebp
64007941:	mov    ebp,esp
64007943:	push   0xffffffff
64007945:	push   0x64022811
6400794a:	mov    eax,fs:0x0
64007950:	push   eax
64007951:	sub    esp,0xc
64007954:	push   ebx
64007955:	push   esi
64007956:	push   edi
64007957:	mov    eax,ds:0x6402d09c
6400795c:	xor    eax,ebp
6400795e:	push   eax
6400795f:	lea    eax,[ebp-0xc]
64007962:	mov    fs:0x0,eax
64007968:	mov    DWORD PTR [ebp-0x10],esp
6400796b:	push   0x48
6400796d:	call   0x64012711
64007972:	mov    esi,eax
64007974:	mov    DWORD PTR [ebp-0x4],0x0
6400797b:	add    esp,0x4
6400797e:	mov    DWORD PTR [ebp-0x14],esi
64007981:	mov    DWORD PTR [ebp-0x18],esi
64007984:	test   esi,esi
64007986:	mov    BYTE PTR [ebp-0x4],0x1
6400798a:	je     0x640079b3
6400798c:	mov    eax,DWORD PTR [ebp+0x8]
6400798f:	mov    ecx,DWORD PTR [ebp+0xc]
64007992:	mov    edx,DWORD PTR [ebp+0x10]
64007995:	mov    DWORD PTR [esi],eax
64007997:	mov    eax,DWORD PTR [ebp+0x14]
6400799a:	mov    DWORD PTR [esi+0x4],ecx
6400799d:	push   eax
6400799e:	lea    ecx,[esi+0xc]
640079a1:	mov    DWORD PTR [esi+0x8],edx
640079a4:	call   0x64008030
640079a9:	mov    cl,BYTE PTR [ebp+0x18]
640079ac:	mov    BYTE PTR [esi+0x44],cl
640079af:	mov    BYTE PTR [esi+0x45],0x0
640079b3:	mov    eax,esi
640079b5:	mov    ecx,DWORD PTR [ebp-0xc]
640079b8:	mov    DWORD PTR fs:0x0,ecx
640079bf:	pop    ecx
640079c0:	pop    edi
640079c1:	pop    esi
640079c2:	pop    ebx
640079c3:	mov    esp,ebp
640079c5:	pop    ebp
640079c6:	ret    0x14
640079c9:	mov    edx,DWORD PTR [ebp-0x14]
640079cc:	push   edx
640079cd:	call   0x64012332
640079d2:	add    esp,0x4
640079d5:	push   0x0
640079d7:	push   0x0
640079d9:	call   0x6401277b
640079de:	int3   
640079df:	int3   
640079e0:	push   ebx
640079e1:	mov    ebx,DWORD PTR [esp+0x8]
640079e5:	push   esi
640079e6:	mov    esi,ecx
640079e8:	cmp    DWORD PTR [esi+0x14],ebx
640079eb:	push   edi
640079ec:	jae    0x640079f3
640079ee:	call   0x640122ee
640079f3:	mov    eax,DWORD PTR [esi+0x14]
640079f6:	mov    edi,DWORD PTR [esp+0x14]
640079fa:	sub    eax,ebx
640079fc:	cmp    eax,edi
640079fe:	jae    0x64007a02
64007a00:	mov    edi,eax
64007a02:	test   edi,edi
64007a04:	jbe    0x64007a6f
64007a06:	mov    ecx,DWORD PTR [esi+0x18]
64007a09:	cmp    ecx,0x8
64007a0c:	push   ebp
64007a0d:	lea    ebp,[esi+0x4]
64007a10:	jb     0x64007a1b
64007a12:	mov    edx,DWORD PTR [ebp+0x0]
64007a15:	mov    DWORD PTR [esp+0x14],edx
64007a19:	jmp    0x64007a1f
64007a1b:	mov    DWORD PTR [esp+0x14],ebp
64007a1f:	cmp    ecx,0x8
64007a22:	jb     0x64007a2d
64007a24:	mov    edx,DWORD PTR [ebp+0x0]
64007a27:	mov    DWORD PTR [esp+0x18],edx
64007a2b:	jmp    0x64007a31
64007a2d:	mov    DWORD PTR [esp+0x18],ebp
64007a31:	mov    edx,DWORD PTR [esp+0x14]
64007a35:	sub    eax,edi
64007a37:	add    eax,eax
64007a39:	push   eax
64007a3a:	lea    eax,[ebx+edi*1]
64007a3d:	lea    eax,[edx+eax*2]
64007a40:	sub    ecx,ebx
64007a42:	push   eax
64007a43:	add    ecx,ecx
64007a45:	push   ecx
64007a46:	mov    ecx,DWORD PTR [esp+0x24]
64007a4a:	lea    edx,[ecx+ebx*2]
64007a4d:	push   edx
64007a4e:	call   0x64012563
64007a53:	mov    eax,DWORD PTR [esi+0x14]
64007a56:	sub    eax,edi
64007a58:	add    esp,0x10
64007a5b:	cmp    DWORD PTR [esi+0x18],0x8
64007a5f:	mov    DWORD PTR [esi+0x14],eax
64007a62:	jb     0x64007a67
64007a64:	mov    ebp,DWORD PTR [ebp+0x0]
64007a67:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64007a6e:	pop    ebp
64007a6f:	pop    edi
64007a70:	mov    eax,esi
64007a72:	pop    esi
64007a73:	pop    ebx
64007a74:	ret    0x8
64007a77:	int3   
64007a78:	int3   
64007a79:	int3   
64007a7a:	int3   
64007a7b:	int3   
64007a7c:	int3   
64007a7d:	int3   
64007a7e:	int3   
64007a7f:	int3   
64007a80:	mov    eax,DWORD PTR [ecx+0x4]
64007a83:	push   ebp
64007a84:	push   esi
64007a85:	mov    esi,DWORD PTR [eax+0x4]
64007a88:	cmp    BYTE PTR [esi+0x45],0x0
64007a8c:	mov    ebp,eax
64007a8e:	jne    0x64007ad6
64007a90:	push   ebx
64007a91:	push   edi
64007a92:	mov    edi,DWORD PTR [esp+0x14]
64007a96:	lea    ebx,[edi+0x4]
64007a99:	lea    esp,[esp+0x0]
64007aa0:	cmp    DWORD PTR [edi+0x18],0x8
64007aa4:	mov    edx,DWORD PTR [edi+0x14]
64007aa7:	lea    ecx,[esi+0xc]
64007aaa:	jb     0x64007ab0
64007aac:	mov    eax,DWORD PTR [ebx]
64007aae:	jmp    0x64007ab2
64007ab0:	mov    eax,ebx
64007ab2:	push   edx
64007ab3:	push   eax
64007ab4:	mov    eax,DWORD PTR [ecx+0x14]
64007ab7:	push   eax
64007ab8:	push   0x0
64007aba:	call   0x64008db0
64007abf:	test   eax,eax
64007ac1:	jge    0x64007ac8
64007ac3:	mov    esi,DWORD PTR [esi+0x8]
64007ac6:	jmp    0x64007acc
64007ac8:	mov    ebp,esi
64007aca:	mov    esi,DWORD PTR [esi]
64007acc:	cmp    BYTE PTR [esi+0x45],0x0
64007ad0:	je     0x64007aa0
64007ad2:	pop    edi
64007ad3:	mov    eax,ebp
64007ad5:	pop    ebx
64007ad6:	pop    esi
64007ad7:	pop    ebp
64007ad8:	ret    0x4
64007adb:	int3   
64007adc:	int3   
64007add:	int3   
64007ade:	int3   
64007adf:	int3   
64007ae0:	mov    edx,DWORD PTR [esp+0x4]
64007ae4:	mov    eax,DWORD PTR [edx+0x8]
64007ae7:	push   esi
64007ae8:	mov    esi,DWORD PTR [eax]
64007aea:	mov    DWORD PTR [edx+0x8],esi
64007aed:	mov    esi,DWORD PTR [eax]
64007aef:	cmp    BYTE PTR [esi+0x45],0x0
64007af3:	jne    0x64007af8
64007af5:	mov    DWORD PTR [esi+0x4],edx
64007af8:	mov    esi,DWORD PTR [edx+0x4]
64007afb:	mov    DWORD PTR [eax+0x4],esi
64007afe:	mov    ecx,DWORD PTR [ecx+0x4]
64007b01:	cmp    edx,DWORD PTR [ecx+0x4]
64007b04:	pop    esi
64007b05:	jne    0x64007b12
64007b07:	mov    DWORD PTR [ecx+0x4],eax
64007b0a:	mov    DWORD PTR [eax],edx
64007b0c:	mov    DWORD PTR [edx+0x4],eax
64007b0f:	ret    0x4
64007b12:	mov    ecx,DWORD PTR [edx+0x4]
64007b15:	cmp    edx,DWORD PTR [ecx]
64007b17:	jne    0x64007b23
64007b19:	mov    DWORD PTR [ecx],eax
64007b1b:	mov    DWORD PTR [eax],edx
64007b1d:	mov    DWORD PTR [edx+0x4],eax
64007b20:	ret    0x4
64007b23:	mov    DWORD PTR [ecx+0x8],eax
64007b26:	mov    DWORD PTR [eax],edx
64007b28:	mov    DWORD PTR [edx+0x4],eax
64007b2b:	ret    0x4
64007b2e:	int3   
64007b2f:	int3   
64007b30:	push   ebp
64007b31:	mov    ebp,esp
64007b33:	push   0xffffffff
64007b35:	push   0x64022b11
64007b3a:	mov    eax,fs:0x0
64007b40:	push   eax
64007b41:	sub    esp,0xc
64007b44:	push   ebx
64007b45:	push   esi
64007b46:	push   edi
64007b47:	mov    eax,ds:0x6402d09c
64007b4c:	xor    eax,ebp
64007b4e:	push   eax
64007b4f:	lea    eax,[ebp-0xc]
64007b52:	mov    fs:0x0,eax
64007b58:	mov    DWORD PTR [ebp-0x10],esp
64007b5b:	push   0x48
64007b5d:	call   0x64012711
64007b62:	mov    esi,eax
64007b64:	mov    DWORD PTR [ebp-0x4],0x0
64007b6b:	add    esp,0x4
64007b6e:	mov    DWORD PTR [ebp-0x14],esi
64007b71:	mov    DWORD PTR [ebp-0x18],esi
64007b74:	test   esi,esi
64007b76:	mov    BYTE PTR [ebp-0x4],0x1
64007b7a:	je     0x64007ba3
64007b7c:	mov    eax,DWORD PTR [ebp+0x8]
64007b7f:	mov    ecx,DWORD PTR [ebp+0xc]
64007b82:	mov    edx,DWORD PTR [ebp+0x10]
64007b85:	mov    DWORD PTR [esi],eax
64007b87:	mov    eax,DWORD PTR [ebp+0x14]
64007b8a:	mov    DWORD PTR [esi+0x4],ecx
64007b8d:	push   eax
64007b8e:	lea    ecx,[esi+0xc]
64007b91:	mov    DWORD PTR [esi+0x8],edx
64007b94:	call   0x640080b0
64007b99:	mov    cl,BYTE PTR [ebp+0x18]
64007b9c:	mov    BYTE PTR [esi+0x44],cl
64007b9f:	mov    BYTE PTR [esi+0x45],0x0
64007ba3:	mov    eax,esi
64007ba5:	mov    ecx,DWORD PTR [ebp-0xc]
64007ba8:	mov    DWORD PTR fs:0x0,ecx
64007baf:	pop    ecx
64007bb0:	pop    edi
64007bb1:	pop    esi
64007bb2:	pop    ebx
64007bb3:	mov    esp,ebp
64007bb5:	pop    ebp
64007bb6:	ret    0x14
64007bb9:	mov    edx,DWORD PTR [ebp-0x14]
64007bbc:	push   edx
64007bbd:	call   0x64012332
64007bc2:	add    esp,0x4
64007bc5:	push   0x0
64007bc7:	push   0x0
64007bc9:	call   0x6401277b
64007bce:	int3   
64007bcf:	int3   
64007bd0:	push   ebx
64007bd1:	push   ebp
64007bd2:	push   esi
64007bd3:	mov    esi,DWORD PTR [esp+0x10]
64007bd7:	xor    ebx,ebx
64007bd9:	cmp    BYTE PTR [esi+0x29],bl
64007bdc:	push   edi
64007bdd:	mov    ebp,ecx
64007bdf:	mov    edi,esi
64007be1:	jne    0x64007c1f
64007be3:	mov    eax,DWORD PTR [edi+0x8]
64007be6:	push   eax
64007be7:	mov    ecx,ebp
64007be9:	call   0x64007bd0
64007bee:	cmp    DWORD PTR [esi+0x24],0x10
64007bf2:	mov    edi,DWORD PTR [edi]
64007bf4:	jb     0x64007c02
64007bf6:	mov    ecx,DWORD PTR [esi+0x10]
64007bf9:	push   ecx
64007bfa:	call   0x64012332
64007bff:	add    esp,0x4
64007c02:	mov    DWORD PTR [esi+0x24],0xf
64007c09:	mov    DWORD PTR [esi+0x20],ebx
64007c0c:	push   esi
64007c0d:	mov    BYTE PTR [esi+0x10],bl
64007c10:	call   0x64012332
64007c15:	add    esp,0x4
64007c18:	cmp    BYTE PTR [edi+0x29],bl
64007c1b:	mov    esi,edi
64007c1d:	je     0x64007be3
64007c1f:	pop    edi
64007c20:	pop    esi
64007c21:	pop    ebp
64007c22:	pop    ebx
64007c23:	ret    0x4
64007c26:	int3   
64007c27:	int3   
64007c28:	int3   
64007c29:	int3   
64007c2a:	int3   
64007c2b:	int3   
64007c2c:	int3   
64007c2d:	int3   
64007c2e:	int3   
64007c2f:	int3   
64007c30:	push   ebp
64007c31:	mov    ebp,esp
64007c33:	and    esp,0xfffffff8
64007c36:	sub    esp,0x14
64007c39:	push   ebx
64007c3a:	push   esi
64007c3b:	push   edi
64007c3c:	mov    edi,ecx
64007c3e:	mov    eax,DWORD PTR [edi+0x4]
64007c41:	mov    ebx,DWORD PTR [eax]
64007c43:	mov    eax,DWORD PTR [ebp+0xc]
64007c46:	test   eax,eax
64007c48:	je     0x64007c4e
64007c4a:	cmp    eax,edi
64007c4c:	je     0x64007c53
64007c4e:	call   0x640126e8
64007c53:	mov    esi,DWORD PTR [ebp+0x10]
64007c56:	cmp    esi,ebx
64007c58:	jne    0x64007cb0
64007c5a:	mov    eax,DWORD PTR [ebp+0x14]
64007c5d:	test   eax,eax
64007c5f:	mov    ebx,DWORD PTR [edi+0x4]
64007c62:	je     0x64007c68
64007c64:	cmp    eax,edi
64007c66:	je     0x64007c6d
64007c68:	call   0x640126e8
64007c6d:	cmp    DWORD PTR [ebp+0x18],ebx
64007c70:	jne    0x64007cb0
64007c72:	mov    ecx,DWORD PTR [edi+0x4]
64007c75:	mov    edx,DWORD PTR [ecx+0x4]
64007c78:	push   edx
64007c79:	mov    ecx,edi
64007c7b:	call   0x64008830
64007c80:	mov    eax,DWORD PTR [edi+0x4]
64007c83:	mov    DWORD PTR [eax+0x4],eax
64007c86:	mov    eax,DWORD PTR [edi+0x4]
64007c89:	mov    DWORD PTR [edi+0x8],0x0
64007c90:	mov    DWORD PTR [eax],eax
64007c92:	mov    eax,DWORD PTR [edi+0x4]
64007c95:	mov    DWORD PTR [eax+0x8],eax
64007c98:	mov    eax,DWORD PTR [edi+0x4]
64007c9b:	mov    ecx,DWORD PTR [eax]
64007c9d:	mov    eax,DWORD PTR [ebp+0x8]
64007ca0:	mov    DWORD PTR [eax+0x4],ecx
64007ca3:	mov    DWORD PTR [eax],edi
64007ca5:	pop    edi
64007ca6:	pop    esi
64007ca7:	pop    ebx
64007ca8:	mov    esp,ebp
64007caa:	pop    ebp
64007cab:	ret    0x14
64007cae:	mov    edi,edi
64007cb0:	mov    ebx,DWORD PTR [ebp+0xc]
64007cb3:	test   ebx,ebx
64007cb5:	je     0x64007cbc
64007cb7:	cmp    ebx,DWORD PTR [ebp+0x14]
64007cba:	je     0x64007cc1
64007cbc:	call   0x640126e8
64007cc1:	cmp    esi,DWORD PTR [ebp+0x18]
64007cc4:	je     0x64007d2e
64007cc6:	test   ebx,ebx
64007cc8:	mov    DWORD PTR [esp+0x14],esi
64007ccc:	jne    0x64007cd3
64007cce:	call   0x640126e8
64007cd3:	cmp    BYTE PTR [esi+0x45],0x0
64007cd7:	je     0x64007ce0
64007cd9:	call   0x640126e8
64007cde:	jmp    0x64007d1a
64007ce0:	mov    eax,DWORD PTR [esi+0x8]
64007ce3:	cmp    BYTE PTR [eax+0x45],0x0
64007ce7:	jne    0x64007cff
64007ce9:	mov    esi,eax
64007ceb:	mov    eax,DWORD PTR [esi]
64007ced:	cmp    BYTE PTR [eax+0x45],0x0
64007cf1:	jne    0x64007d1a
64007cf3:	mov    esi,eax
64007cf5:	mov    eax,DWORD PTR [esi]
64007cf7:	cmp    BYTE PTR [eax+0x45],0x0
64007cfb:	je     0x64007cf3
64007cfd:	jmp    0x64007d1a
64007cff:	mov    eax,DWORD PTR [esi+0x4]
64007d02:	cmp    BYTE PTR [eax+0x45],0x0
64007d06:	jne    0x64007d18
64007d08:	cmp    esi,DWORD PTR [eax+0x8]
64007d0b:	jne    0x64007d18
64007d0d:	mov    esi,eax
64007d0f:	mov    eax,DWORD PTR [eax+0x4]
64007d12:	cmp    BYTE PTR [eax+0x45],0x0
64007d16:	je     0x64007d08
64007d18:	mov    esi,eax
64007d1a:	mov    edx,DWORD PTR [esp+0x14]
64007d1e:	push   edx
64007d1f:	push   ebx
64007d20:	lea    eax,[esp+0x20]
64007d24:	push   eax
64007d25:	mov    ecx,edi
64007d27:	call   0x64008130
64007d2c:	jmp    0x64007cb0
64007d2e:	mov    eax,DWORD PTR [ebp+0x8]
64007d31:	pop    edi
64007d32:	mov    DWORD PTR [eax+0x4],esi
64007d35:	pop    esi
64007d36:	mov    DWORD PTR [eax],ebx
64007d38:	pop    ebx
64007d39:	mov    esp,ebp
64007d3b:	pop    ebp
64007d3c:	ret    0x14
64007d3f:	int3   
64007d40:	push   ebp
64007d41:	mov    ebp,esp
64007d43:	push   0xffffffff
64007d45:	push   0x640227e0
64007d4a:	mov    eax,fs:0x0
64007d50:	push   eax
64007d51:	sub    esp,0xc
64007d54:	push   ebx
64007d55:	push   esi
64007d56:	push   edi
64007d57:	mov    eax,ds:0x6402d09c
64007d5c:	xor    eax,ebp
64007d5e:	push   eax
64007d5f:	lea    eax,[ebp-0xc]
64007d62:	mov    fs:0x0,eax
64007d68:	mov    DWORD PTR [ebp-0x10],esp
64007d6b:	mov    edi,ecx
64007d6d:	mov    DWORD PTR [ebp-0x14],edi
64007d70:	mov    eax,DWORD PTR [ebp+0x8]
64007d73:	mov    esi,eax
64007d75:	or     esi,0x7
64007d78:	cmp    esi,0x7ffffffe
64007d7e:	jbe    0x64007d84
64007d80:	mov    esi,eax
64007d82:	jmp    0x64007da6
64007d84:	mov    ebx,DWORD PTR [edi+0x18]
64007d87:	mov    eax,0xaaaaaaab
64007d8c:	mul    esi
64007d8e:	mov    ecx,ebx
64007d90:	shr    ecx,1
64007d92:	shr    edx,1
64007d94:	cmp    edx,ecx
64007d96:	jae    0x64007da6
64007d98:	mov    eax,0x7ffffffe
64007d9d:	sub    eax,ecx
64007d9f:	cmp    ebx,eax
64007da1:	ja     0x64007da6
64007da3:	lea    esi,[ecx+ebx*1]
64007da6:	lea    ecx,[esi+0x1]
64007da9:	push   ecx
64007daa:	mov    ecx,edi
64007dac:	mov    DWORD PTR [ebp-0x4],0x0
64007db3:	call   0x64008470
64007db8:	mov    DWORD PTR [ebp+0x8],eax
64007dbb:	jmp    0x64007de5
64007dbd:	mov    eax,DWORD PTR [ebp+0x8]
64007dc0:	mov    ecx,DWORD PTR [ebp-0x14]
64007dc3:	mov    DWORD PTR [ebp-0x18],eax
64007dc6:	add    eax,0x1
64007dc9:	mov    DWORD PTR [ebp-0x10],esp
64007dcc:	push   eax
64007dcd:	mov    BYTE PTR [ebp-0x4],0x2
64007dd1:	call   0x64008470
64007dd6:	mov    DWORD PTR [ebp+0x8],eax
64007dd9:	mov    eax,0x64007ddf
64007dde:	ret    
64007ddf:	mov    edi,DWORD PTR [ebp-0x14]
64007de2:	mov    esi,DWORD PTR [ebp-0x18]
64007de5:	mov    ebx,DWORD PTR [ebp+0xc]
64007de8:	test   ebx,ebx
64007dea:	jbe    0x64007e10
64007dec:	cmp    DWORD PTR [edi+0x18],0x8
64007df0:	jb     0x64007df7
64007df2:	mov    eax,DWORD PTR [edi+0x4]
64007df5:	jmp    0x64007dfa
64007df7:	lea    eax,[edi+0x4]
64007dfa:	mov    ecx,DWORD PTR [ebp+0x8]
64007dfd:	lea    edx,[ebx+ebx*1]
64007e00:	push   edx
64007e01:	push   eax
64007e02:	lea    eax,[esi+esi*1+0x2]
64007e06:	push   eax
64007e07:	push   ecx
64007e08:	call   0x640124e8
64007e0d:	add    esp,0x10
64007e10:	cmp    DWORD PTR [edi+0x18],0x8
64007e14:	jb     0x64007e22
64007e16:	mov    edx,DWORD PTR [edi+0x4]
64007e19:	push   edx
64007e1a:	call   0x64012332
64007e1f:	add    esp,0x4
64007e22:	cmp    esi,0x8
64007e25:	mov    ecx,DWORD PTR [ebp+0x8]
64007e28:	lea    eax,[edi+0x4]
64007e2b:	mov    WORD PTR [eax],0x0
64007e30:	mov    DWORD PTR [eax],ecx
64007e32:	mov    DWORD PTR [edi+0x18],esi
64007e35:	mov    DWORD PTR [edi+0x14],ebx
64007e38:	jb     0x64007e3c
64007e3a:	mov    eax,ecx
64007e3c:	mov    WORD PTR [eax+ebx*2],0x0
64007e42:	mov    ecx,DWORD PTR [ebp-0xc]
64007e45:	mov    DWORD PTR fs:0x0,ecx
64007e4c:	pop    ecx
64007e4d:	pop    edi
64007e4e:	pop    esi
64007e4f:	pop    ebx
64007e50:	mov    esp,ebp
64007e52:	pop    ebp
64007e53:	ret    0x8
64007e56:	mov    esi,DWORD PTR [ebp-0x14]
64007e59:	cmp    DWORD PTR [esi+0x18],0x8
64007e5d:	jb     0x64007e6b
64007e5f:	mov    eax,DWORD PTR [esi+0x4]
64007e62:	push   eax
64007e63:	call   0x64012332
64007e68:	add    esp,0x4
64007e6b:	xor    eax,eax
64007e6d:	push   eax
64007e6e:	mov    DWORD PTR [esi+0x18],0x7
64007e75:	mov    DWORD PTR [esi+0x14],eax
64007e78:	push   eax
64007e79:	mov    WORD PTR [esi+0x4],ax
64007e7d:	call   0x6401277b
64007e82:	int3   
64007e83:	int3   
64007e84:	int3   
64007e85:	int3   
64007e86:	int3   
64007e87:	int3   
64007e88:	int3   
64007e89:	int3   
64007e8a:	int3   
64007e8b:	int3   
64007e8c:	int3   
64007e8d:	int3   
64007e8e:	int3   
64007e8f:	int3   
64007e90:	push   ebp
64007e91:	mov    ebp,esp
64007e93:	and    esp,0xfffffff8
64007e96:	sub    esp,0x14
64007e99:	push   ebx
64007e9a:	push   esi
64007e9b:	push   edi
64007e9c:	mov    edi,ecx
64007e9e:	mov    eax,DWORD PTR [edi+0x4]
64007ea1:	mov    ebx,DWORD PTR [eax]
64007ea3:	mov    eax,DWORD PTR [ebp+0xc]
64007ea6:	test   eax,eax
64007ea8:	je     0x64007eae
64007eaa:	cmp    eax,edi
64007eac:	je     0x64007eb3
64007eae:	call   0x640126e8
64007eb3:	mov    esi,DWORD PTR [ebp+0x10]
64007eb6:	cmp    esi,ebx
64007eb8:	jne    0x64007f10
64007eba:	mov    eax,DWORD PTR [ebp+0x14]
64007ebd:	test   eax,eax
64007ebf:	mov    ebx,DWORD PTR [edi+0x4]
64007ec2:	je     0x64007ec8
64007ec4:	cmp    eax,edi
64007ec6:	je     0x64007ecd
64007ec8:	call   0x640126e8
64007ecd:	cmp    DWORD PTR [ebp+0x18],ebx
64007ed0:	jne    0x64007f10
64007ed2:	mov    ecx,DWORD PTR [edi+0x4]
64007ed5:	mov    edx,DWORD PTR [ecx+0x4]
64007ed8:	push   edx
64007ed9:	mov    ecx,edi
64007edb:	call   0x640088d0
64007ee0:	mov    eax,DWORD PTR [edi+0x4]
64007ee3:	mov    DWORD PTR [eax+0x4],eax
64007ee6:	mov    eax,DWORD PTR [edi+0x4]
64007ee9:	mov    DWORD PTR [edi+0x8],0x0
64007ef0:	mov    DWORD PTR [eax],eax
64007ef2:	mov    eax,DWORD PTR [edi+0x4]
64007ef5:	mov    DWORD PTR [eax+0x8],eax
64007ef8:	mov    eax,DWORD PTR [edi+0x4]
64007efb:	mov    ecx,DWORD PTR [eax]
64007efd:	mov    eax,DWORD PTR [ebp+0x8]
64007f00:	mov    DWORD PTR [eax+0x4],ecx
64007f03:	mov    DWORD PTR [eax],edi
64007f05:	pop    edi
64007f06:	pop    esi
64007f07:	pop    ebx
64007f08:	mov    esp,ebp
64007f0a:	pop    ebp
64007f0b:	ret    0x14
64007f0e:	mov    edi,edi
64007f10:	mov    ebx,DWORD PTR [ebp+0xc]
64007f13:	test   ebx,ebx
64007f15:	je     0x64007f1c
64007f17:	cmp    ebx,DWORD PTR [ebp+0x14]
64007f1a:	je     0x64007f21
64007f1c:	call   0x640126e8
64007f21:	cmp    esi,DWORD PTR [ebp+0x18]
64007f24:	je     0x64007f8e
64007f26:	test   ebx,ebx
64007f28:	mov    DWORD PTR [esp+0x14],esi
64007f2c:	jne    0x64007f33
64007f2e:	call   0x640126e8
64007f33:	cmp    BYTE PTR [esi+0x45],0x0
64007f37:	je     0x64007f40
64007f39:	call   0x640126e8
64007f3e:	jmp    0x64007f7a
64007f40:	mov    eax,DWORD PTR [esi+0x8]
64007f43:	cmp    BYTE PTR [eax+0x45],0x0
64007f47:	jne    0x64007f5f
64007f49:	mov    esi,eax
64007f4b:	mov    eax,DWORD PTR [esi]
64007f4d:	cmp    BYTE PTR [eax+0x45],0x0
64007f51:	jne    0x64007f7a
64007f53:	mov    esi,eax
64007f55:	mov    eax,DWORD PTR [esi]
64007f57:	cmp    BYTE PTR [eax+0x45],0x0
64007f5b:	je     0x64007f53
64007f5d:	jmp    0x64007f7a
64007f5f:	mov    eax,DWORD PTR [esi+0x4]
64007f62:	cmp    BYTE PTR [eax+0x45],0x0
64007f66:	jne    0x64007f78
64007f68:	cmp    esi,DWORD PTR [eax+0x8]
64007f6b:	jne    0x64007f78
64007f6d:	mov    esi,eax
64007f6f:	mov    eax,DWORD PTR [eax+0x4]
64007f72:	cmp    BYTE PTR [eax+0x45],0x0
64007f76:	je     0x64007f68
64007f78:	mov    esi,eax
64007f7a:	mov    edx,DWORD PTR [esp+0x14]
64007f7e:	push   edx
64007f7f:	push   ebx
64007f80:	lea    eax,[esp+0x20]
64007f84:	push   eax
64007f85:	mov    ecx,edi
64007f87:	call   0x640084d0
64007f8c:	jmp    0x64007f10
64007f8e:	mov    eax,DWORD PTR [ebp+0x8]
64007f91:	pop    edi
64007f92:	mov    DWORD PTR [eax+0x4],esi
64007f95:	pop    esi
64007f96:	mov    DWORD PTR [eax],ebx
64007f98:	pop    ebx
64007f99:	mov    esp,ebp
64007f9b:	pop    ebp
64007f9c:	ret    0x14
64007f9f:	int3   
64007fa0:	push   esi
64007fa1:	mov    esi,ecx
64007fa3:	cmp    DWORD PTR [esi],0x0
64007fa6:	jne    0x64007fad
64007fa8:	call   0x640126e8
64007fad:	mov    eax,DWORD PTR [esi+0x4]
64007fb0:	cmp    BYTE PTR [eax+0x45],0x0
64007fb4:	je     0x64007fc8
64007fb6:	mov    eax,DWORD PTR [eax+0x8]
64007fb9:	mov    DWORD PTR [esi+0x4],eax
64007fbc:	cmp    BYTE PTR [eax+0x45],0x0
64007fc0:	je     0x64008027
64007fc2:	pop    esi
64007fc3:	jmp    0x640126e8
64007fc8:	mov    ecx,DWORD PTR [eax]
64007fca:	cmp    BYTE PTR [ecx+0x45],0x0
64007fce:	jne    0x64007ff0
64007fd0:	mov    eax,DWORD PTR [ecx+0x8]
64007fd3:	cmp    BYTE PTR [eax+0x45],0x0
64007fd7:	jne    0x64007feb
64007fd9:	lea    esp,[esp+0x0]
64007fe0:	mov    ecx,eax
64007fe2:	mov    eax,DWORD PTR [ecx+0x8]
64007fe5:	cmp    BYTE PTR [eax+0x45],0x0
64007fe9:	je     0x64007fe0
64007feb:	mov    DWORD PTR [esi+0x4],ecx
64007fee:	pop    esi
64007fef:	ret    
64007ff0:	mov    eax,DWORD PTR [eax+0x4]
64007ff3:	cmp    BYTE PTR [eax+0x45],0x0
64007ff7:	jne    0x64008015
64007ff9:	lea    esp,[esp+0x0]
64008000:	mov    ecx,DWORD PTR [esi+0x4]
64008003:	cmp    ecx,DWORD PTR [eax]
64008005:	jne    0x64008015
64008007:	mov    DWORD PTR [esi+0x4],eax
6400800a:	mov    edx,eax
6400800c:	mov    eax,DWORD PTR [edx+0x4]
6400800f:	cmp    BYTE PTR [eax+0x45],0x0
64008013:	je     0x64008000
64008015:	mov    ecx,DWORD PTR [esi+0x4]
64008018:	cmp    BYTE PTR [ecx+0x45],0x0
6400801c:	je     0x64008024
6400801e:	pop    esi
6400801f:	jmp    0x640126e8
64008024:	mov    DWORD PTR [esi+0x4],eax
64008027:	pop    esi
64008028:	ret    
64008029:	int3   
6400802a:	int3   
6400802b:	int3   
6400802c:	int3   
6400802d:	int3   
6400802e:	int3   
6400802f:	int3   
64008030:	push   0xffffffff
64008032:	push   0x640227b8
64008037:	mov    eax,fs:0x0
6400803d:	push   eax
6400803e:	push   ecx
6400803f:	push   ebx
64008040:	push   esi
64008041:	push   edi
64008042:	mov    eax,ds:0x6402d09c
64008047:	xor    eax,esp
64008049:	push   eax
6400804a:	lea    eax,[esp+0x14]
6400804e:	mov    fs:0x0,eax
64008054:	mov    esi,ecx
64008056:	mov    DWORD PTR [esp+0x10],esi
6400805a:	mov    edi,DWORD PTR [esp+0x24]
6400805e:	xor    ebx,ebx
64008060:	push   0xffffffff
64008062:	push   ebx
64008063:	mov    DWORD PTR [esi+0x18],0xf
6400806a:	mov    DWORD PTR [esi+0x14],ebx
6400806d:	push   edi
6400806e:	mov    BYTE PTR [esi+0x4],bl
64008071:	call   0x64001780
64008076:	push   0xffffffff
64008078:	lea    ecx,[esi+0x1c]
6400807b:	mov    DWORD PTR [esp+0x20],ebx
6400807f:	lea    eax,[edi+0x1c]
64008082:	push   ebx
64008083:	mov    DWORD PTR [ecx+0x18],0xf
6400808a:	mov    DWORD PTR [ecx+0x14],ebx
6400808d:	push   eax
6400808e:	mov    BYTE PTR [ecx+0x4],bl
64008091:	call   0x64001780
64008096:	mov    eax,esi
64008098:	mov    ecx,DWORD PTR [esp+0x14]
6400809c:	mov    DWORD PTR fs:0x0,ecx
640080a3:	pop    ecx
640080a4:	pop    edi
640080a5:	pop    esi
640080a6:	pop    ebx
640080a7:	add    esp,0x10
640080aa:	ret    0x4
640080ad:	int3   
640080ae:	int3   
640080af:	int3   
640080b0:	push   0xffffffff
640080b2:	push   0x64022ad8
640080b7:	mov    eax,fs:0x0
640080bd:	push   eax
640080be:	push   ecx
640080bf:	push   ebx
640080c0:	push   esi
640080c1:	push   edi
640080c2:	mov    eax,ds:0x6402d09c
640080c7:	xor    eax,esp
640080c9:	push   eax
640080ca:	lea    eax,[esp+0x14]
640080ce:	mov    fs:0x0,eax
640080d4:	mov    esi,ecx
640080d6:	mov    DWORD PTR [esp+0x10],esi
640080da:	mov    ebx,DWORD PTR [esp+0x24]
640080de:	xor    edi,edi
640080e0:	push   0xffffffff
640080e2:	push   edi
640080e3:	mov    DWORD PTR [esi+0x18],0x7
640080ea:	mov    DWORD PTR [esi+0x14],edi
640080ed:	push   ebx
640080ee:	mov    WORD PTR [esi+0x4],di
640080f2:	call   0x64006f10
640080f7:	push   0xffffffff
640080f9:	lea    ecx,[esi+0x1c]
640080fc:	mov    DWORD PTR [esp+0x20],edi
64008100:	lea    eax,[ebx+0x1c]
64008103:	push   edi
64008104:	mov    DWORD PTR [ecx+0x18],0x7
6400810b:	mov    DWORD PTR [ecx+0x14],edi
6400810e:	push   eax
6400810f:	mov    WORD PTR [ecx+0x4],di
64008113:	call   0x64006f10
64008118:	mov    eax,esi
6400811a:	mov    ecx,DWORD PTR [esp+0x14]
6400811e:	mov    DWORD PTR fs:0x0,ecx
64008125:	pop    ecx
64008126:	pop    edi
64008127:	pop    esi
64008128:	pop    ebx
64008129:	add    esp,0x10
6400812c:	ret    0x4
6400812f:	int3   
64008130:	push   ebp
64008131:	mov    ebp,esp
64008133:	and    esp,0xfffffff8
64008136:	push   0xffffffff
64008138:	push   0x64022bf8
6400813d:	mov    eax,fs:0x0
64008143:	push   eax
64008144:	sub    esp,0x50
64008147:	push   ebx
64008148:	push   esi
64008149:	push   edi
6400814a:	mov    eax,ds:0x6402d09c
6400814f:	xor    eax,esp
64008151:	push   eax
64008152:	lea    eax,[esp+0x60]
64008156:	mov    fs:0x0,eax
6400815c:	mov    DWORD PTR [esp+0x14],ecx
64008160:	mov    edi,DWORD PTR [ebp+0x10]
64008163:	cmp    BYTE PTR [edi+0x45],0x0
64008167:	je     0x640081b5
64008169:	push   0x1b
6400816b:	xor    esi,esi
6400816d:	push   0x640284ac
64008172:	lea    ecx,[esp+0x20]
64008176:	mov    DWORD PTR [esp+0x38],0xf
6400817e:	mov    DWORD PTR [esp+0x34],esi
64008182:	mov    BYTE PTR [esp+0x24],0x0
64008187:	call   0x64001860
6400818c:	lea    eax,[esp+0x18]
64008190:	push   eax
64008191:	lea    ecx,[esp+0x38]
64008195:	mov    DWORD PTR [esp+0x6c],esi
64008199:	call   0x64002cb0
6400819e:	push   0x6402ac34
640081a3:	lea    ecx,[esp+0x38]
640081a7:	push   ecx
640081a8:	mov    DWORD PTR [esp+0x3c],0x64025328
640081b0:	call   0x6401277b
640081b5:	lea    ecx,[ebp+0xc]
640081b8:	call   0x64008950
640081bd:	mov    ecx,DWORD PTR [edi]
640081bf:	cmp    BYTE PTR [ecx+0x45],0x0
640081c3:	je     0x640081ca
640081c5:	mov    ebx,DWORD PTR [edi+0x8]
640081c8:	jmp    0x640081e1
640081ca:	mov    edx,DWORD PTR [edi+0x8]
640081cd:	cmp    BYTE PTR [edx+0x45],0x0
640081d1:	je     0x640081d7
640081d3:	mov    ebx,ecx
640081d5:	jmp    0x640081e1
640081d7:	mov    eax,DWORD PTR [ebp+0x10]
640081da:	cmp    eax,edi
640081dc:	mov    ebx,DWORD PTR [eax+0x8]
640081df:	jne    0x6400825d
640081e1:	cmp    BYTE PTR [ebx+0x45],0x0
640081e5:	mov    esi,DWORD PTR [edi+0x4]
640081e8:	jne    0x640081ed
640081ea:	mov    DWORD PTR [ebx+0x4],esi
640081ed:	mov    ecx,DWORD PTR [esp+0x14]
640081f1:	mov    eax,DWORD PTR [ecx+0x4]
640081f4:	cmp    DWORD PTR [eax+0x4],edi
640081f7:	jne    0x640081fe
640081f9:	mov    DWORD PTR [eax+0x4],ebx
640081fc:	jmp    0x64008209
640081fe:	cmp    DWORD PTR [esi],edi
64008200:	jne    0x64008206
64008202:	mov    DWORD PTR [esi],ebx
64008204:	jmp    0x64008209
64008206:	mov    DWORD PTR [esi+0x8],ebx
64008209:	mov    eax,DWORD PTR [ecx+0x4]
6400820c:	cmp    DWORD PTR [eax],edi
6400820e:	jne    0x6400822c
64008210:	cmp    BYTE PTR [ebx+0x45],0x0
64008214:	je     0x6400821a
64008216:	mov    eax,esi
64008218:	jmp    0x64008227
6400821a:	push   ebx
6400821b:	call   0x640088b0
64008220:	mov    ecx,DWORD PTR [esp+0x18]
64008224:	add    esp,0x4
64008227:	mov    edx,DWORD PTR [ecx+0x4]
6400822a:	mov    DWORD PTR [edx],eax
6400822c:	mov    eax,DWORD PTR [ecx+0x4]
6400822f:	cmp    DWORD PTR [eax+0x8],edi
64008232:	jne    0x640082bc
64008238:	cmp    BYTE PTR [ebx+0x45],0x0
6400823c:	je     0x64008248
6400823e:	mov    edx,DWORD PTR [ecx+0x4]
64008241:	mov    eax,esi
64008243:	mov    DWORD PTR [edx+0x8],eax
64008246:	jmp    0x640082bc
64008248:	push   ebx
64008249:	call   0x64008450
6400824e:	mov    ecx,DWORD PTR [esp+0x18]
64008252:	mov    edx,DWORD PTR [ecx+0x4]
64008255:	add    esp,0x4
64008258:	mov    DWORD PTR [edx+0x8],eax
6400825b:	jmp    0x640082bc
6400825d:	mov    DWORD PTR [ecx+0x4],eax
64008260:	mov    ecx,DWORD PTR [edi]
64008262:	mov    DWORD PTR [eax],ecx
64008264:	cmp    eax,DWORD PTR [edi+0x8]
64008267:	jne    0x6400826d
64008269:	mov    esi,eax
6400826b:	jmp    0x64008287
6400826d:	cmp    BYTE PTR [ebx+0x45],0x0
64008271:	mov    esi,DWORD PTR [eax+0x4]
64008274:	jne    0x64008279
64008276:	mov    DWORD PTR [ebx+0x4],esi
64008279:	mov    DWORD PTR [esi],ebx
6400827b:	mov    edx,DWORD PTR [edi+0x8]
6400827e:	mov    DWORD PTR [eax+0x8],edx
64008281:	mov    ecx,DWORD PTR [edi+0x8]
64008284:	mov    DWORD PTR [ecx+0x4],eax
64008287:	mov    edx,DWORD PTR [esp+0x14]
6400828b:	mov    ecx,DWORD PTR [edx+0x4]
6400828e:	cmp    DWORD PTR [ecx+0x4],edi
64008291:	jne    0x64008298
64008293:	mov    DWORD PTR [ecx+0x4],eax
64008296:	jmp    0x640082a6
64008298:	mov    ecx,DWORD PTR [edi+0x4]
6400829b:	cmp    DWORD PTR [ecx],edi
6400829d:	jne    0x640082a3
6400829f:	mov    DWORD PTR [ecx],eax
640082a1:	jmp    0x640082a6
640082a3:	mov    DWORD PTR [ecx+0x8],eax
640082a6:	mov    ecx,DWORD PTR [edi+0x4]
640082a9:	mov    DWORD PTR [eax+0x4],ecx
640082ac:	mov    cl,BYTE PTR [eax+0x44]
640082af:	mov    dl,BYTE PTR [edi+0x44]
640082b2:	mov    BYTE PTR [eax+0x44],dl
640082b5:	mov    BYTE PTR [edi+0x44],cl
640082b8:	mov    ecx,DWORD PTR [esp+0x14]
640082bc:	cmp    BYTE PTR [edi+0x44],0x1
640082c0:	jne    0x640083d1
640082c6:	mov    eax,DWORD PTR [ecx+0x4]
640082c9:	cmp    ebx,DWORD PTR [eax+0x4]
640082cc:	je     0x640083cd
640082d2:	cmp    BYTE PTR [ebx+0x44],0x1
640082d6:	jne    0x640083cd
640082dc:	mov    eax,DWORD PTR [esi]
640082de:	cmp    ebx,eax
640082e0:	jne    0x64008350
640082e2:	mov    eax,DWORD PTR [esi+0x8]
640082e5:	cmp    BYTE PTR [eax+0x44],0x0
640082e9:	jne    0x64008300
640082eb:	mov    BYTE PTR [eax+0x44],0x1
640082ef:	push   esi
640082f0:	mov    BYTE PTR [esi+0x44],0x0
640082f4:	call   0x64007ae0
640082f9:	mov    eax,DWORD PTR [esi+0x8]
640082fc:	mov    ecx,DWORD PTR [esp+0x14]
64008300:	cmp    BYTE PTR [eax+0x45],0x0
64008304:	jne    0x64008385
64008306:	mov    edx,DWORD PTR [eax]
64008308:	cmp    BYTE PTR [edx+0x44],0x1
6400830c:	jne    0x64008317
6400830e:	mov    edx,DWORD PTR [eax+0x8]
64008311:	cmp    BYTE PTR [edx+0x44],0x1
64008315:	je     0x64008381
64008317:	mov    edx,DWORD PTR [eax+0x8]
6400831a:	cmp    BYTE PTR [edx+0x44],0x1
6400831e:	jne    0x64008337
64008320:	mov    edx,DWORD PTR [eax]
64008322:	mov    BYTE PTR [edx+0x44],0x1
64008326:	push   eax
64008327:	mov    BYTE PTR [eax+0x44],0x0
6400832b:	call   0x640078e0
64008330:	mov    eax,DWORD PTR [esi+0x8]
64008333:	mov    ecx,DWORD PTR [esp+0x14]
64008337:	mov    dl,BYTE PTR [esi+0x44]
6400833a:	mov    BYTE PTR [eax+0x44],dl
6400833d:	mov    BYTE PTR [esi+0x44],0x1
64008341:	mov    eax,DWORD PTR [eax+0x8]
64008344:	push   esi
64008345:	mov    BYTE PTR [eax+0x44],0x1
64008349:	call   0x64007ae0
6400834e:	jmp    0x640083cd
64008350:	cmp    BYTE PTR [eax+0x44],0x0
64008354:	jne    0x6400836a
64008356:	mov    BYTE PTR [eax+0x44],0x1
6400835a:	push   esi
6400835b:	mov    BYTE PTR [esi+0x44],0x0
6400835f:	call   0x640078e0
64008364:	mov    eax,DWORD PTR [esi]
64008366:	mov    ecx,DWORD PTR [esp+0x14]
6400836a:	cmp    BYTE PTR [eax+0x45],0x0
6400836e:	jne    0x64008385
64008370:	mov    edx,DWORD PTR [eax+0x8]
64008373:	cmp    BYTE PTR [edx+0x44],0x1
64008377:	jne    0x64008398
64008379:	mov    edx,DWORD PTR [eax]
6400837b:	cmp    BYTE PTR [edx+0x44],0x1
6400837f:	jne    0x64008398
64008381:	mov    BYTE PTR [eax+0x44],0x0
64008385:	mov    eax,DWORD PTR [ecx+0x4]
64008388:	mov    ebx,esi
6400838a:	cmp    ebx,DWORD PTR [eax+0x4]
6400838d:	mov    esi,DWORD PTR [esi+0x4]
64008390:	jne    0x640082d2
64008396:	jmp    0x640083cd
64008398:	mov    edx,DWORD PTR [eax]
6400839a:	cmp    BYTE PTR [edx+0x44],0x1
6400839e:	jne    0x640083b7
640083a0:	mov    edx,DWORD PTR [eax+0x8]
640083a3:	mov    BYTE PTR [edx+0x44],0x1
640083a7:	push   eax
640083a8:	mov    BYTE PTR [eax+0x44],0x0
640083ac:	call   0x64007ae0
640083b1:	mov    eax,DWORD PTR [esi]
640083b3:	mov    ecx,DWORD PTR [esp+0x14]
640083b7:	mov    dl,BYTE PTR [esi+0x44]
640083ba:	mov    BYTE PTR [eax+0x44],dl
640083bd:	mov    BYTE PTR [esi+0x44],0x1
640083c1:	mov    eax,DWORD PTR [eax]
640083c3:	push   esi
640083c4:	mov    BYTE PTR [eax+0x44],0x1
640083c8:	call   0x640078e0
640083cd:	mov    BYTE PTR [ebx+0x44],0x1
640083d1:	cmp    DWORD PTR [edi+0x40],0x10
640083d5:	jb     0x640083e3
640083d7:	mov    ecx,DWORD PTR [edi+0x2c]
640083da:	push   ecx
640083db:	call   0x64012332
640083e0:	add    esp,0x4
640083e3:	xor    esi,esi
640083e5:	mov    ebx,0xf
640083ea:	mov    DWORD PTR [edi+0x40],ebx
640083ed:	mov    DWORD PTR [edi+0x3c],esi
640083f0:	mov    BYTE PTR [edi+0x2c],0x0
640083f4:	cmp    DWORD PTR [edi+0x24],0x10
640083f8:	jb     0x64008406
640083fa:	mov    edx,DWORD PTR [edi+0x10]
640083fd:	push   edx
640083fe:	call   0x64012332
64008403:	add    esp,0x4
64008406:	mov    DWORD PTR [edi+0x24],ebx
64008409:	mov    DWORD PTR [edi+0x20],esi
6400840c:	push   edi
6400840d:	mov    BYTE PTR [edi+0x10],0x0
64008411:	call   0x64012332
64008416:	mov    ecx,DWORD PTR [esp+0x18]
6400841a:	mov    eax,DWORD PTR [ecx+0x8]
6400841d:	add    esp,0x4
64008420:	cmp    eax,esi
64008422:	jbe    0x6400842a
64008424:	add    eax,0xffffffff
64008427:	mov    DWORD PTR [ecx+0x8],eax
6400842a:	mov    eax,DWORD PTR [ebp+0x8]
6400842d:	mov    ecx,DWORD PTR [ebp+0xc]
64008430:	mov    edx,DWORD PTR [ebp+0x10]
64008433:	mov    DWORD PTR [eax],ecx
64008435:	mov    DWORD PTR [eax+0x4],edx
64008438:	mov    ecx,DWORD PTR [esp+0x60]
6400843c:	mov    DWORD PTR fs:0x0,ecx
64008443:	pop    ecx
64008444:	pop    edi
64008445:	pop    esi
64008446:	pop    ebx
64008447:	mov    esp,ebp
64008449:	pop    ebp
6400844a:	ret    0xc
6400844d:	int3   
6400844e:	int3   
6400844f:	int3   
64008450:	mov    eax,DWORD PTR [esp+0x4]
64008454:	mov    ecx,DWORD PTR [eax+0x8]
64008457:	cmp    BYTE PTR [ecx+0x45],0x0
6400845b:	jne    0x6400846b
6400845d:	lea    ecx,[ecx+0x0]
64008460:	mov    eax,ecx
64008462:	mov    ecx,DWORD PTR [eax+0x8]
64008465:	cmp    BYTE PTR [ecx+0x45],0x0
64008469:	je     0x64008460
6400846b:	ret    
6400846c:	int3   
6400846d:	int3   
6400846e:	int3   
6400846f:	int3   
64008470:	mov    ecx,DWORD PTR [esp+0x4]
64008474:	sub    esp,0xc
64008477:	test   ecx,ecx
64008479:	ja     0x6400848f
6400847b:	xor    ecx,ecx
6400847d:	lea    edx,[ecx+ecx*1]
64008480:	push   edx
64008481:	call   0x64012711
64008486:	add    esp,0x4
64008489:	add    esp,0xc
6400848c:	ret    0x4
6400848f:	or     eax,0xffffffff
64008492:	xor    edx,edx
64008494:	div    ecx
64008496:	cmp    eax,0x2
64008499:	jae    0x6400847d
6400849b:	lea    eax,[esp+0x10]
6400849f:	push   eax
640084a0:	lea    ecx,[esp+0x4]
640084a4:	mov    DWORD PTR [esp+0x14],0x0
640084ac:	call   0x6401238d
640084b1:	push   0x6402aba4
640084b6:	lea    ecx,[esp+0x4]
640084ba:	push   ecx
640084bb:	mov    DWORD PTR [esp+0x8],0x64025304
640084c3:	call   0x6401277b
640084c8:	int3   
640084c9:	int3   
640084ca:	int3   
640084cb:	int3   
640084cc:	int3   
640084cd:	int3   
640084ce:	int3   
640084cf:	int3   
640084d0:	push   ebp
640084d1:	mov    ebp,esp
640084d3:	and    esp,0xfffffff8
640084d6:	push   0xffffffff
640084d8:	push   0x64022bc8
640084dd:	mov    eax,fs:0x0
640084e3:	push   eax
640084e4:	sub    esp,0x50
640084e7:	push   ebx
640084e8:	push   esi
640084e9:	push   edi
640084ea:	mov    eax,ds:0x6402d09c
640084ef:	xor    eax,esp
640084f1:	push   eax
640084f2:	lea    eax,[esp+0x60]
640084f6:	mov    fs:0x0,eax
640084fc:	mov    DWORD PTR [esp+0x14],ecx
64008500:	mov    edi,DWORD PTR [ebp+0x10]
64008503:	cmp    BYTE PTR [edi+0x45],0x0
64008507:	je     0x64008555
64008509:	push   0x1b
6400850b:	xor    esi,esi
6400850d:	push   0x640284ac
64008512:	lea    ecx,[esp+0x20]
64008516:	mov    DWORD PTR [esp+0x38],0xf
6400851e:	mov    DWORD PTR [esp+0x34],esi
64008522:	mov    BYTE PTR [esp+0x24],0x0
64008527:	call   0x64001860
6400852c:	lea    eax,[esp+0x18]
64008530:	push   eax
64008531:	lea    ecx,[esp+0x38]
64008535:	mov    DWORD PTR [esp+0x6c],esi
64008539:	call   0x64002cb0
6400853e:	push   0x6402ac34
64008543:	lea    ecx,[esp+0x38]
64008547:	push   ecx
64008548:	mov    DWORD PTR [esp+0x3c],0x64025328
64008550:	call   0x6401277b
64008555:	lea    ecx,[ebp+0xc]
64008558:	call   0x64008950
6400855d:	mov    ecx,DWORD PTR [edi]
6400855f:	cmp    BYTE PTR [ecx+0x45],0x0
64008563:	je     0x6400856a
64008565:	mov    ebx,DWORD PTR [edi+0x8]
64008568:	jmp    0x64008581
6400856a:	mov    edx,DWORD PTR [edi+0x8]
6400856d:	cmp    BYTE PTR [edx+0x45],0x0
64008571:	je     0x64008577
64008573:	mov    ebx,ecx
64008575:	jmp    0x64008581
64008577:	mov    eax,DWORD PTR [ebp+0x10]
6400857a:	cmp    eax,edi
6400857c:	mov    ebx,DWORD PTR [eax+0x8]
6400857f:	jne    0x640085fd
64008581:	cmp    BYTE PTR [ebx+0x45],0x0
64008585:	mov    esi,DWORD PTR [edi+0x4]
64008588:	jne    0x6400858d
6400858a:	mov    DWORD PTR [ebx+0x4],esi
6400858d:	mov    ecx,DWORD PTR [esp+0x14]
64008591:	mov    eax,DWORD PTR [ecx+0x4]
64008594:	cmp    DWORD PTR [eax+0x4],edi
64008597:	jne    0x6400859e
64008599:	mov    DWORD PTR [eax+0x4],ebx
6400859c:	jmp    0x640085a9
6400859e:	cmp    DWORD PTR [esi],edi
640085a0:	jne    0x640085a6
640085a2:	mov    DWORD PTR [esi],ebx
640085a4:	jmp    0x640085a9
640085a6:	mov    DWORD PTR [esi+0x8],ebx
640085a9:	mov    eax,DWORD PTR [ecx+0x4]
640085ac:	cmp    DWORD PTR [eax],edi
640085ae:	jne    0x640085cc
640085b0:	cmp    BYTE PTR [ebx+0x45],0x0
640085b4:	je     0x640085ba
640085b6:	mov    eax,esi
640085b8:	jmp    0x640085c7
640085ba:	push   ebx
640085bb:	call   0x640088b0
640085c0:	mov    ecx,DWORD PTR [esp+0x18]
640085c4:	add    esp,0x4
640085c7:	mov    edx,DWORD PTR [ecx+0x4]
640085ca:	mov    DWORD PTR [edx],eax
640085cc:	mov    eax,DWORD PTR [ecx+0x4]
640085cf:	cmp    DWORD PTR [eax+0x8],edi
640085d2:	jne    0x6400865c
640085d8:	cmp    BYTE PTR [ebx+0x45],0x0
640085dc:	je     0x640085e8
640085de:	mov    edx,DWORD PTR [ecx+0x4]
640085e1:	mov    eax,esi
640085e3:	mov    DWORD PTR [edx+0x8],eax
640085e6:	jmp    0x6400865c
640085e8:	push   ebx
640085e9:	call   0x64008450
640085ee:	mov    ecx,DWORD PTR [esp+0x18]
640085f2:	mov    edx,DWORD PTR [ecx+0x4]
640085f5:	add    esp,0x4
640085f8:	mov    DWORD PTR [edx+0x8],eax
640085fb:	jmp    0x6400865c
640085fd:	mov    DWORD PTR [ecx+0x4],eax
64008600:	mov    ecx,DWORD PTR [edi]
64008602:	mov    DWORD PTR [eax],ecx
64008604:	cmp    eax,DWORD PTR [edi+0x8]
64008607:	jne    0x6400860d
64008609:	mov    esi,eax
6400860b:	jmp    0x64008627
6400860d:	cmp    BYTE PTR [ebx+0x45],0x0
64008611:	mov    esi,DWORD PTR [eax+0x4]
64008614:	jne    0x64008619
64008616:	mov    DWORD PTR [ebx+0x4],esi
64008619:	mov    DWORD PTR [esi],ebx
6400861b:	mov    edx,DWORD PTR [edi+0x8]
6400861e:	mov    DWORD PTR [eax+0x8],edx
64008621:	mov    ecx,DWORD PTR [edi+0x8]
64008624:	mov    DWORD PTR [ecx+0x4],eax
64008627:	mov    edx,DWORD PTR [esp+0x14]
6400862b:	mov    ecx,DWORD PTR [edx+0x4]
6400862e:	cmp    DWORD PTR [ecx+0x4],edi
64008631:	jne    0x64008638
64008633:	mov    DWORD PTR [ecx+0x4],eax
64008636:	jmp    0x64008646
64008638:	mov    ecx,DWORD PTR [edi+0x4]
6400863b:	cmp    DWORD PTR [ecx],edi
6400863d:	jne    0x64008643
6400863f:	mov    DWORD PTR [ecx],eax
64008641:	jmp    0x64008646
64008643:	mov    DWORD PTR [ecx+0x8],eax
64008646:	mov    ecx,DWORD PTR [edi+0x4]
64008649:	mov    DWORD PTR [eax+0x4],ecx
6400864c:	mov    cl,BYTE PTR [eax+0x44]
6400864f:	mov    dl,BYTE PTR [edi+0x44]
64008652:	mov    BYTE PTR [eax+0x44],dl
64008655:	mov    BYTE PTR [edi+0x44],cl
64008658:	mov    ecx,DWORD PTR [esp+0x14]
6400865c:	cmp    BYTE PTR [edi+0x44],0x1
64008660:	jne    0x64008771
64008666:	mov    eax,DWORD PTR [ecx+0x4]
64008669:	cmp    ebx,DWORD PTR [eax+0x4]
6400866c:	je     0x6400876d
64008672:	cmp    BYTE PTR [ebx+0x44],0x1
64008676:	jne    0x6400876d
6400867c:	mov    eax,DWORD PTR [esi]
6400867e:	cmp    ebx,eax
64008680:	jne    0x640086f0
64008682:	mov    eax,DWORD PTR [esi+0x8]
64008685:	cmp    BYTE PTR [eax+0x44],0x0
64008689:	jne    0x640086a0
6400868b:	mov    BYTE PTR [eax+0x44],0x1
6400868f:	push   esi
64008690:	mov    BYTE PTR [esi+0x44],0x0
64008694:	call   0x64007ae0
64008699:	mov    eax,DWORD PTR [esi+0x8]
6400869c:	mov    ecx,DWORD PTR [esp+0x14]
640086a0:	cmp    BYTE PTR [eax+0x45],0x0
640086a4:	jne    0x64008725
640086a6:	mov    edx,DWORD PTR [eax]
640086a8:	cmp    BYTE PTR [edx+0x44],0x1
640086ac:	jne    0x640086b7
640086ae:	mov    edx,DWORD PTR [eax+0x8]
640086b1:	cmp    BYTE PTR [edx+0x44],0x1
640086b5:	je     0x64008721
640086b7:	mov    edx,DWORD PTR [eax+0x8]
640086ba:	cmp    BYTE PTR [edx+0x44],0x1
640086be:	jne    0x640086d7
640086c0:	mov    edx,DWORD PTR [eax]
640086c2:	mov    BYTE PTR [edx+0x44],0x1
640086c6:	push   eax
640086c7:	mov    BYTE PTR [eax+0x44],0x0
640086cb:	call   0x640078e0
640086d0:	mov    eax,DWORD PTR [esi+0x8]
640086d3:	mov    ecx,DWORD PTR [esp+0x14]
640086d7:	mov    dl,BYTE PTR [esi+0x44]
640086da:	mov    BYTE PTR [eax+0x44],dl
640086dd:	mov    BYTE PTR [esi+0x44],0x1
640086e1:	mov    eax,DWORD PTR [eax+0x8]
640086e4:	push   esi
640086e5:	mov    BYTE PTR [eax+0x44],0x1
640086e9:	call   0x64007ae0
640086ee:	jmp    0x6400876d
640086f0:	cmp    BYTE PTR [eax+0x44],0x0
640086f4:	jne    0x6400870a
640086f6:	mov    BYTE PTR [eax+0x44],0x1
640086fa:	push   esi
640086fb:	mov    BYTE PTR [esi+0x44],0x0
640086ff:	call   0x640078e0
64008704:	mov    eax,DWORD PTR [esi]
64008706:	mov    ecx,DWORD PTR [esp+0x14]
6400870a:	cmp    BYTE PTR [eax+0x45],0x0
6400870e:	jne    0x64008725
64008710:	mov    edx,DWORD PTR [eax+0x8]
64008713:	cmp    BYTE PTR [edx+0x44],0x1
64008717:	jne    0x64008738
64008719:	mov    edx,DWORD PTR [eax]
6400871b:	cmp    BYTE PTR [edx+0x44],0x1
6400871f:	jne    0x64008738
64008721:	mov    BYTE PTR [eax+0x44],0x0
64008725:	mov    eax,DWORD PTR [ecx+0x4]
64008728:	mov    ebx,esi
6400872a:	cmp    ebx,DWORD PTR [eax+0x4]
6400872d:	mov    esi,DWORD PTR [esi+0x4]
64008730:	jne    0x64008672
64008736:	jmp    0x6400876d
64008738:	mov    edx,DWORD PTR [eax]
6400873a:	cmp    BYTE PTR [edx+0x44],0x1
6400873e:	jne    0x64008757
64008740:	mov    edx,DWORD PTR [eax+0x8]
64008743:	mov    BYTE PTR [edx+0x44],0x1
64008747:	push   eax
64008748:	mov    BYTE PTR [eax+0x44],0x0
6400874c:	call   0x64007ae0
64008751:	mov    eax,DWORD PTR [esi]
64008753:	mov    ecx,DWORD PTR [esp+0x14]
64008757:	mov    dl,BYTE PTR [esi+0x44]
6400875a:	mov    BYTE PTR [eax+0x44],dl
6400875d:	mov    BYTE PTR [esi+0x44],0x1
64008761:	mov    eax,DWORD PTR [eax]
64008763:	push   esi
64008764:	mov    BYTE PTR [eax+0x44],0x1
64008768:	call   0x640078e0
6400876d:	mov    BYTE PTR [ebx+0x44],0x1
64008771:	cmp    DWORD PTR [edi+0x40],0x8
64008775:	jb     0x64008783
64008777:	mov    ecx,DWORD PTR [edi+0x2c]
6400877a:	push   ecx
6400877b:	call   0x64012332
64008780:	add    esp,0x4
64008783:	xor    esi,esi
64008785:	mov    ebx,0x7
6400878a:	mov    DWORD PTR [edi+0x40],ebx
6400878d:	mov    DWORD PTR [edi+0x3c],esi
64008790:	mov    WORD PTR [edi+0x2c],si
64008794:	cmp    DWORD PTR [edi+0x24],0x8
64008798:	jb     0x640087a6
6400879a:	mov    edx,DWORD PTR [edi+0x10]
6400879d:	push   edx
6400879e:	call   0x64012332
640087a3:	add    esp,0x4
640087a6:	mov    DWORD PTR [edi+0x24],ebx
640087a9:	mov    DWORD PTR [edi+0x20],esi
640087ac:	push   edi
640087ad:	mov    WORD PTR [edi+0x10],si
640087b1:	call   0x64012332
640087b6:	mov    ecx,DWORD PTR [esp+0x18]
640087ba:	mov    eax,DWORD PTR [ecx+0x8]
640087bd:	add    esp,0x4
640087c0:	cmp    eax,esi
640087c2:	jbe    0x640087ca
640087c4:	add    eax,0xffffffff
640087c7:	mov    DWORD PTR [ecx+0x8],eax
640087ca:	mov    eax,DWORD PTR [ebp+0x8]
640087cd:	mov    ecx,DWORD PTR [ebp+0xc]
640087d0:	mov    edx,DWORD PTR [ebp+0x10]
640087d3:	mov    DWORD PTR [eax],ecx
640087d5:	mov    DWORD PTR [eax+0x4],edx
640087d8:	mov    ecx,DWORD PTR [esp+0x60]
640087dc:	mov    DWORD PTR fs:0x0,ecx
640087e3:	pop    ecx
640087e4:	pop    edi
640087e5:	pop    esi
640087e6:	pop    ebx
640087e7:	mov    esp,ebp
640087e9:	pop    ebp
640087ea:	ret    0xc
640087ed:	int3   
640087ee:	int3   
640087ef:	int3   
640087f0:	push   0x48
640087f2:	call   0x64012711
640087f7:	add    esp,0x4
640087fa:	test   eax,eax
640087fc:	je     0x64008804
640087fe:	mov    DWORD PTR [eax],0x0
64008804:	lea    ecx,[eax+0x4]
64008807:	test   ecx,ecx
64008809:	je     0x64008811
6400880b:	mov    DWORD PTR [ecx],0x0
64008811:	lea    ecx,[eax+0x8]
64008814:	test   ecx,ecx
64008816:	je     0x6400881e
64008818:	mov    DWORD PTR [ecx],0x0
6400881e:	mov    BYTE PTR [eax+0x44],0x1
64008822:	mov    BYTE PTR [eax+0x45],0x0
64008826:	ret    
64008827:	int3   
64008828:	int3   
64008829:	int3   
6400882a:	int3   
6400882b:	int3   
6400882c:	int3   
6400882d:	int3   
6400882e:	int3   
6400882f:	int3   
64008830:	push   ecx
64008831:	push   ebx
64008832:	push   esi
64008833:	mov    esi,DWORD PTR [esp+0x10]
64008837:	xor    ebx,ebx
64008839:	cmp    BYTE PTR [esi+0x45],bl
6400883c:	push   edi
6400883d:	mov    DWORD PTR [esp+0xc],ecx
64008841:	mov    edi,esi
64008843:	jne    0x640088a6
64008845:	push   ebp
64008846:	lea    ebp,[ebx+0xf]
64008849:	lea    esp,[esp+0x0]
64008850:	mov    eax,DWORD PTR [edi+0x8]
64008853:	mov    ecx,DWORD PTR [esp+0x10]
64008857:	push   eax
64008858:	call   0x64008830
6400885d:	cmp    DWORD PTR [esi+0x40],0x10
64008861:	mov    edi,DWORD PTR [edi]
64008863:	jb     0x64008871
64008865:	mov    ecx,DWORD PTR [esi+0x2c]
64008868:	push   ecx
64008869:	call   0x64012332
6400886e:	add    esp,0x4
64008871:	mov    DWORD PTR [esi+0x40],ebp
64008874:	mov    DWORD PTR [esi+0x3c],ebx
64008877:	mov    BYTE PTR [esi+0x2c],bl
6400887a:	cmp    DWORD PTR [esi+0x24],0x10
6400887e:	jb     0x6400888c
64008880:	mov    edx,DWORD PTR [esi+0x10]
64008883:	push   edx
64008884:	call   0x64012332
64008889:	add    esp,0x4
6400888c:	mov    DWORD PTR [esi+0x24],ebp
6400888f:	mov    DWORD PTR [esi+0x20],ebx
64008892:	push   esi
64008893:	mov    BYTE PTR [esi+0x10],bl
64008896:	call   0x64012332
6400889b:	add    esp,0x4
6400889e:	cmp    BYTE PTR [edi+0x45],bl
640088a1:	mov    esi,edi
640088a3:	je     0x64008850
640088a5:	pop    ebp
640088a6:	pop    edi
640088a7:	pop    esi
640088a8:	pop    ebx
640088a9:	pop    ecx
640088aa:	ret    0x4
640088ad:	int3   
640088ae:	int3   
640088af:	int3   
640088b0:	mov    eax,DWORD PTR [esp+0x4]
640088b4:	mov    ecx,DWORD PTR [eax]
640088b6:	cmp    BYTE PTR [ecx+0x45],0x0
640088ba:	jne    0x640088ca
640088bc:	lea    esp,[esp+0x0]
640088c0:	mov    eax,ecx
640088c2:	mov    ecx,DWORD PTR [eax]
640088c4:	cmp    BYTE PTR [ecx+0x45],0x0
640088c8:	je     0x640088c0
640088ca:	ret    
640088cb:	int3   
640088cc:	int3   
640088cd:	int3   
640088ce:	int3   
640088cf:	int3   
640088d0:	push   ecx
640088d1:	push   ebx
640088d2:	push   esi
640088d3:	mov    esi,DWORD PTR [esp+0x10]
640088d7:	xor    ebx,ebx
640088d9:	cmp    BYTE PTR [esi+0x45],bl
640088dc:	push   edi
640088dd:	mov    DWORD PTR [esp+0xc],ecx
640088e1:	mov    edi,esi
640088e3:	jne    0x64008948
640088e5:	push   ebp
640088e6:	lea    ebp,[ebx+0x7]
640088e9:	lea    esp,[esp+0x0]
640088f0:	mov    eax,DWORD PTR [edi+0x8]
640088f3:	mov    ecx,DWORD PTR [esp+0x10]
640088f7:	push   eax
640088f8:	call   0x640088d0
640088fd:	cmp    DWORD PTR [esi+0x40],0x8
64008901:	mov    edi,DWORD PTR [edi]
64008903:	jb     0x64008911
64008905:	mov    ecx,DWORD PTR [esi+0x2c]
64008908:	push   ecx
64008909:	call   0x64012332
6400890e:	add    esp,0x4
64008911:	mov    DWORD PTR [esi+0x40],ebp
64008914:	mov    DWORD PTR [esi+0x3c],ebx
64008917:	mov    WORD PTR [esi+0x2c],bx
6400891b:	cmp    DWORD PTR [esi+0x24],0x8
6400891f:	jb     0x6400892d
64008921:	mov    edx,DWORD PTR [esi+0x10]
64008924:	push   edx
64008925:	call   0x64012332
6400892a:	add    esp,0x4
6400892d:	mov    DWORD PTR [esi+0x24],ebp
64008930:	mov    DWORD PTR [esi+0x20],ebx
64008933:	push   esi
64008934:	mov    WORD PTR [esi+0x10],bx
64008938:	call   0x64012332
6400893d:	add    esp,0x4
64008940:	cmp    BYTE PTR [edi+0x45],bl
64008943:	mov    esi,edi
64008945:	je     0x640088f0
64008947:	pop    ebp
64008948:	pop    edi
64008949:	pop    esi
6400894a:	pop    ebx
6400894b:	pop    ecx
6400894c:	ret    0x4
6400894f:	int3   
64008950:	push   esi
64008951:	mov    esi,ecx
64008953:	cmp    DWORD PTR [esi],0x0
64008956:	jne    0x6400895d
64008958:	call   0x640126e8
6400895d:	mov    eax,DWORD PTR [esi+0x4]
64008960:	cmp    BYTE PTR [eax+0x45],0x0
64008964:	je     0x6400896c
64008966:	pop    esi
64008967:	jmp    0x640126e8
6400896c:	mov    ecx,DWORD PTR [eax+0x8]
6400896f:	cmp    BYTE PTR [ecx+0x45],0x0
64008973:	jne    0x6400898f
64008975:	mov    eax,DWORD PTR [ecx]
64008977:	cmp    BYTE PTR [eax+0x45],0x0
6400897b:	jne    0x6400898a
6400897d:	lea    ecx,[ecx+0x0]
64008980:	mov    ecx,eax
64008982:	mov    eax,DWORD PTR [ecx]
64008984:	cmp    BYTE PTR [eax+0x45],0x0
64008988:	je     0x64008980
6400898a:	mov    DWORD PTR [esi+0x4],ecx
6400898d:	pop    esi
6400898e:	ret    
6400898f:	mov    eax,DWORD PTR [eax+0x4]
64008992:	cmp    BYTE PTR [eax+0x45],0x0
64008996:	jne    0x640089ae
64008998:	mov    ecx,DWORD PTR [esi+0x4]
6400899b:	cmp    ecx,DWORD PTR [eax+0x8]
6400899e:	jne    0x640089ae
640089a0:	mov    DWORD PTR [esi+0x4],eax
640089a3:	mov    edx,eax
640089a5:	mov    eax,DWORD PTR [edx+0x4]
640089a8:	cmp    BYTE PTR [eax+0x45],0x0
640089ac:	je     0x64008998
640089ae:	mov    DWORD PTR [esi+0x4],eax
640089b1:	pop    esi
640089b2:	ret    
640089b3:	int3   
640089b4:	int3   
640089b5:	int3   
640089b6:	int3   
640089b7:	int3   
640089b8:	int3   
640089b9:	int3   
640089ba:	int3   
640089bb:	int3   
640089bc:	int3   
640089bd:	int3   
640089be:	int3   
640089bf:	int3   
640089c0:	push   0xffffffff
640089c2:	push   0x64022788
640089c7:	mov    eax,fs:0x0
640089cd:	push   eax
640089ce:	sub    esp,0x20
640089d1:	push   ebx
640089d2:	push   ebp
640089d3:	mov    eax,ds:0x6402d09c
640089d8:	xor    eax,esp
640089da:	push   eax
640089db:	lea    eax,[esp+0x2c]
640089df:	mov    fs:0x0,eax
640089e5:	mov    eax,DWORD PTR [esp+0x3c]
640089e9:	xor    ebx,ebx
640089eb:	push   0xffffffff
640089ed:	push   ebx
640089ee:	push   eax
640089ef:	lea    ecx,[esp+0x1c]
640089f3:	mov    DWORD PTR [esp+0x18],ebx
640089f7:	mov    DWORD PTR [esp+0x34],0xf
640089ff:	mov    DWORD PTR [esp+0x30],ebx
64008a03:	mov    BYTE PTR [esp+0x20],bl
64008a07:	call   0x64001780
64008a0c:	mov    eax,edi
64008a0e:	mov    DWORD PTR [esp+0x34],ebx
64008a12:	lea    ebp,[eax+0x1]
64008a15:	mov    cl,BYTE PTR [eax]
64008a17:	add    eax,0x1
64008a1a:	cmp    cl,bl
64008a1c:	jne    0x64008a15
64008a1e:	sub    eax,ebp
64008a20:	push   eax
64008a21:	push   edi
64008a22:	lea    eax,[esp+0x18]
64008a26:	call   0x64008e40
64008a2b:	push   0xffffffff
64008a2d:	push   ebx
64008a2e:	mov    DWORD PTR [esi+0x18],0xf
64008a35:	mov    DWORD PTR [esi+0x14],ebx
64008a38:	push   eax
64008a39:	mov    ecx,esi
64008a3b:	mov    BYTE PTR [esi+0x4],bl
64008a3e:	call   0x64001780
64008a43:	cmp    DWORD PTR [esp+0x28],0x10
64008a48:	jb     0x64008a57
64008a4a:	mov    ecx,DWORD PTR [esp+0x14]
64008a4e:	push   ecx
64008a4f:	call   0x64012332
64008a54:	add    esp,0x4
64008a57:	mov    eax,esi
64008a59:	mov    ecx,DWORD PTR [esp+0x2c]
64008a5d:	mov    DWORD PTR fs:0x0,ecx
64008a64:	pop    ecx
64008a65:	pop    ebp
64008a66:	pop    ebx
64008a67:	add    esp,0x2c
64008a6a:	ret    
64008a6b:	int3   
64008a6c:	int3   
64008a6d:	int3   
64008a6e:	int3   
64008a6f:	int3   
64008a70:	push   0xffffffff
64008a72:	push   0x64022760
64008a77:	mov    eax,fs:0x0
64008a7d:	push   eax
64008a7e:	push   ecx
64008a7f:	push   esi
64008a80:	mov    eax,ds:0x6402d09c
64008a85:	xor    eax,esp
64008a87:	push   eax
64008a88:	lea    eax,[esp+0xc]
64008a8c:	mov    fs:0x0,eax
64008a92:	mov    esi,DWORD PTR [esp+0x1c]
64008a96:	mov    DWORD PTR [esp+0x8],0x0
64008a9e:	lea    eax,[esp+0x3c]
64008aa2:	push   eax
64008aa3:	lea    ecx,[esp+0x24]
64008aa7:	push   ecx
64008aa8:	mov    ecx,esi
64008aaa:	mov    DWORD PTR [esp+0x1c],0x1
64008ab2:	call   0x64008cb0
64008ab7:	cmp    DWORD PTR [esp+0x38],0x10
64008abc:	jb     0x64008acb
64008abe:	mov    edx,DWORD PTR [esp+0x24]
64008ac2:	push   edx
64008ac3:	call   0x64012332
64008ac8:	add    esp,0x4
64008acb:	cmp    DWORD PTR [esp+0x54],0x10
64008ad0:	mov    DWORD PTR [esp+0x38],0xf
64008ad8:	mov    DWORD PTR [esp+0x34],0x0
64008ae0:	mov    BYTE PTR [esp+0x24],0x0
64008ae5:	jb     0x64008af4
64008ae7:	mov    eax,DWORD PTR [esp+0x40]
64008aeb:	push   eax
64008aec:	call   0x64012332
64008af1:	add    esp,0x4
64008af4:	mov    eax,esi
64008af6:	mov    ecx,DWORD PTR [esp+0xc]
64008afa:	mov    DWORD PTR fs:0x0,ecx
64008b01:	pop    ecx
64008b02:	pop    esi
64008b03:	add    esp,0x10
64008b06:	ret    
64008b07:	int3   
64008b08:	int3   
64008b09:	int3   
64008b0a:	int3   
64008b0b:	int3   
64008b0c:	int3   
64008b0d:	int3   
64008b0e:	int3   
64008b0f:	int3   
64008b10:	push   0xffffffff
64008b12:	push   0x64022728
64008b17:	mov    eax,fs:0x0
64008b1d:	push   eax
64008b1e:	push   ecx
64008b1f:	push   ebx
64008b20:	push   esi
64008b21:	push   edi
64008b22:	mov    eax,ds:0x6402d09c
64008b27:	xor    eax,esp
64008b29:	push   eax
64008b2a:	lea    eax,[esp+0x14]
64008b2e:	mov    fs:0x0,eax
64008b34:	mov    esi,ecx
64008b36:	mov    DWORD PTR [esp+0x10],esi
64008b3a:	mov    edi,DWORD PTR [esp+0x24]
64008b3e:	xor    ebx,ebx
64008b40:	push   0xffffffff
64008b42:	push   ebx
64008b43:	mov    DWORD PTR [esi+0x18],0xf
64008b4a:	mov    DWORD PTR [esi+0x14],ebx
64008b4d:	push   edi
64008b4e:	mov    BYTE PTR [esi+0x4],bl
64008b51:	call   0x64001780
64008b56:	push   0xffffffff
64008b58:	lea    ecx,[esi+0x1c]
64008b5b:	mov    DWORD PTR [esp+0x20],ebx
64008b5f:	lea    eax,[edi+0x1c]
64008b62:	push   ebx
64008b63:	mov    DWORD PTR [ecx+0x18],0xf
64008b6a:	mov    DWORD PTR [ecx+0x14],ebx
64008b6d:	push   eax
64008b6e:	mov    BYTE PTR [ecx+0x4],bl
64008b71:	call   0x64001780
64008b76:	mov    eax,esi
64008b78:	mov    ecx,DWORD PTR [esp+0x14]
64008b7c:	mov    DWORD PTR fs:0x0,ecx
64008b83:	pop    ecx
64008b84:	pop    edi
64008b85:	pop    esi
64008b86:	pop    ebx
64008b87:	add    esp,0x10
64008b8a:	ret    0x4
64008b8d:	int3   
64008b8e:	int3   
64008b8f:	int3   
64008b90:	push   0xffffffff
64008b92:	push   0x64022ab0
64008b97:	mov    eax,fs:0x0
64008b9d:	push   eax
64008b9e:	push   ecx
64008b9f:	push   esi
64008ba0:	mov    eax,ds:0x6402d09c
64008ba5:	xor    eax,esp
64008ba7:	push   eax
64008ba8:	lea    eax,[esp+0xc]
64008bac:	mov    fs:0x0,eax
64008bb2:	mov    esi,DWORD PTR [esp+0x1c]
64008bb6:	mov    DWORD PTR [esp+0x8],0x0
64008bbe:	lea    eax,[esp+0x3c]
64008bc2:	push   eax
64008bc3:	lea    ecx,[esp+0x24]
64008bc7:	push   ecx
64008bc8:	mov    ecx,esi
64008bca:	mov    DWORD PTR [esp+0x1c],0x1
64008bd2:	call   0x64008d30
64008bd7:	cmp    DWORD PTR [esp+0x38],0x8
64008bdc:	jb     0x64008beb
64008bde:	mov    edx,DWORD PTR [esp+0x24]
64008be2:	push   edx
64008be3:	call   0x64012332
64008be8:	add    esp,0x4
64008beb:	cmp    DWORD PTR [esp+0x54],0x8
64008bf0:	mov    DWORD PTR [esp+0x38],0x7
64008bf8:	mov    DWORD PTR [esp+0x34],0x0
64008c00:	mov    WORD PTR [esp+0x24],0x0
64008c07:	jb     0x64008c16
64008c09:	mov    eax,DWORD PTR [esp+0x40]
64008c0d:	push   eax
64008c0e:	call   0x64012332
64008c13:	add    esp,0x4
64008c16:	mov    eax,esi
64008c18:	mov    ecx,DWORD PTR [esp+0xc]
64008c1c:	mov    DWORD PTR fs:0x0,ecx
64008c23:	pop    ecx
64008c24:	pop    esi
64008c25:	add    esp,0x10
64008c28:	ret    
64008c29:	int3   
64008c2a:	int3   
64008c2b:	int3   
64008c2c:	int3   
64008c2d:	int3   
64008c2e:	int3   
64008c2f:	int3   
64008c30:	push   0xffffffff
64008c32:	push   0x64022a78
64008c37:	mov    eax,fs:0x0
64008c3d:	push   eax
64008c3e:	push   ecx
64008c3f:	push   ebx
64008c40:	push   esi
64008c41:	push   edi
64008c42:	mov    eax,ds:0x6402d09c
64008c47:	xor    eax,esp
64008c49:	push   eax
64008c4a:	lea    eax,[esp+0x14]
64008c4e:	mov    fs:0x0,eax
64008c54:	mov    esi,ecx
64008c56:	mov    DWORD PTR [esp+0x10],esi
64008c5a:	mov    ebx,DWORD PTR [esp+0x24]
64008c5e:	xor    edi,edi
64008c60:	push   0xffffffff
64008c62:	push   edi
64008c63:	mov    DWORD PTR [esi+0x18],0x7
64008c6a:	mov    DWORD PTR [esi+0x14],edi
64008c6d:	push   ebx
64008c6e:	mov    WORD PTR [esi+0x4],di
64008c72:	call   0x64006f10
64008c77:	push   0xffffffff
64008c79:	lea    ecx,[esi+0x1c]
64008c7c:	mov    DWORD PTR [esp+0x20],edi
64008c80:	lea    eax,[ebx+0x1c]
64008c83:	push   edi
64008c84:	mov    DWORD PTR [ecx+0x18],0x7
64008c8b:	mov    DWORD PTR [ecx+0x14],edi
64008c8e:	push   eax
64008c8f:	mov    WORD PTR [ecx+0x4],di
64008c93:	call   0x64006f10
64008c98:	mov    eax,esi
64008c9a:	mov    ecx,DWORD PTR [esp+0x14]
64008c9e:	mov    DWORD PTR fs:0x0,ecx
64008ca5:	pop    ecx
64008ca6:	pop    edi
64008ca7:	pop    esi
64008ca8:	pop    ebx
64008ca9:	add    esp,0x10
64008cac:	ret    0x4
64008caf:	int3   
64008cb0:	push   0xffffffff
64008cb2:	push   0x640226f8
64008cb7:	mov    eax,fs:0x0
64008cbd:	push   eax
64008cbe:	push   ecx
64008cbf:	push   ebx
64008cc0:	push   esi
64008cc1:	mov    eax,ds:0x6402d09c
64008cc6:	xor    eax,esp
64008cc8:	push   eax
64008cc9:	lea    eax,[esp+0x10]
64008ccd:	mov    fs:0x0,eax
64008cd3:	mov    esi,ecx
64008cd5:	mov    DWORD PTR [esp+0xc],esi
64008cd9:	mov    eax,DWORD PTR [esp+0x20]
64008cdd:	xor    ebx,ebx
64008cdf:	push   0xffffffff
64008ce1:	push   ebx
64008ce2:	mov    DWORD PTR [esi+0x18],0xf
64008ce9:	mov    DWORD PTR [esi+0x14],ebx
64008cec:	push   eax
64008ced:	mov    BYTE PTR [esi+0x4],bl
64008cf0:	call   0x64001780
64008cf5:	mov    edx,DWORD PTR [esp+0x24]
64008cf9:	push   0xffffffff
64008cfb:	lea    ecx,[esi+0x1c]
64008cfe:	mov    DWORD PTR [esp+0x1c],ebx
64008d02:	push   ebx
64008d03:	mov    DWORD PTR [ecx+0x18],0xf
64008d0a:	mov    DWORD PTR [ecx+0x14],ebx
64008d0d:	push   edx
64008d0e:	mov    BYTE PTR [ecx+0x4],bl
64008d11:	call   0x64001780
64008d16:	mov    eax,esi
64008d18:	mov    ecx,DWORD PTR [esp+0x10]
64008d1c:	mov    DWORD PTR fs:0x0,ecx
64008d23:	pop    ecx
64008d24:	pop    esi
64008d25:	pop    ebx
64008d26:	add    esp,0x10
64008d29:	ret    0x8
64008d2c:	int3   
64008d2d:	int3   
64008d2e:	int3   
64008d2f:	int3   
64008d30:	push   0xffffffff
64008d32:	push   0x64022a48
64008d37:	mov    eax,fs:0x0
64008d3d:	push   eax
64008d3e:	push   ecx
64008d3f:	push   esi
64008d40:	push   edi
64008d41:	mov    eax,ds:0x6402d09c
64008d46:	xor    eax,esp
64008d48:	push   eax
64008d49:	lea    eax,[esp+0x10]
64008d4d:	mov    fs:0x0,eax
64008d53:	mov    esi,ecx
64008d55:	mov    DWORD PTR [esp+0xc],esi
64008d59:	mov    eax,DWORD PTR [esp+0x20]
64008d5d:	xor    edi,edi
64008d5f:	push   0xffffffff
64008d61:	push   edi
64008d62:	mov    DWORD PTR [esi+0x18],0x7
64008d69:	mov    DWORD PTR [esi+0x14],edi
64008d6c:	push   eax
64008d6d:	mov    WORD PTR [esi+0x4],di
64008d71:	call   0x64006f10
64008d76:	mov    edx,DWORD PTR [esp+0x24]
64008d7a:	push   0xffffffff
64008d7c:	lea    ecx,[esi+0x1c]
64008d7f:	mov    DWORD PTR [esp+0x1c],edi
64008d83:	push   edi
64008d84:	mov    DWORD PTR [ecx+0x18],0x7
64008d8b:	mov    DWORD PTR [ecx+0x14],edi
64008d8e:	push   edx
64008d8f:	mov    WORD PTR [ecx+0x4],di
64008d93:	call   0x64006f10
64008d98:	mov    eax,esi
64008d9a:	mov    ecx,DWORD PTR [esp+0x10]
64008d9e:	mov    DWORD PTR fs:0x0,ecx
64008da5:	pop    ecx
64008da6:	pop    edi
64008da7:	pop    esi
64008da8:	add    esp,0x10
64008dab:	ret    0x8
64008dae:	int3   
64008daf:	int3   
64008db0:	push   ebx
64008db1:	push   ebp
64008db2:	push   esi
64008db3:	push   edi
64008db4:	mov    edi,DWORD PTR [esp+0x14]
64008db8:	mov    esi,ecx
64008dba:	cmp    DWORD PTR [esi+0x14],edi
64008dbd:	jae    0x64008dc4
64008dbf:	call   0x640122ee
64008dc4:	mov    eax,DWORD PTR [esi+0x14]
64008dc7:	mov    ebx,DWORD PTR [esp+0x18]
64008dcb:	sub    eax,edi
64008dcd:	cmp    eax,ebx
64008dcf:	jae    0x64008dd3
64008dd1:	mov    ebx,eax
64008dd3:	mov    ebp,DWORD PTR [esp+0x20]
64008dd7:	cmp    ebx,ebp
64008dd9:	mov    edx,ebx
64008ddb:	jb     0x64008ddf
64008ddd:	mov    edx,ebp
64008ddf:	cmp    DWORD PTR [esi+0x18],0x8
64008de3:	jb     0x64008dea
64008de5:	mov    eax,DWORD PTR [esi+0x4]
64008de8:	jmp    0x64008ded
64008dea:	lea    eax,[esi+0x4]
64008ded:	test   edx,edx
64008def:	mov    ecx,DWORD PTR [esp+0x1c]
64008df3:	lea    eax,[eax+edi*2]
64008df6:	jbe    0x64008e1d
64008df8:	mov    si,WORD PTR [eax]
64008dfb:	cmp    si,WORD PTR [ecx]
64008dfe:	jne    0x64008e0d
64008e00:	add    eax,0x2
64008e03:	add    ecx,0x2
64008e06:	sub    edx,0x1
64008e09:	jne    0x64008df8
64008e0b:	jmp    0x64008e1d
64008e0d:	movzx  eax,WORD PTR [eax]
64008e10:	cmp    ax,WORD PTR [ecx]
64008e13:	sbb    eax,eax
64008e15:	and    eax,0xfffffffe
64008e18:	add    eax,0x1
64008e1b:	jne    0x64008e32
64008e1d:	cmp    ebx,ebp
64008e1f:	jae    0x64008e2b
64008e21:	pop    edi
64008e22:	pop    esi
64008e23:	pop    ebp
64008e24:	or     eax,0xffffffff
64008e27:	pop    ebx
64008e28:	ret    0x10
64008e2b:	xor    eax,eax
64008e2d:	cmp    ebx,ebp
64008e2f:	setne  al
64008e32:	pop    edi
64008e33:	pop    esi
64008e34:	pop    ebp
64008e35:	pop    ebx
64008e36:	ret    0x10
64008e39:	int3   
64008e3a:	int3   
64008e3b:	int3   
64008e3c:	int3   
64008e3d:	int3   
64008e3e:	int3   
64008e3f:	int3   
64008e40:	mov    ecx,DWORD PTR [esp+0x4]
64008e44:	push   ebx
64008e45:	push   ebp
64008e46:	mov    ebp,DWORD PTR [esp+0x10]
64008e4a:	push   esi
64008e4b:	mov    esi,eax
64008e4d:	mov    edx,DWORD PTR [esi+0x18]
64008e50:	cmp    edx,0x10
64008e53:	push   edi
64008e54:	lea    ebx,[esi+0x4]
64008e57:	jb     0x64008e5d
64008e59:	mov    eax,DWORD PTR [ebx]
64008e5b:	jmp    0x64008e5f
64008e5d:	mov    eax,ebx
64008e5f:	cmp    ecx,eax
64008e61:	jb     0x64008e90
64008e63:	cmp    edx,0x10
64008e66:	jb     0x64008e6c
64008e68:	mov    eax,DWORD PTR [ebx]
64008e6a:	jmp    0x64008e6e
64008e6c:	mov    eax,ebx
64008e6e:	mov    edi,DWORD PTR [esi+0x14]
64008e71:	add    edi,eax
64008e73:	cmp    edi,ecx
64008e75:	jbe    0x64008e90
64008e77:	cmp    edx,0x10
64008e7a:	jb     0x64008e7e
64008e7c:	mov    ebx,DWORD PTR [ebx]
64008e7e:	sub    ecx,ebx
64008e80:	push   ecx
64008e81:	push   esi
64008e82:	mov    eax,ebp
64008e84:	call   0x640019d0
64008e89:	pop    edi
64008e8a:	pop    esi
64008e8b:	pop    ebp
64008e8c:	pop    ebx
64008e8d:	ret    0x8
64008e90:	mov    eax,DWORD PTR [esi+0x14]
64008e93:	or     ecx,0xffffffff
64008e96:	sub    ecx,eax
64008e98:	cmp    ecx,ebp
64008e9a:	jbe    0x64008ea3
64008e9c:	lea    edx,[eax+ebp*1]
64008e9f:	cmp    edx,eax
64008ea1:	jae    0x64008ea8
64008ea3:	call   0x640122af
64008ea8:	test   ebp,ebp
64008eaa:	jbe    0x64008f20
64008eac:	mov    edi,DWORD PTR [esi+0x14]
64008eaf:	add    edi,ebp
64008eb1:	cmp    edi,0xfffffffe
64008eb4:	jbe    0x64008ebb
64008eb6:	call   0x640122af
64008ebb:	mov    eax,DWORD PTR [esi+0x18]
64008ebe:	cmp    eax,edi
64008ec0:	jae    0x64008ede
64008ec2:	mov    eax,DWORD PTR [esi+0x14]
64008ec5:	push   eax
64008ec6:	push   edi
64008ec7:	mov    ecx,esi
64008ec9:	call   0x64001b60
64008ece:	test   edi,edi
64008ed0:	jbe    0x64008f20
64008ed2:	mov    eax,DWORD PTR [esi+0x18]
64008ed5:	cmp    eax,0x10
64008ed8:	jb     0x64008ef8
64008eda:	mov    edx,DWORD PTR [ebx]
64008edc:	jmp    0x64008efa
64008ede:	test   edi,edi
64008ee0:	jne    0x64008ed0
64008ee2:	cmp    eax,0x10
64008ee5:	mov    DWORD PTR [esi+0x14],edi
64008ee8:	jb     0x64008eec
64008eea:	mov    ebx,DWORD PTR [ebx]
64008eec:	pop    edi
64008eed:	mov    eax,esi
64008eef:	pop    esi
64008ef0:	pop    ebp
64008ef1:	mov    BYTE PTR [ebx],0x0
64008ef4:	pop    ebx
64008ef5:	ret    0x8
64008ef8:	mov    edx,ebx
64008efa:	mov    ecx,DWORD PTR [esi+0x14]
64008efd:	push   ebp
64008efe:	mov    ebp,DWORD PTR [esp+0x18]
64008f02:	sub    eax,ecx
64008f04:	push   ebp
64008f05:	push   eax
64008f06:	add    ecx,edx
64008f08:	push   ecx
64008f09:	call   0x640124e8
64008f0e:	add    esp,0x10
64008f11:	cmp    DWORD PTR [esi+0x18],0x10
64008f15:	mov    DWORD PTR [esi+0x14],edi
64008f18:	jb     0x64008f1c
64008f1a:	mov    ebx,DWORD PTR [ebx]
64008f1c:	mov    BYTE PTR [ebx+edi*1],0x0
64008f20:	pop    edi
64008f21:	mov    eax,esi
64008f23:	pop    esi
64008f24:	pop    ebp
64008f25:	pop    ebx
64008f26:	ret    0x8
64008f29:	int3   
64008f2a:	int3   
64008f2b:	int3   
64008f2c:	int3   
64008f2d:	int3   
64008f2e:	int3   
64008f2f:	int3   
64008f30:	push   ebp
64008f31:	mov    ebp,DWORD PTR [esp+0x14]
64008f35:	push   esi
64008f36:	mov    esi,DWORD PTR [esp+0x10]
64008f3a:	push   edi
64008f3b:	mov    edi,DWORD PTR [esp+0x10]
64008f3f:	nop
64008f40:	test   edi,edi
64008f42:	je     0x64008f4a
64008f44:	cmp    edi,DWORD PTR [esp+0x18]
64008f48:	je     0x64008f4f
64008f4a:	call   0x640126e8
64008f4f:	cmp    esi,ebp
64008f51:	je     0x64008fab
64008f53:	add    DWORD PTR [ebx],0x1
64008f56:	test   edi,edi
64008f58:	jne    0x64008f5f
64008f5a:	call   0x640126e8
64008f5f:	cmp    BYTE PTR [esi+0x29],0x0
64008f63:	je     0x64008f6c
64008f65:	call   0x640126e8
64008f6a:	jmp    0x64008f40
64008f6c:	mov    ecx,DWORD PTR [esi+0x8]
64008f6f:	cmp    BYTE PTR [ecx+0x29],0x0
64008f73:	jne    0x64008f8e
64008f75:	mov    eax,DWORD PTR [ecx]
64008f77:	cmp    BYTE PTR [eax+0x29],0x0
64008f7b:	jne    0x64008f8a
64008f7d:	lea    ecx,[ecx+0x0]
64008f80:	mov    ecx,eax
64008f82:	mov    eax,DWORD PTR [ecx]
64008f84:	cmp    BYTE PTR [eax+0x29],0x0
64008f88:	je     0x64008f80
64008f8a:	mov    esi,ecx
64008f8c:	jmp    0x64008f40
64008f8e:	mov    eax,DWORD PTR [esi+0x4]
64008f91:	cmp    BYTE PTR [eax+0x29],0x0
64008f95:	jne    0x64008fa7
64008f97:	cmp    esi,DWORD PTR [eax+0x8]
64008f9a:	jne    0x64008fa7
64008f9c:	mov    esi,eax
64008f9e:	mov    eax,DWORD PTR [eax+0x4]
64008fa1:	cmp    BYTE PTR [eax+0x29],0x0
64008fa5:	je     0x64008f97
64008fa7:	mov    esi,eax
64008fa9:	jmp    0x64008f40
64008fab:	pop    edi
64008fac:	pop    esi
64008fad:	pop    ebp
64008fae:	ret    
64008faf:	int3   
64008fb0:	push   esi
64008fb1:	mov    esi,ecx
64008fb3:	call   0x6400c8e0
64008fb8:	call   eax
64008fba:	mov    DWORD PTR [esi],eax
64008fbc:	mov    eax,esi
64008fbe:	pop    esi
64008fbf:	ret    
64008fc0:	mov    eax,DWORD PTR [ecx]
64008fc2:	push   eax
64008fc3:	call   0x6400c9c0
64008fc8:	call   eax
64008fca:	ret    
64008fcb:	int3   
64008fcc:	int3   
64008fcd:	int3   
64008fce:	int3   
64008fcf:	int3   
64008fd0:	push   ebp
64008fd1:	mov    ebp,esp
64008fd3:	and    esp,0xfffffff8
64008fd6:	push   0xffffffff
64008fd8:	push   0x640237b0
64008fdd:	mov    eax,fs:0x0
64008fe3:	push   eax
64008fe4:	sub    esp,0x68
64008fe7:	mov    eax,ds:0x6402d09c
64008fec:	xor    eax,esp
64008fee:	mov    DWORD PTR [esp+0x60],eax
64008ff2:	push   ebx
64008ff3:	push   esi
64008ff4:	push   edi
64008ff5:	mov    eax,ds:0x6402d09c
64008ffa:	xor    eax,esp
64008ffc:	push   eax
64008ffd:	lea    eax,[esp+0x78]
64009001:	mov    fs:0x0,eax
64009007:	mov    eax,DWORD PTR [ebp+0x14]
6400900a:	mov    ebx,DWORD PTR [ebp+0xc]
6400900d:	mov    DWORD PTR [esp+0x1c],ecx
64009011:	mov    DWORD PTR [esp+0x18],eax
64009015:	call   DWORD PTR ds:0x6402505c
6400901b:	lea    ecx,[esp+0x44]
6400901f:	push   ecx
64009020:	mov    DWORD PTR [esp+0x24],eax
64009024:	call   0x6400ebe0
64009029:	call   eax
6400902b:	xor    edi,edi
6400902d:	mov    DWORD PTR [esp+0x6c],0xf
64009035:	mov    DWORD PTR [esp+0x68],edi
64009039:	mov    BYTE PTR [esp+0x58],0x0
6400903e:	mov    ecx,DWORD PTR [ebp+0x10]
64009041:	mov    eax,0x8d3dcb09
64009046:	mul    ecx
64009048:	mov    esi,edx
6400904a:	shr    esi,0x8
6400904d:	lea    eax,[esi+0x1]
64009050:	cmp    eax,edi
64009052:	mov    DWORD PTR [esp+0x80],edi
64009059:	mov    BYTE PTR [esp+0x13],0x1
6400905e:	je     0x64009124
64009064:	mov    edx,0x1d0
64009069:	sub    edx,ebx
6400906b:	mov    DWORD PTR [esp+0x14],ebx
6400906f:	mov    DWORD PTR [esp+0x24],edx
64009073:	mov    eax,DWORD PTR [esp+0x14]
64009077:	add    eax,edx
64009079:	cmp    eax,ecx
6400907b:	jb     0x64009176
64009081:	mov    eax,esi
64009083:	imul   eax,eax,0x1d0
64009089:	mov    ebx,ecx
6400908b:	sub    ebx,eax
6400908d:	test   ebx,ebx
6400908f:	je     0x6400910c
64009091:	or     ecx,0xffffffff
64009094:	cmp    DWORD PTR [ebp+0x18],ecx
64009097:	je     0x640090b0
64009099:	call   DWORD PTR ds:0x6402505c
6400909f:	sub    eax,DWORD PTR [esp+0x20]
640090a3:	mov    ecx,DWORD PTR [ebp+0x18]
640090a6:	cmp    eax,ecx
640090a8:	ja     0x64009180
640090ae:	sub    ecx,eax
640090b0:	mov    edx,DWORD PTR [esp+0x44]
640090b4:	sub    esp,0x10
640090b7:	mov    eax,esp
640090b9:	mov    DWORD PTR [eax],edx
640090bb:	mov    edx,DWORD PTR [esp+0x58]
640090bf:	mov    DWORD PTR [eax+0x4],edx
640090c2:	mov    edx,DWORD PTR [esp+0x5c]
640090c6:	mov    DWORD PTR [eax+0x8],edx
640090c9:	mov    edx,DWORD PTR [esp+0x60]
640090cd:	mov    DWORD PTR [eax+0xc],edx
640090d0:	mov    edx,DWORD PTR [esp+0x24]
640090d4:	test   edi,edi
640090d6:	setne  al
640090d9:	cmp    edi,esi
640090db:	push   eax
640090dc:	mov    eax,DWORD PTR [ebp+0x8]
640090df:	push   ecx
640090e0:	setb   cl
640090e3:	push   ecx
640090e4:	mov    ecx,DWORD PTR [esp+0x38]
640090e8:	push   edi
640090e9:	push   ebx
640090ea:	push   edx
640090eb:	push   eax
640090ec:	push   ecx
640090ed:	lea    edx,[esp+0x43]
640090f1:	lea    ecx,[esp+0x84]
640090f8:	call   0x64009310
640090fd:	test   al,al
640090ff:	je     0x6400919b
64009105:	mov    ecx,DWORD PTR [ebp+0x10]
64009108:	mov    edx,DWORD PTR [esp+0x24]
6400910c:	add    DWORD PTR [esp+0x14],0x1d0
64009114:	add    edi,0x1
64009117:	lea    eax,[esi+0x1]
6400911a:	cmp    edi,eax
6400911c:	jne    0x64009073
64009122:	xor    edi,edi
64009124:	mov    esi,DWORD PTR [esp+0x18]
64009128:	push   edi
64009129:	lea    ecx,[esp+0x58]
6400912d:	push   ecx
6400912e:	or     eax,0xffffffff
64009131:	call   0x640019d0
64009136:	cmp    BYTE PTR [esp+0x13],0x0
6400913b:	je     0x640092cb
64009141:	mov    DWORD PTR [esp+0x14],0xfffffffe
64009149:	lea    esp,[esp+0x0]
64009150:	mov    esi,0xf
64009155:	mov    DWORD PTR [esp+0x40],esi
64009159:	mov    DWORD PTR [esp+0x3c],edi
6400915d:	mov    BYTE PTR [esp+0x2c],0x0
64009162:	mov    ebx,DWORD PTR [ebp+0x18]
64009165:	cmp    ebx,0xffffffff
64009168:	mov    BYTE PTR [esp+0x80],0x1
64009170:	jne    0x640091b6
64009172:	or     ecx,ebx
64009174:	jmp    0x640091cc
64009176:	mov    ebx,0x1d0
6400917b:	jmp    0x64009091
64009180:	cmp    DWORD PTR [esp+0x6c],0x10
64009185:	jb     0x64009194
64009187:	mov    edx,DWORD PTR [esp+0x58]
6400918b:	push   edx
6400918c:	call   0x64012332
64009191:	add    esp,0x4
64009194:	xor    al,al
64009196:	jmp    0x640092e1
6400919b:	cmp    DWORD PTR [esp+0x6c],0x10
640091a0:	jb     0x64009194
640091a2:	mov    eax,DWORD PTR [esp+0x58]
640091a6:	push   eax
640091a7:	call   0x64012332
640091ac:	add    esp,0x4
640091af:	xor    al,al
640091b1:	jmp    0x640092e1
640091b6:	call   DWORD PTR ds:0x6402505c
640091bc:	sub    eax,DWORD PTR [esp+0x20]
640091c0:	cmp    eax,ebx
640091c2:	ja     0x6400925b
640091c8:	mov    ecx,ebx
640091ca:	sub    ecx,eax
640091cc:	mov    edx,DWORD PTR [esp+0x44]
640091d0:	sub    esp,0x10
640091d3:	mov    eax,esp
640091d5:	mov    DWORD PTR [eax],edx
640091d7:	mov    edx,DWORD PTR [esp+0x58]
640091db:	mov    DWORD PTR [eax+0x4],edx
640091de:	mov    edx,DWORD PTR [esp+0x5c]
640091e2:	push   0x1
640091e4:	push   ecx
640091e5:	mov    ecx,DWORD PTR [ebp+0x8]
640091e8:	mov    DWORD PTR [eax+0x8],edx
640091eb:	mov    edx,DWORD PTR [esp+0x68]
640091ef:	push   edi
640091f0:	mov    DWORD PTR [eax+0xc],edx
640091f3:	mov    eax,DWORD PTR [esp+0x30]
640091f7:	mov    edx,DWORD PTR [esp+0x38]
640091fb:	push   eax
640091fc:	push   edi
640091fd:	push   edi
640091fe:	push   ecx
640091ff:	push   edx
64009200:	lea    edx,[esp+0x43]
64009204:	lea    ecx,[esp+0x58]
64009208:	call   0x64009310
6400920d:	test   al,al
6400920f:	je     0x64009289
64009211:	cmp    DWORD PTR [esp+0x3c],edi
64009215:	je     0x640092b7
6400921b:	mov    esi,DWORD PTR [esp+0x18]
6400921f:	push   edi
64009220:	lea    eax,[esp+0x2c]
64009224:	push   eax
64009225:	or     eax,0xffffffff
64009228:	call   0x640019d0
6400922d:	mov    BYTE PTR [esp+0x80],0x0
64009235:	cmp    DWORD PTR [esp+0x40],0x10
6400923a:	jb     0x64009249
6400923c:	mov    ecx,DWORD PTR [esp+0x2c]
64009240:	push   ecx
64009241:	call   0x64012332
64009246:	add    esp,0x4
64009249:	sub    DWORD PTR [esp+0x14],0x1
6400924e:	cmp    BYTE PTR [esp+0x13],0x0
64009253:	jne    0x64009150
64009259:	jmp    0x640092cb
6400925b:	mov    ebx,0x10
64009260:	cmp    DWORD PTR [esp+0x40],ebx
64009264:	jb     0x64009273
64009266:	mov    edx,DWORD PTR [esp+0x2c]
6400926a:	push   edx
6400926b:	call   0x64012332
64009270:	add    esp,0x4
64009273:	cmp    DWORD PTR [esp+0x6c],ebx
64009277:	mov    DWORD PTR [esp+0x40],esi
6400927b:	mov    DWORD PTR [esp+0x3c],edi
6400927f:	mov    BYTE PTR [esp+0x2c],0x0
64009284:	jmp    0x640091a0
64009289:	mov    ebx,0x10
6400928e:	cmp    DWORD PTR [esp+0x40],ebx
64009292:	jb     0x640092a1
64009294:	mov    ecx,DWORD PTR [esp+0x2c]
64009298:	push   ecx
64009299:	call   0x64012332
6400929e:	add    esp,0x4
640092a1:	cmp    DWORD PTR [esp+0x6c],ebx
640092a5:	mov    DWORD PTR [esp+0x40],esi
640092a9:	mov    DWORD PTR [esp+0x3c],edi
640092ad:	mov    BYTE PTR [esp+0x2c],0x0
640092b2:	jmp    0x64009185
640092b7:	cmp    DWORD PTR [esp+0x40],0x10
640092bc:	jb     0x640092cb
640092be:	mov    eax,DWORD PTR [esp+0x2c]
640092c2:	push   eax
640092c3:	call   0x64012332
640092c8:	add    esp,0x4
640092cb:	cmp    DWORD PTR [esp+0x6c],0x10
640092d0:	jb     0x640092df
640092d2:	mov    ecx,DWORD PTR [esp+0x58]
640092d6:	push   ecx
640092d7:	call   0x64012332
640092dc:	add    esp,0x4
640092df:	mov    al,0x1
640092e1:	mov    ecx,DWORD PTR [esp+0x78]
640092e5:	mov    DWORD PTR fs:0x0,ecx
640092ec:	pop    ecx
640092ed:	pop    edi
640092ee:	pop    esi
640092ef:	pop    ebx
640092f0:	mov    ecx,DWORD PTR [esp+0x60]
640092f4:	xor    ecx,esp
640092f6:	call   0x64012b8c
640092fb:	mov    esp,ebp
640092fd:	pop    ebp
640092fe:	ret    0x14
64009301:	int3   
64009302:	int3   
64009303:	int3   
64009304:	int3   
64009305:	int3   
64009306:	int3   
64009307:	int3   
64009308:	int3   
64009309:	int3   
6400930a:	int3   
6400930b:	int3   
6400930c:	int3   
6400930d:	int3   
6400930e:	int3   
6400930f:	int3   
64009310:	push   0xffffffff
64009312:	push   0x6402376c
64009317:	mov    eax,fs:0x0
6400931d:	push   eax
6400931e:	mov    eax,0x10074
64009323:	call   0x64018480
64009328:	mov    eax,ds:0x6402d09c
6400932d:	xor    eax,esp
6400932f:	mov    DWORD PTR [esp+0x10070],eax
64009336:	push   ebx
64009337:	push   ebp
64009338:	push   esi
64009339:	push   edi
6400933a:	mov    eax,ds:0x6402d09c
6400933f:	xor    eax,esp
64009341:	push   eax
64009342:	lea    eax,[esp+0x10088]
64009349:	mov    fs:0x0,eax
6400934f:	mov    eax,DWORD PTR [esp+0x10098]
64009356:	mov    esi,DWORD PTR [esp+0x100a0]
6400935d:	mov    ebp,DWORD PTR ds:0x640251c0
64009363:	mov    DWORD PTR [esp+0x18],eax
64009367:	mov    eax,DWORD PTR [esp+0x100b8]
6400936e:	mov    DWORD PTR [esp+0x2c],ecx
64009372:	mov    ecx,DWORD PTR [esp+0x100bc]
64009379:	mov    DWORD PTR [esp+0x28],edx
6400937d:	mov    edx,DWORD PTR [esp+0x100c0]
64009384:	mov    DWORD PTR [esp+0x54],eax
64009388:	mov    eax,DWORD PTR [esp+0x100c4]
6400938f:	xor    ebx,ebx
64009391:	mov    DWORD PTR [esp+0x1c],esi
64009395:	mov    DWORD PTR [esp+0x58],ecx
64009399:	mov    DWORD PTR [esp+0x5c],edx
6400939d:	mov    DWORD PTR [esp+0x60],eax
640093a1:	mov    BYTE PTR [esp+0x17],bl
640093a5:	xor    edi,edi
640093a7:	jmp    0x640093b0
640093a9:	lea    esp,[esp+0x0]
640093b0:	mov    DWORD PTR [esp+0x50],0xf
640093b8:	mov    DWORD PTR [esp+0x4c],ebx
640093bc:	mov    BYTE PTR [esp+0x3c],bl
640093c0:	mov    DWORD PTR [esp+0x10090],ebx
640093c7:	mov    edx,DWORD PTR [esp+0x58]
640093cb:	mov    eax,DWORD PTR [esp+0x5c]
640093cf:	mov    ecx,DWORD PTR [esp+0x54]
640093d3:	mov    DWORD PTR [esp+0x70],eax
640093d7:	mov    eax,DWORD PTR [esp+0x100a8]
640093de:	mov    DWORD PTR [esp+0x68],ecx
640093e2:	mov    ecx,DWORD PTR [esp+0x60]
640093e6:	mov    DWORD PTR [esp+0x6c],edx
640093ea:	mov    dl,BYTE PTR [esp+0x100ac]
640093f1:	push   eax
640093f2:	mov    DWORD PTR [esp+0x78],ecx
640093f6:	mov    DWORD PTR [esp+0x7c],eax
640093fa:	mov    DWORD PTR [esp+0x80],edi
64009401:	mov    BYTE PTR [esp+0x84],dl
64009408:	call   ebp
6400940a:	mov    DWORD PTR [esp+0x78],eax
6400940e:	mov    eax,DWORD PTR [esp+0x7c]
64009412:	push   eax
64009413:	call   ebp
64009415:	push   0x19
64009417:	lea    ecx,[esp+0x6c]
6400941b:	mov    DWORD PTR [esp+0x80],eax
64009422:	push   ecx
64009423:	lea    eax,[esp+0x40]
64009427:	call   0x64008e40
6400942c:	cmp    esi,ebx
6400942e:	je     0x64009442
64009430:	mov    edx,DWORD PTR [esp+0x100a4]
64009437:	push   edx
64009438:	push   esi
64009439:	lea    eax,[esp+0x40]
6400943d:	call   0x64008e40
64009442:	cmp    DWORD PTR [esp+0x50],0x10
64009447:	mov    eax,DWORD PTR [esp+0x3c]
6400944b:	jae    0x64009451
6400944d:	lea    eax,[esp+0x3c]
64009451:	mov    ecx,DWORD PTR [esp+0x4c]
64009455:	push   ecx
64009456:	push   eax
64009457:	lea    ecx,[esp+0x2c]
6400945b:	lea    ebx,[esp+0x38]
6400945f:	call   0x6400c5d0
64009464:	mov    edx,DWORD PTR [eax]
64009466:	mov    esi,edx
64009468:	mov    DWORD PTR [eax],0x0
6400946e:	mov    DWORD PTR [esp+0x28],esi
64009472:	mov    BYTE PTR [esp+0x10098],0x1
6400947a:	mov    eax,DWORD PTR [esp+0x38]
6400947e:	push   eax
6400947f:	call   0x64012332
64009484:	add    esp,0xc
64009487:	lea    ecx,[esp+0x34]
6400948b:	push   0x0
6400948d:	push   ecx
6400948e:	mov    DWORD PTR [esp+0x3c],0x0
64009496:	call   0x6400da60
6400949b:	call   eax
6400949d:	test   eax,eax
6400949f:	je     0x6400952e
640094a5:	mov    eax,DWORD PTR [esp+0x100b0]
640094ac:	cmp    eax,0x1388
640094b1:	jb     0x640094b8
640094b3:	mov    eax,0x1388
640094b8:	mov    ecx,DWORD PTR [esp+0x1009c]
640094bf:	push   eax
640094c0:	mov    eax,DWORD PTR [esp+0x28]
640094c4:	push   0xffff
640094c9:	lea    edx,[esp+0x8c]
640094d0:	push   edx
640094d1:	mov    edx,DWORD PTR [esp+0x24]
640094d5:	push   0x0
640094d7:	push   eax
640094d8:	mov    eax,DWORD PTR [edx]
640094da:	push   esi
640094db:	push   ecx
640094dc:	push   eax
640094dd:	call   0x6400c800
640094e2:	call   eax
640094e4:	mov    ebx,eax
640094e6:	test   ebx,ebx
640094e8:	jne    0x64009531
640094ea:	push   esi
640094eb:	call   0x64012332
640094f0:	add    esp,0x4
640094f3:	cmp    BYTE PTR [esp+0x100b4],bl
640094fa:	mov    DWORD PTR [esp+0x10090],0xffffffff
64009505:	je     0x64009553
64009507:	cmp    DWORD PTR [esp+0x50],0x10
6400950c:	jb     0x6400951b
6400950e:	mov    ecx,DWORD PTR [esp+0x3c]
64009512:	push   ecx
64009513:	call   0x64012332
64009518:	add    esp,0x4
6400951b:	add    edi,0x1
6400951e:	cmp    edi,0x5
64009521:	je     0x64009567
64009523:	mov    esi,DWORD PTR [esp+0x1c]
64009527:	xor    ebx,ebx
64009529:	jmp    0x640093b0
6400952e:	or     ebx,0xffffffff
64009531:	push   esi
64009532:	call   0x64012332
64009537:	add    esp,0x4
6400953a:	mov    DWORD PTR [esp+0x10090],0xffffffff
64009545:	cmp    DWORD PTR [esp+0x50],0x10
6400954a:	jb     0x64009567
6400954c:	mov    edx,DWORD PTR [esp+0x3c]
64009550:	push   edx
64009551:	jmp    0x6400955f
64009553:	cmp    DWORD PTR [esp+0x50],0x10
64009558:	jb     0x64009567
6400955a:	mov    eax,DWORD PTR [esp+0x3c]
6400955e:	push   eax
6400955f:	call   0x64012332
64009564:	add    esp,0x4
64009567:	test   ebx,ebx
64009569:	je     0x6400970f
6400956f:	mov    ax,WORD PTR [esp+0x90]
64009577:	test   ax,ax
6400957a:	je     0x64009703
64009580:	lea    ecx,[esp+0x24]
64009584:	push   ecx
64009585:	lea    edx,[esp+0xa4]
6400958c:	movzx  ebx,ax
6400958f:	push   edx
64009590:	lea    edi,[esp+0x24]
64009594:	call   0x6400c700
64009599:	mov    ecx,DWORD PTR [eax]
6400959b:	mov    ebp,ecx
6400959d:	xor    ebx,ebx
6400959f:	mov    DWORD PTR [eax],ebx
640095a1:	mov    DWORD PTR [esp+0x28],ebp
640095a5:	mov    DWORD PTR [esp+0x10098],0x2
640095b0:	mov    edx,DWORD PTR [esp+0x24]
640095b4:	push   edx
640095b5:	call   0x64012332
640095ba:	add    esp,0xc
640095bd:	cmp    ebp,ebx
640095bf:	je     0x640096f2
640095c5:	mov    eax,DWORD PTR [ebp+0x10]
640095c8:	push   eax
640095c9:	call   DWORD PTR ds:0x640251c4
640095cf:	cmp    BYTE PTR [esp+0x100ac],bl
640095d6:	mov    DWORD PTR [esp+0x18],eax
640095da:	mov    DWORD PTR [ebp+0x10],eax
640095dd:	jne    0x640095ef
640095df:	cmp    DWORD PTR [esp+0x100a8],ebx
640095e6:	jle    0x640095ef
640095e8:	mov    DWORD PTR [esp+0x100a8],ebx
640095ef:	mov    ecx,0x10
640095f4:	lea    edx,[esp+0x54]
640095f8:	mov    esi,ebp
640095fa:	lea    ebx,[ebx+0x0]
64009600:	mov    eax,DWORD PTR [esi]
64009602:	cmp    eax,DWORD PTR [edx]
64009604:	jne    0x64009618
64009606:	sub    ecx,0x4
64009609:	add    edx,0x4
6400960c:	add    esi,0x4
6400960f:	cmp    ecx,0x4
64009612:	jae    0x64009600
64009614:	cmp    ecx,ebx
64009616:	je     0x64009675
64009618:	movzx  edi,BYTE PTR [esi]
6400961b:	movzx  eax,BYTE PTR [edx]
6400961e:	sub    edi,eax
64009620:	jne    0x64009667
64009622:	sub    ecx,0x1
64009625:	add    edx,0x1
64009628:	add    esi,0x1
6400962b:	cmp    ecx,ebx
6400962d:	je     0x64009675
6400962f:	movzx  edi,BYTE PTR [esi]
64009632:	movzx  eax,BYTE PTR [edx]
64009635:	sub    edi,eax
64009637:	jne    0x64009667
64009639:	sub    ecx,0x1
6400963c:	add    edx,0x1
6400963f:	add    esi,0x1
64009642:	cmp    ecx,ebx
64009644:	je     0x64009675
64009646:	movzx  edi,BYTE PTR [esi]
64009649:	movzx  eax,BYTE PTR [edx]
6400964c:	sub    edi,eax
6400964e:	jne    0x64009667
64009650:	sub    ecx,0x1
64009653:	add    edx,0x1
64009656:	add    esi,0x1
64009659:	cmp    ecx,ebx
6400965b:	je     0x64009675
6400965d:	movzx  edi,BYTE PTR [esi]
64009660:	movzx  ecx,BYTE PTR [edx]
64009663:	sub    edi,ecx
64009665:	je     0x64009675
64009667:	cmp    edi,ebx
64009669:	mov    ecx,0x1
6400966e:	jg     0x64009677
64009670:	or     ecx,0xffffffff
64009673:	jmp    0x64009677
64009675:	xor    ecx,ecx
64009677:	cmp    ecx,ebx
64009679:	jne    0x640096f2
6400967b:	mov    edx,DWORD PTR [esp+0x100a8]
64009682:	cmp    DWORD PTR [esp+0x18],edx
64009686:	jne    0x640096f2
64009688:	mov    al,BYTE PTR [ebp+0x14]
6400968b:	mov    ecx,DWORD PTR [esp+0x28]
6400968f:	mov    BYTE PTR [ecx],al
64009691:	mov    eax,DWORD PTR [esp+0x24]
64009695:	add    eax,0xffffffeb
64009698:	push   eax
64009699:	lea    edx,[ebp+0x15]
6400969c:	push   edx
6400969d:	lea    ecx,[esp+0x40]
640096a1:	mov    DWORD PTR [esp+0x58],0xf
640096a9:	mov    DWORD PTR [esp+0x54],ebx
640096ad:	mov    BYTE PTR [esp+0x44],bl
640096b1:	call   0x64001860
640096b6:	mov    ecx,DWORD PTR [esp+0x2c]
640096ba:	push   0xffffffff
640096bc:	push   ebx
640096bd:	lea    eax,[esp+0x40]
640096c1:	push   eax
640096c2:	mov    BYTE PTR [esp+0x1009c],0x3
640096ca:	call   0x64001780
640096cf:	cmp    DWORD PTR [esp+0x50],0x10
640096d4:	jb     0x640096e3
640096d6:	mov    ecx,DWORD PTR [esp+0x3c]
640096da:	push   ecx
640096db:	call   0x64012332
640096e0:	add    esp,0x4
640096e3:	push   ebp
640096e4:	mov    bl,0x1
640096e6:	call   0x64012332
640096eb:	add    esp,0x4
640096ee:	mov    al,bl
640096f0:	jmp    0x64009713
640096f2:	mov    bl,BYTE PTR [esp+0x17]
640096f6:	push   ebp
640096f7:	call   0x64012332
640096fc:	add    esp,0x4
640096ff:	mov    al,bl
64009701:	jmp    0x64009713
64009703:	cmp    BYTE PTR [esp+0x100ac],0x0
6400970b:	mov    al,0x1
6400970d:	jne    0x64009713
6400970f:	mov    al,BYTE PTR [esp+0x17]
64009713:	mov    ecx,DWORD PTR [esp+0x10088]
6400971a:	mov    DWORD PTR fs:0x0,ecx
64009721:	pop    ecx
64009722:	pop    edi
64009723:	pop    esi
64009724:	pop    ebp
64009725:	pop    ebx
64009726:	mov    ecx,DWORD PTR [esp+0x10070]
6400972d:	xor    ecx,esp
6400972f:	call   0x64012b8c
64009734:	add    esp,0x10080
6400973a:	ret    0x30
6400973d:	int3   
6400973e:	int3   
6400973f:	int3   
64009740:	push   0xffffffff
64009742:	push   0x6402259b
64009747:	mov    eax,fs:0x0
6400974d:	push   eax
6400974e:	push   ecx
6400974f:	push   esi
64009750:	mov    eax,ds:0x6402d09c
64009755:	xor    eax,esp
64009757:	push   eax
64009758:	lea    eax,[esp+0xc]
6400975c:	mov    fs:0x0,eax
64009762:	push   0xc
64009764:	call   0x64012711
64009769:	mov    esi,eax
6400976b:	add    esp,0x4
6400976e:	mov    DWORD PTR [esp+0x8],esi
64009772:	test   esi,esi
64009774:	mov    DWORD PTR [esp+0x14],0x0
6400977c:	je     0x6400979a
6400977e:	mov    eax,DWORD PTR [esp+0x1c]
64009782:	push   eax
64009783:	mov    DWORD PTR [esi+0x4],0x0
6400978a:	mov    DWORD PTR [esi+0x8],0x1
64009791:	call   0x6401eb40
64009796:	mov    DWORD PTR [esi],eax
64009798:	jmp    0x6400979c
6400979a:	xor    esi,esi
6400979c:	test   esi,esi
6400979e:	mov    DWORD PTR [esp+0x14],0xffffffff
640097a6:	mov    DWORD PTR [ebx],esi
640097a8:	jne    0x640097b4
640097aa:	push   0x8007000e
640097af:	call   0x6401ecd0
640097b4:	mov    eax,ebx
640097b6:	mov    ecx,DWORD PTR [esp+0xc]
640097ba:	mov    DWORD PTR fs:0x0,ecx
640097c1:	pop    ecx
640097c2:	pop    esi
640097c3:	add    esp,0x10
640097c6:	ret    0x4
640097c9:	int3   
640097ca:	int3   
640097cb:	int3   
640097cc:	int3   
640097cd:	int3   
640097ce:	int3   
640097cf:	int3   
640097d0:	push   0xffffffff
640097d2:	push   0x6402256b
640097d7:	mov    eax,fs:0x0
640097dd:	push   eax
640097de:	push   ebp
640097df:	push   esi
640097e0:	mov    eax,ds:0x6402d09c
640097e5:	xor    eax,esp
640097e7:	push   eax
640097e8:	lea    eax,[esp+0xc]
640097ec:	mov    fs:0x0,eax
640097f2:	mov    ebp,DWORD PTR [esp+0x1c]
640097f6:	push   0xc
640097f8:	call   0x64012711
640097fd:	mov    esi,eax
640097ff:	add    esp,0x4
64009802:	mov    DWORD PTR [esp+0x1c],esi
64009806:	test   esi,esi
64009808:	mov    DWORD PTR [esp+0x14],0x0
64009810:	je     0x6400983d
64009812:	push   edi
64009813:	mov    DWORD PTR [esi+0x4],0x0
6400981a:	mov    DWORD PTR [esi+0x8],0x1
64009821:	call   DWORD PTR ds:0x64025188
64009827:	test   eax,eax
64009829:	mov    DWORD PTR [esi],eax
6400982b:	jne    0x6400983f
6400982d:	test   edi,edi
6400982f:	je     0x6400983f
64009831:	push   0x8007000e
64009836:	call   0x6401ecd0
6400983b:	jmp    0x6400983f
6400983d:	xor    esi,esi
6400983f:	test   esi,esi
64009841:	mov    DWORD PTR [esp+0x14],0xffffffff
64009849:	mov    DWORD PTR [ebp+0x0],esi
6400984c:	jne    0x64009858
6400984e:	push   0x8007000e
64009853:	call   0x6401ecd0
64009858:	mov    eax,ebp
6400985a:	mov    ecx,DWORD PTR [esp+0xc]
6400985e:	mov    DWORD PTR fs:0x0,ecx
64009865:	pop    ecx
64009866:	pop    esi
64009867:	pop    ebp
64009868:	add    esp,0xc
6400986b:	ret    0x4
6400986e:	int3   
6400986f:	int3   
64009870:	push   esi
64009871:	mov    esi,DWORD PTR [edi]
64009873:	test   esi,esi
64009875:	je     0x640098b5
64009877:	lea    eax,[esi+0x8]
6400987a:	push   eax
6400987b:	call   DWORD PTR ds:0x64025098
64009881:	test   eax,eax
64009883:	jne    0x640098af
64009885:	test   esi,esi
64009887:	je     0x640098af
64009889:	mov    eax,DWORD PTR [esi]
6400988b:	test   eax,eax
6400988d:	je     0x64009896
6400988f:	push   eax
64009890:	call   DWORD PTR ds:0x640251a4
64009896:	mov    eax,DWORD PTR [esi+0x4]
64009899:	test   eax,eax
6400989b:	je     0x640098a6
6400989d:	push   eax
6400989e:	call   0x64013284
640098a3:	add    esp,0x4
640098a6:	push   esi
640098a7:	call   0x64012332
640098ac:	add    esp,0x4
640098af:	mov    DWORD PTR [edi],0x0
640098b5:	pop    esi
640098b6:	ret    
640098b7:	int3   
640098b8:	int3   
640098b9:	int3   
640098ba:	int3   
640098bb:	int3   
640098bc:	int3   
640098bd:	int3   
640098be:	int3   
640098bf:	int3   
640098c0:	push   0xffffffff
640098c2:	push   0x6402253b
640098c7:	mov    eax,fs:0x0
640098cd:	push   eax
640098ce:	push   ebp
640098cf:	push   esi
640098d0:	mov    eax,ds:0x6402d09c
640098d5:	xor    eax,esp
640098d7:	push   eax
640098d8:	lea    eax,[esp+0xc]
640098dc:	mov    fs:0x0,eax
640098e2:	mov    ebp,DWORD PTR [esp+0x1c]
640098e6:	test   ebp,ebp
640098e8:	je     0x640098fe
640098ea:	mov    eax,DWORD PTR [ebx]
640098ec:	test   eax,eax
640098ee:	je     0x640098f4
640098f0:	mov    eax,DWORD PTR [eax]
640098f2:	jmp    0x640098f6
640098f4:	xor    eax,eax
640098f6:	cmp    eax,ebp
640098f8:	je     0x640099a3
640098fe:	mov    esi,DWORD PTR [ebx]
64009900:	test   esi,esi
64009902:	je     0x64009942
64009904:	lea    eax,[esi+0x8]
64009907:	push   eax
64009908:	call   DWORD PTR ds:0x64025098
6400990e:	test   eax,eax
64009910:	jne    0x6400993c
64009912:	test   esi,esi
64009914:	je     0x6400993c
64009916:	mov    eax,DWORD PTR [esi]
64009918:	test   eax,eax
6400991a:	je     0x64009923
6400991c:	push   eax
6400991d:	call   DWORD PTR ds:0x640251a4
64009923:	mov    eax,DWORD PTR [esi+0x4]
64009926:	test   eax,eax
64009928:	je     0x64009933
6400992a:	push   eax
6400992b:	call   0x64013284
64009930:	add    esp,0x4
64009933:	push   esi
64009934:	call   0x64012332
64009939:	add    esp,0x4
6400993c:	mov    DWORD PTR [ebx],0x0
64009942:	push   0xc
64009944:	call   0x64012711
64009949:	mov    esi,eax
6400994b:	add    esp,0x4
6400994e:	mov    DWORD PTR [esp+0x1c],esi
64009952:	test   esi,esi
64009954:	mov    DWORD PTR [esp+0x14],0x0
6400995c:	je     0x64009989
6400995e:	push   ebp
6400995f:	mov    DWORD PTR [esi+0x4],0x0
64009966:	mov    DWORD PTR [esi+0x8],0x1
6400996d:	call   DWORD PTR ds:0x64025188
64009973:	test   eax,eax
64009975:	mov    DWORD PTR [esi],eax
64009977:	jne    0x6400998b
64009979:	test   ebp,ebp
6400997b:	je     0x6400998b
6400997d:	push   0x8007000e
64009982:	call   0x6401ecd0
64009987:	jmp    0x6400998b
64009989:	xor    esi,esi
6400998b:	test   esi,esi
6400998d:	mov    DWORD PTR [esp+0x14],0xffffffff
64009995:	mov    DWORD PTR [ebx],esi
64009997:	jne    0x640099a3
64009999:	push   0x8007000e
6400999e:	call   0x6401ecd0
640099a3:	mov    eax,ebx
640099a5:	mov    ecx,DWORD PTR [esp+0xc]
640099a9:	mov    DWORD PTR fs:0x0,ecx
640099b0:	pop    ecx
640099b1:	pop    esi
640099b2:	pop    ebp
640099b3:	add    esp,0xc
640099b6:	ret    0x4
640099b9:	int3   
640099ba:	int3   
640099bb:	int3   
640099bc:	int3   
640099bd:	int3   
640099be:	int3   
640099bf:	int3   
640099c0:	push   0xffffffff
640099c2:	push   0x640225cb
640099c7:	mov    eax,fs:0x0
640099cd:	push   eax
640099ce:	push   ecx
640099cf:	push   esi
640099d0:	push   edi
640099d1:	mov    eax,ds:0x6402d09c
640099d6:	xor    eax,esp
640099d8:	push   eax
640099d9:	lea    eax,[esp+0x10]
640099dd:	mov    fs:0x0,eax
640099e3:	push   0xc
640099e5:	call   0x64012711
640099ea:	add    esp,0x4
640099ed:	mov    DWORD PTR [esp+0xc],eax
640099f1:	test   eax,eax
640099f3:	mov    DWORD PTR [esp+0x18],0x0
640099fb:	je     0x64009a0e
640099fd:	mov    ecx,DWORD PTR [esp+0x20]
64009a01:	push   ecx
64009a02:	push   ebx
64009a03:	mov    edi,eax
64009a05:	call   0x64009b20
64009a0a:	mov    edi,eax
64009a0c:	jmp    0x64009a10
64009a0e:	xor    edi,edi
64009a10:	test   edi,edi
64009a12:	mov    DWORD PTR [esp+0x18],0xffffffff
64009a1a:	jne    0x64009a28
64009a1c:	push   0x8007000e
64009a21:	call   0x6401ecd0
64009a26:	jmp    0x64009a6e
64009a28:	mov    esi,DWORD PTR [ebx]
64009a2a:	test   esi,esi
64009a2c:	je     0x64009a6c
64009a2e:	lea    edx,[esi+0x8]
64009a31:	push   edx
64009a32:	call   DWORD PTR ds:0x64025098
64009a38:	test   eax,eax
64009a3a:	jne    0x64009a66
64009a3c:	test   esi,esi
64009a3e:	je     0x64009a66
64009a40:	mov    eax,DWORD PTR [esi]
64009a42:	test   eax,eax
64009a44:	je     0x64009a4d
64009a46:	push   eax
64009a47:	call   DWORD PTR ds:0x640251a4
64009a4d:	mov    eax,DWORD PTR [esi+0x4]
64009a50:	test   eax,eax
64009a52:	je     0x64009a5d
64009a54:	push   eax
64009a55:	call   0x64013284
64009a5a:	add    esp,0x4
64009a5d:	push   esi
64009a5e:	call   0x64012332
64009a63:	add    esp,0x4
64009a66:	mov    DWORD PTR [ebx],0x0
64009a6c:	mov    DWORD PTR [ebx],edi
64009a6e:	mov    eax,ebx
64009a70:	mov    ecx,DWORD PTR [esp+0x10]
64009a74:	mov    DWORD PTR fs:0x0,ecx
64009a7b:	pop    ecx
64009a7c:	pop    edi
64009a7d:	pop    esi
64009a7e:	add    esp,0x10
64009a81:	ret    0x4
64009a84:	int3   
64009a85:	int3   
64009a86:	int3   
64009a87:	int3   
64009a88:	int3   
64009a89:	int3   
64009a8a:	int3   
64009a8b:	int3   
64009a8c:	int3   
64009a8d:	int3   
64009a8e:	int3   
64009a8f:	int3   
64009a90:	push   0xffffffff
64009a92:	push   0x64022679
64009a97:	mov    eax,fs:0x0
64009a9d:	push   eax
64009a9e:	push   ecx
64009a9f:	push   ebx
64009aa0:	mov    eax,ds:0x6402d09c
64009aa5:	xor    eax,esp
64009aa7:	push   eax
64009aa8:	lea    eax,[esp+0xc]
64009aac:	mov    fs:0x0,eax
64009ab2:	mov    ebx,DWORD PTR [esp+0x20]
64009ab6:	mov    eax,DWORD PTR [esp+0x1c]
64009aba:	mov    DWORD PTR [esp+0x8],0x0
64009ac2:	mov    eax,DWORD PTR [eax]
64009ac4:	test   eax,eax
64009ac6:	mov    DWORD PTR [ebx],eax
64009ac8:	je     0x64009ad4
64009aca:	add    eax,0x8
64009acd:	push   eax
64009ace:	call   DWORD PTR ds:0x64025020
64009ad4:	mov    ecx,DWORD PTR [esp+0x24]
64009ad8:	mov    DWORD PTR [esp+0x14],0x0
64009ae0:	push   ecx
64009ae1:	mov    DWORD PTR [esp+0xc],0x1
64009ae9:	call   0x640099c0
64009aee:	mov    eax,ebx
64009af0:	mov    ecx,DWORD PTR [esp+0xc]
64009af4:	mov    DWORD PTR fs:0x0,ecx
64009afb:	pop    ecx
64009afc:	pop    ebx
64009afd:	add    esp,0x10
64009b00:	ret    0xc
64009b03:	int3   
64009b04:	int3   
64009b05:	int3   
64009b06:	int3   
64009b07:	int3   
64009b08:	int3   
64009b09:	int3   
64009b0a:	int3   
64009b0b:	int3   
64009b0c:	int3   
64009b0d:	int3   
64009b0e:	int3   
64009b0f:	int3   
64009b10:	mov    eax,DWORD PTR [eax]
64009b12:	test   eax,eax
64009b14:	je     0x64009b19
64009b16:	mov    eax,DWORD PTR [eax]
64009b18:	ret    
64009b19:	xor    eax,eax
64009b1b:	ret    
64009b1c:	int3   
64009b1d:	int3   
64009b1e:	int3   
64009b1f:	int3   
64009b20:	mov    eax,DWORD PTR [esp+0x4]
64009b24:	push   ebx
64009b25:	xor    ebx,ebx
64009b27:	mov    DWORD PTR [edi+0x4],ebx
64009b2a:	mov    DWORD PTR [edi+0x8],0x1
64009b31:	mov    eax,DWORD PTR [eax]
64009b33:	cmp    eax,ebx
64009b35:	push   ebp
64009b36:	push   esi
64009b37:	mov    esi,DWORD PTR ds:0x640251a0
64009b3d:	je     0x64009b4c
64009b3f:	mov    eax,DWORD PTR [eax]
64009b41:	cmp    eax,ebx
64009b43:	je     0x64009b4c
64009b45:	push   eax
64009b46:	call   esi
64009b48:	mov    ebp,eax
64009b4a:	jmp    0x64009b4e
64009b4c:	xor    ebp,ebp
64009b4e:	mov    ecx,DWORD PTR [esp+0x14]
64009b52:	mov    eax,DWORD PTR [ecx]
64009b54:	cmp    eax,ebx
64009b56:	je     0x64009b63
64009b58:	mov    eax,DWORD PTR [eax]
64009b5a:	cmp    eax,ebx
64009b5c:	je     0x64009b63
64009b5e:	push   eax
64009b5f:	call   esi
64009b61:	mov    ebx,eax
64009b63:	lea    esi,[ebx+ebp*1]
64009b66:	add    esi,esi
64009b68:	push   esi
64009b69:	push   0x0
64009b6b:	call   DWORD PTR ds:0x64025190
64009b71:	test   eax,eax
64009b73:	mov    DWORD PTR [edi],eax
64009b75:	jne    0x64009b89
64009b77:	push   0x8007000e
64009b7c:	call   0x6401ecd0
64009b81:	pop    esi
64009b82:	pop    ebp
64009b83:	mov    eax,edi
64009b85:	pop    ebx
64009b86:	ret    0x8
64009b89:	mov    edx,DWORD PTR [esp+0x10]
64009b8d:	mov    ecx,DWORD PTR [edx]
64009b8f:	test   ecx,ecx
64009b91:	je     0x64009bac
64009b93:	mov    ecx,DWORD PTR [ecx]
64009b95:	test   ecx,ecx
64009b97:	je     0x64009bac
64009b99:	lea    edx,[ebp+ebp*1+0x2]
64009b9d:	push   edx
64009b9e:	push   ecx
64009b9f:	add    esi,0x2
64009ba2:	push   esi
64009ba3:	push   eax
64009ba4:	call   0x640124e8
64009ba9:	add    esp,0x10
64009bac:	mov    eax,DWORD PTR [esp+0x14]
64009bb0:	mov    eax,DWORD PTR [eax]
64009bb2:	test   eax,eax
64009bb4:	je     0x64009bd1
64009bb6:	mov    ecx,DWORD PTR [eax]
64009bb8:	test   ecx,ecx
64009bba:	je     0x64009bd1
64009bbc:	lea    eax,[ebx+ebx*1+0x2]
64009bc0:	push   eax
64009bc1:	push   ecx
64009bc2:	mov    ecx,DWORD PTR [edi]
64009bc4:	push   eax
64009bc5:	lea    edx,[ecx+ebp*2]
64009bc8:	push   edx
64009bc9:	call   0x640124e8
64009bce:	add    esp,0x10
64009bd1:	pop    esi
64009bd2:	pop    ebp
64009bd3:	mov    eax,edi
64009bd5:	pop    ebx
64009bd6:	ret    0x8
64009bd9:	int3   
64009bda:	int3   
64009bdb:	int3   
64009bdc:	int3   
64009bdd:	int3   
64009bde:	int3   
64009bdf:	int3   
64009be0:	push   ecx
64009be1:	call   DWORD PTR ds:0x6402519c
64009be7:	ret    
64009be8:	int3   
64009be9:	int3   
64009bea:	int3   
64009beb:	int3   
64009bec:	int3   
64009bed:	int3   
64009bee:	int3   
64009bef:	int3   
64009bf0:	push   0xffffffff
64009bf2:	push   0x64022638
64009bf7:	mov    eax,fs:0x0
64009bfd:	push   eax
64009bfe:	sub    esp,0x18
64009c01:	push   ebx
64009c02:	mov    eax,ds:0x6402d09c
64009c07:	xor    eax,esp
64009c09:	push   eax
64009c0a:	lea    eax,[esp+0x20]
64009c0e:	mov    fs:0x0,eax
64009c14:	mov    ebx,ecx
64009c16:	cmp    WORD PTR [esi],0x8
64009c1a:	jne    0x64009c38
64009c1c:	mov    eax,DWORD PTR [esi+0x8]
64009c1f:	push   eax
64009c20:	call   0x640098c0
64009c25:	mov    eax,ebx
64009c27:	mov    ecx,DWORD PTR [esp+0x20]
64009c2b:	mov    DWORD PTR fs:0x0,ecx
64009c32:	pop    ecx
64009c33:	pop    ebx
64009c34:	add    esp,0x24
64009c37:	ret    
64009c38:	lea    ecx,[esp+0xc]
64009c3c:	push   ecx
64009c3d:	call   DWORD PTR ds:0x64025194
64009c43:	lea    edx,[esp+0xc]
64009c47:	cmp    edx,esi
64009c49:	mov    DWORD PTR [esp+0x28],0x0
64009c51:	jne    0x64009c5b
64009c53:	cmp    WORD PTR [esp+0xc],0x8
64009c59:	je     0x64009c75
64009c5b:	push   0x8
64009c5d:	push   0x0
64009c5f:	push   esi
64009c60:	lea    eax,[esp+0x18]
64009c64:	push   eax
64009c65:	call   DWORD PTR ds:0x6402518c
64009c6b:	test   eax,eax
64009c6d:	jge    0x64009c75
64009c6f:	push   eax
64009c70:	call   0x6401ecd0
64009c75:	mov    ecx,DWORD PTR [esp+0x14]
64009c79:	push   ecx
64009c7a:	call   0x640098c0
64009c7f:	lea    edx,[esp+0xc]
64009c83:	push   edx
64009c84:	call   DWORD PTR ds:0x6402519c
64009c8a:	mov    eax,ebx
64009c8c:	mov    ecx,DWORD PTR [esp+0x20]
64009c90:	mov    DWORD PTR fs:0x0,ecx
64009c97:	pop    ecx
64009c98:	pop    ebx
64009c99:	add    esp,0x24
64009c9c:	ret    
64009c9d:	int3   
64009c9e:	int3   
64009c9f:	int3   
64009ca0:	sub    esp,0x8
64009ca3:	test   eax,eax
64009ca5:	mov    BYTE PTR [edi],0x0
64009ca8:	jle    0x64009dfe
64009cae:	push   ebx
64009caf:	push   ebp
64009cb0:	push   esi
64009cb1:	xor    esi,esi
64009cb3:	add    eax,ecx
64009cb5:	mov    BYTE PTR [esp+0xf],0x0
64009cba:	mov    BYTE PTR [edi],0x0
64009cbd:	mov    DWORD PTR [esp+0x10],eax
64009cc1:	mov    ebp,eax
64009cc3:	mov    al,BYTE PTR [ebp+0x0]
64009cc6:	test   al,al
64009cc8:	je     0x64009d74
64009cce:	movsx  edx,al
64009cd1:	push   edx
64009cd2:	call   0x64013890
64009cd7:	mov    bl,al
64009cd9:	movsx  eax,bl
64009cdc:	push   eax
64009cdd:	call   0x6401397e
64009ce2:	add    esp,0x8
64009ce5:	test   eax,eax
64009ce7:	je     0x64009ceb
64009ce9:	mov    bl,0x30
64009ceb:	shl    BYTE PTR [esi+edi*1],0x4
64009cef:	add    BYTE PTR [esp+0xf],0x1
64009cf4:	mov    cl,BYTE PTR [esi+edi*1]
64009cf7:	mov    al,bl
64009cf9:	sub    al,0x30
64009cfb:	cmp    al,0x9
64009cfd:	ja     0x64009d06
64009cff:	or     al,cl
64009d01:	mov    BYTE PTR [esi+edi*1],al
64009d04:	jmp    0x64009d18
64009d06:	mov    dl,bl
64009d08:	sub    dl,0x61
64009d0b:	cmp    dl,0x5
64009d0e:	ja     0x64009d4a
64009d10:	sub    bl,0x57
64009d13:	or     bl,cl
64009d15:	mov    BYTE PTR [esi+edi*1],bl
64009d18:	cmp    BYTE PTR [esp+0xf],0x2
64009d1d:	jne    0x64009d42
64009d1f:	mov    al,BYTE PTR [esi+edi*1]
64009d22:	test   al,al
64009d24:	je     0x64009d36
64009d26:	movsx  eax,al
64009d29:	push   eax
64009d2a:	call   0x640139fb
64009d2f:	add    esp,0x4
64009d32:	test   eax,eax
64009d34:	je     0x64009d4a
64009d36:	add    esi,0x1
64009d39:	mov    BYTE PTR [esp+0xf],0x0
64009d3e:	mov    BYTE PTR [esi+edi*1],0x0
64009d42:	add    ebp,0x1
64009d45:	jmp    0x64009cc3
64009d4a:	mov    ebp,DWORD PTR [esp+0x10]
64009d4e:	xor    esi,esi
64009d50:	mov    bl,BYTE PTR [ebp+0x0]
64009d53:	test   bl,bl
64009d55:	je     0x64009d74
64009d57:	movsx  ecx,bl
64009d5a:	push   ecx
64009d5b:	call   0x640139fb
64009d60:	add    esp,0x4
64009d63:	test   eax,eax
64009d65:	je     0x64009d72
64009d67:	mov    BYTE PTR [esi+edi*1],bl
64009d6a:	add    esi,0x1
64009d6d:	add    ebp,0x1
64009d70:	jmp    0x64009d50
64009d72:	xor    esi,esi
64009d74:	cmp    DWORD PTR [esp+0x18],0x0
64009d79:	mov    BYTE PTR [esi+edi*1],0x0
64009d7d:	je     0x64009da2
64009d7f:	test   esi,esi
64009d81:	jle    0x64009da2
64009d83:	add    esi,0xffffffff
64009d86:	shr    esi,1
64009d88:	lea    eax,[edi+0x1]
64009d8b:	add    esi,0x1
64009d8e:	mov    edi,edi
64009d90:	mov    cl,BYTE PTR [eax-0x1]
64009d93:	mov    dl,BYTE PTR [eax]
64009d95:	mov    BYTE PTR [eax-0x1],dl
64009d98:	mov    BYTE PTR [eax],cl
64009d9a:	add    eax,0x2
64009d9d:	sub    esi,0x1
64009da0:	jne    0x64009d90
64009da2:	or     ebx,0xffffffff
64009da5:	or     ebp,ebx
64009da7:	xor    esi,esi
64009da9:	cmp    BYTE PTR [edi],0x0
64009dac:	je     0x64009dfb
64009dae:	mov    edi,edi
64009db0:	movsx  eax,BYTE PTR [esi+edi*1]
64009db4:	push   eax
64009db5:	call   0x6401397e
64009dba:	add    esp,0x4
64009dbd:	test   eax,eax
64009dbf:	jne    0x64009dc9
64009dc1:	test   ebp,ebp
64009dc3:	jge    0x64009dc7
64009dc5:	mov    ebp,esi
64009dc7:	mov    ebx,esi
64009dc9:	add    esi,0x1
64009dcc:	cmp    BYTE PTR [esi+edi*1],0x0
64009dd0:	jne    0x64009db0
64009dd2:	test   ebp,ebp
64009dd4:	jl     0x64009dfb
64009dd6:	test   ebx,ebx
64009dd8:	jl     0x64009dfb
64009dda:	cmp    ebp,ebx
64009ddc:	mov    eax,ebp
64009dde:	jg     0x64009df5
64009de0:	mov    edx,edi
64009de2:	sub    edx,ebp
64009de4:	mov    cl,BYTE PTR [eax+edi*1]
64009de7:	test   cl,cl
64009de9:	je     0x64009df5
64009deb:	mov    BYTE PTR [edx+eax*1],cl
64009dee:	add    eax,0x1
64009df1:	cmp    eax,ebx
64009df3:	jle    0x64009de4
64009df5:	sub    eax,ebp
64009df7:	mov    BYTE PTR [eax+edi*1],0x0
64009dfb:	pop    esi
64009dfc:	pop    ebp
64009dfd:	pop    ebx
64009dfe:	mov    eax,edi
64009e00:	add    esp,0x8
64009e03:	ret    
64009e04:	int3   
64009e05:	int3   
64009e06:	int3   
64009e07:	int3   
64009e08:	int3   
64009e09:	int3   
64009e0a:	int3   
64009e0b:	int3   
64009e0c:	int3   
64009e0d:	int3   
64009e0e:	int3   
64009e0f:	int3   
64009e10:	push   ebp
64009e11:	mov    ebp,esp
64009e13:	and    esp,0xfffffff8
64009e16:	mov    eax,0x2f34
64009e1b:	call   0x64018480
64009e20:	mov    eax,ds:0x6402d09c
64009e25:	xor    eax,esp
64009e27:	mov    DWORD PTR [esp+0x2f30],eax
64009e2e:	push   ebx
64009e2f:	mov    eax,DWORD PTR [ebp+0x8]
64009e32:	mov    ecx,DWORD PTR [ebp+0xc]
64009e35:	mov    ebx,DWORD PTR [ebp+0x10]
64009e38:	push   esi
64009e39:	push   edi
64009e3a:	xor    edi,edi
64009e3c:	push   edi
64009e3d:	push   edi
64009e3e:	push   0x3
64009e40:	push   edi
64009e41:	push   0x3
64009e43:	push   edi
64009e44:	push   0x640284c8
64009e49:	push   0x12
64009e4b:	push   0x64028504
64009e50:	mov    DWORD PTR [esp+0x3c],eax
64009e54:	mov    DWORD PTR [esp+0x40],ecx
64009e58:	mov    BYTE PTR [esp+0x37],0x0
64009e5d:	call   0x64005a10
64009e62:	add    esp,0xc
64009e65:	push   eax
64009e66:	call   0x6400cf00
64009e6b:	call   eax
64009e6d:	mov    esi,eax
64009e6f:	cmp    esi,0xffffffff
64009e72:	jne    0x64009e8b
64009e74:	xor    al,al
64009e76:	pop    edi
64009e77:	pop    esi
64009e78:	pop    ebx
64009e79:	mov    ecx,DWORD PTR [esp+0x2f30]
64009e80:	xor    ecx,esp
64009e82:	call   0x64012b8c
64009e87:	mov    esp,ebp
64009e89:	pop    ebp
64009e8a:	ret    
64009e8b:	xor    eax,eax
64009e8d:	push   0x2710
64009e92:	lea    edx,[esp+0x82c]
64009e99:	push   edi
64009e9a:	mov    DWORD PTR [esp+0x2c],eax
64009e9e:	mov    DWORD PTR [esp+0x30],eax
64009ea2:	push   edx
64009ea3:	mov    DWORD PTR [esp+0x20],edi
64009ea7:	mov    DWORD PTR [esp+0x38],eax
64009eab:	mov    DWORD PTR [esp+0x30],edi
64009eaf:	mov    DWORD PTR [esp+0x34],edi
64009eb3:	call   0x64013290
64009eb8:	add    esp,0xc
64009ebb:	push   edi
64009ebc:	lea    eax,[esp+0x18]
64009ec0:	push   eax
64009ec1:	push   0x2710
64009ec6:	lea    ecx,[esp+0x834]
64009ecd:	push   ecx
64009ece:	push   0xc
64009ed0:	lea    edx,[esp+0x38]
64009ed4:	push   edx
64009ed5:	push   0x2d1400
64009eda:	push   esi
64009edb:	call   0x6400d440
64009ee0:	call   eax
64009ee2:	test   eax,eax
64009ee4:	je     0x64009f41
64009ee6:	mov    eax,DWORD PTR [esp+0x838]
64009eed:	push   edi
64009eee:	lea    edi,[esp+0x444]
64009ef5:	lea    ecx,[esp+0x82c]
64009efc:	call   0x64009ca0
64009f01:	mov    eax,DWORD PTR [esp+0x844]
64009f08:	push   0x1
64009f0a:	lea    edi,[esp+0x60]
64009f0e:	lea    ecx,[esp+0x830]
64009f15:	call   0x64009ca0
64009f1a:	mov    ecx,DWORD PTR [esp+0x20]
64009f1e:	add    esp,0x8
64009f21:	mov    eax,edi
64009f23:	push   eax
64009f24:	call   0x640027b0
64009f29:	lea    ecx,[esp+0x440]
64009f30:	push   ecx
64009f31:	mov    ecx,DWORD PTR [esp+0x20]
64009f35:	call   0x640027b0
64009f3a:	mov    BYTE PTR [esp+0x13],0x1
64009f3f:	xor    edi,edi
64009f41:	xor    eax,eax
64009f43:	push   edi
64009f44:	lea    edx,[esp+0x24]
64009f48:	push   edx
64009f49:	push   0x28
64009f4b:	mov    DWORD PTR [esp+0x40],eax
64009f4f:	mov    DWORD PTR [esp+0x44],eax
64009f53:	mov    DWORD PTR [esp+0x48],eax
64009f57:	mov    DWORD PTR [esp+0x4c],eax
64009f5b:	mov    DWORD PTR [esp+0x50],eax
64009f5f:	mov    DWORD PTR [esp+0x54],eax
64009f63:	mov    DWORD PTR [esp+0x58],eax
64009f67:	mov    DWORD PTR [esp+0x5c],eax
64009f6b:	mov    DWORD PTR [esp+0x60],eax
64009f6f:	lea    eax,[esp+0x3c]
64009f73:	push   eax
64009f74:	push   edi
64009f75:	push   edi
64009f76:	push   0x700a0
64009f7b:	push   esi
64009f7c:	mov    DWORD PTR [esp+0x50],edi
64009f80:	mov    DWORD PTR [ebx],edi
64009f82:	mov    DWORD PTR [ebx+0x4],edi
64009f85:	call   0x6400d440
64009f8a:	call   eax
64009f8c:	test   eax,eax
64009f8e:	je     0x64009f9d
64009f90:	mov    ecx,DWORD PTR [esp+0x48]
64009f94:	mov    edx,DWORD PTR [esp+0x4c]
64009f98:	mov    DWORD PTR [ebx],ecx
64009f9a:	mov    DWORD PTR [ebx+0x4],edx
64009f9d:	push   esi
64009f9e:	call   DWORD PTR ds:0x64025040
64009fa4:	mov    ecx,DWORD PTR [esp+0x2f3c]
64009fab:	mov    al,BYTE PTR [esp+0x13]
64009faf:	pop    edi
64009fb0:	pop    esi
64009fb1:	pop    ebx
64009fb2:	xor    ecx,esp
64009fb4:	call   0x64012b8c
64009fb9:	mov    esp,ebp
64009fbb:	pop    ebp
64009fbc:	ret    
64009fbd:	int3   
64009fbe:	int3   
64009fbf:	int3   
64009fc0:	push   ebp
64009fc1:	lea    ebp,[esp-0x28c]
64009fc8:	sub    esp,0x28c
64009fce:	push   0xffffffff
64009fd0:	push   0x64023710
64009fd5:	mov    eax,fs:0x0
64009fdb:	push   eax
64009fdc:	sub    esp,0x34
64009fdf:	mov    eax,ds:0x6402d09c
64009fe4:	xor    eax,ebp
64009fe6:	mov    DWORD PTR [ebp+0x288],eax
64009fec:	push   ebx
64009fed:	push   esi
64009fee:	push   edi
64009fef:	push   eax
64009ff0:	lea    eax,[ebp-0xc]
64009ff3:	mov    fs:0x0,eax
64009ff9:	mov    eax,DWORD PTR [ebp+0x294]
64009fff:	lea    ecx,[ebp-0x14]
6400a002:	push   ecx
6400a003:	lea    edx,[ebp+0x0]
6400a006:	push   edx
6400a007:	mov    DWORD PTR [ebp-0x20],eax
6400a00a:	mov    DWORD PTR [ebp-0x14],0x1
6400a011:	call   0x6400caa0
6400a016:	call   eax
6400a018:	cmp    eax,0x6f
6400a01b:	jne    0x6400a1f1
6400a021:	mov    eax,DWORD PTR [ebp-0x14]
6400a024:	push   eax
6400a025:	call   0x6401232d
6400a02a:	mov    ebx,eax
6400a02c:	add    esp,0x4
6400a02f:	mov    DWORD PTR [ebp-0x24],ebx
6400a032:	lea    ecx,[ebp-0x14]
6400a035:	push   ecx
6400a036:	push   ebx
6400a037:	mov    DWORD PTR [ebp-0x4],0x0
6400a03e:	call   0x6400caa0
6400a043:	call   eax
6400a045:	test   eax,eax
6400a047:	je     0x6400a04f
6400a049:	push   ebx
6400a04a:	jmp    0x6400a1e9
6400a04f:	call   DWORD PTR ds:0x6402d06c
6400a055:	mov    edx,DWORD PTR ds:0x6402e540
6400a05b:	mov    DWORD PTR [ebp-0x1c],eax
6400a05e:	mov    eax,DWORD PTR [edx+0xc]
6400a061:	mov    ecx,0x6402e540
6400a066:	call   eax
6400a068:	lea    edi,[eax+0x10]
6400a06b:	mov    DWORD PTR [ebp-0x10],edi
6400a06e:	xor    esi,esi
6400a070:	mov    BYTE PTR [ebp-0x4],0x1
6400a074:	cmp    DWORD PTR [ebx+0x190],esi
6400a07a:	je     0x6400a102
6400a080:	mov    edx,DWORD PTR ds:0x6402e540
6400a086:	mov    eax,DWORD PTR [edx+0xc]
6400a089:	mov    ecx,0x6402e540
6400a08e:	call   eax
6400a090:	add    eax,0x10
6400a093:	mov    DWORD PTR [ebp-0x18],eax
6400a096:	mov    BYTE PTR [ebp-0x4],0x2
6400a09a:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
6400a0a2:	push   ecx
6400a0a3:	push   0x6402852c
6400a0a8:	push   0x4
6400a0aa:	push   0x6402855c
6400a0af:	call   0x64005a10
6400a0b4:	add    esp,0xc
6400a0b7:	push   eax
6400a0b8:	lea    edx,[ebp-0x18]
6400a0bb:	push   edx
6400a0bc:	call   0x64001d40
6400a0c1:	mov    edi,DWORD PTR [ebp-0x18]
6400a0c4:	mov    eax,DWORD PTR [edi-0xc]
6400a0c7:	add    esp,0xc
6400a0ca:	push   eax
6400a0cb:	push   edi
6400a0cc:	lea    ecx,[ebp-0x10]
6400a0cf:	call   0x64002990
6400a0d4:	lea    eax,[edi-0x10]
6400a0d7:	mov    BYTE PTR [ebp-0x4],0x1
6400a0db:	lea    ecx,[eax+0xc]
6400a0de:	or     edx,0xffffffff
6400a0e1:	lock xadd DWORD PTR [ecx],edx
6400a0e5:	dec    edx
6400a0e6:	test   edx,edx
6400a0e8:	jg     0x6400a0f4
6400a0ea:	mov    ecx,DWORD PTR [eax]
6400a0ec:	mov    edx,DWORD PTR [ecx]
6400a0ee:	push   eax
6400a0ef:	mov    eax,DWORD PTR [edx+0x4]
6400a0f2:	call   eax
6400a0f4:	add    esi,0x1
6400a0f7:	cmp    esi,DWORD PTR [ebx+0x190]
6400a0fd:	jne    0x6400a080
6400a0ff:	mov    edi,DWORD PTR [ebp-0x10]
6400a102:	cmp    DWORD PTR [edi-0x4],0x1
6400a106:	jle    0x6400a117
6400a108:	mov    ecx,DWORD PTR [edi-0xc]
6400a10b:	push   ecx
6400a10c:	lea    ecx,[ebp-0x10]
6400a10f:	call   0x64001950
6400a114:	mov    edi,DWORD PTR [ebp-0x10]
6400a117:	test   edi,edi
6400a119:	jne    0x6400a11f
6400a11b:	xor    esi,esi
6400a11d:	jmp    0x6400a16d
6400a11f:	push   edi
6400a120:	call   DWORD PTR ds:0x64025054
6400a126:	add    eax,0x1
6400a129:	cmp    eax,0x3fffffff
6400a12e:	jg     0x6400a169
6400a130:	lea    edi,[eax+eax*1]
6400a133:	mov    eax,edi
6400a135:	call   0x64013310
6400a13a:	mov    esi,esp
6400a13c:	test   esi,esi
6400a13e:	je     0x6400a166
6400a140:	mov    edx,DWORD PTR [ebp-0x10]
6400a143:	mov    eax,DWORD PTR [ebp-0x1c]
6400a146:	push   0x0
6400a148:	push   0x0
6400a14a:	push   edi
6400a14b:	push   esi
6400a14c:	push   0xffffffff
6400a14e:	push   edx
6400a14f:	push   0x0
6400a151:	push   eax
6400a152:	mov    BYTE PTR [esi],0x0
6400a155:	call   DWORD PTR ds:0x64025028
6400a15b:	mov    edi,DWORD PTR [ebp-0x10]
6400a15e:	neg    eax
6400a160:	sbb    eax,eax
6400a162:	and    eax,esi
6400a164:	jmp    0x6400a16b
6400a166:	mov    edi,DWORD PTR [ebp-0x10]
6400a169:	xor    eax,eax
6400a16b:	mov    esi,eax
6400a16d:	mov    eax,esi
6400a16f:	mov    DWORD PTR [ebp-0x28],0xf
6400a176:	mov    DWORD PTR [ebp-0x2c],0x0
6400a17d:	mov    BYTE PTR [ebp-0x3c],0x0
6400a181:	lea    edx,[eax+0x1]
6400a184:	mov    cl,BYTE PTR [eax]
6400a186:	add    eax,0x1
6400a189:	test   cl,cl
6400a18b:	jne    0x6400a184
6400a18d:	sub    eax,edx
6400a18f:	push   eax
6400a190:	push   esi
6400a191:	lea    ecx,[ebp-0x40]
6400a194:	call   0x64001860
6400a199:	mov    esi,DWORD PTR [ebp-0x20]
6400a19c:	lea    ecx,[ebp-0x40]
6400a19f:	push   ecx
6400a1a0:	mov    BYTE PTR [ebp-0x4],0x3
6400a1a4:	call   0x6400a710
6400a1a9:	cmp    DWORD PTR [ebp-0x28],0x10
6400a1ad:	jb     0x6400a1bb
6400a1af:	mov    edx,DWORD PTR [ebp-0x3c]
6400a1b2:	push   edx
6400a1b3:	call   0x64012332
6400a1b8:	add    esp,0x4
6400a1bb:	mov    ebx,DWORD PTR [ebx]
6400a1bd:	lea    eax,[edi-0x10]
6400a1c0:	mov    BYTE PTR [ebp-0x4],0x0
6400a1c4:	lea    ecx,[eax+0xc]
6400a1c7:	or     edx,0xffffffff
6400a1ca:	lock xadd DWORD PTR [ecx],edx
6400a1ce:	dec    edx
6400a1cf:	test   edx,edx
6400a1d1:	jg     0x6400a1dd
6400a1d3:	mov    ecx,DWORD PTR [eax]
6400a1d5:	mov    edx,DWORD PTR [ecx]
6400a1d7:	push   eax
6400a1d8:	mov    eax,DWORD PTR [edx+0x4]
6400a1db:	call   eax
6400a1dd:	test   ebx,ebx
6400a1df:	jne    0x6400a04f
6400a1e5:	mov    ecx,DWORD PTR [ebp-0x24]
6400a1e8:	push   ecx
6400a1e9:	call   0x64012332
6400a1ee:	add    esp,0x4
6400a1f1:	lea    esp,[ebp-0x50]
6400a1f4:	mov    ecx,DWORD PTR [ebp-0xc]
6400a1f7:	mov    DWORD PTR fs:0x0,ecx
6400a1fe:	pop    ecx
6400a1ff:	pop    edi
6400a200:	pop    esi
6400a201:	pop    ebx
6400a202:	mov    ecx,DWORD PTR [ebp+0x288]
6400a208:	xor    ecx,ebp
6400a20a:	call   0x64012b8c
6400a20f:	add    ebp,0x28c
6400a215:	mov    esp,ebp
6400a217:	pop    ebp
6400a218:	ret    
6400a219:	int3   
6400a21a:	int3   
6400a21b:	int3   
6400a21c:	int3   
6400a21d:	int3   
6400a21e:	int3   
6400a21f:	int3   
6400a220:	push   0xffffffff
6400a222:	push   0x640236d0
6400a227:	mov    eax,fs:0x0
6400a22d:	push   eax
6400a22e:	sub    esp,0x50
6400a231:	push   ebx
6400a232:	push   ebp
6400a233:	push   esi
6400a234:	push   edi
6400a235:	mov    eax,ds:0x6402d09c
6400a23a:	xor    eax,esp
6400a23c:	push   eax
6400a23d:	lea    eax,[esp+0x64]
6400a241:	mov    fs:0x0,eax
6400a247:	mov    ebp,DWORD PTR [esp+0x74]
6400a24b:	lea    eax,[esp+0x18]
6400a24f:	xor    ebx,ebx
6400a251:	push   eax
6400a252:	mov    edi,0x64027718
6400a257:	mov    DWORD PTR [esp+0x3c],ebx
6400a25b:	call   0x640097d0
6400a260:	push   ebx
6400a261:	push   ebx
6400a262:	mov    DWORD PTR [esp+0x74],ebx
6400a266:	call   DWORD PTR ds:0x640251d0
6400a26c:	test   eax,eax
6400a26e:	jge    0x6400a2c3
6400a270:	mov    esi,DWORD PTR [esp+0x18]
6400a274:	cmp    esi,ebx
6400a276:	mov    DWORD PTR [ebp+0x0],esi
6400a279:	je     0x6400a563
6400a27f:	lea    edi,[esi+0x8]
6400a282:	push   edi
6400a283:	call   DWORD PTR ds:0x64025020
6400a289:	push   edi
6400a28a:	call   DWORD PTR ds:0x64025098
6400a290:	test   eax,eax
6400a292:	jne    0x6400a563
6400a298:	mov    eax,DWORD PTR [esi]
6400a29a:	cmp    eax,ebx
6400a29c:	je     0x6400a2a5
6400a29e:	push   eax
6400a29f:	call   DWORD PTR ds:0x640251a4
6400a2a5:	mov    eax,DWORD PTR [esi+0x4]
6400a2a8:	cmp    eax,ebx
6400a2aa:	je     0x6400a2b5
6400a2ac:	push   eax
6400a2ad:	call   0x64013284
6400a2b2:	add    esp,0x4
6400a2b5:	push   esi
6400a2b6:	call   0x64012332
6400a2bb:	add    esp,0x4
6400a2be:	jmp    0x6400a563
6400a2c3:	lea    ecx,[esp+0x20]
6400a2c7:	push   ecx
6400a2c8:	push   0x64025ab0
6400a2cd:	push   0x1
6400a2cf:	push   ebx
6400a2d0:	push   0x64025b80
6400a2d5:	mov    DWORD PTR [esp+0x34],ebx
6400a2d9:	call   DWORD PTR ds:0x640251e0
6400a2df:	cmp    eax,ebx
6400a2e1:	jl     0x6400a53f
6400a2e7:	push   0x64028568
6400a2ec:	push   0xa
6400a2ee:	push   0x640285a4
6400a2f3:	mov    DWORD PTR [esp+0x28],ebx
6400a2f7:	call   0x64005a10
6400a2fc:	add    esp,0xc
6400a2ff:	lea    edx,[esp+0x30]
6400a303:	push   edx
6400a304:	mov    edi,eax
6400a306:	call   0x640097d0
6400a30b:	mov    BYTE PTR [esp+0x6c],0x1
6400a310:	mov    eax,DWORD PTR [eax]
6400a312:	cmp    eax,ebx
6400a314:	je     0x6400a31a
6400a316:	mov    eax,DWORD PTR [eax]
6400a318:	jmp    0x6400a31c
6400a31a:	xor    eax,eax
6400a31c:	mov    ecx,DWORD PTR [esp+0x20]
6400a320:	mov    edx,DWORD PTR [ecx]
6400a322:	lea    esi,[esp+0x1c]
6400a326:	push   esi
6400a327:	push   ebx
6400a328:	push   ebx
6400a329:	push   ebx
6400a32a:	push   ebx
6400a32b:	push   ebx
6400a32c:	push   ebx
6400a32d:	push   eax
6400a32e:	mov    eax,DWORD PTR [edx+0xc]
6400a331:	push   ecx
6400a332:	call   eax
6400a334:	lea    edi,[esp+0x30]
6400a338:	mov    esi,eax
6400a33a:	mov    BYTE PTR [esp+0x6c],bl
6400a33e:	call   0x64009870
6400a343:	cmp    esi,ebx
6400a345:	jge    0x6400a350
6400a347:	mov    eax,DWORD PTR [esp+0x20]
6400a34b:	jmp    0x6400a537
6400a350:	mov    eax,DWORD PTR [esp+0x1c]
6400a354:	push   ebx
6400a355:	push   ebx
6400a356:	push   0x3
6400a358:	push   0x3
6400a35a:	push   ebx
6400a35b:	push   ebx
6400a35c:	push   0xa
6400a35e:	push   eax
6400a35f:	call   DWORD PTR ds:0x640251d8
6400a365:	cmp    eax,ebx
6400a367:	jge    0x6400a37e
6400a369:	mov    eax,DWORD PTR [esp+0x1c]
6400a36d:	mov    ecx,DWORD PTR [eax]
6400a36f:	mov    edx,DWORD PTR [ecx+0x8]
6400a372:	push   eax
6400a373:	call   edx
6400a375:	mov    eax,DWORD PTR [esp+0x20]
6400a379:	jmp    0x6400a537
6400a37e:	push   0x640285bc
6400a383:	push   0xe
6400a385:	push   0x640285e8
6400a38a:	mov    DWORD PTR [esp+0x30],ebx
6400a38e:	call   0x64005750
6400a393:	add    esp,0xc
6400a396:	push   eax
6400a397:	lea    ebx,[esp+0x3c]
6400a39b:	call   0x64009740
6400a3a0:	mov    ecx,DWORD PTR [esp+0x78]
6400a3a4:	push   ecx
6400a3a5:	lea    edx,[esp+0x38]
6400a3a9:	push   edx
6400a3aa:	push   eax
6400a3ab:	mov    BYTE PTR [esp+0x78],0x2
6400a3b0:	call   0x64009a90
6400a3b5:	mov    esi,eax
6400a3b7:	push   0x640285f8
6400a3bc:	push   0x3
6400a3be:	push   0x6402861c
6400a3c3:	mov    BYTE PTR [esp+0x78],0x3
6400a3c8:	call   0x64005750
6400a3cd:	add    esp,0xc
6400a3d0:	push   eax
6400a3d1:	lea    ebx,[esp+0x34]
6400a3d5:	call   0x64009740
6400a3da:	mov    BYTE PTR [esp+0x6c],0x4
6400a3df:	mov    ecx,DWORD PTR [esi]
6400a3e1:	xor    ebx,ebx
6400a3e3:	cmp    ecx,ebx
6400a3e5:	je     0x6400a3eb
6400a3e7:	mov    ecx,DWORD PTR [ecx]
6400a3e9:	jmp    0x6400a3ed
6400a3eb:	xor    ecx,ecx
6400a3ed:	mov    eax,DWORD PTR [eax]
6400a3ef:	cmp    eax,ebx
6400a3f1:	je     0x6400a3f7
6400a3f3:	mov    edx,DWORD PTR [eax]
6400a3f5:	jmp    0x6400a3f9
6400a3f7:	xor    edx,edx
6400a3f9:	mov    eax,DWORD PTR [esp+0x1c]
6400a3fd:	mov    esi,DWORD PTR [eax]
6400a3ff:	lea    edi,[esp+0x24]
6400a403:	push   edi
6400a404:	push   ebx
6400a405:	push   0x30
6400a407:	push   ecx
6400a408:	push   edx
6400a409:	push   eax
6400a40a:	mov    eax,DWORD PTR [esi+0x50]
6400a40d:	call   eax
6400a40f:	lea    edi,[esp+0x30]
6400a413:	mov    esi,eax
6400a415:	call   0x64009870
6400a41a:	lea    edi,[esp+0x34]
6400a41e:	call   0x64009870
6400a423:	lea    edi,[esp+0x38]
6400a427:	mov    BYTE PTR [esp+0x6c],bl
6400a42b:	call   0x64009870
6400a430:	cmp    esi,ebx
6400a432:	jge    0x6400a449
6400a434:	mov    eax,DWORD PTR [esp+0x1c]
6400a438:	mov    ecx,DWORD PTR [eax]
6400a43a:	mov    edx,DWORD PTR [ecx+0x8]
6400a43d:	push   eax
6400a43e:	call   edx
6400a440:	mov    eax,DWORD PTR [esp+0x20]
6400a444:	jmp    0x6400a537
6400a449:	mov    eax,DWORD PTR [esp+0x24]
6400a44d:	cmp    eax,ebx
6400a44f:	mov    DWORD PTR [esp+0x2c],ebx
6400a453:	je     0x6400a50f
6400a459:	mov    edi,DWORD PTR ds:0x6402519c
6400a45f:	nop
6400a460:	mov    ecx,DWORD PTR [eax]
6400a462:	lea    edx,[esp+0x2c]
6400a466:	push   edx
6400a467:	lea    edx,[esp+0x2c]
6400a46b:	push   edx
6400a46c:	push   0x1
6400a46e:	push   0xffffffff
6400a470:	push   eax
6400a471:	mov    eax,DWORD PTR [ecx+0x10]
6400a474:	call   eax
6400a476:	cmp    DWORD PTR [esp+0x2c],ebx
6400a47a:	je     0x6400a50f
6400a480:	mov    esi,DWORD PTR [esp+0x28]
6400a484:	mov    eax,DWORD PTR [esp+0x7c]
6400a488:	mov    ebp,DWORD PTR [esi]
6400a48a:	push   ebx
6400a48b:	push   ebx
6400a48c:	lea    ecx,[esp+0x44]
6400a490:	push   ecx
6400a491:	push   ebx
6400a492:	call   0x64009b10
6400a497:	mov    edx,DWORD PTR [ebp+0x10]
6400a49a:	push   eax
6400a49b:	push   esi
6400a49c:	call   edx
6400a49e:	cmp    eax,ebx
6400a4a0:	jl     0x6400a4aa
6400a4a2:	cmp    WORD PTR [esp+0x3c],0x8
6400a4a8:	je     0x6400a4cb
6400a4aa:	lea    eax,[esp+0x3c]
6400a4ae:	push   eax
6400a4af:	call   edi
6400a4b1:	mov    eax,DWORD PTR [esp+0x28]
6400a4b5:	mov    ecx,DWORD PTR [eax]
6400a4b7:	mov    edx,DWORD PTR [ecx+0x8]
6400a4ba:	push   eax
6400a4bb:	call   edx
6400a4bd:	mov    eax,DWORD PTR [esp+0x24]
6400a4c1:	cmp    eax,ebx
6400a4c3:	mov    ebp,DWORD PTR [esp+0x74]
6400a4c7:	jne    0x6400a460
6400a4c9:	jmp    0x6400a50f
6400a4cb:	lea    eax,[esp+0x4c]
6400a4cf:	push   eax
6400a4d0:	call   DWORD PTR ds:0x64025194
6400a4d6:	lea    ecx,[esp+0x3c]
6400a4da:	push   ecx
6400a4db:	lea    edx,[esp+0x50]
6400a4df:	push   edx
6400a4e0:	call   DWORD PTR ds:0x64025198
6400a4e6:	cmp    eax,ebx
6400a4e8:	jge    0x6400a4f0
6400a4ea:	push   eax
6400a4eb:	call   0x6401ecd0
6400a4f0:	lea    esi,[esp+0x4c]
6400a4f4:	lea    ecx,[esp+0x18]
6400a4f8:	mov    BYTE PTR [esp+0x6c],0x5
6400a4fd:	call   0x64009bf0
6400a502:	mov    eax,esi
6400a504:	push   eax
6400a505:	mov    BYTE PTR [esp+0x70],bl
6400a509:	call   edi
6400a50b:	mov    ebp,DWORD PTR [esp+0x74]
6400a50f:	mov    eax,DWORD PTR [esp+0x1c]
6400a513:	mov    ecx,DWORD PTR [eax]
6400a515:	mov    edx,DWORD PTR [ecx+0x8]
6400a518:	push   eax
6400a519:	call   edx
6400a51b:	mov    eax,DWORD PTR [esp+0x20]
6400a51f:	mov    ecx,DWORD PTR [eax]
6400a521:	mov    edx,DWORD PTR [ecx+0x8]
6400a524:	push   eax
6400a525:	call   edx
6400a527:	mov    eax,DWORD PTR [esp+0x24]
6400a52b:	mov    ecx,DWORD PTR [eax]
6400a52d:	mov    edx,DWORD PTR [ecx+0x8]
6400a530:	push   eax
6400a531:	call   edx
6400a533:	mov    eax,DWORD PTR [esp+0x28]
6400a537:	mov    ecx,DWORD PTR [eax]
6400a539:	mov    edx,DWORD PTR [ecx+0x8]
6400a53c:	push   eax
6400a53d:	call   edx
6400a53f:	call   DWORD PTR ds:0x640251d4
6400a545:	mov    eax,DWORD PTR [esp+0x18]
6400a549:	cmp    eax,ebx
6400a54b:	mov    DWORD PTR [ebp+0x0],eax
6400a54e:	je     0x6400a55a
6400a550:	add    eax,0x8
6400a553:	push   eax
6400a554:	call   DWORD PTR ds:0x64025020
6400a55a:	lea    edi,[esp+0x18]
6400a55e:	call   0x64009870
6400a563:	mov    eax,ebp
6400a565:	mov    ecx,DWORD PTR [esp+0x64]
6400a569:	mov    DWORD PTR fs:0x0,ecx
6400a570:	pop    ecx
6400a571:	pop    edi
6400a572:	pop    esi
6400a573:	pop    ebp
6400a574:	pop    ebx
6400a575:	add    esp,0x5c
6400a578:	ret    
6400a579:	int3   
6400a57a:	int3   
6400a57b:	int3   
6400a57c:	int3   
6400a57d:	int3   
6400a57e:	int3   
6400a57f:	int3   
6400a580:	push   ebp
6400a581:	mov    ebp,esp
6400a583:	and    esp,0xfffffff8
6400a586:	push   0xffffffff
6400a588:	push   0x64023bb8
6400a58d:	mov    eax,fs:0x0
6400a593:	push   eax
6400a594:	sub    esp,0x14
6400a597:	push   esi
6400a598:	push   edi
6400a599:	mov    eax,ds:0x6402d09c
6400a59e:	xor    eax,esp
6400a5a0:	push   eax
6400a5a1:	lea    eax,[esp+0x20]
6400a5a5:	mov    fs:0x0,eax
6400a5ab:	mov    DWORD PTR [esp+0x18],0x0
6400a5b3:	call   DWORD PTR ds:0x6402d06c
6400a5b9:	push   0x64028620
6400a5be:	push   0xc
6400a5c0:	push   0x64028658
6400a5c5:	call   0x64005a10
6400a5ca:	add    esp,0xc
6400a5cd:	lea    ecx,[esp+0x14]
6400a5d1:	push   ecx
6400a5d2:	mov    edi,eax
6400a5d4:	call   0x640097d0
6400a5d9:	push   0x64028674
6400a5de:	push   0x15
6400a5e0:	push   0x640286b4
6400a5e5:	mov    DWORD PTR [esp+0x34],0x0
6400a5ed:	call   0x64005a10
6400a5f2:	add    esp,0xc
6400a5f5:	lea    edx,[esp+0x10]
6400a5f9:	push   edx
6400a5fa:	mov    edi,eax
6400a5fc:	call   0x640097d0
6400a601:	lea    eax,[esp+0x14]
6400a605:	push   eax
6400a606:	lea    ecx,[esp+0x14]
6400a60a:	push   ecx
6400a60b:	lea    edx,[esp+0x20]
6400a60f:	push   edx
6400a610:	mov    BYTE PTR [esp+0x34],0x1
6400a615:	call   0x6400a220
6400a61a:	add    esp,0xc
6400a61d:	mov    esi,DWORD PTR [esp+0x10]
6400a621:	test   esi,esi
6400a623:	je     0x6400a659
6400a625:	lea    eax,[esi+0x8]
6400a628:	push   eax
6400a629:	call   DWORD PTR ds:0x64025098
6400a62f:	test   eax,eax
6400a631:	jne    0x6400a659
6400a633:	mov    eax,DWORD PTR [esi]
6400a635:	test   eax,eax
6400a637:	je     0x6400a640
6400a639:	push   eax
6400a63a:	call   DWORD PTR ds:0x640251a4
6400a640:	mov    eax,DWORD PTR [esi+0x4]
6400a643:	test   eax,eax
6400a645:	je     0x6400a650
6400a647:	push   eax
6400a648:	call   0x64013284
6400a64d:	add    esp,0x4
6400a650:	push   esi
6400a651:	call   0x64012332
6400a656:	add    esp,0x4
6400a659:	mov    BYTE PTR [esp+0x28],0x4
6400a65e:	mov    esi,DWORD PTR [esp+0x14]
6400a662:	test   esi,esi
6400a664:	je     0x6400a69a
6400a666:	lea    ecx,[esi+0x8]
6400a669:	push   ecx
6400a66a:	call   DWORD PTR ds:0x64025098
6400a670:	test   eax,eax
6400a672:	jne    0x6400a69a
6400a674:	mov    eax,DWORD PTR [esi]
6400a676:	test   eax,eax
6400a678:	je     0x6400a681
6400a67a:	push   eax
6400a67b:	call   DWORD PTR ds:0x640251a4
6400a681:	mov    eax,DWORD PTR [esi+0x4]
6400a684:	test   eax,eax
6400a686:	je     0x6400a691
6400a688:	push   eax
6400a689:	call   0x64013284
6400a68e:	add    esp,0x4
6400a691:	push   esi
6400a692:	call   0x64012332
6400a697:	add    esp,0x4
6400a69a:	mov    esi,DWORD PTR [esp+0x18]
6400a69e:	test   esi,esi
6400a6a0:	je     0x6400a6a6
6400a6a2:	mov    eax,DWORD PTR [esi]
6400a6a4:	jmp    0x6400a6a8
6400a6a6:	xor    eax,eax
6400a6a8:	mov    edi,DWORD PTR [ebp+0x8]
6400a6ab:	push   eax
6400a6ac:	mov    ecx,edi
6400a6ae:	call   0x64002540
6400a6b3:	test   esi,esi
6400a6b5:	je     0x6400a6eb
6400a6b7:	lea    edx,[esi+0x8]
6400a6ba:	push   edx
6400a6bb:	call   DWORD PTR ds:0x64025098
6400a6c1:	test   eax,eax
6400a6c3:	jne    0x6400a6eb
6400a6c5:	mov    eax,DWORD PTR [esi]
6400a6c7:	test   eax,eax
6400a6c9:	je     0x6400a6d2
6400a6cb:	push   eax
6400a6cc:	call   DWORD PTR ds:0x640251a4
6400a6d2:	mov    eax,DWORD PTR [esi+0x4]
6400a6d5:	test   eax,eax
6400a6d7:	je     0x6400a6e2
6400a6d9:	push   eax
6400a6da:	call   0x64013284
6400a6df:	add    esp,0x4
6400a6e2:	push   esi
6400a6e3:	call   0x64012332
6400a6e8:	add    esp,0x4
6400a6eb:	mov    eax,edi
6400a6ed:	mov    ecx,DWORD PTR [esp+0x20]
6400a6f1:	mov    DWORD PTR fs:0x0,ecx
6400a6f8:	pop    ecx
6400a6f9:	pop    edi
6400a6fa:	pop    esi
6400a6fb:	mov    esp,ebp
6400a6fd:	pop    ebp
6400a6fe:	ret    
6400a6ff:	int3   
6400a700:	mov    ecx,DWORD PTR [eax]
6400a702:	push   ecx
6400a703:	call   0x64012332
6400a708:	pop    ecx
6400a709:	ret    
6400a70a:	int3   
6400a70b:	int3   
6400a70c:	int3   
6400a70d:	int3   
6400a70e:	int3   
6400a70f:	int3   
6400a710:	push   ebp
6400a711:	mov    ebp,esp
6400a713:	and    esp,0xfffffff8
6400a716:	sub    esp,0x8
6400a719:	push   ebx
6400a71a:	mov    ebx,DWORD PTR [esi+0x4]
6400a71d:	test   ebx,ebx
6400a71f:	push   edi
6400a720:	jne    0x6400a726
6400a722:	xor    edi,edi
6400a724:	jmp    0x6400a73e
6400a726:	mov    ecx,DWORD PTR [esi+0x8]
6400a729:	sub    ecx,ebx
6400a72b:	mov    eax,0x92492493
6400a730:	imul   ecx
6400a732:	add    edx,ecx
6400a734:	sar    edx,0x4
6400a737:	mov    edi,edx
6400a739:	shr    edi,0x1f
6400a73c:	add    edi,edx
6400a73e:	test   ebx,ebx
6400a740:	je     0x6400a791
6400a742:	mov    ecx,DWORD PTR [esi+0xc]
6400a745:	sub    ecx,ebx
6400a747:	mov    eax,0x92492493
6400a74c:	imul   ecx
6400a74e:	add    edx,ecx
6400a750:	sar    edx,0x4
6400a753:	mov    eax,edx
6400a755:	shr    eax,0x1f
6400a758:	add    eax,edx
6400a75a:	cmp    edi,eax
6400a75c:	jae    0x6400a791
6400a75e:	mov    edx,DWORD PTR [ebp+0x8]
6400a761:	mov    edi,DWORD PTR [esi+0x8]
6400a764:	mov    BYTE PTR [esp+0x8],0x0
6400a769:	mov    eax,DWORD PTR [esp+0x8]
6400a76d:	mov    ecx,DWORD PTR [esp+0x8]
6400a771:	push   eax
6400a772:	push   ecx
6400a773:	push   esi
6400a774:	push   edx
6400a775:	push   edi
6400a776:	mov    ecx,0x1
6400a77b:	call   0x6400adb0
6400a780:	add    esp,0x14
6400a783:	add    edi,0x1c
6400a786:	mov    DWORD PTR [esi+0x8],edi
6400a789:	pop    edi
6400a78a:	pop    ebx
6400a78b:	mov    esp,ebp
6400a78d:	pop    ebp
6400a78e:	ret    0x4
6400a791:	mov    edi,DWORD PTR [esi+0x8]
6400a794:	cmp    ebx,edi
6400a796:	jbe    0x6400a79d
6400a798:	call   0x640126e8
6400a79d:	mov    eax,DWORD PTR [ebp+0x8]
6400a7a0:	push   edi
6400a7a1:	push   esi
6400a7a2:	push   eax
6400a7a3:	lea    ecx,[esp+0x14]
6400a7a7:	push   ecx
6400a7a8:	mov    eax,esi
6400a7aa:	call   0x6400a7f0
6400a7af:	pop    edi
6400a7b0:	pop    ebx
6400a7b1:	mov    esp,ebp
6400a7b3:	pop    ebp
6400a7b4:	ret    0x4
6400a7b7:	int3   
6400a7b8:	int3   
6400a7b9:	int3   
6400a7ba:	int3   
6400a7bb:	int3   
6400a7bc:	int3   
6400a7bd:	int3   
6400a7be:	int3   
6400a7bf:	int3   
6400a7c0:	mov    eax,DWORD PTR [ecx+0x4]
6400a7c3:	test   eax,eax
6400a7c5:	jne    0x6400a7c8
6400a7c7:	ret    
6400a7c8:	mov    ecx,DWORD PTR [ecx+0x8]
6400a7cb:	sub    ecx,eax
6400a7cd:	mov    eax,0x92492493
6400a7d2:	imul   ecx
6400a7d4:	add    edx,ecx
6400a7d6:	sar    edx,0x4
6400a7d9:	mov    eax,edx
6400a7db:	shr    eax,0x1f
6400a7de:	add    eax,edx
6400a7e0:	ret    
6400a7e1:	int3   
6400a7e2:	int3   
6400a7e3:	int3   
6400a7e4:	int3   
6400a7e5:	int3   
6400a7e6:	int3   
6400a7e7:	int3   
6400a7e8:	int3   
6400a7e9:	int3   
6400a7ea:	int3   
6400a7eb:	int3   
6400a7ec:	int3   
6400a7ed:	int3   
6400a7ee:	int3   
6400a7ef:	int3   
6400a7f0:	push   ecx
6400a7f1:	push   ebx
6400a7f2:	push   ebp
6400a7f3:	mov    ebp,DWORD PTR [esp+0x1c]
6400a7f7:	push   esi
6400a7f8:	mov    esi,eax
6400a7fa:	push   edi
6400a7fb:	mov    edi,DWORD PTR [esi+0x4]
6400a7fe:	test   edi,edi
6400a800:	je     0x6400a81e
6400a802:	mov    ebx,DWORD PTR [esi+0x8]
6400a805:	mov    ecx,ebx
6400a807:	sub    ecx,edi
6400a809:	mov    eax,0x92492493
6400a80e:	imul   ecx
6400a810:	add    edx,ecx
6400a812:	sar    edx,0x4
6400a815:	mov    eax,edx
6400a817:	shr    eax,0x1f
6400a81a:	add    eax,edx
6400a81c:	jne    0x6400a826
6400a81e:	mov    ebx,DWORD PTR [esp+0x20]
6400a822:	xor    edi,edi
6400a824:	jmp    0x6400a857
6400a826:	cmp    edi,ebx
6400a828:	jbe    0x6400a82f
6400a82a:	call   0x640126e8
6400a82f:	mov    ebx,DWORD PTR [esp+0x20]
6400a833:	test   ebx,ebx
6400a835:	je     0x6400a83b
6400a837:	cmp    ebx,esi
6400a839:	je     0x6400a840
6400a83b:	call   0x640126e8
6400a840:	mov    ecx,ebp
6400a842:	sub    ecx,edi
6400a844:	mov    eax,0x92492493
6400a849:	imul   ecx
6400a84b:	add    edx,ecx
6400a84d:	sar    edx,0x4
6400a850:	mov    edi,edx
6400a852:	shr    edi,0x1f
6400a855:	add    edi,edx
6400a857:	mov    ecx,DWORD PTR [esp+0x1c]
6400a85b:	push   ebp
6400a85c:	push   ebx
6400a85d:	push   ecx
6400a85e:	mov    ecx,esi
6400a860:	call   0x6400a8e0
6400a865:	mov    ebx,DWORD PTR [esi+0x4]
6400a868:	cmp    ebx,DWORD PTR [esi+0x8]
6400a86b:	jbe    0x6400a872
6400a86d:	call   0x640126e8
6400a872:	lea    edx,[edi*8+0x0]
6400a879:	sub    edx,edi
6400a87b:	lea    edi,[ebx+edx*4]
6400a87e:	cmp    edi,DWORD PTR [esi+0x8]
6400a881:	mov    DWORD PTR [esp+0x24],ebx
6400a885:	ja     0x6400a88c
6400a887:	cmp    edi,DWORD PTR [esi+0x4]
6400a88a:	jae    0x6400a891
6400a88c:	call   0x640126e8
6400a891:	mov    eax,DWORD PTR [esp+0x18]
6400a895:	mov    DWORD PTR [eax+0x4],edi
6400a898:	pop    edi
6400a899:	mov    DWORD PTR [eax],esi
6400a89b:	pop    esi
6400a89c:	pop    ebp
6400a89d:	pop    ebx
6400a89e:	pop    ecx
6400a89f:	ret    0x10
6400a8a2:	int3   
6400a8a3:	int3   
6400a8a4:	int3   
6400a8a5:	int3   
6400a8a6:	int3   
6400a8a7:	int3   
6400a8a8:	int3   
6400a8a9:	int3   
6400a8aa:	int3   
6400a8ab:	int3   
6400a8ac:	int3   
6400a8ad:	int3   
6400a8ae:	int3   
6400a8af:	int3   
6400a8b0:	push   ecx
6400a8b1:	mov    ecx,DWORD PTR [esp+0x8]
6400a8b5:	mov    BYTE PTR [esp],0x0
6400a8b9:	mov    eax,DWORD PTR [esp]
6400a8bc:	push   eax
6400a8bd:	mov    eax,DWORD PTR [esp+0xc]
6400a8c1:	push   ecx
6400a8c2:	push   edx
6400a8c3:	push   eax
6400a8c4:	push   edi
6400a8c5:	mov    ecx,esi
6400a8c7:	call   0x6400adb0
6400a8cc:	lea    ecx,[esi*8+0x0]
6400a8d3:	sub    ecx,esi
6400a8d5:	lea    eax,[edi+ecx*4]
6400a8d8:	add    esp,0x18
6400a8db:	ret    0x4
6400a8de:	int3   
6400a8df:	int3   
6400a8e0:	push   ebp
6400a8e1:	mov    ebp,esp
6400a8e3:	push   0xffffffff
6400a8e5:	push   0x64022b98
6400a8ea:	mov    eax,fs:0x0
6400a8f0:	push   eax
6400a8f1:	sub    esp,0x34
6400a8f4:	mov    eax,ds:0x6402d09c
6400a8f9:	xor    eax,ebp
6400a8fb:	mov    DWORD PTR [ebp-0x14],eax
6400a8fe:	push   ebx
6400a8ff:	push   esi
6400a900:	push   edi
6400a901:	push   eax
6400a902:	lea    eax,[ebp-0xc]
6400a905:	mov    fs:0x0,eax
6400a90b:	mov    DWORD PTR [ebp-0x10],esp
6400a90e:	mov    eax,DWORD PTR [ebp+0x8]
6400a911:	push   0xffffffff
6400a913:	xor    edi,edi
6400a915:	mov    ebx,ecx
6400a917:	push   edi
6400a918:	push   eax
6400a919:	lea    ecx,[ebp-0x30]
6400a91c:	mov    DWORD PTR [ebp-0x3c],ebx
6400a91f:	mov    DWORD PTR [ebp-0x18],0xf
6400a926:	mov    DWORD PTR [ebp-0x1c],edi
6400a929:	mov    BYTE PTR [ebp-0x2c],0x0
6400a92d:	call   0x64001780
6400a932:	mov    DWORD PTR [ebp-0x4],edi
6400a935:	mov    ecx,DWORD PTR [ebx+0x4]
6400a938:	cmp    ecx,edi
6400a93a:	je     0x6400a954
6400a93c:	mov    esi,DWORD PTR [ebx+0xc]
6400a93f:	sub    esi,ecx
6400a941:	mov    eax,0x92492493
6400a946:	imul   esi
6400a948:	add    edx,esi
6400a94a:	sar    edx,0x4
6400a94d:	mov    edi,edx
6400a94f:	shr    edi,0x1f
6400a952:	add    edi,edx
6400a954:	test   ecx,ecx
6400a956:	jne    0x6400a95c
6400a958:	xor    eax,eax
6400a95a:	jmp    0x6400a974
6400a95c:	mov    esi,DWORD PTR [ebx+0x8]
6400a95f:	sub    esi,ecx
6400a961:	mov    eax,0x92492493
6400a966:	imul   esi
6400a968:	add    edx,esi
6400a96a:	sar    edx,0x4
6400a96d:	mov    eax,edx
6400a96f:	shr    eax,0x1f
6400a972:	add    eax,edx
6400a974:	mov    edx,0x9249249
6400a979:	sub    edx,eax
6400a97b:	cmp    edx,0x1
6400a97e:	jae    0x6400a985
6400a980:	call   0x6400ac20
6400a985:	test   ecx,ecx
6400a987:	jne    0x6400a98d
6400a989:	xor    eax,eax
6400a98b:	jmp    0x6400a9a5
6400a98d:	mov    esi,DWORD PTR [ebx+0x8]
6400a990:	sub    esi,ecx
6400a992:	mov    eax,0x92492493
6400a997:	imul   esi
6400a999:	add    edx,esi
6400a99b:	sar    edx,0x4
6400a99e:	mov    eax,edx
6400a9a0:	shr    eax,0x1f
6400a9a3:	add    eax,edx
6400a9a5:	add    eax,0x1
6400a9a8:	cmp    edi,eax
6400a9aa:	jae    0x6400ab06
6400a9b0:	mov    eax,edi
6400a9b2:	shr    eax,1
6400a9b4:	mov    edx,0x9249249
6400a9b9:	sub    edx,eax
6400a9bb:	cmp    edx,edi
6400a9bd:	jae    0x6400a9c3
6400a9bf:	xor    edi,edi
6400a9c1:	jmp    0x6400a9c5
6400a9c3:	add    edi,eax
6400a9c5:	test   ecx,ecx
6400a9c7:	jne    0x6400a9cd
6400a9c9:	xor    eax,eax
6400a9cb:	jmp    0x6400a9e5
6400a9cd:	mov    esi,DWORD PTR [ebx+0x8]
6400a9d0:	sub    esi,ecx
6400a9d2:	mov    eax,0x92492493
6400a9d7:	imul   esi
6400a9d9:	add    edx,esi
6400a9db:	sar    edx,0x4
6400a9de:	mov    eax,edx
6400a9e0:	shr    eax,0x1f
6400a9e3:	add    eax,edx
6400a9e5:	add    eax,0x1
6400a9e8:	cmp    edi,eax
6400a9ea:	jae    0x6400a9f8
6400a9ec:	mov    ecx,ebx
6400a9ee:	call   0x6400a7c0
6400a9f3:	mov    edi,eax
6400a9f5:	add    edi,0x1
6400a9f8:	push   0x0
6400a9fa:	push   edi
6400a9fb:	call   0x6400ad40
6400aa00:	mov    BYTE PTR [ebp-0x4],0x1
6400aa04:	mov    ecx,DWORD PTR [ebx+0x4]
6400aa07:	mov    BYTE PTR [ebp-0x34],0x0
6400aa0b:	mov    edx,DWORD PTR [ebp-0x34]
6400aa0e:	push   edx
6400aa0f:	mov    edx,DWORD PTR [ebp-0x34]
6400aa12:	push   edx
6400aa13:	mov    edx,DWORD PTR [ebp+0x10]
6400aa16:	push   ebx
6400aa17:	push   edx
6400aa18:	mov    edx,eax
6400aa1a:	mov    DWORD PTR [ebp-0x40],eax
6400aa1d:	mov    DWORD PTR [ebp-0x38],eax
6400aa20:	call   0x6400aed0
6400aa25:	add    esp,0x18
6400aa28:	mov    esi,eax
6400aa2a:	mov    BYTE PTR [ebp-0x34],0x0
6400aa2e:	mov    eax,DWORD PTR [ebp-0x34]
6400aa31:	mov    ecx,DWORD PTR [ebp-0x34]
6400aa34:	push   eax
6400aa35:	push   ecx
6400aa36:	push   ebx
6400aa37:	lea    edx,[ebp-0x30]
6400aa3a:	push   edx
6400aa3b:	push   esi
6400aa3c:	mov    ecx,0x1
6400aa41:	mov    DWORD PTR [ebp-0x38],esi
6400aa44:	call   0x6400adb0
6400aa49:	mov    eax,DWORD PTR [ebx+0x8]
6400aa4c:	add    esp,0x14
6400aa4f:	mov    BYTE PTR [ebp-0x34],0x0
6400aa53:	mov    ecx,DWORD PTR [ebp-0x34]
6400aa56:	mov    edx,DWORD PTR [ebp-0x34]
6400aa59:	push   ecx
6400aa5a:	mov    ecx,DWORD PTR [ebp+0x10]
6400aa5d:	push   edx
6400aa5e:	add    esi,0x1c
6400aa61:	push   ebx
6400aa62:	push   eax
6400aa63:	mov    edx,esi
6400aa65:	mov    DWORD PTR [ebp-0x38],esi
6400aa68:	call   0x6400aed0
6400aa6d:	mov    esi,DWORD PTR [ebx+0x4]
6400aa70:	add    esp,0x10
6400aa73:	test   esi,esi
6400aa75:	jne    0x6400aa7b
6400aa77:	xor    eax,eax
6400aa79:	jmp    0x6400aa93
6400aa7b:	mov    ecx,DWORD PTR [ebx+0x8]
6400aa7e:	sub    ecx,esi
6400aa80:	mov    eax,0x92492493
6400aa85:	imul   ecx
6400aa87:	add    edx,ecx
6400aa89:	sar    edx,0x4
6400aa8c:	mov    eax,edx
6400aa8e:	shr    eax,0x1f
6400aa91:	add    eax,edx
6400aa93:	add    eax,0x1
6400aa96:	test   esi,esi
6400aa98:	mov    DWORD PTR [ebp-0x34],eax
6400aa9b:	je     0x6400aabb
6400aa9d:	mov    eax,DWORD PTR [ebp-0x34]
6400aaa0:	mov    ecx,DWORD PTR [ebx+0x8]
6400aaa3:	push   eax
6400aaa4:	push   ebx
6400aaa5:	push   ecx
6400aaa6:	push   esi
6400aaa7:	call   0x6400ae60
6400aaac:	mov    edx,DWORD PTR [ebx+0x4]
6400aaaf:	push   edx
6400aab0:	call   0x64012332
6400aab5:	mov    eax,DWORD PTR [ebp-0x34]
6400aab8:	add    esp,0x14
6400aabb:	mov    ecx,DWORD PTR [ebp-0x40]
6400aabe:	lea    edx,[edi*8+0x0]
6400aac5:	sub    edx,edi
6400aac7:	lea    edx,[ecx+edx*4]
6400aaca:	mov    DWORD PTR [ebx+0xc],edx
6400aacd:	lea    edx,[eax*8+0x0]
6400aad4:	sub    edx,eax
6400aad6:	lea    eax,[ecx+edx*4]
6400aad9:	mov    DWORD PTR [ebx+0x8],eax
6400aadc:	mov    DWORD PTR [ebx+0x4],ecx
6400aadf:	jmp    0x6400abc2
6400aae4:	mov    ecx,DWORD PTR [ebp-0x38]
6400aae7:	mov    esi,DWORD PTR [ebp-0x40]
6400aaea:	push   ecx
6400aaeb:	mov    ecx,DWORD PTR [ebp-0x3c]
6400aaee:	push   esi
6400aaef:	call   0x6400ac00
6400aaf4:	push   esi
6400aaf5:	call   0x64012332
6400aafa:	add    esp,0x4
6400aafd:	push   0x0
6400aaff:	push   0x0
6400ab01:	call   0x6401277b
6400ab06:	mov    edi,DWORD PTR [ebx+0x8]
6400ab09:	mov    esi,DWORD PTR [ebp+0x10]
6400ab0c:	mov    ecx,edi
6400ab0e:	sub    ecx,esi
6400ab10:	mov    eax,0x92492493
6400ab15:	imul   ecx
6400ab17:	add    edx,ecx
6400ab19:	sar    edx,0x4
6400ab1c:	mov    eax,edx
6400ab1e:	shr    eax,0x1f
6400ab21:	add    eax,edx
6400ab23:	cmp    eax,0x1
6400ab26:	mov    edx,ebx
6400ab28:	jae    0x6400ab9a
6400ab2a:	lea    ecx,[esi+0x1c]
6400ab2d:	push   ecx
6400ab2e:	push   edi
6400ab2f:	push   esi
6400ab30:	call   0x6400aca0
6400ab35:	mov    BYTE PTR [ebp-0x4],0x3
6400ab39:	mov    edi,DWORD PTR [ebx+0x8]
6400ab3c:	lea    edx,[ebp-0x30]
6400ab3f:	push   edx
6400ab40:	mov    ecx,edi
6400ab42:	sub    ecx,esi
6400ab44:	mov    eax,0x92492493
6400ab49:	imul   ecx
6400ab4b:	add    edx,ecx
6400ab4d:	sar    edx,0x4
6400ab50:	mov    eax,edx
6400ab52:	shr    eax,0x1f
6400ab55:	add    eax,edx
6400ab57:	mov    esi,0x1
6400ab5c:	sub    esi,eax
6400ab5e:	mov    edx,ebx
6400ab60:	call   0x6400a8b0
6400ab65:	mov    eax,DWORD PTR [ebp+0x10]
6400ab68:	mov    DWORD PTR [ebp-0x4],0x0
6400ab6f:	add    DWORD PTR [ebx+0x8],0x1c
6400ab73:	mov    ebx,DWORD PTR [ebx+0x8]
6400ab76:	lea    edi,[ebx-0x1c]
6400ab79:	jmp    0x6400abba
6400ab7b:	mov    ecx,DWORD PTR [ebp-0x3c]
6400ab7e:	mov    edx,DWORD PTR [ecx+0x8]
6400ab81:	mov    eax,DWORD PTR [ebp+0x10]
6400ab84:	add    edx,0x1c
6400ab87:	push   edx
6400ab88:	add    eax,0x1c
6400ab8b:	push   eax
6400ab8c:	call   0x6400ac00
6400ab91:	push   0x0
6400ab93:	push   0x0
6400ab95:	call   0x6401277b
6400ab9a:	push   edi
6400ab9b:	lea    eax,[edi-0x1c]
6400ab9e:	push   edi
6400ab9f:	push   eax
6400aba0:	mov    DWORD PTR [ebp-0x34],eax
6400aba3:	call   0x6400aca0
6400aba8:	mov    DWORD PTR [ebx+0x8],eax
6400abab:	mov    eax,DWORD PTR [ebp-0x34]
6400abae:	mov    ebx,esi
6400abb0:	call   0x6400acf0
6400abb5:	lea    edi,[esi+0x1c]
6400abb8:	mov    eax,esi
6400abba:	lea    ebx,[ebp-0x30]
6400abbd:	call   0x6400acd0
6400abc2:	cmp    DWORD PTR [ebp-0x18],0x10
6400abc6:	jb     0x6400abd4
6400abc8:	mov    ecx,DWORD PTR [ebp-0x2c]
6400abcb:	push   ecx
6400abcc:	call   0x64012332
6400abd1:	add    esp,0x4
6400abd4:	mov    ecx,DWORD PTR [ebp-0xc]
6400abd7:	mov    DWORD PTR fs:0x0,ecx
6400abde:	pop    ecx
6400abdf:	pop    edi
6400abe0:	pop    esi
6400abe1:	pop    ebx
6400abe2:	mov    ecx,DWORD PTR [ebp-0x14]
6400abe5:	xor    ecx,ebp
6400abe7:	call   0x64012b8c
6400abec:	mov    esp,ebp
6400abee:	pop    ebp
6400abef:	ret    0xc
6400abf2:	int3   
6400abf3:	int3   
6400abf4:	int3   
6400abf5:	int3   
6400abf6:	int3   
6400abf7:	int3   
6400abf8:	int3   
6400abf9:	int3   
6400abfa:	int3   
6400abfb:	int3   
6400abfc:	int3   
6400abfd:	int3   
6400abfe:	int3   
6400abff:	int3   
6400ac00:	mov    eax,DWORD PTR [esp+0x8]
6400ac04:	mov    edx,DWORD PTR [esp+0x4]
6400ac08:	push   eax
6400ac09:	push   ecx
6400ac0a:	mov    ecx,DWORD PTR [esp+0x10]
6400ac0e:	push   ecx
6400ac0f:	push   edx
6400ac10:	call   0x6400ae60
6400ac15:	add    esp,0x10
6400ac18:	ret    0x8
6400ac1b:	int3   
6400ac1c:	int3   
6400ac1d:	int3   
6400ac1e:	int3   
6400ac1f:	int3   
6400ac20:	push   ebp
6400ac21:	mov    ebp,esp
6400ac23:	and    esp,0xfffffff8
6400ac26:	push   0xffffffff
6400ac28:	push   0x64022b68
6400ac2d:	mov    eax,fs:0x0
6400ac33:	push   eax
6400ac34:	sub    esp,0x4c
6400ac37:	mov    eax,ds:0x6402d09c
6400ac3c:	xor    eax,esp
6400ac3e:	push   eax
6400ac3f:	lea    eax,[esp+0x50]
6400ac43:	mov    fs:0x0,eax
6400ac49:	push   0x12
6400ac4b:	push   0x640286e0
6400ac50:	lea    ecx,[esp+0x10]
6400ac54:	mov    DWORD PTR [esp+0x28],0xf
6400ac5c:	mov    DWORD PTR [esp+0x24],0x0
6400ac64:	mov    BYTE PTR [esp+0x14],0x0
6400ac69:	call   0x64001860
6400ac6e:	lea    eax,[esp+0x8]
6400ac72:	push   eax
6400ac73:	lea    ecx,[esp+0x28]
6400ac77:	mov    DWORD PTR [esp+0x5c],0x0
6400ac7f:	call   0x64002cb0
6400ac84:	push   0x6402ac70
6400ac89:	lea    ecx,[esp+0x28]
6400ac8d:	push   ecx
6400ac8e:	mov    DWORD PTR [esp+0x2c],0x6402531c
6400ac96:	call   0x6401277b
6400ac9b:	int3   
6400ac9c:	int3   
6400ac9d:	int3   
6400ac9e:	int3   
6400ac9f:	int3   
6400aca0:	push   ecx
6400aca1:	mov    ecx,DWORD PTR [esp+0xc]
6400aca5:	mov    BYTE PTR [esp],0x0
6400aca9:	mov    eax,DWORD PTR [esp]
6400acac:	push   eax
6400acad:	mov    eax,DWORD PTR [esp+0x10]
6400acb1:	push   ecx
6400acb2:	mov    ecx,DWORD PTR [esp+0x10]
6400acb6:	push   edx
6400acb7:	mov    edx,DWORD PTR [esp+0x1c]
6400acbb:	push   eax
6400acbc:	call   0x6400aed0
6400acc1:	add    esp,0x14
6400acc4:	ret    0xc
6400acc7:	int3   
6400acc8:	int3   
6400acc9:	int3   
6400acca:	int3   
6400accb:	int3   
6400accc:	int3   
6400accd:	int3   
6400acce:	int3   
6400accf:	int3   
6400acd0:	push   esi
6400acd1:	mov    esi,eax
6400acd3:	cmp    esi,edi
6400acd5:	je     0x6400acea
6400acd7:	push   0xffffffff
6400acd9:	push   0x0
6400acdb:	push   ebx
6400acdc:	mov    ecx,esi
6400acde:	call   0x64001780
6400ace3:	add    esi,0x1c
6400ace6:	cmp    esi,edi
6400ace8:	jne    0x6400acd7
6400acea:	pop    esi
6400aceb:	ret    
6400acec:	int3   
6400aced:	int3   
6400acee:	int3   
6400acef:	int3   
6400acf0:	push   ecx
6400acf1:	push   esi
6400acf2:	mov    esi,eax
6400acf4:	mov    BYTE PTR [esp+0x4],0x0
6400acf9:	mov    eax,DWORD PTR [esp+0x4]
6400acfd:	mov    ecx,DWORD PTR [esp+0x4]
6400ad01:	mov    edx,DWORD PTR [esp+0x4]
6400ad05:	push   eax
6400ad06:	push   ecx
6400ad07:	push   edx
6400ad08:	push   edi
6400ad09:	push   ebx
6400ad0a:	mov    ecx,esi
6400ad0c:	call   0x6400b010
6400ad11:	sub    esi,ebx
6400ad13:	mov    eax,0x92492493
6400ad18:	imul   esi
6400ad1a:	add    edx,esi
6400ad1c:	sar    edx,0x4
6400ad1f:	mov    eax,edx
6400ad21:	shr    eax,0x1f
6400ad24:	add    eax,edx
6400ad26:	lea    ecx,[eax*8+0x0]
6400ad2d:	sub    ecx,eax
6400ad2f:	add    ecx,ecx
6400ad31:	add    esp,0x14
6400ad34:	add    ecx,ecx
6400ad36:	mov    eax,edi
6400ad38:	sub    eax,ecx
6400ad3a:	pop    esi
6400ad3b:	pop    ecx
6400ad3c:	ret    
6400ad3d:	int3   
6400ad3e:	int3   
6400ad3f:	int3   
6400ad40:	mov    ecx,DWORD PTR [esp+0x4]
6400ad44:	sub    esp,0xc
6400ad47:	test   ecx,ecx
6400ad49:	ja     0x6400ad67
6400ad4b:	xor    ecx,ecx
6400ad4d:	lea    edx,[ecx*8+0x0]
6400ad54:	sub    edx,ecx
6400ad56:	add    edx,edx
6400ad58:	add    edx,edx
6400ad5a:	push   edx
6400ad5b:	call   0x64012711
6400ad60:	add    esp,0x4
6400ad63:	add    esp,0xc
6400ad66:	ret    
6400ad67:	or     eax,0xffffffff
6400ad6a:	xor    edx,edx
6400ad6c:	div    ecx
6400ad6e:	cmp    eax,0x1c
6400ad71:	jae    0x6400ad4d
6400ad73:	lea    eax,[esp+0x10]
6400ad77:	push   eax
6400ad78:	lea    ecx,[esp+0x4]
6400ad7c:	mov    DWORD PTR [esp+0x14],0x0
6400ad84:	call   0x6401238d
6400ad89:	push   0x6402aba4
6400ad8e:	lea    ecx,[esp+0x4]
6400ad92:	push   ecx
6400ad93:	mov    DWORD PTR [esp+0x8],0x64025304
6400ad9b:	call   0x6401277b
6400ada0:	int3   
6400ada1:	int3   
6400ada2:	int3   
6400ada3:	int3   
6400ada4:	int3   
6400ada5:	int3   
6400ada6:	int3   
6400ada7:	int3   
6400ada8:	int3   
6400ada9:	int3   
6400adaa:	int3   
6400adab:	int3   
6400adac:	int3   
6400adad:	int3   
6400adae:	int3   
6400adaf:	int3   
6400adb0:	push   ebp
6400adb1:	mov    ebp,esp
6400adb3:	push   0xffffffff
6400adb5:	push   0x640226d1
6400adba:	mov    eax,fs:0x0
6400adc0:	push   eax
6400adc1:	sub    esp,0x10
6400adc4:	push   ebx
6400adc5:	push   esi
6400adc6:	push   edi
6400adc7:	mov    eax,ds:0x6402d09c
6400adcc:	xor    eax,ebp
6400adce:	push   eax
6400adcf:	lea    eax,[ebp-0xc]
6400add2:	mov    fs:0x0,eax
6400add8:	mov    DWORD PTR [ebp-0x10],esp
6400addb:	mov    edi,ecx
6400addd:	mov    esi,DWORD PTR [ebp+0x8]
6400ade0:	xor    ebx,ebx
6400ade2:	mov    DWORD PTR [ebp-0x14],esi
6400ade5:	mov    DWORD PTR [ebp-0x4],ebx
6400ade8:	cmp    edi,ebx
6400adea:	jbe    0x6400ae48
6400adec:	mov    DWORD PTR [ebp-0x18],esi
6400adef:	mov    DWORD PTR [ebp-0x1c],esi
6400adf2:	cmp    esi,ebx
6400adf4:	mov    BYTE PTR [ebp-0x4],0x1
6400adf8:	je     0x6400ae15
6400adfa:	mov    eax,DWORD PTR [ebp+0xc]
6400adfd:	push   0xffffffff
6400adff:	push   ebx
6400ae00:	mov    DWORD PTR [esi+0x18],0xf
6400ae07:	mov    DWORD PTR [esi+0x14],ebx
6400ae0a:	push   eax
6400ae0b:	mov    ecx,esi
6400ae0d:	mov    BYTE PTR [esi+0x4],bl
6400ae10:	call   0x64001780
6400ae15:	sub    edi,0x1
6400ae18:	add    esi,0x1c
6400ae1b:	mov    BYTE PTR [ebp-0x4],bl
6400ae1e:	mov    DWORD PTR [ebp+0x8],esi
6400ae21:	jmp    0x6400ade8
6400ae23:	mov    esi,DWORD PTR [ebp-0x14]
6400ae26:	mov    edi,DWORD PTR [ebp+0x8]
6400ae29:	cmp    esi,edi
6400ae2b:	je     0x6400ae3f
6400ae2d:	mov    ebx,DWORD PTR [ebp+0x10]
6400ae30:	push   esi
6400ae31:	mov    ecx,ebx
6400ae33:	call   0x6400aea0
6400ae38:	add    esi,0x1c
6400ae3b:	cmp    esi,edi
6400ae3d:	jne    0x6400ae30
6400ae3f:	xor    ebx,ebx
6400ae41:	push   ebx
6400ae42:	push   ebx
6400ae43:	call   0x6401277b
6400ae48:	mov    ecx,DWORD PTR [ebp-0xc]
6400ae4b:	mov    DWORD PTR fs:0x0,ecx
6400ae52:	pop    ecx
6400ae53:	pop    edi
6400ae54:	pop    esi
6400ae55:	pop    ebx
6400ae56:	mov    esp,ebp
6400ae58:	pop    ebp
6400ae59:	ret    
6400ae5a:	int3   
6400ae5b:	int3   
6400ae5c:	int3   
6400ae5d:	int3   
6400ae5e:	int3   
6400ae5f:	int3   
6400ae60:	push   esi
6400ae61:	mov    esi,DWORD PTR [esp+0x8]
6400ae65:	push   edi
6400ae66:	mov    edi,DWORD PTR [esp+0x10]
6400ae6a:	cmp    esi,edi
6400ae6c:	je     0x6400ae98
6400ae6e:	push   ebx
6400ae6f:	xor    ebx,ebx
6400ae71:	cmp    DWORD PTR [esi+0x18],0x10
6400ae75:	jb     0x6400ae83
6400ae77:	mov    eax,DWORD PTR [esi+0x4]
6400ae7a:	push   eax
6400ae7b:	call   0x64012332
6400ae80:	add    esp,0x4
6400ae83:	mov    DWORD PTR [esi+0x18],0xf
6400ae8a:	mov    DWORD PTR [esi+0x14],ebx
6400ae8d:	mov    BYTE PTR [esi+0x4],bl
6400ae90:	add    esi,0x1c
6400ae93:	cmp    esi,edi
6400ae95:	jne    0x6400ae71
6400ae97:	pop    ebx
6400ae98:	pop    edi
6400ae99:	pop    esi
6400ae9a:	ret    
6400ae9b:	int3   
6400ae9c:	int3   
6400ae9d:	int3   
6400ae9e:	int3   
6400ae9f:	int3   
6400aea0:	push   esi
6400aea1:	mov    esi,DWORD PTR [esp+0x8]
6400aea5:	cmp    DWORD PTR [esi+0x18],0x10
6400aea9:	jb     0x6400aeb7
6400aeab:	mov    eax,DWORD PTR [esi+0x4]
6400aeae:	push   eax
6400aeaf:	call   0x64012332
6400aeb4:	add    esp,0x4
6400aeb7:	xor    eax,eax
6400aeb9:	mov    DWORD PTR [esi+0x18],0xf
6400aec0:	mov    DWORD PTR [esi+0x14],eax
6400aec3:	mov    BYTE PTR [esi+0x4],al
6400aec6:	pop    esi
6400aec7:	ret    0x4
6400aeca:	int3   
6400aecb:	int3   
6400aecc:	int3   
6400aecd:	int3   
6400aece:	int3   
6400aecf:	int3   
6400aed0:	push   ebp
6400aed1:	mov    ebp,esp
6400aed3:	push   0xffffffff
6400aed5:	push   0x64022a19
6400aeda:	mov    eax,fs:0x0
6400aee0:	push   eax
6400aee1:	sub    esp,0x44
6400aee4:	mov    eax,ds:0x6402d09c
6400aee9:	xor    eax,ebp
6400aeeb:	mov    DWORD PTR [ebp-0x14],eax
6400aeee:	push   ebx
6400aeef:	push   esi
6400aef0:	push   edi
6400aef1:	push   eax
6400aef2:	lea    eax,[ebp-0xc]
6400aef5:	mov    fs:0x0,eax
6400aefb:	mov    DWORD PTR [ebp-0x10],esp
6400aefe:	mov    esi,edx
6400af00:	xor    eax,eax
6400af02:	mov    edi,ecx
6400af04:	mov    DWORD PTR [ebp-0x44],esi
6400af07:	mov    DWORD PTR [ebp-0x48],esi
6400af0a:	mov    DWORD PTR [ebp-0x18],0xf
6400af11:	mov    DWORD PTR [ebp-0x1c],eax
6400af14:	mov    BYTE PTR [ebp-0x2c],al
6400af17:	mov    DWORD PTR [ebp-0x4],eax
6400af1a:	mov    BYTE PTR [ebp-0x4],0x1
6400af1e:	mov    edi,edi
6400af20:	cmp    edi,DWORD PTR [ebp+0x8]
6400af23:	je     0x6400afd9
6400af29:	mov    DWORD PTR [ebp-0x4c],esi
6400af2c:	mov    DWORD PTR [ebp-0x50],esi
6400af2f:	cmp    esi,eax
6400af31:	mov    BYTE PTR [ebp-0x4],0x2
6400af35:	je     0x6400af52
6400af37:	push   0xffffffff
6400af39:	mov    DWORD PTR [esi+0x14],eax
6400af3c:	mov    DWORD PTR [esi+0x18],0xf
6400af43:	push   eax
6400af44:	mov    BYTE PTR [esi+0x4],al
6400af47:	lea    eax,[ebp-0x30]
6400af4a:	push   eax
6400af4b:	mov    ecx,esi
6400af4d:	call   0x64001780
6400af52:	mov    BYTE PTR [ebp-0x4],0x1
6400af56:	mov    ebx,DWORD PTR [esi+0x10]
6400af59:	mov    eax,DWORD PTR [esi+0x4]
6400af5c:	mov    ecx,DWORD PTR [esi+0x8]
6400af5f:	mov    edx,DWORD PTR [esi+0xc]
6400af62:	mov    DWORD PTR [ebp-0x34],ebx
6400af65:	mov    ebx,DWORD PTR [edi+0x4]
6400af68:	mov    DWORD PTR [esi+0x4],ebx
6400af6b:	mov    ebx,DWORD PTR [edi+0x8]
6400af6e:	mov    DWORD PTR [esi+0x8],ebx
6400af71:	mov    ebx,DWORD PTR [edi+0xc]
6400af74:	mov    DWORD PTR [esi+0xc],ebx
6400af77:	mov    ebx,DWORD PTR [edi+0x10]
6400af7a:	mov    DWORD PTR [esi+0x10],ebx
6400af7d:	mov    DWORD PTR [edi+0x4],eax
6400af80:	mov    DWORD PTR [edi+0x8],ecx
6400af83:	mov    ecx,DWORD PTR [ebp-0x34]
6400af86:	mov    DWORD PTR [edi+0xc],edx
6400af89:	mov    edx,DWORD PTR [edi+0x14]
6400af8c:	mov    DWORD PTR [edi+0x10],ecx
6400af8f:	mov    eax,DWORD PTR [esi+0x14]
6400af92:	mov    DWORD PTR [esi+0x14],edx
6400af95:	mov    ecx,DWORD PTR [edi+0x18]
6400af98:	mov    DWORD PTR [edi+0x14],eax
6400af9b:	mov    eax,DWORD PTR [esi+0x18]
6400af9e:	mov    DWORD PTR [esi+0x18],ecx
6400afa1:	mov    DWORD PTR [edi+0x18],eax
6400afa4:	add    esi,0x1c
6400afa7:	add    edi,0x1c
6400afaa:	mov    DWORD PTR [ebp-0x44],esi
6400afad:	xor    eax,eax
6400afaf:	jmp    0x6400af20
6400afb4:	mov    esi,DWORD PTR [ebp-0x48]
6400afb7:	mov    edi,DWORD PTR [ebp-0x44]
6400afba:	cmp    esi,edi
6400afbc:	je     0x6400afd0
6400afbe:	mov    ebx,DWORD PTR [ebp+0xc]
6400afc1:	push   esi
6400afc2:	mov    ecx,ebx
6400afc4:	call   0x6400aea0
6400afc9:	add    esi,0x1c
6400afcc:	cmp    esi,edi
6400afce:	jne    0x6400afc1
6400afd0:	push   0x0
6400afd2:	push   0x0
6400afd4:	call   0x6401277b
6400afd9:	cmp    DWORD PTR [ebp-0x18],0x10
6400afdd:	jb     0x6400afeb
6400afdf:	mov    edx,DWORD PTR [ebp-0x2c]
6400afe2:	push   edx
6400afe3:	call   0x64012332
6400afe8:	add    esp,0x4
6400afeb:	mov    eax,esi
6400afed:	mov    ecx,DWORD PTR [ebp-0xc]
6400aff0:	mov    DWORD PTR fs:0x0,ecx
6400aff7:	pop    ecx
6400aff8:	pop    edi
6400aff9:	pop    esi
6400affa:	pop    ebx
6400affb:	mov    ecx,DWORD PTR [ebp-0x14]
6400affe:	xor    ecx,ebp
6400b000:	call   0x64012b8c
6400b005:	mov    esp,ebp
6400b007:	pop    ebp
6400b008:	ret    
6400b009:	int3   
6400b00a:	int3   
6400b00b:	int3   
6400b00c:	int3   
6400b00d:	int3   
6400b00e:	int3   
6400b00f:	int3   
6400b010:	push   ecx
6400b011:	mov    eax,ds:0x6402d09c
6400b016:	xor    eax,esp
6400b018:	mov    DWORD PTR [esp],eax
6400b01b:	cmp    DWORD PTR [esp+0x8],ecx
6400b01f:	mov    eax,DWORD PTR [esp+0xc]
6400b023:	je     0x6400b088
6400b025:	push   ebx
6400b026:	push   ebp
6400b027:	push   esi
6400b028:	push   edi
6400b029:	lea    esp,[esp+0x0]
6400b030:	mov    ebp,DWORD PTR [ecx-0x18]
6400b033:	mov    edx,DWORD PTR [eax-0x18]
6400b036:	mov    esi,DWORD PTR [eax-0x14]
6400b039:	mov    edi,DWORD PTR [eax-0x10]
6400b03c:	mov    ebx,DWORD PTR [eax-0xc]
6400b03f:	sub    ecx,0x1c
6400b042:	sub    eax,0x1c
6400b045:	cmp    ecx,DWORD PTR [esp+0x18]
6400b049:	mov    DWORD PTR [eax+0x4],ebp
6400b04c:	mov    ebp,DWORD PTR [ecx+0x8]
6400b04f:	mov    DWORD PTR [eax+0x8],ebp
6400b052:	mov    ebp,DWORD PTR [ecx+0xc]
6400b055:	mov    DWORD PTR [eax+0xc],ebp
6400b058:	mov    ebp,DWORD PTR [ecx+0x10]
6400b05b:	mov    DWORD PTR [eax+0x10],ebp
6400b05e:	mov    DWORD PTR [ecx+0x4],edx
6400b061:	mov    DWORD PTR [ecx+0x8],esi
6400b064:	mov    esi,DWORD PTR [ecx+0x14]
6400b067:	mov    DWORD PTR [ecx+0xc],edi
6400b06a:	mov    DWORD PTR [ecx+0x10],ebx
6400b06d:	mov    edx,DWORD PTR [eax+0x14]
6400b070:	mov    DWORD PTR [eax+0x14],esi
6400b073:	mov    esi,DWORD PTR [ecx+0x18]
6400b076:	mov    DWORD PTR [ecx+0x14],edx
6400b079:	mov    edx,DWORD PTR [eax+0x18]
6400b07c:	mov    DWORD PTR [eax+0x18],esi
6400b07f:	mov    DWORD PTR [ecx+0x18],edx
6400b082:	jne    0x6400b030
6400b084:	pop    edi
6400b085:	pop    esi
6400b086:	pop    ebp
6400b087:	pop    ebx
6400b088:	mov    ecx,DWORD PTR [esp]
6400b08b:	xor    ecx,esp
6400b08d:	call   0x64012b8c
6400b092:	pop    ecx
6400b093:	ret    
6400b094:	int3   
6400b095:	int3   
6400b096:	int3   
6400b097:	int3   
6400b098:	int3   
6400b099:	int3   
6400b09a:	int3   
6400b09b:	int3   
6400b09c:	int3   
6400b09d:	int3   
6400b09e:	int3   
6400b09f:	int3   
6400b0a0:	sub    esp,0x800
6400b0a6:	push   ebx
6400b0a7:	push   ebp
6400b0a8:	xor    ecx,ecx
6400b0aa:	push   esi
6400b0ab:	lea    eax,[ecx+0x1]
6400b0ae:	push   edi
6400b0af:	nop
6400b0b0:	mov    edx,eax
6400b0b2:	and    dl,0x80
6400b0b5:	neg    dl
6400b0b7:	lea    esi,[eax+eax*1]
6400b0ba:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6400b0c1:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6400b0c5:	sbb    edx,edx
6400b0c7:	and    edx,0x1b
6400b0ca:	xor    edx,esi
6400b0cc:	xor    edx,eax
6400b0ce:	and    edx,0xff
6400b0d4:	add    ecx,0x1
6400b0d7:	cmp    ecx,0x100
6400b0dd:	mov    eax,edx
6400b0df:	jl     0x6400b0b0
6400b0e1:	mov    eax,0x1
6400b0e6:	mov    ecx,0x6402f940
6400b0eb:	jmp    0x6400b0f0
6400b0ed:	lea    ecx,[ecx+0x0]
6400b0f0:	mov    edx,eax
6400b0f2:	and    dl,0x80
6400b0f5:	neg    dl
6400b0f7:	mov    DWORD PTR [ecx],eax
6400b0f9:	sbb    edx,edx
6400b0fb:	and    edx,0x1b
6400b0fe:	add    eax,eax
6400b100:	xor    edx,eax
6400b102:	and    edx,0xff
6400b108:	add    ecx,0x4
6400b10b:	cmp    ecx,0x6402f968
6400b111:	mov    eax,edx
6400b113:	jl     0x6400b0f0
6400b115:	mov    BYTE PTR ds:0x6402f040,0x63
6400b11c:	mov    BYTE PTR ds:0x640311cb,0x0
6400b123:	mov    ebx,0x1
6400b128:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6400b12c:	add    ecx,ecx
6400b12e:	add    ecx,ecx
6400b130:	lea    edx,[esp+0x80c]
6400b137:	sub    edx,ecx
6400b139:	mov    eax,DWORD PTR [edx]
6400b13b:	mov    ecx,eax
6400b13d:	sar    ecx,0x7
6400b140:	lea    edx,[eax+eax*1]
6400b143:	or     ecx,edx
6400b145:	and    ecx,0xff
6400b14b:	xor    eax,ecx
6400b14d:	mov    edx,ecx
6400b14f:	sar    edx,0x7
6400b152:	add    ecx,ecx
6400b154:	or     edx,ecx
6400b156:	and    edx,0xff
6400b15c:	xor    eax,edx
6400b15e:	mov    ecx,edx
6400b160:	add    edx,edx
6400b162:	sar    ecx,0x7
6400b165:	or     ecx,edx
6400b167:	and    ecx,0xff
6400b16d:	xor    eax,ecx
6400b16f:	mov    edx,ecx
6400b171:	sar    edx,0x7
6400b174:	add    ecx,ecx
6400b176:	or     edx,ecx
6400b178:	xor    edx,0x63
6400b17b:	and    edx,0xff
6400b181:	xor    eax,edx
6400b183:	mov    BYTE PTR [ebx+0x6402f040],al
6400b189:	mov    BYTE PTR [eax+0x64031168],bl
6400b18f:	add    ebx,0x1
6400b192:	cmp    ebx,0x100
6400b198:	jl     0x6400b128
6400b19a:	xor    ecx,ecx
6400b19c:	lea    esp,[esp+0x0]
6400b1a0:	movzx  edx,BYTE PTR [ecx+0x6402f040]
6400b1a7:	mov    eax,edx
6400b1a9:	and    al,0x80
6400b1ab:	neg    al
6400b1ad:	lea    esi,[edx+edx*1]
6400b1b0:	sbb    eax,eax
6400b1b2:	and    eax,0x1b
6400b1b5:	xor    eax,esi
6400b1b7:	and    eax,0xff
6400b1bc:	mov    esi,eax
6400b1be:	xor    eax,edx
6400b1c0:	shl    eax,0x8
6400b1c3:	xor    eax,edx
6400b1c5:	shl    eax,0x8
6400b1c8:	xor    eax,edx
6400b1ca:	shl    eax,0x8
6400b1cd:	xor    eax,esi
6400b1cf:	mov    DWORD PTR [ecx*4+0x64030d68],eax
6400b1d6:	rol    eax,0x8
6400b1d9:	mov    DWORD PTR [ecx*4+0x64030968],eax
6400b1e0:	rol    eax,0x8
6400b1e3:	mov    DWORD PTR [ecx*4+0x64030568],eax
6400b1ea:	rol    eax,0x8
6400b1ed:	mov    DWORD PTR [ecx*4+0x64030168],eax
6400b1f4:	movzx  eax,BYTE PTR [ecx+0x64031168]
6400b1fb:	test   eax,eax
6400b1fd:	je     0x6400b251
6400b1ff:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6400b203:	mov    edx,DWORD PTR [esp+0x48]
6400b207:	lea    eax,[esi+edx*1]
6400b20a:	cdq    
6400b20b:	mov    edi,0xff
6400b210:	idiv   edi
6400b212:	mov    eax,DWORD PTR [esp+0x34]
6400b216:	add    eax,esi
6400b218:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6400b21f:	cdq    
6400b220:	idiv   edi
6400b222:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6400b229:	mov    edx,DWORD PTR [esp+0x44]
6400b22d:	lea    eax,[esi+edx*1]
6400b230:	cdq    
6400b231:	idiv   edi
6400b233:	mov    eax,DWORD PTR [esp+0x3c]
6400b237:	add    eax,esi
6400b239:	mov    esi,0xff
6400b23e:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6400b245:	cdq    
6400b246:	idiv   esi
6400b248:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6400b24f:	jmp    0x6400b259
6400b251:	xor    ebp,ebp
6400b253:	xor    ebx,ebx
6400b255:	xor    edi,edi
6400b257:	xor    edx,edx
6400b259:	shl    edx,0x8
6400b25c:	xor    edx,edi
6400b25e:	shl    edx,0x8
6400b261:	xor    edx,ebx
6400b263:	shl    edx,0x8
6400b266:	xor    edx,ebp
6400b268:	mov    DWORD PTR [ecx*4+0x6402fd68],edx
6400b26f:	rol    edx,0x8
6400b272:	mov    DWORD PTR [ecx*4+0x6402f968],edx
6400b279:	rol    edx,0x8
6400b27c:	mov    DWORD PTR [ecx*4+0x6402f540],edx
6400b283:	rol    edx,0x8
6400b286:	mov    DWORD PTR [ecx*4+0x6402f140],edx
6400b28d:	add    ecx,0x1
6400b290:	cmp    ecx,0x100
6400b296:	jl     0x6400b1a0
6400b29c:	pop    edi
6400b29d:	pop    esi
6400b29e:	pop    ebp
6400b29f:	pop    ebx
6400b2a0:	add    esp,0x800
6400b2a6:	ret    
6400b2a7:	int3   
6400b2a8:	int3   
6400b2a9:	int3   
6400b2aa:	int3   
6400b2ab:	int3   
6400b2ac:	int3   
6400b2ad:	int3   
6400b2ae:	int3   
6400b2af:	int3   
6400b2b0:	cmp    DWORD PTR ds:0x6403126c,0x0
6400b2b7:	push   ebx
6400b2b8:	push   esi
6400b2b9:	push   edi
6400b2ba:	mov    edi,eax
6400b2bc:	jne    0x6400b2cd
6400b2be:	call   0x6400b0a0
6400b2c3:	mov    DWORD PTR ds:0x6403126c,0x1
6400b2cd:	lea    eax,[edi+0x8]
6400b2d0:	mov    ecx,0x6402e382
6400b2d5:	mov    esi,eax
6400b2d7:	mov    DWORD PTR [edi],0xa
6400b2dd:	mov    DWORD PTR [edi+0x4],eax
6400b2e0:	sub    esi,ecx
6400b2e2:	movzx  ebx,BYTE PTR [ecx-0x1]
6400b2e6:	xor    edx,edx
6400b2e8:	mov    dh,BYTE PTR [ecx+0x1]
6400b2eb:	add    ecx,0x4
6400b2ee:	mov    dl,BYTE PTR [ecx-0x4]
6400b2f1:	shl    edx,0x8
6400b2f4:	or     edx,ebx
6400b2f6:	movzx  ebx,BYTE PTR [ecx-0x6]
6400b2fa:	shl    edx,0x8
6400b2fd:	or     edx,ebx
6400b2ff:	cmp    ecx,0x6402e392
6400b305:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6400b309:	jl     0x6400b2e2
6400b30b:	mov    edi,DWORD PTR [edi]
6400b30d:	sub    edi,0xa
6400b310:	je     0x6400b5cc
6400b316:	sub    edi,0x2
6400b319:	je     0x6400b3ff
6400b31f:	sub    edi,0x2
6400b322:	jne    0x6400b7af
6400b328:	push   ebp
6400b329:	mov    ebp,0x6402f940
6400b32e:	mov    edi,edi
6400b330:	mov    edi,DWORD PTR [eax+0x1c]
6400b333:	xor    edx,edx
6400b335:	mov    ecx,edi
6400b337:	and    ecx,0xff
6400b33d:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b343:	movzx  ecx,BYTE PTR [eax+0x1f]
6400b347:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b34e:	xor    edx,ecx
6400b350:	movzx  ecx,BYTE PTR [eax+0x1e]
6400b354:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b35b:	shl    edx,0x8
6400b35e:	xor    edx,ecx
6400b360:	movzx  ecx,BYTE PTR [eax+0x1d]
6400b364:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b36b:	mov    esi,DWORD PTR [eax+0x8]
6400b36e:	shl    edx,0x8
6400b371:	xor    edx,ecx
6400b373:	xor    edx,DWORD PTR [eax]
6400b375:	xor    ebx,ebx
6400b377:	mov    ecx,edx
6400b379:	xor    ecx,DWORD PTR [ebp+0x0]
6400b37c:	mov    edx,DWORD PTR [eax+0x4]
6400b37f:	xor    edx,ecx
6400b381:	mov    DWORD PTR [eax+0x20],ecx
6400b384:	mov    ecx,DWORD PTR [eax+0xc]
6400b387:	xor    esi,edx
6400b389:	xor    ecx,esi
6400b38b:	mov    DWORD PTR [eax+0x2c],ecx
6400b38e:	mov    DWORD PTR [eax+0x24],edx
6400b391:	movzx  edx,BYTE PTR [eax+0x2f]
6400b395:	mov    DWORD PTR [eax+0x28],esi
6400b398:	mov    bh,BYTE PTR [edx+0x6402f040]
6400b39e:	movzx  edx,BYTE PTR [eax+0x2e]
6400b3a2:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b3a9:	xor    ebx,edx
6400b3ab:	movzx  edx,BYTE PTR [eax+0x2d]
6400b3af:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b3b6:	and    ecx,0xff
6400b3bc:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b3c3:	shl    ebx,0x8
6400b3c6:	xor    ebx,edx
6400b3c8:	mov    edx,DWORD PTR [eax+0x14]
6400b3cb:	shl    ebx,0x8
6400b3ce:	xor    ecx,ebx
6400b3d0:	xor    ecx,DWORD PTR [eax+0x10]
6400b3d3:	add    ebp,0x4
6400b3d6:	xor    edx,ecx
6400b3d8:	mov    DWORD PTR [eax+0x30],ecx
6400b3db:	mov    ecx,DWORD PTR [eax+0x18]
6400b3de:	xor    ecx,edx
6400b3e0:	mov    DWORD PTR [eax+0x38],ecx
6400b3e3:	xor    ecx,edi
6400b3e5:	mov    DWORD PTR [eax+0x34],edx
6400b3e8:	mov    DWORD PTR [eax+0x3c],ecx
6400b3eb:	add    eax,0x20
6400b3ee:	cmp    ebp,0x6402f95c
6400b3f4:	jl     0x6400b330
6400b3fa:	pop    ebp
6400b3fb:	pop    edi
6400b3fc:	pop    esi
6400b3fd:	pop    ebx
6400b3fe:	ret    
6400b3ff:	mov    esi,0x6402f944
6400b404:	mov    edi,DWORD PTR [eax+0x14]
6400b407:	xor    ecx,ecx
6400b409:	mov    edx,edi
6400b40b:	and    edx,0xff
6400b411:	mov    ch,BYTE PTR [edx+0x6402f040]
6400b417:	movzx  edx,BYTE PTR [eax+0x17]
6400b41b:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b422:	xor    ecx,edx
6400b424:	movzx  edx,BYTE PTR [eax+0x16]
6400b428:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b42f:	shl    ecx,0x8
6400b432:	xor    ecx,edx
6400b434:	movzx  edx,BYTE PTR [eax+0x15]
6400b438:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b43f:	shl    ecx,0x8
6400b442:	xor    ecx,edx
6400b444:	xor    ecx,DWORD PTR [esi-0x4]
6400b447:	mov    edx,DWORD PTR [eax+0x4]
6400b44a:	xor    ecx,DWORD PTR [eax]
6400b44c:	xor    edx,ecx
6400b44e:	mov    DWORD PTR [eax+0x18],ecx
6400b451:	mov    ecx,DWORD PTR [eax+0x8]
6400b454:	xor    ecx,edx
6400b456:	mov    DWORD PTR [eax+0x1c],edx
6400b459:	mov    edx,DWORD PTR [eax+0xc]
6400b45c:	xor    edx,ecx
6400b45e:	mov    DWORD PTR [eax+0x20],ecx
6400b461:	mov    ecx,DWORD PTR [eax+0x10]
6400b464:	xor    ecx,edx
6400b466:	mov    DWORD PTR [eax+0x28],ecx
6400b469:	mov    DWORD PTR [eax+0x24],edx
6400b46c:	xor    ecx,edi
6400b46e:	mov    DWORD PTR [eax+0x2c],ecx
6400b471:	and    ecx,0xff
6400b477:	xor    edx,edx
6400b479:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b47f:	movzx  ecx,BYTE PTR [eax+0x2f]
6400b483:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b48a:	xor    edx,ecx
6400b48c:	movzx  ecx,BYTE PTR [eax+0x2e]
6400b490:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b497:	shl    edx,0x8
6400b49a:	xor    edx,ecx
6400b49c:	movzx  ecx,BYTE PTR [eax+0x2d]
6400b4a0:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b4a7:	mov    edi,DWORD PTR [eax+0x28]
6400b4aa:	shl    edx,0x8
6400b4ad:	xor    edx,ecx
6400b4af:	xor    edx,DWORD PTR [eax+0x18]
6400b4b2:	mov    ecx,edx
6400b4b4:	xor    ecx,DWORD PTR [esi]
6400b4b6:	mov    edx,DWORD PTR [eax+0x1c]
6400b4b9:	xor    edx,ecx
6400b4bb:	mov    DWORD PTR [eax+0x30],ecx
6400b4be:	mov    ecx,DWORD PTR [eax+0x20]
6400b4c1:	xor    ecx,edx
6400b4c3:	mov    DWORD PTR [eax+0x34],edx
6400b4c6:	mov    edx,DWORD PTR [eax+0x24]
6400b4c9:	xor    edx,ecx
6400b4cb:	mov    DWORD PTR [eax+0x38],ecx
6400b4ce:	mov    ecx,DWORD PTR [eax+0x2c]
6400b4d1:	xor    edi,edx
6400b4d3:	mov    DWORD PTR [eax+0x3c],edx
6400b4d6:	xor    ecx,edi
6400b4d8:	mov    DWORD PTR [eax+0x44],ecx
6400b4db:	and    ecx,0xff
6400b4e1:	xor    edx,edx
6400b4e3:	mov    DWORD PTR [eax+0x40],edi
6400b4e6:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b4ec:	movzx  ecx,BYTE PTR [eax+0x47]
6400b4f0:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b4f7:	xor    edx,ecx
6400b4f9:	movzx  ecx,BYTE PTR [eax+0x46]
6400b4fd:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b504:	shl    edx,0x8
6400b507:	xor    edx,ecx
6400b509:	movzx  ecx,BYTE PTR [eax+0x45]
6400b50d:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b514:	shl    edx,0x8
6400b517:	xor    edx,ecx
6400b519:	xor    edx,DWORD PTR [esi+0x4]
6400b51c:	mov    ecx,edx
6400b51e:	xor    ecx,DWORD PTR [eax+0x30]
6400b521:	mov    edx,DWORD PTR [eax+0x34]
6400b524:	xor    edx,ecx
6400b526:	mov    DWORD PTR [eax+0x48],ecx
6400b529:	mov    ecx,DWORD PTR [eax+0x38]
6400b52c:	xor    ecx,edx
6400b52e:	mov    DWORD PTR [eax+0x4c],edx
6400b531:	mov    edx,DWORD PTR [eax+0x3c]
6400b534:	xor    edx,ecx
6400b536:	mov    DWORD PTR [eax+0x50],ecx
6400b539:	mov    ecx,DWORD PTR [eax+0x44]
6400b53c:	xor    edi,edx
6400b53e:	mov    DWORD PTR [eax+0x54],edx
6400b541:	xor    ecx,edi
6400b543:	mov    DWORD PTR [eax+0x5c],ecx
6400b546:	and    ecx,0xff
6400b54c:	xor    edx,edx
6400b54e:	mov    DWORD PTR [eax+0x58],edi
6400b551:	mov    dh,BYTE PTR [ecx+0x6402f040]
6400b557:	movzx  ecx,BYTE PTR [eax+0x5f]
6400b55b:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b562:	xor    edx,ecx
6400b564:	movzx  ecx,BYTE PTR [eax+0x5e]
6400b568:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b56f:	shl    edx,0x8
6400b572:	xor    edx,ecx
6400b574:	movzx  ecx,BYTE PTR [eax+0x5d]
6400b578:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400b57f:	shl    edx,0x8
6400b582:	xor    edx,ecx
6400b584:	xor    edx,DWORD PTR [esi+0x8]
6400b587:	add    esi,0x10
6400b58a:	mov    ecx,edx
6400b58c:	xor    ecx,DWORD PTR [eax+0x48]
6400b58f:	mov    edx,DWORD PTR [eax+0x4c]
6400b592:	xor    edx,ecx
6400b594:	mov    DWORD PTR [eax+0x60],ecx
6400b597:	mov    ecx,DWORD PTR [eax+0x50]
6400b59a:	xor    ecx,edx
6400b59c:	mov    DWORD PTR [eax+0x64],edx
6400b59f:	mov    edx,DWORD PTR [eax+0x54]
6400b5a2:	xor    edx,ecx
6400b5a4:	mov    DWORD PTR [eax+0x68],ecx
6400b5a7:	mov    DWORD PTR [eax+0x6c],edx
6400b5aa:	mov    ecx,edi
6400b5ac:	xor    ecx,edx
6400b5ae:	mov    edx,DWORD PTR [eax+0x5c]
6400b5b1:	xor    edx,ecx
6400b5b3:	mov    DWORD PTR [eax+0x70],ecx
6400b5b6:	mov    DWORD PTR [eax+0x74],edx
6400b5b9:	add    eax,0x60
6400b5bc:	cmp    esi,0x6402f964
6400b5c2:	jl     0x6400b404
6400b5c8:	pop    edi
6400b5c9:	pop    esi
6400b5ca:	pop    ebx
6400b5cb:	ret    
6400b5cc:	mov    ecx,0x6402f944
6400b5d1:	mov    esi,DWORD PTR [eax+0xc]
6400b5d4:	mov    edx,esi
6400b5d6:	and    edx,0xff
6400b5dc:	xor    ebx,ebx
6400b5de:	mov    bh,BYTE PTR [edx+0x6402f040]
6400b5e4:	movzx  edx,BYTE PTR [eax+0xf]
6400b5e8:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b5ef:	xor    ebx,edx
6400b5f1:	movzx  edx,BYTE PTR [eax+0xe]
6400b5f5:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b5fc:	mov    edi,DWORD PTR [eax+0x4]
6400b5ff:	shl    ebx,0x8
6400b602:	xor    ebx,edx
6400b604:	movzx  edx,BYTE PTR [eax+0xd]
6400b608:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b60f:	shl    ebx,0x8
6400b612:	xor    ebx,edx
6400b614:	xor    ebx,DWORD PTR [ecx-0x4]
6400b617:	mov    edx,ebx
6400b619:	xor    edx,DWORD PTR [eax]
6400b61b:	mov    DWORD PTR [eax+0x10],edx
6400b61e:	xor    edi,edx
6400b620:	mov    edx,DWORD PTR [eax+0x8]
6400b623:	xor    edx,edi
6400b625:	xor    esi,edx
6400b627:	mov    DWORD PTR [eax+0x18],edx
6400b62a:	mov    DWORD PTR [eax+0x1c],esi
6400b62d:	and    esi,0xff
6400b633:	xor    edx,edx
6400b635:	mov    DWORD PTR [eax+0x14],edi
6400b638:	mov    dh,BYTE PTR [esi+0x6402f040]
6400b63e:	movzx  esi,BYTE PTR [eax+0x1f]
6400b642:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b649:	xor    edx,esi
6400b64b:	movzx  esi,BYTE PTR [eax+0x1e]
6400b64f:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b656:	shl    edx,0x8
6400b659:	xor    edx,esi
6400b65b:	movzx  esi,BYTE PTR [eax+0x1d]
6400b65f:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b666:	shl    edx,0x8
6400b669:	xor    edx,esi
6400b66b:	xor    edx,DWORD PTR [ecx]
6400b66d:	mov    esi,edi
6400b66f:	xor    edx,DWORD PTR [eax+0x10]
6400b672:	xor    esi,edx
6400b674:	mov    DWORD PTR [eax+0x20],edx
6400b677:	mov    edx,DWORD PTR [eax+0x18]
6400b67a:	xor    edx,esi
6400b67c:	mov    DWORD PTR [eax+0x24],esi
6400b67f:	mov    esi,DWORD PTR [eax+0x1c]
6400b682:	xor    esi,edx
6400b684:	mov    DWORD PTR [eax+0x28],edx
6400b687:	mov    DWORD PTR [eax+0x2c],esi
6400b68a:	and    esi,0xff
6400b690:	xor    edx,edx
6400b692:	mov    dh,BYTE PTR [esi+0x6402f040]
6400b698:	movzx  esi,BYTE PTR [eax+0x2f]
6400b69c:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b6a3:	xor    edx,esi
6400b6a5:	movzx  esi,BYTE PTR [eax+0x2e]
6400b6a9:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b6b0:	shl    edx,0x8
6400b6b3:	xor    edx,esi
6400b6b5:	movzx  esi,BYTE PTR [eax+0x2d]
6400b6b9:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b6c0:	shl    edx,0x8
6400b6c3:	xor    edx,esi
6400b6c5:	xor    edx,DWORD PTR [ecx+0x4]
6400b6c8:	mov    esi,DWORD PTR [eax+0x24]
6400b6cb:	xor    edx,DWORD PTR [eax+0x20]
6400b6ce:	xor    esi,edx
6400b6d0:	mov    DWORD PTR [eax+0x30],edx
6400b6d3:	mov    edx,DWORD PTR [eax+0x28]
6400b6d6:	xor    edx,esi
6400b6d8:	mov    DWORD PTR [eax+0x34],esi
6400b6db:	mov    esi,DWORD PTR [eax+0x2c]
6400b6de:	xor    esi,edx
6400b6e0:	mov    DWORD PTR [eax+0x3c],esi
6400b6e3:	mov    DWORD PTR [eax+0x38],edx
6400b6e6:	and    esi,0xff
6400b6ec:	xor    edx,edx
6400b6ee:	mov    dh,BYTE PTR [esi+0x6402f040]
6400b6f4:	movzx  esi,BYTE PTR [eax+0x3f]
6400b6f8:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b6ff:	xor    edx,esi
6400b701:	movzx  esi,BYTE PTR [eax+0x3e]
6400b705:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b70c:	shl    edx,0x8
6400b70f:	xor    edx,esi
6400b711:	movzx  esi,BYTE PTR [eax+0x3d]
6400b715:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b71c:	shl    edx,0x8
6400b71f:	xor    edx,esi
6400b721:	xor    edx,DWORD PTR [ecx+0x8]
6400b724:	mov    esi,DWORD PTR [eax+0x34]
6400b727:	xor    edx,DWORD PTR [eax+0x30]
6400b72a:	add    ecx,0x14
6400b72d:	xor    esi,edx
6400b72f:	mov    DWORD PTR [eax+0x40],edx
6400b732:	mov    edx,DWORD PTR [eax+0x38]
6400b735:	xor    edx,esi
6400b737:	mov    DWORD PTR [eax+0x44],esi
6400b73a:	mov    esi,DWORD PTR [eax+0x3c]
6400b73d:	xor    esi,edx
6400b73f:	mov    DWORD PTR [eax+0x48],edx
6400b742:	mov    DWORD PTR [eax+0x4c],esi
6400b745:	and    esi,0xff
6400b74b:	xor    edx,edx
6400b74d:	mov    dh,BYTE PTR [esi+0x6402f040]
6400b753:	movzx  esi,BYTE PTR [eax+0x4f]
6400b757:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b75e:	xor    edx,esi
6400b760:	movzx  esi,BYTE PTR [eax+0x4e]
6400b764:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b76b:	shl    edx,0x8
6400b76e:	xor    edx,esi
6400b770:	movzx  esi,BYTE PTR [eax+0x4d]
6400b774:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400b77b:	shl    edx,0x8
6400b77e:	xor    edx,esi
6400b780:	xor    edx,DWORD PTR [ecx-0x8]
6400b783:	mov    esi,DWORD PTR [eax+0x44]
6400b786:	xor    edx,DWORD PTR [eax+0x40]
6400b789:	add    eax,0x50
6400b78c:	xor    esi,edx
6400b78e:	mov    DWORD PTR [eax],edx
6400b790:	mov    edx,DWORD PTR [eax-0x8]
6400b793:	xor    edx,esi
6400b795:	mov    DWORD PTR [eax+0x4],esi
6400b798:	mov    esi,DWORD PTR [eax-0x4]
6400b79b:	xor    esi,edx
6400b79d:	cmp    ecx,0x6402f96c
6400b7a3:	mov    DWORD PTR [eax+0x8],edx
6400b7a6:	mov    DWORD PTR [eax+0xc],esi
6400b7a9:	jl     0x6400b5d1
6400b7af:	pop    edi
6400b7b0:	pop    esi
6400b7b1:	pop    ebx
6400b7b2:	ret    
6400b7b3:	int3   
6400b7b4:	int3   
6400b7b5:	int3   
6400b7b6:	int3   
6400b7b7:	int3   
6400b7b8:	int3   
6400b7b9:	int3   
6400b7ba:	int3   
6400b7bb:	int3   
6400b7bc:	int3   
6400b7bd:	int3   
6400b7be:	int3   
6400b7bf:	int3   
6400b7c0:	sub    esp,0x11c
6400b7c6:	push   esi
6400b7c7:	push   edi
6400b7c8:	mov    edi,eax
6400b7ca:	lea    esi,[edi+0x8]
6400b7cd:	lea    eax,[esp+0x8]
6400b7d1:	mov    DWORD PTR [edi],0xa
6400b7d7:	mov    DWORD PTR [edi+0x4],esi
6400b7da:	call   0x6400b2b0
6400b7df:	mov    eax,DWORD PTR [esp+0x8]
6400b7e3:	shl    eax,0x4
6400b7e6:	add    eax,DWORD PTR [esp+0xc]
6400b7ea:	add    esi,0x4
6400b7ed:	mov    ecx,DWORD PTR [eax]
6400b7ef:	mov    DWORD PTR [esi-0x4],ecx
6400b7f2:	mov    edx,DWORD PTR [eax+0x4]
6400b7f5:	add    eax,0x4
6400b7f8:	mov    DWORD PTR [esi],edx
6400b7fa:	mov    ecx,DWORD PTR [eax+0x4]
6400b7fd:	add    eax,0x4
6400b800:	add    esi,0x4
6400b803:	mov    DWORD PTR [esi],ecx
6400b805:	mov    edx,DWORD PTR [eax+0x4]
6400b808:	add    eax,0x4
6400b80b:	add    esi,0x4
6400b80e:	mov    DWORD PTR [esi],edx
6400b810:	mov    ecx,DWORD PTR [edi]
6400b812:	sub    ecx,0x1
6400b815:	add    esi,0x4
6400b818:	sub    eax,0x1c
6400b81b:	test   ecx,ecx
6400b81d:	jle    0x6400b975
6400b823:	movzx  edx,BYTE PTR [eax+0x3]
6400b827:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b82e:	mov    edx,DWORD PTR [edx*4+0x6402f140]
6400b835:	movzx  edi,BYTE PTR [eax+0x2]
6400b839:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b840:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400b847:	movzx  edi,BYTE PTR [eax+0x1]
6400b84b:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b852:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400b859:	mov    edi,DWORD PTR [eax]
6400b85b:	and    edi,0xff
6400b861:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b868:	xor    edx,DWORD PTR [edi*4+0x6402fd68]
6400b86f:	add    eax,0x10
6400b872:	mov    DWORD PTR [esi],edx
6400b874:	mov    edx,DWORD PTR [eax-0xc]
6400b877:	movzx  edi,BYTE PTR [eax-0x9]
6400b87b:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b882:	and    edx,0xff
6400b888:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b88f:	mov    edx,DWORD PTR [edx*4+0x6402fd68]
6400b896:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400b89d:	movzx  edi,BYTE PTR [eax-0xa]
6400b8a1:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b8a8:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400b8af:	movzx  edi,BYTE PTR [eax-0xb]
6400b8b3:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b8ba:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400b8c1:	sub    ecx,0x1
6400b8c4:	mov    DWORD PTR [esi+0x4],edx
6400b8c7:	mov    edx,DWORD PTR [eax-0x8]
6400b8ca:	movzx  edi,BYTE PTR [eax-0x5]
6400b8ce:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b8d5:	and    edx,0xff
6400b8db:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b8e2:	mov    edx,DWORD PTR [edx*4+0x6402fd68]
6400b8e9:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400b8f0:	movzx  edi,BYTE PTR [eax-0x6]
6400b8f4:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b8fb:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400b902:	movzx  edi,BYTE PTR [eax-0x7]
6400b906:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b90d:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400b914:	add    esi,0x10
6400b917:	mov    DWORD PTR [esi-0x8],edx
6400b91a:	mov    edx,DWORD PTR [eax-0x4]
6400b91d:	movzx  edi,BYTE PTR [eax-0x1]
6400b921:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b928:	and    edx,0xff
6400b92e:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400b935:	mov    edx,DWORD PTR [edx*4+0x6402fd68]
6400b93c:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400b943:	movzx  edi,BYTE PTR [eax-0x2]
6400b947:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b94e:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400b955:	movzx  edi,BYTE PTR [eax-0x3]
6400b959:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400b960:	xor    edx,DWORD PTR [edi*4+0x6402f968]
6400b967:	sub    eax,0x20
6400b96a:	test   ecx,ecx
6400b96c:	mov    DWORD PTR [esi-0x4],edx
6400b96f:	jg     0x6400b823
6400b975:	mov    ecx,DWORD PTR [eax]
6400b977:	mov    DWORD PTR [esi],ecx
6400b979:	mov    edx,DWORD PTR [eax+0x4]
6400b97c:	add    esi,0x4
6400b97f:	add    eax,0x4
6400b982:	mov    DWORD PTR [esi],edx
6400b984:	mov    ecx,DWORD PTR [eax+0x4]
6400b987:	add    esi,0x4
6400b98a:	add    eax,0x4
6400b98d:	mov    DWORD PTR [esi],ecx
6400b98f:	mov    edx,DWORD PTR [eax+0x4]
6400b992:	pop    edi
6400b993:	mov    DWORD PTR [esi+0x4],edx
6400b996:	pop    esi
6400b997:	add    esp,0x11c
6400b99d:	ret    
6400b99e:	int3   
6400b99f:	int3   
6400b9a0:	sub    esp,0x10
6400b9a3:	xor    ecx,ecx
6400b9a5:	push   ebx
6400b9a6:	push   ebp
6400b9a7:	mov    ebp,DWORD PTR [esp+0x1c]
6400b9ab:	push   esi
6400b9ac:	push   edi
6400b9ad:	mov    edi,eax
6400b9af:	mov    ch,BYTE PTR [edi+0x3]
6400b9b2:	movzx  edx,BYTE PTR [edi+0x1]
6400b9b6:	mov    eax,DWORD PTR [ebp+0x4]
6400b9b9:	movzx  esi,BYTE PTR [edi+0x9]
6400b9bd:	mov    cl,BYTE PTR [edi+0x2]
6400b9c0:	movzx  ebx,BYTE PTR [edi+0xd]
6400b9c4:	add    eax,0x4
6400b9c7:	add    eax,0x4
6400b9ca:	add    eax,0x4
6400b9cd:	shl    ecx,0x8
6400b9d0:	or     ecx,edx
6400b9d2:	movzx  edx,BYTE PTR [edi]
6400b9d5:	shl    ecx,0x8
6400b9d8:	or     ecx,edx
6400b9da:	xor    ecx,DWORD PTR [eax-0xc]
6400b9dd:	movzx  edx,BYTE PTR [edi+0x5]
6400b9e1:	mov    DWORD PTR [esp+0x24],ecx
6400b9e5:	xor    ecx,ecx
6400b9e7:	mov    ch,BYTE PTR [edi+0x7]
6400b9ea:	add    eax,0x4
6400b9ed:	mov    cl,BYTE PTR [edi+0x6]
6400b9f0:	shl    ecx,0x8
6400b9f3:	or     ecx,edx
6400b9f5:	movzx  edx,BYTE PTR [edi+0x4]
6400b9f9:	shl    ecx,0x8
6400b9fc:	or     ecx,edx
6400b9fe:	xor    edx,edx
6400ba00:	mov    dh,BYTE PTR [edi+0xb]
6400ba03:	xor    ecx,DWORD PTR [eax-0xc]
6400ba06:	mov    dl,BYTE PTR [edi+0xa]
6400ba09:	shl    edx,0x8
6400ba0c:	or     edx,esi
6400ba0e:	movzx  esi,BYTE PTR [edi+0x8]
6400ba12:	shl    edx,0x8
6400ba15:	or     edx,esi
6400ba17:	xor    edx,DWORD PTR [eax-0x8]
6400ba1a:	mov    esi,edx
6400ba1c:	xor    edx,edx
6400ba1e:	mov    dh,BYTE PTR [edi+0xf]
6400ba21:	mov    DWORD PTR [esp+0x10],esi
6400ba25:	mov    dl,BYTE PTR [edi+0xe]
6400ba28:	movzx  edi,BYTE PTR [edi+0xc]
6400ba2c:	shl    edx,0x8
6400ba2f:	or     edx,ebx
6400ba31:	shl    edx,0x8
6400ba34:	or     edx,edi
6400ba36:	xor    edx,DWORD PTR [eax-0x4]
6400ba39:	cmp    DWORD PTR [esp+0x28],0x0
6400ba3e:	jne    0x6400bed9
6400ba44:	mov    ebp,DWORD PTR [ebp+0x0]
6400ba47:	sar    ebp,1
6400ba49:	sub    ebp,0x1
6400ba4c:	test   ebp,ebp
6400ba4e:	jle    0x6400bc7f
6400ba54:	mov    ebx,esi
6400ba56:	movzx  edi,dh
6400ba59:	mov    esi,DWORD PTR [edi*4+0x6402f968]
6400ba60:	mov    edi,ecx
6400ba62:	shr    edi,0x18
6400ba65:	shr    ebx,0x10
6400ba68:	and    ebx,0xff
6400ba6e:	xor    esi,DWORD PTR [ebx*4+0x6402f540]
6400ba75:	add    eax,0x4
6400ba78:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400ba7f:	mov    edi,DWORD PTR [esp+0x24]
6400ba83:	and    edi,0xff
6400ba89:	mov    DWORD PTR [esp+0x28],esi
6400ba8d:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400ba94:	movzx  edi,BYTE PTR [esp+0x25]
6400ba99:	xor    esi,DWORD PTR [eax-0x4]
6400ba9c:	add    eax,0x4
6400ba9f:	mov    DWORD PTR [esp+0x14],esi
6400baa3:	mov    esi,edx
6400baa5:	shr    esi,0x10
6400baa8:	and    esi,0xff
6400baae:	mov    esi,DWORD PTR [esi*4+0x6402f540]
6400bab5:	xor    esi,DWORD PTR [edi*4+0x6402f968]
6400babc:	mov    edi,DWORD PTR [esp+0x10]
6400bac0:	shr    edi,0x18
6400bac3:	mov    DWORD PTR [esp+0x28],esi
6400bac7:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bace:	mov    edi,ecx
6400bad0:	and    edi,0xff
6400bad6:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400badd:	mov    edi,DWORD PTR [esp+0x24]
6400bae1:	xor    esi,DWORD PTR [eax-0x4]
6400bae4:	shr    edi,0x10
6400bae7:	mov    DWORD PTR [esp+0x18],esi
6400baeb:	movzx  esi,ch
6400baee:	mov    esi,DWORD PTR [esi*4+0x6402f968]
6400baf5:	and    edi,0xff
6400bafb:	xor    esi,DWORD PTR [edi*4+0x6402f540]
6400bb02:	mov    edi,edx
6400bb04:	shr    edi,0x18
6400bb07:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bb0e:	mov    edi,DWORD PTR [esp+0x10]
6400bb12:	and    edi,0xff
6400bb18:	mov    DWORD PTR [esp+0x28],esi
6400bb1c:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400bb23:	shr    ecx,0x10
6400bb26:	xor    esi,DWORD PTR [eax]
6400bb28:	and    ecx,0xff
6400bb2e:	mov    DWORD PTR [esp+0x28],esi
6400bb32:	movzx  esi,BYTE PTR [esp+0x11]
6400bb37:	mov    ebx,DWORD PTR [esi*4+0x6402f968]
6400bb3e:	xor    ebx,DWORD PTR [ecx*4+0x6402f540]
6400bb45:	mov    ecx,DWORD PTR [esp+0x24]
6400bb49:	mov    esi,DWORD PTR [esp+0x28]
6400bb4d:	shr    ecx,0x18
6400bb50:	xor    ebx,DWORD PTR [ecx*4+0x6402f140]
6400bb57:	and    edx,0xff
6400bb5d:	xor    ebx,DWORD PTR [edx*4+0x6402fd68]
6400bb64:	add    eax,0x4
6400bb67:	xor    ebx,DWORD PTR [eax]
6400bb69:	mov    ecx,esi
6400bb6b:	shr    ecx,0x10
6400bb6e:	and    ecx,0xff
6400bb74:	movzx  edx,bh
6400bb77:	mov    edi,DWORD PTR [edx*4+0x6402f968]
6400bb7e:	xor    edi,DWORD PTR [ecx*4+0x6402f540]
6400bb85:	mov    edx,DWORD PTR [esp+0x18]
6400bb89:	mov    ecx,edx
6400bb8b:	shr    ecx,0x18
6400bb8e:	xor    edi,DWORD PTR [ecx*4+0x6402f140]
6400bb95:	mov    ecx,DWORD PTR [esp+0x14]
6400bb99:	and    ecx,0xff
6400bb9f:	xor    edi,DWORD PTR [ecx*4+0x6402fd68]
6400bba6:	add    eax,0x4
6400bba9:	xor    edi,DWORD PTR [eax]
6400bbab:	mov    ecx,ebx
6400bbad:	shr    ecx,0x10
6400bbb0:	mov    DWORD PTR [esp+0x24],edi
6400bbb4:	movzx  edi,BYTE PTR [esp+0x15]
6400bbb9:	add    eax,0x4
6400bbbc:	and    ecx,0xff
6400bbc2:	mov    ecx,DWORD PTR [ecx*4+0x6402f540]
6400bbc9:	xor    ecx,DWORD PTR [edi*4+0x6402f968]
6400bbd0:	shr    esi,0x18
6400bbd3:	xor    ecx,DWORD PTR [esi*4+0x6402f140]
6400bbda:	mov    esi,edx
6400bbdc:	and    esi,0xff
6400bbe2:	xor    ecx,DWORD PTR [esi*4+0x6402fd68]
6400bbe9:	mov    esi,DWORD PTR [esp+0x14]
6400bbed:	xor    ecx,DWORD PTR [eax]
6400bbef:	movzx  edx,dh
6400bbf2:	mov    edx,DWORD PTR [edx*4+0x6402f968]
6400bbf9:	mov    edi,DWORD PTR [esp+0x18]
6400bbfd:	shr    esi,0x10
6400bc00:	and    esi,0xff
6400bc06:	xor    edx,DWORD PTR [esi*4+0x6402f540]
6400bc0d:	mov    esi,ebx
6400bc0f:	shr    esi,0x18
6400bc12:	xor    edx,DWORD PTR [esi*4+0x6402f140]
6400bc19:	mov    esi,DWORD PTR [esp+0x28]
6400bc1d:	and    esi,0xff
6400bc23:	xor    edx,DWORD PTR [esi*4+0x6402fd68]
6400bc2a:	add    eax,0x4
6400bc2d:	xor    edx,DWORD PTR [eax]
6400bc2f:	shr    edi,0x10
6400bc32:	mov    esi,edx
6400bc34:	movzx  edx,BYTE PTR [esp+0x29]
6400bc39:	mov    edx,DWORD PTR [edx*4+0x6402f968]
6400bc40:	and    edi,0xff
6400bc46:	xor    edx,DWORD PTR [edi*4+0x6402f540]
6400bc4d:	mov    edi,DWORD PTR [esp+0x14]
6400bc51:	shr    edi,0x18
6400bc54:	xor    edx,DWORD PTR [edi*4+0x6402f140]
6400bc5b:	and    ebx,0xff
6400bc61:	xor    edx,DWORD PTR [ebx*4+0x6402fd68]
6400bc68:	add    eax,0x4
6400bc6b:	xor    edx,DWORD PTR [eax]
6400bc6d:	sub    ebp,0x1
6400bc70:	add    eax,0x4
6400bc73:	test   ebp,ebp
6400bc75:	mov    DWORD PTR [esp+0x10],esi
6400bc79:	jg     0x6400ba54
6400bc7f:	mov    ebx,esi
6400bc81:	movzx  edi,dh
6400bc84:	mov    esi,DWORD PTR [edi*4+0x6402f968]
6400bc8b:	mov    edi,ecx
6400bc8d:	shr    edi,0x18
6400bc90:	shr    ebx,0x10
6400bc93:	and    ebx,0xff
6400bc99:	xor    esi,DWORD PTR [ebx*4+0x6402f540]
6400bca0:	add    eax,0x4
6400bca3:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bcaa:	mov    edi,DWORD PTR [esp+0x24]
6400bcae:	mov    DWORD PTR [esp+0x28],esi
6400bcb2:	and    edi,0xff
6400bcb8:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400bcbf:	movzx  edi,BYTE PTR [esp+0x25]
6400bcc4:	xor    esi,DWORD PTR [eax-0x4]
6400bcc7:	add    eax,0x4
6400bcca:	mov    DWORD PTR [esp+0x14],esi
6400bcce:	mov    esi,edx
6400bcd0:	shr    esi,0x10
6400bcd3:	and    esi,0xff
6400bcd9:	mov    esi,DWORD PTR [esi*4+0x6402f540]
6400bce0:	xor    esi,DWORD PTR [edi*4+0x6402f968]
6400bce7:	mov    edi,DWORD PTR [esp+0x10]
6400bceb:	shr    edi,0x18
6400bcee:	mov    DWORD PTR [esp+0x28],esi
6400bcf2:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bcf9:	mov    edi,ecx
6400bcfb:	and    edi,0xff
6400bd01:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400bd08:	mov    edi,DWORD PTR [esp+0x24]
6400bd0c:	xor    esi,DWORD PTR [eax-0x4]
6400bd0f:	shr    edi,0x10
6400bd12:	mov    DWORD PTR [esp+0x18],esi
6400bd16:	movzx  esi,ch
6400bd19:	mov    esi,DWORD PTR [esi*4+0x6402f968]
6400bd20:	and    edi,0xff
6400bd26:	xor    esi,DWORD PTR [edi*4+0x6402f540]
6400bd2d:	mov    edi,edx
6400bd2f:	shr    edi,0x18
6400bd32:	xor    esi,DWORD PTR [edi*4+0x6402f140]
6400bd39:	mov    edi,DWORD PTR [esp+0x10]
6400bd3d:	mov    DWORD PTR [esp+0x28],esi
6400bd41:	and    edi,0xff
6400bd47:	xor    esi,DWORD PTR [edi*4+0x6402fd68]
6400bd4e:	shr    ecx,0x10
6400bd51:	xor    esi,DWORD PTR [eax]
6400bd53:	and    ecx,0xff
6400bd59:	mov    DWORD PTR [esp+0x28],esi
6400bd5d:	movzx  esi,BYTE PTR [esp+0x11]
6400bd62:	mov    ebx,DWORD PTR [esi*4+0x6402f968]
6400bd69:	xor    ebx,DWORD PTR [ecx*4+0x6402f540]
6400bd70:	mov    ecx,DWORD PTR [esp+0x24]
6400bd74:	mov    edi,DWORD PTR [esp+0x28]
6400bd78:	shr    ecx,0x18
6400bd7b:	xor    ebx,DWORD PTR [ecx*4+0x6402f140]
6400bd82:	mov    ecx,DWORD PTR [esp+0x18]
6400bd86:	and    edx,0xff
6400bd8c:	xor    ebx,DWORD PTR [edx*4+0x6402fd68]
6400bd93:	add    eax,0x4
6400bd96:	xor    ebx,DWORD PTR [eax]
6400bd98:	add    eax,0x4
6400bd9b:	shr    ecx,0x18
6400bd9e:	mov    DWORD PTR [esp+0x1c],eax
6400bda2:	xor    eax,eax
6400bda4:	mov    ah,BYTE PTR [ecx+0x64031168]
6400bdaa:	mov    edx,edi
6400bdac:	shr    edx,0x10
6400bdaf:	and    edx,0xff
6400bdb5:	movzx  edx,BYTE PTR [edx+0x64031168]
6400bdbc:	movzx  ecx,bh
6400bdbf:	movzx  ecx,BYTE PTR [ecx+0x64031168]
6400bdc6:	xor    edx,eax
6400bdc8:	shl    edx,0x8
6400bdcb:	xor    edx,ecx
6400bdcd:	mov    ecx,DWORD PTR [esp+0x14]
6400bdd1:	and    ecx,0xff
6400bdd7:	movzx  ecx,BYTE PTR [ecx+0x64031168]
6400bdde:	shl    edx,0x8
6400bde1:	mov    DWORD PTR [esp+0x24],ebx
6400bde5:	xor    edx,ecx
6400bde7:	xor    ecx,ecx
6400bde9:	shr    edi,0x18
6400bdec:	mov    ch,BYTE PTR [edi+0x64031168]
6400bdf2:	mov    eax,DWORD PTR [esp+0x1c]
6400bdf6:	xor    edx,DWORD PTR [eax]
6400bdf8:	shr    ebx,0x10
6400bdfb:	and    ebx,0xff
6400be01:	movzx  esi,BYTE PTR [ebx+0x64031168]
6400be08:	xor    esi,ecx
6400be0a:	mov    ecx,DWORD PTR [esp+0x14]
6400be0e:	shl    esi,0x8
6400be11:	movzx  edi,ch
6400be14:	movzx  edi,BYTE PTR [edi+0x64031168]
6400be1b:	xor    esi,edi
6400be1d:	mov    edi,DWORD PTR [esp+0x18]
6400be21:	shl    esi,0x8
6400be24:	and    edi,0xff
6400be2a:	movzx  edi,BYTE PTR [edi+0x64031168]
6400be31:	xor    esi,edi
6400be33:	xor    esi,DWORD PTR [eax+0x4]
6400be36:	shr    ecx,0x10
6400be39:	mov    DWORD PTR [esp+0x1c],esi
6400be3d:	and    ecx,0xff
6400be43:	movzx  esi,BYTE PTR [ecx+0x64031168]
6400be4a:	mov    ecx,DWORD PTR [esp+0x24]
6400be4e:	add    eax,0x4
6400be51:	shr    ecx,0x18
6400be54:	xor    ebx,ebx
6400be56:	mov    bh,BYTE PTR [ecx+0x64031168]
6400be5c:	mov    ecx,DWORD PTR [esp+0x18]
6400be60:	movzx  edi,ch
6400be63:	movzx  edi,BYTE PTR [edi+0x64031168]
6400be6a:	xor    esi,ebx
6400be6c:	shl    esi,0x8
6400be6f:	xor    esi,edi
6400be71:	mov    edi,DWORD PTR [esp+0x28]
6400be75:	shl    esi,0x8
6400be78:	and    edi,0xff
6400be7e:	movzx  edi,BYTE PTR [edi+0x64031168]
6400be85:	xor    esi,edi
6400be87:	xor    esi,DWORD PTR [eax+0x4]
6400be8a:	add    eax,0x4
6400be8d:	mov    DWORD PTR [esp+0x10],esi
6400be91:	mov    esi,DWORD PTR [esp+0x14]
6400be95:	shr    esi,0x18
6400be98:	shr    ecx,0x10
6400be9b:	xor    ebx,ebx
6400be9d:	mov    bh,BYTE PTR [esi+0x64031168]
6400bea3:	movzx  esi,BYTE PTR [esp+0x29]
6400bea8:	movzx  esi,BYTE PTR [esi+0x64031168]
6400beaf:	and    ecx,0xff
6400beb5:	movzx  ecx,BYTE PTR [ecx+0x64031168]
6400bebc:	xor    ecx,ebx
6400bebe:	shl    ecx,0x8
6400bec1:	xor    ecx,esi
6400bec3:	mov    esi,DWORD PTR [esp+0x24]
6400bec7:	and    esi,0xff
6400becd:	movzx  esi,BYTE PTR [esi+0x64031168]
6400bed4:	jmp    0x6400c36c
6400bed9:	mov    edi,DWORD PTR [ebp+0x0]
6400bedc:	sar    edi,1
6400bede:	sub    edi,0x1
6400bee1:	test   edi,edi
6400bee3:	mov    DWORD PTR [esp+0x1c],edi
6400bee7:	jle    0x6400c123
6400beed:	lea    ecx,[ecx+0x0]
6400bef0:	shr    esi,0x10
6400bef3:	and    esi,0xff
6400bef9:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400bf00:	movzx  edi,ch
6400bf03:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400bf0a:	mov    edi,edx
6400bf0c:	shr    edi,0x18
6400bf0f:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400bf16:	mov    edi,DWORD PTR [esp+0x24]
6400bf1a:	mov    DWORD PTR [esp+0x28],esi
6400bf1e:	and    edi,0xff
6400bf24:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400bf2b:	movzx  edi,BYTE PTR [esp+0x11]
6400bf30:	xor    esi,DWORD PTR [eax]
6400bf32:	add    eax,0x4
6400bf35:	mov    DWORD PTR [esp+0x14],esi
6400bf39:	mov    esi,edx
6400bf3b:	shr    esi,0x10
6400bf3e:	and    esi,0xff
6400bf44:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400bf4b:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400bf52:	mov    edi,DWORD PTR [esp+0x24]
6400bf56:	mov    DWORD PTR [esp+0x28],esi
6400bf5a:	shr    edi,0x18
6400bf5d:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400bf64:	mov    edi,ecx
6400bf66:	and    edi,0xff
6400bf6c:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400bf73:	mov    edi,DWORD PTR [esp+0x24]
6400bf77:	xor    esi,DWORD PTR [eax]
6400bf79:	shr    edi,0x10
6400bf7c:	mov    DWORD PTR [esp+0x18],esi
6400bf80:	and    edi,0xff
6400bf86:	movzx  esi,dh
6400bf89:	mov    esi,DWORD PTR [esi*4+0x64030968]
6400bf90:	xor    esi,DWORD PTR [edi*4+0x64030568]
6400bf97:	mov    edi,ecx
6400bf99:	shr    edi,0x18
6400bf9c:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400bfa3:	mov    edi,DWORD PTR [esp+0x10]
6400bfa7:	mov    DWORD PTR [esp+0x28],esi
6400bfab:	and    edi,0xff
6400bfb1:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400bfb8:	add    eax,0x4
6400bfbb:	xor    esi,DWORD PTR [eax]
6400bfbd:	shr    ecx,0x10
6400bfc0:	mov    DWORD PTR [esp+0x28],esi
6400bfc4:	movzx  esi,BYTE PTR [esp+0x25]
6400bfc9:	and    ecx,0xff
6400bfcf:	mov    ebx,DWORD PTR [ecx*4+0x64030568]
6400bfd6:	xor    ebx,DWORD PTR [esi*4+0x64030968]
6400bfdd:	mov    ecx,DWORD PTR [esp+0x10]
6400bfe1:	shr    ecx,0x18
6400bfe4:	xor    ebx,DWORD PTR [ecx*4+0x64030168]
6400bfeb:	mov    ecx,DWORD PTR [esp+0x18]
6400bfef:	and    edx,0xff
6400bff5:	xor    ebx,DWORD PTR [edx*4+0x64030d68]
6400bffc:	mov    edx,DWORD PTR [esp+0x28]
6400c000:	xor    ebx,DWORD PTR [eax+0x4]
6400c003:	add    eax,0x4
6400c006:	mov    esi,edx
6400c008:	shr    esi,0x10
6400c00b:	and    esi,0xff
6400c011:	mov    ebp,DWORD PTR [esi*4+0x64030568]
6400c018:	movzx  edi,ch
6400c01b:	xor    ebp,DWORD PTR [edi*4+0x64030968]
6400c022:	mov    esi,ebx
6400c024:	shr    esi,0x18
6400c027:	xor    ebp,DWORD PTR [esi*4+0x64030168]
6400c02e:	mov    esi,DWORD PTR [esp+0x14]
6400c032:	mov    edi,esi
6400c034:	and    edi,0xff
6400c03a:	xor    ebp,DWORD PTR [edi*4+0x64030d68]
6400c041:	add    eax,0x4
6400c044:	xor    ebp,DWORD PTR [eax]
6400c046:	mov    edi,ebx
6400c048:	shr    edi,0x10
6400c04b:	add    eax,0x4
6400c04e:	mov    DWORD PTR [esp+0x24],ebp
6400c052:	and    edi,0xff
6400c058:	movzx  edx,dh
6400c05b:	mov    edi,DWORD PTR [edi*4+0x64030568]
6400c062:	xor    edi,DWORD PTR [edx*4+0x64030968]
6400c069:	mov    edx,esi
6400c06b:	shr    edx,0x18
6400c06e:	xor    edi,DWORD PTR [edx*4+0x64030168]
6400c075:	shr    esi,0x10
6400c078:	and    esi,0xff
6400c07e:	movzx  edx,bh
6400c081:	mov    edx,DWORD PTR [edx*4+0x64030968]
6400c088:	xor    edx,DWORD PTR [esi*4+0x64030568]
6400c08f:	mov    esi,DWORD PTR [esp+0x18]
6400c093:	shr    esi,0x18
6400c096:	xor    edx,DWORD PTR [esi*4+0x64030168]
6400c09d:	mov    esi,DWORD PTR [esp+0x28]
6400c0a1:	and    ecx,0xff
6400c0a7:	xor    edi,DWORD PTR [ecx*4+0x64030d68]
6400c0ae:	and    esi,0xff
6400c0b4:	xor    edi,DWORD PTR [eax]
6400c0b6:	xor    edx,DWORD PTR [esi*4+0x64030d68]
6400c0bd:	mov    ecx,edi
6400c0bf:	xor    edx,DWORD PTR [eax+0x4]
6400c0c2:	mov    edi,DWORD PTR [esp+0x18]
6400c0c6:	add    eax,0x4
6400c0c9:	shr    edi,0x10
6400c0cc:	and    edi,0xff
6400c0d2:	mov    ebp,DWORD PTR [edi*4+0x64030568]
6400c0d9:	mov    edi,DWORD PTR [esp+0x28]
6400c0dd:	mov    esi,edx
6400c0df:	movzx  edx,BYTE PTR [esp+0x15]
6400c0e4:	xor    ebp,DWORD PTR [edx*4+0x64030968]
6400c0eb:	shr    edi,0x18
6400c0ee:	xor    ebp,DWORD PTR [edi*4+0x64030168]
6400c0f5:	mov    edi,DWORD PTR [esp+0x1c]
6400c0f9:	and    ebx,0xff
6400c0ff:	xor    ebp,DWORD PTR [ebx*4+0x64030d68]
6400c106:	add    eax,0x4
6400c109:	xor    ebp,DWORD PTR [eax]
6400c10b:	sub    edi,0x1
6400c10e:	add    eax,0x4
6400c111:	test   edi,edi
6400c113:	mov    DWORD PTR [esp+0x10],esi
6400c117:	mov    edx,ebp
6400c119:	mov    DWORD PTR [esp+0x1c],edi
6400c11d:	jg     0x6400bef0
6400c123:	shr    esi,0x10
6400c126:	and    esi,0xff
6400c12c:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400c133:	movzx  edi,ch
6400c136:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c13d:	mov    edi,edx
6400c13f:	shr    edi,0x18
6400c142:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c149:	mov    edi,DWORD PTR [esp+0x24]
6400c14d:	mov    DWORD PTR [esp+0x28],esi
6400c151:	and    edi,0xff
6400c157:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c15e:	movzx  edi,BYTE PTR [esp+0x11]
6400c163:	xor    esi,DWORD PTR [eax]
6400c165:	add    eax,0x4
6400c168:	mov    DWORD PTR [esp+0x14],esi
6400c16c:	mov    esi,edx
6400c16e:	shr    esi,0x10
6400c171:	and    esi,0xff
6400c177:	mov    esi,DWORD PTR [esi*4+0x64030568]
6400c17e:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c185:	mov    edi,DWORD PTR [esp+0x24]
6400c189:	shr    edi,0x18
6400c18c:	mov    DWORD PTR [esp+0x28],esi
6400c190:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c197:	mov    edi,ecx
6400c199:	and    edi,0xff
6400c19f:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c1a6:	mov    edi,DWORD PTR [esp+0x24]
6400c1aa:	xor    esi,DWORD PTR [eax]
6400c1ac:	shr    edi,0x10
6400c1af:	mov    DWORD PTR [esp+0x18],esi
6400c1b3:	movzx  esi,dh
6400c1b6:	mov    esi,DWORD PTR [esi*4+0x64030968]
6400c1bd:	and    edi,0xff
6400c1c3:	xor    esi,DWORD PTR [edi*4+0x64030568]
6400c1ca:	mov    edi,ecx
6400c1cc:	shr    edi,0x18
6400c1cf:	xor    esi,DWORD PTR [edi*4+0x64030168]
6400c1d6:	mov    edi,DWORD PTR [esp+0x10]
6400c1da:	mov    DWORD PTR [esp+0x28],esi
6400c1de:	and    edi,0xff
6400c1e4:	xor    esi,DWORD PTR [edi*4+0x64030d68]
6400c1eb:	movzx  edi,BYTE PTR [esp+0x25]
6400c1f0:	xor    esi,DWORD PTR [eax+0x4]
6400c1f3:	shr    ecx,0x10
6400c1f6:	and    ecx,0xff
6400c1fc:	add    eax,0x4
6400c1ff:	mov    DWORD PTR [esp+0x28],esi
6400c203:	mov    esi,DWORD PTR [ecx*4+0x64030568]
6400c20a:	xor    esi,DWORD PTR [edi*4+0x64030968]
6400c211:	mov    ecx,DWORD PTR [esp+0x10]
6400c215:	and    edx,0xff
6400c21b:	shr    ecx,0x18
6400c21e:	xor    esi,DWORD PTR [ecx*4+0x64030168]
6400c225:	add    eax,0x4
6400c228:	xor    esi,DWORD PTR [edx*4+0x64030d68]
6400c22f:	mov    edx,DWORD PTR [esp+0x28]
6400c233:	xor    esi,DWORD PTR [eax]
6400c235:	shr    edx,0x10
6400c238:	and    edx,0xff
6400c23e:	movzx  edx,BYTE PTR [edx+0x6402f040]
6400c245:	mov    ecx,esi
6400c247:	shr    ecx,0x18
6400c24a:	xor    ebx,ebx
6400c24c:	mov    bh,BYTE PTR [ecx+0x6402f040]
6400c252:	movzx  ecx,BYTE PTR [esp+0x19]
6400c257:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c25e:	xor    edx,ebx
6400c260:	shl    edx,0x8
6400c263:	xor    edx,ecx
6400c265:	mov    ecx,DWORD PTR [esp+0x14]
6400c269:	mov    edi,ecx
6400c26b:	and    edi,0xff
6400c271:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400c278:	shl    edx,0x8
6400c27b:	add    eax,0x4
6400c27e:	xor    edx,edi
6400c280:	xor    edx,DWORD PTR [eax]
6400c282:	mov    DWORD PTR [esp+0x24],esi
6400c286:	add    eax,0x4
6400c289:	shr    esi,0x10
6400c28c:	and    esi,0xff
6400c292:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c299:	shr    ecx,0x18
6400c29c:	xor    ebx,ebx
6400c29e:	mov    bh,BYTE PTR [ecx+0x6402f040]
6400c2a4:	movzx  ecx,BYTE PTR [esp+0x29]
6400c2a9:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c2b0:	xor    esi,ebx
6400c2b2:	shl    esi,0x8
6400c2b5:	xor    esi,ecx
6400c2b7:	mov    ecx,DWORD PTR [esp+0x18]
6400c2bb:	mov    edi,ecx
6400c2bd:	shl    esi,0x8
6400c2c0:	and    edi,0xff
6400c2c6:	movzx  edi,BYTE PTR [edi+0x6402f040]
6400c2cd:	xor    esi,edi
6400c2cf:	xor    esi,DWORD PTR [eax]
6400c2d1:	mov    edi,DWORD PTR [esp+0x28]
6400c2d5:	mov    DWORD PTR [esp+0x1c],esi
6400c2d9:	mov    esi,DWORD PTR [esp+0x14]
6400c2dd:	shr    ecx,0x18
6400c2e0:	shr    esi,0x10
6400c2e3:	and    esi,0xff
6400c2e9:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c2f0:	xor    ebx,ebx
6400c2f2:	mov    bh,BYTE PTR [ecx+0x6402f040]
6400c2f8:	movzx  ecx,BYTE PTR [esp+0x25]
6400c2fd:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c304:	xor    esi,ebx
6400c306:	shl    esi,0x8
6400c309:	xor    esi,ecx
6400c30b:	mov    ecx,edi
6400c30d:	and    ecx,0xff
6400c313:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c31a:	shl    esi,0x8
6400c31d:	xor    esi,ecx
6400c31f:	xor    esi,DWORD PTR [eax+0x4]
6400c322:	mov    ecx,DWORD PTR [esp+0x18]
6400c326:	shr    ecx,0x10
6400c329:	xor    ebx,ebx
6400c32b:	add    eax,0x4
6400c32e:	shr    edi,0x18
6400c331:	mov    bh,BYTE PTR [edi+0x6402f040]
6400c337:	and    ecx,0xff
6400c33d:	movzx  ecx,BYTE PTR [ecx+0x6402f040]
6400c344:	mov    DWORD PTR [esp+0x10],esi
6400c348:	movzx  esi,BYTE PTR [esp+0x15]
6400c34d:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c354:	xor    ecx,ebx
6400c356:	shl    ecx,0x8
6400c359:	xor    ecx,esi
6400c35b:	mov    esi,DWORD PTR [esp+0x24]
6400c35f:	and    esi,0xff
6400c365:	movzx  esi,BYTE PTR [esi+0x6402f040]
6400c36c:	shl    ecx,0x8
6400c36f:	xor    ecx,esi
6400c371:	xor    ecx,DWORD PTR [eax+0x4]
6400c374:	mov    esi,DWORD PTR [esp+0x2c]
6400c378:	mov    eax,edx
6400c37a:	shr    eax,0x8
6400c37d:	mov    BYTE PTR [esi+0x1],al
6400c380:	mov    eax,edx
6400c382:	mov    BYTE PTR [esi],dl
6400c384:	shr    edx,0x18
6400c387:	shr    eax,0x10
6400c38a:	mov    BYTE PTR [esi+0x3],dl
6400c38d:	mov    BYTE PTR [esi+0x2],al
6400c390:	mov    eax,DWORD PTR [esp+0x1c]
6400c394:	mov    edx,eax
6400c396:	shr    edx,0x8
6400c399:	mov    BYTE PTR [esi+0x5],dl
6400c39c:	mov    BYTE PTR [esi+0x4],al
6400c39f:	mov    edx,eax
6400c3a1:	shr    edx,0x10
6400c3a4:	shr    eax,0x18
6400c3a7:	mov    BYTE PTR [esi+0x6],dl
6400c3aa:	mov    BYTE PTR [esi+0x7],al
6400c3ad:	mov    eax,DWORD PTR [esp+0x10]
6400c3b1:	mov    edx,eax
6400c3b3:	shr    edx,0x8
6400c3b6:	mov    BYTE PTR [esi+0x9],dl
6400c3b9:	mov    edx,eax
6400c3bb:	mov    BYTE PTR [esi+0x8],al
6400c3be:	shr    edx,0x10
6400c3c1:	shr    eax,0x18
6400c3c4:	mov    BYTE PTR [esi+0xa],dl
6400c3c7:	mov    BYTE PTR [esi+0xb],al
6400c3ca:	mov    eax,ecx
6400c3cc:	mov    edx,ecx
6400c3ce:	mov    BYTE PTR [esi+0xc],cl
6400c3d1:	shr    eax,0x8
6400c3d4:	shr    edx,0x10
6400c3d7:	pop    edi
6400c3d8:	shr    ecx,0x18
6400c3db:	mov    BYTE PTR [esi+0xd],al
6400c3de:	mov    BYTE PTR [esi+0xe],dl
6400c3e1:	mov    BYTE PTR [esi+0xf],cl
6400c3e4:	pop    esi
6400c3e5:	pop    ebp
6400c3e6:	pop    ebx
6400c3e7:	add    esp,0x10
6400c3ea:	ret    
6400c3eb:	int3   
6400c3ec:	int3   
6400c3ed:	int3   
6400c3ee:	int3   
6400c3ef:	int3   
6400c3f0:	sub    esp,0x30
6400c3f3:	mov    eax,ds:0x6402d09c
6400c3f8:	xor    eax,esp
6400c3fa:	mov    DWORD PTR [esp+0x2c],eax
6400c3fe:	cmp    DWORD PTR [esp+0x38],0x0
6400c403:	mov    eax,DWORD PTR [esp+0x34]
6400c407:	push   ebx
6400c408:	push   ebp
6400c409:	mov    ebp,DWORD PTR [esp+0x44]
6400c40d:	push   esi
6400c40e:	mov    esi,DWORD PTR [esp+0x4c]
6400c412:	push   edi
6400c413:	mov    edi,edx
6400c415:	mov    DWORD PTR [esp+0x24],eax
6400c419:	jne    0x6400c4d7
6400c41f:	test   ecx,ecx
6400c421:	jle    0x6400c5b6
6400c427:	lea    eax,[ecx-0x1]
6400c42a:	mov    ebx,ebp
6400c42c:	shr    eax,0x4
6400c42f:	sub    ebx,esi
6400c431:	add    eax,0x1
6400c434:	mov    DWORD PTR [esp+0x10],eax
6400c438:	mov    edx,DWORD PTR [edi+0x4]
6400c43b:	mov    ecx,DWORD PTR [edi]
6400c43d:	mov    eax,DWORD PTR [edi+0x8]
6400c440:	push   esi
6400c441:	mov    DWORD PTR [esp+0x34],edx
6400c445:	mov    edx,DWORD PTR [esp+0x28]
6400c449:	mov    DWORD PTR [esp+0x30],ecx
6400c44d:	mov    ecx,DWORD PTR [edi+0xc]
6400c450:	mov    DWORD PTR [esp+0x38],eax
6400c454:	push   0x0
6400c456:	push   edx
6400c457:	mov    eax,edi
6400c459:	mov    DWORD PTR [esp+0x44],ecx
6400c45d:	call   0x6400b9a0
6400c462:	mov    eax,esi
6400c464:	add    esp,0xc
6400c467:	lea    ecx,[ebp+0x2]
6400c46a:	mov    esi,0x4
6400c46f:	nop
6400c470:	movzx  edx,BYTE PTR [ebx+eax*1]
6400c474:	xor    BYTE PTR [eax],dl
6400c476:	movzx  edx,BYTE PTR [ecx-0x1]
6400c47a:	xor    BYTE PTR [eax+0x1],dl
6400c47d:	movzx  edx,BYTE PTR [ecx]
6400c480:	xor    BYTE PTR [eax+0x2],dl
6400c483:	movzx  edx,BYTE PTR [ecx+0x1]
6400c487:	xor    BYTE PTR [eax+0x3],dl
6400c48a:	add    eax,0x4
6400c48d:	add    ecx,0x4
6400c490:	sub    esi,0x1
6400c493:	jne    0x6400c470
6400c495:	mov    ecx,DWORD PTR [esp+0x2c]
6400c499:	mov    edx,DWORD PTR [esp+0x30]
6400c49d:	mov    DWORD PTR [ebp+0x0],ecx
6400c4a0:	mov    ecx,DWORD PTR [esp+0x34]
6400c4a4:	mov    DWORD PTR [ebp+0x4],edx
6400c4a7:	mov    edx,DWORD PTR [esp+0x38]
6400c4ab:	add    edi,0x10
6400c4ae:	sub    ebx,0x10
6400c4b1:	sub    DWORD PTR [esp+0x10],0x1
6400c4b6:	mov    DWORD PTR [ebp+0x8],ecx
6400c4b9:	mov    DWORD PTR [ebp+0xc],edx
6400c4bc:	mov    esi,eax
6400c4be:	jne    0x6400c438
6400c4c4:	pop    edi
6400c4c5:	pop    esi
6400c4c6:	pop    ebp
6400c4c7:	pop    ebx
6400c4c8:	mov    ecx,DWORD PTR [esp+0x2c]
6400c4cc:	xor    ecx,esp
6400c4ce:	call   0x64012b8c
6400c4d3:	add    esp,0x30
6400c4d6:	ret    
6400c4d7:	test   ecx,ecx
6400c4d9:	jle    0x6400c5b6
6400c4df:	mov    eax,ebp
6400c4e1:	sub    eax,esi
6400c4e3:	mov    DWORD PTR [esp+0x10],eax
6400c4e7:	mov    eax,ebp
6400c4e9:	sub    eax,edi
6400c4eb:	mov    DWORD PTR [esp+0x14],eax
6400c4ef:	lea    eax,[ecx-0x1]
6400c4f2:	shr    eax,0x4
6400c4f5:	add    eax,0x1
6400c4f8:	mov    DWORD PTR [esp+0x1c],eax
6400c4fc:	lea    esp,[esp+0x0]
6400c500:	lea    eax,[ebp+0x3]
6400c503:	mov    edx,esi
6400c505:	sub    edx,edi
6400c507:	mov    DWORD PTR [esp+0x20],eax
6400c50b:	lea    ecx,[esi+0x1]
6400c50e:	mov    eax,edi
6400c510:	mov    DWORD PTR [esp+0x28],edx
6400c514:	mov    DWORD PTR [esp+0x18],0x4
6400c51c:	jmp    0x6400c524
6400c51e:	mov    edi,edi
6400c520:	mov    edx,DWORD PTR [esp+0x28]
6400c524:	mov    ebx,DWORD PTR [esp+0x14]
6400c528:	movzx  ebx,BYTE PTR [eax+ebx*1]
6400c52c:	xor    bl,BYTE PTR [eax]
6400c52e:	add    eax,0x4
6400c531:	mov    BYTE PTR [edx+eax*1-0x4],bl
6400c535:	mov    edx,DWORD PTR [esp+0x10]
6400c539:	mov    dl,BYTE PTR [ecx+edx*1]
6400c53c:	xor    dl,BYTE PTR [eax-0x3]
6400c53f:	add    ecx,0x4
6400c542:	mov    BYTE PTR [ecx-0x4],dl
6400c545:	movzx  ebx,BYTE PTR [eax-0x2]
6400c549:	mov    edx,DWORD PTR [esp+0x20]
6400c54d:	xor    bl,BYTE PTR [edx-0x1]
6400c550:	add    edx,0x4
6400c553:	mov    BYTE PTR [ecx-0x3],bl
6400c556:	movzx  ebx,BYTE PTR [eax-0x1]
6400c55a:	xor    bl,BYTE PTR [edx-0x4]
6400c55d:	mov    DWORD PTR [esp+0x20],edx
6400c561:	mov    BYTE PTR [ecx-0x2],bl
6400c564:	mov    ebx,0x1
6400c569:	sub    DWORD PTR [esp+0x18],ebx
6400c56d:	jne    0x6400c520
6400c56f:	mov    eax,DWORD PTR [esp+0x48]
6400c573:	mov    ecx,DWORD PTR [esp+0x24]
6400c577:	push   esi
6400c578:	push   eax
6400c579:	push   ecx
6400c57a:	mov    eax,esi
6400c57c:	call   0x6400b9a0
6400c581:	mov    edx,DWORD PTR [esi]
6400c583:	mov    DWORD PTR [ebp+0x0],edx
6400c586:	mov    eax,DWORD PTR [esi+0x4]
6400c589:	mov    DWORD PTR [ebp+0x4],eax
6400c58c:	mov    ecx,DWORD PTR [esi+0x8]
6400c58f:	mov    eax,0x10
6400c594:	sub    DWORD PTR [esp+0x20],eax
6400c598:	sub    DWORD PTR [esp+0x1c],eax
6400c59c:	mov    DWORD PTR [ebp+0x8],ecx
6400c59f:	mov    edx,DWORD PTR [esi+0xc]
6400c5a2:	add    esp,0xc
6400c5a5:	add    edi,eax
6400c5a7:	add    esi,eax
6400c5a9:	sub    DWORD PTR [esp+0x1c],ebx
6400c5ad:	mov    DWORD PTR [ebp+0xc],edx
6400c5b0:	jne    0x6400c500
6400c5b6:	mov    ecx,DWORD PTR [esp+0x3c]
6400c5ba:	pop    edi
6400c5bb:	pop    esi
6400c5bc:	pop    ebp
6400c5bd:	pop    ebx
6400c5be:	xor    ecx,esp
6400c5c0:	call   0x64012b8c
6400c5c5:	add    esp,0x30
6400c5c8:	ret    
6400c5c9:	int3   
6400c5ca:	int3   
6400c5cb:	int3   
6400c5cc:	int3   
6400c5cd:	int3   
6400c5ce:	int3   
6400c5cf:	int3   
6400c5d0:	push   0xffffffff
6400c5d2:	push   0x640225fb
6400c5d7:	mov    eax,fs:0x0
6400c5dd:	push   eax
6400c5de:	sub    esp,0x138
6400c5e4:	mov    eax,ds:0x6402d09c
6400c5e9:	xor    eax,esp
6400c5eb:	mov    DWORD PTR [esp+0x134],eax
6400c5f2:	push   ebp
6400c5f3:	push   esi
6400c5f4:	push   edi
6400c5f5:	mov    eax,ds:0x6402d09c
6400c5fa:	xor    eax,esp
6400c5fc:	push   eax
6400c5fd:	lea    eax,[esp+0x148]
6400c604:	mov    fs:0x0,eax
6400c60a:	mov    ebp,DWORD PTR [esp+0x15c]
6400c611:	mov    eax,DWORD PTR [esp+0x158]
6400c618:	mov    DWORD PTR [esp+0x14],eax
6400c61c:	lea    esi,[ebp+0x8]
6400c61f:	mov    eax,esi
6400c621:	and    eax,0xf
6400c624:	mov    DWORD PTR [esp+0x18],ecx
6400c628:	mov    DWORD PTR [esp+0x10],0x0
6400c630:	je     0x6400c63b
6400c632:	mov    edx,0x10
6400c637:	sub    edx,eax
6400c639:	add    esi,edx
6400c63b:	push   esi
6400c63c:	call   0x6401232d
6400c641:	mov    edi,eax
6400c643:	mov    DWORD PTR [esp+0x14],edi
6400c647:	push   esi
6400c648:	mov    DWORD PTR [esp+0x158],0x0
6400c653:	call   0x6401232d
6400c658:	push   esi
6400c659:	push   0x0
6400c65b:	push   edi
6400c65c:	mov    DWORD PTR [ebx],eax
6400c65e:	call   0x64013290
6400c663:	mov    eax,DWORD PTR [esp+0x28]
6400c667:	push   ebp
6400c668:	push   eax
6400c669:	lea    ecx,[edi+0x8]
6400c66c:	mov    DWORD PTR [edi],0x52514f4b
6400c672:	push   ecx
6400c673:	mov    DWORD PTR [edi+0x4],ebp
6400c676:	call   0x640145b0
6400c67b:	xor    eax,eax
6400c67d:	mov    DWORD PTR [esp+0x154],eax
6400c684:	mov    DWORD PTR [esp+0x158],eax
6400c68b:	mov    DWORD PTR [esp+0x15c],eax
6400c692:	mov    DWORD PTR [esp+0x160],eax
6400c699:	lea    eax,[esp+0x3c]
6400c69d:	call   0x6400b2b0
6400c6a2:	mov    eax,DWORD PTR [ebx]
6400c6a4:	push   eax
6400c6a5:	lea    edx,[esp+0x158]
6400c6ac:	push   edx
6400c6ad:	lea    eax,[esp+0x44]
6400c6b1:	push   0x1
6400c6b3:	push   eax
6400c6b4:	mov    edx,edi
6400c6b6:	mov    ecx,esi
6400c6b8:	call   0x6400c3f0
6400c6bd:	mov    ecx,DWORD PTR [esp+0x48]
6400c6c1:	push   0x0
6400c6c3:	mov    DWORD PTR [ecx],esi
6400c6c5:	call   0x64012332
6400c6ca:	push   edi
6400c6cb:	call   0x64012332
6400c6d0:	add    esp,0x38
6400c6d3:	mov    eax,ebx
6400c6d5:	mov    ecx,DWORD PTR [esp+0x148]
6400c6dc:	mov    DWORD PTR fs:0x0,ecx
6400c6e3:	pop    ecx
6400c6e4:	pop    edi
6400c6e5:	pop    esi
6400c6e6:	pop    ebp
6400c6e7:	mov    ecx,DWORD PTR [esp+0x134]
6400c6ee:	xor    ecx,esp
6400c6f0:	call   0x64012b8c
6400c6f5:	add    esp,0x144
6400c6fb:	ret    
6400c6fc:	int3   
6400c6fd:	int3   
6400c6fe:	int3   
6400c6ff:	int3   
6400c700:	sub    esp,0x13c
6400c706:	mov    eax,ds:0x6402d09c
6400c70b:	xor    eax,esp
6400c70d:	mov    DWORD PTR [esp+0x134],eax
6400c714:	mov    eax,DWORD PTR [esp+0x144]
6400c71b:	push   ebp
6400c71c:	mov    ebp,DWORD PTR [esp+0x144]
6400c723:	mov    DWORD PTR [esp+0x8],eax
6400c727:	xor    eax,eax
6400c729:	test   bl,0xf
6400c72c:	push   esi
6400c72d:	mov    DWORD PTR [esp+0x8],eax
6400c731:	je     0x6400c73f
6400c733:	mov    DWORD PTR [esp+0x8],eax
6400c737:	mov    DWORD PTR [edi],eax
6400c739:	push   eax
6400c73a:	jmp    0x6400c7df
6400c73f:	push   ebx
6400c740:	call   0x6401232d
6400c745:	mov    esi,eax
6400c747:	xor    eax,eax
6400c749:	mov    DWORD PTR [esp+0x130],eax
6400c750:	mov    DWORD PTR [esp+0x134],eax
6400c757:	mov    DWORD PTR [esp+0x138],eax
6400c75e:	mov    DWORD PTR [esp+0x13c],eax
6400c765:	add    esp,0x4
6400c768:	lea    eax,[esp+0x10]
6400c76c:	call   0x6400b7c0
6400c771:	push   esi
6400c772:	lea    ecx,[esp+0x130]
6400c779:	push   ecx
6400c77a:	lea    edx,[esp+0x18]
6400c77e:	push   0x0
6400c780:	push   edx
6400c781:	mov    edx,ebp
6400c783:	mov    ecx,ebx
6400c785:	call   0x6400c3f0
6400c78a:	add    esp,0x10
6400c78d:	cmp    DWORD PTR [esi],0x52534f4b
6400c793:	je     0x6400c7ba
6400c795:	push   0x0
6400c797:	mov    DWORD PTR [esp+0xc],0x0
6400c79f:	mov    DWORD PTR [edi],0x0
6400c7a5:	call   0x64012332
6400c7aa:	add    esp,0x4
6400c7ad:	push   0x0
6400c7af:	call   0x64012332
6400c7b4:	add    esp,0x4
6400c7b7:	push   esi
6400c7b8:	jmp    0x6400c7df
6400c7ba:	mov    eax,DWORD PTR [esi+0x4]
6400c7bd:	mov    ecx,DWORD PTR [esp+0xc]
6400c7c1:	push   eax
6400c7c2:	lea    edx,[esi+0x8]
6400c7c5:	push   edx
6400c7c6:	push   esi
6400c7c7:	mov    DWORD PTR [ecx],eax
6400c7c9:	call   0x64013bd0
6400c7ce:	add    esp,0xc
6400c7d1:	push   0x0
6400c7d3:	mov    DWORD PTR [edi],esi
6400c7d5:	call   0x64012332
6400c7da:	add    esp,0x4
6400c7dd:	push   0x0
6400c7df:	call   0x64012332
6400c7e4:	mov    ecx,DWORD PTR [esp+0x140]
6400c7eb:	add    esp,0x4
6400c7ee:	pop    esi
6400c7ef:	pop    ebp
6400c7f0:	xor    ecx,esp
6400c7f2:	mov    eax,edi
6400c7f4:	call   0x64012b8c
6400c7f9:	add    esp,0x13c
6400c7ff:	ret    
6400c800:	push   ebp
6400c801:	mov    ebp,esp
6400c803:	and    esp,0xfffffff8
6400c806:	push   0xffffffff
6400c808:	push   0x6402367e
6400c80d:	mov    eax,fs:0x0
6400c813:	push   eax
6400c814:	push   ecx
6400c815:	push   ebx
6400c816:	push   esi
6400c817:	mov    eax,ds:0x6402d09c
6400c81c:	xor    eax,esp
6400c81e:	push   eax
6400c81f:	lea    eax,[esp+0x10]
6400c823:	mov    fs:0x0,eax
6400c829:	mov    ebx,0x1
6400c82e:	test   BYTE PTR ds:0x640314a8,bl
6400c834:	jne    0x6400c8be
6400c83a:	or     DWORD PTR ds:0x640314a8,ebx
6400c840:	push   0x640286f4
6400c845:	push   0xc
6400c847:	push   0x6402871c
6400c84c:	mov    DWORD PTR [esp+0x24],0x0
6400c854:	call   0x64005750
6400c859:	push   0x6402872c
6400c85e:	push   0x8
6400c860:	push   0x64028760
6400c865:	mov    esi,eax
6400c867:	call   0x64005a10
6400c86c:	add    esp,0x18
6400c86f:	push   eax
6400c870:	call   DWORD PTR ds:0x64025018
6400c876:	add    DWORD PTR ds:0x64031270,ebx
6400c87c:	test   eax,eax
6400c87e:	je     0x6400c8a5
6400c880:	push   esi
6400c881:	push   eax
6400c882:	call   DWORD PTR ds:0x64025014
6400c888:	add    DWORD PTR ds:0x64031274,ebx
6400c88e:	mov    ds:0x640314a4,eax
6400c893:	mov    ecx,DWORD PTR [esp+0x10]
6400c897:	mov    DWORD PTR fs:0x0,ecx
6400c89e:	pop    ecx
6400c89f:	pop    esi
6400c8a0:	pop    ebx
6400c8a1:	mov    esp,ebp
6400c8a3:	pop    ebp
6400c8a4:	ret    
6400c8a5:	xor    eax,eax
6400c8a7:	mov    ds:0x640314a4,eax
6400c8ac:	mov    ecx,DWORD PTR [esp+0x10]
6400c8b0:	mov    DWORD PTR fs:0x0,ecx
6400c8b7:	pop    ecx
6400c8b8:	pop    esi
6400c8b9:	pop    ebx
6400c8ba:	mov    esp,ebp
6400c8bc:	pop    ebp
6400c8bd:	ret    
6400c8be:	mov    eax,ds:0x640314a4
6400c8c3:	mov    ecx,DWORD PTR [esp+0x10]
6400c8c7:	mov    DWORD PTR fs:0x0,ecx
6400c8ce:	pop    ecx
6400c8cf:	pop    esi
6400c8d0:	pop    ebx
6400c8d1:	mov    esp,ebp
6400c8d3:	pop    ebp
6400c8d4:	ret    
6400c8d5:	int3   
6400c8d6:	int3   
6400c8d7:	int3   
6400c8d8:	int3   
6400c8d9:	int3   
6400c8da:	int3   
6400c8db:	int3   
6400c8dc:	int3   
6400c8dd:	int3   
6400c8de:	int3   
6400c8df:	int3   
6400c8e0:	push   ebp
6400c8e1:	mov    ebp,esp
6400c8e3:	and    esp,0xfffffff8
6400c8e6:	push   0xffffffff
6400c8e8:	push   0x6402364e
6400c8ed:	mov    eax,fs:0x0
6400c8f3:	push   eax
6400c8f4:	push   ecx
6400c8f5:	push   ebx
6400c8f6:	push   esi
6400c8f7:	mov    eax,ds:0x6402d09c
6400c8fc:	xor    eax,esp
6400c8fe:	push   eax
6400c8ff:	lea    eax,[esp+0x10]
6400c903:	mov    fs:0x0,eax
6400c909:	mov    ebx,0x1
6400c90e:	test   BYTE PTR ds:0x640314a0,bl
6400c914:	jne    0x6400c99e
6400c91a:	or     DWORD PTR ds:0x640314a0,ebx
6400c920:	push   0x64028774
6400c925:	push   0xe
6400c927:	push   0x640287a0
6400c92c:	mov    DWORD PTR [esp+0x24],0x0
6400c934:	call   0x64005750
6400c939:	push   0x640287b0
6400c93e:	push   0x8
6400c940:	push   0x64028760
6400c945:	mov    esi,eax
6400c947:	call   0x64005a10
6400c94c:	add    esp,0x18
6400c94f:	push   eax
6400c950:	call   DWORD PTR ds:0x64025018
6400c956:	add    DWORD PTR ds:0x64031270,ebx
6400c95c:	test   eax,eax
6400c95e:	je     0x6400c985
6400c960:	push   esi
6400c961:	push   eax
6400c962:	call   DWORD PTR ds:0x64025014
6400c968:	add    DWORD PTR ds:0x64031274,ebx
6400c96e:	mov    ds:0x6403149c,eax
6400c973:	mov    ecx,DWORD PTR [esp+0x10]
6400c977:	mov    DWORD PTR fs:0x0,ecx
6400c97e:	pop    ecx
6400c97f:	pop    esi
6400c980:	pop    ebx
6400c981:	mov    esp,ebp
6400c983:	pop    ebp
6400c984:	ret    
6400c985:	xor    eax,eax
6400c987:	mov    ds:0x6403149c,eax
6400c98c:	mov    ecx,DWORD PTR [esp+0x10]
6400c990:	mov    DWORD PTR fs:0x0,ecx
6400c997:	pop    ecx
6400c998:	pop    esi
6400c999:	pop    ebx
6400c99a:	mov    esp,ebp
6400c99c:	pop    ebp
6400c99d:	ret    
6400c99e:	mov    eax,ds:0x6403149c
6400c9a3:	mov    ecx,DWORD PTR [esp+0x10]
6400c9a7:	mov    DWORD PTR fs:0x0,ecx
6400c9ae:	pop    ecx
6400c9af:	pop    esi
6400c9b0:	pop    ebx
6400c9b1:	mov    esp,ebp
6400c9b3:	pop    ebp
6400c9b4:	ret    
6400c9b5:	int3   
6400c9b6:	int3   
6400c9b7:	int3   
6400c9b8:	int3   
6400c9b9:	int3   
6400c9ba:	int3   
6400c9bb:	int3   
6400c9bc:	int3   
6400c9bd:	int3   
6400c9be:	int3   
6400c9bf:	int3   
6400c9c0:	push   ebp
6400c9c1:	mov    ebp,esp
6400c9c3:	and    esp,0xfffffff8
6400c9c6:	push   0xffffffff
6400c9c8:	push   0x6402361e
6400c9cd:	mov    eax,fs:0x0
6400c9d3:	push   eax
6400c9d4:	push   ecx
6400c9d5:	push   ebx
6400c9d6:	push   esi
6400c9d7:	mov    eax,ds:0x6402d09c
6400c9dc:	xor    eax,esp
6400c9de:	push   eax
6400c9df:	lea    eax,[esp+0x10]
6400c9e3:	mov    fs:0x0,eax
6400c9e9:	mov    ebx,0x1
6400c9ee:	test   BYTE PTR ds:0x64031498,bl
6400c9f4:	jne    0x6400ca7e
6400c9fa:	or     DWORD PTR ds:0x64031498,ebx
6400ca00:	push   0x640287e4
6400ca05:	push   0xf
6400ca07:	push   0x64028808
6400ca0c:	mov    DWORD PTR [esp+0x24],0x0
6400ca14:	call   0x64005750
6400ca19:	push   0x64028818
6400ca1e:	push   0x8
6400ca20:	push   0x64028760
6400ca25:	mov    esi,eax
6400ca27:	call   0x64005a10
6400ca2c:	add    esp,0x18
6400ca2f:	push   eax
6400ca30:	call   DWORD PTR ds:0x64025018
6400ca36:	add    DWORD PTR ds:0x64031270,ebx
6400ca3c:	test   eax,eax
6400ca3e:	je     0x6400ca65
6400ca40:	push   esi
6400ca41:	push   eax
6400ca42:	call   DWORD PTR ds:0x64025014
6400ca48:	add    DWORD PTR ds:0x64031274,ebx
6400ca4e:	mov    ds:0x64031494,eax
6400ca53:	mov    ecx,DWORD PTR [esp+0x10]
6400ca57:	mov    DWORD PTR fs:0x0,ecx
6400ca5e:	pop    ecx
6400ca5f:	pop    esi
6400ca60:	pop    ebx
6400ca61:	mov    esp,ebp
6400ca63:	pop    ebp
6400ca64:	ret    
6400ca65:	xor    eax,eax
6400ca67:	mov    ds:0x64031494,eax
6400ca6c:	mov    ecx,DWORD PTR [esp+0x10]
6400ca70:	mov    DWORD PTR fs:0x0,ecx
6400ca77:	pop    ecx
6400ca78:	pop    esi
6400ca79:	pop    ebx
6400ca7a:	mov    esp,ebp
6400ca7c:	pop    ebp
6400ca7d:	ret    
6400ca7e:	mov    eax,ds:0x64031494
6400ca83:	mov    ecx,DWORD PTR [esp+0x10]
6400ca87:	mov    DWORD PTR fs:0x0,ecx
6400ca8e:	pop    ecx
6400ca8f:	pop    esi
6400ca90:	pop    ebx
6400ca91:	mov    esp,ebp
6400ca93:	pop    ebp
6400ca94:	ret    
6400ca95:	int3   
6400ca96:	int3   
6400ca97:	int3   
6400ca98:	int3   
6400ca99:	int3   
6400ca9a:	int3   
6400ca9b:	int3   
6400ca9c:	int3   
6400ca9d:	int3   
6400ca9e:	int3   
6400ca9f:	int3   
6400caa0:	push   ebp
6400caa1:	mov    ebp,esp
6400caa3:	and    esp,0xfffffff8
6400caa6:	push   0xffffffff
6400caa8:	push   0x640235ee
6400caad:	mov    eax,fs:0x0
6400cab3:	push   eax
6400cab4:	push   ecx
6400cab5:	push   ebx
6400cab6:	push   esi
6400cab7:	mov    eax,ds:0x6402d09c
6400cabc:	xor    eax,esp
6400cabe:	push   eax
6400cabf:	lea    eax,[esp+0x10]
6400cac3:	mov    fs:0x0,eax
6400cac9:	mov    ebx,0x1
6400cace:	test   BYTE PTR ds:0x64031490,bl
6400cad4:	jne    0x6400cb5e
6400cada:	or     DWORD PTR ds:0x64031490,ebx
6400cae0:	push   0x6402884c
6400cae5:	push   0xf
6400cae7:	push   0x64028880
6400caec:	mov    DWORD PTR [esp+0x24],0x0
6400caf4:	call   0x64005750
6400caf9:	push   0x64028890
6400cafe:	push   0x8
6400cb00:	push   0x64028760
6400cb05:	mov    esi,eax
6400cb07:	call   0x64005a10
6400cb0c:	add    esp,0x18
6400cb0f:	push   eax
6400cb10:	call   DWORD PTR ds:0x64025018
6400cb16:	add    DWORD PTR ds:0x64031270,ebx
6400cb1c:	test   eax,eax
6400cb1e:	je     0x6400cb45
6400cb20:	push   esi
6400cb21:	push   eax
6400cb22:	call   DWORD PTR ds:0x64025014
6400cb28:	add    DWORD PTR ds:0x64031274,ebx
6400cb2e:	mov    ds:0x6403148c,eax
6400cb33:	mov    ecx,DWORD PTR [esp+0x10]
6400cb37:	mov    DWORD PTR fs:0x0,ecx
6400cb3e:	pop    ecx
6400cb3f:	pop    esi
6400cb40:	pop    ebx
6400cb41:	mov    esp,ebp
6400cb43:	pop    ebp
6400cb44:	ret    
6400cb45:	xor    eax,eax
6400cb47:	mov    ds:0x6403148c,eax
6400cb4c:	mov    ecx,DWORD PTR [esp+0x10]
6400cb50:	mov    DWORD PTR fs:0x0,ecx
6400cb57:	pop    ecx
6400cb58:	pop    esi
6400cb59:	pop    ebx
6400cb5a:	mov    esp,ebp
6400cb5c:	pop    ebp
6400cb5d:	ret    
6400cb5e:	mov    eax,ds:0x6403148c
6400cb63:	mov    ecx,DWORD PTR [esp+0x10]
6400cb67:	mov    DWORD PTR fs:0x0,ecx
6400cb6e:	pop    ecx
6400cb6f:	pop    esi
6400cb70:	pop    ebx
6400cb71:	mov    esp,ebp
6400cb73:	pop    ebp
6400cb74:	ret    
6400cb75:	int3   
6400cb76:	int3   
6400cb77:	int3   
6400cb78:	int3   
6400cb79:	int3   
6400cb7a:	int3   
6400cb7b:	int3   
6400cb7c:	int3   
6400cb7d:	int3   
6400cb7e:	int3   
6400cb7f:	int3   
6400cb80:	push   ebp
6400cb81:	mov    ebp,esp
6400cb83:	and    esp,0xfffffff8
6400cb86:	push   0xffffffff
6400cb88:	push   0x640235be
6400cb8d:	mov    eax,fs:0x0
6400cb93:	push   eax
6400cb94:	push   ecx
6400cb95:	push   ebx
6400cb96:	push   esi
6400cb97:	mov    eax,ds:0x6402d09c
6400cb9c:	xor    eax,esp
6400cb9e:	push   eax
6400cb9f:	lea    eax,[esp+0x10]
6400cba3:	mov    fs:0x0,eax
6400cba9:	mov    ebx,0x1
6400cbae:	test   BYTE PTR ds:0x64031488,bl
6400cbb4:	jne    0x6400cc3e
6400cbba:	or     DWORD PTR ds:0x64031488,ebx
6400cbc0:	push   0x640288d0
6400cbc5:	push   0x13
6400cbc7:	push   0x640288f8
6400cbcc:	mov    DWORD PTR [esp+0x24],0x0
6400cbd4:	call   0x64005750
6400cbd9:	push   0x6402890c
6400cbde:	push   0x8
6400cbe0:	push   0x64028944
6400cbe5:	mov    esi,eax
6400cbe7:	call   0x64005a10
6400cbec:	add    esp,0x18
6400cbef:	push   eax
6400cbf0:	call   DWORD PTR ds:0x64025018
6400cbf6:	add    DWORD PTR ds:0x64031270,ebx
6400cbfc:	test   eax,eax
6400cbfe:	je     0x6400cc25
6400cc00:	push   esi
6400cc01:	push   eax
6400cc02:	call   DWORD PTR ds:0x64025014
6400cc08:	add    DWORD PTR ds:0x64031274,ebx
6400cc0e:	mov    ds:0x64031484,eax
6400cc13:	mov    ecx,DWORD PTR [esp+0x10]
6400cc17:	mov    DWORD PTR fs:0x0,ecx
6400cc1e:	pop    ecx
6400cc1f:	pop    esi
6400cc20:	pop    ebx
6400cc21:	mov    esp,ebp
6400cc23:	pop    ebp
6400cc24:	ret    
6400cc25:	xor    eax,eax
6400cc27:	mov    ds:0x64031484,eax
6400cc2c:	mov    ecx,DWORD PTR [esp+0x10]
6400cc30:	mov    DWORD PTR fs:0x0,ecx
6400cc37:	pop    ecx
6400cc38:	pop    esi
6400cc39:	pop    ebx
6400cc3a:	mov    esp,ebp
6400cc3c:	pop    ebp
6400cc3d:	ret    
6400cc3e:	mov    eax,ds:0x64031484
6400cc43:	mov    ecx,DWORD PTR [esp+0x10]
6400cc47:	mov    DWORD PTR fs:0x0,ecx
6400cc4e:	pop    ecx
6400cc4f:	pop    esi
6400cc50:	pop    ebx
6400cc51:	mov    esp,ebp
6400cc53:	pop    ebp
6400cc54:	ret    
6400cc55:	int3   
6400cc56:	int3   
6400cc57:	int3   
6400cc58:	int3   
6400cc59:	int3   
6400cc5a:	int3   
6400cc5b:	int3   
6400cc5c:	int3   
6400cc5d:	int3   
6400cc5e:	int3   
6400cc5f:	int3   
6400cc60:	push   ebp
6400cc61:	mov    ebp,esp
6400cc63:	and    esp,0xfffffff8
6400cc66:	push   0xffffffff
6400cc68:	push   0x6402358e
6400cc6d:	mov    eax,fs:0x0
6400cc73:	push   eax
6400cc74:	push   ecx
6400cc75:	push   ebx
6400cc76:	push   esi
6400cc77:	mov    eax,ds:0x6402d09c
6400cc7c:	xor    eax,esp
6400cc7e:	push   eax
6400cc7f:	lea    eax,[esp+0x10]
6400cc83:	mov    fs:0x0,eax
6400cc89:	mov    ebx,0x1
6400cc8e:	test   BYTE PTR ds:0x64031480,bl
6400cc94:	jne    0x6400cd1e
6400cc9a:	or     DWORD PTR ds:0x64031480,ebx
6400cca0:	push   0x64028958
6400cca5:	push   0xe
6400cca7:	push   0x64028980
6400ccac:	mov    DWORD PTR [esp+0x24],0x0
6400ccb4:	call   0x64005750
6400ccb9:	push   0x64028990
6400ccbe:	push   0x8
6400ccc0:	push   0x64028944
6400ccc5:	mov    esi,eax
6400ccc7:	call   0x64005a10
6400cccc:	add    esp,0x18
6400cccf:	push   eax
6400ccd0:	call   DWORD PTR ds:0x64025018
6400ccd6:	add    DWORD PTR ds:0x64031270,ebx
6400ccdc:	test   eax,eax
6400ccde:	je     0x6400cd05
6400cce0:	push   esi
6400cce1:	push   eax
6400cce2:	call   DWORD PTR ds:0x64025014
6400cce8:	add    DWORD PTR ds:0x64031274,ebx
6400ccee:	mov    ds:0x6403147c,eax
6400ccf3:	mov    ecx,DWORD PTR [esp+0x10]
6400ccf7:	mov    DWORD PTR fs:0x0,ecx
6400ccfe:	pop    ecx
6400ccff:	pop    esi
6400cd00:	pop    ebx
6400cd01:	mov    esp,ebp
6400cd03:	pop    ebp
6400cd04:	ret    
6400cd05:	xor    eax,eax
6400cd07:	mov    ds:0x6403147c,eax
6400cd0c:	mov    ecx,DWORD PTR [esp+0x10]
6400cd10:	mov    DWORD PTR fs:0x0,ecx
6400cd17:	pop    ecx
6400cd18:	pop    esi
6400cd19:	pop    ebx
6400cd1a:	mov    esp,ebp
6400cd1c:	pop    ebp
6400cd1d:	ret    
6400cd1e:	mov    eax,ds:0x6403147c
6400cd23:	mov    ecx,DWORD PTR [esp+0x10]
6400cd27:	mov    DWORD PTR fs:0x0,ecx
6400cd2e:	pop    ecx
6400cd2f:	pop    esi
6400cd30:	pop    ebx
6400cd31:	mov    esp,ebp
6400cd33:	pop    ebp
6400cd34:	ret    
6400cd35:	int3   
6400cd36:	int3   
6400cd37:	int3   
6400cd38:	int3   
6400cd39:	int3   
6400cd3a:	int3   
6400cd3b:	int3   
6400cd3c:	int3   
6400cd3d:	int3   
6400cd3e:	int3   
6400cd3f:	int3   
6400cd40:	push   ebp
6400cd41:	mov    ebp,esp
6400cd43:	and    esp,0xfffffff8
6400cd46:	push   0xffffffff
6400cd48:	push   0x6402355e
6400cd4d:	mov    eax,fs:0x0
6400cd53:	push   eax
6400cd54:	push   ecx
6400cd55:	push   ebx
6400cd56:	push   esi
6400cd57:	mov    eax,ds:0x6402d09c
6400cd5c:	xor    eax,esp
6400cd5e:	push   eax
6400cd5f:	lea    eax,[esp+0x10]
6400cd63:	mov    fs:0x0,eax
6400cd69:	mov    ebx,0x1
6400cd6e:	test   BYTE PTR ds:0x64031478,bl
6400cd74:	jne    0x6400cdfe
6400cd7a:	or     DWORD PTR ds:0x64031478,ebx
6400cd80:	push   0x640289b4
6400cd85:	push   0xb
6400cd87:	push   0x640289dc
6400cd8c:	mov    DWORD PTR [esp+0x24],0x0
6400cd94:	call   0x64005750
6400cd99:	push   0x640289e8
6400cd9e:	push   0x8
6400cda0:	push   0x64028944
6400cda5:	mov    esi,eax
6400cda7:	call   0x64005a10
6400cdac:	add    esp,0x18
6400cdaf:	push   eax
6400cdb0:	call   DWORD PTR ds:0x64025018
6400cdb6:	add    DWORD PTR ds:0x64031270,ebx
6400cdbc:	test   eax,eax
6400cdbe:	je     0x6400cde5
6400cdc0:	push   esi
6400cdc1:	push   eax
6400cdc2:	call   DWORD PTR ds:0x64025014
6400cdc8:	add    DWORD PTR ds:0x64031274,ebx
6400cdce:	mov    ds:0x64031474,eax
6400cdd3:	mov    ecx,DWORD PTR [esp+0x10]
6400cdd7:	mov    DWORD PTR fs:0x0,ecx
6400cdde:	pop    ecx
6400cddf:	pop    esi
6400cde0:	pop    ebx
6400cde1:	mov    esp,ebp
6400cde3:	pop    ebp
6400cde4:	ret    
6400cde5:	xor    eax,eax
6400cde7:	mov    ds:0x64031474,eax
6400cdec:	mov    ecx,DWORD PTR [esp+0x10]
6400cdf0:	mov    DWORD PTR fs:0x0,ecx
6400cdf7:	pop    ecx
6400cdf8:	pop    esi
6400cdf9:	pop    ebx
6400cdfa:	mov    esp,ebp
6400cdfc:	pop    ebp
6400cdfd:	ret    
6400cdfe:	mov    eax,ds:0x64031474
6400ce03:	mov    ecx,DWORD PTR [esp+0x10]
6400ce07:	mov    DWORD PTR fs:0x0,ecx
6400ce0e:	pop    ecx
6400ce0f:	pop    esi
6400ce10:	pop    ebx
6400ce11:	mov    esp,ebp
6400ce13:	pop    ebp
6400ce14:	ret    
6400ce15:	int3   
6400ce16:	int3   
6400ce17:	int3   
6400ce18:	int3   
6400ce19:	int3   
6400ce1a:	int3   
6400ce1b:	int3   
6400ce1c:	int3   
6400ce1d:	int3   
6400ce1e:	int3   
6400ce1f:	int3   
6400ce20:	push   ebp
6400ce21:	mov    ebp,esp
6400ce23:	and    esp,0xfffffff8
6400ce26:	push   0xffffffff
6400ce28:	push   0x6402352e
6400ce2d:	mov    eax,fs:0x0
6400ce33:	push   eax
6400ce34:	push   ecx
6400ce35:	push   ebx
6400ce36:	push   esi
6400ce37:	mov    eax,ds:0x6402d09c
6400ce3c:	xor    eax,esp
6400ce3e:	push   eax
6400ce3f:	lea    eax,[esp+0x10]
6400ce43:	mov    fs:0x0,eax
6400ce49:	mov    ebx,0x1
6400ce4e:	test   BYTE PTR ds:0x64031470,bl
6400ce54:	jne    0x6400cede
6400ce5a:	or     DWORD PTR ds:0x64031470,ebx
6400ce60:	push   0x64028a20
6400ce65:	push   0xb
6400ce67:	push   0x64028a5c
6400ce6c:	mov    DWORD PTR [esp+0x24],0x0
6400ce74:	call   0x64005750
6400ce79:	push   0x64028a68
6400ce7e:	push   0x8
6400ce80:	push   0x64028944
6400ce85:	mov    esi,eax
6400ce87:	call   0x64005a10
6400ce8c:	add    esp,0x18
6400ce8f:	push   eax
6400ce90:	call   DWORD PTR ds:0x64025018
6400ce96:	add    DWORD PTR ds:0x64031270,ebx
6400ce9c:	test   eax,eax
6400ce9e:	je     0x6400cec5
6400cea0:	push   esi
6400cea1:	push   eax
6400cea2:	call   DWORD PTR ds:0x64025014
6400cea8:	add    DWORD PTR ds:0x64031274,ebx
6400ceae:	mov    ds:0x6403146c,eax
6400ceb3:	mov    ecx,DWORD PTR [esp+0x10]
6400ceb7:	mov    DWORD PTR fs:0x0,ecx
6400cebe:	pop    ecx
6400cebf:	pop    esi
6400cec0:	pop    ebx
6400cec1:	mov    esp,ebp
6400cec3:	pop    ebp
6400cec4:	ret    
6400cec5:	xor    eax,eax
6400cec7:	mov    ds:0x6403146c,eax
6400cecc:	mov    ecx,DWORD PTR [esp+0x10]
6400ced0:	mov    DWORD PTR fs:0x0,ecx
6400ced7:	pop    ecx
6400ced8:	pop    esi
6400ced9:	pop    ebx
6400ceda:	mov    esp,ebp
6400cedc:	pop    ebp
6400cedd:	ret    
6400cede:	mov    eax,ds:0x6403146c
6400cee3:	mov    ecx,DWORD PTR [esp+0x10]
6400cee7:	mov    DWORD PTR fs:0x0,ecx
6400ceee:	pop    ecx
6400ceef:	pop    esi
6400cef0:	pop    ebx
6400cef1:	mov    esp,ebp
6400cef3:	pop    ebp
6400cef4:	ret    
6400cef5:	int3   
6400cef6:	int3   
6400cef7:	int3   
6400cef8:	int3   
6400cef9:	int3   
6400cefa:	int3   
6400cefb:	int3   
6400cefc:	int3   
6400cefd:	int3   
6400cefe:	int3   
6400ceff:	int3   
6400cf00:	push   ebp
6400cf01:	mov    ebp,esp
6400cf03:	and    esp,0xfffffff8
6400cf06:	push   0xffffffff
6400cf08:	push   0x640234fe
6400cf0d:	mov    eax,fs:0x0
6400cf13:	push   eax
6400cf14:	push   ecx
6400cf15:	push   ebx
6400cf16:	push   esi
6400cf17:	mov    eax,ds:0x6402d09c
6400cf1c:	xor    eax,esp
6400cf1e:	push   eax
6400cf1f:	lea    eax,[esp+0x10]
6400cf23:	mov    fs:0x0,eax
6400cf29:	mov    ebx,0x1
6400cf2e:	test   BYTE PTR ds:0x64031468,bl
6400cf34:	jne    0x6400cfbe
6400cf3a:	or     DWORD PTR ds:0x64031468,ebx
6400cf40:	push   0x64028a94
6400cf45:	push   0xb
6400cf47:	push   0x64028ac8
6400cf4c:	mov    DWORD PTR [esp+0x24],0x0
6400cf54:	call   0x64005750
6400cf59:	push   0x64028ad4
6400cf5e:	push   0x8
6400cf60:	push   0x64028944
6400cf65:	mov    esi,eax
6400cf67:	call   0x64005a10
6400cf6c:	add    esp,0x18
6400cf6f:	push   eax
6400cf70:	call   DWORD PTR ds:0x64025018
6400cf76:	add    DWORD PTR ds:0x64031270,ebx
6400cf7c:	test   eax,eax
6400cf7e:	je     0x6400cfa5
6400cf80:	push   esi
6400cf81:	push   eax
6400cf82:	call   DWORD PTR ds:0x64025014
6400cf88:	add    DWORD PTR ds:0x64031274,ebx
6400cf8e:	mov    ds:0x64031464,eax
6400cf93:	mov    ecx,DWORD PTR [esp+0x10]
6400cf97:	mov    DWORD PTR fs:0x0,ecx
6400cf9e:	pop    ecx
6400cf9f:	pop    esi
6400cfa0:	pop    ebx
6400cfa1:	mov    esp,ebp
6400cfa3:	pop    ebp
6400cfa4:	ret    
6400cfa5:	xor    eax,eax
6400cfa7:	mov    ds:0x64031464,eax
6400cfac:	mov    ecx,DWORD PTR [esp+0x10]
6400cfb0:	mov    DWORD PTR fs:0x0,ecx
6400cfb7:	pop    ecx
6400cfb8:	pop    esi
6400cfb9:	pop    ebx
6400cfba:	mov    esp,ebp
6400cfbc:	pop    ebp
6400cfbd:	ret    
6400cfbe:	mov    eax,ds:0x64031464
6400cfc3:	mov    ecx,DWORD PTR [esp+0x10]
6400cfc7:	mov    DWORD PTR fs:0x0,ecx
6400cfce:	pop    ecx
6400cfcf:	pop    esi
6400cfd0:	pop    ebx
6400cfd1:	mov    esp,ebp
6400cfd3:	pop    ebp
6400cfd4:	ret    
6400cfd5:	int3   
6400cfd6:	int3   
6400cfd7:	int3   
6400cfd8:	int3   
6400cfd9:	int3   
6400cfda:	int3   
6400cfdb:	int3   
6400cfdc:	int3   
6400cfdd:	int3   
6400cfde:	int3   
6400cfdf:	int3   
6400cfe0:	push   ebp
6400cfe1:	mov    ebp,esp
6400cfe3:	and    esp,0xfffffff8
6400cfe6:	push   0xffffffff
6400cfe8:	push   0x640234ce
6400cfed:	mov    eax,fs:0x0
6400cff3:	push   eax
6400cff4:	push   ecx
6400cff5:	push   ebx
6400cff6:	push   esi
6400cff7:	mov    eax,ds:0x6402d09c
6400cffc:	xor    eax,esp
6400cffe:	push   eax
6400cfff:	lea    eax,[esp+0x10]
6400d003:	mov    fs:0x0,eax
6400d009:	mov    ebx,0x1
6400d00e:	test   BYTE PTR ds:0x64031460,bl
6400d014:	jne    0x6400d09e
6400d01a:	or     DWORD PTR ds:0x64031460,ebx
6400d020:	push   0x64028b04
6400d025:	push   0xc
6400d027:	push   0x64028b3c
6400d02c:	mov    DWORD PTR [esp+0x24],0x0
6400d034:	call   0x64005750
6400d039:	push   0x64028b4c
6400d03e:	push   0x8
6400d040:	push   0x64028944
6400d045:	mov    esi,eax
6400d047:	call   0x64005a10
6400d04c:	add    esp,0x18
6400d04f:	push   eax
6400d050:	call   DWORD PTR ds:0x64025018
6400d056:	add    DWORD PTR ds:0x64031270,ebx
6400d05c:	test   eax,eax
6400d05e:	je     0x6400d085
6400d060:	push   esi
6400d061:	push   eax
6400d062:	call   DWORD PTR ds:0x64025014
6400d068:	add    DWORD PTR ds:0x64031274,ebx
6400d06e:	mov    ds:0x6403145c,eax
6400d073:	mov    ecx,DWORD PTR [esp+0x10]
6400d077:	mov    DWORD PTR fs:0x0,ecx
6400d07e:	pop    ecx
6400d07f:	pop    esi
6400d080:	pop    ebx
6400d081:	mov    esp,ebp
6400d083:	pop    ebp
6400d084:	ret    
6400d085:	xor    eax,eax
6400d087:	mov    ds:0x6403145c,eax
6400d08c:	mov    ecx,DWORD PTR [esp+0x10]
6400d090:	mov    DWORD PTR fs:0x0,ecx
6400d097:	pop    ecx
6400d098:	pop    esi
6400d099:	pop    ebx
6400d09a:	mov    esp,ebp
6400d09c:	pop    ebp
6400d09d:	ret    
6400d09e:	mov    eax,ds:0x6403145c
6400d0a3:	mov    ecx,DWORD PTR [esp+0x10]
6400d0a7:	mov    DWORD PTR fs:0x0,ecx
6400d0ae:	pop    ecx
6400d0af:	pop    esi
6400d0b0:	pop    ebx
6400d0b1:	mov    esp,ebp
6400d0b3:	pop    ebp
6400d0b4:	ret    
6400d0b5:	int3   
6400d0b6:	int3   
6400d0b7:	int3   
6400d0b8:	int3   
6400d0b9:	int3   
6400d0ba:	int3   
6400d0bb:	int3   
6400d0bc:	int3   
6400d0bd:	int3   
6400d0be:	int3   
6400d0bf:	int3   
6400d0c0:	push   ebp
6400d0c1:	mov    ebp,esp
6400d0c3:	and    esp,0xfffffff8
6400d0c6:	push   0xffffffff
6400d0c8:	push   0x6402349e
6400d0cd:	mov    eax,fs:0x0
6400d0d3:	push   eax
6400d0d4:	push   ecx
6400d0d5:	push   ebx
6400d0d6:	push   esi
6400d0d7:	mov    eax,ds:0x6402d09c
6400d0dc:	xor    eax,esp
6400d0de:	push   eax
6400d0df:	lea    eax,[esp+0x10]
6400d0e3:	mov    fs:0x0,eax
6400d0e9:	mov    ebx,0x1
6400d0ee:	test   BYTE PTR ds:0x64031458,bl
6400d0f4:	jne    0x6400d17e
6400d0fa:	or     DWORD PTR ds:0x64031458,ebx
6400d100:	push   0x64028b7c
6400d105:	push   0x10
6400d107:	push   0x64028bbc
6400d10c:	mov    DWORD PTR [esp+0x24],0x0
6400d114:	call   0x64005750
6400d119:	push   0x64028bd0
6400d11e:	push   0x8
6400d120:	push   0x64028944
6400d125:	mov    esi,eax
6400d127:	call   0x64005a10
6400d12c:	add    esp,0x18
6400d12f:	push   eax
6400d130:	call   DWORD PTR ds:0x64025018
6400d136:	add    DWORD PTR ds:0x64031270,ebx
6400d13c:	test   eax,eax
6400d13e:	je     0x6400d165
6400d140:	push   esi
6400d141:	push   eax
6400d142:	call   DWORD PTR ds:0x64025014
6400d148:	add    DWORD PTR ds:0x64031274,ebx
6400d14e:	mov    ds:0x64031454,eax
6400d153:	mov    ecx,DWORD PTR [esp+0x10]
6400d157:	mov    DWORD PTR fs:0x0,ecx
6400d15e:	pop    ecx
6400d15f:	pop    esi
6400d160:	pop    ebx
6400d161:	mov    esp,ebp
6400d163:	pop    ebp
6400d164:	ret    
6400d165:	xor    eax,eax
6400d167:	mov    ds:0x64031454,eax
6400d16c:	mov    ecx,DWORD PTR [esp+0x10]
6400d170:	mov    DWORD PTR fs:0x0,ecx
6400d177:	pop    ecx
6400d178:	pop    esi
6400d179:	pop    ebx
6400d17a:	mov    esp,ebp
6400d17c:	pop    ebp
6400d17d:	ret    
6400d17e:	mov    eax,ds:0x64031454
6400d183:	mov    ecx,DWORD PTR [esp+0x10]
6400d187:	mov    DWORD PTR fs:0x0,ecx
6400d18e:	pop    ecx
6400d18f:	pop    esi
6400d190:	pop    ebx
6400d191:	mov    esp,ebp
6400d193:	pop    ebp
6400d194:	ret    
6400d195:	int3   
6400d196:	int3   
6400d197:	int3   
6400d198:	int3   
6400d199:	int3   
6400d19a:	int3   
6400d19b:	int3   
6400d19c:	int3   
6400d19d:	int3   
6400d19e:	int3   
6400d19f:	int3   
6400d1a0:	push   ebp
6400d1a1:	mov    ebp,esp
6400d1a3:	and    esp,0xfffffff8
6400d1a6:	push   0xffffffff
6400d1a8:	push   0x6402346e
6400d1ad:	mov    eax,fs:0x0
6400d1b3:	push   eax
6400d1b4:	push   ecx
6400d1b5:	push   ebx
6400d1b6:	push   esi
6400d1b7:	mov    eax,ds:0x6402d09c
6400d1bc:	xor    eax,esp
6400d1be:	push   eax
6400d1bf:	lea    eax,[esp+0x10]
6400d1c3:	mov    fs:0x0,eax
6400d1c9:	mov    ebx,0x1
6400d1ce:	test   BYTE PTR ds:0x64031450,bl
6400d1d4:	jne    0x6400d25e
6400d1da:	or     DWORD PTR ds:0x64031450,ebx
6400d1e0:	push   0x64028c10
6400d1e5:	push   0x10
6400d1e7:	push   0x64028c3c
6400d1ec:	mov    DWORD PTR [esp+0x24],0x0
6400d1f4:	call   0x64005750
6400d1f9:	push   0x64028c50
6400d1fe:	push   0x8
6400d200:	push   0x64028944
6400d205:	mov    esi,eax
6400d207:	call   0x64005a10
6400d20c:	add    esp,0x18
6400d20f:	push   eax
6400d210:	call   DWORD PTR ds:0x64025018
6400d216:	add    DWORD PTR ds:0x64031270,ebx
6400d21c:	test   eax,eax
6400d21e:	je     0x6400d245
6400d220:	push   esi
6400d221:	push   eax
6400d222:	call   DWORD PTR ds:0x64025014
6400d228:	add    DWORD PTR ds:0x64031274,ebx
6400d22e:	mov    ds:0x6403144c,eax
6400d233:	mov    ecx,DWORD PTR [esp+0x10]
6400d237:	mov    DWORD PTR fs:0x0,ecx
6400d23e:	pop    ecx
6400d23f:	pop    esi
6400d240:	pop    ebx
6400d241:	mov    esp,ebp
6400d243:	pop    ebp
6400d244:	ret    
6400d245:	xor    eax,eax
6400d247:	mov    ds:0x6403144c,eax
6400d24c:	mov    ecx,DWORD PTR [esp+0x10]
6400d250:	mov    DWORD PTR fs:0x0,ecx
6400d257:	pop    ecx
6400d258:	pop    esi
6400d259:	pop    ebx
6400d25a:	mov    esp,ebp
6400d25c:	pop    ebp
6400d25d:	ret    
6400d25e:	mov    eax,ds:0x6403144c
6400d263:	mov    ecx,DWORD PTR [esp+0x10]
6400d267:	mov    DWORD PTR fs:0x0,ecx
6400d26e:	pop    ecx
6400d26f:	pop    esi
6400d270:	pop    ebx
6400d271:	mov    esp,ebp
6400d273:	pop    ebp
6400d274:	ret    
6400d275:	int3   
6400d276:	int3   
6400d277:	int3   
6400d278:	int3   
6400d279:	int3   
6400d27a:	int3   
6400d27b:	int3   
6400d27c:	int3   
6400d27d:	int3   
6400d27e:	int3   
6400d27f:	int3   
6400d280:	push   ebp
6400d281:	mov    ebp,esp
6400d283:	and    esp,0xfffffff8
6400d286:	push   0xffffffff
6400d288:	push   0x6402343e
6400d28d:	mov    eax,fs:0x0
6400d293:	push   eax
6400d294:	push   ecx
6400d295:	push   ebx
6400d296:	push   esi
6400d297:	mov    eax,ds:0x6402d09c
6400d29c:	xor    eax,esp
6400d29e:	push   eax
6400d29f:	lea    eax,[esp+0x10]
6400d2a3:	mov    fs:0x0,eax
6400d2a9:	mov    ebx,0x1
6400d2ae:	test   BYTE PTR ds:0x64031448,bl
6400d2b4:	jne    0x6400d33e
6400d2ba:	or     DWORD PTR ds:0x64031448,ebx
6400d2c0:	push   0x64028c8c
6400d2c5:	push   0x15
6400d2c7:	push   0x64028cb4
6400d2cc:	mov    DWORD PTR [esp+0x24],0x0
6400d2d4:	call   0x64005750
6400d2d9:	push   0x64028ccc
6400d2de:	push   0x8
6400d2e0:	push   0x64028944
6400d2e5:	mov    esi,eax
6400d2e7:	call   0x64005a10
6400d2ec:	add    esp,0x18
6400d2ef:	push   eax
6400d2f0:	call   DWORD PTR ds:0x64025018
6400d2f6:	add    DWORD PTR ds:0x64031270,ebx
6400d2fc:	test   eax,eax
6400d2fe:	je     0x6400d325
6400d300:	push   esi
6400d301:	push   eax
6400d302:	call   DWORD PTR ds:0x64025014
6400d308:	add    DWORD PTR ds:0x64031274,ebx
6400d30e:	mov    ds:0x64031444,eax
6400d313:	mov    ecx,DWORD PTR [esp+0x10]
6400d317:	mov    DWORD PTR fs:0x0,ecx
6400d31e:	pop    ecx
6400d31f:	pop    esi
6400d320:	pop    ebx
6400d321:	mov    esp,ebp
6400d323:	pop    ebp
6400d324:	ret    
6400d325:	xor    eax,eax
6400d327:	mov    ds:0x64031444,eax
6400d32c:	mov    ecx,DWORD PTR [esp+0x10]
6400d330:	mov    DWORD PTR fs:0x0,ecx
6400d337:	pop    ecx
6400d338:	pop    esi
6400d339:	pop    ebx
6400d33a:	mov    esp,ebp
6400d33c:	pop    ebp
6400d33d:	ret    
6400d33e:	mov    eax,ds:0x64031444
6400d343:	mov    ecx,DWORD PTR [esp+0x10]
6400d347:	mov    DWORD PTR fs:0x0,ecx
6400d34e:	pop    ecx
6400d34f:	pop    esi
6400d350:	pop    ebx
6400d351:	mov    esp,ebp
6400d353:	pop    ebp
6400d354:	ret    
6400d355:	int3   
6400d356:	int3   
6400d357:	int3   
6400d358:	int3   
6400d359:	int3   
6400d35a:	int3   
6400d35b:	int3   
6400d35c:	int3   
6400d35d:	int3   
6400d35e:	int3   
6400d35f:	int3   
6400d360:	push   ebp
6400d361:	mov    ebp,esp
6400d363:	and    esp,0xfffffff8
6400d366:	push   0xffffffff
6400d368:	push   0x6402340e
6400d36d:	mov    eax,fs:0x0
6400d373:	push   eax
6400d374:	push   ecx
6400d375:	push   ebx
6400d376:	push   esi
6400d377:	mov    eax,ds:0x6402d09c
6400d37c:	xor    eax,esp
6400d37e:	push   eax
6400d37f:	lea    eax,[esp+0x10]
6400d383:	mov    fs:0x0,eax
6400d389:	mov    ebx,0x1
6400d38e:	test   BYTE PTR ds:0x64031440,bl
6400d394:	jne    0x6400d41e
6400d39a:	or     DWORD PTR ds:0x64031440,ebx
6400d3a0:	push   0x64028cf4
6400d3a5:	push   0x18
6400d3a7:	push   0x64028d20
6400d3ac:	mov    DWORD PTR [esp+0x24],0x0
6400d3b4:	call   0x64005750
6400d3b9:	push   0x64028d3c
6400d3be:	push   0x8
6400d3c0:	push   0x64028944
6400d3c5:	mov    esi,eax
6400d3c7:	call   0x64005a10
6400d3cc:	add    esp,0x18
6400d3cf:	push   eax
6400d3d0:	call   DWORD PTR ds:0x64025018
6400d3d6:	add    DWORD PTR ds:0x64031270,ebx
6400d3dc:	test   eax,eax
6400d3de:	je     0x6400d405
6400d3e0:	push   esi
6400d3e1:	push   eax
6400d3e2:	call   DWORD PTR ds:0x64025014
6400d3e8:	add    DWORD PTR ds:0x64031274,ebx
6400d3ee:	mov    ds:0x6403143c,eax
6400d3f3:	mov    ecx,DWORD PTR [esp+0x10]
6400d3f7:	mov    DWORD PTR fs:0x0,ecx
6400d3fe:	pop    ecx
6400d3ff:	pop    esi
6400d400:	pop    ebx
6400d401:	mov    esp,ebp
6400d403:	pop    ebp
6400d404:	ret    
6400d405:	xor    eax,eax
6400d407:	mov    ds:0x6403143c,eax
6400d40c:	mov    ecx,DWORD PTR [esp+0x10]
6400d410:	mov    DWORD PTR fs:0x0,ecx
6400d417:	pop    ecx
6400d418:	pop    esi
6400d419:	pop    ebx
6400d41a:	mov    esp,ebp
6400d41c:	pop    ebp
6400d41d:	ret    
6400d41e:	mov    eax,ds:0x6403143c
6400d423:	mov    ecx,DWORD PTR [esp+0x10]
6400d427:	mov    DWORD PTR fs:0x0,ecx
6400d42e:	pop    ecx
6400d42f:	pop    esi
6400d430:	pop    ebx
6400d431:	mov    esp,ebp
6400d433:	pop    ebp
6400d434:	ret    
6400d435:	int3   
6400d436:	int3   
6400d437:	int3   
6400d438:	int3   
6400d439:	int3   
6400d43a:	int3   
6400d43b:	int3   
6400d43c:	int3   
6400d43d:	int3   
6400d43e:	int3   
6400d43f:	int3   
6400d440:	push   ebp
6400d441:	mov    ebp,esp
6400d443:	and    esp,0xfffffff8
6400d446:	push   0xffffffff
6400d448:	push   0x640233de
6400d44d:	mov    eax,fs:0x0
6400d453:	push   eax
6400d454:	push   ecx
6400d455:	push   ebx
6400d456:	push   esi
6400d457:	mov    eax,ds:0x6402d09c
6400d45c:	xor    eax,esp
6400d45e:	push   eax
6400d45f:	lea    eax,[esp+0x10]
6400d463:	mov    fs:0x0,eax
6400d469:	mov    ebx,0x1
6400d46e:	test   BYTE PTR ds:0x64031438,bl
6400d474:	jne    0x6400d4fe
6400d47a:	or     DWORD PTR ds:0x64031438,ebx
6400d480:	push   0x64028d7c
6400d485:	push   0xf
6400d487:	push   0x64028db0
6400d48c:	mov    DWORD PTR [esp+0x24],0x0
6400d494:	call   0x64005750
6400d499:	push   0x64028dc0
6400d49e:	push   0x8
6400d4a0:	push   0x64028944
6400d4a5:	mov    esi,eax
6400d4a7:	call   0x64005a10
6400d4ac:	add    esp,0x18
6400d4af:	push   eax
6400d4b0:	call   DWORD PTR ds:0x64025018
6400d4b6:	add    DWORD PTR ds:0x64031270,ebx
6400d4bc:	test   eax,eax
6400d4be:	je     0x6400d4e5
6400d4c0:	push   esi
6400d4c1:	push   eax
6400d4c2:	call   DWORD PTR ds:0x64025014
6400d4c8:	add    DWORD PTR ds:0x64031274,ebx
6400d4ce:	mov    ds:0x64031434,eax
6400d4d3:	mov    ecx,DWORD PTR [esp+0x10]
6400d4d7:	mov    DWORD PTR fs:0x0,ecx
6400d4de:	pop    ecx
6400d4df:	pop    esi
6400d4e0:	pop    ebx
6400d4e1:	mov    esp,ebp
6400d4e3:	pop    ebp
6400d4e4:	ret    
6400d4e5:	xor    eax,eax
6400d4e7:	mov    ds:0x64031434,eax
6400d4ec:	mov    ecx,DWORD PTR [esp+0x10]
6400d4f0:	mov    DWORD PTR fs:0x0,ecx
6400d4f7:	pop    ecx
6400d4f8:	pop    esi
6400d4f9:	pop    ebx
6400d4fa:	mov    esp,ebp
6400d4fc:	pop    ebp
6400d4fd:	ret    
6400d4fe:	mov    eax,ds:0x64031434
6400d503:	mov    ecx,DWORD PTR [esp+0x10]
6400d507:	mov    DWORD PTR fs:0x0,ecx
6400d50e:	pop    ecx
6400d50f:	pop    esi
6400d510:	pop    ebx
6400d511:	mov    esp,ebp
6400d513:	pop    ebp
6400d514:	ret    
6400d515:	int3   
6400d516:	int3   
6400d517:	int3   
6400d518:	int3   
6400d519:	int3   
6400d51a:	int3   
6400d51b:	int3   
6400d51c:	int3   
6400d51d:	int3   
6400d51e:	int3   
6400d51f:	int3   
6400d520:	push   ebp
6400d521:	mov    ebp,esp
6400d523:	and    esp,0xfffffff8
6400d526:	push   0xffffffff
6400d528:	push   0x640233ae
6400d52d:	mov    eax,fs:0x0
6400d533:	push   eax
6400d534:	push   ecx
6400d535:	push   ebx
6400d536:	push   esi
6400d537:	mov    eax,ds:0x6402d09c
6400d53c:	xor    eax,esp
6400d53e:	push   eax
6400d53f:	lea    eax,[esp+0x10]
6400d543:	mov    fs:0x0,eax
6400d549:	mov    ebx,0x1
6400d54e:	test   BYTE PTR ds:0x64031430,bl
6400d554:	jne    0x6400d5de
6400d55a:	or     DWORD PTR ds:0x64031430,ebx
6400d560:	push   0x64028df4
6400d565:	push   0x14
6400d567:	push   0x64028e2c
6400d56c:	mov    DWORD PTR [esp+0x24],0x0
6400d574:	call   0x64005750
6400d579:	push   0x64028e44
6400d57e:	push   0x8
6400d580:	push   0x64028944
6400d585:	mov    esi,eax
6400d587:	call   0x64005a10
6400d58c:	add    esp,0x18
6400d58f:	push   eax
6400d590:	call   DWORD PTR ds:0x64025018
6400d596:	add    DWORD PTR ds:0x64031270,ebx
6400d59c:	test   eax,eax
6400d59e:	je     0x6400d5c5
6400d5a0:	push   esi
6400d5a1:	push   eax
6400d5a2:	call   DWORD PTR ds:0x64025014
6400d5a8:	add    DWORD PTR ds:0x64031274,ebx
6400d5ae:	mov    ds:0x6403142c,eax
6400d5b3:	mov    ecx,DWORD PTR [esp+0x10]
6400d5b7:	mov    DWORD PTR fs:0x0,ecx
6400d5be:	pop    ecx
6400d5bf:	pop    esi
6400d5c0:	pop    ebx
6400d5c1:	mov    esp,ebp
6400d5c3:	pop    ebp
6400d5c4:	ret    
6400d5c5:	xor    eax,eax
6400d5c7:	mov    ds:0x6403142c,eax
6400d5cc:	mov    ecx,DWORD PTR [esp+0x10]
6400d5d0:	mov    DWORD PTR fs:0x0,ecx
6400d5d7:	pop    ecx
6400d5d8:	pop    esi
6400d5d9:	pop    ebx
6400d5da:	mov    esp,ebp
6400d5dc:	pop    ebp
6400d5dd:	ret    
6400d5de:	mov    eax,ds:0x6403142c
6400d5e3:	mov    ecx,DWORD PTR [esp+0x10]
6400d5e7:	mov    DWORD PTR fs:0x0,ecx
6400d5ee:	pop    ecx
6400d5ef:	pop    esi
6400d5f0:	pop    ebx
6400d5f1:	mov    esp,ebp
6400d5f3:	pop    ebp
6400d5f4:	ret    
6400d5f5:	int3   
6400d5f6:	int3   
6400d5f7:	int3   
6400d5f8:	int3   
6400d5f9:	int3   
6400d5fa:	int3   
6400d5fb:	int3   
6400d5fc:	int3   
6400d5fd:	int3   
6400d5fe:	int3   
6400d5ff:	int3   
6400d600:	push   ebp
6400d601:	mov    ebp,esp
6400d603:	and    esp,0xfffffff8
6400d606:	push   0xffffffff
6400d608:	push   0x6402337e
6400d60d:	mov    eax,fs:0x0
6400d613:	push   eax
6400d614:	push   ecx
6400d615:	push   ebx
6400d616:	push   esi
6400d617:	mov    eax,ds:0x6402d09c
6400d61c:	xor    eax,esp
6400d61e:	push   eax
6400d61f:	lea    eax,[esp+0x10]
6400d623:	mov    fs:0x0,eax
6400d629:	mov    ebx,0x1
6400d62e:	test   BYTE PTR ds:0x64031428,bl
6400d634:	jne    0x6400d6be
6400d63a:	or     DWORD PTR ds:0x64031428,ebx
6400d640:	push   0x64028e68
6400d645:	push   0x14
6400d647:	push   0x64028ea4
6400d64c:	mov    DWORD PTR [esp+0x24],0x0
6400d654:	call   0x64005750
6400d659:	push   0x64028ebc
6400d65e:	push   0x8
6400d660:	push   0x64028944
6400d665:	mov    esi,eax
6400d667:	call   0x64005a10
6400d66c:	add    esp,0x18
6400d66f:	push   eax
6400d670:	call   DWORD PTR ds:0x64025018
6400d676:	add    DWORD PTR ds:0x64031270,ebx
6400d67c:	test   eax,eax
6400d67e:	je     0x6400d6a5
6400d680:	push   esi
6400d681:	push   eax
6400d682:	call   DWORD PTR ds:0x64025014
6400d688:	add    DWORD PTR ds:0x64031274,ebx
6400d68e:	mov    ds:0x64031424,eax
6400d693:	mov    ecx,DWORD PTR [esp+0x10]
6400d697:	mov    DWORD PTR fs:0x0,ecx
6400d69e:	pop    ecx
6400d69f:	pop    esi
6400d6a0:	pop    ebx
6400d6a1:	mov    esp,ebp
6400d6a3:	pop    ebp
6400d6a4:	ret    
6400d6a5:	xor    eax,eax
6400d6a7:	mov    ds:0x64031424,eax
6400d6ac:	mov    ecx,DWORD PTR [esp+0x10]
6400d6b0:	mov    DWORD PTR fs:0x0,ecx
6400d6b7:	pop    ecx
6400d6b8:	pop    esi
6400d6b9:	pop    ebx
6400d6ba:	mov    esp,ebp
6400d6bc:	pop    ebp
6400d6bd:	ret    
6400d6be:	mov    eax,ds:0x64031424
6400d6c3:	mov    ecx,DWORD PTR [esp+0x10]
6400d6c7:	mov    DWORD PTR fs:0x0,ecx
6400d6ce:	pop    ecx
6400d6cf:	pop    esi
6400d6d0:	pop    ebx
6400d6d1:	mov    esp,ebp
6400d6d3:	pop    ebp
6400d6d4:	ret    
6400d6d5:	int3   
6400d6d6:	int3   
6400d6d7:	int3   
6400d6d8:	int3   
6400d6d9:	int3   
6400d6da:	int3   
6400d6db:	int3   
6400d6dc:	int3   
6400d6dd:	int3   
6400d6de:	int3   
6400d6df:	int3   
6400d6e0:	push   ebp
6400d6e1:	mov    ebp,esp
6400d6e3:	and    esp,0xfffffff8
6400d6e6:	push   0xffffffff
6400d6e8:	push   0x6402334e
6400d6ed:	mov    eax,fs:0x0
6400d6f3:	push   eax
6400d6f4:	push   ecx
6400d6f5:	push   ebx
6400d6f6:	push   esi
6400d6f7:	mov    eax,ds:0x6402d09c
6400d6fc:	xor    eax,esp
6400d6fe:	push   eax
6400d6ff:	lea    eax,[esp+0x10]
6400d703:	mov    fs:0x0,eax
6400d709:	mov    ebx,0x1
6400d70e:	test   BYTE PTR ds:0x64031420,bl
6400d714:	jne    0x6400d79e
6400d71a:	or     DWORD PTR ds:0x64031420,ebx
6400d720:	push   0x64028ef0
6400d725:	push   0xf
6400d727:	push   0x64028f1c
6400d72c:	mov    DWORD PTR [esp+0x24],0x0
6400d734:	call   0x64005750
6400d739:	push   0x64028f2c
6400d73e:	push   0x8
6400d740:	push   0x64028944
6400d745:	mov    esi,eax
6400d747:	call   0x64005a10
6400d74c:	add    esp,0x18
6400d74f:	push   eax
6400d750:	call   DWORD PTR ds:0x64025018
6400d756:	add    DWORD PTR ds:0x64031270,ebx
6400d75c:	test   eax,eax
6400d75e:	je     0x6400d785
6400d760:	push   esi
6400d761:	push   eax
6400d762:	call   DWORD PTR ds:0x64025014
6400d768:	add    DWORD PTR ds:0x64031274,ebx
6400d76e:	mov    ds:0x6403141c,eax
6400d773:	mov    ecx,DWORD PTR [esp+0x10]
6400d777:	mov    DWORD PTR fs:0x0,ecx
6400d77e:	pop    ecx
6400d77f:	pop    esi
6400d780:	pop    ebx
6400d781:	mov    esp,ebp
6400d783:	pop    ebp
6400d784:	ret    
6400d785:	xor    eax,eax
6400d787:	mov    ds:0x6403141c,eax
6400d78c:	mov    ecx,DWORD PTR [esp+0x10]
6400d790:	mov    DWORD PTR fs:0x0,ecx
6400d797:	pop    ecx
6400d798:	pop    esi
6400d799:	pop    ebx
6400d79a:	mov    esp,ebp
6400d79c:	pop    ebp
6400d79d:	ret    
6400d79e:	mov    eax,ds:0x6403141c
6400d7a3:	mov    ecx,DWORD PTR [esp+0x10]
6400d7a7:	mov    DWORD PTR fs:0x0,ecx
6400d7ae:	pop    ecx
6400d7af:	pop    esi
6400d7b0:	pop    ebx
6400d7b1:	mov    esp,ebp
6400d7b3:	pop    ebp
6400d7b4:	ret    
6400d7b5:	int3   
6400d7b6:	int3   
6400d7b7:	int3   
6400d7b8:	int3   
6400d7b9:	int3   
6400d7ba:	int3   
6400d7bb:	int3   
6400d7bc:	int3   
6400d7bd:	int3   
6400d7be:	int3   
6400d7bf:	int3   
6400d7c0:	push   ebp
6400d7c1:	mov    ebp,esp
6400d7c3:	and    esp,0xfffffff8
6400d7c6:	push   0xffffffff
6400d7c8:	push   0x6402331e
6400d7cd:	mov    eax,fs:0x0
6400d7d3:	push   eax
6400d7d4:	push   ecx
6400d7d5:	push   ebx
6400d7d6:	push   esi
6400d7d7:	mov    eax,ds:0x6402d09c
6400d7dc:	xor    eax,esp
6400d7de:	push   eax
6400d7df:	lea    eax,[esp+0x10]
6400d7e3:	mov    fs:0x0,eax
6400d7e9:	mov    ebx,0x1
6400d7ee:	test   BYTE PTR ds:0x64031418,bl
6400d7f4:	jne    0x6400d87e
6400d7fa:	or     DWORD PTR ds:0x64031418,ebx
6400d800:	push   0x64028f50
6400d805:	push   0x12
6400d807:	push   0x64028f74
6400d80c:	mov    DWORD PTR [esp+0x24],0x0
6400d814:	call   0x64005750
6400d819:	push   0x64028f88
6400d81e:	push   0x8
6400d820:	push   0x64028944
6400d825:	mov    esi,eax
6400d827:	call   0x64005a10
6400d82c:	add    esp,0x18
6400d82f:	push   eax
6400d830:	call   DWORD PTR ds:0x64025018
6400d836:	add    DWORD PTR ds:0x64031270,ebx
6400d83c:	test   eax,eax
6400d83e:	je     0x6400d865
6400d840:	push   esi
6400d841:	push   eax
6400d842:	call   DWORD PTR ds:0x64025014
6400d848:	add    DWORD PTR ds:0x64031274,ebx
6400d84e:	mov    ds:0x64031414,eax
6400d853:	mov    ecx,DWORD PTR [esp+0x10]
6400d857:	mov    DWORD PTR fs:0x0,ecx
6400d85e:	pop    ecx
6400d85f:	pop    esi
6400d860:	pop    ebx
6400d861:	mov    esp,ebp
6400d863:	pop    ebp
6400d864:	ret    
6400d865:	xor    eax,eax
6400d867:	mov    ds:0x64031414,eax
6400d86c:	mov    ecx,DWORD PTR [esp+0x10]
6400d870:	mov    DWORD PTR fs:0x0,ecx
6400d877:	pop    ecx
6400d878:	pop    esi
6400d879:	pop    ebx
6400d87a:	mov    esp,ebp
6400d87c:	pop    ebp
6400d87d:	ret    
6400d87e:	mov    eax,ds:0x64031414
6400d883:	mov    ecx,DWORD PTR [esp+0x10]
6400d887:	mov    DWORD PTR fs:0x0,ecx
6400d88e:	pop    ecx
6400d88f:	pop    esi
6400d890:	pop    ebx
6400d891:	mov    esp,ebp
6400d893:	pop    ebp
6400d894:	ret    
6400d895:	int3   
6400d896:	int3   
6400d897:	int3   
6400d898:	int3   
6400d899:	int3   
6400d89a:	int3   
6400d89b:	int3   
6400d89c:	int3   
6400d89d:	int3   
6400d89e:	int3   
6400d89f:	int3   
6400d8a0:	push   ebp
6400d8a1:	mov    ebp,esp
6400d8a3:	and    esp,0xfffffff8
6400d8a6:	push   0xffffffff
6400d8a8:	push   0x640232ee
6400d8ad:	mov    eax,fs:0x0
6400d8b3:	push   eax
6400d8b4:	push   ecx
6400d8b5:	push   ebx
6400d8b6:	push   esi
6400d8b7:	mov    eax,ds:0x6402d09c
6400d8bc:	xor    eax,esp
6400d8be:	push   eax
6400d8bf:	lea    eax,[esp+0x10]
6400d8c3:	mov    fs:0x0,eax
6400d8c9:	mov    ebx,0x1
6400d8ce:	test   BYTE PTR ds:0x64031410,bl
6400d8d4:	jne    0x6400d95e
6400d8da:	or     DWORD PTR ds:0x64031410,ebx
6400d8e0:	push   0x64028fb8
6400d8e5:	push   0x11
6400d8e7:	push   0x64028fec
6400d8ec:	mov    DWORD PTR [esp+0x24],0x0
6400d8f4:	call   0x64005750
6400d8f9:	push   0x64029000
6400d8fe:	push   0x8
6400d900:	push   0x64028944
6400d905:	mov    esi,eax
6400d907:	call   0x64005a10
6400d90c:	add    esp,0x18
6400d90f:	push   eax
6400d910:	call   DWORD PTR ds:0x64025018
6400d916:	add    DWORD PTR ds:0x64031270,ebx
6400d91c:	test   eax,eax
6400d91e:	je     0x6400d945
6400d920:	push   esi
6400d921:	push   eax
6400d922:	call   DWORD PTR ds:0x64025014
6400d928:	add    DWORD PTR ds:0x64031274,ebx
6400d92e:	mov    ds:0x6403140c,eax
6400d933:	mov    ecx,DWORD PTR [esp+0x10]
6400d937:	mov    DWORD PTR fs:0x0,ecx
6400d93e:	pop    ecx
6400d93f:	pop    esi
6400d940:	pop    ebx
6400d941:	mov    esp,ebp
6400d943:	pop    ebp
6400d944:	ret    
6400d945:	xor    eax,eax
6400d947:	mov    ds:0x6403140c,eax
6400d94c:	mov    ecx,DWORD PTR [esp+0x10]
6400d950:	mov    DWORD PTR fs:0x0,ecx
6400d957:	pop    ecx
6400d958:	pop    esi
6400d959:	pop    ebx
6400d95a:	mov    esp,ebp
6400d95c:	pop    ebp
6400d95d:	ret    
6400d95e:	mov    eax,ds:0x6403140c
6400d963:	mov    ecx,DWORD PTR [esp+0x10]
6400d967:	mov    DWORD PTR fs:0x0,ecx
6400d96e:	pop    ecx
6400d96f:	pop    esi
6400d970:	pop    ebx
6400d971:	mov    esp,ebp
6400d973:	pop    ebp
6400d974:	ret    
6400d975:	int3   
6400d976:	int3   
6400d977:	int3   
6400d978:	int3   
6400d979:	int3   
6400d97a:	int3   
6400d97b:	int3   
6400d97c:	int3   
6400d97d:	int3   
6400d97e:	int3   
6400d97f:	int3   
6400d980:	push   ebp
6400d981:	mov    ebp,esp
6400d983:	and    esp,0xfffffff8
6400d986:	push   0xffffffff
6400d988:	push   0x640232be
6400d98d:	mov    eax,fs:0x0
6400d993:	push   eax
6400d994:	push   ecx
6400d995:	push   ebx
6400d996:	push   esi
6400d997:	mov    eax,ds:0x6402d09c
6400d99c:	xor    eax,esp
6400d99e:	push   eax
6400d99f:	lea    eax,[esp+0x10]
6400d9a3:	mov    fs:0x0,eax
6400d9a9:	mov    ebx,0x1
6400d9ae:	test   BYTE PTR ds:0x64031408,bl
6400d9b4:	jne    0x6400da3e
6400d9ba:	or     DWORD PTR ds:0x64031408,ebx
6400d9c0:	push   0x64029034
6400d9c5:	push   0x17
6400d9c7:	push   0x64029060
6400d9cc:	mov    DWORD PTR [esp+0x24],0x0
6400d9d4:	call   0x64005750
6400d9d9:	push   0x64029078
6400d9de:	push   0x8
6400d9e0:	push   0x640290b0
6400d9e5:	mov    esi,eax
6400d9e7:	call   0x64005a10
6400d9ec:	add    esp,0x18
6400d9ef:	push   eax
6400d9f0:	call   DWORD PTR ds:0x64025018
6400d9f6:	add    DWORD PTR ds:0x64031270,ebx
6400d9fc:	test   eax,eax
6400d9fe:	je     0x6400da25
6400da00:	push   esi
6400da01:	push   eax
6400da02:	call   DWORD PTR ds:0x64025014
6400da08:	add    DWORD PTR ds:0x64031274,ebx
6400da0e:	mov    ds:0x64031404,eax
6400da13:	mov    ecx,DWORD PTR [esp+0x10]
6400da17:	mov    DWORD PTR fs:0x0,ecx
6400da1e:	pop    ecx
6400da1f:	pop    esi
6400da20:	pop    ebx
6400da21:	mov    esp,ebp
6400da23:	pop    ebp
6400da24:	ret    
6400da25:	xor    eax,eax
6400da27:	mov    ds:0x64031404,eax
6400da2c:	mov    ecx,DWORD PTR [esp+0x10]
6400da30:	mov    DWORD PTR fs:0x0,ecx
6400da37:	pop    ecx
6400da38:	pop    esi
6400da39:	pop    ebx
6400da3a:	mov    esp,ebp
6400da3c:	pop    ebp
6400da3d:	ret    
6400da3e:	mov    eax,ds:0x64031404
6400da43:	mov    ecx,DWORD PTR [esp+0x10]
6400da47:	mov    DWORD PTR fs:0x0,ecx
6400da4e:	pop    ecx
6400da4f:	pop    esi
6400da50:	pop    ebx
6400da51:	mov    esp,ebp
6400da53:	pop    ebp
6400da54:	ret    
6400da55:	int3   
6400da56:	int3   
6400da57:	int3   
6400da58:	int3   
6400da59:	int3   
6400da5a:	int3   
6400da5b:	int3   
6400da5c:	int3   
6400da5d:	int3   
6400da5e:	int3   
6400da5f:	int3   
6400da60:	push   ebp
6400da61:	mov    ebp,esp
6400da63:	and    esp,0xfffffff8
6400da66:	push   0xffffffff
6400da68:	push   0x6402328e
6400da6d:	mov    eax,fs:0x0
6400da73:	push   eax
6400da74:	push   ecx
6400da75:	push   ebx
6400da76:	push   esi
6400da77:	mov    eax,ds:0x6402d09c
6400da7c:	xor    eax,esp
6400da7e:	push   eax
6400da7f:	lea    eax,[esp+0x10]
6400da83:	mov    fs:0x0,eax
6400da89:	mov    ebx,0x1
6400da8e:	test   BYTE PTR ds:0x64031400,bl
6400da94:	jne    0x6400db1e
6400da9a:	or     DWORD PTR ds:0x64031400,ebx
6400daa0:	push   0x640290c4
6400daa5:	push   0x19
6400daa7:	push   0x640290ec
6400daac:	mov    DWORD PTR [esp+0x24],0x0
6400dab4:	call   0x64005750
6400dab9:	push   0x64029108
6400dabe:	push   0x7
6400dac0:	push   0x64029148
6400dac5:	mov    esi,eax
6400dac7:	call   0x64005a10
6400dacc:	add    esp,0x18
6400dacf:	push   eax
6400dad0:	call   DWORD PTR ds:0x64025018
6400dad6:	add    DWORD PTR ds:0x64031270,ebx
6400dadc:	test   eax,eax
6400dade:	je     0x6400db05
6400dae0:	push   esi
6400dae1:	push   eax
6400dae2:	call   DWORD PTR ds:0x64025014
6400dae8:	add    DWORD PTR ds:0x64031274,ebx
6400daee:	mov    ds:0x640313fc,eax
6400daf3:	mov    ecx,DWORD PTR [esp+0x10]
6400daf7:	mov    DWORD PTR fs:0x0,ecx
6400dafe:	pop    ecx
6400daff:	pop    esi
6400db00:	pop    ebx
6400db01:	mov    esp,ebp
6400db03:	pop    ebp
6400db04:	ret    
6400db05:	xor    eax,eax
6400db07:	mov    ds:0x640313fc,eax
6400db0c:	mov    ecx,DWORD PTR [esp+0x10]
6400db10:	mov    DWORD PTR fs:0x0,ecx
6400db17:	pop    ecx
6400db18:	pop    esi
6400db19:	pop    ebx
6400db1a:	mov    esp,ebp
6400db1c:	pop    ebp
6400db1d:	ret    
6400db1e:	mov    eax,ds:0x640313fc
6400db23:	mov    ecx,DWORD PTR [esp+0x10]
6400db27:	mov    DWORD PTR fs:0x0,ecx
6400db2e:	pop    ecx
6400db2f:	pop    esi
6400db30:	pop    ebx
6400db31:	mov    esp,ebp
6400db33:	pop    ebp
6400db34:	ret    
6400db35:	int3   
6400db36:	int3   
6400db37:	int3   
6400db38:	int3   
6400db39:	int3   
6400db3a:	int3   
6400db3b:	int3   
6400db3c:	int3   
6400db3d:	int3   
6400db3e:	int3   
6400db3f:	int3   
6400db40:	push   ebp
6400db41:	mov    ebp,esp
6400db43:	and    esp,0xfffffff8
6400db46:	push   0xffffffff
6400db48:	push   0x6402325e
6400db4d:	mov    eax,fs:0x0
6400db53:	push   eax
6400db54:	push   ecx
6400db55:	push   ebx
6400db56:	push   esi
6400db57:	mov    eax,ds:0x6402d09c
6400db5c:	xor    eax,esp
6400db5e:	push   eax
6400db5f:	lea    eax,[esp+0x10]
6400db63:	mov    fs:0x0,eax
6400db69:	mov    ebx,0x1
6400db6e:	test   BYTE PTR ds:0x640313f8,bl
6400db74:	jne    0x6400dbfe
6400db7a:	or     DWORD PTR ds:0x640313f8,ebx
6400db80:	push   0x64029158
6400db85:	push   0x1d
6400db87:	push   0x64029184
6400db8c:	mov    DWORD PTR [esp+0x24],0x0
6400db94:	call   0x64005750
6400db99:	push   0x640291a4
6400db9e:	push   0x8
6400dba0:	push   0x640291e0
6400dba5:	mov    esi,eax
6400dba7:	call   0x64005a10
6400dbac:	add    esp,0x18
6400dbaf:	push   eax
6400dbb0:	call   DWORD PTR ds:0x64025018
6400dbb6:	add    DWORD PTR ds:0x64031270,ebx
6400dbbc:	test   eax,eax
6400dbbe:	je     0x6400dbe5
6400dbc0:	push   esi
6400dbc1:	push   eax
6400dbc2:	call   DWORD PTR ds:0x64025014
6400dbc8:	add    DWORD PTR ds:0x64031274,ebx
6400dbce:	mov    ds:0x640313f4,eax
6400dbd3:	mov    ecx,DWORD PTR [esp+0x10]
6400dbd7:	mov    DWORD PTR fs:0x0,ecx
6400dbde:	pop    ecx
6400dbdf:	pop    esi
6400dbe0:	pop    ebx
6400dbe1:	mov    esp,ebp
6400dbe3:	pop    ebp
6400dbe4:	ret    
6400dbe5:	xor    eax,eax
6400dbe7:	mov    ds:0x640313f4,eax
6400dbec:	mov    ecx,DWORD PTR [esp+0x10]
6400dbf0:	mov    DWORD PTR fs:0x0,ecx
6400dbf7:	pop    ecx
6400dbf8:	pop    esi
6400dbf9:	pop    ebx
6400dbfa:	mov    esp,ebp
6400dbfc:	pop    ebp
6400dbfd:	ret    
6400dbfe:	mov    eax,ds:0x640313f4
6400dc03:	mov    ecx,DWORD PTR [esp+0x10]
6400dc07:	mov    DWORD PTR fs:0x0,ecx
6400dc0e:	pop    ecx
6400dc0f:	pop    esi
6400dc10:	pop    ebx
6400dc11:	mov    esp,ebp
6400dc13:	pop    ebp
6400dc14:	ret    
6400dc15:	int3   
6400dc16:	int3   
6400dc17:	int3   
6400dc18:	int3   
6400dc19:	int3   
6400dc1a:	int3   
6400dc1b:	int3   
6400dc1c:	int3   
6400dc1d:	int3   
6400dc1e:	int3   
6400dc1f:	int3   
6400dc20:	push   ebp
6400dc21:	mov    ebp,esp
6400dc23:	and    esp,0xfffffff8
6400dc26:	push   0xffffffff
6400dc28:	push   0x6402322e
6400dc2d:	mov    eax,fs:0x0
6400dc33:	push   eax
6400dc34:	push   ecx
6400dc35:	push   ebx
6400dc36:	push   esi
6400dc37:	mov    eax,ds:0x6402d09c
6400dc3c:	xor    eax,esp
6400dc3e:	push   eax
6400dc3f:	lea    eax,[esp+0x10]
6400dc43:	mov    fs:0x0,eax
6400dc49:	mov    ebx,0x1
6400dc4e:	test   BYTE PTR ds:0x640313f0,bl
6400dc54:	jne    0x6400dcde
6400dc5a:	or     DWORD PTR ds:0x640313f0,ebx
6400dc60:	push   0x640291f4
6400dc65:	push   0x15
6400dc67:	push   0x64029224
6400dc6c:	mov    DWORD PTR [esp+0x24],0x0
6400dc74:	call   0x64005750
6400dc79:	push   0x6402923c
6400dc7e:	push   0x8
6400dc80:	push   0x640291e0
6400dc85:	mov    esi,eax
6400dc87:	call   0x64005a10
6400dc8c:	add    esp,0x18
6400dc8f:	push   eax
6400dc90:	call   DWORD PTR ds:0x64025018
6400dc96:	add    DWORD PTR ds:0x64031270,ebx
6400dc9c:	test   eax,eax
6400dc9e:	je     0x6400dcc5
6400dca0:	push   esi
6400dca1:	push   eax
6400dca2:	call   DWORD PTR ds:0x64025014
6400dca8:	add    DWORD PTR ds:0x64031274,ebx
6400dcae:	mov    ds:0x640313ec,eax
6400dcb3:	mov    ecx,DWORD PTR [esp+0x10]
6400dcb7:	mov    DWORD PTR fs:0x0,ecx
6400dcbe:	pop    ecx
6400dcbf:	pop    esi
6400dcc0:	pop    ebx
6400dcc1:	mov    esp,ebp
6400dcc3:	pop    ebp
6400dcc4:	ret    
6400dcc5:	xor    eax,eax
6400dcc7:	mov    ds:0x640313ec,eax
6400dccc:	mov    ecx,DWORD PTR [esp+0x10]
6400dcd0:	mov    DWORD PTR fs:0x0,ecx
6400dcd7:	pop    ecx
6400dcd8:	pop    esi
6400dcd9:	pop    ebx
6400dcda:	mov    esp,ebp
6400dcdc:	pop    ebp
6400dcdd:	ret    
6400dcde:	mov    eax,ds:0x640313ec
6400dce3:	mov    ecx,DWORD PTR [esp+0x10]
6400dce7:	mov    DWORD PTR fs:0x0,ecx
6400dcee:	pop    ecx
6400dcef:	pop    esi
6400dcf0:	pop    ebx
6400dcf1:	mov    esp,ebp
6400dcf3:	pop    ebp
6400dcf4:	ret    
6400dcf5:	int3   
6400dcf6:	int3   
6400dcf7:	int3   
6400dcf8:	int3   
6400dcf9:	int3   
6400dcfa:	int3   
6400dcfb:	int3   
6400dcfc:	int3   
6400dcfd:	int3   
6400dcfe:	int3   
6400dcff:	int3   
6400dd00:	push   ebp
6400dd01:	mov    ebp,esp
6400dd03:	and    esp,0xfffffff8
6400dd06:	push   0xffffffff
6400dd08:	push   0x640231fe
6400dd0d:	mov    eax,fs:0x0
6400dd13:	push   eax
6400dd14:	push   ecx
6400dd15:	push   ebx
6400dd16:	push   esi
6400dd17:	mov    eax,ds:0x6402d09c
6400dd1c:	xor    eax,esp
6400dd1e:	push   eax
6400dd1f:	lea    eax,[esp+0x10]
6400dd23:	mov    fs:0x0,eax
6400dd29:	mov    ebx,0x1
6400dd2e:	test   BYTE PTR ds:0x640313e8,bl
6400dd34:	jne    0x6400ddbe
6400dd3a:	or     DWORD PTR ds:0x640313e8,ebx
6400dd40:	push   0x64029260
6400dd45:	push   0x15
6400dd47:	push   0x64029288
6400dd4c:	mov    DWORD PTR [esp+0x24],0x0
6400dd54:	call   0x64005750
6400dd59:	push   0x640292a0
6400dd5e:	push   0x8
6400dd60:	push   0x640291e0
6400dd65:	mov    esi,eax
6400dd67:	call   0x64005a10
6400dd6c:	add    esp,0x18
6400dd6f:	push   eax
6400dd70:	call   DWORD PTR ds:0x64025018
6400dd76:	add    DWORD PTR ds:0x64031270,ebx
6400dd7c:	test   eax,eax
6400dd7e:	je     0x6400dda5
6400dd80:	push   esi
6400dd81:	push   eax
6400dd82:	call   DWORD PTR ds:0x64025014
6400dd88:	add    DWORD PTR ds:0x64031274,ebx
6400dd8e:	mov    ds:0x640313e4,eax
6400dd93:	mov    ecx,DWORD PTR [esp+0x10]
6400dd97:	mov    DWORD PTR fs:0x0,ecx
6400dd9e:	pop    ecx
6400dd9f:	pop    esi
6400dda0:	pop    ebx
6400dda1:	mov    esp,ebp
6400dda3:	pop    ebp
6400dda4:	ret    
6400dda5:	xor    eax,eax
6400dda7:	mov    ds:0x640313e4,eax
6400ddac:	mov    ecx,DWORD PTR [esp+0x10]
6400ddb0:	mov    DWORD PTR fs:0x0,ecx
6400ddb7:	pop    ecx
6400ddb8:	pop    esi
6400ddb9:	pop    ebx
6400ddba:	mov    esp,ebp
6400ddbc:	pop    ebp
6400ddbd:	ret    
6400ddbe:	mov    eax,ds:0x640313e4
6400ddc3:	mov    ecx,DWORD PTR [esp+0x10]
6400ddc7:	mov    DWORD PTR fs:0x0,ecx
6400ddce:	pop    ecx
6400ddcf:	pop    esi
6400ddd0:	pop    ebx
6400ddd1:	mov    esp,ebp
6400ddd3:	pop    ebp
6400ddd4:	ret    
6400ddd5:	int3   
6400ddd6:	int3   
6400ddd7:	int3   
6400ddd8:	int3   
6400ddd9:	int3   
6400ddda:	int3   
6400dddb:	int3   
6400dddc:	int3   
6400dddd:	int3   
6400ddde:	int3   
6400dddf:	int3   
6400dde0:	push   ebp
6400dde1:	mov    ebp,esp
6400dde3:	and    esp,0xfffffff8
6400dde6:	push   0xffffffff
6400dde8:	push   0x640231ce
6400dded:	mov    eax,fs:0x0
6400ddf3:	push   eax
6400ddf4:	push   ecx
6400ddf5:	push   ebx
6400ddf6:	push   esi
6400ddf7:	mov    eax,ds:0x6402d09c
6400ddfc:	xor    eax,esp
6400ddfe:	push   eax
6400ddff:	lea    eax,[esp+0x10]
6400de03:	mov    fs:0x0,eax
6400de09:	mov    ebx,0x1
6400de0e:	test   BYTE PTR ds:0x640313e0,bl
6400de14:	jne    0x6400de9e
6400de1a:	or     DWORD PTR ds:0x640313e0,ebx
6400de20:	push   0x640292cc
6400de25:	push   0x34
6400de27:	push   0x640292f4
6400de2c:	mov    DWORD PTR [esp+0x24],0x0
6400de34:	call   0x64005750
6400de39:	push   0x6402932c
6400de3e:	push   0x8
6400de40:	push   0x640291e0
6400de45:	mov    esi,eax
6400de47:	call   0x64005a10
6400de4c:	add    esp,0x18
6400de4f:	push   eax
6400de50:	call   DWORD PTR ds:0x64025018
6400de56:	add    DWORD PTR ds:0x64031270,ebx
6400de5c:	test   eax,eax
6400de5e:	je     0x6400de85
6400de60:	push   esi
6400de61:	push   eax
6400de62:	call   DWORD PTR ds:0x64025014
6400de68:	add    DWORD PTR ds:0x64031274,ebx
6400de6e:	mov    ds:0x640313dc,eax
6400de73:	mov    ecx,DWORD PTR [esp+0x10]
6400de77:	mov    DWORD PTR fs:0x0,ecx
6400de7e:	pop    ecx
6400de7f:	pop    esi
6400de80:	pop    ebx
6400de81:	mov    esp,ebp
6400de83:	pop    ebp
6400de84:	ret    
6400de85:	xor    eax,eax
6400de87:	mov    ds:0x640313dc,eax
6400de8c:	mov    ecx,DWORD PTR [esp+0x10]
6400de90:	mov    DWORD PTR fs:0x0,ecx
6400de97:	pop    ecx
6400de98:	pop    esi
6400de99:	pop    ebx
6400de9a:	mov    esp,ebp
6400de9c:	pop    ebp
6400de9d:	ret    
6400de9e:	mov    eax,ds:0x640313dc
6400dea3:	mov    ecx,DWORD PTR [esp+0x10]
6400dea7:	mov    DWORD PTR fs:0x0,ecx
6400deae:	pop    ecx
6400deaf:	pop    esi
6400deb0:	pop    ebx
6400deb1:	mov    esp,ebp
6400deb3:	pop    ebp
6400deb4:	ret    
6400deb5:	int3   
6400deb6:	int3   
6400deb7:	int3   
6400deb8:	int3   
6400deb9:	int3   
6400deba:	int3   
6400debb:	int3   
6400debc:	int3   
6400debd:	int3   
6400debe:	int3   
6400debf:	int3   
6400dec0:	push   ebp
6400dec1:	mov    ebp,esp
6400dec3:	and    esp,0xfffffff8
6400dec6:	push   0xffffffff
6400dec8:	push   0x6402319e
6400decd:	mov    eax,fs:0x0
6400ded3:	push   eax
6400ded4:	push   ecx
6400ded5:	push   ebx
6400ded6:	push   esi
6400ded7:	mov    eax,ds:0x6402d09c
6400dedc:	xor    eax,esp
6400dede:	push   eax
6400dedf:	lea    eax,[esp+0x10]
6400dee3:	mov    fs:0x0,eax
6400dee9:	mov    ebx,0x1
6400deee:	test   BYTE PTR ds:0x640313d8,bl
6400def4:	jne    0x6400df7e
6400defa:	or     DWORD PTR ds:0x640313d8,ebx
6400df00:	push   0x6402935c
6400df05:	push   0xb
6400df07:	push   0x6402939c
6400df0c:	mov    DWORD PTR [esp+0x24],0x0
6400df14:	call   0x64005750
6400df19:	push   0x640293a8
6400df1e:	push   0x8
6400df20:	push   0x640291e0
6400df25:	mov    esi,eax
6400df27:	call   0x64005a10
6400df2c:	add    esp,0x18
6400df2f:	push   eax
6400df30:	call   DWORD PTR ds:0x64025018
6400df36:	add    DWORD PTR ds:0x64031270,ebx
6400df3c:	test   eax,eax
6400df3e:	je     0x6400df65
6400df40:	push   esi
6400df41:	push   eax
6400df42:	call   DWORD PTR ds:0x64025014
6400df48:	add    DWORD PTR ds:0x64031274,ebx
6400df4e:	mov    ds:0x640313d4,eax
6400df53:	mov    ecx,DWORD PTR [esp+0x10]
6400df57:	mov    DWORD PTR fs:0x0,ecx
6400df5e:	pop    ecx
6400df5f:	pop    esi
6400df60:	pop    ebx
6400df61:	mov    esp,ebp
6400df63:	pop    ebp
6400df64:	ret    
6400df65:	xor    eax,eax
6400df67:	mov    ds:0x640313d4,eax
6400df6c:	mov    ecx,DWORD PTR [esp+0x10]
6400df70:	mov    DWORD PTR fs:0x0,ecx
6400df77:	pop    ecx
6400df78:	pop    esi
6400df79:	pop    ebx
6400df7a:	mov    esp,ebp
6400df7c:	pop    ebp
6400df7d:	ret    
6400df7e:	mov    eax,ds:0x640313d4
6400df83:	mov    ecx,DWORD PTR [esp+0x10]
6400df87:	mov    DWORD PTR fs:0x0,ecx
6400df8e:	pop    ecx
6400df8f:	pop    esi
6400df90:	pop    ebx
6400df91:	mov    esp,ebp
6400df93:	pop    ebp
6400df94:	ret    
6400df95:	int3   
6400df96:	int3   
6400df97:	int3   
6400df98:	int3   
6400df99:	int3   
6400df9a:	int3   
6400df9b:	int3   
6400df9c:	int3   
6400df9d:	int3   
6400df9e:	int3   
6400df9f:	int3   
6400dfa0:	push   ebp
6400dfa1:	mov    ebp,esp
6400dfa3:	and    esp,0xfffffff8
6400dfa6:	push   0xffffffff
6400dfa8:	push   0x6402316e
6400dfad:	mov    eax,fs:0x0
6400dfb3:	push   eax
6400dfb4:	push   ecx
6400dfb5:	push   ebx
6400dfb6:	push   esi
6400dfb7:	mov    eax,ds:0x6402d09c
6400dfbc:	xor    eax,esp
6400dfbe:	push   eax
6400dfbf:	lea    eax,[esp+0x10]
6400dfc3:	mov    fs:0x0,eax
6400dfc9:	mov    ebx,0x1
6400dfce:	test   BYTE PTR ds:0x640313d0,bl
6400dfd4:	jne    0x6400e05e
6400dfda:	or     DWORD PTR ds:0x640313d0,ebx
6400dfe0:	push   0x640293e8
6400dfe5:	push   0xd
6400dfe7:	push   0x6402940c
6400dfec:	mov    DWORD PTR [esp+0x24],0x0
6400dff4:	call   0x64005750
6400dff9:	push   0x6402941c
6400dffe:	push   0x8
6400e000:	push   0x640291e0
6400e005:	mov    esi,eax
6400e007:	call   0x64005a10
6400e00c:	add    esp,0x18
6400e00f:	push   eax
6400e010:	call   DWORD PTR ds:0x64025018
6400e016:	add    DWORD PTR ds:0x64031270,ebx
6400e01c:	test   eax,eax
6400e01e:	je     0x6400e045
6400e020:	push   esi
6400e021:	push   eax
6400e022:	call   DWORD PTR ds:0x64025014
6400e028:	add    DWORD PTR ds:0x64031274,ebx
6400e02e:	mov    ds:0x640313cc,eax
6400e033:	mov    ecx,DWORD PTR [esp+0x10]
6400e037:	mov    DWORD PTR fs:0x0,ecx
6400e03e:	pop    ecx
6400e03f:	pop    esi
6400e040:	pop    ebx
6400e041:	mov    esp,ebp
6400e043:	pop    ebp
6400e044:	ret    
6400e045:	xor    eax,eax
6400e047:	mov    ds:0x640313cc,eax
6400e04c:	mov    ecx,DWORD PTR [esp+0x10]
6400e050:	mov    DWORD PTR fs:0x0,ecx
6400e057:	pop    ecx
6400e058:	pop    esi
6400e059:	pop    ebx
6400e05a:	mov    esp,ebp
6400e05c:	pop    ebp
6400e05d:	ret    
6400e05e:	mov    eax,ds:0x640313cc
6400e063:	mov    ecx,DWORD PTR [esp+0x10]
6400e067:	mov    DWORD PTR fs:0x0,ecx
6400e06e:	pop    ecx
6400e06f:	pop    esi
6400e070:	pop    ebx
6400e071:	mov    esp,ebp
6400e073:	pop    ebp
6400e074:	ret    
6400e075:	int3   
6400e076:	int3   
6400e077:	int3   
6400e078:	int3   
6400e079:	int3   
6400e07a:	int3   
6400e07b:	int3   
6400e07c:	int3   
6400e07d:	int3   
6400e07e:	int3   
6400e07f:	int3   
6400e080:	push   ebp
6400e081:	mov    ebp,esp
6400e083:	and    esp,0xfffffff8
6400e086:	push   0xffffffff
6400e088:	push   0x6402313e
6400e08d:	mov    eax,fs:0x0
6400e093:	push   eax
6400e094:	push   ecx
6400e095:	push   ebx
6400e096:	push   esi
6400e097:	mov    eax,ds:0x6402d09c
6400e09c:	xor    eax,esp
6400e09e:	push   eax
6400e09f:	lea    eax,[esp+0x10]
6400e0a3:	mov    fs:0x0,eax
6400e0a9:	mov    ebx,0x1
6400e0ae:	test   BYTE PTR ds:0x640313c8,bl
6400e0b4:	jne    0x6400e13e
6400e0ba:	or     DWORD PTR ds:0x640313c8,ebx
6400e0c0:	push   0x64029444
6400e0c5:	push   0xe
6400e0c7:	push   0x6402946c
6400e0cc:	mov    DWORD PTR [esp+0x24],0x0
6400e0d4:	call   0x64005750
6400e0d9:	push   0x6402947c
6400e0de:	push   0x8
6400e0e0:	push   0x640291e0
6400e0e5:	mov    esi,eax
6400e0e7:	call   0x64005a10
6400e0ec:	add    esp,0x18
6400e0ef:	push   eax
6400e0f0:	call   DWORD PTR ds:0x64025018
6400e0f6:	add    DWORD PTR ds:0x64031270,ebx
6400e0fc:	test   eax,eax
6400e0fe:	je     0x6400e125
6400e100:	push   esi
6400e101:	push   eax
6400e102:	call   DWORD PTR ds:0x64025014
6400e108:	add    DWORD PTR ds:0x64031274,ebx
6400e10e:	mov    ds:0x640313c4,eax
6400e113:	mov    ecx,DWORD PTR [esp+0x10]
6400e117:	mov    DWORD PTR fs:0x0,ecx
6400e11e:	pop    ecx
6400e11f:	pop    esi
6400e120:	pop    ebx
6400e121:	mov    esp,ebp
6400e123:	pop    ebp
6400e124:	ret    
6400e125:	xor    eax,eax
6400e127:	mov    ds:0x640313c4,eax
6400e12c:	mov    ecx,DWORD PTR [esp+0x10]
6400e130:	mov    DWORD PTR fs:0x0,ecx
6400e137:	pop    ecx
6400e138:	pop    esi
6400e139:	pop    ebx
6400e13a:	mov    esp,ebp
6400e13c:	pop    ebp
6400e13d:	ret    
6400e13e:	mov    eax,ds:0x640313c4
6400e143:	mov    ecx,DWORD PTR [esp+0x10]
6400e147:	mov    DWORD PTR fs:0x0,ecx
6400e14e:	pop    ecx
6400e14f:	pop    esi
6400e150:	pop    ebx
6400e151:	mov    esp,ebp
6400e153:	pop    ebp
6400e154:	ret    
6400e155:	int3   
6400e156:	int3   
6400e157:	int3   
6400e158:	int3   
6400e159:	int3   
6400e15a:	int3   
6400e15b:	int3   
6400e15c:	int3   
6400e15d:	int3   
6400e15e:	int3   
6400e15f:	int3   
6400e160:	push   ebp
6400e161:	mov    ebp,esp
6400e163:	and    esp,0xfffffff8
6400e166:	push   0xffffffff
6400e168:	push   0x6402310e
6400e16d:	mov    eax,fs:0x0
6400e173:	push   eax
6400e174:	push   ecx
6400e175:	push   ebx
6400e176:	push   esi
6400e177:	mov    eax,ds:0x6402d09c
6400e17c:	xor    eax,esp
6400e17e:	push   eax
6400e17f:	lea    eax,[esp+0x10]
6400e183:	mov    fs:0x0,eax
6400e189:	mov    ebx,0x1
6400e18e:	test   BYTE PTR ds:0x640313c0,bl
6400e194:	jne    0x6400e21e
6400e19a:	or     DWORD PTR ds:0x640313c0,ebx
6400e1a0:	push   0x640294b4
6400e1a5:	push   0x14
6400e1a7:	push   0x640294e0
6400e1ac:	mov    DWORD PTR [esp+0x24],0x0
6400e1b4:	call   0x64005750
6400e1b9:	push   0x640294f8
6400e1be:	push   0x8
6400e1c0:	push   0x640291e0
6400e1c5:	mov    esi,eax
6400e1c7:	call   0x64005a10
6400e1cc:	add    esp,0x18
6400e1cf:	push   eax
6400e1d0:	call   DWORD PTR ds:0x64025018
6400e1d6:	add    DWORD PTR ds:0x64031270,ebx
6400e1dc:	test   eax,eax
6400e1de:	je     0x6400e205
6400e1e0:	push   esi
6400e1e1:	push   eax
6400e1e2:	call   DWORD PTR ds:0x64025014
6400e1e8:	add    DWORD PTR ds:0x64031274,ebx
6400e1ee:	mov    ds:0x640313bc,eax
6400e1f3:	mov    ecx,DWORD PTR [esp+0x10]
6400e1f7:	mov    DWORD PTR fs:0x0,ecx
6400e1fe:	pop    ecx
6400e1ff:	pop    esi
6400e200:	pop    ebx
6400e201:	mov    esp,ebp
6400e203:	pop    ebp
6400e204:	ret    
6400e205:	xor    eax,eax
6400e207:	mov    ds:0x640313bc,eax
6400e20c:	mov    ecx,DWORD PTR [esp+0x10]
6400e210:	mov    DWORD PTR fs:0x0,ecx
6400e217:	pop    ecx
6400e218:	pop    esi
6400e219:	pop    ebx
6400e21a:	mov    esp,ebp
6400e21c:	pop    ebp
6400e21d:	ret    
6400e21e:	mov    eax,ds:0x640313bc
6400e223:	mov    ecx,DWORD PTR [esp+0x10]
6400e227:	mov    DWORD PTR fs:0x0,ecx
6400e22e:	pop    ecx
6400e22f:	pop    esi
6400e230:	pop    ebx
6400e231:	mov    esp,ebp
6400e233:	pop    ebp
6400e234:	ret    
6400e235:	int3   
6400e236:	int3   
6400e237:	int3   
6400e238:	int3   
6400e239:	int3   
6400e23a:	int3   
6400e23b:	int3   
6400e23c:	int3   
6400e23d:	int3   
6400e23e:	int3   
6400e23f:	int3   
6400e240:	push   ebp
6400e241:	mov    ebp,esp
6400e243:	and    esp,0xfffffff8
6400e246:	push   0xffffffff
6400e248:	push   0x640230de
6400e24d:	mov    eax,fs:0x0
6400e253:	push   eax
6400e254:	push   ecx
6400e255:	push   ebx
6400e256:	push   esi
6400e257:	mov    eax,ds:0x6402d09c
6400e25c:	xor    eax,esp
6400e25e:	push   eax
6400e25f:	lea    eax,[esp+0x10]
6400e263:	mov    fs:0x0,eax
6400e269:	mov    ebx,0x1
6400e26e:	test   BYTE PTR ds:0x640313b8,bl
6400e274:	jne    0x6400e2fe
6400e27a:	or     DWORD PTR ds:0x640313b8,ebx
6400e280:	push   0x64029528
6400e285:	push   0xd
6400e287:	push   0x64029568
6400e28c:	mov    DWORD PTR [esp+0x24],0x0
6400e294:	call   0x64005750
6400e299:	push   0x64029578
6400e29e:	push   0x8
6400e2a0:	push   0x640291e0
6400e2a5:	mov    esi,eax
6400e2a7:	call   0x64005a10
6400e2ac:	add    esp,0x18
6400e2af:	push   eax
6400e2b0:	call   DWORD PTR ds:0x64025018
6400e2b6:	add    DWORD PTR ds:0x64031270,ebx
6400e2bc:	test   eax,eax
6400e2be:	je     0x6400e2e5
6400e2c0:	push   esi
6400e2c1:	push   eax
6400e2c2:	call   DWORD PTR ds:0x64025014
6400e2c8:	add    DWORD PTR ds:0x64031274,ebx
6400e2ce:	mov    ds:0x640313b4,eax
6400e2d3:	mov    ecx,DWORD PTR [esp+0x10]
6400e2d7:	mov    DWORD PTR fs:0x0,ecx
6400e2de:	pop    ecx
6400e2df:	pop    esi
6400e2e0:	pop    ebx
6400e2e1:	mov    esp,ebp
6400e2e3:	pop    ebp
6400e2e4:	ret    
6400e2e5:	xor    eax,eax
6400e2e7:	mov    ds:0x640313b4,eax
6400e2ec:	mov    ecx,DWORD PTR [esp+0x10]
6400e2f0:	mov    DWORD PTR fs:0x0,ecx
6400e2f7:	pop    ecx
6400e2f8:	pop    esi
6400e2f9:	pop    ebx
6400e2fa:	mov    esp,ebp
6400e2fc:	pop    ebp
6400e2fd:	ret    
6400e2fe:	mov    eax,ds:0x640313b4
6400e303:	mov    ecx,DWORD PTR [esp+0x10]
6400e307:	mov    DWORD PTR fs:0x0,ecx
6400e30e:	pop    ecx
6400e30f:	pop    esi
6400e310:	pop    ebx
6400e311:	mov    esp,ebp
6400e313:	pop    ebp
6400e314:	ret    
6400e315:	int3   
6400e316:	int3   
6400e317:	int3   
6400e318:	int3   
6400e319:	int3   
6400e31a:	int3   
6400e31b:	int3   
6400e31c:	int3   
6400e31d:	int3   
6400e31e:	int3   
6400e31f:	int3   
6400e320:	push   ebp
6400e321:	mov    ebp,esp
6400e323:	and    esp,0xfffffff8
6400e326:	push   0xffffffff
6400e328:	push   0x640230ae
6400e32d:	mov    eax,fs:0x0
6400e333:	push   eax
6400e334:	push   ecx
6400e335:	push   ebx
6400e336:	push   esi
6400e337:	mov    eax,ds:0x6402d09c
6400e33c:	xor    eax,esp
6400e33e:	push   eax
6400e33f:	lea    eax,[esp+0x10]
6400e343:	mov    fs:0x0,eax
6400e349:	mov    ebx,0x1
6400e34e:	test   BYTE PTR ds:0x640313b0,bl
6400e354:	jne    0x6400e3de
6400e35a:	or     DWORD PTR ds:0x640313b0,ebx
6400e360:	push   0x640295b0
6400e365:	push   0xe
6400e367:	push   0x640295d4
6400e36c:	mov    DWORD PTR [esp+0x24],0x0
6400e374:	call   0x64005750
6400e379:	push   0x640295e4
6400e37e:	push   0x8
6400e380:	push   0x640291e0
6400e385:	mov    esi,eax
6400e387:	call   0x64005a10
6400e38c:	add    esp,0x18
6400e38f:	push   eax
6400e390:	call   DWORD PTR ds:0x64025018
6400e396:	add    DWORD PTR ds:0x64031270,ebx
6400e39c:	test   eax,eax
6400e39e:	je     0x6400e3c5
6400e3a0:	push   esi
6400e3a1:	push   eax
6400e3a2:	call   DWORD PTR ds:0x64025014
6400e3a8:	add    DWORD PTR ds:0x64031274,ebx
6400e3ae:	mov    ds:0x640313ac,eax
6400e3b3:	mov    ecx,DWORD PTR [esp+0x10]
6400e3b7:	mov    DWORD PTR fs:0x0,ecx
6400e3be:	pop    ecx
6400e3bf:	pop    esi
6400e3c0:	pop    ebx
6400e3c1:	mov    esp,ebp
6400e3c3:	pop    ebp
6400e3c4:	ret    
6400e3c5:	xor    eax,eax
6400e3c7:	mov    ds:0x640313ac,eax
6400e3cc:	mov    ecx,DWORD PTR [esp+0x10]
6400e3d0:	mov    DWORD PTR fs:0x0,ecx
6400e3d7:	pop    ecx
6400e3d8:	pop    esi
6400e3d9:	pop    ebx
6400e3da:	mov    esp,ebp
6400e3dc:	pop    ebp
6400e3dd:	ret    
6400e3de:	mov    eax,ds:0x640313ac
6400e3e3:	mov    ecx,DWORD PTR [esp+0x10]
6400e3e7:	mov    DWORD PTR fs:0x0,ecx
6400e3ee:	pop    ecx
6400e3ef:	pop    esi
6400e3f0:	pop    ebx
6400e3f1:	mov    esp,ebp
6400e3f3:	pop    ebp
6400e3f4:	ret    
6400e3f5:	int3   
6400e3f6:	int3   
6400e3f7:	int3   
6400e3f8:	int3   
6400e3f9:	int3   
6400e3fa:	int3   
6400e3fb:	int3   
6400e3fc:	int3   
6400e3fd:	int3   
6400e3fe:	int3   
6400e3ff:	int3   
6400e400:	push   ebp
6400e401:	mov    ebp,esp
6400e403:	and    esp,0xfffffff8
6400e406:	push   0xffffffff
6400e408:	push   0x6402307e
6400e40d:	mov    eax,fs:0x0
6400e413:	push   eax
6400e414:	push   ecx
6400e415:	push   ebx
6400e416:	push   esi
6400e417:	mov    eax,ds:0x6402d09c
6400e41c:	xor    eax,esp
6400e41e:	push   eax
6400e41f:	lea    eax,[esp+0x10]
6400e423:	mov    fs:0x0,eax
6400e429:	mov    ebx,0x1
6400e42e:	test   BYTE PTR ds:0x640313a8,bl
6400e434:	jne    0x6400e4be
6400e43a:	or     DWORD PTR ds:0x640313a8,ebx
6400e440:	push   0x6402961c
6400e445:	push   0xf
6400e447:	push   0x64029658
6400e44c:	mov    DWORD PTR [esp+0x24],0x0
6400e454:	call   0x64005750
6400e459:	push   0x64029668
6400e45e:	push   0x8
6400e460:	push   0x640291e0
6400e465:	mov    esi,eax
6400e467:	call   0x64005a10
6400e46c:	add    esp,0x18
6400e46f:	push   eax
6400e470:	call   DWORD PTR ds:0x64025018
6400e476:	add    DWORD PTR ds:0x64031270,ebx
6400e47c:	test   eax,eax
6400e47e:	je     0x6400e4a5
6400e480:	push   esi
6400e481:	push   eax
6400e482:	call   DWORD PTR ds:0x64025014
6400e488:	add    DWORD PTR ds:0x64031274,ebx
6400e48e:	mov    ds:0x640313a4,eax
6400e493:	mov    ecx,DWORD PTR [esp+0x10]
6400e497:	mov    DWORD PTR fs:0x0,ecx
6400e49e:	pop    ecx
6400e49f:	pop    esi
6400e4a0:	pop    ebx
6400e4a1:	mov    esp,ebp
6400e4a3:	pop    ebp
6400e4a4:	ret    
6400e4a5:	xor    eax,eax
6400e4a7:	mov    ds:0x640313a4,eax
6400e4ac:	mov    ecx,DWORD PTR [esp+0x10]
6400e4b0:	mov    DWORD PTR fs:0x0,ecx
6400e4b7:	pop    ecx
6400e4b8:	pop    esi
6400e4b9:	pop    ebx
6400e4ba:	mov    esp,ebp
6400e4bc:	pop    ebp
6400e4bd:	ret    
6400e4be:	mov    eax,ds:0x640313a4
6400e4c3:	mov    ecx,DWORD PTR [esp+0x10]
6400e4c7:	mov    DWORD PTR fs:0x0,ecx
6400e4ce:	pop    ecx
6400e4cf:	pop    esi
6400e4d0:	pop    ebx
6400e4d1:	mov    esp,ebp
6400e4d3:	pop    ebp
6400e4d4:	ret    
6400e4d5:	int3   
6400e4d6:	int3   
6400e4d7:	int3   
6400e4d8:	int3   
6400e4d9:	int3   
6400e4da:	int3   
6400e4db:	int3   
6400e4dc:	int3   
6400e4dd:	int3   
6400e4de:	int3   
6400e4df:	int3   
6400e4e0:	push   ebp
6400e4e1:	mov    ebp,esp
6400e4e3:	and    esp,0xfffffff8
6400e4e6:	push   0xffffffff
6400e4e8:	push   0x6402304e
6400e4ed:	mov    eax,fs:0x0
6400e4f3:	push   eax
6400e4f4:	push   ecx
6400e4f5:	push   ebx
6400e4f6:	push   esi
6400e4f7:	mov    eax,ds:0x6402d09c
6400e4fc:	xor    eax,esp
6400e4fe:	push   eax
6400e4ff:	lea    eax,[esp+0x10]
6400e503:	mov    fs:0x0,eax
6400e509:	mov    ebx,0x1
6400e50e:	test   BYTE PTR ds:0x640313a0,bl
6400e514:	jne    0x6400e59e
6400e51a:	or     DWORD PTR ds:0x640313a0,ebx
6400e520:	push   0x640296a4
6400e525:	push   0x12
6400e527:	push   0x640296c8
6400e52c:	mov    DWORD PTR [esp+0x24],0x0
6400e534:	call   0x64005750
6400e539:	push   0x640296dc
6400e53e:	push   0x8
6400e540:	push   0x640291e0
6400e545:	mov    esi,eax
6400e547:	call   0x64005a10
6400e54c:	add    esp,0x18
6400e54f:	push   eax
6400e550:	call   DWORD PTR ds:0x64025018
6400e556:	add    DWORD PTR ds:0x64031270,ebx
6400e55c:	test   eax,eax
6400e55e:	je     0x6400e585
6400e560:	push   esi
6400e561:	push   eax
6400e562:	call   DWORD PTR ds:0x64025014
6400e568:	add    DWORD PTR ds:0x64031274,ebx
6400e56e:	mov    ds:0x6403139c,eax
6400e573:	mov    ecx,DWORD PTR [esp+0x10]
6400e577:	mov    DWORD PTR fs:0x0,ecx
6400e57e:	pop    ecx
6400e57f:	pop    esi
6400e580:	pop    ebx
6400e581:	mov    esp,ebp
6400e583:	pop    ebp
6400e584:	ret    
6400e585:	xor    eax,eax
6400e587:	mov    ds:0x6403139c,eax
6400e58c:	mov    ecx,DWORD PTR [esp+0x10]
6400e590:	mov    DWORD PTR fs:0x0,ecx
6400e597:	pop    ecx
6400e598:	pop    esi
6400e599:	pop    ebx
6400e59a:	mov    esp,ebp
6400e59c:	pop    ebp
6400e59d:	ret    
6400e59e:	mov    eax,ds:0x6403139c
6400e5a3:	mov    ecx,DWORD PTR [esp+0x10]
6400e5a7:	mov    DWORD PTR fs:0x0,ecx
6400e5ae:	pop    ecx
6400e5af:	pop    esi
6400e5b0:	pop    ebx
6400e5b1:	mov    esp,ebp
6400e5b3:	pop    ebp
6400e5b4:	ret    
6400e5b5:	int3   
6400e5b6:	int3   
6400e5b7:	int3   
6400e5b8:	int3   
6400e5b9:	int3   
6400e5ba:	int3   
6400e5bb:	int3   
6400e5bc:	int3   
6400e5bd:	int3   
6400e5be:	int3   
6400e5bf:	int3   
6400e5c0:	push   ebp
6400e5c1:	mov    ebp,esp
6400e5c3:	and    esp,0xfffffff8
6400e5c6:	push   0xffffffff
6400e5c8:	push   0x6402301e
6400e5cd:	mov    eax,fs:0x0
6400e5d3:	push   eax
6400e5d4:	push   ecx
6400e5d5:	push   ebx
6400e5d6:	push   esi
6400e5d7:	mov    eax,ds:0x6402d09c
6400e5dc:	xor    eax,esp
6400e5de:	push   eax
6400e5df:	lea    eax,[esp+0x10]
6400e5e3:	mov    fs:0x0,eax
6400e5e9:	mov    ebx,0x1
6400e5ee:	test   BYTE PTR ds:0x64031398,bl
6400e5f4:	jne    0x6400e67e
6400e5fa:	or     DWORD PTR ds:0x64031398,ebx
6400e600:	push   0x6402970c
6400e605:	push   0xf
6400e607:	push   0x64029730
6400e60c:	mov    DWORD PTR [esp+0x24],0x0
6400e614:	call   0x64005750
6400e619:	push   0x64029740
6400e61e:	push   0x8
6400e620:	push   0x640291e0
6400e625:	mov    esi,eax
6400e627:	call   0x64005a10
6400e62c:	add    esp,0x18
6400e62f:	push   eax
6400e630:	call   DWORD PTR ds:0x64025018
6400e636:	add    DWORD PTR ds:0x64031270,ebx
6400e63c:	test   eax,eax
6400e63e:	je     0x6400e665
6400e640:	push   esi
6400e641:	push   eax
6400e642:	call   DWORD PTR ds:0x64025014
6400e648:	add    DWORD PTR ds:0x64031274,ebx
6400e64e:	mov    ds:0x64031394,eax
6400e653:	mov    ecx,DWORD PTR [esp+0x10]
6400e657:	mov    DWORD PTR fs:0x0,ecx
6400e65e:	pop    ecx
6400e65f:	pop    esi
6400e660:	pop    ebx
6400e661:	mov    esp,ebp
6400e663:	pop    ebp
6400e664:	ret    
6400e665:	xor    eax,eax
6400e667:	mov    ds:0x64031394,eax
6400e66c:	mov    ecx,DWORD PTR [esp+0x10]
6400e670:	mov    DWORD PTR fs:0x0,ecx
6400e677:	pop    ecx
6400e678:	pop    esi
6400e679:	pop    ebx
6400e67a:	mov    esp,ebp
6400e67c:	pop    ebp
6400e67d:	ret    
6400e67e:	mov    eax,ds:0x64031394
6400e683:	mov    ecx,DWORD PTR [esp+0x10]
6400e687:	mov    DWORD PTR fs:0x0,ecx
6400e68e:	pop    ecx
6400e68f:	pop    esi
6400e690:	pop    ebx
6400e691:	mov    esp,ebp
6400e693:	pop    ebp
6400e694:	ret    
6400e695:	int3   
6400e696:	int3   
6400e697:	int3   
6400e698:	int3   
6400e699:	int3   
6400e69a:	int3   
6400e69b:	int3   
6400e69c:	int3   
6400e69d:	int3   
6400e69e:	int3   
6400e69f:	int3   
6400e6a0:	push   ebp
6400e6a1:	mov    ebp,esp
6400e6a3:	and    esp,0xfffffff8
6400e6a6:	push   0xffffffff
6400e6a8:	push   0x64022fee
6400e6ad:	mov    eax,fs:0x0
6400e6b3:	push   eax
6400e6b4:	push   ecx
6400e6b5:	push   ebx
6400e6b6:	push   esi
6400e6b7:	mov    eax,ds:0x6402d09c
6400e6bc:	xor    eax,esp
6400e6be:	push   eax
6400e6bf:	lea    eax,[esp+0x10]
6400e6c3:	mov    fs:0x0,eax
6400e6c9:	mov    ebx,0x1
6400e6ce:	test   BYTE PTR ds:0x64031390,bl
6400e6d4:	jne    0x6400e75e
6400e6da:	or     DWORD PTR ds:0x64031390,ebx
6400e6e0:	push   0x64029764
6400e6e5:	push   0xd
6400e6e7:	push   0x640297a0
6400e6ec:	mov    DWORD PTR [esp+0x24],0x0
6400e6f4:	call   0x64005750
6400e6f9:	push   0x640297b0
6400e6fe:	push   0x8
6400e700:	push   0x640291e0
6400e705:	mov    esi,eax
6400e707:	call   0x64005a10
6400e70c:	add    esp,0x18
6400e70f:	push   eax
6400e710:	call   DWORD PTR ds:0x64025018
6400e716:	add    DWORD PTR ds:0x64031270,ebx
6400e71c:	test   eax,eax
6400e71e:	je     0x6400e745
6400e720:	push   esi
6400e721:	push   eax
6400e722:	call   DWORD PTR ds:0x64025014
6400e728:	add    DWORD PTR ds:0x64031274,ebx
6400e72e:	mov    ds:0x6403138c,eax
6400e733:	mov    ecx,DWORD PTR [esp+0x10]
6400e737:	mov    DWORD PTR fs:0x0,ecx
6400e73e:	pop    ecx
6400e73f:	pop    esi
6400e740:	pop    ebx
6400e741:	mov    esp,ebp
6400e743:	pop    ebp
6400e744:	ret    
6400e745:	xor    eax,eax
6400e747:	mov    ds:0x6403138c,eax
6400e74c:	mov    ecx,DWORD PTR [esp+0x10]
6400e750:	mov    DWORD PTR fs:0x0,ecx
6400e757:	pop    ecx
6400e758:	pop    esi
6400e759:	pop    ebx
6400e75a:	mov    esp,ebp
6400e75c:	pop    ebp
6400e75d:	ret    
6400e75e:	mov    eax,ds:0x6403138c
6400e763:	mov    ecx,DWORD PTR [esp+0x10]
6400e767:	mov    DWORD PTR fs:0x0,ecx
6400e76e:	pop    ecx
6400e76f:	pop    esi
6400e770:	pop    ebx
6400e771:	mov    esp,ebp
6400e773:	pop    ebp
6400e774:	ret    
6400e775:	int3   
6400e776:	int3   
6400e777:	int3   
6400e778:	int3   
6400e779:	int3   
6400e77a:	int3   
6400e77b:	int3   
6400e77c:	int3   
6400e77d:	int3   
6400e77e:	int3   
6400e77f:	int3   
6400e780:	push   ebp
6400e781:	mov    ebp,esp
6400e783:	and    esp,0xfffffff8
6400e786:	push   0xffffffff
6400e788:	push   0x64022fbe
6400e78d:	mov    eax,fs:0x0
6400e793:	push   eax
6400e794:	push   ecx
6400e795:	push   ebx
6400e796:	push   esi
6400e797:	mov    eax,ds:0x6402d09c
6400e79c:	xor    eax,esp
6400e79e:	push   eax
6400e79f:	lea    eax,[esp+0x10]
6400e7a3:	mov    fs:0x0,eax
6400e7a9:	mov    ebx,0x1
6400e7ae:	test   BYTE PTR ds:0x64031388,bl
6400e7b4:	jne    0x6400e83e
6400e7ba:	or     DWORD PTR ds:0x64031388,ebx
6400e7c0:	push   0x640297ec
6400e7c5:	push   0xc
6400e7c7:	push   0x64029820
6400e7cc:	mov    DWORD PTR [esp+0x24],0x0
6400e7d4:	call   0x64005750
6400e7d9:	push   0x64029830
6400e7de:	push   0x8
6400e7e0:	push   0x640291e0
6400e7e5:	mov    esi,eax
6400e7e7:	call   0x64005a10
6400e7ec:	add    esp,0x18
6400e7ef:	push   eax
6400e7f0:	call   DWORD PTR ds:0x64025018
6400e7f6:	add    DWORD PTR ds:0x64031270,ebx
6400e7fc:	test   eax,eax
6400e7fe:	je     0x6400e825
6400e800:	push   esi
6400e801:	push   eax
6400e802:	call   DWORD PTR ds:0x64025014
6400e808:	add    DWORD PTR ds:0x64031274,ebx
6400e80e:	mov    ds:0x64031384,eax
6400e813:	mov    ecx,DWORD PTR [esp+0x10]
6400e817:	mov    DWORD PTR fs:0x0,ecx
6400e81e:	pop    ecx
6400e81f:	pop    esi
6400e820:	pop    ebx
6400e821:	mov    esp,ebp
6400e823:	pop    ebp
6400e824:	ret    
6400e825:	xor    eax,eax
6400e827:	mov    ds:0x64031384,eax
6400e82c:	mov    ecx,DWORD PTR [esp+0x10]
6400e830:	mov    DWORD PTR fs:0x0,ecx
6400e837:	pop    ecx
6400e838:	pop    esi
6400e839:	pop    ebx
6400e83a:	mov    esp,ebp
6400e83c:	pop    ebp
6400e83d:	ret    
6400e83e:	mov    eax,ds:0x64031384
6400e843:	mov    ecx,DWORD PTR [esp+0x10]
6400e847:	mov    DWORD PTR fs:0x0,ecx
6400e84e:	pop    ecx
6400e84f:	pop    esi
6400e850:	pop    ebx
6400e851:	mov    esp,ebp
6400e853:	pop    ebp
6400e854:	ret    
6400e855:	int3   
6400e856:	int3   
6400e857:	int3   
6400e858:	int3   
6400e859:	int3   
6400e85a:	int3   
6400e85b:	int3   
6400e85c:	int3   
6400e85d:	int3   
6400e85e:	int3   
6400e85f:	int3   
6400e860:	push   ebp
6400e861:	mov    ebp,esp
6400e863:	and    esp,0xfffffff8
6400e866:	push   0xffffffff
6400e868:	push   0x64022f8e
6400e86d:	mov    eax,fs:0x0
6400e873:	push   eax
6400e874:	push   ecx
6400e875:	push   ebx
6400e876:	push   esi
6400e877:	mov    eax,ds:0x6402d09c
6400e87c:	xor    eax,esp
6400e87e:	push   eax
6400e87f:	lea    eax,[esp+0x10]
6400e883:	mov    fs:0x0,eax
6400e889:	mov    ebx,0x1
6400e88e:	test   BYTE PTR ds:0x64031380,bl
6400e894:	jne    0x6400e91e
6400e89a:	or     DWORD PTR ds:0x64031380,ebx
6400e8a0:	push   0x64029870
6400e8a5:	push   0x11
6400e8a7:	push   0x64029898
6400e8ac:	mov    DWORD PTR [esp+0x24],0x0
6400e8b4:	call   0x64005750
6400e8b9:	push   0x640298ac
6400e8be:	push   0x8
6400e8c0:	push   0x640291e0
6400e8c5:	mov    esi,eax
6400e8c7:	call   0x64005a10
6400e8cc:	add    esp,0x18
6400e8cf:	push   eax
6400e8d0:	call   DWORD PTR ds:0x64025018
6400e8d6:	add    DWORD PTR ds:0x64031270,ebx
6400e8dc:	test   eax,eax
6400e8de:	je     0x6400e905
6400e8e0:	push   esi
6400e8e1:	push   eax
6400e8e2:	call   DWORD PTR ds:0x64025014
6400e8e8:	add    DWORD PTR ds:0x64031274,ebx
6400e8ee:	mov    ds:0x6403137c,eax
6400e8f3:	mov    ecx,DWORD PTR [esp+0x10]
6400e8f7:	mov    DWORD PTR fs:0x0,ecx
6400e8fe:	pop    ecx
6400e8ff:	pop    esi
6400e900:	pop    ebx
6400e901:	mov    esp,ebp
6400e903:	pop    ebp
6400e904:	ret    
6400e905:	xor    eax,eax
6400e907:	mov    ds:0x6403137c,eax
6400e90c:	mov    ecx,DWORD PTR [esp+0x10]
6400e910:	mov    DWORD PTR fs:0x0,ecx
6400e917:	pop    ecx
6400e918:	pop    esi
6400e919:	pop    ebx
6400e91a:	mov    esp,ebp
6400e91c:	pop    ebp
6400e91d:	ret    
6400e91e:	mov    eax,ds:0x6403137c
6400e923:	mov    ecx,DWORD PTR [esp+0x10]
6400e927:	mov    DWORD PTR fs:0x0,ecx
6400e92e:	pop    ecx
6400e92f:	pop    esi
6400e930:	pop    ebx
6400e931:	mov    esp,ebp
6400e933:	pop    ebp
6400e934:	ret    
6400e935:	int3   
6400e936:	int3   
6400e937:	int3   
6400e938:	int3   
6400e939:	int3   
6400e93a:	int3   
6400e93b:	int3   
6400e93c:	int3   
6400e93d:	int3   
6400e93e:	int3   
6400e93f:	int3   
6400e940:	push   ebp
6400e941:	mov    ebp,esp
6400e943:	and    esp,0xfffffff8
6400e946:	push   0xffffffff
6400e948:	push   0x64022f5e
6400e94d:	mov    eax,fs:0x0
6400e953:	push   eax
6400e954:	push   ecx
6400e955:	push   ebx
6400e956:	push   esi
6400e957:	mov    eax,ds:0x6402d09c
6400e95c:	xor    eax,esp
6400e95e:	push   eax
6400e95f:	lea    eax,[esp+0x10]
6400e963:	mov    fs:0x0,eax
6400e969:	mov    ebx,0x1
6400e96e:	test   BYTE PTR ds:0x64031378,bl
6400e974:	jne    0x6400e9fe
6400e97a:	or     DWORD PTR ds:0x64031378,ebx
6400e980:	push   0x640298d8
6400e985:	push   0x16
6400e987:	push   0x640298fc
6400e98c:	mov    DWORD PTR [esp+0x24],0x0
6400e994:	call   0x64005750
6400e999:	push   0x64029914
6400e99e:	push   0x8
6400e9a0:	push   0x640291e0
6400e9a5:	mov    esi,eax
6400e9a7:	call   0x64005a10
6400e9ac:	add    esp,0x18
6400e9af:	push   eax
6400e9b0:	call   DWORD PTR ds:0x64025018
6400e9b6:	add    DWORD PTR ds:0x64031270,ebx
6400e9bc:	test   eax,eax
6400e9be:	je     0x6400e9e5
6400e9c0:	push   esi
6400e9c1:	push   eax
6400e9c2:	call   DWORD PTR ds:0x64025014
6400e9c8:	add    DWORD PTR ds:0x64031274,ebx
6400e9ce:	mov    ds:0x64031374,eax
6400e9d3:	mov    ecx,DWORD PTR [esp+0x10]
6400e9d7:	mov    DWORD PTR fs:0x0,ecx
6400e9de:	pop    ecx
6400e9df:	pop    esi
6400e9e0:	pop    ebx
6400e9e1:	mov    esp,ebp
6400e9e3:	pop    ebp
6400e9e4:	ret    
6400e9e5:	xor    eax,eax
6400e9e7:	mov    ds:0x64031374,eax
6400e9ec:	mov    ecx,DWORD PTR [esp+0x10]
6400e9f0:	mov    DWORD PTR fs:0x0,ecx
6400e9f7:	pop    ecx
6400e9f8:	pop    esi
6400e9f9:	pop    ebx
6400e9fa:	mov    esp,ebp
6400e9fc:	pop    ebp
6400e9fd:	ret    
6400e9fe:	mov    eax,ds:0x64031374
6400ea03:	mov    ecx,DWORD PTR [esp+0x10]
6400ea07:	mov    DWORD PTR fs:0x0,ecx
6400ea0e:	pop    ecx
6400ea0f:	pop    esi
6400ea10:	pop    ebx
6400ea11:	mov    esp,ebp
6400ea13:	pop    ebp
6400ea14:	ret    
6400ea15:	int3   
6400ea16:	int3   
6400ea17:	int3   
6400ea18:	int3   
6400ea19:	int3   
6400ea1a:	int3   
6400ea1b:	int3   
6400ea1c:	int3   
6400ea1d:	int3   
6400ea1e:	int3   
6400ea1f:	int3   
6400ea20:	push   ebp
6400ea21:	mov    ebp,esp
6400ea23:	and    esp,0xfffffff8
6400ea26:	push   0xffffffff
6400ea28:	push   0x64022f2e
6400ea2d:	mov    eax,fs:0x0
6400ea33:	push   eax
6400ea34:	push   ecx
6400ea35:	push   ebx
6400ea36:	push   esi
6400ea37:	mov    eax,ds:0x6402d09c
6400ea3c:	xor    eax,esp
6400ea3e:	push   eax
6400ea3f:	lea    eax,[esp+0x10]
6400ea43:	mov    fs:0x0,eax
6400ea49:	mov    ebx,0x1
6400ea4e:	test   BYTE PTR ds:0x64031370,bl
6400ea54:	jne    0x6400eade
6400ea5a:	or     DWORD PTR ds:0x64031370,ebx
6400ea60:	push   0x6402993c
6400ea65:	push   0x10
6400ea67:	push   0x64029974
6400ea6c:	mov    DWORD PTR [esp+0x24],0x0
6400ea74:	call   0x64005750
6400ea79:	push   0x64029988
6400ea7e:	push   0x8
6400ea80:	push   0x640291e0
6400ea85:	mov    esi,eax
6400ea87:	call   0x64005a10
6400ea8c:	add    esp,0x18
6400ea8f:	push   eax
6400ea90:	call   DWORD PTR ds:0x64025018
6400ea96:	add    DWORD PTR ds:0x64031270,ebx
6400ea9c:	test   eax,eax
6400ea9e:	je     0x6400eac5
6400eaa0:	push   esi
6400eaa1:	push   eax
6400eaa2:	call   DWORD PTR ds:0x64025014
6400eaa8:	add    DWORD PTR ds:0x64031274,ebx
6400eaae:	mov    ds:0x6403136c,eax
6400eab3:	mov    ecx,DWORD PTR [esp+0x10]
6400eab7:	mov    DWORD PTR fs:0x0,ecx
6400eabe:	pop    ecx
6400eabf:	pop    esi
6400eac0:	pop    ebx
6400eac1:	mov    esp,ebp
6400eac3:	pop    ebp
6400eac4:	ret    
6400eac5:	xor    eax,eax
6400eac7:	mov    ds:0x6403136c,eax
6400eacc:	mov    ecx,DWORD PTR [esp+0x10]
6400ead0:	mov    DWORD PTR fs:0x0,ecx
6400ead7:	pop    ecx
6400ead8:	pop    esi
6400ead9:	pop    ebx
6400eada:	mov    esp,ebp
6400eadc:	pop    ebp
6400eadd:	ret    
6400eade:	mov    eax,ds:0x6403136c
6400eae3:	mov    ecx,DWORD PTR [esp+0x10]
6400eae7:	mov    DWORD PTR fs:0x0,ecx
6400eaee:	pop    ecx
6400eaef:	pop    esi
6400eaf0:	pop    ebx
6400eaf1:	mov    esp,ebp
6400eaf3:	pop    ebp
6400eaf4:	ret    
6400eaf5:	int3   
6400eaf6:	int3   
6400eaf7:	int3   
6400eaf8:	int3   
6400eaf9:	int3   
6400eafa:	int3   
6400eafb:	int3   
6400eafc:	int3   
6400eafd:	int3   
6400eafe:	int3   
6400eaff:	int3   
6400eb00:	push   ebp
6400eb01:	mov    ebp,esp
6400eb03:	and    esp,0xfffffff8
6400eb06:	push   0xffffffff
6400eb08:	push   0x64022efe
6400eb0d:	mov    eax,fs:0x0
6400eb13:	push   eax
6400eb14:	push   ecx
6400eb15:	push   ebx
6400eb16:	push   esi
6400eb17:	mov    eax,ds:0x6402d09c
6400eb1c:	xor    eax,esp
6400eb1e:	push   eax
6400eb1f:	lea    eax,[esp+0x10]
6400eb23:	mov    fs:0x0,eax
6400eb29:	mov    ebx,0x1
6400eb2e:	test   BYTE PTR ds:0x64031368,bl
6400eb34:	jne    0x6400ebbe
6400eb3a:	or     DWORD PTR ds:0x64031368,ebx
6400eb40:	push   0x640299bc
6400eb45:	push   0xd
6400eb47:	push   0x640299f8
6400eb4c:	mov    DWORD PTR [esp+0x24],0x0
6400eb54:	call   0x64005750
6400eb59:	push   0x64029a08
6400eb5e:	push   0x7
6400eb60:	push   0x64029a44
6400eb65:	mov    esi,eax
6400eb67:	call   0x64005a10
6400eb6c:	add    esp,0x18
6400eb6f:	push   eax
6400eb70:	call   DWORD PTR ds:0x64025018
6400eb76:	add    DWORD PTR ds:0x64031270,ebx
6400eb7c:	test   eax,eax
6400eb7e:	je     0x6400eba5
6400eb80:	push   esi
6400eb81:	push   eax
6400eb82:	call   DWORD PTR ds:0x64025014
6400eb88:	add    DWORD PTR ds:0x64031274,ebx
6400eb8e:	mov    ds:0x64031364,eax
6400eb93:	mov    ecx,DWORD PTR [esp+0x10]
6400eb97:	mov    DWORD PTR fs:0x0,ecx
6400eb9e:	pop    ecx
6400eb9f:	pop    esi
6400eba0:	pop    ebx
6400eba1:	mov    esp,ebp
6400eba3:	pop    ebp
6400eba4:	ret    
6400eba5:	xor    eax,eax
6400eba7:	mov    ds:0x64031364,eax
6400ebac:	mov    ecx,DWORD PTR [esp+0x10]
6400ebb0:	mov    DWORD PTR fs:0x0,ecx
6400ebb7:	pop    ecx
6400ebb8:	pop    esi
6400ebb9:	pop    ebx
6400ebba:	mov    esp,ebp
6400ebbc:	pop    ebp
6400ebbd:	ret    
6400ebbe:	mov    eax,ds:0x64031364
6400ebc3:	mov    ecx,DWORD PTR [esp+0x10]
6400ebc7:	mov    DWORD PTR fs:0x0,ecx
6400ebce:	pop    ecx
6400ebcf:	pop    esi
6400ebd0:	pop    ebx
6400ebd1:	mov    esp,ebp
6400ebd3:	pop    ebp
6400ebd4:	ret    
6400ebd5:	int3   
6400ebd6:	int3   
6400ebd7:	int3   
6400ebd8:	int3   
6400ebd9:	int3   
6400ebda:	int3   
6400ebdb:	int3   
6400ebdc:	int3   
6400ebdd:	int3   
6400ebde:	int3   
6400ebdf:	int3   
6400ebe0:	push   ebp
6400ebe1:	mov    ebp,esp
6400ebe3:	and    esp,0xfffffff8
6400ebe6:	push   0xffffffff
6400ebe8:	push   0x64022ece
6400ebed:	mov    eax,fs:0x0
6400ebf3:	push   eax
6400ebf4:	push   ecx
6400ebf5:	push   ebx
6400ebf6:	push   esi
6400ebf7:	mov    eax,ds:0x6402d09c
6400ebfc:	xor    eax,esp
6400ebfe:	push   eax
6400ebff:	lea    eax,[esp+0x10]
6400ec03:	mov    fs:0x0,eax
6400ec09:	mov    ebx,0x1
6400ec0e:	test   BYTE PTR ds:0x64031360,bl
6400ec14:	jne    0x6400ec9e
6400ec1a:	or     DWORD PTR ds:0x64031360,ebx
6400ec20:	push   0x64029a54
6400ec25:	push   0xc
6400ec27:	push   0x64029a84
6400ec2c:	mov    DWORD PTR [esp+0x24],0x0
6400ec34:	call   0x64005750
6400ec39:	push   0x64029a94
6400ec3e:	push   0x5
6400ec40:	push   0x64029acc
6400ec45:	mov    esi,eax
6400ec47:	call   0x64005a10
6400ec4c:	add    esp,0x18
6400ec4f:	push   eax
6400ec50:	call   DWORD PTR ds:0x64025018
6400ec56:	add    DWORD PTR ds:0x64031270,ebx
6400ec5c:	test   eax,eax
6400ec5e:	je     0x6400ec85
6400ec60:	push   esi
6400ec61:	push   eax
6400ec62:	call   DWORD PTR ds:0x64025014
6400ec68:	add    DWORD PTR ds:0x64031274,ebx
6400ec6e:	mov    ds:0x6403135c,eax
6400ec73:	mov    ecx,DWORD PTR [esp+0x10]
6400ec77:	mov    DWORD PTR fs:0x0,ecx
6400ec7e:	pop    ecx
6400ec7f:	pop    esi
6400ec80:	pop    ebx
6400ec81:	mov    esp,ebp
6400ec83:	pop    ebp
6400ec84:	ret    
6400ec85:	xor    eax,eax
6400ec87:	mov    ds:0x6403135c,eax
6400ec8c:	mov    ecx,DWORD PTR [esp+0x10]
6400ec90:	mov    DWORD PTR fs:0x0,ecx
6400ec97:	pop    ecx
6400ec98:	pop    esi
6400ec99:	pop    ebx
6400ec9a:	mov    esp,ebp
6400ec9c:	pop    ebp
6400ec9d:	ret    
6400ec9e:	mov    eax,ds:0x6403135c
6400eca3:	mov    ecx,DWORD PTR [esp+0x10]
6400eca7:	mov    DWORD PTR fs:0x0,ecx
6400ecae:	pop    ecx
6400ecaf:	pop    esi
6400ecb0:	pop    ebx
6400ecb1:	mov    esp,ebp
6400ecb3:	pop    ebp
6400ecb4:	ret    
6400ecb5:	int3   
6400ecb6:	int3   
6400ecb7:	int3   
6400ecb8:	int3   
6400ecb9:	int3   
6400ecba:	int3   
6400ecbb:	int3   
6400ecbc:	int3   
6400ecbd:	int3   
6400ecbe:	int3   
6400ecbf:	int3   
6400ecc0:	push   esi
6400ecc1:	push   edi
6400ecc2:	mov    edi,DWORD PTR [esp+0xc]
6400ecc6:	mov    esi,DWORD PTR [edi+0xc]
6400ecc9:	cmp    esi,DWORD PTR [edi+0x14]
6400eccc:	je     0x6400ece4
6400ecce:	mov    edi,edi
6400ecd0:	mov    eax,DWORD PTR [esi-0x4]
6400ecd3:	mov    ecx,DWORD PTR [esi-0x8]
6400ecd6:	push   eax
6400ecd7:	call   ecx
6400ecd9:	add    esi,0xfffffff8
6400ecdc:	add    esp,0x4
6400ecdf:	cmp    esi,DWORD PTR [edi+0x14]
6400ece2:	jne    0x6400ecd0
6400ece4:	mov    edx,DWORD PTR [edi+0x14]
6400ece7:	push   edx
6400ece8:	call   0x64013a26
6400eced:	mov    edi,DWORD PTR [edi+0x8]
6400ecf0:	mov    esi,DWORD PTR [edi]
6400ecf2:	push   edi
6400ecf3:	call   0x64013a26
6400ecf8:	add    esp,0x8
6400ecfb:	test   esi,esi
6400ecfd:	je     0x6400ed11
6400ecff:	nop
6400ed00:	mov    eax,esi
6400ed02:	mov    esi,DWORD PTR [esi]
6400ed04:	push   eax
6400ed05:	call   0x64013a26
6400ed0a:	add    esp,0x4
6400ed0d:	test   esi,esi
6400ed0f:	jne    0x6400ed00
6400ed11:	pop    edi
6400ed12:	pop    esi
6400ed13:	ret    
6400ed14:	int3   
6400ed15:	int3   
6400ed16:	int3   
6400ed17:	int3   
6400ed18:	int3   
6400ed19:	int3   
6400ed1a:	int3   
6400ed1b:	int3   
6400ed1c:	int3   
6400ed1d:	int3   
6400ed1e:	int3   
6400ed1f:	int3   
6400ed20:	push   esi
6400ed21:	mov    esi,DWORD PTR [esp+0x8]
6400ed25:	push   edi
6400ed26:	mov    edi,DWORD PTR [esp+0x10]
6400ed2a:	lea    eax,[edi+0x4]
6400ed2d:	push   eax
6400ed2e:	mov    DWORD PTR [esi+0x18],edi
6400ed31:	call   0x64013b03
6400ed36:	xor    ecx,ecx
6400ed38:	add    esp,0x4
6400ed3b:	cmp    eax,ecx
6400ed3d:	je     0x6400ed5a
6400ed3f:	mov    DWORD PTR [esi+0x8],eax
6400ed42:	mov    DWORD PTR [esi],edi
6400ed44:	lea    edx,[eax+0x4]
6400ed47:	mov    DWORD PTR [esi+0x4],edx
6400ed4a:	mov    DWORD PTR [eax],ecx
6400ed4c:	pop    edi
6400ed4d:	mov    DWORD PTR [esi+0xc],ecx
6400ed50:	mov    DWORD PTR [esi+0x10],ecx
6400ed53:	mov    DWORD PTR [esi+0x14],ecx
6400ed56:	mov    al,0x1
6400ed58:	pop    esi
6400ed59:	ret    
6400ed5a:	pop    edi
6400ed5b:	xor    al,al
6400ed5d:	pop    esi
6400ed5e:	ret    
6400ed5f:	int3   
6400ed60:	mov    ecx,DWORD PTR [ebx]
6400ed62:	push   esi
6400ed63:	mov    esi,eax
6400ed65:	add    esi,0x3
6400ed68:	and    esi,0xfffffffc
6400ed6b:	cmp    ecx,esi
6400ed6d:	jae    0x6400eda3
6400ed6f:	push   edi
6400ed70:	mov    edi,DWORD PTR [ebx+0x18]
6400ed73:	cmp    edi,esi
6400ed75:	jae    0x6400ed7d
6400ed77:	add    edi,edi
6400ed79:	cmp    edi,esi
6400ed7b:	jb     0x6400ed77
6400ed7d:	lea    eax,[edi+0x4]
6400ed80:	push   eax
6400ed81:	call   0x64013b03
6400ed86:	mov    edx,DWORD PTR [ebx+0x8]
6400ed89:	mov    DWORD PTR [eax],edx
6400ed8b:	add    esp,0x4
6400ed8e:	sub    edi,esi
6400ed90:	lea    ecx,[eax+0x4]
6400ed93:	mov    DWORD PTR [ebx+0x8],eax
6400ed96:	lea    eax,[ecx+esi*1]
6400ed99:	mov    DWORD PTR [ebx],edi
6400ed9b:	pop    edi
6400ed9c:	mov    DWORD PTR [ebx+0x4],eax
6400ed9f:	mov    eax,ecx
6400eda1:	pop    esi
6400eda2:	ret    
6400eda3:	mov    eax,DWORD PTR [ebx+0x4]
6400eda6:	sub    ecx,esi
6400eda8:	mov    DWORD PTR [ebx],ecx
6400edaa:	lea    ecx,[eax+esi*1]
6400edad:	mov    DWORD PTR [ebx+0x4],ecx
6400edb0:	pop    esi
6400edb1:	ret    
6400edb2:	int3   
6400edb3:	int3   
6400edb4:	int3   
6400edb5:	int3   
6400edb6:	int3   
6400edb7:	int3   
6400edb8:	int3   
6400edb9:	int3   
6400edba:	int3   
6400edbb:	int3   
6400edbc:	int3   
6400edbd:	int3   
6400edbe:	int3   
6400edbf:	int3   
6400edc0:	push   ebx
6400edc1:	mov    DWORD PTR [esi],0x6
6400edc7:	mov    DWORD PTR [esi+0x8],0x0
6400edce:	mov    ebx,DWORD PTR [ecx]
6400edd0:	shl    eax,0x4
6400edd3:	call   0x6400ed60
6400edd8:	mov    DWORD PTR [esi+0xc],eax
6400eddb:	neg    eax
6400eddd:	sbb    eax,eax
6400eddf:	neg    eax
6400ede1:	sub    eax,0x1
6400ede4:	pop    ebx
6400ede5:	ret    
6400ede6:	int3   
6400ede7:	int3   
6400ede8:	int3   
6400ede9:	int3   
6400edea:	int3   
6400edeb:	int3   
6400edec:	int3   
6400eded:	int3   
6400edee:	int3   
6400edef:	int3   
6400edf0:	push   ebx
6400edf1:	mov    DWORD PTR [esi],0x7
6400edf7:	mov    DWORD PTR [esi+0x8],0x0
6400edfe:	mov    ebx,DWORD PTR [ecx]
6400ee00:	shl    eax,0x5
6400ee03:	call   0x6400ed60
6400ee08:	mov    DWORD PTR [esi+0xc],eax
6400ee0b:	neg    eax
6400ee0d:	sbb    eax,eax
6400ee0f:	neg    eax
6400ee11:	sub    eax,0x1
6400ee14:	pop    ebx
6400ee15:	ret    
6400ee16:	int3   
6400ee17:	int3   
6400ee18:	int3   
6400ee19:	int3   
6400ee1a:	int3   
6400ee1b:	int3   
6400ee1c:	int3   
6400ee1d:	int3   
6400ee1e:	int3   
6400ee1f:	int3   
6400ee20:	sub    esp,0x44
6400ee23:	mov    eax,DWORD PTR [esp+0x54]
6400ee27:	mov    edx,DWORD PTR [esp+0x4c]
6400ee2b:	mov    ecx,DWORD PTR [esp+0x48]
6400ee2f:	mov    eax,DWORD PTR [eax]
6400ee31:	push   ebx
6400ee32:	push   ebp
6400ee33:	push   esi
6400ee34:	mov    esi,DWORD PTR [esp+0x5c]
6400ee38:	add    eax,edx
6400ee3a:	add    edx,esi
6400ee3c:	mov    esi,DWORD PTR [ecx+0xc]
6400ee3f:	mov    DWORD PTR [esp+0x18],esi
6400ee43:	mov    esi,DWORD PTR [ecx+0x8]
6400ee46:	mov    ecx,DWORD PTR [ecx+0x10]
6400ee49:	push   edi
6400ee4a:	xor    edi,edi
6400ee4c:	cmp    eax,edx
6400ee4e:	mov    DWORD PTR [esp+0x60],ecx
6400ee52:	mov    DWORD PTR [esp+0x14],eax
6400ee56:	mov    DWORD PTR [esp+0x20],edx
6400ee5a:	mov    DWORD PTR [esp+0x18],esi
6400ee5e:	lea    ecx,[edi+0x20]
6400ee61:	je     0x6400f6e1
6400ee67:	mov    ebp,DWORD PTR [esp+0x38]
6400ee6b:	jmp    0x6400ee70
6400ee6d:	lea    ecx,[ecx+0x0]
6400ee70:	mov    eax,DWORD PTR [esp+0x18]
6400ee74:	test   eax,eax
6400ee76:	mov    ebx,DWORD PTR [esp+0x14]
6400ee7a:	jne    0x6400ef8f
6400ee80:	mov    al,BYTE PTR [ebx]
6400ee82:	cmp    al,0x7f
6400ee84:	ja     0x6400ee9a
6400ee86:	movzx  eax,al
6400ee89:	cdq    
6400ee8a:	mov    ebx,0x2
6400ee8f:	mov    ebp,eax
6400ee91:	mov    DWORD PTR [esp+0x3c],edx
6400ee95:	jmp    0x6400f56c
6400ee9a:	cmp    al,0xe0
6400ee9c:	jb     0x6400eec2
6400ee9e:	cmp    al,0xff
6400eea0:	ja     0x6400eec2
6400eea2:	test   al,al
6400eea4:	movsx  eax,al
6400eea7:	cdq    
6400eea8:	mov    ebp,eax
6400eeaa:	mov    DWORD PTR [esp+0x3c],edx
6400eeae:	mov    DWORD PTR [esp+0x38],ebp
6400eeb2:	jl     0x6400f1cb
6400eeb8:	mov    ebx,0x2
6400eebd:	jmp    0x6400f570
6400eec2:	cmp    al,0xc0
6400eec4:	jb     0x6400ef5e
6400eeca:	cmp    al,0xdf
6400eecc:	ja     0x6400ef5e
6400eed2:	movzx  eax,al
6400eed5:	lea    ecx,[eax-0xc0]
6400eedb:	cmp    ecx,0x1f
6400eede:	ja     0x6400f6e5
6400eee4:	movzx  ecx,BYTE PTR [ecx+0x6400f730]
6400eeeb:	jmp    DWORD PTR [ecx*4+0x6400f718]
6400eef2:	xor    ebx,ebx
6400eef4:	jmp    0x6400f570
6400eef9:	mov    BYTE PTR [esp+0x38],0x0
6400eefe:	mov    ebp,DWORD PTR [esp+0x38]
6400ef02:	mov    ebx,0x1
6400ef07:	jmp    0x6400f570
6400ef0c:	mov    ebx,0x1
6400ef11:	mov    BYTE PTR [esp+0x38],bl
6400ef15:	mov    ebp,DWORD PTR [esp+0x38]
6400ef19:	jmp    0x6400f570
6400ef1e:	mov    ecx,eax
6400ef20:	and    ecx,0x3
6400ef23:	mov    esi,0x1
6400ef28:	shl    esi,cl
6400ef2a:	and    eax,0x1f
6400ef2d:	add    ebx,0x1
6400ef30:	mov    DWORD PTR [esp+0x18],eax
6400ef34:	mov    DWORD PTR [esp+0x1c],esi
6400ef38:	mov    DWORD PTR [esp+0x14],ebx
6400ef3c:	jmp    0x6400ef93
6400ef3e:	mov    ecx,eax
6400ef40:	and    ecx,0x1
6400ef43:	mov    esi,0x2
6400ef48:	shl    esi,cl
6400ef4a:	and    eax,0x1f
6400ef4d:	add    ebx,0x1
6400ef50:	mov    DWORD PTR [esp+0x18],eax
6400ef54:	mov    DWORD PTR [esp+0x1c],esi
6400ef58:	mov    DWORD PTR [esp+0x14],ebx
6400ef5c:	jmp    0x6400ef93
6400ef5e:	cmp    al,0xa0
6400ef60:	jb     0x6400f4c2
6400ef66:	cmp    al,0xbf
6400ef68:	ja     0x6400f4c2
6400ef6e:	and    eax,0x1f
6400ef71:	mov    esi,eax
6400ef73:	mov    DWORD PTR [esp+0x1c],esi
6400ef77:	je     0x6400f26d
6400ef7d:	mov    eax,0x20
6400ef82:	add    ebx,0x1
6400ef85:	mov    DWORD PTR [esp+0x18],eax
6400ef89:	mov    DWORD PTR [esp+0x14],ebx
6400ef8d:	jmp    0x6400ef93
6400ef8f:	mov    esi,DWORD PTR [esp+0x1c]
6400ef93:	mov    ecx,edx
6400ef95:	sub    ecx,ebx
6400ef97:	cmp    ecx,esi
6400ef99:	jb     0x6400f6e1
6400ef9f:	mov    edi,ebx
6400efa1:	add    eax,0xfffffff6
6400efa4:	cmp    eax,0x16
6400efa7:	lea    ebx,[ebx+esi*1-0x1]
6400efab:	mov    DWORD PTR [esp+0x14],ebx
6400efaf:	ja     0x6400f6e5
6400efb5:	jmp    DWORD PTR [eax*4+0x6400f750]
6400efbc:	xor    eax,eax
6400efbe:	mov    ah,BYTE PTR [edi]
6400efc0:	mov    al,BYTE PTR [edi+0x1]
6400efc3:	mov    esi,eax
6400efc5:	test   esi,esi
6400efc7:	jmp    0x6400ef73
6400efc9:	movzx  eax,BYTE PTR [edi+0x2]
6400efcd:	xor    ecx,ecx
6400efcf:	mov    ch,BYTE PTR [edi]
6400efd1:	mov    cl,BYTE PTR [edi+0x1]
6400efd4:	shl    ecx,0x8
6400efd7:	or     ecx,eax
6400efd9:	movzx  eax,BYTE PTR [edi+0x3]
6400efdd:	shl    ecx,0x8
6400efe0:	or     ecx,eax
6400efe2:	mov    esi,ecx
6400efe4:	jmp    0x6400ef73
6400efe6:	movzx  edx,BYTE PTR [edi+0x2]
6400efea:	movzx  eax,BYTE PTR [edi+0x3]
6400efee:	xor    ecx,ecx
6400eff0:	mov    ch,BYTE PTR [edi]
6400eff2:	mov    ebx,0x4
6400eff7:	mov    cl,BYTE PTR [edi+0x1]
6400effa:	shl    ecx,0x8
6400effd:	or     ecx,edx
6400efff:	shl    ecx,0x8
6400f002:	or     ecx,eax
6400f004:	mov    DWORD PTR [esp+0x24],ecx
6400f008:	fld    DWORD PTR [esp+0x24]
6400f00c:	fstp   QWORD PTR [esp+0x38]
6400f010:	mov    ebp,DWORD PTR [esp+0x38]
6400f014:	jmp    0x6400f570
6400f019:	movzx  eax,BYTE PTR [edi]
6400f01c:	cdq    
6400f01d:	shld   edx,eax,0x8
6400f021:	shl    eax,0x8
6400f024:	mov    ecx,eax
6400f026:	movzx  eax,BYTE PTR [edi+0x1]
6400f02a:	mov    esi,edx
6400f02c:	cdq    
6400f02d:	or     ecx,eax
6400f02f:	movzx  eax,BYTE PTR [edi+0x2]
6400f033:	or     esi,edx
6400f035:	shld   esi,ecx,0x8
6400f039:	shl    ecx,0x8
6400f03c:	cdq    
6400f03d:	or     ecx,eax
6400f03f:	movzx  eax,BYTE PTR [edi+0x3]
6400f043:	or     esi,edx
6400f045:	shld   esi,ecx,0x8
6400f049:	shl    ecx,0x8
6400f04c:	cdq    
6400f04d:	or     ecx,eax
6400f04f:	movzx  eax,BYTE PTR [edi+0x4]
6400f053:	or     esi,edx
6400f055:	shld   esi,ecx,0x8
6400f059:	shl    ecx,0x8
6400f05c:	cdq    
6400f05d:	or     ecx,eax
6400f05f:	movzx  eax,BYTE PTR [edi+0x5]
6400f063:	or     esi,edx
6400f065:	shld   esi,ecx,0x8
6400f069:	shl    ecx,0x8
6400f06c:	cdq    
6400f06d:	or     ecx,eax
6400f06f:	movzx  eax,BYTE PTR [edi+0x6]
6400f073:	or     esi,edx
6400f075:	shld   esi,ecx,0x8
6400f079:	shl    ecx,0x8
6400f07c:	cdq    
6400f07d:	or     ecx,eax
6400f07f:	movzx  eax,BYTE PTR [edi+0x7]
6400f083:	or     esi,edx
6400f085:	shld   esi,ecx,0x8
6400f089:	cdq    
6400f08a:	shl    ecx,0x8
6400f08d:	or     ecx,eax
6400f08f:	or     esi,edx
6400f091:	mov    DWORD PTR [esp+0x28],ecx
6400f095:	mov    DWORD PTR [esp+0x2c],esi
6400f099:	mov    ebx,0x4
6400f09e:	fld    QWORD PTR [esp+0x28]
6400f0a2:	fstp   QWORD PTR [esp+0x38]
6400f0a6:	mov    ebp,DWORD PTR [esp+0x38]
6400f0aa:	jmp    0x6400f570
6400f0af:	movzx  eax,BYTE PTR [edi]
6400f0b2:	cdq    
6400f0b3:	mov    ebx,0x2
6400f0b8:	mov    ebp,eax
6400f0ba:	mov    DWORD PTR [esp+0x3c],edx
6400f0be:	jmp    0x6400f56c
6400f0c3:	xor    edx,edx
6400f0c5:	mov    dh,BYTE PTR [edi]
6400f0c7:	mov    ebx,0x2
6400f0cc:	mov    dl,BYTE PTR [edi+0x1]
6400f0cf:	movzx  eax,dx
6400f0d2:	cdq    
6400f0d3:	mov    ebp,eax
6400f0d5:	mov    DWORD PTR [esp+0x3c],edx
6400f0d9:	jmp    0x6400f56c
6400f0de:	movzx  ecx,BYTE PTR [edi+0x2]
6400f0e2:	movzx  edx,BYTE PTR [edi+0x3]
6400f0e6:	xor    eax,eax
6400f0e8:	mov    ah,BYTE PTR [edi]
6400f0ea:	mov    ebx,0x2
6400f0ef:	mov    DWORD PTR [esp+0x3c],0x0
6400f0f7:	mov    al,BYTE PTR [edi+0x1]
6400f0fa:	shl    eax,0x8
6400f0fd:	or     eax,ecx
6400f0ff:	shl    eax,0x8
6400f102:	or     eax,edx
6400f104:	mov    ebp,eax
6400f106:	jmp    0x6400f56c
6400f10b:	movzx  eax,BYTE PTR [edi]
6400f10e:	cdq    
6400f10f:	shld   edx,eax,0x8
6400f113:	shl    eax,0x8
6400f116:	mov    ecx,eax
6400f118:	movzx  eax,BYTE PTR [edi+0x1]
6400f11c:	mov    esi,edx
6400f11e:	cdq    
6400f11f:	or     ecx,eax
6400f121:	movzx  eax,BYTE PTR [edi+0x2]
6400f125:	or     esi,edx
6400f127:	shld   esi,ecx,0x8
6400f12b:	shl    ecx,0x8
6400f12e:	cdq    
6400f12f:	or     ecx,eax
6400f131:	movzx  eax,BYTE PTR [edi+0x3]
6400f135:	or     esi,edx
6400f137:	shld   esi,ecx,0x8
6400f13b:	shl    ecx,0x8
6400f13e:	cdq    
6400f13f:	or     ecx,eax
6400f141:	movzx  eax,BYTE PTR [edi+0x4]
6400f145:	or     esi,edx
6400f147:	shld   esi,ecx,0x8
6400f14b:	shl    ecx,0x8
6400f14e:	cdq    
6400f14f:	or     ecx,eax
6400f151:	movzx  eax,BYTE PTR [edi+0x5]
6400f155:	or     esi,edx
6400f157:	shld   esi,ecx,0x8
6400f15b:	shl    ecx,0x8
6400f15e:	cdq    
6400f15f:	or     ecx,eax
6400f161:	movzx  eax,BYTE PTR [edi+0x6]
6400f165:	or     esi,edx
6400f167:	shld   esi,ecx,0x8
6400f16b:	cdq    
6400f16c:	shl    ecx,0x8
6400f16f:	or     ecx,eax
6400f171:	movzx  eax,BYTE PTR [edi+0x7]
6400f175:	or     esi,edx
6400f177:	mov    ebp,ecx
6400f179:	mov    ecx,esi
6400f17b:	shld   ecx,ebp,0x8
6400f17f:	cdq    
6400f180:	shl    ebp,0x8
6400f183:	or     ebp,eax
6400f185:	mov    ebx,0x2
6400f18a:	or     ecx,edx
6400f18c:	jmp    0x6400f568
6400f191:	mov    al,BYTE PTR [edi]
6400f193:	jmp    0x6400eea2
6400f198:	xor    edx,edx
6400f19a:	mov    dh,BYTE PTR [edi]
6400f19c:	mov    dl,BYTE PTR [edi+0x1]
6400f19f:	movzx  eax,dx
6400f1a2:	test   ax,ax
6400f1a5:	movsx  eax,ax
6400f1a8:	jmp    0x6400eea7
6400f1ad:	movzx  ecx,BYTE PTR [edi+0x2]
6400f1b1:	movzx  edx,BYTE PTR [edi+0x3]
6400f1b5:	xor    eax,eax
6400f1b7:	mov    ah,BYTE PTR [edi]
6400f1b9:	mov    al,BYTE PTR [edi+0x1]
6400f1bc:	shl    eax,0x8
6400f1bf:	or     eax,ecx
6400f1c1:	shl    eax,0x8
6400f1c4:	or     eax,edx
6400f1c6:	jmp    0x6400eea7
6400f1cb:	mov    ebx,0x3
6400f1d0:	jmp    0x6400f570
6400f1d5:	movzx  eax,BYTE PTR [edi]
6400f1d8:	cdq    
6400f1d9:	shld   edx,eax,0x8
6400f1dd:	shl    eax,0x8
6400f1e0:	mov    ecx,eax
6400f1e2:	movzx  eax,BYTE PTR [edi+0x1]
6400f1e6:	mov    esi,edx
6400f1e8:	cdq    
6400f1e9:	or     ecx,eax
6400f1eb:	movzx  eax,BYTE PTR [edi+0x2]
6400f1ef:	or     esi,edx
6400f1f1:	shld   esi,ecx,0x8
6400f1f5:	shl    ecx,0x8
6400f1f8:	cdq    
6400f1f9:	or     ecx,eax
6400f1fb:	movzx  eax,BYTE PTR [edi+0x3]
6400f1ff:	or     esi,edx
6400f201:	shld   esi,ecx,0x8
6400f205:	shl    ecx,0x8
6400f208:	cdq    
6400f209:	or     ecx,eax
6400f20b:	movzx  eax,BYTE PTR [edi+0x4]
6400f20f:	or     esi,edx
6400f211:	shld   esi,ecx,0x8
6400f215:	shl    ecx,0x8
6400f218:	cdq    
6400f219:	or     ecx,eax
6400f21b:	movzx  eax,BYTE PTR [edi+0x5]
6400f21f:	or     esi,edx
6400f221:	shld   esi,ecx,0x8
6400f225:	shl    ecx,0x8
6400f228:	cdq    
6400f229:	or     ecx,eax
6400f22b:	movzx  eax,BYTE PTR [edi+0x6]
6400f22f:	or     esi,edx
6400f231:	shld   esi,ecx,0x8
6400f235:	cdq    
6400f236:	shl    ecx,0x8
6400f239:	or     ecx,eax
6400f23b:	movzx  eax,BYTE PTR [edi+0x7]
6400f23f:	or     esi,edx
6400f241:	mov    ebp,ecx
6400f243:	mov    ecx,esi
6400f245:	shld   ecx,ebp,0x8
6400f249:	cdq    
6400f24a:	shl    ebp,0x8
6400f24d:	or     ebp,eax
6400f24f:	or     ecx,edx
6400f251:	jl     0x6400f263
6400f253:	jg     0x6400f259
6400f255:	test   ebp,ebp
6400f257:	jb     0x6400f263
6400f259:	mov    ebx,0x2
6400f25e:	jmp    0x6400f568
6400f263:	mov    ebx,0x3
6400f268:	jmp    0x6400f568
6400f26d:	mov    edx,DWORD PTR [esp+0x58]
6400f271:	mov    ebx,0x5
6400f276:	mov    DWORD PTR [esp+0x3c],edi
6400f27a:	mov    ebp,esi
6400f27c:	mov    BYTE PTR [edx+0x4],0x1
6400f280:	jmp    0x6400f56c
6400f285:	cmp    DWORD PTR [esp+0x60],0x20
6400f28a:	jae    0x6400f6e5
6400f290:	mov    eax,DWORD PTR [esp+0x60]
6400f294:	mov    ecx,DWORD PTR [esp+0x58]
6400f298:	lea    eax,[eax+eax*4]
6400f29b:	lea    esi,[ecx+eax*8+0x18]
6400f29f:	xor    eax,eax
6400f2a1:	mov    ah,BYTE PTR [edi]
6400f2a3:	mov    al,BYTE PTR [edi+0x1]
6400f2a6:	mov    DWORD PTR [esi],0x6
6400f2ac:	mov    DWORD PTR [esi+0x8],0x0
6400f2b3:	mov    ebx,DWORD PTR [ecx]
6400f2b5:	shl    eax,0x4
6400f2b8:	call   0x6400ed60
6400f2bd:	test   eax,eax
6400f2bf:	mov    DWORD PTR [esi+0xc],eax
6400f2c2:	je     0x6400f6e5
6400f2c8:	xor    ecx,ecx
6400f2ca:	mov    ch,BYTE PTR [edi]
6400f2cc:	mov    cl,BYTE PTR [edi+0x1]
6400f2cf:	test   cx,cx
6400f2d2:	jne    0x6400f2e9
6400f2d4:	mov    edx,DWORD PTR [esi+0x4]
6400f2d7:	mov    ebx,DWORD PTR [esi]
6400f2d9:	mov    ebp,DWORD PTR [esi+0x8]
6400f2dc:	mov    DWORD PTR [esp+0x34],edx
6400f2e0:	mov    DWORD PTR [esp+0x3c],eax
6400f2e4:	jmp    0x6400f56c
6400f2e9:	xor    ecx,ecx
6400f2eb:	add    DWORD PTR [esp+0x60],0x1
6400f2f0:	mov    DWORD PTR [esi+0x14],0x0
6400f2f7:	mov    ch,BYTE PTR [edi]
6400f2f9:	mov    cl,BYTE PTR [edi+0x1]
6400f2fc:	mov    DWORD PTR [esi+0x10],ecx
6400f2ff:	jmp    0x6400f69a
6400f304:	cmp    DWORD PTR [esp+0x60],0x20
6400f309:	jae    0x6400f6e5
6400f30f:	mov    eax,DWORD PTR [esp+0x60]
6400f313:	mov    ecx,DWORD PTR [esp+0x58]
6400f317:	lea    edx,[eax+eax*4]
6400f31a:	xor    eax,eax
6400f31c:	mov    ah,BYTE PTR [edi]
6400f31e:	lea    esi,[ecx+edx*8+0x18]
6400f322:	movzx  edx,BYTE PTR [edi+0x2]
6400f326:	mov    al,BYTE PTR [edi+0x1]
6400f329:	shl    eax,0x8
6400f32c:	or     eax,edx
6400f32e:	movzx  edx,BYTE PTR [edi+0x3]
6400f332:	shl    eax,0x8
6400f335:	or     eax,edx
6400f337:	mov    DWORD PTR [esi],0x6
6400f33d:	mov    DWORD PTR [esi+0x8],0x0
6400f344:	mov    ebx,DWORD PTR [ecx]
6400f346:	shl    eax,0x4
6400f349:	call   0x6400ed60
6400f34e:	test   eax,eax
6400f350:	mov    DWORD PTR [esi+0xc],eax
6400f353:	je     0x6400f6e5
6400f359:	movzx  ecx,BYTE PTR [edi+0x2]
6400f35d:	movzx  edx,BYTE PTR [edi+0x3]
6400f361:	xor    eax,eax
6400f363:	mov    ah,BYTE PTR [edi]
6400f365:	mov    al,BYTE PTR [edi+0x1]
6400f368:	shl    eax,0x8
6400f36b:	or     eax,ecx
6400f36d:	shl    eax,0x8
6400f370:	or     eax,edx
6400f372:	je     0x6400f559
6400f378:	xor    edx,edx
6400f37a:	mov    DWORD PTR [esi+0x14],0x0
6400f381:	mov    dh,BYTE PTR [edi]
6400f383:	movzx  eax,BYTE PTR [edi+0x2]
6400f387:	movzx  ecx,BYTE PTR [edi+0x3]
6400f38b:	mov    dl,BYTE PTR [edi+0x1]
6400f38e:	shl    edx,0x8
6400f391:	or     edx,eax
6400f393:	shl    edx,0x8
6400f396:	or     edx,ecx
6400f398:	add    DWORD PTR [esp+0x60],0x1
6400f39d:	jmp    0x6400f697
6400f3a2:	cmp    DWORD PTR [esp+0x60],0x20
6400f3a7:	jae    0x6400f6e5
6400f3ad:	mov    eax,DWORD PTR [esp+0x60]
6400f3b1:	mov    ecx,DWORD PTR [esp+0x58]
6400f3b5:	lea    edx,[eax+eax*4]
6400f3b8:	xor    eax,eax
6400f3ba:	mov    ah,BYTE PTR [edi]
6400f3bc:	lea    esi,[ecx+edx*8+0x18]
6400f3c0:	mov    al,BYTE PTR [edi+0x1]
6400f3c3:	mov    DWORD PTR [esi],0x7
6400f3c9:	mov    DWORD PTR [esi+0x8],0x0
6400f3d0:	mov    ebx,DWORD PTR [ecx]
6400f3d2:	shl    eax,0x5
6400f3d5:	call   0x6400ed60
6400f3da:	test   eax,eax
6400f3dc:	mov    DWORD PTR [esi+0xc],eax
6400f3df:	je     0x6400f6e5
6400f3e5:	xor    eax,eax
6400f3e7:	mov    ah,BYTE PTR [edi]
6400f3e9:	mov    al,BYTE PTR [edi+0x1]
6400f3ec:	test   ax,ax
6400f3ef:	jne    0x6400f409
6400f3f1:	mov    ecx,DWORD PTR [esi+0x4]
6400f3f4:	mov    edx,DWORD PTR [esi+0xc]
6400f3f7:	mov    ebx,DWORD PTR [esi]
6400f3f9:	mov    ebp,DWORD PTR [esi+0x8]
6400f3fc:	mov    DWORD PTR [esp+0x34],ecx
6400f400:	mov    DWORD PTR [esp+0x3c],edx
6400f404:	jmp    0x6400f56c
6400f409:	xor    ecx,ecx
6400f40b:	mov    eax,0x1
6400f410:	add    DWORD PTR [esp+0x60],eax
6400f414:	mov    DWORD PTR [esi+0x14],eax
6400f417:	mov    ch,BYTE PTR [edi]
6400f419:	mov    cl,BYTE PTR [edi+0x1]
6400f41c:	mov    DWORD PTR [esi+0x10],ecx
6400f41f:	jmp    0x6400f69a
6400f424:	cmp    DWORD PTR [esp+0x60],0x20
6400f429:	jae    0x6400f6e5
6400f42f:	mov    eax,DWORD PTR [esp+0x60]
6400f433:	mov    ecx,DWORD PTR [esp+0x58]
6400f437:	lea    edx,[eax+eax*4]
6400f43a:	xor    eax,eax
6400f43c:	mov    ah,BYTE PTR [edi]
6400f43e:	lea    esi,[ecx+edx*8+0x18]
6400f442:	movzx  edx,BYTE PTR [edi+0x2]
6400f446:	mov    al,BYTE PTR [edi+0x1]
6400f449:	shl    eax,0x8
6400f44c:	or     eax,edx
6400f44e:	movzx  edx,BYTE PTR [edi+0x3]
6400f452:	shl    eax,0x8
6400f455:	or     eax,edx
6400f457:	mov    DWORD PTR [esi],0x7
6400f45d:	mov    DWORD PTR [esi+0x8],0x0
6400f464:	mov    ebx,DWORD PTR [ecx]
6400f466:	shl    eax,0x5
6400f469:	call   0x6400ed60
6400f46e:	test   eax,eax
6400f470:	mov    DWORD PTR [esi+0xc],eax
6400f473:	je     0x6400f6e5
6400f479:	movzx  ecx,BYTE PTR [edi+0x2]
6400f47d:	movzx  edx,BYTE PTR [edi+0x3]
6400f481:	xor    eax,eax
6400f483:	mov    ah,BYTE PTR [edi]
6400f485:	mov    al,BYTE PTR [edi+0x1]
6400f488:	shl    eax,0x8
6400f48b:	or     eax,ecx
6400f48d:	shl    eax,0x8
6400f490:	or     eax,edx
6400f492:	je     0x6400f559
6400f498:	xor    edx,edx
6400f49a:	mov    eax,0x1
6400f49f:	mov    DWORD PTR [esi+0x14],eax
6400f4a2:	mov    dh,BYTE PTR [edi]
6400f4a4:	movzx  ecx,BYTE PTR [edi+0x2]
6400f4a8:	mov    dl,BYTE PTR [edi+0x1]
6400f4ab:	shl    edx,0x8
6400f4ae:	or     edx,ecx
6400f4b0:	movzx  ecx,BYTE PTR [edi+0x3]
6400f4b4:	shl    edx,0x8
6400f4b7:	or     edx,ecx
6400f4b9:	add    DWORD PTR [esp+0x60],eax
6400f4bd:	jmp    0x6400f697
6400f4c2:	cmp    al,0x90
6400f4c4:	jb     0x6400f513
6400f4c6:	cmp    al,0x9f
6400f4c8:	ja     0x6400f513
6400f4ca:	cmp    DWORD PTR [esp+0x60],ecx
6400f4ce:	jae    0x6400f6e5
6400f4d4:	mov    ecx,DWORD PTR [esp+0x60]
6400f4d8:	lea    edx,[ecx+ecx*4]
6400f4db:	mov    ecx,DWORD PTR [esp+0x58]
6400f4df:	lea    esi,[ecx+edx*8+0x18]
6400f4e3:	and    eax,0xf
6400f4e6:	call   0x6400edc0
6400f4eb:	test   eax,eax
6400f4ed:	jl     0x6400f6e5
6400f4f3:	mov    eax,DWORD PTR [esp+0x14]
6400f4f7:	test   BYTE PTR [eax],0xf
6400f4fa:	je     0x6400f559
6400f4fc:	mov    DWORD PTR [esi+0x14],0x0
6400f503:	movzx  edx,BYTE PTR [eax]
6400f506:	and    edx,0xf
6400f509:	add    DWORD PTR [esp+0x60],0x1
6400f50e:	jmp    0x6400f697
6400f513:	cmp    al,0x80
6400f515:	jb     0x6400f6e5
6400f51b:	cmp    al,0x8f
6400f51d:	ja     0x6400f6e5
6400f523:	cmp    DWORD PTR [esp+0x60],ecx
6400f527:	jae    0x6400f6e5
6400f52d:	mov    ecx,DWORD PTR [esp+0x60]
6400f531:	lea    edx,[ecx+ecx*4]
6400f534:	mov    ecx,DWORD PTR [esp+0x58]
6400f538:	lea    esi,[ecx+edx*8+0x18]
6400f53c:	and    eax,0xf
6400f53f:	call   0x6400edf0
6400f544:	test   eax,eax
6400f546:	jl     0x6400f6e5
6400f54c:	mov    eax,DWORD PTR [esp+0x14]
6400f550:	test   BYTE PTR [eax],0xf
6400f553:	jne    0x6400f685
6400f559:	mov    eax,DWORD PTR [esi+0x4]
6400f55c:	mov    ecx,DWORD PTR [esi+0xc]
6400f55f:	mov    ebp,DWORD PTR [esi+0x8]
6400f562:	mov    ebx,DWORD PTR [esi]
6400f564:	mov    DWORD PTR [esp+0x34],eax
6400f568:	mov    DWORD PTR [esp+0x3c],ecx
6400f56c:	mov    DWORD PTR [esp+0x38],ebp
6400f570:	mov    eax,DWORD PTR [esp+0x60]
6400f574:	lea    edx,[eax+eax*4]
6400f577:	mov    eax,DWORD PTR [esp+0x58]
6400f57b:	lea    edx,[eax+edx*8+0x18]
6400f57f:	lea    eax,[edx-0x28]
6400f582:	add    edx,0xfffffff0
6400f585:	mov    esi,0x1
6400f58a:	lea    ebx,[ebx+0x0]
6400f590:	cmp    DWORD PTR [esp+0x60],0x0
6400f595:	je     0x6400f6c1
6400f59b:	mov    ecx,DWORD PTR [eax+0x14]
6400f59e:	sub    ecx,0x0
6400f5a1:	je     0x6400f61d
6400f5a3:	sub    ecx,esi
6400f5a5:	je     0x6400f668
6400f5ab:	sub    ecx,esi
6400f5ad:	jne    0x6400f6e5
6400f5b3:	mov    ecx,DWORD PTR [edx+0x4]
6400f5b6:	mov    esi,DWORD PTR [edx]
6400f5b8:	mov    DWORD PTR [esp+0x44],ecx
6400f5bc:	mov    ecx,DWORD PTR [edx+0x8]
6400f5bf:	mov    DWORD PTR [esp+0x48],ecx
6400f5c3:	mov    ecx,DWORD PTR [edx+0xc]
6400f5c6:	mov    DWORD PTR [esp+0x4c],ecx
6400f5ca:	mov    ecx,DWORD PTR [eax+0x8]
6400f5cd:	shl    ecx,0x5
6400f5d0:	add    ecx,DWORD PTR [eax+0xc]
6400f5d3:	mov    DWORD PTR [ecx],esi
6400f5d5:	mov    esi,DWORD PTR [esp+0x44]
6400f5d9:	mov    DWORD PTR [ecx+0x4],esi
6400f5dc:	mov    esi,DWORD PTR [esp+0x48]
6400f5e0:	mov    DWORD PTR [ecx+0x8],esi
6400f5e3:	mov    esi,DWORD PTR [esp+0x4c]
6400f5e7:	mov    DWORD PTR [ecx+0xc],esi
6400f5ea:	mov    ecx,DWORD PTR [eax+0x8]
6400f5ed:	mov    esi,DWORD PTR [eax+0xc]
6400f5f0:	shl    ecx,0x5
6400f5f3:	lea    ecx,[ecx+esi*1+0x10]
6400f5f7:	mov    esi,DWORD PTR [esp+0x34]
6400f5fb:	mov    DWORD PTR [ecx],ebx
6400f5fd:	mov    DWORD PTR [ecx+0x4],esi
6400f600:	mov    esi,DWORD PTR [esp+0x3c]
6400f604:	mov    DWORD PTR [ecx+0x8],ebp
6400f607:	mov    DWORD PTR [ecx+0xc],esi
6400f60a:	mov    esi,0x1
6400f60f:	add    DWORD PTR [eax+0x8],esi
6400f612:	add    DWORD PTR [eax+0x10],0xffffffff
6400f616:	je     0x6400f642
6400f618:	mov    DWORD PTR [eax+0x14],esi
6400f61b:	jmp    0x6400f69a
6400f61d:	mov    ecx,DWORD PTR [eax+0x8]
6400f620:	shl    ecx,0x4
6400f623:	add    ecx,DWORD PTR [eax+0xc]
6400f626:	mov    DWORD PTR [ecx],ebx
6400f628:	mov    ebx,DWORD PTR [esp+0x34]
6400f62c:	mov    DWORD PTR [ecx+0x4],ebx
6400f62f:	mov    ebx,DWORD PTR [esp+0x3c]
6400f633:	mov    DWORD PTR [ecx+0x8],ebp
6400f636:	mov    DWORD PTR [ecx+0xc],ebx
6400f639:	add    DWORD PTR [eax+0x8],esi
6400f63c:	add    DWORD PTR [eax+0x10],0xffffffff
6400f640:	jne    0x6400f69a
6400f642:	mov    ecx,DWORD PTR [eax+0x4]
6400f645:	mov    ebp,DWORD PTR [eax+0x8]
6400f648:	mov    ebx,DWORD PTR [eax]
6400f64a:	sub    DWORD PTR [esp+0x60],esi
6400f64e:	mov    DWORD PTR [esp+0x34],ecx
6400f652:	mov    ecx,DWORD PTR [eax+0xc]
6400f655:	sub    eax,0x28
6400f658:	mov    DWORD PTR [esp+0x38],ebp
6400f65c:	mov    DWORD PTR [esp+0x3c],ecx
6400f660:	sub    edx,0x28
6400f663:	jmp    0x6400f590
6400f668:	mov    edx,DWORD PTR [esp+0x34]
6400f66c:	mov    ecx,DWORD PTR [esp+0x3c]
6400f670:	mov    DWORD PTR [eax+0x18],ebx
6400f673:	mov    DWORD PTR [eax+0x1c],edx
6400f676:	mov    DWORD PTR [eax+0x20],ebp
6400f679:	mov    DWORD PTR [eax+0x24],ecx
6400f67c:	mov    DWORD PTR [eax+0x14],0x2
6400f683:	jmp    0x6400f69a
6400f685:	mov    ecx,0x1
6400f68a:	mov    DWORD PTR [esi+0x14],ecx
6400f68d:	movzx  edx,BYTE PTR [eax]
6400f690:	and    edx,0xf
6400f693:	add    DWORD PTR [esp+0x60],ecx
6400f697:	mov    DWORD PTR [esi+0x10],edx
6400f69a:	mov    eax,DWORD PTR [esp+0x14]
6400f69e:	add    eax,0x1
6400f6a1:	cmp    eax,DWORD PTR [esp+0x20]
6400f6a5:	mov    DWORD PTR [esp+0x18],0x0
6400f6ad:	mov    DWORD PTR [esp+0x14],eax
6400f6b1:	je     0x6400f6e1
6400f6b3:	mov    edx,DWORD PTR [esp+0x20]
6400f6b7:	mov    ecx,0x20
6400f6bc:	jmp    0x6400ee70
6400f6c1:	mov    eax,DWORD PTR [esp+0x58]
6400f6c5:	mov    ecx,DWORD PTR [esp+0x34]
6400f6c9:	mov    edx,DWORD PTR [esp+0x3c]
6400f6cd:	add    DWORD PTR [esp+0x14],esi
6400f6d1:	mov    DWORD PTR [eax+0x18],ebx
6400f6d4:	mov    DWORD PTR [eax+0x1c],ecx
6400f6d7:	mov    DWORD PTR [eax+0x20],ebp
6400f6da:	mov    DWORD PTR [eax+0x24],edx
6400f6dd:	mov    eax,esi
6400f6df:	jmp    0x6400f6e8
6400f6e1:	xor    eax,eax
6400f6e3:	jmp    0x6400f6e8
6400f6e5:	or     eax,0xffffffff
6400f6e8:	mov    ecx,DWORD PTR [esp+0x58]
6400f6ec:	mov    edx,DWORD PTR [esp+0x18]
6400f6f0:	mov    DWORD PTR [ecx+0x8],edx
6400f6f3:	mov    edx,DWORD PTR [esp+0x1c]
6400f6f7:	mov    DWORD PTR [ecx+0xc],edx
6400f6fa:	mov    edx,DWORD PTR [esp+0x60]
6400f6fe:	mov    DWORD PTR [ecx+0x10],edx
6400f701:	mov    ecx,DWORD PTR [esp+0x14]
6400f705:	sub    ecx,DWORD PTR [esp+0x5c]
6400f709:	mov    edx,DWORD PTR [esp+0x64]
6400f70d:	pop    edi
6400f70e:	pop    esi
6400f70f:	pop    ebp
6400f710:	mov    DWORD PTR [edx],ecx
6400f712:	pop    ebx
6400f713:	add    esp,0x44
6400f716:	ret    
6400f717:	nop
6400f718:	repnz out dx,al
6400f71a:	add    BYTE PTR [ecx+edi*8-0x12],ah
6400f71e:	add    BYTE PTR [esp+ecx*1-0x11],ah
6400f722:	add    BYTE PTR [esi+ebx*1-0x11],ah
6400f726:	add    BYTE PTR [esi+edi*1-0x11],ah
6400f72a:	add    BYTE PTR [ebp+eiz*8-0xa],ah
6400f72e:	add    BYTE PTR [eax+eax*1+0x5],ah
6400f732:	add    DWORD PTR [edx],eax
6400f734:	add    eax,0x5050505
6400f739:	add    eax,0x3030303
6400f73e:	add    eax,DWORD PTR [ebx]
6400f740:	add    eax,DWORD PTR [ebx]
6400f742:	add    eax,DWORD PTR [ebx]
6400f744:	add    eax,0x5050505
6400f749:	add    eax,0x4040404
6400f74e:	add    al,0x4
6400f750:	out    0xef,al
6400f752:	add    BYTE PTR [ecx+ebx*1-0x10],ah
6400f756:	add    BYTE PTR [edi+ebp*4-0x10],ah
6400f75a:	add    BYTE PTR [ebx+eax*8-0x10],ah
6400f75e:	add    BYTE PTR [esi+ebx*8-0x10],ah
6400f762:	add    BYTE PTR [ebx+ecx*1-0xf],ah
6400f766:	add    BYTE PTR [ecx+edx*4-0xf],ah
6400f76a:	add    BYTE PTR [eax+ebx*4-0xf],ah
6400f76e:	add    BYTE PTR [ebp+ebp*4-0xf],ah
6400f772:	add    BYTE PTR [ebp+edx*8-0xf],ah
6400f776:	add    BYTE PTR [ebp+eiz*8-0xa],ah
6400f77a:	add    BYTE PTR [ebp+eiz*8-0xa],ah
6400f77e:	add    BYTE PTR [ebp+eiz*8-0xa],ah
6400f782:	add    BYTE PTR [ebp+eiz*8-0xa],ah
6400f786:	add    BYTE PTR [ebp+eiz*8-0xa],ah
6400f78a:	add    BYTE PTR [ebp+eiz*8-0xa],ah
6400f78e:	add    BYTE PTR [esp+edi*4-0x11],ah
6400f792:	add    BYTE PTR [ecx+ecx*8-0x11],ah
6400f796:	add    BYTE PTR [ebp+eax*4-0xe],ah
6400f79a:	add    BYTE PTR [esp+eax*1-0xd],ah
6400f79e:	add    BYTE PTR [edx+eiz*4-0xd],ah
6400f7a2:	add    BYTE PTR [esp-0xc],ah
6400f7a6:	add    BYTE PTR [ebp+ebp*2-0xe],ah
6400f7aa:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400f7ae:	int3   
6400f7af:	int3   
6400f7b0:	push   ebp
6400f7b1:	mov    ebp,esp
6400f7b3:	and    esp,0xfffffff8
6400f7b6:	sub    esp,0x51c
6400f7bc:	push   ebx
6400f7bd:	push   esi
6400f7be:	mov    esi,DWORD PTR [ebp+0x10]
6400f7c1:	xor    ebx,ebx
6400f7c3:	xor    eax,eax
6400f7c5:	cmp    esi,ebx
6400f7c7:	push   edi
6400f7c8:	mov    DWORD PTR [esp+0xc],eax
6400f7cc:	je     0x6400f7d4
6400f7ce:	mov    eax,DWORD PTR [esi]
6400f7d0:	mov    DWORD PTR [esp+0xc],eax
6400f7d4:	mov    edi,DWORD PTR [ebp+0xc]
6400f7d7:	cmp    edi,eax
6400f7d9:	ja     0x6400f7e4
6400f7db:	xor    eax,eax
6400f7dd:	pop    edi
6400f7de:	pop    esi
6400f7df:	pop    ebx
6400f7e0:	mov    esp,ebp
6400f7e2:	pop    ebp
6400f7e3:	ret    
6400f7e4:	mov    edx,DWORD PTR [ebp+0x8]
6400f7e7:	xor    eax,eax
6400f7e9:	lea    ecx,[esp+0xc]
6400f7ed:	push   ecx
6400f7ee:	mov    DWORD PTR [esp+0x2c],eax
6400f7f2:	mov    DWORD PTR [esp+0x30],eax
6400f7f6:	mov    DWORD PTR [esp+0x34],eax
6400f7fa:	mov    DWORD PTR [esp+0x38],eax
6400f7fe:	mov    eax,DWORD PTR [ebp+0x14]
6400f801:	push   edi
6400f802:	mov    DWORD PTR [esp+0x18],eax
6400f806:	push   edx
6400f807:	lea    eax,[esp+0x1c]
6400f80b:	push   eax
6400f80c:	mov    DWORD PTR [esp+0x28],ebx
6400f810:	mov    DWORD PTR [esp+0x2c],ebx
6400f814:	mov    DWORD PTR [esp+0x30],ebx
6400f818:	mov    BYTE PTR [esp+0x24],bl
6400f81c:	call   0x6400ee20
6400f821:	add    esp,0x10
6400f824:	cmp    eax,ebx
6400f826:	jge    0x6400f832
6400f828:	or     eax,0xffffffff
6400f82b:	pop    edi
6400f82c:	pop    esi
6400f82d:	pop    ebx
6400f82e:	mov    esp,ebp
6400f830:	pop    ebp
6400f831:	ret    
6400f832:	cmp    esi,ebx
6400f834:	mov    ecx,DWORD PTR [esp+0xc]
6400f838:	je     0x6400f83c
6400f83a:	mov    DWORD PTR [esi],ecx
6400f83c:	cmp    eax,ebx
6400f83e:	je     0x6400f7db
6400f840:	mov    eax,DWORD PTR [ebp+0x18]
6400f843:	mov    edx,DWORD PTR [esp+0x28]
6400f847:	mov    DWORD PTR [eax],edx
6400f849:	mov    edx,DWORD PTR [esp+0x2c]
6400f84d:	mov    DWORD PTR [eax+0x4],edx
6400f850:	mov    edx,DWORD PTR [esp+0x30]
6400f854:	mov    DWORD PTR [eax+0x8],edx
6400f857:	mov    edx,DWORD PTR [esp+0x34]
6400f85b:	cmp    ecx,edi
6400f85d:	pop    edi
6400f85e:	mov    DWORD PTR [eax+0xc],edx
6400f861:	sbb    eax,eax
6400f863:	pop    esi
6400f864:	add    eax,0x2
6400f867:	pop    ebx
6400f868:	mov    esp,ebp
6400f86a:	pop    ebp
6400f86b:	ret    
6400f86c:	int3   
6400f86d:	int3   
6400f86e:	int3   
6400f86f:	int3   
6400f870:	mov    eax,DWORD PTR [esp+0x8]
6400f874:	sub    eax,0x1
6400f877:	jne    0x6400f882
6400f879:	mov    eax,DWORD PTR [esp+0x4]
6400f87d:	mov    ds:0x6402e4a4,eax
6400f882:	mov    eax,0x1
6400f887:	ret    0xc
6400f88a:	int3   
6400f88b:	int3   
6400f88c:	int3   
6400f88d:	int3   
6400f88e:	int3   
6400f88f:	int3   
6400f890:	cmp    BYTE PTR ds:0x6402e4a0,0x0
6400f897:	jne    0x6400f8f6
6400f899:	push   esi
6400f89a:	push   edi
6400f89b:	push   0x640253c0
6400f8a0:	mov    BYTE PTR ds:0x6402e4a0,0x1
6400f8a7:	call   DWORD PTR ds:0x64025018
6400f8ad:	push   0x6402539c
6400f8b2:	push   0xb
6400f8b4:	push   0x64025390
6400f8b9:	mov    esi,eax
6400f8bb:	call   0x64005750
6400f8c0:	mov    edi,DWORD PTR ds:0x64025014
6400f8c6:	add    esp,0xc
6400f8c9:	push   eax
6400f8ca:	push   esi
6400f8cb:	call   edi
6400f8cd:	push   0x64025350
6400f8d2:	push   0x19
6400f8d4:	push   0x64025330
6400f8d9:	mov    ds:0x6402e498,eax
6400f8de:	call   0x64005750
6400f8e3:	add    esp,0xc
6400f8e6:	push   eax
6400f8e7:	push   esi
6400f8e8:	call   edi
6400f8ea:	pop    edi
6400f8eb:	mov    ds:0x6402e49c,eax
6400f8f0:	pop    esi
6400f8f1:	jmp    0x64011cd0
6400f8f6:	ret    
6400f8f7:	int3   
6400f8f8:	int3   
6400f8f9:	int3   
6400f8fa:	int3   
6400f8fb:	int3   
6400f8fc:	int3   
6400f8fd:	int3   
6400f8fe:	int3   
6400f8ff:	int3   
6400f900:	call   0x6400f890
6400f905:	mov    eax,ds:0x6402e498
6400f90a:	test   eax,eax
6400f90c:	je     0x6400f910
6400f90e:	jmp    eax
6400f910:	ret    0x8
6400f913:	int3   
6400f914:	int3   
6400f915:	int3   
6400f916:	int3   
6400f917:	int3   
6400f918:	int3   
6400f919:	int3   
6400f91a:	int3   
6400f91b:	int3   
6400f91c:	int3   
6400f91d:	int3   
6400f91e:	int3   
6400f91f:	int3   
6400f920:	call   0x6400f890
6400f925:	mov    eax,ds:0x6402e49c
6400f92a:	test   eax,eax
6400f92c:	je     0x6400f930
6400f92e:	jmp    eax
6400f930:	ret    0x4
6400f933:	int3   
6400f934:	int3   
6400f935:	int3   
6400f936:	int3   
6400f937:	int3   
6400f938:	int3   
6400f939:	int3   
6400f93a:	int3   
6400f93b:	int3   
6400f93c:	int3   
6400f93d:	int3   
6400f93e:	int3   
6400f93f:	int3   
6400f940:	mov    eax,DWORD PTR [esp+0x4]
6400f944:	mov    edx,DWORD PTR [ecx]
6400f946:	mov    DWORD PTR [eax],edx
6400f948:	mov    edx,DWORD PTR [ecx+0x4]
6400f94b:	mov    DWORD PTR [eax+0x4],edx
6400f94e:	mov    edx,DWORD PTR [ecx+0x8]
6400f951:	mov    ecx,DWORD PTR [ecx+0xc]
6400f954:	mov    DWORD PTR [eax+0x8],edx
6400f957:	mov    DWORD PTR [eax+0xc],ecx
6400f95a:	ret    0x4
6400f95d:	int3   
6400f95e:	int3   
6400f95f:	int3   
6400f960:	jmp    0x6401249f
6400f965:	int3   
6400f966:	int3   
6400f967:	int3   
6400f968:	int3   
6400f969:	int3   
6400f96a:	int3   
6400f96b:	int3   
6400f96c:	int3   
6400f96d:	int3   
6400f96e:	int3   
6400f96f:	int3   
6400f970:	push   esi
6400f971:	mov    esi,ecx
6400f973:	call   0x6401249f
6400f978:	test   BYTE PTR [esp+0x8],0x1
6400f97d:	je     0x6400f988
6400f97f:	push   esi
6400f980:	call   0x64012332
6400f985:	add    esp,0x4
6400f988:	mov    eax,esi
6400f98a:	pop    esi
6400f98b:	ret    0x4
6400f98e:	int3   
6400f98f:	int3   
6400f990:	sub    esp,0x804
6400f996:	mov    eax,ds:0x6402d09c
6400f99b:	xor    eax,esp
6400f99d:	mov    DWORD PTR [esp+0x800],eax
6400f9a4:	call   DWORD PTR ds:0x6402504c
6400f9aa:	and    eax,0xff
6400f9af:	cmp    eax,0x5
6400f9b2:	jb     0x6400f9c5
6400f9b4:	push   0x6402542c
6400f9b9:	push   0x400
6400f9be:	lea    eax,[esp+0x8]
6400f9c2:	push   eax
6400f9c3:	jmp    0x6400f9d4
6400f9c5:	push   0x64025420
6400f9ca:	push   0x400
6400f9cf:	lea    ecx,[esp+0x8]
6400f9d3:	push   ecx
6400f9d4:	call   0x64013030
6400f9d9:	add    esp,0xc
6400f9dc:	push   0x64025410
6400f9e1:	lea    edx,[esp+0x4]
6400f9e5:	push   0x400
6400f9ea:	push   edx
6400f9eb:	call   0x64012fb6
6400f9f0:	add    esp,0xc
6400f9f3:	push   0x0
6400f9f5:	push   0x80
6400f9fa:	push   0x3
6400f9fc:	push   0x0
6400f9fe:	push   0x0
6400fa00:	lea    eax,[esp+0x14]
6400fa04:	push   0xc0000000
6400fa09:	push   eax
6400fa0a:	call   0x6400cf00
6400fa0f:	call   eax
6400fa11:	cmp    eax,0xffffffff
6400fa14:	jne    0x6400fa37
6400fa16:	call   DWORD PTR ds:0x64025044
6400fa1c:	cmp    eax,0x20
6400fa1f:	sete   al
6400fa22:	mov    ecx,DWORD PTR [esp+0x800]
6400fa29:	xor    ecx,esp
6400fa2b:	call   0x64012b8c
6400fa30:	add    esp,0x804
6400fa36:	ret    
6400fa37:	push   eax
6400fa38:	call   DWORD PTR ds:0x64025040
6400fa3e:	mov    ecx,DWORD PTR [esp+0x800]
6400fa45:	xor    ecx,esp
6400fa47:	mov    al,0x1
6400fa49:	call   0x64012b8c
6400fa4e:	add    esp,0x804
6400fa54:	ret    
6400fa55:	int3   
6400fa56:	int3   
6400fa57:	int3   
6400fa58:	int3   
6400fa59:	int3   
6400fa5a:	int3   
6400fa5b:	int3   
6400fa5c:	int3   
6400fa5d:	int3   
6400fa5e:	int3   
6400fa5f:	int3   
6400fa60:	push   ebx
6400fa61:	mov    ebx,DWORD PTR ds:0x64025050
6400fa67:	push   esi
6400fa68:	push   edi
6400fa69:	mov    edi,DWORD PTR [esp+0x10]
6400fa6d:	xor    esi,esi
6400fa6f:	nop
6400fa70:	lea    eax,[esp+0x10]
6400fa74:	push   0x0
6400fa76:	push   eax
6400fa77:	mov    DWORD PTR [esp+0x18],0x0
6400fa7f:	call   0x6400da60
6400fa84:	call   eax
6400fa86:	test   eax,eax
6400fa88:	je     0x6400fa99
6400fa8a:	cmp    edi,0xffffffff
6400fa8d:	je     0x6400fa99
6400fa8f:	add    esi,0x3e8
6400fa95:	cmp    esi,edi
6400fa97:	ja     0x6400faa2
6400fa99:	push   0x3e8
6400fa9e:	call   ebx
6400faa0:	jmp    0x6400fa70
6400faa2:	pop    edi
6400faa3:	pop    esi
6400faa4:	mov    al,0x1
6400faa6:	pop    ebx
6400faa7:	ret    
6400faa8:	int3   
6400faa9:	int3   
6400faaa:	int3   
6400faab:	int3   
6400faac:	int3   
6400faad:	int3   
6400faae:	int3   
6400faaf:	int3   
6400fab0:	mov    ecx,DWORD PTR [esp+0x4]
6400fab4:	sub    esp,0xc
6400fab7:	test   ecx,ecx
6400fab9:	ja     0x6400fad1
6400fabb:	xor    ecx,ecx
6400fabd:	lea    edx,[ecx*4+0x0]
6400fac4:	push   edx
6400fac5:	call   0x64012711
6400faca:	add    esp,0x4
6400facd:	add    esp,0xc
6400fad0:	ret    
6400fad1:	or     eax,0xffffffff
6400fad4:	xor    edx,edx
6400fad6:	div    ecx
6400fad8:	cmp    eax,0x4
6400fadb:	jae    0x6400fabd
6400fadd:	lea    eax,[esp+0x10]
6400fae1:	push   eax
6400fae2:	lea    ecx,[esp+0x4]
6400fae6:	mov    DWORD PTR [esp+0x14],0x0
6400faee:	call   0x6401238d
6400faf3:	push   0x6402aba4
6400faf8:	lea    ecx,[esp+0x4]
6400fafc:	push   ecx
6400fafd:	mov    DWORD PTR [esp+0x8],0x64025304
6400fb05:	call   0x6401277b
6400fb0a:	int3   
6400fb0b:	int3   
6400fb0c:	int3   
6400fb0d:	int3   
6400fb0e:	int3   
6400fb0f:	int3   
6400fb10:	push   esi
6400fb11:	mov    esi,DWORD PTR [ecx]
6400fb13:	test   esi,esi
6400fb15:	je     0x6400fb26
6400fb17:	push   esi
6400fb18:	call   0x6400ecc0
6400fb1d:	push   esi
6400fb1e:	call   0x64012332
6400fb23:	add    esp,0x8
6400fb26:	pop    esi
6400fb27:	ret    
6400fb28:	int3   
6400fb29:	int3   
6400fb2a:	int3   
6400fb2b:	int3   
6400fb2c:	int3   
6400fb2d:	int3   
6400fb2e:	int3   
6400fb2f:	int3   
6400fb30:	push   esi
6400fb31:	mov    esi,DWORD PTR [ecx+0x10]
6400fb34:	test   esi,esi
6400fb36:	je     0x6400fb47
6400fb38:	push   esi
6400fb39:	call   0x6400ecc0
6400fb3e:	push   esi
6400fb3f:	call   0x64012332
6400fb44:	add    esp,0x8
6400fb47:	pop    esi
6400fb48:	ret    
6400fb49:	int3   
6400fb4a:	int3   
6400fb4b:	int3   
6400fb4c:	int3   
6400fb4d:	int3   
6400fb4e:	int3   
6400fb4f:	int3   
6400fb50:	mov    ecx,DWORD PTR [esp+0x8]
6400fb54:	test   ecx,ecx
6400fb56:	jne    0x6400fb62
6400fb58:	push   0x80004005
6400fb5d:	call   0x64001040
6400fb62:	mov    eax,DWORD PTR [esp+0x4]
6400fb66:	mov    eax,DWORD PTR [eax]
6400fb68:	mov    dx,WORD PTR [eax]
6400fb6b:	cmp    dx,WORD PTR [ecx]
6400fb6e:	jne    0x6400fb96
6400fb70:	test   dx,dx
6400fb73:	je     0x6400fb8a
6400fb75:	mov    dx,WORD PTR [eax+0x2]
6400fb79:	cmp    dx,WORD PTR [ecx+0x2]
6400fb7d:	jne    0x6400fb96
6400fb7f:	add    eax,0x4
6400fb82:	add    ecx,0x4
6400fb85:	test   dx,dx
6400fb88:	jne    0x6400fb68
6400fb8a:	xor    eax,eax
6400fb8c:	xor    ecx,ecx
6400fb8e:	test   eax,eax
6400fb90:	setne  cl
6400fb93:	mov    al,cl
6400fb95:	ret    
6400fb96:	sbb    eax,eax
6400fb98:	sbb    eax,0xffffffff
6400fb9b:	xor    ecx,ecx
6400fb9d:	test   eax,eax
6400fb9f:	setne  cl
6400fba2:	mov    al,cl
6400fba4:	ret    
6400fba5:	int3   
6400fba6:	int3   
6400fba7:	int3   
6400fba8:	int3   
6400fba9:	int3   
6400fbaa:	int3   
6400fbab:	int3   
6400fbac:	int3   
6400fbad:	int3   
6400fbae:	int3   
6400fbaf:	int3   
6400fbb0:	mov    eax,DWORD PTR [esp+0x4]
6400fbb4:	mov    ecx,DWORD PTR [esp+0x8]
6400fbb8:	cmp    eax,ecx
6400fbba:	je     0x6400fbcd
6400fbbc:	mov    edx,DWORD PTR [esp+0xc]
6400fbc0:	push   esi
6400fbc1:	mov    esi,DWORD PTR [edx]
6400fbc3:	mov    DWORD PTR [eax],esi
6400fbc5:	add    eax,0x4
6400fbc8:	cmp    eax,ecx
6400fbca:	jne    0x6400fbc1
6400fbcc:	pop    esi
6400fbcd:	ret    
6400fbce:	int3   
6400fbcf:	int3   
6400fbd0:	mov    eax,DWORD PTR [esp+0x8]
6400fbd4:	mov    edx,DWORD PTR [esp+0x4]
6400fbd8:	sub    eax,edx
6400fbda:	sar    eax,0x2
6400fbdd:	push   esi
6400fbde:	mov    esi,DWORD PTR [esp+0x10]
6400fbe2:	lea    ecx,[eax*4+0x0]
6400fbe9:	sub    esi,ecx
6400fbeb:	test   eax,eax
6400fbed:	jle    0x6400fbfb
6400fbef:	push   ecx
6400fbf0:	push   edx
6400fbf1:	push   ecx
6400fbf2:	push   esi
6400fbf3:	call   0x64012563
6400fbf8:	add    esp,0x10
6400fbfb:	mov    eax,esi
6400fbfd:	pop    esi
6400fbfe:	ret    
6400fbff:	int3   
6400fc00:	mov    eax,DWORD PTR [esp+0x14]
6400fc04:	push   ebp
6400fc05:	mov    ebp,DWORD PTR [esp+0x8]
6400fc09:	push   esi
6400fc0a:	mov    esi,DWORD PTR [esp+0x14]
6400fc0e:	push   edi
6400fc0f:	lea    edi,[esi+eax*1]
6400fc12:	mov    eax,DWORD PTR [ebp+0x0]
6400fc15:	mov    edx,DWORD PTR [eax-0x8]
6400fc18:	sub    eax,0x10
6400fc1b:	mov    ecx,0x1
6400fc20:	sub    ecx,DWORD PTR [eax+0xc]
6400fc23:	sub    edx,edi
6400fc25:	or     ecx,edx
6400fc27:	jge    0x6400fc31
6400fc29:	push   edi
6400fc2a:	mov    ecx,ebp
6400fc2c:	call   0x64001e00
6400fc31:	mov    eax,DWORD PTR [esp+0x14]
6400fc35:	push   ebx
6400fc36:	mov    ebx,DWORD PTR [ebp+0x0]
6400fc39:	add    esi,esi
6400fc3b:	push   esi
6400fc3c:	push   eax
6400fc3d:	push   esi
6400fc3e:	push   ebx
6400fc3f:	call   0x640124e8
6400fc44:	mov    eax,DWORD PTR [esp+0x34]
6400fc48:	mov    ecx,DWORD PTR [esp+0x30]
6400fc4c:	add    eax,eax
6400fc4e:	push   eax
6400fc4f:	push   ecx
6400fc50:	push   eax
6400fc51:	add    esi,ebx
6400fc53:	push   esi
6400fc54:	call   0x640124e8
6400fc59:	add    esp,0x20
6400fc5c:	test   edi,edi
6400fc5e:	pop    ebx
6400fc5f:	jl     0x6400fc79
6400fc61:	mov    eax,DWORD PTR [ebp+0x0]
6400fc64:	cmp    edi,DWORD PTR [eax-0x8]
6400fc67:	jg     0x6400fc79
6400fc69:	mov    DWORD PTR [eax-0xc],edi
6400fc6c:	mov    edx,DWORD PTR [ebp+0x0]
6400fc6f:	mov    WORD PTR [edx+edi*2],0x0
6400fc75:	pop    edi
6400fc76:	pop    esi
6400fc77:	pop    ebp
6400fc78:	ret    
6400fc79:	push   0x80070057
6400fc7e:	call   0x64001040
6400fc83:	int3   
6400fc84:	int3   
6400fc85:	int3   
6400fc86:	int3   
6400fc87:	int3   
6400fc88:	int3   
6400fc89:	int3   
6400fc8a:	int3   
6400fc8b:	int3   
6400fc8c:	int3   
6400fc8d:	int3   
6400fc8e:	int3   
6400fc8f:	int3   
6400fc90:	push   0xffffffff
6400fc92:	push   0x64022159
6400fc97:	mov    eax,fs:0x0
6400fc9d:	push   eax
6400fc9e:	push   ecx
6400fc9f:	push   esi
6400fca0:	push   edi
6400fca1:	mov    eax,ds:0x6402d09c
6400fca6:	xor    eax,esp
6400fca8:	push   eax
6400fca9:	lea    eax,[esp+0x10]
6400fcad:	mov    fs:0x0,eax
6400fcb3:	mov    edi,DWORD PTR [esp+0x24]
6400fcb7:	mov    DWORD PTR [esp+0xc],0x0
6400fcbf:	mov    eax,DWORD PTR [edi]
6400fcc1:	mov    ecx,DWORD PTR [eax-0x10]
6400fcc4:	test   ecx,ecx
6400fcc6:	mov    DWORD PTR [esp+0x18],0x0
6400fcce:	je     0x6400fcdb
6400fcd0:	mov    edx,DWORD PTR [ecx]
6400fcd2:	mov    eax,DWORD PTR [edx+0x10]
6400fcd5:	call   eax
6400fcd7:	test   eax,eax
6400fcd9:	jne    0x6400fceb
6400fcdb:	mov    edx,DWORD PTR ds:0x6402e540
6400fce1:	mov    eax,DWORD PTR [edx+0x10]
6400fce4:	mov    ecx,0x6402e540
6400fce9:	call   eax
6400fceb:	xor    ecx,ecx
6400fced:	test   eax,eax
6400fcef:	setne  cl
6400fcf2:	test   ecx,ecx
6400fcf4:	jne    0x6400fd00
6400fcf6:	push   0x80004005
6400fcfb:	call   0x64001040
6400fd00:	mov    edx,DWORD PTR [eax]
6400fd02:	mov    ecx,eax
6400fd04:	mov    eax,DWORD PTR [edx+0xc]
6400fd07:	call   eax
6400fd09:	mov    esi,DWORD PTR [esp+0x20]
6400fd0d:	add    eax,0x10
6400fd10:	mov    DWORD PTR [esi],eax
6400fd12:	mov    ecx,DWORD PTR [esp+0x28]
6400fd16:	mov    eax,DWORD PTR [ecx]
6400fd18:	mov    edx,DWORD PTR [eax-0xc]
6400fd1b:	mov    ecx,DWORD PTR [edi]
6400fd1d:	mov    edi,DWORD PTR [ecx-0xc]
6400fd20:	push   edx
6400fd21:	push   eax
6400fd22:	push   edi
6400fd23:	push   ecx
6400fd24:	push   esi
6400fd25:	mov    DWORD PTR [esp+0x2c],0x0
6400fd2d:	mov    DWORD PTR [esp+0x20],0x1
6400fd35:	call   0x6400fc00
6400fd3a:	add    esp,0x14
6400fd3d:	mov    eax,esi
6400fd3f:	mov    ecx,DWORD PTR [esp+0x10]
6400fd43:	mov    DWORD PTR fs:0x0,ecx
6400fd4a:	pop    ecx
6400fd4b:	pop    edi
6400fd4c:	pop    esi
6400fd4d:	add    esp,0x10
6400fd50:	ret    
6400fd51:	int3   
6400fd52:	int3   
6400fd53:	int3   
6400fd54:	int3   
6400fd55:	int3   
6400fd56:	int3   
6400fd57:	int3   
6400fd58:	int3   
6400fd59:	int3   
6400fd5a:	int3   
6400fd5b:	int3   
6400fd5c:	int3   
6400fd5d:	int3   
6400fd5e:	int3   
6400fd5f:	int3   
6400fd60:	push   0xffffffff
6400fd62:	push   0x64022199
6400fd67:	mov    eax,fs:0x0
6400fd6d:	push   eax
6400fd6e:	push   ecx
6400fd6f:	push   ebp
6400fd70:	push   esi
6400fd71:	push   edi
6400fd72:	mov    eax,ds:0x6402d09c
6400fd77:	xor    eax,esp
6400fd79:	push   eax
6400fd7a:	lea    eax,[esp+0x14]
6400fd7e:	mov    fs:0x0,eax
6400fd84:	mov    ebp,DWORD PTR [esp+0x28]
6400fd88:	mov    DWORD PTR [esp+0x10],0x0
6400fd90:	mov    eax,DWORD PTR [ebp+0x0]
6400fd93:	mov    ecx,DWORD PTR [eax-0x10]
6400fd96:	test   ecx,ecx
6400fd98:	mov    DWORD PTR [esp+0x1c],0x0
6400fda0:	je     0x6400fdad
6400fda2:	mov    edx,DWORD PTR [ecx]
6400fda4:	mov    eax,DWORD PTR [edx+0x10]
6400fda7:	call   eax
6400fda9:	test   eax,eax
6400fdab:	jne    0x6400fdbd
6400fdad:	mov    edx,DWORD PTR ds:0x6402e540
6400fdb3:	mov    eax,DWORD PTR [edx+0x10]
6400fdb6:	mov    ecx,0x6402e540
6400fdbb:	call   eax
6400fdbd:	xor    ecx,ecx
6400fdbf:	test   eax,eax
6400fdc1:	setne  cl
6400fdc4:	test   ecx,ecx
6400fdc6:	jne    0x6400fdd2
6400fdc8:	push   0x80004005
6400fdcd:	call   0x64001040
6400fdd2:	mov    edx,DWORD PTR [eax]
6400fdd4:	mov    ecx,eax
6400fdd6:	mov    eax,DWORD PTR [edx+0xc]
6400fdd9:	call   eax
6400fddb:	mov    esi,DWORD PTR [esp+0x24]
6400fddf:	add    eax,0x10
6400fde2:	mov    DWORD PTR [esi],eax
6400fde4:	mov    edi,DWORD PTR [esp+0x2c]
6400fde8:	test   edi,edi
6400fdea:	mov    DWORD PTR [esp+0x1c],0x0
6400fdf2:	mov    DWORD PTR [esp+0x10],0x1
6400fdfa:	jne    0x6400fe00
6400fdfc:	xor    eax,eax
6400fdfe:	jmp    0x6400fe14
6400fe00:	mov    eax,edi
6400fe02:	lea    edx,[eax+0x2]
6400fe05:	mov    cx,WORD PTR [eax]
6400fe08:	add    eax,0x2
6400fe0b:	test   cx,cx
6400fe0e:	jne    0x6400fe05
6400fe10:	sub    eax,edx
6400fe12:	sar    eax,1
6400fe14:	mov    ecx,DWORD PTR [ebp+0x0]
6400fe17:	mov    edx,DWORD PTR [ecx-0xc]
6400fe1a:	push   eax
6400fe1b:	push   edi
6400fe1c:	push   edx
6400fe1d:	push   ecx
6400fe1e:	push   esi
6400fe1f:	call   0x6400fc00
6400fe24:	add    esp,0x14
6400fe27:	mov    eax,esi
6400fe29:	mov    ecx,DWORD PTR [esp+0x14]
6400fe2d:	mov    DWORD PTR fs:0x0,ecx
6400fe34:	pop    ecx
6400fe35:	pop    edi
6400fe36:	pop    esi
6400fe37:	pop    ebp
6400fe38:	add    esp,0x10
6400fe3b:	ret    
6400fe3c:	int3   
6400fe3d:	int3   
6400fe3e:	int3   
6400fe3f:	int3   
6400fe40:	mov    eax,DWORD PTR [esp+0x8]
6400fe44:	mov    ecx,DWORD PTR [esp+0x4]
6400fe48:	mov    edx,DWORD PTR [esp+0xc]
6400fe4c:	sub    eax,ecx
6400fe4e:	sar    eax,0x2
6400fe51:	lea    eax,[eax*4+0x0]
6400fe58:	push   esi
6400fe59:	lea    esi,[eax+edx*1]
6400fe5c:	je     0x6400fe6a
6400fe5e:	push   eax
6400fe5f:	push   ecx
6400fe60:	push   eax
6400fe61:	push   edx
6400fe62:	call   0x64012563
6400fe67:	add    esp,0x10
6400fe6a:	mov    eax,esi
6400fe6c:	pop    esi
6400fe6d:	ret    0xc
6400fe70:	push   esi
6400fe71:	mov    esi,DWORD PTR [esp+0xc]
6400fe75:	test   esi,esi
6400fe77:	push   edi
6400fe78:	mov    edi,DWORD PTR [esp+0xc]
6400fe7c:	mov    eax,esi
6400fe7e:	mov    ecx,edi
6400fe80:	jbe    0x6400fe96
6400fe82:	mov    edx,DWORD PTR [esp+0x14]
6400fe86:	push   ebx
6400fe87:	mov    ebx,DWORD PTR [edx]
6400fe89:	mov    DWORD PTR [ecx],ebx
6400fe8b:	sub    eax,0x1
6400fe8e:	add    ecx,0x4
6400fe91:	test   eax,eax
6400fe93:	ja     0x6400fe87
6400fe95:	pop    ebx
6400fe96:	lea    eax,[edi+esi*4]
6400fe99:	pop    edi
6400fe9a:	pop    esi
6400fe9b:	ret    0xc
6400fe9e:	int3   
6400fe9f:	int3   
6400fea0:	mov    eax,DWORD PTR [esp+0x4]
6400fea4:	push   esi
6400fea5:	push   eax
6400fea6:	mov    esi,ecx
6400fea8:	call   0x64012487
6400fead:	mov    DWORD PTR [esi],0x640253fc
6400feb3:	mov    eax,esi
6400feb5:	pop    esi
6400feb6:	ret    0x4
6400feb9:	int3   
6400feba:	int3   
6400febb:	int3   
6400febc:	int3   
6400febd:	int3   
6400febe:	int3   
6400febf:	int3   
6400fec0:	push   esi
6400fec1:	mov    esi,ecx
6400fec3:	mov    DWORD PTR [esi],0x64025448
6400fec9:	cmp    DWORD PTR [esi+0x24],0x10
6400fecd:	jb     0x6400fedb
6400fecf:	mov    eax,DWORD PTR [esi+0x10]
6400fed2:	push   eax
6400fed3:	call   0x64012332
6400fed8:	add    esp,0x4
6400fedb:	xor    eax,eax
6400fedd:	mov    DWORD PTR [esi+0x24],0xf
6400fee4:	mov    DWORD PTR [esi+0x20],eax
6400fee7:	mov    ecx,esi
6400fee9:	mov    BYTE PTR [esi+0x10],al
6400feec:	call   0x6401244b
6400fef1:	test   BYTE PTR [esp+0x8],0x1
6400fef6:	je     0x6400ff01
6400fef8:	push   esi
6400fef9:	call   0x64012332
6400fefe:	add    esp,0x4
6400ff01:	mov    eax,esi
6400ff03:	pop    esi
6400ff04:	ret    0x4
6400ff07:	int3   
6400ff08:	int3   
6400ff09:	int3   
6400ff0a:	int3   
6400ff0b:	int3   
6400ff0c:	int3   
6400ff0d:	int3   
6400ff0e:	int3   
6400ff0f:	int3   
6400ff10:	push   0xffffffff
6400ff12:	push   0x640221c8
6400ff17:	mov    eax,fs:0x0
6400ff1d:	push   eax
6400ff1e:	sub    esp,0x44
6400ff21:	mov    eax,ds:0x6402d09c
6400ff26:	xor    eax,esp
6400ff28:	push   eax
6400ff29:	lea    eax,[esp+0x48]
6400ff2d:	mov    fs:0x0,eax
6400ff33:	push   0x12
6400ff35:	push   0x640286e0
6400ff3a:	lea    ecx,[esp+0xc]
6400ff3e:	mov    DWORD PTR [esp+0x24],0xf
6400ff46:	mov    DWORD PTR [esp+0x20],0x0
6400ff4e:	mov    BYTE PTR [esp+0x10],0x0
6400ff53:	call   0x64001860
6400ff58:	lea    eax,[esp+0x4]
6400ff5c:	push   eax
6400ff5d:	lea    ecx,[esp+0x24]
6400ff61:	mov    DWORD PTR [esp+0x54],0x0
6400ff69:	call   0x64002cb0
6400ff6e:	push   0x6402ac70
6400ff73:	lea    ecx,[esp+0x24]
6400ff77:	push   ecx
6400ff78:	mov    DWORD PTR [esp+0x28],0x6402531c
6400ff80:	call   0x6401277b
6400ff85:	int3   
6400ff86:	int3   
6400ff87:	int3   
6400ff88:	int3   
6400ff89:	int3   
6400ff8a:	int3   
6400ff8b:	int3   
6400ff8c:	int3   
6400ff8d:	int3   
6400ff8e:	int3   
6400ff8f:	int3   
6400ff90:	sub    esp,0x10
6400ff93:	mov    edx,DWORD PTR [ecx+0x4]
6400ff96:	mov    eax,DWORD PTR [ecx]
6400ff98:	cmp    eax,0x5
6400ff9b:	mov    DWORD PTR [esp+0x4],edx
6400ff9f:	mov    edx,DWORD PTR [ecx+0x8]
6400ffa2:	mov    ecx,DWORD PTR [ecx+0xc]
6400ffa5:	je     0x6400ffcc
6400ffa7:	push   0x64025404
6400ffac:	lea    ecx,[esp+0x4]
6400ffb0:	call   0x6401246e
6400ffb5:	push   0x6402a120
6400ffba:	lea    eax,[esp+0x4]
6400ffbe:	push   eax
6400ffbf:	mov    DWORD PTR [esp+0x8],0x640253fc
6400ffc7:	call   0x6401277b
6400ffcc:	push   edx
6400ffcd:	push   ecx
6400ffce:	mov    ecx,DWORD PTR [esp+0x1c]
6400ffd2:	call   0x64001860
6400ffd7:	add    esp,0x10
6400ffda:	ret    0x4
6400ffdd:	int3   
6400ffde:	int3   
6400ffdf:	int3   
6400ffe0:	push   0xffffffff
6400ffe2:	push   0x6402220e
6400ffe7:	mov    eax,fs:0x0
6400ffed:	push   eax
6400ffee:	sub    esp,0x9c
6400fff4:	push   ebx
6400fff5:	push   ebp
6400fff6:	push   edi
6400fff7:	mov    eax,ds:0x6402d09c
6400fffc:	xor    eax,esp
6400fffe:	push   eax
6400ffff:	lea    eax,[esp+0xac]
64010006:	mov    fs:0x0,eax
6401000c:	xor    ebx,ebx
6401000e:	push   0x1c
64010010:	mov    DWORD PTR [esp+0x14],ebx
64010014:	call   0x64012711
64010019:	mov    edi,eax
6401001b:	add    esp,0x4
6401001e:	cmp    edi,ebx
64010020:	je     0x64010032
64010022:	push   0x2000
64010027:	push   edi
64010028:	call   0x6400ed20
6401002d:	add    esp,0x8
64010030:	jmp    0x64010034
64010032:	xor    edi,edi
64010034:	mov    DWORD PTR [esp+0x20],edi
64010038:	mov    ecx,DWORD PTR [esp+0xc4]
6401003f:	mov    edx,DWORD PTR [esp+0xc0]
64010046:	lea    eax,[esp+0x10]
6401004a:	push   eax
6401004b:	mov    eax,DWORD PTR [esp+0xc0]
64010052:	push   edi
64010053:	push   ecx
64010054:	push   edx
64010055:	push   eax
64010056:	mov    DWORD PTR [esp+0xc8],ebx
6401005d:	call   0x6400f7b0
64010062:	add    esp,0x14
64010065:	sub    eax,ebx
64010067:	je     0x64010136
6401006d:	sub    eax,0x1
64010070:	je     0x64010119
64010076:	sub    eax,0x1
64010079:	je     0x640100c8
6401007b:	push   0xb
6401007d:	push   0x64025470
64010082:	lea    ecx,[esp+0x2c]
64010086:	mov    DWORD PTR [esp+0x44],0xf
6401008e:	mov    DWORD PTR [esp+0x40],ebx
64010092:	mov    BYTE PTR [esp+0x30],bl
64010096:	call   0x64001860
6401009b:	lea    ecx,[esp+0x24]
6401009f:	push   ecx
640100a0:	lea    ecx,[esp+0x60]
640100a4:	mov    BYTE PTR [esp+0xb8],0x2
640100ac:	call   0x64002020
640100b1:	push   0x6402a1a4
640100b6:	lea    edx,[esp+0x60]
640100ba:	push   edx
640100bb:	mov    DWORD PTR [esp+0x64],0x64025454
640100c3:	call   0x6401277b
640100c8:	mov    eax,DWORD PTR [esp+0x10]
640100cc:	mov    ecx,DWORD PTR [esp+0x14]
640100d0:	mov    edx,DWORD PTR [esp+0x18]
640100d4:	mov    DWORD PTR [esi],eax
640100d6:	mov    eax,DWORD PTR [esp+0x1c]
640100da:	mov    DWORD PTR [esi+0x4],ecx
640100dd:	mov    DWORD PTR [esi+0x8],edx
640100e0:	mov    DWORD PTR [esi+0xc],eax
640100e3:	mov    ebp,DWORD PTR [esi+0x10]
640100e6:	cmp    edi,ebp
640100e8:	je     0x640100fd
640100ea:	cmp    ebp,ebx
640100ec:	je     0x640100fd
640100ee:	push   ebp
640100ef:	call   0x6400ecc0
640100f4:	push   ebp
640100f5:	call   0x64012332
640100fa:	add    esp,0x8
640100fd:	mov    DWORD PTR [esi+0x10],edi
64010100:	mov    ecx,DWORD PTR [esp+0xac]
64010107:	mov    DWORD PTR fs:0x0,ecx
6401010e:	pop    ecx
6401010f:	pop    edi
64010110:	pop    ebp
64010111:	pop    ebx
64010112:	add    esp,0xa8
64010118:	ret    
64010119:	mov    ecx,DWORD PTR [esp+0x10]
6401011d:	mov    edx,DWORD PTR [esp+0x14]
64010121:	mov    eax,DWORD PTR [esp+0x18]
64010125:	mov    DWORD PTR [esi],ecx
64010127:	mov    ecx,DWORD PTR [esp+0x1c]
6401012b:	mov    DWORD PTR [esi+0x4],edx
6401012e:	mov    DWORD PTR [esi+0x8],eax
64010131:	mov    DWORD PTR [esi+0xc],ecx
64010134:	jmp    0x640100e3
64010136:	push   0x12
64010138:	push   0x6402545c
6401013d:	lea    ecx,[esp+0x48]
64010141:	mov    DWORD PTR [esp+0x60],0xf
64010149:	mov    DWORD PTR [esp+0x5c],ebx
6401014d:	mov    BYTE PTR [esp+0x4c],bl
64010151:	call   0x64001860
64010156:	lea    edx,[esp+0x40]
6401015a:	push   edx
6401015b:	lea    ecx,[esp+0x88]
64010162:	mov    BYTE PTR [esp+0xb8],0x1
6401016a:	call   0x64002020
6401016f:	push   0x6402a1a4
64010174:	lea    eax,[esp+0x88]
6401017b:	push   eax
6401017c:	mov    DWORD PTR [esp+0x8c],0x64025454
64010187:	call   0x6401277b
6401018c:	int3   
6401018d:	int3   
6401018e:	int3   
6401018f:	int3   
64010190:	mov    eax,DWORD PTR [esp+0x4]
64010194:	push   esi
64010195:	push   eax
64010196:	mov    esi,ecx
64010198:	call   0x640020d0
6401019d:	mov    DWORD PTR [esi],0x64025454
640101a3:	mov    eax,esi
640101a5:	pop    esi
640101a6:	ret    0x4
640101a9:	int3   
640101aa:	int3   
640101ab:	int3   
640101ac:	int3   
640101ad:	int3   
640101ae:	int3   
640101af:	int3   
640101b0:	cmp    DWORD PTR [esp+0x4],0x6
640101b5:	push   esi
640101b6:	mov    esi,ecx
640101b8:	je     0x640101df
640101ba:	push   0x64025404
640101bf:	lea    ecx,[esp+0xc]
640101c3:	call   0x6401246e
640101c8:	push   0x6402a120
640101cd:	lea    eax,[esp+0xc]
640101d1:	push   eax
640101d2:	mov    DWORD PTR [esp+0x10],0x640253fc
640101da:	call   0x6401277b
640101df:	push   ebx
640101e0:	mov    ebx,DWORD PTR [esp+0x14]
640101e4:	test   ebx,ebx
640101e6:	jbe    0x64010209
640101e8:	mov    ecx,DWORD PTR [esi]
640101ea:	push   edi
640101eb:	mov    edi,DWORD PTR [esp+0x1c]
640101ef:	push   ecx
640101f0:	mov    ecx,edi
640101f2:	call   0x6400ff90
640101f7:	cmp    ebx,0x1
640101fa:	jbe    0x64010208
640101fc:	mov    edx,DWORD PTR [esi+0x4]
640101ff:	push   edx
64010200:	lea    ecx,[edi+0x10]
64010203:	call   0x6400ff90
64010208:	pop    edi
64010209:	pop    ebx
6401020a:	pop    esi
6401020b:	ret    0x10
6401020e:	int3   
6401020f:	int3   
64010210:	mov    eax,DWORD PTR [esp+0x10]
64010214:	push   ebx
64010215:	push   esi
64010216:	mov    esi,ecx
64010218:	mov    ecx,DWORD PTR [eax]
6401021a:	mov    DWORD PTR [esp+0x18],ecx
6401021e:	mov    ecx,DWORD PTR [esi+0x4]
64010221:	test   ecx,ecx
64010223:	push   edi
64010224:	jne    0x6401022a
64010226:	xor    edi,edi
64010228:	jmp    0x64010232
6401022a:	mov    edi,DWORD PTR [esi+0xc]
6401022d:	sub    edi,ecx
6401022f:	sar    edi,0x2
64010232:	mov    ebx,DWORD PTR [esp+0x18]
64010236:	test   ebx,ebx
64010238:	je     0x640103bf
6401023e:	test   ecx,ecx
64010240:	jne    0x64010246
64010242:	xor    eax,eax
64010244:	jmp    0x6401024e
64010246:	mov    eax,DWORD PTR [esi+0x8]
64010249:	sub    eax,ecx
6401024b:	sar    eax,0x2
6401024e:	mov    edx,0x3fffffff
64010253:	sub    edx,eax
64010255:	cmp    edx,ebx
64010257:	jae    0x6401025e
64010259:	call   0x6400ff10
6401025e:	test   ecx,ecx
64010260:	jne    0x64010266
64010262:	xor    eax,eax
64010264:	jmp    0x6401026e
64010266:	mov    eax,DWORD PTR [esi+0x8]
64010269:	sub    eax,ecx
6401026b:	sar    eax,0x2
6401026e:	add    eax,ebx
64010270:	cmp    edi,eax
64010272:	push   ebp
64010273:	jae    0x6401032d
64010279:	mov    eax,edi
6401027b:	shr    eax,1
6401027d:	mov    edx,0x3fffffff
64010282:	sub    edx,eax
64010284:	cmp    edx,edi
64010286:	jae    0x6401028c
64010288:	xor    edi,edi
6401028a:	jmp    0x6401028e
6401028c:	add    edi,eax
6401028e:	test   ecx,ecx
64010290:	jne    0x64010296
64010292:	xor    eax,eax
64010294:	jmp    0x6401029e
64010296:	mov    eax,DWORD PTR [esi+0x8]
64010299:	sub    eax,ecx
6401029b:	sar    eax,0x2
6401029e:	add    eax,ebx
640102a0:	cmp    edi,eax
640102a2:	jae    0x640102b6
640102a4:	test   ecx,ecx
640102a6:	jne    0x640102ac
640102a8:	xor    edi,edi
640102aa:	jmp    0x640102b4
640102ac:	mov    edi,DWORD PTR [esi+0x8]
640102af:	sub    edi,ecx
640102b1:	sar    edi,0x2
640102b4:	add    edi,ebx
640102b6:	push   0x0
640102b8:	push   edi
640102b9:	call   0x6400fab0
640102be:	mov    ecx,DWORD PTR [esi+0x4]
640102c1:	add    esp,0x8
640102c4:	mov    ebp,eax
640102c6:	mov    eax,DWORD PTR [esp+0x18]
640102ca:	push   ebp
640102cb:	push   eax
640102cc:	push   ecx
640102cd:	mov    ecx,esi
640102cf:	call   0x6400fe40
640102d4:	lea    edx,[esp+0x20]
640102d8:	push   edx
640102d9:	push   ebx
640102da:	push   eax
640102db:	mov    ecx,esi
640102dd:	call   0x6400fe70
640102e2:	mov    ecx,DWORD PTR [esp+0x18]
640102e6:	push   eax
640102e7:	mov    eax,DWORD PTR [esi+0x8]
640102ea:	push   eax
640102eb:	push   ecx
640102ec:	mov    ecx,esi
640102ee:	call   0x6400fe40
640102f3:	mov    eax,DWORD PTR [esi+0x4]
640102f6:	test   eax,eax
640102f8:	jne    0x640102fe
640102fa:	xor    ecx,ecx
640102fc:	jmp    0x64010306
640102fe:	mov    ecx,DWORD PTR [esi+0x8]
64010301:	sub    ecx,eax
64010303:	sar    ecx,0x2
64010306:	add    ebx,ecx
64010308:	test   eax,eax
6401030a:	je     0x64010315
6401030c:	push   eax
6401030d:	call   0x64012332
64010312:	add    esp,0x4
64010315:	lea    edx,[ebp+edi*4+0x0]
64010319:	lea    eax,[ebp+ebx*4+0x0]
6401031d:	mov    DWORD PTR [esi+0x4],ebp
64010320:	pop    ebp
64010321:	pop    edi
64010322:	mov    DWORD PTR [esi+0xc],edx
64010325:	mov    DWORD PTR [esi+0x8],eax
64010328:	pop    esi
64010329:	pop    ebx
6401032a:	ret    0x10
6401032d:	mov    ebp,DWORD PTR [esi+0x8]
64010330:	mov    edi,DWORD PTR [esp+0x18]
64010334:	mov    ecx,ebp
64010336:	sub    ecx,edi
64010338:	sar    ecx,0x2
6401033b:	lea    eax,[ebx*4+0x0]
64010342:	cmp    ecx,ebx
64010344:	mov    DWORD PTR [esp+0x1c],eax
64010348:	mov    ecx,esi
6401034a:	jae    0x64010392
6401034c:	add    eax,edi
6401034e:	push   eax
6401034f:	push   ebp
64010350:	push   edi
64010351:	call   0x6400fe40
64010356:	mov    eax,DWORD PTR [esi+0x8]
64010359:	mov    ecx,eax
6401035b:	sub    ecx,edi
6401035d:	sar    ecx,0x2
64010360:	lea    edx,[esp+0x20]
64010364:	push   edx
64010365:	sub    ebx,ecx
64010367:	push   ebx
64010368:	push   eax
64010369:	mov    ecx,esi
6401036b:	call   0x6400fe70
64010370:	mov    eax,DWORD PTR [esp+0x1c]
64010374:	add    DWORD PTR [esi+0x8],eax
64010377:	mov    esi,DWORD PTR [esi+0x8]
6401037a:	lea    edx,[esp+0x20]
6401037e:	push   edx
6401037f:	sub    esi,eax
64010381:	push   esi
64010382:	push   edi
64010383:	call   0x6400fbb0
64010388:	add    esp,0xc
6401038b:	pop    ebp
6401038c:	pop    edi
6401038d:	pop    esi
6401038e:	pop    ebx
6401038f:	ret    0x10
64010392:	push   ebp
64010393:	mov    ebx,ebp
64010395:	sub    ebx,eax
64010397:	push   ebp
64010398:	push   ebx
64010399:	call   0x6400fe40
6401039e:	push   ebp
6401039f:	push   ebx
640103a0:	push   edi
640103a1:	mov    DWORD PTR [esi+0x8],eax
640103a4:	call   0x6400fbd0
640103a9:	mov    ecx,DWORD PTR [esp+0x28]
640103ad:	lea    eax,[esp+0x2c]
640103b1:	push   eax
640103b2:	add    ecx,edi
640103b4:	push   ecx
640103b5:	push   edi
640103b6:	call   0x6400fbb0
640103bb:	add    esp,0x18
640103be:	pop    ebp
640103bf:	pop    edi
640103c0:	pop    esi
640103c1:	pop    ebx
640103c2:	ret    0x10
640103c5:	int3   
640103c6:	int3   
640103c7:	int3   
640103c8:	int3   
640103c9:	int3   
640103ca:	int3   
640103cb:	int3   
640103cc:	int3   
640103cd:	int3   
640103ce:	int3   
640103cf:	int3   
640103d0:	push   ecx
640103d1:	push   ebx
640103d2:	push   ebp
640103d3:	mov    ebp,DWORD PTR [esp+0x14]
640103d7:	push   esi
640103d8:	mov    esi,ecx
640103da:	push   edi
640103db:	mov    edi,DWORD PTR [esi+0x4]
640103de:	test   edi,edi
640103e0:	je     0x640103ee
640103e2:	mov    eax,DWORD PTR [esi+0x8]
640103e5:	mov    ecx,eax
640103e7:	sub    ecx,edi
640103e9:	sar    ecx,0x2
640103ec:	jne    0x640103f2
640103ee:	xor    ebx,ebx
640103f0:	jmp    0x64010411
640103f2:	cmp    edi,eax
640103f4:	jbe    0x640103fb
640103f6:	call   0x640126e8
640103fb:	test   ebp,ebp
640103fd:	je     0x64010403
640103ff:	cmp    ebp,esi
64010401:	je     0x64010408
64010403:	call   0x640126e8
64010408:	mov    ebx,DWORD PTR [esp+0x20]
6401040c:	sub    ebx,edi
6401040e:	sar    ebx,0x2
64010411:	mov    edx,DWORD PTR [esp+0x24]
64010415:	mov    eax,DWORD PTR [esp+0x20]
64010419:	push   edx
6401041a:	push   0x1
6401041c:	push   eax
6401041d:	push   ebp
6401041e:	mov    ecx,esi
64010420:	call   0x64010210
64010425:	mov    edi,DWORD PTR [esi+0x4]
64010428:	cmp    edi,DWORD PTR [esi+0x8]
6401042b:	jbe    0x64010432
6401042d:	call   0x640126e8
64010432:	mov    DWORD PTR [esp+0x20],edi
64010436:	lea    edi,[edi+ebx*4]
64010439:	cmp    edi,DWORD PTR [esi+0x8]
6401043c:	ja     0x64010443
6401043e:	cmp    edi,DWORD PTR [esi+0x4]
64010441:	jae    0x64010448
64010443:	call   0x640126e8
64010448:	mov    eax,DWORD PTR [esp+0x18]
6401044c:	mov    DWORD PTR [eax+0x4],edi
6401044f:	pop    edi
64010450:	mov    DWORD PTR [eax],esi
64010452:	pop    esi
64010453:	pop    ebp
64010454:	pop    ebx
64010455:	pop    ecx
64010456:	ret    0x10
64010459:	int3   
6401045a:	int3   
6401045b:	int3   
6401045c:	int3   
6401045d:	int3   
6401045e:	int3   
6401045f:	int3   
64010460:	sub    esp,0x8
64010463:	push   esi
64010464:	mov    esi,ecx
64010466:	mov    edx,DWORD PTR [esi+0x4]
64010469:	test   edx,edx
6401046b:	jne    0x64010471
6401046d:	xor    ecx,ecx
6401046f:	jmp    0x64010479
64010471:	mov    ecx,DWORD PTR [esi+0x8]
64010474:	sub    ecx,edx
64010476:	sar    ecx,0x2
64010479:	test   edx,edx
6401047b:	je     0x640104a1
6401047d:	mov    eax,DWORD PTR [esi+0xc]
64010480:	sub    eax,edx
64010482:	sar    eax,0x2
64010485:	cmp    ecx,eax
64010487:	jae    0x640104a1
64010489:	mov    eax,DWORD PTR [esi+0x8]
6401048c:	mov    ecx,DWORD PTR [esp+0x10]
64010490:	mov    edx,DWORD PTR [ecx]
64010492:	mov    DWORD PTR [eax],edx
64010494:	add    eax,0x4
64010497:	mov    DWORD PTR [esi+0x8],eax
6401049a:	pop    esi
6401049b:	add    esp,0x8
6401049e:	ret    0x4
640104a1:	push   edi
640104a2:	mov    edi,DWORD PTR [esi+0x8]
640104a5:	cmp    edx,edi
640104a7:	jbe    0x640104ae
640104a9:	call   0x640126e8
640104ae:	mov    eax,DWORD PTR [esp+0x14]
640104b2:	push   eax
640104b3:	push   edi
640104b4:	push   esi
640104b5:	lea    ecx,[esp+0x14]
640104b9:	push   ecx
640104ba:	mov    ecx,esi
640104bc:	call   0x640103d0
640104c1:	pop    edi
640104c2:	pop    esi
640104c3:	add    esp,0x8
640104c6:	ret    0x4
640104c9:	int3   
640104ca:	int3   
640104cb:	int3   
640104cc:	int3   
640104cd:	int3   
640104ce:	int3   
640104cf:	int3   
640104d0:	sub    esp,0x20
640104d3:	mov    eax,DWORD PTR [ecx]
640104d5:	mov    edx,DWORD PTR [ecx+0x4]
640104d8:	mov    DWORD PTR [esp],eax
640104db:	mov    eax,DWORD PTR [ecx+0x8]
640104de:	mov    ecx,DWORD PTR [ecx+0xc]
640104e1:	mov    DWORD PTR [esp+0x4],edx
640104e5:	lea    edx,[esp+0x10]
640104e9:	mov    DWORD PTR [esp+0xc],ecx
640104ed:	push   edx
640104ee:	lea    ecx,[esp+0x4]
640104f2:	mov    DWORD PTR [esp+0xc],eax
640104f6:	call   0x6400f940
640104fb:	mov    ecx,DWORD PTR [esp+0x24]
640104ff:	lea    edx,[ecx+0x1c]
64010502:	mov    DWORD PTR [esp],edx
64010505:	mov    edx,DWORD PTR [eax]
64010507:	mov    DWORD PTR [esp+0x4],ecx
6401050b:	sub    esp,0x10
6401050e:	mov    ecx,esp
64010510:	mov    DWORD PTR [ecx],edx
64010512:	mov    edx,DWORD PTR [eax+0x4]
64010515:	mov    DWORD PTR [ecx+0x4],edx
64010518:	mov    edx,DWORD PTR [eax+0x8]
6401051b:	mov    eax,DWORD PTR [eax+0xc]
6401051e:	mov    DWORD PTR [ecx+0x8],edx
64010521:	mov    DWORD PTR [ecx+0xc],eax
64010524:	lea    ecx,[esp+0x10]
64010528:	call   0x640101b0
6401052d:	add    esp,0x20
64010530:	ret    0x4
64010533:	int3   
64010534:	int3   
64010535:	int3   
64010536:	int3   
64010537:	int3   
64010538:	int3   
64010539:	int3   
6401053a:	int3   
6401053b:	int3   
6401053c:	int3   
6401053d:	int3   
6401053e:	int3   
6401053f:	int3   
64010540:	push   ebp
64010541:	lea    ebp,[esp-0x74]
64010545:	sub    esp,0x74
64010548:	push   0xffffffff
6401054a:	push   0x64022278
6401054f:	mov    eax,fs:0x0
64010555:	push   eax
64010556:	sub    esp,0x70
64010559:	mov    eax,ds:0x6402d09c
6401055e:	xor    eax,ebp
64010560:	mov    DWORD PTR [ebp+0x70],eax
64010563:	push   ebx
64010564:	push   esi
64010565:	push   edi
64010566:	push   eax
64010567:	lea    eax,[ebp-0xc]
6401056a:	mov    fs:0x0,eax
64010570:	mov    DWORD PTR [ebp-0x10],esp
64010573:	mov    eax,DWORD PTR [ebp+0x7c]
64010576:	mov    ecx,0xf
6401057b:	xor    edi,edi
6401057d:	mov    DWORD PTR [ebp+0x50],ecx
64010580:	mov    DWORD PTR [ebp+0x4c],edi
64010583:	mov    BYTE PTR [ebp+0x3c],0x0
64010587:	mov    DWORD PTR [ebp+0x6c],ecx
6401058a:	mov    DWORD PTR [ebp+0x68],edi
6401058d:	mov    BYTE PTR [ebp+0x58],0x0
64010591:	mov    DWORD PTR [ebp-0x4],edi
64010594:	mov    DWORD PTR [ebp-0x38],edi
64010597:	mov    DWORD PTR [ebp-0x28],edi
6401059a:	mov    ecx,DWORD PTR [eax+0x14]
6401059d:	mov    ebx,0x10
640105a2:	cmp    DWORD PTR [eax+0x18],ebx
640105a5:	mov    BYTE PTR [ebp-0x4],0x2
640105a9:	jb     0x640105b0
640105ab:	mov    eax,DWORD PTR [eax+0x4]
640105ae:	jmp    0x640105b3
640105b0:	add    eax,0x4
640105b3:	push   edi
640105b4:	push   ecx
640105b5:	push   eax
640105b6:	lea    esi,[ebp-0x38]
640105b9:	call   0x6400ffe0
640105be:	add    esp,0xc
640105c1:	lea    eax,[ebp+0x38]
640105c4:	push   eax
640105c5:	mov    ecx,esi
640105c7:	call   0x640104d0
640105cc:	mov    DWORD PTR [ebp-0x4],0x1
640105d3:	call   DWORD PTR ds:0x6402d06c
640105d9:	cmp    DWORD PTR [ebp+0x6c],ebx
640105dc:	mov    DWORD PTR [ebp+0x0],eax
640105df:	mov    BYTE PTR [ebp-0x4],0x4
640105e3:	jb     0x640105f0
640105e5:	mov    ebx,DWORD PTR [ebp+0x58]
640105e8:	cmp    ebx,edi
640105ea:	jne    0x640105f3
640105ec:	xor    eax,eax
640105ee:	jmp    0x6401063a
640105f0:	lea    ebx,[ebp+0x58]
640105f3:	push   ebx
640105f4:	call   DWORD PTR ds:0x64025058
640105fa:	mov    edi,eax
640105fc:	add    edi,0x1
640105ff:	cmp    edi,0x3fffffff
64010605:	jg     0x64010636
64010607:	lea    eax,[edi+edi*1]
6401060a:	call   0x64013310
6401060f:	mov    esi,esp
64010611:	test   esi,esi
64010613:	mov    DWORD PTR [ebp-0x10],esp
64010616:	je     0x64010636
64010618:	mov    ecx,DWORD PTR [ebp+0x0]
6401061b:	push   edi
6401061c:	push   esi
6401061d:	push   0xffffffff
6401061f:	push   ebx
64010620:	push   0x0
64010622:	push   ecx
64010623:	mov    WORD PTR [esi],0x0
64010628:	call   DWORD PTR ds:0x64025024
6401062e:	neg    eax
64010630:	sbb    eax,eax
64010632:	and    eax,esi
64010634:	jmp    0x64010638
64010636:	xor    eax,eax
64010638:	xor    edi,edi
6401063a:	push   eax
6401063b:	lea    ecx,[ebp+0x10]
6401063e:	call   0x64002540
64010643:	mov    edx,DWORD PTR ds:0x6402e540
64010649:	mov    eax,DWORD PTR [edx+0xc]
6401064c:	mov    ecx,0x6402e540
64010651:	mov    BYTE PTR [ebp-0x4],0x5
64010655:	call   eax
64010657:	add    eax,0x10
6401065a:	mov    DWORD PTR [ebp+0x14],eax
6401065d:	lea    ecx,[ebp+0x14]
64010660:	push   ecx
64010661:	lea    edx,[ebp+0x10]
64010664:	push   edx
64010665:	lea    eax,[ebp+0x18]
64010668:	push   eax
64010669:	mov    BYTE PTR [ebp-0x4],0x6
6401066d:	call   0x64002150
64010672:	add    esp,0xc
64010675:	lea    ecx,[ebp+0x18]
64010678:	push   0x64027718
6401067d:	push   ecx
6401067e:	mov    BYTE PTR [ebp-0x4],0x7
64010682:	call   0x6400fb50
64010687:	add    esp,0x8
6401068a:	test   al,al
6401068c:	je     0x64010864
64010692:	mov    esi,DWORD PTR [ebp+0x14]
64010695:	call   0x6400ce20
6401069a:	push   esi
6401069b:	call   eax
6401069d:	cmp    DWORD PTR [ebp+0x50],0x10
640106a1:	mov    edx,DWORD PTR [ebp+0x4c]
640106a4:	mov    eax,DWORD PTR [ebp+0x3c]
640106a7:	push   edx
640106a8:	jae    0x640106ad
640106aa:	lea    eax,[ebp+0x3c]
640106ad:	push   eax
640106ae:	mov    eax,DWORD PTR [ebp+0x18]
640106b1:	push   ecx
640106b2:	add    eax,0xfffffff0
640106b5:	mov    DWORD PTR [ebp+0xc],esp
640106b8:	mov    esi,esp
640106ba:	push   eax
640106bb:	call   0x64002850
640106c0:	add    eax,0x10
640106c3:	add    esp,0x4
640106c6:	mov    DWORD PTR [esi],eax
640106c8:	call   0x64002390
640106cd:	add    esp,0xc
640106d0:	lea    eax,[ebp+0xc]
640106d3:	push   edi
640106d4:	push   eax
640106d5:	call   0x64003440
640106da:	add    esp,0x8
640106dd:	push   0x6402547c
640106e2:	push   eax
640106e3:	lea    ecx,[ebp+0x8]
640106e6:	push   ecx
640106e7:	mov    BYTE PTR [ebp-0x4],0x8
640106eb:	call   0x6400fd60
640106f0:	add    esp,0xc
640106f3:	mov    eax,DWORD PTR [ebp+0xc]
640106f6:	add    eax,0xfffffff0
640106f9:	mov    BYTE PTR [ebp-0x4],0xa
640106fd:	lea    edx,[eax+0xc]
64010700:	or     ecx,0xffffffff
64010703:	lock xadd DWORD PTR [edx],ecx
64010707:	dec    ecx
64010708:	test   ecx,ecx
6401070a:	jg     0x64010716
6401070c:	mov    ecx,DWORD PTR [eax]
6401070e:	mov    edx,DWORD PTR [ecx]
64010710:	push   eax
64010711:	mov    eax,DWORD PTR [edx+0x4]
64010714:	call   eax
64010716:	mov    eax,DWORD PTR [ebp+0x18]
64010719:	cmp    eax,edi
6401071b:	mov    ebx,eax
6401071d:	jne    0x64010723
6401071f:	xor    eax,eax
64010721:	jmp    0x64010753
64010723:	push   eax
64010724:	call   DWORD PTR ds:0x64025054
6401072a:	add    eax,0x1
6401072d:	cmp    eax,0x3fffffff
64010732:	jle    0x64010738
64010734:	xor    eax,eax
64010736:	jmp    0x64010753
64010738:	lea    esi,[eax+eax*1]
6401073b:	mov    eax,esi
6401073d:	call   0x64013310
64010742:	mov    ecx,DWORD PTR [ebp+0x0]
64010745:	mov    DWORD PTR [ebp-0x10],esp
64010748:	mov    eax,esp
6401074a:	push   ecx
6401074b:	push   esi
6401074c:	push   ebx
6401074d:	push   eax
6401074e:	call   0x64002b30
64010753:	push   eax
64010754:	lea    ecx,[ebp+0x4]
64010757:	call   0x640054b0
6401075c:	lea    edx,[ebp+0x8]
6401075f:	push   edx
64010760:	lea    eax,[ebp+0x4]
64010763:	push   eax
64010764:	mov    BYTE PTR [ebp-0x4],0xb
64010768:	call   0x640024e0
6401076d:	mov    eax,DWORD PTR [ebp+0x4]
64010770:	add    eax,0xfffffff0
64010773:	add    esp,0x8
64010776:	mov    BYTE PTR [ebp-0x4],0xa
6401077a:	lea    ecx,[eax+0xc]
6401077d:	or     edx,0xffffffff
64010780:	lock xadd DWORD PTR [ecx],edx
64010784:	dec    edx
64010785:	test   edx,edx
64010787:	jg     0x64010793
64010789:	mov    ecx,DWORD PTR [eax]
6401078b:	mov    edx,DWORD PTR [ecx]
6401078d:	push   eax
6401078e:	mov    eax,DWORD PTR [edx+0x4]
64010791:	call   eax
64010793:	push   0x40
64010795:	xor    eax,eax
64010797:	lea    ecx,[ebp-0x78]
6401079a:	push   edi
6401079b:	push   ecx
6401079c:	mov    DWORD PTR [ebp-0x20],edi
6401079f:	mov    DWORD PTR [ebp-0x1c],eax
640107a2:	mov    DWORD PTR [ebp-0x18],eax
640107a5:	mov    DWORD PTR [ebp-0x14],eax
640107a8:	call   0x64013290
640107ad:	lea    edx,[ebp+0x1c]
640107b0:	push   edx
640107b1:	mov    DWORD PTR [ebp-0x7c],0x44
640107b8:	call   0x640014a0
640107bd:	add    esp,0x10
640107c0:	cmp    DWORD PTR [ebp+0x34],0x10
640107c4:	mov    ebx,DWORD PTR [ebp+0x20]
640107c7:	mov    BYTE PTR [ebp-0x4],0xc
640107cb:	jae    0x640107d0
640107cd:	lea    ebx,[ebp+0x20]
640107d0:	mov    esi,DWORD PTR [ebp+0x18]
640107d3:	call   0x6400cc60
640107d8:	lea    ecx,[ebp-0x20]
640107db:	push   ecx
640107dc:	lea    edx,[ebp-0x7c]
640107df:	push   edx
640107e0:	push   edi
640107e1:	push   ebx
640107e2:	push   0x400
640107e7:	push   0x1
640107e9:	push   edi
640107ea:	push   edi
640107eb:	push   edi
640107ec:	push   esi
640107ed:	call   eax
640107ef:	cmp    eax,edi
640107f1:	je     0x64010805
640107f3:	mov    eax,DWORD PTR [ebp-0x1c]
640107f6:	mov    esi,DWORD PTR ds:0x64025040
640107fc:	push   eax
640107fd:	call   esi
640107ff:	mov    ecx,DWORD PTR [ebp-0x20]
64010802:	push   ecx
64010803:	call   esi
64010805:	mov    esi,DWORD PTR [ebp+0x18]
64010808:	call   0x6400cd40
6401080d:	push   0x4
6401080f:	push   edi
64010810:	push   esi
64010811:	call   eax
64010813:	mov    esi,DWORD PTR [ebp+0x14]
64010816:	call   0x6400cd40
6401081b:	push   0x4
6401081d:	push   edi
6401081e:	push   esi
6401081f:	call   eax
64010821:	cmp    DWORD PTR [ebp+0x34],0x10
64010825:	jb     0x64010833
64010827:	mov    edx,DWORD PTR [ebp+0x20]
6401082a:	push   edx
6401082b:	call   0x64012332
64010830:	add    esp,0x4
64010833:	mov    eax,DWORD PTR [ebp+0x8]
64010836:	add    eax,0xfffffff0
64010839:	mov    DWORD PTR [ebp+0x34],0xf
64010840:	mov    DWORD PTR [ebp+0x30],edi
64010843:	mov    BYTE PTR [ebp+0x20],0x0
64010847:	mov    BYTE PTR [ebp-0x4],0x7
6401084b:	lea    ecx,[eax+0xc]
6401084e:	or     edx,0xffffffff
64010851:	lock xadd DWORD PTR [ecx],edx
64010855:	dec    edx
64010856:	test   edx,edx
64010858:	jg     0x64010864
6401085a:	mov    ecx,DWORD PTR [eax]
6401085c:	mov    edx,DWORD PTR [ecx]
6401085e:	push   eax
6401085f:	mov    eax,DWORD PTR [edx+0x4]
64010862:	call   eax
64010864:	mov    eax,DWORD PTR [ebp+0x18]
64010867:	add    eax,0xfffffff0
6401086a:	mov    BYTE PTR [ebp-0x4],0x6
6401086e:	lea    ecx,[eax+0xc]
64010871:	or     edx,0xffffffff
64010874:	lock xadd DWORD PTR [ecx],edx
64010878:	dec    edx
64010879:	test   edx,edx
6401087b:	jg     0x64010887
6401087d:	mov    ecx,DWORD PTR [eax]
6401087f:	mov    edx,DWORD PTR [ecx]
64010881:	push   eax
64010882:	mov    eax,DWORD PTR [edx+0x4]
64010885:	call   eax
64010887:	mov    eax,DWORD PTR [ebp+0x14]
6401088a:	add    eax,0xfffffff0
6401088d:	mov    BYTE PTR [ebp-0x4],0x5
64010891:	lea    ecx,[eax+0xc]
64010894:	or     edx,0xffffffff
64010897:	lock xadd DWORD PTR [ecx],edx
6401089b:	dec    edx
6401089c:	test   edx,edx
6401089e:	jg     0x640108aa
640108a0:	mov    ecx,DWORD PTR [eax]
640108a2:	mov    edx,DWORD PTR [ecx]
640108a4:	push   eax
640108a5:	mov    eax,DWORD PTR [edx+0x4]
640108a8:	call   eax
640108aa:	mov    eax,DWORD PTR [ebp+0x10]
640108ad:	add    eax,0xfffffff0
640108b0:	mov    BYTE PTR [ebp-0x4],0x4
640108b4:	lea    ecx,[eax+0xc]
640108b7:	or     edx,0xffffffff
640108ba:	lock xadd DWORD PTR [ecx],edx
640108be:	dec    edx
640108bf:	test   edx,edx
640108c1:	jg     0x640108d7
640108c3:	mov    ecx,DWORD PTR [eax]
640108c5:	mov    edx,DWORD PTR [ecx]
640108c7:	push   eax
640108c8:	mov    eax,DWORD PTR [edx+0x4]
640108cb:	call   eax
640108cd:	jmp    0x640108d7
640108cf:	mov    eax,0x640108d5
640108d4:	ret    
640108d5:	xor    edi,edi
640108d7:	mov    esi,DWORD PTR [ebp-0x28]
640108da:	cmp    esi,edi
640108dc:	je     0x640108ed
640108de:	push   esi
640108df:	call   0x6400ecc0
640108e4:	push   esi
640108e5:	call   0x64012332
640108ea:	add    esp,0x8
640108ed:	mov    esi,0x10
640108f2:	cmp    DWORD PTR [ebp+0x6c],esi
640108f5:	jb     0x64010903
640108f7:	mov    ecx,DWORD PTR [ebp+0x58]
640108fa:	push   ecx
640108fb:	call   0x64012332
64010900:	add    esp,0x4
64010903:	cmp    DWORD PTR [ebp+0x50],esi
64010906:	mov    DWORD PTR [ebp+0x6c],0xf
6401090d:	mov    DWORD PTR [ebp+0x68],edi
64010910:	mov    BYTE PTR [ebp+0x58],0x0
64010914:	jb     0x6401093a
64010916:	mov    edx,DWORD PTR [ebp+0x3c]
64010919:	push   edx
6401091a:	call   0x64012332
6401091f:	add    esp,0x4
64010922:	jmp    0x6401093a
64010924:	mov    eax,0x6401092a
64010929:	ret    
6401092a:	lea    ecx,[ebp-0x38]
6401092d:	call   0x6400fb30
64010932:	lea    ecx,[ebp+0x38]
64010935:	call   0x64005f00
6401093a:	lea    esp,[ebp-0x8c]
64010940:	mov    ecx,DWORD PTR [ebp-0xc]
64010943:	mov    DWORD PTR fs:0x0,ecx
6401094a:	pop    ecx
6401094b:	pop    edi
6401094c:	pop    esi
6401094d:	pop    ebx
6401094e:	mov    ecx,DWORD PTR [ebp+0x70]
64010951:	xor    ecx,ebp
64010953:	call   0x64012b8c
64010958:	add    ebp,0x74
6401095b:	mov    esp,ebp
6401095d:	pop    ebp
6401095e:	ret    
6401095f:	int3   
64010960:	push   ecx
64010961:	push   esi
64010962:	mov    esi,ecx
64010964:	mov    eax,DWORD PTR [esi+0x4]
64010967:	test   eax,eax
64010969:	je     0x64010987
6401096b:	mov    ecx,DWORD PTR [esp+0x4]
6401096f:	mov    edx,DWORD PTR [esi+0x8]
64010972:	push   ecx
64010973:	push   esi
64010974:	push   edx
64010975:	push   eax
64010976:	call   0x6400ae60
6401097b:	mov    eax,DWORD PTR [esi+0x4]
6401097e:	push   eax
6401097f:	call   0x64012332
64010984:	add    esp,0x14
64010987:	mov    DWORD PTR [esi+0x4],0x0
6401098e:	mov    DWORD PTR [esi+0x8],0x0
64010995:	mov    DWORD PTR [esi+0xc],0x0
6401099c:	pop    esi
6401099d:	pop    ecx
6401099e:	ret    
6401099f:	int3   
640109a0:	push   0xffffffff
640109a2:	push   0x640222ae
640109a7:	mov    eax,fs:0x0
640109ad:	push   eax
640109ae:	push   ecx
640109af:	push   ebx
640109b0:	push   esi
640109b1:	push   edi
640109b2:	mov    eax,ds:0x6402d09c
640109b7:	xor    eax,esp
640109b9:	push   eax
640109ba:	lea    eax,[esp+0x14]
640109be:	mov    fs:0x0,eax
640109c4:	mov    eax,0x1
640109c9:	test   BYTE PTR ds:0x6402e4c8,al
640109cf:	jne    0x64010a0a
640109d1:	or     DWORD PTR ds:0x6402e4c8,eax
640109d7:	push   0x64024130
640109dc:	mov    DWORD PTR ds:0x6402e4bc,0x0
640109e6:	mov    DWORD PTR ds:0x6402e4c0,0x0
640109f0:	mov    DWORD PTR ds:0x6402e4c4,0x0
640109fa:	call   0x64012cbf
640109ff:	add    esp,0x4
64010a02:	mov    DWORD PTR [esp+0x1c],0xffffffff
64010a0a:	mov    esi,DWORD PTR ds:0x6402e4bc
64010a10:	test   esi,esi
64010a12:	je     0x64010a27
64010a14:	mov    edi,DWORD PTR ds:0x6402e4c0
64010a1a:	mov    eax,edi
64010a1c:	sub    eax,esi
64010a1e:	sar    eax,0x2
64010a21:	jne    0x64010b3d
64010a27:	push   0x640255a0
64010a2c:	push   0xc
64010a2e:	push   0x64025590
64010a33:	call   0x64005750
64010a38:	mov    esi,DWORD PTR ds:0x640251c8
64010a3e:	add    esp,0xc
64010a41:	push   eax
64010a42:	call   esi
64010a44:	lea    ecx,[esp+0x10]
64010a48:	push   ecx
64010a49:	mov    ecx,0x6402e4b8
64010a4e:	mov    DWORD PTR [esp+0x14],eax
64010a52:	call   0x64010460
64010a57:	push   0x64025558
64010a5c:	push   0xc
64010a5e:	push   0x64025548
64010a63:	call   0x64005750
64010a68:	add    esp,0xc
64010a6b:	push   eax
64010a6c:	call   esi
64010a6e:	lea    edx,[esp+0x10]
64010a72:	push   edx
64010a73:	mov    ecx,0x6402e4b8
64010a78:	mov    DWORD PTR [esp+0x14],eax
64010a7c:	call   0x64010460
64010a81:	push   0x64025524
64010a86:	push   0xc
64010a88:	push   0x64025548
64010a8d:	call   0x64005750
64010a92:	add    esp,0xc
64010a95:	push   eax
64010a96:	call   esi
64010a98:	mov    DWORD PTR [esp+0x10],eax
64010a9c:	lea    eax,[esp+0x10]
64010aa0:	push   eax
64010aa1:	mov    ecx,0x6402e4b8
64010aa6:	call   0x64010460
64010aab:	push   0x640254e4
64010ab0:	push   0xc
64010ab2:	push   0x640254d4
64010ab7:	call   0x64005750
64010abc:	add    esp,0xc
64010abf:	push   eax
64010ac0:	call   esi
64010ac2:	lea    ecx,[esp+0x10]
64010ac6:	push   ecx
64010ac7:	mov    ecx,0x6402e4b8
64010acc:	mov    DWORD PTR [esp+0x14],eax
64010ad0:	call   0x64010460
64010ad5:	push   0x64025494
64010ada:	push   0xc
64010adc:	push   0x640254d4
64010ae1:	call   0x64005750
64010ae6:	add    esp,0xc
64010ae9:	push   eax
64010aea:	call   esi
64010aec:	lea    edx,[esp+0x10]
64010af0:	push   edx
64010af1:	mov    ecx,0x6402e4b8
64010af6:	mov    DWORD PTR [esp+0x14],eax
64010afa:	call   0x64010460
64010aff:	call   DWORD PTR ds:0x6402505c
64010b05:	push   eax
64010b06:	call   0x6401333c
64010b0b:	mov    eax,ds:0x6402e4bc
64010b10:	add    esp,0x4
64010b13:	test   eax,eax
64010b15:	jne    0x64010b1b
64010b17:	xor    esi,esi
64010b19:	jmp    0x64010b26
64010b1b:	mov    esi,DWORD PTR ds:0x6402e4c0
64010b21:	sub    esi,eax
64010b23:	sar    esi,0x2
64010b26:	call   0x64013349
64010b2b:	mov    edi,DWORD PTR ds:0x6402e4c0
64010b31:	xor    edx,edx
64010b33:	div    esi
64010b35:	mov    esi,DWORD PTR ds:0x6402e4bc
64010b3b:	jmp    0x64010b43
64010b3d:	mov    edx,DWORD PTR ds:0x6402e4b4
64010b43:	test   esi,esi
64010b45:	jne    0x64010b4b
64010b47:	xor    ecx,ecx
64010b49:	jmp    0x64010b52
64010b4b:	mov    ecx,edi
64010b4d:	sub    ecx,esi
64010b4f:	sar    ecx,0x2
64010b52:	lea    eax,[edx+0x1]
64010b55:	xor    edx,edx
64010b57:	div    ecx
64010b59:	test   esi,esi
64010b5b:	mov    DWORD PTR ds:0x6402e4b4,edx
64010b61:	mov    ebx,edx
64010b63:	je     0x64010b6e
64010b65:	sub    edi,esi
64010b67:	sar    edi,0x2
64010b6a:	cmp    edx,edi
64010b6c:	jb     0x64010b8e
64010b6e:	call   0x640126e8
64010b73:	mov    eax,ds:0x6402e4bc
64010b78:	mov    eax,DWORD PTR [eax+ebx*4]
64010b7b:	mov    ecx,DWORD PTR [esp+0x14]
64010b7f:	mov    DWORD PTR fs:0x0,ecx
64010b86:	pop    ecx
64010b87:	pop    edi
64010b88:	pop    esi
64010b89:	pop    ebx
64010b8a:	add    esp,0x10
64010b8d:	ret    
64010b8e:	mov    eax,DWORD PTR [esi+ebx*4]
64010b91:	mov    ecx,DWORD PTR [esp+0x14]
64010b95:	mov    DWORD PTR fs:0x0,ecx
64010b9c:	pop    ecx
64010b9d:	pop    edi
64010b9e:	pop    esi
64010b9f:	pop    ebx
64010ba0:	add    esp,0x10
64010ba3:	ret    
64010ba4:	int3   
64010ba5:	int3   
64010ba6:	int3   
64010ba7:	int3   
64010ba8:	int3   
64010ba9:	int3   
64010baa:	int3   
64010bab:	int3   
64010bac:	int3   
64010bad:	int3   
64010bae:	int3   
64010baf:	int3   
64010bb0:	push   ebp
64010bb1:	mov    ebp,esp
64010bb3:	push   0xffffffff
64010bb5:	push   0x640222d8
64010bba:	mov    eax,fs:0x0
64010bc0:	push   eax
64010bc1:	sub    esp,0x8
64010bc4:	push   ebx
64010bc5:	push   esi
64010bc6:	push   edi
64010bc7:	mov    eax,ds:0x6402d09c
64010bcc:	xor    eax,ebp
64010bce:	push   eax
64010bcf:	lea    eax,[ebp-0xc]
64010bd2:	mov    fs:0x0,eax
64010bd8:	mov    DWORD PTR [ebp-0x10],esp
64010bdb:	xor    ebx,ebx
64010bdd:	mov    DWORD PTR [ebp-0x4],ebx
64010be0:	call   0x640109a0
64010be5:	lea    ecx,[ebp-0x14]
64010be8:	mov    edi,eax
64010bea:	call   0x64008fb0
64010bef:	mov    eax,DWORD PTR [ebp+0x8]
64010bf2:	cmp    DWORD PTR [eax+0x18],0x10
64010bf6:	mov    ecx,DWORD PTR [eax+0x14]
64010bf9:	mov    BYTE PTR [ebp-0x4],0x1
64010bfd:	jb     0x64010c04
64010bff:	mov    eax,DWORD PTR [eax+0x4]
64010c02:	jmp    0x64010c07
64010c04:	add    eax,0x4
64010c07:	mov    esi,DWORD PTR [ebp+0xc]
64010c0a:	push   0xffffffff
64010c0c:	push   esi
64010c0d:	add    ecx,0x1
64010c10:	push   ecx
64010c11:	push   eax
64010c12:	push   edi
64010c13:	lea    ecx,[ebp-0x14]
64010c16:	call   0x64008fd0
64010c1b:	cmp    al,bl
64010c1d:	je     0x64010c3e
64010c1f:	lea    ecx,[ebp-0x14]
64010c22:	mov    BYTE PTR [ebp-0x4],bl
64010c25:	call   0x64008fc0
64010c2a:	mov    al,0x1
64010c2c:	mov    ecx,DWORD PTR [ebp-0xc]
64010c2f:	mov    DWORD PTR fs:0x0,ecx
64010c36:	pop    ecx
64010c37:	pop    edi
64010c38:	pop    esi
64010c39:	pop    ebx
64010c3a:	mov    esp,ebp
64010c3c:	pop    ebp
64010c3d:	ret    
64010c3e:	push   ebx
64010c3f:	push   0x6402771a
64010c44:	mov    ecx,esi
64010c46:	call   0x64001860
64010c4b:	lea    ecx,[ebp-0x14]
64010c4e:	mov    BYTE PTR [ebp-0x4],bl
64010c51:	call   0x64008fc0
64010c56:	xor    al,al
64010c58:	mov    ecx,DWORD PTR [ebp-0xc]
64010c5b:	mov    DWORD PTR fs:0x0,ecx
64010c62:	pop    ecx
64010c63:	pop    edi
64010c64:	pop    esi
64010c65:	pop    ebx
64010c66:	mov    esp,ebp
64010c68:	pop    ebp
64010c69:	ret    
64010c6a:	mov    eax,0x64010c56
64010c6f:	ret    
64010c70:	push   ecx
64010c71:	push   esi
64010c72:	push   0x640255f0
64010c77:	push   0x17
64010c79:	push   0x640255d8
64010c7e:	mov    DWORD PTR [esp+0x10],0x0
64010c86:	call   0x64005750
64010c8b:	mov    esi,DWORD PTR [esp+0x18]
64010c8f:	add    esp,0xc
64010c92:	push   eax
64010c93:	mov    ecx,esi
64010c95:	call   0x640054b0
64010c9a:	mov    eax,esi
64010c9c:	pop    esi
64010c9d:	pop    ecx
64010c9e:	ret    
64010c9f:	int3   
64010ca0:	push   0xffffffff
64010ca2:	push   0x64022308
64010ca7:	mov    eax,fs:0x0
64010cad:	push   eax
64010cae:	push   ecx
64010caf:	push   esi
64010cb0:	mov    eax,ds:0x6402d09c
64010cb5:	xor    eax,esp
64010cb7:	push   eax
64010cb8:	lea    eax,[esp+0xc]
64010cbc:	mov    fs:0x0,eax
64010cc2:	lea    eax,[esp+0x8]
64010cc6:	push   eax
64010cc7:	call   0x64010c70
64010ccc:	add    esp,0x4
64010ccf:	mov    eax,DWORD PTR [eax]
64010cd1:	push   eax
64010cd2:	push   0x0
64010cd4:	mov    DWORD PTR [esp+0x1c],0x0
64010cdc:	call   0x640053b0
64010ce1:	push   eax
64010ce2:	call   DWORD PTR ds:0x64025064
64010ce8:	mov    esi,eax
64010cea:	mov    eax,DWORD PTR [esp+0x8]
64010cee:	add    eax,0xfffffff0
64010cf1:	mov    DWORD PTR [esp+0x14],0xffffffff
64010cf9:	lea    ecx,[eax+0xc]
64010cfc:	or     edx,0xffffffff
64010cff:	lock xadd DWORD PTR [ecx],edx
64010d03:	dec    edx
64010d04:	test   edx,edx
64010d06:	jg     0x64010d12
64010d08:	mov    ecx,DWORD PTR [eax]
64010d0a:	mov    edx,DWORD PTR [ecx]
64010d0c:	push   eax
64010d0d:	mov    eax,DWORD PTR [edx+0x4]
64010d10:	call   eax
64010d12:	test   esi,esi
64010d14:	jne    0x64010d29
64010d16:	xor    al,al
64010d18:	mov    ecx,DWORD PTR [esp+0xc]
64010d1c:	mov    DWORD PTR fs:0x0,ecx
64010d23:	pop    ecx
64010d24:	pop    esi
64010d25:	add    esp,0x10
64010d28:	ret    
64010d29:	push   0x0
64010d2b:	push   esi
64010d2c:	call   DWORD PTR ds:0x640250b4
64010d32:	test   eax,eax
64010d34:	sete   al
64010d37:	mov    ecx,DWORD PTR [esp+0xc]
64010d3b:	mov    DWORD PTR fs:0x0,ecx
64010d42:	pop    ecx
64010d43:	pop    esi
64010d44:	add    esp,0x10
64010d47:	ret    
64010d48:	int3   
64010d49:	int3   
64010d4a:	int3   
64010d4b:	int3   
64010d4c:	int3   
64010d4d:	int3   
64010d4e:	int3   
64010d4f:	int3   
64010d50:	push   0xffffffff
64010d52:	push   0x64022340
64010d57:	mov    eax,fs:0x0
64010d5d:	push   eax
64010d5e:	sub    esp,0x8
64010d61:	push   ebx
64010d62:	push   esi
64010d63:	push   edi
64010d64:	mov    eax,ds:0x6402d09c
64010d69:	xor    eax,esp
64010d6b:	push   eax
64010d6c:	lea    eax,[esp+0x18]
64010d70:	mov    fs:0x0,eax
64010d76:	xor    ebx,ebx
64010d78:	mov    DWORD PTR [esp+0x14],ebx
64010d7c:	push   0x6402564c
64010d81:	push   0xf
64010d83:	push   0x6402562c
64010d88:	mov    DWORD PTR [esp+0x2c],ebx
64010d8c:	call   0x64005a10
64010d91:	add    esp,0xc
64010d94:	push   eax
64010d95:	lea    ecx,[esp+0x14]
64010d99:	call   0x64002540
64010d9e:	mov    eax,DWORD PTR [esp+0x10]
64010da2:	push   ebx
64010da3:	push   ebx
64010da4:	push   0x3
64010da6:	push   ebx
64010da7:	push   ebx
64010da8:	push   0xc0000000
64010dad:	push   eax
64010dae:	mov    BYTE PTR [esp+0x3c],0x1
64010db3:	call   0x6400cf00
64010db8:	call   eax
64010dba:	mov    esi,eax
64010dbc:	mov    eax,DWORD PTR [esp+0x10]
64010dc0:	add    eax,0xfffffff0
64010dc3:	mov    DWORD PTR [esp+0x14],esi
64010dc7:	mov    BYTE PTR [esp+0x20],bl
64010dcb:	or     edx,0xffffffff
64010dce:	lea    ecx,[eax+0xc]
64010dd1:	lock xadd DWORD PTR [ecx],edx
64010dd5:	dec    edx
64010dd6:	cmp    esi,0xffffffff
64010dd9:	je     0x64010e18
64010ddb:	test   edx,edx
64010ddd:	jg     0x64010de9
64010ddf:	mov    ecx,DWORD PTR [eax]
64010de1:	mov    edx,DWORD PTR [ecx]
64010de3:	push   eax
64010de4:	mov    eax,DWORD PTR [edx+0x4]
64010de7:	call   eax
64010de9:	cmp    esi,ebx
64010deb:	je     0x64010e03
64010ded:	call   DWORD PTR ds:0x64025044
64010df3:	push   esi
64010df4:	mov    edi,eax
64010df6:	call   DWORD PTR ds:0x64025040
64010dfc:	push   edi
64010dfd:	call   DWORD PTR ds:0x64025060
64010e03:	mov    al,0x1
64010e05:	mov    ecx,DWORD PTR [esp+0x18]
64010e09:	mov    DWORD PTR fs:0x0,ecx
64010e10:	pop    ecx
64010e11:	pop    edi
64010e12:	pop    esi
64010e13:	pop    ebx
64010e14:	add    esp,0x14
64010e17:	ret    
64010e18:	test   edx,edx
64010e1a:	jg     0x64010e26
64010e1c:	mov    ecx,DWORD PTR [eax]
64010e1e:	mov    edx,DWORD PTR [ecx]
64010e20:	push   eax
64010e21:	mov    eax,DWORD PTR [edx+0x4]
64010e24:	call   eax
64010e26:	call   DWORD PTR ds:0x64025044
64010e2c:	push   0xffffffff
64010e2e:	mov    esi,eax
64010e30:	call   DWORD PTR ds:0x64025040
64010e36:	push   esi
64010e37:	call   DWORD PTR ds:0x64025060
64010e3d:	xor    al,al
64010e3f:	mov    ecx,DWORD PTR [esp+0x18]
64010e43:	mov    DWORD PTR fs:0x0,ecx
64010e4a:	pop    ecx
64010e4b:	pop    edi
64010e4c:	pop    esi
64010e4d:	pop    ebx
64010e4e:	add    esp,0x14
64010e51:	ret    
64010e52:	int3   
64010e53:	int3   
64010e54:	int3   
64010e55:	int3   
64010e56:	int3   
64010e57:	int3   
64010e58:	int3   
64010e59:	int3   
64010e5a:	int3   
64010e5b:	int3   
64010e5c:	int3   
64010e5d:	int3   
64010e5e:	int3   
64010e5f:	int3   
64010e60:	push   ebp
64010e61:	lea    ebp,[esp-0x128]
64010e68:	sub    esp,0x128
64010e6e:	push   0xffffffff
64010e70:	push   0x64022461
64010e75:	mov    eax,fs:0x0
64010e7b:	push   eax
64010e7c:	sub    esp,0x90
64010e82:	mov    eax,ds:0x6402d09c
64010e87:	xor    eax,ebp
64010e89:	mov    DWORD PTR [ebp+0x124],eax
64010e8f:	push   ebx
64010e90:	push   esi
64010e91:	push   edi
64010e92:	push   eax
64010e93:	lea    eax,[ebp-0xc]
64010e96:	mov    fs:0x0,eax
64010e9c:	mov    esi,DWORD PTR [ebp+0x130]
64010ea2:	xor    ebx,ebx
64010ea4:	mov    DWORD PTR [ebp-0x4],ebx
64010ea7:	mov    DWORD PTR [ebp-0x58],esi
64010eaa:	mov    DWORD PTR [ebp-0x50],ebx
64010ead:	call   DWORD PTR ds:0x6402d06c
64010eb3:	mov    eax,ds:0x6402e540
64010eb8:	mov    edx,DWORD PTR [eax+0xc]
64010ebb:	mov    ecx,0x6402e540
64010ec0:	call   edx
64010ec2:	add    eax,0x10
64010ec5:	mov    DWORD PTR [esi],eax
64010ec7:	push   0x64025a20
64010ecc:	push   0xd
64010ece:	mov    edi,0x1
64010ed3:	push   0x64025a10
64010ed8:	mov    DWORD PTR [ebp-0x4],ebx
64010edb:	mov    DWORD PTR [ebp-0x50],edi
64010ede:	call   0x64005750
64010ee3:	add    esp,0xc
64010ee6:	push   eax
64010ee7:	mov    ecx,esi
64010ee9:	call   0x64002610
64010eee:	push   0x640259ec
64010ef3:	push   0x3
64010ef5:	push   0x640259e8
64010efa:	call   0x64005750
64010eff:	add    esp,0xc
64010f02:	push   eax
64010f03:	mov    ecx,esi
64010f05:	call   0x64002610
64010f0a:	push   0x640259dc
64010f0f:	mov    ecx,esi
64010f11:	call   0x64002610
64010f16:	push   0x640259a0
64010f1b:	push   0x3
64010f1d:	push   0x6402599c
64010f22:	call   0x64005750
64010f27:	add    esp,0xc
64010f2a:	push   eax
64010f2b:	mov    ecx,esi
64010f2d:	call   0x64002610
64010f32:	push   0x64025994
64010f37:	mov    ecx,esi
64010f39:	call   0x64002610
64010f3e:	mov    eax,ds:0x6402e540
64010f43:	mov    edx,DWORD PTR [eax+0xc]
64010f46:	mov    ecx,0x6402e540
64010f4b:	call   edx
64010f4d:	add    eax,0x10
64010f50:	mov    DWORD PTR [ebp-0x4c],eax
64010f53:	mov    eax,ds:0x6402e540
64010f58:	mov    edx,DWORD PTR [eax+0xc]
64010f5b:	mov    ecx,0x6402e540
64010f60:	mov    DWORD PTR [ebp-0x4],edi
64010f63:	call   edx
64010f65:	add    eax,0x10
64010f68:	mov    DWORD PTR [ebp-0x54],eax
64010f6b:	lea    eax,[ebp+0x114]
64010f71:	push   eax
64010f72:	mov    BYTE PTR [ebp-0x4],0x2
64010f76:	call   0x64005200
64010f7b:	add    esp,0x4
64010f7e:	test   al,al
64010f80:	je     0x64011020
64010f86:	push   0x64025960
64010f8b:	push   0x4
64010f8d:	push   0x64025958
64010f92:	call   0x64005750
64010f97:	add    esp,0xc
64010f9a:	push   eax
64010f9b:	lea    ecx,[ebp-0x10]
64010f9e:	call   0x640054b0
64010fa3:	mov    eax,DWORD PTR [eax]
64010fa5:	mov    ecx,DWORD PTR [eax-0xc]
64010fa8:	push   ecx
64010fa9:	push   eax
64010faa:	mov    ecx,esi
64010fac:	mov    BYTE PTR [ebp-0x4],0x3
64010fb0:	call   0x64002990
64010fb5:	mov    eax,DWORD PTR [ebp-0x10]
64010fb8:	add    eax,0xfffffff0
64010fbb:	mov    BYTE PTR [ebp-0x4],0x2
64010fbf:	lea    ecx,[eax+0xc]
64010fc2:	or     edx,0xffffffff
64010fc5:	lock xadd DWORD PTR [ecx],edx
64010fc9:	dec    edx
64010fca:	test   edx,edx
64010fcc:	jg     0x64010fd8
64010fce:	mov    ecx,DWORD PTR [eax]
64010fd0:	mov    edx,DWORD PTR [ecx]
64010fd2:	push   eax
64010fd3:	mov    eax,DWORD PTR [edx+0x4]
64010fd6:	call   eax
64010fd8:	lea    ecx,[ebp+0x114]
64010fde:	push   ecx
64010fdf:	lea    edx,[ebp-0x10]
64010fe2:	push   edx
64010fe3:	call   0x64002e60
64010fe8:	add    esp,0x8
64010feb:	mov    eax,DWORD PTR [eax]
64010fed:	mov    ecx,DWORD PTR [eax-0xc]
64010ff0:	push   ecx
64010ff1:	push   eax
64010ff2:	mov    ecx,esi
64010ff4:	mov    BYTE PTR [ebp-0x4],0x4
64010ff8:	call   0x64002990
64010ffd:	mov    eax,DWORD PTR [ebp-0x10]
64011000:	add    eax,0xfffffff0
64011003:	mov    BYTE PTR [ebp-0x4],0x2
64011007:	lea    ecx,[eax+0xc]
6401100a:	or     edx,0xffffffff
6401100d:	lock xadd DWORD PTR [ecx],edx
64011011:	dec    edx
64011012:	test   edx,edx
64011014:	jg     0x64011020
64011016:	mov    ecx,DWORD PTR [eax]
64011018:	mov    edx,DWORD PTR [ecx]
6401101a:	push   eax
6401101b:	mov    eax,DWORD PTR [edx+0x4]
6401101e:	call   eax
64011020:	call   0x6400f990
64011025:	test   al,al
64011027:	je     0x64011045
64011029:	push   0x64025918
6401102e:	push   0x6
64011030:	push   0x64025910
64011035:	call   0x64005750
6401103a:	add    esp,0xc
6401103d:	push   eax
6401103e:	mov    ecx,esi
64011040:	call   0x64002610
64011045:	call   0x64010d50
6401104a:	test   al,al
6401104c:	je     0x6401106a
6401104e:	push   0x640258d8
64011053:	push   0x6
64011055:	push   0x640258d0
6401105a:	call   0x64005750
6401105f:	add    esp,0xc
64011062:	push   eax
64011063:	mov    ecx,esi
64011065:	call   0x64002610
6401106a:	mov    edx,DWORD PTR ds:0x6402e540
64011070:	mov    eax,DWORD PTR [edx+0xc]
64011073:	mov    ecx,0x6402e540
64011078:	call   eax
6401107a:	add    eax,0x10
6401107d:	mov    DWORD PTR [ebp-0x28],eax
64011080:	mov    edx,DWORD PTR ds:0x6402e540
64011086:	mov    eax,DWORD PTR [edx+0xc]
64011089:	mov    ecx,0x6402e540
6401108e:	mov    BYTE PTR [ebp-0x4],0x5
64011092:	call   eax
64011094:	add    eax,0x10
64011097:	mov    DWORD PTR [ebp-0x48],eax
6401109a:	mov    edx,DWORD PTR ds:0x6402e540
640110a0:	mov    eax,DWORD PTR [edx+0xc]
640110a3:	mov    ecx,0x6402e540
640110a8:	mov    BYTE PTR [ebp-0x4],0x6
640110ac:	call   eax
640110ae:	add    eax,0x10
640110b1:	mov    DWORD PTR [ebp-0x24],eax
640110b4:	lea    ecx,[ebp-0x44]
640110b7:	push   ecx
640110b8:	lea    edx,[ebp-0x24]
640110bb:	push   edx
640110bc:	lea    eax,[ebp-0x28]
640110bf:	push   eax
640110c0:	mov    BYTE PTR [ebp-0x4],0x7
640110c4:	mov    DWORD PTR [ebp-0x44],ebx
640110c7:	mov    DWORD PTR [ebp-0x40],ebx
640110ca:	call   0x64009e10
640110cf:	add    esp,0xc
640110d2:	test   al,al
640110d4:	je     0x64011315
640110da:	lea    ecx,[ebp-0x24]
640110dd:	push   ecx
640110de:	lea    edx,[ebp-0x14]
640110e1:	push   edx
640110e2:	call   0x64003100
640110e7:	mov    edi,eax
640110e9:	push   0x6402589c
640110ee:	push   0x5
640110f0:	mov    bl,0x8
640110f2:	push   0x64025894
640110f7:	mov    BYTE PTR [ebp-0x4],bl
640110fa:	call   0x64005750
640110ff:	add    esp,0x14
64011102:	push   eax
64011103:	lea    ecx,[ebp-0x18]
64011106:	call   0x640054b0
6401110b:	push   edi
6401110c:	push   eax
6401110d:	lea    eax,[ebp-0x10]
64011110:	push   eax
64011111:	mov    BYTE PTR [ebp-0x4],0x9
64011115:	call   0x6400fc90
6401111a:	add    esp,0xc
6401111d:	mov    eax,DWORD PTR [eax]
6401111f:	mov    ecx,DWORD PTR [eax-0xc]
64011122:	push   ecx
64011123:	push   eax
64011124:	mov    ecx,esi
64011126:	mov    BYTE PTR [ebp-0x4],0xa
6401112a:	call   0x64002990
6401112f:	mov    eax,DWORD PTR [ebp-0x10]
64011132:	add    eax,0xfffffff0
64011135:	mov    BYTE PTR [ebp-0x4],0x9
64011139:	lea    ecx,[eax+0xc]
6401113c:	or     edx,0xffffffff
6401113f:	lock xadd DWORD PTR [ecx],edx
64011143:	dec    edx
64011144:	test   edx,edx
64011146:	jg     0x64011152
64011148:	mov    ecx,DWORD PTR [eax]
6401114a:	mov    edx,DWORD PTR [ecx]
6401114c:	push   eax
6401114d:	mov    eax,DWORD PTR [edx+0x4]
64011150:	call   eax
64011152:	mov    eax,DWORD PTR [ebp-0x18]
64011155:	add    eax,0xfffffff0
64011158:	mov    BYTE PTR [ebp-0x4],bl
6401115b:	lea    ecx,[eax+0xc]
6401115e:	or     edx,0xffffffff
64011161:	lock xadd DWORD PTR [ecx],edx
64011165:	dec    edx
64011166:	test   edx,edx
64011168:	jg     0x64011174
6401116a:	mov    ecx,DWORD PTR [eax]
6401116c:	mov    edx,DWORD PTR [ecx]
6401116e:	push   eax
6401116f:	mov    eax,DWORD PTR [edx+0x4]
64011172:	call   eax
64011174:	mov    eax,DWORD PTR [ebp-0x14]
64011177:	add    eax,0xfffffff0
6401117a:	mov    BYTE PTR [ebp-0x4],0x7
6401117e:	lea    ecx,[eax+0xc]
64011181:	or     edx,0xffffffff
64011184:	lock xadd DWORD PTR [ecx],edx
64011188:	dec    edx
64011189:	test   edx,edx
6401118b:	jg     0x64011197
6401118d:	mov    ecx,DWORD PTR [eax]
6401118f:	mov    edx,DWORD PTR [ecx]
64011191:	push   eax
64011192:	mov    eax,DWORD PTR [edx+0x4]
64011195:	call   eax
64011197:	lea    ecx,[ebp-0x28]
6401119a:	push   ecx
6401119b:	lea    edx,[ebp-0x10]
6401119e:	push   edx
6401119f:	call   0x64003100
640111a4:	mov    edi,eax
640111a6:	push   0x64025864
640111ab:	push   0x7
640111ad:	mov    bl,0xb
640111af:	push   0x6402585c
640111b4:	mov    BYTE PTR [ebp-0x4],bl
640111b7:	call   0x64005750
640111bc:	add    esp,0x14
640111bf:	push   eax
640111c0:	lea    ecx,[ebp-0x18]
640111c3:	call   0x640054b0
640111c8:	push   edi
640111c9:	push   eax
640111ca:	lea    eax,[ebp-0x14]
640111cd:	push   eax
640111ce:	mov    BYTE PTR [ebp-0x4],0xc
640111d2:	call   0x6400fc90
640111d7:	add    esp,0xc
640111da:	mov    eax,DWORD PTR [eax]
640111dc:	mov    ecx,DWORD PTR [eax-0xc]
640111df:	push   ecx
640111e0:	push   eax
640111e1:	mov    ecx,esi
640111e3:	mov    BYTE PTR [ebp-0x4],0xd
640111e7:	call   0x64002990
640111ec:	mov    eax,DWORD PTR [ebp-0x14]
640111ef:	add    eax,0xfffffff0
640111f2:	mov    BYTE PTR [ebp-0x4],0xc
640111f6:	lea    ecx,[eax+0xc]
640111f9:	or     edx,0xffffffff
640111fc:	lock xadd DWORD PTR [ecx],edx
64011200:	dec    edx
64011201:	test   edx,edx
64011203:	jg     0x6401120f
64011205:	mov    ecx,DWORD PTR [eax]
64011207:	mov    edx,DWORD PTR [ecx]
64011209:	push   eax
6401120a:	mov    eax,DWORD PTR [edx+0x4]
6401120d:	call   eax
6401120f:	mov    eax,DWORD PTR [ebp-0x18]
64011212:	add    eax,0xfffffff0
64011215:	mov    BYTE PTR [ebp-0x4],bl
64011218:	lea    ecx,[eax+0xc]
6401121b:	or     edx,0xffffffff
6401121e:	lock xadd DWORD PTR [ecx],edx
64011222:	dec    edx
64011223:	test   edx,edx
64011225:	jg     0x64011231
64011227:	mov    ecx,DWORD PTR [eax]
64011229:	mov    edx,DWORD PTR [ecx]
6401122b:	push   eax
6401122c:	mov    eax,DWORD PTR [edx+0x4]
6401122f:	call   eax
64011231:	mov    eax,DWORD PTR [ebp-0x10]
64011234:	add    eax,0xfffffff0
64011237:	mov    BYTE PTR [ebp-0x4],0x7
6401123b:	lea    ecx,[eax+0xc]
6401123e:	or     edx,0xffffffff
64011241:	lock xadd DWORD PTR [ecx],edx
64011245:	dec    edx
64011246:	test   edx,edx
64011248:	jg     0x64011254
6401124a:	mov    ecx,DWORD PTR [eax]
6401124c:	mov    edx,DWORD PTR [ecx]
6401124e:	push   eax
6401124f:	mov    eax,DWORD PTR [edx+0x4]
64011252:	call   eax
64011254:	mov    edx,DWORD PTR ds:0x6402e540
6401125a:	mov    eax,DWORD PTR [edx+0xc]
6401125d:	mov    ecx,0x6402e540
64011262:	call   eax
64011264:	add    eax,0x10
64011267:	mov    DWORD PTR [ebp-0x10],eax
6401126a:	mov    ecx,DWORD PTR [ebp-0x40]
6401126d:	mov    edx,DWORD PTR [ebp-0x44]
64011270:	push   ecx
64011271:	push   edx
64011272:	push   0x64025824
64011277:	push   0xc
64011279:	push   0x64025808
6401127e:	mov    BYTE PTR [ebp-0x4],0xe
64011282:	call   0x64005a10
64011287:	add    esp,0xc
6401128a:	push   eax
6401128b:	lea    eax,[ebp-0x10]
6401128e:	push   eax
6401128f:	call   0x64001d40
64011294:	add    esp,0x10
64011297:	call   DWORD PTR ds:0x6402d06c
6401129d:	mov    edi,DWORD PTR [ebp-0x10]
640112a0:	cmp    DWORD PTR [edi-0x4],0x1
640112a4:	mov    DWORD PTR [ebp-0x14],eax
640112a7:	jle    0x640112b8
640112a9:	mov    ecx,DWORD PTR [edi-0xc]
640112ac:	push   ecx
640112ad:	lea    ecx,[ebp-0x10]
640112b0:	call   0x64001950
640112b5:	mov    edi,DWORD PTR [ebp-0x10]
640112b8:	test   edi,edi
640112ba:	jne    0x640112c0
640112bc:	xor    eax,eax
640112be:	jmp    0x640112ed
640112c0:	push   edi
640112c1:	call   DWORD PTR ds:0x64025054
640112c7:	add    eax,0x1
640112ca:	cmp    eax,0x3fffffff
640112cf:	jle    0x640112d5
640112d1:	xor    eax,eax
640112d3:	jmp    0x640112ed
640112d5:	lea    ebx,[eax+eax*1]
640112d8:	mov    eax,ebx
640112da:	call   0x64013310
640112df:	mov    edx,DWORD PTR [ebp-0x14]
640112e2:	mov    eax,esp
640112e4:	push   edx
640112e5:	push   ebx
640112e6:	push   edi
640112e7:	push   eax
640112e8:	call   0x64002b30
640112ed:	push   eax
640112ee:	mov    ecx,esi
640112f0:	call   0x64002610
640112f5:	add    edi,0xfffffff0
640112f8:	mov    BYTE PTR [ebp-0x4],0x7
640112fc:	lea    eax,[edi+0xc]
640112ff:	or     ecx,0xffffffff
64011302:	lock xadd DWORD PTR [eax],ecx
64011306:	dec    ecx
64011307:	test   ecx,ecx
64011309:	jg     0x64011315
6401130b:	mov    ecx,DWORD PTR [edi]
6401130d:	mov    edx,DWORD PTR [ecx]
6401130f:	mov    eax,DWORD PTR [edx+0x4]
64011312:	push   edi
64011313:	call   eax
64011315:	xor    edi,edi
64011317:	mov    DWORD PTR [ebp-0x38],edi
6401131a:	mov    DWORD PTR [ebp-0x34],edi
6401131d:	mov    DWORD PTR [ebp-0x30],edi
64011320:	lea    ecx,[ebp-0x3c]
64011323:	push   ecx
64011324:	mov    BYTE PTR [ebp-0x4],0xf
64011328:	call   0x64009fc0
6401132d:	add    esp,0x4
64011330:	mov    DWORD PTR [ebp-0x10],edi
64011333:	xor    ebx,ebx
64011335:	mov    eax,DWORD PTR [ebp-0x38]
64011338:	cmp    eax,edi
6401133a:	jne    0x64011340
6401133c:	xor    eax,eax
6401133e:	jmp    0x64011358
64011340:	mov    ecx,DWORD PTR [ebp-0x34]
64011343:	sub    ecx,eax
64011345:	mov    eax,0x92492493
6401134a:	imul   ecx
6401134c:	add    edx,ecx
6401134e:	sar    edx,0x4
64011351:	mov    eax,edx
64011353:	shr    eax,0x1f
64011356:	add    eax,edx
64011358:	cmp    DWORD PTR [ebp-0x10],eax
6401135b:	je     0x64011406
64011361:	push   0x640257d4
64011366:	push   0x5
64011368:	push   0x640257cc
6401136d:	call   0x64005750
64011372:	add    esp,0xc
64011375:	push   eax
64011376:	lea    ecx,[ebp-0x14]
64011379:	call   0x640054b0
6401137e:	mov    eax,DWORD PTR [eax]
64011380:	mov    ecx,DWORD PTR [eax-0xc]
64011383:	push   ecx
64011384:	push   eax
64011385:	mov    ecx,esi
64011387:	mov    BYTE PTR [ebp-0x4],0x10
6401138b:	call   0x64002990
64011390:	mov    eax,DWORD PTR [ebp-0x14]
64011393:	add    eax,0xfffffff0
64011396:	mov    BYTE PTR [ebp-0x4],0xf
6401139a:	lea    edx,[eax+0xc]
6401139d:	or     ecx,0xffffffff
640113a0:	lock xadd DWORD PTR [edx],ecx
640113a4:	dec    ecx
640113a5:	test   ecx,ecx
640113a7:	jg     0x640113b3
640113a9:	mov    ecx,DWORD PTR [eax]
640113ab:	mov    edx,DWORD PTR [ecx]
640113ad:	push   eax
640113ae:	mov    eax,DWORD PTR [edx+0x4]
640113b1:	call   eax
640113b3:	mov    edi,DWORD PTR [ebp-0x38]
640113b6:	test   edi,edi
640113b8:	je     0x640113d7
640113ba:	mov    ecx,DWORD PTR [ebp-0x34]
640113bd:	sub    ecx,edi
640113bf:	mov    eax,0x92492493
640113c4:	imul   ecx
640113c6:	add    edx,ecx
640113c8:	sar    edx,0x4
640113cb:	mov    eax,edx
640113cd:	shr    eax,0x1f
640113d0:	add    eax,edx
640113d2:	cmp    DWORD PTR [ebp-0x10],eax
640113d5:	jb     0x640113df
640113d7:	call   0x640126e8
640113dc:	mov    edi,DWORD PTR [ebp-0x38]
640113df:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
640113e4:	jb     0x640113ec
640113e6:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
640113ea:	jmp    0x640113f0
640113ec:	lea    edi,[ebx+edi*1+0x4]
640113f0:	push   edi
640113f1:	mov    ecx,esi
640113f3:	call   0x64002610
640113f8:	add    DWORD PTR [ebp-0x10],0x1
640113fc:	add    ebx,0x1c
640113ff:	xor    edi,edi
64011401:	jmp    0x64011335
64011406:	call   DWORD PTR ds:0x6402d06c
6401140c:	push   0x110
64011411:	lea    ecx,[ebp+0x4]
64011414:	push   edi
64011415:	push   ecx
64011416:	mov    DWORD PTR [ebp-0x14],eax
64011419:	call   0x64013290
6401141e:	mov    edx,DWORD PTR ds:0x6402e540
64011424:	mov    eax,DWORD PTR [edx+0xc]
64011427:	add    esp,0xc
6401142a:	mov    ecx,0x6402e540
6401142f:	mov    DWORD PTR [ebp+0x0],0x114
64011436:	call   eax
64011438:	add    eax,0x10
6401143b:	mov    DWORD PTR [ebp-0x10],eax
6401143e:	lea    ecx,[ebp+0x0]
64011441:	push   ecx
64011442:	mov    BYTE PTR [ebp-0x4],0x11
64011446:	call   DWORD PTR ds:0x6402506c
6401144c:	test   eax,eax
6401144e:	lea    ecx,[ebp-0x10]
64011451:	je     0x6401146b
64011453:	mov    edx,DWORD PTR [ebp+0x8]
64011456:	mov    eax,DWORD PTR [ebp+0x4]
64011459:	push   edx
6401145a:	push   eax
6401145b:	push   0x640257a4
64011460:	push   ecx
64011461:	call   0x64001d40
64011466:	add    esp,0x10
64011469:	jmp    0x64011477
6401146b:	push   0xc
6401146d:	push   0x64025788
64011472:	call   0x64002a90
64011477:	xor    eax,eax
64011479:	lea    edx,[ebp-0x8c]
6401147f:	push   edx
64011480:	mov    DWORD PTR [ebp-0x8c],edi
64011486:	mov    DWORD PTR [ebp-0x88],eax
6401148c:	mov    DWORD PTR [ebp-0x84],eax
64011492:	mov    DWORD PTR [ebp-0x80],eax
64011495:	mov    DWORD PTR [ebp-0x7c],eax
64011498:	mov    DWORD PTR [ebp-0x78],eax
6401149b:	mov    DWORD PTR [ebp-0x74],eax
6401149e:	mov    DWORD PTR [ebp-0x70],eax
640114a1:	mov    DWORD PTR [ebp-0x6c],eax
640114a4:	call   DWORD PTR ds:0x64025068
640114aa:	movzx  eax,WORD PTR [ebp-0x8c]
640114b1:	cmp    eax,edi
640114b3:	je     0x640114c3
640114b5:	cmp    eax,0x9
640114b8:	jne    0x640114d2
640114ba:	push   0x4
640114bc:	push   0x6402577c
640114c1:	jmp    0x640114ca
640114c3:	push   0x4
640114c5:	push   0x64025770
640114ca:	lea    ecx,[ebp-0x10]
640114cd:	call   0x64002990
640114d2:	mov    ebx,DWORD PTR [ebp-0x10]
640114d5:	cmp    ebx,edi
640114d7:	jne    0x640114dd
640114d9:	xor    eax,eax
640114db:	jmp    0x64011526
640114dd:	push   ebx
640114de:	call   DWORD PTR ds:0x64025054
640114e4:	add    eax,0x1
640114e7:	cmp    eax,0x3fffffff
640114ec:	jg     0x64011521
640114ee:	lea    ebx,[eax+eax*1]
640114f1:	mov    eax,ebx
640114f3:	call   0x64013310
640114f8:	mov    edi,esp
640114fa:	test   edi,edi
640114fc:	je     0x64011521
640114fe:	mov    eax,DWORD PTR [ebp-0x10]
64011501:	mov    ecx,DWORD PTR [ebp-0x14]
64011504:	push   0x0
64011506:	push   0x0
64011508:	push   ebx
64011509:	push   edi
6401150a:	push   0xffffffff
6401150c:	push   eax
6401150d:	push   0x0
6401150f:	push   ecx
64011510:	mov    BYTE PTR [edi],0x0
64011513:	call   DWORD PTR ds:0x64025028
64011519:	neg    eax
6401151b:	sbb    eax,eax
6401151d:	and    eax,edi
6401151f:	jmp    0x64011523
64011521:	xor    eax,eax
64011523:	mov    ebx,DWORD PTR [ebp-0x10]
64011526:	push   eax
64011527:	mov    ecx,esi
64011529:	call   0x64002610
6401152e:	lea    eax,[ebx-0x10]
64011531:	mov    BYTE PTR [ebp-0x4],0xf
64011535:	lea    edx,[eax+0xc]
64011538:	or     ecx,0xffffffff
6401153b:	lock xadd DWORD PTR [edx],ecx
6401153f:	dec    ecx
64011540:	test   ecx,ecx
64011542:	jg     0x6401154e
64011544:	mov    ecx,DWORD PTR [eax]
64011546:	mov    edx,DWORD PTR [ecx]
64011548:	push   eax
64011549:	mov    eax,DWORD PTR [edx+0x4]
6401154c:	call   eax
6401154e:	lea    ecx,[ebp-0x20]
64011551:	push   ecx
64011552:	call   0x6400a580
64011557:	push   eax
64011558:	lea    edx,[ebp-0x10]
6401155b:	push   edx
6401155c:	mov    BYTE PTR [ebp-0x4],0x12
64011560:	call   0x64003100
64011565:	mov    edi,eax
64011567:	push   0x64025734
6401156c:	push   0x7
6401156e:	push   0x6402572c
64011573:	mov    BYTE PTR [ebp-0x4],0x13
64011577:	call   0x64005750
6401157c:	add    esp,0x18
6401157f:	push   eax
64011580:	lea    ecx,[ebp-0x18]
64011583:	call   0x640054b0
64011588:	push   edi
64011589:	push   eax
6401158a:	lea    eax,[ebp-0x14]
6401158d:	mov    bl,0x14
6401158f:	push   eax
64011590:	mov    BYTE PTR [ebp-0x4],bl
64011593:	call   0x6400fc90
64011598:	add    esp,0xc
6401159b:	mov    eax,DWORD PTR [eax]
6401159d:	mov    ecx,DWORD PTR [eax-0xc]
640115a0:	push   ecx
640115a1:	push   eax
640115a2:	mov    ecx,esi
640115a4:	mov    BYTE PTR [ebp-0x4],0x15
640115a8:	call   0x64002990
640115ad:	mov    eax,DWORD PTR [ebp-0x14]
640115b0:	add    eax,0xfffffff0
640115b3:	mov    BYTE PTR [ebp-0x4],bl
640115b6:	lea    ecx,[eax+0xc]
640115b9:	or     edx,0xffffffff
640115bc:	lock xadd DWORD PTR [ecx],edx
640115c0:	dec    edx
640115c1:	test   edx,edx
640115c3:	jg     0x640115cf
640115c5:	mov    ecx,DWORD PTR [eax]
640115c7:	mov    edx,DWORD PTR [ecx]
640115c9:	push   eax
640115ca:	mov    eax,DWORD PTR [edx+0x4]
640115cd:	call   eax
640115cf:	mov    eax,DWORD PTR [ebp-0x18]
640115d2:	add    eax,0xfffffff0
640115d5:	mov    BYTE PTR [ebp-0x4],0x13
640115d9:	lea    ecx,[eax+0xc]
640115dc:	or     edx,0xffffffff
640115df:	lock xadd DWORD PTR [ecx],edx
640115e3:	dec    edx
640115e4:	test   edx,edx
640115e6:	jg     0x640115f2
640115e8:	mov    ecx,DWORD PTR [eax]
640115ea:	mov    edx,DWORD PTR [ecx]
640115ec:	push   eax
640115ed:	mov    eax,DWORD PTR [edx+0x4]
640115f0:	call   eax
640115f2:	mov    eax,DWORD PTR [ebp-0x10]
640115f5:	add    eax,0xfffffff0
640115f8:	mov    BYTE PTR [ebp-0x4],0x12
640115fc:	lea    ecx,[eax+0xc]
640115ff:	or     edx,0xffffffff
64011602:	lock xadd DWORD PTR [ecx],edx
64011606:	dec    edx
64011607:	test   edx,edx
64011609:	jg     0x64011615
6401160b:	mov    ecx,DWORD PTR [eax]
6401160d:	mov    edx,DWORD PTR [ecx]
6401160f:	push   eax
64011610:	mov    eax,DWORD PTR [edx+0x4]
64011613:	call   eax
64011615:	mov    eax,DWORD PTR [ebp-0x20]
64011618:	add    eax,0xfffffff0
6401161b:	mov    BYTE PTR [ebp-0x4],0xf
6401161f:	lea    ecx,[eax+0xc]
64011622:	or     edx,0xffffffff
64011625:	lock xadd DWORD PTR [ecx],edx
64011629:	dec    edx
6401162a:	test   edx,edx
6401162c:	jg     0x64011638
6401162e:	mov    ecx,DWORD PTR [eax]
64011630:	mov    edx,DWORD PTR [ecx]
64011632:	push   eax
64011633:	mov    eax,DWORD PTR [edx+0x4]
64011636:	call   eax
64011638:	call   DWORD PTR ds:0x6402d06c
6401163e:	mov    edx,DWORD PTR ds:0x6402e540
64011644:	mov    DWORD PTR [ebp-0x14],eax
64011647:	mov    eax,DWORD PTR [edx+0xc]
6401164a:	mov    ecx,0x6402e540
6401164f:	call   eax
64011651:	add    eax,0x10
64011654:	mov    DWORD PTR [ebp-0x10],eax
64011657:	mov    BYTE PTR [ebp-0x4],0x16
6401165b:	call   0x640037b0
64011660:	push   eax
64011661:	push   0x640256ec
64011666:	push   0x4
64011668:	push   0x640256e0
6401166d:	call   0x64005a10
64011672:	add    esp,0xc
64011675:	push   eax
64011676:	lea    ecx,[ebp-0x10]
64011679:	push   ecx
6401167a:	call   0x64001d40
6401167f:	mov    ebx,DWORD PTR [ebp-0x10]
64011682:	mov    eax,DWORD PTR [ebx-0x8]
64011685:	mov    ecx,0x1
6401168a:	sub    ecx,DWORD PTR [ebx-0x4]
6401168d:	add    eax,0x1
64011690:	add    esp,0xc
64011693:	or     eax,ecx
64011695:	jge    0x640116a4
64011697:	push   0xffffffff
64011699:	lea    ecx,[ebp-0x10]
6401169c:	call   0x64001e00
640116a1:	mov    ebx,DWORD PTR [ebp-0x10]
640116a4:	test   ebx,ebx
640116a6:	je     0x640116ec
640116a8:	push   ebx
640116a9:	call   DWORD PTR ds:0x64025054
640116af:	add    eax,0x1
640116b2:	cmp    eax,0x3fffffff
640116b7:	jg     0x640116ec
640116b9:	add    eax,eax
640116bb:	mov    DWORD PTR [ebp-0x20],eax
640116be:	call   0x64013310
640116c3:	mov    edi,esp
640116c5:	test   edi,edi
640116c7:	je     0x640116ec
640116c9:	mov    edx,DWORD PTR [ebp-0x20]
640116cc:	mov    eax,DWORD PTR [ebp-0x14]
640116cf:	push   0x0
640116d1:	push   0x0
640116d3:	push   edx
640116d4:	push   edi
640116d5:	push   0xffffffff
640116d7:	push   ebx
640116d8:	push   0x0
640116da:	push   eax
640116db:	mov    BYTE PTR [edi],0x0
640116de:	call   DWORD PTR ds:0x64025028
640116e4:	neg    eax
640116e6:	sbb    eax,eax
640116e8:	and    eax,edi
640116ea:	jmp    0x640116ee
640116ec:	xor    eax,eax
640116ee:	push   eax
640116ef:	lea    ecx,[ebp-0x1c]
640116f2:	call   0x640054b0
640116f7:	mov    edi,eax
640116f9:	push   0x640256b4
640116fe:	push   0x5
64011700:	push   0x640256ac
64011705:	mov    BYTE PTR [ebp-0x4],0x17
64011709:	call   0x64005750
6401170e:	add    esp,0xc
64011711:	push   eax
64011712:	lea    ecx,[ebp-0x2c]
64011715:	call   0x640054b0
6401171a:	push   edi
6401171b:	push   eax
6401171c:	lea    ecx,[ebp-0x18]
6401171f:	push   ecx
64011720:	mov    BYTE PTR [ebp-0x4],0x18
64011724:	call   0x6400fc90
64011729:	add    esp,0xc
6401172c:	mov    eax,DWORD PTR [eax]
6401172e:	mov    ecx,DWORD PTR [eax-0xc]
64011731:	push   ecx
64011732:	push   eax
64011733:	mov    ecx,esi
64011735:	mov    BYTE PTR [ebp-0x4],0x19
64011739:	call   0x64002990
6401173e:	mov    eax,DWORD PTR [ebp-0x18]
64011741:	add    eax,0xfffffff0
64011744:	mov    BYTE PTR [ebp-0x4],0x18
64011748:	lea    edx,[eax+0xc]
6401174b:	or     ecx,0xffffffff
6401174e:	lock xadd DWORD PTR [edx],ecx
64011752:	dec    ecx
64011753:	test   ecx,ecx
64011755:	jg     0x64011761
64011757:	mov    ecx,DWORD PTR [eax]
64011759:	mov    edx,DWORD PTR [ecx]
6401175b:	push   eax
6401175c:	mov    eax,DWORD PTR [edx+0x4]
6401175f:	call   eax
64011761:	mov    eax,DWORD PTR [ebp-0x2c]
64011764:	add    eax,0xfffffff0
64011767:	mov    BYTE PTR [ebp-0x4],0x17
6401176b:	lea    ecx,[eax+0xc]
6401176e:	or     edx,0xffffffff
64011771:	lock xadd DWORD PTR [ecx],edx
64011775:	dec    edx
64011776:	test   edx,edx
64011778:	jg     0x64011784
6401177a:	mov    ecx,DWORD PTR [eax]
6401177c:	mov    edx,DWORD PTR [ecx]
6401177e:	push   eax
6401177f:	mov    eax,DWORD PTR [edx+0x4]
64011782:	call   eax
64011784:	mov    eax,DWORD PTR [ebp-0x1c]
64011787:	add    eax,0xfffffff0
6401178a:	mov    BYTE PTR [ebp-0x4],0x16
6401178e:	lea    ecx,[eax+0xc]
64011791:	or     edx,0xffffffff
64011794:	lock xadd DWORD PTR [ecx],edx
64011798:	dec    edx
64011799:	test   edx,edx
6401179b:	jg     0x640117a7
6401179d:	mov    ecx,DWORD PTR [eax]
6401179f:	mov    edx,DWORD PTR [ecx]
640117a1:	push   eax
640117a2:	mov    eax,DWORD PTR [edx+0x4]
640117a5:	call   eax
640117a7:	add    ebx,0xfffffff0
640117aa:	mov    BYTE PTR [ebp-0x4],0xf
640117ae:	lea    ecx,[ebx+0xc]
640117b1:	or     edx,0xffffffff
640117b4:	lock xadd DWORD PTR [ecx],edx
640117b8:	dec    edx
640117b9:	test   edx,edx
640117bb:	jg     0x640117c7
640117bd:	mov    ecx,DWORD PTR [ebx]
640117bf:	mov    eax,DWORD PTR [ecx]
640117c1:	mov    edx,DWORD PTR [eax+0x4]
640117c4:	push   ebx
640117c5:	call   edx
640117c7:	lea    eax,[ebp-0x9c]
640117cd:	push   eax
640117ce:	call   0x64003980
640117d3:	mov    ecx,DWORD PTR [eax]
640117d5:	mov    DWORD PTR [ebp-0x68],ecx
640117d8:	mov    edx,DWORD PTR [eax+0x4]
640117db:	mov    DWORD PTR [ebp-0x64],edx
640117de:	mov    ecx,DWORD PTR [eax+0x8]
640117e1:	push   0x64025678
640117e6:	mov    DWORD PTR [ebp-0x60],ecx
640117e9:	mov    edx,DWORD PTR [eax+0xc]
640117ec:	push   0x5
640117ee:	push   0x64025670
640117f3:	mov    DWORD PTR [ebp-0x5c],edx
640117f6:	call   0x64005750
640117fb:	add    esp,0x10
640117fe:	push   eax
640117ff:	lea    ecx,[ebp-0x10]
64011802:	call   0x640054b0
64011807:	lea    eax,[ebp-0x68]
6401180a:	push   eax
6401180b:	lea    ecx,[ebp-0x2c]
6401180e:	push   ecx
6401180f:	mov    BYTE PTR [ebp-0x4],0x1a
64011813:	call   0x64002e60
64011818:	push   eax
64011819:	lea    edx,[ebp-0x10]
6401181c:	push   edx
6401181d:	lea    eax,[ebp-0x1c]
64011820:	mov    bl,0x1b
64011822:	push   eax
64011823:	mov    BYTE PTR [ebp-0x4],bl
64011826:	call   0x6400fc90
6401182b:	add    esp,0x14
6401182e:	mov    eax,DWORD PTR [eax]
64011830:	mov    ecx,DWORD PTR [eax-0xc]
64011833:	push   ecx
64011834:	push   eax
64011835:	mov    ecx,esi
64011837:	mov    BYTE PTR [ebp-0x4],0x1c
6401183b:	call   0x64002990
64011840:	mov    eax,DWORD PTR [ebp-0x1c]
64011843:	add    eax,0xfffffff0
64011846:	mov    BYTE PTR [ebp-0x4],bl
64011849:	lea    ecx,[eax+0xc]
6401184c:	or     edx,0xffffffff
6401184f:	lock xadd DWORD PTR [ecx],edx
64011853:	dec    edx
64011854:	test   edx,edx
64011856:	jg     0x64011862
64011858:	mov    ecx,DWORD PTR [eax]
6401185a:	mov    edx,DWORD PTR [ecx]
6401185c:	push   eax
6401185d:	mov    eax,DWORD PTR [edx+0x4]
64011860:	call   eax
64011862:	mov    eax,DWORD PTR [ebp-0x2c]
64011865:	add    eax,0xfffffff0
64011868:	mov    BYTE PTR [ebp-0x4],0x1a
6401186c:	lea    ecx,[eax+0xc]
6401186f:	or     edx,0xffffffff
64011872:	lock xadd DWORD PTR [ecx],edx
64011876:	dec    edx
64011877:	test   edx,edx
64011879:	jg     0x64011885
6401187b:	mov    ecx,DWORD PTR [eax]
6401187d:	mov    edx,DWORD PTR [ecx]
6401187f:	push   eax
64011880:	mov    eax,DWORD PTR [edx+0x4]
64011883:	call   eax
64011885:	mov    eax,DWORD PTR [ebp-0x10]
64011888:	add    eax,0xfffffff0
6401188b:	mov    BYTE PTR [ebp-0x4],0xf
6401188f:	lea    ecx,[eax+0xc]
64011892:	or     edx,0xffffffff
64011895:	lock xadd DWORD PTR [ecx],edx
64011899:	dec    edx
6401189a:	test   edx,edx
6401189c:	jg     0x640118a8
6401189e:	mov    ecx,DWORD PTR [eax]
640118a0:	mov    edx,DWORD PTR [ecx]
640118a2:	push   eax
640118a3:	mov    eax,DWORD PTR [edx+0x4]
640118a6:	call   eax
640118a8:	lea    ecx,[ebp-0x1c]
640118ab:	push   0x1
640118ad:	push   ecx
640118ae:	call   0x64004fe0
640118b3:	add    esp,0x8
640118b6:	mov    eax,DWORD PTR [eax]
640118b8:	mov    ecx,DWORD PTR [eax-0xc]
640118bb:	push   ecx
640118bc:	push   eax
640118bd:	mov    ecx,esi
640118bf:	mov    BYTE PTR [ebp-0x4],0x1d
640118c3:	call   0x64002990
640118c8:	mov    eax,DWORD PTR [ebp-0x1c]
640118cb:	add    eax,0xfffffff0
640118ce:	mov    BYTE PTR [ebp-0x4],0xf
640118d2:	lea    edx,[eax+0xc]
640118d5:	or     ecx,0xffffffff
640118d8:	lock xadd DWORD PTR [edx],ecx
640118dc:	dec    ecx
640118dd:	test   ecx,ecx
640118df:	jg     0x640118eb
640118e1:	mov    ecx,DWORD PTR [eax]
640118e3:	mov    edx,DWORD PTR [ecx]
640118e5:	push   eax
640118e6:	mov    eax,DWORD PTR [edx+0x4]
640118e9:	call   eax
640118eb:	mov    eax,DWORD PTR [ebp-0x38]
640118ee:	xor    edi,edi
640118f0:	cmp    eax,edi
640118f2:	je     0x64011912
640118f4:	mov    ecx,DWORD PTR [ebp-0x58]
640118f7:	push   ecx
640118f8:	mov    ecx,DWORD PTR [ebp-0x34]
640118fb:	lea    edx,[ebp-0x3c]
640118fe:	push   edx
640118ff:	push   ecx
64011900:	push   eax
64011901:	call   0x6400ae60
64011906:	mov    edx,DWORD PTR [ebp-0x38]
64011909:	push   edx
6401190a:	call   0x64012332
6401190f:	add    esp,0x14
64011912:	mov    eax,DWORD PTR [ebp-0x24]
64011915:	add    eax,0xfffffff0
64011918:	mov    DWORD PTR [ebp-0x38],edi
6401191b:	mov    DWORD PTR [ebp-0x34],edi
6401191e:	mov    DWORD PTR [ebp-0x30],edi
64011921:	mov    BYTE PTR [ebp-0x4],0x6
64011925:	lea    ecx,[eax+0xc]
64011928:	or     edx,0xffffffff
6401192b:	lock xadd DWORD PTR [ecx],edx
6401192f:	dec    edx
64011930:	test   edx,edx
64011932:	jg     0x6401193e
64011934:	mov    ecx,DWORD PTR [eax]
64011936:	mov    edx,DWORD PTR [ecx]
64011938:	push   eax
64011939:	mov    eax,DWORD PTR [edx+0x4]
6401193c:	call   eax
6401193e:	mov    eax,DWORD PTR [ebp-0x48]
64011941:	add    eax,0xfffffff0
64011944:	mov    BYTE PTR [ebp-0x4],0x5
64011948:	lea    ecx,[eax+0xc]
6401194b:	or     edx,0xffffffff
6401194e:	lock xadd DWORD PTR [ecx],edx
64011952:	dec    edx
64011953:	test   edx,edx
64011955:	jg     0x64011961
64011957:	mov    ecx,DWORD PTR [eax]
64011959:	mov    edx,DWORD PTR [ecx]
6401195b:	push   eax
6401195c:	mov    eax,DWORD PTR [edx+0x4]
6401195f:	call   eax
64011961:	mov    eax,DWORD PTR [ebp-0x28]
64011964:	add    eax,0xfffffff0
64011967:	mov    BYTE PTR [ebp-0x4],0x2
6401196b:	lea    ecx,[eax+0xc]
6401196e:	or     edx,0xffffffff
64011971:	lock xadd DWORD PTR [ecx],edx
64011975:	dec    edx
64011976:	test   edx,edx
64011978:	jg     0x64011984
6401197a:	mov    ecx,DWORD PTR [eax]
6401197c:	mov    edx,DWORD PTR [ecx]
6401197e:	push   eax
6401197f:	mov    eax,DWORD PTR [edx+0x4]
64011982:	call   eax
64011984:	mov    eax,DWORD PTR [ebp-0x54]
64011987:	add    eax,0xfffffff0
6401198a:	mov    BYTE PTR [ebp-0x4],0x1
6401198e:	lea    ecx,[eax+0xc]
64011991:	or     edx,0xffffffff
64011994:	lock xadd DWORD PTR [ecx],edx
64011998:	dec    edx
64011999:	test   edx,edx
6401199b:	jg     0x640119a7
6401199d:	mov    ecx,DWORD PTR [eax]
6401199f:	mov    edx,DWORD PTR [ecx]
640119a1:	push   eax
640119a2:	mov    eax,DWORD PTR [edx+0x4]
640119a5:	call   eax
640119a7:	mov    eax,DWORD PTR [ebp-0x4c]
640119aa:	add    eax,0xfffffff0
640119ad:	mov    BYTE PTR [ebp-0x4],0x0
640119b1:	lea    ecx,[eax+0xc]
640119b4:	or     edx,0xffffffff
640119b7:	lock xadd DWORD PTR [ecx],edx
640119bb:	dec    edx
640119bc:	test   edx,edx
640119be:	jg     0x640119ca
640119c0:	mov    ecx,DWORD PTR [eax]
640119c2:	mov    edx,DWORD PTR [ecx]
640119c4:	push   eax
640119c5:	mov    eax,DWORD PTR [edx+0x4]
640119c8:	call   eax
640119ca:	mov    eax,esi
640119cc:	lea    esp,[ebp-0xac]
640119d2:	mov    ecx,DWORD PTR [ebp-0xc]
640119d5:	mov    DWORD PTR fs:0x0,ecx
640119dc:	pop    ecx
640119dd:	pop    edi
640119de:	pop    esi
640119df:	pop    ebx
640119e0:	mov    ecx,DWORD PTR [ebp+0x124]
640119e6:	xor    ecx,ebp
640119e8:	call   0x64012b8c
640119ed:	add    ebp,0x128
640119f3:	mov    esp,ebp
640119f5:	pop    ebp
640119f6:	ret    
640119f7:	int3   
640119f8:	int3   
640119f9:	int3   
640119fa:	int3   
640119fb:	int3   
640119fc:	int3   
640119fd:	int3   
640119fe:	int3   
640119ff:	int3   
64011a00:	push   ebp
64011a01:	mov    ebp,esp
64011a03:	push   0xffffffff
64011a05:	push   0x640224a8
64011a0a:	mov    eax,fs:0x0
64011a10:	push   eax
64011a11:	sub    esp,0x50
64011a14:	mov    eax,ds:0x6402d09c
64011a19:	xor    eax,ebp
64011a1b:	mov    DWORD PTR [ebp-0x10],eax
64011a1e:	push   ebx
64011a1f:	push   esi
64011a20:	push   edi
64011a21:	push   eax
64011a22:	lea    eax,[ebp-0xc]
64011a25:	mov    fs:0x0,eax
64011a2b:	call   DWORD PTR ds:0x6402d06c
64011a31:	push   0xea60
64011a36:	mov    DWORD PTR [ebp-0x3c],eax
64011a39:	call   0x6400fa60
64011a3e:	add    esp,0x4
64011a41:	mov    DWORD PTR [ebp-0x34],0x0
64011a48:	lea    eax,[ebp-0x30]
64011a4b:	push   eax
64011a4c:	call   0x64010e60
64011a51:	add    esp,0x4
64011a54:	xor    esi,esi
64011a56:	mov    DWORD PTR [ebp-0x4],esi
64011a59:	mov    DWORD PTR [ebp-0x14],0xf
64011a60:	mov    DWORD PTR [ebp-0x18],esi
64011a63:	mov    BYTE PTR [ebp-0x28],0x0
64011a67:	mov    eax,DWORD PTR [ebp-0x30]
64011a6a:	cmp    eax,esi
64011a6c:	mov    BYTE PTR [ebp-0x4],0x1
64011a70:	mov    ebx,eax
64011a72:	jne    0x64011a78
64011a74:	xor    ecx,ecx
64011a76:	jmp    0x64011abf
64011a78:	push   eax
64011a79:	call   DWORD PTR ds:0x64025054
64011a7f:	add    eax,0x1
64011a82:	cmp    eax,0x3fffffff
64011a87:	jg     0x64011ab9
64011a89:	lea    edi,[eax+eax*1]
64011a8c:	mov    eax,edi
64011a8e:	call   0x64013310
64011a93:	mov    esi,esp
64011a95:	test   esi,esi
64011a97:	je     0x64011ab9
64011a99:	mov    ecx,DWORD PTR [ebp-0x3c]
64011a9c:	push   0x0
64011a9e:	push   0x0
64011aa0:	push   edi
64011aa1:	push   esi
64011aa2:	push   0xffffffff
64011aa4:	push   ebx
64011aa5:	push   0x0
64011aa7:	push   ecx
64011aa8:	mov    BYTE PTR [esi],0x0
64011aab:	call   DWORD PTR ds:0x64025028
64011ab1:	neg    eax
64011ab3:	sbb    eax,eax
64011ab5:	and    eax,esi
64011ab7:	jmp    0x64011abb
64011ab9:	xor    eax,eax
64011abb:	mov    ecx,eax
64011abd:	xor    esi,esi
64011abf:	mov    eax,ecx
64011ac1:	mov    DWORD PTR [ebp-0x48],esi
64011ac4:	mov    DWORD PTR [ebp-0x44],0xf
64011acb:	mov    BYTE PTR [ebp-0x58],0x0
64011acf:	lea    esi,[eax+0x1]
64011ad2:	mov    dl,BYTE PTR [eax]
64011ad4:	add    eax,0x1
64011ad7:	test   dl,dl
64011ad9:	jne    0x64011ad2
64011adb:	sub    eax,esi
64011add:	push   eax
64011ade:	push   ecx
64011adf:	lea    ecx,[ebp-0x5c]
64011ae2:	call   0x64001860
64011ae7:	lea    edx,[ebp-0x2c]
64011aea:	push   edx
64011aeb:	lea    eax,[ebp-0x5c]
64011aee:	push   eax
64011aef:	mov    BYTE PTR [ebp-0x4],0x2
64011af3:	call   0x64010bb0
64011af8:	mov    edi,0x10
64011afd:	add    esp,0x8
64011b00:	cmp    DWORD PTR [ebp-0x44],edi
64011b03:	mov    bl,al
64011b05:	mov    BYTE PTR [ebp-0x4],0x1
64011b09:	jb     0x64011b17
64011b0b:	mov    ecx,DWORD PTR [ebp-0x58]
64011b0e:	push   ecx
64011b0f:	call   0x64012332
64011b14:	add    esp,0x4
64011b17:	test   bl,bl
64011b19:	jne    0x64011bac
64011b1f:	xor    ebx,ebx
64011b21:	xor    esi,esi
64011b23:	lea    edx,[ebp-0x38]
64011b26:	push   ebx
64011b27:	push   edx
64011b28:	mov    DWORD PTR [ebp-0x38],ebx
64011b2b:	call   0x6400da60
64011b30:	call   eax
64011b32:	test   eax,eax
64011b34:	je     0x64011b44
64011b36:	add    esi,0x3e8
64011b3c:	cmp    esi,0x493e0
64011b42:	ja     0x64011b51
64011b44:	push   0x3e8
64011b49:	call   DWORD PTR ds:0x64025050
64011b4f:	jmp    0x64011b23
64011b51:	cmp    DWORD PTR [ebp-0x14],edi
64011b54:	jb     0x64011b62
64011b56:	mov    eax,DWORD PTR [ebp-0x28]
64011b59:	push   eax
64011b5a:	call   0x64012332
64011b5f:	add    esp,0x4
64011b62:	mov    eax,DWORD PTR [ebp-0x30]
64011b65:	add    eax,0xfffffff0
64011b68:	mov    DWORD PTR [ebp-0x14],0xf
64011b6f:	mov    DWORD PTR [ebp-0x18],ebx
64011b72:	mov    BYTE PTR [ebp-0x28],0x0
64011b76:	mov    DWORD PTR [ebp-0x4],0xffffffff
64011b7d:	lea    ecx,[eax+0xc]
64011b80:	or     edx,0xffffffff
64011b83:	lock xadd DWORD PTR [ecx],edx
64011b87:	dec    edx
64011b88:	test   edx,edx
64011b8a:	jg     0x64011b96
64011b8c:	mov    ecx,DWORD PTR [eax]
64011b8e:	mov    edx,DWORD PTR [ecx]
64011b90:	push   eax
64011b91:	mov    eax,DWORD PTR [edx+0x4]
64011b94:	call   eax
64011b96:	mov    eax,DWORD PTR [ebp-0x34]
64011b99:	add    eax,0x1
64011b9c:	cmp    eax,0x3
64011b9f:	mov    DWORD PTR [ebp-0x34],eax
64011ba2:	jne    0x64011a48
64011ba8:	xor    ebx,ebx
64011baa:	jmp    0x64011c04
64011bac:	xor    ebx,ebx
64011bae:	cmp    DWORD PTR [ebp-0x18],ebx
64011bb1:	je     0x64011bbf
64011bb3:	lea    ecx,[ebp-0x2c]
64011bb6:	push   ecx
64011bb7:	call   0x64010540
64011bbc:	add    esp,0x4
64011bbf:	cmp    DWORD PTR [ebp-0x14],edi
64011bc2:	jb     0x64011bd0
64011bc4:	mov    edx,DWORD PTR [ebp-0x28]
64011bc7:	push   edx
64011bc8:	call   0x64012332
64011bcd:	add    esp,0x4
64011bd0:	mov    eax,DWORD PTR [ebp-0x30]
64011bd3:	add    eax,0xfffffff0
64011bd6:	mov    DWORD PTR [ebp-0x14],0xf
64011bdd:	mov    DWORD PTR [ebp-0x18],ebx
64011be0:	mov    BYTE PTR [ebp-0x28],0x0
64011be4:	mov    DWORD PTR [ebp-0x4],0xffffffff
64011beb:	lea    ecx,[eax+0xc]
64011bee:	or     edx,0xffffffff
64011bf1:	lock xadd DWORD PTR [ecx],edx
64011bf5:	dec    edx
64011bf6:	test   edx,edx
64011bf8:	jg     0x64011c04
64011bfa:	mov    ecx,DWORD PTR [eax]
64011bfc:	mov    edx,DWORD PTR [ecx]
64011bfe:	push   eax
64011bff:	mov    eax,DWORD PTR [edx+0x4]
64011c02:	call   eax
64011c04:	xor    esi,esi
64011c06:	lea    ecx,[ebp-0x40]
64011c09:	push   ebx
64011c0a:	push   ecx
64011c0b:	mov    DWORD PTR [ebp-0x40],ebx
64011c0e:	call   0x6400da60
64011c13:	call   eax
64011c15:	test   eax,eax
64011c17:	je     0x64011c2b
64011c19:	add    esi,0x3e8
64011c1f:	cmp    esi,0x12e1fc0
64011c25:	ja     0x64011a41
64011c2b:	push   0x3e8
64011c30:	call   DWORD PTR ds:0x64025050
64011c36:	jmp    0x64011c06
64011c38:	int3   
64011c39:	int3   
64011c3a:	int3   
64011c3b:	int3   
64011c3c:	int3   
64011c3d:	int3   
64011c3e:	int3   
64011c3f:	int3   
64011c40:	sub    esp,0x20c
64011c46:	mov    eax,ds:0x6402d09c
64011c4b:	xor    eax,esp
64011c4d:	mov    DWORD PTR [esp+0x208],eax
64011c54:	push   0x208
64011c59:	lea    eax,[esp+0x4]
64011c5d:	push   eax
64011c5e:	push   0x0
64011c60:	call   DWORD PTR ds:0x64025074
64011c66:	test   eax,eax
64011c68:	je     0x64011cb7
64011c6a:	lea    ecx,[esp]
64011c6d:	push   0x104
64011c72:	push   ecx
64011c73:	call   0x64013271
64011c78:	lea    edx,[esp+0x8]
64011c7c:	push   0x64025a48
64011c81:	push   edx
64011c82:	call   0x64012cd1
64011c87:	add    esp,0x10
64011c8a:	test   eax,eax
64011c8c:	je     0x64011cb7
64011c8e:	call   0x64010ca0
64011c93:	test   al,al
64011c95:	je     0x64011cb7
64011c97:	push   0x0
64011c99:	push   0x0
64011c9b:	push   0x0
64011c9d:	push   0x64011a00
64011ca2:	push   0x0
64011ca4:	push   0x0
64011ca6:	call   DWORD PTR ds:0x64025070
64011cac:	test   eax,eax
64011cae:	je     0x64011cb7
64011cb0:	push   eax
64011cb1:	call   DWORD PTR ds:0x64025040
64011cb7:	mov    ecx,DWORD PTR [esp+0x208]
64011cbe:	xor    ecx,esp
64011cc0:	xor    eax,eax
64011cc2:	call   0x64012b8c
64011cc7:	add    esp,0x20c
64011ccd:	ret    0x4
64011cd0:	push   0x0
64011cd2:	push   0x0
64011cd4:	push   0x0
64011cd6:	push   0x64011c40
64011cdb:	push   0x0
64011cdd:	push   0x0
64011cdf:	call   DWORD PTR ds:0x64025070
64011ce5:	ret    
64011ce6:	push   ebp
64011ce7:	mov    ebp,esp
64011ce9:	sub    esp,0xc
64011cec:	mov    eax,ds:0x6402d09c
64011cf1:	xor    eax,ebp
64011cf3:	mov    DWORD PTR [ebp-0x4],eax
64011cf6:	push   esi
64011cf7:	xor    esi,esi
64011cf9:	call   DWORD PTR ds:0x640250e8
64011cff:	push   0x7
64011d01:	lea    ecx,[ebp-0xc]
64011d04:	push   ecx
64011d05:	push   0x1004
64011d0a:	push   eax
64011d0b:	call   DWORD PTR ds:0x640250e4
64011d11:	test   eax,eax
64011d13:	je     0x64011d34
64011d15:	mov    cl,BYTE PTR [ebp-0xc]
64011d18:	test   cl,cl
64011d1a:	lea    eax,[ebp-0xc]
64011d1d:	je     0x64011d34
64011d1f:	imul   esi,esi,0xa
64011d22:	movsx  ecx,cl
64011d25:	inc    eax
64011d26:	lea    esi,[esi+ecx*1-0x30]
64011d2a:	mov    cl,BYTE PTR [eax]
64011d2c:	test   cl,cl
64011d2e:	jne    0x64011d1f
64011d30:	test   esi,esi
64011d32:	jne    0x64011d3c
64011d34:	call   DWORD PTR ds:0x640250e0
64011d3a:	mov    esi,eax
64011d3c:	mov    ecx,DWORD PTR [ebp-0x4]
64011d3f:	mov    eax,esi
64011d41:	xor    ecx,ebp
64011d43:	pop    esi
64011d44:	call   0x64012b8c
64011d49:	leave  
64011d4a:	ret    
64011d4b:	push   0x3
64011d4d:	pop    eax
64011d4e:	ret    
64011d4f:	push   ebp
64011d50:	mov    ebp,esp
64011d52:	sub    esp,0x98
64011d58:	mov    eax,ds:0x6402d09c
64011d5d:	xor    eax,ebp
64011d5f:	mov    DWORD PTR [ebp-0x4],eax
64011d62:	lea    eax,[ebp-0x98]
64011d68:	push   eax
64011d69:	mov    DWORD PTR [ebp-0x98],0x94
64011d73:	call   DWORD PTR ds:0x640250ec
64011d79:	cmp    DWORD PTR [ebp-0x88],0x2
64011d80:	jne    0x64011d90
64011d82:	cmp    DWORD PTR [ebp-0x94],0x5
64011d89:	mov    eax,0x64011d4b
64011d8e:	jae    0x64011d95
64011d90:	mov    eax,0x64011ce6
64011d95:	push   eax
64011d96:	push   0x6402d06c
64011d9b:	call   DWORD PTR ds:0x640250dc
64011da1:	call   DWORD PTR ds:0x6402d06c
64011da7:	mov    ecx,DWORD PTR [ebp-0x4]
64011daa:	xor    ecx,ebp
64011dac:	call   0x64012b8c
64011db1:	leave  
64011db2:	ret    
64011db3:	push   esi
64011db4:	push   0x18
64011db6:	mov    esi,ecx
64011db8:	push   0x0
64011dba:	push   esi
64011dbb:	call   0x64013290
64011dc0:	add    esp,0xc
64011dc3:	mov    eax,esi
64011dc5:	pop    esi
64011dc6:	ret    
64011dc7:	push   0xc
64011dc9:	push   0x6402a538
64011dce:	call   0x64014150
64011dd3:	and    DWORD PTR [ebp-0x4],0x0
64011dd7:	push   ecx
64011dd8:	call   DWORD PTR ds:0x6402501c
64011dde:	and    DWORD PTR [ebp-0x1c],0x0
64011de2:	jmp    0x64011e02
64011de4:	mov    eax,DWORD PTR [ebp-0x14]
64011de7:	mov    eax,DWORD PTR [eax]
64011de9:	mov    eax,DWORD PTR [eax]
64011deb:	xor    ecx,ecx
64011ded:	cmp    eax,0xc0000017
64011df2:	sete   cl
64011df5:	mov    eax,ecx
64011df7:	ret    
64011df8:	mov    esp,DWORD PTR [ebp-0x18]
64011dfb:	mov    DWORD PTR [ebp-0x1c],0x8007000e
64011e02:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011e09:	mov    eax,DWORD PTR [ebp-0x1c]
64011e0c:	call   0x64014195
64011e11:	ret    
64011e12:	mov    eax,DWORD PTR [esp+0x4]
64011e16:	test   eax,eax
64011e18:	jne    0x64011e21
64011e1a:	mov    eax,0x80070057
64011e1f:	jmp    0x64011e32
64011e21:	cmp    DWORD PTR [eax],0x2c
64011e24:	jne    0x64011e1a
64011e26:	and    DWORD PTR [eax+0x1c],0x0
64011e2a:	lea    ecx,[eax+0x4]
64011e2d:	call   0x64011dc7
64011e32:	ret    0x4
64011e35:	push   esi
64011e36:	mov    esi,ecx
64011e38:	mov    eax,DWORD PTR [esi]
64011e3a:	test   eax,eax
64011e3c:	je     0x64011e48
64011e3e:	push   eax
64011e3f:	call   0x64013a26
64011e44:	and    DWORD PTR [esi],0x0
64011e47:	pop    ecx
64011e48:	and    DWORD PTR [esi+0x4],0x0
64011e4c:	and    DWORD PTR [esi+0x8],0x0
64011e50:	pop    esi
64011e51:	ret    
64011e52:	mov    eax,DWORD PTR [esp+0x4]
64011e56:	test   eax,eax
64011e58:	jl     0x64011e67
64011e5a:	cmp    eax,DWORD PTR [ecx+0x4]
64011e5d:	jge    0x64011e67
64011e5f:	mov    ecx,DWORD PTR [ecx]
64011e61:	lea    eax,[ecx+eax*2]
64011e64:	ret    0x4
64011e67:	push   0x0
64011e69:	push   0x0
64011e6b:	push   0x1
64011e6d:	push   0xc000008c
64011e72:	call   DWORD PTR ds:0x640250f0
64011e78:	int3   
64011e79:	mov    eax,DWORD PTR [esp+0x4]
64011e7d:	test   eax,eax
64011e7f:	jl     0x64011e8e
64011e81:	cmp    eax,DWORD PTR [ecx+0x4]
64011e84:	jge    0x64011e8e
64011e86:	mov    ecx,DWORD PTR [ecx]
64011e88:	lea    eax,[ecx+eax*4]
64011e8b:	ret    0x4
64011e8e:	push   0x0
64011e90:	push   0x0
64011e92:	push   0x1
64011e94:	push   0xc000008c
64011e99:	call   DWORD PTR ds:0x640250f0
64011e9f:	int3   
64011ea0:	push   esi
64011ea1:	mov    esi,ecx
64011ea3:	lea    ecx,[esi+0x4]
64011ea6:	call   0x64011db3
64011eab:	xor    eax,eax
64011ead:	mov    DWORD PTR [esi+0x20],eax
64011eb0:	mov    DWORD PTR [esi+0x24],eax
64011eb3:	mov    DWORD PTR [esi+0x28],eax
64011eb6:	mov    eax,esi
64011eb8:	pop    esi
64011eb9:	ret    
64011eba:	push   esi
64011ebb:	mov    esi,DWORD PTR [esp+0x8]
64011ebf:	test   esi,esi
64011ec1:	jne    0x64011eca
64011ec3:	mov    eax,0x80070057
64011ec8:	jmp    0x64011f16
64011eca:	mov    eax,DWORD PTR [esi]
64011ecc:	test   eax,eax
64011ece:	je     0x64011f14
64011ed0:	cmp    eax,0x2c
64011ed3:	jne    0x64011ec3
64011ed5:	push   edi
64011ed6:	xor    edi,edi
64011ed8:	cmp    DWORD PTR [esi+0x24],edi
64011edb:	jle    0x64011efe
64011edd:	push   ebx
64011ede:	lea    ebx,[esi+0x20]
64011ee1:	push   edi
64011ee2:	mov    ecx,ebx
64011ee4:	call   0x64011e52
64011ee9:	movzx  eax,WORD PTR [eax]
64011eec:	push   DWORD PTR [esp+0x14]
64011ef0:	push   eax
64011ef1:	call   DWORD PTR ds:0x640251b8
64011ef7:	inc    edi
64011ef8:	cmp    edi,DWORD PTR [esi+0x24]
64011efb:	jl     0x64011ee1
64011efd:	pop    ebx
64011efe:	lea    ecx,[esi+0x20]
64011f01:	call   0x64011e35
64011f06:	lea    eax,[esi+0x4]
64011f09:	push   eax
64011f0a:	call   DWORD PTR ds:0x640250a4
64011f10:	and    DWORD PTR [esi],0x0
64011f13:	pop    edi
64011f14:	xor    eax,eax
64011f16:	pop    esi
64011f17:	ret    0x8
64011f1a:	push   esi
64011f1b:	mov    esi,ecx
64011f1d:	cmp    BYTE PTR [esi+0x4],0x0
64011f21:	je     0x64011f2f
64011f23:	push   DWORD PTR [esi]
64011f25:	call   DWORD PTR ds:0x640250a0
64011f2b:	mov    BYTE PTR [esi+0x4],0x0
64011f2f:	pop    esi
64011f30:	ret    
64011f31:	push   esi
64011f32:	mov    esi,ecx
64011f34:	lea    ecx,[esi+0x18]
64011f37:	call   0x64011db3
64011f3c:	xor    eax,eax
64011f3e:	mov    DWORD PTR [esi+0x30],eax
64011f41:	mov    DWORD PTR [esi+0x34],eax
64011f44:	mov    DWORD PTR [esi+0x38],eax
64011f47:	mov    eax,esi
64011f49:	pop    esi
64011f4a:	ret    
64011f4b:	push   esi
64011f4c:	mov    esi,ecx
64011f4e:	lea    eax,[esi+0x18]
64011f51:	push   eax
64011f52:	call   DWORD PTR ds:0x640250a4
64011f58:	lea    ecx,[esi+0x30]
64011f5b:	pop    esi
64011f5c:	jmp    0x64011e35
64011f61:	push   ebp
64011f62:	mov    ebp,esp
64011f64:	push   ecx
64011f65:	push   ecx
64011f66:	push   esi
64011f67:	mov    esi,ecx
64011f69:	lea    eax,[esi+0x18]
64011f6c:	push   eax
64011f6d:	mov    DWORD PTR [ebp-0x8],eax
64011f70:	call   DWORD PTR ds:0x6402509c
64011f76:	mov    eax,DWORD PTR [esi+0x34]
64011f79:	mov    ecx,DWORD PTR [ebp+0x8]
64011f7c:	cmp    ecx,eax
64011f7e:	mov    BYTE PTR [ebp-0x4],0x1
64011f82:	jg     0x64011fa8
64011f84:	test   ecx,ecx
64011f86:	jl     0x64011fa8
64011f88:	cmp    ecx,eax
64011f8a:	jne    0x64011f9b
64011f8c:	mov    esi,DWORD PTR [esi+0x8]
64011f8f:	lea    ecx,[ebp-0x8]
64011f92:	call   0x64011f1a
64011f97:	mov    eax,esi
64011f99:	jmp    0x64011fb2
64011f9b:	push   ecx
64011f9c:	lea    ecx,[esi+0x30]
64011f9f:	call   0x64011e79
64011fa4:	mov    esi,DWORD PTR [eax]
64011fa6:	jmp    0x64011f8f
64011fa8:	lea    ecx,[ebp-0x8]
64011fab:	call   0x64011f1a
64011fb0:	xor    eax,eax
64011fb2:	pop    esi
64011fb3:	leave  
64011fb4:	ret    0x4
64011fb7:	push   esi
64011fb8:	mov    esi,ecx
64011fba:	call   0x64011ea0
64011fbf:	push   esi
64011fc0:	mov    DWORD PTR [esi],0x2c
64011fc6:	call   0x64011e12
64011fcb:	test   eax,eax
64011fcd:	jge    0x64011fd9
64011fcf:	mov    BYTE PTR ds:0x64031320,0x1
64011fd6:	and    DWORD PTR [esi],0x0
64011fd9:	mov    eax,esi
64011fdb:	pop    esi
64011fdc:	ret    
64011fdd:	push   ebp
64011fde:	lea    ebp,[esp-0x78]
64011fe2:	sub    esp,0x98
64011fe8:	mov    eax,ds:0x6402d09c
64011fed:	xor    eax,ebp
64011fef:	mov    DWORD PTR [ebp+0x74],eax
64011ff2:	push   esi
64011ff3:	mov    esi,ecx
64011ff5:	call   0x64011f31
64011ffa:	mov    eax,0x64000000
64011fff:	push   0x94
64012004:	mov    DWORD PTR [esi+0x8],eax
64012007:	mov    DWORD PTR [esi+0x4],eax
6401200a:	lea    eax,[ebp-0x20]
6401200d:	push   0x0
6401200f:	push   eax
64012010:	mov    DWORD PTR [esi],0x3c
64012016:	mov    BYTE PTR [esi+0xc],0x0
6401201a:	call   0x64013290
6401201f:	add    esp,0xc
64012022:	lea    eax,[ebp-0x20]
64012025:	push   eax
64012026:	mov    DWORD PTR [ebp-0x20],0x94
6401202d:	call   DWORD PTR ds:0x640250ec
64012033:	cmp    DWORD PTR [ebp-0x10],0x2
64012037:	jne    0x64012041
64012039:	cmp    DWORD PTR [ebp-0x1c],0x5
6401203d:	jb     0x64012059
6401203f:	jmp    0x64012055
64012041:	cmp    DWORD PTR [ebp-0x10],0x1
64012045:	jne    0x64012059
64012047:	cmp    DWORD PTR [ebp-0x1c],0x4
6401204b:	ja     0x64012055
6401204d:	jne    0x64012059
6401204f:	cmp    DWORD PTR [ebp-0x18],0x0
64012053:	jbe    0x64012059
64012055:	mov    BYTE PTR [esi+0xc],0x1
64012059:	lea    ecx,[esi+0x18]
6401205c:	mov    DWORD PTR [esi+0x10],0x800
64012063:	mov    DWORD PTR [esi+0x14],0x64025c60
6401206a:	call   0x64011dc7
6401206f:	test   eax,eax
64012071:	jge    0x6401207a
64012073:	mov    BYTE PTR ds:0x64031320,0x1
6401207a:	mov    ecx,DWORD PTR [ebp+0x74]
6401207d:	mov    eax,esi
6401207f:	xor    ecx,ebp
64012081:	pop    esi
64012082:	call   0x64012b8c
64012087:	add    ebp,0x78
6401208a:	leave  
6401208b:	ret    
6401208c:	push   esi
6401208d:	push   DWORD PTR ds:0x6402e4d0
64012093:	mov    esi,ecx
64012095:	push   esi
64012096:	call   0x64011eba
6401209b:	lea    ecx,[esi+0x20]
6401209e:	pop    esi
6401209f:	jmp    0x64011e35
640120a4:	cmp    BYTE PTR [ecx+0x8],0x0
640120a8:	mov    DWORD PTR [ecx],0x64025c70
640120ae:	je     0x640120be
640120b0:	mov    ecx,DWORD PTR [ecx+0x4]
640120b3:	test   ecx,ecx
640120b5:	je     0x640120be
640120b7:	push   ecx
640120b8:	call   DWORD PTR ds:0x640250f4
640120be:	ret    
640120bf:	push   DWORD PTR [esp+0x4]
640120c3:	push   0x0
640120c5:	push   DWORD PTR [ecx+0x4]
640120c8:	call   DWORD PTR ds:0x640250f8
640120ce:	ret    0x4
640120d1:	cmp    DWORD PTR [esp+0x4],0x0
640120d6:	je     0x640120e7
640120d8:	push   DWORD PTR [esp+0x4]
640120dc:	push   0x0
640120de:	push   DWORD PTR [ecx+0x4]
640120e1:	call   DWORD PTR ds:0x640250fc
640120e7:	ret    0x4
640120ea:	push   ebp
640120eb:	mov    ebp,esp
640120ed:	xor    eax,eax
640120ef:	cmp    DWORD PTR [ebp+0x8],eax
640120f2:	jne    0x640120fd
640120f4:	push   DWORD PTR [ebp+0xc]
640120f7:	mov    eax,DWORD PTR [ecx]
640120f9:	call   DWORD PTR [eax]
640120fb:	jmp    0x6401211e
640120fd:	cmp    DWORD PTR [ebp+0xc],eax
64012100:	jne    0x6401210e
64012102:	push   DWORD PTR [ebp+0x8]
64012105:	mov    eax,DWORD PTR [ecx]
64012107:	call   DWORD PTR [eax+0x4]
6401210a:	xor    eax,eax
6401210c:	jmp    0x6401211e
6401210e:	push   DWORD PTR [ebp+0xc]
64012111:	push   DWORD PTR [ebp+0x8]
64012114:	push   eax
64012115:	push   DWORD PTR [ecx+0x4]
64012118:	call   DWORD PTR ds:0x64025100
6401211e:	pop    ebp
6401211f:	ret    0x8
64012122:	push   DWORD PTR [esp+0x4]
64012126:	push   0x0
64012128:	push   DWORD PTR [ecx+0x4]
6401212b:	call   DWORD PTR ds:0x64025104
64012131:	ret    0x4
64012134:	push   esi
64012135:	mov    esi,ecx
64012137:	call   0x640120a4
6401213c:	test   BYTE PTR [esp+0x8],0x1
64012141:	je     0x6401214a
64012143:	push   esi
64012144:	call   0x64012332
64012149:	pop    ecx
6401214a:	mov    eax,esi
6401214c:	pop    esi
6401214d:	ret    0x4
64012150:	mov    eax,ecx
64012152:	mov    ecx,DWORD PTR [esp+0x4]
64012156:	mov    DWORD PTR [eax+0x4],ecx
64012159:	mov    DWORD PTR [eax],0x64025c84
6401215f:	xor    ecx,ecx
64012161:	mov    DWORD PTR [eax+0x14],0x2
64012168:	mov    DWORD PTR [eax+0xc],ecx
6401216b:	mov    DWORD PTR [eax+0x10],ecx
6401216e:	mov    WORD PTR [eax+0x18],cx
64012172:	mov    WORD PTR [eax+0x1a],cx
64012176:	mov    DWORD PTR [eax+0x8],eax
64012179:	ret    0x4
6401217c:	mov    eax,DWORD PTR [esp+0x8]
64012180:	mul    DWORD PTR [esp+0xc]
64012184:	test   edx,edx
64012186:	ja     0x6401218d
64012188:	cmp    eax,0xffffffff
6401218b:	jbe    0x64012193
6401218d:	mov    eax,0x80070057
64012192:	ret    
64012193:	mov    ecx,DWORD PTR [esp+0x4]
64012197:	mov    DWORD PTR [ecx],eax
64012199:	xor    eax,eax
6401219b:	ret    
6401219c:	mov    ecx,DWORD PTR [ecx+0x4]
6401219f:	mov    eax,DWORD PTR [ecx]
640121a1:	jmp    DWORD PTR [eax+0x4]
640121a4:	xor    edx,edx
640121a6:	lea    eax,[ecx+0x14]
640121a9:	inc    edx
640121aa:	lock xadd DWORD PTR [eax],edx
640121ae:	lea    eax,[ecx+0x8]
640121b1:	ret    
640121b2:	mov    eax,ecx
640121b4:	ret    
640121b5:	test   BYTE PTR [esp+0x4],0x1
640121ba:	push   esi
640121bb:	mov    esi,ecx
640121bd:	mov    DWORD PTR [esi],0x64025c84
640121c3:	je     0x640121cc
640121c5:	push   esi
640121c6:	call   0x64012332
640121cb:	pop    ecx
640121cc:	mov    eax,esi
640121ce:	pop    esi
640121cf:	ret    0x4
640121d2:	mov    eax,DWORD PTR [esp+0x8]
640121d6:	mov    ecx,DWORD PTR [esp+0xc]
640121da:	or     edx,0xffffffff
640121dd:	sub    edx,eax
640121df:	cmp    edx,ecx
640121e1:	jae    0x640121e9
640121e3:	mov    eax,0x80070057
640121e8:	ret    
640121e9:	add    eax,ecx
640121eb:	mov    ecx,DWORD PTR [esp+0x4]
640121ef:	mov    DWORD PTR [ecx],eax
640121f1:	xor    eax,eax
640121f3:	ret    
640121f4:	push   ebp
640121f5:	mov    ebp,esp
640121f7:	push   esi
640121f8:	mov    esi,DWORD PTR [ebp+0x8]
640121fb:	push   edi
640121fc:	push   DWORD PTR [ebp+0xc]
640121ff:	add    esi,0x8
64012202:	and    esi,0xfffffff8
64012205:	lea    eax,[ebp+0x8]
64012208:	push   esi
64012209:	push   eax
6401220a:	mov    edi,ecx
6401220c:	call   0x6401217c
64012211:	add    esp,0xc
64012214:	test   eax,eax
64012216:	jl     0x6401224e
64012218:	push   DWORD PTR [ebp+0x8]
6401221b:	lea    eax,[ebp+0x8]
6401221e:	push   0x10
64012220:	push   eax
64012221:	call   0x640121d2
64012226:	add    esp,0xc
64012229:	test   eax,eax
6401222b:	jl     0x6401224e
6401222d:	mov    ecx,DWORD PTR [edi+0x4]
64012230:	push   DWORD PTR [ebp+0x8]
64012233:	mov    eax,DWORD PTR [ecx]
64012235:	call   DWORD PTR [eax]
64012237:	test   eax,eax
64012239:	je     0x6401224e
6401223b:	dec    esi
6401223c:	and    DWORD PTR [eax+0x4],0x0
64012240:	mov    DWORD PTR [eax],edi
64012242:	mov    DWORD PTR [eax+0xc],0x1
64012249:	mov    DWORD PTR [eax+0x8],esi
6401224c:	jmp    0x64012250
6401224e:	xor    eax,eax
64012250:	pop    edi
64012251:	pop    esi
64012252:	pop    ebp
64012253:	ret    0x8
64012256:	push   ebp
64012257:	mov    ebp,esp
64012259:	push   esi
6401225a:	mov    esi,DWORD PTR [ebp+0xc]
6401225d:	push   edi
6401225e:	push   DWORD PTR [ebp+0x10]
64012261:	add    esi,0x8
64012264:	and    esi,0xfffffff8
64012267:	lea    eax,[ebp+0xc]
6401226a:	push   esi
6401226b:	push   eax
6401226c:	mov    edi,ecx
6401226e:	call   0x6401217c
64012273:	add    esp,0xc
64012276:	test   eax,eax
64012278:	jl     0x640122a7
6401227a:	push   DWORD PTR [ebp+0xc]
6401227d:	lea    eax,[ebp+0xc]
64012280:	push   0x10
64012282:	push   eax
64012283:	call   0x640121d2
64012288:	add    esp,0xc
6401228b:	test   eax,eax
6401228d:	jl     0x640122a7
6401228f:	push   DWORD PTR [ebp+0xc]
64012292:	mov    ecx,DWORD PTR [edi+0x4]
64012295:	push   DWORD PTR [ebp+0x8]
64012298:	mov    eax,DWORD PTR [ecx]
6401229a:	call   DWORD PTR [eax+0x8]
6401229d:	test   eax,eax
6401229f:	je     0x640122a7
640122a1:	dec    esi
640122a2:	mov    DWORD PTR [eax+0x8],esi
640122a5:	jmp    0x640122a9
640122a7:	xor    eax,eax
640122a9:	pop    edi
640122aa:	pop    esi
640122ab:	pop    ebp
640122ac:	ret    0xc
640122af:	push   0x44
640122b1:	mov    eax,0x640224d5
640122b6:	call   0x640143db
640122bb:	push   0x64025c9c
640122c0:	lea    ecx,[ebp-0x28]
640122c3:	call   0x640026c0
640122c8:	and    DWORD PTR [ebp-0x4],0x0
640122cc:	lea    eax,[ebp-0x28]
640122cf:	push   eax
640122d0:	lea    ecx,[ebp-0x50]
640122d3:	call   0x64002cb0
640122d8:	push   0x6402ac70
640122dd:	lea    eax,[ebp-0x50]
640122e0:	push   eax
640122e1:	mov    DWORD PTR [ebp-0x50],0x6402531c
640122e8:	call   0x6401277b
640122ed:	int3   
640122ee:	push   0x44
640122f0:	mov    eax,0x640224f8
640122f5:	call   0x640143db
640122fa:	push   0x64025cac
640122ff:	lea    ecx,[ebp-0x28]
64012302:	call   0x640026c0
64012307:	and    DWORD PTR [ebp-0x4],0x0
6401230b:	lea    eax,[ebp-0x28]
6401230e:	push   eax
6401230f:	lea    ecx,[ebp-0x50]
64012312:	call   0x64002cb0
64012317:	push   0x6402ac34
6401231c:	lea    eax,[ebp-0x50]
6401231f:	push   eax
64012320:	mov    DWORD PTR [ebp-0x50],0x64025328
64012327:	call   0x6401277b
6401232c:	int3   
6401232d:	jmp    0x64012711
64012332:	jmp    0x64013a26
64012337:	push   ecx
64012338:	mov    DWORD PTR [ecx],0x64025cc8
6401233e:	call   0x64014444
64012343:	pop    ecx
64012344:	ret    
64012345:	push   esi
64012346:	mov    esi,ecx
64012348:	call   0x64012337
6401234d:	test   BYTE PTR [esp+0x8],0x1
64012352:	je     0x6401235b
64012354:	push   esi
64012355:	call   0x64012332
6401235a:	pop    ecx
6401235b:	mov    eax,esi
6401235d:	pop    esi
6401235e:	ret    0x4
64012361:	mov    eax,DWORD PTR [esp+0x4]
64012365:	add    ecx,0x9
64012368:	push   ecx
64012369:	add    eax,0x9
6401236c:	push   eax
6401236d:	call   0x640144c0
64012372:	neg    eax
64012374:	pop    ecx
64012375:	sbb    eax,eax
64012377:	pop    ecx
64012378:	inc    eax
64012379:	ret    0x4
6401237c:	mov    eax,ecx
6401237e:	and    DWORD PTR [eax+0x4],0x0
64012382:	and    DWORD PTR [eax+0x8],0x0
64012386:	mov    DWORD PTR [eax],0x64025cd0
6401238c:	ret    
6401238d:	push   ebx
6401238e:	mov    ebx,DWORD PTR [esp+0x8]
64012392:	push   esi
64012393:	push   edi
64012394:	mov    edi,ecx
64012396:	mov    DWORD PTR [edi],0x64025cd0
6401239c:	mov    eax,DWORD PTR [ebx]
6401239e:	test   eax,eax
640123a0:	je     0x640123c8
640123a2:	push   eax
640123a3:	call   0x64014350
640123a8:	mov    esi,eax
640123aa:	inc    esi
640123ab:	push   esi
640123ac:	call   0x64013b03
640123b1:	test   eax,eax
640123b3:	pop    ecx
640123b4:	pop    ecx
640123b5:	mov    DWORD PTR [edi+0x4],eax
640123b8:	je     0x640123cc
640123ba:	push   DWORD PTR [ebx]
640123bc:	push   esi
640123bd:	push   eax
640123be:	call   0x64014548
640123c3:	add    esp,0xc
640123c6:	jmp    0x640123cc
640123c8:	and    DWORD PTR [edi+0x4],0x0
640123cc:	mov    DWORD PTR [edi+0x8],0x1
640123d3:	mov    eax,edi
640123d5:	pop    edi
640123d6:	pop    esi
640123d7:	pop    ebx
640123d8:	ret    0x4
640123db:	mov    eax,ecx
640123dd:	mov    ecx,DWORD PTR [esp+0x4]
640123e1:	mov    DWORD PTR [eax],0x64025cd0
640123e7:	mov    ecx,DWORD PTR [ecx]
640123e9:	and    DWORD PTR [eax+0x8],0x0
640123ed:	mov    DWORD PTR [eax+0x4],ecx
640123f0:	ret    0x8
640123f3:	push   ebx
640123f4:	mov    ebx,DWORD PTR [esp+0x8]
640123f8:	push   esi
640123f9:	mov    esi,ecx
640123fb:	mov    DWORD PTR [esi],0x64025cd0
64012401:	mov    eax,DWORD PTR [ebx+0x8]
64012404:	mov    DWORD PTR [esi+0x8],eax
64012407:	test   eax,eax
64012409:	mov    eax,DWORD PTR [ebx+0x4]
6401240c:	push   edi
6401240d:	je     0x64012440
6401240f:	test   eax,eax
64012411:	je     0x6401243a
64012413:	push   eax
64012414:	call   0x64014350
64012419:	mov    edi,eax
6401241b:	inc    edi
6401241c:	push   edi
6401241d:	call   0x64013b03
64012422:	test   eax,eax
64012424:	pop    ecx
64012425:	pop    ecx
64012426:	mov    DWORD PTR [esi+0x4],eax
64012429:	je     0x64012443
6401242b:	push   DWORD PTR [ebx+0x4]
6401242e:	push   edi
6401242f:	push   eax
64012430:	call   0x64014548
64012435:	add    esp,0xc
64012438:	jmp    0x64012443
6401243a:	and    DWORD PTR [esi+0x4],0x0
6401243e:	jmp    0x64012443
64012440:	mov    DWORD PTR [esi+0x4],eax
64012443:	pop    edi
64012444:	mov    eax,esi
64012446:	pop    esi
64012447:	pop    ebx
64012448:	ret    0x4
6401244b:	cmp    DWORD PTR [ecx+0x8],0x0
6401244f:	mov    DWORD PTR [ecx],0x64025cd0
64012455:	je     0x64012460
64012457:	push   DWORD PTR [ecx+0x4]
6401245a:	call   0x64013a26
6401245f:	pop    ecx
64012460:	ret    
64012461:	mov    eax,DWORD PTR [ecx+0x4]
64012464:	test   eax,eax
64012466:	jne    0x6401246d
64012468:	mov    eax,0x64025cd8
6401246d:	ret    
6401246e:	push   esi
6401246f:	lea    eax,[esp+0x8]
64012473:	push   eax
64012474:	mov    esi,ecx
64012476:	call   0x6401238d
6401247b:	mov    DWORD PTR [esi],0x64025cf0
64012481:	mov    eax,esi
64012483:	pop    esi
64012484:	ret    0x4
64012487:	push   esi
64012488:	push   DWORD PTR [esp+0x8]
6401248c:	mov    esi,ecx
6401248e:	call   0x640123f3
64012493:	mov    DWORD PTR [esi],0x64025cf0
64012499:	mov    eax,esi
6401249b:	pop    esi
6401249c:	ret    0x4
6401249f:	mov    DWORD PTR [ecx],0x64025cf0
640124a5:	jmp    0x6401244b
640124aa:	push   esi
640124ab:	mov    esi,ecx
640124ad:	call   0x6401244b
640124b2:	test   BYTE PTR [esp+0x8],0x1
640124b7:	je     0x640124c0
640124b9:	push   esi
640124ba:	call   0x64012332
640124bf:	pop    ecx
640124c0:	mov    eax,esi
640124c2:	pop    esi
640124c3:	ret    0x4
640124c6:	push   esi
640124c7:	mov    esi,ecx
640124c9:	mov    DWORD PTR [esi],0x64025cf0
640124cf:	call   0x6401244b
640124d4:	test   BYTE PTR [esp+0x8],0x1
640124d9:	je     0x640124e2
640124db:	push   esi
640124dc:	call   0x64012332
640124e1:	pop    ecx
640124e2:	mov    eax,esi
640124e4:	pop    esi
640124e5:	ret    0x4
640124e8:	push   ebp
640124e9:	mov    ebp,esp
640124eb:	push   esi
640124ec:	mov    esi,DWORD PTR [ebp+0x14]
640124ef:	push   edi
640124f0:	xor    edi,edi
640124f2:	cmp    esi,edi
640124f4:	jne    0x640124fa
640124f6:	xor    eax,eax
640124f8:	jmp    0x6401255f
640124fa:	cmp    DWORD PTR [ebp+0x8],edi
640124fd:	jne    0x6401251a
640124ff:	call   0x64014950
64012504:	push   0x16
64012506:	pop    esi
64012507:	mov    DWORD PTR [eax],esi
64012509:	push   edi
6401250a:	push   edi
6401250b:	push   edi
6401250c:	push   edi
6401250d:	push   edi
6401250e:	call   0x640126c4
64012513:	add    esp,0x14
64012516:	mov    eax,esi
64012518:	jmp    0x6401255f
6401251a:	cmp    DWORD PTR [ebp+0x10],edi
6401251d:	je     0x64012535
6401251f:	cmp    DWORD PTR [ebp+0xc],esi
64012522:	jb     0x64012535
64012524:	push   esi
64012525:	push   DWORD PTR [ebp+0x10]
64012528:	push   DWORD PTR [ebp+0x8]
6401252b:	call   0x640145b0
64012530:	add    esp,0xc
64012533:	jmp    0x640124f6
64012535:	push   DWORD PTR [ebp+0xc]
64012538:	push   edi
64012539:	push   DWORD PTR [ebp+0x8]
6401253c:	call   0x64013290
64012541:	add    esp,0xc
64012544:	cmp    DWORD PTR [ebp+0x10],edi
64012547:	je     0x640124ff
64012549:	cmp    DWORD PTR [ebp+0xc],esi
6401254c:	jae    0x6401255c
6401254e:	call   0x64014950
64012553:	push   0x22
64012555:	pop    ecx
64012556:	mov    DWORD PTR [eax],ecx
64012558:	mov    esi,ecx
6401255a:	jmp    0x64012509
6401255c:	push   0x16
6401255e:	pop    eax
6401255f:	pop    edi
64012560:	pop    esi
64012561:	pop    ebp
64012562:	ret    
64012563:	push   ebp
64012564:	mov    ebp,esp
64012566:	mov    eax,DWORD PTR [ebp+0x14]
64012569:	push   esi
6401256a:	push   edi
6401256b:	xor    edi,edi
6401256d:	cmp    eax,edi
6401256f:	je     0x640125b8
64012571:	cmp    DWORD PTR [ebp+0x8],edi
64012574:	jne    0x64012591
64012576:	call   0x64014950
6401257b:	push   0x16
6401257d:	pop    esi
6401257e:	mov    DWORD PTR [eax],esi
64012580:	push   edi
64012581:	push   edi
64012582:	push   edi
64012583:	push   edi
64012584:	push   edi
64012585:	call   0x640126c4
6401258a:	add    esp,0x14
6401258d:	mov    eax,esi
6401258f:	jmp    0x640125ba
64012591:	cmp    DWORD PTR [ebp+0x10],edi
64012594:	je     0x64012576
64012596:	cmp    DWORD PTR [ebp+0xc],eax
64012599:	jae    0x640125a9
6401259b:	call   0x64014950
640125a0:	push   0x22
640125a2:	pop    ecx
640125a3:	mov    DWORD PTR [eax],ecx
640125a5:	mov    esi,ecx
640125a7:	jmp    0x64012580
640125a9:	push   eax
640125aa:	push   DWORD PTR [ebp+0x10]
640125ad:	push   DWORD PTR [ebp+0x8]
640125b0:	call   0x64013bd0
640125b5:	add    esp,0xc
640125b8:	xor    eax,eax
640125ba:	pop    edi
640125bb:	pop    esi
640125bc:	pop    ebp
640125bd:	ret    
640125be:	mov    eax,DWORD PTR [esp+0x4]
640125c2:	mov    ds:0x6402e55c,eax
640125c7:	ret    
640125c8:	push   ebp
640125c9:	lea    ebp,[esp-0x2a8]
640125d0:	sub    esp,0x328
640125d6:	mov    eax,ds:0x6402d09c
640125db:	xor    eax,ebp
640125dd:	mov    DWORD PTR [ebp+0x2a4],eax
640125e3:	push   esi
640125e4:	mov    DWORD PTR [ebp+0x88],eax
640125ea:	mov    DWORD PTR [ebp+0x84],ecx
640125f0:	mov    DWORD PTR [ebp+0x80],edx
640125f6:	mov    DWORD PTR [ebp+0x7c],ebx
640125f9:	mov    DWORD PTR [ebp+0x78],esi
640125fc:	mov    DWORD PTR [ebp+0x74],edi
640125ff:	data16 mov WORD PTR [ebp+0xa0],ss
64012606:	data16 mov WORD PTR [ebp+0x94],cs
6401260d:	data16 mov WORD PTR [ebp+0x70],ds
64012611:	data16 mov WORD PTR [ebp+0x6c],es
64012615:	data16 mov WORD PTR [ebp+0x68],fs
64012619:	data16 mov WORD PTR [ebp+0x64],gs
6401261d:	pushf  
6401261e:	pop    DWORD PTR [ebp+0x98]
64012624:	mov    esi,DWORD PTR [ebp+0x2ac]
6401262a:	lea    eax,[ebp+0x2ac]
64012630:	mov    DWORD PTR [ebp+0x9c],eax
64012636:	mov    DWORD PTR [ebp-0x28],0x10001
6401263d:	mov    DWORD PTR [ebp+0x90],esi
64012643:	mov    eax,DWORD PTR [eax-0x4]
64012646:	push   0x50
64012648:	mov    DWORD PTR [ebp+0x8c],eax
6401264e:	lea    eax,[ebp-0x80]
64012651:	push   0x0
64012653:	push   eax
64012654:	call   0x64013290
64012659:	lea    eax,[ebp-0x80]
6401265c:	mov    DWORD PTR [ebp-0x30],eax
6401265f:	lea    eax,[ebp-0x28]
64012662:	add    esp,0xc
64012665:	mov    DWORD PTR [ebp-0x80],0xc000000d
6401266c:	mov    DWORD PTR [ebp-0x74],esi
6401266f:	mov    DWORD PTR [ebp-0x2c],eax
64012672:	call   DWORD PTR ds:0x64025118
64012678:	push   0x0
6401267a:	mov    esi,eax
6401267c:	call   DWORD PTR ds:0x64025114
64012682:	lea    eax,[ebp-0x30]
64012685:	push   eax
64012686:	call   DWORD PTR ds:0x64025110
6401268c:	test   eax,eax
6401268e:	jne    0x6401269c
64012690:	test   esi,esi
64012692:	jne    0x6401269c
64012694:	push   0x2
64012696:	call   0x64014994
6401269b:	pop    ecx
6401269c:	push   0xc000000d
640126a1:	call   DWORD PTR ds:0x64025048
640126a7:	push   eax
640126a8:	call   DWORD PTR ds:0x6402510c
640126ae:	mov    ecx,DWORD PTR [ebp+0x2a4]
640126b4:	xor    ecx,ebp
640126b6:	pop    esi
640126b7:	call   0x64012b8c
640126bc:	add    ebp,0x2a8
640126c2:	leave  
640126c3:	ret    
640126c4:	push   ebp
640126c5:	mov    ebp,esp
640126c7:	push   DWORD PTR ds:0x6402e55c
640126cd:	call   0x64014a7f
640126d2:	test   eax,eax
640126d4:	pop    ecx
640126d5:	je     0x640126da
640126d7:	pop    ebp
640126d8:	jmp    eax
640126da:	push   0x2
640126dc:	call   0x64014994
640126e1:	pop    ecx
640126e2:	pop    ebp
640126e3:	jmp    0x640125c8
640126e8:	xor    eax,eax
640126ea:	push   eax
640126eb:	push   eax
640126ec:	push   eax
640126ed:	push   eax
640126ee:	push   eax
640126ef:	call   0x640126c4
640126f4:	add    esp,0x14
640126f7:	ret    
640126f8:	push   esi
640126f9:	push   0x1
640126fb:	push   0x6402d098
64012700:	mov    esi,ecx
64012702:	call   0x640123db
64012707:	mov    DWORD PTR [esi],0x64025304
6401270d:	mov    eax,esi
6401270f:	pop    esi
64012710:	ret    
64012711:	push   ebp
64012712:	mov    ebp,esp
64012714:	sub    esp,0xc
64012717:	jmp    0x64012726
64012719:	push   DWORD PTR [ebp+0x8]
6401271c:	call   0x64014fcb
64012721:	test   eax,eax
64012723:	pop    ecx
64012724:	je     0x64012735
64012726:	push   DWORD PTR [ebp+0x8]
64012729:	call   0x64013b03
6401272e:	test   eax,eax
64012730:	pop    ecx
64012731:	je     0x64012719
64012733:	leave  
64012734:	ret    
64012735:	test   BYTE PTR ds:0x6402e56c,0x1
6401273c:	mov    esi,0x6402e560
64012741:	jne    0x6401275c
64012743:	or     DWORD PTR ds:0x6402e56c,0x1
6401274a:	mov    ecx,esi
6401274c:	call   0x640126f8
64012751:	push   0x6402418a
64012756:	call   0x64012cbf
6401275b:	pop    ecx
6401275c:	push   esi
6401275d:	lea    ecx,[ebp-0xc]
64012760:	call   0x640123f3
64012765:	push   0x6402aba4
6401276a:	lea    eax,[ebp-0xc]
6401276d:	push   eax
6401276e:	mov    DWORD PTR [ebp-0xc],0x64025304
64012775:	call   0x6401277b
6401277a:	int3   
6401277b:	push   ebp
6401277c:	mov    ebp,esp
6401277e:	sub    esp,0x20
64012781:	mov    eax,DWORD PTR [ebp+0x8]
64012784:	push   esi
64012785:	push   edi
64012786:	push   0x8
64012788:	pop    ecx
64012789:	mov    esi,0x64025cf8
6401278e:	lea    edi,[ebp-0x20]
64012791:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64012793:	mov    DWORD PTR [ebp-0x8],eax
64012796:	mov    eax,DWORD PTR [ebp+0xc]
64012799:	test   eax,eax
6401279b:	pop    edi
6401279c:	mov    DWORD PTR [ebp-0x4],eax
6401279f:	pop    esi
640127a0:	je     0x640127ae
640127a2:	test   BYTE PTR [eax],0x8
640127a5:	je     0x640127ae
640127a7:	mov    DWORD PTR [ebp-0xc],0x1994000
640127ae:	lea    eax,[ebp-0xc]
640127b1:	push   eax
640127b2:	push   DWORD PTR [ebp-0x10]
640127b5:	push   DWORD PTR [ebp-0x1c]
640127b8:	push   DWORD PTR [ebp-0x20]
640127bb:	call   DWORD PTR ds:0x640250f0
640127c1:	leave  
640127c2:	ret    0x8
640127c5:	push   ebp
640127c6:	mov    ebp,esp
640127c8:	push   ecx
640127c9:	push   ebx
640127ca:	mov    eax,DWORD PTR [ebp+0xc]
640127cd:	add    eax,0xc
640127d0:	mov    DWORD PTR [ebp-0x4],eax
640127d3:	mov    ebx,DWORD PTR fs:0x0
640127da:	mov    eax,DWORD PTR [ebx]
640127dc:	mov    fs:0x0,eax
640127e2:	mov    eax,DWORD PTR [ebp+0x8]
640127e5:	mov    ebx,DWORD PTR [ebp+0xc]
640127e8:	mov    ebp,DWORD PTR [ebp-0x4]
640127eb:	mov    esp,DWORD PTR [ebx-0x4]
640127ee:	jmp    eax
640127f0:	pop    ebx
640127f1:	leave  
640127f2:	ret    0x8
640127f5:	pop    eax
640127f6:	pop    ecx
640127f7:	xchg   DWORD PTR [esp],eax
640127fa:	jmp    eax
640127fc:	push   ebp
640127fd:	mov    ebp,esp
640127ff:	push   ecx
64012800:	push   ecx
64012801:	push   ebx
64012802:	push   esi
64012803:	push   edi
64012804:	mov    esi,DWORD PTR fs:0x0
6401280b:	mov    DWORD PTR [ebp-0x4],esi
6401280e:	mov    DWORD PTR [ebp-0x8],0x64012825
64012815:	push   0x0
64012817:	push   DWORD PTR [ebp+0xc]
6401281a:	push   DWORD PTR [ebp-0x8]
6401281d:	push   DWORD PTR [ebp+0x8]
64012820:	call   0x6401edec
64012825:	mov    eax,DWORD PTR [ebp+0xc]
64012828:	mov    eax,DWORD PTR [eax+0x4]
6401282b:	and    eax,0xfffffffd
6401282e:	mov    ecx,DWORD PTR [ebp+0xc]
64012831:	mov    DWORD PTR [ecx+0x4],eax
64012834:	mov    edi,DWORD PTR fs:0x0
6401283b:	mov    ebx,DWORD PTR [ebp-0x4]
6401283e:	mov    DWORD PTR [ebx],edi
64012840:	mov    DWORD PTR fs:0x0,ebx
64012847:	pop    edi
64012848:	pop    esi
64012849:	pop    ebx
6401284a:	leave  
6401284b:	ret    0x8
6401284e:	push   ebp
6401284f:	mov    ebp,esp
64012851:	sub    esp,0x8
64012854:	push   ebx
64012855:	push   esi
64012856:	push   edi
64012857:	cld    
64012858:	mov    DWORD PTR [ebp-0x4],eax
6401285b:	xor    eax,eax
6401285d:	push   eax
6401285e:	push   eax
6401285f:	push   eax
64012860:	push   DWORD PTR [ebp-0x4]
64012863:	push   DWORD PTR [ebp+0x14]
64012866:	push   DWORD PTR [ebp+0x10]
64012869:	push   DWORD PTR [ebp+0xc]
6401286c:	push   DWORD PTR [ebp+0x8]
6401286f:	call   0x64015b96
64012874:	add    esp,0x20
64012877:	mov    DWORD PTR [ebp-0x8],eax
6401287a:	pop    edi
6401287b:	pop    esi
6401287c:	pop    ebx
6401287d:	mov    eax,DWORD PTR [ebp-0x8]
64012880:	mov    esp,ebp
64012882:	pop    ebp
64012883:	ret    
64012884:	push   esi
64012885:	cld    
64012886:	mov    esi,DWORD PTR [esp+0xc]
6401288a:	mov    ecx,DWORD PTR [esi+0x8]
6401288d:	xor    ecx,esi
6401288f:	call   0x64012b8c
64012894:	push   0x0
64012896:	push   esi
64012897:	push   DWORD PTR [esi+0x14]
6401289a:	push   DWORD PTR [esi+0xc]
6401289d:	push   0x0
6401289f:	push   DWORD PTR [esp+0x24]
640128a3:	push   DWORD PTR [esi+0x10]
640128a6:	push   DWORD PTR [esp+0x24]
640128aa:	call   0x64015b96
640128af:	add    esp,0x20
640128b2:	pop    esi
640128b3:	ret    
640128b4:	push   ebp
640128b5:	mov    ebp,esp
640128b7:	sub    esp,0x38
640128ba:	push   ebx
640128bb:	cmp    DWORD PTR [ebp+0x8],0x123
640128c2:	jne    0x640128d6
640128c4:	mov    eax,0x6401295d
640128c9:	mov    ecx,DWORD PTR [ebp+0xc]
640128cc:	mov    DWORD PTR [ecx],eax
640128ce:	xor    eax,eax
640128d0:	inc    eax
640128d1:	jmp    0x64012986
640128d6:	and    DWORD PTR [ebp-0x28],0x0
640128da:	mov    DWORD PTR [ebp-0x24],0x64012989
640128e1:	mov    eax,ds:0x6402d09c
640128e6:	lea    ecx,[ebp-0x28]
640128e9:	xor    eax,ecx
640128eb:	mov    DWORD PTR [ebp-0x20],eax
640128ee:	mov    eax,DWORD PTR [ebp+0x18]
640128f1:	mov    DWORD PTR [ebp-0x1c],eax
640128f4:	mov    eax,DWORD PTR [ebp+0xc]
640128f7:	mov    DWORD PTR [ebp-0x18],eax
640128fa:	mov    eax,DWORD PTR [ebp+0x1c]
640128fd:	mov    DWORD PTR [ebp-0x14],eax
64012900:	mov    eax,DWORD PTR [ebp+0x20]
64012903:	mov    DWORD PTR [ebp-0x10],eax
64012906:	and    DWORD PTR [ebp-0xc],0x0
6401290a:	and    DWORD PTR [ebp-0x8],0x0
6401290e:	and    DWORD PTR [ebp-0x4],0x0
64012912:	mov    DWORD PTR [ebp-0xc],esp
64012915:	mov    DWORD PTR [ebp-0x8],ebp
64012918:	mov    eax,fs:0x0
6401291e:	mov    DWORD PTR [ebp-0x28],eax
64012921:	lea    eax,[ebp-0x28]
64012924:	mov    fs:0x0,eax
6401292a:	mov    DWORD PTR [ebp-0x38],0x1
64012931:	mov    eax,DWORD PTR [ebp+0x8]
64012934:	mov    DWORD PTR [ebp-0x34],eax
64012937:	mov    eax,DWORD PTR [ebp+0x10]
6401293a:	mov    DWORD PTR [ebp-0x30],eax
6401293d:	call   0x64014c9b
64012942:	mov    eax,DWORD PTR [eax+0x80]
64012948:	mov    DWORD PTR [ebp-0x2c],eax
6401294b:	lea    eax,[ebp-0x34]
6401294e:	push   eax
6401294f:	mov    eax,DWORD PTR [ebp+0x8]
64012952:	push   DWORD PTR [eax]
64012954:	call   DWORD PTR [ebp-0x2c]
64012957:	pop    ecx
64012958:	pop    ecx
64012959:	and    DWORD PTR [ebp-0x38],0x0
6401295d:	cmp    DWORD PTR [ebp-0x4],0x0
64012961:	je     0x6401297a
64012963:	mov    ebx,DWORD PTR fs:0x0
6401296a:	mov    eax,DWORD PTR [ebx]
6401296c:	mov    ebx,DWORD PTR [ebp-0x28]
6401296f:	mov    DWORD PTR [ebx],eax
64012971:	mov    DWORD PTR fs:0x0,ebx
64012978:	jmp    0x64012983
6401297a:	mov    eax,DWORD PTR [ebp-0x28]
6401297d:	mov    fs:0x0,eax
64012983:	mov    eax,DWORD PTR [ebp-0x38]
64012986:	pop    ebx
64012987:	leave  
64012988:	ret    
64012989:	push   ebp
6401298a:	mov    ebp,esp
6401298c:	push   ecx
6401298d:	push   ebx
6401298e:	cld    
6401298f:	mov    eax,DWORD PTR [ebp+0xc]
64012992:	mov    ecx,DWORD PTR [eax+0x8]
64012995:	xor    ecx,DWORD PTR [ebp+0xc]
64012998:	call   0x64012b8c
6401299d:	mov    eax,DWORD PTR [ebp+0x8]
640129a0:	mov    eax,DWORD PTR [eax+0x4]
640129a3:	and    eax,0x66
640129a6:	je     0x640129b9
640129a8:	mov    eax,DWORD PTR [ebp+0xc]
640129ab:	mov    DWORD PTR [eax+0x24],0x1
640129b2:	xor    eax,eax
640129b4:	inc    eax
640129b5:	jmp    0x64012a23
640129b7:	jmp    0x64012a23
640129b9:	push   0x1
640129bb:	mov    eax,DWORD PTR [ebp+0xc]
640129be:	push   DWORD PTR [eax+0x18]
640129c1:	mov    eax,DWORD PTR [ebp+0xc]
640129c4:	push   DWORD PTR [eax+0x14]
640129c7:	mov    eax,DWORD PTR [ebp+0xc]
640129ca:	push   DWORD PTR [eax+0xc]
640129cd:	push   0x0
640129cf:	push   DWORD PTR [ebp+0x10]
640129d2:	mov    eax,DWORD PTR [ebp+0xc]
640129d5:	push   DWORD PTR [eax+0x10]
640129d8:	push   DWORD PTR [ebp+0x8]
640129db:	call   0x64015b96
640129e0:	add    esp,0x20
640129e3:	mov    eax,DWORD PTR [ebp+0xc]
640129e6:	cmp    DWORD PTR [eax+0x24],0x0
640129ea:	jne    0x640129f7
640129ec:	push   DWORD PTR [ebp+0x8]
640129ef:	push   DWORD PTR [ebp+0xc]
640129f2:	call   0x640127fc
640129f7:	push   0x0
640129f9:	push   0x0
640129fb:	push   0x0
640129fd:	push   0x0
640129ff:	push   0x0
64012a01:	lea    eax,[ebp-0x4]
64012a04:	push   eax
64012a05:	push   0x123
64012a0a:	call   0x640128b4
64012a0f:	add    esp,0x1c
64012a12:	mov    eax,DWORD PTR [ebp-0x4]
64012a15:	mov    ebx,DWORD PTR [ebp+0xc]
64012a18:	mov    esp,DWORD PTR [ebx+0x1c]
64012a1b:	mov    ebp,DWORD PTR [ebx+0x20]
64012a1e:	jmp    eax
64012a20:	xor    eax,eax
64012a22:	inc    eax
64012a23:	pop    ebx
64012a24:	leave  
64012a25:	ret    
64012a26:	push   ebp
64012a27:	mov    ebp,esp
64012a29:	push   ecx
64012a2a:	push   ebx
64012a2b:	push   esi
64012a2c:	push   edi
64012a2d:	mov    edi,DWORD PTR [ebp+0x8]
64012a30:	mov    eax,DWORD PTR [edi+0x10]
64012a33:	mov    esi,DWORD PTR [edi+0xc]
64012a36:	mov    DWORD PTR [ebp-0x4],eax
64012a39:	mov    ebx,esi
64012a3b:	jmp    0x64012a6a
64012a3d:	cmp    esi,0xffffffff
64012a40:	jne    0x64012a47
64012a42:	call   0x64015cc6
64012a47:	mov    ecx,DWORD PTR [ebp-0x4]
64012a4a:	dec    esi
64012a4b:	mov    eax,esi
64012a4d:	imul   eax,eax,0x14
64012a50:	add    eax,ecx
64012a52:	mov    ecx,DWORD PTR [ebp+0x10]
64012a55:	cmp    DWORD PTR [eax+0x4],ecx
64012a58:	jge    0x64012a5f
64012a5a:	cmp    ecx,DWORD PTR [eax+0x8]
64012a5d:	jle    0x64012a64
64012a5f:	cmp    esi,0xffffffff
64012a62:	jne    0x64012a6d
64012a64:	dec    DWORD PTR [ebp+0xc]
64012a67:	mov    ebx,DWORD PTR [ebp+0x8]
64012a6a:	mov    DWORD PTR [ebp+0x8],esi
64012a6d:	cmp    DWORD PTR [ebp+0xc],0x0
64012a71:	jge    0x64012a3d
64012a73:	mov    eax,DWORD PTR [ebp+0x14]
64012a76:	inc    esi
64012a77:	mov    DWORD PTR [eax],esi
64012a79:	mov    eax,DWORD PTR [ebp+0x18]
64012a7c:	mov    DWORD PTR [eax],ebx
64012a7e:	cmp    ebx,DWORD PTR [edi+0xc]
64012a81:	ja     0x64012a87
64012a83:	cmp    esi,ebx
64012a85:	jbe    0x64012a8c
64012a87:	call   0x64015cc6
64012a8c:	mov    eax,esi
64012a8e:	imul   eax,eax,0x14
64012a91:	add    eax,DWORD PTR [ebp-0x4]
64012a94:	pop    edi
64012a95:	pop    esi
64012a96:	pop    ebx
64012a97:	leave  
64012a98:	ret    
64012a99:	mov    eax,DWORD PTR [esp+0x8]
64012a9d:	push   esi
64012a9e:	mov    esi,DWORD PTR [esp+0x8]
64012aa2:	mov    DWORD PTR [esi],eax
64012aa4:	call   0x64014c9b
64012aa9:	mov    eax,DWORD PTR [eax+0x98]
64012aaf:	mov    DWORD PTR [esi+0x4],eax
64012ab2:	call   0x64014c9b
64012ab7:	mov    DWORD PTR [eax+0x98],esi
64012abd:	mov    eax,esi
64012abf:	pop    esi
64012ac0:	ret    
64012ac1:	call   0x64014c9b
64012ac6:	mov    eax,DWORD PTR [eax+0x98]
64012acc:	jmp    0x64012ad9
64012ace:	mov    ecx,DWORD PTR [eax]
64012ad0:	cmp    ecx,DWORD PTR [esp+0x4]
64012ad4:	je     0x64012adf
64012ad6:	mov    eax,DWORD PTR [eax+0x4]
64012ad9:	test   eax,eax
64012adb:	jne    0x64012ace
64012add:	inc    eax
64012ade:	ret    
64012adf:	xor    eax,eax
64012ae1:	ret    
64012ae2:	push   esi
64012ae3:	call   0x64014c9b
64012ae8:	mov    esi,DWORD PTR [esp+0x8]
64012aec:	cmp    esi,DWORD PTR [eax+0x98]
64012af2:	jne    0x64012b04
64012af4:	call   0x64014c9b
64012af9:	mov    ecx,DWORD PTR [esi+0x4]
64012afc:	mov    DWORD PTR [eax+0x98],ecx
64012b02:	pop    esi
64012b03:	ret    
64012b04:	call   0x64014c9b
64012b09:	mov    eax,DWORD PTR [eax+0x98]
64012b0f:	jmp    0x64012b1a
64012b11:	mov    ecx,DWORD PTR [eax+0x4]
64012b14:	cmp    esi,ecx
64012b16:	je     0x64012b26
64012b18:	mov    eax,ecx
64012b1a:	cmp    DWORD PTR [eax+0x4],0x0
64012b1e:	jne    0x64012b11
64012b20:	pop    esi
64012b21:	jmp    0x64015cc6
64012b26:	mov    ecx,DWORD PTR [esi+0x4]
64012b29:	mov    DWORD PTR [eax+0x4],ecx
64012b2c:	pop    esi
64012b2d:	ret    
64012b2e:	push   ebp
64012b2f:	mov    ebp,esp
64012b31:	sub    esp,0x18
64012b34:	mov    eax,ds:0x6402d09c
64012b39:	and    DWORD PTR [ebp-0x18],0x0
64012b3d:	lea    ecx,[ebp-0x18]
64012b40:	xor    eax,ecx
64012b42:	mov    ecx,DWORD PTR [ebp+0x8]
64012b45:	mov    DWORD PTR [ebp-0x10],eax
64012b48:	mov    eax,DWORD PTR [ebp+0xc]
64012b4b:	mov    DWORD PTR [ebp-0xc],eax
64012b4e:	mov    eax,DWORD PTR [ebp+0x14]
64012b51:	inc    eax
64012b52:	mov    DWORD PTR [ebp-0x14],0x64012884
64012b59:	mov    DWORD PTR [ebp-0x8],ecx
64012b5c:	mov    DWORD PTR [ebp-0x4],eax
64012b5f:	mov    eax,fs:0x0
64012b65:	mov    DWORD PTR [ebp-0x18],eax
64012b68:	lea    eax,[ebp-0x18]
64012b6b:	mov    fs:0x0,eax
64012b71:	push   DWORD PTR [ebp+0x18]
64012b74:	push   ecx
64012b75:	push   DWORD PTR [ebp+0x10]
64012b78:	call   0x64015d10
64012b7d:	mov    ecx,eax
64012b7f:	mov    eax,DWORD PTR [ebp-0x18]
64012b82:	mov    fs:0x0,eax
64012b88:	mov    eax,ecx
64012b8a:	leave  
64012b8b:	ret    
64012b8c:	cmp    ecx,DWORD PTR ds:0x6402d09c
64012b92:	jne    0x64012b96
64012b94:	repz ret 
64012b96:	jmp    0x64015d5c
64012b9b:	push   ecx
64012b9c:	push   ebx
64012b9d:	push   ebp
64012b9e:	push   esi
64012b9f:	push   edi
64012ba0:	push   DWORD PTR ds:0x64032630
64012ba6:	call   0x64014a7f
64012bab:	push   DWORD PTR ds:0x6403262c
64012bb1:	mov    esi,eax
64012bb3:	mov    DWORD PTR [esp+0x18],esi
64012bb7:	call   0x64014a7f
64012bbc:	mov    edi,eax
64012bbe:	cmp    edi,esi
64012bc0:	pop    ecx
64012bc1:	pop    ecx
64012bc2:	jb     0x64012c4c
64012bc8:	mov    ebx,edi
64012bca:	sub    ebx,esi
64012bcc:	lea    ebp,[ebx+0x4]
64012bcf:	cmp    ebp,0x4
64012bd2:	jb     0x64012c4c
64012bd4:	push   esi
64012bd5:	call   0x64015f33
64012bda:	mov    esi,eax
64012bdc:	cmp    esi,ebp
64012bde:	pop    ecx
64012bdf:	jae    0x64012c2b
64012be1:	mov    eax,0x800
64012be6:	cmp    esi,eax
64012be8:	jae    0x64012bec
64012bea:	mov    eax,esi
64012bec:	add    eax,esi
64012bee:	cmp    eax,esi
64012bf0:	jb     0x64012c02
64012bf2:	push   eax
64012bf3:	push   DWORD PTR [esp+0x14]
64012bf7:	call   0x64015ee8
64012bfc:	test   eax,eax
64012bfe:	pop    ecx
64012bff:	pop    ecx
64012c00:	jne    0x64012c19
64012c02:	lea    eax,[esi+0x10]
64012c05:	cmp    eax,esi
64012c07:	jb     0x64012c4c
64012c09:	push   eax
64012c0a:	push   DWORD PTR [esp+0x14]
64012c0e:	call   0x64015ee8
64012c13:	test   eax,eax
64012c15:	pop    ecx
64012c16:	pop    ecx
64012c17:	je     0x64012c4c
64012c19:	sar    ebx,0x2
64012c1c:	push   eax
64012c1d:	lea    edi,[eax+ebx*4]
64012c20:	call   0x64014a08
64012c25:	pop    ecx
64012c26:	mov    ds:0x64032630,eax
64012c2b:	push   DWORD PTR [esp+0x18]
64012c2f:	call   0x64014a08
64012c34:	mov    DWORD PTR [edi],eax
64012c36:	add    edi,0x4
64012c39:	push   edi
64012c3a:	call   0x64014a08
64012c3f:	pop    ecx
64012c40:	mov    ds:0x6403262c,eax
64012c45:	mov    eax,DWORD PTR [esp+0x1c]
64012c49:	pop    ecx
64012c4a:	jmp    0x64012c4e
64012c4c:	xor    eax,eax
64012c4e:	pop    edi
64012c4f:	pop    esi
64012c50:	pop    ebp
64012c51:	pop    ebx
64012c52:	pop    ecx
64012c53:	ret    
64012c54:	push   esi
64012c55:	push   0x4
64012c57:	push   0x20
64012c59:	call   0x64015ea0
64012c5e:	mov    esi,eax
64012c60:	push   esi
64012c61:	call   0x64014a08
64012c66:	add    esp,0xc
64012c69:	test   esi,esi
64012c6b:	mov    ds:0x64032630,eax
64012c70:	mov    ds:0x6403262c,eax
64012c75:	jne    0x64012c7c
64012c77:	push   0x18
64012c79:	pop    eax
64012c7a:	pop    esi
64012c7b:	ret    
64012c7c:	and    DWORD PTR [esi],0x0
64012c7f:	xor    eax,eax
64012c81:	pop    esi
64012c82:	ret    
64012c83:	push   0xc
64012c85:	push   0x6402a5b0
64012c8a:	call   0x64014150
64012c8f:	call   0x64016035
64012c94:	and    DWORD PTR [ebp-0x4],0x0
64012c98:	push   DWORD PTR [ebp+0x8]
64012c9b:	call   0x64012b9b
64012ca0:	pop    ecx
64012ca1:	mov    DWORD PTR [ebp-0x1c],eax
64012ca4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012cab:	call   0x64012cb9
64012cb0:	mov    eax,DWORD PTR [ebp-0x1c]
64012cb3:	call   0x64014195
64012cb8:	ret    
64012cb9:	call   0x6401603e
64012cbe:	ret    
64012cbf:	push   DWORD PTR [esp+0x4]
64012cc3:	call   0x64012c83
64012cc8:	neg    eax
64012cca:	sbb    eax,eax
64012ccc:	neg    eax
64012cce:	pop    ecx
64012ccf:	dec    eax
64012cd0:	ret    
64012cd1:	mov    eax,DWORD PTR [esp+0x4]
64012cd5:	push   ebx
64012cd6:	mov    ebx,DWORD PTR [esp+0xc]
64012cda:	cmp    WORD PTR [ebx],0x0
64012cde:	push   edi
64012cdf:	mov    edi,eax
64012ce1:	je     0x64012d28
64012ce3:	movzx  ecx,WORD PTR [eax]
64012ce6:	test   cx,cx
64012ce9:	je     0x64012d26
64012ceb:	movzx  edx,cx
64012cee:	sub    eax,ebx
64012cf0:	test   dx,dx
64012cf3:	mov    ecx,DWORD PTR [esp+0x10]
64012cf7:	je     0x64012d14
64012cf9:	movzx  edx,WORD PTR [ecx]
64012cfc:	test   dx,dx
64012cff:	je     0x64012d2b
64012d01:	movzx  ebx,WORD PTR [eax+ecx*1]
64012d05:	movzx  edx,dx
64012d08:	sub    ebx,edx
64012d0a:	jne    0x64012d14
64012d0c:	inc    ecx
64012d0d:	inc    ecx
64012d0e:	cmp    WORD PTR [eax+ecx*1],bx
64012d12:	jne    0x64012cf9
64012d14:	cmp    WORD PTR [ecx],0x0
64012d18:	je     0x64012d2b
64012d1a:	inc    edi
64012d1b:	inc    edi
64012d1c:	movzx  edx,WORD PTR [edi]
64012d1f:	inc    eax
64012d20:	inc    eax
64012d21:	test   dx,dx
64012d24:	jne    0x64012cf0
64012d26:	xor    eax,eax
64012d28:	pop    edi
64012d29:	pop    ebx
64012d2a:	ret    
64012d2b:	mov    eax,edi
64012d2d:	jmp    0x64012d28
64012d2f:	mov    eax,DWORD PTR [esp+0x4]
64012d33:	test   eax,eax
64012d35:	push   esi
64012d36:	mov    esi,ecx
64012d38:	mov    BYTE PTR [esi+0xc],0x0
64012d3c:	jne    0x64012da1
64012d3e:	call   0x64014c9b
64012d43:	mov    DWORD PTR [esi+0x8],eax
64012d46:	mov    ecx,DWORD PTR [eax+0x6c]
64012d49:	mov    DWORD PTR [esi],ecx
64012d4b:	mov    ecx,DWORD PTR [eax+0x68]
64012d4e:	mov    DWORD PTR [esi+0x4],ecx
64012d51:	mov    ecx,DWORD PTR [esi]
64012d53:	cmp    ecx,DWORD PTR ds:0x6402d870
64012d59:	je     0x64012d6d
64012d5b:	mov    ecx,DWORD PTR ds:0x6402d78c
64012d61:	test   DWORD PTR [eax+0x70],ecx
64012d64:	jne    0x64012d6d
64012d66:	call   0x64016c1f
64012d6b:	mov    DWORD PTR [esi],eax
64012d6d:	mov    eax,DWORD PTR [esi+0x4]
64012d70:	cmp    eax,DWORD PTR ds:0x6402d690
64012d76:	je     0x64012d8e
64012d78:	mov    eax,DWORD PTR [esi+0x8]
64012d7b:	mov    ecx,DWORD PTR ds:0x6402d78c
64012d81:	test   DWORD PTR [eax+0x70],ecx
64012d84:	jne    0x64012d8e
64012d86:	call   0x640164e0
64012d8b:	mov    DWORD PTR [esi+0x4],eax
64012d8e:	mov    eax,DWORD PTR [esi+0x8]
64012d91:	test   BYTE PTR [eax+0x70],0x2
64012d95:	jne    0x64012dab
64012d97:	or     DWORD PTR [eax+0x70],0x2
64012d9b:	mov    BYTE PTR [esi+0xc],0x1
64012d9f:	jmp    0x64012dab
64012da1:	mov    ecx,DWORD PTR [eax]
64012da3:	mov    DWORD PTR [esi],ecx
64012da5:	mov    eax,DWORD PTR [eax+0x4]
64012da8:	mov    DWORD PTR [esi+0x4],eax
64012dab:	mov    eax,esi
64012dad:	pop    esi
64012dae:	ret    0x4
64012db1:	push   ebp
64012db2:	mov    ebp,esp
64012db4:	sub    esp,0x20
64012db7:	push   esi
64012db8:	xor    esi,esi
64012dba:	cmp    DWORD PTR [ebp+0xc],esi
64012dbd:	jne    0x64012ddc
64012dbf:	call   0x64014950
64012dc4:	push   esi
64012dc5:	push   esi
64012dc6:	push   esi
64012dc7:	push   esi
64012dc8:	push   esi
64012dc9:	mov    DWORD PTR [eax],0x16
64012dcf:	call   0x640126c4
64012dd4:	add    esp,0x14
64012dd7:	or     eax,0xffffffff
64012dda:	jmp    0x64012e03
64012ddc:	push   DWORD PTR [ebp+0x14]
64012ddf:	lea    eax,[ebp-0x20]
64012de2:	push   DWORD PTR [ebp+0x10]
64012de5:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64012dec:	push   DWORD PTR [ebp+0xc]
64012def:	mov    DWORD PTR [ebp-0x14],0x42
64012df6:	push   eax
64012df7:	mov    DWORD PTR [ebp-0x18],esi
64012dfa:	mov    DWORD PTR [ebp-0x20],esi
64012dfd:	call   DWORD PTR [ebp+0x8]
64012e00:	add    esp,0x10
64012e03:	pop    esi
64012e04:	leave  
64012e05:	ret    
64012e06:	push   DWORD PTR [esp+0x8]
64012e0a:	push   0x0
64012e0c:	push   DWORD PTR [esp+0xc]
64012e10:	push   0x64016e8e
64012e15:	call   0x64012db1
64012e1a:	add    esp,0x10
64012e1d:	ret    
64012e1e:	push   ebp
64012e1f:	mov    ebp,esp
64012e21:	sub    esp,0x20
64012e24:	push   ebx
64012e25:	xor    ebx,ebx
64012e27:	cmp    DWORD PTR [ebp+0x14],ebx
64012e2a:	jne    0x64012e4c
64012e2c:	call   0x64014950
64012e31:	push   ebx
64012e32:	push   ebx
64012e33:	push   ebx
64012e34:	push   ebx
64012e35:	push   ebx
64012e36:	mov    DWORD PTR [eax],0x16
64012e3c:	call   0x640126c4
64012e41:	add    esp,0x14
64012e44:	or     eax,0xffffffff
64012e47:	jmp    0x64012f11
64012e4c:	push   esi
64012e4d:	mov    esi,DWORD PTR [ebp+0xc]
64012e50:	push   edi
64012e51:	mov    edi,DWORD PTR [ebp+0x10]
64012e54:	cmp    edi,ebx
64012e56:	je     0x64012e7c
64012e58:	cmp    esi,ebx
64012e5a:	jne    0x64012e7c
64012e5c:	call   0x64014950
64012e61:	push   ebx
64012e62:	push   ebx
64012e63:	push   ebx
64012e64:	push   ebx
64012e65:	push   ebx
64012e66:	mov    DWORD PTR [eax],0x16
64012e6c:	call   0x640126c4
64012e71:	add    esp,0x14
64012e74:	or     eax,0xffffffff
64012e77:	jmp    0x64012f0f
64012e7c:	cmp    edi,0x3fffffff
64012e82:	mov    DWORD PTR [ebp-0x14],0x42
64012e89:	mov    DWORD PTR [ebp-0x18],esi
64012e8c:	mov    DWORD PTR [ebp-0x20],esi
64012e8f:	jbe    0x64012e9a
64012e91:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64012e98:	jmp    0x64012ea0
64012e9a:	lea    eax,[edi+edi*1]
64012e9d:	mov    DWORD PTR [ebp-0x1c],eax
64012ea0:	push   DWORD PTR [ebp+0x1c]
64012ea3:	lea    eax,[ebp-0x20]
64012ea6:	push   DWORD PTR [ebp+0x18]
64012ea9:	push   DWORD PTR [ebp+0x14]
64012eac:	push   eax
64012ead:	call   DWORD PTR [ebp+0x8]
64012eb0:	add    esp,0x10
64012eb3:	cmp    esi,ebx
64012eb5:	mov    DWORD PTR [ebp+0x14],eax
64012eb8:	je     0x64012f0f
64012eba:	cmp    eax,ebx
64012ebc:	jl     0x64012f00
64012ebe:	dec    DWORD PTR [ebp-0x1c]
64012ec1:	js     0x64012ecd
64012ec3:	mov    eax,DWORD PTR [ebp-0x20]
64012ec6:	mov    BYTE PTR [eax],bl
64012ec8:	inc    DWORD PTR [ebp-0x20]
64012ecb:	jmp    0x64012ede
64012ecd:	lea    eax,[ebp-0x20]
64012ed0:	push   eax
64012ed1:	push   ebx
64012ed2:	call   0x64016c95
64012ed7:	cmp    eax,0xffffffff
64012eda:	pop    ecx
64012edb:	pop    ecx
64012edc:	je     0x64012f00
64012ede:	dec    DWORD PTR [ebp-0x1c]
64012ee1:	js     0x64012eea
64012ee3:	mov    eax,DWORD PTR [ebp-0x20]
64012ee6:	mov    BYTE PTR [eax],bl
64012ee8:	jmp    0x64012efb
64012eea:	lea    eax,[ebp-0x20]
64012eed:	push   eax
64012eee:	push   ebx
64012eef:	call   0x64016c95
64012ef4:	cmp    eax,0xffffffff
64012ef7:	pop    ecx
64012ef8:	pop    ecx
64012ef9:	je     0x64012f00
64012efb:	mov    eax,DWORD PTR [ebp+0x14]
64012efe:	jmp    0x64012f0f
64012f00:	xor    eax,eax
64012f02:	cmp    DWORD PTR [ebp-0x1c],ebx
64012f05:	mov    WORD PTR [esi+edi*2-0x2],bx
64012f0a:	setge  al
64012f0d:	dec    eax
64012f0e:	dec    eax
64012f0f:	pop    edi
64012f10:	pop    esi
64012f11:	pop    ebx
64012f12:	leave  
64012f13:	ret    
64012f14:	push   ebp
64012f15:	mov    ebp,esp
64012f17:	push   esi
64012f18:	xor    esi,esi
64012f1a:	cmp    DWORD PTR [ebp+0x10],esi
64012f1d:	jne    0x64012f3c
64012f1f:	call   0x64014950
64012f24:	push   esi
64012f25:	push   esi
64012f26:	push   esi
64012f27:	push   esi
64012f28:	push   esi
64012f29:	mov    DWORD PTR [eax],0x16
64012f2f:	call   0x640126c4
64012f34:	add    esp,0x14
64012f37:	or     eax,0xffffffff
64012f3a:	jmp    0x64012f98
64012f3c:	push   edi
64012f3d:	mov    edi,DWORD PTR [ebp+0x8]
64012f40:	cmp    edi,esi
64012f42:	je     0x64012f49
64012f44:	cmp    DWORD PTR [ebp+0xc],esi
64012f47:	ja     0x64012f56
64012f49:	call   0x64014950
64012f4e:	mov    DWORD PTR [eax],0x16
64012f54:	jmp    0x64012f87
64012f56:	push   DWORD PTR [ebp+0x18]
64012f59:	push   DWORD PTR [ebp+0x14]
64012f5c:	push   DWORD PTR [ebp+0x10]
64012f5f:	push   DWORD PTR [ebp+0xc]
64012f62:	push   edi
64012f63:	push   0x6401779e
64012f68:	call   0x64012e1e
64012f6d:	add    esp,0x18
64012f70:	cmp    eax,esi
64012f72:	jge    0x64012f77
64012f74:	mov    WORD PTR [edi],si
64012f77:	cmp    eax,0xfffffffe
64012f7a:	jne    0x64012f97
64012f7c:	call   0x64014950
64012f81:	mov    DWORD PTR [eax],0x22
64012f87:	push   esi
64012f88:	push   esi
64012f89:	push   esi
64012f8a:	push   esi
64012f8b:	push   esi
64012f8c:	call   0x640126c4
64012f91:	add    esp,0x14
64012f94:	or     eax,0xffffffff
64012f97:	pop    edi
64012f98:	pop    esi
64012f99:	pop    ebp
64012f9a:	ret    
64012f9b:	push   DWORD PTR [esp+0x10]
64012f9f:	push   0x0
64012fa1:	push   DWORD PTR [esp+0x14]
64012fa5:	push   DWORD PTR [esp+0x14]
64012fa9:	push   DWORD PTR [esp+0x14]
64012fad:	call   0x64012f14
64012fb2:	add    esp,0x14
64012fb5:	ret    
64012fb6:	mov    edx,DWORD PTR [esp+0x4]
64012fba:	push   ebx
64012fbb:	push   esi
64012fbc:	xor    esi,esi
64012fbe:	cmp    edx,esi
64012fc0:	push   edi
64012fc1:	je     0x64012fcb
64012fc3:	mov    ebx,DWORD PTR [esp+0x14]
64012fc7:	cmp    ebx,esi
64012fc9:	ja     0x64012fe6
64012fcb:	call   0x64014950
64012fd0:	push   0x16
64012fd2:	pop    edi
64012fd3:	mov    DWORD PTR [eax],edi
64012fd5:	push   esi
64012fd6:	push   esi
64012fd7:	push   esi
64012fd8:	push   esi
64012fd9:	push   esi
64012fda:	call   0x640126c4
64012fdf:	add    esp,0x14
64012fe2:	mov    eax,edi
64012fe4:	jmp    0x6401302c
64012fe6:	mov    edi,DWORD PTR [esp+0x18]
64012fea:	cmp    edi,esi
64012fec:	jne    0x64012ff3
64012fee:	mov    WORD PTR [edx],si
64012ff1:	jmp    0x64012fcb
64012ff3:	mov    ecx,edx
64012ff5:	cmp    WORD PTR [ecx],si
64012ff8:	je     0x64012fff
64012ffa:	inc    ecx
64012ffb:	inc    ecx
64012ffc:	dec    ebx
64012ffd:	jne    0x64012ff5
64012fff:	cmp    ebx,esi
64013001:	je     0x64012fee
64013003:	movzx  eax,WORD PTR [edi]
64013006:	mov    WORD PTR [ecx],ax
64013009:	inc    ecx
6401300a:	inc    ecx
6401300b:	inc    edi
6401300c:	inc    edi
6401300d:	cmp    ax,si
64013010:	je     0x64013015
64013012:	dec    ebx
64013013:	jne    0x64013003
64013015:	cmp    ebx,esi
64013017:	jne    0x6401302a
64013019:	mov    WORD PTR [edx],si
6401301c:	call   0x64014950
64013021:	push   0x22
64013023:	pop    ecx
64013024:	mov    DWORD PTR [eax],ecx
64013026:	mov    edi,ecx
64013028:	jmp    0x64012fd5
6401302a:	xor    eax,eax
6401302c:	pop    edi
6401302d:	pop    esi
6401302e:	pop    ebx
6401302f:	ret    
64013030:	mov    ecx,DWORD PTR [esp+0x4]
64013034:	push   ebx
64013035:	push   esi
64013036:	push   edi
64013037:	xor    edi,edi
64013039:	cmp    ecx,edi
6401303b:	je     0x64013045
6401303d:	mov    ebx,DWORD PTR [esp+0x14]
64013041:	cmp    ebx,edi
64013043:	ja     0x64013060
64013045:	call   0x64014950
6401304a:	push   0x16
6401304c:	pop    esi
6401304d:	mov    DWORD PTR [eax],esi
6401304f:	push   edi
64013050:	push   edi
64013051:	push   edi
64013052:	push   edi
64013053:	push   edi
64013054:	call   0x640126c4
64013059:	add    esp,0x14
6401305c:	mov    eax,esi
6401305e:	jmp    0x64013098
64013060:	mov    esi,DWORD PTR [esp+0x18]
64013064:	cmp    esi,edi
64013066:	jne    0x6401306d
64013068:	mov    WORD PTR [ecx],di
6401306b:	jmp    0x64013045
6401306d:	mov    edx,ecx
6401306f:	movzx  eax,WORD PTR [esi]
64013072:	mov    WORD PTR [edx],ax
64013075:	inc    edx
64013076:	inc    edx
64013077:	inc    esi
64013078:	inc    esi
64013079:	cmp    ax,di
6401307c:	je     0x64013081
6401307e:	dec    ebx
6401307f:	jne    0x6401306f
64013081:	cmp    ebx,edi
64013083:	jne    0x64013096
64013085:	mov    WORD PTR [ecx],di
64013088:	call   0x64014950
6401308d:	push   0x22
6401308f:	pop    ecx
64013090:	mov    DWORD PTR [eax],ecx
64013092:	mov    esi,ecx
64013094:	jmp    0x6401304f
64013096:	xor    eax,eax
64013098:	pop    edi
64013099:	pop    esi
6401309a:	pop    ebx
6401309b:	ret    
6401309c:	mov    eax,DWORD PTR [esp+0x4]
640130a0:	test   eax,eax
640130a2:	je     0x640130b6
640130a4:	sub    eax,0x8
640130a7:	cmp    DWORD PTR [eax],0xdddd
640130ad:	jne    0x640130b6
640130af:	push   eax
640130b0:	call   0x64013a26
640130b5:	pop    ecx
640130b6:	ret    
640130b7:	push   ebp
640130b8:	mov    ebp,esp
640130ba:	sub    esp,0xc
640130bd:	mov    eax,ds:0x6402d09c
640130c2:	xor    eax,ebp
640130c4:	mov    DWORD PTR [ebp-0x4],eax
640130c7:	push   esi
640130c8:	xor    esi,esi
640130ca:	cmp    ebx,esi
640130cc:	push   edi
640130cd:	jne    0x640130ed
640130cf:	call   0x64014950
640130d4:	push   0x16
640130d6:	pop    edi
640130d7:	push   esi
640130d8:	push   esi
640130d9:	push   esi
640130da:	push   esi
640130db:	push   esi
640130dc:	mov    DWORD PTR [eax],edi
640130de:	call   0x640126c4
640130e3:	add    esp,0x14
640130e6:	mov    eax,edi
640130e8:	jmp    0x6401322d
640130ed:	push   DWORD PTR [ebp+0x8]
640130f0:	push   ebx
640130f1:	call   0x6401835b
640130f6:	cmp    eax,DWORD PTR [ebp+0x8]
640130f9:	pop    ecx
640130fa:	pop    ecx
640130fb:	jb     0x64013102
640130fd:	mov    WORD PTR [ebx],si
64013100:	jmp    0x640130cf
64013102:	mov    edx,DWORD PTR [ebp+0xc]
64013105:	mov    eax,DWORD PTR [edx]
64013107:	mov    ecx,DWORD PTR [eax+0x14]
6401310a:	cmp    ecx,esi
6401310c:	jne    0x64013138
6401310e:	cmp    WORD PTR [ebx],si
64013111:	mov    eax,ebx
64013113:	je     0x64013131
64013115:	movzx  ecx,WORD PTR [eax]
64013118:	cmp    cx,0x41
6401311c:	jb     0x6401312a
6401311e:	cmp    cx,0x5a
64013122:	ja     0x6401312a
64013124:	add    ecx,0x20
64013127:	mov    WORD PTR [eax],cx
6401312a:	inc    eax
6401312b:	inc    eax
6401312c:	cmp    WORD PTR [eax],si
6401312f:	jne    0x64013115
64013131:	xor    eax,eax
64013133:	jmp    0x6401322d
64013138:	push   DWORD PTR [eax+0x4]
6401313b:	mov    edi,0x100
64013140:	push   esi
64013141:	push   esi
64013142:	push   0xffffffff
64013144:	push   ebx
64013145:	push   edi
64013146:	push   ecx
64013147:	push   edx
64013148:	call   0x6401831b
6401314d:	mov    ecx,eax
6401314f:	add    esp,0x20
64013152:	cmp    ecx,esi
64013154:	mov    DWORD PTR [ebp-0xc],ecx
64013157:	jne    0x64013170
64013159:	call   0x64014950
6401315e:	mov    DWORD PTR [eax],0x2a
64013164:	call   0x64014950
64013169:	mov    eax,DWORD PTR [eax]
6401316b:	jmp    0x6401322d
64013170:	cmp    DWORD PTR [ebp+0x8],ecx
64013173:	jae    0x64013184
64013175:	mov    WORD PTR [ebx],si
64013178:	call   0x64014950
6401317d:	push   0x22
6401317f:	jmp    0x640130d6
64013184:	cmp    ecx,esi
64013186:	jle    0x640131ce
64013188:	push   0xffffffe0
6401318a:	xor    edx,edx
6401318c:	pop    eax
6401318d:	div    ecx
6401318f:	cmp    eax,0x2
64013192:	jb     0x640131ce
64013194:	lea    eax,[ecx+ecx*1+0x8]
64013198:	cmp    eax,0x400
6401319d:	ja     0x640131b2
6401319f:	call   0x64013310
640131a4:	mov    eax,esp
640131a6:	cmp    eax,esi
640131a8:	je     0x640131c6
640131aa:	mov    DWORD PTR [eax],0xcccc
640131b0:	jmp    0x640131c3
640131b2:	push   eax
640131b3:	call   0x64013b03
640131b8:	cmp    eax,esi
640131ba:	pop    ecx
640131bb:	je     0x640131c6
640131bd:	mov    DWORD PTR [eax],0xdddd
640131c3:	add    eax,0x8
640131c6:	mov    ecx,DWORD PTR [ebp-0xc]
640131c9:	mov    DWORD PTR [ebp-0x8],eax
640131cc:	jmp    0x640131d1
640131ce:	mov    DWORD PTR [ebp-0x8],esi
640131d1:	cmp    DWORD PTR [ebp-0x8],esi
640131d4:	jne    0x640131e3
640131d6:	call   0x64014950
640131db:	mov    DWORD PTR [eax],0xc
640131e1:	jmp    0x64013164
640131e3:	mov    edx,DWORD PTR [ebp+0xc]
640131e6:	mov    eax,DWORD PTR [edx]
640131e8:	push   DWORD PTR [eax+0x4]
640131eb:	push   ecx
640131ec:	push   DWORD PTR [ebp-0x8]
640131ef:	push   0xffffffff
640131f1:	push   ebx
640131f2:	push   edi
640131f3:	push   DWORD PTR [eax+0x14]
640131f6:	push   edx
640131f7:	call   0x6401831b
640131fc:	add    esp,0x20
640131ff:	test   eax,eax
64013201:	je     0x64013216
64013203:	push   DWORD PTR [ebp-0x8]
64013206:	push   DWORD PTR [ebp+0x8]
64013209:	push   ebx
6401320a:	call   0x64013030
6401320f:	add    esp,0xc
64013212:	mov    esi,eax
64013214:	jmp    0x64013222
64013216:	call   0x64014950
6401321b:	push   0x2a
6401321d:	pop    ecx
6401321e:	mov    DWORD PTR [eax],ecx
64013220:	mov    esi,ecx
64013222:	push   DWORD PTR [ebp-0x8]
64013225:	call   0x6401309c
6401322a:	pop    ecx
6401322b:	mov    eax,esi
6401322d:	lea    esp,[ebp-0x14]
64013230:	pop    edi
64013231:	pop    esi
64013232:	mov    ecx,DWORD PTR [ebp-0x4]
64013235:	xor    ecx,ebp
64013237:	call   0x64012b8c
6401323c:	leave  
6401323d:	ret    
6401323e:	push   ebp
6401323f:	mov    ebp,esp
64013241:	sub    esp,0x10
64013244:	push   ebx
64013245:	push   DWORD PTR [ebp+0x10]
64013248:	lea    ecx,[ebp-0x10]
6401324b:	call   0x64012d2f
64013250:	mov    ebx,DWORD PTR [ebp+0x8]
64013253:	lea    eax,[ebp-0x10]
64013256:	push   eax
64013257:	push   DWORD PTR [ebp+0xc]
6401325a:	call   0x640130b7
6401325f:	cmp    BYTE PTR [ebp-0x4],0x0
64013263:	pop    ecx
64013264:	pop    ecx
64013265:	pop    ebx
64013266:	je     0x6401326f
64013268:	mov    ecx,DWORD PTR [ebp-0x8]
6401326b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401326f:	leave  
64013270:	ret    
64013271:	push   0x0
64013273:	push   DWORD PTR [esp+0xc]
64013277:	push   DWORD PTR [esp+0xc]
6401327b:	call   0x6401323e
64013280:	add    esp,0xc
64013283:	ret    
64013284:	jmp    0x64012332
64013289:	int3   
6401328a:	int3   
6401328b:	int3   
6401328c:	int3   
6401328d:	int3   
6401328e:	int3   
6401328f:	int3   
64013290:	mov    edx,DWORD PTR [esp+0xc]
64013294:	mov    ecx,DWORD PTR [esp+0x4]
64013298:	test   edx,edx
6401329a:	je     0x64013305
6401329c:	xor    eax,eax
6401329e:	mov    al,BYTE PTR [esp+0x8]
640132a2:	test   al,al
640132a4:	jne    0x640132bc
640132a6:	cmp    edx,0x100
640132ac:	jb     0x640132bc
640132ae:	cmp    DWORD PTR ds:0x64032624,0x0
640132b5:	je     0x640132bc
640132b7:	jmp    0x640183ce
640132bc:	push   edi
640132bd:	mov    edi,ecx
640132bf:	cmp    edx,0x4
640132c2:	jb     0x640132f5
640132c4:	neg    ecx
640132c6:	and    ecx,0x3
640132c9:	je     0x640132d7
640132cb:	sub    edx,ecx
640132cd:	mov    BYTE PTR [edi],al
640132cf:	add    edi,0x1
640132d2:	sub    ecx,0x1
640132d5:	jne    0x640132cd
640132d7:	mov    ecx,eax
640132d9:	shl    eax,0x8
640132dc:	add    eax,ecx
640132de:	mov    ecx,eax
640132e0:	shl    eax,0x10
640132e3:	add    eax,ecx
640132e5:	mov    ecx,edx
640132e7:	and    edx,0x3
640132ea:	shr    ecx,0x2
640132ed:	je     0x640132f5
640132ef:	rep stos DWORD PTR es:[edi],eax
640132f1:	test   edx,edx
640132f3:	je     0x640132ff
640132f5:	mov    BYTE PTR [edi],al
640132f7:	add    edi,0x1
640132fa:	sub    edx,0x1
640132fd:	jne    0x640132f5
640132ff:	mov    eax,DWORD PTR [esp+0x8]
64013303:	pop    edi
64013304:	ret    
64013305:	mov    eax,DWORD PTR [esp+0x4]
64013309:	ret    
6401330a:	int3   
6401330b:	int3   
6401330c:	int3   
6401330d:	int3   
6401330e:	int3   
6401330f:	int3   
64013310:	push   ecx
64013311:	lea    ecx,[esp+0x8]
64013315:	sub    ecx,eax
64013317:	and    ecx,0xf
6401331a:	add    eax,ecx
6401331c:	sbb    ecx,ecx
6401331e:	or     eax,ecx
64013320:	pop    ecx
64013321:	jmp    0x64018480
64013326:	push   ecx
64013327:	lea    ecx,[esp+0x8]
6401332b:	sub    ecx,eax
6401332d:	and    ecx,0x7
64013330:	add    eax,ecx
64013332:	sbb    ecx,ecx
64013334:	or     eax,ecx
64013336:	pop    ecx
64013337:	jmp    0x64018480
6401333c:	call   0x64014c9b
64013341:	mov    ecx,DWORD PTR [esp+0x4]
64013345:	mov    DWORD PTR [eax+0x14],ecx
64013348:	ret    
64013349:	call   0x64014c9b
6401334e:	mov    ecx,DWORD PTR [eax+0x14]
64013351:	imul   ecx,ecx,0x343fd
64013357:	add    ecx,0x269ec3
6401335d:	mov    DWORD PTR [eax+0x14],ecx
64013360:	mov    eax,ecx
64013362:	shr    eax,0x10
64013365:	and    eax,0x7fff
6401336a:	ret    
6401336b:	push   ebp
6401336c:	mov    ebp,esp
6401336e:	push   ecx
6401336f:	mov    eax,DWORD PTR [ebp+0xc]
64013372:	cmp    eax,0x1
64013375:	push   ebx
64013376:	push   esi
64013377:	push   edi
64013378:	jne    0x64013495
6401337e:	mov    ebx,DWORD PTR ds:0x64025108
64013384:	mov    edi,0x94
64013389:	push   edi
6401338a:	push   0x0
6401338c:	call   ebx
6401338e:	push   eax
6401338f:	call   DWORD PTR ds:0x640250f8
64013395:	mov    esi,eax
64013397:	test   esi,esi
64013399:	jne    0x640133a2
6401339b:	xor    eax,eax
6401339d:	jmp    0x6401353d
640133a2:	push   esi
640133a3:	mov    DWORD PTR [esi],edi
640133a5:	call   DWORD PTR ds:0x640250ec
640133ab:	test   eax,eax
640133ad:	push   esi
640133ae:	push   0x0
640133b0:	jne    0x640133bd
640133b2:	call   ebx
640133b4:	push   eax
640133b5:	call   DWORD PTR ds:0x640250fc
640133bb:	jmp    0x6401339b
640133bd:	mov    eax,DWORD PTR [esi+0x10]
640133c0:	mov    edi,DWORD PTR [esi+0xc]
640133c3:	mov    DWORD PTR [ebp+0xc],eax
640133c6:	mov    eax,DWORD PTR [esi+0x4]
640133c9:	mov    DWORD PTR [ebp+0x10],eax
640133cc:	mov    eax,DWORD PTR [esi+0x8]
640133cf:	mov    DWORD PTR [ebp-0x4],eax
640133d2:	and    edi,0x7fff
640133d8:	call   ebx
640133da:	push   eax
640133db:	call   DWORD PTR ds:0x640250fc
640133e1:	mov    eax,DWORD PTR [ebp+0xc]
640133e4:	cmp    eax,0x2
640133e7:	je     0x640133ef
640133e9:	or     edi,0x8000
640133ef:	mov    ecx,DWORD PTR [ebp-0x4]
640133f2:	mov    ds:0x6402e8d4,eax
640133f7:	mov    eax,DWORD PTR [ebp+0x10]
640133fa:	mov    edx,eax
640133fc:	shl    edx,0x8
640133ff:	add    edx,ecx
64013401:	push   0x1
64013403:	mov    DWORD PTR ds:0x6402e8dc,edx
64013409:	mov    ds:0x6402e8e0,eax
6401340e:	mov    DWORD PTR ds:0x6402e8e4,ecx
64013414:	mov    DWORD PTR ds:0x6402e8d8,edi
6401341a:	call   0x64018c4f
6401341f:	test   eax,eax
64013421:	pop    ecx
64013422:	je     0x6401339b
64013428:	call   0x64014e3d
6401342d:	test   eax,eax
6401342f:	jne    0x6401343b
64013431:	call   0x64018ca9
64013436:	jmp    0x6401339b
6401343b:	call   0x64018bac
64013440:	call   DWORD PTR ds:0x64025124
64013446:	mov    ds:0x64032640,eax
6401344b:	call   0x64018a77
64013450:	mov    ds:0x6402e574,eax
64013455:	call   0x640184ab
6401345a:	test   eax,eax
6401345c:	jge    0x64013465
6401345e:	call   0x64014b28
64013463:	jmp    0x64013431
64013465:	call   0x640189be
6401346a:	test   eax,eax
6401346c:	jl     0x6401348e
6401346e:	call   0x6401874b
64013473:	test   eax,eax
64013475:	jl     0x6401348e
64013477:	push   0x0
64013479:	call   0x640160f2
6401347e:	test   eax,eax
64013480:	pop    ecx
64013481:	jne    0x6401348e
64013483:	inc    DWORD PTR ds:0x6402e570
64013489:	jmp    0x6401353a
6401348e:	call   0x640186ff
64013493:	jmp    0x6401345e
64013495:	xor    edi,edi
64013497:	cmp    eax,edi
64013499:	jne    0x640134d0
6401349b:	cmp    DWORD PTR ds:0x6402e570,edi
640134a1:	jle    0x6401339b
640134a7:	dec    DWORD PTR ds:0x6402e570
640134ad:	cmp    DWORD PTR ds:0x6402e910,edi
640134b3:	jne    0x640134ba
640134b5:	call   0x64016277
640134ba:	cmp    DWORD PTR [ebp+0x10],edi
640134bd:	jne    0x6401353a
640134bf:	call   0x640186ff
640134c4:	call   0x64014b28
640134c9:	call   0x64018ca9
640134ce:	jmp    0x6401353a
640134d0:	cmp    eax,0x2
640134d3:	jne    0x6401352e
640134d5:	call   0x64014af6
640134da:	push   0x214
640134df:	push   0x1
640134e1:	call   0x64015ea0
640134e6:	mov    esi,eax
640134e8:	cmp    esi,edi
640134ea:	pop    ecx
640134eb:	pop    ecx
640134ec:	je     0x6401339b
640134f2:	push   esi
640134f3:	push   DWORD PTR ds:0x6402d230
640134f9:	push   DWORD PTR ds:0x6402e594
640134ff:	call   0x64014a7f
64013504:	pop    ecx
64013505:	call   eax
64013507:	test   eax,eax
64013509:	je     0x64013522
6401350b:	push   edi
6401350c:	push   esi
6401350d:	call   0x64014b65
64013512:	pop    ecx
64013513:	pop    ecx
64013514:	call   DWORD PTR ds:0x64025120
6401351a:	or     DWORD PTR [esi+0x4],0xffffffff
6401351e:	mov    DWORD PTR [esi],eax
64013520:	jmp    0x6401353a
64013522:	push   esi
64013523:	call   0x64013a26
64013528:	pop    ecx
64013529:	jmp    0x6401339b
6401352e:	cmp    eax,0x3
64013531:	jne    0x6401353a
64013533:	push   edi
64013534:	call   0x64014dd4
64013539:	pop    ecx
6401353a:	xor    eax,eax
6401353c:	inc    eax
6401353d:	pop    edi
6401353e:	pop    esi
6401353f:	pop    ebx
64013540:	leave  
64013541:	ret    0xc
64013544:	push   0xc
64013546:	push   0x6402a5d0
6401354b:	call   0x64014150
64013550:	mov    edi,ecx
64013552:	mov    esi,edx
64013554:	mov    ebx,DWORD PTR [ebp+0x8]
64013557:	xor    eax,eax
64013559:	inc    eax
6401355a:	mov    DWORD PTR [ebp-0x1c],eax
6401355d:	test   esi,esi
6401355f:	jne    0x6401356d
64013561:	cmp    DWORD PTR ds:0x6402e570,edx
64013567:	je     0x64013632
6401356d:	and    DWORD PTR [ebp-0x4],0x0
64013571:	cmp    esi,eax
64013573:	je     0x6401357a
64013575:	cmp    esi,0x2
64013578:	jne    0x640135a8
6401357a:	mov    eax,ds:0x64025d18
6401357f:	test   eax,eax
64013581:	je     0x6401358b
64013583:	push   edi
64013584:	push   esi
64013585:	push   ebx
64013586:	call   eax
64013588:	mov    DWORD PTR [ebp-0x1c],eax
6401358b:	cmp    DWORD PTR [ebp-0x1c],0x0
6401358f:	je     0x6401362b
64013595:	push   edi
64013596:	push   esi
64013597:	push   ebx
64013598:	call   0x6401336b
6401359d:	mov    DWORD PTR [ebp-0x1c],eax
640135a0:	test   eax,eax
640135a2:	je     0x6401362b
640135a8:	push   edi
640135a9:	push   esi
640135aa:	push   ebx
640135ab:	call   0x6400f870
640135b0:	mov    DWORD PTR [ebp-0x1c],eax
640135b3:	cmp    esi,0x1
640135b6:	jne    0x640135dc
640135b8:	test   eax,eax
640135ba:	jne    0x640135dc
640135bc:	push   edi
640135bd:	push   eax
640135be:	push   ebx
640135bf:	call   0x6400f870
640135c4:	push   edi
640135c5:	push   0x0
640135c7:	push   ebx
640135c8:	call   0x6401336b
640135cd:	mov    eax,ds:0x64025d18
640135d2:	test   eax,eax
640135d4:	je     0x640135dc
640135d6:	push   edi
640135d7:	push   0x0
640135d9:	push   ebx
640135da:	call   eax
640135dc:	test   esi,esi
640135de:	je     0x640135e5
640135e0:	cmp    esi,0x3
640135e3:	jne    0x6401360b
640135e5:	push   edi
640135e6:	push   esi
640135e7:	push   ebx
640135e8:	call   0x6401336b
640135ed:	test   eax,eax
640135ef:	jne    0x640135f4
640135f1:	and    DWORD PTR [ebp-0x1c],eax
640135f4:	cmp    DWORD PTR [ebp-0x1c],0x0
640135f8:	je     0x6401360b
640135fa:	mov    eax,ds:0x64025d18
640135ff:	test   eax,eax
64013601:	je     0x6401360b
64013603:	push   edi
64013604:	push   esi
64013605:	push   ebx
64013606:	call   eax
64013608:	mov    DWORD PTR [ebp-0x1c],eax
6401360b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013612:	mov    eax,DWORD PTR [ebp-0x1c]
64013615:	jmp    0x64013634
64013617:	mov    eax,DWORD PTR [ebp-0x14]
6401361a:	mov    ecx,DWORD PTR [eax]
6401361c:	mov    ecx,DWORD PTR [ecx]
6401361e:	push   eax
6401361f:	push   ecx
64013620:	call   0x64018e7b
64013625:	pop    ecx
64013626:	pop    ecx
64013627:	ret    
64013628:	mov    esp,DWORD PTR [ebp-0x18]
6401362b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013632:	xor    eax,eax
64013634:	call   0x64014195
64013639:	ret    
6401363a:	cmp    DWORD PTR [esp+0x8],0x1
6401363f:	jne    0x64013646
64013641:	call   0x64018e96
64013646:	push   DWORD PTR [esp+0x4]
6401364a:	mov    ecx,DWORD PTR [esp+0x10]
6401364e:	mov    edx,DWORD PTR [esp+0xc]
64013652:	call   0x64013544
64013657:	pop    ecx
64013658:	ret    0xc
6401365b:	push   ebp
6401365c:	mov    ebp,esp
6401365e:	sub    esp,0x20
64013661:	push   ebx
64013662:	xor    ebx,ebx
64013664:	cmp    DWORD PTR [ebp+0xc],ebx
64013667:	jne    0x64013686
64013669:	call   0x64014950
6401366e:	push   ebx
6401366f:	push   ebx
64013670:	push   ebx
64013671:	push   ebx
64013672:	push   ebx
64013673:	mov    DWORD PTR [eax],0x16
64013679:	call   0x640126c4
6401367e:	add    esp,0x14
64013681:	or     eax,0xffffffff
64013684:	jmp    0x640136d3
64013686:	mov    eax,DWORD PTR [ebp+0x8]
64013689:	cmp    eax,ebx
6401368b:	je     0x64013669
6401368d:	push   esi
6401368e:	mov    DWORD PTR [ebp-0x18],eax
64013691:	mov    DWORD PTR [ebp-0x20],eax
64013694:	lea    eax,[ebp+0x10]
64013697:	push   eax
64013698:	push   ebx
64013699:	push   DWORD PTR [ebp+0xc]
6401369c:	lea    eax,[ebp-0x20]
6401369f:	push   eax
640136a0:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
640136a7:	mov    DWORD PTR [ebp-0x14],0x42
640136ae:	call   0x64018fcb
640136b3:	add    esp,0x10
640136b6:	dec    DWORD PTR [ebp-0x1c]
640136b9:	mov    esi,eax
640136bb:	js     0x640136c4
640136bd:	mov    eax,DWORD PTR [ebp-0x20]
640136c0:	mov    BYTE PTR [eax],bl
640136c2:	jmp    0x640136d0
640136c4:	lea    eax,[ebp-0x20]
640136c7:	push   eax
640136c8:	push   ebx
640136c9:	call   0x64016c95
640136ce:	pop    ecx
640136cf:	pop    ecx
640136d0:	mov    eax,esi
640136d2:	pop    esi
640136d3:	pop    ebx
640136d4:	leave  
640136d5:	ret    
640136d6:	lea    eax,[esp+0x10]
640136da:	push   eax
640136db:	push   0x0
640136dd:	push   DWORD PTR [esp+0x14]
640136e1:	push   DWORD PTR [esp+0x14]
640136e5:	push   DWORD PTR [esp+0x14]
640136e9:	call   0x64019a29
640136ee:	add    esp,0x14
640136f1:	ret    
640136f2:	cmp    DWORD PTR [esp+0x8],0x0
640136f7:	je     0x640136ff
640136f9:	mov    BYTE PTR [ecx],0x2d
640136fc:	inc    ecx
640136fd:	neg    eax
640136ff:	push   esi
64013700:	mov    esi,ecx
64013702:	xor    edx,edx
64013704:	div    DWORD PTR [esp+0x8]
64013708:	cmp    edx,0x9
6401370b:	jbe    0x64013712
6401370d:	add    dl,0x57
64013710:	jmp    0x64013715
64013712:	add    dl,0x30
64013715:	mov    BYTE PTR [ecx],dl
64013717:	inc    ecx
64013718:	test   eax,eax
6401371a:	ja     0x64013702
6401371c:	mov    BYTE PTR [ecx],0x0
6401371f:	dec    ecx
64013720:	mov    dl,BYTE PTR [esi]
64013722:	mov    al,BYTE PTR [ecx]
64013724:	mov    BYTE PTR [ecx],dl
64013726:	dec    ecx
64013727:	mov    BYTE PTR [esi],al
64013729:	inc    esi
6401372a:	cmp    esi,ecx
6401372c:	jb     0x64013720
6401372e:	pop    esi
6401372f:	ret    0x8
64013732:	push   ebp
64013733:	mov    ebp,esp
64013735:	xor    eax,eax
64013737:	cmp    DWORD PTR [ebp+0x10],0xa
6401373b:	jne    0x64013743
6401373d:	cmp    DWORD PTR [ebp+0x8],eax
64013740:	jge    0x64013743
64013742:	inc    eax
64013743:	mov    ecx,DWORD PTR [ebp+0xc]
64013746:	push   eax
64013747:	push   DWORD PTR [ebp+0x10]
6401374a:	mov    eax,DWORD PTR [ebp+0x8]
6401374d:	call   0x640136f2
64013752:	mov    eax,DWORD PTR [ebp+0xc]
64013755:	pop    ebp
64013756:	ret    
64013757:	mov    eax,DWORD PTR [esp+0x4]
6401375b:	mov    dx,WORD PTR [esp+0x8]
64013760:	jmp    0x64013769
64013762:	cmp    cx,dx
64013765:	je     0x64013778
64013767:	inc    eax
64013768:	inc    eax
64013769:	movzx  ecx,WORD PTR [eax]
6401376c:	test   cx,cx
6401376f:	jne    0x64013762
64013771:	cmp    WORD PTR [eax],dx
64013774:	je     0x64013778
64013776:	xor    eax,eax
64013778:	ret    
64013779:	push   ebp
6401377a:	mov    ebp,esp
6401377c:	sub    esp,0x18
6401377f:	push   ebx
64013780:	push   esi
64013781:	push   DWORD PTR [ebp+0xc]
64013784:	lea    ecx,[ebp-0x18]
64013787:	call   0x64012d2f
6401378c:	mov    ebx,DWORD PTR [ebp+0x8]
6401378f:	mov    esi,0x100
64013794:	cmp    ebx,esi
64013796:	jae    0x640137ec
64013798:	mov    ecx,DWORD PTR [ebp-0x18]
6401379b:	cmp    DWORD PTR [ecx+0xac],0x1
640137a2:	jle    0x640137b8
640137a4:	lea    eax,[ebp-0x18]
640137a7:	push   eax
640137a8:	push   0x1
640137aa:	push   ebx
640137ab:	call   0x64019f6e
640137b0:	mov    ecx,DWORD PTR [ebp-0x18]
640137b3:	add    esp,0xc
640137b6:	jmp    0x640137c5
640137b8:	mov    eax,DWORD PTR [ecx+0xc8]
640137be:	movzx  eax,BYTE PTR [eax+ebx*2]
640137c2:	and    eax,0x1
640137c5:	test   eax,eax
640137c7:	je     0x640137d8
640137c9:	mov    eax,DWORD PTR [ecx+0xcc]
640137cf:	movzx  eax,BYTE PTR [eax+ebx*1]
640137d3:	jmp    0x6401387f
640137d8:	cmp    BYTE PTR [ebp-0xc],0x0
640137dc:	je     0x640137e5
640137de:	mov    eax,DWORD PTR [ebp-0x10]
640137e1:	and    DWORD PTR [eax+0x70],0xfffffffd
640137e5:	mov    eax,ebx
640137e7:	jmp    0x6401388c
640137ec:	mov    eax,DWORD PTR [ebp-0x18]
640137ef:	cmp    DWORD PTR [eax+0xac],0x1
640137f6:	jle    0x64013829
640137f8:	mov    DWORD PTR [ebp+0x8],ebx
640137fb:	sar    DWORD PTR [ebp+0x8],0x8
640137ff:	lea    eax,[ebp-0x18]
64013802:	push   eax
64013803:	mov    eax,DWORD PTR [ebp+0x8]
64013806:	and    eax,0xff
6401380b:	push   eax
6401380c:	call   0x64019f2a
64013811:	test   eax,eax
64013813:	pop    ecx
64013814:	pop    ecx
64013815:	je     0x64013829
64013817:	mov    al,BYTE PTR [ebp+0x8]
6401381a:	push   0x2
6401381c:	mov    BYTE PTR [ebp-0x4],al
6401381f:	mov    BYTE PTR [ebp-0x3],bl
64013822:	mov    BYTE PTR [ebp-0x2],0x0
64013826:	pop    ecx
64013827:	jmp    0x6401383e
64013829:	call   0x64014950
6401382e:	mov    DWORD PTR [eax],0x2a
64013834:	xor    ecx,ecx
64013836:	mov    BYTE PTR [ebp-0x4],bl
64013839:	mov    BYTE PTR [ebp-0x3],0x0
6401383d:	inc    ecx
6401383e:	mov    eax,DWORD PTR [ebp-0x18]
64013841:	push   0x1
64013843:	push   DWORD PTR [eax+0x4]
64013846:	lea    edx,[ebp-0x8]
64013849:	push   0x3
6401384b:	push   edx
6401384c:	push   ecx
6401384d:	lea    ecx,[ebp-0x4]
64013850:	push   ecx
64013851:	push   esi
64013852:	push   DWORD PTR [eax+0x14]
64013855:	lea    eax,[ebp-0x18]
64013858:	push   eax
64013859:	call   0x64019ee7
6401385e:	add    esp,0x24
64013861:	test   eax,eax
64013863:	je     0x640137d8
64013869:	cmp    eax,0x1
6401386c:	jne    0x64013874
6401386e:	movzx  eax,BYTE PTR [ebp-0x8]
64013872:	jmp    0x6401387f
64013874:	movzx  ecx,BYTE PTR [ebp-0x7]
64013878:	xor    eax,eax
6401387a:	mov    ah,BYTE PTR [ebp-0x8]
6401387d:	or     eax,ecx
6401387f:	cmp    BYTE PTR [ebp-0xc],0x0
64013883:	je     0x6401388c
64013885:	mov    ecx,DWORD PTR [ebp-0x10]
64013888:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401388c:	pop    esi
6401388d:	pop    ebx
6401388e:	leave  
6401388f:	ret    
64013890:	cmp    DWORD PTR ds:0x6402e934,0x0
64013897:	jne    0x640138a9
64013899:	mov    eax,DWORD PTR [esp+0x4]
6401389d:	lea    ecx,[eax-0x41]
640138a0:	cmp    ecx,0x19
640138a3:	ja     0x640138b6
640138a5:	add    eax,0x20
640138a8:	ret    
640138a9:	push   0x0
640138ab:	push   DWORD PTR [esp+0x8]
640138af:	call   0x64013779
640138b4:	pop    ecx
640138b5:	pop    ecx
640138b6:	ret    
640138b7:	push   ebp
640138b8:	mov    ebp,esp
640138ba:	sub    esp,0x10
640138bd:	push   DWORD PTR [ebp+0xc]
640138c0:	lea    ecx,[ebp-0x10]
640138c3:	call   0x64012d2f
640138c8:	mov    eax,DWORD PTR [ebp-0x10]
640138cb:	cmp    DWORD PTR [eax+0xac],0x1
640138d2:	jle    0x640138e7
640138d4:	lea    eax,[ebp-0x10]
640138d7:	push   eax
640138d8:	push   0x4
640138da:	push   DWORD PTR [ebp+0x8]
640138dd:	call   0x64019f6e
640138e2:	add    esp,0xc
640138e5:	jmp    0x640138f7
640138e7:	mov    eax,DWORD PTR [eax+0xc8]
640138ed:	mov    ecx,DWORD PTR [ebp+0x8]
640138f0:	movzx  eax,BYTE PTR [eax+ecx*2]
640138f4:	and    eax,0x4
640138f7:	cmp    BYTE PTR [ebp-0x4],0x0
640138fb:	je     0x64013904
640138fd:	mov    ecx,DWORD PTR [ebp-0x8]
64013900:	and    DWORD PTR [ecx+0x70],0xfffffffd
64013904:	leave  
64013905:	ret    
64013906:	cmp    DWORD PTR ds:0x6402e934,0x0
6401390d:	jne    0x64013921
6401390f:	mov    eax,DWORD PTR [esp+0x4]
64013913:	mov    ecx,DWORD PTR ds:0x6402d860
64013919:	movzx  eax,BYTE PTR [ecx+eax*2]
6401391d:	and    eax,0x4
64013920:	ret    
64013921:	push   0x0
64013923:	push   DWORD PTR [esp+0x8]
64013927:	call   0x640138b7
6401392c:	pop    ecx
6401392d:	pop    ecx
6401392e:	ret    
6401392f:	push   ebp
64013930:	mov    ebp,esp
64013932:	sub    esp,0x10
64013935:	push   DWORD PTR [ebp+0xc]
64013938:	lea    ecx,[ebp-0x10]
6401393b:	call   0x64012d2f
64013940:	mov    eax,DWORD PTR [ebp-0x10]
64013943:	cmp    DWORD PTR [eax+0xac],0x1
6401394a:	jle    0x6401395f
6401394c:	lea    eax,[ebp-0x10]
6401394f:	push   eax
64013950:	push   0x8
64013952:	push   DWORD PTR [ebp+0x8]
64013955:	call   0x64019f6e
6401395a:	add    esp,0xc
6401395d:	jmp    0x6401396f
6401395f:	mov    eax,DWORD PTR [eax+0xc8]
64013965:	mov    ecx,DWORD PTR [ebp+0x8]
64013968:	movzx  eax,BYTE PTR [eax+ecx*2]
6401396c:	and    eax,0x8
6401396f:	cmp    BYTE PTR [ebp-0x4],0x0
64013973:	je     0x6401397c
64013975:	mov    ecx,DWORD PTR [ebp-0x8]
64013978:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401397c:	leave  
6401397d:	ret    
6401397e:	cmp    DWORD PTR ds:0x6402e934,0x0
64013985:	jne    0x64013999
64013987:	mov    eax,DWORD PTR [esp+0x4]
6401398b:	mov    ecx,DWORD PTR ds:0x6402d860
64013991:	movzx  eax,BYTE PTR [ecx+eax*2]
64013995:	and    eax,0x8
64013998:	ret    
64013999:	push   0x0
6401399b:	push   DWORD PTR [esp+0x8]
6401399f:	call   0x6401392f
640139a4:	pop    ecx
640139a5:	pop    ecx
640139a6:	ret    
640139a7:	push   ebp
640139a8:	mov    ebp,esp
640139aa:	sub    esp,0x10
640139ad:	push   DWORD PTR [ebp+0xc]
640139b0:	lea    ecx,[ebp-0x10]
640139b3:	call   0x64012d2f
640139b8:	mov    eax,DWORD PTR [ebp-0x10]
640139bb:	cmp    DWORD PTR [eax+0xac],0x1
640139c2:	jle    0x640139da
640139c4:	lea    eax,[ebp-0x10]
640139c7:	push   eax
640139c8:	push   0x157
640139cd:	push   DWORD PTR [ebp+0x8]
640139d0:	call   0x64019f6e
640139d5:	add    esp,0xc
640139d8:	jmp    0x640139ec
640139da:	mov    eax,DWORD PTR [eax+0xc8]
640139e0:	mov    ecx,DWORD PTR [ebp+0x8]
640139e3:	movzx  eax,WORD PTR [eax+ecx*2]
640139e7:	and    eax,0x157
640139ec:	cmp    BYTE PTR [ebp-0x4],0x0
640139f0:	je     0x640139f9
640139f2:	mov    ecx,DWORD PTR [ebp-0x8]
640139f5:	and    DWORD PTR [ecx+0x70],0xfffffffd
640139f9:	leave  
640139fa:	ret    
640139fb:	cmp    DWORD PTR ds:0x6402e934,0x0
64013a02:	jne    0x64013a18
64013a04:	mov    eax,DWORD PTR [esp+0x4]
64013a08:	mov    ecx,DWORD PTR ds:0x6402d860
64013a0e:	movzx  eax,WORD PTR [ecx+eax*2]
64013a12:	and    eax,0x157
64013a17:	ret    
64013a18:	push   0x0
64013a1a:	push   DWORD PTR [esp+0x8]
64013a1e:	call   0x640139a7
64013a23:	pop    ecx
64013a24:	pop    ecx
64013a25:	ret    
64013a26:	push   0xc
64013a28:	push   0x6402a5f0
64013a2d:	call   0x64014150
64013a32:	mov    esi,DWORD PTR [ebp+0x8]
64013a35:	test   esi,esi
64013a37:	je     0x64013aae
64013a39:	cmp    DWORD PTR ds:0x640324fc,0x3
64013a40:	jne    0x64013a85
64013a42:	push   0x4
64013a44:	call   0x6401a19a
64013a49:	pop    ecx
64013a4a:	and    DWORD PTR [ebp-0x4],0x0
64013a4e:	push   esi
64013a4f:	call   0x6401a213
64013a54:	pop    ecx
64013a55:	mov    DWORD PTR [ebp-0x1c],eax
64013a58:	test   eax,eax
64013a5a:	je     0x64013a65
64013a5c:	push   esi
64013a5d:	push   eax
64013a5e:	call   0x6401a23e
64013a63:	pop    ecx
64013a64:	pop    ecx
64013a65:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013a6c:	call   0x64013a7c
64013a71:	cmp    DWORD PTR [ebp-0x1c],0x0
64013a75:	jne    0x64013aae
64013a77:	push   DWORD PTR [ebp+0x8]
64013a7a:	jmp    0x64013a86
64013a7c:	push   0x4
64013a7e:	call   0x6401a0c2
64013a83:	pop    ecx
64013a84:	ret    
64013a85:	push   esi
64013a86:	push   0x0
64013a88:	push   DWORD PTR ds:0x6402ea6c
64013a8e:	call   DWORD PTR ds:0x640250fc
64013a94:	test   eax,eax
64013a96:	jne    0x64013aae
64013a98:	call   0x64014950
64013a9d:	mov    esi,eax
64013a9f:	call   DWORD PTR ds:0x64025044
64013aa5:	push   eax
64013aa6:	call   0x64014915
64013aab:	mov    DWORD PTR [esi],eax
64013aad:	pop    ecx
64013aae:	call   0x64014195
64013ab3:	ret    
64013ab4:	push   0xc
64013ab6:	push   0x6402a610
64013abb:	call   0x64014150
64013ac0:	and    DWORD PTR [ebp-0x1c],0x0
64013ac4:	mov    esi,DWORD PTR [ebp+0x8]
64013ac7:	cmp    esi,DWORD PTR ds:0x640324ec
64013acd:	ja     0x64013af1
64013acf:	push   0x4
64013ad1:	call   0x6401a19a
64013ad6:	pop    ecx
64013ad7:	and    DWORD PTR [ebp-0x4],0x0
64013adb:	push   esi
64013adc:	call   0x6401a9e7
64013ae1:	pop    ecx
64013ae2:	mov    DWORD PTR [ebp-0x1c],eax
64013ae5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013aec:	call   0x64013afa
64013af1:	mov    eax,DWORD PTR [ebp-0x1c]
64013af4:	call   0x64014195
64013af9:	ret    
64013afa:	push   0x4
64013afc:	call   0x6401a0c2
64013b01:	pop    ecx
64013b02:	ret    
64013b03:	push   ebp
64013b04:	mov    ebp,DWORD PTR [esp+0x8]
64013b08:	cmp    ebp,0xffffffe0
64013b0b:	ja     0x64013bb0
64013b11:	push   ebx
64013b12:	mov    ebx,DWORD PTR ds:0x640250f8
64013b18:	push   esi
64013b19:	push   edi
64013b1a:	xor    esi,esi
64013b1c:	cmp    DWORD PTR ds:0x6402ea6c,esi
64013b22:	mov    edi,ebp
64013b24:	jne    0x64013b3e
64013b26:	call   0x6401ae6a
64013b2b:	push   0x1e
64013b2d:	call   0x6401acca
64013b32:	push   0xff
64013b37:	call   0x64016020
64013b3c:	pop    ecx
64013b3d:	pop    ecx
64013b3e:	mov    eax,ds:0x640324fc
64013b43:	cmp    eax,0x1
64013b46:	jne    0x64013b56
64013b48:	cmp    ebp,esi
64013b4a:	je     0x64013b50
64013b4c:	mov    eax,ebp
64013b4e:	jmp    0x64013b53
64013b50:	xor    eax,eax
64013b52:	inc    eax
64013b53:	push   eax
64013b54:	jmp    0x64013b74
64013b56:	cmp    eax,0x3
64013b59:	jne    0x64013b66
64013b5b:	push   ebp
64013b5c:	call   0x64013ab4
64013b61:	cmp    eax,esi
64013b63:	pop    ecx
64013b64:	jne    0x64013b7d
64013b66:	cmp    ebp,esi
64013b68:	jne    0x64013b6d
64013b6a:	xor    edi,edi
64013b6c:	inc    edi
64013b6d:	add    edi,0xf
64013b70:	and    edi,0xfffffff0
64013b73:	push   edi
64013b74:	push   esi
64013b75:	push   DWORD PTR ds:0x6402ea6c
64013b7b:	call   ebx
64013b7d:	mov    esi,eax
64013b7f:	test   esi,esi
64013b81:	jne    0x64013ba9
64013b83:	cmp    DWORD PTR ds:0x6402eee4,eax
64013b89:	push   0xc
64013b8b:	pop    edi
64013b8c:	je     0x64013b9b
64013b8e:	push   ebp
64013b8f:	call   0x64014fcb
64013b94:	test   eax,eax
64013b96:	pop    ecx
64013b97:	jne    0x64013b1a
64013b99:	jmp    0x64013ba2
64013b9b:	call   0x64014950
64013ba0:	mov    DWORD PTR [eax],edi
64013ba2:	call   0x64014950
64013ba7:	mov    DWORD PTR [eax],edi
64013ba9:	pop    edi
64013baa:	mov    eax,esi
64013bac:	pop    esi
64013bad:	pop    ebx
64013bae:	pop    ebp
64013baf:	ret    
64013bb0:	push   ebp
64013bb1:	call   0x64014fcb
64013bb6:	pop    ecx
64013bb7:	call   0x64014950
64013bbc:	mov    DWORD PTR [eax],0xc
64013bc2:	xor    eax,eax
64013bc4:	pop    ebp
64013bc5:	ret    
64013bc6:	int3   
64013bc7:	int3   
64013bc8:	int3   
64013bc9:	int3   
64013bca:	int3   
64013bcb:	int3   
64013bcc:	int3   
64013bcd:	int3   
64013bce:	int3   
64013bcf:	int3   
64013bd0:	push   ebp
64013bd1:	mov    ebp,esp
64013bd3:	push   edi
64013bd4:	push   esi
64013bd5:	mov    esi,DWORD PTR [ebp+0xc]
64013bd8:	mov    ecx,DWORD PTR [ebp+0x10]
64013bdb:	mov    edi,DWORD PTR [ebp+0x8]
64013bde:	mov    eax,ecx
64013be0:	mov    edx,ecx
64013be2:	add    eax,esi
64013be4:	cmp    edi,esi
64013be6:	jbe    0x64013bf0
64013be8:	cmp    edi,eax
64013bea:	jb     0x64013d94
64013bf0:	cmp    ecx,0x100
64013bf6:	jb     0x64013c17
64013bf8:	cmp    DWORD PTR ds:0x64032624,0x0
64013bff:	je     0x64013c17
64013c01:	push   edi
64013c02:	push   esi
64013c03:	and    edi,0xf
64013c06:	and    esi,0xf
64013c09:	cmp    edi,esi
64013c0b:	pop    esi
64013c0c:	pop    edi
64013c0d:	jne    0x64013c17
64013c0f:	pop    esi
64013c10:	pop    edi
64013c11:	pop    ebp
64013c12:	jmp    0x6401af2a
64013c17:	test   edi,0x3
64013c1d:	jne    0x64013c34
64013c1f:	shr    ecx,0x2
64013c22:	and    edx,0x3
64013c25:	cmp    ecx,0x8
64013c28:	jb     0x64013c54
64013c2a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013c2c:	jmp    DWORD PTR [edx*4+0x64013d44]
64013c33:	nop
64013c34:	mov    eax,edi
64013c36:	mov    edx,0x3
64013c3b:	sub    ecx,0x4
64013c3e:	jb     0x64013c4c
64013c40:	and    eax,0x3
64013c43:	add    ecx,eax
64013c45:	jmp    DWORD PTR [eax*4+0x64013c58]
64013c4c:	jmp    DWORD PTR [ecx*4+0x64013d54]
64013c53:	nop
64013c54:	jmp    DWORD PTR [ecx*4+0x64013cd8]
64013c5b:	nop
64013c5c:	push   0x9464013c
64013c61:	cmp    al,0x1
64013c63:	fs mov eax,0x2364013c
64013c69:	ror    DWORD PTR [edx-0x75f877fa],1
64013c6f:	inc    esi
64013c70:	add    DWORD PTR [eax+0x468a0147],ecx
64013c76:	add    al,cl
64013c78:	jmp    0x6648c47f
64013c7d:	add    esi,0x3
64013c80:	add    edi,0x3
64013c83:	cmp    ecx,0x8
64013c86:	jb     0x64013c54
64013c88:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013c8a:	jmp    DWORD PTR [edx*4+0x64013d44]
64013c91:	lea    ecx,[ecx+0x0]
64013c94:	and    edx,ecx
64013c96:	mov    al,BYTE PTR [esi]
64013c98:	mov    BYTE PTR [edi],al
64013c9a:	mov    al,BYTE PTR [esi+0x1]
64013c9d:	shr    ecx,0x2
64013ca0:	mov    BYTE PTR [edi+0x1],al
64013ca3:	add    esi,0x2
64013ca6:	add    edi,0x2
64013ca9:	cmp    ecx,0x8
64013cac:	jb     0x64013c54
64013cae:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013cb0:	jmp    DWORD PTR [edx*4+0x64013d44]
64013cb7:	nop
64013cb8:	and    edx,ecx
64013cba:	mov    al,BYTE PTR [esi]
64013cbc:	mov    BYTE PTR [edi],al
64013cbe:	add    esi,0x1
64013cc1:	shr    ecx,0x2
64013cc4:	add    edi,0x1
64013cc7:	cmp    ecx,0x8
64013cca:	jb     0x64013c54
64013ccc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013cce:	jmp    DWORD PTR [edx*4+0x64013d44]
64013cd5:	lea    ecx,[ecx+0x0]
64013cd8:	cmp    edi,DWORD PTR ds:0x3d286401
64013cde:	add    DWORD PTR [eax+eiz*1+0x3d],esp
64013ce2:	add    DWORD PTR [eax+ebx*1+0x3d],esp
64013ce6:	add    DWORD PTR [eax+edx*1+0x3d],esp
64013cea:	add    DWORD PTR [eax+ecx*1+0x3d],esp
64013cee:	add    DWORD PTR [eax+eax*1+0x3d],esp
64013cf2:	add    DWORD PTR [eax+edi*8+0x3c],esp
64013cf6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64013cfa:	mov    fs,esp
64013cfc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64013d00:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64013d04:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64013d08:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
64013d0c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64013d10:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64013d14:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64013d18:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
64013d1c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64013d20:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64013d24:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64013d28:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
64013d2c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64013d30:	lea    eax,[ecx*4+0x0]
64013d37:	add    esi,eax
64013d39:	add    edi,eax
64013d3b:	jmp    DWORD PTR [edx*4+0x64013d44]
64013d42:	mov    edi,edi
64013d44:	push   esp
64013d45:	cmp    eax,0x3d5c6401
64013d4a:	add    DWORD PTR [eax+ebp*2+0x3d],esp
64013d4e:	add    DWORD PTR [esp+edi*2+0x3d],esp
64013d52:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64013d56:	or     BYTE PTR [esi+0x5f],bl
64013d59:	leave  
64013d5a:	ret    
64013d5b:	nop
64013d5c:	mov    al,BYTE PTR [esi]
64013d5e:	mov    BYTE PTR [edi],al
64013d60:	mov    eax,DWORD PTR [ebp+0x8]
64013d63:	pop    esi
64013d64:	pop    edi
64013d65:	leave  
64013d66:	ret    
64013d67:	nop
64013d68:	mov    al,BYTE PTR [esi]
64013d6a:	mov    BYTE PTR [edi],al
64013d6c:	mov    al,BYTE PTR [esi+0x1]
64013d6f:	mov    BYTE PTR [edi+0x1],al
64013d72:	mov    eax,DWORD PTR [ebp+0x8]
64013d75:	pop    esi
64013d76:	pop    edi
64013d77:	leave  
64013d78:	ret    
64013d79:	lea    ecx,[ecx+0x0]
64013d7c:	mov    al,BYTE PTR [esi]
64013d7e:	mov    BYTE PTR [edi],al
64013d80:	mov    al,BYTE PTR [esi+0x1]
64013d83:	mov    BYTE PTR [edi+0x1],al
64013d86:	mov    al,BYTE PTR [esi+0x2]
64013d89:	mov    BYTE PTR [edi+0x2],al
64013d8c:	mov    eax,DWORD PTR [ebp+0x8]
64013d8f:	pop    esi
64013d90:	pop    edi
64013d91:	leave  
64013d92:	ret    
64013d93:	nop
64013d94:	lea    esi,[ecx+esi*1-0x4]
64013d98:	lea    edi,[ecx+edi*1-0x4]
64013d9c:	test   edi,0x3
64013da2:	jne    0x64013dc8
64013da4:	shr    ecx,0x2
64013da7:	and    edx,0x3
64013daa:	cmp    ecx,0x8
64013dad:	jb     0x64013dbc
64013daf:	std    
64013db0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013db2:	cld    
64013db3:	jmp    DWORD PTR [edx*4+0x64013ee0]
64013dba:	mov    edi,edi
64013dbc:	neg    ecx
64013dbe:	jmp    DWORD PTR [ecx*4+0x64013e90]
64013dc5:	lea    ecx,[ecx+0x0]
64013dc8:	mov    eax,edi
64013dca:	mov    edx,0x3
64013dcf:	cmp    ecx,0x4
64013dd2:	jb     0x64013de0
64013dd4:	and    eax,0x3
64013dd7:	sub    ecx,eax
64013dd9:	jmp    DWORD PTR [eax*4+0x64013de4]
64013de0:	jmp    DWORD PTR [ecx*4+0x64013ee0]
64013de7:	nop
64013de8:	hlt    
64013de9:	cmp    eax,0x3e186401
64013dee:	add    DWORD PTR [eax+eax*2+0x3e],esp
64013df2:	add    DWORD PTR [edx+ecx*4+0x46],esp
64013df6:	add    esp,DWORD PTR [ebx]
64013df8:	ror    DWORD PTR [eax-0x117cfcb9],1
64013dfe:	add    ecx,eax
64013e00:	jmp    0x65f0c107
64013e05:	cmp    ecx,0x8
64013e08:	jb     0x64013dbc
64013e0a:	std    
64013e0b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013e0d:	cld    
64013e0e:	jmp    DWORD PTR [edx*4+0x64013ee0]
64013e15:	lea    ecx,[ecx+0x0]
64013e18:	mov    al,BYTE PTR [esi+0x3]
64013e1b:	and    edx,ecx
64013e1d:	mov    BYTE PTR [edi+0x3],al
64013e20:	mov    al,BYTE PTR [esi+0x2]
64013e23:	shr    ecx,0x2
64013e26:	mov    BYTE PTR [edi+0x2],al
64013e29:	sub    esi,0x2
64013e2c:	sub    edi,0x2
64013e2f:	cmp    ecx,0x8
64013e32:	jb     0x64013dbc
64013e34:	std    
64013e35:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013e37:	cld    
64013e38:	jmp    DWORD PTR [edx*4+0x64013ee0]
64013e3f:	nop
64013e40:	mov    al,BYTE PTR [esi+0x3]
64013e43:	and    edx,ecx
64013e45:	mov    BYTE PTR [edi+0x3],al
64013e48:	mov    al,BYTE PTR [esi+0x2]
64013e4b:	mov    BYTE PTR [edi+0x2],al
64013e4e:	mov    al,BYTE PTR [esi+0x1]
64013e51:	shr    ecx,0x2
64013e54:	mov    BYTE PTR [edi+0x1],al
64013e57:	sub    esi,0x3
64013e5a:	sub    edi,0x3
64013e5d:	cmp    ecx,0x8
64013e60:	jb     0x64013dbc
64013e66:	std    
64013e67:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013e69:	cld    
64013e6a:	jmp    DWORD PTR [edx*4+0x64013ee0]
64013e71:	lea    ecx,[ecx+0x0]
64013e74:	xchg   esp,eax
64013e75:	add    DWORD PTR ds:[esp+ebx*4+0x3e],esp
64013e7a:	add    DWORD PTR [esp+eiz*4+0x3e],esp
64013e7e:	add    DWORD PTR [esp+ebp*4+0x3e],esp
64013e82:	add    DWORD PTR [esp+esi*4+0x3e],esp
64013e86:	add    DWORD PTR [esp+edi*4+0x3e],esp
64013e8a:	add    DWORD PTR [esp+eax*8+0x3e],esp
64013e8e:	add    DWORD PTR [edi+edx*8+0x3e],esp
64013e92:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64013e96:	mov    ds,WORD PTR [ecx+ecx*4]
64013e99:	inc    esp
64013e9a:	(bad)  
64013e9b:	sbb    al,0x8b
64013e9d:	inc    esp
64013e9e:	mov    ds,WORD PTR [eax]
64013ea0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64013ea4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64013ea8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
64013eac:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64013eb0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64013eb4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64013eb8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
64013ebc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64013ec0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64013ec4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64013ec8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
64013ecc:	lea    eax,[ecx*4+0x0]
64013ed3:	add    esi,eax
64013ed5:	add    edi,eax
64013ed7:	jmp    DWORD PTR [edx*4+0x64013ee0]
64013ede:	mov    edi,edi
64013ee0:	lock add DWORD PTR ds:[eax+edi*8+0x3e],esp
64013ee6:	add    DWORD PTR [eax+ecx*1+0x3f],esp
64013eea:	add    DWORD PTR [esp+ebx*1+0x3f],esp
64013eee:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64013ef2:	or     BYTE PTR [esi+0x5f],bl
64013ef5:	leave  
64013ef6:	ret    
64013ef7:	nop
64013ef8:	mov    al,BYTE PTR [esi+0x3]
64013efb:	mov    BYTE PTR [edi+0x3],al
64013efe:	mov    eax,DWORD PTR [ebp+0x8]
64013f01:	pop    esi
64013f02:	pop    edi
64013f03:	leave  
64013f04:	ret    
64013f05:	lea    ecx,[ecx+0x0]
64013f08:	mov    al,BYTE PTR [esi+0x3]
64013f0b:	mov    BYTE PTR [edi+0x3],al
64013f0e:	mov    al,BYTE PTR [esi+0x2]
64013f11:	mov    BYTE PTR [edi+0x2],al
64013f14:	mov    eax,DWORD PTR [ebp+0x8]
64013f17:	pop    esi
64013f18:	pop    edi
64013f19:	leave  
64013f1a:	ret    
64013f1b:	nop
64013f1c:	mov    al,BYTE PTR [esi+0x3]
64013f1f:	mov    BYTE PTR [edi+0x3],al
64013f22:	mov    al,BYTE PTR [esi+0x2]
64013f25:	mov    BYTE PTR [edi+0x2],al
64013f28:	mov    al,BYTE PTR [esi+0x1]
64013f2b:	mov    BYTE PTR [edi+0x1],al
64013f2e:	mov    eax,DWORD PTR [ebp+0x8]
64013f31:	pop    esi
64013f32:	pop    edi
64013f33:	leave  
64013f34:	ret    
64013f35:	push   0x10
64013f37:	push   0x6402a630
64013f3c:	call   0x64014150
64013f41:	mov    ebx,DWORD PTR [ebp+0x8]
64013f44:	test   ebx,ebx
64013f46:	jne    0x64013f56
64013f48:	push   DWORD PTR [ebp+0xc]
64013f4b:	call   0x64013b03
64013f50:	pop    ecx
64013f51:	jmp    0x64014122
64013f56:	mov    esi,DWORD PTR [ebp+0xc]
64013f59:	test   esi,esi
64013f5b:	jne    0x64013f69
64013f5d:	push   ebx
64013f5e:	call   0x64013a26
64013f63:	pop    ecx
64013f64:	jmp    0x64014120
64013f69:	cmp    DWORD PTR ds:0x640324fc,0x3
64013f70:	jne    0x64014109
64013f76:	xor    edi,edi
64013f78:	mov    DWORD PTR [ebp-0x1c],edi
64013f7b:	cmp    esi,0xffffffe0
64013f7e:	ja     0x6401410e
64013f84:	push   0x4
64013f86:	call   0x6401a19a
64013f8b:	pop    ecx
64013f8c:	mov    DWORD PTR [ebp-0x4],edi
64013f8f:	push   ebx
64013f90:	call   0x6401a213
64013f95:	pop    ecx
64013f96:	mov    DWORD PTR [ebp-0x20],eax
64013f99:	cmp    eax,edi
64013f9b:	je     0x6401403f
64013fa1:	cmp    esi,DWORD PTR ds:0x640324ec
64013fa7:	ja     0x64013ff2
64013fa9:	push   esi
64013faa:	push   ebx
64013fab:	push   eax
64013fac:	call   0x6401a708
64013fb1:	add    esp,0xc
64013fb4:	test   eax,eax
64013fb6:	je     0x64013fbd
64013fb8:	mov    DWORD PTR [ebp-0x1c],ebx
64013fbb:	jmp    0x64013ff2
64013fbd:	push   esi
64013fbe:	call   0x6401a9e7
64013fc3:	pop    ecx
64013fc4:	mov    DWORD PTR [ebp-0x1c],eax
64013fc7:	cmp    eax,edi
64013fc9:	je     0x64013ff2
64013fcb:	mov    eax,DWORD PTR [ebx-0x4]
64013fce:	dec    eax
64013fcf:	cmp    eax,esi
64013fd1:	jb     0x64013fd5
64013fd3:	mov    eax,esi
64013fd5:	push   eax
64013fd6:	push   ebx
64013fd7:	push   DWORD PTR [ebp-0x1c]
64013fda:	call   0x640145b0
64013fdf:	push   ebx
64013fe0:	call   0x6401a213
64013fe5:	mov    DWORD PTR [ebp-0x20],eax
64013fe8:	push   ebx
64013fe9:	push   eax
64013fea:	call   0x6401a23e
64013fef:	add    esp,0x18
64013ff2:	cmp    DWORD PTR [ebp-0x1c],edi
64013ff5:	jne    0x6401403f
64013ff7:	cmp    esi,edi
64013ff9:	jne    0x64014001
64013ffb:	xor    esi,esi
64013ffd:	inc    esi
64013ffe:	mov    DWORD PTR [ebp+0xc],esi
64014001:	add    esi,0xf
64014004:	and    esi,0xfffffff0
64014007:	mov    DWORD PTR [ebp+0xc],esi
6401400a:	push   esi
6401400b:	push   edi
6401400c:	push   DWORD PTR ds:0x6402ea6c
64014012:	call   DWORD PTR ds:0x640250f8
64014018:	mov    DWORD PTR [ebp-0x1c],eax
6401401b:	cmp    eax,edi
6401401d:	je     0x6401403f
6401401f:	mov    eax,DWORD PTR [ebx-0x4]
64014022:	dec    eax
64014023:	cmp    eax,esi
64014025:	jb     0x64014029
64014027:	mov    eax,esi
64014029:	push   eax
6401402a:	push   ebx
6401402b:	push   DWORD PTR [ebp-0x1c]
6401402e:	call   0x640145b0
64014033:	push   ebx
64014034:	push   DWORD PTR [ebp-0x20]
64014037:	call   0x6401a23e
6401403c:	add    esp,0x14
6401403f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014046:	call   0x64014079
6401404b:	cmp    DWORD PTR [ebp-0x20],0x0
6401404f:	jne    0x64014082
64014051:	test   esi,esi
64014053:	jne    0x64014056
64014055:	inc    esi
64014056:	add    esi,0xf
64014059:	and    esi,0xfffffff0
6401405c:	mov    DWORD PTR [ebp+0xc],esi
6401405f:	push   esi
64014060:	push   ebx
64014061:	push   0x0
64014063:	push   DWORD PTR ds:0x6402ea6c
64014069:	call   DWORD PTR ds:0x64025100
6401406f:	mov    edi,eax
64014071:	jmp    0x64014085
64014073:	mov    esi,DWORD PTR [ebp+0xc]
64014076:	mov    ebx,DWORD PTR [ebp+0x8]
64014079:	push   0x4
6401407b:	call   0x6401a0c2
64014080:	pop    ecx
64014081:	ret    
64014082:	mov    edi,DWORD PTR [ebp-0x1c]
64014085:	test   edi,edi
64014087:	jne    0x6401414c
6401408d:	cmp    DWORD PTR ds:0x6402eee4,edi
64014093:	je     0x640140c1
64014095:	push   esi
64014096:	call   0x64014fcb
6401409b:	pop    ecx
6401409c:	test   eax,eax
6401409e:	jne    0x64013f76
640140a4:	call   0x64014950
640140a9:	cmp    DWORD PTR [ebp-0x20],edi
640140ac:	jne    0x6401411a
640140ae:	mov    esi,eax
640140b0:	call   DWORD PTR ds:0x64025044
640140b6:	push   eax
640140b7:	call   0x64014915
640140bc:	pop    ecx
640140bd:	mov    DWORD PTR [esi],eax
640140bf:	jmp    0x64014120
640140c1:	test   edi,edi
640140c3:	jne    0x6401414c
640140c9:	call   0x64014950
640140ce:	cmp    DWORD PTR [ebp-0x20],edi
640140d1:	je     0x6401413b
640140d3:	mov    DWORD PTR [eax],0xc
640140d9:	jmp    0x6401414c
640140db:	test   esi,esi
640140dd:	jne    0x640140e0
640140df:	inc    esi
640140e0:	push   esi
640140e1:	push   ebx
640140e2:	push   0x0
640140e4:	push   DWORD PTR ds:0x6402ea6c
640140ea:	call   DWORD PTR ds:0x64025100
640140f0:	mov    edi,eax
640140f2:	test   edi,edi
640140f4:	jne    0x6401414c
640140f6:	cmp    DWORD PTR ds:0x6402eee4,eax
640140fc:	je     0x64014132
640140fe:	push   esi
640140ff:	call   0x64014fcb
64014104:	pop    ecx
64014105:	test   eax,eax
64014107:	je     0x64014128
64014109:	cmp    esi,0xffffffe0
6401410c:	jbe    0x640140db
6401410e:	push   esi
6401410f:	call   0x64014fcb
64014114:	pop    ecx
64014115:	call   0x64014950
6401411a:	mov    DWORD PTR [eax],0xc
64014120:	xor    eax,eax
64014122:	call   0x64014195
64014127:	ret    
64014128:	call   0x64014950
6401412d:	jmp    0x640140ae
64014132:	test   edi,edi
64014134:	jne    0x6401414c
64014136:	call   0x64014950
6401413b:	mov    esi,eax
6401413d:	call   DWORD PTR ds:0x64025044
64014143:	push   eax
64014144:	call   0x64014915
64014149:	mov    DWORD PTR [esi],eax
6401414b:	pop    ecx
6401414c:	mov    eax,edi
6401414e:	jmp    0x64014122
64014150:	push   0x640141b0
64014155:	push   DWORD PTR fs:0x0
6401415c:	mov    eax,DWORD PTR [esp+0x10]
64014160:	mov    DWORD PTR [esp+0x10],ebp
64014164:	lea    ebp,[esp+0x10]
64014168:	sub    esp,eax
6401416a:	push   ebx
6401416b:	push   esi
6401416c:	push   edi
6401416d:	mov    eax,ds:0x6402d09c
64014172:	xor    DWORD PTR [ebp-0x4],eax
64014175:	xor    eax,ebp
64014177:	push   eax
64014178:	mov    DWORD PTR [ebp-0x18],esp
6401417b:	push   DWORD PTR [ebp-0x8]
6401417e:	mov    eax,DWORD PTR [ebp-0x4]
64014181:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014188:	mov    DWORD PTR [ebp-0x8],eax
6401418b:	lea    eax,[ebp-0x10]
6401418e:	mov    fs:0x0,eax
64014194:	ret    
64014195:	mov    ecx,DWORD PTR [ebp-0x10]
64014198:	mov    DWORD PTR fs:0x0,ecx
6401419f:	pop    ecx
640141a0:	pop    edi
640141a1:	pop    edi
640141a2:	pop    esi
640141a3:	pop    ebx
640141a4:	mov    esp,ebp
640141a6:	pop    ebp
640141a7:	push   ecx
640141a8:	ret    
640141a9:	int3   
640141aa:	int3   
640141ab:	int3   
640141ac:	int3   
640141ad:	int3   
640141ae:	int3   
640141af:	int3   
640141b0:	sub    esp,0x14
640141b3:	push   ebx
640141b4:	mov    ebx,DWORD PTR [esp+0x20]
640141b8:	push   ebp
640141b9:	push   esi
640141ba:	mov    esi,DWORD PTR [ebx+0x8]
640141bd:	xor    esi,DWORD PTR ds:0x6402d09c
640141c3:	push   edi
640141c4:	mov    eax,DWORD PTR [esi]
640141c6:	cmp    eax,0xfffffffe
640141c9:	mov    BYTE PTR [esp+0x13],0x0
640141ce:	mov    DWORD PTR [esp+0x18],0x1
640141d6:	lea    edi,[ebx+0x10]
640141d9:	je     0x640141e8
640141db:	mov    ecx,DWORD PTR [esi+0x4]
640141de:	add    ecx,edi
640141e0:	xor    ecx,DWORD PTR [eax+edi*1]
640141e3:	call   0x64012b8c
640141e8:	mov    ecx,DWORD PTR [esi+0xc]
640141eb:	mov    eax,DWORD PTR [esi+0x8]
640141ee:	add    ecx,edi
640141f0:	xor    ecx,DWORD PTR [eax+edi*1]
640141f3:	call   0x64012b8c
640141f8:	mov    eax,DWORD PTR [esp+0x28]
640141fc:	test   BYTE PTR [eax+0x4],0x66
64014200:	jne    0x64014325
64014206:	mov    ebp,DWORD PTR [ebx+0xc]
64014209:	cmp    ebp,0xfffffffe
6401420c:	mov    ecx,DWORD PTR [esp+0x30]
64014210:	lea    edx,[esp+0x1c]
64014214:	mov    DWORD PTR [esp+0x1c],eax
64014218:	mov    DWORD PTR [esp+0x20],ecx
6401421c:	mov    DWORD PTR [ebx-0x4],edx
6401421f:	je     0x6401427f
64014221:	lea    eax,[ebp+ebp*2+0x0]
64014225:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
64014229:	test   ecx,ecx
6401422b:	lea    ebx,[esi+eax*4+0x10]
6401422f:	mov    eax,DWORD PTR [ebx]
64014231:	mov    DWORD PTR [esp+0x14],eax
64014235:	je     0x6401424d
64014237:	mov    edx,edi
64014239:	call   0x6401b102
6401423e:	test   eax,eax
64014240:	mov    BYTE PTR [esp+0x13],0x1
64014245:	jl     0x6401428b
64014247:	jg     0x64014295
64014249:	mov    eax,DWORD PTR [esp+0x14]
6401424d:	cmp    eax,0xfffffffe
64014250:	mov    ebp,eax
64014252:	jne    0x64014221
64014254:	cmp    BYTE PTR [esp+0x13],0x0
64014259:	je     0x6401427f
6401425b:	mov    eax,DWORD PTR [esi]
6401425d:	cmp    eax,0xfffffffe
64014260:	je     0x6401426f
64014262:	mov    ecx,DWORD PTR [esi+0x4]
64014265:	add    ecx,edi
64014267:	xor    ecx,DWORD PTR [eax+edi*1]
6401426a:	call   0x64012b8c
6401426f:	mov    ecx,DWORD PTR [esi+0xc]
64014272:	mov    eax,DWORD PTR [esi+0x8]
64014275:	add    ecx,edi
64014277:	xor    ecx,DWORD PTR [eax+edi*1]
6401427a:	call   0x64012b8c
6401427f:	mov    eax,DWORD PTR [esp+0x18]
64014283:	pop    edi
64014284:	pop    esi
64014285:	pop    ebp
64014286:	pop    ebx
64014287:	add    esp,0x14
6401428a:	ret    
6401428b:	mov    DWORD PTR [esp+0x18],0x0
64014293:	jmp    0x6401425b
64014295:	mov    ecx,DWORD PTR [esp+0x28]
64014299:	cmp    DWORD PTR [ecx],0xe06d7363
6401429f:	jne    0x640142cb
640142a1:	cmp    DWORD PTR ds:0x64025d80,0x0
640142a8:	je     0x640142cb
640142aa:	push   0x64025d80
640142af:	call   0x6401b1f0
640142b4:	add    esp,0x4
640142b7:	test   eax,eax
640142b9:	je     0x640142cb
640142bb:	mov    edx,DWORD PTR [esp+0x28]
640142bf:	push   0x1
640142c1:	push   edx
640142c2:	call   DWORD PTR ds:0x64025d80
640142c8:	add    esp,0x8
640142cb:	mov    ecx,DWORD PTR [esp+0x2c]
640142cf:	call   0x6401b132
640142d4:	mov    eax,DWORD PTR [esp+0x2c]
640142d8:	cmp    DWORD PTR [eax+0xc],ebp
640142db:	je     0x640142f0
640142dd:	push   0x6402d09c
640142e2:	push   edi
640142e3:	mov    edx,ebp
640142e5:	mov    ecx,eax
640142e7:	call   0x6401b14c
640142ec:	mov    eax,DWORD PTR [esp+0x2c]
640142f0:	mov    ecx,DWORD PTR [esp+0x14]
640142f4:	mov    DWORD PTR [eax+0xc],ecx
640142f7:	mov    eax,DWORD PTR [esi]
640142f9:	cmp    eax,0xfffffffe
640142fc:	je     0x6401430b
640142fe:	mov    ecx,DWORD PTR [esi+0x4]
64014301:	add    ecx,edi
64014303:	xor    ecx,DWORD PTR [eax+edi*1]
64014306:	call   0x64012b8c
6401430b:	mov    ecx,DWORD PTR [esi+0xc]
6401430e:	mov    edx,DWORD PTR [esi+0x8]
64014311:	add    ecx,edi
64014313:	xor    ecx,DWORD PTR [edx+edi*1]
64014316:	call   0x64012b8c
6401431b:	mov    ecx,DWORD PTR [ebx+0x8]
6401431e:	mov    edx,edi
64014320:	jmp    0x6401b119
64014325:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
64014329:	je     0x6401427f
6401432f:	push   0x6402d09c
64014334:	push   edi
64014335:	mov    ecx,ebx
64014337:	mov    edx,0xfffffffe
6401433c:	call   0x6401b14c
64014341:	jmp    0x6401425b
64014346:	int3   
64014347:	int3   
64014348:	int3   
64014349:	int3   
6401434a:	int3   
6401434b:	int3   
6401434c:	int3   
6401434d:	int3   
6401434e:	int3   
6401434f:	int3   
64014350:	mov    ecx,DWORD PTR [esp+0x4]
64014354:	test   ecx,0x3
6401435a:	je     0x64014380
6401435c:	mov    al,BYTE PTR [ecx]
6401435e:	add    ecx,0x1
64014361:	test   al,al
64014363:	je     0x640143b3
64014365:	test   ecx,0x3
6401436b:	jne    0x6401435c
6401436d:	add    eax,0x0
64014372:	lea    esp,[esp+0x0]
64014379:	lea    esp,[esp+0x0]
64014380:	mov    eax,DWORD PTR [ecx]
64014382:	mov    edx,0x7efefeff
64014387:	add    edx,eax
64014389:	xor    eax,0xffffffff
6401438c:	xor    eax,edx
6401438e:	add    ecx,0x4
64014391:	test   eax,0x81010100
64014396:	je     0x64014380
64014398:	mov    eax,DWORD PTR [ecx-0x4]
6401439b:	test   al,al
6401439d:	je     0x640143d1
6401439f:	test   ah,ah
640143a1:	je     0x640143c7
640143a3:	test   eax,0xff0000
640143a8:	je     0x640143bd
640143aa:	test   eax,0xff000000
640143af:	je     0x640143b3
640143b1:	jmp    0x64014380
640143b3:	lea    eax,[ecx-0x1]
640143b6:	mov    ecx,DWORD PTR [esp+0x4]
640143ba:	sub    eax,ecx
640143bc:	ret    
640143bd:	lea    eax,[ecx-0x2]
640143c0:	mov    ecx,DWORD PTR [esp+0x4]
640143c4:	sub    eax,ecx
640143c6:	ret    
640143c7:	lea    eax,[ecx-0x3]
640143ca:	mov    ecx,DWORD PTR [esp+0x4]
640143ce:	sub    eax,ecx
640143d0:	ret    
640143d1:	lea    eax,[ecx-0x4]
640143d4:	mov    ecx,DWORD PTR [esp+0x4]
640143d8:	sub    eax,ecx
640143da:	ret    
640143db:	push   eax
640143dc:	push   DWORD PTR fs:0x0
640143e3:	lea    eax,[esp+0xc]
640143e7:	sub    esp,DWORD PTR [esp+0xc]
640143eb:	push   ebx
640143ec:	push   esi
640143ed:	push   edi
640143ee:	mov    DWORD PTR [eax],ebp
640143f0:	mov    ebp,eax
640143f2:	mov    eax,ds:0x6402d09c
640143f7:	xor    eax,ebp
640143f9:	push   eax
640143fa:	push   DWORD PTR [ebp-0x4]
640143fd:	mov    DWORD PTR [ebp-0x4],0xffffffff
64014404:	lea    eax,[ebp-0xc]
64014407:	mov    fs:0x0,eax
6401440d:	ret    
6401440e:	push   eax
6401440f:	push   DWORD PTR fs:0x0
64014416:	lea    eax,[esp+0xc]
6401441a:	sub    esp,DWORD PTR [esp+0xc]
6401441e:	push   ebx
6401441f:	push   esi
64014420:	push   edi
64014421:	mov    DWORD PTR [eax],ebp
64014423:	mov    ebp,eax
64014425:	mov    eax,ds:0x6402d09c
6401442a:	xor    eax,ebp
6401442c:	push   eax
6401442d:	mov    DWORD PTR [ebp-0x10],esp
64014430:	push   DWORD PTR [ebp-0x4]
64014433:	mov    DWORD PTR [ebp-0x4],0xffffffff
6401443a:	lea    eax,[ebp-0xc]
6401443d:	mov    fs:0x0,eax
64014443:	ret    
64014444:	push   0xc
64014446:	push   0x6402a650
6401444b:	call   0x64014150
64014450:	push   0xe
64014452:	call   0x6401a19a
64014457:	pop    ecx
64014458:	and    DWORD PTR [ebp-0x4],0x0
6401445c:	mov    esi,DWORD PTR [ebp+0x8]
6401445f:	mov    ecx,DWORD PTR [esi+0x4]
64014462:	test   ecx,ecx
64014464:	je     0x64014495
64014466:	mov    eax,ds:0x6402e588
6401446b:	mov    edx,0x6402e584
64014470:	mov    DWORD PTR [ebp-0x1c],eax
64014473:	test   eax,eax
64014475:	je     0x64014488
64014477:	cmp    DWORD PTR [eax],ecx
64014479:	jne    0x640144a7
6401447b:	mov    ecx,DWORD PTR [eax+0x4]
6401447e:	mov    DWORD PTR [edx+0x4],ecx
64014481:	push   eax
64014482:	call   0x64013a26
64014487:	pop    ecx
64014488:	push   DWORD PTR [esi+0x4]
6401448b:	call   0x64013a26
64014490:	pop    ecx
64014491:	and    DWORD PTR [esi+0x4],0x0
64014495:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401449c:	call   0x640144ab
640144a1:	call   0x64014195
640144a6:	ret    
640144a7:	mov    edx,eax
640144a9:	jmp    0x64014470
640144ab:	push   0xe
640144ad:	call   0x6401a0c2
640144b2:	pop    ecx
640144b3:	ret    
640144b4:	int3   
640144b5:	int3   
640144b6:	int3   
640144b7:	int3   
640144b8:	int3   
640144b9:	int3   
640144ba:	int3   
640144bb:	int3   
640144bc:	int3   
640144bd:	int3   
640144be:	int3   
640144bf:	int3   
640144c0:	mov    edx,DWORD PTR [esp+0x4]
640144c4:	mov    ecx,DWORD PTR [esp+0x8]
640144c8:	test   edx,0x3
640144ce:	jne    0x6401450c
640144d0:	mov    eax,DWORD PTR [edx]
640144d2:	cmp    al,BYTE PTR [ecx]
640144d4:	jne    0x64014504
640144d6:	or     al,al
640144d8:	je     0x64014500
640144da:	cmp    ah,BYTE PTR [ecx+0x1]
640144dd:	jne    0x64014504
640144df:	or     ah,ah
640144e1:	je     0x64014500
640144e3:	shr    eax,0x10
640144e6:	cmp    al,BYTE PTR [ecx+0x2]
640144e9:	jne    0x64014504
640144eb:	or     al,al
640144ed:	je     0x64014500
640144ef:	cmp    ah,BYTE PTR [ecx+0x3]
640144f2:	jne    0x64014504
640144f4:	add    ecx,0x4
640144f7:	add    edx,0x4
640144fa:	or     ah,ah
640144fc:	jne    0x640144d0
640144fe:	mov    edi,edi
64014500:	xor    eax,eax
64014502:	ret    
64014503:	nop
64014504:	sbb    eax,eax
64014506:	shl    eax,1
64014508:	add    eax,0x1
6401450b:	ret    
6401450c:	test   edx,0x1
64014512:	je     0x6401452c
64014514:	mov    al,BYTE PTR [edx]
64014516:	add    edx,0x1
64014519:	cmp    al,BYTE PTR [ecx]
6401451b:	jne    0x64014504
6401451d:	add    ecx,0x1
64014520:	or     al,al
64014522:	je     0x64014500
64014524:	test   edx,0x2
6401452a:	je     0x640144d0
6401452c:	mov    ax,WORD PTR [edx]
6401452f:	add    edx,0x2
64014532:	cmp    al,BYTE PTR [ecx]
64014534:	jne    0x64014504
64014536:	or     al,al
64014538:	je     0x64014500
6401453a:	cmp    ah,BYTE PTR [ecx+0x1]
6401453d:	jne    0x64014504
6401453f:	or     ah,ah
64014541:	je     0x64014500
64014543:	add    ecx,0x2
64014546:	jmp    0x640144d0
64014548:	mov    ecx,DWORD PTR [esp+0x4]
6401454c:	push   ebx
6401454d:	xor    ebx,ebx
6401454f:	cmp    ecx,ebx
64014551:	push   esi
64014552:	push   edi
64014553:	je     0x6401455d
64014555:	mov    edi,DWORD PTR [esp+0x14]
64014559:	cmp    edi,ebx
6401455b:	ja     0x64014578
6401455d:	call   0x64014950
64014562:	push   0x16
64014564:	pop    esi
64014565:	mov    DWORD PTR [eax],esi
64014567:	push   ebx
64014568:	push   ebx
64014569:	push   ebx
6401456a:	push   ebx
6401456b:	push   ebx
6401456c:	call   0x640126c4
64014571:	add    esp,0x14
64014574:	mov    eax,esi
64014576:	jmp    0x640145a9
64014578:	mov    esi,DWORD PTR [esp+0x18]
6401457c:	cmp    esi,ebx
6401457e:	jne    0x64014584
64014580:	mov    BYTE PTR [ecx],bl
64014582:	jmp    0x6401455d
64014584:	mov    edx,ecx
64014586:	mov    al,BYTE PTR [esi]
64014588:	mov    BYTE PTR [edx],al
6401458a:	inc    edx
6401458b:	inc    esi
6401458c:	cmp    al,bl
6401458e:	je     0x64014593
64014590:	dec    edi
64014591:	jne    0x64014586
64014593:	cmp    edi,ebx
64014595:	jne    0x640145a7
64014597:	mov    BYTE PTR [ecx],bl
64014599:	call   0x64014950
6401459e:	push   0x22
640145a0:	pop    ecx
640145a1:	mov    DWORD PTR [eax],ecx
640145a3:	mov    esi,ecx
640145a5:	jmp    0x64014567
640145a7:	xor    eax,eax
640145a9:	pop    edi
640145aa:	pop    esi
640145ab:	pop    ebx
640145ac:	ret    
640145ad:	int3   
640145ae:	int3   
640145af:	int3   
640145b0:	push   ebp
640145b1:	mov    ebp,esp
640145b3:	push   edi
640145b4:	push   esi
640145b5:	mov    esi,DWORD PTR [ebp+0xc]
640145b8:	mov    ecx,DWORD PTR [ebp+0x10]
640145bb:	mov    edi,DWORD PTR [ebp+0x8]
640145be:	mov    eax,ecx
640145c0:	mov    edx,ecx
640145c2:	add    eax,esi
640145c4:	cmp    edi,esi
640145c6:	jbe    0x640145d0
640145c8:	cmp    edi,eax
640145ca:	jb     0x64014774
640145d0:	cmp    ecx,0x100
640145d6:	jb     0x640145f7
640145d8:	cmp    DWORD PTR ds:0x64032624,0x0
640145df:	je     0x640145f7
640145e1:	push   edi
640145e2:	push   esi
640145e3:	and    edi,0xf
640145e6:	and    esi,0xf
640145e9:	cmp    edi,esi
640145eb:	pop    esi
640145ec:	pop    edi
640145ed:	jne    0x640145f7
640145ef:	pop    esi
640145f0:	pop    edi
640145f1:	pop    ebp
640145f2:	jmp    0x6401af2a
640145f7:	test   edi,0x3
640145fd:	jne    0x64014614
640145ff:	shr    ecx,0x2
64014602:	and    edx,0x3
64014605:	cmp    ecx,0x8
64014608:	jb     0x64014634
6401460a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401460c:	jmp    DWORD PTR [edx*4+0x64014724]
64014613:	nop
64014614:	mov    eax,edi
64014616:	mov    edx,0x3
6401461b:	sub    ecx,0x4
6401461e:	jb     0x6401462c
64014620:	and    eax,0x3
64014623:	add    ecx,eax
64014625:	jmp    DWORD PTR [eax*4+0x64014638]
6401462c:	jmp    DWORD PTR [ecx*4+0x64014734]
64014633:	nop
64014634:	jmp    DWORD PTR [ecx*4+0x640146b8]
6401463b:	nop
6401463c:	dec    eax
6401463d:	inc    esi
6401463e:	add    DWORD PTR [esp+esi*2+0x46],esp
64014642:	add    DWORD PTR [eax+ebx*4+0x46],esp
64014646:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401464a:	mov    al,BYTE PTR [esi]
6401464c:	mov    BYTE PTR [edi],al
6401464e:	mov    al,BYTE PTR [esi+0x1]
64014651:	mov    BYTE PTR [edi+0x1],al
64014654:	mov    al,BYTE PTR [esi+0x2]
64014657:	shr    ecx,0x2
6401465a:	mov    BYTE PTR [edi+0x2],al
6401465d:	add    esi,0x3
64014660:	add    edi,0x3
64014663:	cmp    ecx,0x8
64014666:	jb     0x64014634
64014668:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401466a:	jmp    DWORD PTR [edx*4+0x64014724]
64014671:	lea    ecx,[ecx+0x0]
64014674:	and    edx,ecx
64014676:	mov    al,BYTE PTR [esi]
64014678:	mov    BYTE PTR [edi],al
6401467a:	mov    al,BYTE PTR [esi+0x1]
6401467d:	shr    ecx,0x2
64014680:	mov    BYTE PTR [edi+0x1],al
64014683:	add    esi,0x2
64014686:	add    edi,0x2
64014689:	cmp    ecx,0x8
6401468c:	jb     0x64014634
6401468e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014690:	jmp    DWORD PTR [edx*4+0x64014724]
64014697:	nop
64014698:	and    edx,ecx
6401469a:	mov    al,BYTE PTR [esi]
6401469c:	mov    BYTE PTR [edi],al
6401469e:	add    esi,0x1
640146a1:	shr    ecx,0x2
640146a4:	add    edi,0x1
640146a7:	cmp    ecx,0x8
640146aa:	jb     0x64014634
640146ac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640146ae:	jmp    DWORD PTR [edx*4+0x64014724]
640146b5:	lea    ecx,[ecx+0x0]
640146b8:	sbb    eax,DWORD PTR [edi+0x1]
640146bb:	or     BYTE PTR fs:[edi+0x1],al
640146bf:	add    BYTE PTR fs:[edi+0x1],al
640146c3:	fs clc 
640146c5:	inc    esi
640146c6:	add    DWORD PTR [eax+esi*8+0x46],esp
640146ca:	add    DWORD PTR [eax+ebp*8+0x46],esp
640146ce:	add    DWORD PTR [eax+eiz*8+0x46],esp
640146d2:	add    DWORD PTR [eax+ebx*8+0x46],esp
640146d6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640146da:	mov    fs,esp
640146dc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
640146e0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
640146e4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
640146e8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
640146ec:	mov    DWORD PTR [edi+ecx*4-0x14],eax
640146f0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
640146f4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
640146f8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
640146fc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64014700:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64014704:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64014708:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401470c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64014710:	lea    eax,[ecx*4+0x0]
64014717:	add    esi,eax
64014719:	add    edi,eax
6401471b:	jmp    DWORD PTR [edx*4+0x64014724]
64014722:	mov    edi,edi
64014724:	xor    al,0x47
64014726:	add    DWORD PTR [esp+edi*1+0x47],esp
6401472a:	add    DWORD PTR [eax+ecx*2+0x47],esp
6401472e:	add    DWORD PTR [esp+ebx*2+0x47],esp
64014732:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64014736:	or     BYTE PTR [esi+0x5f],bl
64014739:	leave  
6401473a:	ret    
6401473b:	nop
6401473c:	mov    al,BYTE PTR [esi]
6401473e:	mov    BYTE PTR [edi],al
64014740:	mov    eax,DWORD PTR [ebp+0x8]
64014743:	pop    esi
64014744:	pop    edi
64014745:	leave  
64014746:	ret    
64014747:	nop
64014748:	mov    al,BYTE PTR [esi]
6401474a:	mov    BYTE PTR [edi],al
6401474c:	mov    al,BYTE PTR [esi+0x1]
6401474f:	mov    BYTE PTR [edi+0x1],al
64014752:	mov    eax,DWORD PTR [ebp+0x8]
64014755:	pop    esi
64014756:	pop    edi
64014757:	leave  
64014758:	ret    
64014759:	lea    ecx,[ecx+0x0]
6401475c:	mov    al,BYTE PTR [esi]
6401475e:	mov    BYTE PTR [edi],al
64014760:	mov    al,BYTE PTR [esi+0x1]
64014763:	mov    BYTE PTR [edi+0x1],al
64014766:	mov    al,BYTE PTR [esi+0x2]
64014769:	mov    BYTE PTR [edi+0x2],al
6401476c:	mov    eax,DWORD PTR [ebp+0x8]
6401476f:	pop    esi
64014770:	pop    edi
64014771:	leave  
64014772:	ret    
64014773:	nop
64014774:	lea    esi,[ecx+esi*1-0x4]
64014778:	lea    edi,[ecx+edi*1-0x4]
6401477c:	test   edi,0x3
64014782:	jne    0x640147a8
64014784:	shr    ecx,0x2
64014787:	and    edx,0x3
6401478a:	cmp    ecx,0x8
6401478d:	jb     0x6401479c
6401478f:	std    
64014790:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014792:	cld    
64014793:	jmp    DWORD PTR [edx*4+0x640148c0]
6401479a:	mov    edi,edi
6401479c:	neg    ecx
6401479e:	jmp    DWORD PTR [ecx*4+0x64014870]
640147a5:	lea    ecx,[ecx+0x0]
640147a8:	mov    eax,edi
640147aa:	mov    edx,0x3
640147af:	cmp    ecx,0x4
640147b2:	jb     0x640147c0
640147b4:	and    eax,0x3
640147b7:	sub    ecx,eax
640147b9:	jmp    DWORD PTR [eax*4+0x640147c4]
640147c0:	jmp    DWORD PTR [ecx*4+0x640148c0]
640147c7:	nop
640147c8:	aam    0x47
640147ca:	add    DWORD PTR [eax+edi*8+0x47],esp
640147ce:	add    DWORD PTR [eax+eiz*1+0x48],esp
640147d2:	add    DWORD PTR [edx+ecx*4+0x46],esp
640147d6:	add    esp,DWORD PTR [ebx]
640147d8:	ror    DWORD PTR [eax-0x117cfcb9],1
640147de:	add    ecx,eax
640147e0:	jmp    0x65f0cae7
640147e5:	cmp    ecx,0x8
640147e8:	jb     0x6401479c
640147ea:	std    
640147eb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640147ed:	cld    
640147ee:	jmp    DWORD PTR [edx*4+0x640148c0]
640147f5:	lea    ecx,[ecx+0x0]
640147f8:	mov    al,BYTE PTR [esi+0x3]
640147fb:	and    edx,ecx
640147fd:	mov    BYTE PTR [edi+0x3],al
64014800:	mov    al,BYTE PTR [esi+0x2]
64014803:	shr    ecx,0x2
64014806:	mov    BYTE PTR [edi+0x2],al
64014809:	sub    esi,0x2
6401480c:	sub    edi,0x2
6401480f:	cmp    ecx,0x8
64014812:	jb     0x6401479c
64014814:	std    
64014815:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014817:	cld    
64014818:	jmp    DWORD PTR [edx*4+0x640148c0]
6401481f:	nop
64014820:	mov    al,BYTE PTR [esi+0x3]
64014823:	and    edx,ecx
64014825:	mov    BYTE PTR [edi+0x3],al
64014828:	mov    al,BYTE PTR [esi+0x2]
6401482b:	mov    BYTE PTR [edi+0x2],al
6401482e:	mov    al,BYTE PTR [esi+0x1]
64014831:	shr    ecx,0x2
64014834:	mov    BYTE PTR [edi+0x1],al
64014837:	sub    esi,0x3
6401483a:	sub    edi,0x3
6401483d:	cmp    ecx,0x8
64014840:	jb     0x6401479c
64014846:	std    
64014847:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014849:	cld    
6401484a:	jmp    DWORD PTR [edx*4+0x640148c0]
64014851:	lea    ecx,[ecx+0x0]
64014854:	je     0x6401489e
64014856:	add    DWORD PTR [esp+edi*2+0x48],esp
6401485a:	add    DWORD PTR [esp+eax*4+0x48],esp
6401485e:	add    DWORD PTR [esp+ecx*4+0x48],esp
64014862:	add    DWORD PTR [esp+edx*4+0x48],esp
64014866:	add    DWORD PTR [esp+ebx*4+0x48],esp
6401486a:	add    DWORD PTR [esp+eiz*4+0x48],esp
6401486e:	add    DWORD PTR [edi+esi*4+0x48],esp
64014872:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64014876:	mov    ds,WORD PTR [ecx+ecx*4]
64014879:	inc    esp
6401487a:	(bad)  
6401487b:	sbb    al,0x8b
6401487d:	inc    esp
6401487e:	mov    ds,WORD PTR [eax]
64014880:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64014884:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64014888:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401488c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64014890:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64014894:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64014898:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401489c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
640148a0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
640148a4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
640148a8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
640148ac:	lea    eax,[ecx*4+0x0]
640148b3:	add    esi,eax
640148b5:	add    edi,eax
640148b7:	jmp    DWORD PTR [edx*4+0x640148c0]
640148be:	mov    edi,edi
640148c0:	ror    BYTE PTR [eax+0x1],1
640148c3:	fmul   DWORD PTR fs:[eax+0x1]
640148c7:	fs call 0x60654a15
640148cd:	dec    eax
640148ce:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640148d2:	or     BYTE PTR [esi+0x5f],bl
640148d5:	leave  
640148d6:	ret    
640148d7:	nop
640148d8:	mov    al,BYTE PTR [esi+0x3]
640148db:	mov    BYTE PTR [edi+0x3],al
640148de:	mov    eax,DWORD PTR [ebp+0x8]
640148e1:	pop    esi
640148e2:	pop    edi
640148e3:	leave  
640148e4:	ret    
640148e5:	lea    ecx,[ecx+0x0]
640148e8:	mov    al,BYTE PTR [esi+0x3]
640148eb:	mov    BYTE PTR [edi+0x3],al
640148ee:	mov    al,BYTE PTR [esi+0x2]
640148f1:	mov    BYTE PTR [edi+0x2],al
640148f4:	mov    eax,DWORD PTR [ebp+0x8]
640148f7:	pop    esi
640148f8:	pop    edi
640148f9:	leave  
640148fa:	ret    
640148fb:	nop
640148fc:	mov    al,BYTE PTR [esi+0x3]
640148ff:	mov    BYTE PTR [edi+0x3],al
64014902:	mov    al,BYTE PTR [esi+0x2]
64014905:	mov    BYTE PTR [edi+0x2],al
64014908:	mov    al,BYTE PTR [esi+0x1]
6401490b:	mov    BYTE PTR [edi+0x1],al
6401490e:	mov    eax,DWORD PTR [ebp+0x8]
64014911:	pop    esi
64014912:	pop    edi
64014913:	leave  
64014914:	ret    
64014915:	mov    eax,DWORD PTR [esp+0x4]
64014919:	xor    ecx,ecx
6401491b:	cmp    eax,DWORD PTR [ecx*8+0x6402d0c0]
64014922:	je     0x64014936
64014924:	inc    ecx
64014925:	cmp    ecx,0x2d
64014928:	jb     0x6401491b
6401492a:	lea    ecx,[eax-0x13]
6401492d:	cmp    ecx,0x11
64014930:	ja     0x6401493e
64014932:	push   0xd
64014934:	pop    eax
64014935:	ret    
64014936:	mov    eax,DWORD PTR [ecx*8+0x6402d0c4]
6401493d:	ret    
6401493e:	add    eax,0xffffff44
64014943:	push   0xe
64014945:	pop    ecx
64014946:	cmp    ecx,eax
64014948:	sbb    eax,eax
6401494a:	and    eax,ecx
6401494c:	add    eax,0x8
6401494f:	ret    
64014950:	call   0x64014c24
64014955:	test   eax,eax
64014957:	jne    0x6401495f
64014959:	mov    eax,0x6402d228
6401495e:	ret    
6401495f:	add    eax,0x8
64014962:	ret    
64014963:	call   0x64014c24
64014968:	test   eax,eax
6401496a:	jne    0x64014972
6401496c:	mov    eax,0x6402d22c
64014971:	ret    
64014972:	add    eax,0xc
64014975:	ret    
64014976:	push   esi
64014977:	call   0x64014963
6401497c:	mov    ecx,DWORD PTR [esp+0x8]
64014980:	push   ecx
64014981:	mov    DWORD PTR [eax],ecx
64014983:	call   0x64014915
64014988:	pop    ecx
64014989:	mov    esi,eax
6401498b:	call   0x64014950
64014990:	mov    DWORD PTR [eax],esi
64014992:	pop    esi
64014993:	ret    
64014994:	and    DWORD PTR ds:0x6403263c,0x0
6401499b:	ret    
6401499c:	push   ebp
6401499d:	mov    ebp,esp
6401499f:	push   ecx
640149a0:	push   ecx
640149a1:	push   ebx
640149a2:	push   esi
640149a3:	xor    esi,esi
640149a5:	lea    eax,[ebp-0x4]
640149a8:	inc    esi
640149a9:	xor    ebx,ebx
640149ab:	push   eax
640149ac:	mov    DWORD PTR [ebp-0x8],esi
640149af:	mov    DWORD PTR [ebp-0x4],ebx
640149b2:	call   0x640160b6
640149b7:	cmp    DWORD PTR [ebp-0x4],0x5
640149bb:	pop    ecx
640149bc:	jle    0x640149c2
640149be:	mov    eax,esi
640149c0:	jmp    0x64014a04
640149c2:	push   edi
640149c3:	push   ebx
640149c4:	call   DWORD PTR ds:0x64025128
640149ca:	mov    esi,DWORD PTR [eax+0x3c]
640149cd:	add    esi,eax
640149cf:	cmp    WORD PTR [esi+0x6],bx
640149d3:	movzx  eax,WORD PTR [esi+0x14]
640149d7:	lea    edi,[eax+esi*1+0x18]
640149db:	jbe    0x64014a00
640149dd:	push   edi
640149de:	push   0x64025d1c
640149e3:	call   0x640144c0
640149e8:	test   eax,eax
640149ea:	pop    ecx
640149eb:	pop    ecx
640149ec:	je     0x640149fc
640149ee:	movzx  eax,WORD PTR [esi+0x6]
640149f2:	inc    ebx
640149f3:	add    edi,0x28
640149f6:	cmp    ebx,eax
640149f8:	jb     0x640149dd
640149fa:	jmp    0x64014a00
640149fc:	and    DWORD PTR [ebp-0x8],0x0
64014a00:	mov    eax,DWORD PTR [ebp-0x8]
64014a03:	pop    edi
64014a04:	pop    esi
64014a05:	pop    ebx
64014a06:	leave  
64014a07:	ret    
64014a08:	push   esi
64014a09:	push   DWORD PTR ds:0x6402d234
64014a0f:	mov    esi,DWORD PTR ds:0x6402512c
64014a15:	call   esi
64014a17:	test   eax,eax
64014a19:	je     0x64014a3c
64014a1b:	mov    eax,ds:0x6402d230
64014a20:	cmp    eax,0xffffffff
64014a23:	je     0x64014a3c
64014a25:	push   eax
64014a26:	push   DWORD PTR ds:0x6402d234
64014a2c:	call   esi
64014a2e:	call   eax
64014a30:	test   eax,eax
64014a32:	je     0x64014a3c
64014a34:	mov    eax,DWORD PTR [eax+0x1f8]
64014a3a:	jmp    0x64014a62
64014a3c:	push   0x64025d34
64014a41:	call   DWORD PTR ds:0x64025128
64014a47:	mov    esi,eax
64014a49:	test   esi,esi
64014a4b:	je     0x64014a70
64014a4d:	call   0x6401499c
64014a52:	test   eax,eax
64014a54:	je     0x64014a70
64014a56:	push   0x64025d24
64014a5b:	push   esi
64014a5c:	call   DWORD PTR ds:0x64025014
64014a62:	test   eax,eax
64014a64:	je     0x64014a70
64014a66:	push   DWORD PTR [esp+0x8]
64014a6a:	call   eax
64014a6c:	mov    DWORD PTR [esp+0x8],eax
64014a70:	mov    eax,DWORD PTR [esp+0x8]
64014a74:	pop    esi
64014a75:	ret    
64014a76:	push   0x0
64014a78:	call   0x64014a08
64014a7d:	pop    ecx
64014a7e:	ret    
64014a7f:	push   esi
64014a80:	push   DWORD PTR ds:0x6402d234
64014a86:	mov    esi,DWORD PTR ds:0x6402512c
64014a8c:	call   esi
64014a8e:	test   eax,eax
64014a90:	je     0x64014ab3
64014a92:	mov    eax,ds:0x6402d230
64014a97:	cmp    eax,0xffffffff
64014a9a:	je     0x64014ab3
64014a9c:	push   eax
64014a9d:	push   DWORD PTR ds:0x6402d234
64014aa3:	call   esi
64014aa5:	call   eax
64014aa7:	test   eax,eax
64014aa9:	je     0x64014ab3
64014aab:	mov    eax,DWORD PTR [eax+0x1fc]
64014ab1:	jmp    0x64014ad9
64014ab3:	push   0x64025d34
64014ab8:	call   DWORD PTR ds:0x64025128
64014abe:	mov    esi,eax
64014ac0:	test   esi,esi
64014ac2:	je     0x64014ae7
64014ac4:	call   0x6401499c
64014ac9:	test   eax,eax
64014acb:	je     0x64014ae7
64014acd:	push   0x64025d44
64014ad2:	push   esi
64014ad3:	call   DWORD PTR ds:0x64025014
64014ad9:	test   eax,eax
64014adb:	je     0x64014ae7
64014add:	push   DWORD PTR [esp+0x8]
64014ae1:	call   eax
64014ae3:	mov    DWORD PTR [esp+0x8],eax
64014ae7:	mov    eax,DWORD PTR [esp+0x8]
64014aeb:	pop    esi
64014aec:	ret    
64014aed:	call   DWORD PTR ds:0x64025130
64014af3:	ret    0x4
64014af6:	push   esi
64014af7:	push   DWORD PTR ds:0x6402d234
64014afd:	call   DWORD PTR ds:0x6402512c
64014b03:	mov    esi,eax
64014b05:	test   esi,esi
64014b07:	jne    0x64014b24
64014b09:	push   DWORD PTR ds:0x6402e590
64014b0f:	call   0x64014a7f
64014b14:	pop    ecx
64014b15:	mov    esi,eax
64014b17:	push   esi
64014b18:	push   DWORD PTR ds:0x6402d234
64014b1e:	call   DWORD PTR ds:0x64025134
64014b24:	mov    eax,esi
64014b26:	pop    esi
64014b27:	ret    
64014b28:	mov    eax,ds:0x6402d230
64014b2d:	cmp    eax,0xffffffff
64014b30:	je     0x64014b48
64014b32:	push   eax
64014b33:	push   DWORD PTR ds:0x6402e598
64014b39:	call   0x64014a7f
64014b3e:	pop    ecx
64014b3f:	call   eax
64014b41:	or     DWORD PTR ds:0x6402d230,0xffffffff
64014b48:	mov    eax,ds:0x6402d234
64014b4d:	cmp    eax,0xffffffff
64014b50:	je     0x64014b60
64014b52:	push   eax
64014b53:	call   DWORD PTR ds:0x64025138
64014b59:	or     DWORD PTR ds:0x6402d234,0xffffffff
64014b60:	jmp    0x6401a06d
64014b65:	push   0xc
64014b67:	push   0x6402a670
64014b6c:	call   0x64014150
64014b71:	push   0x64025d34
64014b76:	call   DWORD PTR ds:0x64025128
64014b7c:	mov    DWORD PTR [ebp-0x1c],eax
64014b7f:	mov    esi,DWORD PTR [ebp+0x8]
64014b82:	mov    DWORD PTR [esi+0x5c],0x6402d8c8
64014b89:	xor    edi,edi
64014b8b:	inc    edi
64014b8c:	mov    DWORD PTR [esi+0x14],edi
64014b8f:	test   eax,eax
64014b91:	je     0x64014bc2
64014b93:	call   0x6401499c
64014b98:	test   eax,eax
64014b9a:	je     0x64014bc2
64014b9c:	push   0x64025d24
64014ba1:	push   DWORD PTR [ebp-0x1c]
64014ba4:	mov    ebx,DWORD PTR ds:0x64025014
64014baa:	call   ebx
64014bac:	mov    DWORD PTR [esi+0x1f8],eax
64014bb2:	push   0x64025d44
64014bb7:	push   DWORD PTR [ebp-0x1c]
64014bba:	call   ebx
64014bbc:	mov    DWORD PTR [esi+0x1fc],eax
64014bc2:	mov    DWORD PTR [esi+0x70],edi
64014bc5:	mov    BYTE PTR [esi+0xc8],0x43
64014bcc:	mov    BYTE PTR [esi+0x14b],0x43
64014bd3:	mov    eax,0x6402d268
64014bd8:	mov    DWORD PTR [esi+0x68],eax
64014bdb:	push   eax
64014bdc:	call   DWORD PTR ds:0x64025020
64014be2:	push   0xc
64014be4:	call   0x6401a19a
64014be9:	pop    ecx
64014bea:	and    DWORD PTR [ebp-0x4],0x0
64014bee:	mov    eax,DWORD PTR [ebp+0xc]
64014bf1:	mov    DWORD PTR [esi+0x6c],eax
64014bf4:	test   eax,eax
64014bf6:	jne    0x64014c00
64014bf8:	mov    eax,ds:0x6402d870
64014bfd:	mov    DWORD PTR [esi+0x6c],eax
64014c00:	push   DWORD PTR [esi+0x6c]
64014c03:	call   0x64016acf
64014c08:	pop    ecx
64014c09:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014c10:	call   0x64014c1b
64014c15:	call   0x64014195
64014c1a:	ret    
64014c1b:	push   0xc
64014c1d:	call   0x6401a0c2
64014c22:	pop    ecx
64014c23:	ret    
64014c24:	push   esi
64014c25:	push   edi
64014c26:	call   DWORD PTR ds:0x64025044
64014c2c:	push   DWORD PTR ds:0x6402d230
64014c32:	mov    edi,eax
64014c34:	call   0x64014af6
64014c39:	call   eax
64014c3b:	mov    esi,eax
64014c3d:	test   esi,esi
64014c3f:	jne    0x64014c8f
64014c41:	push   0x214
64014c46:	push   0x1
64014c48:	call   0x64015ea0
64014c4d:	mov    esi,eax
64014c4f:	test   esi,esi
64014c51:	pop    ecx
64014c52:	pop    ecx
64014c53:	je     0x64014c8f
64014c55:	push   esi
64014c56:	push   DWORD PTR ds:0x6402d230
64014c5c:	push   DWORD PTR ds:0x6402e594
64014c62:	call   0x64014a7f
64014c67:	pop    ecx
64014c68:	call   eax
64014c6a:	test   eax,eax
64014c6c:	je     0x64014c86
64014c6e:	push   0x0
64014c70:	push   esi
64014c71:	call   0x64014b65
64014c76:	pop    ecx
64014c77:	pop    ecx
64014c78:	call   DWORD PTR ds:0x64025120
64014c7e:	or     DWORD PTR [esi+0x4],0xffffffff
64014c82:	mov    DWORD PTR [esi],eax
64014c84:	jmp    0x64014c8f
64014c86:	push   esi
64014c87:	call   0x64013a26
64014c8c:	pop    ecx
64014c8d:	xor    esi,esi
64014c8f:	push   edi
64014c90:	call   DWORD PTR ds:0x64025060
64014c96:	pop    edi
64014c97:	mov    eax,esi
64014c99:	pop    esi
64014c9a:	ret    
64014c9b:	push   esi
64014c9c:	call   0x64014c24
64014ca1:	mov    esi,eax
64014ca3:	test   esi,esi
64014ca5:	jne    0x64014caf
64014ca7:	push   0x10
64014ca9:	call   0x64015fd6
64014cae:	pop    ecx
64014caf:	mov    eax,esi
64014cb1:	pop    esi
64014cb2:	ret    
64014cb3:	push   0x8
64014cb5:	push   0x6402a690
64014cba:	call   0x64014150
64014cbf:	mov    esi,DWORD PTR [ebp+0x8]
64014cc2:	test   esi,esi
64014cc4:	je     0x64014db4
64014cca:	mov    eax,DWORD PTR [esi+0x24]
64014ccd:	test   eax,eax
64014ccf:	je     0x64014cd8
64014cd1:	push   eax
64014cd2:	call   0x64013a26
64014cd7:	pop    ecx
64014cd8:	mov    eax,DWORD PTR [esi+0x2c]
64014cdb:	test   eax,eax
64014cdd:	je     0x64014ce6
64014cdf:	push   eax
64014ce0:	call   0x64013a26
64014ce5:	pop    ecx
64014ce6:	mov    eax,DWORD PTR [esi+0x34]
64014ce9:	test   eax,eax
64014ceb:	je     0x64014cf4
64014ced:	push   eax
64014cee:	call   0x64013a26
64014cf3:	pop    ecx
64014cf4:	mov    eax,DWORD PTR [esi+0x3c]
64014cf7:	test   eax,eax
64014cf9:	je     0x64014d02
64014cfb:	push   eax
64014cfc:	call   0x64013a26
64014d01:	pop    ecx
64014d02:	mov    eax,DWORD PTR [esi+0x44]
64014d05:	test   eax,eax
64014d07:	je     0x64014d10
64014d09:	push   eax
64014d0a:	call   0x64013a26
64014d0f:	pop    ecx
64014d10:	mov    eax,DWORD PTR [esi+0x48]
64014d13:	test   eax,eax
64014d15:	je     0x64014d1e
64014d17:	push   eax
64014d18:	call   0x64013a26
64014d1d:	pop    ecx
64014d1e:	mov    eax,DWORD PTR [esi+0x5c]
64014d21:	cmp    eax,0x6402d8c8
64014d26:	je     0x64014d2f
64014d28:	push   eax
64014d29:	call   0x64013a26
64014d2e:	pop    ecx
64014d2f:	push   0xd
64014d31:	call   0x6401a19a
64014d36:	pop    ecx
64014d37:	and    DWORD PTR [ebp-0x4],0x0
64014d3b:	mov    edi,DWORD PTR [esi+0x68]
64014d3e:	test   edi,edi
64014d40:	je     0x64014d5c
64014d42:	push   edi
64014d43:	call   DWORD PTR ds:0x64025098
64014d49:	test   eax,eax
64014d4b:	jne    0x64014d5c
64014d4d:	cmp    edi,0x6402d268
64014d53:	je     0x64014d5c
64014d55:	push   edi
64014d56:	call   0x64013a26
64014d5b:	pop    ecx
64014d5c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014d63:	call   0x64014dbf
64014d68:	push   0xc
64014d6a:	call   0x6401a19a
64014d6f:	pop    ecx
64014d70:	mov    DWORD PTR [ebp-0x4],0x1
64014d77:	mov    edi,DWORD PTR [esi+0x6c]
64014d7a:	test   edi,edi
64014d7c:	je     0x64014da1
64014d7e:	push   edi
64014d7f:	call   0x64016b55
64014d84:	pop    ecx
64014d85:	cmp    edi,DWORD PTR ds:0x6402d870
64014d8b:	je     0x64014da1
64014d8d:	cmp    edi,0x6402d798
64014d93:	je     0x64014da1
64014d95:	cmp    DWORD PTR [edi],0x0
64014d98:	jne    0x64014da1
64014d9a:	push   edi
64014d9b:	call   0x6401698f
64014da0:	pop    ecx
64014da1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014da8:	call   0x64014dcb
64014dad:	push   esi
64014dae:	call   0x64013a26
64014db3:	pop    ecx
64014db4:	call   0x64014195
64014db9:	ret    0x4
64014dbc:	mov    esi,DWORD PTR [ebp+0x8]
64014dbf:	push   0xd
64014dc1:	call   0x6401a0c2
64014dc6:	pop    ecx
64014dc7:	ret    
64014dc8:	mov    esi,DWORD PTR [ebp+0x8]
64014dcb:	push   0xc
64014dcd:	call   0x6401a0c2
64014dd2:	pop    ecx
64014dd3:	ret    
64014dd4:	cmp    DWORD PTR ds:0x6402d230,0xffffffff
64014ddb:	je     0x64014e29
64014ddd:	push   edi
64014dde:	mov    edi,DWORD PTR [esp+0x8]
64014de2:	test   edi,edi
64014de4:	jne    0x64014e0c
64014de6:	push   esi
64014de7:	push   DWORD PTR ds:0x6402d234
64014ded:	mov    esi,DWORD PTR ds:0x6402512c
64014df3:	call   esi
64014df5:	test   eax,eax
64014df7:	je     0x64014e0b
64014df9:	push   DWORD PTR ds:0x6402d230
64014dff:	push   DWORD PTR ds:0x6402d234
64014e05:	call   esi
64014e07:	call   eax
64014e09:	mov    edi,eax
64014e0b:	pop    esi
64014e0c:	push   0x0
64014e0e:	push   DWORD PTR ds:0x6402d230
64014e14:	push   DWORD PTR ds:0x6402e594
64014e1a:	call   0x64014a7f
64014e1f:	pop    ecx
64014e20:	call   eax
64014e22:	push   edi
64014e23:	call   0x64014cb3
64014e28:	pop    edi
64014e29:	mov    eax,ds:0x6402d234
64014e2e:	cmp    eax,0xffffffff
64014e31:	je     0x64014e3c
64014e33:	push   0x0
64014e35:	push   eax
64014e36:	call   DWORD PTR ds:0x64025134
64014e3c:	ret    
64014e3d:	push   edi
64014e3e:	push   0x64025d34
64014e43:	call   DWORD PTR ds:0x64025128
64014e49:	mov    edi,eax
64014e4b:	test   edi,edi
64014e4d:	jne    0x64014e58
64014e4f:	call   0x64014b28
64014e54:	xor    eax,eax
64014e56:	pop    edi
64014e57:	ret    
64014e58:	push   esi
64014e59:	mov    esi,DWORD PTR ds:0x64025014
64014e5f:	push   0x64025d74
64014e64:	push   edi
64014e65:	call   esi
64014e67:	push   0x64025d68
64014e6c:	push   edi
64014e6d:	mov    ds:0x6402e58c,eax
64014e72:	call   esi
64014e74:	push   0x64025d5c
64014e79:	push   edi
64014e7a:	mov    ds:0x6402e590,eax
64014e7f:	call   esi
64014e81:	push   0x64025d54
64014e86:	push   edi
64014e87:	mov    ds:0x6402e594,eax
64014e8c:	call   esi
64014e8e:	cmp    DWORD PTR ds:0x6402e58c,0x0
64014e95:	mov    esi,DWORD PTR ds:0x64025134
64014e9b:	mov    ds:0x6402e598,eax
64014ea0:	je     0x64014eb8
64014ea2:	cmp    DWORD PTR ds:0x6402e590,0x0
64014ea9:	je     0x64014eb8
64014eab:	cmp    DWORD PTR ds:0x6402e594,0x0
64014eb2:	je     0x64014eb8
64014eb4:	test   eax,eax
64014eb6:	jne    0x64014edc
64014eb8:	mov    eax,ds:0x6402512c
64014ebd:	mov    ds:0x6402e590,eax
64014ec2:	mov    eax,ds:0x64025138
64014ec7:	mov    DWORD PTR ds:0x6402e58c,0x64014aed
64014ed1:	mov    DWORD PTR ds:0x6402e594,esi
64014ed7:	mov    ds:0x6402e598,eax
64014edc:	call   DWORD PTR ds:0x64025130
64014ee2:	cmp    eax,0xffffffff
64014ee5:	mov    ds:0x6402d234,eax
64014eea:	je     0x64014fbc
64014ef0:	push   DWORD PTR ds:0x6402e590
64014ef6:	push   eax
64014ef7:	call   esi
64014ef9:	test   eax,eax
64014efb:	je     0x64014fbc
64014f01:	call   0x64016286
64014f06:	push   DWORD PTR ds:0x6402e58c
64014f0c:	call   0x64014a08
64014f11:	push   DWORD PTR ds:0x6402e590
64014f17:	mov    ds:0x6402e58c,eax
64014f1c:	call   0x64014a08
64014f21:	push   DWORD PTR ds:0x6402e594
64014f27:	mov    ds:0x6402e590,eax
64014f2c:	call   0x64014a08
64014f31:	push   DWORD PTR ds:0x6402e598
64014f37:	mov    ds:0x6402e594,eax
64014f3c:	call   0x64014a08
64014f41:	add    esp,0x10
64014f44:	mov    ds:0x6402e598,eax
64014f49:	call   0x6401a024
64014f4e:	test   eax,eax
64014f50:	je     0x64014fb7
64014f52:	push   0x64014cb3
64014f57:	push   DWORD PTR ds:0x6402e58c
64014f5d:	call   0x64014a7f
64014f62:	pop    ecx
64014f63:	call   eax
64014f65:	cmp    eax,0xffffffff
64014f68:	mov    ds:0x6402d230,eax
64014f6d:	je     0x64014fb7
64014f6f:	push   0x214
64014f74:	push   0x1
64014f76:	call   0x64015ea0
64014f7b:	mov    esi,eax
64014f7d:	test   esi,esi
64014f7f:	pop    ecx
64014f80:	pop    ecx
64014f81:	je     0x64014fb7
64014f83:	push   esi
64014f84:	push   DWORD PTR ds:0x6402d230
64014f8a:	push   DWORD PTR ds:0x6402e594
64014f90:	call   0x64014a7f
64014f95:	pop    ecx
64014f96:	call   eax
64014f98:	test   eax,eax
64014f9a:	je     0x64014fb7
64014f9c:	push   0x0
64014f9e:	push   esi
64014f9f:	call   0x64014b65
64014fa4:	pop    ecx
64014fa5:	pop    ecx
64014fa6:	call   DWORD PTR ds:0x64025120
64014fac:	or     DWORD PTR [esi+0x4],0xffffffff
64014fb0:	mov    DWORD PTR [esi],eax
64014fb2:	xor    eax,eax
64014fb4:	inc    eax
64014fb5:	jmp    0x64014fbe
64014fb7:	call   0x64014b28
64014fbc:	xor    eax,eax
64014fbe:	pop    esi
64014fbf:	pop    edi
64014fc0:	ret    
64014fc1:	mov    eax,DWORD PTR [esp+0x4]
64014fc5:	mov    ds:0x6402e59c,eax
64014fca:	ret    
64014fcb:	push   DWORD PTR ds:0x6402e59c
64014fd1:	call   0x64014a7f
64014fd6:	test   eax,eax
64014fd8:	pop    ecx
64014fd9:	je     0x64014fea
64014fdb:	push   DWORD PTR [esp+0x4]
64014fdf:	call   eax
64014fe1:	test   eax,eax
64014fe3:	pop    ecx
64014fe4:	je     0x64014fea
64014fe6:	xor    eax,eax
64014fe8:	inc    eax
64014fe9:	ret    
64014fea:	xor    eax,eax
64014fec:	ret    
64014fed:	mov    DWORD PTR [ecx],0x64025d88
64014ff3:	jmp    0x6401244b
64014ff8:	int3   
64014ff9:	int3   
64014ffa:	int3   
64014ffb:	push   esi
64014ffc:	mov    esi,ecx
64014ffe:	mov    DWORD PTR [esi],0x64025d88
64015004:	call   0x6401244b
64015009:	test   BYTE PTR [esp+0x8],0x1
6401500e:	je     0x64015017
64015010:	push   esi
64015011:	call   0x64012332
64015016:	pop    ecx
64015017:	mov    eax,esi
64015019:	pop    esi
6401501a:	ret    0x4
6401501d:	push   esi
6401501e:	push   edi
6401501f:	mov    edi,DWORD PTR [esp+0xc]
64015023:	mov    eax,DWORD PTR [edi+0x4]
64015026:	test   eax,eax
64015028:	je     0x64015073
6401502a:	lea    edx,[eax+0x8]
6401502d:	cmp    BYTE PTR [edx],0x0
64015030:	je     0x64015073
64015032:	mov    esi,DWORD PTR [esp+0x10]
64015036:	mov    ecx,DWORD PTR [esi+0x4]
64015039:	cmp    eax,ecx
6401503b:	je     0x64015051
6401503d:	add    ecx,0x8
64015040:	push   ecx
64015041:	push   edx
64015042:	call   0x640144c0
64015047:	test   eax,eax
64015049:	pop    ecx
6401504a:	pop    ecx
6401504b:	je     0x64015051
6401504d:	xor    eax,eax
6401504f:	jmp    0x64015076
64015051:	test   BYTE PTR [esi],0x2
64015054:	je     0x6401505b
64015056:	test   BYTE PTR [edi],0x8
64015059:	je     0x6401504d
6401505b:	mov    eax,DWORD PTR [esp+0x14]
6401505f:	mov    eax,DWORD PTR [eax]
64015061:	test   al,0x1
64015063:	je     0x6401506a
64015065:	test   BYTE PTR [edi],0x1
64015068:	je     0x6401504d
6401506a:	test   al,0x2
6401506c:	je     0x64015073
6401506e:	test   BYTE PTR [edi],0x2
64015071:	je     0x6401504d
64015073:	xor    eax,eax
64015075:	inc    eax
64015076:	pop    edi
64015077:	pop    esi
64015078:	ret    
64015079:	mov    eax,DWORD PTR [esp+0x4]
6401507d:	mov    eax,DWORD PTR [eax]
6401507f:	mov    eax,DWORD PTR [eax]
64015081:	cmp    eax,0xe0434f4d
64015086:	je     0x640150a0
64015088:	cmp    eax,0xe06d7363
6401508d:	jne    0x640150ba
6401508f:	call   0x64014c9b
64015094:	and    DWORD PTR [eax+0x90],0x0
6401509b:	jmp    0x64015c7a
640150a0:	call   0x64014c9b
640150a5:	cmp    DWORD PTR [eax+0x90],0x0
640150ac:	jle    0x640150ba
640150ae:	call   0x64014c9b
640150b3:	add    eax,0x90
640150b8:	dec    DWORD PTR [eax]
640150ba:	xor    eax,eax
640150bc:	ret    
640150bd:	push   0x10
640150bf:	push   0x6402a6b8
640150c4:	call   0x64014150
640150c9:	mov    edi,DWORD PTR [ebp+0x10]
640150cc:	mov    ebx,DWORD PTR [ebp+0x8]
640150cf:	cmp    DWORD PTR [edi+0x4],0x80
640150d6:	jg     0x640150de
640150d8:	movsx  esi,BYTE PTR [ebx+0x8]
640150dc:	jmp    0x640150e1
640150de:	mov    esi,DWORD PTR [ebx+0x8]
640150e1:	mov    DWORD PTR [ebp-0x1c],esi
640150e4:	call   0x64014c9b
640150e9:	add    eax,0x90
640150ee:	inc    DWORD PTR [eax]
640150f0:	and    DWORD PTR [ebp-0x4],0x0
640150f4:	cmp    esi,DWORD PTR [ebp+0x14]
640150f7:	je     0x6401515e
640150f9:	cmp    esi,0xffffffff
640150fc:	jle    0x64015103
640150fe:	cmp    esi,DWORD PTR [edi+0x4]
64015101:	jl     0x64015108
64015103:	call   0x64015cc6
64015108:	mov    eax,esi
6401510a:	shl    eax,0x3
6401510d:	mov    ecx,DWORD PTR [edi+0x8]
64015110:	add    ecx,eax
64015112:	mov    esi,DWORD PTR [ecx]
64015114:	mov    DWORD PTR [ebp-0x20],esi
64015117:	mov    DWORD PTR [ebp-0x4],0x1
6401511e:	cmp    DWORD PTR [ecx+0x4],0x0
64015122:	je     0x64015139
64015124:	mov    DWORD PTR [ebx+0x8],esi
64015127:	push   0x103
6401512c:	push   ebx
6401512d:	mov    ecx,DWORD PTR [edi+0x8]
64015130:	push   DWORD PTR [ecx+eax*1+0x4]
64015134:	call   0x64015d10
64015139:	and    DWORD PTR [ebp-0x4],0x0
6401513d:	jmp    0x64015159
6401513f:	push   DWORD PTR [ebp-0x14]
64015142:	call   0x64015079
64015147:	pop    ecx
64015148:	ret    
64015149:	mov    esp,DWORD PTR [ebp-0x18]
6401514c:	and    DWORD PTR [ebp-0x4],0x0
64015150:	mov    edi,DWORD PTR [ebp+0x10]
64015153:	mov    ebx,DWORD PTR [ebp+0x8]
64015156:	mov    esi,DWORD PTR [ebp-0x20]
64015159:	mov    DWORD PTR [ebp-0x1c],esi
6401515c:	jmp    0x640150f4
6401515e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015165:	call   0x64015183
6401516a:	cmp    esi,DWORD PTR [ebp+0x14]
6401516d:	je     0x64015174
6401516f:	call   0x64015cc6
64015174:	mov    DWORD PTR [ebx+0x8],esi
64015177:	call   0x64014195
6401517c:	ret    
6401517d:	mov    ebx,DWORD PTR [ebp+0x8]
64015180:	mov    esi,DWORD PTR [ebp-0x1c]
64015183:	call   0x64014c9b
64015188:	cmp    DWORD PTR [eax+0x90],0x0
6401518f:	jle    0x6401519d
64015191:	call   0x64014c9b
64015196:	add    eax,0x90
6401519b:	dec    DWORD PTR [eax]
6401519d:	ret    
6401519e:	mov    eax,DWORD PTR [eax]
640151a0:	cmp    DWORD PTR [eax],0xe06d7363
640151a6:	jne    0x640151e0
640151a8:	cmp    DWORD PTR [eax+0x10],0x3
640151ac:	jne    0x640151e0
640151ae:	mov    ecx,DWORD PTR [eax+0x14]
640151b1:	cmp    ecx,0x19930520
640151b7:	je     0x640151c9
640151b9:	cmp    ecx,0x19930521
640151bf:	je     0x640151c9
640151c1:	cmp    ecx,0x19930522
640151c7:	jne    0x640151e0
640151c9:	cmp    DWORD PTR [eax+0x1c],0x0
640151cd:	jne    0x640151e0
640151cf:	call   0x64014c9b
640151d4:	xor    ecx,ecx
640151d6:	inc    ecx
640151d7:	mov    DWORD PTR [eax+0x20c],ecx
640151dd:	mov    eax,ecx
640151df:	ret    
640151e0:	xor    eax,eax
640151e2:	ret    
640151e3:	push   0x8
640151e5:	push   0x6402a6e0
640151ea:	call   0x64014150
640151ef:	mov    ecx,DWORD PTR [ebp+0x8]
640151f2:	test   ecx,ecx
640151f4:	je     0x64015220
640151f6:	cmp    DWORD PTR [ecx],0xe06d7363
640151fc:	jne    0x64015220
640151fe:	mov    eax,DWORD PTR [ecx+0x1c]
64015201:	test   eax,eax
64015203:	je     0x64015220
64015205:	mov    eax,DWORD PTR [eax+0x4]
64015208:	test   eax,eax
6401520a:	je     0x64015220
6401520c:	and    DWORD PTR [ebp-0x4],0x0
64015210:	push   eax
64015211:	push   DWORD PTR [ecx+0x18]
64015214:	call   0x640127f5
64015219:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015220:	call   0x64014195
64015225:	ret    
64015226:	xor    eax,eax
64015228:	cmp    BYTE PTR [ebp+0xc],al
6401522b:	setne  al
6401522e:	ret    
6401522f:	mov    esp,DWORD PTR [ebp-0x18]
64015232:	jmp    0x64015c7a
64015237:	mov    ecx,DWORD PTR [esp+0x8]
6401523b:	mov    eax,DWORD PTR [ecx]
6401523d:	push   esi
6401523e:	mov    esi,DWORD PTR [esp+0x8]
64015242:	add    eax,esi
64015244:	cmp    DWORD PTR [ecx+0x4],0x0
64015248:	jl     0x6401525a
6401524a:	mov    edx,DWORD PTR [ecx+0x4]
6401524d:	mov    ecx,DWORD PTR [ecx+0x8]
64015250:	mov    esi,DWORD PTR [edx+esi*1]
64015253:	mov    ecx,DWORD PTR [esi+ecx*1]
64015256:	add    ecx,edx
64015258:	add    eax,ecx
6401525a:	pop    esi
6401525b:	ret    
6401525c:	push   ebp
6401525d:	mov    ebp,esp
6401525f:	sub    esp,0xc
64015262:	test   edi,edi
64015264:	jne    0x64015270
64015266:	call   0x64015cc6
6401526b:	jmp    0x64015c7a
64015270:	and    DWORD PTR [ebp-0x8],0x0
64015274:	cmp    DWORD PTR [edi],0x0
64015277:	mov    BYTE PTR [ebp-0x1],0x0
6401527b:	jle    0x640152d0
6401527d:	push   ebx
6401527e:	push   esi
6401527f:	mov    eax,DWORD PTR [ebp+0x8]
64015282:	mov    eax,DWORD PTR [eax+0x1c]
64015285:	mov    eax,DWORD PTR [eax+0xc]
64015288:	mov    ebx,DWORD PTR [eax]
6401528a:	test   ebx,ebx
6401528c:	lea    esi,[eax+0x4]
6401528f:	jle    0x640152c4
64015291:	mov    eax,DWORD PTR [ebp-0x8]
64015294:	shl    eax,0x4
64015297:	mov    DWORD PTR [ebp-0xc],eax
6401529a:	mov    ecx,DWORD PTR [ebp+0x8]
6401529d:	push   DWORD PTR [ecx+0x1c]
640152a0:	mov    eax,DWORD PTR [esi]
640152a2:	push   eax
640152a3:	mov    eax,DWORD PTR [edi+0x4]
640152a6:	add    eax,DWORD PTR [ebp-0xc]
640152a9:	push   eax
640152aa:	call   0x6401501d
640152af:	add    esp,0xc
640152b2:	test   eax,eax
640152b4:	jne    0x640152c0
640152b6:	dec    ebx
640152b7:	add    esi,0x4
640152ba:	test   ebx,ebx
640152bc:	jg     0x6401529a
640152be:	jmp    0x640152c4
640152c0:	mov    BYTE PTR [ebp-0x1],0x1
640152c4:	inc    DWORD PTR [ebp-0x8]
640152c7:	mov    eax,DWORD PTR [ebp-0x8]
640152ca:	cmp    eax,DWORD PTR [edi]
640152cc:	jl     0x6401527f
640152ce:	pop    esi
640152cf:	pop    ebx
640152d0:	mov    al,BYTE PTR [ebp-0x1]
640152d3:	leave  
640152d4:	ret    
640152d5:	push   0x4
640152d7:	mov    eax,0x64022513
640152dc:	call   0x6401440e
640152e1:	call   0x64014c9b
640152e6:	cmp    DWORD PTR [eax+0x94],0x0
640152ed:	je     0x640152f4
640152ef:	call   0x64015cc6
640152f4:	and    DWORD PTR [ebp-0x4],0x0
640152f8:	call   0x64015cb3
640152fd:	or     DWORD PTR [ebp-0x4],0xffffffff
64015301:	jmp    0x64015c7a
64015306:	call   0x64014c9b
6401530b:	mov    ecx,DWORD PTR [ebp+0x8]
6401530e:	push   0x0
64015310:	push   0x0
64015312:	mov    DWORD PTR [eax+0x94],ecx
64015318:	call   0x6401277b
6401531d:	int3   
6401531e:	push   0x2c
64015320:	push   0x6402a758
64015325:	call   0x64014150
6401532a:	mov    ebx,ecx
6401532c:	mov    edi,DWORD PTR [ebp+0xc]
6401532f:	mov    esi,DWORD PTR [ebp+0x8]
64015332:	mov    DWORD PTR [ebp-0x1c],ebx
64015335:	and    DWORD PTR [ebp-0x34],0x0
64015339:	mov    eax,DWORD PTR [edi-0x4]
6401533c:	mov    DWORD PTR [ebp-0x24],eax
6401533f:	push   DWORD PTR [esi+0x18]
64015342:	lea    eax,[ebp-0x3c]
64015345:	push   eax
64015346:	call   0x64012a99
6401534b:	pop    ecx
6401534c:	pop    ecx
6401534d:	mov    DWORD PTR [ebp-0x28],eax
64015350:	call   0x64014c9b
64015355:	mov    eax,DWORD PTR [eax+0x88]
6401535b:	mov    DWORD PTR [ebp-0x2c],eax
6401535e:	call   0x64014c9b
64015363:	mov    eax,DWORD PTR [eax+0x8c]
64015369:	mov    DWORD PTR [ebp-0x30],eax
6401536c:	call   0x64014c9b
64015371:	mov    DWORD PTR [eax+0x88],esi
64015377:	call   0x64014c9b
6401537c:	mov    ecx,DWORD PTR [ebp+0x10]
6401537f:	mov    DWORD PTR [eax+0x8c],ecx
64015385:	and    DWORD PTR [ebp-0x4],0x0
64015389:	xor    eax,eax
6401538b:	inc    eax
6401538c:	mov    DWORD PTR [ebp+0x10],eax
6401538f:	mov    DWORD PTR [ebp-0x4],eax
64015392:	push   DWORD PTR [ebp+0x1c]
64015395:	push   DWORD PTR [ebp+0x18]
64015398:	push   ebx
64015399:	push   DWORD PTR [ebp+0x14]
6401539c:	push   edi
6401539d:	call   0x64012b2e
640153a2:	add    esp,0x14
640153a5:	mov    DWORD PTR [ebp-0x1c],eax
640153a8:	and    DWORD PTR [ebp-0x4],0x0
640153ac:	jmp    0x6401541d
640153ae:	mov    eax,DWORD PTR [ebp-0x14]
640153b1:	call   0x6401519e
640153b6:	ret    
640153b7:	mov    esp,DWORD PTR [ebp-0x18]
640153ba:	call   0x64014c9b
640153bf:	and    DWORD PTR [eax+0x20c],0x0
640153c6:	mov    esi,DWORD PTR [ebp+0x14]
640153c9:	mov    edi,DWORD PTR [ebp+0xc]
640153cc:	cmp    DWORD PTR [esi+0x4],0x80
640153d3:	jg     0x640153db
640153d5:	movsx  ecx,BYTE PTR [edi+0x8]
640153d9:	jmp    0x640153de
640153db:	mov    ecx,DWORD PTR [edi+0x8]
640153de:	mov    ebx,DWORD PTR [esi+0x10]
640153e1:	and    DWORD PTR [ebp-0x20],0x0
640153e5:	mov    eax,DWORD PTR [ebp-0x20]
640153e8:	cmp    eax,DWORD PTR [esi+0xc]
640153eb:	jae    0x64015405
640153ed:	imul   eax,eax,0x14
640153f0:	add    eax,ebx
640153f2:	mov    edx,DWORD PTR [eax+0x4]
640153f5:	cmp    ecx,edx
640153f7:	jle    0x64015439
640153f9:	cmp    ecx,DWORD PTR [eax+0x8]
640153fc:	jg     0x64015439
640153fe:	mov    eax,DWORD PTR [esi+0x8]
64015401:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
64015405:	push   ecx
64015406:	push   esi
64015407:	push   0x0
64015409:	push   edi
6401540a:	call   0x640150bd
6401540f:	add    esp,0x10
64015412:	and    DWORD PTR [ebp-0x1c],0x0
64015416:	and    DWORD PTR [ebp-0x4],0x0
6401541a:	mov    esi,DWORD PTR [ebp+0x8]
6401541d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015424:	mov    DWORD PTR [ebp+0x10],0x0
6401542b:	call   0x64015444
64015430:	mov    eax,DWORD PTR [ebp-0x1c]
64015433:	call   0x64014195
64015438:	ret    
64015439:	inc    DWORD PTR [ebp-0x20]
6401543c:	jmp    0x640153e5
6401543e:	mov    edi,DWORD PTR [ebp+0xc]
64015441:	mov    esi,DWORD PTR [ebp+0x8]
64015444:	mov    eax,DWORD PTR [ebp-0x24]
64015447:	mov    DWORD PTR [edi-0x4],eax
6401544a:	push   DWORD PTR [ebp-0x28]
6401544d:	call   0x64012ae2
64015452:	pop    ecx
64015453:	call   0x64014c9b
64015458:	mov    ecx,DWORD PTR [ebp-0x2c]
6401545b:	mov    DWORD PTR [eax+0x88],ecx
64015461:	call   0x64014c9b
64015466:	mov    ecx,DWORD PTR [ebp-0x30]
64015469:	mov    DWORD PTR [eax+0x8c],ecx
6401546f:	cmp    DWORD PTR [esi],0xe06d7363
64015475:	jne    0x640154b9
64015477:	cmp    DWORD PTR [esi+0x10],0x3
6401547b:	jne    0x640154b9
6401547d:	mov    eax,DWORD PTR [esi+0x14]
64015480:	cmp    eax,0x19930520
64015485:	je     0x64015495
64015487:	cmp    eax,0x19930521
6401548c:	je     0x64015495
6401548e:	cmp    eax,0x19930522
64015493:	jne    0x640154b9
64015495:	cmp    DWORD PTR [ebp-0x34],0x0
64015499:	jne    0x640154b9
6401549b:	cmp    DWORD PTR [ebp-0x1c],0x0
6401549f:	je     0x640154b9
640154a1:	push   DWORD PTR [esi+0x18]
640154a4:	call   0x64012ac1
640154a9:	pop    ecx
640154aa:	test   eax,eax
640154ac:	je     0x640154b9
640154ae:	push   DWORD PTR [ebp+0x10]
640154b1:	push   esi
640154b2:	call   0x640151e3
640154b7:	pop    ecx
640154b8:	pop    ecx
640154b9:	ret    
640154ba:	push   0xc
640154bc:	push   0x6402a780
640154c1:	call   0x64014150
640154c6:	xor    edx,edx
640154c8:	mov    DWORD PTR [ebp-0x1c],edx
640154cb:	mov    eax,DWORD PTR [ebp+0x10]
640154ce:	mov    ecx,DWORD PTR [eax+0x4]
640154d1:	cmp    ecx,edx
640154d3:	je     0x64015631
640154d9:	cmp    BYTE PTR [ecx+0x8],dl
640154dc:	je     0x64015631
640154e2:	mov    ecx,DWORD PTR [eax+0x8]
640154e5:	cmp    ecx,edx
640154e7:	jne    0x640154f5
640154e9:	test   DWORD PTR [eax],0x80000000
640154ef:	je     0x64015631
640154f5:	mov    eax,DWORD PTR [eax]
640154f7:	mov    esi,DWORD PTR [ebp+0xc]
640154fa:	test   eax,eax
640154fc:	js     0x64015502
640154fe:	lea    esi,[ecx+esi*1+0xc]
64015502:	mov    DWORD PTR [ebp-0x4],edx
64015505:	xor    ebx,ebx
64015507:	inc    ebx
64015508:	push   ebx
64015509:	test   al,0x8
6401550b:	je     0x6401554e
6401550d:	mov    edi,DWORD PTR [ebp+0x8]
64015510:	push   DWORD PTR [edi+0x18]
64015513:	call   0x6401b2ab
64015518:	pop    ecx
64015519:	pop    ecx
6401551a:	test   eax,eax
6401551c:	je     0x64015614
64015522:	push   ebx
64015523:	push   esi
64015524:	call   0x6401b2ab
64015529:	pop    ecx
6401552a:	pop    ecx
6401552b:	test   eax,eax
6401552d:	je     0x64015614
64015533:	mov    eax,DWORD PTR [edi+0x18]
64015536:	mov    DWORD PTR [esi],eax
64015538:	mov    ecx,DWORD PTR [ebp+0x14]
6401553b:	add    ecx,0x8
6401553e:	push   ecx
6401553f:	push   eax
64015540:	call   0x64015237
64015545:	pop    ecx
64015546:	pop    ecx
64015547:	mov    DWORD PTR [esi],eax
64015549:	jmp    0x64015619
6401554e:	mov    edi,DWORD PTR [ebp+0x14]
64015551:	mov    eax,DWORD PTR [ebp+0x8]
64015554:	push   DWORD PTR [eax+0x18]
64015557:	test   BYTE PTR [edi],bl
64015559:	je     0x640155a3
6401555b:	call   0x6401b2ab
64015560:	pop    ecx
64015561:	pop    ecx
64015562:	test   eax,eax
64015564:	je     0x64015614
6401556a:	push   ebx
6401556b:	push   esi
6401556c:	call   0x6401b2ab
64015571:	pop    ecx
64015572:	pop    ecx
64015573:	test   eax,eax
64015575:	je     0x64015614
6401557b:	push   DWORD PTR [edi+0x14]
6401557e:	mov    eax,DWORD PTR [ebp+0x8]
64015581:	push   DWORD PTR [eax+0x18]
64015584:	push   esi
64015585:	call   0x64013bd0
6401558a:	add    esp,0xc
6401558d:	cmp    DWORD PTR [edi+0x14],0x4
64015591:	jne    0x64015619
64015597:	mov    eax,DWORD PTR [esi]
64015599:	test   eax,eax
6401559b:	je     0x64015619
6401559d:	add    edi,0x8
640155a0:	push   edi
640155a1:	jmp    0x6401553f
640155a3:	cmp    DWORD PTR [edi+0x18],edx
640155a6:	jne    0x640155e0
640155a8:	call   0x6401b2ab
640155ad:	pop    ecx
640155ae:	pop    ecx
640155af:	test   eax,eax
640155b1:	je     0x64015614
640155b3:	push   ebx
640155b4:	push   esi
640155b5:	call   0x6401b2ab
640155ba:	pop    ecx
640155bb:	pop    ecx
640155bc:	test   eax,eax
640155be:	je     0x64015614
640155c0:	push   DWORD PTR [edi+0x14]
640155c3:	add    edi,0x8
640155c6:	push   edi
640155c7:	mov    eax,DWORD PTR [ebp+0x8]
640155ca:	push   DWORD PTR [eax+0x18]
640155cd:	call   0x64015237
640155d2:	pop    ecx
640155d3:	pop    ecx
640155d4:	push   eax
640155d5:	push   esi
640155d6:	call   0x64013bd0
640155db:	add    esp,0xc
640155de:	jmp    0x64015619
640155e0:	call   0x6401b2ab
640155e5:	pop    ecx
640155e6:	pop    ecx
640155e7:	test   eax,eax
640155e9:	je     0x64015614
640155eb:	push   ebx
640155ec:	push   esi
640155ed:	call   0x6401b2ab
640155f2:	pop    ecx
640155f3:	pop    ecx
640155f4:	test   eax,eax
640155f6:	je     0x64015614
640155f8:	push   DWORD PTR [edi+0x18]
640155fb:	call   0x6401b2ab
64015600:	pop    ecx
64015601:	test   eax,eax
64015603:	je     0x64015614
64015605:	test   BYTE PTR [edi],0x4
64015608:	push   0x0
6401560a:	pop    eax
6401560b:	setne  al
6401560e:	inc    eax
6401560f:	mov    DWORD PTR [ebp-0x1c],eax
64015612:	jmp    0x64015619
64015614:	call   0x64015cc6
64015619:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015620:	mov    eax,DWORD PTR [ebp-0x1c]
64015623:	jmp    0x64015633
64015625:	xor    eax,eax
64015627:	inc    eax
64015628:	ret    
64015629:	mov    esp,DWORD PTR [ebp-0x18]
6401562c:	jmp    0x64015c7a
64015631:	xor    eax,eax
64015633:	call   0x64014195
64015638:	ret    
64015639:	push   0x8
6401563b:	push   0x6402a7a0
64015640:	call   0x64014150
64015645:	mov    eax,DWORD PTR [ebp+0x10]
64015648:	test   DWORD PTR [eax],0x80000000
6401564e:	je     0x64015655
64015650:	mov    ebx,DWORD PTR [ebp+0xc]
64015653:	jmp    0x6401565f
64015655:	mov    ecx,DWORD PTR [eax+0x8]
64015658:	mov    edx,DWORD PTR [ebp+0xc]
6401565b:	lea    ebx,[ecx+edx*1+0xc]
6401565f:	and    DWORD PTR [ebp-0x4],0x0
64015663:	mov    esi,DWORD PTR [ebp+0x14]
64015666:	push   esi
64015667:	push   eax
64015668:	push   DWORD PTR [ebp+0xc]
6401566b:	mov    edi,DWORD PTR [ebp+0x8]
6401566e:	push   edi
6401566f:	call   0x640154ba
64015674:	add    esp,0x10
64015677:	dec    eax
64015678:	je     0x64015699
6401567a:	dec    eax
6401567b:	jne    0x640156b1
6401567d:	push   0x1
6401567f:	lea    eax,[esi+0x8]
64015682:	push   eax
64015683:	push   DWORD PTR [edi+0x18]
64015686:	call   0x64015237
6401568b:	pop    ecx
6401568c:	pop    ecx
6401568d:	push   eax
6401568e:	push   DWORD PTR [esi+0x18]
64015691:	push   ebx
64015692:	call   0x640127f5
64015697:	jmp    0x640156b1
64015699:	lea    eax,[esi+0x8]
6401569c:	push   eax
6401569d:	push   DWORD PTR [edi+0x18]
640156a0:	call   0x64015237
640156a5:	pop    ecx
640156a6:	pop    ecx
640156a7:	push   eax
640156a8:	push   DWORD PTR [esi+0x18]
640156ab:	push   ebx
640156ac:	call   0x640127f5
640156b1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640156b8:	call   0x64014195
640156bd:	ret    
640156be:	xor    eax,eax
640156c0:	inc    eax
640156c1:	ret    
640156c2:	mov    esp,DWORD PTR [ebp-0x18]
640156c5:	jmp    0x64015c7a
640156ca:	push   ebp
640156cb:	mov    ebp,esp
640156cd:	cmp    DWORD PTR [ebp+0x18],0x0
640156d1:	je     0x640156e3
640156d3:	push   DWORD PTR [ebp+0x18]
640156d6:	push   ebx
640156d7:	push   esi
640156d8:	push   DWORD PTR [ebp+0x8]
640156db:	call   0x64015639
640156e0:	add    esp,0x10
640156e3:	cmp    DWORD PTR [ebp+0x20],0x0
640156e7:	push   DWORD PTR [ebp+0x8]
640156ea:	jne    0x640156ef
640156ec:	push   esi
640156ed:	jmp    0x640156f2
640156ef:	push   DWORD PTR [ebp+0x20]
640156f2:	call   0x640127fc
640156f7:	push   DWORD PTR [edi]
640156f9:	push   DWORD PTR [ebp+0x14]
640156fc:	push   DWORD PTR [ebp+0x10]
640156ff:	push   esi
64015700:	call   0x640150bd
64015705:	mov    eax,DWORD PTR [edi+0x4]
64015708:	push   0x100
6401570d:	push   DWORD PTR [ebp+0x1c]
64015710:	inc    eax
64015711:	push   DWORD PTR [ebp+0x14]
64015714:	mov    DWORD PTR [esi+0x8],eax
64015717:	push   DWORD PTR [ebp+0xc]
6401571a:	mov    ecx,DWORD PTR [ebx+0xc]
6401571d:	push   esi
6401571e:	push   DWORD PTR [ebp+0x8]
64015721:	call   0x6401531e
64015726:	add    esp,0x28
64015729:	test   eax,eax
6401572b:	je     0x64015734
6401572d:	push   esi
6401572e:	push   eax
6401572f:	call   0x640127c5
64015734:	pop    ebp
64015735:	ret    
64015736:	push   ebp
64015737:	mov    ebp,esp
64015739:	push   ecx
6401573a:	push   ecx
6401573b:	push   esi
6401573c:	mov    esi,DWORD PTR [ebp+0x8]
6401573f:	cmp    DWORD PTR [esi],0x80000003
64015745:	je     0x64015825
6401574b:	push   edi
6401574c:	call   0x64014c9b
64015751:	cmp    DWORD PTR [eax+0x80],0x0
64015758:	je     0x64015799
6401575a:	call   0x64014c9b
6401575f:	lea    edi,[eax+0x80]
64015765:	call   0x64014a76
6401576a:	cmp    DWORD PTR [edi],eax
6401576c:	je     0x64015799
6401576e:	cmp    DWORD PTR [esi],0xe0434f4d
64015774:	je     0x64015799
64015776:	push   DWORD PTR [ebp+0x24]
64015779:	push   DWORD PTR [ebp+0x20]
6401577c:	push   DWORD PTR [ebp+0x18]
6401577f:	push   DWORD PTR [ebp+0x14]
64015782:	push   DWORD PTR [ebp+0x10]
64015785:	push   DWORD PTR [ebp+0xc]
64015788:	push   esi
64015789:	call   0x640128b4
6401578e:	add    esp,0x1c
64015791:	test   eax,eax
64015793:	jne    0x64015824
64015799:	mov    edi,DWORD PTR [ebp+0x18]
6401579c:	cmp    DWORD PTR [edi+0xc],0x0
640157a0:	jne    0x640157a7
640157a2:	call   0x64015cc6
640157a7:	mov    esi,DWORD PTR [ebp+0x1c]
640157aa:	lea    eax,[ebp-0x8]
640157ad:	push   eax
640157ae:	lea    eax,[ebp-0x4]
640157b1:	push   eax
640157b2:	push   esi
640157b3:	push   DWORD PTR [ebp+0x20]
640157b6:	push   edi
640157b7:	call   0x64012a26
640157bc:	mov    edi,eax
640157be:	mov    eax,DWORD PTR [ebp-0x4]
640157c1:	add    esp,0x14
640157c4:	cmp    eax,DWORD PTR [ebp-0x8]
640157c7:	jae    0x64015824
640157c9:	push   ebx
640157ca:	cmp    esi,DWORD PTR [edi]
640157cc:	jl     0x64015815
640157ce:	cmp    esi,DWORD PTR [edi+0x4]
640157d1:	jg     0x64015815
640157d3:	mov    eax,DWORD PTR [edi+0xc]
640157d6:	mov    ecx,DWORD PTR [edi+0x10]
640157d9:	shl    eax,0x4
640157dc:	add    eax,ecx
640157de:	mov    ecx,DWORD PTR [eax-0xc]
640157e1:	test   ecx,ecx
640157e3:	je     0x640157eb
640157e5:	cmp    BYTE PTR [ecx+0x8],0x0
640157e9:	jne    0x64015815
640157eb:	lea    ebx,[eax-0x10]
640157ee:	test   BYTE PTR [ebx],0x40
640157f1:	jne    0x64015815
640157f3:	push   DWORD PTR [ebp+0x24]
640157f6:	mov    esi,DWORD PTR [ebp+0xc]
640157f9:	push   DWORD PTR [ebp+0x20]
640157fc:	push   0x0
640157fe:	push   DWORD PTR [ebp+0x18]
64015801:	push   DWORD PTR [ebp+0x14]
64015804:	push   DWORD PTR [ebp+0x10]
64015807:	push   DWORD PTR [ebp+0x8]
6401580a:	call   0x640156ca
6401580f:	mov    esi,DWORD PTR [ebp+0x1c]
64015812:	add    esp,0x1c
64015815:	inc    DWORD PTR [ebp-0x4]
64015818:	mov    eax,DWORD PTR [ebp-0x4]
6401581b:	add    edi,0x14
6401581e:	cmp    eax,DWORD PTR [ebp-0x8]
64015821:	jb     0x640157ca
64015823:	pop    ebx
64015824:	pop    edi
64015825:	pop    esi
64015826:	leave  
64015827:	ret    
64015828:	push   ebp
64015829:	mov    ebp,esp
6401582b:	sub    esp,0x2c
6401582e:	mov    ecx,DWORD PTR [ebp+0xc]
64015831:	push   ebx
64015832:	mov    ebx,DWORD PTR [ebp+0x18]
64015835:	mov    eax,DWORD PTR [ebx+0x4]
64015838:	cmp    eax,0x80
6401583d:	push   esi
6401583e:	push   edi
6401583f:	mov    BYTE PTR [ebp-0x1],0x0
64015843:	jg     0x6401584b
64015845:	movsx  ecx,BYTE PTR [ecx+0x8]
64015849:	jmp    0x6401584e
6401584b:	mov    ecx,DWORD PTR [ecx+0x8]
6401584e:	cmp    ecx,0xffffffff
64015851:	mov    DWORD PTR [ebp-0x8],ecx
64015854:	jl     0x6401585a
64015856:	cmp    ecx,eax
64015858:	jl     0x6401585f
6401585a:	call   0x64015cc6
6401585f:	mov    esi,DWORD PTR [ebp+0x8]
64015862:	mov    edi,0xe06d7363
64015867:	cmp    DWORD PTR [esi],edi
64015869:	jne    0x64015b3a
6401586f:	cmp    DWORD PTR [esi+0x10],0x3
64015873:	mov    ebx,0x19930520
64015878:	jne    0x640159a7
6401587e:	mov    eax,DWORD PTR [esi+0x14]
64015881:	cmp    eax,ebx
64015883:	je     0x64015897
64015885:	cmp    eax,0x19930521
6401588a:	je     0x64015897
6401588c:	cmp    eax,0x19930522
64015891:	jne    0x640159a7
64015897:	cmp    DWORD PTR [esi+0x1c],0x0
6401589b:	jne    0x640159a7
640158a1:	call   0x64014c9b
640158a6:	cmp    DWORD PTR [eax+0x88],0x0
640158ad:	je     0x64015b79
640158b3:	call   0x64014c9b
640158b8:	mov    esi,DWORD PTR [eax+0x88]
640158be:	mov    DWORD PTR [ebp+0x8],esi
640158c1:	call   0x64014c9b
640158c6:	mov    eax,DWORD PTR [eax+0x8c]
640158cc:	push   0x1
640158ce:	push   esi
640158cf:	mov    DWORD PTR [ebp+0x10],eax
640158d2:	call   0x6401b2ab
640158d7:	test   eax,eax
640158d9:	pop    ecx
640158da:	pop    ecx
640158db:	jne    0x640158e2
640158dd:	call   0x64015cc6
640158e2:	cmp    DWORD PTR [esi],edi
640158e4:	jne    0x6401590c
640158e6:	cmp    DWORD PTR [esi+0x10],0x3
640158ea:	jne    0x6401590c
640158ec:	mov    eax,DWORD PTR [esi+0x14]
640158ef:	cmp    eax,ebx
640158f1:	je     0x64015901
640158f3:	cmp    eax,0x19930521
640158f8:	je     0x64015901
640158fa:	cmp    eax,0x19930522
640158ff:	jne    0x6401590c
64015901:	cmp    DWORD PTR [esi+0x1c],0x0
64015905:	jne    0x6401590c
64015907:	call   0x64015cc6
6401590c:	call   0x64014c9b
64015911:	cmp    DWORD PTR [eax+0x94],0x0
64015918:	je     0x640159a7
6401591e:	call   0x64014c9b
64015923:	mov    edi,DWORD PTR [eax+0x94]
64015929:	call   0x64014c9b
6401592e:	push   DWORD PTR [ebp+0x8]
64015931:	xor    esi,esi
64015933:	mov    DWORD PTR [eax+0x94],esi
64015939:	call   0x6401525c
6401593e:	test   al,al
64015940:	pop    ecx
64015941:	jne    0x6401599f
64015943:	xor    ebx,ebx
64015945:	cmp    DWORD PTR [edi],ebx
64015947:	jle    0x64015966
64015949:	mov    eax,DWORD PTR [edi+0x4]
6401594c:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
64015950:	push   0x6402d23c
64015955:	call   0x64012361
6401595a:	test   al,al
6401595c:	jne    0x6401596b
6401595e:	inc    esi
6401595f:	add    ebx,0x10
64015962:	cmp    esi,DWORD PTR [edi]
64015964:	jl     0x64015949
64015966:	jmp    0x64015c7a
6401596b:	push   0x1
6401596d:	push   DWORD PTR [ebp+0x8]
64015970:	call   0x640151e3
64015975:	pop    ecx
64015976:	pop    ecx
64015977:	lea    eax,[ebp+0x8]
6401597a:	push   eax
6401597b:	lea    ecx,[ebp-0x2c]
6401597e:	mov    DWORD PTR [ebp+0x8],0x64025d90
64015985:	call   0x6401238d
6401598a:	push   0x6402a7bc
6401598f:	lea    eax,[ebp-0x2c]
64015992:	push   eax
64015993:	mov    DWORD PTR [ebp-0x2c],0x64025d88
6401599a:	call   0x6401277b
6401599f:	mov    esi,DWORD PTR [ebp+0x8]
640159a2:	mov    edi,0xe06d7363
640159a7:	cmp    DWORD PTR [esi],edi
640159a9:	jne    0x64015b37
640159af:	cmp    DWORD PTR [esi+0x10],0x3
640159b3:	jne    0x64015b37
640159b9:	mov    eax,DWORD PTR [esi+0x14]
640159bc:	cmp    eax,ebx
640159be:	je     0x640159d2
640159c0:	cmp    eax,0x19930521
640159c5:	je     0x640159d2
640159c7:	cmp    eax,0x19930522
640159cc:	jne    0x64015b37
640159d2:	mov    edi,DWORD PTR [ebp+0x18]
640159d5:	cmp    DWORD PTR [edi+0xc],0x0
640159d9:	jbe    0x64015a9e
640159df:	lea    eax,[ebp-0x1c]
640159e2:	push   eax
640159e3:	lea    eax,[ebp-0x10]
640159e6:	push   eax
640159e7:	push   DWORD PTR [ebp-0x8]
640159ea:	push   DWORD PTR [ebp+0x20]
640159ed:	push   edi
640159ee:	call   0x64012a26
640159f3:	add    esp,0x14
640159f6:	mov    edi,eax
640159f8:	mov    eax,DWORD PTR [ebp-0x10]
640159fb:	cmp    eax,DWORD PTR [ebp-0x1c]
640159fe:	jae    0x64015a9b
64015a04:	mov    eax,DWORD PTR [ebp-0x8]
64015a07:	cmp    DWORD PTR [edi],eax
64015a09:	jg     0x64015a90
64015a0f:	cmp    eax,DWORD PTR [edi+0x4]
64015a12:	jg     0x64015a90
64015a14:	mov    eax,DWORD PTR [edi+0x10]
64015a17:	mov    DWORD PTR [ebp-0xc],eax
64015a1a:	mov    eax,DWORD PTR [edi+0xc]
64015a1d:	test   eax,eax
64015a1f:	mov    DWORD PTR [ebp-0x18],eax
64015a22:	jle    0x64015a90
64015a24:	mov    eax,DWORD PTR [esi+0x1c]
64015a27:	mov    eax,DWORD PTR [eax+0xc]
64015a2a:	lea    ebx,[eax+0x4]
64015a2d:	mov    eax,DWORD PTR [eax]
64015a2f:	test   eax,eax
64015a31:	mov    DWORD PTR [ebp-0x14],eax
64015a34:	jle    0x64015a59
64015a36:	push   DWORD PTR [esi+0x1c]
64015a39:	mov    eax,DWORD PTR [ebx]
64015a3b:	push   eax
64015a3c:	push   DWORD PTR [ebp-0xc]
64015a3f:	mov    DWORD PTR [ebp-0x20],eax
64015a42:	call   0x6401501d
64015a47:	add    esp,0xc
64015a4a:	test   eax,eax
64015a4c:	jne    0x64015a68
64015a4e:	dec    DWORD PTR [ebp-0x14]
64015a51:	add    ebx,0x4
64015a54:	cmp    DWORD PTR [ebp-0x14],eax
64015a57:	jg     0x64015a36
64015a59:	dec    DWORD PTR [ebp-0x18]
64015a5c:	add    DWORD PTR [ebp-0xc],0x10
64015a60:	cmp    DWORD PTR [ebp-0x18],0x0
64015a64:	jg     0x64015a24
64015a66:	jmp    0x64015a90
64015a68:	push   DWORD PTR [ebp+0x24]
64015a6b:	mov    ebx,DWORD PTR [ebp-0xc]
64015a6e:	push   DWORD PTR [ebp+0x20]
64015a71:	mov    BYTE PTR [ebp-0x1],0x1
64015a75:	push   DWORD PTR [ebp-0x20]
64015a78:	push   DWORD PTR [ebp+0x18]
64015a7b:	push   DWORD PTR [ebp+0x14]
64015a7e:	push   DWORD PTR [ebp+0x10]
64015a81:	push   esi
64015a82:	mov    esi,DWORD PTR [ebp+0xc]
64015a85:	call   0x640156ca
64015a8a:	mov    esi,DWORD PTR [ebp+0x8]
64015a8d:	add    esp,0x1c
64015a90:	inc    DWORD PTR [ebp-0x10]
64015a93:	add    edi,0x14
64015a96:	jmp    0x640159f8
64015a9b:	mov    edi,DWORD PTR [ebp+0x18]
64015a9e:	cmp    BYTE PTR [ebp+0x1c],0x0
64015aa2:	je     0x64015aae
64015aa4:	push   0x1
64015aa6:	push   esi
64015aa7:	call   0x640151e3
64015aac:	pop    ecx
64015aad:	pop    ecx
64015aae:	cmp    BYTE PTR [ebp-0x1],0x0
64015ab2:	jne    0x64015b66
64015ab8:	mov    eax,DWORD PTR [edi]
64015aba:	and    eax,0x1fffffff
64015abf:	cmp    eax,0x19930521
64015ac4:	jb     0x64015b66
64015aca:	mov    edi,DWORD PTR [edi+0x1c]
64015acd:	test   edi,edi
64015acf:	je     0x64015b66
64015ad5:	push   esi
64015ad6:	call   0x6401525c
64015adb:	test   al,al
64015add:	pop    ecx
64015ade:	jne    0x64015b66
64015ae4:	call   0x64014c9b
64015ae9:	call   0x64014c9b
64015aee:	call   0x64014c9b
64015af3:	mov    DWORD PTR [eax+0x88],esi
64015af9:	call   0x64014c9b
64015afe:	cmp    DWORD PTR [ebp+0x24],0x0
64015b02:	mov    ecx,DWORD PTR [ebp+0x10]
64015b05:	mov    DWORD PTR [eax+0x8c],ecx
64015b0b:	push   esi
64015b0c:	jne    0x64015b13
64015b0e:	push   DWORD PTR [ebp+0xc]
64015b11:	jmp    0x64015b16
64015b13:	push   DWORD PTR [ebp+0x24]
64015b16:	call   0x640127fc
64015b1b:	mov    esi,DWORD PTR [ebp+0x18]
64015b1e:	push   0xffffffff
64015b20:	push   esi
64015b21:	push   DWORD PTR [ebp+0x14]
64015b24:	push   DWORD PTR [ebp+0xc]
64015b27:	call   0x640150bd
64015b2c:	add    esp,0x10
64015b2f:	push   DWORD PTR [esi+0x1c]
64015b32:	call   0x640152d5
64015b37:	mov    ebx,DWORD PTR [ebp+0x18]
64015b3a:	cmp    DWORD PTR [ebx+0xc],0x0
64015b3e:	jbe    0x64015b66
64015b40:	cmp    BYTE PTR [ebp+0x1c],0x0
64015b44:	jne    0x64015966
64015b4a:	push   DWORD PTR [ebp+0x24]
64015b4d:	push   DWORD PTR [ebp+0x20]
64015b50:	push   DWORD PTR [ebp-0x8]
64015b53:	push   ebx
64015b54:	push   DWORD PTR [ebp+0x14]
64015b57:	push   DWORD PTR [ebp+0x10]
64015b5a:	push   DWORD PTR [ebp+0xc]
64015b5d:	push   esi
64015b5e:	call   0x64015736
64015b63:	add    esp,0x20
64015b66:	call   0x64014c9b
64015b6b:	cmp    DWORD PTR [eax+0x94],0x0
64015b72:	je     0x64015b79
64015b74:	call   0x64015cc6
64015b79:	pop    edi
64015b7a:	pop    esi
64015b7b:	pop    ebx
64015b7c:	leave  
64015b7d:	ret    
64015b7e:	push   esi
64015b7f:	push   DWORD PTR [esp+0x8]
64015b83:	mov    esi,ecx
64015b85:	call   0x640123f3
64015b8a:	mov    DWORD PTR [esi],0x64025d88
64015b90:	mov    eax,esi
64015b92:	pop    esi
64015b93:	ret    0x4
64015b96:	push   ebp
64015b97:	mov    ebp,esp
64015b99:	push   ebx
64015b9a:	push   esi
64015b9b:	push   edi
64015b9c:	call   0x64014c9b
64015ba1:	cmp    DWORD PTR [eax+0x20c],0x0
64015ba8:	mov    eax,DWORD PTR [ebp+0x18]
64015bab:	mov    ecx,DWORD PTR [ebp+0x8]
64015bae:	mov    edi,0xe06d7363
64015bb3:	mov    esi,0x1fffffff
64015bb8:	mov    ebx,0x19930522
64015bbd:	jne    0x64015bdf
64015bbf:	mov    edx,DWORD PTR [ecx]
64015bc1:	cmp    edx,edi
64015bc3:	je     0x64015bdf
64015bc5:	cmp    edx,0x80000026
64015bcb:	je     0x64015bdf
64015bcd:	mov    edx,DWORD PTR [eax]
64015bcf:	and    edx,esi
64015bd1:	cmp    edx,ebx
64015bd3:	jb     0x64015bdf
64015bd5:	test   BYTE PTR [eax+0x20],0x1
64015bd9:	jne    0x64015c72
64015bdf:	test   BYTE PTR [ecx+0x4],0x66
64015be3:	je     0x64015c08
64015be5:	cmp    DWORD PTR [eax+0x4],0x0
64015be9:	je     0x64015c72
64015bef:	cmp    DWORD PTR [ebp+0x1c],0x0
64015bf3:	jne    0x64015c72
64015bf5:	push   0xffffffff
64015bf7:	push   eax
64015bf8:	push   DWORD PTR [ebp+0x14]
64015bfb:	push   DWORD PTR [ebp+0xc]
64015bfe:	call   0x640150bd
64015c03:	add    esp,0x10
64015c06:	jmp    0x64015c72
64015c08:	cmp    DWORD PTR [eax+0xc],0x0
64015c0c:	jne    0x64015c20
64015c0e:	mov    edx,DWORD PTR [eax]
64015c10:	and    edx,esi
64015c12:	cmp    edx,0x19930521
64015c18:	jb     0x64015c72
64015c1a:	cmp    DWORD PTR [eax+0x1c],0x0
64015c1e:	je     0x64015c72
64015c20:	cmp    DWORD PTR [ecx],edi
64015c22:	jne    0x64015c56
64015c24:	cmp    DWORD PTR [ecx+0x10],0x3
64015c28:	jb     0x64015c56
64015c2a:	cmp    DWORD PTR [ecx+0x14],ebx
64015c2d:	jbe    0x64015c56
64015c2f:	mov    edx,DWORD PTR [ecx+0x1c]
64015c32:	mov    edx,DWORD PTR [edx+0x8]
64015c35:	test   edx,edx
64015c37:	je     0x64015c56
64015c39:	movzx  esi,BYTE PTR [ebp+0x24]
64015c3d:	push   esi
64015c3e:	push   DWORD PTR [ebp+0x20]
64015c41:	push   DWORD PTR [ebp+0x1c]
64015c44:	push   eax
64015c45:	push   DWORD PTR [ebp+0x14]
64015c48:	push   DWORD PTR [ebp+0x10]
64015c4b:	push   DWORD PTR [ebp+0xc]
64015c4e:	push   ecx
64015c4f:	call   edx
64015c51:	add    esp,0x20
64015c54:	jmp    0x64015c75
64015c56:	push   DWORD PTR [ebp+0x20]
64015c59:	push   DWORD PTR [ebp+0x1c]
64015c5c:	push   DWORD PTR [ebp+0x24]
64015c5f:	push   eax
64015c60:	push   DWORD PTR [ebp+0x14]
64015c63:	push   DWORD PTR [ebp+0x10]
64015c66:	push   DWORD PTR [ebp+0xc]
64015c69:	push   ecx
64015c6a:	call   0x64015828
64015c6f:	add    esp,0x20
64015c72:	xor    eax,eax
64015c74:	inc    eax
64015c75:	pop    edi
64015c76:	pop    esi
64015c77:	pop    ebx
64015c78:	pop    ebp
64015c79:	ret    
64015c7a:	push   0x8
64015c7c:	push   0x6402a7f8
64015c81:	call   0x64014150
64015c86:	call   0x64014c9b
64015c8b:	mov    eax,DWORD PTR [eax+0x78]
64015c8e:	test   eax,eax
64015c90:	je     0x64015ca8
64015c92:	and    DWORD PTR [ebp-0x4],0x0
64015c96:	call   eax
64015c98:	jmp    0x64015ca1
64015c9a:	xor    eax,eax
64015c9c:	inc    eax
64015c9d:	ret    
64015c9e:	mov    esp,DWORD PTR [ebp-0x18]
64015ca1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015ca8:	call   0x6401b2b8
64015cad:	call   0x64014195
64015cb2:	ret    
64015cb3:	call   0x64014c9b
64015cb8:	mov    eax,DWORD PTR [eax+0x7c]
64015cbb:	test   eax,eax
64015cbd:	je     0x64015cc1
64015cbf:	call   eax
64015cc1:	jmp    0x64015c7a
64015cc6:	push   0x8
64015cc8:	push   0x6402a818
64015ccd:	call   0x64014150
64015cd2:	push   DWORD PTR ds:0x6402e5a0
64015cd8:	call   0x64014a7f
64015cdd:	pop    ecx
64015cde:	test   eax,eax
64015ce0:	je     0x64015cf8
64015ce2:	and    DWORD PTR [ebp-0x4],0x0
64015ce6:	call   eax
64015ce8:	jmp    0x64015cf1
64015cea:	xor    eax,eax
64015cec:	inc    eax
64015ced:	ret    
64015cee:	mov    esp,DWORD PTR [ebp-0x18]
64015cf1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015cf8:	jmp    0x64015c7a
64015cfd:	push   0x64015c7a
64015d02:	call   0x64014a08
64015d07:	pop    ecx
64015d08:	mov    ds:0x6402e5a0,eax
64015d0d:	ret    
64015d0e:	int3   
64015d0f:	int3   
64015d10:	push   ebp
64015d11:	mov    ebp,esp
64015d13:	sub    esp,0x4
64015d16:	push   ebx
64015d17:	push   ecx
64015d18:	mov    eax,DWORD PTR [ebp+0xc]
64015d1b:	add    eax,0xc
64015d1e:	mov    DWORD PTR [ebp-0x4],eax
64015d21:	mov    eax,DWORD PTR [ebp+0x8]
64015d24:	push   ebp
64015d25:	push   DWORD PTR [ebp+0x10]
64015d28:	mov    ecx,DWORD PTR [ebp+0x10]
64015d2b:	mov    ebp,DWORD PTR [ebp-0x4]
64015d2e:	call   0x6401b4b8
64015d33:	push   esi
64015d34:	push   edi
64015d35:	call   eax
64015d37:	pop    edi
64015d38:	pop    esi
64015d39:	mov    ebx,ebp
64015d3b:	pop    ebp
64015d3c:	mov    ecx,DWORD PTR [ebp+0x10]
64015d3f:	push   ebp
64015d40:	mov    ebp,ebx
64015d42:	cmp    ecx,0x100
64015d48:	jne    0x64015d4f
64015d4a:	mov    ecx,0x2
64015d4f:	push   ecx
64015d50:	call   0x6401b4b8
64015d55:	pop    ebp
64015d56:	pop    ecx
64015d57:	pop    ebx
64015d58:	leave  
64015d59:	ret    0xc
64015d5c:	push   ebp
64015d5d:	mov    ebp,esp
64015d5f:	sub    esp,0x328
64015d65:	mov    ds:0x6402e6b0,eax
64015d6a:	mov    DWORD PTR ds:0x6402e6ac,ecx
64015d70:	mov    DWORD PTR ds:0x6402e6a8,edx
64015d76:	mov    DWORD PTR ds:0x6402e6a4,ebx
64015d7c:	mov    DWORD PTR ds:0x6402e6a0,esi
64015d82:	mov    DWORD PTR ds:0x6402e69c,edi
64015d88:	data16 mov WORD PTR ds:0x6402e6c8,ss
64015d8f:	data16 mov WORD PTR ds:0x6402e6bc,cs
64015d96:	data16 mov WORD PTR ds:0x6402e698,ds
64015d9d:	data16 mov WORD PTR ds:0x6402e694,es
64015da4:	data16 mov WORD PTR ds:0x6402e690,fs
64015dab:	data16 mov WORD PTR ds:0x6402e68c,gs
64015db2:	pushf  
64015db3:	pop    DWORD PTR ds:0x6402e6c0
64015db9:	mov    eax,DWORD PTR [ebp+0x0]
64015dbc:	mov    ds:0x6402e6b4,eax
64015dc1:	mov    eax,DWORD PTR [ebp+0x4]
64015dc4:	mov    ds:0x6402e6b8,eax
64015dc9:	lea    eax,[ebp+0x8]
64015dcc:	mov    ds:0x6402e6c4,eax
64015dd1:	mov    eax,DWORD PTR [ebp-0x320]
64015dd7:	mov    DWORD PTR ds:0x6402e600,0x10001
64015de1:	mov    eax,ds:0x6402e6b8
64015de6:	mov    ds:0x6402e5b4,eax
64015deb:	mov    DWORD PTR ds:0x6402e5a8,0xc0000409
64015df5:	mov    DWORD PTR ds:0x6402e5ac,0x1
64015dff:	mov    eax,ds:0x6402d09c
64015e04:	mov    DWORD PTR [ebp-0x328],eax
64015e0a:	mov    eax,ds:0x6402d0a0
64015e0f:	mov    DWORD PTR [ebp-0x324],eax
64015e15:	call   DWORD PTR ds:0x64025118
64015e1b:	mov    ds:0x6402e5f8,eax
64015e20:	push   0x1
64015e22:	call   0x64014994
64015e27:	pop    ecx
64015e28:	push   0x0
64015e2a:	call   DWORD PTR ds:0x64025114
64015e30:	push   0x64025da0
64015e35:	call   DWORD PTR ds:0x64025110
64015e3b:	cmp    DWORD PTR ds:0x6402e5f8,0x0
64015e42:	jne    0x64015e4c
64015e44:	push   0x1
64015e46:	call   0x64014994
64015e4b:	pop    ecx
64015e4c:	push   0xc0000409
64015e51:	call   DWORD PTR ds:0x64025048
64015e57:	push   eax
64015e58:	call   DWORD PTR ds:0x6402510c
64015e5e:	leave  
64015e5f:	ret    
64015e60:	push   esi
64015e61:	push   edi
64015e62:	xor    esi,esi
64015e64:	push   DWORD PTR [esp+0xc]
64015e68:	call   0x64013b03
64015e6d:	mov    edi,eax
64015e6f:	test   edi,edi
64015e71:	pop    ecx
64015e72:	jne    0x64015e9b
64015e74:	cmp    DWORD PTR ds:0x6402e8cc,eax
64015e7a:	jbe    0x64015e9b
64015e7c:	push   esi
64015e7d:	call   DWORD PTR ds:0x64025050
64015e83:	lea    eax,[esi+0x3e8]
64015e89:	cmp    eax,DWORD PTR ds:0x6402e8cc
64015e8f:	jbe    0x64015e94
64015e91:	or     eax,0xffffffff
64015e94:	cmp    eax,0xffffffff
64015e97:	mov    esi,eax
64015e99:	jne    0x64015e64
64015e9b:	mov    eax,edi
64015e9d:	pop    edi
64015e9e:	pop    esi
64015e9f:	ret    
64015ea0:	push   esi
64015ea1:	push   edi
64015ea2:	xor    esi,esi
64015ea4:	push   0x0
64015ea6:	push   DWORD PTR [esp+0x14]
64015eaa:	push   DWORD PTR [esp+0x14]
64015eae:	call   0x6401b4e3
64015eb3:	mov    edi,eax
64015eb5:	add    esp,0xc
64015eb8:	test   edi,edi
64015eba:	jne    0x64015ee3
64015ebc:	cmp    DWORD PTR ds:0x6402e8cc,eax
64015ec2:	jbe    0x64015ee3
64015ec4:	push   esi
64015ec5:	call   DWORD PTR ds:0x64025050
64015ecb:	lea    eax,[esi+0x3e8]
64015ed1:	cmp    eax,DWORD PTR ds:0x6402e8cc
64015ed7:	jbe    0x64015edc
64015ed9:	or     eax,0xffffffff
64015edc:	cmp    eax,0xffffffff
64015edf:	mov    esi,eax
64015ee1:	jne    0x64015ea4
64015ee3:	mov    eax,edi
64015ee5:	pop    edi
64015ee6:	pop    esi
64015ee7:	ret    
64015ee8:	push   esi
64015ee9:	push   edi
64015eea:	xor    esi,esi
64015eec:	push   DWORD PTR [esp+0x10]
64015ef0:	push   DWORD PTR [esp+0x10]
64015ef4:	call   0x64013f35
64015ef9:	mov    edi,eax
64015efb:	test   edi,edi
64015efd:	pop    ecx
64015efe:	pop    ecx
64015eff:	jne    0x64015f2e
64015f01:	cmp    DWORD PTR [esp+0x10],eax
64015f05:	je     0x64015f2e
64015f07:	cmp    DWORD PTR ds:0x6402e8cc,eax
64015f0d:	jbe    0x64015f2e
64015f0f:	push   esi
64015f10:	call   DWORD PTR ds:0x64025050
64015f16:	lea    eax,[esi+0x3e8]
64015f1c:	cmp    eax,DWORD PTR ds:0x6402e8cc
64015f22:	jbe    0x64015f27
64015f24:	or     eax,0xffffffff
64015f27:	cmp    eax,0xffffffff
64015f2a:	mov    esi,eax
64015f2c:	jne    0x64015eec
64015f2e:	mov    eax,edi
64015f30:	pop    edi
64015f31:	pop    esi
64015f32:	ret    
64015f33:	push   0x10
64015f35:	push   0x6402a838
64015f3a:	call   0x64014150
64015f3f:	xor    eax,eax
64015f41:	mov    ebx,DWORD PTR [ebp+0x8]
64015f44:	xor    edi,edi
64015f46:	cmp    ebx,edi
64015f48:	setne  al
64015f4b:	cmp    eax,edi
64015f4d:	jne    0x64015f6c
64015f4f:	call   0x64014950
64015f54:	mov    DWORD PTR [eax],0x16
64015f5a:	push   edi
64015f5b:	push   edi
64015f5c:	push   edi
64015f5d:	push   edi
64015f5e:	push   edi
64015f5f:	call   0x640126c4
64015f64:	add    esp,0x14
64015f67:	or     eax,0xffffffff
64015f6a:	jmp    0x64015fbf
64015f6c:	cmp    DWORD PTR ds:0x640324fc,0x3
64015f73:	jne    0x64015fad
64015f75:	push   0x4
64015f77:	call   0x6401a19a
64015f7c:	pop    ecx
64015f7d:	mov    DWORD PTR [ebp-0x4],edi
64015f80:	push   ebx
64015f81:	call   0x6401a213
64015f86:	pop    ecx
64015f87:	mov    DWORD PTR [ebp-0x20],eax
64015f8a:	cmp    eax,edi
64015f8c:	je     0x64015f99
64015f8e:	mov    esi,DWORD PTR [ebx-0x4]
64015f91:	sub    esi,0x9
64015f94:	mov    DWORD PTR [ebp-0x1c],esi
64015f97:	jmp    0x64015f9c
64015f99:	mov    esi,DWORD PTR [ebp-0x1c]
64015f9c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015fa3:	call   0x64015fcd
64015fa8:	cmp    DWORD PTR [ebp-0x20],edi
64015fab:	jne    0x64015fbd
64015fad:	push   ebx
64015fae:	push   edi
64015faf:	push   DWORD PTR ds:0x6402ea6c
64015fb5:	call   DWORD PTR ds:0x64025104
64015fbb:	mov    esi,eax
64015fbd:	mov    eax,esi
64015fbf:	call   0x64014195
64015fc4:	ret    
64015fc5:	xor    edi,edi
64015fc7:	mov    ebx,DWORD PTR [ebp+0x8]
64015fca:	mov    esi,DWORD PTR [ebp-0x1c]
64015fcd:	push   0x4
64015fcf:	call   0x6401a0c2
64015fd4:	pop    ecx
64015fd5:	ret    
64015fd6:	call   0x6401ae6a
64015fdb:	push   DWORD PTR [esp+0x4]
64015fdf:	call   0x6401acca
64015fe4:	push   DWORD PTR ds:0x6402d260
64015fea:	call   0x64014a7f
64015fef:	push   0xff
64015ff4:	call   eax
64015ff6:	add    esp,0xc
64015ff9:	ret    
64015ffa:	push   0x64025db8
64015fff:	call   DWORD PTR ds:0x64025128
64016005:	test   eax,eax
64016007:	je     0x6401601f
64016009:	push   0x64025da8
6401600e:	push   eax
6401600f:	call   DWORD PTR ds:0x64025014
64016015:	test   eax,eax
64016017:	je     0x6401601f
64016019:	push   DWORD PTR [esp+0x4]
6401601d:	call   eax
6401601f:	ret    
64016020:	push   DWORD PTR [esp+0x4]
64016024:	call   0x64015ffa
64016029:	pop    ecx
6401602a:	push   DWORD PTR [esp+0x4]
6401602e:	call   DWORD PTR ds:0x6402513c
64016034:	int3   
64016035:	push   0x8
64016037:	call   0x6401a19a
6401603c:	pop    ecx
6401603d:	ret    
6401603e:	push   0x8
64016040:	call   0x6401a0c2
64016045:	pop    ecx
64016046:	ret    
64016047:	push   esi
64016048:	mov    esi,eax
6401604a:	jmp    0x64016057
6401604c:	mov    eax,DWORD PTR [esi]
6401604e:	test   eax,eax
64016050:	je     0x64016054
64016052:	call   eax
64016054:	add    esi,0x4
64016057:	cmp    esi,DWORD PTR [esp+0x8]
6401605b:	jb     0x6401604c
6401605d:	pop    esi
6401605e:	ret    
6401605f:	push   esi
64016060:	mov    esi,DWORD PTR [esp+0x8]
64016064:	xor    eax,eax
64016066:	jmp    0x64016077
64016068:	test   eax,eax
6401606a:	jne    0x6401607d
6401606c:	mov    ecx,DWORD PTR [esi]
6401606e:	test   ecx,ecx
64016070:	je     0x64016074
64016072:	call   ecx
64016074:	add    esi,0x4
64016077:	cmp    esi,DWORD PTR [esp+0xc]
6401607b:	jb     0x64016068
6401607d:	pop    esi
6401607e:	ret    
6401607f:	mov    ecx,DWORD PTR [esp+0x4]
64016083:	push   esi
64016084:	xor    esi,esi
64016086:	cmp    ecx,esi
64016088:	jne    0x640160a7
6401608a:	call   0x64014950
6401608f:	push   esi
64016090:	push   esi
64016091:	push   esi
64016092:	push   esi
64016093:	push   esi
64016094:	mov    DWORD PTR [eax],0x16
6401609a:	call   0x640126c4
6401609f:	add    esp,0x14
640160a2:	push   0x16
640160a4:	pop    eax
640160a5:	pop    esi
640160a6:	ret    
640160a7:	mov    eax,ds:0x6402e8d4
640160ac:	cmp    eax,esi
640160ae:	je     0x6401608a
640160b0:	mov    DWORD PTR [ecx],eax
640160b2:	xor    eax,eax
640160b4:	pop    esi
640160b5:	ret    
640160b6:	mov    eax,DWORD PTR [esp+0x4]
640160ba:	push   esi
640160bb:	xor    esi,esi
640160bd:	cmp    eax,esi
640160bf:	jne    0x640160de
640160c1:	call   0x64014950
640160c6:	push   esi
640160c7:	push   esi
640160c8:	push   esi
640160c9:	push   esi
640160ca:	push   esi
640160cb:	mov    DWORD PTR [eax],0x16
640160d1:	call   0x640126c4
640160d6:	add    esp,0x14
640160d9:	push   0x16
640160db:	pop    eax
640160dc:	pop    esi
640160dd:	ret    
640160de:	cmp    DWORD PTR ds:0x6402e8d4,esi
640160e4:	je     0x640160c1
640160e6:	mov    ecx,DWORD PTR ds:0x6402e8e0
640160ec:	mov    DWORD PTR [eax],ecx
640160ee:	xor    eax,eax
640160f0:	pop    esi
640160f1:	ret    
640160f2:	cmp    DWORD PTR ds:0x6402762c,0x0
640160f9:	je     0x64016115
640160fb:	push   0x6402762c
64016100:	call   0x6401b1f0
64016105:	test   eax,eax
64016107:	pop    ecx
64016108:	je     0x64016115
6401610a:	push   DWORD PTR [esp+0x4]
6401610e:	call   DWORD PTR ds:0x6402762c
64016114:	pop    ecx
64016115:	call   0x6401b601
6401611a:	push   0x640252c4
6401611f:	push   0x640252ac
64016124:	call   0x6401605f
64016129:	test   eax,eax
6401612b:	pop    ecx
6401612c:	pop    ecx
6401612d:	jne    0x64016183
6401612f:	push   esi
64016130:	push   edi
64016131:	push   0x64018bd0
64016136:	call   0x64012cbf
6401613b:	mov    esi,0x640251e8
64016140:	mov    eax,esi
64016142:	mov    edi,0x640252a8
64016147:	cmp    eax,edi
64016149:	pop    ecx
6401614a:	jae    0x6401615b
6401614c:	mov    eax,DWORD PTR [esi]
6401614e:	test   eax,eax
64016150:	je     0x64016154
64016152:	call   eax
64016154:	add    esi,0x4
64016157:	cmp    esi,edi
64016159:	jb     0x6401614c
6401615b:	cmp    DWORD PTR ds:0x64032638,0x0
64016162:	pop    edi
64016163:	pop    esi
64016164:	je     0x64016181
64016166:	push   0x64032638
6401616b:	call   0x6401b1f0
64016170:	test   eax,eax
64016172:	pop    ecx
64016173:	je     0x64016181
64016175:	push   0x0
64016177:	push   0x2
64016179:	push   0x0
6401617b:	call   DWORD PTR ds:0x64032638
64016181:	xor    eax,eax
64016183:	ret    
64016184:	push   0x10
64016186:	push   0x6402a858
6401618b:	call   0x64014150
64016190:	push   0x8
64016192:	call   0x6401a19a
64016197:	pop    ecx
64016198:	xor    edi,edi
6401619a:	mov    DWORD PTR [ebp-0x4],edi
6401619d:	xor    ebx,ebx
6401619f:	inc    ebx
640161a0:	cmp    DWORD PTR ds:0x6402e914,ebx
640161a6:	je     0x64016226
640161a8:	mov    DWORD PTR ds:0x6402e910,ebx
640161ae:	mov    al,BYTE PTR [ebp+0x10]
640161b1:	mov    ds:0x6402e90c,al
640161b6:	cmp    DWORD PTR [ebp+0xc],edi
640161b9:	jne    0x64016216
640161bb:	push   DWORD PTR ds:0x64032630
640161c1:	call   0x64014a7f
640161c6:	mov    DWORD PTR [ebp-0x1c],eax
640161c9:	push   DWORD PTR ds:0x6403262c
640161cf:	call   0x64014a7f
640161d4:	pop    ecx
640161d5:	pop    ecx
640161d6:	mov    esi,eax
640161d8:	mov    DWORD PTR [ebp-0x20],esi
640161db:	cmp    DWORD PTR [ebp-0x1c],edi
640161de:	je     0x64016206
640161e0:	sub    esi,0x4
640161e3:	mov    DWORD PTR [ebp-0x20],esi
640161e6:	cmp    esi,DWORD PTR [ebp-0x1c]
640161e9:	jb     0x64016206
640161eb:	cmp    DWORD PTR [esi],0x0
640161ee:	je     0x640161e0
640161f0:	mov    edi,DWORD PTR [esi]
640161f2:	call   0x64014a76
640161f7:	cmp    edi,eax
640161f9:	je     0x640161e0
640161fb:	push   edi
640161fc:	call   0x64014a7f
64016201:	pop    ecx
64016202:	call   eax
64016204:	jmp    0x640161e0
64016206:	push   0x640252d4
6401620b:	mov    eax,0x640252c8
64016210:	call   0x64016047
64016215:	pop    ecx
64016216:	push   0x640252dc
6401621b:	mov    eax,0x640252d8
64016220:	call   0x64016047
64016225:	pop    ecx
64016226:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401622d:	call   0x64016251
64016232:	cmp    DWORD PTR [ebp+0x10],0x0
64016236:	jne    0x64016260
64016238:	mov    DWORD PTR ds:0x6402e914,ebx
6401623e:	push   0x8
64016240:	call   0x6401a0c2
64016245:	pop    ecx
64016246:	push   DWORD PTR [ebp+0x8]
64016249:	call   0x64016020
6401624e:	xor    ebx,ebx
64016250:	inc    ebx
64016251:	cmp    DWORD PTR [ebp+0x10],0x0
64016255:	je     0x6401625f
64016257:	push   0x8
64016259:	call   0x6401a0c2
6401625e:	pop    ecx
6401625f:	ret    
64016260:	call   0x64014195
64016265:	ret    
64016266:	push   0x0
64016268:	push   0x1
6401626a:	push   DWORD PTR [esp+0xc]
6401626e:	call   0x64016184
64016273:	add    esp,0xc
64016276:	ret    
64016277:	push   0x1
64016279:	push   0x0
6401627b:	push   0x0
6401627d:	call   0x64016184
64016282:	add    esp,0xc
64016285:	ret    
64016286:	push   esi
64016287:	call   0x64014a76
6401628c:	mov    esi,eax
6401628e:	push   esi
6401628f:	call   0x64014fc1
64016294:	push   esi
64016295:	call   0x6401b83e
6401629a:	push   esi
6401629b:	call   0x640125be
640162a0:	push   esi
640162a1:	call   0x6401b834
640162a6:	push   esi
640162a7:	call   0x6401b82a
640162ac:	push   esi
640162ad:	call   0x6401b620
640162b2:	push   esi
640162b3:	call   0x6401f007
640162b8:	push   esi
640162b9:	call   0x64015cfd
640162be:	push   0x64016266
640162c3:	call   0x64014a08
640162c8:	add    esp,0x24
640162cb:	mov    ds:0x6402d260,eax
640162d0:	pop    esi
640162d1:	ret    
640162d2:	sub    eax,0x3a4
640162d7:	je     0x640162fb
640162d9:	sub    eax,0x4
640162dc:	je     0x640162f5
640162de:	sub    eax,0xd
640162e1:	je     0x640162ef
640162e3:	dec    eax
640162e4:	je     0x640162e9
640162e6:	xor    eax,eax
640162e8:	ret    
640162e9:	mov    eax,0x404
640162ee:	ret    
640162ef:	mov    eax,0x412
640162f4:	ret    
640162f5:	mov    eax,0x804
640162fa:	ret    
640162fb:	mov    eax,0x411
64016300:	ret    
64016301:	push   ebx
64016302:	push   ebp
64016303:	push   esi
64016304:	push   edi
64016305:	mov    ebp,0x101
6401630a:	mov    esi,eax
6401630c:	push   ebp
6401630d:	xor    edi,edi
6401630f:	lea    ebx,[esi+0x1c]
64016312:	push   edi
64016313:	push   ebx
64016314:	call   0x64013290
64016319:	mov    DWORD PTR [esi+0x4],edi
6401631c:	mov    DWORD PTR [esi+0x8],edi
6401631f:	mov    DWORD PTR [esi+0xc],edi
64016322:	xor    eax,eax
64016324:	lea    edi,[esi+0x10]
64016327:	stos   DWORD PTR es:[edi],eax
64016328:	stos   DWORD PTR es:[edi],eax
64016329:	stos   DWORD PTR es:[edi],eax
6401632a:	mov    eax,0x6402d268
6401632f:	add    esp,0xc
64016332:	sub    eax,esi
64016334:	mov    cl,BYTE PTR [eax+ebx*1]
64016337:	mov    BYTE PTR [ebx],cl
64016339:	inc    ebx
6401633a:	dec    ebp
6401633b:	jne    0x64016334
6401633d:	lea    ecx,[esi+0x11d]
64016343:	mov    esi,0x100
64016348:	mov    dl,BYTE PTR [ecx+eax*1]
6401634b:	mov    BYTE PTR [ecx],dl
6401634d:	inc    ecx
6401634e:	dec    esi
6401634f:	jne    0x64016348
64016351:	pop    edi
64016352:	pop    esi
64016353:	pop    ebp
64016354:	pop    ebx
64016355:	ret    
64016356:	push   ebp
64016357:	lea    ebp,[esp-0x49c]
6401635e:	sub    esp,0x51c
64016364:	mov    eax,ds:0x6402d09c
64016369:	xor    eax,ebp
6401636b:	mov    DWORD PTR [ebp+0x498],eax
64016371:	push   ebx
64016372:	push   edi
64016373:	lea    eax,[ebp-0x7c]
64016376:	push   eax
64016377:	push   DWORD PTR [esi+0x4]
6401637a:	call   DWORD PTR ds:0x64025140
64016380:	test   eax,eax
64016382:	mov    edi,0x100
64016387:	je     0x6401647c
6401638d:	xor    eax,eax
6401638f:	mov    BYTE PTR [ebp+eax*1+0x398],al
64016396:	inc    eax
64016397:	cmp    eax,edi
64016399:	jb     0x6401638f
6401639b:	mov    al,BYTE PTR [ebp-0x76]
6401639e:	test   al,al
640163a0:	mov    BYTE PTR [ebp+0x398],0x20
640163a7:	je     0x640163d4
640163a9:	lea    ebx,[ebp-0x75]
640163ac:	movzx  ecx,al
640163af:	movzx  eax,BYTE PTR [ebx]
640163b2:	cmp    ecx,eax
640163b4:	ja     0x640163cc
640163b6:	sub    eax,ecx
640163b8:	inc    eax
640163b9:	push   eax
640163ba:	lea    edx,[ebp+ecx*1+0x398]
640163c1:	push   0x20
640163c3:	push   edx
640163c4:	call   0x64013290
640163c9:	add    esp,0xc
640163cc:	inc    ebx
640163cd:	mov    al,BYTE PTR [ebx]
640163cf:	inc    ebx
640163d0:	test   al,al
640163d2:	jne    0x640163ac
640163d4:	push   0x0
640163d6:	push   DWORD PTR [esi+0xc]
640163d9:	lea    eax,[ebp-0x68]
640163dc:	push   DWORD PTR [esi+0x4]
640163df:	push   eax
640163e0:	push   edi
640163e1:	lea    eax,[ebp+0x398]
640163e7:	push   eax
640163e8:	push   0x1
640163ea:	push   0x0
640163ec:	call   0x6401bad5
640163f1:	xor    ebx,ebx
640163f3:	push   ebx
640163f4:	push   DWORD PTR [esi+0x4]
640163f7:	lea    eax,[ebp+0x298]
640163fd:	push   edi
640163fe:	push   eax
640163ff:	push   edi
64016400:	lea    eax,[ebp+0x398]
64016406:	push   eax
64016407:	push   edi
64016408:	push   DWORD PTR [esi+0xc]
6401640b:	push   ebx
6401640c:	call   0x64019ee7
64016411:	add    esp,0x44
64016414:	push   ebx
64016415:	push   DWORD PTR [esi+0x4]
64016418:	lea    eax,[ebp+0x198]
6401641e:	push   edi
6401641f:	push   eax
64016420:	push   edi
64016421:	lea    eax,[ebp+0x398]
64016427:	push   eax
64016428:	push   0x200
6401642d:	push   DWORD PTR [esi+0xc]
64016430:	push   ebx
64016431:	call   0x64019ee7
64016436:	add    esp,0x24
64016439:	xor    eax,eax
6401643b:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64016440:	test   cl,0x1
64016443:	je     0x64016453
64016445:	or     BYTE PTR [esi+eax*1+0x1d],0x10
6401644a:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64016451:	jmp    0x64016464
64016453:	test   cl,0x2
64016456:	je     0x6401646d
64016458:	or     BYTE PTR [esi+eax*1+0x1d],0x20
6401645d:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64016464:	mov    BYTE PTR [esi+eax*1+0x11d],cl
6401646b:	jmp    0x64016475
6401646d:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64016475:	inc    eax
64016476:	cmp    eax,edi
64016478:	jb     0x6401643b
6401647a:	jmp    0x640164c9
6401647c:	lea    eax,[esi+0x11d]
64016482:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64016489:	xor    ecx,ecx
6401648b:	sub    DWORD PTR [ebp-0x80],eax
6401648e:	mov    edx,DWORD PTR [ebp-0x80]
64016491:	lea    eax,[esi+ecx*1+0x11d]
64016498:	add    edx,eax
6401649a:	lea    ebx,[edx+0x20]
6401649d:	cmp    ebx,0x19
640164a0:	ja     0x640164ae
640164a2:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
640164a7:	mov    dl,cl
640164a9:	add    dl,0x20
640164ac:	jmp    0x640164bd
640164ae:	cmp    edx,0x19
640164b1:	ja     0x640164c1
640164b3:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
640164b8:	mov    dl,cl
640164ba:	sub    dl,0x20
640164bd:	mov    BYTE PTR [eax],dl
640164bf:	jmp    0x640164c4
640164c1:	mov    BYTE PTR [eax],0x0
640164c4:	inc    ecx
640164c5:	cmp    ecx,edi
640164c7:	jb     0x6401648e
640164c9:	mov    ecx,DWORD PTR [ebp+0x498]
640164cf:	pop    edi
640164d0:	xor    ecx,ebp
640164d2:	pop    ebx
640164d3:	call   0x64012b8c
640164d8:	add    ebp,0x49c
640164de:	leave  
640164df:	ret    
640164e0:	push   0xc
640164e2:	push   0x6402a878
640164e7:	call   0x64014150
640164ec:	call   0x64014c9b
640164f1:	mov    edi,eax
640164f3:	mov    eax,ds:0x6402d78c
640164f8:	test   DWORD PTR [edi+0x70],eax
640164fb:	je     0x6401651a
640164fd:	cmp    DWORD PTR [edi+0x6c],0x0
64016501:	je     0x6401651a
64016503:	mov    esi,DWORD PTR [edi+0x68]
64016506:	test   esi,esi
64016508:	jne    0x64016512
6401650a:	push   0x20
6401650c:	call   0x64015fd6
64016511:	pop    ecx
64016512:	mov    eax,esi
64016514:	call   0x64014195
64016519:	ret    
6401651a:	push   0xd
6401651c:	call   0x6401a19a
64016521:	pop    ecx
64016522:	and    DWORD PTR [ebp-0x4],0x0
64016526:	mov    esi,DWORD PTR [edi+0x68]
64016529:	mov    DWORD PTR [ebp-0x1c],esi
6401652c:	cmp    esi,DWORD PTR ds:0x6402d690
64016532:	je     0x6401656a
64016534:	test   esi,esi
64016536:	je     0x64016552
64016538:	push   esi
64016539:	call   DWORD PTR ds:0x64025098
6401653f:	test   eax,eax
64016541:	jne    0x64016552
64016543:	cmp    esi,0x6402d268
64016549:	je     0x64016552
6401654b:	push   esi
6401654c:	call   0x64013a26
64016551:	pop    ecx
64016552:	mov    eax,ds:0x6402d690
64016557:	mov    DWORD PTR [edi+0x68],eax
6401655a:	mov    esi,DWORD PTR ds:0x6402d690
64016560:	mov    DWORD PTR [ebp-0x1c],esi
64016563:	push   esi
64016564:	call   DWORD PTR ds:0x64025020
6401656a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016571:	call   0x6401657b
64016576:	jmp    0x64016506
64016578:	mov    esi,DWORD PTR [ebp-0x1c]
6401657b:	push   0xd
6401657d:	call   0x6401a0c2
64016582:	pop    ecx
64016583:	ret    
64016584:	push   ebp
64016585:	mov    ebp,esp
64016587:	sub    esp,0x10
6401658a:	push   ebx
6401658b:	xor    ebx,ebx
6401658d:	push   ebx
6401658e:	lea    ecx,[ebp-0x10]
64016591:	call   0x64012d2f
64016596:	cmp    esi,0xfffffffe
64016599:	mov    DWORD PTR ds:0x6402e918,ebx
6401659f:	jne    0x640165bf
640165a1:	mov    DWORD PTR ds:0x6402e918,0x1
640165ab:	call   DWORD PTR ds:0x64025144
640165b1:	cmp    BYTE PTR [ebp-0x4],bl
640165b4:	je     0x640165fb
640165b6:	mov    ecx,DWORD PTR [ebp-0x8]
640165b9:	and    DWORD PTR [ecx+0x70],0xfffffffd
640165bd:	jmp    0x640165fb
640165bf:	cmp    esi,0xfffffffd
640165c2:	jne    0x640165d6
640165c4:	mov    DWORD PTR ds:0x6402e918,0x1
640165ce:	call   DWORD PTR ds:0x640250e0
640165d4:	jmp    0x640165b1
640165d6:	cmp    esi,0xfffffffc
640165d9:	jne    0x640165ed
640165db:	mov    eax,DWORD PTR [ebp-0x10]
640165de:	mov    eax,DWORD PTR [eax+0x4]
640165e1:	mov    DWORD PTR ds:0x6402e918,0x1
640165eb:	jmp    0x640165b1
640165ed:	cmp    BYTE PTR [ebp-0x4],bl
640165f0:	je     0x640165f9
640165f2:	mov    eax,DWORD PTR [ebp-0x8]
640165f5:	and    DWORD PTR [eax+0x70],0xfffffffd
640165f9:	mov    eax,esi
640165fb:	pop    ebx
640165fc:	leave  
640165fd:	ret    
640165fe:	push   ebp
640165ff:	mov    ebp,esp
64016601:	sub    esp,0x20
64016604:	mov    eax,ds:0x6402d09c
64016609:	xor    eax,ebp
6401660b:	mov    DWORD PTR [ebp-0x4],eax
6401660e:	push   ebx
6401660f:	mov    ebx,DWORD PTR [ebp+0xc]
64016612:	push   esi
64016613:	mov    esi,DWORD PTR [ebp+0x8]
64016616:	push   edi
64016617:	call   0x64016584
6401661c:	mov    edi,eax
6401661e:	xor    esi,esi
64016620:	cmp    edi,esi
64016622:	mov    DWORD PTR [ebp+0x8],edi
64016625:	jne    0x64016635
64016627:	mov    eax,ebx
64016629:	call   0x64016301
6401662e:	xor    eax,eax
64016630:	jmp    0x640167c8
64016635:	mov    DWORD PTR [ebp-0x1c],esi
64016638:	xor    eax,eax
6401663a:	cmp    DWORD PTR [eax+0x6402d698],edi
64016640:	je     0x640166d7
64016646:	inc    DWORD PTR [ebp-0x1c]
64016649:	add    eax,0x30
6401664c:	cmp    eax,0xf0
64016651:	jb     0x6401663a
64016653:	cmp    edi,0xfde8
64016659:	je     0x640167c5
6401665f:	cmp    edi,0xfde9
64016665:	je     0x640167c5
6401666b:	movzx  eax,di
6401666e:	push   eax
6401666f:	call   DWORD PTR ds:0x64025148
64016675:	test   eax,eax
64016677:	je     0x640167c5
6401667d:	lea    eax,[ebp-0x18]
64016680:	push   eax
64016681:	push   edi
64016682:	call   DWORD PTR ds:0x64025140
64016688:	test   eax,eax
6401668a:	je     0x640167b9
64016690:	push   0x101
64016695:	lea    eax,[ebx+0x1c]
64016698:	push   esi
64016699:	push   eax
6401669a:	call   0x64013290
6401669f:	xor    edx,edx
640166a1:	inc    edx
640166a2:	add    esp,0xc
640166a5:	cmp    DWORD PTR [ebp-0x18],edx
640166a8:	mov    DWORD PTR [ebx+0x4],edi
640166ab:	mov    DWORD PTR [ebx+0xc],esi
640166ae:	jbe    0x640167ac
640166b4:	cmp    BYTE PTR [ebp-0x12],0x0
640166b8:	je     0x6401678d
640166be:	lea    esi,[ebp-0x11]
640166c1:	mov    cl,BYTE PTR [esi]
640166c3:	test   cl,cl
640166c5:	je     0x6401678d
640166cb:	movzx  eax,BYTE PTR [esi-0x1]
640166cf:	movzx  ecx,cl
640166d2:	jmp    0x6401677d
640166d7:	push   0x101
640166dc:	lea    eax,[ebx+0x1c]
640166df:	push   esi
640166e0:	push   eax
640166e1:	call   0x64013290
640166e6:	mov    ecx,DWORD PTR [ebp-0x1c]
640166e9:	add    esp,0xc
640166ec:	imul   ecx,ecx,0x30
640166ef:	mov    DWORD PTR [ebp-0x20],esi
640166f2:	lea    esi,[ecx+0x6402d6a8]
640166f8:	mov    DWORD PTR [ebp-0x1c],esi
640166fb:	jmp    0x64016727
640166fd:	mov    al,BYTE PTR [esi+0x1]
64016700:	test   al,al
64016702:	je     0x6401672c
64016704:	movzx  edi,BYTE PTR [esi]
64016707:	movzx  eax,al
6401670a:	jmp    0x6401671e
6401670c:	mov    eax,DWORD PTR [ebp-0x20]
6401670f:	mov    al,BYTE PTR [eax+0x6402d694]
64016715:	or     BYTE PTR [ebx+edi*1+0x1d],al
64016719:	movzx  eax,BYTE PTR [esi+0x1]
6401671d:	inc    edi
6401671e:	cmp    edi,eax
64016720:	jbe    0x6401670c
64016722:	mov    edi,DWORD PTR [ebp+0x8]
64016725:	inc    esi
64016726:	inc    esi
64016727:	cmp    BYTE PTR [esi],0x0
6401672a:	jne    0x640166fd
6401672c:	mov    esi,DWORD PTR [ebp-0x1c]
6401672f:	inc    DWORD PTR [ebp-0x20]
64016732:	add    esi,0x8
64016735:	cmp    DWORD PTR [ebp-0x20],0x4
64016739:	mov    DWORD PTR [ebp-0x1c],esi
6401673c:	jb     0x64016727
6401673e:	mov    eax,edi
64016740:	mov    DWORD PTR [ebx+0x4],edi
64016743:	mov    DWORD PTR [ebx+0x8],0x1
6401674a:	call   0x640162d2
6401674f:	push   0x6
64016751:	mov    DWORD PTR [ebx+0xc],eax
64016754:	lea    eax,[ebx+0x10]
64016757:	lea    ecx,[ecx+0x6402d69c]
6401675d:	pop    edx
6401675e:	mov    si,WORD PTR [ecx]
64016761:	inc    ecx
64016762:	mov    WORD PTR [eax],si
64016765:	inc    ecx
64016766:	inc    eax
64016767:	inc    eax
64016768:	dec    edx
64016769:	jne    0x6401675e
6401676b:	mov    esi,ebx
6401676d:	call   0x64016356
64016772:	jmp    0x6401662e
64016777:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
6401677c:	inc    eax
6401677d:	cmp    eax,ecx
6401677f:	jbe    0x64016777
64016781:	inc    esi
64016782:	inc    esi
64016783:	cmp    BYTE PTR [esi-0x1],0x0
64016787:	jne    0x640166c1
6401678d:	lea    eax,[ebx+0x1e]
64016790:	mov    ecx,0xfe
64016795:	or     BYTE PTR [eax],0x8
64016798:	inc    eax
64016799:	dec    ecx
6401679a:	jne    0x64016795
6401679c:	mov    eax,DWORD PTR [ebx+0x4]
6401679f:	call   0x640162d2
640167a4:	mov    DWORD PTR [ebx+0xc],eax
640167a7:	mov    DWORD PTR [ebx+0x8],edx
640167aa:	jmp    0x640167af
640167ac:	mov    DWORD PTR [ebx+0x8],esi
640167af:	xor    eax,eax
640167b1:	lea    edi,[ebx+0x10]
640167b4:	stos   DWORD PTR es:[edi],eax
640167b5:	stos   DWORD PTR es:[edi],eax
640167b6:	stos   DWORD PTR es:[edi],eax
640167b7:	jmp    0x6401676b
640167b9:	cmp    DWORD PTR ds:0x6402e918,esi
640167bf:	jne    0x64016627
640167c5:	or     eax,0xffffffff
640167c8:	mov    ecx,DWORD PTR [ebp-0x4]
640167cb:	pop    edi
640167cc:	pop    esi
640167cd:	xor    ecx,ebp
640167cf:	pop    ebx
640167d0:	call   0x64012b8c
640167d5:	leave  
640167d6:	ret    
640167d7:	push   0x14
640167d9:	push   0x6402a898
640167de:	call   0x64014150
640167e3:	or     DWORD PTR [ebp-0x20],0xffffffff
640167e7:	call   0x64014c9b
640167ec:	mov    edi,eax
640167ee:	mov    DWORD PTR [ebp-0x24],edi
640167f1:	call   0x640164e0
640167f6:	mov    ebx,DWORD PTR [edi+0x68]
640167f9:	mov    esi,DWORD PTR [ebp+0x8]
640167fc:	call   0x64016584
64016801:	mov    DWORD PTR [ebp+0x8],eax
64016804:	cmp    eax,DWORD PTR [ebx+0x4]
64016807:	je     0x64016964
6401680d:	push   0x220
64016812:	call   0x64015e60
64016817:	pop    ecx
64016818:	mov    ebx,eax
6401681a:	test   ebx,ebx
6401681c:	je     0x64016968
64016822:	mov    ecx,0x88
64016827:	mov    esi,DWORD PTR [edi+0x68]
6401682a:	mov    edi,ebx
6401682c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401682e:	and    DWORD PTR [ebx],0x0
64016831:	push   ebx
64016832:	push   DWORD PTR [ebp+0x8]
64016835:	call   0x640165fe
6401683a:	pop    ecx
6401683b:	pop    ecx
6401683c:	mov    DWORD PTR [ebp-0x20],eax
6401683f:	test   eax,eax
64016841:	jne    0x64016943
64016847:	mov    esi,DWORD PTR [ebp-0x24]
6401684a:	push   DWORD PTR [esi+0x68]
6401684d:	call   DWORD PTR ds:0x64025098
64016853:	test   eax,eax
64016855:	jne    0x64016868
64016857:	mov    eax,DWORD PTR [esi+0x68]
6401685a:	cmp    eax,0x6402d268
6401685f:	je     0x64016868
64016861:	push   eax
64016862:	call   0x64013a26
64016867:	pop    ecx
64016868:	mov    DWORD PTR [esi+0x68],ebx
6401686b:	push   ebx
6401686c:	mov    edi,DWORD PTR ds:0x64025020
64016872:	call   edi
64016874:	test   BYTE PTR [esi+0x70],0x2
64016878:	jne    0x64016968
6401687e:	test   BYTE PTR ds:0x6402d78c,0x1
64016885:	jne    0x64016968
6401688b:	push   0xd
6401688d:	call   0x6401a19a
64016892:	pop    ecx
64016893:	and    DWORD PTR [ebp-0x4],0x0
64016897:	mov    eax,DWORD PTR [ebx+0x4]
6401689a:	mov    ds:0x6402e928,eax
6401689f:	mov    eax,DWORD PTR [ebx+0x8]
640168a2:	mov    ds:0x6402e92c,eax
640168a7:	mov    eax,DWORD PTR [ebx+0xc]
640168aa:	mov    ds:0x6402e930,eax
640168af:	xor    eax,eax
640168b1:	mov    DWORD PTR [ebp-0x1c],eax
640168b4:	cmp    eax,0x5
640168b7:	jge    0x640168c9
640168b9:	mov    cx,WORD PTR [ebx+eax*2+0x10]
640168be:	mov    WORD PTR [eax*2+0x6402e91c],cx
640168c6:	inc    eax
640168c7:	jmp    0x640168b1
640168c9:	xor    eax,eax
640168cb:	mov    DWORD PTR [ebp-0x1c],eax
640168ce:	cmp    eax,0x101
640168d3:	jge    0x640168e2
640168d5:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
640168d9:	mov    BYTE PTR [eax+0x6402d488],cl
640168df:	inc    eax
640168e0:	jmp    0x640168cb
640168e2:	xor    eax,eax
640168e4:	mov    DWORD PTR [ebp-0x1c],eax
640168e7:	cmp    eax,0x100
640168ec:	jge    0x640168fe
640168ee:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
640168f5:	mov    BYTE PTR [eax+0x6402d590],cl
640168fb:	inc    eax
640168fc:	jmp    0x640168e4
640168fe:	push   DWORD PTR ds:0x6402d690
64016904:	call   DWORD PTR ds:0x64025098
6401690a:	test   eax,eax
6401690c:	jne    0x64016921
6401690e:	mov    eax,ds:0x6402d690
64016913:	cmp    eax,0x6402d268
64016918:	je     0x64016921
6401691a:	push   eax
6401691b:	call   0x64013a26
64016920:	pop    ecx
64016921:	mov    DWORD PTR ds:0x6402d690,ebx
64016927:	push   ebx
64016928:	call   edi
6401692a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016931:	call   0x64016938
64016936:	jmp    0x64016968
64016938:	push   0xd
6401693a:	call   0x6401a0c2
6401693f:	pop    ecx
64016940:	ret    
64016941:	jmp    0x64016968
64016943:	cmp    eax,0xffffffff
64016946:	jne    0x64016968
64016948:	cmp    ebx,0x6402d268
6401694e:	je     0x64016957
64016950:	push   ebx
64016951:	call   0x64013a26
64016956:	pop    ecx
64016957:	call   0x64014950
6401695c:	mov    DWORD PTR [eax],0x16
64016962:	jmp    0x64016968
64016964:	and    DWORD PTR [ebp-0x20],0x0
64016968:	mov    eax,DWORD PTR [ebp-0x20]
6401696b:	call   0x64014195
64016970:	ret    
64016971:	cmp    DWORD PTR ds:0x64032634,0x0
64016978:	jne    0x6401698c
6401697a:	push   0xfffffffd
6401697c:	call   0x640167d7
64016981:	pop    ecx
64016982:	mov    DWORD PTR ds:0x64032634,0x1
6401698c:	xor    eax,eax
6401698e:	ret    
6401698f:	push   ebx
64016990:	push   ebp
64016991:	push   esi
64016992:	mov    esi,DWORD PTR [esp+0x10]
64016996:	mov    eax,DWORD PTR [esi+0xbc]
6401699c:	xor    ebp,ebp
6401699e:	cmp    eax,ebp
640169a0:	push   edi
640169a1:	je     0x64016a12
640169a3:	cmp    eax,0x6402dc40
640169a8:	je     0x64016a12
640169aa:	mov    eax,DWORD PTR [esi+0xb0]
640169b0:	cmp    eax,ebp
640169b2:	je     0x64016a12
640169b4:	cmp    DWORD PTR [eax],ebp
640169b6:	jne    0x64016a12
640169b8:	mov    eax,DWORD PTR [esi+0xb8]
640169be:	cmp    eax,ebp
640169c0:	je     0x640169d9
640169c2:	cmp    DWORD PTR [eax],ebp
640169c4:	jne    0x640169d9
640169c6:	push   eax
640169c7:	call   0x64013a26
640169cc:	push   DWORD PTR [esi+0xbc]
640169d2:	call   0x6401bce5
640169d7:	pop    ecx
640169d8:	pop    ecx
640169d9:	mov    eax,DWORD PTR [esi+0xb4]
640169df:	cmp    eax,ebp
640169e1:	je     0x640169fa
640169e3:	cmp    DWORD PTR [eax],ebp
640169e5:	jne    0x640169fa
640169e7:	push   eax
640169e8:	call   0x64013a26
640169ed:	push   DWORD PTR [esi+0xbc]
640169f3:	call   0x6401bca5
640169f8:	pop    ecx
640169f9:	pop    ecx
640169fa:	push   DWORD PTR [esi+0xb0]
64016a00:	call   0x64013a26
64016a05:	push   DWORD PTR [esi+0xbc]
64016a0b:	call   0x64013a26
64016a10:	pop    ecx
64016a11:	pop    ecx
64016a12:	mov    eax,DWORD PTR [esi+0xc0]
64016a18:	cmp    eax,ebp
64016a1a:	je     0x64016a60
64016a1c:	cmp    DWORD PTR [eax],ebp
64016a1e:	jne    0x64016a60
64016a20:	mov    eax,DWORD PTR [esi+0xc4]
64016a26:	sub    eax,0xfe
64016a2b:	push   eax
64016a2c:	call   0x64013a26
64016a31:	mov    eax,DWORD PTR [esi+0xcc]
64016a37:	mov    edi,0x80
64016a3c:	sub    eax,edi
64016a3e:	push   eax
64016a3f:	call   0x64013a26
64016a44:	mov    eax,DWORD PTR [esi+0xd0]
64016a4a:	sub    eax,edi
64016a4c:	push   eax
64016a4d:	call   0x64013a26
64016a52:	push   DWORD PTR [esi+0xc0]
64016a58:	call   0x64013a26
64016a5d:	add    esp,0x10
64016a60:	lea    edi,[esi+0xd4]
64016a66:	mov    eax,DWORD PTR [edi]
64016a68:	cmp    eax,0x6402db80
64016a6d:	je     0x64016a86
64016a6f:	cmp    DWORD PTR [eax+0xb4],ebp
64016a75:	jne    0x64016a86
64016a77:	push   eax
64016a78:	call   0x6401bb15
64016a7d:	push   DWORD PTR [edi]
64016a7f:	call   0x64013a26
64016a84:	pop    ecx
64016a85:	pop    ecx
64016a86:	push   0x6
64016a88:	lea    edi,[esi+0x50]
64016a8b:	pop    ebx
64016a8c:	cmp    DWORD PTR [edi-0x8],0x6402d790
64016a93:	je     0x64016aa6
64016a95:	mov    eax,DWORD PTR [edi]
64016a97:	cmp    eax,ebp
64016a99:	je     0x64016aa6
64016a9b:	cmp    DWORD PTR [eax],ebp
64016a9d:	jne    0x64016aa6
64016a9f:	push   eax
64016aa0:	call   0x64013a26
64016aa5:	pop    ecx
64016aa6:	cmp    DWORD PTR [edi-0x4],ebp
64016aa9:	je     0x64016abd
64016aab:	mov    eax,DWORD PTR [edi+0x4]
64016aae:	cmp    eax,ebp
64016ab0:	je     0x64016abd
64016ab2:	cmp    DWORD PTR [eax],ebp
64016ab4:	jne    0x64016abd
64016ab6:	push   eax
64016ab7:	call   0x64013a26
64016abc:	pop    ecx
64016abd:	add    edi,0x10
64016ac0:	dec    ebx
64016ac1:	jne    0x64016a8c
64016ac3:	push   esi
64016ac4:	call   0x64013a26
64016ac9:	pop    ecx
64016aca:	pop    edi
64016acb:	pop    esi
64016acc:	pop    ebp
64016acd:	pop    ebx
64016ace:	ret    
64016acf:	push   ebx
64016ad0:	push   ebp
64016ad1:	push   esi
64016ad2:	mov    esi,DWORD PTR [esp+0x10]
64016ad6:	push   edi
64016ad7:	mov    edi,DWORD PTR ds:0x64025020
64016add:	push   esi
64016ade:	call   edi
64016ae0:	mov    eax,DWORD PTR [esi+0xb0]
64016ae6:	test   eax,eax
64016ae8:	je     0x64016aed
64016aea:	push   eax
64016aeb:	call   edi
64016aed:	mov    eax,DWORD PTR [esi+0xb8]
64016af3:	test   eax,eax
64016af5:	je     0x64016afa
64016af7:	push   eax
64016af8:	call   edi
64016afa:	mov    eax,DWORD PTR [esi+0xb4]
64016b00:	test   eax,eax
64016b02:	je     0x64016b07
64016b04:	push   eax
64016b05:	call   edi
64016b07:	mov    eax,DWORD PTR [esi+0xc0]
64016b0d:	test   eax,eax
64016b0f:	je     0x64016b14
64016b11:	push   eax
64016b12:	call   edi
64016b14:	push   0x6
64016b16:	lea    ebx,[esi+0x50]
64016b19:	pop    ebp
64016b1a:	cmp    DWORD PTR [ebx-0x8],0x6402d790
64016b21:	je     0x64016b2c
64016b23:	mov    eax,DWORD PTR [ebx]
64016b25:	test   eax,eax
64016b27:	je     0x64016b2c
64016b29:	push   eax
64016b2a:	call   edi
64016b2c:	cmp    DWORD PTR [ebx-0x4],0x0
64016b30:	je     0x64016b3c
64016b32:	mov    eax,DWORD PTR [ebx+0x4]
64016b35:	test   eax,eax
64016b37:	je     0x64016b3c
64016b39:	push   eax
64016b3a:	call   edi
64016b3c:	add    ebx,0x10
64016b3f:	dec    ebp
64016b40:	jne    0x64016b1a
64016b42:	mov    eax,DWORD PTR [esi+0xd4]
64016b48:	add    eax,0xb4
64016b4d:	push   eax
64016b4e:	call   edi
64016b50:	pop    edi
64016b51:	pop    esi
64016b52:	pop    ebp
64016b53:	pop    ebx
64016b54:	ret    
64016b55:	push   esi
64016b56:	mov    esi,DWORD PTR [esp+0x8]
64016b5a:	test   esi,esi
64016b5c:	je     0x64016bdd
64016b5e:	push   ebx
64016b5f:	push   ebp
64016b60:	push   edi
64016b61:	mov    edi,DWORD PTR ds:0x64025098
64016b67:	push   esi
64016b68:	call   edi
64016b6a:	mov    eax,DWORD PTR [esi+0xb0]
64016b70:	test   eax,eax
64016b72:	je     0x64016b77
64016b74:	push   eax
64016b75:	call   edi
64016b77:	mov    eax,DWORD PTR [esi+0xb8]
64016b7d:	test   eax,eax
64016b7f:	je     0x64016b84
64016b81:	push   eax
64016b82:	call   edi
64016b84:	mov    eax,DWORD PTR [esi+0xb4]
64016b8a:	test   eax,eax
64016b8c:	je     0x64016b91
64016b8e:	push   eax
64016b8f:	call   edi
64016b91:	mov    eax,DWORD PTR [esi+0xc0]
64016b97:	test   eax,eax
64016b99:	je     0x64016b9e
64016b9b:	push   eax
64016b9c:	call   edi
64016b9e:	push   0x6
64016ba0:	lea    ebx,[esi+0x50]
64016ba3:	pop    ebp
64016ba4:	cmp    DWORD PTR [ebx-0x8],0x6402d790
64016bab:	je     0x64016bb6
64016bad:	mov    eax,DWORD PTR [ebx]
64016baf:	test   eax,eax
64016bb1:	je     0x64016bb6
64016bb3:	push   eax
64016bb4:	call   edi
64016bb6:	cmp    DWORD PTR [ebx-0x4],0x0
64016bba:	je     0x64016bc6
64016bbc:	mov    eax,DWORD PTR [ebx+0x4]
64016bbf:	test   eax,eax
64016bc1:	je     0x64016bc6
64016bc3:	push   eax
64016bc4:	call   edi
64016bc6:	add    ebx,0x10
64016bc9:	dec    ebp
64016bca:	jne    0x64016ba4
64016bcc:	mov    eax,DWORD PTR [esi+0xd4]
64016bd2:	add    eax,0xb4
64016bd7:	push   eax
64016bd8:	call   edi
64016bda:	pop    edi
64016bdb:	pop    ebp
64016bdc:	pop    ebx
64016bdd:	mov    eax,esi
64016bdf:	pop    esi
64016be0:	ret    
64016be1:	test   edi,edi
64016be3:	je     0x64016c1c
64016be5:	test   eax,eax
64016be7:	je     0x64016c1c
64016be9:	push   esi
64016bea:	mov    esi,DWORD PTR [eax]
64016bec:	cmp    esi,edi
64016bee:	je     0x64016c18
64016bf0:	push   edi
64016bf1:	mov    DWORD PTR [eax],edi
64016bf3:	call   0x64016acf
64016bf8:	test   esi,esi
64016bfa:	pop    ecx
64016bfb:	je     0x64016c18
64016bfd:	push   esi
64016bfe:	call   0x64016b55
64016c03:	cmp    DWORD PTR [esi],0x0
64016c06:	pop    ecx
64016c07:	jne    0x64016c18
64016c09:	cmp    esi,0x6402d798
64016c0f:	je     0x64016c18
64016c11:	push   esi
64016c12:	call   0x6401698f
64016c17:	pop    ecx
64016c18:	mov    eax,edi
64016c1a:	pop    esi
64016c1b:	ret    
64016c1c:	xor    eax,eax
64016c1e:	ret    
64016c1f:	push   0xc
64016c21:	push   0x6402a8b8
64016c26:	call   0x64014150
64016c2b:	call   0x64014c9b
64016c30:	mov    esi,eax
64016c32:	mov    eax,ds:0x6402d78c
64016c37:	test   DWORD PTR [esi+0x70],eax
64016c3a:	je     0x64016c5e
64016c3c:	cmp    DWORD PTR [esi+0x6c],0x0
64016c40:	je     0x64016c5e
64016c42:	call   0x64014c9b
64016c47:	mov    esi,DWORD PTR [eax+0x6c]
64016c4a:	test   esi,esi
64016c4c:	jne    0x64016c56
64016c4e:	push   0x20
64016c50:	call   0x64015fd6
64016c55:	pop    ecx
64016c56:	mov    eax,esi
64016c58:	call   0x64014195
64016c5d:	ret    
64016c5e:	push   0xc
64016c60:	call   0x6401a19a
64016c65:	pop    ecx
64016c66:	and    DWORD PTR [ebp-0x4],0x0
64016c6a:	lea    eax,[esi+0x6c]
64016c6d:	mov    edi,DWORD PTR ds:0x6402d870
64016c73:	call   0x64016be1
64016c78:	mov    DWORD PTR [ebp-0x1c],eax
64016c7b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016c82:	call   0x64016c89
64016c87:	jmp    0x64016c4a
64016c89:	push   0xc
64016c8b:	call   0x6401a0c2
64016c90:	pop    ecx
64016c91:	mov    esi,DWORD PTR [ebp-0x1c]
64016c94:	ret    
64016c95:	push   ebp
64016c96:	mov    ebp,esp
64016c98:	push   ecx
64016c99:	push   esi
64016c9a:	mov    esi,DWORD PTR [ebp+0xc]
64016c9d:	push   esi
64016c9e:	call   0x6401c9fd
64016ca3:	mov    DWORD PTR [ebp+0xc],eax
64016ca6:	mov    eax,DWORD PTR [esi+0xc]
64016ca9:	test   al,0x82
64016cab:	pop    ecx
64016cac:	jne    0x64016cc5
64016cae:	call   0x64014950
64016cb3:	mov    DWORD PTR [eax],0x9
64016cb9:	or     DWORD PTR [esi+0xc],0x20
64016cbd:	or     eax,0xffffffff
64016cc0:	jmp    0x64016df2
64016cc5:	test   al,0x40
64016cc7:	je     0x64016cd6
64016cc9:	call   0x64014950
64016cce:	mov    DWORD PTR [eax],0x22
64016cd4:	jmp    0x64016cb9
64016cd6:	push   ebx
64016cd7:	xor    ebx,ebx
64016cd9:	test   al,0x1
64016cdb:	je     0x64016cf3
64016cdd:	test   al,0x10
64016cdf:	mov    DWORD PTR [esi+0x4],ebx
64016ce2:	je     0x64016d6d
64016ce8:	mov    ecx,DWORD PTR [esi+0x8]
64016ceb:	and    eax,0xfffffffe
64016cee:	mov    DWORD PTR [esi],ecx
64016cf0:	mov    DWORD PTR [esi+0xc],eax
64016cf3:	mov    eax,DWORD PTR [esi+0xc]
64016cf6:	and    eax,0xffffffef
64016cf9:	or     eax,0x2
64016cfc:	test   ax,0x10c
64016d00:	mov    DWORD PTR [esi+0xc],eax
64016d03:	mov    DWORD PTR [esi+0x4],ebx
64016d06:	mov    DWORD PTR [ebp-0x4],ebx
64016d09:	jne    0x64016d37
64016d0b:	call   0x6401c85c
64016d10:	add    eax,0x20
64016d13:	cmp    esi,eax
64016d15:	je     0x64016d23
64016d17:	call   0x6401c85c
64016d1c:	add    eax,0x40
64016d1f:	cmp    esi,eax
64016d21:	jne    0x64016d30
64016d23:	push   DWORD PTR [ebp+0xc]
64016d26:	call   0x6401c7fe
64016d2b:	test   eax,eax
64016d2d:	pop    ecx
64016d2e:	jne    0x64016d37
64016d30:	push   esi
64016d31:	call   0x6401c7ba
64016d36:	pop    ecx
64016d37:	test   WORD PTR [esi+0xc],0x108
64016d3d:	push   edi
64016d3e:	je     0x64016dc4
64016d44:	mov    eax,DWORD PTR [esi+0x8]
64016d47:	mov    edi,DWORD PTR [esi]
64016d49:	lea    ecx,[eax+0x1]
64016d4c:	mov    DWORD PTR [esi],ecx
64016d4e:	mov    ecx,DWORD PTR [esi+0x18]
64016d51:	sub    edi,eax
64016d53:	dec    ecx
64016d54:	cmp    edi,ebx
64016d56:	mov    DWORD PTR [esi+0x4],ecx
64016d59:	jle    0x64016d78
64016d5b:	push   edi
64016d5c:	push   eax
64016d5d:	push   DWORD PTR [ebp+0xc]
64016d60:	call   0x6401c6de
64016d65:	add    esp,0xc
64016d68:	mov    DWORD PTR [ebp-0x4],eax
64016d6b:	jmp    0x64016dba
64016d6d:	or     eax,0x20
64016d70:	mov    DWORD PTR [esi+0xc],eax
64016d73:	or     eax,0xffffffff
64016d76:	jmp    0x64016df1
64016d78:	mov    ecx,DWORD PTR [ebp+0xc]
64016d7b:	cmp    ecx,0xffffffff
64016d7e:	je     0x64016d9b
64016d80:	cmp    ecx,0xfffffffe
64016d83:	je     0x64016d9b
64016d85:	mov    eax,ecx
64016d87:	and    eax,0x1f
64016d8a:	mov    edx,ecx
64016d8c:	sar    edx,0x5
64016d8f:	shl    eax,0x6
64016d92:	add    eax,DWORD PTR [edx*4+0x64032520]
64016d99:	jmp    0x64016da0
64016d9b:	mov    eax,0x6402d880
64016da0:	test   BYTE PTR [eax+0x4],0x20
64016da4:	je     0x64016dba
64016da6:	push   0x2
64016da8:	push   ebx
64016da9:	push   ebx
64016daa:	push   ecx
64016dab:	call   0x6401bfa3
64016db0:	and    eax,edx
64016db2:	add    esp,0x10
64016db5:	cmp    eax,0xffffffff
64016db8:	je     0x64016ddf
64016dba:	mov    eax,DWORD PTR [esi+0x8]
64016dbd:	mov    cl,BYTE PTR [ebp+0x8]
64016dc0:	mov    BYTE PTR [eax],cl
64016dc2:	jmp    0x64016dda
64016dc4:	xor    edi,edi
64016dc6:	inc    edi
64016dc7:	push   edi
64016dc8:	lea    eax,[ebp+0x8]
64016dcb:	push   eax
64016dcc:	push   DWORD PTR [ebp+0xc]
64016dcf:	call   0x6401c6de
64016dd4:	add    esp,0xc
64016dd7:	mov    DWORD PTR [ebp-0x4],eax
64016dda:	cmp    DWORD PTR [ebp-0x4],edi
64016ddd:	je     0x64016de8
64016ddf:	or     DWORD PTR [esi+0xc],0x20
64016de3:	or     eax,0xffffffff
64016de6:	jmp    0x64016df0
64016de8:	mov    eax,DWORD PTR [ebp+0x8]
64016deb:	and    eax,0xff
64016df0:	pop    edi
64016df1:	pop    ebx
64016df2:	pop    esi
64016df3:	leave  
64016df4:	ret    
64016df5:	test   BYTE PTR [eax+0xc],0x40
64016df9:	je     0x64016e01
64016dfb:	cmp    DWORD PTR [eax+0x8],0x0
64016dff:	je     0x64016e17
64016e01:	push   eax
64016e02:	push   DWORD PTR [esp+0x8]
64016e06:	call   0x6401ca2a
64016e0b:	cmp    ax,0xffff
64016e0f:	pop    ecx
64016e10:	pop    ecx
64016e11:	jne    0x64016e17
64016e13:	or     DWORD PTR [esi],0xffffffff
64016e16:	ret    
64016e17:	inc    DWORD PTR [esi]
64016e19:	ret    
64016e1a:	push   ebp
64016e1b:	mov    ebp,esp
64016e1d:	push   esi
64016e1e:	mov    esi,eax
64016e20:	jmp    0x64016e36
64016e22:	push   DWORD PTR [ebp+0x8]
64016e25:	mov    eax,DWORD PTR [ebp+0x10]
64016e28:	dec    DWORD PTR [ebp+0xc]
64016e2b:	call   0x64016df5
64016e30:	cmp    DWORD PTR [esi],0xffffffff
64016e33:	pop    ecx
64016e34:	je     0x64016e3c
64016e36:	cmp    DWORD PTR [ebp+0xc],0x0
64016e3a:	jg     0x64016e22
64016e3c:	pop    esi
64016e3d:	pop    ebp
64016e3e:	ret    
64016e3f:	test   BYTE PTR [edi+0xc],0x40
64016e43:	push   ebx
64016e44:	push   esi
64016e45:	mov    esi,eax
64016e47:	mov    ebx,ecx
64016e49:	je     0x64016e84
64016e4b:	cmp    DWORD PTR [edi+0x8],0x0
64016e4f:	jne    0x64016e84
64016e51:	mov    eax,DWORD PTR [esp+0xc]
64016e55:	add    DWORD PTR [esi],eax
64016e57:	jmp    0x64016e8b
64016e59:	movzx  eax,WORD PTR [ebx]
64016e5c:	dec    DWORD PTR [esp+0xc]
64016e60:	push   eax
64016e61:	mov    eax,edi
64016e63:	call   0x64016df5
64016e68:	inc    ebx
64016e69:	inc    ebx
64016e6a:	cmp    DWORD PTR [esi],0xffffffff
64016e6d:	pop    ecx
64016e6e:	jne    0x64016e84
64016e70:	call   0x64014950
64016e75:	cmp    DWORD PTR [eax],0x2a
64016e78:	jne    0x64016e8b
64016e7a:	push   0x3f
64016e7c:	mov    eax,edi
64016e7e:	call   0x64016df5
64016e83:	pop    ecx
64016e84:	cmp    DWORD PTR [esp+0xc],0x0
64016e89:	jg     0x64016e59
64016e8b:	pop    esi
64016e8c:	pop    ebx
64016e8d:	ret    
64016e8e:	push   ebp
64016e8f:	lea    ebp,[esp-0x3f4]
64016e96:	sub    esp,0x474
64016e9c:	mov    eax,ds:0x6402d09c
64016ea1:	xor    eax,ebp
64016ea3:	mov    DWORD PTR [ebp+0x3f0],eax
64016ea9:	mov    eax,DWORD PTR [ebp+0x3fc]
64016eaf:	push   ebx
64016eb0:	mov    ebx,DWORD PTR [ebp+0x408]
64016eb6:	push   esi
64016eb7:	mov    esi,DWORD PTR [ebp+0x400]
64016ebd:	push   edi
64016ebe:	push   DWORD PTR [ebp+0x404]
64016ec4:	xor    edi,edi
64016ec6:	lea    ecx,[ebp-0x64]
64016ec9:	mov    DWORD PTR [ebp-0x3c],eax
64016ecc:	mov    DWORD PTR [ebp-0x28],ebx
64016ecf:	mov    DWORD PTR [ebp-0x54],edi
64016ed2:	mov    DWORD PTR [ebp-0x14],edi
64016ed5:	mov    DWORD PTR [ebp-0x38],edi
64016ed8:	mov    DWORD PTR [ebp-0x18],edi
64016edb:	mov    DWORD PTR [ebp-0x30],edi
64016ede:	mov    DWORD PTR [ebp-0x48],edi
64016ee1:	mov    DWORD PTR [ebp-0x34],edi
64016ee4:	call   0x64012d2f
64016ee9:	cmp    DWORD PTR [ebp-0x3c],edi
64016eec:	jne    0x64016f1b
64016eee:	call   0x64014950
64016ef3:	push   edi
64016ef4:	push   edi
64016ef5:	push   edi
64016ef6:	push   edi
64016ef7:	mov    DWORD PTR [eax],0x16
64016efd:	push   edi
64016efe:	call   0x640126c4
64016f03:	add    esp,0x14
64016f06:	cmp    BYTE PTR [ebp-0x58],0x0
64016f0a:	je     0x64016f13
64016f0c:	mov    eax,DWORD PTR [ebp-0x5c]
64016f0f:	and    DWORD PTR [eax+0x70],0xfffffffd
64016f13:	or     eax,0xffffffff
64016f16:	jmp    0x64017766
64016f1b:	cmp    esi,edi
64016f1d:	je     0x64016eee
64016f1f:	movzx  edx,WORD PTR [esi]
64016f22:	xor    ecx,ecx
64016f24:	cmp    dx,di
64016f27:	mov    DWORD PTR [ebp-0x2c],edi
64016f2a:	mov    DWORD PTR [ebp-0x20],edi
64016f2d:	mov    DWORD PTR [ebp-0x50],edi
64016f30:	mov    DWORD PTR [ebp-0x24],edx
64016f33:	je     0x64017756
64016f39:	push   0x2
64016f3b:	pop    edi
64016f3c:	add    esi,edi
64016f3e:	cmp    DWORD PTR [ebp-0x2c],0x0
64016f42:	mov    DWORD PTR [ebp-0x4c],esi
64016f45:	jl     0x64017756
64016f4b:	lea    eax,[edx-0x20]
64016f4e:	cmp    ax,0x58
64016f52:	ja     0x64016f63
64016f54:	movzx  eax,dx
64016f57:	movzx  eax,BYTE PTR [eax+0x64025e48]
64016f5e:	and    eax,0xf
64016f61:	jmp    0x64016f65
64016f63:	xor    eax,eax
64016f65:	movsx  eax,BYTE PTR [ecx+eax*8+0x64025e68]
64016f6d:	push   0x7
64016f6f:	sar    eax,0x4
64016f72:	pop    ecx
64016f73:	cmp    eax,ecx
64016f75:	mov    DWORD PTR [ebp-0x68],eax
64016f78:	ja     0x64017724
64016f7e:	jmp    DWORD PTR [eax*4+0x6401777e]
64016f85:	xor    eax,eax
64016f87:	or     DWORD PTR [ebp-0x18],0xffffffff
64016f8b:	mov    DWORD PTR [ebp-0x6c],eax
64016f8e:	mov    DWORD PTR [ebp-0x48],eax
64016f91:	mov    DWORD PTR [ebp-0x38],eax
64016f94:	mov    DWORD PTR [ebp-0x30],eax
64016f97:	mov    DWORD PTR [ebp-0x14],eax
64016f9a:	mov    DWORD PTR [ebp-0x34],eax
64016f9d:	jmp    0x64017724
64016fa2:	movzx  eax,dx
64016fa5:	sub    eax,0x20
64016fa8:	je     0x64016fe8
64016faa:	sub    eax,0x3
64016fad:	je     0x64016fdc
64016faf:	sub    eax,0x8
64016fb2:	je     0x64016fd3
64016fb4:	sub    eax,edi
64016fb6:	je     0x64016fca
64016fb8:	sub    eax,0x3
64016fbb:	jne    0x64017724
64016fc1:	or     DWORD PTR [ebp-0x14],0x8
64016fc5:	jmp    0x64017724
64016fca:	or     DWORD PTR [ebp-0x14],0x4
64016fce:	jmp    0x64017724
64016fd3:	or     DWORD PTR [ebp-0x14],0x1
64016fd7:	jmp    0x64017724
64016fdc:	or     DWORD PTR [ebp-0x14],0x80
64016fe3:	jmp    0x64017724
64016fe8:	or     DWORD PTR [ebp-0x14],edi
64016feb:	jmp    0x64017724
64016ff0:	cmp    dx,0x2a
64016ff4:	jne    0x64017016
64016ff6:	add    ebx,0x4
64016ff9:	mov    DWORD PTR [ebp-0x28],ebx
64016ffc:	mov    ebx,DWORD PTR [ebx-0x4]
64016fff:	test   ebx,ebx
64017001:	mov    DWORD PTR [ebp-0x38],ebx
64017004:	jge    0x64017724
6401700a:	or     DWORD PTR [ebp-0x14],0x4
6401700e:	neg    DWORD PTR [ebp-0x38]
64017011:	jmp    0x64017724
64017016:	mov    eax,DWORD PTR [ebp-0x38]
64017019:	imul   eax,eax,0xa
6401701c:	movzx  ecx,dx
6401701f:	lea    eax,[eax+ecx*1-0x30]
64017023:	mov    DWORD PTR [ebp-0x38],eax
64017026:	jmp    0x64017724
6401702b:	and    DWORD PTR [ebp-0x18],0x0
6401702f:	jmp    0x64017724
64017034:	cmp    dx,0x2a
64017038:	jne    0x64017057
6401703a:	add    ebx,0x4
6401703d:	mov    DWORD PTR [ebp-0x28],ebx
64017040:	mov    ebx,DWORD PTR [ebx-0x4]
64017043:	test   ebx,ebx
64017045:	mov    DWORD PTR [ebp-0x18],ebx
64017048:	jge    0x64017724
6401704e:	or     DWORD PTR [ebp-0x18],0xffffffff
64017052:	jmp    0x64017724
64017057:	mov    eax,DWORD PTR [ebp-0x18]
6401705a:	imul   eax,eax,0xa
6401705d:	movzx  ecx,dx
64017060:	lea    eax,[eax+ecx*1-0x30]
64017064:	mov    DWORD PTR [ebp-0x18],eax
64017067:	jmp    0x64017724
6401706c:	movzx  eax,dx
6401706f:	cmp    eax,0x49
64017072:	je     0x640170bc
64017074:	cmp    eax,0x68
64017077:	je     0x640170b3
64017079:	cmp    eax,0x6c
6401707c:	je     0x64017093
6401707e:	cmp    eax,0x77
64017081:	jne    0x64017724
64017087:	or     DWORD PTR [ebp-0x14],0x800
6401708e:	jmp    0x64017724
64017093:	cmp    WORD PTR [esi],0x6c
64017097:	jne    0x640170aa
64017099:	add    esi,edi
6401709b:	or     DWORD PTR [ebp-0x14],0x1000
640170a2:	mov    DWORD PTR [ebp-0x4c],esi
640170a5:	jmp    0x64017724
640170aa:	or     DWORD PTR [ebp-0x14],0x10
640170ae:	jmp    0x64017724
640170b3:	or     DWORD PTR [ebp-0x14],0x20
640170b7:	jmp    0x64017724
640170bc:	movzx  eax,WORD PTR [esi]
640170bf:	cmp    ax,0x36
640170c3:	jne    0x640170de
640170c5:	cmp    WORD PTR [esi+0x2],0x34
640170ca:	jne    0x640170de
640170cc:	add    esi,0x4
640170cf:	or     DWORD PTR [ebp-0x14],0x8000
640170d6:	mov    DWORD PTR [ebp-0x4c],esi
640170d9:	jmp    0x64017724
640170de:	cmp    ax,0x33
640170e2:	jne    0x640170fd
640170e4:	cmp    WORD PTR [esi+0x2],0x32
640170e9:	jne    0x640170fd
640170eb:	add    esi,0x4
640170ee:	and    DWORD PTR [ebp-0x14],0xffff7fff
640170f5:	mov    DWORD PTR [ebp-0x4c],esi
640170f8:	jmp    0x64017724
640170fd:	cmp    ax,0x64
64017101:	je     0x64017724
64017107:	cmp    ax,0x69
6401710b:	je     0x64017724
64017111:	cmp    ax,0x6f
64017115:	je     0x64017724
6401711b:	cmp    ax,0x75
6401711f:	je     0x64017724
64017125:	cmp    ax,0x78
64017129:	je     0x64017724
6401712f:	cmp    ax,0x58
64017133:	je     0x64017724
64017139:	and    DWORD PTR [ebp-0x68],0x0
6401713d:	mov    eax,DWORD PTR [ebp-0x3c]
64017140:	push   edx
64017141:	lea    esi,[ebp-0x2c]
64017144:	mov    DWORD PTR [ebp-0x34],0x1
6401714b:	call   0x64016df5
64017150:	jmp    0x64017723
64017155:	movzx  eax,dx
64017158:	cmp    eax,0x64
6401715b:	jg     0x64017308
64017161:	je     0x64017387
64017167:	cmp    eax,0x53
6401716a:	jg     0x64017247
64017170:	je     0x640171d1
64017172:	sub    eax,0x41
64017175:	je     0x64017187
64017177:	sub    eax,edi
64017179:	je     0x640171bc
6401717b:	sub    eax,edi
6401717d:	je     0x64017187
6401717f:	sub    eax,edi
64017181:	jne    0x64017608
64017187:	add    edx,0x20
6401718a:	mov    DWORD PTR [ebp-0x6c],0x1
64017191:	mov    DWORD PTR [ebp-0x24],edx
64017194:	or     DWORD PTR [ebp-0x14],0x40
64017198:	cmp    DWORD PTR [ebp-0x18],0x0
6401719c:	lea    esi,[ebp-0x10]
6401719f:	mov    eax,0x200
640171a4:	mov    DWORD PTR [ebp-0x1c],esi
640171a7:	mov    DWORD PTR [ebp-0x20],eax
640171aa:	jge    0x640173ab
640171b0:	mov    DWORD PTR [ebp-0x18],0x6
640171b7:	jmp    0x640173f8
640171bc:	test   WORD PTR [ebp-0x14],0x830
640171c2:	jne    0x64017264
640171c8:	or     DWORD PTR [ebp-0x14],0x20
640171cc:	jmp    0x64017264
640171d1:	test   WORD PTR [ebp-0x14],0x830
640171d7:	jne    0x640171dd
640171d9:	or     DWORD PTR [ebp-0x14],0x20
640171dd:	mov    edi,DWORD PTR [ebp-0x18]
640171e0:	cmp    edi,0xffffffff
640171e3:	jne    0x640171ea
640171e5:	mov    edi,0x7fffffff
640171ea:	add    ebx,0x4
640171ed:	test   BYTE PTR [ebp-0x14],0x20
640171f1:	mov    DWORD PTR [ebp-0x28],ebx
640171f4:	mov    ebx,DWORD PTR [ebx-0x4]
640171f7:	mov    DWORD PTR [ebp-0x1c],ebx
640171fa:	je     0x640175db
64017200:	test   ebx,ebx
64017202:	jne    0x6401720c
64017204:	mov    eax,ds:0x6402d950
64017209:	mov    DWORD PTR [ebp-0x1c],eax
6401720c:	and    DWORD PTR [ebp-0x20],0x0
64017210:	test   edi,edi
64017212:	mov    esi,DWORD PTR [ebp-0x1c]
64017215:	jle    0x64017608
6401721b:	mov    al,BYTE PTR [esi]
6401721d:	test   al,al
6401721f:	je     0x64017608
64017225:	lea    ecx,[ebp-0x64]
64017228:	movzx  eax,al
6401722b:	push   ecx
6401722c:	push   eax
6401722d:	call   0x64019f2a
64017232:	test   eax,eax
64017234:	pop    ecx
64017235:	pop    ecx
64017236:	je     0x64017239
64017238:	inc    esi
64017239:	inc    esi
6401723a:	inc    DWORD PTR [ebp-0x20]
6401723d:	cmp    DWORD PTR [ebp-0x20],edi
64017240:	jl     0x6401721b
64017242:	jmp    0x64017608
64017247:	sub    eax,0x58
6401724a:	je     0x64017493
64017250:	sub    eax,edi
64017252:	je     0x640172bb
64017254:	sub    eax,ecx
64017256:	je     0x64017194
6401725c:	sub    eax,edi
6401725e:	jne    0x64017608
64017264:	movzx  eax,WORD PTR [ebx]
64017267:	add    ebx,0x4
6401726a:	xor    esi,esi
6401726c:	inc    esi
6401726d:	test   BYTE PTR [ebp-0x14],0x20
64017271:	mov    DWORD PTR [ebp-0x34],esi
64017274:	mov    DWORD PTR [ebp-0x28],ebx
64017277:	mov    DWORD PTR [ebp-0x70],eax
6401727a:	je     0x640172a9
6401727c:	mov    BYTE PTR [ebp-0x40],al
6401727f:	lea    eax,[ebp-0x64]
64017282:	push   eax
64017283:	mov    eax,DWORD PTR [ebp-0x64]
64017286:	mov    BYTE PTR [ebp-0x3f],0x0
6401728a:	push   DWORD PTR [eax+0xac]
64017290:	lea    eax,[ebp-0x40]
64017293:	push   eax
64017294:	lea    eax,[ebp-0x10]
64017297:	push   eax
64017298:	call   0x6401cc1e
6401729d:	add    esp,0x10
640172a0:	test   eax,eax
640172a2:	jge    0x640172ad
640172a4:	mov    DWORD PTR [ebp-0x48],esi
640172a7:	jmp    0x640172ad
640172a9:	mov    WORD PTR [ebp-0x10],ax
640172ad:	lea    eax,[ebp-0x10]
640172b0:	mov    DWORD PTR [ebp-0x1c],eax
640172b3:	mov    DWORD PTR [ebp-0x20],esi
640172b6:	jmp    0x64017608
640172bb:	mov    eax,DWORD PTR [ebx]
640172bd:	add    ebx,0x4
640172c0:	test   eax,eax
640172c2:	mov    DWORD PTR [ebp-0x28],ebx
640172c5:	je     0x640172f4
640172c7:	mov    ecx,DWORD PTR [eax+0x4]
640172ca:	test   ecx,ecx
640172cc:	je     0x640172f4
640172ce:	test   WORD PTR [ebp-0x14],0x800
640172d4:	movsx  eax,WORD PTR [eax]
640172d7:	mov    DWORD PTR [ebp-0x1c],ecx
640172da:	je     0x640172eb
640172dc:	cdq    
640172dd:	sub    eax,edx
640172df:	mov    DWORD PTR [ebp-0x34],0x1
640172e6:	jmp    0x64017603
640172eb:	and    DWORD PTR [ebp-0x34],0x0
640172ef:	jmp    0x64017605
640172f4:	mov    eax,ds:0x6402d950
640172f9:	mov    DWORD PTR [ebp-0x1c],eax
640172fc:	push   eax
640172fd:	call   0x64014350
64017302:	pop    ecx
64017303:	jmp    0x64017605
64017308:	cmp    eax,0x70
6401730b:	jg     0x64017498
64017311:	je     0x6401748c
64017317:	cmp    eax,0x65
6401731a:	jl     0x64017608
64017320:	cmp    eax,0x67
64017323:	jle    0x64017194
64017329:	cmp    eax,0x69
6401732c:	je     0x64017387
6401732e:	cmp    eax,0x6e
64017331:	je     0x64017352
64017333:	cmp    eax,0x6f
64017336:	jne    0x64017608
6401733c:	test   BYTE PTR [ebp-0x14],0x80
64017340:	mov    DWORD PTR [ebp-0x24],0x8
64017347:	je     0x64017392
64017349:	or     DWORD PTR [ebp-0x14],0x200
64017350:	jmp    0x64017392
64017352:	mov    esi,DWORD PTR [ebx]
64017354:	add    ebx,0x4
64017357:	mov    DWORD PTR [ebp-0x28],ebx
6401735a:	call   0x6401cc08
6401735f:	test   eax,eax
64017361:	je     0x6401773f
64017367:	test   BYTE PTR [ebp-0x14],0x20
6401736b:	je     0x64017376
6401736d:	mov    ax,WORD PTR [ebp-0x2c]
64017371:	mov    WORD PTR [esi],ax
64017374:	jmp    0x6401737b
64017376:	mov    eax,DWORD PTR [ebp-0x2c]
64017379:	mov    DWORD PTR [esi],eax
6401737b:	mov    DWORD PTR [ebp-0x48],0x1
64017382:	jmp    0x64017711
64017387:	or     DWORD PTR [ebp-0x14],0x40
6401738b:	mov    DWORD PTR [ebp-0x24],0xa
64017392:	test   WORD PTR [ebp-0x14],0x8000
64017398:	je     0x640174e2
6401739e:	mov    eax,DWORD PTR [ebx]
640173a0:	mov    edx,DWORD PTR [ebx+0x4]
640173a3:	add    ebx,0x8
640173a6:	jmp    0x6401751b
640173ab:	jne    0x640173bc
640173ad:	cmp    dx,0x67
640173b1:	jne    0x640173f8
640173b3:	mov    DWORD PTR [ebp-0x18],0x1
640173ba:	jmp    0x640173f8
640173bc:	cmp    DWORD PTR [ebp-0x18],eax
640173bf:	jle    0x640173c4
640173c1:	mov    DWORD PTR [ebp-0x18],eax
640173c4:	cmp    DWORD PTR [ebp-0x18],0xa3
640173cb:	jle    0x640173f8
640173cd:	mov    edi,DWORD PTR [ebp-0x18]
640173d0:	add    edi,0x15d
640173d6:	push   edi
640173d7:	call   0x64015e60
640173dc:	test   eax,eax
640173de:	mov    edx,DWORD PTR [ebp-0x24]
640173e1:	pop    ecx
640173e2:	mov    DWORD PTR [ebp-0x50],eax
640173e5:	je     0x640173f1
640173e7:	mov    DWORD PTR [ebp-0x1c],eax
640173ea:	mov    DWORD PTR [ebp-0x20],edi
640173ed:	mov    esi,eax
640173ef:	jmp    0x640173f8
640173f1:	mov    DWORD PTR [ebp-0x18],0xa3
640173f8:	mov    eax,DWORD PTR [ebx]
640173fa:	add    ebx,0x8
640173fd:	mov    DWORD PTR [ebp-0x78],eax
64017400:	mov    eax,DWORD PTR [ebx-0x4]
64017403:	mov    DWORD PTR [ebp-0x74],eax
64017406:	lea    eax,[ebp-0x64]
64017409:	push   eax
6401740a:	push   DWORD PTR [ebp-0x6c]
6401740d:	movsx  eax,dl
64017410:	push   DWORD PTR [ebp-0x18]
64017413:	mov    DWORD PTR [ebp-0x28],ebx
64017416:	push   eax
64017417:	push   DWORD PTR [ebp-0x20]
6401741a:	lea    eax,[ebp-0x78]
6401741d:	push   esi
6401741e:	push   eax
6401741f:	push   DWORD PTR ds:0x6402db64
64017425:	call   0x64014a7f
6401742a:	pop    ecx
6401742b:	call   eax
6401742d:	mov    ebx,DWORD PTR [ebp-0x14]
64017430:	add    esp,0x1c
64017433:	and    ebx,0x80
64017439:	je     0x64017456
6401743b:	cmp    DWORD PTR [ebp-0x18],0x0
6401743f:	jne    0x64017456
64017441:	lea    eax,[ebp-0x64]
64017444:	push   eax
64017445:	push   esi
64017446:	push   DWORD PTR ds:0x6402db70
6401744c:	call   0x64014a7f
64017451:	pop    ecx
64017452:	call   eax
64017454:	pop    ecx
64017455:	pop    ecx
64017456:	cmp    WORD PTR [ebp-0x24],0x67
6401745b:	jne    0x64017476
6401745d:	test   ebx,ebx
6401745f:	jne    0x64017476
64017461:	lea    eax,[ebp-0x64]
64017464:	push   eax
64017465:	push   esi
64017466:	push   DWORD PTR ds:0x6402db6c
6401746c:	call   0x64014a7f
64017471:	pop    ecx
64017472:	call   eax
64017474:	pop    ecx
64017475:	pop    ecx
64017476:	cmp    BYTE PTR [esi],0x2d
64017479:	jne    0x64017486
6401747b:	or     DWORD PTR [ebp-0x14],0x100
64017482:	inc    esi
64017483:	mov    DWORD PTR [ebp-0x1c],esi
64017486:	push   esi
64017487:	jmp    0x640172fd
6401748c:	mov    DWORD PTR [ebp-0x18],0x8
64017493:	mov    DWORD PTR [ebp-0x54],ecx
64017496:	jmp    0x640174b9
64017498:	sub    eax,0x73
6401749b:	je     0x640171dd
640174a1:	sub    eax,edi
640174a3:	je     0x6401738b
640174a9:	sub    eax,0x3
640174ac:	jne    0x64017608
640174b2:	mov    DWORD PTR [ebp-0x54],0x27
640174b9:	test   BYTE PTR [ebp-0x14],0x80
640174bd:	mov    DWORD PTR [ebp-0x24],0x10
640174c4:	je     0x64017392
640174ca:	mov    eax,DWORD PTR [ebp-0x54]
640174cd:	add    eax,0x51
640174d0:	mov    WORD PTR [ebp-0x44],0x30
640174d6:	mov    WORD PTR [ebp-0x42],ax
640174da:	mov    DWORD PTR [ebp-0x30],edi
640174dd:	jmp    0x64017392
640174e2:	test   WORD PTR [ebp-0x14],0x1000
640174e8:	jne    0x6401739e
640174ee:	add    ebx,0x4
640174f1:	test   BYTE PTR [ebp-0x14],0x20
640174f5:	je     0x6401750d
640174f7:	test   BYTE PTR [ebp-0x14],0x40
640174fb:	mov    DWORD PTR [ebp-0x28],ebx
640174fe:	je     0x64017506
64017500:	movsx  eax,WORD PTR [ebx-0x4]
64017504:	jmp    0x6401750a
64017506:	movzx  eax,WORD PTR [ebx-0x4]
6401750a:	cdq    
6401750b:	jmp    0x6401751e
6401750d:	test   BYTE PTR [ebp-0x14],0x40
64017511:	mov    eax,DWORD PTR [ebx-0x4]
64017514:	je     0x64017519
64017516:	cdq    
64017517:	jmp    0x6401751b
64017519:	xor    edx,edx
6401751b:	mov    DWORD PTR [ebp-0x28],ebx
6401751e:	test   BYTE PTR [ebp-0x14],0x40
64017522:	je     0x6401753c
64017524:	test   edx,edx
64017526:	jg     0x6401753c
64017528:	jl     0x6401752e
6401752a:	test   eax,eax
6401752c:	jae    0x6401753c
6401752e:	neg    eax
64017530:	adc    edx,0x0
64017533:	neg    edx
64017535:	or     DWORD PTR [ebp-0x14],0x100
6401753c:	test   WORD PTR [ebp-0x14],0x9000
64017542:	mov    ebx,edx
64017544:	mov    edi,eax
64017546:	jne    0x6401754a
64017548:	xor    ebx,ebx
6401754a:	cmp    DWORD PTR [ebp-0x18],0x0
6401754e:	jge    0x64017559
64017550:	mov    DWORD PTR [ebp-0x18],0x1
64017557:	jmp    0x6401756a
64017559:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401755d:	mov    eax,0x200
64017562:	cmp    DWORD PTR [ebp-0x18],eax
64017565:	jle    0x6401756a
64017567:	mov    DWORD PTR [ebp-0x18],eax
6401756a:	mov    eax,edi
6401756c:	or     eax,ebx
6401756e:	jne    0x64017573
64017570:	and    DWORD PTR [ebp-0x30],eax
64017573:	lea    esi,[ebp+0x1ef]
64017579:	mov    eax,DWORD PTR [ebp-0x18]
6401757c:	dec    DWORD PTR [ebp-0x18]
6401757f:	test   eax,eax
64017581:	jg     0x64017589
64017583:	mov    eax,edi
64017585:	or     eax,ebx
64017587:	je     0x640175ad
64017589:	mov    eax,DWORD PTR [ebp-0x24]
6401758c:	cdq    
6401758d:	push   edx
6401758e:	push   eax
6401758f:	push   ebx
64017590:	push   edi
64017591:	call   0x64019ab0
64017596:	add    ecx,0x30
64017599:	cmp    ecx,0x39
6401759c:	mov    DWORD PTR [ebp-0x7c],ebx
6401759f:	mov    edi,eax
640175a1:	mov    ebx,edx
640175a3:	jle    0x640175a8
640175a5:	add    ecx,DWORD PTR [ebp-0x54]
640175a8:	mov    BYTE PTR [esi],cl
640175aa:	dec    esi
640175ab:	jmp    0x64017579
640175ad:	lea    eax,[ebp+0x1ef]
640175b3:	sub    eax,esi
640175b5:	inc    esi
640175b6:	test   WORD PTR [ebp-0x14],0x200
640175bc:	mov    DWORD PTR [ebp-0x20],eax
640175bf:	mov    DWORD PTR [ebp-0x1c],esi
640175c2:	je     0x64017608
640175c4:	test   eax,eax
640175c6:	je     0x640175cf
640175c8:	mov    ecx,esi
640175ca:	cmp    BYTE PTR [ecx],0x30
640175cd:	je     0x64017608
640175cf:	dec    DWORD PTR [ebp-0x1c]
640175d2:	mov    ecx,DWORD PTR [ebp-0x1c]
640175d5:	mov    BYTE PTR [ecx],0x30
640175d8:	inc    eax
640175d9:	jmp    0x64017605
640175db:	test   ebx,ebx
640175dd:	jne    0x640175e7
640175df:	mov    eax,ds:0x6402d954
640175e4:	mov    DWORD PTR [ebp-0x1c],eax
640175e7:	mov    eax,DWORD PTR [ebp-0x1c]
640175ea:	mov    DWORD PTR [ebp-0x34],0x1
640175f1:	jmp    0x640175fc
640175f3:	dec    edi
640175f4:	cmp    WORD PTR [eax],0x0
640175f8:	je     0x64017600
640175fa:	inc    eax
640175fb:	inc    eax
640175fc:	test   edi,edi
640175fe:	jne    0x640175f3
64017600:	sub    eax,DWORD PTR [ebp-0x1c]
64017603:	sar    eax,1
64017605:	mov    DWORD PTR [ebp-0x20],eax
64017608:	cmp    DWORD PTR [ebp-0x48],0x0
6401760c:	jne    0x64017711
64017612:	mov    eax,DWORD PTR [ebp-0x14]
64017615:	test   al,0x40
64017617:	je     0x64017644
64017619:	test   ax,0x100
6401761d:	je     0x64017627
6401761f:	mov    WORD PTR [ebp-0x44],0x2d
64017625:	jmp    0x6401763d
64017627:	test   al,0x1
64017629:	je     0x64017633
6401762b:	mov    WORD PTR [ebp-0x44],0x2b
64017631:	jmp    0x6401763d
64017633:	test   al,0x2
64017635:	je     0x64017644
64017637:	mov    WORD PTR [ebp-0x44],0x20
6401763d:	mov    DWORD PTR [ebp-0x30],0x1
64017644:	mov    ebx,DWORD PTR [ebp-0x38]
64017647:	mov    esi,DWORD PTR [ebp-0x20]
6401764a:	sub    ebx,esi
6401764c:	sub    ebx,DWORD PTR [ebp-0x30]
6401764f:	test   BYTE PTR [ebp-0x14],0xc
64017653:	jne    0x64017666
64017655:	push   DWORD PTR [ebp-0x3c]
64017658:	lea    eax,[ebp-0x2c]
6401765b:	push   ebx
6401765c:	push   0x20
6401765e:	call   0x64016e1a
64017663:	add    esp,0xc
64017666:	push   DWORD PTR [ebp-0x30]
64017669:	mov    edi,DWORD PTR [ebp-0x3c]
6401766c:	lea    eax,[ebp-0x2c]
6401766f:	lea    ecx,[ebp-0x44]
64017672:	call   0x64016e3f
64017677:	test   BYTE PTR [ebp-0x14],0x8
6401767b:	pop    ecx
6401767c:	je     0x64017693
6401767e:	test   BYTE PTR [ebp-0x14],0x4
64017682:	jne    0x64017693
64017684:	push   edi
64017685:	push   ebx
64017686:	push   0x30
64017688:	lea    eax,[ebp-0x2c]
6401768b:	call   0x64016e1a
64017690:	add    esp,0xc
64017693:	cmp    DWORD PTR [ebp-0x34],0x0
64017697:	jne    0x640176e7
64017699:	test   esi,esi
6401769b:	jle    0x640176e7
6401769d:	mov    edi,DWORD PTR [ebp-0x1c]
640176a0:	mov    DWORD PTR [ebp-0x24],esi
640176a3:	dec    DWORD PTR [ebp-0x24]
640176a6:	lea    eax,[ebp-0x64]
640176a9:	push   eax
640176aa:	mov    eax,DWORD PTR [ebp-0x64]
640176ad:	push   DWORD PTR [eax+0xac]
640176b3:	lea    eax,[ebp-0x70]
640176b6:	push   edi
640176b7:	push   eax
640176b8:	call   0x6401cc1e
640176bd:	add    esp,0x10
640176c0:	test   eax,eax
640176c2:	mov    DWORD PTR [ebp-0x7c],eax
640176c5:	jle    0x640176e1
640176c7:	push   DWORD PTR [ebp-0x70]
640176ca:	mov    eax,DWORD PTR [ebp-0x3c]
640176cd:	lea    esi,[ebp-0x2c]
640176d0:	call   0x64016df5
640176d5:	add    edi,DWORD PTR [ebp-0x7c]
640176d8:	cmp    DWORD PTR [ebp-0x24],0x0
640176dc:	pop    ecx
640176dd:	jg     0x640176a3
640176df:	jmp    0x640176f4
640176e1:	or     DWORD PTR [ebp-0x2c],0xffffffff
640176e5:	jmp    0x640176f4
640176e7:	mov    ecx,DWORD PTR [ebp-0x1c]
640176ea:	push   esi
640176eb:	lea    eax,[ebp-0x2c]
640176ee:	call   0x64016e3f
640176f3:	pop    ecx
640176f4:	cmp    DWORD PTR [ebp-0x2c],0x0
640176f8:	jl     0x64017711
640176fa:	test   BYTE PTR [ebp-0x14],0x4
640176fe:	je     0x64017711
64017700:	push   DWORD PTR [ebp-0x3c]
64017703:	lea    eax,[ebp-0x2c]
64017706:	push   ebx
64017707:	push   0x20
64017709:	call   0x64016e1a
6401770e:	add    esp,0xc
64017711:	cmp    DWORD PTR [ebp-0x50],0x0
64017715:	je     0x64017724
64017717:	push   DWORD PTR [ebp-0x50]
6401771a:	call   0x64013a26
6401771f:	and    DWORD PTR [ebp-0x50],0x0
64017723:	pop    ecx
64017724:	mov    esi,DWORD PTR [ebp-0x4c]
64017727:	movzx  eax,WORD PTR [esi]
6401772a:	test   ax,ax
6401772d:	mov    DWORD PTR [ebp-0x24],eax
64017730:	je     0x64017756
64017732:	mov    ecx,DWORD PTR [ebp-0x68]
64017735:	mov    ebx,DWORD PTR [ebp-0x28]
64017738:	mov    edx,eax
6401773a:	jmp    0x64016f39
6401773f:	call   0x64014950
64017744:	mov    DWORD PTR [eax],0x16
6401774a:	xor    eax,eax
6401774c:	push   eax
6401774d:	push   eax
6401774e:	push   eax
6401774f:	push   eax
64017750:	push   eax
64017751:	jmp    0x64016efe
64017756:	cmp    BYTE PTR [ebp-0x58],0x0
6401775a:	je     0x64017763
6401775c:	mov    eax,DWORD PTR [ebp-0x5c]
6401775f:	and    DWORD PTR [eax+0x70],0xfffffffd
64017763:	mov    eax,DWORD PTR [ebp-0x2c]
64017766:	mov    ecx,DWORD PTR [ebp+0x3f0]
6401776c:	pop    edi
6401776d:	pop    esi
6401776e:	xor    ecx,ebp
64017770:	pop    ebx
64017771:	call   0x64012b8c
64017776:	add    ebp,0x3f4
6401777c:	leave  
6401777d:	ret    
6401777e:	cmp    eax,0x85640171
64017783:	outs   dx,DWORD PTR ds:[esi]
64017784:	add    DWORD PTR [edx+eiz*4+0x6f],esp
64017788:	add    DWORD PTR [eax+esi*8+0x6f],esp
6401778c:	add    DWORD PTR [ebx+ebp*1+0x70],esp
64017790:	add    DWORD PTR [esp+esi*1+0x70],esp
64017794:	add    DWORD PTR [esp+ebp*2+0x70],esp
64017798:	add    DWORD PTR [ebp+edx*2+0x71],esp
6401779c:	add    DWORD PTR [ebp+edx*2-0x73],esp
640177a0:	lods   al,BYTE PTR ds:[esi]
640177a1:	and    al,0xc
640177a3:	cld    
640177a4:	(bad)  
640177a5:	inc    DWORD PTR [ecx+0x474ec]
640177ab:	add    BYTE PTR [ecx+0x6402d09c],ah
640177b1:	xor    eax,ebp
640177b3:	mov    DWORD PTR [ebp+0x3f0],eax
640177b9:	push   ebx
640177ba:	mov    ebx,DWORD PTR [ebp+0x408]
640177c0:	push   esi
640177c1:	mov    esi,DWORD PTR [ebp+0x3fc]
640177c7:	xor    eax,eax
640177c9:	push   edi
640177ca:	push   DWORD PTR [ebp+0x404]
640177d0:	mov    edi,DWORD PTR [ebp+0x400]
640177d6:	lea    ecx,[ebp-0x58]
640177d9:	mov    DWORD PTR [ebp-0x48],esi
640177dc:	mov    DWORD PTR [ebp-0x24],ebx
640177df:	mov    DWORD PTR [ebp-0x60],eax
640177e2:	mov    DWORD PTR [ebp-0x14],eax
640177e5:	mov    DWORD PTR [ebp-0x38],eax
640177e8:	mov    DWORD PTR [ebp-0x18],eax
640177eb:	mov    DWORD PTR [ebp-0x30],eax
640177ee:	mov    DWORD PTR [ebp-0x5c],eax
640177f1:	mov    DWORD PTR [ebp-0x34],eax
640177f4:	call   0x64012d2f
640177f9:	test   esi,esi
640177fb:	jne    0x6401782c
640177fd:	call   0x64014950
64017802:	mov    DWORD PTR [eax],0x16
64017808:	xor    eax,eax
6401780a:	push   eax
6401780b:	push   eax
6401780c:	push   eax
6401780d:	push   eax
6401780e:	push   eax
6401780f:	call   0x640126c4
64017814:	add    esp,0x14
64017817:	cmp    BYTE PTR [ebp-0x4c],0x0
6401781b:	je     0x64017824
6401781d:	mov    eax,DWORD PTR [ebp-0x50]
64017820:	and    DWORD PTR [eax+0x70],0xfffffffd
64017824:	or     eax,0xffffffff
64017827:	jmp    0x64018082
6401782c:	xor    esi,esi
6401782e:	cmp    edi,esi
64017830:	jne    0x64017844
64017832:	call   0x64014950
64017837:	push   esi
64017838:	push   esi
64017839:	push   esi
6401783a:	push   esi
6401783b:	mov    DWORD PTR [eax],0x16
64017841:	push   esi
64017842:	jmp    0x6401780f
64017844:	movzx  ecx,WORD PTR [edi]
64017847:	cmp    cx,si
6401784a:	mov    DWORD PTR [ebp-0x2c],esi
6401784d:	mov    DWORD PTR [ebp-0x20],esi
64017850:	mov    DWORD PTR [ebp-0x40],esi
64017853:	mov    DWORD PTR [ebp-0x64],esi
64017856:	mov    DWORD PTR [ebp-0x28],ecx
64017859:	je     0x64018072
6401785f:	push   0x2
64017861:	pop    esi
64017862:	add    edi,esi
64017864:	xor    eax,eax
64017866:	cmp    DWORD PTR [ebp-0x2c],eax
64017869:	mov    DWORD PTR [ebp-0x6c],edi
6401786c:	jl     0x64018062
64017872:	lea    edx,[ecx-0x20]
64017875:	cmp    dx,0x58
64017879:	ja     0x64017888
6401787b:	movzx  eax,cx
6401787e:	movzx  eax,BYTE PTR [eax+0x640274f0]
64017885:	and    eax,0xf
64017888:	mov    edx,DWORD PTR [ebp-0x40]
6401788b:	imul   eax,eax,0x9
6401788e:	movzx  eax,BYTE PTR [eax+edx*1+0x64027510]
64017896:	push   0x8
64017898:	shr    eax,0x4
6401789b:	pop    edx
6401789c:	cmp    eax,edx
6401789e:	mov    DWORD PTR [ebp-0x40],eax
640178a1:	je     0x640177fd
640178a7:	cmp    eax,0x7
640178aa:	ja     0x6401804a
640178b0:	jmp    DWORD PTR [eax*4+0x6401809a]
640178b7:	xor    eax,eax
640178b9:	or     DWORD PTR [ebp-0x18],0xffffffff
640178bd:	mov    DWORD PTR [ebp-0x68],eax
640178c0:	mov    DWORD PTR [ebp-0x5c],eax
640178c3:	mov    DWORD PTR [ebp-0x38],eax
640178c6:	mov    DWORD PTR [ebp-0x30],eax
640178c9:	mov    DWORD PTR [ebp-0x14],eax
640178cc:	mov    DWORD PTR [ebp-0x34],eax
640178cf:	jmp    0x64018050
640178d4:	movzx  eax,cx
640178d7:	sub    eax,0x20
640178da:	je     0x64017918
640178dc:	sub    eax,0x3
640178df:	je     0x6401790c
640178e1:	sub    eax,edx
640178e3:	je     0x64017903
640178e5:	sub    eax,esi
640178e7:	je     0x640178fa
640178e9:	sub    eax,0x3
640178ec:	jne    0x6401804a
640178f2:	or     DWORD PTR [ebp-0x14],edx
640178f5:	jmp    0x64018050
640178fa:	or     DWORD PTR [ebp-0x14],0x4
640178fe:	jmp    0x64018050
64017903:	or     DWORD PTR [ebp-0x14],0x1
64017907:	jmp    0x64018050
6401790c:	or     DWORD PTR [ebp-0x14],0x80
64017913:	jmp    0x64018050
64017918:	or     DWORD PTR [ebp-0x14],esi
6401791b:	jmp    0x64018050
64017920:	cmp    cx,0x2a
64017924:	jne    0x64017945
64017926:	mov    eax,DWORD PTR [ebx]
64017928:	add    ebx,0x4
6401792b:	test   eax,eax
6401792d:	mov    DWORD PTR [ebp-0x24],ebx
64017930:	mov    DWORD PTR [ebp-0x38],eax
64017933:	jge    0x64018050
64017939:	or     DWORD PTR [ebp-0x14],0x4
6401793d:	neg    DWORD PTR [ebp-0x38]
64017940:	jmp    0x64018050
64017945:	mov    eax,DWORD PTR [ebp-0x38]
64017948:	imul   eax,eax,0xa
6401794b:	movzx  ecx,cx
6401794e:	lea    eax,[eax+ecx*1-0x30]
64017952:	mov    DWORD PTR [ebp-0x38],eax
64017955:	jmp    0x64018050
6401795a:	and    DWORD PTR [ebp-0x18],0x0
6401795e:	jmp    0x64018050
64017963:	cmp    cx,0x2a
64017967:	jne    0x64017985
64017969:	mov    eax,DWORD PTR [ebx]
6401796b:	add    ebx,0x4
6401796e:	test   eax,eax
64017970:	mov    DWORD PTR [ebp-0x24],ebx
64017973:	mov    DWORD PTR [ebp-0x18],eax
64017976:	jge    0x64018050
6401797c:	or     DWORD PTR [ebp-0x18],0xffffffff
64017980:	jmp    0x64018050
64017985:	mov    eax,DWORD PTR [ebp-0x18]
64017988:	imul   eax,eax,0xa
6401798b:	movzx  ecx,cx
6401798e:	lea    eax,[eax+ecx*1-0x30]
64017992:	mov    DWORD PTR [ebp-0x18],eax
64017995:	jmp    0x64018050
6401799a:	movzx  eax,cx
6401799d:	cmp    eax,0x49
640179a0:	je     0x640179e7
640179a2:	cmp    eax,0x68
640179a5:	je     0x640179de
640179a7:	cmp    eax,0x6c
640179aa:	je     0x640179c1
640179ac:	cmp    eax,0x77
640179af:	jne    0x64018050
640179b5:	or     DWORD PTR [ebp-0x14],0x800
640179bc:	jmp    0x64018050
640179c1:	cmp    WORD PTR [edi],0x6c
640179c5:	jne    0x640179d5
640179c7:	add    edi,esi
640179c9:	or     DWORD PTR [ebp-0x14],0x1000
640179d0:	jmp    0x64018050
640179d5:	or     DWORD PTR [ebp-0x14],0x10
640179d9:	jmp    0x64018050
640179de:	or     DWORD PTR [ebp-0x14],0x20
640179e2:	jmp    0x64018050
640179e7:	movzx  eax,WORD PTR [edi]
640179ea:	cmp    ax,0x36
640179ee:	jne    0x64017a06
640179f0:	cmp    WORD PTR [edi+0x2],0x34
640179f5:	jne    0x64017a06
640179f7:	add    edi,0x4
640179fa:	or     DWORD PTR [ebp-0x14],0x8000
64017a01:	jmp    0x64018050
64017a06:	cmp    ax,0x33
64017a0a:	jne    0x64017a22
64017a0c:	cmp    WORD PTR [edi+0x2],0x32
64017a11:	jne    0x64017a22
64017a13:	add    edi,0x4
64017a16:	and    DWORD PTR [ebp-0x14],0xffff7fff
64017a1d:	jmp    0x64018050
64017a22:	cmp    ax,0x64
64017a26:	je     0x64018050
64017a2c:	cmp    ax,0x69
64017a30:	je     0x64018050
64017a36:	cmp    ax,0x6f
64017a3a:	je     0x64018050
64017a40:	cmp    ax,0x75
64017a44:	je     0x64018050
64017a4a:	cmp    ax,0x78
64017a4e:	je     0x64018050
64017a54:	cmp    ax,0x58
64017a58:	je     0x64018050
64017a5e:	and    DWORD PTR [ebp-0x40],0x0
64017a62:	mov    eax,DWORD PTR [ebp-0x48]
64017a65:	push   ecx
64017a66:	lea    esi,[ebp-0x2c]
64017a69:	mov    DWORD PTR [ebp-0x34],0x1
64017a70:	call   0x64016df5
64017a75:	pop    ecx
64017a76:	jmp    0x64018050
64017a7b:	movzx  eax,cx
64017a7e:	cmp    eax,0x64
64017a81:	jg     0x64017c2f
64017a87:	je     0x64017caa
64017a8d:	cmp    eax,0x53
64017a90:	jg     0x64017b6d
64017a96:	je     0x64017af7
64017a98:	sub    eax,0x41
64017a9b:	je     0x64017aad
64017a9d:	sub    eax,esi
64017a9f:	je     0x64017ae2
64017aa1:	sub    eax,esi
64017aa3:	je     0x64017aad
64017aa5:	sub    eax,esi
64017aa7:	jne    0x64017f2e
64017aad:	add    ecx,0x20
64017ab0:	mov    DWORD PTR [ebp-0x68],0x1
64017ab7:	mov    DWORD PTR [ebp-0x28],ecx
64017aba:	or     DWORD PTR [ebp-0x14],0x40
64017abe:	cmp    DWORD PTR [ebp-0x18],0x0
64017ac2:	lea    esi,[ebp-0x10]
64017ac5:	mov    eax,0x200
64017aca:	mov    DWORD PTR [ebp-0x1c],esi
64017acd:	mov    DWORD PTR [ebp-0x20],eax
64017ad0:	jge    0x64017cce
64017ad6:	mov    DWORD PTR [ebp-0x18],0x6
64017add:	jmp    0x64017d1e
64017ae2:	test   WORD PTR [ebp-0x14],0x830
64017ae8:	jne    0x64017b8b
64017aee:	or     DWORD PTR [ebp-0x14],0x20
64017af2:	jmp    0x64017b8b
64017af7:	test   WORD PTR [ebp-0x14],0x830
64017afd:	jne    0x64017b03
64017aff:	or     DWORD PTR [ebp-0x14],0x20
64017b03:	mov    edi,DWORD PTR [ebp-0x18]
64017b06:	cmp    edi,0xffffffff
64017b09:	jne    0x64017b10
64017b0b:	mov    edi,0x7fffffff
64017b10:	add    ebx,0x4
64017b13:	test   BYTE PTR [ebp-0x14],0x20
64017b17:	mov    DWORD PTR [ebp-0x24],ebx
64017b1a:	mov    ebx,DWORD PTR [ebx-0x4]
64017b1d:	mov    DWORD PTR [ebp-0x1c],ebx
64017b20:	je     0x64017f01
64017b26:	test   ebx,ebx
64017b28:	jne    0x64017b32
64017b2a:	mov    eax,ds:0x6402d950
64017b2f:	mov    DWORD PTR [ebp-0x1c],eax
64017b32:	and    DWORD PTR [ebp-0x20],0x0
64017b36:	test   edi,edi
64017b38:	mov    esi,DWORD PTR [ebp-0x1c]
64017b3b:	jle    0x64017f2e
64017b41:	mov    al,BYTE PTR [esi]
64017b43:	test   al,al
64017b45:	je     0x64017f2e
64017b4b:	lea    ecx,[ebp-0x58]
64017b4e:	movzx  eax,al
64017b51:	push   ecx
64017b52:	push   eax
64017b53:	call   0x64019f2a
64017b58:	test   eax,eax
64017b5a:	pop    ecx
64017b5b:	pop    ecx
64017b5c:	je     0x64017b5f
64017b5e:	inc    esi
64017b5f:	inc    esi
64017b60:	inc    DWORD PTR [ebp-0x20]
64017b63:	cmp    DWORD PTR [ebp-0x20],edi
64017b66:	jl     0x64017b41
64017b68:	jmp    0x64017f2e
64017b6d:	sub    eax,0x58
64017b70:	je     0x64017db5
64017b76:	sub    eax,esi
64017b78:	je     0x64017be2
64017b7a:	sub    eax,0x7
64017b7d:	je     0x64017aba
64017b83:	sub    eax,esi
64017b85:	jne    0x64017f2e
64017b8b:	movzx  eax,WORD PTR [ebx]
64017b8e:	add    ebx,0x4
64017b91:	xor    esi,esi
64017b93:	inc    esi
64017b94:	test   BYTE PTR [ebp-0x14],0x20
64017b98:	mov    DWORD PTR [ebp-0x34],esi
64017b9b:	mov    DWORD PTR [ebp-0x24],ebx
64017b9e:	mov    DWORD PTR [ebp-0x70],eax
64017ba1:	je     0x64017bd0
64017ba3:	mov    BYTE PTR [ebp-0x44],al
64017ba6:	lea    eax,[ebp-0x58]
64017ba9:	push   eax
64017baa:	mov    eax,DWORD PTR [ebp-0x58]
64017bad:	mov    BYTE PTR [ebp-0x43],0x0
64017bb1:	push   DWORD PTR [eax+0xac]
64017bb7:	lea    eax,[ebp-0x44]
64017bba:	push   eax
64017bbb:	lea    eax,[ebp-0x10]
64017bbe:	push   eax
64017bbf:	call   0x6401cc1e
64017bc4:	add    esp,0x10
64017bc7:	test   eax,eax
64017bc9:	jge    0x64017bd4
64017bcb:	mov    DWORD PTR [ebp-0x5c],esi
64017bce:	jmp    0x64017bd4
64017bd0:	mov    WORD PTR [ebp-0x10],ax
64017bd4:	lea    eax,[ebp-0x10]
64017bd7:	mov    DWORD PTR [ebp-0x1c],eax
64017bda:	mov    DWORD PTR [ebp-0x20],esi
64017bdd:	jmp    0x64017f2e
64017be2:	mov    eax,DWORD PTR [ebx]
64017be4:	add    ebx,0x4
64017be7:	test   eax,eax
64017be9:	mov    DWORD PTR [ebp-0x24],ebx
64017bec:	je     0x64017c1b
64017bee:	mov    ecx,DWORD PTR [eax+0x4]
64017bf1:	test   ecx,ecx
64017bf3:	je     0x64017c1b
64017bf5:	test   WORD PTR [ebp-0x14],0x800
64017bfb:	movsx  eax,WORD PTR [eax]
64017bfe:	mov    DWORD PTR [ebp-0x1c],ecx
64017c01:	je     0x64017c12
64017c03:	cdq    
64017c04:	sub    eax,edx
64017c06:	mov    DWORD PTR [ebp-0x34],0x1
64017c0d:	jmp    0x64017f29
64017c12:	and    DWORD PTR [ebp-0x34],0x0
64017c16:	jmp    0x64017f2b
64017c1b:	mov    eax,ds:0x6402d950
64017c20:	mov    DWORD PTR [ebp-0x1c],eax
64017c23:	push   eax
64017c24:	call   0x64014350
64017c29:	pop    ecx
64017c2a:	jmp    0x64017f2b
64017c2f:	cmp    eax,0x70
64017c32:	jg     0x64017dbe
64017c38:	je     0x64017db2
64017c3e:	cmp    eax,0x65
64017c41:	jl     0x64017f2e
64017c47:	cmp    eax,0x67
64017c4a:	jle    0x64017aba
64017c50:	cmp    eax,0x69
64017c53:	je     0x64017caa
64017c55:	cmp    eax,0x6e
64017c58:	je     0x64017c75
64017c5a:	cmp    eax,0x6f
64017c5d:	jne    0x64017f2e
64017c63:	test   BYTE PTR [ebp-0x14],0x80
64017c67:	mov    DWORD PTR [ebp-0x28],edx
64017c6a:	je     0x64017cb5
64017c6c:	or     DWORD PTR [ebp-0x14],0x200
64017c73:	jmp    0x64017cb5
64017c75:	mov    esi,DWORD PTR [ebx]
64017c77:	add    ebx,0x4
64017c7a:	mov    DWORD PTR [ebp-0x24],ebx
64017c7d:	call   0x6401cc08
64017c82:	test   eax,eax
64017c84:	je     0x640177fd
64017c8a:	test   BYTE PTR [ebp-0x14],0x20
64017c8e:	je     0x64017c99
64017c90:	mov    ax,WORD PTR [ebp-0x2c]
64017c94:	mov    WORD PTR [esi],ax
64017c97:	jmp    0x64017c9e
64017c99:	mov    eax,DWORD PTR [ebp-0x2c]
64017c9c:	mov    DWORD PTR [esi],eax
64017c9e:	mov    DWORD PTR [ebp-0x5c],0x1
64017ca5:	jmp    0x64018037
64017caa:	or     DWORD PTR [ebp-0x14],0x40
64017cae:	mov    DWORD PTR [ebp-0x28],0xa
64017cb5:	test   WORD PTR [ebp-0x14],0x8000
64017cbb:	je     0x64017e08
64017cc1:	add    ebx,edx
64017cc3:	mov    eax,DWORD PTR [ebx-0x8]
64017cc6:	mov    edx,DWORD PTR [ebx-0x4]
64017cc9:	jmp    0x64017e41
64017cce:	jne    0x64017cdf
64017cd0:	cmp    cx,0x67
64017cd4:	jne    0x64017d1e
64017cd6:	mov    DWORD PTR [ebp-0x18],0x1
64017cdd:	jmp    0x64017d1e
64017cdf:	cmp    DWORD PTR [ebp-0x18],eax
64017ce2:	jle    0x64017ce7
64017ce4:	mov    DWORD PTR [ebp-0x18],eax
64017ce7:	cmp    DWORD PTR [ebp-0x18],0xa3
64017cee:	jle    0x64017d1e
64017cf0:	mov    edi,DWORD PTR [ebp-0x18]
64017cf3:	add    edi,0x15d
64017cf9:	push   edi
64017cfa:	call   0x64015e60
64017cff:	test   eax,eax
64017d01:	pop    ecx
64017d02:	mov    ecx,DWORD PTR [ebp-0x28]
64017d05:	push   0x8
64017d07:	mov    DWORD PTR [ebp-0x64],eax
64017d0a:	pop    edx
64017d0b:	je     0x64017d17
64017d0d:	mov    DWORD PTR [ebp-0x1c],eax
64017d10:	mov    DWORD PTR [ebp-0x20],edi
64017d13:	mov    esi,eax
64017d15:	jmp    0x64017d1e
64017d17:	mov    DWORD PTR [ebp-0x18],0xa3
64017d1e:	add    ebx,edx
64017d20:	mov    eax,DWORD PTR [ebx-0x8]
64017d23:	mov    DWORD PTR [ebp-0x78],eax
64017d26:	mov    eax,DWORD PTR [ebx-0x4]
64017d29:	mov    DWORD PTR [ebp-0x74],eax
64017d2c:	lea    eax,[ebp-0x58]
64017d2f:	push   eax
64017d30:	push   DWORD PTR [ebp-0x68]
64017d33:	movsx  eax,cl
64017d36:	push   DWORD PTR [ebp-0x18]
64017d39:	mov    DWORD PTR [ebp-0x24],ebx
64017d3c:	push   eax
64017d3d:	push   DWORD PTR [ebp-0x20]
64017d40:	lea    eax,[ebp-0x78]
64017d43:	push   esi
64017d44:	push   eax
64017d45:	push   DWORD PTR ds:0x6402db64
64017d4b:	call   0x64014a7f
64017d50:	pop    ecx
64017d51:	call   eax
64017d53:	mov    ebx,DWORD PTR [ebp-0x14]
64017d56:	add    esp,0x1c
64017d59:	and    ebx,0x80
64017d5f:	je     0x64017d7c
64017d61:	cmp    DWORD PTR [ebp-0x18],0x0
64017d65:	jne    0x64017d7c
64017d67:	lea    eax,[ebp-0x58]
64017d6a:	push   eax
64017d6b:	push   esi
64017d6c:	push   DWORD PTR ds:0x6402db70
64017d72:	call   0x64014a7f
64017d77:	pop    ecx
64017d78:	call   eax
64017d7a:	pop    ecx
64017d7b:	pop    ecx
64017d7c:	cmp    WORD PTR [ebp-0x28],0x67
64017d81:	jne    0x64017d9c
64017d83:	test   ebx,ebx
64017d85:	jne    0x64017d9c
64017d87:	lea    eax,[ebp-0x58]
64017d8a:	push   eax
64017d8b:	push   esi
64017d8c:	push   DWORD PTR ds:0x6402db6c
64017d92:	call   0x64014a7f
64017d97:	pop    ecx
64017d98:	call   eax
64017d9a:	pop    ecx
64017d9b:	pop    ecx
64017d9c:	cmp    BYTE PTR [esi],0x2d
64017d9f:	jne    0x64017dac
64017da1:	or     DWORD PTR [ebp-0x14],0x100
64017da8:	inc    esi
64017da9:	mov    DWORD PTR [ebp-0x1c],esi
64017dac:	push   esi
64017dad:	jmp    0x64017c24
64017db2:	mov    DWORD PTR [ebp-0x18],edx
64017db5:	mov    DWORD PTR [ebp-0x60],0x7
64017dbc:	jmp    0x64017ddf
64017dbe:	sub    eax,0x73
64017dc1:	je     0x64017b03
64017dc7:	sub    eax,esi
64017dc9:	je     0x64017cae
64017dcf:	sub    eax,0x3
64017dd2:	jne    0x64017f2e
64017dd8:	mov    DWORD PTR [ebp-0x60],0x27
64017ddf:	test   BYTE PTR [ebp-0x14],0x80
64017de3:	mov    DWORD PTR [ebp-0x28],0x10
64017dea:	je     0x64017cb5
64017df0:	mov    eax,DWORD PTR [ebp-0x60]
64017df3:	add    eax,0x51
64017df6:	mov    WORD PTR [ebp-0x3c],0x30
64017dfc:	mov    WORD PTR [ebp-0x3a],ax
64017e00:	mov    DWORD PTR [ebp-0x30],esi
64017e03:	jmp    0x64017cb5
64017e08:	test   WORD PTR [ebp-0x14],0x1000
64017e0e:	jne    0x64017cc1
64017e14:	add    ebx,0x4
64017e17:	test   BYTE PTR [ebp-0x14],0x20
64017e1b:	je     0x64017e33
64017e1d:	test   BYTE PTR [ebp-0x14],0x40
64017e21:	mov    DWORD PTR [ebp-0x24],ebx
64017e24:	je     0x64017e2c
64017e26:	movsx  eax,WORD PTR [ebx-0x4]
64017e2a:	jmp    0x64017e30
64017e2c:	movzx  eax,WORD PTR [ebx-0x4]
64017e30:	cdq    
64017e31:	jmp    0x64017e44
64017e33:	test   BYTE PTR [ebp-0x14],0x40
64017e37:	mov    eax,DWORD PTR [ebx-0x4]
64017e3a:	je     0x64017e3f
64017e3c:	cdq    
64017e3d:	jmp    0x64017e41
64017e3f:	xor    edx,edx
64017e41:	mov    DWORD PTR [ebp-0x24],ebx
64017e44:	test   BYTE PTR [ebp-0x14],0x40
64017e48:	je     0x64017e62
64017e4a:	test   edx,edx
64017e4c:	jg     0x64017e62
64017e4e:	jl     0x64017e54
64017e50:	test   eax,eax
64017e52:	jae    0x64017e62
64017e54:	neg    eax
64017e56:	adc    edx,0x0
64017e59:	neg    edx
64017e5b:	or     DWORD PTR [ebp-0x14],0x100
64017e62:	test   WORD PTR [ebp-0x14],0x9000
64017e68:	mov    ebx,edx
64017e6a:	mov    edi,eax
64017e6c:	jne    0x64017e70
64017e6e:	xor    ebx,ebx
64017e70:	cmp    DWORD PTR [ebp-0x18],0x0
64017e74:	jge    0x64017e7f
64017e76:	mov    DWORD PTR [ebp-0x18],0x1
64017e7d:	jmp    0x64017e90
64017e7f:	and    DWORD PTR [ebp-0x14],0xfffffff7
64017e83:	mov    eax,0x200
64017e88:	cmp    DWORD PTR [ebp-0x18],eax
64017e8b:	jle    0x64017e90
64017e8d:	mov    DWORD PTR [ebp-0x18],eax
64017e90:	mov    eax,edi
64017e92:	or     eax,ebx
64017e94:	jne    0x64017e99
64017e96:	and    DWORD PTR [ebp-0x30],eax
64017e99:	lea    esi,[ebp+0x1ef]
64017e9f:	mov    eax,DWORD PTR [ebp-0x18]
64017ea2:	dec    DWORD PTR [ebp-0x18]
64017ea5:	test   eax,eax
64017ea7:	jg     0x64017eaf
64017ea9:	mov    eax,edi
64017eab:	or     eax,ebx
64017ead:	je     0x64017ed3
64017eaf:	mov    eax,DWORD PTR [ebp-0x28]
64017eb2:	cdq    
64017eb3:	push   edx
64017eb4:	push   eax
64017eb5:	push   ebx
64017eb6:	push   edi
64017eb7:	call   0x64019ab0
64017ebc:	add    ecx,0x30
64017ebf:	cmp    ecx,0x39
64017ec2:	mov    DWORD PTR [ebp-0x7c],ebx
64017ec5:	mov    edi,eax
64017ec7:	mov    ebx,edx
64017ec9:	jle    0x64017ece
64017ecb:	add    ecx,DWORD PTR [ebp-0x60]
64017ece:	mov    BYTE PTR [esi],cl
64017ed0:	dec    esi
64017ed1:	jmp    0x64017e9f
64017ed3:	lea    eax,[ebp+0x1ef]
64017ed9:	sub    eax,esi
64017edb:	inc    esi
64017edc:	test   WORD PTR [ebp-0x14],0x200
64017ee2:	mov    DWORD PTR [ebp-0x20],eax
64017ee5:	mov    DWORD PTR [ebp-0x1c],esi
64017ee8:	je     0x64017f2e
64017eea:	test   eax,eax
64017eec:	je     0x64017ef5
64017eee:	mov    ecx,esi
64017ef0:	cmp    BYTE PTR [ecx],0x30
64017ef3:	je     0x64017f2e
64017ef5:	dec    DWORD PTR [ebp-0x1c]
64017ef8:	mov    ecx,DWORD PTR [ebp-0x1c]
64017efb:	mov    BYTE PTR [ecx],0x30
64017efe:	inc    eax
64017eff:	jmp    0x64017f2b
64017f01:	test   ebx,ebx
64017f03:	jne    0x64017f0d
64017f05:	mov    eax,ds:0x6402d954
64017f0a:	mov    DWORD PTR [ebp-0x1c],eax
64017f0d:	mov    eax,DWORD PTR [ebp-0x1c]
64017f10:	mov    DWORD PTR [ebp-0x34],0x1
64017f17:	jmp    0x64017f22
64017f19:	dec    edi
64017f1a:	cmp    WORD PTR [eax],0x0
64017f1e:	je     0x64017f26
64017f20:	add    eax,esi
64017f22:	test   edi,edi
64017f24:	jne    0x64017f19
64017f26:	sub    eax,DWORD PTR [ebp-0x1c]
64017f29:	sar    eax,1
64017f2b:	mov    DWORD PTR [ebp-0x20],eax
64017f2e:	cmp    DWORD PTR [ebp-0x5c],0x0
64017f32:	jne    0x64018037
64017f38:	mov    eax,DWORD PTR [ebp-0x14]
64017f3b:	test   al,0x40
64017f3d:	je     0x64017f6a
64017f3f:	test   ax,0x100
64017f43:	je     0x64017f4d
64017f45:	mov    WORD PTR [ebp-0x3c],0x2d
64017f4b:	jmp    0x64017f63
64017f4d:	test   al,0x1
64017f4f:	je     0x64017f59
64017f51:	mov    WORD PTR [ebp-0x3c],0x2b
64017f57:	jmp    0x64017f63
64017f59:	test   al,0x2
64017f5b:	je     0x64017f6a
64017f5d:	mov    WORD PTR [ebp-0x3c],0x20
64017f63:	mov    DWORD PTR [ebp-0x30],0x1
64017f6a:	mov    ebx,DWORD PTR [ebp-0x38]
64017f6d:	mov    esi,DWORD PTR [ebp-0x20]
64017f70:	sub    ebx,esi
64017f72:	sub    ebx,DWORD PTR [ebp-0x30]
64017f75:	test   BYTE PTR [ebp-0x14],0xc
64017f79:	jne    0x64017f8c
64017f7b:	push   DWORD PTR [ebp-0x48]
64017f7e:	lea    eax,[ebp-0x2c]
64017f81:	push   ebx
64017f82:	push   0x20
64017f84:	call   0x64016e1a
64017f89:	add    esp,0xc
64017f8c:	push   DWORD PTR [ebp-0x30]
64017f8f:	mov    edi,DWORD PTR [ebp-0x48]
64017f92:	lea    eax,[ebp-0x2c]
64017f95:	lea    ecx,[ebp-0x3c]
64017f98:	call   0x64016e3f
64017f9d:	test   BYTE PTR [ebp-0x14],0x8
64017fa1:	pop    ecx
64017fa2:	je     0x64017fb9
64017fa4:	test   BYTE PTR [ebp-0x14],0x4
64017fa8:	jne    0x64017fb9
64017faa:	push   edi
64017fab:	push   ebx
64017fac:	push   0x30
64017fae:	lea    eax,[ebp-0x2c]
64017fb1:	call   0x64016e1a
64017fb6:	add    esp,0xc
64017fb9:	cmp    DWORD PTR [ebp-0x34],0x0
64017fbd:	jne    0x6401800d
64017fbf:	test   esi,esi
64017fc1:	jle    0x6401800d
64017fc3:	mov    edi,DWORD PTR [ebp-0x1c]
64017fc6:	mov    DWORD PTR [ebp-0x28],esi
64017fc9:	dec    DWORD PTR [ebp-0x28]
64017fcc:	lea    eax,[ebp-0x58]
64017fcf:	push   eax
64017fd0:	mov    eax,DWORD PTR [ebp-0x58]
64017fd3:	push   DWORD PTR [eax+0xac]
64017fd9:	lea    eax,[ebp-0x70]
64017fdc:	push   edi
64017fdd:	push   eax
64017fde:	call   0x6401cc1e
64017fe3:	add    esp,0x10
64017fe6:	test   eax,eax
64017fe8:	mov    DWORD PTR [ebp-0x7c],eax
64017feb:	jle    0x64018007
64017fed:	push   DWORD PTR [ebp-0x70]
64017ff0:	mov    eax,DWORD PTR [ebp-0x48]
64017ff3:	lea    esi,[ebp-0x2c]
64017ff6:	call   0x64016df5
64017ffb:	add    edi,DWORD PTR [ebp-0x7c]
64017ffe:	cmp    DWORD PTR [ebp-0x28],0x0
64018002:	pop    ecx
64018003:	jg     0x64017fc9
64018005:	jmp    0x6401801a
64018007:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401800b:	jmp    0x6401801a
6401800d:	mov    ecx,DWORD PTR [ebp-0x1c]
64018010:	push   esi
64018011:	lea    eax,[ebp-0x2c]
64018014:	call   0x64016e3f
64018019:	pop    ecx
6401801a:	cmp    DWORD PTR [ebp-0x2c],0x0
6401801e:	jl     0x64018037
64018020:	test   BYTE PTR [ebp-0x14],0x4
64018024:	je     0x64018037
64018026:	push   DWORD PTR [ebp-0x48]
64018029:	lea    eax,[ebp-0x2c]
6401802c:	push   ebx
6401802d:	push   0x20
6401802f:	call   0x64016e1a
64018034:	add    esp,0xc
64018037:	cmp    DWORD PTR [ebp-0x64],0x0
6401803b:	je     0x6401804a
6401803d:	push   DWORD PTR [ebp-0x64]
64018040:	call   0x64013a26
64018045:	and    DWORD PTR [ebp-0x64],0x0
64018049:	pop    ecx
6401804a:	mov    edi,DWORD PTR [ebp-0x6c]
6401804d:	mov    ebx,DWORD PTR [ebp-0x24]
64018050:	movzx  eax,WORD PTR [edi]
64018053:	test   ax,ax
64018056:	mov    DWORD PTR [ebp-0x28],eax
64018059:	je     0x64018062
6401805b:	mov    ecx,eax
6401805d:	jmp    0x6401785f
64018062:	cmp    DWORD PTR [ebp-0x40],0x0
64018066:	je     0x64018072
64018068:	cmp    DWORD PTR [ebp-0x40],0x7
6401806c:	jne    0x640177fd
64018072:	cmp    BYTE PTR [ebp-0x4c],0x0
64018076:	je     0x6401807f
64018078:	mov    eax,DWORD PTR [ebp-0x50]
6401807b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401807f:	mov    eax,DWORD PTR [ebp-0x2c]
64018082:	mov    ecx,DWORD PTR [ebp+0x3f0]
64018088:	pop    edi
64018089:	pop    esi
6401808a:	xor    ecx,ebp
6401808c:	pop    ebx
6401808d:	call   0x64012b8c
64018092:	add    ebp,0x3f4
64018098:	leave  
64018099:	ret    
6401809a:	bound  edi,QWORD PTR [edx+0x1]
6401809d:	fs mov bh,0x78
640180a0:	add    DWORD PTR [esp+edx*8+0x78],esp
640180a4:	add    DWORD PTR [eax+eiz*1+0x79],esp
640180a8:	add    DWORD PTR [edx+ebx*2+0x79],esp
640180ac:	add    DWORD PTR [ebx+eiz*2+0x79],esp
640180b0:	add    DWORD PTR [edx+ebx*4+0x79],esp
640180b4:	add    DWORD PTR [ebx+edi*2+0x7a],esp
640180b8:	add    DWORD PTR [ebp+edx*2-0x75],esp
640180bc:	in     al,dx
640180bd:	sub    esp,0x10
640180c0:	mov    eax,ds:0x6402d09c
640180c5:	xor    eax,ebp
640180c7:	mov    DWORD PTR [ebp-0x4],eax
640180ca:	push   ebx
640180cb:	push   esi
640180cc:	mov    esi,DWORD PTR ds:0x64025150
640180d2:	xor    ebx,ebx
640180d4:	cmp    DWORD PTR ds:0x6402e958,ebx
640180da:	push   edi
640180db:	mov    edi,ecx
640180dd:	jne    0x64018115
640180df:	push   ebx
640180e0:	push   ebx
640180e1:	push   0x1
640180e3:	push   0x64027714
640180e8:	push   0x100
640180ed:	push   ebx
640180ee:	call   esi
640180f0:	test   eax,eax
640180f2:	je     0x64018100
640180f4:	mov    DWORD PTR ds:0x6402e958,0x1
640180fe:	jmp    0x64018115
64018100:	call   DWORD PTR ds:0x64025044
64018106:	cmp    eax,0x78
64018109:	jne    0x64018115
6401810b:	mov    DWORD PTR ds:0x6402e958,0x2
64018115:	cmp    DWORD PTR [ebp+0x14],ebx
64018118:	jle    0x64018137
6401811a:	mov    ecx,DWORD PTR [ebp+0x14]
6401811d:	mov    eax,DWORD PTR [ebp+0x10]
64018120:	dec    ecx
64018121:	cmp    WORD PTR [eax],bx
64018124:	je     0x6401812f
64018126:	inc    eax
64018127:	inc    eax
64018128:	cmp    ecx,ebx
6401812a:	jne    0x64018120
6401812c:	or     ecx,0xffffffff
6401812f:	or     eax,0xffffffff
64018132:	sub    eax,ecx
64018134:	add    DWORD PTR [ebp+0x14],eax
64018137:	mov    eax,ds:0x6402e958
6401813c:	cmp    eax,0x1
6401813f:	jne    0x6401815a
64018141:	push   DWORD PTR [ebp+0x1c]
64018144:	push   DWORD PTR [ebp+0x18]
64018147:	push   DWORD PTR [ebp+0x14]
6401814a:	push   DWORD PTR [ebp+0x10]
6401814d:	push   DWORD PTR [ebp+0xc]
64018150:	push   DWORD PTR [ebp+0x8]
64018153:	call   esi
64018155:	jmp    0x64018309
6401815a:	cmp    eax,0x2
6401815d:	je     0x64018163
6401815f:	cmp    eax,ebx
64018161:	jne    0x640181b5
64018163:	cmp    DWORD PTR [ebp+0x8],ebx
64018166:	mov    DWORD PTR [ebp-0xc],ebx
64018169:	jne    0x64018173
6401816b:	mov    eax,DWORD PTR [edi]
6401816d:	mov    eax,DWORD PTR [eax+0x14]
64018170:	mov    DWORD PTR [ebp+0x8],eax
64018173:	cmp    DWORD PTR [ebp+0x20],ebx
64018176:	jne    0x64018180
64018178:	mov    eax,DWORD PTR [edi]
6401817a:	mov    eax,DWORD PTR [eax+0x4]
6401817d:	mov    DWORD PTR [ebp+0x20],eax
64018180:	push   DWORD PTR [ebp+0x8]
64018183:	call   0x6401d6f8
64018188:	cmp    DWORD PTR [ebp+0x20],eax
6401818b:	pop    ecx
6401818c:	je     0x64018196
6401818e:	cmp    eax,0xffffffff
64018191:	je     0x64018196
64018193:	mov    DWORD PTR [ebp+0x20],eax
64018196:	mov    esi,DWORD PTR ds:0x64025028
6401819c:	push   ebx
6401819d:	push   ebx
6401819e:	push   ebx
6401819f:	push   ebx
640181a0:	push   DWORD PTR [ebp+0x14]
640181a3:	push   DWORD PTR [ebp+0x10]
640181a6:	push   ebx
640181a7:	push   DWORD PTR [ebp+0x20]
640181aa:	call   esi
640181ac:	mov    edi,eax
640181ae:	cmp    edi,ebx
640181b0:	mov    DWORD PTR [ebp-0x10],edi
640181b3:	jne    0x640181bc
640181b5:	xor    eax,eax
640181b7:	jmp    0x64018309
640181bc:	jle    0x64018200
640181be:	push   0xffffffe0
640181c0:	xor    edx,edx
640181c2:	pop    eax
640181c3:	div    edi
640181c5:	cmp    eax,0x1
640181c8:	jb     0x64018200
640181ca:	lea    eax,[edi+0x8]
640181cd:	cmp    eax,0x400
640181d2:	ja     0x640181e7
640181d4:	call   0x64013310
640181d9:	mov    eax,esp
640181db:	cmp    eax,ebx
640181dd:	je     0x640181fb
640181df:	mov    DWORD PTR [eax],0xcccc
640181e5:	jmp    0x640181f8
640181e7:	push   eax
640181e8:	call   0x64013b03
640181ed:	cmp    eax,ebx
640181ef:	pop    ecx
640181f0:	je     0x640181fb
640181f2:	mov    DWORD PTR [eax],0xdddd
640181f8:	add    eax,0x8
640181fb:	mov    DWORD PTR [ebp-0x8],eax
640181fe:	jmp    0x64018203
64018200:	mov    DWORD PTR [ebp-0x8],ebx
64018203:	cmp    DWORD PTR [ebp-0x8],ebx
64018206:	je     0x640181b5
64018208:	push   ebx
64018209:	push   ebx
6401820a:	push   edi
6401820b:	push   DWORD PTR [ebp-0x8]
6401820e:	push   DWORD PTR [ebp+0x14]
64018211:	push   DWORD PTR [ebp+0x10]
64018214:	push   ebx
64018215:	push   DWORD PTR [ebp+0x20]
64018218:	call   esi
6401821a:	test   eax,eax
6401821c:	je     0x640182fd
64018222:	push   ebx
64018223:	push   ebx
64018224:	push   edi
64018225:	push   DWORD PTR [ebp-0x8]
64018228:	mov    edi,DWORD PTR ds:0x6402514c
6401822e:	push   DWORD PTR [ebp+0xc]
64018231:	push   DWORD PTR [ebp+0x8]
64018234:	call   edi
64018236:	mov    esi,eax
64018238:	cmp    esi,ebx
6401823a:	je     0x640182fd
64018240:	jle    0x64018281
64018242:	push   0xffffffe0
64018244:	xor    edx,edx
64018246:	pop    eax
64018247:	div    esi
64018249:	cmp    eax,0x1
6401824c:	jb     0x64018281
6401824e:	lea    eax,[esi+0x8]
64018251:	cmp    eax,0x400
64018256:	ja     0x6401826b
64018258:	call   0x64013310
6401825d:	mov    eax,esp
6401825f:	cmp    eax,ebx
64018261:	je     0x6401827f
64018263:	mov    DWORD PTR [eax],0xcccc
64018269:	jmp    0x6401827c
6401826b:	push   eax
6401826c:	call   0x64013b03
64018271:	cmp    eax,ebx
64018273:	pop    ecx
64018274:	je     0x6401827f
64018276:	mov    DWORD PTR [eax],0xdddd
6401827c:	add    eax,0x8
6401827f:	mov    ebx,eax
64018281:	test   ebx,ebx
64018283:	je     0x640182fd
64018285:	push   esi
64018286:	push   ebx
64018287:	push   DWORD PTR [ebp-0x10]
6401828a:	push   DWORD PTR [ebp-0x8]
6401828d:	push   DWORD PTR [ebp+0xc]
64018290:	push   DWORD PTR [ebp+0x8]
64018293:	call   edi
64018295:	test   eax,eax
64018297:	je     0x640182f6
64018299:	test   WORD PTR [ebp+0xc],0x400
6401829f:	je     0x640182d5
640182a1:	mov    eax,DWORD PTR [ebp+0x1c]
640182a4:	xor    edi,edi
640182a6:	cmp    eax,edi
640182a8:	mov    DWORD PTR [ebp-0xc],esi
640182ab:	je     0x640182f6
640182ad:	cmp    eax,esi
640182af:	jg     0x640182b4
640182b1:	lea    esi,[eax-0x1]
640182b4:	push   esi
640182b5:	push   ebx
640182b6:	push   eax
640182b7:	push   DWORD PTR [ebp+0x18]
640182ba:	call   0x6401be26
640182bf:	add    esp,0x10
640182c2:	test   eax,eax
640182c4:	je     0x640182f6
640182c6:	push   edi
640182c7:	push   edi
640182c8:	push   edi
640182c9:	push   edi
640182ca:	push   edi
640182cb:	call   0x640125c8
640182d0:	add    esp,0x14
640182d3:	jmp    0x640182f6
640182d5:	xor    eax,eax
640182d7:	cmp    DWORD PTR [ebp+0x1c],eax
640182da:	jne    0x640182e0
640182dc:	push   eax
640182dd:	push   eax
640182de:	jmp    0x640182e6
640182e0:	push   DWORD PTR [ebp+0x1c]
640182e3:	push   DWORD PTR [ebp+0x18]
640182e6:	push   esi
640182e7:	push   ebx
640182e8:	push   0x1
640182ea:	push   DWORD PTR [ebp+0x20]
640182ed:	call   DWORD PTR ds:0x64025024
640182f3:	mov    DWORD PTR [ebp-0xc],eax
640182f6:	push   ebx
640182f7:	call   0x6401309c
640182fc:	pop    ecx
640182fd:	push   DWORD PTR [ebp-0x8]
64018300:	call   0x6401309c
64018305:	mov    eax,DWORD PTR [ebp-0xc]
64018308:	pop    ecx
64018309:	lea    esp,[ebp-0x1c]
6401830c:	pop    edi
6401830d:	pop    esi
6401830e:	pop    ebx
6401830f:	mov    ecx,DWORD PTR [ebp-0x4]
64018312:	xor    ecx,ebp
64018314:	call   0x64012b8c
64018319:	leave  
6401831a:	ret    
6401831b:	push   ebp
6401831c:	mov    ebp,esp
6401831e:	sub    esp,0x10
64018321:	push   DWORD PTR [ebp+0x8]
64018324:	lea    ecx,[ebp-0x10]
64018327:	call   0x64012d2f
6401832c:	push   DWORD PTR [ebp+0x24]
6401832f:	lea    ecx,[ebp-0x10]
64018332:	push   DWORD PTR [ebp+0x20]
64018335:	push   DWORD PTR [ebp+0x1c]
64018338:	push   DWORD PTR [ebp+0x18]
6401833b:	push   DWORD PTR [ebp+0x14]
6401833e:	push   DWORD PTR [ebp+0x10]
64018341:	push   DWORD PTR [ebp+0xc]
64018344:	call   0x640180ba
64018349:	add    esp,0x1c
6401834c:	cmp    BYTE PTR [ebp-0x4],0x0
64018350:	je     0x64018359
64018352:	mov    ecx,DWORD PTR [ebp-0x8]
64018355:	and    DWORD PTR [ecx+0x70],0xfffffffd
64018359:	leave  
6401835a:	ret    
6401835b:	xor    eax,eax
6401835d:	cmp    DWORD PTR [esp+0x8],eax
64018361:	jbe    0x64018376
64018363:	mov    ecx,DWORD PTR [esp+0x4]
64018367:	cmp    WORD PTR [ecx],0x0
6401836b:	je     0x64018376
6401836d:	inc    eax
6401836e:	inc    ecx
6401836f:	inc    ecx
64018370:	cmp    eax,DWORD PTR [esp+0x8]
64018374:	jb     0x64018367
64018376:	ret    
64018377:	push   ebp
64018378:	mov    ebp,esp
6401837a:	sub    esp,0x4
6401837d:	mov    DWORD PTR [ebp-0x4],edi
64018380:	mov    edi,DWORD PTR [ebp+0x8]
64018383:	mov    ecx,DWORD PTR [ebp+0xc]
64018386:	shr    ecx,0x7
64018389:	pxor   xmm0,xmm0
6401838d:	jmp    0x64018397
6401838f:	lea    esp,[esp+0x0]
64018396:	nop
64018397:	movdqa XMMWORD PTR [edi],xmm0
6401839b:	movdqa XMMWORD PTR [edi+0x10],xmm0
640183a0:	movdqa XMMWORD PTR [edi+0x20],xmm0
640183a5:	movdqa XMMWORD PTR [edi+0x30],xmm0
640183aa:	movdqa XMMWORD PTR [edi+0x40],xmm0
640183af:	movdqa XMMWORD PTR [edi+0x50],xmm0
640183b4:	movdqa XMMWORD PTR [edi+0x60],xmm0
640183b9:	movdqa XMMWORD PTR [edi+0x70],xmm0
640183be:	lea    edi,[edi+0x80]
640183c4:	dec    ecx
640183c5:	jne    0x64018397
640183c7:	mov    edi,DWORD PTR [ebp-0x4]
640183ca:	mov    esp,ebp
640183cc:	pop    ebp
640183cd:	ret    
640183ce:	push   ebp
640183cf:	mov    ebp,esp
640183d1:	sub    esp,0x10
640183d4:	mov    DWORD PTR [ebp-0x4],edi
640183d7:	mov    eax,DWORD PTR [ebp+0x8]
640183da:	cdq    
640183db:	mov    edi,eax
640183dd:	xor    edi,edx
640183df:	sub    edi,edx
640183e1:	and    edi,0xf
640183e4:	xor    edi,edx
640183e6:	sub    edi,edx
640183e8:	test   edi,edi
640183ea:	jne    0x64018428
640183ec:	mov    ecx,DWORD PTR [ebp+0x10]
640183ef:	mov    edx,ecx
640183f1:	and    edx,0x7f
640183f4:	mov    DWORD PTR [ebp-0xc],edx
640183f7:	cmp    ecx,edx
640183f9:	je     0x6401840d
640183fb:	sub    ecx,edx
640183fd:	push   ecx
640183fe:	push   eax
640183ff:	call   0x64018377
64018404:	add    esp,0x8
64018407:	mov    eax,DWORD PTR [ebp+0x8]
6401840a:	mov    edx,DWORD PTR [ebp-0xc]
6401840d:	test   edx,edx
6401840f:	je     0x64018456
64018411:	add    eax,DWORD PTR [ebp+0x10]
64018414:	sub    eax,edx
64018416:	mov    DWORD PTR [ebp-0x8],eax
64018419:	xor    eax,eax
6401841b:	mov    edi,DWORD PTR [ebp-0x8]
6401841e:	mov    ecx,DWORD PTR [ebp-0xc]
64018421:	rep stos BYTE PTR es:[edi],al
64018423:	mov    eax,DWORD PTR [ebp+0x8]
64018426:	jmp    0x64018456
64018428:	neg    edi
6401842a:	add    edi,0x10
6401842d:	mov    DWORD PTR [ebp-0x10],edi
64018430:	xor    eax,eax
64018432:	mov    edi,DWORD PTR [ebp+0x8]
64018435:	mov    ecx,DWORD PTR [ebp-0x10]
64018438:	rep stos BYTE PTR es:[edi],al
6401843a:	mov    eax,DWORD PTR [ebp-0x10]
6401843d:	mov    ecx,DWORD PTR [ebp+0x8]
64018440:	mov    edx,DWORD PTR [ebp+0x10]
64018443:	add    ecx,eax
64018445:	sub    edx,eax
64018447:	push   edx
64018448:	push   0x0
6401844a:	push   ecx
6401844b:	call   0x640183ce
64018450:	add    esp,0xc
64018453:	mov    eax,DWORD PTR [ebp+0x8]
64018456:	mov    edi,DWORD PTR [ebp-0x4]
64018459:	mov    esp,ebp
6401845b:	pop    ebp
6401845c:	ret    
6401845d:	and    DWORD PTR ds:0x64032620,0x0
64018464:	call   0x6401d941
64018469:	mov    ds:0x64032620,eax
6401846e:	xor    eax,eax
64018470:	ret    
64018471:	int3   
64018472:	int3   
64018473:	int3   
64018474:	int3   
64018475:	int3   
64018476:	int3   
64018477:	int3   
64018478:	int3   
64018479:	int3   
6401847a:	int3   
6401847b:	int3   
6401847c:	int3   
6401847d:	int3   
6401847e:	int3   
6401847f:	int3   
64018480:	push   ecx
64018481:	lea    ecx,[esp+0x4]
64018485:	sub    ecx,eax
64018487:	sbb    eax,eax
64018489:	not    eax
6401848b:	and    ecx,eax
6401848d:	mov    eax,esp
6401848f:	and    eax,0xfffff000
64018494:	cmp    ecx,eax
64018496:	jb     0x640184a2
64018498:	mov    eax,ecx
6401849a:	pop    ecx
6401849b:	xchg   esp,eax
6401849c:	mov    eax,DWORD PTR [eax]
6401849e:	mov    DWORD PTR [esp],eax
640184a1:	ret    
640184a2:	sub    eax,0x1000
640184a7:	test   DWORD PTR [eax],eax
640184a9:	jmp    0x64018494
640184ab:	push   0x54
640184ad:	push   0x6402a8d8
640184b2:	call   0x64014150
640184b7:	xor    edi,edi
640184b9:	mov    DWORD PTR [ebp-0x4],edi
640184bc:	lea    eax,[ebp-0x64]
640184bf:	push   eax
640184c0:	call   DWORD PTR ds:0x64025160
640184c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640184cd:	push   0x40
640184cf:	push   0x20
640184d1:	pop    esi
640184d2:	push   esi
640184d3:	call   0x64015ea0
640184d8:	pop    ecx
640184d9:	pop    ecx
640184da:	cmp    eax,edi
640184dc:	je     0x640186f6
640184e2:	mov    ds:0x64032520,eax
640184e7:	mov    DWORD PTR ds:0x64032500,esi
640184ed:	lea    ecx,[eax+0x800]
640184f3:	jmp    0x64018525
640184f5:	mov    BYTE PTR [eax+0x4],0x0
640184f9:	or     DWORD PTR [eax],0xffffffff
640184fc:	mov    BYTE PTR [eax+0x5],0xa
64018500:	mov    DWORD PTR [eax+0x8],edi
64018503:	mov    BYTE PTR [eax+0x24],0x0
64018507:	mov    BYTE PTR [eax+0x25],0xa
6401850b:	mov    BYTE PTR [eax+0x26],0xa
6401850f:	mov    DWORD PTR [eax+0x38],edi
64018512:	mov    BYTE PTR [eax+0x34],0x0
64018516:	add    eax,0x40
64018519:	mov    ecx,DWORD PTR ds:0x64032520
6401851f:	add    ecx,0x800
64018525:	cmp    eax,ecx
64018527:	jb     0x640184f5
64018529:	cmp    WORD PTR [ebp-0x32],di
6401852d:	je     0x6401863d
64018533:	mov    eax,DWORD PTR [ebp-0x30]
64018536:	cmp    eax,edi
64018538:	je     0x6401863d
6401853e:	mov    edi,DWORD PTR [eax]
64018540:	lea    ebx,[eax+0x4]
64018543:	lea    eax,[ebx+edi*1]
64018546:	mov    DWORD PTR [ebp-0x1c],eax
64018549:	mov    esi,0x800
6401854e:	cmp    edi,esi
64018550:	jl     0x64018554
64018552:	mov    edi,esi
64018554:	mov    DWORD PTR [ebp-0x20],0x1
6401855b:	jmp    0x640185b8
6401855d:	push   0x40
6401855f:	push   0x20
64018561:	call   0x64015ea0
64018566:	pop    ecx
64018567:	pop    ecx
64018568:	test   eax,eax
6401856a:	je     0x640185c2
6401856c:	mov    ecx,DWORD PTR [ebp-0x20]
6401856f:	lea    ecx,[ecx*4+0x64032520]
64018576:	mov    DWORD PTR [ecx],eax
64018578:	add    DWORD PTR ds:0x64032500,0x20
6401857f:	lea    edx,[eax+0x800]
64018585:	jmp    0x640185b1
64018587:	mov    BYTE PTR [eax+0x4],0x0
6401858b:	or     DWORD PTR [eax],0xffffffff
6401858e:	mov    BYTE PTR [eax+0x5],0xa
64018592:	and    DWORD PTR [eax+0x8],0x0
64018596:	and    BYTE PTR [eax+0x24],0x80
6401859a:	mov    BYTE PTR [eax+0x25],0xa
6401859e:	mov    BYTE PTR [eax+0x26],0xa
640185a2:	and    DWORD PTR [eax+0x38],0x0
640185a6:	mov    BYTE PTR [eax+0x34],0x0
640185aa:	add    eax,0x40
640185ad:	mov    edx,DWORD PTR [ecx]
640185af:	add    edx,esi
640185b1:	cmp    eax,edx
640185b3:	jb     0x64018587
640185b5:	inc    DWORD PTR [ebp-0x20]
640185b8:	cmp    DWORD PTR ds:0x64032500,edi
640185be:	jl     0x6401855d
640185c0:	jmp    0x640185c8
640185c2:	mov    edi,DWORD PTR ds:0x64032500
640185c8:	and    DWORD PTR [ebp-0x20],0x0
640185cc:	test   edi,edi
640185ce:	jle    0x6401863d
640185d0:	mov    eax,DWORD PTR [ebp-0x1c]
640185d3:	mov    ecx,DWORD PTR [eax]
640185d5:	cmp    ecx,0xffffffff
640185d8:	je     0x64018630
640185da:	cmp    ecx,0xfffffffe
640185dd:	je     0x64018630
640185df:	mov    al,BYTE PTR [ebx]
640185e1:	test   al,0x1
640185e3:	je     0x64018630
640185e5:	test   al,0x8
640185e7:	jne    0x640185f4
640185e9:	push   ecx
640185ea:	call   DWORD PTR ds:0x6402515c
640185f0:	test   eax,eax
640185f2:	je     0x64018630
640185f4:	mov    esi,DWORD PTR [ebp-0x20]
640185f7:	mov    eax,esi
640185f9:	sar    eax,0x5
640185fc:	and    esi,0x1f
640185ff:	shl    esi,0x6
64018602:	add    esi,DWORD PTR [eax*4+0x64032520]
64018609:	mov    eax,DWORD PTR [ebp-0x1c]
6401860c:	mov    eax,DWORD PTR [eax]
6401860e:	mov    DWORD PTR [esi],eax
64018610:	mov    al,BYTE PTR [ebx]
64018612:	mov    BYTE PTR [esi+0x4],al
64018615:	push   0xfa0
6401861a:	lea    eax,[esi+0xc]
6401861d:	push   eax
6401861e:	call   0x6401b858
64018623:	pop    ecx
64018624:	pop    ecx
64018625:	test   eax,eax
64018627:	je     0x640186f6
6401862d:	inc    DWORD PTR [esi+0x8]
64018630:	inc    DWORD PTR [ebp-0x20]
64018633:	inc    ebx
64018634:	add    DWORD PTR [ebp-0x1c],0x4
64018638:	cmp    DWORD PTR [ebp-0x20],edi
6401863b:	jl     0x640185d0
6401863d:	xor    ebx,ebx
6401863f:	mov    esi,ebx
64018641:	shl    esi,0x6
64018644:	add    esi,DWORD PTR ds:0x64032520
6401864a:	mov    eax,DWORD PTR [esi]
6401864c:	cmp    eax,0xffffffff
6401864f:	je     0x6401865c
64018651:	cmp    eax,0xfffffffe
64018654:	je     0x6401865c
64018656:	or     BYTE PTR [esi+0x4],0x80
6401865a:	jmp    0x640186ce
6401865c:	mov    BYTE PTR [esi+0x4],0x81
64018660:	test   ebx,ebx
64018662:	jne    0x64018669
64018664:	push   0xfffffff6
64018666:	pop    eax
64018667:	jmp    0x64018673
64018669:	mov    eax,ebx
6401866b:	dec    eax
6401866c:	neg    eax
6401866e:	sbb    eax,eax
64018670:	add    eax,0xfffffff5
64018673:	push   eax
64018674:	call   DWORD PTR ds:0x64025158
6401867a:	mov    edi,eax
6401867c:	cmp    edi,0xffffffff
6401867f:	je     0x640186c4
64018681:	test   edi,edi
64018683:	je     0x640186c4
64018685:	push   edi
64018686:	call   DWORD PTR ds:0x6402515c
6401868c:	test   eax,eax
6401868e:	je     0x640186c4
64018690:	mov    DWORD PTR [esi],edi
64018692:	and    eax,0xff
64018697:	cmp    eax,0x2
6401869a:	jne    0x640186a2
6401869c:	or     BYTE PTR [esi+0x4],0x40
640186a0:	jmp    0x640186ab
640186a2:	cmp    eax,0x3
640186a5:	jne    0x640186ab
640186a7:	or     BYTE PTR [esi+0x4],0x8
640186ab:	push   0xfa0
640186b0:	lea    eax,[esi+0xc]
640186b3:	push   eax
640186b4:	call   0x6401b858
640186b9:	pop    ecx
640186ba:	pop    ecx
640186bb:	test   eax,eax
640186bd:	je     0x640186f6
640186bf:	inc    DWORD PTR [esi+0x8]
640186c2:	jmp    0x640186ce
640186c4:	or     BYTE PTR [esi+0x4],0x40
640186c8:	mov    DWORD PTR [esi],0xfffffffe
640186ce:	inc    ebx
640186cf:	cmp    ebx,0x3
640186d2:	jl     0x6401863f
640186d8:	push   DWORD PTR ds:0x64032500
640186de:	call   DWORD PTR ds:0x64025154
640186e4:	xor    eax,eax
640186e6:	jmp    0x640186f9
640186e8:	xor    eax,eax
640186ea:	inc    eax
640186eb:	ret    
640186ec:	mov    esp,DWORD PTR [ebp-0x18]
640186ef:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640186f6:	or     eax,0xffffffff
640186f9:	call   0x64014195
640186fe:	ret    
640186ff:	push   esi
64018700:	push   edi
64018701:	mov    esi,0x64032520
64018706:	mov    edi,DWORD PTR [esi]
64018708:	test   edi,edi
6401870a:	je     0x6401873d
6401870c:	lea    eax,[edi+0x800]
64018712:	jmp    0x6401872e
64018714:	cmp    DWORD PTR [edi+0x8],0x0
64018718:	je     0x64018724
6401871a:	lea    eax,[edi+0xc]
6401871d:	push   eax
6401871e:	call   DWORD PTR ds:0x640250a4
64018724:	mov    eax,DWORD PTR [esi]
64018726:	add    edi,0x40
64018729:	add    eax,0x800
6401872e:	cmp    edi,eax
64018730:	jb     0x64018714
64018732:	push   DWORD PTR [esi]
64018734:	call   0x64013a26
64018739:	and    DWORD PTR [esi],0x0
6401873c:	pop    ecx
6401873d:	add    esi,0x4
64018740:	cmp    esi,0x64032620
64018746:	jl     0x64018706
64018748:	pop    edi
64018749:	pop    esi
6401874a:	ret    
6401874b:	push   ebx
6401874c:	xor    ebx,ebx
6401874e:	cmp    DWORD PTR ds:0x64032634,ebx
64018754:	push   esi
64018755:	push   edi
64018756:	jne    0x6401875d
64018758:	call   0x64016971
6401875d:	mov    esi,DWORD PTR ds:0x6402e574
64018763:	xor    edi,edi
64018765:	cmp    esi,ebx
64018767:	jne    0x64018781
64018769:	or     eax,0xffffffff
6401876c:	jmp    0x6401880c
64018771:	cmp    al,0x3d
64018773:	je     0x64018776
64018775:	inc    edi
64018776:	push   esi
64018777:	call   0x64014350
6401877c:	pop    ecx
6401877d:	lea    esi,[esi+eax*1+0x1]
64018781:	mov    al,BYTE PTR [esi]
64018783:	cmp    al,bl
64018785:	jne    0x64018771
64018787:	push   0x4
64018789:	inc    edi
6401878a:	push   edi
6401878b:	call   0x64015ea0
64018790:	mov    edi,eax
64018792:	cmp    edi,ebx
64018794:	pop    ecx
64018795:	pop    ecx
64018796:	mov    DWORD PTR ds:0x6402e8f4,edi
6401879c:	je     0x64018769
6401879e:	mov    esi,DWORD PTR ds:0x6402e574
640187a4:	push   ebp
640187a5:	jmp    0x640187e7
640187a7:	push   esi
640187a8:	call   0x64014350
640187ad:	mov    ebp,eax
640187af:	inc    ebp
640187b0:	cmp    BYTE PTR [esi],0x3d
640187b3:	pop    ecx
640187b4:	je     0x640187e5
640187b6:	push   0x1
640187b8:	push   ebp
640187b9:	call   0x64015ea0
640187be:	cmp    eax,ebx
640187c0:	pop    ecx
640187c1:	pop    ecx
640187c2:	mov    DWORD PTR [edi],eax
640187c4:	je     0x64018810
640187c6:	push   esi
640187c7:	push   ebp
640187c8:	push   eax
640187c9:	call   0x64014548
640187ce:	add    esp,0xc
640187d1:	test   eax,eax
640187d3:	je     0x640187e2
640187d5:	push   ebx
640187d6:	push   ebx
640187d7:	push   ebx
640187d8:	push   ebx
640187d9:	push   ebx
640187da:	call   0x640125c8
640187df:	add    esp,0x14
640187e2:	add    edi,0x4
640187e5:	add    esi,ebp
640187e7:	cmp    BYTE PTR [esi],bl
640187e9:	jne    0x640187a7
640187eb:	push   DWORD PTR ds:0x6402e574
640187f1:	call   0x64013a26
640187f6:	mov    DWORD PTR ds:0x6402e574,ebx
640187fc:	mov    DWORD PTR [edi],ebx
640187fe:	mov    DWORD PTR ds:0x64032628,0x1
64018808:	xor    eax,eax
6401880a:	pop    ecx
6401880b:	pop    ebp
6401880c:	pop    edi
6401880d:	pop    esi
6401880e:	pop    ebx
6401880f:	ret    
64018810:	push   DWORD PTR ds:0x6402e8f4
64018816:	call   0x64013a26
6401881b:	mov    DWORD PTR ds:0x6402e8f4,ebx
64018821:	or     eax,0xffffffff
64018824:	jmp    0x6401880a
64018826:	push   ebp
64018827:	mov    ebp,esp
64018829:	push   ecx
6401882a:	mov    ecx,DWORD PTR [ebp+0x10]
6401882d:	push   ebx
6401882e:	xor    eax,eax
64018830:	cmp    DWORD PTR [ebp+0x8],eax
64018833:	push   esi
64018834:	mov    DWORD PTR [edi],eax
64018836:	mov    esi,edx
64018838:	mov    edx,DWORD PTR [ebp+0xc]
6401883b:	mov    DWORD PTR [ecx],0x1
64018841:	je     0x6401884c
64018843:	mov    ebx,DWORD PTR [ebp+0x8]
64018846:	add    DWORD PTR [ebp+0x8],0x4
6401884a:	mov    DWORD PTR [ebx],edx
6401884c:	mov    DWORD PTR [ebp-0x4],eax
6401884f:	cmp    BYTE PTR [esi],0x22
64018852:	jne    0x64018864
64018854:	xor    eax,eax
64018856:	cmp    DWORD PTR [ebp-0x4],eax
64018859:	mov    bl,0x22
6401885b:	sete   al
6401885e:	inc    esi
6401885f:	mov    DWORD PTR [ebp-0x4],eax
64018862:	jmp    0x640188a0
64018864:	inc    DWORD PTR [edi]
64018866:	test   edx,edx
64018868:	je     0x64018872
6401886a:	mov    al,BYTE PTR [esi]
6401886c:	mov    BYTE PTR [edx],al
6401886e:	inc    edx
6401886f:	mov    DWORD PTR [ebp+0xc],edx
64018872:	mov    bl,BYTE PTR [esi]
64018874:	movzx  eax,bl
64018877:	push   eax
64018878:	inc    esi
64018879:	call   0x6401d9ff
6401887e:	test   eax,eax
64018880:	pop    ecx
64018881:	je     0x64018896
64018883:	inc    DWORD PTR [edi]
64018885:	cmp    DWORD PTR [ebp+0xc],0x0
64018889:	je     0x64018895
6401888b:	mov    ecx,DWORD PTR [ebp+0xc]
6401888e:	mov    al,BYTE PTR [esi]
64018890:	inc    DWORD PTR [ebp+0xc]
64018893:	mov    BYTE PTR [ecx],al
64018895:	inc    esi
64018896:	test   bl,bl
64018898:	mov    edx,DWORD PTR [ebp+0xc]
6401889b:	mov    ecx,DWORD PTR [ebp+0x10]
6401889e:	je     0x640188d2
640188a0:	cmp    DWORD PTR [ebp-0x4],0x0
640188a4:	jne    0x6401884f
640188a6:	cmp    bl,0x20
640188a9:	je     0x640188b0
640188ab:	cmp    bl,0x9
640188ae:	jne    0x6401884f
640188b0:	test   edx,edx
640188b2:	je     0x640188b8
640188b4:	mov    BYTE PTR [edx-0x1],0x0
640188b8:	and    DWORD PTR [ebp-0x4],0x0
640188bc:	cmp    BYTE PTR [esi],0x0
640188bf:	je     0x640189ae
640188c5:	mov    al,BYTE PTR [esi]
640188c7:	cmp    al,0x20
640188c9:	je     0x640188cf
640188cb:	cmp    al,0x9
640188cd:	jne    0x640188d5
640188cf:	inc    esi
640188d0:	jmp    0x640188c5
640188d2:	dec    esi
640188d3:	jmp    0x640188b8
640188d5:	cmp    BYTE PTR [esi],0x0
640188d8:	je     0x640189ae
640188de:	cmp    DWORD PTR [ebp+0x8],0x0
640188e2:	je     0x640188ed
640188e4:	mov    eax,DWORD PTR [ebp+0x8]
640188e7:	add    DWORD PTR [ebp+0x8],0x4
640188eb:	mov    DWORD PTR [eax],edx
640188ed:	inc    DWORD PTR [ecx]
640188ef:	xor    ebx,ebx
640188f1:	inc    ebx
640188f2:	xor    ecx,ecx
640188f4:	jmp    0x640188f8
640188f6:	inc    esi
640188f7:	inc    ecx
640188f8:	cmp    BYTE PTR [esi],0x5c
640188fb:	je     0x640188f6
640188fd:	cmp    BYTE PTR [esi],0x22
64018900:	jne    0x64018928
64018902:	test   cl,0x1
64018905:	jne    0x64018926
64018907:	cmp    DWORD PTR [ebp-0x4],0x0
6401890b:	je     0x64018919
6401890d:	lea    eax,[esi+0x1]
64018910:	cmp    BYTE PTR [eax],0x22
64018913:	jne    0x64018919
64018915:	mov    esi,eax
64018917:	jmp    0x64018926
64018919:	xor    eax,eax
6401891b:	xor    ebx,ebx
6401891d:	cmp    DWORD PTR [ebp-0x4],eax
64018920:	sete   al
64018923:	mov    DWORD PTR [ebp-0x4],eax
64018926:	shr    ecx,1
64018928:	test   ecx,ecx
6401892a:	je     0x6401893e
6401892c:	dec    ecx
6401892d:	test   edx,edx
6401892f:	je     0x64018935
64018931:	mov    BYTE PTR [edx],0x5c
64018934:	inc    edx
64018935:	inc    DWORD PTR [edi]
64018937:	test   ecx,ecx
64018939:	jne    0x6401892c
6401893b:	mov    DWORD PTR [ebp+0xc],edx
6401893e:	mov    al,BYTE PTR [esi]
64018940:	test   al,al
64018942:	je     0x64018999
64018944:	cmp    DWORD PTR [ebp-0x4],0x0
64018948:	jne    0x64018952
6401894a:	cmp    al,0x20
6401894c:	je     0x64018999
6401894e:	cmp    al,0x9
64018950:	je     0x64018999
64018952:	test   ebx,ebx
64018954:	je     0x64018993
64018956:	test   edx,edx
64018958:	movsx  eax,al
6401895b:	push   eax
6401895c:	je     0x64018981
6401895e:	call   0x6401d9ff
64018963:	test   eax,eax
64018965:	pop    ecx
64018966:	je     0x64018975
64018968:	mov    al,BYTE PTR [esi]
6401896a:	mov    ecx,DWORD PTR [ebp+0xc]
6401896d:	inc    DWORD PTR [ebp+0xc]
64018970:	mov    BYTE PTR [ecx],al
64018972:	inc    esi
64018973:	inc    DWORD PTR [edi]
64018975:	mov    ecx,DWORD PTR [ebp+0xc]
64018978:	mov    al,BYTE PTR [esi]
6401897a:	inc    DWORD PTR [ebp+0xc]
6401897d:	mov    BYTE PTR [ecx],al
6401897f:	jmp    0x6401898e
64018981:	call   0x6401d9ff
64018986:	test   eax,eax
64018988:	pop    ecx
64018989:	je     0x6401898e
6401898b:	inc    esi
6401898c:	inc    DWORD PTR [edi]
6401898e:	inc    DWORD PTR [edi]
64018990:	mov    edx,DWORD PTR [ebp+0xc]
64018993:	inc    esi
64018994:	jmp    0x640188ef
64018999:	test   edx,edx
6401899b:	je     0x640189a4
6401899d:	mov    BYTE PTR [edx],0x0
640189a0:	inc    edx
640189a1:	mov    DWORD PTR [ebp+0xc],edx
640189a4:	inc    DWORD PTR [edi]
640189a6:	mov    ecx,DWORD PTR [ebp+0x10]
640189a9:	jmp    0x640188bc
640189ae:	mov    eax,DWORD PTR [ebp+0x8]
640189b1:	test   eax,eax
640189b3:	pop    esi
640189b4:	pop    ebx
640189b5:	je     0x640189ba
640189b7:	and    DWORD PTR [eax],0x0
640189ba:	inc    DWORD PTR [ecx]
640189bc:	leave  
640189bd:	ret    
640189be:	push   ebp
640189bf:	mov    ebp,esp
640189c1:	sub    esp,0xc
640189c4:	push   ebx
640189c5:	xor    ebx,ebx
640189c7:	cmp    DWORD PTR ds:0x64032634,ebx
640189cd:	push   esi
640189ce:	push   edi
640189cf:	jne    0x640189d6
640189d1:	call   0x64016971
640189d6:	push   0x104
640189db:	mov    esi,0x6402e960
640189e0:	push   esi
640189e1:	push   ebx
640189e2:	mov    BYTE PTR ds:0x6402ea64,bl
640189e8:	call   DWORD PTR ds:0x64025164
640189ee:	mov    eax,ds:0x64032640
640189f3:	cmp    eax,ebx
640189f5:	mov    DWORD PTR ds:0x6402e904,esi
640189fb:	je     0x64018a04
640189fd:	cmp    BYTE PTR [eax],bl
640189ff:	mov    DWORD PTR [ebp-0x4],eax
64018a02:	jne    0x64018a07
64018a04:	mov    DWORD PTR [ebp-0x4],esi
64018a07:	mov    edx,DWORD PTR [ebp-0x4]
64018a0a:	lea    eax,[ebp-0x8]
64018a0d:	push   eax
64018a0e:	push   ebx
64018a0f:	push   ebx
64018a10:	lea    edi,[ebp-0xc]
64018a13:	call   0x64018826
64018a18:	mov    eax,DWORD PTR [ebp-0x8]
64018a1b:	add    esp,0xc
64018a1e:	cmp    eax,0x3fffffff
64018a23:	jae    0x64018a6f
64018a25:	mov    ecx,DWORD PTR [ebp-0xc]
64018a28:	cmp    ecx,0xffffffff
64018a2b:	jae    0x64018a6f
64018a2d:	mov    edi,eax
64018a2f:	shl    edi,0x2
64018a32:	lea    eax,[edi+ecx*1]
64018a35:	cmp    eax,ecx
64018a37:	jb     0x64018a6f
64018a39:	push   eax
64018a3a:	call   0x64015e60
64018a3f:	mov    esi,eax
64018a41:	cmp    esi,ebx
64018a43:	pop    ecx
64018a44:	je     0x64018a6f
64018a46:	mov    edx,DWORD PTR [ebp-0x4]
64018a49:	lea    eax,[ebp-0x8]
64018a4c:	push   eax
64018a4d:	add    edi,esi
64018a4f:	push   edi
64018a50:	push   esi
64018a51:	lea    edi,[ebp-0xc]
64018a54:	call   0x64018826
64018a59:	mov    eax,DWORD PTR [ebp-0x8]
64018a5c:	add    esp,0xc
64018a5f:	dec    eax
64018a60:	mov    ds:0x6402e8e8,eax
64018a65:	mov    DWORD PTR ds:0x6402e8ec,esi
64018a6b:	xor    eax,eax
64018a6d:	jmp    0x64018a72
64018a6f:	or     eax,0xffffffff
64018a72:	pop    edi
64018a73:	pop    esi
64018a74:	pop    ebx
64018a75:	leave  
64018a76:	ret    
64018a77:	push   ecx
64018a78:	push   ecx
64018a79:	mov    eax,ds:0x6402ea68
64018a7e:	push   ebx
64018a7f:	push   ebp
64018a80:	push   esi
64018a81:	push   edi
64018a82:	mov    edi,DWORD PTR ds:0x64025084
64018a88:	xor    ebx,ebx
64018a8a:	xor    esi,esi
64018a8c:	cmp    eax,ebx
64018a8e:	push   0x2
64018a90:	pop    ebp
64018a91:	jne    0x64018ac0
64018a93:	call   edi
64018a95:	mov    esi,eax
64018a97:	cmp    esi,ebx
64018a99:	je     0x64018aa7
64018a9b:	mov    DWORD PTR ds:0x6402ea68,0x1
64018aa5:	jmp    0x64018ac9
64018aa7:	call   DWORD PTR ds:0x64025044
64018aad:	cmp    eax,0x78
64018ab0:	jne    0x64018abb
64018ab2:	mov    eax,ebp
64018ab4:	mov    ds:0x6402ea68,eax
64018ab9:	jmp    0x64018ac0
64018abb:	mov    eax,ds:0x6402ea68
64018ac0:	cmp    eax,0x1
64018ac3:	jne    0x64018b4d
64018ac9:	cmp    esi,ebx
64018acb:	jne    0x64018adc
64018acd:	call   edi
64018acf:	mov    esi,eax
64018ad1:	cmp    esi,ebx
64018ad3:	jne    0x64018adc
64018ad5:	xor    eax,eax
64018ad7:	jmp    0x64018ba5
64018adc:	cmp    WORD PTR [esi],bx
64018adf:	mov    eax,esi
64018ae1:	je     0x64018af1
64018ae3:	add    eax,ebp
64018ae5:	cmp    WORD PTR [eax],bx
64018ae8:	jne    0x64018ae3
64018aea:	add    eax,ebp
64018aec:	cmp    WORD PTR [eax],bx
64018aef:	jne    0x64018ae3
64018af1:	mov    edi,DWORD PTR ds:0x64025028
64018af7:	push   ebx
64018af8:	push   ebx
64018af9:	push   ebx
64018afa:	sub    eax,esi
64018afc:	push   ebx
64018afd:	sar    eax,1
64018aff:	inc    eax
64018b00:	push   eax
64018b01:	push   esi
64018b02:	push   ebx
64018b03:	push   ebx
64018b04:	mov    DWORD PTR [esp+0x34],eax
64018b08:	call   edi
64018b0a:	mov    ebp,eax
64018b0c:	cmp    ebp,ebx
64018b0e:	je     0x64018b42
64018b10:	push   ebp
64018b11:	call   0x64015e60
64018b16:	cmp    eax,ebx
64018b18:	pop    ecx
64018b19:	mov    DWORD PTR [esp+0x10],eax
64018b1d:	je     0x64018b42
64018b1f:	push   ebx
64018b20:	push   ebx
64018b21:	push   ebp
64018b22:	push   eax
64018b23:	push   DWORD PTR [esp+0x24]
64018b27:	push   esi
64018b28:	push   ebx
64018b29:	push   ebx
64018b2a:	call   edi
64018b2c:	test   eax,eax
64018b2e:	jne    0x64018b3e
64018b30:	push   DWORD PTR [esp+0x10]
64018b34:	call   0x64013a26
64018b39:	pop    ecx
64018b3a:	mov    DWORD PTR [esp+0x10],ebx
64018b3e:	mov    ebx,DWORD PTR [esp+0x10]
64018b42:	push   esi
64018b43:	call   DWORD PTR ds:0x64025170
64018b49:	mov    eax,ebx
64018b4b:	jmp    0x64018ba5
64018b4d:	cmp    eax,ebp
64018b4f:	je     0x64018b55
64018b51:	cmp    eax,ebx
64018b53:	jne    0x64018ad5
64018b55:	call   DWORD PTR ds:0x6402516c
64018b5b:	mov    esi,eax
64018b5d:	cmp    esi,ebx
64018b5f:	je     0x64018ad5
64018b65:	cmp    BYTE PTR [esi],bl
64018b67:	je     0x64018b73
64018b69:	inc    eax
64018b6a:	cmp    BYTE PTR [eax],bl
64018b6c:	jne    0x64018b69
64018b6e:	inc    eax
64018b6f:	cmp    BYTE PTR [eax],bl
64018b71:	jne    0x64018b69
64018b73:	sub    eax,esi
64018b75:	inc    eax
64018b76:	mov    ebp,eax
64018b78:	push   ebp
64018b79:	call   0x64015e60
64018b7e:	mov    edi,eax
64018b80:	cmp    edi,ebx
64018b82:	pop    ecx
64018b83:	jne    0x64018b91
64018b85:	push   esi
64018b86:	call   DWORD PTR ds:0x64025168
64018b8c:	jmp    0x64018ad5
64018b91:	push   ebp
64018b92:	push   esi
64018b93:	push   edi
64018b94:	call   0x640145b0
64018b99:	add    esp,0xc
64018b9c:	push   esi
64018b9d:	call   DWORD PTR ds:0x64025168
64018ba3:	mov    eax,edi
64018ba5:	pop    edi
64018ba6:	pop    esi
64018ba7:	pop    ebp
64018ba8:	pop    ebx
64018ba9:	pop    ecx
64018baa:	pop    ecx
64018bab:	ret    
64018bac:	push   esi
64018bad:	push   edi
64018bae:	mov    eax,0x6402a0bc
64018bb3:	mov    edi,0x6402a0bc
64018bb8:	cmp    eax,edi
64018bba:	mov    esi,eax
64018bbc:	jae    0x64018bcd
64018bbe:	mov    eax,DWORD PTR [esi]
64018bc0:	test   eax,eax
64018bc2:	je     0x64018bc6
64018bc4:	call   eax
64018bc6:	add    esi,0x4
64018bc9:	cmp    esi,edi
64018bcb:	jb     0x64018bbe
64018bcd:	pop    edi
64018bce:	pop    esi
64018bcf:	ret    
64018bd0:	push   esi
64018bd1:	push   edi
64018bd2:	mov    eax,0x6402a0c4
64018bd7:	mov    edi,0x6402a0c4
64018bdc:	cmp    eax,edi
64018bde:	mov    esi,eax
64018be0:	jae    0x64018bf1
64018be2:	mov    eax,DWORD PTR [esi]
64018be4:	test   eax,eax
64018be6:	je     0x64018bea
64018be8:	call   eax
64018bea:	add    esi,0x4
64018bed:	cmp    esi,edi
64018bef:	jb     0x64018be2
64018bf1:	pop    edi
64018bf2:	pop    esi
64018bf3:	ret    
64018bf4:	push   ebp
64018bf5:	mov    ebp,esp
64018bf7:	push   ecx
64018bf8:	push   ecx
64018bf9:	push   esi
64018bfa:	lea    eax,[ebp-0x4]
64018bfd:	xor    esi,esi
64018bff:	push   eax
64018c00:	mov    DWORD PTR [ebp-0x4],esi
64018c03:	mov    DWORD PTR [ebp-0x8],esi
64018c06:	call   0x6401607f
64018c0b:	test   eax,eax
64018c0d:	pop    ecx
64018c0e:	je     0x64018c1d
64018c10:	push   esi
64018c11:	push   esi
64018c12:	push   esi
64018c13:	push   esi
64018c14:	push   esi
64018c15:	call   0x640125c8
64018c1a:	add    esp,0x14
64018c1d:	lea    eax,[ebp-0x8]
64018c20:	push   eax
64018c21:	call   0x640160b6
64018c26:	test   eax,eax
64018c28:	pop    ecx
64018c29:	je     0x64018c38
64018c2b:	push   esi
64018c2c:	push   esi
64018c2d:	push   esi
64018c2e:	push   esi
64018c2f:	push   esi
64018c30:	call   0x640125c8
64018c35:	add    esp,0x14
64018c38:	cmp    DWORD PTR [ebp-0x4],0x2
64018c3c:	pop    esi
64018c3d:	jne    0x64018c4a
64018c3f:	cmp    DWORD PTR [ebp-0x8],0x5
64018c43:	jb     0x64018c4a
64018c45:	xor    eax,eax
64018c47:	inc    eax
64018c48:	leave  
64018c49:	ret    
64018c4a:	push   0x3
64018c4c:	pop    eax
64018c4d:	leave  
64018c4e:	ret    
64018c4f:	xor    eax,eax
64018c51:	cmp    DWORD PTR [esp+0x4],eax
64018c55:	push   0x0
64018c57:	sete   al
64018c5a:	push   0x1000
64018c5f:	push   eax
64018c60:	call   DWORD PTR ds:0x64025174
64018c66:	test   eax,eax
64018c68:	mov    ds:0x6402ea6c,eax
64018c6d:	jne    0x64018c72
64018c6f:	xor    eax,eax
64018c71:	ret    
64018c72:	call   0x64018bf4
64018c77:	cmp    eax,0x3
64018c7a:	mov    ds:0x640324fc,eax
64018c7f:	jne    0x64018ca5
64018c81:	push   0x3f8
64018c86:	call   0x6401a1cb
64018c8b:	test   eax,eax
64018c8d:	pop    ecx
64018c8e:	jne    0x64018ca5
64018c90:	push   DWORD PTR ds:0x6402ea6c
64018c96:	call   DWORD PTR ds:0x640250f4
64018c9c:	and    DWORD PTR ds:0x6402ea6c,0x0
64018ca3:	jmp    0x64018c6f
64018ca5:	xor    eax,eax
64018ca7:	inc    eax
64018ca8:	ret    
64018ca9:	push   ebp
64018caa:	xor    ebp,ebp
64018cac:	cmp    DWORD PTR ds:0x640324fc,0x3
64018cb3:	jne    0x64018d09
64018cb5:	push   ebx
64018cb6:	mov    ebx,DWORD PTR ds:0x640250fc
64018cbc:	push   edi
64018cbd:	xor    edi,edi
64018cbf:	cmp    DWORD PTR ds:0x640324e4,ebp
64018cc5:	jle    0x64018cf8
64018cc7:	push   esi
64018cc8:	mov    esi,DWORD PTR ds:0x640324e8
64018cce:	add    esi,0x10
64018cd1:	push   0x8000
64018cd6:	push   ebp
64018cd7:	push   DWORD PTR [esi-0x4]
64018cda:	call   DWORD PTR ds:0x64025178
64018ce0:	push   DWORD PTR [esi]
64018ce2:	push   ebp
64018ce3:	push   DWORD PTR ds:0x6402ea6c
64018ce9:	call   ebx
64018ceb:	add    esi,0x14
64018cee:	inc    edi
64018cef:	cmp    edi,DWORD PTR ds:0x640324e4
64018cf5:	jl     0x64018cd1
64018cf7:	pop    esi
64018cf8:	push   DWORD PTR ds:0x640324e8
64018cfe:	push   ebp
64018cff:	push   DWORD PTR ds:0x6402ea6c
64018d05:	call   ebx
64018d07:	pop    edi
64018d08:	pop    ebx
64018d09:	push   DWORD PTR ds:0x6402ea6c
64018d0f:	call   DWORD PTR ds:0x640250f4
64018d15:	mov    DWORD PTR ds:0x6402ea6c,ebp
64018d1b:	pop    ebp
64018d1c:	ret    
64018d1d:	push   ebp
64018d1e:	mov    ebp,esp
64018d20:	push   ecx
64018d21:	push   ecx
64018d22:	push   esi
64018d23:	call   0x64014c24
64018d28:	mov    esi,eax
64018d2a:	test   esi,esi
64018d2c:	je     0x64018e78
64018d32:	mov    edx,DWORD PTR [esi+0x5c]
64018d35:	mov    eax,ds:0x6402d94c
64018d3a:	push   edi
64018d3b:	mov    edi,DWORD PTR [ebp+0x8]
64018d3e:	mov    ecx,edx
64018d40:	push   ebx
64018d41:	cmp    DWORD PTR [ecx],edi
64018d43:	je     0x64018d53
64018d45:	mov    ebx,eax
64018d47:	imul   ebx,ebx,0xc
64018d4a:	add    ecx,0xc
64018d4d:	add    ebx,edx
64018d4f:	cmp    ecx,ebx
64018d51:	jb     0x64018d41
64018d53:	imul   eax,eax,0xc
64018d56:	add    eax,edx
64018d58:	cmp    ecx,eax
64018d5a:	jae    0x64018d64
64018d5c:	cmp    DWORD PTR [ecx],edi
64018d5e:	jne    0x64018d64
64018d60:	mov    eax,ecx
64018d62:	jmp    0x64018d66
64018d64:	xor    eax,eax
64018d66:	test   eax,eax
64018d68:	je     0x64018d74
64018d6a:	mov    ebx,DWORD PTR [eax+0x8]
64018d6d:	test   ebx,ebx
64018d6f:	mov    DWORD PTR [ebp-0x4],ebx
64018d72:	jne    0x64018d7b
64018d74:	xor    eax,eax
64018d76:	jmp    0x64018e76
64018d7b:	cmp    ebx,0x5
64018d7e:	jne    0x64018d8c
64018d80:	and    DWORD PTR [eax+0x8],0x0
64018d84:	xor    eax,eax
64018d86:	inc    eax
64018d87:	jmp    0x64018e76
64018d8c:	cmp    ebx,0x1
64018d8f:	je     0x64018e73
64018d95:	mov    ecx,DWORD PTR [esi+0x60]
64018d98:	mov    DWORD PTR [ebp-0x8],ecx
64018d9b:	mov    ecx,DWORD PTR [ebp+0xc]
64018d9e:	mov    DWORD PTR [esi+0x60],ecx
64018da1:	mov    ecx,DWORD PTR [eax+0x4]
64018da4:	cmp    ecx,0x8
64018da7:	jne    0x64018e65
64018dad:	mov    ecx,DWORD PTR ds:0x6402d940
64018db3:	mov    edi,DWORD PTR ds:0x6402d944
64018db9:	mov    edx,ecx
64018dbb:	add    edi,ecx
64018dbd:	cmp    edx,edi
64018dbf:	jge    0x64018de5
64018dc1:	imul   ecx,ecx,0xc
64018dc4:	mov    edi,DWORD PTR [esi+0x5c]
64018dc7:	and    DWORD PTR [ecx+edi*1+0x8],0x0
64018dcc:	mov    edi,DWORD PTR ds:0x6402d940
64018dd2:	mov    ebx,DWORD PTR ds:0x6402d944
64018dd8:	inc    edx
64018dd9:	add    ebx,edi
64018ddb:	add    ecx,0xc
64018dde:	cmp    edx,ebx
64018de0:	jl     0x64018dc4
64018de2:	mov    ebx,DWORD PTR [ebp-0x4]
64018de5:	mov    eax,DWORD PTR [eax]
64018de7:	cmp    eax,0xc000008e
64018dec:	mov    edi,DWORD PTR [esi+0x64]
64018def:	jne    0x64018dfa
64018df1:	mov    DWORD PTR [esi+0x64],0x83
64018df8:	jmp    0x64018e58
64018dfa:	cmp    eax,0xc0000090
64018dff:	jne    0x64018e0a
64018e01:	mov    DWORD PTR [esi+0x64],0x81
64018e08:	jmp    0x64018e58
64018e0a:	cmp    eax,0xc0000091
64018e0f:	jne    0x64018e1a
64018e11:	mov    DWORD PTR [esi+0x64],0x84
64018e18:	jmp    0x64018e58
64018e1a:	cmp    eax,0xc0000093
64018e1f:	jne    0x64018e2a
64018e21:	mov    DWORD PTR [esi+0x64],0x85
64018e28:	jmp    0x64018e58
64018e2a:	cmp    eax,0xc000008d
64018e2f:	jne    0x64018e3a
64018e31:	mov    DWORD PTR [esi+0x64],0x82
64018e38:	jmp    0x64018e58
64018e3a:	cmp    eax,0xc000008f
64018e3f:	jne    0x64018e4a
64018e41:	mov    DWORD PTR [esi+0x64],0x86
64018e48:	jmp    0x64018e58
64018e4a:	cmp    eax,0xc0000092
64018e4f:	jne    0x64018e58
64018e51:	mov    DWORD PTR [esi+0x64],0x8a
64018e58:	push   DWORD PTR [esi+0x64]
64018e5b:	push   0x8
64018e5d:	call   ebx
64018e5f:	pop    ecx
64018e60:	mov    DWORD PTR [esi+0x64],edi
64018e63:	jmp    0x64018e6c
64018e65:	and    DWORD PTR [eax+0x8],0x0
64018e69:	push   ecx
64018e6a:	call   ebx
64018e6c:	mov    eax,DWORD PTR [ebp-0x8]
64018e6f:	pop    ecx
64018e70:	mov    DWORD PTR [esi+0x60],eax
64018e73:	or     eax,0xffffffff
64018e76:	pop    ebx
64018e77:	pop    edi
64018e78:	pop    esi
64018e79:	leave  
64018e7a:	ret    
64018e7b:	mov    eax,0xe06d7363
64018e80:	cmp    DWORD PTR [esp+0x4],eax
64018e84:	jne    0x64018e93
64018e86:	push   DWORD PTR [esp+0x8]
64018e8a:	push   eax
64018e8b:	call   0x64018d1d
64018e90:	pop    ecx
64018e91:	pop    ecx
64018e92:	ret    
64018e93:	xor    eax,eax
64018e95:	ret    
64018e96:	push   ebp
64018e97:	mov    ebp,esp
64018e99:	sub    esp,0x10
64018e9c:	mov    eax,ds:0x6402d09c
64018ea1:	and    DWORD PTR [ebp-0x8],0x0
64018ea5:	and    DWORD PTR [ebp-0x4],0x0
64018ea9:	push   ebx
64018eaa:	push   edi
64018eab:	mov    edi,0xbb40e64e
64018eb0:	cmp    eax,edi
64018eb2:	mov    ebx,0xffff0000
64018eb7:	je     0x64018ec6
64018eb9:	test   ebx,eax
64018ebb:	je     0x64018ec6
64018ebd:	not    eax
64018ebf:	mov    ds:0x6402d0a0,eax
64018ec4:	jmp    0x64018f26
64018ec6:	push   esi
64018ec7:	lea    eax,[ebp-0x8]
64018eca:	push   eax
64018ecb:	call   DWORD PTR ds:0x640250cc
64018ed1:	mov    esi,DWORD PTR [ebp-0x4]
64018ed4:	xor    esi,DWORD PTR [ebp-0x8]
64018ed7:	call   DWORD PTR ds:0x64025180
64018edd:	xor    esi,eax
64018edf:	call   DWORD PTR ds:0x64025120
64018ee5:	xor    esi,eax
64018ee7:	call   DWORD PTR ds:0x6402505c
64018eed:	xor    esi,eax
64018eef:	lea    eax,[ebp-0x10]
64018ef2:	push   eax
64018ef3:	call   DWORD PTR ds:0x6402517c
64018ef9:	mov    eax,DWORD PTR [ebp-0xc]
64018efc:	xor    eax,DWORD PTR [ebp-0x10]
64018eff:	xor    esi,eax
64018f01:	cmp    esi,edi
64018f03:	jne    0x64018f0c
64018f05:	mov    esi,0xbb40e64f
64018f0a:	jmp    0x64018f17
64018f0c:	test   ebx,esi
64018f0e:	jne    0x64018f17
64018f10:	mov    eax,esi
64018f12:	shl    eax,0x10
64018f15:	or     esi,eax
64018f17:	mov    DWORD PTR ds:0x6402d09c,esi
64018f1d:	not    esi
64018f1f:	mov    DWORD PTR ds:0x6402d0a0,esi
64018f25:	pop    esi
64018f26:	pop    edi
64018f27:	pop    ebx
64018f28:	leave  
64018f29:	ret    
64018f2a:	test   BYTE PTR [ecx+0xc],0x40
64018f2e:	je     0x64018f36
64018f30:	cmp    DWORD PTR [ecx+0x8],0x0
64018f34:	je     0x64018f5a
64018f36:	dec    DWORD PTR [ecx+0x4]
64018f39:	js     0x64018f46
64018f3b:	mov    edx,DWORD PTR [ecx]
64018f3d:	mov    BYTE PTR [edx],al
64018f3f:	inc    DWORD PTR [ecx]
64018f41:	movzx  eax,al
64018f44:	jmp    0x64018f52
64018f46:	movsx  eax,al
64018f49:	push   ecx
64018f4a:	push   eax
64018f4b:	call   0x64016c95
64018f50:	pop    ecx
64018f51:	pop    ecx
64018f52:	cmp    eax,0xffffffff
64018f55:	jne    0x64018f5a
64018f57:	or     DWORD PTR [esi],eax
64018f59:	ret    
64018f5a:	inc    DWORD PTR [esi]
64018f5c:	ret    
64018f5d:	push   ebp
64018f5e:	mov    ebp,esp
64018f60:	push   esi
64018f61:	mov    esi,eax
64018f63:	jmp    0x64018f78
64018f65:	mov    ecx,DWORD PTR [ebp+0x10]
64018f68:	mov    al,BYTE PTR [ebp+0x8]
64018f6b:	dec    DWORD PTR [ebp+0xc]
64018f6e:	call   0x64018f2a
64018f73:	cmp    DWORD PTR [esi],0xffffffff
64018f76:	je     0x64018f7e
64018f78:	cmp    DWORD PTR [ebp+0xc],0x0
64018f7c:	jg     0x64018f65
64018f7e:	pop    esi
64018f7f:	pop    ebp
64018f80:	ret    
64018f81:	test   BYTE PTR [edi+0xc],0x40
64018f85:	push   ebx
64018f86:	push   esi
64018f87:	mov    esi,eax
64018f89:	mov    ebx,ecx
64018f8b:	je     0x64018fc1
64018f8d:	cmp    DWORD PTR [edi+0x8],0x0
64018f91:	jne    0x64018fc1
64018f93:	mov    eax,DWORD PTR [esp+0xc]
64018f97:	add    DWORD PTR [esi],eax
64018f99:	jmp    0x64018fc8
64018f9b:	mov    al,BYTE PTR [ebx]
64018f9d:	dec    DWORD PTR [esp+0xc]
64018fa1:	mov    ecx,edi
64018fa3:	call   0x64018f2a
64018fa8:	inc    ebx
64018fa9:	cmp    DWORD PTR [esi],0xffffffff
64018fac:	jne    0x64018fc1
64018fae:	call   0x64014950
64018fb3:	cmp    DWORD PTR [eax],0x2a
64018fb6:	jne    0x64018fc8
64018fb8:	mov    ecx,edi
64018fba:	mov    al,0x3f
64018fbc:	call   0x64018f2a
64018fc1:	cmp    DWORD PTR [esp+0xc],0x0
64018fc6:	jg     0x64018f9b
64018fc8:	pop    esi
64018fc9:	pop    ebx
64018fca:	ret    
64018fcb:	push   ebp
64018fcc:	lea    ebp,[esp-0x1f8]
64018fd3:	sub    esp,0x278
64018fd9:	mov    eax,ds:0x6402d09c
64018fde:	xor    eax,ebp
64018fe0:	mov    DWORD PTR [ebp+0x1f4],eax
64018fe6:	mov    eax,DWORD PTR [ebp+0x200]
64018fec:	push   ebx
64018fed:	mov    ebx,DWORD PTR [ebp+0x204]
64018ff3:	push   esi
64018ff4:	xor    esi,esi
64018ff6:	push   edi
64018ff7:	mov    edi,DWORD PTR [ebp+0x20c]
64018ffd:	push   DWORD PTR [ebp+0x208]
64019003:	lea    ecx,[ebp-0x64]
64019006:	mov    DWORD PTR [ebp-0x30],eax
64019009:	mov    DWORD PTR [ebp-0x2c],edi
6401900c:	mov    DWORD PTR [ebp-0x4c],esi
6401900f:	mov    DWORD PTR [ebp-0x18],esi
64019012:	mov    DWORD PTR [ebp-0x40],esi
64019015:	mov    DWORD PTR [ebp-0x20],esi
64019018:	mov    DWORD PTR [ebp-0x3c],esi
6401901b:	mov    DWORD PTR [ebp-0x50],esi
6401901e:	mov    DWORD PTR [ebp-0x44],esi
64019021:	call   0x64012d2f
64019026:	cmp    DWORD PTR [ebp-0x30],esi
64019029:	jne    0x64019058
6401902b:	call   0x64014950
64019030:	push   esi
64019031:	push   esi
64019032:	push   esi
64019033:	push   esi
64019034:	mov    DWORD PTR [eax],0x16
6401903a:	push   esi
6401903b:	call   0x640126c4
64019040:	add    esp,0x14
64019043:	cmp    BYTE PTR [ebp-0x58],0x0
64019047:	je     0x64019050
64019049:	mov    eax,DWORD PTR [ebp-0x5c]
6401904c:	and    DWORD PTR [eax+0x70],0xfffffffd
64019050:	or     eax,0xffffffff
64019053:	jmp    0x64019927
64019058:	mov    eax,DWORD PTR [ebp-0x30]
6401905b:	test   BYTE PTR [eax+0xc],0x40
6401905f:	jne    0x64019109
64019065:	push   eax
64019066:	call   0x6401c9fd
6401906b:	cmp    eax,0xffffffff
6401906e:	pop    ecx
6401906f:	je     0x640190a7
64019071:	push   DWORD PTR [ebp-0x30]
64019074:	call   0x6401c9fd
64019079:	cmp    eax,0xfffffffe
6401907c:	pop    ecx
6401907d:	je     0x640190a7
6401907f:	push   DWORD PTR [ebp-0x30]
64019082:	call   0x6401c9fd
64019087:	push   DWORD PTR [ebp-0x30]
6401908a:	sar    eax,0x5
6401908d:	lea    esi,[eax*4+0x64032520]
64019094:	call   0x6401c9fd
64019099:	and    eax,0x1f
6401909c:	shl    eax,0x6
6401909f:	add    eax,DWORD PTR [esi]
640190a1:	pop    ecx
640190a2:	pop    ecx
640190a3:	xor    esi,esi
640190a5:	jmp    0x640190ac
640190a7:	mov    eax,0x6402d880
640190ac:	test   BYTE PTR [eax+0x24],0x7f
640190b0:	jne    0x6401902b
640190b6:	push   DWORD PTR [ebp-0x30]
640190b9:	call   0x6401c9fd
640190be:	cmp    eax,0xffffffff
640190c1:	pop    ecx
640190c2:	je     0x640190fa
640190c4:	push   DWORD PTR [ebp-0x30]
640190c7:	call   0x6401c9fd
640190cc:	cmp    eax,0xfffffffe
640190cf:	pop    ecx
640190d0:	je     0x640190fa
640190d2:	push   DWORD PTR [ebp-0x30]
640190d5:	call   0x6401c9fd
640190da:	push   DWORD PTR [ebp-0x30]
640190dd:	sar    eax,0x5
640190e0:	lea    esi,[eax*4+0x64032520]
640190e7:	call   0x6401c9fd
640190ec:	and    eax,0x1f
640190ef:	shl    eax,0x6
640190f2:	add    eax,DWORD PTR [esi]
640190f4:	pop    ecx
640190f5:	pop    ecx
640190f6:	xor    esi,esi
640190f8:	jmp    0x640190ff
640190fa:	mov    eax,0x6402d880
640190ff:	test   BYTE PTR [eax+0x24],0x80
64019103:	jne    0x6401902b
64019109:	cmp    ebx,esi
6401910b:	je     0x6401902b
64019111:	mov    dl,BYTE PTR [ebx]
64019113:	xor    ecx,ecx
64019115:	test   dl,dl
64019117:	mov    DWORD PTR [ebp-0x34],esi
6401911a:	mov    DWORD PTR [ebp-0x28],esi
6401911d:	mov    DWORD PTR [ebp-0x54],esi
64019120:	mov    BYTE PTR [ebp-0x19],dl
64019123:	je     0x64019917
64019129:	inc    ebx
6401912a:	cmp    DWORD PTR [ebp-0x34],0x0
6401912e:	mov    DWORD PTR [ebp-0x48],ebx
64019131:	jl     0x64019917
64019137:	mov    al,dl
64019139:	sub    al,0x20
6401913b:	cmp    al,0x58
6401913d:	ja     0x64019150
6401913f:	movsx  eax,dl
64019142:	movzx  eax,BYTE PTR [eax+0x64025e48]
64019149:	and    eax,0xf
6401914c:	xor    esi,esi
6401914e:	jmp    0x64019154
64019150:	xor    esi,esi
64019152:	xor    eax,eax
64019154:	movsx  eax,BYTE PTR [ecx+eax*8+0x64025e68]
6401915c:	push   0x7
6401915e:	sar    eax,0x4
64019161:	pop    ecx
64019162:	cmp    eax,ecx
64019164:	mov    DWORD PTR [ebp-0x74],eax
64019167:	ja     0x640198e7
6401916d:	jmp    DWORD PTR [eax*4+0x6401993f]
64019174:	or     DWORD PTR [ebp-0x20],0xffffffff
64019178:	mov    DWORD PTR [ebp-0x78],esi
6401917b:	mov    DWORD PTR [ebp-0x50],esi
6401917e:	mov    DWORD PTR [ebp-0x40],esi
64019181:	mov    DWORD PTR [ebp-0x3c],esi
64019184:	mov    DWORD PTR [ebp-0x18],esi
64019187:	mov    DWORD PTR [ebp-0x44],esi
6401918a:	jmp    0x640198e7
6401918f:	movsx  eax,dl
64019192:	sub    eax,0x20
64019195:	je     0x640191d5
64019197:	sub    eax,0x3
6401919a:	je     0x640191c9
6401919c:	sub    eax,0x8
6401919f:	je     0x640191c0
640191a1:	dec    eax
640191a2:	dec    eax
640191a3:	je     0x640191b7
640191a5:	sub    eax,0x3
640191a8:	jne    0x640198e7
640191ae:	or     DWORD PTR [ebp-0x18],0x8
640191b2:	jmp    0x640198e7
640191b7:	or     DWORD PTR [ebp-0x18],0x4
640191bb:	jmp    0x640198e7
640191c0:	or     DWORD PTR [ebp-0x18],0x1
640191c4:	jmp    0x640198e7
640191c9:	or     DWORD PTR [ebp-0x18],0x80
640191d0:	jmp    0x640198e7
640191d5:	or     DWORD PTR [ebp-0x18],0x2
640191d9:	jmp    0x640198e7
640191de:	cmp    dl,0x2a
640191e1:	jne    0x64019203
640191e3:	add    edi,0x4
640191e6:	mov    DWORD PTR [ebp-0x2c],edi
640191e9:	mov    edi,DWORD PTR [edi-0x4]
640191ec:	cmp    edi,esi
640191ee:	mov    DWORD PTR [ebp-0x40],edi
640191f1:	jge    0x640198e7
640191f7:	or     DWORD PTR [ebp-0x18],0x4
640191fb:	neg    DWORD PTR [ebp-0x40]
640191fe:	jmp    0x640198e7
64019203:	mov    eax,DWORD PTR [ebp-0x40]
64019206:	imul   eax,eax,0xa
64019209:	movsx  ecx,dl
6401920c:	lea    eax,[eax+ecx*1-0x30]
64019210:	mov    DWORD PTR [ebp-0x40],eax
64019213:	jmp    0x640198e7
64019218:	mov    DWORD PTR [ebp-0x20],esi
6401921b:	jmp    0x640198e7
64019220:	cmp    dl,0x2a
64019223:	jne    0x64019242
64019225:	add    edi,0x4
64019228:	mov    DWORD PTR [ebp-0x2c],edi
6401922b:	mov    edi,DWORD PTR [edi-0x4]
6401922e:	cmp    edi,esi
64019230:	mov    DWORD PTR [ebp-0x20],edi
64019233:	jge    0x640198e7
64019239:	or     DWORD PTR [ebp-0x20],0xffffffff
6401923d:	jmp    0x640198e7
64019242:	mov    eax,DWORD PTR [ebp-0x20]
64019245:	imul   eax,eax,0xa
64019248:	movsx  ecx,dl
6401924b:	lea    eax,[eax+ecx*1-0x30]
6401924f:	mov    DWORD PTR [ebp-0x20],eax
64019252:	jmp    0x640198e7
64019257:	cmp    dl,0x49
6401925a:	je     0x640192a2
6401925c:	cmp    dl,0x68
6401925f:	je     0x64019299
64019261:	cmp    dl,0x6c
64019264:	je     0x6401927b
64019266:	cmp    dl,0x77
64019269:	jne    0x640198e7
6401926f:	or     DWORD PTR [ebp-0x18],0x800
64019276:	jmp    0x640198e7
6401927b:	cmp    BYTE PTR [ebx],0x6c
6401927e:	jne    0x64019290
64019280:	inc    ebx
64019281:	or     DWORD PTR [ebp-0x18],0x1000
64019288:	mov    DWORD PTR [ebp-0x48],ebx
6401928b:	jmp    0x640198e7
64019290:	or     DWORD PTR [ebp-0x18],0x10
64019294:	jmp    0x640198e7
64019299:	or     DWORD PTR [ebp-0x18],0x20
6401929d:	jmp    0x640198e7
640192a2:	mov    al,BYTE PTR [ebx]
640192a4:	cmp    al,0x36
640192a6:	jne    0x640192bf
640192a8:	cmp    BYTE PTR [ebx+0x1],0x34
640192ac:	jne    0x640192bf
640192ae:	inc    ebx
640192af:	inc    ebx
640192b0:	or     DWORD PTR [ebp-0x18],0x8000
640192b7:	mov    DWORD PTR [ebp-0x48],ebx
640192ba:	jmp    0x640198e7
640192bf:	cmp    al,0x33
640192c1:	jne    0x640192da
640192c3:	cmp    BYTE PTR [ebx+0x1],0x32
640192c7:	jne    0x640192da
640192c9:	inc    ebx
640192ca:	inc    ebx
640192cb:	and    DWORD PTR [ebp-0x18],0xffff7fff
640192d2:	mov    DWORD PTR [ebp-0x48],ebx
640192d5:	jmp    0x640198e7
640192da:	cmp    al,0x64
640192dc:	je     0x640198e7
640192e2:	cmp    al,0x69
640192e4:	je     0x640198e7
640192ea:	cmp    al,0x6f
640192ec:	je     0x640198e7
640192f2:	cmp    al,0x75
640192f4:	je     0x640198e7
640192fa:	cmp    al,0x78
640192fc:	je     0x640198e7
64019302:	cmp    al,0x58
64019304:	je     0x640198e7
6401930a:	mov    DWORD PTR [ebp-0x74],esi
6401930d:	lea    eax,[ebp-0x64]
64019310:	push   eax
64019311:	movzx  eax,dl
64019314:	push   eax
64019315:	mov    DWORD PTR [ebp-0x44],esi
64019318:	call   0x64019f2a
6401931d:	pop    ecx
6401931e:	test   eax,eax
64019320:	mov    al,BYTE PTR [ebp-0x19]
64019323:	pop    ecx
64019324:	je     0x6401933f
64019326:	mov    ecx,DWORD PTR [ebp-0x30]
64019329:	lea    esi,[ebp-0x34]
6401932c:	call   0x64018f2a
64019331:	mov    al,BYTE PTR [ebx]
64019333:	inc    ebx
64019334:	test   al,al
64019336:	mov    DWORD PTR [ebp-0x48],ebx
64019339:	je     0x64019900
6401933f:	mov    ecx,DWORD PTR [ebp-0x30]
64019342:	lea    esi,[ebp-0x34]
64019345:	call   0x64018f2a
6401934a:	jmp    0x640198e7
6401934f:	movsx  eax,dl
64019352:	cmp    eax,0x64
64019355:	jg     0x640194cd
6401935b:	je     0x6401954c
64019361:	cmp    eax,0x53
64019364:	jg     0x64019415
6401936a:	je     0x640193c6
6401936c:	sub    eax,0x41
6401936f:	je     0x64019381
64019371:	dec    eax
64019372:	dec    eax
64019373:	je     0x640193b5
64019375:	dec    eax
64019376:	dec    eax
64019377:	je     0x64019381
64019379:	dec    eax
6401937a:	dec    eax
6401937b:	jne    0x640197cf
64019381:	add    dl,0x20
64019384:	mov    DWORD PTR [ebp-0x78],0x1
6401938b:	mov    BYTE PTR [ebp-0x19],dl
6401938e:	or     DWORD PTR [ebp-0x18],0x40
64019392:	cmp    DWORD PTR [ebp-0x20],esi
64019395:	lea    ebx,[ebp-0x14]
64019398:	mov    eax,0x200
6401939d:	mov    DWORD PTR [ebp-0x24],ebx
640193a0:	mov    DWORD PTR [ebp-0x68],eax
640193a3:	jge    0x64019570
640193a9:	mov    DWORD PTR [ebp-0x20],0x6
640193b0:	jmp    0x640195be
640193b5:	test   WORD PTR [ebp-0x18],0x830
640193bb:	jne    0x64019432
640193bd:	or     DWORD PTR [ebp-0x18],0x800
640193c4:	jmp    0x64019432
640193c6:	test   WORD PTR [ebp-0x18],0x830
640193cc:	jne    0x640193d5
640193ce:	or     DWORD PTR [ebp-0x18],0x800
640193d5:	mov    ecx,DWORD PTR [ebp-0x20]
640193d8:	cmp    ecx,0xffffffff
640193db:	jne    0x640193e2
640193dd:	mov    ecx,0x7fffffff
640193e2:	add    edi,0x4
640193e5:	test   WORD PTR [ebp-0x18],0x810
640193eb:	mov    DWORD PTR [ebp-0x2c],edi
640193ee:	mov    edi,DWORD PTR [edi-0x4]
640193f1:	mov    DWORD PTR [ebp-0x24],edi
640193f4:	je     0x640197ad
640193fa:	cmp    edi,esi
640193fc:	jne    0x64019406
640193fe:	mov    eax,ds:0x6402d954
64019403:	mov    DWORD PTR [ebp-0x24],eax
64019406:	mov    eax,DWORD PTR [ebp-0x24]
64019409:	mov    DWORD PTR [ebp-0x44],0x1
64019410:	jmp    0x640197a2
64019415:	sub    eax,0x58
64019418:	je     0x64019657
6401941e:	dec    eax
6401941f:	dec    eax
64019420:	je     0x6401947f
64019422:	sub    eax,ecx
64019424:	je     0x6401938e
6401942a:	dec    eax
6401942b:	dec    eax
6401942c:	jne    0x640197cf
64019432:	add    edi,0x4
64019435:	test   WORD PTR [ebp-0x18],0x810
6401943b:	mov    DWORD PTR [ebp-0x2c],edi
6401943e:	je     0x64019467
64019440:	movzx  eax,WORD PTR [edi-0x4]
64019444:	push   eax
64019445:	push   0x200
6401944a:	lea    eax,[ebp-0x14]
6401944d:	push   eax
6401944e:	lea    eax,[ebp-0x28]
64019451:	push   eax
64019452:	call   0x6401db71
64019457:	add    esp,0x10
6401945a:	test   eax,eax
6401945c:	je     0x64019474
6401945e:	mov    DWORD PTR [ebp-0x50],0x1
64019465:	jmp    0x64019474
64019467:	mov    al,BYTE PTR [edi-0x4]
6401946a:	mov    BYTE PTR [ebp-0x14],al
6401946d:	mov    DWORD PTR [ebp-0x28],0x1
64019474:	lea    eax,[ebp-0x14]
64019477:	mov    DWORD PTR [ebp-0x24],eax
6401947a:	jmp    0x640197cf
6401947f:	mov    eax,DWORD PTR [edi]
64019481:	add    edi,0x4
64019484:	cmp    eax,esi
64019486:	mov    DWORD PTR [ebp-0x2c],edi
64019489:	je     0x640194b9
6401948b:	mov    ecx,DWORD PTR [eax+0x4]
6401948e:	cmp    ecx,esi
64019490:	je     0x640194b9
64019492:	test   WORD PTR [ebp-0x18],0x800
64019498:	movsx  eax,WORD PTR [eax]
6401949b:	mov    DWORD PTR [ebp-0x24],ecx
6401949e:	je     0x640194b1
640194a0:	cdq    
640194a1:	sub    eax,edx
640194a3:	sar    eax,1
640194a5:	mov    DWORD PTR [ebp-0x44],0x1
640194ac:	jmp    0x640197cc
640194b1:	mov    DWORD PTR [ebp-0x44],esi
640194b4:	jmp    0x640197cc
640194b9:	mov    eax,ds:0x6402d950
640194be:	mov    DWORD PTR [ebp-0x24],eax
640194c1:	push   eax
640194c2:	call   0x64014350
640194c7:	pop    ecx
640194c8:	jmp    0x640197cc
640194cd:	cmp    eax,0x70
640194d0:	jg     0x6401965c
640194d6:	je     0x64019650
640194dc:	cmp    eax,0x65
640194df:	jl     0x640197cf
640194e5:	cmp    eax,0x67
640194e8:	jle    0x6401938e
640194ee:	cmp    eax,0x69
640194f1:	je     0x6401954c
640194f3:	cmp    eax,0x6e
640194f6:	je     0x64019517
640194f8:	cmp    eax,0x6f
640194fb:	jne    0x640197cf
64019501:	test   BYTE PTR [ebp-0x18],0x80
64019505:	mov    DWORD PTR [ebp-0x28],0x8
6401950c:	je     0x64019557
6401950e:	or     DWORD PTR [ebp-0x18],0x200
64019515:	jmp    0x64019557
64019517:	mov    esi,DWORD PTR [edi]
64019519:	add    edi,0x4
6401951c:	mov    DWORD PTR [ebp-0x2c],edi
6401951f:	call   0x6401cc08
64019524:	test   eax,eax
64019526:	je     0x64019900
6401952c:	test   BYTE PTR [ebp-0x18],0x20
64019530:	je     0x6401953b
64019532:	mov    ax,WORD PTR [ebp-0x34]
64019536:	mov    WORD PTR [esi],ax
64019539:	jmp    0x64019540
6401953b:	mov    eax,DWORD PTR [ebp-0x34]
6401953e:	mov    DWORD PTR [esi],eax
64019540:	mov    DWORD PTR [ebp-0x50],0x1
64019547:	jmp    0x640198d4
6401954c:	or     DWORD PTR [ebp-0x18],0x40
64019550:	mov    DWORD PTR [ebp-0x28],0xa
64019557:	mov    ecx,DWORD PTR [ebp-0x18]
6401955a:	test   cx,cx
6401955d:	jns    0x640196a6
64019563:	mov    eax,DWORD PTR [edi]
64019565:	mov    edx,DWORD PTR [edi+0x4]
64019568:	add    edi,0x8
6401956b:	jmp    0x640196db
64019570:	jne    0x64019580
64019572:	cmp    dl,0x67
64019575:	jne    0x640195be
64019577:	mov    DWORD PTR [ebp-0x20],0x1
6401957e:	jmp    0x640195be
64019580:	cmp    DWORD PTR [ebp-0x20],eax
64019583:	jle    0x64019588
64019585:	mov    DWORD PTR [ebp-0x20],eax
64019588:	cmp    DWORD PTR [ebp-0x20],0xa3
6401958f:	jle    0x640195be
64019591:	mov    esi,DWORD PTR [ebp-0x20]
64019594:	add    esi,0x15d
6401959a:	push   esi
6401959b:	call   0x64015e60
640195a0:	test   eax,eax
640195a2:	mov    dl,BYTE PTR [ebp-0x19]
640195a5:	pop    ecx
640195a6:	mov    DWORD PTR [ebp-0x54],eax
640195a9:	je     0x640195b5
640195ab:	mov    DWORD PTR [ebp-0x24],eax
640195ae:	mov    DWORD PTR [ebp-0x68],esi
640195b1:	mov    ebx,eax
640195b3:	jmp    0x640195bc
640195b5:	mov    DWORD PTR [ebp-0x20],0xa3
640195bc:	xor    esi,esi
640195be:	mov    eax,DWORD PTR [edi]
640195c0:	add    edi,0x8
640195c3:	mov    DWORD PTR [ebp-0x80],eax
640195c6:	mov    eax,DWORD PTR [edi-0x4]
640195c9:	mov    DWORD PTR [ebp-0x7c],eax
640195cc:	lea    eax,[ebp-0x64]
640195cf:	push   eax
640195d0:	push   DWORD PTR [ebp-0x78]
640195d3:	movsx  eax,dl
640195d6:	push   DWORD PTR [ebp-0x20]
640195d9:	mov    DWORD PTR [ebp-0x2c],edi
640195dc:	push   eax
640195dd:	push   DWORD PTR [ebp-0x68]
640195e0:	lea    eax,[ebp-0x80]
640195e3:	push   ebx
640195e4:	push   eax
640195e5:	push   DWORD PTR ds:0x6402db64
640195eb:	call   0x64014a7f
640195f0:	pop    ecx
640195f1:	call   eax
640195f3:	mov    edi,DWORD PTR [ebp-0x18]
640195f6:	add    esp,0x1c
640195f9:	and    edi,0x80
640195ff:	je     0x6401961b
64019601:	cmp    DWORD PTR [ebp-0x20],esi
64019604:	jne    0x6401961b
64019606:	lea    eax,[ebp-0x64]
64019609:	push   eax
6401960a:	push   ebx
6401960b:	push   DWORD PTR ds:0x6402db70
64019611:	call   0x64014a7f
64019616:	pop    ecx
64019617:	call   eax
64019619:	pop    ecx
6401961a:	pop    ecx
6401961b:	cmp    BYTE PTR [ebp-0x19],0x67
6401961f:	jne    0x6401963a
64019621:	cmp    edi,esi
64019623:	jne    0x6401963a
64019625:	lea    eax,[ebp-0x64]
64019628:	push   eax
64019629:	push   ebx
6401962a:	push   DWORD PTR ds:0x6402db6c
64019630:	call   0x64014a7f
64019635:	pop    ecx
64019636:	call   eax
64019638:	pop    ecx
64019639:	pop    ecx
6401963a:	cmp    BYTE PTR [ebx],0x2d
6401963d:	jne    0x6401964a
6401963f:	or     DWORD PTR [ebp-0x18],0x100
64019646:	inc    ebx
64019647:	mov    DWORD PTR [ebp-0x24],ebx
6401964a:	push   ebx
6401964b:	jmp    0x640194c2
64019650:	mov    DWORD PTR [ebp-0x20],0x8
64019657:	mov    DWORD PTR [ebp-0x4c],ecx
6401965a:	jmp    0x6401967d
6401965c:	sub    eax,0x73
6401965f:	je     0x640193d5
64019665:	dec    eax
64019666:	dec    eax
64019667:	je     0x64019550
6401966d:	sub    eax,0x3
64019670:	jne    0x640197cf
64019676:	mov    DWORD PTR [ebp-0x4c],0x27
6401967d:	test   BYTE PTR [ebp-0x18],0x80
64019681:	mov    DWORD PTR [ebp-0x28],0x10
64019688:	je     0x64019557
6401968e:	mov    al,BYTE PTR [ebp-0x4c]
64019691:	add    al,0x51
64019693:	mov    BYTE PTR [ebp-0x38],0x30
64019697:	mov    BYTE PTR [ebp-0x37],al
6401969a:	mov    DWORD PTR [ebp-0x3c],0x2
640196a1:	jmp    0x64019557
640196a6:	test   cx,0x1000
640196ab:	jne    0x64019563
640196b1:	add    edi,0x4
640196b4:	test   cl,0x20
640196b7:	je     0x640196ce
640196b9:	test   cl,0x40
640196bc:	mov    DWORD PTR [ebp-0x2c],edi
640196bf:	je     0x640196c7
640196c1:	movsx  eax,WORD PTR [edi-0x4]
640196c5:	jmp    0x640196cb
640196c7:	movzx  eax,WORD PTR [edi-0x4]
640196cb:	cdq    
640196cc:	jmp    0x640196de
640196ce:	test   cl,0x40
640196d1:	mov    eax,DWORD PTR [edi-0x4]
640196d4:	je     0x640196d9
640196d6:	cdq    
640196d7:	jmp    0x640196db
640196d9:	xor    edx,edx
640196db:	mov    DWORD PTR [ebp-0x2c],edi
640196de:	test   cl,0x40
640196e1:	je     0x640196fb
640196e3:	cmp    edx,esi
640196e5:	jg     0x640196fb
640196e7:	jl     0x640196ed
640196e9:	cmp    eax,esi
640196eb:	jae    0x640196fb
640196ed:	neg    eax
640196ef:	adc    edx,0x0
640196f2:	neg    edx
640196f4:	or     DWORD PTR [ebp-0x18],0x100
640196fb:	test   WORD PTR [ebp-0x18],0x9000
64019701:	mov    ebx,edx
64019703:	mov    edi,eax
64019705:	jne    0x64019709
64019707:	xor    ebx,ebx
64019709:	cmp    DWORD PTR [ebp-0x20],0x0
6401970d:	jge    0x64019718
6401970f:	mov    DWORD PTR [ebp-0x20],0x1
64019716:	jmp    0x64019729
64019718:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401971c:	mov    eax,0x200
64019721:	cmp    DWORD PTR [ebp-0x20],eax
64019724:	jle    0x64019729
64019726:	mov    DWORD PTR [ebp-0x20],eax
64019729:	mov    eax,edi
6401972b:	or     eax,ebx
6401972d:	jne    0x64019732
6401972f:	and    DWORD PTR [ebp-0x3c],eax
64019732:	lea    esi,[ebp+0x1eb]
64019738:	mov    eax,DWORD PTR [ebp-0x20]
6401973b:	dec    DWORD PTR [ebp-0x20]
6401973e:	test   eax,eax
64019740:	jg     0x64019748
64019742:	mov    eax,edi
64019744:	or     eax,ebx
64019746:	je     0x6401976c
64019748:	mov    eax,DWORD PTR [ebp-0x28]
6401974b:	cdq    
6401974c:	push   edx
6401974d:	push   eax
6401974e:	push   ebx
6401974f:	push   edi
64019750:	call   0x64019ab0
64019755:	add    ecx,0x30
64019758:	cmp    ecx,0x39
6401975b:	mov    DWORD PTR [ebp-0x68],ebx
6401975e:	mov    edi,eax
64019760:	mov    ebx,edx
64019762:	jle    0x64019767
64019764:	add    ecx,DWORD PTR [ebp-0x4c]
64019767:	mov    BYTE PTR [esi],cl
64019769:	dec    esi
6401976a:	jmp    0x64019738
6401976c:	lea    eax,[ebp+0x1eb]
64019772:	sub    eax,esi
64019774:	inc    esi
64019775:	test   WORD PTR [ebp-0x18],0x200
6401977b:	mov    DWORD PTR [ebp-0x28],eax
6401977e:	mov    DWORD PTR [ebp-0x24],esi
64019781:	je     0x640197cf
64019783:	test   eax,eax
64019785:	je     0x6401978e
64019787:	mov    ecx,esi
64019789:	cmp    BYTE PTR [ecx],0x30
6401978c:	je     0x640197cf
6401978e:	dec    DWORD PTR [ebp-0x24]
64019791:	mov    ecx,DWORD PTR [ebp-0x24]
64019794:	mov    BYTE PTR [ecx],0x30
64019797:	inc    eax
64019798:	jmp    0x640197cc
6401979a:	dec    ecx
6401979b:	cmp    WORD PTR [eax],si
6401979e:	je     0x640197a6
640197a0:	inc    eax
640197a1:	inc    eax
640197a2:	cmp    ecx,esi
640197a4:	jne    0x6401979a
640197a6:	sub    eax,DWORD PTR [ebp-0x24]
640197a9:	sar    eax,1
640197ab:	jmp    0x640197cc
640197ad:	cmp    edi,esi
640197af:	jne    0x640197b9
640197b1:	mov    eax,ds:0x6402d950
640197b6:	mov    DWORD PTR [ebp-0x24],eax
640197b9:	mov    eax,DWORD PTR [ebp-0x24]
640197bc:	jmp    0x640197c5
640197be:	dec    ecx
640197bf:	cmp    BYTE PTR [eax],0x0
640197c2:	je     0x640197c9
640197c4:	inc    eax
640197c5:	cmp    ecx,esi
640197c7:	jne    0x640197be
640197c9:	sub    eax,DWORD PTR [ebp-0x24]
640197cc:	mov    DWORD PTR [ebp-0x28],eax
640197cf:	cmp    DWORD PTR [ebp-0x50],0x0
640197d3:	jne    0x640198d4
640197d9:	mov    eax,DWORD PTR [ebp-0x18]
640197dc:	test   al,0x40
640197de:	je     0x64019805
640197e0:	test   ax,0x100
640197e4:	je     0x640197ec
640197e6:	mov    BYTE PTR [ebp-0x38],0x2d
640197ea:	jmp    0x640197fe
640197ec:	test   al,0x1
640197ee:	je     0x640197f6
640197f0:	mov    BYTE PTR [ebp-0x38],0x2b
640197f4:	jmp    0x640197fe
640197f6:	test   al,0x2
640197f8:	je     0x64019805
640197fa:	mov    BYTE PTR [ebp-0x38],0x20
640197fe:	mov    DWORD PTR [ebp-0x3c],0x1
64019805:	mov    ebx,DWORD PTR [ebp-0x40]
64019808:	sub    ebx,DWORD PTR [ebp-0x28]
6401980b:	sub    ebx,DWORD PTR [ebp-0x3c]
6401980e:	test   BYTE PTR [ebp-0x18],0xc
64019812:	jne    0x64019825
64019814:	push   DWORD PTR [ebp-0x30]
64019817:	lea    eax,[ebp-0x34]
6401981a:	push   ebx
6401981b:	push   0x20
6401981d:	call   0x64018f5d
64019822:	add    esp,0xc
64019825:	push   DWORD PTR [ebp-0x3c]
64019828:	mov    edi,DWORD PTR [ebp-0x30]
6401982b:	lea    eax,[ebp-0x34]
6401982e:	lea    ecx,[ebp-0x38]
64019831:	call   0x64018f81
64019836:	test   BYTE PTR [ebp-0x18],0x8
6401983a:	pop    ecx
6401983b:	je     0x64019852
6401983d:	test   BYTE PTR [ebp-0x18],0x4
64019841:	jne    0x64019852
64019843:	push   edi
64019844:	push   ebx
64019845:	push   0x30
64019847:	lea    eax,[ebp-0x34]
6401984a:	call   0x64018f5d
6401984f:	add    esp,0xc
64019852:	cmp    DWORD PTR [ebp-0x44],0x0
64019856:	mov    eax,DWORD PTR [ebp-0x28]
64019859:	je     0x640198ac
6401985b:	test   eax,eax
6401985d:	jle    0x640198ac
6401985f:	mov    esi,DWORD PTR [ebp-0x24]
64019862:	mov    DWORD PTR [ebp-0x68],eax
64019865:	movzx  eax,WORD PTR [esi]
64019868:	dec    DWORD PTR [ebp-0x68]
6401986b:	push   eax
6401986c:	push   0x6
6401986e:	lea    eax,[ebp+0x1ec]
64019874:	push   eax
64019875:	lea    eax,[ebp-0x70]
64019878:	inc    esi
64019879:	push   eax
6401987a:	inc    esi
6401987b:	call   0x6401db71
64019880:	add    esp,0x10
64019883:	test   eax,eax
64019885:	jne    0x640198a6
64019887:	cmp    DWORD PTR [ebp-0x70],eax
6401988a:	je     0x640198a6
6401988c:	push   DWORD PTR [ebp-0x70]
6401988f:	lea    eax,[ebp-0x34]
64019892:	lea    ecx,[ebp+0x1ec]
64019898:	call   0x64018f81
6401989d:	cmp    DWORD PTR [ebp-0x68],0x0
640198a1:	pop    ecx
640198a2:	jne    0x64019865
640198a4:	jmp    0x640198b9
640198a6:	or     DWORD PTR [ebp-0x34],0xffffffff
640198aa:	jmp    0x640198b9
640198ac:	mov    ecx,DWORD PTR [ebp-0x24]
640198af:	push   eax
640198b0:	lea    eax,[ebp-0x34]
640198b3:	call   0x64018f81
640198b8:	pop    ecx
640198b9:	cmp    DWORD PTR [ebp-0x34],0x0
640198bd:	jl     0x640198d4
640198bf:	test   BYTE PTR [ebp-0x18],0x4
640198c3:	je     0x640198d4
640198c5:	push   edi
640198c6:	push   ebx
640198c7:	push   0x20
640198c9:	lea    eax,[ebp-0x34]
640198cc:	call   0x64018f5d
640198d1:	add    esp,0xc
640198d4:	cmp    DWORD PTR [ebp-0x54],0x0
640198d8:	je     0x640198e7
640198da:	push   DWORD PTR [ebp-0x54]
640198dd:	call   0x64013a26
640198e2:	and    DWORD PTR [ebp-0x54],0x0
640198e6:	pop    ecx
640198e7:	mov    ebx,DWORD PTR [ebp-0x48]
640198ea:	mov    al,BYTE PTR [ebx]
640198ec:	test   al,al
640198ee:	mov    BYTE PTR [ebp-0x19],al
640198f1:	je     0x64019917
640198f3:	mov    ecx,DWORD PTR [ebp-0x74]
640198f6:	mov    edi,DWORD PTR [ebp-0x2c]
640198f9:	mov    dl,al
640198fb:	jmp    0x64019129
64019900:	call   0x64014950
64019905:	mov    DWORD PTR [eax],0x16
6401990b:	xor    eax,eax
6401990d:	push   eax
6401990e:	push   eax
6401990f:	push   eax
64019910:	push   eax
64019911:	push   eax
64019912:	jmp    0x6401903b
64019917:	cmp    BYTE PTR [ebp-0x58],0x0
6401991b:	je     0x64019924
6401991d:	mov    eax,DWORD PTR [ebp-0x5c]
64019920:	and    DWORD PTR [eax+0x70],0xfffffffd
64019924:	mov    eax,DWORD PTR [ebp-0x34]
64019927:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401992d:	pop    edi
6401992e:	pop    esi
6401992f:	xor    ecx,ebp
64019931:	pop    ebx
64019932:	call   0x64012b8c
64019937:	add    ebp,0x1f8
6401993d:	leave  
6401993e:	ret    
6401993f:	or     eax,0x74640193
64019944:	xchg   ecx,eax
64019945:	add    DWORD PTR [edi+ecx*4-0x6f],esp
64019949:	add    DWORD PTR [esi+ebx*8-0x6f],esp
6401994d:	add    DWORD PTR [eax+ebx*1-0x6e],esp
64019951:	add    DWORD PTR [eax+eiz*1-0x6e],esp
64019955:	add    DWORD PTR [edi+edx*2-0x6e],esp
64019959:	add    DWORD PTR [edi+ecx*2-0x6d],esp
6401995d:	add    DWORD PTR [ebp+edx*2-0x75],esp
64019961:	in     al,dx
64019962:	sub    esp,0x20
64019965:	push   ebx
64019966:	xor    ebx,ebx
64019968:	cmp    DWORD PTR [ebp+0x14],ebx
6401996b:	jne    0x6401998d
6401996d:	call   0x64014950
64019972:	push   ebx
64019973:	push   ebx
64019974:	push   ebx
64019975:	push   ebx
64019976:	push   ebx
64019977:	mov    DWORD PTR [eax],0x16
6401997d:	call   0x640126c4
64019982:	add    esp,0x14
64019985:	or     eax,0xffffffff
64019988:	jmp    0x64019a26
6401998d:	push   esi
6401998e:	mov    esi,DWORD PTR [ebp+0xc]
64019991:	push   edi
64019992:	mov    edi,DWORD PTR [ebp+0x10]
64019995:	cmp    edi,ebx
64019997:	je     0x640199ba
64019999:	cmp    esi,ebx
6401999b:	jne    0x640199ba
6401999d:	call   0x64014950
640199a2:	push   ebx
640199a3:	push   ebx
640199a4:	push   ebx
640199a5:	push   ebx
640199a6:	push   ebx
640199a7:	mov    DWORD PTR [eax],0x16
640199ad:	call   0x640126c4
640199b2:	add    esp,0x14
640199b5:	or     eax,0xffffffff
640199b8:	jmp    0x64019a24
640199ba:	mov    eax,0x7fffffff
640199bf:	cmp    edi,eax
640199c1:	mov    DWORD PTR [ebp-0x1c],eax
640199c4:	ja     0x640199c9
640199c6:	mov    DWORD PTR [ebp-0x1c],edi
640199c9:	push   DWORD PTR [ebp+0x1c]
640199cc:	lea    eax,[ebp-0x20]
640199cf:	push   DWORD PTR [ebp+0x18]
640199d2:	mov    DWORD PTR [ebp-0x14],0x42
640199d9:	push   DWORD PTR [ebp+0x14]
640199dc:	mov    DWORD PTR [ebp-0x18],esi
640199df:	push   eax
640199e0:	mov    DWORD PTR [ebp-0x20],esi
640199e3:	call   DWORD PTR [ebp+0x8]
640199e6:	add    esp,0x10
640199e9:	cmp    esi,ebx
640199eb:	mov    DWORD PTR [ebp+0x14],eax
640199ee:	je     0x64019a24
640199f0:	cmp    eax,ebx
640199f2:	jl     0x64019a16
640199f4:	dec    DWORD PTR [ebp-0x1c]
640199f7:	js     0x64019a00
640199f9:	mov    eax,DWORD PTR [ebp-0x20]
640199fc:	mov    BYTE PTR [eax],bl
640199fe:	jmp    0x64019a11
64019a00:	lea    eax,[ebp-0x20]
64019a03:	push   eax
64019a04:	push   ebx
64019a05:	call   0x64016c95
64019a0a:	cmp    eax,0xffffffff
64019a0d:	pop    ecx
64019a0e:	pop    ecx
64019a0f:	je     0x64019a16
64019a11:	mov    eax,DWORD PTR [ebp+0x14]
64019a14:	jmp    0x64019a24
64019a16:	xor    eax,eax
64019a18:	cmp    DWORD PTR [ebp-0x1c],ebx
64019a1b:	mov    BYTE PTR [esi+edi*1-0x1],bl
64019a1f:	setge  al
64019a22:	dec    eax
64019a23:	dec    eax
64019a24:	pop    edi
64019a25:	pop    esi
64019a26:	pop    ebx
64019a27:	leave  
64019a28:	ret    
64019a29:	push   ebp
64019a2a:	mov    ebp,esp
64019a2c:	push   ebx
64019a2d:	xor    ebx,ebx
64019a2f:	cmp    DWORD PTR [ebp+0x10],ebx
64019a32:	jne    0x64019a51
64019a34:	call   0x64014950
64019a39:	push   ebx
64019a3a:	push   ebx
64019a3b:	push   ebx
64019a3c:	push   ebx
64019a3d:	push   ebx
64019a3e:	mov    DWORD PTR [eax],0x16
64019a44:	call   0x640126c4
64019a49:	add    esp,0x14
64019a4c:	or     eax,0xffffffff
64019a4f:	jmp    0x64019aac
64019a51:	push   esi
64019a52:	mov    esi,DWORD PTR [ebp+0x8]
64019a55:	cmp    esi,ebx
64019a57:	je     0x64019a5e
64019a59:	cmp    DWORD PTR [ebp+0xc],ebx
64019a5c:	ja     0x64019a6b
64019a5e:	call   0x64014950
64019a63:	mov    DWORD PTR [eax],0x16
64019a69:	jmp    0x64019a9b
64019a6b:	push   DWORD PTR [ebp+0x18]
64019a6e:	push   DWORD PTR [ebp+0x14]
64019a71:	push   DWORD PTR [ebp+0x10]
64019a74:	push   DWORD PTR [ebp+0xc]
64019a77:	push   esi
64019a78:	push   0x6401cd48
64019a7d:	call   0x6401995f
64019a82:	add    esp,0x18
64019a85:	cmp    eax,ebx
64019a87:	jge    0x64019a8b
64019a89:	mov    BYTE PTR [esi],bl
64019a8b:	cmp    eax,0xfffffffe
64019a8e:	jne    0x64019aab
64019a90:	call   0x64014950
64019a95:	mov    DWORD PTR [eax],0x22
64019a9b:	push   ebx
64019a9c:	push   ebx
64019a9d:	push   ebx
64019a9e:	push   ebx
64019a9f:	push   ebx
64019aa0:	call   0x640126c4
64019aa5:	add    esp,0x14
64019aa8:	or     eax,0xffffffff
64019aab:	pop    esi
64019aac:	pop    ebx
64019aad:	pop    ebp
64019aae:	ret    
64019aaf:	int3   
64019ab0:	push   esi
64019ab1:	mov    eax,DWORD PTR [esp+0x14]
64019ab5:	or     eax,eax
64019ab7:	jne    0x64019ae1
64019ab9:	mov    ecx,DWORD PTR [esp+0x10]
64019abd:	mov    eax,DWORD PTR [esp+0xc]
64019ac1:	xor    edx,edx
64019ac3:	div    ecx
64019ac5:	mov    ebx,eax
64019ac7:	mov    eax,DWORD PTR [esp+0x8]
64019acb:	div    ecx
64019acd:	mov    esi,eax
64019acf:	mov    eax,ebx
64019ad1:	mul    DWORD PTR [esp+0x10]
64019ad5:	mov    ecx,eax
64019ad7:	mov    eax,esi
64019ad9:	mul    DWORD PTR [esp+0x10]
64019add:	add    edx,ecx
64019adf:	jmp    0x64019b28
64019ae1:	mov    ecx,eax
64019ae3:	mov    ebx,DWORD PTR [esp+0x10]
64019ae7:	mov    edx,DWORD PTR [esp+0xc]
64019aeb:	mov    eax,DWORD PTR [esp+0x8]
64019aef:	shr    ecx,1
64019af1:	rcr    ebx,1
64019af3:	shr    edx,1
64019af5:	rcr    eax,1
64019af7:	or     ecx,ecx
64019af9:	jne    0x64019aef
64019afb:	div    ebx
64019afd:	mov    esi,eax
64019aff:	mul    DWORD PTR [esp+0x14]
64019b03:	mov    ecx,eax
64019b05:	mov    eax,DWORD PTR [esp+0x10]
64019b09:	mul    esi
64019b0b:	add    edx,ecx
64019b0d:	jb     0x64019b1d
64019b0f:	cmp    edx,DWORD PTR [esp+0xc]
64019b13:	ja     0x64019b1d
64019b15:	jb     0x64019b26
64019b17:	cmp    eax,DWORD PTR [esp+0x8]
64019b1b:	jbe    0x64019b26
64019b1d:	dec    esi
64019b1e:	sub    eax,DWORD PTR [esp+0x10]
64019b22:	sbb    edx,DWORD PTR [esp+0x14]
64019b26:	xor    ebx,ebx
64019b28:	sub    eax,DWORD PTR [esp+0x8]
64019b2c:	sbb    edx,DWORD PTR [esp+0xc]
64019b30:	neg    edx
64019b32:	neg    eax
64019b34:	sbb    edx,0x0
64019b37:	mov    ecx,edx
64019b39:	mov    edx,ebx
64019b3b:	mov    ebx,ecx
64019b3d:	mov    ecx,eax
64019b3f:	mov    eax,esi
64019b41:	pop    esi
64019b42:	ret    0x10
64019b45:	push   ebp
64019b46:	mov    ebp,esp
64019b48:	sub    esp,0x14
64019b4b:	mov    eax,ds:0x6402d09c
64019b50:	xor    eax,ebp
64019b52:	mov    DWORD PTR [ebp-0x4],eax
64019b55:	push   ebx
64019b56:	push   esi
64019b57:	xor    ebx,ebx
64019b59:	cmp    DWORD PTR ds:0x6402ea70,ebx
64019b5f:	push   edi
64019b60:	mov    esi,ecx
64019b62:	jne    0x64019b9c
64019b64:	push   ebx
64019b65:	push   ebx
64019b66:	xor    edi,edi
64019b68:	inc    edi
64019b69:	push   edi
64019b6a:	push   0x64027714
64019b6f:	push   0x100
64019b74:	push   ebx
64019b75:	call   DWORD PTR ds:0x64025150
64019b7b:	test   eax,eax
64019b7d:	je     0x64019b87
64019b7f:	mov    DWORD PTR ds:0x6402ea70,edi
64019b85:	jmp    0x64019b9c
64019b87:	call   DWORD PTR ds:0x64025044
64019b8d:	cmp    eax,0x78
64019b90:	jne    0x64019b9c
64019b92:	mov    DWORD PTR ds:0x6402ea70,0x2
64019b9c:	cmp    DWORD PTR [ebp+0x14],ebx
64019b9f:	jle    0x64019bc3
64019ba1:	mov    ecx,DWORD PTR [ebp+0x14]
64019ba4:	mov    eax,DWORD PTR [ebp+0x10]
64019ba7:	dec    ecx
64019ba8:	cmp    BYTE PTR [eax],bl
64019baa:	je     0x64019bb4
64019bac:	inc    eax
64019bad:	cmp    ecx,ebx
64019baf:	jne    0x64019ba7
64019bb1:	or     ecx,0xffffffff
64019bb4:	mov    eax,DWORD PTR [ebp+0x14]
64019bb7:	sub    eax,ecx
64019bb9:	dec    eax
64019bba:	cmp    eax,DWORD PTR [ebp+0x14]
64019bbd:	jge    0x64019bc0
64019bbf:	inc    eax
64019bc0:	mov    DWORD PTR [ebp+0x14],eax
64019bc3:	mov    eax,ds:0x6402ea70
64019bc8:	cmp    eax,0x2
64019bcb:	je     0x64019d7c
64019bd1:	cmp    eax,ebx
64019bd3:	je     0x64019d7c
64019bd9:	cmp    eax,0x1
64019bdc:	jne    0x64019dad
64019be2:	cmp    DWORD PTR [ebp+0x20],ebx
64019be5:	mov    DWORD PTR [ebp-0x8],ebx
64019be8:	jne    0x64019bf2
64019bea:	mov    eax,DWORD PTR [esi]
64019bec:	mov    eax,DWORD PTR [eax+0x4]
64019bef:	mov    DWORD PTR [ebp+0x20],eax
64019bf2:	mov    esi,DWORD PTR ds:0x64025024
64019bf8:	xor    eax,eax
64019bfa:	cmp    DWORD PTR [ebp+0x24],ebx
64019bfd:	push   ebx
64019bfe:	push   ebx
64019bff:	push   DWORD PTR [ebp+0x14]
64019c02:	setne  al
64019c05:	push   DWORD PTR [ebp+0x10]
64019c08:	lea    eax,[eax*8+0x1]
64019c0f:	push   eax
64019c10:	push   DWORD PTR [ebp+0x20]
64019c13:	call   esi
64019c15:	mov    edi,eax
64019c17:	cmp    edi,ebx
64019c19:	je     0x64019dad
64019c1f:	jle    0x64019c64
64019c21:	push   0xffffffe0
64019c23:	xor    edx,edx
64019c25:	pop    eax
64019c26:	div    edi
64019c28:	cmp    eax,0x2
64019c2b:	jb     0x64019c64
64019c2d:	lea    eax,[edi+edi*1+0x8]
64019c31:	cmp    eax,0x400
64019c36:	ja     0x64019c4b
64019c38:	call   0x64013310
64019c3d:	mov    eax,esp
64019c3f:	cmp    eax,ebx
64019c41:	je     0x64019c5f
64019c43:	mov    DWORD PTR [eax],0xcccc
64019c49:	jmp    0x64019c5c
64019c4b:	push   eax
64019c4c:	call   0x64013b03
64019c51:	cmp    eax,ebx
64019c53:	pop    ecx
64019c54:	je     0x64019c5f
64019c56:	mov    DWORD PTR [eax],0xdddd
64019c5c:	add    eax,0x8
64019c5f:	mov    DWORD PTR [ebp-0xc],eax
64019c62:	jmp    0x64019c67
64019c64:	mov    DWORD PTR [ebp-0xc],ebx
64019c67:	cmp    DWORD PTR [ebp-0xc],ebx
64019c6a:	je     0x64019dad
64019c70:	push   edi
64019c71:	push   DWORD PTR [ebp-0xc]
64019c74:	push   DWORD PTR [ebp+0x14]
64019c77:	push   DWORD PTR [ebp+0x10]
64019c7a:	push   0x1
64019c7c:	push   DWORD PTR [ebp+0x20]
64019c7f:	call   esi
64019c81:	test   eax,eax
64019c83:	je     0x64019d6b
64019c89:	mov    esi,DWORD PTR ds:0x64025150
64019c8f:	push   ebx
64019c90:	push   ebx
64019c91:	push   edi
64019c92:	push   DWORD PTR [ebp-0xc]
64019c95:	push   DWORD PTR [ebp+0xc]
64019c98:	push   DWORD PTR [ebp+0x8]
64019c9b:	call   esi
64019c9d:	mov    ecx,eax
64019c9f:	cmp    ecx,ebx
64019ca1:	mov    DWORD PTR [ebp-0x8],ecx
64019ca4:	je     0x64019d6b
64019caa:	test   WORD PTR [ebp+0xc],0x400
64019cb0:	je     0x64019cdb
64019cb2:	cmp    DWORD PTR [ebp+0x1c],ebx
64019cb5:	je     0x64019d6b
64019cbb:	cmp    ecx,DWORD PTR [ebp+0x1c]
64019cbe:	jg     0x64019d6b
64019cc4:	push   DWORD PTR [ebp+0x1c]
64019cc7:	push   DWORD PTR [ebp+0x18]
64019cca:	push   edi
64019ccb:	push   DWORD PTR [ebp-0xc]
64019cce:	push   DWORD PTR [ebp+0xc]
64019cd1:	push   DWORD PTR [ebp+0x8]
64019cd4:	call   esi
64019cd6:	jmp    0x64019d6b
64019cdb:	cmp    ecx,ebx
64019cdd:	jle    0x64019d24
64019cdf:	push   0xffffffe0
64019ce1:	xor    edx,edx
64019ce3:	pop    eax
64019ce4:	div    ecx
64019ce6:	cmp    eax,0x2
64019ce9:	jb     0x64019d24
64019ceb:	lea    eax,[ecx+ecx*1+0x8]
64019cef:	cmp    eax,0x400
64019cf4:	ja     0x64019d0c
64019cf6:	call   0x64013310
64019cfb:	mov    esi,esp
64019cfd:	cmp    esi,ebx
64019cff:	je     0x64019d6b
64019d01:	mov    DWORD PTR [esi],0xcccc
64019d07:	add    esi,0x8
64019d0a:	jmp    0x64019d26
64019d0c:	push   eax
64019d0d:	call   0x64013b03
64019d12:	cmp    eax,ebx
64019d14:	pop    ecx
64019d15:	je     0x64019d20
64019d17:	mov    DWORD PTR [eax],0xdddd
64019d1d:	add    eax,0x8
64019d20:	mov    esi,eax
64019d22:	jmp    0x64019d26
64019d24:	xor    esi,esi
64019d26:	cmp    esi,ebx
64019d28:	je     0x64019d6b
64019d2a:	push   DWORD PTR [ebp-0x8]
64019d2d:	push   esi
64019d2e:	push   edi
64019d2f:	push   DWORD PTR [ebp-0xc]
64019d32:	push   DWORD PTR [ebp+0xc]
64019d35:	push   DWORD PTR [ebp+0x8]
64019d38:	call   DWORD PTR ds:0x64025150
64019d3e:	test   eax,eax
64019d40:	je     0x64019d64
64019d42:	cmp    DWORD PTR [ebp+0x1c],ebx
64019d45:	push   ebx
64019d46:	push   ebx
64019d47:	jne    0x64019d4d
64019d49:	push   ebx
64019d4a:	push   ebx
64019d4b:	jmp    0x64019d53
64019d4d:	push   DWORD PTR [ebp+0x1c]
64019d50:	push   DWORD PTR [ebp+0x18]
64019d53:	push   DWORD PTR [ebp-0x8]
64019d56:	push   esi
64019d57:	push   ebx
64019d58:	push   DWORD PTR [ebp+0x20]
64019d5b:	call   DWORD PTR ds:0x64025028
64019d61:	mov    DWORD PTR [ebp-0x8],eax
64019d64:	push   esi
64019d65:	call   0x6401309c
64019d6a:	pop    ecx
64019d6b:	push   DWORD PTR [ebp-0xc]
64019d6e:	call   0x6401309c
64019d73:	mov    eax,DWORD PTR [ebp-0x8]
64019d76:	pop    ecx
64019d77:	jmp    0x64019ed5
64019d7c:	cmp    DWORD PTR [ebp+0x8],ebx
64019d7f:	mov    DWORD PTR [ebp-0xc],ebx
64019d82:	mov    DWORD PTR [ebp-0x10],ebx
64019d85:	jne    0x64019d8f
64019d87:	mov    eax,DWORD PTR [esi]
64019d89:	mov    eax,DWORD PTR [eax+0x14]
64019d8c:	mov    DWORD PTR [ebp+0x8],eax
64019d8f:	cmp    DWORD PTR [ebp+0x20],ebx
64019d92:	jne    0x64019d9c
64019d94:	mov    eax,DWORD PTR [esi]
64019d96:	mov    eax,DWORD PTR [eax+0x4]
64019d99:	mov    DWORD PTR [ebp+0x20],eax
64019d9c:	push   DWORD PTR [ebp+0x8]
64019d9f:	call   0x6401d6f8
64019da4:	cmp    eax,0xffffffff
64019da7:	pop    ecx
64019da8:	mov    DWORD PTR [ebp-0x14],eax
64019dab:	jne    0x64019db4
64019dad:	xor    eax,eax
64019daf:	jmp    0x64019ed5
64019db4:	cmp    eax,DWORD PTR [ebp+0x20]
64019db7:	je     0x64019e98
64019dbd:	push   ebx
64019dbe:	push   ebx
64019dbf:	lea    ecx,[ebp+0x14]
64019dc2:	push   ecx
64019dc3:	push   DWORD PTR [ebp+0x10]
64019dc6:	push   eax
64019dc7:	push   DWORD PTR [ebp+0x20]
64019dca:	call   0x6401d73f
64019dcf:	add    esp,0x18
64019dd2:	cmp    eax,ebx
64019dd4:	mov    DWORD PTR [ebp-0xc],eax
64019dd7:	je     0x64019dad
64019dd9:	mov    esi,DWORD PTR ds:0x6402514c
64019ddf:	push   ebx
64019de0:	push   ebx
64019de1:	push   DWORD PTR [ebp+0x14]
64019de4:	push   eax
64019de5:	push   DWORD PTR [ebp+0xc]
64019de8:	push   DWORD PTR [ebp+0x8]
64019deb:	call   esi
64019ded:	cmp    eax,ebx
64019def:	mov    DWORD PTR [ebp-0x8],eax
64019df2:	jne    0x64019dfb
64019df4:	xor    esi,esi
64019df6:	jmp    0x64019eb2
64019dfb:	jle    0x64019e3a
64019dfd:	cmp    eax,0xffffffe0
64019e00:	ja     0x64019e3a
64019e02:	add    eax,0x8
64019e05:	cmp    eax,0x400
64019e0a:	ja     0x64019e22
64019e0c:	call   0x64013310
64019e11:	mov    edi,esp
64019e13:	cmp    edi,ebx
64019e15:	je     0x64019df4
64019e17:	mov    DWORD PTR [edi],0xcccc
64019e1d:	add    edi,0x8
64019e20:	jmp    0x64019e3c
64019e22:	push   eax
64019e23:	call   0x64013b03
64019e28:	cmp    eax,ebx
64019e2a:	pop    ecx
64019e2b:	je     0x64019e36
64019e2d:	mov    DWORD PTR [eax],0xdddd
64019e33:	add    eax,0x8
64019e36:	mov    edi,eax
64019e38:	jmp    0x64019e3c
64019e3a:	xor    edi,edi
64019e3c:	cmp    edi,ebx
64019e3e:	je     0x64019df4
64019e40:	push   DWORD PTR [ebp-0x8]
64019e43:	push   ebx
64019e44:	push   edi
64019e45:	call   0x64013290
64019e4a:	add    esp,0xc
64019e4d:	push   DWORD PTR [ebp-0x8]
64019e50:	push   edi
64019e51:	push   DWORD PTR [ebp+0x14]
64019e54:	push   DWORD PTR [ebp-0xc]
64019e57:	push   DWORD PTR [ebp+0xc]
64019e5a:	push   DWORD PTR [ebp+0x8]
64019e5d:	call   esi
64019e5f:	cmp    eax,ebx
64019e61:	mov    DWORD PTR [ebp-0x8],eax
64019e64:	jne    0x64019e6a
64019e66:	xor    esi,esi
64019e68:	jmp    0x64019e8f
64019e6a:	push   DWORD PTR [ebp+0x1c]
64019e6d:	lea    eax,[ebp-0x8]
64019e70:	push   DWORD PTR [ebp+0x18]
64019e73:	push   eax
64019e74:	push   edi
64019e75:	push   DWORD PTR [ebp+0x20]
64019e78:	push   DWORD PTR [ebp-0x14]
64019e7b:	call   0x6401d73f
64019e80:	mov    esi,eax
64019e82:	mov    DWORD PTR [ebp-0x10],esi
64019e85:	add    esp,0x18
64019e88:	neg    esi
64019e8a:	sbb    esi,esi
64019e8c:	and    esi,DWORD PTR [ebp-0x8]
64019e8f:	push   edi
64019e90:	call   0x6401309c
64019e95:	pop    ecx
64019e96:	jmp    0x64019eb2
64019e98:	push   DWORD PTR [ebp+0x1c]
64019e9b:	push   DWORD PTR [ebp+0x18]
64019e9e:	push   DWORD PTR [ebp+0x14]
64019ea1:	push   DWORD PTR [ebp+0x10]
64019ea4:	push   DWORD PTR [ebp+0xc]
64019ea7:	push   DWORD PTR [ebp+0x8]
64019eaa:	call   DWORD PTR ds:0x6402514c
64019eb0:	mov    esi,eax
64019eb2:	cmp    DWORD PTR [ebp-0xc],ebx
64019eb5:	je     0x64019ec0
64019eb7:	push   DWORD PTR [ebp-0xc]
64019eba:	call   0x64013a26
64019ebf:	pop    ecx
64019ec0:	mov    eax,DWORD PTR [ebp-0x10]
64019ec3:	cmp    eax,ebx
64019ec5:	je     0x64019ed3
64019ec7:	cmp    DWORD PTR [ebp+0x18],eax
64019eca:	je     0x64019ed3
64019ecc:	push   eax
64019ecd:	call   0x64013a26
64019ed2:	pop    ecx
64019ed3:	mov    eax,esi
64019ed5:	lea    esp,[ebp-0x20]
64019ed8:	pop    edi
64019ed9:	pop    esi
64019eda:	pop    ebx
64019edb:	mov    ecx,DWORD PTR [ebp-0x4]
64019ede:	xor    ecx,ebp
64019ee0:	call   0x64012b8c
64019ee5:	leave  
64019ee6:	ret    
64019ee7:	push   ebp
64019ee8:	mov    ebp,esp
64019eea:	sub    esp,0x10
64019eed:	push   DWORD PTR [ebp+0x8]
64019ef0:	lea    ecx,[ebp-0x10]
64019ef3:	call   0x64012d2f
64019ef8:	push   DWORD PTR [ebp+0x28]
64019efb:	lea    ecx,[ebp-0x10]
64019efe:	push   DWORD PTR [ebp+0x24]
64019f01:	push   DWORD PTR [ebp+0x20]
64019f04:	push   DWORD PTR [ebp+0x1c]
64019f07:	push   DWORD PTR [ebp+0x18]
64019f0a:	push   DWORD PTR [ebp+0x14]
64019f0d:	push   DWORD PTR [ebp+0x10]
64019f10:	push   DWORD PTR [ebp+0xc]
64019f13:	call   0x64019b45
64019f18:	add    esp,0x20
64019f1b:	cmp    BYTE PTR [ebp-0x4],0x0
64019f1f:	je     0x64019f28
64019f21:	mov    ecx,DWORD PTR [ebp-0x8]
64019f24:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019f28:	leave  
64019f29:	ret    
64019f2a:	push   ebp
64019f2b:	mov    ebp,esp
64019f2d:	sub    esp,0x10
64019f30:	push   DWORD PTR [ebp+0xc]
64019f33:	lea    ecx,[ebp-0x10]
64019f36:	call   0x64012d2f
64019f3b:	movzx  eax,BYTE PTR [ebp+0x8]
64019f3f:	mov    ecx,DWORD PTR [ebp-0x10]
64019f42:	mov    ecx,DWORD PTR [ecx+0xc8]
64019f48:	movzx  eax,WORD PTR [ecx+eax*2]
64019f4c:	and    eax,0x8000
64019f51:	cmp    BYTE PTR [ebp-0x4],0x0
64019f55:	je     0x64019f5e
64019f57:	mov    ecx,DWORD PTR [ebp-0x8]
64019f5a:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019f5e:	leave  
64019f5f:	ret    
64019f60:	push   0x0
64019f62:	push   DWORD PTR [esp+0x8]
64019f66:	call   0x64019f2a
64019f6b:	pop    ecx
64019f6c:	pop    ecx
64019f6d:	ret    
64019f6e:	push   ebp
64019f6f:	mov    ebp,esp
64019f71:	sub    esp,0x18
64019f74:	push   ebx
64019f75:	push   DWORD PTR [ebp+0x10]
64019f78:	lea    ecx,[ebp-0x18]
64019f7b:	call   0x64012d2f
64019f80:	mov    ebx,DWORD PTR [ebp+0x8]
64019f83:	lea    eax,[ebx+0x1]
64019f86:	cmp    eax,0x100
64019f8b:	ja     0x64019f9c
64019f8d:	mov    eax,DWORD PTR [ebp-0x18]
64019f90:	mov    eax,DWORD PTR [eax+0xc8]
64019f96:	movzx  eax,WORD PTR [eax+ebx*2]
64019f9a:	jmp    0x6401a011
64019f9c:	mov    DWORD PTR [ebp+0x8],ebx
64019f9f:	sar    DWORD PTR [ebp+0x8],0x8
64019fa3:	lea    eax,[ebp-0x18]
64019fa6:	push   eax
64019fa7:	mov    eax,DWORD PTR [ebp+0x8]
64019faa:	and    eax,0xff
64019faf:	push   eax
64019fb0:	call   0x64019f2a
64019fb5:	test   eax,eax
64019fb7:	pop    ecx
64019fb8:	pop    ecx
64019fb9:	je     0x64019fcd
64019fbb:	mov    al,BYTE PTR [ebp+0x8]
64019fbe:	push   0x2
64019fc0:	mov    BYTE PTR [ebp-0x8],al
64019fc3:	mov    BYTE PTR [ebp-0x7],bl
64019fc6:	mov    BYTE PTR [ebp-0x6],0x0
64019fca:	pop    ecx
64019fcb:	jmp    0x64019fd7
64019fcd:	xor    ecx,ecx
64019fcf:	mov    BYTE PTR [ebp-0x8],bl
64019fd2:	mov    BYTE PTR [ebp-0x7],0x0
64019fd6:	inc    ecx
64019fd7:	mov    eax,DWORD PTR [ebp-0x18]
64019fda:	push   0x1
64019fdc:	push   DWORD PTR [eax+0x14]
64019fdf:	push   DWORD PTR [eax+0x4]
64019fe2:	lea    eax,[ebp-0x4]
64019fe5:	push   eax
64019fe6:	push   ecx
64019fe7:	lea    eax,[ebp-0x8]
64019fea:	push   eax
64019feb:	lea    eax,[ebp-0x18]
64019fee:	push   0x1
64019ff0:	push   eax
64019ff1:	call   0x6401bad5
64019ff6:	add    esp,0x20
64019ff9:	test   eax,eax
64019ffb:	jne    0x6401a00d
64019ffd:	cmp    BYTE PTR [ebp-0xc],al
6401a000:	je     0x6401a009
6401a002:	mov    eax,DWORD PTR [ebp-0x10]
6401a005:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a009:	xor    eax,eax
6401a00b:	jmp    0x6401a021
6401a00d:	movzx  eax,WORD PTR [ebp-0x4]
6401a011:	and    eax,DWORD PTR [ebp+0xc]
6401a014:	cmp    BYTE PTR [ebp-0xc],0x0
6401a018:	je     0x6401a021
6401a01a:	mov    ecx,DWORD PTR [ebp-0x10]
6401a01d:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401a021:	pop    ebx
6401a022:	leave  
6401a023:	ret    
6401a024:	push   esi
6401a025:	push   edi
6401a026:	xor    esi,esi
6401a028:	mov    edi,0x6402ea78
6401a02d:	cmp    DWORD PTR [esi*8+0x6402d964],0x1
6401a035:	jne    0x6401a055
6401a037:	lea    eax,[esi*8+0x6402d960]
6401a03e:	mov    DWORD PTR [eax],edi
6401a040:	push   0xfa0
6401a045:	push   DWORD PTR [eax]
6401a047:	add    edi,0x18
6401a04a:	call   0x6401b858
6401a04f:	test   eax,eax
6401a051:	pop    ecx
6401a052:	pop    ecx
6401a053:	je     0x6401a061
6401a055:	inc    esi
6401a056:	cmp    esi,0x24
6401a059:	jl     0x6401a02d
6401a05b:	xor    eax,eax
6401a05d:	inc    eax
6401a05e:	pop    edi
6401a05f:	pop    esi
6401a060:	ret    
6401a061:	and    DWORD PTR [esi*8+0x6402d960],0x0
6401a069:	xor    eax,eax
6401a06b:	jmp    0x6401a05e
6401a06d:	push   ebx
6401a06e:	mov    ebx,DWORD PTR ds:0x640250a4
6401a074:	push   esi
6401a075:	mov    esi,0x6402d960
6401a07a:	push   edi
6401a07b:	mov    edi,DWORD PTR [esi]
6401a07d:	test   edi,edi
6401a07f:	je     0x6401a094
6401a081:	cmp    DWORD PTR [esi+0x4],0x1
6401a085:	je     0x6401a094
6401a087:	push   edi
6401a088:	call   ebx
6401a08a:	push   edi
6401a08b:	call   0x64013a26
6401a090:	and    DWORD PTR [esi],0x0
6401a093:	pop    ecx
6401a094:	add    esi,0x8
6401a097:	cmp    esi,0x6402da80
6401a09d:	jl     0x6401a07b
6401a09f:	mov    esi,0x6402d960
6401a0a4:	pop    edi
6401a0a5:	mov    eax,DWORD PTR [esi]
6401a0a7:	test   eax,eax
6401a0a9:	je     0x6401a0b4
6401a0ab:	cmp    DWORD PTR [esi+0x4],0x1
6401a0af:	jne    0x6401a0b4
6401a0b1:	push   eax
6401a0b2:	call   ebx
6401a0b4:	add    esi,0x8
6401a0b7:	cmp    esi,0x6402da80
6401a0bd:	jl     0x6401a0a5
6401a0bf:	pop    esi
6401a0c0:	pop    ebx
6401a0c1:	ret    
6401a0c2:	push   ebp
6401a0c3:	mov    ebp,esp
6401a0c5:	mov    eax,DWORD PTR [ebp+0x8]
6401a0c8:	push   DWORD PTR [eax*8+0x6402d960]
6401a0cf:	call   DWORD PTR ds:0x640250a0
6401a0d5:	pop    ebp
6401a0d6:	ret    
6401a0d7:	push   0xc
6401a0d9:	push   0x6402a8f8
6401a0de:	call   0x64014150
6401a0e3:	xor    edi,edi
6401a0e5:	inc    edi
6401a0e6:	mov    DWORD PTR [ebp-0x1c],edi
6401a0e9:	xor    ebx,ebx
6401a0eb:	cmp    DWORD PTR ds:0x6402ea6c,ebx
6401a0f1:	jne    0x6401a10b
6401a0f3:	call   0x6401ae6a
6401a0f8:	push   0x1e
6401a0fa:	call   0x6401acca
6401a0ff:	push   0xff
6401a104:	call   0x64016020
6401a109:	pop    ecx
6401a10a:	pop    ecx
6401a10b:	mov    esi,DWORD PTR [ebp+0x8]
6401a10e:	lea    esi,[esi*8+0x6402d960]
6401a115:	cmp    DWORD PTR [esi],ebx
6401a117:	je     0x6401a11d
6401a119:	mov    eax,edi
6401a11b:	jmp    0x6401a18b
6401a11d:	push   0x18
6401a11f:	call   0x64015e60
6401a124:	pop    ecx
6401a125:	mov    edi,eax
6401a127:	cmp    edi,ebx
6401a129:	jne    0x6401a13a
6401a12b:	call   0x64014950
6401a130:	mov    DWORD PTR [eax],0xc
6401a136:	xor    eax,eax
6401a138:	jmp    0x6401a18b
6401a13a:	push   0xa
6401a13c:	call   0x6401a19a
6401a141:	pop    ecx
6401a142:	mov    DWORD PTR [ebp-0x4],ebx
6401a145:	cmp    DWORD PTR [esi],ebx
6401a147:	jne    0x6401a175
6401a149:	push   0xfa0
6401a14e:	push   edi
6401a14f:	call   0x6401b858
6401a154:	pop    ecx
6401a155:	pop    ecx
6401a156:	test   eax,eax
6401a158:	jne    0x6401a171
6401a15a:	push   edi
6401a15b:	call   0x64013a26
6401a160:	pop    ecx
6401a161:	call   0x64014950
6401a166:	mov    DWORD PTR [eax],0xc
6401a16c:	mov    DWORD PTR [ebp-0x1c],ebx
6401a16f:	jmp    0x6401a17c
6401a171:	mov    DWORD PTR [esi],edi
6401a173:	jmp    0x6401a17c
6401a175:	push   edi
6401a176:	call   0x64013a26
6401a17b:	pop    ecx
6401a17c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401a183:	call   0x6401a191
6401a188:	mov    eax,DWORD PTR [ebp-0x1c]
6401a18b:	call   0x64014195
6401a190:	ret    
6401a191:	push   0xa
6401a193:	call   0x6401a0c2
6401a198:	pop    ecx
6401a199:	ret    
6401a19a:	push   ebp
6401a19b:	mov    ebp,esp
6401a19d:	mov    eax,DWORD PTR [ebp+0x8]
6401a1a0:	push   esi
6401a1a1:	lea    esi,[eax*8+0x6402d960]
6401a1a8:	cmp    DWORD PTR [esi],0x0
6401a1ab:	jne    0x6401a1c0
6401a1ad:	push   eax
6401a1ae:	call   0x6401a0d7
6401a1b3:	test   eax,eax
6401a1b5:	pop    ecx
6401a1b6:	jne    0x6401a1c0
6401a1b8:	push   0x11
6401a1ba:	call   0x64015fd6
6401a1bf:	pop    ecx
6401a1c0:	push   DWORD PTR [esi]
6401a1c2:	call   DWORD PTR ds:0x6402509c
6401a1c8:	pop    esi
6401a1c9:	pop    ebp
6401a1ca:	ret    
6401a1cb:	push   0x140
6401a1d0:	push   0x0
6401a1d2:	push   DWORD PTR ds:0x6402ea6c
6401a1d8:	call   DWORD PTR ds:0x640250f8
6401a1de:	test   eax,eax
6401a1e0:	mov    ds:0x640324e8,eax
6401a1e5:	jne    0x6401a1e8
6401a1e7:	ret    
6401a1e8:	mov    ecx,DWORD PTR [esp+0x4]
6401a1ec:	and    DWORD PTR ds:0x6402ebc8,0x0
6401a1f3:	and    DWORD PTR ds:0x640324e4,0x0
6401a1fa:	mov    ds:0x640324f0,eax
6401a1ff:	xor    eax,eax
6401a201:	mov    DWORD PTR ds:0x640324ec,ecx
6401a207:	mov    DWORD PTR ds:0x640324f4,0x10
6401a211:	inc    eax
6401a212:	ret    
6401a213:	mov    ecx,DWORD PTR ds:0x640324e4
6401a219:	mov    eax,ds:0x640324e8
6401a21e:	imul   ecx,ecx,0x14
6401a221:	add    ecx,eax
6401a223:	jmp    0x6401a237
6401a225:	mov    edx,DWORD PTR [esp+0x4]
6401a229:	sub    edx,DWORD PTR [eax+0xc]
6401a22c:	cmp    edx,0x100000
6401a232:	jb     0x6401a23d
6401a234:	add    eax,0x14
6401a237:	cmp    eax,ecx
6401a239:	jb     0x6401a225
6401a23b:	xor    eax,eax
6401a23d:	ret    
6401a23e:	push   ebp
6401a23f:	mov    ebp,esp
6401a241:	sub    esp,0x10
6401a244:	mov    ecx,DWORD PTR [ebp+0x8]
6401a247:	mov    eax,DWORD PTR [ecx+0x10]
6401a24a:	push   esi
6401a24b:	mov    esi,DWORD PTR [ebp+0xc]
6401a24e:	push   edi
6401a24f:	mov    edi,esi
6401a251:	sub    edi,DWORD PTR [ecx+0xc]
6401a254:	add    esi,0xfffffffc
6401a257:	shr    edi,0xf
6401a25a:	mov    ecx,edi
6401a25c:	imul   ecx,ecx,0x204
6401a262:	lea    ecx,[ecx+eax*1+0x144]
6401a269:	mov    DWORD PTR [ebp-0x10],ecx
6401a26c:	mov    ecx,DWORD PTR [esi]
6401a26e:	dec    ecx
6401a26f:	test   cl,0x1
6401a272:	mov    DWORD PTR [ebp-0x4],ecx
6401a275:	jne    0x6401a54e
6401a27b:	push   ebx
6401a27c:	lea    ebx,[ecx+esi*1]
6401a27f:	mov    edx,DWORD PTR [ebx]
6401a281:	mov    DWORD PTR [ebp-0xc],edx
6401a284:	mov    edx,DWORD PTR [esi-0x4]
6401a287:	mov    DWORD PTR [ebp-0x8],edx
6401a28a:	mov    edx,DWORD PTR [ebp-0xc]
6401a28d:	test   dl,0x1
6401a290:	mov    DWORD PTR [ebp+0xc],ebx
6401a293:	jne    0x6401a309
6401a295:	sar    edx,0x4
6401a298:	dec    edx
6401a299:	cmp    edx,0x3f
6401a29c:	jbe    0x6401a2a1
6401a29e:	push   0x3f
6401a2a0:	pop    edx
6401a2a1:	mov    ecx,DWORD PTR [ebx+0x4]
6401a2a4:	cmp    ecx,DWORD PTR [ebx+0x8]
6401a2a7:	jne    0x6401a2eb
6401a2a9:	cmp    edx,0x20
6401a2ac:	mov    ebx,0x80000000
6401a2b1:	jae    0x6401a2cc
6401a2b3:	mov    ecx,edx
6401a2b5:	shr    ebx,cl
6401a2b7:	lea    ecx,[edx+eax*1+0x4]
6401a2bb:	not    ebx
6401a2bd:	and    DWORD PTR [eax+edi*4+0x44],ebx
6401a2c1:	dec    BYTE PTR [ecx]
6401a2c3:	jne    0x6401a2e8
6401a2c5:	mov    ecx,DWORD PTR [ebp+0x8]
6401a2c8:	and    DWORD PTR [ecx],ebx
6401a2ca:	jmp    0x6401a2e8
6401a2cc:	lea    ecx,[edx-0x20]
6401a2cf:	shr    ebx,cl
6401a2d1:	lea    ecx,[edx+eax*1+0x4]
6401a2d5:	not    ebx
6401a2d7:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6401a2de:	dec    BYTE PTR [ecx]
6401a2e0:	jne    0x6401a2e8
6401a2e2:	mov    ecx,DWORD PTR [ebp+0x8]
6401a2e5:	and    DWORD PTR [ecx+0x4],ebx
6401a2e8:	mov    ebx,DWORD PTR [ebp+0xc]
6401a2eb:	mov    edx,DWORD PTR [ebx+0x8]
6401a2ee:	mov    ebx,DWORD PTR [ebx+0x4]
6401a2f1:	mov    ecx,DWORD PTR [ebp-0x4]
6401a2f4:	add    ecx,DWORD PTR [ebp-0xc]
6401a2f7:	mov    DWORD PTR [edx+0x4],ebx
6401a2fa:	mov    edx,DWORD PTR [ebp+0xc]
6401a2fd:	mov    ebx,DWORD PTR [edx+0x4]
6401a300:	mov    edx,DWORD PTR [edx+0x8]
6401a303:	mov    DWORD PTR [ebx+0x8],edx
6401a306:	mov    DWORD PTR [ebp-0x4],ecx
6401a309:	mov    edx,ecx
6401a30b:	sar    edx,0x4
6401a30e:	dec    edx
6401a30f:	cmp    edx,0x3f
6401a312:	jbe    0x6401a317
6401a314:	push   0x3f
6401a316:	pop    edx
6401a317:	mov    ebx,DWORD PTR [ebp-0x8]
6401a31a:	and    ebx,0x1
6401a31d:	mov    DWORD PTR [ebp-0xc],ebx
6401a320:	jne    0x6401a3b5
6401a326:	sub    esi,DWORD PTR [ebp-0x8]
6401a329:	mov    ebx,DWORD PTR [ebp-0x8]
6401a32c:	sar    ebx,0x4
6401a32f:	push   0x3f
6401a331:	mov    DWORD PTR [ebp+0xc],esi
6401a334:	dec    ebx
6401a335:	pop    esi
6401a336:	cmp    ebx,esi
6401a338:	jbe    0x6401a33c
6401a33a:	mov    ebx,esi
6401a33c:	add    ecx,DWORD PTR [ebp-0x8]
6401a33f:	mov    edx,ecx
6401a341:	sar    edx,0x4
6401a344:	dec    edx
6401a345:	cmp    edx,esi
6401a347:	mov    DWORD PTR [ebp-0x4],ecx
6401a34a:	jbe    0x6401a34e
6401a34c:	mov    edx,esi
6401a34e:	cmp    ebx,edx
6401a350:	je     0x6401a3b0
6401a352:	mov    ecx,DWORD PTR [ebp+0xc]
6401a355:	mov    esi,DWORD PTR [ecx+0x4]
6401a358:	cmp    esi,DWORD PTR [ecx+0x8]
6401a35b:	jne    0x6401a398
6401a35d:	cmp    ebx,0x20
6401a360:	mov    esi,0x80000000
6401a365:	jae    0x6401a37e
6401a367:	mov    ecx,ebx
6401a369:	shr    esi,cl
6401a36b:	not    esi
6401a36d:	and    DWORD PTR [eax+edi*4+0x44],esi
6401a371:	dec    BYTE PTR [ebx+eax*1+0x4]
6401a375:	jne    0x6401a398
6401a377:	mov    ecx,DWORD PTR [ebp+0x8]
6401a37a:	and    DWORD PTR [ecx],esi
6401a37c:	jmp    0x6401a398
6401a37e:	lea    ecx,[ebx-0x20]
6401a381:	shr    esi,cl
6401a383:	not    esi
6401a385:	and    DWORD PTR [eax+edi*4+0xc4],esi
6401a38c:	dec    BYTE PTR [ebx+eax*1+0x4]
6401a390:	jne    0x6401a398
6401a392:	mov    ecx,DWORD PTR [ebp+0x8]
6401a395:	and    DWORD PTR [ecx+0x4],esi
6401a398:	mov    ecx,DWORD PTR [ebp+0xc]
6401a39b:	mov    esi,DWORD PTR [ecx+0x8]
6401a39e:	mov    ecx,DWORD PTR [ecx+0x4]
6401a3a1:	mov    DWORD PTR [esi+0x4],ecx
6401a3a4:	mov    ecx,DWORD PTR [ebp+0xc]
6401a3a7:	mov    esi,DWORD PTR [ecx+0x4]
6401a3aa:	mov    ecx,DWORD PTR [ecx+0x8]
6401a3ad:	mov    DWORD PTR [esi+0x8],ecx
6401a3b0:	mov    esi,DWORD PTR [ebp+0xc]
6401a3b3:	jmp    0x6401a3b8
6401a3b5:	mov    ebx,DWORD PTR [ebp+0x8]
6401a3b8:	cmp    DWORD PTR [ebp-0xc],0x0
6401a3bc:	jne    0x6401a3c6
6401a3be:	cmp    ebx,edx
6401a3c0:	je     0x6401a446
6401a3c6:	mov    ecx,DWORD PTR [ebp-0x10]
6401a3c9:	lea    ecx,[ecx+edx*8]
6401a3cc:	mov    ebx,DWORD PTR [ecx+0x4]
6401a3cf:	mov    DWORD PTR [esi+0x8],ecx
6401a3d2:	mov    DWORD PTR [esi+0x4],ebx
6401a3d5:	mov    DWORD PTR [ecx+0x4],esi
6401a3d8:	mov    ecx,DWORD PTR [esi+0x4]
6401a3db:	mov    DWORD PTR [ecx+0x8],esi
6401a3de:	mov    ecx,DWORD PTR [esi+0x4]
6401a3e1:	cmp    ecx,DWORD PTR [esi+0x8]
6401a3e4:	jne    0x6401a446
6401a3e6:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401a3ea:	mov    BYTE PTR [ebp+0xf],cl
6401a3ed:	inc    cl
6401a3ef:	cmp    edx,0x20
6401a3f2:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401a3f6:	jae    0x6401a41d
6401a3f8:	cmp    BYTE PTR [ebp+0xf],0x0
6401a3fc:	jne    0x6401a40c
6401a3fe:	mov    ecx,edx
6401a400:	mov    ebx,0x80000000
6401a405:	shr    ebx,cl
6401a407:	mov    ecx,DWORD PTR [ebp+0x8]
6401a40a:	or     DWORD PTR [ecx],ebx
6401a40c:	mov    ebx,0x80000000
6401a411:	mov    ecx,edx
6401a413:	shr    ebx,cl
6401a415:	lea    eax,[eax+edi*4+0x44]
6401a419:	or     DWORD PTR [eax],ebx
6401a41b:	jmp    0x6401a446
6401a41d:	cmp    BYTE PTR [ebp+0xf],0x0
6401a421:	jne    0x6401a433
6401a423:	lea    ecx,[edx-0x20]
6401a426:	mov    ebx,0x80000000
6401a42b:	shr    ebx,cl
6401a42d:	mov    ecx,DWORD PTR [ebp+0x8]
6401a430:	or     DWORD PTR [ecx+0x4],ebx
6401a433:	lea    ecx,[edx-0x20]
6401a436:	mov    edx,0x80000000
6401a43b:	shr    edx,cl
6401a43d:	lea    eax,[eax+edi*4+0xc4]
6401a444:	or     DWORD PTR [eax],edx
6401a446:	mov    eax,DWORD PTR [ebp-0x4]
6401a449:	mov    DWORD PTR [esi],eax
6401a44b:	mov    DWORD PTR [eax+esi*1-0x4],eax
6401a44f:	mov    eax,DWORD PTR [ebp-0x10]
6401a452:	dec    DWORD PTR [eax]
6401a454:	jne    0x6401a54d
6401a45a:	mov    eax,ds:0x6402ebc8
6401a45f:	test   eax,eax
6401a461:	je     0x6401a53f
6401a467:	mov    ecx,DWORD PTR ds:0x640324f8
6401a46d:	mov    esi,DWORD PTR ds:0x64025178
6401a473:	push   0x4000
6401a478:	shl    ecx,0xf
6401a47b:	add    ecx,DWORD PTR [eax+0xc]
6401a47e:	mov    ebx,0x8000
6401a483:	push   ebx
6401a484:	push   ecx
6401a485:	call   esi
6401a487:	mov    ecx,DWORD PTR ds:0x640324f8
6401a48d:	mov    eax,ds:0x6402ebc8
6401a492:	mov    edx,0x80000000
6401a497:	shr    edx,cl
6401a499:	or     DWORD PTR [eax+0x8],edx
6401a49c:	mov    eax,ds:0x6402ebc8
6401a4a1:	mov    eax,DWORD PTR [eax+0x10]
6401a4a4:	mov    ecx,DWORD PTR ds:0x640324f8
6401a4aa:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6401a4b2:	mov    eax,ds:0x6402ebc8
6401a4b7:	mov    eax,DWORD PTR [eax+0x10]
6401a4ba:	dec    BYTE PTR [eax+0x43]
6401a4bd:	mov    eax,ds:0x6402ebc8
6401a4c2:	mov    ecx,DWORD PTR [eax+0x10]
6401a4c5:	cmp    BYTE PTR [ecx+0x43],0x0
6401a4c9:	jne    0x6401a4d4
6401a4cb:	and    DWORD PTR [eax+0x4],0xfffffffe
6401a4cf:	mov    eax,ds:0x6402ebc8
6401a4d4:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401a4d8:	jne    0x6401a53f
6401a4da:	push   ebx
6401a4db:	push   0x0
6401a4dd:	push   DWORD PTR [eax+0xc]
6401a4e0:	call   esi
6401a4e2:	mov    eax,ds:0x6402ebc8
6401a4e7:	push   DWORD PTR [eax+0x10]
6401a4ea:	push   0x0
6401a4ec:	push   DWORD PTR ds:0x6402ea6c
6401a4f2:	call   DWORD PTR ds:0x640250fc
6401a4f8:	mov    ecx,DWORD PTR ds:0x640324e4
6401a4fe:	mov    eax,ds:0x6402ebc8
6401a503:	imul   ecx,ecx,0x14
6401a506:	mov    edx,DWORD PTR ds:0x640324e8
6401a50c:	sub    ecx,eax
6401a50e:	lea    ecx,[ecx+edx*1-0x14]
6401a512:	push   ecx
6401a513:	lea    ecx,[eax+0x14]
6401a516:	push   ecx
6401a517:	push   eax
6401a518:	call   0x64013bd0
6401a51d:	mov    eax,DWORD PTR [ebp+0x8]
6401a520:	add    esp,0xc
6401a523:	dec    DWORD PTR ds:0x640324e4
6401a529:	cmp    eax,DWORD PTR ds:0x6402ebc8
6401a52f:	jbe    0x6401a535
6401a531:	sub    DWORD PTR [ebp+0x8],0x14
6401a535:	mov    eax,ds:0x640324e8
6401a53a:	mov    ds:0x640324f0,eax
6401a53f:	mov    eax,DWORD PTR [ebp+0x8]
6401a542:	mov    ds:0x6402ebc8,eax
6401a547:	mov    DWORD PTR ds:0x640324f8,edi
6401a54d:	pop    ebx
6401a54e:	pop    edi
6401a54f:	pop    esi
6401a550:	leave  
6401a551:	ret    
6401a552:	mov    eax,ds:0x640324f4
6401a557:	push   esi
6401a558:	mov    esi,DWORD PTR ds:0x640324e4
6401a55e:	push   edi
6401a55f:	xor    edi,edi
6401a561:	cmp    esi,eax
6401a563:	jne    0x6401a599
6401a565:	add    eax,0x10
6401a568:	imul   eax,eax,0x14
6401a56b:	push   eax
6401a56c:	push   DWORD PTR ds:0x640324e8
6401a572:	push   edi
6401a573:	push   DWORD PTR ds:0x6402ea6c
6401a579:	call   DWORD PTR ds:0x64025100
6401a57f:	cmp    eax,edi
6401a581:	jne    0x6401a587
6401a583:	xor    eax,eax
6401a585:	jmp    0x6401a5ff
6401a587:	add    DWORD PTR ds:0x640324f4,0x10
6401a58e:	mov    esi,DWORD PTR ds:0x640324e4
6401a594:	mov    ds:0x640324e8,eax
6401a599:	imul   esi,esi,0x14
6401a59c:	add    esi,DWORD PTR ds:0x640324e8
6401a5a2:	push   0x41c4
6401a5a7:	push   0x8
6401a5a9:	push   DWORD PTR ds:0x6402ea6c
6401a5af:	call   DWORD PTR ds:0x640250f8
6401a5b5:	cmp    eax,edi
6401a5b7:	mov    DWORD PTR [esi+0x10],eax
6401a5ba:	je     0x6401a583
6401a5bc:	push   0x4
6401a5be:	push   0x2000
6401a5c3:	push   0x100000
6401a5c8:	push   edi
6401a5c9:	call   DWORD PTR ds:0x640250c8
6401a5cf:	cmp    eax,edi
6401a5d1:	mov    DWORD PTR [esi+0xc],eax
6401a5d4:	jne    0x6401a5e8
6401a5d6:	push   DWORD PTR [esi+0x10]
6401a5d9:	push   edi
6401a5da:	push   DWORD PTR ds:0x6402ea6c
6401a5e0:	call   DWORD PTR ds:0x640250fc
6401a5e6:	jmp    0x6401a583
6401a5e8:	or     DWORD PTR [esi+0x8],0xffffffff
6401a5ec:	mov    DWORD PTR [esi],edi
6401a5ee:	mov    DWORD PTR [esi+0x4],edi
6401a5f1:	inc    DWORD PTR ds:0x640324e4
6401a5f7:	mov    eax,DWORD PTR [esi+0x10]
6401a5fa:	or     DWORD PTR [eax],0xffffffff
6401a5fd:	mov    eax,esi
6401a5ff:	pop    edi
6401a600:	pop    esi
6401a601:	ret    
6401a602:	push   ebp
6401a603:	mov    ebp,esp
6401a605:	push   ecx
6401a606:	push   ecx
6401a607:	mov    ecx,DWORD PTR [ebp+0x8]
6401a60a:	mov    eax,DWORD PTR [ecx+0x8]
6401a60d:	push   ebx
6401a60e:	push   esi
6401a60f:	mov    esi,DWORD PTR [ecx+0x10]
6401a612:	push   edi
6401a613:	xor    ebx,ebx
6401a615:	jmp    0x6401a61a
6401a617:	add    eax,eax
6401a619:	inc    ebx
6401a61a:	test   eax,eax
6401a61c:	jge    0x6401a617
6401a61e:	mov    eax,ebx
6401a620:	imul   eax,eax,0x204
6401a626:	lea    eax,[eax+esi*1+0x144]
6401a62d:	push   0x3f
6401a62f:	mov    DWORD PTR [ebp-0x8],eax
6401a632:	pop    edx
6401a633:	mov    DWORD PTR [eax+0x8],eax
6401a636:	mov    DWORD PTR [eax+0x4],eax
6401a639:	add    eax,0x8
6401a63c:	dec    edx
6401a63d:	jne    0x6401a633
6401a63f:	push   0x4
6401a641:	mov    edi,ebx
6401a643:	push   0x1000
6401a648:	shl    edi,0xf
6401a64b:	add    edi,DWORD PTR [ecx+0xc]
6401a64e:	push   0x8000
6401a653:	push   edi
6401a654:	call   DWORD PTR ds:0x640250c8
6401a65a:	test   eax,eax
6401a65c:	jne    0x6401a666
6401a65e:	or     eax,0xffffffff
6401a661:	jmp    0x6401a703
6401a666:	lea    edx,[edi+0x7000]
6401a66c:	cmp    edi,edx
6401a66e:	mov    DWORD PTR [ebp-0x4],edx
6401a671:	ja     0x6401a6b6
6401a673:	mov    ecx,edx
6401a675:	sub    ecx,edi
6401a677:	shr    ecx,0xc
6401a67a:	lea    eax,[edi+0x10]
6401a67d:	inc    ecx
6401a67e:	or     DWORD PTR [eax-0x8],0xffffffff
6401a682:	or     DWORD PTR [eax+0xfec],0xffffffff
6401a689:	lea    edx,[eax+0xffc]
6401a68f:	mov    DWORD PTR [eax],edx
6401a691:	lea    edx,[eax-0x1004]
6401a697:	mov    DWORD PTR [eax-0x4],0xff0
6401a69e:	mov    DWORD PTR [eax+0x4],edx
6401a6a1:	mov    DWORD PTR [eax+0xfe8],0xff0
6401a6ab:	add    eax,0x1000
6401a6b0:	dec    ecx
6401a6b1:	jne    0x6401a67e
6401a6b3:	mov    edx,DWORD PTR [ebp-0x4]
6401a6b6:	mov    eax,DWORD PTR [ebp-0x8]
6401a6b9:	add    eax,0x1f8
6401a6be:	lea    ecx,[edi+0xc]
6401a6c1:	mov    DWORD PTR [eax+0x4],ecx
6401a6c4:	mov    DWORD PTR [ecx+0x8],eax
6401a6c7:	lea    ecx,[edx+0xc]
6401a6ca:	mov    DWORD PTR [eax+0x8],ecx
6401a6cd:	mov    DWORD PTR [ecx+0x4],eax
6401a6d0:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401a6d5:	xor    edi,edi
6401a6d7:	inc    edi
6401a6d8:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401a6df:	mov    al,BYTE PTR [esi+0x43]
6401a6e2:	mov    cl,al
6401a6e4:	inc    cl
6401a6e6:	test   al,al
6401a6e8:	mov    eax,DWORD PTR [ebp+0x8]
6401a6eb:	mov    BYTE PTR [esi+0x43],cl
6401a6ee:	jne    0x6401a6f3
6401a6f0:	or     DWORD PTR [eax+0x4],edi
6401a6f3:	mov    edx,0x80000000
6401a6f8:	mov    ecx,ebx
6401a6fa:	shr    edx,cl
6401a6fc:	not    edx
6401a6fe:	and    DWORD PTR [eax+0x8],edx
6401a701:	mov    eax,ebx
6401a703:	pop    edi
6401a704:	pop    esi
6401a705:	pop    ebx
6401a706:	leave  
6401a707:	ret    
6401a708:	push   ebp
6401a709:	mov    ebp,esp
6401a70b:	sub    esp,0xc
6401a70e:	mov    ecx,DWORD PTR [ebp+0x8]
6401a711:	mov    eax,DWORD PTR [ecx+0x10]
6401a714:	push   ebx
6401a715:	push   esi
6401a716:	mov    esi,DWORD PTR [ebp+0x10]
6401a719:	push   edi
6401a71a:	mov    edi,DWORD PTR [ebp+0xc]
6401a71d:	mov    edx,edi
6401a71f:	sub    edx,DWORD PTR [ecx+0xc]
6401a722:	add    esi,0x17
6401a725:	shr    edx,0xf
6401a728:	mov    ecx,edx
6401a72a:	imul   ecx,ecx,0x204
6401a730:	lea    ecx,[ecx+eax*1+0x144]
6401a737:	mov    DWORD PTR [ebp-0xc],ecx
6401a73a:	mov    ecx,DWORD PTR [edi-0x4]
6401a73d:	and    esi,0xfffffff0
6401a740:	dec    ecx
6401a741:	cmp    esi,ecx
6401a743:	lea    edi,[ecx+edi*1-0x4]
6401a747:	mov    ebx,DWORD PTR [edi]
6401a749:	mov    DWORD PTR [ebp+0x10],ecx
6401a74c:	mov    DWORD PTR [ebp-0x4],ebx
6401a74f:	jle    0x6401a8aa
6401a755:	test   bl,0x1
6401a758:	jne    0x6401a8a3
6401a75e:	add    ebx,ecx
6401a760:	cmp    esi,ebx
6401a762:	jg     0x6401a8a3
6401a768:	mov    ecx,DWORD PTR [ebp-0x4]
6401a76b:	sar    ecx,0x4
6401a76e:	dec    ecx
6401a76f:	cmp    ecx,0x3f
6401a772:	mov    DWORD PTR [ebp-0x8],ecx
6401a775:	jbe    0x6401a77d
6401a777:	push   0x3f
6401a779:	pop    ecx
6401a77a:	mov    DWORD PTR [ebp-0x8],ecx
6401a77d:	mov    ebx,DWORD PTR [edi+0x4]
6401a780:	cmp    ebx,DWORD PTR [edi+0x8]
6401a783:	jne    0x6401a7c8
6401a785:	cmp    ecx,0x20
6401a788:	mov    ebx,0x80000000
6401a78d:	jae    0x6401a7a9
6401a78f:	shr    ebx,cl
6401a791:	mov    ecx,DWORD PTR [ebp-0x8]
6401a794:	lea    ecx,[ecx+eax*1+0x4]
6401a798:	not    ebx
6401a79a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401a79e:	dec    BYTE PTR [ecx]
6401a7a0:	jne    0x6401a7c8
6401a7a2:	mov    ecx,DWORD PTR [ebp+0x8]
6401a7a5:	and    DWORD PTR [ecx],ebx
6401a7a7:	jmp    0x6401a7c8
6401a7a9:	add    ecx,0xffffffe0
6401a7ac:	shr    ebx,cl
6401a7ae:	mov    ecx,DWORD PTR [ebp-0x8]
6401a7b1:	lea    ecx,[ecx+eax*1+0x4]
6401a7b5:	not    ebx
6401a7b7:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401a7be:	dec    BYTE PTR [ecx]
6401a7c0:	jne    0x6401a7c8
6401a7c2:	mov    ecx,DWORD PTR [ebp+0x8]
6401a7c5:	and    DWORD PTR [ecx+0x4],ebx
6401a7c8:	mov    ecx,DWORD PTR [edi+0x8]
6401a7cb:	mov    ebx,DWORD PTR [edi+0x4]
6401a7ce:	mov    DWORD PTR [ecx+0x4],ebx
6401a7d1:	mov    ecx,DWORD PTR [edi+0x4]
6401a7d4:	mov    edi,DWORD PTR [edi+0x8]
6401a7d7:	mov    DWORD PTR [ecx+0x8],edi
6401a7da:	mov    ecx,DWORD PTR [ebp+0x10]
6401a7dd:	sub    ecx,esi
6401a7df:	add    DWORD PTR [ebp-0x4],ecx
6401a7e2:	cmp    DWORD PTR [ebp-0x4],0x0
6401a7e6:	jle    0x6401a891
6401a7ec:	mov    edi,DWORD PTR [ebp-0x4]
6401a7ef:	mov    ecx,DWORD PTR [ebp+0xc]
6401a7f2:	sar    edi,0x4
6401a7f5:	dec    edi
6401a7f6:	cmp    edi,0x3f
6401a7f9:	lea    ecx,[ecx+esi*1-0x4]
6401a7fd:	jbe    0x6401a802
6401a7ff:	push   0x3f
6401a801:	pop    edi
6401a802:	mov    ebx,DWORD PTR [ebp-0xc]
6401a805:	lea    ebx,[ebx+edi*8]
6401a808:	mov    DWORD PTR [ebp+0x10],ebx
6401a80b:	mov    ebx,DWORD PTR [ebx+0x4]
6401a80e:	mov    DWORD PTR [ecx+0x4],ebx
6401a811:	mov    ebx,DWORD PTR [ebp+0x10]
6401a814:	mov    DWORD PTR [ecx+0x8],ebx
6401a817:	mov    DWORD PTR [ebx+0x4],ecx
6401a81a:	mov    ebx,DWORD PTR [ecx+0x4]
6401a81d:	mov    DWORD PTR [ebx+0x8],ecx
6401a820:	mov    ebx,DWORD PTR [ecx+0x4]
6401a823:	cmp    ebx,DWORD PTR [ecx+0x8]
6401a826:	jne    0x6401a87f
6401a828:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401a82c:	mov    BYTE PTR [ebp+0x13],cl
6401a82f:	inc    cl
6401a831:	cmp    edi,0x20
6401a834:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401a838:	jae    0x6401a856
6401a83a:	cmp    BYTE PTR [ebp+0x13],0x0
6401a83e:	jne    0x6401a84e
6401a840:	mov    ecx,edi
6401a842:	mov    ebx,0x80000000
6401a847:	shr    ebx,cl
6401a849:	mov    ecx,DWORD PTR [ebp+0x8]
6401a84c:	or     DWORD PTR [ecx],ebx
6401a84e:	lea    eax,[eax+edx*4+0x44]
6401a852:	mov    ecx,edi
6401a854:	jmp    0x6401a876
6401a856:	cmp    BYTE PTR [ebp+0x13],0x0
6401a85a:	jne    0x6401a86c
6401a85c:	lea    ecx,[edi-0x20]
6401a85f:	mov    ebx,0x80000000
6401a864:	shr    ebx,cl
6401a866:	mov    ecx,DWORD PTR [ebp+0x8]
6401a869:	or     DWORD PTR [ecx+0x4],ebx
6401a86c:	lea    eax,[eax+edx*4+0xc4]
6401a873:	lea    ecx,[edi-0x20]
6401a876:	mov    edx,0x80000000
6401a87b:	shr    edx,cl
6401a87d:	or     DWORD PTR [eax],edx
6401a87f:	mov    edx,DWORD PTR [ebp+0xc]
6401a882:	mov    ecx,DWORD PTR [ebp-0x4]
6401a885:	lea    eax,[edx+esi*1-0x4]
6401a889:	mov    DWORD PTR [eax],ecx
6401a88b:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401a88f:	jmp    0x6401a894
6401a891:	mov    edx,DWORD PTR [ebp+0xc]
6401a894:	lea    eax,[esi+0x1]
6401a897:	mov    DWORD PTR [edx-0x4],eax
6401a89a:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401a89e:	jmp    0x6401a9df
6401a8a3:	xor    eax,eax
6401a8a5:	jmp    0x6401a9e2
6401a8aa:	jge    0x6401a9df
6401a8b0:	mov    ebx,DWORD PTR [ebp+0xc]
6401a8b3:	sub    DWORD PTR [ebp+0x10],esi
6401a8b6:	lea    ecx,[esi+0x1]
6401a8b9:	mov    DWORD PTR [ebx-0x4],ecx
6401a8bc:	lea    ebx,[ebx+esi*1-0x4]
6401a8c0:	mov    esi,DWORD PTR [ebp+0x10]
6401a8c3:	sar    esi,0x4
6401a8c6:	dec    esi
6401a8c7:	cmp    esi,0x3f
6401a8ca:	mov    DWORD PTR [ebp+0xc],ebx
6401a8cd:	mov    DWORD PTR [ebx-0x4],ecx
6401a8d0:	jbe    0x6401a8d5
6401a8d2:	push   0x3f
6401a8d4:	pop    esi
6401a8d5:	test   BYTE PTR [ebp-0x4],0x1
6401a8d9:	jne    0x6401a95f
6401a8df:	mov    esi,DWORD PTR [ebp-0x4]
6401a8e2:	sar    esi,0x4
6401a8e5:	dec    esi
6401a8e6:	cmp    esi,0x3f
6401a8e9:	jbe    0x6401a8ee
6401a8eb:	push   0x3f
6401a8ed:	pop    esi
6401a8ee:	mov    ecx,DWORD PTR [edi+0x4]
6401a8f1:	cmp    ecx,DWORD PTR [edi+0x8]
6401a8f4:	jne    0x6401a938
6401a8f6:	cmp    esi,0x20
6401a8f9:	mov    ebx,0x80000000
6401a8fe:	jae    0x6401a919
6401a900:	mov    ecx,esi
6401a902:	shr    ebx,cl
6401a904:	lea    esi,[esi+eax*1+0x4]
6401a908:	not    ebx
6401a90a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401a90e:	dec    BYTE PTR [esi]
6401a910:	jne    0x6401a935
6401a912:	mov    ecx,DWORD PTR [ebp+0x8]
6401a915:	and    DWORD PTR [ecx],ebx
6401a917:	jmp    0x6401a935
6401a919:	lea    ecx,[esi-0x20]
6401a91c:	shr    ebx,cl
6401a91e:	lea    ecx,[esi+eax*1+0x4]
6401a922:	not    ebx
6401a924:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401a92b:	dec    BYTE PTR [ecx]
6401a92d:	jne    0x6401a935
6401a92f:	mov    ecx,DWORD PTR [ebp+0x8]
6401a932:	and    DWORD PTR [ecx+0x4],ebx
6401a935:	mov    ebx,DWORD PTR [ebp+0xc]
6401a938:	mov    ecx,DWORD PTR [edi+0x8]
6401a93b:	mov    esi,DWORD PTR [edi+0x4]
6401a93e:	mov    DWORD PTR [ecx+0x4],esi
6401a941:	mov    esi,DWORD PTR [edi+0x8]
6401a944:	mov    ecx,DWORD PTR [edi+0x4]
6401a947:	mov    DWORD PTR [ecx+0x8],esi
6401a94a:	mov    esi,DWORD PTR [ebp+0x10]
6401a94d:	add    esi,DWORD PTR [ebp-0x4]
6401a950:	mov    DWORD PTR [ebp+0x10],esi
6401a953:	sar    esi,0x4
6401a956:	dec    esi
6401a957:	cmp    esi,0x3f
6401a95a:	jbe    0x6401a95f
6401a95c:	push   0x3f
6401a95e:	pop    esi
6401a95f:	mov    ecx,DWORD PTR [ebp-0xc]
6401a962:	lea    ecx,[ecx+esi*8]
6401a965:	mov    edi,DWORD PTR [ecx+0x4]
6401a968:	mov    DWORD PTR [ebx+0x8],ecx
6401a96b:	mov    DWORD PTR [ebx+0x4],edi
6401a96e:	mov    DWORD PTR [ecx+0x4],ebx
6401a971:	mov    ecx,DWORD PTR [ebx+0x4]
6401a974:	mov    DWORD PTR [ecx+0x8],ebx
6401a977:	mov    ecx,DWORD PTR [ebx+0x4]
6401a97a:	cmp    ecx,DWORD PTR [ebx+0x8]
6401a97d:	jne    0x6401a9d6
6401a97f:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401a983:	mov    BYTE PTR [ebp+0xf],cl
6401a986:	inc    cl
6401a988:	cmp    esi,0x20
6401a98b:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401a98f:	jae    0x6401a9ad
6401a991:	cmp    BYTE PTR [ebp+0xf],0x0
6401a995:	jne    0x6401a9a5
6401a997:	mov    ecx,esi
6401a999:	mov    edi,0x80000000
6401a99e:	shr    edi,cl
6401a9a0:	mov    ecx,DWORD PTR [ebp+0x8]
6401a9a3:	or     DWORD PTR [ecx],edi
6401a9a5:	lea    eax,[eax+edx*4+0x44]
6401a9a9:	mov    ecx,esi
6401a9ab:	jmp    0x6401a9cd
6401a9ad:	cmp    BYTE PTR [ebp+0xf],0x0
6401a9b1:	jne    0x6401a9c3
6401a9b3:	lea    ecx,[esi-0x20]
6401a9b6:	mov    edi,0x80000000
6401a9bb:	shr    edi,cl
6401a9bd:	mov    ecx,DWORD PTR [ebp+0x8]
6401a9c0:	or     DWORD PTR [ecx+0x4],edi
6401a9c3:	lea    eax,[eax+edx*4+0xc4]
6401a9ca:	lea    ecx,[esi-0x20]
6401a9cd:	mov    edx,0x80000000
6401a9d2:	shr    edx,cl
6401a9d4:	or     DWORD PTR [eax],edx
6401a9d6:	mov    eax,DWORD PTR [ebp+0x10]
6401a9d9:	mov    DWORD PTR [ebx],eax
6401a9db:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401a9df:	xor    eax,eax
6401a9e1:	inc    eax
6401a9e2:	pop    edi
6401a9e3:	pop    esi
6401a9e4:	pop    ebx
6401a9e5:	leave  
6401a9e6:	ret    
6401a9e7:	push   ebp
6401a9e8:	mov    ebp,esp
6401a9ea:	sub    esp,0x14
6401a9ed:	mov    eax,ds:0x640324e4
6401a9f2:	mov    ecx,DWORD PTR [ebp+0x8]
6401a9f5:	imul   eax,eax,0x14
6401a9f8:	add    eax,DWORD PTR ds:0x640324e8
6401a9fe:	add    ecx,0x17
6401aa01:	and    ecx,0xfffffff0
6401aa04:	mov    DWORD PTR [ebp-0x10],ecx
6401aa07:	sar    ecx,0x4
6401aa0a:	push   ebx
6401aa0b:	dec    ecx
6401aa0c:	cmp    ecx,0x20
6401aa0f:	push   esi
6401aa10:	push   edi
6401aa11:	jge    0x6401aa1e
6401aa13:	or     esi,0xffffffff
6401aa16:	shr    esi,cl
6401aa18:	or     DWORD PTR [ebp-0x8],0xffffffff
6401aa1c:	jmp    0x6401aa2b
6401aa1e:	add    ecx,0xffffffe0
6401aa21:	or     edx,0xffffffff
6401aa24:	xor    esi,esi
6401aa26:	shr    edx,cl
6401aa28:	mov    DWORD PTR [ebp-0x8],edx
6401aa2b:	mov    ecx,DWORD PTR ds:0x640324f0
6401aa31:	mov    ebx,ecx
6401aa33:	jmp    0x6401aa46
6401aa35:	mov    edx,DWORD PTR [ebx+0x4]
6401aa38:	mov    edi,DWORD PTR [ebx]
6401aa3a:	and    edx,DWORD PTR [ebp-0x8]
6401aa3d:	and    edi,esi
6401aa3f:	or     edx,edi
6401aa41:	jne    0x6401aa4d
6401aa43:	add    ebx,0x14
6401aa46:	cmp    ebx,eax
6401aa48:	mov    DWORD PTR [ebp+0x8],ebx
6401aa4b:	jb     0x6401aa35
6401aa4d:	cmp    ebx,eax
6401aa4f:	jne    0x6401aad0
6401aa51:	mov    ebx,DWORD PTR ds:0x640324e8
6401aa57:	jmp    0x6401aa6a
6401aa59:	mov    edx,DWORD PTR [ebx+0x4]
6401aa5c:	mov    edi,DWORD PTR [ebx]
6401aa5e:	and    edx,DWORD PTR [ebp-0x8]
6401aa61:	and    edi,esi
6401aa63:	or     edx,edi
6401aa65:	jne    0x6401aa71
6401aa67:	add    ebx,0x14
6401aa6a:	cmp    ebx,ecx
6401aa6c:	mov    DWORD PTR [ebp+0x8],ebx
6401aa6f:	jb     0x6401aa59
6401aa71:	cmp    ebx,ecx
6401aa73:	jne    0x6401aad0
6401aa75:	jmp    0x6401aa83
6401aa77:	cmp    DWORD PTR [ebx+0x8],0x0
6401aa7b:	jne    0x6401aa87
6401aa7d:	add    ebx,0x14
6401aa80:	mov    DWORD PTR [ebp+0x8],ebx
6401aa83:	cmp    ebx,eax
6401aa85:	jb     0x6401aa77
6401aa87:	cmp    ebx,eax
6401aa89:	jne    0x6401aabc
6401aa8b:	mov    ebx,DWORD PTR ds:0x640324e8
6401aa91:	jmp    0x6401aa9c
6401aa93:	cmp    DWORD PTR [ebx+0x8],0x0
6401aa97:	jne    0x6401aaa3
6401aa99:	add    ebx,0x14
6401aa9c:	cmp    ebx,ecx
6401aa9e:	mov    DWORD PTR [ebp+0x8],ebx
6401aaa1:	jb     0x6401aa93
6401aaa3:	cmp    ebx,ecx
6401aaa5:	jne    0x6401aabc
6401aaa7:	call   0x6401a552
6401aaac:	mov    ebx,eax
6401aaae:	test   ebx,ebx
6401aab0:	mov    DWORD PTR [ebp+0x8],ebx
6401aab3:	jne    0x6401aabc
6401aab5:	xor    eax,eax
6401aab7:	jmp    0x6401acc5
6401aabc:	push   ebx
6401aabd:	call   0x6401a602
6401aac2:	pop    ecx
6401aac3:	mov    ecx,DWORD PTR [ebx+0x10]
6401aac6:	mov    DWORD PTR [ecx],eax
6401aac8:	mov    eax,DWORD PTR [ebx+0x10]
6401aacb:	cmp    DWORD PTR [eax],0xffffffff
6401aace:	je     0x6401aab5
6401aad0:	mov    DWORD PTR ds:0x640324f0,ebx
6401aad6:	mov    eax,DWORD PTR [ebx+0x10]
6401aad9:	mov    edx,DWORD PTR [eax]
6401aadb:	cmp    edx,0xffffffff
6401aade:	mov    DWORD PTR [ebp-0x4],edx
6401aae1:	je     0x6401aaf7
6401aae3:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401aaea:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401aaee:	and    ecx,DWORD PTR [ebp-0x8]
6401aaf1:	and    edi,esi
6401aaf3:	or     ecx,edi
6401aaf5:	jne    0x6401ab20
6401aaf7:	and    DWORD PTR [ebp-0x4],0x0
6401aafb:	mov    edx,DWORD PTR [eax+0xc4]
6401ab01:	lea    ecx,[eax+0x44]
6401ab04:	mov    edi,DWORD PTR [ecx]
6401ab06:	and    edx,DWORD PTR [ebp-0x8]
6401ab09:	and    edi,esi
6401ab0b:	or     edx,edi
6401ab0d:	jne    0x6401ab1d
6401ab0f:	inc    DWORD PTR [ebp-0x4]
6401ab12:	mov    edx,DWORD PTR [ecx+0x84]
6401ab18:	add    ecx,0x4
6401ab1b:	jmp    0x6401ab04
6401ab1d:	mov    edx,DWORD PTR [ebp-0x4]
6401ab20:	mov    ecx,edx
6401ab22:	imul   ecx,ecx,0x204
6401ab28:	lea    ecx,[ecx+eax*1+0x144]
6401ab2f:	mov    DWORD PTR [ebp-0xc],ecx
6401ab32:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401ab36:	xor    edi,edi
6401ab38:	and    ecx,esi
6401ab3a:	jne    0x6401ab4e
6401ab3c:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401ab43:	and    ecx,DWORD PTR [ebp-0x8]
6401ab46:	push   0x20
6401ab48:	pop    edi
6401ab49:	jmp    0x6401ab4e
6401ab4b:	add    ecx,ecx
6401ab4d:	inc    edi
6401ab4e:	test   ecx,ecx
6401ab50:	jge    0x6401ab4b
6401ab52:	mov    ecx,DWORD PTR [ebp-0xc]
6401ab55:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401ab59:	mov    ecx,DWORD PTR [edx]
6401ab5b:	sub    ecx,DWORD PTR [ebp-0x10]
6401ab5e:	mov    esi,ecx
6401ab60:	sar    esi,0x4
6401ab63:	dec    esi
6401ab64:	cmp    esi,0x3f
6401ab67:	mov    DWORD PTR [ebp-0x8],ecx
6401ab6a:	jle    0x6401ab6f
6401ab6c:	push   0x3f
6401ab6e:	pop    esi
6401ab6f:	cmp    esi,edi
6401ab71:	je     0x6401ac78
6401ab77:	mov    ecx,DWORD PTR [edx+0x4]
6401ab7a:	cmp    ecx,DWORD PTR [edx+0x8]
6401ab7d:	jne    0x6401abdb
6401ab7f:	cmp    edi,0x20
6401ab82:	mov    ebx,0x80000000
6401ab87:	jge    0x6401abaf
6401ab89:	mov    ecx,edi
6401ab8b:	shr    ebx,cl
6401ab8d:	mov    ecx,DWORD PTR [ebp-0x4]
6401ab90:	lea    edi,[eax+edi*1+0x4]
6401ab94:	not    ebx
6401ab96:	mov    DWORD PTR [ebp-0x14],ebx
6401ab99:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401ab9d:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401aba1:	dec    BYTE PTR [edi]
6401aba3:	jne    0x6401abd8
6401aba5:	mov    ecx,DWORD PTR [ebp-0x14]
6401aba8:	mov    ebx,DWORD PTR [ebp+0x8]
6401abab:	and    DWORD PTR [ebx],ecx
6401abad:	jmp    0x6401abdb
6401abaf:	lea    ecx,[edi-0x20]
6401abb2:	shr    ebx,cl
6401abb4:	mov    ecx,DWORD PTR [ebp-0x4]
6401abb7:	lea    ecx,[eax+ecx*4+0xc4]
6401abbe:	lea    edi,[eax+edi*1+0x4]
6401abc2:	not    ebx
6401abc4:	and    DWORD PTR [ecx],ebx
6401abc6:	dec    BYTE PTR [edi]
6401abc8:	mov    DWORD PTR [ebp-0x14],ebx
6401abcb:	jne    0x6401abd8
6401abcd:	mov    ebx,DWORD PTR [ebp+0x8]
6401abd0:	mov    ecx,DWORD PTR [ebp-0x14]
6401abd3:	and    DWORD PTR [ebx+0x4],ecx
6401abd6:	jmp    0x6401abdb
6401abd8:	mov    ebx,DWORD PTR [ebp+0x8]
6401abdb:	cmp    DWORD PTR [ebp-0x8],0x0
6401abdf:	mov    ecx,DWORD PTR [edx+0x8]
6401abe2:	mov    edi,DWORD PTR [edx+0x4]
6401abe5:	mov    DWORD PTR [ecx+0x4],edi
6401abe8:	mov    ecx,DWORD PTR [edx+0x4]
6401abeb:	mov    edi,DWORD PTR [edx+0x8]
6401abee:	mov    DWORD PTR [ecx+0x8],edi
6401abf1:	je     0x6401ac84
6401abf7:	mov    ecx,DWORD PTR [ebp-0xc]
6401abfa:	lea    ecx,[ecx+esi*8]
6401abfd:	mov    edi,DWORD PTR [ecx+0x4]
6401ac00:	mov    DWORD PTR [edx+0x8],ecx
6401ac03:	mov    DWORD PTR [edx+0x4],edi
6401ac06:	mov    DWORD PTR [ecx+0x4],edx
6401ac09:	mov    ecx,DWORD PTR [edx+0x4]
6401ac0c:	mov    DWORD PTR [ecx+0x8],edx
6401ac0f:	mov    ecx,DWORD PTR [edx+0x4]
6401ac12:	cmp    ecx,DWORD PTR [edx+0x8]
6401ac15:	jne    0x6401ac75
6401ac17:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401ac1b:	mov    BYTE PTR [ebp+0xb],cl
6401ac1e:	inc    cl
6401ac20:	cmp    esi,0x20
6401ac23:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401ac27:	jge    0x6401ac4c
6401ac29:	cmp    BYTE PTR [ebp+0xb],0x0
6401ac2d:	jne    0x6401ac3a
6401ac2f:	mov    edi,0x80000000
6401ac34:	mov    ecx,esi
6401ac36:	shr    edi,cl
6401ac38:	or     DWORD PTR [ebx],edi
6401ac3a:	mov    ecx,esi
6401ac3c:	mov    edi,0x80000000
6401ac41:	shr    edi,cl
6401ac43:	mov    ecx,DWORD PTR [ebp-0x4]
6401ac46:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401ac4a:	jmp    0x6401ac75
6401ac4c:	cmp    BYTE PTR [ebp+0xb],0x0
6401ac50:	jne    0x6401ac5f
6401ac52:	lea    ecx,[esi-0x20]
6401ac55:	mov    edi,0x80000000
6401ac5a:	shr    edi,cl
6401ac5c:	or     DWORD PTR [ebx+0x4],edi
6401ac5f:	mov    ecx,DWORD PTR [ebp-0x4]
6401ac62:	lea    edi,[eax+ecx*4+0xc4]
6401ac69:	lea    ecx,[esi-0x20]
6401ac6c:	mov    esi,0x80000000
6401ac71:	shr    esi,cl
6401ac73:	or     DWORD PTR [edi],esi
6401ac75:	mov    ecx,DWORD PTR [ebp-0x8]
6401ac78:	test   ecx,ecx
6401ac7a:	je     0x6401ac87
6401ac7c:	mov    DWORD PTR [edx],ecx
6401ac7e:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401ac82:	jmp    0x6401ac87
6401ac84:	mov    ecx,DWORD PTR [ebp-0x8]
6401ac87:	mov    esi,DWORD PTR [ebp-0x10]
6401ac8a:	add    edx,ecx
6401ac8c:	lea    ecx,[esi+0x1]
6401ac8f:	mov    DWORD PTR [edx],ecx
6401ac91:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401ac95:	mov    esi,DWORD PTR [ebp-0xc]
6401ac98:	mov    ecx,DWORD PTR [esi]
6401ac9a:	test   ecx,ecx
6401ac9c:	lea    edi,[ecx+0x1]
6401ac9f:	mov    DWORD PTR [esi],edi
6401aca1:	jne    0x6401acbd
6401aca3:	cmp    ebx,DWORD PTR ds:0x6402ebc8
6401aca9:	jne    0x6401acbd
6401acab:	mov    ecx,DWORD PTR [ebp-0x4]
6401acae:	cmp    ecx,DWORD PTR ds:0x640324f8
6401acb4:	jne    0x6401acbd
6401acb6:	and    DWORD PTR ds:0x6402ebc8,0x0
6401acbd:	mov    ecx,DWORD PTR [ebp-0x4]
6401acc0:	mov    DWORD PTR [eax],ecx
6401acc2:	lea    eax,[edx+0x4]
6401acc5:	pop    edi
6401acc6:	pop    esi
6401acc7:	pop    ebx
6401acc8:	leave  
6401acc9:	ret    
6401acca:	push   ecx
6401accb:	push   ebx
6401accc:	mov    ebx,DWORD PTR [esp+0xc]
6401acd0:	push   esi
6401acd1:	push   edi
6401acd2:	xor    esi,esi
6401acd4:	xor    edi,edi
6401acd6:	cmp    ebx,DWORD PTR [edi*8+0x6402da80]
6401acdd:	je     0x6401ace5
6401acdf:	inc    edi
6401ace0:	cmp    edi,0x17
6401ace3:	jb     0x6401acd6
6401ace5:	cmp    edi,0x17
6401ace8:	jae    0x6401ae65
6401acee:	push   ebp
6401acef:	push   0x3
6401acf1:	call   0x6401dd49
6401acf6:	cmp    eax,0x1
6401acf9:	pop    ecx
6401acfa:	je     0x6401ae31
6401ad00:	push   0x3
6401ad02:	call   0x6401dd49
6401ad07:	test   eax,eax
6401ad09:	pop    ecx
6401ad0a:	jne    0x6401ad19
6401ad0c:	cmp    DWORD PTR ds:0x6402e580,0x1
6401ad13:	je     0x6401ae31
6401ad19:	cmp    ebx,0xfc
6401ad1f:	je     0x6401ae64
6401ad25:	push   0x64026468
6401ad2a:	mov    ebx,0x314
6401ad2f:	push   ebx
6401ad30:	mov    ebp,0x6402ebd0
6401ad35:	push   ebp
6401ad36:	call   0x64014548
6401ad3b:	add    esp,0xc
6401ad3e:	test   eax,eax
6401ad40:	je     0x6401ad4f
6401ad42:	push   esi
6401ad43:	push   esi
6401ad44:	push   esi
6401ad45:	push   esi
6401ad46:	push   esi
6401ad47:	call   0x640125c8
6401ad4c:	add    esp,0x14
6401ad4f:	push   0x104
6401ad54:	mov    esi,0x6402ebe9
6401ad59:	push   esi
6401ad5a:	push   0x0
6401ad5c:	mov    BYTE PTR ds:0x6402eced,0x0
6401ad63:	call   DWORD PTR ds:0x64025164
6401ad69:	test   eax,eax
6401ad6b:	jne    0x6401ad93
6401ad6d:	push   0x64026450
6401ad72:	push   0x2fb
6401ad77:	push   esi
6401ad78:	call   0x64014548
6401ad7d:	add    esp,0xc
6401ad80:	test   eax,eax
6401ad82:	je     0x6401ad93
6401ad84:	xor    eax,eax
6401ad86:	push   eax
6401ad87:	push   eax
6401ad88:	push   eax
6401ad89:	push   eax
6401ad8a:	push   eax
6401ad8b:	call   0x640125c8
6401ad90:	add    esp,0x14
6401ad93:	push   esi
6401ad94:	call   0x64014350
6401ad99:	inc    eax
6401ad9a:	cmp    eax,0x3c
6401ad9d:	pop    ecx
6401ad9e:	jbe    0x6401add8
6401ada0:	push   esi
6401ada1:	call   0x64014350
6401ada6:	sub    esi,0x3b
6401ada9:	add    eax,esi
6401adab:	push   0x3
6401adad:	mov    ecx,0x6402eee4
6401adb2:	push   0x6402644c
6401adb7:	sub    ecx,eax
6401adb9:	push   ecx
6401adba:	push   eax
6401adbb:	call   0x6401be26
6401adc0:	add    esp,0x14
6401adc3:	test   eax,eax
6401adc5:	je     0x6401add8
6401adc7:	xor    esi,esi
6401adc9:	push   esi
6401adca:	push   esi
6401adcb:	push   esi
6401adcc:	push   esi
6401adcd:	push   esi
6401adce:	call   0x640125c8
6401add3:	add    esp,0x14
6401add6:	jmp    0x6401adda
6401add8:	xor    esi,esi
6401adda:	push   0x64026448
6401addf:	push   ebx
6401ade0:	push   ebp
6401ade1:	call   0x6401bd6e
6401ade6:	add    esp,0xc
6401ade9:	test   eax,eax
6401adeb:	je     0x6401adfa
6401aded:	push   esi
6401adee:	push   esi
6401adef:	push   esi
6401adf0:	push   esi
6401adf1:	push   esi
6401adf2:	call   0x640125c8
6401adf7:	add    esp,0x14
6401adfa:	push   DWORD PTR [edi*8+0x6402da84]
6401ae01:	push   ebx
6401ae02:	push   ebp
6401ae03:	call   0x6401bd6e
6401ae08:	add    esp,0xc
6401ae0b:	test   eax,eax
6401ae0d:	je     0x6401ae1c
6401ae0f:	push   esi
6401ae10:	push   esi
6401ae11:	push   esi
6401ae12:	push   esi
6401ae13:	push   esi
6401ae14:	call   0x640125c8
6401ae19:	add    esp,0x14
6401ae1c:	push   0x12010
6401ae21:	push   0x64026420
6401ae26:	push   ebp
6401ae27:	call   0x6401db8c
6401ae2c:	add    esp,0xc
6401ae2f:	jmp    0x6401ae64
6401ae31:	push   0xfffffff4
6401ae33:	call   DWORD PTR ds:0x64025158
6401ae39:	mov    ebp,eax
6401ae3b:	cmp    ebp,esi
6401ae3d:	je     0x6401ae64
6401ae3f:	cmp    ebp,0xffffffff
6401ae42:	je     0x6401ae64
6401ae44:	push   0x0
6401ae46:	lea    eax,[esp+0x14]
6401ae4a:	push   eax
6401ae4b:	lea    esi,[edi*8+0x6402da84]
6401ae52:	push   DWORD PTR [esi]
6401ae54:	call   0x64014350
6401ae59:	pop    ecx
6401ae5a:	push   eax
6401ae5b:	push   DWORD PTR [esi]
6401ae5d:	push   ebp
6401ae5e:	call   DWORD PTR ds:0x64025088
6401ae64:	pop    ebp
6401ae65:	pop    edi
6401ae66:	pop    esi
6401ae67:	pop    ebx
6401ae68:	pop    ecx
6401ae69:	ret    
6401ae6a:	push   0x3
6401ae6c:	call   0x6401dd49
6401ae71:	cmp    eax,0x1
6401ae74:	pop    ecx
6401ae75:	je     0x6401ae8c
6401ae77:	push   0x3
6401ae79:	call   0x6401dd49
6401ae7e:	test   eax,eax
6401ae80:	pop    ecx
6401ae81:	jne    0x6401aea2
6401ae83:	cmp    DWORD PTR ds:0x6402e580,0x1
6401ae8a:	jne    0x6401aea2
6401ae8c:	push   0xfc
6401ae91:	call   0x6401acca
6401ae96:	push   0xff
6401ae9b:	call   0x6401acca
6401aea0:	pop    ecx
6401aea1:	pop    ecx
6401aea2:	ret    
6401aea3:	push   ebp
6401aea4:	mov    ebp,esp
6401aea6:	sub    esp,0x8
6401aea9:	mov    DWORD PTR [ebp-0x4],edi
6401aeac:	mov    DWORD PTR [ebp-0x8],esi
6401aeaf:	mov    esi,DWORD PTR [ebp+0xc]
6401aeb2:	mov    edi,DWORD PTR [ebp+0x8]
6401aeb5:	mov    ecx,DWORD PTR [ebp+0x10]
6401aeb8:	shr    ecx,0x7
6401aebb:	jmp    0x6401aec3
6401aebd:	lea    ebx,[ebx+0x0]
6401aec3:	movdqa xmm0,XMMWORD PTR [esi]
6401aec7:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401aecc:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401aed1:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401aed6:	movdqa XMMWORD PTR [edi],xmm0
6401aeda:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401aedf:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401aee4:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401aee9:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401aeee:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401aef3:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401aef8:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401aefd:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401af02:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401af07:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401af0c:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401af11:	lea    esi,[esi+0x80]
6401af17:	lea    edi,[edi+0x80]
6401af1d:	dec    ecx
6401af1e:	jne    0x6401aec3
6401af20:	mov    esi,DWORD PTR [ebp-0x8]
6401af23:	mov    edi,DWORD PTR [ebp-0x4]
6401af26:	mov    esp,ebp
6401af28:	pop    ebp
6401af29:	ret    
6401af2a:	push   ebp
6401af2b:	mov    ebp,esp
6401af2d:	sub    esp,0x1c
6401af30:	mov    DWORD PTR [ebp-0xc],edi
6401af33:	mov    DWORD PTR [ebp-0x8],esi
6401af36:	mov    DWORD PTR [ebp-0x4],ebx
6401af39:	mov    ebx,DWORD PTR [ebp+0xc]
6401af3c:	mov    eax,ebx
6401af3e:	cdq    
6401af3f:	mov    ecx,eax
6401af41:	mov    eax,DWORD PTR [ebp+0x8]
6401af44:	xor    ecx,edx
6401af46:	sub    ecx,edx
6401af48:	and    ecx,0xf
6401af4b:	xor    ecx,edx
6401af4d:	sub    ecx,edx
6401af4f:	cdq    
6401af50:	mov    edi,eax
6401af52:	xor    edi,edx
6401af54:	sub    edi,edx
6401af56:	and    edi,0xf
6401af59:	xor    edi,edx
6401af5b:	sub    edi,edx
6401af5d:	mov    edx,ecx
6401af5f:	or     edx,edi
6401af61:	jne    0x6401afad
6401af63:	mov    esi,DWORD PTR [ebp+0x10]
6401af66:	mov    ecx,esi
6401af68:	and    ecx,0x7f
6401af6b:	mov    DWORD PTR [ebp-0x18],ecx
6401af6e:	cmp    esi,ecx
6401af70:	je     0x6401af85
6401af72:	sub    esi,ecx
6401af74:	push   esi
6401af75:	push   ebx
6401af76:	push   eax
6401af77:	call   0x6401aea3
6401af7c:	add    esp,0xc
6401af7f:	mov    eax,DWORD PTR [ebp+0x8]
6401af82:	mov    ecx,DWORD PTR [ebp-0x18]
6401af85:	test   ecx,ecx
6401af87:	je     0x6401b000
6401af89:	mov    ebx,DWORD PTR [ebp+0x10]
6401af8c:	mov    edx,DWORD PTR [ebp+0xc]
6401af8f:	add    edx,ebx
6401af91:	sub    edx,ecx
6401af93:	mov    DWORD PTR [ebp-0x14],edx
6401af96:	add    ebx,eax
6401af98:	sub    ebx,ecx
6401af9a:	mov    DWORD PTR [ebp-0x10],ebx
6401af9d:	mov    esi,DWORD PTR [ebp-0x14]
6401afa0:	mov    edi,DWORD PTR [ebp-0x10]
6401afa3:	mov    ecx,DWORD PTR [ebp-0x18]
6401afa6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401afa8:	mov    eax,DWORD PTR [ebp+0x8]
6401afab:	jmp    0x6401b000
6401afad:	cmp    ecx,edi
6401afaf:	jne    0x6401afe6
6401afb1:	neg    ecx
6401afb3:	add    ecx,0x10
6401afb6:	mov    DWORD PTR [ebp-0x1c],ecx
6401afb9:	mov    esi,DWORD PTR [ebp+0xc]
6401afbc:	mov    edi,DWORD PTR [ebp+0x8]
6401afbf:	mov    ecx,DWORD PTR [ebp-0x1c]
6401afc2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401afc4:	mov    ecx,DWORD PTR [ebp+0x8]
6401afc7:	add    ecx,DWORD PTR [ebp-0x1c]
6401afca:	mov    edx,DWORD PTR [ebp+0xc]
6401afcd:	add    edx,DWORD PTR [ebp-0x1c]
6401afd0:	mov    eax,DWORD PTR [ebp+0x10]
6401afd3:	sub    eax,DWORD PTR [ebp-0x1c]
6401afd6:	push   eax
6401afd7:	push   edx
6401afd8:	push   ecx
6401afd9:	call   0x6401af2a
6401afde:	add    esp,0xc
6401afe1:	mov    eax,DWORD PTR [ebp+0x8]
6401afe4:	jmp    0x6401b000
6401afe6:	mov    esi,DWORD PTR [ebp+0xc]
6401afe9:	mov    edi,DWORD PTR [ebp+0x8]
6401afec:	mov    ecx,DWORD PTR [ebp+0x10]
6401afef:	mov    edx,ecx
6401aff1:	shr    ecx,0x2
6401aff4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401aff6:	mov    ecx,edx
6401aff8:	and    ecx,0x3
6401affb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401affd:	mov    eax,DWORD PTR [ebp+0x8]
6401b000:	mov    ebx,DWORD PTR [ebp-0x4]
6401b003:	mov    esi,DWORD PTR [ebp-0x8]
6401b006:	mov    edi,DWORD PTR [ebp-0xc]
6401b009:	mov    esp,ebp
6401b00b:	pop    ebp
6401b00c:	ret    
6401b00d:	int3   
6401b00e:	int3   
6401b00f:	int3   
6401b010:	push   ebx
6401b011:	push   esi
6401b012:	push   edi
6401b013:	mov    edx,DWORD PTR [esp+0x10]
6401b017:	mov    eax,DWORD PTR [esp+0x14]
6401b01b:	mov    ecx,DWORD PTR [esp+0x18]
6401b01f:	push   ebp
6401b020:	push   edx
6401b021:	push   eax
6401b022:	push   ecx
6401b023:	push   ecx
6401b024:	push   0x6401b0a0
6401b029:	push   DWORD PTR fs:0x0
6401b030:	mov    eax,ds:0x6402d09c
6401b035:	xor    eax,esp
6401b037:	mov    DWORD PTR [esp+0x8],eax
6401b03b:	mov    DWORD PTR fs:0x0,esp
6401b042:	mov    eax,DWORD PTR [esp+0x30]
6401b046:	mov    ebx,DWORD PTR [eax+0x8]
6401b049:	mov    ecx,DWORD PTR [esp+0x2c]
6401b04d:	xor    ebx,DWORD PTR [ecx]
6401b04f:	mov    esi,DWORD PTR [eax+0xc]
6401b052:	cmp    esi,0xfffffffe
6401b055:	je     0x6401b092
6401b057:	mov    edx,DWORD PTR [esp+0x34]
6401b05b:	cmp    edx,0xfffffffe
6401b05e:	je     0x6401b064
6401b060:	cmp    esi,edx
6401b062:	jbe    0x6401b092
6401b064:	lea    esi,[esi+esi*2]
6401b067:	lea    ebx,[ebx+esi*4+0x10]
6401b06b:	mov    ecx,DWORD PTR [ebx]
6401b06d:	mov    DWORD PTR [eax+0xc],ecx
6401b070:	cmp    DWORD PTR [ebx+0x4],0x0
6401b074:	jne    0x6401b042
6401b076:	push   0x101
6401b07b:	mov    eax,DWORD PTR [ebx+0x8]
6401b07e:	call   0x6401b4c1
6401b083:	mov    ecx,0x1
6401b088:	mov    eax,DWORD PTR [ebx+0x8]
6401b08b:	call   0x6401b4e0
6401b090:	jmp    0x6401b042
6401b092:	pop    DWORD PTR fs:0x0
6401b099:	add    esp,0x18
6401b09c:	pop    edi
6401b09d:	pop    esi
6401b09e:	pop    ebx
6401b09f:	ret    
6401b0a0:	mov    ecx,DWORD PTR [esp+0x4]
6401b0a4:	test   DWORD PTR [ecx+0x4],0x6
6401b0ab:	mov    eax,0x1
6401b0b0:	je     0x6401b0e5
6401b0b2:	mov    eax,DWORD PTR [esp+0x8]
6401b0b6:	mov    ecx,DWORD PTR [eax+0x8]
6401b0b9:	xor    ecx,eax
6401b0bb:	call   0x64012b8c
6401b0c0:	push   ebp
6401b0c1:	mov    ebp,DWORD PTR [eax+0x18]
6401b0c4:	push   DWORD PTR [eax+0xc]
6401b0c7:	push   DWORD PTR [eax+0x10]
6401b0ca:	push   DWORD PTR [eax+0x14]
6401b0cd:	call   0x6401b010
6401b0d2:	add    esp,0xc
6401b0d5:	pop    ebp
6401b0d6:	mov    eax,DWORD PTR [esp+0x8]
6401b0da:	mov    edx,DWORD PTR [esp+0x10]
6401b0de:	mov    DWORD PTR [edx],eax
6401b0e0:	mov    eax,0x3
6401b0e5:	ret    
6401b0e6:	push   ebp
6401b0e7:	mov    ecx,DWORD PTR [esp+0x8]
6401b0eb:	mov    ebp,DWORD PTR [ecx]
6401b0ed:	push   DWORD PTR [ecx+0x1c]
6401b0f0:	push   DWORD PTR [ecx+0x18]
6401b0f3:	push   DWORD PTR [ecx+0x28]
6401b0f6:	call   0x6401b010
6401b0fb:	add    esp,0xc
6401b0fe:	pop    ebp
6401b0ff:	ret    0x4
6401b102:	push   ebp
6401b103:	push   esi
6401b104:	push   edi
6401b105:	push   ebx
6401b106:	mov    ebp,edx
6401b108:	xor    eax,eax
6401b10a:	xor    ebx,ebx
6401b10c:	xor    edx,edx
6401b10e:	xor    esi,esi
6401b110:	xor    edi,edi
6401b112:	call   ecx
6401b114:	pop    ebx
6401b115:	pop    edi
6401b116:	pop    esi
6401b117:	pop    ebp
6401b118:	ret    
6401b119:	mov    ebp,edx
6401b11b:	mov    esi,ecx
6401b11d:	mov    eax,ecx
6401b11f:	push   0x1
6401b121:	call   0x6401b4c1
6401b126:	xor    eax,eax
6401b128:	xor    ebx,ebx
6401b12a:	xor    ecx,ecx
6401b12c:	xor    edx,edx
6401b12e:	xor    edi,edi
6401b130:	jmp    esi
6401b132:	push   ebp
6401b133:	mov    ebp,esp
6401b135:	push   ebx
6401b136:	push   esi
6401b137:	push   edi
6401b138:	push   0x0
6401b13a:	push   0x0
6401b13c:	push   0x6401b147
6401b141:	push   ecx
6401b142:	call   0x6401edec
6401b147:	pop    edi
6401b148:	pop    esi
6401b149:	pop    ebx
6401b14a:	pop    ebp
6401b14b:	ret    
6401b14c:	push   ebp
6401b14d:	mov    ebp,DWORD PTR [esp+0x8]
6401b151:	push   edx
6401b152:	push   ecx
6401b153:	push   DWORD PTR [esp+0x14]
6401b157:	call   0x6401b010
6401b15c:	add    esp,0xc
6401b15f:	pop    ebp
6401b160:	ret    0x8
6401b163:	int3   
6401b164:	int3   
6401b165:	int3   
6401b166:	int3   
6401b167:	int3   
6401b168:	int3   
6401b169:	int3   
6401b16a:	int3   
6401b16b:	int3   
6401b16c:	int3   
6401b16d:	int3   
6401b16e:	int3   
6401b16f:	int3   
6401b170:	mov    ecx,DWORD PTR [esp+0x4]
6401b174:	cmp    WORD PTR [ecx],0x5a4d
6401b179:	je     0x6401b17e
6401b17b:	xor    eax,eax
6401b17d:	ret    
6401b17e:	mov    eax,DWORD PTR [ecx+0x3c]
6401b181:	add    eax,ecx
6401b183:	cmp    DWORD PTR [eax],0x4550
6401b189:	jne    0x6401b17b
6401b18b:	xor    ecx,ecx
6401b18d:	cmp    WORD PTR [eax+0x18],0x10b
6401b193:	sete   cl
6401b196:	mov    eax,ecx
6401b198:	ret    
6401b199:	int3   
6401b19a:	int3   
6401b19b:	int3   
6401b19c:	int3   
6401b19d:	int3   
6401b19e:	int3   
6401b19f:	int3   
6401b1a0:	mov    eax,DWORD PTR [esp+0x4]
6401b1a4:	mov    ecx,DWORD PTR [eax+0x3c]
6401b1a7:	add    ecx,eax
6401b1a9:	movzx  eax,WORD PTR [ecx+0x14]
6401b1ad:	push   ebx
6401b1ae:	push   esi
6401b1af:	movzx  esi,WORD PTR [ecx+0x6]
6401b1b3:	xor    edx,edx
6401b1b5:	test   esi,esi
6401b1b7:	push   edi
6401b1b8:	lea    eax,[eax+ecx*1+0x18]
6401b1bc:	jbe    0x6401b1dc
6401b1be:	mov    edi,DWORD PTR [esp+0x14]
6401b1c2:	mov    ecx,DWORD PTR [eax+0xc]
6401b1c5:	cmp    edi,ecx
6401b1c7:	jb     0x6401b1d2
6401b1c9:	mov    ebx,DWORD PTR [eax+0x8]
6401b1cc:	add    ebx,ecx
6401b1ce:	cmp    edi,ebx
6401b1d0:	jb     0x6401b1de
6401b1d2:	add    edx,0x1
6401b1d5:	add    eax,0x28
6401b1d8:	cmp    edx,esi
6401b1da:	jb     0x6401b1c2
6401b1dc:	xor    eax,eax
6401b1de:	pop    edi
6401b1df:	pop    esi
6401b1e0:	pop    ebx
6401b1e1:	ret    
6401b1e2:	int3   
6401b1e3:	int3   
6401b1e4:	int3   
6401b1e5:	int3   
6401b1e6:	int3   
6401b1e7:	int3   
6401b1e8:	int3   
6401b1e9:	int3   
6401b1ea:	int3   
6401b1eb:	int3   
6401b1ec:	int3   
6401b1ed:	int3   
6401b1ee:	int3   
6401b1ef:	int3   
6401b1f0:	push   ebp
6401b1f1:	mov    ebp,esp
6401b1f3:	push   0xfffffffe
6401b1f5:	push   0x6402a918
6401b1fa:	push   0x640141b0
6401b1ff:	mov    eax,fs:0x0
6401b205:	push   eax
6401b206:	sub    esp,0x8
6401b209:	push   ebx
6401b20a:	push   esi
6401b20b:	push   edi
6401b20c:	mov    eax,ds:0x6402d09c
6401b211:	xor    DWORD PTR [ebp-0x8],eax
6401b214:	xor    eax,ebp
6401b216:	push   eax
6401b217:	lea    eax,[ebp-0x10]
6401b21a:	mov    fs:0x0,eax
6401b220:	mov    DWORD PTR [ebp-0x18],esp
6401b223:	mov    DWORD PTR [ebp-0x4],0x0
6401b22a:	push   0x64000000
6401b22f:	call   0x6401b170
6401b234:	add    esp,0x4
6401b237:	test   eax,eax
6401b239:	je     0x6401b290
6401b23b:	mov    eax,DWORD PTR [ebp+0x8]
6401b23e:	sub    eax,0x64000000
6401b243:	push   eax
6401b244:	push   0x64000000
6401b249:	call   0x6401b1a0
6401b24e:	add    esp,0x8
6401b251:	test   eax,eax
6401b253:	je     0x6401b290
6401b255:	mov    eax,DWORD PTR [eax+0x24]
6401b258:	shr    eax,0x1f
6401b25b:	not    eax
6401b25d:	and    eax,0x1
6401b260:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b267:	mov    ecx,DWORD PTR [ebp-0x10]
6401b26a:	mov    DWORD PTR fs:0x0,ecx
6401b271:	pop    ecx
6401b272:	pop    edi
6401b273:	pop    esi
6401b274:	pop    ebx
6401b275:	mov    esp,ebp
6401b277:	pop    ebp
6401b278:	ret    
6401b279:	mov    eax,DWORD PTR [ebp-0x14]
6401b27c:	mov    ecx,DWORD PTR [eax]
6401b27e:	mov    eax,DWORD PTR [ecx]
6401b280:	xor    edx,edx
6401b282:	cmp    eax,0xc0000005
6401b287:	sete   dl
6401b28a:	mov    eax,edx
6401b28c:	ret    
6401b28d:	mov    esp,DWORD PTR [ebp-0x18]
6401b290:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b297:	xor    eax,eax
6401b299:	mov    ecx,DWORD PTR [ebp-0x10]
6401b29c:	mov    DWORD PTR fs:0x0,ecx
6401b2a3:	pop    ecx
6401b2a4:	pop    edi
6401b2a5:	pop    esi
6401b2a6:	pop    ebx
6401b2a7:	mov    esp,ebp
6401b2a9:	pop    ebp
6401b2aa:	ret    
6401b2ab:	xor    eax,eax
6401b2ad:	inc    eax
6401b2ae:	cmp    DWORD PTR [esp+0x4],0x0
6401b2b3:	jne    0x6401b2b7
6401b2b5:	xor    eax,eax
6401b2b7:	ret    
6401b2b8:	push   ebp
6401b2b9:	lea    ebp,[esp-0x2a8]
6401b2c0:	sub    esp,0x328
6401b2c6:	mov    eax,ds:0x6402d09c
6401b2cb:	xor    eax,ebp
6401b2cd:	mov    DWORD PTR [ebp+0x2a4],eax
6401b2d3:	test   BYTE PTR ds:0x6402db38,0x1
6401b2da:	push   esi
6401b2db:	je     0x6401b2e5
6401b2dd:	push   0xa
6401b2df:	call   0x6401acca
6401b2e4:	pop    ecx
6401b2e5:	call   0x6401b66d
6401b2ea:	test   eax,eax
6401b2ec:	je     0x6401b2f6
6401b2ee:	push   0x16
6401b2f0:	call   0x6401b67a
6401b2f5:	pop    ecx
6401b2f6:	test   BYTE PTR ds:0x6402db38,0x2
6401b2fd:	je     0x6401b3a3
6401b303:	mov    DWORD PTR [ebp+0x88],eax
6401b309:	mov    DWORD PTR [ebp+0x84],ecx
6401b30f:	mov    DWORD PTR [ebp+0x80],edx
6401b315:	mov    DWORD PTR [ebp+0x7c],ebx
6401b318:	mov    DWORD PTR [ebp+0x78],esi
6401b31b:	mov    DWORD PTR [ebp+0x74],edi
6401b31e:	data16 mov WORD PTR [ebp+0xa0],ss
6401b325:	data16 mov WORD PTR [ebp+0x94],cs
6401b32c:	data16 mov WORD PTR [ebp+0x70],ds
6401b330:	data16 mov WORD PTR [ebp+0x6c],es
6401b334:	data16 mov WORD PTR [ebp+0x68],fs
6401b338:	data16 mov WORD PTR [ebp+0x64],gs
6401b33c:	pushf  
6401b33d:	pop    DWORD PTR [ebp+0x98]
6401b343:	mov    esi,DWORD PTR [ebp+0x2ac]
6401b349:	lea    eax,[ebp+0x2ac]
6401b34f:	mov    DWORD PTR [ebp+0x9c],eax
6401b355:	mov    DWORD PTR [ebp-0x28],0x10001
6401b35c:	mov    DWORD PTR [ebp+0x90],esi
6401b362:	mov    eax,DWORD PTR [eax-0x4]
6401b365:	push   0x50
6401b367:	mov    DWORD PTR [ebp+0x8c],eax
6401b36d:	lea    eax,[ebp-0x80]
6401b370:	push   0x0
6401b372:	push   eax
6401b373:	call   0x64013290
6401b378:	lea    eax,[ebp-0x80]
6401b37b:	add    esp,0xc
6401b37e:	mov    DWORD PTR [ebp-0x30],eax
6401b381:	lea    eax,[ebp-0x28]
6401b384:	push   0x0
6401b386:	mov    DWORD PTR [ebp-0x80],0x40000015
6401b38d:	mov    DWORD PTR [ebp-0x74],esi
6401b390:	mov    DWORD PTR [ebp-0x2c],eax
6401b393:	call   DWORD PTR ds:0x64025114
6401b399:	lea    eax,[ebp-0x30]
6401b39c:	push   eax
6401b39d:	call   DWORD PTR ds:0x64025110
6401b3a3:	push   0x3
6401b3a5:	call   0x64016266
6401b3aa:	int3   
6401b3ab:	int3   
6401b3ac:	push   ebp
6401b3ad:	mov    ebp,esp
6401b3af:	push   ebx
6401b3b0:	push   esi
6401b3b1:	push   edi
6401b3b2:	push   ebp
6401b3b3:	push   0x0
6401b3b5:	push   0x0
6401b3b7:	push   0x6401b3c4
6401b3bc:	push   DWORD PTR [ebp+0x8]
6401b3bf:	call   0x6401edec
6401b3c4:	pop    ebp
6401b3c5:	pop    edi
6401b3c6:	pop    esi
6401b3c7:	pop    ebx
6401b3c8:	mov    esp,ebp
6401b3ca:	pop    ebp
6401b3cb:	ret    
6401b3cc:	mov    ecx,DWORD PTR [esp+0x4]
6401b3d0:	test   DWORD PTR [ecx+0x4],0x6
6401b3d7:	mov    eax,0x1
6401b3dc:	je     0x6401b410
6401b3de:	mov    eax,DWORD PTR [esp+0x14]
6401b3e2:	mov    ecx,DWORD PTR [eax-0x4]
6401b3e5:	xor    ecx,eax
6401b3e7:	call   0x64012b8c
6401b3ec:	push   ebp
6401b3ed:	mov    ebp,DWORD PTR [eax+0x10]
6401b3f0:	mov    edx,DWORD PTR [eax+0x28]
6401b3f3:	push   edx
6401b3f4:	mov    edx,DWORD PTR [eax+0x24]
6401b3f7:	push   edx
6401b3f8:	call   0x6401b411
6401b3fd:	add    esp,0x8
6401b400:	pop    ebp
6401b401:	mov    eax,DWORD PTR [esp+0x8]
6401b405:	mov    edx,DWORD PTR [esp+0x10]
6401b409:	mov    DWORD PTR [edx],eax
6401b40b:	mov    eax,0x3
6401b410:	ret    
6401b411:	push   ebx
6401b412:	push   esi
6401b413:	push   edi
6401b414:	mov    eax,DWORD PTR [esp+0x10]
6401b418:	push   ebp
6401b419:	push   eax
6401b41a:	push   0xfffffffe
6401b41c:	push   0x6401b3cc
6401b421:	push   DWORD PTR fs:0x0
6401b428:	mov    eax,ds:0x6402d09c
6401b42d:	xor    eax,esp
6401b42f:	push   eax
6401b430:	lea    eax,[esp+0x4]
6401b434:	mov    fs:0x0,eax
6401b43a:	mov    eax,DWORD PTR [esp+0x28]
6401b43e:	mov    ebx,DWORD PTR [eax+0x8]
6401b441:	mov    esi,DWORD PTR [eax+0xc]
6401b444:	cmp    esi,0xffffffff
6401b447:	je     0x6401b483
6401b449:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401b44e:	je     0x6401b456
6401b450:	cmp    esi,DWORD PTR [esp+0x2c]
6401b454:	jbe    0x6401b483
6401b456:	lea    esi,[esi+esi*2]
6401b459:	mov    ecx,DWORD PTR [ebx+esi*4]
6401b45c:	mov    DWORD PTR [esp+0xc],ecx
6401b460:	mov    DWORD PTR [eax+0xc],ecx
6401b463:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401b468:	jne    0x6401b481
6401b46a:	push   0x101
6401b46f:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401b473:	call   0x6401b4c1
6401b478:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401b47c:	call   0x6401b4e0
6401b481:	jmp    0x6401b43a
6401b483:	mov    ecx,DWORD PTR [esp+0x4]
6401b487:	mov    DWORD PTR fs:0x0,ecx
6401b48e:	add    esp,0x18
6401b491:	pop    edi
6401b492:	pop    esi
6401b493:	pop    ebx
6401b494:	ret    
6401b495:	xor    eax,eax
6401b497:	mov    ecx,DWORD PTR fs:0x0
6401b49e:	cmp    DWORD PTR [ecx+0x4],0x6401b3cc
6401b4a5:	jne    0x6401b4b7
6401b4a7:	mov    edx,DWORD PTR [ecx+0xc]
6401b4aa:	mov    edx,DWORD PTR [edx+0xc]
6401b4ad:	cmp    DWORD PTR [ecx+0x8],edx
6401b4b0:	jne    0x6401b4b7
6401b4b2:	mov    eax,0x1
6401b4b7:	ret    
6401b4b8:	push   ebx
6401b4b9:	push   ecx
6401b4ba:	mov    ebx,0x6402db3c
6401b4bf:	jmp    0x6401b4cc
6401b4c1:	push   ebx
6401b4c2:	push   ecx
6401b4c3:	mov    ebx,0x6402db3c
6401b4c8:	mov    ecx,DWORD PTR [esp+0xc]
6401b4cc:	mov    DWORD PTR [ebx+0x8],ecx
6401b4cf:	mov    DWORD PTR [ebx+0x4],eax
6401b4d2:	mov    DWORD PTR [ebx+0xc],ebp
6401b4d5:	push   ebp
6401b4d6:	push   ecx
6401b4d7:	push   eax
6401b4d8:	pop    eax
6401b4d9:	pop    ecx
6401b4da:	pop    ebp
6401b4db:	pop    ecx
6401b4dc:	pop    ebx
6401b4dd:	ret    0x4
6401b4e0:	call   eax
6401b4e2:	ret    
6401b4e3:	push   0xc
6401b4e5:	push   0x6402a938
6401b4ea:	call   0x64014150
6401b4ef:	mov    ecx,DWORD PTR [ebp+0x8]
6401b4f2:	xor    edi,edi
6401b4f4:	cmp    ecx,edi
6401b4f6:	jbe    0x6401b526
6401b4f8:	push   0xffffffe0
6401b4fa:	pop    eax
6401b4fb:	xor    edx,edx
6401b4fd:	div    ecx
6401b4ff:	cmp    eax,DWORD PTR [ebp+0xc]
6401b502:	sbb    eax,eax
6401b504:	inc    eax
6401b505:	jne    0x6401b526
6401b507:	call   0x64014950
6401b50c:	mov    DWORD PTR [eax],0xc
6401b512:	push   edi
6401b513:	push   edi
6401b514:	push   edi
6401b515:	push   edi
6401b516:	push   edi
6401b517:	call   0x640126c4
6401b51c:	add    esp,0x14
6401b51f:	xor    eax,eax
6401b521:	jmp    0x6401b5fb
6401b526:	imul   ecx,DWORD PTR [ebp+0xc]
6401b52a:	mov    esi,ecx
6401b52c:	mov    DWORD PTR [ebp+0x8],esi
6401b52f:	cmp    esi,edi
6401b531:	jne    0x6401b536
6401b533:	xor    esi,esi
6401b535:	inc    esi
6401b536:	xor    ebx,ebx
6401b538:	mov    DWORD PTR [ebp-0x1c],ebx
6401b53b:	cmp    esi,0xffffffe0
6401b53e:	ja     0x6401b5a9
6401b540:	cmp    DWORD PTR ds:0x640324fc,0x3
6401b547:	jne    0x6401b594
6401b549:	add    esi,0xf
6401b54c:	and    esi,0xfffffff0
6401b54f:	mov    DWORD PTR [ebp+0xc],esi
6401b552:	mov    eax,DWORD PTR [ebp+0x8]
6401b555:	cmp    eax,DWORD PTR ds:0x640324ec
6401b55b:	ja     0x6401b594
6401b55d:	push   0x4
6401b55f:	call   0x6401a19a
6401b564:	pop    ecx
6401b565:	mov    DWORD PTR [ebp-0x4],edi
6401b568:	push   DWORD PTR [ebp+0x8]
6401b56b:	call   0x6401a9e7
6401b570:	pop    ecx
6401b571:	mov    DWORD PTR [ebp-0x1c],eax
6401b574:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b57b:	call   0x6401b5df
6401b580:	mov    ebx,DWORD PTR [ebp-0x1c]
6401b583:	cmp    ebx,edi
6401b585:	je     0x6401b598
6401b587:	push   DWORD PTR [ebp+0x8]
6401b58a:	push   edi
6401b58b:	push   ebx
6401b58c:	call   0x64013290
6401b591:	add    esp,0xc
6401b594:	cmp    ebx,edi
6401b596:	jne    0x6401b5f9
6401b598:	push   esi
6401b599:	push   0x8
6401b59b:	push   DWORD PTR ds:0x6402ea6c
6401b5a1:	call   DWORD PTR ds:0x640250f8
6401b5a7:	mov    ebx,eax
6401b5a9:	cmp    ebx,edi
6401b5ab:	jne    0x6401b5f9
6401b5ad:	cmp    DWORD PTR ds:0x6402eee4,edi
6401b5b3:	je     0x6401b5e8
6401b5b5:	push   esi
6401b5b6:	call   0x64014fcb
6401b5bb:	pop    ecx
6401b5bc:	test   eax,eax
6401b5be:	jne    0x6401b536
6401b5c4:	mov    eax,DWORD PTR [ebp+0x10]
6401b5c7:	cmp    eax,edi
6401b5c9:	je     0x6401b51f
6401b5cf:	mov    DWORD PTR [eax],0xc
6401b5d5:	jmp    0x6401b51f
6401b5da:	xor    edi,edi
6401b5dc:	mov    esi,DWORD PTR [ebp+0xc]
6401b5df:	push   0x4
6401b5e1:	call   0x6401a0c2
6401b5e6:	pop    ecx
6401b5e7:	ret    
6401b5e8:	cmp    ebx,edi
6401b5ea:	jne    0x6401b5f9
6401b5ec:	mov    eax,DWORD PTR [ebp+0x10]
6401b5ef:	cmp    eax,edi
6401b5f1:	je     0x6401b5f9
6401b5f3:	mov    DWORD PTR [eax],0xc
6401b5f9:	mov    eax,ebx
6401b5fb:	call   0x64014195
6401b600:	ret    
6401b601:	push   esi
6401b602:	push   edi
6401b603:	xor    edi,edi
6401b605:	lea    esi,[edi+0x6402db4c]
6401b60b:	push   DWORD PTR [esi]
6401b60d:	call   0x64014a08
6401b612:	add    edi,0x4
6401b615:	cmp    edi,0x28
6401b618:	pop    ecx
6401b619:	mov    DWORD PTR [esi],eax
6401b61b:	jb     0x6401b605
6401b61d:	pop    edi
6401b61e:	pop    esi
6401b61f:	ret    
6401b620:	mov    eax,DWORD PTR [esp+0x4]
6401b624:	mov    ds:0x6402ef24,eax
6401b629:	mov    ds:0x6402ef28,eax
6401b62e:	mov    ds:0x6402ef2c,eax
6401b633:	mov    ds:0x6402ef30,eax
6401b638:	ret    
6401b639:	mov    eax,DWORD PTR [esp+0x4]
6401b63d:	mov    ecx,DWORD PTR ds:0x6402d94c
6401b643:	push   esi
6401b644:	cmp    DWORD PTR [eax+0x4],edx
6401b647:	je     0x6401b659
6401b649:	mov    esi,ecx
6401b64b:	imul   esi,esi,0xc
6401b64e:	add    esi,DWORD PTR [esp+0x8]
6401b652:	add    eax,0xc
6401b655:	cmp    eax,esi
6401b657:	jb     0x6401b644
6401b659:	imul   ecx,ecx,0xc
6401b65c:	add    ecx,DWORD PTR [esp+0x8]
6401b660:	pop    esi
6401b661:	cmp    eax,ecx
6401b663:	jae    0x6401b66a
6401b665:	cmp    DWORD PTR [eax+0x4],edx
6401b668:	je     0x6401b66c
6401b66a:	xor    eax,eax
6401b66c:	ret    
6401b66d:	push   DWORD PTR ds:0x6402ef2c
6401b673:	call   0x64014a7f
6401b678:	pop    ecx
6401b679:	ret    
6401b67a:	push   0x20
6401b67c:	push   0x6402a958
6401b681:	call   0x64014150
6401b686:	xor    edi,edi
6401b688:	mov    DWORD PTR [ebp-0x1c],edi
6401b68b:	mov    DWORD PTR [ebp-0x28],edi
6401b68e:	mov    ebx,DWORD PTR [ebp+0x8]
6401b691:	cmp    ebx,0xb
6401b694:	jg     0x6401b6e2
6401b696:	je     0x6401b6ad
6401b698:	mov    eax,ebx
6401b69a:	push   0x2
6401b69c:	pop    ecx
6401b69d:	sub    eax,ecx
6401b69f:	je     0x6401b6c3
6401b6a1:	sub    eax,ecx
6401b6a3:	je     0x6401b6ad
6401b6a5:	sub    eax,ecx
6401b6a7:	je     0x6401b70d
6401b6a9:	sub    eax,ecx
6401b6ab:	jne    0x6401b6f1
6401b6ad:	call   0x64014c24
6401b6b2:	mov    edi,eax
6401b6b4:	mov    DWORD PTR [ebp-0x28],edi
6401b6b7:	test   edi,edi
6401b6b9:	jne    0x6401b6cf
6401b6bb:	or     eax,0xffffffff
6401b6be:	jmp    0x6401b824
6401b6c3:	mov    esi,0x6402ef24
6401b6c8:	mov    eax,ds:0x6402ef24
6401b6cd:	jmp    0x6401b72f
6401b6cf:	push   DWORD PTR [edi+0x5c]
6401b6d2:	mov    edx,ebx
6401b6d4:	call   0x6401b639
6401b6d9:	mov    esi,eax
6401b6db:	add    esi,0x8
6401b6de:	mov    eax,DWORD PTR [esi]
6401b6e0:	jmp    0x6401b73c
6401b6e2:	mov    eax,ebx
6401b6e4:	sub    eax,0xf
6401b6e7:	je     0x6401b725
6401b6e9:	sub    eax,0x6
6401b6ec:	je     0x6401b719
6401b6ee:	dec    eax
6401b6ef:	je     0x6401b70d
6401b6f1:	call   0x64014950
6401b6f6:	mov    DWORD PTR [eax],0x16
6401b6fc:	xor    eax,eax
6401b6fe:	push   eax
6401b6ff:	push   eax
6401b700:	push   eax
6401b701:	push   eax
6401b702:	push   eax
6401b703:	call   0x640126c4
6401b708:	add    esp,0x14
6401b70b:	jmp    0x6401b6bb
6401b70d:	mov    esi,0x6402ef2c
6401b712:	mov    eax,ds:0x6402ef2c
6401b717:	jmp    0x6401b72f
6401b719:	mov    esi,0x6402ef28
6401b71e:	mov    eax,ds:0x6402ef28
6401b723:	jmp    0x6401b72f
6401b725:	mov    esi,0x6402ef30
6401b72a:	mov    eax,ds:0x6402ef30
6401b72f:	mov    DWORD PTR [ebp-0x1c],0x1
6401b736:	push   eax
6401b737:	call   0x64014a7f
6401b73c:	mov    DWORD PTR [ebp-0x20],eax
6401b73f:	pop    ecx
6401b740:	xor    eax,eax
6401b742:	cmp    DWORD PTR [ebp-0x20],0x1
6401b746:	je     0x6401b824
6401b74c:	cmp    DWORD PTR [ebp-0x20],eax
6401b74f:	jne    0x6401b758
6401b751:	push   0x3
6401b753:	call   0x64016266
6401b758:	cmp    DWORD PTR [ebp-0x1c],eax
6401b75b:	je     0x6401b764
6401b75d:	push   eax
6401b75e:	call   0x6401a19a
6401b763:	pop    ecx
6401b764:	xor    eax,eax
6401b766:	mov    DWORD PTR [ebp-0x4],eax
6401b769:	cmp    ebx,0x8
6401b76c:	je     0x6401b778
6401b76e:	cmp    ebx,0xb
6401b771:	je     0x6401b778
6401b773:	cmp    ebx,0x4
6401b776:	jne    0x6401b793
6401b778:	mov    ecx,DWORD PTR [edi+0x60]
6401b77b:	mov    DWORD PTR [ebp-0x2c],ecx
6401b77e:	mov    DWORD PTR [edi+0x60],eax
6401b781:	cmp    ebx,0x8
6401b784:	jne    0x6401b7c6
6401b786:	mov    ecx,DWORD PTR [edi+0x64]
6401b789:	mov    DWORD PTR [ebp-0x30],ecx
6401b78c:	mov    DWORD PTR [edi+0x64],0x8c
6401b793:	cmp    ebx,0x8
6401b796:	jne    0x6401b7c6
6401b798:	mov    ecx,DWORD PTR ds:0x6402d940
6401b79e:	mov    DWORD PTR [ebp-0x24],ecx
6401b7a1:	mov    ecx,DWORD PTR ds:0x6402d944
6401b7a7:	mov    edx,DWORD PTR ds:0x6402d940
6401b7ad:	add    ecx,edx
6401b7af:	cmp    DWORD PTR [ebp-0x24],ecx
6401b7b2:	jge    0x6401b7cd
6401b7b4:	mov    ecx,DWORD PTR [ebp-0x24]
6401b7b7:	imul   ecx,ecx,0xc
6401b7ba:	mov    edx,DWORD PTR [edi+0x5c]
6401b7bd:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401b7c1:	inc    DWORD PTR [ebp-0x24]
6401b7c4:	jmp    0x6401b7a1
6401b7c6:	call   0x64014a76
6401b7cb:	mov    DWORD PTR [esi],eax
6401b7cd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b7d4:	call   0x6401b7ee
6401b7d9:	cmp    ebx,0x8
6401b7dc:	jne    0x6401b7fd
6401b7de:	push   DWORD PTR [edi+0x64]
6401b7e1:	push   ebx
6401b7e2:	call   DWORD PTR [ebp-0x20]
6401b7e5:	pop    ecx
6401b7e6:	jmp    0x6401b801
6401b7e8:	mov    ebx,DWORD PTR [ebp+0x8]
6401b7eb:	mov    edi,DWORD PTR [ebp-0x28]
6401b7ee:	cmp    DWORD PTR [ebp-0x1c],0x0
6401b7f2:	je     0x6401b7fc
6401b7f4:	push   0x0
6401b7f6:	call   0x6401a0c2
6401b7fb:	pop    ecx
6401b7fc:	ret    
6401b7fd:	push   ebx
6401b7fe:	call   DWORD PTR [ebp-0x20]
6401b801:	pop    ecx
6401b802:	cmp    ebx,0x8
6401b805:	je     0x6401b811
6401b807:	cmp    ebx,0xb
6401b80a:	je     0x6401b811
6401b80c:	cmp    ebx,0x4
6401b80f:	jne    0x6401b822
6401b811:	mov    eax,DWORD PTR [ebp-0x2c]
6401b814:	mov    DWORD PTR [edi+0x60],eax
6401b817:	cmp    ebx,0x8
6401b81a:	jne    0x6401b822
6401b81c:	mov    eax,DWORD PTR [ebp-0x30]
6401b81f:	mov    DWORD PTR [edi+0x64],eax
6401b822:	xor    eax,eax
6401b824:	call   0x64014195
6401b829:	ret    
6401b82a:	mov    eax,DWORD PTR [esp+0x4]
6401b82e:	mov    ds:0x6402ef38,eax
6401b833:	ret    
6401b834:	mov    eax,DWORD PTR [esp+0x4]
6401b838:	mov    ds:0x6402ef44,eax
6401b83d:	ret    
6401b83e:	mov    eax,DWORD PTR [esp+0x4]
6401b842:	mov    ds:0x6402ef48,eax
6401b847:	ret    
6401b848:	push   DWORD PTR [esp+0x4]
6401b84c:	call   DWORD PTR ds:0x6402501c
6401b852:	xor    eax,eax
6401b854:	inc    eax
6401b855:	ret    0x8
6401b858:	push   0x14
6401b85a:	push   0x6402a978
6401b85f:	call   0x64014150
6401b864:	xor    edi,edi
6401b866:	mov    DWORD PTR [ebp-0x1c],edi
6401b869:	push   DWORD PTR ds:0x6402ef48
6401b86f:	call   0x64014a7f
6401b874:	pop    ecx
6401b875:	mov    esi,eax
6401b877:	cmp    esi,edi
6401b879:	jne    0x6401b8ce
6401b87b:	lea    eax,[ebp-0x1c]
6401b87e:	push   eax
6401b87f:	call   0x6401607f
6401b884:	pop    ecx
6401b885:	cmp    eax,edi
6401b887:	je     0x6401b896
6401b889:	push   edi
6401b88a:	push   edi
6401b88b:	push   edi
6401b88c:	push   edi
6401b88d:	push   edi
6401b88e:	call   0x640125c8
6401b893:	add    esp,0x14
6401b896:	cmp    DWORD PTR [ebp-0x1c],0x1
6401b89a:	je     0x6401b8bd
6401b89c:	push   0x64026bc8
6401b8a1:	call   DWORD PTR ds:0x64025128
6401b8a7:	cmp    eax,edi
6401b8a9:	je     0x6401b8bd
6401b8ab:	push   0x64026ba0
6401b8b0:	push   eax
6401b8b1:	call   DWORD PTR ds:0x64025014
6401b8b7:	mov    esi,eax
6401b8b9:	cmp    esi,edi
6401b8bb:	jne    0x6401b8c2
6401b8bd:	mov    esi,0x6401b848
6401b8c2:	push   esi
6401b8c3:	call   0x64014a08
6401b8c8:	pop    ecx
6401b8c9:	mov    ds:0x6402ef48,eax
6401b8ce:	mov    DWORD PTR [ebp-0x4],edi
6401b8d1:	push   DWORD PTR [ebp+0xc]
6401b8d4:	push   DWORD PTR [ebp+0x8]
6401b8d7:	call   esi
6401b8d9:	mov    DWORD PTR [ebp-0x20],eax
6401b8dc:	jmp    0x6401b90d
6401b8de:	mov    eax,DWORD PTR [ebp-0x14]
6401b8e1:	mov    eax,DWORD PTR [eax]
6401b8e3:	mov    eax,DWORD PTR [eax]
6401b8e5:	mov    DWORD PTR [ebp-0x24],eax
6401b8e8:	xor    ecx,ecx
6401b8ea:	cmp    eax,0xc0000017
6401b8ef:	sete   cl
6401b8f2:	mov    eax,ecx
6401b8f4:	ret    
6401b8f5:	mov    esp,DWORD PTR [ebp-0x18]
6401b8f8:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401b8ff:	jne    0x6401b909
6401b901:	push   0x8
6401b903:	call   DWORD PTR ds:0x64025060
6401b909:	and    DWORD PTR [ebp-0x20],0x0
6401b90d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b914:	mov    eax,DWORD PTR [ebp-0x20]
6401b917:	call   0x64014195
6401b91c:	ret    
6401b91d:	push   ebp
6401b91e:	mov    ebp,esp
6401b920:	push   ecx
6401b921:	push   ecx
6401b922:	mov    eax,ds:0x6402d09c
6401b927:	xor    eax,ebp
6401b929:	mov    DWORD PTR [ebp-0x4],eax
6401b92c:	mov    eax,ds:0x6402ef4c
6401b931:	push   ebx
6401b932:	push   esi
6401b933:	xor    ebx,ebx
6401b935:	cmp    eax,ebx
6401b937:	push   edi
6401b938:	mov    edi,ecx
6401b93a:	jne    0x6401b976
6401b93c:	lea    eax,[ebp-0x8]
6401b93f:	push   eax
6401b940:	xor    esi,esi
6401b942:	inc    esi
6401b943:	push   esi
6401b944:	push   0x64027714
6401b949:	push   esi
6401b94a:	call   DWORD PTR ds:0x640250bc
6401b950:	test   eax,eax
6401b952:	je     0x6401b95c
6401b954:	mov    DWORD PTR ds:0x6402ef4c,esi
6401b95a:	jmp    0x6401b990
6401b95c:	call   DWORD PTR ds:0x64025044
6401b962:	cmp    eax,0x78
6401b965:	jne    0x6401b971
6401b967:	push   0x2
6401b969:	pop    eax
6401b96a:	mov    ds:0x6402ef4c,eax
6401b96f:	jmp    0x6401b976
6401b971:	mov    eax,ds:0x6402ef4c
6401b976:	cmp    eax,0x2
6401b979:	je     0x6401ba4e
6401b97f:	cmp    eax,ebx
6401b981:	je     0x6401ba4e
6401b987:	cmp    eax,0x1
6401b98a:	jne    0x6401ba78
6401b990:	cmp    DWORD PTR [ebp+0x18],ebx
6401b993:	mov    DWORD PTR [ebp-0x8],ebx
6401b996:	jne    0x6401b9a0
6401b998:	mov    eax,DWORD PTR [edi]
6401b99a:	mov    eax,DWORD PTR [eax+0x4]
6401b99d:	mov    DWORD PTR [ebp+0x18],eax
6401b9a0:	mov    esi,DWORD PTR ds:0x64025024
6401b9a6:	xor    eax,eax
6401b9a8:	cmp    DWORD PTR [ebp+0x20],ebx
6401b9ab:	push   ebx
6401b9ac:	push   ebx
6401b9ad:	push   DWORD PTR [ebp+0x10]
6401b9b0:	setne  al
6401b9b3:	push   DWORD PTR [ebp+0xc]
6401b9b6:	lea    eax,[eax*8+0x1]
6401b9bd:	push   eax
6401b9be:	push   DWORD PTR [ebp+0x18]
6401b9c1:	call   esi
6401b9c3:	mov    edi,eax
6401b9c5:	cmp    edi,ebx
6401b9c7:	je     0x6401ba78
6401b9cd:	jle    0x6401ba0b
6401b9cf:	cmp    edi,0x7ffffff0
6401b9d5:	ja     0x6401ba0b
6401b9d7:	lea    eax,[edi+edi*1+0x8]
6401b9db:	cmp    eax,0x400
6401b9e0:	ja     0x6401b9f5
6401b9e2:	call   0x64013310
6401b9e7:	mov    eax,esp
6401b9e9:	cmp    eax,ebx
6401b9eb:	je     0x6401ba09
6401b9ed:	mov    DWORD PTR [eax],0xcccc
6401b9f3:	jmp    0x6401ba06
6401b9f5:	push   eax
6401b9f6:	call   0x64013b03
6401b9fb:	cmp    eax,ebx
6401b9fd:	pop    ecx
6401b9fe:	je     0x6401ba09
6401ba00:	mov    DWORD PTR [eax],0xdddd
6401ba06:	add    eax,0x8
6401ba09:	mov    ebx,eax
6401ba0b:	test   ebx,ebx
6401ba0d:	je     0x6401ba78
6401ba0f:	lea    eax,[edi+edi*1]
6401ba12:	push   eax
6401ba13:	push   0x0
6401ba15:	push   ebx
6401ba16:	call   0x64013290
6401ba1b:	add    esp,0xc
6401ba1e:	push   edi
6401ba1f:	push   ebx
6401ba20:	push   DWORD PTR [ebp+0x10]
6401ba23:	push   DWORD PTR [ebp+0xc]
6401ba26:	push   0x1
6401ba28:	push   DWORD PTR [ebp+0x18]
6401ba2b:	call   esi
6401ba2d:	test   eax,eax
6401ba2f:	je     0x6401ba42
6401ba31:	push   DWORD PTR [ebp+0x14]
6401ba34:	push   eax
6401ba35:	push   ebx
6401ba36:	push   DWORD PTR [ebp+0x8]
6401ba39:	call   DWORD PTR ds:0x640250bc
6401ba3f:	mov    DWORD PTR [ebp-0x8],eax
6401ba42:	push   ebx
6401ba43:	call   0x6401309c
6401ba48:	mov    eax,DWORD PTR [ebp-0x8]
6401ba4b:	pop    ecx
6401ba4c:	jmp    0x6401bac3
6401ba4e:	xor    esi,esi
6401ba50:	cmp    DWORD PTR [ebp+0x1c],ebx
6401ba53:	jne    0x6401ba5d
6401ba55:	mov    eax,DWORD PTR [edi]
6401ba57:	mov    eax,DWORD PTR [eax+0x14]
6401ba5a:	mov    DWORD PTR [ebp+0x1c],eax
6401ba5d:	cmp    DWORD PTR [ebp+0x18],ebx
6401ba60:	jne    0x6401ba6a
6401ba62:	mov    eax,DWORD PTR [edi]
6401ba64:	mov    eax,DWORD PTR [eax+0x4]
6401ba67:	mov    DWORD PTR [ebp+0x18],eax
6401ba6a:	push   DWORD PTR [ebp+0x1c]
6401ba6d:	call   0x6401d6f8
6401ba72:	cmp    eax,0xffffffff
6401ba75:	pop    ecx
6401ba76:	jne    0x6401ba7c
6401ba78:	xor    eax,eax
6401ba7a:	jmp    0x6401bac3
6401ba7c:	cmp    eax,DWORD PTR [ebp+0x18]
6401ba7f:	je     0x6401ba9f
6401ba81:	push   ebx
6401ba82:	push   ebx
6401ba83:	lea    ecx,[ebp+0x10]
6401ba86:	push   ecx
6401ba87:	push   DWORD PTR [ebp+0xc]
6401ba8a:	push   eax
6401ba8b:	push   DWORD PTR [ebp+0x18]
6401ba8e:	call   0x6401d73f
6401ba93:	mov    esi,eax
6401ba95:	add    esp,0x18
6401ba98:	cmp    esi,ebx
6401ba9a:	je     0x6401ba78
6401ba9c:	mov    DWORD PTR [ebp+0xc],esi
6401ba9f:	push   DWORD PTR [ebp+0x14]
6401baa2:	push   DWORD PTR [ebp+0x10]
6401baa5:	push   DWORD PTR [ebp+0xc]
6401baa8:	push   DWORD PTR [ebp+0x8]
6401baab:	push   DWORD PTR [ebp+0x1c]
6401baae:	call   DWORD PTR ds:0x640250c0
6401bab4:	cmp    esi,ebx
6401bab6:	mov    edi,eax
6401bab8:	je     0x6401bac1
6401baba:	push   esi
6401babb:	call   0x64013a26
6401bac0:	pop    ecx
6401bac1:	mov    eax,edi
6401bac3:	lea    esp,[ebp-0x14]
6401bac6:	pop    edi
6401bac7:	pop    esi
6401bac8:	pop    ebx
6401bac9:	mov    ecx,DWORD PTR [ebp-0x4]
6401bacc:	xor    ecx,ebp
6401bace:	call   0x64012b8c
6401bad3:	leave  
6401bad4:	ret    
6401bad5:	push   ebp
6401bad6:	mov    ebp,esp
6401bad8:	sub    esp,0x10
6401badb:	push   DWORD PTR [ebp+0x8]
6401bade:	lea    ecx,[ebp-0x10]
6401bae1:	call   0x64012d2f
6401bae6:	push   DWORD PTR [ebp+0x24]
6401bae9:	lea    ecx,[ebp-0x10]
6401baec:	push   DWORD PTR [ebp+0x20]
6401baef:	push   DWORD PTR [ebp+0x1c]
6401baf2:	push   DWORD PTR [ebp+0x18]
6401baf5:	push   DWORD PTR [ebp+0x14]
6401baf8:	push   DWORD PTR [ebp+0x10]
6401bafb:	push   DWORD PTR [ebp+0xc]
6401bafe:	call   0x6401b91d
6401bb03:	add    esp,0x1c
6401bb06:	cmp    BYTE PTR [ebp-0x4],0x0
6401bb0a:	je     0x6401bb13
6401bb0c:	mov    ecx,DWORD PTR [ebp-0x8]
6401bb0f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401bb13:	leave  
6401bb14:	ret    
6401bb15:	push   esi
6401bb16:	mov    esi,DWORD PTR [esp+0x8]
6401bb1a:	test   esi,esi
6401bb1c:	je     0x6401bca3
6401bb22:	push   DWORD PTR [esi+0x4]
6401bb25:	call   0x64013a26
6401bb2a:	push   DWORD PTR [esi+0x8]
6401bb2d:	call   0x64013a26
6401bb32:	push   DWORD PTR [esi+0xc]
6401bb35:	call   0x64013a26
6401bb3a:	push   DWORD PTR [esi+0x10]
6401bb3d:	call   0x64013a26
6401bb42:	push   DWORD PTR [esi+0x14]
6401bb45:	call   0x64013a26
6401bb4a:	push   DWORD PTR [esi+0x18]
6401bb4d:	call   0x64013a26
6401bb52:	push   DWORD PTR [esi]
6401bb54:	call   0x64013a26
6401bb59:	push   DWORD PTR [esi+0x20]
6401bb5c:	call   0x64013a26
6401bb61:	push   DWORD PTR [esi+0x24]
6401bb64:	call   0x64013a26
6401bb69:	push   DWORD PTR [esi+0x28]
6401bb6c:	call   0x64013a26
6401bb71:	push   DWORD PTR [esi+0x2c]
6401bb74:	call   0x64013a26
6401bb79:	push   DWORD PTR [esi+0x30]
6401bb7c:	call   0x64013a26
6401bb81:	push   DWORD PTR [esi+0x34]
6401bb84:	call   0x64013a26
6401bb89:	push   DWORD PTR [esi+0x1c]
6401bb8c:	call   0x64013a26
6401bb91:	push   DWORD PTR [esi+0x38]
6401bb94:	call   0x64013a26
6401bb99:	push   DWORD PTR [esi+0x3c]
6401bb9c:	call   0x64013a26
6401bba1:	add    esp,0x40
6401bba4:	push   DWORD PTR [esi+0x40]
6401bba7:	call   0x64013a26
6401bbac:	push   DWORD PTR [esi+0x44]
6401bbaf:	call   0x64013a26
6401bbb4:	push   DWORD PTR [esi+0x48]
6401bbb7:	call   0x64013a26
6401bbbc:	push   DWORD PTR [esi+0x4c]
6401bbbf:	call   0x64013a26
6401bbc4:	push   DWORD PTR [esi+0x50]
6401bbc7:	call   0x64013a26
6401bbcc:	push   DWORD PTR [esi+0x54]
6401bbcf:	call   0x64013a26
6401bbd4:	push   DWORD PTR [esi+0x58]
6401bbd7:	call   0x64013a26
6401bbdc:	push   DWORD PTR [esi+0x5c]
6401bbdf:	call   0x64013a26
6401bbe4:	push   DWORD PTR [esi+0x60]
6401bbe7:	call   0x64013a26
6401bbec:	push   DWORD PTR [esi+0x64]
6401bbef:	call   0x64013a26
6401bbf4:	push   DWORD PTR [esi+0x68]
6401bbf7:	call   0x64013a26
6401bbfc:	push   DWORD PTR [esi+0x6c]
6401bbff:	call   0x64013a26
6401bc04:	push   DWORD PTR [esi+0x70]
6401bc07:	call   0x64013a26
6401bc0c:	push   DWORD PTR [esi+0x74]
6401bc0f:	call   0x64013a26
6401bc14:	push   DWORD PTR [esi+0x78]
6401bc17:	call   0x64013a26
6401bc1c:	push   DWORD PTR [esi+0x7c]
6401bc1f:	call   0x64013a26
6401bc24:	add    esp,0x40
6401bc27:	push   DWORD PTR [esi+0x80]
6401bc2d:	call   0x64013a26
6401bc32:	push   DWORD PTR [esi+0x84]
6401bc38:	call   0x64013a26
6401bc3d:	push   DWORD PTR [esi+0x88]
6401bc43:	call   0x64013a26
6401bc48:	push   DWORD PTR [esi+0x8c]
6401bc4e:	call   0x64013a26
6401bc53:	push   DWORD PTR [esi+0x90]
6401bc59:	call   0x64013a26
6401bc5e:	push   DWORD PTR [esi+0x94]
6401bc64:	call   0x64013a26
6401bc69:	push   DWORD PTR [esi+0x98]
6401bc6f:	call   0x64013a26
6401bc74:	push   DWORD PTR [esi+0x9c]
6401bc7a:	call   0x64013a26
6401bc7f:	push   DWORD PTR [esi+0xa0]
6401bc85:	call   0x64013a26
6401bc8a:	push   DWORD PTR [esi+0xa4]
6401bc90:	call   0x64013a26
6401bc95:	push   DWORD PTR [esi+0xa8]
6401bc9b:	call   0x64013a26
6401bca0:	add    esp,0x2c
6401bca3:	pop    esi
6401bca4:	ret    
6401bca5:	push   esi
6401bca6:	mov    esi,DWORD PTR [esp+0x8]
6401bcaa:	test   esi,esi
6401bcac:	je     0x6401bce3
6401bcae:	mov    eax,DWORD PTR [esi]
6401bcb0:	cmp    eax,DWORD PTR ds:0x6402dc40
6401bcb6:	je     0x6401bcbf
6401bcb8:	push   eax
6401bcb9:	call   0x64013a26
6401bcbe:	pop    ecx
6401bcbf:	mov    eax,DWORD PTR [esi+0x4]
6401bcc2:	cmp    eax,DWORD PTR ds:0x6402dc44
6401bcc8:	je     0x6401bcd1
6401bcca:	push   eax
6401bccb:	call   0x64013a26
6401bcd0:	pop    ecx
6401bcd1:	mov    esi,DWORD PTR [esi+0x8]
6401bcd4:	cmp    esi,DWORD PTR ds:0x6402dc48
6401bcda:	je     0x6401bce3
6401bcdc:	push   esi
6401bcdd:	call   0x64013a26
6401bce2:	pop    ecx
6401bce3:	pop    esi
6401bce4:	ret    
6401bce5:	push   esi
6401bce6:	mov    esi,DWORD PTR [esp+0x8]
6401bcea:	test   esi,esi
6401bcec:	je     0x6401bd6c
6401bcee:	mov    eax,DWORD PTR [esi+0xc]
6401bcf1:	cmp    eax,DWORD PTR ds:0x6402dc4c
6401bcf7:	je     0x6401bd00
6401bcf9:	push   eax
6401bcfa:	call   0x64013a26
6401bcff:	pop    ecx
6401bd00:	mov    eax,DWORD PTR [esi+0x10]
6401bd03:	cmp    eax,DWORD PTR ds:0x6402dc50
6401bd09:	je     0x6401bd12
6401bd0b:	push   eax
6401bd0c:	call   0x64013a26
6401bd11:	pop    ecx
6401bd12:	mov    eax,DWORD PTR [esi+0x14]
6401bd15:	cmp    eax,DWORD PTR ds:0x6402dc54
6401bd1b:	je     0x6401bd24
6401bd1d:	push   eax
6401bd1e:	call   0x64013a26
6401bd23:	pop    ecx
6401bd24:	mov    eax,DWORD PTR [esi+0x18]
6401bd27:	cmp    eax,DWORD PTR ds:0x6402dc58
6401bd2d:	je     0x6401bd36
6401bd2f:	push   eax
6401bd30:	call   0x64013a26
6401bd35:	pop    ecx
6401bd36:	mov    eax,DWORD PTR [esi+0x1c]
6401bd39:	cmp    eax,DWORD PTR ds:0x6402dc5c
6401bd3f:	je     0x6401bd48
6401bd41:	push   eax
6401bd42:	call   0x64013a26
6401bd47:	pop    ecx
6401bd48:	mov    eax,DWORD PTR [esi+0x20]
6401bd4b:	cmp    eax,DWORD PTR ds:0x6402dc60
6401bd51:	je     0x6401bd5a
6401bd53:	push   eax
6401bd54:	call   0x64013a26
6401bd59:	pop    ecx
6401bd5a:	mov    esi,DWORD PTR [esi+0x24]
6401bd5d:	cmp    esi,DWORD PTR ds:0x6402dc64
6401bd63:	je     0x6401bd6c
6401bd65:	push   esi
6401bd66:	call   0x64013a26
6401bd6b:	pop    ecx
6401bd6c:	pop    esi
6401bd6d:	ret    
6401bd6e:	mov    eax,DWORD PTR [esp+0x4]
6401bd72:	push   ebx
6401bd73:	xor    ebx,ebx
6401bd75:	cmp    eax,ebx
6401bd77:	push   esi
6401bd78:	push   edi
6401bd79:	je     0x6401bd83
6401bd7b:	mov    edi,DWORD PTR [esp+0x14]
6401bd7f:	cmp    edi,ebx
6401bd81:	ja     0x6401bd9e
6401bd83:	call   0x64014950
6401bd88:	push   0x16
6401bd8a:	pop    esi
6401bd8b:	mov    DWORD PTR [eax],esi
6401bd8d:	push   ebx
6401bd8e:	push   ebx
6401bd8f:	push   ebx
6401bd90:	push   ebx
6401bd91:	push   ebx
6401bd92:	call   0x640126c4
6401bd97:	add    esp,0x14
6401bd9a:	mov    eax,esi
6401bd9c:	jmp    0x6401bddb
6401bd9e:	mov    esi,DWORD PTR [esp+0x18]
6401bda2:	cmp    esi,ebx
6401bda4:	jne    0x6401bdaa
6401bda6:	mov    BYTE PTR [eax],bl
6401bda8:	jmp    0x6401bd83
6401bdaa:	mov    edx,eax
6401bdac:	cmp    BYTE PTR [edx],bl
6401bdae:	je     0x6401bdb4
6401bdb0:	inc    edx
6401bdb1:	dec    edi
6401bdb2:	jne    0x6401bdac
6401bdb4:	cmp    edi,ebx
6401bdb6:	je     0x6401bda6
6401bdb8:	mov    cl,BYTE PTR [esi]
6401bdba:	mov    BYTE PTR [edx],cl
6401bdbc:	inc    edx
6401bdbd:	inc    esi
6401bdbe:	cmp    cl,bl
6401bdc0:	je     0x6401bdc5
6401bdc2:	dec    edi
6401bdc3:	jne    0x6401bdb8
6401bdc5:	cmp    edi,ebx
6401bdc7:	jne    0x6401bdd9
6401bdc9:	mov    BYTE PTR [eax],bl
6401bdcb:	call   0x64014950
6401bdd0:	push   0x22
6401bdd2:	pop    ecx
6401bdd3:	mov    DWORD PTR [eax],ecx
6401bdd5:	mov    esi,ecx
6401bdd7:	jmp    0x6401bd8d
6401bdd9:	xor    eax,eax
6401bddb:	pop    edi
6401bddc:	pop    esi
6401bddd:	pop    ebx
6401bdde:	ret    
6401bddf:	int3   
6401bde0:	push   ebp
6401bde1:	mov    ebp,esp
6401bde3:	push   esi
6401bde4:	xor    eax,eax
6401bde6:	push   eax
6401bde7:	push   eax
6401bde8:	push   eax
6401bde9:	push   eax
6401bdea:	push   eax
6401bdeb:	push   eax
6401bdec:	push   eax
6401bded:	push   eax
6401bdee:	mov    edx,DWORD PTR [ebp+0xc]
6401bdf1:	lea    ecx,[ecx+0x0]
6401bdf4:	mov    al,BYTE PTR [edx]
6401bdf6:	or     al,al
6401bdf8:	je     0x6401be03
6401bdfa:	add    edx,0x1
6401bdfd:	bts    DWORD PTR [esp],eax
6401be01:	jmp    0x6401bdf4
6401be03:	mov    esi,DWORD PTR [ebp+0x8]
6401be06:	or     ecx,0xffffffff
6401be09:	lea    ecx,[ecx+0x0]
6401be0c:	add    ecx,0x1
6401be0f:	mov    al,BYTE PTR [esi]
6401be11:	or     al,al
6401be13:	je     0x6401be1e
6401be15:	add    esi,0x1
6401be18:	bt     DWORD PTR [esp],eax
6401be1c:	jae    0x6401be0c
6401be1e:	mov    eax,ecx
6401be20:	add    esp,0x20
6401be23:	pop    esi
6401be24:	leave  
6401be25:	ret    
6401be26:	push   ebp
6401be27:	mov    ebp,esp
6401be29:	push   ebx
6401be2a:	push   esi
6401be2b:	mov    esi,DWORD PTR [ebp+0x8]
6401be2e:	xor    ebx,ebx
6401be30:	cmp    DWORD PTR [ebp+0x14],ebx
6401be33:	push   edi
6401be34:	jne    0x6401be46
6401be36:	cmp    esi,ebx
6401be38:	jne    0x6401be4a
6401be3a:	cmp    DWORD PTR [ebp+0xc],ebx
6401be3d:	jne    0x6401be51
6401be3f:	xor    eax,eax
6401be41:	pop    edi
6401be42:	pop    esi
6401be43:	pop    ebx
6401be44:	pop    ebp
6401be45:	ret    
6401be46:	cmp    esi,ebx
6401be48:	je     0x6401be51
6401be4a:	mov    edi,DWORD PTR [ebp+0xc]
6401be4d:	cmp    edi,ebx
6401be4f:	ja     0x6401be6c
6401be51:	call   0x64014950
6401be56:	push   0x16
6401be58:	pop    esi
6401be59:	mov    DWORD PTR [eax],esi
6401be5b:	push   ebx
6401be5c:	push   ebx
6401be5d:	push   ebx
6401be5e:	push   ebx
6401be5f:	push   ebx
6401be60:	call   0x640126c4
6401be65:	add    esp,0x14
6401be68:	mov    eax,esi
6401be6a:	jmp    0x6401be41
6401be6c:	cmp    DWORD PTR [ebp+0x14],ebx
6401be6f:	jne    0x6401be75
6401be71:	mov    BYTE PTR [esi],bl
6401be73:	jmp    0x6401be3f
6401be75:	mov    edx,DWORD PTR [ebp+0x10]
6401be78:	cmp    edx,ebx
6401be7a:	jne    0x6401be80
6401be7c:	mov    BYTE PTR [esi],bl
6401be7e:	jmp    0x6401be51
6401be80:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401be84:	mov    eax,esi
6401be86:	jne    0x6401be97
6401be88:	mov    cl,BYTE PTR [edx]
6401be8a:	mov    BYTE PTR [eax],cl
6401be8c:	inc    eax
6401be8d:	inc    edx
6401be8e:	cmp    cl,bl
6401be90:	je     0x6401beb0
6401be92:	dec    edi
6401be93:	jne    0x6401be88
6401be95:	jmp    0x6401beb0
6401be97:	mov    cl,BYTE PTR [edx]
6401be99:	mov    BYTE PTR [eax],cl
6401be9b:	inc    eax
6401be9c:	inc    edx
6401be9d:	cmp    cl,bl
6401be9f:	je     0x6401bea9
6401bea1:	dec    edi
6401bea2:	je     0x6401bea9
6401bea4:	dec    DWORD PTR [ebp+0x14]
6401bea7:	jne    0x6401be97
6401bea9:	cmp    DWORD PTR [ebp+0x14],ebx
6401beac:	jne    0x6401beb0
6401beae:	mov    BYTE PTR [eax],bl
6401beb0:	cmp    edi,ebx
6401beb2:	jne    0x6401be3f
6401beb4:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401beb8:	jne    0x6401bec9
6401beba:	mov    eax,DWORD PTR [ebp+0xc]
6401bebd:	push   0x50
6401bebf:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401bec3:	pop    eax
6401bec4:	jmp    0x6401be41
6401bec9:	mov    BYTE PTR [esi],bl
6401becb:	call   0x64014950
6401bed0:	push   0x22
6401bed2:	pop    ecx
6401bed3:	mov    DWORD PTR [eax],ecx
6401bed5:	mov    esi,ecx
6401bed7:	jmp    0x6401be5b
6401bed9:	int3   
6401beda:	int3   
6401bedb:	int3   
6401bedc:	int3   
6401bedd:	int3   
6401bede:	int3   
6401bedf:	int3   
6401bee0:	push   ebp
6401bee1:	mov    ebp,esp
6401bee3:	push   esi
6401bee4:	xor    eax,eax
6401bee6:	push   eax
6401bee7:	push   eax
6401bee8:	push   eax
6401bee9:	push   eax
6401beea:	push   eax
6401beeb:	push   eax
6401beec:	push   eax
6401beed:	push   eax
6401beee:	mov    edx,DWORD PTR [ebp+0xc]
6401bef1:	lea    ecx,[ecx+0x0]
6401bef4:	mov    al,BYTE PTR [edx]
6401bef6:	or     al,al
6401bef8:	je     0x6401bf03
6401befa:	add    edx,0x1
6401befd:	bts    DWORD PTR [esp],eax
6401bf01:	jmp    0x6401bef4
6401bf03:	mov    esi,DWORD PTR [ebp+0x8]
6401bf06:	mov    edi,edi
6401bf08:	mov    al,BYTE PTR [esi]
6401bf0a:	or     al,al
6401bf0c:	je     0x6401bf1a
6401bf0e:	add    esi,0x1
6401bf11:	bt     DWORD PTR [esp],eax
6401bf15:	jae    0x6401bf08
6401bf17:	lea    eax,[esi-0x1]
6401bf1a:	add    esp,0x20
6401bf1d:	pop    esi
6401bf1e:	leave  
6401bf1f:	ret    
6401bf20:	push   ebp
6401bf21:	mov    ebp,esp
6401bf23:	push   ecx
6401bf24:	push   ecx
6401bf25:	mov    eax,DWORD PTR [ebp+0xc]
6401bf28:	push   esi
6401bf29:	mov    esi,DWORD PTR [ebp+0x8]
6401bf2c:	mov    DWORD PTR [ebp-0x8],eax
6401bf2f:	mov    eax,DWORD PTR [ebp+0x10]
6401bf32:	push   edi
6401bf33:	push   esi
6401bf34:	mov    DWORD PTR [ebp-0x4],eax
6401bf37:	call   0x6401de5f
6401bf3c:	or     edi,0xffffffff
6401bf3f:	cmp    eax,edi
6401bf41:	pop    ecx
6401bf42:	jne    0x6401bf55
6401bf44:	call   0x64014950
6401bf49:	mov    DWORD PTR [eax],0x9
6401bf4f:	mov    eax,edi
6401bf51:	mov    edx,edi
6401bf53:	jmp    0x6401bf9f
6401bf55:	push   DWORD PTR [ebp+0x14]
6401bf58:	lea    ecx,[ebp-0x4]
6401bf5b:	push   ecx
6401bf5c:	push   DWORD PTR [ebp-0x8]
6401bf5f:	push   eax
6401bf60:	call   DWORD PTR ds:0x640250d8
6401bf66:	cmp    eax,edi
6401bf68:	mov    DWORD PTR [ebp-0x8],eax
6401bf6b:	jne    0x6401bf80
6401bf6d:	call   DWORD PTR ds:0x64025044
6401bf73:	test   eax,eax
6401bf75:	je     0x6401bf80
6401bf77:	push   eax
6401bf78:	call   0x64014976
6401bf7d:	pop    ecx
6401bf7e:	jmp    0x6401bf4f
6401bf80:	mov    eax,esi
6401bf82:	sar    eax,0x5
6401bf85:	mov    eax,DWORD PTR [eax*4+0x64032520]
6401bf8c:	and    esi,0x1f
6401bf8f:	shl    esi,0x6
6401bf92:	lea    eax,[eax+esi*1+0x4]
6401bf96:	and    BYTE PTR [eax],0xfd
6401bf99:	mov    eax,DWORD PTR [ebp-0x8]
6401bf9c:	mov    edx,DWORD PTR [ebp-0x4]
6401bf9f:	pop    edi
6401bfa0:	pop    esi
6401bfa1:	leave  
6401bfa2:	ret    
6401bfa3:	push   0x14
6401bfa5:	push   0x6402a998
6401bfaa:	call   0x64014150
6401bfaf:	or     esi,0xffffffff
6401bfb2:	mov    DWORD PTR [ebp-0x24],esi
6401bfb5:	mov    DWORD PTR [ebp-0x20],esi
6401bfb8:	mov    eax,DWORD PTR [ebp+0x8]
6401bfbb:	cmp    eax,0xfffffffe
6401bfbe:	jne    0x6401bfdc
6401bfc0:	call   0x64014963
6401bfc5:	and    DWORD PTR [eax],0x0
6401bfc8:	call   0x64014950
6401bfcd:	mov    DWORD PTR [eax],0x9
6401bfd3:	mov    eax,esi
6401bfd5:	mov    edx,esi
6401bfd7:	jmp    0x6401c0ac
6401bfdc:	xor    edi,edi
6401bfde:	cmp    eax,edi
6401bfe0:	jl     0x6401bfea
6401bfe2:	cmp    eax,DWORD PTR ds:0x64032500
6401bfe8:	jb     0x6401c00b
6401bfea:	call   0x64014963
6401bfef:	mov    DWORD PTR [eax],edi
6401bff1:	call   0x64014950
6401bff6:	mov    DWORD PTR [eax],0x9
6401bffc:	push   edi
6401bffd:	push   edi
6401bffe:	push   edi
6401bfff:	push   edi
6401c000:	push   edi
6401c001:	call   0x640126c4
6401c006:	add    esp,0x14
6401c009:	jmp    0x6401bfd3
6401c00b:	mov    ecx,eax
6401c00d:	sar    ecx,0x5
6401c010:	lea    ebx,[ecx*4+0x64032520]
6401c017:	mov    esi,eax
6401c019:	and    esi,0x1f
6401c01c:	shl    esi,0x6
6401c01f:	mov    ecx,DWORD PTR [ebx]
6401c021:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401c026:	and    ecx,0x1
6401c029:	jne    0x6401c051
6401c02b:	call   0x64014963
6401c030:	mov    DWORD PTR [eax],edi
6401c032:	call   0x64014950
6401c037:	mov    DWORD PTR [eax],0x9
6401c03d:	push   edi
6401c03e:	push   edi
6401c03f:	push   edi
6401c040:	push   edi
6401c041:	push   edi
6401c042:	call   0x640126c4
6401c047:	add    esp,0x14
6401c04a:	or     edx,0xffffffff
6401c04d:	mov    eax,edx
6401c04f:	jmp    0x6401c0ac
6401c051:	push   eax
6401c052:	call   0x6401ded0
6401c057:	pop    ecx
6401c058:	mov    DWORD PTR [ebp-0x4],edi
6401c05b:	mov    eax,DWORD PTR [ebx]
6401c05d:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401c062:	je     0x6401c080
6401c064:	push   DWORD PTR [ebp+0x14]
6401c067:	push   DWORD PTR [ebp+0x10]
6401c06a:	push   DWORD PTR [ebp+0xc]
6401c06d:	push   DWORD PTR [ebp+0x8]
6401c070:	call   0x6401bf20
6401c075:	add    esp,0x10
6401c078:	mov    DWORD PTR [ebp-0x24],eax
6401c07b:	mov    DWORD PTR [ebp-0x20],edx
6401c07e:	jmp    0x6401c09a
6401c080:	call   0x64014950
6401c085:	mov    DWORD PTR [eax],0x9
6401c08b:	call   0x64014963
6401c090:	mov    DWORD PTR [eax],edi
6401c092:	or     DWORD PTR [ebp-0x24],0xffffffff
6401c096:	or     DWORD PTR [ebp-0x20],0xffffffff
6401c09a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c0a1:	call   0x6401c0b2
6401c0a6:	mov    eax,DWORD PTR [ebp-0x24]
6401c0a9:	mov    edx,DWORD PTR [ebp-0x20]
6401c0ac:	call   0x64014195
6401c0b1:	ret    
6401c0b2:	push   DWORD PTR [ebp+0x8]
6401c0b5:	call   0x6401df70
6401c0ba:	pop    ecx
6401c0bb:	ret    
6401c0bc:	push   ebp
6401c0bd:	lea    ebp,[esp-0x514]
6401c0c4:	sub    esp,0x590
6401c0ca:	mov    eax,ds:0x6402d09c
6401c0cf:	xor    eax,ebp
6401c0d1:	mov    DWORD PTR [ebp+0x510],eax
6401c0d7:	mov    eax,DWORD PTR [ebp+0x520]
6401c0dd:	push   esi
6401c0de:	xor    esi,esi
6401c0e0:	cmp    DWORD PTR [ebp+0x524],esi
6401c0e6:	mov    DWORD PTR [ebp-0x64],eax
6401c0e9:	mov    DWORD PTR [ebp-0x60],esi
6401c0ec:	mov    DWORD PTR [ebp-0x68],esi
6401c0ef:	jne    0x6401c0f8
6401c0f1:	xor    eax,eax
6401c0f3:	jmp    0x6401c6c8
6401c0f8:	cmp    eax,esi
6401c0fa:	jne    0x6401c123
6401c0fc:	call   0x64014963
6401c101:	mov    DWORD PTR [eax],esi
6401c103:	call   0x64014950
6401c108:	push   esi
6401c109:	push   esi
6401c10a:	push   esi
6401c10b:	push   esi
6401c10c:	push   esi
6401c10d:	mov    DWORD PTR [eax],0x16
6401c113:	call   0x640126c4
6401c118:	add    esp,0x14
6401c11b:	or     eax,0xffffffff
6401c11e:	jmp    0x6401c6c8
6401c123:	push   ebx
6401c124:	push   edi
6401c125:	mov    edi,DWORD PTR [ebp+0x51c]
6401c12b:	mov    eax,edi
6401c12d:	sar    eax,0x5
6401c130:	lea    esi,[eax*4+0x64032520]
6401c137:	mov    eax,DWORD PTR [esi]
6401c139:	and    edi,0x1f
6401c13c:	shl    edi,0x6
6401c13f:	add    eax,edi
6401c141:	mov    bl,BYTE PTR [eax+0x24]
6401c144:	add    bl,bl
6401c146:	sar    bl,1
6401c148:	cmp    bl,0x2
6401c14b:	mov    DWORD PTR [ebp-0x70],esi
6401c14e:	mov    BYTE PTR [ebp-0x71],bl
6401c151:	je     0x6401c158
6401c153:	cmp    bl,0x1
6401c156:	jne    0x6401c18b
6401c158:	mov    ecx,DWORD PTR [ebp+0x524]
6401c15e:	not    ecx
6401c160:	test   cl,0x1
6401c163:	jne    0x6401c18b
6401c165:	call   0x64014963
6401c16a:	xor    esi,esi
6401c16c:	mov    DWORD PTR [eax],esi
6401c16e:	call   0x64014950
6401c173:	push   esi
6401c174:	push   esi
6401c175:	push   esi
6401c176:	push   esi
6401c177:	push   esi
6401c178:	mov    DWORD PTR [eax],0x16
6401c17e:	call   0x640126c4
6401c183:	add    esp,0x14
6401c186:	jmp    0x6401c6bb
6401c18b:	test   BYTE PTR [eax+0x4],0x20
6401c18f:	je     0x6401c1a5
6401c191:	push   0x2
6401c193:	push   0x0
6401c195:	push   0x0
6401c197:	push   DWORD PTR [ebp+0x51c]
6401c19d:	call   0x6401bf20
6401c1a2:	add    esp,0x10
6401c1a5:	push   DWORD PTR [ebp+0x51c]
6401c1ab:	call   0x6401c7fe
6401c1b0:	test   eax,eax
6401c1b2:	pop    ecx
6401c1b3:	je     0x6401c3f2
6401c1b9:	mov    eax,DWORD PTR [esi]
6401c1bb:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401c1c0:	je     0x6401c3f2
6401c1c6:	call   0x64014c9b
6401c1cb:	mov    eax,DWORD PTR [eax+0x6c]
6401c1ce:	xor    ecx,ecx
6401c1d0:	cmp    DWORD PTR [eax+0x14],ecx
6401c1d3:	lea    eax,[ebp-0x7c]
6401c1d6:	sete   cl
6401c1d9:	push   eax
6401c1da:	mov    eax,DWORD PTR [esi]
6401c1dc:	push   DWORD PTR [edi+eax*1]
6401c1df:	mov    DWORD PTR [ebp-0x78],ecx
6401c1e2:	call   DWORD PTR ds:0x640250d0
6401c1e8:	test   eax,eax
6401c1ea:	je     0x6401c3f2
6401c1f0:	xor    ecx,ecx
6401c1f2:	cmp    DWORD PTR [ebp-0x78],ecx
6401c1f5:	je     0x6401c1ff
6401c1f7:	test   bl,bl
6401c1f9:	je     0x6401c3f4
6401c1ff:	call   DWORD PTR ds:0x640250d4
6401c205:	mov    ebx,DWORD PTR [ebp-0x64]
6401c208:	mov    DWORD PTR [ebp-0x7c],eax
6401c20b:	xor    eax,eax
6401c20d:	cmp    DWORD PTR [ebp+0x524],eax
6401c213:	mov    DWORD PTR [ebp-0x5c],eax
6401c216:	jbe    0x6401c663
6401c21c:	mov    DWORD PTR [ebp-0x54],eax
6401c21f:	mov    al,BYTE PTR [ebp-0x71]
6401c222:	test   al,al
6401c224:	jne    0x6401c367
6401c22a:	mov    cl,BYTE PTR [ebx]
6401c22c:	mov    esi,DWORD PTR [ebp-0x70]
6401c22f:	xor    eax,eax
6401c231:	cmp    cl,0xa
6401c234:	sete   al
6401c237:	mov    DWORD PTR [ebp-0x78],eax
6401c23a:	mov    eax,DWORD PTR [esi]
6401c23c:	add    eax,edi
6401c23e:	cmp    DWORD PTR [eax+0x38],0x0
6401c242:	je     0x6401c262
6401c244:	mov    dl,BYTE PTR [eax+0x34]
6401c247:	mov    BYTE PTR [ebp+0x508],dl
6401c24d:	mov    BYTE PTR [ebp+0x509],cl
6401c253:	and    DWORD PTR [eax+0x38],0x0
6401c257:	push   0x2
6401c259:	lea    eax,[ebp+0x508]
6401c25f:	push   eax
6401c260:	jmp    0x6401c2a7
6401c262:	movsx  eax,cl
6401c265:	push   eax
6401c266:	call   0x64019f60
6401c26b:	test   eax,eax
6401c26d:	pop    ecx
6401c26e:	je     0x6401c2a4
6401c270:	mov    ecx,DWORD PTR [ebp-0x64]
6401c273:	sub    ecx,ebx
6401c275:	add    ecx,DWORD PTR [ebp+0x524]
6401c27b:	xor    eax,eax
6401c27d:	inc    eax
6401c27e:	cmp    ecx,eax
6401c280:	jbe    0x6401c3dc
6401c286:	push   0x2
6401c288:	lea    eax,[ebp-0x58]
6401c28b:	push   ebx
6401c28c:	push   eax
6401c28d:	call   0x6401cd31
6401c292:	add    esp,0xc
6401c295:	cmp    eax,0xffffffff
6401c298:	je     0x6401c65d
6401c29e:	inc    ebx
6401c29f:	inc    DWORD PTR [ebp-0x54]
6401c2a2:	jmp    0x6401c2bc
6401c2a4:	push   0x1
6401c2a6:	push   ebx
6401c2a7:	lea    eax,[ebp-0x58]
6401c2aa:	push   eax
6401c2ab:	call   0x6401cd31
6401c2b0:	add    esp,0xc
6401c2b3:	cmp    eax,0xffffffff
6401c2b6:	je     0x6401c65d
6401c2bc:	xor    eax,eax
6401c2be:	push   eax
6401c2bf:	push   eax
6401c2c0:	push   0x5
6401c2c2:	lea    ecx,[ebp+0x508]
6401c2c8:	push   ecx
6401c2c9:	push   0x1
6401c2cb:	lea    ecx,[ebp-0x58]
6401c2ce:	push   ecx
6401c2cf:	push   eax
6401c2d0:	push   DWORD PTR [ebp-0x7c]
6401c2d3:	inc    ebx
6401c2d4:	inc    DWORD PTR [ebp-0x54]
6401c2d7:	call   DWORD PTR ds:0x64025028
6401c2dd:	mov    esi,eax
6401c2df:	test   esi,esi
6401c2e1:	je     0x6401c65d
6401c2e7:	push   0x0
6401c2e9:	lea    eax,[ebp-0x5c]
6401c2ec:	push   eax
6401c2ed:	push   esi
6401c2ee:	lea    eax,[ebp+0x508]
6401c2f4:	push   eax
6401c2f5:	mov    eax,DWORD PTR [ebp-0x70]
6401c2f8:	mov    eax,DWORD PTR [eax]
6401c2fa:	push   DWORD PTR [edi+eax*1]
6401c2fd:	call   DWORD PTR ds:0x64025088
6401c303:	test   eax,eax
6401c305:	je     0x6401c654
6401c30b:	mov    eax,DWORD PTR [ebp-0x54]
6401c30e:	mov    ecx,DWORD PTR [ebp-0x68]
6401c311:	add    eax,ecx
6401c313:	cmp    DWORD PTR [ebp-0x5c],esi
6401c316:	mov    DWORD PTR [ebp-0x60],eax
6401c319:	jl     0x6401c65d
6401c31f:	cmp    DWORD PTR [ebp-0x78],0x0
6401c323:	je     0x6401c3c8
6401c329:	push   0x0
6401c32b:	lea    eax,[ebp-0x5c]
6401c32e:	push   eax
6401c32f:	push   0x1
6401c331:	lea    eax,[ebp+0x508]
6401c337:	push   eax
6401c338:	mov    eax,DWORD PTR [ebp-0x70]
6401c33b:	mov    eax,DWORD PTR [eax]
6401c33d:	mov    BYTE PTR [ebp+0x508],0xd
6401c344:	push   DWORD PTR [edi+eax*1]
6401c347:	call   DWORD PTR ds:0x64025088
6401c34d:	test   eax,eax
6401c34f:	je     0x6401c654
6401c355:	cmp    DWORD PTR [ebp-0x5c],0x1
6401c359:	jl     0x6401c65d
6401c35f:	inc    DWORD PTR [ebp-0x68]
6401c362:	inc    DWORD PTR [ebp-0x60]
6401c365:	jmp    0x6401c3c8
6401c367:	cmp    al,0x1
6401c369:	je     0x6401c36f
6401c36b:	cmp    al,0x2
6401c36d:	jne    0x6401c387
6401c36f:	movzx  esi,WORD PTR [ebx]
6401c372:	xor    ecx,ecx
6401c374:	cmp    si,0xa
6401c378:	sete   cl
6401c37b:	inc    ebx
6401c37c:	inc    ebx
6401c37d:	add    DWORD PTR [ebp-0x54],0x2
6401c381:	mov    DWORD PTR [ebp-0x58],esi
6401c384:	mov    DWORD PTR [ebp-0x78],ecx
6401c387:	cmp    al,0x1
6401c389:	je     0x6401c38f
6401c38b:	cmp    al,0x2
6401c38d:	jne    0x6401c3c8
6401c38f:	push   DWORD PTR [ebp-0x58]
6401c392:	call   0x6401df92
6401c397:	cmp    ax,WORD PTR [ebp-0x58]
6401c39b:	pop    ecx
6401c39c:	jne    0x6401c654
6401c3a2:	inc    DWORD PTR [ebp-0x60]
6401c3a5:	cmp    DWORD PTR [ebp-0x78],0x0
6401c3a9:	je     0x6401c3c8
6401c3ab:	push   0xd
6401c3ad:	pop    eax
6401c3ae:	push   eax
6401c3af:	mov    DWORD PTR [ebp-0x58],eax
6401c3b2:	call   0x6401df92
6401c3b7:	cmp    ax,WORD PTR [ebp-0x58]
6401c3bb:	pop    ecx
6401c3bc:	jne    0x6401c654
6401c3c2:	inc    DWORD PTR [ebp-0x60]
6401c3c5:	inc    DWORD PTR [ebp-0x68]
6401c3c8:	mov    eax,DWORD PTR [ebp+0x524]
6401c3ce:	cmp    DWORD PTR [ebp-0x54],eax
6401c3d1:	jb     0x6401c21f
6401c3d7:	jmp    0x6401c65d
6401c3dc:	mov    ecx,DWORD PTR [esi]
6401c3de:	mov    dl,BYTE PTR [ebx]
6401c3e0:	inc    DWORD PTR [ebp-0x60]
6401c3e3:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401c3e7:	mov    ecx,DWORD PTR [esi]
6401c3e9:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401c3ed:	jmp    0x6401c65d
6401c3f2:	xor    ecx,ecx
6401c3f4:	mov    eax,DWORD PTR [esi]
6401c3f6:	add    eax,edi
6401c3f8:	test   BYTE PTR [eax+0x4],0x80
6401c3fc:	je     0x6401c62d
6401c402:	test   bl,bl
6401c404:	mov    eax,DWORD PTR [ebp-0x64]
6401c407:	mov    DWORD PTR [ebp-0x58],ecx
6401c40a:	jne    0x6401c4a6
6401c410:	cmp    DWORD PTR [ebp+0x524],ecx
6401c416:	mov    DWORD PTR [ebp-0x5c],eax
6401c419:	jbe    0x6401c693
6401c41f:	jmp    0x6401c424
6401c421:	mov    esi,DWORD PTR [ebp-0x70]
6401c424:	mov    ecx,DWORD PTR [ebp-0x5c]
6401c427:	and    DWORD PTR [ebp-0x54],0x0
6401c42b:	sub    ecx,DWORD PTR [ebp-0x64]
6401c42e:	lea    eax,[ebp-0x50]
6401c431:	cmp    ecx,DWORD PTR [ebp+0x524]
6401c437:	jae    0x6401c460
6401c439:	mov    edx,DWORD PTR [ebp-0x5c]
6401c43c:	inc    DWORD PTR [ebp-0x5c]
6401c43f:	mov    dl,BYTE PTR [edx]
6401c441:	inc    ecx
6401c442:	cmp    dl,0xa
6401c445:	jne    0x6401c451
6401c447:	inc    DWORD PTR [ebp-0x68]
6401c44a:	mov    BYTE PTR [eax],0xd
6401c44d:	inc    eax
6401c44e:	inc    DWORD PTR [ebp-0x54]
6401c451:	mov    BYTE PTR [eax],dl
6401c453:	inc    eax
6401c454:	inc    DWORD PTR [ebp-0x54]
6401c457:	cmp    DWORD PTR [ebp-0x54],0x400
6401c45e:	jb     0x6401c431
6401c460:	mov    ebx,eax
6401c462:	lea    eax,[ebp-0x50]
6401c465:	sub    ebx,eax
6401c467:	push   0x0
6401c469:	lea    eax,[ebp-0x6c]
6401c46c:	push   eax
6401c46d:	push   ebx
6401c46e:	lea    eax,[ebp-0x50]
6401c471:	push   eax
6401c472:	mov    eax,DWORD PTR [esi]
6401c474:	push   DWORD PTR [edi+eax*1]
6401c477:	call   DWORD PTR ds:0x64025088
6401c47d:	test   eax,eax
6401c47f:	je     0x6401c654
6401c485:	mov    eax,DWORD PTR [ebp-0x6c]
6401c488:	add    DWORD PTR [ebp-0x60],eax
6401c48b:	cmp    eax,ebx
6401c48d:	jl     0x6401c65d
6401c493:	mov    eax,DWORD PTR [ebp-0x5c]
6401c496:	sub    eax,DWORD PTR [ebp-0x64]
6401c499:	cmp    eax,DWORD PTR [ebp+0x524]
6401c49f:	jb     0x6401c421
6401c4a1:	jmp    0x6401c65d
6401c4a6:	cmp    bl,0x2
6401c4a9:	mov    DWORD PTR [ebp-0x54],eax
6401c4ac:	jne    0x6401c555
6401c4b2:	cmp    DWORD PTR [ebp+0x524],ecx
6401c4b8:	jbe    0x6401c693
6401c4be:	jmp    0x6401c4c3
6401c4c0:	mov    esi,DWORD PTR [ebp-0x70]
6401c4c3:	mov    ecx,DWORD PTR [ebp-0x54]
6401c4c6:	and    DWORD PTR [ebp-0x5c],0x0
6401c4ca:	sub    ecx,DWORD PTR [ebp-0x64]
6401c4cd:	lea    eax,[ebp-0x50]
6401c4d0:	cmp    ecx,DWORD PTR [ebp+0x524]
6401c4d6:	jae    0x6401c50b
6401c4d8:	mov    edx,DWORD PTR [ebp-0x54]
6401c4db:	add    DWORD PTR [ebp-0x54],0x2
6401c4df:	movzx  edx,WORD PTR [edx]
6401c4e2:	inc    ecx
6401c4e3:	inc    ecx
6401c4e4:	cmp    dx,0xa
6401c4e8:	jne    0x6401c4f9
6401c4ea:	add    DWORD PTR [ebp-0x68],0x2
6401c4ee:	mov    WORD PTR [eax],0xd
6401c4f3:	inc    eax
6401c4f4:	inc    eax
6401c4f5:	add    DWORD PTR [ebp-0x5c],0x2
6401c4f9:	add    DWORD PTR [ebp-0x5c],0x2
6401c4fd:	mov    WORD PTR [eax],dx
6401c500:	inc    eax
6401c501:	inc    eax
6401c502:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401c509:	jb     0x6401c4d0
6401c50b:	mov    ebx,eax
6401c50d:	lea    eax,[ebp-0x50]
6401c510:	sub    ebx,eax
6401c512:	push   0x0
6401c514:	lea    eax,[ebp-0x6c]
6401c517:	push   eax
6401c518:	push   ebx
6401c519:	lea    eax,[ebp-0x50]
6401c51c:	push   eax
6401c51d:	mov    eax,DWORD PTR [esi]
6401c51f:	push   DWORD PTR [edi+eax*1]
6401c522:	call   DWORD PTR ds:0x64025088
6401c528:	test   eax,eax
6401c52a:	je     0x6401c654
6401c530:	mov    eax,DWORD PTR [ebp-0x6c]
6401c533:	add    DWORD PTR [ebp-0x60],eax
6401c536:	cmp    eax,ebx
6401c538:	jl     0x6401c65d
6401c53e:	mov    eax,DWORD PTR [ebp-0x54]
6401c541:	sub    eax,DWORD PTR [ebp-0x64]
6401c544:	cmp    eax,DWORD PTR [ebp+0x524]
6401c54a:	jb     0x6401c4c0
6401c550:	jmp    0x6401c65d
6401c555:	cmp    DWORD PTR [ebp+0x524],ecx
6401c55b:	jbe    0x6401c693
6401c561:	mov    ecx,DWORD PTR [ebp-0x54]
6401c564:	and    DWORD PTR [ebp-0x5c],0x0
6401c568:	sub    ecx,DWORD PTR [ebp-0x64]
6401c56b:	push   0x2
6401c56d:	lea    eax,[ebp+0x3b4]
6401c573:	pop    esi
6401c574:	cmp    ecx,DWORD PTR [ebp+0x524]
6401c57a:	jae    0x6401c5a8
6401c57c:	mov    edx,DWORD PTR [ebp-0x54]
6401c57f:	movzx  edx,WORD PTR [edx]
6401c582:	add    DWORD PTR [ebp-0x54],esi
6401c585:	add    ecx,esi
6401c587:	cmp    dx,0xa
6401c58b:	jne    0x6401c597
6401c58d:	mov    WORD PTR [eax],0xd
6401c592:	add    eax,esi
6401c594:	add    DWORD PTR [ebp-0x5c],esi
6401c597:	add    DWORD PTR [ebp-0x5c],esi
6401c59a:	mov    WORD PTR [eax],dx
6401c59d:	add    eax,esi
6401c59f:	cmp    DWORD PTR [ebp-0x5c],0x152
6401c5a6:	jb     0x6401c574
6401c5a8:	xor    esi,esi
6401c5aa:	push   esi
6401c5ab:	push   esi
6401c5ac:	push   0x2ab
6401c5b1:	lea    ecx,[ebp+0x104]
6401c5b7:	push   ecx
6401c5b8:	lea    ecx,[ebp+0x3b4]
6401c5be:	sub    eax,ecx
6401c5c0:	cdq    
6401c5c1:	sub    eax,edx
6401c5c3:	sar    eax,1
6401c5c5:	push   eax
6401c5c6:	mov    eax,ecx
6401c5c8:	push   eax
6401c5c9:	push   esi
6401c5ca:	push   0xfde9
6401c5cf:	call   DWORD PTR ds:0x64025028
6401c5d5:	mov    ebx,eax
6401c5d7:	cmp    ebx,esi
6401c5d9:	je     0x6401c654
6401c5db:	push   0x0
6401c5dd:	lea    eax,[ebp-0x6c]
6401c5e0:	push   eax
6401c5e1:	mov    eax,ebx
6401c5e3:	sub    eax,esi
6401c5e5:	push   eax
6401c5e6:	lea    eax,[ebp+esi*1+0x104]
6401c5ed:	push   eax
6401c5ee:	mov    eax,DWORD PTR [ebp-0x70]
6401c5f1:	mov    eax,DWORD PTR [eax]
6401c5f3:	push   DWORD PTR [edi+eax*1]
6401c5f6:	call   DWORD PTR ds:0x64025088
6401c5fc:	test   eax,eax
6401c5fe:	je     0x6401c609
6401c600:	add    esi,DWORD PTR [ebp-0x6c]
6401c603:	cmp    ebx,esi
6401c605:	jg     0x6401c5db
6401c607:	jmp    0x6401c612
6401c609:	call   DWORD PTR ds:0x64025044
6401c60f:	mov    DWORD PTR [ebp-0x58],eax
6401c612:	cmp    ebx,esi
6401c614:	jg     0x6401c65d
6401c616:	mov    eax,DWORD PTR [ebp-0x54]
6401c619:	sub    eax,DWORD PTR [ebp-0x64]
6401c61c:	cmp    eax,DWORD PTR [ebp+0x524]
6401c622:	mov    DWORD PTR [ebp-0x60],eax
6401c625:	jb     0x6401c561
6401c62b:	jmp    0x6401c65d
6401c62d:	push   0x0
6401c62f:	lea    ecx,[ebp-0x6c]
6401c632:	push   ecx
6401c633:	push   DWORD PTR [ebp+0x524]
6401c639:	push   DWORD PTR [ebp-0x64]
6401c63c:	push   DWORD PTR [eax]
6401c63e:	call   DWORD PTR ds:0x64025088
6401c644:	test   eax,eax
6401c646:	je     0x6401c654
6401c648:	mov    eax,DWORD PTR [ebp-0x6c]
6401c64b:	and    DWORD PTR [ebp-0x58],0x0
6401c64f:	mov    DWORD PTR [ebp-0x60],eax
6401c652:	jmp    0x6401c65d
6401c654:	call   DWORD PTR ds:0x64025044
6401c65a:	mov    DWORD PTR [ebp-0x58],eax
6401c65d:	cmp    DWORD PTR [ebp-0x60],0x0
6401c661:	jne    0x6401c6c0
6401c663:	cmp    DWORD PTR [ebp-0x58],0x0
6401c667:	je     0x6401c690
6401c669:	push   0x5
6401c66b:	pop    esi
6401c66c:	cmp    DWORD PTR [ebp-0x58],esi
6401c66f:	jne    0x6401c685
6401c671:	call   0x64014950
6401c676:	mov    DWORD PTR [eax],0x9
6401c67c:	call   0x64014963
6401c681:	mov    DWORD PTR [eax],esi
6401c683:	jmp    0x6401c6bb
6401c685:	push   DWORD PTR [ebp-0x58]
6401c688:	call   0x64014976
6401c68d:	pop    ecx
6401c68e:	jmp    0x6401c6bb
6401c690:	mov    esi,DWORD PTR [ebp-0x70]
6401c693:	mov    eax,DWORD PTR [esi]
6401c695:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401c69a:	je     0x6401c6a8
6401c69c:	mov    eax,DWORD PTR [ebp-0x64]
6401c69f:	cmp    BYTE PTR [eax],0x1a
6401c6a2:	jne    0x6401c6a8
6401c6a4:	xor    eax,eax
6401c6a6:	jmp    0x6401c6c6
6401c6a8:	call   0x64014950
6401c6ad:	mov    DWORD PTR [eax],0x1c
6401c6b3:	call   0x64014963
6401c6b8:	and    DWORD PTR [eax],0x0
6401c6bb:	or     eax,0xffffffff
6401c6be:	jmp    0x6401c6c6
6401c6c0:	mov    eax,DWORD PTR [ebp-0x60]
6401c6c3:	sub    eax,DWORD PTR [ebp-0x68]
6401c6c6:	pop    edi
6401c6c7:	pop    ebx
6401c6c8:	mov    ecx,DWORD PTR [ebp+0x510]
6401c6ce:	xor    ecx,ebp
6401c6d0:	pop    esi
6401c6d1:	call   0x64012b8c
6401c6d6:	add    ebp,0x514
6401c6dc:	leave  
6401c6dd:	ret    
6401c6de:	push   0x10
6401c6e0:	push   0x6402a9b8
6401c6e5:	call   0x64014150
6401c6ea:	mov    eax,DWORD PTR [ebp+0x8]
6401c6ed:	cmp    eax,0xfffffffe
6401c6f0:	jne    0x6401c70d
6401c6f2:	call   0x64014963
6401c6f7:	and    DWORD PTR [eax],0x0
6401c6fa:	call   0x64014950
6401c6ff:	mov    DWORD PTR [eax],0x9
6401c705:	or     eax,0xffffffff
6401c708:	jmp    0x6401c7aa
6401c70d:	xor    edi,edi
6401c70f:	cmp    eax,edi
6401c711:	jl     0x6401c71b
6401c713:	cmp    eax,DWORD PTR ds:0x64032500
6401c719:	jb     0x6401c73c
6401c71b:	call   0x64014963
6401c720:	mov    DWORD PTR [eax],edi
6401c722:	call   0x64014950
6401c727:	mov    DWORD PTR [eax],0x9
6401c72d:	push   edi
6401c72e:	push   edi
6401c72f:	push   edi
6401c730:	push   edi
6401c731:	push   edi
6401c732:	call   0x640126c4
6401c737:	add    esp,0x14
6401c73a:	jmp    0x6401c705
6401c73c:	mov    ecx,eax
6401c73e:	sar    ecx,0x5
6401c741:	lea    ebx,[ecx*4+0x64032520]
6401c748:	mov    esi,eax
6401c74a:	and    esi,0x1f
6401c74d:	shl    esi,0x6
6401c750:	mov    ecx,DWORD PTR [ebx]
6401c752:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401c757:	and    ecx,0x1
6401c75a:	je     0x6401c71b
6401c75c:	push   eax
6401c75d:	call   0x6401ded0
6401c762:	pop    ecx
6401c763:	mov    DWORD PTR [ebp-0x4],edi
6401c766:	mov    eax,DWORD PTR [ebx]
6401c768:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401c76d:	je     0x6401c785
6401c76f:	push   DWORD PTR [ebp+0x10]
6401c772:	push   DWORD PTR [ebp+0xc]
6401c775:	push   DWORD PTR [ebp+0x8]
6401c778:	call   0x6401c0bc
6401c77d:	add    esp,0xc
6401c780:	mov    DWORD PTR [ebp-0x1c],eax
6401c783:	jmp    0x6401c79b
6401c785:	call   0x64014950
6401c78a:	mov    DWORD PTR [eax],0x9
6401c790:	call   0x64014963
6401c795:	mov    DWORD PTR [eax],edi
6401c797:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401c79b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c7a2:	call   0x6401c7b0
6401c7a7:	mov    eax,DWORD PTR [ebp-0x1c]
6401c7aa:	call   0x64014195
6401c7af:	ret    
6401c7b0:	push   DWORD PTR [ebp+0x8]
6401c7b3:	call   0x6401df70
6401c7b8:	pop    ecx
6401c7b9:	ret    
6401c7ba:	inc    DWORD PTR ds:0x6402ef54
6401c7c0:	push   0x1000
6401c7c5:	call   0x64015e60
6401c7ca:	test   eax,eax
6401c7cc:	pop    ecx
6401c7cd:	mov    ecx,DWORD PTR [esp+0x4]
6401c7d1:	mov    DWORD PTR [ecx+0x8],eax
6401c7d4:	je     0x6401c7e3
6401c7d6:	or     DWORD PTR [ecx+0xc],0x8
6401c7da:	mov    DWORD PTR [ecx+0x18],0x1000
6401c7e1:	jmp    0x6401c7f4
6401c7e3:	or     DWORD PTR [ecx+0xc],0x4
6401c7e7:	lea    eax,[ecx+0x14]
6401c7ea:	mov    DWORD PTR [ecx+0x8],eax
6401c7ed:	mov    DWORD PTR [ecx+0x18],0x2
6401c7f4:	mov    eax,DWORD PTR [ecx+0x8]
6401c7f7:	and    DWORD PTR [ecx+0x4],0x0
6401c7fb:	mov    DWORD PTR [ecx],eax
6401c7fd:	ret    
6401c7fe:	mov    eax,DWORD PTR [esp+0x4]
6401c802:	cmp    eax,0xfffffffe
6401c805:	jne    0x6401c815
6401c807:	call   0x64014950
6401c80c:	mov    DWORD PTR [eax],0x9
6401c812:	xor    eax,eax
6401c814:	ret    
6401c815:	push   esi
6401c816:	xor    esi,esi
6401c818:	cmp    eax,esi
6401c81a:	jl     0x6401c824
6401c81c:	cmp    eax,DWORD PTR ds:0x64032500
6401c822:	jb     0x6401c840
6401c824:	call   0x64014950
6401c829:	push   esi
6401c82a:	push   esi
6401c82b:	push   esi
6401c82c:	push   esi
6401c82d:	push   esi
6401c82e:	mov    DWORD PTR [eax],0x9
6401c834:	call   0x640126c4
6401c839:	add    esp,0x14
6401c83c:	xor    eax,eax
6401c83e:	pop    esi
6401c83f:	ret    
6401c840:	mov    ecx,eax
6401c842:	and    eax,0x1f
6401c845:	sar    ecx,0x5
6401c848:	mov    ecx,DWORD PTR [ecx*4+0x64032520]
6401c84f:	shl    eax,0x6
6401c852:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401c857:	and    eax,0x40
6401c85a:	pop    esi
6401c85b:	ret    
6401c85c:	mov    eax,0x6402dc80
6401c861:	ret    
6401c862:	mov    eax,ds:0x640324e0
6401c867:	test   eax,eax
6401c869:	push   esi
6401c86a:	push   0x14
6401c86c:	pop    esi
6401c86d:	jne    0x6401c876
6401c86f:	mov    eax,0x200
6401c874:	jmp    0x6401c87c
6401c876:	cmp    eax,esi
6401c878:	jge    0x6401c881
6401c87a:	mov    eax,esi
6401c87c:	mov    ds:0x640324e0,eax
6401c881:	push   0x4
6401c883:	push   eax
6401c884:	call   0x64015ea0
6401c889:	test   eax,eax
6401c88b:	pop    ecx
6401c88c:	pop    ecx
6401c88d:	mov    ds:0x640314c0,eax
6401c892:	jne    0x6401c8b2
6401c894:	push   0x4
6401c896:	push   esi
6401c897:	mov    DWORD PTR ds:0x640324e0,esi
6401c89d:	call   0x64015ea0
6401c8a2:	test   eax,eax
6401c8a4:	pop    ecx
6401c8a5:	pop    ecx
6401c8a6:	mov    ds:0x640314c0,eax
6401c8ab:	jne    0x6401c8b2
6401c8ad:	push   0x1a
6401c8af:	pop    eax
6401c8b0:	pop    esi
6401c8b1:	ret    
6401c8b2:	xor    edx,edx
6401c8b4:	mov    ecx,0x6402dc80
6401c8b9:	jmp    0x6401c8c0
6401c8bb:	mov    eax,ds:0x640314c0
6401c8c0:	mov    DWORD PTR [edx+eax*1],ecx
6401c8c3:	add    ecx,0x20
6401c8c6:	add    edx,0x4
6401c8c9:	cmp    ecx,0x6402df00
6401c8cf:	jl     0x6401c8bb
6401c8d1:	push   0xfffffffe
6401c8d3:	pop    esi
6401c8d4:	xor    edx,edx
6401c8d6:	mov    ecx,0x6402dc90
6401c8db:	push   edi
6401c8dc:	mov    eax,edx
6401c8de:	sar    eax,0x5
6401c8e1:	mov    eax,DWORD PTR [eax*4+0x64032520]
6401c8e8:	mov    edi,edx
6401c8ea:	and    edi,0x1f
6401c8ed:	shl    edi,0x6
6401c8f0:	mov    eax,DWORD PTR [edi+eax*1]
6401c8f3:	cmp    eax,0xffffffff
6401c8f6:	je     0x6401c900
6401c8f8:	cmp    eax,esi
6401c8fa:	je     0x6401c900
6401c8fc:	test   eax,eax
6401c8fe:	jne    0x6401c902
6401c900:	mov    DWORD PTR [ecx],esi
6401c902:	add    ecx,0x20
6401c905:	inc    edx
6401c906:	cmp    ecx,0x6402dcf0
6401c90c:	jl     0x6401c8dc
6401c90e:	pop    edi
6401c90f:	xor    eax,eax
6401c911:	pop    esi
6401c912:	ret    
6401c913:	call   0x6401e271
6401c918:	cmp    BYTE PTR ds:0x6402e90c,0x0
6401c91f:	je     0x6401c926
6401c921:	call   0x6401e054
6401c926:	push   DWORD PTR ds:0x640314c0
6401c92c:	call   0x64013a26
6401c931:	pop    ecx
6401c932:	ret    
6401c933:	push   esi
6401c934:	mov    esi,DWORD PTR [esp+0x8]
6401c938:	mov    eax,0x6402dc80
6401c93d:	cmp    esi,eax
6401c93f:	jb     0x6401c963
6401c941:	cmp    esi,0x6402dee0
6401c947:	ja     0x6401c963
6401c949:	mov    ecx,esi
6401c94b:	sub    ecx,eax
6401c94d:	sar    ecx,0x5
6401c950:	add    ecx,0x10
6401c953:	push   ecx
6401c954:	call   0x6401a19a
6401c959:	or     DWORD PTR [esi+0xc],0x8000
6401c960:	pop    ecx
6401c961:	pop    esi
6401c962:	ret    
6401c963:	add    esi,0x20
6401c966:	push   esi
6401c967:	call   DWORD PTR ds:0x6402509c
6401c96d:	pop    esi
6401c96e:	ret    
6401c96f:	mov    eax,DWORD PTR [esp+0x4]
6401c973:	cmp    eax,0x14
6401c976:	jge    0x6401c98e
6401c978:	add    eax,0x10
6401c97b:	push   eax
6401c97c:	call   0x6401a19a
6401c981:	mov    eax,DWORD PTR [esp+0xc]
6401c985:	or     DWORD PTR [eax+0xc],0x8000
6401c98c:	pop    ecx
6401c98d:	ret    
6401c98e:	mov    eax,DWORD PTR [esp+0x8]
6401c992:	add    eax,0x20
6401c995:	push   eax
6401c996:	call   DWORD PTR ds:0x6402509c
6401c99c:	ret    
6401c99d:	mov    eax,DWORD PTR [esp+0x4]
6401c9a1:	mov    ecx,0x6402dc80
6401c9a6:	cmp    eax,ecx
6401c9a8:	jb     0x6401c9c8
6401c9aa:	cmp    eax,0x6402dee0
6401c9af:	ja     0x6401c9c8
6401c9b1:	and    DWORD PTR [eax+0xc],0xffff7fff
6401c9b8:	sub    eax,ecx
6401c9ba:	sar    eax,0x5
6401c9bd:	add    eax,0x10
6401c9c0:	push   eax
6401c9c1:	call   0x6401a0c2
6401c9c6:	pop    ecx
6401c9c7:	ret    
6401c9c8:	add    eax,0x20
6401c9cb:	push   eax
6401c9cc:	call   DWORD PTR ds:0x640250a0
6401c9d2:	ret    
6401c9d3:	mov    ecx,DWORD PTR [esp+0x4]
6401c9d7:	cmp    ecx,0x14
6401c9da:	mov    eax,DWORD PTR [esp+0x8]
6401c9de:	jge    0x6401c9f2
6401c9e0:	and    DWORD PTR [eax+0xc],0xffff7fff
6401c9e7:	add    ecx,0x10
6401c9ea:	push   ecx
6401c9eb:	call   0x6401a0c2
6401c9f0:	pop    ecx
6401c9f1:	ret    
6401c9f2:	add    eax,0x20
6401c9f5:	push   eax
6401c9f6:	call   DWORD PTR ds:0x640250a0
6401c9fc:	ret    
6401c9fd:	mov    eax,DWORD PTR [esp+0x4]
6401ca01:	push   esi
6401ca02:	xor    esi,esi
6401ca04:	cmp    eax,esi
6401ca06:	jne    0x6401ca25
6401ca08:	call   0x64014950
6401ca0d:	push   esi
6401ca0e:	push   esi
6401ca0f:	push   esi
6401ca10:	push   esi
6401ca11:	push   esi
6401ca12:	mov    DWORD PTR [eax],0x16
6401ca18:	call   0x640126c4
6401ca1d:	add    esp,0x14
6401ca20:	or     eax,0xffffffff
6401ca23:	pop    esi
6401ca24:	ret    
6401ca25:	mov    eax,DWORD PTR [eax+0x10]
6401ca28:	pop    esi
6401ca29:	ret    
6401ca2a:	push   ebp
6401ca2b:	mov    ebp,esp
6401ca2d:	sub    esp,0x10
6401ca30:	mov    eax,ds:0x6402d09c
6401ca35:	xor    eax,ebp
6401ca37:	mov    DWORD PTR [ebp-0x4],eax
6401ca3a:	push   ebx
6401ca3b:	push   esi
6401ca3c:	mov    esi,DWORD PTR [ebp+0xc]
6401ca3f:	test   BYTE PTR [esi+0xc],0x40
6401ca43:	push   edi
6401ca44:	jne    0x6401cbd9
6401ca4a:	push   esi
6401ca4b:	call   0x6401c9fd
6401ca50:	cmp    eax,0xffffffff
6401ca53:	pop    ecx
6401ca54:	mov    edi,0x6402d880
6401ca59:	je     0x6401ca89
6401ca5b:	push   esi
6401ca5c:	call   0x6401c9fd
6401ca61:	cmp    eax,0xfffffffe
6401ca64:	pop    ecx
6401ca65:	je     0x6401ca89
6401ca67:	push   esi
6401ca68:	call   0x6401c9fd
6401ca6d:	sar    eax,0x5
6401ca70:	push   esi
6401ca71:	lea    ebx,[eax*4+0x64032520]
6401ca78:	call   0x6401c9fd
6401ca7d:	and    eax,0x1f
6401ca80:	pop    ecx
6401ca81:	shl    eax,0x6
6401ca84:	add    eax,DWORD PTR [ebx]
6401ca86:	pop    ecx
6401ca87:	jmp    0x6401ca8b
6401ca89:	mov    eax,edi
6401ca8b:	mov    al,BYTE PTR [eax+0x24]
6401ca8e:	and    al,0x7f
6401ca90:	cmp    al,0x2
6401ca92:	je     0x6401cbd9
6401ca98:	push   esi
6401ca99:	call   0x6401c9fd
6401ca9e:	cmp    eax,0xffffffff
6401caa1:	pop    ecx
6401caa2:	je     0x6401cad2
6401caa4:	push   esi
6401caa5:	call   0x6401c9fd
6401caaa:	cmp    eax,0xfffffffe
6401caad:	pop    ecx
6401caae:	je     0x6401cad2
6401cab0:	push   esi
6401cab1:	call   0x6401c9fd
6401cab6:	sar    eax,0x5
6401cab9:	push   esi
6401caba:	lea    ebx,[eax*4+0x64032520]
6401cac1:	call   0x6401c9fd
6401cac6:	and    eax,0x1f
6401cac9:	pop    ecx
6401caca:	shl    eax,0x6
6401cacd:	add    eax,DWORD PTR [ebx]
6401cacf:	pop    ecx
6401cad0:	jmp    0x6401cad4
6401cad2:	mov    eax,edi
6401cad4:	mov    al,BYTE PTR [eax+0x24]
6401cad7:	and    al,0x7f
6401cad9:	cmp    al,0x1
6401cadb:	jne    0x6401cb39
6401cadd:	dec    DWORD PTR [esi+0x4]
6401cae0:	mov    ebx,DWORD PTR [ebp+0x8]
6401cae3:	js     0x6401caf3
6401cae5:	mov    eax,DWORD PTR [esi]
6401cae7:	mov    BYTE PTR [eax],bl
6401cae9:	mov    ecx,DWORD PTR [esi]
6401caeb:	movzx  eax,BYTE PTR [ecx]
6401caee:	inc    ecx
6401caef:	mov    DWORD PTR [esi],ecx
6401caf1:	jmp    0x6401caff
6401caf3:	movsx  eax,bl
6401caf6:	push   esi
6401caf7:	push   eax
6401caf8:	call   0x64016c95
6401cafd:	pop    ecx
6401cafe:	pop    ecx
6401caff:	cmp    eax,0xffffffff
6401cb02:	jne    0x6401cb0d
6401cb04:	or     ax,0xffff
6401cb08:	jmp    0x6401cbf9
6401cb0d:	dec    DWORD PTR [esi+0x4]
6401cb10:	js     0x6401cb20
6401cb12:	mov    eax,DWORD PTR [esi]
6401cb14:	mov    BYTE PTR [eax],bh
6401cb16:	mov    ecx,DWORD PTR [esi]
6401cb18:	movzx  eax,BYTE PTR [ecx]
6401cb1b:	inc    ecx
6401cb1c:	mov    DWORD PTR [esi],ecx
6401cb1e:	jmp    0x6401cb2c
6401cb20:	movsx  eax,bh
6401cb23:	push   esi
6401cb24:	push   eax
6401cb25:	call   0x64016c95
6401cb2a:	pop    ecx
6401cb2b:	pop    ecx
6401cb2c:	cmp    eax,0xffffffff
6401cb2f:	je     0x6401cb04
6401cb31:	mov    ax,bx
6401cb34:	jmp    0x6401cbf9
6401cb39:	push   esi
6401cb3a:	call   0x6401c9fd
6401cb3f:	cmp    eax,0xffffffff
6401cb42:	pop    ecx
6401cb43:	je     0x6401cb73
6401cb45:	push   esi
6401cb46:	call   0x6401c9fd
6401cb4b:	cmp    eax,0xfffffffe
6401cb4e:	pop    ecx
6401cb4f:	je     0x6401cb73
6401cb51:	push   esi
6401cb52:	call   0x6401c9fd
6401cb57:	sar    eax,0x5
6401cb5a:	push   esi
6401cb5b:	lea    ebx,[eax*4+0x64032520]
6401cb62:	call   0x6401c9fd
6401cb67:	and    eax,0x1f
6401cb6a:	pop    ecx
6401cb6b:	shl    eax,0x6
6401cb6e:	add    eax,DWORD PTR [ebx]
6401cb70:	pop    ecx
6401cb71:	jmp    0x6401cb75
6401cb73:	mov    eax,edi
6401cb75:	test   BYTE PTR [eax+0x4],0x80
6401cb79:	je     0x6401cbd9
6401cb7b:	push   DWORD PTR [ebp+0x8]
6401cb7e:	lea    eax,[ebp-0xc]
6401cb81:	push   0x5
6401cb83:	push   eax
6401cb84:	lea    eax,[ebp-0x10]
6401cb87:	push   eax
6401cb88:	call   0x6401db71
6401cb8d:	add    esp,0x10
6401cb90:	test   eax,eax
6401cb92:	jne    0x6401cb04
6401cb98:	xor    ebx,ebx
6401cb9a:	cmp    DWORD PTR [ebp-0x10],ebx
6401cb9d:	jle    0x6401cbd3
6401cb9f:	dec    DWORD PTR [esi+0x4]
6401cba2:	js     0x6401cbb6
6401cba4:	mov    eax,DWORD PTR [esi]
6401cba6:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6401cbaa:	mov    BYTE PTR [eax],cl
6401cbac:	mov    ecx,DWORD PTR [esi]
6401cbae:	movzx  eax,BYTE PTR [ecx]
6401cbb1:	inc    ecx
6401cbb2:	mov    DWORD PTR [esi],ecx
6401cbb4:	jmp    0x6401cbc4
6401cbb6:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6401cbbb:	push   esi
6401cbbc:	push   eax
6401cbbd:	call   0x64016c95
6401cbc2:	pop    ecx
6401cbc3:	pop    ecx
6401cbc4:	cmp    eax,0xffffffff
6401cbc7:	je     0x6401cb04
6401cbcd:	inc    ebx
6401cbce:	cmp    ebx,DWORD PTR [ebp-0x10]
6401cbd1:	jl     0x6401cb9f
6401cbd3:	mov    ax,WORD PTR [ebp+0x8]
6401cbd7:	jmp    0x6401cbf9
6401cbd9:	add    DWORD PTR [esi+0x4],0xfffffffe
6401cbdd:	js     0x6401cbec
6401cbdf:	mov    ecx,DWORD PTR [esi]
6401cbe1:	mov    eax,DWORD PTR [ebp+0x8]
6401cbe4:	mov    WORD PTR [ecx],ax
6401cbe7:	add    DWORD PTR [esi],0x2
6401cbea:	jmp    0x6401cbf9
6401cbec:	movzx  eax,WORD PTR [ebp+0x8]
6401cbf0:	push   esi
6401cbf1:	push   eax
6401cbf2:	call   0x6401e27a
6401cbf7:	pop    ecx
6401cbf8:	pop    ecx
6401cbf9:	mov    ecx,DWORD PTR [ebp-0x4]
6401cbfc:	pop    edi
6401cbfd:	pop    esi
6401cbfe:	xor    ecx,ebp
6401cc00:	pop    ebx
6401cc01:	call   0x64012b8c
6401cc06:	leave  
6401cc07:	ret    
6401cc08:	mov    eax,ds:0x6402d09c
6401cc0d:	or     eax,0x1
6401cc10:	xor    ecx,ecx
6401cc12:	cmp    DWORD PTR ds:0x6402ef58,eax
6401cc18:	sete   cl
6401cc1b:	mov    eax,ecx
6401cc1d:	ret    
6401cc1e:	push   ebp
6401cc1f:	mov    ebp,esp
6401cc21:	sub    esp,0x10
6401cc24:	push   ebx
6401cc25:	push   esi
6401cc26:	mov    esi,DWORD PTR [ebp+0xc]
6401cc29:	xor    ebx,ebx
6401cc2b:	cmp    esi,ebx
6401cc2d:	je     0x6401cc42
6401cc2f:	cmp    DWORD PTR [ebp+0x10],ebx
6401cc32:	je     0x6401cc42
6401cc34:	cmp    BYTE PTR [esi],bl
6401cc36:	jne    0x6401cc48
6401cc38:	mov    eax,DWORD PTR [ebp+0x8]
6401cc3b:	cmp    eax,ebx
6401cc3d:	je     0x6401cc42
6401cc3f:	mov    WORD PTR [eax],bx
6401cc42:	xor    eax,eax
6401cc44:	pop    esi
6401cc45:	pop    ebx
6401cc46:	leave  
6401cc47:	ret    
6401cc48:	push   DWORD PTR [ebp+0x14]
6401cc4b:	lea    ecx,[ebp-0x10]
6401cc4e:	call   0x64012d2f
6401cc53:	mov    eax,DWORD PTR [ebp-0x10]
6401cc56:	cmp    DWORD PTR [eax+0x14],ebx
6401cc59:	jne    0x6401cc7a
6401cc5b:	mov    eax,DWORD PTR [ebp+0x8]
6401cc5e:	cmp    eax,ebx
6401cc60:	je     0x6401cc69
6401cc62:	movzx  cx,BYTE PTR [esi]
6401cc66:	mov    WORD PTR [eax],cx
6401cc69:	cmp    BYTE PTR [ebp-0x4],bl
6401cc6c:	je     0x6401cc75
6401cc6e:	mov    eax,DWORD PTR [ebp-0x8]
6401cc71:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cc75:	xor    eax,eax
6401cc77:	inc    eax
6401cc78:	jmp    0x6401cc44
6401cc7a:	lea    eax,[ebp-0x10]
6401cc7d:	push   eax
6401cc7e:	movzx  eax,BYTE PTR [esi]
6401cc81:	push   eax
6401cc82:	call   0x64019f2a
6401cc87:	test   eax,eax
6401cc89:	pop    ecx
6401cc8a:	pop    ecx
6401cc8b:	je     0x6401cd0a
6401cc8d:	mov    eax,DWORD PTR [ebp-0x10]
6401cc90:	mov    ecx,DWORD PTR [eax+0xac]
6401cc96:	cmp    ecx,0x1
6401cc99:	jle    0x6401ccc0
6401cc9b:	cmp    DWORD PTR [ebp+0x10],ecx
6401cc9e:	jl     0x6401ccc0
6401cca0:	xor    edx,edx
6401cca2:	cmp    DWORD PTR [ebp+0x8],ebx
6401cca5:	setne  dl
6401cca8:	push   edx
6401cca9:	push   DWORD PTR [ebp+0x8]
6401ccac:	push   ecx
6401ccad:	push   esi
6401ccae:	push   0x9
6401ccb0:	push   DWORD PTR [eax+0x4]
6401ccb3:	call   DWORD PTR ds:0x64025024
6401ccb9:	test   eax,eax
6401ccbb:	mov    eax,DWORD PTR [ebp-0x10]
6401ccbe:	jne    0x6401ccd0
6401ccc0:	mov    ecx,DWORD PTR [ebp+0x10]
6401ccc3:	cmp    ecx,DWORD PTR [eax+0xac]
6401ccc9:	jb     0x6401cceb
6401cccb:	cmp    BYTE PTR [esi+0x1],bl
6401ccce:	je     0x6401cceb
6401ccd0:	cmp    BYTE PTR [ebp-0x4],bl
6401ccd3:	mov    eax,DWORD PTR [eax+0xac]
6401ccd9:	je     0x6401cc44
6401ccdf:	mov    ecx,DWORD PTR [ebp-0x8]
6401cce2:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401cce6:	jmp    0x6401cc44
6401cceb:	call   0x64014950
6401ccf0:	mov    DWORD PTR [eax],0x2a
6401ccf6:	cmp    BYTE PTR [ebp-0x4],bl
6401ccf9:	je     0x6401cd02
6401ccfb:	mov    eax,DWORD PTR [ebp-0x8]
6401ccfe:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cd02:	or     eax,0xffffffff
6401cd05:	jmp    0x6401cc44
6401cd0a:	xor    eax,eax
6401cd0c:	cmp    DWORD PTR [ebp+0x8],ebx
6401cd0f:	setne  al
6401cd12:	push   eax
6401cd13:	push   DWORD PTR [ebp+0x8]
6401cd16:	mov    eax,DWORD PTR [ebp-0x10]
6401cd19:	push   0x1
6401cd1b:	push   esi
6401cd1c:	push   0x9
6401cd1e:	push   DWORD PTR [eax+0x4]
6401cd21:	call   DWORD PTR ds:0x64025024
6401cd27:	test   eax,eax
6401cd29:	jne    0x6401cc69
6401cd2f:	jmp    0x6401cceb
6401cd31:	push   0x0
6401cd33:	push   DWORD PTR [esp+0x10]
6401cd37:	push   DWORD PTR [esp+0x10]
6401cd3b:	push   DWORD PTR [esp+0x10]
6401cd3f:	call   0x6401cc1e
6401cd44:	add    esp,0x10
6401cd47:	ret    
6401cd48:	push   ebp
6401cd49:	lea    ebp,[esp-0x1f8]
6401cd50:	sub    esp,0x278
6401cd56:	mov    eax,ds:0x6402d09c
6401cd5b:	xor    eax,ebp
6401cd5d:	mov    DWORD PTR [ebp+0x1f4],eax
6401cd63:	mov    eax,DWORD PTR [ebp+0x200]
6401cd69:	push   ebx
6401cd6a:	mov    ebx,DWORD PTR [ebp+0x204]
6401cd70:	push   esi
6401cd71:	xor    esi,esi
6401cd73:	push   edi
6401cd74:	mov    edi,DWORD PTR [ebp+0x20c]
6401cd7a:	push   DWORD PTR [ebp+0x208]
6401cd80:	lea    ecx,[ebp-0x5c]
6401cd83:	mov    DWORD PTR [ebp-0x30],eax
6401cd86:	mov    DWORD PTR [ebp-0x2c],edi
6401cd89:	mov    DWORD PTR [ebp-0x64],esi
6401cd8c:	mov    DWORD PTR [ebp-0x18],esi
6401cd8f:	mov    DWORD PTR [ebp-0x40],esi
6401cd92:	mov    DWORD PTR [ebp-0x20],esi
6401cd95:	mov    DWORD PTR [ebp-0x3c],esi
6401cd98:	mov    DWORD PTR [ebp-0x68],esi
6401cd9b:	mov    DWORD PTR [ebp-0x44],esi
6401cd9e:	call   0x64012d2f
6401cda3:	cmp    DWORD PTR [ebp-0x30],esi
6401cda6:	jne    0x6401cdd5
6401cda8:	call   0x64014950
6401cdad:	push   esi
6401cdae:	push   esi
6401cdaf:	push   esi
6401cdb0:	push   esi
6401cdb1:	mov    DWORD PTR [eax],0x16
6401cdb7:	push   esi
6401cdb8:	call   0x640126c4
6401cdbd:	add    esp,0x14
6401cdc0:	cmp    BYTE PTR [ebp-0x50],0x0
6401cdc4:	je     0x6401cdcd
6401cdc6:	mov    eax,DWORD PTR [ebp-0x54]
6401cdc9:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cdcd:	or     eax,0xffffffff
6401cdd0:	jmp    0x6401d6bf
6401cdd5:	mov    eax,DWORD PTR [ebp-0x30]
6401cdd8:	test   BYTE PTR [eax+0xc],0x40
6401cddc:	jne    0x6401ce86
6401cde2:	push   eax
6401cde3:	call   0x6401c9fd
6401cde8:	cmp    eax,0xffffffff
6401cdeb:	pop    ecx
6401cdec:	je     0x6401ce24
6401cdee:	push   DWORD PTR [ebp-0x30]
6401cdf1:	call   0x6401c9fd
6401cdf6:	cmp    eax,0xfffffffe
6401cdf9:	pop    ecx
6401cdfa:	je     0x6401ce24
6401cdfc:	push   DWORD PTR [ebp-0x30]
6401cdff:	call   0x6401c9fd
6401ce04:	push   DWORD PTR [ebp-0x30]
6401ce07:	sar    eax,0x5
6401ce0a:	lea    esi,[eax*4+0x64032520]
6401ce11:	call   0x6401c9fd
6401ce16:	and    eax,0x1f
6401ce19:	shl    eax,0x6
6401ce1c:	add    eax,DWORD PTR [esi]
6401ce1e:	pop    ecx
6401ce1f:	pop    ecx
6401ce20:	xor    esi,esi
6401ce22:	jmp    0x6401ce29
6401ce24:	mov    eax,0x6402d880
6401ce29:	test   BYTE PTR [eax+0x24],0x7f
6401ce2d:	jne    0x6401cda8
6401ce33:	push   DWORD PTR [ebp-0x30]
6401ce36:	call   0x6401c9fd
6401ce3b:	cmp    eax,0xffffffff
6401ce3e:	pop    ecx
6401ce3f:	je     0x6401ce77
6401ce41:	push   DWORD PTR [ebp-0x30]
6401ce44:	call   0x6401c9fd
6401ce49:	cmp    eax,0xfffffffe
6401ce4c:	pop    ecx
6401ce4d:	je     0x6401ce77
6401ce4f:	push   DWORD PTR [ebp-0x30]
6401ce52:	call   0x6401c9fd
6401ce57:	push   DWORD PTR [ebp-0x30]
6401ce5a:	sar    eax,0x5
6401ce5d:	lea    esi,[eax*4+0x64032520]
6401ce64:	call   0x6401c9fd
6401ce69:	and    eax,0x1f
6401ce6c:	shl    eax,0x6
6401ce6f:	add    eax,DWORD PTR [esi]
6401ce71:	pop    ecx
6401ce72:	pop    ecx
6401ce73:	xor    esi,esi
6401ce75:	jmp    0x6401ce7c
6401ce77:	mov    eax,0x6402d880
6401ce7c:	test   BYTE PTR [eax+0x24],0x80
6401ce80:	jne    0x6401cda8
6401ce86:	cmp    ebx,esi
6401ce88:	je     0x6401cda8
6401ce8e:	mov    dl,BYTE PTR [ebx]
6401ce90:	test   dl,dl
6401ce92:	mov    DWORD PTR [ebp-0x34],esi
6401ce95:	mov    DWORD PTR [ebp-0x28],esi
6401ce98:	mov    DWORD PTR [ebp-0x48],esi
6401ce9b:	mov    DWORD PTR [ebp-0x60],esi
6401ce9e:	mov    BYTE PTR [ebp-0x19],dl
6401cea1:	je     0x6401d6af
6401cea7:	inc    ebx
6401cea8:	xor    eax,eax
6401ceaa:	cmp    DWORD PTR [ebp-0x34],eax
6401cead:	mov    DWORD PTR [ebp-0x4c],ebx
6401ceb0:	jl     0x6401d69e
6401ceb6:	mov    cl,dl
6401ceb8:	sub    cl,0x20
6401cebb:	cmp    cl,0x58
6401cebe:	ja     0x6401cecd
6401cec0:	movsx  eax,dl
6401cec3:	movzx  eax,BYTE PTR [eax+0x640274f0]
6401ceca:	and    eax,0xf
6401cecd:	mov    ecx,DWORD PTR [ebp-0x48]
6401ced0:	imul   eax,eax,0x9
6401ced3:	movzx  eax,BYTE PTR [eax+ecx*1+0x64027510]
6401cedb:	push   0x8
6401cedd:	shr    eax,0x4
6401cee0:	pop    esi
6401cee1:	cmp    eax,esi
6401cee3:	mov    DWORD PTR [ebp-0x48],eax
6401cee6:	je     0x6401d687
6401ceec:	push   0x7
6401ceee:	pop    ecx
6401ceef:	cmp    eax,ecx
6401cef1:	ja     0x6401d671
6401cef7:	jmp    DWORD PTR [eax*4+0x6401d6d8]
6401cefe:	xor    eax,eax
6401cf00:	or     DWORD PTR [ebp-0x20],0xffffffff
6401cf04:	mov    DWORD PTR [ebp-0x74],eax
6401cf07:	mov    DWORD PTR [ebp-0x68],eax
6401cf0a:	mov    DWORD PTR [ebp-0x40],eax
6401cf0d:	mov    DWORD PTR [ebp-0x3c],eax
6401cf10:	mov    DWORD PTR [ebp-0x18],eax
6401cf13:	mov    DWORD PTR [ebp-0x44],eax
6401cf16:	jmp    0x6401d671
6401cf1b:	movsx  eax,dl
6401cf1e:	sub    eax,0x20
6401cf21:	je     0x6401cf5f
6401cf23:	sub    eax,0x3
6401cf26:	je     0x6401cf53
6401cf28:	sub    eax,esi
6401cf2a:	je     0x6401cf4a
6401cf2c:	dec    eax
6401cf2d:	dec    eax
6401cf2e:	je     0x6401cf41
6401cf30:	sub    eax,0x3
6401cf33:	jne    0x6401d671
6401cf39:	or     DWORD PTR [ebp-0x18],esi
6401cf3c:	jmp    0x6401d671
6401cf41:	or     DWORD PTR [ebp-0x18],0x4
6401cf45:	jmp    0x6401d671
6401cf4a:	or     DWORD PTR [ebp-0x18],0x1
6401cf4e:	jmp    0x6401d671
6401cf53:	or     DWORD PTR [ebp-0x18],0x80
6401cf5a:	jmp    0x6401d671
6401cf5f:	or     DWORD PTR [ebp-0x18],0x2
6401cf63:	jmp    0x6401d671
6401cf68:	cmp    dl,0x2a
6401cf6b:	jne    0x6401cf8d
6401cf6d:	add    edi,0x4
6401cf70:	mov    DWORD PTR [ebp-0x2c],edi
6401cf73:	mov    edi,DWORD PTR [edi-0x4]
6401cf76:	test   edi,edi
6401cf78:	mov    DWORD PTR [ebp-0x40],edi
6401cf7b:	jge    0x6401d671
6401cf81:	or     DWORD PTR [ebp-0x18],0x4
6401cf85:	neg    DWORD PTR [ebp-0x40]
6401cf88:	jmp    0x6401d671
6401cf8d:	mov    eax,DWORD PTR [ebp-0x40]
6401cf90:	imul   eax,eax,0xa
6401cf93:	movsx  ecx,dl
6401cf96:	lea    eax,[eax+ecx*1-0x30]
6401cf9a:	mov    DWORD PTR [ebp-0x40],eax
6401cf9d:	jmp    0x6401d671
6401cfa2:	and    DWORD PTR [ebp-0x20],0x0
6401cfa6:	jmp    0x6401d671
6401cfab:	cmp    dl,0x2a
6401cfae:	jne    0x6401cfcd
6401cfb0:	add    edi,0x4
6401cfb3:	mov    DWORD PTR [ebp-0x2c],edi
6401cfb6:	mov    edi,DWORD PTR [edi-0x4]
6401cfb9:	test   edi,edi
6401cfbb:	mov    DWORD PTR [ebp-0x20],edi
6401cfbe:	jge    0x6401d671
6401cfc4:	or     DWORD PTR [ebp-0x20],0xffffffff
6401cfc8:	jmp    0x6401d671
6401cfcd:	mov    eax,DWORD PTR [ebp-0x20]
6401cfd0:	imul   eax,eax,0xa
6401cfd3:	movsx  ecx,dl
6401cfd6:	lea    eax,[eax+ecx*1-0x30]
6401cfda:	mov    DWORD PTR [ebp-0x20],eax
6401cfdd:	jmp    0x6401d671
6401cfe2:	cmp    dl,0x49
6401cfe5:	je     0x6401d02d
6401cfe7:	cmp    dl,0x68
6401cfea:	je     0x6401d024
6401cfec:	cmp    dl,0x6c
6401cfef:	je     0x6401d006
6401cff1:	cmp    dl,0x77
6401cff4:	jne    0x6401d671
6401cffa:	or     DWORD PTR [ebp-0x18],0x800
6401d001:	jmp    0x6401d671
6401d006:	cmp    BYTE PTR [ebx],0x6c
6401d009:	jne    0x6401d01b
6401d00b:	inc    ebx
6401d00c:	or     DWORD PTR [ebp-0x18],0x1000
6401d013:	mov    DWORD PTR [ebp-0x4c],ebx
6401d016:	jmp    0x6401d671
6401d01b:	or     DWORD PTR [ebp-0x18],0x10
6401d01f:	jmp    0x6401d671
6401d024:	or     DWORD PTR [ebp-0x18],0x20
6401d028:	jmp    0x6401d671
6401d02d:	mov    al,BYTE PTR [ebx]
6401d02f:	cmp    al,0x36
6401d031:	jne    0x6401d04a
6401d033:	cmp    BYTE PTR [ebx+0x1],0x34
6401d037:	jne    0x6401d04a
6401d039:	inc    ebx
6401d03a:	inc    ebx
6401d03b:	or     DWORD PTR [ebp-0x18],0x8000
6401d042:	mov    DWORD PTR [ebp-0x4c],ebx
6401d045:	jmp    0x6401d671
6401d04a:	cmp    al,0x33
6401d04c:	jne    0x6401d065
6401d04e:	cmp    BYTE PTR [ebx+0x1],0x32
6401d052:	jne    0x6401d065
6401d054:	inc    ebx
6401d055:	inc    ebx
6401d056:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401d05d:	mov    DWORD PTR [ebp-0x4c],ebx
6401d060:	jmp    0x6401d671
6401d065:	cmp    al,0x64
6401d067:	je     0x6401d671
6401d06d:	cmp    al,0x69
6401d06f:	je     0x6401d671
6401d075:	cmp    al,0x6f
6401d077:	je     0x6401d671
6401d07d:	cmp    al,0x75
6401d07f:	je     0x6401d671
6401d085:	cmp    al,0x78
6401d087:	je     0x6401d671
6401d08d:	cmp    al,0x58
6401d08f:	je     0x6401d671
6401d095:	and    DWORD PTR [ebp-0x48],0x0
6401d099:	and    DWORD PTR [ebp-0x44],0x0
6401d09d:	lea    eax,[ebp-0x5c]
6401d0a0:	push   eax
6401d0a1:	movzx  eax,dl
6401d0a4:	push   eax
6401d0a5:	call   0x64019f2a
6401d0aa:	pop    ecx
6401d0ab:	test   eax,eax
6401d0ad:	mov    al,BYTE PTR [ebp-0x19]
6401d0b0:	pop    ecx
6401d0b1:	je     0x6401d0cc
6401d0b3:	mov    ecx,DWORD PTR [ebp-0x30]
6401d0b6:	lea    esi,[ebp-0x34]
6401d0b9:	call   0x64018f2a
6401d0be:	mov    al,BYTE PTR [ebx]
6401d0c0:	inc    ebx
6401d0c1:	test   al,al
6401d0c3:	mov    DWORD PTR [ebp-0x4c],ebx
6401d0c6:	je     0x6401d687
6401d0cc:	mov    ecx,DWORD PTR [ebp-0x30]
6401d0cf:	lea    esi,[ebp-0x34]
6401d0d2:	call   0x64018f2a
6401d0d7:	jmp    0x6401d671
6401d0dc:	movsx  eax,dl
6401d0df:	cmp    eax,0x64
6401d0e2:	jg     0x6401d25c
6401d0e8:	je     0x6401d2d7
6401d0ee:	cmp    eax,0x53
6401d0f1:	jg     0x6401d1a3
6401d0f7:	je     0x6401d154
6401d0f9:	sub    eax,0x41
6401d0fc:	je     0x6401d10e
6401d0fe:	dec    eax
6401d0ff:	dec    eax
6401d100:	je     0x6401d143
6401d102:	dec    eax
6401d103:	dec    eax
6401d104:	je     0x6401d10e
6401d106:	dec    eax
6401d107:	dec    eax
6401d108:	jne    0x6401d559
6401d10e:	add    dl,0x20
6401d111:	mov    DWORD PTR [ebp-0x74],0x1
6401d118:	mov    BYTE PTR [ebp-0x19],dl
6401d11b:	or     DWORD PTR [ebp-0x18],0x40
6401d11f:	cmp    DWORD PTR [ebp-0x20],0x0
6401d123:	lea    ebx,[ebp-0x14]
6401d126:	mov    eax,0x200
6401d12b:	mov    DWORD PTR [ebp-0x24],ebx
6401d12e:	mov    DWORD PTR [ebp-0x6c],eax
6401d131:	jge    0x6401d2fb
6401d137:	mov    DWORD PTR [ebp-0x20],0x6
6401d13e:	jmp    0x6401d34a
6401d143:	test   WORD PTR [ebp-0x18],0x830
6401d149:	jne    0x6401d1c0
6401d14b:	or     DWORD PTR [ebp-0x18],0x800
6401d152:	jmp    0x6401d1c0
6401d154:	test   WORD PTR [ebp-0x18],0x830
6401d15a:	jne    0x6401d163
6401d15c:	or     DWORD PTR [ebp-0x18],0x800
6401d163:	mov    ecx,DWORD PTR [ebp-0x20]
6401d166:	cmp    ecx,0xffffffff
6401d169:	jne    0x6401d170
6401d16b:	mov    ecx,0x7fffffff
6401d170:	add    edi,0x4
6401d173:	test   WORD PTR [ebp-0x18],0x810
6401d179:	mov    DWORD PTR [ebp-0x2c],edi
6401d17c:	mov    edi,DWORD PTR [edi-0x4]
6401d17f:	mov    DWORD PTR [ebp-0x24],edi
6401d182:	je     0x6401d537
6401d188:	test   edi,edi
6401d18a:	jne    0x6401d194
6401d18c:	mov    eax,ds:0x6402d954
6401d191:	mov    DWORD PTR [ebp-0x24],eax
6401d194:	mov    eax,DWORD PTR [ebp-0x24]
6401d197:	mov    DWORD PTR [ebp-0x44],0x1
6401d19e:	jmp    0x6401d52c
6401d1a3:	sub    eax,0x58
6401d1a6:	je     0x6401d3e0
6401d1ac:	dec    eax
6401d1ad:	dec    eax
6401d1ae:	je     0x6401d20d
6401d1b0:	sub    eax,ecx
6401d1b2:	je     0x6401d11b
6401d1b8:	dec    eax
6401d1b9:	dec    eax
6401d1ba:	jne    0x6401d559
6401d1c0:	add    edi,0x4
6401d1c3:	test   WORD PTR [ebp-0x18],0x810
6401d1c9:	mov    DWORD PTR [ebp-0x2c],edi
6401d1cc:	je     0x6401d1f5
6401d1ce:	movzx  eax,WORD PTR [edi-0x4]
6401d1d2:	push   eax
6401d1d3:	push   0x200
6401d1d8:	lea    eax,[ebp-0x14]
6401d1db:	push   eax
6401d1dc:	lea    eax,[ebp-0x28]
6401d1df:	push   eax
6401d1e0:	call   0x6401db71
6401d1e5:	add    esp,0x10
6401d1e8:	test   eax,eax
6401d1ea:	je     0x6401d202
6401d1ec:	mov    DWORD PTR [ebp-0x68],0x1
6401d1f3:	jmp    0x6401d202
6401d1f5:	mov    al,BYTE PTR [edi-0x4]
6401d1f8:	mov    BYTE PTR [ebp-0x14],al
6401d1fb:	mov    DWORD PTR [ebp-0x28],0x1
6401d202:	lea    eax,[ebp-0x14]
6401d205:	mov    DWORD PTR [ebp-0x24],eax
6401d208:	jmp    0x6401d559
6401d20d:	mov    eax,DWORD PTR [edi]
6401d20f:	add    edi,0x4
6401d212:	test   eax,eax
6401d214:	mov    DWORD PTR [ebp-0x2c],edi
6401d217:	je     0x6401d248
6401d219:	mov    ecx,DWORD PTR [eax+0x4]
6401d21c:	test   ecx,ecx
6401d21e:	je     0x6401d248
6401d220:	test   WORD PTR [ebp-0x18],0x800
6401d226:	movsx  eax,WORD PTR [eax]
6401d229:	mov    DWORD PTR [ebp-0x24],ecx
6401d22c:	je     0x6401d23f
6401d22e:	cdq    
6401d22f:	sub    eax,edx
6401d231:	sar    eax,1
6401d233:	mov    DWORD PTR [ebp-0x44],0x1
6401d23a:	jmp    0x6401d556
6401d23f:	and    DWORD PTR [ebp-0x44],0x0
6401d243:	jmp    0x6401d556
6401d248:	mov    eax,ds:0x6402d950
6401d24d:	mov    DWORD PTR [ebp-0x24],eax
6401d250:	push   eax
6401d251:	call   0x64014350
6401d256:	pop    ecx
6401d257:	jmp    0x6401d556
6401d25c:	cmp    eax,0x70
6401d25f:	jg     0x6401d3e5
6401d265:	je     0x6401d3dd
6401d26b:	cmp    eax,0x65
6401d26e:	jl     0x6401d559
6401d274:	cmp    eax,0x67
6401d277:	jle    0x6401d11b
6401d27d:	cmp    eax,0x69
6401d280:	je     0x6401d2d7
6401d282:	cmp    eax,0x6e
6401d285:	je     0x6401d2a2
6401d287:	cmp    eax,0x6f
6401d28a:	jne    0x6401d559
6401d290:	test   BYTE PTR [ebp-0x18],0x80
6401d294:	mov    DWORD PTR [ebp-0x28],esi
6401d297:	je     0x6401d2e2
6401d299:	or     DWORD PTR [ebp-0x18],0x200
6401d2a0:	jmp    0x6401d2e2
6401d2a2:	mov    esi,DWORD PTR [edi]
6401d2a4:	add    edi,0x4
6401d2a7:	mov    DWORD PTR [ebp-0x2c],edi
6401d2aa:	call   0x6401cc08
6401d2af:	test   eax,eax
6401d2b1:	je     0x6401d687
6401d2b7:	test   BYTE PTR [ebp-0x18],0x20
6401d2bb:	je     0x6401d2c6
6401d2bd:	mov    ax,WORD PTR [ebp-0x34]
6401d2c1:	mov    WORD PTR [esi],ax
6401d2c4:	jmp    0x6401d2cb
6401d2c6:	mov    eax,DWORD PTR [ebp-0x34]
6401d2c9:	mov    DWORD PTR [esi],eax
6401d2cb:	mov    DWORD PTR [ebp-0x68],0x1
6401d2d2:	jmp    0x6401d65e
6401d2d7:	or     DWORD PTR [ebp-0x18],0x40
6401d2db:	mov    DWORD PTR [ebp-0x28],0xa
6401d2e2:	mov    ecx,DWORD PTR [ebp-0x18]
6401d2e5:	test   cx,cx
6401d2e8:	jns    0x6401d42f
6401d2ee:	add    edi,esi
6401d2f0:	mov    eax,DWORD PTR [edi-0x8]
6401d2f3:	mov    edx,DWORD PTR [edi-0x4]
6401d2f6:	jmp    0x6401d464
6401d2fb:	jne    0x6401d30b
6401d2fd:	cmp    dl,0x67
6401d300:	jne    0x6401d34a
6401d302:	mov    DWORD PTR [ebp-0x20],0x1
6401d309:	jmp    0x6401d34a
6401d30b:	cmp    DWORD PTR [ebp-0x20],eax
6401d30e:	jle    0x6401d313
6401d310:	mov    DWORD PTR [ebp-0x20],eax
6401d313:	cmp    DWORD PTR [ebp-0x20],0xa3
6401d31a:	jle    0x6401d34a
6401d31c:	mov    esi,DWORD PTR [ebp-0x20]
6401d31f:	add    esi,0x15d
6401d325:	push   esi
6401d326:	call   0x64015e60
6401d32b:	test   eax,eax
6401d32d:	mov    dl,BYTE PTR [ebp-0x19]
6401d330:	pop    ecx
6401d331:	mov    DWORD PTR [ebp-0x60],eax
6401d334:	push   0x8
6401d336:	je     0x6401d342
6401d338:	mov    DWORD PTR [ebp-0x24],eax
6401d33b:	mov    DWORD PTR [ebp-0x6c],esi
6401d33e:	mov    ebx,eax
6401d340:	jmp    0x6401d349
6401d342:	mov    DWORD PTR [ebp-0x20],0xa3
6401d349:	pop    esi
6401d34a:	add    edi,esi
6401d34c:	mov    eax,DWORD PTR [edi-0x8]
6401d34f:	mov    DWORD PTR [ebp-0x80],eax
6401d352:	mov    eax,DWORD PTR [edi-0x4]
6401d355:	mov    DWORD PTR [ebp-0x7c],eax
6401d358:	lea    eax,[ebp-0x5c]
6401d35b:	push   eax
6401d35c:	push   DWORD PTR [ebp-0x74]
6401d35f:	movsx  eax,dl
6401d362:	push   DWORD PTR [ebp-0x20]
6401d365:	mov    DWORD PTR [ebp-0x2c],edi
6401d368:	push   eax
6401d369:	push   DWORD PTR [ebp-0x6c]
6401d36c:	lea    eax,[ebp-0x80]
6401d36f:	push   ebx
6401d370:	push   eax
6401d371:	push   DWORD PTR ds:0x6402db64
6401d377:	call   0x64014a7f
6401d37c:	pop    ecx
6401d37d:	call   eax
6401d37f:	mov    edi,DWORD PTR [ebp-0x18]
6401d382:	add    esp,0x1c
6401d385:	and    edi,0x80
6401d38b:	je     0x6401d3a8
6401d38d:	cmp    DWORD PTR [ebp-0x20],0x0
6401d391:	jne    0x6401d3a8
6401d393:	lea    eax,[ebp-0x5c]
6401d396:	push   eax
6401d397:	push   ebx
6401d398:	push   DWORD PTR ds:0x6402db70
6401d39e:	call   0x64014a7f
6401d3a3:	pop    ecx
6401d3a4:	call   eax
6401d3a6:	pop    ecx
6401d3a7:	pop    ecx
6401d3a8:	cmp    BYTE PTR [ebp-0x19],0x67
6401d3ac:	jne    0x6401d3c7
6401d3ae:	test   edi,edi
6401d3b0:	jne    0x6401d3c7
6401d3b2:	lea    eax,[ebp-0x5c]
6401d3b5:	push   eax
6401d3b6:	push   ebx
6401d3b7:	push   DWORD PTR ds:0x6402db6c
6401d3bd:	call   0x64014a7f
6401d3c2:	pop    ecx
6401d3c3:	call   eax
6401d3c5:	pop    ecx
6401d3c6:	pop    ecx
6401d3c7:	cmp    BYTE PTR [ebx],0x2d
6401d3ca:	jne    0x6401d3d7
6401d3cc:	or     DWORD PTR [ebp-0x18],0x100
6401d3d3:	inc    ebx
6401d3d4:	mov    DWORD PTR [ebp-0x24],ebx
6401d3d7:	push   ebx
6401d3d8:	jmp    0x6401d251
6401d3dd:	mov    DWORD PTR [ebp-0x20],esi
6401d3e0:	mov    DWORD PTR [ebp-0x64],ecx
6401d3e3:	jmp    0x6401d406
6401d3e5:	sub    eax,0x73
6401d3e8:	je     0x6401d163
6401d3ee:	dec    eax
6401d3ef:	dec    eax
6401d3f0:	je     0x6401d2db
6401d3f6:	sub    eax,0x3
6401d3f9:	jne    0x6401d559
6401d3ff:	mov    DWORD PTR [ebp-0x64],0x27
6401d406:	test   BYTE PTR [ebp-0x18],0x80
6401d40a:	mov    DWORD PTR [ebp-0x28],0x10
6401d411:	je     0x6401d2e2
6401d417:	mov    al,BYTE PTR [ebp-0x64]
6401d41a:	add    al,0x51
6401d41c:	mov    BYTE PTR [ebp-0x38],0x30
6401d420:	mov    BYTE PTR [ebp-0x37],al
6401d423:	mov    DWORD PTR [ebp-0x3c],0x2
6401d42a:	jmp    0x6401d2e2
6401d42f:	test   cx,0x1000
6401d434:	jne    0x6401d2ee
6401d43a:	add    edi,0x4
6401d43d:	test   cl,0x20
6401d440:	je     0x6401d457
6401d442:	test   cl,0x40
6401d445:	mov    DWORD PTR [ebp-0x2c],edi
6401d448:	je     0x6401d450
6401d44a:	movsx  eax,WORD PTR [edi-0x4]
6401d44e:	jmp    0x6401d454
6401d450:	movzx  eax,WORD PTR [edi-0x4]
6401d454:	cdq    
6401d455:	jmp    0x6401d467
6401d457:	test   cl,0x40
6401d45a:	mov    eax,DWORD PTR [edi-0x4]
6401d45d:	je     0x6401d462
6401d45f:	cdq    
6401d460:	jmp    0x6401d464
6401d462:	xor    edx,edx
6401d464:	mov    DWORD PTR [ebp-0x2c],edi
6401d467:	test   cl,0x40
6401d46a:	je     0x6401d484
6401d46c:	test   edx,edx
6401d46e:	jg     0x6401d484
6401d470:	jl     0x6401d476
6401d472:	test   eax,eax
6401d474:	jae    0x6401d484
6401d476:	neg    eax
6401d478:	adc    edx,0x0
6401d47b:	neg    edx
6401d47d:	or     DWORD PTR [ebp-0x18],0x100
6401d484:	test   WORD PTR [ebp-0x18],0x9000
6401d48a:	mov    ebx,edx
6401d48c:	mov    edi,eax
6401d48e:	jne    0x6401d492
6401d490:	xor    ebx,ebx
6401d492:	cmp    DWORD PTR [ebp-0x20],0x0
6401d496:	jge    0x6401d4a1
6401d498:	mov    DWORD PTR [ebp-0x20],0x1
6401d49f:	jmp    0x6401d4b2
6401d4a1:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401d4a5:	mov    eax,0x200
6401d4aa:	cmp    DWORD PTR [ebp-0x20],eax
6401d4ad:	jle    0x6401d4b2
6401d4af:	mov    DWORD PTR [ebp-0x20],eax
6401d4b2:	mov    eax,edi
6401d4b4:	or     eax,ebx
6401d4b6:	jne    0x6401d4bb
6401d4b8:	and    DWORD PTR [ebp-0x3c],eax
6401d4bb:	lea    esi,[ebp+0x1eb]
6401d4c1:	mov    eax,DWORD PTR [ebp-0x20]
6401d4c4:	dec    DWORD PTR [ebp-0x20]
6401d4c7:	test   eax,eax
6401d4c9:	jg     0x6401d4d1
6401d4cb:	mov    eax,edi
6401d4cd:	or     eax,ebx
6401d4cf:	je     0x6401d4f5
6401d4d1:	mov    eax,DWORD PTR [ebp-0x28]
6401d4d4:	cdq    
6401d4d5:	push   edx
6401d4d6:	push   eax
6401d4d7:	push   ebx
6401d4d8:	push   edi
6401d4d9:	call   0x64019ab0
6401d4de:	add    ecx,0x30
6401d4e1:	cmp    ecx,0x39
6401d4e4:	mov    DWORD PTR [ebp-0x6c],ebx
6401d4e7:	mov    edi,eax
6401d4e9:	mov    ebx,edx
6401d4eb:	jle    0x6401d4f0
6401d4ed:	add    ecx,DWORD PTR [ebp-0x64]
6401d4f0:	mov    BYTE PTR [esi],cl
6401d4f2:	dec    esi
6401d4f3:	jmp    0x6401d4c1
6401d4f5:	lea    eax,[ebp+0x1eb]
6401d4fb:	sub    eax,esi
6401d4fd:	inc    esi
6401d4fe:	test   WORD PTR [ebp-0x18],0x200
6401d504:	mov    DWORD PTR [ebp-0x28],eax
6401d507:	mov    DWORD PTR [ebp-0x24],esi
6401d50a:	je     0x6401d559
6401d50c:	test   eax,eax
6401d50e:	je     0x6401d517
6401d510:	mov    ecx,esi
6401d512:	cmp    BYTE PTR [ecx],0x30
6401d515:	je     0x6401d559
6401d517:	dec    DWORD PTR [ebp-0x24]
6401d51a:	mov    ecx,DWORD PTR [ebp-0x24]
6401d51d:	mov    BYTE PTR [ecx],0x30
6401d520:	inc    eax
6401d521:	jmp    0x6401d556
6401d523:	dec    ecx
6401d524:	cmp    WORD PTR [eax],0x0
6401d528:	je     0x6401d530
6401d52a:	inc    eax
6401d52b:	inc    eax
6401d52c:	test   ecx,ecx
6401d52e:	jne    0x6401d523
6401d530:	sub    eax,DWORD PTR [ebp-0x24]
6401d533:	sar    eax,1
6401d535:	jmp    0x6401d556
6401d537:	test   edi,edi
6401d539:	jne    0x6401d543
6401d53b:	mov    eax,ds:0x6402d950
6401d540:	mov    DWORD PTR [ebp-0x24],eax
6401d543:	mov    eax,DWORD PTR [ebp-0x24]
6401d546:	jmp    0x6401d54f
6401d548:	dec    ecx
6401d549:	cmp    BYTE PTR [eax],0x0
6401d54c:	je     0x6401d553
6401d54e:	inc    eax
6401d54f:	test   ecx,ecx
6401d551:	jne    0x6401d548
6401d553:	sub    eax,DWORD PTR [ebp-0x24]
6401d556:	mov    DWORD PTR [ebp-0x28],eax
6401d559:	cmp    DWORD PTR [ebp-0x68],0x0
6401d55d:	jne    0x6401d65e
6401d563:	mov    eax,DWORD PTR [ebp-0x18]
6401d566:	test   al,0x40
6401d568:	je     0x6401d58f
6401d56a:	test   ax,0x100
6401d56e:	je     0x6401d576
6401d570:	mov    BYTE PTR [ebp-0x38],0x2d
6401d574:	jmp    0x6401d588
6401d576:	test   al,0x1
6401d578:	je     0x6401d580
6401d57a:	mov    BYTE PTR [ebp-0x38],0x2b
6401d57e:	jmp    0x6401d588
6401d580:	test   al,0x2
6401d582:	je     0x6401d58f
6401d584:	mov    BYTE PTR [ebp-0x38],0x20
6401d588:	mov    DWORD PTR [ebp-0x3c],0x1
6401d58f:	mov    ebx,DWORD PTR [ebp-0x40]
6401d592:	sub    ebx,DWORD PTR [ebp-0x28]
6401d595:	sub    ebx,DWORD PTR [ebp-0x3c]
6401d598:	test   BYTE PTR [ebp-0x18],0xc
6401d59c:	jne    0x6401d5af
6401d59e:	push   DWORD PTR [ebp-0x30]
6401d5a1:	lea    eax,[ebp-0x34]
6401d5a4:	push   ebx
6401d5a5:	push   0x20
6401d5a7:	call   0x64018f5d
6401d5ac:	add    esp,0xc
6401d5af:	push   DWORD PTR [ebp-0x3c]
6401d5b2:	mov    edi,DWORD PTR [ebp-0x30]
6401d5b5:	lea    eax,[ebp-0x34]
6401d5b8:	lea    ecx,[ebp-0x38]
6401d5bb:	call   0x64018f81
6401d5c0:	test   BYTE PTR [ebp-0x18],0x8
6401d5c4:	pop    ecx
6401d5c5:	je     0x6401d5dc
6401d5c7:	test   BYTE PTR [ebp-0x18],0x4
6401d5cb:	jne    0x6401d5dc
6401d5cd:	push   edi
6401d5ce:	push   ebx
6401d5cf:	push   0x30
6401d5d1:	lea    eax,[ebp-0x34]
6401d5d4:	call   0x64018f5d
6401d5d9:	add    esp,0xc
6401d5dc:	cmp    DWORD PTR [ebp-0x44],0x0
6401d5e0:	mov    eax,DWORD PTR [ebp-0x28]
6401d5e3:	je     0x6401d636
6401d5e5:	test   eax,eax
6401d5e7:	jle    0x6401d636
6401d5e9:	mov    esi,DWORD PTR [ebp-0x24]
6401d5ec:	mov    DWORD PTR [ebp-0x6c],eax
6401d5ef:	movzx  eax,WORD PTR [esi]
6401d5f2:	dec    DWORD PTR [ebp-0x6c]
6401d5f5:	push   eax
6401d5f6:	push   0x6
6401d5f8:	lea    eax,[ebp+0x1ec]
6401d5fe:	push   eax
6401d5ff:	lea    eax,[ebp-0x78]
6401d602:	inc    esi
6401d603:	push   eax
6401d604:	inc    esi
6401d605:	call   0x6401db71
6401d60a:	add    esp,0x10
6401d60d:	test   eax,eax
6401d60f:	jne    0x6401d630
6401d611:	cmp    DWORD PTR [ebp-0x78],eax
6401d614:	je     0x6401d630
6401d616:	push   DWORD PTR [ebp-0x78]
6401d619:	lea    eax,[ebp-0x34]
6401d61c:	lea    ecx,[ebp+0x1ec]
6401d622:	call   0x64018f81
6401d627:	cmp    DWORD PTR [ebp-0x6c],0x0
6401d62b:	pop    ecx
6401d62c:	jne    0x6401d5ef
6401d62e:	jmp    0x6401d643
6401d630:	or     DWORD PTR [ebp-0x34],0xffffffff
6401d634:	jmp    0x6401d643
6401d636:	mov    ecx,DWORD PTR [ebp-0x24]
6401d639:	push   eax
6401d63a:	lea    eax,[ebp-0x34]
6401d63d:	call   0x64018f81
6401d642:	pop    ecx
6401d643:	cmp    DWORD PTR [ebp-0x34],0x0
6401d647:	jl     0x6401d65e
6401d649:	test   BYTE PTR [ebp-0x18],0x4
6401d64d:	je     0x6401d65e
6401d64f:	push   edi
6401d650:	push   ebx
6401d651:	push   0x20
6401d653:	lea    eax,[ebp-0x34]
6401d656:	call   0x64018f5d
6401d65b:	add    esp,0xc
6401d65e:	cmp    DWORD PTR [ebp-0x60],0x0
6401d662:	je     0x6401d671
6401d664:	push   DWORD PTR [ebp-0x60]
6401d667:	call   0x64013a26
6401d66c:	and    DWORD PTR [ebp-0x60],0x0
6401d670:	pop    ecx
6401d671:	mov    ebx,DWORD PTR [ebp-0x4c]
6401d674:	mov    al,BYTE PTR [ebx]
6401d676:	test   al,al
6401d678:	mov    BYTE PTR [ebp-0x19],al
6401d67b:	je     0x6401d69e
6401d67d:	mov    edi,DWORD PTR [ebp-0x2c]
6401d680:	mov    dl,al
6401d682:	jmp    0x6401cea7
6401d687:	call   0x64014950
6401d68c:	mov    DWORD PTR [eax],0x16
6401d692:	xor    eax,eax
6401d694:	push   eax
6401d695:	push   eax
6401d696:	push   eax
6401d697:	push   eax
6401d698:	push   eax
6401d699:	jmp    0x6401cdb8
6401d69e:	xor    esi,esi
6401d6a0:	cmp    DWORD PTR [ebp-0x48],esi
6401d6a3:	je     0x6401d6af
6401d6a5:	cmp    DWORD PTR [ebp-0x48],0x7
6401d6a9:	jne    0x6401cda8
6401d6af:	cmp    BYTE PTR [ebp-0x50],0x0
6401d6b3:	je     0x6401d6bc
6401d6b5:	mov    eax,DWORD PTR [ebp-0x54]
6401d6b8:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d6bc:	mov    eax,DWORD PTR [ebp-0x34]
6401d6bf:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401d6c5:	pop    edi
6401d6c6:	pop    esi
6401d6c7:	xor    ecx,ebp
6401d6c9:	pop    ebx
6401d6ca:	call   0x64012b8c
6401d6cf:	add    ebp,0x1f8
6401d6d5:	leave  
6401d6d6:	ret    
6401d6d7:	nop
6401d6d8:	cdq    
6401d6d9:	rol    BYTE PTR [ecx],1
6401d6db:	fs dec dh
6401d6de:	add    DWORD PTR [ebx+ebx*1-0x31],esp
6401d6e2:	add    DWORD PTR [eax+ebp*2-0x31],esp
6401d6e6:	add    DWORD PTR [edx+eiz*4-0x31],esp
6401d6ea:	add    DWORD PTR [ebx+ebp*4-0x31],esp
6401d6ee:	add    DWORD PTR [edx+eiz*8-0x31],esp
6401d6f2:	add    DWORD PTR [esp+ebx*8-0x30],esp
6401d6f6:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401d6fa:	in     al,dx
6401d6fb:	sub    esp,0xc
6401d6fe:	mov    eax,ds:0x6402d09c
6401d703:	xor    eax,ebp
6401d705:	mov    DWORD PTR [ebp-0x4],eax
6401d708:	push   0x6
6401d70a:	lea    eax,[ebp-0xc]
6401d70d:	push   eax
6401d70e:	push   0x1004
6401d713:	push   DWORD PTR [ebp+0x8]
6401d716:	mov    BYTE PTR [ebp-0x6],0x0
6401d71a:	call   DWORD PTR ds:0x640250e4
6401d720:	test   eax,eax
6401d722:	jne    0x6401d729
6401d724:	or     eax,0xffffffff
6401d727:	jmp    0x6401d733
6401d729:	lea    eax,[ebp-0xc]
6401d72c:	push   eax
6401d72d:	call   0x6401ddc4
6401d732:	pop    ecx
6401d733:	mov    ecx,DWORD PTR [ebp-0x4]
6401d736:	xor    ecx,ebp
6401d738:	call   0x64012b8c
6401d73d:	leave  
6401d73e:	ret    
6401d73f:	push   ebp
6401d740:	mov    ebp,esp
6401d742:	sub    esp,0x34
6401d745:	mov    eax,ds:0x6402d09c
6401d74a:	xor    eax,ebp
6401d74c:	mov    DWORD PTR [ebp-0x4],eax
6401d74f:	mov    eax,DWORD PTR [ebp+0x10]
6401d752:	mov    ecx,DWORD PTR [ebp+0x18]
6401d755:	mov    DWORD PTR [ebp-0x28],eax
6401d758:	mov    eax,DWORD PTR [ebp+0x14]
6401d75b:	push   ebx
6401d75c:	mov    DWORD PTR [ebp-0x30],eax
6401d75f:	mov    eax,DWORD PTR [eax]
6401d761:	push   esi
6401d762:	mov    DWORD PTR [ebp-0x24],eax
6401d765:	mov    eax,DWORD PTR [ebp+0x8]
6401d768:	push   edi
6401d769:	xor    edi,edi
6401d76b:	cmp    eax,DWORD PTR [ebp+0xc]
6401d76e:	mov    DWORD PTR [ebp-0x34],ecx
6401d771:	mov    DWORD PTR [ebp-0x20],edi
6401d774:	mov    DWORD PTR [ebp-0x2c],edi
6401d777:	je     0x6401d8dc
6401d77d:	mov    esi,DWORD PTR ds:0x64025140
6401d783:	lea    ecx,[ebp-0x18]
6401d786:	push   ecx
6401d787:	push   eax
6401d788:	call   esi
6401d78a:	test   eax,eax
6401d78c:	mov    ebx,DWORD PTR ds:0x64025024
6401d792:	je     0x6401d7f2
6401d794:	cmp    DWORD PTR [ebp-0x18],0x1
6401d798:	jne    0x6401d7f2
6401d79a:	lea    eax,[ebp-0x18]
6401d79d:	push   eax
6401d79e:	push   DWORD PTR [ebp+0xc]
6401d7a1:	call   esi
6401d7a3:	test   eax,eax
6401d7a5:	je     0x6401d7f2
6401d7a7:	cmp    DWORD PTR [ebp-0x18],0x1
6401d7ab:	jne    0x6401d7f2
6401d7ad:	mov    esi,DWORD PTR [ebp-0x24]
6401d7b0:	cmp    esi,0xffffffff
6401d7b3:	mov    DWORD PTR [ebp-0x2c],0x1
6401d7ba:	jne    0x6401d7c8
6401d7bc:	push   DWORD PTR [ebp-0x28]
6401d7bf:	call   0x64014350
6401d7c4:	mov    esi,eax
6401d7c6:	pop    ecx
6401d7c7:	inc    esi
6401d7c8:	cmp    esi,edi
6401d7ca:	jle    0x6401d827
6401d7cc:	cmp    esi,0x7ffffff0
6401d7d2:	ja     0x6401d827
6401d7d4:	lea    eax,[esi+esi*1+0x8]
6401d7d8:	cmp    eax,0x400
6401d7dd:	ja     0x6401d80e
6401d7df:	call   0x64013310
6401d7e4:	mov    eax,esp
6401d7e6:	cmp    eax,edi
6401d7e8:	je     0x6401d822
6401d7ea:	mov    DWORD PTR [eax],0xcccc
6401d7f0:	jmp    0x6401d81f
6401d7f2:	push   edi
6401d7f3:	push   edi
6401d7f4:	push   DWORD PTR [ebp-0x24]
6401d7f7:	push   DWORD PTR [ebp-0x28]
6401d7fa:	push   0x1
6401d7fc:	push   DWORD PTR [ebp+0x8]
6401d7ff:	call   ebx
6401d801:	mov    esi,eax
6401d803:	cmp    esi,edi
6401d805:	jne    0x6401d7ca
6401d807:	xor    eax,eax
6401d809:	jmp    0x6401d8df
6401d80e:	push   eax
6401d80f:	call   0x64013b03
6401d814:	cmp    eax,edi
6401d816:	pop    ecx
6401d817:	je     0x6401d822
6401d819:	mov    DWORD PTR [eax],0xdddd
6401d81f:	add    eax,0x8
6401d822:	mov    DWORD PTR [ebp-0x1c],eax
6401d825:	jmp    0x6401d82a
6401d827:	mov    DWORD PTR [ebp-0x1c],edi
6401d82a:	cmp    DWORD PTR [ebp-0x1c],edi
6401d82d:	je     0x6401d807
6401d82f:	lea    eax,[esi+esi*1]
6401d832:	push   eax
6401d833:	push   edi
6401d834:	push   DWORD PTR [ebp-0x1c]
6401d837:	call   0x64013290
6401d83c:	add    esp,0xc
6401d83f:	push   esi
6401d840:	push   DWORD PTR [ebp-0x1c]
6401d843:	push   DWORD PTR [ebp-0x24]
6401d846:	push   DWORD PTR [ebp-0x28]
6401d849:	push   0x1
6401d84b:	push   DWORD PTR [ebp+0x8]
6401d84e:	call   ebx
6401d850:	test   eax,eax
6401d852:	je     0x6401d8d3
6401d854:	mov    ebx,DWORD PTR [ebp-0x34]
6401d857:	cmp    ebx,edi
6401d859:	je     0x6401d878
6401d85b:	push   edi
6401d85c:	push   edi
6401d85d:	push   DWORD PTR [ebp+0x1c]
6401d860:	push   ebx
6401d861:	push   esi
6401d862:	push   DWORD PTR [ebp-0x1c]
6401d865:	push   edi
6401d866:	push   DWORD PTR [ebp+0xc]
6401d869:	call   DWORD PTR ds:0x64025028
6401d86f:	test   eax,eax
6401d871:	je     0x6401d8d3
6401d873:	mov    DWORD PTR [ebp-0x20],ebx
6401d876:	jmp    0x6401d8d3
6401d878:	cmp    DWORD PTR [ebp-0x2c],edi
6401d87b:	mov    ebx,DWORD PTR ds:0x64025028
6401d881:	jne    0x6401d897
6401d883:	push   edi
6401d884:	push   edi
6401d885:	push   edi
6401d886:	push   edi
6401d887:	push   esi
6401d888:	push   DWORD PTR [ebp-0x1c]
6401d88b:	push   edi
6401d88c:	push   DWORD PTR [ebp+0xc]
6401d88f:	call   ebx
6401d891:	mov    esi,eax
6401d893:	cmp    esi,edi
6401d895:	je     0x6401d8d3
6401d897:	push   esi
6401d898:	push   0x1
6401d89a:	call   0x64015ea0
6401d89f:	cmp    eax,edi
6401d8a1:	pop    ecx
6401d8a2:	pop    ecx
6401d8a3:	mov    DWORD PTR [ebp-0x20],eax
6401d8a6:	je     0x6401d8d3
6401d8a8:	push   edi
6401d8a9:	push   edi
6401d8aa:	push   esi
6401d8ab:	push   eax
6401d8ac:	push   esi
6401d8ad:	push   DWORD PTR [ebp-0x1c]
6401d8b0:	push   edi
6401d8b1:	push   DWORD PTR [ebp+0xc]
6401d8b4:	call   ebx
6401d8b6:	cmp    eax,edi
6401d8b8:	jne    0x6401d8c8
6401d8ba:	push   DWORD PTR [ebp-0x20]
6401d8bd:	call   0x64013a26
6401d8c2:	pop    ecx
6401d8c3:	mov    DWORD PTR [ebp-0x20],edi
6401d8c6:	jmp    0x6401d8d3
6401d8c8:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401d8cc:	je     0x6401d8d3
6401d8ce:	mov    ecx,DWORD PTR [ebp-0x30]
6401d8d1:	mov    DWORD PTR [ecx],eax
6401d8d3:	push   DWORD PTR [ebp-0x1c]
6401d8d6:	call   0x6401309c
6401d8db:	pop    ecx
6401d8dc:	mov    eax,DWORD PTR [ebp-0x20]
6401d8df:	lea    esp,[ebp-0x40]
6401d8e2:	pop    edi
6401d8e3:	pop    esi
6401d8e4:	pop    ebx
6401d8e5:	mov    ecx,DWORD PTR [ebp-0x4]
6401d8e8:	xor    ecx,ebp
6401d8ea:	call   0x64012b8c
6401d8ef:	leave  
6401d8f0:	ret    
6401d8f1:	push   0xc
6401d8f3:	push   0x6402a9d8
6401d8f8:	call   0x64014150
6401d8fd:	and    DWORD PTR [ebp-0x4],0x0
6401d901:	movapd xmm0,xmm1
6401d905:	mov    DWORD PTR [ebp-0x1c],0x1
6401d90c:	jmp    0x6401d931
6401d90e:	mov    eax,DWORD PTR [ebp-0x14]
6401d911:	mov    eax,DWORD PTR [eax]
6401d913:	mov    eax,DWORD PTR [eax]
6401d915:	cmp    eax,0xc0000005
6401d91a:	je     0x6401d926
6401d91c:	cmp    eax,0xc000001d
6401d921:	je     0x6401d926
6401d923:	xor    eax,eax
6401d925:	ret    
6401d926:	xor    eax,eax
6401d928:	inc    eax
6401d929:	ret    
6401d92a:	mov    esp,DWORD PTR [ebp-0x18]
6401d92d:	and    DWORD PTR [ebp-0x1c],0x0
6401d931:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401d938:	mov    eax,DWORD PTR [ebp-0x1c]
6401d93b:	call   0x64014195
6401d940:	ret    
6401d941:	push   ebp
6401d942:	mov    ebp,esp
6401d944:	sub    esp,0x18
6401d947:	xor    eax,eax
6401d949:	push   ebx
6401d94a:	mov    DWORD PTR [ebp-0x4],eax
6401d94d:	mov    DWORD PTR [ebp-0xc],eax
6401d950:	mov    DWORD PTR [ebp-0x8],eax
6401d953:	push   ebx
6401d954:	pushf  
6401d955:	pop    eax
6401d956:	mov    ecx,eax
6401d958:	xor    eax,0x200000
6401d95d:	push   eax
6401d95e:	popf   
6401d95f:	pushf  
6401d960:	pop    edx
6401d961:	sub    edx,ecx
6401d963:	je     0x6401d984
6401d965:	push   ecx
6401d966:	popf   
6401d967:	xor    eax,eax
6401d969:	cpuid  
6401d96b:	mov    DWORD PTR [ebp-0xc],eax
6401d96e:	mov    DWORD PTR [ebp-0x18],ebx
6401d971:	mov    DWORD PTR [ebp-0x14],edx
6401d974:	mov    DWORD PTR [ebp-0x10],ecx
6401d977:	mov    eax,0x1
6401d97c:	cpuid  
6401d97e:	mov    DWORD PTR [ebp-0x4],edx
6401d981:	mov    DWORD PTR [ebp-0x8],eax
6401d984:	pop    ebx
6401d985:	test   DWORD PTR [ebp-0x4],0x4000000
6401d98c:	je     0x6401d99c
6401d98e:	call   0x6401d8f1
6401d993:	test   eax,eax
6401d995:	je     0x6401d99c
6401d997:	xor    eax,eax
6401d999:	inc    eax
6401d99a:	jmp    0x6401d99e
6401d99c:	xor    eax,eax
6401d99e:	pop    ebx
6401d99f:	leave  
6401d9a0:	ret    
6401d9a1:	call   0x6401d941
6401d9a6:	mov    ds:0x64032624,eax
6401d9ab:	xor    eax,eax
6401d9ad:	ret    
6401d9ae:	push   ebp
6401d9af:	mov    ebp,esp
6401d9b1:	sub    esp,0x10
6401d9b4:	push   DWORD PTR [ebp+0x8]
6401d9b7:	lea    ecx,[ebp-0x10]
6401d9ba:	call   0x64012d2f
6401d9bf:	movzx  eax,BYTE PTR [ebp+0xc]
6401d9c3:	mov    ecx,DWORD PTR [ebp-0xc]
6401d9c6:	mov    dl,BYTE PTR [ebp+0x14]
6401d9c9:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401d9cd:	jne    0x6401d9ed
6401d9cf:	cmp    DWORD PTR [ebp+0x10],0x0
6401d9d3:	je     0x6401d9e7
6401d9d5:	mov    ecx,DWORD PTR [ebp-0x10]
6401d9d8:	mov    ecx,DWORD PTR [ecx+0xc8]
6401d9de:	movzx  eax,WORD PTR [ecx+eax*2]
6401d9e2:	and    eax,DWORD PTR [ebp+0x10]
6401d9e5:	jmp    0x6401d9e9
6401d9e7:	xor    eax,eax
6401d9e9:	test   eax,eax
6401d9eb:	je     0x6401d9f0
6401d9ed:	xor    eax,eax
6401d9ef:	inc    eax
6401d9f0:	cmp    BYTE PTR [ebp-0x4],0x0
6401d9f4:	je     0x6401d9fd
6401d9f6:	mov    ecx,DWORD PTR [ebp-0x8]
6401d9f9:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d9fd:	leave  
6401d9fe:	ret    
6401d9ff:	push   0x4
6401da01:	push   0x0
6401da03:	push   DWORD PTR [esp+0xc]
6401da07:	push   0x0
6401da09:	call   0x6401d9ae
6401da0e:	add    esp,0x10
6401da11:	ret    
6401da12:	push   ebp
6401da13:	mov    ebp,esp
6401da15:	sub    esp,0x10
6401da18:	push   ebx
6401da19:	push   esi
6401da1a:	mov    esi,DWORD PTR [ebp+0xc]
6401da1d:	xor    ebx,ebx
6401da1f:	cmp    esi,ebx
6401da21:	push   edi
6401da22:	mov    edi,DWORD PTR [ebp+0x10]
6401da25:	jne    0x6401da38
6401da27:	cmp    edi,ebx
6401da29:	jbe    0x6401da38
6401da2b:	mov    eax,DWORD PTR [ebp+0x8]
6401da2e:	cmp    eax,ebx
6401da30:	je     0x6401da34
6401da32:	mov    DWORD PTR [eax],ebx
6401da34:	xor    eax,eax
6401da36:	jmp    0x6401dab7
6401da38:	mov    eax,DWORD PTR [ebp+0x8]
6401da3b:	cmp    eax,ebx
6401da3d:	je     0x6401da42
6401da3f:	or     DWORD PTR [eax],0xffffffff
6401da42:	cmp    edi,0x7fffffff
6401da48:	jbe    0x6401da65
6401da4a:	call   0x64014950
6401da4f:	push   0x16
6401da51:	pop    esi
6401da52:	push   ebx
6401da53:	push   ebx
6401da54:	push   ebx
6401da55:	push   ebx
6401da56:	push   ebx
6401da57:	mov    DWORD PTR [eax],esi
6401da59:	call   0x640126c4
6401da5e:	add    esp,0x14
6401da61:	mov    eax,esi
6401da63:	jmp    0x6401dab7
6401da65:	push   DWORD PTR [ebp+0x18]
6401da68:	lea    ecx,[ebp-0x10]
6401da6b:	call   0x64012d2f
6401da70:	mov    eax,DWORD PTR [ebp-0x10]
6401da73:	cmp    DWORD PTR [eax+0x14],ebx
6401da76:	jne    0x6401db10
6401da7c:	mov    ax,WORD PTR [ebp+0x14]
6401da80:	cmp    ax,0xff
6401da84:	jbe    0x6401dabc
6401da86:	cmp    esi,ebx
6401da88:	je     0x6401da99
6401da8a:	cmp    edi,ebx
6401da8c:	jbe    0x6401da99
6401da8e:	push   edi
6401da8f:	push   ebx
6401da90:	push   esi
6401da91:	call   0x64013290
6401da96:	add    esp,0xc
6401da99:	call   0x64014950
6401da9e:	mov    DWORD PTR [eax],0x2a
6401daa4:	call   0x64014950
6401daa9:	cmp    BYTE PTR [ebp-0x4],bl
6401daac:	mov    eax,DWORD PTR [eax]
6401daae:	je     0x6401dab7
6401dab0:	mov    ecx,DWORD PTR [ebp-0x8]
6401dab3:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401dab7:	pop    edi
6401dab8:	pop    esi
6401dab9:	pop    ebx
6401daba:	leave  
6401dabb:	ret    
6401dabc:	cmp    esi,ebx
6401dabe:	je     0x6401daee
6401dac0:	cmp    edi,ebx
6401dac2:	ja     0x6401daec
6401dac4:	call   0x64014950
6401dac9:	push   0x22
6401dacb:	pop    esi
6401dacc:	push   ebx
6401dacd:	push   ebx
6401dace:	push   ebx
6401dacf:	push   ebx
6401dad0:	push   ebx
6401dad1:	mov    DWORD PTR [eax],esi
6401dad3:	call   0x640126c4
6401dad8:	add    esp,0x14
6401dadb:	cmp    BYTE PTR [ebp-0x4],bl
6401dade:	je     0x6401da61
6401dae0:	mov    eax,DWORD PTR [ebp-0x8]
6401dae3:	and    DWORD PTR [eax+0x70],0xfffffffd
6401dae7:	jmp    0x6401da61
6401daec:	mov    BYTE PTR [esi],al
6401daee:	mov    eax,DWORD PTR [ebp+0x8]
6401daf1:	cmp    eax,ebx
6401daf3:	je     0x6401dafb
6401daf5:	mov    DWORD PTR [eax],0x1
6401dafb:	cmp    BYTE PTR [ebp-0x4],bl
6401dafe:	je     0x6401da34
6401db04:	mov    eax,DWORD PTR [ebp-0x8]
6401db07:	and    DWORD PTR [eax+0x70],0xfffffffd
6401db0b:	jmp    0x6401da34
6401db10:	lea    ecx,[ebp+0xc]
6401db13:	push   ecx
6401db14:	push   ebx
6401db15:	push   edi
6401db16:	push   esi
6401db17:	push   0x1
6401db19:	lea    ecx,[ebp+0x14]
6401db1c:	push   ecx
6401db1d:	push   ebx
6401db1e:	mov    DWORD PTR [ebp+0xc],ebx
6401db21:	push   DWORD PTR [eax+0x4]
6401db24:	call   DWORD PTR ds:0x64025028
6401db2a:	cmp    eax,ebx
6401db2c:	je     0x6401db42
6401db2e:	cmp    DWORD PTR [ebp+0xc],ebx
6401db31:	jne    0x6401da99
6401db37:	mov    ecx,DWORD PTR [ebp+0x8]
6401db3a:	cmp    ecx,ebx
6401db3c:	je     0x6401dafb
6401db3e:	mov    DWORD PTR [ecx],eax
6401db40:	jmp    0x6401dafb
6401db42:	call   DWORD PTR ds:0x64025044
6401db48:	cmp    eax,0x7a
6401db4b:	jne    0x6401da99
6401db51:	cmp    esi,ebx
6401db53:	je     0x6401dac4
6401db59:	cmp    edi,ebx
6401db5b:	jbe    0x6401dac4
6401db61:	push   edi
6401db62:	push   ebx
6401db63:	push   esi
6401db64:	call   0x64013290
6401db69:	add    esp,0xc
6401db6c:	jmp    0x6401dac4
6401db71:	push   0x0
6401db73:	push   DWORD PTR [esp+0x14]
6401db77:	push   DWORD PTR [esp+0x14]
6401db7b:	push   DWORD PTR [esp+0x14]
6401db7f:	push   DWORD PTR [esp+0x14]
6401db83:	call   0x6401da12
6401db88:	add    esp,0x14
6401db8b:	ret    
6401db8c:	push   ebp
6401db8d:	mov    ebp,esp
6401db8f:	sub    esp,0x20
6401db92:	push   ebx
6401db93:	push   esi
6401db94:	push   edi
6401db95:	call   0x64014a76
6401db9a:	xor    ebx,ebx
6401db9c:	cmp    DWORD PTR ds:0x6402ef5c,ebx
6401dba2:	mov    DWORD PTR [ebp-0x8],eax
6401dba5:	mov    DWORD PTR [ebp-0x4],ebx
6401dba8:	mov    DWORD PTR [ebp-0xc],ebx
6401dbab:	mov    DWORD PTR [ebp-0x10],ebx
6401dbae:	jne    0x6401dc62
6401dbb4:	push   0x640275d0
6401dbb9:	call   DWORD PTR ds:0x640250c4
6401dbbf:	mov    edi,eax
6401dbc1:	cmp    edi,ebx
6401dbc3:	je     0x6401dd42
6401dbc9:	mov    esi,DWORD PTR ds:0x64025014
6401dbcf:	push   0x640275c4
6401dbd4:	push   edi
6401dbd5:	call   esi
6401dbd7:	cmp    eax,ebx
6401dbd9:	je     0x6401dd42
6401dbdf:	push   eax
6401dbe0:	call   0x64014a08
6401dbe5:	mov    DWORD PTR [esp],0x640275b4
6401dbec:	push   edi
6401dbed:	mov    ds:0x6402ef5c,eax
6401dbf2:	call   esi
6401dbf4:	push   eax
6401dbf5:	call   0x64014a08
6401dbfa:	mov    DWORD PTR [esp],0x640275a0
6401dc01:	push   edi
6401dc02:	mov    ds:0x6402ef60,eax
6401dc07:	call   esi
6401dc09:	push   eax
6401dc0a:	call   0x64014a08
6401dc0f:	mov    ds:0x6402ef64,eax
6401dc14:	lea    eax,[ebp-0xc]
6401dc17:	push   eax
6401dc18:	call   0x6401607f
6401dc1d:	test   eax,eax
6401dc1f:	pop    ecx
6401dc20:	pop    ecx
6401dc21:	je     0x6401dc30
6401dc23:	push   ebx
6401dc24:	push   ebx
6401dc25:	push   ebx
6401dc26:	push   ebx
6401dc27:	push   ebx
6401dc28:	call   0x640125c8
6401dc2d:	add    esp,0x14
6401dc30:	cmp    DWORD PTR [ebp-0xc],0x2
6401dc34:	jne    0x6401dc62
6401dc36:	push   0x64027584
6401dc3b:	push   edi
6401dc3c:	call   esi
6401dc3e:	push   eax
6401dc3f:	call   0x64014a08
6401dc44:	cmp    eax,ebx
6401dc46:	pop    ecx
6401dc47:	mov    ds:0x6402ef6c,eax
6401dc4c:	je     0x6401dc62
6401dc4e:	push   0x6402756c
6401dc53:	push   edi
6401dc54:	call   esi
6401dc56:	push   eax
6401dc57:	call   0x64014a08
6401dc5c:	pop    ecx
6401dc5d:	mov    ds:0x6402ef68,eax
6401dc62:	mov    eax,ds:0x6402ef68
6401dc67:	mov    ecx,DWORD PTR [ebp-0x8]
6401dc6a:	cmp    eax,ecx
6401dc6c:	je     0x6401dce7
6401dc6e:	cmp    DWORD PTR ds:0x6402ef6c,ecx
6401dc74:	je     0x6401dce7
6401dc76:	push   eax
6401dc77:	call   0x64014a7f
6401dc7c:	push   DWORD PTR ds:0x6402ef6c
6401dc82:	mov    esi,eax
6401dc84:	call   0x64014a7f
6401dc89:	cmp    esi,ebx
6401dc8b:	pop    ecx
6401dc8c:	pop    ecx
6401dc8d:	mov    edi,eax
6401dc8f:	je     0x6401dce7
6401dc91:	cmp    edi,ebx
6401dc93:	je     0x6401dce7
6401dc95:	call   esi
6401dc97:	cmp    eax,ebx
6401dc99:	je     0x6401dcb4
6401dc9b:	lea    ecx,[ebp-0x14]
6401dc9e:	push   ecx
6401dc9f:	push   0xc
6401dca1:	lea    ecx,[ebp-0x20]
6401dca4:	push   ecx
6401dca5:	push   0x1
6401dca7:	push   eax
6401dca8:	call   edi
6401dcaa:	test   eax,eax
6401dcac:	je     0x6401dcb4
6401dcae:	test   BYTE PTR [ebp-0x18],0x1
6401dcb2:	jne    0x6401dce7
6401dcb4:	lea    eax,[ebp-0x10]
6401dcb7:	push   eax
6401dcb8:	call   0x640160b6
6401dcbd:	test   eax,eax
6401dcbf:	pop    ecx
6401dcc0:	je     0x6401dccf
6401dcc2:	push   ebx
6401dcc3:	push   ebx
6401dcc4:	push   ebx
6401dcc5:	push   ebx
6401dcc6:	push   ebx
6401dcc7:	call   0x640125c8
6401dccc:	add    esp,0x14
6401dccf:	cmp    DWORD PTR [ebp-0x10],0x4
6401dcd3:	jb     0x6401dcde
6401dcd5:	or     DWORD PTR [ebp+0x10],0x200000
6401dcdc:	jmp    0x6401dd22
6401dcde:	or     DWORD PTR [ebp+0x10],0x40000
6401dce5:	jmp    0x6401dd22
6401dce7:	mov    eax,ds:0x6402ef60
6401dcec:	cmp    eax,DWORD PTR [ebp-0x8]
6401dcef:	je     0x6401dd22
6401dcf1:	push   eax
6401dcf2:	call   0x64014a7f
6401dcf7:	cmp    eax,ebx
6401dcf9:	pop    ecx
6401dcfa:	je     0x6401dd22
6401dcfc:	call   eax
6401dcfe:	cmp    eax,ebx
6401dd00:	mov    DWORD PTR [ebp-0x4],eax
6401dd03:	je     0x6401dd22
6401dd05:	mov    eax,ds:0x6402ef64
6401dd0a:	cmp    eax,DWORD PTR [ebp-0x8]
6401dd0d:	je     0x6401dd22
6401dd0f:	push   eax
6401dd10:	call   0x64014a7f
6401dd15:	cmp    eax,ebx
6401dd17:	pop    ecx
6401dd18:	je     0x6401dd22
6401dd1a:	push   DWORD PTR [ebp-0x4]
6401dd1d:	call   eax
6401dd1f:	mov    DWORD PTR [ebp-0x4],eax
6401dd22:	push   DWORD PTR ds:0x6402ef5c
6401dd28:	call   0x64014a7f
6401dd2d:	cmp    eax,ebx
6401dd2f:	pop    ecx
6401dd30:	je     0x6401dd42
6401dd32:	push   DWORD PTR [ebp+0x10]
6401dd35:	push   DWORD PTR [ebp+0xc]
6401dd38:	push   DWORD PTR [ebp+0x8]
6401dd3b:	push   DWORD PTR [ebp-0x4]
6401dd3e:	call   eax
6401dd40:	jmp    0x6401dd44
6401dd42:	xor    eax,eax
6401dd44:	pop    edi
6401dd45:	pop    esi
6401dd46:	pop    ebx
6401dd47:	leave  
6401dd48:	ret    
6401dd49:	mov    ecx,DWORD PTR [esp+0x4]
6401dd4d:	push   esi
6401dd4e:	xor    esi,esi
6401dd50:	cmp    ecx,esi
6401dd52:	jl     0x6401dd72
6401dd54:	cmp    ecx,0x2
6401dd57:	jle    0x6401dd65
6401dd59:	cmp    ecx,0x3
6401dd5c:	jne    0x6401dd72
6401dd5e:	mov    eax,ds:0x6402e57c
6401dd63:	pop    esi
6401dd64:	ret    
6401dd65:	mov    eax,ds:0x6402e57c
6401dd6a:	mov    DWORD PTR ds:0x6402e57c,ecx
6401dd70:	pop    esi
6401dd71:	ret    
6401dd72:	call   0x64014950
6401dd77:	push   esi
6401dd78:	push   esi
6401dd79:	push   esi
6401dd7a:	push   esi
6401dd7b:	push   esi
6401dd7c:	mov    DWORD PTR [eax],0x16
6401dd82:	call   0x640126c4
6401dd87:	add    esp,0x14
6401dd8a:	or     eax,0xffffffff
6401dd8d:	pop    esi
6401dd8e:	ret    
6401dd8f:	int3   
6401dd90:	mov    eax,DWORD PTR [esp+0x8]
6401dd94:	mov    ecx,DWORD PTR [esp+0x10]
6401dd98:	or     ecx,eax
6401dd9a:	mov    ecx,DWORD PTR [esp+0xc]
6401dd9e:	jne    0x6401dda9
6401dda0:	mov    eax,DWORD PTR [esp+0x4]
6401dda4:	mul    ecx
6401dda6:	ret    0x10
6401dda9:	push   ebx
6401ddaa:	mul    ecx
6401ddac:	mov    ebx,eax
6401ddae:	mov    eax,DWORD PTR [esp+0x8]
6401ddb2:	mul    DWORD PTR [esp+0x14]
6401ddb6:	add    ebx,eax
6401ddb8:	mov    eax,DWORD PTR [esp+0x8]
6401ddbc:	mul    ecx
6401ddbe:	add    edx,ebx
6401ddc0:	pop    ebx
6401ddc1:	ret    0x10
6401ddc4:	push   0xa
6401ddc6:	push   0x0
6401ddc8:	push   DWORD PTR [esp+0xc]
6401ddcc:	call   0x6401e615
6401ddd1:	add    esp,0xc
6401ddd4:	ret    
6401ddd5:	push   0x2
6401ddd7:	call   0x64015fd6
6401dddc:	pop    ecx
6401dddd:	ret    
6401ddde:	mov    ecx,DWORD PTR [esp+0x4]
6401dde2:	push   ebx
6401dde3:	xor    ebx,ebx
6401dde5:	cmp    ecx,ebx
6401dde7:	push   esi
6401dde8:	push   edi
6401dde9:	jl     0x6401de46
6401ddeb:	cmp    ecx,DWORD PTR ds:0x64032500
6401ddf1:	jae    0x6401de46
6401ddf3:	mov    eax,ecx
6401ddf5:	sar    eax,0x5
6401ddf8:	mov    esi,ecx
6401ddfa:	lea    edi,[eax*4+0x64032520]
6401de01:	mov    eax,DWORD PTR [edi]
6401de03:	and    esi,0x1f
6401de06:	shl    esi,0x6
6401de09:	add    eax,esi
6401de0b:	test   BYTE PTR [eax+0x4],0x1
6401de0f:	je     0x6401de46
6401de11:	cmp    DWORD PTR [eax],0xffffffff
6401de14:	je     0x6401de46
6401de16:	cmp    DWORD PTR ds:0x6402e580,0x1
6401de1d:	jne    0x6401de3c
6401de1f:	sub    ecx,ebx
6401de21:	je     0x6401de33
6401de23:	dec    ecx
6401de24:	je     0x6401de2e
6401de26:	dec    ecx
6401de27:	jne    0x6401de3c
6401de29:	push   ebx
6401de2a:	push   0xfffffff4
6401de2c:	jmp    0x6401de36
6401de2e:	push   ebx
6401de2f:	push   0xfffffff5
6401de31:	jmp    0x6401de36
6401de33:	push   ebx
6401de34:	push   0xfffffff6
6401de36:	call   DWORD PTR ds:0x64025094
6401de3c:	mov    eax,DWORD PTR [edi]
6401de3e:	or     DWORD PTR [esi+eax*1],0xffffffff
6401de42:	xor    eax,eax
6401de44:	jmp    0x6401de5b
6401de46:	call   0x64014950
6401de4b:	mov    DWORD PTR [eax],0x9
6401de51:	call   0x64014963
6401de56:	mov    DWORD PTR [eax],ebx
6401de58:	or     eax,0xffffffff
6401de5b:	pop    edi
6401de5c:	pop    esi
6401de5d:	pop    ebx
6401de5e:	ret    
6401de5f:	mov    eax,DWORD PTR [esp+0x4]
6401de63:	cmp    eax,0xfffffffe
6401de66:	jne    0x6401de7f
6401de68:	call   0x64014963
6401de6d:	and    DWORD PTR [eax],0x0
6401de70:	call   0x64014950
6401de75:	mov    DWORD PTR [eax],0x9
6401de7b:	or     eax,0xffffffff
6401de7e:	ret    
6401de7f:	push   esi
6401de80:	xor    esi,esi
6401de82:	cmp    eax,esi
6401de84:	jl     0x6401dea8
6401de86:	cmp    eax,DWORD PTR ds:0x64032500
6401de8c:	jae    0x6401dea8
6401de8e:	mov    ecx,eax
6401de90:	and    eax,0x1f
6401de93:	sar    ecx,0x5
6401de96:	mov    ecx,DWORD PTR [ecx*4+0x64032520]
6401de9d:	shl    eax,0x6
6401dea0:	add    eax,ecx
6401dea2:	test   BYTE PTR [eax+0x4],0x1
6401dea6:	jne    0x6401decc
6401dea8:	call   0x64014963
6401dead:	mov    DWORD PTR [eax],esi
6401deaf:	call   0x64014950
6401deb4:	push   esi
6401deb5:	push   esi
6401deb6:	push   esi
6401deb7:	push   esi
6401deb8:	push   esi
6401deb9:	mov    DWORD PTR [eax],0x9
6401debf:	call   0x640126c4
6401dec4:	add    esp,0x14
6401dec7:	or     eax,0xffffffff
6401deca:	pop    esi
6401decb:	ret    
6401decc:	mov    eax,DWORD PTR [eax]
6401dece:	pop    esi
6401decf:	ret    
6401ded0:	push   0xc
6401ded2:	push   0x6402a9f8
6401ded7:	call   0x64014150
6401dedc:	mov    edi,DWORD PTR [ebp+0x8]
6401dedf:	mov    eax,edi
6401dee1:	sar    eax,0x5
6401dee4:	mov    esi,edi
6401dee6:	and    esi,0x1f
6401dee9:	shl    esi,0x6
6401deec:	add    esi,DWORD PTR [eax*4+0x64032520]
6401def3:	mov    DWORD PTR [ebp-0x1c],0x1
6401defa:	xor    ebx,ebx
6401defc:	cmp    DWORD PTR [esi+0x8],ebx
6401deff:	jne    0x6401df37
6401df01:	push   0xa
6401df03:	call   0x6401a19a
6401df08:	pop    ecx
6401df09:	mov    DWORD PTR [ebp-0x4],ebx
6401df0c:	cmp    DWORD PTR [esi+0x8],ebx
6401df0f:	jne    0x6401df2b
6401df11:	push   0xfa0
6401df16:	lea    eax,[esi+0xc]
6401df19:	push   eax
6401df1a:	call   0x6401b858
6401df1f:	pop    ecx
6401df20:	pop    ecx
6401df21:	test   eax,eax
6401df23:	jne    0x6401df28
6401df25:	mov    DWORD PTR [ebp-0x1c],ebx
6401df28:	inc    DWORD PTR [esi+0x8]
6401df2b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401df32:	call   0x6401df67
6401df37:	cmp    DWORD PTR [ebp-0x1c],ebx
6401df3a:	je     0x6401df59
6401df3c:	mov    eax,edi
6401df3e:	sar    eax,0x5
6401df41:	and    edi,0x1f
6401df44:	shl    edi,0x6
6401df47:	mov    eax,DWORD PTR [eax*4+0x64032520]
6401df4e:	lea    eax,[eax+edi*1+0xc]
6401df52:	push   eax
6401df53:	call   DWORD PTR ds:0x6402509c
6401df59:	mov    eax,DWORD PTR [ebp-0x1c]
6401df5c:	call   0x64014195
6401df61:	ret    
6401df62:	xor    ebx,ebx
6401df64:	mov    edi,DWORD PTR [ebp+0x8]
6401df67:	push   0xa
6401df69:	call   0x6401a0c2
6401df6e:	pop    ecx
6401df6f:	ret    
6401df70:	mov    eax,DWORD PTR [esp+0x4]
6401df74:	mov    ecx,eax
6401df76:	and    eax,0x1f
6401df79:	sar    ecx,0x5
6401df7c:	mov    ecx,DWORD PTR [ecx*4+0x64032520]
6401df83:	shl    eax,0x6
6401df86:	lea    eax,[ecx+eax*1+0xc]
6401df8a:	push   eax
6401df8b:	call   DWORD PTR ds:0x640250a0
6401df91:	ret    
6401df92:	push   ebp
6401df93:	mov    ebp,esp
6401df95:	sub    esp,0x10
6401df98:	mov    eax,ds:0x6402d09c
6401df9d:	xor    eax,ebp
6401df9f:	mov    DWORD PTR [ebp-0x4],eax
6401dfa2:	push   esi
6401dfa3:	xor    esi,esi
6401dfa5:	cmp    DWORD PTR ds:0x6402dfb0,esi
6401dfab:	je     0x6401dffb
6401dfad:	cmp    DWORD PTR ds:0x6402e024,0xfffffffe
6401dfb4:	jne    0x6401dfbb
6401dfb6:	call   0x6401e6a1
6401dfbb:	mov    eax,ds:0x6402e024
6401dfc0:	cmp    eax,0xffffffff
6401dfc3:	jne    0x6401dfcb
6401dfc5:	or     ax,0xffff
6401dfc9:	jmp    0x6401e03b
6401dfcb:	push   esi
6401dfcc:	lea    ecx,[ebp-0x10]
6401dfcf:	push   ecx
6401dfd0:	push   0x1
6401dfd2:	lea    ecx,[ebp+0x8]
6401dfd5:	push   ecx
6401dfd6:	push   eax
6401dfd7:	call   DWORD PTR ds:0x640250ac
6401dfdd:	test   eax,eax
6401dfdf:	jne    0x6401e048
6401dfe1:	cmp    DWORD PTR ds:0x6402dfb0,0x2
6401dfe8:	jne    0x6401dfc5
6401dfea:	call   DWORD PTR ds:0x64025044
6401dff0:	cmp    eax,0x78
6401dff3:	jne    0x6401dfc5
6401dff5:	mov    DWORD PTR ds:0x6402dfb0,esi
6401dffb:	push   esi
6401dffc:	push   esi
6401dffd:	push   0x5
6401dfff:	lea    eax,[ebp-0xc]
6401e002:	push   eax
6401e003:	push   0x1
6401e005:	lea    eax,[ebp+0x8]
6401e008:	push   eax
6401e009:	push   esi
6401e00a:	call   DWORD PTR ds:0x640250a8
6401e010:	push   eax
6401e011:	call   DWORD PTR ds:0x64025028
6401e017:	mov    ecx,DWORD PTR ds:0x6402e024
6401e01d:	cmp    ecx,0xffffffff
6401e020:	je     0x6401dfc5
6401e022:	push   esi
6401e023:	lea    edx,[ebp-0x10]
6401e026:	push   edx
6401e027:	push   eax
6401e028:	lea    eax,[ebp-0xc]
6401e02b:	push   eax
6401e02c:	push   ecx
6401e02d:	call   DWORD PTR ds:0x64025090
6401e033:	test   eax,eax
6401e035:	je     0x6401dfc5
6401e037:	mov    ax,WORD PTR [ebp+0x8]
6401e03b:	mov    ecx,DWORD PTR [ebp-0x4]
6401e03e:	xor    ecx,ebp
6401e040:	pop    esi
6401e041:	call   0x64012b8c
6401e046:	leave  
6401e047:	ret    
6401e048:	mov    DWORD PTR ds:0x6402dfb0,0x1
6401e052:	jmp    0x6401e037
6401e054:	push   0x10
6401e056:	push   0x6402aa18
6401e05b:	call   0x64014150
6401e060:	xor    ebx,ebx
6401e062:	mov    DWORD PTR [ebp-0x1c],ebx
6401e065:	push   0x1
6401e067:	call   0x6401a19a
6401e06c:	pop    ecx
6401e06d:	mov    DWORD PTR [ebp-0x4],ebx
6401e070:	push   0x3
6401e072:	pop    edi
6401e073:	mov    DWORD PTR [ebp-0x20],edi
6401e076:	cmp    edi,DWORD PTR ds:0x640324e0
6401e07c:	jge    0x6401e0d5
6401e07e:	mov    esi,edi
6401e080:	shl    esi,0x2
6401e083:	mov    eax,ds:0x640314c0
6401e088:	add    eax,esi
6401e08a:	cmp    DWORD PTR [eax],ebx
6401e08c:	je     0x6401e0d2
6401e08e:	mov    eax,DWORD PTR [eax]
6401e090:	test   BYTE PTR [eax+0xc],0x83
6401e094:	je     0x6401e0a5
6401e096:	push   eax
6401e097:	call   0x6401e75f
6401e09c:	pop    ecx
6401e09d:	cmp    eax,0xffffffff
6401e0a0:	je     0x6401e0a5
6401e0a2:	inc    DWORD PTR [ebp-0x1c]
6401e0a5:	cmp    edi,0x14
6401e0a8:	jl     0x6401e0d2
6401e0aa:	mov    eax,ds:0x640314c0
6401e0af:	mov    eax,DWORD PTR [esi+eax*1]
6401e0b2:	add    eax,0x20
6401e0b5:	push   eax
6401e0b6:	call   DWORD PTR ds:0x640250a4
6401e0bc:	mov    eax,ds:0x640314c0
6401e0c1:	push   DWORD PTR [esi+eax*1]
6401e0c4:	call   0x64013a26
6401e0c9:	pop    ecx
6401e0ca:	mov    eax,ds:0x640314c0
6401e0cf:	mov    DWORD PTR [esi+eax*1],ebx
6401e0d2:	inc    edi
6401e0d3:	jmp    0x6401e073
6401e0d5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e0dc:	call   0x6401e0ea
6401e0e1:	mov    eax,DWORD PTR [ebp-0x1c]
6401e0e4:	call   0x64014195
6401e0e9:	ret    
6401e0ea:	push   0x1
6401e0ec:	call   0x6401a0c2
6401e0f1:	pop    ecx
6401e0f2:	ret    
6401e0f3:	push   ebx
6401e0f4:	push   esi
6401e0f5:	mov    esi,DWORD PTR [esp+0xc]
6401e0f9:	mov    eax,DWORD PTR [esi+0xc]
6401e0fc:	mov    ecx,eax
6401e0fe:	and    cl,0x3
6401e101:	xor    ebx,ebx
6401e103:	cmp    cl,0x2
6401e106:	jne    0x6401e147
6401e108:	test   ax,0x108
6401e10c:	je     0x6401e147
6401e10e:	mov    eax,DWORD PTR [esi+0x8]
6401e111:	push   edi
6401e112:	mov    edi,DWORD PTR [esi]
6401e114:	sub    edi,eax
6401e116:	test   edi,edi
6401e118:	jle    0x6401e146
6401e11a:	push   edi
6401e11b:	push   eax
6401e11c:	push   esi
6401e11d:	call   0x6401c9fd
6401e122:	pop    ecx
6401e123:	push   eax
6401e124:	call   0x6401c6de
6401e129:	add    esp,0xc
6401e12c:	cmp    eax,edi
6401e12e:	jne    0x6401e13f
6401e130:	mov    eax,DWORD PTR [esi+0xc]
6401e133:	test   al,al
6401e135:	jns    0x6401e146
6401e137:	and    eax,0xfffffffd
6401e13a:	mov    DWORD PTR [esi+0xc],eax
6401e13d:	jmp    0x6401e146
6401e13f:	or     DWORD PTR [esi+0xc],0x20
6401e143:	or     ebx,0xffffffff
6401e146:	pop    edi
6401e147:	mov    eax,DWORD PTR [esi+0x8]
6401e14a:	and    DWORD PTR [esi+0x4],0x0
6401e14e:	mov    DWORD PTR [esi],eax
6401e150:	pop    esi
6401e151:	mov    eax,ebx
6401e153:	pop    ebx
6401e154:	ret    
6401e155:	push   esi
6401e156:	mov    esi,DWORD PTR [esp+0x8]
6401e15a:	test   esi,esi
6401e15c:	jne    0x6401e167
6401e15e:	push   esi
6401e15f:	call   0x6401e197
6401e164:	pop    ecx
6401e165:	pop    esi
6401e166:	ret    
6401e167:	push   esi
6401e168:	call   0x6401e0f3
6401e16d:	test   eax,eax
6401e16f:	pop    ecx
6401e170:	je     0x6401e177
6401e172:	or     eax,0xffffffff
6401e175:	pop    esi
6401e176:	ret    
6401e177:	test   WORD PTR [esi+0xc],0x4000
6401e17d:	je     0x6401e193
6401e17f:	push   esi
6401e180:	call   0x6401c9fd
6401e185:	push   eax
6401e186:	call   0x6401e7db
6401e18b:	pop    ecx
6401e18c:	pop    ecx
6401e18d:	neg    eax
6401e18f:	sbb    eax,eax
6401e191:	pop    esi
6401e192:	ret    
6401e193:	xor    eax,eax
6401e195:	pop    esi
6401e196:	ret    
6401e197:	push   0x14
6401e199:	push   0x6402aa38
6401e19e:	call   0x64014150
6401e1a3:	xor    edi,edi
6401e1a5:	mov    DWORD PTR [ebp-0x1c],edi
6401e1a8:	mov    DWORD PTR [ebp-0x24],edi
6401e1ab:	push   0x1
6401e1ad:	call   0x6401a19a
6401e1b2:	pop    ecx
6401e1b3:	mov    DWORD PTR [ebp-0x4],edi
6401e1b6:	xor    esi,esi
6401e1b8:	mov    DWORD PTR [ebp-0x20],esi
6401e1bb:	cmp    esi,DWORD PTR ds:0x640324e0
6401e1c1:	jge    0x6401e24a
6401e1c7:	mov    eax,ds:0x640314c0
6401e1cc:	lea    eax,[eax+esi*4]
6401e1cf:	cmp    DWORD PTR [eax],edi
6401e1d1:	je     0x6401e231
6401e1d3:	mov    eax,DWORD PTR [eax]
6401e1d5:	test   BYTE PTR [eax+0xc],0x83
6401e1d9:	je     0x6401e231
6401e1db:	push   eax
6401e1dc:	push   esi
6401e1dd:	call   0x6401c96f
6401e1e2:	pop    ecx
6401e1e3:	pop    ecx
6401e1e4:	xor    edx,edx
6401e1e6:	inc    edx
6401e1e7:	mov    DWORD PTR [ebp-0x4],edx
6401e1ea:	mov    eax,ds:0x640314c0
6401e1ef:	mov    eax,DWORD PTR [eax+esi*4]
6401e1f2:	mov    ecx,DWORD PTR [eax+0xc]
6401e1f5:	test   cl,0x83
6401e1f8:	je     0x6401e229
6401e1fa:	cmp    DWORD PTR [ebp+0x8],edx
6401e1fd:	jne    0x6401e210
6401e1ff:	push   eax
6401e200:	call   0x6401e155
6401e205:	pop    ecx
6401e206:	cmp    eax,0xffffffff
6401e209:	je     0x6401e229
6401e20b:	inc    DWORD PTR [ebp-0x1c]
6401e20e:	jmp    0x6401e229
6401e210:	cmp    DWORD PTR [ebp+0x8],edi
6401e213:	jne    0x6401e229
6401e215:	test   cl,0x2
6401e218:	je     0x6401e229
6401e21a:	push   eax
6401e21b:	call   0x6401e155
6401e220:	pop    ecx
6401e221:	cmp    eax,0xffffffff
6401e224:	jne    0x6401e229
6401e226:	or     DWORD PTR [ebp-0x24],eax
6401e229:	mov    DWORD PTR [ebp-0x4],edi
6401e22c:	call   0x6401e239
6401e231:	inc    esi
6401e232:	jmp    0x6401e1b8
6401e234:	xor    edi,edi
6401e236:	mov    esi,DWORD PTR [ebp-0x20]
6401e239:	mov    eax,ds:0x640314c0
6401e23e:	push   DWORD PTR [eax+esi*4]
6401e241:	push   esi
6401e242:	call   0x6401c9d3
6401e247:	pop    ecx
6401e248:	pop    ecx
6401e249:	ret    
6401e24a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e251:	call   0x6401e268
6401e256:	cmp    DWORD PTR [ebp+0x8],0x1
6401e25a:	mov    eax,DWORD PTR [ebp-0x1c]
6401e25d:	je     0x6401e262
6401e25f:	mov    eax,DWORD PTR [ebp-0x24]
6401e262:	call   0x64014195
6401e267:	ret    
6401e268:	push   0x1
6401e26a:	call   0x6401a0c2
6401e26f:	pop    ecx
6401e270:	ret    
6401e271:	push   0x1
6401e273:	call   0x6401e197
6401e278:	pop    ecx
6401e279:	ret    
6401e27a:	push   ebp
6401e27b:	mov    ebp,esp
6401e27d:	push   ecx
6401e27e:	push   esi
6401e27f:	mov    esi,DWORD PTR [ebp+0xc]
6401e282:	push   esi
6401e283:	call   0x6401c9fd
6401e288:	mov    DWORD PTR [ebp+0xc],eax
6401e28b:	mov    eax,DWORD PTR [esi+0xc]
6401e28e:	test   al,0x82
6401e290:	pop    ecx
6401e291:	jne    0x6401e2ac
6401e293:	call   0x64014950
6401e298:	mov    DWORD PTR [eax],0x9
6401e29e:	or     DWORD PTR [esi+0xc],0x20
6401e2a2:	mov    eax,0xffff
6401e2a7:	jmp    0x6401e3e7
6401e2ac:	test   al,0x40
6401e2ae:	je     0x6401e2bd
6401e2b0:	call   0x64014950
6401e2b5:	mov    DWORD PTR [eax],0x22
6401e2bb:	jmp    0x6401e29e
6401e2bd:	test   al,0x1
6401e2bf:	je     0x6401e2d8
6401e2c1:	and    DWORD PTR [esi+0x4],0x0
6401e2c5:	test   al,0x10
6401e2c7:	je     0x6401e358
6401e2cd:	mov    ecx,DWORD PTR [esi+0x8]
6401e2d0:	and    eax,0xfffffffe
6401e2d3:	mov    DWORD PTR [esi],ecx
6401e2d5:	mov    DWORD PTR [esi+0xc],eax
6401e2d8:	mov    eax,DWORD PTR [esi+0xc]
6401e2db:	and    DWORD PTR [esi+0x4],0x0
6401e2df:	and    DWORD PTR [ebp-0x4],0x0
6401e2e3:	push   ebx
6401e2e4:	push   0x2
6401e2e6:	and    eax,0xffffffef
6401e2e9:	pop    ebx
6401e2ea:	or     eax,ebx
6401e2ec:	test   ax,0x10c
6401e2f0:	mov    DWORD PTR [esi+0xc],eax
6401e2f3:	jne    0x6401e321
6401e2f5:	call   0x6401c85c
6401e2fa:	add    eax,0x20
6401e2fd:	cmp    esi,eax
6401e2ff:	je     0x6401e30d
6401e301:	call   0x6401c85c
6401e306:	add    eax,0x40
6401e309:	cmp    esi,eax
6401e30b:	jne    0x6401e31a
6401e30d:	push   DWORD PTR [ebp+0xc]
6401e310:	call   0x6401c7fe
6401e315:	test   eax,eax
6401e317:	pop    ecx
6401e318:	jne    0x6401e321
6401e31a:	push   esi
6401e31b:	call   0x6401c7ba
6401e320:	pop    ecx
6401e321:	test   WORD PTR [esi+0xc],0x108
6401e327:	push   edi
6401e328:	je     0x6401e3b1
6401e32e:	mov    eax,DWORD PTR [esi+0x8]
6401e331:	mov    edi,DWORD PTR [esi]
6401e333:	lea    ecx,[eax+0x2]
6401e336:	mov    DWORD PTR [esi],ecx
6401e338:	mov    ecx,DWORD PTR [esi+0x18]
6401e33b:	sub    edi,eax
6401e33d:	sub    ecx,ebx
6401e33f:	test   edi,edi
6401e341:	mov    DWORD PTR [esi+0x4],ecx
6401e344:	jle    0x6401e363
6401e346:	push   edi
6401e347:	push   eax
6401e348:	push   DWORD PTR [ebp+0xc]
6401e34b:	call   0x6401c6de
6401e350:	add    esp,0xc
6401e353:	mov    DWORD PTR [ebp-0x4],eax
6401e356:	jmp    0x6401e3a6
6401e358:	or     eax,0x20
6401e35b:	mov    DWORD PTR [esi+0xc],eax
6401e35e:	jmp    0x6401e2a2
6401e363:	mov    ecx,DWORD PTR [ebp+0xc]
6401e366:	cmp    ecx,0xffffffff
6401e369:	je     0x6401e386
6401e36b:	cmp    ecx,0xfffffffe
6401e36e:	je     0x6401e386
6401e370:	mov    eax,ecx
6401e372:	and    eax,0x1f
6401e375:	mov    edx,ecx
6401e377:	sar    edx,0x5
6401e37a:	shl    eax,0x6
6401e37d:	add    eax,DWORD PTR [edx*4+0x64032520]
6401e384:	jmp    0x6401e38b
6401e386:	mov    eax,0x6402d880
6401e38b:	test   BYTE PTR [eax+0x4],0x20
6401e38f:	je     0x6401e3a6
6401e391:	push   ebx
6401e392:	push   0x0
6401e394:	push   0x0
6401e396:	push   ecx
6401e397:	call   0x6401bfa3
6401e39c:	and    eax,edx
6401e39e:	add    esp,0x10
6401e3a1:	cmp    eax,0xffffffff
6401e3a4:	je     0x6401e3d3
6401e3a6:	mov    eax,DWORD PTR [esi+0x8]
6401e3a9:	mov    ebx,DWORD PTR [ebp+0x8]
6401e3ac:	mov    WORD PTR [eax],bx
6401e3af:	jmp    0x6401e3ce
6401e3b1:	push   0x2
6401e3b3:	lea    eax,[ebp-0x4]
6401e3b6:	push   eax
6401e3b7:	push   DWORD PTR [ebp+0xc]
6401e3ba:	mov    edi,ebx
6401e3bc:	mov    ebx,DWORD PTR [ebp+0x8]
6401e3bf:	mov    WORD PTR [ebp-0x4],bx
6401e3c3:	call   0x6401c6de
6401e3c8:	add    esp,0xc
6401e3cb:	mov    DWORD PTR [ebp-0x4],eax
6401e3ce:	cmp    DWORD PTR [ebp-0x4],edi
6401e3d1:	je     0x6401e3de
6401e3d3:	or     DWORD PTR [esi+0xc],0x20
6401e3d7:	mov    eax,0xffff
6401e3dc:	jmp    0x6401e3e5
6401e3de:	mov    eax,ebx
6401e3e0:	and    eax,0xffff
6401e3e5:	pop    edi
6401e3e6:	pop    ebx
6401e3e7:	pop    esi
6401e3e8:	leave  
6401e3e9:	ret    
6401e3ea:	push   ebp
6401e3eb:	mov    ebp,esp
6401e3ed:	sub    esp,0x14
6401e3f0:	push   esi
6401e3f1:	push   edi
6401e3f2:	push   DWORD PTR [ebp+0x8]
6401e3f5:	lea    ecx,[ebp-0x14]
6401e3f8:	call   0x64012d2f
6401e3fd:	mov    eax,DWORD PTR [ebp+0x10]
6401e400:	mov    esi,DWORD PTR [ebp+0xc]
6401e403:	xor    edi,edi
6401e405:	cmp    eax,edi
6401e407:	je     0x6401e40b
6401e409:	mov    DWORD PTR [eax],esi
6401e40b:	cmp    esi,edi
6401e40d:	jne    0x6401e43b
6401e40f:	call   0x64014950
6401e414:	push   edi
6401e415:	push   edi
6401e416:	push   edi
6401e417:	push   edi
6401e418:	push   edi
6401e419:	mov    DWORD PTR [eax],0x16
6401e41f:	call   0x640126c4
6401e424:	add    esp,0x14
6401e427:	cmp    BYTE PTR [ebp-0x8],0x0
6401e42b:	je     0x6401e434
6401e42d:	mov    eax,DWORD PTR [ebp-0xc]
6401e430:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e434:	xor    eax,eax
6401e436:	jmp    0x6401e611
6401e43b:	cmp    DWORD PTR [ebp+0x14],edi
6401e43e:	je     0x6401e44c
6401e440:	cmp    DWORD PTR [ebp+0x14],0x2
6401e444:	jl     0x6401e40f
6401e446:	cmp    DWORD PTR [ebp+0x14],0x24
6401e44a:	jg     0x6401e40f
6401e44c:	mov    ecx,DWORD PTR [ebp-0x14]
6401e44f:	push   ebx
6401e450:	mov    bl,BYTE PTR [esi]
6401e452:	mov    DWORD PTR [ebp-0x4],edi
6401e455:	lea    edi,[esi+0x1]
6401e458:	cmp    DWORD PTR [ecx+0xac],0x1
6401e45f:	jle    0x6401e478
6401e461:	lea    eax,[ebp-0x14]
6401e464:	push   eax
6401e465:	movzx  eax,bl
6401e468:	push   0x8
6401e46a:	push   eax
6401e46b:	call   0x64019f6e
6401e470:	mov    ecx,DWORD PTR [ebp-0x14]
6401e473:	add    esp,0xc
6401e476:	jmp    0x6401e488
6401e478:	mov    edx,DWORD PTR [ecx+0xc8]
6401e47e:	movzx  eax,bl
6401e481:	movzx  eax,BYTE PTR [edx+eax*2]
6401e485:	and    eax,0x8
6401e488:	test   eax,eax
6401e48a:	je     0x6401e491
6401e48c:	mov    bl,BYTE PTR [edi]
6401e48e:	inc    edi
6401e48f:	jmp    0x6401e458
6401e491:	cmp    bl,0x2d
6401e494:	jne    0x6401e49c
6401e496:	or     DWORD PTR [ebp+0x18],0x2
6401e49a:	jmp    0x6401e4a1
6401e49c:	cmp    bl,0x2b
6401e49f:	jne    0x6401e4a4
6401e4a1:	mov    bl,BYTE PTR [edi]
6401e4a3:	inc    edi
6401e4a4:	mov    eax,DWORD PTR [ebp+0x14]
6401e4a7:	test   eax,eax
6401e4a9:	jl     0x6401e5f8
6401e4af:	cmp    eax,0x1
6401e4b2:	je     0x6401e5f8
6401e4b8:	cmp    eax,0x24
6401e4bb:	jg     0x6401e5f8
6401e4c1:	test   eax,eax
6401e4c3:	jne    0x6401e4ef
6401e4c5:	cmp    bl,0x30
6401e4c8:	je     0x6401e4d3
6401e4ca:	mov    DWORD PTR [ebp+0x14],0xa
6401e4d1:	jmp    0x6401e507
6401e4d3:	mov    al,BYTE PTR [edi]
6401e4d5:	cmp    al,0x78
6401e4d7:	je     0x6401e4e6
6401e4d9:	cmp    al,0x58
6401e4db:	je     0x6401e4e6
6401e4dd:	mov    DWORD PTR [ebp+0x14],0x8
6401e4e4:	jmp    0x6401e507
6401e4e6:	mov    DWORD PTR [ebp+0x14],0x10
6401e4ed:	jmp    0x6401e4f9
6401e4ef:	cmp    eax,0x10
6401e4f2:	jne    0x6401e507
6401e4f4:	cmp    bl,0x30
6401e4f7:	jne    0x6401e507
6401e4f9:	mov    al,BYTE PTR [edi]
6401e4fb:	cmp    al,0x78
6401e4fd:	je     0x6401e503
6401e4ff:	cmp    al,0x58
6401e501:	jne    0x6401e507
6401e503:	inc    edi
6401e504:	mov    bl,BYTE PTR [edi]
6401e506:	inc    edi
6401e507:	mov    esi,DWORD PTR [ecx+0xc8]
6401e50d:	or     eax,0xffffffff
6401e510:	xor    edx,edx
6401e512:	div    DWORD PTR [ebp+0x14]
6401e515:	movzx  ecx,bl
6401e518:	movzx  ecx,WORD PTR [esi+ecx*2]
6401e51c:	test   cl,0x4
6401e51f:	je     0x6401e529
6401e521:	movsx  ecx,bl
6401e524:	sub    ecx,0x30
6401e527:	jmp    0x6401e543
6401e529:	test   cx,0x103
6401e52e:	je     0x6401e561
6401e530:	mov    cl,bl
6401e532:	sub    cl,0x61
6401e535:	cmp    cl,0x19
6401e538:	movsx  ecx,bl
6401e53b:	ja     0x6401e540
6401e53d:	sub    ecx,0x20
6401e540:	add    ecx,0xffffffc9
6401e543:	cmp    ecx,DWORD PTR [ebp+0x14]
6401e546:	jae    0x6401e561
6401e548:	or     DWORD PTR [ebp+0x18],0x8
6401e54c:	cmp    DWORD PTR [ebp-0x4],eax
6401e54f:	jb     0x6401e578
6401e551:	jne    0x6401e557
6401e553:	cmp    ecx,edx
6401e555:	jbe    0x6401e578
6401e557:	or     DWORD PTR [ebp+0x18],0x4
6401e55b:	cmp    DWORD PTR [ebp+0x10],0x0
6401e55f:	jne    0x6401e584
6401e561:	mov    eax,DWORD PTR [ebp+0x18]
6401e564:	dec    edi
6401e565:	test   al,0x8
6401e567:	jne    0x6401e589
6401e569:	cmp    DWORD PTR [ebp+0x10],0x0
6401e56d:	je     0x6401e572
6401e56f:	mov    edi,DWORD PTR [ebp+0xc]
6401e572:	and    DWORD PTR [ebp-0x4],0x0
6401e576:	jmp    0x6401e5d4
6401e578:	mov    ebx,DWORD PTR [ebp-0x4]
6401e57b:	imul   ebx,DWORD PTR [ebp+0x14]
6401e57f:	add    ebx,ecx
6401e581:	mov    DWORD PTR [ebp-0x4],ebx
6401e584:	mov    bl,BYTE PTR [edi]
6401e586:	inc    edi
6401e587:	jmp    0x6401e515
6401e589:	test   al,0x4
6401e58b:	mov    esi,0x7fffffff
6401e590:	jne    0x6401e5ad
6401e592:	test   al,0x1
6401e594:	jne    0x6401e5d4
6401e596:	and    eax,0x2
6401e599:	je     0x6401e5a4
6401e59b:	cmp    DWORD PTR [ebp-0x4],0x80000000
6401e5a2:	ja     0x6401e5ad
6401e5a4:	test   eax,eax
6401e5a6:	jne    0x6401e5d4
6401e5a8:	cmp    DWORD PTR [ebp-0x4],esi
6401e5ab:	jbe    0x6401e5d4
6401e5ad:	call   0x64014950
6401e5b2:	test   BYTE PTR [ebp+0x18],0x1
6401e5b6:	mov    DWORD PTR [eax],0x22
6401e5bc:	je     0x6401e5c4
6401e5be:	or     DWORD PTR [ebp-0x4],0xffffffff
6401e5c2:	jmp    0x6401e5d4
6401e5c4:	mov    al,BYTE PTR [ebp+0x18]
6401e5c7:	and    al,0x2
6401e5c9:	neg    al
6401e5cb:	sbb    eax,eax
6401e5cd:	neg    eax
6401e5cf:	add    eax,esi
6401e5d1:	mov    DWORD PTR [ebp-0x4],eax
6401e5d4:	mov    eax,DWORD PTR [ebp+0x10]
6401e5d7:	test   eax,eax
6401e5d9:	je     0x6401e5dd
6401e5db:	mov    DWORD PTR [eax],edi
6401e5dd:	test   BYTE PTR [ebp+0x18],0x2
6401e5e1:	je     0x6401e5e6
6401e5e3:	neg    DWORD PTR [ebp-0x4]
6401e5e6:	cmp    BYTE PTR [ebp-0x8],0x0
6401e5ea:	je     0x6401e5f3
6401e5ec:	mov    eax,DWORD PTR [ebp-0xc]
6401e5ef:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e5f3:	mov    eax,DWORD PTR [ebp-0x4]
6401e5f6:	jmp    0x6401e610
6401e5f8:	mov    eax,DWORD PTR [ebp+0x10]
6401e5fb:	test   eax,eax
6401e5fd:	je     0x6401e601
6401e5ff:	mov    DWORD PTR [eax],esi
6401e601:	cmp    BYTE PTR [ebp-0x8],0x0
6401e605:	je     0x6401e60e
6401e607:	mov    eax,DWORD PTR [ebp-0xc]
6401e60a:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e60e:	xor    eax,eax
6401e610:	pop    ebx
6401e611:	pop    edi
6401e612:	pop    esi
6401e613:	leave  
6401e614:	ret    
6401e615:	push   ebp
6401e616:	mov    ebp,esp
6401e618:	xor    eax,eax
6401e61a:	cmp    DWORD PTR ds:0x6402e934,eax
6401e620:	push   eax
6401e621:	push   DWORD PTR [ebp+0x10]
6401e624:	push   DWORD PTR [ebp+0xc]
6401e627:	push   DWORD PTR [ebp+0x8]
6401e62a:	jne    0x6401e633
6401e62c:	push   0x6402d878
6401e631:	jmp    0x6401e634
6401e633:	push   eax
6401e634:	call   0x6401e3ea
6401e639:	add    esp,0x14
6401e63c:	pop    ebp
6401e63d:	ret    
6401e63e:	int3   
6401e63f:	int3   
6401e640:	push   ebp
6401e641:	mov    ebp,esp
6401e643:	push   edi
6401e644:	push   esi
6401e645:	push   ebx
6401e646:	mov    ecx,DWORD PTR [ebp+0x10]
6401e649:	or     ecx,ecx
6401e64b:	je     0x6401e69a
6401e64d:	mov    esi,DWORD PTR [ebp+0x8]
6401e650:	mov    edi,DWORD PTR [ebp+0xc]
6401e653:	mov    bh,0x41
6401e655:	mov    bl,0x5a
6401e657:	mov    dh,0x20
6401e659:	lea    ecx,[ecx+0x0]
6401e65c:	mov    ah,BYTE PTR [esi]
6401e65e:	or     ah,ah
6401e660:	mov    al,BYTE PTR [edi]
6401e662:	je     0x6401e68b
6401e664:	or     al,al
6401e666:	je     0x6401e68b
6401e668:	add    esi,0x1
6401e66b:	add    edi,0x1
6401e66e:	cmp    ah,bh
6401e670:	jb     0x6401e678
6401e672:	cmp    ah,bl
6401e674:	ja     0x6401e678
6401e676:	add    ah,dh
6401e678:	cmp    al,bh
6401e67a:	jb     0x6401e682
6401e67c:	cmp    al,bl
6401e67e:	ja     0x6401e682
6401e680:	add    al,dh
6401e682:	cmp    ah,al
6401e684:	jne    0x6401e691
6401e686:	sub    ecx,0x1
6401e689:	jne    0x6401e65c
6401e68b:	xor    ecx,ecx
6401e68d:	cmp    ah,al
6401e68f:	je     0x6401e69a
6401e691:	mov    ecx,0xffffffff
6401e696:	jb     0x6401e69a
6401e698:	neg    ecx
6401e69a:	mov    eax,ecx
6401e69c:	pop    ebx
6401e69d:	pop    esi
6401e69e:	pop    edi
6401e69f:	leave  
6401e6a0:	ret    
6401e6a1:	xor    eax,eax
6401e6a3:	push   eax
6401e6a4:	push   eax
6401e6a5:	push   0x3
6401e6a7:	push   eax
6401e6a8:	push   0x3
6401e6aa:	push   0x40000000
6401e6af:	push   0x6402761c
6401e6b4:	call   DWORD PTR ds:0x640250b0
6401e6ba:	mov    ds:0x6402e024,eax
6401e6bf:	ret    
6401e6c0:	mov    eax,ds:0x6402e024
6401e6c5:	cmp    eax,0xffffffff
6401e6c8:	push   esi
6401e6c9:	mov    esi,DWORD PTR ds:0x64025040
6401e6cf:	je     0x6401e6d9
6401e6d1:	cmp    eax,0xfffffffe
6401e6d4:	je     0x6401e6d9
6401e6d6:	push   eax
6401e6d7:	call   esi
6401e6d9:	mov    eax,ds:0x6402e020
6401e6de:	cmp    eax,0xffffffff
6401e6e1:	je     0x6401e6eb
6401e6e3:	cmp    eax,0xfffffffe
6401e6e6:	je     0x6401e6eb
6401e6e8:	push   eax
6401e6e9:	call   esi
6401e6eb:	pop    esi
6401e6ec:	ret    
6401e6ed:	push   ebx
6401e6ee:	push   esi
6401e6ef:	mov    esi,DWORD PTR [esp+0xc]
6401e6f3:	push   edi
6401e6f4:	xor    edi,edi
6401e6f6:	or     ebx,0xffffffff
6401e6f9:	cmp    esi,edi
6401e6fb:	jne    0x6401e719
6401e6fd:	call   0x64014950
6401e702:	push   edi
6401e703:	push   edi
6401e704:	push   edi
6401e705:	push   edi
6401e706:	push   edi
6401e707:	mov    DWORD PTR [eax],0x16
6401e70d:	call   0x640126c4
6401e712:	add    esp,0x14
6401e715:	or     eax,ebx
6401e717:	jmp    0x6401e75b
6401e719:	test   BYTE PTR [esi+0xc],0x83
6401e71d:	je     0x6401e756
6401e71f:	push   esi
6401e720:	call   0x6401e0f3
6401e725:	push   esi
6401e726:	mov    ebx,eax
6401e728:	call   0x6401ea3a
6401e72d:	push   esi
6401e72e:	call   0x6401c9fd
6401e733:	push   eax
6401e734:	call   0x6401e96d
6401e739:	add    esp,0x10
6401e73c:	test   eax,eax
6401e73e:	jge    0x6401e745
6401e740:	or     ebx,0xffffffff
6401e743:	jmp    0x6401e756
6401e745:	mov    eax,DWORD PTR [esi+0x1c]
6401e748:	cmp    eax,edi
6401e74a:	je     0x6401e756
6401e74c:	push   eax
6401e74d:	call   0x64013a26
6401e752:	pop    ecx
6401e753:	mov    DWORD PTR [esi+0x1c],edi
6401e756:	mov    DWORD PTR [esi+0xc],edi
6401e759:	mov    eax,ebx
6401e75b:	pop    edi
6401e75c:	pop    esi
6401e75d:	pop    ebx
6401e75e:	ret    
6401e75f:	push   0xc
6401e761:	push   0x6402aa60
6401e766:	call   0x64014150
6401e76b:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401e76f:	xor    eax,eax
6401e771:	mov    esi,DWORD PTR [ebp+0x8]
6401e774:	xor    edi,edi
6401e776:	cmp    esi,edi
6401e778:	setne  al
6401e77b:	cmp    eax,edi
6401e77d:	jne    0x6401e79c
6401e77f:	call   0x64014950
6401e784:	mov    DWORD PTR [eax],0x16
6401e78a:	push   edi
6401e78b:	push   edi
6401e78c:	push   edi
6401e78d:	push   edi
6401e78e:	push   edi
6401e78f:	call   0x640126c4
6401e794:	add    esp,0x14
6401e797:	or     eax,0xffffffff
6401e79a:	jmp    0x6401e7a8
6401e79c:	test   BYTE PTR [esi+0xc],0x40
6401e7a0:	je     0x6401e7ae
6401e7a2:	mov    DWORD PTR [esi+0xc],edi
6401e7a5:	mov    eax,DWORD PTR [ebp-0x1c]
6401e7a8:	call   0x64014195
6401e7ad:	ret    
6401e7ae:	push   esi
6401e7af:	call   0x6401c933
6401e7b4:	pop    ecx
6401e7b5:	mov    DWORD PTR [ebp-0x4],edi
6401e7b8:	push   esi
6401e7b9:	call   0x6401e6ed
6401e7be:	pop    ecx
6401e7bf:	mov    DWORD PTR [ebp-0x1c],eax
6401e7c2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e7c9:	call   0x6401e7d3
6401e7ce:	jmp    0x6401e7a5
6401e7d0:	mov    esi,DWORD PTR [ebp+0x8]
6401e7d3:	push   esi
6401e7d4:	call   0x6401c99d
6401e7d9:	pop    ecx
6401e7da:	ret    
6401e7db:	push   0x10
6401e7dd:	push   0x6402aa80
6401e7e2:	call   0x64014150
6401e7e7:	mov    eax,DWORD PTR [ebp+0x8]
6401e7ea:	cmp    eax,0xfffffffe
6401e7ed:	jne    0x6401e802
6401e7ef:	call   0x64014950
6401e7f4:	mov    DWORD PTR [eax],0x9
6401e7fa:	or     eax,0xffffffff
6401e7fd:	jmp    0x6401e8ac
6401e802:	xor    ebx,ebx
6401e804:	cmp    eax,ebx
6401e806:	jl     0x6401e810
6401e808:	cmp    eax,DWORD PTR ds:0x64032500
6401e80e:	jb     0x6401e82a
6401e810:	call   0x64014950
6401e815:	mov    DWORD PTR [eax],0x9
6401e81b:	push   ebx
6401e81c:	push   ebx
6401e81d:	push   ebx
6401e81e:	push   ebx
6401e81f:	push   ebx
6401e820:	call   0x640126c4
6401e825:	add    esp,0x14
6401e828:	jmp    0x6401e7fa
6401e82a:	mov    ecx,eax
6401e82c:	sar    ecx,0x5
6401e82f:	lea    edi,[ecx*4+0x64032520]
6401e836:	mov    esi,eax
6401e838:	and    esi,0x1f
6401e83b:	shl    esi,0x6
6401e83e:	mov    ecx,DWORD PTR [edi]
6401e840:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401e845:	and    ecx,0x1
6401e848:	je     0x6401e810
6401e84a:	push   eax
6401e84b:	call   0x6401ded0
6401e850:	pop    ecx
6401e851:	mov    DWORD PTR [ebp-0x4],ebx
6401e854:	mov    eax,DWORD PTR [edi]
6401e856:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401e85b:	je     0x6401e88e
6401e85d:	push   DWORD PTR [ebp+0x8]
6401e860:	call   0x6401de5f
6401e865:	pop    ecx
6401e866:	push   eax
6401e867:	call   DWORD PTR ds:0x640250b8
6401e86d:	test   eax,eax
6401e86f:	jne    0x6401e87c
6401e871:	call   DWORD PTR ds:0x64025044
6401e877:	mov    DWORD PTR [ebp-0x1c],eax
6401e87a:	jmp    0x6401e87f
6401e87c:	mov    DWORD PTR [ebp-0x1c],ebx
6401e87f:	cmp    DWORD PTR [ebp-0x1c],ebx
6401e882:	je     0x6401e89d
6401e884:	call   0x64014963
6401e889:	mov    ecx,DWORD PTR [ebp-0x1c]
6401e88c:	mov    DWORD PTR [eax],ecx
6401e88e:	call   0x64014950
6401e893:	mov    DWORD PTR [eax],0x9
6401e899:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401e89d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e8a4:	call   0x6401e8b2
6401e8a9:	mov    eax,DWORD PTR [ebp-0x1c]
6401e8ac:	call   0x64014195
6401e8b1:	ret    
6401e8b2:	push   DWORD PTR [ebp+0x8]
6401e8b5:	call   0x6401df70
6401e8ba:	pop    ecx
6401e8bb:	ret    
6401e8bc:	xor    eax,eax
6401e8be:	cmp    DWORD PTR [esp+0x8],eax
6401e8c2:	jbe    0x6401e8d5
6401e8c4:	mov    ecx,DWORD PTR [esp+0x4]
6401e8c8:	cmp    BYTE PTR [ecx],0x0
6401e8cb:	je     0x6401e8d5
6401e8cd:	inc    eax
6401e8ce:	inc    ecx
6401e8cf:	cmp    eax,DWORD PTR [esp+0x8]
6401e8d3:	jb     0x6401e8c8
6401e8d5:	ret    
6401e8d6:	push   esi
6401e8d7:	mov    esi,DWORD PTR [esp+0x8]
6401e8db:	push   edi
6401e8dc:	push   esi
6401e8dd:	call   0x6401de5f
6401e8e2:	cmp    eax,0xffffffff
6401e8e5:	pop    ecx
6401e8e6:	je     0x6401e938
6401e8e8:	cmp    esi,0x1
6401e8eb:	mov    eax,ds:0x64032520
6401e8f0:	jne    0x6401e8fb
6401e8f2:	test   BYTE PTR [eax+0x84],0x1
6401e8f9:	jne    0x6401e906
6401e8fb:	cmp    esi,0x2
6401e8fe:	jne    0x6401e91c
6401e900:	test   BYTE PTR [eax+0x44],0x1
6401e904:	je     0x6401e91c
6401e906:	push   0x2
6401e908:	call   0x6401de5f
6401e90d:	push   0x1
6401e90f:	mov    edi,eax
6401e911:	call   0x6401de5f
6401e916:	cmp    eax,edi
6401e918:	pop    ecx
6401e919:	pop    ecx
6401e91a:	je     0x6401e938
6401e91c:	push   esi
6401e91d:	call   0x6401de5f
6401e922:	pop    ecx
6401e923:	push   eax
6401e924:	call   DWORD PTR ds:0x64025040
6401e92a:	test   eax,eax
6401e92c:	jne    0x6401e938
6401e92e:	call   DWORD PTR ds:0x64025044
6401e934:	mov    edi,eax
6401e936:	jmp    0x6401e93a
6401e938:	xor    edi,edi
6401e93a:	push   esi
6401e93b:	call   0x6401ddde
6401e940:	mov    eax,esi
6401e942:	sar    eax,0x5
6401e945:	mov    eax,DWORD PTR [eax*4+0x64032520]
6401e94c:	and    esi,0x1f
6401e94f:	shl    esi,0x6
6401e952:	test   edi,edi
6401e954:	pop    ecx
6401e955:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6401e95a:	je     0x6401e968
6401e95c:	push   edi
6401e95d:	call   0x64014976
6401e962:	pop    ecx
6401e963:	or     eax,0xffffffff
6401e966:	jmp    0x6401e96a
6401e968:	xor    eax,eax
6401e96a:	pop    edi
6401e96b:	pop    esi
6401e96c:	ret    
6401e96d:	push   0x10
6401e96f:	push   0x6402aaa0
6401e974:	call   0x64014150
6401e979:	mov    eax,DWORD PTR [ebp+0x8]
6401e97c:	cmp    eax,0xfffffffe
6401e97f:	jne    0x6401e99c
6401e981:	call   0x64014963
6401e986:	and    DWORD PTR [eax],0x0
6401e989:	call   0x64014950
6401e98e:	mov    DWORD PTR [eax],0x9
6401e994:	or     eax,0xffffffff
6401e997:	jmp    0x6401ea2a
6401e99c:	xor    edi,edi
6401e99e:	cmp    eax,edi
6401e9a0:	jl     0x6401e9aa
6401e9a2:	cmp    eax,DWORD PTR ds:0x64032500
6401e9a8:	jb     0x6401e9cb
6401e9aa:	call   0x64014963
6401e9af:	mov    DWORD PTR [eax],edi
6401e9b1:	call   0x64014950
6401e9b6:	mov    DWORD PTR [eax],0x9
6401e9bc:	push   edi
6401e9bd:	push   edi
6401e9be:	push   edi
6401e9bf:	push   edi
6401e9c0:	push   edi
6401e9c1:	call   0x640126c4
6401e9c6:	add    esp,0x14
6401e9c9:	jmp    0x6401e994
6401e9cb:	mov    ecx,eax
6401e9cd:	sar    ecx,0x5
6401e9d0:	lea    ebx,[ecx*4+0x64032520]
6401e9d7:	mov    esi,eax
6401e9d9:	and    esi,0x1f
6401e9dc:	shl    esi,0x6
6401e9df:	mov    ecx,DWORD PTR [ebx]
6401e9e1:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401e9e6:	and    ecx,0x1
6401e9e9:	je     0x6401e9aa
6401e9eb:	push   eax
6401e9ec:	call   0x6401ded0
6401e9f1:	pop    ecx
6401e9f2:	mov    DWORD PTR [ebp-0x4],edi
6401e9f5:	mov    eax,DWORD PTR [ebx]
6401e9f7:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401e9fc:	je     0x6401ea0c
6401e9fe:	push   DWORD PTR [ebp+0x8]
6401ea01:	call   0x6401e8d6
6401ea06:	pop    ecx
6401ea07:	mov    DWORD PTR [ebp-0x1c],eax
6401ea0a:	jmp    0x6401ea1b
6401ea0c:	call   0x64014950
6401ea11:	mov    DWORD PTR [eax],0x9
6401ea17:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401ea1b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ea22:	call   0x6401ea30
6401ea27:	mov    eax,DWORD PTR [ebp-0x1c]
6401ea2a:	call   0x64014195
6401ea2f:	ret    
6401ea30:	push   DWORD PTR [ebp+0x8]
6401ea33:	call   0x6401df70
6401ea38:	pop    ecx
6401ea39:	ret    
6401ea3a:	push   esi
6401ea3b:	mov    esi,DWORD PTR [esp+0x8]
6401ea3f:	mov    eax,DWORD PTR [esi+0xc]
6401ea42:	test   al,0x83
6401ea44:	je     0x6401ea64
6401ea46:	test   al,0x8
6401ea48:	je     0x6401ea64
6401ea4a:	push   DWORD PTR [esi+0x8]
6401ea4d:	call   0x64013a26
6401ea52:	and    DWORD PTR [esi+0xc],0xfffffbf7
6401ea59:	xor    eax,eax
6401ea5b:	pop    ecx
6401ea5c:	mov    DWORD PTR [esi],eax
6401ea5e:	mov    DWORD PTR [esi+0x8],eax
6401ea61:	mov    DWORD PTR [esi+0x4],eax
6401ea64:	pop    esi
6401ea65:	ret    
6401ea66:	int3   
6401ea67:	int3   
6401ea68:	int3   
6401ea69:	int3   
6401ea6a:	int3   
6401ea6b:	int3   
6401ea6c:	int3   
6401ea6d:	int3   
6401ea6e:	int3   
6401ea6f:	int3   
6401ea70:	lea    eax,[edx-0x1]
6401ea73:	pop    ebx
6401ea74:	ret    
6401ea75:	lea    esp,[esp+0x0]
6401ea7c:	lea    esp,[esp+0x0]
6401ea80:	xor    eax,eax
6401ea82:	mov    al,BYTE PTR [esp+0x8]
6401ea86:	push   ebx
6401ea87:	mov    ebx,eax
6401ea89:	shl    eax,0x8
6401ea8c:	mov    edx,DWORD PTR [esp+0x8]
6401ea90:	test   edx,0x3
6401ea96:	je     0x6401eaad
6401ea98:	mov    cl,BYTE PTR [edx]
6401ea9a:	add    edx,0x1
6401ea9d:	cmp    cl,bl
6401ea9f:	je     0x6401ea70
6401eaa1:	test   cl,cl
6401eaa3:	je     0x6401eaf6
6401eaa5:	test   edx,0x3
6401eaab:	jne    0x6401ea98
6401eaad:	or     ebx,eax
6401eaaf:	push   edi
6401eab0:	mov    eax,ebx
6401eab2:	shl    ebx,0x10
6401eab5:	push   esi
6401eab6:	or     ebx,eax
6401eab8:	mov    ecx,DWORD PTR [edx]
6401eaba:	mov    edi,0x7efefeff
6401eabf:	mov    eax,ecx
6401eac1:	mov    esi,edi
6401eac3:	xor    ecx,ebx
6401eac5:	add    esi,eax
6401eac7:	add    edi,ecx
6401eac9:	xor    ecx,0xffffffff
6401eacc:	xor    eax,0xffffffff
6401eacf:	xor    ecx,edi
6401ead1:	xor    eax,esi
6401ead3:	add    edx,0x4
6401ead6:	and    ecx,0x81010100
6401eadc:	jne    0x6401eafa
6401eade:	and    eax,0x81010100
6401eae3:	je     0x6401eab8
6401eae5:	and    eax,0x1010100
6401eaea:	jne    0x6401eaf4
6401eaec:	and    esi,0x80000000
6401eaf2:	jne    0x6401eab8
6401eaf4:	pop    esi
6401eaf5:	pop    edi
6401eaf6:	pop    ebx
6401eaf7:	xor    eax,eax
6401eaf9:	ret    
6401eafa:	mov    eax,DWORD PTR [edx-0x4]
6401eafd:	cmp    al,bl
6401eaff:	je     0x6401eb37
6401eb01:	test   al,al
6401eb03:	je     0x6401eaf4
6401eb05:	cmp    ah,bl
6401eb07:	je     0x6401eb30
6401eb09:	test   ah,ah
6401eb0b:	je     0x6401eaf4
6401eb0d:	shr    eax,0x10
6401eb10:	cmp    al,bl
6401eb12:	je     0x6401eb29
6401eb14:	test   al,al
6401eb16:	je     0x6401eaf4
6401eb18:	cmp    ah,bl
6401eb1a:	je     0x6401eb22
6401eb1c:	test   ah,ah
6401eb1e:	je     0x6401eaf4
6401eb20:	jmp    0x6401eab8
6401eb22:	pop    esi
6401eb23:	pop    edi
6401eb24:	lea    eax,[edx-0x1]
6401eb27:	pop    ebx
6401eb28:	ret    
6401eb29:	lea    eax,[edx-0x2]
6401eb2c:	pop    esi
6401eb2d:	pop    edi
6401eb2e:	pop    ebx
6401eb2f:	ret    
6401eb30:	lea    eax,[edx-0x3]
6401eb33:	pop    esi
6401eb34:	pop    edi
6401eb35:	pop    ebx
6401eb36:	ret    
6401eb37:	lea    eax,[edx-0x4]
6401eb3a:	pop    esi
6401eb3b:	pop    edi
6401eb3c:	pop    ebx
6401eb3d:	ret    
6401eb3e:	int3   
6401eb3f:	int3   
6401eb40:	push   ebp
6401eb41:	mov    ebp,esp
6401eb43:	push   0xfffffffe
6401eb45:	push   0x6402aac0
6401eb4a:	push   0x640141b0
6401eb4f:	mov    eax,fs:0x0
6401eb55:	push   eax
6401eb56:	sub    esp,0x18
6401eb59:	mov    eax,ds:0x6402d09c
6401eb5e:	xor    DWORD PTR [ebp-0x8],eax
6401eb61:	xor    eax,ebp
6401eb63:	mov    DWORD PTR [ebp-0x1c],eax
6401eb66:	push   ebx
6401eb67:	push   esi
6401eb68:	push   edi
6401eb69:	push   eax
6401eb6a:	lea    eax,[ebp-0x10]
6401eb6d:	mov    fs:0x0,eax
6401eb73:	mov    DWORD PTR [ebp-0x18],esp
6401eb76:	mov    esi,DWORD PTR [ebp+0x8]
6401eb79:	test   esi,esi
6401eb7b:	je     0x6401ebd2
6401eb7d:	push   esi
6401eb7e:	call   DWORD PTR ds:0x64025058
6401eb84:	mov    edi,eax
6401eb86:	add    edi,0x1
6401eb89:	mov    DWORD PTR [ebp-0x20],edi
6401eb8c:	push   0x0
6401eb8e:	push   0x0
6401eb90:	push   edi
6401eb91:	push   esi
6401eb92:	push   0x0
6401eb94:	push   0x0
6401eb96:	call   DWORD PTR ds:0x64025024
6401eb9c:	mov    esi,eax
6401eb9e:	mov    DWORD PTR [ebp-0x28],esi
6401eba1:	test   esi,esi
6401eba3:	jne    0x6401ebd9
6401eba5:	mov    esi,DWORD PTR ds:0x64025044
6401ebab:	call   esi
6401ebad:	test   eax,eax
6401ebaf:	jg     0x6401ebc0
6401ebb1:	call   esi
6401ebb3:	push   eax
6401ebb4:	call   0x6401ecd0
6401ebb9:	xor    eax,eax
6401ebbb:	jmp    0x6401eca0
6401ebc0:	call   esi
6401ebc2:	and    eax,0xffff
6401ebc7:	or     eax,0x80070000
6401ebcc:	push   eax
6401ebcd:	call   0x6401ecd0
6401ebd2:	xor    eax,eax
6401ebd4:	jmp    0x6401eca0
6401ebd9:	mov    DWORD PTR [ebp-0x4],0x0
6401ebe0:	lea    eax,[esi+esi*1]
6401ebe3:	cmp    esi,0x1000
6401ebe9:	jge    0x6401ec03
6401ebeb:	call   0x64013310
6401ebf0:	mov    DWORD PTR [ebp-0x18],esp
6401ebf3:	mov    eax,esp
6401ebf5:	mov    ebx,eax
6401ebf7:	mov    DWORD PTR [ebp-0x24],ebx
6401ebfa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ec01:	jmp    0x6401ec35
6401ec03:	push   eax
6401ec04:	call   0x64013b03
6401ec09:	add    esp,0x4
6401ec0c:	mov    ebx,eax
6401ec0e:	mov    DWORD PTR [ebp-0x24],ebx
6401ec11:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ec18:	jmp    0x6401ec35
6401ec1a:	mov    eax,0x1
6401ec1f:	ret    
6401ec20:	mov    esp,DWORD PTR [ebp-0x18]
6401ec23:	xor    ebx,ebx
6401ec25:	mov    DWORD PTR [ebp-0x24],ebx
6401ec28:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ec2f:	mov    edi,DWORD PTR [ebp-0x20]
6401ec32:	mov    esi,DWORD PTR [ebp-0x28]
6401ec35:	test   ebx,ebx
6401ec37:	jne    0x6401ec47
6401ec39:	push   0x8007000e
6401ec3e:	call   0x6401ecd0
6401ec43:	xor    eax,eax
6401ec45:	jmp    0x6401eca0
6401ec47:	push   esi
6401ec48:	push   ebx
6401ec49:	push   edi
6401ec4a:	mov    ecx,DWORD PTR [ebp+0x8]
6401ec4d:	push   ecx
6401ec4e:	push   0x0
6401ec50:	push   0x0
6401ec52:	call   DWORD PTR ds:0x64025024
6401ec58:	test   eax,eax
6401ec5a:	jne    0x6401ec76
6401ec5c:	cmp    esi,0x1000
6401ec62:	jl     0x6401eba5
6401ec68:	push   ebx
6401ec69:	call   0x64013a26
6401ec6e:	add    esp,0x4
6401ec71:	jmp    0x6401eba5
6401ec76:	push   ebx
6401ec77:	call   DWORD PTR ds:0x64025188
6401ec7d:	mov    edi,eax
6401ec7f:	cmp    esi,0x1000
6401ec85:	jl     0x6401ec90
6401ec87:	push   ebx
6401ec88:	call   0x64013a26
6401ec8d:	add    esp,0x4
6401ec90:	test   edi,edi
6401ec92:	jne    0x6401ec9e
6401ec94:	push   0x8007000e
6401ec99:	call   0x6401ecd0
6401ec9e:	mov    eax,edi
6401eca0:	lea    esp,[ebp-0x38]
6401eca3:	mov    ecx,DWORD PTR [ebp-0x10]
6401eca6:	mov    DWORD PTR fs:0x0,ecx
6401ecad:	pop    ecx
6401ecae:	pop    edi
6401ecaf:	pop    esi
6401ecb0:	pop    ebx
6401ecb1:	mov    ecx,DWORD PTR [ebp-0x1c]
6401ecb4:	xor    ecx,ebp
6401ecb6:	call   0x64012b8c
6401ecbb:	mov    esp,ebp
6401ecbd:	pop    ebp
6401ecbe:	ret    0x4
6401ecc1:	int3   
6401ecc2:	int3   
6401ecc3:	int3   
6401ecc4:	int3   
6401ecc5:	int3   
6401ecc6:	int3   
6401ecc7:	int3   
6401ecc8:	int3   
6401ecc9:	int3   
6401ecca:	int3   
6401eccb:	int3   
6401eccc:	int3   
6401eccd:	int3   
6401ecce:	int3   
6401eccf:	int3   
6401ecd0:	mov    eax,DWORD PTR [esp+0x4]
6401ecd4:	push   0x0
6401ecd6:	push   eax
6401ecd7:	call   DWORD PTR ds:0x6402e040
6401ecdd:	ret    0x4
6401ece0:	push   esi
6401ece1:	mov    esi,ecx
6401ece3:	mov    eax,DWORD PTR [esi+0x8]
6401ece6:	test   eax,eax
6401ece8:	mov    DWORD PTR [esi],0x64027628
6401ecee:	je     0x6401ecf8
6401ecf0:	mov    ecx,DWORD PTR [eax]
6401ecf2:	mov    edx,DWORD PTR [ecx+0x8]
6401ecf5:	push   eax
6401ecf6:	call   edx
6401ecf8:	cmp    DWORD PTR [esi+0xc],0x0
6401ecfc:	je     0x6401ed15
6401ecfe:	call   DWORD PTR ds:0x64025108
6401ed04:	test   eax,eax
6401ed06:	je     0x6401ed15
6401ed08:	mov    ecx,DWORD PTR [esi+0xc]
6401ed0b:	push   ecx
6401ed0c:	push   0x0
6401ed0e:	push   eax
6401ed0f:	call   DWORD PTR ds:0x640250fc
6401ed15:	pop    esi
6401ed16:	ret    
6401ed17:	int3   
6401ed18:	int3   
6401ed19:	int3   
6401ed1a:	int3   
6401ed1b:	int3   
6401ed1c:	int3   
6401ed1d:	int3   
6401ed1e:	int3   
6401ed1f:	int3   
6401ed20:	sub    esp,0x10
6401ed23:	mov    eax,DWORD PTR [esp+0x14]
6401ed27:	mov    ecx,DWORD PTR [esp+0x18]
6401ed2b:	push   0x6402aadc
6401ed30:	lea    edx,[esp+0x4]
6401ed34:	push   edx
6401ed35:	mov    DWORD PTR [esp+0x8],0x64027628
6401ed3d:	mov    DWORD PTR [esp+0xc],eax
6401ed41:	mov    DWORD PTR [esp+0x10],ecx
6401ed45:	mov    DWORD PTR [esp+0x14],0x0
6401ed4d:	call   0x6401277b
6401ed52:	int3   
6401ed53:	int3   
6401ed54:	int3   
6401ed55:	int3   
6401ed56:	int3   
6401ed57:	int3   
6401ed58:	int3   
6401ed59:	int3   
6401ed5a:	int3   
6401ed5b:	int3   
6401ed5c:	int3   
6401ed5d:	int3   
6401ed5e:	int3   
6401ed5f:	int3   
6401ed60:	mov    eax,DWORD PTR [esp+0x4]
6401ed64:	push   esi
6401ed65:	mov    esi,ecx
6401ed67:	mov    DWORD PTR [esi],0x64027628
6401ed6d:	mov    ecx,DWORD PTR [eax+0x4]
6401ed70:	mov    DWORD PTR [esi+0x4],ecx
6401ed73:	mov    edx,DWORD PTR [eax+0x8]
6401ed76:	mov    eax,edx
6401ed78:	test   eax,eax
6401ed7a:	mov    DWORD PTR [esi+0x8],edx
6401ed7d:	mov    DWORD PTR [esi+0xc],0x0
6401ed84:	je     0x6401ed8e
6401ed86:	mov    ecx,DWORD PTR [eax]
6401ed88:	mov    edx,DWORD PTR [ecx+0x4]
6401ed8b:	push   eax
6401ed8c:	call   edx
6401ed8e:	mov    eax,esi
6401ed90:	pop    esi
6401ed91:	ret    0x4
6401ed94:	int3   
6401ed95:	int3   
6401ed96:	int3   
6401ed97:	int3   
6401ed98:	int3   
6401ed99:	int3   
6401ed9a:	int3   
6401ed9b:	int3   
6401ed9c:	int3   
6401ed9d:	int3   
6401ed9e:	int3   
6401ed9f:	int3   
6401eda0:	push   esi
6401eda1:	mov    esi,ecx
6401eda3:	mov    eax,DWORD PTR [esi+0x8]
6401eda6:	test   eax,eax
6401eda8:	mov    DWORD PTR [esi],0x64027628
6401edae:	je     0x6401edb8
6401edb0:	mov    ecx,DWORD PTR [eax]
6401edb2:	mov    edx,DWORD PTR [ecx+0x8]
6401edb5:	push   eax
6401edb6:	call   edx
6401edb8:	cmp    DWORD PTR [esi+0xc],0x0
6401edbc:	je     0x6401edd5
6401edbe:	call   DWORD PTR ds:0x64025108
6401edc4:	test   eax,eax
6401edc6:	je     0x6401edd5
6401edc8:	mov    ecx,DWORD PTR [esi+0xc]
6401edcb:	push   ecx
6401edcc:	push   0x0
6401edce:	push   eax
6401edcf:	call   DWORD PTR ds:0x640250fc
6401edd5:	test   BYTE PTR [esp+0x8],0x1
6401edda:	je     0x6401ede5
6401eddc:	push   esi
6401eddd:	call   0x64012332
6401ede2:	add    esp,0x4
6401ede5:	mov    eax,esi
6401ede7:	pop    esi
6401ede8:	ret    0x4
6401edeb:	int3   
6401edec:	jmp    DWORD PTR ds:0x6402511c
6401edf2:	push   ebp
6401edf3:	mov    ebp,esp
6401edf5:	sub    esp,0xc
6401edf8:	mov    eax,ds:0x6402d09c
6401edfd:	xor    eax,ebp
6401edff:	mov    DWORD PTR [ebp-0x4],eax
6401ee02:	push   ebx
6401ee03:	push   esi
6401ee04:	push   edi
6401ee05:	mov    edi,DWORD PTR [ebp+0x8]
6401ee08:	xor    ebx,ebx
6401ee0a:	cmp    edi,ebx
6401ee0c:	jne    0x6401ee2a
6401ee0e:	call   0x64014950
6401ee13:	push   0x16
6401ee15:	pop    esi
6401ee16:	push   ebx
6401ee17:	push   ebx
6401ee18:	push   ebx
6401ee19:	push   ebx
6401ee1a:	push   ebx
6401ee1b:	mov    DWORD PTR [eax],esi
6401ee1d:	call   0x640126c4
6401ee22:	add    esp,0x14
6401ee25:	jmp    0x6401ef5f
6401ee2a:	push   DWORD PTR [ebp+0xc]
6401ee2d:	push   edi
6401ee2e:	call   0x6401e8bc
6401ee33:	cmp    eax,DWORD PTR [ebp+0xc]
6401ee36:	pop    ecx
6401ee37:	pop    ecx
6401ee38:	jb     0x6401ee3e
6401ee3a:	mov    BYTE PTR [edi],bl
6401ee3c:	jmp    0x6401ee0e
6401ee3e:	mov    edx,DWORD PTR [ebp+0x10]
6401ee41:	mov    eax,DWORD PTR [edx]
6401ee43:	mov    ecx,DWORD PTR [eax+0x14]
6401ee46:	cmp    ecx,ebx
6401ee48:	jne    0x6401ee6a
6401ee4a:	cmp    BYTE PTR [edi],bl
6401ee4c:	mov    ecx,edi
6401ee4e:	je     0x6401ee63
6401ee50:	mov    al,BYTE PTR [ecx]
6401ee52:	cmp    al,0x41
6401ee54:	jl     0x6401ee5e
6401ee56:	cmp    al,0x5a
6401ee58:	jg     0x6401ee5e
6401ee5a:	add    al,0x20
6401ee5c:	mov    BYTE PTR [ecx],al
6401ee5e:	inc    ecx
6401ee5f:	cmp    BYTE PTR [ecx],bl
6401ee61:	jne    0x6401ee50
6401ee63:	xor    eax,eax
6401ee65:	jmp    0x6401ef61
6401ee6a:	push   0x1
6401ee6c:	push   DWORD PTR [eax+0x4]
6401ee6f:	mov    esi,0x100
6401ee74:	push   ebx
6401ee75:	push   ebx
6401ee76:	push   0xffffffff
6401ee78:	push   edi
6401ee79:	push   esi
6401ee7a:	push   ecx
6401ee7b:	push   edx
6401ee7c:	call   0x64019ee7
6401ee81:	mov    ecx,eax
6401ee83:	add    esp,0x24
6401ee86:	cmp    ecx,ebx
6401ee88:	mov    DWORD PTR [ebp-0xc],ecx
6401ee8b:	jne    0x6401eea4
6401ee8d:	call   0x64014950
6401ee92:	mov    DWORD PTR [eax],0x2a
6401ee98:	call   0x64014950
6401ee9d:	mov    eax,DWORD PTR [eax]
6401ee9f:	jmp    0x6401ef61
6401eea4:	cmp    DWORD PTR [ebp+0xc],ecx
6401eea7:	jae    0x6401eeb7
6401eea9:	mov    BYTE PTR [edi],bl
6401eeab:	call   0x64014950
6401eeb0:	push   0x22
6401eeb2:	jmp    0x6401ee15
6401eeb7:	cmp    ecx,ebx
6401eeb9:	jle    0x6401ef00
6401eebb:	push   0xffffffe0
6401eebd:	xor    edx,edx
6401eebf:	pop    eax
6401eec0:	div    ecx
6401eec2:	cmp    eax,0x1
6401eec5:	jb     0x6401ef00
6401eec7:	lea    eax,[ecx+0x8]
6401eeca:	cmp    eax,0x400
6401eecf:	ja     0x6401eee4
6401eed1:	call   0x64013310
6401eed6:	mov    eax,esp
6401eed8:	cmp    eax,ebx
6401eeda:	je     0x6401eef8
6401eedc:	mov    DWORD PTR [eax],0xcccc
6401eee2:	jmp    0x6401eef5
6401eee4:	push   eax
6401eee5:	call   0x64013b03
6401eeea:	cmp    eax,ebx
6401eeec:	pop    ecx
6401eeed:	je     0x6401eef8
6401eeef:	mov    DWORD PTR [eax],0xdddd
6401eef5:	add    eax,0x8
6401eef8:	mov    ecx,DWORD PTR [ebp-0xc]
6401eefb:	mov    DWORD PTR [ebp-0x8],eax
6401eefe:	jmp    0x6401ef03
6401ef00:	mov    DWORD PTR [ebp-0x8],ebx
6401ef03:	cmp    DWORD PTR [ebp-0x8],ebx
6401ef06:	jne    0x6401ef15
6401ef08:	call   0x64014950
6401ef0d:	mov    DWORD PTR [eax],0xc
6401ef13:	jmp    0x6401ee98
6401ef15:	mov    edx,DWORD PTR [ebp+0x10]
6401ef18:	mov    eax,DWORD PTR [edx]
6401ef1a:	push   0x1
6401ef1c:	push   DWORD PTR [eax+0x4]
6401ef1f:	push   ecx
6401ef20:	push   DWORD PTR [ebp-0x8]
6401ef23:	push   0xffffffff
6401ef25:	push   edi
6401ef26:	push   esi
6401ef27:	push   DWORD PTR [eax+0x14]
6401ef2a:	push   edx
6401ef2b:	call   0x64019ee7
6401ef30:	add    esp,0x24
6401ef33:	test   eax,eax
6401ef35:	je     0x6401ef4a
6401ef37:	push   DWORD PTR [ebp-0x8]
6401ef3a:	push   DWORD PTR [ebp+0xc]
6401ef3d:	push   edi
6401ef3e:	call   0x64014548
6401ef43:	add    esp,0xc
6401ef46:	mov    esi,eax
6401ef48:	jmp    0x6401ef56
6401ef4a:	call   0x64014950
6401ef4f:	push   0x2a
6401ef51:	pop    ecx
6401ef52:	mov    DWORD PTR [eax],ecx
6401ef54:	mov    esi,ecx
6401ef56:	push   DWORD PTR [ebp-0x8]
6401ef59:	call   0x6401309c
6401ef5e:	pop    ecx
6401ef5f:	mov    eax,esi
6401ef61:	lea    esp,[ebp-0x18]
6401ef64:	pop    edi
6401ef65:	pop    esi
6401ef66:	pop    ebx
6401ef67:	mov    ecx,DWORD PTR [ebp-0x4]
6401ef6a:	xor    ecx,ebp
6401ef6c:	call   0x64012b8c
6401ef71:	leave  
6401ef72:	ret    
6401ef73:	push   ebp
6401ef74:	mov    ebp,esp
6401ef76:	sub    esp,0x10
6401ef79:	push   DWORD PTR [ebp+0x10]
6401ef7c:	lea    ecx,[ebp-0x10]
6401ef7f:	call   0x64012d2f
6401ef84:	lea    eax,[ebp-0x10]
6401ef87:	push   eax
6401ef88:	push   DWORD PTR [ebp+0xc]
6401ef8b:	push   DWORD PTR [ebp+0x8]
6401ef8e:	call   0x6401edf2
6401ef93:	add    esp,0xc
6401ef96:	cmp    BYTE PTR [ebp-0x4],0x0
6401ef9a:	je     0x6401efa3
6401ef9c:	mov    ecx,DWORD PTR [ebp-0x8]
6401ef9f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401efa3:	leave  
6401efa4:	ret    
6401efa5:	push   ebx
6401efa6:	xor    ebx,ebx
6401efa8:	cmp    DWORD PTR ds:0x6402e934,ebx
6401efae:	jne    0x6401eff2
6401efb0:	mov    eax,DWORD PTR [esp+0x8]
6401efb4:	cmp    eax,ebx
6401efb6:	jne    0x6401efd4
6401efb8:	call   0x64014950
6401efbd:	push   ebx
6401efbe:	push   ebx
6401efbf:	push   ebx
6401efc0:	push   ebx
6401efc1:	push   ebx
6401efc2:	mov    DWORD PTR [eax],0x16
6401efc8:	call   0x640126c4
6401efcd:	add    esp,0x14
6401efd0:	xor    eax,eax
6401efd2:	pop    ebx
6401efd3:	ret    
6401efd4:	cmp    BYTE PTR [eax],bl
6401efd6:	mov    edx,eax
6401efd8:	je     0x6401f005
6401efda:	mov    cl,BYTE PTR [edx]
6401efdc:	cmp    cl,0x41
6401efdf:	jl     0x6401efeb
6401efe1:	cmp    cl,0x5a
6401efe4:	jg     0x6401efeb
6401efe6:	add    cl,0x20
6401efe9:	mov    BYTE PTR [edx],cl
6401efeb:	inc    edx
6401efec:	cmp    BYTE PTR [edx],bl
6401efee:	jne    0x6401efda
6401eff0:	pop    ebx
6401eff1:	ret    
6401eff2:	push   ebx
6401eff3:	push   0xffffffff
6401eff5:	push   DWORD PTR [esp+0x10]
6401eff9:	call   0x6401ef73
6401effe:	mov    eax,DWORD PTR [esp+0x14]
6401f002:	add    esp,0xc
6401f005:	pop    ebx
6401f006:	ret    
6401f007:	ret    
6401f008:	mov    eax,0x6401fb13
6401f00d:	mov    ds:0x6402db4c,eax
6401f012:	mov    DWORD PTR ds:0x6402db50,0x6401f20f
6401f01c:	mov    DWORD PTR ds:0x6402db54,0x6401f1cd
6401f026:	mov    DWORD PTR ds:0x6402db58,0x6401f201
6401f030:	mov    DWORD PTR ds:0x6402db5c,0x6401f177
6401f03a:	mov    ds:0x6402db60,eax
6401f03f:	mov    DWORD PTR ds:0x6402db64,0x6401fa8d
6401f049:	mov    DWORD PTR ds:0x6402db68,0x6401f18d
6401f053:	mov    DWORD PTR ds:0x6402db6c,0x6401f0f7
6401f05d:	mov    DWORD PTR ds:0x6402db70,0x6401f086
6401f067:	ret    
6401f068:	call   0x6401f008
6401f06d:	call   0x6401fb99
6401f072:	cmp    DWORD PTR [esp+0x4],0x0
6401f077:	mov    ds:0x6402f034,eax
6401f07c:	je     0x6401f083
6401f07e:	call   0x6401fb34
6401f083:	fnclex 
6401f085:	ret    
6401f086:	push   ebp
6401f087:	mov    ebp,esp
6401f089:	sub    esp,0x10
6401f08c:	push   esi
6401f08d:	push   DWORD PTR [ebp+0xc]
6401f090:	lea    ecx,[ebp-0x10]
6401f093:	call   0x64012d2f
6401f098:	mov    esi,DWORD PTR [ebp+0x8]
6401f09b:	movsx  eax,BYTE PTR [esi]
6401f09e:	push   eax
6401f09f:	call   0x64013890
6401f0a4:	cmp    eax,0x65
6401f0a7:	jmp    0x6401f0b5
6401f0a9:	inc    esi
6401f0aa:	movzx  eax,BYTE PTR [esi]
6401f0ad:	push   eax
6401f0ae:	call   0x64013906
6401f0b3:	test   eax,eax
6401f0b5:	pop    ecx
6401f0b6:	jne    0x6401f0a9
6401f0b8:	movsx  eax,BYTE PTR [esi]
6401f0bb:	push   eax
6401f0bc:	call   0x64013890
6401f0c1:	cmp    eax,0x78
6401f0c4:	pop    ecx
6401f0c5:	jne    0x6401f0c9
6401f0c7:	inc    esi
6401f0c8:	inc    esi
6401f0c9:	mov    ecx,DWORD PTR [ebp-0x10]
6401f0cc:	mov    ecx,DWORD PTR [ecx+0xbc]
6401f0d2:	mov    ecx,DWORD PTR [ecx]
6401f0d4:	mov    al,BYTE PTR [esi]
6401f0d6:	mov    cl,BYTE PTR [ecx]
6401f0d8:	mov    BYTE PTR [esi],cl
6401f0da:	inc    esi
6401f0db:	mov    cl,BYTE PTR [esi]
6401f0dd:	mov    BYTE PTR [esi],al
6401f0df:	mov    al,cl
6401f0e1:	mov    cl,BYTE PTR [esi]
6401f0e3:	inc    esi
6401f0e4:	test   cl,cl
6401f0e6:	jne    0x6401f0db
6401f0e8:	cmp    BYTE PTR [ebp-0x4],cl
6401f0eb:	pop    esi
6401f0ec:	je     0x6401f0f5
6401f0ee:	mov    eax,DWORD PTR [ebp-0x8]
6401f0f1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f0f5:	leave  
6401f0f6:	ret    
6401f0f7:	push   ebp
6401f0f8:	mov    ebp,esp
6401f0fa:	sub    esp,0x10
6401f0fd:	push   esi
6401f0fe:	push   DWORD PTR [ebp+0xc]
6401f101:	lea    ecx,[ebp-0x10]
6401f104:	call   0x64012d2f
6401f109:	mov    eax,DWORD PTR [ebp+0x8]
6401f10c:	mov    cl,BYTE PTR [eax]
6401f10e:	test   cl,cl
6401f110:	mov    esi,DWORD PTR [ebp-0x10]
6401f113:	je     0x6401f12a
6401f115:	mov    edx,DWORD PTR [esi+0xbc]
6401f11b:	mov    edx,DWORD PTR [edx]
6401f11d:	mov    dl,BYTE PTR [edx]
6401f11f:	cmp    cl,dl
6401f121:	je     0x6401f12a
6401f123:	inc    eax
6401f124:	mov    cl,BYTE PTR [eax]
6401f126:	test   cl,cl
6401f128:	jne    0x6401f11f
6401f12a:	mov    cl,BYTE PTR [eax]
6401f12c:	inc    eax
6401f12d:	test   cl,cl
6401f12f:	je     0x6401f167
6401f131:	jmp    0x6401f13e
6401f133:	cmp    cl,0x65
6401f136:	je     0x6401f144
6401f138:	cmp    cl,0x45
6401f13b:	je     0x6401f144
6401f13d:	inc    eax
6401f13e:	mov    cl,BYTE PTR [eax]
6401f140:	test   cl,cl
6401f142:	jne    0x6401f133
6401f144:	mov    edx,eax
6401f146:	dec    eax
6401f147:	cmp    BYTE PTR [eax],0x30
6401f14a:	je     0x6401f146
6401f14c:	mov    ecx,DWORD PTR [esi+0xbc]
6401f152:	mov    ecx,DWORD PTR [ecx]
6401f154:	push   ebx
6401f155:	mov    bl,BYTE PTR [eax]
6401f157:	cmp    bl,BYTE PTR [ecx]
6401f159:	pop    ebx
6401f15a:	jne    0x6401f15d
6401f15c:	dec    eax
6401f15d:	mov    cl,BYTE PTR [edx]
6401f15f:	inc    eax
6401f160:	inc    edx
6401f161:	test   cl,cl
6401f163:	mov    BYTE PTR [eax],cl
6401f165:	jne    0x6401f15d
6401f167:	cmp    BYTE PTR [ebp-0x4],0x0
6401f16b:	pop    esi
6401f16c:	je     0x6401f175
6401f16e:	mov    eax,DWORD PTR [ebp-0x8]
6401f171:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f175:	leave  
6401f176:	ret    
6401f177:	fldz   
6401f179:	mov    eax,DWORD PTR [esp+0x4]
6401f17d:	fcomp  QWORD PTR [eax]
6401f17f:	fnstsw ax
6401f181:	test   ah,0x41
6401f184:	jp     0x6401f18a
6401f186:	xor    eax,eax
6401f188:	inc    eax
6401f189:	ret    
6401f18a:	xor    eax,eax
6401f18c:	ret    
6401f18d:	push   ebp
6401f18e:	mov    ebp,esp
6401f190:	push   ecx
6401f191:	push   ecx
6401f192:	cmp    DWORD PTR [ebp+0x8],0x0
6401f196:	push   DWORD PTR [ebp+0x14]
6401f199:	push   DWORD PTR [ebp+0x10]
6401f19c:	je     0x6401f1b7
6401f19e:	lea    eax,[ebp-0x8]
6401f1a1:	push   eax
6401f1a2:	call   0x6401fbfd
6401f1a7:	mov    ecx,DWORD PTR [ebp-0x8]
6401f1aa:	mov    eax,DWORD PTR [ebp+0xc]
6401f1ad:	mov    DWORD PTR [eax],ecx
6401f1af:	mov    ecx,DWORD PTR [ebp-0x4]
6401f1b2:	mov    DWORD PTR [eax+0x4],ecx
6401f1b5:	jmp    0x6401f1c8
6401f1b7:	lea    eax,[ebp+0x8]
6401f1ba:	push   eax
6401f1bb:	call   0x6401fca3
6401f1c0:	mov    eax,DWORD PTR [ebp+0xc]
6401f1c3:	mov    ecx,DWORD PTR [ebp+0x8]
6401f1c6:	mov    DWORD PTR [eax],ecx
6401f1c8:	add    esp,0xc
6401f1cb:	leave  
6401f1cc:	ret    
6401f1cd:	push   0x0
6401f1cf:	push   DWORD PTR [esp+0x10]
6401f1d3:	push   DWORD PTR [esp+0x10]
6401f1d7:	push   DWORD PTR [esp+0x10]
6401f1db:	call   0x6401f18d
6401f1e0:	add    esp,0x10
6401f1e3:	ret    
6401f1e4:	test   edi,edi
6401f1e6:	push   esi
6401f1e7:	mov    esi,eax
6401f1e9:	je     0x6401f1ff
6401f1eb:	push   esi
6401f1ec:	call   0x64014350
6401f1f1:	inc    eax
6401f1f2:	push   eax
6401f1f3:	push   esi
6401f1f4:	add    esi,edi
6401f1f6:	push   esi
6401f1f7:	call   0x64013bd0
6401f1fc:	add    esp,0x10
6401f1ff:	pop    esi
6401f200:	ret    
6401f201:	push   0x0
6401f203:	push   DWORD PTR [esp+0x8]
6401f207:	call   0x6401f086
6401f20c:	pop    ecx
6401f20d:	pop    ecx
6401f20e:	ret    
6401f20f:	push   0x0
6401f211:	push   DWORD PTR [esp+0x8]
6401f215:	call   0x6401f0f7
6401f21a:	pop    ecx
6401f21b:	pop    ecx
6401f21c:	ret    
6401f21d:	push   ebp
6401f21e:	mov    ebp,esp
6401f220:	sub    esp,0x10
6401f223:	push   ebx
6401f224:	push   esi
6401f225:	push   edi
6401f226:	push   DWORD PTR [ebp+0x1c]
6401f229:	lea    ecx,[ebp-0x10]
6401f22c:	mov    ebx,eax
6401f22e:	call   0x64012d2f
6401f233:	xor    esi,esi
6401f235:	cmp    ebx,esi
6401f237:	jne    0x6401f264
6401f239:	call   0x64014950
6401f23e:	push   0x16
6401f240:	pop    edi
6401f241:	push   esi
6401f242:	push   esi
6401f243:	push   esi
6401f244:	push   esi
6401f245:	push   esi
6401f246:	mov    DWORD PTR [eax],edi
6401f248:	call   0x640126c4
6401f24d:	add    esp,0x14
6401f250:	cmp    BYTE PTR [ebp-0x4],0x0
6401f254:	je     0x6401f25d
6401f256:	mov    eax,DWORD PTR [ebp-0x8]
6401f259:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f25d:	mov    eax,edi
6401f25f:	jmp    0x6401f385
6401f264:	cmp    DWORD PTR [ebp+0x8],esi
6401f267:	jbe    0x6401f239
6401f269:	cmp    DWORD PTR [ebp+0xc],esi
6401f26c:	jle    0x6401f273
6401f26e:	mov    eax,DWORD PTR [ebp+0xc]
6401f271:	jmp    0x6401f275
6401f273:	xor    eax,eax
6401f275:	add    eax,0x9
6401f278:	cmp    DWORD PTR [ebp+0x8],eax
6401f27b:	ja     0x6401f286
6401f27d:	call   0x64014950
6401f282:	push   0x22
6401f284:	jmp    0x6401f240
6401f286:	cmp    BYTE PTR [ebp+0x18],0x0
6401f28a:	je     0x6401f2aa
6401f28c:	mov    edx,DWORD PTR [ebp+0x14]
6401f28f:	xor    eax,eax
6401f291:	cmp    DWORD PTR [ebp+0xc],esi
6401f294:	setg   al
6401f297:	xor    ecx,ecx
6401f299:	cmp    DWORD PTR [edx],0x2d
6401f29c:	sete   cl
6401f29f:	mov    edi,eax
6401f2a1:	add    ecx,ebx
6401f2a3:	mov    eax,ecx
6401f2a5:	call   0x6401f1e4
6401f2aa:	mov    edi,DWORD PTR [ebp+0x14]
6401f2ad:	cmp    DWORD PTR [edi],0x2d
6401f2b0:	mov    esi,ebx
6401f2b2:	jne    0x6401f2ba
6401f2b4:	mov    BYTE PTR [ebx],0x2d
6401f2b7:	lea    esi,[ebx+0x1]
6401f2ba:	cmp    DWORD PTR [ebp+0xc],0x0
6401f2be:	jle    0x6401f2d8
6401f2c0:	lea    eax,[esi+0x1]
6401f2c3:	mov    cl,BYTE PTR [eax]
6401f2c5:	mov    BYTE PTR [esi],cl
6401f2c7:	mov    esi,eax
6401f2c9:	mov    eax,DWORD PTR [ebp-0x10]
6401f2cc:	mov    eax,DWORD PTR [eax+0xbc]
6401f2d2:	mov    eax,DWORD PTR [eax]
6401f2d4:	mov    al,BYTE PTR [eax]
6401f2d6:	mov    BYTE PTR [esi],al
6401f2d8:	xor    eax,eax
6401f2da:	cmp    BYTE PTR [ebp+0x18],al
6401f2dd:	sete   al
6401f2e0:	add    eax,DWORD PTR [ebp+0xc]
6401f2e3:	add    esi,eax
6401f2e5:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6401f2e9:	jne    0x6401f2f0
6401f2eb:	or     ebx,0xffffffff
6401f2ee:	jmp    0x6401f2f5
6401f2f0:	sub    ebx,esi
6401f2f2:	add    ebx,DWORD PTR [ebp+0x8]
6401f2f5:	push   0x64027638
6401f2fa:	push   ebx
6401f2fb:	push   esi
6401f2fc:	call   0x64014548
6401f301:	add    esp,0xc
6401f304:	xor    ebx,ebx
6401f306:	test   eax,eax
6401f308:	je     0x6401f317
6401f30a:	push   ebx
6401f30b:	push   ebx
6401f30c:	push   ebx
6401f30d:	push   ebx
6401f30e:	push   ebx
6401f30f:	call   0x640125c8
6401f314:	add    esp,0x14
6401f317:	cmp    DWORD PTR [ebp+0x10],ebx
6401f31a:	lea    ecx,[esi+0x2]
6401f31d:	je     0x6401f322
6401f31f:	mov    BYTE PTR [esi],0x45
6401f322:	mov    eax,DWORD PTR [edi+0xc]
6401f325:	inc    esi
6401f326:	cmp    BYTE PTR [eax],0x30
6401f329:	je     0x6401f359
6401f32b:	mov    eax,DWORD PTR [edi+0x4]
6401f32e:	dec    eax
6401f32f:	jns    0x6401f336
6401f331:	neg    eax
6401f333:	mov    BYTE PTR [esi],0x2d
6401f336:	inc    esi
6401f337:	cmp    eax,0x64
6401f33a:	jl     0x6401f346
6401f33c:	cdq    
6401f33d:	push   0x64
6401f33f:	pop    edi
6401f340:	idiv   edi
6401f342:	add    BYTE PTR [esi],al
6401f344:	mov    eax,edx
6401f346:	inc    esi
6401f347:	cmp    eax,0xa
6401f34a:	jl     0x6401f356
6401f34c:	cdq    
6401f34d:	push   0xa
6401f34f:	pop    edi
6401f350:	idiv   edi
6401f352:	add    BYTE PTR [esi],al
6401f354:	mov    eax,edx
6401f356:	add    BYTE PTR [esi+0x1],al
6401f359:	test   BYTE PTR ds:0x6402f038,0x1
6401f360:	je     0x6401f376
6401f362:	cmp    BYTE PTR [ecx],0x30
6401f365:	jne    0x6401f376
6401f367:	push   0x3
6401f369:	lea    eax,[ecx+0x1]
6401f36c:	push   eax
6401f36d:	push   ecx
6401f36e:	call   0x64013bd0
6401f373:	add    esp,0xc
6401f376:	cmp    BYTE PTR [ebp-0x4],0x0
6401f37a:	je     0x6401f383
6401f37c:	mov    eax,DWORD PTR [ebp-0x8]
6401f37f:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f383:	xor    eax,eax
6401f385:	pop    edi
6401f386:	pop    esi
6401f387:	pop    ebx
6401f388:	leave  
6401f389:	ret    
6401f38a:	push   ebp
6401f38b:	mov    ebp,esp
6401f38d:	sub    esp,0x2c
6401f390:	mov    eax,ds:0x6402d09c
6401f395:	xor    eax,ebp
6401f397:	mov    DWORD PTR [ebp-0x4],eax
6401f39a:	mov    eax,DWORD PTR [ebp+0x8]
6401f39d:	push   ebx
6401f39e:	push   esi
6401f39f:	push   edi
6401f3a0:	mov    edi,DWORD PTR [ebp+0xc]
6401f3a3:	push   0x16
6401f3a5:	pop    esi
6401f3a6:	push   esi
6401f3a7:	lea    ecx,[ebp-0x1c]
6401f3aa:	push   ecx
6401f3ab:	lea    ecx,[ebp-0x2c]
6401f3ae:	push   ecx
6401f3af:	push   DWORD PTR [eax+0x4]
6401f3b2:	push   DWORD PTR [eax]
6401f3b4:	call   0x6401fec1
6401f3b9:	xor    ebx,ebx
6401f3bb:	add    esp,0x14
6401f3be:	cmp    edi,ebx
6401f3c0:	jne    0x6401f3da
6401f3c2:	call   0x64014950
6401f3c7:	push   ebx
6401f3c8:	push   ebx
6401f3c9:	push   ebx
6401f3ca:	push   ebx
6401f3cb:	push   ebx
6401f3cc:	mov    DWORD PTR [eax],esi
6401f3ce:	call   0x640126c4
6401f3d3:	add    esp,0x14
6401f3d6:	mov    eax,esi
6401f3d8:	jmp    0x6401f449
6401f3da:	mov    eax,DWORD PTR [ebp+0x10]
6401f3dd:	cmp    eax,ebx
6401f3df:	jbe    0x6401f3c2
6401f3e1:	cmp    eax,0xffffffff
6401f3e4:	mov    esi,DWORD PTR [ebp+0x14]
6401f3e7:	jne    0x6401f3ee
6401f3e9:	or     eax,0xffffffff
6401f3ec:	jmp    0x6401f402
6401f3ee:	xor    ecx,ecx
6401f3f0:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f3f4:	sete   cl
6401f3f7:	sub    eax,ecx
6401f3f9:	xor    ecx,ecx
6401f3fb:	cmp    esi,ebx
6401f3fd:	setg   cl
6401f400:	sub    eax,ecx
6401f402:	lea    ecx,[ebp-0x2c]
6401f405:	push   ecx
6401f406:	lea    ecx,[esi+0x1]
6401f409:	push   ecx
6401f40a:	push   eax
6401f40b:	xor    eax,eax
6401f40d:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f411:	sete   al
6401f414:	xor    ecx,ecx
6401f416:	cmp    esi,ebx
6401f418:	setg   cl
6401f41b:	add    eax,edi
6401f41d:	add    ecx,eax
6401f41f:	push   ecx
6401f420:	call   0x6401fd49
6401f425:	add    esp,0x10
6401f428:	cmp    eax,ebx
6401f42a:	je     0x6401f430
6401f42c:	mov    BYTE PTR [edi],bl
6401f42e:	jmp    0x6401f449
6401f430:	push   DWORD PTR [ebp+0x1c]
6401f433:	lea    eax,[ebp-0x2c]
6401f436:	push   ebx
6401f437:	push   eax
6401f438:	push   DWORD PTR [ebp+0x18]
6401f43b:	mov    eax,edi
6401f43d:	push   esi
6401f43e:	push   DWORD PTR [ebp+0x10]
6401f441:	call   0x6401f21d
6401f446:	add    esp,0x18
6401f449:	mov    ecx,DWORD PTR [ebp-0x4]
6401f44c:	pop    edi
6401f44d:	pop    esi
6401f44e:	xor    ecx,ebp
6401f450:	pop    ebx
6401f451:	call   0x64012b8c
6401f456:	leave  
6401f457:	ret    
6401f458:	push   ebp
6401f459:	mov    ebp,esp
6401f45b:	push   0x0
6401f45d:	push   DWORD PTR [ebp+0x18]
6401f460:	push   DWORD PTR [ebp+0x14]
6401f463:	push   DWORD PTR [ebp+0x10]
6401f466:	push   DWORD PTR [ebp+0xc]
6401f469:	push   DWORD PTR [ebp+0x8]
6401f46c:	call   0x6401f38a
6401f471:	add    esp,0x18
6401f474:	pop    ebp
6401f475:	ret    
6401f476:	push   ebp
6401f477:	mov    ebp,esp
6401f479:	sub    esp,0x24
6401f47c:	push   esi
6401f47d:	push   edi
6401f47e:	push   DWORD PTR [ebp+0x1c]
6401f481:	lea    ecx,[ebp-0x24]
6401f484:	mov    DWORD PTR [ebp-0x14],0x3ff
6401f48b:	xor    edi,edi
6401f48d:	mov    DWORD PTR [ebp-0x4],0x30
6401f494:	call   0x64012d2f
6401f499:	cmp    DWORD PTR [ebp+0x14],edi
6401f49c:	jge    0x6401f4a1
6401f49e:	mov    DWORD PTR [ebp+0x14],edi
6401f4a1:	mov    esi,DWORD PTR [ebp+0xc]
6401f4a4:	cmp    esi,edi
6401f4a6:	jne    0x6401f4d3
6401f4a8:	call   0x64014950
6401f4ad:	push   0x16
6401f4af:	pop    esi
6401f4b0:	push   edi
6401f4b1:	push   edi
6401f4b2:	push   edi
6401f4b3:	push   edi
6401f4b4:	push   edi
6401f4b5:	mov    DWORD PTR [eax],esi
6401f4b7:	call   0x640126c4
6401f4bc:	add    esp,0x14
6401f4bf:	cmp    BYTE PTR [ebp-0x18],0x0
6401f4c3:	je     0x6401f4cc
6401f4c5:	mov    eax,DWORD PTR [ebp-0x1c]
6401f4c8:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f4cc:	mov    eax,esi
6401f4ce:	jmp    0x6401f7e3
6401f4d3:	cmp    DWORD PTR [ebp+0x10],edi
6401f4d6:	jbe    0x6401f4a8
6401f4d8:	mov    eax,DWORD PTR [ebp+0x14]
6401f4db:	add    eax,0xb
6401f4de:	cmp    DWORD PTR [ebp+0x10],eax
6401f4e1:	mov    BYTE PTR [esi],0x0
6401f4e4:	ja     0x6401f4ef
6401f4e6:	call   0x64014950
6401f4eb:	push   0x22
6401f4ed:	jmp    0x6401f4af
6401f4ef:	mov    edi,DWORD PTR [ebp+0x8]
6401f4f2:	mov    eax,DWORD PTR [edi]
6401f4f4:	mov    DWORD PTR [ebp-0xc],eax
6401f4f7:	mov    eax,DWORD PTR [edi+0x4]
6401f4fa:	mov    ecx,eax
6401f4fc:	shr    ecx,0x14
6401f4ff:	mov    edx,0x7ff
6401f504:	push   ebx
6401f505:	and    ecx,edx
6401f507:	xor    ebx,ebx
6401f509:	cmp    ecx,edx
6401f50b:	jne    0x6401f5a1
6401f511:	test   ebx,ebx
6401f513:	jne    0x6401f5a1
6401f519:	mov    eax,DWORD PTR [ebp+0x10]
6401f51c:	cmp    eax,0xffffffff
6401f51f:	jne    0x6401f525
6401f521:	or     eax,eax
6401f523:	jmp    0x6401f528
6401f525:	add    eax,0xfffffffe
6401f528:	push   0x0
6401f52a:	push   DWORD PTR [ebp+0x14]
6401f52d:	lea    ebx,[esi+0x2]
6401f530:	push   eax
6401f531:	push   ebx
6401f532:	push   edi
6401f533:	call   0x6401f458
6401f538:	add    esp,0x14
6401f53b:	test   eax,eax
6401f53d:	je     0x6401f558
6401f53f:	cmp    BYTE PTR [ebp-0x18],0x0
6401f543:	mov    BYTE PTR [esi],0x0
6401f546:	je     0x6401f7e2
6401f54c:	mov    ecx,DWORD PTR [ebp-0x1c]
6401f54f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401f553:	jmp    0x6401f7e2
6401f558:	cmp    BYTE PTR [ebx],0x2d
6401f55b:	jne    0x6401f561
6401f55d:	mov    BYTE PTR [esi],0x2d
6401f560:	inc    esi
6401f561:	mov    BYTE PTR [esi],0x30
6401f564:	inc    esi
6401f565:	cmp    DWORD PTR [ebp+0x18],0x0
6401f569:	push   0x65
6401f56b:	sete   al
6401f56e:	dec    al
6401f570:	and    al,0xe0
6401f572:	add    al,0x78
6401f574:	mov    BYTE PTR [esi],al
6401f576:	inc    esi
6401f577:	push   esi
6401f578:	call   0x6401fbd0
6401f57d:	test   eax,eax
6401f57f:	pop    ecx
6401f580:	pop    ecx
6401f581:	je     0x6401f7d3
6401f587:	cmp    DWORD PTR [ebp+0x18],0x0
6401f58b:	sete   cl
6401f58e:	dec    cl
6401f590:	and    cl,0xe0
6401f593:	add    cl,0x70
6401f596:	mov    BYTE PTR [eax],cl
6401f598:	mov    BYTE PTR [eax+0x3],0x0
6401f59c:	jmp    0x6401f7d3
6401f5a1:	and    eax,0x80000000
6401f5a6:	xor    ecx,ecx
6401f5a8:	or     ecx,eax
6401f5aa:	je     0x6401f5b0
6401f5ac:	mov    BYTE PTR [esi],0x2d
6401f5af:	inc    esi
6401f5b0:	mov    ebx,DWORD PTR [ebp+0x18]
6401f5b3:	mov    BYTE PTR [esi],0x30
6401f5b6:	inc    esi
6401f5b7:	test   ebx,ebx
6401f5b9:	sete   al
6401f5bc:	dec    al
6401f5be:	and    al,0xe0
6401f5c0:	add    al,0x78
6401f5c2:	mov    BYTE PTR [esi],al
6401f5c4:	mov    ecx,DWORD PTR [edi+0x4]
6401f5c7:	inc    esi
6401f5c8:	neg    ebx
6401f5ca:	sbb    ebx,ebx
6401f5cc:	and    ebx,0xffffffe0
6401f5cf:	and    ecx,0x7ff00000
6401f5d5:	xor    eax,eax
6401f5d7:	add    ebx,0x27
6401f5da:	xor    edx,edx
6401f5dc:	or     eax,ecx
6401f5de:	jne    0x6401f601
6401f5e0:	mov    BYTE PTR [esi],0x30
6401f5e3:	mov    ecx,DWORD PTR [edi+0x4]
6401f5e6:	mov    eax,DWORD PTR [edi]
6401f5e8:	and    ecx,0xfffff
6401f5ee:	inc    esi
6401f5ef:	or     eax,ecx
6401f5f1:	jne    0x6401f5f8
6401f5f3:	mov    DWORD PTR [ebp-0x14],edx
6401f5f6:	jmp    0x6401f605
6401f5f8:	mov    DWORD PTR [ebp-0x14],0x3fe
6401f5ff:	jmp    0x6401f605
6401f601:	mov    BYTE PTR [esi],0x31
6401f604:	inc    esi
6401f605:	mov    eax,esi
6401f607:	inc    esi
6401f608:	cmp    DWORD PTR [ebp+0x14],edx
6401f60b:	mov    DWORD PTR [ebp+0xc],eax
6401f60e:	jne    0x6401f614
6401f610:	mov    BYTE PTR [eax],dl
6401f612:	jmp    0x6401f623
6401f614:	mov    ecx,DWORD PTR [ebp-0x24]
6401f617:	mov    ecx,DWORD PTR [ecx+0xbc]
6401f61d:	mov    ecx,DWORD PTR [ecx]
6401f61f:	mov    cl,BYTE PTR [ecx]
6401f621:	mov    BYTE PTR [eax],cl
6401f623:	mov    ecx,DWORD PTR [edi+0x4]
6401f626:	mov    eax,DWORD PTR [edi]
6401f628:	and    ecx,0xfffff
6401f62e:	mov    DWORD PTR [ebp-0x8],ecx
6401f631:	ja     0x6401f63b
6401f633:	cmp    eax,edx
6401f635:	jbe    0x6401f6f0
6401f63b:	mov    DWORD PTR [ebp-0xc],edx
6401f63e:	mov    DWORD PTR [ebp-0x8],0xf0000
6401f645:	cmp    DWORD PTR [ebp+0x14],0x0
6401f649:	jle    0x6401f698
6401f64b:	mov    edx,DWORD PTR [edi+0x4]
6401f64e:	and    edx,DWORD PTR [ebp-0x8]
6401f651:	mov    eax,DWORD PTR [edi]
6401f653:	movsx  ecx,WORD PTR [ebp-0x4]
6401f657:	and    eax,DWORD PTR [ebp-0xc]
6401f65a:	and    edx,0xfffff
6401f660:	call   0x64020030
6401f665:	add    ax,0x30
6401f669:	movzx  eax,ax
6401f66c:	cmp    ax,0x39
6401f670:	jbe    0x6401f674
6401f672:	add    eax,ebx
6401f674:	mov    ecx,DWORD PTR [ebp-0x8]
6401f677:	sub    DWORD PTR [ebp-0x4],0x4
6401f67b:	mov    BYTE PTR [esi],al
6401f67d:	mov    eax,DWORD PTR [ebp-0xc]
6401f680:	shrd   eax,ecx,0x4
6401f684:	shr    ecx,0x4
6401f687:	inc    esi
6401f688:	dec    DWORD PTR [ebp+0x14]
6401f68b:	cmp    WORD PTR [ebp-0x4],0x0
6401f690:	mov    DWORD PTR [ebp-0xc],eax
6401f693:	mov    DWORD PTR [ebp-0x8],ecx
6401f696:	jge    0x6401f645
6401f698:	cmp    WORD PTR [ebp-0x4],0x0
6401f69d:	jl     0x6401f6f0
6401f69f:	mov    edx,DWORD PTR [edi+0x4]
6401f6a2:	and    edx,DWORD PTR [ebp-0x8]
6401f6a5:	mov    eax,DWORD PTR [edi]
6401f6a7:	movsx  ecx,WORD PTR [ebp-0x4]
6401f6ab:	and    eax,DWORD PTR [ebp-0xc]
6401f6ae:	and    edx,0xfffff
6401f6b4:	call   0x64020030
6401f6b9:	cmp    ax,0x8
6401f6bd:	jbe    0x6401f6f0
6401f6bf:	lea    eax,[esi-0x1]
6401f6c2:	mov    cl,BYTE PTR [eax]
6401f6c4:	cmp    cl,0x66
6401f6c7:	je     0x6401f6ce
6401f6c9:	cmp    cl,0x46
6401f6cc:	jne    0x6401f6d4
6401f6ce:	mov    BYTE PTR [eax],0x30
6401f6d1:	dec    eax
6401f6d2:	jmp    0x6401f6c2
6401f6d4:	cmp    eax,DWORD PTR [ebp+0xc]
6401f6d7:	je     0x6401f6ed
6401f6d9:	mov    cl,BYTE PTR [eax]
6401f6db:	cmp    cl,0x39
6401f6de:	jne    0x6401f6e7
6401f6e0:	add    bl,0x3a
6401f6e3:	mov    BYTE PTR [eax],bl
6401f6e5:	jmp    0x6401f6f0
6401f6e7:	inc    cl
6401f6e9:	mov    BYTE PTR [eax],cl
6401f6eb:	jmp    0x6401f6f0
6401f6ed:	inc    BYTE PTR [eax-0x1]
6401f6f0:	cmp    DWORD PTR [ebp+0x14],0x0
6401f6f4:	jle    0x6401f707
6401f6f6:	push   DWORD PTR [ebp+0x14]
6401f6f9:	push   0x30
6401f6fb:	push   esi
6401f6fc:	call   0x64013290
6401f701:	add    esp,0xc
6401f704:	add    esi,DWORD PTR [ebp+0x14]
6401f707:	mov    eax,DWORD PTR [ebp+0xc]
6401f70a:	cmp    BYTE PTR [eax],0x0
6401f70d:	jne    0x6401f711
6401f70f:	mov    esi,eax
6401f711:	cmp    DWORD PTR [ebp+0x18],0x0
6401f715:	mov    cl,0x34
6401f717:	sete   al
6401f71a:	dec    al
6401f71c:	and    al,0xe0
6401f71e:	add    al,0x70
6401f720:	mov    BYTE PTR [esi],al
6401f722:	mov    eax,DWORD PTR [edi]
6401f724:	mov    edx,DWORD PTR [edi+0x4]
6401f727:	inc    esi
6401f728:	call   0x64020030
6401f72d:	xor    ebx,ebx
6401f72f:	and    eax,0x7ff
6401f734:	and    edx,ebx
6401f736:	sub    eax,DWORD PTR [ebp-0x14]
6401f739:	push   ebx
6401f73a:	pop    ecx
6401f73b:	sbb    edx,ecx
6401f73d:	js     0x6401f74b
6401f73f:	jg     0x6401f745
6401f741:	cmp    eax,ebx
6401f743:	jb     0x6401f74b
6401f745:	mov    BYTE PTR [esi],0x2b
6401f748:	inc    esi
6401f749:	jmp    0x6401f755
6401f74b:	mov    BYTE PTR [esi],0x2d
6401f74e:	inc    esi
6401f74f:	neg    eax
6401f751:	adc    edx,ebx
6401f753:	neg    edx
6401f755:	cmp    edx,ebx
6401f757:	mov    edi,esi
6401f759:	mov    BYTE PTR [esi],0x30
6401f75c:	jl     0x6401f782
6401f75e:	mov    ecx,0x3e8
6401f763:	jg     0x6401f769
6401f765:	cmp    eax,ecx
6401f767:	jb     0x6401f782
6401f769:	push   ebx
6401f76a:	push   ecx
6401f76b:	push   edx
6401f76c:	push   eax
6401f76d:	call   0x6401ff50
6401f772:	add    al,0x30
6401f774:	mov    BYTE PTR [esi],al
6401f776:	inc    esi
6401f777:	cmp    esi,edi
6401f779:	mov    DWORD PTR [ebp-0x10],edx
6401f77c:	mov    eax,ecx
6401f77e:	mov    edx,ebx
6401f780:	jne    0x6401f78d
6401f782:	test   edx,edx
6401f784:	jl     0x6401f7a4
6401f786:	jg     0x6401f78d
6401f788:	cmp    eax,0x64
6401f78b:	jb     0x6401f7a4
6401f78d:	push   0x0
6401f78f:	push   0x64
6401f791:	push   edx
6401f792:	push   eax
6401f793:	call   0x6401ff50
6401f798:	add    al,0x30
6401f79a:	mov    BYTE PTR [esi],al
6401f79c:	mov    DWORD PTR [ebp-0x10],edx
6401f79f:	inc    esi
6401f7a0:	mov    eax,ecx
6401f7a2:	mov    edx,ebx
6401f7a4:	cmp    esi,edi
6401f7a6:	jne    0x6401f7b3
6401f7a8:	test   edx,edx
6401f7aa:	jl     0x6401f7cb
6401f7ac:	jg     0x6401f7b3
6401f7ae:	cmp    eax,0xa
6401f7b1:	jb     0x6401f7cb
6401f7b3:	push   0x0
6401f7b5:	push   0xa
6401f7b7:	push   edx
6401f7b8:	push   eax
6401f7b9:	call   0x6401ff50
6401f7be:	add    al,0x30
6401f7c0:	mov    BYTE PTR [esi],al
6401f7c2:	mov    DWORD PTR [ebp-0x10],edx
6401f7c5:	inc    esi
6401f7c6:	mov    eax,ecx
6401f7c8:	mov    DWORD PTR [ebp-0x10],ebx
6401f7cb:	add    al,0x30
6401f7cd:	mov    BYTE PTR [esi],al
6401f7cf:	mov    BYTE PTR [esi+0x1],0x0
6401f7d3:	cmp    BYTE PTR [ebp-0x18],0x0
6401f7d7:	je     0x6401f7e0
6401f7d9:	mov    eax,DWORD PTR [ebp-0x1c]
6401f7dc:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f7e0:	xor    eax,eax
6401f7e2:	pop    ebx
6401f7e3:	pop    edi
6401f7e4:	pop    esi
6401f7e5:	leave  
6401f7e6:	ret    
6401f7e7:	push   ebp
6401f7e8:	mov    ebp,esp
6401f7ea:	sub    esp,0x10
6401f7ed:	push   ebx
6401f7ee:	push   esi
6401f7ef:	push   edi
6401f7f0:	push   DWORD PTR [ebp+0x14]
6401f7f3:	mov    ebx,eax
6401f7f5:	mov    esi,DWORD PTR [ebx+0x4]
6401f7f8:	mov    edi,ecx
6401f7fa:	lea    ecx,[ebp-0x10]
6401f7fd:	dec    esi
6401f7fe:	call   0x64012d2f
6401f803:	test   edi,edi
6401f805:	jne    0x6401f834
6401f807:	call   0x64014950
6401f80c:	push   0x16
6401f80e:	pop    esi
6401f80f:	mov    DWORD PTR [eax],esi
6401f811:	xor    eax,eax
6401f813:	push   eax
6401f814:	push   eax
6401f815:	push   eax
6401f816:	push   eax
6401f817:	push   eax
6401f818:	call   0x640126c4
6401f81d:	add    esp,0x14
6401f820:	cmp    BYTE PTR [ebp-0x4],0x0
6401f824:	je     0x6401f82d
6401f826:	mov    eax,DWORD PTR [ebp-0x8]
6401f829:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f82d:	mov    eax,esi
6401f82f:	jmp    0x6401f8d7
6401f834:	cmp    DWORD PTR [ebp+0x8],0x0
6401f838:	jbe    0x6401f807
6401f83a:	cmp    BYTE PTR [ebp+0x10],0x0
6401f83e:	je     0x6401f858
6401f840:	cmp    esi,DWORD PTR [ebp+0xc]
6401f843:	jne    0x6401f858
6401f845:	xor    eax,eax
6401f847:	cmp    DWORD PTR [ebx],0x2d
6401f84a:	sete   al
6401f84d:	add    eax,esi
6401f84f:	add    eax,edi
6401f851:	mov    BYTE PTR [eax],0x30
6401f854:	mov    BYTE PTR [eax+0x1],0x0
6401f858:	cmp    DWORD PTR [ebx],0x2d
6401f85b:	mov    esi,edi
6401f85d:	jne    0x6401f865
6401f85f:	mov    BYTE PTR [edi],0x2d
6401f862:	lea    esi,[edi+0x1]
6401f865:	mov    eax,DWORD PTR [ebx+0x4]
6401f868:	xor    edi,edi
6401f86a:	inc    edi
6401f86b:	test   eax,eax
6401f86d:	jg     0x6401f87c
6401f86f:	mov    eax,esi
6401f871:	call   0x6401f1e4
6401f876:	mov    BYTE PTR [esi],0x30
6401f879:	inc    esi
6401f87a:	jmp    0x6401f87e
6401f87c:	add    esi,eax
6401f87e:	cmp    DWORD PTR [ebp+0xc],0x0
6401f882:	jle    0x6401f8c8
6401f884:	mov    eax,esi
6401f886:	call   0x6401f1e4
6401f88b:	mov    eax,DWORD PTR [ebp-0x10]
6401f88e:	mov    eax,DWORD PTR [eax+0xbc]
6401f894:	mov    eax,DWORD PTR [eax]
6401f896:	mov    al,BYTE PTR [eax]
6401f898:	mov    BYTE PTR [esi],al
6401f89a:	mov    ebx,DWORD PTR [ebx+0x4]
6401f89d:	inc    esi
6401f89e:	test   ebx,ebx
6401f8a0:	jge    0x6401f8c8
6401f8a2:	neg    ebx
6401f8a4:	cmp    BYTE PTR [ebp+0x10],0x0
6401f8a8:	jne    0x6401f8af
6401f8aa:	cmp    DWORD PTR [ebp+0xc],ebx
6401f8ad:	jl     0x6401f8b2
6401f8af:	mov    DWORD PTR [ebp+0xc],ebx
6401f8b2:	mov    edi,DWORD PTR [ebp+0xc]
6401f8b5:	mov    eax,esi
6401f8b7:	call   0x6401f1e4
6401f8bc:	push   edi
6401f8bd:	push   0x30
6401f8bf:	push   esi
6401f8c0:	call   0x64013290
6401f8c5:	add    esp,0xc
6401f8c8:	cmp    BYTE PTR [ebp-0x4],0x0
6401f8cc:	je     0x6401f8d5
6401f8ce:	mov    eax,DWORD PTR [ebp-0x8]
6401f8d1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f8d5:	xor    eax,eax
6401f8d7:	pop    edi
6401f8d8:	pop    esi
6401f8d9:	pop    ebx
6401f8da:	leave  
6401f8db:	ret    
6401f8dc:	push   ebp
6401f8dd:	mov    ebp,esp
6401f8df:	sub    esp,0x2c
6401f8e2:	mov    eax,ds:0x6402d09c
6401f8e7:	xor    eax,ebp
6401f8e9:	mov    DWORD PTR [ebp-0x4],eax
6401f8ec:	mov    eax,DWORD PTR [ebp+0x8]
6401f8ef:	push   ebx
6401f8f0:	push   esi
6401f8f1:	push   edi
6401f8f2:	mov    edi,DWORD PTR [ebp+0xc]
6401f8f5:	push   0x16
6401f8f7:	pop    esi
6401f8f8:	push   esi
6401f8f9:	lea    ecx,[ebp-0x1c]
6401f8fc:	push   ecx
6401f8fd:	lea    ecx,[ebp-0x2c]
6401f900:	push   ecx
6401f901:	push   DWORD PTR [eax+0x4]
6401f904:	push   DWORD PTR [eax]
6401f906:	call   0x6401fec1
6401f90b:	xor    ebx,ebx
6401f90d:	add    esp,0x14
6401f910:	cmp    edi,ebx
6401f912:	jne    0x6401f92c
6401f914:	call   0x64014950
6401f919:	push   ebx
6401f91a:	push   ebx
6401f91b:	push   ebx
6401f91c:	push   ebx
6401f91d:	push   ebx
6401f91e:	mov    DWORD PTR [eax],esi
6401f920:	call   0x640126c4
6401f925:	add    esp,0x14
6401f928:	mov    eax,esi
6401f92a:	jmp    0x6401f986
6401f92c:	mov    eax,DWORD PTR [ebp+0x10]
6401f92f:	cmp    eax,ebx
6401f931:	jbe    0x6401f914
6401f933:	cmp    eax,0xffffffff
6401f936:	jne    0x6401f93c
6401f938:	or     eax,eax
6401f93a:	jmp    0x6401f947
6401f93c:	xor    ecx,ecx
6401f93e:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f942:	sete   cl
6401f945:	sub    eax,ecx
6401f947:	mov    esi,DWORD PTR [ebp+0x14]
6401f94a:	lea    ecx,[ebp-0x2c]
6401f94d:	push   ecx
6401f94e:	mov    ecx,DWORD PTR [ebp-0x28]
6401f951:	add    ecx,esi
6401f953:	push   ecx
6401f954:	push   eax
6401f955:	xor    eax,eax
6401f957:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401f95b:	sete   al
6401f95e:	add    eax,edi
6401f960:	push   eax
6401f961:	call   0x6401fd49
6401f966:	add    esp,0x10
6401f969:	cmp    eax,ebx
6401f96b:	je     0x6401f971
6401f96d:	mov    BYTE PTR [edi],bl
6401f96f:	jmp    0x6401f986
6401f971:	push   DWORD PTR [ebp+0x18]
6401f974:	lea    eax,[ebp-0x2c]
6401f977:	push   ebx
6401f978:	push   esi
6401f979:	push   DWORD PTR [ebp+0x10]
6401f97c:	mov    ecx,edi
6401f97e:	call   0x6401f7e7
6401f983:	add    esp,0x10
6401f986:	mov    ecx,DWORD PTR [ebp-0x4]
6401f989:	pop    edi
6401f98a:	pop    esi
6401f98b:	xor    ecx,ebp
6401f98d:	pop    ebx
6401f98e:	call   0x64012b8c
6401f993:	leave  
6401f994:	ret    
6401f995:	push   ebp
6401f996:	mov    ebp,esp
6401f998:	sub    esp,0x30
6401f99b:	mov    eax,ds:0x6402d09c
6401f9a0:	xor    eax,ebp
6401f9a2:	mov    DWORD PTR [ebp-0x4],eax
6401f9a5:	mov    eax,DWORD PTR [ebp+0x8]
6401f9a8:	push   ebx
6401f9a9:	push   esi
6401f9aa:	mov    esi,DWORD PTR [ebp+0xc]
6401f9ad:	push   edi
6401f9ae:	push   0x16
6401f9b0:	pop    edi
6401f9b1:	push   edi
6401f9b2:	lea    ecx,[ebp-0x1c]
6401f9b5:	push   ecx
6401f9b6:	lea    ecx,[ebp-0x30]
6401f9b9:	push   ecx
6401f9ba:	push   DWORD PTR [eax+0x4]
6401f9bd:	push   DWORD PTR [eax]
6401f9bf:	call   0x6401fec1
6401f9c4:	xor    ebx,ebx
6401f9c6:	add    esp,0x14
6401f9c9:	cmp    esi,ebx
6401f9cb:	jne    0x6401f9e8
6401f9cd:	call   0x64014950
6401f9d2:	push   ebx
6401f9d3:	push   ebx
6401f9d4:	push   ebx
6401f9d5:	push   ebx
6401f9d6:	push   ebx
6401f9d7:	mov    DWORD PTR [eax],edi
6401f9d9:	call   0x640126c4
6401f9de:	add    esp,0x14
6401f9e1:	mov    eax,edi
6401f9e3:	jmp    0x6401fa7e
6401f9e8:	mov    ecx,DWORD PTR [ebp+0x10]
6401f9eb:	cmp    ecx,ebx
6401f9ed:	jbe    0x6401f9cd
6401f9ef:	mov    eax,DWORD PTR [ebp-0x2c]
6401f9f2:	dec    eax
6401f9f3:	mov    DWORD PTR [ebp-0x20],eax
6401f9f6:	xor    eax,eax
6401f9f8:	cmp    DWORD PTR [ebp-0x30],0x2d
6401f9fc:	sete   al
6401f9ff:	cmp    ecx,0xffffffff
6401fa02:	lea    edi,[eax+esi*1]
6401fa05:	jne    0x6401fa0b
6401fa07:	or     ecx,ecx
6401fa09:	jmp    0x6401fa0d
6401fa0b:	sub    ecx,eax
6401fa0d:	lea    eax,[ebp-0x30]
6401fa10:	push   eax
6401fa11:	push   DWORD PTR [ebp+0x14]
6401fa14:	push   ecx
6401fa15:	push   edi
6401fa16:	call   0x6401fd49
6401fa1b:	add    esp,0x10
6401fa1e:	cmp    eax,ebx
6401fa20:	je     0x6401fa26
6401fa22:	mov    BYTE PTR [esi],bl
6401fa24:	jmp    0x6401fa7e
6401fa26:	mov    eax,DWORD PTR [ebp-0x2c]
6401fa29:	dec    eax
6401fa2a:	cmp    DWORD PTR [ebp-0x20],eax
6401fa2d:	setl   cl
6401fa30:	cmp    eax,0xfffffffc
6401fa33:	jl     0x6401fa62
6401fa35:	cmp    eax,DWORD PTR [ebp+0x14]
6401fa38:	jge    0x6401fa62
6401fa3a:	cmp    cl,bl
6401fa3c:	je     0x6401fa48
6401fa3e:	mov    al,BYTE PTR [edi]
6401fa40:	inc    edi
6401fa41:	test   al,al
6401fa43:	jne    0x6401fa3e
6401fa45:	mov    BYTE PTR [edi-0x2],bl
6401fa48:	push   DWORD PTR [ebp+0x1c]
6401fa4b:	lea    eax,[ebp-0x30]
6401fa4e:	push   0x1
6401fa50:	push   DWORD PTR [ebp+0x14]
6401fa53:	mov    ecx,esi
6401fa55:	push   DWORD PTR [ebp+0x10]
6401fa58:	call   0x6401f7e7
6401fa5d:	add    esp,0x10
6401fa60:	jmp    0x6401fa7e
6401fa62:	push   DWORD PTR [ebp+0x1c]
6401fa65:	lea    eax,[ebp-0x30]
6401fa68:	push   0x1
6401fa6a:	push   eax
6401fa6b:	push   DWORD PTR [ebp+0x18]
6401fa6e:	mov    eax,esi
6401fa70:	push   DWORD PTR [ebp+0x14]
6401fa73:	push   DWORD PTR [ebp+0x10]
6401fa76:	call   0x6401f21d
6401fa7b:	add    esp,0x18
6401fa7e:	mov    ecx,DWORD PTR [ebp-0x4]
6401fa81:	pop    edi
6401fa82:	pop    esi
6401fa83:	xor    ecx,ebp
6401fa85:	pop    ebx
6401fa86:	call   0x64012b8c
6401fa8b:	leave  
6401fa8c:	ret    
6401fa8d:	push   ebp
6401fa8e:	mov    ebp,esp
6401fa90:	mov    eax,DWORD PTR [ebp+0x14]
6401fa93:	cmp    eax,0x65
6401fa96:	je     0x6401faf7
6401fa98:	cmp    eax,0x45
6401fa9b:	je     0x6401faf7
6401fa9d:	cmp    eax,0x66
6401faa0:	jne    0x6401fabb
6401faa2:	push   DWORD PTR [ebp+0x20]
6401faa5:	push   DWORD PTR [ebp+0x18]
6401faa8:	push   DWORD PTR [ebp+0x10]
6401faab:	push   DWORD PTR [ebp+0xc]
6401faae:	push   DWORD PTR [ebp+0x8]
6401fab1:	call   0x6401f8dc
6401fab6:	add    esp,0x14
6401fab9:	pop    ebp
6401faba:	ret    
6401fabb:	cmp    eax,0x61
6401fabe:	je     0x6401fade
6401fac0:	cmp    eax,0x41
6401fac3:	je     0x6401fade
6401fac5:	push   DWORD PTR [ebp+0x20]
6401fac8:	push   DWORD PTR [ebp+0x1c]
6401facb:	push   DWORD PTR [ebp+0x18]
6401face:	push   DWORD PTR [ebp+0x10]
6401fad1:	push   DWORD PTR [ebp+0xc]
6401fad4:	push   DWORD PTR [ebp+0x8]
6401fad7:	call   0x6401f995
6401fadc:	jmp    0x6401fb0e
6401fade:	push   DWORD PTR [ebp+0x20]
6401fae1:	push   DWORD PTR [ebp+0x1c]
6401fae4:	push   DWORD PTR [ebp+0x18]
6401fae7:	push   DWORD PTR [ebp+0x10]
6401faea:	push   DWORD PTR [ebp+0xc]
6401faed:	push   DWORD PTR [ebp+0x8]
6401faf0:	call   0x6401f476
6401faf5:	jmp    0x6401fb0e
6401faf7:	push   DWORD PTR [ebp+0x20]
6401fafa:	push   DWORD PTR [ebp+0x1c]
6401fafd:	push   DWORD PTR [ebp+0x18]
6401fb00:	push   DWORD PTR [ebp+0x10]
6401fb03:	push   DWORD PTR [ebp+0xc]
6401fb06:	push   DWORD PTR [ebp+0x8]
6401fb09:	call   0x6401f38a
6401fb0e:	add    esp,0x18
6401fb11:	pop    ebp
6401fb12:	ret    
6401fb13:	push   ebp
6401fb14:	mov    ebp,esp
6401fb16:	push   0x0
6401fb18:	push   DWORD PTR [ebp+0x1c]
6401fb1b:	push   DWORD PTR [ebp+0x18]
6401fb1e:	push   DWORD PTR [ebp+0x14]
6401fb21:	push   DWORD PTR [ebp+0x10]
6401fb24:	push   DWORD PTR [ebp+0xc]
6401fb27:	push   DWORD PTR [ebp+0x8]
6401fb2a:	call   0x6401fa8d
6401fb2f:	add    esp,0x1c
6401fb32:	pop    ebp
6401fb33:	ret    
6401fb34:	push   esi
6401fb35:	push   0x30000
6401fb3a:	push   0x10000
6401fb3f:	xor    esi,esi
6401fb41:	push   esi
6401fb42:	call   0x6402004f
6401fb47:	add    esp,0xc
6401fb4a:	test   eax,eax
6401fb4c:	je     0x6401fb5b
6401fb4e:	push   esi
6401fb4f:	push   esi
6401fb50:	push   esi
6401fb51:	push   esi
6401fb52:	push   esi
6401fb53:	call   0x640125c8
6401fb58:	add    esp,0x14
6401fb5b:	pop    esi
6401fb5c:	ret    
6401fb5d:	push   ebp
6401fb5e:	mov    ebp,esp
6401fb60:	sub    esp,0x18
6401fb63:	fld    QWORD PTR ds:0x64027648
6401fb69:	fstp   QWORD PTR [ebp-0x10]
6401fb6c:	fld    QWORD PTR ds:0x64027640
6401fb72:	fstp   QWORD PTR [ebp-0x18]
6401fb75:	fld    QWORD PTR [ebp-0x18]
6401fb78:	fdiv   QWORD PTR [ebp-0x10]
6401fb7b:	fmul   QWORD PTR [ebp-0x10]
6401fb7e:	fsubr  QWORD PTR [ebp-0x18]
6401fb81:	fstp   QWORD PTR [ebp-0x8]
6401fb84:	fld1   
6401fb86:	fcomp  QWORD PTR [ebp-0x8]
6401fb89:	fnstsw ax
6401fb8b:	test   ah,0x5
6401fb8e:	jp     0x6401fb95
6401fb90:	xor    eax,eax
6401fb92:	inc    eax
6401fb93:	leave  
6401fb94:	ret    
6401fb95:	xor    eax,eax
6401fb97:	leave  
6401fb98:	ret    
6401fb99:	push   0x6402766c
6401fb9e:	call   DWORD PTR ds:0x64025128
6401fba4:	test   eax,eax
6401fba6:	je     0x6401fbbd
6401fba8:	push   0x64027650
6401fbad:	push   eax
6401fbae:	call   DWORD PTR ds:0x64025014
6401fbb4:	test   eax,eax
6401fbb6:	je     0x6401fbbd
6401fbb8:	push   0x0
6401fbba:	call   eax
6401fbbc:	ret    
6401fbbd:	jmp    0x6401fb5d
6401fbc2:	int3   
6401fbc3:	int3   
6401fbc4:	int3   
6401fbc5:	int3   
6401fbc6:	int3   
6401fbc7:	int3   
6401fbc8:	int3   
6401fbc9:	int3   
6401fbca:	int3   
6401fbcb:	int3   
6401fbcc:	int3   
6401fbcd:	int3   
6401fbce:	int3   
6401fbcf:	int3   
6401fbd0:	push   ebp
6401fbd1:	mov    ebp,esp
6401fbd3:	push   edi
6401fbd4:	mov    edi,DWORD PTR [ebp+0x8]
6401fbd7:	xor    eax,eax
6401fbd9:	or     ecx,0xffffffff
6401fbdc:	repnz scas al,BYTE PTR es:[edi]
6401fbde:	add    ecx,0x1
6401fbe1:	neg    ecx
6401fbe3:	sub    edi,0x1
6401fbe6:	mov    al,BYTE PTR [ebp+0xc]
6401fbe9:	std    
6401fbea:	repnz scas al,BYTE PTR es:[edi]
6401fbec:	add    edi,0x1
6401fbef:	cmp    BYTE PTR [edi],al
6401fbf1:	je     0x6401fbf7
6401fbf3:	xor    eax,eax
6401fbf5:	jmp    0x6401fbf9
6401fbf7:	mov    eax,edi
6401fbf9:	cld    
6401fbfa:	pop    edi
6401fbfb:	leave  
6401fbfc:	ret    
6401fbfd:	push   ebp
6401fbfe:	mov    ebp,esp
6401fc00:	sub    esp,0x28
6401fc03:	mov    eax,ds:0x6402d09c
6401fc08:	xor    eax,ebp
6401fc0a:	mov    DWORD PTR [ebp-0x4],eax
6401fc0d:	push   ebx
6401fc0e:	push   esi
6401fc0f:	mov    esi,DWORD PTR [ebp+0x8]
6401fc12:	push   edi
6401fc13:	push   DWORD PTR [ebp+0x10]
6401fc16:	mov    edi,DWORD PTR [ebp+0xc]
6401fc19:	lea    ecx,[ebp-0x24]
6401fc1c:	call   0x64012d2f
6401fc21:	lea    eax,[ebp-0x24]
6401fc24:	push   eax
6401fc25:	xor    ebx,ebx
6401fc27:	push   ebx
6401fc28:	push   ebx
6401fc29:	push   ebx
6401fc2a:	push   ebx
6401fc2b:	push   edi
6401fc2c:	lea    eax,[ebp-0x28]
6401fc2f:	push   eax
6401fc30:	lea    eax,[ebp-0x10]
6401fc33:	push   eax
6401fc34:	call   0x64020b3d
6401fc39:	mov    DWORD PTR [ebp-0x14],eax
6401fc3c:	lea    eax,[ebp-0x10]
6401fc3f:	push   esi
6401fc40:	push   eax
6401fc41:	call   0x640200b9
6401fc46:	add    esp,0x28
6401fc49:	test   BYTE PTR [ebp-0x14],0x3
6401fc4d:	jne    0x6401fc7a
6401fc4f:	cmp    eax,0x1
6401fc52:	jne    0x6401fc65
6401fc54:	cmp    BYTE PTR [ebp-0x18],bl
6401fc57:	je     0x6401fc60
6401fc59:	mov    eax,DWORD PTR [ebp-0x1c]
6401fc5c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fc60:	push   0x3
6401fc62:	pop    eax
6401fc63:	jmp    0x6401fc94
6401fc65:	cmp    eax,0x2
6401fc68:	jne    0x6401fc86
6401fc6a:	cmp    BYTE PTR [ebp-0x18],bl
6401fc6d:	je     0x6401fc76
6401fc6f:	mov    eax,DWORD PTR [ebp-0x1c]
6401fc72:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fc76:	push   0x4
6401fc78:	jmp    0x6401fc62
6401fc7a:	test   BYTE PTR [ebp-0x14],0x1
6401fc7e:	jne    0x6401fc6a
6401fc80:	test   BYTE PTR [ebp-0x14],0x2
6401fc84:	jne    0x6401fc54
6401fc86:	cmp    BYTE PTR [ebp-0x18],bl
6401fc89:	je     0x6401fc92
6401fc8b:	mov    eax,DWORD PTR [ebp-0x1c]
6401fc8e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fc92:	xor    eax,eax
6401fc94:	mov    ecx,DWORD PTR [ebp-0x4]
6401fc97:	pop    edi
6401fc98:	pop    esi
6401fc99:	xor    ecx,ebp
6401fc9b:	pop    ebx
6401fc9c:	call   0x64012b8c
6401fca1:	leave  
6401fca2:	ret    
6401fca3:	push   ebp
6401fca4:	mov    ebp,esp
6401fca6:	sub    esp,0x28
6401fca9:	mov    eax,ds:0x6402d09c
6401fcae:	xor    eax,ebp
6401fcb0:	mov    DWORD PTR [ebp-0x4],eax
6401fcb3:	push   ebx
6401fcb4:	push   esi
6401fcb5:	mov    esi,DWORD PTR [ebp+0x8]
6401fcb8:	push   edi
6401fcb9:	push   DWORD PTR [ebp+0x10]
6401fcbc:	mov    edi,DWORD PTR [ebp+0xc]
6401fcbf:	lea    ecx,[ebp-0x24]
6401fcc2:	call   0x64012d2f
6401fcc7:	lea    eax,[ebp-0x24]
6401fcca:	push   eax
6401fccb:	xor    ebx,ebx
6401fccd:	push   ebx
6401fcce:	push   ebx
6401fccf:	push   ebx
6401fcd0:	push   ebx
6401fcd1:	push   edi
6401fcd2:	lea    eax,[ebp-0x28]
6401fcd5:	push   eax
6401fcd6:	lea    eax,[ebp-0x10]
6401fcd9:	push   eax
6401fcda:	call   0x64020b3d
6401fcdf:	mov    DWORD PTR [ebp-0x14],eax
6401fce2:	lea    eax,[ebp-0x10]
6401fce5:	push   esi
6401fce6:	push   eax
6401fce7:	call   0x640205fb
6401fcec:	add    esp,0x28
6401fcef:	test   BYTE PTR [ebp-0x14],0x3
6401fcf3:	jne    0x6401fd20
6401fcf5:	cmp    eax,0x1
6401fcf8:	jne    0x6401fd0b
6401fcfa:	cmp    BYTE PTR [ebp-0x18],bl
6401fcfd:	je     0x6401fd06
6401fcff:	mov    eax,DWORD PTR [ebp-0x1c]
6401fd02:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fd06:	push   0x3
6401fd08:	pop    eax
6401fd09:	jmp    0x6401fd3a
6401fd0b:	cmp    eax,0x2
6401fd0e:	jne    0x6401fd2c
6401fd10:	cmp    BYTE PTR [ebp-0x18],bl
6401fd13:	je     0x6401fd1c
6401fd15:	mov    eax,DWORD PTR [ebp-0x1c]
6401fd18:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fd1c:	push   0x4
6401fd1e:	jmp    0x6401fd08
6401fd20:	test   BYTE PTR [ebp-0x14],0x1
6401fd24:	jne    0x6401fd10
6401fd26:	test   BYTE PTR [ebp-0x14],0x2
6401fd2a:	jne    0x6401fcfa
6401fd2c:	cmp    BYTE PTR [ebp-0x18],bl
6401fd2f:	je     0x6401fd38
6401fd31:	mov    eax,DWORD PTR [ebp-0x1c]
6401fd34:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fd38:	xor    eax,eax
6401fd3a:	mov    ecx,DWORD PTR [ebp-0x4]
6401fd3d:	pop    edi
6401fd3e:	pop    esi
6401fd3f:	xor    ecx,ebp
6401fd41:	pop    ebx
6401fd42:	call   0x64012b8c
6401fd47:	leave  
6401fd48:	ret    
6401fd49:	push   ebp
6401fd4a:	mov    ebp,esp
6401fd4c:	mov    ecx,DWORD PTR [ebp+0x14]
6401fd4f:	push   ebx
6401fd50:	push   esi
6401fd51:	mov    esi,DWORD PTR [ebp+0x8]
6401fd54:	xor    ebx,ebx
6401fd56:	cmp    esi,ebx
6401fd58:	push   edi
6401fd59:	mov    edi,DWORD PTR [ecx+0xc]
6401fd5c:	jne    0x6401fd7c
6401fd5e:	call   0x64014950
6401fd63:	push   0x16
6401fd65:	pop    esi
6401fd66:	mov    DWORD PTR [eax],esi
6401fd68:	push   ebx
6401fd69:	push   ebx
6401fd6a:	push   ebx
6401fd6b:	push   ebx
6401fd6c:	push   ebx
6401fd6d:	call   0x640126c4
6401fd72:	add    esp,0x14
6401fd75:	mov    eax,esi
6401fd77:	jmp    0x6401fe01
6401fd7c:	cmp    DWORD PTR [ebp+0xc],ebx
6401fd7f:	jbe    0x6401fd5e
6401fd81:	mov    edx,DWORD PTR [ebp+0x10]
6401fd84:	cmp    edx,ebx
6401fd86:	mov    BYTE PTR [esi],bl
6401fd88:	jle    0x6401fd8e
6401fd8a:	mov    eax,edx
6401fd8c:	jmp    0x6401fd90
6401fd8e:	xor    eax,eax
6401fd90:	inc    eax
6401fd91:	cmp    DWORD PTR [ebp+0xc],eax
6401fd94:	ja     0x6401fda4
6401fd96:	call   0x64014950
6401fd9b:	push   0x22
6401fd9d:	pop    ecx
6401fd9e:	mov    DWORD PTR [eax],ecx
6401fda0:	mov    esi,ecx
6401fda2:	jmp    0x6401fd68
6401fda4:	cmp    edx,ebx
6401fda6:	mov    BYTE PTR [esi],0x30
6401fda9:	lea    eax,[esi+0x1]
6401fdac:	jle    0x6401fdc8
6401fdae:	mov    cl,BYTE PTR [edi]
6401fdb0:	cmp    cl,bl
6401fdb2:	je     0x6401fdba
6401fdb4:	movsx  ecx,cl
6401fdb7:	inc    edi
6401fdb8:	jmp    0x6401fdbd
6401fdba:	push   0x30
6401fdbc:	pop    ecx
6401fdbd:	mov    BYTE PTR [eax],cl
6401fdbf:	inc    eax
6401fdc0:	dec    edx
6401fdc1:	cmp    edx,ebx
6401fdc3:	jg     0x6401fdae
6401fdc5:	mov    ecx,DWORD PTR [ebp+0x14]
6401fdc8:	cmp    edx,ebx
6401fdca:	mov    BYTE PTR [eax],bl
6401fdcc:	jl     0x6401fde0
6401fdce:	cmp    BYTE PTR [edi],0x35
6401fdd1:	jl     0x6401fde0
6401fdd3:	jmp    0x6401fdd8
6401fdd5:	mov    BYTE PTR [eax],0x30
6401fdd8:	dec    eax
6401fdd9:	cmp    BYTE PTR [eax],0x39
6401fddc:	je     0x6401fdd5
6401fdde:	inc    BYTE PTR [eax]
6401fde0:	cmp    BYTE PTR [esi],0x31
6401fde3:	jne    0x6401fdea
6401fde5:	inc    DWORD PTR [ecx+0x4]
6401fde8:	jmp    0x6401fdff
6401fdea:	lea    edi,[esi+0x1]
6401fded:	push   edi
6401fdee:	call   0x64014350
6401fdf3:	inc    eax
6401fdf4:	push   eax
6401fdf5:	push   edi
6401fdf6:	push   esi
6401fdf7:	call   0x64013bd0
6401fdfc:	add    esp,0x10
6401fdff:	xor    eax,eax
6401fe01:	pop    edi
6401fe02:	pop    esi
6401fe03:	pop    ebx
6401fe04:	pop    ebp
6401fe05:	ret    
6401fe06:	push   ebp
6401fe07:	mov    ebp,esp
6401fe09:	push   ecx
6401fe0a:	mov    edx,DWORD PTR [ebp+0xc]
6401fe0d:	movzx  eax,WORD PTR [edx+0x6]
6401fe11:	push   ebx
6401fe12:	mov    ecx,eax
6401fe14:	push   esi
6401fe15:	push   edi
6401fe16:	shr    ecx,0x4
6401fe19:	and    eax,0x8000
6401fe1e:	mov    edi,0x7ff
6401fe23:	and    ecx,edi
6401fe25:	mov    DWORD PTR [ebp+0xc],eax
6401fe28:	mov    eax,DWORD PTR [edx+0x4]
6401fe2b:	mov    edx,DWORD PTR [edx]
6401fe2d:	movzx  ebx,cx
6401fe30:	mov    esi,0x80000000
6401fe35:	and    eax,0xfffff
6401fe3a:	test   ebx,ebx
6401fe3c:	mov    DWORD PTR [ebp-0x4],esi
6401fe3f:	je     0x6401fe54
6401fe41:	cmp    ebx,edi
6401fe43:	je     0x6401fe4d
6401fe45:	add    ecx,0x3c00
6401fe4b:	jmp    0x6401fe75
6401fe4d:	mov    edi,0x7fff
6401fe52:	jmp    0x6401fe78
6401fe54:	xor    ebx,ebx
6401fe56:	cmp    eax,ebx
6401fe58:	jne    0x6401fe6c
6401fe5a:	cmp    edx,ebx
6401fe5c:	jne    0x6401fe6c
6401fe5e:	mov    eax,DWORD PTR [ebp+0x8]
6401fe61:	mov    cx,WORD PTR [ebp+0xc]
6401fe65:	mov    DWORD PTR [eax+0x4],ebx
6401fe68:	mov    DWORD PTR [eax],ebx
6401fe6a:	jmp    0x6401feb8
6401fe6c:	add    ecx,0x3c01
6401fe72:	mov    DWORD PTR [ebp-0x4],ebx
6401fe75:	movzx  edi,cx
6401fe78:	mov    ecx,edx
6401fe7a:	shr    ecx,0x15
6401fe7d:	shl    eax,0xb
6401fe80:	or     ecx,eax
6401fe82:	or     ecx,DWORD PTR [ebp-0x4]
6401fe85:	mov    eax,DWORD PTR [ebp+0x8]
6401fe88:	shl    edx,0xb
6401fe8b:	test   esi,ecx
6401fe8d:	mov    DWORD PTR [eax+0x4],ecx
6401fe90:	mov    DWORD PTR [eax],edx
6401fe92:	jne    0x6401feb3
6401fe94:	mov    ecx,DWORD PTR [eax]
6401fe96:	mov    edx,DWORD PTR [eax+0x4]
6401fe99:	mov    ebx,ecx
6401fe9b:	add    edx,edx
6401fe9d:	shr    ebx,0x1f
6401fea0:	or     edx,ebx
6401fea2:	add    ecx,ecx
6401fea4:	add    edi,0xffff
6401feaa:	test   esi,edx
6401feac:	mov    DWORD PTR [eax+0x4],edx
6401feaf:	mov    DWORD PTR [eax],ecx
6401feb1:	je     0x6401fe94
6401feb3:	mov    ecx,DWORD PTR [ebp+0xc]
6401feb6:	or     ecx,edi
6401feb8:	pop    edi
6401feb9:	pop    esi
6401feba:	mov    WORD PTR [eax+0x8],cx
6401febe:	pop    ebx
6401febf:	leave  
6401fec0:	ret    
6401fec1:	push   ebp
6401fec2:	mov    ebp,esp
6401fec4:	sub    esp,0x30
6401fec7:	mov    eax,ds:0x6402d09c
6401fecc:	xor    eax,ebp
6401fece:	mov    DWORD PTR [ebp-0x4],eax
6401fed1:	mov    eax,DWORD PTR [ebp+0x14]
6401fed4:	push   ebx
6401fed5:	mov    ebx,DWORD PTR [ebp+0x10]
6401fed8:	push   esi
6401fed9:	mov    DWORD PTR [ebp-0x30],eax
6401fedc:	push   edi
6401fedd:	lea    eax,[ebp+0x8]
6401fee0:	push   eax
6401fee1:	lea    eax,[ebp-0x10]
6401fee4:	push   eax
6401fee5:	call   0x6401fe06
6401feea:	pop    ecx
6401feeb:	pop    ecx
6401feec:	lea    eax,[ebp-0x2c]
6401feef:	push   eax
6401fef0:	push   0x0
6401fef2:	push   0x11
6401fef4:	sub    esp,0xc
6401fef7:	lea    esi,[ebp-0x10]
6401fefa:	mov    edi,esp
6401fefc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401fefe:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6401ff00:	call   0x640211fd
6401ff05:	mov    esi,DWORD PTR [ebp-0x30]
6401ff08:	mov    DWORD PTR [ebx+0x8],eax
6401ff0b:	movsx  eax,BYTE PTR [ebp-0x2a]
6401ff0f:	mov    DWORD PTR [ebx],eax
6401ff11:	movsx  eax,WORD PTR [ebp-0x2c]
6401ff15:	mov    DWORD PTR [ebx+0x4],eax
6401ff18:	lea    eax,[ebp-0x28]
6401ff1b:	push   eax
6401ff1c:	push   DWORD PTR [ebp+0x18]
6401ff1f:	push   esi
6401ff20:	call   0x64014548
6401ff25:	add    esp,0x24
6401ff28:	test   eax,eax
6401ff2a:	je     0x6401ff3b
6401ff2c:	xor    eax,eax
6401ff2e:	push   eax
6401ff2f:	push   eax
6401ff30:	push   eax
6401ff31:	push   eax
6401ff32:	push   eax
6401ff33:	call   0x640125c8
6401ff38:	add    esp,0x14
6401ff3b:	mov    ecx,DWORD PTR [ebp-0x4]
6401ff3e:	pop    edi
6401ff3f:	mov    DWORD PTR [ebx+0xc],esi
6401ff42:	pop    esi
6401ff43:	mov    eax,ebx
6401ff45:	xor    ecx,ebp
6401ff47:	pop    ebx
6401ff48:	call   0x64012b8c
6401ff4d:	leave  
6401ff4e:	ret    
6401ff4f:	int3   
6401ff50:	push   edi
6401ff51:	push   esi
6401ff52:	push   ebp
6401ff53:	xor    edi,edi
6401ff55:	xor    ebp,ebp
6401ff57:	mov    eax,DWORD PTR [esp+0x14]
6401ff5b:	or     eax,eax
6401ff5d:	jge    0x6401ff74
6401ff5f:	inc    edi
6401ff60:	inc    ebp
6401ff61:	mov    edx,DWORD PTR [esp+0x10]
6401ff65:	neg    eax
6401ff67:	neg    edx
6401ff69:	sbb    eax,0x0
6401ff6c:	mov    DWORD PTR [esp+0x14],eax
6401ff70:	mov    DWORD PTR [esp+0x10],edx
6401ff74:	mov    eax,DWORD PTR [esp+0x1c]
6401ff78:	or     eax,eax
6401ff7a:	jge    0x6401ff90
6401ff7c:	inc    edi
6401ff7d:	mov    edx,DWORD PTR [esp+0x18]
6401ff81:	neg    eax
6401ff83:	neg    edx
6401ff85:	sbb    eax,0x0
6401ff88:	mov    DWORD PTR [esp+0x1c],eax
6401ff8c:	mov    DWORD PTR [esp+0x18],edx
6401ff90:	or     eax,eax
6401ff92:	jne    0x6401ffbc
6401ff94:	mov    ecx,DWORD PTR [esp+0x18]
6401ff98:	mov    eax,DWORD PTR [esp+0x14]
6401ff9c:	xor    edx,edx
6401ff9e:	div    ecx
6401ffa0:	mov    ebx,eax
6401ffa2:	mov    eax,DWORD PTR [esp+0x10]
6401ffa6:	div    ecx
6401ffa8:	mov    esi,eax
6401ffaa:	mov    eax,ebx
6401ffac:	mul    DWORD PTR [esp+0x18]
6401ffb0:	mov    ecx,eax
6401ffb2:	mov    eax,esi
6401ffb4:	mul    DWORD PTR [esp+0x18]
6401ffb8:	add    edx,ecx
6401ffba:	jmp    0x64020003
6401ffbc:	mov    ebx,eax
6401ffbe:	mov    ecx,DWORD PTR [esp+0x18]
6401ffc2:	mov    edx,DWORD PTR [esp+0x14]
6401ffc6:	mov    eax,DWORD PTR [esp+0x10]
6401ffca:	shr    ebx,1
6401ffcc:	rcr    ecx,1
6401ffce:	shr    edx,1
6401ffd0:	rcr    eax,1
6401ffd2:	or     ebx,ebx
6401ffd4:	jne    0x6401ffca
6401ffd6:	div    ecx
6401ffd8:	mov    esi,eax
6401ffda:	mul    DWORD PTR [esp+0x1c]
6401ffde:	mov    ecx,eax
6401ffe0:	mov    eax,DWORD PTR [esp+0x18]
6401ffe4:	mul    esi
6401ffe6:	add    edx,ecx
6401ffe8:	jb     0x6401fff8
6401ffea:	cmp    edx,DWORD PTR [esp+0x14]
6401ffee:	ja     0x6401fff8
6401fff0:	jb     0x64020001
6401fff2:	cmp    eax,DWORD PTR [esp+0x10]
6401fff6:	jbe    0x64020001
6401fff8:	dec    esi
6401fff9:	sub    eax,DWORD PTR [esp+0x18]
6401fffd:	sbb    edx,DWORD PTR [esp+0x1c]
64020001:	xor    ebx,ebx
64020003:	sub    eax,DWORD PTR [esp+0x10]
64020007:	sbb    edx,DWORD PTR [esp+0x14]
6402000b:	dec    ebp
6402000c:	jns    0x64020015
6402000e:	neg    edx
64020010:	neg    eax
64020012:	sbb    edx,0x0
64020015:	mov    ecx,edx
64020017:	mov    edx,ebx
64020019:	mov    ebx,ecx
6402001b:	mov    ecx,eax
6402001d:	mov    eax,esi
6402001f:	dec    edi
64020020:	jne    0x64020029
64020022:	neg    edx
64020024:	neg    eax
64020026:	sbb    edx,0x0
64020029:	pop    ebp
6402002a:	pop    esi
6402002b:	pop    edi
6402002c:	ret    0x10
6402002f:	int3   
64020030:	cmp    cl,0x40
64020033:	jae    0x6402004a
64020035:	cmp    cl,0x20
64020038:	jae    0x64020040
6402003a:	shrd   eax,edx,cl
6402003d:	shr    edx,cl
6402003f:	ret    
64020040:	mov    eax,edx
64020042:	xor    edx,edx
64020044:	and    cl,0x1f
64020047:	shr    eax,cl
64020049:	ret    
6402004a:	xor    eax,eax
6402004c:	xor    edx,edx
6402004e:	ret    
6402004f:	push   ebp
64020050:	mov    ebp,esp
64020052:	mov    eax,DWORD PTR [ebp+0x10]
64020055:	mov    ecx,DWORD PTR [ebp+0xc]
64020058:	and    eax,0xfff7ffff
6402005d:	and    ecx,eax
6402005f:	test   ecx,0xfcf0fce0
64020065:	push   esi
64020066:	je     0x64020099
64020068:	push   edi
64020069:	mov    edi,DWORD PTR [ebp+0x8]
6402006c:	xor    esi,esi
6402006e:	cmp    edi,esi
64020070:	je     0x6402007d
64020072:	push   esi
64020073:	push   esi
64020074:	call   0x64021bf1
64020079:	pop    ecx
6402007a:	pop    ecx
6402007b:	mov    DWORD PTR [edi],eax
6402007d:	call   0x64014950
64020082:	push   0x16
64020084:	pop    edi
64020085:	push   esi
64020086:	push   esi
64020087:	push   esi
64020088:	push   esi
64020089:	push   esi
6402008a:	mov    DWORD PTR [eax],edi
6402008c:	call   0x640126c4
64020091:	add    esp,0x14
64020094:	mov    eax,edi
64020096:	pop    edi
64020097:	jmp    0x640200b6
64020099:	mov    esi,DWORD PTR [ebp+0x8]
6402009c:	test   esi,esi
6402009e:	push   eax
6402009f:	push   DWORD PTR [ebp+0xc]
640200a2:	je     0x640200ad
640200a4:	call   0x64021bf1
640200a9:	mov    DWORD PTR [esi],eax
640200ab:	jmp    0x640200b2
640200ad:	call   0x64021bf1
640200b2:	pop    ecx
640200b3:	pop    ecx
640200b4:	xor    eax,eax
640200b6:	pop    esi
640200b7:	pop    ebp
640200b8:	ret    
640200b9:	push   ebp
640200ba:	mov    ebp,esp
640200bc:	sub    esp,0x2c
640200bf:	mov    eax,DWORD PTR [ebp+0x8]
640200c2:	movzx  ecx,WORD PTR [eax+0xa]
640200c6:	push   ebx
640200c7:	mov    ebx,ecx
640200c9:	and    ecx,0x8000
640200cf:	mov    DWORD PTR [ebp-0x14],ecx
640200d2:	mov    ecx,DWORD PTR [eax+0x6]
640200d5:	mov    DWORD PTR [ebp-0x20],ecx
640200d8:	mov    ecx,DWORD PTR [eax+0x2]
640200db:	movzx  eax,WORD PTR [eax]
640200de:	and    ebx,0x7fff
640200e4:	sub    ebx,0x3fff
640200ea:	shl    eax,0x10
640200ed:	cmp    ebx,0xffffc001
640200f3:	push   edi
640200f4:	mov    DWORD PTR [ebp-0x1c],ecx
640200f7:	mov    DWORD PTR [ebp-0x18],eax
640200fa:	jne    0x64020123
640200fc:	xor    ebx,ebx
640200fe:	xor    eax,eax
64020100:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
64020104:	jne    0x64020113
64020106:	inc    eax
64020107:	cmp    eax,0x3
6402010a:	jl     0x64020100
6402010c:	xor    eax,eax
6402010e:	jmp    0x640205b8
64020113:	xor    eax,eax
64020115:	lea    edi,[ebp-0x20]
64020118:	stos   DWORD PTR es:[edi],eax
64020119:	stos   DWORD PTR es:[edi],eax
6402011a:	push   0x2
6402011c:	stos   DWORD PTR es:[edi],eax
6402011d:	pop    eax
6402011e:	jmp    0x640205b8
64020123:	and    DWORD PTR [ebp+0x8],0x0
64020127:	push   esi
64020128:	lea    esi,[ebp-0x20]
6402012b:	lea    edi,[ebp-0x2c]
6402012e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402012f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020131:	mov    esi,DWORD PTR ds:0x6402e078
64020137:	dec    esi
64020138:	lea    ecx,[esi+0x1]
6402013b:	mov    eax,ecx
6402013d:	cdq    
6402013e:	and    edx,0x1f
64020141:	add    eax,edx
64020143:	sar    eax,0x5
64020146:	mov    edx,ecx
64020148:	and    edx,0x8000001f
6402014e:	mov    DWORD PTR [ebp-0x10],ebx
64020151:	mov    DWORD PTR [ebp-0xc],eax
64020154:	jns    0x6402015b
64020156:	dec    edx
64020157:	or     edx,0xffffffe0
6402015a:	inc    edx
6402015b:	lea    edi,[ebp+eax*4-0x20]
6402015f:	push   0x1f
64020161:	xor    eax,eax
64020163:	pop    ecx
64020164:	sub    ecx,edx
64020166:	inc    eax
64020167:	shl    eax,cl
64020169:	mov    DWORD PTR [ebp-0x8],ecx
6402016c:	test   DWORD PTR [edi],eax
6402016e:	je     0x64020201
64020174:	mov    eax,DWORD PTR [ebp-0xc]
64020177:	or     edx,0xffffffff
6402017a:	shl    edx,cl
6402017c:	not    edx
6402017e:	test   DWORD PTR [ebp+eax*4-0x20],edx
64020182:	jmp    0x64020189
64020184:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64020189:	jne    0x64020193
6402018b:	inc    eax
6402018c:	cmp    eax,0x3
6402018f:	jl     0x64020184
64020191:	jmp    0x64020201
64020193:	mov    eax,esi
64020195:	cdq    
64020196:	push   0x1f
64020198:	pop    ecx
64020199:	and    edx,ecx
6402019b:	add    eax,edx
6402019d:	sar    eax,0x5
640201a0:	and    esi,0x8000001f
640201a6:	jns    0x640201ad
640201a8:	dec    esi
640201a9:	or     esi,0xffffffe0
640201ac:	inc    esi
640201ad:	and    DWORD PTR [ebp-0x4],0x0
640201b1:	sub    ecx,esi
640201b3:	xor    edx,edx
640201b5:	inc    edx
640201b6:	shl    edx,cl
640201b8:	lea    ecx,[ebp+eax*4-0x20]
640201bc:	mov    esi,DWORD PTR [ecx]
640201be:	add    esi,edx
640201c0:	mov    DWORD PTR [ebp+0x8],esi
640201c3:	mov    esi,DWORD PTR [ecx]
640201c5:	cmp    DWORD PTR [ebp+0x8],esi
640201c8:	jb     0x640201ec
640201ca:	cmp    DWORD PTR [ebp+0x8],edx
640201cd:	jmp    0x640201ea
640201cf:	test   ecx,ecx
640201d1:	je     0x640201fe
640201d3:	and    DWORD PTR [ebp-0x4],0x0
640201d7:	lea    ecx,[ebp+eax*4-0x20]
640201db:	mov    edx,DWORD PTR [ecx]
640201dd:	lea    esi,[edx+0x1]
640201e0:	cmp    esi,edx
640201e2:	mov    DWORD PTR [ebp+0x8],esi
640201e5:	jb     0x640201ec
640201e7:	cmp    esi,0x1
640201ea:	jae    0x640201f3
640201ec:	mov    DWORD PTR [ebp-0x4],0x1
640201f3:	dec    eax
640201f4:	mov    edx,DWORD PTR [ebp+0x8]
640201f7:	mov    DWORD PTR [ecx],edx
640201f9:	mov    ecx,DWORD PTR [ebp-0x4]
640201fc:	jns    0x640201cf
640201fe:	mov    DWORD PTR [ebp+0x8],ecx
64020201:	mov    ecx,DWORD PTR [ebp-0x8]
64020204:	or     eax,0xffffffff
64020207:	shl    eax,cl
64020209:	and    DWORD PTR [edi],eax
6402020b:	mov    eax,DWORD PTR [ebp-0xc]
6402020e:	inc    eax
6402020f:	cmp    eax,0x3
64020212:	jge    0x64020221
64020214:	push   0x3
64020216:	pop    ecx
64020217:	lea    edi,[ebp+eax*4-0x20]
6402021b:	sub    ecx,eax
6402021d:	xor    eax,eax
6402021f:	rep stos DWORD PTR es:[edi],eax
64020221:	cmp    DWORD PTR [ebp+0x8],0x0
64020225:	je     0x64020228
64020227:	inc    ebx
64020228:	mov    eax,ds:0x6402e074
6402022d:	mov    ecx,eax
6402022f:	sub    ecx,DWORD PTR ds:0x6402e078
64020235:	cmp    ebx,ecx
64020237:	jge    0x64020246
64020239:	xor    eax,eax
6402023b:	lea    edi,[ebp-0x20]
6402023e:	stos   DWORD PTR es:[edi],eax
6402023f:	stos   DWORD PTR es:[edi],eax
64020240:	stos   DWORD PTR es:[edi],eax
64020241:	jmp    0x64020453
64020246:	cmp    ebx,eax
64020248:	jg     0x6402045d
6402024e:	sub    eax,DWORD PTR [ebp-0x10]
64020251:	lea    esi,[ebp-0x2c]
64020254:	mov    ecx,eax
64020256:	lea    edi,[ebp-0x20]
64020259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402025a:	cdq    
6402025b:	and    edx,0x1f
6402025e:	add    eax,edx
64020260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020261:	mov    edx,ecx
64020263:	sar    eax,0x5
64020266:	and    edx,0x8000001f
6402026c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402026d:	jns    0x64020274
6402026f:	dec    edx
64020270:	or     edx,0xffffffe0
64020273:	inc    edx
64020274:	and    DWORD PTR [ebp-0xc],0x0
64020278:	and    DWORD PTR [ebp+0x8],0x0
6402027c:	or     edi,0xffffffff
6402027f:	mov    ecx,edx
64020281:	shl    edi,cl
64020283:	mov    DWORD PTR [ebp-0x4],0x20
6402028a:	sub    DWORD PTR [ebp-0x4],edx
6402028d:	not    edi
6402028f:	mov    ebx,DWORD PTR [ebp+0x8]
64020292:	lea    ebx,[ebp+ebx*4-0x20]
64020296:	mov    esi,DWORD PTR [ebx]
64020298:	mov    ecx,esi
6402029a:	and    ecx,edi
6402029c:	mov    DWORD PTR [ebp-0x10],ecx
6402029f:	mov    ecx,edx
640202a1:	shr    esi,cl
640202a3:	mov    ecx,DWORD PTR [ebp-0x4]
640202a6:	or     esi,DWORD PTR [ebp-0xc]
640202a9:	mov    DWORD PTR [ebx],esi
640202ab:	mov    esi,DWORD PTR [ebp-0x10]
640202ae:	shl    esi,cl
640202b0:	inc    DWORD PTR [ebp+0x8]
640202b3:	cmp    DWORD PTR [ebp+0x8],0x3
640202b7:	mov    DWORD PTR [ebp-0xc],esi
640202ba:	jl     0x6402028f
640202bc:	mov    esi,eax
640202be:	push   0x2
640202c0:	shl    esi,0x2
640202c3:	lea    ecx,[ebp-0x18]
640202c6:	pop    edx
640202c7:	sub    ecx,esi
640202c9:	cmp    edx,eax
640202cb:	jl     0x640202d5
640202cd:	mov    esi,DWORD PTR [ecx]
640202cf:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640202d3:	jmp    0x640202da
640202d5:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640202da:	dec    edx
640202db:	sub    ecx,0x4
640202de:	test   edx,edx
640202e0:	jge    0x640202c9
640202e2:	mov    esi,DWORD PTR ds:0x6402e078
640202e8:	dec    esi
640202e9:	lea    ecx,[esi+0x1]
640202ec:	mov    eax,ecx
640202ee:	cdq    
640202ef:	and    edx,0x1f
640202f2:	add    eax,edx
640202f4:	sar    eax,0x5
640202f7:	mov    edx,ecx
640202f9:	and    edx,0x8000001f
640202ff:	mov    DWORD PTR [ebp-0xc],eax
64020302:	jns    0x64020309
64020304:	dec    edx
64020305:	or     edx,0xffffffe0
64020308:	inc    edx
64020309:	push   0x1f
6402030b:	pop    ecx
6402030c:	sub    ecx,edx
6402030e:	xor    edx,edx
64020310:	inc    edx
64020311:	shl    edx,cl
64020313:	lea    ebx,[ebp+eax*4-0x20]
64020317:	mov    DWORD PTR [ebp-0x10],ecx
6402031a:	test   DWORD PTR [ebx],edx
6402031c:	je     0x640203a4
64020322:	or     edx,0xffffffff
64020325:	shl    edx,cl
64020327:	not    edx
64020329:	test   DWORD PTR [ebp+eax*4-0x20],edx
6402032d:	jmp    0x64020334
6402032f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64020334:	jne    0x6402033e
64020336:	inc    eax
64020337:	cmp    eax,0x3
6402033a:	jl     0x6402032f
6402033c:	jmp    0x640203a4
6402033e:	mov    eax,esi
64020340:	cdq    
64020341:	push   0x1f
64020343:	pop    ecx
64020344:	and    edx,ecx
64020346:	add    eax,edx
64020348:	sar    eax,0x5
6402034b:	and    esi,0x8000001f
64020351:	jns    0x64020358
64020353:	dec    esi
64020354:	or     esi,0xffffffe0
64020357:	inc    esi
64020358:	and    DWORD PTR [ebp+0x8],0x0
6402035c:	xor    edx,edx
6402035e:	sub    ecx,esi
64020360:	inc    edx
64020361:	shl    edx,cl
64020363:	lea    ecx,[ebp+eax*4-0x20]
64020367:	mov    esi,DWORD PTR [ecx]
64020369:	lea    edi,[esi+edx*1]
6402036c:	cmp    edi,esi
6402036e:	jb     0x64020374
64020370:	cmp    edi,edx
64020372:	jae    0x6402037b
64020374:	mov    DWORD PTR [ebp+0x8],0x1
6402037b:	mov    DWORD PTR [ecx],edi
6402037d:	mov    ecx,DWORD PTR [ebp+0x8]
64020380:	jmp    0x640203a1
64020382:	test   ecx,ecx
64020384:	je     0x640203a4
64020386:	lea    ecx,[ebp+eax*4-0x20]
6402038a:	mov    edx,DWORD PTR [ecx]
6402038c:	lea    esi,[edx+0x1]
6402038f:	xor    edi,edi
64020391:	cmp    esi,edx
64020393:	jb     0x6402039a
64020395:	cmp    esi,0x1
64020398:	jae    0x6402039d
6402039a:	xor    edi,edi
6402039c:	inc    edi
6402039d:	mov    DWORD PTR [ecx],esi
6402039f:	mov    ecx,edi
640203a1:	dec    eax
640203a2:	jns    0x64020382
640203a4:	mov    ecx,DWORD PTR [ebp-0x10]
640203a7:	or     eax,0xffffffff
640203aa:	shl    eax,cl
640203ac:	and    DWORD PTR [ebx],eax
640203ae:	mov    eax,DWORD PTR [ebp-0xc]
640203b1:	inc    eax
640203b2:	cmp    eax,0x3
640203b5:	jge    0x640203c4
640203b7:	push   0x3
640203b9:	pop    ecx
640203ba:	lea    edi,[ebp+eax*4-0x20]
640203be:	sub    ecx,eax
640203c0:	xor    eax,eax
640203c2:	rep stos DWORD PTR es:[edi],eax
640203c4:	mov    ecx,DWORD PTR ds:0x6402e07c
640203ca:	inc    ecx
640203cb:	mov    eax,ecx
640203cd:	cdq    
640203ce:	and    edx,0x1f
640203d1:	add    eax,edx
640203d3:	mov    edx,ecx
640203d5:	sar    eax,0x5
640203d8:	and    edx,0x8000001f
640203de:	jns    0x640203e5
640203e0:	dec    edx
640203e1:	or     edx,0xffffffe0
640203e4:	inc    edx
640203e5:	and    DWORD PTR [ebp-0xc],0x0
640203e9:	and    DWORD PTR [ebp+0x8],0x0
640203ed:	or     edi,0xffffffff
640203f0:	mov    ecx,edx
640203f2:	shl    edi,cl
640203f4:	mov    DWORD PTR [ebp-0x4],0x20
640203fb:	sub    DWORD PTR [ebp-0x4],edx
640203fe:	not    edi
64020400:	mov    ebx,DWORD PTR [ebp+0x8]
64020403:	lea    ebx,[ebp+ebx*4-0x20]
64020407:	mov    esi,DWORD PTR [ebx]
64020409:	mov    ecx,esi
6402040b:	and    ecx,edi
6402040d:	mov    DWORD PTR [ebp-0x10],ecx
64020410:	mov    ecx,edx
64020412:	shr    esi,cl
64020414:	mov    ecx,DWORD PTR [ebp-0x4]
64020417:	or     esi,DWORD PTR [ebp-0xc]
6402041a:	mov    DWORD PTR [ebx],esi
6402041c:	mov    esi,DWORD PTR [ebp-0x10]
6402041f:	shl    esi,cl
64020421:	inc    DWORD PTR [ebp+0x8]
64020424:	cmp    DWORD PTR [ebp+0x8],0x3
64020428:	mov    DWORD PTR [ebp-0xc],esi
6402042b:	jl     0x64020400
6402042d:	mov    esi,eax
6402042f:	push   0x2
64020431:	shl    esi,0x2
64020434:	lea    ecx,[ebp-0x18]
64020437:	pop    edx
64020438:	sub    ecx,esi
6402043a:	cmp    edx,eax
6402043c:	jl     0x64020446
6402043e:	mov    esi,DWORD PTR [ecx]
64020440:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020444:	jmp    0x6402044b
64020446:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402044b:	dec    edx
6402044c:	sub    ecx,0x4
6402044f:	test   edx,edx
64020451:	jge    0x6402043a
64020453:	push   0x2
64020455:	xor    ebx,ebx
64020457:	pop    eax
64020458:	jmp    0x640205b7
6402045d:	cmp    ebx,DWORD PTR ds:0x6402e070
64020463:	mov    ecx,DWORD PTR ds:0x6402e07c
64020469:	jl     0x6402051c
6402046f:	xor    eax,eax
64020471:	lea    edi,[ebp-0x20]
64020474:	stos   DWORD PTR es:[edi],eax
64020475:	stos   DWORD PTR es:[edi],eax
64020476:	stos   DWORD PTR es:[edi],eax
64020477:	or     DWORD PTR [ebp-0x20],0x80000000
6402047e:	mov    eax,ecx
64020480:	cdq    
64020481:	and    edx,0x1f
64020484:	add    eax,edx
64020486:	mov    edx,ecx
64020488:	sar    eax,0x5
6402048b:	and    edx,0x8000001f
64020491:	jns    0x64020498
64020493:	dec    edx
64020494:	or     edx,0xffffffe0
64020497:	inc    edx
64020498:	and    DWORD PTR [ebp-0xc],0x0
6402049c:	and    DWORD PTR [ebp+0x8],0x0
640204a0:	or     edi,0xffffffff
640204a3:	mov    ecx,edx
640204a5:	shl    edi,cl
640204a7:	mov    DWORD PTR [ebp-0x4],0x20
640204ae:	sub    DWORD PTR [ebp-0x4],edx
640204b1:	not    edi
640204b3:	mov    ebx,DWORD PTR [ebp+0x8]
640204b6:	lea    ebx,[ebp+ebx*4-0x20]
640204ba:	mov    esi,DWORD PTR [ebx]
640204bc:	mov    ecx,esi
640204be:	and    ecx,edi
640204c0:	mov    DWORD PTR [ebp-0x10],ecx
640204c3:	mov    ecx,edx
640204c5:	shr    esi,cl
640204c7:	mov    ecx,DWORD PTR [ebp-0x4]
640204ca:	or     esi,DWORD PTR [ebp-0xc]
640204cd:	mov    DWORD PTR [ebx],esi
640204cf:	mov    esi,DWORD PTR [ebp-0x10]
640204d2:	shl    esi,cl
640204d4:	inc    DWORD PTR [ebp+0x8]
640204d7:	cmp    DWORD PTR [ebp+0x8],0x3
640204db:	mov    DWORD PTR [ebp-0xc],esi
640204de:	jl     0x640204b3
640204e0:	mov    esi,eax
640204e2:	push   0x2
640204e4:	shl    esi,0x2
640204e7:	lea    ecx,[ebp-0x18]
640204ea:	pop    edx
640204eb:	sub    ecx,esi
640204ed:	cmp    edx,eax
640204ef:	jl     0x640204f9
640204f1:	mov    esi,DWORD PTR [ecx]
640204f3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640204f7:	jmp    0x640204fe
640204f9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640204fe:	dec    edx
640204ff:	sub    ecx,0x4
64020502:	test   edx,edx
64020504:	jge    0x640204ed
64020506:	mov    eax,ds:0x6402e070
6402050b:	mov    ecx,DWORD PTR ds:0x6402e084
64020511:	lea    ebx,[ecx+eax*1]
64020514:	xor    eax,eax
64020516:	inc    eax
64020517:	jmp    0x640205b7
6402051c:	mov    eax,ds:0x6402e084
64020521:	and    DWORD PTR [ebp-0x20],0x7fffffff
64020528:	add    ebx,eax
6402052a:	mov    eax,ecx
6402052c:	cdq    
6402052d:	and    edx,0x1f
64020530:	add    eax,edx
64020532:	mov    edx,ecx
64020534:	sar    eax,0x5
64020537:	and    edx,0x8000001f
6402053d:	jns    0x64020544
6402053f:	dec    edx
64020540:	or     edx,0xffffffe0
64020543:	inc    edx
64020544:	and    DWORD PTR [ebp-0xc],0x0
64020548:	and    DWORD PTR [ebp+0x8],0x0
6402054c:	or     esi,0xffffffff
6402054f:	mov    ecx,edx
64020551:	shl    esi,cl
64020553:	mov    DWORD PTR [ebp-0x4],0x20
6402055a:	sub    DWORD PTR [ebp-0x4],edx
6402055d:	not    esi
6402055f:	mov    ecx,DWORD PTR [ebp+0x8]
64020562:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
64020566:	mov    ecx,edi
64020568:	and    ecx,esi
6402056a:	mov    DWORD PTR [ebp-0x10],ecx
6402056d:	mov    ecx,edx
6402056f:	shr    edi,cl
64020571:	mov    ecx,DWORD PTR [ebp+0x8]
64020574:	or     edi,DWORD PTR [ebp-0xc]
64020577:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6402057b:	mov    edi,DWORD PTR [ebp-0x10]
6402057e:	mov    ecx,DWORD PTR [ebp-0x4]
64020581:	shl    edi,cl
64020583:	inc    DWORD PTR [ebp+0x8]
64020586:	cmp    DWORD PTR [ebp+0x8],0x3
6402058a:	mov    DWORD PTR [ebp-0xc],edi
6402058d:	jl     0x6402055f
6402058f:	mov    esi,eax
64020591:	push   0x2
64020593:	shl    esi,0x2
64020596:	lea    ecx,[ebp-0x18]
64020599:	pop    edx
6402059a:	sub    ecx,esi
6402059c:	cmp    edx,eax
6402059e:	jl     0x640205a8
640205a0:	mov    esi,DWORD PTR [ecx]
640205a2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640205a6:	jmp    0x640205ad
640205a8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640205ad:	dec    edx
640205ae:	sub    ecx,0x4
640205b1:	test   edx,edx
640205b3:	jge    0x6402059c
640205b5:	xor    eax,eax
640205b7:	pop    esi
640205b8:	push   0x1f
640205ba:	pop    ecx
640205bb:	sub    ecx,DWORD PTR ds:0x6402e07c
640205c1:	shl    ebx,cl
640205c3:	mov    ecx,DWORD PTR [ebp-0x14]
640205c6:	neg    ecx
640205c8:	sbb    ecx,ecx
640205ca:	and    ecx,0x80000000
640205d0:	or     ebx,ecx
640205d2:	mov    ecx,DWORD PTR ds:0x6402e080
640205d8:	or     ebx,DWORD PTR [ebp-0x20]
640205db:	cmp    ecx,0x40
640205de:	jne    0x640205ed
640205e0:	mov    ecx,DWORD PTR [ebp+0xc]
640205e3:	mov    edx,DWORD PTR [ebp-0x1c]
640205e6:	mov    DWORD PTR [ecx+0x4],ebx
640205e9:	mov    DWORD PTR [ecx],edx
640205eb:	jmp    0x640205f7
640205ed:	cmp    ecx,0x20
640205f0:	jne    0x640205f7
640205f2:	mov    ecx,DWORD PTR [ebp+0xc]
640205f5:	mov    DWORD PTR [ecx],ebx
640205f7:	pop    edi
640205f8:	pop    ebx
640205f9:	leave  
640205fa:	ret    
640205fb:	push   ebp
640205fc:	mov    ebp,esp
640205fe:	sub    esp,0x2c
64020601:	mov    eax,DWORD PTR [ebp+0x8]
64020604:	movzx  ecx,WORD PTR [eax+0xa]
64020608:	push   ebx
64020609:	mov    ebx,ecx
6402060b:	and    ecx,0x8000
64020611:	mov    DWORD PTR [ebp-0x14],ecx
64020614:	mov    ecx,DWORD PTR [eax+0x6]
64020617:	mov    DWORD PTR [ebp-0x20],ecx
6402061a:	mov    ecx,DWORD PTR [eax+0x2]
6402061d:	movzx  eax,WORD PTR [eax]
64020620:	and    ebx,0x7fff
64020626:	sub    ebx,0x3fff
6402062c:	shl    eax,0x10
6402062f:	cmp    ebx,0xffffc001
64020635:	push   edi
64020636:	mov    DWORD PTR [ebp-0x1c],ecx
64020639:	mov    DWORD PTR [ebp-0x18],eax
6402063c:	jne    0x64020665
6402063e:	xor    ebx,ebx
64020640:	xor    eax,eax
64020642:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
64020646:	jne    0x64020655
64020648:	inc    eax
64020649:	cmp    eax,0x3
6402064c:	jl     0x64020642
6402064e:	xor    eax,eax
64020650:	jmp    0x64020afa
64020655:	xor    eax,eax
64020657:	lea    edi,[ebp-0x20]
6402065a:	stos   DWORD PTR es:[edi],eax
6402065b:	stos   DWORD PTR es:[edi],eax
6402065c:	push   0x2
6402065e:	stos   DWORD PTR es:[edi],eax
6402065f:	pop    eax
64020660:	jmp    0x64020afa
64020665:	and    DWORD PTR [ebp+0x8],0x0
64020669:	push   esi
6402066a:	lea    esi,[ebp-0x20]
6402066d:	lea    edi,[ebp-0x2c]
64020670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020673:	mov    esi,DWORD PTR ds:0x6402e090
64020679:	dec    esi
6402067a:	lea    ecx,[esi+0x1]
6402067d:	mov    eax,ecx
6402067f:	cdq    
64020680:	and    edx,0x1f
64020683:	add    eax,edx
64020685:	sar    eax,0x5
64020688:	mov    edx,ecx
6402068a:	and    edx,0x8000001f
64020690:	mov    DWORD PTR [ebp-0x10],ebx
64020693:	mov    DWORD PTR [ebp-0xc],eax
64020696:	jns    0x6402069d
64020698:	dec    edx
64020699:	or     edx,0xffffffe0
6402069c:	inc    edx
6402069d:	lea    edi,[ebp+eax*4-0x20]
640206a1:	push   0x1f
640206a3:	xor    eax,eax
640206a5:	pop    ecx
640206a6:	sub    ecx,edx
640206a8:	inc    eax
640206a9:	shl    eax,cl
640206ab:	mov    DWORD PTR [ebp-0x8],ecx
640206ae:	test   DWORD PTR [edi],eax
640206b0:	je     0x64020743
640206b6:	mov    eax,DWORD PTR [ebp-0xc]
640206b9:	or     edx,0xffffffff
640206bc:	shl    edx,cl
640206be:	not    edx
640206c0:	test   DWORD PTR [ebp+eax*4-0x20],edx
640206c4:	jmp    0x640206cb
640206c6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
640206cb:	jne    0x640206d5
640206cd:	inc    eax
640206ce:	cmp    eax,0x3
640206d1:	jl     0x640206c6
640206d3:	jmp    0x64020743
640206d5:	mov    eax,esi
640206d7:	cdq    
640206d8:	push   0x1f
640206da:	pop    ecx
640206db:	and    edx,ecx
640206dd:	add    eax,edx
640206df:	sar    eax,0x5
640206e2:	and    esi,0x8000001f
640206e8:	jns    0x640206ef
640206ea:	dec    esi
640206eb:	or     esi,0xffffffe0
640206ee:	inc    esi
640206ef:	and    DWORD PTR [ebp-0x4],0x0
640206f3:	sub    ecx,esi
640206f5:	xor    edx,edx
640206f7:	inc    edx
640206f8:	shl    edx,cl
640206fa:	lea    ecx,[ebp+eax*4-0x20]
640206fe:	mov    esi,DWORD PTR [ecx]
64020700:	add    esi,edx
64020702:	mov    DWORD PTR [ebp+0x8],esi
64020705:	mov    esi,DWORD PTR [ecx]
64020707:	cmp    DWORD PTR [ebp+0x8],esi
6402070a:	jb     0x6402072e
6402070c:	cmp    DWORD PTR [ebp+0x8],edx
6402070f:	jmp    0x6402072c
64020711:	test   ecx,ecx
64020713:	je     0x64020740
64020715:	and    DWORD PTR [ebp-0x4],0x0
64020719:	lea    ecx,[ebp+eax*4-0x20]
6402071d:	mov    edx,DWORD PTR [ecx]
6402071f:	lea    esi,[edx+0x1]
64020722:	cmp    esi,edx
64020724:	mov    DWORD PTR [ebp+0x8],esi
64020727:	jb     0x6402072e
64020729:	cmp    esi,0x1
6402072c:	jae    0x64020735
6402072e:	mov    DWORD PTR [ebp-0x4],0x1
64020735:	dec    eax
64020736:	mov    edx,DWORD PTR [ebp+0x8]
64020739:	mov    DWORD PTR [ecx],edx
6402073b:	mov    ecx,DWORD PTR [ebp-0x4]
6402073e:	jns    0x64020711
64020740:	mov    DWORD PTR [ebp+0x8],ecx
64020743:	mov    ecx,DWORD PTR [ebp-0x8]
64020746:	or     eax,0xffffffff
64020749:	shl    eax,cl
6402074b:	and    DWORD PTR [edi],eax
6402074d:	mov    eax,DWORD PTR [ebp-0xc]
64020750:	inc    eax
64020751:	cmp    eax,0x3
64020754:	jge    0x64020763
64020756:	push   0x3
64020758:	pop    ecx
64020759:	lea    edi,[ebp+eax*4-0x20]
6402075d:	sub    ecx,eax
6402075f:	xor    eax,eax
64020761:	rep stos DWORD PTR es:[edi],eax
64020763:	cmp    DWORD PTR [ebp+0x8],0x0
64020767:	je     0x6402076a
64020769:	inc    ebx
6402076a:	mov    eax,ds:0x6402e08c
6402076f:	mov    ecx,eax
64020771:	sub    ecx,DWORD PTR ds:0x6402e090
64020777:	cmp    ebx,ecx
64020779:	jge    0x64020788
6402077b:	xor    eax,eax
6402077d:	lea    edi,[ebp-0x20]
64020780:	stos   DWORD PTR es:[edi],eax
64020781:	stos   DWORD PTR es:[edi],eax
64020782:	stos   DWORD PTR es:[edi],eax
64020783:	jmp    0x64020995
64020788:	cmp    ebx,eax
6402078a:	jg     0x6402099f
64020790:	sub    eax,DWORD PTR [ebp-0x10]
64020793:	lea    esi,[ebp-0x2c]
64020796:	mov    ecx,eax
64020798:	lea    edi,[ebp-0x20]
6402079b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402079c:	cdq    
6402079d:	and    edx,0x1f
640207a0:	add    eax,edx
640207a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640207a3:	mov    edx,ecx
640207a5:	sar    eax,0x5
640207a8:	and    edx,0x8000001f
640207ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640207af:	jns    0x640207b6
640207b1:	dec    edx
640207b2:	or     edx,0xffffffe0
640207b5:	inc    edx
640207b6:	and    DWORD PTR [ebp-0xc],0x0
640207ba:	and    DWORD PTR [ebp+0x8],0x0
640207be:	or     edi,0xffffffff
640207c1:	mov    ecx,edx
640207c3:	shl    edi,cl
640207c5:	mov    DWORD PTR [ebp-0x4],0x20
640207cc:	sub    DWORD PTR [ebp-0x4],edx
640207cf:	not    edi
640207d1:	mov    ebx,DWORD PTR [ebp+0x8]
640207d4:	lea    ebx,[ebp+ebx*4-0x20]
640207d8:	mov    esi,DWORD PTR [ebx]
640207da:	mov    ecx,esi
640207dc:	and    ecx,edi
640207de:	mov    DWORD PTR [ebp-0x10],ecx
640207e1:	mov    ecx,edx
640207e3:	shr    esi,cl
640207e5:	mov    ecx,DWORD PTR [ebp-0x4]
640207e8:	or     esi,DWORD PTR [ebp-0xc]
640207eb:	mov    DWORD PTR [ebx],esi
640207ed:	mov    esi,DWORD PTR [ebp-0x10]
640207f0:	shl    esi,cl
640207f2:	inc    DWORD PTR [ebp+0x8]
640207f5:	cmp    DWORD PTR [ebp+0x8],0x3
640207f9:	mov    DWORD PTR [ebp-0xc],esi
640207fc:	jl     0x640207d1
640207fe:	mov    esi,eax
64020800:	push   0x2
64020802:	shl    esi,0x2
64020805:	lea    ecx,[ebp-0x18]
64020808:	pop    edx
64020809:	sub    ecx,esi
6402080b:	cmp    edx,eax
6402080d:	jl     0x64020817
6402080f:	mov    esi,DWORD PTR [ecx]
64020811:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020815:	jmp    0x6402081c
64020817:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402081c:	dec    edx
6402081d:	sub    ecx,0x4
64020820:	test   edx,edx
64020822:	jge    0x6402080b
64020824:	mov    esi,DWORD PTR ds:0x6402e090
6402082a:	dec    esi
6402082b:	lea    ecx,[esi+0x1]
6402082e:	mov    eax,ecx
64020830:	cdq    
64020831:	and    edx,0x1f
64020834:	add    eax,edx
64020836:	sar    eax,0x5
64020839:	mov    edx,ecx
6402083b:	and    edx,0x8000001f
64020841:	mov    DWORD PTR [ebp-0xc],eax
64020844:	jns    0x6402084b
64020846:	dec    edx
64020847:	or     edx,0xffffffe0
6402084a:	inc    edx
6402084b:	push   0x1f
6402084d:	pop    ecx
6402084e:	sub    ecx,edx
64020850:	xor    edx,edx
64020852:	inc    edx
64020853:	shl    edx,cl
64020855:	lea    ebx,[ebp+eax*4-0x20]
64020859:	mov    DWORD PTR [ebp-0x10],ecx
6402085c:	test   DWORD PTR [ebx],edx
6402085e:	je     0x640208e6
64020864:	or     edx,0xffffffff
64020867:	shl    edx,cl
64020869:	not    edx
6402086b:	test   DWORD PTR [ebp+eax*4-0x20],edx
6402086f:	jmp    0x64020876
64020871:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64020876:	jne    0x64020880
64020878:	inc    eax
64020879:	cmp    eax,0x3
6402087c:	jl     0x64020871
6402087e:	jmp    0x640208e6
64020880:	mov    eax,esi
64020882:	cdq    
64020883:	push   0x1f
64020885:	pop    ecx
64020886:	and    edx,ecx
64020888:	add    eax,edx
6402088a:	sar    eax,0x5
6402088d:	and    esi,0x8000001f
64020893:	jns    0x6402089a
64020895:	dec    esi
64020896:	or     esi,0xffffffe0
64020899:	inc    esi
6402089a:	and    DWORD PTR [ebp+0x8],0x0
6402089e:	xor    edx,edx
640208a0:	sub    ecx,esi
640208a2:	inc    edx
640208a3:	shl    edx,cl
640208a5:	lea    ecx,[ebp+eax*4-0x20]
640208a9:	mov    esi,DWORD PTR [ecx]
640208ab:	lea    edi,[esi+edx*1]
640208ae:	cmp    edi,esi
640208b0:	jb     0x640208b6
640208b2:	cmp    edi,edx
640208b4:	jae    0x640208bd
640208b6:	mov    DWORD PTR [ebp+0x8],0x1
640208bd:	mov    DWORD PTR [ecx],edi
640208bf:	mov    ecx,DWORD PTR [ebp+0x8]
640208c2:	jmp    0x640208e3
640208c4:	test   ecx,ecx
640208c6:	je     0x640208e6
640208c8:	lea    ecx,[ebp+eax*4-0x20]
640208cc:	mov    edx,DWORD PTR [ecx]
640208ce:	lea    esi,[edx+0x1]
640208d1:	xor    edi,edi
640208d3:	cmp    esi,edx
640208d5:	jb     0x640208dc
640208d7:	cmp    esi,0x1
640208da:	jae    0x640208df
640208dc:	xor    edi,edi
640208de:	inc    edi
640208df:	mov    DWORD PTR [ecx],esi
640208e1:	mov    ecx,edi
640208e3:	dec    eax
640208e4:	jns    0x640208c4
640208e6:	mov    ecx,DWORD PTR [ebp-0x10]
640208e9:	or     eax,0xffffffff
640208ec:	shl    eax,cl
640208ee:	and    DWORD PTR [ebx],eax
640208f0:	mov    eax,DWORD PTR [ebp-0xc]
640208f3:	inc    eax
640208f4:	cmp    eax,0x3
640208f7:	jge    0x64020906
640208f9:	push   0x3
640208fb:	pop    ecx
640208fc:	lea    edi,[ebp+eax*4-0x20]
64020900:	sub    ecx,eax
64020902:	xor    eax,eax
64020904:	rep stos DWORD PTR es:[edi],eax
64020906:	mov    ecx,DWORD PTR ds:0x6402e094
6402090c:	inc    ecx
6402090d:	mov    eax,ecx
6402090f:	cdq    
64020910:	and    edx,0x1f
64020913:	add    eax,edx
64020915:	mov    edx,ecx
64020917:	sar    eax,0x5
6402091a:	and    edx,0x8000001f
64020920:	jns    0x64020927
64020922:	dec    edx
64020923:	or     edx,0xffffffe0
64020926:	inc    edx
64020927:	and    DWORD PTR [ebp-0xc],0x0
6402092b:	and    DWORD PTR [ebp+0x8],0x0
6402092f:	or     edi,0xffffffff
64020932:	mov    ecx,edx
64020934:	shl    edi,cl
64020936:	mov    DWORD PTR [ebp-0x4],0x20
6402093d:	sub    DWORD PTR [ebp-0x4],edx
64020940:	not    edi
64020942:	mov    ebx,DWORD PTR [ebp+0x8]
64020945:	lea    ebx,[ebp+ebx*4-0x20]
64020949:	mov    esi,DWORD PTR [ebx]
6402094b:	mov    ecx,esi
6402094d:	and    ecx,edi
6402094f:	mov    DWORD PTR [ebp-0x10],ecx
64020952:	mov    ecx,edx
64020954:	shr    esi,cl
64020956:	mov    ecx,DWORD PTR [ebp-0x4]
64020959:	or     esi,DWORD PTR [ebp-0xc]
6402095c:	mov    DWORD PTR [ebx],esi
6402095e:	mov    esi,DWORD PTR [ebp-0x10]
64020961:	shl    esi,cl
64020963:	inc    DWORD PTR [ebp+0x8]
64020966:	cmp    DWORD PTR [ebp+0x8],0x3
6402096a:	mov    DWORD PTR [ebp-0xc],esi
6402096d:	jl     0x64020942
6402096f:	mov    esi,eax
64020971:	push   0x2
64020973:	shl    esi,0x2
64020976:	lea    ecx,[ebp-0x18]
64020979:	pop    edx
6402097a:	sub    ecx,esi
6402097c:	cmp    edx,eax
6402097e:	jl     0x64020988
64020980:	mov    esi,DWORD PTR [ecx]
64020982:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020986:	jmp    0x6402098d
64020988:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402098d:	dec    edx
6402098e:	sub    ecx,0x4
64020991:	test   edx,edx
64020993:	jge    0x6402097c
64020995:	push   0x2
64020997:	xor    ebx,ebx
64020999:	pop    eax
6402099a:	jmp    0x64020af9
6402099f:	cmp    ebx,DWORD PTR ds:0x6402e088
640209a5:	mov    ecx,DWORD PTR ds:0x6402e094
640209ab:	jl     0x64020a5e
640209b1:	xor    eax,eax
640209b3:	lea    edi,[ebp-0x20]
640209b6:	stos   DWORD PTR es:[edi],eax
640209b7:	stos   DWORD PTR es:[edi],eax
640209b8:	stos   DWORD PTR es:[edi],eax
640209b9:	or     DWORD PTR [ebp-0x20],0x80000000
640209c0:	mov    eax,ecx
640209c2:	cdq    
640209c3:	and    edx,0x1f
640209c6:	add    eax,edx
640209c8:	mov    edx,ecx
640209ca:	sar    eax,0x5
640209cd:	and    edx,0x8000001f
640209d3:	jns    0x640209da
640209d5:	dec    edx
640209d6:	or     edx,0xffffffe0
640209d9:	inc    edx
640209da:	and    DWORD PTR [ebp-0xc],0x0
640209de:	and    DWORD PTR [ebp+0x8],0x0
640209e2:	or     edi,0xffffffff
640209e5:	mov    ecx,edx
640209e7:	shl    edi,cl
640209e9:	mov    DWORD PTR [ebp-0x4],0x20
640209f0:	sub    DWORD PTR [ebp-0x4],edx
640209f3:	not    edi
640209f5:	mov    ebx,DWORD PTR [ebp+0x8]
640209f8:	lea    ebx,[ebp+ebx*4-0x20]
640209fc:	mov    esi,DWORD PTR [ebx]
640209fe:	mov    ecx,esi
64020a00:	and    ecx,edi
64020a02:	mov    DWORD PTR [ebp-0x10],ecx
64020a05:	mov    ecx,edx
64020a07:	shr    esi,cl
64020a09:	mov    ecx,DWORD PTR [ebp-0x4]
64020a0c:	or     esi,DWORD PTR [ebp-0xc]
64020a0f:	mov    DWORD PTR [ebx],esi
64020a11:	mov    esi,DWORD PTR [ebp-0x10]
64020a14:	shl    esi,cl
64020a16:	inc    DWORD PTR [ebp+0x8]
64020a19:	cmp    DWORD PTR [ebp+0x8],0x3
64020a1d:	mov    DWORD PTR [ebp-0xc],esi
64020a20:	jl     0x640209f5
64020a22:	mov    esi,eax
64020a24:	push   0x2
64020a26:	shl    esi,0x2
64020a29:	lea    ecx,[ebp-0x18]
64020a2c:	pop    edx
64020a2d:	sub    ecx,esi
64020a2f:	cmp    edx,eax
64020a31:	jl     0x64020a3b
64020a33:	mov    esi,DWORD PTR [ecx]
64020a35:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020a39:	jmp    0x64020a40
64020a3b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64020a40:	dec    edx
64020a41:	sub    ecx,0x4
64020a44:	test   edx,edx
64020a46:	jge    0x64020a2f
64020a48:	mov    eax,ds:0x6402e088
64020a4d:	mov    ecx,DWORD PTR ds:0x6402e09c
64020a53:	lea    ebx,[ecx+eax*1]
64020a56:	xor    eax,eax
64020a58:	inc    eax
64020a59:	jmp    0x64020af9
64020a5e:	mov    eax,ds:0x6402e09c
64020a63:	and    DWORD PTR [ebp-0x20],0x7fffffff
64020a6a:	add    ebx,eax
64020a6c:	mov    eax,ecx
64020a6e:	cdq    
64020a6f:	and    edx,0x1f
64020a72:	add    eax,edx
64020a74:	mov    edx,ecx
64020a76:	sar    eax,0x5
64020a79:	and    edx,0x8000001f
64020a7f:	jns    0x64020a86
64020a81:	dec    edx
64020a82:	or     edx,0xffffffe0
64020a85:	inc    edx
64020a86:	and    DWORD PTR [ebp-0xc],0x0
64020a8a:	and    DWORD PTR [ebp+0x8],0x0
64020a8e:	or     esi,0xffffffff
64020a91:	mov    ecx,edx
64020a93:	shl    esi,cl
64020a95:	mov    DWORD PTR [ebp-0x4],0x20
64020a9c:	sub    DWORD PTR [ebp-0x4],edx
64020a9f:	not    esi
64020aa1:	mov    ecx,DWORD PTR [ebp+0x8]
64020aa4:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
64020aa8:	mov    ecx,edi
64020aaa:	and    ecx,esi
64020aac:	mov    DWORD PTR [ebp-0x10],ecx
64020aaf:	mov    ecx,edx
64020ab1:	shr    edi,cl
64020ab3:	mov    ecx,DWORD PTR [ebp+0x8]
64020ab6:	or     edi,DWORD PTR [ebp-0xc]
64020ab9:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
64020abd:	mov    edi,DWORD PTR [ebp-0x10]
64020ac0:	mov    ecx,DWORD PTR [ebp-0x4]
64020ac3:	shl    edi,cl
64020ac5:	inc    DWORD PTR [ebp+0x8]
64020ac8:	cmp    DWORD PTR [ebp+0x8],0x3
64020acc:	mov    DWORD PTR [ebp-0xc],edi
64020acf:	jl     0x64020aa1
64020ad1:	mov    esi,eax
64020ad3:	push   0x2
64020ad5:	shl    esi,0x2
64020ad8:	lea    ecx,[ebp-0x18]
64020adb:	pop    edx
64020adc:	sub    ecx,esi
64020ade:	cmp    edx,eax
64020ae0:	jl     0x64020aea
64020ae2:	mov    esi,DWORD PTR [ecx]
64020ae4:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64020ae8:	jmp    0x64020aef
64020aea:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64020aef:	dec    edx
64020af0:	sub    ecx,0x4
64020af3:	test   edx,edx
64020af5:	jge    0x64020ade
64020af7:	xor    eax,eax
64020af9:	pop    esi
64020afa:	push   0x1f
64020afc:	pop    ecx
64020afd:	sub    ecx,DWORD PTR ds:0x6402e094
64020b03:	shl    ebx,cl
64020b05:	mov    ecx,DWORD PTR [ebp-0x14]
64020b08:	neg    ecx
64020b0a:	sbb    ecx,ecx
64020b0c:	and    ecx,0x80000000
64020b12:	or     ebx,ecx
64020b14:	mov    ecx,DWORD PTR ds:0x6402e098
64020b1a:	or     ebx,DWORD PTR [ebp-0x20]
64020b1d:	cmp    ecx,0x40
64020b20:	jne    0x64020b2f
64020b22:	mov    ecx,DWORD PTR [ebp+0xc]
64020b25:	mov    edx,DWORD PTR [ebp-0x1c]
64020b28:	mov    DWORD PTR [ecx+0x4],ebx
64020b2b:	mov    DWORD PTR [ecx],edx
64020b2d:	jmp    0x64020b39
64020b2f:	cmp    ecx,0x20
64020b32:	jne    0x64020b39
64020b34:	mov    ecx,DWORD PTR [ebp+0xc]
64020b37:	mov    DWORD PTR [ecx],ebx
64020b39:	pop    edi
64020b3a:	pop    ebx
64020b3b:	leave  
64020b3c:	ret    
64020b3d:	push   ebp
64020b3e:	mov    ebp,esp
64020b40:	sub    esp,0x7c
64020b43:	mov    eax,ds:0x6402d09c
64020b48:	xor    eax,ebp
64020b4a:	mov    DWORD PTR [ebp-0x4],eax
64020b4d:	mov    eax,DWORD PTR [ebp+0x8]
64020b50:	push   ebx
64020b51:	xor    ebx,ebx
64020b53:	push   esi
64020b54:	xor    esi,esi
64020b56:	mov    DWORD PTR [ebp-0x7c],eax
64020b59:	mov    eax,DWORD PTR [ebp+0xc]
64020b5c:	inc    esi
64020b5d:	xor    ecx,ecx
64020b5f:	cmp    DWORD PTR [ebp+0x24],ebx
64020b62:	push   edi
64020b63:	mov    DWORD PTR [ebp-0x70],eax
64020b66:	lea    edi,[ebp-0x20]
64020b69:	mov    DWORD PTR [ebp-0x74],ebx
64020b6c:	mov    DWORD PTR [ebp-0x68],esi
64020b6f:	mov    DWORD PTR [ebp-0x4c],ebx
64020b72:	mov    DWORD PTR [ebp-0x58],ebx
64020b75:	mov    DWORD PTR [ebp-0x5c],ebx
64020b78:	mov    DWORD PTR [ebp-0x60],ebx
64020b7b:	mov    DWORD PTR [ebp-0x64],ebx
64020b7e:	mov    DWORD PTR [ebp-0x50],ebx
64020b81:	mov    DWORD PTR [ebp-0x6c],ebx
64020b84:	jne    0x64020ba5
64020b86:	call   0x64014950
64020b8b:	push   ebx
64020b8c:	push   ebx
64020b8d:	push   ebx
64020b8e:	push   ebx
64020b8f:	push   ebx
64020b90:	mov    DWORD PTR [eax],0x16
64020b96:	call   0x640126c4
64020b9b:	add    esp,0x14
64020b9e:	xor    eax,eax
64020ba0:	jmp    0x640211be
64020ba5:	mov    edx,DWORD PTR [ebp+0x10]
64020ba8:	mov    DWORD PTR [ebp-0x54],edx
64020bab:	mov    al,BYTE PTR [edx]
64020bad:	cmp    al,0x20
64020baf:	je     0x64020bbd
64020bb1:	cmp    al,0x9
64020bb3:	je     0x64020bbd
64020bb5:	cmp    al,0xa
64020bb7:	je     0x64020bbd
64020bb9:	cmp    al,0xd
64020bbb:	jne    0x64020bc0
64020bbd:	inc    edx
64020bbe:	jmp    0x64020bab
64020bc0:	mov    bl,0x30
64020bc2:	mov    al,BYTE PTR [edx]
64020bc4:	inc    edx
64020bc5:	cmp    ecx,0xb
64020bc8:	ja     0x64020dfd
64020bce:	jmp    DWORD PTR [ecx*4+0x640211cd]
64020bd5:	mov    cl,al
64020bd7:	sub    cl,0x31
64020bda:	cmp    cl,0x8
64020bdd:	ja     0x64020be5
64020bdf:	push   0x3
64020be1:	pop    ecx
64020be2:	dec    edx
64020be3:	jmp    0x64020bc2
64020be5:	mov    ecx,DWORD PTR [ebp+0x24]
64020be8:	mov    ecx,DWORD PTR [ecx]
64020bea:	mov    ecx,DWORD PTR [ecx+0xbc]
64020bf0:	mov    ecx,DWORD PTR [ecx]
64020bf2:	cmp    al,BYTE PTR [ecx]
64020bf4:	jne    0x64020bfb
64020bf6:	push   0x5
64020bf8:	pop    ecx
64020bf9:	jmp    0x64020bc2
64020bfb:	movsx  eax,al
64020bfe:	sub    eax,0x2b
64020c01:	je     0x64020c20
64020c03:	dec    eax
64020c04:	dec    eax
64020c05:	je     0x64020c14
64020c07:	sub    eax,0x3
64020c0a:	jne    0x64020d9b
64020c10:	mov    ecx,esi
64020c12:	jmp    0x64020bc2
64020c14:	push   0x2
64020c16:	pop    ecx
64020c17:	mov    DWORD PTR [ebp-0x74],0x8000
64020c1e:	jmp    0x64020bc2
64020c20:	and    DWORD PTR [ebp-0x74],0x0
64020c24:	push   0x2
64020c26:	pop    ecx
64020c27:	jmp    0x64020bc2
64020c29:	mov    cl,al
64020c2b:	sub    cl,0x31
64020c2e:	cmp    cl,0x8
64020c31:	mov    DWORD PTR [ebp-0x58],esi
64020c34:	jbe    0x64020bdf
64020c36:	mov    ecx,DWORD PTR [ebp+0x24]
64020c39:	mov    ecx,DWORD PTR [ecx]
64020c3b:	mov    ecx,DWORD PTR [ecx+0xbc]
64020c41:	mov    ecx,DWORD PTR [ecx]
64020c43:	cmp    al,BYTE PTR [ecx]
64020c45:	jne    0x64020c4b
64020c47:	push   0x4
64020c49:	jmp    0x64020bf8
64020c4b:	cmp    al,0x2b
64020c4d:	je     0x64020c77
64020c4f:	cmp    al,0x2d
64020c51:	je     0x64020c77
64020c53:	cmp    al,bl
64020c55:	je     0x64020c10
64020c57:	cmp    al,0x43
64020c59:	jle    0x64020d9b
64020c5f:	cmp    al,0x45
64020c61:	jle    0x64020c73
64020c63:	cmp    al,0x63
64020c65:	jle    0x64020d9b
64020c6b:	cmp    al,0x65
64020c6d:	jg     0x64020d9b
64020c73:	push   0x6
64020c75:	jmp    0x64020bf8
64020c77:	dec    edx
64020c78:	push   0xb
64020c7a:	jmp    0x64020bf8
64020c7f:	mov    cl,al
64020c81:	sub    cl,0x31
64020c84:	cmp    cl,0x8
64020c87:	jbe    0x64020bdf
64020c8d:	mov    ecx,DWORD PTR [ebp+0x24]
64020c90:	mov    ecx,DWORD PTR [ecx]
64020c92:	mov    ecx,DWORD PTR [ecx+0xbc]
64020c98:	mov    ecx,DWORD PTR [ecx]
64020c9a:	cmp    al,BYTE PTR [ecx]
64020c9c:	je     0x64020bf6
64020ca2:	cmp    al,bl
64020ca4:	je     0x64020c10
64020caa:	mov    edx,DWORD PTR [ebp-0x54]
64020cad:	jmp    0x64020dc6
64020cb2:	mov    DWORD PTR [ebp-0x58],esi
64020cb5:	jmp    0x64020cd1
64020cb7:	cmp    al,0x39
64020cb9:	jg     0x64020cd5
64020cbb:	cmp    DWORD PTR [ebp-0x4c],0x19
64020cbf:	jae    0x64020ccb
64020cc1:	inc    DWORD PTR [ebp-0x4c]
64020cc4:	sub    al,bl
64020cc6:	mov    BYTE PTR [edi],al
64020cc8:	inc    edi
64020cc9:	jmp    0x64020cce
64020ccb:	inc    DWORD PTR [ebp-0x50]
64020cce:	mov    al,BYTE PTR [edx]
64020cd0:	inc    edx
64020cd1:	cmp    al,bl
64020cd3:	jge    0x64020cb7
64020cd5:	mov    ecx,DWORD PTR [ebp+0x24]
64020cd8:	mov    ecx,DWORD PTR [ecx]
64020cda:	mov    ecx,DWORD PTR [ecx+0xbc]
64020ce0:	mov    ecx,DWORD PTR [ecx]
64020ce2:	cmp    al,BYTE PTR [ecx]
64020ce4:	je     0x64020c47
64020cea:	cmp    al,0x2b
64020cec:	je     0x64020c77
64020cee:	cmp    al,0x2d
64020cf0:	je     0x64020c77
64020cf2:	jmp    0x64020c57
64020cf7:	cmp    DWORD PTR [ebp-0x4c],0x0
64020cfb:	mov    DWORD PTR [ebp-0x58],esi
64020cfe:	mov    DWORD PTR [ebp-0x5c],esi
64020d01:	jne    0x64020d29
64020d03:	jmp    0x64020d0b
64020d05:	dec    DWORD PTR [ebp-0x50]
64020d08:	mov    al,BYTE PTR [edx]
64020d0a:	inc    edx
64020d0b:	cmp    al,bl
64020d0d:	je     0x64020d05
64020d0f:	jmp    0x64020d29
64020d11:	cmp    al,0x39
64020d13:	jg     0x64020cea
64020d15:	cmp    DWORD PTR [ebp-0x4c],0x19
64020d19:	jae    0x64020d26
64020d1b:	inc    DWORD PTR [ebp-0x4c]
64020d1e:	sub    al,bl
64020d20:	mov    BYTE PTR [edi],al
64020d22:	inc    edi
64020d23:	dec    DWORD PTR [ebp-0x50]
64020d26:	mov    al,BYTE PTR [edx]
64020d28:	inc    edx
64020d29:	cmp    al,bl
64020d2b:	jge    0x64020d11
64020d2d:	jmp    0x64020cea
64020d2f:	sub    al,bl
64020d31:	cmp    al,0x9
64020d33:	mov    DWORD PTR [ebp-0x5c],esi
64020d36:	ja     0x64020caa
64020d3c:	push   0x4
64020d3e:	jmp    0x64020be1
64020d43:	lea    ecx,[edx-0x2]
64020d46:	mov    DWORD PTR [ebp-0x54],ecx
64020d49:	mov    cl,al
64020d4b:	sub    cl,0x31
64020d4e:	cmp    cl,0x8
64020d51:	ja     0x64020d5a
64020d53:	push   0x9
64020d55:	jmp    0x64020be1
64020d5a:	movsx  eax,al
64020d5d:	sub    eax,0x2b
64020d60:	je     0x64020d82
64020d62:	dec    eax
64020d63:	dec    eax
64020d64:	je     0x64020d76
64020d66:	sub    eax,0x3
64020d69:	jne    0x64020caa
64020d6f:	push   0x8
64020d71:	jmp    0x64020bf8
64020d76:	or     DWORD PTR [ebp-0x68],0xffffffff
64020d7a:	push   0x7
64020d7c:	pop    ecx
64020d7d:	jmp    0x64020bc2
64020d82:	push   0x7
64020d84:	jmp    0x64020bf8
64020d89:	mov    DWORD PTR [ebp-0x60],esi
64020d8c:	jmp    0x64020d91
64020d8e:	mov    al,BYTE PTR [edx]
64020d90:	inc    edx
64020d91:	cmp    al,bl
64020d93:	je     0x64020d8e
64020d95:	sub    al,0x31
64020d97:	cmp    al,0x8
64020d99:	jbe    0x64020d53
64020d9b:	dec    edx
64020d9c:	jmp    0x64020dc6
64020d9e:	mov    cl,al
64020da0:	sub    cl,0x31
64020da3:	cmp    cl,0x8
64020da6:	jbe    0x64020d53
64020da8:	cmp    al,bl
64020daa:	jmp    0x64020d69
64020dac:	cmp    DWORD PTR [ebp+0x20],0x0
64020db0:	je     0x64020df9
64020db2:	movsx  eax,al
64020db5:	sub    eax,0x2b
64020db8:	lea    ecx,[edx-0x1]
64020dbb:	mov    DWORD PTR [ebp-0x54],ecx
64020dbe:	je     0x64020d82
64020dc0:	dec    eax
64020dc1:	dec    eax
64020dc2:	je     0x64020d76
64020dc4:	mov    edx,ecx
64020dc6:	cmp    DWORD PTR [ebp-0x58],0x0
64020dca:	mov    eax,DWORD PTR [ebp-0x70]
64020dcd:	mov    DWORD PTR [eax],edx
64020dcf:	je     0x64021179
64020dd5:	push   0x18
64020dd7:	pop    eax
64020dd8:	cmp    DWORD PTR [ebp-0x4c],eax
64020ddb:	jbe    0x64020ded
64020ddd:	cmp    BYTE PTR [ebp-0x9],0x5
64020de1:	jl     0x64020de6
64020de3:	inc    BYTE PTR [ebp-0x9]
64020de6:	dec    edi
64020de7:	inc    DWORD PTR [ebp-0x50]
64020dea:	mov    DWORD PTR [ebp-0x4c],eax
64020ded:	cmp    DWORD PTR [ebp-0x4c],0x0
64020df1:	jbe    0x640211a0
64020df7:	jmp    0x64020e52
64020df9:	push   0xa
64020dfb:	pop    ecx
64020dfc:	dec    edx
64020dfd:	cmp    ecx,0xa
64020e00:	jne    0x64020bc2
64020e06:	jmp    0x64020dc6
64020e08:	mov    DWORD PTR [ebp-0x60],esi
64020e0b:	xor    ecx,ecx
64020e0d:	jmp    0x64020e28
64020e0f:	cmp    al,0x39
64020e11:	jg     0x64020e33
64020e13:	imul   ecx,ecx,0xa
64020e16:	movsx  esi,al
64020e19:	lea    ecx,[ecx+esi*1-0x30]
64020e1d:	cmp    ecx,0x1450
64020e23:	jg     0x64020e2e
64020e25:	mov    al,BYTE PTR [edx]
64020e27:	inc    edx
64020e28:	cmp    al,bl
64020e2a:	jge    0x64020e0f
64020e2c:	jmp    0x64020e33
64020e2e:	mov    ecx,0x1451
64020e33:	mov    DWORD PTR [ebp-0x64],ecx
64020e36:	jmp    0x64020e43
64020e38:	cmp    al,0x39
64020e3a:	jg     0x64020d9b
64020e40:	mov    al,BYTE PTR [edx]
64020e42:	inc    edx
64020e43:	cmp    al,bl
64020e45:	jge    0x64020e38
64020e47:	jmp    0x64020d9b
64020e4c:	dec    DWORD PTR [ebp-0x4c]
64020e4f:	inc    DWORD PTR [ebp-0x50]
64020e52:	dec    edi
64020e53:	cmp    BYTE PTR [edi],0x0
64020e56:	je     0x64020e4c
64020e58:	lea    eax,[ebp-0x3c]
64020e5b:	push   eax
64020e5c:	push   DWORD PTR [ebp-0x4c]
64020e5f:	lea    eax,[ebp-0x20]
64020e62:	push   eax
64020e63:	call   0x64021ef4
64020e68:	mov    eax,DWORD PTR [ebp-0x64]
64020e6b:	xor    ecx,ecx
64020e6d:	add    esp,0xc
64020e70:	cmp    DWORD PTR [ebp-0x68],ecx
64020e73:	jge    0x64020e77
64020e75:	neg    eax
64020e77:	add    eax,DWORD PTR [ebp-0x50]
64020e7a:	cmp    DWORD PTR [ebp-0x60],ecx
64020e7d:	jne    0x64020e82
64020e7f:	add    eax,DWORD PTR [ebp+0x18]
64020e82:	cmp    DWORD PTR [ebp-0x5c],ecx
64020e85:	jne    0x64020e8a
64020e87:	sub    eax,DWORD PTR [ebp+0x1c]
64020e8a:	cmp    eax,0x1450
64020e8f:	jg     0x64021182
64020e95:	cmp    eax,0xffffebb0
64020e9a:	jl     0x64021199
64020ea0:	mov    esi,0x6402e0a0
64020ea5:	sub    esi,0x60
64020ea8:	cmp    eax,ecx
64020eaa:	mov    DWORD PTR [ebp-0x54],eax
64020ead:	je     0x64021167
64020eb3:	jge    0x64020ec2
64020eb5:	neg    eax
64020eb7:	mov    esi,0x6402e200
64020ebc:	mov    DWORD PTR [ebp-0x54],eax
64020ebf:	sub    esi,0x60
64020ec2:	cmp    DWORD PTR [ebp+0x14],ecx
64020ec5:	jne    0x64020ecb
64020ec7:	mov    WORD PTR [ebp-0x3c],cx
64020ecb:	cmp    DWORD PTR [ebp-0x54],ecx
64020ece:	je     0x64021167
64020ed4:	mov    eax,DWORD PTR [ebp-0x54]
64020ed7:	sar    DWORD PTR [ebp-0x54],0x3
64020edb:	add    esi,0x54
64020ede:	and    eax,0x7
64020ee1:	test   eax,eax
64020ee3:	mov    DWORD PTR [ebp-0x4c],esi
64020ee6:	je     0x6402115d
64020eec:	imul   eax,eax,0xc
64020eef:	add    eax,esi
64020ef1:	mov    ebx,eax
64020ef3:	cmp    WORD PTR [ebx],0x8000
64020ef8:	mov    DWORD PTR [ebp-0x70],ebx
64020efb:	jb     0x64020f11
64020efd:	mov    esi,ebx
64020eff:	lea    edi,[ebp-0x48]
64020f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020f05:	dec    DWORD PTR [ebp-0x46]
64020f08:	mov    esi,DWORD PTR [ebp-0x4c]
64020f0b:	lea    ebx,[ebp-0x48]
64020f0e:	mov    DWORD PTR [ebp-0x70],ebx
64020f11:	movzx  edx,WORD PTR [ebx+0xa]
64020f15:	mov    ecx,DWORD PTR [ebp-0x32]
64020f18:	xor    eax,eax
64020f1a:	mov    DWORD PTR [ebp-0x50],eax
64020f1d:	mov    DWORD PTR [ebp-0x2c],eax
64020f20:	mov    DWORD PTR [ebp-0x28],eax
64020f23:	mov    DWORD PTR [ebp-0x24],eax
64020f26:	mov    eax,edx
64020f28:	mov    edi,0x7fff
64020f2d:	xor    eax,ecx
64020f2f:	and    ecx,edi
64020f31:	and    edx,edi
64020f33:	and    eax,0x8000
64020f38:	cmp    cx,0x7fff
64020f3d:	lea    edi,[edx+ecx*1]
64020f40:	movzx  edi,di
64020f43:	jae    0x64021143
64020f49:	cmp    dx,0x7fff
64020f4e:	jae    0x64021143
64020f54:	cmp    di,0xbffd
64020f59:	ja     0x64021143
64020f5f:	cmp    di,0x3fbf
64020f64:	ja     0x64020f73
64020f66:	xor    eax,eax
64020f68:	mov    DWORD PTR [ebp-0x38],eax
64020f6b:	mov    DWORD PTR [ebp-0x3c],eax
64020f6e:	jmp    0x6402115a
64020f73:	test   cx,cx
64020f76:	jne    0x64020f97
64020f78:	inc    edi
64020f79:	test   DWORD PTR [ebp-0x34],0x7fffffff
64020f80:	jne    0x64020f97
64020f82:	cmp    DWORD PTR [ebp-0x38],0x0
64020f86:	jne    0x64020f97
64020f88:	cmp    DWORD PTR [ebp-0x3c],0x0
64020f8c:	jne    0x64020f97
64020f8e:	and    WORD PTR [ebp-0x32],cx
64020f92:	jmp    0x6402115d
64020f97:	xor    ecx,ecx
64020f99:	cmp    dx,cx
64020f9c:	jne    0x64020fbf
64020f9e:	inc    edi
64020f9f:	test   DWORD PTR [ebx+0x8],0x7fffffff
64020fa6:	jne    0x64020fbf
64020fa8:	cmp    DWORD PTR [ebx+0x4],ecx
64020fab:	jne    0x64020fbf
64020fad:	cmp    DWORD PTR [ebx],ecx
64020faf:	jne    0x64020fbf
64020fb1:	mov    DWORD PTR [ebp-0x34],ecx
64020fb4:	mov    DWORD PTR [ebp-0x38],ecx
64020fb7:	mov    DWORD PTR [ebp-0x3c],ecx
64020fba:	jmp    0x6402115d
64020fbf:	and    DWORD PTR [ebp-0x68],ecx
64020fc2:	lea    esi,[ebp-0x28]
64020fc5:	mov    DWORD PTR [ebp-0x58],0x5
64020fcc:	mov    ecx,DWORD PTR [ebp-0x68]
64020fcf:	mov    edx,DWORD PTR [ebp-0x58]
64020fd2:	add    ecx,ecx
64020fd4:	test   edx,edx
64020fd6:	mov    DWORD PTR [ebp-0x64],edx
64020fd9:	jle    0x64021030
64020fdb:	lea    ecx,[ebp+ecx*1-0x3c]
64020fdf:	add    ebx,0x8
64020fe2:	mov    DWORD PTR [ebp-0x5c],ecx
64020fe5:	mov    DWORD PTR [ebp-0x60],ebx
64020fe8:	mov    ecx,DWORD PTR [ebp-0x60]
64020feb:	mov    edx,DWORD PTR [ebp-0x5c]
64020fee:	movzx  edx,WORD PTR [edx]
64020ff1:	movzx  ecx,WORD PTR [ecx]
64020ff4:	and    DWORD PTR [ebp-0x78],0x0
64020ff8:	imul   ecx,edx
64020ffb:	mov    edx,DWORD PTR [esi-0x4]
64020ffe:	lea    ebx,[edx+ecx*1]
64021001:	cmp    ebx,edx
64021003:	jb     0x64021009
64021005:	cmp    ebx,ecx
64021007:	jae    0x64021010
64021009:	mov    DWORD PTR [ebp-0x78],0x1
64021010:	cmp    DWORD PTR [ebp-0x78],0x0
64021014:	mov    DWORD PTR [esi-0x4],ebx
64021017:	je     0x6402101c
64021019:	inc    WORD PTR [esi]
6402101c:	add    DWORD PTR [ebp-0x5c],0x2
64021020:	sub    DWORD PTR [ebp-0x60],0x2
64021024:	dec    DWORD PTR [ebp-0x64]
64021027:	cmp    DWORD PTR [ebp-0x64],0x0
6402102b:	jg     0x64020fe8
6402102d:	mov    ebx,DWORD PTR [ebp-0x70]
64021030:	inc    esi
64021031:	inc    esi
64021032:	inc    DWORD PTR [ebp-0x68]
64021035:	dec    DWORD PTR [ebp-0x58]
64021038:	cmp    DWORD PTR [ebp-0x58],0x0
6402103c:	jg     0x64020fcc
6402103e:	add    edi,0xc002
64021044:	test   di,di
64021047:	jle    0x64021084
64021049:	test   DWORD PTR [ebp-0x24],0x80000000
64021050:	jne    0x6402107f
64021052:	mov    esi,DWORD PTR [ebp-0x28]
64021055:	mov    ecx,DWORD PTR [ebp-0x2c]
64021058:	shl    DWORD PTR [ebp-0x2c],1
6402105b:	shr    ecx,0x1f
6402105e:	mov    edx,esi
64021060:	add    esi,esi
64021062:	or     esi,ecx
64021064:	mov    ecx,DWORD PTR [ebp-0x24]
64021067:	shr    edx,0x1f
6402106a:	add    ecx,ecx
6402106c:	or     ecx,edx
6402106e:	add    edi,0xffff
64021074:	test   di,di
64021077:	mov    DWORD PTR [ebp-0x28],esi
6402107a:	mov    DWORD PTR [ebp-0x24],ecx
6402107d:	jg     0x64021049
6402107f:	test   di,di
64021082:	jg     0x640210d1
64021084:	add    edi,0xffff
6402108a:	test   di,di
6402108d:	jge    0x640210d1
6402108f:	mov    ecx,edi
64021091:	neg    ecx
64021093:	movzx  esi,cx
64021096:	add    edi,esi
64021098:	test   BYTE PTR [ebp-0x2c],0x1
6402109c:	je     0x640210a1
6402109e:	inc    DWORD PTR [ebp-0x50]
640210a1:	mov    ecx,DWORD PTR [ebp-0x24]
640210a4:	mov    ebx,DWORD PTR [ebp-0x28]
640210a7:	mov    edx,DWORD PTR [ebp-0x28]
640210aa:	shr    DWORD PTR [ebp-0x24],1
640210ad:	shl    ecx,0x1f
640210b0:	shr    ebx,1
640210b2:	or     ebx,ecx
640210b4:	mov    ecx,DWORD PTR [ebp-0x2c]
640210b7:	shl    edx,0x1f
640210ba:	shr    ecx,1
640210bc:	or     ecx,edx
640210be:	dec    esi
640210bf:	mov    DWORD PTR [ebp-0x28],ebx
640210c2:	mov    DWORD PTR [ebp-0x2c],ecx
640210c5:	jne    0x64021098
640210c7:	cmp    DWORD PTR [ebp-0x50],esi
640210ca:	je     0x640210d1
640210cc:	or     WORD PTR [ebp-0x2c],0x1
640210d1:	cmp    WORD PTR [ebp-0x2c],0x8000
640210d7:	ja     0x640210ea
640210d9:	mov    ecx,DWORD PTR [ebp-0x2c]
640210dc:	and    ecx,0x1ffff
640210e2:	cmp    ecx,0x18000
640210e8:	jne    0x6402111d
640210ea:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
640210ee:	jne    0x6402111a
640210f0:	and    DWORD PTR [ebp-0x2a],0x0
640210f4:	cmp    DWORD PTR [ebp-0x26],0xffffffff
640210f8:	jne    0x64021115
640210fa:	and    DWORD PTR [ebp-0x26],0x0
640210fe:	cmp    WORD PTR [ebp-0x22],0xffff
64021104:	jne    0x6402110f
64021106:	mov    WORD PTR [ebp-0x22],0x8000
6402110c:	inc    edi
6402110d:	jmp    0x6402111d
6402110f:	inc    WORD PTR [ebp-0x22]
64021113:	jmp    0x6402111d
64021115:	inc    DWORD PTR [ebp-0x26]
64021118:	jmp    0x6402111d
6402111a:	inc    DWORD PTR [ebp-0x2a]
6402111d:	cmp    di,0x7fff
64021122:	mov    esi,DWORD PTR [ebp-0x4c]
64021125:	jae    0x64021143
64021127:	mov    cx,WORD PTR [ebp-0x2a]
6402112b:	mov    WORD PTR [ebp-0x3c],cx
6402112f:	mov    ecx,DWORD PTR [ebp-0x28]
64021132:	mov    DWORD PTR [ebp-0x3a],ecx
64021135:	mov    ecx,DWORD PTR [ebp-0x24]
64021138:	or     edi,eax
6402113a:	mov    DWORD PTR [ebp-0x36],ecx
6402113d:	mov    WORD PTR [ebp-0x32],di
64021141:	jmp    0x6402115d
64021143:	neg    ax
64021146:	sbb    eax,eax
64021148:	and    DWORD PTR [ebp-0x38],0x0
6402114c:	and    eax,0x80000000
64021151:	add    eax,0x7fff8000
64021156:	and    DWORD PTR [ebp-0x3c],0x0
6402115a:	mov    DWORD PTR [ebp-0x34],eax
6402115d:	cmp    DWORD PTR [ebp-0x54],0x0
64021161:	jne    0x64020ed4
64021167:	mov    eax,DWORD PTR [ebp-0x34]
6402116a:	movzx  ecx,WORD PTR [ebp-0x3c]
6402116e:	mov    esi,DWORD PTR [ebp-0x3a]
64021171:	mov    edx,DWORD PTR [ebp-0x36]
64021174:	shr    eax,0x10
64021177:	jmp    0x640211a8
64021179:	mov    DWORD PTR [ebp-0x6c],0x4
64021180:	jmp    0x640211a0
64021182:	xor    esi,esi
64021184:	mov    eax,0x7fff
64021189:	mov    edx,0x80000000
6402118e:	xor    ecx,ecx
64021190:	mov    DWORD PTR [ebp-0x6c],0x2
64021197:	jmp    0x640211a8
64021199:	mov    DWORD PTR [ebp-0x6c],0x1
640211a0:	xor    ecx,ecx
640211a2:	xor    eax,eax
640211a4:	xor    edx,edx
640211a6:	xor    esi,esi
640211a8:	mov    edi,DWORD PTR [ebp-0x7c]
640211ab:	or     eax,DWORD PTR [ebp-0x74]
640211ae:	mov    WORD PTR [edi],cx
640211b1:	mov    WORD PTR [edi+0xa],ax
640211b5:	mov    eax,DWORD PTR [ebp-0x6c]
640211b8:	mov    DWORD PTR [edi+0x2],esi
640211bb:	mov    DWORD PTR [edi+0x6],edx
640211be:	mov    ecx,DWORD PTR [ebp-0x4]
640211c1:	pop    edi
640211c2:	pop    esi
640211c3:	xor    ecx,ebp
640211c5:	pop    ebx
640211c6:	call   0x64012b8c
640211cb:	leave  
640211cc:	ret    
640211cd:	aad    0xb
640211cf:	add    ah,BYTE PTR [ecx+ebp*1+0xc]
640211d3:	add    ah,BYTE PTR [edi+edi*2+0xc]
640211d7:	add    ah,BYTE PTR [edx+esi*4+0xc]
640211db:	add    ah,BYTE PTR [edi+esi*8+0xc]
640211df:	add    ah,BYTE PTR [edi+ebp*1+0xd]
640211e3:	add    ah,BYTE PTR [ebx+eax*2+0xd]
640211e7:	add    ah,BYTE PTR [esi+ebx*4+0xd]
640211eb:	add    ah,BYTE PTR [ecx+ecx*4+0xd]
640211ef:	add    ah,BYTE PTR [eax+ecx*1+0xe]
640211f3:	add    ah,BYTE PTR [ebp+edi*8+0xd]
640211f7:	add    ah,BYTE PTR [esp+ebp*4+0xd]
640211fb:	add    ah,BYTE PTR [ebp+edx*2-0x75]
640211ff:	in     al,dx
64021200:	sub    esp,0x74
64021203:	mov    eax,ds:0x6402d09c
64021208:	xor    eax,ebp
6402120a:	mov    DWORD PTR [ebp-0x4],eax
6402120d:	push   ebx
6402120e:	mov    ebx,DWORD PTR [ebp+0x1c]
64021211:	push   esi
64021212:	push   edi
64021213:	lea    esi,[ebp+0x8]
64021216:	lea    edi,[ebp-0x10]
64021219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402121a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402121b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6402121d:	mov    edx,DWORD PTR [ebp-0x8]
64021220:	mov    ecx,edx
64021222:	mov    eax,0x8000
64021227:	and    ecx,eax
64021229:	and    edx,0x7fff
6402122f:	test   cx,cx
64021232:	mov    DWORD PTR [ebp-0x60],ebx
64021235:	mov    BYTE PTR [ebp-0x30],0xcc
64021239:	mov    BYTE PTR [ebp-0x2f],0xcc
6402123d:	mov    BYTE PTR [ebp-0x2e],0xcc
64021241:	mov    BYTE PTR [ebp-0x2d],0xcc
64021245:	mov    BYTE PTR [ebp-0x2c],0xcc
64021249:	mov    BYTE PTR [ebp-0x2b],0xcc
6402124d:	mov    BYTE PTR [ebp-0x2a],0xcc
64021251:	mov    BYTE PTR [ebp-0x29],0xcc
64021255:	mov    BYTE PTR [ebp-0x28],0xcc
64021259:	mov    BYTE PTR [ebp-0x27],0xcc
6402125d:	mov    BYTE PTR [ebp-0x26],0xfb
64021261:	mov    BYTE PTR [ebp-0x25],0x3f
64021265:	mov    DWORD PTR [ebp-0x74],0x1
6402126c:	mov    DWORD PTR [ebp-0x6c],ecx
6402126f:	je     0x64021277
64021271:	mov    BYTE PTR [ebx+0x2],0x2d
64021275:	jmp    0x6402127b
64021277:	mov    BYTE PTR [ebx+0x2],0x20
6402127b:	test   dx,dx
6402127e:	mov    esi,DWORD PTR [ebp-0xc]
64021281:	mov    edi,DWORD PTR [ebp-0x10]
64021284:	jne    0x640212b4
64021286:	test   esi,esi
64021288:	jne    0x640212b4
6402128a:	test   edi,edi
6402128c:	jne    0x640212b4
6402128e:	and    WORD PTR [ebx],di
64021291:	cmp    cx,ax
64021294:	setne  al
64021297:	dec    al
64021299:	and    al,0xd
6402129b:	add    al,0x20
6402129d:	mov    BYTE PTR [ebx+0x2],al
640212a0:	mov    BYTE PTR [ebx+0x3],0x1
640212a4:	mov    BYTE PTR [ebx+0x4],0x30
640212a8:	mov    BYTE PTR [ebx+0x5],0x0
640212ac:	xor    eax,eax
640212ae:	inc    eax
640212af:	jmp    0x64021a7b
640212b4:	cmp    dx,0x7fff
640212b9:	jne    0x6402135d
640212bf:	mov    eax,0x80000000
640212c4:	cmp    esi,eax
640212c6:	mov    WORD PTR [ebx],0x1
640212cb:	jne    0x640212d1
640212cd:	test   edi,edi
640212cf:	je     0x640212e0
640212d1:	test   esi,0x40000000
640212d7:	jne    0x640212e0
640212d9:	push   0x64027690
640212de:	jmp    0x64021331
640212e0:	test   cx,cx
640212e3:	je     0x640212f8
640212e5:	cmp    esi,0xc0000000
640212eb:	jne    0x640212f8
640212ed:	test   edi,edi
640212ef:	jne    0x6402132c
640212f1:	push   0x64027688
640212f6:	jmp    0x64021305
640212f8:	cmp    esi,eax
640212fa:	jne    0x6402132c
640212fc:	test   edi,edi
640212fe:	jne    0x6402132c
64021300:	push   0x64027680
64021305:	lea    eax,[ebx+0x4]
64021308:	push   0x16
6402130a:	push   eax
6402130b:	call   0x64014548
64021310:	add    esp,0xc
64021313:	xor    esi,esi
64021315:	test   eax,eax
64021317:	je     0x64021326
64021319:	push   esi
6402131a:	push   esi
6402131b:	push   esi
6402131c:	push   esi
6402131d:	push   esi
6402131e:	call   0x640125c8
64021323:	add    esp,0x14
64021326:	mov    BYTE PTR [ebx+0x3],0x5
6402132a:	jmp    0x64021356
6402132c:	push   0x64027678
64021331:	lea    eax,[ebx+0x4]
64021334:	push   0x16
64021336:	push   eax
64021337:	call   0x64014548
6402133c:	add    esp,0xc
6402133f:	xor    esi,esi
64021341:	test   eax,eax
64021343:	je     0x64021352
64021345:	push   esi
64021346:	push   esi
64021347:	push   esi
64021348:	push   esi
64021349:	push   esi
6402134a:	call   0x640125c8
6402134f:	add    esp,0x14
64021352:	mov    BYTE PTR [ebx+0x3],0x6
64021356:	xor    eax,eax
64021358:	jmp    0x64021a7b
6402135d:	movzx  ecx,dx
64021360:	mov    ebx,ecx
64021362:	imul   ecx,ecx,0x4d10
64021368:	shr    ebx,0x8
6402136b:	mov    eax,esi
6402136d:	shr    eax,0x18
64021370:	lea    eax,[ebx+eax*2]
64021373:	imul   eax,eax,0x4d
64021376:	lea    eax,[eax+ecx*1-0x134312f4]
6402137d:	sar    eax,0x10
64021380:	movzx  ecx,ax
64021383:	movsx  ebx,cx
64021386:	mov    DWORD PTR [ebp-0x4c],ecx
64021389:	xor    eax,eax
6402138b:	mov    ecx,0x6402e0a0
64021390:	neg    ebx
64021392:	sub    ecx,0x60
64021395:	cmp    ebx,eax
64021397:	mov    WORD PTR [ebp-0x16],dx
6402139b:	mov    DWORD PTR [ebp-0x1a],esi
6402139e:	mov    DWORD PTR [ebp-0x1e],edi
640213a1:	mov    WORD PTR [ebp-0x20],ax
640213a5:	mov    DWORD PTR [ebp-0x68],ecx
640213a8:	je     0x6402165c
640213ae:	jge    0x640213bd
640213b0:	mov    ecx,0x6402e200
640213b5:	neg    ebx
640213b7:	sub    ecx,0x60
640213ba:	mov    DWORD PTR [ebp-0x68],ecx
640213bd:	cmp    ebx,eax
640213bf:	je     0x6402165c
640213c5:	add    DWORD PTR [ebp-0x68],0x54
640213c9:	mov    ecx,ebx
640213cb:	and    ecx,0x7
640213ce:	sar    ebx,0x3
640213d1:	test   ecx,ecx
640213d3:	je     0x64021652
640213d9:	imul   ecx,ecx,0xc
640213dc:	add    ecx,DWORD PTR [ebp-0x68]
640213df:	cmp    WORD PTR [ecx],0x8000
640213e4:	mov    DWORD PTR [ebp-0x64],ecx
640213e7:	jb     0x640213fc
640213e9:	mov    esi,ecx
640213eb:	lea    edi,[ebp-0x3c]
640213ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640213ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640213f0:	lea    eax,[ebp-0x3c]
640213f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640213f4:	dec    DWORD PTR [ebp-0x3a]
640213f7:	mov    DWORD PTR [ebp-0x64],eax
640213fa:	mov    ecx,eax
640213fc:	movzx  edi,WORD PTR [ecx+0xa]
64021400:	mov    edx,DWORD PTR [ebp-0x16]
64021403:	xor    eax,eax
64021405:	mov    ecx,edi
64021407:	mov    esi,0x7fff
6402140c:	xor    ecx,edx
6402140e:	and    edx,esi
64021410:	and    edi,esi
64021412:	mov    DWORD PTR [ebp-0x48],eax
64021415:	mov    DWORD PTR [ebp-0x10],eax
64021418:	mov    DWORD PTR [ebp-0xc],eax
6402141b:	mov    DWORD PTR [ebp-0x8],eax
6402141e:	and    ecx,0x8000
64021424:	cmp    dx,si
64021427:	lea    eax,[edi+edx*1]
6402142a:	movzx  eax,ax
6402142d:	jae    0x64021636
64021433:	cmp    di,si
64021436:	jae    0x64021636
6402143c:	cmp    ax,0xbffd
64021440:	ja     0x64021636
64021446:	cmp    ax,0x3fbf
6402144a:	ja     0x6402145c
6402144c:	xor    eax,eax
6402144e:	mov    DWORD PTR [ebp-0x18],eax
64021451:	mov    DWORD PTR [ebp-0x1c],eax
64021454:	mov    DWORD PTR [ebp-0x20],eax
64021457:	jmp    0x64021652
6402145c:	xor    esi,esi
6402145e:	cmp    dx,si
64021461:	jne    0x64021480
64021463:	inc    eax
64021464:	test   DWORD PTR [ebp-0x18],0x7fffffff
6402146b:	jne    0x64021480
6402146d:	cmp    DWORD PTR [ebp-0x1c],esi
64021470:	jne    0x64021480
64021472:	cmp    DWORD PTR [ebp-0x20],esi
64021475:	jne    0x64021480
64021477:	mov    WORD PTR [ebp-0x16],si
6402147b:	jmp    0x64021652
64021480:	cmp    di,si
64021483:	jne    0x640214a9
64021485:	mov    edx,DWORD PTR [ebp-0x64]
64021488:	inc    eax
64021489:	test   DWORD PTR [edx+0x8],0x7fffffff
64021490:	jne    0x640214a9
64021492:	cmp    DWORD PTR [edx+0x4],esi
64021495:	jne    0x640214a9
64021497:	cmp    DWORD PTR [edx],esi
64021499:	jne    0x640214a9
6402149b:	mov    DWORD PTR [ebp-0x18],esi
6402149e:	mov    DWORD PTR [ebp-0x1c],esi
640214a1:	mov    DWORD PTR [ebp-0x20],esi
640214a4:	jmp    0x64021652
640214a9:	lea    edi,[ebp-0xc]
640214ac:	mov    DWORD PTR [ebp-0x5c],esi
640214af:	mov    DWORD PTR [ebp-0x44],edi
640214b2:	mov    DWORD PTR [ebp-0x40],0x5
640214b9:	mov    edx,DWORD PTR [ebp-0x5c]
640214bc:	mov    esi,DWORD PTR [ebp-0x40]
640214bf:	add    edx,edx
640214c1:	test   esi,esi
640214c3:	mov    DWORD PTR [ebp-0x50],esi
640214c6:	jle    0x64021520
640214c8:	lea    edx,[ebp+edx*1-0x20]
640214cc:	mov    DWORD PTR [ebp-0x58],edx
640214cf:	mov    edx,DWORD PTR [ebp-0x64]
640214d2:	add    edx,0x8
640214d5:	mov    DWORD PTR [ebp-0x54],edx
640214d8:	mov    edx,DWORD PTR [ebp-0x58]
640214db:	mov    esi,DWORD PTR [ebp-0x54]
640214de:	movzx  esi,WORD PTR [esi]
640214e1:	movzx  edx,WORD PTR [edx]
640214e4:	mov    edi,DWORD PTR [edi-0x4]
640214e7:	imul   edx,esi
640214ea:	and    DWORD PTR [ebp-0x70],0x0
640214ee:	lea    esi,[edi+edx*1]
640214f1:	cmp    esi,edi
640214f3:	jb     0x640214f9
640214f5:	cmp    esi,edx
640214f7:	jae    0x64021500
640214f9:	mov    DWORD PTR [ebp-0x70],0x1
64021500:	cmp    DWORD PTR [ebp-0x70],0x0
64021504:	mov    edi,DWORD PTR [ebp-0x44]
64021507:	mov    DWORD PTR [edi-0x4],esi
6402150a:	je     0x6402150f
6402150c:	inc    WORD PTR [edi]
6402150f:	add    DWORD PTR [ebp-0x58],0x2
64021513:	sub    DWORD PTR [ebp-0x54],0x2
64021517:	dec    DWORD PTR [ebp-0x50]
6402151a:	cmp    DWORD PTR [ebp-0x50],0x0
6402151e:	jg     0x640214d8
64021520:	inc    edi
64021521:	inc    edi
64021522:	inc    DWORD PTR [ebp-0x5c]
64021525:	dec    DWORD PTR [ebp-0x40]
64021528:	cmp    DWORD PTR [ebp-0x40],0x0
6402152c:	mov    DWORD PTR [ebp-0x44],edi
6402152f:	jg     0x640214b9
64021531:	add    eax,0xc002
64021536:	test   ax,ax
64021539:	jle    0x64021576
6402153b:	test   DWORD PTR [ebp-0x8],0x80000000
64021542:	jne    0x64021571
64021544:	mov    edx,DWORD PTR [ebp-0x10]
64021547:	mov    edi,DWORD PTR [ebp-0xc]
6402154a:	mov    esi,DWORD PTR [ebp-0xc]
6402154d:	shl    DWORD PTR [ebp-0x10],1
64021550:	shr    edx,0x1f
64021553:	add    edi,edi
64021555:	or     edi,edx
64021557:	mov    edx,DWORD PTR [ebp-0x8]
6402155a:	shr    esi,0x1f
6402155d:	add    edx,edx
6402155f:	or     edx,esi
64021561:	add    eax,0xffff
64021566:	test   ax,ax
64021569:	mov    DWORD PTR [ebp-0xc],edi
6402156c:	mov    DWORD PTR [ebp-0x8],edx
6402156f:	jg     0x6402153b
64021571:	test   ax,ax
64021574:	jg     0x640215c8
64021576:	add    eax,0xffff
6402157b:	test   ax,ax
6402157e:	jge    0x640215c8
64021580:	mov    edx,eax
64021582:	neg    edx
64021584:	movzx  edx,dx
64021587:	mov    DWORD PTR [ebp-0x44],edx
6402158a:	add    eax,edx
6402158c:	test   BYTE PTR [ebp-0x10],0x1
64021590:	je     0x64021595
64021592:	inc    DWORD PTR [ebp-0x48]
64021595:	mov    edx,DWORD PTR [ebp-0x8]
64021598:	mov    edi,DWORD PTR [ebp-0xc]
6402159b:	mov    esi,DWORD PTR [ebp-0xc]
6402159e:	shr    DWORD PTR [ebp-0x8],1
640215a1:	shl    edx,0x1f
640215a4:	shr    edi,1
640215a6:	or     edi,edx
640215a8:	mov    edx,DWORD PTR [ebp-0x10]
640215ab:	shl    esi,0x1f
640215ae:	shr    edx,1
640215b0:	or     edx,esi
640215b2:	dec    DWORD PTR [ebp-0x44]
640215b5:	mov    DWORD PTR [ebp-0xc],edi
640215b8:	mov    DWORD PTR [ebp-0x10],edx
640215bb:	jne    0x6402158c
640215bd:	cmp    DWORD PTR [ebp-0x48],0x0
640215c1:	je     0x640215c8
640215c3:	or     WORD PTR [ebp-0x10],0x1
640215c8:	cmp    WORD PTR [ebp-0x10],0x8000
640215ce:	ja     0x640215e1
640215d0:	mov    edx,DWORD PTR [ebp-0x10]
640215d3:	and    edx,0x1ffff
640215d9:	cmp    edx,0x18000
640215df:	jne    0x64021614
640215e1:	cmp    DWORD PTR [ebp-0xe],0xffffffff
640215e5:	jne    0x64021611
640215e7:	and    DWORD PTR [ebp-0xe],0x0
640215eb:	cmp    DWORD PTR [ebp-0xa],0xffffffff
640215ef:	jne    0x6402160c
640215f1:	and    DWORD PTR [ebp-0xa],0x0
640215f5:	cmp    WORD PTR [ebp-0x6],0xffff
640215fb:	jne    0x64021606
640215fd:	mov    WORD PTR [ebp-0x6],0x8000
64021603:	inc    eax
64021604:	jmp    0x64021614
64021606:	inc    WORD PTR [ebp-0x6]
6402160a:	jmp    0x64021614
6402160c:	inc    DWORD PTR [ebp-0xa]
6402160f:	jmp    0x64021614
64021611:	inc    DWORD PTR [ebp-0xe]
64021614:	cmp    ax,0x7fff
64021618:	jae    0x64021636
6402161a:	mov    dx,WORD PTR [ebp-0xe]
6402161e:	mov    WORD PTR [ebp-0x20],dx
64021622:	mov    edx,DWORD PTR [ebp-0xc]
64021625:	mov    DWORD PTR [ebp-0x1e],edx
64021628:	mov    edx,DWORD PTR [ebp-0x8]
6402162b:	or     eax,ecx
6402162d:	mov    DWORD PTR [ebp-0x1a],edx
64021630:	mov    WORD PTR [ebp-0x16],ax
64021634:	jmp    0x64021652
64021636:	neg    cx
64021639:	sbb    ecx,ecx
6402163b:	and    DWORD PTR [ebp-0x1c],0x0
6402163f:	and    ecx,0x80000000
64021645:	add    ecx,0x7fff8000
6402164b:	and    DWORD PTR [ebp-0x20],0x0
6402164f:	mov    DWORD PTR [ebp-0x18],ecx
64021652:	test   ebx,ebx
64021654:	jne    0x640213c5
6402165a:	xor    eax,eax
6402165c:	mov    ecx,DWORD PTR [ebp-0x18]
6402165f:	shr    ecx,0x10
64021662:	cmp    cx,0x3fff
64021667:	mov    ebx,0x7fff
6402166c:	jb     0x640218ba
64021672:	mov    esi,DWORD PTR [ebp-0x26]
64021675:	inc    DWORD PTR [ebp-0x4c]
64021678:	movzx  edx,cx
6402167b:	mov    ecx,esi
6402167d:	xor    ecx,edx
6402167f:	and    edx,ebx
64021681:	and    esi,ebx
64021683:	and    ecx,0x8000
64021689:	cmp    dx,bx
6402168c:	lea    edi,[esi+edx*1]
6402168f:	mov    DWORD PTR [ebp-0x58],eax
64021692:	mov    DWORD PTR [ebp-0x10],eax
64021695:	mov    DWORD PTR [ebp-0xc],eax
64021698:	mov    DWORD PTR [ebp-0x8],eax
6402169b:	movzx  edi,di
6402169e:	jae    0x640218a0
640216a4:	cmp    si,bx
640216a7:	jae    0x640218a0
640216ad:	cmp    di,0xbffd
640216b2:	ja     0x640218a0
640216b8:	cmp    di,0x3fbf
640216bd:	ja     0x640216c7
640216bf:	mov    DWORD PTR [ebp-0x18],eax
640216c2:	jmp    0x640218b4
640216c7:	cmp    dx,ax
640216ca:	jne    0x640216e9
640216cc:	inc    edi
640216cd:	test   DWORD PTR [ebp-0x18],0x7fffffff
640216d4:	jne    0x640216e9
640216d6:	cmp    DWORD PTR [ebp-0x1c],eax
640216d9:	jne    0x640216e9
640216db:	cmp    DWORD PTR [ebp-0x20],eax
640216de:	jne    0x640216e9
640216e0:	mov    WORD PTR [ebp-0x16],ax
640216e4:	jmp    0x640218ba
640216e9:	cmp    si,ax
640216ec:	jne    0x64021702
640216ee:	inc    edi
640216ef:	test   DWORD PTR [ebp-0x28],0x7fffffff
640216f6:	jne    0x64021702
640216f8:	cmp    DWORD PTR [ebp-0x2c],eax
640216fb:	jne    0x64021702
640216fd:	cmp    DWORD PTR [ebp-0x30],eax
64021700:	je     0x640216bf
64021702:	and    DWORD PTR [ebp-0x54],0x0
64021706:	lea    eax,[ebp-0xc]
64021709:	mov    DWORD PTR [ebp-0x40],0x5
64021710:	mov    edx,DWORD PTR [ebp-0x54]
64021713:	mov    esi,DWORD PTR [ebp-0x40]
64021716:	add    edx,edx
64021718:	test   esi,esi
6402171a:	mov    DWORD PTR [ebp-0x50],esi
6402171d:	jle    0x64021771
6402171f:	lea    esi,[ebp-0x28]
64021722:	lea    edx,[ebp+edx*1-0x20]
64021726:	mov    DWORD PTR [ebp-0x5c],esi
64021729:	mov    DWORD PTR [ebp-0x48],edx
6402172c:	mov    edx,DWORD PTR [ebp-0x5c]
6402172f:	mov    esi,DWORD PTR [ebp-0x48]
64021732:	movzx  esi,WORD PTR [esi]
64021735:	movzx  edx,WORD PTR [edx]
64021738:	and    DWORD PTR [ebp-0x44],0x0
6402173c:	imul   edx,esi
6402173f:	mov    esi,DWORD PTR [eax-0x4]
64021742:	lea    ebx,[esi+edx*1]
64021745:	cmp    ebx,esi
64021747:	jb     0x6402174d
64021749:	cmp    ebx,edx
6402174b:	jae    0x64021754
6402174d:	mov    DWORD PTR [ebp-0x44],0x1
64021754:	cmp    DWORD PTR [ebp-0x44],0x0
64021758:	mov    DWORD PTR [eax-0x4],ebx
6402175b:	je     0x64021760
6402175d:	inc    WORD PTR [eax]
64021760:	add    DWORD PTR [ebp-0x48],0x2
64021764:	sub    DWORD PTR [ebp-0x5c],0x2
64021768:	dec    DWORD PTR [ebp-0x50]
6402176b:	cmp    DWORD PTR [ebp-0x50],0x0
6402176f:	jg     0x6402172c
64021771:	inc    eax
64021772:	inc    eax
64021773:	inc    DWORD PTR [ebp-0x54]
64021776:	dec    DWORD PTR [ebp-0x40]
64021779:	cmp    DWORD PTR [ebp-0x40],0x0
6402177d:	jg     0x64021710
6402177f:	add    edi,0xc002
64021785:	xor    eax,eax
64021787:	cmp    di,ax
6402178a:	jle    0x640217c8
6402178c:	test   DWORD PTR [ebp-0x8],0x80000000
64021793:	jne    0x640217c3
64021795:	mov    edx,DWORD PTR [ebp-0x10]
64021798:	mov    ebx,DWORD PTR [ebp-0xc]
6402179b:	mov    esi,DWORD PTR [ebp-0xc]
6402179e:	shl    DWORD PTR [ebp-0x10],1
640217a1:	shr    edx,0x1f
640217a4:	add    ebx,ebx
640217a6:	or     ebx,edx
640217a8:	mov    edx,DWORD PTR [ebp-0x8]
640217ab:	shr    esi,0x1f
640217ae:	add    edx,edx
640217b0:	or     edx,esi
640217b2:	add    edi,0xffff
640217b8:	cmp    di,ax
640217bb:	mov    DWORD PTR [ebp-0xc],ebx
640217be:	mov    DWORD PTR [ebp-0x8],edx
640217c1:	jg     0x6402178c
640217c3:	cmp    di,ax
640217c6:	jg     0x64021815
640217c8:	add    edi,0xffff
640217ce:	cmp    di,ax
640217d1:	jge    0x64021815
640217d3:	mov    eax,edi
640217d5:	neg    eax
640217d7:	movzx  eax,ax
640217da:	add    edi,eax
640217dc:	test   BYTE PTR [ebp-0x10],0x1
640217e0:	je     0x640217e5
640217e2:	inc    DWORD PTR [ebp-0x58]
640217e5:	mov    edx,DWORD PTR [ebp-0x8]
640217e8:	mov    ebx,DWORD PTR [ebp-0xc]
640217eb:	mov    esi,DWORD PTR [ebp-0xc]
640217ee:	shr    DWORD PTR [ebp-0x8],1
640217f1:	shl    edx,0x1f
640217f4:	shr    ebx,1
640217f6:	or     ebx,edx
640217f8:	mov    edx,DWORD PTR [ebp-0x10]
640217fb:	shl    esi,0x1f
640217fe:	shr    edx,1
64021800:	or     edx,esi
64021802:	dec    eax
64021803:	mov    DWORD PTR [ebp-0xc],ebx
64021806:	mov    DWORD PTR [ebp-0x10],edx
64021809:	jne    0x640217dc
6402180b:	cmp    DWORD PTR [ebp-0x58],eax
6402180e:	je     0x64021815
64021810:	or     WORD PTR [ebp-0x10],0x1
64021815:	cmp    WORD PTR [ebp-0x10],0x8000
6402181b:	ja     0x6402182e
6402181d:	mov    edx,DWORD PTR [ebp-0x10]
64021820:	and    edx,0x1ffff
64021826:	cmp    edx,0x18000
6402182c:	jne    0x6402185f
6402182e:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64021832:	jne    0x6402185c
64021834:	cmp    DWORD PTR [ebp-0xa],0xffffffff
64021838:	mov    DWORD PTR [ebp-0xe],eax
6402183b:	jne    0x64021857
6402183d:	cmp    WORD PTR [ebp-0x6],0xffff
64021843:	mov    DWORD PTR [ebp-0xa],eax
64021846:	jne    0x64021851
64021848:	mov    WORD PTR [ebp-0x6],0x8000
6402184e:	inc    edi
6402184f:	jmp    0x6402185f
64021851:	inc    WORD PTR [ebp-0x6]
64021855:	jmp    0x6402185f
64021857:	inc    DWORD PTR [ebp-0xa]
6402185a:	jmp    0x6402185f
6402185c:	inc    DWORD PTR [ebp-0xe]
6402185f:	cmp    di,0x7fff
64021864:	jb     0x64021884
64021866:	neg    cx
64021869:	mov    DWORD PTR [ebp-0x1c],eax
6402186c:	mov    DWORD PTR [ebp-0x20],eax
6402186f:	sbb    ecx,ecx
64021871:	and    ecx,0x80000000
64021877:	add    ecx,0x7fff8000
6402187d:	mov    DWORD PTR [ebp-0x18],ecx
64021880:	xor    eax,eax
64021882:	jmp    0x640218ba
64021884:	mov    ax,WORD PTR [ebp-0xe]
64021888:	mov    WORD PTR [ebp-0x20],ax
6402188c:	mov    eax,DWORD PTR [ebp-0xc]
6402188f:	mov    DWORD PTR [ebp-0x1e],eax
64021892:	mov    eax,DWORD PTR [ebp-0x8]
64021895:	or     edi,ecx
64021897:	mov    DWORD PTR [ebp-0x1a],eax
6402189a:	mov    WORD PTR [ebp-0x16],di
6402189e:	jmp    0x64021880
640218a0:	neg    cx
640218a3:	sbb    ecx,ecx
640218a5:	and    ecx,0x80000000
640218ab:	add    ecx,0x7fff8000
640218b1:	mov    DWORD PTR [ebp-0x18],ecx
640218b4:	mov    DWORD PTR [ebp-0x1c],eax
640218b7:	mov    DWORD PTR [ebp-0x20],eax
640218ba:	test   BYTE PTR [ebp+0x18],0x1
640218be:	mov    edx,DWORD PTR [ebp-0x60]
640218c1:	mov    ecx,DWORD PTR [ebp-0x4c]
640218c4:	mov    WORD PTR [edx],cx
640218c7:	je     0x640218fb
640218c9:	movsx  ecx,cx
640218cc:	add    DWORD PTR [ebp+0x14],ecx
640218cf:	cmp    DWORD PTR [ebp+0x14],eax
640218d2:	jg     0x640218fb
640218d4:	and    WORD PTR [edx],0x0
640218d8:	cmp    WORD PTR [ebp-0x6c],0x8000
640218de:	mov    BYTE PTR [edx+0x3],0x1
640218e2:	setne  al
640218e5:	dec    al
640218e7:	and    al,0xd
640218e9:	add    al,0x20
640218eb:	mov    BYTE PTR [edx+0x2],al
640218ee:	mov    BYTE PTR [edx+0x4],0x30
640218f2:	mov    BYTE PTR [edx+0x5],0x0
640218f6:	jmp    0x640212ac
640218fb:	push   0x15
640218fd:	pop    ecx
640218fe:	cmp    DWORD PTR [ebp+0x14],ecx
64021901:	jle    0x64021906
64021903:	mov    DWORD PTR [ebp+0x14],ecx
64021906:	mov    esi,DWORD PTR [ebp-0x18]
64021909:	shr    esi,0x10
6402190c:	push   0x8
6402190e:	sub    esi,0x3ffe
64021914:	mov    WORD PTR [ebp-0x16],ax
64021918:	pop    ebx
64021919:	mov    eax,DWORD PTR [ebp-0x20]
6402191c:	mov    edi,DWORD PTR [ebp-0x1c]
6402191f:	mov    ecx,DWORD PTR [ebp-0x1c]
64021922:	shl    DWORD PTR [ebp-0x20],1
64021925:	shr    eax,0x1f
64021928:	add    edi,edi
6402192a:	or     edi,eax
6402192c:	mov    eax,DWORD PTR [ebp-0x18]
6402192f:	shr    ecx,0x1f
64021932:	add    eax,eax
64021934:	or     eax,ecx
64021936:	dec    ebx
64021937:	mov    DWORD PTR [ebp-0x1c],edi
6402193a:	mov    DWORD PTR [ebp-0x18],eax
6402193d:	jne    0x64021919
6402193f:	test   esi,esi
64021941:	jge    0x64021975
64021943:	neg    esi
64021945:	and    esi,0xff
6402194b:	jle    0x64021975
6402194d:	mov    eax,DWORD PTR [ebp-0x18]
64021950:	mov    edi,DWORD PTR [ebp-0x1c]
64021953:	mov    ecx,DWORD PTR [ebp-0x1c]
64021956:	shr    DWORD PTR [ebp-0x18],1
64021959:	shl    eax,0x1f
6402195c:	shr    edi,1
6402195e:	or     edi,eax
64021960:	mov    eax,DWORD PTR [ebp-0x20]
64021963:	shl    ecx,0x1f
64021966:	shr    eax,1
64021968:	or     eax,ecx
6402196a:	dec    esi
6402196b:	test   esi,esi
6402196d:	mov    DWORD PTR [ebp-0x1c],edi
64021970:	mov    DWORD PTR [ebp-0x20],eax
64021973:	jg     0x6402194d
64021975:	mov    eax,DWORD PTR [ebp+0x14]
64021978:	inc    eax
64021979:	test   eax,eax
6402197b:	lea    ebx,[edx+0x4]
6402197e:	mov    DWORD PTR [ebp-0x40],ebx
64021981:	mov    DWORD PTR [ebp-0x4c],eax
64021984:	jle    0x64021a3f
6402198a:	mov    edx,DWORD PTR [ebp-0x20]
6402198d:	mov    eax,DWORD PTR [ebp-0x1c]
64021990:	lea    esi,[ebp-0x20]
64021993:	lea    edi,[ebp-0x3c]
64021996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021999:	shl    DWORD PTR [ebp-0x20],1
6402199c:	mov    edi,DWORD PTR [ebp-0x20]
6402199f:	shl    DWORD PTR [ebp-0x20],1
640219a2:	shr    edx,0x1f
640219a5:	lea    ecx,[eax+eax*1]
640219a8:	or     ecx,edx
640219aa:	mov    edx,DWORD PTR [ebp-0x18]
640219ad:	mov    esi,eax
640219af:	shr    esi,0x1f
640219b2:	add    edx,edx
640219b4:	or     edx,esi
640219b6:	mov    eax,ecx
640219b8:	lea    esi,[ecx+ecx*1]
640219bb:	shr    eax,0x1f
640219be:	lea    ecx,[edx+edx*1]
640219c1:	mov    edx,DWORD PTR [ebp-0x3c]
640219c4:	shr    edi,0x1f
640219c7:	or     ecx,eax
640219c9:	mov    eax,DWORD PTR [ebp-0x20]
640219cc:	or     esi,edi
640219ce:	lea    edi,[edx+eax*1]
640219d1:	cmp    edi,eax
640219d3:	jb     0x640219d9
640219d5:	cmp    edi,edx
640219d7:	jae    0x640219f1
640219d9:	lea    eax,[esi+0x1]
640219dc:	xor    edx,edx
640219de:	cmp    eax,esi
640219e0:	jb     0x640219e7
640219e2:	cmp    eax,0x1
640219e5:	jae    0x640219ea
640219e7:	xor    edx,edx
640219e9:	inc    edx
640219ea:	test   edx,edx
640219ec:	mov    esi,eax
640219ee:	je     0x640219f1
640219f0:	inc    ecx
640219f1:	mov    eax,DWORD PTR [ebp-0x38]
640219f4:	lea    edx,[eax+esi*1]
640219f7:	cmp    edx,esi
640219f9:	mov    DWORD PTR [ebp-0x44],edx
640219fc:	jb     0x64021a02
640219fe:	cmp    edx,eax
64021a00:	jae    0x64021a03
64021a02:	inc    ecx
64021a03:	add    ecx,DWORD PTR [ebp-0x34]
64021a06:	shr    edx,0x1f
64021a09:	add    ecx,ecx
64021a0b:	or     ecx,edx
64021a0d:	lea    esi,[edi+edi*1]
64021a10:	mov    DWORD PTR [ebp-0x20],esi
64021a13:	mov    esi,DWORD PTR [ebp-0x44]
64021a16:	mov    DWORD PTR [ebp-0x18],ecx
64021a19:	shr    ecx,0x18
64021a1c:	add    esi,esi
64021a1e:	add    cl,0x30
64021a21:	mov    eax,edi
64021a23:	shr    eax,0x1f
64021a26:	or     esi,eax
64021a28:	mov    BYTE PTR [ebx],cl
64021a2a:	inc    ebx
64021a2b:	dec    DWORD PTR [ebp-0x4c]
64021a2e:	cmp    DWORD PTR [ebp-0x4c],0x0
64021a32:	mov    DWORD PTR [ebp-0x1c],esi
64021a35:	mov    BYTE PTR [ebp-0x15],0x0
64021a39:	jg     0x6402198a
64021a3f:	dec    ebx
64021a40:	mov    al,BYTE PTR [ebx]
64021a42:	dec    ebx
64021a43:	cmp    al,0x35
64021a45:	jge    0x64021a55
64021a47:	mov    ecx,DWORD PTR [ebp-0x40]
64021a4a:	jmp    0x64021a90
64021a4c:	cmp    BYTE PTR [ebx],0x39
64021a4f:	jne    0x64021a5a
64021a51:	mov    BYTE PTR [ebx],0x30
64021a54:	dec    ebx
64021a55:	cmp    ebx,DWORD PTR [ebp-0x40]
64021a58:	jae    0x64021a4c
64021a5a:	cmp    ebx,DWORD PTR [ebp-0x40]
64021a5d:	mov    eax,DWORD PTR [ebp-0x60]
64021a60:	jae    0x64021a66
64021a62:	inc    ebx
64021a63:	inc    WORD PTR [eax]
64021a66:	inc    BYTE PTR [ebx]
64021a68:	sub    bl,al
64021a6a:	sub    bl,0x3
64021a6d:	movsx  ecx,bl
64021a70:	mov    BYTE PTR [eax+0x3],bl
64021a73:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
64021a78:	mov    eax,DWORD PTR [ebp-0x74]
64021a7b:	mov    ecx,DWORD PTR [ebp-0x4]
64021a7e:	pop    edi
64021a7f:	pop    esi
64021a80:	xor    ecx,ebp
64021a82:	pop    ebx
64021a83:	call   0x64012b8c
64021a88:	leave  
64021a89:	ret    
64021a8a:	cmp    BYTE PTR [ebx],0x30
64021a8d:	jne    0x64021a94
64021a8f:	dec    ebx
64021a90:	cmp    ebx,ecx
64021a92:	jae    0x64021a8a
64021a94:	cmp    ebx,ecx
64021a96:	mov    eax,DWORD PTR [ebp-0x60]
64021a99:	jae    0x64021a68
64021a9b:	and    WORD PTR [eax],0x0
64021a9f:	cmp    WORD PTR [ebp-0x6c],0x8000
64021aa5:	mov    BYTE PTR [eax+0x3],0x1
64021aa9:	setne  dl
64021aac:	dec    dl
64021aae:	and    dl,0xd
64021ab1:	add    dl,0x20
64021ab4:	mov    BYTE PTR [eax+0x2],dl
64021ab7:	mov    BYTE PTR [ecx],0x30
64021aba:	mov    BYTE PTR [eax+0x5],0x0
64021abe:	jmp    0x640212ac
64021ac3:	xor    eax,eax
64021ac5:	test   bl,0x10
64021ac8:	je     0x64021acb
64021aca:	inc    eax
64021acb:	test   bl,0x8
64021ace:	je     0x64021ad3
64021ad0:	or     eax,0x4
64021ad3:	test   bl,0x4
64021ad6:	je     0x64021adb
64021ad8:	or     eax,0x8
64021adb:	test   bl,0x2
64021ade:	je     0x64021ae3
64021ae0:	or     eax,0x10
64021ae3:	test   bl,0x1
64021ae6:	je     0x64021aeb
64021ae8:	or     eax,0x20
64021aeb:	test   ebx,0x80000
64021af1:	je     0x64021af6
64021af3:	or     eax,0x2
64021af6:	mov    ecx,ebx
64021af8:	mov    edx,0x300
64021afd:	and    ecx,edx
64021aff:	push   esi
64021b00:	mov    esi,0x200
64021b05:	je     0x64021b2a
64021b07:	cmp    ecx,0x100
64021b0d:	je     0x64021b25
64021b0f:	cmp    ecx,esi
64021b11:	je     0x64021b1e
64021b13:	cmp    ecx,edx
64021b15:	jne    0x64021b2a
64021b17:	or     eax,0xc00
64021b1c:	jmp    0x64021b2a
64021b1e:	or     eax,0x800
64021b23:	jmp    0x64021b2a
64021b25:	or     eax,0x400
64021b2a:	mov    ecx,ebx
64021b2c:	and    ecx,0x30000
64021b32:	je     0x64021b40
64021b34:	cmp    ecx,0x10000
64021b3a:	jne    0x64021b42
64021b3c:	or     eax,esi
64021b3e:	jmp    0x64021b42
64021b40:	or     eax,edx
64021b42:	test   ebx,0x40000
64021b48:	pop    esi
64021b49:	je     0x64021b50
64021b4b:	or     eax,0x1000
64021b50:	ret    
64021b51:	xor    eax,eax
64021b53:	test   dl,0x10
64021b56:	je     0x64021b5d
64021b58:	mov    eax,0x80
64021b5d:	test   dl,0x8
64021b60:	push   ebx
64021b61:	push   esi
64021b62:	push   edi
64021b63:	mov    ebx,0x200
64021b68:	je     0x64021b6c
64021b6a:	or     eax,ebx
64021b6c:	test   dl,0x4
64021b6f:	je     0x64021b76
64021b71:	or     eax,0x400
64021b76:	test   dl,0x2
64021b79:	je     0x64021b80
64021b7b:	or     eax,0x800
64021b80:	test   dl,0x1
64021b83:	je     0x64021b8a
64021b85:	or     eax,0x1000
64021b8a:	test   edx,0x80000
64021b90:	mov    edi,0x100
64021b95:	je     0x64021b99
64021b97:	or     eax,edi
64021b99:	mov    ecx,edx
64021b9b:	mov    esi,0x300
64021ba0:	and    ecx,esi
64021ba2:	je     0x64021bc3
64021ba4:	cmp    ecx,edi
64021ba6:	je     0x64021bbe
64021ba8:	cmp    ecx,ebx
64021baa:	je     0x64021bb7
64021bac:	cmp    ecx,esi
64021bae:	jne    0x64021bc3
64021bb0:	or     eax,0x6000
64021bb5:	jmp    0x64021bc3
64021bb7:	or     eax,0x4000
64021bbc:	jmp    0x64021bc3
64021bbe:	or     eax,0x2000
64021bc3:	mov    ecx,0x3000000
64021bc8:	pop    edi
64021bc9:	and    edx,ecx
64021bcb:	cmp    edx,0x1000000
64021bd1:	pop    esi
64021bd2:	pop    ebx
64021bd3:	je     0x64021beb
64021bd5:	cmp    edx,0x2000000
64021bdb:	je     0x64021be7
64021bdd:	cmp    edx,ecx
64021bdf:	jne    0x64021bf0
64021be1:	or     eax,0x8000
64021be6:	ret    
64021be7:	or     eax,0x40
64021bea:	ret    
64021beb:	or     eax,0x8040
64021bf0:	ret    
64021bf1:	sub    esp,0x10
64021bf4:	push   ebx
64021bf5:	push   ebp
64021bf6:	push   esi
64021bf7:	push   edi
64021bf8:	fstcw  WORD PTR [esp+0x14]
64021bfd:	mov    ebx,DWORD PTR [esp+0x14]
64021c01:	xor    edx,edx
64021c03:	test   bl,0x1
64021c06:	je     0x64021c0b
64021c08:	push   0x10
64021c0a:	pop    edx
64021c0b:	test   bl,0x4
64021c0e:	je     0x64021c13
64021c10:	or     edx,0x8
64021c13:	test   bl,0x8
64021c16:	je     0x64021c1b
64021c18:	or     edx,0x4
64021c1b:	test   bl,0x10
64021c1e:	je     0x64021c23
64021c20:	or     edx,0x2
64021c23:	test   bl,0x20
64021c26:	je     0x64021c2b
64021c28:	or     edx,0x1
64021c2b:	test   bl,0x2
64021c2e:	je     0x64021c36
64021c30:	or     edx,0x80000
64021c36:	movzx  ecx,bx
64021c39:	mov    eax,ecx
64021c3b:	mov    edi,0xc00
64021c40:	and    eax,edi
64021c42:	mov    ebp,0x300
64021c47:	mov    esi,0x200
64021c4c:	je     0x64021c6e
64021c4e:	cmp    eax,0x400
64021c53:	je     0x64021c68
64021c55:	cmp    eax,0x800
64021c5a:	je     0x64021c64
64021c5c:	cmp    eax,edi
64021c5e:	jne    0x64021c6e
64021c60:	or     edx,ebp
64021c62:	jmp    0x64021c6e
64021c64:	or     edx,esi
64021c66:	jmp    0x64021c6e
64021c68:	or     edx,0x100
64021c6e:	and    ecx,ebp
64021c70:	je     0x64021c7e
64021c72:	cmp    ecx,esi
64021c74:	jne    0x64021c84
64021c76:	or     edx,0x10000
64021c7c:	jmp    0x64021c84
64021c7e:	or     edx,0x20000
64021c84:	test   bx,0x1000
64021c89:	je     0x64021c91
64021c8b:	or     edx,0x40000
64021c91:	mov    esi,DWORD PTR [esp+0x28]
64021c95:	mov    ecx,DWORD PTR [esp+0x24]
64021c99:	mov    eax,esi
64021c9b:	not    eax
64021c9d:	and    eax,edx
64021c9f:	and    ecx,esi
64021ca1:	or     eax,ecx
64021ca3:	cmp    eax,edx
64021ca5:	mov    DWORD PTR [esp+0x1c],eax
64021ca9:	je     0x64021d59
64021caf:	mov    ebx,eax
64021cb1:	call   0x64021ac3
64021cb6:	movzx  eax,ax
64021cb9:	mov    DWORD PTR [esp+0x10],eax
64021cbd:	fldcw  WORD PTR [esp+0x10]
64021cc1:	fstcw  WORD PTR [esp+0x10]
64021cc6:	mov    ebx,DWORD PTR [esp+0x10]
64021cca:	xor    edx,edx
64021ccc:	test   bl,0x1
64021ccf:	je     0x64021cd4
64021cd1:	push   0x10
64021cd3:	pop    edx
64021cd4:	test   bl,0x4
64021cd7:	je     0x64021cdc
64021cd9:	or     edx,0x8
64021cdc:	test   bl,0x8
64021cdf:	je     0x64021ce4
64021ce1:	or     edx,0x4
64021ce4:	test   bl,0x10
64021ce7:	je     0x64021cec
64021ce9:	or     edx,0x2
64021cec:	test   bl,0x20
64021cef:	je     0x64021cf4
64021cf1:	or     edx,0x1
64021cf4:	test   bl,0x2
64021cf7:	je     0x64021cff
64021cf9:	or     edx,0x80000
64021cff:	movzx  ecx,bx
64021d02:	mov    eax,ecx
64021d04:	and    eax,edi
64021d06:	je     0x64021d2c
64021d08:	cmp    eax,0x400
64021d0d:	je     0x64021d26
64021d0f:	cmp    eax,0x800
64021d14:	je     0x64021d1e
64021d16:	cmp    eax,edi
64021d18:	jne    0x64021d2c
64021d1a:	or     edx,ebp
64021d1c:	jmp    0x64021d2c
64021d1e:	or     edx,0x200
64021d24:	jmp    0x64021d2c
64021d26:	or     edx,0x100
64021d2c:	and    ecx,ebp
64021d2e:	je     0x64021d40
64021d30:	cmp    ecx,0x200
64021d36:	jne    0x64021d46
64021d38:	or     edx,0x10000
64021d3e:	jmp    0x64021d46
64021d40:	or     edx,0x20000
64021d46:	test   bx,0x1000
64021d4b:	je     0x64021d53
64021d4d:	or     edx,0x40000
64021d53:	mov    eax,edx
64021d55:	mov    DWORD PTR [esp+0x1c],edx
64021d59:	cmp    DWORD PTR ds:0x64032624,0x0
64021d60:	je     0x64021eec
64021d66:	and    esi,0x308031f
64021d6c:	mov    edi,esi
64021d6e:	stmxcsr DWORD PTR [esp+0x18]
64021d73:	mov    eax,DWORD PTR [esp+0x18]
64021d77:	xor    esi,esi
64021d79:	test   al,al
64021d7b:	jns    0x64021d80
64021d7d:	push   0x10
64021d7f:	pop    esi
64021d80:	test   ax,0x200
64021d84:	je     0x64021d89
64021d86:	or     esi,0x8
64021d89:	test   ax,0x400
64021d8d:	je     0x64021d92
64021d8f:	or     esi,0x4
64021d92:	test   ax,0x800
64021d96:	je     0x64021d9b
64021d98:	or     esi,0x2
64021d9b:	test   ax,0x1000
64021d9f:	je     0x64021da4
64021da1:	or     esi,0x1
64021da4:	test   ax,0x100
64021da8:	je     0x64021db0
64021daa:	or     esi,0x80000
64021db0:	mov    ecx,eax
64021db2:	mov    ebp,0x6000
64021db7:	and    ecx,ebp
64021db9:	je     0x64021de5
64021dbb:	cmp    ecx,0x2000
64021dc1:	je     0x64021ddf
64021dc3:	cmp    ecx,0x4000
64021dc9:	je     0x64021dd7
64021dcb:	cmp    ecx,ebp
64021dcd:	jne    0x64021de5
64021dcf:	or     esi,0x300
64021dd5:	jmp    0x64021de5
64021dd7:	or     esi,0x200
64021ddd:	jmp    0x64021de5
64021ddf:	or     esi,0x100
64021de5:	mov    ebx,0x8040
64021dea:	and    eax,ebx
64021dec:	sub    eax,0x40
64021def:	je     0x64021e0d
64021df1:	sub    eax,0x7fc0
64021df6:	je     0x64021e05
64021df8:	sub    eax,0x40
64021dfb:	jne    0x64021e13
64021dfd:	or     esi,0x1000000
64021e03:	jmp    0x64021e13
64021e05:	or     esi,0x3000000
64021e0b:	jmp    0x64021e13
64021e0d:	or     esi,0x2000000
64021e13:	mov    edx,edi
64021e15:	and    edi,DWORD PTR [esp+0x24]
64021e19:	not    edx
64021e1b:	and    edx,esi
64021e1d:	or     edx,edi
64021e1f:	cmp    edx,esi
64021e21:	jne    0x64021e2a
64021e23:	mov    eax,esi
64021e25:	jmp    0x64021ed5
64021e2a:	call   0x64021b51
64021e2f:	push   eax
64021e30:	mov    DWORD PTR [esp+0x2c],eax
64021e34:	call   0x640220c0
64021e39:	pop    ecx
64021e3a:	stmxcsr DWORD PTR [esp+0x28]
64021e3f:	mov    eax,DWORD PTR [esp+0x28]
64021e43:	xor    edx,edx
64021e45:	test   al,al
64021e47:	jns    0x64021e4c
64021e49:	push   0x10
64021e4b:	pop    edx
64021e4c:	mov    edi,0x200
64021e51:	test   edi,eax
64021e53:	je     0x64021e58
64021e55:	or     edx,0x8
64021e58:	test   ax,0x400
64021e5c:	je     0x64021e61
64021e5e:	or     edx,0x4
64021e61:	test   ax,0x800
64021e65:	je     0x64021e6a
64021e67:	or     edx,0x2
64021e6a:	test   ax,0x1000
64021e6e:	je     0x64021e73
64021e70:	or     edx,0x1
64021e73:	mov    esi,0x100
64021e78:	test   esi,eax
64021e7a:	je     0x64021e82
64021e7c:	or     edx,0x80000
64021e82:	mov    ecx,eax
64021e84:	and    ecx,ebp
64021e86:	je     0x64021eaa
64021e88:	cmp    ecx,0x2000
64021e8e:	je     0x64021ea8
64021e90:	cmp    ecx,0x4000
64021e96:	je     0x64021ea4
64021e98:	cmp    ecx,ebp
64021e9a:	jne    0x64021eaa
64021e9c:	or     edx,0x300
64021ea2:	jmp    0x64021eaa
64021ea4:	or     edx,edi
64021ea6:	jmp    0x64021eaa
64021ea8:	or     edx,esi
64021eaa:	and    eax,ebx
64021eac:	sub    eax,0x40
64021eaf:	je     0x64021ecd
64021eb1:	sub    eax,0x7fc0
64021eb6:	je     0x64021ec5
64021eb8:	sub    eax,0x40
64021ebb:	jne    0x64021ed3
64021ebd:	or     edx,0x1000000
64021ec3:	jmp    0x64021ed3
64021ec5:	or     edx,0x3000000
64021ecb:	jmp    0x64021ed3
64021ecd:	or     edx,0x2000000
64021ed3:	mov    eax,edx
64021ed5:	mov    ecx,DWORD PTR [esp+0x1c]
64021ed9:	mov    edx,eax
64021edb:	xor    edx,ecx
64021edd:	or     eax,ecx
64021edf:	test   edx,0x8031f
64021ee5:	je     0x64021eec
64021ee7:	or     eax,0x80000000
64021eec:	pop    edi
64021eed:	pop    esi
64021eee:	pop    ebp
64021eef:	pop    ebx
64021ef0:	add    esp,0x10
64021ef3:	ret    
64021ef4:	push   ebp
64021ef5:	mov    ebp,esp
64021ef7:	sub    esp,0x18
64021efa:	mov    eax,ds:0x6402d09c
64021eff:	xor    eax,ebp
64021f01:	mov    DWORD PTR [ebp-0x4],eax
64021f04:	mov    eax,DWORD PTR [ebp+0x10]
64021f07:	push   ebx
64021f08:	push   esi
64021f09:	xor    esi,esi
64021f0b:	cmp    DWORD PTR [ebp+0xc],esi
64021f0e:	push   edi
64021f0f:	mov    DWORD PTR [ebp-0x18],0x404e
64021f16:	mov    DWORD PTR [eax],esi
64021f18:	mov    DWORD PTR [eax+0x4],esi
64021f1b:	mov    DWORD PTR [eax+0x8],esi
64021f1e:	jbe    0x6402206a
64021f24:	mov    edx,DWORD PTR [eax]
64021f26:	mov    ebx,DWORD PTR [eax+0x4]
64021f29:	mov    esi,eax
64021f2b:	lea    edi,[ebp-0x10]
64021f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021f31:	mov    ecx,edx
64021f33:	shr    ecx,0x1f
64021f36:	lea    edi,[edx+edx*1]
64021f39:	lea    edx,[ebx+ebx*1]
64021f3c:	or     edx,ecx
64021f3e:	mov    ecx,DWORD PTR [eax+0x8]
64021f41:	mov    esi,ebx
64021f43:	shr    esi,0x1f
64021f46:	add    ecx,ecx
64021f48:	or     ecx,esi
64021f4a:	mov    DWORD PTR [ebp-0x14],edi
64021f4d:	mov    esi,edi
64021f4f:	and    DWORD PTR [ebp-0x14],0x0
64021f53:	mov    ebx,edx
64021f55:	shr    ebx,0x1f
64021f58:	add    ecx,ecx
64021f5a:	shr    edi,0x1f
64021f5d:	or     ecx,ebx
64021f5f:	mov    ebx,DWORD PTR [ebp-0x10]
64021f62:	add    esi,esi
64021f64:	add    edx,edx
64021f66:	or     edx,edi
64021f68:	lea    edi,[esi+ebx*1]
64021f6b:	cmp    edi,esi
64021f6d:	mov    DWORD PTR [eax],esi
64021f6f:	mov    DWORD PTR [eax+0x4],edx
64021f72:	mov    DWORD PTR [eax+0x8],ecx
64021f75:	jb     0x64021f7b
64021f77:	cmp    edi,ebx
64021f79:	jae    0x64021f82
64021f7b:	mov    DWORD PTR [ebp-0x14],0x1
64021f82:	xor    ebx,ebx
64021f84:	cmp    DWORD PTR [ebp-0x14],ebx
64021f87:	mov    DWORD PTR [eax],edi
64021f89:	je     0x64021fa5
64021f8b:	lea    esi,[edx+0x1]
64021f8e:	cmp    esi,edx
64021f90:	jb     0x64021f97
64021f92:	cmp    esi,0x1
64021f95:	jae    0x64021f9a
64021f97:	xor    ebx,ebx
64021f99:	inc    ebx
64021f9a:	test   ebx,ebx
64021f9c:	mov    DWORD PTR [eax+0x4],esi
64021f9f:	je     0x64021fa5
64021fa1:	inc    ecx
64021fa2:	mov    DWORD PTR [eax+0x8],ecx
64021fa5:	mov    ecx,DWORD PTR [eax+0x4]
64021fa8:	mov    edx,DWORD PTR [ebp-0xc]
64021fab:	lea    ebx,[ecx+edx*1]
64021fae:	xor    esi,esi
64021fb0:	cmp    ebx,ecx
64021fb2:	jb     0x64021fb8
64021fb4:	cmp    ebx,edx
64021fb6:	jae    0x64021fbb
64021fb8:	xor    esi,esi
64021fba:	inc    esi
64021fbb:	test   esi,esi
64021fbd:	mov    DWORD PTR [eax+0x4],ebx
64021fc0:	je     0x64021fc5
64021fc2:	inc    DWORD PTR [eax+0x8]
64021fc5:	mov    ecx,DWORD PTR [ebp-0x8]
64021fc8:	add    DWORD PTR [eax+0x8],ecx
64021fcb:	and    DWORD PTR [ebp-0x14],0x0
64021fcf:	lea    ecx,[edi+edi*1]
64021fd2:	mov    edx,edi
64021fd4:	shr    edx,0x1f
64021fd7:	lea    edi,[ebx+ebx*1]
64021fda:	or     edi,edx
64021fdc:	mov    edx,DWORD PTR [eax+0x8]
64021fdf:	mov    esi,ebx
64021fe1:	shr    esi,0x1f
64021fe4:	lea    ebx,[edx+edx*1]
64021fe7:	mov    edx,DWORD PTR [ebp+0x8]
64021fea:	or     ebx,esi
64021fec:	mov    DWORD PTR [eax],ecx
64021fee:	mov    DWORD PTR [eax+0x4],edi
64021ff1:	mov    DWORD PTR [eax+0x8],ebx
64021ff4:	movsx  edx,BYTE PTR [edx]
64021ff7:	lea    esi,[ecx+edx*1]
64021ffa:	cmp    esi,ecx
64021ffc:	mov    DWORD PTR [ebp-0x10],edx
64021fff:	jb     0x64022005
64022001:	cmp    esi,edx
64022003:	jae    0x6402200c
64022005:	mov    DWORD PTR [ebp-0x14],0x1
6402200c:	cmp    DWORD PTR [ebp-0x14],0x0
64022010:	mov    DWORD PTR [eax],esi
64022012:	je     0x64022030
64022014:	lea    ecx,[edi+0x1]
64022017:	xor    edx,edx
64022019:	cmp    ecx,edi
6402201b:	jb     0x64022022
6402201d:	cmp    ecx,0x1
64022020:	jae    0x64022025
64022022:	xor    edx,edx
64022024:	inc    edx
64022025:	test   edx,edx
64022027:	mov    DWORD PTR [eax+0x4],ecx
6402202a:	je     0x64022030
6402202c:	inc    ebx
6402202d:	mov    DWORD PTR [eax+0x8],ebx
64022030:	dec    DWORD PTR [ebp+0xc]
64022033:	inc    DWORD PTR [ebp+0x8]
64022036:	cmp    DWORD PTR [ebp+0xc],0x0
6402203a:	ja     0x64021f24
64022040:	xor    esi,esi
64022042:	jmp    0x6402206a
64022044:	mov    ecx,DWORD PTR [eax+0x4]
64022047:	mov    edx,ecx
64022049:	shr    edx,0x10
6402204c:	mov    DWORD PTR [eax+0x8],edx
6402204f:	mov    edx,DWORD PTR [eax]
64022051:	mov    edi,edx
64022053:	shl    ecx,0x10
64022056:	shr    edi,0x10
64022059:	or     ecx,edi
6402205b:	shl    edx,0x10
6402205e:	add    DWORD PTR [ebp-0x18],0xfff0
64022065:	mov    DWORD PTR [eax+0x4],ecx
64022068:	mov    DWORD PTR [eax],edx
6402206a:	cmp    DWORD PTR [eax+0x8],esi
6402206d:	je     0x64022044
6402206f:	mov    ebx,0x8000
64022074:	test   DWORD PTR [eax+0x8],ebx
64022077:	jne    0x640220a9
64022079:	mov    esi,DWORD PTR [eax]
6402207b:	mov    edi,DWORD PTR [eax+0x4]
6402207e:	add    DWORD PTR [ebp-0x18],0xffff
64022085:	mov    ecx,esi
64022087:	add    esi,esi
64022089:	shr    ecx,0x1f
6402208c:	mov    DWORD PTR [eax],esi
6402208e:	lea    esi,[edi+edi*1]
64022091:	or     esi,ecx
64022093:	mov    ecx,DWORD PTR [eax+0x8]
64022096:	mov    edx,edi
64022098:	shr    edx,0x1f
6402209b:	add    ecx,ecx
6402209d:	or     ecx,edx
6402209f:	test   ebx,ecx
640220a1:	mov    DWORD PTR [eax+0x4],esi
640220a4:	mov    DWORD PTR [eax+0x8],ecx
640220a7:	je     0x64022079
640220a9:	mov    cx,WORD PTR [ebp-0x18]
640220ad:	mov    WORD PTR [eax+0xa],cx
640220b1:	mov    ecx,DWORD PTR [ebp-0x4]
640220b4:	pop    edi
640220b5:	pop    esi
640220b6:	xor    ecx,ebp
640220b8:	pop    ebx
640220b9:	call   0x64012b8c
640220be:	leave  
640220bf:	ret    
640220c0:	push   0x8
640220c2:	push   0x6402ab10
640220c7:	call   0x64014150
640220cc:	xor    eax,eax
640220ce:	cmp    DWORD PTR ds:0x64032624,eax
640220d4:	je     0x6402212c
640220d6:	test   BYTE PTR [ebp+0x8],0x40
640220da:	je     0x64022124
640220dc:	cmp    DWORD PTR ds:0x6402e374,eax
640220e2:	je     0x64022124
640220e4:	mov    DWORD PTR [ebp-0x4],eax
640220e7:	ldmxcsr DWORD PTR [ebp+0x8]
640220eb:	jmp    0x6402211b
640220ed:	mov    eax,DWORD PTR [ebp-0x14]
640220f0:	mov    eax,DWORD PTR [eax]
640220f2:	mov    eax,DWORD PTR [eax]
640220f4:	cmp    eax,0xc0000005
640220f9:	je     0x64022105
640220fb:	cmp    eax,0xc000001d
64022100:	je     0x64022105
64022102:	xor    eax,eax
64022104:	ret    
64022105:	xor    eax,eax
64022107:	inc    eax
64022108:	ret    
64022109:	mov    esp,DWORD PTR [ebp-0x18]
6402210c:	and    DWORD PTR ds:0x6402e374,0x0
64022113:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022117:	ldmxcsr DWORD PTR [ebp+0x8]
6402211b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64022122:	jmp    0x6402212c
64022124:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022128:	ldmxcsr DWORD PTR [ebp+0x8]
6402212c:	call   0x64014195
64022131:	ret    
64022132:	int3   
64022133:	int3   
64022134:	int3   
64022135:	int3   
64022136:	int3   
64022137:	int3   
64022138:	int3   
64022139:	int3   
6402213a:	int3   
6402213b:	int3   
6402213c:	int3   
6402213d:	int3   
6402213e:	int3   
6402213f:	int3   
64022140:	mov    eax,DWORD PTR [ebp-0x10]
64022143:	and    eax,0x1
64022146:	je     0x64022158
6402214c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64022150:	mov    ecx,DWORD PTR [ebp+0x4]
64022153:	jmp    0x64001930
64022158:	ret    
64022159:	mov    edx,DWORD PTR [esp+0x8]
6402215d:	lea    eax,[edx-0xc]
64022160:	mov    ecx,DWORD PTR [edx-0x10]
64022163:	xor    ecx,eax
64022165:	call   0x64012b8c
6402216a:	mov    eax,0x6402a0d0
6402216f:	jmp    0x6401284e
64022174:	int3   
64022175:	int3   
64022176:	int3   
64022177:	int3   
64022178:	int3   
64022179:	int3   
6402217a:	int3   
6402217b:	int3   
6402217c:	int3   
6402217d:	int3   
6402217e:	int3   
6402217f:	int3   
64022180:	mov    eax,DWORD PTR [ebp-0x10]
64022183:	and    eax,0x1
64022186:	je     0x64022198
6402218c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64022190:	mov    ecx,DWORD PTR [ebp+0x4]
64022193:	jmp    0x64001930
64022198:	ret    
64022199:	mov    edx,DWORD PTR [esp+0x8]
6402219d:	lea    eax,[edx-0x10]
640221a0:	mov    ecx,DWORD PTR [edx-0x14]
640221a3:	xor    ecx,eax
640221a5:	call   0x64012b8c
640221aa:	mov    eax,0x6402a0fc
640221af:	jmp    0x6401284e
640221b4:	int3   
640221b5:	int3   
640221b6:	int3   
640221b7:	int3   
640221b8:	int3   
640221b9:	int3   
640221ba:	int3   
640221bb:	int3   
640221bc:	int3   
640221bd:	int3   
640221be:	int3   
640221bf:	int3   
640221c0:	lea    ecx,[ebp-0x50]
640221c3:	jmp    0x64001650
640221c8:	mov    edx,DWORD PTR [esp+0x8]
640221cc:	lea    eax,[edx-0x44]
640221cf:	mov    ecx,DWORD PTR [edx-0x48]
640221d2:	xor    ecx,eax
640221d4:	call   0x64012b8c
640221d9:	mov    eax,0x6402a180
640221de:	jmp    0x6401284e
640221e3:	int3   
640221e4:	int3   
640221e5:	int3   
640221e6:	int3   
640221e7:	int3   
640221e8:	int3   
640221e9:	int3   
640221ea:	int3   
640221eb:	int3   
640221ec:	int3   
640221ed:	int3   
640221ee:	int3   
640221ef:	int3   
640221f0:	lea    ecx,[ebp-0x98]
640221f6:	jmp    0x6400fb10
640221fb:	lea    ecx,[ebp-0x94]
64022201:	jmp    0x64001650
64022206:	lea    ecx,[ebp-0x78]
64022209:	jmp    0x64001650
6402220e:	mov    edx,DWORD PTR [esp+0x8]
64022212:	lea    eax,[edx-0xa8]
64022218:	mov    ecx,DWORD PTR [edx-0xac]
6402221e:	xor    ecx,eax
64022220:	call   0x64012b8c
64022225:	mov    eax,0x6402a1cc
6402222a:	jmp    0x6401284e
6402222f:	int3   
64022230:	lea    ecx,[ebp+0x38]
64022233:	jmp    0x64005f00
64022238:	lea    ecx,[ebp-0x38]
6402223b:	jmp    0x6400fb30
64022240:	lea    ecx,[ebp+0x10]
64022243:	jmp    0x64001930
64022248:	lea    ecx,[ebp+0x14]
6402224b:	jmp    0x64001930
64022250:	lea    ecx,[ebp+0x18]
64022253:	jmp    0x64001930
64022258:	lea    ecx,[ebp+0xc]
6402225b:	jmp    0x64001930
64022260:	lea    ecx,[ebp+0x8]
64022263:	jmp    0x64001930
64022268:	lea    ecx,[ebp+0x4]
6402226b:	jmp    0x64001930
64022270:	lea    ecx,[ebp+0x1c]
64022273:	jmp    0x64001650
64022278:	mov    edx,DWORD PTR [esp+0x8]
6402227c:	lea    eax,[edx+0xc]
6402227f:	mov    ecx,DWORD PTR [edx-0x80]
64022282:	xor    ecx,eax
64022284:	call   0x64012b8c
64022289:	mov    ecx,DWORD PTR [edx+0x7c]
6402228c:	xor    ecx,eax
6402228e:	call   0x64012b8c
64022293:	mov    eax,0x6402a23c
64022298:	jmp    0x6401284e
6402229d:	int3   
6402229e:	int3   
6402229f:	int3   
640222a0:	mov    eax,ds:0x6402e4c8
640222a5:	and    eax,0xfffffffe
640222a8:	mov    ds:0x6402e4c8,eax
640222ad:	ret    
640222ae:	mov    edx,DWORD PTR [esp+0x8]
640222b2:	lea    eax,[edx-0x10]
640222b5:	mov    ecx,DWORD PTR [edx-0x14]
640222b8:	xor    ecx,eax
640222ba:	call   0x64012b8c
640222bf:	mov    eax,0x6402a300
640222c4:	jmp    0x6401284e
640222c9:	int3   
640222ca:	int3   
640222cb:	int3   
640222cc:	int3   
640222cd:	int3   
640222ce:	int3   
640222cf:	int3   
640222d0:	lea    ecx,[ebp-0x14]
640222d3:	jmp    0x64008fc0
640222d8:	mov    edx,DWORD PTR [esp+0x8]
640222dc:	lea    eax,[edx+0xc]
640222df:	mov    ecx,DWORD PTR [edx-0x18]
640222e2:	xor    ecx,eax
640222e4:	call   0x64012b8c
640222e9:	mov    eax,0x6402a360
640222ee:	jmp    0x6401284e
640222f3:	int3   
640222f4:	int3   
640222f5:	int3   
640222f6:	int3   
640222f7:	int3   
640222f8:	int3   
640222f9:	int3   
640222fa:	int3   
640222fb:	int3   
640222fc:	int3   
640222fd:	int3   
640222fe:	int3   
640222ff:	int3   
64022300:	lea    ecx,[ebp-0x10]
64022303:	jmp    0x64001930
64022308:	mov    edx,DWORD PTR [esp+0x8]
6402230c:	lea    eax,[edx-0x8]
6402230f:	mov    ecx,DWORD PTR [edx-0xc]
64022312:	xor    ecx,eax
64022314:	call   0x64012b8c
64022319:	mov    eax,0x6402a38c
6402231e:	jmp    0x6401284e
64022323:	int3   
64022324:	int3   
64022325:	int3   
64022326:	int3   
64022327:	int3   
64022328:	int3   
64022329:	int3   
6402232a:	int3   
6402232b:	int3   
6402232c:	int3   
6402232d:	int3   
6402232e:	int3   
6402232f:	int3   
64022330:	lea    ecx,[ebp-0x10]
64022333:	jmp    0x64001680
64022338:	lea    ecx,[ebp-0x14]
6402233b:	jmp    0x64001930
64022340:	mov    edx,DWORD PTR [esp+0x8]
64022344:	lea    eax,[edx-0x14]
64022347:	mov    ecx,DWORD PTR [edx-0x18]
6402234a:	xor    ecx,eax
6402234c:	call   0x64012b8c
64022351:	mov    eax,0x6402a3c0
64022356:	jmp    0x6401284e
6402235b:	int3   
6402235c:	int3   
6402235d:	int3   
6402235e:	int3   
6402235f:	int3   
64022360:	mov    eax,DWORD PTR [ebp-0x50]
64022363:	and    eax,0x1
64022366:	je     0x64022378
6402236c:	and    DWORD PTR [ebp-0x50],0xfffffffe
64022370:	mov    ecx,DWORD PTR [ebp-0x58]
64022373:	jmp    0x64001930
64022378:	ret    
64022379:	lea    ecx,[ebp-0x4c]
6402237c:	jmp    0x64001930
64022381:	lea    ecx,[ebp-0x54]
64022384:	jmp    0x64001930
64022389:	lea    ecx,[ebp-0x10]
6402238c:	jmp    0x64001930
64022391:	lea    ecx,[ebp-0x10]
64022394:	jmp    0x64001930
64022399:	lea    ecx,[ebp-0x28]
6402239c:	jmp    0x64001930
640223a1:	lea    ecx,[ebp-0x48]
640223a4:	jmp    0x64001930
640223a9:	lea    ecx,[ebp-0x24]
640223ac:	jmp    0x64001930
640223b1:	lea    ecx,[ebp-0x14]
640223b4:	jmp    0x64001930
640223b9:	lea    ecx,[ebp-0x18]
640223bc:	jmp    0x64001930
640223c1:	lea    ecx,[ebp-0x10]
640223c4:	jmp    0x64001930
640223c9:	lea    ecx,[ebp-0x10]
640223cc:	jmp    0x64001930
640223d1:	lea    ecx,[ebp-0x18]
640223d4:	jmp    0x64001930
640223d9:	lea    ecx,[ebp-0x14]
640223dc:	jmp    0x64001930
640223e1:	lea    ecx,[ebp-0x10]
640223e4:	jmp    0x64001930
640223e9:	lea    ecx,[ebp-0x3c]
640223ec:	jmp    0x64010960
640223f1:	lea    ecx,[ebp-0x14]
640223f4:	jmp    0x64001930
640223f9:	lea    ecx,[ebp-0x10]
640223fc:	jmp    0x64001930
64022401:	lea    ecx,[ebp-0x20]
64022404:	jmp    0x64001930
64022409:	lea    ecx,[ebp-0x10]
6402240c:	jmp    0x64001930
64022411:	lea    ecx,[ebp-0x18]
64022414:	jmp    0x64001930
64022419:	lea    ecx,[ebp-0x14]
6402241c:	jmp    0x64001930
64022421:	lea    ecx,[ebp-0x10]
64022424:	jmp    0x64001930
64022429:	lea    ecx,[ebp-0x1c]
6402242c:	jmp    0x64001930
64022431:	lea    ecx,[ebp-0x2c]
64022434:	jmp    0x64001930
64022439:	lea    ecx,[ebp-0x18]
6402243c:	jmp    0x64001930
64022441:	lea    ecx,[ebp-0x10]
64022444:	jmp    0x64001930
64022449:	lea    ecx,[ebp-0x2c]
6402244c:	jmp    0x64001930
64022451:	lea    ecx,[ebp-0x1c]
64022454:	jmp    0x64001930
64022459:	lea    ecx,[ebp-0x1c]
6402245c:	jmp    0x64001930
64022461:	mov    edx,DWORD PTR [esp+0x8]
64022465:	lea    eax,[edx+0xc]
64022468:	mov    ecx,DWORD PTR [edx-0xa0]
6402246e:	xor    ecx,eax
64022470:	call   0x64012b8c
64022475:	mov    ecx,DWORD PTR [edx+0x130]
6402247b:	xor    ecx,eax
6402247d:	call   0x64012b8c
64022482:	mov    eax,0x6402a3e4
64022487:	jmp    0x6401284e
6402248c:	int3   
6402248d:	int3   
6402248e:	int3   
6402248f:	int3   
64022490:	lea    ecx,[ebp-0x30]
64022493:	jmp    0x64001930
64022498:	lea    ecx,[ebp-0x2c]
6402249b:	jmp    0x64001650
640224a0:	lea    ecx,[ebp-0x5c]
640224a3:	jmp    0x64001650
640224a8:	mov    edx,DWORD PTR [esp+0x8]
640224ac:	lea    eax,[edx+0xc]
640224af:	mov    ecx,DWORD PTR [edx-0x60]
640224b2:	xor    ecx,eax
640224b4:	call   0x64012b8c
640224b9:	mov    ecx,DWORD PTR [edx-0x4]
640224bc:	xor    ecx,eax
640224be:	call   0x64012b8c
640224c3:	mov    eax,0x6402a510
640224c8:	jmp    0x6401284e
640224cd:	lea    ecx,[ebp-0x28]
640224d0:	jmp    0x64001650
640224d5:	mov    edx,DWORD PTR [esp+0x8]
640224d9:	lea    eax,[edx+0xc]
640224dc:	mov    ecx,DWORD PTR [edx-0x54]
640224df:	xor    ecx,eax
640224e1:	call   0x64012b8c
640224e6:	mov    eax,0x6402a55c
640224eb:	jmp    0x6401284e
640224f0:	lea    ecx,[ebp-0x28]
640224f3:	jmp    0x64001650
640224f8:	mov    edx,DWORD PTR [esp+0x8]
640224fc:	lea    eax,[edx+0xc]
640224ff:	mov    ecx,DWORD PTR [edx-0x54]
64022502:	xor    ecx,eax
64022504:	call   0x64012b8c
64022509:	mov    eax,0x6402a588
6402250e:	jmp    0x6401284e
64022513:	mov    edx,DWORD PTR [esp+0x8]
64022517:	lea    eax,[edx+0xc]
6402251a:	mov    ecx,DWORD PTR [edx-0x14]
6402251d:	xor    ecx,eax
6402251f:	call   0x64012b8c
64022524:	mov    eax,0x6402a730
64022529:	jmp    0x6401284e
6402252e:	int3   
6402252f:	int3   
64022530:	mov    eax,DWORD PTR [ebp+0x4]
64022533:	push   eax
64022534:	call   0x64012332
64022539:	pop    ecx
6402253a:	ret    
6402253b:	mov    edx,DWORD PTR [esp+0x8]
6402253f:	lea    eax,[edx-0x8]
64022542:	mov    ecx,DWORD PTR [edx-0xc]
64022545:	xor    ecx,eax
64022547:	call   0x64012b8c
6402254c:	mov    eax,0x6402ac88
64022551:	jmp    0x6401284e
64022556:	int3   
64022557:	int3   
64022558:	int3   
64022559:	int3   
6402255a:	int3   
6402255b:	int3   
6402255c:	int3   
6402255d:	int3   
6402255e:	int3   
6402255f:	int3   
64022560:	mov    eax,DWORD PTR [ebp+0x4]
64022563:	push   eax
64022564:	call   0x64012332
64022569:	pop    ecx
6402256a:	ret    
6402256b:	mov    edx,DWORD PTR [esp+0x8]
6402256f:	lea    eax,[edx-0x8]
64022572:	mov    ecx,DWORD PTR [edx-0xc]
64022575:	xor    ecx,eax
64022577:	call   0x64012b8c
6402257c:	mov    eax,0x6402acb4
64022581:	jmp    0x6401284e
64022586:	int3   
64022587:	int3   
64022588:	int3   
64022589:	int3   
6402258a:	int3   
6402258b:	int3   
6402258c:	int3   
6402258d:	int3   
6402258e:	int3   
6402258f:	int3   
64022590:	mov    eax,DWORD PTR [ebp-0x10]
64022593:	push   eax
64022594:	call   0x64012332
64022599:	pop    ecx
6402259a:	ret    
6402259b:	mov    edx,DWORD PTR [esp+0x8]
6402259f:	lea    eax,[edx-0x8]
640225a2:	mov    ecx,DWORD PTR [edx-0xc]
640225a5:	xor    ecx,eax
640225a7:	call   0x64012b8c
640225ac:	mov    eax,0x6402ace0
640225b1:	jmp    0x6401284e
640225b6:	int3   
640225b7:	int3   
640225b8:	int3   
640225b9:	int3   
640225ba:	int3   
640225bb:	int3   
640225bc:	int3   
640225bd:	int3   
640225be:	int3   
640225bf:	int3   
640225c0:	mov    eax,DWORD PTR [ebp-0x10]
640225c3:	push   eax
640225c4:	call   0x64012332
640225c9:	pop    ecx
640225ca:	ret    
640225cb:	mov    edx,DWORD PTR [esp+0x8]
640225cf:	lea    eax,[edx-0xc]
640225d2:	mov    ecx,DWORD PTR [edx-0x10]
640225d5:	xor    ecx,eax
640225d7:	call   0x64012b8c
640225dc:	mov    eax,0x6402ad0c
640225e1:	jmp    0x6401284e
640225e6:	int3   
640225e7:	int3   
640225e8:	int3   
640225e9:	int3   
640225ea:	int3   
640225eb:	int3   
640225ec:	int3   
640225ed:	int3   
640225ee:	int3   
640225ef:	int3   
640225f0:	lea    ecx,[ebp-0x144]
640225f6:	jmp    0x64002700
640225fb:	mov    edx,DWORD PTR [esp+0x8]
640225ff:	lea    eax,[edx-0x144]
64022605:	mov    ecx,DWORD PTR [edx-0x148]
6402260b:	xor    ecx,eax
6402260d:	call   0x64012b8c
64022612:	add    eax,0xc
64022615:	mov    ecx,DWORD PTR [edx-0x4]
64022618:	xor    ecx,eax
6402261a:	call   0x64012b8c
6402261f:	mov    eax,0x6402ad38
64022624:	jmp    0x6401284e
64022629:	int3   
6402262a:	int3   
6402262b:	int3   
6402262c:	int3   
6402262d:	int3   
6402262e:	int3   
6402262f:	int3   
64022630:	lea    ecx,[ebp-0x20]
64022633:	jmp    0x64009be0
64022638:	mov    edx,DWORD PTR [esp+0x8]
6402263c:	lea    eax,[edx-0x1c]
6402263f:	mov    ecx,DWORD PTR [edx-0x20]
64022642:	xor    ecx,eax
64022644:	call   0x64012b8c
64022649:	mov    eax,0x6402ad64
6402264e:	jmp    0x6401284e
64022653:	int3   
64022654:	int3   
64022655:	int3   
64022656:	int3   
64022657:	int3   
64022658:	int3   
64022659:	int3   
6402265a:	int3   
6402265b:	int3   
6402265c:	int3   
6402265d:	int3   
6402265e:	int3   
6402265f:	int3   
64022660:	mov    eax,DWORD PTR [ebp-0x10]
64022663:	and    eax,0x1
64022666:	je     0x64022678
6402266c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64022670:	mov    edi,DWORD PTR [ebp+0x8]
64022673:	jmp    0x64009870
64022678:	ret    
64022679:	mov    edx,DWORD PTR [esp+0x8]
6402267d:	lea    eax,[edx-0x8]
64022680:	mov    ecx,DWORD PTR [edx-0xc]
64022683:	xor    ecx,eax
64022685:	call   0x64012b8c
6402268a:	mov    eax,0x6402ad90
6402268f:	jmp    0x6401284e
64022694:	int3   
64022695:	int3   
64022696:	int3   
64022697:	int3   
64022698:	int3   
64022699:	int3   
6402269a:	int3   
6402269b:	int3   
6402269c:	int3   
6402269d:	int3   
6402269e:	int3   
6402269f:	int3   
640226a0:	mov    edx,DWORD PTR [esp+0x8]
640226a4:	lea    eax,[edx+0xc]
640226a7:	mov    ecx,DWORD PTR [edx-0x2c]
640226aa:	xor    ecx,eax
640226ac:	call   0x64012b8c
640226b1:	mov    eax,0x6402ae1c
640226b6:	jmp    0x6401284e
640226bb:	int3   
640226bc:	int3   
640226bd:	int3   
640226be:	int3   
640226bf:	int3   
640226c0:	mov    eax,DWORD PTR [ebp-0x18]
640226c3:	push   eax
640226c4:	mov    ecx,DWORD PTR [ebp-0x1c]
640226c7:	push   ecx
640226c8:	call   0x64002c10
640226cd:	add    esp,0x8
640226d0:	ret    
640226d1:	mov    edx,DWORD PTR [esp+0x8]
640226d5:	lea    eax,[edx+0xc]
640226d8:	mov    ecx,DWORD PTR [edx-0x20]
640226db:	xor    ecx,eax
640226dd:	call   0x64012b8c
640226e2:	mov    eax,0x6402ae7c
640226e7:	jmp    0x6401284e
640226ec:	int3   
640226ed:	int3   
640226ee:	int3   
640226ef:	int3   
640226f0:	mov    ecx,DWORD PTR [ebp-0x10]
640226f3:	jmp    0x64001650
640226f8:	mov    edx,DWORD PTR [esp+0x8]
640226fc:	lea    eax,[edx-0xc]
640226ff:	mov    ecx,DWORD PTR [edx-0x10]
64022702:	xor    ecx,eax
64022704:	call   0x64012b8c
64022709:	mov    eax,0x6402aea8
6402270e:	jmp    0x6401284e
64022713:	int3   
64022714:	int3   
64022715:	int3   
64022716:	int3   
64022717:	int3   
64022718:	int3   
64022719:	int3   
6402271a:	int3   
6402271b:	int3   
6402271c:	int3   
6402271d:	int3   
6402271e:	int3   
6402271f:	int3   
64022720:	mov    ecx,DWORD PTR [ebp-0x10]
64022723:	jmp    0x64001650
64022728:	mov    edx,DWORD PTR [esp+0x8]
6402272c:	lea    eax,[edx-0x10]
6402272f:	mov    ecx,DWORD PTR [edx-0x14]
64022732:	xor    ecx,eax
64022734:	call   0x64012b8c
64022739:	mov    eax,0x6402aed4
6402273e:	jmp    0x6401284e
64022743:	int3   
64022744:	int3   
64022745:	int3   
64022746:	int3   
64022747:	int3   
64022748:	int3   
64022749:	int3   
6402274a:	int3   
6402274b:	int3   
6402274c:	int3   
6402274d:	int3   
6402274e:	int3   
6402274f:	int3   
64022750:	lea    ecx,[ebp+0x24]
64022753:	jmp    0x64001650
64022758:	lea    ecx,[ebp+0x8]
6402275b:	jmp    0x64001650
64022760:	mov    edx,DWORD PTR [esp+0x8]
64022764:	lea    eax,[edx-0x8]
64022767:	mov    ecx,DWORD PTR [edx-0xc]
6402276a:	xor    ecx,eax
6402276c:	call   0x64012b8c
64022771:	mov    eax,0x6402af08
64022776:	jmp    0x6401284e
6402277b:	int3   
6402277c:	int3   
6402277d:	int3   
6402277e:	int3   
6402277f:	int3   
64022780:	lea    ecx,[ebp-0x28]
64022783:	jmp    0x64001650
64022788:	mov    edx,DWORD PTR [esp+0x8]
6402278c:	lea    eax,[edx-0x28]
6402278f:	mov    ecx,DWORD PTR [edx-0x2c]
64022792:	xor    ecx,eax
64022794:	call   0x64012b8c
64022799:	mov    eax,0x6402af34
6402279e:	jmp    0x6401284e
640227a3:	int3   
640227a4:	int3   
640227a5:	int3   
640227a6:	int3   
640227a7:	int3   
640227a8:	int3   
640227a9:	int3   
640227aa:	int3   
640227ab:	int3   
640227ac:	int3   
640227ad:	int3   
640227ae:	int3   
640227af:	int3   
640227b0:	mov    ecx,DWORD PTR [ebp-0x10]
640227b3:	jmp    0x64001650
640227b8:	mov    edx,DWORD PTR [esp+0x8]
640227bc:	lea    eax,[edx-0x10]
640227bf:	mov    ecx,DWORD PTR [edx-0x14]
640227c2:	xor    ecx,eax
640227c4:	call   0x64012b8c
640227c9:	mov    eax,0x6402af60
640227ce:	jmp    0x6401284e
640227d3:	int3   
640227d4:	int3   
640227d5:	int3   
640227d6:	int3   
640227d7:	int3   
640227d8:	int3   
640227d9:	int3   
640227da:	int3   
640227db:	int3   
640227dc:	int3   
640227dd:	int3   
640227de:	int3   
640227df:	int3   
640227e0:	mov    edx,DWORD PTR [esp+0x8]
640227e4:	lea    eax,[edx+0xc]
640227e7:	mov    ecx,DWORD PTR [edx-0x1c]
640227ea:	xor    ecx,eax
640227ec:	call   0x64012b8c
640227f1:	mov    eax,0x6402afec
640227f6:	jmp    0x6401284e
640227fb:	int3   
640227fc:	int3   
640227fd:	int3   
640227fe:	int3   
640227ff:	int3   
64022800:	mov    eax,DWORD PTR [ebp-0x14]
64022803:	push   eax
64022804:	mov    ecx,DWORD PTR [ebp-0x18]
64022807:	push   ecx
64022808:	call   0x64002c10
6402280d:	add    esp,0x8
64022810:	ret    
64022811:	mov    edx,DWORD PTR [esp+0x8]
64022815:	lea    eax,[edx+0xc]
64022818:	mov    ecx,DWORD PTR [edx-0x1c]
6402281b:	xor    ecx,eax
6402281d:	call   0x64012b8c
64022822:	mov    eax,0x6402b04c
64022827:	jmp    0x6401284e
6402282c:	int3   
6402282d:	int3   
6402282e:	int3   
6402282f:	int3   
64022830:	mov    eax,DWORD PTR [ebp-0x14]
64022833:	push   eax
64022834:	mov    ecx,DWORD PTR [ebp-0x18]
64022837:	push   ecx
64022838:	call   0x64002c10
6402283d:	add    esp,0x8
64022840:	ret    
64022841:	mov    edx,DWORD PTR [esp+0x8]
64022845:	lea    eax,[edx+0xc]
64022848:	mov    ecx,DWORD PTR [edx-0x1c]
6402284b:	xor    ecx,eax
6402284d:	call   0x64012b8c
64022852:	mov    eax,0x6402b0ac
64022857:	jmp    0x6401284e
6402285c:	int3   
6402285d:	int3   
6402285e:	int3   
6402285f:	int3   
64022860:	lea    ecx,[ebp+0x8]
64022863:	jmp    0x64006880
64022868:	mov    edx,DWORD PTR [esp+0x8]
6402286c:	lea    eax,[edx-0x14]
6402286f:	mov    ecx,DWORD PTR [edx-0x18]
64022872:	xor    ecx,eax
64022874:	call   0x64012b8c
64022879:	mov    eax,0x6402b0d8
6402287e:	jmp    0x6401284e
64022883:	int3   
64022884:	int3   
64022885:	int3   
64022886:	int3   
64022887:	int3   
64022888:	int3   
64022889:	int3   
6402288a:	int3   
6402288b:	int3   
6402288c:	int3   
6402288d:	int3   
6402288e:	int3   
6402288f:	int3   
64022890:	lea    ecx,[ebp+0x8]
64022893:	jmp    0x64001650
64022898:	mov    edx,DWORD PTR [esp+0x8]
6402289c:	lea    eax,[edx-0x14]
6402289f:	mov    ecx,DWORD PTR [edx-0x18]
640228a2:	xor    ecx,eax
640228a4:	call   0x64012b8c
640228a9:	mov    eax,0x6402b104
640228ae:	jmp    0x6401284e
640228b3:	int3   
640228b4:	int3   
640228b5:	int3   
640228b6:	int3   
640228b7:	int3   
640228b8:	int3   
640228b9:	int3   
640228ba:	int3   
640228bb:	int3   
640228bc:	int3   
640228bd:	int3   
640228be:	int3   
640228bf:	int3   
640228c0:	mov    ecx,DWORD PTR [ebp-0x10]
640228c3:	jmp    0x6401244b
640228c8:	mov    edx,DWORD PTR [esp+0x8]
640228cc:	lea    eax,[edx-0xc]
640228cf:	mov    ecx,DWORD PTR [edx-0x10]
640228d2:	xor    ecx,eax
640228d4:	call   0x64012b8c
640228d9:	mov    eax,0x6402b130
640228de:	jmp    0x6401284e
640228e3:	int3   
640228e4:	int3   
640228e5:	int3   
640228e6:	int3   
640228e7:	int3   
640228e8:	int3   
640228e9:	int3   
640228ea:	int3   
640228eb:	int3   
640228ec:	int3   
640228ed:	int3   
640228ee:	int3   
640228ef:	int3   
640228f0:	mov    ecx,DWORD PTR [ebp-0x10]
640228f3:	jmp    0x6401244b
640228f8:	mov    edx,DWORD PTR [esp+0x8]
640228fc:	lea    eax,[edx-0x8]
640228ff:	mov    ecx,DWORD PTR [edx-0xc]
64022902:	xor    ecx,eax
64022904:	call   0x64012b8c
64022909:	mov    eax,0x6402b15c
6402290e:	jmp    0x6401284e
64022913:	int3   
64022914:	int3   
64022915:	int3   
64022916:	int3   
64022917:	int3   
64022918:	int3   
64022919:	int3   
6402291a:	int3   
6402291b:	int3   
6402291c:	int3   
6402291d:	int3   
6402291e:	int3   
6402291f:	int3   
64022920:	mov    ecx,DWORD PTR [ebp-0x10]
64022923:	jmp    0x6401244b
64022928:	mov    edx,DWORD PTR [esp+0x8]
6402292c:	lea    eax,[edx-0xc]
6402292f:	mov    ecx,DWORD PTR [edx-0x10]
64022932:	xor    ecx,eax
64022934:	call   0x64012b8c
64022939:	mov    eax,0x6402b188
6402293e:	jmp    0x6401284e
64022943:	int3   
64022944:	int3   
64022945:	int3   
64022946:	int3   
64022947:	int3   
64022948:	int3   
64022949:	int3   
6402294a:	int3   
6402294b:	int3   
6402294c:	int3   
6402294d:	int3   
6402294e:	int3   
6402294f:	int3   
64022950:	mov    ecx,DWORD PTR [ebp-0x10]
64022953:	jmp    0x6401244b
64022958:	mov    edx,DWORD PTR [esp+0x8]
6402295c:	lea    eax,[edx-0x8]
6402295f:	mov    ecx,DWORD PTR [edx-0xc]
64022962:	xor    ecx,eax
64022964:	call   0x64012b8c
64022969:	mov    eax,0x6402b1b4
6402296e:	jmp    0x6401284e
64022973:	int3   
64022974:	int3   
64022975:	int3   
64022976:	int3   
64022977:	int3   
64022978:	int3   
64022979:	int3   
6402297a:	int3   
6402297b:	int3   
6402297c:	int3   
6402297d:	int3   
6402297e:	int3   
6402297f:	int3   
64022980:	mov    eax,DWORD PTR [ebp-0x34]
64022983:	and    eax,0x1
64022986:	je     0x64022998
6402298c:	and    DWORD PTR [ebp-0x34],0xfffffffe
64022990:	mov    ecx,DWORD PTR [ebp-0x30]
64022993:	jmp    0x64001650
64022998:	ret    
64022999:	lea    ecx,[ebp-0x2c]
6402299c:	jmp    0x64001650
640229a1:	lea    ecx,[ebp-0x3c]
640229a4:	jmp    0x64001930
640229a9:	lea    ecx,[ebp-0x2c]
640229ac:	jmp    0x64001650
640229b1:	lea    ecx,[ebp-0x3c]
640229b4:	jmp    0x64001930
640229b9:	lea    ecx,[ebp-0x2c]
640229bc:	jmp    0x64001650
640229c1:	lea    ecx,[ebp-0x2c]
640229c4:	jmp    0x64001650
640229c9:	mov    edx,DWORD PTR [esp+0x8]
640229cd:	lea    eax,[edx-0x40]
640229d0:	mov    ecx,DWORD PTR [edx-0x44]
640229d3:	xor    ecx,eax
640229d5:	call   0x64012b8c
640229da:	add    eax,0x10
640229dd:	mov    ecx,DWORD PTR [edx-0x4]
640229e0:	xor    ecx,eax
640229e2:	call   0x64012b8c
640229e7:	mov    eax,0x6402b210
640229ec:	jmp    0x6401284e
640229f1:	int3   
640229f2:	int3   
640229f3:	int3   
640229f4:	int3   
640229f5:	int3   
640229f6:	int3   
640229f7:	int3   
640229f8:	int3   
640229f9:	int3   
640229fa:	int3   
640229fb:	int3   
640229fc:	int3   
640229fd:	int3   
640229fe:	int3   
640229ff:	int3   
64022a00:	lea    ecx,[ebp-0x30]
64022a03:	jmp    0x64001650
64022a08:	mov    eax,DWORD PTR [ebp-0x4c]
64022a0b:	push   eax
64022a0c:	mov    ecx,DWORD PTR [ebp-0x50]
64022a0f:	push   ecx
64022a10:	call   0x64002c10
64022a15:	add    esp,0x8
64022a18:	ret    
64022a19:	mov    edx,DWORD PTR [esp+0x8]
64022a1d:	lea    eax,[edx+0xc]
64022a20:	mov    ecx,DWORD PTR [edx-0x54]
64022a23:	xor    ecx,eax
64022a25:	call   0x64012b8c
64022a2a:	mov    ecx,DWORD PTR [edx-0x8]
64022a2d:	xor    ecx,eax
64022a2f:	call   0x64012b8c
64022a34:	mov    eax,0x6402b280
64022a39:	jmp    0x6401284e
64022a3e:	int3   
64022a3f:	int3   
64022a40:	mov    ecx,DWORD PTR [ebp-0x10]
64022a43:	jmp    0x64006880
64022a48:	mov    edx,DWORD PTR [esp+0x8]
64022a4c:	lea    eax,[edx-0xc]
64022a4f:	mov    ecx,DWORD PTR [edx-0x10]
64022a52:	xor    ecx,eax
64022a54:	call   0x64012b8c
64022a59:	mov    eax,0x6402b2ac
64022a5e:	jmp    0x6401284e
64022a63:	int3   
64022a64:	int3   
64022a65:	int3   
64022a66:	int3   
64022a67:	int3   
64022a68:	int3   
64022a69:	int3   
64022a6a:	int3   
64022a6b:	int3   
64022a6c:	int3   
64022a6d:	int3   
64022a6e:	int3   
64022a6f:	int3   
64022a70:	mov    ecx,DWORD PTR [ebp-0x10]
64022a73:	jmp    0x64006880
64022a78:	mov    edx,DWORD PTR [esp+0x8]
64022a7c:	lea    eax,[edx-0x10]
64022a7f:	mov    ecx,DWORD PTR [edx-0x14]
64022a82:	xor    ecx,eax
64022a84:	call   0x64012b8c
64022a89:	mov    eax,0x6402b2d8
64022a8e:	jmp    0x6401284e
64022a93:	int3   
64022a94:	int3   
64022a95:	int3   
64022a96:	int3   
64022a97:	int3   
64022a98:	int3   
64022a99:	int3   
64022a9a:	int3   
64022a9b:	int3   
64022a9c:	int3   
64022a9d:	int3   
64022a9e:	int3   
64022a9f:	int3   
64022aa0:	lea    ecx,[ebp+0x24]
64022aa3:	jmp    0x64006880
64022aa8:	lea    ecx,[ebp+0x8]
64022aab:	jmp    0x64006880
64022ab0:	mov    edx,DWORD PTR [esp+0x8]
64022ab4:	lea    eax,[edx-0x8]
64022ab7:	mov    ecx,DWORD PTR [edx-0xc]
64022aba:	xor    ecx,eax
64022abc:	call   0x64012b8c
64022ac1:	mov    eax,0x6402b30c
64022ac6:	jmp    0x6401284e
64022acb:	int3   
64022acc:	int3   
64022acd:	int3   
64022ace:	int3   
64022acf:	int3   
64022ad0:	mov    ecx,DWORD PTR [ebp-0x10]
64022ad3:	jmp    0x64006880
64022ad8:	mov    edx,DWORD PTR [esp+0x8]
64022adc:	lea    eax,[edx-0x10]
64022adf:	mov    ecx,DWORD PTR [edx-0x14]
64022ae2:	xor    ecx,eax
64022ae4:	call   0x64012b8c
64022ae9:	mov    eax,0x6402b338
64022aee:	jmp    0x6401284e
64022af3:	int3   
64022af4:	int3   
64022af5:	int3   
64022af6:	int3   
64022af7:	int3   
64022af8:	int3   
64022af9:	int3   
64022afa:	int3   
64022afb:	int3   
64022afc:	int3   
64022afd:	int3   
64022afe:	int3   
64022aff:	int3   
64022b00:	mov    eax,DWORD PTR [ebp-0x14]
64022b03:	push   eax
64022b04:	mov    ecx,DWORD PTR [ebp-0x18]
64022b07:	push   ecx
64022b08:	call   0x64002c10
64022b0d:	add    esp,0x8
64022b10:	ret    
64022b11:	mov    edx,DWORD PTR [esp+0x8]
64022b15:	lea    eax,[edx+0xc]
64022b18:	mov    ecx,DWORD PTR [edx-0x1c]
64022b1b:	xor    ecx,eax
64022b1d:	call   0x64012b8c
64022b22:	mov    eax,0x6402b398
64022b27:	jmp    0x6401284e
64022b2c:	int3   
64022b2d:	int3   
64022b2e:	int3   
64022b2f:	int3   
64022b30:	lea    eax,[ebp-0x10]
64022b33:	jmp    0x640016b0
64022b38:	mov    edx,DWORD PTR [esp+0x8]
64022b3c:	lea    eax,[edx-0x34]
64022b3f:	mov    ecx,DWORD PTR [edx-0x38]
64022b42:	xor    ecx,eax
64022b44:	call   0x64012b8c
64022b49:	mov    eax,0x6402b3c4
64022b4e:	jmp    0x6401284e
64022b53:	int3   
64022b54:	int3   
64022b55:	int3   
64022b56:	int3   
64022b57:	int3   
64022b58:	int3   
64022b59:	int3   
64022b5a:	int3   
64022b5b:	int3   
64022b5c:	int3   
64022b5d:	int3   
64022b5e:	int3   
64022b5f:	int3   
64022b60:	lea    ecx,[ebp-0x54]
64022b63:	jmp    0x64001650
64022b68:	mov    edx,DWORD PTR [esp+0x8]
64022b6c:	lea    eax,[edx-0x4c]
64022b6f:	mov    ecx,DWORD PTR [edx-0x50]
64022b72:	xor    ecx,eax
64022b74:	call   0x64012b8c
64022b79:	mov    eax,0x6402b3f0
64022b7e:	jmp    0x6401284e
64022b83:	int3   
64022b84:	int3   
64022b85:	int3   
64022b86:	int3   
64022b87:	int3   
64022b88:	int3   
64022b89:	int3   
64022b8a:	int3   
64022b8b:	int3   
64022b8c:	int3   
64022b8d:	int3   
64022b8e:	int3   
64022b8f:	int3   
64022b90:	lea    ecx,[ebp-0x30]
64022b93:	jmp    0x64001650
64022b98:	mov    edx,DWORD PTR [esp+0x8]
64022b9c:	lea    eax,[edx+0xc]
64022b9f:	mov    ecx,DWORD PTR [edx-0x44]
64022ba2:	xor    ecx,eax
64022ba4:	call   0x64012b8c
64022ba9:	mov    ecx,DWORD PTR [edx-0x8]
64022bac:	xor    ecx,eax
64022bae:	call   0x64012b8c
64022bb3:	mov    eax,0x6402b484
64022bb8:	jmp    0x6401284e
64022bbd:	int3   
64022bbe:	int3   
64022bbf:	int3   
64022bc0:	lea    ecx,[ebp-0x54]
64022bc3:	jmp    0x64001650
64022bc8:	mov    edx,DWORD PTR [esp+0x8]
64022bcc:	lea    eax,[edx-0x5c]
64022bcf:	mov    ecx,DWORD PTR [edx-0x60]
64022bd2:	xor    ecx,eax
64022bd4:	call   0x64012b8c
64022bd9:	mov    eax,0x6402b4b0
64022bde:	jmp    0x6401284e
64022be3:	int3   
64022be4:	int3   
64022be5:	int3   
64022be6:	int3   
64022be7:	int3   
64022be8:	int3   
64022be9:	int3   
64022bea:	int3   
64022beb:	int3   
64022bec:	int3   
64022bed:	int3   
64022bee:	int3   
64022bef:	int3   
64022bf0:	lea    ecx,[ebp-0x54]
64022bf3:	jmp    0x64001650
64022bf8:	mov    edx,DWORD PTR [esp+0x8]
64022bfc:	lea    eax,[edx-0x5c]
64022bff:	mov    ecx,DWORD PTR [edx-0x60]
64022c02:	xor    ecx,eax
64022c04:	call   0x64012b8c
64022c09:	mov    eax,0x6402b4dc
64022c0e:	jmp    0x6401284e
64022c13:	int3   
64022c14:	int3   
64022c15:	int3   
64022c16:	int3   
64022c17:	int3   
64022c18:	int3   
64022c19:	int3   
64022c1a:	int3   
64022c1b:	int3   
64022c1c:	int3   
64022c1d:	int3   
64022c1e:	int3   
64022c1f:	int3   
64022c20:	lea    ecx,[ebp-0x50]
64022c23:	jmp    0x64001650
64022c28:	mov    edx,DWORD PTR [esp+0x8]
64022c2c:	lea    eax,[edx-0x54]
64022c2f:	mov    ecx,DWORD PTR [edx-0x58]
64022c32:	xor    ecx,eax
64022c34:	call   0x64012b8c
64022c39:	mov    eax,0x6402b508
64022c3e:	jmp    0x6401284e
64022c43:	int3   
64022c44:	int3   
64022c45:	int3   
64022c46:	int3   
64022c47:	int3   
64022c48:	int3   
64022c49:	int3   
64022c4a:	int3   
64022c4b:	int3   
64022c4c:	int3   
64022c4d:	int3   
64022c4e:	int3   
64022c4f:	int3   
64022c50:	lea    ecx,[ebp-0x54]
64022c53:	jmp    0x64001650
64022c58:	mov    edx,DWORD PTR [esp+0x8]
64022c5c:	lea    eax,[edx-0x5c]
64022c5f:	mov    ecx,DWORD PTR [edx-0x60]
64022c62:	xor    ecx,eax
64022c64:	call   0x64012b8c
64022c69:	mov    eax,0x6402b534
64022c6e:	jmp    0x6401284e
64022c73:	int3   
64022c74:	int3   
64022c75:	int3   
64022c76:	int3   
64022c77:	int3   
64022c78:	int3   
64022c79:	int3   
64022c7a:	int3   
64022c7b:	int3   
64022c7c:	int3   
64022c7d:	int3   
64022c7e:	int3   
64022c7f:	int3   
64022c80:	lea    ecx,[ebp-0x54]
64022c83:	jmp    0x64001650
64022c88:	mov    edx,DWORD PTR [esp+0x8]
64022c8c:	lea    eax,[edx-0x5c]
64022c8f:	mov    ecx,DWORD PTR [edx-0x60]
64022c92:	xor    ecx,eax
64022c94:	call   0x64012b8c
64022c99:	mov    eax,0x6402b560
64022c9e:	jmp    0x6401284e
64022ca3:	int3   
64022ca4:	int3   
64022ca5:	int3   
64022ca6:	int3   
64022ca7:	int3   
64022ca8:	int3   
64022ca9:	int3   
64022caa:	int3   
64022cab:	int3   
64022cac:	int3   
64022cad:	int3   
64022cae:	int3   
64022caf:	int3   
64022cb0:	lea    ecx,[ebp-0x50]
64022cb3:	jmp    0x64001650
64022cb8:	mov    edx,DWORD PTR [esp+0x8]
64022cbc:	lea    eax,[edx-0x54]
64022cbf:	mov    ecx,DWORD PTR [edx-0x58]
64022cc2:	xor    ecx,eax
64022cc4:	call   0x64012b8c
64022cc9:	mov    eax,0x6402b58c
64022cce:	jmp    0x6401284e
64022cd3:	int3   
64022cd4:	int3   
64022cd5:	int3   
64022cd6:	int3   
64022cd7:	int3   
64022cd8:	int3   
64022cd9:	int3   
64022cda:	int3   
64022cdb:	int3   
64022cdc:	int3   
64022cdd:	int3   
64022cde:	int3   
64022cdf:	int3   
64022ce0:	mov    eax,ds:0x6403133c
64022ce5:	and    eax,0xfffffffe
64022ce8:	mov    ds:0x6403133c,eax
64022ced:	ret    
64022cee:	mov    edx,DWORD PTR [esp+0x8]
64022cf2:	lea    eax,[edx]
64022cf4:	mov    ecx,DWORD PTR [edx-0x4]
64022cf7:	xor    ecx,eax
64022cf9:	call   0x64012b8c
64022cfe:	mov    eax,0x6402b5b8
64022d03:	jmp    0x6401284e
64022d08:	int3   
64022d09:	int3   
64022d0a:	int3   
64022d0b:	int3   
64022d0c:	int3   
64022d0d:	int3   
64022d0e:	int3   
64022d0f:	int3   
64022d10:	mov    eax,ds:0x64031340
64022d15:	and    eax,0xfffffffe
64022d18:	mov    ds:0x64031340,eax
64022d1d:	ret    
64022d1e:	mov    edx,DWORD PTR [esp+0x8]
64022d22:	lea    eax,[edx]
64022d24:	mov    ecx,DWORD PTR [edx-0x4]
64022d27:	xor    ecx,eax
64022d29:	call   0x64012b8c
64022d2e:	mov    eax,0x6402b5e4
64022d33:	jmp    0x6401284e
64022d38:	int3   
64022d39:	int3   
64022d3a:	int3   
64022d3b:	int3   
64022d3c:	int3   
64022d3d:	int3   
64022d3e:	int3   
64022d3f:	int3   
64022d40:	lea    ecx,[ebp-0x4c]
64022d43:	jmp    0x64006880
64022d48:	lea    ecx,[ebp-0x30]
64022d4b:	jmp    0x64006880
64022d50:	mov    ecx,DWORD PTR [ebp-0xc0]
64022d56:	jmp    0x64006880
64022d5b:	lea    ecx,[ebp-0x84]
64022d61:	jmp    0x64005f50
64022d66:	lea    ecx,[ebp-0xbc]
64022d6c:	jmp    0x64005f50
64022d71:	mov    edx,DWORD PTR [esp+0x8]
64022d75:	lea    eax,[edx-0xdc]
64022d7b:	mov    ecx,DWORD PTR [edx-0xe0]
64022d81:	xor    ecx,eax
64022d83:	call   0x64012b8c
64022d88:	add    eax,0xc
64022d8b:	mov    ecx,DWORD PTR [edx-0x8]
64022d8e:	xor    ecx,eax
64022d90:	call   0x64012b8c
64022d95:	mov    eax,0x6402b630
64022d9a:	jmp    0x6401284e
64022d9f:	int3   
64022da0:	lea    ecx,[ebp-0x4c]
64022da3:	jmp    0x64001650
64022da8:	lea    ecx,[ebp-0x30]
64022dab:	jmp    0x64001650
64022db0:	mov    ecx,DWORD PTR [ebp-0xc0]
64022db6:	jmp    0x64001650
64022dbb:	lea    ecx,[ebp-0x84]
64022dc1:	jmp    0x64005f00
64022dc6:	lea    ecx,[ebp-0xbc]
64022dcc:	jmp    0x64005f00
64022dd1:	mov    edx,DWORD PTR [esp+0x8]
64022dd5:	lea    eax,[edx-0xdc]
64022ddb:	mov    ecx,DWORD PTR [edx-0xe0]
64022de1:	xor    ecx,eax
64022de3:	call   0x64012b8c
64022de8:	add    eax,0xc
64022deb:	mov    ecx,DWORD PTR [edx-0x8]
64022dee:	xor    ecx,eax
64022df0:	call   0x64012b8c
64022df5:	mov    eax,0x6402b67c
64022dfa:	jmp    0x6401284e
64022dff:	int3   
64022e00:	lea    ecx,[ebp+0x4]
64022e03:	jmp    0x64001930
64022e08:	mov    edx,DWORD PTR [esp+0x8]
64022e0c:	lea    eax,[edx-0x30]
64022e0f:	mov    ecx,DWORD PTR [edx-0x34]
64022e12:	xor    ecx,eax
64022e14:	call   0x64012b8c
64022e19:	add    eax,0xc
64022e1c:	mov    ecx,DWORD PTR [edx-0x4]
64022e1f:	xor    ecx,eax
64022e21:	call   0x64012b8c
64022e26:	mov    eax,0x6402b6a8
64022e2b:	jmp    0x6401284e
64022e30:	mov    ecx,DWORD PTR [ebp-0x10]
64022e33:	jmp    0x64001930
64022e38:	mov    edx,DWORD PTR [esp+0x8]
64022e3c:	lea    eax,[edx-0xc]
64022e3f:	mov    ecx,DWORD PTR [edx-0x10]
64022e42:	xor    ecx,eax
64022e44:	call   0x64012b8c
64022e49:	mov    eax,0x6402b6d4
64022e4e:	jmp    0x6401284e
64022e53:	int3   
64022e54:	int3   
64022e55:	int3   
64022e56:	int3   
64022e57:	int3   
64022e58:	int3   
64022e59:	int3   
64022e5a:	int3   
64022e5b:	int3   
64022e5c:	int3   
64022e5d:	int3   
64022e5e:	int3   
64022e5f:	int3   
64022e60:	lea    ecx,[ebp-0x10]
64022e63:	jmp    0x64001930
64022e68:	mov    edx,DWORD PTR [esp+0x8]
64022e6c:	lea    eax,[edx-0x8]
64022e6f:	mov    ecx,DWORD PTR [edx-0xc]
64022e72:	xor    ecx,eax
64022e74:	call   0x64012b8c
64022e79:	mov    eax,0x6402b700
64022e7e:	jmp    0x6401284e
64022e83:	int3   
64022e84:	int3   
64022e85:	int3   
64022e86:	int3   
64022e87:	int3   
64022e88:	int3   
64022e89:	int3   
64022e8a:	int3   
64022e8b:	int3   
64022e8c:	int3   
64022e8d:	int3   
64022e8e:	int3   
64022e8f:	int3   
64022e90:	mov    ecx,DWORD PTR [ebp-0x10]
64022e93:	jmp    0x64001930
64022e98:	mov    edx,DWORD PTR [esp+0x8]
64022e9c:	lea    eax,[edx-0xc]
64022e9f:	mov    ecx,DWORD PTR [edx-0x10]
64022ea2:	xor    ecx,eax
64022ea4:	call   0x64012b8c
64022ea9:	mov    eax,0x6402b72c
64022eae:	jmp    0x6401284e
64022eb3:	int3   
64022eb4:	int3   
64022eb5:	int3   
64022eb6:	int3   
64022eb7:	int3   
64022eb8:	int3   
64022eb9:	int3   
64022eba:	int3   
64022ebb:	int3   
64022ebc:	int3   
64022ebd:	int3   
64022ebe:	int3   
64022ebf:	int3   
64022ec0:	mov    eax,ds:0x64031360
64022ec5:	and    eax,0xfffffffe
64022ec8:	mov    ds:0x64031360,eax
64022ecd:	ret    
64022ece:	mov    edx,DWORD PTR [esp+0x8]
64022ed2:	lea    eax,[edx-0xc]
64022ed5:	mov    ecx,DWORD PTR [edx-0x10]
64022ed8:	xor    ecx,eax
64022eda:	call   0x64012b8c
64022edf:	mov    eax,0x6402b758
64022ee4:	jmp    0x6401284e
64022ee9:	int3   
64022eea:	int3   
64022eeb:	int3   
64022eec:	int3   
64022eed:	int3   
64022eee:	int3   
64022eef:	int3   
64022ef0:	mov    eax,ds:0x64031368
64022ef5:	and    eax,0xfffffffe
64022ef8:	mov    ds:0x64031368,eax
64022efd:	ret    
64022efe:	mov    edx,DWORD PTR [esp+0x8]
64022f02:	lea    eax,[edx-0xc]
64022f05:	mov    ecx,DWORD PTR [edx-0x10]
64022f08:	xor    ecx,eax
64022f0a:	call   0x64012b8c
64022f0f:	mov    eax,0x6402b784
64022f14:	jmp    0x6401284e
64022f19:	int3   
64022f1a:	int3   
64022f1b:	int3   
64022f1c:	int3   
64022f1d:	int3   
64022f1e:	int3   
64022f1f:	int3   
64022f20:	mov    eax,ds:0x64031370
64022f25:	and    eax,0xfffffffe
64022f28:	mov    ds:0x64031370,eax
64022f2d:	ret    
64022f2e:	mov    edx,DWORD PTR [esp+0x8]
64022f32:	lea    eax,[edx-0xc]
64022f35:	mov    ecx,DWORD PTR [edx-0x10]
64022f38:	xor    ecx,eax
64022f3a:	call   0x64012b8c
64022f3f:	mov    eax,0x6402b7b0
64022f44:	jmp    0x6401284e
64022f49:	int3   
64022f4a:	int3   
64022f4b:	int3   
64022f4c:	int3   
64022f4d:	int3   
64022f4e:	int3   
64022f4f:	int3   
64022f50:	mov    eax,ds:0x64031378
64022f55:	and    eax,0xfffffffe
64022f58:	mov    ds:0x64031378,eax
64022f5d:	ret    
64022f5e:	mov    edx,DWORD PTR [esp+0x8]
64022f62:	lea    eax,[edx-0xc]
64022f65:	mov    ecx,DWORD PTR [edx-0x10]
64022f68:	xor    ecx,eax
64022f6a:	call   0x64012b8c
64022f6f:	mov    eax,0x6402b7dc
64022f74:	jmp    0x6401284e
64022f79:	int3   
64022f7a:	int3   
64022f7b:	int3   
64022f7c:	int3   
64022f7d:	int3   
64022f7e:	int3   
64022f7f:	int3   
64022f80:	mov    eax,ds:0x64031380
64022f85:	and    eax,0xfffffffe
64022f88:	mov    ds:0x64031380,eax
64022f8d:	ret    
64022f8e:	mov    edx,DWORD PTR [esp+0x8]
64022f92:	lea    eax,[edx-0xc]
64022f95:	mov    ecx,DWORD PTR [edx-0x10]
64022f98:	xor    ecx,eax
64022f9a:	call   0x64012b8c
64022f9f:	mov    eax,0x6402b808
64022fa4:	jmp    0x6401284e
64022fa9:	int3   
64022faa:	int3   
64022fab:	int3   
64022fac:	int3   
64022fad:	int3   
64022fae:	int3   
64022faf:	int3   
64022fb0:	mov    eax,ds:0x64031388
64022fb5:	and    eax,0xfffffffe
64022fb8:	mov    ds:0x64031388,eax
64022fbd:	ret    
64022fbe:	mov    edx,DWORD PTR [esp+0x8]
64022fc2:	lea    eax,[edx-0xc]
64022fc5:	mov    ecx,DWORD PTR [edx-0x10]
64022fc8:	xor    ecx,eax
64022fca:	call   0x64012b8c
64022fcf:	mov    eax,0x6402b834
64022fd4:	jmp    0x6401284e
64022fd9:	int3   
64022fda:	int3   
64022fdb:	int3   
64022fdc:	int3   
64022fdd:	int3   
64022fde:	int3   
64022fdf:	int3   
64022fe0:	mov    eax,ds:0x64031390
64022fe5:	and    eax,0xfffffffe
64022fe8:	mov    ds:0x64031390,eax
64022fed:	ret    
64022fee:	mov    edx,DWORD PTR [esp+0x8]
64022ff2:	lea    eax,[edx-0xc]
64022ff5:	mov    ecx,DWORD PTR [edx-0x10]
64022ff8:	xor    ecx,eax
64022ffa:	call   0x64012b8c
64022fff:	mov    eax,0x6402b860
64023004:	jmp    0x6401284e
64023009:	int3   
6402300a:	int3   
6402300b:	int3   
6402300c:	int3   
6402300d:	int3   
6402300e:	int3   
6402300f:	int3   
64023010:	mov    eax,ds:0x64031398
64023015:	and    eax,0xfffffffe
64023018:	mov    ds:0x64031398,eax
6402301d:	ret    
6402301e:	mov    edx,DWORD PTR [esp+0x8]
64023022:	lea    eax,[edx-0xc]
64023025:	mov    ecx,DWORD PTR [edx-0x10]
64023028:	xor    ecx,eax
6402302a:	call   0x64012b8c
6402302f:	mov    eax,0x6402b88c
64023034:	jmp    0x6401284e
64023039:	int3   
6402303a:	int3   
6402303b:	int3   
6402303c:	int3   
6402303d:	int3   
6402303e:	int3   
6402303f:	int3   
64023040:	mov    eax,ds:0x640313a0
64023045:	and    eax,0xfffffffe
64023048:	mov    ds:0x640313a0,eax
6402304d:	ret    
6402304e:	mov    edx,DWORD PTR [esp+0x8]
64023052:	lea    eax,[edx-0xc]
64023055:	mov    ecx,DWORD PTR [edx-0x10]
64023058:	xor    ecx,eax
6402305a:	call   0x64012b8c
6402305f:	mov    eax,0x6402b8b8
64023064:	jmp    0x6401284e
64023069:	int3   
6402306a:	int3   
6402306b:	int3   
6402306c:	int3   
6402306d:	int3   
6402306e:	int3   
6402306f:	int3   
64023070:	mov    eax,ds:0x640313a8
64023075:	and    eax,0xfffffffe
64023078:	mov    ds:0x640313a8,eax
6402307d:	ret    
6402307e:	mov    edx,DWORD PTR [esp+0x8]
64023082:	lea    eax,[edx-0xc]
64023085:	mov    ecx,DWORD PTR [edx-0x10]
64023088:	xor    ecx,eax
6402308a:	call   0x64012b8c
6402308f:	mov    eax,0x6402b8e4
64023094:	jmp    0x6401284e
64023099:	int3   
6402309a:	int3   
6402309b:	int3   
6402309c:	int3   
6402309d:	int3   
6402309e:	int3   
6402309f:	int3   
640230a0:	mov    eax,ds:0x640313b0
640230a5:	and    eax,0xfffffffe
640230a8:	mov    ds:0x640313b0,eax
640230ad:	ret    
640230ae:	mov    edx,DWORD PTR [esp+0x8]
640230b2:	lea    eax,[edx-0xc]
640230b5:	mov    ecx,DWORD PTR [edx-0x10]
640230b8:	xor    ecx,eax
640230ba:	call   0x64012b8c
640230bf:	mov    eax,0x6402b910
640230c4:	jmp    0x6401284e
640230c9:	int3   
640230ca:	int3   
640230cb:	int3   
640230cc:	int3   
640230cd:	int3   
640230ce:	int3   
640230cf:	int3   
640230d0:	mov    eax,ds:0x640313b8
640230d5:	and    eax,0xfffffffe
640230d8:	mov    ds:0x640313b8,eax
640230dd:	ret    
640230de:	mov    edx,DWORD PTR [esp+0x8]
640230e2:	lea    eax,[edx-0xc]
640230e5:	mov    ecx,DWORD PTR [edx-0x10]
640230e8:	xor    ecx,eax
640230ea:	call   0x64012b8c
640230ef:	mov    eax,0x6402b93c
640230f4:	jmp    0x6401284e
640230f9:	int3   
640230fa:	int3   
640230fb:	int3   
640230fc:	int3   
640230fd:	int3   
640230fe:	int3   
640230ff:	int3   
64023100:	mov    eax,ds:0x640313c0
64023105:	and    eax,0xfffffffe
64023108:	mov    ds:0x640313c0,eax
6402310d:	ret    
6402310e:	mov    edx,DWORD PTR [esp+0x8]
64023112:	lea    eax,[edx-0xc]
64023115:	mov    ecx,DWORD PTR [edx-0x10]
64023118:	xor    ecx,eax
6402311a:	call   0x64012b8c
6402311f:	mov    eax,0x6402b968
64023124:	jmp    0x6401284e
64023129:	int3   
6402312a:	int3   
6402312b:	int3   
6402312c:	int3   
6402312d:	int3   
6402312e:	int3   
6402312f:	int3   
64023130:	mov    eax,ds:0x640313c8
64023135:	and    eax,0xfffffffe
64023138:	mov    ds:0x640313c8,eax
6402313d:	ret    
6402313e:	mov    edx,DWORD PTR [esp+0x8]
64023142:	lea    eax,[edx-0xc]
64023145:	mov    ecx,DWORD PTR [edx-0x10]
64023148:	xor    ecx,eax
6402314a:	call   0x64012b8c
6402314f:	mov    eax,0x6402b994
64023154:	jmp    0x6401284e
64023159:	int3   
6402315a:	int3   
6402315b:	int3   
6402315c:	int3   
6402315d:	int3   
6402315e:	int3   
6402315f:	int3   
64023160:	mov    eax,ds:0x640313d0
64023165:	and    eax,0xfffffffe
64023168:	mov    ds:0x640313d0,eax
6402316d:	ret    
6402316e:	mov    edx,DWORD PTR [esp+0x8]
64023172:	lea    eax,[edx-0xc]
64023175:	mov    ecx,DWORD PTR [edx-0x10]
64023178:	xor    ecx,eax
6402317a:	call   0x64012b8c
6402317f:	mov    eax,0x6402b9c0
64023184:	jmp    0x6401284e
64023189:	int3   
6402318a:	int3   
6402318b:	int3   
6402318c:	int3   
6402318d:	int3   
6402318e:	int3   
6402318f:	int3   
64023190:	mov    eax,ds:0x640313d8
64023195:	and    eax,0xfffffffe
64023198:	mov    ds:0x640313d8,eax
6402319d:	ret    
6402319e:	mov    edx,DWORD PTR [esp+0x8]
640231a2:	lea    eax,[edx-0xc]
640231a5:	mov    ecx,DWORD PTR [edx-0x10]
640231a8:	xor    ecx,eax
640231aa:	call   0x64012b8c
640231af:	mov    eax,0x6402b9ec
640231b4:	jmp    0x6401284e
640231b9:	int3   
640231ba:	int3   
640231bb:	int3   
640231bc:	int3   
640231bd:	int3   
640231be:	int3   
640231bf:	int3   
640231c0:	mov    eax,ds:0x640313e0
640231c5:	and    eax,0xfffffffe
640231c8:	mov    ds:0x640313e0,eax
640231cd:	ret    
640231ce:	mov    edx,DWORD PTR [esp+0x8]
640231d2:	lea    eax,[edx-0xc]
640231d5:	mov    ecx,DWORD PTR [edx-0x10]
640231d8:	xor    ecx,eax
640231da:	call   0x64012b8c
640231df:	mov    eax,0x6402ba18
640231e4:	jmp    0x6401284e
640231e9:	int3   
640231ea:	int3   
640231eb:	int3   
640231ec:	int3   
640231ed:	int3   
640231ee:	int3   
640231ef:	int3   
640231f0:	mov    eax,ds:0x640313e8
640231f5:	and    eax,0xfffffffe
640231f8:	mov    ds:0x640313e8,eax
640231fd:	ret    
640231fe:	mov    edx,DWORD PTR [esp+0x8]
64023202:	lea    eax,[edx-0xc]
64023205:	mov    ecx,DWORD PTR [edx-0x10]
64023208:	xor    ecx,eax
6402320a:	call   0x64012b8c
6402320f:	mov    eax,0x6402ba44
64023214:	jmp    0x6401284e
64023219:	int3   
6402321a:	int3   
6402321b:	int3   
6402321c:	int3   
6402321d:	int3   
6402321e:	int3   
6402321f:	int3   
64023220:	mov    eax,ds:0x640313f0
64023225:	and    eax,0xfffffffe
64023228:	mov    ds:0x640313f0,eax
6402322d:	ret    
6402322e:	mov    edx,DWORD PTR [esp+0x8]
64023232:	lea    eax,[edx-0xc]
64023235:	mov    ecx,DWORD PTR [edx-0x10]
64023238:	xor    ecx,eax
6402323a:	call   0x64012b8c
6402323f:	mov    eax,0x6402ba70
64023244:	jmp    0x6401284e
64023249:	int3   
6402324a:	int3   
6402324b:	int3   
6402324c:	int3   
6402324d:	int3   
6402324e:	int3   
6402324f:	int3   
64023250:	mov    eax,ds:0x640313f8
64023255:	and    eax,0xfffffffe
64023258:	mov    ds:0x640313f8,eax
6402325d:	ret    
6402325e:	mov    edx,DWORD PTR [esp+0x8]
64023262:	lea    eax,[edx-0xc]
64023265:	mov    ecx,DWORD PTR [edx-0x10]
64023268:	xor    ecx,eax
6402326a:	call   0x64012b8c
6402326f:	mov    eax,0x6402ba9c
64023274:	jmp    0x6401284e
64023279:	int3   
6402327a:	int3   
6402327b:	int3   
6402327c:	int3   
6402327d:	int3   
6402327e:	int3   
6402327f:	int3   
64023280:	mov    eax,ds:0x64031400
64023285:	and    eax,0xfffffffe
64023288:	mov    ds:0x64031400,eax
6402328d:	ret    
6402328e:	mov    edx,DWORD PTR [esp+0x8]
64023292:	lea    eax,[edx-0xc]
64023295:	mov    ecx,DWORD PTR [edx-0x10]
64023298:	xor    ecx,eax
6402329a:	call   0x64012b8c
6402329f:	mov    eax,0x6402bac8
640232a4:	jmp    0x6401284e
640232a9:	int3   
640232aa:	int3   
640232ab:	int3   
640232ac:	int3   
640232ad:	int3   
640232ae:	int3   
640232af:	int3   
640232b0:	mov    eax,ds:0x64031408
640232b5:	and    eax,0xfffffffe
640232b8:	mov    ds:0x64031408,eax
640232bd:	ret    
640232be:	mov    edx,DWORD PTR [esp+0x8]
640232c2:	lea    eax,[edx-0xc]
640232c5:	mov    ecx,DWORD PTR [edx-0x10]
640232c8:	xor    ecx,eax
640232ca:	call   0x64012b8c
640232cf:	mov    eax,0x6402baf4
640232d4:	jmp    0x6401284e
640232d9:	int3   
640232da:	int3   
640232db:	int3   
640232dc:	int3   
640232dd:	int3   
640232de:	int3   
640232df:	int3   
640232e0:	mov    eax,ds:0x64031410
640232e5:	and    eax,0xfffffffe
640232e8:	mov    ds:0x64031410,eax
640232ed:	ret    
640232ee:	mov    edx,DWORD PTR [esp+0x8]
640232f2:	lea    eax,[edx-0xc]
640232f5:	mov    ecx,DWORD PTR [edx-0x10]
640232f8:	xor    ecx,eax
640232fa:	call   0x64012b8c
640232ff:	mov    eax,0x6402bb20
64023304:	jmp    0x6401284e
64023309:	int3   
6402330a:	int3   
6402330b:	int3   
6402330c:	int3   
6402330d:	int3   
6402330e:	int3   
6402330f:	int3   
64023310:	mov    eax,ds:0x64031418
64023315:	and    eax,0xfffffffe
64023318:	mov    ds:0x64031418,eax
6402331d:	ret    
6402331e:	mov    edx,DWORD PTR [esp+0x8]
64023322:	lea    eax,[edx-0xc]
64023325:	mov    ecx,DWORD PTR [edx-0x10]
64023328:	xor    ecx,eax
6402332a:	call   0x64012b8c
6402332f:	mov    eax,0x6402bb4c
64023334:	jmp    0x6401284e
64023339:	int3   
6402333a:	int3   
6402333b:	int3   
6402333c:	int3   
6402333d:	int3   
6402333e:	int3   
6402333f:	int3   
64023340:	mov    eax,ds:0x64031420
64023345:	and    eax,0xfffffffe
64023348:	mov    ds:0x64031420,eax
6402334d:	ret    
6402334e:	mov    edx,DWORD PTR [esp+0x8]
64023352:	lea    eax,[edx-0xc]
64023355:	mov    ecx,DWORD PTR [edx-0x10]
64023358:	xor    ecx,eax
6402335a:	call   0x64012b8c
6402335f:	mov    eax,0x6402bb78
64023364:	jmp    0x6401284e
64023369:	int3   
6402336a:	int3   
6402336b:	int3   
6402336c:	int3   
6402336d:	int3   
6402336e:	int3   
6402336f:	int3   
64023370:	mov    eax,ds:0x64031428
64023375:	and    eax,0xfffffffe
64023378:	mov    ds:0x64031428,eax
6402337d:	ret    
6402337e:	mov    edx,DWORD PTR [esp+0x8]
64023382:	lea    eax,[edx-0xc]
64023385:	mov    ecx,DWORD PTR [edx-0x10]
64023388:	xor    ecx,eax
6402338a:	call   0x64012b8c
6402338f:	mov    eax,0x6402bba4
64023394:	jmp    0x6401284e
64023399:	int3   
6402339a:	int3   
6402339b:	int3   
6402339c:	int3   
6402339d:	int3   
6402339e:	int3   
6402339f:	int3   
640233a0:	mov    eax,ds:0x64031430
640233a5:	and    eax,0xfffffffe
640233a8:	mov    ds:0x64031430,eax
640233ad:	ret    
640233ae:	mov    edx,DWORD PTR [esp+0x8]
640233b2:	lea    eax,[edx-0xc]
640233b5:	mov    ecx,DWORD PTR [edx-0x10]
640233b8:	xor    ecx,eax
640233ba:	call   0x64012b8c
640233bf:	mov    eax,0x6402bbd0
640233c4:	jmp    0x6401284e
640233c9:	int3   
640233ca:	int3   
640233cb:	int3   
640233cc:	int3   
640233cd:	int3   
640233ce:	int3   
640233cf:	int3   
640233d0:	mov    eax,ds:0x64031438
640233d5:	and    eax,0xfffffffe
640233d8:	mov    ds:0x64031438,eax
640233dd:	ret    
640233de:	mov    edx,DWORD PTR [esp+0x8]
640233e2:	lea    eax,[edx-0xc]
640233e5:	mov    ecx,DWORD PTR [edx-0x10]
640233e8:	xor    ecx,eax
640233ea:	call   0x64012b8c
640233ef:	mov    eax,0x6402bbfc
640233f4:	jmp    0x6401284e
640233f9:	int3   
640233fa:	int3   
640233fb:	int3   
640233fc:	int3   
640233fd:	int3   
640233fe:	int3   
640233ff:	int3   
64023400:	mov    eax,ds:0x64031440
64023405:	and    eax,0xfffffffe
64023408:	mov    ds:0x64031440,eax
6402340d:	ret    
6402340e:	mov    edx,DWORD PTR [esp+0x8]
64023412:	lea    eax,[edx-0xc]
64023415:	mov    ecx,DWORD PTR [edx-0x10]
64023418:	xor    ecx,eax
6402341a:	call   0x64012b8c
6402341f:	mov    eax,0x6402bc28
64023424:	jmp    0x6401284e
64023429:	int3   
6402342a:	int3   
6402342b:	int3   
6402342c:	int3   
6402342d:	int3   
6402342e:	int3   
6402342f:	int3   
64023430:	mov    eax,ds:0x64031448
64023435:	and    eax,0xfffffffe
64023438:	mov    ds:0x64031448,eax
6402343d:	ret    
6402343e:	mov    edx,DWORD PTR [esp+0x8]
64023442:	lea    eax,[edx-0xc]
64023445:	mov    ecx,DWORD PTR [edx-0x10]
64023448:	xor    ecx,eax
6402344a:	call   0x64012b8c
6402344f:	mov    eax,0x6402bc54
64023454:	jmp    0x6401284e
64023459:	int3   
6402345a:	int3   
6402345b:	int3   
6402345c:	int3   
6402345d:	int3   
6402345e:	int3   
6402345f:	int3   
64023460:	mov    eax,ds:0x64031450
64023465:	and    eax,0xfffffffe
64023468:	mov    ds:0x64031450,eax
6402346d:	ret    
6402346e:	mov    edx,DWORD PTR [esp+0x8]
64023472:	lea    eax,[edx-0xc]
64023475:	mov    ecx,DWORD PTR [edx-0x10]
64023478:	xor    ecx,eax
6402347a:	call   0x64012b8c
6402347f:	mov    eax,0x6402bc80
64023484:	jmp    0x6401284e
64023489:	int3   
6402348a:	int3   
6402348b:	int3   
6402348c:	int3   
6402348d:	int3   
6402348e:	int3   
6402348f:	int3   
64023490:	mov    eax,ds:0x64031458
64023495:	and    eax,0xfffffffe
64023498:	mov    ds:0x64031458,eax
6402349d:	ret    
6402349e:	mov    edx,DWORD PTR [esp+0x8]
640234a2:	lea    eax,[edx-0xc]
640234a5:	mov    ecx,DWORD PTR [edx-0x10]
640234a8:	xor    ecx,eax
640234aa:	call   0x64012b8c
640234af:	mov    eax,0x6402bcac
640234b4:	jmp    0x6401284e
640234b9:	int3   
640234ba:	int3   
640234bb:	int3   
640234bc:	int3   
640234bd:	int3   
640234be:	int3   
640234bf:	int3   
640234c0:	mov    eax,ds:0x64031460
640234c5:	and    eax,0xfffffffe
640234c8:	mov    ds:0x64031460,eax
640234cd:	ret    
640234ce:	mov    edx,DWORD PTR [esp+0x8]
640234d2:	lea    eax,[edx-0xc]
640234d5:	mov    ecx,DWORD PTR [edx-0x10]
640234d8:	xor    ecx,eax
640234da:	call   0x64012b8c
640234df:	mov    eax,0x6402bcd8
640234e4:	jmp    0x6401284e
640234e9:	int3   
640234ea:	int3   
640234eb:	int3   
640234ec:	int3   
640234ed:	int3   
640234ee:	int3   
640234ef:	int3   
640234f0:	mov    eax,ds:0x64031468
640234f5:	and    eax,0xfffffffe
640234f8:	mov    ds:0x64031468,eax
640234fd:	ret    
640234fe:	mov    edx,DWORD PTR [esp+0x8]
64023502:	lea    eax,[edx-0xc]
64023505:	mov    ecx,DWORD PTR [edx-0x10]
64023508:	xor    ecx,eax
6402350a:	call   0x64012b8c
6402350f:	mov    eax,0x6402bd04
64023514:	jmp    0x6401284e
64023519:	int3   
6402351a:	int3   
6402351b:	int3   
6402351c:	int3   
6402351d:	int3   
6402351e:	int3   
6402351f:	int3   
64023520:	mov    eax,ds:0x64031470
64023525:	and    eax,0xfffffffe
64023528:	mov    ds:0x64031470,eax
6402352d:	ret    
6402352e:	mov    edx,DWORD PTR [esp+0x8]
64023532:	lea    eax,[edx-0xc]
64023535:	mov    ecx,DWORD PTR [edx-0x10]
64023538:	xor    ecx,eax
6402353a:	call   0x64012b8c
6402353f:	mov    eax,0x6402bd30
64023544:	jmp    0x6401284e
64023549:	int3   
6402354a:	int3   
6402354b:	int3   
6402354c:	int3   
6402354d:	int3   
6402354e:	int3   
6402354f:	int3   
64023550:	mov    eax,ds:0x64031478
64023555:	and    eax,0xfffffffe
64023558:	mov    ds:0x64031478,eax
6402355d:	ret    
6402355e:	mov    edx,DWORD PTR [esp+0x8]
64023562:	lea    eax,[edx-0xc]
64023565:	mov    ecx,DWORD PTR [edx-0x10]
64023568:	xor    ecx,eax
6402356a:	call   0x64012b8c
6402356f:	mov    eax,0x6402bd5c
64023574:	jmp    0x6401284e
64023579:	int3   
6402357a:	int3   
6402357b:	int3   
6402357c:	int3   
6402357d:	int3   
6402357e:	int3   
6402357f:	int3   
64023580:	mov    eax,ds:0x64031480
64023585:	and    eax,0xfffffffe
64023588:	mov    ds:0x64031480,eax
6402358d:	ret    
6402358e:	mov    edx,DWORD PTR [esp+0x8]
64023592:	lea    eax,[edx-0xc]
64023595:	mov    ecx,DWORD PTR [edx-0x10]
64023598:	xor    ecx,eax
6402359a:	call   0x64012b8c
6402359f:	mov    eax,0x6402bd88
640235a4:	jmp    0x6401284e
640235a9:	int3   
640235aa:	int3   
640235ab:	int3   
640235ac:	int3   
640235ad:	int3   
640235ae:	int3   
640235af:	int3   
640235b0:	mov    eax,ds:0x64031488
640235b5:	and    eax,0xfffffffe
640235b8:	mov    ds:0x64031488,eax
640235bd:	ret    
640235be:	mov    edx,DWORD PTR [esp+0x8]
640235c2:	lea    eax,[edx-0xc]
640235c5:	mov    ecx,DWORD PTR [edx-0x10]
640235c8:	xor    ecx,eax
640235ca:	call   0x64012b8c
640235cf:	mov    eax,0x6402bdb4
640235d4:	jmp    0x6401284e
640235d9:	int3   
640235da:	int3   
640235db:	int3   
640235dc:	int3   
640235dd:	int3   
640235de:	int3   
640235df:	int3   
640235e0:	mov    eax,ds:0x64031490
640235e5:	and    eax,0xfffffffe
640235e8:	mov    ds:0x64031490,eax
640235ed:	ret    
640235ee:	mov    edx,DWORD PTR [esp+0x8]
640235f2:	lea    eax,[edx-0xc]
640235f5:	mov    ecx,DWORD PTR [edx-0x10]
640235f8:	xor    ecx,eax
640235fa:	call   0x64012b8c
640235ff:	mov    eax,0x6402bde0
64023604:	jmp    0x6401284e
64023609:	int3   
6402360a:	int3   
6402360b:	int3   
6402360c:	int3   
6402360d:	int3   
6402360e:	int3   
6402360f:	int3   
64023610:	mov    eax,ds:0x64031498
64023615:	and    eax,0xfffffffe
64023618:	mov    ds:0x64031498,eax
6402361d:	ret    
6402361e:	mov    edx,DWORD PTR [esp+0x8]
64023622:	lea    eax,[edx-0xc]
64023625:	mov    ecx,DWORD PTR [edx-0x10]
64023628:	xor    ecx,eax
6402362a:	call   0x64012b8c
6402362f:	mov    eax,0x6402be0c
64023634:	jmp    0x6401284e
64023639:	int3   
6402363a:	int3   
6402363b:	int3   
6402363c:	int3   
6402363d:	int3   
6402363e:	int3   
6402363f:	int3   
64023640:	mov    eax,ds:0x640314a0
64023645:	and    eax,0xfffffffe
64023648:	mov    ds:0x640314a0,eax
6402364d:	ret    
6402364e:	mov    edx,DWORD PTR [esp+0x8]
64023652:	lea    eax,[edx-0xc]
64023655:	mov    ecx,DWORD PTR [edx-0x10]
64023658:	xor    ecx,eax
6402365a:	call   0x64012b8c
6402365f:	mov    eax,0x6402be38
64023664:	jmp    0x6401284e
64023669:	int3   
6402366a:	int3   
6402366b:	int3   
6402366c:	int3   
6402366d:	int3   
6402366e:	int3   
6402366f:	int3   
64023670:	mov    eax,ds:0x640314a8
64023675:	and    eax,0xfffffffe
64023678:	mov    ds:0x640314a8,eax
6402367d:	ret    
6402367e:	mov    edx,DWORD PTR [esp+0x8]
64023682:	lea    eax,[edx-0xc]
64023685:	mov    ecx,DWORD PTR [edx-0x10]
64023688:	xor    ecx,eax
6402368a:	call   0x64012b8c
6402368f:	mov    eax,0x6402be64
64023694:	jmp    0x6401284e
64023699:	int3   
6402369a:	int3   
6402369b:	int3   
6402369c:	int3   
6402369d:	int3   
6402369e:	int3   
6402369f:	int3   
640236a0:	lea    edi,[ebp-0x58]
640236a3:	jmp    0x64009870
640236a8:	lea    edi,[ebp-0x40]
640236ab:	jmp    0x64009870
640236b0:	lea    edi,[ebp-0x38]
640236b3:	jmp    0x64009870
640236b8:	lea    edi,[ebp-0x3c]
640236bb:	jmp    0x64009870
640236c0:	lea    edi,[ebp-0x40]
640236c3:	jmp    0x64009870
640236c8:	lea    ecx,[ebp-0x24]
640236cb:	jmp    0x64009be0
640236d0:	mov    edx,DWORD PTR [esp+0x8]
640236d4:	lea    eax,[edx-0x60]
640236d7:	mov    ecx,DWORD PTR [edx-0x64]
640236da:	xor    ecx,eax
640236dc:	call   0x64012b8c
640236e1:	mov    eax,0x6402beb8
640236e6:	jmp    0x6401284e
640236eb:	int3   
640236ec:	int3   
640236ed:	int3   
640236ee:	int3   
640236ef:	int3   
640236f0:	lea    eax,[ebp-0x24]
640236f3:	jmp    0x6400a700
640236f8:	lea    ecx,[ebp-0x10]
640236fb:	jmp    0x64001930
64023700:	lea    ecx,[ebp-0x18]
64023703:	jmp    0x64001930
64023708:	lea    ecx,[ebp-0x40]
6402370b:	jmp    0x64001650
64023710:	mov    edx,DWORD PTR [esp+0x8]
64023714:	lea    eax,[edx+0xc]
64023717:	mov    ecx,DWORD PTR [edx-0x44]
6402371a:	xor    ecx,eax
6402371c:	call   0x64012b8c
64023721:	mov    ecx,DWORD PTR [edx+0x294]
64023727:	xor    ecx,eax
64023729:	call   0x64012b8c
6402372e:	mov    eax,0x6402befc
64023733:	jmp    0x6401284e
64023738:	int3   
64023739:	int3   
6402373a:	int3   
6402373b:	int3   
6402373c:	int3   
6402373d:	int3   
6402373e:	int3   
6402373f:	int3   
64023740:	lea    ecx,[ebp-0x1005c]
64023746:	jmp    0x64001650
6402374b:	lea    ecx,[ebp-0x10074]
64023751:	jmp    0x64002700
64023756:	lea    ecx,[ebp-0x10074]
6402375c:	jmp    0x64002700
64023761:	lea    ecx,[ebp-0x1005c]
64023767:	jmp    0x64001650
6402376c:	mov    edx,DWORD PTR [esp+0x8]
64023770:	lea    eax,[edx-0x10084]
64023776:	mov    ecx,DWORD PTR [edx-0x10088]
6402377c:	xor    ecx,eax
6402377e:	call   0x64012b8c
64023783:	add    eax,0x10
64023786:	mov    ecx,DWORD PTR [edx-0x4]
64023789:	xor    ecx,eax
6402378b:	call   0x64012b8c
64023790:	mov    eax,0x6402bf40
64023795:	jmp    0x6401284e
6402379a:	int3   
6402379b:	int3   
6402379c:	int3   
6402379d:	int3   
6402379e:	int3   
6402379f:	int3   
640237a0:	lea    ecx,[ebp-0x30]
640237a3:	jmp    0x64001650
640237a8:	lea    ecx,[ebp-0x5c]
640237ab:	jmp    0x64001650
640237b0:	mov    edx,DWORD PTR [esp+0x8]
640237b4:	lea    eax,[edx-0x74]
640237b7:	mov    ecx,DWORD PTR [edx-0x78]
640237ba:	xor    ecx,eax
640237bc:	call   0x64012b8c
640237c1:	add    eax,0xc
640237c4:	mov    ecx,DWORD PTR [edx-0x8]
640237c7:	xor    ecx,eax
640237c9:	call   0x64012b8c
640237ce:	mov    eax,0x6402bf74
640237d3:	jmp    0x6401284e
640237d8:	int3   
640237d9:	int3   
640237da:	int3   
640237db:	int3   
640237dc:	int3   
640237dd:	int3   
640237de:	int3   
640237df:	int3   
640237e0:	mov    ecx,DWORD PTR [ebp-0x10]
640237e3:	jmp    0x64001930
640237e8:	mov    edx,DWORD PTR [esp+0x8]
640237ec:	lea    eax,[edx-0xc]
640237ef:	mov    ecx,DWORD PTR [edx-0x10]
640237f2:	xor    ecx,eax
640237f4:	call   0x64012b8c
640237f9:	mov    eax,0x6402bfa0
640237fe:	jmp    0x6401284e
64023803:	int3   
64023804:	int3   
64023805:	int3   
64023806:	int3   
64023807:	int3   
64023808:	int3   
64023809:	int3   
6402380a:	int3   
6402380b:	int3   
6402380c:	int3   
6402380d:	int3   
6402380e:	int3   
6402380f:	int3   
64023810:	lea    ecx,[ebp-0x1c]
64023813:	jmp    0x64001930
64023818:	mov    edx,DWORD PTR [esp+0x8]
6402381c:	lea    eax,[edx-0x1c]
6402381f:	mov    ecx,DWORD PTR [edx-0x20]
64023822:	xor    ecx,eax
64023824:	call   0x64012b8c
64023829:	mov    eax,0x6402bfcc
6402382e:	jmp    0x6401284e
64023833:	int3   
64023834:	int3   
64023835:	int3   
64023836:	int3   
64023837:	int3   
64023838:	int3   
64023839:	int3   
6402383a:	int3   
6402383b:	int3   
6402383c:	int3   
6402383d:	int3   
6402383e:	int3   
6402383f:	int3   
64023840:	mov    edx,DWORD PTR [esp+0x8]
64023844:	lea    eax,[edx+0xc]
64023847:	mov    ecx,DWORD PTR [edx-0x16c]
6402384d:	xor    ecx,eax
6402384f:	call   0x64012b8c
64023854:	mov    ecx,DWORD PTR [edx-0x8]
64023857:	xor    ecx,eax
64023859:	call   0x64012b8c
6402385e:	mov    eax,0x6402c024
64023863:	jmp    0x6401284e
64023868:	int3   
64023869:	int3   
6402386a:	int3   
6402386b:	int3   
6402386c:	int3   
6402386d:	int3   
6402386e:	int3   
6402386f:	int3   
64023870:	lea    ecx,[ebp+0x828]
64023876:	jmp    0x64001930
6402387b:	mov    eax,ds:0x640314b8
64023880:	and    eax,0xfffffffe
64023883:	mov    ds:0x640314b8,eax
64023888:	ret    
64023889:	lea    eax,[ebp-0x1c]
6402388c:	jmp    0x64004c30
64023891:	lea    ecx,[ebp-0x44]
64023894:	jmp    0x64001650
64023899:	lea    ecx,[ebp+0x0]
6402389c:	jmp    0x64001650
640238a1:	lea    ecx,[ebp-0x44]
640238a4:	jmp    0x64001650
640238a9:	lea    ecx,[ebp-0x44]
640238ac:	jmp    0x64001650
640238b1:	mov    edx,DWORD PTR [esp+0x8]
640238b5:	lea    eax,[edx+0xc]
640238b8:	mov    ecx,DWORD PTR [edx-0x54]
640238bb:	xor    ecx,eax
640238bd:	call   0x64012b8c
640238c2:	mov    ecx,DWORD PTR [edx+0x828]
640238c8:	xor    ecx,eax
640238ca:	call   0x64012b8c
640238cf:	mov    eax,0x6402c080
640238d4:	jmp    0x6401284e
640238d9:	int3   
640238da:	int3   
640238db:	int3   
640238dc:	int3   
640238dd:	int3   
640238de:	int3   
640238df:	int3   
640238e0:	lea    ecx,[ebp+0x828]
640238e6:	jmp    0x64001930
640238eb:	mov    eax,ds:0x640314bc
640238f0:	and    eax,0xfffffffe
640238f3:	mov    ds:0x640314bc,eax
640238f8:	ret    
640238f9:	lea    eax,[ebp-0x34]
640238fc:	jmp    0x64004c30
64023901:	lea    ecx,[ebp-0x28]
64023904:	jmp    0x64001650
64023909:	lea    ecx,[ebp-0x28]
6402390c:	jmp    0x64001650
64023911:	lea    ecx,[ebp-0x28]
64023914:	jmp    0x64001650
64023919:	lea    ecx,[ebp-0x28]
6402391c:	jmp    0x64001650
64023921:	lea    ecx,[ebp-0x28]
64023924:	jmp    0x64001650
64023929:	lea    ecx,[ebp-0x28]
6402392c:	jmp    0x64001650
64023931:	lea    ecx,[ebp-0x28]
64023934:	jmp    0x64001650
64023939:	lea    ecx,[ebp-0x28]
6402393c:	jmp    0x64001650
64023941:	lea    ecx,[ebp-0x28]
64023944:	jmp    0x64001650
64023949:	lea    ecx,[ebp-0x28]
6402394c:	jmp    0x64001650
64023951:	lea    ecx,[ebp-0x28]
64023954:	jmp    0x64001650
64023959:	lea    ecx,[ebp-0x28]
6402395c:	jmp    0x64001650
64023961:	lea    ecx,[ebp-0x28]
64023964:	jmp    0x64001650
64023969:	lea    ecx,[ebp-0x28]
6402396c:	jmp    0x64001650
64023971:	lea    ecx,[ebp-0x28]
64023974:	jmp    0x64001650
64023979:	lea    ecx,[ebp-0x28]
6402397c:	jmp    0x64001650
64023981:	lea    ecx,[ebp-0x28]
64023984:	jmp    0x64001650
64023989:	lea    ecx,[ebp-0x28]
6402398c:	jmp    0x64001650
64023991:	lea    ecx,[ebp-0x28]
64023994:	jmp    0x64001650
64023999:	lea    ecx,[ebp-0x28]
6402399c:	jmp    0x64001650
640239a1:	lea    ecx,[ebp-0x28]
640239a4:	jmp    0x64001650
640239a9:	lea    ecx,[ebp-0x28]
640239ac:	jmp    0x64001650
640239b1:	lea    ecx,[ebp+0x0]
640239b4:	jmp    0x64001650
640239b9:	lea    ecx,[ebp+0x0]
640239bc:	jmp    0x64001650
640239c1:	lea    ecx,[ebp+0x0]
640239c4:	jmp    0x64001650
640239c9:	lea    ecx,[ebp+0x0]
640239cc:	jmp    0x64001650
640239d1:	lea    ecx,[ebp+0x0]
640239d4:	jmp    0x64001650
640239d9:	lea    ecx,[ebp+0x0]
640239dc:	jmp    0x64001650
640239e1:	lea    ecx,[ebp+0x0]
640239e4:	jmp    0x64001650
640239e9:	lea    ecx,[ebp+0x0]
640239ec:	jmp    0x64001650
640239f1:	lea    ecx,[ebp+0x0]
640239f4:	jmp    0x64001650
640239f9:	lea    ecx,[ebp+0x0]
640239fc:	jmp    0x64001650
64023a01:	lea    ecx,[ebp+0x0]
64023a04:	jmp    0x64001650
64023a09:	lea    ecx,[ebp+0x0]
64023a0c:	jmp    0x64001650
64023a11:	lea    ecx,[ebp+0x0]
64023a14:	jmp    0x64001650
64023a19:	lea    ecx,[ebp+0x0]
64023a1c:	jmp    0x64001650
64023a21:	lea    ecx,[ebp+0x0]
64023a24:	jmp    0x64001650
64023a29:	lea    ecx,[ebp+0x0]
64023a2c:	jmp    0x64001650
64023a31:	lea    ecx,[ebp+0x0]
64023a34:	jmp    0x64001650
64023a39:	lea    ecx,[ebp-0x28]
64023a3c:	jmp    0x64001650
64023a41:	lea    ecx,[ebp-0x28]
64023a44:	jmp    0x64001650
64023a49:	mov    edx,DWORD PTR [esp+0x8]
64023a4d:	lea    eax,[edx+0xc]
64023a50:	mov    ecx,DWORD PTR [edx-0x54]
64023a53:	xor    ecx,eax
64023a55:	call   0x64012b8c
64023a5a:	mov    ecx,DWORD PTR [edx+0x828]
64023a60:	xor    ecx,eax
64023a62:	call   0x64012b8c
64023a67:	mov    eax,0x6402c208
64023a6c:	jmp    0x6401284e
64023a71:	int3   
64023a72:	int3   
64023a73:	int3   
64023a74:	int3   
64023a75:	int3   
64023a76:	int3   
64023a77:	int3   
64023a78:	int3   
64023a79:	int3   
64023a7a:	int3   
64023a7b:	int3   
64023a7c:	int3   
64023a7d:	int3   
64023a7e:	int3   
64023a7f:	int3   
64023a80:	lea    esi,[ebp-0x840]
64023a86:	jmp    0x64002b70
64023a8b:	lea    ecx,[ebp-0x848]
64023a91:	jmp    0x64001930
64023a96:	mov    edx,DWORD PTR [esp+0x8]
64023a9a:	lea    eax,[edx-0x84c]
64023aa0:	mov    ecx,DWORD PTR [edx-0x850]
64023aa6:	xor    ecx,eax
64023aa8:	call   0x64012b8c
64023aad:	add    eax,0xc
64023ab0:	mov    ecx,DWORD PTR [edx-0x8]
64023ab3:	xor    ecx,eax
64023ab5:	call   0x64012b8c
64023aba:	mov    eax,0x6402c23c
64023abf:	jmp    0x6401284e
64023ac4:	int3   
64023ac5:	int3   
64023ac6:	int3   
64023ac7:	int3   
64023ac8:	int3   
64023ac9:	int3   
64023aca:	int3   
64023acb:	int3   
64023acc:	int3   
64023acd:	int3   
64023ace:	int3   
64023acf:	int3   
64023ad0:	mov    eax,DWORD PTR [ebp-0x54]
64023ad3:	and    eax,0x1
64023ad6:	je     0x64023ae8
64023adc:	and    DWORD PTR [ebp-0x54],0xfffffffe
64023ae0:	mov    ecx,DWORD PTR [ebp+0x4]
64023ae3:	jmp    0x64001930
64023ae8:	ret    
64023ae9:	lea    ecx,[ebp-0x50]
64023aec:	jmp    0x64001650
64023af1:	lea    ecx,[ebp-0x50]
64023af4:	jmp    0x64001650
64023af9:	mov    edx,DWORD PTR [esp+0x8]
64023afd:	lea    eax,[edx-0x54]
64023b00:	mov    ecx,DWORD PTR [edx-0x58]
64023b03:	xor    ecx,eax
64023b05:	call   0x64012b8c
64023b0a:	mov    eax,0x6402c278
64023b0f:	jmp    0x6401284e
64023b14:	int3   
64023b15:	int3   
64023b16:	int3   
64023b17:	int3   
64023b18:	int3   
64023b19:	int3   
64023b1a:	int3   
64023b1b:	int3   
64023b1c:	int3   
64023b1d:	int3   
64023b1e:	int3   
64023b1f:	int3   
64023b20:	lea    ecx,[ebp+0x4]
64023b23:	jmp    0x64001930
64023b28:	lea    ecx,[ebp-0x58]
64023b2b:	jmp    0x64001680
64023b30:	lea    ecx,[ebp-0x50]
64023b33:	jmp    0x64001650
64023b38:	lea    ecx,[ebp-0x50]
64023b3b:	jmp    0x64001650
64023b40:	mov    edx,DWORD PTR [esp+0x8]
64023b44:	lea    eax,[edx-0x58]
64023b47:	mov    ecx,DWORD PTR [edx-0x5c]
64023b4a:	xor    ecx,eax
64023b4c:	call   0x64012b8c
64023b51:	mov    eax,0x6402c2bc
64023b56:	jmp    0x6401284e
64023b5b:	int3   
64023b5c:	int3   
64023b5d:	int3   
64023b5e:	int3   
64023b5f:	int3   
64023b60:	lea    ecx,[ebp-0x428]
64023b66:	jmp    0x64001930
64023b6b:	mov    edx,DWORD PTR [esp+0x8]
64023b6f:	lea    eax,[edx-0x42c]
64023b75:	mov    ecx,DWORD PTR [edx-0x430]
64023b7b:	xor    ecx,eax
64023b7d:	call   0x64012b8c
64023b82:	add    eax,0x10
64023b85:	mov    ecx,DWORD PTR [edx-0x4]
64023b88:	xor    ecx,eax
64023b8a:	call   0x64012b8c
64023b8f:	mov    eax,0x6402c2e8
64023b94:	jmp    0x6401284e
64023b99:	int3   
64023b9a:	int3   
64023b9b:	int3   
64023b9c:	int3   
64023b9d:	int3   
64023b9e:	int3   
64023b9f:	int3   
64023ba0:	lea    edi,[ebp-0x18]
64023ba3:	jmp    0x64009870
64023ba8:	lea    edi,[ebp-0x1c]
64023bab:	jmp    0x64009870
64023bb0:	lea    edi,[ebp-0x14]
64023bb3:	jmp    0x64009870
64023bb8:	mov    edx,DWORD PTR [esp+0x8]
64023bbc:	lea    eax,[edx-0x1c]
64023bbf:	mov    ecx,DWORD PTR [edx-0x20]
64023bc2:	xor    ecx,eax
64023bc4:	call   0x64012b8c
64023bc9:	mov    eax,0x6402c334
64023bce:	jmp    0x6401284e
64023bd3:	int3   
64023bd4:	int3   
64023bd5:	int3   
64023bd6:	int3   
64023bd7:	int3   
64023bd8:	int3   
64023bd9:	int3   
64023bda:	int3   
64023bdb:	int3   
64023bdc:	int3   
64023bdd:	int3   
64023bde:	int3   
64023bdf:	int3   
64023be0:	mov    eax,DWORD PTR [ebp-0x54]
64023be3:	and    eax,0x1
64023be6:	je     0x64023bf8
64023bec:	and    DWORD PTR [ebp-0x54],0xfffffffe
64023bf0:	mov    ecx,DWORD PTR [ebp+0x4]
64023bf3:	jmp    0x64001930
64023bf8:	ret    
64023bf9:	lea    ecx,[ebp-0x50]
64023bfc:	jmp    0x64001650
64023c01:	mov    edx,DWORD PTR [esp+0x8]
64023c05:	lea    eax,[edx-0x58]
64023c08:	mov    ecx,DWORD PTR [edx-0x5c]
64023c0b:	xor    ecx,eax
64023c0d:	call   0x64012b8c
64023c12:	mov    eax,0x6402c368
64023c17:	jmp    0x6401284e
64023c1c:	int3   
64023c1d:	int3   
64023c1e:	int3   
64023c1f:	int3   
64023c20:	mov    eax,DWORD PTR [ebp-0x28]
64023c23:	and    eax,0x1
64023c26:	je     0x64023c38
64023c2c:	and    DWORD PTR [ebp-0x28],0xfffffffe
64023c30:	mov    ecx,DWORD PTR [ebp+0x4]
64023c33:	jmp    0x64001930
64023c38:	ret    
64023c39:	lea    ecx,[ebp-0x24]
64023c3c:	jmp    0x64001930
64023c41:	lea    ecx,[ebp-0x20]
64023c44:	jmp    0x64001930
64023c49:	lea    ecx,[ebp-0x1c]
64023c4c:	jmp    0x64001930
64023c51:	lea    ecx,[ebp-0x18]
64023c54:	jmp    0x64001930
64023c59:	lea    ecx,[ebp-0x14]
64023c5c:	jmp    0x64001930
64023c61:	lea    ecx,[ebp-0x10]
64023c64:	jmp    0x64001930
64023c69:	mov    edx,DWORD PTR [esp+0x8]
64023c6d:	lea    eax,[edx-0x30]
64023c70:	mov    ecx,DWORD PTR [edx-0x34]
64023c73:	xor    ecx,eax
64023c75:	call   0x64012b8c
64023c7a:	mov    eax,0x6402c3c4
64023c7f:	jmp    0x6401284e
64023c84:	int3   
64023c85:	int3   
64023c86:	int3   
64023c87:	int3   
64023c88:	int3   
64023c89:	int3   
64023c8a:	int3   
64023c8b:	int3   
64023c8c:	int3   
64023c8d:	int3   
64023c8e:	int3   
64023c8f:	int3   
64023c90:	mov    eax,DWORD PTR [ebp-0x3c]
64023c93:	and    eax,0x1
64023c96:	je     0x64023ca8
64023c9c:	and    DWORD PTR [ebp-0x3c],0xfffffffe
64023ca0:	mov    ecx,DWORD PTR [ebp+0x4]
64023ca3:	jmp    0x64001930
64023ca8:	ret    
64023ca9:	lea    ecx,[ebp-0x50]
64023cac:	jmp    0x64001930
64023cb1:	lea    ecx,[ebp-0x38]
64023cb4:	jmp    0x64001930
64023cb9:	mov    edx,DWORD PTR [esp+0x8]
64023cbd:	lea    eax,[edx-0x54]
64023cc0:	mov    ecx,DWORD PTR [edx-0x58]
64023cc3:	xor    ecx,eax
64023cc5:	call   0x64012b8c
64023cca:	mov    eax,0x6402c400
64023ccf:	jmp    0x6401284e
64023cd4:	int3   
64023cd5:	int3   
64023cd6:	int3   
64023cd7:	int3   
64023cd8:	int3   
64023cd9:	int3   
64023cda:	int3   
64023cdb:	int3   
64023cdc:	int3   
64023cdd:	int3   
64023cde:	int3   
64023cdf:	int3   
64023ce0:	lea    ecx,[ebp+0xc]
64023ce3:	jmp    0x64001930
64023ce8:	lea    ecx,[ebp-0x28]
64023ceb:	jmp    0x64001650
64023cf0:	lea    ecx,[ebp-0x6c]
64023cf3:	jmp    0x64001650
64023cf8:	lea    ecx,[ebp-0x88]
64023cfe:	jmp    0x64001650
64023d03:	lea    ecx,[ebp-0xc0]
64023d09:	jmp    0x64001650
64023d0e:	lea    ecx,[ebp-0xa4]
64023d14:	jmp    0x64001650
64023d19:	mov    edx,DWORD PTR [esp+0x8]
64023d1d:	lea    eax,[edx+0xc]
64023d20:	mov    ecx,DWORD PTR [edx-0xc4]
64023d26:	xor    ecx,eax
64023d28:	call   0x64012b8c
64023d2d:	mov    ecx,DWORD PTR [edx+0x80]
64023d33:	xor    ecx,eax
64023d35:	call   0x64012b8c
64023d3a:	mov    eax,0x6402c454
64023d3f:	jmp    0x6401284e
64023d44:	int3   
64023d45:	int3   
64023d46:	int3   
64023d47:	int3   
64023d48:	int3   
64023d49:	int3   
64023d4a:	int3   
64023d4b:	int3   
64023d4c:	int3   
64023d4d:	int3   
64023d4e:	int3   
64023d4f:	int3   
64023d50:	call   0x6400c800
64023d55:	mov    ds:0x64031294,eax
64023d5a:	ret    
64023d5b:	int3   
64023d5c:	int3   
64023d5d:	int3   
64023d5e:	int3   
64023d5f:	int3   
64023d60:	call   0x6400c8e0
64023d65:	mov    ds:0x640312ec,eax
64023d6a:	ret    
64023d6b:	int3   
64023d6c:	int3   
64023d6d:	int3   
64023d6e:	int3   
64023d6f:	int3   
64023d70:	call   0x6400c9c0
64023d75:	mov    ds:0x64031304,eax
64023d7a:	ret    
64023d7b:	int3   
64023d7c:	int3   
64023d7d:	int3   
64023d7e:	int3   
64023d7f:	int3   
64023d80:	call   0x6400caa0
64023d85:	mov    ds:0x64031284,eax
64023d8a:	ret    
64023d8b:	int3   
64023d8c:	int3   
64023d8d:	int3   
64023d8e:	int3   
64023d8f:	int3   
64023d90:	call   0x6400cb80
64023d95:	mov    ds:0x64031308,eax
64023d9a:	ret    
64023d9b:	int3   
64023d9c:	int3   
64023d9d:	int3   
64023d9e:	int3   
64023d9f:	int3   
64023da0:	call   0x6400cc60
64023da5:	mov    ds:0x64031280,eax
64023daa:	ret    
64023dab:	int3   
64023dac:	int3   
64023dad:	int3   
64023dae:	int3   
64023daf:	int3   
64023db0:	call   0x6400cd40
64023db5:	mov    ds:0x640312b0,eax
64023dba:	ret    
64023dbb:	int3   
64023dbc:	int3   
64023dbd:	int3   
64023dbe:	int3   
64023dbf:	int3   
64023dc0:	call   0x6400ce20
64023dc5:	mov    ds:0x640312e0,eax
64023dca:	ret    
64023dcb:	int3   
64023dcc:	int3   
64023dcd:	int3   
64023dce:	int3   
64023dcf:	int3   
64023dd0:	call   0x6400cf00
64023dd5:	mov    ds:0x6403130c,eax
64023dda:	ret    
64023ddb:	int3   
64023ddc:	int3   
64023ddd:	int3   
64023dde:	int3   
64023ddf:	int3   
64023de0:	call   0x6400cfe0
64023de5:	mov    ds:0x640312e8,eax
64023dea:	ret    
64023deb:	int3   
64023dec:	int3   
64023ded:	int3   
64023dee:	int3   
64023def:	int3   
64023df0:	call   0x6400d0c0
64023df5:	mov    ds:0x640312bc,eax
64023dfa:	ret    
64023dfb:	int3   
64023dfc:	int3   
64023dfd:	int3   
64023dfe:	int3   
64023dff:	int3   
64023e00:	call   0x6400d1a0
64023e05:	mov    ds:0x6403129c,eax
64023e0a:	ret    
64023e0b:	int3   
64023e0c:	int3   
64023e0d:	int3   
64023e0e:	int3   
64023e0f:	int3   
64023e10:	call   0x6400d280
64023e15:	mov    ds:0x640312d4,eax
64023e1a:	ret    
64023e1b:	int3   
64023e1c:	int3   
64023e1d:	int3   
64023e1e:	int3   
64023e1f:	int3   
64023e20:	call   0x6400d360
64023e25:	mov    ds:0x6403128c,eax
64023e2a:	ret    
64023e2b:	int3   
64023e2c:	int3   
64023e2d:	int3   
64023e2e:	int3   
64023e2f:	int3   
64023e30:	call   0x6400d440
64023e35:	mov    ds:0x6403127c,eax
64023e3a:	ret    
64023e3b:	int3   
64023e3c:	int3   
64023e3d:	int3   
64023e3e:	int3   
64023e3f:	int3   
64023e40:	call   0x6400d520
64023e45:	mov    ds:0x640312f8,eax
64023e4a:	ret    
64023e4b:	int3   
64023e4c:	int3   
64023e4d:	int3   
64023e4e:	int3   
64023e4f:	int3   
64023e50:	call   0x6400d600
64023e55:	mov    ds:0x640312b8,eax
64023e5a:	ret    
64023e5b:	int3   
64023e5c:	int3   
64023e5d:	int3   
64023e5e:	int3   
64023e5f:	int3   
64023e60:	call   0x6400d6e0
64023e65:	mov    ds:0x640312dc,eax
64023e6a:	ret    
64023e6b:	int3   
64023e6c:	int3   
64023e6d:	int3   
64023e6e:	int3   
64023e6f:	int3   
64023e70:	call   0x6400d7c0
64023e75:	mov    ds:0x64031278,eax
64023e7a:	ret    
64023e7b:	int3   
64023e7c:	int3   
64023e7d:	int3   
64023e7e:	int3   
64023e7f:	int3   
64023e80:	call   0x6400d8a0
64023e85:	mov    ds:0x640312f4,eax
64023e8a:	ret    
64023e8b:	int3   
64023e8c:	int3   
64023e8d:	int3   
64023e8e:	int3   
64023e8f:	int3   
64023e90:	call   0x6400d980
64023e95:	mov    ds:0x640312ac,eax
64023e9a:	ret    
64023e9b:	int3   
64023e9c:	int3   
64023e9d:	int3   
64023e9e:	int3   
64023e9f:	int3   
64023ea0:	call   0x6400da60
64023ea5:	mov    ds:0x64031290,eax
64023eaa:	ret    
64023eab:	int3   
64023eac:	int3   
64023ead:	int3   
64023eae:	int3   
64023eaf:	int3   
64023eb0:	call   0x6400db40
64023eb5:	mov    ds:0x64031298,eax
64023eba:	ret    
64023ebb:	int3   
64023ebc:	int3   
64023ebd:	int3   
64023ebe:	int3   
64023ebf:	int3   
64023ec0:	call   0x6400dc20
64023ec5:	mov    ds:0x64031318,eax
64023eca:	ret    
64023ecb:	int3   
64023ecc:	int3   
64023ecd:	int3   
64023ece:	int3   
64023ecf:	int3   
64023ed0:	call   0x6400dd00
64023ed5:	mov    ds:0x640312a4,eax
64023eda:	ret    
64023edb:	int3   
64023edc:	int3   
64023edd:	int3   
64023ede:	int3   
64023edf:	int3   
64023ee0:	call   0x6400dde0
64023ee5:	mov    ds:0x640312d8,eax
64023eea:	ret    
64023eeb:	int3   
64023eec:	int3   
64023eed:	int3   
64023eee:	int3   
64023eef:	int3   
64023ef0:	call   0x6400dec0
64023ef5:	mov    ds:0x64031288,eax
64023efa:	ret    
64023efb:	int3   
64023efc:	int3   
64023efd:	int3   
64023efe:	int3   
64023eff:	int3   
64023f00:	call   0x6400dfa0
64023f05:	mov    ds:0x640312e4,eax
64023f0a:	ret    
64023f0b:	int3   
64023f0c:	int3   
64023f0d:	int3   
64023f0e:	int3   
64023f0f:	int3   
64023f10:	call   0x6400e080
64023f15:	mov    ds:0x640312c8,eax
64023f1a:	ret    
64023f1b:	int3   
64023f1c:	int3   
64023f1d:	int3   
64023f1e:	int3   
64023f1f:	int3   
64023f20:	call   0x6400e160
64023f25:	mov    ds:0x640312b4,eax
64023f2a:	ret    
64023f2b:	int3   
64023f2c:	int3   
64023f2d:	int3   
64023f2e:	int3   
64023f2f:	int3   
64023f30:	call   0x6400e240
64023f35:	mov    ds:0x640312d0,eax
64023f3a:	ret    
64023f3b:	int3   
64023f3c:	int3   
64023f3d:	int3   
64023f3e:	int3   
64023f3f:	int3   
64023f40:	call   0x6400e320
64023f45:	mov    ds:0x640312cc,eax
64023f4a:	ret    
64023f4b:	int3   
64023f4c:	int3   
64023f4d:	int3   
64023f4e:	int3   
64023f4f:	int3   
64023f50:	call   0x6400e400
64023f55:	mov    ds:0x640312c0,eax
64023f5a:	ret    
64023f5b:	int3   
64023f5c:	int3   
64023f5d:	int3   
64023f5e:	int3   
64023f5f:	int3   
64023f60:	call   0x6400e4e0
64023f65:	mov    ds:0x64031310,eax
64023f6a:	ret    
64023f6b:	int3   
64023f6c:	int3   
64023f6d:	int3   
64023f6e:	int3   
64023f6f:	int3   
64023f70:	call   0x6400e5c0
64023f75:	mov    ds:0x6403131c,eax
64023f7a:	ret    
64023f7b:	int3   
64023f7c:	int3   
64023f7d:	int3   
64023f7e:	int3   
64023f7f:	int3   
64023f80:	call   0x6400e6a0
64023f85:	mov    ds:0x640312a0,eax
64023f8a:	ret    
64023f8b:	int3   
64023f8c:	int3   
64023f8d:	int3   
64023f8e:	int3   
64023f8f:	int3   
64023f90:	call   0x6400e780
64023f95:	mov    ds:0x640312a8,eax
64023f9a:	ret    
64023f9b:	int3   
64023f9c:	int3   
64023f9d:	int3   
64023f9e:	int3   
64023f9f:	int3   
64023fa0:	call   0x6400e860
64023fa5:	mov    ds:0x64031300,eax
64023faa:	ret    
64023fab:	int3   
64023fac:	int3   
64023fad:	int3   
64023fae:	int3   
64023faf:	int3   
64023fb0:	call   0x6400e940
64023fb5:	mov    ds:0x64031314,eax
64023fba:	ret    
64023fbb:	int3   
64023fbc:	int3   
64023fbd:	int3   
64023fbe:	int3   
64023fbf:	int3   
64023fc0:	call   0x6400ea20
64023fc5:	mov    ds:0x640312c4,eax
64023fca:	ret    
64023fcb:	int3   
64023fcc:	int3   
64023fcd:	int3   
64023fce:	int3   
64023fcf:	int3   
64023fd0:	call   0x6400eb00
64023fd5:	mov    ds:0x640312fc,eax
64023fda:	ret    
64023fdb:	int3   
64023fdc:	int3   
64023fdd:	int3   
64023fde:	int3   
64023fdf:	int3   
64023fe0:	call   0x6400ebe0
64023fe5:	mov    ds:0x640312f0,eax
64023fea:	ret    
64023feb:	mov    ecx,0x6402e4cc
64023ff0:	call   0x64011fdd
64023ff5:	push   0x64024161
64023ffa:	call   0x64012cbf
64023fff:	pop    ecx
64024000:	ret    
64024001:	mov    ecx,0x6402e508
64024006:	call   0x64011fb7
6402400b:	push   0x6402416b
64024010:	call   0x64012cbf
64024015:	pop    ecx
64024016:	ret    
64024017:	call   DWORD PTR ds:0x64025108
6402401d:	push   0x64024175
64024022:	mov    DWORD PTR ds:0x6402e534,0x64025c70
6402402c:	mov    ds:0x6402e538,eax
64024031:	mov    BYTE PTR ds:0x6402e53c,0x0
64024038:	call   0x64012cbf
6402403d:	pop    ecx
6402403e:	ret    
6402403f:	push   0x6402e534
64024044:	mov    ecx,0x6402e540
64024049:	call   0x64012150
6402404e:	push   0x6402417f
64024053:	call   0x64012cbf
64024058:	pop    ecx
64024059:	ret    
6402405a:	int3   
6402405b:	int3   
6402405c:	int3   
6402405d:	int3   
6402405e:	int3   
6402405f:	int3   
64024060:	push   0x640241a0
64024065:	call   0x64012cbf
6402406a:	pop    ecx
6402406b:	ret    
6402406c:	int3   
6402406d:	int3   
6402406e:	int3   
6402406f:	int3   
64024070:	mov    eax,0x64031350
64024075:	jmp    0x640065c0
6402407a:	int3   
6402407b:	int3   
6402407c:	int3   
6402407d:	int3   
6402407e:	int3   
6402407f:	int3   
64024080:	mov    eax,0x640314ac
64024085:	jmp    0x640065c0
6402408a:	int3   
6402408b:	int3   
6402408c:	int3   
6402408d:	int3   
6402408e:	int3   
6402408f:	int3   
64024090:	push   ebp
64024091:	mov    ebp,esp
64024093:	and    esp,0xfffffff8
64024096:	mov    eax,ds:0x64031334
6402409b:	mov    edx,DWORD PTR [eax]
6402409d:	sub    esp,0xc
640240a0:	push   esi
640240a1:	push   eax
640240a2:	mov    ecx,0x64031330
640240a7:	push   ecx
640240a8:	push   edx
640240a9:	mov    esi,ecx
640240ab:	push   esi
640240ac:	lea    eax,[esp+0x18]
640240b0:	push   eax
640240b1:	call   0x64007e90
640240b6:	mov    ecx,DWORD PTR ds:0x64031334
640240bc:	push   ecx
640240bd:	call   0x64012332
640240c2:	add    esp,0x4
640240c5:	xor    eax,eax
640240c7:	mov    ds:0x64031334,eax
640240cc:	mov    ds:0x64031338,eax
640240d1:	pop    esi
640240d2:	mov    esp,ebp
640240d4:	pop    ebp
640240d5:	ret    
640240d6:	int3   
640240d7:	int3   
640240d8:	int3   
640240d9:	int3   
640240da:	int3   
640240db:	int3   
640240dc:	int3   
640240dd:	int3   
640240de:	int3   
640240df:	int3   
640240e0:	push   ebp
640240e1:	mov    ebp,esp
640240e3:	and    esp,0xfffffff8
640240e6:	mov    eax,ds:0x64031328
640240eb:	mov    edx,DWORD PTR [eax]
640240ed:	sub    esp,0xc
640240f0:	push   esi
640240f1:	push   eax
640240f2:	mov    ecx,0x64031324
640240f7:	push   ecx
640240f8:	push   edx
640240f9:	mov    esi,ecx
640240fb:	push   esi
640240fc:	lea    eax,[esp+0x18]
64024100:	push   eax
64024101:	call   0x64007c30
64024106:	mov    ecx,DWORD PTR ds:0x64031328
6402410c:	push   ecx
6402410d:	call   0x64012332
64024112:	add    esp,0x4
64024115:	xor    eax,eax
64024117:	mov    ds:0x64031328,eax
6402411c:	mov    ds:0x6403132c,eax
64024121:	pop    esi
64024122:	mov    esp,ebp
64024124:	pop    ebp
64024125:	ret    
64024126:	int3   
64024127:	int3   
64024128:	int3   
64024129:	int3   
6402412a:	int3   
6402412b:	int3   
6402412c:	int3   
6402412d:	int3   
6402412e:	int3   
6402412f:	int3   
64024130:	mov    eax,ds:0x6402e4bc
64024135:	test   eax,eax
64024137:	je     0x64024142
64024139:	push   eax
6402413a:	call   0x64012332
6402413f:	add    esp,0x4
64024142:	mov    DWORD PTR ds:0x6402e4bc,0x0
6402414c:	mov    DWORD PTR ds:0x6402e4c0,0x0
64024156:	mov    DWORD PTR ds:0x6402e4c4,0x0
64024160:	ret    
64024161:	mov    ecx,0x6402e4cc
64024166:	jmp    0x64011f4b
6402416b:	mov    ecx,0x6402e508
64024170:	jmp    0x6401208c
64024175:	mov    ecx,0x6402e534
6402417a:	jmp    0x640120a4
6402417f:	mov    DWORD PTR ds:0x6402e540,0x64025c84
64024189:	ret    
6402418a:	mov    DWORD PTR ds:0x6402e560,0x64025304
64024194:	mov    ecx,0x6402e560
64024199:	jmp    0x6401244b
6402419e:	int3   
6402419f:	int3   
640241a0:	push   0x6402e030
640241a5:	call   DWORD PTR ds:0x6402519c
640241ab:	ret    
